__author__ = 'dima'

from rggraphenv import symbolic_functions as sf
import swiginac
sin = swiginac.sin
cos = swiginac.cos
Pi = sf.Pi

sp2, k0, k1, a0, w1 = sf.var("sp2 k0 k1 a0 w1")


q=(-1+k0)**(-3)*sin(w1*Pi**(-1))**2*(145320*k0**7*k1**2*a0**3-5400*k0**13*k1**3*a0**3-27*sp2*k0**14*k1**6*a0**2+95400*sp2*k0**7*k1**4*a0**2+19776*k0**3*k1**3*a0+27*sp2*k0**14*k1*a0**2-3008*sp2*k0**12*k1**5-16016*sp2*k0**11*k1**4-208*sp2*k0**2*k1**5-8844*sp2*k0**9*k1**6+2140*k0**12*k1**6*a0+6*sp2**3*k0**14*k1**5-3264*k0**13*k1**2*a0+339840*k0**7*k1**3*a0-6420*k0**12*k1*a0+6*k1**5*a0**3+2460*sp2*k0**3*k1**4*a0**2+6540*k0**3*k1**2*a0**3+26400*sp2*k0**8*k1**2+53298*k0**4*k1**4*a0+76170*sp2*k0**10*k1**3*a0**2-1140*k0**2*k1*a0-11688*k0**5*k1**6*a0+123560*k0**9*k1**5*a0+380*k0**2*k1**6*a0+35064*k0**5*k1*a0+58500*sp2*k0**8*k1**5*a0**2-66*sp2**3*k0**13*k1**5-35574*sp2*k0**6*k1**3+9900*sp2*k0**4*k1**3*a0**2+160482*k0**10*k1**4*a0-11291*k0**8*a0**3+22*sp2*k0*k1**3-12*sp2**2*k0**14*k1**2*a0+14085*sp2*k0**5*k1**2*a0**2+51630*k0**5*k1**4*a0**3-1409*k0**4*k1**6*a0**3+4888*sp2*k0**12*k1**4-110*sp2**3*k0**5*k1**3+8454*k0**4*k1*a0**3-16512*sp2**2*k0**7*k1**3*a0+128*sp2**2*k0**13*k1**2*a0-195*sp2*k0**2*k1**2*a0**2-21432*k0**11*k1**5*a0**3-1455*k0**2*k1**4*a0**3-624*sp2**2*k0**12*k1**6*a0-192*sp2**2*k0**3*k1**3*a0-6*sp2**3*k0**14*k1**4-7051*k0**10*k1**6*a0**3-616*sp2*k0**4*k1+338*sp2*k0**2*k1**4+9856*sp2*k0**11*k1**5+5500*sp2*k0**10*k1**6+2*sp2**3*k0**3*k1**6+42306*k0**10*k1*a0**3+288*k0**14*k1**2*a0+9688*k0**7*a0**3+66*sp2**3*k0**13*k1**4-21960*sp2**2*k0**10*k1**4*a0-4*sp2**2*k0**2*k1**6*a0+279*sp2*k0**13*k1**6*a0**2-23760*sp2*k0**7*k1**2-18765*k0**12*k1**4*a0**3-6630*sp2*k0**12*k1**2*a0**2-20736*sp2**2*k0**9*k1**5*a0+540*k0**14*k1**3*a0**3-5844*k0**5*a0-1632*sp2**2*k0**4*k1**4*a0+960*sp2**2*k0**5*k1**6*a0-279*sp2*k0**13*k1*a0**2+130420*k0**6*k1**3*a0**3+16170*sp2*k0**6*k1**2-10*sp2*k0*k1**2-448*k0*k1**2*a0-47700*sp2*k0**7*k1**5*a0**2-1230*sp2*k0**3*k1**5*a0**2-15*k1**4*a0**3+14*k0*a0**3-22000*sp2*k0**10*k1**5-6*sp2**3*k0**3*k1**5-58080*sp2*k0**8*k1**3+165216*k0**6*k1**2*a0-280*k0*k1**3*a0**3-6521*k0**6*a0**3-57486*sp2*k0**9*k1**4-2464*sp2*k0**11*k1**6-117000*sp2*k0**8*k1**4*a0**2-169365*k0**8*k1**2*a0**3-259476*k0**9*k1**4*a0-6896*k0**11*k1**6*a0+20688*k0**11*k1*a0-25380*k0**4*k1**5*a0-109170*sp2*k0**9*k1**3*a0**2-361872*k0**8*k1**3*a0-76420*k0**10*k1**5*a0+19230*sp2*k0**11*k1**2*a0**2+10226*k0**9*k1**6*a0**3+582*k0**2*k1**5*a0**3+53580*k0**11*k1**4*a0**3+752*sp2*k0**12*k1**6+52272*sp2*k0**7*k1**3+22*sp2**3*k0**4*k1**3-61356*k0**9*k1*a0**3-2340*sp2**2*k0**6*k1**2*a0-20652*k0**5*k1**5*a0**3+6*sp2**3*k0**3*k1**4+35750*sp2*k0**10*k1**4+35376*sp2*k0**9*k1**5+1650*sp2*k0**5*k1+52*sp2*k0**2*k1**6-2*sp2**3*k0**14*k1**6+14640*sp2**2*k0**10*k1**5*a0+22*sp2**3*k0**13*k1**6-3*sp2*k0*k1*a0**2+3*sp2*k0*k1**6*a0**2+21504*sp2**2*k0**8*k1**3*a0-5949*sp2*k0**6*k1**6*a0**2+1088*sp2**2*k0**4*k1**5*a0+4*k1**6*a0-12*k1*a0+2538*k0**4*a0+7506*k0**12*k1**5*a0**3+1840*sp2**2*k0**11*k1**6*a0+5949*sp2*k0**6*k1*a0**2+31104*sp2**2*k0**9*k1**4*a0+246*sp2*k0**3*k1**6*a0**2-432*k0**14*k1**3*a0+22470*k0**12*k1**4*a0-140*sp2*k0**13*k1**6+3442*k0**5*a0**3-246*sp2*k0**3*k1*a0**2-14160*k0**7*a0-9540*sp2*k0**7*k1*a0**2-8250*sp2*k0**5*k1**2+9540*sp2*k0**7*k1**6*a0**2-270*sp2*k0**14*k1**4*a0**2-405*k0**14*k1**2*a0**3+13260*sp2*k0**12*k1**3*a0**2+390*sp2*k0**2*k1**3*a0**2-512*sp2**2*k0**13*k1**3*a0+4128*sp2**2*k0**7*k1**2*a0-45852*k0**10*k1*a0+15284*k0**10*k1**6*a0-28170*sp2*k0**5*k1**3*a0**2-660*sp2**3*k0**7*k1**3-6776*sp2*k0**4*k1**3-110*sp2**3*k0**12*k1**6-15228*k0**4*k1*a0-2772*sp2**3*k0**9*k1**5+34480*k0**11*k1**5*a0+3990*k0**2*k1**4*a0+12*sp2*k0**14*k1**6-122724*k0**5*k1**4*a0-2080*sp2*k0**3*k1**4+5076*k0**4*k1**6*a0-1980*sp2**3*k0**10*k1**4+48*sp2**2*k0**3*k1**2*a0+15078*k0**8*a0+2*sp2*k0*k1-3234*sp2*k0**6*k1-105765*k0**10*k1**4*a0**3-38085*sp2*k0**10*k1**2*a0**2-3744*sp2**2*k0**12*k1**4*a0-97*k0**2*k1**6*a0**3-20652*k0**5*k1*a0**3+48*sp2**2*k0**14*k1**3*a0-61356*k0**9*k1**5*a0**3-21135*k0**4*k1**4*a0**3-4950*sp2*k0**4*k1**2*a0**2+582*k0**2*k1*a0**3+3442*k0**5*k1**6*a0**3+29745*sp2*k0**6*k1**5*a0**2+5760*sp2**2*k0**5*k1**4*a0+7506*k0**12*k1*a0**3-13184*k0**3*k1**2*a0-272*sp2**2*k0**4*k1**6*a0-20*k1**5*a0+4050*k0**13*k1**2*a0**3-193760*k0**7*k1**3*a0**3-1251*k0**12*k1**6*a0**3+2790*sp2*k0**13*k1**4*a0**2-24*sp2**2*k0**2*k1**4*a0-7360*sp2**2*k0**11*k1**5*a0-3660*sp2**2*k0**10*k1**6*a0-8720*k0**3*k1**3*a0**3+330*sp2**3*k0**11*k1**6+2772*sp2**3*k0**9*k1**4+1980*sp2**3*k0**10*k1**5-15*sp2*k0*k1**5*a0**2-226560*k0**7*k1**2*a0+4896*k0**13*k1**3*a0+1280*sp2*k0**3*k1**5+924*sp2**3*k0**8*k1**3-910*sp2*k0**13*k1**4+6*k1*a0**3-1409*k0**4*a0**3-5376*sp2**2*k0**8*k1**2*a0-10700*k0**12*k1**5*a0-k1**6*a0**3+135*sp2*k0**14*k1**5*a0**2+3080*sp2*k0**4*k1**2-a0**3-330*sp2**3*k0**12*k1**4+9360*sp2**2*k0**6*k1**3*a0+18150*sp2*k0**5*k1**3-38460*sp2*k0**11*k1**3*a0**2-660*sp2**3*k0**10*k1**6+11700*sp2*k0**8*k1*a0**2-320*sp2*k0**3*k1**6+58440*k0**5*k1**5*a0+74136*k0**9*k1*a0-1900*k0**2*k1**5*a0-72408*k0**11*k1**4*a0-24712*k0**9*k1**6*a0+78*sp2*k0**14*k1**4+4752*sp2*k0**7*k1-11700*sp2*k0**8*k1**6*a0**2-990*sp2**3*k0**11*k1**5+42306*k0**10*k1**5*a0**3+560*sp2*k0**13*k1**5+225820*k0**8*k1**3*a0**3-21432*k0**11*k1*a0**3+8454*k0**4*k1**5*a0**3+330*sp2**3*k0**6*k1**3+241248*k0**8*k1**2*a0+3572*k0**11*k1**6*a0**3+54585*sp2*k0**9*k1**2*a0**2+2496*sp2**2*k0**12*k1**5*a0+153390*k0**9*k1**4*a0**3+672*k0*k1**3*a0+5184*sp2**2*k0**9*k1**6*a0+11040*sp2**2*k0**11*k1**4*a0+16*sp2**2*k0**2*k1**5*a0-1395*sp2*k0**13*k1**5*a0**2+10326*k0**6*a0+330*sp2**3*k0**12*k1**5+42*k1**4*a0-28*k0*a0-5280*sp2*k0**8*k1-97815*k0**6*k1**2*a0**3-3840*sp2**2*k0**5*k1**5*a0-59490*sp2*k0**6*k1**4*a0**2+30*sp2*k0*k1**4*a0**2+210*k0*k1**2*a0**3+924*sp2**3*k0**9*k1**6+990*sp2**3*k0**11*k1**4-247824*k0**6*k1**3*a0-48*sp2*k0**14*k1**5-924*sp2**3*k0**8*k1**6-7360*sp2**2*k0**11*k1**3*a0-588*k0*k1**4*a0-58128*k0**7*k1**5*a0**3+59490*sp2*k0**6*k1**3*a0**2-330*sp2**3*k0**11*k1**3-48*k1**3*a0+2040*k0**13*k1**5*a0-30*sp2*k0*k1**3*a0**2+13200*sp2*k0**5*k1**5-5376*sp2**2*k0**8*k1**6*a0+4422*sp2*k0**9*k1-2616*k0**3*k1**5*a0**3-15*k1**2*a0**3+216846*k0**6*k1**4*a0-169365*k0**8*k1**4*a0**3-58500*sp2*k0**8*k1**2*a0**2-990*sp2**3*k0**6*k1**4-197696*k0**9*k1**2*a0-3448*k0**11*a0+48*sp2**2*k0**14*k1**5*a0-204520*k0**9*k1**3*a0**3-90468*k0**8*k1*a0-10917*sp2*k0**9*k1*a0**2-14085*sp2*k0**5*k1**5*a0**2-14040*sp2**2*k0**6*k1**4*a0+10917*sp2*k0**9*k1**6*a0**2-66*sp2*k0**14*k1**3+53580*k0**11*k1**2*a0**3+38460*sp2*k0**11*k1**4*a0**2+195*sp2*k0**2*k1**5*a0**2-512*sp2**2*k0**13*k1**5*a0+30156*k0**8*k1**6*a0-21450*sp2*k0**5*k1**4+1232*sp2*k0**4*k1**6+660*sp2**3*k0**7*k1**6+110*sp2**3*k0**12*k1**3-2750*sp2*k0**10*k1+82752*k0**11*k1**3*a0-180*k0**14*k1**5*a0+14*k0*k1**6*a0**3+436*k0**3*a0**3+990*sp2**3*k0**6*k1**5+1070*k0**12*a0-84*k0*k1*a0**3+770*sp2*k0**13*k1**3+190*k0**2*a0+6630*sp2*k0**12*k1**5*a0**2+39126*k0**6*k1*a0**3+5184*sp2**2*k0**9*k1**2*a0-6521*k0**6*k1**6*a0**3-800*sp2*k0**3*k1**2-3840*sp2**2*k0**5*k1**3*a0-924*sp2**3*k0**9*k1**3+162*k0**14*k1*a0**3+47700*sp2*k0**7*k1**2*a0**2+16*sp2**2*k0**2*k1**3*a0-2790*sp2*k0**13*k1**3*a0**2-27*k0**14*k1**6*a0**3+145320*k0**7*k1**4*a0**3+280*k0*k1**5*a0-2772*sp2**3*k0**8*k1**4-103260*k0**6*k1**5*a0+6540*k0**3*k1**4*a0**3+1230*sp2*k0**3*k1**2*a0**2+1232*sp2*k0**11*k1-4928*sp2*k0**4*k1**5-1980*sp2**3*k0**7*k1**5-4284*k0**13*k1**4*a0-330*sp2**3*k0**6*k1**6+67746*k0**8*k1**5*a0**3+40608*k0**4*k1**2*a0+48*sp2**2*k0**3*k1**6*a0+141020*k0**10*k1**3*a0**3-72*sp2**2*k0**14*k1**4*a0+4128*sp2**2*k0**7*k1**6*a0+2496*sp2**2*k0**12*k1**3*a0-12356*k0**9*a0+122272*k0**10*k1**2*a0+28180*k0**4*k1**3*a0**3-376*sp2*k0**12*k1+990*sp2*k0**4*k1*a0**2-1455*k0**2*k1**2*a0**3+768*sp2**2*k0**13*k1**4*a0-390*sp2*k0**2*k1**4*a0**2-19230*sp2*k0**11*k1**5*a0**2-350*sp2*k0**13*k1**2+51630*k0**5*k1**2*a0**3+1760*sp2*k0**3*k1**3+2772*sp2**3*k0**8*k1**5+9360*sp2**2*k0**6*k1**5*a0+28170*sp2*k0**5*k1**4*a0**2+660*sp2**3*k0**10*k1**3-990*sp2*k0**4*k1**6*a0**2-4560*k0**2*k1**3*a0+7617*sp2*k0**10*k1*a0**2-7617*sp2*k0**10*k1**6*a0**2+270*k0**13*a0**3+1980*sp2**3*k0**7*k1**4+8008*sp2*k0**4*k1**4-3300*sp2*k0**5*k1**6-26*sp2*k0**2*k1+140256*k0**5*k1**3*a0+84960*k0**7*k1*a0-27*k0**14*a0**3-3660*sp2**2*k0**10*k1**2*a0-25680*k0**12*k1**3*a0-28320*k0**7*k1**6*a0+378*k0**14*k1**4*a0-1648*k0**3*k1**6*a0-272*sp2**2*k0**4*k1**2*a0+7642*k0**10*a0-1620*k0**13*k1*a0**3+270*k0**13*k1**6*a0**3-13260*sp2*k0**12*k1**4*a0**2-18765*k0**12*k1**2*a0**3+270*sp2*k0**14*k1**3*a0**2+4944*k0**3*k1*a0+30*sp2*k0**14*k1**2+20652*k0**6*k1**6*a0-97*k0**2*a0**3-32256*sp2**2*k0**8*k1**4*a0+70*sp2*k0**13*k1+1880*sp2*k0**12*k1**2-61956*k0**6*k1*a0+130*sp2*k0**2*k1**2+168*k0*k1*a0-1251*k0**12*a0**3-20736*sp2**2*k0**9*k1**3*a0+162*k0**14*k1**5*a0**3-56*k0*k1**6*a0-824*k0**3*a0-2*sp2**3*k0**3*k1**3-42240*sp2*k0**8*k1**5-30250*sp2*k0**10*k1**3-71440*k0**11*k1**3*a0**3-16512*sp2**2*k0**7*k1**5*a0-6*sp2*k0**14*k1-55168*k0**11*k1**2*a0-61776*sp2*k0**7*k1**4-66*sp2**3*k0**4*k1**4-11291*k0**8*k1**6*a0**3+110*sp2**3*k0**5*k1**6-192*sp2**2*k0**3*k1**5*a0+67746*k0**8*k1*a0**3-4*sp2*k0*k1**6+296544*k0**9*k1**3*a0+117000*sp2*k0**8*k1**3*a0**2+38085*sp2*k0**10*k1**5*a0**2+6468*sp2*k0**6*k1**6+3572*k0**11*a0**3+316638*k0**8*k1**4*a0+153390*k0**9*k1**2*a0**3+3846*sp2*k0**11*k1**6*a0**2-6160*sp2*k0**11*k1**2+109170*sp2*k0**9*k1**4*a0**2-3846*sp2*k0**11*k1*a0**2-2340*sp2**2*k0**6*k1**6*a0+4950*sp2*k0**4*k1**5*a0**2+32*k1**2*a0+8240*k0**3*k1**5*a0-29745*sp2*k0**6*k1**2*a0**2+68640*sp2*k0**8*k1**4-97815*k0**6*k1**4*a0**3+1840*sp2**2*k0**11*k1**2*a0-1620*k0**13*k1**5*a0**3+48642*sp2*k0**9*k1**3+66*sp2**3*k0**4*k1**5+38016*sp2*k0**7*k1**5+20*k1**3*a0**3+141600*k0**7*k1**5*a0+210*k0*k1**4*a0**3+15*sp2*k0*k1**2*a0**2+17120*k0**12*k1**2*a0-408*k0**13*k1**6*a0-25872*sp2*k0**6*k1**5+21504*sp2**2*k0**8*k1**5*a0-2616*k0**3*k1*a0**3+16*sp2*k0*k1**5-7051*k0**10*a0**3+14640*sp2**2*k0**10*k1**3*a0+436*k0**3*k1**6*a0**3+2*a0+1224*k0**13*k1*a0+13750*sp2*k0**10*k1**2+9688*k0**7*k1**6*a0**3-405*k0**14*k1**4*a0**3-135*sp2*k0**14*k1**2*a0**2+25020*k0**12*k1**3*a0**3-22*sp2**3*k0**13*k1**3-58128*k0**7*k1*a0**3+1088*sp2**2*k0**4*k1**3*a0+18*k0**14*a0+2*sp2**3*k0**14*k1**3-68840*k0**5*k1**3*a0**3-286*sp2*k0**2*k1**3-204*k0**13*a0+1940*k0**2*k1**3*a0**3+24768*sp2**2*k0**7*k1**4*a0-12*sp2**2*k0**14*k1**6*a0+160*sp2*k0**3*k1-93504*k0**5*k1**2*a0+288*sp2**2*k0**3*k1**4*a0+330*sp2**3*k0**5*k1**4-4136*sp2*k0**12*k1**3-22*sp2**3*k0**4*k1**6-9504*sp2*k0**7*k1**6+3040*k0**2*k1**2*a0+10226*k0**9*a0**3+42042*sp2*k0**6*k1**4-60912*k0**4*k1**3*a0-76170*sp2*k0**10*k1**4*a0**2-105765*k0**10*k1**2*a0**3-26*sp2*k0*k1**4-9900*sp2*k0**4*k1**4*a0**2-183408*k0**10*k1**3*a0-21135*k0**4*k1**2*a0**3+39*sp2*k0**2*k1*a0**2+2817*sp2*k0**5*k1**6*a0**2-39*sp2*k0**2*k1**6*a0**2-2817*sp2*k0**5*k1*a0**2+128*sp2**2*k0**13*k1**6*a0-54585*sp2*k0**9*k1**5*a0**2-624*sp2**2*k0**12*k1**2*a0-22110*sp2*k0**9*k1**2-150780*k0**8*k1**5*a0+13552*sp2*k0**11*k1**3+1395*sp2*k0**13*k1**2*a0**2-4*sp2**2*k0**2*k1**2*a0-95400*sp2*k0**7*k1**3*a0**2-1326*sp2*k0**12*k1**6*a0**2+4050*k0**13*k1**4*a0**3+960*sp2**2*k0**5*k1**2*a0+10560*sp2*k0**8*k1**6+39126*k0**6*k1**5*a0**3+1326*sp2*k0**12*k1*a0**2-17304*k0**3*k1**4*a0+36*k0**14*k1**6*a0-84*k0*k1**5*a0**3-297360*k0**7*k1**4*a0-2460*sp2*k0**3*k1**3*a0**2-108*k0**14*k1*a0-330*sp2**3*k0**5*k1**5)*k0**3*(-1+a0)**2*(-2+2*k0*a0**2-8*k0*k1-4*k1**2-a0**2-2*sp2*k0*k1*a0+2*k1*a0**2+2*k0*k1**2*a0**2-2*sp2*k0**2*k1**2*a0+8*k0*k1**2+6*k0**2*k1*a0**2-4*k0**2*k1**2-2*k0**2+4*k0+2*sp2*k0**2*k1*a0-3*k0**2*k1**2*a0**2-k1**2*a0**2+2*sp2*k0*k1**2*a0-4*k0*k1*a0**2+4*k1-3*k0**2*a0**2+4*k0**2*k1)**(-4)*k1**3*(-1+k1)**(-3)*(1+2*k0**2-2*k0)**(-4)


# q = q.simplify_indexed().normal()

print q.subs(k1==0)