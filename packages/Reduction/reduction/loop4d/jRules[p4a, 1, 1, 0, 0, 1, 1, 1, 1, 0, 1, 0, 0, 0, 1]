{j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; 
    !(n6 == 1 || n9 == 0) -> 
  (n13*j[p4a, -1 + n1, n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 
      n12, 1 + n13, n14])/(-1 + n6) + 
   (n5*j[p4a, -1 + n1, n2, n3, n4, 1 + n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 
      n12, n13, n14])/(-1 + n6) + 
   (n4*j[p4a, -1 + n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 
      n12, n13, n14])/(-1 + n6) + 
   (n3*j[p4a, -1 + n1, n2, 1 + n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 
      n12, n13, n14])/(-1 + n6) + 
   (n12*j[p4a, n1, -1 + n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n6) - 
   (n5*j[p4a, n1, -1 + n2, n3, n4, 1 + n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 
      n12, n13, n14])/(-1 + n6) - 
   (n4*j[p4a, n1, -1 + n2, n3, 1 + n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 
      n12, n13, n14])/(-1 + n6) + 
   (n13*j[p4a, n1, n2, -1 + n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 
      n12, 1 + n13, n14])/(-1 + n6) + 
   (n12*j[p4a, n1, n2, -1 + n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n6) - 
   (n13*j[p4a, n1, n2, n3, n4, n5, -1 + n6, -1 + n7, n8, 1 + n9, n10, n11, 
      n12, 1 + n13, n14])/(-1 + n6) - 
   (2*n12*j[p4a, n1, n2, n3, n4, n5, -1 + n6, -1 + n7, n8, 1 + n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n6) - 
   (n11*j[p4a, n1, n2, n3, n4, n5, -1 + n6, -1 + n7, n8, 1 + n9, n10, 
      1 + n11, n12, n13, n14])/(-1 + n6) - 
   (n13*j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, -1 + n8, 1 + n9, n10, n11, 
      n12, 1 + n13, n14])/(-1 + n6) - 
   (n12*j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, -1 + n8, 1 + n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n6) + 
   (n11*j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, -1 + n10, 
      1 + n11, n12, n13, n14])/(-1 + n6) + 
   (n12*j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n6) + 
   (n13*j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 
      -1 + n12, 1 + n13, n14])/(-1 + n6) + 
   ((-1 - d + n1 + 2*n10 + n11 + n12 - n13 + n3 + n6)*
     j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
      n14])/(-1 + n6) - (n13*j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, n8, 
      1 + n9, n10, n11, n12, 1 + n13, n14])/(-1 + n6) - 
   (n12*j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 
      1 + n12, -1 + n13, n14])/(-1 + n6) - 
   (n12*j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n6) + j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 
    1 + n9, -1 + n10, n11, n12, n13, n14] + 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, -2 + n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, n14])/(-1 + n6) - (n5*j[p4a, n1, n2, n3, n4, 1 + n5, -1 + n6, n7, 
      n8, n9, n10, n11, n12, n13, n14])/(-1 + n6) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, -2 + n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, n14])/(-1 + n6) + (n4*j[p4a, n1, n2, n3, 1 + n4, n5, -1 + n6, 
      -1 + n7, n8, 1 + n9, n10, n11, n12, n13, n14])/(-1 + n6) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, n9, n10, n11, n12, 
      n13, n14])/(-1 + n6) + (n4*j[p4a, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, 
      n8, 1 + n9, -1 + n10, n11, n12, n13, n14])/(-1 + n6) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n6) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, -1 + n6, n7, -1 + n8, 1 + n9, n10, n11, 
      n12, n13, n14])/(-1 + n6) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, -1 + n6, n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n6) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n6) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n6) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n6) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, n14])/(-1 + n6) - (n1*j[p4a, 1 + n1, -1 + n2, n3, n4, n5, -1 + n6, 
      n7, n8, 1 + n9, n10, n11, n12, n13, n14])/(-1 + n6) + 
   (n1*j[p4a, 1 + n1, n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n6), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; 
    !(n11 == 0 || n8 == 1) -> j[p4a, -1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, 
    n10, 1 + n11, n12, n13, n14] + 
   (n4*j[p4a, -1 + n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, 1 + n11, 
      n12, n13, n14])/(-1 + n8) + 
   (n3*j[p4a, -1 + n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, 1 + n11, 
      n12, n13, n14])/(-1 + n8) - 
   (n12*j[p4a, n1, -1 + n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, 1 + n11, 
      1 + n12, n13, n14])/(-1 + n8) + 
   ((-1 - n11)*j[p4a, n1, -1 + n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, 
      2 + n11, n12, n13, n14])/(-1 + n8) - j[p4a, n1, -1 + n2, n3, n4, n5, 
    n6, n7, n8, n9, n10, 1 + n11, n12, n13, n14] - 
   (n7*j[p4a, n1, -1 + n2, n3, n4, n5, n6, 1 + n7, -1 + n8, n9, n10, 1 + n11, 
      n12, n13, n14])/(-1 + n8) - 
   (n4*j[p4a, n1, -1 + n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, 1 + n11, 
      n12, n13, n14])/(-1 + n8) - 
   (n3*j[p4a, n1, -1 + n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, 1 + n11, 
      n12, n13, n14])/(-1 + n8) - 
   (n12*j[p4a, n1, n2, n3, -1 + n4, n5, n6, n7, -1 + n8, n9, n10, 1 + n11, 
      1 + n12, n13, n14])/(-1 + n8) + 
   ((-1 - n11)*j[p4a, n1, n2, n3, -1 + n4, n5, n6, n7, -1 + n8, n9, n10, 
      2 + n11, n12, n13, n14])/(-1 + n8) - j[p4a, n1, n2, n3, -1 + n4, n5, 
    n6, n7, n8, n9, n10, 1 + n11, n12, n13, n14] - 
   (n7*j[p4a, n1, n2, n3, -1 + n4, n5, n6, 1 + n7, -1 + n8, n9, n10, 1 + n11, 
      n12, n13, n14])/(-1 + n8) + 
   (n12*j[p4a, n1, n2, n3, n4, -1 + n5, n6, n7, -1 + n8, n9, n10, 1 + n11, 
      1 + n12, n13, n14])/(-1 + n8) + 
   ((1 + n11)*j[p4a, n1, n2, n3, n4, -1 + n5, n6, n7, -1 + n8, n9, n10, 
      2 + n11, n12, n13, n14])/(-1 + n8) + 
   (n7*j[p4a, n1, n2, n3, n4, -1 + n5, n6, 1 + n7, -1 + n8, n9, n10, 1 + n11, 
      n12, n13, n14])/(-1 + n8) + 
   (n12*j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, -1 + n8, n9, n10, 1 + n11, 
      1 + n12, n13, n14])/(-1 + n8) + 
   ((1 + n11)*j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, -1 + n8, n9, n10, 
      2 + n11, n12, n13, n14])/(-1 + n8) + j[p4a, n1, n2, n3, n4, n5, 
    -1 + n6, n7, n8, n9, n10, 1 + n11, n12, n13, n14] + 
   (n12*j[p4a, n1, n2, n3, n4, n5, n6, -1 + n7, -1 + n8, n9, n10, 1 + n11, 
      1 + n12, n13, n14])/(-1 + n8) + 
   ((1 + n11)*j[p4a, n1, n2, n3, n4, n5, n6, -1 + n7, -1 + n8, n9, n10, 
      2 + n11, n12, n13, n14])/(-1 + n8) + j[p4a, n1, n2, n3, n4, n5, n6, 
    -1 + n7, n8, n9, n10, 1 + n11, n12, n13, n14] + 
   (n12*j[p4a, n1, n2, n3, n4, n5, n6, n7, -2 + n8, n9, n10, 1 + n11, 
      1 + n12, n13, n14])/(-1 + n8) + 
   ((1 + n11)*j[p4a, n1, n2, n3, n4, n5, n6, n7, -2 + n8, n9, n10, 2 + n11, 
      n12, n13, n14])/(-1 + n8) + 
   ((-1 - n11)*j[p4a, n1, n2, n3, n4, n5, n6, n7, -1 + n8, -1 + n9, n10, 
      2 + n11, n12, n13, n14])/(-1 + n8) - 
   (n12*j[p4a, n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      n13, n14])/(-1 + n8) + ((-2 - n11 - n4 + n7 + n8)*
     j[p4a, n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, 1 + n11, n12, n13, 
      n14])/(-1 + n8) - (n12*j[p4a, n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, 
      n10, 1 + n11, 1 + n12, n13, -1 + n14])/(-1 + n8) + 
   (n12*j[p4a, n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, 1 + n11, 
      1 + n12, n13, n14])/(-1 + n8) + 
   (n7*j[p4a, n1, n2, n3, n4, n5, n6, 1 + n7, -2 + n8, n9, n10, 1 + n11, n12, 
      n13, n14])/(-1 + n8) + (n7*j[p4a, n1, n2, n3, n4, n5, n6, 1 + n7, 
      -1 + n8, n9, -1 + n10, 1 + n11, n12, n13, n14])/(-1 + n8) - 
   (n7*j[p4a, n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, n9, n10, n11, n12, 
      n13, n14])/(-1 + n8) + (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, 
      -1 + n8, n9, n10, 1 + n11, n12, n13, n14])/(-1 + n8) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, -2 + n8, n9, n10, 1 + n11, n12, 
      n13, n14])/(-1 + n8) - (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, 
      -1 + n8, -1 + n9, n10, 1 + n11, n12, n13, n14])/(-1 + n8) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, -1 + n10, 1 + n11, 
      n12, n13, n14])/(-1 + n8) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      n13, n14])/(-1 + n8) - (n3*j[p4a, n1, n2, 1 + n3, -1 + n4, n5, n6, n7, 
      -1 + n8, n9, n10, 1 + n11, n12, n13, n14])/(-1 + n8) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, -1 + n8, n9, n10, 1 + n11, 
      n12, n13, n14])/(-1 + n8) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, -2 + n8, n9, n10, 1 + n11, n12, 
      n13, n14])/(-1 + n8) + (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, 
      -1 + n8, n9, -1 + n10, 1 + n11, n12, n13, n14])/(-1 + n8) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      n13, n14])/(-1 + n8) + (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, 
      -1 + n8, n9, n10, 1 + n11, n12, n13, -1 + n14])/(-1 + n8) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, 1 + n11, n12, 
      n13, n14])/(-1 + n8), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; 
    !(n11 == 0 || n7 == 1) -> 
  (n4*j[p4a, -1 + n1, n2, n3, 1 + n4, n5, n6, -1 + n7, n8, n9, n10, 1 + n11, 
      n12, n13, n14])/(-1 + n7) + 
   (n3*j[p4a, -1 + n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, n10, 1 + n11, 
      n12, n13, n14])/(-1 + n7) - 
   (n2*j[p4a, -1 + n1, 1 + n2, n3, n4, n5, n6, -1 + n7, n8, n9, n10, 1 + n11, 
      n12, n13, n14])/(-1 + n7) - 
   (n4*j[p4a, n1, -1 + n2, n3, 1 + n4, n5, n6, -1 + n7, n8, n9, n10, 1 + n11, 
      n12, n13, n14])/(-1 + n7) + ((-1 - d + 2*n10 + n2 + n3 + n6 + n7)*
     j[p4a, n1, n2, n3, n4, n5, n6, -1 + n7, n8, n9, n10, 1 + n11, n12, n13, 
      n14])/(-1 + n7) + j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, n9, -1 + n10, 
    1 + n11, n12, n13, n14] - (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, -1 + n7, 
      n8, -1 + n9, n10, 1 + n11, n12, n13, n14])/(-1 + n7) + 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, -1 + n7, n8, n9, -1 + n10, 1 + n11, 
      n12, n13, n14])/(-1 + n7) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, -1 + n6, -1 + n7, n8, n9, n10, 1 + n11, 
      n12, n13, n14])/(-1 + n7) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, -2 + n7, n8, n9, n10, 1 + n11, n12, 
      n13, n14])/(-1 + n7) - (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, 
      n8, -1 + n9, n10, 1 + n11, n12, n13, n14])/(-1 + n7) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, n8, n9, -1 + n10, 1 + n11, 
      n12, n13, n14])/(-1 + n7) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      n13, n14])/(-1 + n7) - (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, 
      -1 + n8, n9, n10, 1 + n11, n12, n13, n14])/(-1 + n7) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, -1 + n10, 1 + n11, 
      n12, n13, n14])/(-1 + n7) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      n13, n14])/(-1 + n7) + (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, 
      n8, n9, n10, 1 + n11, -1 + n12, n13, n14])/(-1 + n7) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, n10, 1 + n11, n12, 
      -1 + n13, n14])/(-1 + n7) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, n10, 1 + n11, n12, 
      n13, n14])/(-1 + n7) + (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, -1 + n7, 
      n8, n9, -1 + n10, 1 + n11, n12, n13, n14])/(-1 + n7), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; 
    !(n14 == 1 || n9 == 0) -> 
  (n5*j[p4a, -1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n4*j[p4a, -1 + n1, n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, n1, -1 + n2, n3, n4, n5, 1 + n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4a, n1, -1 + n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, n1, n2, -1 + n3, n4, n5, 1 + n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   ((-2 + n14 - n9)*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) + j[p4a, n1, n2, n3, n4, n5, n6, n7, 
    n8, 1 + n9, n10, n11, n12, n13, n14] + 
   ((1 + n9)*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 2 + n9, n10, n11, n12, 
      n13, -2 + n14])/(-1 + n14) + 
   ((-1 - n9)*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 2 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, -1 + n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, -1 + n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) + (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 
      1 + n9, -1 + n10, n11, n12, n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 1 + n9, n10, n11, -1 + n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 1 + n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14) - (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, 
      n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) - 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n14) + 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14) + (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, 
      n8, 1 + n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) + (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, 
      1 + n9, -1 + n10, n11, n12, n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; n5 != 1 -> 
  (n12*j[p4a, n1, n2, n3, n4, -1 + n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      n13, n14])/(-1 + n5) + (n3*j[p4a, n1, n2, 1 + n3, n4, -1 + n5, n6, n7, 
      n8, n9, n10, n11, n12, n13, n14])/(-1 + n5) + 
   (n13*j[p4a, n1, 1 + n2, -1 + n3, n4, -1 + n5, n6, n7, n8, n9, n10, n11, 
      n12, 1 + n13, n14])/(-1 + n5) + 
   (n12*j[p4a, n1, 1 + n2, -1 + n3, n4, -1 + n5, n6, n7, n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n5) - 
   (n13*j[p4a, n1, 1 + n2, n3, n4, -1 + n5, n6, -1 + n7, n8, n9, n10, n11, 
      n12, 1 + n13, n14])/(-1 + n5) - 
   (2*n12*j[p4a, n1, 1 + n2, n3, n4, -1 + n5, n6, -1 + n7, n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n5) - 
   (n11*j[p4a, n1, 1 + n2, n3, n4, -1 + n5, n6, -1 + n7, n8, n9, n10, 
      1 + n11, n12, n13, n14])/(-1 + n5) - 
   (n13*j[p4a, n1, 1 + n2, n3, n4, -1 + n5, n6, n7, -1 + n8, n9, n10, n11, 
      n12, 1 + n13, n14])/(-1 + n5) - 
   (n12*j[p4a, n1, 1 + n2, n3, n4, -1 + n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n5) + 
   (n11*j[p4a, n1, 1 + n2, n3, n4, -1 + n5, n6, n7, n8, n9, -1 + n10, 
      1 + n11, n12, n13, n14])/(-1 + n5) + 
   (n13*j[p4a, n1, 1 + n2, n3, n4, -1 + n5, n6, n7, n8, n9, n10, n11, 
      -1 + n12, 1 + n13, n14])/(-1 + n5) + 
   ((-1 + 2*d - n1 - n11 - 2*n13 - 2*n2 - n4 - n5 - 2*n7 - 2*n8)*
     j[p4a, n1, 1 + n2, n3, n4, -1 + n5, n6, n7, n8, n9, n10, n11, n12, n13, 
      n14])/(-1 + n5) - (n12*j[p4a, n1, 1 + n2, n3, n4, -1 + n5, n6, n7, n8, 
      n9, n10, n11, 1 + n12, -1 + n13, n14])/(-1 + n5) + 
   j[p4a, n1, 1 + n2, n3, n4, n5, -1 + n6, n7, n8, n9, n10, n11, n12, n13, 
    n14] + (n4*j[p4a, n1, 1 + n2, n3, 1 + n4, -1 + n5, -1 + n6, n7, n8, n9, 
      n10, n11, n12, n13, n14])/(-1 + n5) - 
   (n4*j[p4a, n1, 1 + n2, n3, 1 + n4, -1 + n5, n6, n7, -1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n5) - 
   (n3*j[p4a, n1, 1 + n2, 1 + n3, n4, -1 + n5, n6, -1 + n7, n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n5) - 
   (2*n3*j[p4a, n1, 1 + n2, 1 + n3, n4, -1 + n5, n6, n7, -1 + n8, n9, n10, 
      n11, n12, n13, n14])/(-1 + n5) + 
   (n3*j[p4a, n1, 1 + n2, 1 + n3, n4, -1 + n5, n6, n7, n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n5) - 
   (n3*j[p4a, n1, 1 + n2, 1 + n3, n4, -1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n5) - 
   (n1*j[p4a, 1 + n1, n2, n3, n4, -1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      n13, n14])/(-1 + n5) + (n1*j[p4a, 1 + n1, 1 + n2, n3, n4, -1 + n5, n6, 
      n7, n8, n9, -1 + n10, n11, n12, n13, n14])/(-1 + n5), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; n7 != 1 -> 
  -((n11*j[p4a, -1 + n1, 1 + n2, n3, n4, n5, n6, -1 + n7, n8, n9, n10, 
       1 + n11, n12, n13, n14])/(-1 + n7)) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      n13, n14])/(-1 + n7) + (n12*j[p4a, n1, 1 + n2, n3, n4, n5, n6, -1 + n7, 
      -1 + n8, n9, n10, n11, 1 + n12, n13, n14])/(-1 + n7) + 
   (n11*j[p4a, n1, 1 + n2, n3, n4, n5, n6, -1 + n7, -1 + n8, n9, n10, 
      1 + n11, n12, n13, n14])/(-1 + n7) + 
   ((-1 - d + n11 + n12 + n4 + n7 + 2*n8)*j[p4a, n1, 1 + n2, n3, n4, n5, n6, 
      -1 + n7, n8, n9, n10, n11, n12, n13, n14])/(-1 + n7) - 
   (n12*j[p4a, n1, 1 + n2, n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, 
      1 + n12, -1 + n13, n14])/(-1 + n7) + j[p4a, n1, 1 + n2, n3, n4, n5, n6, 
    n7, -1 + n8, n9, n10, n11, n12, n13, n14] - 
   (n4*j[p4a, n1, 1 + n2, n3, 1 + n4, n5, -1 + n6, -1 + n7, n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n7) + 
   (n4*j[p4a, n1, 1 + n2, n3, 1 + n4, n5, n6, -1 + n7, -1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n7) + 
   (n3*j[p4a, n1, 1 + n2, 1 + n3, n4, n5, n6, -2 + n7, n8, n9, n10, n11, n12, 
      n13, n14])/(-1 + n7) + (2*n3*j[p4a, n1, 1 + n2, 1 + n3, n4, n5, n6, 
      -1 + n7, -1 + n8, n9, n10, n11, n12, n13, n14])/(-1 + n7) - 
   (n3*j[p4a, n1, 1 + n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n7) + 
   (n3*j[p4a, n1, 1 + n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n7), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; n10 != 1 -> 
  j[p4a, 1 + n1, -1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, 
    n14] + (n7*j[p4a, 1 + n1, -1 + n2, n3, n4, n5, n6, 1 + n7, n8, n9, 
      -1 + n10, n11, n12, n13, n14])/(-1 + n10) + 
   (n6*j[p4a, 1 + n1, -1 + n2, n3, n4, n5, 1 + n6, n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n3*j[p4a, 1 + n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n6*j[p4a, 1 + n1, n2, n3, n4, -1 + n5, 1 + n6, n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + ((-1 - d + n10 + 2*n2 + n3 + n6 + n7)*
     j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, n13, 
      n14])/(-1 + n10) - (n7*j[p4a, 1 + n1, n2, n3, n4, n5, n6, 1 + n7, 
      -1 + n8, n9, -1 + n10, n11, n12, n13, n14])/(-1 + n10) - 
   (n4*j[p4a, 1 + n1, n2, n3, 1 + n4, -1 + n5, n6, n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n4*j[p4a, 1 + n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n4*j[p4a, 1 + n1, n2, n3, 1 + n4, n5, n6, -1 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n4*j[p4a, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (2*n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, -1 + n10, 
      n11, n12, n13, n14])/(-1 + n10) + 
   (n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, 
      -1 + n12, n13, n14])/(-1 + n10) - 
   (2*n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, 
      n12, -1 + n13, n14])/(-1 + n10), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; 
    !(n14 == 1 || n4 == 0) -> 
  (n9*j[p4a, -1 + n1, n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4a, n1, -1 + n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, n1, -1 + n2, n3, 1 + n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + j[p4a, n1, n2, -1 + n3, 1 + n4, n5, n6, 
    n7, n8, n9, n10, n11, n12, n13, n14] - 
   (n6*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   ((-1 - n4)*j[p4a, n1, n2, -1 + n3, 2 + n4, n5, n6, n7, n8, n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) - (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 
      n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) - 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) + (n9*j[p4a, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, 
      n8, 1 + n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) + 
   (n9*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   ((-2 + n14 - n4)*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) + 
   (n9*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, -1 + n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n9*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14) - (n9*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, 
      1 + n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4a, n1, n2, n3, 1 + n4, n5, 1 + n6, -1 + n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (2*n6*j[p4a, n1, n2, n3, 1 + n4, n5, 1 + n6, n7, -1 + n8, n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, n1, n2, n3, 1 + n4, n5, 1 + n6, n7, n8, n9, n10, n11, -1 + n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4a, n1, n2, n3, 1 + n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4a, n1, n2, n3, 1 + n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14) + (n5*j[p4a, n1, n2, n3, 1 + n4, 1 + n5, n6, 
      -1 + n7, n8, n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) - 
   (n5*j[p4a, n1, n2, n3, 1 + n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n14) + 
   (n5*j[p4a, n1, n2, n3, 1 + n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14) + ((1 + n4)*j[p4a, n1, n2, n3, 2 + n4, n5, n6, 
      n7, n8, n9, n10, n11, n12, n13, -2 + n14])/(-1 + n14), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; 
    !(n4 == 0 || n5 == 1) -> 
  (n8*j[p4a, n1, -1 + n2, n3, 1 + n4, -1 + n5, n6, n7, 1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n5) - 
   (n13*j[p4a, n1, n2, -1 + n3, 1 + n4, -1 + n5, n6, n7, n8, n9, n10, n11, 
      n12, 1 + n13, n14])/(-1 + n5) + 
   (n13*j[p4a, n1, n2, n3, 1 + n4, -1 + n5, n6, -1 + n7, n8, n9, n10, n11, 
      n12, 1 + n13, n14])/(-1 + n5) - 
   (n8*j[p4a, n1, n2, n3, 1 + n4, -1 + n5, n6, -1 + n7, 1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n5) + ((-2 + n13 + n2 - n3 - n4 + n5 - n8)*
     j[p4a, n1, n2, n3, 1 + n4, -1 + n5, n6, n7, n8, n9, n10, n11, n12, n13, 
      n14])/(-1 + n5) + j[p4a, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, n8, n9, 
    n10, n11, n12, n13, n14] + 
   ((1 + n4)*j[p4a, n1, n2, n3, 2 + n4, -2 + n5, n6, n7, n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n5) + 
   ((-1 - n4)*j[p4a, n1, n2, n3, 2 + n4, -1 + n5, n6, -1 + n7, n8, n9, n10, 
      n11, n12, n13, n14])/(-1 + n5) - 
   (n3*j[p4a, n1, n2, 1 + n3, 1 + n4, -1 + n5, n6, -1 + n7, n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n5) + 
   (n3*j[p4a, n1, n2, 1 + n3, 1 + n4, -1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n5) + 
   (n2*j[p4a, n1, 1 + n2, n3, 1 + n4, -1 + n5, n6, -1 + n7, n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n5) - 
   (n2*j[p4a, n1, 1 + n2, n3, 1 + n4, -1 + n5, n6, n7, -1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n5) + 
   (n1*j[p4a, 1 + n1, -1 + n2, n3, 1 + n4, -1 + n5, n6, n7, n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n5) - 
   (n1*j[p4a, 1 + n1, n2, n3, 1 + n4, -1 + n5, n6, n7, -1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n5) - 
   (n1*j[p4a, 1 + n1, n2, n3, 1 + n4, -1 + n5, n6, n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n5) + 
   (n1*j[p4a, 1 + n1, n2, n3, 1 + n4, -1 + n5, n6, n7, n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n5), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; n8 != 1 -> 
  -((n12*j[p4a, n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
       n13, n14])/(-1 + n8)) - 
   (n12*j[p4a, n1, 1 + n2, -1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) + 
   (2*n12*j[p4a, n1, 1 + n2, n3, n4, n5, n6, -1 + n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) + 
   (n11*j[p4a, n1, 1 + n2, n3, n4, n5, n6, -1 + n7, -1 + n8, n9, n10, 
      1 + n11, n12, n13, n14])/(-1 + n8) + j[p4a, n1, 1 + n2, n3, n4, n5, n6, 
    -1 + n7, n8, n9, n10, n11, n12, n13, n14] + 
   (n12*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, -2 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) - 
   (n11*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, -1 + n8, n9, -1 + n10, 
      1 + n11, n12, n13, n14])/(-1 + n8) + 
   ((-1 - d + n11 + n3 + n4 + 2*n7 + n8)*j[p4a, n1, 1 + n2, n3, n4, n5, n6, 
      n7, -1 + n8, n9, n10, n11, n12, n13, n14])/(-1 + n8) + 
   (n12*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, -1 + n13, n14])/(-1 + n8) - 
   (n4*j[p4a, n1, 1 + n2, n3, 1 + n4, -1 + n5, n6, n7, -1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n8) + 
   (n4*j[p4a, n1, 1 + n2, n3, 1 + n4, n5, n6, -1 + n7, -1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n8) + 
   (n3*j[p4a, n1, 1 + n2, 1 + n3, n4, n5, n6, -1 + n7, -1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n8) - 
   (n3*j[p4a, n1, 1 + n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n8), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; 
    !(n10 == 1 || n11 == 0) -> 
  -((n7*j[p4a, n1, -1 + n2, n3, n4, n5, n6, 1 + n7, n8, n9, -1 + n10, 
       1 + n11, n12, n13, n14])/(-1 + n10)) + 
   (n6*j[p4a, n1, -1 + n2, n3, n4, n5, 1 + n6, n7, n8, n9, -1 + n10, 1 + n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n3*j[p4a, n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, 1 + n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n7*j[p4a, n1, n2, n3, -1 + n4, n5, n6, 1 + n7, n8, n9, -1 + n10, 1 + n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n6*j[p4a, n1, n2, n3, -1 + n4, n5, 1 + n6, n7, n8, n9, -1 + n10, 1 + n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n7*j[p4a, n1, n2, n3, n4, -1 + n5, n6, 1 + n7, n8, n9, -1 + n10, 1 + n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n6*j[p4a, n1, n2, n3, n4, -1 + n5, 1 + n6, n7, n8, n9, -1 + n10, 1 + n11, 
      n12, n13, n14])/(-1 + n10) - j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, 
    n8, n9, n10, 1 + n11, n12, n13, n14] + j[p4a, n1, n2, n3, n4, n5, n6, 
    -1 + n7, n8, n9, n10, 1 + n11, n12, n13, n14] + 
   j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, -1 + n9, n10, 1 + n11, n12, n13, 
    n14] - (2*(n6 - n7)*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, n9, -1 + n10, 
      1 + n11, n12, n13, n14])/(-1 + n10) + 
   (n7*j[p4a, n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, n9, -1 + n10, 1 + n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, -1 + n8, n9, -1 + n10, 1 + n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, -1 + n5, n6, n7, n8, n9, -1 + n10, 1 + n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, n9, -1 + n10, 1 + n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, n8, n9, -1 + n10, 1 + n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, -1 + n10, 1 + n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n3*j[p4a, n1, n2, 1 + n3, -1 + n4, n5, n6, n7, n8, n9, -1 + n10, 1 + n11, 
      n12, n13, n14])/(-1 + n10) + 
   (2*n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, -1 + n10, 
      1 + n11, n12, n13, n14])/(-1 + n10) + 
   (2*n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, -1 + n10, 
      1 + n11, n12, n13, n14])/(-1 + n10) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, 1 + n11, 
      -1 + n12, n13, n14])/(-1 + n10) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, 1 + n11, n12, 
      n13, -1 + n14])/(-1 + n10) + 
   (n2*j[p4a, n1, 1 + n2, n3, n4, -1 + n5, n6, n7, n8, n9, -1 + n10, 1 + n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, -1 + n6, n7, n8, n9, -1 + n10, 1 + n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, -1 + n7, n8, n9, -1 + n10, 1 + n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, -1 + n8, n9, -1 + n10, 1 + n11, 
      n12, n13, n14])/(-1 + n10), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; 
    !(n12 == 0 || n14 == 1) -> 
  -j[p4a, n1, -1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
     n14] - (n9*j[p4a, n1, -1 + n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, n11, 
      1 + n12, n13, -1 + n14])/(-1 + n14) - 
   (n5*j[p4a, n1, -1 + n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4a, n1, n2, -1 + n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) - j[p4a, n1, n2, n3, -1 + n4, n5, n6, n7, 
    n8, n9, n10, n11, 1 + n12, n13, n14] - 
   (n9*j[p4a, n1, n2, n3, -1 + n4, n5, n6, n7, n8, 1 + n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, n1, n2, n3, -1 + n4, n5, 1 + n6, n7, n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n5*j[p4a, n1, n2, n3, -1 + n4, 1 + n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) + j[p4a, n1, n2, n3, n4, -1 + n5, n6, n7, 
    n8, n9, n10, n11, 1 + n12, n13, n14] + 
   (n9*j[p4a, n1, n2, n3, n4, -1 + n5, n6, n7, n8, 1 + n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4a, n1, n2, n3, n4, -1 + n5, 1 + n6, n7, n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) + j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, 
    n8, n9, n10, n11, 1 + n12, n13, n14] + 
   (n9*j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) + j[p4a, n1, n2, n3, n4, n5, n6, -1 + n7, 
    n8, n9, n10, n11, 1 + n12, n13, n14] + 
   (n9*j[p4a, n1, n2, n3, n4, n5, n6, -1 + n7, n8, 1 + n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) + j[p4a, n1, n2, n3, n4, n5, n6, n7, 
    -1 + n8, n9, n10, n11, 1 + n12, n13, n14] + 
   (n9*j[p4a, n1, n2, n3, n4, n5, n6, n7, -1 + n8, 1 + n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) + 
   ((1 - n14 - n4 + n5 + n6)*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, 
      n11, 1 + n12, n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, n11, 1 + n12, n13, 
      -2 + n14])/(-1 + n14) + (n9*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 
      1 + n9, n10, n11, 1 + n12, n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, -1 + n7, n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) - (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 
      n9, n10, n11, 1 + n12, -1 + n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
      -2 + n14])/(-1 + n14) + (n5*j[p4a, n1, n2, n3, n4, 1 + n5, -1 + n6, n7, 
      n8, n9, n10, n11, 1 + n12, n13, -1 + n14])/(-1 + n14) + 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, -1 + n7, n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, -1 + n14])/(-1 + n14) - 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
      -2 + n14])/(-1 + n14) + (n4*j[p4a, n1, n2, n3, 1 + n4, -1 + n5, n6, n7, 
      n8, n9, n10, n11, 1 + n12, n13, -1 + n14])/(-1 + n14) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
      -2 + n14])/(-1 + n14), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; 
    !(n4 == 0 || n7 == 1) -> 
  -((n11*j[p4a, n1, -1 + n2, n3, 1 + n4, n5, n6, -1 + n7, n8, n9, n10, 
       1 + n11, n12, n13, n14])/(-1 + n7)) - j[p4a, n1, -1 + n2, n3, 1 + n4, 
    n5, n6, n7, n8, n9, n10, n11, n12, n13, n14] - 
   (n5*j[p4a, n1, -1 + n2, n3, 1 + n4, 1 + n5, n6, -1 + n7, n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n7) + 
   (n13*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, n6, -1 + n7, n8, n9, n10, n11, 
      n12, 1 + n13, n14])/(-1 + n7) + 
   (n12*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, n6, -1 + n7, n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n7) - 
   (n12*j[p4a, n1, n2, n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, 1 + n12, 
      n13, n14])/(-1 + n7) - (n11*j[p4a, n1, n2, n3, n4, n5, n6, -1 + n7, n8, 
      n9, n10, 1 + n11, n12, n13, n14])/(-1 + n7) + 
   (n13*j[p4a, n1, n2, n3, 1 + n4, -1 + n5, n6, -1 + n7, n8, n9, n10, n11, 
      n12, 1 + n13, n14])/(-1 + n7) + 
   (n12*j[p4a, n1, n2, n3, 1 + n4, -1 + n5, n6, -1 + n7, n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n7) + 
   (n11*j[p4a, n1, n2, n3, 1 + n4, -1 + n5, n6, -1 + n7, n8, n9, n10, 
      1 + n11, n12, n13, n14])/(-1 + n7) + j[p4a, n1, n2, n3, 1 + n4, 
    -1 + n5, n6, n7, n8, n9, n10, n11, n12, n13, n14] + 
   (n12*j[p4a, n1, n2, n3, 1 + n4, n5, -1 + n6, -1 + n7, n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n7) + 
   (n11*j[p4a, n1, n2, n3, 1 + n4, n5, -1 + n6, -1 + n7, n8, n9, n10, 
      1 + n11, n12, n13, n14])/(-1 + n7) - 
   (n13*j[p4a, n1, n2, n3, 1 + n4, n5, n6, -2 + n7, n8, n9, n10, n11, n12, 
      1 + n13, n14])/(-1 + n7) - 
   (n12*j[p4a, n1, n2, n3, 1 + n4, n5, n6, -2 + n7, n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n7) - 
   (n13*j[p4a, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, -1 + n8, n9, n10, n11, 
      n12, 1 + n13, n14])/(-1 + n7) + 
   (n11*j[p4a, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, -1 + n8, n9, n10, 
      1 + n11, n12, n13, n14])/(-1 + n7) - 
   (n11*j[p4a, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, n8, -1 + n9, n10, 
      1 + n11, n12, n13, n14])/(-1 + n7) + 
   (n11*j[p4a, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, n8, n9, -1 + n10, 
      1 + n11, n12, n13, n14])/(-1 + n7) + 
   (n13*j[p4a, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, n8, n9, n10, n11, 
      -1 + n12, 1 + n13, n14])/(-1 + n7) + 
   ((n12 - n13 - n2 + n5)*j[p4a, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, n8, n9, 
      n10, n11, n12, n13, n14])/(-1 + n7) - 
   (n13*j[p4a, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      1 + n13, -1 + n14])/(-1 + n7) - 
   (n12*j[p4a, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, n8, n9, n10, n11, 
      1 + n12, -1 + n13, n14])/(-1 + n7) - 
   (n12*j[p4a, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, n8, n9, n10, n11, 
      1 + n12, n13, -1 + n14])/(-1 + n7) + j[p4a, n1, n2, n3, 1 + n4, n5, n6, 
    n7, -1 + n8, n9, n10, n11, n12, n13, n14] + 
   (n5*j[p4a, n1, n2, n3, 1 + n4, 1 + n5, -1 + n6, -1 + n7, n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n7) + 
   (n2*j[p4a, n1, 1 + n2, n3, 1 + n4, -1 + n5, n6, -1 + n7, n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n7) - 
   (n2*j[p4a, n1, 1 + n2, n3, 1 + n4, n5, -1 + n6, -1 + n7, n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n7) - 
   (n1*j[p4a, 1 + n1, -1 + n2, n3, 1 + n4, n5, n6, -1 + n7, n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n7) + 
   (n1*j[p4a, 1 + n1, n2, n3, 1 + n4, -1 + n5, n6, -1 + n7, n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n7) - 
   (n1*j[p4a, 1 + n1, n2, n3, 1 + n4, n5, n6, -1 + n7, n8, -1 + n9, n10, n11, 
      n12, n13, n14])/(-1 + n7) + 
   (n1*j[p4a, 1 + n1, n2, n3, 1 + n4, n5, n6, -1 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n7), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; 
    !(n4 == 0 || n8 == 1) -> 
  -((n11*j[p4a, n1, -1 + n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, 
       1 + n11, n12, n13, n14])/(-1 + n8)) - 
   (n7*j[p4a, n1, -1 + n2, n3, 1 + n4, n5, n6, 1 + n7, -1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n8) - 
   (n3*j[p4a, n1, -1 + n2, 1 + n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n8) + 
   (n12*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) - 
   (n12*j[p4a, n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      n13, n14])/(-1 + n8) - (n11*j[p4a, n1, n2, n3, n4, n5, n6, n7, -1 + n8, 
      n9, n10, 1 + n11, n12, n13, n14])/(-1 + n8) - 
   (n7*j[p4a, n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, n9, n10, n11, n12, 
      n13, n14])/(-1 + n8) + (n12*j[p4a, n1, n2, n3, 1 + n4, -1 + n5, n6, n7, 
      -1 + n8, n9, n10, n11, 1 + n12, n13, n14])/(-1 + n8) + 
   (n11*j[p4a, n1, n2, n3, 1 + n4, -1 + n5, n6, n7, -1 + n8, n9, n10, 
      1 + n11, n12, n13, n14])/(-1 + n8) + 
   (n7*j[p4a, n1, n2, n3, 1 + n4, -1 + n5, n6, 1 + n7, -1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n8) + 
   (n12*j[p4a, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) + 
   (n11*j[p4a, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, -1 + n8, n9, n10, 
      1 + n11, n12, n13, n14])/(-1 + n8) + j[p4a, n1, n2, n3, 1 + n4, n5, 
    -1 + n6, n7, n8, n9, n10, n11, n12, n13, n14] - 
   (n12*j[p4a, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) + 
   (n11*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, -2 + n8, n9, n10, 1 + n11, 
      n12, n13, n14])/(-1 + n8) - 
   (n11*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, -1 + n9, n10, 
      1 + n11, n12, n13, n14])/(-1 + n8) + 
   (n11*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, -1 + n10, 
      1 + n11, n12, n13, n14])/(-1 + n8) + 
   ((-2 + n12 - n3 - n4 + n8)*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, 
      n9, n10, n11, n12, n13, n14])/(-1 + n8) - 
   (n12*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, -1 + n13, n14])/(-1 + n8) - 
   (n12*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, -1 + n14])/(-1 + n8) + 
   (n7*j[p4a, n1, n2, n3, 1 + n4, n5, n6, 1 + n7, -2 + n8, n9, n10, n11, n12, 
      n13, n14])/(-1 + n8) + ((-1 - n4)*j[p4a, n1, n2, n3, 2 + n4, n5, 
      -1 + n6, n7, -1 + n8, n9, n10, n11, n12, n13, n14])/(-1 + n8) + 
   ((1 + n4)*j[p4a, n1, n2, n3, 2 + n4, n5, n6, n7, -2 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n8) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      n13, n14])/(-1 + n8) + (n3*j[p4a, n1, n2, 1 + n3, 1 + n4, n5, n6, 
      -1 + n7, -1 + n8, n9, n10, n11, n12, n13, n14])/(-1 + n8) + 
   (2*n3*j[p4a, n1, n2, 1 + n3, 1 + n4, n5, n6, n7, -2 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n8) - 
   (n3*j[p4a, n1, n2, 1 + n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n8) + 
   (n3*j[p4a, n1, n2, 1 + n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n8) + 
   (n3*j[p4a, n1, n2, 1 + n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n8), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; 
    !(n10 == 1 || n9 == 0) -> 
  (n7*j[p4a, n1, -1 + n2, n3, n4, n5, n6, 1 + n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n3*j[p4a, n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n7*j[p4a, n1, n2, n3, -1 + n4, n5, n6, 1 + n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n7*j[p4a, n1, n2, n3, n4, -1 + n5, n6, 1 + n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, 
    n8, 1 + n9, n10, n11, n12, n13, n14] + 
   ((-1 - d + n10 + n2 + n3 + n4 + 2*n6)*j[p4a, n1, n2, n3, n4, n5, n6, n7, 
      n8, 1 + n9, -1 + n10, n11, n12, n13, n14])/(-1 + n10) - 
   (n7*j[p4a, n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n3*j[p4a, n1, n2, 1 + n3, -1 + n4, n5, n6, n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (2*n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, 1 + n9, -1 + n10, 
      n11, n12, n13, n14])/(-1 + n10) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, -1 + n10, n11, 
      -1 + n12, n13, n14])/(-1 + n10) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, -1 + n10, n11, n12, 
      -1 + n13, n14])/(-1 + n10) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, -1 + n10, n11, n12, 
      n13, -1 + n14])/(-1 + n10) - 
   (n2*j[p4a, n1, 1 + n2, n3, n4, -1 + n5, n6, n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; 
    !(n13 == 0 || n14 == 1) -> j[p4a, n1, -1 + n2, n3, n4, n5, n6, n7, n8, 
    n9, n10, n11, n12, 1 + n13, n14] - 
   (n6*j[p4a, n1, -1 + n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, 
      1 + n13, -1 + n14])/(-1 + n14) + 
   (n5*j[p4a, n1, -1 + n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      1 + n13, -1 + n14])/(-1 + n14) + j[p4a, n1, n2, -1 + n3, n4, n5, n6, 
    n7, n8, n9, n10, n11, n12, 1 + n13, n14] - 
   (n6*j[p4a, n1, n2, -1 + n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, 
      1 + n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      1 + n13, -1 + n14])/(-1 + n14) - j[p4a, n1, n2, n3, n4, n5, -1 + n6, 
    n7, n8, n9, n10, n11, n12, 1 + n13, n14] - 
   (n9*j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, n12, 
      1 + n13, -1 + n14])/(-1 + n14) - j[p4a, n1, n2, n3, n4, n5, n6, 
    -1 + n7, n8, n9, n10, n11, n12, 1 + n13, n14] - 
   j[p4a, n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 1 + n13, 
    n14] + j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, -1 + n12, 
    1 + n13, n14] + ((-1 + n14 - n6)*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 
      n9, n10, n11, n12, 1 + n13, -1 + n14])/(-1 + n14) + 
   (n9*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, -1 + n10, n11, n12, 
      1 + n13, -1 + n14])/(-1 + n14) + 
   (n9*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, 1 + n13, 
      -2 + n14])/(-1 + n14) - (n9*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 
      1 + n9, n10, n11, n12, 1 + n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, -1 + n7, n8, n9, n10, n11, n12, 
      1 + n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, -1 + n8, n9, n10, n11, n12, 
      1 + n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, -1 + n12, 
      1 + n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) + (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 
      n9, n10, n11, n12, 1 + n13, -2 + n14])/(-1 + n14) - 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, -1 + n6, n7, n8, n9, n10, n11, n12, 
      1 + n13, -1 + n14])/(-1 + n14) - 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) + (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, 
      n9, n10, n11, n12, 1 + n13, -2 + n14])/(-1 + n14) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, n9, n10, n11, n12, 
      1 + n13, -1 + n14])/(-1 + n14) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      1 + n13, -1 + n14])/(-1 + n14) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, 1 + n13, 
      -2 + n14])/(-1 + n14), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; 
    !(n13 == 0 || n7 == 1) -> 
  -((n12*j[p4a, n1, -1 + n2, n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, 
       1 + n12, 1 + n13, n14])/(-1 + n7)) - 
   (n11*j[p4a, n1, -1 + n2, n3, n4, n5, n6, -1 + n7, n8, n9, n10, 1 + n11, 
      n12, 1 + n13, n14])/(-1 + n7) + j[p4a, n1, n2, -1 + n3, n4, n5, n6, n7, 
    n8, n9, n10, n11, n12, 1 + n13, n14] - 
   (n12*j[p4a, n1, n2, n3, -1 + n4, n5, n6, -1 + n7, n8, n9, n10, n11, 
      1 + n12, 1 + n13, n14])/(-1 + n7) - 
   (n11*j[p4a, n1, n2, n3, -1 + n4, n5, n6, -1 + n7, n8, n9, n10, 1 + n11, 
      n12, 1 + n13, n14])/(-1 + n7) - j[p4a, n1, n2, n3, -1 + n4, n5, n6, n7, 
    n8, n9, n10, n11, n12, 1 + n13, n14] + 
   ((1 + n13)*j[p4a, n1, n2, n3, n4, -1 + n5, n6, -1 + n7, n8, n9, n10, n11, 
      n12, 2 + n13, n14])/(-1 + n7) + 
   (n12*j[p4a, n1, n2, n3, n4, -1 + n5, n6, -1 + n7, n8, n9, n10, n11, 
      1 + n12, 1 + n13, n14])/(-1 + n7) + 
   (n11*j[p4a, n1, n2, n3, n4, -1 + n5, n6, -1 + n7, n8, n9, n10, 1 + n11, 
      n12, 1 + n13, n14])/(-1 + n7) + j[p4a, n1, n2, n3, n4, -1 + n5, n6, n7, 
    n8, n9, n10, n11, n12, 1 + n13, n14] + 
   (n12*j[p4a, n1, n2, n3, n4, n5, -1 + n6, -1 + n7, n8, n9, n10, n11, 
      1 + n12, 1 + n13, n14])/(-1 + n7) + 
   (n11*j[p4a, n1, n2, n3, n4, n5, -1 + n6, -1 + n7, n8, n9, n10, 1 + n11, 
      n12, 1 + n13, n14])/(-1 + n7) + 
   (n12*j[p4a, n1, n2, n3, n4, n5, n6, -2 + n7, n8, n9, n10, n11, 1 + n12, 
      1 + n13, n14])/(-1 + n7) + 
   (n11*j[p4a, n1, n2, n3, n4, n5, n6, -2 + n7, n8, n9, n10, 1 + n11, n12, 
      1 + n13, n14])/(-1 + n7) + 
   (n12*j[p4a, n1, n2, n3, n4, n5, n6, -1 + n7, -1 + n8, n9, n10, n11, 
      1 + n12, 1 + n13, n14])/(-1 + n7) + 
   (n11*j[p4a, n1, n2, n3, n4, n5, n6, -1 + n7, -1 + n8, n9, n10, 1 + n11, 
      n12, 1 + n13, n14])/(-1 + n7) - 
   (n11*j[p4a, n1, n2, n3, n4, n5, n6, -1 + n7, n8, -1 + n9, n10, 1 + n11, 
      n12, 1 + n13, n14])/(-1 + n7) + 
   ((-1 - n12 - n13 + n2 + n5)*j[p4a, n1, n2, n3, n4, n5, n6, -1 + n7, n8, 
      n9, n10, n11, n12, 1 + n13, n14])/(-1 + n7) + 
   ((-1 - n13)*j[p4a, n1, n2, n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      2 + n13, -1 + n14])/(-1 + n7) - 
   (n12*j[p4a, n1, n2, n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, 1 + n12, 
      1 + n13, -1 + n14])/(-1 + n7) - 
   (n11*j[p4a, n1, n2, n3, n4, n5, n6, -1 + n7, n8, n9, n10, 1 + n11, 
      -1 + n12, 1 + n13, n14])/(-1 + n7) + 
   (n11*j[p4a, n1, n2, n3, n4, n5, n6, -1 + n7, n8, n9, n10, 1 + n11, n12, 
      1 + n13, n14])/(-1 + n7) - 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      n13, n14])/(-1 + n7) + (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, -1 + n7, 
      n8, n9, n10, n11, n12, 1 + n13, -1 + n14])/(-1 + n7) + 
   (n2*j[p4a, n1, 1 + n2, -1 + n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, 
      n12, 1 + n13, n14])/(-1 + n7) + 
   (n2*j[p4a, n1, 1 + n2, n3, n4, -1 + n5, n6, -1 + n7, n8, n9, n10, n11, 
      n12, 1 + n13, n14])/(-1 + n7) - 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, -1 + n6, -1 + n7, n8, n9, n10, n11, 
      n12, 1 + n13, n14])/(-1 + n7) - 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, -2 + n7, n8, n9, n10, n11, n12, 
      1 + n13, n14])/(-1 + n7) - 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, -1 + n7, -1 + n8, n9, n10, n11, 
      n12, 1 + n13, n14])/(-1 + n7) + 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, 
      -1 + n12, 1 + n13, n14])/(-1 + n7) - 
   (2*n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      n13, n14])/(-1 + n7) + (n1*j[p4a, 1 + n1, n2, n3, n4, -1 + n5, n6, 
      -1 + n7, n8, n9, n10, n11, n12, 1 + n13, n14])/(-1 + n7) - 
   (n1*j[p4a, 1 + n1, n2, n3, n4, n5, n6, -1 + n7, n8, -1 + n9, n10, n11, 
      n12, 1 + n13, n14])/(-1 + n7) - 
   (n1*j[p4a, 1 + n1, n2, n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      n13, n14])/(-1 + n7) + (n1*j[p4a, 1 + n1, n2, n3, n4, n5, n6, -1 + n7, 
      n8, n9, n10, n11, n12, 1 + n13, n14])/(-1 + n7), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; 
    !(n13 == 0 || n8 == 1) -> 
  (n12*j[p4a, n1, -1 + n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, 1 + n13, n14])/(-1 + n8) + 
   (n11*j[p4a, n1, -1 + n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, 1 + n11, 
      n12, 1 + n13, n14])/(-1 + n8) + j[p4a, n1, -1 + n2, n3, n4, n5, n6, n7, 
    n8, n9, n10, n11, n12, 1 + n13, n14] - 
   (n7*j[p4a, n1, n2, -1 + n3, n4, n5, n6, 1 + n7, -1 + n8, n9, n10, n11, 
      n12, 1 + n13, n14])/(-1 + n8) - 
   (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      n12, 1 + n13, n14])/(-1 + n8) + 
   (n12*j[p4a, n1, n2, n3, -1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, 1 + n13, n14])/(-1 + n8) + 
   (n11*j[p4a, n1, n2, n3, -1 + n4, n5, n6, n7, -1 + n8, n9, n10, 1 + n11, 
      n12, 1 + n13, n14])/(-1 + n8) + j[p4a, n1, n2, n3, -1 + n4, n5, n6, n7, 
    n8, n9, n10, n11, n12, 1 + n13, n14] + 
   (n7*j[p4a, n1, n2, n3, -1 + n4, n5, n6, 1 + n7, -1 + n8, n9, n10, n11, 
      n12, 1 + n13, n14])/(-1 + n8) - 
   (n12*j[p4a, n1, n2, n3, n4, -1 + n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, 1 + n13, n14])/(-1 + n8) - 
   (n11*j[p4a, n1, n2, n3, n4, -1 + n5, n6, n7, -1 + n8, n9, n10, 1 + n11, 
      n12, 1 + n13, n14])/(-1 + n8) - 
   (n7*j[p4a, n1, n2, n3, n4, -1 + n5, n6, 1 + n7, -1 + n8, n9, n10, n11, 
      n12, 1 + n13, n14])/(-1 + n8) - 
   (n12*j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, 1 + n13, n14])/(-1 + n8) - 
   (n11*j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, -1 + n8, n9, n10, 1 + n11, 
      n12, 1 + n13, n14])/(-1 + n8) - j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, 
    n8, n9, n10, n11, n12, 1 + n13, n14] - 
   (n12*j[p4a, n1, n2, n3, n4, n5, n6, -1 + n7, -1 + n8, n9, n10, n11, 
      1 + n12, 1 + n13, n14])/(-1 + n8) - 
   (n11*j[p4a, n1, n2, n3, n4, n5, n6, -1 + n7, -1 + n8, n9, n10, 1 + n11, 
      n12, 1 + n13, n14])/(-1 + n8) - j[p4a, n1, n2, n3, n4, n5, n6, -1 + n7, 
    n8, n9, n10, n11, n12, 1 + n13, n14] - 
   (n12*j[p4a, n1, n2, n3, n4, n5, n6, n7, -2 + n8, n9, n10, n11, 1 + n12, 
      1 + n13, n14])/(-1 + n8) - 
   (n11*j[p4a, n1, n2, n3, n4, n5, n6, n7, -2 + n8, n9, n10, 1 + n11, n12, 
      1 + n13, n14])/(-1 + n8) + 
   (n11*j[p4a, n1, n2, n3, n4, n5, n6, n7, -1 + n8, -1 + n9, n10, 1 + n11, 
      n12, 1 + n13, n14])/(-1 + n8) + 
   ((1 + n12 - n3 + n4 - n8)*j[p4a, n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, 
      n10, n11, n12, 1 + n13, n14])/(-1 + n8) + 
   (n12*j[p4a, n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      1 + n13, -1 + n14])/(-1 + n8) + 
   (n11*j[p4a, n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, 1 + n11, 
      -1 + n12, 1 + n13, n14])/(-1 + n8) - 
   (n11*j[p4a, n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, 1 + n11, n12, 
      1 + n13, n14])/(-1 + n8) + j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, n9, 
    n10, n11, -1 + n12, 1 + n13, n14] + 
   (n7*j[p4a, n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, n9, n10, n11, n12, 
      n13, n14])/(-1 + n8) + (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, 
      -1 + n8, n9, n10, n11, n12, 1 + n13, -1 + n14])/(-1 + n8) + 
   (n3*j[p4a, n1, n2, 1 + n3, -1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      n12, 1 + n13, n14])/(-1 + n8) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      1 + n13, -1 + n14])/(-1 + n8), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; 
    !(n10 == 1 || n13 == 0) -> j[p4a, n1, -1 + n2, n3, n4, n5, n6, n7, n8, 
    n9, n10, n11, n12, 1 + n13, n14] + 
   (n6*j[p4a, n1, -1 + n2, n3, n4, n5, 1 + n6, n7, n8, n9, -1 + n10, n11, 
      n12, 1 + n13, n14])/(-1 + n10) + j[p4a, n1, n2, -1 + n3, n4, n5, n6, 
    n7, n8, n9, n10, n11, n12, 1 + n13, n14] + 
   (n7*j[p4a, n1, n2, -1 + n3, n4, n5, n6, 1 + n7, n8, n9, -1 + n10, n11, 
      n12, 1 + n13, n14])/(-1 + n10) + 
   (n6*j[p4a, n1, n2, -1 + n3, n4, n5, 1 + n6, n7, n8, n9, -1 + n10, n11, 
      n12, 1 + n13, n14])/(-1 + n10) + 
   (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, n8, n9, -1 + n10, n11, 
      n12, 1 + n13, n14])/(-1 + n10) - 
   (n7*j[p4a, n1, n2, n3, -1 + n4, n5, n6, 1 + n7, n8, n9, -1 + n10, n11, 
      n12, 1 + n13, n14])/(-1 + n10) + 
   (n7*j[p4a, n1, n2, n3, n4, -1 + n5, n6, 1 + n7, n8, n9, -1 + n10, n11, 
      n12, 1 + n13, n14])/(-1 + n10) - j[p4a, n1, n2, n3, n4, n5, -1 + n6, 
    n7, n8, n9, n10, n11, n12, 1 + n13, n14] - j[p4a, n1, n2, n3, n4, n5, n6, 
    -1 + n7, n8, n9, n10, n11, n12, 1 + n13, n14] - 
   j[p4a, n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 1 + n13, 
    n14] + j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, -1 + n9, n10, n11, n12, 
    1 + n13, n14] + ((n2 + n3 - n4 - n6)*j[p4a, n1, n2, n3, n4, n5, n6, n7, 
      n8, n9, -1 + n10, n11, n12, 1 + n13, n14])/(-1 + n10) + 
   j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, -1 + n12, 1 + n13, 
    n14] - j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 1 + n13, 
    n14] - (n7*j[p4a, n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, -1 + n7, n8, n9, -1 + n10, n11, 
      n12, 1 + n13, n14])/(-1 + n10) - 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, -1 + n8, n9, -1 + n10, n11, 
      n12, 1 + n13, n14])/(-1 + n10) + 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, -1 + n10, n11, 
      -1 + n12, 1 + n13, n14])/(-1 + n10) - 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, -1 + n10, n11, n12, 
      n13, n14])/(-1 + n10) - (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 
      n9, -1 + n10, n11, n12, 1 + n13, -1 + n14])/(-1 + n10) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, 
      1 + n13, -1 + n14])/(-1 + n10) - 
   (n3*j[p4a, n1, n2, 1 + n3, -1 + n4, n5, n6, n7, n8, n9, -1 + n10, n11, 
      n12, 1 + n13, n14])/(-1 + n10) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, 
      1 + n13, -1 + n14])/(-1 + n10) + 
   (n2*j[p4a, n1, 1 + n2, -1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, 
      n12, 1 + n13, n14])/(-1 + n10) + 
   (n2*j[p4a, n1, 1 + n2, n3, n4, -1 + n5, n6, n7, n8, n9, -1 + n10, n11, 
      n12, 1 + n13, n14])/(-1 + n10) - 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, -1 + n6, n7, n8, n9, -1 + n10, n11, 
      n12, 1 + n13, n14])/(-1 + n10) - 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, -1 + n7, n8, n9, -1 + n10, n11, 
      n12, 1 + n13, n14])/(-1 + n10) - 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, -1 + n8, n9, -1 + n10, n11, 
      n12, 1 + n13, n14])/(-1 + n10) + 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, 
      -1 + n12, 1 + n13, n14])/(-1 + n10) - 
   (2*n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, 
      n13, n14])/(-1 + n10), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; 
    !(n13 == 0 || n6 == 1) -> j[p4a, n1, -1 + n2, n3, n4, n5, n6, n7, n8, n9, 
    n10, n11, n12, 1 + n13, n14] + j[p4a, n1, n2, -1 + n3, n4, n5, n6, n7, 
    n8, n9, n10, n11, n12, 1 + n13, n14] + 
   (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, -1 + n6, n7, n8, n9, n10, n11, 
      n12, 1 + n13, n14])/(-1 + n6) + ((1 + d - 2*n14 - n4 - n5 - n6 - n9)*
     j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, n8, n9, n10, n11, n12, 1 + n13, 
      n14])/(-1 + n6) - (n9*j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, n8, 
      1 + n9, n10, n11, n12, 1 + n13, -1 + n14])/(-1 + n6) + 
   (n9*j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, n12, 
      1 + n13, n14])/(-1 + n6) - j[p4a, n1, n2, n3, n4, n5, n6, -1 + n7, n8, 
    n9, n10, n11, n12, 1 + n13, n14] - j[p4a, n1, n2, n3, n4, n5, n6, n7, 
    -1 + n8, n9, n10, n11, n12, 1 + n13, n14] + j[p4a, n1, n2, n3, n4, n5, 
    n6, n7, n8, n9, n10, n11, -1 + n12, 1 + n13, n14] - 
   j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 1 + n13, 
    -1 + n14] + (n5*j[p4a, n1, n2, n3, n4, 1 + n5, -1 + n6, n7, n8, n9, n10, 
      n11, n12, n13, n14])/(-1 + n6) - 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, -1 + n6, n7, n8, n9, n10, n11, n12, 
      1 + n13, -1 + n14])/(-1 + n6) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, n9, n10, n11, n12, 
      1 + n13, -1 + n14])/(-1 + n6), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; 
   n10 == 1 && n14 == 1 && n5 == 1 && n6 == 1 && n7 == 1 && n8 == 1 && 
     !(n13 == 0 || n4 == 0) -> 
  j[p4a, n1, -2 + n2, -1 + n3, 1 + n4, 2, 1, 1, 1, n9, 1, n11, n12, 1 + n13, 
     1]/(1 - n3) + j[p4a, n1, -2 + n2, n3, 1 + n4, 1, 1, 1, 1, n9, 1, n11, 
    n12, 1 + n13, 1] + ((1 + n13)*j[p4a, n1, -1 + n2, -2 + n3, 1 + n4, 1, 1, 
      1, 1, n9, 1, n11, n12, 2 + n13, 1])/(-1 + n3) - 
   (n12*j[p4a, n1, -1 + n2, -1 + n3, n4, 1, 1, 1, 1, n9, 1, n11, 1 + n12, 
      1 + n13, 1])/(-1 + n3) + 
   ((1 + n13)*j[p4a, n1, -1 + n2, -1 + n3, 1 + n4, 0, 1, 1, 1, n9, 1, n11, 
      n12, 2 + n13, 1])/(-1 + n3) + j[p4a, n1, -1 + n2, -1 + n3, 1 + n4, 1, 
     0, 1, 2, n9, 1, n11, n12, 1 + n13, 1]/(1 - n3) + 
   ((-1 - n13)*j[p4a, n1, -1 + n2, -1 + n3, 1 + n4, 1, 1, 0, 1, n9, 1, n11, 
      n12, 2 + n13, 1])/(-1 + n3) + 
   ((-1 - n13)*j[p4a, n1, -1 + n2, -1 + n3, 1 + n4, 1, 1, 1, 0, n9, 1, n11, 
      n12, 2 + n13, 1])/(-1 + n3) + 
   ((1 + n13)*j[p4a, n1, -1 + n2, -1 + n3, 1 + n4, 1, 1, 1, 1, n9, 1, n11, 
      -1 + n12, 2 + n13, 1])/(-1 + n3) + 
   ((-n13 - n2 + n3 + n4)*j[p4a, n1, -1 + n2, -1 + n3, 1 + n4, 1, 1, 1, 1, 
      n9, 1, n11, n12, 1 + n13, 1])/(-1 + n3) + 
   ((-1 - n13)*j[p4a, n1, -1 + n2, -1 + n3, 1 + n4, 1, 1, 1, 1, n9, 1, n11, 
      n12, 2 + n13, 0])/(-1 + n3) + j[p4a, n1, -1 + n2, -1 + n3, 1 + n4, 2, 
     0, 1, 1, n9, 1, n11, n12, 1 + n13, 1]/(-1 + n3) + 
   ((1 + n4)*j[p4a, n1, -1 + n2, -1 + n3, 2 + n4, 1, 0, 1, 1, n9, 1, n11, 
      n12, 1 + n13, 1])/(-1 + n3) + 
   ((-1 - n4)*j[p4a, n1, -1 + n2, -1 + n3, 2 + n4, 1, 1, 1, 0, n9, 1, n11, 
      n12, 1 + n13, 1])/(-1 + n3) + j[p4a, n1, -1 + n2, n3, n4, 1, 1, 1, 1, 
    n9, 1, n11, n12, 1 + n13, 1] - j[p4a, n1, -1 + n2, n3, 1 + n4, 1, 1, 0, 
    1, n9, 1, n11, n12, 1 + n13, 1] - 2*j[p4a, n1, -1 + n2, n3, 1 + n4, 1, 1, 
     1, 0, n9, 1, n11, n12, 1 + n13, 1] + j[p4a, n1, -1 + n2, n3, 1 + n4, 1, 
    1, 1, 1, n9, 1, n11, -1 + n12, 1 + n13, 1] - 
   j[p4a, n1, -1 + n2, n3, 1 + n4, 1, 1, 1, 1, n9, 1, n11, n12, n13, 1] - 
   j[p4a, n1, -1 + n2, n3, 1 + n4, 1, 1, 1, 1, n9, 1, n11, n12, 1 + n13, 0] - 
   (n12*j[p4a, n1, n2, -2 + n3, n4, 1, 1, 1, 1, n9, 1, n11, 1 + n12, 1 + n13, 
      1])/(-1 + n3) + (2*n12*j[p4a, n1, n2, -1 + n3, n4, 1, 1, 0, 1, n9, 1, 
      n11, 1 + n12, 1 + n13, 1])/(-1 + n3) + 
   (n11*j[p4a, n1, n2, -1 + n3, n4, 1, 1, 0, 1, n9, 1, 1 + n11, n12, 1 + n13, 
      1])/(-1 + n3) + j[p4a, n1, n2, -1 + n3, n4, 1, 1, 0, 2, n9, 1, n11, 
     n12, 1 + n13, 1]/(-1 + n3) + 
   (n12*j[p4a, n1, n2, -1 + n3, n4, 1, 1, 1, 0, n9, 1, n11, 1 + n12, 1 + n13, 
      1])/(-1 + n3) - (n11*j[p4a, n1, n2, -1 + n3, n4, 1, 1, 1, 1, n9, 0, 
      1 + n11, n12, 1 + n13, 1])/(-1 + n3) + 
   ((2 - d + n11 + n3 + n4)*j[p4a, n1, n2, -1 + n3, n4, 1, 1, 1, 1, n9, 1, 
      n11, n12, 1 + n13, 1])/(-1 + n3) + 
   (n12*j[p4a, n1, n2, -1 + n3, n4, 1, 1, 1, 1, n9, 1, n11, 1 + n12, n13, 1])/
    (-1 + n3) + ((-1 + n2 - n4)*j[p4a, n1, n2, -1 + n3, 1 + n4, 0, 1, 1, 1, 
      n9, 1, n11, n12, 1 + n13, 1])/(-1 + n3) + 
   ((1 - n2)*j[p4a, n1, n2, -1 + n3, 1 + n4, 1, 0, 1, 1, n9, 1, n11, n12, 
      1 + n13, 1])/(-1 + n3) + 
   (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, 1, 1, 0, 1, n9, 1, n11, n12, 1 + n13, 
      1])/(-1 + n3) + j[p4a, n1, n2, n3, n4, 1, 1, 0, 1, n9, 1, n11, n12, 
    1 + n13, 1] - (n1*j[p4a, 1 + n1, -2 + n2, -1 + n3, 1 + n4, 1, 1, 1, 1, 
      n9, 1, n11, n12, 1 + n13, 1])/(-1 + n3) + 
   (n1*j[p4a, 1 + n1, -1 + n2, -1 + n3, 1 + n4, 0, 1, 1, 1, n9, 1, n11, n12, 
      1 + n13, 1])/(-1 + n3) - 
   (n1*j[p4a, 1 + n1, -1 + n2, -1 + n3, 1 + n4, 1, 1, 1, 1, -1 + n9, 1, n11, 
      n12, 1 + n13, 1])/(-1 + n3) + 
   (n1*j[p4a, 1 + n1, -1 + n2, -1 + n3, 1 + n4, 1, 1, 1, 1, n9, 0, n11, n12, 
      1 + n13, 1])/(-1 + n3), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; 
   n10 == 1 && n13 == 0 && n14 == 1 && n5 == 1 && n7 == 1 && n8 == 1 && 
    n9 == 0 &&  !(n4 == 0 || n6 == 1) -> 
  -j[p4a, n1, -1 + n2, n3, 1 + n4, 1, n6, 1, 1, 0, 1, n11, n12, 0, 1] + 
   j[p4a, n1, n2, n3, 1 + n4, 0, n6, 1, 1, 0, 1, n11, n12, 0, 1] + 
   j[p4a, n1, n2, n3, 1 + n4, 1, -1 + n6, 0, 1, 0, 2, n11, n12, 0, 1]/
    (1 - n6) + ((-4 + d - n2 - n3 - n4)*j[p4a, n1, n2, n3, 1 + n4, 1, 
      -1 + n6, 1, 1, 0, 1, n11, n12, 0, 1])/(-1 + n6) + 
   j[p4a, n1, n2, n3, 1 + n4, 1, n6, 1, 0, 0, 1, n11, n12, 0, 1] + 
   ((1 + n4)*j[p4a, n1, n2, n3, 2 + n4, 0, -1 + n6, 1, 1, 0, 1, n11, n12, 0, 
      1])/(-1 + n6) + ((-1 - n4)*j[p4a, n1, n2, n3, 2 + n4, 1, -1 + n6, 0, 1, 
      0, 1, n11, n12, 0, 1])/(-1 + n6) - 
   (n3*j[p4a, n1, n2, 1 + n3, 1 + n4, 1, -1 + n6, 0, 1, 0, 1, n11, n12, 0, 
      1])/(-1 + n6) + (n3*j[p4a, n1, n2, 1 + n3, 1 + n4, 1, -1 + n6, 1, 1, 0, 
      1, n11, n12, -1, 1])/(-1 + n6) - 
   (n2*j[p4a, n1, 1 + n2, n3, 1 + n4, 1, -1 + n6, 0, 1, 0, 1, n11, n12, 0, 
      1])/(-1 + n6) + (n2*j[p4a, n1, 1 + n2, n3, 1 + n4, 1, -1 + n6, 1, 0, 0, 
      1, n11, n12, 0, 1])/(-1 + n6) + j[p4a, 1 + n1, -1 + n2, n3, 1 + n4, 1, 
     -1 + n6, 1, 1, 0, 2, -1 + n11, n12, 0, 1]/(-1 + n6) + 
   j[p4a, 1 + n1, -1 + n2, n3, 1 + n4, 1, -1 + n6, 2, 1, 0, 1, -1 + n11, n12, 
     0, 1]/(-1 + n6) + j[p4a, 1 + n1, -1 + n2, n3, 1 + n4, 1, n6, 1, 1, 0, 1, 
    -1 + n11, n12, 0, 1] + (n3*j[p4a, 1 + n1, -1 + n2, 1 + n3, 1 + n4, 1, 
      -1 + n6, 1, 1, 0, 1, -1 + n11, n12, 0, 1])/(-1 + n6) - 
   j[p4a, 1 + n1, n2, n3, 1 + n4, 0, n6, 1, 1, 0, 1, -1 + n11, n12, 0, 1] + 
   ((1 - d + 2*n2 + n3 + n6)*j[p4a, 1 + n1, n2, n3, 1 + n4, 1, -1 + n6, 1, 1, 
      0, 1, -1 + n11, n12, 0, 1])/(-1 + n6) + 
   j[p4a, 1 + n1, n2, n3, 1 + n4, 1, -1 + n6, 2, 0, 0, 1, -1 + n11, n12, 0, 
     1]/(1 - n6) + ((-1 - n4)*j[p4a, 1 + n1, n2, n3, 2 + n4, 0, -1 + n6, 1, 
      1, 0, 1, -1 + n11, n12, 0, 1])/(-1 + n6) + 
   ((1 + n4)*j[p4a, 1 + n1, n2, n3, 2 + n4, 1, -2 + n6, 1, 1, 0, 1, -1 + n11, 
      n12, 0, 1])/(-1 + n6) + ((1 + n4)*j[p4a, 1 + n1, n2, n3, 2 + n4, 1, 
      -1 + n6, 0, 1, 0, 1, -1 + n11, n12, 0, 1])/(-1 + n6) + 
   ((-1 - n4)*j[p4a, 1 + n1, n2, n3, 2 + n4, 1, -1 + n6, 1, 0, 0, 1, 
      -1 + n11, n12, 0, 1])/(-1 + n6) - 
   (2*n3*j[p4a, 1 + n1, n2, 1 + n3, 1 + n4, 1, -1 + n6, 1, 0, 0, 1, -1 + n11, 
      n12, 0, 1])/(-1 + n6) + 
   (n3*j[p4a, 1 + n1, n2, 1 + n3, 1 + n4, 1, -1 + n6, 1, 1, 0, 1, -1 + n11, 
      -1 + n12, 0, 1])/(-1 + n6) - 
   (2*n3*j[p4a, 1 + n1, n2, 1 + n3, 1 + n4, 1, -1 + n6, 1, 1, 0, 1, -1 + n11, 
      n12, -1, 1])/(-1 + n6), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; 
   n10 == 1 && n13 == 0 && n14 == 1 && n5 == 1 && n6 == 1 && n7 == 1 && 
    n8 == 1 &&  !(n11 == 0 || n12 == 0) -> 
  j[p4a, -1 + n1, -1 + n2, -1 + n3, n4, 1, 1, 1, 2, n9, 1, 1 + n11, 1 + n12, 
     0, 1]/(1 - n3) - (n4*j[p4a, -1 + n1, -1 + n2, -1 + n3, 1 + n4, 1, 1, 1, 
      1, n9, 1, 1 + n11, 1 + n12, 0, 1])/(-1 + n3) - 
   j[p4a, -1 + n1, -1 + n2, n3, n4, 1, 1, 1, 1, n9, 1, 1 + n11, 1 + n12, 0, 
    1] - (n11*j[p4a, -1 + n1, n2, -1 + n3, n4, 1, 1, 1, 1, n9, 1, 1 + n11, 
      1 + n12, 0, 1])/(-1 + n3) + 
   ((1 + n12)*j[p4a, n1, -2 + n2, -1 + n3, n4, 1, 1, 1, 1, n9, 1, 1 + n11, 
      2 + n12, 0, 1])/(-1 + n3) + j[p4a, n1, -2 + n2, -1 + n3, n4, 1, 1, 1, 
     2, n9, 1, 1 + n11, 1 + n12, 0, 1]/(-1 + n3) + 
   (n4*j[p4a, n1, -2 + n2, -1 + n3, 1 + n4, 1, 1, 1, 1, n9, 1, 1 + n11, 
      1 + n12, 0, 1])/(-1 + n3) + 
   ((1 + n12)*j[p4a, n1, -1 + n2, -2 + n3, n4, 1, 1, 1, 1, n9, 1, 1 + n11, 
      2 + n12, 0, 1])/(-1 + n3) - 
   (2*(1 + n12)*j[p4a, n1, -1 + n2, -1 + n3, n4, 1, 1, 0, 1, n9, 1, 1 + n11, 
      2 + n12, 0, 1])/(-1 + n3) + 
   ((-1 - n11)*j[p4a, n1, -1 + n2, -1 + n3, n4, 1, 1, 0, 1, n9, 1, 2 + n11, 
      1 + n12, 0, 1])/(-1 + n3) + j[p4a, n1, -1 + n2, -1 + n3, n4, 1, 1, 0, 
     2, n9, 1, 1 + n11, 1 + n12, 0, 1]/(1 - n3) + 
   ((-1 - n12)*j[p4a, n1, -1 + n2, -1 + n3, n4, 1, 1, 1, 0, n9, 1, 1 + n11, 
      2 + n12, 0, 1])/(-1 + n3) + 
   ((1 + n11)*j[p4a, n1, -1 + n2, -1 + n3, n4, 1, 1, 1, 1, n9, 0, 2 + n11, 
      1 + n12, 0, 1])/(-1 + n3) + 
   ((2 + n11 + n12 - n3)*j[p4a, n1, -1 + n2, -1 + n3, n4, 1, 1, 1, 1, n9, 1, 
      1 + n11, 1 + n12, 0, 1])/(-1 + n3) + 
   ((-1 - n12)*j[p4a, n1, -1 + n2, -1 + n3, n4, 1, 1, 1, 1, n9, 1, 1 + n11, 
      2 + n12, -1, 1])/(-1 + n3) + 
   ((-1 - n12)*j[p4a, n1, -1 + n2, -1 + n3, n4, 1, 1, 1, 1, n9, 1, 1 + n11, 
      2 + n12, 0, 1])/(-1 + n3) + j[p4a, n1, -1 + n2, -1 + n3, n4, 1, 1, 2, 
     1, n9, 0, 1 + n11, 1 + n12, 0, 1]/(1 - n3) - 
   (n4*j[p4a, n1, -1 + n2, -1 + n3, 1 + n4, 1, 0, 1, 1, n9, 1, 1 + n11, 
      1 + n12, 0, 1])/(-1 + n3) - 
   (n4*j[p4a, n1, -1 + n2, -1 + n3, 1 + n4, 1, 1, 0, 1, n9, 1, 1 + n11, 
      1 + n12, 0, 1])/(-1 + n3) + 
   (n4*j[p4a, n1, -1 + n2, -1 + n3, 1 + n4, 1, 1, 1, 1, -1 + n9, 1, 1 + n11, 
      1 + n12, 0, 1])/(-1 + n3) - 
   (n4*j[p4a, n1, -1 + n2, -1 + n3, 1 + n4, 1, 1, 1, 1, n9, 0, 1 + n11, 
      1 + n12, 0, 1])/(-1 + n3) + 
   (n4*j[p4a, n1, -1 + n2, -1 + n3, 1 + n4, 1, 1, 1, 1, n9, 1, n11, 1 + n12, 
      0, 1])/(-1 + n3) + j[p4a, n1, -1 + n2, n3, n4, 1, 1, 1, 0, n9, 1, 
    1 + n11, 1 + n12, 0, 1] - j[p4a, n1, -1 + n2, n3, n4, 1, 1, 1, 1, n9, 0, 
    1 + n11, 1 + n12, 0, 1] - j[p4a, n1, -1 + n2, n3, n4, 1, 1, 1, 1, n9, 1, 
    1 + n11, n12, 0, 1] + j[p4a, n1, -1 + n2, n3, n4, 1, 1, 1, 1, n9, 1, 
    1 + n11, 1 + n12, -1, 1] + j[p4a, n1, -1 + n2, n3, n4, 1, 1, 1, 1, n9, 1, 
    1 + n11, 1 + n12, 0, 1] + ((-1 - n12)*j[p4a, n1, n2, -2 + n3, n4, 1, 1, 
      1, 1, n9, 1, n11, 2 + n12, 0, 1])/(-1 + n3) + 
   (2*(1 + n12)*j[p4a, n1, n2, -1 + n3, n4, 1, 1, 0, 1, n9, 1, n11, 2 + n12, 
      0, 1])/(-1 + n3) + (n11*j[p4a, n1, n2, -1 + n3, n4, 1, 1, 0, 1, n9, 1, 
      1 + n11, 1 + n12, 0, 1])/(-1 + n3) + 
   j[p4a, n1, n2, -1 + n3, n4, 1, 1, 0, 2, n9, 1, n11, 1 + n12, 0, 1]/
    (-1 + n3) + (2*(1 + n12)*j[p4a, n1, n2, -1 + n3, n4, 1, 1, 1, 0, n9, 1, 
      n11, 2 + n12, 0, 1])/(-1 + n3) + 
   (n11*j[p4a, n1, n2, -1 + n3, n4, 1, 1, 1, 0, n9, 1, 1 + n11, 1 + n12, 0, 
      1])/(-1 + n3) - (n11*j[p4a, n1, n2, -1 + n3, n4, 1, 1, 1, 1, n9, 0, 
      1 + n11, 1 + n12, 0, 1])/(-1 + n3) + 
   ((6 - 2*d + 2*n11 + n12 + n3 + 2*n4)*j[p4a, n1, n2, -1 + n3, n4, 1, 1, 1, 
      1, n9, 1, n11, 1 + n12, 0, 1])/(-1 + n3) + 
   j[p4a, n1, n2, -1 + n3, n4, 1, 1, 2, 0, n9, 1, n11, 1 + n12, 0, 1]/
    (-1 + n3) - (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, 0, 1, 1, 1, n9, 1, n11, 
      1 + n12, 0, 1])/(-1 + n3) - 
   (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, 1, 0, 1, 1, n9, 1, n11, 1 + n12, 0, 
      1])/(-1 + n3) + (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, 1, 1, 0, 1, n9, 1, 
      n11, 1 + n12, 0, 1])/(-1 + n3) + 
   (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, 1, 1, 1, 0, n9, 1, n11, 1 + n12, 0, 
      1])/(-1 + n3) + 2*j[p4a, n1, n2, n3, n4, 1, 1, 0, 1, n9, 1, n11, 
     1 + n12, 0, 1] + 2*j[p4a, n1, n2, n3, n4, 1, 1, 1, 0, n9, 1, n11, 
     1 + n12, 0, 1], j[p4a, (n1_)?Positive, (n2_)?Positive, 
    (n3_)?NonPositive, (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, 
    (n7_)?Positive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, 
    (n11_)?NonPositive, (n12_)?NonPositive, (n13_)?NonPositive, 
    (n14_)?Positive] /; n10 == 1 && n14 == 1 && n4 == 0 && n5 == 1 && 
    n6 == 1 && n7 == 1 && n8 == 1 &&  !(n11 == 0 || n12 == 0) -> 
  j[p4a, -1 + n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 2, n9, 1, 1 + n11, 1 + n12, 
     n13, 1]/(1 - n3) - j[p4a, -1 + n1, -1 + n2, n3, 0, 1, 1, 1, 1, n9, 1, 
    1 + n11, 1 + n12, n13, 1] - 
   (n11*j[p4a, -1 + n1, n2, -1 + n3, 0, 1, 1, 1, 1, n9, 1, 1 + n11, 1 + n12, 
      n13, 1])/(-1 + n3) + ((1 + n12)*j[p4a, n1, -2 + n2, -1 + n3, 0, 1, 1, 
      1, 1, n9, 1, 1 + n11, 2 + n12, n13, 1])/(-1 + n3) + 
   j[p4a, n1, -2 + n2, -1 + n3, 0, 1, 1, 1, 2, n9, 1, 1 + n11, 1 + n12, n13, 
     1]/(-1 + n3) + ((1 + n12)*j[p4a, n1, -1 + n2, -2 + n3, 0, 1, 1, 1, 1, 
      n9, 1, 1 + n11, 2 + n12, n13, 1])/(-1 + n3) - 
   (2*(1 + n12)*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 0, 1, n9, 1, 1 + n11, 
      2 + n12, n13, 1])/(-1 + n3) + 
   ((-1 - n11)*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 0, 1, n9, 1, 2 + n11, 
      1 + n12, n13, 1])/(-1 + n3) + j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 0, 
     2, n9, 1, 1 + n11, 1 + n12, n13, 1]/(1 - n3) + 
   ((-1 - n12)*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 0, n9, 1, 1 + n11, 
      2 + n12, n13, 1])/(-1 + n3) + 
   ((1 + n11)*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 1, n9, 0, 2 + n11, 
      1 + n12, n13, 1])/(-1 + n3) + 
   ((2 + n11 + n12 - n3)*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 1, n9, 1, 
      1 + n11, 1 + n12, n13, 1])/(-1 + n3) + 
   ((-1 - n12)*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 1, n9, 1, 1 + n11, 
      2 + n12, -1 + n13, 1])/(-1 + n3) + 
   ((-1 - n12)*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 1, n9, 1, 1 + n11, 
      2 + n12, n13, 1])/(-1 + n3) + j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 2, 
     1, n9, 0, 1 + n11, 1 + n12, n13, 1]/(1 - n3) + 
   j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 0, n9, 1, 1 + n11, 1 + n12, n13, 1] - 
   j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 1, n9, 0, 1 + n11, 1 + n12, n13, 1] - 
   j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 1, n9, 1, 1 + n11, n12, n13, 1] + 
   j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 1, n9, 1, 1 + n11, 1 + n12, -1 + n13, 
    1] + j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 1, n9, 1, 1 + n11, 1 + n12, n13, 
    1] + ((-1 - n12)*j[p4a, n1, n2, -2 + n3, 0, 1, 1, 1, 1, n9, 1, n11, 
      2 + n12, n13, 1])/(-1 + n3) + 
   (2*(1 + n12)*j[p4a, n1, n2, -1 + n3, 0, 1, 1, 0, 1, n9, 1, n11, 2 + n12, 
      n13, 1])/(-1 + n3) + (n11*j[p4a, n1, n2, -1 + n3, 0, 1, 1, 0, 1, n9, 1, 
      1 + n11, 1 + n12, n13, 1])/(-1 + n3) + 
   j[p4a, n1, n2, -1 + n3, 0, 1, 1, 0, 2, n9, 1, n11, 1 + n12, n13, 1]/
    (-1 + n3) + (2*(1 + n12)*j[p4a, n1, n2, -1 + n3, 0, 1, 1, 1, 0, n9, 1, 
      n11, 2 + n12, n13, 1])/(-1 + n3) + 
   (n11*j[p4a, n1, n2, -1 + n3, 0, 1, 1, 1, 0, n9, 1, 1 + n11, 1 + n12, n13, 
      1])/(-1 + n3) - (n11*j[p4a, n1, n2, -1 + n3, 0, 1, 1, 1, 1, n9, 0, 
      1 + n11, 1 + n12, n13, 1])/(-1 + n3) + 
   ((6 - 2*d + 2*n11 + n12 + n3)*j[p4a, n1, n2, -1 + n3, 0, 1, 1, 1, 1, n9, 
      1, n11, 1 + n12, n13, 1])/(-1 + n3) + 
   j[p4a, n1, n2, -1 + n3, 0, 1, 1, 2, 0, n9, 1, n11, 1 + n12, n13, 1]/
    (-1 + n3) + 2*j[p4a, n1, n2, n3, 0, 1, 1, 0, 1, n9, 1, n11, 1 + n12, n13, 
     1] + 2*j[p4a, n1, n2, n3, 0, 1, 1, 1, 0, n9, 1, n11, 1 + n12, n13, 1], 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; 
   n10 == 1 && n12 == 0 && n13 == 0 && n4 == 0 && n5 == 1 && n7 == 1 && 
    n8 == 1 && n9 == 0 && n14 != 1 -> 
  (2*n3*n6*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1 + n6, 1, 1, 0, 1, n11, 0, 0, 
      -1 + n14])/((d - 2*n14)*(-1 + n14)) - 
   (2*n11*n6*j[p4a, n1, n2, n3, 0, 1, 1 + n6, 0, 1, 0, 1, 1 + n11, 0, 0, 
      -1 + n14])/((d - 2*n14)*(-1 + n14)) + 
   (2*n11*n6*j[p4a, n1, n2, n3, 0, 1, 1 + n6, 1, 1, 0, 0, 1 + n11, 0, 0, 
      -1 + n14])/((d - 2*n14)*(-1 + n14)) + 
   ((-14*n6 + 5*d*n6 - 2*n1*n6 - 2*n11*n6 - 4*n2*n6 - 2*n6^2)*
     j[p4a, n1, n2, n3, 0, 1, 1 + n6, 1, 1, 0, 1, n11, 0, 0, -1 + n14])/
    ((d - 2*n14)*(-1 + n14)) + 
   ((-4 + d)*j[p4a, n1, n2, n3, 0, 2, n6, 1, 1, 0, 1, n11, 0, 0, -1 + n14])/
    ((d - 2*n14)*(-1 + n14)) - 
   (2*n3*n6*j[p4a, n1, n2, 1 + n3, 0, 1, 1 + n6, 0, 1, 0, 1, n11, 0, 0, 
      -1 + n14])/((d - 2*n14)*(-1 + n14)) - 
   (4*n3*n6*j[p4a, n1, n2, 1 + n3, 0, 1, 1 + n6, 1, 0, 0, 1, n11, 0, 0, 
      -1 + n14])/((d - 2*n14)*(-1 + n14)) + 
   (2*n3*n6*j[p4a, n1, n2, 1 + n3, 0, 1, 1 + n6, 1, 1, 0, 1, n11, -1, 0, 
      -1 + n14])/((d - 2*n14)*(-1 + n14)) - 
   (2*n3*n6*j[p4a, n1, n2, 1 + n3, 0, 1, 1 + n6, 1, 1, 0, 1, n11, 0, -1, 
      -1 + n14])/((d - 2*n14)*(-1 + n14)) - 
   (2*n1*n6*j[p4a, 1 + n1, -1 + n2, n3, 0, 1, 1 + n6, 1, 1, 0, 1, n11, 0, 0, 
      -1 + n14])/((d - 2*n14)*(-1 + n14)) + 
   (2*n1*n6*j[p4a, 1 + n1, n2, n3, 0, 1, 1 + n6, 1, 1, 0, 0, n11, 0, 0, 
      -1 + n14])/((d - 2*n14)*(-1 + n14)), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; 
   n10 == 1 && n13 == 0 && n14 == 1 && n4 == 0 && n5 == 1 && n7 == 1 && 
    n8 == 1 && n9 == 0 &&  !(n11 == 0 || n12 == 0) -> 
  j[p4a, -1 + n1, -1 + n2, -1 + n3, 0, 1, n6, 1, 2, 0, 1, 1 + n11, 1 + n12, 
     0, 1]/(1 - n3) - j[p4a, -1 + n1, -1 + n2, n3, 0, 1, n6, 1, 1, 0, 1, 
    1 + n11, 1 + n12, 0, 1] - (n11*j[p4a, -1 + n1, n2, -1 + n3, 0, 1, n6, 1, 
      1, 0, 1, 1 + n11, 1 + n12, 0, 1])/(-1 + n3) + 
   ((1 + n12)*j[p4a, n1, -2 + n2, -1 + n3, 0, 1, n6, 1, 1, 0, 1, 1 + n11, 
      2 + n12, 0, 1])/(-1 + n3) + j[p4a, n1, -2 + n2, -1 + n3, 0, 1, n6, 1, 
     2, 0, 1, 1 + n11, 1 + n12, 0, 1]/(-1 + n3) + 
   ((1 + n12)*j[p4a, n1, -1 + n2, -2 + n3, 0, 1, n6, 1, 1, 0, 1, 1 + n11, 
      2 + n12, 0, 1])/(-1 + n3) - 
   (2*(1 + n12)*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, n6, 0, 1, 0, 1, 1 + n11, 
      2 + n12, 0, 1])/(-1 + n3) + 
   ((-1 - n11)*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, n6, 0, 1, 0, 1, 2 + n11, 
      1 + n12, 0, 1])/(-1 + n3) + j[p4a, n1, -1 + n2, -1 + n3, 0, 1, n6, 0, 
     2, 0, 1, 1 + n11, 1 + n12, 0, 1]/(1 - n3) + 
   ((-1 - n12)*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, n6, 1, 0, 0, 1, 1 + n11, 
      2 + n12, 0, 1])/(-1 + n3) + 
   ((1 + n11)*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, n6, 1, 1, 0, 0, 2 + n11, 
      1 + n12, 0, 1])/(-1 + n3) + 
   ((2 + n11 + n12 - n3)*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, n6, 1, 1, 0, 1, 
      1 + n11, 1 + n12, 0, 1])/(-1 + n3) + 
   ((-1 - n12)*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, n6, 1, 1, 0, 1, 1 + n11, 
      2 + n12, -1, 1])/(-1 + n3) + 
   ((-1 - n12)*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, n6, 1, 1, 0, 1, 1 + n11, 
      2 + n12, 0, 1])/(-1 + n3) + j[p4a, n1, -1 + n2, -1 + n3, 0, 1, n6, 2, 
     1, 0, 0, 1 + n11, 1 + n12, 0, 1]/(1 - n3) + j[p4a, n1, -1 + n2, n3, 0, 
    1, n6, 1, 0, 0, 1, 1 + n11, 1 + n12, 0, 1] - j[p4a, n1, -1 + n2, n3, 0, 
    1, n6, 1, 1, 0, 0, 1 + n11, 1 + n12, 0, 1] - j[p4a, n1, -1 + n2, n3, 0, 
    1, n6, 1, 1, 0, 1, 1 + n11, n12, 0, 1] + j[p4a, n1, -1 + n2, n3, 0, 1, 
    n6, 1, 1, 0, 1, 1 + n11, 1 + n12, -1, 1] + j[p4a, n1, -1 + n2, n3, 0, 1, 
    n6, 1, 1, 0, 1, 1 + n11, 1 + n12, 0, 1] + 
   ((-1 - n12)*j[p4a, n1, n2, -2 + n3, 0, 1, n6, 1, 1, 0, 1, n11, 2 + n12, 0, 
      1])/(-1 + n3) + (2*(1 + n12)*j[p4a, n1, n2, -1 + n3, 0, 1, n6, 0, 1, 0, 
      1, n11, 2 + n12, 0, 1])/(-1 + n3) + 
   (n11*j[p4a, n1, n2, -1 + n3, 0, 1, n6, 0, 1, 0, 1, 1 + n11, 1 + n12, 0, 
      1])/(-1 + n3) + j[p4a, n1, n2, -1 + n3, 0, 1, n6, 0, 2, 0, 1, n11, 
     1 + n12, 0, 1]/(-1 + n3) + 
   (2*(1 + n12)*j[p4a, n1, n2, -1 + n3, 0, 1, n6, 1, 0, 0, 1, n11, 2 + n12, 
      0, 1])/(-1 + n3) + (n11*j[p4a, n1, n2, -1 + n3, 0, 1, n6, 1, 0, 0, 1, 
      1 + n11, 1 + n12, 0, 1])/(-1 + n3) - 
   (n11*j[p4a, n1, n2, -1 + n3, 0, 1, n6, 1, 1, 0, 0, 1 + n11, 1 + n12, 0, 
      1])/(-1 + n3) + ((6 - 2*d + 2*n11 + n12 + n3)*
     j[p4a, n1, n2, -1 + n3, 0, 1, n6, 1, 1, 0, 1, n11, 1 + n12, 0, 1])/
    (-1 + n3) + j[p4a, n1, n2, -1 + n3, 0, 1, n6, 2, 0, 0, 1, n11, 1 + n12, 
     0, 1]/(-1 + n3) + 2*j[p4a, n1, n2, n3, 0, 1, n6, 0, 1, 0, 1, n11, 
     1 + n12, 0, 1] + 2*j[p4a, n1, n2, n3, 0, 1, n6, 1, 0, 0, 1, n11, 
     1 + n12, 0, 1], j[p4a, (n1_)?Positive, (n2_)?Positive, 
    (n3_)?NonPositive, (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, 
    (n7_)?Positive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, 
    (n11_)?NonPositive, (n12_)?NonPositive, (n13_)?NonPositive, 
    (n14_)?Positive] /; n10 == 1 && n12 == 0 && n13 == 0 && n14 == 1 && 
    n5 == 1 && n6 == 1 && n7 == 1 && n8 == 1 &&  !(n11 == 0 || n4 == 0) -> 
  j[p4a, -1 + n1, -1 + n2, n3, n4, 1, 1, 1, 2, n9, 1, 1 + n11, 0, 0, 1]/
    (-2 + d - n1 - 2*n2) + (n4*j[p4a, -1 + n1, -1 + n2, n3, 1 + n4, 1, 1, 1, 
      1, n9, 1, 1 + n11, 0, 0, 1])/(-2 + d - n1 - 2*n2) + 
   (n3*j[p4a, -1 + n1, -1 + n2, 1 + n3, n4, 1, 1, 1, 1, n9, 1, 1 + n11, 0, 0, 
      1])/(-2 + d - n1 - 2*n2) + 
   (n11*j[p4a, -1 + n1, n2, n3, n4, 1, 1, 1, 1, n9, 1, 1 + n11, 0, 0, 1])/
    (-2 + d - n1 - 2*n2) + j[p4a, n1, -2 + n2, n3, n4, 1, 1, 1, 2, n9, 1, 
     1 + n11, 0, 0, 1]/(2 - d + n1 + 2*n2) - 
   (n4*j[p4a, n1, -2 + n2, n3, 1 + n4, 1, 1, 1, 1, n9, 1, 1 + n11, 0, 0, 1])/
    (-2 + d - n1 - 2*n2) + j[p4a, n1, -2 + n2, n3, 1 + n4, 1, 1, 1, 2, n9, 1, 
     n11, 0, 0, 1]/(-2 + d - n1 - 2*n2) + 
   j[p4a, n1, -2 + n2, n3, 1 + n4, 2, 1, 1, 1, n9, 1, n11, 0, 0, 1]/
    (2 - d + n1 + 2*n2) + (n3*j[p4a, n1, -2 + n2, 1 + n3, 1 + n4, 1, 1, 1, 1, 
      n9, 1, n11, 0, 0, 1])/(-2 + d - n1 - 2*n2) + 
   ((1 + n11)*j[p4a, n1, -1 + n2, n3, n4, 1, 1, 0, 1, n9, 1, 2 + n11, 0, 0, 
      1])/(-2 + d - n1 - 2*n2) + j[p4a, n1, -1 + n2, n3, n4, 1, 1, 0, 2, n9, 
     1, 1 + n11, 0, 0, 1]/(-2 + d - n1 - 2*n2) + 
   ((-1 - n11)*j[p4a, n1, -1 + n2, n3, n4, 1, 1, 1, 1, n9, 0, 2 + n11, 0, 0, 
      1])/(-2 + d - n1 - 2*n2) + 
   ((-n11 + n3)*j[p4a, n1, -1 + n2, n3, n4, 1, 1, 1, 1, n9, 1, 1 + n11, 0, 0, 
      1])/(-2 + d - n1 - 2*n2) + j[p4a, n1, -1 + n2, n3, n4, 1, 1, 2, 1, n9, 
     0, 1 + n11, 0, 0, 1]/(-2 + d - n1 - 2*n2) + 
   (n4*j[p4a, n1, -1 + n2, n3, 1 + n4, 1, 0, 1, 1, n9, 1, 1 + n11, 0, 0, 1])/
    (-2 + d - n1 - 2*n2) + j[p4a, n1, -1 + n2, n3, 1 + n4, 1, 0, 1, 2, n9, 1, 
     n11, 0, 0, 1]/(2 - d + n1 + 2*n2) + 
   (n4*j[p4a, n1, -1 + n2, n3, 1 + n4, 1, 1, 0, 1, n9, 1, 1 + n11, 0, 0, 1])/
    (-2 + d - n1 - 2*n2) + j[p4a, n1, -1 + n2, n3, 1 + n4, 1, 1, 0, 2, n9, 1, 
     n11, 0, 0, 1]/(2 - d + n1 + 2*n2) - 
   (n4*j[p4a, n1, -1 + n2, n3, 1 + n4, 1, 1, 1, 1, -1 + n9, 1, 1 + n11, 0, 0, 
      1])/(-2 + d - n1 - 2*n2) + 
   (n4*j[p4a, n1, -1 + n2, n3, 1 + n4, 1, 1, 1, 1, n9, 0, 1 + n11, 0, 0, 1])/
    (-2 + d - n1 - 2*n2) - (n4*j[p4a, n1, -1 + n2, n3, 1 + n4, 1, 1, 1, 1, 
      n9, 1, n11, 0, 0, 1])/(-2 + d - n1 - 2*n2) + 
   j[p4a, n1, -1 + n2, n3, 1 + n4, 2, 0, 1, 1, n9, 1, n11, 0, 0, 1]/
    (-2 + d - n1 - 2*n2) + j[p4a, n1, -1 + n2, n3, 1 + n4, 2, 1, 0, 1, n9, 1, 
     n11, 0, 0, 1]/(-2 + d - n1 - 2*n2) + 
   ((1 + n4)*j[p4a, n1, -1 + n2, n3, 2 + n4, 0, 1, 1, 1, n9, 1, n11, 0, 0, 
      1])/(-2 + d - n1 - 2*n2) + 
   ((1 + n4)*j[p4a, n1, -1 + n2, n3, 2 + n4, 1, 0, 1, 1, n9, 1, n11, 0, 0, 
      1])/(-2 + d - n1 - 2*n2) + 
   ((-1 - n4)*j[p4a, n1, -1 + n2, n3, 2 + n4, 1, 1, 0, 1, n9, 1, n11, 0, 0, 
      1])/(-2 + d - n1 - 2*n2) + 
   ((-1 - n4)*j[p4a, n1, -1 + n2, n3, 2 + n4, 1, 1, 1, 0, n9, 1, n11, 0, 0, 
      1])/(-2 + d - n1 - 2*n2) - 
   (n3*j[p4a, n1, -1 + n2, 1 + n3, n4, 1, 1, 1, 0, n9, 1, 1 + n11, 0, 0, 1])/
    (-2 + d - n1 - 2*n2) + (n3*j[p4a, n1, -1 + n2, 1 + n3, n4, 1, 1, 1, 1, 
      n9, 0, 1 + n11, 0, 0, 1])/(-2 + d - n1 - 2*n2) + 
   (n3*j[p4a, n1, -1 + n2, 1 + n3, n4, 1, 1, 1, 1, n9, 1, 1 + n11, -1, 0, 1])/
    (-2 + d - n1 - 2*n2) - (n3*j[p4a, n1, -1 + n2, 1 + n3, n4, 1, 1, 1, 1, 
      n9, 1, 1 + n11, 0, -1, 1])/(-2 + d - n1 - 2*n2) - 
   (n3*j[p4a, n1, -1 + n2, 1 + n3, n4, 1, 1, 1, 1, n9, 1, 1 + n11, 0, 0, 1])/
    (-2 + d - n1 - 2*n2) - (2*n3*j[p4a, n1, -1 + n2, 1 + n3, 1 + n4, 1, 1, 0, 
      1, n9, 1, n11, 0, 0, 1])/(-2 + d - n1 - 2*n2) - 
   (2*n3*j[p4a, n1, -1 + n2, 1 + n3, 1 + n4, 1, 1, 1, 0, n9, 1, n11, 0, 0, 
      1])/(-2 + d - n1 - 2*n2) + 
   (n3*j[p4a, n1, -1 + n2, 1 + n3, 1 + n4, 1, 1, 1, 1, n9, 1, n11, -1, 0, 1])/
    (-2 + d - n1 - 2*n2) - (n3*j[p4a, n1, -1 + n2, 1 + n3, 1 + n4, 1, 1, 1, 
      1, n9, 1, n11, 0, 0, 0])/(-2 + d - n1 - 2*n2) + 
   (n11*j[p4a, n1, n2, n3, n4, 1, 1, 0, 1, n9, 1, 1 + n11, 0, 0, 1])/
    (-2 + d - n1 - 2*n2) - (n11*j[p4a, n1, n2, n3, n4, 1, 1, 1, 0, n9, 1, 
      1 + n11, 0, 0, 1])/(-2 + d - n1 - 2*n2) - 
   (n11*j[p4a, n1, n2, n3, n4, 1, 1, 1, 1, n9, 0, 1 + n11, 0, 0, 1])/
    (-2 + d - n1 - 2*n2) + j[p4a, n1, n2, n3, n4, 1, 1, 2, 0, n9, 1, n11, 0, 
     0, 1]/(2 - d + n1 + 2*n2) + j[p4a, n1, n2, n3, n4, 2, 0, 1, 1, n9, 1, 
     n11, 0, 0, 1]/(2 - d + n1 + 2*n2) + 
   ((-1 + n2)*j[p4a, n1, n2, n3, 1 + n4, 0, 1, 1, 1, n9, 1, n11, 0, 0, 1])/
    (-2 + d - n1 - 2*n2) + ((1 - n2)*j[p4a, n1, n2, n3, 1 + n4, 1, 0, 1, 1, 
      n9, 1, n11, 0, 0, 1])/(-2 + d - n1 - 2*n2) + 
   ((-1 + n2)*j[p4a, n1, n2, n3, 1 + n4, 1, 1, 0, 1, n9, 1, n11, 0, 0, 1])/
    (-2 + d - n1 - 2*n2) + ((1 - n2)*j[p4a, n1, n2, n3, 1 + n4, 1, 1, 1, 0, 
      n9, 1, n11, 0, 0, 1])/(-2 + d - n1 - 2*n2) - 
   (n1*j[p4a, 1 + n1, -1 + n2, n3, n4, 1, 1, 1, 1, n9, 1, n11, 0, 0, 1])/
    (2 - d + n1 + 2*n2) - (n1*j[p4a, 1 + n1, -1 + n2, n3, 1 + n4, 0, 1, 1, 1, 
      n9, 1, n11, 0, 0, 1])/(2 - d + n1 + 2*n2) + 
   (n1*j[p4a, 1 + n1, -1 + n2, n3, 1 + n4, 1, 1, 1, 0, n9, 1, n11, 0, 0, 1])/
    (2 - d + n1 + 2*n2) + (n1*j[p4a, 1 + n1, -1 + n2, n3, 1 + n4, 1, 1, 1, 1, 
      -1 + n9, 1, n11, 0, 0, 1])/(2 - d + n1 + 2*n2) - 
   (n1*j[p4a, 1 + n1, -1 + n2, n3, 1 + n4, 1, 1, 1, 1, n9, 1, -1 + n11, 0, 0, 
      1])/(2 - d + n1 + 2*n2) + 
   (n1*j[p4a, 1 + n1, n2, n3, n4, 1, 1, 1, 1, n9, 0, n11, 0, 0, 1])/
    (2 - d + n1 + 2*n2), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 0 && n13 == 0 && n14 == 1 && n5 == 1 && n6 == 1 && 
    n7 == 1 && n8 == 1 &&  !(n12 == 0 || n4 == 0) -> 
  j[p4a, n1, -2 + n2, -1 + n3, 1 + n4, 1, 1, 2, 1, n9, 1, 0, 1 + n12, 0, 1]/
    (-1 + n3) + j[p4a, n1, -2 + n2, n3, 1 + n4, 1, 1, 1, 1, n9, 1, 0, 
    1 + n12, 0, 1] + ((-1 - n12)*j[p4a, n1, -1 + n2, -2 + n3, 1 + n4, 1, 1, 
      1, 1, n9, 1, 0, 2 + n12, 0, 1])/(-1 + n3) + 
   ((-1 - n12)*j[p4a, n1, -1 + n2, -1 + n3, 1 + n4, 0, 1, 1, 1, n9, 1, 0, 
      2 + n12, 0, 1])/(-1 + n3) + j[p4a, n1, -1 + n2, -1 + n3, 1 + n4, 0, 1, 
     2, 1, n9, 1, 0, 1 + n12, 0, 1]/(1 - n3) + 
   ((-1 - n12)*j[p4a, n1, -1 + n2, -1 + n3, 1 + n4, 1, 0, 1, 1, n9, 1, 0, 
      2 + n12, 0, 1])/(-1 + n3) + j[p4a, n1, -1 + n2, -1 + n3, 1 + n4, 1, 0, 
     1, 2, n9, 1, 0, 1 + n12, 0, 1]/(1 - n3) + 
   ((1 + n12)*j[p4a, n1, -1 + n2, -1 + n3, 1 + n4, 1, 1, 0, 1, n9, 1, 0, 
      2 + n12, 0, 1])/(-1 + n3) + 
   ((-2 - n12 + n3 + n4)*j[p4a, n1, -1 + n2, -1 + n3, 1 + n4, 1, 1, 1, 1, n9, 
      1, 0, 1 + n12, 0, 1])/(-1 + n3) + 
   ((1 + n12)*j[p4a, n1, -1 + n2, -1 + n3, 1 + n4, 1, 1, 1, 1, n9, 1, 0, 
      2 + n12, -1, 1])/(-1 + n3) + 
   ((1 + n12)*j[p4a, n1, -1 + n2, -1 + n3, 1 + n4, 1, 1, 1, 1, n9, 1, 0, 
      2 + n12, 0, 0])/(-1 + n3) + j[p4a, n1, -1 + n2, -1 + n3, 1 + n4, 1, 1, 
     2, 0, n9, 1, 0, 1 + n12, 0, 1]/(1 - n3) + 
   ((1 + n4)*j[p4a, n1, -1 + n2, -1 + n3, 2 + n4, 1, 0, 1, 1, n9, 1, 0, 
      1 + n12, 0, 1])/(-1 + n3) + 
   ((-1 - n4)*j[p4a, n1, -1 + n2, -1 + n3, 2 + n4, 1, 1, 1, 0, n9, 1, 0, 
      1 + n12, 0, 1])/(-1 + n3) - j[p4a, n1, -1 + n2, n3, 1 + n4, 1, 1, 0, 1, 
    n9, 1, 0, 1 + n12, 0, 1] - 2*j[p4a, n1, -1 + n2, n3, 1 + n4, 1, 1, 1, 0, 
     n9, 1, 0, 1 + n12, 0, 1] + j[p4a, n1, -1 + n2, n3, 1 + n4, 1, 1, 1, 1, 
    n9, 1, 0, n12, 0, 1] - j[p4a, n1, -1 + n2, n3, 1 + n4, 1, 1, 1, 1, n9, 1, 
    0, 1 + n12, -1, 1] - j[p4a, n1, -1 + n2, n3, 1 + n4, 1, 1, 1, 1, n9, 1, 
    0, 1 + n12, 0, 0] + ((-1 - n12)*j[p4a, n1, n2, -2 + n3, n4, 1, 1, 1, 1, 
      n9, 1, 0, 2 + n12, 0, 1])/(-1 + n3) + 
   (2*(1 + n12)*j[p4a, n1, n2, -1 + n3, n4, 1, 1, 0, 1, n9, 1, 0, 2 + n12, 0, 
      1])/(-1 + n3) + j[p4a, n1, n2, -1 + n3, n4, 1, 1, 0, 2, n9, 1, 0, 
     1 + n12, 0, 1]/(-1 + n3) + 
   (2*(1 + n12)*j[p4a, n1, n2, -1 + n3, n4, 1, 1, 1, 0, n9, 1, 0, 2 + n12, 0, 
      1])/(-1 + n3) + ((6 - 2*d + n12 + n3 + 2*n4)*j[p4a, n1, n2, -1 + n3, 
      n4, 1, 1, 1, 1, n9, 1, 0, 1 + n12, 0, 1])/(-1 + n3) + 
   j[p4a, n1, n2, -1 + n3, n4, 1, 1, 2, 0, n9, 1, 0, 1 + n12, 0, 1]/
    (-1 + n3) - (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, 0, 1, 1, 1, n9, 1, 0, 
      1 + n12, 0, 1])/(-1 + n3) - 
   (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, 1, 0, 1, 1, n9, 1, 0, 1 + n12, 0, 1])/
    (-1 + n3) + (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, 1, 1, 0, 1, n9, 1, 0, 
      1 + n12, 0, 1])/(-1 + n3) + 
   (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, 1, 1, 1, 0, n9, 1, 0, 1 + n12, 0, 1])/
    (-1 + n3) + 2*j[p4a, n1, n2, n3, n4, 1, 1, 0, 1, n9, 1, 0, 1 + n12, 0, 
     1] + 2*j[p4a, n1, n2, n3, n4, 1, 1, 1, 0, n9, 1, 0, 1 + n12, 0, 1], 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; 
   n10 == 1 && n12 == 0 && n14 == 1 && n4 == 0 && n5 == 1 && n6 == 1 && 
    n7 == 1 && n8 == 1 &&  !(n11 == 0 || n13 == -1 || n13 == 0 || n9 == 0) -> 
  ((-8*n9 + 3*d*n9 - n1*n9 - n11*n9 - n13*n9 - 2*n2*n9 - n3*n9 - n9^2)*
     j[p4a, -1 + n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, n11, 0, 
      2 + n13, 1])/((-1 + n3)*(1 - d + n1 + n3)) + 
   ((-4 + d - 2*n11)*j[p4a, -1 + n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 2, n9, 1, 
      1 + n11, 0, 1 + n13, 1])/(2*(-1 + d - n1 - n3)*(-1 + n3)) + 
   ((12 - 5*d + 2*n1 + 2*n11 + 2*n13 + 4*n2 + 2*n3)*
     j[p4a, -1 + n1, -1 + n2, -1 + n3, 0, 2, 1, 1, 1, 1 + n9, 1, n11, 0, 
      1 + n13, 1])/(2*(-1 + d - n1 - n3)*(-1 + n3)) + 
   ((-4 + d - n11)*j[p4a, -1 + n1, -1 + n2, n3, 0, 1, 1, 1, 1, n9, 1, 
      1 + n11, 0, 1 + n13, 1])/(2*(-1 + d - n1 - n3)) + 
   ((4 - d + n11)*j[p4a, n1, -2 + n2, -1 + n3, 0, 1, 1, 1, 2, n9, 1, 1 + n11, 
      0, 1 + n13, 1])/(2*(-1 + d - n1 - n3)*(-1 + n3)) + 
   ((-9 + 3*d - n1 - n11 - 2*n13 - 2*n2 - n3 - n9)*
     j[p4a, n1, -2 + n2, -1 + n3, 0, 1, 2, 1, 1, n9, 1, n11, 0, 2 + n13, 1])/
    ((-1 + n3)*(1 - d + n1 + n3)) + j[p4a, n1, -2 + n2, n3, 0, 1, 1, 2, 1, 
     n9, 1, n11, 0, 1 + n13, 1]/(2*(-1 + d - n1 - n3)) + 
   j[p4a, n1, -2 + n2, n3, 0, 2, 1, 1, 1, n9, 1, n11, 0, 1 + n13, 1]/
    (-1 + d - n1 - n3) + (n3*j[p4a, n1, -2 + n2, 1 + n3, 0, 1, 1, 1, 1, n9, 
      1, n11, 0, 1 + n13, 1])/(2*(1 - d + n1 + n3)) + 
   ((8 - 3*d + n1 + n11 + n13 + 2*n2 + n3 + n9)*j[p4a, n1, -1 + n2, -1 + n3, 
      0, 0, 1, 1, 1, n9, 1, n11, 0, 2 + n13, 2])/
    ((-1 + n3)*(1 - d + n1 + n3)) + 
   ((8*n9 - 3*d*n9 + n1*n9 + n11*n9 + n13*n9 + 2*n2*n9 + n3*n9 + n9^2)*
     j[p4a, n1, -1 + n2, -1 + n3, 0, 0, 1, 1, 1, 1 + n9, 1, n11, 0, 2 + n13, 
      1])/((-1 + n3)*(1 - d + n1 + n3)) + 
   ((8 - 3*d + n1 + n11 + n13 + 2*n2 + n3 + n9)*j[p4a, n1, -1 + n2, -1 + n3, 
      0, 0, 2, 1, 1, n9, 1, n11, 0, 2 + n13, 1])/
    ((-1 + n3)*(1 - d + n1 + n3)) + ((-4 + d - 5*n11 + d*n11 - n11^2)*
     j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 0, 1, n9, 1, 2 + n11, 0, 1 + n13, 
      1])/(2*(-1 + d - n1 - n3)*(-1 + n3)) + 
   ((-4 + d - n11)*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 0, 2, n9, 1, 
      1 + n11, 0, 1 + n13, 1])/(2*(-1 + d - n1 - n3)*(-1 + n3)) + 
   ((1 + n11)*(4 - d + n11)*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 1, n9, 
      0, 2 + n11, 0, 1 + n13, 1])/(2*(-1 + d - n1 - n3)*(-1 + n3)) + 
   ((35 - 21*d + 3*d^2 + 4*n1 - d*n1 + 4*n11 - d*n11 + 7*n13 - 2*d*n13 + 
      8*n2 - 2*d*n2 + 5*n3 - d*n3 + n13*n3 + 13*n9 - 4*d*n9 + n1*n9 + 
      n11*n9 + 2*n13*n9 + 2*n2*n9 + n3*n9 + n9^2)*j[p4a, n1, -1 + n2, 
      -1 + n3, 0, 1, 1, 1, 1, n9, 1, n11, 0, 2 + n13, 1])/
    ((-1 + n3)*(1 - d + n1 + n3)) + 
   ((4 - d + 5*n11 - d*n11 + n11^2 - 4*n3 + d*n3 - n11*n3)*
     j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 1, n9, 1, 1 + n11, 0, 1 + n13, 
      1])/(2*(-1 + d - n1 - n3)*(-1 + n3)) + 
   ((60 - 37*d + 5*d^2 + 10*n1 - 2*d*n1 + 10*n11 - 2*d*n11 + 10*n13 - 
      2*d*n13 + 20*n2 - 4*d*n2 + 10*n3 - 2*d*n3 + 28*n9 - 11*d*n9 + 4*n1*n9 + 
      4*n11*n9 + 4*n13*n9 + 8*n2*n9 + 4*n3*n9 + 2*n9^2)*
     j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, n11, 0, 1 + n13, 
      1])/(2*(-1 + n3)*(1 - d + n1 + n3)) + 
   ((-12 + 5*d - 2*n1 - 2*n11 - 2*n13 - 4*n2 - 2*n3 - 2*n9)*
     j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, n11, 0, 1 + n13, 
      2])/(2*(-1 + n3)*(1 - d + n1 + n3)) + 
   ((1 + n13)*n9*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, n11, 
      0, 2 + n13, 0])/((-1 + n3)*(1 - d + n1 + n3)) - 
   ((1 + n13)*n9*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, n11, 
      0, 2 + n13, 1])/((-1 + n3)*(1 - d + n1 + n3)) + 
   ((-4 + d)*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 2, 1, n9, 0, 1 + n11, 0, 
      1 + n13, 1])/(2*(-1 + d - n1 - n3)*(-1 + n3)) - 
   (n11*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 2, 0, 1, n9, 1, 1 + n11, 0, 
      1 + n13, 1])/((-1 + n3)*(1 - d + n1 + n3)) + 
   (n11*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 2, 1, 1, n9, 0, 1 + n11, 0, 
      1 + n13, 1])/((-1 + n3)*(1 - d + n1 + n3)) + 
   ((1 + n13)*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 2, 1, 1, n9, 1, n11, 0, 
      2 + n13, 0])/((-1 + n3)*(1 - d + n1 + n3)) + 
   ((12 - 5*d + 2*n1 + 2*n11 + 2*n13 + 4*n2 + 2*n3)*
     j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 2, 1, 1, 1 + n9, 0, n11, 0, 1 + n13, 
      1])/(2*(-1 + d - n1 - n3)*(-1 + n3)) + 
   ((1 + n13)*j[p4a, n1, -1 + n2, -1 + n3, 0, 2, 1, 1, 1, n9, 1, n11, 0, 
      2 + n13, 0])/((-1 + n3)*(1 - d + n1 + n3)) + 
   ((1 + n13)*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 0, 1, n9, 1, n11, 0, 2 + n13, 
      1])/(-1 + d - n1 - n3) + 
   (n11*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 0, 1, n9, 1, 1 + n11, 0, 1 + n13, 
      1])/(2*(-1 + d - n1 - n3)) + 
   ((1 + n13)*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 0, n9, 1, n11, 0, 2 + n13, 
      1])/(-1 + d - n1 - n3) + 
   ((4 - d + n11)*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 0, n9, 1, 1 + n11, 0, 
      1 + n13, 1])/(2*(-1 + d - n1 - n3)) + 
   ((-4 + d - 2*n11)*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 1, n9, 0, 1 + n11, 
      0, 1 + n13, 1])/(2*(-1 + d - n1 - n3)) + 
   ((-1 - n13)*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 1, n9, 1, n11, -1, 
      2 + n13, 1])/(-1 + d - n1 - n3) + 
   ((-13 + 5*d - 2*n1 - n11 - 4*n3 - 2*n9)*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 
      1, 1, n9, 1, n11, 0, 1 + n13, 1])/(2*(-1 + d - n1 - n3)) + 
   ((-4 + d - 2*n11)*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 1, n9, 1, 1 + n11, 
      -1, 1 + n13, 1])/(2*(-1 + d - n1 - n3)) + 
   ((4 - d + n11)*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 1, n9, 1, 1 + n11, 0, 
      n13, 1])/(2*(-1 + d - n1 - n3)) + 
   ((4 - d + 2*n11)*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 1, n9, 1, 1 + n11, 0, 
      1 + n13, 1])/(2*(-1 + d - n1 - n3)) - 
   (n9*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 1, 1 + n9, 1, n11, 0, 1 + n13, 0])/
    (-1 + d - n1 - n3) + (n9*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 1, 1 + n9, 
      1, n11, 0, 1 + n13, 1])/(-1 + d - n1 - n3) - 
   j[p4a, n1, -1 + n2, n3, 0, 1, 1, 2, 0, n9, 1, n11, 0, 1 + n13, 1]/
    (2*(-1 + d - n1 - n3)) + j[p4a, n1, -1 + n2, n3, 0, 1, 2, 1, 0, n9, 1, 
     n11, 0, 1 + n13, 1]/(-1 + d - n1 - n3) + 
   j[p4a, n1, -1 + n2, n3, 0, 1, 2, 1, 1, n9, 1, n11, 0, 1 + n13, 0]/
    (1 - d + n1 + n3) + j[p4a, n1, -1 + n2, n3, 0, 2, 0, 1, 1, n9, 1, n11, 0, 
     1 + n13, 1]/(1 - d + n1 + n3) - 
   (n3*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 0, 1, n9, 1, n11, 0, 1 + n13, 1])/
    (2*(1 - d + n1 + n3)) - (n3*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 0, 
      n9, 1, n11, 0, 1 + n13, 1])/(1 - d + n1 + n3) + 
   (n3*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, n9, 1, n11, -1, 1 + n13, 
      1])/(2*(1 - d + n1 + n3)) - 
   (n3*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, n9, 1, n11, 0, n13, 1])/
    (2*(1 - d + n1 + n3)) + ((1 + n13)*(3 - 2*d + n1 + n11 + 2*n2 + n3)*
     j[p4a, n1, n2, -2 + n3, 0, 1, 1, 1, 1, n9, 1, n11, 0, 2 + n13, 1])/
    ((-1 + n3)*(1 - d + n1 + n3)) - 
   ((1 + n13)*(3 - 2*d + n1 + n11 + 2*n2 + n3)*j[p4a, n1, n2, -1 + n3, 0, 1, 
      1, 0, 1, n9, 1, n11, 0, 2 + n13, 1])/((-1 + n3)*(1 - d + n1 + n3)) - 
   (n11*(7 - 3*d + n1 + 2*n11 + 2*n2 + n3)*j[p4a, n1, n2, -1 + n3, 0, 1, 1, 
      0, 1, n9, 1, 1 + n11, 0, 1 + n13, 1])/((-1 + n3)*(1 - d + n1 + n3)) + 
   ((4 - d + n11)*j[p4a, n1, n2, -1 + n3, 0, 1, 1, 0, 2, n9, 1, n11, 0, 
      1 + n13, 1])/((-1 + d - n1 - n3)*(-1 + n3)) - 
   ((1 + n13)*(3 - 2*d + n1 + n11 + 2*n2 + n3)*j[p4a, n1, n2, -1 + n3, 0, 1, 
      1, 1, 0, n9, 1, n11, 0, 2 + n13, 1])/((-1 + n3)*(1 - d + n1 + n3)) + 
   ((-7*n11 + 3*d*n11 - n1*n11 - 2*n11^2 - 2*n11*n2 - n11*n3)*
     j[p4a, n1, n2, -1 + n3, 0, 1, 1, 1, 1, n9, 0, 1 + n11, 0, 1 + n13, 1])/
    ((-1 + d - n1 - n3)*(-1 + n3)) + 
   ((1 + n13)*(3 - 2*d + n1 + n11 + 2*n2 + n3)*j[p4a, n1, n2, -1 + n3, 0, 1, 
      1, 1, 1, n9, 1, n11, -1, 2 + n13, 1])/((-1 + n3)*(1 - d + n1 + n3)) + 
   ((30 - 26*d + 5*d^2 + 10*n1 - 4*d*n1 + n1^2 + 16*n11 - 6*d*n11 + 
      2*n1*n11 + 2*n11^2 + 6*n13 - 4*d*n13 + 2*n1*n13 + 2*n11*n13 + 19*n2 - 
      8*d*n2 + 4*n1*n2 + 4*n11*n2 + 4*n13*n2 + 4*n2^2 + 10*n3 - 3*d*n3 + 
      n1*n3 + 2*n11*n3 + 2*n13*n3 + 3*n2*n3)*j[p4a, n1, n2, -1 + n3, 0, 1, 1, 
      1, 1, n9, 1, n11, 0, 1 + n13, 1])/((-1 + d - n1 - n3)*(-1 + n3)) + 
   ((3 - 2*d + n1 + n11 + 2*n2 + n3)*j[p4a, n1, n2, -1 + n3, 0, 2, 0, 1, 1, 
      n9, 1, n11, 0, 1 + n13, 1])/((-1 + n3)*(1 - d + n1 + n3)) + 
   ((8 - 3*d + n1 + 2*n11 + n2 + n3)*j[p4a, n1, n2, n3, 0, 1, 1, 0, 1, n9, 1, 
      n11, 0, 1 + n13, 1])/(-1 + d - n1 - n3) + 
   ((7 - 4*d + 2*n1 + 2*n11 + 3*n2 + 2*n3)*j[p4a, n1, n2, n3, 0, 1, 1, 1, 0, 
      n9, 1, n11, 0, 1 + n13, 1])/(-1 + d - n1 - n3) + 
   ((-4 + 2*d - n1 - n11 - n2 - n3)*j[p4a, n1, n2, n3, 0, 1, 1, 1, 1, n9, 1, 
      n11, -1, 1 + n13, 1])/(-1 + d - n1 - n3) - 
   (n1*j[p4a, 1 + n1, -2 + n2, -1 + n3, 0, 1, 2, 1, 1, n9, 1, n11, 0, 
      1 + n13, 1])/((-1 + n3)*(1 - d + n1 + n3)) - 
   (n1*j[p4a, 1 + n1, -2 + n2, n3, 0, 1, 1, 1, 1, n9, 1, n11, 0, 1 + n13, 1])/
    (1 - d + n1 + n3) - (n1*(3 - 2*d + n1 + n11 + 2*n2 + n3)*
     j[p4a, 1 + n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 1, n9, 1, n11, 0, 1 + n13, 
      1])/((-1 + n3)*(1 - d + n1 + n3)) + 
   (n1*j[p4a, 1 + n1, -1 + n2, -1 + n3, 0, 1, 2, 1, 1, n9, 0, n11, 0, 
      1 + n13, 1])/((-1 + n3)*(1 - d + n1 + n3)) + 
   (n1*j[p4a, 1 + n1, -1 + n2, n3, 0, 1, 1, 1, 1, n9, 0, n11, 0, 1 + n13, 1])/
    (1 - d + n1 + n3) + (n1*j[p4a, 1 + n1, -1 + n2, n3, 0, 1, 1, 1, 1, n9, 1, 
      n11, 0, n13, 1])/(1 - d + n1 + n3) - 
   (n1*j[p4a, 1 + n1, -1 + n2, n3, 0, 1, 1, 1, 1, n9, 1, n11, 0, 1 + n13, 1])/
    (1 - d + n1 + n3) + (n1*(3 - 2*d + n1 + n11 + 2*n2 + n3)*
     j[p4a, 1 + n1, n2, -1 + n3, 0, 1, 1, 1, 1, n9, 0, n11, 0, 1 + n13, 1])/
    ((-1 + n3)*(1 - d + n1 + n3)), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 0 && n14 == 1 && n4 == 0 && n5 == 1 && n6 == 1 && 
    n7 == 1 && n8 == 1 &&  !(n12 == 0 || n9 == 0) -> 
  (n13*j[p4a, -1 + n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, 
      1 + n12, 1 + n13, 1])/(-1 + n3) + 
   (2*j[p4a, -1 + n1, -1 + n2, -1 + n3, 0, 2, 1, 1, 1, 1 + n9, 1, 0, 1 + n12, 
      n13, 1])/(-1 + n3) - (n13*j[p4a, -1 + n1, n2, -2 + n3, 0, 1, 1, 1, 1, 
      1 + n9, 1, 0, 1 + n12, 1 + n13, 1])/(-1 + n3) + 
   ((-1 - n12)*j[p4a, -1 + n1, n2, -2 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, 
      2 + n12, n13, 1])/(-1 + n3) + 
   ((1 + n12)*j[p4a, -1 + n1, n2, -1 + n3, -1, 1, 1, 1, 1, 1 + n9, 1, 0, 
      2 + n12, n13, 1])/(-1 + n3) - 
   (n13*j[p4a, -1 + n1, n2, -1 + n3, 0, 0, 1, 1, 1, 1 + n9, 1, 0, 1 + n12, 
      1 + n13, 1])/(-1 + n3) + 
   ((-1 - n12)*j[p4a, -1 + n1, n2, -1 + n3, 0, 0, 1, 1, 1, 1 + n9, 1, 0, 
      2 + n12, n13, 1])/(-1 + n3) + 
   ((-1 - n12)*j[p4a, -1 + n1, n2, -1 + n3, 0, 1, 0, 1, 1, 1 + n9, 1, 0, 
      2 + n12, n13, 1])/(-1 + n3) + j[p4a, -1 + n1, n2, -1 + n3, 0, 1, 0, 1, 
     1, 1 + n9, 2, 0, 1 + n12, n13, 1]/(1 - n3) + 
   (n13*j[p4a, -1 + n1, n2, -1 + n3, 0, 1, 1, 0, 1, 1 + n9, 1, 0, 1 + n12, 
      1 + n13, 1])/(-1 + n3) + 
   ((1 + n12)*j[p4a, -1 + n1, n2, -1 + n3, 0, 1, 1, 0, 1, 1 + n9, 1, 0, 
      2 + n12, n13, 1])/(-1 + n3) + 
   (n13*j[p4a, -1 + n1, n2, -1 + n3, 0, 1, 1, 1, 0, 1 + n9, 1, 0, 1 + n12, 
      1 + n13, 1])/(-1 + n3) - 
   (n13*j[p4a, -1 + n1, n2, -1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, n12, 
      1 + n13, 1])/(-1 + n3) + ((-4 + d - n12 + n13 - n3)*
     j[p4a, -1 + n1, n2, -1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, 1 + n12, n13, 
      1])/(-1 + n3) + (n13*j[p4a, -1 + n1, n2, -1 + n3, 0, 1, 1, 1, 1, 
      1 + n9, 1, 0, 1 + n12, 1 + n13, 0])/(-1 + n3) + 
   ((1 + n12)*j[p4a, -1 + n1, n2, -1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, 
      2 + n12, -1 + n13, 1])/(-1 + n3) + 
   ((1 + n12)*j[p4a, -1 + n1, n2, -1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, 
      2 + n12, n13, 0])/(-1 + n3) + j[p4a, -1 + n1, n2, -1 + n3, 0, 2, 0, 1, 
     1, 1 + n9, 1, 0, 1 + n12, n13, 1]/(1 - n3) - 
   j[p4a, -1 + n1, n2, n3, -1, 1, 1, 1, 1, 1 + n9, 1, 0, 1 + n12, n13, 1] + 
   j[p4a, -1 + n1, n2, n3, 0, 1, 1, 0, 1, 1 + n9, 1, 0, 1 + n12, n13, 1] + 
   2*j[p4a, -1 + n1, n2, n3, 0, 1, 1, 1, 0, 1 + n9, 1, 0, 1 + n12, n13, 1] - 
   j[p4a, -1 + n1, n2, n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, n12, n13, 1] + 
   j[p4a, -1 + n1, n2, n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, 1 + n12, -1 + n13, 
    1] + j[p4a, -1 + n1, n2, n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, 1 + n12, n13, 
    0] + ((1 + n12)*j[p4a, n1, -2 + n2, -1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, 
      2 + n12, n13, 1])/(-1 + n3) - 
   (2*j[p4a, n1, -2 + n2, -1 + n3, 0, 2, 1, 1, 1, 1 + n9, 1, 0, 1 + n12, n13, 
      1])/(-1 + n3) + j[p4a, n1, -2 + n2, n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, 
    1 + n12, n13, 1] + (2*n13*j[p4a, n1, -1 + n2, -2 + n3, 0, 1, 1, 1, 1, 
      1 + n9, 1, 0, 1 + n12, 1 + n13, 1])/(-1 + n3) + 
   (2*(1 + n12)*j[p4a, n1, -1 + n2, -2 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, 
      2 + n12, n13, 1])/(-1 + n3) + 
   ((-1 - n12)*j[p4a, n1, -1 + n2, -1 + n3, -1, 1, 1, 1, 1, 1 + n9, 1, 0, 
      2 + n12, n13, 1])/(-1 + n3) + 
   (n13*j[p4a, n1, -1 + n2, -1 + n3, 0, 0, 1, 1, 1, 1 + n9, 1, 0, 1 + n12, 
      1 + n13, 1])/(-1 + n3) + 
   ((1 + n12)*j[p4a, n1, -1 + n2, -1 + n3, 0, 0, 1, 1, 1, 1 + n9, 1, 0, 
      2 + n12, n13, 1])/(-1 + n3) + 
   ((1 + n12)*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 0, 1, 1, 1 + n9, 1, 0, 
      2 + n12, n13, 1])/(-1 + n3) + j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 0, 1, 
     1, 1 + n9, 2, 0, 1 + n12, n13, 1]/(-1 + n3) - 
   (2*n13*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 0, 1, 1 + n9, 1, 0, 1 + n12, 
      1 + n13, 1])/(-1 + n3) - 
   (3*(1 + n12)*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 0, 1, 1 + n9, 1, 0, 
      2 + n12, n13, 1])/(-1 + n3) - 
   (2*n13*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 0, 1 + n9, 1, 0, 1 + n12, 
      1 + n13, 1])/(-1 + n3) + 
   ((-1 - n12)*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 0, 1 + n9, 1, 0, 
      2 + n12, n13, 1])/(-1 + n3) + 
   ((-1 - n12)*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 1, n9, 1, 0, 2 + n12, 
      n13, 1])/(-1 + n3) + ((1 + n12)*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 
      1, 1, 1 + n9, 1, -1, 2 + n12, n13, 1])/(-1 + n3) + 
   (2*n13*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, n12, 
      1 + n13, 1])/(-1 + n3) - (2*(-3 + d - n1 - n12 + n13 - n3)*
     j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, 1 + n12, n13, 
      1])/(-1 + n3) - (n13*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 1, 
      1 + n9, 1, 0, 1 + n12, 1 + n13, 0])/(-1 + n3) - 
   (n13*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, 1 + n12, 
      1 + n13, 1])/(-1 + n3) - 
   (2*(1 + n12)*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, 
      2 + n12, -1 + n13, 1])/(-1 + n3) + 
   ((-1 - n12)*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, 
      2 + n12, n13, 0])/(-1 + n3) + 
   ((-1 - n12)*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, 
      2 + n12, n13, 1])/(-1 + n3) + j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 2, 1, 
     1, 1 + n9, 0, 0, 1 + n12, n13, 1]/(-1 + n3) + 
   (2*j[p4a, n1, -1 + n2, -1 + n3, 0, 2, 0, 1, 1, 1 + n9, 1, 0, 1 + n12, n13, 
      1])/(-1 + n3) + j[p4a, n1, -1 + n2, n3, -1, 1, 1, 1, 1, 1 + n9, 1, 0, 
    1 + n12, n13, 1] - j[p4a, n1, -1 + n2, n3, 0, 1, 1, 0, 1, 1 + n9, 1, 0, 
    1 + n12, n13, 1] - 3*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 0, 1 + n9, 1, 0, 
     1 + n12, n13, 1] - j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 1, n9, 1, 0, 
    1 + n12, n13, 1] + j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 1, 1 + n9, 0, 0, 
    1 + n12, n13, 1] - j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 1, 1 + n9, 1, -1, 
    1 + n12, n13, 1] + 2*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, 
     n12, n13, 1] - 2*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, 
     1 + n12, -1 + n13, 1] - j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 1, 1 + n9, 
    1, 0, 1 + n12, n13, 0] - j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 1, 1 + n9, 
    1, 0, 1 + n12, n13, 1] - (n13*j[p4a, n1, n2, -2 + n3, 0, 1, 1, 1, 1, n9, 
      1, 0, 1 + n12, 1 + n13, 1])/(-1 + n3) + 
   ((-1 - n12)*j[p4a, n1, n2, -2 + n3, 0, 1, 1, 1, 1, n9, 1, 0, 2 + n12, n13, 
      1])/(-1 + n3) + ((1 - n1)*j[p4a, n1, n2, -1 + n3, 0, 0, 1, 1, 1, 
      1 + n9, 1, 0, 1 + n12, n13, 1])/(-1 + n3) + 
   j[p4a, n1, n2, -1 + n3, 0, 0, 2, 1, 1, n9, 1, 0, 1 + n12, n13, 1]/
    (1 - n3) + (n13*j[p4a, n1, n2, -1 + n3, 0, 1, 1, 0, 1, n9, 1, 0, 1 + n12, 
      1 + n13, 1])/(-1 + n3) + 
   (2*(1 + n12)*j[p4a, n1, n2, -1 + n3, 0, 1, 1, 0, 1, n9, 1, 0, 2 + n12, 
      n13, 1])/(-1 + n3) + (n13*j[p4a, n1, n2, -1 + n3, 0, 1, 1, 1, 0, n9, 1, 
      0, 1 + n12, 1 + n13, 1])/(-1 + n3) + 
   (2*(1 + n12)*j[p4a, n1, n2, -1 + n3, 0, 1, 1, 1, 0, n9, 1, 0, 2 + n12, 
      n13, 1])/(-1 + n3) - (n13*j[p4a, n1, n2, -1 + n3, 0, 1, 1, 1, 1, n9, 1, 
      0, n12, 1 + n13, 1])/(-1 + n3) + 
   ((10 - 4*d + 2*n1 + n12 + 2*n13 + 4*n2 + n3)*j[p4a, n1, n2, -1 + n3, 0, 1, 
      1, 1, 1, n9, 1, 0, 1 + n12, n13, 1])/(-1 + n3) + 
   ((1 - n1)*j[p4a, n1, n2, -1 + n3, 0, 1, 1, 1, 1, 1 + n9, 0, 0, 1 + n12, 
      n13, 1])/(-1 + n3) + j[p4a, n1, n2, -1 + n3, 0, 2, 0, 1, 1, n9, 1, 0, 
     1 + n12, n13, 1]/(1 - n3) + 2*j[p4a, n1, n2, n3, 0, 1, 1, 0, 1, n9, 1, 
     0, 1 + n12, n13, 1] + 2*j[p4a, n1, n2, n3, 0, 1, 1, 1, 0, n9, 1, 0, 
     1 + n12, n13, 1] - (2*n1*j[p4a, 1 + n1, -2 + n2, -1 + n3, 0, 1, 1, 1, 1, 
      1 + n9, 1, 0, 1 + n12, n13, 1])/(-1 + n3) + 
   (n1*j[p4a, 1 + n1, -1 + n2, -1 + n3, 0, 0, 1, 1, 1, 1 + n9, 1, 0, 1 + n12, 
      n13, 1])/(-1 + n3) + (2*n1*j[p4a, 1 + n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 
      1, 1 + n9, 0, 0, 1 + n12, n13, 1])/(-1 + n3) - 
   (n1*j[p4a, 1 + n1, n2, -1 + n3, 0, 1, 1, 1, 1, n9, 0, 0, 1 + n12, n13, 1])/
    (-1 + n3), j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; 
   n10 == 1 && n12 == 0 && n13 == 0 && n14 == 1 && n4 == 0 && n5 == 1 && 
    n7 == 1 && n8 == 1 && n9 == 0 && n11 != 0 -> 
  j[p4a, -1 + n1, -1 + n2, n3, 0, 2, n6, 1, 1, 0, 1, 1 + n11, 0, 0, 1]/
    (-3 + d - n11 - n3) + (n3*j[p4a, -1 + n1, -1 + n2, 1 + n3, 0, 1, n6, 1, 
      1, 0, 1, 1 + n11, 0, 0, 1])/(3 - d + n11 + n3) + 
   ((1 + n11)*j[p4a, -1 + n1, n2, n3, -1, 1, n6, 1, 1, 0, 1, 2 + n11, 0, 0, 
      1])/(3 - d + n11 + n3) + 
   ((-1 - n11 + n2 - n3)*j[p4a, -1 + n1, n2, n3, 0, 1, n6, 1, 1, 0, 1, 
      1 + n11, 0, 0, 1])/(-3 + d - n11 - n3) + 
   j[p4a, -1 + n1, n2, n3, 0, 2, -1 + n6, 1, 1, 0, 1, 1 + n11, 0, 0, 1]/
    (3 - d + n11 + n3) - (n3*j[p4a, -1 + n1, n2, 1 + n3, 0, 1, n6, 0, 1, 0, 
      1, 1 + n11, 0, 0, 1])/(3 - d + n11 + n3) - 
   (2*n3*j[p4a, -1 + n1, n2, 1 + n3, 0, 1, n6, 1, 0, 0, 1, 1 + n11, 0, 0, 1])/
    (3 - d + n11 + n3) + (n3*j[p4a, -1 + n1, n2, 1 + n3, 0, 1, n6, 1, 1, 0, 
      1, 1 + n11, -1, 0, 1])/(3 - d + n11 + n3) - 
   (n3*j[p4a, -1 + n1, n2, 1 + n3, 0, 1, n6, 1, 1, 0, 1, 1 + n11, 0, -1, 1])/
    (3 - d + n11 + n3) - (n3*j[p4a, -1 + n1, n2, 1 + n3, 0, 1, n6, 1, 1, 0, 
      1, 1 + n11, 0, 0, 0])/(3 - d + n11 + n3) - 
   (n2*j[p4a, -1 + n1, 1 + n2, n3, 0, 0, n6, 1, 1, 0, 1, 1 + n11, 0, 0, 1])/
    (-3 + d - n11 - n3) + ((-1 - n11)*j[p4a, n1, -2 + n2, n3, 0, 1, n6, 1, 1, 
      0, 1, 2 + n11, 0, 0, 1])/(3 - d + n11 + n3) + 
   j[p4a, n1, -2 + n2, n3, 0, 1, n6, 2, 1, 0, 1, 1 + n11, 0, 0, 1]/
    (-3 + d - n11 - n3) - (n3*j[p4a, n1, -2 + n2, 1 + n3, 0, 1, n6, 1, 1, 0, 
      1, 1 + n11, 0, 0, 1])/(3 - d + n11 + n3) + 
   ((-1 - n11)*j[p4a, n1, -1 + n2, n3, -1, 1, n6, 1, 1, 0, 1, 2 + n11, 0, 0, 
      1])/(3 - d + n11 + n3) + 
   ((1 + n11)*j[p4a, n1, -1 + n2, n3, 0, 0, n6, 1, 1, 0, 1, 2 + n11, 0, 0, 
      1])/(3 - d + n11 + n3) + j[p4a, n1, -1 + n2, n3, 0, 0, n6, 2, 1, 0, 1, 
     1 + n11, 0, 0, 1]/(3 - d + n11 + n3) + 
   ((1 + n11)*j[p4a, n1, -1 + n2, n3, 0, 1, -1 + n6, 1, 1, 0, 1, 2 + n11, 0, 
      0, 1])/(3 - d + n11 + n3) + 
   ((1 + n11)*j[p4a, n1, -1 + n2, n3, 0, 1, n6, 1, 0, 0, 1, 2 + n11, 0, 0, 
      1])/(3 - d + n11 + n3) + 
   ((-1 - n11)*j[p4a, n1, -1 + n2, n3, 0, 1, n6, 1, 1, -1, 1, 2 + n11, 0, 0, 
      1])/(3 - d + n11 + n3) + 
   ((1 + n11)*j[p4a, n1, -1 + n2, n3, 0, 1, n6, 1, 1, 0, 0, 2 + n11, 0, 0, 
      1])/(3 - d + n11 + n3) + 
   ((-1 + n1 + n11 + n3)*j[p4a, n1, -1 + n2, n3, 0, 1, n6, 1, 1, 0, 1, 
      1 + n11, 0, 0, 1])/(-3 + d - n11 - n3) + 
   j[p4a, n1, -1 + n2, n3, 0, 1, n6, 2, 0, 0, 1, 1 + n11, 0, 0, 1]/
    (3 - d + n11 + n3) + (n3*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, n6, 0, 1, 0, 
      1, 1 + n11, 0, 0, 1])/(3 - d + n11 + n3) + 
   (2*n3*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, n6, 1, 0, 0, 1, 1 + n11, 0, 0, 1])/
    (3 - d + n11 + n3) - (n3*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, n6, 1, 1, 0, 
      1, 1 + n11, -1, 0, 1])/(3 - d + n11 + n3) + 
   (n3*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, n6, 1, 1, 0, 1, 1 + n11, 0, -1, 1])/
    (3 - d + n11 + n3) + (n3*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, n6, 1, 1, 0, 
      1, 1 + n11, 0, 0, 0])/(3 - d + n11 + n3) + 
   ((-1 - n11)*j[p4a, n1, n2, n3, -1, 1, n6, 0, 1, 0, 1, 2 + n11, 0, 0, 1])/
    (3 - d + n11 + n3) + j[p4a, n1, n2, n3, -1, 1, n6, 0, 2, 0, 1, 1 + n11, 
     0, 0, 1]/(-3 + d - n11 - n3) + 
   ((-1 - n11)*j[p4a, n1, n2, n3, -1, 1, n6, 1, 0, 0, 1, 2 + n11, 0, 0, 1])/
    (3 - d + n11 + n3) + ((1 + n11)*j[p4a, n1, n2, n3, -1, 1, n6, 1, 1, 0, 0, 
      2 + n11, 0, 0, 1])/(3 - d + n11 + n3) - j[p4a, n1, n2, n3, -1, 1, n6, 
    1, 1, 0, 1, 1 + n11, 0, 0, 1] + j[p4a, n1, n2, n3, -1, 1, n6, 2, 0, 0, 1, 
     1 + n11, 0, 0, 1]/(-3 + d - n11 - n3) + 
   j[p4a, n1, n2, n3, -1, 1, n6, 2, 1, 0, 0, 1 + n11, 0, 0, 1]/
    (-3 + d - n11 - n3) + ((-1 + n1 + n11)*j[p4a, n1, n2, n3, 0, 0, n6, 1, 1, 
      0, 1, 1 + n11, 0, 0, 1])/(3 - d + n11 + n3) + 
   j[p4a, n1, n2, n3, 0, 0, n6, 2, 1, 0, 1, n11, 0, 0, 1]/
    (3 - d + n11 + n3) + ((1 + n11)*j[p4a, n1, n2, n3, 0, 1, -1 + n6, 0, 1, 
      0, 1, 2 + n11, 0, 0, 1])/(3 - d + n11 + n3) + 
   j[p4a, n1, n2, n3, 0, 1, -1 + n6, 0, 2, 0, 1, 1 + n11, 0, 0, 1]/
    (3 - d + n11 + n3) + ((-1 - n11)*j[p4a, n1, n2, n3, 0, 1, -1 + n6, 1, 1, 
      0, 0, 2 + n11, 0, 0, 1])/(3 - d + n11 + n3) + 
   ((2 - d + n2 + n6)*j[p4a, n1, n2, n3, 0, 1, -1 + n6, 1, 1, 0, 1, 1 + n11, 
      0, 0, 1])/(-3 + d - n11 - n3) + j[p4a, n1, n2, n3, 0, 1, n6, 0, 1, 0, 
     1, 1 + n11, 0, 0, 1]/(3 - d + n11 + n3) + 
   j[p4a, n1, n2, n3, 0, 1, n6, 1, 0, 0, 1, 1 + n11, 0, 0, 1]/
    (3 - d + n11 + n3) + ((1 + n1 + n11 - n6)*j[p4a, n1, n2, n3, 0, 1, n6, 1, 
      1, -1, 1, 1 + n11, 0, 0, 1])/(-3 + d - n11 - n3) + 
   ((-1 - n1 - n11 + n6)*j[p4a, n1, n2, n3, 0, 1, n6, 1, 1, 0, 0, 1 + n11, 0, 
      0, 1])/(-3 + d - n11 - n3) - 
   (n3*j[p4a, n1, n2, 1 + n3, -1, 1, n6, 0, 1, 0, 1, 1 + n11, 0, 0, 1])/
    (3 - d + n11 + n3) - (n3*j[p4a, n1, n2, 1 + n3, -1, 1, n6, 1, 0, 0, 1, 
      1 + n11, 0, 0, 1])/(3 - d + n11 + n3) - 
   (n3*j[p4a, n1, n2, 1 + n3, -1, 1, n6, 1, 1, 0, 0, 1 + n11, 0, 0, 1])/
    (3 - d + n11 + n3) + (n3*j[p4a, n1, n2, 1 + n3, -1, 1, n6, 1, 1, 0, 1, 
      1 + n11, 0, 0, 1])/(3 - d + n11 + n3) + 
   (n3*j[p4a, n1, n2, 1 + n3, 0, 1, n6, 1, 1, 0, 1, n11, 0, 0, 0])/
    (3 - d + n11 + n3) + (n2*j[p4a, n1, 1 + n2, n3, 0, 1, -1 + n6, 1, 1, 0, 
      0, 1 + n11, 0, 0, 1])/(-3 + d - n11 - n3), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 0 && n13 == 0 && n14 == 1 && n4 == 0 && n5 == 1 && 
    n7 == 1 && n8 == 1 && n9 == 0 && n12 != 0 -> 
  j[p4a, -1 + n1, -1 + n2, n3, 0, 1, n6, 1, 2, 0, 1, 0, 1 + n12, 0, 1]/
    (-9 + 4*d - 2*n1 - n12 - 2*n2 - n3 - 2*n6) + 
   ((1 - n2)*j[p4a, -1 + n1, n2, n3, 0, 1, n6, 1, 1, 0, 1, 0, 1 + n12, 0, 1])/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) - 
   (n3*j[p4a, -1 + n1, n2, 1 + n3, 0, 1, n6, 0, 1, 0, 1, 0, 1 + n12, 0, 1])/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) - 
   (2*n3*j[p4a, -1 + n1, n2, 1 + n3, 0, 1, n6, 1, 0, 0, 1, 0, 1 + n12, 0, 1])/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) - 
   (n3*j[p4a, -1 + n1, n2, 1 + n3, 0, 1, n6, 1, 1, 0, 1, 0, 1 + n12, -1, 1])/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) - 
   (n3*j[p4a, -1 + n1, n2, 1 + n3, 0, 1, n6, 1, 1, 0, 1, 0, 1 + n12, 0, 0])/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   (n2*j[p4a, -1 + n1, 1 + n2, n3, 0, 0, n6, 1, 1, 0, 1, 0, 1 + n12, 0, 1])/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   ((1 + n12)*j[p4a, n1, -2 + n2, n3, 0, 1, n6, 1, 1, 0, 1, 0, 2 + n12, 0, 
      1])/(9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   j[p4a, n1, -2 + n2, n3, 0, 1, n6, 1, 2, 0, 1, 0, 1 + n12, 0, 1]/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   j[p4a, n1, -2 + n2, n3, 0, 1, n6, 2, 1, 0, 1, 0, 1 + n12, 0, 1]/
    (-9 + 4*d - 2*n1 - n12 - 2*n2 - n3 - 2*n6) - 
   (n3*j[p4a, n1, -2 + n2, 1 + n3, 0, 1, n6, 1, 1, 0, 1, 0, 1 + n12, 0, 1])/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   (2*(1 + n12)*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, n6, 1, 1, 0, 1, 0, 
      2 + n12, 0, 1])/(9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   ((1 + n12)*j[p4a, n1, -1 + n2, n3, 0, 0, n6, 1, 1, 0, 1, 0, 2 + n12, 0, 
      1])/(9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   j[p4a, n1, -1 + n2, n3, 0, 0, n6, 2, 1, 0, 1, 0, 1 + n12, 0, 1]/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) - 
   (3*(1 + n12)*j[p4a, n1, -1 + n2, n3, 0, 1, n6, 0, 1, 0, 1, 0, 2 + n12, 0, 
      1])/(9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   j[p4a, n1, -1 + n2, n3, 0, 1, n6, 0, 2, 0, 1, 0, 1 + n12, 0, 1]/
    (-9 + 4*d - 2*n1 - n12 - 2*n2 - n3 - 2*n6) + 
   ((-1 - n12)*j[p4a, n1, -1 + n2, n3, 0, 1, n6, 1, 0, 0, 1, 0, 2 + n12, 0, 
      1])/(9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   ((-d + n1 - 2*n12 + n3 + n6)*j[p4a, n1, -1 + n2, n3, 0, 1, n6, 1, 1, 0, 1, 
      0, 1 + n12, 0, 1])/(-9 + 4*d - 2*n1 - n12 - 2*n2 - n3 - 2*n6) - 
   (2*(1 + n12)*j[p4a, n1, -1 + n2, n3, 0, 1, n6, 1, 1, 0, 1, 0, 2 + n12, -1, 
      1])/(9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   ((-1 - n12)*j[p4a, n1, -1 + n2, n3, 0, 1, n6, 1, 1, 0, 1, 0, 2 + n12, 0, 
      0])/(9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   ((-1 - n12)*j[p4a, n1, -1 + n2, n3, 0, 1, n6, 1, 1, 0, 1, 0, 2 + n12, 0, 
      1])/(9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   j[p4a, n1, -1 + n2, n3, 0, 1, n6, 2, 0, 0, 1, 0, 1 + n12, 0, 1]/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   j[p4a, n1, -1 + n2, n3, 0, 1, n6, 2, 1, 0, 0, 0, 1 + n12, 0, 1]/
    (-9 + 4*d - 2*n1 - n12 - 2*n2 - n3 - 2*n6) - 
   (n6*j[p4a, n1, -1 + n2, n3, 0, 1, 1 + n6, 1, 1, 0, 0, 0, 1 + n12, 0, 1])/
    (-9 + 4*d - 2*n1 - n12 - 2*n2 - n3 - 2*n6) + 
   (n6*j[p4a, n1, -1 + n2, n3, 0, 1, 1 + n6, 1, 1, 0, 1, 0, 1 + n12, 0, 1])/
    (-9 + 4*d - 2*n1 - n12 - 2*n2 - n3 - 2*n6) + 
   j[p4a, n1, -1 + n2, n3, 0, 2, n6, 1, 1, 0, 1, 0, 1 + n12, 0, 1]/
    (-9 + 4*d - 2*n1 - n12 - 2*n2 - n3 - 2*n6) + 
   (n3*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, n6, 0, 1, 0, 1, 0, 1 + n12, 0, 1])/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   (3*n3*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, n6, 1, 0, 0, 1, 0, 1 + n12, 0, 1])/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) - 
   (n3*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, n6, 1, 1, 0, 0, 0, 1 + n12, 0, 1])/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) - 
   (n3*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, n6, 1, 1, 0, 1, 0, n12, 0, 1])/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   (2*n3*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, n6, 1, 1, 0, 1, 0, 1 + n12, -1, 
      1])/(9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   (n3*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, n6, 1, 1, 0, 1, 0, 1 + n12, 0, 0])/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   (n3*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, n6, 1, 1, 0, 1, 0, 1 + n12, 0, 1])/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   ((1 + n12)*j[p4a, n1, n2, -1 + n3, -1, 1, n6, 1, 1, 0, 1, 0, 2 + n12, 0, 
      1])/(9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   ((-1 - n12)*j[p4a, n1, n2, -1 + n3, 0, 1, -1 + n6, 1, 1, 0, 1, 0, 2 + n12, 
      0, 1])/(9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   ((-1 - n12)*j[p4a, n1, n2, -1 + n3, 0, 1, n6, 1, 1, 0, 1, -1, 2 + n12, 0, 
      1])/(9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) - 
   j[p4a, n1, n2, -1 + n3, 0, 1, n6, 1, 1, 0, 1, 0, 1 + n12, 0, 1] + 
   ((1 + n12)*j[p4a, n1, n2, -1 + n3, 0, 1, n6, 1, 1, 0, 1, 0, 2 + n12, 0, 
      1])/(9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) - 
   (2*(1 + n12)*j[p4a, n1, n2, n3, -1, 1, n6, 0, 1, 0, 1, 0, 2 + n12, 0, 1])/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   j[p4a, n1, n2, n3, -1, 1, n6, 0, 2, 0, 1, 0, 1 + n12, 0, 1]/
    (-9 + 4*d - 2*n1 - n12 - 2*n2 - n3 - 2*n6) - 
   (2*(1 + n12)*j[p4a, n1, n2, n3, -1, 1, n6, 1, 0, 0, 1, 0, 2 + n12, 0, 1])/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   ((2 - d + n3)*j[p4a, n1, n2, n3, -1, 1, n6, 1, 1, 0, 1, 0, 1 + n12, 0, 1])/
    (-9 + 4*d - 2*n1 - n12 - 2*n2 - n3 - 2*n6) + 
   ((-1 - n12)*j[p4a, n1, n2, n3, -1, 1, n6, 1, 1, 0, 1, 0, 2 + n12, 0, 1])/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   j[p4a, n1, n2, n3, -1, 1, n6, 2, 0, 0, 1, 0, 1 + n12, 0, 1]/
    (-9 + 4*d - 2*n1 - n12 - 2*n2 - n3 - 2*n6) + 
   j[p4a, n1, n2, n3, -1, 1, n6, 2, 1, 0, 0, 0, 1 + n12, 0, 1]/
    (-9 + 4*d - 2*n1 - n12 - 2*n2 - n3 - 2*n6) + 
   j[p4a, n1, n2, n3, 0, 0, n6, 1, 1, -1, 1, 0, 1 + n12, 0, 2]/
    (-9 + 4*d - 2*n1 - n12 - 2*n2 - n3 - 2*n6) + 
   ((1 + n12)*j[p4a, n1, n2, n3, 0, 0, n6, 1, 1, 0, 1, -1, 2 + n12, 0, 1])/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   ((-1 + n1)*j[p4a, n1, n2, n3, 0, 0, n6, 1, 1, 0, 1, 0, 1 + n12, 0, 1])/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   j[p4a, n1, n2, n3, 0, 0, n6, 1, 1, 0, 1, 0, 1 + n12, 0, 2]/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   j[p4a, n1, n2, n3, 0, 0, n6, 2, 1, 0, 1, -1, 1 + n12, 0, 1]/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   (n6*j[p4a, n1, n2, n3, 0, 0, 1 + n6, 1, 1, -1, 1, 0, 1 + n12, 0, 1])/
    (-9 + 4*d - 2*n1 - n12 - 2*n2 - n3 - 2*n6) - 
   (n6*j[p4a, n1, n2, n3, 0, 0, 1 + n6, 1, 1, 0, 1, 0, 1 + n12, 0, 1])/
    (-9 + 4*d - 2*n1 - n12 - 2*n2 - n3 - 2*n6) + 
   (2*(1 + n12)*j[p4a, n1, n2, n3, 0, 1, -1 + n6, 0, 1, 0, 1, 0, 2 + n12, 0, 
      1])/(9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   j[p4a, n1, n2, n3, 0, 1, -1 + n6, 0, 2, 0, 1, 0, 1 + n12, 0, 1]/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   ((1 + n12)*j[p4a, n1, n2, n3, 0, 1, -1 + n6, 1, 0, 0, 1, 0, 2 + n12, 0, 
      1])/(9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   ((-1 - n12 - n2)*j[p4a, n1, n2, n3, 0, 1, -1 + n6, 1, 1, 0, 1, 0, 1 + n12, 
      0, 1])/(9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   ((1 + n12)*j[p4a, n1, n2, n3, 0, 1, -1 + n6, 1, 1, 0, 1, 0, 2 + n12, -1, 
      1])/(9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   ((1 + n12)*j[p4a, n1, n2, n3, 0, 1, -1 + n6, 1, 1, 0, 1, 0, 2 + n12, 0, 
      1])/(9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   j[p4a, n1, n2, n3, 0, 1, n6, 0, 1, -1, 1, 0, 1 + n12, 0, 2]/
    (-9 + 4*d - 2*n1 - n12 - 2*n2 - n3 - 2*n6) + 
   ((1 + n12)*j[p4a, n1, n2, n3, 0, 1, n6, 0, 1, 0, 1, -1, 2 + n12, 0, 1])/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   ((1 - n3)*j[p4a, n1, n2, n3, 0, 1, n6, 0, 1, 0, 1, 0, 1 + n12, 0, 1])/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   j[p4a, n1, n2, n3, 0, 1, n6, 0, 1, 0, 1, 0, 1 + n12, 0, 2]/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   j[p4a, n1, n2, n3, 0, 1, n6, 0, 2, 0, 1, -1, 1 + n12, 0, 1]/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   j[p4a, n1, n2, n3, 0, 1, n6, 1, 0, -1, 1, 0, 1 + n12, 0, 2]/
    (-9 + 4*d - 2*n1 - n12 - 2*n2 - n3 - 2*n6) + 
   ((1 + n12)*j[p4a, n1, n2, n3, 0, 1, n6, 1, 0, 0, 1, -1, 2 + n12, 0, 1])/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   ((1 - n3)*j[p4a, n1, n2, n3, 0, 1, n6, 1, 0, 0, 1, 0, 1 + n12, 0, 1])/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   j[p4a, n1, n2, n3, 0, 1, n6, 1, 0, 0, 1, 0, 1 + n12, 0, 2]/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   ((4 - 2*d + n1 + n6)*j[p4a, n1, n2, n3, 0, 1, n6, 1, 1, -1, 1, 0, 1 + n12, 
      0, 1])/(-9 + 4*d - 2*n1 - n12 - 2*n2 - n3 - 2*n6) + 
   ((2 + n1 - n3 - 2*n6)*j[p4a, n1, n2, n3, 0, 1, n6, 1, 1, 0, 0, 0, 1 + n12, 
      0, 1])/(9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   ((-2 + d - n3)*j[p4a, n1, n2, n3, 0, 1, n6, 1, 1, 0, 1, -1, 1 + n12, 0, 
      1])/(-9 + 4*d - 2*n1 - n12 - 2*n2 - n3 - 2*n6) + 
   ((-1 - n12)*j[p4a, n1, n2, n3, 0, 1, n6, 1, 1, 0, 1, -1, 2 + n12, 0, 0])/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   ((-4 + 2*d - n12 - n3 - 3*n6)*j[p4a, n1, n2, n3, 0, 1, n6, 1, 1, 0, 1, 0, 
      1 + n12, 0, 1])/(-9 + 4*d - 2*n1 - n12 - 2*n2 - n3 - 2*n6) + 
   j[p4a, n1, n2, n3, 0, 1, n6, 2, 0, 0, 1, -1, 1 + n12, 0, 1]/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   j[p4a, n1, n2, n3, 0, 2, -1 + n6, 1, 1, 0, 1, 0, 1 + n12, 0, 1]/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) - 
   (n3*j[p4a, n1, n2, 1 + n3, -1, 1, n6, 0, 1, 0, 1, 0, 1 + n12, 0, 1])/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) - 
   (n3*j[p4a, n1, n2, 1 + n3, -1, 1, n6, 1, 0, 0, 1, 0, 1 + n12, 0, 1])/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) - 
   (n3*j[p4a, n1, n2, 1 + n3, -1, 1, n6, 1, 1, 0, 0, 0, 1 + n12, 0, 1])/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   (n3*j[p4a, n1, n2, 1 + n3, -1, 1, n6, 1, 1, 0, 1, 0, 1 + n12, 0, 1])/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   (2*n3*j[p4a, n1, n2, 1 + n3, 0, 1, n6, 0, 1, 0, 1, -1, 1 + n12, 0, 1])/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) - 
   (n3*j[p4a, n1, n2, 1 + n3, 0, 1, n6, 0, 1, 0, 1, 0, n12, 0, 1])/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   (2*n3*j[p4a, n1, n2, 1 + n3, 0, 1, n6, 1, 0, 0, 1, -1, 1 + n12, 0, 1])/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) - 
   (n3*j[p4a, n1, n2, 1 + n3, 0, 1, n6, 1, 0, 0, 1, 0, n12, 0, 1])/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) - 
   (n3*j[p4a, n1, n2, 1 + n3, 0, 1, n6, 1, 1, 0, 0, 0, n12, 0, 1])/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   (n3*j[p4a, n1, n2, 1 + n3, 0, 1, n6, 1, 1, 0, 1, -1, 1 + n12, 0, 0])/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) + 
   (n3*j[p4a, n1, n2, 1 + n3, 0, 1, n6, 1, 1, 0, 1, 0, n12, 0, 1])/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6) - 
   (n2*j[p4a, n1, 1 + n2, n3, 0, 1, -1 + n6, 1, 1, 0, 0, 0, 1 + n12, 0, 1])/
    (9 - 4*d + 2*n1 + n12 + 2*n2 + n3 + 2*n6), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 0 && n12 == 0 && n13 == 0 && n14 == 1 && n5 == 1 && 
    n6 == 1 && n7 == 1 && n8 == 1 && n4 != 0 -> 
  j[p4a, n1, -2 + n2, n3, 1 + n4, 1, 1, 1, 2, n9, 1, 0, 0, 0, 1]/
    (-2 + d - n1 - 2*n2) + j[p4a, n1, -2 + n2, n3, 1 + n4, 1, 1, 2, 1, n9, 1, 
     0, 0, 0, 1]/(2 - d + n1 + 2*n2) + 
   j[p4a, n1, -2 + n2, n3, 1 + n4, 2, 1, 1, 1, n9, 1, 0, 0, 0, 1]/
    (2 - d + n1 + 2*n2) + j[p4a, n1, -1 + n2, n3, 1 + n4, 0, 1, 2, 1, n9, 1, 
     0, 0, 0, 1]/(-2 + d - n1 - 2*n2) + 
   j[p4a, n1, -1 + n2, n3, 1 + n4, 1, 1, 0, 2, n9, 1, 0, 0, 0, 1]/
    (2 - d + n1 + 2*n2) + ((-n3 - n4)*j[p4a, n1, -1 + n2, n3, 1 + n4, 1, 1, 
      1, 1, n9, 1, 0, 0, 0, 1])/(-2 + d - n1 - 2*n2) + 
   j[p4a, n1, -1 + n2, n3, 1 + n4, 1, 1, 2, 0, n9, 1, 0, 0, 0, 1]/
    (-2 + d - n1 - 2*n2) + j[p4a, n1, -1 + n2, n3, 1 + n4, 2, 0, 1, 1, n9, 1, 
     0, 0, 0, 1]/(-2 + d - n1 - 2*n2) + 
   j[p4a, n1, -1 + n2, n3, 1 + n4, 2, 1, 0, 1, n9, 1, 0, 0, 0, 1]/
    (-2 + d - n1 - 2*n2) + ((1 + n4)*j[p4a, n1, -1 + n2, n3, 2 + n4, 0, 1, 1, 
      1, n9, 1, 0, 0, 0, 1])/(-2 + d - n1 - 2*n2) + 
   ((-1 - n4)*j[p4a, n1, -1 + n2, n3, 2 + n4, 1, 1, 0, 1, n9, 1, 0, 0, 0, 1])/
    (-2 + d - n1 - 2*n2) - (n3*j[p4a, n1, -1 + n2, 1 + n3, 1 + n4, 1, 1, 0, 
      1, n9, 1, 0, 0, 0, 1])/(-2 + d - n1 - 2*n2) + 
   (n3*j[p4a, n1, -1 + n2, 1 + n3, 1 + n4, 1, 1, 1, 1, n9, 1, 0, 0, -1, 1])/
    (-2 + d - n1 - 2*n2) + j[p4a, n1, n2, n3, n4, 1, 1, 2, 0, n9, 1, 0, 0, 0, 
     1]/(2 - d + n1 + 2*n2) + j[p4a, n1, n2, n3, n4, 2, 0, 1, 1, n9, 1, 0, 0, 
     0, 1]/(2 - d + n1 + 2*n2) + 
   ((-1 + n2)*j[p4a, n1, n2, n3, 1 + n4, 0, 1, 1, 1, n9, 1, 0, 0, 0, 1])/
    (-2 + d - n1 - 2*n2) + ((1 - n2)*j[p4a, n1, n2, n3, 1 + n4, 1, 0, 1, 1, 
      n9, 1, 0, 0, 0, 1])/(-2 + d - n1 - 2*n2) + 
   ((-1 + n2)*j[p4a, n1, n2, n3, 1 + n4, 1, 1, 0, 1, n9, 1, 0, 0, 0, 1])/
    (-2 + d - n1 - 2*n2) + ((1 - n2)*j[p4a, n1, n2, n3, 1 + n4, 1, 1, 1, 0, 
      n9, 1, 0, 0, 0, 1])/(-2 + d - n1 - 2*n2) - 
   (n1*j[p4a, 1 + n1, -1 + n2, n3, n4, 1, 1, 1, 1, n9, 1, 0, 0, 0, 1])/
    (2 - d + n1 + 2*n2) - (n1*j[p4a, 1 + n1, -1 + n2, n3, 1 + n4, 0, 1, 1, 1, 
      n9, 1, 0, 0, 0, 1])/(2 - d + n1 + 2*n2) + 
   (n1*j[p4a, 1 + n1, -1 + n2, n3, 1 + n4, 1, 1, 1, 0, n9, 1, 0, 0, 0, 1])/
    (2 - d + n1 + 2*n2) + (n1*j[p4a, 1 + n1, -1 + n2, n3, 1 + n4, 1, 1, 1, 1, 
      -1 + n9, 1, 0, 0, 0, 1])/(2 - d + n1 + 2*n2) - 
   (n1*j[p4a, 1 + n1, -1 + n2, n3, 1 + n4, 1, 1, 1, 1, n9, 1, -1, 0, 0, 1])/
    (2 - d + n1 + 2*n2) + (n1*j[p4a, 1 + n1, n2, n3, n4, 1, 1, 1, 1, n9, 0, 
      0, 0, 0, 1])/(2 - d + n1 + 2*n2), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; 
   n10 == 1 && n12 == 0 && n13 == -1 && n14 == 1 && n4 == 0 && n5 == 1 && 
    n6 == 1 && n7 == 1 && n8 == 1 &&  !(n1 == 1 || n11 == 0 || n9 == 0) -> 
  j[p4a, -2 + n1, n2, n3, -1, 1, 1, 1, 1, 1 + n9, 1, 1 + n11, 0, 0, 1]/
    (1 - n1) + j[p4a, -2 + n1, n2, n3, -1, 2, 1, 1, 1, 1 + n9, 1, 1 + n11, 0, 
     -1, 1]/(-1 + n1) - j[p4a, -2 + n1, n2, n3, 0, 1, 1, 1, 1, 1 + n9, 1, 
     1 + n11, 0, -1, 1]/(2*(-1 + n1)) + 
   (n3*j[p4a, -2 + n1, n2, 1 + n3, -1, 1, 1, 1, 1, 1 + n9, 1, 1 + n11, 0, -1, 
      1])/(2*(-1 + n1)) + (n2*j[p4a, -2 + n1, 1 + n2, n3, -1, 1, 1, 1, 1, 
      1 + n9, 1, 1 + n11, 0, -1, 1])/(2*(-1 + n1)) + 
   j[p4a, -1 + n1, -1 + n2, n3, -1, 2, 1, 1, 1, 1 + n9, 1, 1 + n11, 0, -1, 1]/
    (1 - n1) + j[p4a, -1 + n1, -1 + n2, n3, 0, 1, 1, 1, 1, 1 + n9, 1, 
     1 + n11, 0, -1, 1]/(2*(-1 + n1)) + 
   j[p4a, -1 + n1, -1 + n2, n3, 0, 1, 1, 1, 2, n9, 1, 1 + n11, 0, -1, 1]/
    (1 - n1) - j[p4a, -1 + n1, -1 + n2, n3, 0, 1, 1, 2, 1, 1 + n9, 1, n11, 0, 
     -1, 1]/(2*(-1 + n1)) + j[p4a, -1 + n1, -1 + n2, n3, 0, 1, 2, 1, 1, n9, 
     1, 1 + n11, 0, -1, 1]/(2*(-1 + n1)) - 
   (n3*j[p4a, -1 + n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, n11, 0, -1, 
      1])/(2*(-1 + n1)) + j[p4a, -1 + n1, n2, -1 + n3, -1, 1, 1, 1, 1, 
     1 + n9, 1, 1 + n11, 0, 0, 1]/(1 - n1) + 
   j[p4a, -1 + n1, n2, -1 + n3, 0, 1, 1, 1, 1, n9, 1, 1 + n11, 0, 0, 1]/
    (1 - n1) + j[p4a, -1 + n1, n2, n3, -1, 1, 1, 0, 1, 1 + n9, 1, 1 + n11, 0, 
     0, 1]/(-1 + n1) + ((-1 - n11)*j[p4a, -1 + n1, n2, n3, -1, 1, 1, 0, 1, 
      1 + n9, 1, 2 + n11, 0, -1, 1])/(-1 + n1) + 
   j[p4a, -1 + n1, n2, n3, -1, 1, 1, 1, 0, 1 + n9, 1, 1 + n11, 0, 0, 1]/
    (-1 + n1) + ((1 + n11)*j[p4a, -1 + n1, n2, n3, -1, 1, 1, 1, 1, 1 + n9, 0, 
      2 + n11, 0, -1, 1])/(-1 + n1) + j[p4a, -1 + n1, n2, n3, -1, 1, 1, 1, 1, 
     1 + n9, 1, 1 + n11, -1, 0, 1]/(1 - n1) + 
   ((4 - d + 2*n1 + 2*n11 - n2 + n3)*j[p4a, -1 + n1, n2, n3, -1, 1, 1, 1, 1, 
      1 + n9, 1, 1 + n11, 0, -1, 1])/(2*(-1 + n1)) + 
   j[p4a, -1 + n1, n2, n3, -1, 1, 1, 1, 1, 1 + n9, 1, 1 + n11, 0, 0, 1]/
    (-1 + n1) - j[p4a, -1 + n1, n2, n3, -1, 1, 1, 2, 1, 1 + n9, 0, 1 + n11, 
     0, -1, 1]/(2*(-1 + n1)) + j[p4a, -1 + n1, n2, n3, -1, 1, 2, 1, 1, 
     1 + n9, 0, 1 + n11, 0, -1, 1]/(2*(-1 + n1)) + 
   j[p4a, -1 + n1, n2, n3, -1, 2, 0, 1, 1, 1 + n9, 1, 1 + n11, 0, -1, 1]/
    (-1 + n1) + j[p4a, -1 + n1, n2, n3, 0, 0, 1, 2, 1, 1 + n9, 1, n11, 0, -1, 
     1]/(2*(-1 + n1)) - j[p4a, -1 + n1, n2, n3, 0, 0, 2, 1, 1, n9, 1, 
     1 + n11, 0, -1, 1]/(2*(-1 + n1)) - 
   j[p4a, -1 + n1, n2, n3, 0, 1, 0, 1, 1, 1 + n9, 1, 1 + n11, 0, -1, 1]/
    (2*(-1 + n1)) - j[p4a, -1 + n1, n2, n3, 0, 1, 0, 1, 1, 1 + n9, 2, n11, 0, 
     -1, 1]/(2*(-1 + n1)) + j[p4a, -1 + n1, n2, n3, 0, 1, 1, 0, 1, n9, 1, 
     1 + n11, 0, 0, 1]/(-1 + n1) + j[p4a, -1 + n1, n2, n3, 0, 1, 1, 0, 1, n9, 
     2, 1 + n11, 0, -1, 1]/(2*(-1 + n1)) - 
   j[p4a, -1 + n1, n2, n3, 0, 1, 1, 0, 1, 1 + n9, 1, 1 + n11, 0, -1, 1]/
    (2*(-1 + n1)) + j[p4a, -1 + n1, n2, n3, 0, 1, 1, 0, 2, n9, 1, 1 + n11, 0, 
     -1, 1]/(-1 + n1) + ((6 - d - n2 + 3*n3)*j[p4a, -1 + n1, n2, n3, 0, 1, 1, 
      1, 1, n9, 1, 1 + n11, 0, -1, 1])/(2*(-1 + n1)) - 
   j[p4a, -1 + n1, n2, n3, 0, 1, 1, 1, 1, 1 + n9, 0, 1 + n11, 0, -1, 1]/
    (2*(-1 + n1)) + ((-2 + d - n2 - n3)*j[p4a, -1 + n1, n2, n3, 0, 1, 1, 1, 
      1, 1 + n9, 1, n11, 0, -1, 1])/(2*(-1 + n1)) + 
   j[p4a, -1 + n1, n2, n3, 0, 1, 1, 2, 0, 1 + n9, 1, n11, 0, -1, 1]/
    (2*(-1 + n1)) - j[p4a, -1 + n1, n2, n3, 0, 1, 2, 1, 0, n9, 1, 1 + n11, 0, 
     -1, 1]/(2*(-1 + n1)) + j[p4a, -1 + n1, n2, n3, 0, 2, 1, 0, 1, n9, 1, 
     1 + n11, 0, -1, 1]/(1 - n1) - 
   (n3*j[p4a, -1 + n1, n2, 1 + n3, -1, 1, 1, 1, 0, 1 + n9, 1, 1 + n11, 0, -1, 
      1])/(2*(-1 + n1)) + (n3*j[p4a, -1 + n1, n2, 1 + n3, -1, 1, 1, 1, 1, 
      1 + n9, 0, 1 + n11, 0, -1, 1])/(2*(-1 + n1)) - 
   (n3*j[p4a, -1 + n1, n2, 1 + n3, -1, 1, 1, 1, 1, 1 + n9, 1, n11, 0, -1, 1])/
    (-1 + n1) + (n3*j[p4a, -1 + n1, n2, 1 + n3, -1, 1, 1, 1, 1, 1 + n9, 1, 
      1 + n11, -1, -1, 1])/(2*(-1 + n1)) - 
   (n3*j[p4a, -1 + n1, n2, 1 + n3, -1, 1, 1, 1, 1, 1 + n9, 1, 1 + n11, 0, -2, 
      1])/(2*(-1 + n1)) - (n3*j[p4a, -1 + n1, n2, 1 + n3, -1, 1, 1, 1, 1, 
      1 + n9, 1, 1 + n11, 0, -1, 1])/(2*(-1 + n1)) + 
   (3*n3*j[p4a, -1 + n1, n2, 1 + n3, 0, 1, 1, 0, 1, n9, 1, 1 + n11, 0, -1, 
      1])/(2*(-1 + n1)) + (n3*j[p4a, -1 + n1, n2, 1 + n3, 0, 1, 1, 0, 1, 
      1 + n9, 1, n11, 0, -1, 1])/(2*(-1 + n1)) + 
   (n3*j[p4a, -1 + n1, n2, 1 + n3, 0, 1, 1, 1, 0, 1 + n9, 1, n11, 0, -1, 1])/
    (-1 + n1) - (3*n3*j[p4a, -1 + n1, n2, 1 + n3, 0, 1, 1, 1, 1, n9, 1, 
      1 + n11, 0, -2, 1])/(2*(-1 + n1)) - 
   (n3*j[p4a, -1 + n1, n2, 1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, n11, -1, -1, 1])/
    (2*(-1 + n1)) + (n3*j[p4a, -1 + n1, n2, 1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, 
      n11, 0, -2, 1])/(2*(-1 + n1)) + 
   (n3*j[p4a, -1 + n1, n2, 1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, n11, 0, -1, 0])/
    (2*(-1 + n1)) - (n2*j[p4a, -1 + n1, 1 + n2, n3, -1, 1, 1, 1, 1, 1 + n9, 
      0, 1 + n11, 0, -1, 1])/(2*(-1 + n1)) + 
   (n2*j[p4a, -1 + n1, 1 + n2, n3, 0, 0, 1, 1, 1, 1 + n9, 1, n11, 0, -1, 1])/
    (2*(-1 + n1)) - (n2*j[p4a, -1 + n1, 1 + n2, n3, 0, 1, 0, 1, 1, 1 + n9, 1, 
      n11, 0, -1, 1])/(2*(-1 + n1)) - 
   (n2*j[p4a, -1 + n1, 1 + n2, n3, 0, 1, 1, 0, 1, n9, 1, 1 + n11, 0, -1, 1])/
    (2*(-1 + n1)) + (n2*j[p4a, -1 + n1, 1 + n2, n3, 0, 1, 1, 1, 0, n9, 1, 
      1 + n11, 0, -1, 1])/(2*(-1 + n1)) - j[p4a, n1, -1 + n2, n3, -1, 1, 1, 
    1, 1, 1 + n9, 1, 1 + n11, 0, -1, 1] - j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 
    1, n9, 1, 1 + n11, 0, -1, 1] + j[p4a, n1, n2, n3, -1, 1, 1, 1, 1, 1 + n9, 
    0, 1 + n11, 0, -1, 1] + j[p4a, n1, n2, n3, 0, 1, 1, 1, 0, n9, 1, 1 + n11, 
    0, -1, 1] + j[p4a, n1, n2, n3, 0, 1, 1, 1, 1, n9, 0, 1 + n11, 0, -1, 1], 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; 
   n10 == 1 && n12 == 0 && n13 == 0 && n14 == 1 && n4 == 0 && n5 == 1 && 
    n6 == 1 && n7 == 1 && n8 == 1 &&  !(n11 == 0 || n9 == 0) -> 
  ((-6 + 3*d - 2*n1 - 2*n11 - 4*n2)*j[p4a, -1 + n1, -1 + n2, n3, 0, 1, 1, 1, 
      2, n9, 1, 1 + n11, 0, 0, 1])/(2*(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 
      6*n2 - 4*d*n2 + 4*n1*n2 + 4*n2^2)) + 
   ((-12 + 5*d - 2*n1 - 2*n11 - 4*n2 - 2*n3)*j[p4a, -1 + n1, -1 + n2, n3, 0, 
      2, 1, 1, 1, 1 + n9, 1, n11, 0, 0, 1])/
    (2*(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 4*n1*n2 + 
      4*n2^2)) + ((-6*n3 + 3*d*n3 - 2*n1*n3 - 3*n11*n3 - 4*n2*n3)*
     j[p4a, -1 + n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, n9, 1, 1 + n11, 0, 0, 
      1])/(2*(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 
      4*n1*n2 + 4*n2^2)) + (n3*(-8 + 3*d - n1 - n11 - 2*n2 - n3 - n9)*
     j[p4a, -1 + n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, n11, 0, 0, 
      1])/(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 4*n1*n2 + 
     4*n2^2) + (n11*j[p4a, -1 + n1, n2, n3, 0, 1, 1, 1, 1, n9, 1, 1 + n11, 0, 
      0, 1])/(-2 + d - n1 - 2*n2) + ((6 - 3*d + 2*n1 + n11 + 4*n2)*
     j[p4a, n1, -2 + n2, n3, 0, 1, 1, 1, 2, n9, 1, 1 + n11, 0, 0, 1])/
    (2*(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 4*n1*n2 + 
      4*n2^2)) + ((8 - 3*d + n1 + n11 + 2*n2 + n3 + n9)*
     j[p4a, n1, -2 + n2, n3, 0, 2, 1, 1, 1, 1 + n9, 1, n11, 0, 0, 1])/
    (2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 4*n1*n2 + 
     4*n2^2) - (n3*j[p4a, n1, -2 + n2, 1 + n3, 0, 1, 1, 1, 2, n9, 1, n11, 0, 
      0, 1])/(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 
     4*n1*n2 + 4*n2^2) - (n3*j[p4a, n1, -2 + n2, 1 + n3, 0, 1, 1, 2, 1, n9, 
      1, n11, 0, 0, 1])/(2*(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 
      4*d*n2 + 4*n1*n2 + 4*n2^2)) - 
   (n3*j[p4a, n1, -2 + n2, 1 + n3, 0, 2, 1, 1, 1, n9, 1, n11, 0, 0, 1])/
    (2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 4*n1*n2 + 
     4*n2^2) + (n3*(1 + n3)*j[p4a, n1, -2 + n2, 2 + n3, 0, 1, 1, 1, 1, n9, 1, 
      n11, 0, 0, 1])/(2*(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 
      4*d*n2 + 4*n1*n2 + 4*n2^2)) + 
   ((-6 + 3*d - 2*n1 - 7*n11 + 3*d*n11 - 2*n1*n11 - n11^2 - 4*n2 - 4*n11*n2)*
     j[p4a, n1, -1 + n2, n3, 0, 1, 1, 0, 1, n9, 1, 2 + n11, 0, 0, 1])/
    (2*(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 4*n1*n2 + 
      4*n2^2)) + (n11*(8 - 3*d + n1 + n11 + 2*n2 + n3 + n9)*
     j[p4a, n1, -1 + n2, n3, 0, 1, 1, 0, 1, 1 + n9, 1, 1 + n11, 0, 0, 1])/
    (2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 4*n1*n2 + 
     4*n2^2) + ((-6 + 3*d - 2*n1 - 3*n11 - 4*n2)*j[p4a, n1, -1 + n2, n3, 0, 
      1, 1, 0, 2, n9, 1, 1 + n11, 0, 0, 1])/
    (2*(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 4*n1*n2 + 
      4*n2^2)) + ((6 - 3*d + 2*n1 + 7*n11 - 3*d*n11 + 2*n1*n11 + n11^2 + 
      4*n2 + 4*n11*n2)*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 1, n9, 0, 2 + n11, 
      0, 0, 1])/(2*(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 
      4*n1*n2 + 4*n2^2)) + ((6*n11 - 3*d*n11 + n11^2 + 4*n11*n2 - 6*n3 + 
      3*d*n3 - 2*n1*n3 - n11*n3 - 4*n2*n3)*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 
      1, 1, n9, 1, 1 + n11, 0, 0, 1])/(2*(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + 
      n1^2 + 6*n2 - 4*d*n2 + 4*n1*n2 + 4*n2^2)) - 
   (n11*(8 - 3*d + n1 + n11 + 2*n2 + n3 + n9)*j[p4a, n1, -1 + n2, n3, 0, 1, 
      1, 1, 1, 1 + n9, 0, 1 + n11, 0, 0, 1])/(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + 
     n1^2 + 6*n2 - 4*d*n2 + 4*n1*n2 + 4*n2^2) + 
   ((-68 + 43*d - 7*d^2 - 22*n1 + 8*d*n1 - 2*n1^2 - 22*n11 + 8*d*n11 - 
      4*n1*n11 - 2*n11^2 - 12*n2 + 4*d*n2 - 4*n1*n2 - 4*n11*n2 - 22*n3 + 
      8*d*n3 - 4*n1*n3 - 4*n11*n3 - 4*n2*n3 - 2*n3^2 - 20*n9 + 5*d*n9 - 
      2*n1*n9 - 2*n11*n9 - 2*n3*n9 - 2*n9^2)*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 
      1, 1, 1 + n9, 1, n11, 0, 0, 1])/(2*(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + 
      n1^2 + 6*n2 - 4*d*n2 + 4*n1*n2 + 4*n2^2)) + 
   ((4 - d)*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 1, 1 + n9, 1, n11, 0, 0, 2])/
    (2*(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 4*n1*n2 + 
      4*n2^2)) + (n11*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 2, n9, 0, 1 + n11, 
      0, 0, 1])/(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 
     4*n1*n2 + 4*n2^2) + ((-6 + 3*d - 2*n1 - 4*n2)*j[p4a, n1, -1 + n2, n3, 0, 
      1, 1, 2, 1, n9, 0, 1 + n11, 0, 0, 1])/
    (2*(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 4*n1*n2 + 
      4*n2^2)) - (n11*j[p4a, n1, -1 + n2, n3, 0, 1, 2, 0, 1, n9, 1, 1 + n11, 
      0, 0, 1])/(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 
     4*n1*n2 + 4*n2^2) + (n11*j[p4a, n1, -1 + n2, n3, 0, 1, 2, 1, 1, n9, 0, 
      1 + n11, 0, 0, 1])/(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 
     4*d*n2 + 4*n1*n2 + 4*n2^2) + ((-12 + 5*d - 2*n1 - 2*n11 - 4*n2 - 2*n3)*
     j[p4a, n1, -1 + n2, n3, 0, 1, 2, 1, 1, 1 + n9, 0, n11, 0, 0, 1])/
    (2*(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 4*n1*n2 + 
      4*n2^2)) + ((-8 + 3*d - n1 - n11 - 2*n2 - n3 - n9)*
     j[p4a, n1, -1 + n2, n3, 0, 2, 0, 1, 1, 1 + n9, 1, n11, 0, 0, 1])/
    (2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 4*n1*n2 + 
     4*n2^2) + j[p4a, n1, -1 + n2, n3, 0, 2, 0, 1, 2, n9, 1, n11, 0, 0, 1]/
    (2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 4*n1*n2 + 
     4*n2^2) - (n11*j[p4a, n1, -1 + n2, n3, 0, 2, 1, 0, 1, n9, 1, 1 + n11, 0, 
      0, 1])/(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 
     4*n1*n2 + 4*n2^2) + j[p4a, n1, -1 + n2, n3, 0, 2, 1, 0, 2, n9, 1, n11, 
     0, 0, 1]/(-2 + 3*d - d^2 - 3*n1 + 2*d*n1 - n1^2 - 6*n2 + 4*d*n2 - 
     4*n1*n2 - 4*n2^2) + (n11*j[p4a, n1, -1 + n2, n3, 0, 2, 1, 1, 1, n9, 0, 
      1 + n11, 0, 0, 1])/(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 
     4*d*n2 + 4*n1*n2 + 4*n2^2) + 
   (n11*n3*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 0, 1, n9, 1, 1 + n11, 0, 0, 
      1])/(2*(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 
      4*n1*n2 + 4*n2^2)) + (n3*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 0, 2, n9, 
      1, n11, 0, 0, 1])/(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 
     4*d*n2 + 4*n1*n2 + 4*n2^2) + 
   ((6*n3 - 3*d*n3 + 2*n1*n3 + 3*n11*n3 + 4*n2*n3)*
     j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 0, n9, 1, 1 + n11, 0, 0, 1])/
    (2*(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 4*n1*n2 + 
      4*n2^2)) - (n3*(-8 + 3*d - n1 - n11 - 2*n2 - n3 - n9)*
     j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 0, 1 + n9, 1, n11, 0, 0, 1])/
    (2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 4*n1*n2 + 
     4*n2^2) + ((-6*n3 + 3*d*n3 - 2*n1*n3 - 2*n11*n3 - 4*n2*n3)*
     j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, n9, 0, 1 + n11, 0, 0, 1])/
    (2*(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 4*n1*n2 + 
      4*n2^2)) + ((21*n3 - 5*d*n3 + 3*n11*n3 + 4*n3^2 + 2*n3*n9)*
     j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, n9, 1, n11, 0, 0, 1])/
    (2*(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 4*n1*n2 + 
      4*n2^2)) + ((-6*n3 + 3*d*n3 - 2*n1*n3 - 2*n11*n3 - 4*n2*n3)*
     j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, n9, 1, 1 + n11, -1, 0, 1])/
    (2*(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 4*n1*n2 + 
      4*n2^2)) + ((6*n3 - 3*d*n3 + 2*n1*n3 + n11*n3 + 4*n2*n3)*
     j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, n9, 1, 1 + n11, 0, -1, 1])/
    (2*(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 4*n1*n2 + 
      4*n2^2)) + ((6*n3 - 3*d*n3 + 2*n1*n3 + 2*n11*n3 + 4*n2*n3)*
     j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, n9, 1, 1 + n11, 0, 0, 1])/
    (2*(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 4*n1*n2 + 
      4*n2^2)) + (n3*(-8 + 3*d - n1 - n11 - 2*n2 - n3 - n9)*
     j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, 1 + n9, 0, n11, 0, 0, 1])/
    (2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 4*n1*n2 + 
     4*n2^2) - (n3*(-8 + 3*d - n1 - n11 - 2*n2 - n3 - n9)*
     j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, -1 + n11, 0, 0, 
      1])/(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 4*n1*n2 + 
     4*n2^2) + (n3*(-8 + 3*d - n1 - n11 - 2*n2 - n3 - n9)*
     j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, n11, -1, 0, 1])/
    (2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 4*n1*n2 + 
     4*n2^2) - (n3*(-8 + 3*d - n1 - n11 - 2*n2 - n3 - n9)*
     j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, n11, 0, -1, 1])/
    (2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 4*n1*n2 + 
     4*n2^2) + (n3*n9*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, 
      n11, 0, 0, 0])/(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 
     4*n1*n2 + 4*n2^2) + ((8*n3 - 3*d*n3 + n1*n3 + n11*n3 + 2*n2*n3 + n3^2)*
     j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, n11, 0, 0, 1])/
    (2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 4*n1*n2 + 
     4*n2^2) + (n3*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 2, 0, n9, 1, n11, 0, 
      0, 1])/(2*(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 
      4*n1*n2 + 4*n2^2)) - (n3*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 2, 1, 0, n9, 
      1, n11, 0, 0, 1])/(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 
     4*d*n2 + 4*n1*n2 + 4*n2^2) + 
   (n3*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 2, 1, 1, n9, 1, n11, 0, 0, 0])/
    (2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 4*n1*n2 + 
     4*n2^2) + (n3*j[p4a, n1, -1 + n2, 1 + n3, 0, 2, 0, 1, 1, n9, 1, n11, 0, 
      0, 1])/(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 
     4*n1*n2 + 4*n2^2) - (n3*j[p4a, n1, -1 + n2, 1 + n3, 0, 2, 1, 0, 1, n9, 
      1, n11, 0, 0, 1])/(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 
     4*d*n2 + 4*n1*n2 + 4*n2^2) + 
   (n3*j[p4a, n1, -1 + n2, 1 + n3, 0, 2, 1, 1, 1, n9, 1, n11, 0, 0, 0])/
    (2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 4*n1*n2 + 
     4*n2^2) + (n3*(1 + n3)*j[p4a, n1, -1 + n2, 2 + n3, 0, 1, 1, 0, 1, n9, 1, 
      n11, 0, 0, 1])/(2*(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 
      4*d*n2 + 4*n1*n2 + 4*n2^2)) - 
   (n3*(1 + n3)*j[p4a, n1, -1 + n2, 2 + n3, 0, 1, 1, 1, 0, n9, 1, n11, 0, 0, 
      1])/(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 4*n1*n2 + 
     4*n2^2) + (n3*(1 + n3)*j[p4a, n1, -1 + n2, 2 + n3, 0, 1, 1, 1, 1, n9, 1, 
      n11, -1, 0, 1])/(2*(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 
      4*d*n2 + 4*n1*n2 + 4*n2^2)) - 
   (3*n3*(1 + n3)*j[p4a, n1, -1 + n2, 2 + n3, 0, 1, 1, 1, 1, n9, 1, n11, 0, 
      -1, 1])/(2*(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 
      4*n1*n2 + 4*n2^2)) + (n11*j[p4a, n1, n2, n3, 0, 1, 1, 0, 1, n9, 1, 
      1 + n11, 0, 0, 1])/(-2 + d - n1 - 2*n2) - 
   (n11*j[p4a, n1, n2, n3, 0, 1, 1, 1, 0, n9, 1, 1 + n11, 0, 0, 1])/
    (-2 + d - n1 - 2*n2) - (n11*j[p4a, n1, n2, n3, 0, 1, 1, 1, 1, n9, 0, 
      1 + n11, 0, 0, 1])/(-2 + d - n1 - 2*n2) + 
   j[p4a, n1, n2, n3, 0, 1, 1, 2, 0, n9, 1, n11, 0, 0, 1]/
    (2 - d + n1 + 2*n2) + j[p4a, n1, n2, n3, 0, 2, 0, 1, 1, n9, 1, n11, 0, 0, 
     1]/(2 - d + n1 + 2*n2) + (n1*(8 - 3*d + n1 + n11 + 2*n2 + n3 + n9)*
     j[p4a, 1 + n1, -2 + n2, n3, 0, 1, 1, 1, 1, 1 + n9, 1, n11, 0, 0, 1])/
    (2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 4*n1*n2 + 
     4*n2^2) - (n1*j[p4a, 1 + n1, -2 + n2, n3, 0, 1, 1, 2, 1, n9, 1, n11, 0, 
      0, 1])/(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 
     4*n1*n2 + 4*n2^2) - (n1*j[p4a, 1 + n1, -2 + n2, n3, 0, 1, 2, 1, 1, n9, 
      1, n11, 0, 0, 1])/(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 
     4*d*n2 + 4*n1*n2 + 4*n2^2) - 
   (2*n1*n3*j[p4a, 1 + n1, -2 + n2, 1 + n3, 0, 1, 1, 1, 1, n9, 1, n11, 0, 0, 
      1])/(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 4*n1*n2 + 
     4*n2^2) - (n1*n11*j[p4a, 1 + n1, -1 + n2, n3, 0, 1, 1, 0, 1, n9, 1, 
      1 + n11, 0, 0, 1])/(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 
     4*d*n2 + 4*n1*n2 + 4*n2^2) - 
   (n1*j[p4a, 1 + n1, -1 + n2, n3, 0, 1, 1, 0, 2, n9, 1, n11, 0, 0, 1])/
    (2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 4*n1*n2 + 
     4*n2^2) + (n1*n11*j[p4a, 1 + n1, -1 + n2, n3, 0, 1, 1, 1, 0, n9, 1, 
      1 + n11, 0, 0, 1])/(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 
     4*d*n2 + 4*n1*n2 + 4*n2^2) + 
   (n1*n11*j[p4a, 1 + n1, -1 + n2, n3, 0, 1, 1, 1, 1, n9, 0, 1 + n11, 0, 0, 
      1])/(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 4*n1*n2 + 
     4*n2^2) + ((-n1 + d*n1 - n1^2 - 2*n1*n2 - n1*n3)*
     j[p4a, 1 + n1, -1 + n2, n3, 0, 1, 1, 1, 1, n9, 1, n11, 0, 0, 1])/
    (2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 4*n1*n2 + 
     4*n2^2) - (n1*(8 - 3*d + n1 + n11 + 2*n2 + n3 + n9)*
     j[p4a, 1 + n1, -1 + n2, n3, 0, 1, 1, 1, 1, 1 + n9, 0, n11, 0, 0, 1])/
    (2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 4*n1*n2 + 
     4*n2^2) + (n1*j[p4a, 1 + n1, -1 + n2, n3, 0, 1, 1, 1, 2, n9, 0, n11, 0, 
      0, 1])/(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 
     4*n1*n2 + 4*n2^2) + (n1*j[p4a, 1 + n1, -1 + n2, n3, 0, 1, 1, 2, 0, n9, 
      1, n11, 0, 0, 1])/(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 
     4*d*n2 + 4*n1*n2 + 4*n2^2) + 
   (n1*j[p4a, 1 + n1, -1 + n2, n3, 0, 1, 2, 1, 1, n9, 0, n11, 0, 0, 1])/
    (2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 4*n1*n2 + 
     4*n2^2) + (2*n1*n3*j[p4a, 1 + n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 0, n9, 1, 
      n11, 0, 0, 1])/(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 
     4*n1*n2 + 4*n2^2) + (n1*n3*j[p4a, 1 + n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 
      1, n9, 0, n11, 0, 0, 1])/(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 
     4*d*n2 + 4*n1*n2 + 4*n2^2) - 
   (n1*n3*j[p4a, 1 + n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, n9, 1, n11, -1, 0, 
      1])/(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 4*n1*n2 + 
     4*n2^2) + (2*n1*n3*j[p4a, 1 + n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, n9, 1, 
      n11, 0, -1, 1])/(2 - 3*d + d^2 + 3*n1 - 2*d*n1 + n1^2 + 6*n2 - 4*d*n2 + 
     4*n1*n2 + 4*n2^2) + (n1*j[p4a, 1 + n1, n2, n3, 0, 1, 1, 1, 1, n9, 0, 
      n11, 0, 0, 1])/(2 - d + n1 + 2*n2), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 0 && n12 == 0 && n14 == 1 && n4 == 0 && n5 == 1 && 
    n6 == 1 && n7 == 1 && n8 == 1 &&  !(n13 == -1 || n13 == 0 || n9 == 0) -> 
  ((-8*n9 + 3*d*n9 - n1*n9 - n13*n9 - 2*n2*n9 - n3*n9 - n9^2)*
     j[p4a, -1 + n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, 0, 
      2 + n13, 1])/((-1 + n3)*(1 - d + n1 + n3)) + 
   ((12 - 5*d + 2*n1 + 2*n13 + 4*n2 + 2*n3)*j[p4a, -1 + n1, -1 + n2, -1 + n3, 
      0, 2, 1, 1, 1, 1 + n9, 1, 0, 0, 1 + n13, 1])/
    (2*(-1 + d - n1 - n3)*(-1 + n3)) + 
   ((-9 + 3*d - n1 - 2*n13 - 2*n2 - n3 - n9)*j[p4a, n1, -2 + n2, -1 + n3, 0, 
      1, 2, 1, 1, n9, 1, 0, 0, 2 + n13, 1])/((-1 + n3)*(1 - d + n1 + n3)) + 
   j[p4a, n1, -2 + n2, n3, 0, 1, 1, 2, 1, n9, 1, 0, 0, 1 + n13, 1]/
    (2*(-1 + d - n1 - n3)) + j[p4a, n1, -2 + n2, n3, 0, 2, 1, 1, 1, n9, 1, 0, 
     0, 1 + n13, 1]/(-1 + d - n1 - n3) + 
   (n3*j[p4a, n1, -2 + n2, 1 + n3, 0, 1, 1, 1, 1, n9, 1, 0, 0, 1 + n13, 1])/
    (2*(1 - d + n1 + n3)) + ((8 - 3*d + n1 + n13 + 2*n2 + n3 + n9)*
     j[p4a, n1, -1 + n2, -1 + n3, 0, 0, 1, 1, 1, n9, 1, 0, 0, 2 + n13, 2])/
    ((-1 + n3)*(1 - d + n1 + n3)) + 
   ((8*n9 - 3*d*n9 + n1*n9 + n13*n9 + 2*n2*n9 + n3*n9 + n9^2)*
     j[p4a, n1, -1 + n2, -1 + n3, 0, 0, 1, 1, 1, 1 + n9, 1, 0, 0, 2 + n13, 
      1])/((-1 + n3)*(1 - d + n1 + n3)) + 
   ((8 - 3*d + n1 + n13 + 2*n2 + n3 + n9)*j[p4a, n1, -1 + n2, -1 + n3, 0, 0, 
      2, 1, 1, n9, 1, 0, 0, 2 + n13, 1])/((-1 + n3)*(1 - d + n1 + n3)) + 
   ((35 - 21*d + 3*d^2 + 4*n1 - d*n1 + 7*n13 - 2*d*n13 + 8*n2 - 2*d*n2 + 
      5*n3 - d*n3 + n13*n3 + 13*n9 - 4*d*n9 + n1*n9 + 2*n13*n9 + 2*n2*n9 + 
      n3*n9 + n9^2)*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 1, n9, 1, 0, 0, 
      2 + n13, 1])/((-1 + n3)*(1 - d + n1 + n3)) + 
   ((60 - 37*d + 5*d^2 + 10*n1 - 2*d*n1 + 10*n13 - 2*d*n13 + 20*n2 - 4*d*n2 + 
      10*n3 - 2*d*n3 + 28*n9 - 11*d*n9 + 4*n1*n9 + 4*n13*n9 + 8*n2*n9 + 
      4*n3*n9 + 2*n9^2)*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 1, 1 + n9, 
      1, 0, 0, 1 + n13, 1])/(2*(-1 + n3)*(1 - d + n1 + n3)) + 
   ((-12 + 5*d - 2*n1 - 2*n13 - 4*n2 - 2*n3 - 2*n9)*
     j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, 0, 1 + n13, 
      2])/(2*(-1 + n3)*(1 - d + n1 + n3)) + 
   ((1 + n13)*n9*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, 0, 
      2 + n13, 0])/((-1 + n3)*(1 - d + n1 + n3)) - 
   ((1 + n13)*n9*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, 0, 
      2 + n13, 1])/((-1 + n3)*(1 - d + n1 + n3)) + 
   ((1 + n13)*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 2, 1, 1, n9, 1, 0, 0, 
      2 + n13, 0])/((-1 + n3)*(1 - d + n1 + n3)) + 
   ((12 - 5*d + 2*n1 + 2*n13 + 4*n2 + 2*n3)*j[p4a, n1, -1 + n2, -1 + n3, 0, 
      1, 2, 1, 1, 1 + n9, 0, 0, 0, 1 + n13, 1])/(2*(-1 + d - n1 - n3)*
     (-1 + n3)) + ((1 + n13)*j[p4a, n1, -1 + n2, -1 + n3, 0, 2, 1, 1, 1, n9, 
      1, 0, 0, 2 + n13, 0])/((-1 + n3)*(1 - d + n1 + n3)) + 
   ((1 + n13)*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 0, 1, n9, 1, 0, 0, 2 + n13, 
      1])/(-1 + d - n1 - n3) + 
   ((1 + n13)*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 0, n9, 1, 0, 0, 2 + n13, 
      1])/(-1 + d - n1 - n3) + 
   ((-1 - n13)*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 1, n9, 1, 0, -1, 2 + n13, 
      1])/(-1 + d - n1 - n3) + ((-13 + 5*d - 2*n1 - 4*n3 - 2*n9)*
     j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 1, n9, 1, 0, 0, 1 + n13, 1])/
    (2*(-1 + d - n1 - n3)) - (n9*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 1, 
      1 + n9, 1, 0, 0, 1 + n13, 0])/(-1 + d - n1 - n3) + 
   (n9*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, 0, 1 + n13, 1])/
    (-1 + d - n1 - n3) - j[p4a, n1, -1 + n2, n3, 0, 1, 1, 2, 0, n9, 1, 0, 0, 
     1 + n13, 1]/(2*(-1 + d - n1 - n3)) + 
   j[p4a, n1, -1 + n2, n3, 0, 1, 2, 1, 0, n9, 1, 0, 0, 1 + n13, 1]/
    (-1 + d - n1 - n3) + j[p4a, n1, -1 + n2, n3, 0, 1, 2, 1, 1, n9, 1, 0, 0, 
     1 + n13, 0]/(1 - d + n1 + n3) + j[p4a, n1, -1 + n2, n3, 0, 2, 0, 1, 1, 
     n9, 1, 0, 0, 1 + n13, 1]/(1 - d + n1 + n3) - 
   (n3*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 0, 1, n9, 1, 0, 0, 1 + n13, 1])/
    (2*(1 - d + n1 + n3)) - (n3*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 0, 
      n9, 1, 0, 0, 1 + n13, 1])/(1 - d + n1 + n3) + 
   (n3*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, n9, 1, 0, -1, 1 + n13, 1])/
    (2*(1 - d + n1 + n3)) - (n3*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, 
      n9, 1, 0, 0, n13, 1])/(2*(1 - d + n1 + n3)) + 
   ((1 + n13)*(3 - 2*d + n1 + 2*n2 + n3)*j[p4a, n1, n2, -2 + n3, 0, 1, 1, 1, 
      1, n9, 1, 0, 0, 2 + n13, 1])/((-1 + n3)*(1 - d + n1 + n3)) - 
   ((1 + n13)*(3 - 2*d + n1 + 2*n2 + n3)*j[p4a, n1, n2, -1 + n3, 0, 1, 1, 0, 
      1, n9, 1, 0, 0, 2 + n13, 1])/((-1 + n3)*(1 - d + n1 + n3)) + 
   ((4 - d)*j[p4a, n1, n2, -1 + n3, 0, 1, 1, 0, 2, n9, 1, 0, 0, 1 + n13, 1])/
    (2*(-1 + d - n1 - n3)*(-1 + n3)) - 
   ((1 + n13)*(3 - 2*d + n1 + 2*n2 + n3)*j[p4a, n1, n2, -1 + n3, 0, 1, 1, 1, 
      0, n9, 1, 0, 0, 2 + n13, 1])/((-1 + n3)*(1 - d + n1 + n3)) + 
   ((1 + n13)*(3 - 2*d + n1 + 2*n2 + n3)*j[p4a, n1, n2, -1 + n3, 0, 1, 1, 1, 
      1, n9, 1, 0, -1, 2 + n13, 1])/((-1 + n3)*(1 - d + n1 + n3)) + 
   ((40 - 39*d + 8*d^2 + 20*n1 - 8*d*n1 + 2*n1^2 + 12*n13 - 8*d*n13 + 
      4*n1*n13 + 38*n2 - 16*d*n2 + 8*n1*n2 + 8*n13*n2 + 8*n2^2 + 16*n3 - 
      5*d*n3 + 2*n1*n3 + 4*n13*n3 + 6*n2*n3)*j[p4a, n1, n2, -1 + n3, 0, 1, 1, 
      1, 1, n9, 1, 0, 0, 1 + n13, 1])/(2*(-1 + d - n1 - n3)*(-1 + n3)) + 
   ((-4 + d)*j[p4a, n1, n2, -1 + n3, 0, 1, 1, 2, 0, n9, 1, 0, 0, 1 + n13, 1])/
    (2*(-1 + d - n1 - n3)*(-1 + n3)) + 
   ((3 - 2*d + n1 + 2*n2 + n3)*j[p4a, n1, n2, -1 + n3, 0, 2, 0, 1, 1, n9, 1, 
      0, 0, 1 + n13, 1])/((-1 + n3)*(1 - d + n1 + n3)) + 
   ((4 - 2*d + n1 + n2 + n3)*j[p4a, n1, n2, n3, 0, 1, 1, 0, 1, n9, 1, 0, 0, 
      1 + n13, 1])/(-1 + d - n1 - n3) + 
   ((3 - 3*d + 2*n1 + 3*n2 + 2*n3)*j[p4a, n1, n2, n3, 0, 1, 1, 1, 0, n9, 1, 
      0, 0, 1 + n13, 1])/(-1 + d - n1 - n3) + 
   ((-4 + 3*d - 2*n1 - 2*n2 - 2*n3)*j[p4a, n1, n2, n3, 0, 1, 1, 1, 1, n9, 1, 
      0, -1, 1 + n13, 1])/(2*(-1 + d - n1 - n3)) - 
   (n1*j[p4a, 1 + n1, -2 + n2, -1 + n3, 0, 1, 2, 1, 1, n9, 1, 0, 0, 1 + n13, 
      1])/((-1 + n3)*(1 - d + n1 + n3)) - 
   (n1*j[p4a, 1 + n1, -2 + n2, n3, 0, 1, 1, 1, 1, n9, 1, 0, 0, 1 + n13, 1])/
    (1 - d + n1 + n3) - (n1*(3 - 2*d + n1 + 2*n2 + n3)*
     j[p4a, 1 + n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 1, n9, 1, 0, 0, 1 + n13, 
      1])/((-1 + n3)*(1 - d + n1 + n3)) + 
   (n1*j[p4a, 1 + n1, -1 + n2, -1 + n3, 0, 1, 2, 1, 1, n9, 0, 0, 0, 1 + n13, 
      1])/((-1 + n3)*(1 - d + n1 + n3)) + 
   (n1*j[p4a, 1 + n1, -1 + n2, n3, 0, 1, 1, 1, 1, n9, 0, 0, 0, 1 + n13, 1])/
    (1 - d + n1 + n3) + (n1*j[p4a, 1 + n1, -1 + n2, n3, 0, 1, 1, 1, 1, n9, 1, 
      0, 0, n13, 1])/(1 - d + n1 + n3) - 
   (n1*j[p4a, 1 + n1, -1 + n2, n3, 0, 1, 1, 1, 1, n9, 1, 0, 0, 1 + n13, 1])/
    (1 - d + n1 + n3) + (n1*(3 - 2*d + n1 + 2*n2 + n3)*
     j[p4a, 1 + n1, n2, -1 + n3, 0, 1, 1, 1, 1, n9, 0, 0, 0, 1 + n13, 1])/
    ((-1 + n3)*(1 - d + n1 + n3)), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; 
   n10 == 1 && n12 == 0 && n14 == 1 && n4 == 0 && n5 == 1 && n6 == 1 && 
    n7 == 1 && n8 == 1 && n9 == 0 &&  !(n11 == 0 || n13 == 0) -> 
  ((1 + n11)*j[p4a, -1 + n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 1, 0, 1, 2 + n11, 
      0, 1 + n13, 1])/(-1 + n3) + 
   (2*j[p4a, -1 + n1, -1 + n2, -1 + n3, 0, 2, 1, 1, 1, 0, 1, 1 + n11, 0, 
      1 + n13, 1])/(-1 + n3) - j[p4a, -1 + n1, -1 + n2, n3, 0, 1, 1, 1, 1, 0, 
    1, 1 + n11, 0, 1 + n13, 1] - 
   (2*(1 + n13)*j[p4a, -1 + n1, n2, -2 + n3, 0, 1, 1, 1, 1, 0, 1, 1 + n11, 0, 
      2 + n13, 1])/(-1 + n3) + 
   ((1 + n11)*j[p4a, -1 + n1, n2, -1 + n3, -1, 1, 1, 1, 1, 0, 1, 2 + n11, 0, 
      1 + n13, 1])/(-1 + n3) - 
   (2*(1 + n13)*j[p4a, -1 + n1, n2, -1 + n3, 0, 0, 1, 1, 1, 0, 1, 1 + n11, 0, 
      2 + n13, 1])/(-1 + n3) + 
   ((-1 - n11)*j[p4a, -1 + n1, n2, -1 + n3, 0, 0, 1, 1, 1, 0, 1, 2 + n11, 0, 
      1 + n13, 1])/(-1 + n3) + 
   ((-1 - n11)*j[p4a, -1 + n1, n2, -1 + n3, 0, 1, 0, 1, 1, 0, 1, 2 + n11, 0, 
      1 + n13, 1])/(-1 + n3) + j[p4a, -1 + n1, n2, -1 + n3, 0, 1, 0, 1, 1, 0, 
     2, 1 + n11, 0, 1 + n13, 1]/(1 - n3) + 
   j[p4a, -1 + n1, n2, -1 + n3, 0, 1, 0, 1, 2, 0, 1, 1 + n11, 0, 1 + n13, 1]/
    (-1 + n3) + (2*(1 + n13)*j[p4a, -1 + n1, n2, -1 + n3, 0, 1, 1, 0, 1, 0, 
      1, 1 + n11, 0, 2 + n13, 1])/(-1 + n3) + 
   (2*(1 + n13)*j[p4a, -1 + n1, n2, -1 + n3, 0, 1, 1, 1, 0, 0, 1, 1 + n11, 0, 
      2 + n13, 1])/(-1 + n3) + 
   ((-1 - n11)*j[p4a, -1 + n1, n2, -1 + n3, 0, 1, 1, 1, 0, 0, 1, 2 + n11, 0, 
      1 + n13, 1])/(-1 + n3) + 
   ((-1 - n11)*j[p4a, -1 + n1, n2, -1 + n3, 0, 1, 1, 1, 1, 0, 0, 2 + n11, 0, 
      1 + n13, 1])/(-1 + n3) - 
   (2*(1 + n13)*j[p4a, -1 + n1, n2, -1 + n3, 0, 1, 1, 1, 1, 0, 1, 1 + n11, 
      -1, 2 + n13, 1])/(-1 + n3) + 
   ((d + 2*n13 - 2*n3)*j[p4a, -1 + n1, n2, -1 + n3, 0, 1, 1, 1, 1, 0, 1, 
      1 + n11, 0, 1 + n13, 1])/(-1 + n3) + 
   (2*(1 + n13)*j[p4a, -1 + n1, n2, -1 + n3, 0, 1, 1, 1, 1, 0, 1, 1 + n11, 0, 
      2 + n13, 0])/(-1 + n3) - 
   (2*j[p4a, -1 + n1, n2, -1 + n3, 0, 2, 0, 1, 1, 0, 1, 1 + n11, 0, 1 + n13, 
      1])/(-1 + n3) - j[p4a, -1 + n1, n2, n3, -1, 1, 1, 1, 1, 0, 1, 1 + n11, 
    0, 1 + n13, 1] + 2*j[p4a, -1 + n1, n2, n3, 0, 1, 1, 0, 1, 0, 1, 1 + n11, 
     0, 1 + n13, 1] + 4*j[p4a, -1 + n1, n2, n3, 0, 1, 1, 1, 0, 0, 1, 1 + n11, 
     0, 1 + n13, 1] - 2*j[p4a, -1 + n1, n2, n3, 0, 1, 1, 1, 1, 0, 1, 1 + n11, 
     -1, 1 + n13, 1] + 2*j[p4a, -1 + n1, n2, n3, 0, 1, 1, 1, 1, 0, 1, 
     1 + n11, 0, n13, 1] + 2*j[p4a, -1 + n1, n2, n3, 0, 1, 1, 1, 1, 0, 1, 
     1 + n11, 0, 1 + n13, 0] - 
   (n2*j[p4a, -1 + n1, 1 + n2, -1 + n3, 0, 0, 1, 1, 1, 0, 1, 1 + n11, 0, 
      1 + n13, 1])/(-1 + n3) + 
   (n2*j[p4a, -1 + n1, 1 + n2, -1 + n3, 0, 1, 0, 1, 1, 0, 1, 1 + n11, 0, 
      1 + n13, 1])/(-1 + n3) + 
   ((-1 - n11)*j[p4a, n1, -2 + n2, -1 + n3, 0, 1, 1, 1, 1, 0, 1, 2 + n11, 0, 
      1 + n13, 1])/(-1 + n3) - 
   (2*j[p4a, n1, -2 + n2, -1 + n3, 0, 2, 1, 1, 1, 0, 1, 1 + n11, 0, 1 + n13, 
      1])/(-1 + n3) + 2*j[p4a, n1, -2 + n2, n3, 0, 1, 1, 1, 1, 0, 1, 1 + n11, 
     0, 1 + n13, 1] + (2*(1 + n13)*j[p4a, n1, -1 + n2, -2 + n3, 0, 1, 1, 1, 
      1, 0, 1, 1 + n11, 0, 2 + n13, 1])/(-1 + n3) + 
   ((-1 - n11)*j[p4a, n1, -1 + n2, -1 + n3, -1, 1, 1, 1, 1, 0, 1, 2 + n11, 0, 
      1 + n13, 1])/(-1 + n3) + 
   (2*(1 + n13)*j[p4a, n1, -1 + n2, -1 + n3, 0, 0, 1, 1, 1, 0, 1, 1 + n11, 0, 
      2 + n13, 1])/(-1 + n3) + 
   ((1 + n11)*j[p4a, n1, -1 + n2, -1 + n3, 0, 0, 1, 1, 1, 0, 1, 2 + n11, 0, 
      1 + n13, 1])/(-1 + n3) + 
   ((1 + n11)*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 0, 1, 1, 0, 1, 2 + n11, 0, 
      1 + n13, 1])/(-1 + n3) + j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 0, 1, 1, 0, 
     2, 1 + n11, 0, 1 + n13, 1]/(-1 + n3) + 
   j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 0, 1, 2, 0, 1, 1 + n11, 0, 1 + n13, 1]/
    (1 - n3) - (2*(1 + n13)*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 0, 1, 0, 1, 
      1 + n11, 0, 2 + n13, 1])/(-1 + n3) - 
   (2*(1 + n13)*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 0, 0, 1, 1 + n11, 0, 
      2 + n13, 1])/(-1 + n3) + 
   ((1 + n11)*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 0, 0, 1, 2 + n11, 0, 
      1 + n13, 1])/(-1 + n3) + 
   ((-1 - n11)*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 1, -1, 1, 2 + n11, 0, 
      1 + n13, 1])/(-1 + n3) + 
   ((1 + n11)*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 1, 0, 0, 2 + n11, 0, 
      1 + n13, 1])/(-1 + n3) + 
   (2*(1 + n13)*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 1, 0, 1, 1 + n11, 
      -1, 2 + n13, 1])/(-1 + n3) + ((2 - 2*d + 2*n1 + n11 - 2*n13 + 3*n3)*
     j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 1, 0, 1, 1 + n11, 0, 1 + n13, 
      1])/(-1 + n3) - (2*(1 + n13)*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 
      1, 0, 1, 1 + n11, 0, 2 + n13, 0])/(-1 + n3) + 
   j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 2, 1, 0, 0, 1 + n11, 0, 1 + n13, 1]/
    (-1 + n3) + j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 2, 1, 1, 0, 0, 1 + n11, 0, 
     1 + n13, 1]/(-1 + n3) + (2*j[p4a, n1, -1 + n2, -1 + n3, 0, 2, 0, 1, 1, 
      0, 1, 1 + n11, 0, 1 + n13, 1])/(-1 + n3) + 
   2*j[p4a, n1, -1 + n2, n3, -1, 1, 1, 1, 1, 0, 1, 1 + n11, 0, 1 + n13, 1] - 
   2*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 0, 1, 0, 1, 1 + n11, 0, 1 + n13, 1] - 
   5*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 0, 0, 1, 1 + n11, 0, 1 + n13, 1] + 
   j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 1, 0, 0, 1 + n11, 0, 1 + n13, 1] + 
   3*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 1, 0, 1, 1 + n11, -1, 1 + n13, 1] - 
   3*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 1, 0, 1, 1 + n11, 0, n13, 1] - 
   2*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 1, 0, 1, 1 + n11, 0, 1 + n13, 0] - 
   j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 1, 0, 1, 1 + n11, 0, 1 + n13, 1] + 
   ((1 + n11)*j[p4a, n1, n2, -1 + n3, -1, 1, 1, 0, 1, 0, 1, 2 + n11, 0, 
      1 + n13, 1])/(-1 + n3) + j[p4a, n1, n2, -1 + n3, -1, 1, 1, 0, 2, 0, 1, 
     1 + n11, 0, 1 + n13, 1]/(-1 + n3) + 
   ((-1 - n11)*j[p4a, n1, n2, -1 + n3, -1, 1, 1, 1, 1, 0, 0, 2 + n11, 0, 
      1 + n13, 1])/(-1 + n3) + j[p4a, n1, n2, -1 + n3, -1, 1, 1, 1, 1, 0, 1, 
    1 + n11, 0, 1 + n13, 1] + j[p4a, n1, n2, -1 + n3, -1, 1, 1, 2, 1, 0, 0, 
     1 + n11, 0, 1 + n13, 1]/(-1 + n3) + 
   ((1 - 2*n1 - n11 + n2)*j[p4a, n1, n2, -1 + n3, 0, 0, 1, 1, 1, 0, 1, 
      1 + n11, 0, 1 + n13, 1])/(-1 + n3) + 
   j[p4a, n1, n2, -1 + n3, 0, 0, 1, 2, 1, 0, 1, n11, 0, 1 + n13, 1]/
    (1 - n3) + j[p4a, n1, n2, -1 + n3, 0, 0, 2, 1, 1, -1, 1, 1 + n11, 0, 
     1 + n13, 1]/(1 - n3) + ((-n11 - n2)*j[p4a, n1, n2, -1 + n3, 0, 1, 0, 1, 
      1, 0, 1, 1 + n11, 0, 1 + n13, 1])/(-1 + n3) + 
   j[p4a, n1, n2, -1 + n3, 0, 1, 0, 1, 2, 0, 1, n11, 0, 1 + n13, 1]/
    (1 - n3) + j[p4a, n1, n2, -1 + n3, 0, 1, 1, 0, 1, 0, 1, 1 + n11, 0, 
     1 + n13, 1]/(1 - n3) + ((1 + n11)*j[p4a, n1, n2, -1 + n3, 0, 1, 1, 1, 0, 
      -1, 1, 2 + n11, 0, 1 + n13, 1])/(-1 + n3) - 
   (n11*j[p4a, n1, n2, -1 + n3, 0, 1, 1, 1, 0, 0, 1, 1 + n11, 0, 1 + n13, 1])/
    (-1 + n3) + ((5 - 2*d + 2*n1 + 2*n11 + 2*n2 + n3)*
     j[p4a, n1, n2, -1 + n3, 0, 1, 1, 1, 1, -1, 1, 1 + n11, 0, 1 + n13, 1])/
    (-1 + n3) + ((-2*n1 - n11 + n2)*j[p4a, n1, n2, -1 + n3, 0, 1, 1, 1, 1, 0, 
      0, 1 + n11, 0, 1 + n13, 1])/(-1 + n3) + j[p4a, n1, n2, -1 + n3, 0, 1, 
    1, 1, 1, 0, 1, n11, 0, 1 + n13, 1] + 
   j[p4a, n1, n2, -1 + n3, 0, 1, 1, 2, 0, 0, 1, n11, 0, 1 + n13, 1]/
    (1 - n3) - j[p4a, n1, n2, n3, -1, 1, 1, 1, 0, 0, 1, 1 + n11, 0, 1 + n13, 
    1] + j[p4a, n1, n2, n3, -1, 1, 1, 1, 1, 0, 0, 1 + n11, 0, 1 + n13, 1] + 
   j[p4a, n1, n2, n3, -1, 1, 1, 1, 1, 0, 1, 1 + n11, -1, 1 + n13, 1] - 
   j[p4a, n1, n2, n3, -1, 1, 1, 1, 1, 0, 1, 1 + n11, 0, n13, 1] - 
   j[p4a, n1, n2, n3, -1, 1, 1, 1, 1, 0, 1, 1 + n11, 0, 1 + n13, 1] + 
   j[p4a, n1, n2, n3, 0, 1, 1, 0, 1, -1, 1, 1 + n11, 0, 1 + n13, 1] - 
   j[p4a, n1, n2, n3, 0, 1, 1, 0, 1, 0, 1, n11, 0, 1 + n13, 1] - 
   2*j[p4a, n1, n2, n3, 0, 1, 1, 1, 0, 0, 1, n11, 0, 1 + n13, 1] - 
   j[p4a, n1, n2, n3, 0, 1, 1, 1, 1, -1, 1, 1 + n11, 0, n13, 1] + 
   j[p4a, n1, n2, n3, 0, 1, 1, 1, 1, 0, 1, n11, -1, 1 + n13, 1] - 
   j[p4a, n1, n2, n3, 0, 1, 1, 1, 1, 0, 1, n11, 0, 1 + n13, 0] - 
   (2*n1*j[p4a, 1 + n1, -2 + n2, -1 + n3, 0, 1, 1, 1, 1, 0, 1, 1 + n11, 0, 
      1 + n13, 1])/(-1 + n3) + 
   (2*n1*j[p4a, 1 + n1, -1 + n2, -1 + n3, 0, 0, 1, 1, 1, 0, 1, 1 + n11, 0, 
      1 + n13, 1])/(-1 + n3) - 
   (2*n1*j[p4a, 1 + n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 1, -1, 1, 1 + n11, 0, 
      1 + n13, 1])/(-1 + n3) + 
   (2*n1*j[p4a, 1 + n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 1, 0, 0, 1 + n11, 0, 
      1 + n13, 1])/(-1 + n3), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 0 && n14 == 1 && n4 == 0 && n5 == 1 && n6 == 1 && 
    n7 == 1 && n8 == 1 && n9 == 0 && n12 != 0 -> 
  j[p4a, -1 + n1, -1 + n2, n3, 0, 1, 1, 1, 2, 0, 1, 0, 1 + n12, n13, 1]/
    (-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3) + 
   (n13*j[p4a, -1 + n1, n2, n3, 0, 0, 1, 1, 1, 0, 1, 0, 1 + n12, 1 + n13, 1])/
    (11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) + 
   j[p4a, -1 + n1, n2, n3, 0, 1, 0, 1, 2, 0, 1, 0, 1 + n12, n13, 1]/
    (-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3) - 
   (n13*j[p4a, -1 + n1, n2, n3, 0, 1, 1, 0, 1, 0, 1, 0, 1 + n12, 1 + n13, 1])/
    (11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) - 
   (n13*j[p4a, -1 + n1, n2, n3, 0, 1, 1, 1, 0, 0, 1, 0, 1 + n12, 1 + n13, 1])/
    (11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) + 
   ((1 - n13 - n2)*j[p4a, -1 + n1, n2, n3, 0, 1, 1, 1, 1, 0, 1, 0, 1 + n12, 
      n13, 1])/(11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) - 
   (n13*j[p4a, -1 + n1, n2, n3, 0, 1, 1, 1, 1, 0, 1, 0, 1 + n12, 1 + n13, 0])/
    (11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) + 
   j[p4a, -1 + n1, n2, n3, 0, 2, 0, 1, 1, 0, 1, 0, 1 + n12, n13, 1]/
    (11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) + 
   (n3*j[p4a, -1 + n1, n2, 1 + n3, 0, 1, 1, 0, 1, 0, 1, 0, 1 + n12, n13, 1])/
    (-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3) + 
   (2*n3*j[p4a, -1 + n1, n2, 1 + n3, 0, 1, 1, 1, 0, 0, 1, 0, 1 + n12, n13, 
      1])/(-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3) + 
   (n3*j[p4a, -1 + n1, n2, 1 + n3, 0, 1, 1, 1, 1, 0, 1, 0, 1 + n12, -1 + n13, 
      1])/(-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3) + 
   (n3*j[p4a, -1 + n1, n2, 1 + n3, 0, 1, 1, 1, 1, 0, 1, 0, 1 + n12, n13, 0])/
    (-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3) + 
   (n2*j[p4a, -1 + n1, 1 + n2, n3, 0, 0, 1, 1, 1, 0, 1, 0, 1 + n12, n13, 1])/
    (11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) - 
   (n2*j[p4a, -1 + n1, 1 + n2, n3, 0, 1, 0, 1, 1, 0, 1, 0, 1 + n12, n13, 1])/
    (11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) + 
   ((1 + n12)*j[p4a, n1, -2 + n2, n3, 0, 1, 1, 1, 1, 0, 1, 0, 2 + n12, n13, 
      1])/(11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) + 
   j[p4a, n1, -2 + n2, n3, 0, 1, 1, 1, 2, 0, 1, 0, 1 + n12, n13, 1]/
    (11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) + 
   j[p4a, n1, -2 + n2, n3, 0, 1, 1, 2, 1, 0, 1, 0, 1 + n12, n13, 1]/
    (-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3) + 
   (n3*j[p4a, n1, -2 + n2, 1 + n3, 0, 1, 1, 1, 1, 0, 1, 0, 1 + n12, n13, 1])/
    (-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3) + 
   (2*(1 + n12)*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 1, 0, 1, 0, 2 + n12, 
      n13, 1])/(11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) + 
   ((1 + n12)*j[p4a, n1, -1 + n2, n3, 0, 0, 1, 1, 1, 0, 1, 0, 2 + n12, n13, 
      1])/(11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) + 
   j[p4a, n1, -1 + n2, n3, 0, 0, 1, 2, 1, 0, 1, 0, 1 + n12, n13, 1]/
    (11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) + 
   ((1 + n12)*j[p4a, n1, -1 + n2, n3, 0, 1, 0, 1, 1, 0, 1, 0, 2 + n12, n13, 
      1])/(11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) + 
   j[p4a, n1, -1 + n2, n3, 0, 1, 0, 1, 2, 0, 1, 0, 1 + n12, n13, 1]/
    (11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) - 
   (3*(1 + n12)*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 0, 1, 0, 1, 0, 2 + n12, n13, 
      1])/(11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) + 
   j[p4a, n1, -1 + n2, n3, 0, 1, 1, 0, 2, 0, 1, 0, 1 + n12, n13, 1]/
    (-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3) + 
   ((-1 - n12)*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 0, 0, 1, 0, 2 + n12, n13, 
      1])/(11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) + 
   ((1 - d + n1 - 2*n12 + n3)*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 1, 0, 1, 0, 
      1 + n12, n13, 1])/(-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3) - 
   (2*(1 + n12)*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 1, 0, 1, 0, 2 + n12, 
      -1 + n13, 1])/(11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) + 
   ((-1 - n12)*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 1, 0, 1, 0, 2 + n12, n13, 
      0])/(11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) + 
   ((-1 - n12)*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 1, 0, 1, 0, 2 + n12, n13, 
      1])/(11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) + 
   j[p4a, n1, -1 + n2, n3, 0, 1, 1, 2, 0, 0, 1, 0, 1 + n12, n13, 1]/
    (11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) + 
   j[p4a, n1, -1 + n2, n3, 0, 1, 1, 2, 1, 0, 0, 0, 1 + n12, n13, 1]/
    (-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3) + 
   j[p4a, n1, -1 + n2, n3, 0, 1, 2, 1, 1, 0, 0, 0, 1 + n12, n13, 1]/
    (11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) + 
   j[p4a, n1, -1 + n2, n3, 0, 1, 2, 1, 1, 0, 1, 0, 1 + n12, n13, 1]/
    (-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3) + 
   j[p4a, n1, -1 + n2, n3, 0, 2, 1, 1, 1, 0, 1, 0, 1 + n12, n13, 1]/
    (-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3) - 
   (n3*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 0, 1, 0, 1, 0, 1 + n12, n13, 1])/
    (-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3) - 
   (3*n3*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 0, 0, 1, 0, 1 + n12, n13, 
      1])/(-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3) + 
   (n3*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, 0, 0, 0, 1 + n12, n13, 1])/
    (-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3) + 
   (n3*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, 0, 1, 0, n12, n13, 1])/
    (-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3) - 
   (2*n3*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, 0, 1, 0, 1 + n12, 
      -1 + n13, 1])/(-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3) - 
   (n3*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, 0, 1, 0, 1 + n12, n13, 0])/
    (-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3) - 
   (n3*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, 0, 1, 0, 1 + n12, n13, 1])/
    (-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3) + 
   ((1 + n12)*j[p4a, n1, n2, -1 + n3, -1, 1, 1, 1, 1, 0, 1, 0, 2 + n12, n13, 
      1])/(11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) + 
   ((-1 - n12)*j[p4a, n1, n2, -1 + n3, 0, 1, 1, 1, 1, 0, 1, -1, 2 + n12, n13, 
      1])/(11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) - 
   j[p4a, n1, n2, -1 + n3, 0, 1, 1, 1, 1, 0, 1, 0, 1 + n12, n13, 1] + 
   (n13*j[p4a, n1, n2, -1 + n3, 0, 1, 1, 1, 1, 0, 1, 0, 1 + n12, 1 + n13, 1])/
    (11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) + 
   ((1 + n12)*j[p4a, n1, n2, -1 + n3, 0, 1, 1, 1, 1, 0, 1, 0, 2 + n12, n13, 
      1])/(11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) - 
   (2*(1 + n12)*j[p4a, n1, n2, n3, -1, 1, 1, 0, 1, 0, 1, 0, 2 + n12, n13, 1])/
    (11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) + 
   j[p4a, n1, n2, n3, -1, 1, 1, 0, 2, 0, 1, 0, 1 + n12, n13, 1]/
    (-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3) - 
   (2*(1 + n12)*j[p4a, n1, n2, n3, -1, 1, 1, 1, 0, 0, 1, 0, 2 + n12, n13, 1])/
    (11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) + 
   ((2 - d + n3)*j[p4a, n1, n2, n3, -1, 1, 1, 1, 1, 0, 1, 0, 1 + n12, n13, 
      1])/(-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3) + 
   ((-1 - n12)*j[p4a, n1, n2, n3, -1, 1, 1, 1, 1, 0, 1, 0, 2 + n12, n13, 1])/
    (11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) + 
   j[p4a, n1, n2, n3, -1, 1, 1, 2, 0, 0, 1, 0, 1 + n12, n13, 1]/
    (-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3) + 
   j[p4a, n1, n2, n3, -1, 1, 1, 2, 1, 0, 0, 0, 1 + n12, n13, 1]/
    (-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3) + 
   j[p4a, n1, n2, n3, 0, 0, 1, 1, 1, -1, 1, 0, 1 + n12, n13, 2]/
    (-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3) + 
   ((1 + n12)*j[p4a, n1, n2, n3, 0, 0, 1, 1, 1, 0, 1, -1, 2 + n12, n13, 1])/
    (11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) + 
   ((-1 + n1)*j[p4a, n1, n2, n3, 0, 0, 1, 1, 1, 0, 1, 0, 1 + n12, n13, 1])/
    (11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) + 
   j[p4a, n1, n2, n3, 0, 0, 1, 1, 1, 0, 1, 0, 1 + n12, n13, 2]/
    (11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) + 
   j[p4a, n1, n2, n3, 0, 0, 1, 2, 1, 0, 1, -1, 1 + n12, n13, 1]/
    (11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) + 
   j[p4a, n1, n2, n3, 0, 0, 2, 1, 1, -1, 1, 0, 1 + n12, n13, 1]/
    (-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3) + 
   j[p4a, n1, n2, n3, 0, 0, 2, 1, 1, 0, 1, 0, 1 + n12, n13, 1]/
    (11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) + 
   j[p4a, n1, n2, n3, 0, 1, 0, 1, 1, -1, 1, 0, 1 + n12, n13, 2]/
    (-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3) + 
   ((1 + n12)*j[p4a, n1, n2, n3, 0, 1, 0, 1, 1, 0, 1, -1, 2 + n12, n13, 1])/
    (11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) + 
   j[p4a, n1, n2, n3, 0, 1, 0, 1, 1, 0, 1, 0, 1 + n12, n13, 2]/
    (11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) + 
   j[p4a, n1, n2, n3, 0, 1, 0, 1, 2, 0, 1, -1, 1 + n12, n13, 1]/
    (11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) + 
   j[p4a, n1, n2, n3, 0, 1, 1, 0, 1, -1, 1, 0, 1 + n12, n13, 2]/
    (-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3) + 
   ((1 + n12)*j[p4a, n1, n2, n3, 0, 1, 1, 0, 1, 0, 1, -1, 2 + n12, n13, 1])/
    (11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) + 
   ((1 - n3)*j[p4a, n1, n2, n3, 0, 1, 1, 0, 1, 0, 1, 0, 1 + n12, n13, 1])/
    (11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) + 
   j[p4a, n1, n2, n3, 0, 1, 1, 0, 1, 0, 1, 0, 1 + n12, n13, 2]/
    (11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) + 
   j[p4a, n1, n2, n3, 0, 1, 1, 0, 2, 0, 1, -1, 1 + n12, n13, 1]/
    (11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) + 
   j[p4a, n1, n2, n3, 0, 1, 1, 1, 0, -1, 1, 0, 1 + n12, n13, 2]/
    (-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3) + 
   ((1 + n12)*j[p4a, n1, n2, n3, 0, 1, 1, 1, 0, 0, 1, -1, 2 + n12, n13, 1])/
    (11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) + 
   ((1 - n3)*j[p4a, n1, n2, n3, 0, 1, 1, 1, 0, 0, 1, 0, 1 + n12, n13, 1])/
    (11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) + 
   j[p4a, n1, n2, n3, 0, 1, 1, 1, 0, 0, 1, 0, 1 + n12, n13, 2]/
    (11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) + 
   ((5 - 2*d + n1)*j[p4a, n1, n2, n3, 0, 1, 1, 1, 1, -1, 1, 0, 1 + n12, n13, 
      1])/(-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3) + 
   ((n1 - n3)*j[p4a, n1, n2, n3, 0, 1, 1, 1, 1, 0, 0, 0, 1 + n12, n13, 1])/
    (11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) + 
   ((-2 + d - n3)*j[p4a, n1, n2, n3, 0, 1, 1, 1, 1, 0, 1, -1, 1 + n12, n13, 
      1])/(-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3) + 
   ((-1 - n12)*j[p4a, n1, n2, n3, 0, 1, 1, 1, 1, 0, 1, -1, 2 + n12, n13, 0])/
    (11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) + 
   (n13*j[p4a, n1, n2, n3, 0, 1, 1, 1, 1, 0, 1, 0, n12, 1 + n13, 1])/
    (11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) + 
   ((-7 + 2*d - n12 - n3)*j[p4a, n1, n2, n3, 0, 1, 1, 1, 1, 0, 1, 0, 1 + n12, 
      n13, 1])/(-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3) + 
   j[p4a, n1, n2, n3, 0, 1, 1, 2, 0, 0, 1, -1, 1 + n12, n13, 1]/
    (11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) + 
   j[p4a, n1, n2, n3, 0, 2, 0, 1, 1, -1, 1, 0, 1 + n12, n13, 1]/
    (-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3) + 
   j[p4a, n1, n2, n3, 0, 2, 0, 1, 1, 0, 1, 0, 1 + n12, n13, 1]/
    (11 - 4*d + 2*n1 + n12 + n13 + 2*n2 + n3) + 
   (n3*j[p4a, n1, n2, 1 + n3, -1, 1, 1, 0, 1, 0, 1, 0, 1 + n12, n13, 1])/
    (-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3) + 
   (n3*j[p4a, n1, n2, 1 + n3, -1, 1, 1, 1, 0, 0, 1, 0, 1 + n12, n13, 1])/
    (-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3) + 
   (n3*j[p4a, n1, n2, 1 + n3, -1, 1, 1, 1, 1, 0, 0, 0, 1 + n12, n13, 1])/
    (-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3) - 
   (n3*j[p4a, n1, n2, 1 + n3, -1, 1, 1, 1, 1, 0, 1, 0, 1 + n12, n13, 1])/
    (-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3) - 
   (2*n3*j[p4a, n1, n2, 1 + n3, 0, 1, 1, 0, 1, 0, 1, -1, 1 + n12, n13, 1])/
    (-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3) + 
   (n3*j[p4a, n1, n2, 1 + n3, 0, 1, 1, 0, 1, 0, 1, 0, n12, n13, 1])/
    (-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3) - 
   (2*n3*j[p4a, n1, n2, 1 + n3, 0, 1, 1, 1, 0, 0, 1, -1, 1 + n12, n13, 1])/
    (-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3) + 
   (n3*j[p4a, n1, n2, 1 + n3, 0, 1, 1, 1, 0, 0, 1, 0, n12, n13, 1])/
    (-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3) + 
   (n3*j[p4a, n1, n2, 1 + n3, 0, 1, 1, 1, 1, 0, 0, 0, n12, n13, 1])/
    (-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3) - 
   (n3*j[p4a, n1, n2, 1 + n3, 0, 1, 1, 1, 1, 0, 1, -1, 1 + n12, n13, 0])/
    (-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3) - 
   (n3*j[p4a, n1, n2, 1 + n3, 0, 1, 1, 1, 1, 0, 1, 0, n12, n13, 1])/
    (-11 + 4*d - 2*n1 - n12 - n13 - 2*n2 - n3), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 0 && n12 == 0 && n13 == 0 && n14 == 1 && n4 == 0 && 
    n5 == 1 && n7 == 1 && n8 == 1 && n9 == 0 &&  !(n3 == 0 || n6 == 1) -> 
  j[p4a, -1 + n1, -1 + n2, 1 + n3, 0, 1, n6, 1, 2, 0, 1, 0, 0, 0, 1]/
    (-9 + 4*d - 2*n1 - 2*n2 - n3 - 2*n6) + 
   ((90 - 74*d + 15*d^2 + 22*n1 - 8*d*n1 + 40*n2 - 16*d*n2 + 4*n1*n2 + 
      4*n2^2 + 32*n3 - 14*d*n3 + 6*n1*n3 + 8*n2*n3 + 2*n3^2 + 40*n6 - 
      16*d*n6 + 4*n1*n6 + 8*n2*n6 + 8*n3*n6 + 4*n6^2)*
     j[p4a, -1 + n1, -1 + n2, 1 + n3, 0, 2, n6, 1, 1, 0, 1, 0, 0, 0, 1])/
    ((-3 + d - n3)*(-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(-9 + 4*d - 2*n1 - 2*n2 - 
      n3 - 2*n6)) - ((1 + n3)*(90 - 74*d + 15*d^2 + 22*n1 - 8*d*n1 + 40*n2 - 
      16*d*n2 + 4*n1*n2 + 4*n2^2 + 32*n3 - 14*d*n3 + 6*n1*n3 + 8*n2*n3 + 
      2*n3^2 + 40*n6 - 16*d*n6 + 4*n1*n6 + 8*n2*n6 + 8*n3*n6 + 4*n6^2)*
     j[p4a, -1 + n1, -1 + n2, 2 + n3, 0, 1, n6, 1, 1, 0, 1, 0, 0, 0, 1])/
    ((3 - d + n3)*(-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(9 - 4*d + 2*n1 + 2*n2 + 
      n3 + 2*n6)) + j[p4a, -1 + n1, n2, 1 + n3, 0, 1, n6, 0, 2, 0, 1, 0, 0, 
     0, 1]/(6 - 3*d + 2*n1 + 2*n2 + 2*n6) + 
   ((-108 + 89*d - 18*d^2 - 28*n1 + 10*d*n1 + 62*n2 - 71*d*n2 + 18*d^2*n2 + 
      24*n1*n2 - 10*d*n1*n2 + 42*n2^2 - 18*d*n2^2 + 4*n1*n2^2 + 4*n2^3 - 
      128*n3 + 91*d*n3 - 15*d^2*n3 - 30*n1*n3 + 8*d*n1*n3 - 12*n2*n3 - 
      d*n2*n3 + 4*n1*n2*n3 + 6*n2^2*n3 - 34*n3^2 + 14*d*n3^2 - 6*n1*n3^2 - 
      6*n2*n3^2 - 2*n3^3 - 46*n6 + 18*d*n6 - 4*n1*n6 + 38*n2*n6 - 
      18*d*n2*n6 + 4*n1*n2*n6 + 8*n2^2*n6 - 50*n3*n6 + 16*d*n3*n6 - 
      4*n1*n3*n6 + 2*n2*n3*n6 - 8*n3^2*n6 - 4*n6^2 + 4*n2*n6^2 - 4*n3*n6^2)*
     j[p4a, -1 + n1, n2, 1 + n3, 0, 1, n6, 1, 1, 0, 1, 0, 0, 0, 1])/
    ((-3 + d - n3)*(-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(-9 + 4*d - 2*n1 - 2*n2 - 
      n3 - 2*n6)) + ((378 - 419*d + 152*d^2 - 18*d^3 + 202*n1 - 151*d*n1 + 
      28*d^2*n1 + 28*n1^2 - 10*d*n1^2 + 166*n2 - 112*d*n2 + 18*d^2*n2 + 
      62*n1*n2 - 22*d*n1*n2 + 4*n1^2*n2 + 16*n2^2 - 4*d*n2^2 + 4*n1*n2^2 + 
      206*n3 - 156*d*n3 + 29*d^2*n3 + 80*n1*n3 - 31*d*n1*n3 + 8*n1^2*n3 + 
      68*n2*n3 - 24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 34*n3^2 - 13*d*n3^2 + 
      6*n1*n3^2 + 6*n2*n3^2 + 2*n3^3 + 4*n6 + 21*d*n6 - 9*d^2*n6 + 24*n1*n6 - 
      8*d*n1*n6 + 4*n1^2*n6 - 42*n2*n6 + 22*d*n2*n6 - 8*n2^2*n6 + 10*n3*n6 + 
      d*n3*n6 + 4*n1*n3*n6 - 6*n2*n3*n6 + 2*n3^2*n6 - 58*n6^2 + 26*d*n6^2 - 
      4*n1*n6^2 - 16*n2*n6^2 - 10*n3*n6^2 - 8*n6^3)*
     j[p4a, -1 + n1, n2, 1 + n3, 0, 2, -1 + n6, 1, 1, 0, 1, 0, 0, 0, 1])/
    ((-3 + d - n3)*(-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(-9 + 4*d - 2*n1 - 2*n2 - 
      n3 - 2*n6)*(-1 + n6)) + j[p4a, -1 + n1, n2, 1 + n3, 0, 2, n6, 0, 1, 0, 
     1, 0, 0, 0, 1]/(-6 + 3*d - 2*n1 - 2*n2 - 2*n6) - 
   ((1 + n3)*(-288 + 345*d - 137*d^2 + 18*d^3 - 180*n1 + 143*d*n1 - 
      28*d^2*n1 - 28*n1^2 + 10*d*n1^2 - 126*n2 + 96*d*n2 - 18*d^2*n2 - 
      58*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 12*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
      174*n3 + 142*d*n3 - 29*d^2*n3 - 74*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
      60*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 32*n3^2 + 13*d*n3^2 - 
      6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 54*n6 + 37*d*n6 - 6*d^2*n6 - 
      42*n1*n6 + 16*d*n1*n6 - 4*n1^2*n6 + 10*n2*n6 - 6*d*n2*n6 - 4*n1*n2*n6 + 
      4*n2^2*n6 - 34*n3*n6 + 13*d*n3*n6 - 10*n1*n3*n6 - 2*n2*n3*n6 - 
      4*n3^2*n6 + 22*n6^2 - 10*d*n6^2 + 8*n2*n6^2 + 2*n3*n6^2 + 4*n6^3)*
     j[p4a, -1 + n1, n2, 2 + n3, 0, 1, -1 + n6, 1, 1, 0, 1, 0, 0, 0, 1])/
    ((-3 + d - n3)*(-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(-9 + 4*d - 2*n1 - 2*n2 - 
      n3 - 2*n6)*(-1 + n6)) - 
   ((1 + n3)*(-54 + 47*d - 10*d^2 - 16*n1 + 6*d*n1 - 34*n2 + 14*d*n2 - 
      4*n1*n2 - 4*n2^2 - 14*n3 + 7*d*n3 - 4*n1*n3 - 6*n2*n3 - 34*n6 + 
      14*d*n6 - 4*n1*n6 - 8*n2*n6 - 6*n3*n6 - 4*n6^2)*
     j[p4a, -1 + n1, n2, 2 + n3, 0, 1, n6, 0, 1, 0, 1, 0, 0, 0, 1])/
    ((3 - d + n3)*(-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(9 - 4*d + 2*n1 + 2*n2 + 
      n3 + 2*n6)) + (2*(1 + n3)*(81 - 68*d + 14*d^2 + 22*n1 - 8*d*n1 + 
      40*n2 - 16*d*n2 + 4*n1*n2 + 4*n2^2 + 26*n3 - 12*d*n3 + 6*n1*n3 + 
      8*n2*n3 + n3^2 + 40*n6 - 16*d*n6 + 4*n1*n6 + 8*n2*n6 + 8*n3*n6 + 
      4*n6^2)*j[p4a, -1 + n1, n2, 2 + n3, 0, 1, n6, 1, 0, 0, 1, 0, 0, 0, 1])/
    ((-3 + d - n3)*(-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(-9 + 4*d - 2*n1 - 2*n2 - 
      n3 - 2*n6)) - ((1 + n3)*(90 - 74*d + 15*d^2 + 22*n1 - 8*d*n1 + 40*n2 - 
      16*d*n2 + 4*n1*n2 + 4*n2^2 + 32*n3 - 14*d*n3 + 6*n1*n3 + 8*n2*n3 + 
      2*n3^2 + 40*n6 - 16*d*n6 + 4*n1*n6 + 8*n2*n6 + 8*n3*n6 + 4*n6^2)*
     j[p4a, -1 + n1, n2, 2 + n3, 0, 1, n6, 1, 1, 0, 1, 0, -1, 0, 1])/
    ((3 - d + n3)*(-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(9 - 4*d + 2*n1 + 2*n2 + 
      n3 + 2*n6)) + ((1 + n3)*(108 - 89*d + 18*d^2 + 28*n1 - 10*d*n1 + 
      46*n2 - 18*d*n2 + 4*n1*n2 + 4*n2^2 + 38*n3 - 17*d*n3 + 8*n1*n3 + 
      10*n2*n3 + 2*n3^2 + 46*n6 - 18*d*n6 + 4*n1*n6 + 8*n2*n6 + 10*n3*n6 + 
      4*n6^2)*j[p4a, -1 + n1, n2, 2 + n3, 0, 1, n6, 1, 1, 0, 1, 0, 0, -1, 1])/
    ((3 - d + n3)*(-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(9 - 4*d + 2*n1 + 2*n2 + 
      n3 + 2*n6)) + ((1 + n3)*(81 - 68*d + 14*d^2 + 22*n1 - 8*d*n1 + 40*n2 - 
      16*d*n2 + 4*n1*n2 + 4*n2^2 + 26*n3 - 12*d*n3 + 6*n1*n3 + 8*n2*n3 + 
      n3^2 + 40*n6 - 16*d*n6 + 4*n1*n6 + 8*n2*n6 + 8*n3*n6 + 4*n6^2)*
     j[p4a, -1 + n1, n2, 2 + n3, 0, 1, n6, 1, 1, 0, 1, 0, 0, 0, 0])/
    ((-3 + d - n3)*(-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(-9 + 4*d - 2*n1 - 2*n2 - 
      n3 - 2*n6)) - (n2*(81 - 68*d + 14*d^2 + 22*n1 - 8*d*n1 + 40*n2 - 
      16*d*n2 + 4*n1*n2 + 4*n2^2 + 26*n3 - 12*d*n3 + 6*n1*n3 + 8*n2*n3 + 
      n3^2 + 40*n6 - 16*d*n6 + 4*n1*n6 + 8*n2*n6 + 8*n3*n6 + 4*n6^2)*
     j[p4a, -1 + n1, 1 + n2, 1 + n3, 0, 0, n6, 1, 1, 0, 1, 0, 0, 0, 1])/
    ((-3 + d - n3)*(-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(-9 + 4*d - 2*n1 - 2*n2 - 
      n3 - 2*n6)) - (n2*j[p4a, -1 + n1, 1 + n2, 1 + n3, 0, 1, n6, 0, 1, 0, 1, 
      0, 0, 0, 1])/(6 - 3*d + 2*n1 + 2*n2 + 2*n6) + 
   (n2*j[p4a, -1 + n1, 1 + n2, 1 + n3, 0, 1, n6, 1, 0, 0, 1, 0, 0, 0, 1])/
    (6 - 3*d + 2*n1 + 2*n2 + 2*n6) + 
   ((6 - 9*d + 3*d^2 + 8*n1 - 5*d*n1 + 2*n1^2 + 2*n2 - 2*d*n2 + 2*n1*n2 - 
      6*n3 + 3*d*n3 - 2*n1*n3 - 2*n2*n3 - 4*n6 + 2*n1*n6 - 4*n3*n6)*
     j[p4a, n1, -2 + n2, 1 + n3, 0, 1, n6, 1, 2, 0, 1, 0, 0, 0, 1])/
    ((-2 + d - n1 - 2*n2)*(-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*
     (-9 + 4*d - 2*n1 - 2*n2 - n3 - 2*n6)) + 
   ((-162 + 205*d - 86*d^2 + 12*d^3 - 110*n1 + 89*d*n1 - 18*d^2*n1 - 
      16*n1^2 + 6*d*n1^2 - 254*n2 + 212*d*n2 - 44*d^2*n2 - 86*n1*n2 + 
      34*d*n1*n2 - 4*n1^2*n2 - 88*n2^2 + 36*d*n2^2 - 12*n1*n2^2 - 8*n2^3 - 
      76*n3 + 66*d*n3 - 14*d^2*n3 - 42*n1*n3 + 17*d*n1*n3 - 4*n1^2*n3 - 
      84*n2*n3 + 36*d*n2*n3 - 18*n1*n2*n3 - 16*n2^2*n3 - 10*n3^2 + 5*d*n3^2 - 
      4*n1*n3^2 - 6*n2*n3^2 - 92*n6 + 76*d*n6 - 16*d^2*n6 - 42*n1*n6 + 
      18*d*n1*n6 - 4*n1^2*n6 - 96*n2*n6 + 40*d*n2*n6 - 16*n1*n2*n6 - 
      16*n2^2*n6 - 32*n3*n6 + 12*d*n3*n6 - 6*n1*n3*n6 - 16*n2*n3*n6 - 
      4*n3^2*n6 - 8*n6^2 + 4*d*n6^2 - 4*n1*n6^2 - 8*n2*n6^2)*
     j[p4a, n1, -2 + n2, 1 + n3, 0, 1, n6, 2, 1, 0, 1, 0, 0, 0, 1])/
    ((-2 + d - n1 - 2*n2)*(-3 + d - n3)*(-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*
     (-9 + 4*d - 2*n1 - 2*n2 - n3 - 2*n6)) + 
   ((18 - 13*d + 2*d^2 + 8*n1 - 2*d*n1 + 26*n2 - 10*d*n2 + 4*n1*n2 + 4*n2^2 + 
      10*n3 - 5*d*n3 + 4*n1*n3 + 6*n2*n3 + 8*n6 - 2*d*n6 + 4*n2*n6 + 4*n3*n6)*
     j[p4a, n1, -2 + n2, 1 + n3, 0, 2, n6, 1, 1, 0, 1, 0, 0, 0, 1])/
    ((-2 + d - n1 - 2*n2)*(-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*
     (-9 + 4*d - 2*n1 - 2*n2 - n3 - 2*n6)) - 
   ((1 + n3)*(-54 + 47*d - 10*d^2 - 16*n1 + 6*d*n1 - 34*n2 + 14*d*n2 - 
      4*n1*n2 - 4*n2^2 - 14*n3 + 7*d*n3 - 4*n1*n3 - 6*n2*n3 - 34*n6 + 
      14*d*n6 - 4*n1*n6 - 8*n2*n6 - 6*n3*n6 - 4*n6^2)*
     j[p4a, n1, -2 + n2, 2 + n3, 0, 1, n6, 1, 1, 0, 1, 0, 0, 0, 1])/
    ((3 - d + n3)*(-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(9 - 4*d + 2*n1 + 2*n2 + 
      n3 + 2*n6)) + ((216 - 274*d + 115*d^2 - 16*d^3 + 149*n1 - 120*d*n1 + 
      24*d^2*n1 + 22*n1^2 - 8*d*n1^2 + 320*n2 - 264*d*n2 + 54*d^2*n2 + 
      104*n1*n2 - 40*d*n1*n2 + 4*n1^2*n2 + 100*n2^2 - 40*d*n2^2 + 
      12*n1*n2^2 + 8*n2^3 + 100*n3 - 88*d*n3 + 19*d^2*n3 + 58*n1*n3 - 
      24*d*n1*n3 + 6*n1^2*n3 + 112*n2*n3 - 48*d*n2*n3 + 24*n1*n2*n3 + 
      20*n2^2*n3 + 12*n3^2 - 6*d*n3^2 + 5*n1*n3^2 + 8*n2*n3^2 + 104*n6 - 
      86*d*n6 + 18*d^2*n6 + 48*n1*n6 - 20*d*n1*n6 + 4*n1^2*n6 + 108*n2*n6 - 
      44*d*n2*n6 + 16*n1*n2*n6 + 16*n2^2*n6 + 36*n3*n6 - 14*d*n3*n6 + 
      8*n1*n3*n6 + 20*n2*n3*n6 + 4*n3^2*n6 + 8*n6^2 - 4*d*n6^2 + 4*n1*n6^2 + 
      8*n2*n6^2)*j[p4a, n1, -1 + n2, 1 + n3, 0, 0, n6, 2, 1, 0, 1, 0, 0, 0, 
      1])/((-2 + d - n1 - 2*n2)*(-3 + d - n3)*(-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*
     (-9 + 4*d - 2*n1 - 2*n2 - n3 - 2*n6)) + 
   (n6*j[p4a, n1, -1 + n2, 1 + n3, 0, 0, 1 + n6, 1, 1, 0, 1, 0, 0, 0, 1])/
    (-6 + 3*d - 2*n1 - 2*n2 - 2*n6) + j[p4a, n1, -1 + n2, 1 + n3, 0, 1, n6, 
     0, 1, 0, 2, 0, 0, 0, 1]/(6 - 3*d + 2*n1 + 2*n2 + 2*n6) + 
   ((-6 + 9*d - 3*d^2 - 8*n1 + 5*d*n1 - 2*n1^2 - 2*n2 + 2*d*n2 - 2*n1*n2 + 
      6*n3 - 3*d*n3 + 2*n1*n3 + 2*n2*n3 + 4*n6 - 2*n1*n6 + 4*n3*n6)*
     j[p4a, n1, -1 + n2, 1 + n3, 0, 1, n6, 0, 2, 0, 1, 0, 0, 0, 1])/
    ((-2 + d - n1 - 2*n2)*(-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*
     (-9 + 4*d - 2*n1 - 2*n2 - n3 - 2*n6)) + 
   ((504 - 718*d + 363*d^2 - 75*d^3 + 5*d^4 + 140*n1 - 47*d*n1 - 32*d^2*n1 + 
      11*d^3*n1 - 112*n1^2 + 113*d*n1^2 - 26*d^2*n1^2 - 28*n1^3 + 10*d*n1^3 + 
      644*n2 - 600*d*n2 + 166*d^2*n2 - 12*d^3*n2 - 126*n1*n2 + 176*d*n1*n2 - 
      48*d^2*n1*n2 - 106*n1^2*n2 + 42*d*n1^2*n2 - 4*n1^3*n2 + 148*n2^2 - 
      68*d*n2^2 + 4*d^2*n2^2 - 88*n1*n2^2 + 40*d*n1*n2^2 - 12*n1^2*n2^2 + 
      8*n2^3 - 8*n1*n2^3 + 166*n3 - 169*d*n3 + 49*d^2*n3 - 3*d^3*n3 + 
      34*n1*n3 + 16*d*n1*n3 - 14*d^2*n1*n3 - 42*n1^2*n3 + 25*d*n1^2*n3 - 
      8*n1^3*n3 + 134*n2*n3 - 40*d*n2*n3 - 8*d^2*n2*n3 - 96*n1*n2*n3 + 
      60*d*n1*n2*n3 - 30*n1^2*n2*n3 - 28*n2^2*n3 + 24*d*n2^2*n3 - 
      32*n1*n2^2*n3 - 8*n2^3*n3 - 8*n3^2 + 8*d*n3^2 - 2*d^2*n3^2 - 
      4*n1*n3^2 + 3*d*n1*n3^2 - 2*n1^2*n3^2 - 8*n2*n3^2 + 8*d*n2*n3^2 - 
      10*n1*n2*n3^2 - 8*n2^2*n3^2 - 6*n3^3 + 3*d*n3^3 - 2*n1*n3^3 - 
      2*n2*n3^3 + 212*n6 - 224*d*n6 + 73*d^2*n6 - 7*d^3*n6 + 34*n1*n6 + 
      9*d*n1*n6 - 9*d^2*n1*n6 - 44*n1^2*n6 + 20*d*n1^2*n6 - 4*n1^3*n6 + 
      240*n2*n6 - 136*d*n2*n6 + 16*d^2*n2*n6 - 74*n1*n2*n6 + 38*d*n1*n2*n6 - 
      16*n1^2*n2*n6 + 28*n2^2*n6 - 4*d*n2^2*n6 - 16*n1*n2^2*n6 + 4*n3*n6 + 
      2*d*n3*n6 - 3*d^2*n3*n6 - 10*n1*n3*n6 + 13*d*n1*n3*n6 - 12*n1^2*n3*n6 + 
      4*n2*n3*n6 + 12*d*n2*n3*n6 - 30*n1*n2*n3*n6 - 12*n2^2*n3*n6 - 
      20*n3^2*n6 + 6*d*n3^2*n6 - 4*n2*n3^2*n6 - 4*n3^3*n6 + 20*n6^2 - 
      14*d*n6^2 + 2*d^2*n6^2 + 2*n1*n6^2 + 2*d*n1*n6^2 - 4*n1^2*n6^2 + 
      20*n2*n6^2 - 4*d*n2*n6^2 - 8*n1*n2*n6^2 - 4*n3*n6^2 + 2*d*n3*n6^2 - 
      2*n1*n3*n6^2 - 4*n2*n3*n6^2)*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, n6, 1, 
      1, 0, 1, 0, 0, 0, 1])/((-2 + d - n1 - 2*n2)*(-3 + d - n3)*
     (-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(-9 + 4*d - 2*n1 - 2*n2 - n3 - 2*n6)) + 
   j[p4a, n1, -1 + n2, 1 + n3, 0, 1, n6, 1, 2, 0, 1, 0, 0, 0, 1]/
    (6 - 3*d + 2*n1 + 2*n2 + 2*n6) + 
   ((162 - 205*d + 86*d^2 - 12*d^3 + 110*n1 - 89*d*n1 + 18*d^2*n1 + 16*n1^2 - 
      6*d*n1^2 + 254*n2 - 212*d*n2 + 44*d^2*n2 + 86*n1*n2 - 34*d*n1*n2 + 
      4*n1^2*n2 + 88*n2^2 - 36*d*n2^2 + 12*n1*n2^2 + 8*n2^3 + 76*n3 - 
      66*d*n3 + 14*d^2*n3 + 42*n1*n3 - 17*d*n1*n3 + 4*n1^2*n3 + 84*n2*n3 - 
      36*d*n2*n3 + 18*n1*n2*n3 + 16*n2^2*n3 + 10*n3^2 - 5*d*n3^2 + 
      4*n1*n3^2 + 6*n2*n3^2 + 92*n6 - 76*d*n6 + 16*d^2*n6 + 42*n1*n6 - 
      18*d*n1*n6 + 4*n1^2*n6 + 96*n2*n6 - 40*d*n2*n6 + 16*n1*n2*n6 + 
      16*n2^2*n6 + 32*n3*n6 - 12*d*n3*n6 + 6*n1*n3*n6 + 16*n2*n3*n6 + 
      4*n3^2*n6 + 8*n6^2 - 4*d*n6^2 + 4*n1*n6^2 + 8*n2*n6^2)*
     j[p4a, n1, -1 + n2, 1 + n3, 0, 1, n6, 2, 0, 0, 1, 0, 0, 0, 1])/
    ((-2 + d - n1 - 2*n2)*(-3 + d - n3)*(-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*
     (-9 + 4*d - 2*n1 - 2*n2 - n3 - 2*n6)) + 
   ((3 - d + n3)*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, n6, 2, 1, 0, 0, 0, 0, 0, 
      1])/((-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(-9 + 4*d - 2*n1 - 2*n2 - n3 - 
      2*n6)) - (n6*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1 + n6, 0, 1, 0, 1, 0, 
      0, 0, 1])/(-6 + 3*d - 2*n1 - 2*n2 - 2*n6) + 
   ((-3 + d - n3)*n6*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1 + n6, 1, 1, 0, 0, 0, 
      0, 0, 1])/((-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(-9 + 4*d - 2*n1 - 2*n2 - 
      n3 - 2*n6)) - (n6*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1 + n6, 1, 1, 0, 1, 
      0, 0, 0, 0])/(-6 + 3*d - 2*n1 - 2*n2 - 2*n6) + 
   (n6*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1 + n6, 1, 1, 0, 1, 0, 0, 0, 1])/
    (-9 + 4*d - 2*n1 - 2*n2 - n3 - 2*n6) + 
   ((522 - 921*d + 600*d^2 - 171*d^3 + 18*d^4 + 624*n1 - 797*d*n1 + 
      334*d^2*n1 - 46*d^3*n1 + 236*n1^2 - 191*d*n1^2 + 38*d^2*n1^2 + 
      28*n1^3 - 10*d*n1^3 + 750*n2 - 952*d*n2 + 396*d^2*n2 - 54*d^3*n2 + 
      590*n1*n2 - 480*d*n1*n2 + 96*d^2*n1*n2 + 122*n1^2*n2 - 46*d*n1^2*n2 + 
      4*n1^3*n2 + 264*n2^2 - 208*d*n2^2 + 40*d^2*n2^2 + 136*n1*n2^2 - 
      52*d*n1*n2^2 + 12*n1^2*n2^2 + 24*n2^3 - 8*d*n2^3 + 8*n1*n2^3 + 300*n3 - 
      420*d*n3 + 193*d^2*n3 - 29*d^3*n3 + 302*n1*n3 - 272*d*n1*n3 + 
      60*d^2*n1*n3 + 90*n1^2*n3 - 39*d*n1^2*n3 + 8*n1^3*n3 + 424*n2*n3 - 
      376*d*n2*n3 + 82*d^2*n2*n3 + 232*n1*n2*n3 - 100*d*n1*n2*n3 + 
      30*n1^2*n2*n3 + 124*n2^2*n3 - 52*d*n2^2*n3 + 32*n1*n2^2*n3 + 
      8*n2^3*n3 + 54*n3^2 - 53*d*n3^2 + 13*d^2*n3^2 + 40*n1*n3^2 - 
      19*d*n1*n3^2 + 6*n1^2*n3^2 + 70*n2*n3^2 - 32*d*n2*n3^2 + 
      18*n1*n2*n3^2 + 12*n2^2*n3^2 + 4*n3^3 - 2*d*n3^3 + 2*n1*n3^3 + 
      4*n2*n3^3 + 138*n6 - 171*d*n6 + 66*d^2*n6 - 8*d^3*n6 + 162*n1*n6 - 
      125*d*n1*n6 + 24*d^2*n1*n6 + 50*n1^2*n6 - 20*d*n1^2*n6 + 4*n1^3*n6 + 
      154*n2*n6 - 104*d*n2*n6 + 16*d^2*n2*n6 + 94*n1*n2*n6 - 34*d*n1*n2*n6 + 
      12*n1^2*n2*n6 - 16*n2^2*n6 + 12*d*n2^2*n6 + 4*n1*n2^2*n6 - 8*n2^3*n6 + 
      96*n3*n6 - 92*d*n3*n6 + 20*d^2*n3*n6 + 74*n1*n3*n6 - 29*d*n1*n3*n6 + 
      10*n1^2*n3*n6 + 112*n2*n3*n6 - 44*d*n2*n3*n6 + 26*n1*n2*n3*n6 + 
      8*n2^2*n3*n6 + 14*n3^2*n6 - 9*d*n3^2*n6 + 8*n1*n3^2*n6 + 
      14*n2*n3^2*n6 - 20*n6^2 + 28*d*n6^2 - 8*d^2*n6^2 - 22*n1*n6^2 + 
      10*d*n1*n6^2 - 48*n2*n6^2 + 24*d*n2*n6^2 - 8*n1*n2*n6^2 - 
      16*n2^2*n6^2 + 16*n3*n6^2 - 4*d*n3*n6^2 - 2*n1*n3*n6^2 + 4*n3^2*n6^2 - 
      8*n6^3 + 4*d*n6^3 - 4*n1*n6^3 - 8*n2*n6^3)*j[p4a, n1, -1 + n2, 1 + n3, 
      0, 2, -1 + n6, 1, 1, 0, 1, 0, 0, 0, 1])/((-2 + d - n1 - 2*n2)*
     (-3 + d - n3)*(-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(-9 + 4*d - 2*n1 - 2*n2 - 
      n3 - 2*n6)*(-1 + n6)) + ((-18 + 13*d - 2*d^2 - 8*n1 + 2*d*n1 - 26*n2 + 
      10*d*n2 - 4*n1*n2 - 4*n2^2 - 10*n3 + 5*d*n3 - 4*n1*n3 - 6*n2*n3 - 
      8*n6 + 2*d*n6 - 4*n2*n6 - 4*n3*n6)*j[p4a, n1, -1 + n2, 1 + n3, 0, 2, 
      n6, 0, 1, 0, 1, 0, 0, 0, 1])/((-2 + d - n1 - 2*n2)*
     (-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(-9 + 4*d - 2*n1 - 2*n2 - n3 - 2*n6)) + 
   j[p4a, n1, -1 + n2, 1 + n3, 0, 2, n6, 1, 1, 0, 1, 0, 0, 0, 0]/
    (6 - 3*d + 2*n1 + 2*n2 + 2*n6) + j[p4a, n1, -1 + n2, 1 + n3, 0, 2, n6, 1, 
     1, 0, 1, 0, 0, 0, 1]/(-9 + 4*d - 2*n1 - 2*n2 - n3 - 2*n6) - 
   ((1 + n3)*(-108 + 160*d - 77*d^2 + 12*d^3 - 101*n1 + 92*d*n1 - 20*d^2*n1 - 
      22*n1^2 + 8*d*n1^2 - 164*n2 + 152*d*n2 - 34*d^2*n2 - 80*n1*n2 + 
      32*d*n1*n2 - 4*n1^2*n2 - 76*n2^2 + 32*d*n2^2 - 12*n1*n2^2 - 8*n2^3 - 
      4*n3 + 12*d*n3 - 5*d^2*n3 - 18*n1*n3 + 12*d*n1*n3 - 6*n1^2*n3 - 
      24*n2*n3 + 16*d*n2*n3 - 16*n1*n2*n3 - 12*n2^2*n3 + 8*n3^2 - 4*d*n3^2 + 
      3*n1*n3^2 + 4*n2*n3^2 - 56*n6 + 58*d*n6 - 14*d^2*n6 - 48*n1*n6 + 
      20*d*n1*n6 - 4*n1^2*n6 - 84*n2*n6 + 36*d*n2*n6 - 16*n1*n2*n6 - 
      16*n2^2*n6 + 4*n3*n6 + 2*d*n3*n6 - 8*n1*n3*n6 - 12*n2*n3*n6 + 
      4*n3^2*n6 - 8*n6^2 + 4*d*n6^2 - 4*n1*n6^2 - 8*n2*n6^2)*
     j[p4a, n1, -1 + n2, 2 + n3, 0, 1, n6, 0, 1, 0, 1, 0, 0, 0, 1])/
    ((-2 + d - n1 - 2*n2)*(-3 + d - n3)*(-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*
     (-9 + 4*d - 2*n1 - 2*n2 - n3 - 2*n6)) + 
   ((1 + n3)*(-99 + 88*d - 19*d^2 - 32*n1 + 12*d*n1 - 68*n2 + 28*d*n2 - 
      8*n1*n2 - 8*n2^2 - 22*n3 + 12*d*n3 - 8*n1*n3 - 12*n2*n3 + n3^2 - 
      68*n6 + 28*d*n6 - 8*n1*n6 - 16*n2*n6 - 12*n3*n6 - 8*n6^2)*
     j[p4a, n1, -1 + n2, 2 + n3, 0, 1, n6, 1, 0, 0, 1, 0, 0, 0, 1])/
    ((3 - d + n3)*(-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(9 - 4*d + 2*n1 + 2*n2 + 
      n3 + 2*n6)) - ((-3 + d - n3)*(1 + n3)*j[p4a, n1, -1 + n2, 2 + n3, 0, 1, 
      n6, 1, 1, 0, 0, 0, 0, 0, 1])/((-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*
     (-9 + 4*d - 2*n1 - 2*n2 - n3 - 2*n6)) - 
   ((1 + n3)*(-54 + 47*d - 10*d^2 - 16*n1 + 6*d*n1 - 34*n2 + 14*d*n2 - 
      4*n1*n2 - 4*n2^2 - 14*n3 + 7*d*n3 - 4*n1*n3 - 6*n2*n3 - 34*n6 + 
      14*d*n6 - 4*n1*n6 - 8*n2*n6 - 6*n3*n6 - 4*n6^2)*
     j[p4a, n1, -1 + n2, 2 + n3, 0, 1, n6, 1, 1, 0, 1, 0, -1, 0, 1])/
    ((3 - d + n3)*(-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(9 - 4*d + 2*n1 + 2*n2 + 
      n3 + 2*n6)) - ((1 + n3)*(-90 + 115*d - 49*d^2 + 7*d^3 - 62*n1 + 
      52*d*n1 - 11*d^2*n1 - 10*n1^2 + 4*d*n1^2 - 170*n2 + 148*d*n2 - 
      32*d^2*n2 - 68*n1*n2 + 28*d*n1*n2 - 4*n1^2*n2 - 76*n2^2 + 32*d*n2^2 - 
      12*n1*n2^2 - 8*n2^3 - 40*n3 + 34*d*n3 - 7*d^2*n3 - 20*n1*n3 + 
      8*d*n1*n3 - 2*n1^2*n3 - 44*n2*n3 + 20*d*n2*n3 - 12*n1*n2*n3 - 
      12*n2^2*n3 - 6*n3^2 + 3*d*n3^2 - 2*n1*n3^2 - 2*n2*n3^2 - 80*n6 + 
      66*d*n6 - 14*d^2*n6 - 36*n1*n6 + 16*d*n1*n6 - 4*n1^2*n6 - 84*n2*n6 + 
      36*d*n2*n6 - 16*n1*n2*n6 - 16*n2^2*n6 - 28*n3*n6 + 10*d*n3*n6 - 
      4*n1*n3*n6 - 12*n2*n3*n6 - 4*n3^2*n6 - 8*n6^2 + 4*d*n6^2 - 4*n1*n6^2 - 
      8*n2*n6^2)*j[p4a, n1, -1 + n2, 2 + n3, 0, 1, n6, 1, 1, 0, 1, 0, 0, -1, 
      1])/((-2 + d - n1 - 2*n2)*(-3 + d - n3)*(-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*
     (-9 + 4*d - 2*n1 - 2*n2 - n3 - 2*n6)) - 
   ((1 + n3)*(81 - 68*d + 14*d^2 + 22*n1 - 8*d*n1 + 40*n2 - 16*d*n2 + 
      4*n1*n2 + 4*n2^2 + 26*n3 - 12*d*n3 + 6*n1*n3 + 8*n2*n3 + n3^2 + 40*n6 - 
      16*d*n6 + 4*n1*n6 + 8*n2*n6 + 8*n3*n6 + 4*n6^2)*
     j[p4a, n1, -1 + n2, 2 + n3, 0, 1, n6, 1, 1, 0, 1, 0, 0, 0, 0])/
    ((-3 + d - n3)*(-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(-9 + 4*d - 2*n1 - 2*n2 - 
      n3 - 2*n6)) + ((1 + n3)*j[p4a, n1, -1 + n2, 2 + n3, 0, 1, n6, 1, 1, 0, 
      1, 0, 0, 0, 1])/(9 - 4*d + 2*n1 + 2*n2 + n3 + 2*n6) + 
   j[p4a, n1, n2, n3, 0, 0, n6, 2, 1, 0, 1, 0, 0, 0, 1]/
    (6 - 3*d + 2*n1 + 2*n2 + 2*n6) + 
   (n6*j[p4a, n1, n2, n3, 0, 0, 1 + n6, 1, 1, 0, 1, 0, 0, 0, 1])/
    (-6 + 3*d - 2*n1 - 2*n2 - 2*n6) + j[p4a, n1, n2, n3, 0, 1, n6, 0, 1, 0, 
     2, 0, 0, 0, 1]/(6 - 3*d + 2*n1 + 2*n2 + 2*n6) + 
   j[p4a, n1, n2, n3, 0, 1, n6, 2, 0, 0, 1, 0, 0, 0, 1]/
    (6 - 3*d + 2*n1 + 2*n2 + 2*n6) + 
   (n6*j[p4a, n1, n2, n3, 0, 1, 1 + n6, 1, 0, 0, 1, 0, 0, 0, 1])/
    (-6 + 3*d - 2*n1 - 2*n2 - 2*n6) + 
   ((54 - 47*d + 10*d^2 + 16*n1 - 6*d*n1 + 34*n2 - 14*d*n2 + 4*n1*n2 + 
      4*n2^2 + 14*n3 - 7*d*n3 + 4*n1*n3 + 6*n2*n3 + 34*n6 - 14*d*n6 + 
      4*n1*n6 + 8*n2*n6 + 6*n3*n6 + 4*n6^2)*j[p4a, n1, n2, 1 + n3, -1, 1, n6, 
      0, 2, 0, 1, 0, 0, 0, 1])/((-3 + d - n3)*(-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*
     (-9 + 4*d - 2*n1 - 2*n2 - n3 - 2*n6)) + 
   ((-216 + 274*d - 115*d^2 + 16*d^3 - 149*n1 + 120*d*n1 - 24*d^2*n1 - 
      22*n1^2 + 8*d*n1^2 - 320*n2 + 264*d*n2 - 54*d^2*n2 - 104*n1*n2 + 
      40*d*n1*n2 - 4*n1^2*n2 - 100*n2^2 + 40*d*n2^2 - 12*n1*n2^2 - 8*n2^3 - 
      100*n3 + 88*d*n3 - 19*d^2*n3 - 58*n1*n3 + 24*d*n1*n3 - 6*n1^2*n3 - 
      112*n2*n3 + 48*d*n2*n3 - 24*n1*n2*n3 - 20*n2^2*n3 - 12*n3^2 + 
      6*d*n3^2 - 5*n1*n3^2 - 8*n2*n3^2 - 104*n6 + 86*d*n6 - 18*d^2*n6 - 
      48*n1*n6 + 20*d*n1*n6 - 4*n1^2*n6 - 108*n2*n6 + 44*d*n2*n6 - 
      16*n1*n2*n6 - 16*n2^2*n6 - 36*n3*n6 + 14*d*n3*n6 - 8*n1*n3*n6 - 
      20*n2*n3*n6 - 4*n3^2*n6 - 8*n6^2 + 4*d*n6^2 - 4*n1*n6^2 - 8*n2*n6^2)*
     j[p4a, n1, n2, 1 + n3, -1, 1, n6, 2, 0, 0, 1, 0, 0, 0, 1])/
    ((-2 + d - n1 - 2*n2)*(-3 + d - n3)*(-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*
     (-9 + 4*d - 2*n1 - 2*n2 - n3 - 2*n6)) + 
   ((81 - 68*d + 14*d^2 + 22*n1 - 8*d*n1 + 40*n2 - 16*d*n2 + 4*n1*n2 + 
      4*n2^2 + 26*n3 - 12*d*n3 + 6*n1*n3 + 8*n2*n3 + n3^2 + 40*n6 - 16*d*n6 + 
      4*n1*n6 + 8*n2*n6 + 8*n3*n6 + 4*n6^2)*j[p4a, n1, n2, 1 + n3, -1, 1, n6, 
      2, 1, 0, 0, 0, 0, 0, 1])/((-3 + d - n3)*(-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*
     (-9 + 4*d - 2*n1 - 2*n2 - n3 - 2*n6)) - 
   (n6*j[p4a, n1, n2, 1 + n3, -1, 1, 1 + n6, 0, 1, 0, 1, 0, 0, 0, 1])/
    (-6 + 3*d - 2*n1 - 2*n2 - 2*n6) - 
   (n6*j[p4a, n1, n2, 1 + n3, -1, 1, 1 + n6, 1, 0, 0, 1, 0, 0, 0, 1])/
    (-6 + 3*d - 2*n1 - 2*n2 - 2*n6) + 
   (n6*j[p4a, n1, n2, 1 + n3, -1, 1, 1 + n6, 1, 1, 0, 0, 0, 0, 0, 1])/
    (-6 + 3*d - 2*n1 - 2*n2 - 2*n6) - 
   (n6*j[p4a, n1, n2, 1 + n3, -1, 1, 1 + n6, 1, 1, 0, 1, 0, 0, 0, 0])/
    (-6 + 3*d - 2*n1 - 2*n2 - 2*n6) + 
   ((18 - 13*d + 2*d^2 + 8*n1 - 2*d*n1 + 26*n2 - 10*d*n2 + 4*n1*n2 + 4*n2^2 + 
      10*n3 - 5*d*n3 + 4*n1*n3 + 6*n2*n3 + 8*n6 - 2*d*n6 + 4*n2*n6 + 4*n3*n6)*
     j[p4a, n1, n2, 1 + n3, -1, 2, -1 + n6, 1, 1, 0, 1, 0, 0, 0, 1])/
    ((-2 + d - n1 - 2*n2)*(-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*
     (-9 + 4*d - 2*n1 - 2*n2 - n3 - 2*n6)) + 
   j[p4a, n1, n2, 1 + n3, -1, 2, n6, 1, 1, 0, 1, 0, 0, 0, 0]/
    (6 - 3*d + 2*n1 + 2*n2 + 2*n6) + 
   ((3 - d + n3)*j[p4a, n1, n2, 1 + n3, 0, 0, n6, 1, 1, -1, 1, 0, 0, 0, 2])/
    ((-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(-9 + 4*d - 2*n1 - 2*n2 - n3 - 2*n6)) + 
   ((-342 + 443*d - 190*d^2 + 27*d^3 - 82*n1 - 16*d*n1 + 55*d^2*n1 - 
      14*d^3*n1 + 87*n1^2 - 92*d*n1^2 + 22*d^2*n1^2 + 22*n1^3 - 8*d*n1^3 - 
      406*n2 + 306*d*n2 - 42*d^2*n2 - 6*d^3*n2 + 127*n1*n2 - 183*d*n1*n2 + 
      52*d^2*n1*n2 + 90*n1^2*n2 - 38*d*n1^2*n2 + 4*n1^3*n2 - 32*n2^2 - 
      36*d*n2^2 + 20*d^2*n2^2 + 94*n1*n2^2 - 46*d*n1*n2^2 + 12*n1^2*n2^2 + 
      8*n2^3 - 8*d*n2^3 + 8*n1*n2^3 - 140*n3 + 126*d*n3 - 28*d^2*n3 - 
      34*n1*n3 - 13*d*n1*n3 + 12*d^2*n1*n3 + 28*n1^2*n3 - 18*d*n1^2*n3 + 
      6*n1^3*n3 - 92*n2*n3 + 12*d*n2*n3 + 12*d^2*n2*n3 + 66*n1*n2*n3 - 
      45*d*n1*n2*n3 + 22*n1^2*n2*n3 + 40*n2^2*n3 - 28*d*n2^2*n3 + 
      26*n1*n2^2*n3 + 8*n2^3*n3 - 14*n3^2 + 7*d*n3^2 - 4*n1*n3^2 - 
      d*n1*n3^2 + n1^2*n3^2 + 2*n2*n3^2 - 6*d*n2*n3^2 + 7*n1*n2*n3^2 + 
      8*n2^2*n3^2 - 172*n6 + 148*d*n6 - 32*d^2*n6 - 10*n1*n6 - 34*d*n1*n6 + 
      16*d^2*n1*n6 + 40*n1^2*n6 - 20*d*n1^2*n6 + 4*n1^3*n6 - 156*n2*n6 + 
      56*d*n2*n6 + 4*d^2*n2*n6 + 70*n1*n2*n6 - 42*d*n1*n2*n6 + 
      16*n1^2*n2*n6 - 8*n2^2*n6 - 8*d*n2^2*n6 + 16*n1*n2^2*n6 - 48*n3*n6 + 
      20*d*n3*n6 + 2*n1*n3*n6 - 8*d*n1*n3*n6 + 8*n1^2*n3*n6 - 8*n2*n3*n6 - 
      8*d*n2*n3*n6 + 18*n1*n2*n3*n6 + 8*n2^2*n3*n6 - 4*n3^2*n6 + 
      4*n2*n3^2*n6 - 16*n6^2 + 8*d*n6^2 - 4*d*n1*n6^2 + 4*n1^2*n6^2 - 
      16*n2*n6^2 + 8*n1*n2*n6^2)*j[p4a, n1, n2, 1 + n3, 0, 0, n6, 1, 1, 0, 1, 
      0, 0, 0, 1])/((-2 + d - n1 - 2*n2)*(-3 + d - n3)*
     (-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(-9 + 4*d - 2*n1 - 2*n2 - n3 - 2*n6)) + 
   ((-3 + d - n3)*j[p4a, n1, n2, 1 + n3, 0, 0, n6, 1, 1, 0, 1, 0, 0, 0, 2])/
    ((-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(-9 + 4*d - 2*n1 - 2*n2 - n3 - 2*n6)) + 
   ((-81 + 68*d - 14*d^2 - 22*n1 + 8*d*n1 - 40*n2 + 16*d*n2 - 4*n1*n2 - 
      4*n2^2 - 26*n3 + 12*d*n3 - 6*n1*n3 - 8*n2*n3 - n3^2 - 40*n6 + 16*d*n6 - 
      4*n1*n6 - 8*n2*n6 - 8*n3*n6 - 4*n6^2)*j[p4a, n1, n2, 1 + n3, 0, 0, n6, 
      2, 1, 0, 1, -1, 0, 0, 1])/((-3 + d - n3)*(-6 + 3*d - 2*n1 - 2*n2 - 
      2*n6)*(-9 + 4*d - 2*n1 - 2*n2 - n3 - 2*n6)) + 
   j[p4a, n1, n2, 1 + n3, 0, 0, n6, 2, 1, 0, 1, 0, 0, -1, 1]/
    (-6 + 3*d - 2*n1 - 2*n2 - 2*n6) - 
   ((-3 + d - n3)*n6*j[p4a, n1, n2, 1 + n3, 0, 0, 1 + n6, 1, 1, -1, 1, 0, 0, 
      0, 1])/((-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(-9 + 4*d - 2*n1 - 2*n2 - n3 - 
      2*n6)) + (n6*j[p4a, n1, n2, 1 + n3, 0, 0, 1 + n6, 1, 1, 0, 1, 0, -1, 0, 
      1])/(-6 + 3*d - 2*n1 - 2*n2 - 2*n6) - 
   (n6*j[p4a, n1, n2, 1 + n3, 0, 0, 1 + n6, 1, 1, 0, 1, 0, 0, -1, 1])/
    (-6 + 3*d - 2*n1 - 2*n2 - 2*n6) - 
   (n6*j[p4a, n1, n2, 1 + n3, 0, 0, 1 + n6, 1, 1, 0, 1, 0, 0, 0, 1])/
    (-9 + 4*d - 2*n1 - 2*n2 - n3 - 2*n6) + 
   j[p4a, n1, n2, 1 + n3, 0, 1, -1 + n6, 0, 1, 0, 2, 0, 0, 0, 1]/
    (-6 + 3*d - 2*n1 - 2*n2 - 2*n6) + 
   ((-54 + 47*d - 10*d^2 - 16*n1 + 6*d*n1 - 34*n2 + 14*d*n2 - 4*n1*n2 - 
      4*n2^2 - 14*n3 + 7*d*n3 - 4*n1*n3 - 6*n2*n3 - 34*n6 + 14*d*n6 - 
      4*n1*n6 - 8*n2*n6 - 6*n3*n6 - 4*n6^2)*j[p4a, n1, n2, 1 + n3, 0, 1, 
      -1 + n6, 0, 2, 0, 1, 0, 0, 0, 1])/((-3 + d - n3)*
     (-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(-9 + 4*d - 2*n1 - 2*n2 - n3 - 2*n6)) + 
   j[p4a, n1, n2, 1 + n3, 0, 1, -1 + n6, 1, 0, 0, 2, 0, 0, 0, 1]/
    (-6 + 3*d - 2*n1 - 2*n2 - 2*n6) + 
   ((-846 + 1933*d - 1789*d^2 + 833*d^3 - 194*d^4 + 18*d^5 - 1628*n1 + 
      2904*d*n1 - 1946*d^2*n1 + 578*d^3*n1 - 64*d^4*n1 - 1076*n1^2 + 
      1391*d*n1^2 - 595*d^2*n1^2 + 84*d^3*n1^2 - 292*n1^3 + 239*d*n1^3 - 
      48*d^2*n1^3 - 28*n1^4 + 10*d*n1^4 - 1052*n2 + 1995*d*n2 - 1432*d^2*n2 + 
      456*d^3*n2 - 54*d^4*n2 - 1750*n1*n2 + 2329*d*n1*n2 - 1028*d^2*n1*n2 + 
      150*d^3*n1*n2 - 822*n1^2*n2 + 688*d*n1^2*n2 - 142*d^2*n1^2*n2 - 
      130*n1^3*n2 + 50*d*n1^3*n2 - 4*n1^4*n2 - 134*n2^2 + 332*d*n2^2 - 
      212*d^2*n2^2 + 40*d^3*n2^2 - 438*n1*n2^2 + 406*d*n1*n2^2 - 
      92*d^2*n1*n2^2 - 156*n1^2*n2^2 + 64*d*n1^2*n2^2 - 12*n1^3*n2^2 + 
      56*n2^3 - 4*d*n2^3 - 8*d^2*n2^3 - 28*n1*n2^3 + 16*d*n1*n2^3 - 
      8*n1^2*n2^3 + 8*n2^4 - 1192*n3 + 2096*d*n3 - 1396*d^2*n3 + 417*d^3*n3 - 
      47*d^4*n3 - 1572*n1*n3 + 2069*d*n1*n3 - 914*d^2*n1*n3 + 135*d^3*n1*n3 - 
      726*n1^2*n3 + 631*d*n1^2*n3 - 137*d^2*n1^2*n3 - 134*n1^3*n3 + 
      57*d*n1^3*n3 - 8*n1^4*n3 - 1572*n2*n3 + 2058*d*n2*n3 - 912*d^2*n2*n3 + 
      136*d^3*n2*n3 - 1464*n1*n2*n3 + 1275*d*n1*n2*n3 - 278*d^2*n1*n2*n3 - 
      414*n1^2*n2*n3 + 176*d*n1^2*n2*n3 - 34*n1^3*n2*n3 - 420*n2^2*n3 + 
      392*d*n2^2*n3 - 92*d^2*n2^2*n3 - 310*n1*n2^2*n3 + 136*d*n1*n2^2*n3 - 
      44*n1^2*n2^2*n3 - 24*n2^3*n3 + 16*d*n2^3*n3 - 16*n1*n2^3*n3 - 
      478*n3^2 + 635*d*n3^2 - 282*d^2*n3^2 + 42*d^3*n3^2 - 474*n1*n3^2 + 
      416*d*n1*n3^2 - 92*d^2*n1*n3^2 - 146*n1^2*n3^2 + 64*d*n1^2*n3^2 - 
      14*n1^3*n3^2 - 608*n2*n3^2 + 523*d*n2*n3^2 - 114*d^2*n2*n3^2 - 
      344*n1*n2*n3^2 + 150*d*n1*n2*n3^2 - 48*n1^2*n2*n3^2 - 146*n2^2*n3^2 + 
      64*d*n2^2*n3^2 - 44*n1*n2^2*n3^2 - 8*n2^3*n3^2 - 72*n3^3 + 66*d*n3^3 - 
      15*d^2*n3^3 - 52*n1*n3^3 + 23*d*n1*n3^3 - 8*n1^2*n3^3 - 84*n2*n3^3 + 
      36*d*n2*n3^3 - 22*n1*n2*n3^3 - 12*n2^2*n3^3 - 4*n3^4 + 2*d*n3^4 - 
      2*n1*n3^4 - 4*n2*n3^4 - 782*n6 + 1493*d*n6 - 1066*d^2*n6 + 335*d^3*n6 - 
      39*d^4*n6 - 1046*n1*n6 + 1443*d*n1*n6 - 653*d^2*n1*n6 + 97*d^3*n1*n6 - 
      488*n1^2*n6 + 418*d*n1^2*n6 - 88*d^2*n1^2*n6 - 86*n1^3*n6 + 
      34*d*n1^3*n6 - 4*n1^4*n6 - 1076*n2*n6 + 1581*d*n2*n6 - 756*d^2*n2*n6 + 
      118*d^3*n2*n6 - 970*n1*n2*n6 + 857*d*n1*n2*n6 - 186*d^2*n1*n2*n6 - 
      244*n1^2*n2*n6 + 98*d*n1^2*n2*n6 - 16*n1^3*n2*n6 - 422*n2^2*n6 + 
      428*d*n2^2*n6 - 104*d^2*n2^2*n6 - 198*n1*n2^2*n6 + 86*d*n1*n2^2*n6 - 
      20*n1^2*n2^2*n6 - 88*n2^3*n6 + 44*d*n2^3*n6 - 12*n1*n2^3*n6 - 
      8*n2^4*n6 - 596*n3*n6 + 834*d*n3*n6 - 394*d^2*n3*n6 + 62*d^3*n3*n6 - 
      644*n1*n3*n6 + 599*d*n1*n3*n6 - 138*d^2*n1*n3*n6 - 220*n1^2*n3*n6 + 
      98*d*n1^2*n3*n6 - 22*n1^3*n3*n6 - 752*n2*n3*n6 + 710*d*n2*n3*n6 - 
      166*d^2*n2*n3*n6 - 486*n1*n2*n3*n6 + 217*d*n1*n2*n3*n6 - 
      68*n1^2*n2*n3*n6 - 188*n2^2*n3*n6 + 92*d*n2^2*n3*n6 - 
      58*n1*n2^2*n3*n6 - 16*n2^3*n3*n6 - 146*n3^2*n6 + 135*d*n3^2*n6 - 
      32*d^2*n3^2*n6 - 112*n1*n3^2*n6 + 52*d*n1*n3^2*n6 - 20*n1^2*n3^2*n6 - 
      168*n2*n3^2*n6 + 77*d*n2*n3^2*n6 - 52*n1*n2*n3^2*n6 - 22*n2^2*n3^2*n6 - 
      12*n3^3*n6 + 6*d*n3^3*n6 - 6*n1*n3^3*n6 - 12*n2*n3^3*n6 - 240*n6^2 + 
      360*d*n6^2 - 173*d^2*n6^2 + 27*d^3*n6^2 - 224*n1*n6^2 + 203*d*n1*n6^2 - 
      45*d^2*n1*n6^2 - 54*n1^2*n6^2 + 22*d*n1^2*n6^2 - 4*n1^3*n6^2 - 
      380*n2*n6^2 + 352*d*n2*n6^2 - 80*d^2*n2*n6^2 - 152*n1*n2*n6^2 + 
      64*d*n1*n2*n6^2 - 12*n1^2*n2*n6^2 - 132*n2^2*n6^2 + 60*d*n2^2*n6^2 - 
      16*n1*n2^2*n6^2 - 16*n2^3*n6^2 - 76*n3*n6^2 + 88*d*n3*n6^2 - 
      23*d^2*n3*n6^2 - 76*n1*n3*n6^2 + 37*d*n1*n3*n6^2 - 14*n1^2*n3*n6^2 - 
      128*n2*n3*n6^2 + 60*d*n2*n3*n6^2 - 36*n1*n2*n3*n6^2 - 20*n2^2*n3*n6^2 - 
      4*n3^2*n6^2 + 4*d*n3^2*n6^2 - 4*n1*n3^2*n6^2 - 12*n2*n3^2*n6^2 - 
      28*n6^3 + 26*d*n6^3 - 6*d^2*n6^3 - 14*n1*n6^3 + 6*d*n1*n6^3 - 
      36*n2*n6^3 + 16*d*n2*n6^3 - 4*n1*n2*n6^3 - 8*n2^2*n6^3 - 4*n3*n6^3 + 
      2*d*n3*n6^3 - 2*n1*n3*n6^3 - 4*n2*n3*n6^3)*j[p4a, n1, n2, 1 + n3, 0, 1, 
      -1 + n6, 1, 1, 0, 1, 0, 0, 0, 1])/((-2 + d - n1 - 2*n2)*(-3 + d - n3)*
     (-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(-9 + 4*d - 2*n1 - 2*n2 - n3 - 2*n6)*
     (-1 + n6)) + ((3 - d + n3)*j[p4a, n1, n2, 1 + n3, 0, 1, n6, 0, 1, -1, 1, 
      0, 0, 0, 2])/((-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*
     (-9 + 4*d - 2*n1 - 2*n2 - n3 - 2*n6)) + 
   j[p4a, n1, n2, 1 + n3, 0, 1, n6, 0, 1, -1, 2, 0, 0, 0, 1]/
    (6 - 3*d + 2*n1 + 2*n2 + 2*n6) + 
   ((234 - 319*d + 143*d^2 - 21*d^3 + 188*n1 - 160*d*n1 + 33*d^2*n1 + 
      34*n1^2 - 12*d*n1^2 + 422*n2 - 394*d*n2 + 104*d^2*n2 - 6*d^3*n2 + 
      179*n1*n2 - 89*d*n1*n2 + 8*d^2*n1*n2 + 10*n1^2*n2 - 2*d*n1^2*n2 + 
      244*n2^2 - 148*d*n2^2 + 20*d^2*n2^2 + 42*n1*n2^2 - 10*d*n1*n2^2 + 
      32*n2^3 - 8*d*n2^3 + 136*n3 - 156*d*n3 + 54*d^2*n3 - 5*d^3*n3 + 
      104*n1*n3 - 65*d*n1*n3 + 7*d^2*n1*n3 + 16*n1^2*n3 - 2*d*n1^2*n3 + 
      248*n2*n3 - 168*d*n2*n3 + 24*d^2*n2*n3 + 82*n1*n2*n3 - 19*d*n1*n2*n3 + 
      2*n1^2*n2*n3 + 104*n2^2*n3 - 32*d*n2^2*n3 + 10*n1*n2^2*n3 + 8*n2^3*n3 + 
      34*n3^2 - 31*d*n3^2 + 7*d^2*n3^2 + 22*n1*n3^2 - 9*d*n1*n3^2 + 
      2*n1^2*n3^2 + 54*n2*n3^2 - 22*d*n2*n3^2 + 11*n1*n2*n3^2 + 
      12*n2^2*n3^2 + 4*n3^3 - 2*d*n3^3 + 2*n1*n3^3 + 4*n2*n3^3 - 28*n6 + 
      60*d*n6 - 40*d^2*n6 + 8*d^3*n6 - 18*n1*n6 + 38*d*n1*n6 - 12*d^2*n1*n6 - 
      8*n1^2*n6 + 4*d*n1^2*n6 + 12*n2*n6 + 36*d*n2*n6 - 16*d^2*n2*n6 - 
      14*n1*n2*n6 + 10*d*n1*n2*n6 + 16*n2^2*n6 - 32*n3*n6 + 28*d*n3*n6 - 
      8*d^2*n3*n6 - 14*n1*n3*n6 + 12*d*n1*n3*n6 - 4*n1^2*n3*n6 + 
      12*d*n2*n3*n6 - 10*n1*n2*n3*n6 - 4*n3^2*n6 + 4*n2*n3^2*n6 - 16*n6^2 + 
      16*d*n6^2 - 4*d^2*n6^2 - 8*n1*n6^2 + 4*d*n1*n6^2 - 16*n2*n6^2 + 
      8*d*n2*n6^2 - 8*n3*n6^2 + 4*d*n3*n6^2 - 4*n1*n3*n6^2 - 8*n2*n3*n6^2)*
     j[p4a, n1, n2, 1 + n3, 0, 1, n6, 0, 1, 0, 1, 0, 0, 0, 1])/
    ((-2 + d - n1 - 2*n2)*(-3 + d - n3)*(-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*
     (-9 + 4*d - 2*n1 - 2*n2 - n3 - 2*n6)) + 
   ((-3 + d - n3)*j[p4a, n1, n2, 1 + n3, 0, 1, n6, 0, 1, 0, 1, 0, 0, 0, 2])/
    ((-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(-9 + 4*d - 2*n1 - 2*n2 - n3 - 2*n6)) + 
   j[p4a, n1, n2, 1 + n3, 0, 1, n6, 0, 1, 0, 2, -1, 0, 0, 1]/
    (-6 + 3*d - 2*n1 - 2*n2 - 2*n6) + j[p4a, n1, n2, 1 + n3, 0, 1, n6, 0, 1, 
     0, 2, 0, -1, 0, 1]/(6 - 3*d + 2*n1 + 2*n2 + 2*n6) + 
   j[p4a, n1, n2, 1 + n3, 0, 1, n6, 0, 1, 0, 2, 0, 0, -1, 1]/
    (-6 + 3*d - 2*n1 - 2*n2 - 2*n6) + j[p4a, n1, n2, 1 + n3, 0, 1, n6, 0, 1, 
     0, 2, 0, 0, 0, 1]/(-6 + 3*d - 2*n1 - 2*n2 - 2*n6) + 
   ((-3 + d - n3)*j[p4a, n1, n2, 1 + n3, 0, 1, n6, 0, 2, 0, 1, -1, 0, 0, 1])/
    ((-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(-9 + 4*d - 2*n1 - 2*n2 - n3 - 2*n6)) + 
   j[p4a, n1, n2, 1 + n3, 0, 1, n6, 0, 2, 0, 1, 0, -1, 0, 1]/
    (-6 + 3*d - 2*n1 - 2*n2 - 2*n6) + j[p4a, n1, n2, 1 + n3, 0, 1, n6, 0, 2, 
     0, 1, 0, 0, -1, 1]/(6 - 3*d + 2*n1 + 2*n2 + 2*n6) + 
   j[p4a, n1, n2, 1 + n3, 0, 1, n6, 0, 2, 0, 1, 0, 0, 0, 1]/
    (-6 + 3*d - 2*n1 - 2*n2 - 2*n6) + 
   ((3 - d + n3)*j[p4a, n1, n2, 1 + n3, 0, 1, n6, 1, 0, -1, 1, 0, 0, 0, 2])/
    ((-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(-9 + 4*d - 2*n1 - 2*n2 - n3 - 2*n6)) + 
   j[p4a, n1, n2, 1 + n3, 0, 1, n6, 1, 0, -1, 2, 0, 0, 0, 1]/
    (6 - 3*d + 2*n1 + 2*n2 + 2*n6) + 
   ((342 - 433*d + 181*d^2 - 25*d^3 + 290*n1 - 257*d*n1 + 66*d^2*n1 - 
      4*d^3*n1 + 73*n1^2 - 43*d*n1^2 + 6*d^2*n1^2 + 6*n1^3 - 2*d*n1^3 + 
      362*n2 - 254*d*n2 + 28*d^2*n2 + 6*d^3*n2 + 143*n1*n2 - 59*d*n1*n2 + 
      2*d^2*n1*n2 + 16*n1^2*n2 - 4*d*n1^2*n2 - 20*n2^2 + 60*d*n2^2 - 
      20*d^2*n2^2 - 6*n1*n2^2 + 6*d*n1*n2^2 - 16*n2^3 + 8*d*n2^3 + 232*n3 - 
      232*d*n3 + 68*d^2*n3 - 5*d^3*n3 + 168*n1*n3 - 99*d*n1*n3 + 
      12*d^2*n1*n3 + 32*n1^2*n3 - 9*d*n1^2*n3 + 2*n1^3*n3 + 192*n2*n3 - 
      80*d*n2*n3 + 46*n1*n2*n3 - 5*d*n1*n2*n3 + 4*n1^2*n2*n3 - 32*n2^2*n3 + 
      24*d*n2^2*n3 - 6*n1*n2^2*n3 - 8*n2^3*n3 + 54*n3^2 - 41*d*n3^2 + 
      7*d^2*n3^2 + 32*n1*n3^2 - 10*d*n1*n3^2 + 3*n1^2*n3^2 + 42*n2*n3^2 - 
      10*d*n2*n3^2 + 3*n1*n2*n3^2 - 4*n2^2*n3^2 + 4*n3^3 - 2*d*n3^3 + 
      2*n1*n3^3 + 4*n2*n3^3 + 20*n6 + 32*d*n6 - 36*d^2*n6 + 8*d^3*n6 - 
      6*n1*n6 + 28*d*n1*n6 - 10*d^2*n1*n6 - 2*n1^2*n6 + 2*d*n1^2*n6 - 
      36*n2*n6 + 76*d*n2*n6 - 24*d^2*n2*n6 - 14*n1*n2*n6 + 10*d*n1*n2*n6 - 
      32*n2^2*n6 + 16*d*n2^2*n6 + 8*n3*n6 + 16*d*n3*n6 - 8*d^2*n3*n6 - 
      10*n1*n3*n6 + 10*d*n1*n3*n6 - 2*n1^2*n3*n6 - 40*n2*n3*n6 + 
      28*d*n2*n3*n6 - 10*n1*n2*n3*n6 - 16*n2^2*n3*n6 + 4*n3^2*n6 - 
      4*n2*n3^2*n6 - 16*n6^2 + 16*d*n6^2 - 4*d^2*n6^2 - 8*n1*n6^2 + 
      4*d*n1*n6^2 - 16*n2*n6^2 + 8*d*n2*n6^2 - 8*n3*n6^2 + 4*d*n3*n6^2 - 
      4*n1*n3*n6^2 - 8*n2*n3*n6^2)*j[p4a, n1, n2, 1 + n3, 0, 1, n6, 1, 0, 0, 
      1, 0, 0, 0, 1])/((-2 + d - n1 - 2*n2)*(-3 + d - n3)*
     (-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(-9 + 4*d - 2*n1 - 2*n2 - n3 - 2*n6)) + 
   ((-3 + d - n3)*j[p4a, n1, n2, 1 + n3, 0, 1, n6, 1, 0, 0, 1, 0, 0, 0, 2])/
    ((-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(-9 + 4*d - 2*n1 - 2*n2 - n3 - 2*n6)) + 
   j[p4a, n1, n2, 1 + n3, 0, 1, n6, 1, 0, 0, 2, -1, 0, 0, 1]/
    (-6 + 3*d - 2*n1 - 2*n2 - 2*n6) + 
   ((-108 + 88*d - 18*d^2 - 26*n1 + 10*d*n1 - 44*n2 + 18*d*n2 - 4*n1*n2 - 
      4*n2^2 - 34*n3 + 14*d*n3 - 6*n1*n3 - 8*n2*n3 - 2*n3^2 - 44*n6 + 
      19*d*n6 - 6*n1*n6 - 10*n2*n6 - 6*n3*n6 - 6*n6^2)*
     j[p4a, n1, n2, 1 + n3, 0, 1, n6, 1, 1, 0, 0, 0, 0, 0, 1])/
    ((-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(-9 + 4*d - 2*n1 - 2*n2 - n3 - 2*n6)) + 
   ((-1 - n3 + 2*n6)*j[p4a, n1, n2, 1 + n3, 0, 1, n6, 1, 1, 0, 1, 0, 0, 0, 
      0])/(-6 + 3*d - 2*n1 - 2*n2 - 2*n6) + 
   ((-12 + d + 2*d^2 - 2*d*n1 - 2*d*n2 - 7*n3 + 2*d*n3 - n3^2 + 18*n6 - 
      11*d*n6 + 6*n1*n6 + 6*n2*n6 + 6*n6^2)*j[p4a, n1, n2, 1 + n3, 0, 1, n6, 
      1, 1, 0, 1, 0, 0, 0, 1])/((-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*
     (-9 + 4*d - 2*n1 - 2*n2 - n3 - 2*n6)) + 
   ((-3 + d - n3)*j[p4a, n1, n2, 1 + n3, 0, 1, n6, 2, 0, 0, 1, -1, 0, 0, 1])/
    ((-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(-9 + 4*d - 2*n1 - 2*n2 - n3 - 2*n6)) + 
   j[p4a, n1, n2, 1 + n3, 0, 1, n6, 2, 0, 0, 1, 0, 0, -1, 1]/
    (-6 + 3*d - 2*n1 - 2*n2 - 2*n6) - 
   (n6*j[p4a, n1, n2, 1 + n3, 0, 1, 1 + n6, 1, 0, -1, 1, 0, 0, 0, 1])/
    (-6 + 3*d - 2*n1 - 2*n2 - 2*n6) + 
   (n6*j[p4a, n1, n2, 1 + n3, 0, 1, 1 + n6, 1, 0, 0, 1, 0, -1, 0, 1])/
    (-6 + 3*d - 2*n1 - 2*n2 - 2*n6) - 
   (n6*j[p4a, n1, n2, 1 + n3, 0, 1, 1 + n6, 1, 0, 0, 1, 0, 0, -1, 1])/
    (-6 + 3*d - 2*n1 - 2*n2 - 2*n6) + 
   ((288 - 345*d + 137*d^2 - 18*d^3 + 180*n1 - 143*d*n1 + 28*d^2*n1 + 
      28*n1^2 - 10*d*n1^2 + 126*n2 - 96*d*n2 + 18*d^2*n2 + 58*n1*n2 - 
      22*d*n1*n2 + 4*n1^2*n2 + 12*n2^2 - 4*d*n2^2 + 4*n1*n2^2 + 174*n3 - 
      142*d*n3 + 29*d^2*n3 + 74*n1*n3 - 31*d*n1*n3 + 8*n1^2*n3 + 60*n2*n3 - 
      24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 32*n3^2 - 13*d*n3^2 + 
      6*n1*n3^2 + 6*n2*n3^2 + 2*n3^3 + 54*n6 - 37*d*n6 + 6*d^2*n6 + 
      42*n1*n6 - 16*d*n1*n6 + 4*n1^2*n6 - 10*n2*n6 + 6*d*n2*n6 + 4*n1*n2*n6 - 
      4*n2^2*n6 + 34*n3*n6 - 13*d*n3*n6 + 10*n1*n3*n6 + 2*n2*n3*n6 + 
      4*n3^2*n6 - 22*n6^2 + 10*d*n6^2 - 8*n2*n6^2 - 2*n3*n6^2 - 4*n6^3)*
     j[p4a, n1, n2, 1 + n3, 0, 2, -2 + n6, 1, 1, 0, 1, 0, 0, 0, 1])/
    ((-3 + d - n3)*(-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(-9 + 4*d - 2*n1 - 2*n2 - 
      n3 - 2*n6)*(-1 + n6)) + ((-288 + 345*d - 137*d^2 + 18*d^3 - 180*n1 + 
      143*d*n1 - 28*d^2*n1 - 28*n1^2 + 10*d*n1^2 - 126*n2 + 96*d*n2 - 
      18*d^2*n2 - 58*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 12*n2^2 + 4*d*n2^2 - 
      4*n1*n2^2 - 174*n3 + 142*d*n3 - 29*d^2*n3 - 74*n1*n3 + 31*d*n1*n3 - 
      8*n1^2*n3 - 60*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 32*n3^2 + 
      13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 54*n6 + 37*d*n6 - 
      6*d^2*n6 - 42*n1*n6 + 16*d*n1*n6 - 4*n1^2*n6 + 10*n2*n6 - 6*d*n2*n6 - 
      4*n1*n2*n6 + 4*n2^2*n6 - 34*n3*n6 + 13*d*n3*n6 - 10*n1*n3*n6 - 
      2*n2*n3*n6 - 4*n3^2*n6 + 22*n6^2 - 10*d*n6^2 + 8*n2*n6^2 + 2*n3*n6^2 + 
      4*n6^3)*j[p4a, n1, n2, 1 + n3, 0, 2, -1 + n6, 1, 1, -1, 1, 0, 0, 0, 1])/
    ((-3 + d - n3)*(-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(-9 + 4*d - 2*n1 - 2*n2 - 
      n3 - 2*n6)*(-1 + n6)) + j[p4a, n1, n2, 1 + n3, 0, 2, -1 + n6, 1, 1, 0, 
     1, 0, 0, 0, 0]/(-6 + 3*d - 2*n1 - 2*n2 - 2*n6) + 
   j[p4a, n1, n2, 1 + n3, 0, 2, -1 + n6, 1, 1, 0, 1, 0, 0, 0, 1]/
    (9 - 4*d + 2*n1 + 2*n2 + n3 + 2*n6) + 
   j[p4a, n1, n2, 1 + n3, 0, 2, n6, 0, 1, -1, 1, 0, 0, 0, 1]/
    (6 - 3*d + 2*n1 + 2*n2 + 2*n6) + j[p4a, n1, n2, 1 + n3, 0, 2, n6, 0, 1, 
     0, 1, 0, 0, -1, 1]/(-6 + 3*d - 2*n1 - 2*n2 - 2*n6) + 
   ((1 + n3)*(81 - 68*d + 14*d^2 + 22*n1 - 8*d*n1 + 40*n2 - 16*d*n2 + 
      4*n1*n2 + 4*n2^2 + 26*n3 - 12*d*n3 + 6*n1*n3 + 8*n2*n3 + n3^2 + 40*n6 - 
      16*d*n6 + 4*n1*n6 + 8*n2*n6 + 8*n3*n6 + 4*n6^2)*
     j[p4a, n1, n2, 2 + n3, -1, 1, n6, 0, 1, 0, 1, 0, 0, 0, 1])/
    ((-3 + d - n3)*(-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(-9 + 4*d - 2*n1 - 2*n2 - 
      n3 - 2*n6)) + ((1 + n3)*(81 - 68*d + 14*d^2 + 22*n1 - 8*d*n1 + 40*n2 - 
      16*d*n2 + 4*n1*n2 + 4*n2^2 + 26*n3 - 12*d*n3 + 6*n1*n3 + 8*n2*n3 + 
      n3^2 + 40*n6 - 16*d*n6 + 4*n1*n6 + 8*n2*n6 + 8*n3*n6 + 4*n6^2)*
     j[p4a, n1, n2, 2 + n3, -1, 1, n6, 1, 0, 0, 1, 0, 0, 0, 1])/
    ((-3 + d - n3)*(-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(-9 + 4*d - 2*n1 - 2*n2 - 
      n3 - 2*n6)) + ((1 + n3)*(81 - 68*d + 14*d^2 + 22*n1 - 8*d*n1 + 40*n2 - 
      16*d*n2 + 4*n1*n2 + 4*n2^2 + 26*n3 - 12*d*n3 + 6*n1*n3 + 8*n2*n3 + 
      n3^2 + 40*n6 - 16*d*n6 + 4*n1*n6 + 8*n2*n6 + 8*n3*n6 + 4*n6^2)*
     j[p4a, n1, n2, 2 + n3, -1, 1, n6, 1, 1, 0, 0, 0, 0, 0, 1])/
    ((-3 + d - n3)*(-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(-9 + 4*d - 2*n1 - 2*n2 - 
      n3 - 2*n6)) - ((1 + n3)*(108 - 89*d + 18*d^2 + 28*n1 - 10*d*n1 + 
      46*n2 - 18*d*n2 + 4*n1*n2 + 4*n2^2 + 38*n3 - 17*d*n3 + 8*n1*n3 + 
      10*n2*n3 + 2*n3^2 + 46*n6 - 18*d*n6 + 4*n1*n6 + 8*n2*n6 + 10*n3*n6 + 
      4*n6^2)*j[p4a, n1, n2, 2 + n3, -1, 1, n6, 1, 1, 0, 1, 0, 0, 0, 1])/
    ((3 - d + n3)*(-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(9 - 4*d + 2*n1 + 2*n2 + 
      n3 + 2*n6)) + ((1 + n3)*(-288 + 345*d - 137*d^2 + 18*d^3 - 180*n1 + 
      143*d*n1 - 28*d^2*n1 - 28*n1^2 + 10*d*n1^2 - 126*n2 + 96*d*n2 - 
      18*d^2*n2 - 58*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 12*n2^2 + 4*d*n2^2 - 
      4*n1*n2^2 - 174*n3 + 142*d*n3 - 29*d^2*n3 - 74*n1*n3 + 31*d*n1*n3 - 
      8*n1^2*n3 - 60*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 32*n3^2 + 
      13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 54*n6 + 37*d*n6 - 
      6*d^2*n6 - 42*n1*n6 + 16*d*n1*n6 - 4*n1^2*n6 + 10*n2*n6 - 6*d*n2*n6 - 
      4*n1*n2*n6 + 4*n2^2*n6 - 34*n3*n6 + 13*d*n3*n6 - 10*n1*n3*n6 - 
      2*n2*n3*n6 - 4*n3^2*n6 + 22*n6^2 - 10*d*n6^2 + 8*n2*n6^2 + 2*n3*n6^2 + 
      4*n6^3)*j[p4a, n1, n2, 2 + n3, 0, 1, -1 + n6, 1, 0, 0, 1, 0, 0, 0, 1])/
    ((-3 + d - n3)*(-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(-9 + 4*d - 2*n1 - 2*n2 - 
      n3 - 2*n6)*(-1 + n6)) - ((1 + n3)*(-288 + 345*d - 137*d^2 + 18*d^3 - 
      180*n1 + 143*d*n1 - 28*d^2*n1 - 28*n1^2 + 10*d*n1^2 - 126*n2 + 
      96*d*n2 - 18*d^2*n2 - 58*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 12*n2^2 + 
      4*d*n2^2 - 4*n1*n2^2 - 174*n3 + 142*d*n3 - 29*d^2*n3 - 74*n1*n3 + 
      31*d*n1*n3 - 8*n1^2*n3 - 60*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 
      4*n2^2*n3 - 32*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 
      54*n6 + 37*d*n6 - 6*d^2*n6 - 42*n1*n6 + 16*d*n1*n6 - 4*n1^2*n6 + 
      10*n2*n6 - 6*d*n2*n6 - 4*n1*n2*n6 + 4*n2^2*n6 - 34*n3*n6 + 13*d*n3*n6 - 
      10*n1*n3*n6 - 2*n2*n3*n6 - 4*n3^2*n6 + 22*n6^2 - 10*d*n6^2 + 
      8*n2*n6^2 + 2*n3*n6^2 + 4*n6^3)*j[p4a, n1, n2, 2 + n3, 0, 1, -1 + n6, 
      1, 1, 0, 0, 0, 0, 0, 1])/((-3 + d - n3)*(-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*
     (-9 + 4*d - 2*n1 - 2*n2 - n3 - 2*n6)*(-1 + n6)) + 
   ((1 + n3)*(-288 + 345*d - 137*d^2 + 18*d^3 - 180*n1 + 143*d*n1 - 
      28*d^2*n1 - 28*n1^2 + 10*d*n1^2 - 126*n2 + 96*d*n2 - 18*d^2*n2 - 
      58*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 12*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
      174*n3 + 142*d*n3 - 29*d^2*n3 - 74*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
      60*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 32*n3^2 + 13*d*n3^2 - 
      6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 54*n6 + 37*d*n6 - 6*d^2*n6 - 
      42*n1*n6 + 16*d*n1*n6 - 4*n1^2*n6 + 10*n2*n6 - 6*d*n2*n6 - 4*n1*n2*n6 + 
      4*n2^2*n6 - 34*n3*n6 + 13*d*n3*n6 - 10*n1*n3*n6 - 2*n2*n3*n6 - 
      4*n3^2*n6 + 22*n6^2 - 10*d*n6^2 + 8*n2*n6^2 + 2*n3*n6^2 + 4*n6^3)*
     j[p4a, n1, n2, 2 + n3, 0, 1, -1 + n6, 1, 1, 0, 1, -1, 0, 0, 1])/
    ((-3 + d - n3)*(-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(-9 + 4*d - 2*n1 - 2*n2 - 
      n3 - 2*n6)*(-1 + n6)) - ((1 + n3)*(-288 + 345*d - 137*d^2 + 18*d^3 - 
      180*n1 + 143*d*n1 - 28*d^2*n1 - 28*n1^2 + 10*d*n1^2 - 126*n2 + 
      96*d*n2 - 18*d^2*n2 - 58*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 12*n2^2 + 
      4*d*n2^2 - 4*n1*n2^2 - 174*n3 + 142*d*n3 - 29*d^2*n3 - 74*n1*n3 + 
      31*d*n1*n3 - 8*n1^2*n3 - 60*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 
      4*n2^2*n3 - 32*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 
      54*n6 + 37*d*n6 - 6*d^2*n6 - 42*n1*n6 + 16*d*n1*n6 - 4*n1^2*n6 + 
      10*n2*n6 - 6*d*n2*n6 - 4*n1*n2*n6 + 4*n2^2*n6 - 34*n3*n6 + 13*d*n3*n6 - 
      10*n1*n3*n6 - 2*n2*n3*n6 - 4*n3^2*n6 + 22*n6^2 - 10*d*n6^2 + 
      8*n2*n6^2 + 2*n3*n6^2 + 4*n6^3)*j[p4a, n1, n2, 2 + n3, 0, 1, -1 + n6, 
      1, 1, 0, 1, 0, -1, 0, 1])/((-3 + d - n3)*(-6 + 3*d - 2*n1 - 2*n2 - 
      2*n6)*(-9 + 4*d - 2*n1 - 2*n2 - n3 - 2*n6)*(-1 + n6)) + 
   ((1 + n3)*(-288 + 345*d - 137*d^2 + 18*d^3 - 180*n1 + 143*d*n1 - 
      28*d^2*n1 - 28*n1^2 + 10*d*n1^2 - 126*n2 + 96*d*n2 - 18*d^2*n2 - 
      58*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 12*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
      174*n3 + 142*d*n3 - 29*d^2*n3 - 74*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
      60*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 32*n3^2 + 13*d*n3^2 - 
      6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 54*n6 + 37*d*n6 - 6*d^2*n6 - 
      42*n1*n6 + 16*d*n1*n6 - 4*n1^2*n6 + 10*n2*n6 - 6*d*n2*n6 - 4*n1*n2*n6 + 
      4*n2^2*n6 - 34*n3*n6 + 13*d*n3*n6 - 10*n1*n3*n6 - 2*n2*n3*n6 - 
      4*n3^2*n6 + 22*n6^2 - 10*d*n6^2 + 8*n2*n6^2 + 2*n3*n6^2 + 4*n6^3)*
     j[p4a, n1, n2, 2 + n3, 0, 1, -1 + n6, 1, 1, 0, 1, 0, 0, -1, 1])/
    ((-3 + d - n3)*(-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(-9 + 4*d - 2*n1 - 2*n2 - 
      n3 - 2*n6)*(-1 + n6)) + ((1 + n3)*(-288 + 345*d - 137*d^2 + 18*d^3 - 
      180*n1 + 143*d*n1 - 28*d^2*n1 - 28*n1^2 + 10*d*n1^2 - 126*n2 + 
      96*d*n2 - 18*d^2*n2 - 58*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 12*n2^2 + 
      4*d*n2^2 - 4*n1*n2^2 - 174*n3 + 142*d*n3 - 29*d^2*n3 - 74*n1*n3 + 
      31*d*n1*n3 - 8*n1^2*n3 - 60*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 
      4*n2^2*n3 - 32*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 
      54*n6 + 37*d*n6 - 6*d^2*n6 - 42*n1*n6 + 16*d*n1*n6 - 4*n1^2*n6 + 
      10*n2*n6 - 6*d*n2*n6 - 4*n1*n2*n6 + 4*n2^2*n6 - 34*n3*n6 + 13*d*n3*n6 - 
      10*n1*n3*n6 - 2*n2*n3*n6 - 4*n3^2*n6 + 22*n6^2 - 10*d*n6^2 + 
      8*n2*n6^2 + 2*n3*n6^2 + 4*n6^3)*j[p4a, n1, n2, 2 + n3, 0, 1, -1 + n6, 
      1, 1, 0, 1, 0, 0, 0, 1])/((-3 + d - n3)*(-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*
     (-9 + 4*d - 2*n1 - 2*n2 - n3 - 2*n6)*(-1 + n6)) + 
   (2*(-3 + d - n3)*(1 + n3)*j[p4a, n1, n2, 2 + n3, 0, 1, n6, 0, 1, 0, 1, -1, 
      0, 0, 1])/((-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(-9 + 4*d - 2*n1 - 2*n2 - 
      n3 - 2*n6)) - ((-3 + d - n3)*(1 + n3)*j[p4a, n1, n2, 2 + n3, 0, 1, n6, 
      0, 1, 0, 1, 0, -1, 0, 1])/((-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*
     (-9 + 4*d - 2*n1 - 2*n2 - n3 - 2*n6)) + 
   (3*(1 + n3)*j[p4a, n1, n2, 2 + n3, 0, 1, n6, 0, 1, 0, 1, 0, 0, 0, 1])/
    (-6 + 3*d - 2*n1 - 2*n2 - 2*n6) + 
   (2*(-3 + d - n3)*(1 + n3)*j[p4a, n1, n2, 2 + n3, 0, 1, n6, 1, 0, 0, 1, -1, 
      0, 0, 1])/((-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(-9 + 4*d - 2*n1 - 2*n2 - 
      n3 - 2*n6)) - ((-3 + d - n3)*(1 + n3)*j[p4a, n1, n2, 2 + n3, 0, 1, n6, 
      1, 0, 0, 1, 0, -1, 0, 1])/((-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*
     (-9 + 4*d - 2*n1 - 2*n2 - n3 - 2*n6)) + 
   (2*(1 + n3)*j[p4a, n1, n2, 2 + n3, 0, 1, n6, 1, 0, 0, 1, 0, 0, 0, 1])/
    (-6 + 3*d - 2*n1 - 2*n2 - 2*n6) - 
   ((-3 + d - n3)*(1 + n3)*j[p4a, n1, n2, 2 + n3, 0, 1, n6, 1, 1, 0, 0, 0, 
      -1, 0, 1])/((-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(-9 + 4*d - 2*n1 - 2*n2 - 
      n3 - 2*n6)) - ((1 + n3)*(81 - 68*d + 14*d^2 + 22*n1 - 8*d*n1 + 40*n2 - 
      16*d*n2 + 4*n1*n2 + 4*n2^2 + 26*n3 - 12*d*n3 + 6*n1*n3 + 8*n2*n3 + 
      n3^2 + 40*n6 - 16*d*n6 + 4*n1*n6 + 8*n2*n6 + 8*n3*n6 + 4*n6^2)*
     j[p4a, n1, n2, 2 + n3, 0, 1, n6, 1, 1, 0, 1, -1, 0, 0, 0])/
    ((-3 + d - n3)*(-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(-9 + 4*d - 2*n1 - 2*n2 - 
      n3 - 2*n6)) + ((1 + n3)*j[p4a, n1, n2, 2 + n3, 0, 1, n6, 1, 1, 0, 1, 0, 
      -1, 0, 1])/(9 - 4*d + 2*n1 + 2*n2 + n3 + 2*n6) + 
   ((-1 - n3)*j[p4a, n1, n2, 2 + n3, 0, 1, n6, 1, 1, 0, 1, 0, 0, -1, 1])/
    (-6 + 3*d - 2*n1 - 2*n2 - 2*n6) + 
   ((1 + n3)*j[p4a, n1, n2, 2 + n3, 0, 1, n6, 1, 1, 0, 1, 0, 0, 0, 0])/
    (-6 + 3*d - 2*n1 - 2*n2 - 2*n6) + 
   (n2*j[p4a, n1, 1 + n2, n3, 0, 0, n6, 1, 1, 0, 1, 0, 0, 0, 1])/
    (6 - 3*d + 2*n1 + 2*n2 + 2*n6) + 
   (n2*j[p4a, n1, 1 + n2, n3, 0, 1, n6, 0, 1, 0, 1, 0, 0, 0, 1])/
    (6 - 3*d + 2*n1 + 2*n2 + 2*n6) - 
   (n2*j[p4a, n1, 1 + n2, n3, 0, 1, n6, 1, 0, 0, 1, 0, 0, 0, 1])/
    (6 - 3*d + 2*n1 + 2*n2 + 2*n6) + 
   (n2*j[p4a, n1, 1 + n2, 1 + n3, 0, 0, n6, 1, 1, 0, 1, 0, -1, 0, 1])/
    (6 - 3*d + 2*n1 + 2*n2 + 2*n6) - 
   (2*n2*j[p4a, n1, 1 + n2, 1 + n3, 0, 0, n6, 1, 1, 0, 1, 0, 0, -1, 1])/
    (6 - 3*d + 2*n1 + 2*n2 + 2*n6) - 
   (n2*j[p4a, n1, 1 + n2, 1 + n3, 0, 1, -1 + n6, 0, 1, 0, 1, 0, 0, 0, 1])/
    (6 - 3*d + 2*n1 + 2*n2 + 2*n6) - 
   (n2*j[p4a, n1, 1 + n2, 1 + n3, 0, 1, -1 + n6, 1, 0, 0, 1, 0, 0, 0, 1])/
    (6 - 3*d + 2*n1 + 2*n2 + 2*n6) + 
   (n2*(81 - 68*d + 14*d^2 + 22*n1 - 8*d*n1 + 40*n2 - 16*d*n2 + 4*n1*n2 + 
      4*n2^2 + 26*n3 - 12*d*n3 + 6*n1*n3 + 8*n2*n3 + n3^2 + 40*n6 - 16*d*n6 + 
      4*n1*n6 + 8*n2*n6 + 8*n3*n6 + 4*n6^2)*j[p4a, n1, 1 + n2, 1 + n3, 0, 1, 
      -1 + n6, 1, 1, 0, 0, 0, 0, 0, 1])/((-3 + d - n3)*
     (-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(-9 + 4*d - 2*n1 - 2*n2 - n3 - 2*n6)) + 
   (n2*j[p4a, n1, 1 + n2, 1 + n3, 0, 1, n6, 0, 1, 0, 1, 0, -1, 0, 1])/
    (6 - 3*d + 2*n1 + 2*n2 + 2*n6) - 
   (2*n2*j[p4a, n1, 1 + n2, 1 + n3, 0, 1, n6, 0, 1, 0, 1, 0, 0, -1, 1])/
    (6 - 3*d + 2*n1 + 2*n2 + 2*n6) - 
   (n2*j[p4a, n1, 1 + n2, 1 + n3, 0, 1, n6, 1, 0, 0, 1, 0, -1, 0, 1])/
    (6 - 3*d + 2*n1 + 2*n2 + 2*n6) + 
   (2*n2*j[p4a, n1, 1 + n2, 1 + n3, 0, 1, n6, 1, 0, 0, 1, 0, 0, -1, 1])/
    (6 - 3*d + 2*n1 + 2*n2 + 2*n6) - 
   (n1*(-18 + 13*d - 2*d^2 - 8*n1 + 2*d*n1 - 26*n2 + 10*d*n2 - 4*n1*n2 - 
      4*n2^2 - 10*n3 + 5*d*n3 - 4*n1*n3 - 6*n2*n3 - 8*n6 + 2*d*n6 - 4*n2*n6 - 
      4*n3*n6)*j[p4a, 1 + n1, -1 + n2, 1 + n3, -1, 1, n6, 1, 1, 0, 1, 0, 0, 
      0, 1])/((2 - d + n1 + 2*n2)*(6 - 3*d + 2*n1 + 2*n2 + 2*n6)*
     (9 - 4*d + 2*n1 + 2*n2 + n3 + 2*n6)) - 
   (n1*(-18 + 13*d - 2*d^2 - 8*n1 + 2*d*n1 - 26*n2 + 10*d*n2 - 4*n1*n2 - 
      4*n2^2 - 10*n3 + 5*d*n3 - 4*n1*n3 - 6*n2*n3 - 8*n6 + 2*d*n6 - 4*n2*n6 - 
      4*n3*n6)*j[p4a, 1 + n1, -1 + n2, 1 + n3, 0, 0, n6, 1, 1, 0, 1, 0, 0, 0, 
      1])/((2 - d + n1 + 2*n2)*(6 - 3*d + 2*n1 + 2*n2 + 2*n6)*
     (9 - 4*d + 2*n1 + 2*n2 + n3 + 2*n6)) + 
   (n1*(-288 + 345*d - 137*d^2 + 18*d^3 - 180*n1 + 143*d*n1 - 28*d^2*n1 - 
      28*n1^2 + 10*d*n1^2 - 126*n2 + 96*d*n2 - 18*d^2*n2 - 58*n1*n2 + 
      22*d*n1*n2 - 4*n1^2*n2 - 12*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 174*n3 + 
      142*d*n3 - 29*d^2*n3 - 74*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 60*n2*n3 + 
      24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 32*n3^2 + 13*d*n3^2 - 
      6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 54*n6 + 37*d*n6 - 6*d^2*n6 - 
      42*n1*n6 + 16*d*n1*n6 - 4*n1^2*n6 + 10*n2*n6 - 6*d*n2*n6 - 4*n1*n2*n6 + 
      4*n2^2*n6 - 34*n3*n6 + 13*d*n3*n6 - 10*n1*n3*n6 - 2*n2*n3*n6 - 
      4*n3^2*n6 + 22*n6^2 - 10*d*n6^2 + 8*n2*n6^2 + 2*n3*n6^2 + 4*n6^3)*
     j[p4a, 1 + n1, -1 + n2, 1 + n3, 0, 1, -1 + n6, 1, 1, 0, 1, 0, 0, 0, 1])/
    ((-3 + d - n3)*(-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(-9 + 4*d - 2*n1 - 2*n2 - 
      n3 - 2*n6)*(-1 + n6)) + 
   (n1*(-18 + 13*d - 2*d^2 - 8*n1 + 2*d*n1 - 26*n2 + 10*d*n2 - 4*n1*n2 - 
      4*n2^2 - 10*n3 + 5*d*n3 - 4*n1*n3 - 6*n2*n3 - 8*n6 + 2*d*n6 - 4*n2*n6 - 
      4*n3*n6)*j[p4a, 1 + n1, -1 + n2, 1 + n3, 0, 1, n6, 1, 0, 0, 1, 0, 0, 0, 
      1])/((2 - d + n1 + 2*n2)*(6 - 3*d + 2*n1 + 2*n2 + 2*n6)*
     (9 - 4*d + 2*n1 + 2*n2 + n3 + 2*n6)) + 
   (n1*(-18 + 13*d - 2*d^2 - 8*n1 + 2*d*n1 - 26*n2 + 10*d*n2 - 4*n1*n2 - 
      4*n2^2 - 10*n3 + 5*d*n3 - 4*n1*n3 - 6*n2*n3 - 8*n6 + 2*d*n6 - 4*n2*n6 - 
      4*n3*n6)*j[p4a, 1 + n1, -1 + n2, 1 + n3, 0, 1, n6, 1, 1, -1, 1, 0, 0, 
      0, 1])/((2 - d + n1 + 2*n2)*(6 - 3*d + 2*n1 + 2*n2 + 2*n6)*
     (9 - 4*d + 2*n1 + 2*n2 + n3 + 2*n6)) - 
   (n1*(-18 + 13*d - 2*d^2 - 8*n1 + 2*d*n1 - 26*n2 + 10*d*n2 - 4*n1*n2 - 
      4*n2^2 - 10*n3 + 5*d*n3 - 4*n1*n3 - 6*n2*n3 - 8*n6 + 2*d*n6 - 4*n2*n6 - 
      4*n3*n6)*j[p4a, 1 + n1, -1 + n2, 1 + n3, 0, 1, n6, 1, 1, 0, 1, -1, 0, 
      0, 1])/((2 - d + n1 + 2*n2)*(6 - 3*d + 2*n1 + 2*n2 + 2*n6)*
     (9 - 4*d + 2*n1 + 2*n2 + n3 + 2*n6)) + 
   (n1*(-18 + 13*d - 2*d^2 - 8*n1 + 2*d*n1 - 26*n2 + 10*d*n2 - 4*n1*n2 - 
      4*n2^2 - 10*n3 + 5*d*n3 - 4*n1*n3 - 6*n2*n3 - 8*n6 + 2*d*n6 - 4*n2*n6 - 
      4*n3*n6)*j[p4a, 1 + n1, n2, 1 + n3, -1, 1, n6, 1, 1, 0, 0, 0, 0, 0, 1])/
    ((2 - d + n1 + 2*n2)*(6 - 3*d + 2*n1 + 2*n2 + 2*n6)*
     (9 - 4*d + 2*n1 + 2*n2 + n3 + 2*n6)) - 
   (n1*j[p4a, 1 + n1, n2, 1 + n3, 0, 0, n6, 1, 1, 0, 1, 0, 0, -1, 1])/
    (6 - 3*d + 2*n1 + 2*n2 + 2*n6) + 
   (n1*j[p4a, 1 + n1, n2, 1 + n3, 0, 0, n6, 1, 1, 0, 1, 0, 0, 0, 1])/
    (6 - 3*d + 2*n1 + 2*n2 + 2*n6) - 
   (n1*(-288 + 345*d - 137*d^2 + 18*d^3 - 180*n1 + 143*d*n1 - 28*d^2*n1 - 
      28*n1^2 + 10*d*n1^2 - 126*n2 + 96*d*n2 - 18*d^2*n2 - 58*n1*n2 + 
      22*d*n1*n2 - 4*n1^2*n2 - 12*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 174*n3 + 
      142*d*n3 - 29*d^2*n3 - 74*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 60*n2*n3 + 
      24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 32*n3^2 + 13*d*n3^2 - 
      6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 54*n6 + 37*d*n6 - 6*d^2*n6 - 
      42*n1*n6 + 16*d*n1*n6 - 4*n1^2*n6 + 10*n2*n6 - 6*d*n2*n6 - 4*n1*n2*n6 + 
      4*n2^2*n6 - 34*n3*n6 + 13*d*n3*n6 - 10*n1*n3*n6 - 2*n2*n3*n6 - 
      4*n3^2*n6 + 22*n6^2 - 10*d*n6^2 + 8*n2*n6^2 + 2*n3*n6^2 + 4*n6^3)*
     j[p4a, 1 + n1, n2, 1 + n3, 0, 1, -1 + n6, 1, 1, 0, 0, 0, 0, 0, 1])/
    ((-3 + d - n3)*(-6 + 3*d - 2*n1 - 2*n2 - 2*n6)*(-9 + 4*d - 2*n1 - 2*n2 - 
      n3 - 2*n6)*(-1 + n6)) + (n1*j[p4a, 1 + n1, n2, 1 + n3, 0, 1, n6, 1, 0, 
      0, 1, 0, 0, -1, 1])/(6 - 3*d + 2*n1 + 2*n2 + 2*n6) - 
   (n1*j[p4a, 1 + n1, n2, 1 + n3, 0, 1, n6, 1, 0, 0, 1, 0, 0, 0, 1])/
    (6 - 3*d + 2*n1 + 2*n2 + 2*n6), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 0 && n12 == 0 && n13 == -1 && n14 == 1 && n4 == 0 && 
    n5 == 1 && n6 == 1 && n7 == 1 && n8 == 1 && n9 != 0 -> 
  ((-2 + d - n3)*(-10 + 3*d - 2*n1 - 2*n2 - 2*n9)*j[p4a, -1 + n1, -1 + n2, 
      n3, 0, 1, 1, 1, 2, 1 + n9, 1, 0, 0, -1, 1])/(-186 + 259*d - 119*d^2 + 
     18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 
     68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 
     4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 
     31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 
     4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 
     76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 
     8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 12*n1*n3*n9 - 
     8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((86 - 73*d + 15*d^2 + 16*n1 - 8*d*n1 + 38*n2 - 16*d*n2 + 4*n1*n2 + 
      4*n2^2 + 38*n3 - 14*d*n3 + 6*n1*n3 + 8*n2*n3 + 2*n3^2 + 16*n9 - 
      8*d*n9 + 4*n2*n9 + 6*n3*n9)*j[p4a, -1 + n1, -1 + n2, n3, 0, 2, 1, 1, 1, 
      1 + n9, 1, 0, 0, -1, 1])/(-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 
     127*d*n1 - 28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 
     18*d^2*n2 - 46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 
     4*n1*n2^2 - 154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 
     8*n1^2*n3 - 52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 
     13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 
     16*d^2*n9 - 28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 
     48*n3*n9 + 20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 
     4*d*n9^2 - 4*n3*n9^2) + (n3*(86 - 73*d + 15*d^2 + 16*n1 - 8*d*n1 + 
      38*n2 - 16*d*n2 + 4*n1*n2 + 4*n2^2 + 38*n3 - 14*d*n3 + 6*n1*n3 + 
      8*n2*n3 + 2*n3^2 + 16*n9 - 8*d*n9 + 4*n2*n9 + 6*n3*n9)*
     j[p4a, -1 + n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, 0, -1, 1])/
    (186 - 259*d + 119*d^2 - 18*d^3 + 142*n1 - 127*d*n1 + 28*d^2*n1 + 
     20*n1^2 - 10*d*n1^2 + 58*n2 - 68*d*n2 + 18*d^2*n2 + 46*n1*n2 - 
     22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 4*d*n2^2 + 4*n1*n2^2 + 154*n3 - 
     134*d*n3 + 29*d^2*n3 + 76*n1*n3 - 31*d*n1*n3 + 8*n1^2*n3 + 52*n2*n3 - 
     24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 30*n3^2 - 13*d*n3^2 + 6*n1*n3^2 + 
     6*n2*n3^2 + 2*n3^3 + 76*n9 - 70*d*n9 + 16*d^2*n9 + 28*n1*n9 - 
     14*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 4*n1*n2*n9 + 48*n3*n9 - 20*d*n3*n9 + 
     12*n1*n3*n9 + 8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 4*d*n9^2 + 4*n3*n9^2) + 
   ((86 - 73*d + 15*d^2 + 16*n1 - 8*d*n1 + 38*n2 - 16*d*n2 + 4*n1*n2 + 
      4*n2^2 + 38*n3 - 14*d*n3 + 6*n1*n3 + 8*n2*n3 + 2*n3^2 + 16*n9 - 
      8*d*n9 + 4*n2*n9 + 6*n3*n9)*j[p4a, -1 + n1, n2, -1 + n3, 0, 1, 1, 1, 1, 
      1 + n9, 1, 0, 0, 0, 1])/(-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 
     127*d*n1 - 28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 
     18*d^2*n2 - 46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 
     4*n1*n2^2 - 154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 
     8*n1^2*n3 - 52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 
     13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 
     16*d^2*n9 - 28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 
     48*n3*n9 + 20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 
     4*d*n9^2 - 4*n3*n9^2) + ((84 - 70*d + 14*d^2 + 16*n1 - 8*d*n1 + 38*n2 - 
      16*d*n2 + 4*n1*n2 + 4*n2^2 + 35*n3 - 12*d*n3 + 6*n1*n3 + 8*n2*n3 + 
      n3^2 + 16*n9 - 8*d*n9 + 4*n2*n9 + 6*n3*n9)*j[p4a, -1 + n1, n2, n3, 0, 
      0, 1, 1, 1, 1 + n9, 1, 0, 0, 0, 1])/(-186 + 259*d - 119*d^2 + 18*d^3 - 
     142*n1 + 127*d*n1 - 28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 
     18*d^2*n2 - 46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 
     4*n1*n2^2 - 154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 
     8*n1^2*n3 - 52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 
     13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 
     16*d^2*n9 - 28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 
     48*n3*n9 + 20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 
     4*d*n9^2 - 4*n3*n9^2) + ((84 - 70*d + 14*d^2 + 16*n1 - 8*d*n1 + 38*n2 - 
      16*d*n2 + 4*n1*n2 + 4*n2^2 + 35*n3 - 12*d*n3 + 6*n1*n3 + 8*n2*n3 + 
      n3^2 + 16*n9 - 8*d*n9 + 4*n2*n9 + 6*n3*n9)*j[p4a, -1 + n1, n2, n3, 0, 
      1, 0, 1, 2, 1 + n9, 1, 0, 0, -1, 1])/(-186 + 259*d - 119*d^2 + 18*d^3 - 
     142*n1 + 127*d*n1 - 28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 
     18*d^2*n2 - 46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 
     4*n1*n2^2 - 154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 
     8*n1^2*n3 - 52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 
     13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 
     16*d^2*n9 - 28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 
     48*n3*n9 + 20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 
     4*d*n9^2 - 4*n3*n9^2) + ((-106 + 89*d - 18*d^2 - 20*n1 + 10*d*n1 - 
      42*n2 + 18*d*n2 - 4*n1*n2 - 4*n2^2 - 48*n3 + 17*d*n3 - 8*n1*n3 - 
      10*n2*n3 - 2*n3^2 - 20*n9 + 10*d*n9 - 4*n2*n9 - 8*n3*n9)*
     j[p4a, -1 + n1, n2, n3, 0, 1, 1, 0, 1, 1 + n9, 1, 0, 0, 0, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, -1 + n1, n2, n3, 0, 1, 1, 0, 2, 1 + n9, 1, 0, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-84 + 70*d - 14*d^2 - 16*n1 + 8*d*n1 - 38*n2 + 16*d*n2 - 4*n1*n2 - 
      4*n2^2 - 35*n3 + 12*d*n3 - 6*n1*n3 - 8*n2*n3 - n3^2 - 16*n9 + 8*d*n9 - 
      4*n2*n9 - 6*n3*n9)*j[p4a, -1 + n1, n2, n3, 0, 1, 1, 1, 0, 1 + n9, 1, 0, 
      0, 0, 1])/(-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 
     28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 
     46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
     154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
     52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 
     6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 
     28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 
     20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 
     4*n3*n9^2) + ((86 - 73*d + 15*d^2 + 16*n1 - 8*d*n1 + 38*n2 - 16*d*n2 + 
      4*n1*n2 + 4*n2^2 + 38*n3 - 14*d*n3 + 6*n1*n3 + 8*n2*n3 + 2*n3^2 + 
      16*n9 - 8*d*n9 + 4*n2*n9 + 6*n3*n9)*j[p4a, -1 + n1, n2, n3, 0, 1, 1, 1, 
      1, 1 + n9, 1, 0, -1, 0, 1])/(-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 
     127*d*n1 - 28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 
     18*d^2*n2 - 46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 
     4*n1*n2^2 - 154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 
     8*n1^2*n3 - 52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 
     13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 
     16*d^2*n9 - 28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 
     48*n3*n9 + 20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 
     4*d*n9^2 - 4*n3*n9^2) + ((-146 + 121*d - 24*d^2 - 28*n1 + 14*d*n1 + 
      56*n2 - 67*d*n2 + 18*d^2*n2 + 16*n1*n2 - 10*d*n1*n2 + 38*n2^2 - 
      18*d*n2^2 + 4*n1*n2^2 + 4*n2^3 - 154*n3 + 96*d*n3 - 15*d^2*n3 - 
      28*n1*n3 + 8*d*n1*n3 - 4*n2*n3 - d*n2*n3 + 4*n1*n2*n3 + 6*n2^2*n3 - 
      40*n3^2 + 14*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 48*n9 + 
      30*d*n9 - 3*d^2*n9 - 4*n1*n9 + 2*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 
      4*n2^2*n9 - 38*n3*n9 + 11*d*n3*n9 - 2*n1*n3*n9 + 2*n2*n3*n9 - 
      6*n3^2*n9 - 4*n9^2 + 2*d*n9^2 - 2*n3*n9^2)*j[p4a, -1 + n1, n2, n3, 0, 
      1, 1, 1, 1, 1 + n9, 1, 0, 0, -1, 1])/(-186 + 259*d - 119*d^2 + 18*d^3 - 
     142*n1 + 127*d*n1 - 28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 
     18*d^2*n2 - 46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 
     4*n1*n2^2 - 154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 
     8*n1^2*n3 - 52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 
     13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 
     16*d^2*n9 - 28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 
     48*n3*n9 + 20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 
     4*d*n9^2 - 4*n3*n9^2) + ((-84 + 70*d - 14*d^2 - 16*n1 + 8*d*n1 - 38*n2 + 
      16*d*n2 - 4*n1*n2 - 4*n2^2 - 35*n3 + 12*d*n3 - 6*n1*n3 - 8*n2*n3 - 
      n3^2 - 16*n9 + 8*d*n9 - 4*n2*n9 - 6*n3*n9)*j[p4a, -1 + n1, n2, n3, 0, 
      1, 1, 1, 1, 1 + n9, 1, 0, 0, 0, 0])/(-186 + 259*d - 119*d^2 + 18*d^3 - 
     142*n1 + 127*d*n1 - 28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 
     18*d^2*n2 - 46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 
     4*n1*n2^2 - 154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 
     8*n1^2*n3 - 52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 
     13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 
     16*d^2*n9 - 28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 
     48*n3*n9 + 20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 
     4*d*n9^2 - 4*n3*n9^2) + ((-2 + d - n3)*(-10 + 3*d - 2*n1 - 2*n2 - 2*n9)*
     (1 + n9)*j[p4a, -1 + n1, n2, n3, 0, 1, 1, 1, 1, 2 + n9, 1, 0, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-84 + 70*d - 14*d^2 - 16*n1 + 8*d*n1 - 38*n2 + 16*d*n2 - 4*n1*n2 - 
      4*n2^2 - 35*n3 + 12*d*n3 - 6*n1*n3 - 8*n2*n3 - n3^2 - 16*n9 + 8*d*n9 - 
      4*n2*n9 - 6*n3*n9)*j[p4a, -1 + n1, n2, n3, 0, 2, 0, 1, 1, 1 + n9, 1, 0, 
      0, -1, 1])/(-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 
     28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 
     46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
     154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
     52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 
     6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 
     28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 
     20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 
     4*n3*n9^2) + ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, -1 + n1, n2, n3, 0, 2, 1, 0, 1, 1 + n9, 1, 0, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   (n3*(-62 + 51*d - 10*d^2 - 12*n1 + 6*d*n1 - 34*n2 + 14*d*n2 - 4*n1*n2 - 
      4*n2^2 - 22*n3 + 7*d*n3 - 4*n1*n3 - 6*n2*n3 - 12*n9 + 6*d*n9 - 
      4*n2*n9 - 4*n3*n9)*j[p4a, -1 + n1, n2, 1 + n3, 0, 1, 1, 0, 1, 1 + n9, 
      1, 0, 0, -1, 1])/(186 - 259*d + 119*d^2 - 18*d^3 + 142*n1 - 127*d*n1 + 
     28*d^2*n1 + 20*n1^2 - 10*d*n1^2 + 58*n2 - 68*d*n2 + 18*d^2*n2 + 
     46*n1*n2 - 22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 4*d*n2^2 + 4*n1*n2^2 + 
     154*n3 - 134*d*n3 + 29*d^2*n3 + 76*n1*n3 - 31*d*n1*n3 + 8*n1^2*n3 + 
     52*n2*n3 - 24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 30*n3^2 - 13*d*n3^2 + 
     6*n1*n3^2 + 6*n2*n3^2 + 2*n3^3 + 76*n9 - 70*d*n9 + 16*d^2*n9 + 
     28*n1*n9 - 14*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 4*n1*n2*n9 + 48*n3*n9 - 
     20*d*n3*n9 + 12*n1*n3*n9 + 8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 4*d*n9^2 + 
     4*n3*n9^2) - (2*n3*(84 - 70*d + 14*d^2 + 16*n1 - 8*d*n1 + 38*n2 - 
      16*d*n2 + 4*n1*n2 + 4*n2^2 + 35*n3 - 12*d*n3 + 6*n1*n3 + 8*n2*n3 + 
      n3^2 + 16*n9 - 8*d*n9 + 4*n2*n9 + 6*n3*n9)*j[p4a, -1 + n1, n2, 1 + n3, 
      0, 1, 1, 1, 0, 1 + n9, 1, 0, 0, -1, 1])/(186 - 259*d + 119*d^2 - 
     18*d^3 + 142*n1 - 127*d*n1 + 28*d^2*n1 + 20*n1^2 - 10*d*n1^2 + 58*n2 - 
     68*d*n2 + 18*d^2*n2 + 46*n1*n2 - 22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 
     4*d*n2^2 + 4*n1*n2^2 + 154*n3 - 134*d*n3 + 29*d^2*n3 + 76*n1*n3 - 
     31*d*n1*n3 + 8*n1^2*n3 + 52*n2*n3 - 24*d*n2*n3 + 14*n1*n2*n3 + 
     4*n2^2*n3 + 30*n3^2 - 13*d*n3^2 + 6*n1*n3^2 + 6*n2*n3^2 + 2*n3^3 + 
     76*n9 - 70*d*n9 + 16*d^2*n9 + 28*n1*n9 - 14*d*n1*n9 + 12*n2*n9 - 
     8*d*n2*n9 + 4*n1*n2*n9 + 48*n3*n9 - 20*d*n3*n9 + 12*n1*n3*n9 + 
     8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 4*d*n9^2 + 4*n3*n9^2) + 
   (n3*(86 - 73*d + 15*d^2 + 16*n1 - 8*d*n1 + 38*n2 - 16*d*n2 + 4*n1*n2 + 
      4*n2^2 + 38*n3 - 14*d*n3 + 6*n1*n3 + 8*n2*n3 + 2*n3^2 + 16*n9 - 
      8*d*n9 + 4*n2*n9 + 6*n3*n9)*j[p4a, -1 + n1, n2, 1 + n3, 0, 1, 1, 1, 1, 
      1 + n9, 1, 0, -1, -1, 1])/(186 - 259*d + 119*d^2 - 18*d^3 + 142*n1 - 
     127*d*n1 + 28*d^2*n1 + 20*n1^2 - 10*d*n1^2 + 58*n2 - 68*d*n2 + 
     18*d^2*n2 + 46*n1*n2 - 22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 4*d*n2^2 + 
     4*n1*n2^2 + 154*n3 - 134*d*n3 + 29*d^2*n3 + 76*n1*n3 - 31*d*n1*n3 + 
     8*n1^2*n3 + 52*n2*n3 - 24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 30*n3^2 - 
     13*d*n3^2 + 6*n1*n3^2 + 6*n2*n3^2 + 2*n3^3 + 76*n9 - 70*d*n9 + 
     16*d^2*n9 + 28*n1*n9 - 14*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 4*n1*n2*n9 + 
     48*n3*n9 - 20*d*n3*n9 + 12*n1*n3*n9 + 8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 
     4*d*n9^2 + 4*n3*n9^2) - (n3*(106 - 89*d + 18*d^2 + 20*n1 - 10*d*n1 + 
      42*n2 - 18*d*n2 + 4*n1*n2 + 4*n2^2 + 48*n3 - 17*d*n3 + 8*n1*n3 + 
      10*n2*n3 + 2*n3^2 + 20*n9 - 10*d*n9 + 4*n2*n9 + 8*n3*n9)*
     j[p4a, -1 + n1, n2, 1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, 0, -2, 1])/
    (186 - 259*d + 119*d^2 - 18*d^3 + 142*n1 - 127*d*n1 + 28*d^2*n1 + 
     20*n1^2 - 10*d*n1^2 + 58*n2 - 68*d*n2 + 18*d^2*n2 + 46*n1*n2 - 
     22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 4*d*n2^2 + 4*n1*n2^2 + 154*n3 - 
     134*d*n3 + 29*d^2*n3 + 76*n1*n3 - 31*d*n1*n3 + 8*n1^2*n3 + 52*n2*n3 - 
     24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 30*n3^2 - 13*d*n3^2 + 6*n1*n3^2 + 
     6*n2*n3^2 + 2*n3^3 + 76*n9 - 70*d*n9 + 16*d^2*n9 + 28*n1*n9 - 
     14*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 4*n1*n2*n9 + 48*n3*n9 - 20*d*n3*n9 + 
     12*n1*n3*n9 + 8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 4*d*n9^2 + 4*n3*n9^2) - 
   (n3*(84 - 70*d + 14*d^2 + 16*n1 - 8*d*n1 + 38*n2 - 16*d*n2 + 4*n1*n2 + 
      4*n2^2 + 35*n3 - 12*d*n3 + 6*n1*n3 + 8*n2*n3 + n3^2 + 16*n9 - 8*d*n9 + 
      4*n2*n9 + 6*n3*n9)*j[p4a, -1 + n1, n2, 1 + n3, 0, 1, 1, 1, 1, 1 + n9, 
      1, 0, 0, -1, 0])/(186 - 259*d + 119*d^2 - 18*d^3 + 142*n1 - 127*d*n1 + 
     28*d^2*n1 + 20*n1^2 - 10*d*n1^2 + 58*n2 - 68*d*n2 + 18*d^2*n2 + 
     46*n1*n2 - 22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 4*d*n2^2 + 4*n1*n2^2 + 
     154*n3 - 134*d*n3 + 29*d^2*n3 + 76*n1*n3 - 31*d*n1*n3 + 8*n1^2*n3 + 
     52*n2*n3 - 24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 30*n3^2 - 13*d*n3^2 + 
     6*n1*n3^2 + 6*n2*n3^2 + 2*n3^3 + 76*n9 - 70*d*n9 + 16*d^2*n9 + 
     28*n1*n9 - 14*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 4*n1*n2*n9 + 48*n3*n9 - 
     20*d*n3*n9 + 12*n1*n3*n9 + 8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 4*d*n9^2 + 
     4*n3*n9^2) - (n2*(84 - 70*d + 14*d^2 + 16*n1 - 8*d*n1 + 38*n2 - 
      16*d*n2 + 4*n1*n2 + 4*n2^2 + 35*n3 - 12*d*n3 + 6*n1*n3 + 8*n2*n3 + 
      n3^2 + 16*n9 - 8*d*n9 + 4*n2*n9 + 6*n3*n9)*j[p4a, -1 + n1, 1 + n2, n3, 
      0, 0, 1, 1, 1, 1 + n9, 1, 0, 0, -1, 1])/(-186 + 259*d - 119*d^2 + 
     18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 
     68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 
     4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 
     31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 
     4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 
     76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 
     8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 12*n1*n3*n9 - 
     8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   (n2*(84 - 70*d + 14*d^2 + 16*n1 - 8*d*n1 + 38*n2 - 16*d*n2 + 4*n1*n2 + 
      4*n2^2 + 35*n3 - 12*d*n3 + 6*n1*n3 + 8*n2*n3 + n3^2 + 16*n9 - 8*d*n9 + 
      4*n2*n9 + 6*n3*n9)*j[p4a, -1 + n1, 1 + n2, n3, 0, 1, 0, 1, 1, 1 + n9, 
      1, 0, 0, -1, 1])/(-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 
     28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 
     46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
     154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
     52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 
     6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 
     28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 
     20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 
     4*n3*n9^2) - (n2*(-2 + d - n3)*(11 - 4*d + 2*n1 + 2*n2 + n3 + 2*n9)*
     j[p4a, -1 + n1, 1 + n2, n3, 0, 1, 1, 0, 1, 1 + n9, 1, 0, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   (n2*(-2 + d - n3)*(11 - 4*d + 2*n1 + 2*n2 + n3 + 2*n9)*
     j[p4a, -1 + n1, 1 + n2, n3, 0, 1, 1, 1, 0, 1 + n9, 1, 0, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-12 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n9)*
     j[p4a, n1, -2 + n2, n3, 0, 1, 1, 1, 2, 1 + n9, 1, 0, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((62 - 51*d + 10*d^2 + 12*n1 - 6*d*n1 + 34*n2 - 14*d*n2 + 4*n1*n2 + 
      4*n2^2 + 22*n3 - 7*d*n3 + 4*n1*n3 + 6*n2*n3 + 12*n9 - 6*d*n9 + 
      4*n2*n9 + 4*n3*n9)*j[p4a, n1, -2 + n2, n3, 0, 1, 1, 2, 1, 1 + n9, 1, 0, 
      0, -1, 1])/(-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 
     28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 
     46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
     154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
     52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 
     6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 
     28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 
     20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 
     4*n3*n9^2) + (n3*(-62 + 51*d - 10*d^2 - 12*n1 + 6*d*n1 - 34*n2 + 
      14*d*n2 - 4*n1*n2 - 4*n2^2 - 22*n3 + 7*d*n3 - 4*n1*n3 - 6*n2*n3 - 
      12*n9 + 6*d*n9 - 4*n2*n9 - 4*n3*n9)*j[p4a, n1, -2 + n2, 1 + n3, 0, 1, 
      1, 1, 1, 1 + n9, 1, 0, 0, -1, 1])/(186 - 259*d + 119*d^2 - 18*d^3 + 
     142*n1 - 127*d*n1 + 28*d^2*n1 + 20*n1^2 - 10*d*n1^2 + 58*n2 - 68*d*n2 + 
     18*d^2*n2 + 46*n1*n2 - 22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 4*d*n2^2 + 
     4*n1*n2^2 + 154*n3 - 134*d*n3 + 29*d^2*n3 + 76*n1*n3 - 31*d*n1*n3 + 
     8*n1^2*n3 + 52*n2*n3 - 24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 30*n3^2 - 
     13*d*n3^2 + 6*n1*n3^2 + 6*n2*n3^2 + 2*n3^3 + 76*n9 - 70*d*n9 + 
     16*d^2*n9 + 28*n1*n9 - 14*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 4*n1*n2*n9 + 
     48*n3*n9 - 20*d*n3*n9 + 12*n1*n3*n9 + 8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 
     4*d*n9^2 + 4*n3*n9^2) + ((-84 + 70*d - 14*d^2 - 16*n1 + 8*d*n1 - 38*n2 + 
      16*d*n2 - 4*n1*n2 - 4*n2^2 - 35*n3 + 12*d*n3 - 6*n1*n3 - 8*n2*n3 - 
      n3^2 - 16*n9 + 8*d*n9 - 4*n2*n9 - 6*n3*n9)*j[p4a, n1, -1 + n2, n3, 0, 
      0, 1, 2, 1, 1 + n9, 1, 0, 0, -1, 1])/(-186 + 259*d - 119*d^2 + 18*d^3 - 
     142*n1 + 127*d*n1 - 28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 
     18*d^2*n2 - 46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 
     4*n1*n2^2 - 154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 
     8*n1^2*n3 - 52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 
     13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 
     16*d^2*n9 - 28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 
     48*n3*n9 + 20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 
     4*d*n9^2 - 4*n3*n9^2) + ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 
      2*n9)*j[p4a, n1, -1 + n2, n3, 0, 0, 2, 1, 1, 1 + n9, 1, 0, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, -1 + n2, n3, 0, 1, 0, 1, 1, 1 + n9, 2, 0, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-62 + 51*d - 10*d^2 - 12*n1 + 6*d*n1 - 34*n2 + 14*d*n2 - 4*n1*n2 - 
      4*n2^2 - 22*n3 + 7*d*n3 - 4*n1*n3 - 6*n2*n3 - 12*n9 + 6*d*n9 - 
      4*n2*n9 - 4*n3*n9)*j[p4a, n1, -1 + n2, n3, 0, 1, 0, 1, 2, 1 + n9, 1, 0, 
      0, -1, 1])/(-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 
     28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 
     46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
     154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
     52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 
     6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 
     28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 
     20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 
     4*n3*n9^2) - ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, -1 + n2, n3, 0, 1, 1, 0, 1, 1 + n9, 2, 0, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-12 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n9)*
     j[p4a, n1, -1 + n2, n3, 0, 1, 1, 0, 2, 1 + n9, 1, 0, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-248 + 242*d - 69*d^2 + 5*d^3 + 62*n1 - 63*d*n1 + 16*d^2*n1 + 20*n1^2 - 
      10*d*n1^2 - 88*n2 + 42*d*n2 - 2*d^2*n2 + 34*n1*n2 - 18*d*n1*n2 + 
      4*n1^2*n2 - 8*n2^2 + 4*n1*n2^2 - 112*n3 + 56*d*n3 - 5*d^2*n3 + 
      34*n1*n3 - 17*d*n1*n3 + 8*n1^2*n3 + 4*n2*n3 - 8*d*n2*n3 + 14*n1*n2*n3 + 
      4*n2^2*n3 - 16*n3^2 + 5*d*n3^2 + 2*n1*n3^2 + 2*n2*n3^2 - 2*n3^3 - 
      48*n9 + 32*d*n9 - 4*d^2*n9 + 20*n1*n9 - 10*d*n1*n9 - 8*n2*n9 + 
      4*n1*n2*n9 - 20*n3*n9 + 4*d*n3*n9 + 8*n1*n3*n9 + 4*n2*n3*n9 - 
      2*n3^2*n9)*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, 0, -1, 
      1])/(-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*(1 + n9)*
     j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 1, 2 + n9, 1, 0, 0, -1, 0])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 2, 1 + n9, 1, 0, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-62 + 51*d - 10*d^2 - 12*n1 + 6*d*n1 - 34*n2 + 14*d*n2 - 4*n1*n2 - 
      4*n2^2 - 22*n3 + 7*d*n3 - 4*n1*n3 - 6*n2*n3 - 12*n9 + 6*d*n9 - 
      4*n2*n9 - 4*n3*n9)*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 2, 0, 1 + n9, 1, 0, 
      0, -1, 1])/(-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 
     28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 
     46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
     154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
     52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 
     6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 
     28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 
     20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 
     4*n3*n9^2) - ((-2 + d - n3)*(-1 + d - n3)*j[p4a, n1, -1 + n2, n3, 0, 1, 
      1, 2, 1, 1 + n9, 0, 0, 0, -1, 1])/(-186 + 259*d - 119*d^2 + 18*d^3 - 
     142*n1 + 127*d*n1 - 28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 
     18*d^2*n2 - 46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 
     4*n1*n2^2 - 154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 
     8*n1^2*n3 - 52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 
     13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 
     16*d^2*n9 - 28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 
     48*n3*n9 + 20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 
     4*d*n9^2 - 4*n3*n9^2) - ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 
      2*n9)*j[p4a, n1, -1 + n2, n3, 0, 1, 2, 0, 1, 1 + n9, 1, 0, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-1 + d - n3)*j[p4a, n1, -1 + n2, n3, 0, 1, 2, 1, 1, 
      1 + n9, 0, 0, 0, -1, 1])/(-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 
     127*d*n1 - 28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 
     18*d^2*n2 - 46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 
     4*n1*n2^2 - 154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 
     8*n1^2*n3 - 52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 
     13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 
     16*d^2*n9 - 28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 
     48*n3*n9 + 20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 
     4*d*n9^2 - 4*n3*n9^2) - ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 
      2*n9)*j[p4a, n1, -1 + n2, n3, 0, 1, 2, 1, 1, 1 + n9, 1, 0, 0, -1, 0])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-10 + 3*d - 2*n1 - 2*n2 - 2*n9)*j[p4a, n1, -1 + n2, n3, 0, 
      1, 2, 1, 1, 1 + n9, 1, 0, 0, -1, 1])/(-186 + 259*d - 119*d^2 + 18*d^3 - 
     142*n1 + 127*d*n1 - 28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 
     18*d^2*n2 - 46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 
     4*n1*n2^2 - 154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 
     8*n1^2*n3 - 52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 
     13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 
     16*d^2*n9 - 28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 
     48*n3*n9 + 20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 
     4*d*n9^2 - 4*n3*n9^2) - ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 
      2*n9)*j[p4a, n1, -1 + n2, n3, 0, 2, 1, 1, 1, 1 + n9, 1, 0, 0, -1, 0])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-10 + 3*d - 2*n1 - 2*n2 - 2*n9)*j[p4a, n1, -1 + n2, n3, 0, 
      2, 1, 1, 1, 1 + n9, 1, 0, 0, -1, 1])/(-186 + 259*d - 119*d^2 + 18*d^3 - 
     142*n1 + 127*d*n1 - 28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 
     18*d^2*n2 - 46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 
     4*n1*n2^2 - 154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 
     8*n1^2*n3 - 52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 
     13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 
     16*d^2*n9 - 28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 
     48*n3*n9 + 20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 
     4*d*n9^2 - 4*n3*n9^2) + (n3*(84 - 70*d + 14*d^2 + 16*n1 - 8*d*n1 + 
      38*n2 - 16*d*n2 + 4*n1*n2 + 4*n2^2 + 35*n3 - 12*d*n3 + 6*n1*n3 + 
      8*n2*n3 + n3^2 + 16*n9 - 8*d*n9 + 4*n2*n9 + 6*n3*n9)*
     j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 0, 1, 1 + n9, 1, 0, 0, -1, 1])/
    (186 - 259*d + 119*d^2 - 18*d^3 + 142*n1 - 127*d*n1 + 28*d^2*n1 + 
     20*n1^2 - 10*d*n1^2 + 58*n2 - 68*d*n2 + 18*d^2*n2 + 46*n1*n2 - 
     22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 4*d*n2^2 + 4*n1*n2^2 + 154*n3 - 
     134*d*n3 + 29*d^2*n3 + 76*n1*n3 - 31*d*n1*n3 + 8*n1^2*n3 + 52*n2*n3 - 
     24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 30*n3^2 - 13*d*n3^2 + 6*n1*n3^2 + 
     6*n2*n3^2 + 2*n3^3 + 76*n9 - 70*d*n9 + 16*d^2*n9 + 28*n1*n9 - 
     14*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 4*n1*n2*n9 + 48*n3*n9 - 20*d*n3*n9 + 
     12*n1*n3*n9 + 8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 4*d*n9^2 + 4*n3*n9^2) - 
   (n3*(-122 + 99*d - 19*d^2 - 24*n1 + 12*d*n1 - 68*n2 + 28*d*n2 - 8*n1*n2 - 
      8*n2^2 - 41*n3 + 12*d*n3 - 8*n1*n3 - 12*n2*n3 + n3^2 - 24*n9 + 
      12*d*n9 - 8*n2*n9 - 8*n3*n9)*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 0, 
      1 + n9, 1, 0, 0, -1, 1])/(186 - 259*d + 119*d^2 - 18*d^3 + 142*n1 - 
     127*d*n1 + 28*d^2*n1 + 20*n1^2 - 10*d*n1^2 + 58*n2 - 68*d*n2 + 
     18*d^2*n2 + 46*n1*n2 - 22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 4*d*n2^2 + 
     4*n1*n2^2 + 154*n3 - 134*d*n3 + 29*d^2*n3 + 76*n1*n3 - 31*d*n1*n3 + 
     8*n1^2*n3 + 52*n2*n3 - 24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 30*n3^2 - 
     13*d*n3^2 + 6*n1*n3^2 + 6*n2*n3^2 + 2*n3^3 + 76*n9 - 70*d*n9 + 
     16*d^2*n9 + 28*n1*n9 - 14*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 4*n1*n2*n9 + 
     48*n3*n9 - 20*d*n3*n9 + 12*n1*n3*n9 + 8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 
     4*d*n9^2 + 4*n3*n9^2) - ((-2 + d - n3)*(-1 + d - n3)*n3*
     j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, 1 + n9, 0, 0, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   (n3*(-62 + 51*d - 10*d^2 - 12*n1 + 6*d*n1 - 34*n2 + 14*d*n2 - 4*n1*n2 - 
      4*n2^2 - 22*n3 + 7*d*n3 - 4*n1*n3 - 6*n2*n3 - 12*n9 + 6*d*n9 - 
      4*n2*n9 - 4*n3*n9)*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, 1 + n9, 
      1, 0, -1, -1, 1])/(186 - 259*d + 119*d^2 - 18*d^3 + 142*n1 - 127*d*n1 + 
     28*d^2*n1 + 20*n1^2 - 10*d*n1^2 + 58*n2 - 68*d*n2 + 18*d^2*n2 + 
     46*n1*n2 - 22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 4*d*n2^2 + 4*n1*n2^2 + 
     154*n3 - 134*d*n3 + 29*d^2*n3 + 76*n1*n3 - 31*d*n1*n3 + 8*n1^2*n3 + 
     52*n2*n3 - 24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 30*n3^2 - 13*d*n3^2 + 
     6*n1*n3^2 + 6*n2*n3^2 + 2*n3^3 + 76*n9 - 70*d*n9 + 16*d^2*n9 + 
     28*n1*n9 - 14*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 4*n1*n2*n9 + 48*n3*n9 - 
     20*d*n3*n9 + 12*n1*n3*n9 + 8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 4*d*n9^2 + 
     4*n3*n9^2) - (n3*(-38 + 29*d - 5*d^2 - 8*n1 + 4*d*n1 - 30*n2 + 12*d*n2 - 
      4*n1*n2 - 4*n2^2 - 6*n3 - 2*n1*n3 - 4*n2*n3 + 2*n3^2 - 8*n9 + 4*d*n9 - 
      4*n2*n9 - 2*n3*n9)*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, 1 + n9, 
      1, 0, 0, -2, 1])/(186 - 259*d + 119*d^2 - 18*d^3 + 142*n1 - 127*d*n1 + 
     28*d^2*n1 + 20*n1^2 - 10*d*n1^2 + 58*n2 - 68*d*n2 + 18*d^2*n2 + 
     46*n1*n2 - 22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 4*d*n2^2 + 4*n1*n2^2 + 
     154*n3 - 134*d*n3 + 29*d^2*n3 + 76*n1*n3 - 31*d*n1*n3 + 8*n1^2*n3 + 
     52*n2*n3 - 24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 30*n3^2 - 13*d*n3^2 + 
     6*n1*n3^2 + 6*n2*n3^2 + 2*n3^3 + 76*n9 - 70*d*n9 + 16*d^2*n9 + 
     28*n1*n9 - 14*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 4*n1*n2*n9 + 48*n3*n9 - 
     20*d*n3*n9 + 12*n1*n3*n9 + 8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 4*d*n9^2 + 
     4*n3*n9^2) + (n3*(84 - 70*d + 14*d^2 + 16*n1 - 8*d*n1 + 38*n2 - 
      16*d*n2 + 4*n1*n2 + 4*n2^2 + 35*n3 - 12*d*n3 + 6*n1*n3 + 8*n2*n3 + 
      n3^2 + 16*n9 - 8*d*n9 + 4*n2*n9 + 6*n3*n9)*j[p4a, n1, -1 + n2, 1 + n3, 
      0, 1, 1, 1, 1, 1 + n9, 1, 0, 0, -1, 0])/(186 - 259*d + 119*d^2 - 
     18*d^3 + 142*n1 - 127*d*n1 + 28*d^2*n1 + 20*n1^2 - 10*d*n1^2 + 58*n2 - 
     68*d*n2 + 18*d^2*n2 + 46*n1*n2 - 22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 
     4*d*n2^2 + 4*n1*n2^2 + 154*n3 - 134*d*n3 + 29*d^2*n3 + 76*n1*n3 - 
     31*d*n1*n3 + 8*n1^2*n3 + 52*n2*n3 - 24*d*n2*n3 + 14*n1*n2*n3 + 
     4*n2^2*n3 + 30*n3^2 - 13*d*n3^2 + 6*n1*n3^2 + 6*n2*n3^2 + 2*n3^3 + 
     76*n9 - 70*d*n9 + 16*d^2*n9 + 28*n1*n9 - 14*d*n1*n9 + 12*n2*n9 - 
     8*d*n2*n9 + 4*n1*n2*n9 + 48*n3*n9 - 20*d*n3*n9 + 12*n1*n3*n9 + 
     8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 4*d*n9^2 + 4*n3*n9^2) - 
   (n3*(2 - d + n3)*(-10 + 3*d - 2*n1 - 2*n2 - 2*n9)*
     j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, 0, -1, 1])/
    (186 - 259*d + 119*d^2 - 18*d^3 + 142*n1 - 127*d*n1 + 28*d^2*n1 + 
     20*n1^2 - 10*d*n1^2 + 58*n2 - 68*d*n2 + 18*d^2*n2 + 46*n1*n2 - 
     22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 4*d*n2^2 + 4*n1*n2^2 + 154*n3 - 
     134*d*n3 + 29*d^2*n3 + 76*n1*n3 - 31*d*n1*n3 + 8*n1^2*n3 + 52*n2*n3 - 
     24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 30*n3^2 - 13*d*n3^2 + 6*n1*n3^2 + 
     6*n2*n3^2 + 2*n3^3 + 76*n9 - 70*d*n9 + 16*d^2*n9 + 28*n1*n9 - 
     14*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 4*n1*n2*n9 + 48*n3*n9 - 20*d*n3*n9 + 
     12*n1*n3*n9 + 8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 4*d*n9^2 + 4*n3*n9^2) - 
   ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, -1 + n3, 0, 0, 1, 2, 1, 1 + n9, 1, 0, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, -1 + n3, 0, 0, 2, 1, 1, 1 + n9, 1, 0, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, -1 + n3, 0, 1, 0, 1, 1, 1 + n9, 2, 0, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, -1 + n3, 0, 1, 1, 0, 1, 1 + n9, 2, 0, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-10 + 3*d - 2*n1 - 2*n2 - 2*n9)*(-11 + 4*d - 2*n1 - 2*n2 - 
      n3 - 2*n9)*j[p4a, n1, n2, -1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, 0, -1, 
      1])/(-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-10 + 3*d - 2*n1 - 2*n2 - 2*n9)*j[p4a, n1, n2, -1 + n3, 0, 
      1, 1, 1, 1, 1 + n9, 1, 0, 0, 0, 1])/(-186 + 259*d - 119*d^2 + 18*d^3 - 
     142*n1 + 127*d*n1 - 28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 
     18*d^2*n2 - 46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 
     4*n1*n2^2 - 154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 
     8*n1^2*n3 - 52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 
     13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 
     16*d^2*n9 - 28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 
     48*n3*n9 + 20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 
     4*d*n9^2 - 4*n3*n9^2) - ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 
      2*n9)*j[p4a, n1, n2, -1 + n3, 0, 1, 1, 2, 0, 1 + n9, 1, 0, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, -1 + n3, 0, 1, 2, 1, 0, 1 + n9, 1, 0, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((62 - 51*d + 10*d^2 + 12*n1 - 6*d*n1 + 34*n2 - 14*d*n2 + 4*n1*n2 + 
      4*n2^2 + 22*n3 - 7*d*n3 + 4*n1*n3 + 6*n2*n3 + 12*n9 - 6*d*n9 + 
      4*n2*n9 + 4*n3*n9)*j[p4a, n1, n2, n3, -1, 1, 1, 0, 2, 1 + n9, 1, 0, 0, 
      -1, 1])/(-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 
     28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 
     46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
     154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
     52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 
     6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 
     28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 
     20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 
     4*n3*n9^2) - ((-2 + d - n3)*(-26 + 3*d + 2*d^2 - 4*n1 - 2*d*n1 + 18*n2 - 
      10*d*n2 + 4*n1*n2 + 4*n2^2 + 14*n3 - 5*d*n3 + 4*n1*n3 + 6*n2*n3 - 
      26*n9 + 6*d*n9 - 4*n1*n9 + 2*n3*n9 - 4*n9^2)*j[p4a, n1, n2, n3, -1, 1, 
      1, 1, 1, 1 + n9, 1, 0, 0, -1, 1])/(-186 + 259*d - 119*d^2 + 18*d^3 - 
     142*n1 + 127*d*n1 - 28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 
     18*d^2*n2 - 46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 
     4*n1*n2^2 - 154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 
     8*n1^2*n3 - 52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 
     13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 
     16*d^2*n9 - 28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 
     48*n3*n9 + 20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 
     4*d*n9^2 - 4*n3*n9^2) - ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 
      2*n9)*(1 + n9)*j[p4a, n1, n2, n3, -1, 1, 1, 1, 1, 2 + n9, 1, 0, 0, -1, 
      0])/(-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((84 - 70*d + 14*d^2 + 16*n1 - 8*d*n1 + 38*n2 - 16*d*n2 + 4*n1*n2 + 
      4*n2^2 + 35*n3 - 12*d*n3 + 6*n1*n3 + 8*n2*n3 + n3^2 + 16*n9 - 8*d*n9 + 
      4*n2*n9 + 6*n3*n9)*j[p4a, n1, n2, n3, -1, 1, 1, 2, 0, 1 + n9, 1, 0, 0, 
      -1, 1])/(-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 
     28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 
     46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
     154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
     52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 
     6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 
     28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 
     20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 
     4*n3*n9^2) + ((84 - 70*d + 14*d^2 + 16*n1 - 8*d*n1 + 38*n2 - 16*d*n2 + 
      4*n1*n2 + 4*n2^2 + 35*n3 - 12*d*n3 + 6*n1*n3 + 8*n2*n3 + n3^2 + 16*n9 - 
      8*d*n9 + 4*n2*n9 + 6*n3*n9)*j[p4a, n1, n2, n3, -1, 1, 1, 2, 1, 1 + n9, 
      0, 0, 0, -1, 1])/(-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 
     28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 
     46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
     154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
     52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 
     6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 
     28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 
     20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 
     4*n3*n9^2) - ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, -1, 1, 2, 0, 1, 1 + n9, 1, 0, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, -1, 1, 2, 1, 0, 1 + n9, 1, 0, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, -1, 1, 2, 1, 1, 1 + n9, 0, 0, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, -1, 1, 2, 1, 1, 1 + n9, 1, 0, 0, -1, 0])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, -1, 2, 1, 1, 1, 1 + n9, 1, 0, 0, -1, 0])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-1 + d - n3)*j[p4a, n1, n2, n3, 0, 0, 1, 1, 1, n9, 1, 0, 
      0, -1, 2])/(-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 
     28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 
     46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
     154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
     52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 
     6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 
     28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 
     20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 
     4*n3*n9^2) + ((124 - 102*d + 20*d^2 - 60*n1 + 58*d*n1 - 14*d^2*n1 - 
      16*n1^2 + 8*d*n1^2 + 46*n2 - 9*d*n2 - 4*d^2*n2 - 34*n1*n2 + 
      18*d*n1*n2 - 4*n1^2*n2 + 4*n2^2 + 2*d*n2^2 - 4*n1*n2^2 + 44*n3 - 
      14*d*n3 - 27*n1*n3 + 12*d*n1*n3 - 6*n1^2*n3 - n2*n3 + 5*d*n2*n3 - 
      10*n1*n2*n3 - 2*n2^2*n3 - n1*n3^2 - n2*n3^2 + 22*n9 - 9*d*n9 - d^2*n9 - 
      16*n1*n9 + 8*d*n1*n9 + 4*n2*n9 + 2*d*n2*n9 - 4*n1*n2*n9 + 5*n3*n9 + 
      2*d*n3*n9 - 6*n1*n3*n9 - 2*n2*n3*n9 - n3^2*n9)*
     j[p4a, n1, n2, n3, 0, 0, 1, 1, 1, 1 + n9, 1, 0, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-1 + d - n3)*j[p4a, n1, n2, n3, 0, 0, 1, 1, 1, 1 + n9, 1, 
      0, 0, -1, 2])/(-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 
     28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 
     46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
     154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
     52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 
     6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 
     28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 
     20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 
     4*n3*n9^2) + ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 0, 1, 1, 1, 1 + n9, 1, 0, 0, 0, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-1 + d - n3)*(1 + n9)*j[p4a, n1, n2, n3, 0, 0, 1, 1, 1, 
      2 + n9, 1, 0, 0, -1, 1])/(-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 
     127*d*n1 - 28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 
     18*d^2*n2 - 46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 
     4*n1*n2^2 - 154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 
     8*n1^2*n3 - 52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 
     13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 
     16*d^2*n9 - 28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 
     48*n3*n9 + 20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 
     4*d*n9^2 - 4*n3*n9^2) + ((-84 + 70*d - 14*d^2 - 16*n1 + 8*d*n1 - 38*n2 + 
      16*d*n2 - 4*n1*n2 - 4*n2^2 - 35*n3 + 12*d*n3 - 6*n1*n3 - 8*n2*n3 - 
      n3^2 - 16*n9 + 8*d*n9 - 4*n2*n9 - 6*n3*n9)*j[p4a, n1, n2, n3, 0, 0, 1, 
      2, 1, 1 + n9, 1, -1, 0, -1, 1])/(-186 + 259*d - 119*d^2 + 18*d^3 - 
     142*n1 + 127*d*n1 - 28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 
     18*d^2*n2 - 46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 
     4*n1*n2^2 - 154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 
     8*n1^2*n3 - 52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 
     13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 
     16*d^2*n9 - 28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 
     48*n3*n9 + 20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 
     4*d*n9^2 - 4*n3*n9^2) + ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 
      2*n9)*j[p4a, n1, n2, n3, 0, 0, 1, 2, 1, 1 + n9, 1, 0, 0, -2, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-1 + d - n3)*j[p4a, n1, n2, n3, 0, 0, 2, 1, 1, n9, 1, 0, 
      0, -1, 1])/(-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 
     28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 
     46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
     154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
     52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 
     6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 
     28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 
     20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 
     4*n3*n9^2) + ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 0, 2, 1, 1, 1 + n9, 1, 0, -1, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 0, 2, 1, 1, 1 + n9, 1, 0, 0, -2, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-10 + 3*d - 2*n1 - 2*n2 - 2*n9)*j[p4a, n1, n2, n3, 0, 0, 
      2, 1, 1, 1 + n9, 1, 0, 0, -1, 1])/(-186 + 259*d - 119*d^2 + 18*d^3 - 
     142*n1 + 127*d*n1 - 28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 
     18*d^2*n2 - 46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 
     4*n1*n2^2 - 154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 
     8*n1^2*n3 - 52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 
     13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 
     16*d^2*n9 - 28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 
     48*n3*n9 + 20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 
     4*d*n9^2 - 4*n3*n9^2) - ((-2 + d - n3)*(-1 + d - n3)*
     j[p4a, n1, n2, n3, 0, 1, 0, 1, 1, n9, 1, 0, 0, -1, 2])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((40 - 32*d + 6*d^2 + 8*n1 - 4*d*n1 + 52*n2 - 31*d*n2 + 4*d^2*n2 + 
      8*n1*n2 - 2*d*n1*n2 + 8*n2^2 - 2*d*n2^2 + 9*n3 - 2*d*n3 + 2*n1*n3 + 
      17*n2*n3 - 5*d*n2*n3 + 2*n1*n2*n3 + 2*n2^2*n3 - n3^2 + n2*n3^2 + 6*n9 - 
      d*n9 - d^2*n9 + 8*n2*n9 - 2*d*n2*n9 - n3*n9 + 2*d*n3*n9 + 2*n2*n3*n9 - 
      n3^2*n9)*j[p4a, n1, n2, n3, 0, 1, 0, 1, 1, 1 + n9, 1, 0, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-1 + d - n3)*j[p4a, n1, n2, n3, 0, 1, 0, 1, 1, 1 + n9, 1, 
      0, 0, -1, 2])/(-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 
     28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 
     46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
     154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
     52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 
     6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 
     28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 
     20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 
     4*n3*n9^2) + ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 1, 0, 1, 1, 1 + n9, 2, 0, -1, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 1, 0, 1, 1, 1 + n9, 2, 0, 0, -2, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 1, 0, 1, 1, 1 + n9, 2, 0, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-1 + d - n3)*(1 + n9)*j[p4a, n1, n2, n3, 0, 1, 0, 1, 1, 
      2 + n9, 1, 0, 0, -1, 1])/(-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 
     127*d*n1 - 28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 
     18*d^2*n2 - 46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 
     4*n1*n2^2 - 154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 
     8*n1^2*n3 - 52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 
     13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 
     16*d^2*n9 - 28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 
     48*n3*n9 + 20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 
     4*d*n9^2 - 4*n3*n9^2) + ((-84 + 70*d - 14*d^2 - 16*n1 + 8*d*n1 - 38*n2 + 
      16*d*n2 - 4*n1*n2 - 4*n2^2 - 35*n3 + 12*d*n3 - 6*n1*n3 - 8*n2*n3 - 
      n3^2 - 16*n9 + 8*d*n9 - 4*n2*n9 - 6*n3*n9)*j[p4a, n1, n2, n3, 0, 1, 0, 
      1, 2, 1 + n9, 1, -1, 0, -1, 1])/(-186 + 259*d - 119*d^2 + 18*d^3 - 
     142*n1 + 127*d*n1 - 28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 
     18*d^2*n2 - 46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 
     4*n1*n2^2 - 154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 
     8*n1^2*n3 - 52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 
     13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 
     16*d^2*n9 - 28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 
     48*n3*n9 + 20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 
     4*d*n9^2 - 4*n3*n9^2) + ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 
      2*n9)*j[p4a, n1, n2, n3, 0, 1, 0, 1, 2, 1 + n9, 1, 0, -1, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 1, 0, 1, 2, 1 + n9, 1, 0, 0, -2, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-1 + d - n3)*j[p4a, n1, n2, n3, 0, 1, 1, 0, 1, n9, 1, 0, 
      0, -1, 2])/(-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 
     28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 
     46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
     154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
     52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 
     6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 
     28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 
     20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 
     4*n3*n9^2) - ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 1, 1, 0, 1, n9, 2, 0, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-84 + 70*d - 14*d^2 - 16*n1 + 8*d*n1 - 60*n2 + 35*d*n2 - 4*d^2*n2 - 
      8*n1*n2 + 2*d*n1*n2 - 8*n2^2 + 2*d*n2^2 - 59*n3 + 34*d*n3 - 5*d^2*n3 - 
      10*n1*n3 + 2*d*n1*n3 - 25*n2*n3 + 7*d*n2*n3 - 2*n1*n2*n3 - 2*n2^2*n3 - 
      17*n3^2 + 7*d*n3^2 - 2*n1*n3^2 - 3*n2*n3^2 - 2*n3^3 - 38*n9 + 27*d*n9 - 
      4*d^2*n9 - 4*n1*n9 + 2*d*n1*n9 - 12*n2*n9 + 4*d*n2*n9 - 23*n3*n9 + 
      7*d*n3*n9 - 2*n1*n3*n9 - 4*n2*n3*n9 - 3*n3^2*n9 - 4*n9^2 + 2*d*n9^2 - 
      2*n3*n9^2)*j[p4a, n1, n2, n3, 0, 1, 1, 0, 1, 1 + n9, 1, 0, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-1 + d - n3)*j[p4a, n1, n2, n3, 0, 1, 1, 0, 1, 1 + n9, 1, 
      0, 0, -1, 2])/(-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 
     28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 
     46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
     154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
     52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 
     6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 
     28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 
     20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 
     4*n3*n9^2) + ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 1, 1, 0, 1, 1 + n9, 2, -1, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 1, 1, 0, 1, 1 + n9, 2, 0, -1, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 1, 1, 0, 1, 1 + n9, 2, 0, 0, -2, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 1, 1, 0, 1, 1 + n9, 2, 0, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*(1 + n9)*
     j[p4a, n1, n2, n3, 0, 1, 1, 0, 1, 2 + n9, 1, 0, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-1 + d - n3)*j[p4a, n1, n2, n3, 0, 1, 1, 0, 2, 1 + n9, 1, 
      -1, 0, -1, 1])/(-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 
     28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 
     46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
     154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
     52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 
     6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 
     28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 
     20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 
     4*n3*n9^2) + ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 1, 1, 0, 2, 1 + n9, 1, 0, -1, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 1, 1, 0, 2, 1 + n9, 1, 0, 0, -2, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 1, 1, 0, 2, 1 + n9, 1, 0, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-1 + d - n3)*j[p4a, n1, n2, n3, 0, 1, 1, 1, 0, n9, 1, 0, 
      0, -1, 2])/(-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 
     28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 
     46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
     154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
     52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 
     6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 
     28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 
     20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 
     4*n3*n9^2) - ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 1, 1, 1, 0, n9, 2, 0, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-62 + 51*d - 10*d^2 - 34*n1 + 25*d*n1 - 4*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 
      12*n2 - 5*d*n2 + 4*d^2*n2 - 4*n1*n2 - 2*d*n2^2 - 46*n3 + 29*d*n3 - 
      5*d^2*n3 - 21*n1*n3 + 7*d*n1*n3 - 2*n1^2*n3 + 3*n2*n3 - 3*d*n2*n3 + 
      2*n2^2*n3 - 16*n3^2 + 7*d*n3^2 - 3*n1*n3^2 - n2*n3^2 - 2*n3^3 - 34*n9 + 
      25*d*n9 - 4*d^2*n9 - 8*n1*n9 + 4*d*n1*n9 - 4*n2*n9 - 21*n3*n9 + 
      7*d*n3*n9 - 4*n1*n3*n9 - 3*n3^2*n9 - 4*n9^2 + 2*d*n9^2 - 2*n3*n9^2)*
     j[p4a, n1, n2, n3, 0, 1, 1, 1, 0, 1 + n9, 1, 0, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-1 + d - n3)*j[p4a, n1, n2, n3, 0, 1, 1, 1, 0, 1 + n9, 1, 
      0, 0, -1, 2])/(-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 
     28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 
     46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
     154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
     52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 
     6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 
     28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 
     20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 
     4*n3*n9^2) - ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 1, 1, 1, 0, 1 + n9, 1, 0, 0, 0, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 1, 1, 1, 0, 1 + n9, 2, -1, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*(1 + n9)*
     j[p4a, n1, n2, n3, 0, 1, 1, 1, 0, 2 + n9, 1, 0, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((66 - 57*d + 12*d^2 - 94*n1 + 83*d*n1 - 18*d^2*n1 - 20*n1^2 + 10*d*n1^2 + 
      34*n2 - 14*d*n2 - 38*n1*n2 + 18*d*n1*n2 - 4*n1^2*n2 + 4*n2^2 - 
      4*n1*n2^2 + 48*n3 - 27*d*n3 + 3*d^2*n3 - 40*n1*n3 + 15*d*n1*n3 - 
      8*n1^2*n3 + 10*n2*n3 - 2*d*n2*n3 - 10*n1*n2*n3 + 12*n3^2 - 3*d*n3^2 + 
      2*n2*n3^2 - 8*n9 + 10*d*n9 - 3*d^2*n9 - 24*n1*n9 + 12*d*n1*n9 + 
      2*d*n2*n9 - 4*n1*n2*n9 - 2*n3*n9 + d*n3*n9 - 10*n1*n3*n9 - 2*n2*n3*n9 + 
      2*n3^2*n9 - 4*n9^2 + 2*d*n9^2 - 2*n3*n9^2)*j[p4a, n1, n2, n3, 0, 1, 1, 
      1, 1, 1 + n9, 0, 0, 0, -1, 1])/(-186 + 259*d - 119*d^2 + 18*d^3 - 
     142*n1 + 127*d*n1 - 28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 
     18*d^2*n2 - 46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 
     4*n1*n2^2 - 154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 
     8*n1^2*n3 - 52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 
     13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 
     16*d^2*n9 - 28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 
     48*n3*n9 + 20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 
     4*d*n9^2 - 4*n3*n9^2) + ((-2 + d - n3)*(-10 + 3*d - 2*n1 - 2*n2 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, -1, 0, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*(-4 + n3 - n9)*
     j[p4a, n1, n2, n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, 0, -1, 0])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(47 - 21*d + 2*d^2 + 10*n1 - 2*d*n1 + 10*n2 - 2*d*n2 - 
      4*n3 + 2*d*n3 - n3^2 + 30*n9 - 8*d*n9 + 4*n1*n9 + 4*n2*n9 + 4*n9^2)*
     j[p4a, n1, n2, n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, 0, 0, 0])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-10 + 3*d - 2*n1 - 2*n2 - 2*n9)*(1 + n9)*
     j[p4a, n1, n2, n3, 0, 1, 1, 1, 1, 2 + n9, 0, 0, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*(1 + n9)*
     j[p4a, n1, n2, n3, 0, 1, 1, 1, 1, 2 + n9, 1, -1, 0, -1, 0])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-1 + d - n3)*j[p4a, n1, n2, n3, 0, 1, 1, 2, 0, 1 + n9, 1, 
      -1, 0, -1, 1])/(-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 
     28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 
     46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
     154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
     52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 
     6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 
     28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 
     20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 
     4*n3*n9^2) + ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 1, 1, 2, 0, 1 + n9, 1, 0, 0, -2, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 1, 2, 1, 0, n9, 1, 0, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 1, 2, 1, 0, 1 + n9, 1, 0, -1, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 1, 2, 1, 0, 1 + n9, 1, 0, 0, -2, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-1 + d - n3)*j[p4a, n1, n2, n3, 0, 2, 0, 1, 1, n9, 1, 0, 
      0, -1, 1])/(-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 
     28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 
     46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
     154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
     52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 
     6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 
     28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 
     20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 
     4*n3*n9^2) + ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 2, 0, 1, 1, 1 + n9, 1, 0, 0, -2, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-10 + 3*d - 2*n1 - 2*n2 - 2*n9)*j[p4a, n1, n2, n3, 0, 2, 
      0, 1, 1, 1 + n9, 1, 0, 0, -1, 1])/(-186 + 259*d - 119*d^2 + 18*d^3 - 
     142*n1 + 127*d*n1 - 28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 
     18*d^2*n2 - 46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 
     4*n1*n2^2 - 154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 
     8*n1^2*n3 - 52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 
     13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 
     16*d^2*n9 - 28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 
     48*n3*n9 + 20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 
     4*d*n9^2 - 4*n3*n9^2) - ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 
      2*n9)*j[p4a, n1, n2, n3, 0, 2, 1, 0, 1, n9, 1, 0, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-11 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 2, 1, 0, 1, 1 + n9, 1, 0, 0, -2, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   (n3*(84 - 70*d + 14*d^2 + 16*n1 - 8*d*n1 + 38*n2 - 16*d*n2 + 4*n1*n2 + 
      4*n2^2 + 35*n3 - 12*d*n3 + 6*n1*n3 + 8*n2*n3 + n3^2 + 16*n9 - 8*d*n9 + 
      4*n2*n9 + 6*n3*n9)*j[p4a, n1, n2, 1 + n3, -1, 1, 1, 0, 1, 1 + n9, 1, 0, 
      0, -1, 1])/(186 - 259*d + 119*d^2 - 18*d^3 + 142*n1 - 127*d*n1 + 
     28*d^2*n1 + 20*n1^2 - 10*d*n1^2 + 58*n2 - 68*d*n2 + 18*d^2*n2 + 
     46*n1*n2 - 22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 4*d*n2^2 + 4*n1*n2^2 + 
     154*n3 - 134*d*n3 + 29*d^2*n3 + 76*n1*n3 - 31*d*n1*n3 + 8*n1^2*n3 + 
     52*n2*n3 - 24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 30*n3^2 - 13*d*n3^2 + 
     6*n1*n3^2 + 6*n2*n3^2 + 2*n3^3 + 76*n9 - 70*d*n9 + 16*d^2*n9 + 
     28*n1*n9 - 14*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 4*n1*n2*n9 + 48*n3*n9 - 
     20*d*n3*n9 + 12*n1*n3*n9 + 8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 4*d*n9^2 + 
     4*n3*n9^2) - (n3*(84 - 70*d + 14*d^2 + 16*n1 - 8*d*n1 + 38*n2 - 
      16*d*n2 + 4*n1*n2 + 4*n2^2 + 35*n3 - 12*d*n3 + 6*n1*n3 + 8*n2*n3 + 
      n3^2 + 16*n9 - 8*d*n9 + 4*n2*n9 + 6*n3*n9)*j[p4a, n1, n2, 1 + n3, -1, 
      1, 1, 1, 0, 1 + n9, 1, 0, 0, -1, 1])/(186 - 259*d + 119*d^2 - 18*d^3 + 
     142*n1 - 127*d*n1 + 28*d^2*n1 + 20*n1^2 - 10*d*n1^2 + 58*n2 - 68*d*n2 + 
     18*d^2*n2 + 46*n1*n2 - 22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 4*d*n2^2 + 
     4*n1*n2^2 + 154*n3 - 134*d*n3 + 29*d^2*n3 + 76*n1*n3 - 31*d*n1*n3 + 
     8*n1^2*n3 + 52*n2*n3 - 24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 30*n3^2 - 
     13*d*n3^2 + 6*n1*n3^2 + 6*n2*n3^2 + 2*n3^3 + 76*n9 - 70*d*n9 + 
     16*d^2*n9 + 28*n1*n9 - 14*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 4*n1*n2*n9 + 
     48*n3*n9 - 20*d*n3*n9 + 12*n1*n3*n9 + 8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 
     4*d*n9^2 + 4*n3*n9^2) - (n3*(84 - 70*d + 14*d^2 + 16*n1 - 8*d*n1 + 
      38*n2 - 16*d*n2 + 4*n1*n2 + 4*n2^2 + 35*n3 - 12*d*n3 + 6*n1*n3 + 
      8*n2*n3 + n3^2 + 16*n9 - 8*d*n9 + 4*n2*n9 + 6*n3*n9)*
     j[p4a, n1, n2, 1 + n3, -1, 1, 1, 1, 1, 1 + n9, 0, 0, 0, -1, 1])/
    (186 - 259*d + 119*d^2 - 18*d^3 + 142*n1 - 127*d*n1 + 28*d^2*n1 + 
     20*n1^2 - 10*d*n1^2 + 58*n2 - 68*d*n2 + 18*d^2*n2 + 46*n1*n2 - 
     22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 4*d*n2^2 + 4*n1*n2^2 + 154*n3 - 
     134*d*n3 + 29*d^2*n3 + 76*n1*n3 - 31*d*n1*n3 + 8*n1^2*n3 + 52*n2*n3 - 
     24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 30*n3^2 - 13*d*n3^2 + 6*n1*n3^2 + 
     6*n2*n3^2 + 2*n3^3 + 76*n9 - 70*d*n9 + 16*d^2*n9 + 28*n1*n9 - 
     14*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 4*n1*n2*n9 + 48*n3*n9 - 20*d*n3*n9 + 
     12*n1*n3*n9 + 8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 4*d*n9^2 + 4*n3*n9^2) + 
   (n3*(106 - 89*d + 18*d^2 + 20*n1 - 10*d*n1 + 42*n2 - 18*d*n2 + 4*n1*n2 + 
      4*n2^2 + 48*n3 - 17*d*n3 + 8*n1*n3 + 10*n2*n3 + 2*n3^2 + 20*n9 - 
      10*d*n9 + 4*n2*n9 + 8*n3*n9)*j[p4a, n1, n2, 1 + n3, -1, 1, 1, 1, 1, 
      1 + n9, 1, 0, 0, -1, 1])/(186 - 259*d + 119*d^2 - 18*d^3 + 142*n1 - 
     127*d*n1 + 28*d^2*n1 + 20*n1^2 - 10*d*n1^2 + 58*n2 - 68*d*n2 + 
     18*d^2*n2 + 46*n1*n2 - 22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 4*d*n2^2 + 
     4*n1*n2^2 + 154*n3 - 134*d*n3 + 29*d^2*n3 + 76*n1*n3 - 31*d*n1*n3 + 
     8*n1^2*n3 + 52*n2*n3 - 24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 30*n3^2 - 
     13*d*n3^2 + 6*n1*n3^2 + 6*n2*n3^2 + 2*n3^3 + 76*n9 - 70*d*n9 + 
     16*d^2*n9 + 28*n1*n9 - 14*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 4*n1*n2*n9 + 
     48*n3*n9 - 20*d*n3*n9 + 12*n1*n3*n9 + 8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 
     4*d*n9^2 + 4*n3*n9^2) + (2*(-2 + d - n3)*(-1 + d - n3)*n3*
     j[p4a, n1, n2, 1 + n3, 0, 1, 1, 0, 1, 1 + n9, 1, -1, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-1 + d - n3)*n3*j[p4a, n1, n2, 1 + n3, 0, 1, 1, 0, 1, 
      1 + n9, 1, 0, -1, -1, 1])/(-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 
     127*d*n1 - 28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 
     18*d^2*n2 - 46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 
     4*n1*n2^2 - 154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 
     8*n1^2*n3 - 52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 
     13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 
     16*d^2*n9 - 28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 
     48*n3*n9 + 20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 
     4*d*n9^2 - 4*n3*n9^2) - (3*n3*(2 - d + n3)*(11 - 4*d + 2*n1 + 2*n2 + 
      n3 + 2*n9)*j[p4a, n1, n2, 1 + n3, 0, 1, 1, 0, 1, 1 + n9, 1, 0, 0, -1, 
      1])/(186 - 259*d + 119*d^2 - 18*d^3 + 142*n1 - 127*d*n1 + 28*d^2*n1 + 
     20*n1^2 - 10*d*n1^2 + 58*n2 - 68*d*n2 + 18*d^2*n2 + 46*n1*n2 - 
     22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 4*d*n2^2 + 4*n1*n2^2 + 154*n3 - 
     134*d*n3 + 29*d^2*n3 + 76*n1*n3 - 31*d*n1*n3 + 8*n1^2*n3 + 52*n2*n3 - 
     24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 30*n3^2 - 13*d*n3^2 + 6*n1*n3^2 + 
     6*n2*n3^2 + 2*n3^3 + 76*n9 - 70*d*n9 + 16*d^2*n9 + 28*n1*n9 - 
     14*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 4*n1*n2*n9 + 48*n3*n9 - 20*d*n3*n9 + 
     12*n1*n3*n9 + 8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 4*d*n9^2 + 4*n3*n9^2) + 
   (2*(-2 + d - n3)*(-1 + d - n3)*n3*j[p4a, n1, n2, 1 + n3, 0, 1, 1, 1, 0, 
      1 + n9, 1, -1, 0, -1, 1])/(-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 
     127*d*n1 - 28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 
     18*d^2*n2 - 46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 
     4*n1*n2^2 - 154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 
     8*n1^2*n3 - 52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 
     13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 
     16*d^2*n9 - 28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 
     48*n3*n9 + 20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 
     4*d*n9^2 - 4*n3*n9^2) - ((-2 + d - n3)*(-1 + d - n3)*n3*
     j[p4a, n1, n2, 1 + n3, 0, 1, 1, 1, 0, 1 + n9, 1, 0, -1, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   (2*n3*(2 - d + n3)*(11 - 4*d + 2*n1 + 2*n2 + n3 + 2*n9)*
     j[p4a, n1, n2, 1 + n3, 0, 1, 1, 1, 0, 1 + n9, 1, 0, 0, -1, 1])/
    (186 - 259*d + 119*d^2 - 18*d^3 + 142*n1 - 127*d*n1 + 28*d^2*n1 + 
     20*n1^2 - 10*d*n1^2 + 58*n2 - 68*d*n2 + 18*d^2*n2 + 46*n1*n2 - 
     22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 4*d*n2^2 + 4*n1*n2^2 + 154*n3 - 
     134*d*n3 + 29*d^2*n3 + 76*n1*n3 - 31*d*n1*n3 + 8*n1^2*n3 + 52*n2*n3 - 
     24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 30*n3^2 - 13*d*n3^2 + 6*n1*n3^2 + 
     6*n2*n3^2 + 2*n3^3 + 76*n9 - 70*d*n9 + 16*d^2*n9 + 28*n1*n9 - 
     14*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 4*n1*n2*n9 + 48*n3*n9 - 20*d*n3*n9 + 
     12*n1*n3*n9 + 8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 4*d*n9^2 + 4*n3*n9^2) - 
   ((-2 + d - n3)*(-1 + d - n3)*n3*j[p4a, n1, n2, 1 + n3, 0, 1, 1, 1, 1, 
      1 + n9, 0, 0, -1, -1, 1])/(-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 
     127*d*n1 - 28*d^2*n1 - 20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 
     18*d^2*n2 - 46*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 
     4*n1*n2^2 - 154*n3 + 134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 
     8*n1^2*n3 - 52*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 
     13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 
     16*d^2*n9 - 28*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 
     48*n3*n9 + 20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 
     4*d*n9^2 - 4*n3*n9^2) + (n3*(84 - 70*d + 14*d^2 + 16*n1 - 8*d*n1 + 
      38*n2 - 16*d*n2 + 4*n1*n2 + 4*n2^2 + 35*n3 - 12*d*n3 + 6*n1*n3 + 
      8*n2*n3 + n3^2 + 16*n9 - 8*d*n9 + 4*n2*n9 + 6*n3*n9)*
     j[p4a, n1, n2, 1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, -1, 0, -1, 0])/
    (186 - 259*d + 119*d^2 - 18*d^3 + 142*n1 - 127*d*n1 + 28*d^2*n1 + 
     20*n1^2 - 10*d*n1^2 + 58*n2 - 68*d*n2 + 18*d^2*n2 + 46*n1*n2 - 
     22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 4*d*n2^2 + 4*n1*n2^2 + 154*n3 - 
     134*d*n3 + 29*d^2*n3 + 76*n1*n3 - 31*d*n1*n3 + 8*n1^2*n3 + 52*n2*n3 - 
     24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 30*n3^2 - 13*d*n3^2 + 6*n1*n3^2 + 
     6*n2*n3^2 + 2*n3^3 + 76*n9 - 70*d*n9 + 16*d^2*n9 + 28*n1*n9 - 
     14*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 4*n1*n2*n9 + 48*n3*n9 - 20*d*n3*n9 + 
     12*n1*n3*n9 + 8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 4*d*n9^2 + 4*n3*n9^2) - 
   (n3*(2 - d + n3)*(-10 + 3*d - 2*n1 - 2*n2 - 2*n9)*
     j[p4a, n1, n2, 1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, -1, -1, 1])/
    (186 - 259*d + 119*d^2 - 18*d^3 + 142*n1 - 127*d*n1 + 28*d^2*n1 + 
     20*n1^2 - 10*d*n1^2 + 58*n2 - 68*d*n2 + 18*d^2*n2 + 46*n1*n2 - 
     22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 4*d*n2^2 + 4*n1*n2^2 + 154*n3 - 
     134*d*n3 + 29*d^2*n3 + 76*n1*n3 - 31*d*n1*n3 + 8*n1^2*n3 + 52*n2*n3 - 
     24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 30*n3^2 - 13*d*n3^2 + 6*n1*n3^2 + 
     6*n2*n3^2 + 2*n3^3 + 76*n9 - 70*d*n9 + 16*d^2*n9 + 28*n1*n9 - 
     14*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 4*n1*n2*n9 + 48*n3*n9 - 20*d*n3*n9 + 
     12*n1*n3*n9 + 8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 4*d*n9^2 + 4*n3*n9^2) + 
   (n3*(2 - d + n3)*(11 - 4*d + 2*n1 + 2*n2 + n3 + 2*n9)*
     j[p4a, n1, n2, 1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, 0, -2, 1])/
    (186 - 259*d + 119*d^2 - 18*d^3 + 142*n1 - 127*d*n1 + 28*d^2*n1 + 
     20*n1^2 - 10*d*n1^2 + 58*n2 - 68*d*n2 + 18*d^2*n2 + 46*n1*n2 - 
     22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 4*d*n2^2 + 4*n1*n2^2 + 154*n3 - 
     134*d*n3 + 29*d^2*n3 + 76*n1*n3 - 31*d*n1*n3 + 8*n1^2*n3 + 52*n2*n3 - 
     24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 30*n3^2 - 13*d*n3^2 + 6*n1*n3^2 + 
     6*n2*n3^2 + 2*n3^3 + 76*n9 - 70*d*n9 + 16*d^2*n9 + 28*n1*n9 - 
     14*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 4*n1*n2*n9 + 48*n3*n9 - 20*d*n3*n9 + 
     12*n1*n3*n9 + 8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 4*d*n9^2 + 4*n3*n9^2) - 
   (n3*(2 - d + n3)*(11 - 4*d + 2*n1 + 2*n2 + n3 + 2*n9)*
     j[p4a, n1, n2, 1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, 0, -1, 0])/
    (186 - 259*d + 119*d^2 - 18*d^3 + 142*n1 - 127*d*n1 + 28*d^2*n1 + 
     20*n1^2 - 10*d*n1^2 + 58*n2 - 68*d*n2 + 18*d^2*n2 + 46*n1*n2 - 
     22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 4*d*n2^2 + 4*n1*n2^2 + 154*n3 - 
     134*d*n3 + 29*d^2*n3 + 76*n1*n3 - 31*d*n1*n3 + 8*n1^2*n3 + 52*n2*n3 - 
     24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 30*n3^2 - 13*d*n3^2 + 6*n1*n3^2 + 
     6*n2*n3^2 + 2*n3^3 + 76*n9 - 70*d*n9 + 16*d^2*n9 + 28*n1*n9 - 
     14*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 4*n1*n2*n9 + 48*n3*n9 - 20*d*n3*n9 + 
     12*n1*n3*n9 + 8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 4*d*n9^2 + 4*n3*n9^2) + 
   (n2*(-2 + d - n3)*(11 - 4*d + 2*n1 + 2*n2 + n3 + 2*n9)*
     j[p4a, n1, 1 + n2, -1 + n3, 0, 0, 1, 1, 1, 1 + n9, 1, 0, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   (n2*(-2 + d - n3)*(11 - 4*d + 2*n1 + 2*n2 + n3 + 2*n9)*
     j[p4a, n1, 1 + n2, -1 + n3, 0, 1, 0, 1, 1, 1 + n9, 1, 0, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   (n2*(-2 + d - n3)*(11 - 4*d + 2*n1 + 2*n2 + n3 + 2*n9)*
     j[p4a, n1, 1 + n2, -1 + n3, 0, 1, 1, 0, 1, 1 + n9, 1, 0, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   (n2*(-2 + d - n3)*(11 - 4*d + 2*n1 + 2*n2 + n3 + 2*n9)*
     j[p4a, n1, 1 + n2, -1 + n3, 0, 1, 1, 1, 0, 1 + n9, 1, 0, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   (n2*(-2 + d - n3)*(11 - 4*d + 2*n1 + 2*n2 + n3 + 2*n9)*
     j[p4a, n1, 1 + n2, n3, 0, 0, 1, 1, 1, 1 + n9, 1, 0, -1, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   (2*n2*(-2 + d - n3)*(11 - 4*d + 2*n1 + 2*n2 + n3 + 2*n9)*
     j[p4a, n1, 1 + n2, n3, 0, 0, 1, 1, 1, 1 + n9, 1, 0, 0, -2, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   (n2*(-2 + d - n3)*(11 - 4*d + 2*n1 + 2*n2 + n3 + 2*n9)*
     j[p4a, n1, 1 + n2, n3, 0, 1, 0, 1, 1, 1 + n9, 1, 0, -1, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   (2*n2*(-2 + d - n3)*(11 - 4*d + 2*n1 + 2*n2 + n3 + 2*n9)*
     j[p4a, n1, 1 + n2, n3, 0, 1, 0, 1, 1, 1 + n9, 1, 0, 0, -2, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   (n2*(-2 + d - n3)*(11 - 4*d + 2*n1 + 2*n2 + n3 + 2*n9)*
     j[p4a, n1, 1 + n2, n3, 0, 1, 1, 0, 1, 1 + n9, 1, 0, -1, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   (2*n2*(-2 + d - n3)*(11 - 4*d + 2*n1 + 2*n2 + n3 + 2*n9)*
     j[p4a, n1, 1 + n2, n3, 0, 1, 1, 0, 1, 1 + n9, 1, 0, 0, -2, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   (n2*(-2 + d - n3)*(11 - 4*d + 2*n1 + 2*n2 + n3 + 2*n9)*
     j[p4a, n1, 1 + n2, n3, 0, 1, 1, 1, 0, 1 + n9, 1, 0, -1, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   (2*n2*(-2 + d - n3)*(11 - 4*d + 2*n1 + 2*n2 + n3 + 2*n9)*
     j[p4a, n1, 1 + n2, n3, 0, 1, 1, 1, 0, 1 + n9, 1, 0, 0, -2, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   (n1*(-2 + d - n3)*(11 - 4*d + 2*n1 + 2*n2 + n3 + 2*n9)*
     j[p4a, 1 + n1, n2, n3, 0, 0, 1, 1, 1, 1 + n9, 1, 0, 0, -2, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   (n1*(-2 + d - n3)*(11 - 4*d + 2*n1 + 2*n2 + n3 + 2*n9)*
     j[p4a, 1 + n1, n2, n3, 0, 0, 1, 1, 1, 1 + n9, 1, 0, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   (n1*(-2 + d - n3)*(11 - 4*d + 2*n1 + 2*n2 + n3 + 2*n9)*
     j[p4a, 1 + n1, n2, n3, 0, 1, 1, 1, 0, 1 + n9, 1, 0, 0, -2, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   (n1*(-2 + d - n3)*(11 - 4*d + 2*n1 + 2*n2 + n3 + 2*n9)*
     j[p4a, 1 + n1, n2, n3, 0, 1, 1, 1, 0, 1 + n9, 1, 0, 0, -1, 1])/
    (-186 + 259*d - 119*d^2 + 18*d^3 - 142*n1 + 127*d*n1 - 28*d^2*n1 - 
     20*n1^2 + 10*d*n1^2 - 58*n2 + 68*d*n2 - 18*d^2*n2 - 46*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 154*n3 + 
     134*d*n3 - 29*d^2*n3 - 76*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 52*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 30*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 76*n9 + 70*d*n9 - 16*d^2*n9 - 28*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 48*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 0 && n12 == 0 && n13 == 0 && n14 == 1 && n4 == 0 && 
    n5 == 1 && n6 == 1 && n7 == 1 && n8 == 1 && n9 != 0 -> 
  ((-2 + d - n3)*(-10 + 3*d - 2*n1 - 2*n2 - 2*n9)*j[p4a, -1 + n1, -1 + n2, 
      n3, 0, 1, 1, 1, 2, 1 + n9, 1, 0, 0, 0, 1])/(-216 + 300*d - 130*d^2 + 
     18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 24*n1^2 + 10*d*n1^2 - 64*n2 + 
     74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 
     4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 
     31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 
     4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 
     80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 
     8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 12*n1*n3*n9 - 
     8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((116 - 84*d + 15*d^2 + 20*n1 - 8*d*n1 + 44*n2 - 16*d*n2 + 4*n1*n2 + 
      4*n2^2 + 42*n3 - 14*d*n3 + 6*n1*n3 + 8*n2*n3 + 2*n3^2 + 20*n9 - 
      8*d*n9 + 4*n2*n9 + 6*n3*n9)*j[p4a, -1 + n1, -1 + n2, n3, 0, 2, 1, 1, 1, 
      1 + n9, 1, 0, 0, 0, 1])/(-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 
     142*d*n1 - 28*d^2*n1 - 24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 
     18*d^2*n2 - 52*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 
     4*n1*n2^2 - 188*n3 + 149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 
     8*n1^2*n3 - 58*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 
     13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 
     16*d^2*n9 - 32*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 
     52*n3*n9 + 20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 
     4*d*n9^2 - 4*n3*n9^2) + (n3*(116 - 84*d + 15*d^2 + 20*n1 - 8*d*n1 + 
      44*n2 - 16*d*n2 + 4*n1*n2 + 4*n2^2 + 42*n3 - 14*d*n3 + 6*n1*n3 + 
      8*n2*n3 + 2*n3^2 + 20*n9 - 8*d*n9 + 4*n2*n9 + 6*n3*n9)*
     j[p4a, -1 + n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, 0, 0, 1])/
    (216 - 300*d + 130*d^2 - 18*d^3 + 176*n1 - 142*d*n1 + 28*d^2*n1 + 
     24*n1^2 - 10*d*n1^2 + 64*n2 - 74*d*n2 + 18*d^2*n2 + 52*n1*n2 - 
     22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 4*d*n2^2 + 4*n1*n2^2 + 188*n3 - 
     149*d*n3 + 29*d^2*n3 + 84*n1*n3 - 31*d*n1*n3 + 8*n1^2*n3 + 58*n2*n3 - 
     24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 34*n3^2 - 13*d*n3^2 + 6*n1*n3^2 + 
     6*n2*n3^2 + 2*n3^3 + 80*n9 - 74*d*n9 + 16*d^2*n9 + 32*n1*n9 - 
     14*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 4*n1*n2*n9 + 52*n3*n9 - 20*d*n3*n9 + 
     12*n1*n3*n9 + 8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 4*d*n9^2 + 4*n3*n9^2) + 
   ((112 - 80*d + 14*d^2 + 20*n1 - 8*d*n1 + 44*n2 - 16*d*n2 + 4*n1*n2 + 
      4*n2^2 + 38*n3 - 12*d*n3 + 6*n1*n3 + 8*n2*n3 + n3^2 + 20*n9 - 8*d*n9 + 
      4*n2*n9 + 6*n3*n9)*j[p4a, -1 + n1, n2, n3, 0, 1, 0, 1, 2, 1 + n9, 1, 0, 
      0, 0, 1])/(-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 
     28*d^2*n1 - 24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 
     52*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
     188*n3 + 149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
     58*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 
     6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 
     32*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 
     20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 
     4*n3*n9^2) - ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, -1 + n1, n2, n3, 0, 1, 1, 0, 2, 1 + n9, 1, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-40 + 32*d - 6*d^2 - 8*n1 + 4*d*n1 + 128*n2 - 96*d*n2 + 18*d^2*n2 + 
      24*n1*n2 - 10*d*n1*n2 + 48*n2^2 - 18*d*n2^2 + 4*n1*n2^2 + 4*n2^3 - 
      136*n3 + 90*d*n3 - 15*d^2*n3 - 24*n1*n3 + 8*d*n1*n3 + 4*n2*n3 - 
      d*n2*n3 + 4*n1*n2*n3 + 6*n2^2*n3 - 42*n3^2 + 14*d*n3^2 - 6*n1*n3^2 - 
      6*n2*n3^2 - 2*n3^3 - 28*n9 + 20*d*n9 - 3*d^2*n9 - 4*n1*n9 + 2*d*n1*n9 + 
      20*n2*n9 - 8*d*n2*n9 + 4*n2^2*n9 - 34*n3*n9 + 11*d*n3*n9 - 2*n1*n3*n9 + 
      2*n2*n3*n9 - 6*n3^2*n9 - 4*n9^2 + 2*d*n9^2 - 2*n3*n9^2)*
     j[p4a, -1 + n1, n2, n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-10 + 3*d - 2*n1 - 2*n2 - 2*n9)*(1 + n9)*
     j[p4a, -1 + n1, n2, n3, 0, 1, 1, 1, 1, 2 + n9, 1, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-112 + 80*d - 14*d^2 - 20*n1 + 8*d*n1 - 44*n2 + 16*d*n2 - 4*n1*n2 - 
      4*n2^2 - 38*n3 + 12*d*n3 - 6*n1*n3 - 8*n2*n3 - n3^2 - 20*n9 + 8*d*n9 - 
      4*n2*n9 - 6*n3*n9)*j[p4a, -1 + n1, n2, n3, 0, 2, 0, 1, 1, 1 + n9, 1, 0, 
      0, 0, 1])/(-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 
     28*d^2*n1 - 24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 
     52*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
     188*n3 + 149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
     58*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 
     6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 
     32*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 
     20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 
     4*n3*n9^2) + ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, -1 + n1, n2, n3, 0, 2, 1, 0, 1, 1 + n9, 1, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   (n3*(-88 + 60*d - 10*d^2 - 16*n1 + 6*d*n1 - 40*n2 + 14*d*n2 - 4*n1*n2 - 
      4*n2^2 - 24*n3 + 7*d*n3 - 4*n1*n3 - 6*n2*n3 - 16*n9 + 6*d*n9 - 
      4*n2*n9 - 4*n3*n9)*j[p4a, -1 + n1, n2, 1 + n3, 0, 1, 1, 0, 1, 1 + n9, 
      1, 0, 0, 0, 1])/(216 - 300*d + 130*d^2 - 18*d^3 + 176*n1 - 142*d*n1 + 
     28*d^2*n1 + 24*n1^2 - 10*d*n1^2 + 64*n2 - 74*d*n2 + 18*d^2*n2 + 
     52*n1*n2 - 22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 4*d*n2^2 + 4*n1*n2^2 + 
     188*n3 - 149*d*n3 + 29*d^2*n3 + 84*n1*n3 - 31*d*n1*n3 + 8*n1^2*n3 + 
     58*n2*n3 - 24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 34*n3^2 - 13*d*n3^2 + 
     6*n1*n3^2 + 6*n2*n3^2 + 2*n3^3 + 80*n9 - 74*d*n9 + 16*d^2*n9 + 
     32*n1*n9 - 14*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 4*n1*n2*n9 + 52*n3*n9 - 
     20*d*n3*n9 + 12*n1*n3*n9 + 8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 4*d*n9^2 + 
     4*n3*n9^2) - (2*n3*(112 - 80*d + 14*d^2 + 20*n1 - 8*d*n1 + 44*n2 - 
      16*d*n2 + 4*n1*n2 + 4*n2^2 + 38*n3 - 12*d*n3 + 6*n1*n3 + 8*n2*n3 + 
      n3^2 + 20*n9 - 8*d*n9 + 4*n2*n9 + 6*n3*n9)*j[p4a, -1 + n1, n2, 1 + n3, 
      0, 1, 1, 1, 0, 1 + n9, 1, 0, 0, 0, 1])/(216 - 300*d + 130*d^2 - 
     18*d^3 + 176*n1 - 142*d*n1 + 28*d^2*n1 + 24*n1^2 - 10*d*n1^2 + 64*n2 - 
     74*d*n2 + 18*d^2*n2 + 52*n1*n2 - 22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 
     4*d*n2^2 + 4*n1*n2^2 + 188*n3 - 149*d*n3 + 29*d^2*n3 + 84*n1*n3 - 
     31*d*n1*n3 + 8*n1^2*n3 + 58*n2*n3 - 24*d*n2*n3 + 14*n1*n2*n3 + 
     4*n2^2*n3 + 34*n3^2 - 13*d*n3^2 + 6*n1*n3^2 + 6*n2*n3^2 + 2*n3^3 + 
     80*n9 - 74*d*n9 + 16*d^2*n9 + 32*n1*n9 - 14*d*n1*n9 + 12*n2*n9 - 
     8*d*n2*n9 + 4*n1*n2*n9 + 52*n3*n9 - 20*d*n3*n9 + 12*n1*n3*n9 + 
     8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 4*d*n9^2 + 4*n3*n9^2) + 
   (n3*(116 - 84*d + 15*d^2 + 20*n1 - 8*d*n1 + 44*n2 - 16*d*n2 + 4*n1*n2 + 
      4*n2^2 + 42*n3 - 14*d*n3 + 6*n1*n3 + 8*n2*n3 + 2*n3^2 + 20*n9 - 
      8*d*n9 + 4*n2*n9 + 6*n3*n9)*j[p4a, -1 + n1, n2, 1 + n3, 0, 1, 1, 1, 1, 
      1 + n9, 1, 0, -1, 0, 1])/(216 - 300*d + 130*d^2 - 18*d^3 + 176*n1 - 
     142*d*n1 + 28*d^2*n1 + 24*n1^2 - 10*d*n1^2 + 64*n2 - 74*d*n2 + 
     18*d^2*n2 + 52*n1*n2 - 22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 4*d*n2^2 + 
     4*n1*n2^2 + 188*n3 - 149*d*n3 + 29*d^2*n3 + 84*n1*n3 - 31*d*n1*n3 + 
     8*n1^2*n3 + 58*n2*n3 - 24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 34*n3^2 - 
     13*d*n3^2 + 6*n1*n3^2 + 6*n2*n3^2 + 2*n3^3 + 80*n9 - 74*d*n9 + 
     16*d^2*n9 + 32*n1*n9 - 14*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 4*n1*n2*n9 + 
     52*n3*n9 - 20*d*n3*n9 + 12*n1*n3*n9 + 8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 
     4*d*n9^2 + 4*n3*n9^2) - (n3*(136 - 100*d + 18*d^2 + 24*n1 - 10*d*n1 + 
      48*n2 - 18*d*n2 + 4*n1*n2 + 4*n2^2 + 52*n3 - 17*d*n3 + 8*n1*n3 + 
      10*n2*n3 + 2*n3^2 + 24*n9 - 10*d*n9 + 4*n2*n9 + 8*n3*n9)*
     j[p4a, -1 + n1, n2, 1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, 0, -1, 1])/
    (216 - 300*d + 130*d^2 - 18*d^3 + 176*n1 - 142*d*n1 + 28*d^2*n1 + 
     24*n1^2 - 10*d*n1^2 + 64*n2 - 74*d*n2 + 18*d^2*n2 + 52*n1*n2 - 
     22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 4*d*n2^2 + 4*n1*n2^2 + 188*n3 - 
     149*d*n3 + 29*d^2*n3 + 84*n1*n3 - 31*d*n1*n3 + 8*n1^2*n3 + 58*n2*n3 - 
     24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 34*n3^2 - 13*d*n3^2 + 6*n1*n3^2 + 
     6*n2*n3^2 + 2*n3^3 + 80*n9 - 74*d*n9 + 16*d^2*n9 + 32*n1*n9 - 
     14*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 4*n1*n2*n9 + 52*n3*n9 - 20*d*n3*n9 + 
     12*n1*n3*n9 + 8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 4*d*n9^2 + 4*n3*n9^2) - 
   (n3*(112 - 80*d + 14*d^2 + 20*n1 - 8*d*n1 + 44*n2 - 16*d*n2 + 4*n1*n2 + 
      4*n2^2 + 38*n3 - 12*d*n3 + 6*n1*n3 + 8*n2*n3 + n3^2 + 20*n9 - 8*d*n9 + 
      4*n2*n9 + 6*n3*n9)*j[p4a, -1 + n1, n2, 1 + n3, 0, 1, 1, 1, 1, 1 + n9, 
      1, 0, 0, 0, 0])/(216 - 300*d + 130*d^2 - 18*d^3 + 176*n1 - 142*d*n1 + 
     28*d^2*n1 + 24*n1^2 - 10*d*n1^2 + 64*n2 - 74*d*n2 + 18*d^2*n2 + 
     52*n1*n2 - 22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 4*d*n2^2 + 4*n1*n2^2 + 
     188*n3 - 149*d*n3 + 29*d^2*n3 + 84*n1*n3 - 31*d*n1*n3 + 8*n1^2*n3 + 
     58*n2*n3 - 24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 34*n3^2 - 13*d*n3^2 + 
     6*n1*n3^2 + 6*n2*n3^2 + 2*n3^3 + 80*n9 - 74*d*n9 + 16*d^2*n9 + 
     32*n1*n9 - 14*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 4*n1*n2*n9 + 52*n3*n9 - 
     20*d*n3*n9 + 12*n1*n3*n9 + 8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 4*d*n9^2 + 
     4*n3*n9^2) - (n2*(112 - 80*d + 14*d^2 + 20*n1 - 8*d*n1 + 44*n2 - 
      16*d*n2 + 4*n1*n2 + 4*n2^2 + 38*n3 - 12*d*n3 + 6*n1*n3 + 8*n2*n3 + 
      n3^2 + 20*n9 - 8*d*n9 + 4*n2*n9 + 6*n3*n9)*j[p4a, -1 + n1, 1 + n2, n3, 
      0, 0, 1, 1, 1, 1 + n9, 1, 0, 0, 0, 1])/(-216 + 300*d - 130*d^2 + 
     18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 24*n1^2 + 10*d*n1^2 - 64*n2 + 
     74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 
     4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 
     31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 
     4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 
     80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 
     8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 12*n1*n3*n9 - 
     8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   (n2*(112 - 80*d + 14*d^2 + 20*n1 - 8*d*n1 + 44*n2 - 16*d*n2 + 4*n1*n2 + 
      4*n2^2 + 38*n3 - 12*d*n3 + 6*n1*n3 + 8*n2*n3 + n3^2 + 20*n9 - 8*d*n9 + 
      4*n2*n9 + 6*n3*n9)*j[p4a, -1 + n1, 1 + n2, n3, 0, 1, 0, 1, 1, 1 + n9, 
      1, 0, 0, 0, 1])/(-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 
     28*d^2*n1 - 24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 
     52*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
     188*n3 + 149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
     58*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 
     6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 
     32*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 
     20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 
     4*n3*n9^2) - (n2*(-2 + d - n3)*(12 - 4*d + 2*n1 + 2*n2 + n3 + 2*n9)*
     j[p4a, -1 + n1, 1 + n2, n3, 0, 1, 1, 0, 1, 1 + n9, 1, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   (n2*(-2 + d - n3)*(12 - 4*d + 2*n1 + 2*n2 + n3 + 2*n9)*
     j[p4a, -1 + n1, 1 + n2, n3, 0, 1, 1, 1, 0, 1 + n9, 1, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n9)*
     j[p4a, n1, -2 + n2, n3, 0, 1, 1, 1, 2, 1 + n9, 1, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((88 - 60*d + 10*d^2 + 16*n1 - 6*d*n1 + 40*n2 - 14*d*n2 + 4*n1*n2 + 
      4*n2^2 + 24*n3 - 7*d*n3 + 4*n1*n3 + 6*n2*n3 + 16*n9 - 6*d*n9 + 
      4*n2*n9 + 4*n3*n9)*j[p4a, n1, -2 + n2, n3, 0, 1, 1, 2, 1, 1 + n9, 1, 0, 
      0, 0, 1])/(-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 
     28*d^2*n1 - 24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 
     52*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
     188*n3 + 149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
     58*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 
     6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 
     32*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 
     20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 
     4*n3*n9^2) + (n3*(-88 + 60*d - 10*d^2 - 16*n1 + 6*d*n1 - 40*n2 + 
      14*d*n2 - 4*n1*n2 - 4*n2^2 - 24*n3 + 7*d*n3 - 4*n1*n3 - 6*n2*n3 - 
      16*n9 + 6*d*n9 - 4*n2*n9 - 4*n3*n9)*j[p4a, n1, -2 + n2, 1 + n3, 0, 1, 
      1, 1, 1, 1 + n9, 1, 0, 0, 0, 1])/(216 - 300*d + 130*d^2 - 18*d^3 + 
     176*n1 - 142*d*n1 + 28*d^2*n1 + 24*n1^2 - 10*d*n1^2 + 64*n2 - 74*d*n2 + 
     18*d^2*n2 + 52*n1*n2 - 22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 4*d*n2^2 + 
     4*n1*n2^2 + 188*n3 - 149*d*n3 + 29*d^2*n3 + 84*n1*n3 - 31*d*n1*n3 + 
     8*n1^2*n3 + 58*n2*n3 - 24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 34*n3^2 - 
     13*d*n3^2 + 6*n1*n3^2 + 6*n2*n3^2 + 2*n3^3 + 80*n9 - 74*d*n9 + 
     16*d^2*n9 + 32*n1*n9 - 14*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 4*n1*n2*n9 + 
     52*n3*n9 - 20*d*n3*n9 + 12*n1*n3*n9 + 8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 
     4*d*n9^2 + 4*n3*n9^2) + ((-112 + 80*d - 14*d^2 - 20*n1 + 8*d*n1 - 
      44*n2 + 16*d*n2 - 4*n1*n2 - 4*n2^2 - 38*n3 + 12*d*n3 - 6*n1*n3 - 
      8*n2*n3 - n3^2 - 20*n9 + 8*d*n9 - 4*n2*n9 - 6*n3*n9)*
     j[p4a, n1, -1 + n2, n3, 0, 0, 1, 2, 1, 1 + n9, 1, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, -1 + n2, n3, 0, 0, 2, 1, 1, 1 + n9, 1, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, -1 + n2, n3, 0, 1, 0, 1, 1, 1 + n9, 2, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-88 + 60*d - 10*d^2 - 16*n1 + 6*d*n1 - 40*n2 + 14*d*n2 - 4*n1*n2 - 
      4*n2^2 - 24*n3 + 7*d*n3 - 4*n1*n3 - 6*n2*n3 - 16*n9 + 6*d*n9 - 
      4*n2*n9 - 4*n3*n9)*j[p4a, n1, -1 + n2, n3, 0, 1, 0, 1, 2, 1 + n9, 1, 0, 
      0, 0, 1])/(-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 
     28*d^2*n1 - 24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 
     52*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
     188*n3 + 149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
     58*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 
     6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 
     32*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 
     20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 
     4*n3*n9^2) - ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, -1 + n2, n3, 0, 1, 1, 0, 1, 1 + n9, 2, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n9)*
     j[p4a, n1, -1 + n2, n3, 0, 1, 1, 0, 2, 1 + n9, 1, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-324 + 276*d - 71*d^2 + 5*d^3 + 84*n1 - 74*d*n1 + 16*d^2*n1 + 24*n1^2 - 
      10*d*n1^2 - 100*n2 + 42*d*n2 - 2*d^2*n2 + 40*n1*n2 - 18*d*n1*n2 + 
      4*n1^2*n2 - 8*n2^2 + 4*n1*n2^2 - 106*n3 + 51*d*n3 - 5*d^2*n3 + 
      42*n1*n3 - 17*d*n1*n3 + 8*n1^2*n3 + 10*n2*n3 - 8*d*n2*n3 + 
      14*n1*n2*n3 + 4*n2^2*n3 - 16*n3^2 + 5*d*n3^2 + 2*n1*n3^2 + 2*n2*n3^2 - 
      2*n3^3 - 60*n9 + 34*d*n9 - 4*d^2*n9 + 24*n1*n9 - 10*d*n1*n9 - 8*n2*n9 + 
      4*n1*n2*n9 - 18*n3*n9 + 4*d*n3*n9 + 8*n1*n3*n9 + 4*n2*n3*n9 - 
      2*n3^2*n9)*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, 0, 0, 
      1])/(-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*(1 + n9)*
     j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 1, 2 + n9, 1, 0, 0, 0, 0])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 2, 1 + n9, 1, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-88 + 60*d - 10*d^2 - 16*n1 + 6*d*n1 - 40*n2 + 14*d*n2 - 4*n1*n2 - 
      4*n2^2 - 24*n3 + 7*d*n3 - 4*n1*n3 - 6*n2*n3 - 16*n9 + 6*d*n9 - 
      4*n2*n9 - 4*n3*n9)*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 2, 0, 1 + n9, 1, 0, 
      0, 0, 1])/(-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 
     28*d^2*n1 - 24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 
     52*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
     188*n3 + 149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
     58*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 
     6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 
     32*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 
     20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 
     4*n3*n9^2) - ((-2 + d - n3)^2*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 2, 1, 
      1 + n9, 0, 0, 0, 0, 1])/(-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 
     142*d*n1 - 28*d^2*n1 - 24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 
     18*d^2*n2 - 52*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 
     4*n1*n2^2 - 188*n3 + 149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 
     8*n1^2*n3 - 58*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 
     13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 
     16*d^2*n9 - 32*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 
     52*n3*n9 + 20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 
     4*d*n9^2 - 4*n3*n9^2) - ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 
      2*n9)*j[p4a, n1, -1 + n2, n3, 0, 1, 2, 0, 1, 1 + n9, 1, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)^2*j[p4a, n1, -1 + n2, n3, 0, 1, 2, 1, 1, 1 + n9, 0, 0, 0, 
      0, 1])/(-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 
     28*d^2*n1 - 24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 
     52*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
     188*n3 + 149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
     58*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 
     6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 
     32*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 
     20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 
     4*n3*n9^2) - ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, -1 + n2, n3, 0, 1, 2, 1, 1, 1 + n9, 1, 0, 0, 0, 0])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-10 + 3*d - 2*n1 - 2*n2 - 2*n9)*j[p4a, n1, -1 + n2, n3, 0, 
      1, 2, 1, 1, 1 + n9, 1, 0, 0, 0, 1])/(-216 + 300*d - 130*d^2 + 18*d^3 - 
     176*n1 + 142*d*n1 - 28*d^2*n1 - 24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 
     18*d^2*n2 - 52*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 
     4*n1*n2^2 - 188*n3 + 149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 
     8*n1^2*n3 - 58*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 
     13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 
     16*d^2*n9 - 32*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 
     52*n3*n9 + 20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 
     4*d*n9^2 - 4*n3*n9^2) - ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 
      2*n9)*j[p4a, n1, -1 + n2, n3, 0, 2, 1, 1, 1, 1 + n9, 1, 0, 0, 0, 0])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-10 + 3*d - 2*n1 - 2*n2 - 2*n9)*j[p4a, n1, -1 + n2, n3, 0, 
      2, 1, 1, 1, 1 + n9, 1, 0, 0, 0, 1])/(-216 + 300*d - 130*d^2 + 18*d^3 - 
     176*n1 + 142*d*n1 - 28*d^2*n1 - 24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 
     18*d^2*n2 - 52*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 
     4*n1*n2^2 - 188*n3 + 149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 
     8*n1^2*n3 - 58*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 
     13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 
     16*d^2*n9 - 32*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 
     52*n3*n9 + 20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 
     4*d*n9^2 - 4*n3*n9^2) + (n3*(112 - 80*d + 14*d^2 + 20*n1 - 8*d*n1 + 
      44*n2 - 16*d*n2 + 4*n1*n2 + 4*n2^2 + 38*n3 - 12*d*n3 + 6*n1*n3 + 
      8*n2*n3 + n3^2 + 20*n9 - 8*d*n9 + 4*n2*n9 + 6*n3*n9)*
     j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 0, 1, 1 + n9, 1, 0, 0, 0, 1])/
    (216 - 300*d + 130*d^2 - 18*d^3 + 176*n1 - 142*d*n1 + 28*d^2*n1 + 
     24*n1^2 - 10*d*n1^2 + 64*n2 - 74*d*n2 + 18*d^2*n2 + 52*n1*n2 - 
     22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 4*d*n2^2 + 4*n1*n2^2 + 188*n3 - 
     149*d*n3 + 29*d^2*n3 + 84*n1*n3 - 31*d*n1*n3 + 8*n1^2*n3 + 58*n2*n3 - 
     24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 34*n3^2 - 13*d*n3^2 + 6*n1*n3^2 + 
     6*n2*n3^2 + 2*n3^3 + 80*n9 - 74*d*n9 + 16*d^2*n9 + 32*n1*n9 - 
     14*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 4*n1*n2*n9 + 52*n3*n9 - 20*d*n3*n9 + 
     12*n1*n3*n9 + 8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 4*d*n9^2 + 4*n3*n9^2) - 
   (n3*(-172 + 116*d - 19*d^2 - 32*n1 + 12*d*n1 - 80*n2 + 28*d*n2 - 8*n1*n2 - 
      8*n2^2 - 44*n3 + 12*d*n3 - 8*n1*n3 - 12*n2*n3 + n3^2 - 32*n9 + 
      12*d*n9 - 8*n2*n9 - 8*n3*n9)*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 0, 
      1 + n9, 1, 0, 0, 0, 1])/(216 - 300*d + 130*d^2 - 18*d^3 + 176*n1 - 
     142*d*n1 + 28*d^2*n1 + 24*n1^2 - 10*d*n1^2 + 64*n2 - 74*d*n2 + 
     18*d^2*n2 + 52*n1*n2 - 22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 4*d*n2^2 + 
     4*n1*n2^2 + 188*n3 - 149*d*n3 + 29*d^2*n3 + 84*n1*n3 - 31*d*n1*n3 + 
     8*n1^2*n3 + 58*n2*n3 - 24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 34*n3^2 - 
     13*d*n3^2 + 6*n1*n3^2 + 6*n2*n3^2 + 2*n3^3 + 80*n9 - 74*d*n9 + 
     16*d^2*n9 + 32*n1*n9 - 14*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 4*n1*n2*n9 + 
     52*n3*n9 - 20*d*n3*n9 + 12*n1*n3*n9 + 8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 
     4*d*n9^2 + 4*n3*n9^2) - ((-2 + d - n3)^2*n3*j[p4a, n1, -1 + n2, 1 + n3, 
      0, 1, 1, 1, 1, 1 + n9, 0, 0, 0, 0, 1])/(-216 + 300*d - 130*d^2 + 
     18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 24*n1^2 + 10*d*n1^2 - 64*n2 + 
     74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 
     4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 
     31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 
     4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 
     80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 
     8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 12*n1*n3*n9 - 
     8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   (n3*(-88 + 60*d - 10*d^2 - 16*n1 + 6*d*n1 - 40*n2 + 14*d*n2 - 4*n1*n2 - 
      4*n2^2 - 24*n3 + 7*d*n3 - 4*n1*n3 - 6*n2*n3 - 16*n9 + 6*d*n9 - 
      4*n2*n9 - 4*n3*n9)*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, 1 + n9, 
      1, 0, -1, 0, 1])/(216 - 300*d + 130*d^2 - 18*d^3 + 176*n1 - 142*d*n1 + 
     28*d^2*n1 + 24*n1^2 - 10*d*n1^2 + 64*n2 - 74*d*n2 + 18*d^2*n2 + 
     52*n1*n2 - 22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 4*d*n2^2 + 4*n1*n2^2 + 
     188*n3 - 149*d*n3 + 29*d^2*n3 + 84*n1*n3 - 31*d*n1*n3 + 8*n1^2*n3 + 
     58*n2*n3 - 24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 34*n3^2 - 13*d*n3^2 + 
     6*n1*n3^2 + 6*n2*n3^2 + 2*n3^3 + 80*n9 - 74*d*n9 + 16*d^2*n9 + 
     32*n1*n9 - 14*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 4*n1*n2*n9 + 52*n3*n9 - 
     20*d*n3*n9 + 12*n1*n3*n9 + 8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 4*d*n9^2 + 
     4*n3*n9^2) - (n3*(-60 + 36*d - 5*d^2 - 12*n1 + 4*d*n1 - 36*n2 + 
      12*d*n2 - 4*n1*n2 - 4*n2^2 - 6*n3 - 2*n1*n3 - 4*n2*n3 + 2*n3^2 - 
      12*n9 + 4*d*n9 - 4*n2*n9 - 2*n3*n9)*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 
      1, 1, 1, 1 + n9, 1, 0, 0, -1, 1])/(216 - 300*d + 130*d^2 - 18*d^3 + 
     176*n1 - 142*d*n1 + 28*d^2*n1 + 24*n1^2 - 10*d*n1^2 + 64*n2 - 74*d*n2 + 
     18*d^2*n2 + 52*n1*n2 - 22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 4*d*n2^2 + 
     4*n1*n2^2 + 188*n3 - 149*d*n3 + 29*d^2*n3 + 84*n1*n3 - 31*d*n1*n3 + 
     8*n1^2*n3 + 58*n2*n3 - 24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 34*n3^2 - 
     13*d*n3^2 + 6*n1*n3^2 + 6*n2*n3^2 + 2*n3^3 + 80*n9 - 74*d*n9 + 
     16*d^2*n9 + 32*n1*n9 - 14*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 4*n1*n2*n9 + 
     52*n3*n9 - 20*d*n3*n9 + 12*n1*n3*n9 + 8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 
     4*d*n9^2 + 4*n3*n9^2) + (n3*(112 - 80*d + 14*d^2 + 20*n1 - 8*d*n1 + 
      44*n2 - 16*d*n2 + 4*n1*n2 + 4*n2^2 + 38*n3 - 12*d*n3 + 6*n1*n3 + 
      8*n2*n3 + n3^2 + 20*n9 - 8*d*n9 + 4*n2*n9 + 6*n3*n9)*
     j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, 0, 0, 0])/
    (216 - 300*d + 130*d^2 - 18*d^3 + 176*n1 - 142*d*n1 + 28*d^2*n1 + 
     24*n1^2 - 10*d*n1^2 + 64*n2 - 74*d*n2 + 18*d^2*n2 + 52*n1*n2 - 
     22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 4*d*n2^2 + 4*n1*n2^2 + 188*n3 - 
     149*d*n3 + 29*d^2*n3 + 84*n1*n3 - 31*d*n1*n3 + 8*n1^2*n3 + 58*n2*n3 - 
     24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 34*n3^2 - 13*d*n3^2 + 6*n1*n3^2 + 
     6*n2*n3^2 + 2*n3^3 + 80*n9 - 74*d*n9 + 16*d^2*n9 + 32*n1*n9 - 
     14*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 4*n1*n2*n9 + 52*n3*n9 - 20*d*n3*n9 + 
     12*n1*n3*n9 + 8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 4*d*n9^2 + 4*n3*n9^2) - 
   (n3*(2 - d + n3)*(-10 + 3*d - 2*n1 - 2*n2 - 2*n9)*
     j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, 0, 0, 1])/
    (216 - 300*d + 130*d^2 - 18*d^3 + 176*n1 - 142*d*n1 + 28*d^2*n1 + 
     24*n1^2 - 10*d*n1^2 + 64*n2 - 74*d*n2 + 18*d^2*n2 + 52*n1*n2 - 
     22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 4*d*n2^2 + 4*n1*n2^2 + 188*n3 - 
     149*d*n3 + 29*d^2*n3 + 84*n1*n3 - 31*d*n1*n3 + 8*n1^2*n3 + 58*n2*n3 - 
     24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 34*n3^2 - 13*d*n3^2 + 6*n1*n3^2 + 
     6*n2*n3^2 + 2*n3^3 + 80*n9 - 74*d*n9 + 16*d^2*n9 + 32*n1*n9 - 
     14*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 4*n1*n2*n9 + 52*n3*n9 - 20*d*n3*n9 + 
     12*n1*n3*n9 + 8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 4*d*n9^2 + 4*n3*n9^2) - 
   ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, -1 + n3, 0, 0, 1, 2, 1, 1 + n9, 1, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, -1 + n3, 0, 0, 2, 1, 1, 1 + n9, 1, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, -1 + n3, 0, 1, 0, 1, 1, 1 + n9, 2, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, -1 + n3, 0, 1, 1, 0, 1, 1 + n9, 2, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-10 + 3*d - 2*n1 - 2*n2 - 2*n9)*(-12 + 4*d - 2*n1 - 2*n2 - 
      n3 - 2*n9)*j[p4a, n1, n2, -1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, 0, 0, 
      1])/(-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, -1 + n3, 0, 1, 1, 2, 0, 1 + n9, 1, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, -1 + n3, 0, 1, 2, 1, 0, 1 + n9, 1, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((88 - 60*d + 10*d^2 + 16*n1 - 6*d*n1 + 40*n2 - 14*d*n2 + 4*n1*n2 + 
      4*n2^2 + 24*n3 - 7*d*n3 + 4*n1*n3 + 6*n2*n3 + 16*n9 - 6*d*n9 + 
      4*n2*n9 + 4*n3*n9)*j[p4a, n1, n2, n3, -1, 1, 1, 0, 2, 1 + n9, 1, 0, 0, 
      0, 1])/(-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 
     28*d^2*n1 - 24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 
     52*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
     188*n3 + 149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
     58*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 
     6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 
     32*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 
     20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 
     4*n3*n9^2) - ((-2 + d - n3)*(-8 - 4*d + 2*d^2 - 2*d*n1 + 24*n2 - 
      10*d*n2 + 4*n1*n2 + 4*n2^2 + 16*n3 - 5*d*n3 + 4*n1*n3 + 6*n2*n3 - 
      24*n9 + 6*d*n9 - 4*n1*n9 + 2*n3*n9 - 4*n9^2)*j[p4a, n1, n2, n3, -1, 1, 
      1, 1, 1, 1 + n9, 1, 0, 0, 0, 1])/(-216 + 300*d - 130*d^2 + 18*d^3 - 
     176*n1 + 142*d*n1 - 28*d^2*n1 - 24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 
     18*d^2*n2 - 52*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 
     4*n1*n2^2 - 188*n3 + 149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 
     8*n1^2*n3 - 58*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 
     13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 
     16*d^2*n9 - 32*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 
     52*n3*n9 + 20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 
     4*d*n9^2 - 4*n3*n9^2) - ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 
      2*n9)*(1 + n9)*j[p4a, n1, n2, n3, -1, 1, 1, 1, 1, 2 + n9, 1, 0, 0, 0, 
      0])/(-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((112 - 80*d + 14*d^2 + 20*n1 - 8*d*n1 + 44*n2 - 16*d*n2 + 4*n1*n2 + 
      4*n2^2 + 38*n3 - 12*d*n3 + 6*n1*n3 + 8*n2*n3 + n3^2 + 20*n9 - 8*d*n9 + 
      4*n2*n9 + 6*n3*n9)*j[p4a, n1, n2, n3, -1, 1, 1, 2, 0, 1 + n9, 1, 0, 0, 
      0, 1])/(-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 
     28*d^2*n1 - 24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 
     52*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
     188*n3 + 149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
     58*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 
     6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 
     32*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 
     20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 
     4*n3*n9^2) + ((112 - 80*d + 14*d^2 + 20*n1 - 8*d*n1 + 44*n2 - 16*d*n2 + 
      4*n1*n2 + 4*n2^2 + 38*n3 - 12*d*n3 + 6*n1*n3 + 8*n2*n3 + n3^2 + 20*n9 - 
      8*d*n9 + 4*n2*n9 + 6*n3*n9)*j[p4a, n1, n2, n3, -1, 1, 1, 2, 1, 1 + n9, 
      0, 0, 0, 0, 1])/(-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 
     28*d^2*n1 - 24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 
     52*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
     188*n3 + 149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
     58*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 
     6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 
     32*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 
     20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 
     4*n3*n9^2) - ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, -1, 1, 2, 0, 1, 1 + n9, 1, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, -1, 1, 2, 1, 0, 1 + n9, 1, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, -1, 1, 2, 1, 1, 1 + n9, 0, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, -1, 1, 2, 1, 1, 1 + n9, 1, 0, 0, 0, 0])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, -1, 2, 1, 1, 1, 1 + n9, 1, 0, 0, 0, 0])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)^2*j[p4a, n1, n2, n3, 0, 0, 1, 1, 1, n9, 1, 0, 0, 0, 2])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((200 - 140*d + 24*d^2 - 76*n1 + 66*d*n1 - 14*d^2*n1 - 20*n1^2 + 
      8*d*n1^2 + 60*n2 - 10*d*n2 - 4*d^2*n2 - 40*n1*n2 + 18*d*n1*n2 - 
      4*n1^2*n2 + 4*n2^2 + 2*d*n2^2 - 4*n1*n2^2 + 62*n3 - 19*d*n3 - 
      28*n1*n3 + 12*d*n1*n3 - 6*n1^2*n3 + 5*d*n2*n3 - 10*n1*n2*n3 - 
      2*n2^2*n3 + n3^2 - n1*n3^2 - n2*n3^2 + 32*n9 - 10*d*n9 - d^2*n9 - 
      20*n1*n9 + 8*d*n1*n9 + 4*n2*n9 + 2*d*n2*n9 - 4*n1*n2*n9 + 6*n3*n9 + 
      2*d*n3*n9 - 6*n1*n3*n9 - 2*n2*n3*n9 - n3^2*n9)*
     j[p4a, n1, n2, n3, 0, 0, 1, 1, 1, 1 + n9, 1, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)^2*j[p4a, n1, n2, n3, 0, 0, 1, 1, 1, 1 + n9, 1, 0, 0, 0, 2])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)^2*(1 + n9)*j[p4a, n1, n2, n3, 0, 0, 1, 1, 1, 2 + n9, 1, 0, 
      0, 0, 1])/(-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 
     28*d^2*n1 - 24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 
     52*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
     188*n3 + 149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
     58*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 
     6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 
     32*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 
     20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 
     4*n3*n9^2) + ((-112 + 80*d - 14*d^2 - 20*n1 + 8*d*n1 - 44*n2 + 16*d*n2 - 
      4*n1*n2 - 4*n2^2 - 38*n3 + 12*d*n3 - 6*n1*n3 - 8*n2*n3 - n3^2 - 20*n9 + 
      8*d*n9 - 4*n2*n9 - 6*n3*n9)*j[p4a, n1, n2, n3, 0, 0, 1, 2, 1, 1 + n9, 
      1, -1, 0, 0, 1])/(-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 
     28*d^2*n1 - 24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 
     52*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
     188*n3 + 149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
     58*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 
     6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 
     32*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 
     20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 
     4*n3*n9^2) + ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 0, 1, 2, 1, 1 + n9, 1, 0, 0, -1, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)^2*j[p4a, n1, n2, n3, 0, 0, 2, 1, 1, n9, 1, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 0, 2, 1, 1, 1 + n9, 1, 0, -1, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 0, 2, 1, 1, 1 + n9, 1, 0, 0, -1, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-10 + 3*d - 2*n1 - 2*n2 - 2*n9)*j[p4a, n1, n2, n3, 0, 0, 
      2, 1, 1, 1 + n9, 1, 0, 0, 0, 1])/(-216 + 300*d - 130*d^2 + 18*d^3 - 
     176*n1 + 142*d*n1 - 28*d^2*n1 - 24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 
     18*d^2*n2 - 52*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 
     4*n1*n2^2 - 188*n3 + 149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 
     8*n1^2*n3 - 58*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 
     13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 
     16*d^2*n9 - 32*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 
     52*n3*n9 + 20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 
     4*d*n9^2 - 4*n3*n9^2) - ((-2 + d - n3)^2*j[p4a, n1, n2, n3, 0, 1, 0, 1, 
      1, n9, 1, 0, 0, 0, 2])/(-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 
     142*d*n1 - 28*d^2*n1 - 24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 
     18*d^2*n2 - 52*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 
     4*n1*n2^2 - 188*n3 + 149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 
     8*n1^2*n3 - 58*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 
     13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 
     16*d^2*n9 - 32*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 
     52*n3*n9 + 20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 
     4*d*n9^2 - 4*n3*n9^2) + ((64 - 40*d + 6*d^2 + 12*n1 - 4*d*n1 + 60*n2 - 
      32*d*n2 + 4*d^2*n2 + 8*n1*n2 - 2*d*n1*n2 + 8*n2^2 - 2*d*n2^2 + 10*n3 - 
      2*d*n3 + 2*n1*n3 + 18*n2*n3 - 5*d*n2*n3 + 2*n1*n2*n3 + 2*n2^2*n3 - 
      n3^2 + n2*n3^2 + 8*n9 - d^2*n9 + 8*n2*n9 - 2*d*n2*n9 - 2*n3*n9 + 
      2*d*n3*n9 + 2*n2*n3*n9 - n3^2*n9)*j[p4a, n1, n2, n3, 0, 1, 0, 1, 1, 
      1 + n9, 1, 0, 0, 0, 1])/(-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 
     142*d*n1 - 28*d^2*n1 - 24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 
     18*d^2*n2 - 52*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 
     4*n1*n2^2 - 188*n3 + 149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 
     8*n1^2*n3 - 58*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 
     13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 
     16*d^2*n9 - 32*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 
     52*n3*n9 + 20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 
     4*d*n9^2 - 4*n3*n9^2) + ((-2 + d - n3)^2*j[p4a, n1, n2, n3, 0, 1, 0, 1, 
      1, 1 + n9, 1, 0, 0, 0, 2])/(-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 
     142*d*n1 - 28*d^2*n1 - 24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 
     18*d^2*n2 - 52*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 
     4*n1*n2^2 - 188*n3 + 149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 
     8*n1^2*n3 - 58*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 
     13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 
     16*d^2*n9 - 32*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 
     52*n3*n9 + 20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 
     4*d*n9^2 - 4*n3*n9^2) + ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 
      2*n9)*j[p4a, n1, n2, n3, 0, 1, 0, 1, 1, 1 + n9, 2, 0, -1, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 1, 0, 1, 1, 1 + n9, 2, 0, 0, -1, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 1, 0, 1, 1, 1 + n9, 2, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)^2*(1 + n9)*j[p4a, n1, n2, n3, 0, 1, 0, 1, 1, 2 + n9, 1, 0, 
      0, 0, 1])/(-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 
     28*d^2*n1 - 24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 
     52*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
     188*n3 + 149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
     58*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 
     6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 
     32*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 
     20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 
     4*n3*n9^2) + ((-112 + 80*d - 14*d^2 - 20*n1 + 8*d*n1 - 44*n2 + 16*d*n2 - 
      4*n1*n2 - 4*n2^2 - 38*n3 + 12*d*n3 - 6*n1*n3 - 8*n2*n3 - n3^2 - 20*n9 + 
      8*d*n9 - 4*n2*n9 - 6*n3*n9)*j[p4a, n1, n2, n3, 0, 1, 0, 1, 2, 1 + n9, 
      1, -1, 0, 0, 1])/(-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 
     28*d^2*n1 - 24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 
     52*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
     188*n3 + 149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
     58*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 
     6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 
     32*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 
     20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 
     4*n3*n9^2) + ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 1, 0, 1, 2, 1 + n9, 1, 0, -1, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 1, 0, 1, 2, 1 + n9, 1, 0, 0, -1, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)^2*j[p4a, n1, n2, n3, 0, 1, 1, 0, 1, n9, 1, 0, 0, 0, 2])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 1, 1, 0, 1, n9, 2, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-112 + 80*d - 14*d^2 - 20*n1 + 8*d*n1 - 68*n2 + 36*d*n2 - 4*d^2*n2 - 
      8*n1*n2 + 2*d*n1*n2 - 8*n2^2 + 2*d*n2^2 - 66*n3 + 36*d*n3 - 5*d^2*n3 - 
      10*n1*n3 + 2*d*n1*n3 - 26*n2*n3 + 7*d*n2*n3 - 2*n1*n2*n3 - 2*n2^2*n3 - 
      19*n3^2 + 7*d*n3^2 - 2*n1*n3^2 - 3*n2*n3^2 - 2*n3^3 - 44*n9 + 28*d*n9 - 
      4*d^2*n9 - 4*n1*n9 + 2*d*n1*n9 - 12*n2*n9 + 4*d*n2*n9 - 24*n3*n9 + 
      7*d*n3*n9 - 2*n1*n3*n9 - 4*n2*n3*n9 - 3*n3^2*n9 - 4*n9^2 + 2*d*n9^2 - 
      2*n3*n9^2)*j[p4a, n1, n2, n3, 0, 1, 1, 0, 1, 1 + n9, 1, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)^2*j[p4a, n1, n2, n3, 0, 1, 1, 0, 1, 1 + n9, 1, 0, 0, 0, 2])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 1, 1, 0, 1, 1 + n9, 2, -1, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 1, 1, 0, 1, 1 + n9, 2, 0, -1, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 1, 1, 0, 1, 1 + n9, 2, 0, 0, -1, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 1, 1, 0, 1, 1 + n9, 2, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*(1 + n9)*
     j[p4a, n1, n2, n3, 0, 1, 1, 0, 1, 2 + n9, 1, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)^2*j[p4a, n1, n2, n3, 0, 1, 1, 0, 2, 1 + n9, 1, -1, 0, 0, 
      1])/(-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 1, 1, 0, 2, 1 + n9, 1, 0, -1, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 1, 1, 0, 2, 1 + n9, 1, 0, 0, -1, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 1, 1, 0, 2, 1 + n9, 1, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)^2*j[p4a, n1, n2, n3, 0, 1, 1, 1, 0, n9, 1, 0, 0, 0, 2])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 1, 1, 1, 0, n9, 2, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-112 + 80*d - 14*d^2 - 44*n1 + 28*d*n1 - 4*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 
      20*n2 - 4*d*n2 + 4*d^2*n2 - 4*n1*n2 - 2*d*n2^2 - 66*n3 + 36*d*n3 - 
      5*d^2*n3 - 24*n1*n3 + 7*d*n1*n3 - 2*n1^2*n3 + 2*n2*n3 - 3*d*n2*n3 + 
      2*n2^2*n3 - 19*n3^2 + 7*d*n3^2 - 3*n1*n3^2 - n2*n3^2 - 2*n3^3 - 44*n9 + 
      28*d*n9 - 4*d^2*n9 - 8*n1*n9 + 4*d*n1*n9 - 4*n2*n9 - 24*n3*n9 + 
      7*d*n3*n9 - 4*n1*n3*n9 - 3*n3^2*n9 - 4*n9^2 + 2*d*n9^2 - 2*n3*n9^2)*
     j[p4a, n1, n2, n3, 0, 1, 1, 1, 0, 1 + n9, 1, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)^2*j[p4a, n1, n2, n3, 0, 1, 1, 1, 0, 1 + n9, 1, 0, 0, 0, 2])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 1, 1, 1, 0, 1 + n9, 2, -1, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*(1 + n9)*
     j[p4a, n1, n2, n3, 0, 1, 1, 1, 0, 2 + n9, 1, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((96 - 68*d + 12*d^2 - 120*n1 + 94*d*n1 - 18*d^2*n1 - 24*n1^2 + 
      10*d*n1^2 + 40*n2 - 14*d*n2 - 44*n1*n2 + 18*d*n1*n2 - 4*n1^2*n2 + 
      4*n2^2 - 4*n1*n2^2 + 52*n3 - 27*d*n3 + 3*d^2*n3 - 44*n1*n3 + 
      15*d*n1*n3 - 8*n1^2*n3 + 10*n2*n3 - 2*d*n2*n3 - 10*n1*n2*n3 + 12*n3^2 - 
      3*d*n3^2 + 2*n2*n3^2 - 4*n9 + 10*d*n9 - 3*d^2*n9 - 28*n1*n9 + 
      12*d*n1*n9 + 2*d*n2*n9 - 4*n1*n2*n9 - 2*n3*n9 + d*n3*n9 - 10*n1*n3*n9 - 
      2*n2*n3*n9 + 2*n3^2*n9 - 4*n9^2 + 2*d*n9^2 - 2*n3*n9^2)*
     j[p4a, n1, n2, n3, 0, 1, 1, 1, 1, 1 + n9, 0, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*(-3 + n3 - n9)*
     j[p4a, n1, n2, n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, 0, 0, 0])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(44 - 20*d + 2*d^2 + 10*n1 - 2*d*n1 + 10*n2 - 2*d*n2 - 
      5*n3 + 2*d*n3 - n3^2 + 30*n9 - 8*d*n9 + 4*n1*n9 + 4*n2*n9 + 4*n9^2)*
     j[p4a, n1, n2, n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-10 + 3*d - 2*n1 - 2*n2 - 2*n9)*(1 + n9)*
     j[p4a, n1, n2, n3, 0, 1, 1, 1, 1, 2 + n9, 0, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*(1 + n9)*
     j[p4a, n1, n2, n3, 0, 1, 1, 1, 1, 2 + n9, 1, -1, 0, 0, 0])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)^2*j[p4a, n1, n2, n3, 0, 1, 1, 2, 0, 1 + n9, 1, -1, 0, 0, 
      1])/(-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 1, 1, 2, 0, 1 + n9, 1, 0, 0, -1, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 1, 2, 1, 0, n9, 1, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 1, 2, 1, 0, 1 + n9, 1, 0, -1, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 1, 2, 1, 0, 1 + n9, 1, 0, 0, -1, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)^2*j[p4a, n1, n2, n3, 0, 2, 0, 1, 1, n9, 1, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 2, 0, 1, 1, 1 + n9, 1, 0, 0, -1, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   ((-2 + d - n3)*(-10 + 3*d - 2*n1 - 2*n2 - 2*n9)*j[p4a, n1, n2, n3, 0, 2, 
      0, 1, 1, 1 + n9, 1, 0, 0, 0, 1])/(-216 + 300*d - 130*d^2 + 18*d^3 - 
     176*n1 + 142*d*n1 - 28*d^2*n1 - 24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 
     18*d^2*n2 - 52*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 
     4*n1*n2^2 - 188*n3 + 149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 
     8*n1^2*n3 - 58*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 
     13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 
     16*d^2*n9 - 32*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 
     52*n3*n9 + 20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 
     4*d*n9^2 - 4*n3*n9^2) - ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 
      2*n9)*j[p4a, n1, n2, n3, 0, 2, 1, 0, 1, n9, 1, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   ((-2 + d - n3)*(-12 + 4*d - 2*n1 - 2*n2 - n3 - 2*n9)*
     j[p4a, n1, n2, n3, 0, 2, 1, 0, 1, 1 + n9, 1, 0, 0, -1, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   (n3*(112 - 80*d + 14*d^2 + 20*n1 - 8*d*n1 + 44*n2 - 16*d*n2 + 4*n1*n2 + 
      4*n2^2 + 38*n3 - 12*d*n3 + 6*n1*n3 + 8*n2*n3 + n3^2 + 20*n9 - 8*d*n9 + 
      4*n2*n9 + 6*n3*n9)*j[p4a, n1, n2, 1 + n3, -1, 1, 1, 0, 1, 1 + n9, 1, 0, 
      0, 0, 1])/(216 - 300*d + 130*d^2 - 18*d^3 + 176*n1 - 142*d*n1 + 
     28*d^2*n1 + 24*n1^2 - 10*d*n1^2 + 64*n2 - 74*d*n2 + 18*d^2*n2 + 
     52*n1*n2 - 22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 4*d*n2^2 + 4*n1*n2^2 + 
     188*n3 - 149*d*n3 + 29*d^2*n3 + 84*n1*n3 - 31*d*n1*n3 + 8*n1^2*n3 + 
     58*n2*n3 - 24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 34*n3^2 - 13*d*n3^2 + 
     6*n1*n3^2 + 6*n2*n3^2 + 2*n3^3 + 80*n9 - 74*d*n9 + 16*d^2*n9 + 
     32*n1*n9 - 14*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 4*n1*n2*n9 + 52*n3*n9 - 
     20*d*n3*n9 + 12*n1*n3*n9 + 8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 4*d*n9^2 + 
     4*n3*n9^2) - (n3*(112 - 80*d + 14*d^2 + 20*n1 - 8*d*n1 + 44*n2 - 
      16*d*n2 + 4*n1*n2 + 4*n2^2 + 38*n3 - 12*d*n3 + 6*n1*n3 + 8*n2*n3 + 
      n3^2 + 20*n9 - 8*d*n9 + 4*n2*n9 + 6*n3*n9)*j[p4a, n1, n2, 1 + n3, -1, 
      1, 1, 1, 0, 1 + n9, 1, 0, 0, 0, 1])/(216 - 300*d + 130*d^2 - 18*d^3 + 
     176*n1 - 142*d*n1 + 28*d^2*n1 + 24*n1^2 - 10*d*n1^2 + 64*n2 - 74*d*n2 + 
     18*d^2*n2 + 52*n1*n2 - 22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 4*d*n2^2 + 
     4*n1*n2^2 + 188*n3 - 149*d*n3 + 29*d^2*n3 + 84*n1*n3 - 31*d*n1*n3 + 
     8*n1^2*n3 + 58*n2*n3 - 24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 34*n3^2 - 
     13*d*n3^2 + 6*n1*n3^2 + 6*n2*n3^2 + 2*n3^3 + 80*n9 - 74*d*n9 + 
     16*d^2*n9 + 32*n1*n9 - 14*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 4*n1*n2*n9 + 
     52*n3*n9 - 20*d*n3*n9 + 12*n1*n3*n9 + 8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 
     4*d*n9^2 + 4*n3*n9^2) - (n3*(112 - 80*d + 14*d^2 + 20*n1 - 8*d*n1 + 
      44*n2 - 16*d*n2 + 4*n1*n2 + 4*n2^2 + 38*n3 - 12*d*n3 + 6*n1*n3 + 
      8*n2*n3 + n3^2 + 20*n9 - 8*d*n9 + 4*n2*n9 + 6*n3*n9)*
     j[p4a, n1, n2, 1 + n3, -1, 1, 1, 1, 1, 1 + n9, 0, 0, 0, 0, 1])/
    (216 - 300*d + 130*d^2 - 18*d^3 + 176*n1 - 142*d*n1 + 28*d^2*n1 + 
     24*n1^2 - 10*d*n1^2 + 64*n2 - 74*d*n2 + 18*d^2*n2 + 52*n1*n2 - 
     22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 4*d*n2^2 + 4*n1*n2^2 + 188*n3 - 
     149*d*n3 + 29*d^2*n3 + 84*n1*n3 - 31*d*n1*n3 + 8*n1^2*n3 + 58*n2*n3 - 
     24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 34*n3^2 - 13*d*n3^2 + 6*n1*n3^2 + 
     6*n2*n3^2 + 2*n3^3 + 80*n9 - 74*d*n9 + 16*d^2*n9 + 32*n1*n9 - 
     14*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 4*n1*n2*n9 + 52*n3*n9 - 20*d*n3*n9 + 
     12*n1*n3*n9 + 8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 4*d*n9^2 + 4*n3*n9^2) + 
   (n3*(136 - 100*d + 18*d^2 + 24*n1 - 10*d*n1 + 48*n2 - 18*d*n2 + 4*n1*n2 + 
      4*n2^2 + 52*n3 - 17*d*n3 + 8*n1*n3 + 10*n2*n3 + 2*n3^2 + 24*n9 - 
      10*d*n9 + 4*n2*n9 + 8*n3*n9)*j[p4a, n1, n2, 1 + n3, -1, 1, 1, 1, 1, 
      1 + n9, 1, 0, 0, 0, 1])/(216 - 300*d + 130*d^2 - 18*d^3 + 176*n1 - 
     142*d*n1 + 28*d^2*n1 + 24*n1^2 - 10*d*n1^2 + 64*n2 - 74*d*n2 + 
     18*d^2*n2 + 52*n1*n2 - 22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 4*d*n2^2 + 
     4*n1*n2^2 + 188*n3 - 149*d*n3 + 29*d^2*n3 + 84*n1*n3 - 31*d*n1*n3 + 
     8*n1^2*n3 + 58*n2*n3 - 24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 34*n3^2 - 
     13*d*n3^2 + 6*n1*n3^2 + 6*n2*n3^2 + 2*n3^3 + 80*n9 - 74*d*n9 + 
     16*d^2*n9 + 32*n1*n9 - 14*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 4*n1*n2*n9 + 
     52*n3*n9 - 20*d*n3*n9 + 12*n1*n3*n9 + 8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 
     4*d*n9^2 + 4*n3*n9^2) + (2*(-2 + d - n3)^2*n3*j[p4a, n1, n2, 1 + n3, 0, 
      1, 1, 0, 1, 1 + n9, 1, -1, 0, 0, 1])/(-216 + 300*d - 130*d^2 + 18*d^3 - 
     176*n1 + 142*d*n1 - 28*d^2*n1 - 24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 
     18*d^2*n2 - 52*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 
     4*n1*n2^2 - 188*n3 + 149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 
     8*n1^2*n3 - 58*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 
     13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 
     16*d^2*n9 - 32*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 
     52*n3*n9 + 20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 
     4*d*n9^2 - 4*n3*n9^2) - ((-2 + d - n3)^2*n3*j[p4a, n1, n2, 1 + n3, 0, 1, 
      1, 0, 1, 1 + n9, 1, 0, -1, 0, 1])/(-216 + 300*d - 130*d^2 + 18*d^3 - 
     176*n1 + 142*d*n1 - 28*d^2*n1 - 24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 
     18*d^2*n2 - 52*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 
     4*n1*n2^2 - 188*n3 + 149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 
     8*n1^2*n3 - 58*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 
     13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 
     16*d^2*n9 - 32*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 
     52*n3*n9 + 20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 
     4*d*n9^2 - 4*n3*n9^2) - (3*n3*(2 - d + n3)*(12 - 4*d + 2*n1 + 2*n2 + 
      n3 + 2*n9)*j[p4a, n1, n2, 1 + n3, 0, 1, 1, 0, 1, 1 + n9, 1, 0, 0, 0, 
      1])/(216 - 300*d + 130*d^2 - 18*d^3 + 176*n1 - 142*d*n1 + 28*d^2*n1 + 
     24*n1^2 - 10*d*n1^2 + 64*n2 - 74*d*n2 + 18*d^2*n2 + 52*n1*n2 - 
     22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 4*d*n2^2 + 4*n1*n2^2 + 188*n3 - 
     149*d*n3 + 29*d^2*n3 + 84*n1*n3 - 31*d*n1*n3 + 8*n1^2*n3 + 58*n2*n3 - 
     24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 34*n3^2 - 13*d*n3^2 + 6*n1*n3^2 + 
     6*n2*n3^2 + 2*n3^3 + 80*n9 - 74*d*n9 + 16*d^2*n9 + 32*n1*n9 - 
     14*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 4*n1*n2*n9 + 52*n3*n9 - 20*d*n3*n9 + 
     12*n1*n3*n9 + 8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 4*d*n9^2 + 4*n3*n9^2) + 
   (2*(-2 + d - n3)^2*n3*j[p4a, n1, n2, 1 + n3, 0, 1, 1, 1, 0, 1 + n9, 1, -1, 
      0, 0, 1])/(-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 
     28*d^2*n1 - 24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 
     52*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
     188*n3 + 149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
     58*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 
     6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 
     32*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 
     20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 
     4*n3*n9^2) - ((-2 + d - n3)^2*n3*j[p4a, n1, n2, 1 + n3, 0, 1, 1, 1, 0, 
      1 + n9, 1, 0, -1, 0, 1])/(-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 
     142*d*n1 - 28*d^2*n1 - 24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 
     18*d^2*n2 - 52*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 
     4*n1*n2^2 - 188*n3 + 149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 
     8*n1^2*n3 - 58*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 
     13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 
     16*d^2*n9 - 32*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 
     52*n3*n9 + 20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 
     4*d*n9^2 - 4*n3*n9^2) - (2*n3*(2 - d + n3)*(12 - 4*d + 2*n1 + 2*n2 + 
      n3 + 2*n9)*j[p4a, n1, n2, 1 + n3, 0, 1, 1, 1, 0, 1 + n9, 1, 0, 0, 0, 
      1])/(216 - 300*d + 130*d^2 - 18*d^3 + 176*n1 - 142*d*n1 + 28*d^2*n1 + 
     24*n1^2 - 10*d*n1^2 + 64*n2 - 74*d*n2 + 18*d^2*n2 + 52*n1*n2 - 
     22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 4*d*n2^2 + 4*n1*n2^2 + 188*n3 - 
     149*d*n3 + 29*d^2*n3 + 84*n1*n3 - 31*d*n1*n3 + 8*n1^2*n3 + 58*n2*n3 - 
     24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 34*n3^2 - 13*d*n3^2 + 6*n1*n3^2 + 
     6*n2*n3^2 + 2*n3^3 + 80*n9 - 74*d*n9 + 16*d^2*n9 + 32*n1*n9 - 
     14*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 4*n1*n2*n9 + 52*n3*n9 - 20*d*n3*n9 + 
     12*n1*n3*n9 + 8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 4*d*n9^2 + 4*n3*n9^2) - 
   ((-2 + d - n3)^2*n3*j[p4a, n1, n2, 1 + n3, 0, 1, 1, 1, 1, 1 + n9, 0, 0, 
      -1, 0, 1])/(-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 
     28*d^2*n1 - 24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 
     52*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
     188*n3 + 149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
     58*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 
     6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 
     32*n1*n9 + 14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 
     20*d*n3*n9 - 12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 
     4*n3*n9^2) + (n3*(112 - 80*d + 14*d^2 + 20*n1 - 8*d*n1 + 44*n2 - 
      16*d*n2 + 4*n1*n2 + 4*n2^2 + 38*n3 - 12*d*n3 + 6*n1*n3 + 8*n2*n3 + 
      n3^2 + 20*n9 - 8*d*n9 + 4*n2*n9 + 6*n3*n9)*j[p4a, n1, n2, 1 + n3, 0, 1, 
      1, 1, 1, 1 + n9, 1, -1, 0, 0, 0])/(216 - 300*d + 130*d^2 - 18*d^3 + 
     176*n1 - 142*d*n1 + 28*d^2*n1 + 24*n1^2 - 10*d*n1^2 + 64*n2 - 74*d*n2 + 
     18*d^2*n2 + 52*n1*n2 - 22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 4*d*n2^2 + 
     4*n1*n2^2 + 188*n3 - 149*d*n3 + 29*d^2*n3 + 84*n1*n3 - 31*d*n1*n3 + 
     8*n1^2*n3 + 58*n2*n3 - 24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 34*n3^2 - 
     13*d*n3^2 + 6*n1*n3^2 + 6*n2*n3^2 + 2*n3^3 + 80*n9 - 74*d*n9 + 
     16*d^2*n9 + 32*n1*n9 - 14*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 4*n1*n2*n9 + 
     52*n3*n9 - 20*d*n3*n9 + 12*n1*n3*n9 + 8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 
     4*d*n9^2 + 4*n3*n9^2) - (n3*(2 - d + n3)*(-10 + 3*d - 2*n1 - 2*n2 - 
      2*n9)*j[p4a, n1, n2, 1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, -1, 0, 1])/
    (216 - 300*d + 130*d^2 - 18*d^3 + 176*n1 - 142*d*n1 + 28*d^2*n1 + 
     24*n1^2 - 10*d*n1^2 + 64*n2 - 74*d*n2 + 18*d^2*n2 + 52*n1*n2 - 
     22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 4*d*n2^2 + 4*n1*n2^2 + 188*n3 - 
     149*d*n3 + 29*d^2*n3 + 84*n1*n3 - 31*d*n1*n3 + 8*n1^2*n3 + 58*n2*n3 - 
     24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 34*n3^2 - 13*d*n3^2 + 6*n1*n3^2 + 
     6*n2*n3^2 + 2*n3^3 + 80*n9 - 74*d*n9 + 16*d^2*n9 + 32*n1*n9 - 
     14*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 4*n1*n2*n9 + 52*n3*n9 - 20*d*n3*n9 + 
     12*n1*n3*n9 + 8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 4*d*n9^2 + 4*n3*n9^2) + 
   (n3*(2 - d + n3)*(12 - 4*d + 2*n1 + 2*n2 + n3 + 2*n9)*
     j[p4a, n1, n2, 1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, 0, -1, 1])/
    (216 - 300*d + 130*d^2 - 18*d^3 + 176*n1 - 142*d*n1 + 28*d^2*n1 + 
     24*n1^2 - 10*d*n1^2 + 64*n2 - 74*d*n2 + 18*d^2*n2 + 52*n1*n2 - 
     22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 4*d*n2^2 + 4*n1*n2^2 + 188*n3 - 
     149*d*n3 + 29*d^2*n3 + 84*n1*n3 - 31*d*n1*n3 + 8*n1^2*n3 + 58*n2*n3 - 
     24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 34*n3^2 - 13*d*n3^2 + 6*n1*n3^2 + 
     6*n2*n3^2 + 2*n3^3 + 80*n9 - 74*d*n9 + 16*d^2*n9 + 32*n1*n9 - 
     14*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 4*n1*n2*n9 + 52*n3*n9 - 20*d*n3*n9 + 
     12*n1*n3*n9 + 8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 4*d*n9^2 + 4*n3*n9^2) - 
   (n3*(2 - d + n3)*(12 - 4*d + 2*n1 + 2*n2 + n3 + 2*n9)*
     j[p4a, n1, n2, 1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, 0, 0, 0, 0])/
    (216 - 300*d + 130*d^2 - 18*d^3 + 176*n1 - 142*d*n1 + 28*d^2*n1 + 
     24*n1^2 - 10*d*n1^2 + 64*n2 - 74*d*n2 + 18*d^2*n2 + 52*n1*n2 - 
     22*d*n1*n2 + 4*n1^2*n2 + 4*n2^2 - 4*d*n2^2 + 4*n1*n2^2 + 188*n3 - 
     149*d*n3 + 29*d^2*n3 + 84*n1*n3 - 31*d*n1*n3 + 8*n1^2*n3 + 58*n2*n3 - 
     24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 34*n3^2 - 13*d*n3^2 + 6*n1*n3^2 + 
     6*n2*n3^2 + 2*n3^3 + 80*n9 - 74*d*n9 + 16*d^2*n9 + 32*n1*n9 - 
     14*d*n1*n9 + 12*n2*n9 - 8*d*n2*n9 + 4*n1*n2*n9 + 52*n3*n9 - 20*d*n3*n9 + 
     12*n1*n3*n9 + 8*n2*n3*n9 + 4*n3^2*n9 + 8*n9^2 - 4*d*n9^2 + 4*n3*n9^2) + 
   (n2*(-2 + d - n3)*(12 - 4*d + 2*n1 + 2*n2 + n3 + 2*n9)*
     j[p4a, n1, 1 + n2, -1 + n3, 0, 0, 1, 1, 1, 1 + n9, 1, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   (n2*(-2 + d - n3)*(12 - 4*d + 2*n1 + 2*n2 + n3 + 2*n9)*
     j[p4a, n1, 1 + n2, -1 + n3, 0, 1, 0, 1, 1, 1 + n9, 1, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   (n2*(-2 + d - n3)*(12 - 4*d + 2*n1 + 2*n2 + n3 + 2*n9)*
     j[p4a, n1, 1 + n2, -1 + n3, 0, 1, 1, 0, 1, 1 + n9, 1, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   (n2*(-2 + d - n3)*(12 - 4*d + 2*n1 + 2*n2 + n3 + 2*n9)*
     j[p4a, n1, 1 + n2, -1 + n3, 0, 1, 1, 1, 0, 1 + n9, 1, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   (n2*(-2 + d - n3)*(12 - 4*d + 2*n1 + 2*n2 + n3 + 2*n9)*
     j[p4a, n1, 1 + n2, n3, 0, 0, 1, 1, 1, 1 + n9, 1, 0, -1, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   (2*n2*(-2 + d - n3)*(12 - 4*d + 2*n1 + 2*n2 + n3 + 2*n9)*
     j[p4a, n1, 1 + n2, n3, 0, 0, 1, 1, 1, 1 + n9, 1, 0, 0, -1, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   (n2*(-2 + d - n3)*(12 - 4*d + 2*n1 + 2*n2 + n3 + 2*n9)*
     j[p4a, n1, 1 + n2, n3, 0, 1, 0, 1, 1, 1 + n9, 1, 0, -1, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   (2*n2*(-2 + d - n3)*(12 - 4*d + 2*n1 + 2*n2 + n3 + 2*n9)*
     j[p4a, n1, 1 + n2, n3, 0, 1, 0, 1, 1, 1 + n9, 1, 0, 0, -1, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   (n2*(-2 + d - n3)*(12 - 4*d + 2*n1 + 2*n2 + n3 + 2*n9)*
     j[p4a, n1, 1 + n2, n3, 0, 1, 1, 0, 1, 1 + n9, 1, 0, -1, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   (2*n2*(-2 + d - n3)*(12 - 4*d + 2*n1 + 2*n2 + n3 + 2*n9)*
     j[p4a, n1, 1 + n2, n3, 0, 1, 1, 0, 1, 1 + n9, 1, 0, 0, -1, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   (n2*(-2 + d - n3)*(12 - 4*d + 2*n1 + 2*n2 + n3 + 2*n9)*
     j[p4a, n1, 1 + n2, n3, 0, 1, 1, 1, 0, 1 + n9, 1, 0, -1, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   (2*n2*(-2 + d - n3)*(12 - 4*d + 2*n1 + 2*n2 + n3 + 2*n9)*
     j[p4a, n1, 1 + n2, n3, 0, 1, 1, 1, 0, 1 + n9, 1, 0, 0, -1, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   (n1*(-2 + d - n3)*(12 - 4*d + 2*n1 + 2*n2 + n3 + 2*n9)*
     j[p4a, 1 + n1, n2, n3, 0, 0, 1, 1, 1, 1 + n9, 1, 0, 0, -1, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   (n1*(-2 + d - n3)*(12 - 4*d + 2*n1 + 2*n2 + n3 + 2*n9)*
     j[p4a, 1 + n1, n2, n3, 0, 0, 1, 1, 1, 1 + n9, 1, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) + 
   (n1*(-2 + d - n3)*(12 - 4*d + 2*n1 + 2*n2 + n3 + 2*n9)*
     j[p4a, 1 + n1, n2, n3, 0, 1, 1, 1, 0, 1 + n9, 1, 0, 0, -1, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2) - 
   (n1*(-2 + d - n3)*(12 - 4*d + 2*n1 + 2*n2 + n3 + 2*n9)*
     j[p4a, 1 + n1, n2, n3, 0, 1, 1, 1, 0, 1 + n9, 1, 0, 0, 0, 1])/
    (-216 + 300*d - 130*d^2 + 18*d^3 - 176*n1 + 142*d*n1 - 28*d^2*n1 - 
     24*n1^2 + 10*d*n1^2 - 64*n2 + 74*d*n2 - 18*d^2*n2 - 52*n1*n2 + 
     22*d*n1*n2 - 4*n1^2*n2 - 4*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 188*n3 + 
     149*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 58*n2*n3 + 
     24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 34*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 
     6*n2*n3^2 - 2*n3^3 - 80*n9 + 74*d*n9 - 16*d^2*n9 - 32*n1*n9 + 
     14*d*n1*n9 - 12*n2*n9 + 8*d*n2*n9 - 4*n1*n2*n9 - 52*n3*n9 + 20*d*n3*n9 - 
     12*n1*n3*n9 - 8*n2*n3*n9 - 4*n3^2*n9 - 8*n9^2 + 4*d*n9^2 - 4*n3*n9^2), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 0 && n12 == 0 && n14 == 1 && n4 == 0 && n5 == 1 && 
    n6 == 1 && n7 == 1 && n8 == 1 && n9 == 0 && n13 != 0 -> 
  j[p4a, n1, -2 + n2, n3, 0, 1, 1, 2, 1, 0, 1, 0, 0, 1 + n13, 1]/
    (-3 + d - n13 - n3) + j[p4a, n1, -2 + n2, n3, 0, 2, 1, 1, 1, 0, 1, 0, 0, 
     1 + n13, 1]/(-3 + d - n13 - n3) + 
   ((1 + n13)*j[p4a, n1, -1 + n2, -1 + n3, 0, 1, 1, 1, 1, 0, 1, 0, 0, 
      2 + n13, 1])/(3 - d + n13 + n3) + 
   j[p4a, n1, -1 + n2, n3, 0, 1, 0, 1, 1, 0, 2, 0, 0, 1 + n13, 1]/
    (3 - d + n13 + n3) + j[p4a, n1, -1 + n2, n3, 0, 1, 0, 1, 2, 0, 1, 0, 0, 
     1 + n13, 1]/(3 - d + n13 + n3) + 
   ((-1 - n13)*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 0, 1, 0, 1, 0, 0, 2 + n13, 
      1])/(3 - d + n13 + n3) + 
   ((-1 - n13)*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 0, 0, 1, 0, 0, 2 + n13, 
      1])/(3 - d + n13 + n3) + 
   ((1 + n13)*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 1, 0, 1, 0, -1, 2 + n13, 
      1])/(3 - d + n13 + n3) + 
   ((-4 + d + n2 - n3)*j[p4a, n1, -1 + n2, n3, 0, 1, 1, 1, 1, 0, 1, 0, 0, 
      1 + n13, 1])/(-3 + d - n13 - n3) + 
   j[p4a, n1, -1 + n2, n3, 0, 1, 1, 2, 0, 0, 1, 0, 0, 1 + n13, 1]/
    (3 - d + n13 + n3) + j[p4a, n1, -1 + n2, n3, 0, 2, 0, 1, 1, 0, 1, 0, 0, 
     1 + n13, 1]/(3 - d + n13 + n3) + j[p4a, n1, -1 + n2, n3, 0, 2, 1, 1, 1, 
     0, 1, 0, 0, 1 + n13, 0]/(-3 + d - n13 - n3) + 
   j[p4a, n1, -1 + n2, n3, 0, 2, 1, 1, 1, 0, 1, 0, 0, 1 + n13, 1]/
    (3 - d + n13 + n3) - (n3*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, 0, 1, 
      0, 0, 1 + n13, 1])/(3 - d + n13 + n3) + 
   j[p4a, n1, n2, -1 + n3, 0, 0, 1, 2, 1, 0, 1, 0, 0, 1 + n13, 1]/
    (-3 + d - n13 - n3) + j[p4a, n1, n2, -1 + n3, 0, 1, 0, 1, 1, 0, 2, 0, 0, 
     1 + n13, 1]/(3 - d + n13 + n3) + j[p4a, n1, n2, -1 + n3, 0, 1, 1, 1, 1, 
    0, 1, 0, 0, 1 + n13, 1] + ((-1 - n13)*j[p4a, n1, n2, -1 + n3, 0, 1, 1, 1, 
      1, 0, 1, 0, 0, 2 + n13, 1])/(3 - d + n13 + n3) + 
   j[p4a, n1, n2, -1 + n3, 0, 1, 1, 2, 0, 0, 1, 0, 0, 1 + n13, 1]/
    (-3 + d - n13 - n3) + j[p4a, n1, n2, n3, -1, 1, 1, 0, 2, 0, 1, 0, 0, 
     1 + n13, 1]/(-3 + d - n13 - n3) + 
   ((2 - d + n3)*j[p4a, n1, n2, n3, -1, 1, 1, 1, 1, 0, 1, 0, 0, 1 + n13, 1])/
    (-3 + d - n13 - n3) + ((n13 - n2)*j[p4a, n1, n2, n3, 0, 0, 1, 1, 1, 0, 1, 
      0, 0, 1 + n13, 1])/(3 - d + n13 + n3) + 
   ((-1 - n13)*j[p4a, n1, n2, n3, 0, 0, 1, 1, 1, 0, 1, 0, 0, 2 + n13, 1])/
    (3 - d + n13 + n3) + j[p4a, n1, n2, n3, 0, 0, 1, 2, 1, 0, 1, 0, 0, n13, 
     1]/(3 - d + n13 + n3) + ((2 - n2)*j[p4a, n1, n2, n3, 0, 1, 0, 1, 1, 0, 
      1, 0, 0, 1 + n13, 1])/(-3 + d - n13 - n3) + 
   j[p4a, n1, n2, n3, 0, 1, 0, 1, 1, 0, 2, 0, -1, 1 + n13, 1]/
    (3 - d + n13 + n3) + j[p4a, n1, n2, n3, 0, 1, 0, 1, 1, 0, 2, 0, 0, n13, 
     1]/(-3 + d - n13 - n3) + j[p4a, n1, n2, n3, 0, 1, 0, 1, 1, 0, 2, 0, 0, 
     1 + n13, 1]/(-3 + d - n13 - n3) + 
   j[p4a, n1, n2, n3, 0, 1, 0, 1, 2, 0, 1, 0, -1, 1 + n13, 1]/
    (3 - d + n13 + n3) + j[p4a, n1, n2, n3, 0, 1, 0, 1, 2, 0, 1, 0, 0, n13, 
     1]/(-3 + d - n13 - n3) + j[p4a, n1, n2, n3, 0, 1, 1, 0, 1, -1, 2, 0, 0, 
     1 + n13, 1]/(-3 + d - n13 - n3) + 
   ((-1 + n13 - n2 + n3)*j[p4a, n1, n2, n3, 0, 1, 1, 0, 1, 0, 1, 0, 0, 
      1 + n13, 1])/(-3 + d - n13 - n3) + 
   ((1 + n13)*j[p4a, n1, n2, n3, 0, 1, 1, 0, 1, 0, 1, 0, 0, 2 + n13, 1])/
    (3 - d + n13 + n3) + j[p4a, n1, n2, n3, 0, 1, 1, 1, 0, -1, 2, 0, 0, 
     1 + n13, 1]/(-3 + d - n13 - n3) + 
   ((-1 + n13 - n2 + 2*n3)*j[p4a, n1, n2, n3, 0, 1, 1, 1, 0, 0, 1, 0, 0, 
      1 + n13, 1])/(-3 + d - n13 - n3) + 
   ((1 + n13)*j[p4a, n1, n2, n3, 0, 1, 1, 1, 0, 0, 1, 0, 0, 2 + n13, 1])/
    (3 - d + n13 + n3) + ((-12 + 4*d - n1 - 2*n13 - 2*n2 - 2*n3)*
     j[p4a, n1, n2, n3, 0, 1, 1, 1, 1, -1, 1, 0, 0, 1 + n13, 1])/
    (-3 + d - n13 - n3) + j[p4a, n1, n2, n3, 0, 1, 1, 1, 1, 0, 1, 0, -1, 
    1 + n13, 1] + ((-1 - n13)*j[p4a, n1, n2, n3, 0, 1, 1, 1, 1, 0, 1, 0, -1, 
      2 + n13, 1])/(3 - d + n13 + n3) + 
   ((-n13 - n3)*j[p4a, n1, n2, n3, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1 + n13, 0])/
    (3 - d + n13 + n3) + ((2 - d - n13 + n3)*j[p4a, n1, n2, n3, 0, 1, 1, 1, 
      1, 0, 1, 0, 0, 1 + n13, 1])/(-3 + d - n13 - n3) + 
   ((1 + n13)*j[p4a, n1, n2, n3, 0, 1, 1, 1, 1, 0, 1, 0, 0, 2 + n13, 0])/
    (3 - d + n13 + n3) + j[p4a, n1, n2, n3, 0, 1, 1, 2, 0, 0, 1, 0, 0, n13, 
     1]/(3 - d + n13 + n3) + j[p4a, n1, n2, n3, 0, 2, 0, 1, 1, 0, 1, 0, 0, 
     n13, 1]/(3 - d + n13 + n3) + j[p4a, n1, n2, n3, 0, 2, 0, 1, 1, 0, 1, 0, 
     0, 1 + n13, 1]/(-3 + d - n13 - n3) - 
   (n3*j[p4a, n1, n2, 1 + n3, -1, 1, 1, 1, 1, 0, 1, 0, 0, 1 + n13, 1])/
    (3 - d + n13 + n3) + (n3*j[p4a, n1, n2, 1 + n3, 0, 1, 1, 0, 1, 0, 1, 0, 
      0, 1 + n13, 1])/(3 - d + n13 + n3) + 
   (2*n3*j[p4a, n1, n2, 1 + n3, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1 + n13, 1])/
    (3 - d + n13 + n3) - (n3*j[p4a, n1, n2, 1 + n3, 0, 1, 1, 1, 1, 0, 1, 0, 
      -1, 1 + n13, 1])/(3 - d + n13 + n3) + 
   (n3*j[p4a, n1, n2, 1 + n3, 0, 1, 1, 1, 1, 0, 1, 0, 0, n13, 1])/
    (3 - d + n13 + n3) + (n3*j[p4a, n1, n2, 1 + n3, 0, 1, 1, 1, 1, 0, 1, 0, 
      0, 1 + n13, 0])/(3 - d + n13 + n3) + 
   (n2*j[p4a, n1, 1 + n2, -1 + n3, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1 + n13, 1])/
    (-3 + d - n13 - n3) - (n2*j[p4a, n1, 1 + n2, -1 + n3, 0, 1, 0, 1, 1, 0, 
      1, 0, 0, 1 + n13, 1])/(-3 + d - n13 - n3) + 
   (n2*j[p4a, n1, 1 + n2, n3, 0, 0, 1, 1, 1, 0, 1, 0, -1, 1 + n13, 1])/
    (-3 + d - n13 - n3) - (2*n2*j[p4a, n1, 1 + n2, n3, 0, 0, 1, 1, 1, 0, 1, 
      0, 0, n13, 1])/(-3 + d - n13 - n3) - 
   (n2*j[p4a, n1, 1 + n2, n3, 0, 1, 0, 1, 1, 0, 1, 0, -1, 1 + n13, 1])/
    (-3 + d - n13 - n3) + (2*n2*j[p4a, n1, 1 + n2, n3, 0, 1, 0, 1, 1, 0, 1, 
      0, 0, n13, 1])/(-3 + d - n13 - n3) + 
   (n1*j[p4a, 1 + n1, -2 + n2, n3, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1 + n13, 1])/
    (-3 + d - n13 - n3) - (n1*j[p4a, 1 + n1, -1 + n2, n3, 0, 1, 1, 1, 1, 0, 
      0, 0, 0, 1 + n13, 1])/(-3 + d - n13 - n3) - 
   (n1*j[p4a, 1 + n1, n2, n3, 0, 0, 1, 1, 1, 0, 1, 0, 0, n13, 1])/
    (-3 + d - n13 - n3) + (n1*j[p4a, 1 + n1, n2, n3, 0, 0, 1, 1, 1, 0, 1, 0, 
      0, 1 + n13, 1])/(-3 + d - n13 - n3) - 
   (n1*j[p4a, 1 + n1, n2, n3, 0, 1, 1, 1, 1, 0, 0, 0, 0, n13, 1])/
    (-3 + d - n13 - n3) + (n1*j[p4a, 1 + n1, n2, n3, 0, 1, 1, 1, 1, 0, 0, 0, 
      0, 1 + n13, 1])/(-3 + d - n13 - n3), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; 
   n1 == 1 && n10 == 1 && n12 == 0 && n13 == -1 && n14 == 1 && n4 == 0 && 
    n5 == 1 && n6 == 1 && n7 == 1 && n8 == 1 &&  !(n11 == 0 || n9 == 0) -> 
  (n9*j[p4a, 0, -1 + n2, n3, 0, 1, 1, 1, 1, 1 + n9, 1, n11, 0, 0, 1])/
    (2*(-2 + d - 2*n2)) + j[p4a, 0, -1 + n2, n3, 0, 1, 1, 1, 2, n9, 1, 
     1 + n11, 0, -1, 1]/(2*(-2 + d - 2*n2)) + 
   j[p4a, 0, -1 + n2, n3, 0, 2, 1, 1, 1, 1 + n9, 1, n11, 0, -1, 1]/
    (2*(-2 + d - 2*n2)) + (n3*j[p4a, 0, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, n9, 
      1, 1 + n11, 0, -1, 1])/(2*(-2 + d - 2*n2)) - 
   j[p4a, 0, n2, n3, 0, 1, 1, 1, 1, n9, 2, n11, 0, -1, 1]/
    (2*(-2 + d - 2*n2)) - (n11*j[p4a, 1, -2 + n2, n3, 0, 1, 1, 1, 1, 1 + n9, 
      1, 1 + n11, 0, -1, 1])/(2*(-2 + d - 2*n2)) - 
   j[p4a, 1, -2 + n2, n3, 0, 1, 1, 1, 2, n9, 1, 1 + n11, 0, -1, 1]/
    (2*(-2 + d - 2*n2)) + j[p4a, 1, -2 + n2, n3, 0, 1, 2, 1, 1, n9, 1, n11, 
     0, 0, 1]/(2*(-2 + d - 2*n2)) - j[p4a, 1, -2 + n2, n3, 0, 2, 1, 1, 1, 
     1 + n9, 1, n11, 0, -1, 1]/(2*(-2 + d - 2*n2)) + 
   (n3*j[p4a, 1, -2 + n2, 1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, n11, 0, -1, 1])/
    (2*(-2 + d - 2*n2)) - j[p4a, 1, -1 + n2, -1 + n3, 0, 1, 1, 1, 1, 1 + n9, 
     1, n11, 0, 0, 1]/(2*(-2 + d - 2*n2)) - 
   (n11*j[p4a, 1, -1 + n2, n3, -1, 1, 1, 1, 1, 1 + n9, 1, 1 + n11, 0, -1, 1])/
    (2*(-2 + d - 2*n2)) - j[p4a, 1, -1 + n2, n3, 0, 0, 1, 1, 1, n9, 1, n11, 
     0, 0, 2]/(2*(-2 + d - 2*n2)) + 
   ((-1 - n9)*j[p4a, 1, -1 + n2, n3, 0, 0, 1, 1, 1, 1 + n9, 1, n11, 0, 0, 1])/
    (2*(-2 + d - 2*n2)) + (n11*j[p4a, 1, -1 + n2, n3, 0, 0, 1, 1, 1, 1 + n9, 
      1, 1 + n11, 0, -1, 1])/(2*(-2 + d - 2*n2)) - 
   j[p4a, 1, -1 + n2, n3, 0, 0, 2, 1, 1, n9, 1, n11, 0, 0, 1]/
    (2*(-2 + d - 2*n2)) + (n11*j[p4a, 1, -1 + n2, n3, 0, 1, 0, 1, 1, 1 + n9, 
      1, 1 + n11, 0, -1, 1])/(2*(-2 + d - 2*n2)) + 
   j[p4a, 1, -1 + n2, n3, 0, 1, 0, 1, 1, 1 + n9, 2, n11, 0, -1, 1]/
    (2*(-2 + d - 2*n2)) + ((1 + n11)*j[p4a, 1, -1 + n2, n3, 0, 1, 1, 0, 1, 
      n9, 1, 2 + n11, 0, -1, 1])/(2*(-2 + d - 2*n2)) + 
   j[p4a, 1, -1 + n2, n3, 0, 1, 1, 0, 1, 1 + n9, 1, n11, 0, 0, 1]/
    (2*(-2 + d - 2*n2)) + j[p4a, 1, -1 + n2, n3, 0, 1, 1, 0, 2, n9, 1, 
     1 + n11, 0, -1, 1]/(2*(-2 + d - 2*n2)) + 
   j[p4a, 1, -1 + n2, n3, 0, 1, 1, 1, 0, 1 + n9, 1, n11, 0, 0, 1]/
    (2*(-2 + d - 2*n2)) + (n11*j[p4a, 1, -1 + n2, n3, 0, 1, 1, 1, 0, 1 + n9, 
      1, 1 + n11, 0, -1, 1])/(2*(-2 + d - 2*n2)) + 
   ((-1 - n11)*j[p4a, 1, -1 + n2, n3, 0, 1, 1, 1, 1, n9, 0, 2 + n11, 0, -1, 
      1])/(2*(-2 + d - 2*n2)) + 
   ((-4 + d - n9)*j[p4a, 1, -1 + n2, n3, 0, 1, 1, 1, 1, n9, 1, n11, 0, 0, 1])/
    (2*(-2 + d - 2*n2)) + ((-2*n11 + n3)*j[p4a, 1, -1 + n2, n3, 0, 1, 1, 1, 
      1, n9, 1, 1 + n11, 0, -1, 1])/(2*(-2 + d - 2*n2)) + 
   (n11*j[p4a, 1, -1 + n2, n3, 0, 1, 1, 1, 1, 1 + n9, 0, 1 + n11, 0, -1, 1])/
    (2*(-2 + d - 2*n2)) - j[p4a, 1, -1 + n2, n3, 0, 1, 1, 1, 1, 1 + n9, 1, 
     n11, -1, 0, 1]/(2*(-2 + d - 2*n2)) + 
   ((n3 - 2*n9)*j[p4a, 1, -1 + n2, n3, 0, 1, 1, 1, 1, 1 + n9, 1, n11, 0, -1, 
      1])/(2*(-2 + d - 2*n2)) + j[p4a, 1, -1 + n2, n3, 0, 1, 1, 1, 1, 1 + n9, 
     1, n11, 0, -1, 2]/(2*(-2 + d - 2*n2)) + 
   j[p4a, 1, -1 + n2, n3, 0, 1, 1, 1, 1, 1 + n9, 1, n11, 0, 0, 0]/
    (2*(-2 + d - 2*n2)) + j[p4a, 1, -1 + n2, n3, 0, 1, 1, 2, 1, n9, 0, 
     1 + n11, 0, -1, 1]/(2*(-2 + d - 2*n2)) + 
   j[p4a, 1, -1 + n2, n3, 0, 1, 2, 1, 1, 1 + n9, 0, n11, 0, -1, 1]/
    (2*(-2 + d - 2*n2)) + j[p4a, 1, -1 + n2, n3, 0, 2, 0, 1, 1, 1 + n9, 1, 
     n11, 0, -1, 1]/(2*(-2 + d - 2*n2)) + 
   (n3*j[p4a, 1, -1 + n2, 1 + n3, -1, 1, 1, 1, 1, 1 + n9, 1, n11, 0, -1, 1])/
    (2*(-2 + d - 2*n2)) - (n3*j[p4a, 1, -1 + n2, 1 + n3, 0, 1, 1, 0, 1, 
      1 + n9, 1, n11, 0, -1, 1])/(2*(-2 + d - 2*n2)) - 
   (n3*j[p4a, 1, -1 + n2, 1 + n3, 0, 1, 1, 1, 0, n9, 1, 1 + n11, 0, -1, 1])/
    (2*(-2 + d - 2*n2)) - (n3*j[p4a, 1, -1 + n2, 1 + n3, 0, 1, 1, 1, 0, 
      1 + n9, 1, n11, 0, -1, 1])/(-2 + d - 2*n2) + 
   (n3*j[p4a, 1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, n9, 0, 1 + n11, 0, -1, 1])/
    (2*(-2 + d - 2*n2)) - (n3*j[p4a, 1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, n9, 
      1, n11, 0, -1, 1])/(2*(-2 + d - 2*n2)) + 
   (n3*j[p4a, 1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, n9, 1, 1 + n11, -1, -1, 1])/
    (2*(-2 + d - 2*n2)) - (n3*j[p4a, 1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, n9, 
      1, 1 + n11, 0, -2, 1])/(2*(-2 + d - 2*n2)) - 
   (n3*j[p4a, 1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, n9, 1, 1 + n11, 0, -1, 1])/
    (2*(-2 + d - 2*n2)) + (n3*j[p4a, 1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, 
      1 + n9, 1, n11, -1, -1, 1])/(2*(-2 + d - 2*n2)) - 
   (n3*j[p4a, 1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, 1 + n9, 1, n11, 0, -2, 1])/
    (2*(-2 + d - 2*n2)) - (n3*j[p4a, 1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, 
      1 + n9, 1, n11, 0, -1, 0])/(2*(-2 + d - 2*n2)) + 
   j[p4a, 1, n2, -1 + n3, 0, 1, 1, 1, 1, n9, 1, n11, 0, 0, 1]/
    (2*(-2 + d - 2*n2)) - j[p4a, 1, n2, n3, 0, 0, 2, 1, 1, n9, 1, n11, 0, -1, 
     1]/(2*(-2 + d - 2*n2)) - j[p4a, 1, n2, n3, 0, 1, 1, 0, 1, n9, 1, n11, 0, 
     0, 1]/(2*(-2 + d - 2*n2)) - j[p4a, 1, n2, n3, 0, 1, 1, 0, 2, n9, 1, n11, 
     0, -1, 1]/(2*(-2 + d - 2*n2)) - j[p4a, 1, n2, n3, 0, 1, 1, 1, 0, n9, 1, 
     n11, 0, 0, 1]/(2*(-2 + d - 2*n2)) + 
   j[p4a, 1, n2, n3, 0, 1, 1, 1, 1, n9, 1, n11, -1, 0, 1]/
    (2*(-2 + d - 2*n2)) - j[p4a, 1, n2, n3, 0, 1, 1, 2, 0, n9, 1, n11, 0, -1, 
     1]/(2*(-2 + d - 2*n2)) - j[p4a, 1, n2, n3, 0, 2, 0, 1, 1, n9, 1, n11, 0, 
     -1, 1]/(2*(-2 + d - 2*n2)) - j[p4a, 2, -2 + n2, n3, 0, 1, 1, 1, 1, 
     1 + n9, 1, n11, 0, -1, 1]/(2*(-2 + d - 2*n2)) + 
   j[p4a, 2, -1 + n2, n3, 0, 0, 1, 1, 1, 1 + n9, 1, n11, 0, -1, 1]/
    (2*(-2 + d - 2*n2)) + j[p4a, 2, -1 + n2, n3, 0, 1, 1, 1, 1, 1 + n9, 0, 
     n11, 0, -1, 1]/(2*(-2 + d - 2*n2)) - 
   j[p4a, 2, n2, n3, 0, 1, 1, 1, 1, n9, 0, n11, 0, -1, 1]/
    (2*(-2 + d - 2*n2)), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 0 && n12 == 0 && n13 == 0 && n14 == 1 && n3 == 0 && 
    n4 == 0 && n5 == 1 && n7 == 1 && n8 == 1 && n9 == 0 && n6 != 1 -> 
  ((4 - d + n2)*j[p4a, n1, n2, 0, 0, 2, -1 + n6, 1, 1, 0, 1, 0, 0, 0, 1])/
    ((-12 + 5*d - 2*n1 - 4*n2 - 2*n6)*(-1 + n6)) + 
   ((-7*n2 + 2*d*n2 - n1*n2 - 2*n2^2)*j[p4a, n1, 1 + n2, 0, 0, 1, -1 + n6, 1, 
      1, 0, 1, 0, 0, 0, 1])/((-1 + n6)*(12 - 5*d + 2*n1 + 4*n2 + 2*n6)) + 
   (n2*j[p4a, n1, 1 + n2, 0, 0, 2, -2 + n6, 1, 1, 0, 1, 0, 0, 0, 1])/
    ((-1 + n6)*(12 - 5*d + 2*n1 + 4*n2 + 2*n6)) + 
   ((-4 + d)*j[p4a, 1 + n1, -1 + n2, 0, 0, 1, -1 + n6, 1, 1, 0, 2, 0, 0, 0, 
      1])/((-12 + 5*d - 2*n1 - 4*n2 - 2*n6)*(-1 + n6)) + 
   ((-4 + d - n1)*j[p4a, 1 + n1, -1 + n2, 0, 0, 1, -1 + n6, 2, 1, 0, 1, 0, 0, 
      0, 1])/((-12 + 5*d - 2*n1 - 4*n2 - 2*n6)*(-1 + n6)) + 
   ((-4 + d)*j[p4a, 1 + n1, -1 + n2, 0, 0, 1, n6, 1, 1, 0, 1, 0, 0, 0, 1])/
    (-12 + 5*d - 2*n1 - 4*n2 - 2*n6) - 
   (n1*j[p4a, 1 + n1, -1 + n2, 0, 0, 2, -1 + n6, 1, 1, 0, 1, 0, 0, 0, 1])/
    ((-1 + n6)*(12 - 5*d + 2*n1 + 4*n2 + 2*n6)) + 
   ((4 - d + 2*n1)*j[p4a, 1 + n1, n2, 0, 0, 0, n6, 1, 1, 0, 1, 0, 0, 0, 1])/
    (-12 + 5*d - 2*n1 - 4*n2 - 2*n6) + 
   ((-4 + 5*d - d^2 - 3*n1 + 2*d*n1 - n1^2 - 8*n2 + 2*d*n2 - n1*n2 - 4*n6 + 
      d*n6 - 2*n1*n6)*j[p4a, 1 + n1, n2, 0, 0, 1, -1 + n6, 1, 1, 0, 1, 0, 0, 
      0, 1])/((-12 + 5*d - 2*n1 - 4*n2 - 2*n6)*(-1 + n6)) + 
   ((4 - d + n1)*j[p4a, 1 + n1, n2, 0, 0, 1, -1 + n6, 2, 0, 0, 1, 0, 0, 0, 
      1])/((-12 + 5*d - 2*n1 - 4*n2 - 2*n6)*(-1 + n6)) + 
   (2*n1*j[p4a, 1 + n1, n2, 0, 0, 1, n6, 1, 1, 0, 0, 0, 0, 0, 1])/
    (12 - 5*d + 2*n1 + 4*n2 + 2*n6) + 
   (n1*j[p4a, 1 + n1, n2, 0, 0, 2, -2 + n6, 1, 1, 0, 1, 0, 0, 0, 1])/
    ((-1 + n6)*(12 - 5*d + 2*n1 + 4*n2 + 2*n6)) + 
   (n1*n2*j[p4a, 1 + n1, 1 + n2, 0, 0, 1, -1 + n6, 1, 1, 0, 0, 0, 0, 0, 1])/
    ((-1 + n6)*(12 - 5*d + 2*n1 + 4*n2 + 2*n6)) - 
   (n1*(1 + n1)*j[p4a, 2 + n1, -1 + n2, 0, 0, 1, -1 + n6, 1, 1, 0, 1, 0, 0, 
      0, 1])/((-1 + n6)*(12 - 5*d + 2*n1 + 4*n2 + 2*n6)) + 
   ((n1 + n1^2)*j[p4a, 2 + n1, n2, 0, 0, 1, -1 + n6, 1, 1, 0, 0, 0, 0, 0, 1])/
    ((-1 + n6)*(12 - 5*d + 2*n1 + 4*n2 + 2*n6)), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 0 && n12 == 0 && n13 == 0 && n14 == 1 && n4 == 0 && 
    n5 == 1 && n6 == 1 && n7 == 1 && n8 == 1 && n9 == 0 && n3 != 0 -> 
  ((316 - 372*d + 143*d^2 - 18*d^3 + 222*n1 - 159*d*n1 + 28*d^2*n1 + 
      32*n1^2 - 10*d*n1^2 + 108*n2 - 90*d*n2 + 18*d^2*n2 + 62*n1*n2 - 
      22*d*n1*n2 + 4*n1^2*n2 + 8*n2^2 - 4*d*n2^2 + 4*n1*n2^2 + 206*n3 - 
      155*d*n3 + 29*d^2*n3 + 84*n1*n3 - 31*d*n1*n3 + 8*n1^2*n3 + 62*n2*n3 - 
      24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 36*n3^2 - 13*d*n3^2 + 
      6*n1*n3^2 + 6*n2*n3^2 + 2*n3^3)*j[p4a, -1 + n1, -1 + n2, 1 + n3, 0, 1, 
      1, 1, 1, 0, 2, 0, 0, 0, 1])/(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 
     114*d^4 + 4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
     723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
     9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
     510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
     2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
     84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
     137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 
     14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 
     126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 
     392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 
     304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 
     92*n2*n3^2 + 32*d*n2*n3^2 - 12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 
     10*n1*n3^3 - 10*n2*n3^3 - 2*n3^4) + 
   ((-868 + 952*d - 347*d^2 + 42*d^3 - 422*n1 + 303*d*n1 - 54*d^2*n1 - 
      58*n1^2 + 20*d*n1^2 - 2*n1^3 - 784*n2 + 570*d*n2 - 103*d^2*n2 - 
      260*n1*n2 + 91*d*n1*n2 - 16*n1^2*n2 - 204*n2^2 + 74*d*n2^2 - 
      34*n1*n2^2 - 16*n2^3 - 82*n3 + 65*d*n3 - 13*d^2*n3 - 30*n1*n3 + 
      13*d*n1*n3 - 4*n1^2*n3 - 104*n2*n3 + 39*d*n2*n3 - 20*n1*n2*n3 - 
      18*n2^2*n3 + 20*n3^2 - 7*d*n3^2 + 4*n1*n3^2 + 2*n3^3)*
     j[p4a, -1 + n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 2, 0, 1, 0, 0, 0, 1])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) + ((13512 - 18724*d + 9708*d^2 - 2232*d^3 + 192*d^4 + 5632*n1 - 
      5750*d*n1 + 1951*d^2*n1 - 220*d^3*n1 + 720*n1^2 - 475*d*n1^2 + 
      78*d^2*n1^2 + 26*n1^3 - 8*d*n1^3 + 13268*n2 - 13608*d*n2 + 
      4643*d^2*n2 - 527*d^3*n2 + 3866*n1*n2 - 2591*d*n1*n2 + 433*d^2*n1*n2 + 
      290*n1^2*n2 - 94*d*n1^2*n2 + 4*n1^3*n2 + 4516*n2^2 - 3062*d*n2^2 + 
      518*d^2*n2^2 + 826*n1*n2^2 - 274*d*n1*n2^2 + 28*n1^2*n2^2 + 640*n2^3 - 
      216*d*n2^3 + 56*n1*n2^3 + 32*n2^4 + 5360*n3 - 5764*d*n3 + 2058*d^2*n3 - 
      244*d^3*n3 + 2036*n1*n3 - 1433*d*n1*n3 + 251*d^2*n1*n3 + 226*n1^2*n3 - 
      77*d*n1^2*n3 + 6*n1^3*n3 + 4634*n2*n3 - 3237*d*n2*n3 + 564*d^2*n2*n3 + 
      1058*n1*n2*n3 - 363*d*n1*n2*n3 + 50*n1^2*n2*n3 + 1162*n2^2*n3 - 
      400*d*n2^2*n3 + 122*n1*n2^2*n3 + 88*n2^3*n3 + 460*n3^2 - 368*d*n3^2 + 
      72*d^2*n3^2 + 172*n1*n3^2 - 65*d*n1*n3^2 + 14*n1^2*n3^2 + 428*n2*n3^2 - 
      155*d*n2*n3^2 + 60*n1*n2*n3^2 + 66*n2^2*n3^2 - 32*n3^3 + 8*d*n3^3 + 
      6*n2*n3^3 - 4*n3^4)*j[p4a, -1 + n1, -1 + n2, 1 + n3, 0, 2, 1, 1, 1, 0, 
      1, 0, 0, 0, 1])/((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 
      114*d^4 + 4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
      723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
      9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
      510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
      2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
      84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
      137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 
      10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 
      702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 
      26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 
      40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 
      48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((1 + n3)*(-13512 + 18724*d - 9708*d^2 + 2232*d^3 - 
      192*d^4 - 5632*n1 + 5750*d*n1 - 1951*d^2*n1 + 220*d^3*n1 - 720*n1^2 + 
      475*d*n1^2 - 78*d^2*n1^2 - 26*n1^3 + 8*d*n1^3 - 13268*n2 + 13608*d*n2 - 
      4643*d^2*n2 + 527*d^3*n2 - 3866*n1*n2 + 2591*d*n1*n2 - 433*d^2*n1*n2 - 
      290*n1^2*n2 + 94*d*n1^2*n2 - 4*n1^3*n2 - 4516*n2^2 + 3062*d*n2^2 - 
      518*d^2*n2^2 - 826*n1*n2^2 + 274*d*n1*n2^2 - 28*n1^2*n2^2 - 640*n2^3 + 
      216*d*n2^3 - 56*n1*n2^3 - 32*n2^4 - 5360*n3 + 5764*d*n3 - 2058*d^2*n3 + 
      244*d^3*n3 - 2036*n1*n3 + 1433*d*n1*n3 - 251*d^2*n1*n3 - 226*n1^2*n3 + 
      77*d*n1^2*n3 - 6*n1^3*n3 - 4634*n2*n3 + 3237*d*n2*n3 - 564*d^2*n2*n3 - 
      1058*n1*n2*n3 + 363*d*n1*n2*n3 - 50*n1^2*n2*n3 - 1162*n2^2*n3 + 
      400*d*n2^2*n3 - 122*n1*n2^2*n3 - 88*n2^3*n3 - 460*n3^2 + 368*d*n3^2 - 
      72*d^2*n3^2 - 172*n1*n3^2 + 65*d*n1*n3^2 - 14*n1^2*n3^2 - 428*n2*n3^2 + 
      155*d*n2*n3^2 - 60*n1*n2*n3^2 - 66*n2^2*n3^2 + 32*n3^3 - 8*d*n3^3 - 
      6*n2*n3^3 + 4*n3^4)*j[p4a, -1 + n1, -1 + n2, 2 + n3, 0, 1, 1, 1, 1, 0, 
      1, 0, 0, 0, 1])/((3 - d + n3)*(-7020 + 10020*d - 5365*d^2 + 1277*d^3 - 
      114*d^4 - 4286*n1 + 4615*d*n1 - 1656*d^2*n1 + 198*d^3*n1 - 1004*n1^2 + 
      723*d*n1^2 - 130*d^2*n1^2 - 106*n1^3 + 38*d*n1^3 - 4*n1^4 - 8548*n2 + 
      9150*d*n2 - 3264*d^2*n2 + 388*d^3*n2 - 4002*n1*n2 + 2858*d*n1*n2 - 
      510*d^2*n1*n2 - 622*n1^2*n2 + 222*d*n1^2*n2 - 32*n1^3*n2 - 3424*n2^2 + 
      2444*d*n2^2 - 436*d^2*n2^2 - 1076*n1*n2^2 + 384*d*n1*n2^2 - 
      84*n1^2*n2^2 - 560*n2^3 + 200*d*n2^3 - 88*n1*n2^3 - 32*n2^4 - 122*n3 + 
      137*d*n3 - 53*d^2*n3 + 7*d^3*n3 - 38*n1*n3 + 41*d*n1*n3 - 
      10*d^2*n1*n3 - 14*n1^2*n3 + 7*d*n1^2*n3 - 2*n1^3*n3 - 978*n2*n3 + 
      702*d*n2*n3 - 126*d^2*n2*n3 - 322*n1*n2*n3 + 116*d*n1*n2*n3 - 
      26*n1^2*n2*n3 - 392*n2^2*n3 + 140*d*n2^2*n3 - 64*n1*n2^2*n3 - 
      40*n2^3*n3 + 426*n3^2 - 304*d*n3^2 + 54*d^2*n3^2 + 138*n1*n3^2 - 
      48*d*n1*n3^2 + 10*n1^2*n3^2 + 92*n2*n3^2 - 32*d*n2*n3^2 + 
      12*n1*n2*n3^2 + 58*n3^3 - 21*d*n3^3 + 10*n1*n3^3 + 10*n2*n3^3 + 
      2*n3^4)) + ((12180 - 16846*d + 8720*d^2 - 2002*d^3 + 172*d^4 + 
      5122*n1 - 5229*d*n1 + 1774*d^2*n1 - 200*d^3*n1 + 663*n1^2 - 
      438*d*n1^2 + 72*d^2*n1^2 + 26*n1^3 - 8*d*n1^3 + 12716*n2 - 13052*d*n2 + 
      4456*d^2*n2 - 506*d^3*n2 + 3812*n1*n2 - 2552*d*n1*n2 + 426*d^2*n1*n2 + 
      284*n1^2*n2 - 92*d*n1^2*n2 + 4*n1^3*n2 + 4456*n2^2 - 3024*d*n2^2 + 
      512*d^2*n2^2 + 832*n1*n2^2 - 276*d*n1*n2^2 + 28*n1^2*n2^2 + 640*n2^3 - 
      216*d*n2^3 + 56*n1*n2^3 + 32*n2^4 + 4148*n3 - 4466*d*n3 + 1598*d^2*n3 - 
      190*d^3*n3 + 1611*n1*n3 - 1144*d*n1*n3 + 202*d^2*n1*n3 + 192*n1^2*n3 - 
      66*d*n1^2*n3 + 6*n1^3*n3 + 4198*n2*n3 - 2942*d*n2*n3 + 514*d^2*n2*n3 + 
      1016*n1*n2*n3 - 348*d*n1*n2*n3 + 48*n1^2*n2*n3 + 1124*n2^2*n3 - 
      388*d*n2^2*n3 + 124*n1*n2^2*n3 + 88*n2^3*n3 + 78*n3^2 - 90*d*n3^2 + 
      22*d^2*n3^2 + 60*n1*n3^2 - 27*d*n1*n3^2 + 9*n1^2*n3^2 + 320*n2*n3^2 - 
      118*d*n2*n3^2 + 52*n1*n2*n3^2 + 60*n2^2*n3^2 - 80*n3^3 + 26*d*n3^3 - 
      9*n1*n3^3 - 2*n2*n3^3 - 6*n3^4)*j[p4a, -1 + n1, n2, 1 + n3, 0, 1, 0, 1, 
      2, 0, 1, 0, 0, 0, 1])/((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 
      1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 
      1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 
      8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 
      2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 
      32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 
      384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 
      32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 
      41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 
      978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
      116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
      64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
      138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((-316 + 372*d - 143*d^2 + 18*d^3 - 222*n1 + 159*d*n1 - 
      28*d^2*n1 - 32*n1^2 + 10*d*n1^2 - 108*n2 + 90*d*n2 - 18*d^2*n2 - 
      62*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 8*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
      206*n3 + 155*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
      62*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 36*n3^2 + 13*d*n3^2 - 
      6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3)*j[p4a, -1 + n1, n2, 1 + n3, 0, 1, 1, 0, 
      1, 0, 2, 0, 0, 0, 1])/(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 
     4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
     723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
     9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
     510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
     2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
     84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
     137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 
     14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 
     126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 
     392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 
     304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 
     92*n2*n3^2 + 32*d*n2*n3^2 - 12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 
     10*n1*n3^3 - 10*n2*n3^3 - 2*n3^4) + 
   ((996 - 1058*d + 374*d^2 - 44*d^3 + 370*n1 - 261*d*n1 + 46*d^2*n1 + 
      45*n1^2 - 16*d*n1^2 + 2*n1^3 + 860*n2 - 604*d*n2 + 106*d^2*n2 + 
      216*n1*n2 - 76*d*n1*n2 + 14*n1^2*n2 + 216*n2^2 - 76*d*n2^2 + 
      28*n1*n2^2 + 16*n2^3 + 132*n3 - 98*d*n3 + 18*d^2*n3 + 31*n1*n3 - 
      11*d*n1*n3 + n1^2*n3 + 126*n2*n3 - 44*d*n2*n3 + 14*n1*n2*n3 + 
      20*n2^2*n3 - 14*n3^2 + 4*d*n3^2 - n1*n3^2 + 2*n2*n3^2 - 2*n3^3)*
     j[p4a, -1 + n1, n2, 1 + n3, 0, 1, 1, 0, 2, 0, 1, 0, 0, 0, 1])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) + ((-316 + 372*d - 143*d^2 + 18*d^3 - 222*n1 + 159*d*n1 - 
      28*d^2*n1 - 32*n1^2 + 10*d*n1^2 - 108*n2 + 90*d*n2 - 18*d^2*n2 - 
      62*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 8*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
      206*n3 + 155*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
      62*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 36*n3^2 + 13*d*n3^2 - 
      6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3)*j[p4a, -1 + n1, n2, 1 + n3, 0, 1, 1, 1, 
      0, 0, 2, 0, 0, 0, 1])/(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 
     4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
     723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
     9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
     510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
     2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
     84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
     137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 
     14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 
     126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 
     392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 
     304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 
     92*n2*n3^2 + 32*d*n2*n3^2 - 12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 
     10*n1*n3^3 - 10*n2*n3^3 - 2*n3^4) + 
   ((-22752 + 34368*d - 20172*d^2 + 5686*d^3 - 754*d^4 + 36*d^5 - 11560*n1 + 
      13306*d*n1 - 5515*d^2*n1 + 956*d^3*n1 - 56*d^4*n1 - 1566*n1^2 + 
      1219*d*n1^2 - 292*d^2*n1^2 + 20*d^3*n1^2 - 32*n1^3 + 10*d*n1^3 - 
      2720*n2 - 1620*d*n2 + 3614*d^2*n2 - 1464*d^3*n2 + 180*d^4*n2 + 
      284*n1*n2 - 1990*d*n1*n2 + 1239*d^2*n1*n2 - 202*d^3*n1*n2 + 
      376*n1^2*n2 - 369*d*n1^2*n2 + 80*d^2*n1^2*n2 + 28*n1^3*n2 - 
      10*d*n1^3*n2 + 10000*n2^2 - 12048*d*n2^2 + 4718*d^2*n2^2 - 
      604*d^3*n2^2 + 3448*n1*n2^2 - 2636*d*n1*n2^2 + 494*d^2*n1*n2^2 + 
      298*n1^2*n2^2 - 106*d*n1^2*n2^2 + 4*n1^3*n2^2 + 4416*n2^3 - 
      3236*d*n2^3 + 588*d^2*n2^3 + 860*n1*n2^3 - 304*d*n1*n2^3 + 
      28*n1^2*n2^3 + 656*n2^4 - 232*d*n2^4 + 56*n1*n2^4 + 32*n2^5 - 
      27472*n3 + 36318*d*n3 - 17799*d^2*n3 + 3827*d^3*n3 - 304*d^4*n3 - 
      12164*n1*n3 + 11554*d*n1*n3 - 3597*d^2*n1*n3 + 366*d^3*n1*n3 - 
      1504*n1^2*n3 + 876*d*n1^2*n3 - 124*d^2*n1^2*n3 - 34*n1^3*n3 + 
      8*d*n1^3*n3 - 15840*n2*n3 + 14220*d*n2*n3 - 4111*d^2*n2*n3 + 
      377*d^3*n2*n3 - 4084*n1*n2*n3 + 2184*d*n1*n2*n3 - 268*d^2*n1*n2*n3 - 
      156*n1^2*n2*n3 + 23*d*n1^2*n2*n3 + 4*n1^3*n2*n3 - 664*n2^2*n3 - 
      134*d*n2^2*n3 + 126*d^2*n2^2*n3 + 252*n1*n2^2*n3 - 152*d*n1*n2^2*n3 + 
      34*n1^2*n2^2*n3 + 656*n2^3*n3 - 268*d*n2^3*n3 + 96*n1*n2^3*n3 + 
      72*n2^4*n3 - 8974*n3^2 + 9437*d*n3^2 - 3275*d^2*n3^2 + 375*d^3*n3^2 - 
      3414*n1*n3^2 + 2306*d*n1*n3^2 - 384*d^2*n1*n3^2 - 356*n1^2*n3^2 + 
      111*d*n1^2*n3^2 - 6*n1^3*n3^2 - 5852*n2*n3^2 + 3863*d*n2*n3^2 - 
      630*d^2*n2*n3^2 - 1252*n1*n2*n3^2 + 390*d*n1*n2*n3^2 - 
      44*n1^2*n2*n3^2 - 842*n2^2*n3^2 + 252*d*n2^2*n3^2 - 60*n1*n2^2*n3^2 - 
      8*n2^3*n3^2 - 1010*n3^3 + 770*d*n3^3 - 144*d^2*n3^3 - 312*n1*n3^3 + 
      114*d*n1*n3^3 - 22*n1^2*n3^3 - 656*n2*n3^3 + 229*d*n2*n3^3 - 
      84*n1*n2*n3^3 - 70*n2^2*n3^3 - 18*n3^4 + 11*d*n3^4 - 6*n1*n3^4 - 
      20*n2*n3^4 + 2*n3^5)*j[p4a, -1 + n1, n2, 1 + n3, 0, 1, 1, 1, 1, 0, 1, 
      0, 0, 0, 1])/((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 
      114*d^4 + 4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
      723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
      9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
      510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
      2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
      84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
      137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 
      10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 
      702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 
      26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 
      40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 
      48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((-316 + 372*d - 143*d^2 + 18*d^3 - 222*n1 + 159*d*n1 - 
      28*d^2*n1 - 32*n1^2 + 10*d*n1^2 - 108*n2 + 90*d*n2 - 18*d^2*n2 - 
      62*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 8*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
      206*n3 + 155*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
      62*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 36*n3^2 + 13*d*n3^2 - 
      6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3)*j[p4a, -1 + n1, n2, 1 + n3, 0, 1, 1, 1, 
      1, 0, 2, 0, 0, 0, 1])/(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 
     4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
     723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
     9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
     510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
     2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
     84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
     137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 
     14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 
     126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 
     392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 
     304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 
     92*n2*n3^2 + 32*d*n2*n3^2 - 12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 
     10*n1*n3^3 - 10*n2*n3^3 - 2*n3^4) + 
   ((-13128 + 18278*d - 9521*d^2 + 2199*d^3 - 190*d^4 - 5788*n1 + 5928*d*n1 - 
      2017*d^2*n1 + 228*d^3*n1 - 759*n1^2 + 500*d*n1^2 - 82*d^2*n1^2 - 
      26*n1^3 + 8*d*n1^3 - 13040*n2 + 13430*d*n2 - 4600*d^2*n2 + 524*d^3*n2 - 
      3998*n1*n2 + 2680*d*n1*n2 - 448*d^2*n1*n2 - 296*n1^2*n2 + 
      96*d*n1^2*n2 - 4*n1^3*n2 - 4480*n2^2 + 3044*d*n2^2 - 516*d^2*n2^2 - 
      844*n1*n2^2 + 280*d*n1*n2^2 - 28*n1^2*n2^2 - 640*n2^3 + 216*d*n2^3 - 
      56*n1*n2^3 - 32*n2^4 - 5082*n3 + 5509*d*n3 - 1983*d^2*n3 + 237*d^3*n3 - 
      2085*n1*n3 + 1480*d*n1*n3 - 261*d^2*n1*n3 - 248*n1^2*n3 + 
      84*d*n1^2*n3 - 6*n1^3*n3 - 4492*n2*n3 + 3166*d*n2*n3 - 556*d^2*n2*n3 - 
      1120*n1*n2*n3 + 384*d*n1*n2*n3 - 52*n1^2*n2*n3 - 1144*n2^2*n3 + 
      396*d*n2^2*n3 - 128*n1*n2^2*n3 - 88*n2^3*n3 - 392*n3^2 + 320*d*n3^2 - 
      64*d^2*n3^2 - 162*n1*n3^2 + 64*d*n1*n3^2 - 17*n1^2*n3^2 - 400*n2*n3^2 + 
      148*d*n2*n3^2 - 66*n1*n2*n3^2 - 64*n2^2*n3^2 + 38*n3^3 - 11*d*n3^3 + 
      3*n1*n3^3 - 4*n2*n3^3 + 4*n3^4)*j[p4a, -1 + n1, n2, 1 + n3, 0, 2, 0, 1, 
      1, 0, 1, 0, 0, 0, 1])/((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 
      1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 
      1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 
      8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 
      2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 
      32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 
      384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 
      32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 
      41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 
      978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
      116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
      64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
      138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((-996 + 1058*d - 374*d^2 + 44*d^3 - 370*n1 + 261*d*n1 - 
      46*d^2*n1 - 45*n1^2 + 16*d*n1^2 - 2*n1^3 - 860*n2 + 604*d*n2 - 
      106*d^2*n2 - 216*n1*n2 + 76*d*n1*n2 - 14*n1^2*n2 - 216*n2^2 + 
      76*d*n2^2 - 28*n1*n2^2 - 16*n2^3 - 132*n3 + 98*d*n3 - 18*d^2*n3 - 
      31*n1*n3 + 11*d*n1*n3 - n1^2*n3 - 126*n2*n3 + 44*d*n2*n3 - 
      14*n1*n2*n3 - 20*n2^2*n3 + 14*n3^2 - 4*d*n3^2 + n1*n3^2 - 2*n2*n3^2 + 
      2*n3^3)*j[p4a, -1 + n1, n2, 1 + n3, 0, 2, 1, 0, 1, 0, 1, 0, 0, 0, 1])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) - ((1 + n3)*(-10140 + 14108*d - 7341*d^2 + 1693*d^3 - 146*d^4 - 
      4678*n1 + 4775*d*n1 - 1618*d^2*n1 + 182*d^3*n1 - 624*n1^2 + 
      407*d*n1^2 - 66*d^2*n1^2 - 20*n1^3 + 6*d*n1^3 - 10460*n2 + 10758*d*n2 - 
      3678*d^2*n2 + 418*d^3*n2 - 3350*n1*n2 + 2236*d*n1*n2 - 372*d^2*n1*n2 - 
      254*n1^2*n2 + 82*d*n1^2*n2 - 4*n1^3*n2 - 3832*n2^2 + 2600*d*n2^2 - 
      440*d^2*n2^2 - 760*n1*n2^2 + 252*d*n1*n2^2 - 28*n1^2*n2^2 - 592*n2^3 + 
      200*d*n2^3 - 56*n1*n2^3 - 32*n2^4 - 3690*n3 + 4025*d*n3 - 1457*d^2*n3 + 
      175*d^3*n3 - 1622*n1*n3 + 1155*d*n1*n3 - 204*d^2*n1*n3 - 200*n1^2*n3 + 
      67*d*n1^2*n3 - 4*n1^3*n3 - 3254*n2*n3 + 2304*d*n2*n3 - 406*d^2*n2*n3 - 
      862*n1*n2*n3 + 294*d*n1*n2*n3 - 38*n1^2*n2*n3 - 868*n2^2*n3 + 
      300*d*n2^2*n3 - 100*n1*n2^2*n3 - 72*n2^3*n3 - 302*n3^2 + 248*d*n3^2 - 
      50*d^2*n3^2 - 134*n1*n3^2 + 54*d*n1*n3^2 - 16*n1^2*n3^2 - 268*n2*n3^2 + 
      102*d*n2*n3^2 - 52*n1*n2*n3^2 - 44*n2^2*n3^2 + 18*n3^3 - 5*d*n3^3 + 
      2*n1*n3^3 - 2*n2*n3^3 + 2*n3^4)*j[p4a, -1 + n1, n2, 2 + n3, 0, 1, 1, 0, 
      1, 0, 1, 0, 0, 0, 1])/((3 - d + n3)*(-7020 + 10020*d - 5365*d^2 + 
      1277*d^3 - 114*d^4 - 4286*n1 + 4615*d*n1 - 1656*d^2*n1 + 198*d^3*n1 - 
      1004*n1^2 + 723*d*n1^2 - 130*d^2*n1^2 - 106*n1^3 + 38*d*n1^3 - 4*n1^4 - 
      8548*n2 + 9150*d*n2 - 3264*d^2*n2 + 388*d^3*n2 - 4002*n1*n2 + 
      2858*d*n1*n2 - 510*d^2*n1*n2 - 622*n1^2*n2 + 222*d*n1^2*n2 - 
      32*n1^3*n2 - 3424*n2^2 + 2444*d*n2^2 - 436*d^2*n2^2 - 1076*n1*n2^2 + 
      384*d*n1*n2^2 - 84*n1^2*n2^2 - 560*n2^3 + 200*d*n2^3 - 88*n1*n2^3 - 
      32*n2^4 - 122*n3 + 137*d*n3 - 53*d^2*n3 + 7*d^3*n3 - 38*n1*n3 + 
      41*d*n1*n3 - 10*d^2*n1*n3 - 14*n1^2*n3 + 7*d*n1^2*n3 - 2*n1^3*n3 - 
      978*n2*n3 + 702*d*n2*n3 - 126*d^2*n2*n3 - 322*n1*n2*n3 + 
      116*d*n1*n2*n3 - 26*n1^2*n2*n3 - 392*n2^2*n3 + 140*d*n2^2*n3 - 
      64*n1*n2^2*n3 - 40*n2^3*n3 + 426*n3^2 - 304*d*n3^2 + 54*d^2*n3^2 + 
      138*n1*n3^2 - 48*d*n1*n3^2 + 10*n1^2*n3^2 + 92*n2*n3^2 - 32*d*n2*n3^2 + 
      12*n1*n2*n3^2 + 58*n3^3 - 21*d*n3^3 + 10*n1*n3^3 + 10*n2*n3^3 + 
      2*n3^4)) - (2*(1 + n3)*(-13128 + 18278*d - 9521*d^2 + 2199*d^3 - 
      190*d^4 - 5788*n1 + 5928*d*n1 - 2017*d^2*n1 + 228*d^3*n1 - 759*n1^2 + 
      500*d*n1^2 - 82*d^2*n1^2 - 26*n1^3 + 8*d*n1^3 - 13040*n2 + 13430*d*n2 - 
      4600*d^2*n2 + 524*d^3*n2 - 3998*n1*n2 + 2680*d*n1*n2 - 448*d^2*n1*n2 - 
      296*n1^2*n2 + 96*d*n1^2*n2 - 4*n1^3*n2 - 4480*n2^2 + 3044*d*n2^2 - 
      516*d^2*n2^2 - 844*n1*n2^2 + 280*d*n1*n2^2 - 28*n1^2*n2^2 - 640*n2^3 + 
      216*d*n2^3 - 56*n1*n2^3 - 32*n2^4 - 5082*n3 + 5509*d*n3 - 1983*d^2*n3 + 
      237*d^3*n3 - 2085*n1*n3 + 1480*d*n1*n3 - 261*d^2*n1*n3 - 248*n1^2*n3 + 
      84*d*n1^2*n3 - 6*n1^3*n3 - 4492*n2*n3 + 3166*d*n2*n3 - 556*d^2*n2*n3 - 
      1120*n1*n2*n3 + 384*d*n1*n2*n3 - 52*n1^2*n2*n3 - 1144*n2^2*n3 + 
      396*d*n2^2*n3 - 128*n1*n2^2*n3 - 88*n2^3*n3 - 392*n3^2 + 320*d*n3^2 - 
      64*d^2*n3^2 - 162*n1*n3^2 + 64*d*n1*n3^2 - 17*n1^2*n3^2 - 400*n2*n3^2 + 
      148*d*n2*n3^2 - 66*n1*n2*n3^2 - 64*n2^2*n3^2 + 38*n3^3 - 11*d*n3^3 + 
      3*n1*n3^3 - 4*n2*n3^3 + 4*n3^4)*j[p4a, -1 + n1, n2, 2 + n3, 0, 1, 1, 1, 
      0, 0, 1, 0, 0, 0, 1])/((3 - d + n3)*(-7020 + 10020*d - 5365*d^2 + 
      1277*d^3 - 114*d^4 - 4286*n1 + 4615*d*n1 - 1656*d^2*n1 + 198*d^3*n1 - 
      1004*n1^2 + 723*d*n1^2 - 130*d^2*n1^2 - 106*n1^3 + 38*d*n1^3 - 4*n1^4 - 
      8548*n2 + 9150*d*n2 - 3264*d^2*n2 + 388*d^3*n2 - 4002*n1*n2 + 
      2858*d*n1*n2 - 510*d^2*n1*n2 - 622*n1^2*n2 + 222*d*n1^2*n2 - 
      32*n1^3*n2 - 3424*n2^2 + 2444*d*n2^2 - 436*d^2*n2^2 - 1076*n1*n2^2 + 
      384*d*n1*n2^2 - 84*n1^2*n2^2 - 560*n2^3 + 200*d*n2^3 - 88*n1*n2^3 - 
      32*n2^4 - 122*n3 + 137*d*n3 - 53*d^2*n3 + 7*d^3*n3 - 38*n1*n3 + 
      41*d*n1*n3 - 10*d^2*n1*n3 - 14*n1^2*n3 + 7*d*n1^2*n3 - 2*n1^3*n3 - 
      978*n2*n3 + 702*d*n2*n3 - 126*d^2*n2*n3 - 322*n1*n2*n3 + 
      116*d*n1*n2*n3 - 26*n1^2*n2*n3 - 392*n2^2*n3 + 140*d*n2^2*n3 - 
      64*n1*n2^2*n3 - 40*n2^3*n3 + 426*n3^2 - 304*d*n3^2 + 54*d^2*n3^2 + 
      138*n1*n3^2 - 48*d*n1*n3^2 + 10*n1^2*n3^2 + 92*n2*n3^2 - 32*d*n2*n3^2 + 
      12*n1*n2*n3^2 + 58*n3^3 - 21*d*n3^3 + 10*n1*n3^3 + 10*n2*n3^3 + 
      2*n3^4)) + ((1 + n3)*(-13512 + 18724*d - 9708*d^2 + 2232*d^3 - 
      192*d^4 - 5632*n1 + 5750*d*n1 - 1951*d^2*n1 + 220*d^3*n1 - 720*n1^2 + 
      475*d*n1^2 - 78*d^2*n1^2 - 26*n1^3 + 8*d*n1^3 - 13268*n2 + 13608*d*n2 - 
      4643*d^2*n2 + 527*d^3*n2 - 3866*n1*n2 + 2591*d*n1*n2 - 433*d^2*n1*n2 - 
      290*n1^2*n2 + 94*d*n1^2*n2 - 4*n1^3*n2 - 4516*n2^2 + 3062*d*n2^2 - 
      518*d^2*n2^2 - 826*n1*n2^2 + 274*d*n1*n2^2 - 28*n1^2*n2^2 - 640*n2^3 + 
      216*d*n2^3 - 56*n1*n2^3 - 32*n2^4 - 5360*n3 + 5764*d*n3 - 2058*d^2*n3 + 
      244*d^3*n3 - 2036*n1*n3 + 1433*d*n1*n3 - 251*d^2*n1*n3 - 226*n1^2*n3 + 
      77*d*n1^2*n3 - 6*n1^3*n3 - 4634*n2*n3 + 3237*d*n2*n3 - 564*d^2*n2*n3 - 
      1058*n1*n2*n3 + 363*d*n1*n2*n3 - 50*n1^2*n2*n3 - 1162*n2^2*n3 + 
      400*d*n2^2*n3 - 122*n1*n2^2*n3 - 88*n2^3*n3 - 460*n3^2 + 368*d*n3^2 - 
      72*d^2*n3^2 - 172*n1*n3^2 + 65*d*n1*n3^2 - 14*n1^2*n3^2 - 428*n2*n3^2 + 
      155*d*n2*n3^2 - 60*n1*n2*n3^2 - 66*n2^2*n3^2 + 32*n3^3 - 8*d*n3^3 - 
      6*n2*n3^3 + 4*n3^4)*j[p4a, -1 + n1, n2, 2 + n3, 0, 1, 1, 1, 1, 0, 1, 0, 
      -1, 0, 1])/((3 - d + n3)*(-7020 + 10020*d - 5365*d^2 + 1277*d^3 - 
      114*d^4 - 4286*n1 + 4615*d*n1 - 1656*d^2*n1 + 198*d^3*n1 - 1004*n1^2 + 
      723*d*n1^2 - 130*d^2*n1^2 - 106*n1^3 + 38*d*n1^3 - 4*n1^4 - 8548*n2 + 
      9150*d*n2 - 3264*d^2*n2 + 388*d^3*n2 - 4002*n1*n2 + 2858*d*n1*n2 - 
      510*d^2*n1*n2 - 622*n1^2*n2 + 222*d*n1^2*n2 - 32*n1^3*n2 - 3424*n2^2 + 
      2444*d*n2^2 - 436*d^2*n2^2 - 1076*n1*n2^2 + 384*d*n1*n2^2 - 
      84*n1^2*n2^2 - 560*n2^3 + 200*d*n2^3 - 88*n1*n2^3 - 32*n2^4 - 122*n3 + 
      137*d*n3 - 53*d^2*n3 + 7*d^3*n3 - 38*n1*n3 + 41*d*n1*n3 - 
      10*d^2*n1*n3 - 14*n1^2*n3 + 7*d*n1^2*n3 - 2*n1^3*n3 - 978*n2*n3 + 
      702*d*n2*n3 - 126*d^2*n2*n3 - 322*n1*n2*n3 + 116*d*n1*n2*n3 - 
      26*n1^2*n2*n3 - 392*n2^2*n3 + 140*d*n2^2*n3 - 64*n1*n2^2*n3 - 
      40*n2^3*n3 + 426*n3^2 - 304*d*n3^2 + 54*d^2*n3^2 + 138*n1*n3^2 - 
      48*d*n1*n3^2 + 10*n1^2*n3^2 + 92*n2*n3^2 - 32*d*n2*n3^2 + 
      12*n1*n2*n3^2 + 58*n3^3 - 21*d*n3^3 + 10*n1*n3^3 + 10*n2*n3^3 + 
      2*n3^4)) - ((1 + n3)*(-16116 + 22448*d - 11701*d^2 + 2705*d^3 - 
      234*d^4 - 6898*n1 + 7081*d*n1 - 2416*d^2*n1 + 274*d^3*n1 - 894*n1^2 + 
      593*d*n1^2 - 98*d^2*n1^2 - 32*n1^3 + 10*d*n1^3 - 15620*n2 + 
      16102*d*n2 - 5522*d^2*n2 + 630*d^3*n2 - 4646*n1*n2 + 3124*d*n1*n2 - 
      524*d^2*n1*n2 - 338*n1^2*n2 + 110*d*n1^2*n2 - 4*n1^3*n2 - 5128*n2^2 + 
      3488*d*n2^2 - 592*d^2*n2^2 - 928*n1*n2^2 + 308*d*n1*n2^2 - 
      28*n1^2*n2^2 - 688*n2^3 + 232*d*n2^3 - 56*n1*n2^3 - 32*n2^4 - 6474*n3 + 
      6993*d*n3 - 2509*d^2*n3 + 299*d^3*n3 - 2548*n1*n3 + 1805*d*n1*n3 - 
      318*d^2*n1*n3 - 296*n1^2*n3 + 101*d*n1^2*n3 - 8*n1^3*n3 - 5730*n2*n3 + 
      4028*d*n2*n3 - 706*d^2*n2*n3 - 1378*n1*n2*n3 + 474*d*n1*n2*n3 - 
      66*n1^2*n2*n3 - 1420*n2^2*n3 + 492*d*n2^2*n3 - 156*n1*n2^2*n3 - 
      104*n2^3*n3 - 482*n3^2 + 392*d*n3^2 - 78*d^2*n3^2 - 190*n1*n3^2 + 
      74*d*n1*n3^2 - 18*n1^2*n3^2 - 532*n2*n3^2 + 194*d*n2*n3^2 - 
      80*n1*n2*n3^2 - 84*n2^2*n3^2 + 58*n3^3 - 17*d*n3^3 + 4*n1*n3^3 - 
      6*n2*n3^3 + 6*n3^4)*j[p4a, -1 + n1, n2, 2 + n3, 0, 1, 1, 1, 1, 0, 1, 0, 
      0, -1, 1])/((3 - d + n3)*(-7020 + 10020*d - 5365*d^2 + 1277*d^3 - 
      114*d^4 - 4286*n1 + 4615*d*n1 - 1656*d^2*n1 + 198*d^3*n1 - 1004*n1^2 + 
      723*d*n1^2 - 130*d^2*n1^2 - 106*n1^3 + 38*d*n1^3 - 4*n1^4 - 8548*n2 + 
      9150*d*n2 - 3264*d^2*n2 + 388*d^3*n2 - 4002*n1*n2 + 2858*d*n1*n2 - 
      510*d^2*n1*n2 - 622*n1^2*n2 + 222*d*n1^2*n2 - 32*n1^3*n2 - 3424*n2^2 + 
      2444*d*n2^2 - 436*d^2*n2^2 - 1076*n1*n2^2 + 384*d*n1*n2^2 - 
      84*n1^2*n2^2 - 560*n2^3 + 200*d*n2^3 - 88*n1*n2^3 - 32*n2^4 - 122*n3 + 
      137*d*n3 - 53*d^2*n3 + 7*d^3*n3 - 38*n1*n3 + 41*d*n1*n3 - 
      10*d^2*n1*n3 - 14*n1^2*n3 + 7*d*n1^2*n3 - 2*n1^3*n3 - 978*n2*n3 + 
      702*d*n2*n3 - 126*d^2*n2*n3 - 322*n1*n2*n3 + 116*d*n1*n2*n3 - 
      26*n1^2*n2*n3 - 392*n2^2*n3 + 140*d*n2^2*n3 - 64*n1*n2^2*n3 - 
      40*n2^3*n3 + 426*n3^2 - 304*d*n3^2 + 54*d^2*n3^2 + 138*n1*n3^2 - 
      48*d*n1*n3^2 + 10*n1^2*n3^2 + 92*n2*n3^2 - 32*d*n2*n3^2 + 
      12*n1*n2*n3^2 + 58*n3^3 - 21*d*n3^3 + 10*n1*n3^3 + 10*n2*n3^3 + 
      2*n3^4)) + ((1 + n3)*(12180 - 16846*d + 8720*d^2 - 2002*d^3 + 172*d^4 + 
      5122*n1 - 5229*d*n1 + 1774*d^2*n1 - 200*d^3*n1 + 663*n1^2 - 
      438*d*n1^2 + 72*d^2*n1^2 + 26*n1^3 - 8*d*n1^3 + 12716*n2 - 13052*d*n2 + 
      4456*d^2*n2 - 506*d^3*n2 + 3812*n1*n2 - 2552*d*n1*n2 + 426*d^2*n1*n2 + 
      284*n1^2*n2 - 92*d*n1^2*n2 + 4*n1^3*n2 + 4456*n2^2 - 3024*d*n2^2 + 
      512*d^2*n2^2 + 832*n1*n2^2 - 276*d*n1*n2^2 + 28*n1^2*n2^2 + 640*n2^3 - 
      216*d*n2^3 + 56*n1*n2^3 + 32*n2^4 + 4148*n3 - 4466*d*n3 + 1598*d^2*n3 - 
      190*d^3*n3 + 1611*n1*n3 - 1144*d*n1*n3 + 202*d^2*n1*n3 + 192*n1^2*n3 - 
      66*d*n1^2*n3 + 6*n1^3*n3 + 4198*n2*n3 - 2942*d*n2*n3 + 514*d^2*n2*n3 + 
      1016*n1*n2*n3 - 348*d*n1*n2*n3 + 48*n1^2*n2*n3 + 1124*n2^2*n3 - 
      388*d*n2^2*n3 + 124*n1*n2^2*n3 + 88*n2^3*n3 + 78*n3^2 - 90*d*n3^2 + 
      22*d^2*n3^2 + 60*n1*n3^2 - 27*d*n1*n3^2 + 9*n1^2*n3^2 + 320*n2*n3^2 - 
      118*d*n2*n3^2 + 52*n1*n2*n3^2 + 60*n2^2*n3^2 - 80*n3^3 + 26*d*n3^3 - 
      9*n1*n3^3 - 2*n2*n3^3 - 6*n3^4)*j[p4a, -1 + n1, n2, 2 + n3, 0, 1, 1, 1, 
      1, 0, 1, 0, 0, 0, 0])/((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 
      1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 
      1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 
      8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 
      2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 
      32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 
      384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 
      32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 
      41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 
      978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
      116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
      64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
      138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) - (n2*(12180 - 16846*d + 8720*d^2 - 2002*d^3 + 172*d^4 + 
      5122*n1 - 5229*d*n1 + 1774*d^2*n1 - 200*d^3*n1 + 663*n1^2 - 
      438*d*n1^2 + 72*d^2*n1^2 + 26*n1^3 - 8*d*n1^3 + 12716*n2 - 13052*d*n2 + 
      4456*d^2*n2 - 506*d^3*n2 + 3812*n1*n2 - 2552*d*n1*n2 + 426*d^2*n1*n2 + 
      284*n1^2*n2 - 92*d*n1^2*n2 + 4*n1^3*n2 + 4456*n2^2 - 3024*d*n2^2 + 
      512*d^2*n2^2 + 832*n1*n2^2 - 276*d*n1*n2^2 + 28*n1^2*n2^2 + 640*n2^3 - 
      216*d*n2^3 + 56*n1*n2^3 + 32*n2^4 + 4148*n3 - 4466*d*n3 + 1598*d^2*n3 - 
      190*d^3*n3 + 1611*n1*n3 - 1144*d*n1*n3 + 202*d^2*n1*n3 + 192*n1^2*n3 - 
      66*d*n1^2*n3 + 6*n1^3*n3 + 4198*n2*n3 - 2942*d*n2*n3 + 514*d^2*n2*n3 + 
      1016*n1*n2*n3 - 348*d*n1*n2*n3 + 48*n1^2*n2*n3 + 1124*n2^2*n3 - 
      388*d*n2^2*n3 + 124*n1*n2^2*n3 + 88*n2^3*n3 + 78*n3^2 - 90*d*n3^2 + 
      22*d^2*n3^2 + 60*n1*n3^2 - 27*d*n1*n3^2 + 9*n1^2*n3^2 + 320*n2*n3^2 - 
      118*d*n2*n3^2 + 52*n1*n2*n3^2 + 60*n2^2*n3^2 - 80*n3^3 + 26*d*n3^3 - 
      9*n1*n3^3 - 2*n2*n3^3 - 6*n3^4)*j[p4a, -1 + n1, 1 + n2, 1 + n3, 0, 0, 
      1, 1, 1, 0, 1, 0, 0, 0, 1])/((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 
      1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 
      1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 
      8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 
      2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 
      32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 
      384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 
      32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 
      41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 
      978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
      116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
      64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
      138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + (n2*(12180 - 16846*d + 8720*d^2 - 2002*d^3 + 172*d^4 + 
      5122*n1 - 5229*d*n1 + 1774*d^2*n1 - 200*d^3*n1 + 663*n1^2 - 
      438*d*n1^2 + 72*d^2*n1^2 + 26*n1^3 - 8*d*n1^3 + 12716*n2 - 13052*d*n2 + 
      4456*d^2*n2 - 506*d^3*n2 + 3812*n1*n2 - 2552*d*n1*n2 + 426*d^2*n1*n2 + 
      284*n1^2*n2 - 92*d*n1^2*n2 + 4*n1^3*n2 + 4456*n2^2 - 3024*d*n2^2 + 
      512*d^2*n2^2 + 832*n1*n2^2 - 276*d*n1*n2^2 + 28*n1^2*n2^2 + 640*n2^3 - 
      216*d*n2^3 + 56*n1*n2^3 + 32*n2^4 + 4148*n3 - 4466*d*n3 + 1598*d^2*n3 - 
      190*d^3*n3 + 1611*n1*n3 - 1144*d*n1*n3 + 202*d^2*n1*n3 + 192*n1^2*n3 - 
      66*d*n1^2*n3 + 6*n1^3*n3 + 4198*n2*n3 - 2942*d*n2*n3 + 514*d^2*n2*n3 + 
      1016*n1*n2*n3 - 348*d*n1*n2*n3 + 48*n1^2*n2*n3 + 1124*n2^2*n3 - 
      388*d*n2^2*n3 + 124*n1*n2^2*n3 + 88*n2^3*n3 + 78*n3^2 - 90*d*n3^2 + 
      22*d^2*n3^2 + 60*n1*n3^2 - 27*d*n1*n3^2 + 9*n1^2*n3^2 + 320*n2*n3^2 - 
      118*d*n2*n3^2 + 52*n1*n2*n3^2 + 60*n2^2*n3^2 - 80*n3^3 + 26*d*n3^3 - 
      9*n1*n3^3 - 2*n2*n3^3 - 6*n3^4)*j[p4a, -1 + n1, 1 + n2, 1 + n3, 0, 1, 
      0, 1, 1, 0, 1, 0, 0, 0, 1])/((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 
      1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 
      1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 
      8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 
      2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 
      32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 
      384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 
      32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 
      41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 
      978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
      116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
      64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
      138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) - (n2*(996 - 1058*d + 374*d^2 - 44*d^3 + 370*n1 - 261*d*n1 + 
      46*d^2*n1 + 45*n1^2 - 16*d*n1^2 + 2*n1^3 + 860*n2 - 604*d*n2 + 
      106*d^2*n2 + 216*n1*n2 - 76*d*n1*n2 + 14*n1^2*n2 + 216*n2^2 - 
      76*d*n2^2 + 28*n1*n2^2 + 16*n2^3 + 132*n3 - 98*d*n3 + 18*d^2*n3 + 
      31*n1*n3 - 11*d*n1*n3 + n1^2*n3 + 126*n2*n3 - 44*d*n2*n3 + 
      14*n1*n2*n3 + 20*n2^2*n3 - 14*n3^2 + 4*d*n3^2 - n1*n3^2 + 2*n2*n3^2 - 
      2*n3^3)*j[p4a, -1 + n1, 1 + n2, 1 + n3, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 
      1])/(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 
     4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 
     130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 
     3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 
     622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 
     436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 
     200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 
     7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 
     7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 
     322*n1*n2*n3 - 116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 
     140*d*n2^2*n3 + 64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 
     54*d^2*n3^2 - 138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 
     32*d*n2*n3^2 - 12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 
     10*n2*n3^3 - 2*n3^4) + (n2*(996 - 1058*d + 374*d^2 - 44*d^3 + 370*n1 - 
      261*d*n1 + 46*d^2*n1 + 45*n1^2 - 16*d*n1^2 + 2*n1^3 + 860*n2 - 
      604*d*n2 + 106*d^2*n2 + 216*n1*n2 - 76*d*n1*n2 + 14*n1^2*n2 + 
      216*n2^2 - 76*d*n2^2 + 28*n1*n2^2 + 16*n2^3 + 132*n3 - 98*d*n3 + 
      18*d^2*n3 + 31*n1*n3 - 11*d*n1*n3 + n1^2*n3 + 126*n2*n3 - 44*d*n2*n3 + 
      14*n1*n2*n3 + 20*n2^2*n3 - 14*n3^2 + 4*d*n3^2 - n1*n3^2 + 2*n2*n3^2 - 
      2*n3^3)*j[p4a, -1 + n1, 1 + n2, 1 + n3, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 
      1])/(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 
     4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 
     130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 
     3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 
     622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 
     436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 
     200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 
     7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 
     7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 
     322*n1*n2*n3 - 116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 
     140*d*n2^2*n3 + 64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 
     54*d^2*n3^2 - 138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 
     32*d*n2*n3^2 - 12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 
     10*n2*n3^3 - 2*n3^4) + ((-316 + 372*d - 143*d^2 + 18*d^3 - 222*n1 + 
      159*d*n1 - 28*d^2*n1 - 32*n1^2 + 10*d*n1^2 - 108*n2 + 90*d*n2 - 
      18*d^2*n2 - 62*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 8*n2^2 + 4*d*n2^2 - 
      4*n1*n2^2 - 206*n3 + 155*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 
      8*n1^2*n3 - 62*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 36*n3^2 + 
      13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3)*j[p4a, n1, -2 + n2, 1 + n3, 
      0, 1, 1, 1, 1, 0, 2, 0, 0, 0, 1])/(7020 - 10020*d + 5365*d^2 - 
     1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 
     1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 
     8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 
     2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 
     32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 
     384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 
     32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 
     41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 
     978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) + ((-2232 + 2688*d - 1158*d^2 + 206*d^3 - 12*d^4 - 604*n1 + 
      336*d*n1 - 9*d^2*n1 - 12*d^3*n1 + 218*n1^2 - 203*d*n1^2 + 44*d^2*n1^2 + 
      60*n1^3 - 22*d*n1^3 + 2*n1^4 - 1288*n2 + 964*d*n2 - 194*d^2*n2 + 
      5*d^3*n2 - 92*n1*n2 - 90*d*n1*n2 + 44*d^2*n1*n2 + 148*n1^2*n2 - 
      65*d*n1^2*n2 + 16*n1^3*n2 - 216*n2^2 + 56*d*n2^2 + 8*d^2*n2^2 + 
      28*n1*n2^2 - 30*d*n1*n2^2 + 22*n1^2*n2^2 - 8*n2^3 - 4*d*n2^3 + 
      4*n1*n2^3 - 2108*n3 + 2140*d*n3 - 719*d^2*n3 + 80*d^3*n3 - 624*n1*n3 + 
      404*d*n1*n3 - 65*d^2*n1*n3 - 26*n1^2*n3 + 7*d*n1^2*n3 + 2*n1^3*n3 - 
      1684*n2*n3 + 1124*d*n2*n3 - 187*d^2*n2*n3 - 378*n1*n2*n3 + 
      123*d*n1*n2*n3 - 12*n1^2*n2*n3 - 396*n2^2*n3 + 132*d*n2^2*n3 - 
      50*n1*n2^2*n3 - 28*n2^3*n3 - 26*n3^2 + 13*d*n3^2 - d^2*n3^2 + 
      54*n1*n3^2 - 20*d*n1*n3^2 + 8*n1^2*n3^2 - 146*n2*n3^2 + 48*d*n2*n3^2 - 
      10*n1*n2*n3^2 - 28*n2^2*n3^2 + 72*n3^3 - 25*d*n3^3 + 14*n1*n3^3 + 
      6*n2*n3^3 + 6*n3^4)*j[p4a, n1, -2 + n2, 1 + n3, 0, 1, 1, 1, 2, 0, 1, 0, 
      0, 0, 1])/((-2 + d - n1 - 2*n2)*(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 
      114*d^4 + 4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
      723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
      9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
      510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
      2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
      84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
      137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 
      10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 
      702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 
      26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 
      40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 
      48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((-42568 + 79256*d - 58814*d^2 + 21744*d^3 - 4005*d^4 + 
      294*d^5 - 37860*n1 + 55096*d*n1 - 29953*d^2*n1 + 7209*d^3*n1 - 
      648*d^4*n1 - 11182*n1^2 + 11889*d*n1^2 - 4192*d^2*n1^2 + 490*d^3*n1^2 - 
      1326*n1^3 + 902*d*n1^3 - 152*d^2*n1^3 - 52*n1^4 + 16*d*n1^4 - 
      71824*n2 + 105040*d*n2 - 57416*d^2*n2 + 13902*d^3*n2 - 1258*d^4*n2 - 
      45892*n1*n2 + 49234*d*n1*n2 - 17538*d^2*n1*n2 + 2074*d^3*n1*n2 - 
      9138*n1^2*n2 + 6348*d*n1^2*n2 - 1096*d^2*n1^2*n2 - 620*n1^3*n2 + 
      204*d*n1^3*n2 - 8*n1^4*n2 - 42856*n2^2 + 46272*d*n2^2 - 
      16604*d^2*n2^2 + 1980*d^3*n2^2 - 18712*n1*n2^2 + 13180*d*n1*n2^2 - 
      2312*d^2*n1*n2^2 - 2240*n1^2*n2^2 + 764*d*n1^2*n2^2 - 64*n1^3*n2^2 - 
      11488*n2^3 + 8168*d*n2^3 - 1448*d^2*n2^3 - 3080*n1*n2^3 + 
      1072*d*n1*n2^3 - 168*n1^2*n2^3 - 1408*n2^4 + 496*d*n2^4 - 176*n1*n2^4 - 
      64*n2^5 - 25676*n3 + 38448*d*n3 - 21555*d^2*n3 + 5361*d^3*n3 - 
      499*d^4*n3 - 18316*n1*n3 + 20350*d*n1*n3 - 7517*d^2*n1*n3 + 
      923*d^3*n1*n3 - 4408*n1^2*n3 + 3215*d*n1^2*n3 - 584*d^2*n1^2*n3 - 
      416*n1^3*n3 + 148*d*n1^3*n3 - 12*n1^4*n3 - 36328*n2*n3 + 
      40312*d*n2*n3 - 14872*d^2*n2*n3 + 1824*d^3*n2*n3 - 18368*n1*n2*n3 + 
      13372*d*n1*n2*n3 - 2426*d^2*n1*n2*n3 - 2710*n1^2*n2*n3 + 
      966*d*n1^2*n2*n3 - 112*n1^3*n2*n3 - 17220*n2^2*n3 + 12548*d*n2^2*n3 - 
      2280*d^2*n2^2*n3 - 5396*n1*n2^2*n3 + 1932*d*n1*n2^2*n3 - 
      364*n1^2*n2^2*n3 - 3248*n2^3*n3 + 1168*d*n2^3*n3 - 472*n1*n2^3*n3 - 
      208*n2^4*n3 - 4526*n3^2 + 5145*d*n3^2 - 1952*d^2*n3^2 + 247*d^3*n3^2 - 
      2384*n1*n3^2 + 1829*d*n1*n3^2 - 350*d^2*n1*n3^2 - 434*n1^2*n3^2 + 
      166*d*n1^2*n3^2 - 26*n1^3*n3^2 - 5898*n2*n3^2 + 4424*d*n2*n3^2 - 
      828*d^2*n2*n3^2 - 2086*n1*n2*n3^2 + 776*d*n1*n2*n3^2 - 
      172*n1^2*n2*n3^2 - 2104*n2^2*n3^2 + 776*d*n2^2*n3^2 - 
      352*n1*n2^2*n3^2 - 216*n2^3*n3^2 + 126*n3^3 - 72*d*n3^3 + 9*d^2*n3^3 + 
      48*n1*n3^3 - 11*d*n1*n3^3 - 232*n2*n3^3 + 92*d*n2*n3^3 - 
      46*n1*n2*n3^3 - 68*n2^2*n3^3 + 94*n3^4 - 33*d*n3^4 + 16*n1*n3^4 + 
      10*n2*n3^4 + 6*n3^5)*j[p4a, n1, -2 + n2, 1 + n3, 0, 1, 1, 2, 1, 0, 1, 
      0, 0, 0, 1])/((-2 + d - n1 - 2*n2)*(-3 + d - n3)*
     (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
      1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
      106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
      388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
      222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
      1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
      88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
      38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
      2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
      116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
      64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
      138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((-316 + 372*d - 143*d^2 + 18*d^3 - 222*n1 + 159*d*n1 - 
      28*d^2*n1 - 32*n1^2 + 10*d*n1^2 - 108*n2 + 90*d*n2 - 18*d^2*n2 - 
      62*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 8*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
      206*n3 + 155*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
      62*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 36*n3^2 + 13*d*n3^2 - 
      6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3)*j[p4a, n1, -2 + n2, 1 + n3, 0, 1, 2, 1, 
      1, 0, 1, 0, 0, 0, 1])/(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 
     4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
     723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
     9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
     510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
     2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
     84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
     137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 
     14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 
     126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 
     392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 
     304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 
     92*n2*n3^2 + 32*d*n2*n3^2 - 12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 
     10*n1*n3^3 - 10*n2*n3^3 - 2*n3^4) + 
   ((-26080 + 48524*d - 36092*d^2 + 13407*d^3 - 2486*d^4 + 184*d^5 - 
      22924*n1 + 33752*d*n1 - 18573*d^2*n1 + 4526*d^3*n1 - 412*d^4*n1 - 
      6972*n1^2 + 7514*d*n1^2 - 2685*d^2*n1^2 + 318*d^3*n1^2 - 854*n1^3 + 
      587*d*n1^3 - 100*d^2*n1^3 - 32*n1^4 + 10*d*n1^4 - 35712*n2 + 
      52736*d*n2 - 29156*d^2*n2 + 7150*d^3*n2 - 656*d^4*n2 - 23432*n1*n2 + 
      25540*d*n1*n2 - 9248*d^2*n1*n2 + 1112*d^3*n1*n2 - 4836*n1^2*n2 + 
      3424*d*n1^2*n2 - 602*d^2*n1^2*n2 - 342*n1^3*n2 + 114*d*n1^3*n2 - 
      4*n1^4*n2 - 15664*n2^2 + 17364*d*n2^2 - 6400*d^2*n2^2 + 784*d^3*n2^2 - 
      7500*n1*n2^2 + 5436*d*n1*n2^2 - 980*d^2*n1*n2^2 - 988*n1^2*n2^2 + 
      344*d*n1^2*n2^2 - 28*n1^3*n2^2 - 2736*n2^3 + 2056*d*n2^3 - 
      384*d^2*n2^3 - 904*n1*n2^3 + 328*d*n1*n2^3 - 56*n1^2*n2^3 - 160*n2^4 + 
      64*d*n2^4 - 32*n1*n2^4 - 22032*n3 + 32748*d*n3 - 18242*d^2*n3 + 
      4512*d^3*n3 - 418*d^4*n3 - 15146*n1*n3 + 16771*d*n1*n3 - 
      6175*d^2*n1*n3 + 756*d^3*n1*n3 - 3558*n1^2*n3 + 2582*d*n1^2*n3 - 
      467*d^2*n1^2*n3 - 320*n1^3*n3 + 113*d*n1^3*n3 - 8*n1^4*n3 - 
      27352*n2*n3 + 30056*d*n2*n3 - 10998*d^2*n2*n3 + 1340*d^3*n2*n3 - 
      13046*n1*n2*n3 + 9452*d*n1*n2*n3 - 1710*d^2*n1*n2*n3 - 
      1820*n1^2*n2*n3 + 652*d*n1^2*n2*n3 - 74*n1^3*n2*n3 - 10232*n2^2*n3 + 
      7440*d*n2^2*n3 - 1352*d^2*n2^2*n3 - 3076*n1*n2^2*n3 + 
      1112*d*n1*n2^2*n3 - 212*n1^2*n2^2*n3 - 1448*n2^3*n3 + 528*d*n2^3*n3 - 
      216*n1*n2^3*n3 - 64*n2^4*n3 - 5178*n3^2 + 5895*d*n3^2 - 2232*d^2*n3^2 + 
      281*d^3*n3^2 - 2850*n1*n3^2 + 2151*d*n1*n3^2 - 404*d^2*n1*n3^2 - 
      504*n1^2*n3^2 + 186*d*n1^2*n3^2 - 26*n1^3*n3^2 - 6334*n2*n3^2 + 
      4656*d*n2*n3^2 - 854*d^2*n2*n3^2 - 2070*n1*n2*n3^2 + 750*d*n1*n2*n3^2 - 
      148*n1^2*n2*n3^2 - 1816*n2^2*n3^2 + 656*d*n2^2*n3^2 - 
      268*n1*n2^2*n3^2 - 144*n2^3*n3^2 - 78*n3^3 + 100*d*n3^3 - 26*d^2*n3^3 - 
      82*n1*n3^3 + 38*d*n1*n3^3 - 14*n1^2*n3^3 - 456*n2*n3^3 + 
      172*d*n2*n3^3 - 84*n1*n2*n3^3 - 88*n2^2*n3^3 + 82*n3^4 - 27*d*n3^4 + 
      10*n1*n3^4 - 2*n2*n3^4 + 6*n3^5)*j[p4a, n1, -2 + n2, 1 + n3, 0, 2, 1, 
      1, 1, 0, 1, 0, 0, 0, 1])/((-2 + d - n1 - 2*n2)*(-3 + d - n3)*
     (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
      1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
      106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
      388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
      222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
      1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
      88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
      38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
      2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
      116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
      64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
      138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) - ((1 + n3)*(-8244 + 11244*d - 5739*d^2 + 1299*d^3 - 110*d^4 - 
      3346*n1 + 3377*d*n1 - 1132*d^2*n1 + 126*d^3*n1 - 432*n1^2 + 
      283*d*n1^2 - 46*d^2*n1^2 - 20*n1^3 + 6*d*n1^3 - 9812*n2 + 10002*d*n2 - 
      3390*d^2*n2 + 382*d^3*n2 - 2978*n1*n2 + 1980*d*n1*n2 - 328*d^2*n1*n2 - 
      230*n1^2*n2 + 74*d*n1^2*n2 - 4*n1^3*n2 - 3784*n2^2 + 2560*d*n2^2 - 
      432*d^2*n2^2 - 736*n1*n2^2 + 244*d*n1*n2^2 - 28*n1^2*n2^2 - 592*n2^3 + 
      200*d*n2^3 - 56*n1*n2^3 - 32*n2^4 - 1822*n3 + 1939*d*n3 - 687*d^2*n3 + 
      81*d^3*n3 - 674*n1*n3 + 483*d*n1*n3 - 86*d^2*n1*n3 - 88*n1^2*n3 + 
      31*d*n1^2*n3 - 4*n1^3*n3 - 2666*n2*n3 + 1856*d*n2*n3 - 322*d^2*n2*n3 - 
      654*n1*n2*n3 + 222*d*n1*n2*n3 - 30*n1^2*n2*n3 - 828*n2^2*n3 + 
      284*d*n2^2*n3 - 92*n1*n2^2*n3 - 72*n2^3*n3 + 326*n3^2 - 212*d*n3^2 + 
      34*d^2*n3^2 + 70*n1*n3^2 - 20*d*n1*n3^2 - 108*n2*n3^2 + 42*d*n2*n3^2 - 
      24*n1*n2*n3^2 - 36*n2^2*n3^2 + 102*n3^3 - 35*d*n3^3 + 14*n1*n3^3 + 
      10*n2*n3^3 + 6*n3^4)*j[p4a, n1, -2 + n2, 2 + n3, 0, 1, 1, 1, 1, 0, 1, 
      0, 0, 0, 1])/((3 - d + n3)*(-7020 + 10020*d - 5365*d^2 + 1277*d^3 - 
      114*d^4 - 4286*n1 + 4615*d*n1 - 1656*d^2*n1 + 198*d^3*n1 - 1004*n1^2 + 
      723*d*n1^2 - 130*d^2*n1^2 - 106*n1^3 + 38*d*n1^3 - 4*n1^4 - 8548*n2 + 
      9150*d*n2 - 3264*d^2*n2 + 388*d^3*n2 - 4002*n1*n2 + 2858*d*n1*n2 - 
      510*d^2*n1*n2 - 622*n1^2*n2 + 222*d*n1^2*n2 - 32*n1^3*n2 - 3424*n2^2 + 
      2444*d*n2^2 - 436*d^2*n2^2 - 1076*n1*n2^2 + 384*d*n1*n2^2 - 
      84*n1^2*n2^2 - 560*n2^3 + 200*d*n2^3 - 88*n1*n2^3 - 32*n2^4 - 122*n3 + 
      137*d*n3 - 53*d^2*n3 + 7*d^3*n3 - 38*n1*n3 + 41*d*n1*n3 - 
      10*d^2*n1*n3 - 14*n1^2*n3 + 7*d*n1^2*n3 - 2*n1^3*n3 - 978*n2*n3 + 
      702*d*n2*n3 - 126*d^2*n2*n3 - 322*n1*n2*n3 + 116*d*n1*n2*n3 - 
      26*n1^2*n2*n3 - 392*n2^2*n3 + 140*d*n2^2*n3 - 64*n1*n2^2*n3 - 
      40*n2^3*n3 + 426*n3^2 - 304*d*n3^2 + 54*d^2*n3^2 + 138*n1*n3^2 - 
      48*d*n1*n3^2 + 10*n1^2*n3^2 + 92*n2*n3^2 - 32*d*n2*n3^2 + 
      12*n1*n2*n3^2 + 58*n3^3 - 21*d*n3^3 + 10*n1*n3^3 + 10*n2*n3^3 + 
      2*n3^4)) + ((-316 + 372*d - 143*d^2 + 18*d^3 - 222*n1 + 159*d*n1 - 
      28*d^2*n1 - 32*n1^2 + 10*d*n1^2 - 108*n2 + 90*d*n2 - 18*d^2*n2 - 
      62*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 8*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
      206*n3 + 155*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
      62*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 36*n3^2 + 13*d*n3^2 - 
      6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3)*j[p4a, n1, -1 + n2, 1 + n3, 0, 0, 1, 1, 
      1, 0, 1, 0, 0, 0, 2])/(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 
     4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
     723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
     9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
     510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
     2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
     84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
     137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 
     14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 
     126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 
     392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 
     304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 
     92*n2*n3^2 + 32*d*n2*n3^2 - 12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 
     10*n1*n3^3 - 10*n2*n3^3 - 2*n3^4) + 
   ((41592 - 76396*d + 55866*d^2 - 20335*d^3 + 3685*d^4 - 266*d^5 + 
      34076*n1 - 48550*d*n1 + 25840*d^2*n1 - 6089*d^3*n1 + 536*d^4*n1 + 
      8656*n1^2 - 8986*d*n1^2 + 3096*d^2*n1^2 - 354*d^3*n1^2 + 835*n1^3 - 
      556*d*n1^3 + 92*d^2*n1^3 + 26*n1^4 - 8*d*n1^4 + 71104*n2 - 
      102320*d*n2 + 55000*d^2*n2 - 13090*d^3*n2 + 1164*d^4*n2 + 40664*n1*n2 - 
      42710*d*n1*n2 + 14898*d^2*n1*n2 - 1726*d^3*n1*n2 + 6846*n1^2*n2 - 
      4648*d*n1^2*n2 + 786*d^2*n1^2*n2 + 368*n1^3*n2 - 120*d*n1^3*n2 + 
      4*n1^4*n2 + 43368*n2^2 - 45940*d*n2^2 + 16172*d^2*n2^2 - 
      1892*d^3*n2^2 + 16348*n1*n2^2 - 11268*d*n1*n2^2 + 1936*d^2*n1*n2^2 + 
      1600*n1^2*n2^2 - 536*d*n1^2*n2^2 + 36*n1^3*n2^2 + 11776*n2^3 - 
      8200*d*n2^3 + 1424*d^2*n2^3 + 2632*n1*n2^3 - 896*d*n1*n2^3 + 
      112*n1^2*n2^3 + 1440*n2^4 - 496*d*n2^4 + 144*n1*n2^4 + 64*n2^5 + 
      23928*n3 - 35484*d*n3 + 19684*d^2*n3 - 4840*d^3*n3 + 445*d^4*n3 + 
      16108*n1*n3 - 17624*d*n1*n3 + 6405*d^2*n1*n3 - 773*d^3*n1*n3 + 
      3493*n1^2*n3 - 2492*d*n1^2*n3 + 442*d^2*n1^2*n3 + 280*n1^3*n3 - 
      96*d*n1^3*n3 + 6*n1^4*n3 + 34044*n2*n3 - 37414*d*n2*n3 + 
      13652*d^2*n2*n3 - 1654*d^3*n2*n3 + 16178*n1*n2*n3 - 11566*d*n1*n2*n3 + 
      2058*d^2*n1*n2*n3 + 2104*n1^2*n2*n3 - 728*d*n1^2*n2*n3 + 
      68*n1^3*n2*n3 + 16652*n2^2*n3 - 11960*d*n2^2*n3 + 2140*d^2*n2^2*n3 + 
      4728*n1*n2^2*n3 - 1656*d*n1*n2^2*n3 + 268*n1^2*n2^2*n3 + 3216*n2^3*n3 - 
      1136*d*n2^3*n3 + 408*n1*n2^3*n3 + 208*n2^4*n3 + 3914*n3^2 - 
      4409*d*n3^2 + 1661*d^2*n3^2 - 209*d^3*n3^2 + 1930*n1*n3^2 - 
      1486*d*n1*n3^2 + 285*d^2*n1*n3^2 + 350*n1^2*n3^2 - 134*d*n1^2*n3^2 + 
      21*n1^3*n3^2 + 5130*n2*n3^2 - 3856*d*n2*n3^2 + 722*d^2*n2*n3^2 + 
      1828*n1*n2*n3^2 - 676*d*n1*n2*n3^2 + 146*n1^2*n2*n3^2 + 
      1940*n2^2*n3^2 - 712*d*n2^2*n3^2 + 316*n1*n2^2*n3^2 + 208*n2^3*n3^2 - 
      210*n3^3 + 142*d*n3^3 - 23*d^2*n3^3 - 96*n1*n3^3 + 28*d*n1*n3^3 - 
      3*n1^2*n3^3 + 136*n2*n3^3 - 58*d*n2*n3^3 + 34*n1*n2*n3^3 + 
      56*n2^2*n3^3 - 98*n3^4 + 35*d*n3^4 - 18*n1*n3^4 - 14*n2*n3^4 - 6*n3^5)*
     j[p4a, n1, -1 + n2, 1 + n3, 0, 0, 1, 2, 1, 0, 1, 0, 0, 0, 1])/
    ((-2 + d - n1 - 2*n2)*(-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 
      1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 
      1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 
      8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 
      2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 
      32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 
      384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 
      32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 
      41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 
      978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
      116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
      64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
      138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((-1312 + 1430*d - 517*d^2 + 62*d^3 - 592*n1 + 420*d*n1 - 
      74*d^2*n1 - 77*n1^2 + 26*d*n1^2 - 2*n1^3 - 968*n2 + 694*d*n2 - 
      124*d^2*n2 - 278*n1*n2 + 98*d*n1*n2 - 18*n1^2*n2 - 224*n2^2 + 
      80*d*n2^2 - 32*n1*n2^2 - 16*n2^3 - 338*n3 + 253*d*n3 - 47*d^2*n3 - 
      115*n1*n3 + 42*d*n1*n3 - 9*n1^2*n3 - 188*n2*n3 + 68*d*n2*n3 - 
      28*n1*n2*n3 - 24*n2^2*n3 - 22*n3^2 + 9*d*n3^2 - 5*n1*n3^2 - 8*n2*n3^2)*
     j[p4a, n1, -1 + n2, 1 + n3, 0, 0, 2, 1, 1, 0, 1, 0, 0, 0, 1])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) + ((460 - 246*d - 80*d^2 + 67*d^3 - 10*d^4 - 982*n1 + 
      1157*d*n1 - 445*d^2*n1 + 56*d^3*n1 - 343*n1^2 + 242*d*n1^2 - 
      42*d^2*n1^2 - 26*n1^3 + 8*d*n1^3 + 452*n2 - 140*d*n2 - 64*d^2*n2 + 
      20*d^3*n2 - 844*n1*n2 + 644*d*n1*n2 - 120*d^2*n1*n2 - 180*n1^2*n2 + 
      60*d*n1^2*n2 - 4*n1^3*n2 + 152*n2^2 - 28*d*n2^2 - 8*d^2*n2^2 - 
      204*n1*n2^2 + 76*d*n1*n2^2 - 20*n1^2*n2^2 + 16*n2^3 - 16*n1*n2^3 + 
      60*n3 + 2*d*n3 - 28*d^2*n3 + 7*d^3*n3 - 193*n1*n3 + 171*d*n1*n3 - 
      37*d^2*n1*n3 - 68*n1^2*n3 + 28*d*n1^2*n3 - 6*n1^3*n3 + 26*n2*n3 + 
      46*d*n2*n3 - 20*d^2*n2*n3 - 190*n1*n2*n3 + 78*d*n1*n2*n3 - 
      28*n1^2*n2*n3 + 4*n2^2*n3 + 8*d*n2^2*n3 - 28*n1*n2^2*n3 + 8*n3^2 - 
      15*d*n3^2 + 4*d^2*n3^2 + 28*n1*n3^2 - 10*d*n1*n3^2 + 3*n1^2*n3^2 + 
      2*n2*n3^2 - 2*n1*n2*n3^2 - d*n3^3 + 3*n1*n3^3)*
     j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 0, 1, 1, 0, 2, 0, 0, 0, 1])/
    ((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 
      4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
      723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
      9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
      510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
      2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
      84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
      137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 
      10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 
      702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 
      26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 
      40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 
      48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((-11720 + 16600*d - 8800*d^2 + 2069*d^3 - 182*d^4 - 
      6104*n1 + 6386*d*n1 - 2219*d^2*n1 + 256*d^3*n1 - 1006*n1^2 + 
      680*d*n1^2 - 114*d^2*n1^2 - 52*n1^3 + 16*d*n1^3 - 12264*n2 + 
      12912*d*n2 - 4520*d^2*n2 + 526*d^3*n2 - 4656*n1*n2 + 3196*d*n1*n2 - 
      546*d^2*n1*n2 - 464*n1^2*n2 + 152*d*n1^2*n2 - 8*n1^3*n2 - 4304*n2^2 + 
      2996*d*n2^2 - 520*d^2*n2^2 - 1036*n1*n2^2 + 352*d*n1*n2^2 - 
      48*n1^2*n2^2 - 624*n2^3 + 216*d*n2^3 - 72*n1*n2^3 - 32*n2^4 - 4088*n3 + 
      4468*d*n3 - 1626*d^2*n3 + 197*d^3*n3 - 1804*n1*n3 + 1315*d*n1*n3 - 
      239*d^2*n1*n3 - 260*n1^2*n3 + 94*d*n1^2*n3 - 12*n1^3*n3 - 4172*n2*n3 + 
      2988*d*n2*n3 - 534*d^2*n2*n3 - 1206*n1*n2*n3 + 426*d*n1*n2*n3 - 
      76*n1^2*n2*n3 - 1120*n2^2*n3 + 396*d*n2^2*n3 - 152*n1*n2^2*n3 - 
      88*n2^3*n3 - 70*n3^2 + 75*d*n3^2 - 18*d^2*n3^2 - 32*n1*n3^2 + 
      17*d*n1*n3^2 - 6*n1^2*n3^2 - 318*n2*n3^2 + 118*d*n2*n3^2 - 
      54*n1*n2*n3^2 - 60*n2^2*n3^2 + 80*n3^3 - 27*d*n3^3 + 12*n1*n3^3 + 
      2*n2*n3^3 + 6*n3^4)*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 0, 1, 2, 0, 1, 0, 
      0, 0, 1])/((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 
      114*d^4 + 4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
      723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
      9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
      510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
      2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
      84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
      137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 
      10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 
      702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 
      26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 
      40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 
      48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((1312 - 1430*d + 517*d^2 - 62*d^3 + 592*n1 - 420*d*n1 + 
      74*d^2*n1 + 77*n1^2 - 26*d*n1^2 + 2*n1^3 + 968*n2 - 694*d*n2 + 
      124*d^2*n2 + 278*n1*n2 - 98*d*n1*n2 + 18*n1^2*n2 + 224*n2^2 - 
      80*d*n2^2 + 32*n1*n2^2 + 16*n2^3 + 338*n3 - 253*d*n3 + 47*d^2*n3 + 
      115*n1*n3 - 42*d*n1*n3 + 9*n1^2*n3 + 188*n2*n3 - 68*d*n2*n3 + 
      28*n1*n2*n3 + 24*n2^2*n3 + 22*n3^2 - 9*d*n3^2 + 5*n1*n3^2 + 8*n2*n3^2)*
     j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 0, 1, 0, 2, 0, 0, 0, 1])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) + ((2232 - 2688*d + 1158*d^2 - 206*d^3 + 12*d^4 + 604*n1 - 
      336*d*n1 + 9*d^2*n1 + 12*d^3*n1 - 218*n1^2 + 203*d*n1^2 - 44*d^2*n1^2 - 
      60*n1^3 + 22*d*n1^3 - 2*n1^4 + 1288*n2 - 964*d*n2 + 194*d^2*n2 - 
      5*d^3*n2 + 92*n1*n2 + 90*d*n1*n2 - 44*d^2*n1*n2 - 148*n1^2*n2 + 
      65*d*n1^2*n2 - 16*n1^3*n2 + 216*n2^2 - 56*d*n2^2 - 8*d^2*n2^2 - 
      28*n1*n2^2 + 30*d*n1*n2^2 - 22*n1^2*n2^2 + 8*n2^3 + 4*d*n2^3 - 
      4*n1*n2^3 + 2108*n3 - 2140*d*n3 + 719*d^2*n3 - 80*d^3*n3 + 624*n1*n3 - 
      404*d*n1*n3 + 65*d^2*n1*n3 + 26*n1^2*n3 - 7*d*n1^2*n3 - 2*n1^3*n3 + 
      1684*n2*n3 - 1124*d*n2*n3 + 187*d^2*n2*n3 + 378*n1*n2*n3 - 
      123*d*n1*n2*n3 + 12*n1^2*n2*n3 + 396*n2^2*n3 - 132*d*n2^2*n3 + 
      50*n1*n2^2*n3 + 28*n2^3*n3 + 26*n3^2 - 13*d*n3^2 + d^2*n3^2 - 
      54*n1*n3^2 + 20*d*n1*n3^2 - 8*n1^2*n3^2 + 146*n2*n3^2 - 48*d*n2*n3^2 + 
      10*n1*n2*n3^2 + 28*n2^2*n3^2 - 72*n3^3 + 25*d*n3^3 - 14*n1*n3^3 - 
      6*n2*n3^3 - 6*n3^4)*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 0, 2, 0, 1, 0, 
      0, 0, 1])/((-2 + d - n1 - 2*n2)*(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 
      114*d^4 + 4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
      723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
      9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
      510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
      2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
      84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
      137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 
      10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 
      702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 
      26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 
      40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 
      48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((316 - 372*d + 143*d^2 - 18*d^3 + 222*n1 - 159*d*n1 + 
      28*d^2*n1 + 32*n1^2 - 10*d*n1^2 + 108*n2 - 90*d*n2 + 18*d^2*n2 + 
      62*n1*n2 - 22*d*n1*n2 + 4*n1^2*n2 + 8*n2^2 - 4*d*n2^2 + 4*n1*n2^2 + 
      206*n3 - 155*d*n3 + 29*d^2*n3 + 84*n1*n3 - 31*d*n1*n3 + 8*n1^2*n3 + 
      62*n2*n3 - 24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 36*n3^2 - 13*d*n3^2 + 
      6*n1*n3^2 + 6*n2*n3^2 + 2*n3^3)*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 
      0, 0, 2, 0, 0, 0, 1])/(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 
     4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
     723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
     9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
     510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
     2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
     84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
     137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 
     14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 
     126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 
     392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 
     304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 
     92*n2*n3^2 + 32*d*n2*n3^2 - 12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 
     10*n1*n3^3 - 10*n2*n3^3 - 2*n3^4) + 
   ((98816 - 201064*d + 166124*d^2 - 70906*d^3 + 16321*d^4 - 1885*d^5 + 
      82*d^6 + 66760*n1 - 96972*d*n1 + 51698*d^2*n1 - 11667*d^3*n1 + 
      792*d^4*n1 + 40*d^5*n1 + 3176*n1^2 + 4010*d*n1^2 - 6763*d^2*n1^2 + 
      2700*d^3*n1^2 - 336*d^4*n1^2 - 4094*n1^3 + 5389*d*n1^3 - 
      2244*d^2*n1^3 + 300*d^3*n1^3 - 736*n1^4 + 537*d*n1^4 - 96*d^2*n1^4 - 
      32*n1^5 + 10*d*n1^5 + 165576*n2 - 258276*d*n2 + 154498*d^2*n2 - 
      43407*d^3*n2 + 5481*d^4*n2 - 219*d^5*n2 + 38176*n1*n2 - 22944*d*n1*n2 - 
      5050*d^2*n1*n2 + 5383*d^3*n1*n2 - 854*d^4*n1*n2 - 19826*n1^2*n2 + 
      27509*d*n1^2*n2 - 11935*d^2*n1^2*n2 + 1653*d^3*n1^2*n2 - 6060*n1^3*n2 + 
      4577*d*n1^3*n2 - 848*d^2*n1^3*n2 - 418*n1^4*n2 + 140*d*n1^4*n2 - 
      4*n1^5*n2 + 80864*n2^2 - 88920*d*n2^2 + 32748*d^2*n2^2 - 
      4132*d^3*n2^2 + 34*d^4*n2^2 - 15484*n1*n2^2 + 28638*d*n1*n2^2 - 
      14442*d^2*n1*n2^2 + 2204*d^3*n1*n2^2 - 15226*n1^2*n2^2 + 
      11972*d*n1^2*n2^2 - 2304*d^2*n1^2*n2^2 - 1850*n1^3*n2^2 + 
      650*d*n1^3*n2^2 - 40*n1^4*n2^2 + 15000*n2^3 - 8948*d*n2^3 + 
      636*d^2*n2^3 + 228*d^3*n2^3 - 11356*n1*n2^3 + 9760*d*n1*n2^3 - 
      2016*d^2*n1*n2^3 - 3252*n1^2*n2^3 + 1192*d*n1^2*n2^3 - 140*n1^3*n2^3 + 
      896*n2^4 + 160*d*n2^4 - 168*d^2*n2^4 - 1920*n1*n2^4 + 752*d*n1*n2^4 - 
      200*n1^2*n2^4 + 32*d*n2^5 - 96*n1*n2^5 + 37520*n3 - 63336*d*n3 + 
      40640*d^2*n3 - 12132*d^3*n3 + 1606*d^4*n3 - 65*d^5*n3 + 26960*n1*n3 - 
      29254*d*n1*n3 + 9773*d^2*n1*n3 - 712*d^3*n1*n3 - 98*d^4*n1*n3 + 
      1790*n1^2*n3 + 1587*d*n1^2*n3 - 1899*d^2*n1^2*n3 + 392*d^3*n1^2*n3 - 
      1358*n1^3*n3 + 1365*d*n1^3*n3 - 312*d^2*n1^3*n3 - 230*n1^4*n3 + 
      91*d*n1^4*n3 - 8*n1^5*n3 + 55548*n2*n3 - 62356*d*n2*n3 + 
      22685*d^2*n2*n3 - 2485*d^3*n2*n3 - 69*d^4*n2*n3 + 4142*n1*n2*n3 + 
      8377*d*n1*n2*n3 - 7850*d^2*n1*n2*n3 + 1542*d^3*n1*n2*n3 - 
      9550*n1^2*n2*n3 + 8975*d*n1^2*n2*n3 - 1988*d^2*n1^2*n2*n3 - 
      1978*n1^3*n2*n3 + 789*d*n1^3*n2*n3 - 90*n1^4*n2*n3 + 11904*n2^2*n3 - 
      1948*d*n2^2*n3 - 3428*d^2*n2^2*n3 + 928*d^3*n2^2*n3 - 
      15634*n1*n2^2*n3 + 14966*d*n1*n2^2*n3 - 3366*d^2*n1*n2^2*n3 - 
      5546*n1^2*n2^2*n3 + 2238*d*n1^2*n2^2*n3 - 378*n1^3*n2^2*n3 - 
      3948*n2^3*n3 + 4972*d*n2^3*n3 - 1284*d^2*n2^3*n3 - 5628*n1*n2^3*n3 + 
      2324*d*n1*n2^3*n3 - 684*n1^2*n2^3*n3 - 1376*n2^4*n3 + 624*d*n2^4*n3 - 
      496*n1*n2^4*n3 - 96*n2^5*n3 - 1432*n3^2 + 1856*d*n3^2 - 1214*d^2*n3^2 + 
      428*d^3*n3^2 - 59*d^4*n3^2 + 2686*n1*n3^2 - 1939*d*n1*n3^2 + 
      211*d^2*n1*n3^2 + 49*d^3*n1*n3^2 + 816*n1^2*n3^2 - 204*d*n1^2*n3^2 - 
      40*d^2*n1^2*n3^2 - 20*n1^3*n3^2 + 36*d*n1^3*n3^2 - 10*n1^4*n3^2 + 
      740*n2*n3^2 + 1394*d*n2*n3^2 - 1518*d^2*n2*n3^2 + 329*d^3*n2*n3^2 - 
      1196*n1*n2*n3^2 + 2292*d*n1*n2*n3^2 - 689*d^2*n1*n2*n3^2 - 
      982*n1^2*n2*n3^2 + 490*d*n1^2*n2*n3^2 - 106*n1^3*n2*n3^2 - 
      2644*n2^2*n3^2 + 3148*d*n2^2*n3^2 - 806*d^2*n2^2*n3^2 - 
      2640*n1*n2^2*n3^2 + 1180*d*n1*n2^2*n3^2 - 360*n1^2*n2^2*n3^2 - 
      1456*n2^3*n3^2 + 660*d*n2^3*n3^2 - 452*n1*n2^3*n3^2 - 168*n2^4*n3^2 - 
      1446*n3^3 + 1415*d*n3^3 - 475*d^2*n3^3 + 56*d^3*n3^3 + 220*n1*n3^3 - 
      152*d*n1*n3^3 + 18*d^2*n1*n3^3 + 166*n1^2*n3^3 - 45*d*n1^2*n3^3 + 
      8*n1^3*n3^3 - 1474*n2*n3^3 + 1120*d*n2*n3^3 - 225*d^2*n2*n3^3 - 
      194*n1*n2*n3^3 + 123*d*n1*n2*n3^3 - 26*n1^2*n2*n3^3 - 644*n2^2*n3^3 + 
      276*d*n2^2*n3^3 - 138*n1*n2^2*n3^3 - 100*n2^3*n3^3 + 266*n3^4 - 
      198*d*n3^4 + 37*d^2*n3^4 + 158*n1*n3^4 - 59*d*n1*n3^4 + 20*n1^2*n3^4 - 
      48*n2*n3^4 + 14*d*n2*n3^4 + 16*n1*n2*n3^4 - 24*n2^2*n3^4 + 94*n3^5 - 
      33*d*n3^5 + 16*n1*n3^5 + 10*n2*n3^5 + 6*n3^6)*
     j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1])/
    ((-2 + d - n1 - 2*n2)*(-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 
      1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 
      1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 
      8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 
      2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 
      32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 
      384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 
      32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 
      41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 
      978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
      116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
      64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
      138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((316 - 372*d + 143*d^2 - 18*d^3 + 222*n1 - 159*d*n1 + 
      28*d^2*n1 + 32*n1^2 - 10*d*n1^2 + 108*n2 - 90*d*n2 + 18*d^2*n2 + 
      62*n1*n2 - 22*d*n1*n2 + 4*n1^2*n2 + 8*n2^2 - 4*d*n2^2 + 4*n1*n2^2 + 
      206*n3 - 155*d*n3 + 29*d^2*n3 + 84*n1*n3 - 31*d*n1*n3 + 8*n1^2*n3 + 
      62*n2*n3 - 24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 36*n3^2 - 13*d*n3^2 + 
      6*n1*n3^2 + 6*n2*n3^2 + 2*n3^3)*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 
      1, 0, 2, 0, 0, 0, 1])/(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 
     4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
     723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
     9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
     510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
     2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
     84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
     137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 
     14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 
     126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 
     392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 
     304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 
     92*n2*n3^2 + 32*d*n2*n3^2 - 12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 
     10*n1*n3^3 - 10*n2*n3^3 - 2*n3^4) + 
   ((996 - 1058*d + 374*d^2 - 44*d^3 + 370*n1 - 261*d*n1 + 46*d^2*n1 + 
      45*n1^2 - 16*d*n1^2 + 2*n1^3 + 860*n2 - 604*d*n2 + 106*d^2*n2 + 
      216*n1*n2 - 76*d*n1*n2 + 14*n1^2*n2 + 216*n2^2 - 76*d*n2^2 + 
      28*n1*n2^2 + 16*n2^3 + 132*n3 - 98*d*n3 + 18*d^2*n3 + 31*n1*n3 - 
      11*d*n1*n3 + n1^2*n3 + 126*n2*n3 - 44*d*n2*n3 + 14*n1*n2*n3 + 
      20*n2^2*n3 - 14*n3^2 + 4*d*n3^2 - n1*n3^2 + 2*n2*n3^2 - 2*n3^3)*
     j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 2, 0, 1, 0, 0, 0, 1])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) + ((42568 - 79256*d + 58814*d^2 - 21744*d^3 + 4005*d^4 - 
      294*d^5 + 37860*n1 - 55096*d*n1 + 29953*d^2*n1 - 7209*d^3*n1 + 
      648*d^4*n1 + 11182*n1^2 - 11889*d*n1^2 + 4192*d^2*n1^2 - 490*d^3*n1^2 + 
      1326*n1^3 - 902*d*n1^3 + 152*d^2*n1^3 + 52*n1^4 - 16*d*n1^4 + 
      71824*n2 - 105040*d*n2 + 57416*d^2*n2 - 13902*d^3*n2 + 1258*d^4*n2 + 
      45892*n1*n2 - 49234*d*n1*n2 + 17538*d^2*n1*n2 - 2074*d^3*n1*n2 + 
      9138*n1^2*n2 - 6348*d*n1^2*n2 + 1096*d^2*n1^2*n2 + 620*n1^3*n2 - 
      204*d*n1^3*n2 + 8*n1^4*n2 + 42856*n2^2 - 46272*d*n2^2 + 
      16604*d^2*n2^2 - 1980*d^3*n2^2 + 18712*n1*n2^2 - 13180*d*n1*n2^2 + 
      2312*d^2*n1*n2^2 + 2240*n1^2*n2^2 - 764*d*n1^2*n2^2 + 64*n1^3*n2^2 + 
      11488*n2^3 - 8168*d*n2^3 + 1448*d^2*n2^3 + 3080*n1*n2^3 - 
      1072*d*n1*n2^3 + 168*n1^2*n2^3 + 1408*n2^4 - 496*d*n2^4 + 176*n1*n2^4 + 
      64*n2^5 + 25676*n3 - 38448*d*n3 + 21555*d^2*n3 - 5361*d^3*n3 + 
      499*d^4*n3 + 18316*n1*n3 - 20350*d*n1*n3 + 7517*d^2*n1*n3 - 
      923*d^3*n1*n3 + 4408*n1^2*n3 - 3215*d*n1^2*n3 + 584*d^2*n1^2*n3 + 
      416*n1^3*n3 - 148*d*n1^3*n3 + 12*n1^4*n3 + 36328*n2*n3 - 
      40312*d*n2*n3 + 14872*d^2*n2*n3 - 1824*d^3*n2*n3 + 18368*n1*n2*n3 - 
      13372*d*n1*n2*n3 + 2426*d^2*n1*n2*n3 + 2710*n1^2*n2*n3 - 
      966*d*n1^2*n2*n3 + 112*n1^3*n2*n3 + 17220*n2^2*n3 - 12548*d*n2^2*n3 + 
      2280*d^2*n2^2*n3 + 5396*n1*n2^2*n3 - 1932*d*n1*n2^2*n3 + 
      364*n1^2*n2^2*n3 + 3248*n2^3*n3 - 1168*d*n2^3*n3 + 472*n1*n2^3*n3 + 
      208*n2^4*n3 + 4526*n3^2 - 5145*d*n3^2 + 1952*d^2*n3^2 - 247*d^3*n3^2 + 
      2384*n1*n3^2 - 1829*d*n1*n3^2 + 350*d^2*n1*n3^2 + 434*n1^2*n3^2 - 
      166*d*n1^2*n3^2 + 26*n1^3*n3^2 + 5898*n2*n3^2 - 4424*d*n2*n3^2 + 
      828*d^2*n2*n3^2 + 2086*n1*n2*n3^2 - 776*d*n1*n2*n3^2 + 
      172*n1^2*n2*n3^2 + 2104*n2^2*n3^2 - 776*d*n2^2*n3^2 + 
      352*n1*n2^2*n3^2 + 216*n2^3*n3^2 - 126*n3^3 + 72*d*n3^3 - 9*d^2*n3^3 - 
      48*n1*n3^3 + 11*d*n1*n3^3 + 232*n2*n3^3 - 92*d*n2*n3^3 + 
      46*n1*n2*n3^3 + 68*n2^2*n3^3 - 94*n3^4 + 33*d*n3^4 - 16*n1*n3^4 - 
      10*n2*n3^4 - 6*n3^5)*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 2, 0, 0, 1, 
      0, 0, 0, 1])/((-2 + d - n1 - 2*n2)*(-3 + d - n3)*
     (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
      1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
      106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
      388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
      222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
      1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
      88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
      38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
      2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
      116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
      64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
      138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((128 - 106*d + 27*d^2 - 2*d^3 - 52*n1 + 42*d*n1 - 
      8*d^2*n1 - 13*n1^2 + 4*d*n1^2 + 76*n2 - 34*d*n2 + 3*d^2*n2 - 44*n1*n2 + 
      15*d*n1*n2 - 2*n1^2*n2 + 12*n2^2 - 2*d*n2^2 - 6*n1*n2^2 + 50*n3 - 
      33*d*n3 + 5*d^2*n3 + n1*n3 + 2*d*n1*n3 - 3*n1^2*n3 + 22*n2*n3 - 
      5*d*n2*n3 - 6*n1*n2*n3 + 2*n2^2*n3 + 6*n3^2 - 3*d*n3^2 + 3*n1*n3^2 + 
      2*n2*n3^2)*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 1, 2, 1, 0, 0, 0, 0, 0, 
      1])/(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 
     4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 
     130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 
     3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 
     622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 
     436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 
     200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 
     7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 
     7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 
     322*n1*n2*n3 - 116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 
     140*d*n2^2*n3 + 64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 
     54*d^2*n3^2 - 138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 
     32*d*n2*n3^2 - 12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 
     10*n2*n3^3 - 2*n3^4) + ((1628 - 1802*d + 660*d^2 - 80*d^3 + 814*n1 - 
      579*d*n1 + 102*d^2*n1 + 109*n1^2 - 36*d*n1^2 + 2*n1^3 + 1076*n2 - 
      784*d*n2 + 142*d^2*n2 + 340*n1*n2 - 120*d*n1*n2 + 22*n1^2*n2 + 
      232*n2^2 - 84*d*n2^2 + 36*n1*n2^2 + 16*n2^3 + 544*n3 - 408*d*n3 + 
      76*d^2*n3 + 199*n1*n3 - 73*d*n1*n3 + 17*n1^2*n3 + 250*n2*n3 - 
      92*d*n2*n3 + 42*n1*n2*n3 + 28*n2^2*n3 + 58*n3^2 - 22*d*n3^2 + 
      11*n1*n3^2 + 14*n2*n3^2 + 2*n3^3)*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 2, 
      0, 1, 0, 1, 0, 0, 0, 1])/(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 
     114*d^4 + 4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
     723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
     9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
     510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
     2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
     84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
     137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 
     14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 
     126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 
     392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 
     304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 
     92*n2*n3^2 + 32*d*n2*n3^2 - 12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 
     10*n1*n3^3 - 10*n2*n3^3 - 2*n3^4) - 
   (2*(-316 + 372*d - 143*d^2 + 18*d^3 - 222*n1 + 159*d*n1 - 28*d^2*n1 - 
      32*n1^2 + 10*d*n1^2 - 108*n2 + 90*d*n2 - 18*d^2*n2 - 62*n1*n2 + 
      22*d*n1*n2 - 4*n1^2*n2 - 8*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 206*n3 + 
      155*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 62*n2*n3 + 
      24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 36*n3^2 + 13*d*n3^2 - 
      6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3)*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 2, 1, 
      0, 0, 1, 0, 0, 0, 1])/(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 
     4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
     723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
     9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
     510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
     2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
     84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
     137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 
     14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 
     126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 
     392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 
     304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 
     92*n2*n3^2 + 32*d*n2*n3^2 - 12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 
     10*n1*n3^3 - 10*n2*n3^3 - 2*n3^4) + 
   ((-128 + 106*d - 27*d^2 + 2*d^3 + 52*n1 - 42*d*n1 + 8*d^2*n1 + 13*n1^2 - 
      4*d*n1^2 - 76*n2 + 34*d*n2 - 3*d^2*n2 + 44*n1*n2 - 15*d*n1*n2 + 
      2*n1^2*n2 - 12*n2^2 + 2*d*n2^2 + 6*n1*n2^2 - 50*n3 + 33*d*n3 - 
      5*d^2*n3 - n1*n3 - 2*d*n1*n3 + 3*n1^2*n3 - 22*n2*n3 + 5*d*n2*n3 + 
      6*n1*n2*n3 - 2*n2^2*n3 - 6*n3^2 + 3*d*n3^2 - 3*n1*n3^2 - 2*n2*n3^2)*
     j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 2, 1, 1, 0, 0, 0, 0, 0, 1])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) + ((1628 - 1802*d + 660*d^2 - 80*d^3 + 814*n1 - 579*d*n1 + 
      102*d^2*n1 + 109*n1^2 - 36*d*n1^2 + 2*n1^3 + 1076*n2 - 784*d*n2 + 
      142*d^2*n2 + 340*n1*n2 - 120*d*n1*n2 + 22*n1^2*n2 + 232*n2^2 - 
      84*d*n2^2 + 36*n1*n2^2 + 16*n2^3 + 544*n3 - 408*d*n3 + 76*d^2*n3 + 
      199*n1*n3 - 73*d*n1*n3 + 17*n1^2*n3 + 250*n2*n3 - 92*d*n2*n3 + 
      42*n1*n2*n3 + 28*n2^2*n3 + 58*n3^2 - 22*d*n3^2 + 11*n1*n3^2 + 
      14*n2*n3^2 + 2*n3^3)*j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 2, 1, 1, 0, 1, 
      0, 0, 0, 0])/(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 
     4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
     723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
     9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
     510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
     2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
     84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
     137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 
     14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 
     126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 
     392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 
     304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 
     92*n2*n3^2 + 32*d*n2*n3^2 - 12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 
     10*n1*n3^3 - 10*n2*n3^3 - 2*n3^4) + 
   ((-868 + 952*d - 347*d^2 + 42*d^3 - 422*n1 + 303*d*n1 - 54*d^2*n1 - 
      58*n1^2 + 20*d*n1^2 - 2*n1^3 - 784*n2 + 570*d*n2 - 103*d^2*n2 - 
      260*n1*n2 + 91*d*n1*n2 - 16*n1^2*n2 - 204*n2^2 + 74*d*n2^2 - 
      34*n1*n2^2 - 16*n2^3 - 82*n3 + 65*d*n3 - 13*d^2*n3 - 30*n1*n3 + 
      13*d*n1*n3 - 4*n1^2*n3 - 104*n2*n3 + 39*d*n2*n3 - 20*n1*n2*n3 - 
      18*n2^2*n3 + 20*n3^2 - 7*d*n3^2 + 4*n1*n3^2 + 2*n3^3)*
     j[p4a, n1, -1 + n2, 1 + n3, 0, 1, 2, 1, 1, 0, 1, 0, 0, 0, 1])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) + ((26080 - 48524*d + 36092*d^2 - 13407*d^3 + 2486*d^4 - 
      184*d^5 + 22924*n1 - 33752*d*n1 + 18573*d^2*n1 - 4526*d^3*n1 + 
      412*d^4*n1 + 6972*n1^2 - 7514*d*n1^2 + 2685*d^2*n1^2 - 318*d^3*n1^2 + 
      854*n1^3 - 587*d*n1^3 + 100*d^2*n1^3 + 32*n1^4 - 10*d*n1^4 + 35712*n2 - 
      52736*d*n2 + 29156*d^2*n2 - 7150*d^3*n2 + 656*d^4*n2 + 23432*n1*n2 - 
      25540*d*n1*n2 + 9248*d^2*n1*n2 - 1112*d^3*n1*n2 + 4836*n1^2*n2 - 
      3424*d*n1^2*n2 + 602*d^2*n1^2*n2 + 342*n1^3*n2 - 114*d*n1^3*n2 + 
      4*n1^4*n2 + 15664*n2^2 - 17364*d*n2^2 + 6400*d^2*n2^2 - 784*d^3*n2^2 + 
      7500*n1*n2^2 - 5436*d*n1*n2^2 + 980*d^2*n1*n2^2 + 988*n1^2*n2^2 - 
      344*d*n1^2*n2^2 + 28*n1^3*n2^2 + 2736*n2^3 - 2056*d*n2^3 + 
      384*d^2*n2^3 + 904*n1*n2^3 - 328*d*n1*n2^3 + 56*n1^2*n2^3 + 160*n2^4 - 
      64*d*n2^4 + 32*n1*n2^4 + 22032*n3 - 32748*d*n3 + 18242*d^2*n3 - 
      4512*d^3*n3 + 418*d^4*n3 + 15146*n1*n3 - 16771*d*n1*n3 + 
      6175*d^2*n1*n3 - 756*d^3*n1*n3 + 3558*n1^2*n3 - 2582*d*n1^2*n3 + 
      467*d^2*n1^2*n3 + 320*n1^3*n3 - 113*d*n1^3*n3 + 8*n1^4*n3 + 
      27352*n2*n3 - 30056*d*n2*n3 + 10998*d^2*n2*n3 - 1340*d^3*n2*n3 + 
      13046*n1*n2*n3 - 9452*d*n1*n2*n3 + 1710*d^2*n1*n2*n3 + 
      1820*n1^2*n2*n3 - 652*d*n1^2*n2*n3 + 74*n1^3*n2*n3 + 10232*n2^2*n3 - 
      7440*d*n2^2*n3 + 1352*d^2*n2^2*n3 + 3076*n1*n2^2*n3 - 
      1112*d*n1*n2^2*n3 + 212*n1^2*n2^2*n3 + 1448*n2^3*n3 - 528*d*n2^3*n3 + 
      216*n1*n2^3*n3 + 64*n2^4*n3 + 5178*n3^2 - 5895*d*n3^2 + 2232*d^2*n3^2 - 
      281*d^3*n3^2 + 2850*n1*n3^2 - 2151*d*n1*n3^2 + 404*d^2*n1*n3^2 + 
      504*n1^2*n3^2 - 186*d*n1^2*n3^2 + 26*n1^3*n3^2 + 6334*n2*n3^2 - 
      4656*d*n2*n3^2 + 854*d^2*n2*n3^2 + 2070*n1*n2*n3^2 - 750*d*n1*n2*n3^2 + 
      148*n1^2*n2*n3^2 + 1816*n2^2*n3^2 - 656*d*n2^2*n3^2 + 
      268*n1*n2^2*n3^2 + 144*n2^3*n3^2 + 78*n3^3 - 100*d*n3^3 + 26*d^2*n3^3 + 
      82*n1*n3^3 - 38*d*n1*n3^3 + 14*n1^2*n3^3 + 456*n2*n3^3 - 
      172*d*n2*n3^3 + 84*n1*n2*n3^3 + 88*n2^2*n3^3 - 82*n3^4 + 27*d*n3^4 - 
      10*n1*n3^4 + 2*n2*n3^4 - 6*n3^5)*j[p4a, n1, -1 + n2, 1 + n3, 0, 2, 0, 
      1, 1, 0, 1, 0, 0, 0, 1])/((-2 + d - n1 - 2*n2)*(-3 + d - n3)*
     (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
      1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
      106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
      388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
      222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
      1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
      88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
      38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
      2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
      116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
      64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
      138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((-5744 + 8260*d - 4440*d^2 + 1057*d^3 - 94*d^4 - 3884*n1 + 
      4080*d*n1 - 1421*d^2*n1 + 164*d^3*n1 - 736*n1^2 + 494*d*n1^2 - 
      82*d^2*n1^2 - 40*n1^3 + 12*d*n1^3 - 7104*n2 + 7568*d*n2 - 2676*d^2*n2 + 
      314*d^3*n2 - 3360*n1*n2 + 2308*d*n1*n2 - 394*d^2*n1*n2 - 380*n1^2*n2 + 
      124*d*n1^2*n2 - 8*n1^3*n2 - 3008*n2^2 + 2108*d*n2^2 - 368*d^2*n2^2 - 
      868*n1*n2^2 + 296*d*n1*n2^2 - 48*n1^2*n2^2 - 528*n2^3 + 184*d*n2^3 - 
      72*n1*n2^3 - 32*n2^4 - 3296*n3 + 3616*d*n3 - 1322*d^2*n3 + 161*d^3*n3 - 
      1618*n1*n3 + 1187*d*n1*n3 - 217*d^2*n1*n3 - 254*n1^2*n3 + 
      92*d*n1^2*n3 - 12*n1^3*n3 - 3416*n2*n3 + 2472*d*n2*n3 - 446*d^2*n2*n3 - 
      1122*n1*n2*n3 + 398*d*n1*n2*n3 - 76*n1^2*n2*n3 - 1000*n2^2*n3 + 
      356*d*n2^2*n3 - 152*n1*n2^2*n3 - 88*n2^3*n3 - 154*n3^2 + 127*d*n3^2 - 
      26*d^2*n3^2 - 38*n1*n3^2 + 19*d*n1*n3^2 - 6*n1^2*n3^2 - 306*n2*n3^2 + 
      114*d*n2*n3^2 - 54*n1*n2*n3^2 - 60*n2^2*n3^2 + 68*n3^3 - 23*d*n3^3 + 
      12*n1*n3^3 + 2*n2*n3^3 + 6*n3^4)*j[p4a, n1, -1 + n2, 1 + n3, 0, 2, 1, 
      0, 1, 0, 1, 0, 0, 0, 1])/((-2 + d - n1 - 2*n2)*
     (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
      1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
      106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
      388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
      222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
      1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
      88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
      38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
      2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
      116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
      64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
      138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((488 - 1186*d + 881*d^2 - 264*d^3 + 28*d^4 + 1648*n1 - 
      1856*d*n1 + 688*d^2*n1 - 84*d^3*n1 + 439*n1^2 - 304*d*n1^2 + 
      52*d^2*n1^2 + 26*n1^3 - 8*d*n1^3 - 128*n2 - 238*d*n2 + 208*d^2*n2 - 
      38*d^3*n2 + 1030*n1*n2 - 772*d*n1*n2 + 142*d^2*n1*n2 + 192*n1^2*n2 - 
      64*d*n1^2*n2 + 4*n1^3*n2 - 128*n2^2 + 8*d*n2^2 + 12*d^2*n2^2 + 
      216*n1*n2^2 - 80*d*n1*n2^2 + 20*n1^2*n2^2 - 16*n2^3 + 16*n1*n2^3 + 
      874*n3 - 1045*d*n3 + 413*d^2*n3 - 54*d^3*n3 + 667*n1*n3 - 507*d*n1*n3 + 
      96*d^2*n1*n3 + 124*n1^2*n3 - 46*d*n1^2*n3 + 6*n1^3*n3 + 268*n2*n3 - 
      270*d*n2*n3 + 62*d^2*n2*n3 + 294*n1*n2*n3 - 114*d*n1*n2*n3 + 
      32*n1^2*n2*n3 + 16*n2^2*n3 - 16*d*n2^2*n3 + 32*n1*n2^2*n3 + 306*n3^2 - 
      215*d*n3^2 + 38*d^2*n3^2 + 74*n1*n3^2 - 27*d*n1*n3^2 + 5*n1^2*n3^2 + 
      78*n2*n3^2 - 30*d*n2*n3^2 + 16*n1*n2*n3^2 + 4*n2^2*n3^2 + 42*n3^3 - 
      14*d*n3^3 + 3*n1*n3^3 + 6*n2*n3^3 + 2*n3^4)*j[p4a, n1, -1 + n2, 1 + n3, 
      0, 2, 1, 1, 1, 0, 1, 0, 0, 0, 0])/((-3 + d - n3)*
     (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
      1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
      106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
      388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
      222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
      1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
      88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
      38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
      2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
      116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
      64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
      138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((76 + 200*d - 267*d^2 + 100*d^3 - 12*d^4 - 826*n1 + 
      979*d*n1 - 379*d^2*n1 + 48*d^3*n1 - 304*n1^2 + 217*d*n1^2 - 
      38*d^2*n1^2 - 26*n1^3 + 8*d*n1^3 + 224*n2 + 38*d*n2 - 107*d^2*n2 + 
      23*d^3*n2 - 712*n1*n2 + 555*d*n1*n2 - 105*d^2*n1*n2 - 174*n1^2*n2 + 
      58*d*n1^2*n2 - 4*n1^3*n2 + 116*n2^2 - 10*d*n2^2 - 10*d^2*n2^2 - 
      186*n1*n2^2 + 70*d*n1*n2^2 - 20*n1^2*n2^2 + 16*n2^3 - 16*n1*n2^3 - 
      218*n3 + 257*d*n3 - 103*d^2*n3 + 14*d^3*n3 - 144*n1*n3 + 124*d*n1*n3 - 
      27*d^2*n1*n3 - 46*n1^2*n3 + 21*d*n1^2*n3 - 6*n1^3*n3 - 116*n2*n3 + 
      117*d*n2*n3 - 28*d^2*n2*n3 - 128*n1*n2*n3 + 57*d*n1*n2*n3 - 
      26*n1^2*n2*n3 - 14*n2^2*n3 + 12*d*n2^2*n3 - 22*n1*n2^2*n3 - 60*n3^2 + 
      33*d*n3^2 - 4*d^2*n3^2 + 18*n1*n3^2 - 9*d*n1*n3^2 + 6*n1^2*n3^2 - 
      26*n2*n3^2 + 7*d*n2*n3^2 + 4*n1*n2*n3^2 - 2*n2^2*n3^2 - 6*n3^3 + 
      2*d*n3^3 - 2*n2*n3^3)*j[p4a, n1, -1 + n2, 1 + n3, 0, 2, 1, 1, 1, 0, 1, 
      0, 0, 0, 1])/((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 
      114*d^4 + 4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
      723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
      9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
      510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
      2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
      84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
      137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 
      10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 
      702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 
      26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 
      40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 
      48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) - ((1 + n3)*(-5232 + 11536*d - 9672*d^2 + 3918*d^3 - 774*d^4 + 
      60*d^5 - 8492*n1 + 12806*d*n1 - 7168*d^2*n1 + 1767*d^3*n1 - 
      162*d^4*n1 - 3382*n1^2 + 3631*d*n1^2 - 1291*d^2*n1^2 + 152*d^3*n1^2 - 
      499*n1^3 + 342*d*n1^3 - 58*d^2*n1^3 - 26*n1^4 + 8*d*n1^4 - 25936*n2 + 
      38760*d*n2 - 21540*d^2*n2 + 5280*d^3*n2 - 482*d^4*n2 - 18476*n1*n2 + 
      19924*d*n1*n2 - 7116*d^2*n1*n2 + 842*d^3*n1*n2 - 4164*n1^2*n2 + 
      2872*d*n1^2*n2 - 492*d^2*n1^2*n2 - 308*n1^3*n2 + 100*d*n1^3*n2 - 
      4*n1^4*n2 - 24624*n2^2 + 26456*d*n2^2 - 9432*d^2*n2^2 + 1116*d^3*n2^2 - 
      10720*n1*n2^2 + 7460*d*n1*n2^2 - 1292*d^2*n1*n2^2 - 1276*n1^2*n2^2 + 
      428*d*n1^2*n2^2 - 36*n1^3*n2^2 - 8560*n2^3 + 6000*d*n2^3 - 
      1048*d^2*n2^3 - 2176*n1*n2^3 + 744*d*n1*n2^3 - 112*n1^2*n2^3 - 
      1248*n2^4 + 432*d*n2^4 - 144*n1*n2^4 - 64*n2^5 + 9204*n3 - 12344*d*n3 + 
      6173*d^2*n3 - 1363*d^3*n3 + 112*d^4*n3 + 3250*n1*n3 - 3083*d*n1*n3 + 
      952*d^2*n1*n3 - 95*d^3*n1*n3 + 89*n1^2*n3 + 16*d*n1^2*n3 - 
      17*d^2*n1^2*n3 - 72*n1^3*n3 + 30*d*n1^3*n3 - 6*n1^4*n3 + 3116*n2*n3 - 
      2214*d*n2*n3 + 398*d^2*n2*n3 - 2*d^3*n2*n3 - 1276*n1*n2*n3 + 
      1246*d*n1*n2*n3 - 278*d^2*n1*n2*n3 - 664*n1^2*n2*n3 + 
      252*d*n1^2*n2*n3 - 48*n1^3*n2*n3 - 4008*n2^2*n3 + 3124*d*n2^2*n3 - 
      600*d^2*n2^2*n3 - 1844*n1*n2^2*n3 + 676*d*n1*n2^2*n3 - 
      160*n1^2*n2^2*n3 - 1592*n2^3*n3 + 576*d*n2^3*n3 - 256*n1*n2^3*n3 - 
      144*n2^4*n3 + 4230*n3^2 - 4667*d*n3^2 + 1707*d^2*n3^2 - 207*d^3*n3^2 + 
      2052*n1*n3^2 - 1484*d*n1*n3^2 + 266*d^2*n1*n3^2 + 312*n1^2*n3^2 - 
      107*d*n1^2*n3^2 + 11*n1^3*n3^2 + 4326*n2*n3^2 - 2984*d*n2*n3^2 + 
      512*d^2*n2*n3^2 + 1052*n1*n2*n3^2 - 346*d*n1*n2*n3^2 + 
      36*n1^2*n2*n3^2 + 588*n2^2*n3^2 - 184*d*n2^2*n3^2 + 20*n1*n2^2*n3^2 - 
      24*n2^3*n3^2 + 194*n3^3 - 194*d*n3^3 + 44*d^2*n3^3 + 154*n1*n3^3 - 
      63*d*n1*n3^3 + 21*n1^2*n3^3 + 560*n2*n3^3 - 202*d*n2*n3^3 + 
      92*n1*n2*n3^3 + 76*n2^2*n3^3 - 70*n3^4 + 21*d*n3^4 - 4*n1*n3^4 + 
      14*n2*n3^4 - 6*n3^5)*j[p4a, n1, -1 + n2, 2 + n3, 0, 1, 1, 0, 1, 0, 1, 
      0, 0, 0, 1])/((-2 + d - n1 - 2*n2)*(-3 + d - n3)*
     (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
      1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
      106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
      388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
      222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
      1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
      88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
      38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
      2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
      116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
      64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
      138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((1 + n3)*(-16104 + 22042*d - 11291*d^2 + 2565*d^3 - 
      218*d^4 - 6848*n1 + 6932*d*n1 - 2330*d^2*n1 + 260*d^3*n1 - 903*n1^2 + 
      591*d*n1^2 - 96*d^2*n1^2 - 40*n1^3 + 12*d*n1^3 - 19396*n2 + 
      19826*d*n2 - 6737*d^2*n2 + 761*d^3*n2 - 6088*n1*n2 + 4049*d*n1*n2 - 
      671*d^2*n1*n2 - 466*n1^2*n2 + 150*d*n1^2*n2 - 8*n1^3*n2 - 7532*n2^2 + 
      5102*d*n2^2 - 862*d^2*n2^2 - 1490*n1*n2^2 + 494*d*n1*n2^2 - 
      56*n1^2*n2^2 - 1184*n2^3 + 400*d*n2^3 - 112*n1*n2^3 - 64*n2^4 - 
      3366*n3 + 3623*d*n3 - 1299*d^2*n3 + 155*d^3*n3 - 1397*n1*n3 + 
      1013*d*n1*n3 - 182*d^2*n1*n3 - 198*n1^2*n3 + 69*d*n1^2*n3 - 8*n1^3*n3 - 
      5190*n2*n3 + 3641*d*n2*n3 - 636*d^2*n2*n3 - 1370*n1*n2*n3 + 
      465*d*n1*n2*n3 - 62*n1^2*n2*n3 - 1638*n2^2*n3 + 564*d*n2^2*n3 - 
      190*n1*n2^2*n3 - 144*n2^3*n3 + 720*n3^2 - 472*d*n3^2 + 76*d^2*n3^2 + 
      150*n1*n3^2 - 41*d*n1*n3^2 - 3*n1^2*n3^2 - 188*n2*n3^2 + 77*d*n2*n3^2 - 
      54*n1*n2*n3^2 - 70*n2^2*n3^2 + 210*n3^3 - 73*d*n3^3 + 31*n1*n3^3 + 
      22*n2*n3^3 + 12*n3^4)*j[p4a, n1, -1 + n2, 2 + n3, 0, 1, 1, 1, 0, 0, 1, 
      0, 0, 0, 1])/((3 - d + n3)*(-7020 + 10020*d - 5365*d^2 + 1277*d^3 - 
      114*d^4 - 4286*n1 + 4615*d*n1 - 1656*d^2*n1 + 198*d^3*n1 - 1004*n1^2 + 
      723*d*n1^2 - 130*d^2*n1^2 - 106*n1^3 + 38*d*n1^3 - 4*n1^4 - 8548*n2 + 
      9150*d*n2 - 3264*d^2*n2 + 388*d^3*n2 - 4002*n1*n2 + 2858*d*n1*n2 - 
      510*d^2*n1*n2 - 622*n1^2*n2 + 222*d*n1^2*n2 - 32*n1^3*n2 - 3424*n2^2 + 
      2444*d*n2^2 - 436*d^2*n2^2 - 1076*n1*n2^2 + 384*d*n1*n2^2 - 
      84*n1^2*n2^2 - 560*n2^3 + 200*d*n2^3 - 88*n1*n2^3 - 32*n2^4 - 122*n3 + 
      137*d*n3 - 53*d^2*n3 + 7*d^3*n3 - 38*n1*n3 + 41*d*n1*n3 - 
      10*d^2*n1*n3 - 14*n1^2*n3 + 7*d*n1^2*n3 - 2*n1^3*n3 - 978*n2*n3 + 
      702*d*n2*n3 - 126*d^2*n2*n3 - 322*n1*n2*n3 + 116*d*n1*n2*n3 - 
      26*n1^2*n2*n3 - 392*n2^2*n3 + 140*d*n2^2*n3 - 64*n1*n2^2*n3 - 
      40*n2^3*n3 + 426*n3^2 - 304*d*n3^2 + 54*d^2*n3^2 + 138*n1*n3^2 - 
      48*d*n1*n3^2 + 10*n1^2*n3^2 + 92*n2*n3^2 - 32*d*n2*n3^2 + 
      12*n1*n2*n3^2 + 58*n3^3 - 21*d*n3^3 + 10*n1*n3^3 + 10*n2*n3^3 + 
      2*n3^4)) + ((1 + n3)*(-128 + 106*d - 27*d^2 + 2*d^3 + 52*n1 - 42*d*n1 + 
      8*d^2*n1 + 13*n1^2 - 4*d*n1^2 - 76*n2 + 34*d*n2 - 3*d^2*n2 + 44*n1*n2 - 
      15*d*n1*n2 + 2*n1^2*n2 - 12*n2^2 + 2*d*n2^2 + 6*n1*n2^2 - 50*n3 + 
      33*d*n3 - 5*d^2*n3 - n1*n3 - 2*d*n1*n3 + 3*n1^2*n3 - 22*n2*n3 + 
      5*d*n2*n3 + 6*n1*n2*n3 - 2*n2^2*n3 - 6*n3^2 + 3*d*n3^2 - 3*n1*n3^2 - 
      2*n2*n3^2)*j[p4a, n1, -1 + n2, 2 + n3, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 
      1])/(-7020 + 10020*d - 5365*d^2 + 1277*d^3 - 114*d^4 - 4286*n1 + 
     4615*d*n1 - 1656*d^2*n1 + 198*d^3*n1 - 1004*n1^2 + 723*d*n1^2 - 
     130*d^2*n1^2 - 106*n1^3 + 38*d*n1^3 - 4*n1^4 - 8548*n2 + 9150*d*n2 - 
     3264*d^2*n2 + 388*d^3*n2 - 4002*n1*n2 + 2858*d*n1*n2 - 510*d^2*n1*n2 - 
     622*n1^2*n2 + 222*d*n1^2*n2 - 32*n1^3*n2 - 3424*n2^2 + 2444*d*n2^2 - 
     436*d^2*n2^2 - 1076*n1*n2^2 + 384*d*n1*n2^2 - 84*n1^2*n2^2 - 560*n2^3 + 
     200*d*n2^3 - 88*n1*n2^3 - 32*n2^4 - 122*n3 + 137*d*n3 - 53*d^2*n3 + 
     7*d^3*n3 - 38*n1*n3 + 41*d*n1*n3 - 10*d^2*n1*n3 - 14*n1^2*n3 + 
     7*d*n1^2*n3 - 2*n1^3*n3 - 978*n2*n3 + 702*d*n2*n3 - 126*d^2*n2*n3 - 
     322*n1*n2*n3 + 116*d*n1*n2*n3 - 26*n1^2*n2*n3 - 392*n2^2*n3 + 
     140*d*n2^2*n3 - 64*n1*n2^2*n3 - 40*n2^3*n3 + 426*n3^2 - 304*d*n3^2 + 
     54*d^2*n3^2 + 138*n1*n3^2 - 48*d*n1*n3^2 + 10*n1^2*n3^2 + 92*n2*n3^2 - 
     32*d*n2*n3^2 + 12*n1*n2*n3^2 + 58*n3^3 - 21*d*n3^3 + 10*n1*n3^3 + 
     10*n2*n3^3 + 2*n3^4) - ((1 + n3)*(-8244 + 11244*d - 5739*d^2 + 
      1299*d^3 - 110*d^4 - 3346*n1 + 3377*d*n1 - 1132*d^2*n1 + 126*d^3*n1 - 
      432*n1^2 + 283*d*n1^2 - 46*d^2*n1^2 - 20*n1^3 + 6*d*n1^3 - 9812*n2 + 
      10002*d*n2 - 3390*d^2*n2 + 382*d^3*n2 - 2978*n1*n2 + 1980*d*n1*n2 - 
      328*d^2*n1*n2 - 230*n1^2*n2 + 74*d*n1^2*n2 - 4*n1^3*n2 - 3784*n2^2 + 
      2560*d*n2^2 - 432*d^2*n2^2 - 736*n1*n2^2 + 244*d*n1*n2^2 - 
      28*n1^2*n2^2 - 592*n2^3 + 200*d*n2^3 - 56*n1*n2^3 - 32*n2^4 - 1822*n3 + 
      1939*d*n3 - 687*d^2*n3 + 81*d^3*n3 - 674*n1*n3 + 483*d*n1*n3 - 
      86*d^2*n1*n3 - 88*n1^2*n3 + 31*d*n1^2*n3 - 4*n1^3*n3 - 2666*n2*n3 + 
      1856*d*n2*n3 - 322*d^2*n2*n3 - 654*n1*n2*n3 + 222*d*n1*n2*n3 - 
      30*n1^2*n2*n3 - 828*n2^2*n3 + 284*d*n2^2*n3 - 92*n1*n2^2*n3 - 
      72*n2^3*n3 + 326*n3^2 - 212*d*n3^2 + 34*d^2*n3^2 + 70*n1*n3^2 - 
      20*d*n1*n3^2 - 108*n2*n3^2 + 42*d*n2*n3^2 - 24*n1*n2*n3^2 - 
      36*n2^2*n3^2 + 102*n3^3 - 35*d*n3^3 + 14*n1*n3^3 + 10*n2*n3^3 + 6*n3^4)*
     j[p4a, n1, -1 + n2, 2 + n3, 0, 1, 1, 1, 1, 0, 1, 0, -1, 0, 1])/
    ((3 - d + n3)*(-7020 + 10020*d - 5365*d^2 + 1277*d^3 - 114*d^4 - 
      4286*n1 + 4615*d*n1 - 1656*d^2*n1 + 198*d^3*n1 - 1004*n1^2 + 
      723*d*n1^2 - 130*d^2*n1^2 - 106*n1^3 + 38*d*n1^3 - 4*n1^4 - 8548*n2 + 
      9150*d*n2 - 3264*d^2*n2 + 388*d^3*n2 - 4002*n1*n2 + 2858*d*n1*n2 - 
      510*d^2*n1*n2 - 622*n1^2*n2 + 222*d*n1^2*n2 - 32*n1^3*n2 - 3424*n2^2 + 
      2444*d*n2^2 - 436*d^2*n2^2 - 1076*n1*n2^2 + 384*d*n1*n2^2 - 
      84*n1^2*n2^2 - 560*n2^3 + 200*d*n2^3 - 88*n1*n2^3 - 32*n2^4 - 122*n3 + 
      137*d*n3 - 53*d^2*n3 + 7*d^3*n3 - 38*n1*n3 + 41*d*n1*n3 - 
      10*d^2*n1*n3 - 14*n1^2*n3 + 7*d*n1^2*n3 - 2*n1^3*n3 - 978*n2*n3 + 
      702*d*n2*n3 - 126*d^2*n2*n3 - 322*n1*n2*n3 + 116*d*n1*n2*n3 - 
      26*n1^2*n2*n3 - 392*n2^2*n3 + 140*d*n2^2*n3 - 64*n1*n2^2*n3 - 
      40*n2^3*n3 + 426*n3^2 - 304*d*n3^2 + 54*d^2*n3^2 + 138*n1*n3^2 - 
      48*d*n1*n3^2 + 10*n1^2*n3^2 + 92*n2*n3^2 - 32*d*n2*n3^2 + 
      12*n1*n2*n3^2 + 58*n3^3 - 21*d*n3^3 + 10*n1*n3^3 + 10*n2*n3^3 + 
      2*n3^4)) - ((1 + n3)*(-25080 + 44840*d - 31918*d^2 + 11308*d^3 - 
      1994*d^4 + 140*d^5 - 19028*n1 + 26452*d*n1 - 13729*d^2*n1 + 
      3152*d^3*n1 - 270*d^4*n1 - 4414*n1^2 + 4467*d*n1^2 - 1497*d^2*n1^2 + 
      166*d^3*n1^2 - 388*n1^3 + 251*d*n1^3 - 40*d^2*n1^3 - 14*n1^4 + 
      4*d*n1^4 - 42520*n2 + 60428*d*n2 - 32074*d^2*n2 + 7535*d^3*n2 - 
      661*d^4*n2 - 24764*n1*n2 + 25734*d*n1*n2 - 8870*d^2*n1*n2 + 
      1014*d^3*n1*n2 - 4260*n1^2*n2 + 2853*d*n1^2*n2 - 475*d^2*n1^2*n2 - 
      242*n1^3*n2 + 78*d*n1^3*n2 - 4*n1^4*n2 - 28536*n2^2 + 30112*d*n2^2 - 
      10552*d^2*n2^2 + 1228*d^3*n2^2 - 11548*n1*n2^2 + 7922*d*n1*n2^2 - 
      1354*d^2*n1*n2^2 - 1222*n1^2*n2^2 + 410*d*n1^2*n2^2 - 36*n1^3*n2^2 - 
      8824*n2^3 + 6148*d*n2^3 - 1068*d^2*n2^3 - 2188*n1*n2^3 + 
      748*d*n1*n2^3 - 112*n1^2*n2^3 - 1248*n2^4 + 432*d*n2^4 - 144*n1*n2^4 - 
      64*n2^5 - 14068*n3 + 19936*d*n3 - 10581*d^2*n3 + 2493*d^3*n3 - 
      220*d^4*n3 - 7528*n1*n3 + 7940*d*n1*n3 - 2789*d^2*n1*n3 + 
      326*d^3*n1*n3 - 1296*n1^2*n3 + 905*d*n1^2*n3 - 157*d^2*n1^2*n3 - 
      86*n1^3*n3 + 29*d*n1^3*n3 - 2*n1^4*n3 - 17772*n2*n3 + 19104*d*n2*n3 - 
      6831*d^2*n2*n3 + 812*d^3*n2*n3 - 7998*n1*n2*n3 + 5649*d*n1*n2*n3 - 
      991*d^2*n1*n2*n3 - 1002*n1^2*n2*n3 + 337*d*n1^2*n2*n3 - 26*n1^3*n2*n3 - 
      9020*n2^2*n3 + 6440*d*n2^2*n3 - 1144*d^2*n2^2*n3 - 2678*n1*n2^2*n3 + 
      924*d*n1*n2^2*n3 - 142*n1^2*n2^2*n3 - 1932*n2^3*n3 + 680*d*n2^3*n3 - 
      260*n1*n2^3*n3 - 144*n2^4*n3 - 2162*n3^2 + 2229*d*n3^2 - 769*d^2*n3^2 + 
      89*d^3*n3^2 - 514*n1*n3^2 + 374*d*n1*n3^2 - 70*d^2*n1*n3^2 - 
      50*n1^2*n3^2 + 24*d*n1^2*n3^2 - 6*n1^3*n3^2 - 2474*n2*n3^2 + 
      1782*d*n2*n3^2 - 323*d^2*n2*n3^2 - 736*n1*n2*n3^2 + 277*d*n1*n2*n3^2 - 
      66*n1^2*n2*n3^2 - 936*n2^2*n3^2 + 344*d*n2^2*n3^2 - 166*n1*n2^2*n3^2 - 
      108*n2^3*n3^2 + 310*n3^3 - 234*d*n3^3 + 44*d^2*n3^3 + 172*n1*n3^3 - 
      62*d*n1*n3^3 + 16*n1^2*n3^3 - 2*d*n2*n3^3 + 10*n1*n2*n3^3 - 
      20*n2^2*n3^3 + 98*n3^4 - 35*d*n3^4 + 18*n1*n3^4 + 14*n2*n3^4 + 6*n3^5)*
     j[p4a, n1, -1 + n2, 2 + n3, 0, 1, 1, 1, 1, 0, 1, 0, 0, -1, 1])/
    ((-2 + d - n1 - 2*n2)*(-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 
      1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 
      1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 
      8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 
      2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 
      32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 
      384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 
      32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 
      41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 
      978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
      116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
      64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
      138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) - ((1 + n3)*(12180 - 16846*d + 8720*d^2 - 2002*d^3 + 172*d^4 + 
      5122*n1 - 5229*d*n1 + 1774*d^2*n1 - 200*d^3*n1 + 663*n1^2 - 
      438*d*n1^2 + 72*d^2*n1^2 + 26*n1^3 - 8*d*n1^3 + 12716*n2 - 13052*d*n2 + 
      4456*d^2*n2 - 506*d^3*n2 + 3812*n1*n2 - 2552*d*n1*n2 + 426*d^2*n1*n2 + 
      284*n1^2*n2 - 92*d*n1^2*n2 + 4*n1^3*n2 + 4456*n2^2 - 3024*d*n2^2 + 
      512*d^2*n2^2 + 832*n1*n2^2 - 276*d*n1*n2^2 + 28*n1^2*n2^2 + 640*n2^3 - 
      216*d*n2^3 + 56*n1*n2^3 + 32*n2^4 + 4148*n3 - 4466*d*n3 + 1598*d^2*n3 - 
      190*d^3*n3 + 1611*n1*n3 - 1144*d*n1*n3 + 202*d^2*n1*n3 + 192*n1^2*n3 - 
      66*d*n1^2*n3 + 6*n1^3*n3 + 4198*n2*n3 - 2942*d*n2*n3 + 514*d^2*n2*n3 + 
      1016*n1*n2*n3 - 348*d*n1*n2*n3 + 48*n1^2*n2*n3 + 1124*n2^2*n3 - 
      388*d*n2^2*n3 + 124*n1*n2^2*n3 + 88*n2^3*n3 + 78*n3^2 - 90*d*n3^2 + 
      22*d^2*n3^2 + 60*n1*n3^2 - 27*d*n1*n3^2 + 9*n1^2*n3^2 + 320*n2*n3^2 - 
      118*d*n2*n3^2 + 52*n1*n2*n3^2 + 60*n2^2*n3^2 - 80*n3^3 + 26*d*n3^3 - 
      9*n1*n3^3 - 2*n2*n3^3 - 6*n3^4)*j[p4a, n1, -1 + n2, 2 + n3, 0, 1, 1, 1, 
      1, 0, 1, 0, 0, 0, 0])/((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 
      1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 
      1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 
      8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 
      2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 
      32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 
      384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 
      32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 
      41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 
      978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
      116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
      64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
      138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) - ((1 + n3)*(76 + 200*d - 267*d^2 + 100*d^3 - 12*d^4 - 
      826*n1 + 979*d*n1 - 379*d^2*n1 + 48*d^3*n1 - 304*n1^2 + 217*d*n1^2 - 
      38*d^2*n1^2 - 26*n1^3 + 8*d*n1^3 + 224*n2 + 38*d*n2 - 107*d^2*n2 + 
      23*d^3*n2 - 712*n1*n2 + 555*d*n1*n2 - 105*d^2*n1*n2 - 174*n1^2*n2 + 
      58*d*n1^2*n2 - 4*n1^3*n2 + 116*n2^2 - 10*d*n2^2 - 10*d^2*n2^2 - 
      186*n1*n2^2 + 70*d*n1*n2^2 - 20*n1^2*n2^2 + 16*n2^3 - 16*n1*n2^3 - 
      218*n3 + 257*d*n3 - 103*d^2*n3 + 14*d^3*n3 - 144*n1*n3 + 124*d*n1*n3 - 
      27*d^2*n1*n3 - 46*n1^2*n3 + 21*d*n1^2*n3 - 6*n1^3*n3 - 116*n2*n3 + 
      117*d*n2*n3 - 28*d^2*n2*n3 - 128*n1*n2*n3 + 57*d*n1*n2*n3 - 
      26*n1^2*n2*n3 - 14*n2^2*n3 + 12*d*n2^2*n3 - 22*n1*n2^2*n3 - 60*n3^2 + 
      33*d*n3^2 - 4*d^2*n3^2 + 18*n1*n3^2 - 9*d*n1*n3^2 + 6*n1^2*n3^2 - 
      26*n2*n3^2 + 7*d*n2*n3^2 + 4*n1*n2*n3^2 - 2*n2^2*n3^2 - 6*n3^3 + 
      2*d*n3^3 - 2*n2*n3^3)*j[p4a, n1, -1 + n2, 2 + n3, 0, 1, 1, 1, 1, 0, 1, 
      0, 0, 0, 1])/((3 - d + n3)*(-7020 + 10020*d - 5365*d^2 + 1277*d^3 - 
      114*d^4 - 4286*n1 + 4615*d*n1 - 1656*d^2*n1 + 198*d^3*n1 - 1004*n1^2 + 
      723*d*n1^2 - 130*d^2*n1^2 - 106*n1^3 + 38*d*n1^3 - 4*n1^4 - 8548*n2 + 
      9150*d*n2 - 3264*d^2*n2 + 388*d^3*n2 - 4002*n1*n2 + 2858*d*n1*n2 - 
      510*d^2*n1*n2 - 622*n1^2*n2 + 222*d*n1^2*n2 - 32*n1^3*n2 - 3424*n2^2 + 
      2444*d*n2^2 - 436*d^2*n2^2 - 1076*n1*n2^2 + 384*d*n1*n2^2 - 
      84*n1^2*n2^2 - 560*n2^3 + 200*d*n2^3 - 88*n1*n2^3 - 32*n2^4 - 122*n3 + 
      137*d*n3 - 53*d^2*n3 + 7*d^3*n3 - 38*n1*n3 + 41*d*n1*n3 - 
      10*d^2*n1*n3 - 14*n1^2*n3 + 7*d*n1^2*n3 - 2*n1^3*n3 - 978*n2*n3 + 
      702*d*n2*n3 - 126*d^2*n2*n3 - 322*n1*n2*n3 + 116*d*n1*n2*n3 - 
      26*n1^2*n2*n3 - 392*n2^2*n3 + 140*d*n2^2*n3 - 64*n1*n2^2*n3 - 
      40*n2^3*n3 + 426*n3^2 - 304*d*n3^2 + 54*d^2*n3^2 + 138*n1*n3^2 - 
      48*d*n1*n3^2 + 10*n1^2*n3^2 + 92*n2*n3^2 - 32*d*n2*n3^2 + 
      12*n1*n2*n3^2 + 58*n3^3 - 21*d*n3^3 + 10*n1*n3^3 + 10*n2*n3^3 + 
      2*n3^4)) + ((-316 + 372*d - 143*d^2 + 18*d^3 - 222*n1 + 159*d*n1 - 
      28*d^2*n1 - 32*n1^2 + 10*d*n1^2 - 108*n2 + 90*d*n2 - 18*d^2*n2 - 
      62*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 8*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
      206*n3 + 155*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
      62*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 36*n3^2 + 13*d*n3^2 - 
      6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3)*j[p4a, n1, n2, n3, 0, 0, 1, 1, 1, 0, 1, 
      0, 0, 0, 2])/(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 
     4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
     723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
     9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
     510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
     2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
     84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
     137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 
     14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 
     126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 
     392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 
     304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 
     92*n2*n3^2 + 32*d*n2*n3^2 - 12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 
     10*n1*n3^3 - 10*n2*n3^3 - 2*n3^4) + 
   ((-460 + 246*d + 80*d^2 - 67*d^3 + 10*d^4 + 982*n1 - 1157*d*n1 + 
      445*d^2*n1 - 56*d^3*n1 + 343*n1^2 - 242*d*n1^2 + 42*d^2*n1^2 + 
      26*n1^3 - 8*d*n1^3 - 452*n2 + 140*d*n2 + 64*d^2*n2 - 20*d^3*n2 + 
      844*n1*n2 - 644*d*n1*n2 + 120*d^2*n1*n2 + 180*n1^2*n2 - 60*d*n1^2*n2 + 
      4*n1^3*n2 - 152*n2^2 + 28*d*n2^2 + 8*d^2*n2^2 + 204*n1*n2^2 - 
      76*d*n1*n2^2 + 20*n1^2*n2^2 - 16*n2^3 + 16*n1*n2^3 - 60*n3 - 2*d*n3 + 
      28*d^2*n3 - 7*d^3*n3 + 193*n1*n3 - 171*d*n1*n3 + 37*d^2*n1*n3 + 
      68*n1^2*n3 - 28*d*n1^2*n3 + 6*n1^3*n3 - 26*n2*n3 - 46*d*n2*n3 + 
      20*d^2*n2*n3 + 190*n1*n2*n3 - 78*d*n1*n2*n3 + 28*n1^2*n2*n3 - 
      4*n2^2*n3 - 8*d*n2^2*n3 + 28*n1*n2^2*n3 - 8*n3^2 + 15*d*n3^2 - 
      4*d^2*n3^2 - 28*n1*n3^2 + 10*d*n1*n3^2 - 3*n1^2*n3^2 - 2*n2*n3^2 + 
      2*n1*n2*n3^2 + d*n3^3 - 3*n1*n3^3)*j[p4a, n1, n2, n3, 0, 0, 1, 2, 1, 0, 
      1, 0, 0, 0, 1])/((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 
      114*d^4 + 4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
      723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
      9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
      510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
      2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
      84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
      137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 
      10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 
      702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 
      26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 
      40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 
      48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((-1628 + 1802*d - 660*d^2 + 80*d^3 - 814*n1 + 579*d*n1 - 
      102*d^2*n1 - 109*n1^2 + 36*d*n1^2 - 2*n1^3 - 1076*n2 + 784*d*n2 - 
      142*d^2*n2 - 340*n1*n2 + 120*d*n1*n2 - 22*n1^2*n2 - 232*n2^2 + 
      84*d*n2^2 - 36*n1*n2^2 - 16*n2^3 - 544*n3 + 408*d*n3 - 76*d^2*n3 - 
      199*n1*n3 + 73*d*n1*n3 - 17*n1^2*n3 - 250*n2*n3 + 92*d*n2*n3 - 
      42*n1*n2*n3 - 28*n2^2*n3 - 58*n3^2 + 22*d*n3^2 - 11*n1*n3^2 - 
      14*n2*n3^2 - 2*n3^3)*j[p4a, n1, n2, n3, 0, 0, 2, 1, 1, 0, 1, 0, 0, 0, 
      1])/(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 
     4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 
     130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 
     3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 
     622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 
     436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 
     200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 
     7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 
     7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 
     322*n1*n2*n3 - 116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 
     140*d*n2^2*n3 + 64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 
     54*d^2*n3^2 - 138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 
     32*d*n2*n3^2 - 12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 
     10*n2*n3^3 - 2*n3^4) + ((460 - 246*d - 80*d^2 + 67*d^3 - 10*d^4 - 
      982*n1 + 1157*d*n1 - 445*d^2*n1 + 56*d^3*n1 - 343*n1^2 + 242*d*n1^2 - 
      42*d^2*n1^2 - 26*n1^3 + 8*d*n1^3 + 452*n2 - 140*d*n2 - 64*d^2*n2 + 
      20*d^3*n2 - 844*n1*n2 + 644*d*n1*n2 - 120*d^2*n1*n2 - 180*n1^2*n2 + 
      60*d*n1^2*n2 - 4*n1^3*n2 + 152*n2^2 - 28*d*n2^2 - 8*d^2*n2^2 - 
      204*n1*n2^2 + 76*d*n1*n2^2 - 20*n1^2*n2^2 + 16*n2^3 - 16*n1*n2^3 + 
      60*n3 + 2*d*n3 - 28*d^2*n3 + 7*d^3*n3 - 193*n1*n3 + 171*d*n1*n3 - 
      37*d^2*n1*n3 - 68*n1^2*n3 + 28*d*n1^2*n3 - 6*n1^3*n3 + 26*n2*n3 + 
      46*d*n2*n3 - 20*d^2*n2*n3 - 190*n1*n2*n3 + 78*d*n1*n2*n3 - 
      28*n1^2*n2*n3 + 4*n2^2*n3 + 8*d*n2^2*n3 - 28*n1*n2^2*n3 + 8*n3^2 - 
      15*d*n3^2 + 4*d^2*n3^2 + 28*n1*n3^2 - 10*d*n1*n3^2 + 3*n1^2*n3^2 + 
      2*n2*n3^2 - 2*n1*n2*n3^2 - d*n3^3 + 3*n1*n3^3)*
     j[p4a, n1, n2, n3, 0, 1, 0, 1, 1, 0, 2, 0, 0, 0, 1])/
    ((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 
      4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
      723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
      9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
      510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
      2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
      84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
      137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 
      10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 
      702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 
      26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 
      40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 
      48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((996 - 1058*d + 374*d^2 - 44*d^3 + 370*n1 - 261*d*n1 + 
      46*d^2*n1 + 45*n1^2 - 16*d*n1^2 + 2*n1^3 + 860*n2 - 604*d*n2 + 
      106*d^2*n2 + 216*n1*n2 - 76*d*n1*n2 + 14*n1^2*n2 + 216*n2^2 - 
      76*d*n2^2 + 28*n1*n2^2 + 16*n2^3 + 132*n3 - 98*d*n3 + 18*d^2*n3 + 
      31*n1*n3 - 11*d*n1*n3 + n1^2*n3 + 126*n2*n3 - 44*d*n2*n3 + 
      14*n1*n2*n3 + 20*n2^2*n3 - 14*n3^2 + 4*d*n3^2 - n1*n3^2 + 2*n2*n3^2 - 
      2*n3^3)*j[p4a, n1, n2, n3, 0, 1, 1, 0, 1, 0, 2, 0, 0, 0, 1])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) + ((488 - 1186*d + 881*d^2 - 264*d^3 + 28*d^4 + 1648*n1 - 
      1856*d*n1 + 688*d^2*n1 - 84*d^3*n1 + 439*n1^2 - 304*d*n1^2 + 
      52*d^2*n1^2 + 26*n1^3 - 8*d*n1^3 - 128*n2 - 238*d*n2 + 208*d^2*n2 - 
      38*d^3*n2 + 1030*n1*n2 - 772*d*n1*n2 + 142*d^2*n1*n2 + 192*n1^2*n2 - 
      64*d*n1^2*n2 + 4*n1^3*n2 - 128*n2^2 + 8*d*n2^2 + 12*d^2*n2^2 + 
      216*n1*n2^2 - 80*d*n1*n2^2 + 20*n1^2*n2^2 - 16*n2^3 + 16*n1*n2^3 + 
      874*n3 - 1045*d*n3 + 413*d^2*n3 - 54*d^3*n3 + 667*n1*n3 - 507*d*n1*n3 + 
      96*d^2*n1*n3 + 124*n1^2*n3 - 46*d*n1^2*n3 + 6*n1^3*n3 + 268*n2*n3 - 
      270*d*n2*n3 + 62*d^2*n2*n3 + 294*n1*n2*n3 - 114*d*n1*n2*n3 + 
      32*n1^2*n2*n3 + 16*n2^2*n3 - 16*d*n2^2*n3 + 32*n1*n2^2*n3 + 306*n3^2 - 
      215*d*n3^2 + 38*d^2*n3^2 + 74*n1*n3^2 - 27*d*n1*n3^2 + 5*n1^2*n3^2 + 
      78*n2*n3^2 - 30*d*n2*n3^2 + 16*n1*n2*n3^2 + 4*n2^2*n3^2 + 42*n3^3 - 
      14*d*n3^3 + 3*n1*n3^3 + 6*n2*n3^3 + 2*n3^4)*j[p4a, n1, n2, n3, 0, 1, 1, 
      2, 0, 0, 1, 0, 0, 0, 1])/((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 
      1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 
      1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 
      8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 
      2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 
      32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 
      384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 
      32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 
      41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 
      978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
      116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
      64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
      138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((-996 + 1058*d - 374*d^2 + 44*d^3 - 370*n1 + 261*d*n1 - 
      46*d^2*n1 - 45*n1^2 + 16*d*n1^2 - 2*n1^3 - 860*n2 + 604*d*n2 - 
      106*d^2*n2 - 216*n1*n2 + 76*d*n1*n2 - 14*n1^2*n2 - 216*n2^2 + 
      76*d*n2^2 - 28*n1*n2^2 - 16*n2^3 - 132*n3 + 98*d*n3 - 18*d^2*n3 - 
      31*n1*n3 + 11*d*n1*n3 - n1^2*n3 - 126*n2*n3 + 44*d*n2*n3 - 
      14*n1*n2*n3 - 20*n2^2*n3 + 14*n3^2 - 4*d*n3^2 + n1*n3^2 - 2*n2*n3^2 + 
      2*n3^3)*j[p4a, n1, n2, n3, 0, 1, 2, 1, 0, 0, 1, 0, 0, 0, 1])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) + ((11720 - 16600*d + 8800*d^2 - 2069*d^3 + 182*d^4 + 6104*n1 - 
      6386*d*n1 + 2219*d^2*n1 - 256*d^3*n1 + 1006*n1^2 - 680*d*n1^2 + 
      114*d^2*n1^2 + 52*n1^3 - 16*d*n1^3 + 12264*n2 - 12912*d*n2 + 
      4520*d^2*n2 - 526*d^3*n2 + 4656*n1*n2 - 3196*d*n1*n2 + 546*d^2*n1*n2 + 
      464*n1^2*n2 - 152*d*n1^2*n2 + 8*n1^3*n2 + 4304*n2^2 - 2996*d*n2^2 + 
      520*d^2*n2^2 + 1036*n1*n2^2 - 352*d*n1*n2^2 + 48*n1^2*n2^2 + 624*n2^3 - 
      216*d*n2^3 + 72*n1*n2^3 + 32*n2^4 + 4088*n3 - 4468*d*n3 + 1626*d^2*n3 - 
      197*d^3*n3 + 1804*n1*n3 - 1315*d*n1*n3 + 239*d^2*n1*n3 + 260*n1^2*n3 - 
      94*d*n1^2*n3 + 12*n1^3*n3 + 4172*n2*n3 - 2988*d*n2*n3 + 534*d^2*n2*n3 + 
      1206*n1*n2*n3 - 426*d*n1*n2*n3 + 76*n1^2*n2*n3 + 1120*n2^2*n3 - 
      396*d*n2^2*n3 + 152*n1*n2^2*n3 + 88*n2^3*n3 + 70*n3^2 - 75*d*n3^2 + 
      18*d^2*n3^2 + 32*n1*n3^2 - 17*d*n1*n3^2 + 6*n1^2*n3^2 + 318*n2*n3^2 - 
      118*d*n2*n3^2 + 54*n1*n2*n3^2 + 60*n2^2*n3^2 - 80*n3^3 + 27*d*n3^3 - 
      12*n1*n3^3 - 2*n2*n3^3 - 6*n3^4)*j[p4a, n1, n2, 1 + n3, -1, 1, 1, 0, 2, 
      0, 1, 0, 0, 0, 1])/((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 
      1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 
      1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 
      8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 
      2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 
      32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 
      384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 
      32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 
      41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 
      978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
      116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
      64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
      138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((-41592 + 76396*d - 55866*d^2 + 20335*d^3 - 3685*d^4 + 
      266*d^5 - 34076*n1 + 48550*d*n1 - 25840*d^2*n1 + 6089*d^3*n1 - 
      536*d^4*n1 - 8656*n1^2 + 8986*d*n1^2 - 3096*d^2*n1^2 + 354*d^3*n1^2 - 
      835*n1^3 + 556*d*n1^3 - 92*d^2*n1^3 - 26*n1^4 + 8*d*n1^4 - 71104*n2 + 
      102320*d*n2 - 55000*d^2*n2 + 13090*d^3*n2 - 1164*d^4*n2 - 40664*n1*n2 + 
      42710*d*n1*n2 - 14898*d^2*n1*n2 + 1726*d^3*n1*n2 - 6846*n1^2*n2 + 
      4648*d*n1^2*n2 - 786*d^2*n1^2*n2 - 368*n1^3*n2 + 120*d*n1^3*n2 - 
      4*n1^4*n2 - 43368*n2^2 + 45940*d*n2^2 - 16172*d^2*n2^2 + 
      1892*d^3*n2^2 - 16348*n1*n2^2 + 11268*d*n1*n2^2 - 1936*d^2*n1*n2^2 - 
      1600*n1^2*n2^2 + 536*d*n1^2*n2^2 - 36*n1^3*n2^2 - 11776*n2^3 + 
      8200*d*n2^3 - 1424*d^2*n2^3 - 2632*n1*n2^3 + 896*d*n1*n2^3 - 
      112*n1^2*n2^3 - 1440*n2^4 + 496*d*n2^4 - 144*n1*n2^4 - 64*n2^5 - 
      23928*n3 + 35484*d*n3 - 19684*d^2*n3 + 4840*d^3*n3 - 445*d^4*n3 - 
      16108*n1*n3 + 17624*d*n1*n3 - 6405*d^2*n1*n3 + 773*d^3*n1*n3 - 
      3493*n1^2*n3 + 2492*d*n1^2*n3 - 442*d^2*n1^2*n3 - 280*n1^3*n3 + 
      96*d*n1^3*n3 - 6*n1^4*n3 - 34044*n2*n3 + 37414*d*n2*n3 - 
      13652*d^2*n2*n3 + 1654*d^3*n2*n3 - 16178*n1*n2*n3 + 11566*d*n1*n2*n3 - 
      2058*d^2*n1*n2*n3 - 2104*n1^2*n2*n3 + 728*d*n1^2*n2*n3 - 
      68*n1^3*n2*n3 - 16652*n2^2*n3 + 11960*d*n2^2*n3 - 2140*d^2*n2^2*n3 - 
      4728*n1*n2^2*n3 + 1656*d*n1*n2^2*n3 - 268*n1^2*n2^2*n3 - 3216*n2^3*n3 + 
      1136*d*n2^3*n3 - 408*n1*n2^3*n3 - 208*n2^4*n3 - 3914*n3^2 + 
      4409*d*n3^2 - 1661*d^2*n3^2 + 209*d^3*n3^2 - 1930*n1*n3^2 + 
      1486*d*n1*n3^2 - 285*d^2*n1*n3^2 - 350*n1^2*n3^2 + 134*d*n1^2*n3^2 - 
      21*n1^3*n3^2 - 5130*n2*n3^2 + 3856*d*n2*n3^2 - 722*d^2*n2*n3^2 - 
      1828*n1*n2*n3^2 + 676*d*n1*n2*n3^2 - 146*n1^2*n2*n3^2 - 
      1940*n2^2*n3^2 + 712*d*n2^2*n3^2 - 316*n1*n2^2*n3^2 - 208*n2^3*n3^2 + 
      210*n3^3 - 142*d*n3^3 + 23*d^2*n3^3 + 96*n1*n3^3 - 28*d*n1*n3^3 + 
      3*n1^2*n3^3 - 136*n2*n3^3 + 58*d*n2*n3^3 - 34*n1*n2*n3^3 - 
      56*n2^2*n3^3 + 98*n3^4 - 35*d*n3^4 + 18*n1*n3^4 + 14*n2*n3^4 + 6*n3^5)*
     j[p4a, n1, n2, 1 + n3, -1, 1, 1, 2, 0, 0, 1, 0, 0, 0, 1])/
    ((-2 + d - n1 - 2*n2)*(-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 
      1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 
      1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 
      8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 
      2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 
      32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 
      384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 
      32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 
      41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 
      978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
      116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
      64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
      138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((12180 - 16846*d + 8720*d^2 - 2002*d^3 + 172*d^4 + 
      5122*n1 - 5229*d*n1 + 1774*d^2*n1 - 200*d^3*n1 + 663*n1^2 - 
      438*d*n1^2 + 72*d^2*n1^2 + 26*n1^3 - 8*d*n1^3 + 12716*n2 - 13052*d*n2 + 
      4456*d^2*n2 - 506*d^3*n2 + 3812*n1*n2 - 2552*d*n1*n2 + 426*d^2*n1*n2 + 
      284*n1^2*n2 - 92*d*n1^2*n2 + 4*n1^3*n2 + 4456*n2^2 - 3024*d*n2^2 + 
      512*d^2*n2^2 + 832*n1*n2^2 - 276*d*n1*n2^2 + 28*n1^2*n2^2 + 640*n2^3 - 
      216*d*n2^3 + 56*n1*n2^3 + 32*n2^4 + 4148*n3 - 4466*d*n3 + 1598*d^2*n3 - 
      190*d^3*n3 + 1611*n1*n3 - 1144*d*n1*n3 + 202*d^2*n1*n3 + 192*n1^2*n3 - 
      66*d*n1^2*n3 + 6*n1^3*n3 + 4198*n2*n3 - 2942*d*n2*n3 + 514*d^2*n2*n3 + 
      1016*n1*n2*n3 - 348*d*n1*n2*n3 + 48*n1^2*n2*n3 + 1124*n2^2*n3 - 
      388*d*n2^2*n3 + 124*n1*n2^2*n3 + 88*n2^3*n3 + 78*n3^2 - 90*d*n3^2 + 
      22*d^2*n3^2 + 60*n1*n3^2 - 27*d*n1*n3^2 + 9*n1^2*n3^2 + 320*n2*n3^2 - 
      118*d*n2*n3^2 + 52*n1*n2*n3^2 + 60*n2^2*n3^2 - 80*n3^3 + 26*d*n3^3 - 
      9*n1*n3^3 - 2*n2*n3^3 - 6*n3^4)*j[p4a, n1, n2, 1 + n3, -1, 1, 1, 2, 1, 
      0, 0, 0, 0, 0, 1])/((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 
      1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 
      1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 
      8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 
      2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 
      32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 
      384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 
      32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 
      41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 
      978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
      116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
      64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
      138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((996 - 1058*d + 374*d^2 - 44*d^3 + 370*n1 - 261*d*n1 + 
      46*d^2*n1 + 45*n1^2 - 16*d*n1^2 + 2*n1^3 + 860*n2 - 604*d*n2 + 
      106*d^2*n2 + 216*n1*n2 - 76*d*n1*n2 + 14*n1^2*n2 + 216*n2^2 - 
      76*d*n2^2 + 28*n1*n2^2 + 16*n2^3 + 132*n3 - 98*d*n3 + 18*d^2*n3 + 
      31*n1*n3 - 11*d*n1*n3 + n1^2*n3 + 126*n2*n3 - 44*d*n2*n3 + 
      14*n1*n2*n3 + 20*n2^2*n3 - 14*n3^2 + 4*d*n3^2 - n1*n3^2 + 2*n2*n3^2 - 
      2*n3^3)*j[p4a, n1, n2, 1 + n3, -1, 1, 2, 0, 1, 0, 1, 0, 0, 0, 1])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) + ((996 - 1058*d + 374*d^2 - 44*d^3 + 370*n1 - 261*d*n1 + 
      46*d^2*n1 + 45*n1^2 - 16*d*n1^2 + 2*n1^3 + 860*n2 - 604*d*n2 + 
      106*d^2*n2 + 216*n1*n2 - 76*d*n1*n2 + 14*n1^2*n2 + 216*n2^2 - 
      76*d*n2^2 + 28*n1*n2^2 + 16*n2^3 + 132*n3 - 98*d*n3 + 18*d^2*n3 + 
      31*n1*n3 - 11*d*n1*n3 + n1^2*n3 + 126*n2*n3 - 44*d*n2*n3 + 
      14*n1*n2*n3 + 20*n2^2*n3 - 14*n3^2 + 4*d*n3^2 - n1*n3^2 + 2*n2*n3^2 - 
      2*n3^3)*j[p4a, n1, n2, 1 + n3, -1, 1, 2, 1, 0, 0, 1, 0, 0, 0, 1])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) + ((-996 + 1058*d - 374*d^2 + 44*d^3 - 370*n1 + 261*d*n1 - 
      46*d^2*n1 - 45*n1^2 + 16*d*n1^2 - 2*n1^3 - 860*n2 + 604*d*n2 - 
      106*d^2*n2 - 216*n1*n2 + 76*d*n1*n2 - 14*n1^2*n2 - 216*n2^2 + 
      76*d*n2^2 - 28*n1*n2^2 - 16*n2^3 - 132*n3 + 98*d*n3 - 18*d^2*n3 - 
      31*n1*n3 + 11*d*n1*n3 - n1^2*n3 - 126*n2*n3 + 44*d*n2*n3 - 
      14*n1*n2*n3 - 20*n2^2*n3 + 14*n3^2 - 4*d*n3^2 + n1*n3^2 - 2*n2*n3^2 + 
      2*n3^3)*j[p4a, n1, n2, 1 + n3, -1, 1, 2, 1, 1, 0, 0, 0, 0, 0, 1])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) + ((996 - 1058*d + 374*d^2 - 44*d^3 + 370*n1 - 261*d*n1 + 
      46*d^2*n1 + 45*n1^2 - 16*d*n1^2 + 2*n1^3 + 860*n2 - 604*d*n2 + 
      106*d^2*n2 + 216*n1*n2 - 76*d*n1*n2 + 14*n1^2*n2 + 216*n2^2 - 
      76*d*n2^2 + 28*n1*n2^2 + 16*n2^3 + 132*n3 - 98*d*n3 + 18*d^2*n3 + 
      31*n1*n3 - 11*d*n1*n3 + n1^2*n3 + 126*n2*n3 - 44*d*n2*n3 + 
      14*n1*n2*n3 + 20*n2^2*n3 - 14*n3^2 + 4*d*n3^2 - n1*n3^2 + 2*n2*n3^2 - 
      2*n3^3)*j[p4a, n1, n2, 1 + n3, -1, 1, 2, 1, 1, 0, 1, 0, 0, 0, 0])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) + ((5744 - 8260*d + 4440*d^2 - 1057*d^3 + 94*d^4 + 3884*n1 - 
      4080*d*n1 + 1421*d^2*n1 - 164*d^3*n1 + 736*n1^2 - 494*d*n1^2 + 
      82*d^2*n1^2 + 40*n1^3 - 12*d*n1^3 + 7104*n2 - 7568*d*n2 + 2676*d^2*n2 - 
      314*d^3*n2 + 3360*n1*n2 - 2308*d*n1*n2 + 394*d^2*n1*n2 + 380*n1^2*n2 - 
      124*d*n1^2*n2 + 8*n1^3*n2 + 3008*n2^2 - 2108*d*n2^2 + 368*d^2*n2^2 + 
      868*n1*n2^2 - 296*d*n1*n2^2 + 48*n1^2*n2^2 + 528*n2^3 - 184*d*n2^3 + 
      72*n1*n2^3 + 32*n2^4 + 3296*n3 - 3616*d*n3 + 1322*d^2*n3 - 161*d^3*n3 + 
      1618*n1*n3 - 1187*d*n1*n3 + 217*d^2*n1*n3 + 254*n1^2*n3 - 
      92*d*n1^2*n3 + 12*n1^3*n3 + 3416*n2*n3 - 2472*d*n2*n3 + 446*d^2*n2*n3 + 
      1122*n1*n2*n3 - 398*d*n1*n2*n3 + 76*n1^2*n2*n3 + 1000*n2^2*n3 - 
      356*d*n2^2*n3 + 152*n1*n2^2*n3 + 88*n2^3*n3 + 154*n3^2 - 127*d*n3^2 + 
      26*d^2*n3^2 + 38*n1*n3^2 - 19*d*n1*n3^2 + 6*n1^2*n3^2 + 306*n2*n3^2 - 
      114*d*n2*n3^2 + 54*n1*n2*n3^2 + 60*n2^2*n3^2 - 68*n3^3 + 23*d*n3^3 - 
      12*n1*n3^3 - 2*n2*n3^3 - 6*n3^4)*j[p4a, n1, n2, 1 + n3, -1, 2, 0, 1, 1, 
      0, 1, 0, 0, 0, 1])/((-2 + d - n1 - 2*n2)*(7020 - 10020*d + 5365*d^2 - 
      1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 
      1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 
      8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 
      2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 
      32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 
      384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 
      32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 
      41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 
      978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
      116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
      64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
      138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((996 - 1058*d + 374*d^2 - 44*d^3 + 370*n1 - 261*d*n1 + 
      46*d^2*n1 + 45*n1^2 - 16*d*n1^2 + 2*n1^3 + 860*n2 - 604*d*n2 + 
      106*d^2*n2 + 216*n1*n2 - 76*d*n1*n2 + 14*n1^2*n2 + 216*n2^2 - 
      76*d*n2^2 + 28*n1*n2^2 + 16*n2^3 + 132*n3 - 98*d*n3 + 18*d^2*n3 + 
      31*n1*n3 - 11*d*n1*n3 + n1^2*n3 + 126*n2*n3 - 44*d*n2*n3 + 
      14*n1*n2*n3 + 20*n2^2*n3 - 14*n3^2 + 4*d*n3^2 - n1*n3^2 + 2*n2*n3^2 - 
      2*n3^3)*j[p4a, n1, n2, 1 + n3, -1, 2, 1, 1, 1, 0, 1, 0, 0, 0, 0])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) + ((128 - 106*d + 27*d^2 - 2*d^3 - 52*n1 + 42*d*n1 - 8*d^2*n1 - 
      13*n1^2 + 4*d*n1^2 + 76*n2 - 34*d*n2 + 3*d^2*n2 - 44*n1*n2 + 
      15*d*n1*n2 - 2*n1^2*n2 + 12*n2^2 - 2*d*n2^2 - 6*n1*n2^2 + 50*n3 - 
      33*d*n3 + 5*d^2*n3 + n1*n3 + 2*d*n1*n3 - 3*n1^2*n3 + 22*n2*n3 - 
      5*d*n2*n3 - 6*n1*n2*n3 + 2*n2^2*n3 + 6*n3^2 - 3*d*n3^2 + 3*n1*n3^2 + 
      2*n2*n3^2)*j[p4a, n1, n2, 1 + n3, 0, 0, 1, 1, 1, -1, 1, 0, 0, 0, 2])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) + ((-316 + 372*d - 143*d^2 + 18*d^3 - 222*n1 + 159*d*n1 - 
      28*d^2*n1 - 32*n1^2 + 10*d*n1^2 - 108*n2 + 90*d*n2 - 18*d^2*n2 - 
      62*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 8*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
      206*n3 + 155*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
      62*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 36*n3^2 + 13*d*n3^2 - 
      6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3)*j[p4a, n1, n2, 1 + n3, 0, 0, 1, 1, 1, 
      0, 1, 0, -1, 0, 2])/(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 
     4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
     723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
     9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
     510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
     2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
     84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
     137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 
     14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 
     126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 
     392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 
     304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 
     92*n2*n3^2 + 32*d*n2*n3^2 - 12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 
     10*n1*n3^3 - 10*n2*n3^3 - 2*n3^4) + 
   ((316 - 372*d + 143*d^2 - 18*d^3 + 222*n1 - 159*d*n1 + 28*d^2*n1 + 
      32*n1^2 - 10*d*n1^2 + 108*n2 - 90*d*n2 + 18*d^2*n2 + 62*n1*n2 - 
      22*d*n1*n2 + 4*n1^2*n2 + 8*n2^2 - 4*d*n2^2 + 4*n1*n2^2 + 206*n3 - 
      155*d*n3 + 29*d^2*n3 + 84*n1*n3 - 31*d*n1*n3 + 8*n1^2*n3 + 62*n2*n3 - 
      24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 36*n3^2 - 13*d*n3^2 + 
      6*n1*n3^2 + 6*n2*n3^2 + 2*n3^3)*j[p4a, n1, n2, 1 + n3, 0, 0, 1, 1, 1, 
      0, 1, 0, 0, -1, 2])/(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 
     4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
     723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
     9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
     510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
     2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
     84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
     137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 
     14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 
     126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 
     392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 
     304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 
     92*n2*n3^2 + 32*d*n2*n3^2 - 12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 
     10*n1*n3^3 - 10*n2*n3^3 - 2*n3^4) + 
   ((-65800 + 122592*d - 90886*d^2 + 33526*d^3 - 6155*d^4 + 450*d^5 - 
      33716*n1 + 38088*d*n1 - 11055*d^2*n1 - 1884*d^3*n1 + 1378*d^4*n1 - 
      172*d^5*n1 + 5886*n1^2 - 14955*d*n1^2 + 11373*d^2*n1^2 - 
      3464*d^3*n1^2 + 372*d^4*n1^2 + 4542*n1^3 - 5473*d*n1^3 + 
      2138*d^2*n1^3 - 272*d^3*n1^3 + 637*n1^4 - 456*d*n1^4 + 80*d^2*n1^4 + 
      26*n1^5 - 8*d*n1^5 - 102144*n2 + 143608*d*n2 - 73524*d^2*n2 + 
      15518*d^3*n2 - 809*d^4*n2 - 84*d^5*n2 - 14160*n1*n2 - 6632*d*n1*n2 + 
      17684*d^2*n1*n2 - 7479*d^3*n1*n2 + 948*d^4*n1*n2 + 16904*n1^2*n2 - 
      22837*d*n1^2*n2 + 9690*d^2*n1^2*n2 - 1316*d^3*n1^2*n2 + 4485*n1^3*n2 - 
      3378*d*n1^3*n2 + 624*d^2*n1^3*n2 + 306*n1^4*n2 - 104*d*n1^4*n2 + 
      4*n1^5*n2 - 53896*n2^2 + 51456*d*n2^2 - 13908*d^2*n2^2 + 92*d^3*n2^2 + 
      274*d^4*n2^2 + 9452*n1*n2^2 - 20380*d*n1*n2^2 + 10746*d^2*n1*n2^2 - 
      1666*d^3*n1*n2^2 + 9364*n1^2*n2^2 - 7606*d*n1^2*n2^2 + 
      1500*d^2*n1^2*n2^2 + 1140*n1^3*n2^2 - 416*d*n1^3*n2^2 + 32*n1^4*n2^2 - 
      11472*n2^3 + 5464*d*n2^3 + 412*d^2*n2^3 - 320*d^3*n2^3 + 5416*n1*n2^3 - 
      5384*d*n1*n2^3 + 1212*d^2*n1*n2^3 + 1676*n1^2*n2^3 - 656*d*n1^2*n2^3 + 
      84*n1^3*n2^3 - 832*n2^4 - 192*d*n2^4 + 168*d^2*n2^4 + 816*n1*n2^4 - 
      368*d*n1*n2^4 + 88*n1^2*n2^4 - 32*d*n2^5 + 32*n1*n2^5 - 32660*n3 + 
      49296*d*n3 - 27809*d^2*n3 + 6949*d^3*n3 - 649*d^4*n3 - 15688*n1*n3 + 
      13558*d*n1*n3 - 2170*d^2*n1*n3 - 772*d^3*n1*n3 + 190*d^4*n1*n3 + 
      1646*n1^2*n3 - 4193*d*n1^2*n3 + 2388*d^2*n1^2*n3 - 392*d^3*n1^2*n3 + 
      1453*n1^3*n3 - 1273*d*n1^3*n3 + 268*d^2*n1^3*n3 + 186*n1^4*n3 - 
      72*d*n1^4*n3 + 6*n1^5*n3 - 35652*n2*n3 + 34832*d*n2*n3 - 
      9233*d^2*n2*n3 - 216*d^3*n2*n3 + 248*d^4*n2*n3 - 1186*n1*n2*n3 - 
      8621*d*n1*n2*n3 + 6689*d^2*n1*n2*n3 - 1231*d^3*n1*n2*n3 + 
      6749*n1^2*n2*n3 - 6290*d*n1^2*n2*n3 + 1375*d^2*n1^2*n2*n3 + 
      1326*n1^3*n2*n3 - 518*d*n1^3*n2*n3 + 54*n1^4*n2*n3 - 10032*n2^2*n3 + 
      1686*d*n2^2*n3 + 2720*d^2*n2^2*n3 - 726*d^3*n2^2*n3 + 8184*n1*n2^2*n3 - 
      8662*d*n1*n2^2*n3 + 2036*d^2*n1*n2^2*n3 + 3068*n1^2*n2^2*n3 - 
      1246*d*n1^2*n2^2*n3 + 188*n1^3*n2^2*n3 + 400*n2^3*n3 - 2048*d*n2^3*n3 + 
      676*d^2*n2^3*n3 + 2528*n1*n2^3*n3 - 1120*d*n1*n2^3*n3 + 
      300*n1^2*n2^3*n3 + 416*n2^4*n3 - 256*d*n2^4*n3 + 192*n1*n2^4*n3 + 
      32*n2^5*n3 - 4190*n3^2 + 4793*d*n3^2 - 1836*d^2*n3^2 + 235*d^3*n3^2 - 
      1996*n1*n3^2 + 1429*d*n1*n3^2 - 195*d^2*n1*n3^2 - 22*d^3*n1*n3^2 - 
      200*n1^2*n3^2 - 49*d*n1^2*n3^2 + 49*d^2*n1^2*n3^2 + 54*n1^3*n3^2 - 
      36*d*n1^3*n3^2 + 9*n1^4*n3^2 - 2324*n2*n3^2 + 509*d*n2*n3^2 + 
      651*d^2*n2*n3^2 - 191*d^3*n2*n3^2 + 238*n1*n2*n3^2 - 
      1196*d*n1*n2*n3^2 + 412*d^2*n1*n2*n3^2 + 650*n1^2*n2*n3^2 - 
      335*d*n1^2*n2*n3^2 + 85*n1^3*n2*n3^2 + 1598*n2^2*n3^2 - 
      2128*d*n2^2*n3^2 + 568*d^2*n2^2*n3^2 + 1624*n1*n2^2*n3^2 - 
      766*d*n1*n2^2*n3^2 + 244*n1^2*n2^2*n3^2 + 852*n2^3*n3^2 - 
      416*d*n2^3*n3^2 + 268*n1*n2^3*n3^2 + 88*n2^4*n3^2 + 358*n3^3 - 
      264*d*n3^3 + 47*d^2*n3^3 + 28*n1*n3^3 + 71*d*n1*n3^3 - 26*d^2*n1*n3^3 - 
      86*n1^2*n3^3 + 35*d*n1^2*n3^3 - 9*n1^3*n3^3 - 38*n2*n3^3 + 
      18*d*n2*n3^3 + 4*d^2*n2*n3^3 - 172*n1*n2*n3^3 + 43*d*n1*n2*n3^3 - 
      11*n1^2*n2*n3^3 + 244*n2^2*n3^3 - 114*d*n2^2*n3^3 + 56*n1*n2^2*n3^3 + 
      60*n2^3*n3^3 + 110*n3^4 - 41*d*n3^4 + 12*n1*n3^4 + 6*d*n1*n3^4 - 
      6*n1^2*n3^4 - 60*n2*n3^4 + 29*d*n2*n3^4 - 24*n1*n2*n3^4 - 2*n2^2*n3^4 + 
      6*n3^5 - 6*n2*n3^5)*j[p4a, n1, n2, 1 + n3, 0, 0, 1, 1, 1, 0, 1, 0, 0, 
      0, 1])/((-2 + d - n1 - 2*n2)*(-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 
      1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 
      1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 
      8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 
      2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 
      32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 
      384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 
      32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 
      41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 
      978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
      116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
      64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
      138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((-128 + 106*d - 27*d^2 + 2*d^3 + 52*n1 - 42*d*n1 + 
      8*d^2*n1 + 13*n1^2 - 4*d*n1^2 - 76*n2 + 34*d*n2 - 3*d^2*n2 + 44*n1*n2 - 
      15*d*n1*n2 + 2*n1^2*n2 - 12*n2^2 + 2*d*n2^2 + 6*n1*n2^2 - 50*n3 + 
      33*d*n3 - 5*d^2*n3 - n1*n3 - 2*d*n1*n3 + 3*n1^2*n3 - 22*n2*n3 + 
      5*d*n2*n3 + 6*n1*n2*n3 - 2*n2^2*n3 - 6*n3^2 + 3*d*n3^2 - 3*n1*n3^2 - 
      2*n2*n3^2)*j[p4a, n1, n2, 1 + n3, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 2])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) + ((-12180 + 16846*d - 8720*d^2 + 2002*d^3 - 172*d^4 - 5122*n1 + 
      5229*d*n1 - 1774*d^2*n1 + 200*d^3*n1 - 663*n1^2 + 438*d*n1^2 - 
      72*d^2*n1^2 - 26*n1^3 + 8*d*n1^3 - 12716*n2 + 13052*d*n2 - 
      4456*d^2*n2 + 506*d^3*n2 - 3812*n1*n2 + 2552*d*n1*n2 - 426*d^2*n1*n2 - 
      284*n1^2*n2 + 92*d*n1^2*n2 - 4*n1^3*n2 - 4456*n2^2 + 3024*d*n2^2 - 
      512*d^2*n2^2 - 832*n1*n2^2 + 276*d*n1*n2^2 - 28*n1^2*n2^2 - 640*n2^3 + 
      216*d*n2^3 - 56*n1*n2^3 - 32*n2^4 - 4148*n3 + 4466*d*n3 - 1598*d^2*n3 + 
      190*d^3*n3 - 1611*n1*n3 + 1144*d*n1*n3 - 202*d^2*n1*n3 - 192*n1^2*n3 + 
      66*d*n1^2*n3 - 6*n1^3*n3 - 4198*n2*n3 + 2942*d*n2*n3 - 514*d^2*n2*n3 - 
      1016*n1*n2*n3 + 348*d*n1*n2*n3 - 48*n1^2*n2*n3 - 1124*n2^2*n3 + 
      388*d*n2^2*n3 - 124*n1*n2^2*n3 - 88*n2^3*n3 - 78*n3^2 + 90*d*n3^2 - 
      22*d^2*n3^2 - 60*n1*n3^2 + 27*d*n1*n3^2 - 9*n1^2*n3^2 - 320*n2*n3^2 + 
      118*d*n2*n3^2 - 52*n1*n2*n3^2 - 60*n2^2*n3^2 + 80*n3^3 - 26*d*n3^3 + 
      9*n1*n3^3 + 2*n2*n3^3 + 6*n3^4)*j[p4a, n1, n2, 1 + n3, 0, 0, 1, 2, 1, 
      0, 1, -1, 0, 0, 1])/((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 
      1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 
      1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 
      8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 
      2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 
      32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 
      384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 
      32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 
      41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 
      978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
      116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
      64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
      138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((460 - 246*d - 80*d^2 + 67*d^3 - 10*d^4 - 982*n1 + 
      1157*d*n1 - 445*d^2*n1 + 56*d^3*n1 - 343*n1^2 + 242*d*n1^2 - 
      42*d^2*n1^2 - 26*n1^3 + 8*d*n1^3 + 452*n2 - 140*d*n2 - 64*d^2*n2 + 
      20*d^3*n2 - 844*n1*n2 + 644*d*n1*n2 - 120*d^2*n1*n2 - 180*n1^2*n2 + 
      60*d*n1^2*n2 - 4*n1^3*n2 + 152*n2^2 - 28*d*n2^2 - 8*d^2*n2^2 - 
      204*n1*n2^2 + 76*d*n1*n2^2 - 20*n1^2*n2^2 + 16*n2^3 - 16*n1*n2^3 + 
      60*n3 + 2*d*n3 - 28*d^2*n3 + 7*d^3*n3 - 193*n1*n3 + 171*d*n1*n3 - 
      37*d^2*n1*n3 - 68*n1^2*n3 + 28*d*n1^2*n3 - 6*n1^3*n3 + 26*n2*n3 + 
      46*d*n2*n3 - 20*d^2*n2*n3 - 190*n1*n2*n3 + 78*d*n1*n2*n3 - 
      28*n1^2*n2*n3 + 4*n2^2*n3 + 8*d*n2^2*n3 - 28*n1*n2^2*n3 + 8*n3^2 - 
      15*d*n3^2 + 4*d^2*n3^2 + 28*n1*n3^2 - 10*d*n1*n3^2 + 3*n1^2*n3^2 + 
      2*n2*n3^2 - 2*n1*n2*n3^2 - d*n3^3 + 3*n1*n3^3)*
     j[p4a, n1, n2, 1 + n3, 0, 0, 1, 2, 1, 0, 1, 0, 0, -1, 1])/
    ((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 
      4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
      723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
      9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
      510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
      2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
      84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
      137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 
      10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 
      702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 
      26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 
      40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 
      48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((128 - 106*d + 27*d^2 - 2*d^3 - 52*n1 + 42*d*n1 - 
      8*d^2*n1 - 13*n1^2 + 4*d*n1^2 + 76*n2 - 34*d*n2 + 3*d^2*n2 - 44*n1*n2 + 
      15*d*n1*n2 - 2*n1^2*n2 + 12*n2^2 - 2*d*n2^2 - 6*n1*n2^2 + 50*n3 - 
      33*d*n3 + 5*d^2*n3 + n1*n3 + 2*d*n1*n3 - 3*n1^2*n3 + 22*n2*n3 - 
      5*d*n2*n3 - 6*n1*n2*n3 + 2*n2^2*n3 + 6*n3^2 - 3*d*n3^2 + 3*n1*n3^2 + 
      2*n2*n3^2)*j[p4a, n1, n2, 1 + n3, 0, 0, 2, 1, 1, -1, 1, 0, 0, 0, 1])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) + ((-1628 + 1802*d - 660*d^2 + 80*d^3 - 814*n1 + 579*d*n1 - 
      102*d^2*n1 - 109*n1^2 + 36*d*n1^2 - 2*n1^3 - 1076*n2 + 784*d*n2 - 
      142*d^2*n2 - 340*n1*n2 + 120*d*n1*n2 - 22*n1^2*n2 - 232*n2^2 + 
      84*d*n2^2 - 36*n1*n2^2 - 16*n2^3 - 544*n3 + 408*d*n3 - 76*d^2*n3 - 
      199*n1*n3 + 73*d*n1*n3 - 17*n1^2*n3 - 250*n2*n3 + 92*d*n2*n3 - 
      42*n1*n2*n3 - 28*n2^2*n3 - 58*n3^2 + 22*d*n3^2 - 11*n1*n3^2 - 
      14*n2*n3^2 - 2*n3^3)*j[p4a, n1, n2, 1 + n3, 0, 0, 2, 1, 1, 0, 1, 0, -1, 
      0, 1])/(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 
     4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 
     130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 
     3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 
     622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 
     436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 
     200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 
     7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 
     7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 
     322*n1*n2*n3 - 116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 
     140*d*n2^2*n3 + 64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 
     54*d^2*n3^2 - 138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 
     32*d*n2*n3^2 - 12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 
     10*n2*n3^3 - 2*n3^4) + ((1628 - 1802*d + 660*d^2 - 80*d^3 + 814*n1 - 
      579*d*n1 + 102*d^2*n1 + 109*n1^2 - 36*d*n1^2 + 2*n1^3 + 1076*n2 - 
      784*d*n2 + 142*d^2*n2 + 340*n1*n2 - 120*d*n1*n2 + 22*n1^2*n2 + 
      232*n2^2 - 84*d*n2^2 + 36*n1*n2^2 + 16*n2^3 + 544*n3 - 408*d*n3 + 
      76*d^2*n3 + 199*n1*n3 - 73*d*n1*n3 + 17*n1^2*n3 + 250*n2*n3 - 
      92*d*n2*n3 + 42*n1*n2*n3 + 28*n2^2*n3 + 58*n3^2 - 22*d*n3^2 + 
      11*n1*n3^2 + 14*n2*n3^2 + 2*n3^3)*j[p4a, n1, n2, 1 + n3, 0, 0, 2, 1, 1, 
      0, 1, 0, 0, -1, 1])/(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 
     4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
     723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
     9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
     510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
     2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
     84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
     137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 
     14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 
     126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 
     392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 
     304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 
     92*n2*n3^2 + 32*d*n2*n3^2 - 12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 
     10*n1*n3^3 - 10*n2*n3^3 - 2*n3^4) + 
   ((868 - 952*d + 347*d^2 - 42*d^3 + 422*n1 - 303*d*n1 + 54*d^2*n1 + 
      58*n1^2 - 20*d*n1^2 + 2*n1^3 + 784*n2 - 570*d*n2 + 103*d^2*n2 + 
      260*n1*n2 - 91*d*n1*n2 + 16*n1^2*n2 + 204*n2^2 - 74*d*n2^2 + 
      34*n1*n2^2 + 16*n2^3 + 82*n3 - 65*d*n3 + 13*d^2*n3 + 30*n1*n3 - 
      13*d*n1*n3 + 4*n1^2*n3 + 104*n2*n3 - 39*d*n2*n3 + 20*n1*n2*n3 + 
      18*n2^2*n3 - 20*n3^2 + 7*d*n3^2 - 4*n1*n3^2 - 2*n3^3)*
     j[p4a, n1, n2, 1 + n3, 0, 0, 2, 1, 1, 0, 1, 0, 0, 0, 1])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) + ((128 - 106*d + 27*d^2 - 2*d^3 - 52*n1 + 42*d*n1 - 8*d^2*n1 - 
      13*n1^2 + 4*d*n1^2 + 76*n2 - 34*d*n2 + 3*d^2*n2 - 44*n1*n2 + 
      15*d*n1*n2 - 2*n1^2*n2 + 12*n2^2 - 2*d*n2^2 - 6*n1*n2^2 + 50*n3 - 
      33*d*n3 + 5*d^2*n3 + n1*n3 + 2*d*n1*n3 - 3*n1^2*n3 + 22*n2*n3 - 
      5*d*n2*n3 - 6*n1*n2*n3 + 2*n2^2*n3 + 6*n3^2 - 3*d*n3^2 + 3*n1*n3^2 + 
      2*n2*n3^2)*j[p4a, n1, n2, 1 + n3, 0, 1, 0, 1, 1, -1, 1, 0, 0, 0, 2])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) + ((316 - 372*d + 143*d^2 - 18*d^3 + 222*n1 - 159*d*n1 + 
      28*d^2*n1 + 32*n1^2 - 10*d*n1^2 + 108*n2 - 90*d*n2 + 18*d^2*n2 + 
      62*n1*n2 - 22*d*n1*n2 + 4*n1^2*n2 + 8*n2^2 - 4*d*n2^2 + 4*n1*n2^2 + 
      206*n3 - 155*d*n3 + 29*d^2*n3 + 84*n1*n3 - 31*d*n1*n3 + 8*n1^2*n3 + 
      62*n2*n3 - 24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 36*n3^2 - 13*d*n3^2 + 
      6*n1*n3^2 + 6*n2*n3^2 + 2*n3^3)*j[p4a, n1, n2, 1 + n3, 0, 1, 0, 1, 1, 
      0, 1, 0, 0, -1, 2])/(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 
     4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
     723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
     9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
     510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
     2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
     84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
     137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 
     14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 
     126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 
     392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 
     304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 
     92*n2*n3^2 + 32*d*n2*n3^2 - 12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 
     10*n1*n3^3 - 10*n2*n3^3 - 2*n3^4) + 
   ((-6056 + 14720*d - 13354*d^2 + 5794*d^3 - 1218*d^4 + 100*d^5 - 13852*n1 + 
      22336*d*n1 - 13285*d^2*n1 + 3462*d^3*n1 - 334*d^4*n1 - 7342*n1^2 + 
      8251*d*n1^2 - 3059*d^2*n1^2 + 374*d^3*n1^2 - 1346*n1^3 + 947*d*n1^3 - 
      164*d^2*n1^3 - 78*n1^4 + 24*d*n1^4 - 44208*n2 + 73208*d*n2 - 
      46408*d^2*n2 + 13842*d^3*n2 - 1875*d^4*n2 + 84*d^5*n2 - 36704*n1*n2 + 
      43340*d*n1*n2 - 17602*d^2*n1*n2 + 2703*d^3*n1*n2 - 98*d^4*n1*n2 - 
      8664*n1^2*n2 + 6085*d*n1^2*n2 - 1010*d^2*n1^2*n2 - 16*d^3*n1^2*n2 - 
      519*n1^3*n2 + 54*d*n1^3*n2 + 38*d^2*n1^3*n2 + 14*n1^4*n2 - 
      8*d*n1^4*n2 - 46568*n2^2 + 57760*d*n2^2 - 25536*d^2*n2^2 + 
      4640*d^3*n2^2 - 274*d^4*n2^2 - 21644*n1*n2^2 + 16776*d*n1*n2^2 - 
      3610*d^2*n1*n2^2 + 142*d^3*n1*n2^2 - 1740*n1^2*n2^2 + 186*d*n1^2*n2^2 + 
      140*d^2*n1^2*n2^2 + 124*n1^3*n2^2 - 72*d*n1^3*n2^2 + 4*n1^4*n2^2 - 
      18240*n2^3 + 15752*d*n2^3 - 4188*d^2*n2^3 + 320*d^3*n2^3 - 
      3672*n1*n2^3 + 1216*d*n1*n2^3 + 28*d^2*n1*n2^3 + 236*n1^2*n2^3 - 
      168*d*n1^2*n2^3 + 28*n1^3*n2^3 - 3104*n2^4 + 1584*d*n2^4 - 
      168*d^2*n2^4 - 96*d*n1*n2^4 + 56*n1^2*n2^4 - 192*n2^5 + 32*d*n2^5 + 
      32*n1*n2^5 + 7020*n3 - 8648*d*n3 + 3839*d^2*n3 - 711*d^3*n3 + 
      44*d^4*n3 + 536*n1*n3 + 292*d*n1*n3 - 441*d^2*n1*n3 + 96*d^3*n1*n3 - 
      1062*n1^2*n3 + 951*d*n1^2*n3 - 207*d^2*n1^2*n3 - 266*n1^3*n3 + 
      109*d*n1^3*n3 - 18*n1^4*n3 - 15588*n2*n3 + 24008*d*n2*n3 - 
      13165*d^2*n2*n3 + 3044*d^3*n2*n3 - 248*d^4*n2*n3 - 12538*n1*n2*n3 + 
      12381*d*n1*n2*n3 - 3771*d^2*n1*n2*n3 + 337*d^3*n1*n2*n3 - 
      2711*n1^2*n2*n3 + 1344*d*n1^2*n2*n3 - 109*d^2*n1^2*n2*n3 - 
      126*n1^3*n2*n3 - 10*d*n1^3*n2*n3 + 6*n1^4*n2*n3 - 22360*n2^2*n3 + 
      22314*d*n2^2*n3 - 7152*d^2*n2^2*n3 + 726*d^3*n2^2*n3 - 
      8812*n1*n2^2*n3 + 4990*d*n1*n2^2*n3 - 620*d^2*n1*n2^2*n3 - 
      556*n1^2*n2^2*n3 + 38*d*n1^2*n2^2*n3 + 32*n1^3*n2^2*n3 - 7720*n2^3*n3 + 
      4704*d*n2^3*n3 - 676*d^2*n2^3*n3 - 1256*n1*n2^3*n3 + 256*d*n1*n2^3*n3 + 
      36*n1^2*n2^3*n3 - 944*n2^4*n3 + 256*d*n2^4*n3 - 16*n1*n2^4*n3 - 
      32*n2^5*n3 + 3498*n3^2 - 3805*d*n3^2 + 1375*d^2*n3^2 - 165*d^3*n3^2 + 
      1574*n1*n3^2 - 1144*d*n1*n3^2 + 206*d^2*n1*n3^2 + 258*n1^2*n3^2 - 
      90*d*n1^2*n3^2 + 12*n1^3*n3^2 - 388*n2*n3^2 + 1879*d*n2*n3^2 - 
      1159*d^2*n2*n3^2 + 191*d^3*n2*n3^2 - 984*n1*n2*n3^2 + 
      1084*d*n1*n2*n3^2 - 250*d^2*n1*n2*n3^2 - 280*n1^2*n2*n3^2 + 
      111*d*n1^2*n2*n3^2 - 15*n1^3*n2*n3^2 - 3986*n2^2*n3^2 + 
      3048*d*n2^2*n3^2 - 568*d^2*n2^2*n3^2 - 1348*n1*n2^2*n3^2 + 
      470*d*n1*n2^2*n3^2 - 80*n1^2*n2^2*n3^2 - 1220*n2^3*n3^2 + 
      416*d*n2^3*n3^2 - 148*n1*n2^3*n3^2 - 88*n2^4*n3^2 + 98*n3^3 - 
      114*d*n3^3 + 28*d^2*n3^3 + 100*n1*n3^3 - 44*d*n1*n3^3 + 18*n1^2*n3^3 + 
      498*n2*n3^3 - 170*d*n2*n3^3 - 4*d^2*n2*n3^3 + 70*n1*n2*n3^3 + 
      11*d*n1*n2*n3^3 - 9*n1^2*n2*n3^3 - 240*n2^2*n3^3 + 114*d*n2^2*n3^3 - 
      60*n1*n2^2*n3^3 - 60*n2^3*n3^3 - 74*n3^4 + 23*d*n3^4 - 6*n1*n3^4 + 
      96*n2*n3^4 - 29*d*n2*n3^4 + 12*n1*n2*n3^4 + 2*n2^2*n3^4 - 6*n3^5 + 
      6*n2*n3^5)*j[p4a, n1, n2, 1 + n3, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1])/
    ((-2 + d - n1 - 2*n2)*(-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 
      1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 
      1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 
      8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 
      2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 
      32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 
      384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 
      32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 
      41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 
      978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
      116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
      64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
      138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((-128 + 106*d - 27*d^2 + 2*d^3 + 52*n1 - 42*d*n1 + 
      8*d^2*n1 + 13*n1^2 - 4*d*n1^2 - 76*n2 + 34*d*n2 - 3*d^2*n2 + 44*n1*n2 - 
      15*d*n1*n2 + 2*n1^2*n2 - 12*n2^2 + 2*d*n2^2 + 6*n1*n2^2 - 50*n3 + 
      33*d*n3 - 5*d^2*n3 - n1*n3 - 2*d*n1*n3 + 3*n1^2*n3 - 22*n2*n3 + 
      5*d*n2*n3 + 6*n1*n2*n3 - 2*n2^2*n3 - 6*n3^2 + 3*d*n3^2 - 3*n1*n3^2 - 
      2*n2*n3^2)*j[p4a, n1, n2, 1 + n3, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 2])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) + ((460 - 246*d - 80*d^2 + 67*d^3 - 10*d^4 - 982*n1 + 
      1157*d*n1 - 445*d^2*n1 + 56*d^3*n1 - 343*n1^2 + 242*d*n1^2 - 
      42*d^2*n1^2 - 26*n1^3 + 8*d*n1^3 + 452*n2 - 140*d*n2 - 64*d^2*n2 + 
      20*d^3*n2 - 844*n1*n2 + 644*d*n1*n2 - 120*d^2*n1*n2 - 180*n1^2*n2 + 
      60*d*n1^2*n2 - 4*n1^3*n2 + 152*n2^2 - 28*d*n2^2 - 8*d^2*n2^2 - 
      204*n1*n2^2 + 76*d*n1*n2^2 - 20*n1^2*n2^2 + 16*n2^3 - 16*n1*n2^3 + 
      60*n3 + 2*d*n3 - 28*d^2*n3 + 7*d^3*n3 - 193*n1*n3 + 171*d*n1*n3 - 
      37*d^2*n1*n3 - 68*n1^2*n3 + 28*d*n1^2*n3 - 6*n1^3*n3 + 26*n2*n3 + 
      46*d*n2*n3 - 20*d^2*n2*n3 - 190*n1*n2*n3 + 78*d*n1*n2*n3 - 
      28*n1^2*n2*n3 + 4*n2^2*n3 + 8*d*n2^2*n3 - 28*n1*n2^2*n3 + 8*n3^2 - 
      15*d*n3^2 + 4*d^2*n3^2 + 28*n1*n3^2 - 10*d*n1*n3^2 + 3*n1^2*n3^2 + 
      2*n2*n3^2 - 2*n1*n2*n3^2 - d*n3^3 + 3*n1*n3^3)*
     j[p4a, n1, n2, 1 + n3, 0, 1, 0, 1, 1, 0, 2, 0, -1, 0, 1])/
    ((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 
      4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
      723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
      9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
      510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
      2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
      84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
      137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 
      10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 
      702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 
      26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 
      40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 
      48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((-460 + 246*d + 80*d^2 - 67*d^3 + 10*d^4 + 982*n1 - 
      1157*d*n1 + 445*d^2*n1 - 56*d^3*n1 + 343*n1^2 - 242*d*n1^2 + 
      42*d^2*n1^2 + 26*n1^3 - 8*d*n1^3 - 452*n2 + 140*d*n2 + 64*d^2*n2 - 
      20*d^3*n2 + 844*n1*n2 - 644*d*n1*n2 + 120*d^2*n1*n2 + 180*n1^2*n2 - 
      60*d*n1^2*n2 + 4*n1^3*n2 - 152*n2^2 + 28*d*n2^2 + 8*d^2*n2^2 + 
      204*n1*n2^2 - 76*d*n1*n2^2 + 20*n1^2*n2^2 - 16*n2^3 + 16*n1*n2^3 - 
      60*n3 - 2*d*n3 + 28*d^2*n3 - 7*d^3*n3 + 193*n1*n3 - 171*d*n1*n3 + 
      37*d^2*n1*n3 + 68*n1^2*n3 - 28*d*n1^2*n3 + 6*n1^3*n3 - 26*n2*n3 - 
      46*d*n2*n3 + 20*d^2*n2*n3 + 190*n1*n2*n3 - 78*d*n1*n2*n3 + 
      28*n1^2*n2*n3 - 4*n2^2*n3 - 8*d*n2^2*n3 + 28*n1*n2^2*n3 - 8*n3^2 + 
      15*d*n3^2 - 4*d^2*n3^2 - 28*n1*n3^2 + 10*d*n1*n3^2 - 3*n1^2*n3^2 - 
      2*n2*n3^2 + 2*n1*n2*n3^2 + d*n3^3 - 3*n1*n3^3)*
     j[p4a, n1, n2, 1 + n3, 0, 1, 0, 1, 1, 0, 2, 0, 0, -1, 1])/
    ((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 
      4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
      723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
      9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
      510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
      2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
      84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
      137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 
      10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 
      702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 
      26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 
      40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 
      48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((-460 + 246*d + 80*d^2 - 67*d^3 + 10*d^4 + 982*n1 - 
      1157*d*n1 + 445*d^2*n1 - 56*d^3*n1 + 343*n1^2 - 242*d*n1^2 + 
      42*d^2*n1^2 + 26*n1^3 - 8*d*n1^3 - 452*n2 + 140*d*n2 + 64*d^2*n2 - 
      20*d^3*n2 + 844*n1*n2 - 644*d*n1*n2 + 120*d^2*n1*n2 + 180*n1^2*n2 - 
      60*d*n1^2*n2 + 4*n1^3*n2 - 152*n2^2 + 28*d*n2^2 + 8*d^2*n2^2 + 
      204*n1*n2^2 - 76*d*n1*n2^2 + 20*n1^2*n2^2 - 16*n2^3 + 16*n1*n2^3 - 
      60*n3 - 2*d*n3 + 28*d^2*n3 - 7*d^3*n3 + 193*n1*n3 - 171*d*n1*n3 + 
      37*d^2*n1*n3 + 68*n1^2*n3 - 28*d*n1^2*n3 + 6*n1^3*n3 - 26*n2*n3 - 
      46*d*n2*n3 + 20*d^2*n2*n3 + 190*n1*n2*n3 - 78*d*n1*n2*n3 + 
      28*n1^2*n2*n3 - 4*n2^2*n3 - 8*d*n2^2*n3 + 28*n1*n2^2*n3 - 8*n3^2 + 
      15*d*n3^2 - 4*d^2*n3^2 - 28*n1*n3^2 + 10*d*n1*n3^2 - 3*n1^2*n3^2 - 
      2*n2*n3^2 + 2*n1*n2*n3^2 + d*n3^3 - 3*n1*n3^3)*
     j[p4a, n1, n2, 1 + n3, 0, 1, 0, 1, 1, 0, 2, 0, 0, 0, 1])/
    ((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 
      4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
      723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
      9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
      510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
      2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
      84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
      137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 
      10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 
      702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 
      26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 
      40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 
      48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((-12180 + 16846*d - 8720*d^2 + 2002*d^3 - 172*d^4 - 
      5122*n1 + 5229*d*n1 - 1774*d^2*n1 + 200*d^3*n1 - 663*n1^2 + 
      438*d*n1^2 - 72*d^2*n1^2 - 26*n1^3 + 8*d*n1^3 - 12716*n2 + 13052*d*n2 - 
      4456*d^2*n2 + 506*d^3*n2 - 3812*n1*n2 + 2552*d*n1*n2 - 426*d^2*n1*n2 - 
      284*n1^2*n2 + 92*d*n1^2*n2 - 4*n1^3*n2 - 4456*n2^2 + 3024*d*n2^2 - 
      512*d^2*n2^2 - 832*n1*n2^2 + 276*d*n1*n2^2 - 28*n1^2*n2^2 - 640*n2^3 + 
      216*d*n2^3 - 56*n1*n2^3 - 32*n2^4 - 4148*n3 + 4466*d*n3 - 1598*d^2*n3 + 
      190*d^3*n3 - 1611*n1*n3 + 1144*d*n1*n3 - 202*d^2*n1*n3 - 192*n1^2*n3 + 
      66*d*n1^2*n3 - 6*n1^3*n3 - 4198*n2*n3 + 2942*d*n2*n3 - 514*d^2*n2*n3 - 
      1016*n1*n2*n3 + 348*d*n1*n2*n3 - 48*n1^2*n2*n3 - 1124*n2^2*n3 + 
      388*d*n2^2*n3 - 124*n1*n2^2*n3 - 88*n2^3*n3 - 78*n3^2 + 90*d*n3^2 - 
      22*d^2*n3^2 - 60*n1*n3^2 + 27*d*n1*n3^2 - 9*n1^2*n3^2 - 320*n2*n3^2 + 
      118*d*n2*n3^2 - 52*n1*n2*n3^2 - 60*n2^2*n3^2 + 80*n3^3 - 26*d*n3^3 + 
      9*n1*n3^3 + 2*n2*n3^3 + 6*n3^4)*j[p4a, n1, n2, 1 + n3, 0, 1, 0, 1, 2, 
      0, 1, -1, 0, 0, 1])/((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 
      1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 
      1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 
      8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 
      2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 
      32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 
      384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 
      32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 
      41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 
      978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
      116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
      64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
      138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((460 - 246*d - 80*d^2 + 67*d^3 - 10*d^4 - 982*n1 + 
      1157*d*n1 - 445*d^2*n1 + 56*d^3*n1 - 343*n1^2 + 242*d*n1^2 - 
      42*d^2*n1^2 - 26*n1^3 + 8*d*n1^3 + 452*n2 - 140*d*n2 - 64*d^2*n2 + 
      20*d^3*n2 - 844*n1*n2 + 644*d*n1*n2 - 120*d^2*n1*n2 - 180*n1^2*n2 + 
      60*d*n1^2*n2 - 4*n1^3*n2 + 152*n2^2 - 28*d*n2^2 - 8*d^2*n2^2 - 
      204*n1*n2^2 + 76*d*n1*n2^2 - 20*n1^2*n2^2 + 16*n2^3 - 16*n1*n2^3 + 
      60*n3 + 2*d*n3 - 28*d^2*n3 + 7*d^3*n3 - 193*n1*n3 + 171*d*n1*n3 - 
      37*d^2*n1*n3 - 68*n1^2*n3 + 28*d*n1^2*n3 - 6*n1^3*n3 + 26*n2*n3 + 
      46*d*n2*n3 - 20*d^2*n2*n3 - 190*n1*n2*n3 + 78*d*n1*n2*n3 - 
      28*n1^2*n2*n3 + 4*n2^2*n3 + 8*d*n2^2*n3 - 28*n1*n2^2*n3 + 8*n3^2 - 
      15*d*n3^2 + 4*d^2*n3^2 + 28*n1*n3^2 - 10*d*n1*n3^2 + 3*n1^2*n3^2 + 
      2*n2*n3^2 - 2*n1*n2*n3^2 - d*n3^3 + 3*n1*n3^3)*
     j[p4a, n1, n2, 1 + n3, 0, 1, 0, 1, 2, 0, 1, 0, -1, 0, 1])/
    ((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 
      4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
      723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
      9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
      510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
      2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
      84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
      137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 
      10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 
      702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 
      26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 
      40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 
      48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((-460 + 246*d + 80*d^2 - 67*d^3 + 10*d^4 + 982*n1 - 
      1157*d*n1 + 445*d^2*n1 - 56*d^3*n1 + 343*n1^2 - 242*d*n1^2 + 
      42*d^2*n1^2 + 26*n1^3 - 8*d*n1^3 - 452*n2 + 140*d*n2 + 64*d^2*n2 - 
      20*d^3*n2 + 844*n1*n2 - 644*d*n1*n2 + 120*d^2*n1*n2 + 180*n1^2*n2 - 
      60*d*n1^2*n2 + 4*n1^3*n2 - 152*n2^2 + 28*d*n2^2 + 8*d^2*n2^2 + 
      204*n1*n2^2 - 76*d*n1*n2^2 + 20*n1^2*n2^2 - 16*n2^3 + 16*n1*n2^3 - 
      60*n3 - 2*d*n3 + 28*d^2*n3 - 7*d^3*n3 + 193*n1*n3 - 171*d*n1*n3 + 
      37*d^2*n1*n3 + 68*n1^2*n3 - 28*d*n1^2*n3 + 6*n1^3*n3 - 26*n2*n3 - 
      46*d*n2*n3 + 20*d^2*n2*n3 + 190*n1*n2*n3 - 78*d*n1*n2*n3 + 
      28*n1^2*n2*n3 - 4*n2^2*n3 - 8*d*n2^2*n3 + 28*n1*n2^2*n3 - 8*n3^2 + 
      15*d*n3^2 - 4*d^2*n3^2 - 28*n1*n3^2 + 10*d*n1*n3^2 - 3*n1^2*n3^2 - 
      2*n2*n3^2 + 2*n1*n2*n3^2 + d*n3^3 - 3*n1*n3^3)*
     j[p4a, n1, n2, 1 + n3, 0, 1, 0, 1, 2, 0, 1, 0, 0, -1, 1])/
    ((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 
      4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
      723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
      9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
      510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
      2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
      84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
      137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 
      10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 
      702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 
      26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 
      40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 
      48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((128 - 106*d + 27*d^2 - 2*d^3 - 52*n1 + 42*d*n1 - 
      8*d^2*n1 - 13*n1^2 + 4*d*n1^2 + 76*n2 - 34*d*n2 + 3*d^2*n2 - 44*n1*n2 + 
      15*d*n1*n2 - 2*n1^2*n2 + 12*n2^2 - 2*d*n2^2 - 6*n1*n2^2 + 50*n3 - 
      33*d*n3 + 5*d^2*n3 + n1*n3 + 2*d*n1*n3 - 3*n1^2*n3 + 22*n2*n3 - 
      5*d*n2*n3 - 6*n1*n2*n3 + 2*n2^2*n3 + 6*n3^2 - 3*d*n3^2 + 3*n1*n3^2 + 
      2*n2*n3^2)*j[p4a, n1, n2, 1 + n3, 0, 1, 1, 0, 1, -1, 1, 0, 0, 0, 2])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) + ((-460 + 246*d + 80*d^2 - 67*d^3 + 10*d^4 + 982*n1 - 
      1157*d*n1 + 445*d^2*n1 - 56*d^3*n1 + 343*n1^2 - 242*d*n1^2 + 
      42*d^2*n1^2 + 26*n1^3 - 8*d*n1^3 - 452*n2 + 140*d*n2 + 64*d^2*n2 - 
      20*d^3*n2 + 844*n1*n2 - 644*d*n1*n2 + 120*d^2*n1*n2 + 180*n1^2*n2 - 
      60*d*n1^2*n2 + 4*n1^3*n2 - 152*n2^2 + 28*d*n2^2 + 8*d^2*n2^2 + 
      204*n1*n2^2 - 76*d*n1*n2^2 + 20*n1^2*n2^2 - 16*n2^3 + 16*n1*n2^3 - 
      60*n3 - 2*d*n3 + 28*d^2*n3 - 7*d^3*n3 + 193*n1*n3 - 171*d*n1*n3 + 
      37*d^2*n1*n3 + 68*n1^2*n3 - 28*d*n1^2*n3 + 6*n1^3*n3 - 26*n2*n3 - 
      46*d*n2*n3 + 20*d^2*n2*n3 + 190*n1*n2*n3 - 78*d*n1*n2*n3 + 
      28*n1^2*n2*n3 - 4*n2^2*n3 - 8*d*n2^2*n3 + 28*n1*n2^2*n3 - 8*n3^2 + 
      15*d*n3^2 - 4*d^2*n3^2 - 28*n1*n3^2 + 10*d*n1*n3^2 - 3*n1^2*n3^2 - 
      2*n2*n3^2 + 2*n1*n2*n3^2 + d*n3^3 - 3*n1*n3^3)*
     j[p4a, n1, n2, 1 + n3, 0, 1, 1, 0, 1, -1, 2, 0, 0, 0, 1])/
    ((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 
      4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
      723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
      9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
      510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
      2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
      84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
      137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 
      10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 
      702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 
      26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 
      40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 
      48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((316 - 372*d + 143*d^2 - 18*d^3 + 222*n1 - 159*d*n1 + 
      28*d^2*n1 + 32*n1^2 - 10*d*n1^2 + 108*n2 - 90*d*n2 + 18*d^2*n2 + 
      62*n1*n2 - 22*d*n1*n2 + 4*n1^2*n2 + 8*n2^2 - 4*d*n2^2 + 4*n1*n2^2 + 
      206*n3 - 155*d*n3 + 29*d^2*n3 + 84*n1*n3 - 31*d*n1*n3 + 8*n1^2*n3 + 
      62*n2*n3 - 24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 36*n3^2 - 13*d*n3^2 + 
      6*n1*n3^2 + 6*n2*n3^2 + 2*n3^3)*j[p4a, n1, n2, 1 + n3, 0, 1, 1, 0, 1, 
      0, 1, 0, 0, -1, 2])/(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 
     4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
     723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
     9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
     510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
     2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
     84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
     137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 
     14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 
     126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 
     392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 
     304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 
     92*n2*n3^2 + 32*d*n2*n3^2 - 12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 
     10*n1*n3^3 - 10*n2*n3^3 - 2*n3^4) + 
   ((14848 - 30812*d + 25004*d^2 - 9967*d^3 + 1958*d^4 - 152*d^5 + 19836*n1 - 
      30368*d*n1 + 17275*d^2*n1 - 4331*d^3*n1 + 404*d^4*n1 + 7912*n1^2 - 
      8660*d*n1^2 + 3137*d^2*n1^2 - 376*d^3*n1^2 + 1194*n1^3 - 828*d*n1^3 + 
      142*d^2*n1^3 + 58*n1^4 - 18*d*n1^4 + 75512*n2 - 126828*d*n2 + 
      83394*d^2*n2 - 26721*d^3*n2 + 4144*d^4*n2 - 246*d^5*n2 + 61892*n1*n2 - 
      79526*d*n1*n2 + 37356*d^2*n1*n2 - 7551*d^3*n1*n2 + 548*d^4*n1*n2 + 
      16848*n1^2*n2 - 15302*d*n1^2*n2 + 4479*d^2*n1^2*n2 - 418*d^3*n1^2*n2 + 
      1717*n1^3*n2 - 956*d*n1^3*n2 + 128*d^2*n1^3*n2 + 46*n1^4*n2 - 
      12*d*n1^4*n2 + 81184*n2^2 - 107860*d*n2^2 + 53028*d^2*n2^2 - 
      11410*d^3*n2^2 + 904*d^4*n2^2 + 46908*n1*n2^2 - 45222*d*n1*n2^2 + 
      14308*d^2*n1*n2^2 - 1482*d^3*n1*n2^2 + 8330*n1^2*n2^2 - 
      5110*d*n1^2*n2^2 + 770*d^2*n1^2*n2^2 + 472*n1^3*n2^2 - 
      136*d*n1^3*n2^2 + 4*n1^4*n2^2 + 32600*n2^3 - 32076*d*n2^3 + 
      10408*d^2*n2^3 - 1112*d^3*n2^3 + 12860*n1*n2^3 - 8192*d*n1*n2^3 + 
      1288*d^2*n1*n2^3 + 1360*n1^2*n2^3 - 412*d*n1^2*n2^3 + 28*n1^3*n2^3 + 
      5488*n2^4 - 3528*d*n2^4 + 560*d^2*n2^4 + 1320*n1*n2^4 - 408*d*n1*n2^4 + 
      56*n1^2*n2^4 + 320*n2^5 - 96*d*n2^5 + 32*n1*n2^5 - 560*n3 - 1016*d*n3 + 
      1358*d^2*n3 - 415*d^3*n3 + 8*d^4*n3 + 8*d^5*n3 + 1906*n1*n3 - 
      1425*d*n1*n3 - 278*d^2*n1*n3 + 396*d^3*n1*n3 - 72*d^4*n1*n3 - 
      24*n1^2*n3 + 760*d*n1^2*n3 - 577*d^2*n1^2*n3 + 110*d^3*n1^2*n3 - 
      140*n1^3*n3 + 197*d*n1^3*n3 - 54*d^2*n1^3*n3 - 12*n1^4*n3 + 
      8*d*n1^4*n3 + 37456*n2*n3 - 53064*d*n2*n3 + 27432*d^2*n2*n3 - 
      6118*d^3*n2*n3 + 494*d^4*n2*n3 + 23314*n1*n2*n3 - 22710*d*n1*n2*n3 + 
      7096*d^2*n1*n2*n3 - 701*d^3*n1*n2*n3 + 4357*n1^2*n2*n3 - 
      2507*d*n1^2*n2*n3 + 329*d^2*n1^2*n2*n3 + 294*n1^3*n2*n3 - 
      68*d*n1^3*n2*n3 + 6*n1^4*n2*n3 + 45356*n2^2*n3 - 46286*d*n2^2*n3 + 
      15530*d^2*n2^2*n3 - 1710*d^3*n2^2*n3 + 18446*n1*n2^2*n3 - 
      11964*d*n1*n2^2*n3 + 1902*d^2*n1*n2^2*n3 + 2106*n1^2*n2^2*n3 - 
      640*d*n1^2*n2^2*n3 + 68*n1^3*n2^2*n3 + 16580*n2^3*n3 - 
      11064*d*n2^3*n3 + 1828*d^2*n2^3*n3 + 4088*n1*n2^3*n3 - 
      1320*d*n1*n2^3*n3 + 224*n1^2*n2^3*n3 + 2280*n2^4*n3 - 752*d*n2^4*n3 + 
      264*n1*n2^4*n3 + 96*n2^5*n3 - 1998*n3^2 + 1915*d*n3^2 - 591*d^2*n3^2 + 
      58*d^3*n3^2 - 992*n1*n3^2 + 980*d*n1*n3^2 - 354*d^2*n1*n3^2 + 
      47*d^3*n1*n3^2 - 498*n1^2*n3^2 + 399*d*n1^2*n3^2 - 82*d^2*n1^2*n3^2 - 
      102*n1^3*n3^2 + 41*d*n1^3*n3^2 - 6*n1^4*n3^2 + 4864*n2*n3^2 - 
      6317*d*n2*n3^2 + 2546*d^2*n2*n3^2 - 325*d^3*n2*n3^2 + 2464*n1*n2*n3^2 - 
      1771*d*n1*n2*n3^2 + 302*d^2*n1*n2*n3^2 + 184*n1^2*n2*n3^2 - 
      43*d*n1^2*n2*n3^2 - 7*n1^3*n2*n3^2 + 8054*n2^2*n3^2 - 
      5760*d*n2^2*n3^2 + 1014*d^2*n2^2*n3^2 + 2134*n1*n2^2*n3^2 - 
      712*d*n1*n2^2*n3^2 + 100*n1^2*n2^2*n3^2 + 2416*n2^3*n3^2 - 
      824*d*n2^3*n3^2 + 280*n1*n2^3*n3^2 + 192*n2^4*n3^2 + 98*n3^3 - 
      130*d*n3^3 + 69*d^2*n3^3 - 12*d^3*n3^3 + 90*n1*n3^3 - 97*d*n1*n3^3 + 
      23*d^2*n1*n3^3 + 28*n1^2*n3^3 - 11*d*n1^2*n3^3 - 54*n2*n3^3 - 
      176*d*n2*n3^3 + 66*d^2*n2*n3^3 + 150*n1*n2*n3^3 - 73*d*n1*n2*n3^3 + 
      11*n1^2*n2*n3^3 + 536*n2^2*n3^3 - 214*d*n2^2*n3^3 + 88*n1*n2^2*n3^3 + 
      108*n2^3*n3^3 + 86*n3^4 - 37*d*n3^4 + 4*d^2*n3^4 + 24*n1*n3^4 - 
      10*d*n1*n3^4 + 6*n1^2*n3^4 - 76*n2*n3^4 + 17*d*n2*n3^4 + 4*n1*n2*n3^4 + 
      6*n2^2*n3^4 + 6*n3^5 - 6*n2*n3^5)*j[p4a, n1, n2, 1 + n3, 0, 1, 1, 0, 1, 
      0, 1, 0, 0, 0, 1])/((-2 + d - n1 - 2*n2)*(-3 + d - n3)*
     (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
      1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
      106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
      388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
      222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
      1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
      88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
      38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
      2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
      116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
      64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
      138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((-128 + 106*d - 27*d^2 + 2*d^3 + 52*n1 - 42*d*n1 + 
      8*d^2*n1 + 13*n1^2 - 4*d*n1^2 - 76*n2 + 34*d*n2 - 3*d^2*n2 + 44*n1*n2 - 
      15*d*n1*n2 + 2*n1^2*n2 - 12*n2^2 + 2*d*n2^2 + 6*n1*n2^2 - 50*n3 + 
      33*d*n3 - 5*d^2*n3 - n1*n3 - 2*d*n1*n3 + 3*n1^2*n3 - 22*n2*n3 + 
      5*d*n2*n3 + 6*n1*n2*n3 - 2*n2^2*n3 - 6*n3^2 + 3*d*n3^2 - 3*n1*n3^2 - 
      2*n2*n3^2)*j[p4a, n1, n2, 1 + n3, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 2])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) + ((-996 + 1058*d - 374*d^2 + 44*d^3 - 370*n1 + 261*d*n1 - 
      46*d^2*n1 - 45*n1^2 + 16*d*n1^2 - 2*n1^3 - 860*n2 + 604*d*n2 - 
      106*d^2*n2 - 216*n1*n2 + 76*d*n1*n2 - 14*n1^2*n2 - 216*n2^2 + 
      76*d*n2^2 - 28*n1*n2^2 - 16*n2^3 - 132*n3 + 98*d*n3 - 18*d^2*n3 - 
      31*n1*n3 + 11*d*n1*n3 - n1^2*n3 - 126*n2*n3 + 44*d*n2*n3 - 
      14*n1*n2*n3 - 20*n2^2*n3 + 14*n3^2 - 4*d*n3^2 + n1*n3^2 - 2*n2*n3^2 + 
      2*n3^3)*j[p4a, n1, n2, 1 + n3, 0, 1, 1, 0, 1, 0, 2, -1, 0, 0, 1])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) + ((996 - 1058*d + 374*d^2 - 44*d^3 + 370*n1 - 261*d*n1 + 
      46*d^2*n1 + 45*n1^2 - 16*d*n1^2 + 2*n1^3 + 860*n2 - 604*d*n2 + 
      106*d^2*n2 + 216*n1*n2 - 76*d*n1*n2 + 14*n1^2*n2 + 216*n2^2 - 
      76*d*n2^2 + 28*n1*n2^2 + 16*n2^3 + 132*n3 - 98*d*n3 + 18*d^2*n3 + 
      31*n1*n3 - 11*d*n1*n3 + n1^2*n3 + 126*n2*n3 - 44*d*n2*n3 + 
      14*n1*n2*n3 + 20*n2^2*n3 - 14*n3^2 + 4*d*n3^2 - n1*n3^2 + 2*n2*n3^2 - 
      2*n3^3)*j[p4a, n1, n2, 1 + n3, 0, 1, 1, 0, 1, 0, 2, 0, -1, 0, 1])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) + ((-996 + 1058*d - 374*d^2 + 44*d^3 - 370*n1 + 261*d*n1 - 
      46*d^2*n1 - 45*n1^2 + 16*d*n1^2 - 2*n1^3 - 860*n2 + 604*d*n2 - 
      106*d^2*n2 - 216*n1*n2 + 76*d*n1*n2 - 14*n1^2*n2 - 216*n2^2 + 
      76*d*n2^2 - 28*n1*n2^2 - 16*n2^3 - 132*n3 + 98*d*n3 - 18*d^2*n3 - 
      31*n1*n3 + 11*d*n1*n3 - n1^2*n3 - 126*n2*n3 + 44*d*n2*n3 - 
      14*n1*n2*n3 - 20*n2^2*n3 + 14*n3^2 - 4*d*n3^2 + n1*n3^2 - 2*n2*n3^2 + 
      2*n3^3)*j[p4a, n1, n2, 1 + n3, 0, 1, 1, 0, 1, 0, 2, 0, 0, -1, 1])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) + ((-996 + 1058*d - 374*d^2 + 44*d^3 - 370*n1 + 261*d*n1 - 
      46*d^2*n1 - 45*n1^2 + 16*d*n1^2 - 2*n1^3 - 860*n2 + 604*d*n2 - 
      106*d^2*n2 - 216*n1*n2 + 76*d*n1*n2 - 14*n1^2*n2 - 216*n2^2 + 
      76*d*n2^2 - 28*n1*n2^2 - 16*n2^3 - 132*n3 + 98*d*n3 - 18*d^2*n3 - 
      31*n1*n3 + 11*d*n1*n3 - n1^2*n3 - 126*n2*n3 + 44*d*n2*n3 - 
      14*n1*n2*n3 - 20*n2^2*n3 + 14*n3^2 - 4*d*n3^2 + n1*n3^2 - 2*n2*n3^2 + 
      2*n3^3)*j[p4a, n1, n2, 1 + n3, 0, 1, 1, 0, 1, 0, 2, 0, 0, 0, 1])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) + ((-128 + 106*d - 27*d^2 + 2*d^3 + 52*n1 - 42*d*n1 + 8*d^2*n1 + 
      13*n1^2 - 4*d*n1^2 - 76*n2 + 34*d*n2 - 3*d^2*n2 + 44*n1*n2 - 
      15*d*n1*n2 + 2*n1^2*n2 - 12*n2^2 + 2*d*n2^2 + 6*n1*n2^2 - 50*n3 + 
      33*d*n3 - 5*d^2*n3 - n1*n3 - 2*d*n1*n3 + 3*n1^2*n3 - 22*n2*n3 + 
      5*d*n2*n3 + 6*n1*n2*n3 - 2*n2^2*n3 - 6*n3^2 + 3*d*n3^2 - 3*n1*n3^2 - 
      2*n2*n3^2)*j[p4a, n1, n2, 1 + n3, 0, 1, 1, 0, 2, 0, 1, -1, 0, 0, 1])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) + ((-1628 + 1802*d - 660*d^2 + 80*d^3 - 814*n1 + 579*d*n1 - 
      102*d^2*n1 - 109*n1^2 + 36*d*n1^2 - 2*n1^3 - 1076*n2 + 784*d*n2 - 
      142*d^2*n2 - 340*n1*n2 + 120*d*n1*n2 - 22*n1^2*n2 - 232*n2^2 + 
      84*d*n2^2 - 36*n1*n2^2 - 16*n2^3 - 544*n3 + 408*d*n3 - 76*d^2*n3 - 
      199*n1*n3 + 73*d*n1*n3 - 17*n1^2*n3 - 250*n2*n3 + 92*d*n2*n3 - 
      42*n1*n2*n3 - 28*n2^2*n3 - 58*n3^2 + 22*d*n3^2 - 11*n1*n3^2 - 
      14*n2*n3^2 - 2*n3^3)*j[p4a, n1, n2, 1 + n3, 0, 1, 1, 0, 2, 0, 1, 0, -1, 
      0, 1])/(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 
     4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 
     130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 
     3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 
     622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 
     436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 
     200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 
     7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 
     7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 
     322*n1*n2*n3 - 116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 
     140*d*n2^2*n3 + 64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 
     54*d^2*n3^2 - 138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 
     32*d*n2*n3^2 - 12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 
     10*n2*n3^3 - 2*n3^4) + ((1628 - 1802*d + 660*d^2 - 80*d^3 + 814*n1 - 
      579*d*n1 + 102*d^2*n1 + 109*n1^2 - 36*d*n1^2 + 2*n1^3 + 1076*n2 - 
      784*d*n2 + 142*d^2*n2 + 340*n1*n2 - 120*d*n1*n2 + 22*n1^2*n2 + 
      232*n2^2 - 84*d*n2^2 + 36*n1*n2^2 + 16*n2^3 + 544*n3 - 408*d*n3 + 
      76*d^2*n3 + 199*n1*n3 - 73*d*n1*n3 + 17*n1^2*n3 + 250*n2*n3 - 
      92*d*n2*n3 + 42*n1*n2*n3 + 28*n2^2*n3 + 58*n3^2 - 22*d*n3^2 + 
      11*n1*n3^2 + 14*n2*n3^2 + 2*n3^3)*j[p4a, n1, n2, 1 + n3, 0, 1, 1, 0, 2, 
      0, 1, 0, 0, -1, 1])/(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 
     4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
     723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
     9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
     510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
     2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
     84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
     137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 
     14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 
     126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 
     392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 
     304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 
     92*n2*n3^2 + 32*d*n2*n3^2 - 12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 
     10*n1*n3^3 - 10*n2*n3^3 - 2*n3^4) + 
   ((-996 + 1058*d - 374*d^2 + 44*d^3 - 370*n1 + 261*d*n1 - 46*d^2*n1 - 
      45*n1^2 + 16*d*n1^2 - 2*n1^3 - 860*n2 + 604*d*n2 - 106*d^2*n2 - 
      216*n1*n2 + 76*d*n1*n2 - 14*n1^2*n2 - 216*n2^2 + 76*d*n2^2 - 
      28*n1*n2^2 - 16*n2^3 - 132*n3 + 98*d*n3 - 18*d^2*n3 - 31*n1*n3 + 
      11*d*n1*n3 - n1^2*n3 - 126*n2*n3 + 44*d*n2*n3 - 14*n1*n2*n3 - 
      20*n2^2*n3 + 14*n3^2 - 4*d*n3^2 + n1*n3^2 - 2*n2*n3^2 + 2*n3^3)*
     j[p4a, n1, n2, 1 + n3, 0, 1, 1, 0, 2, 0, 1, 0, 0, 0, 1])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) + ((128 - 106*d + 27*d^2 - 2*d^3 - 52*n1 + 42*d*n1 - 8*d^2*n1 - 
      13*n1^2 + 4*d*n1^2 + 76*n2 - 34*d*n2 + 3*d^2*n2 - 44*n1*n2 + 
      15*d*n1*n2 - 2*n1^2*n2 + 12*n2^2 - 2*d*n2^2 - 6*n1*n2^2 + 50*n3 - 
      33*d*n3 + 5*d^2*n3 + n1*n3 + 2*d*n1*n3 - 3*n1^2*n3 + 22*n2*n3 - 
      5*d*n2*n3 - 6*n1*n2*n3 + 2*n2^2*n3 + 6*n3^2 - 3*d*n3^2 + 3*n1*n3^2 + 
      2*n2*n3^2)*j[p4a, n1, n2, 1 + n3, 0, 1, 1, 1, 0, -1, 1, 0, 0, 0, 2])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) + ((-460 + 246*d + 80*d^2 - 67*d^3 + 10*d^4 + 982*n1 - 
      1157*d*n1 + 445*d^2*n1 - 56*d^3*n1 + 343*n1^2 - 242*d*n1^2 + 
      42*d^2*n1^2 + 26*n1^3 - 8*d*n1^3 - 452*n2 + 140*d*n2 + 64*d^2*n2 - 
      20*d^3*n2 + 844*n1*n2 - 644*d*n1*n2 + 120*d^2*n1*n2 + 180*n1^2*n2 - 
      60*d*n1^2*n2 + 4*n1^3*n2 - 152*n2^2 + 28*d*n2^2 + 8*d^2*n2^2 + 
      204*n1*n2^2 - 76*d*n1*n2^2 + 20*n1^2*n2^2 - 16*n2^3 + 16*n1*n2^3 - 
      60*n3 - 2*d*n3 + 28*d^2*n3 - 7*d^3*n3 + 193*n1*n3 - 171*d*n1*n3 + 
      37*d^2*n1*n3 + 68*n1^2*n3 - 28*d*n1^2*n3 + 6*n1^3*n3 - 26*n2*n3 - 
      46*d*n2*n3 + 20*d^2*n2*n3 + 190*n1*n2*n3 - 78*d*n1*n2*n3 + 
      28*n1^2*n2*n3 - 4*n2^2*n3 - 8*d*n2^2*n3 + 28*n1*n2^2*n3 - 8*n3^2 + 
      15*d*n3^2 - 4*d^2*n3^2 - 28*n1*n3^2 + 10*d*n1*n3^2 - 3*n1^2*n3^2 - 
      2*n2*n3^2 + 2*n1*n2*n3^2 + d*n3^3 - 3*n1*n3^3)*
     j[p4a, n1, n2, 1 + n3, 0, 1, 1, 1, 0, -1, 2, 0, 0, 0, 1])/
    ((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 
      4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
      723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
      9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
      510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
      2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
      84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
      137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 
      10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 
      702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 
      26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 
      40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 
      48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((316 - 372*d + 143*d^2 - 18*d^3 + 222*n1 - 159*d*n1 + 
      28*d^2*n1 + 32*n1^2 - 10*d*n1^2 + 108*n2 - 90*d*n2 + 18*d^2*n2 + 
      62*n1*n2 - 22*d*n1*n2 + 4*n1^2*n2 + 8*n2^2 - 4*d*n2^2 + 4*n1*n2^2 + 
      206*n3 - 155*d*n3 + 29*d^2*n3 + 84*n1*n3 - 31*d*n1*n3 + 8*n1^2*n3 + 
      62*n2*n3 - 24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 36*n3^2 - 13*d*n3^2 + 
      6*n1*n3^2 + 6*n2*n3^2 + 2*n3^3)*j[p4a, n1, n2, 1 + n3, 0, 1, 1, 1, 0, 
      0, 1, 0, 0, -1, 2])/(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 
     4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
     723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
     9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
     510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
     2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
     84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
     137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 
     14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 
     126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 
     392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 
     304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 
     92*n2*n3^2 + 32*d*n2*n3^2 - 12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 
     10*n1*n3^3 - 10*n2*n3^3 - 2*n3^4) + 
   ((38568 - 70048*d + 50618*d^2 - 18198*d^3 + 3256*d^4 - 232*d^5 + 
      35564*n1 - 52820*d*n1 + 30275*d^2*n1 - 8240*d^3*n1 + 1032*d^4*n1 - 
      44*d^5*n1 + 11914*n1^2 - 14467*d*n1^2 + 6478*d^2*n1^2 - 1263*d^3*n1^2 + 
      90*d^4*n1^2 + 1984*n1^3 - 1881*d*n1^3 + 592*d^2*n1^3 - 62*d^3*n1^3 + 
      173*n1^4 - 111*d*n1^4 + 18*d^2*n1^4 + 6*n1^5 - 2*d*n1^5 + 54776*n2 - 
      75868*d*n2 + 38538*d^2*n2 - 8245*d^3*n2 + 510*d^4*n2 + 30*d^5*n2 + 
      44088*n1*n2 - 51464*d*n1*n2 + 21704*d^2*n1*n2 - 3851*d^3*n1*n2 + 
      234*d^4*n1*n2 + 13950*n1^2*n2 - 12992*d*n1^2*n2 + 3991*d^2*n1^2*n2 - 
      404*d^3*n1^2*n2 + 1903*n1^3*n2 - 1204*d*n1^3*n2 + 190*d^2*n1^3*n2 + 
      84*n1^4*n2 - 26*d*n1^4*n2 + 27000*n2^2 - 25528*d*n2^2 + 7004*d^2*n2^2 - 
      162*d^3*n2^2 - 112*d^4*n2^2 + 20904*n1*n2^2 - 18042*d*n1*n2^2 + 
      4992*d^2*n1*n2^2 - 434*d^3*n1*n2^2 + 5566*n1^2*n2^2 - 
      3466*d*n1^2*n2^2 + 534*d^2*n1^2*n2^2 + 456*n1^3*n2^2 - 
      140*d*n1^3*n2^2 + 4*n1^4*n2^2 + 3608*n2^3 - 796*d*n2^3 - 736*d^2*n2^3 + 
      200*d^3*n2^3 + 4540*n1*n2^3 - 2584*d*n1*n2^3 + 352*d^2*n1*n2^3 + 
      896*n1^2*n2^3 - 276*d*n1^2*n2^3 + 28*n1^3*n2^3 - 336*n2^4 + 
      536*d*n2^4 - 144*d^2*n2^4 + 520*n1*n2^4 - 152*d*n1*n2^4 + 
      56*n1^2*n2^4 - 64*n2^5 + 32*d*n2^5 + 32*n1*n2^5 + 13588*n3 - 
      14460*d*n3 + 2857*d^2*n3 + 1786*d^3*n3 - 839*d^4*n3 + 98*d^5*n3 + 
      2604*n1*n3 + 3026*d*n1*n3 - 5209*d^2*n1*n3 + 2078*d^3*n1*n3 - 
      258*d^4*n1*n3 - 2120*n1^2*n3 + 3397*d*n1^2*n3 - 1579*d^2*n1^2*n3 + 
      227*d^3*n1^2*n3 - 463*n1^3*n3 + 360*d*n1^3*n3 - 68*d^2*n1^3*n3 - 
      d*n1^4*n3 + 2*n1^5*n3 + 8472*n2*n3 + 1076*d*n2*n3 - 7862*d^2*n2*n3 + 
      3634*d^3*n2*n3 - 482*d^4*n2*n3 - 1208*n1*n2*n3 + 6980*d*n1*n2*n3 - 
      4426*d^2*n1*n2*n3 + 743*d^3*n1*n2*n3 - 993*n1^2*n2*n3 + 
      1205*d*n1^2*n2*n3 - 291*d^2*n1^2*n2*n3 + 48*n1^3*n2*n3 - 
      14*d*n1^3*n2*n3 + 16*n1^4*n2*n3 + 656*n2^2*n3 + 5802*d*n2^2*n3 - 
      4330*d^2*n2^2*n3 + 774*d^3*n2^2*n3 - 1574*n1*n2^2*n3 + 
      2524*d*n1*n2^2*n3 - 678*d^2*n1*n2^2*n3 + 50*n1^2*n2^2*n3 + 
      28*d*n1^2*n2^2*n3 + 44*n1^3*n2^2*n3 - 1756*n2^3*n3 + 2376*d*n2^3*n3 - 
      612*d^2*n2^3*n3 - 368*n1*n2^3*n3 + 232*d*n1*n2^3*n3 + 32*n1^2*n2^3*n3 - 
      504*n2^4*n3 + 240*d*n2^4*n3 - 24*n1*n2^4*n3 - 32*n2^5*n3 - 2930*n3^2 + 
      6475*d*n3^2 - 4776*d^2*n3^2 + 1470*d^3*n3^2 - 163*d^4*n3^2 - 
      5392*n1*n3^2 + 6969*d*n1*n3^2 - 2945*d^2*n1*n3^2 + 408*d^3*n1*n3^2 - 
      2218*n1^2*n3^2 + 1774*d*n1^2*n3^2 - 351*d^2*n1^2*n3^2 - 314*n1^3*n3^2 + 
      119*d*n1^3*n3^2 - 13*n1^4*n3^2 - 7132*n2*n3^2 + 10005*d*n2*n3^2 - 
      4508*d^2*n2*n3^2 + 657*d^3*n2*n3^2 - 5698*n1*n2*n3^2 + 
      5005*d*n1*n2*n3^2 - 1062*d^2*n1*n2*n3^2 - 1366*n1^2*n2*n3^2 + 
      547*d*n1^2*n2*n3^2 - 83*n1^3*n2*n3^2 - 4170*n2^2*n3^2 + 
      3952*d*n2^2*n3^2 - 882*d^2*n2^2*n3^2 - 2158*n1*n2^2*n3^2 + 
      904*d*n1*n2^2*n3^2 - 200*n1^2*n2^2*n3^2 - 1096*n2^3*n3^2 + 
      488*d*n2^3*n3^2 - 224*n1*n2^3*n3^2 - 96*n2^4*n3^2 - 1634*n3^3 + 
      1816*d*n3^3 - 668*d^2*n3^3 + 82*d^3*n3^3 - 1198*n1*n3^3 + 
      842*d*n1*n3^3 - 151*d^2*n1*n3^3 - 228*n1^2*n3^3 + 84*d*n1^2*n3^3 - 
      15*n1^3*n3^3 - 1526*n2*n3^3 + 1148*d*n2*n3^3 - 222*d^2*n2*n3^3 - 
      572*n1*n2*n3^3 + 235*d*n1*n2*n3^3 - 71*n1^2*n2*n3^3 - 548*n2^2*n3^3 + 
      230*d*n2^2*n3^3 - 132*n1*n2^2*n3^3 - 76*n2^3*n3^3 - 222*n3^4 + 
      135*d*n3^4 - 19*d^2*n3^4 - 88*n1*n3^4 + 23*d*n1*n3^4 - 4*n1^2*n3^4 - 
      64*n2*n3^4 + 15*d*n2*n3^4 - 2*n1*n2*n3^4 - 10*n2^2*n3^4 - 10*n3^5 + 
      2*d*n3^5 - 2*n1*n3^5 + 2*n2*n3^5)*j[p4a, n1, n2, 1 + n3, 0, 1, 1, 1, 0, 
      0, 1, 0, 0, 0, 1])/((-2 + d - n1 - 2*n2)*(-3 + d - n3)*
     (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
      1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
      106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
      388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
      222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
      1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
      88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
      38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
      2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
      116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
      64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
      138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((-128 + 106*d - 27*d^2 + 2*d^3 + 52*n1 - 42*d*n1 + 
      8*d^2*n1 + 13*n1^2 - 4*d*n1^2 - 76*n2 + 34*d*n2 - 3*d^2*n2 + 44*n1*n2 - 
      15*d*n1*n2 + 2*n1^2*n2 - 12*n2^2 + 2*d*n2^2 + 6*n1*n2^2 - 50*n3 + 
      33*d*n3 - 5*d^2*n3 - n1*n3 - 2*d*n1*n3 + 3*n1^2*n3 - 22*n2*n3 + 
      5*d*n2*n3 + 6*n1*n2*n3 - 2*n2^2*n3 - 6*n3^2 + 3*d*n3^2 - 3*n1*n3^2 - 
      2*n2*n3^2)*j[p4a, n1, n2, 1 + n3, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 2])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) + ((-996 + 1058*d - 374*d^2 + 44*d^3 - 370*n1 + 261*d*n1 - 
      46*d^2*n1 - 45*n1^2 + 16*d*n1^2 - 2*n1^3 - 860*n2 + 604*d*n2 - 
      106*d^2*n2 - 216*n1*n2 + 76*d*n1*n2 - 14*n1^2*n2 - 216*n2^2 + 
      76*d*n2^2 - 28*n1*n2^2 - 16*n2^3 - 132*n3 + 98*d*n3 - 18*d^2*n3 - 
      31*n1*n3 + 11*d*n1*n3 - n1^2*n3 - 126*n2*n3 + 44*d*n2*n3 - 
      14*n1*n2*n3 - 20*n2^2*n3 + 14*n3^2 - 4*d*n3^2 + n1*n3^2 - 2*n2*n3^2 + 
      2*n3^3)*j[p4a, n1, n2, 1 + n3, 0, 1, 1, 1, 0, 0, 2, -1, 0, 0, 1])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) + ((16116 - 22448*d + 11701*d^2 - 2705*d^3 + 234*d^4 - 9218*n1 + 
      15367*d*n1 - 9285*d^2*n1 + 2431*d^3*n1 - 234*d^4*n1 - 6004*n1^2 + 
      6488*d*n1^2 - 2318*d^2*n1^2 + 274*d^3*n1^2 - 862*n1^3 + 583*d*n1^3 - 
      98*d^2*n1^3 - 32*n1^4 + 10*d*n1^4 + 15620*n2 - 16102*d*n2 + 
      5522*d^2*n2 - 630*d^3*n2 - 10974*n1*n2 + 12978*d*n1*n2 - 
      4998*d^2*n1*n2 + 630*d^3*n1*n2 - 4308*n1^2*n2 + 3014*d*n1^2*n2 - 
      524*d^2*n1^2*n2 - 334*n1^3*n2 + 110*d*n1^3*n2 - 4*n1^4*n2 + 5128*n2^2 - 
      3488*d*n2^2 + 592*d^2*n2^2 - 4200*n1*n2^2 + 3180*d*n1*n2^2 - 
      592*d^2*n1*n2^2 - 900*n1^2*n2^2 + 308*d*n1^2*n2^2 - 28*n1^3*n2^2 + 
      688*n2^3 - 232*d*n2^3 - 632*n1*n2^3 + 232*d*n1*n2^3 - 56*n1^2*n2^3 + 
      32*n2^4 - 32*n1*n2^4 + 9078*n3 - 10717*d*n3 + 4502*d^2*n3 - 
      772*d^3*n3 + 42*d^4*n3 - 2660*n1*n3 + 3857*d*n1*n3 - 1726*d^2*n1*n3 + 
      245*d^3*n1*n3 - 2078*n1^2*n3 + 1586*d*n1^2*n3 - 298*d^2*n1^2*n3 - 
      282*n1^3*n3 + 99*d*n1^3*n3 - 8*n1^4*n3 + 8082*n2*n3 - 6522*d*n2*n3 + 
      1585*d^2*n2*n3 - 103*d^3*n2*n3 - 3572*n1*n2*n3 + 3021*d*n1*n2*n3 - 
      615*d^2*n1*n2*n3 - 1264*n1^2*n2*n3 + 458*d*n1^2*n2*n3 - 66*n1^3*n2*n3 + 
      2032*n2^2*n3 - 918*d*n2^2*n3 + 74*d^2*n2^2*n3 - 1162*n1*n2^2*n3 + 
      458*d*n1*n2^2*n3 - 156*n1^2*n2^2*n3 + 152*n2^3*n3 - 16*d*n2^3*n3 - 
      104*n1*n2^3*n3 + 1596*n3^2 - 1621*d*n3^2 + 529*d^2*n3^2 - 55*d^3*n3^2 + 
      220*n1*n3^2 - 54*d*n1*n3^2 - 11*d^2*n1*n3^2 - 102*n1^2*n3^2 + 
      50*d*n1^2*n3^2 - 16*n1^3*n3^2 + 1628*n2*n3^2 - 985*d*n2*n3^2 + 
      142*d^2*n2*n3^2 - 132*n1*n2*n3^2 + 83*d*n1*n2*n3^2 - 64*n1^2*n2*n3^2 + 
      342*n2^2*n3^2 - 92*d*n2^2*n3^2 - 50*n1*n2^2*n3^2 + 16*n2^3*n3^2 - 
      36*n3^3 - 7*d*n3^3 + 6*d^2*n3^3 + 72*n1*n3^3 - 26*d*n1*n3^3 + 
      8*n1^2*n3^3 + 110*n2*n3^3 - 39*d*n2*n3^3 + 14*n1*n2*n3^3 + 
      18*n2^2*n3^3 - 32*n3^4 + 9*d*n3^4 + 2*n1*n3^4 - 2*n3^5)*
     j[p4a, n1, n2, 1 + n3, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1])/
    ((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 
      4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
      723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
      9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
      510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
      2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
      84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
      137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 
      10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 
      702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 
      26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 
      40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 
      48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((2988 - 4170*d + 2180*d^2 - 506*d^3 + 44*d^4 + 1110*n1 - 
      1153*d*n1 + 399*d^2*n1 - 46*d^3*n1 + 135*n1^2 - 93*d*n1^2 + 
      16*d^2*n1^2 + 6*n1^3 - 2*d*n1^3 + 2580*n2 - 2672*d*n2 + 922*d^2*n2 - 
      106*d^3*n2 + 648*n1*n2 - 444*d*n1*n2 + 76*d^2*n1*n2 + 42*n1^2*n2 - 
      14*d*n1^2*n2 + 648*n2^2 - 444*d*n2^2 + 76*d^2*n2^2 + 84*n1*n2^2 - 
      28*d*n1*n2^2 + 48*n2^3 - 16*d*n2^3 + 932*n3 - 1238*d*n3 + 606*d^2*n3 - 
      129*d^3*n3 + 10*d^4*n3 + 1445*n1*n3 - 1482*d*n1*n3 + 502*d^2*n1*n3 - 
      56*d^3*n1*n3 + 391*n1^2*n3 - 259*d*n1^2*n3 + 42*d^2*n1^2*n3 + 
      28*n1^3*n3 - 8*d*n1^3*n3 + 786*n2*n3 - 722*d*n2*n3 + 214*d^2*n2*n3 - 
      20*d^3*n2*n3 + 1102*n1*n2*n3 - 734*d*n1*n2*n3 + 120*d^2*n1*n2*n3 + 
      194*n1^2*n2*n3 - 60*d*n1^2*n2*n3 + 4*n1^3*n2*n3 + 124*n2^2*n3 - 
      68*d*n2^2*n3 + 8*d^2*n2^2*n3 + 232*n1*n2^2*n3 - 76*d*n1*n2^2*n3 + 
      20*n1^2*n2^2*n3 + 16*n1*n2^3*n3 + 30*n3^2 - 74*d*n3^2 + 42*d^2*n3^2 - 
      7*d^3*n3^2 + 221*n1*n3^2 - 181*d*n1*n3^2 + 37*d^2*n1*n3^2 + 
      69*n1^2*n3^2 - 28*d*n1^2*n3^2 + 6*n1^3*n3^2 + 106*n2*n3^2 - 
      92*d*n2*n3^2 + 20*d^2*n2*n3^2 + 204*n1*n2*n3^2 - 78*d*n1*n2*n3^2 + 
      28*n1^2*n2*n3^2 + 16*n2^2*n3^2 - 8*d*n2^2*n3^2 + 28*n1*n2^2*n3^2 - 
      28*n3^3 + 21*d*n3^3 - 4*d^2*n3^3 - 29*n1*n3^3 + 10*d*n1*n3^3 - 
      3*n1^2*n3^3 + 2*n1*n2*n3^3 - 2*n3^4 + d*n3^4 - 3*n1*n3^4)*
     j[p4a, n1, n2, 1 + n3, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0])/
    ((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 
      4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
      723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
      9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
      510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
      2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
      84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
      137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 
      10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 
      702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 
      26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 
      40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 
      48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((2888 - 5184*d + 3654*d^2 - 1262*d^3 + 213*d^4 - 14*d^5 + 
      4228*n1 - 5938*d*n1 + 3076*d^2*n1 - 696*d^3*n1 + 58*d^4*n1 + 
      1804*n1^2 - 1788*d*n1^2 + 581*d^2*n1^2 - 62*d^3*n1^2 + 206*n1^3 - 
      122*d*n1^3 + 18*d^2*n1^3 + 2044*n2 - 2984*d*n2 + 1551*d^2*n2 - 
      339*d^3*n2 + 26*d^4*n2 + 3238*n1*n2 - 3227*d*n1*n2 + 1039*d^2*n1*n2 - 
      108*d^3*n1*n2 + 894*n1^2*n2 - 532*d*n1^2*n2 + 78*d^2*n1^2*n2 + 
      28*n1^3*n2 - 8*d*n1^3*n2 + 268*n2^2 - 358*d*n2^2 + 126*d^2*n2^2 - 
      12*d^3*n2^2 + 786*n1*n2^2 - 474*d*n1*n2^2 + 68*d^2*n1*n2^2 + 
      92*n1^2*n2^2 - 24*d*n1^2*n2^2 - 16*n2^3 + 64*n1*n2^3 - 16*d*n1*n2^3 + 
      5076*n3 - 7100*d*n3 + 3737*d^2*n3 - 876*d^3*n3 + 77*d^4*n3 + 
      3288*n1*n3 - 3614*d*n1*n3 + 1316*d^2*n1*n3 - 158*d^3*n1*n3 + 
      1023*n1^2*n3 - 732*d*n1^2*n3 + 127*d^2*n1^2*n3 + 114*n1^3*n3 - 
      34*d*n1^3*n3 + 4190*n2*n3 - 4287*d*n2*n3 + 1461*d^2*n2*n3 - 
      165*d^3*n2*n3 + 2134*n1*n2*n3 - 1508*d*n1*n2*n3 + 259*d^2*n1*n2*n3 + 
      428*n1^2*n2*n3 - 132*d*n1^2*n2*n3 + 8*n1^3*n2*n3 + 898*n2^2*n3 - 
      614*d*n2^2*n3 + 102*d^2*n2^2*n3 + 384*n1*n2^2*n3 - 122*d*n1*n2^2*n3 + 
      24*n1^2*n2^2*n3 + 48*n2^3*n3 - 16*d*n2^3*n3 + 16*n1*n2^3*n3 + 
      1830*n3^2 - 1987*d*n3^2 + 722*d^2*n3^2 - 88*d^3*n3^2 + 805*n1*n3^2 - 
      611*d*n1*n3^2 + 118*d^2*n1*n3^2 + 156*n1^2*n3^2 - 66*d*n1^2*n3^2 + 
      16*n1^3*n3^2 + 1594*n2*n3^2 - 1098*d*n2*n3^2 + 192*d^2*n2*n3^2 + 
      432*n1*n2*n3^2 - 167*d*n1*n2*n3^2 + 54*n1^2*n2*n3^2 + 320*n2^2*n3^2 - 
      112*d*n2^2*n3^2 + 54*n1*n2^2*n3^2 + 16*n2^3*n3^2 + 130*n3^3 - 
      113*d*n3^3 + 23*d^2*n3^3 + 54*n1*n3^3 - 19*d*n1*n3^3 + n1^2*n3^3 + 
      168*n2*n3^3 - 57*d*n2*n3^3 + 16*n1*n2*n3^3 + 22*n2^2*n3^3 - 18*n3^4 + 
      4*d*n3^4 + n1*n3^4 + 4*n2*n3^4 - 2*n3^5)*j[p4a, n1, n2, 1 + n3, 0, 1, 
      1, 1, 1, 0, 1, 0, 0, 0, 1])/((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 
      1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 
      1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 
      8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 
      2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 
      32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 
      384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 
      32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 
      41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 
      978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
      116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
      64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
      138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((-128 + 106*d - 27*d^2 + 2*d^3 + 52*n1 - 42*d*n1 + 
      8*d^2*n1 + 13*n1^2 - 4*d*n1^2 - 76*n2 + 34*d*n2 - 3*d^2*n2 + 44*n1*n2 - 
      15*d*n1*n2 + 2*n1^2*n2 - 12*n2^2 + 2*d*n2^2 + 6*n1*n2^2 - 50*n3 + 
      33*d*n3 - 5*d^2*n3 - n1*n3 - 2*d*n1*n3 + 3*n1^2*n3 - 22*n2*n3 + 
      5*d*n2*n3 + 6*n1*n2*n3 - 2*n2^2*n3 - 6*n3^2 + 3*d*n3^2 - 3*n1*n3^2 - 
      2*n2*n3^2)*j[p4a, n1, n2, 1 + n3, 0, 1, 1, 2, 0, 0, 1, -1, 0, 0, 1])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) + ((-488 + 1186*d - 881*d^2 + 264*d^3 - 28*d^4 - 1648*n1 + 
      1856*d*n1 - 688*d^2*n1 + 84*d^3*n1 - 439*n1^2 + 304*d*n1^2 - 
      52*d^2*n1^2 - 26*n1^3 + 8*d*n1^3 + 128*n2 + 238*d*n2 - 208*d^2*n2 + 
      38*d^3*n2 - 1030*n1*n2 + 772*d*n1*n2 - 142*d^2*n1*n2 - 192*n1^2*n2 + 
      64*d*n1^2*n2 - 4*n1^3*n2 + 128*n2^2 - 8*d*n2^2 - 12*d^2*n2^2 - 
      216*n1*n2^2 + 80*d*n1*n2^2 - 20*n1^2*n2^2 + 16*n2^3 - 16*n1*n2^3 - 
      874*n3 + 1045*d*n3 - 413*d^2*n3 + 54*d^3*n3 - 667*n1*n3 + 507*d*n1*n3 - 
      96*d^2*n1*n3 - 124*n1^2*n3 + 46*d*n1^2*n3 - 6*n1^3*n3 - 268*n2*n3 + 
      270*d*n2*n3 - 62*d^2*n2*n3 - 294*n1*n2*n3 + 114*d*n1*n2*n3 - 
      32*n1^2*n2*n3 - 16*n2^2*n3 + 16*d*n2^2*n3 - 32*n1*n2^2*n3 - 306*n3^2 + 
      215*d*n3^2 - 38*d^2*n3^2 - 74*n1*n3^2 + 27*d*n1*n3^2 - 5*n1^2*n3^2 - 
      78*n2*n3^2 + 30*d*n2*n3^2 - 16*n1*n2*n3^2 - 4*n2^2*n3^2 - 42*n3^3 + 
      14*d*n3^3 - 3*n1*n3^3 - 6*n2*n3^3 - 2*n3^4)*j[p4a, n1, n2, 1 + n3, 0, 
      1, 1, 2, 0, 0, 1, 0, 0, -1, 1])/((-3 + d - n3)*
     (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
      1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
      106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
      388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
      222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
      1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
      88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
      38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
      2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
      116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
      64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
      138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((996 - 1058*d + 374*d^2 - 44*d^3 + 370*n1 - 261*d*n1 + 
      46*d^2*n1 + 45*n1^2 - 16*d*n1^2 + 2*n1^3 + 860*n2 - 604*d*n2 + 
      106*d^2*n2 + 216*n1*n2 - 76*d*n1*n2 + 14*n1^2*n2 + 216*n2^2 - 
      76*d*n2^2 + 28*n1*n2^2 + 16*n2^3 + 132*n3 - 98*d*n3 + 18*d^2*n3 + 
      31*n1*n3 - 11*d*n1*n3 + n1^2*n3 + 126*n2*n3 - 44*d*n2*n3 + 
      14*n1*n2*n3 + 20*n2^2*n3 - 14*n3^2 + 4*d*n3^2 - n1*n3^2 + 2*n2*n3^2 - 
      2*n3^3)*j[p4a, n1, n2, 1 + n3, 0, 1, 2, 1, 0, -1, 1, 0, 0, 0, 1])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) + ((-996 + 1058*d - 374*d^2 + 44*d^3 - 370*n1 + 261*d*n1 - 
      46*d^2*n1 - 45*n1^2 + 16*d*n1^2 - 2*n1^3 - 860*n2 + 604*d*n2 - 
      106*d^2*n2 - 216*n1*n2 + 76*d*n1*n2 - 14*n1^2*n2 - 216*n2^2 + 
      76*d*n2^2 - 28*n1*n2^2 - 16*n2^3 - 132*n3 + 98*d*n3 - 18*d^2*n3 - 
      31*n1*n3 + 11*d*n1*n3 - n1^2*n3 - 126*n2*n3 + 44*d*n2*n3 - 
      14*n1*n2*n3 - 20*n2^2*n3 + 14*n3^2 - 4*d*n3^2 + n1*n3^2 - 2*n2*n3^2 + 
      2*n3^3)*j[p4a, n1, n2, 1 + n3, 0, 1, 2, 1, 0, 0, 1, 0, -1, 0, 1])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) + ((996 - 1058*d + 374*d^2 - 44*d^3 + 370*n1 - 261*d*n1 + 
      46*d^2*n1 + 45*n1^2 - 16*d*n1^2 + 2*n1^3 + 860*n2 - 604*d*n2 + 
      106*d^2*n2 + 216*n1*n2 - 76*d*n1*n2 + 14*n1^2*n2 + 216*n2^2 - 
      76*d*n2^2 + 28*n1*n2^2 + 16*n2^3 + 132*n3 - 98*d*n3 + 18*d^2*n3 + 
      31*n1*n3 - 11*d*n1*n3 + n1^2*n3 + 126*n2*n3 - 44*d*n2*n3 + 
      14*n1*n2*n3 + 20*n2^2*n3 - 14*n3^2 + 4*d*n3^2 - n1*n3^2 + 2*n2*n3^2 - 
      2*n3^3)*j[p4a, n1, n2, 1 + n3, 0, 1, 2, 1, 0, 0, 1, 0, 0, -1, 1])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) + ((128 - 106*d + 27*d^2 - 2*d^3 - 52*n1 + 42*d*n1 - 8*d^2*n1 - 
      13*n1^2 + 4*d*n1^2 + 76*n2 - 34*d*n2 + 3*d^2*n2 - 44*n1*n2 + 
      15*d*n1*n2 - 2*n1^2*n2 + 12*n2^2 - 2*d*n2^2 - 6*n1*n2^2 + 50*n3 - 
      33*d*n3 + 5*d^2*n3 + n1*n3 + 2*d*n1*n3 - 3*n1^2*n3 + 22*n2*n3 - 
      5*d*n2*n3 - 6*n1*n2*n3 + 2*n2^2*n3 + 6*n3^2 - 3*d*n3^2 + 3*n1*n3^2 + 
      2*n2*n3^2)*j[p4a, n1, n2, 1 + n3, 0, 2, 0, 1, 1, -1, 1, 0, 0, 0, 1])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) + ((-488 + 1186*d - 881*d^2 + 264*d^3 - 28*d^4 - 1648*n1 + 
      1856*d*n1 - 688*d^2*n1 + 84*d^3*n1 - 439*n1^2 + 304*d*n1^2 - 
      52*d^2*n1^2 - 26*n1^3 + 8*d*n1^3 + 128*n2 + 238*d*n2 - 208*d^2*n2 + 
      38*d^3*n2 - 1030*n1*n2 + 772*d*n1*n2 - 142*d^2*n1*n2 - 192*n1^2*n2 + 
      64*d*n1^2*n2 - 4*n1^3*n2 + 128*n2^2 - 8*d*n2^2 - 12*d^2*n2^2 - 
      216*n1*n2^2 + 80*d*n1*n2^2 - 20*n1^2*n2^2 + 16*n2^3 - 16*n1*n2^3 - 
      874*n3 + 1045*d*n3 - 413*d^2*n3 + 54*d^3*n3 - 667*n1*n3 + 507*d*n1*n3 - 
      96*d^2*n1*n3 - 124*n1^2*n3 + 46*d*n1^2*n3 - 6*n1^3*n3 - 268*n2*n3 + 
      270*d*n2*n3 - 62*d^2*n2*n3 - 294*n1*n2*n3 + 114*d*n1*n2*n3 - 
      32*n1^2*n2*n3 - 16*n2^2*n3 + 16*d*n2^2*n3 - 32*n1*n2^2*n3 - 306*n3^2 + 
      215*d*n3^2 - 38*d^2*n3^2 - 74*n1*n3^2 + 27*d*n1*n3^2 - 5*n1^2*n3^2 - 
      78*n2*n3^2 + 30*d*n2*n3^2 - 16*n1*n2*n3^2 - 4*n2^2*n3^2 - 42*n3^3 + 
      14*d*n3^3 - 3*n1*n3^3 - 6*n2*n3^3 - 2*n3^4)*j[p4a, n1, n2, 1 + n3, 0, 
      2, 0, 1, 1, 0, 1, 0, 0, -1, 1])/((-3 + d - n3)*
     (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
      1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
      106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
      388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
      222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
      1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
      88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
      38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
      2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
      116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
      64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
      138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((-76 - 200*d + 267*d^2 - 100*d^3 + 12*d^4 + 826*n1 - 
      979*d*n1 + 379*d^2*n1 - 48*d^3*n1 + 304*n1^2 - 217*d*n1^2 + 
      38*d^2*n1^2 + 26*n1^3 - 8*d*n1^3 - 224*n2 - 38*d*n2 + 107*d^2*n2 - 
      23*d^3*n2 + 712*n1*n2 - 555*d*n1*n2 + 105*d^2*n1*n2 + 174*n1^2*n2 - 
      58*d*n1^2*n2 + 4*n1^3*n2 - 116*n2^2 + 10*d*n2^2 + 10*d^2*n2^2 + 
      186*n1*n2^2 - 70*d*n1*n2^2 + 20*n1^2*n2^2 - 16*n2^3 + 16*n1*n2^3 + 
      218*n3 - 257*d*n3 + 103*d^2*n3 - 14*d^3*n3 + 144*n1*n3 - 124*d*n1*n3 + 
      27*d^2*n1*n3 + 46*n1^2*n3 - 21*d*n1^2*n3 + 6*n1^3*n3 + 116*n2*n3 - 
      117*d*n2*n3 + 28*d^2*n2*n3 + 128*n1*n2*n3 - 57*d*n1*n2*n3 + 
      26*n1^2*n2*n3 + 14*n2^2*n3 - 12*d*n2^2*n3 + 22*n1*n2^2*n3 + 60*n3^2 - 
      33*d*n3^2 + 4*d^2*n3^2 - 18*n1*n3^2 + 9*d*n1*n3^2 - 6*n1^2*n3^2 + 
      26*n2*n3^2 - 7*d*n2*n3^2 - 4*n1*n2*n3^2 + 2*n2^2*n3^2 + 6*n3^3 - 
      2*d*n3^3 + 2*n2*n3^3)*j[p4a, n1, n2, 1 + n3, 0, 2, 0, 1, 1, 0, 1, 0, 0, 
      0, 1])/((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 
      4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
      723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
      9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
      510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
      2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
      84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
      137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 
      10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 
      702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 
      26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 
      40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 
      48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((996 - 1058*d + 374*d^2 - 44*d^3 + 370*n1 - 261*d*n1 + 
      46*d^2*n1 + 45*n1^2 - 16*d*n1^2 + 2*n1^3 + 860*n2 - 604*d*n2 + 
      106*d^2*n2 + 216*n1*n2 - 76*d*n1*n2 + 14*n1^2*n2 + 216*n2^2 - 
      76*d*n2^2 + 28*n1*n2^2 + 16*n2^3 + 132*n3 - 98*d*n3 + 18*d^2*n3 + 
      31*n1*n3 - 11*d*n1*n3 + n1^2*n3 + 126*n2*n3 - 44*d*n2*n3 + 
      14*n1*n2*n3 + 20*n2^2*n3 - 14*n3^2 + 4*d*n3^2 - n1*n3^2 + 2*n2*n3^2 - 
      2*n3^3)*j[p4a, n1, n2, 1 + n3, 0, 2, 1, 0, 1, -1, 1, 0, 0, 0, 1])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) + ((-996 + 1058*d - 374*d^2 + 44*d^3 - 370*n1 + 261*d*n1 - 
      46*d^2*n1 - 45*n1^2 + 16*d*n1^2 - 2*n1^3 - 860*n2 + 604*d*n2 - 
      106*d^2*n2 - 216*n1*n2 + 76*d*n1*n2 - 14*n1^2*n2 - 216*n2^2 + 
      76*d*n2^2 - 28*n1*n2^2 - 16*n2^3 - 132*n3 + 98*d*n3 - 18*d^2*n3 - 
      31*n1*n3 + 11*d*n1*n3 - n1^2*n3 - 126*n2*n3 + 44*d*n2*n3 - 
      14*n1*n2*n3 - 20*n2^2*n3 + 14*n3^2 - 4*d*n3^2 + n1*n3^2 - 2*n2*n3^2 + 
      2*n3^3)*j[p4a, n1, n2, 1 + n3, 0, 2, 1, 0, 1, 0, 1, 0, 0, -1, 1])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) + ((1 + n3)*(12180 - 16846*d + 8720*d^2 - 2002*d^3 + 172*d^4 + 
      5122*n1 - 5229*d*n1 + 1774*d^2*n1 - 200*d^3*n1 + 663*n1^2 - 
      438*d*n1^2 + 72*d^2*n1^2 + 26*n1^3 - 8*d*n1^3 + 12716*n2 - 13052*d*n2 + 
      4456*d^2*n2 - 506*d^3*n2 + 3812*n1*n2 - 2552*d*n1*n2 + 426*d^2*n1*n2 + 
      284*n1^2*n2 - 92*d*n1^2*n2 + 4*n1^3*n2 + 4456*n2^2 - 3024*d*n2^2 + 
      512*d^2*n2^2 + 832*n1*n2^2 - 276*d*n1*n2^2 + 28*n1^2*n2^2 + 640*n2^3 - 
      216*d*n2^3 + 56*n1*n2^3 + 32*n2^4 + 4148*n3 - 4466*d*n3 + 1598*d^2*n3 - 
      190*d^3*n3 + 1611*n1*n3 - 1144*d*n1*n3 + 202*d^2*n1*n3 + 192*n1^2*n3 - 
      66*d*n1^2*n3 + 6*n1^3*n3 + 4198*n2*n3 - 2942*d*n2*n3 + 514*d^2*n2*n3 + 
      1016*n1*n2*n3 - 348*d*n1*n2*n3 + 48*n1^2*n2*n3 + 1124*n2^2*n3 - 
      388*d*n2^2*n3 + 124*n1*n2^2*n3 + 88*n2^3*n3 + 78*n3^2 - 90*d*n3^2 + 
      22*d^2*n3^2 + 60*n1*n3^2 - 27*d*n1*n3^2 + 9*n1^2*n3^2 + 320*n2*n3^2 - 
      118*d*n2*n3^2 + 52*n1*n2*n3^2 + 60*n2^2*n3^2 - 80*n3^3 + 26*d*n3^3 - 
      9*n1*n3^3 - 2*n2*n3^3 - 6*n3^4)*j[p4a, n1, n2, 2 + n3, -1, 1, 1, 0, 1, 
      0, 1, 0, 0, 0, 1])/((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 
      1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 
      1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 
      8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 
      2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 
      32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 
      384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 
      32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 
      41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 
      978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
      116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
      64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
      138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((1 + n3)*(12180 - 16846*d + 8720*d^2 - 2002*d^3 + 172*d^4 + 
      5122*n1 - 5229*d*n1 + 1774*d^2*n1 - 200*d^3*n1 + 663*n1^2 - 
      438*d*n1^2 + 72*d^2*n1^2 + 26*n1^3 - 8*d*n1^3 + 12716*n2 - 13052*d*n2 + 
      4456*d^2*n2 - 506*d^3*n2 + 3812*n1*n2 - 2552*d*n1*n2 + 426*d^2*n1*n2 + 
      284*n1^2*n2 - 92*d*n1^2*n2 + 4*n1^3*n2 + 4456*n2^2 - 3024*d*n2^2 + 
      512*d^2*n2^2 + 832*n1*n2^2 - 276*d*n1*n2^2 + 28*n1^2*n2^2 + 640*n2^3 - 
      216*d*n2^3 + 56*n1*n2^3 + 32*n2^4 + 4148*n3 - 4466*d*n3 + 1598*d^2*n3 - 
      190*d^3*n3 + 1611*n1*n3 - 1144*d*n1*n3 + 202*d^2*n1*n3 + 192*n1^2*n3 - 
      66*d*n1^2*n3 + 6*n1^3*n3 + 4198*n2*n3 - 2942*d*n2*n3 + 514*d^2*n2*n3 + 
      1016*n1*n2*n3 - 348*d*n1*n2*n3 + 48*n1^2*n2*n3 + 1124*n2^2*n3 - 
      388*d*n2^2*n3 + 124*n1*n2^2*n3 + 88*n2^3*n3 + 78*n3^2 - 90*d*n3^2 + 
      22*d^2*n3^2 + 60*n1*n3^2 - 27*d*n1*n3^2 + 9*n1^2*n3^2 + 320*n2*n3^2 - 
      118*d*n2*n3^2 + 52*n1*n2*n3^2 + 60*n2^2*n3^2 - 80*n3^3 + 26*d*n3^3 - 
      9*n1*n3^3 - 2*n2*n3^3 - 6*n3^4)*j[p4a, n1, n2, 2 + n3, -1, 1, 1, 1, 0, 
      0, 1, 0, 0, 0, 1])/((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 
      1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 
      1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 
      8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 
      2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 
      32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 
      384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 
      32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 
      41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 
      978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
      116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
      64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
      138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((1 + n3)*(12180 - 16846*d + 8720*d^2 - 2002*d^3 + 172*d^4 + 
      5122*n1 - 5229*d*n1 + 1774*d^2*n1 - 200*d^3*n1 + 663*n1^2 - 
      438*d*n1^2 + 72*d^2*n1^2 + 26*n1^3 - 8*d*n1^3 + 12716*n2 - 13052*d*n2 + 
      4456*d^2*n2 - 506*d^3*n2 + 3812*n1*n2 - 2552*d*n1*n2 + 426*d^2*n1*n2 + 
      284*n1^2*n2 - 92*d*n1^2*n2 + 4*n1^3*n2 + 4456*n2^2 - 3024*d*n2^2 + 
      512*d^2*n2^2 + 832*n1*n2^2 - 276*d*n1*n2^2 + 28*n1^2*n2^2 + 640*n2^3 - 
      216*d*n2^3 + 56*n1*n2^3 + 32*n2^4 + 4148*n3 - 4466*d*n3 + 1598*d^2*n3 - 
      190*d^3*n3 + 1611*n1*n3 - 1144*d*n1*n3 + 202*d^2*n1*n3 + 192*n1^2*n3 - 
      66*d*n1^2*n3 + 6*n1^3*n3 + 4198*n2*n3 - 2942*d*n2*n3 + 514*d^2*n2*n3 + 
      1016*n1*n2*n3 - 348*d*n1*n2*n3 + 48*n1^2*n2*n3 + 1124*n2^2*n3 - 
      388*d*n2^2*n3 + 124*n1*n2^2*n3 + 88*n2^3*n3 + 78*n3^2 - 90*d*n3^2 + 
      22*d^2*n3^2 + 60*n1*n3^2 - 27*d*n1*n3^2 + 9*n1^2*n3^2 + 320*n2*n3^2 - 
      118*d*n2*n3^2 + 52*n1*n2*n3^2 + 60*n2^2*n3^2 - 80*n3^3 + 26*d*n3^3 - 
      9*n1*n3^3 - 2*n2*n3^3 - 6*n3^4)*j[p4a, n1, n2, 2 + n3, -1, 1, 1, 1, 1, 
      0, 0, 0, 0, 0, 1])/((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 
      1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 
      1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 
      8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 
      2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 
      32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 
      384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 
      32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 
      41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 
      978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
      116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
      64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
      138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + ((1 + n3)*(-12640 + 17092*d - 8640*d^2 + 1935*d^3 - 
      162*d^4 - 4140*n1 + 4072*d*n1 - 1329*d^2*n1 + 144*d^3*n1 - 320*n1^2 + 
      196*d*n1^2 - 30*d^2*n1^2 - 13168*n2 + 13192*d*n2 - 4392*d^2*n2 + 
      486*d^3*n2 - 2968*n1*n2 + 1908*d*n1*n2 - 306*d^2*n1*n2 - 104*n1^2*n2 + 
      32*d*n1^2*n2 - 4608*n2^2 + 3052*d*n2^2 - 504*d^2*n2^2 - 628*n1*n2^2 + 
      200*d*n1*n2^2 - 8*n1^2*n2^2 - 656*n2^3 + 216*d*n2^3 - 40*n1*n2^3 - 
      32*n2^4 - 4208*n3 + 4464*d*n3 - 1570*d^2*n3 + 183*d^3*n3 - 1418*n1*n3 + 
      973*d*n1*n3 - 165*d^2*n1*n3 - 124*n1^2*n3 + 38*d*n1^2*n3 - 4224*n2*n3 + 
      2896*d*n2*n3 - 494*d^2*n2*n3 - 826*n1*n2*n3 + 270*d*n1*n2*n3 - 
      20*n1^2*n2*n3 - 1128*n2^2*n3 + 380*d*n2^2*n3 - 96*n1*n2^2*n3 - 
      88*n2^3*n3 - 86*n3^2 + 105*d*n3^2 - 26*d^2*n3^2 - 88*n1*n3^2 + 
      37*d*n1*n3^2 - 12*n1^2*n3^2 - 322*n2*n3^2 + 118*d*n2*n3^2 - 
      50*n1*n2*n3^2 - 60*n2^2*n3^2 + 80*n3^3 - 25*d*n3^3 + 6*n1*n3^3 + 
      2*n2*n3^3 + 6*n3^4)*j[p4a, n1, n2, 2 + n3, -1, 1, 1, 1, 1, 0, 1, 0, 0, 
      0, 1])/((3 - d + n3)*(-7020 + 10020*d - 5365*d^2 + 1277*d^3 - 114*d^4 - 
      4286*n1 + 4615*d*n1 - 1656*d^2*n1 + 198*d^3*n1 - 1004*n1^2 + 
      723*d*n1^2 - 130*d^2*n1^2 - 106*n1^3 + 38*d*n1^3 - 4*n1^4 - 8548*n2 + 
      9150*d*n2 - 3264*d^2*n2 + 388*d^3*n2 - 4002*n1*n2 + 2858*d*n1*n2 - 
      510*d^2*n1*n2 - 622*n1^2*n2 + 222*d*n1^2*n2 - 32*n1^3*n2 - 3424*n2^2 + 
      2444*d*n2^2 - 436*d^2*n2^2 - 1076*n1*n2^2 + 384*d*n1*n2^2 - 
      84*n1^2*n2^2 - 560*n2^3 + 200*d*n2^3 - 88*n1*n2^3 - 32*n2^4 - 122*n3 + 
      137*d*n3 - 53*d^2*n3 + 7*d^3*n3 - 38*n1*n3 + 41*d*n1*n3 - 
      10*d^2*n1*n3 - 14*n1^2*n3 + 7*d*n1^2*n3 - 2*n1^3*n3 - 978*n2*n3 + 
      702*d*n2*n3 - 126*d^2*n2*n3 - 322*n1*n2*n3 + 116*d*n1*n2*n3 - 
      26*n1^2*n2*n3 - 392*n2^2*n3 + 140*d*n2^2*n3 - 64*n1*n2^2*n3 - 
      40*n2^3*n3 + 426*n3^2 - 304*d*n3^2 + 54*d^2*n3^2 + 138*n1*n3^2 - 
      48*d*n1*n3^2 + 10*n1^2*n3^2 + 92*n2*n3^2 - 32*d*n2*n3^2 + 
      12*n1*n2*n3^2 + 58*n3^3 - 21*d*n3^3 + 10*n1*n3^3 + 10*n2*n3^3 + 
      2*n3^4)) - (2*(1 + n3)*(-128 + 106*d - 27*d^2 + 2*d^3 + 52*n1 - 
      42*d*n1 + 8*d^2*n1 + 13*n1^2 - 4*d*n1^2 - 76*n2 + 34*d*n2 - 3*d^2*n2 + 
      44*n1*n2 - 15*d*n1*n2 + 2*n1^2*n2 - 12*n2^2 + 2*d*n2^2 + 6*n1*n2^2 - 
      50*n3 + 33*d*n3 - 5*d^2*n3 - n1*n3 - 2*d*n1*n3 + 3*n1^2*n3 - 22*n2*n3 + 
      5*d*n2*n3 + 6*n1*n2*n3 - 2*n2^2*n3 - 6*n3^2 + 3*d*n3^2 - 3*n1*n3^2 - 
      2*n2*n3^2)*j[p4a, n1, n2, 2 + n3, 0, 1, 1, 0, 1, 0, 1, -1, 0, 0, 1])/
    (-7020 + 10020*d - 5365*d^2 + 1277*d^3 - 114*d^4 - 4286*n1 + 4615*d*n1 - 
     1656*d^2*n1 + 198*d^3*n1 - 1004*n1^2 + 723*d*n1^2 - 130*d^2*n1^2 - 
     106*n1^3 + 38*d*n1^3 - 4*n1^4 - 8548*n2 + 9150*d*n2 - 3264*d^2*n2 + 
     388*d^3*n2 - 4002*n1*n2 + 2858*d*n1*n2 - 510*d^2*n1*n2 - 622*n1^2*n2 + 
     222*d*n1^2*n2 - 32*n1^3*n2 - 3424*n2^2 + 2444*d*n2^2 - 436*d^2*n2^2 - 
     1076*n1*n2^2 + 384*d*n1*n2^2 - 84*n1^2*n2^2 - 560*n2^3 + 200*d*n2^3 - 
     88*n1*n2^3 - 32*n2^4 - 122*n3 + 137*d*n3 - 53*d^2*n3 + 7*d^3*n3 - 
     38*n1*n3 + 41*d*n1*n3 - 10*d^2*n1*n3 - 14*n1^2*n3 + 7*d*n1^2*n3 - 
     2*n1^3*n3 - 978*n2*n3 + 702*d*n2*n3 - 126*d^2*n2*n3 - 322*n1*n2*n3 + 
     116*d*n1*n2*n3 - 26*n1^2*n2*n3 - 392*n2^2*n3 + 140*d*n2^2*n3 - 
     64*n1*n2^2*n3 - 40*n2^3*n3 + 426*n3^2 - 304*d*n3^2 + 54*d^2*n3^2 + 
     138*n1*n3^2 - 48*d*n1*n3^2 + 10*n1^2*n3^2 + 92*n2*n3^2 - 32*d*n2*n3^2 + 
     12*n1*n2*n3^2 + 58*n3^3 - 21*d*n3^3 + 10*n1*n3^3 + 10*n2*n3^3 + 
     2*n3^4) + ((1 + n3)*(188 - 266*d + 116*d^2 - 16*d^3 + 274*n1 - 
      201*d*n1 + 36*d^2*n1 + 45*n1^2 - 14*d*n1^2 + 32*n2 - 56*d*n2 + 
      15*d^2*n2 + 106*n1*n2 - 37*d*n1*n2 + 6*n1^2*n2 - 4*n2^2 - 2*d*n2^2 + 
      10*n1*n2^2 + 156*n3 - 122*d*n3 + 24*d^2*n3 + 83*n1*n3 - 33*d*n1*n3 + 
      11*n1^2*n3 + 40*n2*n3 - 19*d*n2*n3 + 20*n1*n2*n3 + 2*n2^2*n3 + 
      30*n3^2 - 10*d*n3^2 + 3*n1*n3^2 + 4*n2*n3^2 + 2*n3^3)*
     j[p4a, n1, n2, 2 + n3, 0, 1, 1, 0, 1, 0, 1, 0, -1, 0, 1])/
    (-7020 + 10020*d - 5365*d^2 + 1277*d^3 - 114*d^4 - 4286*n1 + 4615*d*n1 - 
     1656*d^2*n1 + 198*d^3*n1 - 1004*n1^2 + 723*d*n1^2 - 130*d^2*n1^2 - 
     106*n1^3 + 38*d*n1^3 - 4*n1^4 - 8548*n2 + 9150*d*n2 - 3264*d^2*n2 + 
     388*d^3*n2 - 4002*n1*n2 + 2858*d*n1*n2 - 510*d^2*n1*n2 - 622*n1^2*n2 + 
     222*d*n1^2*n2 - 32*n1^3*n2 - 3424*n2^2 + 2444*d*n2^2 - 436*d^2*n2^2 - 
     1076*n1*n2^2 + 384*d*n1*n2^2 - 84*n1^2*n2^2 - 560*n2^3 + 200*d*n2^3 - 
     88*n1*n2^3 - 32*n2^4 - 122*n3 + 137*d*n3 - 53*d^2*n3 + 7*d^3*n3 - 
     38*n1*n3 + 41*d*n1*n3 - 10*d^2*n1*n3 - 14*n1^2*n3 + 7*d*n1^2*n3 - 
     2*n1^3*n3 - 978*n2*n3 + 702*d*n2*n3 - 126*d^2*n2*n3 - 322*n1*n2*n3 + 
     116*d*n1*n2*n3 - 26*n1^2*n2*n3 - 392*n2^2*n3 + 140*d*n2^2*n3 - 
     64*n1*n2^2*n3 - 40*n2^3*n3 + 426*n3^2 - 304*d*n3^2 + 54*d^2*n3^2 + 
     138*n1*n3^2 - 48*d*n1*n3^2 + 10*n1^2*n3^2 + 92*n2*n3^2 - 32*d*n2*n3^2 + 
     12*n1*n2*n3^2 + 58*n3^3 - 21*d*n3^3 + 10*n1*n3^3 + 10*n2*n3^3 + 
     2*n3^4) - (2*(1 + n3)*(316 - 372*d + 143*d^2 - 18*d^3 + 222*n1 - 
      159*d*n1 + 28*d^2*n1 + 32*n1^2 - 10*d*n1^2 + 108*n2 - 90*d*n2 + 
      18*d^2*n2 + 62*n1*n2 - 22*d*n1*n2 + 4*n1^2*n2 + 8*n2^2 - 4*d*n2^2 + 
      4*n1*n2^2 + 206*n3 - 155*d*n3 + 29*d^2*n3 + 84*n1*n3 - 31*d*n1*n3 + 
      8*n1^2*n3 + 62*n2*n3 - 24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 36*n3^2 - 
      13*d*n3^2 + 6*n1*n3^2 + 6*n2*n3^2 + 2*n3^3)*j[p4a, n1, n2, 2 + n3, 0, 
      1, 1, 0, 1, 0, 1, 0, 0, -1, 1])/(-7020 + 10020*d - 5365*d^2 + 
     1277*d^3 - 114*d^4 - 4286*n1 + 4615*d*n1 - 1656*d^2*n1 + 198*d^3*n1 - 
     1004*n1^2 + 723*d*n1^2 - 130*d^2*n1^2 - 106*n1^3 + 38*d*n1^3 - 4*n1^4 - 
     8548*n2 + 9150*d*n2 - 3264*d^2*n2 + 388*d^3*n2 - 4002*n1*n2 + 
     2858*d*n1*n2 - 510*d^2*n1*n2 - 622*n1^2*n2 + 222*d*n1^2*n2 - 
     32*n1^3*n2 - 3424*n2^2 + 2444*d*n2^2 - 436*d^2*n2^2 - 1076*n1*n2^2 + 
     384*d*n1*n2^2 - 84*n1^2*n2^2 - 560*n2^3 + 200*d*n2^3 - 88*n1*n2^3 - 
     32*n2^4 - 122*n3 + 137*d*n3 - 53*d^2*n3 + 7*d^3*n3 - 38*n1*n3 + 
     41*d*n1*n3 - 10*d^2*n1*n3 - 14*n1^2*n3 + 7*d*n1^2*n3 - 2*n1^3*n3 - 
     978*n2*n3 + 702*d*n2*n3 - 126*d^2*n2*n3 - 322*n1*n2*n3 + 
     116*d*n1*n2*n3 - 26*n1^2*n2*n3 - 392*n2^2*n3 + 140*d*n2^2*n3 - 
     64*n1*n2^2*n3 - 40*n2^3*n3 + 426*n3^2 - 304*d*n3^2 + 54*d^2*n3^2 + 
     138*n1*n3^2 - 48*d*n1*n3^2 + 10*n1^2*n3^2 + 92*n2*n3^2 - 32*d*n2*n3^2 + 
     12*n1*n2*n3^2 + 58*n3^3 - 21*d*n3^3 + 10*n1*n3^3 + 10*n2*n3^3 + 
     2*n3^4) - ((1 + n3)*(-6436 + 8586*d - 4280*d^2 + 945*d^3 - 78*d^4 - 
      1238*n1 + 1149*d*n1 - 353*d^2*n1 + 36*d^3*n1 + 73*n1^2 - 56*d*n1^2 + 
      10*d^2*n1^2 + 14*n1^3 - 4*d*n1^3 - 5612*n2 + 5484*d*n2 - 1780*d^2*n2 + 
      192*d^3*n2 - 452*n1*n2 + 244*d*n1*n2 - 32*d^2*n1*n2 + 96*n1^2*n2 - 
      32*d*n1^2*n2 + 4*n1^3*n2 - 1448*n2^2 + 916*d*n2^2 - 144*d^2*n2^2 + 
      36*n1*n2^2 - 20*d*n1*n2^2 + 20*n1^2*n2^2 - 112*n2^3 + 32*d*n2^3 + 
      16*n1*n2^3 - 2844*n3 + 2966*d*n3 - 1024*d^2*n3 + 117*d^3*n3 - 
      733*n1*n3 + 479*d*n1*n3 - 77*d^2*n1*n3 - 28*n1^2*n3 + 6*d*n1^2*n3 + 
      2*n1^3*n3 - 2502*n2*n3 + 1678*d*n2*n3 - 280*d^2*n2*n3 - 326*n1*n2*n3 + 
      102*d*n1*n2*n3 - 556*n2^2*n3 + 184*d*n2^2*n3 - 28*n1*n2^2*n3 - 
      32*n2^3*n3 - 188*n3^2 + 159*d*n3^2 - 32*d^2*n3^2 - 84*n1*n3^2 + 
      30*d*n1*n3^2 - 5*n1^2*n3^2 - 266*n2*n3^2 + 92*d*n2*n3^2 - 
      26*n1*n2*n3^2 - 40*n2^2*n3^2 + 40*n3^3 - 11*d*n3^3 - n1*n3^3 - 
      4*n2*n3^3 + 4*n3^4)*j[p4a, n1, n2, 2 + n3, 0, 1, 1, 0, 1, 0, 1, 0, 0, 
      0, 1])/((3 - d + n3)*(-7020 + 10020*d - 5365*d^2 + 1277*d^3 - 114*d^4 - 
      4286*n1 + 4615*d*n1 - 1656*d^2*n1 + 198*d^3*n1 - 1004*n1^2 + 
      723*d*n1^2 - 130*d^2*n1^2 - 106*n1^3 + 38*d*n1^3 - 4*n1^4 - 8548*n2 + 
      9150*d*n2 - 3264*d^2*n2 + 388*d^3*n2 - 4002*n1*n2 + 2858*d*n1*n2 - 
      510*d^2*n1*n2 - 622*n1^2*n2 + 222*d*n1^2*n2 - 32*n1^3*n2 - 3424*n2^2 + 
      2444*d*n2^2 - 436*d^2*n2^2 - 1076*n1*n2^2 + 384*d*n1*n2^2 - 
      84*n1^2*n2^2 - 560*n2^3 + 200*d*n2^3 - 88*n1*n2^3 - 32*n2^4 - 122*n3 + 
      137*d*n3 - 53*d^2*n3 + 7*d^3*n3 - 38*n1*n3 + 41*d*n1*n3 - 
      10*d^2*n1*n3 - 14*n1^2*n3 + 7*d*n1^2*n3 - 2*n1^3*n3 - 978*n2*n3 + 
      702*d*n2*n3 - 126*d^2*n2*n3 - 322*n1*n2*n3 + 116*d*n1*n2*n3 - 
      26*n1^2*n2*n3 - 392*n2^2*n3 + 140*d*n2^2*n3 - 64*n1*n2^2*n3 - 
      40*n2^3*n3 + 426*n3^2 - 304*d*n3^2 + 54*d^2*n3^2 + 138*n1*n3^2 - 
      48*d*n1*n3^2 + 10*n1^2*n3^2 + 92*n2*n3^2 - 32*d*n2*n3^2 + 
      12*n1*n2*n3^2 + 58*n3^3 - 21*d*n3^3 + 10*n1*n3^3 + 10*n2*n3^3 + 
      2*n3^4)) - (2*(1 + n3)*(-128 + 106*d - 27*d^2 + 2*d^3 + 52*n1 - 
      42*d*n1 + 8*d^2*n1 + 13*n1^2 - 4*d*n1^2 - 76*n2 + 34*d*n2 - 3*d^2*n2 + 
      44*n1*n2 - 15*d*n1*n2 + 2*n1^2*n2 - 12*n2^2 + 2*d*n2^2 + 6*n1*n2^2 - 
      50*n3 + 33*d*n3 - 5*d^2*n3 - n1*n3 - 2*d*n1*n3 + 3*n1^2*n3 - 22*n2*n3 + 
      5*d*n2*n3 + 6*n1*n2*n3 - 2*n2^2*n3 - 6*n3^2 + 3*d*n3^2 - 3*n1*n3^2 - 
      2*n2*n3^2)*j[p4a, n1, n2, 2 + n3, 0, 1, 1, 1, 0, 0, 1, -1, 0, 0, 1])/
    (-7020 + 10020*d - 5365*d^2 + 1277*d^3 - 114*d^4 - 4286*n1 + 4615*d*n1 - 
     1656*d^2*n1 + 198*d^3*n1 - 1004*n1^2 + 723*d*n1^2 - 130*d^2*n1^2 - 
     106*n1^3 + 38*d*n1^3 - 4*n1^4 - 8548*n2 + 9150*d*n2 - 3264*d^2*n2 + 
     388*d^3*n2 - 4002*n1*n2 + 2858*d*n1*n2 - 510*d^2*n1*n2 - 622*n1^2*n2 + 
     222*d*n1^2*n2 - 32*n1^3*n2 - 3424*n2^2 + 2444*d*n2^2 - 436*d^2*n2^2 - 
     1076*n1*n2^2 + 384*d*n1*n2^2 - 84*n1^2*n2^2 - 560*n2^3 + 200*d*n2^3 - 
     88*n1*n2^3 - 32*n2^4 - 122*n3 + 137*d*n3 - 53*d^2*n3 + 7*d^3*n3 - 
     38*n1*n3 + 41*d*n1*n3 - 10*d^2*n1*n3 - 14*n1^2*n3 + 7*d*n1^2*n3 - 
     2*n1^3*n3 - 978*n2*n3 + 702*d*n2*n3 - 126*d^2*n2*n3 - 322*n1*n2*n3 + 
     116*d*n1*n2*n3 - 26*n1^2*n2*n3 - 392*n2^2*n3 + 140*d*n2^2*n3 - 
     64*n1*n2^2*n3 - 40*n2^3*n3 + 426*n3^2 - 304*d*n3^2 + 54*d^2*n3^2 + 
     138*n1*n3^2 - 48*d*n1*n3^2 + 10*n1^2*n3^2 + 92*n2*n3^2 - 32*d*n2*n3^2 + 
     12*n1*n2*n3^2 + 58*n3^3 - 21*d*n3^3 + 10*n1*n3^3 + 10*n2*n3^3 + 
     2*n3^4) + ((1 + n3)*(-128 + 106*d - 27*d^2 + 2*d^3 + 52*n1 - 42*d*n1 + 
      8*d^2*n1 + 13*n1^2 - 4*d*n1^2 - 76*n2 + 34*d*n2 - 3*d^2*n2 + 44*n1*n2 - 
      15*d*n1*n2 + 2*n1^2*n2 - 12*n2^2 + 2*d*n2^2 + 6*n1*n2^2 - 50*n3 + 
      33*d*n3 - 5*d^2*n3 - n1*n3 - 2*d*n1*n3 + 3*n1^2*n3 - 22*n2*n3 + 
      5*d*n2*n3 + 6*n1*n2*n3 - 2*n2^2*n3 - 6*n3^2 + 3*d*n3^2 - 3*n1*n3^2 - 
      2*n2*n3^2)*j[p4a, n1, n2, 2 + n3, 0, 1, 1, 1, 0, 0, 1, 0, -1, 0, 1])/
    (-7020 + 10020*d - 5365*d^2 + 1277*d^3 - 114*d^4 - 4286*n1 + 4615*d*n1 - 
     1656*d^2*n1 + 198*d^3*n1 - 1004*n1^2 + 723*d*n1^2 - 130*d^2*n1^2 - 
     106*n1^3 + 38*d*n1^3 - 4*n1^4 - 8548*n2 + 9150*d*n2 - 3264*d^2*n2 + 
     388*d^3*n2 - 4002*n1*n2 + 2858*d*n1*n2 - 510*d^2*n1*n2 - 622*n1^2*n2 + 
     222*d*n1^2*n2 - 32*n1^3*n2 - 3424*n2^2 + 2444*d*n2^2 - 436*d^2*n2^2 - 
     1076*n1*n2^2 + 384*d*n1*n2^2 - 84*n1^2*n2^2 - 560*n2^3 + 200*d*n2^3 - 
     88*n1*n2^3 - 32*n2^4 - 122*n3 + 137*d*n3 - 53*d^2*n3 + 7*d^3*n3 - 
     38*n1*n3 + 41*d*n1*n3 - 10*d^2*n1*n3 - 14*n1^2*n3 + 7*d*n1^2*n3 - 
     2*n1^3*n3 - 978*n2*n3 + 702*d*n2*n3 - 126*d^2*n2*n3 - 322*n1*n2*n3 + 
     116*d*n1*n2*n3 - 26*n1^2*n2*n3 - 392*n2^2*n3 + 140*d*n2^2*n3 - 
     64*n1*n2^2*n3 - 40*n2^3*n3 + 426*n3^2 - 304*d*n3^2 + 54*d^2*n3^2 + 
     138*n1*n3^2 - 48*d*n1*n3^2 + 10*n1^2*n3^2 + 92*n2*n3^2 - 32*d*n2*n3^2 + 
     12*n1*n2*n3^2 + 58*n3^3 - 21*d*n3^3 + 10*n1*n3^3 + 10*n2*n3^3 + 
     2*n3^4) - (2*(1 + n3)*(316 - 372*d + 143*d^2 - 18*d^3 + 222*n1 - 
      159*d*n1 + 28*d^2*n1 + 32*n1^2 - 10*d*n1^2 + 108*n2 - 90*d*n2 + 
      18*d^2*n2 + 62*n1*n2 - 22*d*n1*n2 + 4*n1^2*n2 + 8*n2^2 - 4*d*n2^2 + 
      4*n1*n2^2 + 206*n3 - 155*d*n3 + 29*d^2*n3 + 84*n1*n3 - 31*d*n1*n3 + 
      8*n1^2*n3 + 62*n2*n3 - 24*d*n2*n3 + 14*n1*n2*n3 + 4*n2^2*n3 + 36*n3^2 - 
      13*d*n3^2 + 6*n1*n3^2 + 6*n2*n3^2 + 2*n3^3)*j[p4a, n1, n2, 2 + n3, 0, 
      1, 1, 1, 0, 0, 1, 0, 0, -1, 1])/(-7020 + 10020*d - 5365*d^2 + 
     1277*d^3 - 114*d^4 - 4286*n1 + 4615*d*n1 - 1656*d^2*n1 + 198*d^3*n1 - 
     1004*n1^2 + 723*d*n1^2 - 130*d^2*n1^2 - 106*n1^3 + 38*d*n1^3 - 4*n1^4 - 
     8548*n2 + 9150*d*n2 - 3264*d^2*n2 + 388*d^3*n2 - 4002*n1*n2 + 
     2858*d*n1*n2 - 510*d^2*n1*n2 - 622*n1^2*n2 + 222*d*n1^2*n2 - 
     32*n1^3*n2 - 3424*n2^2 + 2444*d*n2^2 - 436*d^2*n2^2 - 1076*n1*n2^2 + 
     384*d*n1*n2^2 - 84*n1^2*n2^2 - 560*n2^3 + 200*d*n2^3 - 88*n1*n2^3 - 
     32*n2^4 - 122*n3 + 137*d*n3 - 53*d^2*n3 + 7*d^3*n3 - 38*n1*n3 + 
     41*d*n1*n3 - 10*d^2*n1*n3 - 14*n1^2*n3 + 7*d*n1^2*n3 - 2*n1^3*n3 - 
     978*n2*n3 + 702*d*n2*n3 - 126*d^2*n2*n3 - 322*n1*n2*n3 + 
     116*d*n1*n2*n3 - 26*n1^2*n2*n3 - 392*n2^2*n3 + 140*d*n2^2*n3 - 
     64*n1*n2^2*n3 - 40*n2^3*n3 + 426*n3^2 - 304*d*n3^2 + 54*d^2*n3^2 + 
     138*n1*n3^2 - 48*d*n1*n3^2 + 10*n1^2*n3^2 + 92*n2*n3^2 - 32*d*n2*n3^2 + 
     12*n1*n2*n3^2 + 58*n3^3 - 21*d*n3^3 + 10*n1*n3^3 + 10*n2*n3^3 + 
     2*n3^4) - (2*(1 + n3)*(-460 + 246*d + 80*d^2 - 67*d^3 + 10*d^4 + 
      982*n1 - 1157*d*n1 + 445*d^2*n1 - 56*d^3*n1 + 343*n1^2 - 242*d*n1^2 + 
      42*d^2*n1^2 + 26*n1^3 - 8*d*n1^3 - 452*n2 + 140*d*n2 + 64*d^2*n2 - 
      20*d^3*n2 + 844*n1*n2 - 644*d*n1*n2 + 120*d^2*n1*n2 + 180*n1^2*n2 - 
      60*d*n1^2*n2 + 4*n1^3*n2 - 152*n2^2 + 28*d*n2^2 + 8*d^2*n2^2 + 
      204*n1*n2^2 - 76*d*n1*n2^2 + 20*n1^2*n2^2 - 16*n2^3 + 16*n1*n2^3 - 
      60*n3 - 2*d*n3 + 28*d^2*n3 - 7*d^3*n3 + 193*n1*n3 - 171*d*n1*n3 + 
      37*d^2*n1*n3 + 68*n1^2*n3 - 28*d*n1^2*n3 + 6*n1^3*n3 - 26*n2*n3 - 
      46*d*n2*n3 + 20*d^2*n2*n3 + 190*n1*n2*n3 - 78*d*n1*n2*n3 + 
      28*n1^2*n2*n3 - 4*n2^2*n3 - 8*d*n2^2*n3 + 28*n1*n2^2*n3 - 8*n3^2 + 
      15*d*n3^2 - 4*d^2*n3^2 - 28*n1*n3^2 + 10*d*n1*n3^2 - 3*n1^2*n3^2 - 
      2*n2*n3^2 + 2*n1*n2*n3^2 + d*n3^3 - 3*n1*n3^3)*
     j[p4a, n1, n2, 2 + n3, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1])/
    ((3 - d + n3)*(-7020 + 10020*d - 5365*d^2 + 1277*d^3 - 114*d^4 - 
      4286*n1 + 4615*d*n1 - 1656*d^2*n1 + 198*d^3*n1 - 1004*n1^2 + 
      723*d*n1^2 - 130*d^2*n1^2 - 106*n1^3 + 38*d*n1^3 - 4*n1^4 - 8548*n2 + 
      9150*d*n2 - 3264*d^2*n2 + 388*d^3*n2 - 4002*n1*n2 + 2858*d*n1*n2 - 
      510*d^2*n1*n2 - 622*n1^2*n2 + 222*d*n1^2*n2 - 32*n1^3*n2 - 3424*n2^2 + 
      2444*d*n2^2 - 436*d^2*n2^2 - 1076*n1*n2^2 + 384*d*n1*n2^2 - 
      84*n1^2*n2^2 - 560*n2^3 + 200*d*n2^3 - 88*n1*n2^3 - 32*n2^4 - 122*n3 + 
      137*d*n3 - 53*d^2*n3 + 7*d^3*n3 - 38*n1*n3 + 41*d*n1*n3 - 
      10*d^2*n1*n3 - 14*n1^2*n3 + 7*d*n1^2*n3 - 2*n1^3*n3 - 978*n2*n3 + 
      702*d*n2*n3 - 126*d^2*n2*n3 - 322*n1*n2*n3 + 116*d*n1*n2*n3 - 
      26*n1^2*n2*n3 - 392*n2^2*n3 + 140*d*n2^2*n3 - 64*n1*n2^2*n3 - 
      40*n2^3*n3 + 426*n3^2 - 304*d*n3^2 + 54*d^2*n3^2 + 138*n1*n3^2 - 
      48*d*n1*n3^2 + 10*n1^2*n3^2 + 92*n2*n3^2 - 32*d*n2*n3^2 + 
      12*n1*n2*n3^2 + 58*n3^3 - 21*d*n3^3 + 10*n1*n3^3 + 10*n2*n3^3 + 
      2*n3^4)) + ((1 + n3)*(-128 + 106*d - 27*d^2 + 2*d^3 + 52*n1 - 42*d*n1 + 
      8*d^2*n1 + 13*n1^2 - 4*d*n1^2 - 76*n2 + 34*d*n2 - 3*d^2*n2 + 44*n1*n2 - 
      15*d*n1*n2 + 2*n1^2*n2 - 12*n2^2 + 2*d*n2^2 + 6*n1*n2^2 - 50*n3 + 
      33*d*n3 - 5*d^2*n3 - n1*n3 - 2*d*n1*n3 + 3*n1^2*n3 - 22*n2*n3 + 
      5*d*n2*n3 + 6*n1*n2*n3 - 2*n2^2*n3 - 6*n3^2 + 3*d*n3^2 - 3*n1*n3^2 - 
      2*n2*n3^2)*j[p4a, n1, n2, 2 + n3, 0, 1, 1, 1, 1, 0, 0, 0, -1, 0, 1])/
    (-7020 + 10020*d - 5365*d^2 + 1277*d^3 - 114*d^4 - 4286*n1 + 4615*d*n1 - 
     1656*d^2*n1 + 198*d^3*n1 - 1004*n1^2 + 723*d*n1^2 - 130*d^2*n1^2 - 
     106*n1^3 + 38*d*n1^3 - 4*n1^4 - 8548*n2 + 9150*d*n2 - 3264*d^2*n2 + 
     388*d^3*n2 - 4002*n1*n2 + 2858*d*n1*n2 - 510*d^2*n1*n2 - 622*n1^2*n2 + 
     222*d*n1^2*n2 - 32*n1^3*n2 - 3424*n2^2 + 2444*d*n2^2 - 436*d^2*n2^2 - 
     1076*n1*n2^2 + 384*d*n1*n2^2 - 84*n1^2*n2^2 - 560*n2^3 + 200*d*n2^3 - 
     88*n1*n2^3 - 32*n2^4 - 122*n3 + 137*d*n3 - 53*d^2*n3 + 7*d^3*n3 - 
     38*n1*n3 + 41*d*n1*n3 - 10*d^2*n1*n3 - 14*n1^2*n3 + 7*d*n1^2*n3 - 
     2*n1^3*n3 - 978*n2*n3 + 702*d*n2*n3 - 126*d^2*n2*n3 - 322*n1*n2*n3 + 
     116*d*n1*n2*n3 - 26*n1^2*n2*n3 - 392*n2^2*n3 + 140*d*n2^2*n3 - 
     64*n1*n2^2*n3 - 40*n2^3*n3 + 426*n3^2 - 304*d*n3^2 + 54*d^2*n3^2 + 
     138*n1*n3^2 - 48*d*n1*n3^2 + 10*n1^2*n3^2 + 92*n2*n3^2 - 32*d*n2*n3^2 + 
     12*n1*n2*n3^2 + 58*n3^3 - 21*d*n3^3 + 10*n1*n3^3 + 10*n2*n3^3 + 
     2*n3^4) - ((1 + n3)*(12180 - 16846*d + 8720*d^2 - 2002*d^3 + 172*d^4 + 
      5122*n1 - 5229*d*n1 + 1774*d^2*n1 - 200*d^3*n1 + 663*n1^2 - 
      438*d*n1^2 + 72*d^2*n1^2 + 26*n1^3 - 8*d*n1^3 + 12716*n2 - 13052*d*n2 + 
      4456*d^2*n2 - 506*d^3*n2 + 3812*n1*n2 - 2552*d*n1*n2 + 426*d^2*n1*n2 + 
      284*n1^2*n2 - 92*d*n1^2*n2 + 4*n1^3*n2 + 4456*n2^2 - 3024*d*n2^2 + 
      512*d^2*n2^2 + 832*n1*n2^2 - 276*d*n1*n2^2 + 28*n1^2*n2^2 + 640*n2^3 - 
      216*d*n2^3 + 56*n1*n2^3 + 32*n2^4 + 4148*n3 - 4466*d*n3 + 1598*d^2*n3 - 
      190*d^3*n3 + 1611*n1*n3 - 1144*d*n1*n3 + 202*d^2*n1*n3 + 192*n1^2*n3 - 
      66*d*n1^2*n3 + 6*n1^3*n3 + 4198*n2*n3 - 2942*d*n2*n3 + 514*d^2*n2*n3 + 
      1016*n1*n2*n3 - 348*d*n1*n2*n3 + 48*n1^2*n2*n3 + 1124*n2^2*n3 - 
      388*d*n2^2*n3 + 124*n1*n2^2*n3 + 88*n2^3*n3 + 78*n3^2 - 90*d*n3^2 + 
      22*d^2*n3^2 + 60*n1*n3^2 - 27*d*n1*n3^2 + 9*n1^2*n3^2 + 320*n2*n3^2 - 
      118*d*n2*n3^2 + 52*n1*n2*n3^2 + 60*n2^2*n3^2 - 80*n3^3 + 26*d*n3^3 - 
      9*n1*n3^3 - 2*n2*n3^3 - 6*n3^4)*j[p4a, n1, n2, 2 + n3, 0, 1, 1, 1, 1, 
      0, 1, -1, 0, 0, 0])/((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 
      1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 
      1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 
      8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 
      2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 
      32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 
      384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 
      32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 
      41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 
      978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
      116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
      64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
      138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) - ((1 + n3)*(76 + 200*d - 267*d^2 + 100*d^3 - 12*d^4 - 
      826*n1 + 979*d*n1 - 379*d^2*n1 + 48*d^3*n1 - 304*n1^2 + 217*d*n1^2 - 
      38*d^2*n1^2 - 26*n1^3 + 8*d*n1^3 + 224*n2 + 38*d*n2 - 107*d^2*n2 + 
      23*d^3*n2 - 712*n1*n2 + 555*d*n1*n2 - 105*d^2*n1*n2 - 174*n1^2*n2 + 
      58*d*n1^2*n2 - 4*n1^3*n2 + 116*n2^2 - 10*d*n2^2 - 10*d^2*n2^2 - 
      186*n1*n2^2 + 70*d*n1*n2^2 - 20*n1^2*n2^2 + 16*n2^3 - 16*n1*n2^3 - 
      218*n3 + 257*d*n3 - 103*d^2*n3 + 14*d^3*n3 - 144*n1*n3 + 124*d*n1*n3 - 
      27*d^2*n1*n3 - 46*n1^2*n3 + 21*d*n1^2*n3 - 6*n1^3*n3 - 116*n2*n3 + 
      117*d*n2*n3 - 28*d^2*n2*n3 - 128*n1*n2*n3 + 57*d*n1*n2*n3 - 
      26*n1^2*n2*n3 - 14*n2^2*n3 + 12*d*n2^2*n3 - 22*n1*n2^2*n3 - 60*n3^2 + 
      33*d*n3^2 - 4*d^2*n3^2 + 18*n1*n3^2 - 9*d*n1*n3^2 + 6*n1^2*n3^2 - 
      26*n2*n3^2 + 7*d*n2*n3^2 + 4*n1*n2*n3^2 - 2*n2^2*n3^2 - 6*n3^3 + 
      2*d*n3^3 - 2*n2*n3^3)*j[p4a, n1, n2, 2 + n3, 0, 1, 1, 1, 1, 0, 1, 0, 
      -1, 0, 1])/((3 - d + n3)*(-7020 + 10020*d - 5365*d^2 + 1277*d^3 - 
      114*d^4 - 4286*n1 + 4615*d*n1 - 1656*d^2*n1 + 198*d^3*n1 - 1004*n1^2 + 
      723*d*n1^2 - 130*d^2*n1^2 - 106*n1^3 + 38*d*n1^3 - 4*n1^4 - 8548*n2 + 
      9150*d*n2 - 3264*d^2*n2 + 388*d^3*n2 - 4002*n1*n2 + 2858*d*n1*n2 - 
      510*d^2*n1*n2 - 622*n1^2*n2 + 222*d*n1^2*n2 - 32*n1^3*n2 - 3424*n2^2 + 
      2444*d*n2^2 - 436*d^2*n2^2 - 1076*n1*n2^2 + 384*d*n1*n2^2 - 
      84*n1^2*n2^2 - 560*n2^3 + 200*d*n2^3 - 88*n1*n2^3 - 32*n2^4 - 122*n3 + 
      137*d*n3 - 53*d^2*n3 + 7*d^3*n3 - 38*n1*n3 + 41*d*n1*n3 - 
      10*d^2*n1*n3 - 14*n1^2*n3 + 7*d*n1^2*n3 - 2*n1^3*n3 - 978*n2*n3 + 
      702*d*n2*n3 - 126*d^2*n2*n3 - 322*n1*n2*n3 + 116*d*n1*n2*n3 - 
      26*n1^2*n2*n3 - 392*n2^2*n3 + 140*d*n2^2*n3 - 64*n1*n2^2*n3 - 
      40*n2^3*n3 + 426*n3^2 - 304*d*n3^2 + 54*d^2*n3^2 + 138*n1*n3^2 - 
      48*d*n1*n3^2 + 10*n1^2*n3^2 + 92*n2*n3^2 - 32*d*n2*n3^2 + 
      12*n1*n2*n3^2 + 58*n3^3 - 21*d*n3^3 + 10*n1*n3^3 + 10*n2*n3^3 + 
      2*n3^4)) + ((1 + n3)*(-5516 + 8094*d - 4440*d^2 + 1079*d^3 - 98*d^4 - 
      3202*n1 + 3463*d*n1 - 1243*d^2*n1 + 148*d^3*n1 - 613*n1^2 + 
      428*d*n1^2 - 74*d^2*n1^2 - 38*n1^3 + 12*d*n1^3 - 4708*n2 + 5204*d*n2 - 
      1908*d^2*n2 + 232*d^3*n2 - 2140*n1*n2 + 1532*d*n1*n2 - 272*d^2*n1*n2 - 
      264*n1^2*n2 + 88*d*n1^2*n2 - 4*n1^3*n2 - 1144*n2^2 + 860*d*n2^2 - 
      160*d^2*n2^2 - 372*n1*n2^2 + 132*d*n1*n2^2 - 20*n1^2*n2^2 - 80*n2^3 + 
      32*d*n2^3 - 16*n1*n2^3 - 2724*n3 + 2970*d*n3 - 1080*d^2*n3 + 
      131*d^3*n3 - 1119*n1*n3 + 821*d*n1*n3 - 151*d^2*n1*n3 - 164*n1^2*n3 + 
      62*d*n1^2*n3 - 10*n1^3*n3 - 2450*n2*n3 + 1770*d*n2*n3 - 320*d^2*n2*n3 - 
      706*n1*n2*n3 + 258*d*n1*n2*n3 - 56*n1^2*n2*n3 - 548*n2^2*n3 + 
      200*d*n2^2*n3 - 84*n1*n2^2*n3 - 32*n2^3*n3 - 172*n3^2 + 129*d*n3^2 - 
      24*d^2*n3^2 - 28*n1*n3^2 + 10*d*n1*n3^2 + n1^2*n3^2 - 262*n2*n3^2 + 
      92*d*n2*n3^2 - 30*n1*n2*n3^2 - 40*n2^2*n3^2 + 40*n3^3 - 13*d*n3^3 + 
      5*n1*n3^3 - 4*n2*n3^3 + 4*n3^4)*j[p4a, n1, n2, 2 + n3, 0, 1, 1, 1, 1, 
      0, 1, 0, 0, -1, 1])/((3 - d + n3)*(-7020 + 10020*d - 5365*d^2 + 
      1277*d^3 - 114*d^4 - 4286*n1 + 4615*d*n1 - 1656*d^2*n1 + 198*d^3*n1 - 
      1004*n1^2 + 723*d*n1^2 - 130*d^2*n1^2 - 106*n1^3 + 38*d*n1^3 - 4*n1^4 - 
      8548*n2 + 9150*d*n2 - 3264*d^2*n2 + 388*d^3*n2 - 4002*n1*n2 + 
      2858*d*n1*n2 - 510*d^2*n1*n2 - 622*n1^2*n2 + 222*d*n1^2*n2 - 
      32*n1^3*n2 - 3424*n2^2 + 2444*d*n2^2 - 436*d^2*n2^2 - 1076*n1*n2^2 + 
      384*d*n1*n2^2 - 84*n1^2*n2^2 - 560*n2^3 + 200*d*n2^3 - 88*n1*n2^3 - 
      32*n2^4 - 122*n3 + 137*d*n3 - 53*d^2*n3 + 7*d^3*n3 - 38*n1*n3 + 
      41*d*n1*n3 - 10*d^2*n1*n3 - 14*n1^2*n3 + 7*d*n1^2*n3 - 2*n1^3*n3 - 
      978*n2*n3 + 702*d*n2*n3 - 126*d^2*n2*n3 - 322*n1*n2*n3 + 
      116*d*n1*n2*n3 - 26*n1^2*n2*n3 - 392*n2^2*n3 + 140*d*n2^2*n3 - 
      64*n1*n2^2*n3 - 40*n2^3*n3 + 426*n3^2 - 304*d*n3^2 + 54*d^2*n3^2 + 
      138*n1*n3^2 - 48*d*n1*n3^2 + 10*n1^2*n3^2 + 92*n2*n3^2 - 32*d*n2*n3^2 + 
      12*n1*n2*n3^2 + 58*n3^3 - 21*d*n3^3 + 10*n1*n3^3 + 10*n2*n3^3 + 
      2*n3^4)) - ((1 + n3)*(-460 + 246*d + 80*d^2 - 67*d^3 + 10*d^4 + 
      982*n1 - 1157*d*n1 + 445*d^2*n1 - 56*d^3*n1 + 343*n1^2 - 242*d*n1^2 + 
      42*d^2*n1^2 + 26*n1^3 - 8*d*n1^3 - 452*n2 + 140*d*n2 + 64*d^2*n2 - 
      20*d^3*n2 + 844*n1*n2 - 644*d*n1*n2 + 120*d^2*n1*n2 + 180*n1^2*n2 - 
      60*d*n1^2*n2 + 4*n1^3*n2 - 152*n2^2 + 28*d*n2^2 + 8*d^2*n2^2 + 
      204*n1*n2^2 - 76*d*n1*n2^2 + 20*n1^2*n2^2 - 16*n2^3 + 16*n1*n2^3 - 
      60*n3 - 2*d*n3 + 28*d^2*n3 - 7*d^3*n3 + 193*n1*n3 - 171*d*n1*n3 + 
      37*d^2*n1*n3 + 68*n1^2*n3 - 28*d*n1^2*n3 + 6*n1^3*n3 - 26*n2*n3 - 
      46*d*n2*n3 + 20*d^2*n2*n3 + 190*n1*n2*n3 - 78*d*n1*n2*n3 + 
      28*n1^2*n2*n3 - 4*n2^2*n3 - 8*d*n2^2*n3 + 28*n1*n2^2*n3 - 8*n3^2 + 
      15*d*n3^2 - 4*d^2*n3^2 - 28*n1*n3^2 + 10*d*n1*n3^2 - 3*n1^2*n3^2 - 
      2*n2*n3^2 + 2*n1*n2*n3^2 + d*n3^3 - 3*n1*n3^3)*
     j[p4a, n1, n2, 2 + n3, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0])/
    ((3 - d + n3)*(-7020 + 10020*d - 5365*d^2 + 1277*d^3 - 114*d^4 - 
      4286*n1 + 4615*d*n1 - 1656*d^2*n1 + 198*d^3*n1 - 1004*n1^2 + 
      723*d*n1^2 - 130*d^2*n1^2 - 106*n1^3 + 38*d*n1^3 - 4*n1^4 - 8548*n2 + 
      9150*d*n2 - 3264*d^2*n2 + 388*d^3*n2 - 4002*n1*n2 + 2858*d*n1*n2 - 
      510*d^2*n1*n2 - 622*n1^2*n2 + 222*d*n1^2*n2 - 32*n1^3*n2 - 3424*n2^2 + 
      2444*d*n2^2 - 436*d^2*n2^2 - 1076*n1*n2^2 + 384*d*n1*n2^2 - 
      84*n1^2*n2^2 - 560*n2^3 + 200*d*n2^3 - 88*n1*n2^3 - 32*n2^4 - 122*n3 + 
      137*d*n3 - 53*d^2*n3 + 7*d^3*n3 - 38*n1*n3 + 41*d*n1*n3 - 
      10*d^2*n1*n3 - 14*n1^2*n3 + 7*d*n1^2*n3 - 2*n1^3*n3 - 978*n2*n3 + 
      702*d*n2*n3 - 126*d^2*n2*n3 - 322*n1*n2*n3 + 116*d*n1*n2*n3 - 
      26*n1^2*n2*n3 - 392*n2^2*n3 + 140*d*n2^2*n3 - 64*n1*n2^2*n3 - 
      40*n2^3*n3 + 426*n3^2 - 304*d*n3^2 + 54*d^2*n3^2 + 138*n1*n3^2 - 
      48*d*n1*n3^2 + 10*n1^2*n3^2 + 92*n2*n3^2 - 32*d*n2*n3^2 + 
      12*n1*n2*n3^2 + 58*n3^3 - 21*d*n3^3 + 10*n1*n3^3 + 10*n2*n3^3 + 
      2*n3^4)) + (n2*(-460 + 246*d + 80*d^2 - 67*d^3 + 10*d^4 + 982*n1 - 
      1157*d*n1 + 445*d^2*n1 - 56*d^3*n1 + 343*n1^2 - 242*d*n1^2 + 
      42*d^2*n1^2 + 26*n1^3 - 8*d*n1^3 - 452*n2 + 140*d*n2 + 64*d^2*n2 - 
      20*d^3*n2 + 844*n1*n2 - 644*d*n1*n2 + 120*d^2*n1*n2 + 180*n1^2*n2 - 
      60*d*n1^2*n2 + 4*n1^3*n2 - 152*n2^2 + 28*d*n2^2 + 8*d^2*n2^2 + 
      204*n1*n2^2 - 76*d*n1*n2^2 + 20*n1^2*n2^2 - 16*n2^3 + 16*n1*n2^3 - 
      60*n3 - 2*d*n3 + 28*d^2*n3 - 7*d^3*n3 + 193*n1*n3 - 171*d*n1*n3 + 
      37*d^2*n1*n3 + 68*n1^2*n3 - 28*d*n1^2*n3 + 6*n1^3*n3 - 26*n2*n3 - 
      46*d*n2*n3 + 20*d^2*n2*n3 + 190*n1*n2*n3 - 78*d*n1*n2*n3 + 
      28*n1^2*n2*n3 - 4*n2^2*n3 - 8*d*n2^2*n3 + 28*n1*n2^2*n3 - 8*n3^2 + 
      15*d*n3^2 - 4*d^2*n3^2 - 28*n1*n3^2 + 10*d*n1*n3^2 - 3*n1^2*n3^2 - 
      2*n2*n3^2 + 2*n1*n2*n3^2 + d*n3^3 - 3*n1*n3^3)*
     j[p4a, n1, 1 + n2, n3, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1])/
    ((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 
      4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
      723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
      9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
      510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
      2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
      84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
      137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 
      10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 
      702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 
      26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 
      40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 
      48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) - (n2*(-460 + 246*d + 80*d^2 - 67*d^3 + 10*d^4 + 982*n1 - 
      1157*d*n1 + 445*d^2*n1 - 56*d^3*n1 + 343*n1^2 - 242*d*n1^2 + 
      42*d^2*n1^2 + 26*n1^3 - 8*d*n1^3 - 452*n2 + 140*d*n2 + 64*d^2*n2 - 
      20*d^3*n2 + 844*n1*n2 - 644*d*n1*n2 + 120*d^2*n1*n2 + 180*n1^2*n2 - 
      60*d*n1^2*n2 + 4*n1^3*n2 - 152*n2^2 + 28*d*n2^2 + 8*d^2*n2^2 + 
      204*n1*n2^2 - 76*d*n1*n2^2 + 20*n1^2*n2^2 - 16*n2^3 + 16*n1*n2^3 - 
      60*n3 - 2*d*n3 + 28*d^2*n3 - 7*d^3*n3 + 193*n1*n3 - 171*d*n1*n3 + 
      37*d^2*n1*n3 + 68*n1^2*n3 - 28*d*n1^2*n3 + 6*n1^3*n3 - 26*n2*n3 - 
      46*d*n2*n3 + 20*d^2*n2*n3 + 190*n1*n2*n3 - 78*d*n1*n2*n3 + 
      28*n1^2*n2*n3 - 4*n2^2*n3 - 8*d*n2^2*n3 + 28*n1*n2^2*n3 - 8*n3^2 + 
      15*d*n3^2 - 4*d^2*n3^2 - 28*n1*n3^2 + 10*d*n1*n3^2 - 3*n1^2*n3^2 - 
      2*n2*n3^2 + 2*n1*n2*n3^2 + d*n3^3 - 3*n1*n3^3)*
     j[p4a, n1, 1 + n2, n3, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1])/
    ((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 
      4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
      723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
      9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
      510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
      2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
      84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
      137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 
      10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 
      702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 
      26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 
      40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 
      48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + (n2*(996 - 1058*d + 374*d^2 - 44*d^3 + 370*n1 - 261*d*n1 + 
      46*d^2*n1 + 45*n1^2 - 16*d*n1^2 + 2*n1^3 + 860*n2 - 604*d*n2 + 
      106*d^2*n2 + 216*n1*n2 - 76*d*n1*n2 + 14*n1^2*n2 + 216*n2^2 - 
      76*d*n2^2 + 28*n1*n2^2 + 16*n2^3 + 132*n3 - 98*d*n3 + 18*d^2*n3 + 
      31*n1*n3 - 11*d*n1*n3 + n1^2*n3 + 126*n2*n3 - 44*d*n2*n3 + 
      14*n1*n2*n3 + 20*n2^2*n3 - 14*n3^2 + 4*d*n3^2 - n1*n3^2 + 2*n2*n3^2 - 
      2*n3^3)*j[p4a, n1, 1 + n2, n3, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) - (n2*(996 - 1058*d + 374*d^2 - 44*d^3 + 370*n1 - 261*d*n1 + 
      46*d^2*n1 + 45*n1^2 - 16*d*n1^2 + 2*n1^3 + 860*n2 - 604*d*n2 + 
      106*d^2*n2 + 216*n1*n2 - 76*d*n1*n2 + 14*n1^2*n2 + 216*n2^2 - 
      76*d*n2^2 + 28*n1*n2^2 + 16*n2^3 + 132*n3 - 98*d*n3 + 18*d^2*n3 + 
      31*n1*n3 - 11*d*n1*n3 + n1^2*n3 + 126*n2*n3 - 44*d*n2*n3 + 
      14*n1*n2*n3 + 20*n2^2*n3 - 14*n3^2 + 4*d*n3^2 - n1*n3^2 + 2*n2*n3^2 - 
      2*n3^3)*j[p4a, n1, 1 + n2, n3, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) + (n2*(-460 + 246*d + 80*d^2 - 67*d^3 + 10*d^4 + 982*n1 - 
      1157*d*n1 + 445*d^2*n1 - 56*d^3*n1 + 343*n1^2 - 242*d*n1^2 + 
      42*d^2*n1^2 + 26*n1^3 - 8*d*n1^3 - 452*n2 + 140*d*n2 + 64*d^2*n2 - 
      20*d^3*n2 + 844*n1*n2 - 644*d*n1*n2 + 120*d^2*n1*n2 + 180*n1^2*n2 - 
      60*d*n1^2*n2 + 4*n1^3*n2 - 152*n2^2 + 28*d*n2^2 + 8*d^2*n2^2 + 
      204*n1*n2^2 - 76*d*n1*n2^2 + 20*n1^2*n2^2 - 16*n2^3 + 16*n1*n2^3 - 
      60*n3 - 2*d*n3 + 28*d^2*n3 - 7*d^3*n3 + 193*n1*n3 - 171*d*n1*n3 + 
      37*d^2*n1*n3 + 68*n1^2*n3 - 28*d*n1^2*n3 + 6*n1^3*n3 - 26*n2*n3 - 
      46*d*n2*n3 + 20*d^2*n2*n3 + 190*n1*n2*n3 - 78*d*n1*n2*n3 + 
      28*n1^2*n2*n3 - 4*n2^2*n3 - 8*d*n2^2*n3 + 28*n1*n2^2*n3 - 8*n3^2 + 
      15*d*n3^2 - 4*d^2*n3^2 - 28*n1*n3^2 + 10*d*n1*n3^2 - 3*n1^2*n3^2 - 
      2*n2*n3^2 + 2*n1*n2*n3^2 + d*n3^3 - 3*n1*n3^3)*
     j[p4a, n1, 1 + n2, 1 + n3, 0, 0, 1, 1, 1, 0, 1, 0, -1, 0, 1])/
    ((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 
      4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
      723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
      9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
      510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
      2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
      84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
      137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 
      10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 
      702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 
      26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 
      40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 
      48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) - (2*n2*(-460 + 246*d + 80*d^2 - 67*d^3 + 10*d^4 + 982*n1 - 
      1157*d*n1 + 445*d^2*n1 - 56*d^3*n1 + 343*n1^2 - 242*d*n1^2 + 
      42*d^2*n1^2 + 26*n1^3 - 8*d*n1^3 - 452*n2 + 140*d*n2 + 64*d^2*n2 - 
      20*d^3*n2 + 844*n1*n2 - 644*d*n1*n2 + 120*d^2*n1*n2 + 180*n1^2*n2 - 
      60*d*n1^2*n2 + 4*n1^3*n2 - 152*n2^2 + 28*d*n2^2 + 8*d^2*n2^2 + 
      204*n1*n2^2 - 76*d*n1*n2^2 + 20*n1^2*n2^2 - 16*n2^3 + 16*n1*n2^3 - 
      60*n3 - 2*d*n3 + 28*d^2*n3 - 7*d^3*n3 + 193*n1*n3 - 171*d*n1*n3 + 
      37*d^2*n1*n3 + 68*n1^2*n3 - 28*d*n1^2*n3 + 6*n1^3*n3 - 26*n2*n3 - 
      46*d*n2*n3 + 20*d^2*n2*n3 + 190*n1*n2*n3 - 78*d*n1*n2*n3 + 
      28*n1^2*n2*n3 - 4*n2^2*n3 - 8*d*n2^2*n3 + 28*n1*n2^2*n3 - 8*n3^2 + 
      15*d*n3^2 - 4*d^2*n3^2 - 28*n1*n3^2 + 10*d*n1*n3^2 - 3*n1^2*n3^2 - 
      2*n2*n3^2 + 2*n1*n2*n3^2 + d*n3^3 - 3*n1*n3^3)*
     j[p4a, n1, 1 + n2, 1 + n3, 0, 0, 1, 1, 1, 0, 1, 0, 0, -1, 1])/
    ((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 
      4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
      723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
      9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
      510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
      2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
      84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
      137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 
      10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 
      702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 
      26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 
      40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 
      48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) - (n2*(-460 + 246*d + 80*d^2 - 67*d^3 + 10*d^4 + 982*n1 - 
      1157*d*n1 + 445*d^2*n1 - 56*d^3*n1 + 343*n1^2 - 242*d*n1^2 + 
      42*d^2*n1^2 + 26*n1^3 - 8*d*n1^3 - 452*n2 + 140*d*n2 + 64*d^2*n2 - 
      20*d^3*n2 + 844*n1*n2 - 644*d*n1*n2 + 120*d^2*n1*n2 + 180*n1^2*n2 - 
      60*d*n1^2*n2 + 4*n1^3*n2 - 152*n2^2 + 28*d*n2^2 + 8*d^2*n2^2 + 
      204*n1*n2^2 - 76*d*n1*n2^2 + 20*n1^2*n2^2 - 16*n2^3 + 16*n1*n2^3 - 
      60*n3 - 2*d*n3 + 28*d^2*n3 - 7*d^3*n3 + 193*n1*n3 - 171*d*n1*n3 + 
      37*d^2*n1*n3 + 68*n1^2*n3 - 28*d*n1^2*n3 + 6*n1^3*n3 - 26*n2*n3 - 
      46*d*n2*n3 + 20*d^2*n2*n3 + 190*n1*n2*n3 - 78*d*n1*n2*n3 + 
      28*n1^2*n2*n3 - 4*n2^2*n3 - 8*d*n2^2*n3 + 28*n1*n2^2*n3 - 8*n3^2 + 
      15*d*n3^2 - 4*d^2*n3^2 - 28*n1*n3^2 + 10*d*n1*n3^2 - 3*n1^2*n3^2 - 
      2*n2*n3^2 + 2*n1*n2*n3^2 + d*n3^3 - 3*n1*n3^3)*
     j[p4a, n1, 1 + n2, 1 + n3, 0, 1, 0, 1, 1, 0, 1, 0, -1, 0, 1])/
    ((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 
      4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
      723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
      9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
      510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
      2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
      84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
      137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 
      10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 
      702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 
      26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 
      40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 
      48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + (2*n2*(-460 + 246*d + 80*d^2 - 67*d^3 + 10*d^4 + 982*n1 - 
      1157*d*n1 + 445*d^2*n1 - 56*d^3*n1 + 343*n1^2 - 242*d*n1^2 + 
      42*d^2*n1^2 + 26*n1^3 - 8*d*n1^3 - 452*n2 + 140*d*n2 + 64*d^2*n2 - 
      20*d^3*n2 + 844*n1*n2 - 644*d*n1*n2 + 120*d^2*n1*n2 + 180*n1^2*n2 - 
      60*d*n1^2*n2 + 4*n1^3*n2 - 152*n2^2 + 28*d*n2^2 + 8*d^2*n2^2 + 
      204*n1*n2^2 - 76*d*n1*n2^2 + 20*n1^2*n2^2 - 16*n2^3 + 16*n1*n2^3 - 
      60*n3 - 2*d*n3 + 28*d^2*n3 - 7*d^3*n3 + 193*n1*n3 - 171*d*n1*n3 + 
      37*d^2*n1*n3 + 68*n1^2*n3 - 28*d*n1^2*n3 + 6*n1^3*n3 - 26*n2*n3 - 
      46*d*n2*n3 + 20*d^2*n2*n3 + 190*n1*n2*n3 - 78*d*n1*n2*n3 + 
      28*n1^2*n2*n3 - 4*n2^2*n3 - 8*d*n2^2*n3 + 28*n1*n2^2*n3 - 8*n3^2 + 
      15*d*n3^2 - 4*d^2*n3^2 - 28*n1*n3^2 + 10*d*n1*n3^2 - 3*n1^2*n3^2 - 
      2*n2*n3^2 + 2*n1*n2*n3^2 + d*n3^3 - 3*n1*n3^3)*
     j[p4a, n1, 1 + n2, 1 + n3, 0, 1, 0, 1, 1, 0, 1, 0, 0, -1, 1])/
    ((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 
      4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
      723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
      9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
      510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
      2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
      84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
      137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 
      10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 
      702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 
      26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 
      40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 
      48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + (n2*(996 - 1058*d + 374*d^2 - 44*d^3 + 370*n1 - 261*d*n1 + 
      46*d^2*n1 + 45*n1^2 - 16*d*n1^2 + 2*n1^3 + 860*n2 - 604*d*n2 + 
      106*d^2*n2 + 216*n1*n2 - 76*d*n1*n2 + 14*n1^2*n2 + 216*n2^2 - 
      76*d*n2^2 + 28*n1*n2^2 + 16*n2^3 + 132*n3 - 98*d*n3 + 18*d^2*n3 + 
      31*n1*n3 - 11*d*n1*n3 + n1^2*n3 + 126*n2*n3 - 44*d*n2*n3 + 
      14*n1*n2*n3 + 20*n2^2*n3 - 14*n3^2 + 4*d*n3^2 - n1*n3^2 + 2*n2*n3^2 - 
      2*n3^3)*j[p4a, n1, 1 + n2, 1 + n3, 0, 1, 1, 0, 1, 0, 1, 0, -1, 0, 1])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) - (2*n2*(996 - 1058*d + 374*d^2 - 44*d^3 + 370*n1 - 261*d*n1 + 
      46*d^2*n1 + 45*n1^2 - 16*d*n1^2 + 2*n1^3 + 860*n2 - 604*d*n2 + 
      106*d^2*n2 + 216*n1*n2 - 76*d*n1*n2 + 14*n1^2*n2 + 216*n2^2 - 
      76*d*n2^2 + 28*n1*n2^2 + 16*n2^3 + 132*n3 - 98*d*n3 + 18*d^2*n3 + 
      31*n1*n3 - 11*d*n1*n3 + n1^2*n3 + 126*n2*n3 - 44*d*n2*n3 + 
      14*n1*n2*n3 + 20*n2^2*n3 - 14*n3^2 + 4*d*n3^2 - n1*n3^2 + 2*n2*n3^2 - 
      2*n3^3)*j[p4a, n1, 1 + n2, 1 + n3, 0, 1, 1, 0, 1, 0, 1, 0, 0, -1, 1])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) - (n2*(996 - 1058*d + 374*d^2 - 44*d^3 + 370*n1 - 261*d*n1 + 
      46*d^2*n1 + 45*n1^2 - 16*d*n1^2 + 2*n1^3 + 860*n2 - 604*d*n2 + 
      106*d^2*n2 + 216*n1*n2 - 76*d*n1*n2 + 14*n1^2*n2 + 216*n2^2 - 
      76*d*n2^2 + 28*n1*n2^2 + 16*n2^3 + 132*n3 - 98*d*n3 + 18*d^2*n3 + 
      31*n1*n3 - 11*d*n1*n3 + n1^2*n3 + 126*n2*n3 - 44*d*n2*n3 + 
      14*n1*n2*n3 + 20*n2^2*n3 - 14*n3^2 + 4*d*n3^2 - n1*n3^2 + 2*n2*n3^2 - 
      2*n3^3)*j[p4a, n1, 1 + n2, 1 + n3, 0, 1, 1, 1, 0, 0, 1, 0, -1, 0, 1])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) + (2*n2*(996 - 1058*d + 374*d^2 - 44*d^3 + 370*n1 - 261*d*n1 + 
      46*d^2*n1 + 45*n1^2 - 16*d*n1^2 + 2*n1^3 + 860*n2 - 604*d*n2 + 
      106*d^2*n2 + 216*n1*n2 - 76*d*n1*n2 + 14*n1^2*n2 + 216*n2^2 - 
      76*d*n2^2 + 28*n1*n2^2 + 16*n2^3 + 132*n3 - 98*d*n3 + 18*d^2*n3 + 
      31*n1*n3 - 11*d*n1*n3 + n1^2*n3 + 126*n2*n3 - 44*d*n2*n3 + 
      14*n1*n2*n3 + 20*n2^2*n3 - 14*n3^2 + 4*d*n3^2 - n1*n3^2 + 2*n2*n3^2 - 
      2*n3^3)*j[p4a, n1, 1 + n2, 1 + n3, 0, 1, 1, 1, 0, 0, 1, 0, 0, -1, 1])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) - (n1*(14 - 5*d + n1 + 4*n2 + n3)*(-316 + 372*d - 143*d^2 + 
      18*d^3 - 222*n1 + 159*d*n1 - 28*d^2*n1 - 32*n1^2 + 10*d*n1^2 - 108*n2 + 
      90*d*n2 - 18*d^2*n2 - 62*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 8*n2^2 + 
      4*d*n2^2 - 4*n1*n2^2 - 206*n3 + 155*d*n3 - 29*d^2*n3 - 84*n1*n3 + 
      31*d*n1*n3 - 8*n1^2*n3 - 62*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 
      4*n2^2*n3 - 36*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3)*
     j[p4a, 1 + n1, -2 + n2, 1 + n3, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1])/
    ((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 
      4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
      723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
      9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
      510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
      2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
      84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
      137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 
      10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 
      702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 
      26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 
      40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 
      48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) - (n1*(-5744 + 8260*d - 4440*d^2 + 1057*d^3 - 94*d^4 - 
      3884*n1 + 4080*d*n1 - 1421*d^2*n1 + 164*d^3*n1 - 736*n1^2 + 
      494*d*n1^2 - 82*d^2*n1^2 - 40*n1^3 + 12*d*n1^3 - 7104*n2 + 7568*d*n2 - 
      2676*d^2*n2 + 314*d^3*n2 - 3360*n1*n2 + 2308*d*n1*n2 - 394*d^2*n1*n2 - 
      380*n1^2*n2 + 124*d*n1^2*n2 - 8*n1^3*n2 - 3008*n2^2 + 2108*d*n2^2 - 
      368*d^2*n2^2 - 868*n1*n2^2 + 296*d*n1*n2^2 - 48*n1^2*n2^2 - 528*n2^3 + 
      184*d*n2^3 - 72*n1*n2^3 - 32*n2^4 - 3296*n3 + 3616*d*n3 - 1322*d^2*n3 + 
      161*d^3*n3 - 1618*n1*n3 + 1187*d*n1*n3 - 217*d^2*n1*n3 - 254*n1^2*n3 + 
      92*d*n1^2*n3 - 12*n1^3*n3 - 3416*n2*n3 + 2472*d*n2*n3 - 446*d^2*n2*n3 - 
      1122*n1*n2*n3 + 398*d*n1*n2*n3 - 76*n1^2*n2*n3 - 1000*n2^2*n3 + 
      356*d*n2^2*n3 - 152*n1*n2^2*n3 - 88*n2^3*n3 - 154*n3^2 + 127*d*n3^2 - 
      26*d^2*n3^2 - 38*n1*n3^2 + 19*d*n1*n3^2 - 6*n1^2*n3^2 - 306*n2*n3^2 + 
      114*d*n2*n3^2 - 54*n1*n2*n3^2 - 60*n2^2*n3^2 + 68*n3^3 - 23*d*n3^3 + 
      12*n1*n3^3 + 2*n2*n3^3 + 6*n3^4)*j[p4a, 1 + n1, -1 + n2, 1 + n3, -1, 1, 
      1, 1, 1, 0, 1, 0, 0, 0, 1])/((2 - d + n1 + 2*n2)*
     (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
      1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
      106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
      388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
      222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
      1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
      88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
      38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
      2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
      116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
      64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
      138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) - (n1*(-5744 + 8260*d - 4440*d^2 + 1057*d^3 - 94*d^4 - 
      3884*n1 + 4080*d*n1 - 1421*d^2*n1 + 164*d^3*n1 - 736*n1^2 + 
      494*d*n1^2 - 82*d^2*n1^2 - 40*n1^3 + 12*d*n1^3 - 7104*n2 + 7568*d*n2 - 
      2676*d^2*n2 + 314*d^3*n2 - 3360*n1*n2 + 2308*d*n1*n2 - 394*d^2*n1*n2 - 
      380*n1^2*n2 + 124*d*n1^2*n2 - 8*n1^3*n2 - 3008*n2^2 + 2108*d*n2^2 - 
      368*d^2*n2^2 - 868*n1*n2^2 + 296*d*n1*n2^2 - 48*n1^2*n2^2 - 528*n2^3 + 
      184*d*n2^3 - 72*n1*n2^3 - 32*n2^4 - 3296*n3 + 3616*d*n3 - 1322*d^2*n3 + 
      161*d^3*n3 - 1618*n1*n3 + 1187*d*n1*n3 - 217*d^2*n1*n3 - 254*n1^2*n3 + 
      92*d*n1^2*n3 - 12*n1^3*n3 - 3416*n2*n3 + 2472*d*n2*n3 - 446*d^2*n2*n3 - 
      1122*n1*n2*n3 + 398*d*n1*n2*n3 - 76*n1^2*n2*n3 - 1000*n2^2*n3 + 
      356*d*n2^2*n3 - 152*n1*n2^2*n3 - 88*n2^3*n3 - 154*n3^2 + 127*d*n3^2 - 
      26*d^2*n3^2 - 38*n1*n3^2 + 19*d*n1*n3^2 - 6*n1^2*n3^2 - 306*n2*n3^2 + 
      114*d*n2*n3^2 - 54*n1*n2*n3^2 - 60*n2^2*n3^2 + 68*n3^3 - 23*d*n3^3 + 
      12*n1*n3^3 + 2*n2*n3^3 + 6*n3^4)*j[p4a, 1 + n1, -1 + n2, 1 + n3, 0, 0, 
      1, 1, 1, 0, 1, 0, 0, 0, 1])/((2 - d + n1 + 2*n2)*
     (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
      1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
      106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
      388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
      222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
      1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
      88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
      38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
      2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
      116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
      64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
      138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + (n1*(-5744 + 8260*d - 4440*d^2 + 1057*d^3 - 94*d^4 - 
      3884*n1 + 4080*d*n1 - 1421*d^2*n1 + 164*d^3*n1 - 736*n1^2 + 
      494*d*n1^2 - 82*d^2*n1^2 - 40*n1^3 + 12*d*n1^3 - 7104*n2 + 7568*d*n2 - 
      2676*d^2*n2 + 314*d^3*n2 - 3360*n1*n2 + 2308*d*n1*n2 - 394*d^2*n1*n2 - 
      380*n1^2*n2 + 124*d*n1^2*n2 - 8*n1^3*n2 - 3008*n2^2 + 2108*d*n2^2 - 
      368*d^2*n2^2 - 868*n1*n2^2 + 296*d*n1*n2^2 - 48*n1^2*n2^2 - 528*n2^3 + 
      184*d*n2^3 - 72*n1*n2^3 - 32*n2^4 - 3296*n3 + 3616*d*n3 - 1322*d^2*n3 + 
      161*d^3*n3 - 1618*n1*n3 + 1187*d*n1*n3 - 217*d^2*n1*n3 - 254*n1^2*n3 + 
      92*d*n1^2*n3 - 12*n1^3*n3 - 3416*n2*n3 + 2472*d*n2*n3 - 446*d^2*n2*n3 - 
      1122*n1*n2*n3 + 398*d*n1*n2*n3 - 76*n1^2*n2*n3 - 1000*n2^2*n3 + 
      356*d*n2^2*n3 - 152*n1*n2^2*n3 - 88*n2^3*n3 - 154*n3^2 + 127*d*n3^2 - 
      26*d^2*n3^2 - 38*n1*n3^2 + 19*d*n1*n3^2 - 6*n1^2*n3^2 - 306*n2*n3^2 + 
      114*d*n2*n3^2 - 54*n1*n2*n3^2 - 60*n2^2*n3^2 + 68*n3^3 - 23*d*n3^3 + 
      12*n1*n3^3 + 2*n2*n3^3 + 6*n3^4)*j[p4a, 1 + n1, -1 + n2, 1 + n3, 0, 1, 
      1, 1, 0, 0, 1, 0, 0, 0, 1])/((2 - d + n1 + 2*n2)*
     (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
      1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
      106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
      388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
      222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
      1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
      88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
      38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
      2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
      116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
      64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
      138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + (n1*(-5744 + 8260*d - 4440*d^2 + 1057*d^3 - 94*d^4 - 
      3884*n1 + 4080*d*n1 - 1421*d^2*n1 + 164*d^3*n1 - 736*n1^2 + 
      494*d*n1^2 - 82*d^2*n1^2 - 40*n1^3 + 12*d*n1^3 - 7104*n2 + 7568*d*n2 - 
      2676*d^2*n2 + 314*d^3*n2 - 3360*n1*n2 + 2308*d*n1*n2 - 394*d^2*n1*n2 - 
      380*n1^2*n2 + 124*d*n1^2*n2 - 8*n1^3*n2 - 3008*n2^2 + 2108*d*n2^2 - 
      368*d^2*n2^2 - 868*n1*n2^2 + 296*d*n1*n2^2 - 48*n1^2*n2^2 - 528*n2^3 + 
      184*d*n2^3 - 72*n1*n2^3 - 32*n2^4 - 3296*n3 + 3616*d*n3 - 1322*d^2*n3 + 
      161*d^3*n3 - 1618*n1*n3 + 1187*d*n1*n3 - 217*d^2*n1*n3 - 254*n1^2*n3 + 
      92*d*n1^2*n3 - 12*n1^3*n3 - 3416*n2*n3 + 2472*d*n2*n3 - 446*d^2*n2*n3 - 
      1122*n1*n2*n3 + 398*d*n1*n2*n3 - 76*n1^2*n2*n3 - 1000*n2^2*n3 + 
      356*d*n2^2*n3 - 152*n1*n2^2*n3 - 88*n2^3*n3 - 154*n3^2 + 127*d*n3^2 - 
      26*d^2*n3^2 - 38*n1*n3^2 + 19*d*n1*n3^2 - 6*n1^2*n3^2 - 306*n2*n3^2 + 
      114*d*n2*n3^2 - 54*n1*n2*n3^2 - 60*n2^2*n3^2 + 68*n3^3 - 23*d*n3^3 + 
      12*n1*n3^3 + 2*n2*n3^3 + 6*n3^4)*j[p4a, 1 + n1, -1 + n2, 1 + n3, 0, 1, 
      1, 1, 1, -1, 1, 0, 0, 0, 1])/((2 - d + n1 + 2*n2)*
     (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
      1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
      106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
      388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
      222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
      1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
      88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
      38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
      2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
      116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
      64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
      138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + (n1*(14 - 5*d + n1 + 4*n2 + n3)*(-316 + 372*d - 143*d^2 + 
      18*d^3 - 222*n1 + 159*d*n1 - 28*d^2*n1 - 32*n1^2 + 10*d*n1^2 - 108*n2 + 
      90*d*n2 - 18*d^2*n2 - 62*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 8*n2^2 + 
      4*d*n2^2 - 4*n1*n2^2 - 206*n3 + 155*d*n3 - 29*d^2*n3 - 84*n1*n3 + 
      31*d*n1*n3 - 8*n1^2*n3 - 62*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 
      4*n2^2*n3 - 36*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3)*
     j[p4a, 1 + n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1])/
    ((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 
      4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
      723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
      9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
      510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
      2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
      84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
      137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 
      10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 
      702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 
      26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 
      40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 
      48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) - (n1*(-5744 + 8260*d - 4440*d^2 + 1057*d^3 - 94*d^4 - 
      3884*n1 + 4080*d*n1 - 1421*d^2*n1 + 164*d^3*n1 - 736*n1^2 + 
      494*d*n1^2 - 82*d^2*n1^2 - 40*n1^3 + 12*d*n1^3 - 7104*n2 + 7568*d*n2 - 
      2676*d^2*n2 + 314*d^3*n2 - 3360*n1*n2 + 2308*d*n1*n2 - 394*d^2*n1*n2 - 
      380*n1^2*n2 + 124*d*n1^2*n2 - 8*n1^3*n2 - 3008*n2^2 + 2108*d*n2^2 - 
      368*d^2*n2^2 - 868*n1*n2^2 + 296*d*n1*n2^2 - 48*n1^2*n2^2 - 528*n2^3 + 
      184*d*n2^3 - 72*n1*n2^3 - 32*n2^4 - 3296*n3 + 3616*d*n3 - 1322*d^2*n3 + 
      161*d^3*n3 - 1618*n1*n3 + 1187*d*n1*n3 - 217*d^2*n1*n3 - 254*n1^2*n3 + 
      92*d*n1^2*n3 - 12*n1^3*n3 - 3416*n2*n3 + 2472*d*n2*n3 - 446*d^2*n2*n3 - 
      1122*n1*n2*n3 + 398*d*n1*n2*n3 - 76*n1^2*n2*n3 - 1000*n2^2*n3 + 
      356*d*n2^2*n3 - 152*n1*n2^2*n3 - 88*n2^3*n3 - 154*n3^2 + 127*d*n3^2 - 
      26*d^2*n3^2 - 38*n1*n3^2 + 19*d*n1*n3^2 - 6*n1^2*n3^2 - 306*n2*n3^2 + 
      114*d*n2*n3^2 - 54*n1*n2*n3^2 - 60*n2^2*n3^2 + 68*n3^3 - 23*d*n3^3 + 
      12*n1*n3^3 + 2*n2*n3^3 + 6*n3^4)*j[p4a, 1 + n1, -1 + n2, 1 + n3, 0, 1, 
      1, 1, 1, 0, 1, -1, 0, 0, 1])/((2 - d + n1 + 2*n2)*
     (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
      1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
      106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
      388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
      222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
      1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
      88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
      38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
      2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
      116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
      64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
      138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) - (2*n1*(-316 + 372*d - 143*d^2 + 18*d^3 - 222*n1 + 159*d*n1 - 
      28*d^2*n1 - 32*n1^2 + 10*d*n1^2 - 108*n2 + 90*d*n2 - 18*d^2*n2 - 
      62*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 8*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 
      206*n3 + 155*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 
      62*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 36*n3^2 + 13*d*n3^2 - 
      6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3)*j[p4a, 1 + n1, -1 + n2, 1 + n3, 0, 1, 
      1, 1, 1, 0, 1, 0, 0, -1, 1])/(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 
     114*d^4 + 4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
     723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
     9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
     510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
     2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
     84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
     137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 
     14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 
     126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 
     392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 
     304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 
     92*n2*n3^2 + 32*d*n2*n3^2 - 12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 
     10*n1*n3^3 - 10*n2*n3^3 - 2*n3^4) + 
   (2*n1*(-316 + 372*d - 143*d^2 + 18*d^3 - 222*n1 + 159*d*n1 - 28*d^2*n1 - 
      32*n1^2 + 10*d*n1^2 - 108*n2 + 90*d*n2 - 18*d^2*n2 - 62*n1*n2 + 
      22*d*n1*n2 - 4*n1^2*n2 - 8*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 206*n3 + 
      155*d*n3 - 29*d^2*n3 - 84*n1*n3 + 31*d*n1*n3 - 8*n1^2*n3 - 62*n2*n3 + 
      24*d*n2*n3 - 14*n1*n2*n3 - 4*n2^2*n3 - 36*n3^2 + 13*d*n3^2 - 
      6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3)*j[p4a, 1 + n1, -1 + n2, 1 + n3, 0, 1, 
      1, 1, 1, 0, 1, 0, 0, 0, 1])/(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 
     114*d^4 + 4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
     723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
     9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
     510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
     2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
     84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
     137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 
     14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 
     126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 
     392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 
     304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 
     92*n2*n3^2 + 32*d*n2*n3^2 - 12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 
     10*n1*n3^3 - 10*n2*n3^3 - 2*n3^4) + 
   (n1*(-5744 + 8260*d - 4440*d^2 + 1057*d^3 - 94*d^4 - 3884*n1 + 4080*d*n1 - 
      1421*d^2*n1 + 164*d^3*n1 - 736*n1^2 + 494*d*n1^2 - 82*d^2*n1^2 - 
      40*n1^3 + 12*d*n1^3 - 7104*n2 + 7568*d*n2 - 2676*d^2*n2 + 314*d^3*n2 - 
      3360*n1*n2 + 2308*d*n1*n2 - 394*d^2*n1*n2 - 380*n1^2*n2 + 
      124*d*n1^2*n2 - 8*n1^3*n2 - 3008*n2^2 + 2108*d*n2^2 - 368*d^2*n2^2 - 
      868*n1*n2^2 + 296*d*n1*n2^2 - 48*n1^2*n2^2 - 528*n2^3 + 184*d*n2^3 - 
      72*n1*n2^3 - 32*n2^4 - 3296*n3 + 3616*d*n3 - 1322*d^2*n3 + 161*d^3*n3 - 
      1618*n1*n3 + 1187*d*n1*n3 - 217*d^2*n1*n3 - 254*n1^2*n3 + 
      92*d*n1^2*n3 - 12*n1^3*n3 - 3416*n2*n3 + 2472*d*n2*n3 - 446*d^2*n2*n3 - 
      1122*n1*n2*n3 + 398*d*n1*n2*n3 - 76*n1^2*n2*n3 - 1000*n2^2*n3 + 
      356*d*n2^2*n3 - 152*n1*n2^2*n3 - 88*n2^3*n3 - 154*n3^2 + 127*d*n3^2 - 
      26*d^2*n3^2 - 38*n1*n3^2 + 19*d*n1*n3^2 - 6*n1^2*n3^2 - 306*n2*n3^2 + 
      114*d*n2*n3^2 - 54*n1*n2*n3^2 - 60*n2^2*n3^2 + 68*n3^3 - 23*d*n3^3 + 
      12*n1*n3^3 + 2*n2*n3^3 + 6*n3^4)*j[p4a, 1 + n1, n2, 1 + n3, -1, 1, 1, 
      1, 1, 0, 0, 0, 0, 0, 1])/((2 - d + n1 + 2*n2)*
     (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
      1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
      106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
      388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
      222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
      1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
      88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
      38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
      2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
      116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
      64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
      138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + (n1*(460 - 246*d - 80*d^2 + 67*d^3 - 10*d^4 - 982*n1 + 
      1157*d*n1 - 445*d^2*n1 + 56*d^3*n1 - 343*n1^2 + 242*d*n1^2 - 
      42*d^2*n1^2 - 26*n1^3 + 8*d*n1^3 + 452*n2 - 140*d*n2 - 64*d^2*n2 + 
      20*d^3*n2 - 844*n1*n2 + 644*d*n1*n2 - 120*d^2*n1*n2 - 180*n1^2*n2 + 
      60*d*n1^2*n2 - 4*n1^3*n2 + 152*n2^2 - 28*d*n2^2 - 8*d^2*n2^2 - 
      204*n1*n2^2 + 76*d*n1*n2^2 - 20*n1^2*n2^2 + 16*n2^3 - 16*n1*n2^3 + 
      60*n3 + 2*d*n3 - 28*d^2*n3 + 7*d^3*n3 - 193*n1*n3 + 171*d*n1*n3 - 
      37*d^2*n1*n3 - 68*n1^2*n3 + 28*d*n1^2*n3 - 6*n1^3*n3 + 26*n2*n3 + 
      46*d*n2*n3 - 20*d^2*n2*n3 - 190*n1*n2*n3 + 78*d*n1*n2*n3 - 
      28*n1^2*n2*n3 + 4*n2^2*n3 + 8*d*n2^2*n3 - 28*n1*n2^2*n3 + 8*n3^2 - 
      15*d*n3^2 + 4*d^2*n3^2 + 28*n1*n3^2 - 10*d*n1*n3^2 + 3*n1^2*n3^2 + 
      2*n2*n3^2 - 2*n1*n2*n3^2 - d*n3^3 + 3*n1*n3^3)*
     j[p4a, 1 + n1, n2, 1 + n3, 0, 0, 1, 1, 1, 0, 1, 0, 0, -1, 1])/
    ((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 
      4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
      723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
      9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
      510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
      2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
      84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
      137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 
      10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 
      702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 
      26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 
      40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 
      48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) - (n1*(460 - 246*d - 80*d^2 + 67*d^3 - 10*d^4 - 982*n1 + 
      1157*d*n1 - 445*d^2*n1 + 56*d^3*n1 - 343*n1^2 + 242*d*n1^2 - 
      42*d^2*n1^2 - 26*n1^3 + 8*d*n1^3 + 452*n2 - 140*d*n2 - 64*d^2*n2 + 
      20*d^3*n2 - 844*n1*n2 + 644*d*n1*n2 - 120*d^2*n1*n2 - 180*n1^2*n2 + 
      60*d*n1^2*n2 - 4*n1^3*n2 + 152*n2^2 - 28*d*n2^2 - 8*d^2*n2^2 - 
      204*n1*n2^2 + 76*d*n1*n2^2 - 20*n1^2*n2^2 + 16*n2^3 - 16*n1*n2^3 + 
      60*n3 + 2*d*n3 - 28*d^2*n3 + 7*d^3*n3 - 193*n1*n3 + 171*d*n1*n3 - 
      37*d^2*n1*n3 - 68*n1^2*n3 + 28*d*n1^2*n3 - 6*n1^3*n3 + 26*n2*n3 + 
      46*d*n2*n3 - 20*d^2*n2*n3 - 190*n1*n2*n3 + 78*d*n1*n2*n3 - 
      28*n1^2*n2*n3 + 4*n2^2*n3 + 8*d*n2^2*n3 - 28*n1*n2^2*n3 + 8*n3^2 - 
      15*d*n3^2 + 4*d^2*n3^2 + 28*n1*n3^2 - 10*d*n1*n3^2 + 3*n1^2*n3^2 + 
      2*n2*n3^2 - 2*n1*n2*n3^2 - d*n3^3 + 3*n1*n3^3)*
     j[p4a, 1 + n1, n2, 1 + n3, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1])/
    ((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 
      4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
      723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
      9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
      510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
      2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
      84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
      137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 
      10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 
      702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 
      26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 
      40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 
      48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) + (n1*(996 - 1058*d + 374*d^2 - 44*d^3 + 370*n1 - 261*d*n1 + 
      46*d^2*n1 + 45*n1^2 - 16*d*n1^2 + 2*n1^3 + 860*n2 - 604*d*n2 + 
      106*d^2*n2 + 216*n1*n2 - 76*d*n1*n2 + 14*n1^2*n2 + 216*n2^2 - 
      76*d*n2^2 + 28*n1*n2^2 + 16*n2^3 + 132*n3 - 98*d*n3 + 18*d^2*n3 + 
      31*n1*n3 - 11*d*n1*n3 + n1^2*n3 + 126*n2*n3 - 44*d*n2*n3 + 
      14*n1*n2*n3 + 20*n2^2*n3 - 14*n3^2 + 4*d*n3^2 - n1*n3^2 + 2*n2*n3^2 - 
      2*n3^3)*j[p4a, 1 + n1, n2, 1 + n3, 0, 1, 1, 1, 0, 0, 1, 0, 0, -1, 1])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) - (n1*(996 - 1058*d + 374*d^2 - 44*d^3 + 370*n1 - 261*d*n1 + 
      46*d^2*n1 + 45*n1^2 - 16*d*n1^2 + 2*n1^3 + 860*n2 - 604*d*n2 + 
      106*d^2*n2 + 216*n1*n2 - 76*d*n1*n2 + 14*n1^2*n2 + 216*n2^2 - 
      76*d*n2^2 + 28*n1*n2^2 + 16*n2^3 + 132*n3 - 98*d*n3 + 18*d^2*n3 + 
      31*n1*n3 - 11*d*n1*n3 + n1^2*n3 + 126*n2*n3 - 44*d*n2*n3 + 
      14*n1*n2*n3 + 20*n2^2*n3 - 14*n3^2 + 4*d*n3^2 - n1*n3^2 + 2*n2*n3^2 - 
      2*n3^3)*j[p4a, 1 + n1, n2, 1 + n3, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1])/
    (7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 4286*n1 - 4615*d*n1 + 
     1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 723*d*n1^2 + 130*d^2*n1^2 + 
     106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 9150*d*n2 + 3264*d^2*n2 - 
     388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 510*d^2*n1*n2 + 622*n1^2*n2 - 
     222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 2444*d*n2^2 + 436*d^2*n2^2 + 
     1076*n1*n2^2 - 384*d*n1*n2^2 + 84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 
     88*n1*n2^3 + 32*n2^4 + 122*n3 - 137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 
     38*n1*n3 - 41*d*n1*n3 + 10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 
     2*n1^3*n3 + 978*n2*n3 - 702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 
     116*d*n1*n2*n3 + 26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 
     64*n1*n2^2*n3 + 40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 
     138*n1*n3^2 + 48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
     12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
     2*n3^4) + (n1*(8 - 3*d + n1 + 4*n2 - n3)*(-316 + 372*d - 143*d^2 + 
      18*d^3 - 222*n1 + 159*d*n1 - 28*d^2*n1 - 32*n1^2 + 10*d*n1^2 - 108*n2 + 
      90*d*n2 - 18*d^2*n2 - 62*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 8*n2^2 + 
      4*d*n2^2 - 4*n1*n2^2 - 206*n3 + 155*d*n3 - 29*d^2*n3 - 84*n1*n3 + 
      31*d*n1*n3 - 8*n1^2*n3 - 62*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 
      4*n2^2*n3 - 36*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3)*
     j[p4a, 1 + n1, n2, 1 + n3, 0, 1, 1, 1, 1, 0, 0, 0, 0, -1, 1])/
    ((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 
      4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
      723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
      9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
      510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
      2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
      84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
      137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 
      10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 
      702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 
      26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 
      40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 
      48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)) - (n1*(8 - 3*d + n1 + 4*n2 - n3)*(-316 + 372*d - 143*d^2 + 
      18*d^3 - 222*n1 + 159*d*n1 - 28*d^2*n1 - 32*n1^2 + 10*d*n1^2 - 108*n2 + 
      90*d*n2 - 18*d^2*n2 - 62*n1*n2 + 22*d*n1*n2 - 4*n1^2*n2 - 8*n2^2 + 
      4*d*n2^2 - 4*n1*n2^2 - 206*n3 + 155*d*n3 - 29*d^2*n3 - 84*n1*n3 + 
      31*d*n1*n3 - 8*n1^2*n3 - 62*n2*n3 + 24*d*n2*n3 - 14*n1*n2*n3 - 
      4*n2^2*n3 - 36*n3^2 + 13*d*n3^2 - 6*n1*n3^2 - 6*n2*n3^2 - 2*n3^3)*
     j[p4a, 1 + n1, n2, 1 + n3, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1])/
    ((-3 + d - n3)*(7020 - 10020*d + 5365*d^2 - 1277*d^3 + 114*d^4 + 
      4286*n1 - 4615*d*n1 + 1656*d^2*n1 - 198*d^3*n1 + 1004*n1^2 - 
      723*d*n1^2 + 130*d^2*n1^2 + 106*n1^3 - 38*d*n1^3 + 4*n1^4 + 8548*n2 - 
      9150*d*n2 + 3264*d^2*n2 - 388*d^3*n2 + 4002*n1*n2 - 2858*d*n1*n2 + 
      510*d^2*n1*n2 + 622*n1^2*n2 - 222*d*n1^2*n2 + 32*n1^3*n2 + 3424*n2^2 - 
      2444*d*n2^2 + 436*d^2*n2^2 + 1076*n1*n2^2 - 384*d*n1*n2^2 + 
      84*n1^2*n2^2 + 560*n2^3 - 200*d*n2^3 + 88*n1*n2^3 + 32*n2^4 + 122*n3 - 
      137*d*n3 + 53*d^2*n3 - 7*d^3*n3 + 38*n1*n3 - 41*d*n1*n3 + 
      10*d^2*n1*n3 + 14*n1^2*n3 - 7*d*n1^2*n3 + 2*n1^3*n3 + 978*n2*n3 - 
      702*d*n2*n3 + 126*d^2*n2*n3 + 322*n1*n2*n3 - 116*d*n1*n2*n3 + 
      26*n1^2*n2*n3 + 392*n2^2*n3 - 140*d*n2^2*n3 + 64*n1*n2^2*n3 + 
      40*n2^3*n3 - 426*n3^2 + 304*d*n3^2 - 54*d^2*n3^2 - 138*n1*n3^2 + 
      48*d*n1*n3^2 - 10*n1^2*n3^2 - 92*n2*n3^2 + 32*d*n2*n3^2 - 
      12*n1*n2*n3^2 - 58*n3^3 + 21*d*n3^3 - 10*n1*n3^3 - 10*n2*n3^3 - 
      2*n3^4)), j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?NonPositive, 
    (n12_)?NonPositive, (n13_)?NonPositive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 0 && n12 == 0 && n13 == 0 && n14 == 1 && n3 == 0 && 
    n4 == 0 && n5 == 1 && n6 == 1 && n7 == 1 && n8 == 1 && n9 == 0 -> 
  j[p4a, n1, n2, 0, 0, 1, 0, 1, 1, 0, 2, 0, 0, 0, 1]/
    (-14 + 5*d - 2*n1 - 4*n2) + ((6 - 2*d + n1 + 2*n2)*
     j[p4a, n1, n2, 0, 0, 1, 0, 1, 2, 0, 1, 0, 0, 0, 1])/
    ((-14 + 5*d - 2*n1 - 4*n2)*(-3 + d - n2)) + 
   ((-3 + d - n1 - n2)*j[p4a, n1, n2, 0, 0, 2, 0, 1, 1, 0, 1, 0, 0, 0, 1])/
    ((-14 + 5*d - 2*n1 - 4*n2)*(-3 + d - n2)) - 
   (n2*(6 - 2*d + n1 + 2*n2)*j[p4a, n1, 1 + n2, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 
      0, 1])/((3 - d + n2)*(14 - 5*d + 2*n1 + 4*n2)) + 
   (n2*(6 - 2*d + n1 + 2*n2)*j[p4a, n1, 1 + n2, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 
      0, 1])/((3 - d + n2)*(14 - 5*d + 2*n1 + 4*n2)) + 
   ((6 - 2*d + n1 + 2*n2)*j[p4a, 1 + n1, -2 + n2, 0, 0, 1, 1, 2, 1, 0, 1, 0, 
      0, 0, 1])/((-14 + 5*d - 2*n1 - 4*n2)*(-3 + d - n2)) - 
   (2*(-3 + d - n1 - n2)*j[p4a, 1 + n1, -2 + n2, 0, 0, 2, 1, 1, 1, 0, 1, 0, 
      0, 0, 1])/((-14 + 5*d - 2*n1 - 4*n2)*(-3 + d - n2)) + 
   ((-6 + 2*d - n1 - 2*n2)*j[p4a, 1 + n1, -1 + n2, 0, 0, 0, 1, 2, 1, 0, 1, 0, 
      0, 0, 1])/((-14 + 5*d - 2*n1 - 4*n2)*(-3 + d - n2)) + 
   j[p4a, 1 + n1, -1 + n2, 0, 0, 1, 0, 1, 1, 0, 2, 0, 0, 0, 1]/
    (14 - 5*d + 2*n1 + 4*n2) + 
   ((6 - 8*d + 2*d^2 - 3*n1 + 14*n2 - 6*d*n2 + 2*n1*n2 + 4*n2^2)*
     j[p4a, 1 + n1, -1 + n2, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1])/
    ((-14 + 5*d - 2*n1 - 4*n2)*(-3 + d - n2)) + 
   ((-6 + 2*d - n1 - 2*n2)*j[p4a, 1 + n1, -1 + n2, 0, 0, 1, 1, 2, 0, 0, 1, 0, 
      0, 0, 1])/((-14 + 5*d - 2*n1 - 4*n2)*(-3 + d - n2)) + 
   ((6 - 2*d + n1 + 2*n2)*j[p4a, 1 + n1, -1 + n2, 0, 0, 1, 1, 2, 1, 0, 0, 0, 
      0, 0, 1])/((-14 + 5*d - 2*n1 - 4*n2)*(-3 + d - n2)) + 
   j[p4a, 1 + n1, -1 + n2, 0, 0, 1, 2, 1, 1, 0, 0, 0, 0, 0, 1]/
    (14 - 5*d + 2*n1 + 4*n2) + 
   (2*(-3 + d - n1 - n2)*j[p4a, 1 + n1, -1 + n2, 0, 0, 2, 0, 1, 1, 0, 1, 0, 
      0, 0, 1])/((-14 + 5*d - 2*n1 - 4*n2)*(-3 + d - n2)) + 
   ((6 - 2*d + n1 + 2*n2)*j[p4a, 1 + n1, n2, 0, -1, 1, 1, 2, 0, 0, 1, 0, 0, 
      0, 1])/((-14 + 5*d - 2*n1 - 4*n2)*(-3 + d - n2)) + 
   ((6 - 2*d + n1 + 2*n2)*j[p4a, 1 + n1, n2, 0, -1, 1, 1, 2, 1, 0, 0, 0, 0, 
      0, 1])/((-14 + 5*d - 2*n1 - 4*n2)*(-3 + d - n2)) + 
   ((6 - 2*d - 8*n1 + 3*d*n1 - n1^2 - 4*n2 + 2*d*n2 - 4*n1*n2 - 2*n2^2)*
     j[p4a, 1 + n1, n2, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1])/
    ((-14 + 5*d - 2*n1 - 4*n2)*(-3 + d - n2)) + 
   ((-6 + 2*d - n1 - 2*n2)*j[p4a, 1 + n1, n2, 0, 0, 0, 1, 2, 1, 0, 1, -1, 0, 
      0, 1])/((-14 + 5*d - 2*n1 - 4*n2)*(-3 + d - n2)) + 
   j[p4a, 1 + n1, n2, 0, 0, 0, 2, 1, 1, -1, 1, 0, 0, 0, 1]/
    (-14 + 5*d - 2*n1 - 4*n2) + (n2*(6 - 2*d + n1 + 2*n2)*
     j[p4a, 1 + n1, n2, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1])/
    ((3 - d + n2)*(14 - 5*d + 2*n1 + 4*n2)) + 
   ((-6 + 2*d - n1 - 2*n2)*j[p4a, 1 + n1, n2, 0, 0, 1, 0, 1, 2, 0, 1, -1, 0, 
      0, 1])/((-14 + 5*d - 2*n1 - 4*n2)*(-3 + d - n2)) + 
   ((-6 + 2*d - 4*n1 + d*n1 - n1^2 + 4*n2 - 2*d*n2 + 2*n2^2)*
     j[p4a, 1 + n1, n2, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1])/
    ((-14 + 5*d - 2*n1 - 4*n2)*(-3 + d - n2)) + 
   ((-6 + 2*d - n1 - 2*n2)*j[p4a, 1 + n1, n2, 0, 0, 1, 1, 2, 0, 0, 1, -1, 0, 
      0, 1])/((-14 + 5*d - 2*n1 - 4*n2)*(-3 + d - n2)) + 
   ((3 - d + n1 + n2)*j[p4a, 1 + n1, n2, 0, 0, 2, 0, 1, 1, -1, 1, 0, 0, 0, 
      1])/((-14 + 5*d - 2*n1 - 4*n2)*(-3 + d - n2)) + 
   (2*(1 + n1)*(3 - d + n1 + n2)*j[p4a, 2 + n1, -2 + n2, 0, 0, 1, 1, 1, 1, 0, 
      1, 0, 0, 0, 1])/((-14 + 5*d - 2*n1 - 4*n2)*(-3 + d - n2)) - 
   ((1 + n1)*(3 - d + n1 + n2)*j[p4a, 2 + n1, -1 + n2, 0, 0, 0, 1, 1, 1, 0, 
      1, 0, 0, 0, 1])/((-14 + 5*d - 2*n1 - 4*n2)*(-3 + d - n2)) - 
   (2*(1 + n1)*(3 - d + n1 + n2)*j[p4a, 2 + n1, -1 + n2, 0, 0, 1, 1, 1, 1, 0, 
      0, 0, 0, 0, 1])/((-14 + 5*d - 2*n1 - 4*n2)*(-3 + d - n2)) + 
   ((1 + n1)*(3 - d + n1 + n2)*j[p4a, 2 + n1, n2, 0, 0, 1, 1, 1, 1, -1, 0, 0, 
      0, 0, 1])/((-14 + 5*d - 2*n1 - 4*n2)*(-3 + d - n2))}
