{j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /;  !(n1 == 0 || n13 == 1) -> 
  -((n8*j[p4a, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
       -1 + n13, n14])/(-1 + n13)) - 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4a, 1 + n1, -1 + n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n3*j[p4a, 1 + n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4a, 1 + n1, n2, -1 + n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + ((-2 - n1 + n13 - n2 + n3)*
     j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) + j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, 
    n11, n12, n13, n14] + (n8*j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, 1 + n8, 
      n9, n10, -1 + n11, n12, -1 + n13, n14])/(-1 + n13) - 
   (n8*j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, -1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n8*j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) + 
   (n5*j[p4a, 1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, -1 + n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n5*j[p4a, 1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) - 
   (n5*j[p4a, 1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n13) - 
   (n4*j[p4a, 1 + n1, n2, n3, 1 + n4, n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n4*j[p4a, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4a, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, n8, -1 + n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n4*j[p4a, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4a, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, -1 + n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n4*j[p4a, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n13) - 
   (n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n2*j[p4a, 1 + n1, 1 + n2, -1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4a, 1 + n1, 1 + n2, n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4a, 1 + n1, 1 + n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4a, 1 + n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n2*j[p4a, 1 + n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, -1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (2*n2*j[p4a, 1 + n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) + 
   ((1 + n1)*j[p4a, 2 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) + 
   ((-1 - n1)*j[p4a, 2 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /;  !(n1 == 0 || n8 == 1) -> 
  -((n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
       n13, n14])/(-1 + n8)) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      n13, n14])/(-1 + n8) + (n4*j[p4a, 1 + n1, -1 + n2, n3, 1 + n4, n5, n6, 
      n7, -1 + n8, n9, n10, n11, n12, n13, n14])/(-1 + n8) + 
   (n12*j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n8) + ((-1 - d + 2*n11 + n12 + n4 + n7 + n8)*
     j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, n13, 
      n14])/(-1 + n8) - (n12*j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, -1 + n8, 
      n9, n10, n11, 1 + n12, n13, n14])/(-1 + n8) + 
   j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, n12, n13, 
    n14] - (n7*j[p4a, 1 + n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, n9, 
      -1 + n10, n11, n12, n13, n14])/(-1 + n8) + 
   (n7*j[p4a, 1 + n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n8) - 
   (n4*j[p4a, 1 + n1, n2, n3, 1 + n4, -1 + n5, n6, n7, -1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n8) - 
   (n4*j[p4a, 1 + n1, n2, n3, 1 + n4, n5, -1 + n6, n7, -1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n8) + 
   (n4*j[p4a, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, -1 + n9, n10, n11, 
      n12, n13, n14])/(-1 + n8) - 
   (n4*j[p4a, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n8) + 
   (n4*j[p4a, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n8) + 
   (n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, -1 + n7, -1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n8) + 
   (n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, -2 + n8, n9, n10, n11, n12, 
      n13, n14])/(-1 + n8) - (n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, 
      -1 + n8, n9, -1 + n10, n11, n12, n13, n14])/(-1 + n8) + 
   (n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n8) - 
   (n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n8) + 
   (n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      n13, n14])/(-1 + n8), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /;  !(n6 == 1 || n9 == 0) -> 
  (n4*j[p4a, -1 + n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 
      n12, n13, n14])/(-1 + n6) + 
   (n3*j[p4a, -1 + n1, n2, 1 + n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 
      n12, n13, n14])/(-1 + n6) - 
   (n2*j[p4a, -1 + n1, 1 + n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 
      n12, n13, n14])/(-1 + n6) - 
   (n4*j[p4a, n1, -1 + n2, n3, 1 + n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 
      n12, n13, n14])/(-1 + n6) + ((-1 - d + 2*n10 + n2 + n3 + n6 + n7)*
     j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
      n14])/(-1 + n6) + (n7*j[p4a, n1, n2, n3, n4, n5, -1 + n6, 1 + n7, n8, 
      1 + n9, -1 + n10, n11, n12, n13, n14])/(-1 + n6) - 
   (n7*j[p4a, n1, n2, n3, n4, n5, -1 + n6, 1 + n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n6) + j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 
    1 + n9, -1 + n10, n11, n12, n13, n14] + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, -2 + n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, n14])/(-1 + n6) + (n4*j[p4a, n1, n2, n3, 1 + n4, n5, -1 + n6, 
      -1 + n7, n8, 1 + n9, n10, n11, n12, n13, n14])/(-1 + n6) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, n9, n10, n11, n12, 
      n13, n14])/(-1 + n6) + (n4*j[p4a, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, 
      n8, 1 + n9, -1 + n10, n11, n12, n13, n14])/(-1 + n6) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n6) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, -1 + n6, n7, -1 + n8, 1 + n9, n10, n11, 
      n12, n13, n14])/(-1 + n6) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, -1 + n6, n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n6) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n6) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n6) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n6) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, n14])/(-1 + n6) + (n2*j[p4a, n1, 1 + n2, n3, n4, n5, -1 + n6, n7, 
      n8, 1 + n9, -1 + n10, n11, n12, n13, n14])/(-1 + n6), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /;  !(n14 == 1 || n9 == 0) -> 
  (n5*j[p4a, -1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n4*j[p4a, -1 + n1, n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, n1, -1 + n2, n3, n4, n5, 1 + n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4a, n1, -1 + n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, n1, n2, -1 + n3, n4, n5, 1 + n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   ((-2 + n14 - n9)*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) + j[p4a, n1, n2, n3, n4, n5, n6, n7, 
    n8, 1 + n9, n10, n11, n12, n13, n14] + 
   ((1 + n9)*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 2 + n9, n10, n11, n12, 
      n13, -2 + n14])/(-1 + n14) + 
   ((-1 - n9)*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 2 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, -1 + n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, -1 + n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) + (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 
      1 + n9, -1 + n10, n11, n12, n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 1 + n9, n10, n11, -1 + n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 1 + n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14) - (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, 
      n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) - 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n14) + 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14) + (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, 
      n8, 1 + n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) + (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, 
      1 + n9, -1 + n10, n11, n12, n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /;  !(n12 == 0 || n8 == 1) -> 
  (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) + ((-1 - d + n1 + 2*n13 + n3 + n5 + n8)*
     j[p4a, n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, n13, 
      n14])/(-1 + n8) + j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 
    1 + n12, -1 + n13, n14] + (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, 
      -1 + n8, n9, n10, n11, 1 + n12, -1 + n13, n14])/(-1 + n8) - 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n8) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, -1 + n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n8) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n8) - 
   (n2*j[p4a, n1, 1 + n2, -1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) + 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, -1 + n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) + 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, -2 + n8, n9, n10, n11, 1 + n12, 
      n13, n14])/(-1 + n8) - (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, 
      -1 + n8, n9, n10, n11, n12, n13, n14])/(-1 + n8) + 
   (2*n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, -1 + n13, n14])/(-1 + n8) + 
   (n1*j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n8) - 
   (n1*j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      n13, n14])/(-1 + n8), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /;  !(n1 == 0 || n11 == 1) -> 
  (n12*j[p4a, 1 + n1, -1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   (n8*j[p4a, 1 + n1, -1 + n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n7*j[p4a, 1 + n1, -1 + n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n3*j[p4a, 1 + n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n12*j[p4a, 1 + n1, n2, -1 + n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) - 
   (2*n12*j[p4a, 1 + n1, n2, n3, n4, n5, n6, -1 + n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) - j[p4a, 1 + n1, n2, n3, n4, n5, n6, 
    -1 + n7, n8, n9, n10, n11, n12, n13, n14] - 
   (n8*j[p4a, 1 + n1, n2, n3, n4, n5, n6, -1 + n7, 1 + n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, 
    -1 + n8, n9, n10, n11, n12, n13, n14] + j[p4a, 1 + n1, n2, n3, n4, n5, 
    n6, n7, n8, n9, -1 + n10, n11, n12, n13, n14] + 
   ((n12 - n3 - n7 + n8)*j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, 
      -1 + n11, n12, n13, n14])/(-1 + n11) - 
   (2*n12*j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      1 + n12, -1 + n13, n14])/(-1 + n11) + 
   (n7*j[p4a, 1 + n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n4*j[p4a, 1 + n1, n2, n3, 1 + n4, -1 + n5, n6, n7, n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n4*j[p4a, 1 + n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n4*j[p4a, 1 + n1, n2, n3, 1 + n4, n5, n6, -1 + n7, n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n4*j[p4a, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (2*n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, 
      -1 + n11, n12, n13, n14])/(-1 + n11) - 
   (n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      -1 + n12, n13, n14])/(-1 + n11) + 
   (2*n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      n12, -1 + n13, n14])/(-1 + n11), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /;  !(n10 == 1 || n2 == 0) -> 
  j[p4a, -1 + n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, 
    n14] - (n7*j[p4a, n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, -1 + n10, n11, n12, 
      n13, n14])/(-1 + n10) - (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, 
      n9, -1 + n10, n11, n12, n13, n14])/(-1 + n10) + 
   (n6*j[p4a, n1, 1 + n2, n3, n4, -1 + n5, 1 + n6, n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + ((-1 + d - n10 - 2*n2 - n3 - n6 - n7)*
     j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, n13, 
      n14])/(-1 + n10) + (n7*j[p4a, n1, 1 + n2, n3, n4, n5, n6, 1 + n7, 
      -1 + n8, n9, -1 + n10, n11, n12, n13, n14])/(-1 + n10) + 
   (n4*j[p4a, n1, 1 + n2, n3, 1 + n4, -1 + n5, n6, n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n4*j[p4a, n1, 1 + n2, n3, 1 + n4, n5, -1 + n6, n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n4*j[p4a, n1, 1 + n2, n3, 1 + n4, n5, n6, -1 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n4*j[p4a, n1, 1 + n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (2*n3*j[p4a, n1, 1 + n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, -1 + n10, 
      n11, n12, n13, n14])/(-1 + n10) - 
   (n3*j[p4a, n1, 1 + n2, 1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, 
      -1 + n12, n13, n14])/(-1 + n10) + 
   (2*n3*j[p4a, n1, 1 + n2, 1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, 
      n12, -1 + n13, n14])/(-1 + n10), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n14 != 1 -> 
  -((n9*j[p4a, -1 + n1, n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, n10, n11, 
       n12, n13, -1 + n14])/(-1 + n14)) + 
   (n9*j[p4a, n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + j[p4a, n1, n2, 1 + n3, -1 + n4, n5, n6, 
    n7, n8, n9, n10, n11, n12, n13, n14] + 
   (n9*j[p4a, n1, n2, 1 + n3, -1 + n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4a, n1, n2, 1 + n3, -1 + n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n5*j[p4a, n1, n2, 1 + n3, -1 + n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4a, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + ((-1 - d + n14 + 2*n4 + n5 + n6 + n9)*
     j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) - (n9*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, 
      1 + n9, -1 + n10, n11, n12, n13, -1 + n14])/(-1 + n14) + 
   (n9*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, n1, n2, 1 + n3, n4, n5, 1 + n6, n7, -1 + n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n5*j[p4a, n1, n2, 1 + n3, n4, 1 + n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n13 != 1 -> 
  -((n12*j[p4a, n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, 
       1 + n12, -1 + n13, n14])/(-1 + n13)) - 
   (n12*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n5*j[p4a, n1, n2, 1 + n3, -1 + n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + j[p4a, n1, n2, 1 + n3, n4, n5, n6, 
    -1 + n7, n8, n9, n10, n11, n12, n13, n14] + 
   (2*n12*j[p4a, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, 
      1 + n12, -1 + n13, n14])/(-1 + n13) + 
   (n11*j[p4a, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, n10, 1 + n11, 
      n12, -1 + n13, n14])/(-1 + n13) + 
   (n12*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, -1 + n13, n14])/(-1 + n13) - 
   (n11*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, 1 + n11, 
      n12, -1 + n13, n14])/(-1 + n13) + 
   ((-1 - d + n11 + n13 + n2 + n5 + 2*n7)*j[p4a, n1, n2, 1 + n3, n4, n5, n6, 
      n7, n8, n9, n10, n11, n12, -1 + n13, n14])/(-1 + n13) + 
   (n12*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -2 + n13, n14])/(-1 + n13) + 
   (n5*j[p4a, n1, n2, 1 + n3, n4, 1 + n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4a, n1, 1 + n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n2*j[p4a, n1, 1 + n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n1*j[p4a, 1 + n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n1*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n1*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n1*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, n12, 
      -1 + n13, n14])/(-1 + n13), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /;  !(n2 == 0 || n8 == 1) -> 
  -((n12*j[p4a, n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
       n13, n14])/(-1 + n8)) - 
   (n12*j[p4a, n1, 1 + n2, -1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) + 
   (2*n12*j[p4a, n1, 1 + n2, n3, n4, n5, n6, -1 + n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) + 
   (n11*j[p4a, n1, 1 + n2, n3, n4, n5, n6, -1 + n7, -1 + n8, n9, n10, 
      1 + n11, n12, n13, n14])/(-1 + n8) + j[p4a, n1, 1 + n2, n3, n4, n5, n6, 
    -1 + n7, n8, n9, n10, n11, n12, n13, n14] + 
   (n12*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, -2 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) - 
   (n11*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, -1 + n8, n9, -1 + n10, 
      1 + n11, n12, n13, n14])/(-1 + n8) + 
   ((-1 - d + n11 + n3 + n4 + 2*n7 + n8)*j[p4a, n1, 1 + n2, n3, n4, n5, n6, 
      n7, -1 + n8, n9, n10, n11, n12, n13, n14])/(-1 + n8) + 
   (n12*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, -1 + n13, n14])/(-1 + n8) - 
   (n4*j[p4a, n1, 1 + n2, n3, 1 + n4, -1 + n5, n6, n7, -1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n8) + 
   (n4*j[p4a, n1, 1 + n2, n3, 1 + n4, n5, n6, -1 + n7, -1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n8) + 
   (n3*j[p4a, n1, 1 + n2, 1 + n3, n4, n5, n6, -1 + n7, -1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n8) - 
   (n3*j[p4a, n1, 1 + n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n8), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /;  !(n5 == 0 || n6 == 1) -> 
  j[p4a, n1, -1 + n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, n13, 
    n14] + j[p4a, n1, n2, n3, -1 + n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
    n13, n14] + (n10*j[p4a, n1, n2, n3, n4, 1 + n5, -1 + n6, -1 + n7, n8, n9, 
      1 + n10, n11, n12, n13, n14])/(-1 + n6) + 
   ((-d + n10 + n2 + n3 + n4 + 2*n7)*j[p4a, n1, n2, n3, n4, 1 + n5, -1 + n6, 
      n7, n8, n9, n10, n11, n12, n13, n14])/(-1 + n6) - 
   (n10*j[p4a, n1, n2, n3, n4, 1 + n5, -1 + n6, n7, n8, n9, 1 + n10, 
      -1 + n11, n12, n13, n14])/(-1 + n6) - j[p4a, n1, n2, n3, n4, 1 + n5, 
    n6, n7, -1 + n8, n9, n10, n11, n12, n13, n14] - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, n9, n10, n11, n12, 
      n13, n14])/(-1 + n6) + (n4*j[p4a, n1, n2, n3, 1 + n4, 1 + n5, -1 + n6, 
      -1 + n7, n8, n9, n10, n11, n12, n13, n14])/(-1 + n6) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, 1 + n5, -1 + n6, -1 + n7, n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n6) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, 1 + n5, -1 + n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n6) + 
   (n2*j[p4a, n1, 1 + n2, n3, n4, 1 + n5, -1 + n6, -1 + n7, n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n6) - 
   (n2*j[p4a, n1, 1 + n2, n3, n4, 1 + n5, -1 + n6, n7, -1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n6), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /;  !(n14 == 1 || n5 == 0) -> 
  (n9*j[p4a, n1, -1 + n2, n3, n4, 1 + n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4a, n1, -1 + n2, n3, n4, 1 + n5, 1 + n6, n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - j[p4a, n1, n2, -1 + n3, n4, 1 + n5, n6, 
    n7, n8, n9, n10, n11, n12, n13, n14] + j[p4a, n1, n2, n3, -1 + n4, 
    1 + n5, n6, n7, n8, n9, n10, n11, n12, n13, n14] + 
   (n9*j[p4a, n1, n2, n3, -1 + n4, 1 + n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4a, n1, n2, n3, -1 + n4, 1 + n5, 1 + n6, n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   ((1 + n5)*j[p4a, n1, n2, n3, -1 + n4, 2 + n5, n6, n7, n8, n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) - (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 
      n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4a, n1, n2, n3, n4, 1 + n5, n6, -1 + n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, -1 + n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, 
    n9, n10, n11, n12, -1 + n13, n14] + 
   ((-1 + n4 - n5)*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, 1 + n9, -1 + n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n9*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, 1 + n9, n10, -1 + n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, n1, n2, n3, n4, 1 + n5, 1 + n6, n7, -1 + n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   ((-1 - n5)*j[p4a, n1, n2, n3, n4, 2 + n5, n6, -1 + n7, n8, n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) + (n4*j[p4a, n1, n2, n3, 1 + n4, 1 + n5, n6, 
      -1 + n7, n8, n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /;  !(n12 == 0 || n13 == 1) -> 
  (n8*j[p4a, n1, -1 + n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n5*j[p4a, n1, -1 + n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n3*j[p4a, n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) - j[p4a, n1, n2, -1 + n3, n4, n5, n6, n7, 
    n8, n9, n10, n11, 1 + n12, n13, n14] - 
   (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + j[p4a, n1, n2, n3, n4, n5, n6, -1 + n7, 
    n8, n9, n10, n11, 1 + n12, n13, n14] - 
   (n8*j[p4a, n1, n2, n3, n4, n5, n6, -1 + n7, 1 + n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + j[p4a, n1, n2, n3, n4, n5, n6, n7, 
    -1 + n8, n9, n10, n11, 1 + n12, n13, n14] + 
   (2*(n2 - n3)*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n8*j[p4a, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n8*j[p4a, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, 1 + n12, 
      -2 + n13, n14])/(-1 + n13) - 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, -1 + n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -2 + n13, n14])/(-1 + n13) + 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, -1 + n14])/(-1 + n13) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, -1 + n14])/(-1 + n13) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (2*n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, -1 + n13, n14])/(-1 + n13) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -2 + n13, n14])/(-1 + n13) + 
   (n2*j[p4a, n1, 1 + n2, -1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (2*n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -2 + n13, n14])/(-1 + n13) + 
   (n1*j[p4a, 1 + n1, -1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n1*j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n1*j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -2 + n13, n14])/(-1 + n13) + 
   (n1*j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /;  !(n11 == 1 || n9 == 0) -> 
  -j[p4a, n1, -1 + n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
     n14] - (n7*j[p4a, n1, -1 + n2, n3, n4, n5, n6, 1 + n7, n8, 1 + n9, n10, 
      -1 + n11, n12, n13, n14])/(-1 + n11) - 
   (n3*j[p4a, n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n12*j[p4a, n1, n2, -1 + n3, n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) - 
   (n12*j[p4a, n1, n2, n3, -1 + n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) - j[p4a, n1, n2, n3, -1 + n4, n5, n6, 
    n7, n8, 1 + n9, n10, n11, n12, n13, n14] - 
   (n8*j[p4a, n1, n2, n3, -1 + n4, n5, n6, n7, 1 + n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n7*j[p4a, n1, n2, n3, -1 + n4, n5, n6, 1 + n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n12*j[p4a, n1, n2, n3, n4, -1 + n5, n6, n7, n8, 1 + n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + j[p4a, n1, n2, n3, n4, -1 + n5, n6, 
    n7, n8, 1 + n9, n10, n11, n12, n13, n14] + 
   (n7*j[p4a, n1, n2, n3, n4, -1 + n5, n6, 1 + n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n12*j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + j[p4a, n1, n2, n3, n4, n5, -1 + n6, 
    n7, n8, 1 + n9, n10, n11, n12, n13, n14] + 
   (n8*j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, 1 + n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n12*j[p4a, n1, n2, n3, n4, n5, n6, -1 + n7, n8, 1 + n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + j[p4a, n1, n2, n3, n4, n5, n6, n7, 
    -1 + n8, 1 + n9, n10, n11, n12, n13, n14] + j[p4a, n1, n2, n3, n4, n5, 
    n6, n7, n8, 1 + n9, -1 + n10, n11, n12, n13, n14] + 
   ((n12 - n3 - n4 + n8)*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, 
      -1 + n11, n12, n13, n14])/(-1 + n11) - 
   (n12*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, 
      1 + n12, -1 + n13, n14])/(-1 + n11) - 
   (n12*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, 
      1 + n12, n13, -1 + n14])/(-1 + n11) + 
   (n7*j[p4a, n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n3*j[p4a, n1, n2, 1 + n3, -1 + n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (2*n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, 1 + n9, n10, 
      -1 + n11, n12, n13, n14])/(-1 + n11) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, 
      -1 + n12, n13, n14])/(-1 + n11) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, n12, 
      -1 + n13, n14])/(-1 + n11) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, n12, 
      n13, -1 + n14])/(-1 + n11), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /;  !(n10 == 1 || n9 == 0) -> 
  (n7*j[p4a, n1, -1 + n2, n3, n4, n5, n6, 1 + n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n3*j[p4a, n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n7*j[p4a, n1, n2, n3, -1 + n4, n5, n6, 1 + n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n7*j[p4a, n1, n2, n3, n4, -1 + n5, n6, 1 + n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, 
    n8, 1 + n9, n10, n11, n12, n13, n14] + 
   ((-1 - d + n10 + n2 + n3 + n4 + 2*n6)*j[p4a, n1, n2, n3, n4, n5, n6, n7, 
      n8, 1 + n9, -1 + n10, n11, n12, n13, n14])/(-1 + n10) - 
   (n7*j[p4a, n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n3*j[p4a, n1, n2, 1 + n3, -1 + n4, n5, n6, n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (2*n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, 1 + n9, -1 + n10, 
      n11, n12, n13, n14])/(-1 + n10) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, -1 + n10, n11, 
      -1 + n12, n13, n14])/(-1 + n10) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, -1 + n10, n11, n12, 
      -1 + n13, n14])/(-1 + n10) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, -1 + n10, n11, n12, 
      n13, -1 + n14])/(-1 + n10) - 
   (n2*j[p4a, n1, 1 + n2, n3, n4, -1 + n5, n6, n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /;  !(n12 == 0 || n14 == 1) -> 
  -j[p4a, n1, -1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
     n14] + (n6*j[p4a, n1, -1 + n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, 
      1 + n12, n13, -1 + n14])/(-1 + n14) - 
   (n5*j[p4a, n1, -1 + n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) - j[p4a, n1, n2, -1 + n3, n4, n5, n6, n7, 
    n8, n9, n10, n11, 1 + n12, n13, n14] + 
   (n6*j[p4a, n1, n2, -1 + n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) + j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, 
    n8, n9, n10, n11, 1 + n12, n13, n14] + 
   (n9*j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) + j[p4a, n1, n2, n3, n4, n5, n6, -1 + n7, 
    n8, n9, n10, n11, 1 + n12, n13, n14] + j[p4a, n1, n2, n3, n4, n5, n6, n7, 
    -1 + n8, n9, n10, n11, 1 + n12, n13, n14] + j[p4a, n1, n2, n3, n4, n5, 
    n6, n7, n8, n9, n10, n11, 1 + n12, -1 + n13, n14] + 
   ((1 - n14 + n6)*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 
      1 + n12, n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, -1 + n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, n11, 1 + n12, n13, 
      -2 + n14])/(-1 + n14) + (n9*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 
      1 + n9, n10, n11, 1 + n12, n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, -1 + n7, n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) - (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 
      n9, n10, n11, 1 + n12, -1 + n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
      -2 + n14])/(-1 + n14) + (n5*j[p4a, n1, n2, n3, n4, 1 + n5, -1 + n6, n7, 
      n8, n9, n10, n11, 1 + n12, n13, -1 + n14])/(-1 + n14) + 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, -1 + n14])/(-1 + n14) - 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
      -2 + n14])/(-1 + n14) + (n4*j[p4a, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, 
      n8, n9, n10, n11, 1 + n12, n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
      -2 + n14])/(-1 + n14), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /;  !(n13 == 1 || n5 == 0) -> 
  -((n8*j[p4a, n1, -1 + n2, n3, n4, 1 + n5, n6, n7, 1 + n8, n9, n10, n11, 
       n12, -1 + n13, n14])/(-1 + n13)) + 
   (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n8*j[p4a, n1, n2, n3, -1 + n4, 1 + n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n8*j[p4a, n1, n2, n3, n4, 1 + n5, -1 + n6, n7, 1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n8*j[p4a, n1, n2, n3, n4, 1 + n5, n6, -1 + n7, 1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + ((-2 + n13 - n2 + n3 - n4 - n5 + n8)*
     j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) + j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, 
    n11, n12, n13, -1 + n14] - 
   (n8*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, 1 + n8, n9, n10, n11, -1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n8*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) + 
   ((1 + n5)*j[p4a, n1, n2, n3, n4, 2 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) + 
   ((-1 - n5)*j[p4a, n1, n2, n3, n4, 2 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n13) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n13) - 
   (n3*j[p4a, n1, n2, 1 + n3, -1 + n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n13) - 
   (n2*j[p4a, n1, 1 + n2, -1 + n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4a, n1, 1 + n2, n3, n4, 1 + n5, -1 + n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4a, n1, 1 + n2, n3, n4, 1 + n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4a, n1, 1 + n2, n3, n4, 1 + n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n2*j[p4a, n1, 1 + n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, -1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (2*n2*j[p4a, n1, 1 + n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) - 
   (n1*j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n1*j[p4a, 1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, -1 + n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n1*j[p4a, 1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) - 
   (n1*j[p4a, 1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /;  !(n11 == 1 || n12 == 0) -> 
  ((-1 - n12)*j[p4a, n1, -1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      2 + n12, n13, n14])/(-1 + n11) - j[p4a, n1, -1 + n2, n3, n4, n5, n6, 
    n7, n8, n9, n10, n11, 1 + n12, n13, n14] - 
   (n8*j[p4a, n1, -1 + n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   (n7*j[p4a, n1, n2, -1 + n3, n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   ((-1 - n12)*j[p4a, n1, n2, n3, -1 + n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      2 + n12, n13, n14])/(-1 + n11) - j[p4a, n1, n2, n3, -1 + n4, n5, n6, 
    n7, n8, n9, n10, n11, 1 + n12, n13, n14] - 
   (n8*j[p4a, n1, n2, n3, -1 + n4, n5, n6, n7, 1 + n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) - 
   (n7*j[p4a, n1, n2, n3, -1 + n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   ((1 + n12)*j[p4a, n1, n2, n3, n4, -1 + n5, n6, n7, n8, n9, n10, -1 + n11, 
      2 + n12, n13, n14])/(-1 + n11) + j[p4a, n1, n2, n3, n4, -1 + n5, n6, 
    n7, n8, n9, n10, n11, 1 + n12, n13, n14] + 
   (n7*j[p4a, n1, n2, n3, n4, -1 + n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   ((1 + n12)*j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, n8, n9, n10, -1 + n11, 
      2 + n12, n13, n14])/(-1 + n11) + j[p4a, n1, n2, n3, n4, n5, -1 + n6, 
    n7, n8, n9, n10, n11, 1 + n12, n13, n14] + 
   (n8*j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, 1 + n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   ((1 + n12)*j[p4a, n1, n2, n3, n4, n5, n6, -1 + n7, n8, n9, n10, -1 + n11, 
      2 + n12, n13, n14])/(-1 + n11) + j[p4a, n1, n2, n3, n4, n5, n6, 
    -1 + n7, n8, n9, n10, n11, 1 + n12, n13, n14] + 
   (n8*j[p4a, n1, n2, n3, n4, n5, n6, -1 + n7, 1 + n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   ((1 + n12)*j[p4a, n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, -1 + n11, 
      2 + n12, n13, n14])/(-1 + n11) + j[p4a, n1, n2, n3, n4, n5, n6, n7, 
    -1 + n8, n9, n10, n11, 1 + n12, n13, n14] - j[p4a, n1, n2, n3, n4, n5, 
    n6, n7, n8, -1 + n9, n10, n11, 1 + n12, n13, n14] + 
   ((-1 - n12 + n3 - n4 + n8)*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, 
      -1 + n11, 1 + n12, n13, n14])/(-1 + n11) + 
   ((-1 - n12)*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      2 + n12, n13, -1 + n14])/(-1 + n11) + j[p4a, n1, n2, n3, n4, n5, n6, 
    n7, n8, n9, n10, n11, 1 + n12, n13, n14] - 
   (n8*j[p4a, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, -1 + n11, n12, 
      n13, n14])/(-1 + n11) + (n8*j[p4a, n1, n2, n3, n4, n5, n6, n7, 1 + n8, 
      n9, n10, -1 + n11, 1 + n12, -1 + n13, n14])/(-1 + n11) - 
   (n7*j[p4a, n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n11) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, -1 + n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n11) - 
   (n3*j[p4a, n1, n2, 1 + n3, -1 + n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n11), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /;  !(n10 == 1 || n12 == 0) -> 
  -j[p4a, n1, -1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
     n14] - (n6*j[p4a, n1, -1 + n2, n3, n4, n5, 1 + n6, n7, n8, n9, -1 + n10, 
      n11, 1 + n12, n13, n14])/(-1 + n10) - j[p4a, n1, n2, -1 + n3, n4, n5, 
    n6, n7, n8, n9, n10, n11, 1 + n12, n13, n14] - 
   (n7*j[p4a, n1, n2, -1 + n3, n4, n5, n6, 1 + n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) - 
   (n6*j[p4a, n1, n2, -1 + n3, n4, n5, 1 + n6, n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) - 
   (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) + 
   (n7*j[p4a, n1, n2, n3, -1 + n4, n5, n6, 1 + n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) - 
   (n7*j[p4a, n1, n2, n3, n4, -1 + n5, n6, 1 + n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) + j[p4a, n1, n2, n3, n4, n5, -1 + n6, 
    n7, n8, n9, n10, n11, 1 + n12, n13, n14] + j[p4a, n1, n2, n3, n4, n5, n6, 
    -1 + n7, n8, n9, n10, n11, 1 + n12, n13, n14] + 
   j[p4a, n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, n13, 
    n14] - j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, -1 + n9, n10, n11, 1 + n12, 
    n13, n14] + ((-n2 - n3 + n4 + n6)*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 
      n9, -1 + n10, n11, 1 + n12, n13, n14])/(-1 + n10) + 
   j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, -1 + n13, 
    n14] + j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
    n14] + (n7*j[p4a, n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, -1 + n10, n11, 
      1 + n12, -1 + n13, n14])/(-1 + n10) + 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, -1 + n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) + 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, -1 + n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) - 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, -1 + n10, n11, n12, 
      n13, n14])/(-1 + n10) + (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 
      n9, -1 + n10, n11, 1 + n12, -1 + n13, n14])/(-1 + n10) + 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, -1 + n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n10) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, -1 + n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n10) + 
   (n3*j[p4a, n1, n2, 1 + n3, -1 + n4, n5, n6, n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n10) - 
   (n2*j[p4a, n1, 1 + n2, -1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) - 
   (n2*j[p4a, n1, 1 + n2, n3, n4, -1 + n5, n6, n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) + 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, -1 + n6, n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) + 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, -1 + n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) + 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, -1 + n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) - 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, 
      n13, n14])/(-1 + n10) + (2*n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, 
      n8, n9, -1 + n10, n11, 1 + n12, -1 + n13, n14])/(-1 + n10), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /;  !(n12 == 0 || n6 == 1) -> 
  -j[p4a, n1, -1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
     n14] - j[p4a, n1, n2, -1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, 
    1 + n12, n13, n14] - (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, -1 + n6, n7, 
      n8, n9, n10, n11, 1 + n12, n13, n14])/(-1 + n6) + 
   ((-1 - d + 2*n14 + n4 + n5 + n6 + n9)*j[p4a, n1, n2, n3, n4, n5, -1 + n6, 
      n7, n8, n9, n10, n11, 1 + n12, n13, n14])/(-1 + n6) + 
   (n9*j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n6) - 
   (n9*j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 1 + n12, 
      n13, n14])/(-1 + n6) + j[p4a, n1, n2, n3, n4, n5, n6, -1 + n7, n8, n9, 
    n10, n11, 1 + n12, n13, n14] + j[p4a, n1, n2, n3, n4, n5, n6, n7, 
    -1 + n8, n9, n10, n11, 1 + n12, n13, n14] + j[p4a, n1, n2, n3, n4, n5, 
    n6, n7, n8, n9, n10, n11, 1 + n12, -1 + n13, n14] + 
   j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
    -1 + n14] - (n5*j[p4a, n1, n2, n3, n4, 1 + n5, -1 + n6, n7, n8, n9, n10, 
      n11, 1 + n12, -1 + n13, n14])/(-1 + n6) + 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, -1 + n6, n7, n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n6) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n6), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n10 == 1 && n11 == 1 && n13 == 1 && 
    n14 == 1 && n6 == 1 && n8 == 1 &&  !(n12 == 0 || n3 == 1 || n5 == 0) -> 
  (n5*j[p4a, -1 + n1, n2, -1 + n3, n4, 1 + n5, 1, n7, 1, n9, 1, 1, 1 + n12, 
      1, 1])/(-1 + n3) - j[p4a, -1 + n1, n2, n3, n4, n5, 1, n7, 1, n9, 1, 1, 
    1 + n12, 1, 1] + (n2*j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, n5, 1, n7, 1, 
      n9, 1, 1, 1 + n12, 1, 1])/(-1 + n3) + 
   ((1 - n9)*j[p4a, n1, -1 + n2, -1 + n3, n4, 1 + n5, 1, n7, 1, n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n3) + j[p4a, n1, n2, -2 + n3, n4, 1 + n5, 1, n7, 
     1, -1 + n9, 1, 1, 1 + n12, 1, 2]/(-1 + n3) + 
   j[p4a, n1, n2, -1 + n3, -1 + n4, 1 + n5, 1, n7, 1, -1 + n9, 1, 1, 1 + n12, 
     1, 2]/(1 - n3) + ((1 - n9)*j[p4a, n1, n2, -1 + n3, -1 + n4, 1 + n5, 1, 
      n7, 1, n9, 1, 1, 1 + n12, 1, 1])/(-1 + n3) + 
   ((-1 - n5)*j[p4a, n1, n2, -1 + n3, -1 + n4, 2 + n5, 1, n7, 1, -1 + n9, 1, 
      1, 1 + n12, 1, 1])/(-1 + n3) + 
   ((-5 + 2*d - n2 - n3 - n4 - n5 - n7 - n9)*j[p4a, n1, n2, -1 + n3, n4, n5, 
      1, n7, 1, n9, 1, 1, 1 + n12, 1, 1])/(-1 + n3) + 
   j[p4a, n1, n2, -1 + n3, n4, n5, 1, n7, 1, n9, 1, 1, 1 + n12, 1, 2]/
    (-1 + n3) - (n7*j[p4a, n1, n2, -1 + n3, n4, n5, 1, 1 + n7, 1, n9, 0, 1, 
      1 + n12, 1, 1])/(-1 + n3) + 
   (n7*j[p4a, n1, n2, -1 + n3, n4, n5, 1, 1 + n7, 1, n9, 1, 0, 1 + n12, 1, 
      1])/(-1 + n3) + j[p4a, n1, n2, -1 + n3, n4, 1 + n5, 1, -1 + n7, 1, 
     -1 + n9, 2, 1, 1 + n12, 1, 1]/(-1 + n3) + 
   ((-1 + n9)*j[p4a, n1, n2, -1 + n3, n4, 1 + n5, 1, -1 + n7, 1, n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n3) + 
   ((-1 + n9)*j[p4a, n1, n2, -1 + n3, n4, 1 + n5, 1, n7, 0, n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n3) + j[p4a, n1, n2, -1 + n3, n4, 1 + n5, 1, n7, 
     1, -1 + n9, 1, 1, 1 + n12, 0, 2]/(1 - n3) + 
   ((1 - d + n2 + n3 + 2*n7)*j[p4a, n1, n2, -1 + n3, n4, 1 + n5, 1, n7, 1, 
      -1 + n9, 1, 1, 1 + n12, 1, 1])/(-1 + n3) + 
   j[p4a, n1, n2, -1 + n3, n4, 1 + n5, 1, n7, 1, -1 + n9, 2, 0, 1 + n12, 1, 
     1]/(1 - n3) + ((-1 + n9)*j[p4a, n1, n2, -1 + n3, n4, 1 + n5, 1, n7, 1, 
      n9, 0, 1, 1 + n12, 1, 1])/(-1 + n3) + 
   ((1 - n9)*j[p4a, n1, n2, -1 + n3, n4, 1 + n5, 1, n7, 1, n9, 1, 0, 1 + n12, 
      1, 1])/(-1 + n3) + ((1 + n5)*j[p4a, n1, n2, -1 + n3, n4, 2 + n5, 1, 
      -1 + n7, 1, -1 + n9, 1, 1, 1 + n12, 1, 1])/(-1 + n3) - 
   (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, 0, n7, 1, n9, 1, 1, 1 + n12, 1, 
      1])/(-1 + n3) + (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, 1, n7, 0, n9, 
      1, 1, 1 + n12, 1, 1])/(-1 + n3) + j[p4a, n1, n2, n3, n4, n5, 1, n7, 0, 
    n9, 1, 1, 1 + n12, 1, 1] - j[p4a, n1, n2, n3, n4, n5, 1, n7, 1, n9, 0, 1, 
    1 + n12, 1, 1] + j[p4a, n1, n2, n3, n4, n5, 1, n7, 1, n9, 1, 0, 1 + n12, 
    1, 1] + j[p4a, n1, n2, n3, n4, n5, 1, n7, 1, n9, 1, 1, 1 + n12, 0, 1] + 
   j[p4a, n1, n2, n3, n4, n5, 1, n7, 1, n9, 1, 1, 1 + n12, 1, 1] + 
   j[p4a, n1, n2, n3, n4, 1 + n5, 1, -1 + n7, 1, -1 + n9, 1, 1, 1 + n12, 1, 
    1] - j[p4a, n1, n2, n3, n4, 1 + n5, 1, n7, 1, -1 + n9, 1, 1, 1 + n12, 0, 
    1] - (n2*j[p4a, n1, 1 + n2, -1 + n3, n4, n5, 1, n7, 1, n9, 0, 1, 1 + n12, 
      1, 1])/(-1 + n3) + (n2*j[p4a, n1, 1 + n2, -1 + n3, n4, 1 + n5, 1, 
      -1 + n7, 1, -1 + n9, 1, 1, 1 + n12, 1, 1])/(-1 + n3) - 
   (n2*j[p4a, n1, 1 + n2, -1 + n3, n4, 1 + n5, 1, n7, 0, -1 + n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n3), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n1 == 0 && n12 == 0 && n13 == 1 && 
    n14 == 1 && n2 == 0 && n5 == 0 && n9 == 0 &&  !(n10 == 1 || n11 == 1) -> 
  -((n7*j[p4a, 0, 0, n3, n4, 0, n6, 1 + n7, n8, 0, -1 + n10, n11, 0, 1, 1])/
     (-1 + n10)) - (n7*j[p4a, 0, 0, n3, n4, 0, n6, 1 + n7, n8, 0, n10, 
      -1 + n11, 0, 1, 1])/(-1 + n11) - 
   (n6*j[p4a, 0, 0, 1 + n3, -1 + n4, 0, 1 + n6, n7, n8, 0, -1 + n10, n11, 0, 
      1, 1])/(-1 + n10) + ((-3 + 2*d - n10 - 2*n3 - 2*n4 - n6 - n7)*
     j[p4a, 0, 0, 1 + n3, n4, 0, n6, n7, n8, 0, -1 + n10, n11, 0, 1, 1])/
    (-1 + n10) + ((1 - d + n11 + n7)*j[p4a, 0, 0, 1 + n3, n4, 0, n6, n7, n8, 
      0, n10, -1 + n11, 0, 1, 1])/(-1 + n11) + j[p4a, 0, 0, 1 + n3, n4, 0, 
    n6, n7, n8, 0, n10, n11, 0, 0, 1] + 
   (n7*j[p4a, 0, 0, 1 + n3, n4, 0, n6, 1 + n7, n8, 0, -1 + n10, n11, 0, 0, 
      1])/(-1 + n10) + (n7*j[p4a, 0, 0, 1 + n3, n4, 0, n6, 1 + n7, n8, 0, 
      n10, -1 + n11, 0, 0, 1])/(-1 + n11) + 
   (n6*j[p4a, 0, 0, 1 + n3, n4, 0, 1 + n6, n7, -1 + n8, 0, -1 + n10, n11, 0, 
      1, 1])/(-1 + n10), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n1 == 0 && n12 == 0 && n13 == 1 && 
    n14 == 1 && n2 == 0 && n6 == 1 && n9 == 0 && 
     !(n10 == 1 || n11 == 1 || n5 == 0) -> 
  (n8*j[p4a, 0, -1, n3, n4, 1 + n5, 1, n7, 1 + n8, 0, n10, -1 + n11, 0, 1, 
      1])/(-1 + n11) + j[p4a, 0, -1, n3, n4, 1 + n5, 2, n7, n8, 0, -1 + n10, 
     n11, 0, 1, 1]/(1 - n10) - j[p4a, 0, 0, -1 + n3, n4, 1 + n5, 1, n7, n8, 
    0, n10, n11, 0, 1, 1] - (n7*j[p4a, 0, 0, -1 + n3, n4, 1 + n5, 1, 1 + n7, 
      n8, 0, -1 + n10, n11, 0, 1, 1])/(-1 + n10) - 
   (n7*j[p4a, 0, 0, -1 + n3, n4, 1 + n5, 1, 1 + n7, n8, 0, n10, -1 + n11, 0, 
      1, 1])/(-1 + n11) + j[p4a, 0, 0, -1 + n3, n4, 1 + n5, 2, n7, n8, 0, 
     -1 + n10, n11, 0, 1, 1]/(1 - n10) - 
   (n4*j[p4a, 0, 0, -1 + n3, 1 + n4, 1 + n5, 1, n7, n8, 0, -1 + n10, n11, 0, 
      1, 1])/(-1 + n10) - (n4*j[p4a, 0, 0, -1 + n3, 1 + n4, 1 + n5, 1, n7, 
      n8, 0, n10, -1 + n11, 0, 1, 1])/(-1 + n11) + 
   j[p4a, 0, 0, n3, -1 + n4, 1 + n5, 1, n7, n8, 0, n10, n11, 0, 1, 1] + 
   (n8*j[p4a, 0, 0, n3, -1 + n4, 1 + n5, 1, n7, 1 + n8, 0, n10, -1 + n11, 0, 
      1, 1])/(-1 + n11) + (n7*j[p4a, 0, 0, n3, -1 + n4, 1 + n5, 1, 1 + n7, 
      n8, 0, -1 + n10, n11, 0, 1, 1])/(-1 + n10) + 
   (n7*j[p4a, 0, 0, n3, -1 + n4, 1 + n5, 1, 1 + n7, n8, 0, n10, -1 + n11, 0, 
      1, 1])/(-1 + n11) - (n7*j[p4a, 0, 0, n3, n4, n5, 1, 1 + n7, n8, 0, 
      -1 + n10, n11, 0, 1, 1])/(-1 + n10) - 
   (n7*j[p4a, 0, 0, n3, n4, n5, 1, 1 + n7, n8, 0, n10, -1 + n11, 0, 1, 1])/
    (-1 + n11) - (n8*j[p4a, 0, 0, n3, n4, 1 + n5, 0, n7, 1 + n8, 0, n10, 
      -1 + n11, 0, 1, 1])/(-1 + n11) - 
   (n8*j[p4a, 0, 0, n3, n4, 1 + n5, 1, -1 + n7, 1 + n8, 0, n10, -1 + n11, 0, 
      1, 1])/(-1 + n11) + ((1 - n3 + n4)*j[p4a, 0, 0, n3, n4, 1 + n5, 1, n7, 
      n8, 0, -1 + n10, n11, 0, 1, 1])/(-1 + n10) + 
   ((-n3 + n4 - n8)*j[p4a, 0, 0, n3, n4, 1 + n5, 1, n7, n8, 0, n10, -1 + n11, 
      0, 1, 1])/(-1 + n11) + j[p4a, 0, 0, n3, n4, 1 + n5, 1, n7, n8, 0, n10, 
    n11, 0, 0, 1] + (n8*j[p4a, 0, 0, n3, n4, 1 + n5, 1, n7, 1 + n8, 0, n10, 
      -1 + n11, -1, 1, 1])/(-1 + n11) - 
   (n8*j[p4a, 0, 0, n3, n4, 1 + n5, 1, n7, 1 + n8, 0, n10, -1 + n11, 0, 0, 
      1])/(-1 + n11) + (n7*j[p4a, 0, 0, n3, n4, 1 + n5, 1, 1 + n7, n8, 0, 
      -1 + n10, n11, 0, 0, 1])/(-1 + n10) + 
   (n7*j[p4a, 0, 0, n3, n4, 1 + n5, 1, 1 + n7, n8, 0, n10, -1 + n11, 0, 0, 
      1])/(-1 + n11) + j[p4a, 0, 0, n3, n4, 1 + n5, 2, -1 + n7, n8, 0, 
     -1 + n10, n11, 0, 1, 1]/(-1 + n10) + 
   j[p4a, 0, 0, n3, n4, 1 + n5, 2, n7, -1 + n8, 0, -1 + n10, n11, 0, 1, 1]/
    (-1 + n10) + j[p4a, 0, 0, n3, n4, 1 + n5, 2, n7, n8, 0, -1 + n10, n11, 
     -1, 1, 1]/(1 - n10) + j[p4a, 0, 0, n3, n4, 1 + n5, 2, n7, n8, 0, 
     -1 + n10, n11, 0, 0, 1]/(-1 + n10) + 
   j[p4a, 0, 0, n3, n4, 1 + n5, 2, n7, n8, 0, -1 + n10, n11, 0, 1, 0]/
    (-1 + n10) + (n4*j[p4a, 0, 0, n3, 1 + n4, 1 + n5, 1, n7, n8, 0, -1 + n10, 
      n11, 0, 1, 0])/(-1 + n10) + 
   (n4*j[p4a, 0, 0, n3, 1 + n4, 1 + n5, 1, n7, n8, 0, n10, -1 + n11, 0, 1, 
      0])/(-1 + n11) + (n3*j[p4a, 0, 0, 1 + n3, -1 + n4, 1 + n5, 1, n7, n8, 
      0, -1 + n10, n11, 0, 1, 1])/(-1 + n10) + 
   (n3*j[p4a, 0, 0, 1 + n3, -1 + n4, 1 + n5, 1, n7, n8, 0, n10, -1 + n11, 0, 
      1, 1])/(-1 + n11) - (n3*j[p4a, 0, 0, 1 + n3, n4, 1 + n5, 1, n7, n8, 0, 
      -1 + n10, n11, 0, 1, 0])/(-1 + n10) - 
   (n3*j[p4a, 0, 0, 1 + n3, n4, 1 + n5, 1, n7, n8, 0, n10, -1 + n11, 0, 1, 
      0])/(-1 + n11), j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?Positive, (n4_)?Positive, (n5_)?NonPositive, (n6_)?Positive, 
    (n7_)?Positive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n6 == 1 && 
    n8 == 1 &&  !(n2 == 0 || n4 == 1 || n9 == 0) -> 
  j[p4a, -1 + n1, n2, n3, n4, n5, 1, n7, 1, 1 + n9, 1, 1, 0, 1, 1] + 
   (n3*j[p4a, -1 + n1, n2, 1 + n3, -1 + n4, n5, 1, n7, 1, 1 + n9, 1, 1, 0, 1, 
      1])/(-1 + n4) + j[p4a, -1 + n1, 1 + n2, n3, -1 + n4, n5, 1, -1 + n7, 1, 
     1 + n9, 1, 2, 0, 1, 1]/(-1 + n4) + 
   j[p4a, -1 + n1, 1 + n2, n3, -1 + n4, n5, 1, -1 + n7, 2, 1 + n9, 1, 1, 0, 
     1, 1]/(-1 + n4) + j[p4a, -1 + n1, 1 + n2, n3, -1 + n4, n5, 1, n7, 1, 
     1 + n9, 0, 2, 0, 1, 1]/(1 - n4) + 
   ((1 - d + n3 + n4 + 2*n7)*j[p4a, -1 + n1, 1 + n2, n3, -1 + n4, n5, 1, n7, 
      1, 1 + n9, 1, 1, 0, 1, 1])/(-1 + n4) - j[p4a, -1 + n1, 1 + n2, n3, n4, 
    -1 + n5, 1, n7, 1, 1 + n9, 1, 1, 0, 1, 1] + j[p4a, -1 + n1, 1 + n2, n3, 
    n4, n5, 1, -1 + n7, 1, 1 + n9, 1, 1, 0, 1, 1] + 
   (n3*j[p4a, -1 + n1, 1 + n2, 1 + n3, -1 + n4, n5, 1, -1 + n7, 1, 1 + n9, 1, 
      1, 0, 1, 1])/(-1 + n4) - 
   (n3*j[p4a, -1 + n1, 1 + n2, 1 + n3, -1 + n4, n5, 1, n7, 1, 1 + n9, 1, 1, 
      0, 0, 1])/(-1 + n4) - j[p4a, n1, -1 + n2, n3, n4, n5, 1, n7, 1, 1 + n9, 
    1, 1, 0, 1, 1] + ((-2 + d - n4 - n7)*j[p4a, n1, n2, n3, -1 + n4, n5, 1, 
      n7, 1, 1 + n9, 1, 1, 0, 1, 1])/(-1 + n4) + 
   j[p4a, n1, n2, n3, -1 + n4, n5, 1, n7, 2, 1 + n9, 1, 0, 0, 1, 1]/
    (1 - n4) + (n7*j[p4a, n1, n2, n3, -1 + n4, n5, 1, 1 + n7, 1, 1 + n9, 0, 
      1, 0, 1, 1])/(-1 + n4) - 
   (n7*j[p4a, n1, n2, n3, -1 + n4, n5, 1, 1 + n7, 1, 1 + n9, 1, 0, 0, 1, 1])/
    (-1 + n4) + j[p4a, n1, n2, n3, n4, -1 + n5, 1, n7, 1, 1 + n9, 1, 1, 0, 1, 
    1] + j[p4a, n1, n2, n3, n4, n5, 0, n7, 1, 1 + n9, 1, 1, 0, 1, 1] + 
   j[p4a, n1, n2, n3, n4, n5, 1, n7, 1, 1 + n9, 0, 1, 0, 1, 1] - 
   j[p4a, n1, n2, n3, n4, n5, 1, n7, 1, 1 + n9, 1, 0, 0, 1, 1] - 
   (n3*j[p4a, n1, n2, 1 + n3, -1 + n4, n5, 1, -1 + n7, 1, 1 + n9, 1, 1, 0, 1, 
      1])/(-1 + n4) - (n3*j[p4a, n1, n2, 1 + n3, -1 + n4, n5, 1, n7, 0, 
      1 + n9, 1, 1, 0, 1, 1])/(-1 + n4) + 
   (n3*j[p4a, n1, n2, 1 + n3, -1 + n4, n5, 1, n7, 1, 1 + n9, 0, 1, 0, 1, 1])/
    (-1 + n4) - (n3*j[p4a, n1, n2, 1 + n3, -1 + n4, n5, 1, n7, 1, 1 + n9, 1, 
      0, 0, 1, 1])/(-1 + n4) + 
   (n3*j[p4a, n1, n2, 1 + n3, -1 + n4, n5, 1, n7, 1, 1 + n9, 1, 1, -1, 1, 1])/
    (-1 + n4) - (n3*j[p4a, n1, n2, 1 + n3, -1 + n4, n5, 1, n7, 1, 1 + n9, 1, 
      1, 0, 1, 1])/(-1 + n4), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n10 == 1 && n11 == 1 && n13 == 1 && 
    n14 == 1 && n5 == 0 && n6 == 1 && n8 == 1 && 
     !(n12 == 0 || n2 == 0 || n7 == 1) -> 
  -j[p4a, -1 + n1, n2, n3, n4, 0, 1, n7, 1, n9, 1, 1, 1 + n12, 1, 1] - 
   (n3*j[p4a, -1 + n1, n2, 1 + n3, n4, 0, 1, -1 + n7, 1, n9, 1, 1, 1 + n12, 
      1, 1])/(-1 + n7) - j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, 0, 1, n7, 1, 
    n9, 1, 1, 1 + n12, 1, 1] + ((4 - 2*d + n1 + 2*n12 + n4 + 2*n7)*
     j[p4a, -1 + n1, 1 + n2, n3, n4, 0, 1, -1 + n7, 1, n9, 1, 1, 1 + n12, 1, 
      1])/(-1 + n7) + j[p4a, -1 + n1, 1 + n2, n3, n4, 0, 1, -1 + n7, 1, n9, 
     1, 2, 1 + n12, 1, 1]/(1 - n7) + j[p4a, -1 + n1, 1 + n2, n3, n4, 0, 1, 
    n7, 0, n9, 1, 1, 1 + n12, 1, 1] + j[p4a, -1 + n1, 1 + n2, n3, n4, 0, 1, 
    n7, 1, n9, 1, 1, 1 + n12, 0, 1] - 
   (n4*j[p4a, -1 + n1, 1 + n2, n3, 1 + n4, 0, 0, -1 + n7, 1, n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n7) + 
   (n4*j[p4a, -1 + n1, 1 + n2, n3, 1 + n4, 0, 1, -1 + n7, 0, n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n7) + 
   (n3*j[p4a, -1 + n1, 1 + n2, 1 + n3, n4, 0, 1, -2 + n7, 1, n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n7) + 
   (2*n3*j[p4a, -1 + n1, 1 + n2, 1 + n3, n4, 0, 1, -1 + n7, 0, n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n7) - 
   (n3*j[p4a, -1 + n1, 1 + n2, 1 + n3, n4, 0, 1, -1 + n7, 1, n9, 1, 1, n12, 
      1, 1])/(-1 + n7) + (n3*j[p4a, -1 + n1, 1 + n2, 1 + n3, n4, 0, 1, 
      -1 + n7, 1, n9, 1, 1, 1 + n12, 0, 1])/(-1 + n7) + 
   ((-1 - n2)*j[p4a, -1 + n1, 2 + n2, -1 + n3, n4, 0, 1, -1 + n7, 1, n9, 1, 
      1, 1 + n12, 1, 1])/(-1 + n7) + 
   ((1 + n2)*j[p4a, -1 + n1, 2 + n2, n3, n4, 0, 1, -2 + n7, 1, n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n7) + 
   ((1 + n2)*j[p4a, -1 + n1, 2 + n2, n3, n4, 0, 1, -1 + n7, 0, n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n7) + 
   ((-1 - n2)*j[p4a, -1 + n1, 2 + n2, n3, n4, 0, 1, -1 + n7, 1, n9, 1, 1, 
      n12, 1, 1])/(-1 + n7) + (2*(1 + n2)*j[p4a, -1 + n1, 2 + n2, n3, n4, 0, 
      1, -1 + n7, 1, n9, 1, 1, 1 + n12, 0, 1])/(-1 + n7) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, 0, 1, -1 + n7, 1, n9, 1, 1, n12, 1, 1])/
    (-1 + n7) + (n12*j[p4a, n1, 1 + n2, n3, n4, 0, 1, -1 + n7, 0, n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n7) + j[p4a, n1, 1 + n2, n3, n4, 0, 1, -1 + n7, 
     0, n9, 1, 2, n12, 1, 1]/(-1 + n7) + 
   ((2 - d + n12 + n4 + n7)*j[p4a, n1, 1 + n2, n3, n4, 0, 1, -1 + n7, 1, n9, 
      1, 1, n12, 1, 1])/(-1 + n7) + 
   ((-1 + n1 - n12)*j[p4a, n1, 1 + n2, n3, n4, 0, 1, -1 + n7, 1, n9, 1, 1, 
      1 + n12, 0, 1])/(-1 + n7) + 
   ((1 - n1)*j[p4a, n1, 1 + n2, n3, n4, 0, 1, -1 + n7, 1, n9, 1, 1, 1 + n12, 
      1, 1])/(-1 + n7) + j[p4a, n1, 1 + n2, n3, n4, 0, 1, n7, 0, n9, 1, 1, 
    n12, 1, 1] - (n4*j[p4a, n1, 1 + n2, n3, 1 + n4, 0, 0, -1 + n7, 1, n9, 1, 
      1, n12, 1, 1])/(-1 + n7) + 
   (n4*j[p4a, n1, 1 + n2, n3, 1 + n4, 0, 1, -1 + n7, 0, n9, 1, 1, n12, 1, 1])/
    (-1 + n7) + (n3*j[p4a, n1, 1 + n2, 1 + n3, n4, 0, 1, -2 + n7, 1, n9, 1, 
      1, n12, 1, 1])/(-1 + n7) + 
   (2*n3*j[p4a, n1, 1 + n2, 1 + n3, n4, 0, 1, -1 + n7, 0, n9, 1, 1, n12, 1, 
      1])/(-1 + n7) - (n3*j[p4a, n1, 1 + n2, 1 + n3, n4, 0, 1, -1 + n7, 1, 
      n9, 1, 1, -1 + n12, 1, 1])/(-1 + n7) + 
   (n3*j[p4a, n1, 1 + n2, 1 + n3, n4, 0, 1, -1 + n7, 1, n9, 1, 1, n12, 0, 1])/
    (-1 + n7), j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n13 == 1 && n14 == 1 && n3 == 1 && n6 == 1 && 
    n8 == 1 &&  !(n12 == 0 || n4 == 1 || n5 == 0) -> 
  -j[p4a, n1, -1 + n2, 0, n4, 1 + n5, 1, n7, 1, n9, 1, 1, 1 + n12, 1, 1] + 
   ((-5 + d - n1 - n12 - n5)*j[p4a, n1, -1 + n2, 1, -1 + n4, 1 + n5, 1, n7, 
      1, n9, 1, 1, 1 + n12, 1, 1])/(-1 + n4) + 
   j[p4a, n1, -1 + n2, 1, -1 + n4, 1 + n5, 1, n7, 2, n9, 1, 1, 1 + n12, 0, 1]/
    (1 - n4) + ((-1 - n5)*j[p4a, n1, -1 + n2, 1, -1 + n4, 2 + n5, 1, n7, 1, 
      n9, 1, 1, 1 + n12, 0, 1])/(-1 + n4) + 
   ((1 + n5)*j[p4a, n1, -1 + n2, 1, -1 + n4, 2 + n5, 1, n7, 1, n9, 1, 1, 
      1 + n12, 1, 0])/(-1 + n4) - j[p4a, n1, -1 + n2, 1, n4, n5, 1, n7, 1, 
    n9, 1, 1, 1 + n12, 1, 1] + j[p4a, n1, -1 + n2, 1, n4, 1 + n5, 1, -1 + n7, 
    1, n9, 1, 1, 1 + n12, 1, 1] + j[p4a, n1, -1 + n2, 1, n4, 1 + n5, 1, n7, 
    1, n9, 1, 1, 1 + n12, 1, 0] + j[p4a, n1, -1 + n2, 2, -1 + n4, 1 + n5, 1, 
     -1 + n7, 1, n9, 1, 1, 1 + n12, 1, 1]/(-1 + n4) + 
   j[p4a, n1, -1 + n2, 2, -1 + n4, 1 + n5, 1, n7, 1, n9, 1, 1, 1 + n12, 0, 1]/
    (1 - n4) + ((-1 - n12 + n2)*j[p4a, n1, n2, 0, -1 + n4, 1 + n5, 1, n7, 1, 
      n9, 1, 1, 1 + n12, 1, 1])/(-1 + n4) + 
   ((1 + 2*n12 - n2)*j[p4a, n1, n2, 1, -1 + n4, 1 + n5, 1, -1 + n7, 1, n9, 1, 
      1, 1 + n12, 1, 1])/(-1 + n4) + j[p4a, n1, n2, 1, -1 + n4, 1 + n5, 1, 
     -1 + n7, 1, n9, 1, 2, n12, 1, 1]/(-1 + n4) + 
   j[p4a, n1, n2, 1, -1 + n4, 1 + n5, 1, -1 + n7, 2, n9, 1, 1, n12, 1, 1]/
    (-1 + n4) + ((1 + n12 - n2)*j[p4a, n1, n2, 1, -1 + n4, 1 + n5, 1, n7, 0, 
      n9, 1, 1, 1 + n12, 1, 1])/(-1 + n4) + 
   j[p4a, n1, n2, 1, -1 + n4, 1 + n5, 1, n7, 1, n9, 0, 2, n12, 1, 1]/
    (1 - n4) + ((1 - d + n2 + n4 + 2*n7)*j[p4a, n1, n2, 1, -1 + n4, 1 + n5, 
      1, n7, 1, n9, 1, 1, n12, 1, 1])/(-1 + n4) + 
   ((2 + n12 - 2*n2)*j[p4a, n1, n2, 1, -1 + n4, 1 + n5, 1, n7, 1, n9, 1, 1, 
      1 + n12, 0, 1])/(-1 + n4) + j[p4a, n1, n2, 1, n4, 1 + n5, 1, -1 + n7, 
    1, n9, 1, 1, n12, 1, 1] + j[p4a, n1, n2, 2, -1 + n4, 1 + n5, 1, -1 + n7, 
     1, n9, 1, 1, n12, 1, 1]/(-1 + n4) + 
   j[p4a, n1, n2, 2, -1 + n4, 1 + n5, 1, n7, 1, n9, 1, 1, n12, 0, 1]/
    (1 - n4) - (n1*j[p4a, 1 + n1, -1 + n2, 1, -1 + n4, 1 + n5, 1, n7, 1, n9, 
      1, 1, 1 + n12, 0, 1])/(-1 + n4) + 
   (n1*j[p4a, 1 + n1, -1 + n2, 1, -1 + n4, 1 + n5, 1, n7, 1, n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n4), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n1 == 0 && n11 == 1 && n12 == 0 && 
    n13 == 1 && n14 == 1 && n2 == 0 && n5 == 0 && n9 == 0 && 
     !(n6 == 1 || n8 == 1) -> 
  -((n4*j[p4a, 0, 0, n3, 1 + n4, 0, -1 + n6, n7, n8, 0, n10, 1, 0, 1, 1])/
     (-1 + n6)) - (n4*j[p4a, 0, 0, n3, 1 + n4, 0, n6, n7, -1 + n8, 0, n10, 1, 
      0, 1, 1])/(-1 + n8) + ((1 - d + n4 + n6)*j[p4a, 0, 0, 1 + n3, n4, 0, 
      -1 + n6, n7, n8, 0, n10, 1, 0, 1, 1])/(-1 + n6) + 
   j[p4a, 0, 0, 1 + n3, n4, 0, n6, -1 + n7, -1 + n8, 0, n10, 2, 0, 1, 1]/
    (1 - n8) + j[p4a, 0, 0, 1 + n3, n4, 0, n6, n7, -1 + n8, 0, -1 + n10, 2, 
     0, 1, 1]/(-1 + n8) + ((-4 + 2*d - 2*n3 - n4 - 2*n7 - n8)*
     j[p4a, 0, 0, 1 + n3, n4, 0, n6, n7, -1 + n8, 0, n10, 1, 0, 1, 1])/
    (-1 + n8) + j[p4a, 0, 0, 1 + n3, n4, 0, n6, n7, n8, 0, n10, 1, 0, 1, 0] + 
   (n4*j[p4a, 0, 0, 1 + n3, 1 + n4, 0, -1 + n6, n7, n8, 0, n10, 1, 0, 1, 0])/
    (-1 + n6) + (n4*j[p4a, 0, 0, 1 + n3, 1 + n4, 0, n6, n7, -1 + n8, 0, n10, 
      1, 0, 1, 0])/(-1 + n8), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n1 == 0 && n10 == 1 && n12 == 0 && 
    n13 == 1 && n14 == 1 && n2 == 0 && n5 == 0 && n9 == 0 && 
     !(n6 == 1 || n8 == 1) -> 
  -((n4*j[p4a, 0, 0, n3, 1 + n4, 0, -1 + n6, n7, n8, 0, 1, n11, 0, 1, 1])/
     (-1 + n6)) - (n4*j[p4a, 0, 0, n3, 1 + n4, 0, n6, n7, -1 + n8, 0, 1, n11, 
      0, 1, 1])/(-1 + n8) + ((1 - d + n4 + n6)*j[p4a, 0, 0, 1 + n3, n4, 0, 
      -1 + n6, n7, n8, 0, 1, n11, 0, 1, 1])/(-1 + n6) - 
   (n11*j[p4a, 0, 0, 1 + n3, n4, 0, n6, -1 + n7, -1 + n8, 0, 1, 1 + n11, 0, 
      1, 1])/(-1 + n8) + (n11*j[p4a, 0, 0, 1 + n3, n4, 0, n6, n7, -1 + n8, 0, 
      0, 1 + n11, 0, 1, 1])/(-1 + n8) + 
   ((-3 + 2*d - n11 - 2*n3 - n4 - 2*n7 - n8)*j[p4a, 0, 0, 1 + n3, n4, 0, n6, 
      n7, -1 + n8, 0, 1, n11, 0, 1, 1])/(-1 + n8) + 
   j[p4a, 0, 0, 1 + n3, n4, 0, n6, n7, n8, 0, 1, n11, 0, 1, 0] + 
   (n4*j[p4a, 0, 0, 1 + n3, 1 + n4, 0, -1 + n6, n7, n8, 0, 1, n11, 0, 1, 0])/
    (-1 + n6) + (n4*j[p4a, 0, 0, 1 + n3, 1 + n4, 0, n6, n7, -1 + n8, 0, 1, 
      n11, 0, 1, 0])/(-1 + n8), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n11 == 1 && n12 == 0 && n13 == 1 && 
    n14 == 1 && n2 == 0 && n5 == 0 && n8 == 1 && n9 == 0 && n10 != 1 -> 
  -((n7*j[p4a, n1, 0, n3, n4, 0, n6, 1 + n7, 1, 0, -1 + n10, 1, 0, 1, 1])/
     (-1 + n10)) - (2*n7*j[p4a, n1, 0, n3, n4, 0, n6, 1 + n7, 1, 0, n10, 0, 
      0, 1, 1])/(d - 2*n10 - 2*n7) + ((2*n6 - d*n6 + 2*n4*n6 + 2*n6^2)*
     j[p4a, n1, 0, n3, n4, 0, 1 + n6, n7, 1, 0, -1 + n10, 1, 0, 1, 1])/
    ((-1 + n10)*(-d + 2*n10 + 2*n7)) + 
   ((2*n4 - d*n4 + 2*n4^2 + 2*n4*n6)*j[p4a, n1, 0, n3, 1 + n4, 0, n6, n7, 1, 
      0, -1 + n10, 1, 0, 1, 1])/((-1 + n10)*(-d + 2*n10 + 2*n7)) - 
   (2*n4*n6*j[p4a, n1, 0, n3, 1 + n4, 0, 1 + n6, n7, 0, 0, -1 + n10, 1, 0, 1, 
      1])/((-1 + n10)*(-d + 2*n10 + 2*n7)) + 
   (2*n3*n6*j[p4a, n1, 0, 1 + n3, -1 + n4, 0, 1 + n6, n7, 1, 0, -1 + n10, 1, 
      0, 1, 1])/((-1 + n10)*(-d + 2*n10 + 2*n7)) + 
   ((6*n3 - 3*d*n3 + 2*n3^2 + 4*n3*n4 + 2*n3*n6)*j[p4a, n1, 0, 1 + n3, n4, 0, 
      n6, n7, 1, 0, -1 + n10, 1, 0, 1, 1])/((-1 + n10)*(-d + 2*n10 + 2*n7)) - 
   (2*n3*n6*j[p4a, n1, 0, 1 + n3, n4, 0, 1 + n6, n7, 0, 0, -1 + n10, 1, 0, 1, 
      1])/((-1 + n10)*(-d + 2*n10 + 2*n7)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n1 == 0 && n10 == 1 && n12 == 0 && 
    n13 == 1 && n14 == 1 && n5 == 0 && n8 == 1 && n9 == 0 && 
     !(n11 == 1 || n2 == 0 || n6 == 1) -> 
  j[p4a, 0, n2, n3, n4, 0, n6, n7, 2, 0, 1, -1 + n11, 0, 1, 1]/(-1 + n11) - 
   (n7*j[p4a, 0, n2, n3, n4, 0, n6, 1 + n7, 1, 0, 1, -1 + n11, 0, 1, 1])/
    (-1 + n11) - (n3*j[p4a, 0, n2, 1 + n3, n4, 0, n6, n7, 1, 0, 1, -1 + n11, 
      0, 1, 1])/(-1 + n11) - j[p4a, 0, 1 + n2, -1 + n3, n4, 0, n6, n7, 1, 0, 
    1, n11, 0, 1, 1] - (n7*j[p4a, 0, 1 + n2, -1 + n3, n4, 0, n6, 1 + n7, 1, 
      0, 1, -1 + n11, 0, 1, 1])/(-1 + n11) - 
   (n4*j[p4a, 0, 1 + n2, -1 + n3, 1 + n4, 0, -1 + n6, n7, 1, 0, 1, n11, 0, 1, 
      1])/(-1 + n6) - (n4*j[p4a, 0, 1 + n2, -1 + n3, 1 + n4, 0, n6, n7, 1, 0, 
      1, -1 + n11, 0, 1, 1])/(-1 + n11) + 
   ((1 - d + n4 + n6)*j[p4a, 0, 1 + n2, n3, n4, 0, -1 + n6, n7, 1, 0, 1, n11, 
      0, 1, 1])/(-1 + n6) + j[p4a, 0, 1 + n2, n3, n4, 0, n6, -1 + n7, 2, 0, 
     1, -1 + n11, 0, 1, 1]/(1 - n11) + j[p4a, 0, 1 + n2, n3, n4, 0, n6, n7, 
    0, 0, 1, n11, 0, 1, 1] + j[p4a, 0, 1 + n2, n3, n4, 0, n6, n7, 1, 0, 0, 
    n11, 0, 1, 1] - (2*n3*j[p4a, 0, 1 + n2, n3, n4, 0, n6, n7, 1, 0, 1, 
      -1 + n11, 0, 1, 1])/(-1 + n11) + j[p4a, 0, 1 + n2, n3, n4, 0, n6, n7, 
    1, 0, 1, n11, 0, 0, 1] + j[p4a, 0, 1 + n2, n3, n4, 0, n6, n7, 1, 0, 1, 
    n11, 0, 1, 0] - j[p4a, 0, 1 + n2, n3, n4, 0, n6, n7, 1, 0, 1, n11, 0, 1, 
    1] + j[p4a, 0, 1 + n2, n3, n4, 0, n6, n7, 2, 0, 1, -1 + n11, -1, 1, 1]/
    (-1 + n11) + j[p4a, 0, 1 + n2, n3, n4, 0, n6, n7, 2, 0, 1, -1 + n11, 0, 
     0, 1]/(1 - n11) + (n7*j[p4a, 0, 1 + n2, n3, n4, 0, n6, 1 + n7, 0, 0, 1, 
      -1 + n11, 0, 1, 1])/(-1 + n11) + 
   (n7*j[p4a, 0, 1 + n2, n3, n4, 0, n6, 1 + n7, 1, 0, 1, -1 + n11, 0, 0, 1])/
    (-1 + n11) - (n4*j[p4a, 0, 1 + n2, n3, 1 + n4, 0, -1 + n6, n7, 1, 0, 1, 
      -1 + n11, 0, 1, 1])/(-1 + n11) + 
   (n4*j[p4a, 0, 1 + n2, n3, 1 + n4, 0, -1 + n6, n7, 1, 0, 1, n11, 0, 1, 0])/
    (-1 + n6) + (n4*j[p4a, 0, 1 + n2, n3, 1 + n4, 0, n6, n7, 0, 0, 1, 
      -1 + n11, 0, 1, 1])/(-1 + n11) + 
   (n4*j[p4a, 0, 1 + n2, n3, 1 + n4, 0, n6, n7, 1, 0, 1, -1 + n11, 0, 1, 0])/
    (-1 + n11) + (n3*j[p4a, 0, 1 + n2, 1 + n3, n4, 0, n6, -1 + n7, 1, 0, 1, 
      -1 + n11, 0, 1, 1])/(-1 + n11) + 
   (2*n3*j[p4a, 0, 1 + n2, 1 + n3, n4, 0, n6, n7, 0, 0, 1, -1 + n11, 0, 1, 
      1])/(-1 + n11) - (n3*j[p4a, 0, 1 + n2, 1 + n3, n4, 0, n6, n7, 1, 0, 1, 
      -1 + n11, -1, 1, 1])/(-1 + n11) + 
   (n3*j[p4a, 0, 1 + n2, 1 + n3, n4, 0, n6, n7, 1, 0, 1, -1 + n11, 0, 0, 1])/
    (-1 + n11), j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n5 == 0 && 
    n8 == 1 && n9 == 0 &&  !(n2 == 0 || n6 == 1 || n7 == 1) -> 
  -((n6*j[p4a, n1, n2, n3, n4, 0, 1 + n6, -1 + n7, 1, 0, 1, 1, 0, 1, 1])/
     (-1 + n7)) - (n3*j[p4a, n1, n2, 1 + n3, n4, 0, n6, -1 + n7, 1, 0, 1, 1, 
      0, 1, 1])/(-1 + n7) - j[p4a, n1, 1 + n2, -1 + n3, n4, 0, n6, n7, 1, 0, 
    1, 1, 0, 1, 1] - (n6*j[p4a, n1, 1 + n2, -1 + n3, n4, 0, 1 + n6, -1 + n7, 
      1, 0, 1, 1, 0, 1, 1])/(-1 + n7) + 
   (n4*j[p4a, n1, 1 + n2, -1 + n3, 1 + n4, 0, -1 + n6, -1 + n7, 1, 0, 2, 1, 
      0, 1, 1])/((-1 + n6)*(-1 + n7)) - 
   (n4*j[p4a, n1, 1 + n2, -1 + n3, 1 + n4, 0, n6, -1 + n7, 1, 0, 1, 1, 0, 1, 
      1])/(-1 + n7) + ((-1 + d - n4 - n6)*j[p4a, n1, 1 + n2, n3, n4, 0, 
      -1 + n6, -1 + n7, 1, 0, 2, 1, 0, 1, 1])/((-1 + n6)*(-1 + n7)) + 
   ((-3 + d - 2*n2 - 2*n3 - n6)*j[p4a, n1, 1 + n2, n3, n4, 0, n6, -1 + n7, 1, 
      0, 1, 1, 0, 1, 1])/(-1 + n7) + j[p4a, n1, 1 + n2, n3, n4, 0, n6, 
     -1 + n7, 1, 0, 2, 1, 0, 1, 0]/(1 - n7) + 
   j[p4a, n1, 1 + n2, n3, n4, 0, n6, -1 + n7, 1, 0, 2, 1, 0, 1, 1]/
    (-1 + n7) + j[p4a, n1, 1 + n2, n3, n4, 0, n6, n7, 0, 0, 1, 1, 0, 1, 1] + 
   j[p4a, n1, 1 + n2, n3, n4, 0, n6, n7, 1, 0, 1, 1, 0, 0, 1] + 
   (n6*j[p4a, n1, 1 + n2, n3, n4, 0, 1 + n6, -2 + n7, 1, 0, 1, 1, 0, 1, 1])/
    (-1 + n7) + (n6*j[p4a, n1, 1 + n2, n3, n4, 0, 1 + n6, -1 + n7, 0, 0, 1, 
      1, 0, 1, 1])/(-1 + n7) - 
   (n6*j[p4a, n1, 1 + n2, n3, n4, 0, 1 + n6, -1 + n7, 1, 0, 1, 1, -1, 1, 1])/
    (-1 + n7) + (n6*j[p4a, n1, 1 + n2, n3, n4, 0, 1 + n6, -1 + n7, 1, 0, 1, 
      1, 0, 0, 1])/(-1 + n7) + 
   (n6*j[p4a, n1, 1 + n2, n3, n4, 0, 1 + n6, -1 + n7, 1, 0, 1, 1, 0, 1, 0])/
    (-1 + n7) - (n4*j[p4a, n1, 1 + n2, n3, 1 + n4, 0, -1 + n6, -1 + n7, 1, 0, 
      1, 1, 0, 1, 1])/(-1 + n7) - 
   (n4*j[p4a, n1, 1 + n2, n3, 1 + n4, 0, -1 + n6, -1 + n7, 1, 0, 2, 1, 0, 1, 
      0])/((-1 + n6)*(-1 + n7)) + 
   (n4*j[p4a, n1, 1 + n2, n3, 1 + n4, 0, n6, -1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (-1 + n7) + (n4*j[p4a, n1, 1 + n2, n3, 1 + n4, 0, n6, -1 + n7, 1, 0, 1, 
      1, 0, 1, 0])/(-1 + n7) + 
   (n3*j[p4a, n1, 1 + n2, 1 + n3, n4, 0, n6, -2 + n7, 1, 0, 1, 1, 0, 1, 1])/
    (-1 + n7) + (2*n3*j[p4a, n1, 1 + n2, 1 + n3, n4, 0, n6, -1 + n7, 0, 0, 1, 
      1, 0, 1, 1])/(-1 + n7) - 
   (n3*j[p4a, n1, 1 + n2, 1 + n3, n4, 0, n6, -1 + n7, 1, 0, 1, 1, -1, 1, 1])/
    (-1 + n7) + (n3*j[p4a, n1, 1 + n2, 1 + n3, n4, 0, n6, -1 + n7, 1, 0, 1, 
      1, 0, 0, 1])/(-1 + n7) + 
   ((-1 - n2)*j[p4a, n1, 2 + n2, -1 + n3, n4, 0, n6, -1 + n7, 1, 0, 1, 1, 0, 
      1, 1])/(-1 + n7) + ((1 + n2)*j[p4a, n1, 2 + n2, n3, n4, 0, n6, -2 + n7, 
      1, 0, 1, 1, 0, 1, 1])/(-1 + n7) + 
   ((1 + n2)*j[p4a, n1, 2 + n2, n3, n4, 0, n6, -1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (-1 + n7) + ((-1 - n2)*j[p4a, n1, 2 + n2, n3, n4, 0, n6, -1 + n7, 1, 0, 
      1, 1, -1, 1, 1])/(-1 + n7) + 
   (2*(1 + n2)*j[p4a, n1, 2 + n2, n3, n4, 0, n6, -1 + n7, 1, 0, 1, 1, 0, 0, 
      1])/(-1 + n7), j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?Positive, (n4_)?Positive, (n5_)?NonPositive, (n6_)?Positive, 
    (n7_)?Positive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n6 == 1 && n9 == 0 &&  !(n4 == 1 || n5 == 0 || n7 == 1) -> 
  (n3*n8*j[p4a, 0, -1, 1 + n3, -1 + n4, 1 + n5, 1, -1 + n7, 1 + n8, 0, n10, 
      1, 0, 1, 1])/((-1 + n4)*(-1 + n7)) + 
   (n10*n8*j[p4a, 0, 0, -1 + n3, -1 + n4, 1 + n5, 1, -1 + n7, 1 + n8, 0, 
      1 + n10, 1, 0, 1, 1])/((-1 + n4)*(-1 + n7)) + 
   (n8*j[p4a, 0, 0, -1 + n3, -1 + n4, 1 + n5, 1, n7, 1 + n8, 0, n10, 1, 0, 1, 
      1])/(-1 + n4) + (n8*j[p4a, 0, 0, -1 + n3, -1 + n4, 1 + n5, 2, -1 + n7, 
      1 + n8, 0, n10, 1, 0, 1, 1])/((-1 + n4)*(-1 + n7)) + 
   (n10*j[p4a, 0, 0, -1 + n3, n4, 1 + n5, 1, -1 + n7, n8, 0, 1 + n10, 1, 0, 
      1, 1])/(-1 + n7) + (n8*j[p4a, 0, 0, -1 + n3, n4, 1 + n5, 1, -1 + n7, 
      1 + n8, 0, n10, 1, 0, 1, 1])/(-1 + n7) + 
   j[p4a, 0, 0, -1 + n3, n4, 1 + n5, 2, -1 + n7, n8, 0, n10, 1, 0, 1, 1]/
    (-1 + n7) + (n10*j[p4a, 0, 0, n3, -1 + n4, 1 + n5, 1, -2 + n7, n8, 0, 
      1 + n10, 2, 0, 1, 1])/((-1 + n4)*(-1 + n7)) + 
   ((-1 - n10 + n7)*j[p4a, 0, 0, n3, -1 + n4, 1 + n5, 1, -1 + n7, n8, 0, n10, 
      2, 0, 1, 1])/((-1 + n4)*(-1 + n7)) + 
   (n10*(1 - 2*d + 2*n3 + n4 + n5 + 2*n7 + n8)*j[p4a, 0, 0, n3, -1 + n4, 
      1 + n5, 1, -1 + n7, n8, 0, 1 + n10, 1, 0, 1, 1])/
    ((-1 + n4)*(-1 + n7)) + ((-(d*n8) + n10*n8 + 2*n3*n8 + n7*n8)*
     j[p4a, 0, 0, n3, -1 + n4, 1 + n5, 1, -1 + n7, 1 + n8, 0, n10, 1, 0, 1, 
      1])/((-1 + n4)*(-1 + n7)) - 
   (n10*n8*j[p4a, 0, 0, n3, -1 + n4, 1 + n5, 1, -1 + n7, 1 + n8, 0, 1 + n10, 
      1, 0, 1, 1])/((-1 + n4)*(-1 + n7)) + 
   j[p4a, 0, 0, n3, -1 + n4, 1 + n5, 1, n7, n8, 0, -1 + n10, 2, 0, 1, 1]/
    (1 - n4) + ((-d + n3 + n4 + 2*n7)*j[p4a, 0, 0, n3, -1 + n4, 1 + n5, 1, 
      n7, n8, 0, n10, 1, 0, 1, 1])/(-1 + n4) - 
   (n8*j[p4a, 0, 0, n3, -1 + n4, 1 + n5, 1, n7, 1 + n8, 0, n10, 1, 0, 0, 1])/
    (-1 + n4) + j[p4a, 0, 0, n3, -1 + n4, 1 + n5, 2, -2 + n7, n8, 0, n10, 2, 
     0, 1, 1]/((-1 + n4)*(-1 + n7)) - j[p4a, 0, 0, n3, -1 + n4, 1 + n5, 2, 
     -1 + n7, n8, 0, -1 + n10, 2, 0, 1, 1]/((-1 + n4)*(-1 + n7)) + 
   ((1 - 2*d + 2*n3 + n4 + n5 + 2*n7 + n8)*j[p4a, 0, 0, n3, -1 + n4, 1 + n5, 
      2, -1 + n7, n8, 0, n10, 1, 0, 1, 1])/((-1 + n4)*(-1 + n7)) - 
   (n8*j[p4a, 0, 0, n3, -1 + n4, 1 + n5, 2, -1 + n7, 1 + n8, 0, n10, 1, 0, 1, 
      0])/((-1 + n4)*(-1 + n7)) + 
   (n10*(1 + n5)*j[p4a, 0, 0, n3, -1 + n4, 2 + n5, 1, -1 + n7, n8, 0, 
      1 + n10, 1, 0, 0, 1])/((-1 + n4)*(-1 + n7)) - 
   (n10*(1 + n5)*j[p4a, 0, 0, n3, -1 + n4, 2 + n5, 1, -1 + n7, n8, 0, 
      1 + n10, 1, 0, 1, 0])/((-1 + n4)*(-1 + n7)) + 
   ((1 + n5)*j[p4a, 0, 0, n3, -1 + n4, 2 + n5, 2, -1 + n7, n8, 0, n10, 1, 0, 
      0, 1])/((-1 + n4)*(-1 + n7)) + 
   ((-1 - n5)*j[p4a, 0, 0, n3, -1 + n4, 2 + n5, 2, -1 + n7, n8, 0, n10, 1, 0, 
      1, 0])/((-1 + n4)*(-1 + n7)) + 
   (n8*j[p4a, 0, 0, n3, n4, 1 + n5, 0, -1 + n7, 1 + n8, 0, n10, 1, 0, 1, 1])/
    (-1 + n7) + ((-1 + n7 - n8)*j[p4a, 0, 0, n3, n4, 1 + n5, 1, -1 + n7, n8, 
      0, n10, 1, 0, 1, 1])/(-1 + n7) - 
   (n10*j[p4a, 0, 0, n3, n4, 1 + n5, 1, -1 + n7, n8, 0, 1 + n10, 1, 0, 1, 0])/
    (-1 + n7) - (n8*j[p4a, 0, 0, n3, n4, 1 + n5, 1, -1 + n7, 1 + n8, 0, n10, 
      1, 0, 1, 0])/(-1 + n7) + j[p4a, 0, 0, n3, n4, 1 + n5, 2, -1 + n7, n8, 
     0, n10, 1, 0, 1, 0]/(1 - n7) - 
   (n3*n8*j[p4a, 0, 0, 1 + n3, -1 + n4, 1 + n5, 1, -2 + n7, 1 + n8, 0, n10, 
      1, 0, 1, 1])/((-1 + n4)*(-1 + n7)) + 
   ((-n3 + n3*n7 - 2*n3*n8)*j[p4a, 0, 0, 1 + n3, -1 + n4, 1 + n5, 1, -1 + n7, 
      n8, 0, n10, 1, 0, 1, 1])/((-1 + n4)*(-1 + n7)) + 
   (n3*n8*j[p4a, 0, 0, 1 + n3, -1 + n4, 1 + n5, 1, -1 + n7, 1 + n8, 0, n10, 
      1, -1, 1, 1])/((-1 + n4)*(-1 + n7)) - 
   (n3*n8*j[p4a, 0, 0, 1 + n3, -1 + n4, 1 + n5, 1, -1 + n7, 1 + n8, 0, n10, 
      1, 0, 0, 1])/((-1 + n4)*(-1 + n7)) - 
   (n3*j[p4a, 0, 0, 1 + n3, -1 + n4, 1 + n5, 1, n7, n8, 0, n10, 1, 0, 0, 1])/
    (-1 + n4), j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n6 == 1 && n9 == 0 &&  !(n4 == 1 || n5 == 0 || n7 == 1) -> 
  (n3*n8*j[p4a, 0, -1, 1 + n3, -1 + n4, 1 + n5, 1, -1 + n7, 1 + n8, 0, 1, 
      n11, 0, 1, 1])/((-1 + n4)*(-1 + n7)) + 
   (n8*j[p4a, 0, 0, -1 + n3, -1 + n4, 1 + n5, 1, -1 + n7, 1 + n8, 0, 2, n11, 
      0, 1, 1])/((-1 + n4)*(-1 + n7)) + 
   (n8*j[p4a, 0, 0, -1 + n3, -1 + n4, 1 + n5, 1, n7, 1 + n8, 0, 1, n11, 0, 1, 
      1])/(-1 + n4) + (n8*j[p4a, 0, 0, -1 + n3, -1 + n4, 1 + n5, 2, -1 + n7, 
      1 + n8, 0, 1, n11, 0, 1, 1])/((-1 + n4)*(-1 + n7)) + 
   j[p4a, 0, 0, -1 + n3, n4, 1 + n5, 1, -1 + n7, n8, 0, 2, n11, 0, 1, 1]/
    (-1 + n7) + (n8*j[p4a, 0, 0, -1 + n3, n4, 1 + n5, 1, -1 + n7, 1 + n8, 0, 
      1, n11, 0, 1, 1])/(-1 + n7) + j[p4a, 0, 0, -1 + n3, n4, 1 + n5, 2, 
     -1 + n7, n8, 0, 1, n11, 0, 1, 1]/(-1 + n7) + 
   (n11*j[p4a, 0, 0, n3, -1 + n4, 1 + n5, 1, -2 + n7, n8, 0, 2, 1 + n11, 0, 
      1, 1])/((-1 + n4)*(-1 + n7)) + 
   ((-2*n11 + n11*n7)*j[p4a, 0, 0, n3, -1 + n4, 1 + n5, 1, -1 + n7, n8, 0, 1, 
      1 + n11, 0, 1, 1])/((-1 + n4)*(-1 + n7)) + 
   ((-2*d + n11 + 2*n3 + n4 + n5 + 2*n7 + n8)*j[p4a, 0, 0, n3, -1 + n4, 
      1 + n5, 1, -1 + n7, n8, 0, 2, n11, 0, 1, 1])/((-1 + n4)*(-1 + n7)) + 
   ((n8 - d*n8 + 2*n3*n8 + n7*n8)*j[p4a, 0, 0, n3, -1 + n4, 1 + n5, 1, 
      -1 + n7, 1 + n8, 0, 1, n11, 0, 1, 1])/((-1 + n4)*(-1 + n7)) - 
   (n8*j[p4a, 0, 0, n3, -1 + n4, 1 + n5, 1, -1 + n7, 1 + n8, 0, 2, n11, 0, 1, 
      1])/((-1 + n4)*(-1 + n7)) - 
   (n11*j[p4a, 0, 0, n3, -1 + n4, 1 + n5, 1, n7, n8, 0, 0, 1 + n11, 0, 1, 1])/
    (-1 + n4) + ((-1 - d + n11 + n3 + n4 + 2*n7)*j[p4a, 0, 0, n3, -1 + n4, 
      1 + n5, 1, n7, n8, 0, 1, n11, 0, 1, 1])/(-1 + n4) - 
   (n8*j[p4a, 0, 0, n3, -1 + n4, 1 + n5, 1, n7, 1 + n8, 0, 1, n11, 0, 0, 1])/
    (-1 + n4) + (n11*j[p4a, 0, 0, n3, -1 + n4, 1 + n5, 2, -2 + n7, n8, 0, 1, 
      1 + n11, 0, 1, 1])/((-1 + n4)*(-1 + n7)) - 
   (n11*j[p4a, 0, 0, n3, -1 + n4, 1 + n5, 2, -1 + n7, n8, 0, 0, 1 + n11, 0, 
      1, 1])/((-1 + n4)*(-1 + n7)) + 
   ((-2*d + n11 + 2*n3 + n4 + n5 + 2*n7 + n8)*j[p4a, 0, 0, n3, -1 + n4, 
      1 + n5, 2, -1 + n7, n8, 0, 1, n11, 0, 1, 1])/((-1 + n4)*(-1 + n7)) - 
   (n8*j[p4a, 0, 0, n3, -1 + n4, 1 + n5, 2, -1 + n7, 1 + n8, 0, 1, n11, 0, 1, 
      0])/((-1 + n4)*(-1 + n7)) + 
   ((1 + n5)*j[p4a, 0, 0, n3, -1 + n4, 2 + n5, 1, -1 + n7, n8, 0, 2, n11, 0, 
      0, 1])/((-1 + n4)*(-1 + n7)) + 
   ((-1 - n5)*j[p4a, 0, 0, n3, -1 + n4, 2 + n5, 1, -1 + n7, n8, 0, 2, n11, 0, 
      1, 0])/((-1 + n4)*(-1 + n7)) + 
   ((1 + n5)*j[p4a, 0, 0, n3, -1 + n4, 2 + n5, 2, -1 + n7, n8, 0, 1, n11, 0, 
      0, 1])/((-1 + n4)*(-1 + n7)) + 
   ((-1 - n5)*j[p4a, 0, 0, n3, -1 + n4, 2 + n5, 2, -1 + n7, n8, 0, 1, n11, 0, 
      1, 0])/((-1 + n4)*(-1 + n7)) + 
   (n8*j[p4a, 0, 0, n3, n4, 1 + n5, 0, -1 + n7, 1 + n8, 0, 1, n11, 0, 1, 1])/
    (-1 + n7) + ((-1 + n7 - n8)*j[p4a, 0, 0, n3, n4, 1 + n5, 1, -1 + n7, n8, 
      0, 1, n11, 0, 1, 1])/(-1 + n7) + 
   j[p4a, 0, 0, n3, n4, 1 + n5, 1, -1 + n7, n8, 0, 2, n11, 0, 1, 0]/
    (1 - n7) - (n8*j[p4a, 0, 0, n3, n4, 1 + n5, 1, -1 + n7, 1 + n8, 0, 1, 
      n11, 0, 1, 0])/(-1 + n7) + j[p4a, 0, 0, n3, n4, 1 + n5, 2, -1 + n7, n8, 
     0, 1, n11, 0, 1, 0]/(1 - n7) - 
   (n3*n8*j[p4a, 0, 0, 1 + n3, -1 + n4, 1 + n5, 1, -2 + n7, 1 + n8, 0, 1, 
      n11, 0, 1, 1])/((-1 + n4)*(-1 + n7)) + 
   ((-n3 + n3*n7 - 2*n3*n8)*j[p4a, 0, 0, 1 + n3, -1 + n4, 1 + n5, 1, -1 + n7, 
      n8, 0, 1, n11, 0, 1, 1])/((-1 + n4)*(-1 + n7)) + 
   (n3*n8*j[p4a, 0, 0, 1 + n3, -1 + n4, 1 + n5, 1, -1 + n7, 1 + n8, 0, 1, 
      n11, -1, 1, 1])/((-1 + n4)*(-1 + n7)) - 
   (n3*n8*j[p4a, 0, 0, 1 + n3, -1 + n4, 1 + n5, 1, -1 + n7, 1 + n8, 0, 1, 
      n11, 0, 0, 1])/((-1 + n4)*(-1 + n7)) - 
   (n3*j[p4a, 0, 0, 1 + n3, -1 + n4, 1 + n5, 1, n7, n8, 0, 1, n11, 0, 0, 1])/
    (-1 + n4), j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n2 == 0 && n6 == 1 &&  !(n4 == 1 || n5 == 0 || n7 == 1) -> 
  (n3*n8*j[p4a, 0, -1, 1 + n3, -1 + n4, 1 + n5, 1, -1 + n7, 1 + n8, n9, 1, 1, 
      0, 1, 1])/((-1 + n4)*(-1 + n7)) + 
   (n8*j[p4a, 0, 0, -1 + n3, -1 + n4, 1 + n5, 1, -1 + n7, 1 + n8, n9, 2, 1, 
      0, 1, 1])/((-1 + n4)*(-1 + n7)) + 
   (n8*j[p4a, 0, 0, -1 + n3, -1 + n4, 1 + n5, 1, n7, 1 + n8, n9, 1, 1, 0, 1, 
      1])/(-1 + n4) + (n8*j[p4a, 0, 0, -1 + n3, -1 + n4, 1 + n5, 2, -1 + n7, 
      1 + n8, n9, 1, 1, 0, 1, 1])/((-1 + n4)*(-1 + n7)) + 
   j[p4a, 0, 0, -1 + n3, n4, 1 + n5, 1, -1 + n7, n8, n9, 2, 1, 0, 1, 1]/
    (-1 + n7) + (n8*j[p4a, 0, 0, -1 + n3, n4, 1 + n5, 1, -1 + n7, 1 + n8, n9, 
      1, 1, 0, 1, 1])/(-1 + n7) + j[p4a, 0, 0, -1 + n3, n4, 1 + n5, 2, 
     -1 + n7, n8, n9, 1, 1, 0, 1, 1]/(-1 + n7) + 
   j[p4a, 0, 0, n3, -1 + n4, 1 + n5, 1, -2 + n7, n8, n9, 2, 2, 0, 1, 1]/
    ((-1 + n4)*(-1 + n7)) + ((-2 + n7)*j[p4a, 0, 0, n3, -1 + n4, 1 + n5, 1, 
      -1 + n7, n8, n9, 1, 2, 0, 1, 1])/((-1 + n4)*(-1 + n7)) + 
   ((1 - 2*d + 2*n3 + n4 + n5 + 2*n7 + n8)*j[p4a, 0, 0, n3, -1 + n4, 1 + n5, 
      1, -1 + n7, n8, n9, 2, 1, 0, 1, 1])/((-1 + n4)*(-1 + n7)) + 
   ((n8 - d*n8 + 2*n3*n8 + n7*n8)*j[p4a, 0, 0, n3, -1 + n4, 1 + n5, 1, 
      -1 + n7, 1 + n8, n9, 1, 1, 0, 1, 1])/((-1 + n4)*(-1 + n7)) - 
   (n8*j[p4a, 0, 0, n3, -1 + n4, 1 + n5, 1, -1 + n7, 1 + n8, n9, 2, 1, 0, 1, 
      1])/((-1 + n4)*(-1 + n7)) + j[p4a, 0, 0, n3, -1 + n4, 1 + n5, 1, n7, 
     n8, n9, 0, 2, 0, 1, 1]/(1 - n4) + 
   ((-d + n3 + n4 + 2*n7)*j[p4a, 0, 0, n3, -1 + n4, 1 + n5, 1, n7, n8, n9, 1, 
      1, 0, 1, 1])/(-1 + n4) - 
   (n8*j[p4a, 0, 0, n3, -1 + n4, 1 + n5, 1, n7, 1 + n8, n9, 1, 1, 0, 0, 1])/
    (-1 + n4) + j[p4a, 0, 0, n3, -1 + n4, 1 + n5, 2, -2 + n7, n8, n9, 1, 2, 
     0, 1, 1]/((-1 + n4)*(-1 + n7)) - j[p4a, 0, 0, n3, -1 + n4, 1 + n5, 2, 
     -1 + n7, n8, n9, 0, 2, 0, 1, 1]/((-1 + n4)*(-1 + n7)) + 
   ((1 - 2*d + 2*n3 + n4 + n5 + 2*n7 + n8)*j[p4a, 0, 0, n3, -1 + n4, 1 + n5, 
      2, -1 + n7, n8, n9, 1, 1, 0, 1, 1])/((-1 + n4)*(-1 + n7)) - 
   (n8*j[p4a, 0, 0, n3, -1 + n4, 1 + n5, 2, -1 + n7, 1 + n8, n9, 1, 1, 0, 1, 
      0])/((-1 + n4)*(-1 + n7)) + 
   ((1 + n5)*j[p4a, 0, 0, n3, -1 + n4, 2 + n5, 1, -1 + n7, n8, n9, 2, 1, 0, 
      0, 1])/((-1 + n4)*(-1 + n7)) + 
   ((-1 - n5)*j[p4a, 0, 0, n3, -1 + n4, 2 + n5, 1, -1 + n7, n8, n9, 2, 1, 0, 
      1, 0])/((-1 + n4)*(-1 + n7)) + 
   ((1 + n5)*j[p4a, 0, 0, n3, -1 + n4, 2 + n5, 2, -1 + n7, n8, n9, 1, 1, 0, 
      0, 1])/((-1 + n4)*(-1 + n7)) + 
   ((-1 - n5)*j[p4a, 0, 0, n3, -1 + n4, 2 + n5, 2, -1 + n7, n8, n9, 1, 1, 0, 
      1, 0])/((-1 + n4)*(-1 + n7)) + 
   (n8*j[p4a, 0, 0, n3, n4, 1 + n5, 0, -1 + n7, 1 + n8, n9, 1, 1, 0, 1, 1])/
    (-1 + n7) + ((-1 + n7 - n8)*j[p4a, 0, 0, n3, n4, 1 + n5, 1, -1 + n7, n8, 
      n9, 1, 1, 0, 1, 1])/(-1 + n7) + 
   j[p4a, 0, 0, n3, n4, 1 + n5, 1, -1 + n7, n8, n9, 2, 1, 0, 1, 0]/(1 - n7) - 
   (n8*j[p4a, 0, 0, n3, n4, 1 + n5, 1, -1 + n7, 1 + n8, n9, 1, 1, 0, 1, 0])/
    (-1 + n7) + j[p4a, 0, 0, n3, n4, 1 + n5, 2, -1 + n7, n8, n9, 1, 1, 0, 1, 
     0]/(1 - n7) - (n3*n8*j[p4a, 0, 0, 1 + n3, -1 + n4, 1 + n5, 1, -2 + n7, 
      1 + n8, n9, 1, 1, 0, 1, 1])/((-1 + n4)*(-1 + n7)) + 
   ((-n3 + n3*n7 - 2*n3*n8)*j[p4a, 0, 0, 1 + n3, -1 + n4, 1 + n5, 1, -1 + n7, 
      n8, n9, 1, 1, 0, 1, 1])/((-1 + n4)*(-1 + n7)) + 
   (n3*n8*j[p4a, 0, 0, 1 + n3, -1 + n4, 1 + n5, 1, -1 + n7, 1 + n8, n9, 1, 1, 
      -1, 1, 1])/((-1 + n4)*(-1 + n7)) - 
   (n3*n8*j[p4a, 0, 0, 1 + n3, -1 + n4, 1 + n5, 1, -1 + n7, 1 + n8, n9, 1, 1, 
      0, 0, 1])/((-1 + n4)*(-1 + n7)) - 
   (n3*j[p4a, 0, 0, 1 + n3, -1 + n4, 1 + n5, 1, n7, n8, n9, 1, 1, 0, 0, 1])/
    (-1 + n4), j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && n6 == 1 && 
    n8 == 1 && n9 == 0 &&  !(n4 == 1 || n5 == 0 || n7 == 1) -> 
  (n3*j[p4a, n1, -1, 1 + n3, -1 + n4, 1 + n5, 1, -1 + n7, 2, 0, n10, 1, 0, 1, 
      1])/((-1 + n4)*(-1 + n7)) + 
   (n10*j[p4a, n1, 0, -1 + n3, -1 + n4, 1 + n5, 1, -1 + n7, 2, 0, 1 + n10, 1, 
      0, 1, 1])/((-1 + n4)*(-1 + n7)) + 
   j[p4a, n1, 0, -1 + n3, -1 + n4, 1 + n5, 1, n7, 2, 0, n10, 1, 0, 1, 1]/
    (-1 + n4) + j[p4a, n1, 0, -1 + n3, -1 + n4, 1 + n5, 2, -1 + n7, 2, 0, 
     n10, 1, 0, 1, 1]/((-1 + n4)*(-1 + n7)) + 
   (n10*j[p4a, n1, 0, -1 + n3, n4, 1 + n5, 1, -1 + n7, 1, 0, 1 + n10, 1, 0, 
      1, 1])/(-1 + n7) + j[p4a, n1, 0, -1 + n3, n4, 1 + n5, 1, -1 + n7, 2, 0, 
     n10, 1, 0, 1, 1]/(-1 + n7) + j[p4a, n1, 0, -1 + n3, n4, 1 + n5, 2, 
     -1 + n7, 1, 0, n10, 1, 0, 1, 1]/(-1 + n7) + 
   (n10*j[p4a, n1, 0, n3, -1 + n4, 1 + n5, 1, -2 + n7, 1, 0, 1 + n10, 2, 0, 
      1, 1])/((-1 + n4)*(-1 + n7)) + 
   ((-1 - n10 + n7)*j[p4a, n1, 0, n3, -1 + n4, 1 + n5, 1, -1 + n7, 1, 0, n10, 
      2, 0, 1, 1])/((-1 + n4)*(-1 + n7)) + 
   (n10*(2 - 2*d + n1 + 2*n3 + n4 + n5 + 2*n7)*j[p4a, n1, 0, n3, -1 + n4, 
      1 + n5, 1, -1 + n7, 1, 0, 1 + n10, 1, 0, 1, 1])/((-1 + n4)*(-1 + n7)) + 
   ((-d + n10 + 2*n3 + n7)*j[p4a, n1, 0, n3, -1 + n4, 1 + n5, 1, -1 + n7, 2, 
      0, n10, 1, 0, 1, 1])/((-1 + n4)*(-1 + n7)) - 
   (n10*j[p4a, n1, 0, n3, -1 + n4, 1 + n5, 1, -1 + n7, 2, 0, 1 + n10, 1, 0, 
      1, 1])/((-1 + n4)*(-1 + n7)) + j[p4a, n1, 0, n3, -1 + n4, 1 + n5, 1, 
     n7, 1, 0, -1 + n10, 2, 0, 1, 1]/(1 - n4) + 
   ((-d + n3 + n4 + 2*n7)*j[p4a, n1, 0, n3, -1 + n4, 1 + n5, 1, n7, 1, 0, 
      n10, 1, 0, 1, 1])/(-1 + n4) + j[p4a, n1, 0, n3, -1 + n4, 1 + n5, 1, n7, 
     2, 0, n10, 1, 0, 0, 1]/(1 - n4) + 
   j[p4a, n1, 0, n3, -1 + n4, 1 + n5, 2, -2 + n7, 1, 0, n10, 2, 0, 1, 1]/
    ((-1 + n4)*(-1 + n7)) - j[p4a, n1, 0, n3, -1 + n4, 1 + n5, 2, -1 + n7, 1, 
     0, -1 + n10, 2, 0, 1, 1]/((-1 + n4)*(-1 + n7)) + 
   ((2 - 2*d + n1 + 2*n3 + n4 + n5 + 2*n7)*j[p4a, n1, 0, n3, -1 + n4, 1 + n5, 
      2, -1 + n7, 1, 0, n10, 1, 0, 1, 1])/((-1 + n4)*(-1 + n7)) - 
   j[p4a, n1, 0, n3, -1 + n4, 1 + n5, 2, -1 + n7, 2, 0, n10, 1, 0, 1, 0]/
    ((-1 + n4)*(-1 + n7)) + (n10*(1 + n5)*j[p4a, n1, 0, n3, -1 + n4, 2 + n5, 
      1, -1 + n7, 1, 0, 1 + n10, 1, 0, 0, 1])/((-1 + n4)*(-1 + n7)) - 
   (n10*(1 + n5)*j[p4a, n1, 0, n3, -1 + n4, 2 + n5, 1, -1 + n7, 1, 0, 
      1 + n10, 1, 0, 1, 0])/((-1 + n4)*(-1 + n7)) + 
   ((1 + n5)*j[p4a, n1, 0, n3, -1 + n4, 2 + n5, 2, -1 + n7, 1, 0, n10, 1, 0, 
      0, 1])/((-1 + n4)*(-1 + n7)) + 
   ((-1 - n5)*j[p4a, n1, 0, n3, -1 + n4, 2 + n5, 2, -1 + n7, 1, 0, n10, 1, 0, 
      1, 0])/((-1 + n4)*(-1 + n7)) + j[p4a, n1, 0, n3, n4, 1 + n5, 0, 
     -1 + n7, 2, 0, n10, 1, 0, 1, 1]/(-1 + n7) + 
   ((-2 + n7)*j[p4a, n1, 0, n3, n4, 1 + n5, 1, -1 + n7, 1, 0, n10, 1, 0, 1, 
      1])/(-1 + n7) - (n10*j[p4a, n1, 0, n3, n4, 1 + n5, 1, -1 + n7, 1, 0, 
      1 + n10, 1, 0, 1, 0])/(-1 + n7) + 
   j[p4a, n1, 0, n3, n4, 1 + n5, 1, -1 + n7, 2, 0, n10, 1, 0, 1, 0]/
    (1 - n7) + j[p4a, n1, 0, n3, n4, 1 + n5, 2, -1 + n7, 1, 0, n10, 1, 0, 1, 
     0]/(1 - n7) - (n3*j[p4a, n1, 0, 1 + n3, -1 + n4, 1 + n5, 1, -2 + n7, 2, 
      0, n10, 1, 0, 1, 1])/((-1 + n4)*(-1 + n7)) + 
   ((-3*n3 + n3*n7)*j[p4a, n1, 0, 1 + n3, -1 + n4, 1 + n5, 1, -1 + n7, 1, 0, 
      n10, 1, 0, 1, 1])/((-1 + n4)*(-1 + n7)) + 
   (n3*j[p4a, n1, 0, 1 + n3, -1 + n4, 1 + n5, 1, -1 + n7, 2, 0, n10, 1, -1, 
      1, 1])/((-1 + n4)*(-1 + n7)) - 
   (n3*j[p4a, n1, 0, 1 + n3, -1 + n4, 1 + n5, 1, -1 + n7, 2, 0, n10, 1, 0, 0, 
      1])/((-1 + n4)*(-1 + n7)) - 
   (n3*j[p4a, n1, 0, 1 + n3, -1 + n4, 1 + n5, 1, n7, 1, 0, n10, 1, 0, 0, 1])/
    (-1 + n4) + (n1*n10*j[p4a, 1 + n1, 0, n3, -1 + n4, 1 + n5, 1, -1 + n7, 1, 
      0, 1 + n10, 1, 0, 0, 1])/((-1 + n4)*(-1 + n7)) - 
   (n1*n10*j[p4a, 1 + n1, 0, n3, -1 + n4, 1 + n5, 1, -1 + n7, 1, 0, 1 + n10, 
      1, 0, 1, 1])/((-1 + n4)*(-1 + n7)) + 
   (n1*j[p4a, 1 + n1, 0, n3, -1 + n4, 1 + n5, 2, -1 + n7, 1, 0, n10, 1, 0, 0, 
      1])/((-1 + n4)*(-1 + n7)) - 
   (n1*j[p4a, 1 + n1, 0, n3, -1 + n4, 1 + n5, 2, -1 + n7, 1, 0, n10, 1, 0, 1, 
      1])/((-1 + n4)*(-1 + n7)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n1 == 0 && n10 == 1 && n12 == 0 && 
    n13 == 1 && n14 == 1 && n6 == 1 && n8 == 1 && n9 == 0 && 
     !(n4 == 1 || n5 == 0 || n7 == 1) -> 
  (n3*j[p4a, 0, -1 + n2, 1 + n3, -1 + n4, 1 + n5, 1, -1 + n7, 2, 0, 1, n11, 
      0, 1, 1])/((-1 + n4)*(-1 + n7)) + 
   j[p4a, 0, n2, -1 + n3, -1 + n4, 1 + n5, 1, -1 + n7, 2, 0, 2, n11, 0, 1, 1]/
    ((-1 + n4)*(-1 + n7)) + j[p4a, 0, n2, -1 + n3, -1 + n4, 1 + n5, 1, n7, 2, 
     0, 1, n11, 0, 1, 1]/(-1 + n4) + j[p4a, 0, n2, -1 + n3, -1 + n4, 1 + n5, 
     2, -1 + n7, 2, 0, 1, n11, 0, 1, 1]/((-1 + n4)*(-1 + n7)) + 
   j[p4a, 0, n2, -1 + n3, n4, 1 + n5, 1, -1 + n7, 1, 0, 2, n11, 0, 1, 1]/
    (-1 + n7) + j[p4a, 0, n2, -1 + n3, n4, 1 + n5, 1, -1 + n7, 2, 0, 1, n11, 
     0, 1, 1]/(-1 + n7) + j[p4a, 0, n2, -1 + n3, n4, 1 + n5, 2, -1 + n7, 1, 
     0, 1, n11, 0, 1, 1]/(-1 + n7) + 
   (n11*j[p4a, 0, n2, n3, -1 + n4, 1 + n5, 1, -2 + n7, 1, 0, 2, 1 + n11, 0, 
      1, 1])/((-1 + n4)*(-1 + n7)) + 
   ((-2*n11 + n11*n7)*j[p4a, 0, n2, n3, -1 + n4, 1 + n5, 1, -1 + n7, 1, 0, 1, 
      1 + n11, 0, 1, 1])/((-1 + n4)*(-1 + n7)) + 
   ((1 - 2*d + n11 + 2*n3 + n4 + n5 + 2*n7)*j[p4a, 0, n2, n3, -1 + n4, 
      1 + n5, 1, -1 + n7, 1, 0, 2, n11, 0, 1, 1])/((-1 + n4)*(-1 + n7)) + 
   ((1 - d + 2*n2 + 2*n3 + n7)*j[p4a, 0, n2, n3, -1 + n4, 1 + n5, 1, -1 + n7, 
      2, 0, 1, n11, 0, 1, 1])/((-1 + n4)*(-1 + n7)) - 
   j[p4a, 0, n2, n3, -1 + n4, 1 + n5, 1, -1 + n7, 2, 0, 2, n11, 0, 1, 1]/
    ((-1 + n4)*(-1 + n7)) - (n11*j[p4a, 0, n2, n3, -1 + n4, 1 + n5, 1, n7, 1, 
      0, 0, 1 + n11, 0, 1, 1])/(-1 + n4) + 
   ((-1 - d + n11 + n3 + n4 + 2*n7)*j[p4a, 0, n2, n3, -1 + n4, 1 + n5, 1, n7, 
      1, 0, 1, n11, 0, 1, 1])/(-1 + n4) + 
   j[p4a, 0, n2, n3, -1 + n4, 1 + n5, 1, n7, 2, 0, 1, n11, 0, 0, 1]/
    (1 - n4) + (n11*j[p4a, 0, n2, n3, -1 + n4, 1 + n5, 2, -2 + n7, 1, 0, 1, 
      1 + n11, 0, 1, 1])/((-1 + n4)*(-1 + n7)) - 
   (n11*j[p4a, 0, n2, n3, -1 + n4, 1 + n5, 2, -1 + n7, 1, 0, 0, 1 + n11, 0, 
      1, 1])/((-1 + n4)*(-1 + n7)) + ((1 - 2*d + n11 + 2*n3 + n4 + n5 + 2*n7)*
     j[p4a, 0, n2, n3, -1 + n4, 1 + n5, 2, -1 + n7, 1, 0, 1, n11, 0, 1, 1])/
    ((-1 + n4)*(-1 + n7)) - j[p4a, 0, n2, n3, -1 + n4, 1 + n5, 2, -1 + n7, 2, 
     0, 1, n11, 0, 1, 0]/((-1 + n4)*(-1 + n7)) + 
   ((1 + n5)*j[p4a, 0, n2, n3, -1 + n4, 2 + n5, 1, -1 + n7, 1, 0, 2, n11, 0, 
      0, 1])/((-1 + n4)*(-1 + n7)) + 
   ((-1 - n5)*j[p4a, 0, n2, n3, -1 + n4, 2 + n5, 1, -1 + n7, 1, 0, 2, n11, 0, 
      1, 0])/((-1 + n4)*(-1 + n7)) + 
   ((1 + n5)*j[p4a, 0, n2, n3, -1 + n4, 2 + n5, 2, -1 + n7, 1, 0, 1, n11, 0, 
      0, 1])/((-1 + n4)*(-1 + n7)) + 
   ((-1 - n5)*j[p4a, 0, n2, n3, -1 + n4, 2 + n5, 2, -1 + n7, 1, 0, 1, n11, 0, 
      1, 0])/((-1 + n4)*(-1 + n7)) + j[p4a, 0, n2, n3, n4, 1 + n5, 0, 
     -1 + n7, 2, 0, 1, n11, 0, 1, 1]/(-1 + n7) + 
   ((-2 + n7)*j[p4a, 0, n2, n3, n4, 1 + n5, 1, -1 + n7, 1, 0, 1, n11, 0, 1, 
      1])/(-1 + n7) + j[p4a, 0, n2, n3, n4, 1 + n5, 1, -1 + n7, 1, 0, 2, n11, 
     0, 1, 0]/(1 - n7) + j[p4a, 0, n2, n3, n4, 1 + n5, 1, -1 + n7, 2, 0, 1, 
     n11, 0, 1, 0]/(1 - n7) + j[p4a, 0, n2, n3, n4, 1 + n5, 2, -1 + n7, 1, 0, 
     1, n11, 0, 1, 0]/(1 - n7) - 
   (n3*j[p4a, 0, n2, 1 + n3, -1 + n4, 1 + n5, 1, -2 + n7, 2, 0, 1, n11, 0, 1, 
      1])/((-1 + n4)*(-1 + n7)) + 
   ((-3*n3 + n3*n7)*j[p4a, 0, n2, 1 + n3, -1 + n4, 1 + n5, 1, -1 + n7, 1, 0, 
      1, n11, 0, 1, 1])/((-1 + n4)*(-1 + n7)) + 
   (n3*j[p4a, 0, n2, 1 + n3, -1 + n4, 1 + n5, 1, -1 + n7, 2, 0, 1, n11, -1, 
      1, 1])/((-1 + n4)*(-1 + n7)) - 
   (n3*j[p4a, 0, n2, 1 + n3, -1 + n4, 1 + n5, 1, -1 + n7, 2, 0, 1, n11, 0, 0, 
      1])/((-1 + n4)*(-1 + n7)) - 
   (n3*j[p4a, 0, n2, 1 + n3, -1 + n4, 1 + n5, 1, n7, 1, 0, 1, n11, 0, 0, 1])/
    (-1 + n4) - (n2*j[p4a, 0, 1 + n2, -1 + n3, -1 + n4, 1 + n5, 1, -1 + n7, 
      1, 0, 2, n11, 0, 1, 1])/((-1 + n4)*(-1 + n7)) + 
   (n2*j[p4a, 0, 1 + n2, -1 + n3, -1 + n4, 1 + n5, 1, -1 + n7, 2, 0, 1, n11, 
      0, 1, 1])/((-1 + n4)*(-1 + n7)) - 
   (n2*j[p4a, 0, 1 + n2, -1 + n3, -1 + n4, 1 + n5, 2, -1 + n7, 1, 0, 1, n11, 
      0, 1, 1])/((-1 + n4)*(-1 + n7)) + 
   (n2*j[p4a, 0, 1 + n2, n3, -1 + n4, 1 + n5, 1, -2 + n7, 1, 0, 2, n11, 0, 1, 
      1])/((-1 + n4)*(-1 + n7)) - 
   (n2*j[p4a, 0, 1 + n2, n3, -1 + n4, 1 + n5, 1, -2 + n7, 2, 0, 1, n11, 0, 1, 
      1])/((-1 + n4)*(-1 + n7)) + 
   (n2*j[p4a, 0, 1 + n2, n3, -1 + n4, 1 + n5, 1, -1 + n7, 0, 0, 2, n11, 0, 1, 
      1])/((-1 + n4)*(-1 + n7)) - 
   (n2*j[p4a, 0, 1 + n2, n3, -1 + n4, 1 + n5, 1, -1 + n7, 1, 0, 1, n11, 0, 1, 
      1])/((-1 + n4)*(-1 + n7)) - 
   (n2*j[p4a, 0, 1 + n2, n3, -1 + n4, 1 + n5, 1, -1 + n7, 1, 0, 2, n11, -1, 
      1, 1])/((-1 + n4)*(-1 + n7)) + 
   (2*n2*j[p4a, 0, 1 + n2, n3, -1 + n4, 1 + n5, 1, -1 + n7, 1, 0, 2, n11, 0, 
      0, 1])/((-1 + n4)*(-1 + n7)) + 
   (n2*j[p4a, 0, 1 + n2, n3, -1 + n4, 1 + n5, 1, -1 + n7, 2, 0, 1, n11, -1, 
      1, 1])/((-1 + n4)*(-1 + n7)) - 
   (2*n2*j[p4a, 0, 1 + n2, n3, -1 + n4, 1 + n5, 1, -1 + n7, 2, 0, 1, n11, 0, 
      0, 1])/((-1 + n4)*(-1 + n7)) + 
   (n2*j[p4a, 0, 1 + n2, n3, -1 + n4, 1 + n5, 2, -2 + n7, 1, 0, 1, n11, 0, 1, 
      1])/((-1 + n4)*(-1 + n7)) + 
   (n2*j[p4a, 0, 1 + n2, n3, -1 + n4, 1 + n5, 2, -1 + n7, 0, 0, 1, n11, 0, 1, 
      1])/((-1 + n4)*(-1 + n7)) - 
   (n2*j[p4a, 0, 1 + n2, n3, -1 + n4, 1 + n5, 2, -1 + n7, 1, 0, 1, n11, -1, 
      1, 1])/((-1 + n4)*(-1 + n7)) + 
   (2*n2*j[p4a, 0, 1 + n2, n3, -1 + n4, 1 + n5, 2, -1 + n7, 1, 0, 1, n11, 0, 
      0, 1])/((-1 + n4)*(-1 + n7)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n10 == 1 && n11 == 1 && n12 == 0 && 
    n13 == 1 && n14 == 1 && n6 == 1 && n8 == 1 && n9 == 0 && 
     !(n4 == 1 || n5 == 0 || n7 == 1) -> 
  (n3*j[p4a, n1, -1 + n2, 1 + n3, -1 + n4, 1 + n5, 1, -1 + n7, 2, 0, 1, 1, 0, 
      1, 1])/((-1 + n4)*(-1 + n7)) + j[p4a, n1, n2, -1 + n3, -1 + n4, 1 + n5, 
     1, -1 + n7, 2, 0, 2, 1, 0, 1, 1]/((-1 + n4)*(-1 + n7)) + 
   j[p4a, n1, n2, -1 + n3, -1 + n4, 1 + n5, 1, n7, 2, 0, 1, 1, 0, 1, 1]/
    (-1 + n4) + j[p4a, n1, n2, -1 + n3, -1 + n4, 1 + n5, 2, -1 + n7, 2, 0, 1, 
     1, 0, 1, 1]/((-1 + n4)*(-1 + n7)) + 
   j[p4a, n1, n2, -1 + n3, n4, 1 + n5, 1, -1 + n7, 1, 0, 2, 1, 0, 1, 1]/
    (-1 + n7) + j[p4a, n1, n2, -1 + n3, n4, 1 + n5, 1, -1 + n7, 2, 0, 1, 1, 
     0, 1, 1]/(-1 + n7) + j[p4a, n1, n2, -1 + n3, n4, 1 + n5, 2, -1 + n7, 1, 
     0, 1, 1, 0, 1, 1]/(-1 + n7) + j[p4a, n1, n2, n3, -1 + n4, 1 + n5, 1, 
     -2 + n7, 1, 0, 2, 2, 0, 1, 1]/((-1 + n4)*(-1 + n7)) + 
   ((-2 + n7)*j[p4a, n1, n2, n3, -1 + n4, 1 + n5, 1, -1 + n7, 1, 0, 1, 2, 0, 
      1, 1])/((-1 + n4)*(-1 + n7)) + ((2 - 2*d + n1 + 2*n3 + n4 + n5 + 2*n7)*
     j[p4a, n1, n2, n3, -1 + n4, 1 + n5, 1, -1 + n7, 1, 0, 2, 1, 0, 1, 1])/
    ((-1 + n4)*(-1 + n7)) + ((1 - d + 2*n2 + 2*n3 + n7)*
     j[p4a, n1, n2, n3, -1 + n4, 1 + n5, 1, -1 + n7, 2, 0, 1, 1, 0, 1, 1])/
    ((-1 + n4)*(-1 + n7)) - j[p4a, n1, n2, n3, -1 + n4, 1 + n5, 1, -1 + n7, 
     2, 0, 2, 1, 0, 1, 1]/((-1 + n4)*(-1 + n7)) + 
   j[p4a, n1, n2, n3, -1 + n4, 1 + n5, 1, n7, 1, 0, 0, 2, 0, 1, 1]/(1 - n4) + 
   ((-d + n3 + n4 + 2*n7)*j[p4a, n1, n2, n3, -1 + n4, 1 + n5, 1, n7, 1, 0, 1, 
      1, 0, 1, 1])/(-1 + n4) + j[p4a, n1, n2, n3, -1 + n4, 1 + n5, 1, n7, 2, 
     0, 1, 1, 0, 0, 1]/(1 - n4) + j[p4a, n1, n2, n3, -1 + n4, 1 + n5, 2, 
     -2 + n7, 1, 0, 1, 2, 0, 1, 1]/((-1 + n4)*(-1 + n7)) - 
   j[p4a, n1, n2, n3, -1 + n4, 1 + n5, 2, -1 + n7, 1, 0, 0, 2, 0, 1, 1]/
    ((-1 + n4)*(-1 + n7)) + ((2 - 2*d + n1 + 2*n3 + n4 + n5 + 2*n7)*
     j[p4a, n1, n2, n3, -1 + n4, 1 + n5, 2, -1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    ((-1 + n4)*(-1 + n7)) - j[p4a, n1, n2, n3, -1 + n4, 1 + n5, 2, -1 + n7, 
     2, 0, 1, 1, 0, 1, 0]/((-1 + n4)*(-1 + n7)) + 
   ((1 + n5)*j[p4a, n1, n2, n3, -1 + n4, 2 + n5, 1, -1 + n7, 1, 0, 2, 1, 0, 
      0, 1])/((-1 + n4)*(-1 + n7)) + 
   ((-1 - n5)*j[p4a, n1, n2, n3, -1 + n4, 2 + n5, 1, -1 + n7, 1, 0, 2, 1, 0, 
      1, 0])/((-1 + n4)*(-1 + n7)) + 
   ((1 + n5)*j[p4a, n1, n2, n3, -1 + n4, 2 + n5, 2, -1 + n7, 1, 0, 1, 1, 0, 
      0, 1])/((-1 + n4)*(-1 + n7)) + 
   ((-1 - n5)*j[p4a, n1, n2, n3, -1 + n4, 2 + n5, 2, -1 + n7, 1, 0, 1, 1, 0, 
      1, 0])/((-1 + n4)*(-1 + n7)) + j[p4a, n1, n2, n3, n4, 1 + n5, 0, 
     -1 + n7, 2, 0, 1, 1, 0, 1, 1]/(-1 + n7) + 
   ((-2 + n7)*j[p4a, n1, n2, n3, n4, 1 + n5, 1, -1 + n7, 1, 0, 1, 1, 0, 1, 
      1])/(-1 + n7) + j[p4a, n1, n2, n3, n4, 1 + n5, 1, -1 + n7, 1, 0, 2, 1, 
     0, 1, 0]/(1 - n7) + j[p4a, n1, n2, n3, n4, 1 + n5, 1, -1 + n7, 2, 0, 1, 
     1, 0, 1, 0]/(1 - n7) + j[p4a, n1, n2, n3, n4, 1 + n5, 2, -1 + n7, 1, 0, 
     1, 1, 0, 1, 0]/(1 - n7) - 
   (n3*j[p4a, n1, n2, 1 + n3, -1 + n4, 1 + n5, 1, -2 + n7, 2, 0, 1, 1, 0, 1, 
      1])/((-1 + n4)*(-1 + n7)) + 
   ((-3*n3 + n3*n7)*j[p4a, n1, n2, 1 + n3, -1 + n4, 1 + n5, 1, -1 + n7, 1, 0, 
      1, 1, 0, 1, 1])/((-1 + n4)*(-1 + n7)) + 
   (n3*j[p4a, n1, n2, 1 + n3, -1 + n4, 1 + n5, 1, -1 + n7, 2, 0, 1, 1, -1, 1, 
      1])/((-1 + n4)*(-1 + n7)) - 
   (n3*j[p4a, n1, n2, 1 + n3, -1 + n4, 1 + n5, 1, -1 + n7, 2, 0, 1, 1, 0, 0, 
      1])/((-1 + n4)*(-1 + n7)) - 
   (n3*j[p4a, n1, n2, 1 + n3, -1 + n4, 1 + n5, 1, n7, 1, 0, 1, 1, 0, 0, 1])/
    (-1 + n4) - (n2*j[p4a, n1, 1 + n2, -1 + n3, -1 + n4, 1 + n5, 1, -1 + n7, 
      1, 0, 2, 1, 0, 1, 1])/((-1 + n4)*(-1 + n7)) + 
   (n2*j[p4a, n1, 1 + n2, -1 + n3, -1 + n4, 1 + n5, 1, -1 + n7, 2, 0, 1, 1, 
      0, 1, 1])/((-1 + n4)*(-1 + n7)) - 
   (n2*j[p4a, n1, 1 + n2, -1 + n3, -1 + n4, 1 + n5, 2, -1 + n7, 1, 0, 1, 1, 
      0, 1, 1])/((-1 + n4)*(-1 + n7)) + 
   (n2*j[p4a, n1, 1 + n2, n3, -1 + n4, 1 + n5, 1, -2 + n7, 1, 0, 2, 1, 0, 1, 
      1])/((-1 + n4)*(-1 + n7)) - 
   (n2*j[p4a, n1, 1 + n2, n3, -1 + n4, 1 + n5, 1, -2 + n7, 2, 0, 1, 1, 0, 1, 
      1])/((-1 + n4)*(-1 + n7)) + 
   (n2*j[p4a, n1, 1 + n2, n3, -1 + n4, 1 + n5, 1, -1 + n7, 0, 0, 2, 1, 0, 1, 
      1])/((-1 + n4)*(-1 + n7)) - 
   (n2*j[p4a, n1, 1 + n2, n3, -1 + n4, 1 + n5, 1, -1 + n7, 1, 0, 1, 1, 0, 1, 
      1])/((-1 + n4)*(-1 + n7)) - 
   (n2*j[p4a, n1, 1 + n2, n3, -1 + n4, 1 + n5, 1, -1 + n7, 1, 0, 2, 1, -1, 1, 
      1])/((-1 + n4)*(-1 + n7)) + 
   (2*n2*j[p4a, n1, 1 + n2, n3, -1 + n4, 1 + n5, 1, -1 + n7, 1, 0, 2, 1, 0, 
      0, 1])/((-1 + n4)*(-1 + n7)) + 
   (n2*j[p4a, n1, 1 + n2, n3, -1 + n4, 1 + n5, 1, -1 + n7, 2, 0, 1, 1, -1, 1, 
      1])/((-1 + n4)*(-1 + n7)) - 
   (2*n2*j[p4a, n1, 1 + n2, n3, -1 + n4, 1 + n5, 1, -1 + n7, 2, 0, 1, 1, 0, 
      0, 1])/((-1 + n4)*(-1 + n7)) + 
   (n2*j[p4a, n1, 1 + n2, n3, -1 + n4, 1 + n5, 2, -2 + n7, 1, 0, 1, 1, 0, 1, 
      1])/((-1 + n4)*(-1 + n7)) + 
   (n2*j[p4a, n1, 1 + n2, n3, -1 + n4, 1 + n5, 2, -1 + n7, 0, 0, 1, 1, 0, 1, 
      1])/((-1 + n4)*(-1 + n7)) - 
   (n2*j[p4a, n1, 1 + n2, n3, -1 + n4, 1 + n5, 2, -1 + n7, 1, 0, 1, 1, -1, 1, 
      1])/((-1 + n4)*(-1 + n7)) + 
   (2*n2*j[p4a, n1, 1 + n2, n3, -1 + n4, 1 + n5, 2, -1 + n7, 1, 0, 1, 1, 0, 
      0, 1])/((-1 + n4)*(-1 + n7)) + 
   (n1*j[p4a, 1 + n1, n2, n3, -1 + n4, 1 + n5, 1, -1 + n7, 1, 0, 2, 1, 0, 0, 
      1])/((-1 + n4)*(-1 + n7)) - 
   (n1*j[p4a, 1 + n1, n2, n3, -1 + n4, 1 + n5, 1, -1 + n7, 1, 0, 2, 1, 0, 1, 
      1])/((-1 + n4)*(-1 + n7)) + 
   (n1*j[p4a, 1 + n1, n2, n3, -1 + n4, 1 + n5, 2, -1 + n7, 1, 0, 1, 1, 0, 0, 
      1])/((-1 + n4)*(-1 + n7)) - 
   (n1*j[p4a, 1 + n1, n2, n3, -1 + n4, 1 + n5, 2, -1 + n7, 1, 0, 1, 1, 0, 1, 
      1])/((-1 + n4)*(-1 + n7)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n10 == 1 && n11 == 1 && n12 == 0 && 
    n13 == 1 && n14 == 1 && n2 == 0 && n6 == 1 && n8 == 1 && 
     !(n4 == 1 || n5 == 0 || n7 == 1) -> 
  (n3*j[p4a, n1, -1, 1 + n3, -1 + n4, 1 + n5, 1, -1 + n7, 2, n9, 1, 1, 0, 1, 
      1])/((-1 + n4)*(-1 + n7)) + j[p4a, n1, 0, -1 + n3, -1 + n4, 1 + n5, 1, 
     -1 + n7, 2, n9, 2, 1, 0, 1, 1]/((-1 + n4)*(-1 + n7)) + 
   j[p4a, n1, 0, -1 + n3, -1 + n4, 1 + n5, 1, n7, 2, n9, 1, 1, 0, 1, 1]/
    (-1 + n4) + j[p4a, n1, 0, -1 + n3, -1 + n4, 1 + n5, 2, -1 + n7, 2, n9, 1, 
     1, 0, 1, 1]/((-1 + n4)*(-1 + n7)) + 
   j[p4a, n1, 0, -1 + n3, n4, 1 + n5, 1, -1 + n7, 1, n9, 2, 1, 0, 1, 1]/
    (-1 + n7) + j[p4a, n1, 0, -1 + n3, n4, 1 + n5, 1, -1 + n7, 2, n9, 1, 1, 
     0, 1, 1]/(-1 + n7) + j[p4a, n1, 0, -1 + n3, n4, 1 + n5, 2, -1 + n7, 1, 
     n9, 1, 1, 0, 1, 1]/(-1 + n7) + j[p4a, n1, 0, n3, -1 + n4, 1 + n5, 1, 
     -2 + n7, 1, n9, 2, 2, 0, 1, 1]/((-1 + n4)*(-1 + n7)) + 
   ((-2 + n7)*j[p4a, n1, 0, n3, -1 + n4, 1 + n5, 1, -1 + n7, 1, n9, 1, 2, 0, 
      1, 1])/((-1 + n4)*(-1 + n7)) + ((2 - 2*d + n1 + 2*n3 + n4 + n5 + 2*n7)*
     j[p4a, n1, 0, n3, -1 + n4, 1 + n5, 1, -1 + n7, 1, n9, 2, 1, 0, 1, 1])/
    ((-1 + n4)*(-1 + n7)) + ((1 - d + 2*n3 + n7)*j[p4a, n1, 0, n3, -1 + n4, 
      1 + n5, 1, -1 + n7, 2, n9, 1, 1, 0, 1, 1])/((-1 + n4)*(-1 + n7)) - 
   j[p4a, n1, 0, n3, -1 + n4, 1 + n5, 1, -1 + n7, 2, n9, 2, 1, 0, 1, 1]/
    ((-1 + n4)*(-1 + n7)) + j[p4a, n1, 0, n3, -1 + n4, 1 + n5, 1, n7, 1, n9, 
     0, 2, 0, 1, 1]/(1 - n4) + ((-d + n3 + n4 + 2*n7)*
     j[p4a, n1, 0, n3, -1 + n4, 1 + n5, 1, n7, 1, n9, 1, 1, 0, 1, 1])/
    (-1 + n4) + j[p4a, n1, 0, n3, -1 + n4, 1 + n5, 1, n7, 2, n9, 1, 1, 0, 0, 
     1]/(1 - n4) + j[p4a, n1, 0, n3, -1 + n4, 1 + n5, 2, -2 + n7, 1, n9, 1, 
     2, 0, 1, 1]/((-1 + n4)*(-1 + n7)) - 
   j[p4a, n1, 0, n3, -1 + n4, 1 + n5, 2, -1 + n7, 1, n9, 0, 2, 0, 1, 1]/
    ((-1 + n4)*(-1 + n7)) + ((2 - 2*d + n1 + 2*n3 + n4 + n5 + 2*n7)*
     j[p4a, n1, 0, n3, -1 + n4, 1 + n5, 2, -1 + n7, 1, n9, 1, 1, 0, 1, 1])/
    ((-1 + n4)*(-1 + n7)) - j[p4a, n1, 0, n3, -1 + n4, 1 + n5, 2, -1 + n7, 2, 
     n9, 1, 1, 0, 1, 0]/((-1 + n4)*(-1 + n7)) + 
   ((1 + n5)*j[p4a, n1, 0, n3, -1 + n4, 2 + n5, 1, -1 + n7, 1, n9, 2, 1, 0, 
      0, 1])/((-1 + n4)*(-1 + n7)) + 
   ((-1 - n5)*j[p4a, n1, 0, n3, -1 + n4, 2 + n5, 1, -1 + n7, 1, n9, 2, 1, 0, 
      1, 0])/((-1 + n4)*(-1 + n7)) + 
   ((1 + n5)*j[p4a, n1, 0, n3, -1 + n4, 2 + n5, 2, -1 + n7, 1, n9, 1, 1, 0, 
      0, 1])/((-1 + n4)*(-1 + n7)) + 
   ((-1 - n5)*j[p4a, n1, 0, n3, -1 + n4, 2 + n5, 2, -1 + n7, 1, n9, 1, 1, 0, 
      1, 0])/((-1 + n4)*(-1 + n7)) + j[p4a, n1, 0, n3, n4, 1 + n5, 0, 
     -1 + n7, 2, n9, 1, 1, 0, 1, 1]/(-1 + n7) + 
   ((-2 + n7)*j[p4a, n1, 0, n3, n4, 1 + n5, 1, -1 + n7, 1, n9, 1, 1, 0, 1, 
      1])/(-1 + n7) + j[p4a, n1, 0, n3, n4, 1 + n5, 1, -1 + n7, 1, n9, 2, 1, 
     0, 1, 0]/(1 - n7) + j[p4a, n1, 0, n3, n4, 1 + n5, 1, -1 + n7, 2, n9, 1, 
     1, 0, 1, 0]/(1 - n7) + j[p4a, n1, 0, n3, n4, 1 + n5, 2, -1 + n7, 1, n9, 
     1, 1, 0, 1, 0]/(1 - n7) - 
   (n3*j[p4a, n1, 0, 1 + n3, -1 + n4, 1 + n5, 1, -2 + n7, 2, n9, 1, 1, 0, 1, 
      1])/((-1 + n4)*(-1 + n7)) + 
   ((-3*n3 + n3*n7)*j[p4a, n1, 0, 1 + n3, -1 + n4, 1 + n5, 1, -1 + n7, 1, n9, 
      1, 1, 0, 1, 1])/((-1 + n4)*(-1 + n7)) + 
   (n3*j[p4a, n1, 0, 1 + n3, -1 + n4, 1 + n5, 1, -1 + n7, 2, n9, 1, 1, -1, 1, 
      1])/((-1 + n4)*(-1 + n7)) - 
   (n3*j[p4a, n1, 0, 1 + n3, -1 + n4, 1 + n5, 1, -1 + n7, 2, n9, 1, 1, 0, 0, 
      1])/((-1 + n4)*(-1 + n7)) - 
   (n3*j[p4a, n1, 0, 1 + n3, -1 + n4, 1 + n5, 1, n7, 1, n9, 1, 1, 0, 0, 1])/
    (-1 + n4) + (n1*j[p4a, 1 + n1, 0, n3, -1 + n4, 1 + n5, 1, -1 + n7, 1, n9, 
      2, 1, 0, 0, 1])/((-1 + n4)*(-1 + n7)) - 
   (n1*j[p4a, 1 + n1, 0, n3, -1 + n4, 1 + n5, 1, -1 + n7, 1, n9, 2, 1, 0, 1, 
      1])/((-1 + n4)*(-1 + n7)) + 
   (n1*j[p4a, 1 + n1, 0, n3, -1 + n4, 1 + n5, 2, -1 + n7, 1, n9, 1, 1, 0, 0, 
      1])/((-1 + n4)*(-1 + n7)) - 
   (n1*j[p4a, 1 + n1, 0, n3, -1 + n4, 1 + n5, 2, -1 + n7, 1, n9, 1, 1, 0, 1, 
      1])/((-1 + n4)*(-1 + n7)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n10 == 1 && n11 == 1 && n13 == 1 && 
    n14 == 1 && n2 == 0 && n5 == 0 && n6 == 1 && n8 == 1 && 
     !(n12 == 0 || n4 == 1 || n9 == 0) -> 
  j[p4a, -1 + n1, 0, -1 + n3, n4, 0, 1, n7, 1, 1 + n9, 1, 1, 1 + n12, 1, 1] + 
   ((2 - d + n1 + n3)*j[p4a, -1 + n1, 0, n3, -1 + n4, 0, 1, n7, 1, 1 + n9, 1, 
      1, 1 + n12, 1, 1])/(-1 + n4) + j[p4a, -1 + n1, 0, n3, -1 + n4, 0, 1, 
     n7, 2, 1 + n9, 1, 1, 1 + n12, 0, 1]/(-1 + n4) + 
   j[p4a, -1 + n1, 0, n3, n4, -1, 1, n7, 1, 1 + n9, 1, 1, 1 + n12, 1, 1] - 
   j[p4a, -1 + n1, 0, n3, n4, 0, 1, -1 + n7, 1, 1 + n9, 1, 1, 1 + n12, 1, 
    1] + j[p4a, -1 + n1, 0, n3, n4, 0, 1, n7, 1, 1 + n9, 1, 1, n12, 1, 1] - 
   j[p4a, -1 + n1, 0, n3, n4, 0, 1, n7, 1, 1 + n9, 1, 1, 1 + n12, 1, 0] - 
   (n3*j[p4a, -1 + n1, 0, 1 + n3, -1 + n4, 0, 1, -1 + n7, 1, 1 + n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n4) + 
   (n3*j[p4a, -1 + n1, 0, 1 + n3, -1 + n4, 0, 1, n7, 1, 1 + n9, 1, 1, n12, 1, 
      1])/(-1 + n4) + (n3*j[p4a, -1 + n1, 0, 1 + n3, -1 + n4, 0, 1, n7, 1, 
      1 + n9, 1, 1, 1 + n12, 0, 1])/(-1 + n4) - j[p4a, n1, -1, n3, n4, 0, 1, 
    n7, 1, 1 + n9, 1, 1, n12, 1, 1] - 
   (n12*j[p4a, n1, 0, n3, -1 + n4, 0, 1, n7, 1, 1 + n9, 1, 0, 1 + n12, 1, 1])/
    (-1 + n4) + ((-2 + d - n12 - n4 - n7)*j[p4a, n1, 0, n3, -1 + n4, 0, 1, 
      n7, 1, 1 + n9, 1, 1, n12, 1, 1])/(-1 + n4) + 
   ((-1 + n1)*j[p4a, n1, 0, n3, -1 + n4, 0, 1, n7, 1, 1 + n9, 1, 1, 1 + n12, 
      0, 1])/(-1 + n4) + ((1 - n1 + n12)*j[p4a, n1, 0, n3, -1 + n4, 0, 1, n7, 
      1, 1 + n9, 1, 1, 1 + n12, 1, 1])/(-1 + n4) + 
   j[p4a, n1, 0, n3, -1 + n4, 0, 1, n7, 2, 1 + n9, 1, 0, n12, 1, 1]/
    (1 - n4) + (n7*j[p4a, n1, 0, n3, -1 + n4, 0, 1, 1 + n7, 1, 1 + n9, 0, 1, 
      n12, 1, 1])/(-1 + n4) - (n7*j[p4a, n1, 0, n3, -1 + n4, 0, 1, 1 + n7, 1, 
      1 + n9, 1, 0, n12, 1, 1])/(-1 + n4) + j[p4a, n1, 0, n3, n4, -1, 1, n7, 
    1, 1 + n9, 1, 1, n12, 1, 1] + j[p4a, n1, 0, n3, n4, 0, 0, n7, 1, 1 + n9, 
    1, 1, n12, 1, 1] + j[p4a, n1, 0, n3, n4, 0, 1, n7, 1, 1 + n9, 0, 1, n12, 
    1, 1] - j[p4a, n1, 0, n3, n4, 0, 1, n7, 1, 1 + n9, 1, 0, n12, 1, 1] - 
   (n3*j[p4a, n1, 0, 1 + n3, -1 + n4, 0, 1, -1 + n7, 1, 1 + n9, 1, 1, n12, 1, 
      1])/(-1 + n4) - (n3*j[p4a, n1, 0, 1 + n3, -1 + n4, 0, 1, n7, 0, 1 + n9, 
      1, 1, n12, 1, 1])/(-1 + n4) + 
   (n3*j[p4a, n1, 0, 1 + n3, -1 + n4, 0, 1, n7, 1, 1 + n9, 0, 1, n12, 1, 1])/
    (-1 + n4) - (n3*j[p4a, n1, 0, 1 + n3, -1 + n4, 0, 1, n7, 1, 1 + n9, 1, 0, 
      n12, 1, 1])/(-1 + n4) + (n3*j[p4a, n1, 0, 1 + n3, -1 + n4, 0, 1, n7, 1, 
      1 + n9, 1, 1, -1 + n12, 1, 1])/(-1 + n4) - 
   (n3*j[p4a, n1, 0, 1 + n3, -1 + n4, 0, 1, n7, 1, 1 + n9, 1, 1, n12, 1, 1])/
    (-1 + n4), j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n13 == 1 && n14 == 1 && n5 == 0 && n6 == 1 && 
    n7 == 1 && n8 == 1 &&  !(n12 == 0 || n4 == 1 || n9 == 0) -> 
  j[p4a, -1 + n1, n2, -1 + n3, n4, 0, 1, 1, 1, 1 + n9, 1, 1, 1 + n12, 1, 1] + 
   ((2 - d + n1 + n3)*j[p4a, -1 + n1, n2, n3, -1 + n4, 0, 1, 1, 1, 1 + n9, 1, 
      1, 1 + n12, 1, 1])/(-1 + n4) + j[p4a, -1 + n1, n2, n3, -1 + n4, 0, 1, 
     1, 2, 1 + n9, 1, 1, 1 + n12, 0, 1]/(-1 + n4) + 
   j[p4a, -1 + n1, n2, n3, n4, -1, 1, 1, 1, 1 + n9, 1, 1, 1 + n12, 1, 1] - 
   j[p4a, -1 + n1, n2, n3, n4, 0, 1, 0, 1, 1 + n9, 1, 1, 1 + n12, 1, 1] + 
   j[p4a, -1 + n1, n2, n3, n4, 0, 1, 1, 1, 1 + n9, 1, 1, n12, 1, 1] - 
   j[p4a, -1 + n1, n2, n3, n4, 0, 1, 1, 1, 1 + n9, 1, 1, 1 + n12, 1, 0] - 
   (n3*j[p4a, -1 + n1, n2, 1 + n3, -1 + n4, 0, 1, 0, 1, 1 + n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n4) + 
   (n3*j[p4a, -1 + n1, n2, 1 + n3, -1 + n4, 0, 1, 1, 1, 1 + n9, 1, 1, n12, 1, 
      1])/(-1 + n4) + (n3*j[p4a, -1 + n1, n2, 1 + n3, -1 + n4, 0, 1, 1, 1, 
      1 + n9, 1, 1, 1 + n12, 0, 1])/(-1 + n4) - 
   (n2*j[p4a, -1 + n1, 1 + n2, -1 + n3, -1 + n4, 0, 1, 1, 1, 1 + n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n4) + 
   (n2*j[p4a, -1 + n1, 1 + n2, n3, -1 + n4, 0, 1, 0, 1, 1 + n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n4) + 
   (n2*j[p4a, -1 + n1, 1 + n2, n3, -1 + n4, 0, 1, 1, 0, 1 + n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n4) - 
   (n2*j[p4a, -1 + n1, 1 + n2, n3, -1 + n4, 0, 1, 1, 1, 1 + n9, 1, 1, n12, 1, 
      1])/(-1 + n4) + (2*n2*j[p4a, -1 + n1, 1 + n2, n3, -1 + n4, 0, 1, 1, 1, 
      1 + n9, 1, 1, 1 + n12, 0, 1])/(-1 + n4) - j[p4a, n1, -1 + n2, n3, n4, 
    0, 1, 1, 1, 1 + n9, 1, 1, n12, 1, 1] - 
   (n12*j[p4a, n1, n2, n3, -1 + n4, 0, 1, 1, 1, 1 + n9, 1, 0, 1 + n12, 1, 1])/
    (-1 + n4) + ((-3 + d - n12 - n4)*j[p4a, n1, n2, n3, -1 + n4, 0, 1, 1, 1, 
      1 + n9, 1, 1, n12, 1, 1])/(-1 + n4) + 
   ((-1 + n1)*j[p4a, n1, n2, n3, -1 + n4, 0, 1, 1, 1, 1 + n9, 1, 1, 1 + n12, 
      0, 1])/(-1 + n4) + ((1 - n1 + n12)*j[p4a, n1, n2, n3, -1 + n4, 0, 1, 1, 
      1, 1 + n9, 1, 1, 1 + n12, 1, 1])/(-1 + n4) + 
   j[p4a, n1, n2, n3, -1 + n4, 0, 1, 1, 2, 1 + n9, 1, 0, n12, 1, 1]/
    (1 - n4) + j[p4a, n1, n2, n3, -1 + n4, 0, 1, 2, 1, 1 + n9, 0, 1, n12, 1, 
     1]/(-1 + n4) + j[p4a, n1, n2, n3, -1 + n4, 0, 1, 2, 1, 1 + n9, 1, 0, 
     n12, 1, 1]/(1 - n4) + j[p4a, n1, n2, n3, n4, -1, 1, 1, 1, 1 + n9, 1, 1, 
    n12, 1, 1] + j[p4a, n1, n2, n3, n4, 0, 0, 1, 1, 1 + n9, 1, 1, n12, 1, 
    1] + j[p4a, n1, n2, n3, n4, 0, 1, 1, 1, 1 + n9, 0, 1, n12, 1, 1] - 
   j[p4a, n1, n2, n3, n4, 0, 1, 1, 1, 1 + n9, 1, 0, n12, 1, 1] - 
   (n3*j[p4a, n1, n2, 1 + n3, -1 + n4, 0, 1, 0, 1, 1 + n9, 1, 1, n12, 1, 1])/
    (-1 + n4) - (n3*j[p4a, n1, n2, 1 + n3, -1 + n4, 0, 1, 1, 0, 1 + n9, 1, 1, 
      n12, 1, 1])/(-1 + n4) + (n3*j[p4a, n1, n2, 1 + n3, -1 + n4, 0, 1, 1, 1, 
      1 + n9, 0, 1, n12, 1, 1])/(-1 + n4) - 
   (n3*j[p4a, n1, n2, 1 + n3, -1 + n4, 0, 1, 1, 1, 1 + n9, 1, 0, n12, 1, 1])/
    (-1 + n4) + (n3*j[p4a, n1, n2, 1 + n3, -1 + n4, 0, 1, 1, 1, 1 + n9, 1, 1, 
      -1 + n12, 1, 1])/(-1 + n4) - 
   (n3*j[p4a, n1, n2, 1 + n3, -1 + n4, 0, 1, 1, 1, 1 + n9, 1, 1, n12, 1, 1])/
    (-1 + n4), j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n4 == 1 && 
    n6 == 1 && n8 == 1 && n5 != 0 -> 
  (n9*j[p4a, -1 + n1, n2, n3, 1, n5, 1, n7, 1, 1 + n9, 1, 1, 0, 1, 1])/
    (4 - d + n5 + n9) + (n9*j[p4a, n1, -1 + n2, -1 + n3, 1, 1 + n5, 1, n7, 1, 
      1 + n9, 1, 1, 0, 1, 1])/(4 - d + n5 + n9) - 
   (n9*j[p4a, n1, -1 + n2, n3, 1, n5, 1, n7, 1, 1 + n9, 1, 1, 0, 1, 1])/
    (4 - d + n5 + n9) + j[p4a, n1, n2, -2 + n3, 1, 1 + n5, 1, n7, 1, n9, 1, 
     1, 0, 1, 2]/(-4 + d - n5 - n9) + j[p4a, n1, n2, -1 + n3, 0, 1 + n5, 1, 
     n7, 1, n9, 1, 1, 0, 1, 2]/(4 - d + n5 + n9) + 
   (n9*j[p4a, n1, n2, -1 + n3, 0, 1 + n5, 1, n7, 1, 1 + n9, 1, 1, 0, 1, 1])/
    (4 - d + n5 + n9) + ((1 + n5)*j[p4a, n1, n2, -1 + n3, 0, 2 + n5, 1, n7, 
      1, n9, 1, 1, 0, 1, 1])/(4 - d + n5 + n9) - 
   (n9*j[p4a, n1, n2, -1 + n3, 1, n5, 1, n7, 1, 1 + n9, 1, 1, 0, 1, 1])/
    (4 - d + n5 + n9) + j[p4a, n1, n2, -1 + n3, 1, 1 + n5, 1, -1 + n7, 1, n9, 
     2, 1, 0, 1, 1]/(-4 + d - n5 - n9) - 
   (n9*j[p4a, n1, n2, -1 + n3, 1, 1 + n5, 1, -1 + n7, 1, 1 + n9, 1, 1, 0, 1, 
      1])/(4 - d + n5 + n9) - (n9*j[p4a, n1, n2, -1 + n3, 1, 1 + n5, 1, n7, 
      0, 1 + n9, 1, 1, 0, 1, 1])/(4 - d + n5 + n9) + 
   j[p4a, n1, n2, -1 + n3, 1, 1 + n5, 1, n7, 1, n9, 1, 1, 0, 0, 2]/
    (4 - d + n5 + n9) + ((1 - d + n2 + n3 + n5 + 2*n7)*
     j[p4a, n1, n2, -1 + n3, 1, 1 + n5, 1, n7, 1, n9, 1, 1, 0, 1, 1])/
    (-4 + d - n5 - n9) + j[p4a, n1, n2, -1 + n3, 1, 1 + n5, 1, n7, 1, n9, 2, 
     0, 0, 1, 1]/(4 - d + n5 + n9) - 
   (n9*j[p4a, n1, n2, -1 + n3, 1, 1 + n5, 1, n7, 1, 1 + n9, 0, 1, 0, 1, 1])/
    (4 - d + n5 + n9) + (n9*j[p4a, n1, n2, -1 + n3, 1, 1 + n5, 1, n7, 1, 
      1 + n9, 1, 0, 0, 1, 1])/(4 - d + n5 + n9) + 
   ((-1 - n5)*j[p4a, n1, n2, -1 + n3, 1, 2 + n5, 1, -1 + n7, 1, n9, 1, 1, 0, 
      1, 1])/(4 - d + n5 + n9) + j[p4a, n1, n2, n3, 0, n5, 1, n7, 1, n9, 1, 
     1, 0, 1, 2]/(-4 + d - n5 - n9) - 
   (n9*j[p4a, n1, n2, n3, 0, n5, 1, n7, 1, 1 + n9, 1, 1, 0, 1, 1])/
    (4 - d + n5 + n9) + j[p4a, n1, n2, n3, 0, n5, 2, n7, 1, n9, 1, 1, 0, 1, 
     1]/(-4 + d - n5 - n9) - (n5*j[p4a, n1, n2, n3, 0, 1 + n5, 1, n7, 1, n9, 
      1, 1, 0, 1, 1])/(4 - d + n5 + n9) + 
   (n9*j[p4a, n1, n2, n3, 1, n5, 1, -1 + n7, 1, 1 + n9, 1, 1, 0, 1, 1])/
    (4 - d + n5 + n9) + (n9*j[p4a, n1, n2, n3, 1, n5, 1, n7, 0, 1 + n9, 1, 1, 
      0, 1, 1])/(4 - d + n5 + n9) + 
   (n9*j[p4a, n1, n2, n3, 1, n5, 1, n7, 1, 1 + n9, 0, 1, 0, 1, 1])/
    (4 - d + n5 + n9) - (n9*j[p4a, n1, n2, n3, 1, n5, 1, n7, 1, 1 + n9, 1, 0, 
      0, 1, 1])/(4 - d + n5 + n9) + j[p4a, n1, n2, n3, 1, n5, 2, n7, 0, n9, 
     1, 1, 0, 1, 1]/(4 - d + n5 + n9) + 
   ((1 - n3 + n5)*j[p4a, n1, n2, n3, 1, 1 + n5, 1, -1 + n7, 1, n9, 1, 1, 0, 
      1, 1])/(4 - d + n5 + n9) + 
   ((1 - n3)*j[p4a, n1, n2, n3, 1, 1 + n5, 1, n7, 1, n9, 1, 1, 0, 0, 1])/
    (-4 + d - n5 - n9) + (n2*j[p4a, n1, 1 + n2, -1 + n3, 1, 1 + n5, 1, 
      -1 + n7, 1, n9, 1, 1, 0, 1, 1])/(-4 + d - n5 - n9) - 
   (n2*j[p4a, n1, 1 + n2, -1 + n3, 1, 1 + n5, 1, n7, 0, n9, 1, 1, 0, 1, 1])/
    (-4 + d - n5 - n9), j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?Positive, (n4_)?Positive, (n5_)?NonPositive, (n6_)?Positive, 
    (n7_)?Positive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n13 == 1 && n14 == 1 && n3 == 1 && n4 == 1 && 
    n6 == 1 && n8 == 1 -> 
  (n9*j[p4a, -1 + n1, n2, 1, 1, n5, 1, n7, 1, 1 + n9, 1, 1, n12, 1, 1])/
    (4 - d + n5 + n9) - (n9*j[p4a, n1, -1 + n2, 1, 1, n5, 1, n7, 1, 1 + n9, 
      1, 1, n12, 1, 1])/(4 - d + n5 + n9) + 
   j[p4a, n1, n2, 0, 1, n5, 1, n7, 1, n9, 1, 1, n12, 1, 2]/
    (4 - d + n5 + n9) + j[p4a, n1, n2, 1, 0, n5, 1, n7, 1, n9, 1, 1, n12, 1, 
     2]/(-4 + d - n5 - n9) - (n9*j[p4a, n1, n2, 1, 0, n5, 1, n7, 1, 1 + n9, 
      1, 1, n12, 1, 1])/(4 - d + n5 + n9) + 
   j[p4a, n1, n2, 1, 0, n5, 2, n7, 1, n9, 1, 1, n12, 1, 1]/
    (-4 + d - n5 - n9) - (n5*j[p4a, n1, n2, 1, 0, 1 + n5, 1, n7, 1, n9, 1, 1, 
      n12, 1, 1])/(4 - d + n5 + n9) + 
   (n9*j[p4a, n1, n2, 1, 1, n5, 1, -1 + n7, 1, 1 + n9, 1, 1, n12, 1, 1])/
    (4 - d + n5 + n9) + (n9*j[p4a, n1, n2, 1, 1, n5, 1, n7, 0, 1 + n9, 1, 1, 
      n12, 1, 1])/(4 - d + n5 + n9) + 
   (n9*j[p4a, n1, n2, 1, 1, n5, 1, n7, 1, 1 + n9, 0, 1, n12, 1, 1])/
    (4 - d + n5 + n9) - (n9*j[p4a, n1, n2, 1, 1, n5, 1, n7, 1, 1 + n9, 1, 0, 
      n12, 1, 1])/(4 - d + n5 + n9) + j[p4a, n1, n2, 1, 1, n5, 2, n7, 0, n9, 
     1, 1, n12, 1, 1]/(4 - d + n5 + n9) + 
   (n5*j[p4a, n1, n2, 1, 1, 1 + n5, 1, -1 + n7, 1, n9, 1, 1, n12, 1, 1])/
    (4 - d + n5 + n9), j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?Positive, (n4_)?Positive, (n5_)?NonPositive, (n6_)?Positive, 
    (n7_)?Positive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n5 == 0 && n8 == 1 && n9 == 0 && n11 != 1 -> 
  ((4 - d + 2*n4)*j[p4a, 0, 0, n3, n4, 0, n6, n7, 2, 0, 1, -1 + n11, 0, 1, 
      1])/((-1 + n11)*(-d + 2*n11 + 2*n7)) - 
   (2*n7*j[p4a, 0, 0, n3, n4, 0, n6, 1 + n7, 1, 0, 0, n11, 0, 1, 1])/
    (d - 2*n11 - 2*n7) - (n7*j[p4a, 0, 0, n3, n4, 0, n6, 1 + n7, 1, 0, 1, 
      -1 + n11, 0, 1, 1])/(-1 + n11) - 
   (2*n4*j[p4a, 0, 0, n3, 1 + n4, 0, -1 + n6, n7, 2, 0, 1, -1 + n11, 0, 1, 
      1])/((-1 + n11)*(-d + 2*n11 + 2*n7)) + 
   ((4*n4 - d*n4 + 2*n4^2)*j[p4a, 0, 0, n3, 1 + n4, 0, n6, n7, 1, 0, 1, 
      -1 + n11, 0, 1, 1])/((-1 + n11)*(-d + 2*n11 + 2*n7)) + 
   (2*n3*j[p4a, 0, 0, 1 + n3, n4, 0, n6, -1 + n7, 1, 0, 1, n11, 0, 1, 1])/
    (d - 2*n11 - 2*n7) - (2*n3*j[p4a, 0, 0, 1 + n3, n4, 0, n6, n7, 1, 0, 0, 
      n11, 0, 1, 1])/(d - 2*n11 - 2*n7) + 
   ((-4*n3 + 3*d*n3 - 2*n11*n3 - 2*n3^2 - 4*n3*n7)*j[p4a, 0, 0, 1 + n3, n4, 
      0, n6, n7, 1, 0, 1, -1 + n11, 0, 1, 1])/
    ((-1 + n11)*(-d + 2*n11 + 2*n7)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n10 == 1 && n11 == 1 && n12 == 0 && 
    n13 == 1 && n14 == 1 && n2 == 0 && n5 == 0 && n8 == 1 && n9 == 0 && 
    n6 != 1 -> -((n4*j[p4a, n1, 0, n3, 1 + n4, 0, -1 + n6, n7, 1, 0, 1, 1, 0, 
       1, 1])/(-1 + n6)) + (2*n4*j[p4a, n1, 0, n3, 1 + n4, 0, n6, n7, 0, 0, 
      1, 1, 0, 1, 1])/(-d + 2*n4 + 2*n6) + 
   ((-4 + d)*j[p4a, n1, 0, 1 + n3, -1 + n4, 0, -1 + n6, n7, 1, 0, 1, 1, 0, 1, 
      2])/((d - 2*n4 - 2*n6)*(-1 + n6)) + 
   ((-4 + d)*j[p4a, n1, 0, 1 + n3, -1 + n4, 0, n6, n7, 1, 0, 1, 1, 0, 1, 1])/
    (d - 2*n4 - 2*n6) - ((-4 + d)*(d - 2*n4 - n6)*j[p4a, n1, 0, 1 + n3, n4, 
      0, -1 + n6, n7, 1, 0, 1, 1, 0, 1, 1])/((d - 2*n4 - 2*n6)*(-1 + n6)) + 
   ((4 - d)*j[p4a, n1, 0, 1 + n3, n4, 0, n6, n7, 0, 0, 1, 1, 0, 1, 1])/
    (d - 2*n4 - 2*n6), j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?Positive, (n4_)?Positive, (n5_)?NonPositive, (n6_)?Positive, 
    (n7_)?Positive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n5 == 0 && 
    n7 == 1 && n8 == 1 && n9 == 0 && n6 != 1 -> 
  -((n4*j[p4a, n1, n2, n3, 1 + n4, 0, -1 + n6, 1, 1, 0, 1, 1, 0, 1, 1])/
     (-1 + n6)) + (2*n4*j[p4a, n1, n2, n3, 1 + n4, 0, n6, 1, 0, 0, 1, 1, 0, 
      1, 1])/(-d + 2*n4 + 2*n6) + 
   ((-4 + d)*j[p4a, n1, n2, 1 + n3, -1 + n4, 0, -1 + n6, 1, 1, 0, 1, 1, 0, 1, 
      2])/((d - 2*n4 - 2*n6)*(-1 + n6)) + 
   ((-4 + d)*j[p4a, n1, n2, 1 + n3, -1 + n4, 0, n6, 1, 1, 0, 1, 1, 0, 1, 1])/
    (d - 2*n4 - 2*n6) - ((-4 + d)*(d - 2*n4 - n6)*j[p4a, n1, n2, 1 + n3, n4, 
      0, -1 + n6, 1, 1, 0, 1, 1, 0, 1, 1])/((d - 2*n4 - 2*n6)*(-1 + n6)) + 
   ((4 - d)*j[p4a, n1, n2, 1 + n3, n4, 0, n6, 1, 0, 0, 1, 1, 0, 1, 1])/
    (d - 2*n4 - 2*n6), j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?Positive, (n4_)?Positive, (n5_)?NonPositive, (n6_)?Positive, 
    (n7_)?Positive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n5 == 0 && n6 == 1 && n9 == 0 && n10 != 1 -> 
  -((n7*j[p4a, 0, 0, n3, n4, 0, 1, 1 + n7, n8, 0, -1 + n10, 1, 0, 1, 1])/
     (-1 + n10)) - (2*n7*j[p4a, 0, 0, n3, n4, 0, 1, 1 + n7, n8, 0, n10, 0, 0, 
      1, 1])/(d - 2*n10 - 2*n7) + 
   ((4 - d + 2*n4)*j[p4a, 0, 0, n3, n4, 0, 2, n7, n8, 0, -1 + n10, 1, 0, 1, 
      1])/((-1 + n10)*(-d + 2*n10 + 2*n7)) + 
   ((4*n4 - d*n4 + 2*n4^2)*j[p4a, 0, 0, n3, 1 + n4, 0, 1, n7, n8, 0, 
      -1 + n10, 1, 0, 1, 1])/((-1 + n10)*(-d + 2*n10 + 2*n7)) - 
   (2*n4*j[p4a, 0, 0, n3, 1 + n4, 0, 2, n7, -1 + n8, 0, -1 + n10, 1, 0, 1, 
      1])/((-1 + n10)*(-d + 2*n10 + 2*n7)) + 
   (2*n3*j[p4a, 0, 0, 1 + n3, -1 + n4, 0, 2, n7, n8, 0, -1 + n10, 1, 0, 1, 
      1])/((-1 + n10)*(-d + 2*n10 + 2*n7)) + 
   ((8*n3 - 3*d*n3 + 2*n3^2 + 4*n3*n4)*j[p4a, 0, 0, 1 + n3, n4, 0, 1, n7, n8, 
      0, -1 + n10, 1, 0, 1, 1])/((-1 + n10)*(-d + 2*n10 + 2*n7)) - 
   (2*n3*j[p4a, 0, 0, 1 + n3, n4, 0, 2, n7, -1 + n8, 0, -1 + n10, 1, 0, 1, 
      1])/((-1 + n10)*(-d + 2*n10 + 2*n7)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n1 == 0 && n10 == 1 && n12 == 0 && 
    n13 == 1 && n14 == 1 && n2 == 0 && n5 == 0 && n6 == 1 && n9 == 0 && 
    n11 != 1 -> ((2*n8 - d*n8 + 2*n4*n8 + 2*n8^2)*j[p4a, 0, 0, n3, n4, 0, 1, 
      n7, 1 + n8, 0, 1, -1 + n11, 0, 1, 1])/
    ((-1 + n11)*(-d + 2*n11 + 2*n7)) - 
   (2*n7*j[p4a, 0, 0, n3, n4, 0, 1, 1 + n7, n8, 0, 0, n11, 0, 1, 1])/
    (d - 2*n11 - 2*n7) - (n7*j[p4a, 0, 0, n3, n4, 0, 1, 1 + n7, n8, 0, 1, 
      -1 + n11, 0, 1, 1])/(-1 + n11) - 
   (2*n4*n8*j[p4a, 0, 0, n3, 1 + n4, 0, 0, n7, 1 + n8, 0, 1, -1 + n11, 0, 1, 
      1])/((-1 + n11)*(-d + 2*n11 + 2*n7)) + 
   ((2*n4 - d*n4 + 2*n4^2 + 2*n4*n8)*j[p4a, 0, 0, n3, 1 + n4, 0, 1, n7, n8, 
      0, 1, -1 + n11, 0, 1, 1])/((-1 + n11)*(-d + 2*n11 + 2*n7)) + 
   (2*n3*j[p4a, 0, 0, 1 + n3, n4, 0, 1, -1 + n7, n8, 0, 1, n11, 0, 1, 1])/
    (d - 2*n11 - 2*n7) - (2*n3*j[p4a, 0, 0, 1 + n3, n4, 0, 1, n7, n8, 0, 0, 
      n11, 0, 1, 1])/(d - 2*n11 - 2*n7) + 
   ((-4*n3 + 3*d*n3 - 2*n11*n3 - 2*n3^2 - 4*n3*n7)*j[p4a, 0, 0, 1 + n3, n4, 
      0, 1, n7, n8, 0, 1, -1 + n11, 0, 1, 1])/
    ((-1 + n11)*(-d + 2*n11 + 2*n7)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n1 == 0 && n10 == 1 && n11 == 1 && 
    n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && n5 == 0 && n6 == 1 && 
     !(n7 == 1 || n9 == 0) -> 
  -j[p4a, 0, -1, n3, n4, 0, 1, n7, n8, 1 + n9, 1, 1, 0, 1, 1] - 
   (n3*j[p4a, 0, -1, 1 + n3, n4, 0, 1, -1 + n7, n8, 1 + n9, 1, 1, 0, 1, 1])/
    (-1 + n7) - j[p4a, 0, 0, n3, -1 + n4, 0, 1, n7, n8, 1 + n9, 1, 1, 0, 1, 
    1] + j[p4a, 0, 0, n3, n4, -1, 1, n7, n8, 1 + n9, 1, 1, 0, 1, 1] + 
   j[p4a, 0, 0, n3, n4, 0, 0, -1 + n7, n8, 1 + n9, 2, 1, 0, 1, 1]/(1 - n7) + 
   ((-3 + d - n3 - n4)*j[p4a, 0, 0, n3, n4, 0, 1, -1 + n7, n8, 1 + n9, 1, 1, 
      0, 1, 1])/(-1 + n7) + j[p4a, 0, 0, n3, n4, 0, 1, n7, -1 + n8, 1 + n9, 
    1, 1, 0, 1, 1] - (2*j[p4a, 0, 0, n3, n4, 0, 1, n7, n8, n9, 2, 0, 0, 1, 
      1])/(-2 + d - 2*n7) + ((-4 + d - 2*n4)*j[p4a, 0, 0, n3, n4, 0, 2, 
      -1 + n7, n8, n9, 1, 1, 0, 1, 1])/((-2 + d - 2*n7)*(-1 + n7)) - 
   (n4*j[p4a, 0, 0, n3, 1 + n4, 0, 0, -1 + n7, n8, 1 + n9, 1, 1, 0, 1, 1])/
    (-1 + n7) + (n4*j[p4a, 0, 0, n3, 1 + n4, 0, 1, -1 + n7, -1 + n8, 1 + n9, 
      1, 1, 0, 1, 1])/(-1 + n7) + 
   ((-4*n4 + d*n4 - 2*n4^2)*j[p4a, 0, 0, n3, 1 + n4, 0, 1, -1 + n7, n8, n9, 
      1, 1, 0, 1, 1])/((-2 + d - 2*n7)*(-1 + n7)) - 
   (2*n4*j[p4a, 0, 0, n3, 1 + n4, 0, 2, -1 + n7, -1 + n8, n9, 1, 1, 0, 1, 1])/
    ((-1 + n7)*(2 - d + 2*n7)) - 
   (n3*j[p4a, 0, 0, 1 + n3, -1 + n4, 0, 1, -1 + n7, n8, 1 + n9, 1, 1, 0, 1, 
      1])/(-1 + n7) + (2*n3*j[p4a, 0, 0, 1 + n3, -1 + n4, 0, 2, -1 + n7, n8, 
      n9, 1, 1, 0, 1, 1])/((-1 + n7)*(2 - d + 2*n7)) + 
   (n3*j[p4a, 0, 0, 1 + n3, n4, 0, 1, -2 + n7, n8, 1 + n9, 1, 1, 0, 1, 1])/
    (-1 + n7) + (2*n3*j[p4a, 0, 0, 1 + n3, n4, 0, 1, -1 + n7, -1 + n8, 
      1 + n9, 1, 1, 0, 1, 1])/(-1 + n7) + 
   ((8*n3 - 3*d*n3 + 2*n3^2 + 4*n3*n4 + 2*n3*n9)*j[p4a, 0, 0, 1 + n3, n4, 0, 
      1, -1 + n7, n8, n9, 1, 1, 0, 1, 1])/((-1 + n7)*(2 - d + 2*n7)) - 
   (n3*j[p4a, 0, 0, 1 + n3, n4, 0, 1, -1 + n7, n8, 1 + n9, 1, 1, -1, 1, 1])/
    (-1 + n7) + (n3*j[p4a, 0, 0, 1 + n3, n4, 0, 1, -1 + n7, n8, 1 + n9, 1, 1, 
      0, 0, 1])/(-1 + n7) + ((2*n3 - d*n3 + 2*n3*n7 + 2*n3*n9)*
     j[p4a, 0, 0, 1 + n3, n4, 0, 1, -1 + n7, n8, 1 + n9, 1, 1, 0, 1, 0])/
    ((-1 + n7)*(2 - d + 2*n7)) - 
   (2*n3*n9*j[p4a, 0, 0, 1 + n3, n4, 0, 1, -1 + n7, n8, 1 + n9, 1, 1, 0, 1, 
      1])/((-1 + n7)*(2 - d + 2*n7)) - 
   (2*n3*j[p4a, 0, 0, 1 + n3, n4, 0, 2, -1 + n7, -1 + n8, n9, 1, 1, 0, 1, 1])/
    ((-1 + n7)*(2 - d + 2*n7)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n1 == 0 && n10 == 1 && n12 == 0 && 
    n13 == 1 && n14 == 1 && n5 == 0 && n6 == 1 && n8 == 1 && n9 == 0 && 
    n11 != 1 -> ((4 - d + 2*n4)*j[p4a, 0, n2, n3, n4, 0, 1, n7, 2, 0, 1, 
      -1 + n11, 0, 1, 1])/((-1 + n11)*(-d + 2*n11 + 2*n7)) - 
   (2*n7*j[p4a, 0, n2, n3, n4, 0, 1, 1 + n7, 1, 0, 0, n11, 0, 1, 1])/
    (d - 2*n11 - 2*n7) - (n7*j[p4a, 0, n2, n3, n4, 0, 1, 1 + n7, 1, 0, 1, 
      -1 + n11, 0, 1, 1])/(-1 + n11) - 
   (2*n4*j[p4a, 0, n2, n3, 1 + n4, 0, 0, n7, 2, 0, 1, -1 + n11, 0, 1, 1])/
    ((-1 + n11)*(-d + 2*n11 + 2*n7)) + 
   ((4*n4 - d*n4 + 2*n4^2)*j[p4a, 0, n2, n3, 1 + n4, 0, 1, n7, 1, 0, 1, 
      -1 + n11, 0, 1, 1])/((-1 + n11)*(-d + 2*n11 + 2*n7)) + 
   (2*n3*j[p4a, 0, n2, 1 + n3, n4, 0, 1, -1 + n7, 1, 0, 1, n11, 0, 1, 1])/
    (d - 2*n11 - 2*n7) - (2*n3*j[p4a, 0, n2, 1 + n3, n4, 0, 1, n7, 1, 0, 0, 
      n11, 0, 1, 1])/(d - 2*n11 - 2*n7) + 
   ((-4*n3 + 3*d*n3 - 2*n11*n3 - 2*n3^2 - 4*n3*n7)*j[p4a, 0, n2, 1 + n3, n4, 
      0, 1, n7, 1, 0, 1, -1 + n11, 0, 1, 1])/
    ((-1 + n11)*(-d + 2*n11 + 2*n7)) + 
   (2*n2*n3*j[p4a, 0, 1 + n2, n3, n4, 0, 1, n7, 1, 0, 1, -1 + n11, 0, 1, 1])/
    ((-1 + n11)*(-d + 2*n11 + 2*n7)) - 
   (2*n2*n3*j[p4a, 0, 1 + n2, 1 + n3, n4, 0, 1, -1 + n7, 1, 0, 1, -1 + n11, 
      0, 1, 1])/((-1 + n11)*(-d + 2*n11 + 2*n7)) - 
   (2*n2*n3*j[p4a, 0, 1 + n2, 1 + n3, n4, 0, 1, n7, 0, 0, 1, -1 + n11, 0, 1, 
      1])/((-1 + n11)*(-d + 2*n11 + 2*n7)) + 
   (2*n2*n3*j[p4a, 0, 1 + n2, 1 + n3, n4, 0, 1, n7, 1, 0, 1, -1 + n11, -1, 1, 
      1])/((-1 + n11)*(-d + 2*n11 + 2*n7)) - 
   (4*n2*n3*j[p4a, 0, 1 + n2, 1 + n3, n4, 0, 1, n7, 1, 0, 1, -1 + n11, 0, 0, 
      1])/((-1 + n11)*(-d + 2*n11 + 2*n7)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n10 == 1 && n11 == 1 && n12 == 0 && 
    n13 == 1 && n14 == 1 && n5 == 0 && n6 == 1 && n8 == 1 && n9 == 0 && 
     !(n2 == -1 || n2 == 0 || n7 == 1) -> 
  (2*j[p4a, -1 + n1, 1 + n2, n3, n4, 0, 1, n7, 1, 0, 0, 2, 0, 1, 1])/
    (-2 + d - 2*n7) + j[p4a, -1 + n1, 1 + n2, n3, n4, 0, 1, n7, 1, 0, 1, 1, 
    0, 1, 1] - (2*n4*j[p4a, -1 + n1, 1 + n2, n3, 1 + n4, 0, 0, -1 + n7, 2, 0, 
      1, 1, 0, 1, 1])/((-2 + d - 2*n7)*(-1 + n7)) + 
   ((4*n4 - d*n4 + 2*n4^2)*j[p4a, -1 + n1, 1 + n2, n3, 1 + n4, 0, 1, -1 + n7, 
      1, 0, 1, 1, 0, 1, 1])/((-2 + d - 2*n7)*(-1 + n7)) - 
   (2*n3*j[p4a, -1 + n1, 1 + n2, 1 + n3, n4, 0, 1, -2 + n7, 1, 0, 1, 2, 0, 1, 
      1])/((-2 + d - 2*n7)*(-1 + n7)) + 
   (2*n3*j[p4a, -1 + n1, 1 + n2, 1 + n3, n4, 0, 1, -1 + n7, 1, 0, 0, 2, 0, 1, 
      1])/((-2 + d - 2*n7)*(-1 + n7)) + 
   ((-2*n3 + 3*d*n3 - 2*n1*n3 - 2*n3^2 - 4*n3*n7)*j[p4a, -1 + n1, 1 + n2, 
      1 + n3, n4, 0, 1, -1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    ((-2 + d - 2*n7)*(-1 + n7)) + 
   ((4 - d + 2*n4)*j[p4a, -1 + n1, 2 + n2, n3, n4, 0, 1, -2 + n7, 1, 0, 1, 2, 
      0, 1, 1])/((-2 + d - 2*n7)*(-1 + n7)) + 
   ((4 - d + 2*n4)*j[p4a, -1 + n1, 2 + n2, n3, n4, 0, 1, -2 + n7, 2, 0, 1, 1, 
      0, 1, 1])/((-2 + d - 2*n7)*(-1 + n7)) + 
   ((-4 + d - 2*n4)*j[p4a, -1 + n1, 2 + n2, n3, n4, 0, 1, -1 + n7, 1, 0, 0, 
      2, 0, 1, 1])/((-2 + d - 2*n7)*(-1 + n7)) + 
   ((-4*d + d^2 + 6*n3 - d*n3 + 2*n2*n3 + 4*n4 - 3*d*n4 + 2*n3*n4 + 2*n4^2 + 
      8*n7 - 2*d*n7 + 4*n4*n7)*j[p4a, -1 + n1, 2 + n2, n3, n4, 0, 1, -1 + n7, 
      1, 0, 1, 1, 0, 1, 1])/((-2 + d - 2*n7)*(-1 + n7)) - 
   (n4*(4 - d + 2*n4)*j[p4a, -1 + n1, 2 + n2, n3, 1 + n4, -1, 1, -1 + n7, 1, 
      0, 1, 1, 0, 1, 1])/((-2 + d - 2*n7)*(-1 + n7)) + 
   (n4*(4 - d + 2*n4)*j[p4a, -1 + n1, 2 + n2, n3, 1 + n4, 0, 1, -2 + n7, 1, 
      0, 1, 1, 0, 1, 1])/((-2 + d - 2*n7)*(-1 + n7)) + 
   ((2*n3 - d*n3 - 2*n2*n3 + 2*n3*n4)*j[p4a, -1 + n1, 2 + n2, 1 + n3, n4, 0, 
      1, -2 + n7, 1, 0, 1, 1, 0, 1, 1])/((-2 + d - 2*n7)*(-1 + n7)) - 
   (2*(1 + n2)*n3*j[p4a, -1 + n1, 2 + n2, 1 + n3, n4, 0, 1, -1 + n7, 0, 0, 1, 
      1, 0, 1, 1])/((-2 + d - 2*n7)*(-1 + n7)) + 
   (2*(1 + n2)*n3*j[p4a, -1 + n1, 2 + n2, 1 + n3, n4, 0, 1, -1 + n7, 1, 0, 1, 
      1, -1, 1, 1])/((-2 + d - 2*n7)*(-1 + n7)) + 
   ((-8*n3 + d*n3 - 4*n2*n3 - 2*n3*n4)*j[p4a, -1 + n1, 2 + n2, 1 + n3, n4, 0, 
      1, -1 + n7, 1, 0, 1, 1, 0, 0, 1])/((-2 + d - 2*n7)*(-1 + n7)) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, 0, 1, -1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    (-1 + n7) + j[p4a, n1, 1 + n2, n3, n4, 0, 1, -1 + n7, 0, 0, 1, 2, 0, 1, 
     1]/(-1 + n7) + ((2 - d + n4 + n7)*j[p4a, n1, 1 + n2, n3, n4, 0, 1, 
      -1 + n7, 1, 0, 1, 1, 0, 1, 1])/(-1 + n7) + j[p4a, n1, 1 + n2, n3, n4, 
    0, 1, n7, 0, 0, 1, 1, 0, 1, 1] - 
   (n4*j[p4a, n1, 1 + n2, n3, 1 + n4, 0, 0, -1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    (-1 + n7) + (n4*j[p4a, n1, 1 + n2, n3, 1 + n4, 0, 1, -1 + n7, 0, 0, 1, 1, 
      0, 1, 1])/(-1 + n7) + (n3*j[p4a, n1, 1 + n2, 1 + n3, n4, 0, 1, -2 + n7, 
      1, 0, 1, 1, 0, 1, 1])/(-1 + n7) + 
   (2*n3*j[p4a, n1, 1 + n2, 1 + n3, n4, 0, 1, -1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (-1 + n7) - (n3*j[p4a, n1, 1 + n2, 1 + n3, n4, 0, 1, -1 + n7, 1, 0, 1, 1, 
      -1, 1, 1])/(-1 + n7) + ((d*n3 - 2*n1*n3 - 2*n3*n7)*
     j[p4a, n1, 1 + n2, 1 + n3, n4, 0, 1, -1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    ((-2 + d - 2*n7)*(-1 + n7)) + 
   (2*(-1 + n1)*n3*j[p4a, n1, 1 + n2, 1 + n3, n4, 0, 1, -1 + n7, 1, 0, 1, 1, 
      0, 1, 1])/((-2 + d - 2*n7)*(-1 + n7)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n10 == 1 && n11 == 1 && n12 == 0 && 
    n13 == 1 && n14 == 1 && n2 == 0 && n5 == 0 && n6 == 1 && n8 == 1 && 
     !(n7 == 1 || n9 == 0) -> 
  -j[p4a, n1, -1, n3, n4, 0, 1, n7, 1, 1 + n9, 1, 1, 0, 1, 1] - 
   (n3*j[p4a, n1, -1, 1 + n3, n4, 0, 1, -1 + n7, 1, 1 + n9, 1, 1, 0, 1, 1])/
    (-1 + n7) - j[p4a, n1, 0, n3, -1 + n4, 0, 1, n7, 1, 1 + n9, 1, 1, 0, 1, 
    1] + j[p4a, n1, 0, n3, n4, -1, 1, n7, 1, 1 + n9, 1, 1, 0, 1, 1] + 
   j[p4a, n1, 0, n3, n4, 0, 0, -1 + n7, 1, 1 + n9, 2, 1, 0, 1, 1]/(1 - n7) + 
   ((-3 + d - n3 - n4)*j[p4a, n1, 0, n3, n4, 0, 1, -1 + n7, 1, 1 + n9, 1, 1, 
      0, 1, 1])/(-1 + n7) + j[p4a, n1, 0, n3, n4, 0, 1, n7, 0, 1 + n9, 1, 1, 
    0, 1, 1] - (2*j[p4a, n1, 0, n3, n4, 0, 1, n7, 1, n9, 2, 0, 0, 1, 1])/
    (-2 + d - 2*n7) + ((-4 + d - 2*n4)*j[p4a, n1, 0, n3, n4, 0, 2, -1 + n7, 
      1, n9, 1, 1, 0, 1, 1])/((-2 + d - 2*n7)*(-1 + n7)) - 
   (n4*j[p4a, n1, 0, n3, 1 + n4, 0, 0, -1 + n7, 1, 1 + n9, 1, 1, 0, 1, 1])/
    (-1 + n7) + (n4*j[p4a, n1, 0, n3, 1 + n4, 0, 1, -1 + n7, 0, 1 + n9, 1, 1, 
      0, 1, 1])/(-1 + n7) + ((-4*n4 + d*n4 - 2*n4^2)*
     j[p4a, n1, 0, n3, 1 + n4, 0, 1, -1 + n7, 1, n9, 1, 1, 0, 1, 1])/
    ((-2 + d - 2*n7)*(-1 + n7)) - 
   (2*n4*j[p4a, n1, 0, n3, 1 + n4, 0, 2, -1 + n7, 0, n9, 1, 1, 0, 1, 1])/
    ((-1 + n7)*(2 - d + 2*n7)) - 
   (n3*j[p4a, n1, 0, 1 + n3, -1 + n4, 0, 1, -1 + n7, 1, 1 + n9, 1, 1, 0, 1, 
      1])/(-1 + n7) + (2*n3*j[p4a, n1, 0, 1 + n3, -1 + n4, 0, 2, -1 + n7, 1, 
      n9, 1, 1, 0, 1, 1])/((-1 + n7)*(2 - d + 2*n7)) + 
   (n3*j[p4a, n1, 0, 1 + n3, n4, 0, 1, -2 + n7, 1, 1 + n9, 1, 1, 0, 1, 1])/
    (-1 + n7) + (2*n3*j[p4a, n1, 0, 1 + n3, n4, 0, 1, -1 + n7, 0, 1 + n9, 1, 
      1, 0, 1, 1])/(-1 + n7) + ((8*n3 - 3*d*n3 + 2*n3^2 + 4*n3*n4 + 2*n3*n9)*
     j[p4a, n1, 0, 1 + n3, n4, 0, 1, -1 + n7, 1, n9, 1, 1, 0, 1, 1])/
    ((-1 + n7)*(2 - d + 2*n7)) - 
   (n3*j[p4a, n1, 0, 1 + n3, n4, 0, 1, -1 + n7, 1, 1 + n9, 1, 1, -1, 1, 1])/
    (-1 + n7) + (n3*j[p4a, n1, 0, 1 + n3, n4, 0, 1, -1 + n7, 1, 1 + n9, 1, 1, 
      0, 0, 1])/(-1 + n7) + ((2*n3 - d*n3 + 2*n3*n7 + 2*n3*n9)*
     j[p4a, n1, 0, 1 + n3, n4, 0, 1, -1 + n7, 1, 1 + n9, 1, 1, 0, 1, 0])/
    ((-1 + n7)*(2 - d + 2*n7)) - 
   (2*n3*n9*j[p4a, n1, 0, 1 + n3, n4, 0, 1, -1 + n7, 1, 1 + n9, 1, 1, 0, 1, 
      1])/((-1 + n7)*(2 - d + 2*n7)) - 
   (2*n3*j[p4a, n1, 0, 1 + n3, n4, 0, 2, -1 + n7, 0, n9, 1, 1, 0, 1, 1])/
    ((-1 + n7)*(2 - d + 2*n7)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n10 == 1 && n11 == 1 && n13 == 1 && 
    n14 == 1 && n2 == 0 && n5 == 0 && n6 == 1 && n8 == 1 && n9 == 0 && 
     !(n12 == -1 || n12 == 0 || n3 == 1) -> 
  ((-2 - n12)*j[p4a, -1 + n1, -1, -1 + n3, n4, 0, 1, n7, 1, 0, 1, 1, 3 + n12, 
      1, 1])/(-1 + n3) - j[p4a, -1 + n1, -1, n3, n4, 0, 1, n7, 1, 0, 1, 1, 
    2 + n12, 1, 1] + j[p4a, -1 + n1, 0, -2 + n3, n4, 0, 1, n7, 1, 0, 1, 1, 
     2 + n12, 2, 1]/(1 - n3) + 
   ((-2 - n12)*j[p4a, -1 + n1, 0, -2 + n3, n4, 0, 1, n7, 1, 0, 1, 1, 3 + n12, 
      1, 1])/(-1 + n3) + j[p4a, -1 + n1, 0, -1 + n3, n4, 0, 1, -1 + n7, 1, 0, 
     1, 1, 2 + n12, 2, 1]/(-1 + n3) + 
   (2*(2 + n12)*j[p4a, -1 + n1, 0, -1 + n3, n4, 0, 1, -1 + n7, 1, 0, 1, 1, 
      3 + n12, 1, 1])/(-1 + n3) + j[p4a, -1 + n1, 0, -1 + n3, n4, 0, 1, 
     -1 + n7, 1, 0, 1, 2, 2 + n12, 1, 1]/(-1 + n3) + 
   j[p4a, -1 + n1, 0, -1 + n3, n4, 0, 1, n7, 0, 0, 1, 1, 2 + n12, 2, 1]/
    (-1 + n3) + ((2 + n12)*j[p4a, -1 + n1, 0, -1 + n3, n4, 0, 1, n7, 0, 0, 1, 
      1, 3 + n12, 1, 1])/(-1 + n3) + j[p4a, -1 + n1, 0, -1 + n3, n4, 0, 1, 
     n7, 1, 0, 0, 2, 2 + n12, 1, 1]/(1 - n3) + 
   ((4 - 2*d + n1 + n4 + 2*n7)*j[p4a, -1 + n1, 0, -1 + n3, n4, 0, 1, n7, 1, 
      0, 1, 1, 2 + n12, 1, 1])/(-1 + n3) + 
   ((2 + n12)*j[p4a, -1 + n1, 0, -1 + n3, n4, 0, 1, n7, 1, 0, 1, 1, 3 + n12, 
      0, 1])/(-1 + n3) - (n4*j[p4a, -1 + n1, 0, -1 + n3, 1 + n4, 0, 0, n7, 1, 
      0, 1, 1, 2 + n12, 1, 1])/(-1 + n3) + 
   (n4*j[p4a, -1 + n1, 0, -1 + n3, 1 + n4, 0, 1, n7, 0, 0, 1, 1, 2 + n12, 1, 
      1])/(-1 + n3) + j[p4a, -1 + n1, 0, n3, n4, 0, 1, -1 + n7, 1, 0, 1, 1, 
    2 + n12, 1, 1] + 2*j[p4a, -1 + n1, 0, n3, n4, 0, 1, n7, 0, 0, 1, 1, 
     2 + n12, 1, 1] - j[p4a, -1 + n1, 0, n3, n4, 0, 1, n7, 1, 0, 1, 1, 
    1 + n12, 1, 1] + j[p4a, -1 + n1, 0, n3, n4, 0, 1, n7, 1, 0, 1, 1, 
    2 + n12, 0, 1] + ((-1 + n1)*j[p4a, n1, -1, -1 + n3, n4, 0, 1, n7, 1, 0, 
      1, 1, 2 + n12, 1, 1])/(-1 + n3) - j[p4a, n1, -1, n3, n4, 0, 1, n7, 1, 
    0, 1, 1, 1 + n12, 1, 1] + ((1 - n1)*j[p4a, n1, 0, -1 + n3, n4, 0, 1, n7, 
      1, 0, 0, 1, 2 + n12, 1, 1])/(-1 + n3) + 
   ((1 + n12)*j[p4a, n1, 0, -1 + n3, n4, 0, 1, n7, 1, 0, 1, 0, 2 + n12, 1, 
      1])/(-1 + n3) + ((6 - 2*d + 2*n1 + n12 + n4 + n7)*
     j[p4a, n1, 0, -1 + n3, n4, 0, 1, n7, 1, 0, 1, 1, 1 + n12, 1, 1])/
    (-1 + n3) + j[p4a, n1, 0, -1 + n3, n4, 0, 1, n7, 1, 0, 1, 1, 1 + n12, 2, 
     1]/(1 - n3) + ((-1 - n12)*j[p4a, n1, 0, -1 + n3, n4, 0, 1, n7, 1, 0, 1, 
      1, 2 + n12, 1, 1])/(-1 + n3) - 
   (n7*j[p4a, n1, 0, -1 + n3, n4, 0, 1, 1 + n7, 1, 0, 0, 1, 1 + n12, 1, 1])/
    (-1 + n3) + (n7*j[p4a, n1, 0, -1 + n3, n4, 0, 1, 1 + n7, 1, 0, 1, 0, 
      1 + n12, 1, 1])/(-1 + n3) - 
   (n4*j[p4a, n1, 0, -1 + n3, 1 + n4, 0, 0, n7, 1, 0, 1, 1, 1 + n12, 1, 1])/
    (-1 + n3) + (n4*j[p4a, n1, 0, -1 + n3, 1 + n4, 0, 1, n7, 0, 0, 1, 1, 
      1 + n12, 1, 1])/(-1 + n3) + j[p4a, n1, 0, n3, n4, 0, 1, -1 + n7, 1, 0, 
    1, 1, 1 + n12, 1, 1] + 2*j[p4a, n1, 0, n3, n4, 0, 1, n7, 0, 0, 1, 1, 
     1 + n12, 1, 1] + j[p4a, n1, 0, n3, n4, 0, 1, n7, 1, 0, 1, 1, 1 + n12, 0, 
    1], j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n6 == 1 && n7 == 1 && n9 == 0 && n10 != 1 -> 
  j[p4a, 0, 0, n3, n4, n5, 1, 2, n8, 0, -1 + n10, 1, 0, 1, 1]/(1 - n10) - 
   (2*j[p4a, 0, 0, n3, n4, n5, 1, 2, n8, 0, n10, 0, 0, 1, 1])/
    (-2 + d - 2*n10) + ((-4 + d - 2*n4)*j[p4a, 0, 0, n3, n4, n5, 2, 1, n8, 0, 
      -1 + n10, 1, 0, 1, 1])/((-2 + d - 2*n10)*(-1 + n10)) + 
   ((-4*n4 + d*n4 - 2*n4^2)*j[p4a, 0, 0, n3, 1 + n4, n5, 1, 1, n8, 0, 
      -1 + n10, 1, 0, 1, 1])/((-2 + d - 2*n10)*(-1 + n10)) + 
   (2*n4*j[p4a, 0, 0, n3, 1 + n4, n5, 2, 1, -1 + n8, 0, -1 + n10, 1, 0, 1, 
      1])/((-2 + d - 2*n10)*(-1 + n10)) - 
   (2*n3*j[p4a, 0, 0, 1 + n3, -1 + n4, n5, 2, 1, n8, 0, -1 + n10, 1, 0, 1, 
      1])/((-2 + d - 2*n10)*(-1 + n10)) + 
   ((-8*n3 + 3*d*n3 - 2*n3^2 - 4*n3*n4 - 2*n3*n5)*j[p4a, 0, 0, 1 + n3, n4, 
      n5, 1, 1, n8, 0, -1 + n10, 1, 0, 1, 1])/((-2 + d - 2*n10)*(-1 + n10)) + 
   (2*n3*j[p4a, 0, 0, 1 + n3, n4, n5, 2, 1, -1 + n8, 0, -1 + n10, 1, 0, 1, 
      1])/((-2 + d - 2*n10)*(-1 + n10)) + 
   (2*n3*n5*j[p4a, 0, 0, 1 + n3, n4, 1 + n5, 1, 1, n8, 0, -1 + n10, 1, 0, 0, 
      1])/((-2 + d - 2*n10)*(-1 + n10)) - 
   (2*n3*n5*j[p4a, 0, 0, 1 + n3, n4, 1 + n5, 1, 1, n8, 0, -1 + n10, 1, 0, 1, 
      0])/((-2 + d - 2*n10)*(-1 + n10)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n1 == 0 && n10 == 1 && n12 == 0 && 
    n13 == 1 && n14 == 1 && n2 == 0 && n6 == 1 && n7 == 1 && n9 == 0 && 
    n5 != 0 -> (n8*j[p4a, 0, 0, -1 + n3, -1 + n4, 1 + n5, 1, 1, 1 + n8, 0, 1, 
      n11, 0, 1, 1])/(-3 + d - n11 - n5) - 
   (n8*j[p4a, 0, 0, -1 + n3, n4, 1 + n5, 0, 1, 1 + n8, 0, 1, n11, 0, 1, 1])/
    (-3 + d - n11 - n5) - (n11*j[p4a, 0, 0, -1 + n3, n4, 1 + n5, 1, 0, n8, 0, 
      1, 1 + n11, 0, 1, 1])/(3 - d + n11 + n5) + 
   (n11*j[p4a, 0, 0, -1 + n3, n4, 1 + n5, 1, 1, n8, 0, 0, 1 + n11, 0, 1, 1])/
    (3 - d + n11 + n5) + ((4 - 2*d + n11 + n3 + 2*n4 + 2*n5 + n8)*
     j[p4a, 0, 0, -1 + n3, n4, 1 + n5, 1, 1, n8, 0, 1, n11, 0, 1, 1])/
    (-3 + d - n11 - n5) + j[p4a, 0, 0, -1 + n3, n4, 1 + n5, 1, 1, n8, 0, 1, 
     n11, 0, 2, 0]/(3 - d + n11 + n5) + 
   ((-1 + n3 - n5)*j[p4a, 0, 0, n3, -1 + n4, 1 + n5, 1, 1, n8, 0, 1, n11, 0, 
      1, 1])/(-3 + d - n11 - n5) + j[p4a, 0, 0, n3, n4, n5, 1, 0, n8, 0, 1, 
     n11, 0, 2, 1]/(-3 + d - n11 - n5) - 
   (n11*j[p4a, 0, 0, n3, n4, n5, 1, 0, n8, 0, 1, 1 + n11, 0, 1, 1])/
    (3 - d + n11 + n5) + (n11*j[p4a, 0, 0, n3, n4, n5, 1, 1, n8, 0, 0, 
      1 + n11, 0, 1, 1])/(3 - d + n11 + n5) + 
   (n5*j[p4a, 0, 0, n3, n4, 1 + n5, 1, 0, n8, 0, 1, n11, 0, 1, 1])/
    (-3 + d - n11 - n5) + ((1 - n3)*j[p4a, 0, 0, n3, n4, 1 + n5, 1, 1, n8, 0, 
      1, n11, 0, 1, 0])/(-3 + d - n11 - n5), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n1 == 0 && n10 == 1 && n11 == 1 && 
    n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && n6 == 1 && n7 == 1 && 
    n5 != 0 -> (n8*j[p4a, 0, 0, -1 + n3, -1 + n4, 1 + n5, 1, 1, 1 + n8, n9, 
      1, 1, 0, 1, 1])/(-4 + d - n5) - 
   (n8*j[p4a, 0, 0, -1 + n3, n4, 1 + n5, 0, 1, 1 + n8, n9, 1, 1, 0, 1, 1])/
    (-4 + d - n5) + j[p4a, 0, 0, -1 + n3, n4, 1 + n5, 1, 0, n8, n9, 1, 2, 0, 
     1, 1]/(-4 + d - n5) + j[p4a, 0, 0, -1 + n3, n4, 1 + n5, 1, 1, n8, n9, 0, 
     2, 0, 1, 1]/(4 - d + n5) + ((5 - 2*d + n3 + 2*n4 + 2*n5 + n8)*
     j[p4a, 0, 0, -1 + n3, n4, 1 + n5, 1, 1, n8, n9, 1, 1, 0, 1, 1])/
    (-4 + d - n5) + j[p4a, 0, 0, -1 + n3, n4, 1 + n5, 1, 1, n8, n9, 1, 1, 0, 
     2, 0]/(4 - d + n5) + ((-1 + n3 - n5)*j[p4a, 0, 0, n3, -1 + n4, 1 + n5, 
      1, 1, n8, n9, 1, 1, 0, 1, 1])/(-4 + d - n5) + 
   j[p4a, 0, 0, n3, n4, n5, 1, 0, n8, n9, 1, 1, 0, 2, 1]/(-4 + d - n5) + 
   j[p4a, 0, 0, n3, n4, n5, 1, 0, n8, n9, 1, 2, 0, 1, 1]/(-4 + d - n5) + 
   j[p4a, 0, 0, n3, n4, n5, 1, 1, n8, n9, 0, 2, 0, 1, 1]/(4 - d + n5) + 
   (n5*j[p4a, 0, 0, n3, n4, 1 + n5, 1, 0, n8, n9, 1, 1, 0, 1, 1])/
    (-4 + d - n5) + ((1 - n3)*j[p4a, 0, 0, n3, n4, 1 + n5, 1, 1, n8, n9, 1, 
      1, 0, 1, 0])/(-4 + d - n5), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n11 == 1 && n12 == 0 && n13 == 1 && 
    n14 == 1 && n2 == 0 && n6 == 1 && n7 == 1 && n8 == 1 && n9 == 0 && 
    n10 != 1 -> j[p4a, n1, 0, n3, n4, n5, 1, 2, 1, 0, -1 + n10, 1, 0, 1, 1]/
    (1 - n10) - (2*j[p4a, n1, 0, n3, n4, n5, 1, 2, 1, 0, n10, 0, 0, 1, 1])/
    (-2 + d - 2*n10) + ((-4 + d - 2*n4)*j[p4a, n1, 0, n3, n4, n5, 2, 1, 1, 0, 
      -1 + n10, 1, 0, 1, 1])/((-2 + d - 2*n10)*(-1 + n10)) + 
   ((-4*n4 + d*n4 - 2*n4^2)*j[p4a, n1, 0, n3, 1 + n4, n5, 1, 1, 1, 0, 
      -1 + n10, 1, 0, 1, 1])/((-2 + d - 2*n10)*(-1 + n10)) + 
   (2*n4*j[p4a, n1, 0, n3, 1 + n4, n5, 2, 1, 0, 0, -1 + n10, 1, 0, 1, 1])/
    ((-2 + d - 2*n10)*(-1 + n10)) - 
   (2*n3*j[p4a, n1, 0, 1 + n3, -1 + n4, n5, 2, 1, 1, 0, -1 + n10, 1, 0, 1, 
      1])/((-2 + d - 2*n10)*(-1 + n10)) + 
   ((-8*n3 + 3*d*n3 - 2*n3^2 - 4*n3*n4 - 2*n3*n5)*j[p4a, n1, 0, 1 + n3, n4, 
      n5, 1, 1, 1, 0, -1 + n10, 1, 0, 1, 1])/((-2 + d - 2*n10)*(-1 + n10)) + 
   (2*n3*j[p4a, n1, 0, 1 + n3, n4, n5, 2, 1, 0, 0, -1 + n10, 1, 0, 1, 1])/
    ((-2 + d - 2*n10)*(-1 + n10)) + 
   (2*n3*n5*j[p4a, n1, 0, 1 + n3, n4, 1 + n5, 1, 1, 1, 0, -1 + n10, 1, 0, 0, 
      1])/((-2 + d - 2*n10)*(-1 + n10)) - 
   (2*n3*n5*j[p4a, n1, 0, 1 + n3, n4, 1 + n5, 1, 1, 1, 0, -1 + n10, 1, 0, 1, 
      0])/((-2 + d - 2*n10)*(-1 + n10)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n1 == 0 && n10 == 1 && n12 == 0 && 
    n13 == 1 && n14 == 1 && n6 == 1 && n7 == 1 && n8 == 1 && n9 == 0 && 
    n5 != 0 -> j[p4a, 0, n2, -1 + n3, -1 + n4, 1 + n5, 1, 1, 2, 0, 1, n11, 0, 
     1, 1]/(-3 + d - n11 - n2 - n5) + j[p4a, 0, n2, -1 + n3, n4, 1 + n5, 0, 
     1, 2, 0, 1, n11, 0, 1, 1]/(3 - d + n11 + n2 + n5) - 
   (n11*j[p4a, 0, n2, -1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1 + n11, 0, 1, 1])/
    (3 - d + n11 + n2 + n5) + (n11*j[p4a, 0, n2, -1 + n3, n4, 1 + n5, 1, 1, 
      1, 0, 0, 1 + n11, 0, 1, 1])/(3 - d + n11 + n2 + n5) + 
   ((5 - 2*d + n11 + n2 + n3 + 2*n4 + 2*n5)*j[p4a, 0, n2, -1 + n3, n4, 
      1 + n5, 1, 1, 1, 0, 1, n11, 0, 1, 1])/(-3 + d - n11 - n2 - n5) + 
   j[p4a, 0, n2, -1 + n3, n4, 1 + n5, 1, 1, 1, 0, 1, n11, 0, 2, 0]/
    (3 - d + n11 + n2 + n5) + ((-1 + n3 - n5)*j[p4a, 0, n2, n3, -1 + n4, 
      1 + n5, 1, 1, 1, 0, 1, n11, 0, 1, 1])/(-3 + d - n11 - n2 - n5) + 
   j[p4a, 0, n2, n3, n4, n5, 1, 0, 1, 0, 1, n11, 0, 2, 1]/
    (-3 + d - n11 - n2 - n5) - 
   (n11*j[p4a, 0, n2, n3, n4, n5, 1, 0, 1, 0, 1, 1 + n11, 0, 1, 1])/
    (3 - d + n11 + n2 + n5) + (n11*j[p4a, 0, n2, n3, n4, n5, 1, 1, 1, 0, 0, 
      1 + n11, 0, 1, 1])/(3 - d + n11 + n2 + n5) + 
   (n5*j[p4a, 0, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, n11, 0, 1, 1])/
    (-3 + d - n11 - n2 - n5) + 
   ((1 - n3)*j[p4a, 0, n2, n3, n4, 1 + n5, 1, 1, 1, 0, 1, n11, 0, 1, 0])/
    (-3 + d - n11 - n2 - n5) - 
   (n2*j[p4a, 0, 1 + n2, -1 + n3, n4, n5, 1, 1, 1, 0, 1, n11, 0, 1, 1])/
    (3 - d + n11 + n2 + n5) + (n2*j[p4a, 0, 1 + n2, -1 + n3, n4, 1 + n5, 0, 
      1, 1, 0, 1, n11, 0, 1, 1])/(3 - d + n11 + n2 + n5) - 
   (n2*j[p4a, 0, 1 + n2, n3, n4, n5, 1, 0, 1, 0, 1, n11, 0, 1, 1])/
    (3 - d + n11 + n2 + n5) + (n2*j[p4a, 0, 1 + n2, n3, n4, n5, 1, 1, 0, 0, 
      1, n11, 0, 1, 1])/(3 - d + n11 + n2 + n5), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n10 == 1 && n11 == 1 && n12 == 0 && 
    n13 == 1 && n14 == 1 && n6 == 1 && n7 == 1 && n8 == 1 && n9 == 0 && 
     !(n2 == 0 || n5 == 0) -> 
  j[p4a, -1 + n1, 1 + n2, -1 + n3, -1 + n4, 1 + n5, 1, 1, 2, 0, 1, 1, 0, 1, 
     1]/(1 - n1) + j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, 1 + n5, 0, 1, 2, 0, 
     1, 1, 0, 1, 1]/(-1 + n1) + j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, 1 + n5, 
     1, 0, 1, 0, 1, 2, 0, 1, 1]/(1 - n1) + 
   j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, 1 + n5, 1, 1, 1, 0, 0, 2, 0, 1, 1]/
    (-1 + n1) + ((-6 + 2*d - n1 - n2 - n3 - 2*n4 - 2*n5)*
     j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, 1 + n5, 1, 1, 1, 0, 1, 1, 0, 1, 1])/
    (-1 + n1) + j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, 1 + n5, 1, 1, 1, 0, 1, 
     1, 0, 2, 0]/(-1 + n1) + ((1 - n3 + n5)*j[p4a, -1 + n1, 1 + n2, n3, 
      -1 + n4, 1 + n5, 1, 1, 1, 0, 1, 1, 0, 1, 1])/(-1 + n1) + 
   j[p4a, -1 + n1, 1 + n2, n3, n4, n5, 1, 0, 1, 0, 1, 1, 0, 2, 1]/(1 - n1) + 
   j[p4a, -1 + n1, 1 + n2, n3, n4, n5, 1, 0, 1, 0, 1, 2, 0, 1, 1]/(1 - n1) + 
   j[p4a, -1 + n1, 1 + n2, n3, n4, n5, 1, 1, 1, 0, 0, 2, 0, 1, 1]/(-1 + n1) + 
   ((-5 + d - n2 - n5)*j[p4a, -1 + n1, 1 + n2, n3, n4, n5, 1, 1, 1, 0, 1, 1, 
      0, 1, 1])/(-1 + n1) - (n5*j[p4a, -1 + n1, 1 + n2, n3, n4, 1 + n5, 1, 0, 
      1, 0, 1, 1, 0, 1, 1])/(-1 + n1) + 
   ((-1 + n3)*j[p4a, -1 + n1, 1 + n2, n3, n4, 1 + n5, 1, 1, 1, 0, 1, 1, 0, 1, 
      0])/(-1 + n1) + ((-1 - n2)*j[p4a, -1 + n1, 2 + n2, -1 + n3, n4, n5, 1, 
      1, 1, 0, 1, 1, 0, 1, 1])/(-1 + n1) + 
   ((1 + n2)*j[p4a, -1 + n1, 2 + n2, -1 + n3, n4, 1 + n5, 0, 1, 1, 0, 1, 1, 
      0, 1, 1])/(-1 + n1) + ((-1 - n2)*j[p4a, -1 + n1, 2 + n2, n3, n4, n5, 1, 
      0, 1, 0, 1, 1, 0, 1, 1])/(-1 + n1) + 
   ((1 + n2)*j[p4a, -1 + n1, 2 + n2, n3, n4, n5, 1, 1, 0, 0, 1, 1, 0, 1, 1])/
    (-1 + n1) - j[p4a, n1, 1 + n2, -1 + n3, n4, n5, 1, 1, 1, 0, 1, 1, 0, 1, 
    1] + j[p4a, n1, 1 + n2, -1 + n3, n4, 1 + n5, 1, 1, 1, -1, 1, 1, 0, 1, 
    1] + j[p4a, n1, 1 + n2, n3, n4, n5, 1, 1, 0, 0, 1, 1, 0, 1, 1] + 
   j[p4a, n1, 1 + n2, n3, n4, n5, 1, 1, 1, 0, 0, 1, 0, 1, 1] - 
   j[p4a, n1, 1 + n2, n3, n4, n5, 1, 1, 1, 0, 1, 0, 0, 1, 1], 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n10 == 1 && n11 == 1 && n13 == 1 && 
    n14 == 1 && n5 == 0 && n6 == 1 && n7 == 1 && n8 == 1 && n9 == 0 && 
     !(n12 == -1 || n12 == 0 || n3 == 1) -> 
  ((-2 - n12)*j[p4a, -1 + n1, -1 + n2, -1 + n3, n4, 0, 1, 1, 1, 0, 1, 1, 
      3 + n12, 1, 1])/(-1 + n3) - j[p4a, -1 + n1, -1 + n2, n3, n4, 0, 1, 1, 
    1, 0, 1, 1, 2 + n12, 1, 1] + j[p4a, -1 + n1, n2, -2 + n3, n4, 0, 1, 1, 1, 
     0, 1, 1, 2 + n12, 2, 1]/(1 - n3) + 
   ((-2 - n12)*j[p4a, -1 + n1, n2, -2 + n3, n4, 0, 1, 1, 1, 0, 1, 1, 3 + n12, 
      1, 1])/(-1 + n3) + j[p4a, -1 + n1, n2, -1 + n3, n4, 0, 1, 0, 1, 0, 1, 
     1, 2 + n12, 2, 1]/(-1 + n3) + 
   (2*(2 + n12)*j[p4a, -1 + n1, n2, -1 + n3, n4, 0, 1, 0, 1, 0, 1, 1, 
      3 + n12, 1, 1])/(-1 + n3) + j[p4a, -1 + n1, n2, -1 + n3, n4, 0, 1, 0, 
     1, 0, 1, 2, 2 + n12, 1, 1]/(-1 + n3) + 
   j[p4a, -1 + n1, n2, -1 + n3, n4, 0, 1, 1, 0, 0, 1, 1, 2 + n12, 2, 1]/
    (-1 + n3) + ((2 + n12)*j[p4a, -1 + n1, n2, -1 + n3, n4, 0, 1, 1, 0, 0, 1, 
      1, 3 + n12, 1, 1])/(-1 + n3) + j[p4a, -1 + n1, n2, -1 + n3, n4, 0, 1, 
     1, 1, 0, 0, 2, 2 + n12, 1, 1]/(1 - n3) + 
   ((6 - 2*d + n1 + 2*n2 + n4)*j[p4a, -1 + n1, n2, -1 + n3, n4, 0, 1, 1, 1, 
      0, 1, 1, 2 + n12, 1, 1])/(-1 + n3) + 
   ((2 + n12)*j[p4a, -1 + n1, n2, -1 + n3, n4, 0, 1, 1, 1, 0, 1, 1, 3 + n12, 
      0, 1])/(-1 + n3) - (n4*j[p4a, -1 + n1, n2, -1 + n3, 1 + n4, 0, 0, 1, 1, 
      0, 1, 1, 2 + n12, 1, 1])/(-1 + n3) + 
   (n4*j[p4a, -1 + n1, n2, -1 + n3, 1 + n4, 0, 1, 1, 0, 0, 1, 1, 2 + n12, 1, 
      1])/(-1 + n3) + j[p4a, -1 + n1, n2, n3, n4, 0, 1, 0, 1, 0, 1, 1, 
    2 + n12, 1, 1] + 2*j[p4a, -1 + n1, n2, n3, n4, 0, 1, 1, 0, 0, 1, 1, 
     2 + n12, 1, 1] - j[p4a, -1 + n1, n2, n3, n4, 0, 1, 1, 1, 0, 1, 1, 
    1 + n12, 1, 1] + j[p4a, -1 + n1, n2, n3, n4, 0, 1, 1, 1, 0, 1, 1, 
    2 + n12, 0, 1] + (n2*j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, 0, 1, 1, 1, 0, 
      1, 1, 1 + n12, 1, 1])/(-1 + n3) + 
   ((-1 + n1)*j[p4a, n1, -1 + n2, -1 + n3, n4, 0, 1, 1, 1, 0, 1, 1, 2 + n12, 
      1, 1])/(-1 + n3) - j[p4a, n1, -1 + n2, n3, n4, 0, 1, 1, 1, 0, 1, 1, 
    1 + n12, 1, 1] + ((1 - n1)*j[p4a, n1, n2, -1 + n3, n4, 0, 1, 1, 1, 0, 0, 
      1, 2 + n12, 1, 1])/(-1 + n3) + 
   ((1 + n12)*j[p4a, n1, n2, -1 + n3, n4, 0, 1, 1, 1, 0, 1, 0, 2 + n12, 1, 
      1])/(-1 + n3) + ((7 - 2*d + 2*n1 + n12 + n2 + n4)*
     j[p4a, n1, n2, -1 + n3, n4, 0, 1, 1, 1, 0, 1, 1, 1 + n12, 1, 1])/
    (-1 + n3) + j[p4a, n1, n2, -1 + n3, n4, 0, 1, 1, 1, 0, 1, 1, 1 + n12, 2, 
     1]/(1 - n3) + ((-1 - n12)*j[p4a, n1, n2, -1 + n3, n4, 0, 1, 1, 1, 0, 1, 
      1, 2 + n12, 1, 1])/(-1 + n3) + j[p4a, n1, n2, -1 + n3, n4, 0, 1, 2, 1, 
     0, 0, 1, 1 + n12, 1, 1]/(1 - n3) + 
   j[p4a, n1, n2, -1 + n3, n4, 0, 1, 2, 1, 0, 1, 0, 1 + n12, 1, 1]/
    (-1 + n3) - (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, 0, 0, 1, 1, 0, 1, 1, 
      1 + n12, 1, 1])/(-1 + n3) + 
   (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, 0, 1, 1, 0, 0, 1, 1, 1 + n12, 1, 1])/
    (-1 + n3) + j[p4a, n1, n2, n3, n4, 0, 1, 0, 1, 0, 1, 1, 1 + n12, 1, 1] + 
   2*j[p4a, n1, n2, n3, n4, 0, 1, 1, 0, 0, 1, 1, 1 + n12, 1, 1] + 
   j[p4a, n1, n2, n3, n4, 0, 1, 1, 1, 0, 1, 1, 1 + n12, 0, 1] - 
   (n2*j[p4a, n1, 1 + n2, -1 + n3, n4, 0, 1, 1, 1, 0, 0, 1, 1 + n12, 1, 1])/
    (-1 + n3), j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n6 == 1 && n7 == 1 && n8 == 1 &&  !(n4 == 1 || n5 == 0 || n9 == 0) -> 
  ((-3 + d - n1 - n3 - 2*n5)*j[p4a, -1 + n1, 0, n3, -2 + n4, 1 + n5, 1, 1, 2, 
      1 + n9, 1, 1, 0, 1, 1])/((-1 + n4)*(2 - d + 2*n4)) + 
   ((3 - d + n1 + n3 + 2*n5)*j[p4a, -1 + n1, 0, n3, -1 + n4, 1 + n5, 0, 1, 2, 
      1 + n9, 1, 1, 0, 1, 1])/((-1 + n4)*(2 - d + 2*n4)) + 
   ((-3 + d - n1 - n3 - 2*n5)*j[p4a, -1 + n1, 0, n3, -1 + n4, 1 + n5, 1, 0, 
      1, 1 + n9, 1, 2, 0, 1, 1])/((-1 + n4)*(2 - d + 2*n4)) + 
   ((3 - d + n1 + n3 + 2*n5)*j[p4a, -1 + n1, 0, n3, -1 + n4, 1 + n5, 1, 1, 1, 
      1 + n9, 0, 2, 0, 1, 1])/((-1 + n4)*(2 - d + 2*n4)) + 
   ((-12 + 10*d - 2*d^2 - 7*n1 + 3*d*n1 - n1^2 - 7*n3 + 3*d*n3 - 2*n1*n3 - 
      n3^2 - 6*n4 + 2*d*n4 - 2*n1*n4 - 2*n3*n4 - 11*n5 + 5*d*n5 - 3*n1*n5 - 
      4*n3*n5 - 4*n4*n5 - 2*n5^2)*j[p4a, -1 + n1, 0, n3, -1 + n4, 1 + n5, 1, 
      1, 1, 1 + n9, 1, 1, 0, 1, 1])/((-1 + n4)*(2 - d + 2*n4)) + 
   ((-3 + d - n1 - n3)*j[p4a, -1 + n1, 0, n3, -1 + n4, 1 + n5, 1, 1, 1, 
      1 + n9, 1, 1, 0, 2, 0])/((-2 + d - 2*n4)*(-1 + n4)) - 
   (2*j[p4a, -1 + n1, 0, n3, n4, n5, 0, 1, 2, 1 + n9, 1, 1, 0, 1, 1])/
    (-2 + d - 2*n4) - (n3*(3 - d + n1 + n3 + n5)*j[p4a, -1 + n1, 0, 1 + n3, 
      -2 + n4, 1 + n5, 1, 1, 1, 1 + n9, 1, 1, 0, 1, 1])/
    ((-1 + n4)*(2 - d + 2*n4)) - 
   (n3*j[p4a, -1 + n1, 0, 1 + n3, -1 + n4, n5, 1, 0, 1, 1 + n9, 1, 1, 0, 2, 
      1])/((-1 + n4)*(2 - d + 2*n4)) + 
   (n3*j[p4a, -1 + n1, 0, 1 + n3, -1 + n4, n5, 1, 0, 1, 1 + n9, 1, 2, 0, 1, 
      1])/((-1 + n4)*(2 - d + 2*n4)) - 
   (n3*j[p4a, -1 + n1, 0, 1 + n3, -1 + n4, n5, 1, 1, 1, 1 + n9, 0, 2, 0, 1, 
      1])/((-1 + n4)*(2 - d + 2*n4)) + 
   ((8*n3 - 3*d*n3 + 2*n1*n3 + 2*n3^2 + 2*n3*n4 + n3*n5)*
     j[p4a, -1 + n1, 0, 1 + n3, -1 + n4, n5, 1, 1, 1, 1 + n9, 1, 1, 0, 1, 1])/
    ((-1 + n4)*(2 - d + 2*n4)) - 
   (n3*n5*j[p4a, -1 + n1, 0, 1 + n3, -1 + n4, 1 + n5, 1, 0, 1, 1 + n9, 1, 1, 
      0, 1, 1])/((-1 + n4)*(2 - d + 2*n4)) + 
   (2*n3*n5*j[p4a, -1 + n1, 0, 1 + n3, -1 + n4, 1 + n5, 1, 1, 1, 1 + n9, 1, 
      1, 0, 0, 1])/((-1 + n4)*(2 - d + 2*n4)) + 
   ((-3*n3 + d*n3 - n1*n3 - n3^2)*j[p4a, -1 + n1, 0, 1 + n3, -1 + n4, 1 + n5, 
      1, 1, 1, 1 + n9, 1, 1, 0, 1, 0])/((-2 + d - 2*n4)*(-1 + n4)) - 
   j[p4a, n1, -1, n3, n4, n5, 1, 1, 1, 1 + n9, 1, 1, 0, 1, 1] + 
   ((3*d - d^2 - 5*n1 + 2*d*n1 - n1^2 + n3 - n1*n3 - 7*n4 + 3*d*n4 - n1*n4 - 
      2*n4^2 + n5 - n1*n5)*j[p4a, n1, 0, n3, -1 + n4, n5, 1, 1, 1, 1 + n9, 1, 
      1, 0, 1, 1])/((-1 + n4)*(2 - d + 2*n4)) + 
   ((1 - n1)*j[p4a, n1, 0, n3, -1 + n4, n5, 1, 1, 1, 1 + n9, 1, 1, 0, 2, 1])/
    ((-1 + n4)*(2 - d + 2*n4)) + j[p4a, n1, 0, n3, -1 + n4, n5, 1, 1, 2, 
     1 + n9, 1, 0, 0, 1, 1]/(1 - n4) + 
   ((-1 + d - n1 - 2*n4)*j[p4a, n1, 0, n3, -1 + n4, n5, 1, 2, 1, 1 + n9, 0, 
      1, 0, 1, 1])/((-2 + d - 2*n4)*(-1 + n4)) + 
   ((1 - d + n1 + 2*n4)*j[p4a, n1, 0, n3, -1 + n4, n5, 1, 2, 1, 1 + n9, 1, 0, 
      0, 1, 1])/((-2 + d - 2*n4)*(-1 + n4)) + 
   ((-1 + n1)*(3 - d + n1 + n3 + n5)*j[p4a, n1, 0, n3, -1 + n4, 1 + n5, 1, 1, 
      1, n9, 1, 1, 0, 1, 1])/((-1 + n4)*(2 - d + 2*n4)) + 
   j[p4a, n1, 0, n3, n4, -1 + n5, 1, 1, 1, 1 + n9, 1, 1, 0, 1, 1] + 
   ((-1 + d - n1 - 2*n4)*j[p4a, n1, 0, n3, n4, n5, 0, 1, 1, 1 + n9, 1, 1, 0, 
      1, 1])/(-2 + d - 2*n4) + 
   ((-1 + n1)*j[p4a, n1, 0, n3, n4, n5, 1, 1, 0, 1 + n9, 1, 1, 0, 1, 1])/
    (-2 + d - 2*n4) + j[p4a, n1, 0, n3, n4, n5, 1, 1, 1, 1 + n9, 0, 1, 0, 1, 
    1] - j[p4a, n1, 0, n3, n4, n5, 1, 1, 1, 1 + n9, 1, 0, 0, 1, 1] - 
   (n3*(-1 + d - n1 - 2*n4)*j[p4a, n1, 0, 1 + n3, -1 + n4, n5, 1, 0, 1, 
      1 + n9, 1, 1, 0, 1, 1])/((-2 + d - 2*n4)*(-1 + n4)) - 
   (n3*(-1 + d - n1 - 2*n4)*j[p4a, n1, 0, 1 + n3, -1 + n4, n5, 1, 1, 0, 
      1 + n9, 1, 1, 0, 1, 1])/((-2 + d - 2*n4)*(-1 + n4)) + 
   (n3*(-1 + d - n1 - 2*n4)*j[p4a, n1, 0, 1 + n3, -1 + n4, n5, 1, 1, 1, 
      1 + n9, 0, 1, 0, 1, 1])/((-2 + d - 2*n4)*(-1 + n4)) - 
   (n3*(-1 + d - n1 - 2*n4)*j[p4a, n1, 0, 1 + n3, -1 + n4, n5, 1, 1, 1, 
      1 + n9, 1, 0, 0, 1, 1])/((-2 + d - 2*n4)*(-1 + n4)) + 
   (n3*(-1 + d - n1 - 2*n4)*j[p4a, n1, 0, 1 + n3, -1 + n4, n5, 1, 1, 1, 
      1 + n9, 1, 1, -1, 1, 1])/((-2 + d - 2*n4)*(-1 + n4)) + 
   ((-1 + n1)*n3*j[p4a, n1, 0, 1 + n3, -1 + n4, n5, 1, 1, 1, 1 + n9, 1, 1, 0, 
      0, 1])/((-1 + n4)*(2 - d + 2*n4)) + 
   ((-(d*n3) + 2*n1*n3 + 2*n3*n4)*j[p4a, n1, 0, 1 + n3, -1 + n4, n5, 1, 1, 1, 
      1 + n9, 1, 1, 0, 1, 1])/((-2 + d - 2*n4)*(-1 + n4)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n1 == 0 && n11 == 1 && n12 == 0 && 
    n13 == 1 && n14 == 1 && n2 == 0 && n4 == 1 && n6 == 1 && n9 == 0 && 
    n5 != 0 -> j[p4a, 0, 0, -2 + n3, 1, 1 + n5, 1, n7, n8, 0, n10, 1, 0, 1, 
     2]/(-4 + d - n5) + j[p4a, 0, 0, -1 + n3, 0, 1 + n5, 1, n7, n8, 0, n10, 
     1, 0, 1, 2]/(4 - d + n5) + 
   ((1 + n5)*j[p4a, 0, 0, -1 + n3, 0, 2 + n5, 1, n7, n8, 0, n10, 1, 0, 1, 1])/
    (4 - d + n5) + (n10*j[p4a, 0, 0, -1 + n3, 1, 1 + n5, 1, -1 + n7, n8, 0, 
      1 + n10, 1, 0, 1, 1])/(-4 + d - n5) + 
   j[p4a, 0, 0, -1 + n3, 1, 1 + n5, 1, n7, n8, 0, n10, 1, 0, 0, 2]/
    (4 - d + n5) + ((-d + n10 + n3 + n5 + 2*n7)*j[p4a, 0, 0, -1 + n3, 1, 
      1 + n5, 1, n7, n8, 0, n10, 1, 0, 1, 1])/(-4 + d - n5) - 
   (n10*j[p4a, 0, 0, -1 + n3, 1, 1 + n5, 1, n7, n8, 0, 1 + n10, 0, 0, 1, 1])/
    (-4 + d - n5) + ((-1 - n5)*j[p4a, 0, 0, -1 + n3, 1, 2 + n5, 1, -1 + n7, 
      n8, 0, n10, 1, 0, 1, 1])/(4 - d + n5) + 
   j[p4a, 0, 0, n3, 0, n5, 1, n7, n8, 0, n10, 1, 0, 1, 2]/(-4 + d - n5) + 
   j[p4a, 0, 0, n3, 0, n5, 2, n7, n8, 0, n10, 1, 0, 1, 1]/(-4 + d - n5) - 
   (n5*j[p4a, 0, 0, n3, 0, 1 + n5, 1, n7, n8, 0, n10, 1, 0, 1, 1])/
    (4 - d + n5) + j[p4a, 0, 0, n3, 1, n5, 2, n7, -1 + n8, 0, n10, 1, 0, 1, 
     1]/(4 - d + n5) + ((-1 + n3 - n5)*j[p4a, 0, 0, n3, 1, 1 + n5, 1, 
      -1 + n7, n8, 0, n10, 1, 0, 1, 1])/(-4 + d - n5) + 
   ((1 - n3)*j[p4a, 0, 0, n3, 1, 1 + n5, 1, n7, n8, 0, n10, 1, 0, 0, 1])/
    (-4 + d - n5), j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?Positive, (n4_)?Positive, (n5_)?NonPositive, (n6_)?Positive, 
    (n7_)?Positive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n4 == 1 && n6 == 1 && n9 == 0 && n5 != 0 -> 
  j[p4a, 0, 0, -2 + n3, 1, 1 + n5, 1, n7, n8, 0, 1, n11, 0, 1, 2]/
    (-4 + d - n5) + j[p4a, 0, 0, -1 + n3, 0, 1 + n5, 1, n7, n8, 0, 1, n11, 0, 
     1, 2]/(4 - d + n5) + ((1 + n5)*j[p4a, 0, 0, -1 + n3, 0, 2 + n5, 1, n7, 
      n8, 0, 1, n11, 0, 1, 1])/(4 - d + n5) + 
   j[p4a, 0, 0, -1 + n3, 1, 1 + n5, 1, -1 + n7, n8, 0, 2, n11, 0, 1, 1]/
    (-4 + d - n5) + j[p4a, 0, 0, -1 + n3, 1, 1 + n5, 1, n7, n8, 0, 1, n11, 0, 
     0, 2]/(4 - d + n5) + ((1 - d + n3 + n5 + 2*n7)*
     j[p4a, 0, 0, -1 + n3, 1, 1 + n5, 1, n7, n8, 0, 1, n11, 0, 1, 1])/
    (-4 + d - n5) + j[p4a, 0, 0, -1 + n3, 1, 1 + n5, 1, n7, n8, 0, 2, 
     -1 + n11, 0, 1, 1]/(4 - d + n5) + 
   ((-1 - n5)*j[p4a, 0, 0, -1 + n3, 1, 2 + n5, 1, -1 + n7, n8, 0, 1, n11, 0, 
      1, 1])/(4 - d + n5) + j[p4a, 0, 0, n3, 0, n5, 1, n7, n8, 0, 1, n11, 0, 
     1, 2]/(-4 + d - n5) + j[p4a, 0, 0, n3, 0, n5, 2, n7, n8, 0, 1, n11, 0, 
     1, 1]/(-4 + d - n5) - (n5*j[p4a, 0, 0, n3, 0, 1 + n5, 1, n7, n8, 0, 1, 
      n11, 0, 1, 1])/(4 - d + n5) + j[p4a, 0, 0, n3, 1, n5, 2, n7, -1 + n8, 
     0, 1, n11, 0, 1, 1]/(4 - d + n5) + 
   ((-1 + n3 - n5)*j[p4a, 0, 0, n3, 1, 1 + n5, 1, -1 + n7, n8, 0, 1, n11, 0, 
      1, 1])/(-4 + d - n5) + ((1 - n3)*j[p4a, 0, 0, n3, 1, 1 + n5, 1, n7, n8, 
      0, 1, n11, 0, 0, 1])/(-4 + d - n5), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n1 == 0 && n10 == 1 && n11 == 1 && 
    n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && n4 == 1 && n6 == 1 && 
    n5 != 0 -> (n9*j[p4a, -1, 0, n3, 1, n5, 1, n7, n8, 1 + n9, 1, 1, 0, 1, 
      1])/(4 - d + n5 + n9) + (n9*j[p4a, 0, -1, -1 + n3, 1, 1 + n5, 1, n7, 
      n8, 1 + n9, 1, 1, 0, 1, 1])/(4 - d + n5 + n9) - 
   (n9*j[p4a, 0, -1, n3, 1, n5, 1, n7, n8, 1 + n9, 1, 1, 0, 1, 1])/
    (4 - d + n5 + n9) + j[p4a, 0, 0, -2 + n3, 1, 1 + n5, 1, n7, n8, n9, 1, 1, 
     0, 1, 2]/(-4 + d - n5 - n9) + j[p4a, 0, 0, -1 + n3, 0, 1 + n5, 1, n7, 
     n8, n9, 1, 1, 0, 1, 2]/(4 - d + n5 + n9) + 
   (n9*j[p4a, 0, 0, -1 + n3, 0, 1 + n5, 1, n7, n8, 1 + n9, 1, 1, 0, 1, 1])/
    (4 - d + n5 + n9) + ((1 + n5)*j[p4a, 0, 0, -1 + n3, 0, 2 + n5, 1, n7, n8, 
      n9, 1, 1, 0, 1, 1])/(4 - d + n5 + n9) - 
   (n9*j[p4a, 0, 0, -1 + n3, 1, n5, 1, n7, n8, 1 + n9, 1, 1, 0, 1, 1])/
    (4 - d + n5 + n9) + j[p4a, 0, 0, -1 + n3, 1, 1 + n5, 1, -1 + n7, n8, n9, 
     2, 1, 0, 1, 1]/(-4 + d - n5 - n9) - 
   (n9*j[p4a, 0, 0, -1 + n3, 1, 1 + n5, 1, -1 + n7, n8, 1 + n9, 1, 1, 0, 1, 
      1])/(4 - d + n5 + n9) - (n9*j[p4a, 0, 0, -1 + n3, 1, 1 + n5, 1, n7, 
      -1 + n8, 1 + n9, 1, 1, 0, 1, 1])/(4 - d + n5 + n9) + 
   j[p4a, 0, 0, -1 + n3, 1, 1 + n5, 1, n7, n8, n9, 1, 1, 0, 0, 2]/
    (4 - d + n5 + n9) + ((1 - d + n3 + n5 + 2*n7)*j[p4a, 0, 0, -1 + n3, 1, 
      1 + n5, 1, n7, n8, n9, 1, 1, 0, 1, 1])/(-4 + d - n5 - n9) + 
   j[p4a, 0, 0, -1 + n3, 1, 1 + n5, 1, n7, n8, n9, 2, 0, 0, 1, 1]/
    (4 - d + n5 + n9) - (n9*j[p4a, 0, 0, -1 + n3, 1, 1 + n5, 1, n7, n8, 
      1 + n9, 0, 1, 0, 1, 1])/(4 - d + n5 + n9) + 
   (n9*j[p4a, 0, 0, -1 + n3, 1, 1 + n5, 1, n7, n8, 1 + n9, 1, 0, 0, 1, 1])/
    (4 - d + n5 + n9) + ((-1 - n5)*j[p4a, 0, 0, -1 + n3, 1, 2 + n5, 1, 
      -1 + n7, n8, n9, 1, 1, 0, 1, 1])/(4 - d + n5 + n9) + 
   j[p4a, 0, 0, n3, 0, n5, 1, n7, n8, n9, 1, 1, 0, 1, 2]/(-4 + d - n5 - n9) - 
   (n9*j[p4a, 0, 0, n3, 0, n5, 1, n7, n8, 1 + n9, 1, 1, 0, 1, 1])/
    (4 - d + n5 + n9) + j[p4a, 0, 0, n3, 0, n5, 2, n7, n8, n9, 1, 1, 0, 1, 1]/
    (-4 + d - n5 - n9) - (n5*j[p4a, 0, 0, n3, 0, 1 + n5, 1, n7, n8, n9, 1, 1, 
      0, 1, 1])/(4 - d + n5 + n9) + 
   (n9*j[p4a, 0, 0, n3, 1, n5, 1, -1 + n7, n8, 1 + n9, 1, 1, 0, 1, 1])/
    (4 - d + n5 + n9) + (n9*j[p4a, 0, 0, n3, 1, n5, 1, n7, -1 + n8, 1 + n9, 
      1, 1, 0, 1, 1])/(4 - d + n5 + n9) + 
   (n9*j[p4a, 0, 0, n3, 1, n5, 1, n7, n8, 1 + n9, 0, 1, 0, 1, 1])/
    (4 - d + n5 + n9) - (n9*j[p4a, 0, 0, n3, 1, n5, 1, n7, n8, 1 + n9, 1, 0, 
      0, 1, 1])/(4 - d + n5 + n9) + j[p4a, 0, 0, n3, 1, n5, 2, n7, -1 + n8, 
     n9, 1, 1, 0, 1, 1]/(4 - d + n5 + n9) + 
   ((1 - n3 + n5)*j[p4a, 0, 0, n3, 1, 1 + n5, 1, -1 + n7, n8, n9, 1, 1, 0, 1, 
      1])/(4 - d + n5 + n9) + ((1 - n3)*j[p4a, 0, 0, n3, 1, 1 + n5, 1, n7, 
      n8, n9, 1, 1, 0, 0, 1])/(-4 + d - n5 - n9), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n11 == 1 && n12 == 0 && n13 == 1 && 
    n14 == 1 && n2 == 0 && n4 == 1 && n6 == 1 && n8 == 1 && n9 == 0 && 
    n5 != 0 -> j[p4a, n1, 0, -2 + n3, 1, 1 + n5, 1, n7, 1, 0, n10, 1, 0, 1, 
     2]/(-4 + d - n5) + j[p4a, n1, 0, -1 + n3, 0, 1 + n5, 1, n7, 1, 0, n10, 
     1, 0, 1, 2]/(4 - d + n5) + 
   ((1 + n5)*j[p4a, n1, 0, -1 + n3, 0, 2 + n5, 1, n7, 1, 0, n10, 1, 0, 1, 1])/
    (4 - d + n5) + (n10*j[p4a, n1, 0, -1 + n3, 1, 1 + n5, 1, -1 + n7, 1, 0, 
      1 + n10, 1, 0, 1, 1])/(-4 + d - n5) + 
   j[p4a, n1, 0, -1 + n3, 1, 1 + n5, 1, n7, 1, 0, n10, 1, 0, 0, 2]/
    (4 - d + n5) + ((-d + n10 + n3 + n5 + 2*n7)*j[p4a, n1, 0, -1 + n3, 1, 
      1 + n5, 1, n7, 1, 0, n10, 1, 0, 1, 1])/(-4 + d - n5) - 
   (n10*j[p4a, n1, 0, -1 + n3, 1, 1 + n5, 1, n7, 1, 0, 1 + n10, 0, 0, 1, 1])/
    (-4 + d - n5) + ((-1 - n5)*j[p4a, n1, 0, -1 + n3, 1, 2 + n5, 1, -1 + n7, 
      1, 0, n10, 1, 0, 1, 1])/(4 - d + n5) + 
   j[p4a, n1, 0, n3, 0, n5, 1, n7, 1, 0, n10, 1, 0, 1, 2]/(-4 + d - n5) + 
   j[p4a, n1, 0, n3, 0, n5, 2, n7, 1, 0, n10, 1, 0, 1, 1]/(-4 + d - n5) - 
   (n5*j[p4a, n1, 0, n3, 0, 1 + n5, 1, n7, 1, 0, n10, 1, 0, 1, 1])/
    (4 - d + n5) + j[p4a, n1, 0, n3, 1, n5, 2, n7, 0, 0, n10, 1, 0, 1, 1]/
    (4 - d + n5) + ((-1 + n3 - n5)*j[p4a, n1, 0, n3, 1, 1 + n5, 1, -1 + n7, 
      1, 0, n10, 1, 0, 1, 1])/(-4 + d - n5) + 
   ((1 - n3)*j[p4a, n1, 0, n3, 1, 1 + n5, 1, n7, 1, 0, n10, 1, 0, 0, 1])/
    (-4 + d - n5), j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?Positive, (n4_)?Positive, (n5_)?NonPositive, (n6_)?Positive, 
    (n7_)?Positive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n4 == 1 && 
    n6 == 1 && n8 == 1 && n9 == 0 && n5 != 0 -> 
  j[p4a, 0, n2, -2 + n3, 1, 1 + n5, 1, n7, 1, 0, 1, n11, 0, 1, 2]/
    (-4 + d - n5) + j[p4a, 0, n2, -1 + n3, 0, 1 + n5, 1, n7, 1, 0, 1, n11, 0, 
     1, 2]/(4 - d + n5) + ((1 + n5)*j[p4a, 0, n2, -1 + n3, 0, 2 + n5, 1, n7, 
      1, 0, 1, n11, 0, 1, 1])/(4 - d + n5) + 
   j[p4a, 0, n2, -1 + n3, 1, 1 + n5, 1, -1 + n7, 1, 0, 2, n11, 0, 1, 1]/
    (-4 + d - n5) + j[p4a, 0, n2, -1 + n3, 1, 1 + n5, 1, n7, 1, 0, 1, n11, 0, 
     0, 2]/(4 - d + n5) + ((1 - d + n2 + n3 + n5 + 2*n7)*
     j[p4a, 0, n2, -1 + n3, 1, 1 + n5, 1, n7, 1, 0, 1, n11, 0, 1, 1])/
    (-4 + d - n5) + j[p4a, 0, n2, -1 + n3, 1, 1 + n5, 1, n7, 1, 0, 2, 
     -1 + n11, 0, 1, 1]/(4 - d + n5) + 
   ((-1 - n5)*j[p4a, 0, n2, -1 + n3, 1, 2 + n5, 1, -1 + n7, 1, 0, 1, n11, 0, 
      1, 1])/(4 - d + n5) + j[p4a, 0, n2, n3, 0, n5, 1, n7, 1, 0, 1, n11, 0, 
     1, 2]/(-4 + d - n5) + j[p4a, 0, n2, n3, 0, n5, 2, n7, 1, 0, 1, n11, 0, 
     1, 1]/(-4 + d - n5) - (n5*j[p4a, 0, n2, n3, 0, 1 + n5, 1, n7, 1, 0, 1, 
      n11, 0, 1, 1])/(4 - d + n5) + j[p4a, 0, n2, n3, 1, n5, 2, n7, 0, 0, 1, 
     n11, 0, 1, 1]/(4 - d + n5) + 
   ((-1 + n3 - n5)*j[p4a, 0, n2, n3, 1, 1 + n5, 1, -1 + n7, 1, 0, 1, n11, 0, 
      1, 1])/(-4 + d - n5) + ((1 - n3)*j[p4a, 0, n2, n3, 1, 1 + n5, 1, n7, 1, 
      0, 1, n11, 0, 0, 1])/(-4 + d - n5) + 
   (n2*j[p4a, 0, 1 + n2, -1 + n3, 1, 1 + n5, 1, -1 + n7, 1, 0, 1, n11, 0, 1, 
      1])/(-4 + d - n5) - (n2*j[p4a, 0, 1 + n2, -1 + n3, 1, 1 + n5, 1, n7, 0, 
      0, 1, n11, 0, 1, 1])/(-4 + d - n5), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n10 == 1 && n11 == 1 && n12 == 0 && 
    n13 == 1 && n14 == 1 && n4 == 1 && n5 == 0 && n6 == 1 && n8 == 1 && 
     !(n7 == 1 || n9 == 0) -> 
  -j[p4a, n1, -1 + n2, n3, 1, 0, 1, n7, 1, 1 + n9, 1, 1, 0, 1, 1] - 
   (n3*j[p4a, n1, -1 + n2, 1 + n3, 1, 0, 1, -1 + n7, 1, 1 + n9, 1, 1, 0, 1, 
      1])/(-1 + n7) - j[p4a, n1, n2, n3, 0, 0, 1, n7, 1, 1 + n9, 1, 1, 0, 1, 
    1] + j[p4a, n1, n2, n3, 1, -1, 1, n7, 1, 1 + n9, 1, 1, 0, 1, 1] + 
   j[p4a, n1, n2, n3, 1, 0, 0, -1 + n7, 1, 1 + n9, 2, 1, 0, 1, 1]/(1 - n7) + 
   ((-4 + d - n2 - n3)*j[p4a, n1, n2, n3, 1, 0, 1, -1 + n7, 1, 1 + n9, 1, 1, 
      0, 1, 1])/(-1 + n7) + j[p4a, n1, n2, n3, 1, 0, 1, n7, 0, 1 + n9, 1, 1, 
    0, 1, 1] - (2*j[p4a, n1, n2, n3, 1, 0, 1, n7, 1, n9, 2, 0, 0, 1, 1])/
    (-2 + d - 2*n7) + ((-6 + d - 2*n2)*j[p4a, n1, n2, n3, 1, 0, 2, -1 + n7, 
      1, n9, 1, 1, 0, 1, 1])/((-2 + d - 2*n7)*(-1 + n7)) + 
   j[p4a, n1, n2, n3, 2, 0, 0, -1 + n7, 1, 1 + n9, 1, 1, 0, 1, 1]/(1 - n7) + 
   j[p4a, n1, n2, n3, 2, 0, 1, -1 + n7, 0, 1 + n9, 1, 1, 0, 1, 1]/(-1 + n7) + 
   ((-6 + d)*j[p4a, n1, n2, n3, 2, 0, 1, -1 + n7, 1, n9, 1, 1, 0, 1, 1])/
    ((-2 + d - 2*n7)*(-1 + n7)) - 
   (2*j[p4a, n1, n2, n3, 2, 0, 2, -1 + n7, 0, n9, 1, 1, 0, 1, 1])/
    ((-1 + n7)*(2 - d + 2*n7)) - 
   (n3*j[p4a, n1, n2, 1 + n3, 0, 0, 1, -1 + n7, 1, 1 + n9, 1, 1, 0, 1, 1])/
    (-1 + n7) + (2*n3*j[p4a, n1, n2, 1 + n3, 0, 0, 2, -1 + n7, 1, n9, 1, 1, 
      0, 1, 1])/((-1 + n7)*(2 - d + 2*n7)) + 
   (n3*j[p4a, n1, n2, 1 + n3, 1, 0, 1, -2 + n7, 1, 1 + n9, 1, 1, 0, 1, 1])/
    (-1 + n7) + (2*n3*j[p4a, n1, n2, 1 + n3, 1, 0, 1, -1 + n7, 0, 1 + n9, 1, 
      1, 0, 1, 1])/(-1 + n7) + ((12*n3 - 3*d*n3 + 2*n2*n3 + 2*n3^2 + 2*n3*n9)*
     j[p4a, n1, n2, 1 + n3, 1, 0, 1, -1 + n7, 1, n9, 1, 1, 0, 1, 1])/
    ((-1 + n7)*(2 - d + 2*n7)) - 
   (n3*j[p4a, n1, n2, 1 + n3, 1, 0, 1, -1 + n7, 1, 1 + n9, 1, 1, -1, 1, 1])/
    (-1 + n7) + (n3*j[p4a, n1, n2, 1 + n3, 1, 0, 1, -1 + n7, 1, 1 + n9, 1, 1, 
      0, 0, 1])/(-1 + n7) + ((2*n3 - d*n3 + 2*n3*n7 + 2*n3*n9)*
     j[p4a, n1, n2, 1 + n3, 1, 0, 1, -1 + n7, 1, 1 + n9, 1, 1, 0, 1, 0])/
    ((-1 + n7)*(2 - d + 2*n7)) - 
   (2*n3*n9*j[p4a, n1, n2, 1 + n3, 1, 0, 1, -1 + n7, 1, 1 + n9, 1, 1, 0, 1, 
      1])/((-1 + n7)*(2 - d + 2*n7)) - 
   (2*n3*j[p4a, n1, n2, 1 + n3, 1, 0, 2, -1 + n7, 0, n9, 1, 1, 0, 1, 1])/
    ((-1 + n7)*(2 - d + 2*n7)) + 
   (n2*j[p4a, n1, 1 + n2, n3, 1, -1, 1, -1 + n7, 1, 1 + n9, 1, 1, 0, 1, 1])/
    (-1 + n7) - (2*n2*j[p4a, n1, 1 + n2, n3, 1, -1, 2, -1 + n7, 1, n9, 1, 1, 
      0, 1, 1])/((-1 + n7)*(2 - d + 2*n7)) - 
   (n2*j[p4a, n1, 1 + n2, n3, 1, 0, 0, -1 + n7, 1, 1 + n9, 1, 1, 0, 1, 1])/
    (-1 + n7) + ((-4*n2 + d*n2 - 2*n2^2 - 2*n2*n3)*j[p4a, n1, 1 + n2, n3, 1, 
      0, 1, -1 + n7, 1, n9, 1, 1, 0, 1, 1])/((-2 + d - 2*n7)*(-1 + n7)) - 
   (2*n2*j[p4a, n1, 1 + n2, n3, 2, -1, 1, -1 + n7, 1, n9, 1, 1, 0, 1, 1])/
    ((-1 + n7)*(2 - d + 2*n7)) + 
   (2*n2*j[p4a, n1, 1 + n2, n3, 2, 0, 0, -1 + n7, 1, n9, 1, 1, 0, 1, 1])/
    ((-1 + n7)*(2 - d + 2*n7)) + 
   (2*n2*j[p4a, n1, 1 + n2, n3, 2, 0, 1, -2 + n7, 1, n9, 1, 1, 0, 1, 1])/
    ((-1 + n7)*(2 - d + 2*n7)) - 
   (2*n2*j[p4a, n1, 1 + n2, n3, 2, 0, 1, -1 + n7, 0, n9, 1, 1, 0, 1, 1])/
    ((-1 + n7)*(2 - d + 2*n7)) - 
   (4*n2*n3*j[p4a, n1, 1 + n2, 1 + n3, 1, 0, 1, -1 + n7, 0, n9, 1, 1, 0, 1, 
      1])/((-1 + n7)*(2 - d + 2*n7)) + 
   (2*n2*n3*j[p4a, n1, 1 + n2, 1 + n3, 1, 0, 1, -1 + n7, 1, n9, 1, 1, -1, 1, 
      1])/((-1 + n7)*(2 - d + 2*n7)) - 
   (4*n2*n3*j[p4a, n1, 1 + n2, 1 + n3, 1, 0, 1, -1 + n7, 1, n9, 1, 1, 0, 0, 
      1])/((-1 + n7)*(2 - d + 2*n7)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n10 == 1 && n11 == 1 && n13 == 1 && 
    n14 == 1 && n2 == 0 && n4 == 1 && n5 == 0 && n6 == 1 && n8 == 1 && 
     !(n12 == -1 || n12 == 0 || n3 == 1) -> 
  ((-2 - n12)*j[p4a, -1 + n1, -1, -1 + n3, 1, 0, 1, n7, 1, n9, 1, 1, 3 + n12, 
      1, 1])/(-1 + n3) - j[p4a, -1 + n1, -1, n3, 1, 0, 1, n7, 1, n9, 1, 1, 
    2 + n12, 1, 1] + j[p4a, -1 + n1, 0, -2 + n3, 1, 0, 1, n7, 1, n9, 1, 1, 
     2 + n12, 2, 1]/(1 - n3) + 
   ((-2 - n12)*j[p4a, -1 + n1, 0, -2 + n3, 1, 0, 1, n7, 1, n9, 1, 1, 3 + n12, 
      1, 1])/(-1 + n3) + j[p4a, -1 + n1, 0, -1 + n3, 1, 0, 1, -1 + n7, 1, n9, 
     1, 1, 2 + n12, 2, 1]/(-1 + n3) + 
   (2*(2 + n12)*j[p4a, -1 + n1, 0, -1 + n3, 1, 0, 1, -1 + n7, 1, n9, 1, 1, 
      3 + n12, 1, 1])/(-1 + n3) + j[p4a, -1 + n1, 0, -1 + n3, 1, 0, 1, 
     -1 + n7, 1, n9, 1, 2, 2 + n12, 1, 1]/(-1 + n3) + 
   j[p4a, -1 + n1, 0, -1 + n3, 1, 0, 1, n7, 0, n9, 1, 1, 2 + n12, 2, 1]/
    (-1 + n3) + ((2 + n12)*j[p4a, -1 + n1, 0, -1 + n3, 1, 0, 1, n7, 0, n9, 1, 
      1, 3 + n12, 1, 1])/(-1 + n3) + j[p4a, -1 + n1, 0, -1 + n3, 1, 0, 1, n7, 
     1, n9, 0, 2, 2 + n12, 1, 1]/(1 - n3) + 
   ((5 - 2*d + n1 + 2*n7)*j[p4a, -1 + n1, 0, -1 + n3, 1, 0, 1, n7, 1, n9, 1, 
      1, 2 + n12, 1, 1])/(-1 + n3) + 
   ((2 + n12)*j[p4a, -1 + n1, 0, -1 + n3, 1, 0, 1, n7, 1, n9, 1, 1, 3 + n12, 
      0, 1])/(-1 + n3) + j[p4a, -1 + n1, 0, -1 + n3, 2, 0, 0, n7, 1, n9, 1, 
     1, 2 + n12, 1, 1]/(1 - n3) + j[p4a, -1 + n1, 0, -1 + n3, 2, 0, 1, n7, 0, 
     n9, 1, 1, 2 + n12, 1, 1]/(-1 + n3) + j[p4a, -1 + n1, 0, n3, 1, 0, 1, 
    -1 + n7, 1, n9, 1, 1, 2 + n12, 1, 1] + 
   2*j[p4a, -1 + n1, 0, n3, 1, 0, 1, n7, 0, n9, 1, 1, 2 + n12, 1, 1] - 
   j[p4a, -1 + n1, 0, n3, 1, 0, 1, n7, 1, n9, 1, 1, 1 + n12, 1, 1] + 
   j[p4a, -1 + n1, 0, n3, 1, 0, 1, n7, 1, n9, 1, 1, 2 + n12, 0, 1] + 
   ((-1 + n1)*j[p4a, n1, -1, -1 + n3, 1, 0, 1, n7, 1, n9, 1, 1, 2 + n12, 1, 
      1])/(-1 + n3) - j[p4a, n1, -1, n3, 1, 0, 1, n7, 1, n9, 1, 1, 1 + n12, 
    1, 1] + ((1 - n1)*j[p4a, n1, 0, -1 + n3, 1, 0, 1, n7, 1, n9, 0, 1, 
      2 + n12, 1, 1])/(-1 + n3) + 
   ((1 + n12)*j[p4a, n1, 0, -1 + n3, 1, 0, 1, n7, 1, n9, 1, 0, 2 + n12, 1, 
      1])/(-1 + n3) + ((7 - 2*d + 2*n1 + n12 + n7)*j[p4a, n1, 0, -1 + n3, 1, 
      0, 1, n7, 1, n9, 1, 1, 1 + n12, 1, 1])/(-1 + n3) + 
   j[p4a, n1, 0, -1 + n3, 1, 0, 1, n7, 1, n9, 1, 1, 1 + n12, 2, 1]/(1 - n3) + 
   ((-1 - n12)*j[p4a, n1, 0, -1 + n3, 1, 0, 1, n7, 1, n9, 1, 1, 2 + n12, 1, 
      1])/(-1 + n3) - (n7*j[p4a, n1, 0, -1 + n3, 1, 0, 1, 1 + n7, 1, n9, 0, 
      1, 1 + n12, 1, 1])/(-1 + n3) + 
   (n7*j[p4a, n1, 0, -1 + n3, 1, 0, 1, 1 + n7, 1, n9, 1, 0, 1 + n12, 1, 1])/
    (-1 + n3) + j[p4a, n1, 0, -1 + n3, 2, 0, 0, n7, 1, n9, 1, 1, 1 + n12, 1, 
     1]/(1 - n3) + j[p4a, n1, 0, -1 + n3, 2, 0, 1, n7, 0, n9, 1, 1, 1 + n12, 
     1, 1]/(-1 + n3) + j[p4a, n1, 0, n3, 1, 0, 1, -1 + n7, 1, n9, 1, 1, 
    1 + n12, 1, 1] + 2*j[p4a, n1, 0, n3, 1, 0, 1, n7, 0, n9, 1, 1, 1 + n12, 
     1, 1] + j[p4a, n1, 0, n3, 1, 0, 1, n7, 1, n9, 1, 1, 1 + n12, 0, 1], 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n10 == 1 && n11 == 1 && n13 == 1 && 
    n14 == 1 && n4 == 1 && n5 == 0 && n6 == 1 && n7 == 1 && n8 == 1 && 
     !(n12 == -1 || n12 == 0 || n3 == 1) -> 
  ((-2 - n12)*j[p4a, -1 + n1, -1 + n2, -1 + n3, 1, 0, 1, 1, 1, n9, 1, 1, 
      3 + n12, 1, 1])/(-1 + n3) - j[p4a, -1 + n1, -1 + n2, n3, 1, 0, 1, 1, 1, 
    n9, 1, 1, 2 + n12, 1, 1] + j[p4a, -1 + n1, n2, -2 + n3, 1, 0, 1, 1, 1, 
     n9, 1, 1, 2 + n12, 2, 1]/(1 - n3) + 
   ((-2 - n12)*j[p4a, -1 + n1, n2, -2 + n3, 1, 0, 1, 1, 1, n9, 1, 1, 3 + n12, 
      1, 1])/(-1 + n3) + j[p4a, -1 + n1, n2, -1 + n3, 1, 0, 1, 0, 1, n9, 1, 
     1, 2 + n12, 2, 1]/(-1 + n3) + 
   (2*(2 + n12)*j[p4a, -1 + n1, n2, -1 + n3, 1, 0, 1, 0, 1, n9, 1, 1, 
      3 + n12, 1, 1])/(-1 + n3) + j[p4a, -1 + n1, n2, -1 + n3, 1, 0, 1, 0, 1, 
     n9, 1, 2, 2 + n12, 1, 1]/(-1 + n3) + 
   j[p4a, -1 + n1, n2, -1 + n3, 1, 0, 1, 1, 0, n9, 1, 1, 2 + n12, 2, 1]/
    (-1 + n3) + ((2 + n12)*j[p4a, -1 + n1, n2, -1 + n3, 1, 0, 1, 1, 0, n9, 1, 
      1, 3 + n12, 1, 1])/(-1 + n3) + j[p4a, -1 + n1, n2, -1 + n3, 1, 0, 1, 1, 
     1, n9, 0, 2, 2 + n12, 1, 1]/(1 - n3) + 
   ((7 - 2*d + n1 + 2*n2)*j[p4a, -1 + n1, n2, -1 + n3, 1, 0, 1, 1, 1, n9, 1, 
      1, 2 + n12, 1, 1])/(-1 + n3) + 
   ((2 + n12)*j[p4a, -1 + n1, n2, -1 + n3, 1, 0, 1, 1, 1, n9, 1, 1, 3 + n12, 
      0, 1])/(-1 + n3) + j[p4a, -1 + n1, n2, -1 + n3, 2, 0, 0, 1, 1, n9, 1, 
     1, 2 + n12, 1, 1]/(1 - n3) + j[p4a, -1 + n1, n2, -1 + n3, 2, 0, 1, 1, 0, 
     n9, 1, 1, 2 + n12, 1, 1]/(-1 + n3) + j[p4a, -1 + n1, n2, n3, 1, 0, 1, 0, 
    1, n9, 1, 1, 2 + n12, 1, 1] + 2*j[p4a, -1 + n1, n2, n3, 1, 0, 1, 1, 0, 
     n9, 1, 1, 2 + n12, 1, 1] - j[p4a, -1 + n1, n2, n3, 1, 0, 1, 1, 1, n9, 1, 
    1, 1 + n12, 1, 1] + j[p4a, -1 + n1, n2, n3, 1, 0, 1, 1, 1, n9, 1, 1, 
    2 + n12, 0, 1] + (n2*j[p4a, -1 + n1, 1 + n2, -1 + n3, 1, 0, 1, 1, 1, n9, 
      1, 1, 1 + n12, 1, 1])/(-1 + n3) + 
   ((-1 + n1)*j[p4a, n1, -1 + n2, -1 + n3, 1, 0, 1, 1, 1, n9, 1, 1, 2 + n12, 
      1, 1])/(-1 + n3) - j[p4a, n1, -1 + n2, n3, 1, 0, 1, 1, 1, n9, 1, 1, 
    1 + n12, 1, 1] + ((1 - n1)*j[p4a, n1, n2, -1 + n3, 1, 0, 1, 1, 1, n9, 0, 
      1, 2 + n12, 1, 1])/(-1 + n3) + 
   ((1 + n12)*j[p4a, n1, n2, -1 + n3, 1, 0, 1, 1, 1, n9, 1, 0, 2 + n12, 1, 
      1])/(-1 + n3) + ((8 - 2*d + 2*n1 + n12 + n2)*j[p4a, n1, n2, -1 + n3, 1, 
      0, 1, 1, 1, n9, 1, 1, 1 + n12, 1, 1])/(-1 + n3) + 
   j[p4a, n1, n2, -1 + n3, 1, 0, 1, 1, 1, n9, 1, 1, 1 + n12, 2, 1]/(1 - n3) + 
   ((-1 - n12)*j[p4a, n1, n2, -1 + n3, 1, 0, 1, 1, 1, n9, 1, 1, 2 + n12, 1, 
      1])/(-1 + n3) + j[p4a, n1, n2, -1 + n3, 1, 0, 1, 2, 1, n9, 0, 1, 
     1 + n12, 1, 1]/(1 - n3) + j[p4a, n1, n2, -1 + n3, 1, 0, 1, 2, 1, n9, 1, 
     0, 1 + n12, 1, 1]/(-1 + n3) + j[p4a, n1, n2, -1 + n3, 2, 0, 0, 1, 1, n9, 
     1, 1, 1 + n12, 1, 1]/(1 - n3) + j[p4a, n1, n2, -1 + n3, 2, 0, 1, 1, 0, 
     n9, 1, 1, 1 + n12, 1, 1]/(-1 + n3) + j[p4a, n1, n2, n3, 1, 0, 1, 0, 1, 
    n9, 1, 1, 1 + n12, 1, 1] + 2*j[p4a, n1, n2, n3, 1, 0, 1, 1, 0, n9, 1, 1, 
     1 + n12, 1, 1] + j[p4a, n1, n2, n3, 1, 0, 1, 1, 1, n9, 1, 1, 1 + n12, 0, 
    1] - (n2*j[p4a, n1, 1 + n2, -1 + n3, 1, 0, 1, 1, 1, n9, 0, 1, 1 + n12, 1, 
      1])/(-1 + n3), j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?Positive, (n4_)?Positive, (n5_)?NonPositive, (n6_)?Positive, 
    (n7_)?Positive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n2 == 0 && n5 == 0 && n6 == 1 && n9 == 0 && n8 != 1 -> 
  (2*n4*j[p4a, 0, 0, n3, 1 + n4, 0, 0, n7, n8, 0, 1, 1, 0, 1, 1])/
    (-d + 2*n4 + 2*n8) - (n4*j[p4a, 0, 0, n3, 1 + n4, 0, 1, n7, -1 + n8, 0, 
      1, 1, 0, 1, 1])/(-1 + n8) + 
   ((-4 + d)*j[p4a, 0, 0, 1 + n3, n4, 0, 1, -1 + n7, -1 + n8, 0, 1, 1, 0, 2, 
      1])/((d - 2*n4 - 2*n8)*(-1 + n8)) + 
   ((-4 + d - 2*n3)*j[p4a, 0, 0, 1 + n3, n4, 0, 1, -1 + n7, -1 + n8, 0, 1, 2, 
      0, 1, 1])/((d - 2*n4 - 2*n8)*(-1 + n8)) + 
   ((4 - d + 2*n3)*j[p4a, 0, 0, 1 + n3, n4, 0, 1, n7, -1 + n8, 0, 0, 2, 0, 1, 
      1])/((d - 2*n4 - 2*n8)*(-1 + n8)) + 
   ((-8 + 6*d - d^2 - 8*n3 + 3*d*n3 - 2*n3^2 - 8*n7 + 2*d*n7 - 4*n3*n7)*
     j[p4a, 0, 0, 1 + n3, n4, 0, 1, n7, -1 + n8, 0, 1, 1, 0, 1, 1])/
    ((d - 2*n4 - 2*n8)*(-1 + n8)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n10 == 1 && n11 == 1 && n12 == -1 && 
    n13 == 1 && n14 == 1 && n2 == 0 && n5 == 0 && n6 == 1 && n8 == 1 && 
    n9 == 0 && n7 != 1 -> -j[p4a, n1, -1, n3, n4, 0, 1, n7, 1, 0, 1, 1, 0, 1, 
     1] - (n3*j[p4a, n1, -1, 1 + n3, n4, 0, 1, -1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    (-1 + n7) - j[p4a, n1, 0, -1 + n3, n4, 0, 1, n7, 1, 0, 1, 1, 0, 1, 1] + 
   ((-4*n4 + d*n4 - 2*n4^2)*j[p4a, n1, 0, -1 + n3, 1 + n4, 0, 1, -1 + n7, 1, 
      0, 1, 1, 0, 1, 1])/((-2 + d - 2*n7)*(-1 + n7)) + 
   ((10 - 11*d + 3*d^2 + 4*n1 - 2*d*n1 + 2*n3 - d*n3 + 6*n4 - 3*d*n4 + 
      2*n1*n4 + 2*n3*n4 + 10*n7 - 6*d*n7 + 2*n1*n7 + 2*n4*n7 + 4*n7^2)*
     j[p4a, n1, 0, n3, n4, 0, 1, -1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    ((-1 + n7)*(2 - d + 2*n7)) + j[p4a, n1, 0, n3, n4, 0, 1, -1 + n7, 1, 0, 
     1, 2, 0, 1, 1]/(1 - n7) + 
   ((-4 + d - 2*n4)*j[p4a, n1, 0, n3, n4, 0, 1, -1 + n7, 2, 0, 1, 1, 0, 0, 
      1])/((-2 + d - 2*n7)*(-1 + n7)) + j[p4a, n1, 0, n3, n4, 0, 1, n7, 0, 0, 
    1, 1, 0, 1, 1] - (2*j[p4a, n1, 0, n3, n4, 0, 1, n7, 1, 0, 0, 2, -1, 1, 
      1])/(-2 + d - 2*n7) + j[p4a, n1, 0, n3, n4, 0, 1, n7, 1, 0, 1, 1, 0, 0, 
    1] + ((-4*n4 + d*n4 - 2*n4^2)*j[p4a, n1, 0, n3, 1 + n4, -1, 1, -1 + n7, 
      1, 0, 1, 1, 0, 1, 1])/((-2 + d - 2*n7)*(-1 + n7)) + 
   ((-(d*n4) + 2*n4*n7)*j[p4a, n1, 0, n3, 1 + n4, 0, 0, -1 + n7, 1, 0, 1, 1, 
      0, 1, 1])/((-2 + d - 2*n7)*(-1 + n7)) - 
   (2*n4*j[p4a, n1, 0, n3, 1 + n4, 0, 0, -1 + n7, 2, 0, 1, 1, -1, 1, 1])/
    ((-1 + n7)*(2 - d + 2*n7)) + 
   ((4*n4 - d*n4 + 2*n4^2)*j[p4a, n1, 0, n3, 1 + n4, 0, 1, -2 + n7, 1, 0, 1, 
      1, 0, 1, 1])/((-2 + d - 2*n7)*(-1 + n7)) + 
   ((d*n4 - 2*n4*n7)*j[p4a, n1, 0, n3, 1 + n4, 0, 1, -1 + n7, 0, 0, 1, 1, 0, 
      1, 1])/((-2 + d - 2*n7)*(-1 + n7)) + 
   ((-4*n4 + d*n4 - 2*n4^2)*j[p4a, n1, 0, n3, 1 + n4, 0, 1, -1 + n7, 1, 0, 1, 
      1, -1, 1, 1])/((-2 + d - 2*n7)*(-1 + n7)) + 
   ((4*n4 - d*n4 + 2*n4^2)*j[p4a, n1, 0, n3, 1 + n4, 0, 1, -1 + n7, 1, 0, 1, 
      1, 0, 1, 0])/((-2 + d - 2*n7)*(-1 + n7)) + 
   (2*(-(n3*n4) + n3*n7)*j[p4a, n1, 0, 1 + n3, n4, 0, 1, -2 + n7, 1, 0, 1, 1, 
      0, 1, 1])/((-1 + n7)*(2 - d + 2*n7)) - 
   (2*n3*j[p4a, n1, 0, 1 + n3, n4, 0, 1, -2 + n7, 1, 0, 1, 2, -1, 1, 1])/
    ((-1 + n7)*(2 - d + 2*n7)) + 
   (2*n3*(-1 + d - 2*n7)*j[p4a, n1, 0, 1 + n3, n4, 0, 1, -1 + n7, 0, 0, 1, 1, 
      0, 1, 1])/((-2 + d - 2*n7)*(-1 + n7)) + 
   (2*n3*j[p4a, n1, 0, 1 + n3, n4, 0, 1, -1 + n7, 1, 0, 0, 2, -1, 1, 1])/
    ((-1 + n7)*(2 - d + 2*n7)) - (2*(-2*n3 + 2*d*n3 - n1*n3 - n3^2 - 3*n3*n7)*
     j[p4a, n1, 0, 1 + n3, n4, 0, 1, -1 + n7, 1, 0, 1, 1, -1, 1, 1])/
    ((-2 + d - 2*n7)*(-1 + n7)) + (2*(-3*n3 + d*n3 - n3*n4 - n3*n7)*
     j[p4a, n1, 0, 1 + n3, n4, 0, 1, -1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    ((-2 + d - 2*n7)*(-1 + n7)) + 
   (2*n1*(2 - d + n4 + n7)*j[p4a, 1 + n1, 0, n3, n4, 0, 1, -1 + n7, 1, 0, 1, 
      1, 0, 0, 1])/((-1 + n7)*(2 - d + 2*n7)) - 
   (2*n1*(2 - d + n4 + n7)*j[p4a, 1 + n1, 0, n3, n4, 0, 1, -1 + n7, 1, 0, 1, 
      1, 0, 1, 1])/((-1 + n7)*(2 - d + 2*n7)) - 
   (2*n1*n3*j[p4a, 1 + n1, 0, 1 + n3, n4, 0, 1, -1 + n7, 1, 0, 1, 1, -1, 0, 
      1])/((-1 + n7)*(2 - d + 2*n7)) + 
   (2*n1*n3*j[p4a, 1 + n1, 0, 1 + n3, n4, 0, 1, -1 + n7, 1, 0, 1, 1, -1, 1, 
      1])/((-1 + n7)*(2 - d + 2*n7)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n10 == 1 && n11 == 1 && n12 == 0 && 
    n13 == 1 && n14 == 1 && n2 == -1 && n5 == 0 && n6 == 1 && n8 == 1 && 
    n9 == 0 && n1 != 0 -> 
  ((-2 + d - n4)*(-4 + 3*d - n1 + d*n1 + 3*n3 - 2*d*n3 - 5*n7 - d*n7 - 
      2*n1*n7 + 4*n3*n7 + 2*n7^2)*j[p4a, n1, -1, n3, n4, 0, 0, n7, 2, 0, 1, 
      1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 43*d*n1 + 
     24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 6*d*n3 - 
     8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 24*d*n3^2 - 
     7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 76*n4 - 
     116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 11*d^2*n1*n4 + 
     3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 3*d^2*n3*n4 - 
     2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 
     2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 2*d*n3*n4^2 + 
     178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 53*d*n1*n7 + 
     11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 28*d*n3*n7 - 
     14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 4*n1*n3^2*n7 - 
     4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 63*n1*n4*n7 - 
     29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 6*d*n3*n4*n7 + 
     2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 4*n1*n4^2*n7 - 
     4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 20*n1*n7^2 - 
     6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 12*n3^2*n7^2 + 
     82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 
     4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((72 - 76*d + 29*d^2 - 4*d^3 + 26*n1 - 16*d*n1 + 3*d^2*n1 + 2*n1^2 - 
      32*n3 + 17*d*n3 - d^2*n3 - 14*n1*n3 + 4*d*n1*n3 - 2*n1^2*n3 + 2*n3^2 - 
      3*d*n3^2 + 2*n3^3 + 20*n4 - 30*d*n4 + 9*d^2*n4 + 5*n1*n4 - 5*d*n1*n4 + 
      12*n3*n4 - 9*d*n3*n4 + 3*n1*n3*n4 + 4*n3^2*n4 - 2*d*n4^2 + 2*n3*n4^2 + 
      62*n7 - 44*d*n7 + 8*d^2*n7 + 12*n1*n7 - 4*d*n1*n7 - 12*n3*n7 + 
      3*d*n3*n7 - 4*n1*n3*n7 + 47*n4*n7 - 20*d*n4*n7 + 8*n1*n4*n7 + 
      8*n3*n4*n7 + 4*n4^2*n7 + 6*n7^2 - 2*d*n7^2 - 2*n3*n7^2 + 6*n4*n7^2)*
     j[p4a, n1, -1, n3, n4, 0, 1, n7, 1, 0, 0, 2, 0, 1, 1])/
    (56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 43*d*n1 + 24*d^2*n1 - 
     4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 6*d*n3 - 8*d^2*n3 + 
     3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 24*d*n3^2 - 7*d^2*n3^2 - 
     4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 76*n4 - 116*d*n4 + 
     57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 11*d^2*n1*n4 + 
     3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 3*d^2*n3*n4 - 
     2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 
     2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 2*d*n3*n4^2 + 
     178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 53*d*n1*n7 + 
     11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 28*d*n3*n7 - 
     14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 4*n1*n3^2*n7 - 
     4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 63*n1*n4*n7 - 
     29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 6*d*n3*n4*n7 + 
     2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 4*n1*n4^2*n7 - 
     4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 20*n1*n7^2 - 
     6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 12*n3^2*n7^2 + 
     82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 
     4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((-2 + d - n4)*(-4 + 3*d - n1 + d*n1 + 3*n3 - 2*d*n3 - 5*n7 - d*n7 - 
      2*n1*n7 + 4*n3*n7 + 2*n7^2)*j[p4a, n1, -1, n3, n4, 0, 1, n7, 1, 0, 1, 
      1, 0, 2, 0])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 43*d*n1 + 
     24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 6*d*n3 - 
     8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 24*d*n3^2 - 
     7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 76*n4 - 
     116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 11*d^2*n1*n4 + 
     3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 3*d^2*n3*n4 - 
     2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 
     2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 2*d*n3*n4^2 + 
     178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 53*d*n1*n7 + 
     11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 28*d*n3*n7 - 
     14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 4*n1*n3^2*n7 - 
     4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 63*n1*n4*n7 - 
     29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 6*d*n3*n4*n7 + 
     2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 4*n1*n4^2*n7 - 
     4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 20*n1*n7^2 - 
     6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 12*n3^2*n7^2 + 
     82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 
     4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   (n3*(18 - 5*d - d^2 + 18*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 18*n3 + 4*d*n3 + 
      2*d^2*n3 - 10*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 6*n3^2 - 5*d*n3^2 + 
      2*n3^3 - 11*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 11*n3*n4 - 7*d*n3*n4 + 
      3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 16*n7 + 11*d*n7 - 
      d^2*n7 + 4*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + d*n4*n7 + 
      4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, n1, -1, 1 + n3, n4, 0, 1, n7, 
      1, 0, 1, 1, 0, 0, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) - 
   (n3*(-2 + d - n4)*(4 - 3*d + n1 - d*n1 - 3*n3 + 2*d*n3 + 5*n7 + d*n7 + 
      2*n1*n7 - 4*n3*n7 - 2*n7^2)*j[p4a, n1, -1, 1 + n3, n4, 0, 1, n7, 1, 0, 
      1, 1, 0, 1, 0])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((24 - 20*d + 14*d^2 - 4*d^3 + 6*n1 + 7*d*n1 - 2*d^2*n1 + 2*d*n1^2 - 
      4*n3 - 16*d*n3 + 9*d^2*n3 - 10*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 8*n3^2 - 
      7*d*n3^2 + 2*n3^3 + 12*n4 - 24*d*n4 + 9*d^2*n4 + 3*n1*n4 - 3*d*n1*n4 + 
      18*n3*n4 - 13*d*n3*n4 + 3*n1*n3*n4 + 4*n3^2*n4 - 2*d*n4^2 + 2*n3*n4^2 - 
      6*n7 - 25*d*n7 + 13*d^2*n7 - 24*n1*n7 + 6*d*n1*n7 - 4*n1^2*n7 + 
      32*n3*n7 - 23*d*n3*n7 + 8*n3^2*n7 + 37*n4*n7 - 22*d*n4*n7 + 
      4*n1*n4*n7 + 16*n3*n4*n7 + 4*n4^2*n7 + 20*n7^2 - 14*d*n7^2 + 
      10*n3*n7^2 + 10*n4*n7^2 + 4*n7^3)*j[p4a, n1, 0, -1 + n3, n4, 0, 1, n7, 
      1, 0, 1, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) - 
   ((-2 + d - n4)*(-4 + 3*d - n1 + d*n1 + 3*n3 - 2*d*n3 - 5*n7 - d*n7 - 
      2*n1*n7 + 4*n3*n7 + 2*n7^2)*j[p4a, n1, 0, n3, n4, 0, 0, n7, 1, 0, 1, 1, 
      0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 43*d*n1 + 
     24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 6*d*n3 - 
     8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 24*d*n3^2 - 
     7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 76*n4 - 
     116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 11*d^2*n1*n4 + 
     3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 3*d^2*n3*n4 - 
     2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 
     2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 2*d*n3*n4^2 + 
     178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 53*d*n1*n7 + 
     11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 28*d*n3*n7 - 
     14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 4*n1*n3^2*n7 - 
     4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 63*n1*n4*n7 - 
     29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 6*d*n3*n4*n7 + 
     2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 4*n1*n4^2*n7 - 
     4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 20*n1*n7^2 - 
     6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 12*n3^2*n7^2 + 
     82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 
     4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((-46 + 61*d - 27*d^2 + 4*d^3 - 6*n1 + 5*d*n1 - d^2*n1 + 8*n3 - 6*d*n3 + 
      d^2*n3 + 4*n1*n3 - 2*d*n1*n3 + 4*n3^2 - 2*d*n3^2 - 27*n4 + 33*d*n4 - 
      9*d^2*n4 - 3*n1*n4 + 3*d*n1*n4 - 4*n3*n4 + 4*d*n3*n4 - 2*n4^2 + 
      2*d*n4^2 - 68*n7 + 52*d*n7 - 10*d^2*n7 - 8*n1*n7 + 2*d*n1*n7 + 
      8*n3*n7 - 4*d*n3*n7 + 4*n1*n3*n7 + 4*n3^2*n7 - 50*n4*n7 + 22*d*n4*n7 - 
      6*n1*n4*n7 - 8*n3*n4*n7 - 4*n4^2*n7 - 12*n7^2 + 4*d*n7^2 + 4*n3*n7^2 - 
      8*n4*n7^2)*j[p4a, n1, 0, n3, n4, 0, 1, n7, 0, 0, 1, 1, 0, 1, 1])/
    (56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 43*d*n1 + 24*d^2*n1 - 
     4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 6*d*n3 - 8*d^2*n3 + 
     3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 24*d*n3^2 - 7*d^2*n3^2 - 
     4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 76*n4 - 116*d*n4 + 
     57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 11*d^2*n1*n4 + 
     3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 3*d^2*n3*n4 - 
     2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 
     2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 2*d*n3*n4^2 + 
     178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 53*d*n1*n7 + 
     11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 28*d*n3*n7 - 
     14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 4*n1*n3^2*n7 - 
     4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 63*n1*n4*n7 - 
     29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 6*d*n3*n4*n7 + 
     2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 4*n1*n4^2*n7 - 
     4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 20*n1*n7^2 - 
     6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 12*n3^2*n7^2 + 
     82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 
     4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((-2 + d - n4)*(-4 + 3*d - n1 + d*n1 + 3*n3 - 2*d*n3 - 5*n7 - d*n7 - 
      2*n1*n7 + 4*n3*n7 + 2*n7^2)*j[p4a, 1 + n1, -2, n3, n4, 0, 0, n7, 1, 0, 
      2, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((18 - 5*d - d^2 + 18*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 18*n3 + 4*d*n3 + 
      2*d^2*n3 - 10*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 6*n3^2 - 5*d*n3^2 + 
      2*n3^3 - 11*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 11*n3*n4 - 7*d*n3*n4 + 
      3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 16*n7 + 11*d*n7 - 
      d^2*n7 + 4*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + d*n4*n7 + 
      4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, -2, n3, n4, 0, 1, n7, 
      1, 0, 1, 1, 0, 0, 2])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((18 - 5*d - d^2 + 18*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 18*n3 + 4*d*n3 + 
      2*d^2*n3 - 10*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 6*n3^2 - 5*d*n3^2 + 
      2*n3^3 - 11*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 11*n3*n4 - 7*d*n3*n4 + 
      3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 16*n7 + 11*d*n7 - 
      d^2*n7 + 4*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + d*n4*n7 + 
      4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, -2, n3, n4, 0, 1, n7, 
      1, 0, 2, 0, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((18 - 5*d - d^2 + 18*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 18*n3 + 4*d*n3 + 
      2*d^2*n3 - 10*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 6*n3^2 - 5*d*n3^2 + 
      2*n3^3 - 11*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 11*n3*n4 - 7*d*n3*n4 + 
      3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 16*n7 + 11*d*n7 - 
      d^2*n7 + 4*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + d*n4*n7 + 
      4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, -2, n3, n4, 0, 1, n7, 
      2, 0, 1, 0, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) - 
   ((-2 + d - n4)*n7*(4 - 3*d + n1 - d*n1 - 3*n3 + 2*d*n3 + 5*n7 + d*n7 + 
      2*n1*n7 - 4*n3*n7 - 2*n7^2)*j[p4a, 1 + n1, -2, n3, n4, 0, 1, 1 + n7, 1, 
      0, 1, 1, 0, 0, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((18 - 5*d - d^2 + 18*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 18*n3 + 4*d*n3 + 
      2*d^2*n3 - 10*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 6*n3^2 - 5*d*n3^2 + 
      2*n3^3 - 11*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 11*n3*n4 - 7*d*n3*n4 + 
      3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 16*n7 + 11*d*n7 - 
      d^2*n7 + 4*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + d*n4*n7 + 
      4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, -2, n3, n4, 0, 2, n7, 
      1, 0, 0, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   (2*n3*(18 - 5*d - d^2 + 18*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 18*n3 + 
      4*d*n3 + 2*d^2*n3 - 10*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 6*n3^2 - 
      5*d*n3^2 + 2*n3^3 - 11*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 11*n3*n4 - 
      7*d*n3*n4 + 3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 16*n7 + 
      11*d*n7 - d^2*n7 + 4*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + 
      d*n4*n7 + 4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, -2, 1 + n3, 
      n4, 0, 1, -1 + n7, 1, 0, 1, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 
     36*d^3 + 4*d^4 + 22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 
     3*d*n1^2 + d^2*n1^2 + 20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - 
     d^2*n1*n3 - 20*n3^2 + 24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 
     4*n3^3 + 2*d*n3^3 + 76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 
     39*d*n1*n4 + 11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 
     13*d*n3*n4 - 3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 
     4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 
     4*n3*n4^2 + 2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 
     54*n1*n7 - 53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 
     4*n3*n7 + 28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 
     20*d*n3^2*n7 - 4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 
     32*d^2*n4*n7 + 63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 
     10*n3*n4*n7 + 6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 
     6*d*n4^2*n7 + 4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 
     16*d^2*n7^2 + 20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 
     8*n1*n3*n7^2 - 12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 
     14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 
     8*n4*n7^3) + (n3*(-2 + d - n4)*(4 - 3*d + n1 - d*n1 - 3*n3 + 2*d*n3 + 
      5*n7 + d*n7 + 2*n1*n7 - 4*n3*n7 - 2*n7^2)*j[p4a, 1 + n1, -2, 1 + n3, 
      n4, 0, 1, n7, 1, 0, 1, 1, 0, 1, 0])/(56 - 140*d + 112*d^2 - 36*d^3 + 
     4*d^4 + 22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + 
     d^2*n1^2 + 20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 
     20*n3^2 + 24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 
     2*d*n3^3 + 76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 
     39*d*n1*n4 + 11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 
     13*d*n3*n4 - 3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 
     4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 
     4*n3*n4^2 + 2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 
     54*n1*n7 - 53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 
     4*n3*n7 + 28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 
     20*d*n3^2*n7 - 4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 
     32*d^2*n4*n7 + 63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 
     10*n3*n4*n7 + 6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 
     6*d*n4^2*n7 + 4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 
     16*d^2*n7^2 + 20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 
     8*n1*n3*n7^2 - 12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 
     14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 
     8*n4*n7^3) + ((-18 + 5*d + d^2 - 18*n1 + 8*d*n1 - d^2*n1 - 2*n1^2 + 
      18*n3 - 4*d*n3 - 2*d^2*n3 + 10*n1*n3 - 2*d*n1*n3 + 2*n1^2*n3 - 6*n3^2 + 
      5*d*n3^2 - 2*n3^3 + 11*n4 - 6*d*n4 - n1*n4 + d*n1*n4 - 11*n3*n4 + 
      7*d*n3*n4 - 3*n1*n3*n4 - 4*n3^2*n4 + 2*n4^2 - 2*n3*n4^2 + 16*n7 - 
      11*d*n7 + d^2*n7 - 4*n3*n7 + 5*d*n3*n7 - 4*n3^2*n7 + 8*n4*n7 - 
      d*n4*n7 - 4*n3*n4*n7 + 2*n7^2 - 2*n3*n7^2)*j[p4a, 1 + n1, -1, -1 + n3, 
      n4, 0, 0, n7, 1, 0, 1, 1, 0, 1, 2])/(56 - 140*d + 112*d^2 - 36*d^3 + 
     4*d^4 + 22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + 
     d^2*n1^2 + 20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 
     20*n3^2 + 24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 
     2*d*n3^3 + 76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 
     39*d*n1*n4 + 11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 
     13*d*n3*n4 - 3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 
     4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 
     4*n3*n4^2 + 2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 
     54*n1*n7 - 53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 
     4*n3*n7 + 28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 
     20*d*n3^2*n7 - 4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 
     32*d^2*n4*n7 + 63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 
     10*n3*n4*n7 + 6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 
     6*d*n4^2*n7 + 4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 
     16*d^2*n7^2 + 20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 
     8*n1*n3*n7^2 - 12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 
     14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 
     8*n4*n7^3) + ((-2 + d - n4)*(-4 + 3*d - n1 + d*n1 + 3*n3 - 2*d*n3 - 
      5*n7 - d*n7 - 2*n1*n7 + 4*n3*n7 + 2*n7^2)*j[p4a, 1 + n1, -1, -1 + n3, 
      n4, 0, 0, n7, 1, 0, 2, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 
     4*d^4 + 22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + 
     d^2*n1^2 + 20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 
     20*n3^2 + 24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 
     2*d*n3^3 + 76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 
     39*d*n1*n4 + 11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 
     13*d*n3*n4 - 3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 
     4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 
     4*n3*n4^2 + 2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 
     54*n1*n7 - 53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 
     4*n3*n7 + 28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 
     20*d*n3^2*n7 - 4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 
     32*d^2*n4*n7 + 63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 
     10*n3*n4*n7 + 6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 
     6*d*n4^2*n7 + 4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 
     16*d^2*n7^2 + 20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 
     8*n1*n3*n7^2 - 12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 
     14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 
     8*n4*n7^3) + ((-18 + 5*d + d^2 - 18*n1 + 8*d*n1 - d^2*n1 - 2*n1^2 + 
      18*n3 - 4*d*n3 - 2*d^2*n3 + 10*n1*n3 - 2*d*n1*n3 + 2*n1^2*n3 - 6*n3^2 + 
      5*d*n3^2 - 2*n3^3 + 11*n4 - 6*d*n4 - n1*n4 + d*n1*n4 - 11*n3*n4 + 
      7*d*n3*n4 - 3*n1*n3*n4 - 4*n3^2*n4 + 2*n4^2 - 2*n3*n4^2 + 16*n7 - 
      11*d*n7 + d^2*n7 - 4*n3*n7 + 5*d*n3*n7 - 4*n3^2*n7 + 8*n4*n7 - 
      d*n4*n7 - 4*n3*n4*n7 + 2*n7^2 - 2*n3*n7^2)*j[p4a, 1 + n1, -1, -1 + n3, 
      n4, 0, 1, n7, 0, 0, 1, 1, 0, 1, 2])/(56 - 140*d + 112*d^2 - 36*d^3 + 
     4*d^4 + 22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + 
     d^2*n1^2 + 20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 
     20*n3^2 + 24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 
     2*d*n3^3 + 76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 
     39*d*n1*n4 + 11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 
     13*d*n3*n4 - 3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 
     4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 
     4*n3*n4^2 + 2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 
     54*n1*n7 - 53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 
     4*n3*n7 + 28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 
     20*d*n3^2*n7 - 4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 
     32*d^2*n4*n7 + 63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 
     10*n3*n4*n7 + 6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 
     6*d*n4^2*n7 + 4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 
     16*d^2*n7^2 + 20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 
     8*n1*n3*n7^2 - 12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 
     14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 
     8*n4*n7^3) + ((-372 + 638*d - 393*d^2 + 99*d^3 - 8*d^4 - 176*n1 + 
      249*d*n1 - 116*d^2*n1 + 17*d^3*n1 - 18*n1^2 + 20*d*n1^2 - 6*d^2*n1^2 + 
      64*n3 - 111*d*n3 + 72*d^2*n3 - 16*d^3*n3 + 36*n1*n3 - 29*d*n1*n3 + 
      7*d^2*n1*n3 + 6*n1^2*n3 - 2*d*n1^2*n3 + 58*n3^2 - 63*d*n3^2 + 
      18*d^2*n3^2 + 12*n1*n3^2 - 6*d*n1*n3^2 + 6*n3^3 - 4*d*n3^3 - 248*n4 + 
      363*d*n4 - 162*d^2*n4 + 22*d^3*n4 - 96*n1*n4 + 116*d*n1*n4 - 
      30*d^2*n1*n4 - 8*n1^2*n4 + 8*d*n1^2*n4 + 6*n3*n4 - 3*d*n3*n4 + 
      3*d^2*n3*n4 + 4*d*n1*n3*n4 + 10*n3^2*n4 - 6*d*n3^2*n4 - 43*n4^2 + 
      52*d*n4^2 - 13*d^2*n4^2 - 8*n1*n4^2 + 8*d*n1*n4^2 - n3*n4^2 + 
      2*d*n3*n4^2 - 2*n4^3 + 2*d*n4^3 - 638*n7 + 700*d*n7 - 223*d^2*n7 + 
      17*d^3*n7 - 292*n1*n7 + 235*d*n1*n7 - 43*d^2*n1*n7 - 30*n1^2*n7 + 
      14*d*n1^2*n7 + 114*n3*n7 - 177*d*n3*n7 + 60*d^2*n3*n7 + 32*n1*n3*n7 - 
      22*d*n1*n3*n7 + 4*n1^2*n3*n7 + 86*n3^2*n7 - 48*d*n3^2*n7 + 
      12*n1*n3^2*n7 + 8*n3^3*n7 - 457*n4*n7 + 341*d*n4*n7 - 58*d^2*n4*n7 - 
      180*n1*n4*n7 + 72*d*n1*n4*n7 - 16*n1^2*n4*n7 - 5*n3*n4*n7 - 
      12*d*n3*n4*n7 - 8*n1*n3*n4*n7 + 12*n3^2*n4*n7 - 81*n4^2*n7 + 
      31*d*n4^2*n7 - 16*n1*n4^2*n7 - 4*n3*n4^2*n7 - 4*n4^3*n7 - 180*n7^2 + 
      76*d*n7^2 + 4*d^2*n7^2 - 64*n1*n7^2 + 18*d*n1*n7^2 - 4*n1^2*n7^2 + 
      110*n3*n7^2 - 66*d*n3*n7^2 + 16*n1*n3*n7^2 + 24*n3^2*n7^2 - 
      105*n4*n7^2 + 29*d*n4*n7^2 - 24*n1*n4*n7^2 + 12*n3*n4*n7^2 - 
      10*n4^2*n7^2 + 10*n7^3 - 14*d*n7^3 + 20*n3*n7^3 - 2*n4*n7^3 + 4*n7^4)*
     j[p4a, 1 + n1, -1, -1 + n3, n4, 0, 1, n7, 1, 0, 1, 1, 0, 1, 1])/
    (56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 43*d*n1 + 24*d^2*n1 - 
     4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 6*d*n3 - 8*d^2*n3 + 
     3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 24*d*n3^2 - 7*d^2*n3^2 - 
     4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 76*n4 - 116*d*n4 + 
     57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 11*d^2*n1*n4 + 
     3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 3*d^2*n3*n4 - 
     2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 
     2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 2*d*n3*n4^2 + 
     178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 53*d*n1*n7 + 
     11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 28*d*n3*n7 - 
     14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 4*n1*n3^2*n7 - 
     4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 63*n1*n4*n7 - 
     29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 6*d*n3*n4*n7 + 
     2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 4*n1*n4^2*n7 - 
     4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 20*n1*n7^2 - 
     6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 12*n3^2*n7^2 + 
     82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 
     4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((-10 + 4*d - 2*n1 - 2*n3 - n4 - 2*n7)*(-4 + 3*d - n1 + d*n1 + 3*n3 - 
      2*d*n3 - 5*n7 - d*n7 - 2*n1*n7 + 4*n3*n7 + 2*n7^2)*
     j[p4a, 1 + n1, -1, -1 + n3, n4, 0, 1, n7, 1, 0, 1, 1, 0, 1, 2])/
    (56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 43*d*n1 + 24*d^2*n1 - 
     4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 6*d*n3 - 8*d^2*n3 + 
     3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 24*d*n3^2 - 7*d^2*n3^2 - 
     4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 76*n4 - 116*d*n4 + 
     57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 11*d^2*n1*n4 + 
     3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 3*d^2*n3*n4 - 
     2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 
     2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 2*d*n3*n4^2 + 
     178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 53*d*n1*n7 + 
     11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 28*d*n3*n7 - 
     14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 4*n1*n3^2*n7 - 
     4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 63*n1*n4*n7 - 
     29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 6*d*n3*n4*n7 + 
     2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 4*n1*n4^2*n7 - 
     4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 20*n1*n7^2 - 
     6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 12*n3^2*n7^2 + 
     82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 
     4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((46 - 61*d + 27*d^2 - 4*d^3 + 6*n1 - 5*d*n1 + d^2*n1 - 8*n3 + 6*d*n3 - 
      d^2*n3 - 4*n1*n3 + 2*d*n1*n3 - 4*n3^2 + 2*d*n3^2 + 27*n4 - 33*d*n4 + 
      9*d^2*n4 + 3*n1*n4 - 3*d*n1*n4 + 4*n3*n4 - 4*d*n3*n4 + 2*n4^2 - 
      2*d*n4^2 + 68*n7 - 52*d*n7 + 10*d^2*n7 + 8*n1*n7 - 2*d*n1*n7 - 
      8*n3*n7 + 4*d*n3*n7 - 4*n1*n3*n7 - 4*n3^2*n7 + 50*n4*n7 - 22*d*n4*n7 + 
      6*n1*n4*n7 + 8*n3*n4*n7 + 4*n4^2*n7 + 12*n7^2 - 4*d*n7^2 - 4*n3*n7^2 + 
      8*n4*n7^2)*j[p4a, 1 + n1, -1, -1 + n3, n4, 0, 1, n7, 1, 0, 1, 1, 0, 2, 
      1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 43*d*n1 + 
     24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 6*d*n3 - 
     8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 24*d*n3^2 - 
     7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 76*n4 - 
     116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 11*d^2*n1*n4 + 
     3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 3*d^2*n3*n4 - 
     2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 
     2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 2*d*n3*n4^2 + 
     178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 53*d*n1*n7 + 
     11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 28*d*n3*n7 - 
     14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 4*n1*n3^2*n7 - 
     4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 63*n1*n4*n7 - 
     29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 6*d*n3*n4*n7 + 
     2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 4*n1*n4^2*n7 - 
     4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 20*n1*n7^2 - 
     6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 12*n3^2*n7^2 + 
     82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 
     4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((18 - 5*d - d^2 + 18*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 18*n3 + 4*d*n3 + 
      2*d^2*n3 - 10*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 6*n3^2 - 5*d*n3^2 + 
      2*n3^3 - 11*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 11*n3*n4 - 7*d*n3*n4 + 
      3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 16*n7 + 11*d*n7 - 
      d^2*n7 + 4*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + d*n4*n7 + 
      4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, -1, -1 + n3, n4, 0, 1, 
      n7, 1, 0, 2, 0, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 
     22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 
     20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((-2 + d - n4)*n7*(4 - 3*d + n1 - d*n1 - 3*n3 + 2*d*n3 + 5*n7 + d*n7 + 
      2*n1*n7 - 4*n3*n7 - 2*n7^2)*j[p4a, 1 + n1, -1, -1 + n3, n4, 0, 1, 
      1 + n7, 0, 0, 1, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 
     22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 
     20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) - 
   (n7*(24 - 20*d + 14*d^2 - 4*d^3 + 6*n1 + 7*d*n1 - 2*d^2*n1 + 2*d*n1^2 - 
      4*n3 - 16*d*n3 + 9*d^2*n3 - 10*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 8*n3^2 - 
      7*d*n3^2 + 2*n3^3 + 12*n4 - 24*d*n4 + 9*d^2*n4 + 3*n1*n4 - 3*d*n1*n4 + 
      18*n3*n4 - 13*d*n3*n4 + 3*n1*n3*n4 + 4*n3^2*n4 - 2*d*n4^2 + 2*n3*n4^2 - 
      6*n7 - 25*d*n7 + 13*d^2*n7 - 24*n1*n7 + 6*d*n1*n7 - 4*n1^2*n7 + 
      32*n3*n7 - 23*d*n3*n7 + 8*n3^2*n7 + 37*n4*n7 - 22*d*n4*n7 + 
      4*n1*n4*n7 + 16*n3*n4*n7 + 4*n4^2*n7 + 20*n7^2 - 14*d*n7^2 + 
      10*n3*n7^2 + 10*n4*n7^2 + 4*n7^3)*j[p4a, 1 + n1, -1, -1 + n3, n4, 0, 1, 
      1 + n7, 1, 0, 0, 1, 0, 1, 1])/(-56 + 140*d - 112*d^2 + 36*d^3 - 4*d^4 - 
     22*n1 + 43*d*n1 - 24*d^2*n1 + 4*d^3*n1 - 2*n1^2 + 3*d*n1^2 - d^2*n1^2 - 
     20*n3 + 6*d*n3 + 8*d^2*n3 - 3*d^3*n3 - 4*n1*n3 + d^2*n1*n3 + 20*n3^2 - 
     24*d*n3^2 + 7*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 4*n3^3 - 2*d*n3^3 - 
     76*n4 + 116*d*n4 - 57*d^2*n4 + 9*d^3*n4 - 31*n1*n4 + 39*d*n1*n4 - 
     11*d^2*n1*n4 - 3*n1^2*n4 + 3*d*n1^2*n4 + 14*n3*n4 - 13*d*n3*n4 + 
     3*d^2*n3*n4 + 2*n1*n3*n4 + d*n1*n3*n4 + 8*n3^2*n4 - 4*d*n3^2*n4 - 
     8*n4^2 + 8*d*n4^2 - 2*d^2*n4^2 - 2*n1*n4^2 + 2*d*n1*n4^2 + 4*n3*n4^2 - 
     2*d*n3*n4^2 - 178*n7 + 261*d*n7 - 114*d^2*n7 + 15*d^3*n7 - 54*n1*n7 + 
     53*d*n1*n7 - 11*d^2*n1*n7 - 4*n1^2*n7 + 2*d*n1^2*n7 - 4*n3*n7 - 
     28*d*n3*n7 + 14*d^2*n3*n7 - 6*d*n1*n3*n7 + 32*n3^2*n7 - 20*d*n3^2*n7 + 
     4*n1*n3^2*n7 + 4*n3^3*n7 - 165*n4*n7 + 149*d*n4*n7 - 32*d^2*n4*n7 - 
     63*n1*n4*n7 + 29*d*n1*n4*n7 - 6*n1^2*n4*n7 + 10*n3*n4*n7 - 
     6*d*n3*n4*n7 - 2*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 14*n4^2*n7 + 6*d*n4^2*n7 - 
     4*n1*n4^2*n7 + 4*n3*n4^2*n7 - 128*n7^2 + 96*d*n7^2 - 16*d^2*n7^2 - 
     20*n1*n7^2 + 6*d*n1*n7^2 + 28*n3*n7^2 - 20*d*n3*n7^2 + 8*n1*n3*n7^2 + 
     12*n3^2*n7^2 - 82*n4*n7^2 + 32*d*n4*n7^2 - 14*n1*n4*n7^2 - 4*n4^2*n7^2 - 
     16*n7^3 + 4*d*n7^3 + 8*n3*n7^3 - 8*n4*n7^3) + 
   (n7*(24 - 20*d + 14*d^2 - 4*d^3 + 6*n1 + 7*d*n1 - 2*d^2*n1 + 2*d*n1^2 - 
      4*n3 - 16*d*n3 + 9*d^2*n3 - 10*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 8*n3^2 - 
      7*d*n3^2 + 2*n3^3 + 12*n4 - 24*d*n4 + 9*d^2*n4 + 3*n1*n4 - 3*d*n1*n4 + 
      18*n3*n4 - 13*d*n3*n4 + 3*n1*n3*n4 + 4*n3^2*n4 - 2*d*n4^2 + 2*n3*n4^2 - 
      6*n7 - 25*d*n7 + 13*d^2*n7 - 24*n1*n7 + 6*d*n1*n7 - 4*n1^2*n7 + 
      32*n3*n7 - 23*d*n3*n7 + 8*n3^2*n7 + 37*n4*n7 - 22*d*n4*n7 + 
      4*n1*n4*n7 + 16*n3*n4*n7 + 4*n4^2*n7 + 20*n7^2 - 14*d*n7^2 + 
      10*n3*n7^2 + 10*n4*n7^2 + 4*n7^3)*j[p4a, 1 + n1, -1, -1 + n3, n4, 0, 1, 
      1 + n7, 1, 0, 1, 0, 0, 1, 1])/(-56 + 140*d - 112*d^2 + 36*d^3 - 4*d^4 - 
     22*n1 + 43*d*n1 - 24*d^2*n1 + 4*d^3*n1 - 2*n1^2 + 3*d*n1^2 - d^2*n1^2 - 
     20*n3 + 6*d*n3 + 8*d^2*n3 - 3*d^3*n3 - 4*n1*n3 + d^2*n1*n3 + 20*n3^2 - 
     24*d*n3^2 + 7*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 4*n3^3 - 2*d*n3^3 - 
     76*n4 + 116*d*n4 - 57*d^2*n4 + 9*d^3*n4 - 31*n1*n4 + 39*d*n1*n4 - 
     11*d^2*n1*n4 - 3*n1^2*n4 + 3*d*n1^2*n4 + 14*n3*n4 - 13*d*n3*n4 + 
     3*d^2*n3*n4 + 2*n1*n3*n4 + d*n1*n3*n4 + 8*n3^2*n4 - 4*d*n3^2*n4 - 
     8*n4^2 + 8*d*n4^2 - 2*d^2*n4^2 - 2*n1*n4^2 + 2*d*n1*n4^2 + 4*n3*n4^2 - 
     2*d*n3*n4^2 - 178*n7 + 261*d*n7 - 114*d^2*n7 + 15*d^3*n7 - 54*n1*n7 + 
     53*d*n1*n7 - 11*d^2*n1*n7 - 4*n1^2*n7 + 2*d*n1^2*n7 - 4*n3*n7 - 
     28*d*n3*n7 + 14*d^2*n3*n7 - 6*d*n1*n3*n7 + 32*n3^2*n7 - 20*d*n3^2*n7 + 
     4*n1*n3^2*n7 + 4*n3^3*n7 - 165*n4*n7 + 149*d*n4*n7 - 32*d^2*n4*n7 - 
     63*n1*n4*n7 + 29*d*n1*n4*n7 - 6*n1^2*n4*n7 + 10*n3*n4*n7 - 
     6*d*n3*n4*n7 - 2*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 14*n4^2*n7 + 6*d*n4^2*n7 - 
     4*n1*n4^2*n7 + 4*n3*n4^2*n7 - 128*n7^2 + 96*d*n7^2 - 16*d^2*n7^2 - 
     20*n1*n7^2 + 6*d*n1*n7^2 + 28*n3*n7^2 - 20*d*n3*n7^2 + 8*n1*n3*n7^2 + 
     12*n3^2*n7^2 - 82*n4*n7^2 + 32*d*n4*n7^2 - 14*n1*n4*n7^2 - 4*n4^2*n7^2 - 
     16*n7^3 + 4*d*n7^3 + 8*n3*n7^3 - 8*n4*n7^3) + 
   ((18 - 5*d - d^2 + 18*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 18*n3 + 4*d*n3 + 
      2*d^2*n3 - 10*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 6*n3^2 - 5*d*n3^2 + 
      2*n3^3 - 11*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 11*n3*n4 - 7*d*n3*n4 + 
      3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 16*n7 + 11*d*n7 - 
      d^2*n7 + 4*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + d*n4*n7 + 
      4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, -1, -1 + n3, n4, 0, 2, 
      -1 + n7, 1, 0, 1, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 
     22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 
     20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) - 
   (n4*(-14 + 25*d - 18*d^2 + 4*d^3 + 10*n1 - 12*d*n1 + 2*d^2*n1 + 2*n1^2 - 
      2*d*n1^2 - 8*n3 + 13*d*n3 - 5*d^2*n3 - 2*n3^2 + 2*d*n3^2 - 27*n4 + 
      33*d*n4 - 9*d^2*n4 - 3*n1*n4 + 3*d*n1*n4 - 4*n3*n4 + 4*d*n3*n4 - 
      2*n4^2 + 2*d*n4^2 - 20*n7 + 39*d*n7 - 13*d^2*n7 + 20*n1*n7 - 
      4*d*n1*n7 + 4*n1^2*n7 - 20*n3*n7 + 14*d*n3*n7 - 4*n3^2*n7 - 50*n4*n7 + 
      22*d*n4*n7 - 6*n1*n4*n7 - 8*n3*n4*n7 - 4*n4^2*n7 - 18*n7^2 + 
      12*d*n7^2 - 8*n3*n7^2 - 8*n4*n7^2 - 4*n7^3)*j[p4a, 1 + n1, -1, -1 + n3, 
      1 + n4, 0, 0, n7, 1, 0, 1, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 
     36*d^3 + 4*d^4 + 22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 
     3*d*n1^2 + d^2*n1^2 + 20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - 
     d^2*n1*n3 - 20*n3^2 + 24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 
     4*n3^3 + 2*d*n3^3 + 76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 
     39*d*n1*n4 + 11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 
     13*d*n3*n4 - 3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 
     4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 
     4*n3*n4^2 + 2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 
     54*n1*n7 - 53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 
     4*n3*n7 + 28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 
     20*d*n3^2*n7 - 4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 
     32*d^2*n4*n7 + 63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 
     10*n3*n4*n7 + 6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 
     6*d*n4^2*n7 + 4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 
     16*d^2*n7^2 + 20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 
     8*n1*n3*n7^2 - 12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 
     14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 
     8*n4*n7^3) + (n4*(18 - 5*d - d^2 + 18*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 
      18*n3 + 4*d*n3 + 2*d^2*n3 - 10*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 6*n3^2 - 
      5*d*n3^2 + 2*n3^3 - 11*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 11*n3*n4 - 
      7*d*n3*n4 + 3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 16*n7 + 
      11*d*n7 - d^2*n7 + 4*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + 
      d*n4*n7 + 4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, -1, -1 + n3, 
      1 + n4, 0, 1, -1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    (56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 43*d*n1 + 24*d^2*n1 - 
     4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 6*d*n3 - 8*d^2*n3 + 
     3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 24*d*n3^2 - 7*d^2*n3^2 - 
     4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 76*n4 - 116*d*n4 + 
     57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 11*d^2*n1*n4 + 
     3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 3*d^2*n3*n4 - 
     2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 
     2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 2*d*n3*n4^2 + 
     178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 53*d*n1*n7 + 
     11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 28*d*n3*n7 - 
     14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 4*n1*n3^2*n7 - 
     4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 63*n1*n4*n7 - 
     29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 6*d*n3*n4*n7 + 
     2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 4*n1*n4^2*n7 - 
     4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 20*n1*n7^2 - 
     6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 12*n3^2*n7^2 + 
     82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 
     4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   (n4*(-14 + 25*d - 18*d^2 + 4*d^3 + 10*n1 - 12*d*n1 + 2*d^2*n1 + 2*n1^2 - 
      2*d*n1^2 - 8*n3 + 13*d*n3 - 5*d^2*n3 - 2*n3^2 + 2*d*n3^2 - 27*n4 + 
      33*d*n4 - 9*d^2*n4 - 3*n1*n4 + 3*d*n1*n4 - 4*n3*n4 + 4*d*n3*n4 - 
      2*n4^2 + 2*d*n4^2 - 20*n7 + 39*d*n7 - 13*d^2*n7 + 20*n1*n7 - 
      4*d*n1*n7 + 4*n1^2*n7 - 20*n3*n7 + 14*d*n3*n7 - 4*n3^2*n7 - 50*n4*n7 + 
      22*d*n4*n7 - 6*n1*n4*n7 - 8*n3*n4*n7 - 4*n4^2*n7 - 18*n7^2 + 
      12*d*n7^2 - 8*n3*n7^2 - 8*n4*n7^2 - 4*n7^3)*j[p4a, 1 + n1, -1, -1 + n3, 
      1 + n4, 0, 1, n7, 0, 0, 1, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 
     36*d^3 + 4*d^4 + 22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 
     3*d*n1^2 + d^2*n1^2 + 20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - 
     d^2*n1*n3 - 20*n3^2 + 24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 
     4*n3^3 + 2*d*n3^3 + 76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 
     39*d*n1*n4 + 11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 
     13*d*n3*n4 - 3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 
     4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 
     4*n3*n4^2 + 2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 
     54*n1*n7 - 53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 
     4*n3*n7 + 28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 
     20*d*n3^2*n7 - 4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 
     32*d^2*n4*n7 + 63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 
     10*n3*n4*n7 + 6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 
     6*d*n4^2*n7 + 4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 
     16*d^2*n7^2 + 20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 
     8*n1*n3*n7^2 - 12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 
     14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 
     8*n4*n7^3) + ((18 - 5*d - d^2 + 18*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 
      18*n3 + 4*d*n3 + 2*d^2*n3 - 10*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 6*n3^2 - 
      5*d*n3^2 + 2*n3^3 - 11*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 11*n3*n4 - 
      7*d*n3*n4 + 3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 16*n7 + 
      11*d*n7 - d^2*n7 + 4*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + 
      d*n4*n7 + 4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, -1, n3, 
      -1 + n4, 0, 0, n7, 1, 0, 1, 1, 0, 1, 2])/(56 - 140*d + 112*d^2 - 
     36*d^3 + 4*d^4 + 22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 
     3*d*n1^2 + d^2*n1^2 + 20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - 
     d^2*n1*n3 - 20*n3^2 + 24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 
     4*n3^3 + 2*d*n3^3 + 76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 
     39*d*n1*n4 + 11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 
     13*d*n3*n4 - 3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 
     4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 
     4*n3*n4^2 + 2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 
     54*n1*n7 - 53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 
     4*n3*n7 + 28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 
     20*d*n3^2*n7 - 4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 
     32*d^2*n4*n7 + 63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 
     10*n3*n4*n7 + 6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 
     6*d*n4^2*n7 + 4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 
     16*d^2*n7^2 + 20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 
     8*n1*n3*n7^2 - 12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 
     14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 
     8*n4*n7^3) + ((18 - 5*d - d^2 + 18*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 
      18*n3 + 4*d*n3 + 2*d^2*n3 - 10*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 6*n3^2 - 
      5*d*n3^2 + 2*n3^3 - 11*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 11*n3*n4 - 
      7*d*n3*n4 + 3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 16*n7 + 
      11*d*n7 - d^2*n7 + 4*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + 
      d*n4*n7 + 4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, -1, n3, 
      -1 + n4, 0, 1, n7, 0, 0, 1, 1, 0, 1, 2])/(56 - 140*d + 112*d^2 - 
     36*d^3 + 4*d^4 + 22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 
     3*d*n1^2 + d^2*n1^2 + 20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - 
     d^2*n1*n3 - 20*n3^2 + 24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 
     4*n3^3 + 2*d*n3^3 + 76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 
     39*d*n1*n4 + 11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 
     13*d*n3*n4 - 3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 
     4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 
     4*n3*n4^2 + 2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 
     54*n1*n7 - 53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 
     4*n3*n7 + 28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 
     20*d*n3^2*n7 - 4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 
     32*d^2*n4*n7 + 63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 
     10*n3*n4*n7 + 6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 
     6*d*n4^2*n7 + 4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 
     16*d^2*n7^2 + 20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 
     8*n1*n3*n7^2 - 12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 
     14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 
     8*n4*n7^3) + ((18 - 5*d - d^2 + 18*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 
      18*n3 + 4*d*n3 + 2*d^2*n3 - 10*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 6*n3^2 - 
      5*d*n3^2 + 2*n3^3 - 11*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 11*n3*n4 - 
      7*d*n3*n4 + 3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 16*n7 + 
      11*d*n7 - d^2*n7 + 4*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + 
      d*n4*n7 + 4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, -1, n3, 
      -1 + n4, 0, 1, n7, 1, 0, 1, 1, 0, 0, 2])/(56 - 140*d + 112*d^2 - 
     36*d^3 + 4*d^4 + 22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 
     3*d*n1^2 + d^2*n1^2 + 20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - 
     d^2*n1*n3 - 20*n3^2 + 24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 
     4*n3^3 + 2*d*n3^3 + 76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 
     39*d*n1*n4 + 11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 
     13*d*n3*n4 - 3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 
     4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 
     4*n3*n4^2 + 2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 
     54*n1*n7 - 53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 
     4*n3*n7 + 28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 
     20*d*n3^2*n7 - 4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 
     32*d^2*n4*n7 + 63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 
     10*n3*n4*n7 + 6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 
     6*d*n4^2*n7 + 4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 
     16*d^2*n7^2 + 20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 
     8*n1*n3*n7^2 - 12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 
     14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 
     8*n4*n7^3) - ((-2 + d - n4)*(-10 + 4*d - 2*n1 - 2*n3 - n4 - 2*n7)*
     (-4 + 3*d - n1 + d*n1 + 3*n3 - 2*d*n3 - 5*n7 - d*n7 - 2*n1*n7 + 
      4*n3*n7 + 2*n7^2)*j[p4a, 1 + n1, -1, n3, -1 + n4, 0, 1, n7, 1, 0, 1, 1, 
      0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 43*d*n1 + 
     24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 6*d*n3 - 
     8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 24*d*n3^2 - 
     7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 76*n4 - 
     116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 11*d^2*n1*n4 + 
     3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 3*d^2*n3*n4 - 
     2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 
     2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 2*d*n3*n4^2 + 
     178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 53*d*n1*n7 + 
     11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 28*d*n3*n7 - 
     14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 4*n1*n3^2*n7 - 
     4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 63*n1*n4*n7 - 
     29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 6*d*n3*n4*n7 + 
     2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 4*n1*n4^2*n7 - 
     4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 20*n1*n7^2 - 
     6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 12*n3^2*n7^2 + 
     82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 
     4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) - 
   ((-10 + 4*d - 2*n1 - 2*n3 - n4 - 2*n7)*(-4 + 3*d - n1 + d*n1 + 3*n3 - 
      2*d*n3 - 5*n7 - d*n7 - 2*n1*n7 + 4*n3*n7 + 2*n7^2)*
     j[p4a, 1 + n1, -1, n3, -1 + n4, 0, 1, n7, 1, 0, 1, 1, 0, 1, 2])/
    (56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 43*d*n1 + 24*d^2*n1 - 
     4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 6*d*n3 - 8*d^2*n3 + 
     3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 24*d*n3^2 - 7*d^2*n3^2 - 
     4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 76*n4 - 116*d*n4 + 
     57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 11*d^2*n1*n4 + 
     3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 3*d^2*n3*n4 - 
     2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 
     2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 2*d*n3*n4^2 + 
     178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 53*d*n1*n7 + 
     11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 28*d*n3*n7 - 
     14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 4*n1*n3^2*n7 - 
     4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 63*n1*n4*n7 - 
     29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 6*d*n3*n4*n7 + 
     2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 4*n1*n4^2*n7 - 
     4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 20*n1*n7^2 - 
     6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 12*n3^2*n7^2 + 
     82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 
     4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) - 
   ((-2 + d - n4)*(-4 + 3*d - n1 + d*n1 + 3*n3 - 2*d*n3 - 5*n7 - d*n7 - 
      2*n1*n7 + 4*n3*n7 + 2*n7^2)*j[p4a, 1 + n1, -1, n3, -1 + n4, 0, 1, n7, 
      2, 0, 1, 0, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) - 
   ((-2 + d - n4)*(-4 + 3*d - n1 + d*n1 + 3*n3 - 2*d*n3 - 5*n7 - d*n7 - 
      2*n1*n7 + 4*n3*n7 + 2*n7^2)*j[p4a, 1 + n1, -1, n3, -1 + n4, 0, 1, n7, 
      2, 0, 1, 1, 0, 0, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   (2*(-2 + d - n4)*(-4 + 3*d - n1 + d*n1 + 3*n3 - 2*d*n3 - 5*n7 - d*n7 - 
      2*n1*n7 + 4*n3*n7 + 2*n7^2)*j[p4a, 1 + n1, -1, n3, -1 + n4, 0, 1, n7, 
      2, 0, 1, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) - 
   ((-2 + d - n4)*n7*(4 - 3*d + n1 - d*n1 - 3*n3 + 2*d*n3 + 5*n7 + d*n7 + 
      2*n1*n7 - 4*n3*n7 - 2*n7^2)*j[p4a, 1 + n1, -1, n3, -1 + n4, 0, 1, 
      1 + n7, 0, 0, 1, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 
     22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 
     20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) - 
   ((-2 + d - n4)*n7*(4 - 3*d + n1 - d*n1 - 3*n3 + 2*d*n3 + 5*n7 + d*n7 + 
      2*n1*n7 - 4*n3*n7 - 2*n7^2)*j[p4a, 1 + n1, -1, n3, -1 + n4, 0, 1, 
      1 + n7, 1, 0, 0, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 
     22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 
     20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((-2 + d - n4)*n7*(4 - 3*d + n1 - d*n1 - 3*n3 + 2*d*n3 + 5*n7 + d*n7 + 
      2*n1*n7 - 4*n3*n7 - 2*n7^2)*j[p4a, 1 + n1, -1, n3, -1 + n4, 0, 1, 
      1 + n7, 1, 0, 1, 0, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 
     22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 
     20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) - 
   ((-2 + d - n4)*n7*(4 - 3*d + n1 - d*n1 - 3*n3 + 2*d*n3 + 5*n7 + d*n7 + 
      2*n1*n7 - 4*n3*n7 - 2*n7^2)*j[p4a, 1 + n1, -1, n3, -1 + n4, 0, 1, 
      1 + n7, 1, 0, 1, 1, 0, 0, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 
     22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 
     20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((-18 + 5*d + d^2 - 18*n1 + 8*d*n1 - d^2*n1 - 2*n1^2 + 18*n3 - 4*d*n3 - 
      2*d^2*n3 + 10*n1*n3 - 2*d*n1*n3 + 2*n1^2*n3 - 6*n3^2 + 5*d*n3^2 - 
      2*n3^3 + 11*n4 - 6*d*n4 - n1*n4 + d*n1*n4 - 11*n3*n4 + 7*d*n3*n4 - 
      3*n1*n3*n4 - 4*n3^2*n4 + 2*n4^2 - 2*n3*n4^2 + 16*n7 - 11*d*n7 + 
      d^2*n7 - 4*n3*n7 + 5*d*n3*n7 - 4*n3^2*n7 + 8*n4*n7 - d*n4*n7 - 
      4*n3*n4*n7 + 2*n7^2 - 2*n3*n7^2)*j[p4a, 1 + n1, -1, n3, -1 + n4, 0, 2, 
      -1 + n7, 1, 0, 1, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 
     22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 
     20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((-22 + 41*d - 13*d^2 + 12*d*n1 - 3*d^2*n1 + 2*d*n1^2 + 4*n3 - 22*d*n3 + 
      10*d^2*n3 - 6*n1*n3 - 2*n1^2*n3 + 12*n3^2 - 9*d*n3^2 + 2*n3^3 - 15*n4 + 
      9*d*n4 + 14*n3*n4 - 9*d*n3*n4 + 3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 
      2*n3*n4^2 - 74*n7 + 27*d*n7 + 3*d^2*n7 - 32*n1*n7 + 8*d*n1*n7 - 
      4*n1^2*n7 + 40*n3*n7 - 27*d*n3*n7 + 4*n1*n3*n7 + 12*n3^2*n7 - 
      13*n4*n7 - 2*n1*n4*n7 + 8*n3*n4*n7 + 8*n7^2 - 10*d*n7^2 + 14*n3*n7^2 + 
      2*n4*n7^2 + 4*n7^3)*j[p4a, 1 + n1, -1, n3, -1 + n4, 0, 2, n7, 1, 0, 0, 
      1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 43*d*n1 + 
     24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 6*d*n3 - 
     8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 24*d*n3^2 - 
     7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 76*n4 - 
     116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 11*d^2*n1*n4 + 
     3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 3*d^2*n3*n4 - 
     2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 
     2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 2*d*n3*n4^2 + 
     178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 53*d*n1*n7 + 
     11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 28*d*n3*n7 - 
     14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 4*n1*n3^2*n7 - 
     4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 63*n1*n4*n7 - 
     29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 6*d*n3*n4*n7 + 
     2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 4*n1*n4^2*n7 - 
     4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 20*n1*n7^2 - 
     6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 12*n3^2*n7^2 + 
     82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 
     4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((-18 + 5*d + d^2 - 18*n1 + 8*d*n1 - d^2*n1 - 2*n1^2 + 18*n3 - 4*d*n3 - 
      2*d^2*n3 + 10*n1*n3 - 2*d*n1*n3 + 2*n1^2*n3 - 6*n3^2 + 5*d*n3^2 - 
      2*n3^3 + 11*n4 - 6*d*n4 - n1*n4 + d*n1*n4 - 11*n3*n4 + 7*d*n3*n4 - 
      3*n1*n3*n4 - 4*n3^2*n4 + 2*n4^2 - 2*n3*n4^2 + 16*n7 - 11*d*n7 + 
      d^2*n7 - 4*n3*n7 + 5*d*n3*n7 - 4*n3^2*n7 + 8*n4*n7 - d*n4*n7 - 
      4*n3*n4*n7 + 2*n7^2 - 2*n3*n7^2)*j[p4a, 1 + n1, -1, n3, n4, -1, 0, n7, 
      1, 0, 1, 1, 0, 1, 2])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((-18 + 5*d + d^2 - 18*n1 + 8*d*n1 - d^2*n1 - 2*n1^2 + 18*n3 - 4*d*n3 - 
      2*d^2*n3 + 10*n1*n3 - 2*d*n1*n3 + 2*n1^2*n3 - 6*n3^2 + 5*d*n3^2 - 
      2*n3^3 + 11*n4 - 6*d*n4 - n1*n4 + d*n1*n4 - 11*n3*n4 + 7*d*n3*n4 - 
      3*n1*n3*n4 - 4*n3^2*n4 + 2*n4^2 - 2*n3*n4^2 + 16*n7 - 11*d*n7 + 
      d^2*n7 - 4*n3*n7 + 5*d*n3*n7 - 4*n3^2*n7 + 8*n4*n7 - d*n4*n7 - 
      4*n3*n4*n7 + 2*n7^2 - 2*n3*n7^2)*j[p4a, 1 + n1, -1, n3, n4, -1, 1, n7, 
      0, 0, 1, 1, 0, 1, 2])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((-18 + 5*d + d^2 - 18*n1 + 8*d*n1 - d^2*n1 - 2*n1^2 + 18*n3 - 4*d*n3 - 
      2*d^2*n3 + 10*n1*n3 - 2*d*n1*n3 + 2*n1^2*n3 - 6*n3^2 + 5*d*n3^2 - 
      2*n3^3 + 11*n4 - 6*d*n4 - n1*n4 + d*n1*n4 - 11*n3*n4 + 7*d*n3*n4 - 
      3*n1*n3*n4 - 4*n3^2*n4 + 2*n4^2 - 2*n3*n4^2 + 16*n7 - 11*d*n7 + 
      d^2*n7 - 4*n3*n7 + 5*d*n3*n7 - 4*n3^2*n7 + 8*n4*n7 - d*n4*n7 - 
      4*n3*n4*n7 + 2*n7^2 - 2*n3*n7^2)*j[p4a, 1 + n1, -1, n3, n4, -1, 1, n7, 
      1, 0, 1, 1, 0, 0, 2])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((-2 + d - n4)*n7*(4 - 3*d + n1 - d*n1 - 3*n3 + 2*d*n3 + 5*n7 + d*n7 + 
      2*n1*n7 - 4*n3*n7 - 2*n7^2)*j[p4a, 1 + n1, -1, n3, n4, -1, 1, 1 + n7, 
      0, 0, 1, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((-2 + d - n4)*n7*(4 - 3*d + n1 - d*n1 - 3*n3 + 2*d*n3 + 5*n7 + d*n7 + 
      2*n1*n7 - 4*n3*n7 - 2*n7^2)*j[p4a, 1 + n1, -1, n3, n4, -1, 1, 1 + n7, 
      1, 0, 0, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) - 
   ((-2 + d - n4)*n7*(4 - 3*d + n1 - d*n1 - 3*n3 + 2*d*n3 + 5*n7 + d*n7 + 
      2*n1*n7 - 4*n3*n7 - 2*n7^2)*j[p4a, 1 + n1, -1, n3, n4, -1, 1, 1 + n7, 
      1, 0, 1, 0, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((-2 + d - n4)*n7*(4 - 3*d + n1 - d*n1 - 3*n3 + 2*d*n3 + 5*n7 + d*n7 + 
      2*n1*n7 - 4*n3*n7 - 2*n7^2)*j[p4a, 1 + n1, -1, n3, n4, -1, 1, 1 + n7, 
      1, 0, 1, 1, 0, 0, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((18 - 5*d - d^2 + 18*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 18*n3 + 4*d*n3 + 
      2*d^2*n3 - 10*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 6*n3^2 - 5*d*n3^2 + 
      2*n3^3 - 11*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 11*n3*n4 - 7*d*n3*n4 + 
      3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 16*n7 + 11*d*n7 - 
      d^2*n7 + 4*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + d*n4*n7 + 
      4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, -1, n3, n4, -1, 2, 
      -1 + n7, 1, 0, 1, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 
     22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 
     20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((-18 + 5*d + d^2 - 18*n1 + 8*d*n1 - d^2*n1 - 2*n1^2 + 18*n3 - 4*d*n3 - 
      2*d^2*n3 + 10*n1*n3 - 2*d*n1*n3 + 2*n1^2*n3 - 6*n3^2 + 5*d*n3^2 - 
      2*n3^3 + 11*n4 - 6*d*n4 - n1*n4 + d*n1*n4 - 11*n3*n4 + 7*d*n3*n4 - 
      3*n1*n3*n4 - 4*n3^2*n4 + 2*n4^2 - 2*n3*n4^2 + 16*n7 - 11*d*n7 + 
      d^2*n7 - 4*n3*n7 + 5*d*n3*n7 - 4*n3^2*n7 + 8*n4*n7 - d*n4*n7 - 
      4*n3*n4*n7 + 2*n7^2 - 2*n3*n7^2)*j[p4a, 1 + n1, -1, n3, n4, -1, 2, n7, 
      1, 0, 0, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) - 
   ((-2 + d - n4)*(-4 + 3*d - n1 + d*n1 + 3*n3 - 2*d*n3 - 5*n7 - d*n7 - 
      2*n1*n7 + 4*n3*n7 + 2*n7^2)*j[p4a, 1 + n1, -1, n3, n4, 0, 0, -1 + n7, 
      1, 0, 2, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((-24 + 30*d - 9*d^2 - 6*n1 + 9*d*n1 - 3*d^2*n1 + 18*n3 - 21*d*n3 + 
      6*d^2*n3 + 6*n4 + 4*d*n4 - d^2*n4 + 15*n1*n4 - 5*d*n1*n4 + d^2*n1*n4 + 
      2*n1^2*n4 - 9*n3*n4 - 2*d*n3*n4 + 2*d^2*n3*n4 - 10*n1*n3*n4 + 
      2*d*n1*n3*n4 - 2*n1^2*n3*n4 + 6*n3^2*n4 - 5*d*n3^2*n4 + 2*n3^3*n4 - 
      11*n4^2 + 6*d*n4^2 + n1*n4^2 - d*n1*n4^2 + 11*n3*n4^2 - 7*d*n3*n4^2 + 
      3*n1*n3*n4^2 + 4*n3^2*n4^2 - 2*n4^3 + 2*n3*n4^3 - 30*n7 + 9*d*n7 + 
      3*d^2*n7 - 12*n1*n7 + 6*d*n1*n7 + 24*n3*n7 - 12*d*n3*n7 - 31*n4*n7 + 
      8*d*n4*n7 - d^2*n4*n7 - 6*n1*n4*n7 + 16*n3*n4*n7 - 5*d*n3*n4*n7 + 
      4*n3^2*n4*n7 - 8*n4^2*n7 + d*n4^2*n7 + 4*n3*n4^2*n7 + 12*n7^2 - 
      6*d*n7^2 + 4*n4*n7^2 + 2*n3*n4*n7^2)*j[p4a, 1 + n1, -1, n3, n4, 0, 0, 
      n7, 1, 0, 1, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 
     22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 
     20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((-2 + d - n4)*(-4 + 3*d - n1 + d*n1 + 3*n3 - 2*d*n3 - 5*n7 - d*n7 - 
      2*n1*n7 + 4*n3*n7 + 2*n7^2)*j[p4a, 1 + n1, -1, n3, n4, 0, 0, n7, 1, 0, 
      1, 2, -1, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) - 
   ((-2 + d - n4)*(-4 + 3*d - n1 + d*n1 + 3*n3 - 2*d*n3 - 5*n7 - d*n7 - 
      2*n1*n7 + 4*n3*n7 + 2*n7^2)*j[p4a, 1 + n1, -1, n3, n4, 0, 0, n7, 1, 0, 
      1, 2, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((-2 + d - n4)*(-4 + 3*d - n1 + d*n1 + 3*n3 - 2*d*n3 - 5*n7 - d*n7 - 
      2*n1*n7 + 4*n3*n7 + 2*n7^2)*j[p4a, 1 + n1, -1, n3, n4, 0, 0, n7, 1, 0, 
      2, 1, -1, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) - 
   ((-2 + d - n4)*(-4 + 3*d - n1 + d*n1 + 3*n3 - 2*d*n3 - 5*n7 - d*n7 - 
      2*n1*n7 + 4*n3*n7 + 2*n7^2)*j[p4a, 1 + n1, -1, n3, n4, 0, 0, n7, 1, 0, 
      2, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((-2 + d - n4)*(-4 + 3*d - n1 + d*n1 + 3*n3 - 2*d*n3 - 5*n7 - d*n7 - 
      2*n1*n7 + 4*n3*n7 + 2*n7^2)*j[p4a, 1 + n1, -1, n3, n4, 0, 0, n7, 2, 0, 
      1, 1, -1, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) - 
   (2*(-2 + d - n4)*(-4 + 3*d - n1 + d*n1 + 3*n3 - 2*d*n3 - 5*n7 - d*n7 - 
      2*n1*n7 + 4*n3*n7 + 2*n7^2)*j[p4a, 1 + n1, -1, n3, n4, 0, 0, n7, 2, 0, 
      1, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((-18 + 5*d + d^2 - 18*n1 + 8*d*n1 - d^2*n1 - 2*n1^2 + 18*n3 - 4*d*n3 - 
      2*d^2*n3 + 10*n1*n3 - 2*d*n1*n3 + 2*n1^2*n3 - 6*n3^2 + 5*d*n3^2 - 
      2*n3^3 + 11*n4 - 6*d*n4 - n1*n4 + d*n1*n4 - 11*n3*n4 + 7*d*n3*n4 - 
      3*n1*n3*n4 - 4*n3^2*n4 + 2*n4^2 - 2*n3*n4^2 + 16*n7 - 11*d*n7 + 
      d^2*n7 - 4*n3*n7 + 5*d*n3*n7 - 4*n3^2*n7 + 8*n4*n7 - d*n4*n7 - 
      4*n3*n4*n7 + 2*n7^2 - 2*n3*n7^2)*j[p4a, 1 + n1, -1, n3, n4, 0, 1, 
      -2 + n7, 1, 0, 2, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 
     22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 
     20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((-72 + 76*d - 29*d^2 + 4*d^3 - 26*n1 + 16*d*n1 - 3*d^2*n1 - 2*n1^2 + 
      32*n3 - 17*d*n3 + d^2*n3 + 14*n1*n3 - 4*d*n1*n3 + 2*n1^2*n3 - 2*n3^2 + 
      3*d*n3^2 - 2*n3^3 - 20*n4 + 30*d*n4 - 9*d^2*n4 - 5*n1*n4 + 5*d*n1*n4 - 
      12*n3*n4 + 9*d*n3*n4 - 3*n1*n3*n4 - 4*n3^2*n4 + 2*d*n4^2 - 2*n3*n4^2 - 
      62*n7 + 44*d*n7 - 8*d^2*n7 - 12*n1*n7 + 4*d*n1*n7 + 12*n3*n7 - 
      3*d*n3*n7 + 4*n1*n3*n7 - 47*n4*n7 + 20*d*n4*n7 - 8*n1*n4*n7 - 
      8*n3*n4*n7 - 4*n4^2*n7 - 6*n7^2 + 2*d*n7^2 + 2*n3*n7^2 - 6*n4*n7^2)*
     j[p4a, 1 + n1, -1, n3, n4, 0, 1, -1 + n7, 0, 0, 1, 2, 0, 1, 1])/
    (56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 43*d*n1 + 24*d^2*n1 - 
     4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 6*d*n3 - 8*d^2*n3 + 
     3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 24*d*n3^2 - 7*d^2*n3^2 - 
     4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 76*n4 - 116*d*n4 + 
     57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 11*d^2*n1*n4 + 
     3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 3*d^2*n3*n4 - 
     2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 
     2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 2*d*n3*n4^2 + 
     178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 53*d*n1*n7 + 
     11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 28*d*n3*n7 - 
     14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 4*n1*n3^2*n7 - 
     4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 63*n1*n4*n7 - 
     29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 6*d*n3*n4*n7 + 
     2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 4*n1*n4^2*n7 - 
     4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 20*n1*n7^2 - 
     6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 12*n3^2*n7^2 + 
     82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 
     4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((-18 + 5*d + d^2 - 18*n1 + 8*d*n1 - d^2*n1 - 2*n1^2 + 18*n3 - 4*d*n3 - 
      2*d^2*n3 + 10*n1*n3 - 2*d*n1*n3 + 2*n1^2*n3 - 6*n3^2 + 5*d*n3^2 - 
      2*n3^3 + 11*n4 - 6*d*n4 - n1*n4 + d*n1*n4 - 11*n3*n4 + 7*d*n3*n4 - 
      3*n1*n3*n4 - 4*n3^2*n4 + 2*n4^2 - 2*n3*n4^2 + 16*n7 - 11*d*n7 + 
      d^2*n7 - 4*n3*n7 + 5*d*n3*n7 - 4*n3^2*n7 + 8*n4*n7 - d*n4*n7 - 
      4*n3*n4*n7 + 2*n7^2 - 2*n3*n7^2)*j[p4a, 1 + n1, -1, n3, n4, 0, 1, 
      -1 + n7, 0, 0, 2, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 
     22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 
     20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((-18 + 5*d + d^2 - 18*n1 + 8*d*n1 - d^2*n1 - 2*n1^2 + 18*n3 - 4*d*n3 - 
      2*d^2*n3 + 10*n1*n3 - 2*d*n1*n3 + 2*n1^2*n3 - 6*n3^2 + 5*d*n3^2 - 
      2*n3^3 + 11*n4 - 6*d*n4 - n1*n4 + d*n1*n4 - 11*n3*n4 + 7*d*n3*n4 - 
      3*n1*n3*n4 - 4*n3^2*n4 + 2*n4^2 - 2*n3*n4^2 + 16*n7 - 11*d*n7 + 
      d^2*n7 - 4*n3*n7 + 5*d*n3*n7 - 4*n3^2*n7 + 8*n4*n7 - d*n4*n7 - 
      4*n3*n4*n7 + 2*n7^2 - 2*n3*n7^2)*j[p4a, 1 + n1, -1, n3, n4, 0, 1, 
      -1 + n7, 1, 0, 1, 1, 0, 0, 2])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 
     22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 
     20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((126 - 201*d + 130*d^2 - 38*d^3 + 4*d^4 + 88*n1 - 103*d*n1 + 43*d^2*n1 - 
      6*d^3*n1 + 10*n1^2 - 8*d*n1^2 + 2*d^2*n1^2 - 28*n3 + 39*d*n3 - 
      18*d^2*n3 + 3*d^3*n3 - 14*n1*n3 + 15*d*n1*n3 - 4*d^2*n1*n3 - 
      4*n1^2*n3 + 2*d*n1^2*n3 - 20*n3^2 + 7*d*n3^2 - 14*n1*n3^2 + 
      4*d*n1*n3^2 - 2*n1^2*n3^2 + 8*n3^3 - 5*d*n3^3 + 2*n3^4 + 15*n4 - 
      87*d*n4 + 56*d^2*n4 - 9*d^3*n4 + 4*n1*n4 - 33*d*n1*n4 + 11*d^2*n1*n4 - 
      4*d*n1^2*n4 + 38*n3*n4 - 14*d*n3*n4 - 2*d^2*n3*n4 + 25*n1*n3*n4 - 
      7*d*n1*n3*n4 + 4*n1^2*n3*n4 + 3*n3^2*n4 + 3*d*n3^2*n4 + 3*n1*n3^2*n4 + 
      24*n4^2 - 18*d*n4^2 + 2*d^2*n4^2 - 22*n3*n4^2 + 14*d*n3*n4^2 - 
      6*n1*n3*n4^2 - 6*n3^2*n4^2 + 4*n4^3 - 4*n3*n4^3 + 194*n7 - 248*d*n7 + 
      102*d^2*n7 - 13*d^3*n7 + 110*n1*n7 - 83*d*n1*n7 + 15*d^2*n1*n7 + 
      12*n1^2*n7 - 4*d*n1^2*n7 - 58*n3*n7 + 51*d*n3*n7 - 12*d^2*n3*n7 - 
      28*n1*n3*n7 + 14*d*n1*n3*n7 - 4*n1^2*n3*n7 - 4*n3^2*n7 + d*n3^2*n7 - 
      4*n1*n3^2*n7 + 4*n3^3*n7 + 165*n4*n7 - 154*d*n4*n7 + 32*d^2*n4*n7 + 
      75*n1*n4*n7 - 33*d*n1*n4*n7 + 8*n1^2*n4*n7 - 3*n3*n4*n7 + 
      5*d*n3*n4*n7 + 4*n1*n3*n4*n7 - 4*n3^2*n4*n7 + 26*n4^2*n7 - 
      8*d*n4^2*n7 + 4*n1*n4^2*n7 - 8*n3*n4^2*n7 + 92*n7^2 - 67*d*n7^2 + 
      11*d^2*n7^2 + 20*n1*n7^2 - 6*d*n1*n7^2 - 24*n3*n7^2 + 12*d*n3*n7^2 - 
      8*n1*n3*n7^2 - 2*n3^2*n7^2 + 71*n4*n7^2 - 27*d*n4*n7^2 + 
      14*n1*n4*n7^2 + 4*n4^2*n7^2 + 8*n7^3 - 2*d*n7^3 - 4*n3*n7^3 + 
      6*n4*n7^3)*j[p4a, 1 + n1, -1, n3, n4, 0, 1, -1 + n7, 1, 0, 1, 1, 0, 1, 
      1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 43*d*n1 + 
     24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 6*d*n3 - 
     8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 24*d*n3^2 - 
     7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 76*n4 - 
     116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 11*d^2*n1*n4 + 
     3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 3*d^2*n3*n4 - 
     2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 
     2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 2*d*n3*n4^2 + 
     178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 53*d*n1*n7 + 
     11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 28*d*n3*n7 - 
     14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 4*n1*n3^2*n7 - 
     4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 63*n1*n4*n7 - 
     29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 6*d*n3*n4*n7 + 
     2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 4*n1*n4^2*n7 - 
     4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 20*n1*n7^2 - 
     6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 12*n3^2*n7^2 + 
     82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 
     4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((-46 + 61*d - 27*d^2 + 4*d^3 - 6*n1 + 5*d*n1 - d^2*n1 + 8*n3 - 6*d*n3 + 
      d^2*n3 + 4*n1*n3 - 2*d*n1*n3 + 4*n3^2 - 2*d*n3^2 - 27*n4 + 33*d*n4 - 
      9*d^2*n4 - 3*n1*n4 + 3*d*n1*n4 - 4*n3*n4 + 4*d*n3*n4 - 2*n4^2 + 
      2*d*n4^2 - 68*n7 + 52*d*n7 - 10*d^2*n7 - 8*n1*n7 + 2*d*n1*n7 + 
      8*n3*n7 - 4*d*n3*n7 + 4*n1*n3*n7 + 4*n3^2*n7 - 50*n4*n7 + 22*d*n4*n7 - 
      6*n1*n4*n7 - 8*n3*n4*n7 - 4*n4^2*n7 - 12*n7^2 + 4*d*n7^2 + 4*n3*n7^2 - 
      8*n4*n7^2)*j[p4a, 1 + n1, -1, n3, n4, 0, 1, -1 + n7, 1, 0, 1, 1, 0, 2, 
      1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 43*d*n1 + 
     24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 6*d*n3 - 
     8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 24*d*n3^2 - 
     7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 76*n4 - 
     116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 11*d^2*n1*n4 + 
     3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 3*d^2*n3*n4 - 
     2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 
     2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 2*d*n3*n4^2 + 
     178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 53*d*n1*n7 + 
     11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 28*d*n3*n7 - 
     14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 4*n1*n3^2*n7 - 
     4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 63*n1*n4*n7 - 
     29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 6*d*n3*n4*n7 + 
     2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 4*n1*n4^2*n7 - 
     4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 20*n1*n7^2 - 
     6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 12*n3^2*n7^2 + 
     82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 
     4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((-2 + d - n4)*(-4 + 3*d - n1 + d*n1 + 3*n3 - 2*d*n3 - 5*n7 - d*n7 - 
      2*n1*n7 + 4*n3*n7 + 2*n7^2)*j[p4a, 1 + n1, -1, n3, n4, 0, 1, -1 + n7, 
      1, 0, 1, 2, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((-18 + 5*d + d^2 - 18*n1 + 8*d*n1 - d^2*n1 - 2*n1^2 + 18*n3 - 4*d*n3 - 
      2*d^2*n3 + 10*n1*n3 - 2*d*n1*n3 + 2*n1^2*n3 - 6*n3^2 + 5*d*n3^2 - 
      2*n3^3 + 11*n4 - 6*d*n4 - n1*n4 + d*n1*n4 - 11*n3*n4 + 7*d*n3*n4 - 
      3*n1*n3*n4 - 4*n3^2*n4 + 2*n4^2 - 2*n3*n4^2 + 16*n7 - 11*d*n7 + 
      d^2*n7 - 4*n3*n7 + 5*d*n3*n7 - 4*n3^2*n7 + 8*n4*n7 - d*n4*n7 - 
      4*n3*n4*n7 + 2*n7^2 - 2*n3*n7^2)*j[p4a, 1 + n1, -1, n3, n4, 0, 1, 
      -1 + n7, 1, 0, 2, 1, 0, 0, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 
     22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 
     20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((-18 + 5*d + d^2 - 18*n1 + 8*d*n1 - d^2*n1 - 2*n1^2 + 18*n3 - 4*d*n3 - 
      2*d^2*n3 + 10*n1*n3 - 2*d*n1*n3 + 2*n1^2*n3 - 6*n3^2 + 5*d*n3^2 - 
      2*n3^3 + 11*n4 - 6*d*n4 - n1*n4 + d*n1*n4 - 11*n3*n4 + 7*d*n3*n4 - 
      3*n1*n3*n4 - 4*n3^2*n4 + 2*n4^2 - 2*n3*n4^2 + 16*n7 - 11*d*n7 + 
      d^2*n7 - 4*n3*n7 + 5*d*n3*n7 - 4*n3^2*n7 + 8*n4*n7 - d*n4*n7 - 
      4*n3*n4*n7 + 2*n7^2 - 2*n3*n7^2)*j[p4a, 1 + n1, -1, n3, n4, 0, 1, 
      -1 + n7, 2, 0, 1, 0, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 
     22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 
     20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) - 
   ((-2 + d - n4)*(-4 + 3*d - n1 + d*n1 + 3*n3 - 2*d*n3 - 5*n7 - d*n7 - 
      2*n1*n7 + 4*n3*n7 + 2*n7^2)*j[p4a, 1 + n1, -1, n3, n4, 0, 1, n7, 0, -1, 
      2, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((126 - 137*d + 64*d^2 - 12*d^3 + 80*n1 - 69*d*n1 + 27*d^2*n1 - 4*d^3*n1 + 
      8*n1^2 - 3*d*n1^2 + d^2*n1^2 - 118*n3 + 94*d*n3 - 36*d^2*n3 + 
      8*d^3*n3 - 52*n1*n3 + 18*d*n1*n3 - 2*d^2*n1*n3 - 8*n1^2*n3 + 30*n3^2 - 
      12*d*n3^2 - 4*d^2*n3^2 + 10*n1*n3^2 - 2*d*n1*n3^2 + 2*n1^2*n3^2 + 
      5*d*n3^3 - 2*n3^4 + 19*n4 - 45*d*n4 + 18*d^2*n4 + 20*n1*n4 - 
      25*d*n1*n4 + 6*d^2*n1*n4 + n1^2*n4 - d*n1^2*n4 + 9*n3*n4 + 14*d*n3*n4 - 
      12*d^2*n3*n4 + 6*n1*n3*n4 + 2*d*n1*n3*n4 - 2*n3^2*n4 + 9*d*n3^2*n4 - 
      3*n1*n3^2*n4 - 4*n3^3*n4 + 2*n4^2 - 6*d*n4^2 + 2*n1*n4^2 - 
      2*d*n1*n4^2 + 2*n3*n4^2 + 4*d*n3*n4^2 - 2*n3^2*n4^2 + 22*n7 - 44*d*n7 + 
      8*d^2*n7 + 4*d^3*n7 + 14*n1*n7 - 27*d*n1*n7 + 7*d^2*n1*n7 - 
      2*d*n1^2*n7 - 10*n3*n7 + 45*d*n3*n7 - 24*d^2*n3*n7 + 16*n1*n3*n7 - 
      2*d*n1*n3*n7 + 4*n1^2*n3*n7 - 12*n3^2*n7 + 19*d*n3^2*n7 - 8*n3^3*n7 + 
      71*n4*n7 - 32*d*n4*n7 - 6*d^2*n4*n7 + 31*n1*n4*n7 - 11*d*n1*n4*n7 + 
      2*n1^2*n4*n7 - 55*n3*n4*n7 + 42*d*n3*n4*n7 - 8*n1*n3*n4*n7 - 
      16*n3^2*n4*n7 + 14*n4^2*n7 + 2*d*n4^2*n7 + 4*n1*n4^2*n7 - 
      12*n3*n4^2*n7 + 10*n7^2 + 6*d*n7^2 - 8*d^2*n7^2 + 4*n1*n7^2 - 
      2*d*n1*n7^2 - 20*n3*n7^2 + 20*d*n3*n7^2 - 10*n3^2*n7^2 + 12*d*n4*n7^2 + 
      2*n1*n4*n7^2 - 18*n3*n4*n7^2 - 4*n4^2*n7^2 - 4*n7^3 + 4*d*n7^3 - 
      4*n3*n7^3 - 4*n4*n7^3)*j[p4a, 1 + n1, -1, n3, n4, 0, 1, n7, 0, 0, 1, 1, 
      0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 43*d*n1 + 
     24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 6*d*n3 - 
     8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 24*d*n3^2 - 
     7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 76*n4 - 
     116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 11*d^2*n1*n4 + 
     3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 3*d^2*n3*n4 - 
     2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 
     2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 2*d*n3*n4^2 + 
     178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 53*d*n1*n7 + 
     11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 28*d*n3*n7 - 
     14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 4*n1*n3^2*n7 - 
     4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 63*n1*n4*n7 - 
     29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 6*d*n3*n4*n7 + 
     2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 4*n1*n4^2*n7 - 
     4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 20*n1*n7^2 - 
     6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 12*n3^2*n7^2 + 
     82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 
     4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((-2 + d - n4)*(-4 + 3*d - n1 + d*n1 + 3*n3 - 2*d*n3 - 5*n7 - d*n7 - 
      2*n1*n7 + 4*n3*n7 + 2*n7^2)*j[p4a, 1 + n1, -1, n3, n4, 0, 1, n7, 0, 0, 
      1, 2, -1, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) - 
   ((-2 + d - n4)*(-4 + 3*d - n1 + d*n1 + 3*n3 - 2*d*n3 - 5*n7 - d*n7 - 
      2*n1*n7 + 4*n3*n7 + 2*n7^2)*j[p4a, 1 + n1, -1, n3, n4, 0, 1, n7, 0, 0, 
      1, 2, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((18 - 5*d - d^2 + 18*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 18*n3 + 4*d*n3 + 
      2*d^2*n3 - 10*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 6*n3^2 - 5*d*n3^2 + 
      2*n3^3 - 11*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 11*n3*n4 - 7*d*n3*n4 + 
      3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 16*n7 + 11*d*n7 - 
      d^2*n7 + 4*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + d*n4*n7 + 
      4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, -1, n3, n4, 0, 1, n7, 
      1, -1, 1, 1, 0, 0, 2])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) - 
   ((-2 + d - n4)*(-4 + 3*d - n1 + d*n1 + 3*n3 - 2*d*n3 - 5*n7 - d*n7 - 
      2*n1*n7 + 4*n3*n7 + 2*n7^2)*j[p4a, 1 + n1, -1, n3, n4, 0, 1, n7, 1, -1, 
      2, 1, 0, 0, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((6 - 77*d + 40*d^2 - 4*d^3 - 4*n1 - 51*d*n1 + 27*d^2*n1 - 4*d^3*n1 - 
      7*d*n1^2 + d^2*n1^2 + 26*n3 + 50*d*n3 - 28*d^2*n3 + 24*n1*n3 + 
      14*d*n1*n3 - 4*d^2*n1*n3 + 4*n1^2*n3 + 4*d*n1^2*n3 - 30*n3^2 + 
      4*d*n3^2 + 10*d^2*n3^2 - 10*n1*n3^2 + 2*d*n1*n3^2 - 2*n1^2*n3^2 + 
      4*n3^3 - 9*d*n3^3 + 2*n3^4 + 57*n4 - 26*d*n4 - d^2*n4 + 28*n1*n4 - 
      23*d*n1*n4 + 7*d^2*n1*n4 + 3*n1^2*n4 - d*n1^2*n4 - 57*n3*n4 + 
      18*d*n3*n4 + 8*d^2*n3*n4 - 14*n1*n3*n4 - 4*d*n1*n3*n4 - 2*n1^2*n3*n4 + 
      10*n3^2*n4 - 18*d*n3^2*n4 + 3*n1*n3^2*n4 + 6*n3^3*n4 - n4^2 + 
      4*d*n4^2 + 3*n1*n4^2 - 3*d*n1*n4^2 + n3*n4^2 - 7*d*n3*n4^2 + 
      3*n1*n3*n4^2 + 6*n3^2*n4^2 - 2*n4^3 + 2*n3*n4^3 + 152*n7 - 53*d*n7 - 
      17*d^2*n7 + 4*d^3*n7 + 116*n1*n7 - 63*d*n1*n7 + 10*d^2*n1*n7 + 
      14*n1^2*n7 - 2*d*n1^2*n7 - 136*n3*n7 + 67*d*n3*n7 + 6*d^2*n3*n7 - 
      54*n1*n3*n7 + 12*d*n1*n3*n7 - 10*n1^2*n3*n7 + 22*n3^2*n7 - 
      34*d*n3^2*n7 + 14*n3^3*n7 - 20*n4*n7 + 37*d*n4*n7 - 7*d^2*n4*n7 + 
      26*n1*n4*n7 - 14*d*n1*n4*n7 + 2*n1^2*n4*n7 + 18*n3*n4*n7 - 
      26*d*n3*n4*n7 + 13*n1*n3*n4*n7 + 24*n3^2*n4*n7 - 8*n4^2*n7 + 
      3*d*n4^2*n7 + 4*n1*n4^2*n7 + 6*n3*n4^2*n7 - 70*n7^2 + 67*d*n7^2 - 
      11*d^2*n7^2 + 4*n1*n7^2 - 2*d*n1*n7^2 - 4*n3*n7^2 - 19*d*n3*n7^2 + 
      22*n3^2*n7^2 - 46*n4*n7^2 + 15*d*n4*n7^2 + 2*n1*n4*n7^2 + 
      12*n3*n4*n7^2 - 4*n4^2*n7^2 - 18*n7^3 + 4*d*n7^3 + 10*n3*n7^3 - 
      4*n4*n7^3)*j[p4a, 1 + n1, -1, n3, n4, 0, 1, n7, 1, 0, 0, 1, 0, 1, 1])/
    (56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 43*d*n1 + 24*d^2*n1 - 
     4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 6*d*n3 - 8*d^2*n3 + 
     3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 24*d*n3^2 - 7*d^2*n3^2 - 
     4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 76*n4 - 116*d*n4 + 
     57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 11*d^2*n1*n4 + 
     3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 3*d^2*n3*n4 - 
     2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 
     2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 2*d*n3*n4^2 + 
     178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 53*d*n1*n7 + 
     11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 28*d*n3*n7 - 
     14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 4*n1*n3^2*n7 - 
     4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 63*n1*n4*n7 - 
     29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 6*d*n3*n4*n7 + 
     2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 4*n1*n4^2*n7 - 
     4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 20*n1*n7^2 - 
     6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 12*n3^2*n7^2 + 
     82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 
     4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((-2 + d - n4)*(-4 + 3*d - n1 + d*n1 + 3*n3 - 2*d*n3 - 5*n7 - d*n7 - 
      2*n1*n7 + 4*n3*n7 + 2*n7^2)*j[p4a, 1 + n1, -1, n3, n4, 0, 1, n7, 1, 0, 
      0, 2, -1, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) - 
   (2*(-2 + d - n4)*(-4 + 3*d - n1 + d*n1 + 3*n3 - 2*d*n3 - 5*n7 - d*n7 - 
      2*n1*n7 + 4*n3*n7 + 2*n7^2)*j[p4a, 1 + n1, -1, n3, n4, 0, 1, n7, 1, 0, 
      0, 2, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((-42 + 87*d - 38*d^2 + 4*d^3 - 32*n1 + 67*d*n1 - 29*d^2*n1 + 4*d^3*n1 - 
      4*n1^2 + 7*d*n1^2 - d^2*n1^2 + 10*n3 - 58*d*n3 + 24*d^2*n3 - 4*n1*n3 - 
      18*d*n1*n3 + 4*d^2*n1*n3 - 4*d*n1^2*n3 + 18*n3^2 + 6*d*n3^2 - 
      10*d^2*n3^2 + 10*n1*n3^2 - 2*d*n1*n3^2 + 2*n1^2*n3^2 - 8*n3^3 + 
      9*d*n3^3 - 2*n3^4 - 35*n4 + 14*d*n4 + d^2*n4 - 30*n1*n4 + 25*d*n1*n4 - 
      7*d^2*n1*n4 - 3*n1^2*n4 + d*n1^2*n4 + 35*n3*n4 - 4*d*n3*n4 - 
      8*d^2*n3*n4 + 8*n1*n3*n4 + 4*d*n1*n3*n4 + 2*n1^2*n3*n4 - 18*n3^2*n4 + 
      18*d*n3^2*n4 - 3*n1*n3^2*n4 - 6*n3^3*n4 + 5*n4^2 - 4*d*n4^2 - 
      3*n1*n4^2 + 3*d*n1*n4^2 - 5*n3*n4^2 + 7*d*n3*n4^2 - 3*n1*n3*n4^2 - 
      6*n3^2*n4^2 + 2*n4^3 - 2*n3*n4^3 - 120*n7 + 31*d*n7 + 19*d^2*n7 - 
      4*d^3*n7 - 116*n1*n7 + 63*d*n1*n7 - 10*d^2*n1*n7 - 14*n1^2*n7 + 
      2*d*n1^2*n7 + 128*n3*n7 - 57*d*n3*n7 - 6*d^2*n3*n7 + 54*n1*n3*n7 - 
      12*d*n1*n3*n7 + 10*n1^2*n3*n7 - 30*n3^2*n7 + 34*d*n3^2*n7 - 
      14*n3^3*n7 + 36*n4*n7 - 39*d*n4*n7 + 7*d^2*n4*n7 - 26*n1*n4*n7 + 
      14*d*n1*n4*n7 - 2*n1^2*n4*n7 - 26*n3*n4*n7 + 26*d*n3*n4*n7 - 
      13*n1*n3*n4*n7 - 24*n3^2*n4*n7 + 8*n4^2*n7 - 3*d*n4^2*n7 - 
      4*n1*n4^2*n7 - 6*n3*n4^2*n7 + 74*n7^2 - 67*d*n7^2 + 11*d^2*n7^2 - 
      4*n1*n7^2 + 2*d*n1*n7^2 + 19*d*n3*n7^2 - 22*n3^2*n7^2 + 46*n4*n7^2 - 
      15*d*n4*n7^2 - 2*n1*n4*n7^2 - 12*n3*n4*n7^2 + 4*n4^2*n7^2 + 18*n7^3 - 
      4*d*n7^3 - 10*n3*n7^3 + 4*n4*n7^3)*j[p4a, 1 + n1, -1, n3, n4, 0, 1, n7, 
      1, 0, 1, 0, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((18 - 5*d - d^2 + 18*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 18*n3 + 4*d*n3 + 
      2*d^2*n3 - 10*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 6*n3^2 - 5*d*n3^2 + 
      2*n3^3 - 11*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 11*n3*n4 - 7*d*n3*n4 + 
      3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 16*n7 + 11*d*n7 - 
      d^2*n7 + 4*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + d*n4*n7 + 
      4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, -1, n3, n4, 0, 1, n7, 
      1, 0, 1, 1, -1, 0, 2])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((16 - 10*d + 11*d^2 - 4*d^3 + 4*n1 + 10*d*n1 - 3*d^2*n1 + 2*d*n1^2 - 
      12*n3 + 2*d*n3 - 7*d^2*n3 + 4*d^3*n3 - 10*d*n1*n3 + 2*d^2*n1*n3 - 
      2*d*n1^2*n3 + 6*d*n3^2 - 5*d^2*n3^2 + 2*d*n3^3 + 8*n4 - 21*d*n4 + 
      9*d^2*n4 + 2*n1*n4 - 2*d*n1*n4 - 6*n3*n4 + 18*d*n3*n4 - 9*d^2*n3*n4 + 
      3*d*n1*n3*n4 + 4*d*n3^2*n4 - 2*d*n4^2 + 2*d*n3*n4^2 - 34*n7 - 17*d*n7 + 
      15*d^2*n7 - 46*n1*n7 + 16*d*n1*n7 - d^2*n1*n7 - 6*n1^2*n7 + 38*n3*n7 + 
      8*d*n3*n7 - 15*d^2*n3*n7 + 30*n1*n3*n7 - 6*d*n1*n3*n7 + 6*n1^2*n3*n7 - 
      18*n3^2*n7 + 19*d*n3^2*n7 - 6*n3^3*n7 + 43*n4*n7 - 29*d*n4*n7 + 
      n1*n4*n7 + d*n1*n4*n7 - 41*n3*n4*n7 + 29*d*n3*n4*n7 - 9*n1*n3*n4*n7 - 
      12*n3^2*n4*n7 + 6*n4^2*n7 - 6*n3*n4^2*n7 + 40*n7^2 - 27*d*n7^2 + 
      d^2*n7^2 - 12*n3*n7^2 + 17*d*n3*n7^2 - 12*n3^2*n7^2 + 20*n4*n7^2 - 
      d*n4*n7^2 - 12*n3*n4*n7^2 + 6*n7^3 - 6*n3*n7^3)*
     j[p4a, 1 + n1, -1, n3, n4, 0, 1, n7, 1, 0, 1, 1, 0, 0, 1])/
    (56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 43*d*n1 + 24*d^2*n1 - 
     4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 6*d*n3 - 8*d^2*n3 + 
     3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 24*d*n3^2 - 7*d^2*n3^2 - 
     4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 76*n4 - 116*d*n4 + 
     57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 11*d^2*n1*n4 + 
     3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 3*d^2*n3*n4 - 
     2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 
     2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 2*d*n3*n4^2 + 
     178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 53*d*n1*n7 + 
     11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 28*d*n3*n7 - 
     14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 4*n1*n3^2*n7 - 
     4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 63*n1*n4*n7 - 
     29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 6*d*n3*n4*n7 + 
     2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 4*n1*n4^2*n7 - 
     4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 20*n1*n7^2 - 
     6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 12*n3^2*n7^2 + 
     82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 
     4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((-18 + 5*d + d^2 - 18*n1 + 8*d*n1 - d^2*n1 - 2*n1^2 + 18*n3 - 4*d*n3 - 
      2*d^2*n3 + 10*n1*n3 - 2*d*n1*n3 + 2*n1^2*n3 - 6*n3^2 + 5*d*n3^2 - 
      2*n3^3 + 11*n4 - 6*d*n4 - n1*n4 + d*n1*n4 - 11*n3*n4 + 7*d*n3*n4 - 
      3*n1*n3*n4 - 4*n3^2*n4 + 2*n4^2 - 2*n3*n4^2 + 16*n7 - 11*d*n7 + 
      d^2*n7 - 4*n3*n7 + 5*d*n3*n7 - 4*n3^2*n7 + 8*n4*n7 - d*n4*n7 - 
      4*n3*n4*n7 + 2*n7^2 - 2*n3*n7^2)*j[p4a, 1 + n1, -1, n3, n4, 0, 1, n7, 
      1, 0, 1, 1, 0, 0, 2])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) - 
   ((-2 + d - n4)*(-1 - n3 + n4)*(4 - 3*d + n1 - d*n1 - 3*n3 + 2*d*n3 + 
      5*n7 + d*n7 + 2*n1*n7 - 4*n3*n7 - 2*n7^2)*j[p4a, 1 + n1, -1, n3, n4, 0, 
      1, n7, 1, 0, 1, 1, 0, 1, 0])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 
     22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 
     20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((-14 + 5*d + 5*d^2 - 2*d^3 + 10*n1 - 21*d*n1 + 12*d^2*n1 - 2*d^3*n1 + 
      2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 46*n3 - 47*d*n3 + 12*d^2*n3 + 8*n1*n3 - 
      6*d*n1*n3 + d^2*n1*n3 - 16*n3^2 + 18*d*n3^2 - 5*d^2*n3^2 - 4*n1*n3^2 + 
      2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 5*n4 - 7*d*n4 + 3*d^2*n4 + 9*n1*n4 - 
      12*d*n1*n4 + 4*d^2*n1*n4 + n1^2*n4 - d*n1^2*n4 + 7*n3*n4 - 7*d*n3*n4 + 
      d^2*n3*n4 + 2*n1*n3*n4 - 3*d*n1*n3*n4 - 2*n3^2*n4 + 6*n4^2 - 4*d*n4^2 + 
      2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 2*d*n3*n4^2 - 12*n7 - 2*d^2*n7 + 
      2*d^3*n7 + 22*n1*n7 - 23*d*n1*n7 + 5*d^2*n1*n7 + 4*n1^2*n7 - 
      2*d*n1^2*n7 + 52*n3*n7 - 16*d*n3*n7 - 4*d^2*n3*n7 + 12*n1*n3*n7 - 
      2*d*n1*n3*n7 - 20*n3^2*n7 + 12*d*n3^2*n7 - 4*n1*n3^2*n7 - 4*n3^3*n7 - 
      2*n4*n7 + 4*d*n4*n7 - 4*d^2*n4*n7 + 17*n1*n4*n7 - 9*d*n1*n4*n7 + 
      2*n1^2*n4*n7 + 14*n3*n4*n7 + 6*n1*n3*n4*n7 + 6*n4^2*n7 + 2*d*n4^2*n7 + 
      4*n1*n4^2*n7 - 4*n3*n4^2*n7 - 8*n7^2 + 14*d*n7^2 - 6*d^2*n7^2 + 
      4*n1*n7^2 - 2*d*n1*n7^2 - 8*n3*n7^2 + 8*d*n3*n7^2 - 4*n3^2*n7^2 - 
      14*n4*n7^2 + 10*d*n4*n7^2 + 2*n1*n4*n7^2 - 4*n3*n4*n7^2 - 4*n4^2*n7^2 - 
      8*n7^3 + 4*d*n7^3 - 4*n4*n7^3)*j[p4a, 1 + n1, -1, n3, n4, 0, 1, n7, 1, 
      0, 1, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) - 
   ((-2 + d - n4)*(-4 + 3*d - n1 + d*n1 + 3*n3 - 2*d*n3 - 5*n7 - d*n7 - 
      2*n1*n7 + 4*n3*n7 + 2*n7^2)*j[p4a, 1 + n1, -1, n3, n4, 0, 1, n7, 1, 0, 
      1, 1, 0, 2, 0])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((18 - 5*d - d^2 + 18*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 18*n3 + 4*d*n3 + 
      2*d^2*n3 - 10*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 6*n3^2 - 5*d*n3^2 + 
      2*n3^3 - 11*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 11*n3*n4 - 7*d*n3*n4 + 
      3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 16*n7 + 11*d*n7 - 
      d^2*n7 + 4*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + d*n4*n7 + 
      4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, -1, n3, n4, 0, 1, n7, 
      1, 0, 2, 0, -1, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((-18 + 5*d + d^2 - 18*n1 + 8*d*n1 - d^2*n1 - 2*n1^2 + 18*n3 - 4*d*n3 - 
      2*d^2*n3 + 10*n1*n3 - 2*d*n1*n3 + 2*n1^2*n3 - 6*n3^2 + 5*d*n3^2 - 
      2*n3^3 + 11*n4 - 6*d*n4 - n1*n4 + d*n1*n4 - 11*n3*n4 + 7*d*n3*n4 - 
      3*n1*n3*n4 - 4*n3^2*n4 + 2*n4^2 - 2*n3*n4^2 + 16*n7 - 11*d*n7 + 
      d^2*n7 - 4*n3*n7 + 5*d*n3*n7 - 4*n3^2*n7 + 8*n4*n7 - d*n4*n7 - 
      4*n3*n4*n7 + 2*n7^2 - 2*n3*n7^2)*j[p4a, 1 + n1, -1, n3, n4, 0, 1, n7, 
      1, 0, 2, 0, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((-18 + 5*d + d^2 - 18*n1 + 8*d*n1 - d^2*n1 - 2*n1^2 + 18*n3 - 4*d*n3 - 
      2*d^2*n3 + 10*n1*n3 - 2*d*n1*n3 + 2*n1^2*n3 - 6*n3^2 + 5*d*n3^2 - 
      2*n3^3 + 11*n4 - 6*d*n4 - n1*n4 + d*n1*n4 - 11*n3*n4 + 7*d*n3*n4 - 
      3*n1*n3*n4 - 4*n3^2*n4 + 2*n4^2 - 2*n3*n4^2 + 16*n7 - 11*d*n7 + 
      d^2*n7 - 4*n3*n7 + 5*d*n3*n7 - 4*n3^2*n7 + 8*n4*n7 - d*n4*n7 - 
      4*n3*n4*n7 + 2*n7^2 - 2*n3*n7^2)*j[p4a, 1 + n1, -1, n3, n4, 0, 2, 
      -2 + n7, 1, 0, 1, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 
     22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 
     20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((18 - 5*d - d^2 + 18*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 18*n3 + 4*d*n3 + 
      2*d^2*n3 - 10*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 6*n3^2 - 5*d*n3^2 + 
      2*n3^3 - 11*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 11*n3*n4 - 7*d*n3*n4 + 
      3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 16*n7 + 11*d*n7 - 
      d^2*n7 + 4*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + d*n4*n7 + 
      4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, -1, n3, n4, 0, 2, 
      -1 + n7, 1, 0, 1, 1, -1, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 
     4*d^4 + 22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + 
     d^2*n1^2 + 20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 
     20*n3^2 + 24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 
     2*d*n3^3 + 76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 
     39*d*n1*n4 + 11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 
     13*d*n3*n4 - 3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 
     4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 
     4*n3*n4^2 + 2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 
     54*n1*n7 - 53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 
     4*n3*n7 + 28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 
     20*d*n3^2*n7 - 4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 
     32*d^2*n4*n7 + 63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 
     10*n3*n4*n7 + 6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 
     6*d*n4^2*n7 + 4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 
     16*d^2*n7^2 + 20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 
     8*n1*n3*n7^2 - 12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 
     14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 
     8*n4*n7^3) + ((-18 + 5*d + d^2 - 18*n1 + 8*d*n1 - d^2*n1 - 2*n1^2 + 
      18*n3 - 4*d*n3 - 2*d^2*n3 + 10*n1*n3 - 2*d*n1*n3 + 2*n1^2*n3 - 6*n3^2 + 
      5*d*n3^2 - 2*n3^3 + 11*n4 - 6*d*n4 - n1*n4 + d*n1*n4 - 11*n3*n4 + 
      7*d*n3*n4 - 3*n1*n3*n4 - 4*n3^2*n4 + 2*n4^2 - 2*n3*n4^2 + 16*n7 - 
      11*d*n7 + d^2*n7 - 4*n3*n7 + 5*d*n3*n7 - 4*n3^2*n7 + 8*n4*n7 - 
      d*n4*n7 - 4*n3*n4*n7 + 2*n7^2 - 2*n3*n7^2)*j[p4a, 1 + n1, -1, n3, n4, 
      0, 2, -1 + n7, 1, 0, 1, 1, 0, 0, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 
     4*d^4 + 22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + 
     d^2*n1^2 + 20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 
     20*n3^2 + 24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 
     2*d*n3^3 + 76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 
     39*d*n1*n4 + 11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 
     13*d*n3*n4 - 3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 
     4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 
     4*n3*n4^2 + 2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 
     54*n1*n7 - 53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 
     4*n3*n7 + 28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 
     20*d*n3^2*n7 - 4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 
     32*d^2*n4*n7 + 63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 
     10*n3*n4*n7 + 6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 
     6*d*n4^2*n7 + 4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 
     16*d^2*n7^2 + 20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 
     8*n1*n3*n7^2 - 12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 
     14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 
     8*n4*n7^3) + ((-18 + 5*d + d^2 - 18*n1 + 8*d*n1 - d^2*n1 - 2*n1^2 + 
      18*n3 - 4*d*n3 - 2*d^2*n3 + 10*n1*n3 - 2*d*n1*n3 + 2*n1^2*n3 - 6*n3^2 + 
      5*d*n3^2 - 2*n3^3 + 11*n4 - 6*d*n4 - n1*n4 + d*n1*n4 - 11*n3*n4 + 
      7*d*n3*n4 - 3*n1*n3*n4 - 4*n3^2*n4 + 2*n4^2 - 2*n3*n4^2 + 16*n7 - 
      11*d*n7 + d^2*n7 - 4*n3*n7 + 5*d*n3*n7 - 4*n3^2*n7 + 8*n4*n7 - 
      d*n4*n7 - 4*n3*n4*n7 + 2*n7^2 - 2*n3*n7^2)*j[p4a, 1 + n1, -1, n3, n4, 
      0, 2, -1 + n7, 1, 0, 1, 1, 0, 1, 0])/(56 - 140*d + 112*d^2 - 36*d^3 + 
     4*d^4 + 22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + 
     d^2*n1^2 + 20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 
     20*n3^2 + 24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 
     2*d*n3^3 + 76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 
     39*d*n1*n4 + 11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 
     13*d*n3*n4 - 3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 
     4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 
     4*n3*n4^2 + 2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 
     54*n1*n7 - 53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 
     4*n3*n7 + 28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 
     20*d*n3^2*n7 - 4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 
     32*d^2*n4*n7 + 63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 
     10*n3*n4*n7 + 6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 
     6*d*n4^2*n7 + 4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 
     16*d^2*n7^2 + 20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 
     8*n1*n3*n7^2 - 12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 
     14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 
     8*n4*n7^3) + ((22 - 41*d + 13*d^2 - 12*d*n1 + 3*d^2*n1 - 2*d*n1^2 - 
      4*n3 + 22*d*n3 - 10*d^2*n3 + 6*n1*n3 + 2*n1^2*n3 - 12*n3^2 + 9*d*n3^2 - 
      2*n3^3 + 15*n4 - 9*d*n4 - 14*n3*n4 + 9*d*n3*n4 - 3*n1*n3*n4 - 
      4*n3^2*n4 + 2*n4^2 - 2*n3*n4^2 + 74*n7 - 27*d*n7 - 3*d^2*n7 + 
      32*n1*n7 - 8*d*n1*n7 + 4*n1^2*n7 - 40*n3*n7 + 27*d*n3*n7 - 4*n1*n3*n7 - 
      12*n3^2*n7 + 13*n4*n7 + 2*n1*n4*n7 - 8*n3*n4*n7 - 8*n7^2 + 10*d*n7^2 - 
      14*n3*n7^2 - 2*n4*n7^2 - 4*n7^3)*j[p4a, 1 + n1, -1, n3, n4, 0, 2, n7, 
      0, -1, 1, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) - 
   (n4*(18 - 5*d - d^2 + 18*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 18*n3 + 4*d*n3 + 
      2*d^2*n3 - 10*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 6*n3^2 - 5*d*n3^2 + 
      2*n3^3 - 11*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 11*n3*n4 - 7*d*n3*n4 + 
      3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 16*n7 + 11*d*n7 - 
      d^2*n7 + 4*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + d*n4*n7 + 
      4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, -1, n3, 1 + n4, -1, 0, 
      n7, 1, 0, 1, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 
     22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 
     20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   (n4*(18 - 5*d - d^2 + 18*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 18*n3 + 4*d*n3 + 
      2*d^2*n3 - 10*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 6*n3^2 - 5*d*n3^2 + 
      2*n3^3 - 11*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 11*n3*n4 - 7*d*n3*n4 + 
      3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 16*n7 + 11*d*n7 - 
      d^2*n7 + 4*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + d*n4*n7 + 
      4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, -1, n3, 1 + n4, -1, 1, 
      -1 + n7, 1, 0, 1, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 
     22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 
     20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) - 
   (n4*(18 - 5*d - d^2 + 18*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 18*n3 + 4*d*n3 + 
      2*d^2*n3 - 10*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 6*n3^2 - 5*d*n3^2 + 
      2*n3^3 - 11*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 11*n3*n4 - 7*d*n3*n4 + 
      3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 16*n7 + 11*d*n7 - 
      d^2*n7 + 4*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + d*n4*n7 + 
      4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, -1, n3, 1 + n4, -1, 1, 
      n7, 1, 0, 0, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 
     22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 
     20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   (n4*(18 - 5*d - d^2 + 18*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 18*n3 + 4*d*n3 + 
      2*d^2*n3 - 10*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 6*n3^2 - 5*d*n3^2 + 
      2*n3^3 - 11*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 11*n3*n4 - 7*d*n3*n4 + 
      3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 16*n7 + 11*d*n7 - 
      d^2*n7 + 4*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + d*n4*n7 + 
      4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, -1, n3, 1 + n4, -1, 1, 
      n7, 1, 0, 1, 0, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 
     22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 
     20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   (3*n4*(18 - 5*d - d^2 + 18*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 18*n3 + 
      4*d*n3 + 2*d^2*n3 - 10*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 6*n3^2 - 
      5*d*n3^2 + 2*n3^3 - 11*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 11*n3*n4 - 
      7*d*n3*n4 + 3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 16*n7 + 
      11*d*n7 - d^2*n7 + 4*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + 
      d*n4*n7 + 4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, -1, n3, 
      1 + n4, 0, 0, -1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    (56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 43*d*n1 + 24*d^2*n1 - 
     4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 6*d*n3 - 8*d^2*n3 + 
     3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 24*d*n3^2 - 7*d^2*n3^2 - 
     4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 76*n4 - 116*d*n4 + 
     57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 11*d^2*n1*n4 + 
     3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 3*d^2*n3*n4 - 
     2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 
     2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 2*d*n3*n4^2 + 
     178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 53*d*n1*n7 + 
     11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 28*d*n3*n7 - 
     14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 4*n1*n3^2*n7 - 
     4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 63*n1*n4*n7 - 
     29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 6*d*n3*n4*n7 + 
     2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 4*n1*n4^2*n7 - 
     4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 20*n1*n7^2 - 
     6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 12*n3^2*n7^2 + 
     82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 
     4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) - 
   (n4*(18 - 5*d - d^2 + 18*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 18*n3 + 4*d*n3 + 
      2*d^2*n3 - 10*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 6*n3^2 - 5*d*n3^2 + 
      2*n3^3 - 11*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 11*n3*n4 - 7*d*n3*n4 + 
      3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 16*n7 + 11*d*n7 - 
      d^2*n7 + 4*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + d*n4*n7 + 
      4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, -1, n3, 1 + n4, 0, 1, 
      -2 + n7, 1, 0, 1, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 
     22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 
     20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) - 
   (2*n4*(18 - 5*d - d^2 + 18*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 18*n3 + 
      4*d*n3 + 2*d^2*n3 - 10*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 6*n3^2 - 
      5*d*n3^2 + 2*n3^3 - 11*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 11*n3*n4 - 
      7*d*n3*n4 + 3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 16*n7 + 
      11*d*n7 - d^2*n7 + 4*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + 
      d*n4*n7 + 4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, -1, n3, 
      1 + n4, 0, 1, -1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 43*d*n1 + 24*d^2*n1 - 
     4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 6*d*n3 - 8*d^2*n3 + 
     3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 24*d*n3^2 - 7*d^2*n3^2 - 
     4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 76*n4 - 116*d*n4 + 
     57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 11*d^2*n1*n4 + 
     3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 3*d^2*n3*n4 - 
     2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 
     2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 2*d*n3*n4^2 + 
     178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 53*d*n1*n7 + 
     11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 28*d*n3*n7 - 
     14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 4*n1*n3^2*n7 - 
     4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 63*n1*n4*n7 - 
     29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 6*d*n3*n4*n7 + 
     2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 4*n1*n4^2*n7 - 
     4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 20*n1*n7^2 - 
     6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 12*n3^2*n7^2 + 
     82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 
     4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   (n4*(18 - 5*d - d^2 + 18*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 18*n3 + 4*d*n3 + 
      2*d^2*n3 - 10*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 6*n3^2 - 5*d*n3^2 + 
      2*n3^3 - 11*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 11*n3*n4 - 7*d*n3*n4 + 
      3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 16*n7 + 11*d*n7 - 
      d^2*n7 + 4*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + d*n4*n7 + 
      4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, -1, n3, 1 + n4, 0, 1, 
      -1 + n7, 1, 0, 0, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 
     22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 
     20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) - 
   (n4*(18 - 5*d - d^2 + 18*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 18*n3 + 4*d*n3 + 
      2*d^2*n3 - 10*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 6*n3^2 - 5*d*n3^2 + 
      2*n3^3 - 11*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 11*n3*n4 - 7*d*n3*n4 + 
      3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 16*n7 + 11*d*n7 - 
      d^2*n7 + 4*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + d*n4*n7 + 
      4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, -1, n3, 1 + n4, 0, 1, 
      -1 + n7, 1, 0, 1, 0, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 
     22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 
     20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) - 
   (n4*(18 - 5*d - d^2 + 18*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 18*n3 + 4*d*n3 + 
      2*d^2*n3 - 10*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 6*n3^2 - 5*d*n3^2 + 
      2*n3^3 - 11*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 11*n3*n4 - 7*d*n3*n4 + 
      3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 16*n7 + 11*d*n7 - 
      d^2*n7 + 4*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + d*n4*n7 + 
      4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, -1, n3, 1 + n4, 0, 1, 
      -1 + n7, 1, 0, 1, 1, 0, 1, 0])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 
     22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 
     20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) - 
   (n3*(-2 + d - n4)*(4 - 3*d + n1 - d*n1 - 3*n3 + 2*d*n3 + 5*n7 + d*n7 + 
      2*n1*n7 - 4*n3*n7 - 2*n7^2)*j[p4a, 1 + n1, -1, 1 + n3, -1 + n4, 0, 1, 
      n7, 0, 0, 1, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 
     22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 
     20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) - 
   (n3*(-2 + d - n4)*(4 - 3*d + n1 - d*n1 - 3*n3 + 2*d*n3 + 5*n7 + d*n7 + 
      2*n1*n7 - 4*n3*n7 - 2*n7^2)*j[p4a, 1 + n1, -1, 1 + n3, -1 + n4, 0, 1, 
      n7, 1, 0, 0, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 
     22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 
     20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   (n3*(-2 + d - n4)*(4 - 3*d + n1 - d*n1 - 3*n3 + 2*d*n3 + 5*n7 + d*n7 + 
      2*n1*n7 - 4*n3*n7 - 2*n7^2)*j[p4a, 1 + n1, -1, 1 + n3, -1 + n4, 0, 1, 
      n7, 1, 0, 1, 0, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 
     22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 
     20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) - 
   (3*n3*(18 - 5*d - d^2 + 18*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 18*n3 + 
      4*d*n3 + 2*d^2*n3 - 10*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 6*n3^2 - 
      5*d*n3^2 + 2*n3^3 - 11*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 11*n3*n4 - 
      7*d*n3*n4 + 3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 16*n7 + 
      11*d*n7 - d^2*n7 + 4*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + 
      d*n4*n7 + 4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, -1, 1 + n3, 
      n4, 0, 1, -2 + n7, 1, 0, 1, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 
     36*d^3 + 4*d^4 + 22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 
     3*d*n1^2 + d^2*n1^2 + 20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - 
     d^2*n1*n3 - 20*n3^2 + 24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 
     4*n3^3 + 2*d*n3^3 + 76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 
     39*d*n1*n4 + 11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 
     13*d*n3*n4 - 3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 
     4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 
     4*n3*n4^2 + 2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 
     54*n1*n7 - 53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 
     4*n3*n7 + 28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 
     20*d*n3^2*n7 - 4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 
     32*d^2*n4*n7 + 63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 
     10*n3*n4*n7 + 6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 
     6*d*n4^2*n7 + 4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 
     16*d^2*n7^2 + 20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 
     8*n1*n3*n7^2 - 12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 
     14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 
     8*n4*n7^3) - (5*n3*(18 - 5*d - d^2 + 18*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 
      18*n3 + 4*d*n3 + 2*d^2*n3 - 10*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 6*n3^2 - 
      5*d*n3^2 + 2*n3^3 - 11*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 11*n3*n4 - 
      7*d*n3*n4 + 3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 16*n7 + 
      11*d*n7 - d^2*n7 + 4*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + 
      d*n4*n7 + 4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, -1, 1 + n3, 
      n4, 0, 1, -1 + n7, 0, 0, 1, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 
     36*d^3 + 4*d^4 + 22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 
     3*d*n1^2 + d^2*n1^2 + 20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - 
     d^2*n1*n3 - 20*n3^2 + 24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 
     4*n3^3 + 2*d*n3^3 + 76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 
     39*d*n1*n4 + 11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 
     13*d*n3*n4 - 3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 
     4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 
     4*n3*n4^2 + 2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 
     54*n1*n7 - 53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 
     4*n3*n7 + 28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 
     20*d*n3^2*n7 - 4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 
     32*d^2*n4*n7 + 63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 
     10*n3*n4*n7 + 6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 
     6*d*n4^2*n7 + 4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 
     16*d^2*n7^2 + 20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 
     8*n1*n3*n7^2 - 12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 
     14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 
     8*n4*n7^3) + (n3*(18 - 5*d - d^2 + 18*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 
      18*n3 + 4*d*n3 + 2*d^2*n3 - 10*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 6*n3^2 - 
      5*d*n3^2 + 2*n3^3 - 11*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 11*n3*n4 - 
      7*d*n3*n4 + 3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 16*n7 + 
      11*d*n7 - d^2*n7 + 4*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + 
      d*n4*n7 + 4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, -1, 1 + n3, 
      n4, 0, 1, -1 + n7, 1, 0, 0, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 
     36*d^3 + 4*d^4 + 22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 
     3*d*n1^2 + d^2*n1^2 + 20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - 
     d^2*n1*n3 - 20*n3^2 + 24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 
     4*n3^3 + 2*d*n3^3 + 76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 
     39*d*n1*n4 + 11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 
     13*d*n3*n4 - 3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 
     4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 
     4*n3*n4^2 + 2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 
     54*n1*n7 - 53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 
     4*n3*n7 + 28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 
     20*d*n3^2*n7 - 4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 
     32*d^2*n4*n7 + 63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 
     10*n3*n4*n7 + 6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 
     6*d*n4^2*n7 + 4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 
     16*d^2*n7^2 + 20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 
     8*n1*n3*n7^2 - 12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 
     14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 
     8*n4*n7^3) - (n3*(18 - 5*d - d^2 + 18*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 
      18*n3 + 4*d*n3 + 2*d^2*n3 - 10*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 6*n3^2 - 
      5*d*n3^2 + 2*n3^3 - 11*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 11*n3*n4 - 
      7*d*n3*n4 + 3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 16*n7 + 
      11*d*n7 - d^2*n7 + 4*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + 
      d*n4*n7 + 4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, -1, 1 + n3, 
      n4, 0, 1, -1 + n7, 1, 0, 1, 0, 0, 1, 1])/(56 - 140*d + 112*d^2 - 
     36*d^3 + 4*d^4 + 22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 
     3*d*n1^2 + d^2*n1^2 + 20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - 
     d^2*n1*n3 - 20*n3^2 + 24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 
     4*n3^3 + 2*d*n3^3 + 76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 
     39*d*n1*n4 + 11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 
     13*d*n3*n4 - 3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 
     4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 
     4*n3*n4^2 + 2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 
     54*n1*n7 - 53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 
     4*n3*n7 + 28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 
     20*d*n3^2*n7 - 4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 
     32*d^2*n4*n7 + 63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 
     10*n3*n4*n7 + 6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 
     6*d*n4^2*n7 + 4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 
     16*d^2*n7^2 + 20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 
     8*n1*n3*n7^2 - 12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 
     14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 
     8*n4*n7^3) + (2*n3*(18 - 5*d - d^2 + 18*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 
      18*n3 + 4*d*n3 + 2*d^2*n3 - 10*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 6*n3^2 - 
      5*d*n3^2 + 2*n3^3 - 11*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 11*n3*n4 - 
      7*d*n3*n4 + 3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 16*n7 + 
      11*d*n7 - d^2*n7 + 4*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + 
      d*n4*n7 + 4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, -1, 1 + n3, 
      n4, 0, 1, -1 + n7, 1, 0, 1, 1, -1, 1, 1])/(56 - 140*d + 112*d^2 - 
     36*d^3 + 4*d^4 + 22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 
     3*d*n1^2 + d^2*n1^2 + 20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - 
     d^2*n1*n3 - 20*n3^2 + 24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 
     4*n3^3 + 2*d*n3^3 + 76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 
     39*d*n1*n4 + 11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 
     13*d*n3*n4 - 3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 
     4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 
     4*n3*n4^2 + 2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 
     54*n1*n7 - 53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 
     4*n3*n7 + 28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 
     20*d*n3^2*n7 - 4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 
     32*d^2*n4*n7 + 63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 
     10*n3*n4*n7 + 6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 
     6*d*n4^2*n7 + 4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 
     16*d^2*n7^2 + 20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 
     8*n1*n3*n7^2 - 12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 
     14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 
     8*n4*n7^3) - (2*n3*(18 - 5*d - d^2 + 18*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 
      18*n3 + 4*d*n3 + 2*d^2*n3 - 10*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 6*n3^2 - 
      5*d*n3^2 + 2*n3^3 - 11*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 11*n3*n4 - 
      7*d*n3*n4 + 3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 16*n7 + 
      11*d*n7 - d^2*n7 + 4*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + 
      d*n4*n7 + 4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, -1, 1 + n3, 
      n4, 0, 1, -1 + n7, 1, 0, 1, 1, 0, 0, 1])/(56 - 140*d + 112*d^2 - 
     36*d^3 + 4*d^4 + 22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 
     3*d*n1^2 + d^2*n1^2 + 20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - 
     d^2*n1*n3 - 20*n3^2 + 24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 
     4*n3^3 + 2*d*n3^3 + 76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 
     39*d*n1*n4 + 11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 
     13*d*n3*n4 - 3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 
     4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 
     4*n3*n4^2 + 2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 
     54*n1*n7 - 53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 
     4*n3*n7 + 28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 
     20*d*n3^2*n7 - 4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 
     32*d^2*n4*n7 + 63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 
     10*n3*n4*n7 + 6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 
     6*d*n4^2*n7 + 4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 
     16*d^2*n7^2 + 20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 
     8*n1*n3*n7^2 - 12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 
     14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 
     8*n4*n7^3) - (n3*(-2 + d - n4)*(4 - 3*d + n1 - d*n1 - 3*n3 + 2*d*n3 + 
      5*n7 + d*n7 + 2*n1*n7 - 4*n3*n7 - 2*n7^2)*j[p4a, 1 + n1, -1, 1 + n3, 
      n4, 0, 1, -1 + n7, 1, 0, 1, 1, 0, 1, 0])/(56 - 140*d + 112*d^2 - 
     36*d^3 + 4*d^4 + 22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 
     3*d*n1^2 + d^2*n1^2 + 20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - 
     d^2*n1*n3 - 20*n3^2 + 24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 
     4*n3^3 + 2*d*n3^3 + 76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 
     39*d*n1*n4 + 11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 
     13*d*n3*n4 - 3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 
     4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 
     4*n3*n4^2 + 2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 
     54*n1*n7 - 53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 
     4*n3*n7 + 28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 
     20*d*n3^2*n7 - 4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 
     32*d^2*n4*n7 + 63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 
     10*n3*n4*n7 + 6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 
     6*d*n4^2*n7 + 4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 
     16*d^2*n7^2 + 20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 
     8*n1*n3*n7^2 - 12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 
     14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 
     8*n4*n7^3) + (n3*(18 - 5*d - d^2 + 18*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 
      18*n3 + 4*d*n3 + 2*d^2*n3 - 10*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 6*n3^2 - 
      5*d*n3^2 + 2*n3^3 - 11*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 11*n3*n4 - 
      7*d*n3*n4 + 3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 16*n7 + 
      11*d*n7 - d^2*n7 + 4*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + 
      d*n4*n7 + 4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, -1, 1 + n3, 
      n4, 0, 1, n7, 1, 0, 1, 1, -1, 0, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 
     4*d^4 + 22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + 
     d^2*n1^2 + 20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 
     20*n3^2 + 24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 
     2*d*n3^3 + 76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 
     39*d*n1*n4 + 11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 
     13*d*n3*n4 - 3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 
     4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 
     4*n3*n4^2 + 2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 
     54*n1*n7 - 53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 
     4*n3*n7 + 28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 
     20*d*n3^2*n7 - 4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 
     32*d^2*n4*n7 + 63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 
     10*n3*n4*n7 + 6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 
     6*d*n4^2*n7 + 4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 
     16*d^2*n7^2 + 20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 
     8*n1*n3*n7^2 - 12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 
     14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 
     8*n4*n7^3) - (n3*(18 - 5*d - d^2 + 18*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 
      18*n3 + 4*d*n3 + 2*d^2*n3 - 10*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 6*n3^2 - 
      5*d*n3^2 + 2*n3^3 - 11*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 11*n3*n4 - 
      7*d*n3*n4 + 3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 16*n7 + 
      11*d*n7 - d^2*n7 + 4*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + 
      d*n4*n7 + 4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, -1, 1 + n3, 
      n4, 0, 1, n7, 1, 0, 1, 1, 0, 0, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 
     4*d^4 + 22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + 
     d^2*n1^2 + 20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 
     20*n3^2 + 24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 
     2*d*n3^3 + 76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 
     39*d*n1*n4 + 11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 
     13*d*n3*n4 - 3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 
     4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 
     4*n3*n4^2 + 2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 
     54*n1*n7 - 53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 
     4*n3*n7 + 28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 
     20*d*n3^2*n7 - 4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 
     32*d^2*n4*n7 + 63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 
     10*n3*n4*n7 + 6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 
     6*d*n4^2*n7 + 4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 
     16*d^2*n7^2 + 20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 
     8*n1*n3*n7^2 - 12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 
     14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 
     8*n4*n7^3) + (n3*(-2 + d - n4)*(4 - 3*d + n1 - d*n1 - 3*n3 + 2*d*n3 + 
      5*n7 + d*n7 + 2*n1*n7 - 4*n3*n7 - 2*n7^2)*j[p4a, 1 + n1, -1, 1 + n3, 
      n4, 0, 1, n7, 1, 0, 1, 1, 0, 1, 0])/(56 - 140*d + 112*d^2 - 36*d^3 + 
     4*d^4 + 22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + 
     d^2*n1^2 + 20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 
     20*n3^2 + 24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 
     2*d*n3^3 + 76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 
     39*d*n1*n4 + 11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 
     13*d*n3*n4 - 3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 
     4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 
     4*n3*n4^2 + 2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 
     54*n1*n7 - 53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 
     4*n3*n7 + 28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 
     20*d*n3^2*n7 - 4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 
     32*d^2*n4*n7 + 63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 
     10*n3*n4*n7 + 6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 
     6*d*n4^2*n7 + 4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 
     16*d^2*n7^2 + 20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 
     8*n1*n3*n7^2 - 12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 
     14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 
     8*n4*n7^3) - ((-2 + d - n4)*(-4 + 3*d - n1 + d*n1 + 3*n3 - 2*d*n3 - 
      5*n7 - d*n7 - 2*n1*n7 + 4*n3*n7 + 2*n7^2)*j[p4a, 1 + n1, 0, -1 + n3, 
      n4, 0, 0, n7, 1, 0, 1, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 
     4*d^4 + 22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + 
     d^2*n1^2 + 20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 
     20*n3^2 + 24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 
     2*d*n3^3 + 76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 
     39*d*n1*n4 + 11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 
     13*d*n3*n4 - 3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 
     4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 
     4*n3*n4^2 + 2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 
     54*n1*n7 - 53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 
     4*n3*n7 + 28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 
     20*d*n3^2*n7 - 4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 
     32*d^2*n4*n7 + 63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 
     10*n3*n4*n7 + 6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 
     6*d*n4^2*n7 + 4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 
     16*d^2*n7^2 + 20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 
     8*n1*n3*n7^2 - 12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 
     14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 
     8*n4*n7^3) + ((-18 + 5*d + d^2 - 18*n1 + 8*d*n1 - d^2*n1 - 2*n1^2 + 
      18*n3 - 4*d*n3 - 2*d^2*n3 + 10*n1*n3 - 2*d*n1*n3 + 2*n1^2*n3 - 6*n3^2 + 
      5*d*n3^2 - 2*n3^3 + 11*n4 - 6*d*n4 - n1*n4 + d*n1*n4 - 11*n3*n4 + 
      7*d*n3*n4 - 3*n1*n3*n4 - 4*n3^2*n4 + 2*n4^2 - 2*n3*n4^2 + 16*n7 - 
      11*d*n7 + d^2*n7 - 4*n3*n7 + 5*d*n3*n7 - 4*n3^2*n7 + 8*n4*n7 - 
      d*n4*n7 - 4*n3*n4*n7 + 2*n7^2 - 2*n3*n7^2)*j[p4a, 1 + n1, 0, -1 + n3, 
      n4, 0, 1, n7, 0, 0, 1, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 
     4*d^4 + 22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + 
     d^2*n1^2 + 20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 
     20*n3^2 + 24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 
     2*d*n3^3 + 76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 
     39*d*n1*n4 + 11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 
     13*d*n3*n4 - 3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 
     4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 
     4*n3*n4^2 + 2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 
     54*n1*n7 - 53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 
     4*n3*n7 + 28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 
     20*d*n3^2*n7 - 4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 
     32*d^2*n4*n7 + 63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 
     10*n3*n4*n7 + 6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 
     6*d*n4^2*n7 + 4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 
     16*d^2*n7^2 + 20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 
     8*n1*n3*n7^2 - 12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 
     14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 
     8*n4*n7^3) + ((-24 + 20*d - 14*d^2 + 4*d^3 - 6*n1 - 7*d*n1 + 2*d^2*n1 - 
      2*d*n1^2 + 4*n3 + 16*d*n3 - 9*d^2*n3 + 10*n1*n3 - 2*d*n1*n3 + 
      2*n1^2*n3 - 8*n3^2 + 7*d*n3^2 - 2*n3^3 - 12*n4 + 24*d*n4 - 9*d^2*n4 - 
      3*n1*n4 + 3*d*n1*n4 - 18*n3*n4 + 13*d*n3*n4 - 3*n1*n3*n4 - 4*n3^2*n4 + 
      2*d*n4^2 - 2*n3*n4^2 + 6*n7 + 25*d*n7 - 13*d^2*n7 + 24*n1*n7 - 
      6*d*n1*n7 + 4*n1^2*n7 - 32*n3*n7 + 23*d*n3*n7 - 8*n3^2*n7 - 37*n4*n7 + 
      22*d*n4*n7 - 4*n1*n4*n7 - 16*n3*n4*n7 - 4*n4^2*n7 - 20*n7^2 + 
      14*d*n7^2 - 10*n3*n7^2 - 10*n4*n7^2 - 4*n7^3)*
     j[p4a, 1 + n1, 0, -1 + n3, n4, 0, 1, n7, 1, 0, 0, 1, 0, 1, 1])/
    (56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 43*d*n1 + 24*d^2*n1 - 
     4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 6*d*n3 - 8*d^2*n3 + 
     3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 24*d*n3^2 - 7*d^2*n3^2 - 
     4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 76*n4 - 116*d*n4 + 
     57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 11*d^2*n1*n4 + 
     3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 3*d^2*n3*n4 - 
     2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 
     2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 2*d*n3*n4^2 + 
     178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 53*d*n1*n7 + 
     11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 28*d*n3*n7 - 
     14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 4*n1*n3^2*n7 - 
     4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 63*n1*n4*n7 - 
     29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 6*d*n3*n4*n7 + 
     2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 4*n1*n4^2*n7 - 
     4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 20*n1*n7^2 - 
     6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 12*n3^2*n7^2 + 
     82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 
     4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((-2 + d - n4)*(-4 + 3*d - n1 + d*n1 + 3*n3 - 2*d*n3 - 5*n7 - d*n7 - 
      2*n1*n7 + 4*n3*n7 + 2*n7^2)*j[p4a, 1 + n1, 0, n3, n4, -1, 1, n7, 0, 0, 
      1, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((-2 + d - n4)*(-4 + 3*d - n1 + d*n1 + 3*n3 - 2*d*n3 - 5*n7 - d*n7 - 
      2*n1*n7 + 4*n3*n7 + 2*n7^2)*j[p4a, 1 + n1, 0, n3, n4, -1, 1, n7, 1, 0, 
      0, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   (2*(-2 + d - n4)*(-4 + 3*d - n1 + d*n1 + 3*n3 - 2*d*n3 - 5*n7 - d*n7 - 
      2*n1*n7 + 4*n3*n7 + 2*n7^2)*j[p4a, 1 + n1, 0, n3, n4, -1, 1, n7, 1, 0, 
      1, 1, 0, 0, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) - 
   (2*(-2 + d - n4)*(-4 + 3*d - n1 + d*n1 + 3*n3 - 2*d*n3 - 5*n7 - d*n7 - 
      2*n1*n7 + 4*n3*n7 + 2*n7^2)*j[p4a, 1 + n1, 0, n3, n4, -1, 1, n7, 1, 0, 
      1, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((-2 + d - n4)*(-4 + 3*d - n1 + d*n1 + 3*n3 - 2*d*n3 - 5*n7 - d*n7 - 
      2*n1*n7 + 4*n3*n7 + 2*n7^2)*j[p4a, 1 + n1, 0, n3, n4, 0, 0, -1 + n7, 1, 
      0, 1, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) - 
   ((-2 + d - n4)*(-4 + 3*d - n1 + d*n1 + 3*n3 - 2*d*n3 - 5*n7 - d*n7 - 
      2*n1*n7 + 4*n3*n7 + 2*n7^2)*j[p4a, 1 + n1, 0, n3, n4, 0, 0, n7, 1, 0, 
      1, 1, -1, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   (2*(-2 + d - n4)*(-4 + 3*d - n1 + d*n1 + 3*n3 - 2*d*n3 - 5*n7 - d*n7 - 
      2*n1*n7 + 4*n3*n7 + 2*n7^2)*j[p4a, 1 + n1, 0, n3, n4, 0, 0, n7, 1, 0, 
      1, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((18 - 5*d - d^2 + 18*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 18*n3 + 4*d*n3 + 
      2*d^2*n3 - 10*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 6*n3^2 - 5*d*n3^2 + 
      2*n3^3 - 11*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 11*n3*n4 - 7*d*n3*n4 + 
      3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 16*n7 + 11*d*n7 - 
      d^2*n7 + 4*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + d*n4*n7 + 
      4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, 0, n3, n4, 0, 1, 
      -2 + n7, 1, 0, 1, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 
     22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 
     20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((18 - 5*d - d^2 + 18*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 18*n3 + 4*d*n3 + 
      2*d^2*n3 - 10*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 6*n3^2 - 5*d*n3^2 + 
      2*n3^3 - 11*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 11*n3*n4 - 7*d*n3*n4 + 
      3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 16*n7 + 11*d*n7 - 
      d^2*n7 + 4*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + d*n4*n7 + 
      4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, 0, n3, n4, 0, 1, 
      -1 + n7, 0, 0, 1, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 
     22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 
     20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((46 - 61*d + 27*d^2 - 4*d^3 + 6*n1 - 5*d*n1 + d^2*n1 - 8*n3 + 6*d*n3 - 
      d^2*n3 - 4*n1*n3 + 2*d*n1*n3 - 4*n3^2 + 2*d*n3^2 + 27*n4 - 33*d*n4 + 
      9*d^2*n4 + 3*n1*n4 - 3*d*n1*n4 + 4*n3*n4 - 4*d*n3*n4 + 2*n4^2 - 
      2*d*n4^2 + 68*n7 - 52*d*n7 + 10*d^2*n7 + 8*n1*n7 - 2*d*n1*n7 - 
      8*n3*n7 + 4*d*n3*n7 - 4*n1*n3*n7 - 4*n3^2*n7 + 50*n4*n7 - 22*d*n4*n7 + 
      6*n1*n4*n7 + 8*n3*n4*n7 + 4*n4^2*n7 + 12*n7^2 - 4*d*n7^2 - 4*n3*n7^2 + 
      8*n4*n7^2)*j[p4a, 1 + n1, 0, n3, n4, 0, 1, -1 + n7, 1, 0, 0, 1, 0, 1, 
      1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 43*d*n1 + 
     24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 6*d*n3 - 
     8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 24*d*n3^2 - 
     7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 76*n4 - 
     116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 11*d^2*n1*n4 + 
     3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 3*d^2*n3*n4 - 
     2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 8*n4^2 - 8*d*n4^2 + 
     2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 2*d*n3*n4^2 + 
     178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 53*d*n1*n7 + 
     11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 28*d*n3*n7 - 
     14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 4*n1*n3^2*n7 - 
     4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 63*n1*n4*n7 - 
     29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 6*d*n3*n4*n7 + 
     2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 4*n1*n4^2*n7 - 
     4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 20*n1*n7^2 - 
     6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 12*n3^2*n7^2 + 
     82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 16*n7^3 - 
     4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   (2*(18 - 5*d - d^2 + 18*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 18*n3 + 4*d*n3 + 
      2*d^2*n3 - 10*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 6*n3^2 - 5*d*n3^2 + 
      2*n3^3 - 11*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 11*n3*n4 - 7*d*n3*n4 + 
      3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 16*n7 + 11*d*n7 - 
      d^2*n7 + 4*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + d*n4*n7 + 
      4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, 0, n3, n4, 0, 1, 
      -1 + n7, 1, 0, 1, 1, 0, 0, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 
     22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 
     20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((-18 + 5*d + d^2 - 18*n1 + 8*d*n1 - d^2*n1 - 2*n1^2 + 18*n3 - 4*d*n3 - 
      2*d^2*n3 + 10*n1*n3 - 2*d*n1*n3 + 2*n1^2*n3 - 6*n3^2 + 5*d*n3^2 - 
      2*n3^3 + 11*n4 - 6*d*n4 - n1*n4 + d*n1*n4 - 11*n3*n4 + 7*d*n3*n4 - 
      3*n1*n3*n4 - 4*n3^2*n4 + 2*n4^2 - 2*n3*n4^2 + 16*n7 - 11*d*n7 + 
      d^2*n7 - 4*n3*n7 + 5*d*n3*n7 - 4*n3^2*n7 + 8*n4*n7 - d*n4*n7 - 
      4*n3*n4*n7 + 2*n7^2 - 2*n3*n7^2)*j[p4a, 1 + n1, 0, n3, n4, 0, 1, 
      -1 + n7, 1, 0, 1, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 
     22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 
     20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((-18 + 5*d + d^2 - 18*n1 + 8*d*n1 - d^2*n1 - 2*n1^2 + 18*n3 - 4*d*n3 - 
      2*d^2*n3 + 10*n1*n3 - 2*d*n1*n3 + 2*n1^2*n3 - 6*n3^2 + 5*d*n3^2 - 
      2*n3^3 + 11*n4 - 6*d*n4 - n1*n4 + d*n1*n4 - 11*n3*n4 + 7*d*n3*n4 - 
      3*n1*n3*n4 - 4*n3^2*n4 + 2*n4^2 - 2*n3*n4^2 + 16*n7 - 11*d*n7 + 
      d^2*n7 - 4*n3*n7 + 5*d*n3*n7 - 4*n3^2*n7 + 8*n4*n7 - d*n4*n7 - 
      4*n3*n4*n7 + 2*n7^2 - 2*n3*n7^2)*j[p4a, 1 + n1, 0, n3, n4, 0, 1, n7, 0, 
      0, 1, 1, -1, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((18 - 5*d - d^2 + 18*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 18*n3 + 4*d*n3 + 
      2*d^2*n3 - 10*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 6*n3^2 - 5*d*n3^2 + 
      2*n3^3 - 11*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 11*n3*n4 - 7*d*n3*n4 + 
      3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 16*n7 + 11*d*n7 - 
      d^2*n7 + 4*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + d*n4*n7 + 
      4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, 0, n3, n4, 0, 1, n7, 0, 
      0, 1, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((1 + n1)*(-2 + d - n4)*(-4 + 3*d - n1 + d*n1 + 3*n3 - 2*d*n3 - 5*n7 - 
      d*n7 - 2*n1*n7 + 4*n3*n7 + 2*n7^2)*j[p4a, 2 + n1, -2, n3, n4, 0, 1, n7, 
      1, 0, 1, 1, 0, 0, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) - 
   ((1 + n1)*(-2 + d - n4)*(-4 + 3*d - n1 + d*n1 + 3*n3 - 2*d*n3 - 5*n7 - 
      d*n7 - 2*n1*n7 + 4*n3*n7 + 2*n7^2)*j[p4a, 2 + n1, -2, n3, n4, 0, 1, n7, 
      1, 0, 1, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) - 
   ((1 + n1)*(-2 + d - n4)*(-4 + 3*d - n1 + d*n1 + 3*n3 - 2*d*n3 - 5*n7 - 
      d*n7 - 2*n1*n7 + 4*n3*n7 + 2*n7^2)*j[p4a, 2 + n1, -1, n3, n4, -1, 1, 
      n7, 1, 0, 1, 1, 0, 0, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 
     22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 
     20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   (2*(1 + n1)*(-2 + d - n4)*(-4 + 3*d - n1 + d*n1 + 3*n3 - 2*d*n3 - 5*n7 - 
      d*n7 - 2*n1*n7 + 4*n3*n7 + 2*n7^2)*j[p4a, 2 + n1, -1, n3, n4, -1, 1, 
      n7, 1, 0, 1, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 
     22*n1 - 43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 
     20*n3 - 6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) + 
   ((1 + n1)*(-2 + d - n4)*(-4 + 3*d - n1 + d*n1 + 3*n3 - 2*d*n3 - 5*n7 - 
      d*n7 - 2*n1*n7 + 4*n3*n7 + 2*n7^2)*j[p4a, 2 + n1, -1, n3, n4, 0, 1, n7, 
      1, -1, 1, 1, 0, 0, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3) - 
   (2*(1 + n1)*(-2 + d - n4)*(-4 + 3*d - n1 + d*n1 + 3*n3 - 2*d*n3 - 5*n7 - 
      d*n7 - 2*n1*n7 + 4*n3*n7 + 2*n7^2)*j[p4a, 2 + n1, -1, n3, n4, 0, 1, n7, 
      1, -1, 1, 1, 0, 1, 1])/(56 - 140*d + 112*d^2 - 36*d^3 + 4*d^4 + 22*n1 - 
     43*d*n1 + 24*d^2*n1 - 4*d^3*n1 + 2*n1^2 - 3*d*n1^2 + d^2*n1^2 + 20*n3 - 
     6*d*n3 - 8*d^2*n3 + 3*d^3*n3 + 4*n1*n3 - d^2*n1*n3 - 20*n3^2 + 
     24*d*n3^2 - 7*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 4*n3^3 + 2*d*n3^3 + 
     76*n4 - 116*d*n4 + 57*d^2*n4 - 9*d^3*n4 + 31*n1*n4 - 39*d*n1*n4 + 
     11*d^2*n1*n4 + 3*n1^2*n4 - 3*d*n1^2*n4 - 14*n3*n4 + 13*d*n3*n4 - 
     3*d^2*n3*n4 - 2*n1*n3*n4 - d*n1*n3*n4 - 8*n3^2*n4 + 4*d*n3^2*n4 + 
     8*n4^2 - 8*d*n4^2 + 2*d^2*n4^2 + 2*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 
     2*d*n3*n4^2 + 178*n7 - 261*d*n7 + 114*d^2*n7 - 15*d^3*n7 + 54*n1*n7 - 
     53*d*n1*n7 + 11*d^2*n1*n7 + 4*n1^2*n7 - 2*d*n1^2*n7 + 4*n3*n7 + 
     28*d*n3*n7 - 14*d^2*n3*n7 + 6*d*n1*n3*n7 - 32*n3^2*n7 + 20*d*n3^2*n7 - 
     4*n1*n3^2*n7 - 4*n3^3*n7 + 165*n4*n7 - 149*d*n4*n7 + 32*d^2*n4*n7 + 
     63*n1*n4*n7 - 29*d*n1*n4*n7 + 6*n1^2*n4*n7 - 10*n3*n4*n7 + 
     6*d*n3*n4*n7 + 2*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 14*n4^2*n7 - 6*d*n4^2*n7 + 
     4*n1*n4^2*n7 - 4*n3*n4^2*n7 + 128*n7^2 - 96*d*n7^2 + 16*d^2*n7^2 + 
     20*n1*n7^2 - 6*d*n1*n7^2 - 28*n3*n7^2 + 20*d*n3*n7^2 - 8*n1*n3*n7^2 - 
     12*n3^2*n7^2 + 82*n4*n7^2 - 32*d*n4*n7^2 + 14*n1*n4*n7^2 + 4*n4^2*n7^2 + 
     16*n7^3 - 4*d*n7^3 - 8*n3*n7^3 + 8*n4*n7^3), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n10 == 1 && n11 == 1 && n12 == 0 && 
    n13 == 1 && n14 == 1 && n2 == 0 && n5 == 0 && n6 == 1 && n8 == 1 && 
    n9 == 0 &&  !((n3 == 1 && n4 == n7) || (n3 == 1 && n4 == n7) || 
      n1 == 0) -> 
  -(((-2 + d - n4)*(20 - 4*d - d^2 + 20*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 
       22*n3 + 3*d*n3 + 2*d^2*n3 - 12*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 
       8*n3^2 - 5*d*n3^2 + 2*n3^3 - 14*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 
       14*n3*n4 - 7*d*n3*n4 + 3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 
       18*n7 + 11*d*n7 - d^2*n7 + 6*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + 
       d*n4*n7 + 4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, n1, 0, n3, n4, 0, 0, 
       n7, 1, 0, 1, 2, 0, 1, 1])/((-3 + d - n1 - n7)*
      (-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 
       2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 
       24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 
       14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 
       4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 
       12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 
       18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 
       24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 
       10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 
       2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 
       82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
       4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
       24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
       10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
       18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
       10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
       52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
       12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
       8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3))) - 
   ((-2 + d - n4)*(20 - 4*d - d^2 + 20*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 
      22*n3 + 3*d*n3 + 2*d^2*n3 - 12*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 8*n3^2 - 
      5*d*n3^2 + 2*n3^3 - 14*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 14*n3*n4 - 
      7*d*n3*n4 + 3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 18*n7 + 
      11*d*n7 - d^2*n7 + 6*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + 
      d*n4*n7 + 4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, n1, 0, n3, n4, 0, 0, 
      n7, 1, 0, 2, 1, 0, 1, 1])/((-3 + d - n1 - n7)*
     (-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 
      2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 
      24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 
      14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 
      4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 
      12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 
      18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 
      24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 
      10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 
      2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 
      82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) + 
   ((-1 + n3)*(-2 + d - n4)*(18 - 6*d + 15*n1 - 4*d*n1 + 2*n1^2 - 6*n3 + 
      2*d*n3 - n1*n3 - 12*n4 + 6*d*n4 - 2*n3*n4 - 4*n4^2 + 6*n7 - 2*d*n7 + 
      2*n1*n7 - 2*n4*n7 + 2*n7^2)*j[p4a, n1, 0, n3, n4, 0, 0, n7, 2, 0, 1, 1, 
      0, 1, 1])/((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 
      35*d*n1 - 9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 
      10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 
      84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 
      2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 
      34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 
      88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 
      2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 
      52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 
      12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 
      298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) - 
   ((-2 + d - n4)*(20 - 4*d - d^2 + 20*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 
      22*n3 + 3*d*n3 + 2*d^2*n3 - 12*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 8*n3^2 - 
      5*d*n3^2 + 2*n3^3 - 14*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 14*n3*n4 - 
      7*d*n3*n4 + 3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 18*n7 + 
      11*d*n7 - d^2*n7 + 6*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + 
      d*n4*n7 + 4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, n1, 0, n3, n4, 0, 1, 
      n7, 0, 0, 1, 2, 0, 1, 1])/((-3 + d - n1 - n7)*
     (-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 
      2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 
      24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 
      14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 
      4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 
      12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 
      18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 
      24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 
      10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 
      2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 
      82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) + 
   ((280 - 264*d + 78*d^2 - 7*d^3 + 236*n1 - 186*d*n1 + 44*d^2*n1 - 
      3*d^3*n1 + 42*n1^2 - 18*d*n1^2 + d^2*n1^2 + 2*n1^3 - 212*n3 + 
      198*d*n3 - 55*d^2*n3 + 4*d^3*n3 - 148*n1*n3 + 103*d*n1*n3 - 
      17*d^2*n1*n3 - 32*n1^2*n3 + 12*d*n1^2*n3 - 2*n1^3*n3 - 8*n3^2 - 
      4*d*n3^2 + 3*d^2*n3^2 - 16*n1*n3^2 + 5*d*n1*n3^2 - 2*n1^2*n3^2 + 
      4*n3^3 - 2*d*n3^3 - 114*n4 + 158*d*n4 - 59*d^2*n4 + 6*d^3*n4 + 
      41*n1*n4 - 16*d*n1*n4 + 2*d^2*n1*n4 + 7*n1^2*n4 - d*n1^2*n4 - 2*n3*n4 - 
      27*d*n3*n4 + 11*d^2*n3*n4 - 14*n1*n3*n4 + d*n1*n3*n4 - 3*n1^2*n3*n4 + 
      26*n3^2*n4 - 13*d*n3^2*n4 + n1*n3^2*n4 + 2*n3^3*n4 - 118*n4^2 + 
      74*d*n4^2 - 10*d^2*n4^2 - 7*n1*n4^2 + d*n1*n4^2 + 20*n3*n4^2 - 
      11*d*n3*n4^2 + 3*n1*n3*n4^2 + 6*n3^2*n4^2 - 18*n4^3 + 4*d*n4^3 + 
      2*n3*n4^3 + 228*n7 - 174*d*n7 + 41*d^2*n7 - 3*d^3*n7 + 100*n1*n7 - 
      43*d*n1*n7 + 3*d^2*n1*n7 + 8*n1^2*n7 - 132*n3*n7 + 86*d*n3*n7 - 
      13*d^2*n3*n7 - 70*n1*n3*n7 + 25*d*n1*n3*n7 - 8*n1^2*n3*n7 - 
      16*n3^2*n7 + 4*d*n3^2*n7 - 6*n1*n3^2*n7 + 16*n4*n7 - 7*d*n4*n7 + 
      2*d^2*n4*n7 + 14*n1*n4*n7 - 3*d*n1*n4*n7 + 12*n3*n4*n7 - 9*d*n3*n4*n7 - 
      2*n1*n3*n4*n7 + 4*n3^2*n4*n7 - 10*n4^2*n7 + d*n4^2*n7 + 6*n3*n4^2*n7 + 
      60*n7^2 - 26*d*n7^2 + 2*d^2*n7^2 + 10*n1*n7^2 - 40*n3*n7^2 + 
      14*d*n3*n7^2 - 10*n1*n3*n7^2 - 4*n3^2*n7^2 + 8*n4*n7^2 - 2*d*n4*n7^2 + 
      4*n7^3 - 4*n3*n7^3)*j[p4a, n1, 0, n3, n4, 0, 1, n7, 1, 0, 0, 2, 0, 1, 
      1])/((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 
      35*d*n1 - 9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 
      10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 
      84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 
      2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 
      34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 
      88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 
      2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 
      52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 
      12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 
      298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) + 
   ((-2 + d - n4)*(2 + 2*d - d^2 + 5*n1 - 4*d*n1 + d^2*n1 + 2*n3 - 5*d*n3 + 
      2*d^2*n3 + 4*n1*n3 - 2*d*n1*n3 + 2*n3^2 - 3*d*n3^2 - n1*n3^2 + 2*n3^3 - 
      2*n4 + n1*n4 - d*n1*n4 + 4*n3*n4 - d*n3*n4 + 3*n1*n3*n4 + 2*n3^2*n4 + 
      2*n4^2 - 2*n3*n4^2 - 24*n7 + 13*d*n7 - d^2*n7 - 2*n1*n7 + 12*n3*n7 - 
      7*d*n3*n7 + 2*n1*n3*n7 + 4*n3^2*n7 - 6*n4*n7 + d*n4*n7 + 2*n3*n4*n7 - 
      4*n7^2 + 4*n3*n7^2)*j[p4a, n1, 0, n3, n4, 0, 1, n7, 1, 0, 1, 1, 0, 2, 
      0])/((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 
      35*d*n1 - 9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 
      10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 
      84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 
      2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 
      34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 
      88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 
      2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 
      52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 
      12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 
      298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) - 
   (2*n3*(-2 + d - n4)*(20 - 4*d - d^2 + 20*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 
      22*n3 + 3*d*n3 + 2*d^2*n3 - 12*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 8*n3^2 - 
      5*d*n3^2 + 2*n3^3 - 14*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 14*n3*n4 - 
      7*d*n3*n4 + 3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 18*n7 + 
      11*d*n7 - d^2*n7 + 6*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + 
      d*n4*n7 + 4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, n1, 0, 1 + n3, 
      -1 + n4, 0, 1, n7, 1, 0, 1, 1, 0, 1, 1])/((-3 + d - n1 - n7)*
     (-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 
      2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 
      24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 
      14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 
      4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 
      12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 
      18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 
      24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 
      10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 
      2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 
      82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) + 
   (n3*(20 - 4*d - d^2 + 20*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 22*n3 + 3*d*n3 + 
      2*d^2*n3 - 12*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 8*n3^2 - 5*d*n3^2 + 
      2*n3^3 - 14*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 14*n3*n4 - 7*d*n3*n4 + 
      3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 18*n7 + 11*d*n7 - 
      d^2*n7 + 6*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + d*n4*n7 + 
      4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, n1, 0, 1 + n3, n4, 0, 1, n7, 1, 
      0, 1, 1, 0, 0, 1])/(84 - 142*d + 68*d^2 - 10*d^3 + 26*n1 - 35*d*n1 + 
     9*d^2*n1 + 2*n1^2 - 2*d*n1^2 + 12*n3 + 68*d*n3 - 54*d^2*n3 + 10*d^3*n3 + 
     2*n1*n3 + 24*d*n1*n3 - 9*d^2*n1*n3 + 2*d*n1^2*n3 - 84*n3^2 + 70*d*n3^2 - 
     14*d^2*n3^2 - 26*n1*n3^2 + 11*d*n1*n3^2 - 2*n1^2*n3^2 - 12*n3^3 + 
     4*d*n3^3 - 2*n1*n3^3 - 16*n4 + 54*d*n4 - 34*d^2*n4 + 6*d^3*n4 + 
     12*n1*n4 + d*n1*n4 - 2*d^2*n1*n4 + 2*n1^2*n4 - 88*n3*n4 + 82*d*n3*n4 - 
     18*d^2*n3*n4 - 24*n1*n3*n4 + 11*d*n1*n3*n4 - 2*n1^2*n3*n4 - 24*n3^2*n4 + 
     8*d*n3^2*n4 - 4*n1*n3^2*n4 - 68*n4^2 + 52*d*n4^2 - 10*d^2*n4^2 - 
     6*n1*n4^2 + 2*d*n1*n4^2 - 28*n3*n4^2 + 12*d*n3*n4^2 - 2*n1*n3*n4^2 - 
     12*n4^3 + 4*d*n4^3 - 4*n3*n4^3 + 320*n7 - 298*d*n7 + 82*d^2*n7 - 
     6*d^3*n7 + 74*n1*n7 - 36*d*n1*n7 + 2*d^2*n1*n7 + 4*n1^2*n7 - 124*n3*n7 + 
     128*d*n3*n7 - 30*d^2*n3*n7 - 48*n1*n3*n7 + 24*d*n1*n3*n7 - 
     4*n1^2*n3*n7 - 64*n3^2*n7 + 26*d*n3^2*n7 - 10*n1*n3^2*n7 - 4*n3^3*n7 + 
     124*n4*n7 - 62*d*n4*n7 + 6*d^2*n4*n7 + 18*n1*n4*n7 - 2*d*n1*n4*n7 - 
     52*n3*n4*n7 + 22*d*n3*n4*n7 - 10*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 
     4*n4^2*n7 - 4*n3*n4^2*n7 + 108*n7^2 - 52*d*n7^2 + 4*d^2*n7^2 + 
     12*n1*n7^2 - 64*n3*n7^2 + 28*d*n3*n7^2 - 12*n1*n3*n7^2 - 12*n3^2*n7^2 + 
     24*n4*n7^2 - 4*d*n4*n7^2 - 8*n3*n4*n7^2 + 8*n7^3 - 8*n3*n7^3) + 
   (n3*(-2 + d - n4)*(2 + 2*d - d^2 + 5*n1 - 4*d*n1 + d^2*n1 + 2*n3 - 
      5*d*n3 + 2*d^2*n3 + 4*n1*n3 - 2*d*n1*n3 + 2*n3^2 - 3*d*n3^2 - n1*n3^2 + 
      2*n3^3 - 2*n4 + n1*n4 - d*n1*n4 + 4*n3*n4 - d*n3*n4 + 3*n1*n3*n4 + 
      2*n3^2*n4 + 2*n4^2 - 2*n3*n4^2 - 24*n7 + 13*d*n7 - d^2*n7 - 2*n1*n7 + 
      12*n3*n7 - 7*d*n3*n7 + 2*n1*n3*n7 + 4*n3^2*n7 - 6*n4*n7 + d*n4*n7 + 
      2*n3*n4*n7 - 4*n7^2 + 4*n3*n7^2)*j[p4a, n1, 0, 1 + n3, n4, 0, 1, n7, 1, 
      0, 1, 1, 0, 1, 0])/((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 
      26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 
      54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 
      2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 
      11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 
      54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 
      2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 
      11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 
      4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 
      2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 
      4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 
      74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 4*n1^2*n7 + 124*n3*n7 - 
      128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 24*d*n1*n3*n7 + 
      4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 10*n1*n3^2*n7 + 4*n3^3*n7 - 
      124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 18*n1*n4*n7 + 2*d*n1*n4*n7 + 
      52*n3*n4*n7 - 22*d*n3*n4*n7 + 10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 
      4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 52*d*n7^2 - 4*d^2*n7^2 - 
      12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 12*n1*n3*n7^2 + 12*n3^2*n7^2 - 
      24*n4*n7^2 + 4*d*n4*n7^2 + 8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) + 
   ((-2 + d - n4)*(2 + 2*d - d^2 + 5*n1 - 4*d*n1 + d^2*n1 + 2*n3 - 5*d*n3 + 
      2*d^2*n3 + 4*n1*n3 - 2*d*n1*n3 + 2*n3^2 - 3*d*n3^2 - n1*n3^2 + 2*n3^3 - 
      2*n4 + n1*n4 - d*n1*n4 + 4*n3*n4 - d*n3*n4 + 3*n1*n3*n4 + 2*n3^2*n4 + 
      2*n4^2 - 2*n3*n4^2 - 24*n7 + 13*d*n7 - d^2*n7 - 2*n1*n7 + 12*n3*n7 - 
      7*d*n3*n7 + 2*n1*n3*n7 + 4*n3^2*n7 - 6*n4*n7 + d*n4*n7 + 2*n3*n4*n7 - 
      4*n7^2 + 4*n3*n7^2)*j[p4a, 1 + n1, -1, n3, n4, 0, 0, n7, 1, 0, 2, 1, 0, 
      1, 1])/((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 
      35*d*n1 - 9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 
      10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 
      84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 
      2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 
      34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 
      88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 
      2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 
      52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 
      12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 
      298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) + 
   ((-2 + d - n4)*(20 - 4*d - d^2 + 20*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 
      22*n3 + 3*d*n3 + 2*d^2*n3 - 12*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 8*n3^2 - 
      5*d*n3^2 + 2*n3^3 - 14*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 14*n3*n4 - 
      7*d*n3*n4 + 3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 18*n7 + 
      11*d*n7 - d^2*n7 + 6*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + 
      d*n4*n7 + 4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, -1, n3, n4, 
      0, 1, n7, 0, 0, 1, 2, 0, 1, 1])/((-3 + d - n1 - n7)*
     (-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 
      2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 
      24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 
      14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 
      4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 
      12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 
      18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 
      24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 
      10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 
      2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 
      82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) + 
   ((20 - 4*d - d^2 + 20*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 22*n3 + 3*d*n3 + 
      2*d^2*n3 - 12*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 8*n3^2 - 5*d*n3^2 + 
      2*n3^3 - 14*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 14*n3*n4 - 7*d*n3*n4 + 
      3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 18*n7 + 11*d*n7 - 
      d^2*n7 + 6*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + d*n4*n7 + 
      4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, -1, n3, n4, 0, 1, n7, 
      2, 0, 1, 0, 0, 1, 1])/(84 - 142*d + 68*d^2 - 10*d^3 + 26*n1 - 35*d*n1 + 
     9*d^2*n1 + 2*n1^2 - 2*d*n1^2 + 12*n3 + 68*d*n3 - 54*d^2*n3 + 10*d^3*n3 + 
     2*n1*n3 + 24*d*n1*n3 - 9*d^2*n1*n3 + 2*d*n1^2*n3 - 84*n3^2 + 70*d*n3^2 - 
     14*d^2*n3^2 - 26*n1*n3^2 + 11*d*n1*n3^2 - 2*n1^2*n3^2 - 12*n3^3 + 
     4*d*n3^3 - 2*n1*n3^3 - 16*n4 + 54*d*n4 - 34*d^2*n4 + 6*d^3*n4 + 
     12*n1*n4 + d*n1*n4 - 2*d^2*n1*n4 + 2*n1^2*n4 - 88*n3*n4 + 82*d*n3*n4 - 
     18*d^2*n3*n4 - 24*n1*n3*n4 + 11*d*n1*n3*n4 - 2*n1^2*n3*n4 - 24*n3^2*n4 + 
     8*d*n3^2*n4 - 4*n1*n3^2*n4 - 68*n4^2 + 52*d*n4^2 - 10*d^2*n4^2 - 
     6*n1*n4^2 + 2*d*n1*n4^2 - 28*n3*n4^2 + 12*d*n3*n4^2 - 2*n1*n3*n4^2 - 
     12*n4^3 + 4*d*n4^3 - 4*n3*n4^3 + 320*n7 - 298*d*n7 + 82*d^2*n7 - 
     6*d^3*n7 + 74*n1*n7 - 36*d*n1*n7 + 2*d^2*n1*n7 + 4*n1^2*n7 - 124*n3*n7 + 
     128*d*n3*n7 - 30*d^2*n3*n7 - 48*n1*n3*n7 + 24*d*n1*n3*n7 - 
     4*n1^2*n3*n7 - 64*n3^2*n7 + 26*d*n3^2*n7 - 10*n1*n3^2*n7 - 4*n3^3*n7 + 
     124*n4*n7 - 62*d*n4*n7 + 6*d^2*n4*n7 + 18*n1*n4*n7 - 2*d*n1*n4*n7 - 
     52*n3*n4*n7 + 22*d*n3*n4*n7 - 10*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 
     4*n4^2*n7 - 4*n3*n4^2*n7 + 108*n7^2 - 52*d*n7^2 + 4*d^2*n7^2 + 
     12*n1*n7^2 - 64*n3*n7^2 + 28*d*n3*n7^2 - 12*n1*n3*n7^2 - 12*n3^2*n7^2 + 
     24*n4*n7^2 - 4*d*n4*n7^2 - 8*n3*n4*n7^2 + 8*n7^3 - 8*n3*n7^3) + 
   ((-1 + n3)*(-2 + d - n4)*n7*(18 - 6*d + 15*n1 - 4*d*n1 + 2*n1^2 - 6*n3 + 
      2*d*n3 - n1*n3 - 12*n4 + 6*d*n4 - 2*n3*n4 - 4*n4^2 + 6*n7 - 2*d*n7 + 
      2*n1*n7 - 2*n4*n7 + 2*n7^2)*j[p4a, 1 + n1, -1, n3, n4, 0, 1, 1 + n7, 1, 
      0, 1, 1, 0, 0, 1])/((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 
      26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 
      54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 
      2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 
      11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 
      54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 
      2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 
      11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 
      4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 
      2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 
      4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 
      74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 4*n1^2*n7 + 124*n3*n7 - 
      128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 24*d*n1*n3*n7 + 
      4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 10*n1*n3^2*n7 + 4*n3^3*n7 - 
      124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 18*n1*n4*n7 + 2*d*n1*n4*n7 + 
      52*n3*n4*n7 - 22*d*n3*n4*n7 + 10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 
      4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 52*d*n7^2 - 4*d^2*n7^2 - 
      12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 12*n1*n3*n7^2 + 12*n3^2*n7^2 - 
      24*n4*n7^2 + 4*d*n4*n7^2 + 8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) + 
   ((20 - 4*d - d^2 + 20*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 22*n3 + 3*d*n3 + 
      2*d^2*n3 - 12*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 8*n3^2 - 5*d*n3^2 + 
      2*n3^3 - 14*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 14*n3*n4 - 7*d*n3*n4 + 
      3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 18*n7 + 11*d*n7 - 
      d^2*n7 + 6*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + d*n4*n7 + 
      4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, -1, n3, n4, 0, 2, n7, 
      1, 0, 0, 1, 0, 1, 1])/(84 - 142*d + 68*d^2 - 10*d^3 + 26*n1 - 35*d*n1 + 
     9*d^2*n1 + 2*n1^2 - 2*d*n1^2 + 12*n3 + 68*d*n3 - 54*d^2*n3 + 10*d^3*n3 + 
     2*n1*n3 + 24*d*n1*n3 - 9*d^2*n1*n3 + 2*d*n1^2*n3 - 84*n3^2 + 70*d*n3^2 - 
     14*d^2*n3^2 - 26*n1*n3^2 + 11*d*n1*n3^2 - 2*n1^2*n3^2 - 12*n3^3 + 
     4*d*n3^3 - 2*n1*n3^3 - 16*n4 + 54*d*n4 - 34*d^2*n4 + 6*d^3*n4 + 
     12*n1*n4 + d*n1*n4 - 2*d^2*n1*n4 + 2*n1^2*n4 - 88*n3*n4 + 82*d*n3*n4 - 
     18*d^2*n3*n4 - 24*n1*n3*n4 + 11*d*n1*n3*n4 - 2*n1^2*n3*n4 - 24*n3^2*n4 + 
     8*d*n3^2*n4 - 4*n1*n3^2*n4 - 68*n4^2 + 52*d*n4^2 - 10*d^2*n4^2 - 
     6*n1*n4^2 + 2*d*n1*n4^2 - 28*n3*n4^2 + 12*d*n3*n4^2 - 2*n1*n3*n4^2 - 
     12*n4^3 + 4*d*n4^3 - 4*n3*n4^3 + 320*n7 - 298*d*n7 + 82*d^2*n7 - 
     6*d^3*n7 + 74*n1*n7 - 36*d*n1*n7 + 2*d^2*n1*n7 + 4*n1^2*n7 - 124*n3*n7 + 
     128*d*n3*n7 - 30*d^2*n3*n7 - 48*n1*n3*n7 + 24*d*n1*n3*n7 - 
     4*n1^2*n3*n7 - 64*n3^2*n7 + 26*d*n3^2*n7 - 10*n1*n3^2*n7 - 4*n3^3*n7 + 
     124*n4*n7 - 62*d*n4*n7 + 6*d^2*n4*n7 + 18*n1*n4*n7 - 2*d*n1*n4*n7 - 
     52*n3*n4*n7 + 22*d*n3*n4*n7 - 10*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 
     4*n4^2*n7 - 4*n3*n4^2*n7 + 108*n7^2 - 52*d*n7^2 + 4*d^2*n7^2 + 
     12*n1*n7^2 - 64*n3*n7^2 + 28*d*n3*n7^2 - 12*n1*n3*n7^2 - 12*n3^2*n7^2 + 
     24*n4*n7^2 - 4*d*n4*n7^2 - 8*n3*n4*n7^2 + 8*n7^3 - 8*n3*n7^3) + 
   (2*n3*(20 - 4*d - d^2 + 20*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 22*n3 + 
      3*d*n3 + 2*d^2*n3 - 12*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 8*n3^2 - 
      5*d*n3^2 + 2*n3^3 - 14*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 14*n3*n4 - 
      7*d*n3*n4 + 3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 18*n7 + 
      11*d*n7 - d^2*n7 + 6*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + 
      d*n4*n7 + 4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, -1, 1 + n3, 
      n4, 0, 1, -1 + n7, 1, 0, 1, 1, 0, 1, 1])/(84 - 142*d + 68*d^2 - 
     10*d^3 + 26*n1 - 35*d*n1 + 9*d^2*n1 + 2*n1^2 - 2*d*n1^2 + 12*n3 + 
     68*d*n3 - 54*d^2*n3 + 10*d^3*n3 + 2*n1*n3 + 24*d*n1*n3 - 9*d^2*n1*n3 + 
     2*d*n1^2*n3 - 84*n3^2 + 70*d*n3^2 - 14*d^2*n3^2 - 26*n1*n3^2 + 
     11*d*n1*n3^2 - 2*n1^2*n3^2 - 12*n3^3 + 4*d*n3^3 - 2*n1*n3^3 - 16*n4 + 
     54*d*n4 - 34*d^2*n4 + 6*d^3*n4 + 12*n1*n4 + d*n1*n4 - 2*d^2*n1*n4 + 
     2*n1^2*n4 - 88*n3*n4 + 82*d*n3*n4 - 18*d^2*n3*n4 - 24*n1*n3*n4 + 
     11*d*n1*n3*n4 - 2*n1^2*n3*n4 - 24*n3^2*n4 + 8*d*n3^2*n4 - 4*n1*n3^2*n4 - 
     68*n4^2 + 52*d*n4^2 - 10*d^2*n4^2 - 6*n1*n4^2 + 2*d*n1*n4^2 - 
     28*n3*n4^2 + 12*d*n3*n4^2 - 2*n1*n3*n4^2 - 12*n4^3 + 4*d*n4^3 - 
     4*n3*n4^3 + 320*n7 - 298*d*n7 + 82*d^2*n7 - 6*d^3*n7 + 74*n1*n7 - 
     36*d*n1*n7 + 2*d^2*n1*n7 + 4*n1^2*n7 - 124*n3*n7 + 128*d*n3*n7 - 
     30*d^2*n3*n7 - 48*n1*n3*n7 + 24*d*n1*n3*n7 - 4*n1^2*n3*n7 - 64*n3^2*n7 + 
     26*d*n3^2*n7 - 10*n1*n3^2*n7 - 4*n3^3*n7 + 124*n4*n7 - 62*d*n4*n7 + 
     6*d^2*n4*n7 + 18*n1*n4*n7 - 2*d*n1*n4*n7 - 52*n3*n4*n7 + 22*d*n3*n4*n7 - 
     10*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 4*n4^2*n7 - 4*n3*n4^2*n7 + 108*n7^2 - 
     52*d*n7^2 + 4*d^2*n7^2 + 12*n1*n7^2 - 64*n3*n7^2 + 28*d*n3*n7^2 - 
     12*n1*n3*n7^2 - 12*n3^2*n7^2 + 24*n4*n7^2 - 4*d*n4*n7^2 - 8*n3*n4*n7^2 + 
     8*n7^3 - 8*n3*n7^3) - (n3*(20 - 4*d - d^2 + 20*n1 - 8*d*n1 + d^2*n1 + 
      2*n1^2 - 22*n3 + 3*d*n3 + 2*d^2*n3 - 12*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 
      8*n3^2 - 5*d*n3^2 + 2*n3^3 - 14*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 
      14*n3*n4 - 7*d*n3*n4 + 3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 
      18*n7 + 11*d*n7 - d^2*n7 + 6*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + 
      d*n4*n7 + 4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, -1, 1 + n3, 
      n4, 0, 1, n7, 1, 0, 1, 1, 0, 0, 1])/(84 - 142*d + 68*d^2 - 10*d^3 + 
     26*n1 - 35*d*n1 + 9*d^2*n1 + 2*n1^2 - 2*d*n1^2 + 12*n3 + 68*d*n3 - 
     54*d^2*n3 + 10*d^3*n3 + 2*n1*n3 + 24*d*n1*n3 - 9*d^2*n1*n3 + 
     2*d*n1^2*n3 - 84*n3^2 + 70*d*n3^2 - 14*d^2*n3^2 - 26*n1*n3^2 + 
     11*d*n1*n3^2 - 2*n1^2*n3^2 - 12*n3^3 + 4*d*n3^3 - 2*n1*n3^3 - 16*n4 + 
     54*d*n4 - 34*d^2*n4 + 6*d^3*n4 + 12*n1*n4 + d*n1*n4 - 2*d^2*n1*n4 + 
     2*n1^2*n4 - 88*n3*n4 + 82*d*n3*n4 - 18*d^2*n3*n4 - 24*n1*n3*n4 + 
     11*d*n1*n3*n4 - 2*n1^2*n3*n4 - 24*n3^2*n4 + 8*d*n3^2*n4 - 4*n1*n3^2*n4 - 
     68*n4^2 + 52*d*n4^2 - 10*d^2*n4^2 - 6*n1*n4^2 + 2*d*n1*n4^2 - 
     28*n3*n4^2 + 12*d*n3*n4^2 - 2*n1*n3*n4^2 - 12*n4^3 + 4*d*n4^3 - 
     4*n3*n4^3 + 320*n7 - 298*d*n7 + 82*d^2*n7 - 6*d^3*n7 + 74*n1*n7 - 
     36*d*n1*n7 + 2*d^2*n1*n7 + 4*n1^2*n7 - 124*n3*n7 + 128*d*n3*n7 - 
     30*d^2*n3*n7 - 48*n1*n3*n7 + 24*d*n1*n3*n7 - 4*n1^2*n3*n7 - 64*n3^2*n7 + 
     26*d*n3^2*n7 - 10*n1*n3^2*n7 - 4*n3^3*n7 + 124*n4*n7 - 62*d*n4*n7 + 
     6*d^2*n4*n7 + 18*n1*n4*n7 - 2*d*n1*n4*n7 - 52*n3*n4*n7 + 22*d*n3*n4*n7 - 
     10*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 4*n4^2*n7 - 4*n3*n4^2*n7 + 108*n7^2 - 
     52*d*n7^2 + 4*d^2*n7^2 + 12*n1*n7^2 - 64*n3*n7^2 + 28*d*n3*n7^2 - 
     12*n1*n3*n7^2 - 12*n3^2*n7^2 + 24*n4*n7^2 - 4*d*n4*n7^2 - 8*n3*n4*n7^2 + 
     8*n7^3 - 8*n3*n7^3) - (n3*(-2 + d - n4)*(2 + 2*d - d^2 + 5*n1 - 4*d*n1 + 
      d^2*n1 + 2*n3 - 5*d*n3 + 2*d^2*n3 + 4*n1*n3 - 2*d*n1*n3 + 2*n3^2 - 
      3*d*n3^2 - n1*n3^2 + 2*n3^3 - 2*n4 + n1*n4 - d*n1*n4 + 4*n3*n4 - 
      d*n3*n4 + 3*n1*n3*n4 + 2*n3^2*n4 + 2*n4^2 - 2*n3*n4^2 - 24*n7 + 
      13*d*n7 - d^2*n7 - 2*n1*n7 + 12*n3*n7 - 7*d*n3*n7 + 2*n1*n3*n7 + 
      4*n3^2*n7 - 6*n4*n7 + d*n4*n7 + 2*n3*n4*n7 - 4*n7^2 + 4*n3*n7^2)*
     j[p4a, 1 + n1, -1, 1 + n3, n4, 0, 1, n7, 1, 0, 1, 1, 0, 1, 0])/
    ((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 
      9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 
      10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 
      84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 
      2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 
      34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 
      88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 
      2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 
      52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 
      12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 
      298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) + 
   ((-1 + n3)*(-2 + d - n4)*(18 - 6*d + 15*n1 - 4*d*n1 + 2*n1^2 - 6*n3 + 
      2*d*n3 - n1*n3 - 12*n4 + 6*d*n4 - 2*n3*n4 - 4*n4^2 + 6*n7 - 2*d*n7 + 
      2*n1*n7 - 2*n4*n7 + 2*n7^2)*j[p4a, 1 + n1, 0, -1 + n3, n4, 0, 0, n7, 1, 
      0, 2, 1, 0, 1, 1])/((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 
      26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 
      54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 
      2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 
      11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 
      54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 
      2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 
      11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 
      4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 
      2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 
      4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 
      74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 4*n1^2*n7 + 124*n3*n7 - 
      128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 24*d*n1*n3*n7 + 
      4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 10*n1*n3^2*n7 + 4*n3^3*n7 - 
      124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 18*n1*n4*n7 + 2*d*n1*n4*n7 + 
      52*n3*n4*n7 - 22*d*n3*n4*n7 + 10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 
      4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 52*d*n7^2 - 4*d^2*n7^2 - 
      12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 12*n1*n3*n7^2 + 12*n3^2*n7^2 - 
      24*n4*n7^2 + 4*d*n4*n7^2 + 8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) + 
   ((-1484 + 2112*d - 1097*d^2 + 246*d^3 - 20*d^4 - 1304*n1 + 1498*d*n1 - 
      559*d^2*n1 + 68*d^3*n1 - 324*n1^2 + 270*d*n1^2 - 54*d^2*n1^2 - 
      24*n1^3 + 12*d*n1^3 + 894*n3 - 1527*d*n3 + 913*d^2*n3 - 228*d^3*n3 + 
      20*d^4*n3 + 828*n1*n3 - 1147*d*n1*n3 + 496*d^2*n1*n3 - 68*d^3*n1*n3 + 
      234*n1^2*n3 - 234*d*n1^2*n3 + 54*d^2*n1^2*n3 + 20*n1^3*n3 - 
      12*d*n1^3*n3 + 522*n3^2 - 548*d*n3^2 + 180*d^2*n3^2 - 18*d^3*n3^2 + 
      422*n1*n3^2 - 332*d*n1*n3^2 + 63*d^2*n1*n3^2 + 84*n1^2*n3^2 - 
      36*d*n1^2*n3^2 + 4*n1^3*n3^2 + 66*n3^3 - 37*d*n3^3 + 4*d^2*n3^3 + 
      52*n1*n3^3 - 19*d*n1*n3^3 + 6*n1^2*n3^3 + 2*n3^4 + 2*n1*n3^4 + 376*n4 - 
      838*d*n4 + 555*d^2*n4 - 142*d^3*n4 + 12*d^4*n4 - 212*n1*n4 - 
      8*d*n1*n4 + 76*d^2*n1*n4 - 16*d^3*n1*n4 - 100*n1^2*n4 + 24*d*n1^2*n4 + 
      4*d^2*n1^2*n4 - 8*n1^3*n4 + 522*n3*n4 - 480*d*n3*n4 + 117*d^2*n3*n4 - 
      4*d^3*n3*n4 + 474*n1*n3*n4 - 364*d*n1*n3*n4 + 66*d^2*n1*n3*n4 + 
      116*n1^2*n3*n4 - 48*d*n1^2*n3*n4 + 8*n1^3*n3*n4 + 22*n3^2*n4 + 
      41*d*n3^2*n4 - 20*d^2*n3^2*n4 + 102*n1*n3^2*n4 - 32*d*n1*n3^2*n4 + 
      16*n1^2*n3^2*n4 - 22*n3^3*n4 + 13*d*n3^3*n4 + 4*n1*n3^3*n4 - 
      2*n3^4*n4 + 826*n4^2 - 836*d*n4^2 + 266*d^2*n4^2 - 26*d^3*n4^2 + 
      210*n1*n4^2 - 154*d*n1*n4^2 + 26*d^2*n1*n4^2 + 8*n1^2*n4^2 - 
      4*d*n1^2*n4^2 + 50*n3*n4^2 + 19*d*n3*n4^2 - 16*d^2*n3*n4^2 + 
      56*n1*n3*n4^2 - 16*d*n1*n3*n4^2 + 8*n1^2*n3*n4^2 - 68*n3^2*n4^2 + 
      33*d*n3^2*n4^2 - 2*n1*n3^2*n4^2 - 8*n3^3*n4^2 + 218*n4^3 - 130*d*n4^3 + 
      18*d^2*n4^3 + 38*n1*n4^3 - 10*d*n1*n4^3 - 2*n3*n4^3 + 6*d*n3*n4^3 + 
      2*n1*n3*n4^3 - 8*n3^2*n4^3 + 16*n4^4 - 4*d*n4^4 - 2830*n7 + 3317*d*n7 - 
      1368*d^2*n7 + 228*d^3*n7 - 12*d^4*n7 - 1636*n1*n7 + 1339*d*n1*n7 - 
      312*d^2*n1*n7 + 16*d^3*n1*n7 - 266*n1^2*n7 + 114*d*n1^2*n7 - 
      4*d^2*n1^2*n7 - 12*n1^3*n7 + 1282*n3*n7 - 1603*d*n3*n7 + 
      640*d^2*n3*n7 - 82*d^3*n3*n7 + 958*n1*n3*n7 - 822*d*n1*n3*n7 + 
      170*d^2*n1*n3*n7 + 204*n1^2*n3*n7 - 90*d*n1^2*n3*n7 + 12*n1^3*n3*n7 + 
      588*n3^2*n7 - 429*d*n3^2*n7 + 76*d^2*n3^2*n7 + 292*n1*n3^2*n7 - 
      113*d*n1*n3^2*n7 + 30*n1^2*n3^2*n7 + 62*n3^3*n7 - 21*d*n3^3*n7 + 
      18*n1*n3^3*n7 + 2*n3^4*n7 - 892*n4*n7 + 674*d*n4*n7 - 159*d^2*n4*n7 + 
      12*d^3*n4*n7 - 488*n1*n4*n7 + 214*d*n1*n4*n7 - 16*d^2*n1*n4*n7 - 
      52*n1^2*n4*n7 + 4*d*n1^2*n4*n7 + 378*n3*n4*n7 - 252*d*n3*n4*n7 + 
      37*d^2*n3*n4*n7 + 270*n1*n3*n4*n7 - 104*d*n1*n3*n4*n7 + 
      36*n1^2*n3*n4*n7 + 66*n3^2*n4*n7 - 14*d*n3^2*n4*n7 + 34*n1*n3^2*n4*n7 + 
      62*n4^2*n7 - 41*d*n4^2*n7 + 4*d^2*n4^2*n7 - 10*n1*n4^2*n7 - 
      18*n3*n4^2*n7 + 17*d*n3*n4^2*n7 + 10*n1*n3*n4^2*n7 - 12*n3^2*n4^2*n7 + 
      22*n4^3*n7 - 4*d*n4^3*n7 - 6*n3*n4^3*n7 - 1284*n7^2 + 1033*d*n7^2 - 
      243*d^2*n7^2 + 14*d^3*n7^2 - 468*n1*n7^2 + 200*d*n1*n7^2 - 
      10*d^2*n1*n7^2 - 36*n1^2*n7^2 + 712*n3*n7^2 - 580*d*n3*n7^2 + 
      115*d^2*n3*n7^2 + 340*n1*n3*n7^2 - 140*d*n1*n3*n7^2 + 36*n1^2*n3*n7^2 + 
      208*n3^2*n7^2 - 77*d*n3^2*n7^2 + 48*n1*n3^2*n7^2 + 12*n3^3*n7^2 - 
      370*n4*n7^2 + 177*d*n4*n7^2 - 18*d^2*n4*n7^2 - 84*n1*n4*n7^2 + 
      10*d*n1*n4*n7^2 + 144*n3*n4*n7^2 - 53*d*n3*n4*n7^2 + 44*n1*n3*n4*n7^2 + 
      18*n3^2*n4*n7^2 - 16*n4^2*n7^2 + 4*d*n4^2*n7^2 - 214*n7^3 + 88*d*n7^3 - 
      4*d^2*n7^3 - 36*n1*n7^3 + 160*n3*n7^3 - 64*d*n3*n7^3 + 36*n1*n3*n7^3 + 
      22*n3^2*n7^3 - 34*n4*n7^3 + 4*d*n4*n7^3 + 18*n3*n4*n7^3 - 12*n7^4 + 
      12*n3*n7^4)*j[p4a, 1 + n1, 0, -1 + n3, n4, 0, 1, n7, 1, 0, 1, 1, 0, 1, 
      1])/((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 
      35*d*n1 - 9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 
      10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 
      84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 
      2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 
      34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 
      88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 
      2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 
      52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 
      12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 
      298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) + 
   ((136 - 108*d + 24*d^2 - d^3 + 116*n1 - 64*d*n1 + 5*d^2*n1 + d^3*n1 + 
      26*n1^2 - 6*d*n1^2 - d^2*n1^2 + 2*n1^3 - 164*n3 + 146*d*n3 - 
      37*d^2*n3 + 2*d^3*n3 - 140*n1*n3 + 97*d*n1*n3 - 16*d^2*n1*n3 - 
      32*n1^2*n3 + 12*d*n1^2*n3 - 2*n1^3*n3 - 8*n3^2 - 4*d*n3^2 + 
      3*d^2*n3^2 - 16*n1*n3^2 + 5*d*n1*n3^2 - 2*n1^2*n3^2 + 4*n3^3 - 
      2*d*n3^3 - 90*n4 + 80*d*n4 - 17*d^2*n4 - 19*n1*n4 + 15*d*n1*n4 - 
      2*d^2*n1*n4 - n1^2*n4 + d*n1^2*n4 + 38*n3*n4 - 53*d*n3*n4 + 
      15*d^2*n3*n4 - 10*n1*n3*n4 - 3*n1^2*n3*n4 + 26*n3^2*n4 - 13*d*n3^2*n4 + 
      n1*n3^2*n4 + 2*n3^3*n4 - 38*n4^2 + 14*d*n4^2 - 7*n1*n4^2 + d*n1*n4^2 + 
      28*n3*n4^2 - 13*d*n3*n4^2 + 3*n1*n3*n4^2 + 6*n3^2*n4^2 - 2*n4^3 + 
      2*n3*n4^3 + 180*n7 - 122*d*n7 + 23*d^2*n7 - d^3*n7 + 84*n1*n7 - 
      31*d*n1*n7 + d^2*n1*n7 + 8*n1^2*n7 - 132*n3*n7 + 86*d*n3*n7 - 
      13*d^2*n3*n7 - 70*n1*n3*n7 + 25*d*n1*n3*n7 - 8*n1^2*n3*n7 - 
      16*n3^2*n7 + 4*d*n3^2*n7 - 6*n1*n3^2*n7 + 8*n4*n7 - 5*d*n4*n7 + 
      2*d^2*n4*n7 + 6*n1*n4*n7 - d*n1*n4*n7 + 12*n3*n4*n7 - 9*d*n3*n4*n7 - 
      2*n1*n3*n4*n7 + 4*n3^2*n4*n7 - 2*n4^2*n7 - d*n4^2*n7 + 6*n3*n4^2*n7 + 
      44*n7^2 - 14*d*n7^2 + 10*n1*n7^2 - 40*n3*n7^2 + 14*d*n3*n7^2 - 
      10*n1*n3*n7^2 - 4*n3^2*n7^2 + 4*n7^3 - 4*n3*n7^3)*
     j[p4a, 1 + n1, 0, -1 + n3, n4, 0, 1, n7, 1, 0, 1, 1, 0, 1, 2])/
    ((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 
      9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 
      10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 
      84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 
      2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 
      34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 
      88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 
      2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 
      52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 
      12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 
      298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) + 
   ((184 - 202*d + 71*d^2 - 8*d^3 + 126*n1 - 115*d*n1 + 30*d^2*n1 - 
      2*d^3*n1 + 12*n1^2 - 6*d*n1^2 - 98*n3 + 127*d*n3 - 50*d^2*n3 + 
      6*d^3*n3 - 58*n1*n3 + 58*d*n1*n3 - 13*d^2*n1*n3 - 10*n1^2*n3 + 
      6*d*n1^2*n3 - 44*n3^2 + 29*d*n3^2 - 4*d^2*n3^2 - 26*n1*n3^2 + 
      11*d*n1*n3^2 - 2*n1^2*n3^2 - 2*n3^3 - 2*n1*n3^3 - 66*n4 + 108*d*n4 - 
      47*d^2*n4 + 6*d^3*n4 + 37*n1*n4 - 14*d*n1*n4 + d^2*n1*n4 + 4*n1^2*n4 - 
      40*n3*n4 + 22*d*n3*n4 - 2*d^2*n3*n4 - 21*n1*n3*n4 + 7*d*n1*n3*n4 - 
      4*n1^2*n3*n4 + 4*n3^2*n4 - 5*d*n3^2*n4 - 4*n1*n3^2*n4 + 2*n3^3*n4 - 
      92*n4^2 + 62*d*n4^2 - 10*d^2*n4^2 - 5*n1*n4^2 + d*n1*n4^2 - 4*n3*n4^2 + 
      d*n3*n4^2 + n1*n3*n4^2 + 4*n3^2*n4^2 - 14*n4^3 + 4*d*n4^3 - 2*n3*n4^3 + 
      250*n7 - 211*d*n7 + 54*d^2*n7 - 4*d^3*n7 + 94*n1*n7 - 44*d*n1*n7 + 
      3*d^2*n1*n7 + 6*n1^2*n7 - 116*n3*n7 + 94*d*n3*n7 - 18*d^2*n3*n7 - 
      60*n1*n3*n7 + 26*d*n1*n3*n7 - 6*n1^2*n3*n7 - 36*n3^2*n7 + 
      13*d*n3^2*n7 - 10*n1*n3^2*n7 - 2*n3^3*n7 + 52*n4*n7 - 24*d*n4*n7 + 
      3*d^2*n4*n7 + 19*n1*n4*n7 - 3*d*n1*n4*n7 - 12*n3*n4*n7 + 2*d*n3*n4*n7 - 
      7*n1*n3*n4*n7 - 6*n4^2*n7 + d*n4^2*n7 + 2*n3*n4^2*n7 + 80*n7^2 - 
      37*d*n7^2 + 3*d^2*n7^2 + 12*n1*n7^2 - 48*n3*n7^2 + 19*d*n3*n7^2 - 
      12*n1*n3*n7^2 - 8*n3^2*n7^2 + 14*n4*n7^2 - 3*d*n4*n7^2 - 2*n3*n4*n7^2 + 
      6*n7^3 - 6*n3*n7^3)*j[p4a, 1 + n1, 0, -1 + n3, n4, 0, 1, n7, 1, 0, 1, 
      1, 0, 2, 1])/((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 
      26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 
      54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 
      2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 
      11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 
      54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 
      2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 
      11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 
      4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 
      2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 
      4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 
      74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 4*n1^2*n7 + 124*n3*n7 - 
      128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 24*d*n1*n3*n7 + 
      4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 10*n1*n3^2*n7 + 4*n3^3*n7 - 
      124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 18*n1*n4*n7 + 2*d*n1*n4*n7 + 
      52*n3*n4*n7 - 22*d*n3*n4*n7 + 10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 
      4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 52*d*n7^2 - 4*d^2*n7^2 - 
      12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 12*n1*n3*n7^2 + 12*n3^2*n7^2 - 
      24*n4*n7^2 + 4*d*n4*n7^2 + 8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) - 
   ((-1 + n3)*(-2 + d - n4)*n7*(18 - 6*d + 15*n1 - 4*d*n1 + 2*n1^2 - 6*n3 + 
      2*d*n3 - n1*n3 - 12*n4 + 6*d*n4 - 2*n3*n4 - 4*n4^2 + 6*n7 - 2*d*n7 + 
      2*n1*n7 - 2*n4*n7 + 2*n7^2)*j[p4a, 1 + n1, 0, -1 + n3, n4, 0, 1, 
      1 + n7, 0, 0, 1, 1, 0, 1, 1])/((-3 + d - n1 - n7)*
     (-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 
      2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 
      24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 
      14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 
      4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 
      12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 
      18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 
      24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 
      10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 
      2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 
      82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) + 
   ((-3 + d - n3)*(-2 + d - n4)*n7*(18 - 6*d + 15*n1 - 4*d*n1 + 2*n1^2 - 
      6*n3 + 2*d*n3 - n1*n3 - 12*n4 + 6*d*n4 - 2*n3*n4 - 4*n4^2 + 6*n7 - 
      2*d*n7 + 2*n1*n7 - 2*n4*n7 + 2*n7^2)*j[p4a, 1 + n1, 0, -1 + n3, n4, 0, 
      1, 1 + n7, 1, 0, 0, 1, 0, 1, 1])/((-3 + d - n1 - n7)*
     (-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 
      2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 
      24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 
      14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 
      4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 
      12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 
      18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 
      24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 
      10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 
      2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 
      82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) - 
   ((-3 + d - n3)*(-2 + d - n4)*n7*(18 - 6*d + 15*n1 - 4*d*n1 + 2*n1^2 - 
      6*n3 + 2*d*n3 - n1*n3 - 12*n4 + 6*d*n4 - 2*n3*n4 - 4*n4^2 + 6*n7 - 
      2*d*n7 + 2*n1*n7 - 2*n4*n7 + 2*n7^2)*j[p4a, 1 + n1, 0, -1 + n3, n4, 0, 
      1, 1 + n7, 1, 0, 1, 0, 0, 1, 1])/((-3 + d - n1 - n7)*
     (-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 
      2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 
      24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 
      14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 
      4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 
      12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 
      18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 
      24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 
      10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 
      2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 
      82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) + 
   ((-4 + d)*(-2 + d - n4)*n4*(18 - 6*d + 15*n1 - 4*d*n1 + 2*n1^2 - 6*n3 + 
      2*d*n3 - n1*n3 - 12*n4 + 6*d*n4 - 2*n3*n4 - 4*n4^2 + 6*n7 - 2*d*n7 + 
      2*n1*n7 - 2*n4*n7 + 2*n7^2)*j[p4a, 1 + n1, 0, -1 + n3, 1 + n4, 0, 0, 
      n7, 1, 0, 1, 1, 0, 1, 1])/((-3 + d - n1 - n7)*
     (-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 
      2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 
      24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 
      14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 
      4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 
      12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 
      18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 
      24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 
      10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 
      2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 
      82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) - 
   ((-4 + d)*(-2 + d - n4)*n4*(18 - 6*d + 15*n1 - 4*d*n1 + 2*n1^2 - 6*n3 + 
      2*d*n3 - n1*n3 - 12*n4 + 6*d*n4 - 2*n3*n4 - 4*n4^2 + 6*n7 - 2*d*n7 + 
      2*n1*n7 - 2*n4*n7 + 2*n7^2)*j[p4a, 1 + n1, 0, -1 + n3, 1 + n4, 0, 1, 
      n7, 0, 0, 1, 1, 0, 1, 1])/((-3 + d - n1 - n7)*
     (-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 
      2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 
      24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 
      14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 
      4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 
      12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 
      18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 
      24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 
      10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 
      2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 
      82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) + 
   ((-2 + d - n4)*(20 - 4*d - d^2 + 20*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 
      22*n3 + 3*d*n3 + 2*d^2*n3 - 12*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 8*n3^2 - 
      5*d*n3^2 + 2*n3^3 - 14*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 14*n3*n4 - 
      7*d*n3*n4 + 3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 18*n7 + 
      11*d*n7 - d^2*n7 + 6*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + 
      d*n4*n7 + 4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, 0, n3, 
      -1 + n4, 0, 1, n7, 0, 0, 1, 2, 0, 1, 1])/((-3 + d - n1 - n7)*
     (-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 
      2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 
      24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 
      14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 
      4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 
      12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 
      18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 
      24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 
      10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 
      2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 
      82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) - 
   ((-2 + d - n4)*(76 - 76*d + 23*d^2 - 2*d^3 + 36*n1 - 16*d*n1 - 5*d^2*n1 + 
      2*d^3*n1 + 4*d*n1^2 - 2*d^2*n1^2 - 78*n3 + 111*d*n3 - 41*d^2*n3 + 
      4*d^3*n3 - 62*n1*n3 + 68*d*n1*n3 - 15*d^2*n1*n3 - 12*n1^2*n3 + 
      8*d*n1^2*n3 - 54*n3^2 + 22*d*n3^2 - 36*n1*n3^2 + 12*d*n1*n3^2 - 
      4*n1^2*n3^2 + 6*n3^3 - 5*d*n3^3 - 2*n1*n3^3 + 2*n3^4 - 68*n4 + 
      52*d*n4 - 10*d^2*n4 - 28*n1*n4 + 21*d*n1*n4 - 4*d^2*n1*n4 - 4*n1^2*n4 + 
      2*d*n1^2*n4 + 4*n3*n4 - 15*d*n3*n4 + 6*d^2*n3*n4 - 20*n1*n3*n4 + 
      7*d*n1*n3*n4 - 4*n1^2*n3*n4 + 20*n3^2*n4 - 11*d*n3^2*n4 + 4*n3^3*n4 - 
      18*n4^2 + 6*d*n4^2 - 6*n1*n4^2 + 2*d*n1*n4^2 + 6*n3*n4^2 - 
      4*d*n3*n4^2 - 2*n1*n3*n4^2 + 4*n3^2*n4^2 + 234*n7 - 173*d*n7 + 
      37*d^2*n7 - 2*d^3*n7 + 102*n1*n7 - 42*d*n1*n7 + 2*d^2*n1*n7 + 
      8*n1^2*n7 - 168*n3*n7 + 118*d*n3*n7 - 19*d^2*n3*n7 - 76*n1*n3*n7 + 
      30*d*n1*n3*n7 - 8*n1^2*n3*n7 - 22*n3^2*n7 + 3*d*n3^2*n7 - 
      10*n1*n3^2*n7 + 4*n3^3*n7 + 50*n4*n7 - 27*d*n4*n7 + 4*d^2*n4*n7 + 
      14*n1*n4*n7 - 2*d*n1*n4*n7 - 14*n3*n4*n7 + d*n3*n4*n7 - 6*n1*n3*n4*n7 + 
      4*n3^2*n4*n7 + 6*n4^2*n7 - 2*d*n4^2*n7 + 2*n3*n4^2*n7 + 50*n7^2 - 
      16*d*n7^2 + 12*n1*n7^2 - 48*n3*n7^2 + 16*d*n3*n7^2 - 12*n1*n3*n7^2 - 
      2*n3^2*n7^2 + 2*n4*n7^2 - 2*n3*n4*n7^2 + 4*n7^3 - 4*n3*n7^3)*
     j[p4a, 1 + n1, 0, n3, -1 + n4, 0, 1, n7, 1, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 
      9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 
      10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 
      84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 
      2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 
      34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 
      88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 
      2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 
      52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 
      12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 
      298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) + 
   ((-136 + 108*d - 24*d^2 + d^3 - 116*n1 + 64*d*n1 - 5*d^2*n1 - d^3*n1 - 
      26*n1^2 + 6*d*n1^2 + d^2*n1^2 - 2*n1^3 + 164*n3 - 146*d*n3 + 
      37*d^2*n3 - 2*d^3*n3 + 140*n1*n3 - 97*d*n1*n3 + 16*d^2*n1*n3 + 
      32*n1^2*n3 - 12*d*n1^2*n3 + 2*n1^3*n3 + 8*n3^2 + 4*d*n3^2 - 
      3*d^2*n3^2 + 16*n1*n3^2 - 5*d*n1*n3^2 + 2*n1^2*n3^2 - 4*n3^3 + 
      2*d*n3^3 + 90*n4 - 80*d*n4 + 17*d^2*n4 + 19*n1*n4 - 15*d*n1*n4 + 
      2*d^2*n1*n4 + n1^2*n4 - d*n1^2*n4 - 38*n3*n4 + 53*d*n3*n4 - 
      15*d^2*n3*n4 + 10*n1*n3*n4 + 3*n1^2*n3*n4 - 26*n3^2*n4 + 13*d*n3^2*n4 - 
      n1*n3^2*n4 - 2*n3^3*n4 + 38*n4^2 - 14*d*n4^2 + 7*n1*n4^2 - d*n1*n4^2 - 
      28*n3*n4^2 + 13*d*n3*n4^2 - 3*n1*n3*n4^2 - 6*n3^2*n4^2 + 2*n4^3 - 
      2*n3*n4^3 - 180*n7 + 122*d*n7 - 23*d^2*n7 + d^3*n7 - 84*n1*n7 + 
      31*d*n1*n7 - d^2*n1*n7 - 8*n1^2*n7 + 132*n3*n7 - 86*d*n3*n7 + 
      13*d^2*n3*n7 + 70*n1*n3*n7 - 25*d*n1*n3*n7 + 8*n1^2*n3*n7 + 
      16*n3^2*n7 - 4*d*n3^2*n7 + 6*n1*n3^2*n7 - 8*n4*n7 + 5*d*n4*n7 - 
      2*d^2*n4*n7 - 6*n1*n4*n7 + d*n1*n4*n7 - 12*n3*n4*n7 + 9*d*n3*n4*n7 + 
      2*n1*n3*n4*n7 - 4*n3^2*n4*n7 + 2*n4^2*n7 + d*n4^2*n7 - 6*n3*n4^2*n7 - 
      44*n7^2 + 14*d*n7^2 - 10*n1*n7^2 + 40*n3*n7^2 - 14*d*n3*n7^2 + 
      10*n1*n3*n7^2 + 4*n3^2*n7^2 - 4*n7^3 + 4*n3*n7^3)*
     j[p4a, 1 + n1, 0, n3, -1 + n4, 0, 1, n7, 1, 0, 1, 1, 0, 1, 2])/
    ((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 
      9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 
      10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 
      84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 
      2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 
      34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 
      88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 
      2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 
      52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 
      12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 
      298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) - 
   ((-1 + n3)*(-2 + d - n4)*(18 - 6*d + 15*n1 - 4*d*n1 + 2*n1^2 - 6*n3 + 
      2*d*n3 - n1*n3 - 12*n4 + 6*d*n4 - 2*n3*n4 - 4*n4^2 + 6*n7 - 2*d*n7 + 
      2*n1*n7 - 2*n4*n7 + 2*n7^2)*j[p4a, 1 + n1, 0, n3, -1 + n4, 0, 1, n7, 2, 
      0, 1, 0, 0, 1, 1])/((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 
      26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 
      54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 
      2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 
      11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 
      54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 
      2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 
      11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 
      4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 
      2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 
      4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 
      74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 4*n1^2*n7 + 124*n3*n7 - 
      128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 24*d*n1*n3*n7 + 
      4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 10*n1*n3^2*n7 + 4*n3^3*n7 - 
      124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 18*n1*n4*n7 + 2*d*n1*n4*n7 + 
      52*n3*n4*n7 - 22*d*n3*n4*n7 + 10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 
      4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 52*d*n7^2 - 4*d^2*n7^2 - 
      12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 12*n1*n3*n7^2 + 12*n3^2*n7^2 - 
      24*n4*n7^2 + 4*d*n4*n7^2 + 8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) - 
   ((-1 + n3)*(-2 + d - n4)*(18 - 6*d + 15*n1 - 4*d*n1 + 2*n1^2 - 6*n3 + 
      2*d*n3 - n1*n3 - 12*n4 + 6*d*n4 - 2*n3*n4 - 4*n4^2 + 6*n7 - 2*d*n7 + 
      2*n1*n7 - 2*n4*n7 + 2*n7^2)*j[p4a, 1 + n1, 0, n3, -1 + n4, 0, 1, n7, 2, 
      0, 1, 1, 0, 0, 1])/((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 
      26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 
      54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 
      2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 
      11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 
      54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 
      2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 
      11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 
      4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 
      2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 
      4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 
      74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 4*n1^2*n7 + 124*n3*n7 - 
      128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 24*d*n1*n3*n7 + 
      4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 10*n1*n3^2*n7 + 4*n3^3*n7 - 
      124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 18*n1*n4*n7 + 2*d*n1*n4*n7 + 
      52*n3*n4*n7 - 22*d*n3*n4*n7 + 10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 
      4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 52*d*n7^2 - 4*d^2*n7^2 - 
      12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 12*n1*n3*n7^2 + 12*n3^2*n7^2 - 
      24*n4*n7^2 + 4*d*n4*n7^2 + 8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) + 
   ((-2 + d - n4)*(-16 + 8*d - d^2 - 10*n1 + d^2*n1 - 2*n1^2 + 26*n3 - 
      13*d*n3 + 2*d^2*n3 + 20*n1*n3 - 6*d*n1*n3 + 2*n1^2*n3 - 4*n3^2 - 
      d*n3^2 - 2*n1*n3^2 + 2*n3^3 + 10*n4 - 6*d*n4 + n1*n4 - d*n1*n4 - 
      6*n3*n4 + 5*d*n3*n4 + 3*n1*n3*n4 + 6*n4^2 - 6*n3*n4^2 - 30*n7 + 
      15*d*n7 - d^2*n7 - 4*n1*n7 + 18*n3*n7 - 9*d*n3*n7 + 4*n1*n3*n7 + 
      4*n3^2*n7 - 4*n4*n7 + d*n4*n7 - 6*n7^2 + 6*n3*n7^2)*
     j[p4a, 1 + n1, 0, n3, -1 + n4, 0, 1, n7, 2, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 
      9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 
      10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 
      84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 
      2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 
      34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 
      88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 
      2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 
      52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 
      12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 
      298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) + 
   ((-2 + d - n4)*n7*(2 + 2*d - d^2 + 5*n1 - 4*d*n1 + d^2*n1 + 2*n3 - 
      5*d*n3 + 2*d^2*n3 + 4*n1*n3 - 2*d*n1*n3 + 2*n3^2 - 3*d*n3^2 - n1*n3^2 + 
      2*n3^3 - 2*n4 + n1*n4 - d*n1*n4 + 4*n3*n4 - d*n3*n4 + 3*n1*n3*n4 + 
      2*n3^2*n4 + 2*n4^2 - 2*n3*n4^2 - 24*n7 + 13*d*n7 - d^2*n7 - 2*n1*n7 + 
      12*n3*n7 - 7*d*n3*n7 + 2*n1*n3*n7 + 4*n3^2*n7 - 6*n4*n7 + d*n4*n7 + 
      2*n3*n4*n7 - 4*n7^2 + 4*n3*n7^2)*j[p4a, 1 + n1, 0, n3, -1 + n4, 0, 1, 
      1 + n7, 0, 0, 1, 1, 0, 1, 1])/((-3 + d - n1 - n7)*
     (-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 
      2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 
      24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 
      14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 
      4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 
      12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 
      18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 
      24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 
      10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 
      2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 
      82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) - 
   ((-2 + d - n4)*n7*(38 - 10*d - d^2 + 35*n1 - 12*d*n1 + d^2*n1 + 4*n1^2 - 
      46*n3 + 11*d*n3 + 2*d^2*n3 - 28*n1*n3 + 6*d*n1*n3 - 4*n1^2*n3 + 
      14*n3^2 - 7*d*n3^2 + n1*n3^2 + 2*n3^3 - 26*n4 + 12*d*n4 + n1*n4 - 
      d*n1*n4 + 24*n3*n4 - 13*d*n3*n4 + 3*n1*n3*n4 + 6*n3^2*n4 - 6*n4^2 + 
      6*n3*n4^2 - 12*n7 + 9*d*n7 - d^2*n7 + 2*n1*n7 - 3*d*n3*n7 - 
      2*n1*n3*n7 + 4*n3^2*n7 - 10*n4*n7 + d*n4*n7 + 6*n3*n4*n7)*
     j[p4a, 1 + n1, 0, n3, -1 + n4, 0, 1, 1 + n7, 1, 0, 0, 1, 0, 1, 1])/
    ((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 
      9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 
      10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 
      84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 
      2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 
      34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 
      88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 
      2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 
      52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 
      12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 
      298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) + 
   ((-2 + d - n4)*n7*(38 - 10*d - d^2 + 35*n1 - 12*d*n1 + d^2*n1 + 4*n1^2 - 
      46*n3 + 11*d*n3 + 2*d^2*n3 - 28*n1*n3 + 6*d*n1*n3 - 4*n1^2*n3 + 
      14*n3^2 - 7*d*n3^2 + n1*n3^2 + 2*n3^3 - 26*n4 + 12*d*n4 + n1*n4 - 
      d*n1*n4 + 24*n3*n4 - 13*d*n3*n4 + 3*n1*n3*n4 + 6*n3^2*n4 - 6*n4^2 + 
      6*n3*n4^2 - 12*n7 + 9*d*n7 - d^2*n7 + 2*n1*n7 - 3*d*n3*n7 - 
      2*n1*n3*n7 + 4*n3^2*n7 - 10*n4*n7 + d*n4*n7 + 6*n3*n4*n7)*
     j[p4a, 1 + n1, 0, n3, -1 + n4, 0, 1, 1 + n7, 1, 0, 1, 0, 0, 1, 1])/
    ((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 
      9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 
      10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 
      84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 
      2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 
      34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 
      88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 
      2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 
      52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 
      12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 
      298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) + 
   ((-1 + n3)*(-2 + d - n4)*n7*(18 - 6*d + 15*n1 - 4*d*n1 + 2*n1^2 - 6*n3 + 
      2*d*n3 - n1*n3 - 12*n4 + 6*d*n4 - 2*n3*n4 - 4*n4^2 + 6*n7 - 2*d*n7 + 
      2*n1*n7 - 2*n4*n7 + 2*n7^2)*j[p4a, 1 + n1, 0, n3, -1 + n4, 0, 1, 
      1 + n7, 1, 0, 1, 1, 0, 0, 1])/((-3 + d - n1 - n7)*
     (-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 
      2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 
      24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 
      14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 
      4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 
      12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 
      18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 
      24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 
      10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 
      2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 
      82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) + 
   ((-36 + 48*d - 21*d^2 + 3*d^3 + 4*n1 - 20*d*n1 + 15*d^2*n1 - 3*d^3*n1 + 
      4*n1^2 - 6*d*n1^2 + 2*d^2*n1^2 + 54*n3 - 87*d*n3 + 41*d^2*n3 - 
      6*d^3*n3 + 58*n1*n3 - 60*d*n1*n3 + 14*d^2*n1*n3 + 10*n1^2*n3 - 
      6*d*n1^2*n3 + 48*n3^2 - 37*d*n3^2 + 7*d^2*n3^2 + 24*n1*n3^2 - 
      10*d*n1*n3^2 + 2*n1^2*n3^2 + 6*n3^3 - 2*d*n3^3 + 2*n1*n3^3 + 40*n4 - 
      26*d*n4 + 4*d^2*n4 + 30*n1*n4 - 24*d*n1*n4 + 5*d^2*n1*n4 + 4*n1^2*n4 - 
      2*d*n1^2*n4 + 10*n3*n4 - 7*d*n3*n4 + d^2*n3*n4 + 27*n1*n3*n4 - 
      11*d*n1*n3*n4 + 4*n1^2*n3*n4 + 2*n3^2*n4 + 3*n1*n3^2*n4 + 14*n4^2 - 
      4*d*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 - 4*n3*n4^2 + 2*d*n3*n4^2 + 
      2*n1*n3*n4^2 - 2*n3^2*n4^2 - 250*n7 + 209*d*n7 - 51*d^2*n7 + 3*d^3*n7 - 
      82*n1*n7 + 34*d*n1*n7 - d^2*n1*n7 - 6*n1^2*n7 + 140*n3*n7 - 
      120*d*n3*n7 + 25*d^2*n3*n7 + 64*n1*n3*n7 - 28*d*n1*n3*n7 + 
      6*n1^2*n3*n7 + 44*n3^2*n7 - 17*d*n3^2*n7 + 10*n1*n3^2*n7 + 2*n3^3*n7 - 
      80*n4*n7 + 43*d*n4*n7 - 5*d^2*n4*n7 - 13*n1*n4*n7 + d*n1*n4*n7 + 
      28*n3*n4*n7 - 11*d*n3*n4*n7 + 9*n1*n3*n4*n7 + 4*n3^2*n4*n7 - 
      8*n4^2*n7 + 2*d*n4^2*n7 - 72*n7^2 + 29*d*n7^2 - d^2*n7^2 - 12*n1*n7^2 + 
      56*n3*n7^2 - 23*d*n3*n7^2 + 12*n1*n3*n7^2 + 8*n3^2*n7^2 - 10*n4*n7^2 + 
      d*n4*n7^2 + 6*n3*n4*n7^2 - 6*n7^3 + 6*n3*n7^3)*
     j[p4a, 1 + n1, 0, n3, -1 + n4, 0, 2, n7, 1, 0, 0, 1, 0, 1, 1])/
    ((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 
      9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 
      10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 
      84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 
      2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 
      34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 
      88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 
      2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 
      52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 
      12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 
      298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) - 
   ((-2 + d - n4)*(20 - 4*d - d^2 + 20*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 
      22*n3 + 3*d*n3 + 2*d^2*n3 - 12*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 8*n3^2 - 
      5*d*n3^2 + 2*n3^3 - 14*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 14*n3*n4 - 
      7*d*n3*n4 + 3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 18*n7 + 
      11*d*n7 - d^2*n7 + 6*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + 
      d*n4*n7 + 4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, 0, n3, n4, 
      -1, 1, n7, 0, 0, 1, 2, 0, 1, 1])/((-3 + d - n1 - n7)*
     (-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 
      2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 
      24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 
      14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 
      4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 
      12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 
      18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 
      24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 
      10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 
      2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 
      82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) - 
   ((-2 + d - n4)*n7*(2 + 2*d - d^2 + 5*n1 - 4*d*n1 + d^2*n1 + 2*n3 - 
      5*d*n3 + 2*d^2*n3 + 4*n1*n3 - 2*d*n1*n3 + 2*n3^2 - 3*d*n3^2 - n1*n3^2 + 
      2*n3^3 - 2*n4 + n1*n4 - d*n1*n4 + 4*n3*n4 - d*n3*n4 + 3*n1*n3*n4 + 
      2*n3^2*n4 + 2*n4^2 - 2*n3*n4^2 - 24*n7 + 13*d*n7 - d^2*n7 - 2*n1*n7 + 
      12*n3*n7 - 7*d*n3*n7 + 2*n1*n3*n7 + 4*n3^2*n7 - 6*n4*n7 + d*n4*n7 + 
      2*n3*n4*n7 - 4*n7^2 + 4*n3*n7^2)*j[p4a, 1 + n1, 0, n3, n4, -1, 1, 
      1 + n7, 0, 0, 1, 1, 0, 1, 1])/((-3 + d - n1 - n7)*
     (-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 
      2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 
      24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 
      14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 
      4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 
      12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 
      18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 
      24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 
      10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 
      2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 
      82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) - 
   ((-2 + d - n4)*n7*(2 + 2*d - d^2 + 5*n1 - 4*d*n1 + d^2*n1 + 2*n3 - 
      5*d*n3 + 2*d^2*n3 + 4*n1*n3 - 2*d*n1*n3 + 2*n3^2 - 3*d*n3^2 - n1*n3^2 + 
      2*n3^3 - 2*n4 + n1*n4 - d*n1*n4 + 4*n3*n4 - d*n3*n4 + 3*n1*n3*n4 + 
      2*n3^2*n4 + 2*n4^2 - 2*n3*n4^2 - 24*n7 + 13*d*n7 - d^2*n7 - 2*n1*n7 + 
      12*n3*n7 - 7*d*n3*n7 + 2*n1*n3*n7 + 4*n3^2*n7 - 6*n4*n7 + d*n4*n7 + 
      2*n3*n4*n7 - 4*n7^2 + 4*n3*n7^2)*j[p4a, 1 + n1, 0, n3, n4, -1, 1, 
      1 + n7, 1, 0, 0, 1, 0, 1, 1])/((-3 + d - n1 - n7)*
     (-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 
      2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 
      24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 
      14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 
      4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 
      12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 
      18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 
      24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 
      10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 
      2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 
      82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) + 
   ((-2 + d - n4)*n7*(2 + 2*d - d^2 + 5*n1 - 4*d*n1 + d^2*n1 + 2*n3 - 
      5*d*n3 + 2*d^2*n3 + 4*n1*n3 - 2*d*n1*n3 + 2*n3^2 - 3*d*n3^2 - n1*n3^2 + 
      2*n3^3 - 2*n4 + n1*n4 - d*n1*n4 + 4*n3*n4 - d*n3*n4 + 3*n1*n3*n4 + 
      2*n3^2*n4 + 2*n4^2 - 2*n3*n4^2 - 24*n7 + 13*d*n7 - d^2*n7 - 2*n1*n7 + 
      12*n3*n7 - 7*d*n3*n7 + 2*n1*n3*n7 + 4*n3^2*n7 - 6*n4*n7 + d*n4*n7 + 
      2*n3*n4*n7 - 4*n7^2 + 4*n3*n7^2)*j[p4a, 1 + n1, 0, n3, n4, -1, 1, 
      1 + n7, 1, 0, 1, 0, 0, 1, 1])/((-3 + d - n1 - n7)*
     (-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 
      2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 
      24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 
      14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 
      4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 
      12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 
      18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 
      24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 
      10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 
      2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 
      82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) - 
   ((-1 + n3)*(-2 + d - n4)*n7*(18 - 6*d + 15*n1 - 4*d*n1 + 2*n1^2 - 6*n3 + 
      2*d*n3 - n1*n3 - 12*n4 + 6*d*n4 - 2*n3*n4 - 4*n4^2 + 6*n7 - 2*d*n7 + 
      2*n1*n7 - 2*n4*n7 + 2*n7^2)*j[p4a, 1 + n1, 0, n3, n4, -1, 1, 1 + n7, 1, 
      0, 1, 1, 0, 0, 1])/((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 
      26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 
      54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 
      2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 
      11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 
      54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 
      2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 
      11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 
      4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 
      2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 
      4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 
      74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 4*n1^2*n7 + 124*n3*n7 - 
      128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 24*d*n1*n3*n7 + 
      4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 10*n1*n3^2*n7 + 4*n3^3*n7 - 
      124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 18*n1*n4*n7 + 2*d*n1*n4*n7 + 
      52*n3*n4*n7 - 22*d*n3*n4*n7 + 10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 
      4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 52*d*n7^2 - 4*d^2*n7^2 - 
      12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 12*n1*n3*n7^2 + 12*n3^2*n7^2 - 
      24*n4*n7^2 + 4*d*n4*n7^2 + 8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) + 
   ((-20 + 4*d + d^2 - 20*n1 + 8*d*n1 - d^2*n1 - 2*n1^2 + 22*n3 - 3*d*n3 - 
      2*d^2*n3 + 12*n1*n3 - 2*d*n1*n3 + 2*n1^2*n3 - 8*n3^2 + 5*d*n3^2 - 
      2*n3^3 + 14*n4 - 6*d*n4 - n1*n4 + d*n1*n4 - 14*n3*n4 + 7*d*n3*n4 - 
      3*n1*n3*n4 - 4*n3^2*n4 + 2*n4^2 - 2*n3*n4^2 + 18*n7 - 11*d*n7 + 
      d^2*n7 - 6*n3*n7 + 5*d*n3*n7 - 4*n3^2*n7 + 8*n4*n7 - d*n4*n7 - 
      4*n3*n4*n7 + 2*n7^2 - 2*n3*n7^2)*j[p4a, 1 + n1, 0, n3, n4, -1, 2, n7, 
      1, 0, 0, 1, 0, 1, 1])/(84 - 142*d + 68*d^2 - 10*d^3 + 26*n1 - 35*d*n1 + 
     9*d^2*n1 + 2*n1^2 - 2*d*n1^2 + 12*n3 + 68*d*n3 - 54*d^2*n3 + 10*d^3*n3 + 
     2*n1*n3 + 24*d*n1*n3 - 9*d^2*n1*n3 + 2*d*n1^2*n3 - 84*n3^2 + 70*d*n3^2 - 
     14*d^2*n3^2 - 26*n1*n3^2 + 11*d*n1*n3^2 - 2*n1^2*n3^2 - 12*n3^3 + 
     4*d*n3^3 - 2*n1*n3^3 - 16*n4 + 54*d*n4 - 34*d^2*n4 + 6*d^3*n4 + 
     12*n1*n4 + d*n1*n4 - 2*d^2*n1*n4 + 2*n1^2*n4 - 88*n3*n4 + 82*d*n3*n4 - 
     18*d^2*n3*n4 - 24*n1*n3*n4 + 11*d*n1*n3*n4 - 2*n1^2*n3*n4 - 24*n3^2*n4 + 
     8*d*n3^2*n4 - 4*n1*n3^2*n4 - 68*n4^2 + 52*d*n4^2 - 10*d^2*n4^2 - 
     6*n1*n4^2 + 2*d*n1*n4^2 - 28*n3*n4^2 + 12*d*n3*n4^2 - 2*n1*n3*n4^2 - 
     12*n4^3 + 4*d*n4^3 - 4*n3*n4^3 + 320*n7 - 298*d*n7 + 82*d^2*n7 - 
     6*d^3*n7 + 74*n1*n7 - 36*d*n1*n7 + 2*d^2*n1*n7 + 4*n1^2*n7 - 124*n3*n7 + 
     128*d*n3*n7 - 30*d^2*n3*n7 - 48*n1*n3*n7 + 24*d*n1*n3*n7 - 
     4*n1^2*n3*n7 - 64*n3^2*n7 + 26*d*n3^2*n7 - 10*n1*n3^2*n7 - 4*n3^3*n7 + 
     124*n4*n7 - 62*d*n4*n7 + 6*d^2*n4*n7 + 18*n1*n4*n7 - 2*d*n1*n4*n7 - 
     52*n3*n4*n7 + 22*d*n3*n4*n7 - 10*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 
     4*n4^2*n7 - 4*n3*n4^2*n7 + 108*n7^2 - 52*d*n7^2 + 4*d^2*n7^2 + 
     12*n1*n7^2 - 64*n3*n7^2 + 28*d*n3*n7^2 - 12*n1*n3*n7^2 - 12*n3^2*n7^2 + 
     24*n4*n7^2 - 4*d*n4*n7^2 - 8*n3*n4*n7^2 + 8*n7^3 - 8*n3*n7^3) - 
   ((-2 + d - n4)*(2 + 2*d - d^2 + 5*n1 - 4*d*n1 + d^2*n1 + 2*n3 - 5*d*n3 + 
      2*d^2*n3 + 4*n1*n3 - 2*d*n1*n3 + 2*n3^2 - 3*d*n3^2 - n1*n3^2 + 2*n3^3 - 
      2*n4 + n1*n4 - d*n1*n4 + 4*n3*n4 - d*n3*n4 + 3*n1*n3*n4 + 2*n3^2*n4 + 
      2*n4^2 - 2*n3*n4^2 - 24*n7 + 13*d*n7 - d^2*n7 - 2*n1*n7 + 12*n3*n7 - 
      7*d*n3*n7 + 2*n1*n3*n7 + 4*n3^2*n7 - 6*n4*n7 + d*n4*n7 + 2*n3*n4*n7 - 
      4*n7^2 + 4*n3*n7^2)*j[p4a, 1 + n1, 0, n3, n4, 0, 0, -1 + n7, 1, 0, 2, 
      1, 0, 1, 1])/((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 
      26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 
      54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 
      2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 
      11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 
      54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 
      2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 
      11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 
      4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 
      2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 
      4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 
      74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 4*n1^2*n7 + 124*n3*n7 - 
      128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 24*d*n1*n3*n7 + 
      4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 10*n1*n3^2*n7 + 4*n3^3*n7 - 
      124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 18*n1*n4*n7 + 2*d*n1*n4*n7 + 
      52*n3*n4*n7 - 22*d*n3*n4*n7 + 10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 
      4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 52*d*n7^2 - 4*d^2*n7^2 - 
      12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 12*n1*n3*n7^2 + 12*n3^2*n7^2 - 
      24*n4*n7^2 + 4*d*n4*n7^2 + 8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) - 
   ((-2 + d - n4)*(-56 + 16*d + d^2 - 50*n1 + 16*d*n1 - d^2*n1 - 6*n1^2 + 
      70*n3 - 19*d*n3 - 2*d^2*n3 + 44*n1*n3 - 10*d*n1*n3 + 6*n1^2*n3 - 
      20*n3^2 + 9*d*n3^2 - 2*n1*n3^2 - 2*n3^3 + 78*n4 - 26*d*n4 - 2*d^2*n4 + 
      39*n1*n4 - 15*d*n1*n4 + 2*d^2*n1*n4 + 4*n1^2*n4 - 78*n3*n4 + 
      25*d*n3*n4 + 4*d^2*n3*n4 - 27*n1*n3*n4 + 4*d*n1*n3*n4 - 4*n1^2*n3*n4 + 
      8*n3^2*n4 - 10*d*n3^2*n4 + 4*n3^3*n4 - 18*n4^2 + 12*d*n4^2 + 
      2*n1*n4^2 - 2*d*n1*n4^2 + 18*n3*n4^2 - 14*d*n3*n4^2 + 6*n1*n3*n4^2 + 
      8*n3^2*n4^2 - 4*n4^3 + 4*n3*n4^3 + 6*n7 - 7*d*n7 + d^2*n7 - 4*n1*n7 + 
      6*n3*n7 + d*n3*n7 + 4*n1*n3*n7 - 4*n3^2*n7 - 24*n4*n7 + 21*d*n4*n7 - 
      2*d^2*n4*n7 + 4*n3*n4*n7 - 10*d*n3*n4*n7 + 8*n3^2*n4*n7 - 16*n4^2*n7 + 
      2*d*n4^2*n7 + 8*n3*n4^2*n7 - 2*n7^2 + 2*n3*n7^2 - 4*n4*n7^2 + 
      4*n3*n4*n7^2)*j[p4a, 1 + n1, 0, n3, n4, 0, 0, n7, 1, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 
      9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 
      10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 
      84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 
      2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 
      34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 
      88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 
      2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 
      52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 
      12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 
      298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) + 
   ((-1 + n3)*(-2 + d - n4)*(18 - 6*d + 15*n1 - 4*d*n1 + 2*n1^2 - 6*n3 + 
      2*d*n3 - n1*n3 - 12*n4 + 6*d*n4 - 2*n3*n4 - 4*n4^2 + 6*n7 - 2*d*n7 + 
      2*n1*n7 - 2*n4*n7 + 2*n7^2)*j[p4a, 1 + n1, 0, n3, n4, 0, 0, n7, 1, 0, 
      1, 2, -1, 1, 1])/((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 
      26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 
      54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 
      2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 
      11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 
      54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 
      2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 
      11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 
      4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 
      2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 
      4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 
      74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 4*n1^2*n7 + 124*n3*n7 - 
      128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 24*d*n1*n3*n7 + 
      4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 10*n1*n3^2*n7 + 4*n3^3*n7 - 
      124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 18*n1*n4*n7 + 2*d*n1*n4*n7 + 
      52*n3*n4*n7 - 22*d*n3*n4*n7 + 10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 
      4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 52*d*n7^2 - 4*d^2*n7^2 - 
      12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 12*n1*n3*n7^2 + 12*n3^2*n7^2 - 
      24*n4*n7^2 + 4*d*n4*n7^2 + 8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) - 
   ((-1 + n3)*(-2 + d - n4)*(18 - 6*d + 15*n1 - 4*d*n1 + 2*n1^2 - 6*n3 + 
      2*d*n3 - n1*n3 - 12*n4 + 6*d*n4 - 2*n3*n4 - 4*n4^2 + 6*n7 - 2*d*n7 + 
      2*n1*n7 - 2*n4*n7 + 2*n7^2)*j[p4a, 1 + n1, 0, n3, n4, 0, 0, n7, 1, 0, 
      1, 2, 0, 1, 1])/((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 
      26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 
      54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 
      2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 
      11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 
      54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 
      2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 
      11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 
      4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 
      2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 
      4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 
      74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 4*n1^2*n7 + 124*n3*n7 - 
      128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 24*d*n1*n3*n7 + 
      4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 10*n1*n3^2*n7 + 4*n3^3*n7 - 
      124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 18*n1*n4*n7 + 2*d*n1*n4*n7 + 
      52*n3*n4*n7 - 22*d*n3*n4*n7 + 10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 
      4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 52*d*n7^2 - 4*d^2*n7^2 - 
      12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 12*n1*n3*n7^2 + 12*n3^2*n7^2 - 
      24*n4*n7^2 + 4*d*n4*n7^2 + 8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) + 
   ((-1 + n3)*(-2 + d - n4)*(18 - 6*d + 15*n1 - 4*d*n1 + 2*n1^2 - 6*n3 + 
      2*d*n3 - n1*n3 - 12*n4 + 6*d*n4 - 2*n3*n4 - 4*n4^2 + 6*n7 - 2*d*n7 + 
      2*n1*n7 - 2*n4*n7 + 2*n7^2)*j[p4a, 1 + n1, 0, n3, n4, 0, 0, n7, 1, 0, 
      2, 1, -1, 1, 1])/((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 
      26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 
      54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 
      2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 
      11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 
      54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 
      2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 
      11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 
      4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 
      2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 
      4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 
      74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 4*n1^2*n7 + 124*n3*n7 - 
      128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 24*d*n1*n3*n7 + 
      4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 10*n1*n3^2*n7 + 4*n3^3*n7 - 
      124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 18*n1*n4*n7 + 2*d*n1*n4*n7 + 
      52*n3*n4*n7 - 22*d*n3*n4*n7 + 10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 
      4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 52*d*n7^2 - 4*d^2*n7^2 - 
      12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 12*n1*n3*n7^2 + 12*n3^2*n7^2 - 
      24*n4*n7^2 + 4*d*n4*n7^2 + 8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) - 
   ((-1 + n3)*(-2 + d - n4)*(18 - 6*d + 15*n1 - 4*d*n1 + 2*n1^2 - 6*n3 + 
      2*d*n3 - n1*n3 - 12*n4 + 6*d*n4 - 2*n3*n4 - 4*n4^2 + 6*n7 - 2*d*n7 + 
      2*n1*n7 - 2*n4*n7 + 2*n7^2)*j[p4a, 1 + n1, 0, n3, n4, 0, 0, n7, 1, 0, 
      2, 1, 0, 1, 1])/((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 
      26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 
      54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 
      2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 
      11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 
      54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 
      2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 
      11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 
      4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 
      2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 
      4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 
      74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 4*n1^2*n7 + 124*n3*n7 - 
      128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 24*d*n1*n3*n7 + 
      4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 10*n1*n3^2*n7 + 4*n3^3*n7 - 
      124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 18*n1*n4*n7 + 2*d*n1*n4*n7 + 
      52*n3*n4*n7 - 22*d*n3*n4*n7 + 10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 
      4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 52*d*n7^2 - 4*d^2*n7^2 - 
      12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 12*n1*n3*n7^2 + 12*n3^2*n7^2 - 
      24*n4*n7^2 + 4*d*n4*n7^2 + 8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) + 
   ((-1 + n3)*(-2 + d - n4)*(18 - 6*d + 15*n1 - 4*d*n1 + 2*n1^2 - 6*n3 + 
      2*d*n3 - n1*n3 - 12*n4 + 6*d*n4 - 2*n3*n4 - 4*n4^2 + 6*n7 - 2*d*n7 + 
      2*n1*n7 - 2*n4*n7 + 2*n7^2)*j[p4a, 1 + n1, 0, n3, n4, 0, 0, n7, 2, 0, 
      1, 1, -1, 1, 1])/((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 
      26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 
      54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 
      2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 
      11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 
      54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 
      2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 
      11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 
      4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 
      2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 
      4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 
      74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 4*n1^2*n7 + 124*n3*n7 - 
      128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 24*d*n1*n3*n7 + 
      4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 10*n1*n3^2*n7 + 4*n3^3*n7 - 
      124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 18*n1*n4*n7 + 2*d*n1*n4*n7 + 
      52*n3*n4*n7 - 22*d*n3*n4*n7 + 10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 
      4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 52*d*n7^2 - 4*d^2*n7^2 - 
      12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 12*n1*n3*n7^2 + 12*n3^2*n7^2 - 
      24*n4*n7^2 + 4*d*n4*n7^2 + 8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) - 
   ((-2 + d - n4)*(-16 + 8*d - d^2 - 10*n1 + d^2*n1 - 2*n1^2 + 26*n3 - 
      13*d*n3 + 2*d^2*n3 + 20*n1*n3 - 6*d*n1*n3 + 2*n1^2*n3 - 4*n3^2 - 
      d*n3^2 - 2*n1*n3^2 + 2*n3^3 + 10*n4 - 6*d*n4 + n1*n4 - d*n1*n4 - 
      6*n3*n4 + 5*d*n3*n4 + 3*n1*n3*n4 + 6*n4^2 - 6*n3*n4^2 - 30*n7 + 
      15*d*n7 - d^2*n7 - 4*n1*n7 + 18*n3*n7 - 9*d*n3*n7 + 4*n1*n3*n7 + 
      4*n3^2*n7 - 4*n4*n7 + d*n4*n7 - 6*n7^2 + 6*n3*n7^2)*
     j[p4a, 1 + n1, 0, n3, n4, 0, 0, n7, 2, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 
      9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 
      10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 
      84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 
      2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 
      34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 
      88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 
      2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 
      52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 
      12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 
      298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) + 
   ((-240 + 236*d - 76*d^2 + 8*d^3 - 196*n1 + 150*d*n1 - 34*d^2*n1 + 
      2*d^3*n1 - 38*n1^2 + 16*d*n1^2 - d^2*n1^2 - 2*n1^3 + 168*n3 - 
      170*d*n3 + 56*d^2*n3 - 6*d^3*n3 + 124*n1*n3 - 87*d*n1*n3 + 
      15*d^2*n1*n3 + 28*n1^2*n3 - 10*d*n1^2*n3 + 2*n1^3*n3 + 24*n3^2 - 
      14*d*n3^2 + 2*d^2*n3^2 + 16*n1*n3^2 - 5*d*n1*n3^2 + 2*n1^2*n3^2 + 
      106*n4 - 136*d*n4 + 52*d^2*n4 - 6*d^3*n4 - 19*n1*n4 + 5*d*n1*n4 - 
      5*n1^2*n4 + d*n1^2*n4 + 8*n3*n4 + 2*d*n3*n4 - 2*d^2*n3*n4 + 
      8*n1*n3*n4 - 2*d*n1*n3*n4 + n1^2*n3*n4 - 10*n3^2*n4 + 4*d*n3^2*n4 - 
      n1*n3^2*n4 + 100*n4^2 - 66*d*n4^2 + 10*d^2*n4^2 + 8*n1*n4^2 - 
      2*d*n1*n4^2 - 2*n3*n4^2 + 2*d*n3*n4^2 - 2*n3^2*n4^2 + 16*n4^3 - 
      4*d*n4^3 - 264*n7 + 214*d*n7 - 54*d^2*n7 + 4*d^3*n7 - 100*n1*n7 + 
      43*d*n1*n7 - 3*d^2*n1*n7 - 8*n1^2*n7 + 144*n3*n7 - 102*d*n3*n7 + 
      18*d^2*n3*n7 + 70*n1*n3*n7 - 25*d*n1*n3*n7 + 8*n1^2*n3*n7 + 
      24*n3^2*n7 - 8*d*n3^2*n7 + 6*n1*n3^2*n7 - 50*n4*n7 + 28*d*n4*n7 - 
      4*d^2*n4*n7 - 14*n1*n4*n7 + 3*d*n1*n4*n7 + 2*n3*n4*n7 + 2*n1*n3*n4*n7 + 
      2*n4^2*n7 - 2*n3*n4^2*n7 - 64*n7^2 + 28*d*n7^2 - 2*d^2*n7^2 - 
      10*n1*n7^2 + 44*n3*n7^2 - 16*d*n3*n7^2 + 10*n1*n3*n7^2 + 4*n3^2*n7^2 - 
      10*n4*n7^2 + 2*d*n4*n7^2 + 2*n3*n4*n7^2 - 4*n7^3 + 4*n3*n7^3)*
     j[p4a, 1 + n1, 0, n3, n4, 0, 1, -1 + n7, 0, 0, 1, 2, 0, 1, 1])/
    ((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 
      9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 
      10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 
      84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 
      2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 
      34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 
      88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 
      2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 
      52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 
      12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 
      298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) + 
   ((220 - 232*d + 77*d^2 - 8*d^3 + 156*n1 - 138*d*n1 + 34*d^2*n1 - 
      2*d^3*n1 + 16*n1^2 - 8*d*n1^2 - 126*n3 + 163*d*n3 - 59*d^2*n3 + 
      6*d^3*n3 - 70*n1*n3 + 74*d*n1*n3 - 16*d^2*n1*n3 - 12*n1^2*n3 + 
      8*d*n1^2*n3 - 54*n3^2 + 22*d*n3^2 - 36*n1*n3^2 + 12*d*n1*n3^2 - 
      4*n1^2*n3^2 + 6*n3^3 - 5*d*n3^3 - 2*n1*n3^3 + 2*n3^4 - 92*n4 + 
      130*d*n4 - 52*d^2*n4 + 6*d^3*n4 + 32*n1*n4 - 10*d*n1*n4 + 4*n1^2*n4 - 
      36*n3*n4 + 11*d*n3*n4 + 2*d^2*n3*n4 - 24*n1*n3*n4 + 8*d*n1*n3*n4 - 
      4*n1^2*n3*n4 + 20*n3^2*n4 - 11*d*n3^2*n4 + 4*n3^3*n4 - 98*n4^2 + 
      66*d*n4^2 - 10*d^2*n4^2 - 6*n1*n4^2 + 2*d*n1*n4^2 - 2*n3*n4^2 - 
      2*d*n3*n4^2 - 2*n1*n3*n4^2 + 4*n3^2*n4^2 - 16*n4^3 + 4*d*n4^3 + 
      282*n7 - 225*d*n7 + 55*d^2*n7 - 4*d^3*n7 + 118*n1*n7 - 54*d*n1*n7 + 
      4*d^2*n1*n7 + 8*n1^2*n7 - 168*n3*n7 + 118*d*n3*n7 - 19*d^2*n3*n7 - 
      76*n1*n3*n7 + 30*d*n1*n3*n7 - 8*n1^2*n3*n7 - 22*n3^2*n7 + 3*d*n3^2*n7 - 
      10*n1*n3^2*n7 + 4*n3^3*n7 + 58*n4*n7 - 29*d*n4*n7 + 4*d^2*n4*n7 + 
      22*n1*n4*n7 - 4*d*n1*n4*n7 - 14*n3*n4*n7 + d*n3*n4*n7 - 6*n1*n3*n4*n7 + 
      4*n3^2*n4*n7 - 2*n4^2*n7 + 2*n3*n4^2*n7 + 66*n7^2 - 28*d*n7^2 + 
      2*d^2*n7^2 + 12*n1*n7^2 - 48*n3*n7^2 + 16*d*n3*n7^2 - 12*n1*n3*n7^2 - 
      2*n3^2*n7^2 + 10*n4*n7^2 - 2*d*n4*n7^2 - 2*n3*n4*n7^2 + 4*n7^3 - 
      4*n3*n7^3)*j[p4a, 1 + n1, 0, n3, n4, 0, 1, -1 + n7, 1, 0, 1, 1, 0, 1, 
      1])/(84 - 142*d + 68*d^2 - 10*d^3 + 26*n1 - 35*d*n1 + 9*d^2*n1 + 
     2*n1^2 - 2*d*n1^2 + 12*n3 + 68*d*n3 - 54*d^2*n3 + 10*d^3*n3 + 2*n1*n3 + 
     24*d*n1*n3 - 9*d^2*n1*n3 + 2*d*n1^2*n3 - 84*n3^2 + 70*d*n3^2 - 
     14*d^2*n3^2 - 26*n1*n3^2 + 11*d*n1*n3^2 - 2*n1^2*n3^2 - 12*n3^3 + 
     4*d*n3^3 - 2*n1*n3^3 - 16*n4 + 54*d*n4 - 34*d^2*n4 + 6*d^3*n4 + 
     12*n1*n4 + d*n1*n4 - 2*d^2*n1*n4 + 2*n1^2*n4 - 88*n3*n4 + 82*d*n3*n4 - 
     18*d^2*n3*n4 - 24*n1*n3*n4 + 11*d*n1*n3*n4 - 2*n1^2*n3*n4 - 24*n3^2*n4 + 
     8*d*n3^2*n4 - 4*n1*n3^2*n4 - 68*n4^2 + 52*d*n4^2 - 10*d^2*n4^2 - 
     6*n1*n4^2 + 2*d*n1*n4^2 - 28*n3*n4^2 + 12*d*n3*n4^2 - 2*n1*n3*n4^2 - 
     12*n4^3 + 4*d*n4^3 - 4*n3*n4^3 + 320*n7 - 298*d*n7 + 82*d^2*n7 - 
     6*d^3*n7 + 74*n1*n7 - 36*d*n1*n7 + 2*d^2*n1*n7 + 4*n1^2*n7 - 124*n3*n7 + 
     128*d*n3*n7 - 30*d^2*n3*n7 - 48*n1*n3*n7 + 24*d*n1*n3*n7 - 
     4*n1^2*n3*n7 - 64*n3^2*n7 + 26*d*n3^2*n7 - 10*n1*n3^2*n7 - 4*n3^3*n7 + 
     124*n4*n7 - 62*d*n4*n7 + 6*d^2*n4*n7 + 18*n1*n4*n7 - 2*d*n1*n4*n7 - 
     52*n3*n4*n7 + 22*d*n3*n4*n7 - 10*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 
     4*n4^2*n7 - 4*n3*n4^2*n7 + 108*n7^2 - 52*d*n7^2 + 4*d^2*n7^2 + 
     12*n1*n7^2 - 64*n3*n7^2 + 28*d*n3*n7^2 - 12*n1*n3*n7^2 - 12*n3^2*n7^2 + 
     24*n4*n7^2 - 4*d*n4*n7^2 - 8*n3*n4*n7^2 + 8*n7^3 - 8*n3*n7^3) + 
   ((-184 + 202*d - 71*d^2 + 8*d^3 - 126*n1 + 115*d*n1 - 30*d^2*n1 + 
      2*d^3*n1 - 12*n1^2 + 6*d*n1^2 + 98*n3 - 127*d*n3 + 50*d^2*n3 - 
      6*d^3*n3 + 58*n1*n3 - 58*d*n1*n3 + 13*d^2*n1*n3 + 10*n1^2*n3 - 
      6*d*n1^2*n3 + 44*n3^2 - 29*d*n3^2 + 4*d^2*n3^2 + 26*n1*n3^2 - 
      11*d*n1*n3^2 + 2*n1^2*n3^2 + 2*n3^3 + 2*n1*n3^3 + 66*n4 - 108*d*n4 + 
      47*d^2*n4 - 6*d^3*n4 - 37*n1*n4 + 14*d*n1*n4 - d^2*n1*n4 - 4*n1^2*n4 + 
      40*n3*n4 - 22*d*n3*n4 + 2*d^2*n3*n4 + 21*n1*n3*n4 - 7*d*n1*n3*n4 + 
      4*n1^2*n3*n4 - 4*n3^2*n4 + 5*d*n3^2*n4 + 4*n1*n3^2*n4 - 2*n3^3*n4 + 
      92*n4^2 - 62*d*n4^2 + 10*d^2*n4^2 + 5*n1*n4^2 - d*n1*n4^2 + 4*n3*n4^2 - 
      d*n3*n4^2 - n1*n3*n4^2 - 4*n3^2*n4^2 + 14*n4^3 - 4*d*n4^3 + 2*n3*n4^3 - 
      250*n7 + 211*d*n7 - 54*d^2*n7 + 4*d^3*n7 - 94*n1*n7 + 44*d*n1*n7 - 
      3*d^2*n1*n7 - 6*n1^2*n7 + 116*n3*n7 - 94*d*n3*n7 + 18*d^2*n3*n7 + 
      60*n1*n3*n7 - 26*d*n1*n3*n7 + 6*n1^2*n3*n7 + 36*n3^2*n7 - 
      13*d*n3^2*n7 + 10*n1*n3^2*n7 + 2*n3^3*n7 - 52*n4*n7 + 24*d*n4*n7 - 
      3*d^2*n4*n7 - 19*n1*n4*n7 + 3*d*n1*n4*n7 + 12*n3*n4*n7 - 2*d*n3*n4*n7 + 
      7*n1*n3*n4*n7 + 6*n4^2*n7 - d*n4^2*n7 - 2*n3*n4^2*n7 - 80*n7^2 + 
      37*d*n7^2 - 3*d^2*n7^2 - 12*n1*n7^2 + 48*n3*n7^2 - 19*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 8*n3^2*n7^2 - 14*n4*n7^2 + 3*d*n4*n7^2 + 2*n3*n4*n7^2 - 
      6*n7^3 + 6*n3*n7^3)*j[p4a, 1 + n1, 0, n3, n4, 0, 1, -1 + n7, 1, 0, 1, 
      1, 0, 2, 1])/((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 
      26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 
      54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 
      2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 
      11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 
      54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 
      2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 
      11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 
      4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 
      2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 
      4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 
      74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 4*n1^2*n7 + 124*n3*n7 - 
      128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 24*d*n1*n3*n7 + 
      4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 10*n1*n3^2*n7 + 4*n3^3*n7 - 
      124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 18*n1*n4*n7 + 2*d*n1*n4*n7 + 
      52*n3*n4*n7 - 22*d*n3*n4*n7 + 10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 
      4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 52*d*n7^2 - 4*d^2*n7^2 - 
      12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 12*n1*n3*n7^2 + 12*n3^2*n7^2 - 
      24*n4*n7^2 + 4*d*n4*n7^2 + 8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) + 
   ((-2 + d - n4)*(2 + 2*d - d^2 + 5*n1 - 4*d*n1 + d^2*n1 + 2*n3 - 5*d*n3 + 
      2*d^2*n3 + 4*n1*n3 - 2*d*n1*n3 + 2*n3^2 - 3*d*n3^2 - n1*n3^2 + 2*n3^3 - 
      2*n4 + n1*n4 - d*n1*n4 + 4*n3*n4 - d*n3*n4 + 3*n1*n3*n4 + 2*n3^2*n4 + 
      2*n4^2 - 2*n3*n4^2 - 24*n7 + 13*d*n7 - d^2*n7 - 2*n1*n7 + 12*n3*n7 - 
      7*d*n3*n7 + 2*n1*n3*n7 + 4*n3^2*n7 - 6*n4*n7 + d*n4*n7 + 2*n3*n4*n7 - 
      4*n7^2 + 4*n3*n7^2)*j[p4a, 1 + n1, 0, n3, n4, 0, 1, -1 + n7, 1, 0, 1, 
      2, 0, 1, 1])/((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 
      26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 
      54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 
      2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 
      11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 
      54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 
      2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 
      11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 
      4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 
      2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 
      4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 
      74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 4*n1^2*n7 + 124*n3*n7 - 
      128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 24*d*n1*n3*n7 + 
      4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 10*n1*n3^2*n7 + 4*n3^3*n7 - 
      124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 18*n1*n4*n7 + 2*d*n1*n4*n7 + 
      52*n3*n4*n7 - 22*d*n3*n4*n7 + 10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 
      4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 52*d*n7^2 - 4*d^2*n7^2 - 
      12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 12*n1*n3*n7^2 + 12*n3^2*n7^2 - 
      24*n4*n7^2 + 4*d*n4*n7^2 + 8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) + 
   ((20 - 4*d - d^2 + 20*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 22*n3 + 3*d*n3 + 
      2*d^2*n3 - 12*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 8*n3^2 - 5*d*n3^2 + 
      2*n3^3 - 14*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 14*n3*n4 - 7*d*n3*n4 + 
      3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 18*n7 + 11*d*n7 - 
      d^2*n7 + 6*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + d*n4*n7 + 
      4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, 0, n3, n4, 0, 1, 
      -1 + n7, 1, 0, 2, 1, 0, 1, 1])/(84 - 142*d + 68*d^2 - 10*d^3 + 26*n1 - 
     35*d*n1 + 9*d^2*n1 + 2*n1^2 - 2*d*n1^2 + 12*n3 + 68*d*n3 - 54*d^2*n3 + 
     10*d^3*n3 + 2*n1*n3 + 24*d*n1*n3 - 9*d^2*n1*n3 + 2*d*n1^2*n3 - 84*n3^2 + 
     70*d*n3^2 - 14*d^2*n3^2 - 26*n1*n3^2 + 11*d*n1*n3^2 - 2*n1^2*n3^2 - 
     12*n3^3 + 4*d*n3^3 - 2*n1*n3^3 - 16*n4 + 54*d*n4 - 34*d^2*n4 + 
     6*d^3*n4 + 12*n1*n4 + d*n1*n4 - 2*d^2*n1*n4 + 2*n1^2*n4 - 88*n3*n4 + 
     82*d*n3*n4 - 18*d^2*n3*n4 - 24*n1*n3*n4 + 11*d*n1*n3*n4 - 2*n1^2*n3*n4 - 
     24*n3^2*n4 + 8*d*n3^2*n4 - 4*n1*n3^2*n4 - 68*n4^2 + 52*d*n4^2 - 
     10*d^2*n4^2 - 6*n1*n4^2 + 2*d*n1*n4^2 - 28*n3*n4^2 + 12*d*n3*n4^2 - 
     2*n1*n3*n4^2 - 12*n4^3 + 4*d*n4^3 - 4*n3*n4^3 + 320*n7 - 298*d*n7 + 
     82*d^2*n7 - 6*d^3*n7 + 74*n1*n7 - 36*d*n1*n7 + 2*d^2*n1*n7 + 4*n1^2*n7 - 
     124*n3*n7 + 128*d*n3*n7 - 30*d^2*n3*n7 - 48*n1*n3*n7 + 24*d*n1*n3*n7 - 
     4*n1^2*n3*n7 - 64*n3^2*n7 + 26*d*n3^2*n7 - 10*n1*n3^2*n7 - 4*n3^3*n7 + 
     124*n4*n7 - 62*d*n4*n7 + 6*d^2*n4*n7 + 18*n1*n4*n7 - 2*d*n1*n4*n7 - 
     52*n3*n4*n7 + 22*d*n3*n4*n7 - 10*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 
     4*n4^2*n7 - 4*n3*n4^2*n7 + 108*n7^2 - 52*d*n7^2 + 4*d^2*n7^2 + 
     12*n1*n7^2 - 64*n3*n7^2 + 28*d*n3*n7^2 - 12*n1*n3*n7^2 - 12*n3^2*n7^2 + 
     24*n4*n7^2 - 4*d*n4*n7^2 - 8*n3*n4*n7^2 + 8*n7^3 - 8*n3*n7^3) + 
   ((-20 + 4*d + d^2 - 20*n1 + 8*d*n1 - d^2*n1 - 2*n1^2 + 22*n3 - 3*d*n3 - 
      2*d^2*n3 + 12*n1*n3 - 2*d*n1*n3 + 2*n1^2*n3 - 8*n3^2 + 5*d*n3^2 - 
      2*n3^3 + 14*n4 - 6*d*n4 - n1*n4 + d*n1*n4 - 14*n3*n4 + 7*d*n3*n4 - 
      3*n1*n3*n4 - 4*n3^2*n4 + 2*n4^2 - 2*n3*n4^2 + 18*n7 - 11*d*n7 + 
      d^2*n7 - 6*n3*n7 + 5*d*n3*n7 - 4*n3^2*n7 + 8*n4*n7 - d*n4*n7 - 
      4*n3*n4*n7 + 2*n7^2 - 2*n3*n7^2)*j[p4a, 1 + n1, 0, n3, n4, 0, 1, 
      -1 + n7, 2, 0, 1, 0, 0, 1, 1])/(84 - 142*d + 68*d^2 - 10*d^3 + 26*n1 - 
     35*d*n1 + 9*d^2*n1 + 2*n1^2 - 2*d*n1^2 + 12*n3 + 68*d*n3 - 54*d^2*n3 + 
     10*d^3*n3 + 2*n1*n3 + 24*d*n1*n3 - 9*d^2*n1*n3 + 2*d*n1^2*n3 - 84*n3^2 + 
     70*d*n3^2 - 14*d^2*n3^2 - 26*n1*n3^2 + 11*d*n1*n3^2 - 2*n1^2*n3^2 - 
     12*n3^3 + 4*d*n3^3 - 2*n1*n3^3 - 16*n4 + 54*d*n4 - 34*d^2*n4 + 
     6*d^3*n4 + 12*n1*n4 + d*n1*n4 - 2*d^2*n1*n4 + 2*n1^2*n4 - 88*n3*n4 + 
     82*d*n3*n4 - 18*d^2*n3*n4 - 24*n1*n3*n4 + 11*d*n1*n3*n4 - 2*n1^2*n3*n4 - 
     24*n3^2*n4 + 8*d*n3^2*n4 - 4*n1*n3^2*n4 - 68*n4^2 + 52*d*n4^2 - 
     10*d^2*n4^2 - 6*n1*n4^2 + 2*d*n1*n4^2 - 28*n3*n4^2 + 12*d*n3*n4^2 - 
     2*n1*n3*n4^2 - 12*n4^3 + 4*d*n4^3 - 4*n3*n4^3 + 320*n7 - 298*d*n7 + 
     82*d^2*n7 - 6*d^3*n7 + 74*n1*n7 - 36*d*n1*n7 + 2*d^2*n1*n7 + 4*n1^2*n7 - 
     124*n3*n7 + 128*d*n3*n7 - 30*d^2*n3*n7 - 48*n1*n3*n7 + 24*d*n1*n3*n7 - 
     4*n1^2*n3*n7 - 64*n3^2*n7 + 26*d*n3^2*n7 - 10*n1*n3^2*n7 - 4*n3^3*n7 + 
     124*n4*n7 - 62*d*n4*n7 + 6*d^2*n4*n7 + 18*n1*n4*n7 - 2*d*n1*n4*n7 - 
     52*n3*n4*n7 + 22*d*n3*n4*n7 - 10*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 
     4*n4^2*n7 - 4*n3*n4^2*n7 + 108*n7^2 - 52*d*n7^2 + 4*d^2*n7^2 + 
     12*n1*n7^2 - 64*n3*n7^2 + 28*d*n3*n7^2 - 12*n1*n3*n7^2 - 12*n3^2*n7^2 + 
     24*n4*n7^2 - 4*d*n4*n7^2 - 8*n3*n4*n7^2 + 8*n7^3 - 8*n3*n7^3) + 
   ((-2 + d - n4)*(20 - 4*d - d^2 + 20*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 
      22*n3 + 3*d*n3 + 2*d^2*n3 - 12*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 8*n3^2 - 
      5*d*n3^2 + 2*n3^3 - 14*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 14*n3*n4 - 
      7*d*n3*n4 + 3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 18*n7 + 
      11*d*n7 - d^2*n7 + 6*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + 
      d*n4*n7 + 4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, 0, n3, n4, 0, 
      1, n7, 0, -1, 1, 2, 0, 1, 1])/((-3 + d - n1 - n7)*
     (-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 
      2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 
      24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 
      14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 
      4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 
      12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 
      18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 
      24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 
      10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 
      2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 
      82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) - 
   ((-1 + n3)*(-2 + d - n4)*(18 - 6*d + 15*n1 - 4*d*n1 + 2*n1^2 - 6*n3 + 
      2*d*n3 - n1*n3 - 12*n4 + 6*d*n4 - 2*n3*n4 - 4*n4^2 + 6*n7 - 2*d*n7 + 
      2*n1*n7 - 2*n4*n7 + 2*n7^2)*j[p4a, 1 + n1, 0, n3, n4, 0, 1, n7, 0, -1, 
      2, 1, 0, 1, 1])/((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 
      26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 
      54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 
      2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 
      11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 
      54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 
      2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 
      11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 
      4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 
      2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 
      4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 
      74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 4*n1^2*n7 + 124*n3*n7 - 
      128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 24*d*n1*n3*n7 + 
      4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 10*n1*n3^2*n7 + 4*n3^3*n7 - 
      124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 18*n1*n4*n7 + 2*d*n1*n4*n7 + 
      52*n3*n4*n7 - 22*d*n3*n4*n7 + 10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 
      4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 52*d*n7^2 - 4*d^2*n7^2 - 
      12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 12*n1*n3*n7^2 + 12*n3^2*n7^2 - 
      24*n4*n7^2 + 4*d*n4*n7^2 + 8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) + 
   ((576 - 590*d + 193*d^2 - 20*d^3 + 646*n1 - 615*d*n1 + 186*d^2*n1 - 
      18*d^3*n1 + 192*n1^2 - 149*d*n1^2 + 33*d^2*n1^2 - 2*d^3*n1^2 + 
      14*n1^3 - 6*d*n1^3 - 670*n3 + 713*d*n3 - 237*d^2*n3 + 24*d^3*n3 - 
      548*n1*n3 + 522*d*n1*n3 - 148*d^2*n1*n3 + 12*d^3*n1*n3 - 128*n1^2*n3 + 
      94*d*n1^2*n3 - 15*d^2*n1^2*n3 - 12*n1^3*n3 + 6*d*n1^3*n3 + 134*n3^2 - 
      192*d*n3^2 + 76*d^2*n3^2 - 8*d^3*n3^2 + 8*n1*n3^2 - 41*d*n1*n3^2 + 
      14*d^2*n1*n3^2 - 16*n1^2*n3^2 + 3*d*n1^2*n3^2 - 2*n1^3*n3^2 + 38*n3^3 - 
      23*d*n3^3 + 2*d^2*n3^3 + 20*n1*n3^3 - 10*d*n1*n3^3 + 2*n3^4 + 
      2*n1*n3^4 - 280*n4 + 404*d*n4 - 162*d^2*n4 + 19*d^3*n4 + 18*n1*n4 + 
      73*d*n1*n4 - 39*d^2*n1*n4 + 5*d^3*n1*n4 + 54*n1^2*n4 - 21*d*n1^2*n4 + 
      3*d^2*n1^2*n4 + 4*n1^3*n4 + 122*n3*n4 - 283*d*n3*n4 + 128*d^2*n3*n4 - 
      14*d^3*n3*n4 - 91*n1*n3*n4 + 3*d*n1*n3*n4 + 7*d^2*n1*n3*n4 - 
      26*n1^2*n3*n4 + d*n1^2*n3*n4 - 4*n1^3*n3*n4 + 138*n3^2*n4 - 
      64*d*n3^2*n4 - d^2*n3^2*n4 + 66*n1*n3^2*n4 - 28*d*n1*n3^2*n4 + 
      4*n1^2*n3^2*n4 - 10*n3^3*n4 + 11*d*n3^3*n4 + 7*n1*n3^3*n4 - 2*n3^4*n4 - 
      218*n4^2 + 132*d*n4^2 - 18*d^2*n4^2 - 102*n1*n4^2 + 57*d*n1*n4^2 - 
      9*d^2*n1*n4^2 - 3*n1^2*n4^2 - d*n1^2*n4^2 + 176*n3*n4^2 - 
      100*d*n3*n4^2 + 9*d^2*n3*n4^2 + 31*n1*n3*n4^2 - 5*d*n1*n3*n4^2 + 
      7*n1^2*n3*n4^2 - 16*n3^2*n4^2 + 21*d*n3^2*n4^2 + 7*n1*n3^2*n4^2 - 
      10*n3^3*n4^2 - 12*n4^3 + 2*d*n4^3 - 10*n1*n4^3 + 4*d*n1*n4^3 + 
      6*n3*n4^3 + 2*d*n3*n4^3 - 6*n1*n3*n4^3 - 10*n3^2*n4^3 + 222*n7 - 
      143*d*n7 + 24*d^2*n7 - d^3*n7 + 246*n1*n7 - 143*d*n1*n7 + 
      22*d^2*n1*n7 - d^3*n1*n7 + 70*n1^2*n7 - 28*d*n1^2*n7 + 2*d^2*n1^2*n7 + 
      4*n1^3*n7 - 358*n3*n7 + 259*d*n3*n7 - 49*d^2*n3*n7 + 2*d^3*n3*n7 - 
      236*n1*n3*n7 + 120*d*n1*n3*n7 - 10*d^2*n1*n3*n7 - 52*n1^2*n3*n7 + 
      16*d*n1^2*n3*n7 - 4*n1^3*n3*n7 + 104*n3^2*n7 - 97*d*n3^2*n7 + 
      19*d^2*n3^2*n7 + 30*n1*n3^2*n7 - 21*d*n1*n3^2*n7 - 2*n1^2*n3^2*n7 + 
      30*n3^3*n7 - 11*d*n3^3*n7 + 8*n1*n3^3*n7 + 2*n3^4*n7 - 20*n4*n7 - 
      33*d*n4*n7 + 33*d^2*n4*n7 - 5*d^3*n4*n7 - 15*n1*n4*n7 + 12*d*n1*n4*n7 + 
      8*n1^2*n4*n7 - 2*d*n1^2*n4*n7 + 58*n3*n4*n7 - 55*d*n3*n4*n7 + 
      5*d^2*n3*n4*n7 + 12*n1*n3*n4*n7 - 16*d*n1*n3*n4*n7 + 34*n3^2*n4*n7 - 
      2*d*n3^2*n4*n7 + 19*n1*n3^2*n4*n7 + 60*n4^2*n7 - 58*d*n4^2*n7 + 
      9*d^2*n4^2*n7 - 10*n1*n4^2*n7 + d*n1*n4^2*n7 + 20*n3*n4^2*n7 + 
      5*d*n3*n4^2*n7 + 6*n1*n3*n4^2*n7 - 12*n3^2*n4^2*n7 + 20*n4^3*n7 - 
      4*d*n4^3*n7 - 4*n3*n4^3*n7 - 72*n7^2 + 95*d*n7^2 - 32*d^2*n7^2 + 
      3*d^3*n7^2 + 6*n1*n7^2 + 4*d*n1*n7^2 + 4*n1^2*n7^2 - 56*n3*n7^2 + 
      2*d*n3*n7^2 + 6*d^2*n3*n7^2 - 16*n1*n3*n7^2 - 4*d*n1*n3*n7^2 - 
      4*n1^2*n3*n7^2 + 56*n3^2*n7^2 - 25*d*n3^2*n7^2 + 10*n1*n3^2*n7^2 + 
      8*n3^3*n7^2 - 50*n4*n7^2 + 23*d*n4*n7^2 - 3*d^2*n4*n7^2 - 
      10*n1*n4*n7^2 + 10*n3*n4*n7^2 - 3*d*n3*n4*n7^2 + 10*n1*n3*n4*n7^2 + 
      8*n3^2*n4*n7^2 + 4*n4^2*n7^2 - 4*n3*n4^2*n7^2 - 46*n7^3 + 24*d*n7^3 - 
      2*d^2*n7^3 - 4*n1*n7^3 + 20*n3*n7^3 - 12*d*n3*n7^3 + 4*n1*n3*n7^3 + 
      10*n3^2*n7^3 - 12*n4*n7^3 + 2*d*n4*n7^3 + 4*n3*n4*n7^3 - 4*n7^4 + 
      4*n3*n7^4)*j[p4a, 1 + n1, 0, n3, n4, 0, 1, n7, 0, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 
      9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 
      10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 
      84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 
      2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 
      34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 
      88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 
      2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 
      52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 
      12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 
      298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) + 
   ((-1 + n3)*(-2 + d - n4)*(18 - 6*d + 15*n1 - 4*d*n1 + 2*n1^2 - 6*n3 + 
      2*d*n3 - n1*n3 - 12*n4 + 6*d*n4 - 2*n3*n4 - 4*n4^2 + 6*n7 - 2*d*n7 + 
      2*n1*n7 - 2*n4*n7 + 2*n7^2)*j[p4a, 1 + n1, 0, n3, n4, 0, 1, n7, 0, 0, 
      1, 2, -1, 1, 1])/((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 
      26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 
      54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 
      2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 
      11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 
      54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 
      2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 
      11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 
      4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 
      2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 
      4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 
      74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 4*n1^2*n7 + 124*n3*n7 - 
      128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 24*d*n1*n3*n7 + 
      4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 10*n1*n3^2*n7 + 4*n3^3*n7 - 
      124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 18*n1*n4*n7 + 2*d*n1*n4*n7 + 
      52*n3*n4*n7 - 22*d*n3*n4*n7 + 10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 
      4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 52*d*n7^2 - 4*d^2*n7^2 - 
      12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 12*n1*n3*n7^2 + 12*n3^2*n7^2 - 
      24*n4*n7^2 + 4*d*n4*n7^2 + 8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) - 
   ((-1 + n3)*(-2 + d - n4)*(18 - 6*d + 15*n1 - 4*d*n1 + 2*n1^2 - 6*n3 + 
      2*d*n3 - n1*n3 - 12*n4 + 6*d*n4 - 2*n3*n4 - 4*n4^2 + 6*n7 - 2*d*n7 + 
      2*n1*n7 - 2*n4*n7 + 2*n7^2)*j[p4a, 1 + n1, 0, n3, n4, 0, 1, n7, 0, 0, 
      1, 2, 0, 1, 1])/((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 
      26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 
      54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 
      2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 
      11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 
      54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 
      2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 
      11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 
      4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 
      2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 
      4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 
      74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 4*n1^2*n7 + 124*n3*n7 - 
      128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 24*d*n1*n3*n7 + 
      4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 10*n1*n3^2*n7 + 4*n3^3*n7 - 
      124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 18*n1*n4*n7 + 2*d*n1*n4*n7 + 
      52*n3*n4*n7 - 22*d*n3*n4*n7 + 10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 
      4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 52*d*n7^2 - 4*d^2*n7^2 - 
      12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 12*n1*n3*n7^2 + 12*n3^2*n7^2 - 
      24*n4*n7^2 + 4*d*n4*n7^2 + 8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) + 
   ((20 - 4*d - d^2 + 20*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 22*n3 + 3*d*n3 + 
      2*d^2*n3 - 12*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 8*n3^2 - 5*d*n3^2 + 
      2*n3^3 - 14*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 14*n3*n4 - 7*d*n3*n4 + 
      3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 18*n7 + 11*d*n7 - 
      d^2*n7 + 6*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + d*n4*n7 + 
      4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, 0, n3, n4, 0, 1, n7, 1, 
      -1, 1, 1, 0, 0, 2])/(84 - 142*d + 68*d^2 - 10*d^3 + 26*n1 - 35*d*n1 + 
     9*d^2*n1 + 2*n1^2 - 2*d*n1^2 + 12*n3 + 68*d*n3 - 54*d^2*n3 + 10*d^3*n3 + 
     2*n1*n3 + 24*d*n1*n3 - 9*d^2*n1*n3 + 2*d*n1^2*n3 - 84*n3^2 + 70*d*n3^2 - 
     14*d^2*n3^2 - 26*n1*n3^2 + 11*d*n1*n3^2 - 2*n1^2*n3^2 - 12*n3^3 + 
     4*d*n3^3 - 2*n1*n3^3 - 16*n4 + 54*d*n4 - 34*d^2*n4 + 6*d^3*n4 + 
     12*n1*n4 + d*n1*n4 - 2*d^2*n1*n4 + 2*n1^2*n4 - 88*n3*n4 + 82*d*n3*n4 - 
     18*d^2*n3*n4 - 24*n1*n3*n4 + 11*d*n1*n3*n4 - 2*n1^2*n3*n4 - 24*n3^2*n4 + 
     8*d*n3^2*n4 - 4*n1*n3^2*n4 - 68*n4^2 + 52*d*n4^2 - 10*d^2*n4^2 - 
     6*n1*n4^2 + 2*d*n1*n4^2 - 28*n3*n4^2 + 12*d*n3*n4^2 - 2*n1*n3*n4^2 - 
     12*n4^3 + 4*d*n4^3 - 4*n3*n4^3 + 320*n7 - 298*d*n7 + 82*d^2*n7 - 
     6*d^3*n7 + 74*n1*n7 - 36*d*n1*n7 + 2*d^2*n1*n7 + 4*n1^2*n7 - 124*n3*n7 + 
     128*d*n3*n7 - 30*d^2*n3*n7 - 48*n1*n3*n7 + 24*d*n1*n3*n7 - 
     4*n1^2*n3*n7 - 64*n3^2*n7 + 26*d*n3^2*n7 - 10*n1*n3^2*n7 - 4*n3^3*n7 + 
     124*n4*n7 - 62*d*n4*n7 + 6*d^2*n4*n7 + 18*n1*n4*n7 - 2*d*n1*n4*n7 - 
     52*n3*n4*n7 + 22*d*n3*n4*n7 - 10*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 
     4*n4^2*n7 - 4*n3*n4^2*n7 + 108*n7^2 - 52*d*n7^2 + 4*d^2*n7^2 + 
     12*n1*n7^2 - 64*n3*n7^2 + 28*d*n3*n7^2 - 12*n1*n3*n7^2 - 12*n3^2*n7^2 + 
     24*n4*n7^2 - 4*d*n4*n7^2 - 8*n3*n4*n7^2 + 8*n7^3 - 8*n3*n7^3) + 
   ((-2 + d - n4)*(20 - 4*d - d^2 + 20*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 
      22*n3 + 3*d*n3 + 2*d^2*n3 - 12*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 8*n3^2 - 
      5*d*n3^2 + 2*n3^3 - 14*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 14*n3*n4 - 
      7*d*n3*n4 + 3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 18*n7 + 
      11*d*n7 - d^2*n7 + 6*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + 
      d*n4*n7 + 4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, 0, n3, n4, 0, 
      1, n7, 1, -1, 2, 0, 0, 1, 1])/((-3 + d - n1 - n7)*
     (-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 
      2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 
      24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 
      14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 
      4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 
      12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 
      18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 
      24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 
      10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 
      2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 
      82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) - 
   ((-1 + n3)*(-2 + d - n4)*(18 - 6*d + 15*n1 - 4*d*n1 + 2*n1^2 - 6*n3 + 
      2*d*n3 - n1*n3 - 12*n4 + 6*d*n4 - 2*n3*n4 - 4*n4^2 + 6*n7 - 2*d*n7 + 
      2*n1*n7 - 2*n4*n7 + 2*n7^2)*j[p4a, 1 + n1, 0, n3, n4, 0, 1, n7, 1, -1, 
      2, 1, 0, 0, 1])/((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 
      26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 
      54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 
      2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 
      11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 
      54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 
      2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 
      11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 
      4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 
      2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 
      4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 
      74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 4*n1^2*n7 + 124*n3*n7 - 
      128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 24*d*n1*n3*n7 + 
      4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 10*n1*n3^2*n7 + 4*n3^3*n7 - 
      124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 18*n1*n4*n7 + 2*d*n1*n4*n7 + 
      52*n3*n4*n7 - 22*d*n3*n4*n7 + 10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 
      4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 52*d*n7^2 - 4*d^2*n7^2 - 
      12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 12*n1*n3*n7^2 + 12*n3^2*n7^2 - 
      24*n4*n7^2 + 4*d*n4*n7^2 + 8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) + 
   ((64 - 156*d + 84*d^2 - 13*d^3 + 116*n1 - 178*d*n1 + 62*d^2*n1 - 
      5*d^3*n1 + 78*n1^2 - 93*d*n1^2 + 26*d^2*n1^2 - 2*d^3*n1^2 + 8*n1^3 - 
      6*d*n1^3 - 48*n3 + 188*d*n3 - 112*d^2*n3 + 18*d^3*n3 - 102*n1*n3 + 
      195*d*n1*n3 - 68*d^2*n1*n3 + 4*d^3*n1*n3 - 38*n1^2*n3 + 56*d*n1^2*n3 - 
      11*d^2*n1^2*n3 - 6*n1^3*n3 + 6*d*n1^3*n3 - 54*n3^2 + 7*d*n3^2 + 
      17*d^2*n3^2 - 4*d^3*n3^2 - 30*n1*n3^2 - 15*d*n1*n3^2 + 12*d^2*n1*n3^2 - 
      16*n1^2*n3^2 + 3*d*n1^2*n3^2 - 2*n1^3*n3^2 + 12*n3^3 - 13*d*n3^3 + 
      2*d^2*n3^3 + 14*n1*n3^3 - 10*d*n1*n3^3 + 2*n3^4 + 2*n1*n3^4 - 16*n4 + 
      70*d*n4 - 48*d^2*n4 + 9*d^3*n4 - 18*n1*n4 + 75*d*n1*n4 - 34*d^2*n1*n4 + 
      3*d^3*n1*n4 + 41*n1^2*n4 - 18*d*n1^2*n4 + 3*d^2*n1^2*n4 + 4*n1^3*n4 - 
      76*n3*n4 + 18*d*n3*n4 + 21*d^2*n3*n4 - 6*d^3*n3*n4 - 84*n1*n3*n4 + 
      7*d*n1*n3*n4 + 11*d^2*n1*n3*n4 - 25*n1^2*n3*n4 + d*n1^2*n3*n4 - 
      4*n1^3*n3*n4 + 32*n3^2*n4 - 22*d*n3^2*n4 + d^2*n3^2*n4 + 
      47*n1*n3^2*n4 - 26*d*n1*n3^2*n4 + 4*n1^2*n3^2*n4 - 6*n3^3*n4 + 
      7*d*n3^3*n4 + 7*n1*n3^3*n4 - 2*n3^4*n4 - 40*n4^2 + 44*d*n4^2 - 
      12*d^2*n4^2 - 54*n1*n4^2 + 37*d*n1*n4^2 - 5*d^2*n1*n4^2 + n1^2*n4^2 - 
      d*n1^2*n4^2 + 8*n3*n4^2 - 20*d*n3*n4^2 + 7*d^2*n3*n4^2 + 7*n1*n3*n4^2 - 
      7*d*n1*n3*n4^2 + 3*n1^2*n3*n4^2 - 6*n3^2*n4^2 + 7*d*n3^2*n4^2 + 
      7*n1*n3^2*n4^2 - 6*n3^3*n4^2 - 16*n4^3 + 10*d*n4^3 - 8*n1*n4^3 + 
      2*d*n1*n4^3 + 10*n3*n4^3 - 8*d*n3*n4^3 - 2*n3^2*n4^3 - 4*n4^4 + 
      4*n3*n4^4 + 432*n7 - 334*d*n7 + 63*d^2*n7 + 372*n1*n7 - 226*d*n1*n7 + 
      38*d^2*n1*n7 - 3*d^3*n1*n7 + 116*n1^2*n7 - 48*d*n1^2*n7 + 
      4*d^2*n1^2*n7 + 8*n1^3*n7 - 418*n3*n7 + 313*d*n3*n7 - 40*d^2*n3*n7 - 
      6*d^3*n3*n7 - 306*n1*n3*n7 + 149*d*n1*n3*n7 - 6*d^2*n1*n3*n7 - 
      82*n1^2*n3*n7 + 24*d*n1^2*n3*n7 - 8*n1^3*n3*n7 + 76*n3^2*n7 - 
      108*d*n3^2*n7 + 29*d^2*n3^2*n7 + 34*n1*n3^2*n7 - 31*d*n1*n3^2*n7 - 
      2*n1^2*n3^2*n7 + 36*n3^3*n7 - 15*d*n3^3*n7 + 12*n1*n3^3*n7 + 
      2*n3^4*n7 - 8*n4*n7 + 22*d*n4*n7 + 2*d^2*n4*n7 - 3*d^3*n4*n7 - 
      30*n1*n4*n7 + 20*d*n1*n4*n7 + 2*d^2*n1*n4*n7 + 10*n1^2*n4*n7 - 
      4*d*n1^2*n4*n7 + 74*n3*n4*n7 - 110*d*n3*n4*n7 + 29*d^2*n3*n4*n7 + 
      51*n1*n3*n4*n7 - 40*d*n1*n3*n4*n7 + 6*n1^2*n3*n4*n7 + 54*n3^2*n4*n7 - 
      18*d*n3^2*n4*n7 + 27*n1*n3^2*n4*n7 + 16*n4^2*n7 - 18*d*n4^2*n7 + 
      5*d^2*n4^2*n7 - 14*n1*n4^2*n7 + d*n1*n4^2*n7 + 32*n3*n4^2*n7 - 
      13*d*n3*n4^2*n7 + 10*n1*n3*n4^2*n7 - 4*n3^2*n4^2*n7 + 4*n4^3*n7 - 
      2*d*n4^3*n7 + 4*n3*n4^3*n7 - 88*n7^2 + 168*d*n7^2 - 63*d^2*n7^2 + 
      5*d^3*n7^2 + 16*n1*n7^2 + 10*d*n1*n7^2 + 8*n1^2*n7^2 - 80*n3*n7^2 - 
      31*d*n3*n7^2 + 24*d^2*n3*n7^2 - 34*n1*n3*n7^2 - 10*d*n1*n3*n7^2 - 
      8*n1^2*n3*n7^2 + 84*n3^2*n7^2 - 43*d*n3^2*n7^2 + 18*n1*n3^2*n7^2 + 
      12*n3^3*n7^2 - 120*n4*n7^2 + 62*d*n4*n7^2 - 5*d^2*n4*n7^2 - 
      24*n1*n4*n7^2 + 68*n3*n4*n7^2 - 33*d*n3*n4*n7^2 + 24*n1*n3*n4*n7^2 + 
      16*n3^2*n4*n7^2 - 4*n4^2*n7^2 + 4*n3*n4^2*n7^2 - 88*n7^3 + 50*d*n7^3 - 
      4*d^2*n7^3 - 8*n1*n7^3 + 38*n3*n7^3 - 26*d*n3*n7^3 + 8*n1*n3*n7^3 + 
      18*n3^2*n7^3 - 28*n4*n7^3 + 4*d*n4*n7^3 + 12*n3*n4*n7^3 - 8*n7^4 + 
      8*n3*n7^4)*j[p4a, 1 + n1, 0, n3, n4, 0, 1, n7, 1, 0, 0, 1, 0, 1, 1])/
    ((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 
      9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 
      10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 
      84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 
      2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 
      34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 
      88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 
      2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 
      52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 
      12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 
      298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) + 
   ((-1 + n3)*(-2 + d - n4)*(18 - 6*d + 15*n1 - 4*d*n1 + 2*n1^2 - 6*n3 + 
      2*d*n3 - n1*n3 - 12*n4 + 6*d*n4 - 2*n3*n4 - 4*n4^2 + 6*n7 - 2*d*n7 + 
      2*n1*n7 - 2*n4*n7 + 2*n7^2)*j[p4a, 1 + n1, 0, n3, n4, 0, 1, n7, 1, 0, 
      0, 2, -1, 1, 1])/((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 
      26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 
      54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 
      2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 
      11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 
      54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 
      2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 
      11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 
      4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 
      2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 
      4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 
      74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 4*n1^2*n7 + 124*n3*n7 - 
      128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 24*d*n1*n3*n7 + 
      4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 10*n1*n3^2*n7 + 4*n3^3*n7 - 
      124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 18*n1*n4*n7 + 2*d*n1*n4*n7 + 
      52*n3*n4*n7 - 22*d*n3*n4*n7 + 10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 
      4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 52*d*n7^2 - 4*d^2*n7^2 - 
      12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 12*n1*n3*n7^2 + 12*n3^2*n7^2 - 
      24*n4*n7^2 + 4*d*n4*n7^2 + 8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) - 
   ((-2 + d - n4)*(-16 + 8*d - d^2 - 10*n1 + d^2*n1 - 2*n1^2 + 26*n3 - 
      13*d*n3 + 2*d^2*n3 + 20*n1*n3 - 6*d*n1*n3 + 2*n1^2*n3 - 4*n3^2 - 
      d*n3^2 - 2*n1*n3^2 + 2*n3^3 + 10*n4 - 6*d*n4 + n1*n4 - d*n1*n4 - 
      6*n3*n4 + 5*d*n3*n4 + 3*n1*n3*n4 + 6*n4^2 - 6*n3*n4^2 - 30*n7 + 
      15*d*n7 - d^2*n7 - 4*n1*n7 + 18*n3*n7 - 9*d*n3*n7 + 4*n1*n3*n7 + 
      4*n3^2*n7 - 4*n4*n7 + d*n4*n7 - 6*n7^2 + 6*n3*n7^2)*
     j[p4a, 1 + n1, 0, n3, n4, 0, 1, n7, 1, 0, 0, 2, 0, 1, 1])/
    ((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 
      9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 
      10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 
      84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 
      2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 
      34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 
      88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 
      2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 
      52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 
      12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 
      298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) + 
   ((-124 + 188*d - 85*d^2 + 12*d^3 - 196*n1 + 226*d*n1 - 72*d^2*n1 + 
      6*d^3*n1 - 104*n1^2 + 103*d*n1^2 - 27*d^2*n1^2 + 2*d^3*n1^2 - 10*n1^3 + 
      6*d*n1^3 + 114*n3 - 219*d*n3 + 109*d^2*n3 - 16*d^3*n3 + 160*n1*n3 - 
      216*d*n1*n3 + 68*d^2*n1*n3 - 4*d^3*n1*n3 + 56*n1^2*n3 - 60*d*n1^2*n3 + 
      11*d^2*n1^2*n3 + 8*n1^3*n3 - 6*d*n1^3*n3 + 30*n3^2 + 16*d*n3^2 - 
      22*d^2*n3^2 + 4*d^3*n3^2 + 22*n1*n3^2 + 20*d*n1*n3^2 - 12*d^2*n1*n3^2 + 
      16*n1^2*n3^2 - 3*d*n1^2*n3^2 + 2*n1^3*n3^2 - 18*n3^3 + 15*d*n3^3 - 
      2*d^2*n3^3 - 16*n1*n3^3 + 10*d*n1*n3^3 - 2*n3^4 - 2*n1*n3^4 + 58*n4 - 
      102*d*n4 + 54*d^2*n4 - 9*d^3*n4 + 29*n1*n4 - 77*d*n1*n4 + 
      33*d^2*n1*n4 - 3*d^3*n1*n4 - 42*n1^2*n4 + 19*d*n1^2*n4 - 
      3*d^2*n1^2*n4 - 4*n1^3*n4 + 34*n3*n4 + 17*d*n3*n4 - 28*d^2*n3*n4 + 
      6*d^3*n3*n4 + 61*n1*n3*n4 + 3*d*n1*n3*n4 - 11*d^2*n1*n3*n4 + 
      22*n1^2*n3*n4 - d*n1^2*n3*n4 + 4*n1^3*n3*n4 - 44*n3^2*n4 + 
      26*d*n3^2*n4 - d^2*n3^2*n4 - 51*n1*n3^2*n4 + 26*d*n1*n3^2*n4 - 
      4*n1^2*n3^2*n4 + 6*n3^3*n4 - 7*d*n3^3*n4 - 7*n1*n3^3*n4 + 2*n3^4*n4 + 
      46*n4^2 - 46*d*n4^2 + 12*d^2*n4^2 + 56*n1*n4^2 - 37*d*n1*n4^2 + 
      5*d^2*n1*n4^2 - n1^2*n4^2 + d*n1^2*n4^2 - 14*n3*n4^2 + 22*d*n3*n4^2 - 
      7*d^2*n3*n4^2 - 9*n1*n3*n4^2 + 7*d*n1*n3*n4^2 - 3*n1^2*n3*n4^2 + 
      6*n3^2*n4^2 - 7*d*n3^2*n4^2 - 7*n1*n3^2*n4^2 + 6*n3^3*n4^2 + 16*n4^3 - 
      10*d*n4^3 + 8*n1*n4^3 - 2*d*n1*n4^3 - 10*n3*n4^3 + 8*d*n3*n4^3 + 
      2*n3^2*n4^3 + 4*n4^4 - 4*n3*n4^4 - 398*n7 + 287*d*n7 - 48*d^2*n7 - 
      d^3*n7 - 374*n1*n7 + 223*d*n1*n7 - 38*d^2*n1*n7 + 3*d^3*n1*n7 - 
      118*n1^2*n7 + 48*d*n1^2*n7 - 4*d^2*n1^2*n7 - 8*n1^3*n7 + 422*n3*n7 - 
      295*d*n3*n7 + 33*d^2*n3*n7 + 6*d^3*n3*n7 + 312*n1*n3*n7 - 
      146*d*n1*n3*n7 + 6*d^2*n1*n3*n7 + 84*n1^2*n3*n7 - 24*d*n1^2*n3*n7 + 
      8*n1^3*n3*n7 - 96*n3^2*n7 + 117*d*n3^2*n7 - 29*d^2*n3^2*n7 - 
      38*n1*n3^2*n7 + 31*d*n1*n3^2*n7 + 2*n1^2*n3^2*n7 - 38*n3^3*n7 + 
      15*d*n3^3*n7 - 12*n1*n3^3*n7 - 2*n3^4*n7 + 46*n4*n7 - 39*d*n4*n7 - 
      d^2*n4*n7 + 3*d^3*n4*n7 + 37*n1*n4*n7 - 20*d*n1*n4*n7 - 
      2*d^2*n1*n4*n7 - 10*n1^2*n4*n7 + 4*d*n1^2*n4*n7 - 100*n3*n4*n7 + 
      121*d*n3*n4*n7 - 29*d^2*n3*n4*n7 - 58*n1*n3*n4*n7 + 40*d*n1*n3*n4*n7 - 
      6*n1^2*n3*n4*n7 - 58*n3^2*n4*n7 + 18*d*n3^2*n4*n7 - 27*n1*n3^2*n4*n7 - 
      14*n4^2*n7 + 18*d*n4^2*n7 - 5*d^2*n4^2*n7 + 14*n1*n4^2*n7 - 
      d*n1*n4^2*n7 - 34*n3*n4^2*n7 + 13*d*n3*n4^2*n7 - 10*n1*n3*n4^2*n7 + 
      4*n3^2*n4^2*n7 - 4*n4^3*n7 + 2*d*n4^3*n7 - 4*n3*n4^3*n7 + 112*n7^2 - 
      181*d*n7^2 + 64*d^2*n7^2 - 5*d^3*n7^2 - 14*n1*n7^2 - 10*d*n1*n7^2 - 
      8*n1^2*n7^2 + 68*n3*n7^2 + 38*d*n3*n7^2 - 24*d^2*n3*n7^2 + 
      32*n1*n3*n7^2 + 10*d*n1*n3*n7^2 + 8*n1^2*n3*n7^2 - 88*n3^2*n7^2 + 
      43*d*n3^2*n7^2 - 18*n1*n3^2*n7^2 - 12*n3^3*n7^2 + 128*n4*n7^2 - 
      63*d*n4*n7^2 + 5*d^2*n4*n7^2 + 24*n1*n4*n7^2 - 72*n3*n4*n7^2 + 
      33*d*n3*n4*n7^2 - 24*n1*n3*n4*n7^2 - 16*n3^2*n4*n7^2 + 4*n4^2*n7^2 - 
      4*n3*n4^2*n7^2 + 90*n7^3 - 50*d*n7^3 + 4*d^2*n7^3 + 8*n1*n7^3 - 
      40*n3*n7^3 + 26*d*n3*n7^3 - 8*n1*n3*n7^3 - 18*n3^2*n7^3 + 28*n4*n7^3 - 
      4*d*n4*n7^3 - 12*n3*n4*n7^3 + 8*n7^4 - 8*n3*n7^4)*
     j[p4a, 1 + n1, 0, n3, n4, 0, 1, n7, 1, 0, 1, 0, 0, 1, 1])/
    ((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 
      9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 
      10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 
      84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 
      2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 
      34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 
      88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 
      2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 
      52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 
      12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 
      298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) - 
   ((-4 + d)*(-1 + n3)*(-2 + d - n4)*(18 - 6*d + 15*n1 - 4*d*n1 + 2*n1^2 - 
      6*n3 + 2*d*n3 - n1*n3 - 12*n4 + 6*d*n4 - 2*n3*n4 - 4*n4^2 + 6*n7 - 
      2*d*n7 + 2*n1*n7 - 2*n4*n7 + 2*n7^2)*j[p4a, 1 + n1, 0, n3, n4, 0, 1, 
      n7, 1, 0, 1, 1, 0, 0, 1])/((-3 + d - n1 - n7)*
     (-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 
      2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 
      24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 
      14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 
      4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 
      12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 
      18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 
      24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 
      10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 
      2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 
      82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) + 
   ((-20 + 4*d + d^2 - 20*n1 + 8*d*n1 - d^2*n1 - 2*n1^2 + 22*n3 - 3*d*n3 - 
      2*d^2*n3 + 12*n1*n3 - 2*d*n1*n3 + 2*n1^2*n3 - 8*n3^2 + 5*d*n3^2 - 
      2*n3^3 + 14*n4 - 6*d*n4 - n1*n4 + d*n1*n4 - 14*n3*n4 + 7*d*n3*n4 - 
      3*n1*n3*n4 - 4*n3^2*n4 + 2*n4^2 - 2*n3*n4^2 + 18*n7 - 11*d*n7 + 
      d^2*n7 - 6*n3*n7 + 5*d*n3*n7 - 4*n3^2*n7 + 8*n4*n7 - d*n4*n7 - 
      4*n3*n4*n7 + 2*n7^2 - 2*n3*n7^2)*j[p4a, 1 + n1, 0, n3, n4, 0, 1, n7, 1, 
      0, 1, 1, 0, 0, 2])/(84 - 142*d + 68*d^2 - 10*d^3 + 26*n1 - 35*d*n1 + 
     9*d^2*n1 + 2*n1^2 - 2*d*n1^2 + 12*n3 + 68*d*n3 - 54*d^2*n3 + 10*d^3*n3 + 
     2*n1*n3 + 24*d*n1*n3 - 9*d^2*n1*n3 + 2*d*n1^2*n3 - 84*n3^2 + 70*d*n3^2 - 
     14*d^2*n3^2 - 26*n1*n3^2 + 11*d*n1*n3^2 - 2*n1^2*n3^2 - 12*n3^3 + 
     4*d*n3^3 - 2*n1*n3^3 - 16*n4 + 54*d*n4 - 34*d^2*n4 + 6*d^3*n4 + 
     12*n1*n4 + d*n1*n4 - 2*d^2*n1*n4 + 2*n1^2*n4 - 88*n3*n4 + 82*d*n3*n4 - 
     18*d^2*n3*n4 - 24*n1*n3*n4 + 11*d*n1*n3*n4 - 2*n1^2*n3*n4 - 24*n3^2*n4 + 
     8*d*n3^2*n4 - 4*n1*n3^2*n4 - 68*n4^2 + 52*d*n4^2 - 10*d^2*n4^2 - 
     6*n1*n4^2 + 2*d*n1*n4^2 - 28*n3*n4^2 + 12*d*n3*n4^2 - 2*n1*n3*n4^2 - 
     12*n4^3 + 4*d*n4^3 - 4*n3*n4^3 + 320*n7 - 298*d*n7 + 82*d^2*n7 - 
     6*d^3*n7 + 74*n1*n7 - 36*d*n1*n7 + 2*d^2*n1*n7 + 4*n1^2*n7 - 124*n3*n7 + 
     128*d*n3*n7 - 30*d^2*n3*n7 - 48*n1*n3*n7 + 24*d*n1*n3*n7 - 
     4*n1^2*n3*n7 - 64*n3^2*n7 + 26*d*n3^2*n7 - 10*n1*n3^2*n7 - 4*n3^3*n7 + 
     124*n4*n7 - 62*d*n4*n7 + 6*d^2*n4*n7 + 18*n1*n4*n7 - 2*d*n1*n4*n7 - 
     52*n3*n4*n7 + 22*d*n3*n4*n7 - 10*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 
     4*n4^2*n7 - 4*n3*n4^2*n7 + 108*n7^2 - 52*d*n7^2 + 4*d^2*n7^2 + 
     12*n1*n7^2 - 64*n3*n7^2 + 28*d*n3*n7^2 - 12*n1*n3*n7^2 - 12*n3^2*n7^2 + 
     24*n4*n7^2 - 4*d*n4*n7^2 - 8*n3*n4*n7^2 + 8*n7^3 - 8*n3*n7^3) - 
   ((-1 + n3)*(1 + n3 - n4)*(2 - d + n4)*(-18 + 6*d - 15*n1 + 4*d*n1 - 
      2*n1^2 + 6*n3 - 2*d*n3 + n1*n3 + 12*n4 - 6*d*n4 + 2*n3*n4 + 4*n4^2 - 
      6*n7 + 2*d*n7 - 2*n1*n7 + 2*n4*n7 - 2*n7^2)*j[p4a, 1 + n1, 0, n3, n4, 
      0, 1, n7, 1, 0, 1, 1, 0, 1, 0])/((-3 + d - n1 - n7)*
     (-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 
      2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 
      24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 
      14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 
      4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 
      12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 
      18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 
      24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 
      10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 
      2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 
      82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) + 
   ((-140 + 110*d - 18*d^2 - 4*d^3 + d^4 - 90*n1 + 57*d*n1 - 18*d^2*n1 + 
      6*d^3*n1 - d^4*n1 + 4*n1^2 - 17*d*n1^2 + 5*d^2*n1^2 + 2*n1^3 - 
      2*d*n1^3 + 292*n3 - 240*d*n3 + 44*d^2*n3 + 7*d^3*n3 - 2*d^4*n3 + 
      190*n1*n3 - 92*d*n1*n3 - 3*d^2*n1*n3 + 4*d^3*n1*n3 + 26*n1^2*n3 + 
      6*d*n1^2*n3 - 5*d^2*n1^2*n3 + 2*d*n1^3*n3 - 164*n3^2 + 174*d*n3^2 - 
      60*d^2*n3^2 + 7*d^3*n3^2 - 118*n1*n3^2 + 87*d*n1*n3^2 - 
      15*d^2*n1*n3^2 - 28*n1^2*n3^2 + 11*d*n1^2*n3^2 - 2*n1^3*n3^2 - 
      20*n3^3 + 12*d*n3^3 - 2*d^2*n3^3 - 14*n1*n3^3 + 4*d*n1*n3^3 - 
      2*n1^2*n3^3 + 24*n4 - 58*d*n4 + 29*d^2*n4 - 4*d^3*n4 - 94*n1*n4 + 
      91*d*n1*n4 - 35*d^2*n1*n4 + 5*d^3*n1*n4 - 10*n1^2*n4 + 5*d*n1^2*n4 - 
      d^2*n1^2*n4 - 78*n3*n4 + 143*d*n3*n4 - 66*d^2*n3*n4 + 9*d^3*n3*n4 + 
      12*n1*n3*n4 + 18*d*n1*n3*n4 - 7*d^2*n1*n3*n4 + 4*n1^2*n3*n4 + 
      d*n1^2*n3*n4 - 36*n3^2*n4 + 21*d*n3^2*n4 - 4*d^2*n3^2*n4 - 
      14*n1*n3^2*n4 + 3*d*n1*n3^2*n4 - 2*n1^2*n3^2*n4 + 2*n3^3*n4 + 82*n4^2 - 
      50*d*n4^2 + 6*d^2*n4^2 - 17*n1*n4^2 + 23*d*n1*n4^2 - 6*d^2*n1*n4^2 - 
      n1^2*n4^2 + d*n1^2*n4^2 - 130*n3*n4^2 + 85*d*n3*n4^2 - 12*d^2*n3*n4^2 - 
      39*n1*n3*n4^2 + 15*d*n1*n3*n4^2 - 3*n1^2*n3*n4^2 - 4*n3^2*n4^2 + 
      2*d*n3^2*n4^2 + 2*n4^3 + 4*d*n4^3 - 4*n1*n4^3 + 2*d*n1*n4^3 - 
      10*n3*n4^3 - 2*d*n3*n4^3 - 4*n1*n3*n4^3 - 4*n4^4 + 4*n3*n4^4 + 20*n7 - 
      72*d*n7 + 54*d^2*n7 - 14*d^3*n7 + d^4*n7 + 112*n1*n7 - 91*d*n1*n7 + 
      21*d^2*n1*n7 - d^3*n1*n7 + 52*n1^2*n7 - 24*d*n1^2*n7 + 2*d^2*n1^2*n7 + 
      4*n1^3*n7 + 152*n3*n7 - 94*d*n3*n7 + 7*d^2*n3*n7 + 3*d^3*n3*n7 - 
      14*n1*n3*n7 + 32*d*n1*n3*n7 - 9*d^2*n1*n3*n7 - 28*n1^2*n3*n7 + 
      12*d*n1^2*n3*n7 - 4*n1^3*n3*n7 - 92*n3^2*n7 + 72*d*n3^2*n7 - 
      15*d^2*n3^2*n7 - 48*n1*n3^2*n7 + 15*d*n1*n3^2*n7 - 8*n1^2*n3^2*n7 - 
      16*n3^3*n7 + 6*d*n3^3*n7 - 2*n1*n3^3*n7 + 70*n4*n7 - 121*d*n4*n7 + 
      49*d^2*n4*n7 - 5*d^3*n4*n7 - 10*n1*n4*n7 - d*n1*n4*n7 + 4*n1^2*n4*n7 - 
      2*d*n1^2*n4*n7 + 42*n3*n4*n7 + 5*d*n3*n4*n7 - 9*d^2*n3*n4*n7 + 
      24*n1*n3*n4*n7 - 3*d*n1*n3*n4*n7 + 4*n1^2*n3*n4*n7 - 20*n3^2*n4*n7 + 
      14*d*n3^2*n4*n7 + 2*n1*n3^2*n4*n7 - 4*n3^3*n4*n7 + 84*n4^2*n7 - 
      49*d*n4^2*n7 + 6*d^2*n4^2*n7 + 4*n1*n4^2*n7 + d*n1*n4^2*n7 - 
      32*n3*n4^2*n7 + 14*d*n3*n4^2*n7 - 8*n1*n3*n4^2*n7 - 8*n3^2*n4^2*n7 + 
      8*n4^3*n7 - 2*d*n4^3*n7 - 44*n7^2 + 36*d*n7^2 - 9*d^2*n7^2 + d^3*n7^2 + 
      6*n1*n7^2 + 4*n1^2*n7^2 + 40*n3*n7^2 - 20*d*n3*n7^2 + d^2*n3*n7^2 - 
      4*n1*n3*n7^2 - 4*n1^2*n3*n7^2 - 12*n3^2*n7^2 + 4*d*n3^2*n7^2 - 
      2*n1*n3^2*n7^2 + 6*n4*n7^2 - 12*d*n4*n7^2 + d^2*n4*n7^2 - 
      6*n1*n4*n7^2 + 6*n3*n4*n7^2 + 6*d*n3*n4*n7^2 + 6*n1*n3*n4*n7^2 - 
      4*n3^2*n4*n7^2 + 16*n4^2*n7^2 - 2*d*n4^2*n7^2 - 8*n3*n4^2*n7^2 - 
      40*n7^3 + 20*d*n7^3 - 2*d^2*n7^3 - 4*n1*n7^3 + 20*n3*n7^3 - 
      8*d*n3*n7^3 + 4*n1*n3*n7^3 + 4*n3^2*n7^3 - 8*n4*n7^3 + 2*d*n4*n7^3 - 
      4*n7^4 + 4*n3*n7^4)*j[p4a, 1 + n1, 0, n3, n4, 0, 1, n7, 1, 0, 1, 1, 0, 
      1, 1])/((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 
      35*d*n1 - 9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 
      10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 
      84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 
      2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 
      34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 
      88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 
      2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 
      52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 
      12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 
      298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) - 
   ((-2 + d - n4)*(2 + 2*d - d^2 + 5*n1 - 4*d*n1 + d^2*n1 + 2*n3 - 5*d*n3 + 
      2*d^2*n3 + 4*n1*n3 - 2*d*n1*n3 + 2*n3^2 - 3*d*n3^2 - n1*n3^2 + 2*n3^3 - 
      2*n4 + n1*n4 - d*n1*n4 + 4*n3*n4 - d*n3*n4 + 3*n1*n3*n4 + 2*n3^2*n4 + 
      2*n4^2 - 2*n3*n4^2 - 24*n7 + 13*d*n7 - d^2*n7 - 2*n1*n7 + 12*n3*n7 - 
      7*d*n3*n7 + 2*n1*n3*n7 + 4*n3^2*n7 - 6*n4*n7 + d*n4*n7 + 2*n3*n4*n7 - 
      4*n7^2 + 4*n3*n7^2)*j[p4a, 1 + n1, 0, n3, n4, 0, 1, n7, 1, 0, 1, 1, 0, 
      2, 0])/((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 
      35*d*n1 - 9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 
      10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 
      84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 
      2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 
      34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 
      88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 
      2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 
      52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 
      12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 
      298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) + 
   ((-20 + 4*d + d^2 - 20*n1 + 8*d*n1 - d^2*n1 - 2*n1^2 + 22*n3 - 3*d*n3 - 
      2*d^2*n3 + 12*n1*n3 - 2*d*n1*n3 + 2*n1^2*n3 - 8*n3^2 + 5*d*n3^2 - 
      2*n3^3 + 14*n4 - 6*d*n4 - n1*n4 + d*n1*n4 - 14*n3*n4 + 7*d*n3*n4 - 
      3*n1*n3*n4 - 4*n3^2*n4 + 2*n4^2 - 2*n3*n4^2 + 18*n7 - 11*d*n7 + 
      d^2*n7 - 6*n3*n7 + 5*d*n3*n7 - 4*n3^2*n7 + 8*n4*n7 - d*n4*n7 - 
      4*n3*n4*n7 + 2*n7^2 - 2*n3*n7^2)*j[p4a, 1 + n1, 0, n3, n4, 0, 1, n7, 1, 
      0, 2, 0, 0, 1, 1])/(84 - 142*d + 68*d^2 - 10*d^3 + 26*n1 - 35*d*n1 + 
     9*d^2*n1 + 2*n1^2 - 2*d*n1^2 + 12*n3 + 68*d*n3 - 54*d^2*n3 + 10*d^3*n3 + 
     2*n1*n3 + 24*d*n1*n3 - 9*d^2*n1*n3 + 2*d*n1^2*n3 - 84*n3^2 + 70*d*n3^2 - 
     14*d^2*n3^2 - 26*n1*n3^2 + 11*d*n1*n3^2 - 2*n1^2*n3^2 - 12*n3^3 + 
     4*d*n3^3 - 2*n1*n3^3 - 16*n4 + 54*d*n4 - 34*d^2*n4 + 6*d^3*n4 + 
     12*n1*n4 + d*n1*n4 - 2*d^2*n1*n4 + 2*n1^2*n4 - 88*n3*n4 + 82*d*n3*n4 - 
     18*d^2*n3*n4 - 24*n1*n3*n4 + 11*d*n1*n3*n4 - 2*n1^2*n3*n4 - 24*n3^2*n4 + 
     8*d*n3^2*n4 - 4*n1*n3^2*n4 - 68*n4^2 + 52*d*n4^2 - 10*d^2*n4^2 - 
     6*n1*n4^2 + 2*d*n1*n4^2 - 28*n3*n4^2 + 12*d*n3*n4^2 - 2*n1*n3*n4^2 - 
     12*n4^3 + 4*d*n4^3 - 4*n3*n4^3 + 320*n7 - 298*d*n7 + 82*d^2*n7 - 
     6*d^3*n7 + 74*n1*n7 - 36*d*n1*n7 + 2*d^2*n1*n7 + 4*n1^2*n7 - 124*n3*n7 + 
     128*d*n3*n7 - 30*d^2*n3*n7 - 48*n1*n3*n7 + 24*d*n1*n3*n7 - 
     4*n1^2*n3*n7 - 64*n3^2*n7 + 26*d*n3^2*n7 - 10*n1*n3^2*n7 - 4*n3^3*n7 + 
     124*n4*n7 - 62*d*n4*n7 + 6*d^2*n4*n7 + 18*n1*n4*n7 - 2*d*n1*n4*n7 - 
     52*n3*n4*n7 + 22*d*n3*n4*n7 - 10*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 
     4*n4^2*n7 - 4*n3*n4^2*n7 + 108*n7^2 - 52*d*n7^2 + 4*d^2*n7^2 + 
     12*n1*n7^2 - 64*n3*n7^2 + 28*d*n3*n7^2 - 12*n1*n3*n7^2 - 12*n3^2*n7^2 + 
     24*n4*n7^2 - 4*d*n4*n7^2 - 8*n3*n4*n7^2 + 8*n7^3 - 8*n3*n7^3) + 
   ((36 - 48*d + 21*d^2 - 3*d^3 - 4*n1 + 20*d*n1 - 15*d^2*n1 + 3*d^3*n1 - 
      4*n1^2 + 6*d*n1^2 - 2*d^2*n1^2 - 54*n3 + 87*d*n3 - 41*d^2*n3 + 
      6*d^3*n3 - 58*n1*n3 + 60*d*n1*n3 - 14*d^2*n1*n3 - 10*n1^2*n3 + 
      6*d*n1^2*n3 - 48*n3^2 + 37*d*n3^2 - 7*d^2*n3^2 - 24*n1*n3^2 + 
      10*d*n1*n3^2 - 2*n1^2*n3^2 - 6*n3^3 + 2*d*n3^3 - 2*n1*n3^3 - 40*n4 + 
      26*d*n4 - 4*d^2*n4 - 30*n1*n4 + 24*d*n1*n4 - 5*d^2*n1*n4 - 4*n1^2*n4 + 
      2*d*n1^2*n4 - 10*n3*n4 + 7*d*n3*n4 - d^2*n3*n4 - 27*n1*n3*n4 + 
      11*d*n1*n3*n4 - 4*n1^2*n3*n4 - 2*n3^2*n4 - 3*n1*n3^2*n4 - 14*n4^2 + 
      4*d*n4^2 - 6*n1*n4^2 + 2*d*n1*n4^2 + 4*n3*n4^2 - 2*d*n3*n4^2 - 
      2*n1*n3*n4^2 + 2*n3^2*n4^2 + 250*n7 - 209*d*n7 + 51*d^2*n7 - 3*d^3*n7 + 
      82*n1*n7 - 34*d*n1*n7 + d^2*n1*n7 + 6*n1^2*n7 - 140*n3*n7 + 
      120*d*n3*n7 - 25*d^2*n3*n7 - 64*n1*n3*n7 + 28*d*n1*n3*n7 - 
      6*n1^2*n3*n7 - 44*n3^2*n7 + 17*d*n3^2*n7 - 10*n1*n3^2*n7 - 2*n3^3*n7 + 
      80*n4*n7 - 43*d*n4*n7 + 5*d^2*n4*n7 + 13*n1*n4*n7 - d*n1*n4*n7 - 
      28*n3*n4*n7 + 11*d*n3*n4*n7 - 9*n1*n3*n4*n7 - 4*n3^2*n4*n7 + 
      8*n4^2*n7 - 2*d*n4^2*n7 + 72*n7^2 - 29*d*n7^2 + d^2*n7^2 + 12*n1*n7^2 - 
      56*n3*n7^2 + 23*d*n3*n7^2 - 12*n1*n3*n7^2 - 8*n3^2*n7^2 + 10*n4*n7^2 - 
      d*n4*n7^2 - 6*n3*n4*n7^2 + 6*n7^3 - 6*n3*n7^3)*
     j[p4a, 1 + n1, 0, n3, n4, 0, 2, n7, 0, -1, 1, 1, 0, 1, 1])/
    ((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 
      9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 
      10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 
      84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 
      2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 
      34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 
      88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 
      2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 
      52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 
      12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 
      298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) - 
   (n4*(20 - 4*d - d^2 + 20*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 22*n3 + 3*d*n3 + 
      2*d^2*n3 - 12*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 8*n3^2 - 5*d*n3^2 + 
      2*n3^3 - 14*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 14*n3*n4 - 7*d*n3*n4 + 
      3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 18*n7 + 11*d*n7 - 
      d^2*n7 + 6*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + d*n4*n7 + 
      4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, 0, n3, 1 + n4, -1, 1, 
      n7, 0, 0, 1, 1, 0, 1, 1])/(84 - 142*d + 68*d^2 - 10*d^3 + 26*n1 - 
     35*d*n1 + 9*d^2*n1 + 2*n1^2 - 2*d*n1^2 + 12*n3 + 68*d*n3 - 54*d^2*n3 + 
     10*d^3*n3 + 2*n1*n3 + 24*d*n1*n3 - 9*d^2*n1*n3 + 2*d*n1^2*n3 - 84*n3^2 + 
     70*d*n3^2 - 14*d^2*n3^2 - 26*n1*n3^2 + 11*d*n1*n3^2 - 2*n1^2*n3^2 - 
     12*n3^3 + 4*d*n3^3 - 2*n1*n3^3 - 16*n4 + 54*d*n4 - 34*d^2*n4 + 
     6*d^3*n4 + 12*n1*n4 + d*n1*n4 - 2*d^2*n1*n4 + 2*n1^2*n4 - 88*n3*n4 + 
     82*d*n3*n4 - 18*d^2*n3*n4 - 24*n1*n3*n4 + 11*d*n1*n3*n4 - 2*n1^2*n3*n4 - 
     24*n3^2*n4 + 8*d*n3^2*n4 - 4*n1*n3^2*n4 - 68*n4^2 + 52*d*n4^2 - 
     10*d^2*n4^2 - 6*n1*n4^2 + 2*d*n1*n4^2 - 28*n3*n4^2 + 12*d*n3*n4^2 - 
     2*n1*n3*n4^2 - 12*n4^3 + 4*d*n4^3 - 4*n3*n4^3 + 320*n7 - 298*d*n7 + 
     82*d^2*n7 - 6*d^3*n7 + 74*n1*n7 - 36*d*n1*n7 + 2*d^2*n1*n7 + 4*n1^2*n7 - 
     124*n3*n7 + 128*d*n3*n7 - 30*d^2*n3*n7 - 48*n1*n3*n7 + 24*d*n1*n3*n7 - 
     4*n1^2*n3*n7 - 64*n3^2*n7 + 26*d*n3^2*n7 - 10*n1*n3^2*n7 - 4*n3^3*n7 + 
     124*n4*n7 - 62*d*n4*n7 + 6*d^2*n4*n7 + 18*n1*n4*n7 - 2*d*n1*n4*n7 - 
     52*n3*n4*n7 + 22*d*n3*n4*n7 - 10*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 
     4*n4^2*n7 - 4*n3*n4^2*n7 + 108*n7^2 - 52*d*n7^2 + 4*d^2*n7^2 + 
     12*n1*n7^2 - 64*n3*n7^2 + 28*d*n3*n7^2 - 12*n1*n3*n7^2 - 12*n3^2*n7^2 + 
     24*n4*n7^2 - 4*d*n4*n7^2 - 8*n3*n4*n7^2 + 8*n7^3 - 8*n3*n7^3) - 
   (n4*(20 - 4*d - d^2 + 20*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 22*n3 + 3*d*n3 + 
      2*d^2*n3 - 12*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 8*n3^2 - 5*d*n3^2 + 
      2*n3^3 - 14*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 14*n3*n4 - 7*d*n3*n4 + 
      3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 18*n7 + 11*d*n7 - 
      d^2*n7 + 6*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + d*n4*n7 + 
      4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, 0, n3, 1 + n4, -1, 1, 
      n7, 1, 0, 0, 1, 0, 1, 1])/(84 - 142*d + 68*d^2 - 10*d^3 + 26*n1 - 
     35*d*n1 + 9*d^2*n1 + 2*n1^2 - 2*d*n1^2 + 12*n3 + 68*d*n3 - 54*d^2*n3 + 
     10*d^3*n3 + 2*n1*n3 + 24*d*n1*n3 - 9*d^2*n1*n3 + 2*d*n1^2*n3 - 84*n3^2 + 
     70*d*n3^2 - 14*d^2*n3^2 - 26*n1*n3^2 + 11*d*n1*n3^2 - 2*n1^2*n3^2 - 
     12*n3^3 + 4*d*n3^3 - 2*n1*n3^3 - 16*n4 + 54*d*n4 - 34*d^2*n4 + 
     6*d^3*n4 + 12*n1*n4 + d*n1*n4 - 2*d^2*n1*n4 + 2*n1^2*n4 - 88*n3*n4 + 
     82*d*n3*n4 - 18*d^2*n3*n4 - 24*n1*n3*n4 + 11*d*n1*n3*n4 - 2*n1^2*n3*n4 - 
     24*n3^2*n4 + 8*d*n3^2*n4 - 4*n1*n3^2*n4 - 68*n4^2 + 52*d*n4^2 - 
     10*d^2*n4^2 - 6*n1*n4^2 + 2*d*n1*n4^2 - 28*n3*n4^2 + 12*d*n3*n4^2 - 
     2*n1*n3*n4^2 - 12*n4^3 + 4*d*n4^3 - 4*n3*n4^3 + 320*n7 - 298*d*n7 + 
     82*d^2*n7 - 6*d^3*n7 + 74*n1*n7 - 36*d*n1*n7 + 2*d^2*n1*n7 + 4*n1^2*n7 - 
     124*n3*n7 + 128*d*n3*n7 - 30*d^2*n3*n7 - 48*n1*n3*n7 + 24*d*n1*n3*n7 - 
     4*n1^2*n3*n7 - 64*n3^2*n7 + 26*d*n3^2*n7 - 10*n1*n3^2*n7 - 4*n3^3*n7 + 
     124*n4*n7 - 62*d*n4*n7 + 6*d^2*n4*n7 + 18*n1*n4*n7 - 2*d*n1*n4*n7 - 
     52*n3*n4*n7 + 22*d*n3*n4*n7 - 10*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 
     4*n4^2*n7 - 4*n3*n4^2*n7 + 108*n7^2 - 52*d*n7^2 + 4*d^2*n7^2 + 
     12*n1*n7^2 - 64*n3*n7^2 + 28*d*n3*n7^2 - 12*n1*n3*n7^2 - 12*n3^2*n7^2 + 
     24*n4*n7^2 - 4*d*n4*n7^2 - 8*n3*n4*n7^2 + 8*n7^3 - 8*n3*n7^3) + 
   (n4*(20 - 4*d - d^2 + 20*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 22*n3 + 3*d*n3 + 
      2*d^2*n3 - 12*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 8*n3^2 - 5*d*n3^2 + 
      2*n3^3 - 14*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 14*n3*n4 - 7*d*n3*n4 + 
      3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 18*n7 + 11*d*n7 - 
      d^2*n7 + 6*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + d*n4*n7 + 
      4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, 0, n3, 1 + n4, -1, 1, 
      n7, 1, 0, 1, 0, 0, 1, 1])/(84 - 142*d + 68*d^2 - 10*d^3 + 26*n1 - 
     35*d*n1 + 9*d^2*n1 + 2*n1^2 - 2*d*n1^2 + 12*n3 + 68*d*n3 - 54*d^2*n3 + 
     10*d^3*n3 + 2*n1*n3 + 24*d*n1*n3 - 9*d^2*n1*n3 + 2*d*n1^2*n3 - 84*n3^2 + 
     70*d*n3^2 - 14*d^2*n3^2 - 26*n1*n3^2 + 11*d*n1*n3^2 - 2*n1^2*n3^2 - 
     12*n3^3 + 4*d*n3^3 - 2*n1*n3^3 - 16*n4 + 54*d*n4 - 34*d^2*n4 + 
     6*d^3*n4 + 12*n1*n4 + d*n1*n4 - 2*d^2*n1*n4 + 2*n1^2*n4 - 88*n3*n4 + 
     82*d*n3*n4 - 18*d^2*n3*n4 - 24*n1*n3*n4 + 11*d*n1*n3*n4 - 2*n1^2*n3*n4 - 
     24*n3^2*n4 + 8*d*n3^2*n4 - 4*n1*n3^2*n4 - 68*n4^2 + 52*d*n4^2 - 
     10*d^2*n4^2 - 6*n1*n4^2 + 2*d*n1*n4^2 - 28*n3*n4^2 + 12*d*n3*n4^2 - 
     2*n1*n3*n4^2 - 12*n4^3 + 4*d*n4^3 - 4*n3*n4^3 + 320*n7 - 298*d*n7 + 
     82*d^2*n7 - 6*d^3*n7 + 74*n1*n7 - 36*d*n1*n7 + 2*d^2*n1*n7 + 4*n1^2*n7 - 
     124*n3*n7 + 128*d*n3*n7 - 30*d^2*n3*n7 - 48*n1*n3*n7 + 24*d*n1*n3*n7 - 
     4*n1^2*n3*n7 - 64*n3^2*n7 + 26*d*n3^2*n7 - 10*n1*n3^2*n7 - 4*n3^3*n7 + 
     124*n4*n7 - 62*d*n4*n7 + 6*d^2*n4*n7 + 18*n1*n4*n7 - 2*d*n1*n4*n7 - 
     52*n3*n4*n7 + 22*d*n3*n4*n7 - 10*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 
     4*n4^2*n7 - 4*n3*n4^2*n7 + 108*n7^2 - 52*d*n7^2 + 4*d^2*n7^2 + 
     12*n1*n7^2 - 64*n3*n7^2 + 28*d*n3*n7^2 - 12*n1*n3*n7^2 - 12*n3^2*n7^2 + 
     24*n4*n7^2 - 4*d*n4*n7^2 - 8*n3*n4*n7^2 + 8*n7^3 - 8*n3*n7^3) + 
   (2*n4*(20 - 4*d - d^2 + 20*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 22*n3 + 
      3*d*n3 + 2*d^2*n3 - 12*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 8*n3^2 - 
      5*d*n3^2 + 2*n3^3 - 14*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 14*n3*n4 - 
      7*d*n3*n4 + 3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 18*n7 + 
      11*d*n7 - d^2*n7 + 6*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + 
      d*n4*n7 + 4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, 0, n3, 
      1 + n4, 0, 0, -1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    (84 - 142*d + 68*d^2 - 10*d^3 + 26*n1 - 35*d*n1 + 9*d^2*n1 + 2*n1^2 - 
     2*d*n1^2 + 12*n3 + 68*d*n3 - 54*d^2*n3 + 10*d^3*n3 + 2*n1*n3 + 
     24*d*n1*n3 - 9*d^2*n1*n3 + 2*d*n1^2*n3 - 84*n3^2 + 70*d*n3^2 - 
     14*d^2*n3^2 - 26*n1*n3^2 + 11*d*n1*n3^2 - 2*n1^2*n3^2 - 12*n3^3 + 
     4*d*n3^3 - 2*n1*n3^3 - 16*n4 + 54*d*n4 - 34*d^2*n4 + 6*d^3*n4 + 
     12*n1*n4 + d*n1*n4 - 2*d^2*n1*n4 + 2*n1^2*n4 - 88*n3*n4 + 82*d*n3*n4 - 
     18*d^2*n3*n4 - 24*n1*n3*n4 + 11*d*n1*n3*n4 - 2*n1^2*n3*n4 - 24*n3^2*n4 + 
     8*d*n3^2*n4 - 4*n1*n3^2*n4 - 68*n4^2 + 52*d*n4^2 - 10*d^2*n4^2 - 
     6*n1*n4^2 + 2*d*n1*n4^2 - 28*n3*n4^2 + 12*d*n3*n4^2 - 2*n1*n3*n4^2 - 
     12*n4^3 + 4*d*n4^3 - 4*n3*n4^3 + 320*n7 - 298*d*n7 + 82*d^2*n7 - 
     6*d^3*n7 + 74*n1*n7 - 36*d*n1*n7 + 2*d^2*n1*n7 + 4*n1^2*n7 - 124*n3*n7 + 
     128*d*n3*n7 - 30*d^2*n3*n7 - 48*n1*n3*n7 + 24*d*n1*n3*n7 - 
     4*n1^2*n3*n7 - 64*n3^2*n7 + 26*d*n3^2*n7 - 10*n1*n3^2*n7 - 4*n3^3*n7 + 
     124*n4*n7 - 62*d*n4*n7 + 6*d^2*n4*n7 + 18*n1*n4*n7 - 2*d*n1*n4*n7 - 
     52*n3*n4*n7 + 22*d*n3*n4*n7 - 10*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 
     4*n4^2*n7 - 4*n3*n4^2*n7 + 108*n7^2 - 52*d*n7^2 + 4*d^2*n7^2 + 
     12*n1*n7^2 - 64*n3*n7^2 + 28*d*n3*n7^2 - 12*n1*n3*n7^2 - 12*n3^2*n7^2 + 
     24*n4*n7^2 - 4*d*n4*n7^2 - 8*n3*n4*n7^2 + 8*n7^3 - 8*n3*n7^3) - 
   (n4*(20 - 4*d - d^2 + 20*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 22*n3 + 3*d*n3 + 
      2*d^2*n3 - 12*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 8*n3^2 - 5*d*n3^2 + 
      2*n3^3 - 14*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 14*n3*n4 - 7*d*n3*n4 + 
      3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 18*n7 + 11*d*n7 - 
      d^2*n7 + 6*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + d*n4*n7 + 
      4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, 0, n3, 1 + n4, 0, 1, 
      -1 + n7, 0, 0, 1, 1, 0, 1, 1])/(84 - 142*d + 68*d^2 - 10*d^3 + 26*n1 - 
     35*d*n1 + 9*d^2*n1 + 2*n1^2 - 2*d*n1^2 + 12*n3 + 68*d*n3 - 54*d^2*n3 + 
     10*d^3*n3 + 2*n1*n3 + 24*d*n1*n3 - 9*d^2*n1*n3 + 2*d*n1^2*n3 - 84*n3^2 + 
     70*d*n3^2 - 14*d^2*n3^2 - 26*n1*n3^2 + 11*d*n1*n3^2 - 2*n1^2*n3^2 - 
     12*n3^3 + 4*d*n3^3 - 2*n1*n3^3 - 16*n4 + 54*d*n4 - 34*d^2*n4 + 
     6*d^3*n4 + 12*n1*n4 + d*n1*n4 - 2*d^2*n1*n4 + 2*n1^2*n4 - 88*n3*n4 + 
     82*d*n3*n4 - 18*d^2*n3*n4 - 24*n1*n3*n4 + 11*d*n1*n3*n4 - 2*n1^2*n3*n4 - 
     24*n3^2*n4 + 8*d*n3^2*n4 - 4*n1*n3^2*n4 - 68*n4^2 + 52*d*n4^2 - 
     10*d^2*n4^2 - 6*n1*n4^2 + 2*d*n1*n4^2 - 28*n3*n4^2 + 12*d*n3*n4^2 - 
     2*n1*n3*n4^2 - 12*n4^3 + 4*d*n4^3 - 4*n3*n4^3 + 320*n7 - 298*d*n7 + 
     82*d^2*n7 - 6*d^3*n7 + 74*n1*n7 - 36*d*n1*n7 + 2*d^2*n1*n7 + 4*n1^2*n7 - 
     124*n3*n7 + 128*d*n3*n7 - 30*d^2*n3*n7 - 48*n1*n3*n7 + 24*d*n1*n3*n7 - 
     4*n1^2*n3*n7 - 64*n3^2*n7 + 26*d*n3^2*n7 - 10*n1*n3^2*n7 - 4*n3^3*n7 + 
     124*n4*n7 - 62*d*n4*n7 + 6*d^2*n4*n7 + 18*n1*n4*n7 - 2*d*n1*n4*n7 - 
     52*n3*n4*n7 + 22*d*n3*n4*n7 - 10*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 
     4*n4^2*n7 - 4*n3*n4^2*n7 + 108*n7^2 - 52*d*n7^2 + 4*d^2*n7^2 + 
     12*n1*n7^2 - 64*n3*n7^2 + 28*d*n3*n7^2 - 12*n1*n3*n7^2 - 12*n3^2*n7^2 + 
     24*n4*n7^2 - 4*d*n4*n7^2 - 8*n3*n4*n7^2 + 8*n7^3 - 8*n3*n7^3) + 
   (n4*(20 - 4*d - d^2 + 20*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 22*n3 + 3*d*n3 + 
      2*d^2*n3 - 12*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 8*n3^2 - 5*d*n3^2 + 
      2*n3^3 - 14*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 14*n3*n4 - 7*d*n3*n4 + 
      3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 18*n7 + 11*d*n7 - 
      d^2*n7 + 6*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + d*n4*n7 + 
      4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, 0, n3, 1 + n4, 0, 1, 
      -1 + n7, 1, 0, 0, 1, 0, 1, 1])/(84 - 142*d + 68*d^2 - 10*d^3 + 26*n1 - 
     35*d*n1 + 9*d^2*n1 + 2*n1^2 - 2*d*n1^2 + 12*n3 + 68*d*n3 - 54*d^2*n3 + 
     10*d^3*n3 + 2*n1*n3 + 24*d*n1*n3 - 9*d^2*n1*n3 + 2*d*n1^2*n3 - 84*n3^2 + 
     70*d*n3^2 - 14*d^2*n3^2 - 26*n1*n3^2 + 11*d*n1*n3^2 - 2*n1^2*n3^2 - 
     12*n3^3 + 4*d*n3^3 - 2*n1*n3^3 - 16*n4 + 54*d*n4 - 34*d^2*n4 + 
     6*d^3*n4 + 12*n1*n4 + d*n1*n4 - 2*d^2*n1*n4 + 2*n1^2*n4 - 88*n3*n4 + 
     82*d*n3*n4 - 18*d^2*n3*n4 - 24*n1*n3*n4 + 11*d*n1*n3*n4 - 2*n1^2*n3*n4 - 
     24*n3^2*n4 + 8*d*n3^2*n4 - 4*n1*n3^2*n4 - 68*n4^2 + 52*d*n4^2 - 
     10*d^2*n4^2 - 6*n1*n4^2 + 2*d*n1*n4^2 - 28*n3*n4^2 + 12*d*n3*n4^2 - 
     2*n1*n3*n4^2 - 12*n4^3 + 4*d*n4^3 - 4*n3*n4^3 + 320*n7 - 298*d*n7 + 
     82*d^2*n7 - 6*d^3*n7 + 74*n1*n7 - 36*d*n1*n7 + 2*d^2*n1*n7 + 4*n1^2*n7 - 
     124*n3*n7 + 128*d*n3*n7 - 30*d^2*n3*n7 - 48*n1*n3*n7 + 24*d*n1*n3*n7 - 
     4*n1^2*n3*n7 - 64*n3^2*n7 + 26*d*n3^2*n7 - 10*n1*n3^2*n7 - 4*n3^3*n7 + 
     124*n4*n7 - 62*d*n4*n7 + 6*d^2*n4*n7 + 18*n1*n4*n7 - 2*d*n1*n4*n7 - 
     52*n3*n4*n7 + 22*d*n3*n4*n7 - 10*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 
     4*n4^2*n7 - 4*n3*n4^2*n7 + 108*n7^2 - 52*d*n7^2 + 4*d^2*n7^2 + 
     12*n1*n7^2 - 64*n3*n7^2 + 28*d*n3*n7^2 - 12*n1*n3*n7^2 - 12*n3^2*n7^2 + 
     24*n4*n7^2 - 4*d*n4*n7^2 - 8*n3*n4*n7^2 + 8*n7^3 - 8*n3*n7^3) - 
   (n4*(20 - 4*d - d^2 + 20*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 22*n3 + 3*d*n3 + 
      2*d^2*n3 - 12*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 8*n3^2 - 5*d*n3^2 + 
      2*n3^3 - 14*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 14*n3*n4 - 7*d*n3*n4 + 
      3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 18*n7 + 11*d*n7 - 
      d^2*n7 + 6*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + d*n4*n7 + 
      4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, 0, n3, 1 + n4, 0, 1, 
      -1 + n7, 1, 0, 1, 0, 0, 1, 1])/(84 - 142*d + 68*d^2 - 10*d^3 + 26*n1 - 
     35*d*n1 + 9*d^2*n1 + 2*n1^2 - 2*d*n1^2 + 12*n3 + 68*d*n3 - 54*d^2*n3 + 
     10*d^3*n3 + 2*n1*n3 + 24*d*n1*n3 - 9*d^2*n1*n3 + 2*d*n1^2*n3 - 84*n3^2 + 
     70*d*n3^2 - 14*d^2*n3^2 - 26*n1*n3^2 + 11*d*n1*n3^2 - 2*n1^2*n3^2 - 
     12*n3^3 + 4*d*n3^3 - 2*n1*n3^3 - 16*n4 + 54*d*n4 - 34*d^2*n4 + 
     6*d^3*n4 + 12*n1*n4 + d*n1*n4 - 2*d^2*n1*n4 + 2*n1^2*n4 - 88*n3*n4 + 
     82*d*n3*n4 - 18*d^2*n3*n4 - 24*n1*n3*n4 + 11*d*n1*n3*n4 - 2*n1^2*n3*n4 - 
     24*n3^2*n4 + 8*d*n3^2*n4 - 4*n1*n3^2*n4 - 68*n4^2 + 52*d*n4^2 - 
     10*d^2*n4^2 - 6*n1*n4^2 + 2*d*n1*n4^2 - 28*n3*n4^2 + 12*d*n3*n4^2 - 
     2*n1*n3*n4^2 - 12*n4^3 + 4*d*n4^3 - 4*n3*n4^3 + 320*n7 - 298*d*n7 + 
     82*d^2*n7 - 6*d^3*n7 + 74*n1*n7 - 36*d*n1*n7 + 2*d^2*n1*n7 + 4*n1^2*n7 - 
     124*n3*n7 + 128*d*n3*n7 - 30*d^2*n3*n7 - 48*n1*n3*n7 + 24*d*n1*n3*n7 - 
     4*n1^2*n3*n7 - 64*n3^2*n7 + 26*d*n3^2*n7 - 10*n1*n3^2*n7 - 4*n3^3*n7 + 
     124*n4*n7 - 62*d*n4*n7 + 6*d^2*n4*n7 + 18*n1*n4*n7 - 2*d*n1*n4*n7 - 
     52*n3*n4*n7 + 22*d*n3*n4*n7 - 10*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 
     4*n4^2*n7 - 4*n3*n4^2*n7 + 108*n7^2 - 52*d*n7^2 + 4*d^2*n7^2 + 
     12*n1*n7^2 - 64*n3*n7^2 + 28*d*n3*n7^2 - 12*n1*n3*n7^2 - 12*n3^2*n7^2 + 
     24*n4*n7^2 - 4*d*n4*n7^2 - 8*n3*n4*n7^2 + 8*n7^3 - 8*n3*n7^3) + 
   (n3*(-2 + d - n4)*(42 - 6*d - 3*d^2 + 45*n1 - 20*d*n1 + 3*d^2*n1 + 
      4*n1^2 - 42*n3 + d*n3 + 6*d^2*n3 - 20*n1*n3 + 2*d*n1*n3 - 4*n1^2*n3 + 
      18*n3^2 - 13*d*n3^2 - n1*n3^2 + 6*n3^3 - 30*n4 + 12*d*n4 + 3*n1*n4 - 
      3*d*n1*n4 + 32*n3*n4 - 15*d*n3*n4 + 9*n1*n3*n4 + 10*n3^2*n4 - 2*n4^2 + 
      2*n3*n4^2 - 60*n7 + 35*d*n7 - 3*d^2*n7 - 2*n1*n7 + 24*n3*n7 - 
      17*d*n3*n7 + 2*n1*n3*n7 + 12*n3^2*n7 - 22*n4*n7 + 3*d*n4*n7 + 
      10*n3*n4*n7 - 8*n7^2 + 8*n3*n7^2)*j[p4a, 1 + n1, 0, 1 + n3, -1 + n4, 0, 
      1, n7, 0, 0, 1, 1, 0, 1, 1])/((-3 + d - n1 - n7)*
     (-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 
      2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 
      24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 
      14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 
      4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 
      12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 
      18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 
      24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 
      10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 
      2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 
      82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) - 
   (n3*(-2 + d - n4)*(38 - 10*d - d^2 + 35*n1 - 12*d*n1 + d^2*n1 + 4*n1^2 - 
      46*n3 + 11*d*n3 + 2*d^2*n3 - 28*n1*n3 + 6*d*n1*n3 - 4*n1^2*n3 + 
      14*n3^2 - 7*d*n3^2 + n1*n3^2 + 2*n3^3 - 26*n4 + 12*d*n4 + n1*n4 - 
      d*n1*n4 + 24*n3*n4 - 13*d*n3*n4 + 3*n1*n3*n4 + 6*n3^2*n4 - 6*n4^2 + 
      6*n3*n4^2 - 12*n7 + 9*d*n7 - d^2*n7 + 2*n1*n7 - 3*d*n3*n7 - 
      2*n1*n3*n7 + 4*n3^2*n7 - 10*n4*n7 + d*n4*n7 + 6*n3*n4*n7)*
     j[p4a, 1 + n1, 0, 1 + n3, -1 + n4, 0, 1, n7, 1, 0, 0, 1, 0, 1, 1])/
    ((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 
      9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 
      10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 
      84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 
      2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 
      34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 
      88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 
      2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 
      52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 
      12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 
      298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) + 
   (n3*(-2 + d - n4)*(38 - 10*d - d^2 + 35*n1 - 12*d*n1 + d^2*n1 + 4*n1^2 - 
      46*n3 + 11*d*n3 + 2*d^2*n3 - 28*n1*n3 + 6*d*n1*n3 - 4*n1^2*n3 + 
      14*n3^2 - 7*d*n3^2 + n1*n3^2 + 2*n3^3 - 26*n4 + 12*d*n4 + n1*n4 - 
      d*n1*n4 + 24*n3*n4 - 13*d*n3*n4 + 3*n1*n3*n4 + 6*n3^2*n4 - 6*n4^2 + 
      6*n3*n4^2 - 12*n7 + 9*d*n7 - d^2*n7 + 2*n1*n7 - 3*d*n3*n7 - 
      2*n1*n3*n7 + 4*n3^2*n7 - 10*n4*n7 + d*n4*n7 + 6*n3*n4*n7)*
     j[p4a, 1 + n1, 0, 1 + n3, -1 + n4, 0, 1, n7, 1, 0, 1, 0, 0, 1, 1])/
    ((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 
      9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 
      10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 
      84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 
      2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 
      34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 
      88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 
      2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 
      52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 
      12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 
      298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) - 
   (2*n3*(-2 + d - n4)*(20 - 4*d - d^2 + 20*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 
      22*n3 + 3*d*n3 + 2*d^2*n3 - 12*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 8*n3^2 - 
      5*d*n3^2 + 2*n3^3 - 14*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 14*n3*n4 - 
      7*d*n3*n4 + 3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 18*n7 + 
      11*d*n7 - d^2*n7 + 6*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + 
      d*n4*n7 + 4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, 0, 1 + n3, 
      -1 + n4, 0, 1, n7, 1, 0, 1, 1, -1, 1, 1])/((-3 + d - n1 - n7)*
     (-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 
      2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 
      24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 
      14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 
      4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 
      12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 
      18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 
      24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 
      10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 
      2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 
      82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) + 
   (2*n3*(-2 + d - n4)*(20 - 4*d - d^2 + 20*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 
      22*n3 + 3*d*n3 + 2*d^2*n3 - 12*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 8*n3^2 - 
      5*d*n3^2 + 2*n3^3 - 14*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 14*n3*n4 - 
      7*d*n3*n4 + 3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 18*n7 + 
      11*d*n7 - d^2*n7 + 6*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + 
      d*n4*n7 + 4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, 0, 1 + n3, 
      -1 + n4, 0, 1, n7, 1, 0, 1, 1, 0, 0, 1])/((-3 + d - n1 - n7)*
     (-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 
      2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 
      24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 
      14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 
      4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 
      12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 
      18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 
      24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 
      10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 
      2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 
      82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) + 
   (2*n3*(-2 + d - n4)*(20 - 4*d - d^2 + 20*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 
      22*n3 + 3*d*n3 + 2*d^2*n3 - 12*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 8*n3^2 - 
      5*d*n3^2 + 2*n3^3 - 14*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 14*n3*n4 - 
      7*d*n3*n4 + 3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 18*n7 + 
      11*d*n7 - d^2*n7 + 6*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + 
      d*n4*n7 + 4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, 0, 1 + n3, 
      -1 + n4, 0, 1, n7, 1, 0, 1, 1, 0, 1, 1])/((-3 + d - n1 - n7)*
     (-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 
      2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 
      24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 
      14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 
      4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 
      12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 
      18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 
      24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 
      10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 
      2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 
      82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) - 
   (2*n3*(20 - 4*d - d^2 + 20*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 22*n3 + 
      3*d*n3 + 2*d^2*n3 - 12*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 8*n3^2 - 
      5*d*n3^2 + 2*n3^3 - 14*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 14*n3*n4 - 
      7*d*n3*n4 + 3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 18*n7 + 
      11*d*n7 - d^2*n7 + 6*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + 
      d*n4*n7 + 4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, 0, 1 + n3, 
      n4, 0, 1, -2 + n7, 1, 0, 1, 1, 0, 1, 1])/(84 - 142*d + 68*d^2 - 
     10*d^3 + 26*n1 - 35*d*n1 + 9*d^2*n1 + 2*n1^2 - 2*d*n1^2 + 12*n3 + 
     68*d*n3 - 54*d^2*n3 + 10*d^3*n3 + 2*n1*n3 + 24*d*n1*n3 - 9*d^2*n1*n3 + 
     2*d*n1^2*n3 - 84*n3^2 + 70*d*n3^2 - 14*d^2*n3^2 - 26*n1*n3^2 + 
     11*d*n1*n3^2 - 2*n1^2*n3^2 - 12*n3^3 + 4*d*n3^3 - 2*n1*n3^3 - 16*n4 + 
     54*d*n4 - 34*d^2*n4 + 6*d^3*n4 + 12*n1*n4 + d*n1*n4 - 2*d^2*n1*n4 + 
     2*n1^2*n4 - 88*n3*n4 + 82*d*n3*n4 - 18*d^2*n3*n4 - 24*n1*n3*n4 + 
     11*d*n1*n3*n4 - 2*n1^2*n3*n4 - 24*n3^2*n4 + 8*d*n3^2*n4 - 4*n1*n3^2*n4 - 
     68*n4^2 + 52*d*n4^2 - 10*d^2*n4^2 - 6*n1*n4^2 + 2*d*n1*n4^2 - 
     28*n3*n4^2 + 12*d*n3*n4^2 - 2*n1*n3*n4^2 - 12*n4^3 + 4*d*n4^3 - 
     4*n3*n4^3 + 320*n7 - 298*d*n7 + 82*d^2*n7 - 6*d^3*n7 + 74*n1*n7 - 
     36*d*n1*n7 + 2*d^2*n1*n7 + 4*n1^2*n7 - 124*n3*n7 + 128*d*n3*n7 - 
     30*d^2*n3*n7 - 48*n1*n3*n7 + 24*d*n1*n3*n7 - 4*n1^2*n3*n7 - 64*n3^2*n7 + 
     26*d*n3^2*n7 - 10*n1*n3^2*n7 - 4*n3^3*n7 + 124*n4*n7 - 62*d*n4*n7 + 
     6*d^2*n4*n7 + 18*n1*n4*n7 - 2*d*n1*n4*n7 - 52*n3*n4*n7 + 22*d*n3*n4*n7 - 
     10*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 4*n4^2*n7 - 4*n3*n4^2*n7 + 108*n7^2 - 
     52*d*n7^2 + 4*d^2*n7^2 + 12*n1*n7^2 - 64*n3*n7^2 + 28*d*n3*n7^2 - 
     12*n1*n3*n7^2 - 12*n3^2*n7^2 + 24*n4*n7^2 - 4*d*n4*n7^2 - 8*n3*n4*n7^2 + 
     8*n7^3 - 8*n3*n7^3) - (3*n3*(20 - 4*d - d^2 + 20*n1 - 8*d*n1 + d^2*n1 + 
      2*n1^2 - 22*n3 + 3*d*n3 + 2*d^2*n3 - 12*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 
      8*n3^2 - 5*d*n3^2 + 2*n3^3 - 14*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 
      14*n3*n4 - 7*d*n3*n4 + 3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 
      18*n7 + 11*d*n7 - d^2*n7 + 6*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + 
      d*n4*n7 + 4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, 0, 1 + n3, 
      n4, 0, 1, -1 + n7, 0, 0, 1, 1, 0, 1, 1])/(84 - 142*d + 68*d^2 - 
     10*d^3 + 26*n1 - 35*d*n1 + 9*d^2*n1 + 2*n1^2 - 2*d*n1^2 + 12*n3 + 
     68*d*n3 - 54*d^2*n3 + 10*d^3*n3 + 2*n1*n3 + 24*d*n1*n3 - 9*d^2*n1*n3 + 
     2*d*n1^2*n3 - 84*n3^2 + 70*d*n3^2 - 14*d^2*n3^2 - 26*n1*n3^2 + 
     11*d*n1*n3^2 - 2*n1^2*n3^2 - 12*n3^3 + 4*d*n3^3 - 2*n1*n3^3 - 16*n4 + 
     54*d*n4 - 34*d^2*n4 + 6*d^3*n4 + 12*n1*n4 + d*n1*n4 - 2*d^2*n1*n4 + 
     2*n1^2*n4 - 88*n3*n4 + 82*d*n3*n4 - 18*d^2*n3*n4 - 24*n1*n3*n4 + 
     11*d*n1*n3*n4 - 2*n1^2*n3*n4 - 24*n3^2*n4 + 8*d*n3^2*n4 - 4*n1*n3^2*n4 - 
     68*n4^2 + 52*d*n4^2 - 10*d^2*n4^2 - 6*n1*n4^2 + 2*d*n1*n4^2 - 
     28*n3*n4^2 + 12*d*n3*n4^2 - 2*n1*n3*n4^2 - 12*n4^3 + 4*d*n4^3 - 
     4*n3*n4^3 + 320*n7 - 298*d*n7 + 82*d^2*n7 - 6*d^3*n7 + 74*n1*n7 - 
     36*d*n1*n7 + 2*d^2*n1*n7 + 4*n1^2*n7 - 124*n3*n7 + 128*d*n3*n7 - 
     30*d^2*n3*n7 - 48*n1*n3*n7 + 24*d*n1*n3*n7 - 4*n1^2*n3*n7 - 64*n3^2*n7 + 
     26*d*n3^2*n7 - 10*n1*n3^2*n7 - 4*n3^3*n7 + 124*n4*n7 - 62*d*n4*n7 + 
     6*d^2*n4*n7 + 18*n1*n4*n7 - 2*d*n1*n4*n7 - 52*n3*n4*n7 + 22*d*n3*n4*n7 - 
     10*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 4*n4^2*n7 - 4*n3*n4^2*n7 + 108*n7^2 - 
     52*d*n7^2 + 4*d^2*n7^2 + 12*n1*n7^2 - 64*n3*n7^2 + 28*d*n3*n7^2 - 
     12*n1*n3*n7^2 - 12*n3^2*n7^2 + 24*n4*n7^2 - 4*d*n4*n7^2 - 8*n3*n4*n7^2 + 
     8*n7^3 - 8*n3*n7^3) + (n3*(20 - 4*d - d^2 + 20*n1 - 8*d*n1 + d^2*n1 + 
      2*n1^2 - 22*n3 + 3*d*n3 + 2*d^2*n3 - 12*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 
      8*n3^2 - 5*d*n3^2 + 2*n3^3 - 14*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 
      14*n3*n4 - 7*d*n3*n4 + 3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 
      18*n7 + 11*d*n7 - d^2*n7 + 6*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + 
      d*n4*n7 + 4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, 0, 1 + n3, 
      n4, 0, 1, -1 + n7, 1, 0, 0, 1, 0, 1, 1])/(84 - 142*d + 68*d^2 - 
     10*d^3 + 26*n1 - 35*d*n1 + 9*d^2*n1 + 2*n1^2 - 2*d*n1^2 + 12*n3 + 
     68*d*n3 - 54*d^2*n3 + 10*d^3*n3 + 2*n1*n3 + 24*d*n1*n3 - 9*d^2*n1*n3 + 
     2*d*n1^2*n3 - 84*n3^2 + 70*d*n3^2 - 14*d^2*n3^2 - 26*n1*n3^2 + 
     11*d*n1*n3^2 - 2*n1^2*n3^2 - 12*n3^3 + 4*d*n3^3 - 2*n1*n3^3 - 16*n4 + 
     54*d*n4 - 34*d^2*n4 + 6*d^3*n4 + 12*n1*n4 + d*n1*n4 - 2*d^2*n1*n4 + 
     2*n1^2*n4 - 88*n3*n4 + 82*d*n3*n4 - 18*d^2*n3*n4 - 24*n1*n3*n4 + 
     11*d*n1*n3*n4 - 2*n1^2*n3*n4 - 24*n3^2*n4 + 8*d*n3^2*n4 - 4*n1*n3^2*n4 - 
     68*n4^2 + 52*d*n4^2 - 10*d^2*n4^2 - 6*n1*n4^2 + 2*d*n1*n4^2 - 
     28*n3*n4^2 + 12*d*n3*n4^2 - 2*n1*n3*n4^2 - 12*n4^3 + 4*d*n4^3 - 
     4*n3*n4^3 + 320*n7 - 298*d*n7 + 82*d^2*n7 - 6*d^3*n7 + 74*n1*n7 - 
     36*d*n1*n7 + 2*d^2*n1*n7 + 4*n1^2*n7 - 124*n3*n7 + 128*d*n3*n7 - 
     30*d^2*n3*n7 - 48*n1*n3*n7 + 24*d*n1*n3*n7 - 4*n1^2*n3*n7 - 64*n3^2*n7 + 
     26*d*n3^2*n7 - 10*n1*n3^2*n7 - 4*n3^3*n7 + 124*n4*n7 - 62*d*n4*n7 + 
     6*d^2*n4*n7 + 18*n1*n4*n7 - 2*d*n1*n4*n7 - 52*n3*n4*n7 + 22*d*n3*n4*n7 - 
     10*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 4*n4^2*n7 - 4*n3*n4^2*n7 + 108*n7^2 - 
     52*d*n7^2 + 4*d^2*n7^2 + 12*n1*n7^2 - 64*n3*n7^2 + 28*d*n3*n7^2 - 
     12*n1*n3*n7^2 - 12*n3^2*n7^2 + 24*n4*n7^2 - 4*d*n4*n7^2 - 8*n3*n4*n7^2 + 
     8*n7^3 - 8*n3*n7^3) - (n3*(20 - 4*d - d^2 + 20*n1 - 8*d*n1 + d^2*n1 + 
      2*n1^2 - 22*n3 + 3*d*n3 + 2*d^2*n3 - 12*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 
      8*n3^2 - 5*d*n3^2 + 2*n3^3 - 14*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 
      14*n3*n4 - 7*d*n3*n4 + 3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 
      18*n7 + 11*d*n7 - d^2*n7 + 6*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + 
      d*n4*n7 + 4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, 0, 1 + n3, 
      n4, 0, 1, -1 + n7, 1, 0, 1, 0, 0, 1, 1])/(84 - 142*d + 68*d^2 - 
     10*d^3 + 26*n1 - 35*d*n1 + 9*d^2*n1 + 2*n1^2 - 2*d*n1^2 + 12*n3 + 
     68*d*n3 - 54*d^2*n3 + 10*d^3*n3 + 2*n1*n3 + 24*d*n1*n3 - 9*d^2*n1*n3 + 
     2*d*n1^2*n3 - 84*n3^2 + 70*d*n3^2 - 14*d^2*n3^2 - 26*n1*n3^2 + 
     11*d*n1*n3^2 - 2*n1^2*n3^2 - 12*n3^3 + 4*d*n3^3 - 2*n1*n3^3 - 16*n4 + 
     54*d*n4 - 34*d^2*n4 + 6*d^3*n4 + 12*n1*n4 + d*n1*n4 - 2*d^2*n1*n4 + 
     2*n1^2*n4 - 88*n3*n4 + 82*d*n3*n4 - 18*d^2*n3*n4 - 24*n1*n3*n4 + 
     11*d*n1*n3*n4 - 2*n1^2*n3*n4 - 24*n3^2*n4 + 8*d*n3^2*n4 - 4*n1*n3^2*n4 - 
     68*n4^2 + 52*d*n4^2 - 10*d^2*n4^2 - 6*n1*n4^2 + 2*d*n1*n4^2 - 
     28*n3*n4^2 + 12*d*n3*n4^2 - 2*n1*n3*n4^2 - 12*n4^3 + 4*d*n4^3 - 
     4*n3*n4^3 + 320*n7 - 298*d*n7 + 82*d^2*n7 - 6*d^3*n7 + 74*n1*n7 - 
     36*d*n1*n7 + 2*d^2*n1*n7 + 4*n1^2*n7 - 124*n3*n7 + 128*d*n3*n7 - 
     30*d^2*n3*n7 - 48*n1*n3*n7 + 24*d*n1*n3*n7 - 4*n1^2*n3*n7 - 64*n3^2*n7 + 
     26*d*n3^2*n7 - 10*n1*n3^2*n7 - 4*n3^3*n7 + 124*n4*n7 - 62*d*n4*n7 + 
     6*d^2*n4*n7 + 18*n1*n4*n7 - 2*d*n1*n4*n7 - 52*n3*n4*n7 + 22*d*n3*n4*n7 - 
     10*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 4*n4^2*n7 - 4*n3*n4^2*n7 + 108*n7^2 - 
     52*d*n7^2 + 4*d^2*n7^2 + 12*n1*n7^2 - 64*n3*n7^2 + 28*d*n3*n7^2 - 
     12*n1*n3*n7^2 - 12*n3^2*n7^2 + 24*n4*n7^2 - 4*d*n4*n7^2 - 8*n3*n4*n7^2 + 
     8*n7^3 - 8*n3*n7^3) + (2*n3*(20 - 4*d - d^2 + 20*n1 - 8*d*n1 + d^2*n1 + 
      2*n1^2 - 22*n3 + 3*d*n3 + 2*d^2*n3 - 12*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 
      8*n3^2 - 5*d*n3^2 + 2*n3^3 - 14*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 
      14*n3*n4 - 7*d*n3*n4 + 3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 
      18*n7 + 11*d*n7 - d^2*n7 + 6*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + 
      d*n4*n7 + 4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, 0, 1 + n3, 
      n4, 0, 1, -1 + n7, 1, 0, 1, 1, -1, 1, 1])/(84 - 142*d + 68*d^2 - 
     10*d^3 + 26*n1 - 35*d*n1 + 9*d^2*n1 + 2*n1^2 - 2*d*n1^2 + 12*n3 + 
     68*d*n3 - 54*d^2*n3 + 10*d^3*n3 + 2*n1*n3 + 24*d*n1*n3 - 9*d^2*n1*n3 + 
     2*d*n1^2*n3 - 84*n3^2 + 70*d*n3^2 - 14*d^2*n3^2 - 26*n1*n3^2 + 
     11*d*n1*n3^2 - 2*n1^2*n3^2 - 12*n3^3 + 4*d*n3^3 - 2*n1*n3^3 - 16*n4 + 
     54*d*n4 - 34*d^2*n4 + 6*d^3*n4 + 12*n1*n4 + d*n1*n4 - 2*d^2*n1*n4 + 
     2*n1^2*n4 - 88*n3*n4 + 82*d*n3*n4 - 18*d^2*n3*n4 - 24*n1*n3*n4 + 
     11*d*n1*n3*n4 - 2*n1^2*n3*n4 - 24*n3^2*n4 + 8*d*n3^2*n4 - 4*n1*n3^2*n4 - 
     68*n4^2 + 52*d*n4^2 - 10*d^2*n4^2 - 6*n1*n4^2 + 2*d*n1*n4^2 - 
     28*n3*n4^2 + 12*d*n3*n4^2 - 2*n1*n3*n4^2 - 12*n4^3 + 4*d*n4^3 - 
     4*n3*n4^3 + 320*n7 - 298*d*n7 + 82*d^2*n7 - 6*d^3*n7 + 74*n1*n7 - 
     36*d*n1*n7 + 2*d^2*n1*n7 + 4*n1^2*n7 - 124*n3*n7 + 128*d*n3*n7 - 
     30*d^2*n3*n7 - 48*n1*n3*n7 + 24*d*n1*n3*n7 - 4*n1^2*n3*n7 - 64*n3^2*n7 + 
     26*d*n3^2*n7 - 10*n1*n3^2*n7 - 4*n3^3*n7 + 124*n4*n7 - 62*d*n4*n7 + 
     6*d^2*n4*n7 + 18*n1*n4*n7 - 2*d*n1*n4*n7 - 52*n3*n4*n7 + 22*d*n3*n4*n7 - 
     10*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 4*n4^2*n7 - 4*n3*n4^2*n7 + 108*n7^2 - 
     52*d*n7^2 + 4*d^2*n7^2 + 12*n1*n7^2 - 64*n3*n7^2 + 28*d*n3*n7^2 - 
     12*n1*n3*n7^2 - 12*n3^2*n7^2 + 24*n4*n7^2 - 4*d*n4*n7^2 - 8*n3*n4*n7^2 + 
     8*n7^3 - 8*n3*n7^3) - (n3*(20 - 4*d - d^2 + 20*n1 - 8*d*n1 + d^2*n1 + 
      2*n1^2 - 22*n3 + 3*d*n3 + 2*d^2*n3 - 12*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 
      8*n3^2 - 5*d*n3^2 + 2*n3^3 - 14*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 
      14*n3*n4 - 7*d*n3*n4 + 3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 
      18*n7 + 11*d*n7 - d^2*n7 + 6*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + 
      d*n4*n7 + 4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, 0, 1 + n3, 
      n4, 0, 1, -1 + n7, 1, 0, 1, 1, 0, 0, 1])/(84 - 142*d + 68*d^2 - 
     10*d^3 + 26*n1 - 35*d*n1 + 9*d^2*n1 + 2*n1^2 - 2*d*n1^2 + 12*n3 + 
     68*d*n3 - 54*d^2*n3 + 10*d^3*n3 + 2*n1*n3 + 24*d*n1*n3 - 9*d^2*n1*n3 + 
     2*d*n1^2*n3 - 84*n3^2 + 70*d*n3^2 - 14*d^2*n3^2 - 26*n1*n3^2 + 
     11*d*n1*n3^2 - 2*n1^2*n3^2 - 12*n3^3 + 4*d*n3^3 - 2*n1*n3^3 - 16*n4 + 
     54*d*n4 - 34*d^2*n4 + 6*d^3*n4 + 12*n1*n4 + d*n1*n4 - 2*d^2*n1*n4 + 
     2*n1^2*n4 - 88*n3*n4 + 82*d*n3*n4 - 18*d^2*n3*n4 - 24*n1*n3*n4 + 
     11*d*n1*n3*n4 - 2*n1^2*n3*n4 - 24*n3^2*n4 + 8*d*n3^2*n4 - 4*n1*n3^2*n4 - 
     68*n4^2 + 52*d*n4^2 - 10*d^2*n4^2 - 6*n1*n4^2 + 2*d*n1*n4^2 - 
     28*n3*n4^2 + 12*d*n3*n4^2 - 2*n1*n3*n4^2 - 12*n4^3 + 4*d*n4^3 - 
     4*n3*n4^3 + 320*n7 - 298*d*n7 + 82*d^2*n7 - 6*d^3*n7 + 74*n1*n7 - 
     36*d*n1*n7 + 2*d^2*n1*n7 + 4*n1^2*n7 - 124*n3*n7 + 128*d*n3*n7 - 
     30*d^2*n3*n7 - 48*n1*n3*n7 + 24*d*n1*n3*n7 - 4*n1^2*n3*n7 - 64*n3^2*n7 + 
     26*d*n3^2*n7 - 10*n1*n3^2*n7 - 4*n3^3*n7 + 124*n4*n7 - 62*d*n4*n7 + 
     6*d^2*n4*n7 + 18*n1*n4*n7 - 2*d*n1*n4*n7 - 52*n3*n4*n7 + 22*d*n3*n4*n7 - 
     10*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 4*n4^2*n7 - 4*n3*n4^2*n7 + 108*n7^2 - 
     52*d*n7^2 + 4*d^2*n7^2 + 12*n1*n7^2 - 64*n3*n7^2 + 28*d*n3*n7^2 - 
     12*n1*n3*n7^2 - 12*n3^2*n7^2 + 24*n4*n7^2 - 4*d*n4*n7^2 - 8*n3*n4*n7^2 + 
     8*n7^3 - 8*n3*n7^3) + (n3*(-2 + d - n4)*(2 + 2*d - d^2 + 5*n1 - 4*d*n1 + 
      d^2*n1 + 2*n3 - 5*d*n3 + 2*d^2*n3 + 4*n1*n3 - 2*d*n1*n3 + 2*n3^2 - 
      3*d*n3^2 - n1*n3^2 + 2*n3^3 - 2*n4 + n1*n4 - d*n1*n4 + 4*n3*n4 - 
      d*n3*n4 + 3*n1*n3*n4 + 2*n3^2*n4 + 2*n4^2 - 2*n3*n4^2 - 24*n7 + 
      13*d*n7 - d^2*n7 - 2*n1*n7 + 12*n3*n7 - 7*d*n3*n7 + 2*n1*n3*n7 + 
      4*n3^2*n7 - 6*n4*n7 + d*n4*n7 + 2*n3*n4*n7 - 4*n7^2 + 4*n3*n7^2)*
     j[p4a, 1 + n1, 0, 1 + n3, n4, 0, 1, -1 + n7, 1, 0, 1, 1, 0, 1, 0])/
    ((-3 + d - n1 - n7)*(-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 
      9*d^2*n1 - 2*n1^2 + 2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 
      10*d^3*n3 - 2*n1*n3 - 24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 
      84*n3^2 - 70*d*n3^2 + 14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 
      2*n1^2*n3^2 + 12*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 
      34*d^2*n4 - 6*d^3*n4 - 12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 
      88*n3*n4 - 82*d*n3*n4 + 18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 
      2*n1^2*n3*n4 + 24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 
      52*d*n4^2 + 10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 
      12*d*n3*n4^2 + 2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 
      298*d*n7 - 82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) - 
   (n3*(20 - 4*d - d^2 + 20*n1 - 8*d*n1 + d^2*n1 + 2*n1^2 - 22*n3 + 3*d*n3 + 
      2*d^2*n3 - 12*n1*n3 + 2*d*n1*n3 - 2*n1^2*n3 + 8*n3^2 - 5*d*n3^2 + 
      2*n3^3 - 14*n4 + 6*d*n4 + n1*n4 - d*n1*n4 + 14*n3*n4 - 7*d*n3*n4 + 
      3*n1*n3*n4 + 4*n3^2*n4 - 2*n4^2 + 2*n3*n4^2 - 18*n7 + 11*d*n7 - 
      d^2*n7 + 6*n3*n7 - 5*d*n3*n7 + 4*n3^2*n7 - 8*n4*n7 + d*n4*n7 + 
      4*n3*n4*n7 - 2*n7^2 + 2*n3*n7^2)*j[p4a, 1 + n1, 0, 1 + n3, n4, 0, 1, 
      n7, 1, 0, 1, 1, 0, 0, 1])/(84 - 142*d + 68*d^2 - 10*d^3 + 26*n1 - 
     35*d*n1 + 9*d^2*n1 + 2*n1^2 - 2*d*n1^2 + 12*n3 + 68*d*n3 - 54*d^2*n3 + 
     10*d^3*n3 + 2*n1*n3 + 24*d*n1*n3 - 9*d^2*n1*n3 + 2*d*n1^2*n3 - 84*n3^2 + 
     70*d*n3^2 - 14*d^2*n3^2 - 26*n1*n3^2 + 11*d*n1*n3^2 - 2*n1^2*n3^2 - 
     12*n3^3 + 4*d*n3^3 - 2*n1*n3^3 - 16*n4 + 54*d*n4 - 34*d^2*n4 + 
     6*d^3*n4 + 12*n1*n4 + d*n1*n4 - 2*d^2*n1*n4 + 2*n1^2*n4 - 88*n3*n4 + 
     82*d*n3*n4 - 18*d^2*n3*n4 - 24*n1*n3*n4 + 11*d*n1*n3*n4 - 2*n1^2*n3*n4 - 
     24*n3^2*n4 + 8*d*n3^2*n4 - 4*n1*n3^2*n4 - 68*n4^2 + 52*d*n4^2 - 
     10*d^2*n4^2 - 6*n1*n4^2 + 2*d*n1*n4^2 - 28*n3*n4^2 + 12*d*n3*n4^2 - 
     2*n1*n3*n4^2 - 12*n4^3 + 4*d*n4^3 - 4*n3*n4^3 + 320*n7 - 298*d*n7 + 
     82*d^2*n7 - 6*d^3*n7 + 74*n1*n7 - 36*d*n1*n7 + 2*d^2*n1*n7 + 4*n1^2*n7 - 
     124*n3*n7 + 128*d*n3*n7 - 30*d^2*n3*n7 - 48*n1*n3*n7 + 24*d*n1*n3*n7 - 
     4*n1^2*n3*n7 - 64*n3^2*n7 + 26*d*n3^2*n7 - 10*n1*n3^2*n7 - 4*n3^3*n7 + 
     124*n4*n7 - 62*d*n4*n7 + 6*d^2*n4*n7 + 18*n1*n4*n7 - 2*d*n1*n4*n7 - 
     52*n3*n4*n7 + 22*d*n3*n4*n7 - 10*n1*n3*n4*n7 - 8*n3^2*n4*n7 + 
     4*n4^2*n7 - 4*n3*n4^2*n7 + 108*n7^2 - 52*d*n7^2 + 4*d^2*n7^2 + 
     12*n1*n7^2 - 64*n3*n7^2 + 28*d*n3*n7^2 - 12*n1*n3*n7^2 - 12*n3^2*n7^2 + 
     24*n4*n7^2 - 4*d*n4*n7^2 - 8*n3*n4*n7^2 + 8*n7^3 - 8*n3*n7^3) - 
   (n3*(-2 + d - n4)*(2 + 2*d - d^2 + 5*n1 - 4*d*n1 + d^2*n1 + 2*n3 - 
      5*d*n3 + 2*d^2*n3 + 4*n1*n3 - 2*d*n1*n3 + 2*n3^2 - 3*d*n3^2 - n1*n3^2 + 
      2*n3^3 - 2*n4 + n1*n4 - d*n1*n4 + 4*n3*n4 - d*n3*n4 + 3*n1*n3*n4 + 
      2*n3^2*n4 + 2*n4^2 - 2*n3*n4^2 - 24*n7 + 13*d*n7 - d^2*n7 - 2*n1*n7 + 
      12*n3*n7 - 7*d*n3*n7 + 2*n1*n3*n7 + 4*n3^2*n7 - 6*n4*n7 + d*n4*n7 + 
      2*n3*n4*n7 - 4*n7^2 + 4*n3*n7^2)*j[p4a, 1 + n1, 0, 1 + n3, n4, 0, 1, 
      n7, 1, 0, 1, 1, 0, 1, 0])/((-3 + d - n1 - n7)*
     (-84 + 142*d - 68*d^2 + 10*d^3 - 26*n1 + 35*d*n1 - 9*d^2*n1 - 2*n1^2 + 
      2*d*n1^2 - 12*n3 - 68*d*n3 + 54*d^2*n3 - 10*d^3*n3 - 2*n1*n3 - 
      24*d*n1*n3 + 9*d^2*n1*n3 - 2*d*n1^2*n3 + 84*n3^2 - 70*d*n3^2 + 
      14*d^2*n3^2 + 26*n1*n3^2 - 11*d*n1*n3^2 + 2*n1^2*n3^2 + 12*n3^3 - 
      4*d*n3^3 + 2*n1*n3^3 + 16*n4 - 54*d*n4 + 34*d^2*n4 - 6*d^3*n4 - 
      12*n1*n4 - d*n1*n4 + 2*d^2*n1*n4 - 2*n1^2*n4 + 88*n3*n4 - 82*d*n3*n4 + 
      18*d^2*n3*n4 + 24*n1*n3*n4 - 11*d*n1*n3*n4 + 2*n1^2*n3*n4 + 
      24*n3^2*n4 - 8*d*n3^2*n4 + 4*n1*n3^2*n4 + 68*n4^2 - 52*d*n4^2 + 
      10*d^2*n4^2 + 6*n1*n4^2 - 2*d*n1*n4^2 + 28*n3*n4^2 - 12*d*n3*n4^2 + 
      2*n1*n3*n4^2 + 12*n4^3 - 4*d*n4^3 + 4*n3*n4^3 - 320*n7 + 298*d*n7 - 
      82*d^2*n7 + 6*d^3*n7 - 74*n1*n7 + 36*d*n1*n7 - 2*d^2*n1*n7 - 
      4*n1^2*n7 + 124*n3*n7 - 128*d*n3*n7 + 30*d^2*n3*n7 + 48*n1*n3*n7 - 
      24*d*n1*n3*n7 + 4*n1^2*n3*n7 + 64*n3^2*n7 - 26*d*n3^2*n7 + 
      10*n1*n3^2*n7 + 4*n3^3*n7 - 124*n4*n7 + 62*d*n4*n7 - 6*d^2*n4*n7 - 
      18*n1*n4*n7 + 2*d*n1*n4*n7 + 52*n3*n4*n7 - 22*d*n3*n4*n7 + 
      10*n1*n3*n4*n7 + 8*n3^2*n4*n7 - 4*n4^2*n7 + 4*n3*n4^2*n7 - 108*n7^2 + 
      52*d*n7^2 - 4*d^2*n7^2 - 12*n1*n7^2 + 64*n3*n7^2 - 28*d*n3*n7^2 + 
      12*n1*n3*n7^2 + 12*n3^2*n7^2 - 24*n4*n7^2 + 4*d*n4*n7^2 + 
      8*n3*n4*n7^2 - 8*n7^3 + 8*n3*n7^3)) - 
   ((1 + n1)*(-1 + n3)*(-2 + d - n4)*(18 - 6*d + 15*n1 - 4*d*n1 + 2*n1^2 - 
      6*n3 + 2*d*n3 - n1*n3 - 12*n4 + 6*d*n4 - 2*n3*n4 - 4*n4^2 + 6*n7 - 
      2*d*n7 + 2*n1*n7 - 2*n4*n7 + 2*n7^2)*j[p4a, 2 + n1, -1, n3, n4, 0, 1, 
      n7, 1, 0, 1, 1, 0, 0, 1])/(-252 + 510*d - 346*d^2 + 98*d^3 - 10*d^4 - 
     162*n1 + 273*d*n1 - 130*d^2*n1 + 19*d^3*n1 - 32*n1^2 + 43*d*n1^2 - 
     11*d^2*n1^2 - 2*n1^3 + 2*d*n1^3 - 36*n3 - 192*d*n3 + 230*d^2*n3 - 
     84*d^3*n3 + 10*d^4*n3 - 18*n1*n3 - 138*d*n1*n3 + 105*d^2*n1*n3 - 
     19*d^3*n1*n3 - 2*n1^2*n3 - 30*d*n1^2*n3 + 11*d^2*n1^2*n3 - 2*d*n1^3*n3 + 
     252*n3^2 - 294*d*n3^2 + 112*d^2*n3^2 - 14*d^3*n3^2 + 162*n1*n3^2 - 
     129*d*n1*n3^2 + 25*d^2*n1*n3^2 + 32*n1^2*n3^2 - 13*d*n1^2*n3^2 + 
     2*n1^3*n3^2 + 36*n3^3 - 24*d*n3^3 + 4*d^2*n3^3 + 18*n1*n3^3 - 
     6*d*n1*n3^3 + 2*n1^2*n3^3 + 48*n4 - 178*d*n4 + 156*d^2*n4 - 52*d^3*n4 + 
     6*d^4*n4 - 20*n1*n4 - 45*d*n1*n4 + 41*d^2*n1*n4 - 8*d^3*n1*n4 - 
     18*n1^2*n4 + d*n1^2*n4 + 2*d^2*n1^2*n4 - 2*n1^3*n4 + 264*n3*n4 - 
     334*d*n3*n4 + 136*d^2*n3*n4 - 18*d^3*n3*n4 + 160*n1*n3*n4 - 
     139*d*n1*n3*n4 + 29*d^2*n1*n3*n4 + 30*n1^2*n3*n4 - 13*d*n1^2*n3*n4 + 
     2*n1^3*n3*n4 + 72*n3^2*n4 - 48*d*n3^2*n4 + 8*d^2*n3^2*n4 + 
     36*n1*n3^2*n4 - 12*d*n1*n3^2*n4 + 4*n1^2*n3^2*n4 + 204*n4^2 - 
     224*d*n4^2 + 82*d^2*n4^2 - 10*d^3*n4^2 + 86*n1*n4^2 - 64*d*n1*n4^2 + 
     12*d^2*n1*n4^2 + 6*n1^2*n4^2 - 2*d*n1^2*n4^2 + 84*n3*n4^2 - 
     64*d*n3*n4^2 + 12*d^2*n3*n4^2 + 34*n1*n3*n4^2 - 14*d*n1*n3*n4^2 + 
     2*n1^2*n3*n4^2 + 36*n4^3 - 24*d*n4^3 + 4*d^2*n4^3 + 12*n1*n4^3 - 
     4*d*n1*n4^3 + 12*n3*n4^3 - 4*d*n3*n4^3 + 4*n1*n3*n4^3 - 1044*n7 + 
     1356*d*n7 - 612*d^2*n7 + 110*d^3*n7 - 6*d^4*n7 - 568*n1*n7 + 
     515*d*n1*n7 - 133*d^2*n1*n7 + 8*d^3*n1*n7 - 88*n1^2*n7 + 42*d*n1^2*n7 - 
     2*d^2*n1^2*n7 - 4*n1^3*n7 + 360*n3*n7 - 576*d*n3*n7 + 272*d^2*n3*n7 - 
     40*d^3*n3*n7 + 266*n1*n3*n7 - 272*d*n1*n3*n7 + 63*d^2*n1*n3*n7 + 
     60*n1^2*n3*n7 - 30*d*n1^2*n3*n7 + 4*n1^3*n3*n7 + 276*n3^2*n7 - 
     212*d*n3^2*n7 + 40*d^2*n3^2*n7 + 120*n1*n3^2*n7 - 47*d*n1*n3^2*n7 + 
     12*n1^2*n3^2*n7 + 24*n3^3*n7 - 8*d*n3^3*n7 + 6*n1*n3^3*n7 - 356*n4*n7 + 
     256*d*n4*n7 - 46*d^2*n4*n7 - 190*n1*n4*n7 + 85*d*n1*n4*n7 - 
     6*d^2*n1*n4*n7 - 20*n1^2*n4*n7 + 2*d*n1^2*n4*n7 + 244*n3*n4*n7 - 
     200*d*n3*n4*n7 + 40*d^2*n3*n4*n7 + 106*n1*n3*n4*n7 - 43*d*n1*n3*n4*n7 + 
     12*n1^2*n3*n4*n7 + 48*n3^2*n4*n7 - 16*d*n3^2*n4*n7 + 12*n1*n3^2*n4*n7 + 
     56*n4^2*n7 - 48*d*n4^2*n7 + 10*d^2*n4^2*n7 + 2*n1*n4^2*n7 - 
     2*d*n1*n4^2*n7 + 40*n3*n4^2*n7 - 16*d*n3*n4^2*n7 + 6*n1*n3*n4^2*n7 + 
     12*n4^3*n7 - 4*d*n4^3*n7 + 4*n3*n4^3*n7 - 644*n7^2 + 562*d*n7^2 - 
     146*d^2*n7^2 + 10*d^3*n7^2 - 218*n1*n7^2 + 100*d*n1*n7^2 - 
     6*d^2*n1*n7^2 - 16*n1^2*n7^2 + 316*n3*n7^2 - 276*d*n3*n7^2 + 
     58*d^2*n3*n7^2 + 148*n1*n3*n7^2 - 64*d*n1*n3*n7^2 + 16*n1^2*n3*n7^2 + 
     100*n3^2*n7^2 - 38*d*n3^2*n7^2 + 22*n1*n3^2*n7^2 + 4*n3^3*n7^2 - 
     196*n4*n7^2 + 98*d*n4*n7^2 - 10*d^2*n4*n7^2 - 42*n1*n4*n7^2 + 
     6*d*n1*n4*n7^2 + 76*n3*n4*n7^2 - 30*d*n3*n4*n7^2 + 18*n1*n3*n4*n7^2 + 
     8*n3^2*n4*n7^2 - 4*n4^2*n7^2 + 4*n3*n4^2*n7^2 - 132*n7^3 + 60*d*n7^3 - 
     4*d^2*n7^3 - 20*n1*n7^3 + 88*n3*n7^3 - 36*d*n3*n7^3 + 20*n1*n3*n7^3 + 
     12*n3^2*n7^3 - 24*n4*n7^3 + 4*d*n4*n7^3 + 8*n3*n4*n7^3 - 8*n7^4 + 
     8*n3*n7^4) + ((1 + n1)*(-1 + n3)*(-2 + d - n4)*
     (18 - 6*d + 15*n1 - 4*d*n1 + 2*n1^2 - 6*n3 + 2*d*n3 - n1*n3 - 12*n4 + 
      6*d*n4 - 2*n3*n4 - 4*n4^2 + 6*n7 - 2*d*n7 + 2*n1*n7 - 2*n4*n7 + 2*n7^2)*
     j[p4a, 2 + n1, -1, n3, n4, 0, 1, n7, 1, 0, 1, 1, 0, 1, 1])/
    (-252 + 510*d - 346*d^2 + 98*d^3 - 10*d^4 - 162*n1 + 273*d*n1 - 
     130*d^2*n1 + 19*d^3*n1 - 32*n1^2 + 43*d*n1^2 - 11*d^2*n1^2 - 2*n1^3 + 
     2*d*n1^3 - 36*n3 - 192*d*n3 + 230*d^2*n3 - 84*d^3*n3 + 10*d^4*n3 - 
     18*n1*n3 - 138*d*n1*n3 + 105*d^2*n1*n3 - 19*d^3*n1*n3 - 2*n1^2*n3 - 
     30*d*n1^2*n3 + 11*d^2*n1^2*n3 - 2*d*n1^3*n3 + 252*n3^2 - 294*d*n3^2 + 
     112*d^2*n3^2 - 14*d^3*n3^2 + 162*n1*n3^2 - 129*d*n1*n3^2 + 
     25*d^2*n1*n3^2 + 32*n1^2*n3^2 - 13*d*n1^2*n3^2 + 2*n1^3*n3^2 + 36*n3^3 - 
     24*d*n3^3 + 4*d^2*n3^3 + 18*n1*n3^3 - 6*d*n1*n3^3 + 2*n1^2*n3^3 + 
     48*n4 - 178*d*n4 + 156*d^2*n4 - 52*d^3*n4 + 6*d^4*n4 - 20*n1*n4 - 
     45*d*n1*n4 + 41*d^2*n1*n4 - 8*d^3*n1*n4 - 18*n1^2*n4 + d*n1^2*n4 + 
     2*d^2*n1^2*n4 - 2*n1^3*n4 + 264*n3*n4 - 334*d*n3*n4 + 136*d^2*n3*n4 - 
     18*d^3*n3*n4 + 160*n1*n3*n4 - 139*d*n1*n3*n4 + 29*d^2*n1*n3*n4 + 
     30*n1^2*n3*n4 - 13*d*n1^2*n3*n4 + 2*n1^3*n3*n4 + 72*n3^2*n4 - 
     48*d*n3^2*n4 + 8*d^2*n3^2*n4 + 36*n1*n3^2*n4 - 12*d*n1*n3^2*n4 + 
     4*n1^2*n3^2*n4 + 204*n4^2 - 224*d*n4^2 + 82*d^2*n4^2 - 10*d^3*n4^2 + 
     86*n1*n4^2 - 64*d*n1*n4^2 + 12*d^2*n1*n4^2 + 6*n1^2*n4^2 - 
     2*d*n1^2*n4^2 + 84*n3*n4^2 - 64*d*n3*n4^2 + 12*d^2*n3*n4^2 + 
     34*n1*n3*n4^2 - 14*d*n1*n3*n4^2 + 2*n1^2*n3*n4^2 + 36*n4^3 - 24*d*n4^3 + 
     4*d^2*n4^3 + 12*n1*n4^3 - 4*d*n1*n4^3 + 12*n3*n4^3 - 4*d*n3*n4^3 + 
     4*n1*n3*n4^3 - 1044*n7 + 1356*d*n7 - 612*d^2*n7 + 110*d^3*n7 - 
     6*d^4*n7 - 568*n1*n7 + 515*d*n1*n7 - 133*d^2*n1*n7 + 8*d^3*n1*n7 - 
     88*n1^2*n7 + 42*d*n1^2*n7 - 2*d^2*n1^2*n7 - 4*n1^3*n7 + 360*n3*n7 - 
     576*d*n3*n7 + 272*d^2*n3*n7 - 40*d^3*n3*n7 + 266*n1*n3*n7 - 
     272*d*n1*n3*n7 + 63*d^2*n1*n3*n7 + 60*n1^2*n3*n7 - 30*d*n1^2*n3*n7 + 
     4*n1^3*n3*n7 + 276*n3^2*n7 - 212*d*n3^2*n7 + 40*d^2*n3^2*n7 + 
     120*n1*n3^2*n7 - 47*d*n1*n3^2*n7 + 12*n1^2*n3^2*n7 + 24*n3^3*n7 - 
     8*d*n3^3*n7 + 6*n1*n3^3*n7 - 356*n4*n7 + 256*d*n4*n7 - 46*d^2*n4*n7 - 
     190*n1*n4*n7 + 85*d*n1*n4*n7 - 6*d^2*n1*n4*n7 - 20*n1^2*n4*n7 + 
     2*d*n1^2*n4*n7 + 244*n3*n4*n7 - 200*d*n3*n4*n7 + 40*d^2*n3*n4*n7 + 
     106*n1*n3*n4*n7 - 43*d*n1*n3*n4*n7 + 12*n1^2*n3*n4*n7 + 48*n3^2*n4*n7 - 
     16*d*n3^2*n4*n7 + 12*n1*n3^2*n4*n7 + 56*n4^2*n7 - 48*d*n4^2*n7 + 
     10*d^2*n4^2*n7 + 2*n1*n4^2*n7 - 2*d*n1*n4^2*n7 + 40*n3*n4^2*n7 - 
     16*d*n3*n4^2*n7 + 6*n1*n3*n4^2*n7 + 12*n4^3*n7 - 4*d*n4^3*n7 + 
     4*n3*n4^3*n7 - 644*n7^2 + 562*d*n7^2 - 146*d^2*n7^2 + 10*d^3*n7^2 - 
     218*n1*n7^2 + 100*d*n1*n7^2 - 6*d^2*n1*n7^2 - 16*n1^2*n7^2 + 
     316*n3*n7^2 - 276*d*n3*n7^2 + 58*d^2*n3*n7^2 + 148*n1*n3*n7^2 - 
     64*d*n1*n3*n7^2 + 16*n1^2*n3*n7^2 + 100*n3^2*n7^2 - 38*d*n3^2*n7^2 + 
     22*n1*n3^2*n7^2 + 4*n3^3*n7^2 - 196*n4*n7^2 + 98*d*n4*n7^2 - 
     10*d^2*n4*n7^2 - 42*n1*n4*n7^2 + 6*d*n1*n4*n7^2 + 76*n3*n4*n7^2 - 
     30*d*n3*n4*n7^2 + 18*n1*n3*n4*n7^2 + 8*n3^2*n4*n7^2 - 4*n4^2*n7^2 + 
     4*n3*n4^2*n7^2 - 132*n7^3 + 60*d*n7^3 - 4*d^2*n7^3 - 20*n1*n7^3 + 
     88*n3*n7^3 - 36*d*n3*n7^3 + 20*n1*n3*n7^3 + 12*n3^2*n7^3 - 24*n4*n7^3 + 
     4*d*n4*n7^3 + 8*n3*n4*n7^3 - 8*n7^4 + 8*n3*n7^4) + 
   ((1 + n1)*(-1 + n3)*(-2 + d - n4)*(18 - 6*d + 15*n1 - 4*d*n1 + 2*n1^2 - 
      6*n3 + 2*d*n3 - n1*n3 - 12*n4 + 6*d*n4 - 2*n3*n4 - 4*n4^2 + 6*n7 - 
      2*d*n7 + 2*n1*n7 - 2*n4*n7 + 2*n7^2)*j[p4a, 2 + n1, 0, n3, n4, -1, 1, 
      n7, 1, 0, 1, 1, 0, 0, 1])/(-252 + 510*d - 346*d^2 + 98*d^3 - 10*d^4 - 
     162*n1 + 273*d*n1 - 130*d^2*n1 + 19*d^3*n1 - 32*n1^2 + 43*d*n1^2 - 
     11*d^2*n1^2 - 2*n1^3 + 2*d*n1^3 - 36*n3 - 192*d*n3 + 230*d^2*n3 - 
     84*d^3*n3 + 10*d^4*n3 - 18*n1*n3 - 138*d*n1*n3 + 105*d^2*n1*n3 - 
     19*d^3*n1*n3 - 2*n1^2*n3 - 30*d*n1^2*n3 + 11*d^2*n1^2*n3 - 2*d*n1^3*n3 + 
     252*n3^2 - 294*d*n3^2 + 112*d^2*n3^2 - 14*d^3*n3^2 + 162*n1*n3^2 - 
     129*d*n1*n3^2 + 25*d^2*n1*n3^2 + 32*n1^2*n3^2 - 13*d*n1^2*n3^2 + 
     2*n1^3*n3^2 + 36*n3^3 - 24*d*n3^3 + 4*d^2*n3^3 + 18*n1*n3^3 - 
     6*d*n1*n3^3 + 2*n1^2*n3^3 + 48*n4 - 178*d*n4 + 156*d^2*n4 - 52*d^3*n4 + 
     6*d^4*n4 - 20*n1*n4 - 45*d*n1*n4 + 41*d^2*n1*n4 - 8*d^3*n1*n4 - 
     18*n1^2*n4 + d*n1^2*n4 + 2*d^2*n1^2*n4 - 2*n1^3*n4 + 264*n3*n4 - 
     334*d*n3*n4 + 136*d^2*n3*n4 - 18*d^3*n3*n4 + 160*n1*n3*n4 - 
     139*d*n1*n3*n4 + 29*d^2*n1*n3*n4 + 30*n1^2*n3*n4 - 13*d*n1^2*n3*n4 + 
     2*n1^3*n3*n4 + 72*n3^2*n4 - 48*d*n3^2*n4 + 8*d^2*n3^2*n4 + 
     36*n1*n3^2*n4 - 12*d*n1*n3^2*n4 + 4*n1^2*n3^2*n4 + 204*n4^2 - 
     224*d*n4^2 + 82*d^2*n4^2 - 10*d^3*n4^2 + 86*n1*n4^2 - 64*d*n1*n4^2 + 
     12*d^2*n1*n4^2 + 6*n1^2*n4^2 - 2*d*n1^2*n4^2 + 84*n3*n4^2 - 
     64*d*n3*n4^2 + 12*d^2*n3*n4^2 + 34*n1*n3*n4^2 - 14*d*n1*n3*n4^2 + 
     2*n1^2*n3*n4^2 + 36*n4^3 - 24*d*n4^3 + 4*d^2*n4^3 + 12*n1*n4^3 - 
     4*d*n1*n4^3 + 12*n3*n4^3 - 4*d*n3*n4^3 + 4*n1*n3*n4^3 - 1044*n7 + 
     1356*d*n7 - 612*d^2*n7 + 110*d^3*n7 - 6*d^4*n7 - 568*n1*n7 + 
     515*d*n1*n7 - 133*d^2*n1*n7 + 8*d^3*n1*n7 - 88*n1^2*n7 + 42*d*n1^2*n7 - 
     2*d^2*n1^2*n7 - 4*n1^3*n7 + 360*n3*n7 - 576*d*n3*n7 + 272*d^2*n3*n7 - 
     40*d^3*n3*n7 + 266*n1*n3*n7 - 272*d*n1*n3*n7 + 63*d^2*n1*n3*n7 + 
     60*n1^2*n3*n7 - 30*d*n1^2*n3*n7 + 4*n1^3*n3*n7 + 276*n3^2*n7 - 
     212*d*n3^2*n7 + 40*d^2*n3^2*n7 + 120*n1*n3^2*n7 - 47*d*n1*n3^2*n7 + 
     12*n1^2*n3^2*n7 + 24*n3^3*n7 - 8*d*n3^3*n7 + 6*n1*n3^3*n7 - 356*n4*n7 + 
     256*d*n4*n7 - 46*d^2*n4*n7 - 190*n1*n4*n7 + 85*d*n1*n4*n7 - 
     6*d^2*n1*n4*n7 - 20*n1^2*n4*n7 + 2*d*n1^2*n4*n7 + 244*n3*n4*n7 - 
     200*d*n3*n4*n7 + 40*d^2*n3*n4*n7 + 106*n1*n3*n4*n7 - 43*d*n1*n3*n4*n7 + 
     12*n1^2*n3*n4*n7 + 48*n3^2*n4*n7 - 16*d*n3^2*n4*n7 + 12*n1*n3^2*n4*n7 + 
     56*n4^2*n7 - 48*d*n4^2*n7 + 10*d^2*n4^2*n7 + 2*n1*n4^2*n7 - 
     2*d*n1*n4^2*n7 + 40*n3*n4^2*n7 - 16*d*n3*n4^2*n7 + 6*n1*n3*n4^2*n7 + 
     12*n4^3*n7 - 4*d*n4^3*n7 + 4*n3*n4^3*n7 - 644*n7^2 + 562*d*n7^2 - 
     146*d^2*n7^2 + 10*d^3*n7^2 - 218*n1*n7^2 + 100*d*n1*n7^2 - 
     6*d^2*n1*n7^2 - 16*n1^2*n7^2 + 316*n3*n7^2 - 276*d*n3*n7^2 + 
     58*d^2*n3*n7^2 + 148*n1*n3*n7^2 - 64*d*n1*n3*n7^2 + 16*n1^2*n3*n7^2 + 
     100*n3^2*n7^2 - 38*d*n3^2*n7^2 + 22*n1*n3^2*n7^2 + 4*n3^3*n7^2 - 
     196*n4*n7^2 + 98*d*n4*n7^2 - 10*d^2*n4*n7^2 - 42*n1*n4*n7^2 + 
     6*d*n1*n4*n7^2 + 76*n3*n4*n7^2 - 30*d*n3*n4*n7^2 + 18*n1*n3*n4*n7^2 + 
     8*n3^2*n4*n7^2 - 4*n4^2*n7^2 + 4*n3*n4^2*n7^2 - 132*n7^3 + 60*d*n7^3 - 
     4*d^2*n7^3 - 20*n1*n7^3 + 88*n3*n7^3 - 36*d*n3*n7^3 + 20*n1*n3*n7^3 + 
     12*n3^2*n7^3 - 24*n4*n7^3 + 4*d*n4*n7^3 + 8*n3*n4*n7^3 - 8*n7^4 + 
     8*n3*n7^4) + ((1 + n1)*(-2 + d - n4)*(-16 + 8*d - d^2 - 10*n1 + d^2*n1 - 
      2*n1^2 + 26*n3 - 13*d*n3 + 2*d^2*n3 + 20*n1*n3 - 6*d*n1*n3 + 
      2*n1^2*n3 - 4*n3^2 - d*n3^2 - 2*n1*n3^2 + 2*n3^3 + 10*n4 - 6*d*n4 + 
      n1*n4 - d*n1*n4 - 6*n3*n4 + 5*d*n3*n4 + 3*n1*n3*n4 + 6*n4^2 - 
      6*n3*n4^2 - 30*n7 + 15*d*n7 - d^2*n7 - 4*n1*n7 + 18*n3*n7 - 9*d*n3*n7 + 
      4*n1*n3*n7 + 4*n3^2*n7 - 4*n4*n7 + d*n4*n7 - 6*n7^2 + 6*n3*n7^2)*
     j[p4a, 2 + n1, 0, n3, n4, -1, 1, n7, 1, 0, 1, 1, 0, 1, 1])/
    (252 - 510*d + 346*d^2 - 98*d^3 + 10*d^4 + 162*n1 - 273*d*n1 + 
     130*d^2*n1 - 19*d^3*n1 + 32*n1^2 - 43*d*n1^2 + 11*d^2*n1^2 + 2*n1^3 - 
     2*d*n1^3 + 36*n3 + 192*d*n3 - 230*d^2*n3 + 84*d^3*n3 - 10*d^4*n3 + 
     18*n1*n3 + 138*d*n1*n3 - 105*d^2*n1*n3 + 19*d^3*n1*n3 + 2*n1^2*n3 + 
     30*d*n1^2*n3 - 11*d^2*n1^2*n3 + 2*d*n1^3*n3 - 252*n3^2 + 294*d*n3^2 - 
     112*d^2*n3^2 + 14*d^3*n3^2 - 162*n1*n3^2 + 129*d*n1*n3^2 - 
     25*d^2*n1*n3^2 - 32*n1^2*n3^2 + 13*d*n1^2*n3^2 - 2*n1^3*n3^2 - 36*n3^3 + 
     24*d*n3^3 - 4*d^2*n3^3 - 18*n1*n3^3 + 6*d*n1*n3^3 - 2*n1^2*n3^3 - 
     48*n4 + 178*d*n4 - 156*d^2*n4 + 52*d^3*n4 - 6*d^4*n4 + 20*n1*n4 + 
     45*d*n1*n4 - 41*d^2*n1*n4 + 8*d^3*n1*n4 + 18*n1^2*n4 - d*n1^2*n4 - 
     2*d^2*n1^2*n4 + 2*n1^3*n4 - 264*n3*n4 + 334*d*n3*n4 - 136*d^2*n3*n4 + 
     18*d^3*n3*n4 - 160*n1*n3*n4 + 139*d*n1*n3*n4 - 29*d^2*n1*n3*n4 - 
     30*n1^2*n3*n4 + 13*d*n1^2*n3*n4 - 2*n1^3*n3*n4 - 72*n3^2*n4 + 
     48*d*n3^2*n4 - 8*d^2*n3^2*n4 - 36*n1*n3^2*n4 + 12*d*n1*n3^2*n4 - 
     4*n1^2*n3^2*n4 - 204*n4^2 + 224*d*n4^2 - 82*d^2*n4^2 + 10*d^3*n4^2 - 
     86*n1*n4^2 + 64*d*n1*n4^2 - 12*d^2*n1*n4^2 - 6*n1^2*n4^2 + 
     2*d*n1^2*n4^2 - 84*n3*n4^2 + 64*d*n3*n4^2 - 12*d^2*n3*n4^2 - 
     34*n1*n3*n4^2 + 14*d*n1*n3*n4^2 - 2*n1^2*n3*n4^2 - 36*n4^3 + 24*d*n4^3 - 
     4*d^2*n4^3 - 12*n1*n4^3 + 4*d*n1*n4^3 - 12*n3*n4^3 + 4*d*n3*n4^3 - 
     4*n1*n3*n4^3 + 1044*n7 - 1356*d*n7 + 612*d^2*n7 - 110*d^3*n7 + 
     6*d^4*n7 + 568*n1*n7 - 515*d*n1*n7 + 133*d^2*n1*n7 - 8*d^3*n1*n7 + 
     88*n1^2*n7 - 42*d*n1^2*n7 + 2*d^2*n1^2*n7 + 4*n1^3*n7 - 360*n3*n7 + 
     576*d*n3*n7 - 272*d^2*n3*n7 + 40*d^3*n3*n7 - 266*n1*n3*n7 + 
     272*d*n1*n3*n7 - 63*d^2*n1*n3*n7 - 60*n1^2*n3*n7 + 30*d*n1^2*n3*n7 - 
     4*n1^3*n3*n7 - 276*n3^2*n7 + 212*d*n3^2*n7 - 40*d^2*n3^2*n7 - 
     120*n1*n3^2*n7 + 47*d*n1*n3^2*n7 - 12*n1^2*n3^2*n7 - 24*n3^3*n7 + 
     8*d*n3^3*n7 - 6*n1*n3^3*n7 + 356*n4*n7 - 256*d*n4*n7 + 46*d^2*n4*n7 + 
     190*n1*n4*n7 - 85*d*n1*n4*n7 + 6*d^2*n1*n4*n7 + 20*n1^2*n4*n7 - 
     2*d*n1^2*n4*n7 - 244*n3*n4*n7 + 200*d*n3*n4*n7 - 40*d^2*n3*n4*n7 - 
     106*n1*n3*n4*n7 + 43*d*n1*n3*n4*n7 - 12*n1^2*n3*n4*n7 - 48*n3^2*n4*n7 + 
     16*d*n3^2*n4*n7 - 12*n1*n3^2*n4*n7 - 56*n4^2*n7 + 48*d*n4^2*n7 - 
     10*d^2*n4^2*n7 - 2*n1*n4^2*n7 + 2*d*n1*n4^2*n7 - 40*n3*n4^2*n7 + 
     16*d*n3*n4^2*n7 - 6*n1*n3*n4^2*n7 - 12*n4^3*n7 + 4*d*n4^3*n7 - 
     4*n3*n4^3*n7 + 644*n7^2 - 562*d*n7^2 + 146*d^2*n7^2 - 10*d^3*n7^2 + 
     218*n1*n7^2 - 100*d*n1*n7^2 + 6*d^2*n1*n7^2 + 16*n1^2*n7^2 - 
     316*n3*n7^2 + 276*d*n3*n7^2 - 58*d^2*n3*n7^2 - 148*n1*n3*n7^2 + 
     64*d*n1*n3*n7^2 - 16*n1^2*n3*n7^2 - 100*n3^2*n7^2 + 38*d*n3^2*n7^2 - 
     22*n1*n3^2*n7^2 - 4*n3^3*n7^2 + 196*n4*n7^2 - 98*d*n4*n7^2 + 
     10*d^2*n4*n7^2 + 42*n1*n4*n7^2 - 6*d*n1*n4*n7^2 - 76*n3*n4*n7^2 + 
     30*d*n3*n4*n7^2 - 18*n1*n3*n4*n7^2 - 8*n3^2*n4*n7^2 + 4*n4^2*n7^2 - 
     4*n3*n4^2*n7^2 + 132*n7^3 - 60*d*n7^3 + 4*d^2*n7^3 + 20*n1*n7^3 - 
     88*n3*n7^3 + 36*d*n3*n7^3 - 20*n1*n3*n7^3 - 12*n3^2*n7^3 + 24*n4*n7^3 - 
     4*d*n4*n7^3 - 8*n3*n4*n7^3 + 8*n7^4 - 8*n3*n7^4) - 
   ((1 + n1)*(-1 + n3)*(-2 + d - n4)*(18 - 6*d + 15*n1 - 4*d*n1 + 2*n1^2 - 
      6*n3 + 2*d*n3 - n1*n3 - 12*n4 + 6*d*n4 - 2*n3*n4 - 4*n4^2 + 6*n7 - 
      2*d*n7 + 2*n1*n7 - 2*n4*n7 + 2*n7^2)*j[p4a, 2 + n1, 0, n3, n4, 0, 1, 
      n7, 1, -1, 1, 1, 0, 0, 1])/(-252 + 510*d - 346*d^2 + 98*d^3 - 10*d^4 - 
     162*n1 + 273*d*n1 - 130*d^2*n1 + 19*d^3*n1 - 32*n1^2 + 43*d*n1^2 - 
     11*d^2*n1^2 - 2*n1^3 + 2*d*n1^3 - 36*n3 - 192*d*n3 + 230*d^2*n3 - 
     84*d^3*n3 + 10*d^4*n3 - 18*n1*n3 - 138*d*n1*n3 + 105*d^2*n1*n3 - 
     19*d^3*n1*n3 - 2*n1^2*n3 - 30*d*n1^2*n3 + 11*d^2*n1^2*n3 - 2*d*n1^3*n3 + 
     252*n3^2 - 294*d*n3^2 + 112*d^2*n3^2 - 14*d^3*n3^2 + 162*n1*n3^2 - 
     129*d*n1*n3^2 + 25*d^2*n1*n3^2 + 32*n1^2*n3^2 - 13*d*n1^2*n3^2 + 
     2*n1^3*n3^2 + 36*n3^3 - 24*d*n3^3 + 4*d^2*n3^3 + 18*n1*n3^3 - 
     6*d*n1*n3^3 + 2*n1^2*n3^3 + 48*n4 - 178*d*n4 + 156*d^2*n4 - 52*d^3*n4 + 
     6*d^4*n4 - 20*n1*n4 - 45*d*n1*n4 + 41*d^2*n1*n4 - 8*d^3*n1*n4 - 
     18*n1^2*n4 + d*n1^2*n4 + 2*d^2*n1^2*n4 - 2*n1^3*n4 + 264*n3*n4 - 
     334*d*n3*n4 + 136*d^2*n3*n4 - 18*d^3*n3*n4 + 160*n1*n3*n4 - 
     139*d*n1*n3*n4 + 29*d^2*n1*n3*n4 + 30*n1^2*n3*n4 - 13*d*n1^2*n3*n4 + 
     2*n1^3*n3*n4 + 72*n3^2*n4 - 48*d*n3^2*n4 + 8*d^2*n3^2*n4 + 
     36*n1*n3^2*n4 - 12*d*n1*n3^2*n4 + 4*n1^2*n3^2*n4 + 204*n4^2 - 
     224*d*n4^2 + 82*d^2*n4^2 - 10*d^3*n4^2 + 86*n1*n4^2 - 64*d*n1*n4^2 + 
     12*d^2*n1*n4^2 + 6*n1^2*n4^2 - 2*d*n1^2*n4^2 + 84*n3*n4^2 - 
     64*d*n3*n4^2 + 12*d^2*n3*n4^2 + 34*n1*n3*n4^2 - 14*d*n1*n3*n4^2 + 
     2*n1^2*n3*n4^2 + 36*n4^3 - 24*d*n4^3 + 4*d^2*n4^3 + 12*n1*n4^3 - 
     4*d*n1*n4^3 + 12*n3*n4^3 - 4*d*n3*n4^3 + 4*n1*n3*n4^3 - 1044*n7 + 
     1356*d*n7 - 612*d^2*n7 + 110*d^3*n7 - 6*d^4*n7 - 568*n1*n7 + 
     515*d*n1*n7 - 133*d^2*n1*n7 + 8*d^3*n1*n7 - 88*n1^2*n7 + 42*d*n1^2*n7 - 
     2*d^2*n1^2*n7 - 4*n1^3*n7 + 360*n3*n7 - 576*d*n3*n7 + 272*d^2*n3*n7 - 
     40*d^3*n3*n7 + 266*n1*n3*n7 - 272*d*n1*n3*n7 + 63*d^2*n1*n3*n7 + 
     60*n1^2*n3*n7 - 30*d*n1^2*n3*n7 + 4*n1^3*n3*n7 + 276*n3^2*n7 - 
     212*d*n3^2*n7 + 40*d^2*n3^2*n7 + 120*n1*n3^2*n7 - 47*d*n1*n3^2*n7 + 
     12*n1^2*n3^2*n7 + 24*n3^3*n7 - 8*d*n3^3*n7 + 6*n1*n3^3*n7 - 356*n4*n7 + 
     256*d*n4*n7 - 46*d^2*n4*n7 - 190*n1*n4*n7 + 85*d*n1*n4*n7 - 
     6*d^2*n1*n4*n7 - 20*n1^2*n4*n7 + 2*d*n1^2*n4*n7 + 244*n3*n4*n7 - 
     200*d*n3*n4*n7 + 40*d^2*n3*n4*n7 + 106*n1*n3*n4*n7 - 43*d*n1*n3*n4*n7 + 
     12*n1^2*n3*n4*n7 + 48*n3^2*n4*n7 - 16*d*n3^2*n4*n7 + 12*n1*n3^2*n4*n7 + 
     56*n4^2*n7 - 48*d*n4^2*n7 + 10*d^2*n4^2*n7 + 2*n1*n4^2*n7 - 
     2*d*n1*n4^2*n7 + 40*n3*n4^2*n7 - 16*d*n3*n4^2*n7 + 6*n1*n3*n4^2*n7 + 
     12*n4^3*n7 - 4*d*n4^3*n7 + 4*n3*n4^3*n7 - 644*n7^2 + 562*d*n7^2 - 
     146*d^2*n7^2 + 10*d^3*n7^2 - 218*n1*n7^2 + 100*d*n1*n7^2 - 
     6*d^2*n1*n7^2 - 16*n1^2*n7^2 + 316*n3*n7^2 - 276*d*n3*n7^2 + 
     58*d^2*n3*n7^2 + 148*n1*n3*n7^2 - 64*d*n1*n3*n7^2 + 16*n1^2*n3*n7^2 + 
     100*n3^2*n7^2 - 38*d*n3^2*n7^2 + 22*n1*n3^2*n7^2 + 4*n3^3*n7^2 - 
     196*n4*n7^2 + 98*d*n4*n7^2 - 10*d^2*n4*n7^2 - 42*n1*n4*n7^2 + 
     6*d*n1*n4*n7^2 + 76*n3*n4*n7^2 - 30*d*n3*n4*n7^2 + 18*n1*n3*n4*n7^2 + 
     8*n3^2*n4*n7^2 - 4*n4^2*n7^2 + 4*n3*n4^2*n7^2 - 132*n7^3 + 60*d*n7^3 - 
     4*d^2*n7^3 - 20*n1*n7^3 + 88*n3*n7^3 - 36*d*n3*n7^3 + 20*n1*n3*n7^3 + 
     12*n3^2*n7^3 - 24*n4*n7^3 + 4*d*n4*n7^3 + 8*n3*n4*n7^3 - 8*n7^4 + 
     8*n3*n7^4) - ((1 + n1)*(-2 + d - n4)*(-16 + 8*d - d^2 - 10*n1 + d^2*n1 - 
      2*n1^2 + 26*n3 - 13*d*n3 + 2*d^2*n3 + 20*n1*n3 - 6*d*n1*n3 + 
      2*n1^2*n3 - 4*n3^2 - d*n3^2 - 2*n1*n3^2 + 2*n3^3 + 10*n4 - 6*d*n4 + 
      n1*n4 - d*n1*n4 - 6*n3*n4 + 5*d*n3*n4 + 3*n1*n3*n4 + 6*n4^2 - 
      6*n3*n4^2 - 30*n7 + 15*d*n7 - d^2*n7 - 4*n1*n7 + 18*n3*n7 - 9*d*n3*n7 + 
      4*n1*n3*n7 + 4*n3^2*n7 - 4*n4*n7 + d*n4*n7 - 6*n7^2 + 6*n3*n7^2)*
     j[p4a, 2 + n1, 0, n3, n4, 0, 1, n7, 1, -1, 1, 1, 0, 1, 1])/
    (252 - 510*d + 346*d^2 - 98*d^3 + 10*d^4 + 162*n1 - 273*d*n1 + 
     130*d^2*n1 - 19*d^3*n1 + 32*n1^2 - 43*d*n1^2 + 11*d^2*n1^2 + 2*n1^3 - 
     2*d*n1^3 + 36*n3 + 192*d*n3 - 230*d^2*n3 + 84*d^3*n3 - 10*d^4*n3 + 
     18*n1*n3 + 138*d*n1*n3 - 105*d^2*n1*n3 + 19*d^3*n1*n3 + 2*n1^2*n3 + 
     30*d*n1^2*n3 - 11*d^2*n1^2*n3 + 2*d*n1^3*n3 - 252*n3^2 + 294*d*n3^2 - 
     112*d^2*n3^2 + 14*d^3*n3^2 - 162*n1*n3^2 + 129*d*n1*n3^2 - 
     25*d^2*n1*n3^2 - 32*n1^2*n3^2 + 13*d*n1^2*n3^2 - 2*n1^3*n3^2 - 36*n3^3 + 
     24*d*n3^3 - 4*d^2*n3^3 - 18*n1*n3^3 + 6*d*n1*n3^3 - 2*n1^2*n3^3 - 
     48*n4 + 178*d*n4 - 156*d^2*n4 + 52*d^3*n4 - 6*d^4*n4 + 20*n1*n4 + 
     45*d*n1*n4 - 41*d^2*n1*n4 + 8*d^3*n1*n4 + 18*n1^2*n4 - d*n1^2*n4 - 
     2*d^2*n1^2*n4 + 2*n1^3*n4 - 264*n3*n4 + 334*d*n3*n4 - 136*d^2*n3*n4 + 
     18*d^3*n3*n4 - 160*n1*n3*n4 + 139*d*n1*n3*n4 - 29*d^2*n1*n3*n4 - 
     30*n1^2*n3*n4 + 13*d*n1^2*n3*n4 - 2*n1^3*n3*n4 - 72*n3^2*n4 + 
     48*d*n3^2*n4 - 8*d^2*n3^2*n4 - 36*n1*n3^2*n4 + 12*d*n1*n3^2*n4 - 
     4*n1^2*n3^2*n4 - 204*n4^2 + 224*d*n4^2 - 82*d^2*n4^2 + 10*d^3*n4^2 - 
     86*n1*n4^2 + 64*d*n1*n4^2 - 12*d^2*n1*n4^2 - 6*n1^2*n4^2 + 
     2*d*n1^2*n4^2 - 84*n3*n4^2 + 64*d*n3*n4^2 - 12*d^2*n3*n4^2 - 
     34*n1*n3*n4^2 + 14*d*n1*n3*n4^2 - 2*n1^2*n3*n4^2 - 36*n4^3 + 24*d*n4^3 - 
     4*d^2*n4^3 - 12*n1*n4^3 + 4*d*n1*n4^3 - 12*n3*n4^3 + 4*d*n3*n4^3 - 
     4*n1*n3*n4^3 + 1044*n7 - 1356*d*n7 + 612*d^2*n7 - 110*d^3*n7 + 
     6*d^4*n7 + 568*n1*n7 - 515*d*n1*n7 + 133*d^2*n1*n7 - 8*d^3*n1*n7 + 
     88*n1^2*n7 - 42*d*n1^2*n7 + 2*d^2*n1^2*n7 + 4*n1^3*n7 - 360*n3*n7 + 
     576*d*n3*n7 - 272*d^2*n3*n7 + 40*d^3*n3*n7 - 266*n1*n3*n7 + 
     272*d*n1*n3*n7 - 63*d^2*n1*n3*n7 - 60*n1^2*n3*n7 + 30*d*n1^2*n3*n7 - 
     4*n1^3*n3*n7 - 276*n3^2*n7 + 212*d*n3^2*n7 - 40*d^2*n3^2*n7 - 
     120*n1*n3^2*n7 + 47*d*n1*n3^2*n7 - 12*n1^2*n3^2*n7 - 24*n3^3*n7 + 
     8*d*n3^3*n7 - 6*n1*n3^3*n7 + 356*n4*n7 - 256*d*n4*n7 + 46*d^2*n4*n7 + 
     190*n1*n4*n7 - 85*d*n1*n4*n7 + 6*d^2*n1*n4*n7 + 20*n1^2*n4*n7 - 
     2*d*n1^2*n4*n7 - 244*n3*n4*n7 + 200*d*n3*n4*n7 - 40*d^2*n3*n4*n7 - 
     106*n1*n3*n4*n7 + 43*d*n1*n3*n4*n7 - 12*n1^2*n3*n4*n7 - 48*n3^2*n4*n7 + 
     16*d*n3^2*n4*n7 - 12*n1*n3^2*n4*n7 - 56*n4^2*n7 + 48*d*n4^2*n7 - 
     10*d^2*n4^2*n7 - 2*n1*n4^2*n7 + 2*d*n1*n4^2*n7 - 40*n3*n4^2*n7 + 
     16*d*n3*n4^2*n7 - 6*n1*n3*n4^2*n7 - 12*n4^3*n7 + 4*d*n4^3*n7 - 
     4*n3*n4^3*n7 + 644*n7^2 - 562*d*n7^2 + 146*d^2*n7^2 - 10*d^3*n7^2 + 
     218*n1*n7^2 - 100*d*n1*n7^2 + 6*d^2*n1*n7^2 + 16*n1^2*n7^2 - 
     316*n3*n7^2 + 276*d*n3*n7^2 - 58*d^2*n3*n7^2 - 148*n1*n3*n7^2 + 
     64*d*n1*n3*n7^2 - 16*n1^2*n3*n7^2 - 100*n3^2*n7^2 + 38*d*n3^2*n7^2 - 
     22*n1*n3^2*n7^2 - 4*n3^3*n7^2 + 196*n4*n7^2 - 98*d*n4*n7^2 + 
     10*d^2*n4*n7^2 + 42*n1*n4*n7^2 - 6*d*n1*n4*n7^2 - 76*n3*n4*n7^2 + 
     30*d*n3*n4*n7^2 - 18*n1*n3*n4*n7^2 - 8*n3^2*n4*n7^2 + 4*n4^2*n7^2 - 
     4*n3*n4^2*n7^2 + 132*n7^3 - 60*d*n7^3 + 4*d^2*n7^3 + 20*n1*n7^3 - 
     88*n3*n7^3 + 36*d*n3*n7^3 - 20*n1*n3*n7^3 - 12*n3^2*n7^3 + 24*n4*n7^3 - 
     4*d*n4*n7^3 - 8*n3*n4*n7^3 + 8*n7^4 - 8*n3*n7^4), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n1 == 0 && n10 == 1 && n11 == 1 && 
    n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && n5 == 0 && n6 == 1 && 
    n7 == 1 && n8 != 1 -> 
  (2*n4*j[p4a, 0, 0, n3, 1 + n4, 0, 0, 1, n8, n9, 1, 1, 0, 1, 1])/
    (-d + 2*n4 + 2*n8) - (n4*j[p4a, 0, 0, n3, 1 + n4, 0, 1, 1, -1 + n8, n9, 
      1, 1, 0, 1, 1])/(-1 + n8) + 
   ((-4 + d)*j[p4a, 0, 0, 1 + n3, n4, 0, 1, 0, -1 + n8, n9, 1, 1, 0, 2, 1])/
    ((d - 2*n4 - 2*n8)*(-1 + n8)) + 
   ((-4 + d - 2*n3)*j[p4a, 0, 0, 1 + n3, n4, 0, 1, 0, -1 + n8, n9, 1, 2, 0, 
      1, 1])/((d - 2*n4 - 2*n8)*(-1 + n8)) + 
   ((4 - d + 2*n3)*j[p4a, 0, 0, 1 + n3, n4, 0, 1, 1, -1 + n8, n9, 0, 2, 0, 1, 
      1])/((d - 2*n4 - 2*n8)*(-1 + n8)) + 
   ((-16 + 8*d - d^2 - 12*n3 + 3*d*n3 - 2*n3^2)*j[p4a, 0, 0, 1 + n3, n4, 0, 
      1, 1, -1 + n8, n9, 1, 1, 0, 1, 1])/((d - 2*n4 - 2*n8)*(-1 + n8)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n10 == 1 && n11 == 1 && n12 == -1 && 
    n13 == 1 && n14 == 1 && n5 == 0 && n6 == 1 && n7 == 1 && n8 == 1 && 
    n9 == 0 && n2 != 0 -> 
  -((n3*j[p4a, -1 + n1, n2, n3, n4, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1])/
     (-1 + n1)) + j[p4a, -1 + n1, 1 + n2, -2 + n3, n4, 0, 1, 1, 1, 0, 1, 1, 
     0, 2, 1]/(1 - n1) + j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, 0, 1, 0, 1, 0, 
     1, 1, 0, 2, 1]/(-1 + n1) + j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, 0, 1, 0, 
     1, 0, 1, 2, 0, 1, 1]/(-1 + n1) + j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, 0, 
     1, 1, 0, 0, 1, 1, 0, 2, 1]/(-1 + n1) + 
   j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, 0, 1, 1, 1, 0, 0, 2, 0, 1, 1]/
    (1 - n1) + ((7 - 2*d + n1 + 2*n2 + n4)*j[p4a, -1 + n1, 1 + n2, -1 + n3, 
      n4, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1])/(-1 + n1) - 
   (n4*j[p4a, -1 + n1, 1 + n2, -1 + n3, 1 + n4, 0, 0, 1, 1, 0, 1, 1, 0, 1, 
      1])/(-1 + n1) + (n4*j[p4a, -1 + n1, 1 + n2, -1 + n3, 1 + n4, 0, 1, 1, 
      0, 0, 1, 1, 0, 1, 1])/(-1 + n1) + 
   j[p4a, -1 + n1, 1 + n2, n3, n4, 0, 1, 0, 1, 0, 1, 1, -1, 2, 1]/(1 - n1) + 
   ((1 + n3)*j[p4a, -1 + n1, 1 + n2, n3, n4, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (-1 + n1) + j[p4a, -1 + n1, 1 + n2, n3, n4, 0, 1, 0, 1, 0, 1, 2, -1, 1, 
     1]/(1 - n1) + ((-1 + 2*n3)*j[p4a, -1 + n1, 1 + n2, n3, n4, 0, 1, 1, 0, 
      0, 1, 1, 0, 1, 1])/(-1 + n1) + j[p4a, -1 + n1, 1 + n2, n3, n4, 0, 1, 1, 
     1, 0, 0, 2, -1, 1, 1]/(-1 + n1) + 
   ((-4 + d - n2 - n3)*j[p4a, -1 + n1, 1 + n2, n3, n4, 0, 1, 1, 1, 0, 1, 1, 
      -1, 1, 1])/(-1 + n1) + (n3*j[p4a, -1 + n1, 1 + n2, n3, n4, 0, 1, 1, 1, 
      0, 1, 1, 0, 0, 1])/(-1 + n1) + 
   ((-1 - n2)*j[p4a, -1 + n1, 2 + n2, n3, n4, 0, 1, 0, 1, 0, 1, 1, -1, 1, 1])/
    (-1 + n1) + ((1 + n2)*j[p4a, -1 + n1, 2 + n2, n3, n4, 0, 1, 1, 0, 0, 1, 
      1, -1, 1, 1])/(-1 + n1) + j[p4a, n1, n2, -1 + n3, n4, 0, 1, 1, 1, 0, 1, 
    1, 0, 1, 1] - j[p4a, n1, 1 + n2, -1 + n3, n4, 0, 1, 1, 1, 0, 0, 1, 0, 1, 
    1] + j[p4a, n1, 1 + n2, n3, n4, 0, 1, 1, 0, 0, 1, 1, -1, 1, 1] + 
   j[p4a, n1, 1 + n2, n3, n4, 0, 1, 1, 1, 0, 0, 1, -1, 1, 1] - 
   j[p4a, n1, 1 + n2, n3, n4, 0, 1, 1, 1, 0, 1, 0, -1, 1, 1], 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n10 == 1 && n11 == 1 && n12 == 0 && 
    n13 == 1 && n14 == 1 && n5 == 0 && n6 == 1 && n7 == 1 && n8 == 1 && 
    n9 == 0 && n2 != 0 -> 
  ((-2 + d - n4)*j[p4a, -1 + n1, 1 + n2, n3, n4, 0, 0, 1, 1, 0, 1, 2, 0, 1, 
      1])/(12 - 4*d + 15*n1 - 4*d*n1 + 2*n1^2 + n2 + 2*n1*n2 - 6*n3 + 
     2*d*n3 - n1*n3 - n2*n3 - 16*n4 + 6*d*n4 - 2*n2*n4 - 2*n3*n4 - 4*n4^2) + 
   ((-2 + d - n4)*j[p4a, -1 + n1, 1 + n2, n3, n4, 0, 0, 1, 1, 0, 2, 1, 0, 1, 
      1])/(12 - 4*d + 15*n1 - 4*d*n1 + 2*n1^2 + n2 + 2*n1*n2 - 6*n3 + 
     2*d*n3 - n1*n3 - n2*n3 - 16*n4 + 6*d*n4 - 2*n2*n4 - 2*n3*n4 - 4*n4^2) + 
   ((7 - 2*d + 2*n1 + n2 + n4)*j[p4a, -1 + n1, 1 + n2, n3, n4, 0, 1, 0, 1, 0, 
      1, 1, 0, 2, 1])/(-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - n2 - 2*n1*n2 + 
     6*n3 - 2*d*n3 + n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 2*n2*n4 + 2*n3*n4 + 
     4*n4^2) + ((6 - 2*d + n1 + n2 + 2*n4)*j[p4a, -1 + n1, 1 + n2, n3, n4, 0, 
      1, 0, 1, 0, 1, 2, 0, 1, 1])/(-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - n2 - 
     2*n1*n2 + 6*n3 - 2*d*n3 + n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 2*n2*n4 + 
     2*n3*n4 + 4*n4^2) + ((-3 + d - n1)*j[p4a, -1 + n1, 1 + n2, n3, n4, 0, 1, 
      0, 2, 0, 1, 1, 0, 1, 1])/(-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - n2 - 
     2*n1*n2 + 6*n3 - 2*d*n3 + n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 2*n2*n4 + 
     2*n3*n4 + 4*n4^2) + ((-2 + d - n4)*j[p4a, -1 + n1, 1 + n2, n3, n4, 0, 1, 
      1, 0, 0, 1, 2, 0, 1, 1])/(12 - 4*d + 15*n1 - 4*d*n1 + 2*n1^2 + n2 + 
     2*n1*n2 - 6*n3 + 2*d*n3 - n1*n3 - n2*n3 - 16*n4 + 6*d*n4 - 2*n2*n4 - 
     2*n3*n4 - 4*n4^2) + ((-4 + d - n1 - n2 - n4)*j[p4a, -1 + n1, 1 + n2, n3, 
      n4, 0, 1, 1, 1, 0, 0, 2, 0, 1, 1])/(-12 + 4*d - 15*n1 + 4*d*n1 - 
     2*n1^2 - n2 - 2*n1*n2 + 6*n3 - 2*d*n3 + n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 
     2*n2*n4 + 2*n3*n4 + 4*n4^2) + 
   ((36 - 24*d + 4*d^2 + 6*n1 - 2*d*n1 + 12*n2 - 4*d*n2 + n1*n2 + n2^2 + 
      6*n3 - 2*d*n3 + n1*n3 + n2*n3 + 24*n4 - 8*d*n4 + 2*n1*n4 + 4*n2*n4 + 
      2*n3*n4 + 4*n4^2)*j[p4a, -1 + n1, 1 + n2, n3, n4, 0, 1, 1, 1, 0, 1, 1, 
      0, 1, 1])/(-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - n2 - 2*n1*n2 + 6*n3 - 
     2*d*n3 + n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 2*n2*n4 + 2*n3*n4 + 4*n4^2) + 
   ((2 - d + n4)*j[p4a, -1 + n1, 1 + n2, n3, n4, 0, 1, 1, 1, 0, 1, 1, 0, 2, 
      0])/(12 - 4*d + 15*n1 - 4*d*n1 + 2*n1^2 + n2 + 2*n1*n2 - 6*n3 + 
     2*d*n3 - n1*n3 - n2*n3 - 16*n4 + 6*d*n4 - 2*n2*n4 - 2*n3*n4 - 4*n4^2) + 
   ((-3 + d - n1)*n4*j[p4a, -1 + n1, 1 + n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, 1, 
      0, 1, 1])/(-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - n2 - 2*n1*n2 + 6*n3 - 
     2*d*n3 + n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 2*n2*n4 + 2*n3*n4 + 4*n4^2) + 
   (2*n3*(-2 + d - n4)*j[p4a, -1 + n1, 1 + n2, 1 + n3, -1 + n4, 0, 1, 1, 1, 
      0, 1, 1, 0, 1, 1])/(12 - 4*d + 15*n1 - 4*d*n1 + 2*n1^2 + n2 + 2*n1*n2 - 
     6*n3 + 2*d*n3 - n1*n3 - n2*n3 - 16*n4 + 6*d*n4 - 2*n2*n4 - 2*n3*n4 - 
     4*n4^2) + ((-3 + d - n1)*n3*j[p4a, -1 + n1, 1 + n2, 1 + n3, n4, 0, 1, 0, 
      1, 0, 1, 1, 0, 1, 1])/(-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - n2 - 
     2*n1*n2 + 6*n3 - 2*d*n3 + n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 2*n2*n4 + 
     2*n3*n4 + 4*n4^2) - ((-3 + d - n1)*n3*j[p4a, -1 + n1, 1 + n2, 1 + n3, 
      n4, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1])/(-12 + 4*d - 15*n1 + 4*d*n1 - 
     2*n1^2 - n2 - 2*n1*n2 + 6*n3 - 2*d*n3 + n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 
     2*n2*n4 + 2*n3*n4 + 4*n4^2) - 
   (n3*(-2 + d - n4)*j[p4a, -1 + n1, 1 + n2, 1 + n3, n4, 0, 1, 1, 1, 0, 1, 1, 
      0, 1, 0])/(12 - 4*d + 15*n1 - 4*d*n1 + 2*n1^2 + n2 + 2*n1*n2 - 6*n3 + 
     2*d*n3 - n1*n3 - n2*n3 - 16*n4 + 6*d*n4 - 2*n2*n4 - 2*n3*n4 - 4*n4^2) + 
   ((1 + n2)*(-2 + d - n4)*j[p4a, -1 + n1, 2 + n2, n3, -1 + n4, 0, 1, 1, 1, 
      0, 1, 1, 0, 1, 1])/(-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - n2 - 
     2*n1*n2 + 6*n3 - 2*d*n3 + n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 2*n2*n4 + 
     2*n3*n4 + 4*n4^2) + ((1 + n2)*(-2 + d - n4)*j[p4a, -1 + n1, 2 + n2, n3, 
      n4, -1, 1, 1, 1, 0, 1, 1, 0, 1, 1])/(-12 + 4*d - 15*n1 + 4*d*n1 - 
     2*n1^2 - n2 - 2*n1*n2 + 6*n3 - 2*d*n3 + n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 
     2*n2*n4 + 2*n3*n4 + 4*n4^2) - ((1 + n2)*(7 - 2*d + 2*n1 + n2 + n4)*
     j[p4a, -1 + n1, 2 + n2, n3, n4, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (12 - 4*d + 15*n1 - 4*d*n1 + 2*n1^2 + n2 + 2*n1*n2 - 6*n3 + 2*d*n3 - 
     n1*n3 - n2*n3 - 16*n4 + 6*d*n4 - 2*n2*n4 - 2*n3*n4 - 4*n4^2) + 
   ((1 + n2)*(7 - 2*d + 2*n1 + n2 + n4)*j[p4a, -1 + n1, 2 + n2, n3, n4, 0, 1, 
      1, 0, 0, 1, 1, 0, 1, 1])/(12 - 4*d + 15*n1 - 4*d*n1 + 2*n1^2 + n2 + 
     2*n1*n2 - 6*n3 + 2*d*n3 - n1*n3 - n2*n3 - 16*n4 + 6*d*n4 - 2*n2*n4 - 
     2*n3*n4 - 4*n4^2) + ((2 - d + n4)*j[p4a, n1, n2, n3, n4, 0, 0, 1, 1, 0, 
      2, 1, 0, 1, 1])/(12 - 4*d + 15*n1 - 4*d*n1 + 2*n1^2 + n2 + 2*n1*n2 - 
     6*n3 + 2*d*n3 - n1*n3 - n2*n3 - 16*n4 + 6*d*n4 - 2*n2*n4 - 2*n3*n4 - 
     4*n4^2) + ((2 - d + n4)*j[p4a, n1, n2, n3, n4, 0, 1, 1, 0, 0, 1, 2, 0, 
      1, 1])/(12 - 4*d + 15*n1 - 4*d*n1 + 2*n1^2 + n2 + 2*n1*n2 - 6*n3 + 
     2*d*n3 - n1*n3 - n2*n3 - 16*n4 + 6*d*n4 - 2*n2*n4 - 2*n3*n4 - 4*n4^2) + 
   ((3 - d + n1)*j[p4a, n1, n2, n3, n4, 0, 1, 1, 2, 0, 1, 0, 0, 1, 1])/
    (-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - n2 - 2*n1*n2 + 6*n3 - 2*d*n3 + 
     n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 2*n2*n4 + 2*n3*n4 + 4*n4^2) + 
   ((3 - d + n1)*j[p4a, n1, n2, n3, n4, 0, 2, 1, 1, 0, 0, 1, 0, 1, 1])/
    (-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - n2 - 2*n1*n2 + 6*n3 - 2*d*n3 + 
     n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 2*n2*n4 + 2*n3*n4 + 4*n4^2) - 
   ((-3 + d - n1)*n4*j[p4a, n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, 1, 0, 1, 
      1])/(-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - n2 - 2*n1*n2 + 6*n3 - 
     2*d*n3 + n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 2*n2*n4 + 2*n3*n4 + 4*n4^2) - 
   ((-3 + d - n1)*n3*j[p4a, n1, n2, 1 + n3, n4, 0, 1, 0, 1, 0, 1, 1, 0, 1, 
      1])/(-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - n2 - 2*n1*n2 + 6*n3 - 
     2*d*n3 + n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 2*n2*n4 + 2*n3*n4 + 4*n4^2) + 
   ((-3 + d - n1)*n3*j[p4a, n1, n2, 1 + n3, n4, 0, 1, 1, 1, 0, 1, 1, 0, 0, 
      1])/(-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - n2 - 2*n1*n2 + 6*n3 - 
     2*d*n3 + n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 2*n2*n4 + 2*n3*n4 + 4*n4^2) + 
   (n3*(-2 + d - n4)*j[p4a, n1, n2, 1 + n3, n4, 0, 1, 1, 1, 0, 1, 1, 0, 1, 
      0])/(12 - 4*d + 15*n1 - 4*d*n1 + 2*n1^2 + n2 + 2*n1*n2 - 6*n3 + 
     2*d*n3 - n1*n3 - n2*n3 - 16*n4 + 6*d*n4 - 2*n2*n4 - 2*n3*n4 - 4*n4^2) + 
   ((-13 + 4*d - 2*n1 - 2*n2 - n3 - 2*n4)*(-7 + 2*d - 2*n1 - n2 - n4)*
     j[p4a, n1, 1 + n2, -1 + n3, n4, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1])/
    (-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - n2 - 2*n1*n2 + 6*n3 - 2*d*n3 + 
     n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 2*n2*n4 + 2*n3*n4 + 4*n4^2) + 
   ((-4 + d - n1 - n2 - n4)*j[p4a, n1, 1 + n2, -1 + n3, n4, 0, 1, 1, 1, 0, 1, 
      1, 0, 1, 2])/(-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - n2 - 2*n1*n2 + 
     6*n3 - 2*d*n3 + n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 2*n2*n4 + 2*n3*n4 + 
     4*n4^2) + ((-7 + 2*d - 2*n1 - n2 - n4)*j[p4a, n1, 1 + n2, -1 + n3, n4, 
      0, 1, 1, 1, 0, 1, 1, 0, 2, 1])/(-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - 
     n2 - 2*n1*n2 + 6*n3 - 2*d*n3 + n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 
     2*n2*n4 + 2*n3*n4 + 4*n4^2) + 
   ((2 - d + n4)*j[p4a, n1, 1 + n2, n3, -1 + n4, 0, 1, 1, 0, 0, 1, 2, 0, 1, 
      1])/(12 - 4*d + 15*n1 - 4*d*n1 + 2*n1^2 + n2 + 2*n1*n2 - 6*n3 + 
     2*d*n3 - n1*n3 - n2*n3 - 16*n4 + 6*d*n4 - 2*n2*n4 - 2*n3*n4 - 4*n4^2) - 
   ((-5 + 2*d - 2*n1 + n3 - 2*n4)*(-2 + d - n4)*j[p4a, n1, 1 + n2, n3, 
      -1 + n4, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1])/(-12 + 4*d - 15*n1 + 4*d*n1 - 
     2*n1^2 - n2 - 2*n1*n2 + 6*n3 - 2*d*n3 + n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 
     2*n2*n4 + 2*n3*n4 + 4*n4^2) + 
   ((4 - d + n1 + n2 + n4)*j[p4a, n1, 1 + n2, n3, -1 + n4, 0, 1, 1, 1, 0, 1, 
      1, 0, 1, 2])/(-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - n2 - 2*n1*n2 + 
     6*n3 - 2*d*n3 + n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 2*n2*n4 + 2*n3*n4 + 
     4*n4^2) + ((2 - d + n4)*j[p4a, n1, 1 + n2, n3, -1 + n4, 0, 1, 1, 2, 0, 
      1, 1, 0, 1, 1])/(12 - 4*d + 15*n1 - 4*d*n1 + 2*n1^2 + n2 + 2*n1*n2 - 
     6*n3 + 2*d*n3 - n1*n3 - n2*n3 - 16*n4 + 6*d*n4 - 2*n2*n4 - 2*n3*n4 - 
     4*n4^2) + ((2 - d + n4)*j[p4a, n1, 1 + n2, n3, -1 + n4, 0, 1, 2, 0, 0, 
      1, 1, 0, 1, 1])/(12 - 4*d + 15*n1 - 4*d*n1 + 2*n1^2 + n2 + 2*n1*n2 - 
     6*n3 + 2*d*n3 - n1*n3 - n2*n3 - 16*n4 + 6*d*n4 - 2*n2*n4 - 2*n3*n4 - 
     4*n4^2) + ((-2 + d - n4)*j[p4a, n1, 1 + n2, n3, -1 + n4, 0, 1, 2, 1, 0, 
      0, 1, 0, 1, 1])/(12 - 4*d + 15*n1 - 4*d*n1 + 2*n1^2 + n2 + 2*n1*n2 - 
     6*n3 + 2*d*n3 - n1*n3 - n2*n3 - 16*n4 + 6*d*n4 - 2*n2*n4 - 2*n3*n4 - 
     4*n4^2) + ((2 - d + n4)*j[p4a, n1, 1 + n2, n3, -1 + n4, 0, 1, 2, 1, 0, 
      1, 0, 0, 1, 1])/(12 - 4*d + 15*n1 - 4*d*n1 + 2*n1^2 + n2 + 2*n1*n2 - 
     6*n3 + 2*d*n3 - n1*n3 - n2*n3 - 16*n4 + 6*d*n4 - 2*n2*n4 - 2*n3*n4 - 
     4*n4^2) + ((9 - 3*d + 2*n1 + n2 + 2*n4)*j[p4a, n1, 1 + n2, n3, -1 + n4, 
      0, 2, 1, 1, 0, 0, 1, 0, 1, 1])/(-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - 
     n2 - 2*n1*n2 + 6*n3 - 2*d*n3 + n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 
     2*n2*n4 + 2*n3*n4 + 4*n4^2) + 
   ((-2 + d - n4)*j[p4a, n1, 1 + n2, n3, n4, -1, 1, 1, 0, 0, 1, 2, 0, 1, 1])/
    (12 - 4*d + 15*n1 - 4*d*n1 + 2*n1^2 + n2 + 2*n1*n2 - 6*n3 + 2*d*n3 - 
     n1*n3 - n2*n3 - 16*n4 + 6*d*n4 - 2*n2*n4 - 2*n3*n4 - 4*n4^2) + 
   ((-2 + d - n4)*j[p4a, n1, 1 + n2, n3, n4, -1, 1, 2, 0, 0, 1, 1, 0, 1, 1])/
    (12 - 4*d + 15*n1 - 4*d*n1 + 2*n1^2 + n2 + 2*n1*n2 - 6*n3 + 2*d*n3 - 
     n1*n3 - n2*n3 - 16*n4 + 6*d*n4 - 2*n2*n4 - 2*n3*n4 - 4*n4^2) + 
   ((-2 + d - n4)*j[p4a, n1, 1 + n2, n3, n4, -1, 1, 2, 1, 0, 0, 1, 0, 1, 1])/
    (12 - 4*d + 15*n1 - 4*d*n1 + 2*n1^2 + n2 + 2*n1*n2 - 6*n3 + 2*d*n3 - 
     n1*n3 - n2*n3 - 16*n4 + 6*d*n4 - 2*n2*n4 - 2*n3*n4 - 4*n4^2) + 
   ((2 - d + n4)*j[p4a, n1, 1 + n2, n3, n4, -1, 1, 2, 1, 0, 1, 0, 0, 1, 1])/
    (12 - 4*d + 15*n1 - 4*d*n1 + 2*n1^2 + n2 + 2*n1*n2 - 6*n3 + 2*d*n3 - 
     n1*n3 - n2*n3 - 16*n4 + 6*d*n4 - 2*n2*n4 - 2*n3*n4 - 4*n4^2) + 
   ((-3 + d - n1)*j[p4a, n1, 1 + n2, n3, n4, -1, 2, 1, 1, 0, 0, 1, 0, 1, 1])/
    (-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - n2 - 2*n1*n2 + 6*n3 - 2*d*n3 + 
     n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 2*n2*n4 + 2*n3*n4 + 4*n4^2) - 
   ((2 + n2 - 2*n4)*(2 - d + n4)*j[p4a, n1, 1 + n2, n3, n4, 0, 0, 1, 1, 0, 1, 
      1, 0, 1, 1])/(-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - n2 - 2*n1*n2 + 
     6*n3 - 2*d*n3 + n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 2*n2*n4 + 2*n3*n4 + 
     4*n4^2) + ((-2 + d - n4)*j[p4a, n1, 1 + n2, n3, n4, 0, 0, 1, 2, 0, 1, 1, 
      0, 1, 1])/(12 - 4*d + 15*n1 - 4*d*n1 + 2*n1^2 + n2 + 2*n1*n2 - 6*n3 + 
     2*d*n3 - n1*n3 - n2*n3 - 16*n4 + 6*d*n4 - 2*n2*n4 - 2*n3*n4 - 4*n4^2) + 
   ((-2 + d - n4)*j[p4a, n1, 1 + n2, n3, n4, 0, 1, 0, 1, -1, 2, 1, 0, 1, 1])/
    (12 - 4*d + 15*n1 - 4*d*n1 + 2*n1^2 + n2 + 2*n1*n2 - 6*n3 + 2*d*n3 - 
     n1*n3 - n2*n3 - 16*n4 + 6*d*n4 - 2*n2*n4 - 2*n3*n4 - 4*n4^2) + 
   ((-9 + 3*d - 2*n1 - n2 + 7*n3 - 2*d*n3 + 2*n1*n3 + n2*n3 + 7*n4 - 3*d*n4 + 
      2*n1*n4 + n2*n4 + n3*n4 + 2*n4^2)*j[p4a, n1, 1 + n2, n3, n4, 0, 1, 0, 
      1, 0, 1, 1, 0, 1, 1])/(-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - n2 - 
     2*n1*n2 + 6*n3 - 2*d*n3 + n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 2*n2*n4 + 
     2*n3*n4 + 4*n4^2) + ((2 - d + n4)*j[p4a, n1, 1 + n2, n3, n4, 0, 1, 0, 1, 
      0, 1, 2, 0, 1, 1])/(12 - 4*d + 15*n1 - 4*d*n1 + 2*n1^2 + n2 + 2*n1*n2 - 
     6*n3 + 2*d*n3 - n1*n3 - n2*n3 - 16*n4 + 6*d*n4 - 2*n2*n4 - 2*n3*n4 - 
     4*n4^2) + ((3 - d + n1)*j[p4a, n1, 1 + n2, n3, n4, 0, 1, 0, 1, 0, 2, 1, 
      0, 1, 1])/(-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - n2 - 2*n1*n2 + 6*n3 - 
     2*d*n3 + n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 2*n2*n4 + 2*n3*n4 + 4*n4^2) + 
   ((2 - d + n4)*j[p4a, n1, 1 + n2, n3, n4, 0, 1, 1, 0, -1, 1, 2, 0, 1, 1])/
    (12 - 4*d + 15*n1 - 4*d*n1 + 2*n1^2 + n2 + 2*n1*n2 - 6*n3 + 2*d*n3 - 
     n1*n3 - n2*n3 - 16*n4 + 6*d*n4 - 2*n2*n4 - 2*n3*n4 - 4*n4^2) + 
   ((2 - d - 7*n1 + 2*d*n1 - 2*n1^2 - n1*n2 + 7*n3 - 2*d*n3 + 2*n1*n3 + 
      n2*n3 + 6*n4 - d*n4 + n1*n4 + n2*n4 + n3*n4)*j[p4a, n1, 1 + n2, n3, n4, 
      0, 1, 1, 0, 0, 1, 1, 0, 1, 1])/(-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - 
     n2 - 2*n1*n2 + 6*n3 - 2*d*n3 + n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 
     2*n2*n4 + 2*n3*n4 + 4*n4^2) + 
   ((3 - d + n1)*j[p4a, n1, 1 + n2, n3, n4, 0, 1, 1, 1, -1, 1, 1, 0, 0, 2])/
    (-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - n2 - 2*n1*n2 + 6*n3 - 2*d*n3 + 
     n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 2*n2*n4 + 2*n3*n4 + 4*n4^2) + 
   ((2 - d + n4)*j[p4a, n1, 1 + n2, n3, n4, 0, 1, 1, 1, -1, 2, 0, 0, 1, 1])/
    (12 - 4*d + 15*n1 - 4*d*n1 + 2*n1^2 + n2 + 2*n1*n2 - 6*n3 + 2*d*n3 - 
     n1*n3 - n2*n3 - 16*n4 + 6*d*n4 - 2*n2*n4 - 2*n3*n4 - 4*n4^2) + 
   ((-2 + d - 7*n1 + 2*d*n1 - 2*n1^2 + 3*n2 - d*n2 + 7*n3 - 2*d*n3 + 
      2*n1*n3 + n2*n3 + 8*n4 - 3*d*n4 + n1*n4 + n2*n4 + n3*n4 + 2*n4^2)*
     j[p4a, n1, 1 + n2, n3, n4, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1])/
    (-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - n2 - 2*n1*n2 + 6*n3 - 2*d*n3 + 
     n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 2*n2*n4 + 2*n3*n4 + 4*n4^2) + 
   ((-2 + d - n4)*j[p4a, n1, 1 + n2, n3, n4, 0, 1, 1, 1, 0, 0, 2, 0, 1, 1])/
    (12 - 4*d + 15*n1 - 4*d*n1 + 2*n1^2 + n2 + 2*n1*n2 - 6*n3 + 2*d*n3 - 
     n1*n3 - n2*n3 - 16*n4 + 6*d*n4 - 2*n2*n4 - 2*n3*n4 - 4*n4^2) + 
   ((2 - d + 7*n1 - 2*d*n1 + 2*n1^2 + n1*n2 - 7*n3 + 2*d*n3 - 2*n1*n3 - 
      n2*n3 - 8*n4 + 3*d*n4 - n1*n4 - n2*n4 - n3*n4 - 2*n4^2)*
     j[p4a, n1, 1 + n2, n3, n4, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1])/
    (-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - n2 - 2*n1*n2 + 6*n3 - 2*d*n3 + 
     n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 2*n2*n4 + 2*n3*n4 + 4*n4^2) + 
   ((-3 + d - n1)*j[p4a, n1, 1 + n2, n3, n4, 0, 1, 1, 1, 0, 1, 1, 0, 0, 2])/
    (-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - n2 - 2*n1*n2 + 6*n3 - 2*d*n3 + 
     n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 2*n2*n4 + 2*n3*n4 + 4*n4^2) + 
   ((7 + d - d^2 + 4*n1 + 2*n2 + n1*n2 - 6*n3 + 2*d*n3 - n1*n3 - n2*n3 - 
      9*n4 + 4*d*n4 - n1*n4 - n2*n4 - 2*n3*n4 - 2*n4^2)*
     j[p4a, n1, 1 + n2, n3, n4, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1])/
    (-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - n2 - 2*n1*n2 + 6*n3 - 2*d*n3 + 
     n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 2*n2*n4 + 2*n3*n4 + 4*n4^2) + 
   ((-2 + d - n4)*j[p4a, n1, 1 + n2, n3, n4, 0, 1, 1, 1, 0, 1, 1, 0, 2, 0])/
    (12 - 4*d + 15*n1 - 4*d*n1 + 2*n1^2 + n2 + 2*n1*n2 - 6*n3 + 2*d*n3 - 
     n1*n3 - n2*n3 - 16*n4 + 6*d*n4 - 2*n2*n4 - 2*n3*n4 - 4*n4^2) + 
   ((-3 + d - n1)*j[p4a, n1, 1 + n2, n3, n4, 0, 1, 1, 1, 0, 2, 0, 0, 1, 1])/
    (-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - n2 - 2*n1*n2 + 6*n3 - 2*d*n3 + 
     n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 2*n2*n4 + 2*n3*n4 + 4*n4^2) + 
   ((-9 + 3*d - 2*n1 - n2 - 2*n4)*j[p4a, n1, 1 + n2, n3, n4, 0, 2, 1, 0, -1, 
      1, 1, 0, 1, 1])/(-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - n2 - 2*n1*n2 + 
     6*n3 - 2*d*n3 + n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 2*n2*n4 + 2*n3*n4 + 
     4*n4^2) + ((-3 + d - n1)*n4*j[p4a, n1, 1 + n2, n3, 1 + n4, -1, 1, 0, 1, 
      0, 1, 1, 0, 1, 1])/(-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - n2 - 
     2*n1*n2 + 6*n3 - 2*d*n3 + n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 2*n2*n4 + 
     2*n3*n4 + 4*n4^2) + ((-3 + d - n1)*n4*j[p4a, n1, 1 + n2, n3, 1 + n4, -1, 
      1, 1, 0, 0, 1, 1, 0, 1, 1])/(-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - n2 - 
     2*n1*n2 + 6*n3 - 2*d*n3 + n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 2*n2*n4 + 
     2*n3*n4 + 4*n4^2) + ((-3 + d - n1)*n4*j[p4a, n1, 1 + n2, n3, 1 + n4, -1, 
      1, 1, 1, 0, 0, 1, 0, 1, 1])/(-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - n2 - 
     2*n1*n2 + 6*n3 - 2*d*n3 + n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 2*n2*n4 + 
     2*n3*n4 + 4*n4^2) - ((-3 + d - n1)*n4*j[p4a, n1, 1 + n2, n3, 1 + n4, -1, 
      1, 1, 1, 0, 1, 0, 0, 1, 1])/(-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - n2 - 
     2*n1*n2 + 6*n3 - 2*d*n3 + n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 2*n2*n4 + 
     2*n3*n4 + 4*n4^2) - ((-3 + d - n1)*n4*j[p4a, n1, 1 + n2, n3, 1 + n4, 0, 
      1, 0, 1, -1, 1, 1, 0, 1, 1])/(-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - 
     n2 - 2*n1*n2 + 6*n3 - 2*d*n3 + n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 
     2*n2*n4 + 2*n3*n4 + 4*n4^2) - 
   (n3*(-2 + d - n4)*j[p4a, n1, 1 + n2, 1 + n3, -1 + n4, 0, 1, 0, 1, 0, 1, 1, 
      0, 1, 1])/(12 - 4*d + 15*n1 - 4*d*n1 + 2*n1^2 + n2 + 2*n1*n2 - 6*n3 + 
     2*d*n3 - n1*n3 - n2*n3 - 16*n4 + 6*d*n4 - 2*n2*n4 - 2*n3*n4 - 4*n4^2) - 
   (3*n3*(-2 + d - n4)*j[p4a, n1, 1 + n2, 1 + n3, -1 + n4, 0, 1, 1, 0, 0, 1, 
      1, 0, 1, 1])/(12 - 4*d + 15*n1 - 4*d*n1 + 2*n1^2 + n2 + 2*n1*n2 - 
     6*n3 + 2*d*n3 - n1*n3 - n2*n3 - 16*n4 + 6*d*n4 - 2*n2*n4 - 2*n3*n4 - 
     4*n4^2) + (n3*(-2 + d - n4)*j[p4a, n1, 1 + n2, 1 + n3, -1 + n4, 0, 1, 1, 
      1, 0, 0, 1, 0, 1, 1])/(12 - 4*d + 15*n1 - 4*d*n1 + 2*n1^2 + n2 + 
     2*n1*n2 - 6*n3 + 2*d*n3 - n1*n3 - n2*n3 - 16*n4 + 6*d*n4 - 2*n2*n4 - 
     2*n3*n4 - 4*n4^2) - (n3*(-2 + d - n4)*j[p4a, n1, 1 + n2, 1 + n3, 
      -1 + n4, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1])/(12 - 4*d + 15*n1 - 4*d*n1 + 
     2*n1^2 + n2 + 2*n1*n2 - 6*n3 + 2*d*n3 - n1*n3 - n2*n3 - 16*n4 + 6*d*n4 - 
     2*n2*n4 - 2*n3*n4 - 4*n4^2) + 
   (2*n3*(-2 + d - n4)*j[p4a, n1, 1 + n2, 1 + n3, -1 + n4, 0, 1, 1, 1, 0, 1, 
      1, -1, 1, 1])/(12 - 4*d + 15*n1 - 4*d*n1 + 2*n1^2 + n2 + 2*n1*n2 - 
     6*n3 + 2*d*n3 - n1*n3 - n2*n3 - 16*n4 + 6*d*n4 - 2*n2*n4 - 2*n3*n4 - 
     4*n4^2) - (2*n3*(-2 + d - n4)*j[p4a, n1, 1 + n2, 1 + n3, -1 + n4, 0, 1, 
      1, 1, 0, 1, 1, 0, 0, 1])/(12 - 4*d + 15*n1 - 4*d*n1 + 2*n1^2 + n2 + 
     2*n1*n2 - 6*n3 + 2*d*n3 - n1*n3 - n2*n3 - 16*n4 + 6*d*n4 - 2*n2*n4 - 
     2*n3*n4 - 4*n4^2) - (2*n3*(-2 + d - n4)*j[p4a, n1, 1 + n2, 1 + n3, 
      -1 + n4, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1])/(12 - 4*d + 15*n1 - 4*d*n1 + 
     2*n1^2 + n2 + 2*n1*n2 - 6*n3 + 2*d*n3 - n1*n3 - n2*n3 - 16*n4 + 6*d*n4 - 
     2*n2*n4 - 2*n3*n4 - 4*n4^2) - 
   ((-3 + d - n1)*n3*j[p4a, n1, 1 + n2, 1 + n3, n4, 0, 1, 0, 1, 0, 1, 1, 0, 
      1, 1])/(-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - n2 - 2*n1*n2 + 6*n3 - 
     2*d*n3 + n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 2*n2*n4 + 2*n3*n4 + 4*n4^2) + 
   ((-3 + d - n1)*n3*j[p4a, n1, 1 + n2, 1 + n3, n4, 0, 1, 1, 1, 0, 1, 1, 0, 
      0, 1])/(-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - n2 - 2*n1*n2 + 6*n3 - 
     2*d*n3 + n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 2*n2*n4 + 2*n3*n4 + 4*n4^2) + 
   (n3*(-2 + d - n4)*j[p4a, n1, 1 + n2, 1 + n3, n4, 0, 1, 1, 1, 0, 1, 1, 0, 
      1, 0])/(12 - 4*d + 15*n1 - 4*d*n1 + 2*n1^2 + n2 + 2*n1*n2 - 6*n3 + 
     2*d*n3 - n1*n3 - n2*n3 - 16*n4 + 6*d*n4 - 2*n2*n4 - 2*n3*n4 - 4*n4^2) - 
   ((1 + n2)*(-2 + d - n4)*j[p4a, n1, 2 + n2, n3, -1 + n4, 0, 1, 1, 1, 0, 0, 
      1, 0, 1, 1])/(-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - n2 - 2*n1*n2 + 
     6*n3 - 2*d*n3 + n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 2*n2*n4 + 2*n3*n4 + 
     4*n4^2) - ((1 + n2)*(-2 + d - n4)*j[p4a, n1, 2 + n2, n3, n4, -1, 1, 1, 
      1, 0, 0, 1, 0, 1, 1])/(-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - n2 - 
     2*n1*n2 + 6*n3 - 2*d*n3 + n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 2*n2*n4 + 
     2*n3*n4 + 4*n4^2) + ((1 + n2)*(-2 + d - n4)*j[p4a, n1, 2 + n2, n3, n4, 
      -1, 1, 1, 1, 0, 1, 1, 0, 1, 1])/(-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - 
     n2 - 2*n1*n2 + 6*n3 - 2*d*n3 + n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 
     2*n2*n4 + 2*n3*n4 + 4*n4^2) - 
   ((1 + n2)*(-2 + d - n4)*j[p4a, n1, 2 + n2, n3, n4, 0, 0, 1, 1, 0, 1, 1, 0, 
      1, 1])/(-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - n2 - 2*n1*n2 + 6*n3 - 
     2*d*n3 + n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 2*n2*n4 + 2*n3*n4 + 4*n4^2) - 
   ((1 + n2)*(-2 + d - n4)*j[p4a, n1, 2 + n2, n3, n4, 0, 1, 0, 1, -1, 1, 1, 
      0, 1, 1])/(-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - n2 - 2*n1*n2 + 6*n3 - 
     2*d*n3 + n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 2*n2*n4 + 2*n3*n4 + 4*n4^2) - 
   ((-3 + d - n1)*(1 + n2)*j[p4a, n1, 2 + n2, n3, n4, 0, 1, 0, 1, 0, 1, 1, 0, 
      1, 1])/(-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - n2 - 2*n1*n2 + 6*n3 - 
     2*d*n3 + n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 2*n2*n4 + 2*n3*n4 + 4*n4^2) + 
   ((1 + n2)*(-2 + d - n4)*j[p4a, n1, 2 + n2, n3, n4, 0, 1, 1, 0, -1, 1, 1, 
      0, 1, 1])/(-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - n2 - 2*n1*n2 + 6*n3 - 
     2*d*n3 + n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 2*n2*n4 + 2*n3*n4 + 4*n4^2) + 
   ((-3 + d - n1)*(1 + n2)*j[p4a, n1, 2 + n2, n3, n4, 0, 1, 1, 0, 0, 1, 1, 0, 
      1, 1])/(-12 + 4*d - 15*n1 + 4*d*n1 - 2*n1^2 - n2 - 2*n1*n2 + 6*n3 - 
     2*d*n3 + n1*n3 + n2*n3 + 16*n4 - 6*d*n4 + 2*n2*n4 + 2*n3*n4 + 4*n4^2) - 
   (n1*(-2 + d - n4)*j[p4a, 1 + n1, 1 + n2, n3, n4, -1, 1, 1, 1, 0, 1, 1, 0, 
      1, 1])/(12 - 4*d + 15*n1 - 4*d*n1 + 2*n1^2 + n2 + 2*n1*n2 - 6*n3 + 
     2*d*n3 - n1*n3 - n2*n3 - 16*n4 + 6*d*n4 - 2*n2*n4 - 2*n3*n4 - 4*n4^2) + 
   (n1*(-2 + d - n4)*j[p4a, 1 + n1, 1 + n2, n3, n4, 0, 1, 1, 1, -1, 1, 1, 0, 
      1, 1])/(12 - 4*d + 15*n1 - 4*d*n1 + 2*n1^2 + n2 + 2*n1*n2 - 6*n3 + 
     2*d*n3 - n1*n3 - n2*n3 - 16*n4 + 6*d*n4 - 2*n2*n4 - 2*n3*n4 - 4*n4^2), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n10 == 1 && n11 == 1 && n12 == 0 && 
    n13 == 1 && n14 == 1 && n2 == 0 && n6 == 1 && n7 == 1 && n8 == 1 && 
    n9 == 0 && n5 != 0 -> j[p4a, -1 + n1, 0, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 
     1, 0, 2, 1]/(-3 + d - n4 - n5) + j[p4a, -1 + n1, 0, n3, n4, 1 + n5, 1, 
     0, 2, 0, 1, 1, 0, 1, 1]/(3 - d + n4 + n5) + 
   ((1 + n5)*j[p4a, -1 + n1, 0, n3, n4, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (-3 + d - n4 - n5) + (n4*j[p4a, -1 + n1, 0, n3, 1 + n4, 1 + n5, 1, 0, 1, 
      0, 1, 1, 0, 1, 1])/(3 - d + n4 + n5) - 
   (n3*j[p4a, -1 + n1, 0, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (-3 + d - n4 - n5) + (n3*j[p4a, -1 + n1, 0, 1 + n3, n4, 1 + n5, 1, 1, 1, 
      0, 1, 1, 0, 0, 1])/(-3 + d - n4 - n5) + 
   ((7 - 2*d + n1)*j[p4a, n1, -1, n3, n4, 1 + n5, 1, 1, 1, 0, 1, 1, 0, 1, 1])/
    (-3 + d - n4 - n5) + j[p4a, n1, -1, n3, n4, 1 + n5, 1, 1, 2, 0, 1, 0, 0, 
     1, 1]/(-3 + d - n4 - n5) + j[p4a, n1, -1, n3, n4, 1 + n5, 2, 1, 1, 0, 0, 
     1, 0, 1, 1]/(-3 + d - n4 - n5) - 
   (n4*j[p4a, n1, -1, n3, 1 + n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (3 - d + n4 + n5) + (n3*j[p4a, n1, -1, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 
      1, 0, 1, 1])/(-3 + d - n4 - n5) - 
   (n3*j[p4a, n1, -1, 1 + n3, n4, 1 + n5, 1, 1, 1, 0, 1, 1, 0, 0, 1])/
    (-3 + d - n4 - n5) + ((13 - 4*d + 2*n1 + n3 + 2*n4 + 2*n5)*
     j[p4a, n1, 0, -1 + n3, n4, 1 + n5, 1, 1, 1, 0, 1, 1, 0, 1, 1])/
    (-3 + d - n4 - n5) + j[p4a, n1, 0, -1 + n3, n4, 1 + n5, 1, 1, 1, 0, 1, 1, 
     0, 2, 1]/(3 - d + n4 + n5) + j[p4a, n1, 0, n3, -1 + n4, 1 + n5, 1, 1, 1, 
    0, 1, 1, 0, 1, 1] + j[p4a, n1, 0, n3, -1 + n4, 1 + n5, 2, 1, 1, 0, 0, 1, 
     0, 1, 1]/(-3 + d - n4 - n5) + 
   ((1 + n5)*j[p4a, n1, 0, n3, -1 + n4, 2 + n5, 1, 1, 1, 0, 1, 1, 0, 1, 1])/
    (3 - d + n4 + n5) + j[p4a, n1, 0, n3, n4, n5, 2, 1, 1, 0, 0, 1, 0, 1, 1]/
    (3 - d + n4 + n5) + ((1 - n3 - n4)*j[p4a, n1, 0, n3, n4, 1 + n5, 1, 0, 1, 
      0, 1, 1, 0, 1, 1])/(3 - d + n4 + n5) + 
   j[p4a, n1, 0, n3, n4, 1 + n5, 1, 0, 1, 0, 2, 1, 0, 1, 1]/
    (-3 + d - n4 - n5) + ((n1 - n3 - n4)*j[p4a, n1, 0, n3, n4, 1 + n5, 1, 1, 
      0, 0, 1, 1, 0, 1, 1])/(3 - d + n4 + n5) + 
   j[p4a, n1, 0, n3, n4, 1 + n5, 1, 1, 1, -1, 1, 1, 0, 0, 2]/
    (-3 + d - n4 - n5) + ((1 + n1 - n3 - n4)*j[p4a, n1, 0, n3, n4, 1 + n5, 1, 
      1, 1, 0, 0, 1, 0, 1, 1])/(3 - d + n4 + n5) + 
   ((-n1 + n3 + n4)*j[p4a, n1, 0, n3, n4, 1 + n5, 1, 1, 1, 0, 1, 0, 0, 1, 1])/
    (3 - d + n4 + n5) + j[p4a, n1, 0, n3, n4, 1 + n5, 1, 1, 1, 0, 1, 1, 0, 0, 
     2]/(3 - d + n4 + n5) + ((5 - d + n5)*j[p4a, n1, 0, n3, n4, 1 + n5, 1, 1, 
      1, 0, 1, 1, 0, 1, 1])/(-3 + d - n4 - n5) + 
   j[p4a, n1, 0, n3, n4, 1 + n5, 1, 1, 1, 0, 2, 0, 0, 1, 1]/
    (3 - d + n4 + n5) + j[p4a, n1, 0, n3, n4, 1 + n5, 2, 1, 0, -1, 1, 1, 0, 
     1, 1]/(3 - d + n4 + n5) + 
   ((1 + n5)*j[p4a, n1, 0, n3, n4, 2 + n5, 1, 0, 1, -1, 1, 1, 0, 1, 1])/
    (3 - d + n4 + n5) + ((1 + n5)*j[p4a, n1, 0, n3, n4, 2 + n5, 1, 0, 1, 0, 
      1, 1, 0, 1, 1])/(-3 + d - n4 - n5) + 
   (n4*j[p4a, n1, 0, n3, 1 + n4, n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (3 - d + n4 + n5) + (n4*j[p4a, n1, 0, n3, 1 + n4, n5, 1, 1, 0, 0, 1, 1, 
      0, 1, 1])/(3 - d + n4 + n5) + 
   (n4*j[p4a, n1, 0, n3, 1 + n4, n5, 1, 1, 1, 0, 0, 1, 0, 1, 1])/
    (3 - d + n4 + n5) - (n4*j[p4a, n1, 0, n3, 1 + n4, n5, 1, 1, 1, 0, 1, 0, 
      0, 1, 1])/(3 - d + n4 + n5) - 
   (n4*j[p4a, n1, 0, n3, 1 + n4, 1 + n5, 1, 0, 1, -1, 1, 1, 0, 1, 1])/
    (3 - d + n4 + n5) + (n3*j[p4a, n1, 0, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 
      1, 0, 1, 1])/(-3 + d - n4 - n5) - 
   (n3*j[p4a, n1, 0, 1 + n3, n4, 1 + n5, 1, 1, 1, 0, 1, 1, 0, 0, 1])/
    (-3 + d - n4 - n5), j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?Positive, (n4_)?Positive, (n5_)?NonPositive, (n6_)?Positive, 
    (n7_)?Positive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n5 == 0 && n6 == 1 && n7 == 1 && n8 == 1 &&  !(n4 == 1 || n9 == 0) -> 
  (-2*j[p4a, -1 + n1, 0, n3, n4, 0, 0, 1, 2, 1 + n9, 1, 1, 0, 1, 1])/
    (-2 + d - 2*n4) - (n3*j[p4a, -1 + n1, 0, 1 + n3, -1 + n4, 0, 1, 0, 1, 
      1 + n9, 1, 1, 0, 2, 1])/((-1 + n4)*(2 - d + 2*n4)) + 
   (n3*j[p4a, -1 + n1, 0, 1 + n3, -1 + n4, 0, 1, 0, 1, 1 + n9, 1, 2, 0, 1, 
      1])/((-1 + n4)*(2 - d + 2*n4)) - 
   (n3*j[p4a, -1 + n1, 0, 1 + n3, -1 + n4, 0, 1, 1, 1, 1 + n9, 0, 2, 0, 1, 
      1])/((-1 + n4)*(2 - d + 2*n4)) + 
   ((-8*n3 + 3*d*n3 - 2*n1*n3 - 2*n3^2 - 2*n3*n4)*j[p4a, -1 + n1, 0, 1 + n3, 
      -1 + n4, 0, 1, 1, 1, 1 + n9, 1, 1, 0, 1, 1])/
    ((-2 + d - 2*n4)*(-1 + n4)) - j[p4a, n1, -1, n3, n4, 0, 1, 1, 1, 1 + n9, 
    1, 1, 0, 1, 1] + ((-3 + d - n1 - n3)*n3*j[p4a, n1, -1, 1 + n3, -1 + n4, 
      0, 1, 1, 1, 1 + n9, 1, 1, 0, 1, 1])/((-2 + d - 2*n4)*(-1 + n4)) + 
   ((-18 + 15*d - 3*d^2 - 14*n1 + 5*d*n1 - 2*n1^2 - 5*n3 + 2*d*n3 - 2*n1*n3 - 
      10*n4 + 4*d*n4 - 2*n1*n4 - n3*n4 - 2*n4^2)*j[p4a, n1, 0, n3, -1 + n4, 
      0, 1, 1, 1, 1 + n9, 1, 1, 0, 1, 1])/((-1 + n4)*(2 - d + 2*n4)) + 
   ((-4 + d - n3)*j[p4a, n1, 0, n3, -1 + n4, 0, 1, 1, 1, 1 + n9, 1, 1, 0, 2, 
      1])/((-2 + d - 2*n4)*(-1 + n4)) + 
   j[p4a, n1, 0, n3, -1 + n4, 0, 1, 1, 2, 1 + n9, 1, 0, 0, 1, 1]/(1 - n4) + 
   ((-4 + 2*d - 2*n1 - n3 - 2*n4)*j[p4a, n1, 0, n3, -1 + n4, 0, 1, 2, 1, 
      1 + n9, 0, 1, 0, 1, 1])/((-2 + d - 2*n4)*(-1 + n4)) + 
   ((4 - 2*d + 2*n1 + n3 + 2*n4)*j[p4a, n1, 0, n3, -1 + n4, 0, 1, 2, 1, 
      1 + n9, 1, 0, 0, 1, 1])/((-2 + d - 2*n4)*(-1 + n4)) + 
   j[p4a, n1, 0, n3, n4, -1, 1, 1, 1, 1 + n9, 1, 1, 0, 1, 1] + 
   ((-4 + 2*d - 2*n1 - n3 - 2*n4)*j[p4a, n1, 0, n3, n4, 0, 0, 1, 1, 1 + n9, 
      1, 1, 0, 1, 1])/(-2 + d - 2*n4) + 
   ((2 - d + 2*n1 + n3)*j[p4a, n1, 0, n3, n4, 0, 1, 1, 0, 1 + n9, 1, 1, 0, 1, 
      1])/(-2 + d - 2*n4) + j[p4a, n1, 0, n3, n4, 0, 1, 1, 1, 1 + n9, 0, 1, 
    0, 1, 1] - j[p4a, n1, 0, n3, n4, 0, 1, 1, 1, 1 + n9, 1, 0, 0, 1, 1] + 
   ((4*n3 - 2*d*n3 + 2*n1*n3 + n3^2 + 2*n3*n4)*j[p4a, n1, 0, 1 + n3, -1 + n4, 
      0, 1, 0, 1, 1 + n9, 1, 1, 0, 1, 1])/((-2 + d - 2*n4)*(-1 + n4)) + 
   ((7*n3 - 3*d*n3 + 3*n1*n3 + 2*n3^2 + 2*n3*n4)*j[p4a, n1, 0, 1 + n3, 
      -1 + n4, 0, 1, 1, 0, 1 + n9, 1, 1, 0, 1, 1])/
    ((-2 + d - 2*n4)*(-1 + n4)) + ((-n3 + d*n3 - n1*n3 - 2*n3*n4)*
     j[p4a, n1, 0, 1 + n3, -1 + n4, 0, 1, 1, 1, 1 + n9, 0, 1, 0, 1, 1])/
    ((-2 + d - 2*n4)*(-1 + n4)) + ((n3 - d*n3 + n1*n3 + 2*n3*n4)*
     j[p4a, n1, 0, 1 + n3, -1 + n4, 0, 1, 1, 1, 1 + n9, 1, 0, 0, 1, 1])/
    ((-2 + d - 2*n4)*(-1 + n4)) - (n3*(4 - 2*d + 2*n1 + n3 + 2*n4)*
     j[p4a, n1, 0, 1 + n3, -1 + n4, 0, 1, 1, 1, 1 + n9, 1, 1, -1, 1, 1])/
    ((-2 + d - 2*n4)*(-1 + n4)) + 
   ((4*n3 - d*n3 + n3^2)*j[p4a, n1, 0, 1 + n3, -1 + n4, 0, 1, 1, 1, 1 + n9, 
      1, 1, 0, 0, 1])/((-2 + d - 2*n4)*(-1 + n4)) + 
   ((-(d*n3) + 2*n1*n3 + 2*n3*n4)*j[p4a, n1, 0, 1 + n3, -1 + n4, 0, 1, 1, 1, 
      1 + n9, 1, 1, 0, 1, 1])/((-2 + d - 2*n4)*(-1 + n4)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n10 == 1 && n11 == 1 && n12 == -1 && 
    n13 == 1 && n14 == 1 && n2 == 0 && n4 == 1 && n5 == 0 && n6 == 1 && 
    n8 == 1 &&  !(n7 == 1 || n9 == 0) -> 
  -j[p4a, n1, -1, n3, 1, 0, 1, n7, 1, 1 + n9, 1, 1, -1, 1, 1] - 
   (n3*j[p4a, n1, -1, 1 + n3, 1, 0, 1, -1 + n7, 1, 1 + n9, 1, 1, -1, 1, 1])/
    (-1 + n7) - j[p4a, n1, 0, n3, 0, 0, 1, n7, 1, 1 + n9, 1, 1, -1, 1, 1] + 
   j[p4a, n1, 0, n3, 1, -1, 1, n7, 1, 1 + n9, 1, 1, -1, 1, 1] + 
   j[p4a, n1, 0, n3, 1, 0, 0, -1 + n7, 1, 1 + n9, 2, 1, -1, 1, 1]/(1 - n7) + 
   ((-4 + d - n3)*j[p4a, n1, 0, n3, 1, 0, 1, -1 + n7, 1, 1 + n9, 1, 1, -1, 1, 
      1])/(-1 + n7) + j[p4a, n1, 0, n3, 1, 0, 1, n7, 0, 1 + n9, 1, 1, -1, 1, 
    1] - (2*j[p4a, n1, 0, n3, 1, 0, 1, n7, 1, n9, 2, 0, -1, 1, 1])/
    (-2 + d - 2*n7) + ((-6 + d)*j[p4a, n1, 0, n3, 1, 0, 2, -1 + n7, 1, n9, 1, 
      1, -1, 1, 1])/((-2 + d - 2*n7)*(-1 + n7)) + 
   j[p4a, n1, 0, n3, 2, 0, 0, -1 + n7, 1, 1 + n9, 1, 1, -1, 1, 1]/(1 - n7) + 
   j[p4a, n1, 0, n3, 2, 0, 1, -1 + n7, 0, 1 + n9, 1, 1, -1, 1, 1]/(-1 + n7) + 
   ((-6 + d)*j[p4a, n1, 0, n3, 2, 0, 1, -1 + n7, 1, n9, 1, 1, -1, 1, 1])/
    ((-2 + d - 2*n7)*(-1 + n7)) - 
   (2*j[p4a, n1, 0, n3, 2, 0, 2, -1 + n7, 0, n9, 1, 1, -1, 1, 1])/
    ((-1 + n7)*(2 - d + 2*n7)) - 
   (n3*j[p4a, n1, 0, 1 + n3, 0, 0, 1, -1 + n7, 1, 1 + n9, 1, 1, -1, 1, 1])/
    (-1 + n7) + (2*n3*j[p4a, n1, 0, 1 + n3, 0, 0, 2, -1 + n7, 1, n9, 1, 1, 
      -1, 1, 1])/((-1 + n7)*(2 - d + 2*n7)) + 
   (n3*j[p4a, n1, 0, 1 + n3, 1, 0, 1, -2 + n7, 1, 1 + n9, 1, 1, -1, 1, 1])/
    (-1 + n7) + (2*n3*j[p4a, n1, 0, 1 + n3, 1, 0, 1, -1 + n7, 0, 1 + n9, 1, 
      1, -1, 1, 1])/(-1 + n7) + ((12*n3 - 3*d*n3 + 2*n3^2 + 2*n3*n9)*
     j[p4a, n1, 0, 1 + n3, 1, 0, 1, -1 + n7, 1, n9, 1, 1, -1, 1, 1])/
    ((-1 + n7)*(2 - d + 2*n7)) - 
   (n3*j[p4a, n1, 0, 1 + n3, 1, 0, 1, -1 + n7, 1, 1 + n9, 1, 1, -2, 1, 1])/
    (-1 + n7) + (n3*j[p4a, n1, 0, 1 + n3, 1, 0, 1, -1 + n7, 1, 1 + n9, 1, 1, 
      -1, 0, 1])/(-1 + n7) + ((2*n3 - d*n3 + 2*n3*n7 + 2*n3*n9)*
     j[p4a, n1, 0, 1 + n3, 1, 0, 1, -1 + n7, 1, 1 + n9, 1, 1, -1, 1, 0])/
    ((-1 + n7)*(2 - d + 2*n7)) - 
   (2*n3*n9*j[p4a, n1, 0, 1 + n3, 1, 0, 1, -1 + n7, 1, 1 + n9, 1, 1, -1, 1, 
      1])/((-1 + n7)*(2 - d + 2*n7)) - 
   (2*n3*j[p4a, n1, 0, 1 + n3, 1, 0, 2, -1 + n7, 0, n9, 1, 1, -1, 1, 1])/
    ((-1 + n7)*(2 - d + 2*n7)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n10 == 1 && n11 == 1 && n12 == -1 && 
    n13 == 1 && n14 == 1 && n4 == 1 && n5 == 0 && n6 == 1 && n7 == 1 && 
    n8 == 1 && n2 != 0 -> 
  -((n3*j[p4a, -1 + n1, n2, n3, 1, 0, 1, 1, 1, n9, 1, 1, 0, 1, 1])/
     (-1 + n1)) + j[p4a, -1 + n1, 1 + n2, -2 + n3, 1, 0, 1, 1, 1, n9, 1, 1, 
     0, 2, 1]/(1 - n1) + j[p4a, -1 + n1, 1 + n2, -1 + n3, 1, 0, 1, 0, 1, n9, 
     1, 1, 0, 2, 1]/(-1 + n1) + j[p4a, -1 + n1, 1 + n2, -1 + n3, 1, 0, 1, 0, 
     1, n9, 1, 2, 0, 1, 1]/(-1 + n1) + 
   j[p4a, -1 + n1, 1 + n2, -1 + n3, 1, 0, 1, 1, 0, n9, 1, 1, 0, 2, 1]/
    (-1 + n1) + j[p4a, -1 + n1, 1 + n2, -1 + n3, 1, 0, 1, 1, 1, n9, 0, 2, 0, 
     1, 1]/(1 - n1) + ((8 - 2*d + n1 + 2*n2)*j[p4a, -1 + n1, 1 + n2, -1 + n3, 
      1, 0, 1, 1, 1, n9, 1, 1, 0, 1, 1])/(-1 + n1) + 
   j[p4a, -1 + n1, 1 + n2, -1 + n3, 2, 0, 0, 1, 1, n9, 1, 1, 0, 1, 1]/
    (1 - n1) + j[p4a, -1 + n1, 1 + n2, -1 + n3, 2, 0, 1, 1, 0, n9, 1, 1, 0, 
     1, 1]/(-1 + n1) + j[p4a, -1 + n1, 1 + n2, n3, 1, 0, 1, 0, 1, n9, 1, 1, 
     -1, 2, 1]/(1 - n1) + ((1 + n3)*j[p4a, -1 + n1, 1 + n2, n3, 1, 0, 1, 0, 
      1, n9, 1, 1, 0, 1, 1])/(-1 + n1) + 
   j[p4a, -1 + n1, 1 + n2, n3, 1, 0, 1, 0, 1, n9, 1, 2, -1, 1, 1]/(1 - n1) + 
   ((-1 + 2*n3)*j[p4a, -1 + n1, 1 + n2, n3, 1, 0, 1, 1, 0, n9, 1, 1, 0, 1, 
      1])/(-1 + n1) + j[p4a, -1 + n1, 1 + n2, n3, 1, 0, 1, 1, 1, n9, 0, 2, 
     -1, 1, 1]/(-1 + n1) + ((-4 + d - n2 - n3)*j[p4a, -1 + n1, 1 + n2, n3, 1, 
      0, 1, 1, 1, n9, 1, 1, -1, 1, 1])/(-1 + n1) + 
   (n3*j[p4a, -1 + n1, 1 + n2, n3, 1, 0, 1, 1, 1, n9, 1, 1, 0, 0, 1])/
    (-1 + n1) + ((-1 - n2)*j[p4a, -1 + n1, 2 + n2, n3, 1, 0, 1, 0, 1, n9, 1, 
      1, -1, 1, 1])/(-1 + n1) + 
   ((1 + n2)*j[p4a, -1 + n1, 2 + n2, n3, 1, 0, 1, 1, 0, n9, 1, 1, -1, 1, 1])/
    (-1 + n1) + j[p4a, n1, n2, -1 + n3, 1, 0, 1, 1, 1, n9, 1, 1, 0, 1, 1] - 
   j[p4a, n1, 1 + n2, -1 + n3, 1, 0, 1, 1, 1, n9, 0, 1, 0, 1, 1] + 
   j[p4a, n1, 1 + n2, n3, 1, 0, 1, 1, 0, n9, 1, 1, -1, 1, 1] + 
   j[p4a, n1, 1 + n2, n3, 1, 0, 1, 1, 1, n9, 0, 1, -1, 1, 1] - 
   j[p4a, n1, 1 + n2, n3, 1, 0, 1, 1, 1, n9, 1, 0, -1, 1, 1], 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n10 == 1 && n11 == 1 && n12 == 0 && 
    n13 == 1 && n14 == 1 && n4 == 1 && n5 == 0 && n6 == 1 && n7 == 1 && 
    n8 == 1 &&  !(n2 == 0 || n9 == 0) -> 
  ((-6 + 2*d - n1 - n2 + 4*n3 - 2*d*n3 + n1*n3 + n2*n3 + 2*n3^2 + n9 - n3*n9)*
     j[p4a, -2 + n1, 1 + n2, n3, 1, 0, 1, 1, 1, 1 + n9, 1, 1, 0, 1, 1])/
    ((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) - 
   ((1 + n2)*(6 - 2*d + n1 + n2 + 2*n3)*j[p4a, -2 + n1, 2 + n2, -1 + n3, 1, 
      0, 1, 1, 1, 1 + n9, 1, 1, 0, 1, 1])/
    ((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) - 
   j[p4a, -1 + n1, 1 + n2, -1 + n3, 0, 0, 1, 1, 2, n9, 1, 1, 0, 1, 2]/
    ((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) - 
   (n9*j[p4a, -1 + n1, 1 + n2, -1 + n3, 0, 0, 1, 1, 2, 1 + n9, 1, 1, 0, 1, 
      1])/((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) + 
   j[p4a, -1 + n1, 1 + n2, -1 + n3, 0, 0, 2, 1, 1, n9, 1, 1, 0, 2, 1]/
    ((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) + 
   j[p4a, -1 + n1, 1 + n2, -1 + n3, 1, 0, 0, 1, 2, n9, 1, 1, 0, 1, 2]/
    ((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) + 
   (n9*j[p4a, -1 + n1, 1 + n2, -1 + n3, 1, 0, 0, 1, 2, 1 + n9, 1, 1, 0, 1, 
      1])/((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) - 
   j[p4a, -1 + n1, 1 + n2, -1 + n3, 1, 0, 1, 0, 1, n9, 1, 2, 0, 1, 2]/
    ((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) + 
   j[p4a, -1 + n1, 1 + n2, -1 + n3, 1, 0, 1, 0, 1, n9, 2, 1, 0, 2, 1]/
    ((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) - 
   (n9*j[p4a, -1 + n1, 1 + n2, -1 + n3, 1, 0, 1, 0, 1, 1 + n9, 1, 2, 0, 1, 
      1])/((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) + 
   j[p4a, -1 + n1, 1 + n2, -1 + n3, 1, 0, 1, 1, 1, n9, 0, 2, 0, 1, 2]/
    ((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) - 
   j[p4a, -1 + n1, 1 + n2, -1 + n3, 1, 0, 1, 1, 1, n9, 2, 0, 0, 2, 1]/
    ((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) + 
   (n9*j[p4a, -1 + n1, 1 + n2, -1 + n3, 1, 0, 1, 1, 1, 1 + n9, 0, 2, 0, 1, 
      1])/((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) + 
   ((54 - 30*d + 4*d^2 + 9*n1 - 2*d*n1 + 15*n2 - 4*d*n2 + n1*n2 + n2^2 + 
      24*n3 - 6*d*n3 + n1*n3 + 3*n2*n3 + 2*n3^2 + 13*n9 - 4*d*n9 + 2*n1*n9 + 
      2*n2*n9 + 3*n3*n9)*j[p4a, -1 + n1, 1 + n2, -1 + n3, 1, 0, 1, 1, 1, 
      1 + n9, 1, 1, 0, 1, 1])/((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) + 
   ((-6 + 2*d - n1 - n2 - 2*n3)*j[p4a, -1 + n1, 1 + n2, -1 + n3, 1, 0, 1, 1, 
      1, 1 + n9, 1, 1, 0, 1, 2])/((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - 
      n9)) + (n9*j[p4a, -1 + n1, 1 + n2, -1 + n3, 1, 0, 1, 1, 1, 1 + n9, 1, 
      1, 0, 2, 0])/((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) - 
   (n9*j[p4a, -1 + n1, 1 + n2, -1 + n3, 1, 0, 1, 1, 1, 1 + n9, 1, 1, 0, 2, 
      1])/((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) + 
   ((6 - 2*d + n1 + n2 + 2*n3 - n9)*j[p4a, -1 + n1, 1 + n2, -1 + n3, 1, 0, 1, 
      2, 1, 1 + n9, 0, 1, 0, 1, 1])/((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - 
      n9)) + ((-6 + 2*d - n1 - n2 - 2*n3 + n9)*j[p4a, -1 + n1, 1 + n2, 
      -1 + n3, 1, 0, 1, 2, 1, 1 + n9, 1, 0, 0, 1, 1])/
    ((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) - 
   j[p4a, -1 + n1, 1 + n2, -1 + n3, 1, 0, 2, 1, 0, n9, 1, 1, 0, 2, 1]/
    ((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) + 
   ((6 - 2*d + n1 + n2 + 2*n3 - n9)*j[p4a, -1 + n1, 1 + n2, -1 + n3, 2, 0, 0, 
      1, 1, 1 + n9, 1, 1, 0, 1, 1])/((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - 
      n9)) + ((-6 + 2*d - n1 - n2 - 2*n3 + n9)*j[p4a, -1 + n1, 1 + n2, 
      -1 + n3, 2, 0, 1, 1, 0, 1 + n9, 1, 1, 0, 1, 1])/
    ((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) + 
   ((-1 + n3)*j[p4a, -1 + n1, 1 + n2, n3, 0, 0, 2, 1, 1, n9, 1, 1, 0, 1, 1])/
    ((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) + 
   j[p4a, -1 + n1, 1 + n2, n3, 1, 0, 1, 0, 1, n9, 1, 1, 0, 2, 1]/(1 - n1) + 
   ((9 - 2*d - n1 + n2 + n3 + n9)*j[p4a, -1 + n1, 1 + n2, n3, 1, 0, 1, 0, 1, 
      n9, 1, 2, 0, 1, 1])/((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) + 
   ((6 - 2*d + n1 + n2 - 4*n3 + 2*d*n3 - n1*n3 - n2*n3 - 2*n3^2 - n9 + n3*n9)*
     j[p4a, -1 + n1, 1 + n2, n3, 1, 0, 1, 1, 0, 1 + n9, 1, 1, 0, 1, 1])/
    ((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) + 
   ((-9 + 2*d + n1 - n2 - n3 - n9)*j[p4a, -1 + n1, 1 + n2, n3, 1, 0, 1, 1, 1, 
      n9, 0, 2, 0, 1, 1])/((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) + 
   ((40 - 18*d + 2*d^2 - 4*n1 + d*n1 + 14*n2 - 3*d*n2 - n1*n2 + n2^2 + 
      10*n3 - 2*d*n3 - n1*n3 + n2*n3 + 4*n9 - d*n9 + n2*n9 + n3*n9)*
     j[p4a, -1 + n1, 1 + n2, n3, 1, 0, 1, 1, 1, n9, 1, 1, 0, 1, 1])/
    ((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) + 
   ((-6 + 2*d - n1 - n2 + 4*n3 - 2*d*n3 + n1*n3 + n2*n3 + 2*n3^2 + n9 - 
      n3*n9)*j[p4a, -1 + n1, 1 + n2, n3, 1, 0, 1, 1, 1, 1 + n9, 0, 1, 0, 1, 
      1])/((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) + 
   ((6 - 2*d + n1 + n2 - 4*n3 + 2*d*n3 - n1*n3 - n2*n3 - 2*n3^2 - n9 + n3*n9)*
     j[p4a, -1 + n1, 1 + n2, n3, 1, 0, 1, 1, 1, 1 + n9, 1, 0, 0, 1, 1])/
    ((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) + 
   ((-6 + 2*d - n1 - n2 + 4*n3 - 2*d*n3 + n1*n3 + n2*n3 + 2*n3^2 + n9 - 
      n3*n9)*j[p4a, -1 + n1, 1 + n2, n3, 1, 0, 1, 1, 1, 1 + n9, 1, 1, -1, 1, 
      1])/((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) + 
   ((6 - 2*d + n1 + n2 - 4*n3 + 2*d*n3 - n1*n3 - n2*n3 - 2*n3^2 - n9 + n3*n9)*
     j[p4a, -1 + n1, 1 + n2, n3, 1, 0, 1, 1, 1, 1 + n9, 1, 1, 0, 0, 1])/
    ((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) + 
   ((-1 + n3)*n9*j[p4a, -1 + n1, 1 + n2, n3, 1, 0, 1, 1, 1, 1 + n9, 1, 1, 0, 
      1, 0])/((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) + 
   ((6 - 2*d + n1 + n2 - 4*n3 + 2*d*n3 - n1*n3 - n2*n3 - 2*n3^2)*
     j[p4a, -1 + n1, 1 + n2, n3, 1, 0, 1, 1, 1, 1 + n9, 1, 1, 0, 1, 1])/
    ((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) + 
   ((1 - n3)*j[p4a, -1 + n1, 1 + n2, n3, 1, 0, 2, 1, 0, n9, 1, 1, 0, 1, 1])/
    ((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) + 
   ((1 + n2)*j[p4a, -1 + n1, 2 + n2, -1 + n3, 0, 0, 2, 1, 1, n9, 1, 1, 0, 1, 
      1])/((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) + 
   ((1 + n2)*j[p4a, -1 + n1, 2 + n2, -1 + n3, 1, 0, 0, 1, 1, n9, 1, 1, 0, 1, 
      2])/((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) + 
   ((1 + n2)*n9*j[p4a, -1 + n1, 2 + n2, -1 + n3, 1, 0, 0, 1, 1, 1 + n9, 1, 1, 
      0, 1, 1])/((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) + 
   ((1 + n2)*j[p4a, -1 + n1, 2 + n2, -1 + n3, 1, 0, 1, 0, 1, n9, 1, 1, 0, 2, 
      1])/((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) + 
   ((1 + n2)*j[p4a, -1 + n1, 2 + n2, -1 + n3, 1, 0, 1, 0, 1, n9, 2, 1, 0, 1, 
      1])/((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) + 
   ((-1 - n2)*j[p4a, -1 + n1, 2 + n2, -1 + n3, 1, 0, 1, 1, 0, n9, 1, 1, 0, 2, 
      1])/((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) + 
   ((-1 - n2)*j[p4a, -1 + n1, 2 + n2, -1 + n3, 1, 0, 1, 1, 1, n9, 1, 1, 0, 0, 
      2])/((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) + 
   ((8 - 2*d + 9*n2 - 2*d*n2 + n2^2 + n3 + n2*n3 + n9 + n2*n9)*
     j[p4a, -1 + n1, 2 + n2, -1 + n3, 1, 0, 1, 1, 1, n9, 1, 1, 0, 1, 1])/
    ((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) + 
   ((-1 - n2)*j[p4a, -1 + n1, 2 + n2, -1 + n3, 1, 0, 1, 1, 1, n9, 2, 0, 0, 1, 
      1])/((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) + 
   ((6 - 2*d + n1 + 7*n2 - 2*d*n2 + n1*n2 + n2^2 + 2*n3 + 2*n2*n3 - n9 - 
      n2*n9)*j[p4a, -1 + n1, 2 + n2, -1 + n3, 1, 0, 1, 1, 1, 1 + n9, 0, 1, 0, 
      1, 1])/((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) + 
   ((-1 - n2)*j[p4a, -1 + n1, 2 + n2, -1 + n3, 1, 0, 2, 1, 0, n9, 1, 1, 0, 1, 
      1])/((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) + 
   ((-1 - n2)*j[p4a, -1 + n1, 2 + n2, n3, 1, 0, 1, 0, 1, n9, 1, 1, 0, 1, 1])/
    (-1 + n1) + ((1 + n2)*(-9 + 2*d + n1 - n2 - n3 - n9)*
     j[p4a, -1 + n1, 2 + n2, n3, 1, 0, 1, 1, 0, n9, 1, 1, 0, 1, 1])/
    ((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) - 
   ((1 + n2)*(-1 + n3)*j[p4a, -1 + n1, 2 + n2, n3, 1, 0, 1, 1, 1, n9, 1, 1, 
      0, 0, 1])/((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) + 
   ((1 + n2)*(2 + n2)*j[p4a, -1 + n1, 3 + n2, -1 + n3, 1, 0, 1, 0, 1, n9, 1, 
      1, 0, 1, 1])/((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) - 
   ((1 + n2)*(2 + n2)*j[p4a, -1 + n1, 3 + n2, -1 + n3, 1, 0, 1, 1, 0, n9, 1, 
      1, 0, 1, 1])/((-1 + n1)*(-8 + 2*d + n1 - n2 - 2*n3 - n9)) + 
   j[p4a, n1, 1 + n2, -1 + n3, 0, 0, 2, 1, 1, n9, 1, 1, 0, 1, 1]/
    (-8 + 2*d + n1 - n2 - 2*n3 - n9) + 
   j[p4a, n1, 1 + n2, -1 + n3, 1, 0, 1, 0, 1, n9, 2, 1, 0, 1, 1]/
    (-8 + 2*d + n1 - n2 - 2*n3 - n9) + 
   j[p4a, n1, 1 + n2, -1 + n3, 1, 0, 1, 1, 1, n9, 1, 1, 0, 0, 2]/
    (8 - 2*d - n1 + n2 + 2*n3 + n9) + 
   ((-8 + 2*d - 2*n1 - n2)*j[p4a, n1, 1 + n2, -1 + n3, 1, 0, 1, 1, 1, n9, 1, 
      1, 0, 1, 1])/(-8 + 2*d + n1 - n2 - 2*n3 - n9) + 
   j[p4a, n1, 1 + n2, -1 + n3, 1, 0, 1, 1, 1, n9, 1, 1, 0, 1, 2]/
    (-8 + 2*d + n1 - n2 - 2*n3 - n9) + 
   j[p4a, n1, 1 + n2, -1 + n3, 1, 0, 1, 1, 1, n9, 1, 1, 0, 2, 1]/
    (-8 + 2*d + n1 - n2 - 2*n3 - n9) + 
   j[p4a, n1, 1 + n2, -1 + n3, 1, 0, 1, 1, 1, n9, 2, 0, 0, 1, 1]/
    (8 - 2*d - n1 + n2 + 2*n3 + n9) + j[p4a, n1, 1 + n2, -1 + n3, 1, 0, 2, 1, 
     0, n9, 1, 1, 0, 1, 1]/(8 - 2*d - n1 + n2 + 2*n3 + n9) + 
   j[p4a, n1, 1 + n2, n3, 1, 0, 1, 1, 0, n9, 1, 1, 0, 1, 1] + 
   j[p4a, n1, 1 + n2, n3, 1, 0, 1, 1, 1, n9, 0, 1, 0, 1, 1] - 
   j[p4a, n1, 1 + n2, n3, 1, 0, 1, 1, 1, n9, 1, 0, 0, 1, 1] + 
   ((-1 + n3)*j[p4a, n1, 1 + n2, n3, 1, 0, 1, 1, 1, n9, 1, 1, 0, 0, 1])/
    (8 - 2*d - n1 + n2 + 2*n3 + n9) + 
   ((1 - n3)*j[p4a, n1, 1 + n2, n3, 1, 0, 1, 1, 1, n9, 1, 1, 0, 1, 1])/
    (8 - 2*d - n1 + n2 + 2*n3 + n9) + 
   ((-1 - n2)*j[p4a, n1, 2 + n2, -1 + n3, 1, 0, 1, 0, 1, n9, 1, 1, 0, 1, 1])/
    (8 - 2*d - n1 + n2 + 2*n3 + n9) + 
   ((1 + n2)*j[p4a, n1, 2 + n2, -1 + n3, 1, 0, 1, 1, 0, n9, 1, 1, 0, 1, 1])/
    (8 - 2*d - n1 + n2 + 2*n3 + n9), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n10 == 1 && n11 == 1 && n13 == 1 && 
    n14 == 1 && n2 == 0 && n3 == 1 && n5 == 0 && n6 == 1 && n8 == 1 && 
    n9 == 0 &&  !(n12 == 0 || n7 == 1) -> 
  ((-1 - n12)*j[p4a, n1, -1, 1, n4, 0, 1, -1 + n7, 1, 0, 1, 1, 2 + n12, 1, 
      1])/(-2 + d - 2*n7) + ((-1 - n1 - n12 + n7)*j[p4a, n1, -1, 1, n4, 0, 1, 
      n7, 1, 0, 1, 1, 1 + n12, 1, 1])/(-2 + d - 2*n7) - 
   (n1*j[p4a, n1, -1, 2, n4, 0, 1, -1 + n7, 1, 0, 1, 1, 1 + n12, 1, 1])/
    ((-2 + d - 2*n7)*(-1 + n7)) + j[p4a, n1, 0, 0, n4, 0, 1, -1 + n7, 1, 0, 
     1, 1, 1 + n12, 2, 1]/(2 - d + 2*n7) + 
   ((-1 - n12)*j[p4a, n1, 0, 0, n4, 0, 1, -1 + n7, 1, 0, 1, 1, 2 + n12, 1, 
      1])/(-2 + d - 2*n7) + j[p4a, n1, 0, 0, n4, 0, 1, n7, 1, 0, 1, 1, n12, 
     2, 1]/(2 - d + 2*n7) + ((-1 - n1 - n12 + n7)*j[p4a, n1, 0, 0, n4, 0, 1, 
      n7, 1, 0, 1, 1, 1 + n12, 1, 1])/(-2 + d - 2*n7) + 
   j[p4a, n1, 0, 1, n4, 0, 1, -2 + n7, 1, 0, 1, 1, 1 + n12, 2, 1]/
    (-2 + d - 2*n7) + (2*(1 + n12)*j[p4a, n1, 0, 1, n4, 0, 1, -2 + n7, 1, 0, 
      1, 1, 2 + n12, 1, 1])/(-2 + d - 2*n7) + 
   j[p4a, n1, 0, 1, n4, 0, 1, -2 + n7, 1, 0, 1, 2, 1 + n12, 1, 1]/
    (-2 + d - 2*n7) + j[p4a, n1, 0, 1, n4, 0, 1, -1 + n7, 0, 0, 1, 1, 
     1 + n12, 2, 1]/(-2 + d - 2*n7) + 
   ((1 + n12)*j[p4a, n1, 0, 1, n4, 0, 1, -1 + n7, 0, 0, 1, 1, 2 + n12, 1, 1])/
    (-2 + d - 2*n7) + j[p4a, n1, 0, 1, n4, 0, 1, -1 + n7, 1, 0, 0, 2, 
     1 + n12, 1, 1]/(2 - d + 2*n7) + 
   ((2 + 5*n1 - 2*d*n1 + n1^2 + 2*n1*n12 + n1*n4 - 2*n7 + 2*n1*n7)*
     j[p4a, n1, 0, 1, n4, 0, 1, -1 + n7, 1, 0, 1, 1, 1 + n12, 1, 1])/
    ((-2 + d - 2*n7)*(-1 + n7)) + 
   ((1 + n12)*j[p4a, n1, 0, 1, n4, 0, 1, -1 + n7, 1, 0, 1, 1, 2 + n12, 0, 1])/
    (-2 + d - 2*n7) + ((-1 - n1 + n7)*j[p4a, n1, 0, 1, n4, 0, 1, -1 + n7, 1, 
      0, 1, 2, 1 + n12, 1, 1])/((-2 + d - 2*n7)*(-1 + n7)) + 
   ((1 + n1 + n12 - n7)*j[p4a, n1, 0, 1, n4, 0, 1, n7, 0, 0, 1, 1, 1 + n12, 
      1, 1])/(-2 + d - 2*n7) + j[p4a, n1, 0, 1, n4, 0, 1, n7, 1, 0, 0, 2, 
     n12, 1, 1]/(2 - d + 2*n7) + 
   ((1 + n1 + n12 - n7)*j[p4a, n1, 0, 1, n4, 0, 1, n7, 1, 0, 1, 1, 1 + n12, 
      0, 1])/(-2 + d - 2*n7) - 
   (n1*n4*j[p4a, n1, 0, 1, 1 + n4, 0, 0, -1 + n7, 1, 0, 1, 1, 1 + n12, 1, 1])/
    ((-2 + d - 2*n7)*(-1 + n7)) + 
   (n1*n4*j[p4a, n1, 0, 1, 1 + n4, 0, 1, -1 + n7, 0, 0, 1, 1, 1 + n12, 1, 1])/
    ((-2 + d - 2*n7)*(-1 + n7)) + 
   (n1*j[p4a, n1, 0, 2, n4, 0, 1, -2 + n7, 1, 0, 1, 1, 1 + n12, 1, 1])/
    ((-2 + d - 2*n7)*(-1 + n7)) + 
   (2*n1*j[p4a, n1, 0, 2, n4, 0, 1, -1 + n7, 0, 0, 1, 1, 1 + n12, 1, 1])/
    ((-2 + d - 2*n7)*(-1 + n7)) - 
   (n1*j[p4a, n1, 0, 2, n4, 0, 1, -1 + n7, 1, 0, 1, 1, n12, 1, 1])/
    ((-2 + d - 2*n7)*(-1 + n7)) + 
   (n1*j[p4a, n1, 0, 2, n4, 0, 1, -1 + n7, 1, 0, 1, 1, 1 + n12, 0, 1])/
    ((-2 + d - 2*n7)*(-1 + n7)) + 
   (n1*j[p4a, 1 + n1, -1, 1, n4, 0, 1, -1 + n7, 1, 0, 1, 1, 1 + n12, 1, 1])/
    (-2 + d - 2*n7) - (n1*j[p4a, 1 + n1, -1, 2, n4, 0, 1, -1 + n7, 1, 0, 1, 
      1, n12, 1, 1])/((-2 + d - 2*n7)*(-1 + n7)) + 
   (n1*n12*j[p4a, 1 + n1, 0, 1, n4, 0, 1, -1 + n7, 0, 0, 1, 1, 1 + n12, 1, 
      1])/((-2 + d - 2*n7)*(-1 + n7)) + 
   (n1*j[p4a, 1 + n1, 0, 1, n4, 0, 1, -1 + n7, 0, 0, 1, 2, n12, 1, 1])/
    ((-2 + d - 2*n7)*(-1 + n7)) - 
   (n1*j[p4a, 1 + n1, 0, 1, n4, 0, 1, -1 + n7, 1, 0, 0, 1, 1 + n12, 1, 1])/
    (-2 + d - 2*n7) - (n1*(-2 + d - n12 - n4 - n7)*j[p4a, 1 + n1, 0, 1, n4, 
      0, 1, -1 + n7, 1, 0, 1, 1, n12, 1, 1])/((-2 + d - 2*n7)*(-1 + n7)) + 
   (n1*(1 + n1 - n12 - n7)*j[p4a, 1 + n1, 0, 1, n4, 0, 1, -1 + n7, 1, 0, 1, 
      1, 1 + n12, 0, 1])/((-2 + d - 2*n7)*(-1 + n7)) + 
   ((-n1 - n1^2 + n1*n7)*j[p4a, 1 + n1, 0, 1, n4, 0, 1, -1 + n7, 1, 0, 1, 1, 
      1 + n12, 1, 1])/((-2 + d - 2*n7)*(-1 + n7)) - 
   (n1*j[p4a, 1 + n1, 0, 1, n4, 0, 1, n7, 1, 0, 0, 1, n12, 1, 1])/
    (-2 + d - 2*n7) + (n1*j[p4a, 1 + n1, 0, 1, n4, 0, 1, n7, 1, 0, 1, 0, n12, 
      1, 1])/(-2 + d - 2*n7) - 
   (n1*n4*j[p4a, 1 + n1, 0, 1, 1 + n4, 0, 0, -1 + n7, 1, 0, 1, 1, n12, 1, 1])/
    ((-2 + d - 2*n7)*(-1 + n7)) + 
   (n1*n4*j[p4a, 1 + n1, 0, 1, 1 + n4, 0, 1, -1 + n7, 0, 0, 1, 1, n12, 1, 1])/
    ((-2 + d - 2*n7)*(-1 + n7)) + 
   (n1*j[p4a, 1 + n1, 0, 2, n4, 0, 1, -2 + n7, 1, 0, 1, 1, n12, 1, 1])/
    ((-2 + d - 2*n7)*(-1 + n7)) + 
   (2*n1*j[p4a, 1 + n1, 0, 2, n4, 0, 1, -1 + n7, 0, 0, 1, 1, n12, 1, 1])/
    ((-2 + d - 2*n7)*(-1 + n7)) - 
   (n1*j[p4a, 1 + n1, 0, 2, n4, 0, 1, -1 + n7, 1, 0, 1, 1, -1 + n12, 1, 1])/
    ((-2 + d - 2*n7)*(-1 + n7)) + 
   (n1*j[p4a, 1 + n1, 0, 2, n4, 0, 1, -1 + n7, 1, 0, 1, 1, n12, 0, 1])/
    ((-2 + d - 2*n7)*(-1 + n7)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n10 == 1 && n11 == 1 && n13 == 1 && 
    n14 == 1 && n3 == 1 && n5 == 0 && n6 == 1 && n7 == 1 && n8 == 1 && 
    n9 == 0 && n2 != 0 -> 
  (n12*j[p4a, -1 + n1, n2, 1, n4, 0, 1, 1, 1, 0, 1, 1, 1 + n12, 1, 1])/
    (-1 + n1) + j[p4a, -1 + n1, 1 + n2, 0, n4, 0, 1, 1, 1, 0, 1, 1, n12, 2, 
     1]/(-1 + n1) + (n12*j[p4a, -1 + n1, 1 + n2, 0, n4, 0, 1, 1, 1, 0, 1, 1, 
      1 + n12, 1, 1])/(-1 + n1) + j[p4a, -1 + n1, 1 + n2, 1, n4, 0, 1, 0, 1, 
     0, 1, 1, n12, 2, 1]/(1 - n1) - 
   (2*n12*j[p4a, -1 + n1, 1 + n2, 1, n4, 0, 1, 0, 1, 0, 1, 1, 1 + n12, 1, 1])/
    (-1 + n1) + j[p4a, -1 + n1, 1 + n2, 1, n4, 0, 1, 0, 1, 0, 1, 2, n12, 1, 
     1]/(1 - n1) - (n12*j[p4a, -1 + n1, 1 + n2, 1, n4, 0, 1, 1, 0, 0, 1, 1, 
      1 + n12, 1, 1])/(-1 + n1) + j[p4a, -1 + n1, 1 + n2, 1, n4, 0, 1, 1, 1, 
     0, 0, 2, n12, 1, 1]/(-1 + n1) + 
   ((-5 + d - n2)*j[p4a, -1 + n1, 1 + n2, 1, n4, 0, 1, 1, 1, 0, 1, 1, n12, 1, 
      1])/(-1 + n1) - (n12*j[p4a, -1 + n1, 1 + n2, 1, n4, 0, 1, 1, 1, 0, 1, 
      1, 1 + n12, 0, 1])/(-1 + n1) + 
   ((-1 - n2)*j[p4a, -1 + n1, 2 + n2, 1, n4, 0, 1, 0, 1, 0, 1, 1, n12, 1, 1])/
    (-1 + n1) + ((1 + n2)*j[p4a, -1 + n1, 2 + n2, 1, n4, 0, 1, 1, 0, 0, 1, 1, 
      n12, 1, 1])/(-1 + n1) + j[p4a, n1, 1 + n2, 1, n4, 0, 1, 1, 0, 0, 1, 1, 
    n12, 1, 1] + j[p4a, n1, 1 + n2, 1, n4, 0, 1, 1, 1, 0, 0, 1, n12, 1, 1] - 
   j[p4a, n1, 1 + n2, 1, n4, 0, 1, 1, 1, 0, 1, 0, n12, 1, 1], 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n1 == 0 && n10 == 1 && n11 == 1 && 
    n12 == 0 && n13 == 1 && n14 == 1 && n2 == -1 && n5 == 0 && n6 == 1 && 
    n8 == 1 && n9 == 0 -> 
  ((-1 + d - 2*n7)*j[p4a, -1, -1, 1 + n3, n4, 0, 1, n7, 0, 0, 2, 1, 0, 1, 1])/
    (4 - d + 2*n3 + 4*n4 - 2*d*n4 - 4*n7 + 2*d*n7 + 4*n4*n7 - 4*n7^2) + 
   ((-6 + 3*d - 2*n3 - 2*n4 - 2*n7)*j[p4a, -1, -1, 1 + n3, n4, 0, 1, n7, 1, 
      0, 0, 2, 0, 1, 1])/(-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 4*n7 - 2*d*n7 - 
     4*n4*n7 + 4*n7^2) + ((-1 + d - 2*n7)*j[p4a, -1, -1, 1 + n3, n4, 0, 1, 
      n7, 1, 0, 2, 1, 0, 0, 1])/(4 - d + 2*n3 + 4*n4 - 2*d*n4 - 4*n7 + 
     2*d*n7 + 4*n4*n7 - 4*n7^2) + 
   ((-1 + d - 2*n7)*j[p4a, -1, -1, 1 + n3, n4, 0, 1, n7, 2, 0, 1, 1, 0, 0, 
      1])/(4 - d + 2*n3 + 4*n4 - 2*d*n4 - 4*n7 + 2*d*n7 + 4*n4*n7 - 4*n7^2) + 
   (n4*(-1 + d - 2*n7)*j[p4a, -1, -1, 1 + n3, 1 + n4, 0, 1, n7, 1, 0, 1, 1, 
      0, 1, 0])/(-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 4*n7 - 2*d*n7 - 4*n4*n7 + 
     4*n7^2) + ((-6 + 3*d - 2*n3 - 2*n4 - 2*n7)*j[p4a, -1, 0, n3, n4, 0, 1, 
      n7, 1, 0, 1, 1, 0, 1, 1])/(-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 4*n7 - 
     2*d*n7 - 4*n4*n7 + 4*n7^2) + ((4 - d + 2*n3 + 2*n4 - 2*n7)*
     j[p4a, -1, 0, 1 + n3, n4, 0, 1, n7, 0, 0, 1, 1, 0, 1, 1])/
    (-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 4*n7 - 2*d*n7 - 4*n4*n7 + 4*n7^2) - 
   (2*(-1 + d - 2*n7)*j[p4a, -1, 0, 1 + n3, n4, 0, 1, n7, 1, 0, 1, 1, 0, 0, 
      1])/(4 - d + 2*n3 + 4*n4 - 2*d*n4 - 4*n7 + 2*d*n7 + 4*n4*n7 - 4*n7^2) + 
   ((1 - d + 2*n7)*j[p4a, 0, -2, 1 + n3, n4, 0, 1, n7, 0, 0, 2, 1, 0, 1, 1])/
    (4 - d + 2*n3 + 4*n4 - 2*d*n4 - 4*n7 + 2*d*n7 + 4*n4*n7 - 4*n7^2) + 
   ((1 - d + 2*n7)*j[p4a, 0, -2, 1 + n3, n4, 0, 1, n7, 1, 0, 2, 0, 0, 1, 1])/
    (4 - d + 2*n3 + 4*n4 - 2*d*n4 - 4*n7 + 2*d*n7 + 4*n4*n7 - 4*n7^2) + 
   ((1 - d + 2*n7)*j[p4a, 0, -2, 1 + n3, n4, 0, 1, n7, 1, 0, 2, 1, 0, 0, 1])/
    (4 - d + 2*n3 + 4*n4 - 2*d*n4 - 4*n7 + 2*d*n7 + 4*n4*n7 - 4*n7^2) + 
   ((1 - d + 2*n7)*j[p4a, 0, -2, 1 + n3, n4, 0, 1, n7, 2, 0, 1, 0, 0, 1, 1])/
    (4 - d + 2*n3 + 4*n4 - 2*d*n4 - 4*n7 + 2*d*n7 + 4*n4*n7 - 4*n7^2) + 
   ((1 - d + 2*n7)*j[p4a, 0, -2, 1 + n3, n4, 0, 1, n7, 2, 0, 1, 1, 0, 0, 1])/
    (4 - d + 2*n3 + 4*n4 - 2*d*n4 - 4*n7 + 2*d*n7 + 4*n4*n7 - 4*n7^2) - 
   (n7*(1 - d + 2*n7)*j[p4a, 0, -2, 1 + n3, n4, 0, 1, 1 + n7, 1, 0, 1, 1, 0, 
      0, 1])/(-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 4*n7 - 2*d*n7 - 4*n4*n7 + 
     4*n7^2) + (2*(-1 + d - 2*n7)*(-3 + d - n3 - n7)*
     j[p4a, 0, -2, 1 + n3, n4, 0, 2, n7, 0, 0, 1, 1, 0, 1, 1])/
    ((-2 + d - 2*n4)*(-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 4*n7 - 2*d*n7 - 
      4*n4*n7 + 4*n7^2)) + ((1 - d + 2*n7)*j[p4a, 0, -2, 1 + n3, n4, 0, 2, 
      n7, 1, 0, 0, 1, 0, 1, 1])/(4 - d + 2*n3 + 4*n4 - 2*d*n4 - 4*n7 + 
     2*d*n7 + 4*n4*n7 - 4*n7^2) - 
   (n4*(-1 + d - 2*n7)*j[p4a, 0, -2, 1 + n3, 1 + n4, 0, 1, n7, 1, 0, 1, 1, 0, 
      1, 0])/(-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 4*n7 - 2*d*n7 - 4*n4*n7 + 
     4*n7^2) + ((-1 + d - 2*n7)*(-4 + d - 2*n3 + 2*n4 - 2*n7)*
     j[p4a, 0, -1, n3, n4, 0, 0, n7, 1, 0, 1, 1, 0, 1, 2])/
    ((-2 + d - 2*n4)*(-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 4*n7 - 2*d*n7 - 
      4*n4*n7 + 4*n7^2)) + ((-1 + d - 2*n7)*(-4 + d - 2*n3 + 2*n4 - 2*n7)*
     j[p4a, 0, -1, n3, n4, 0, 1, n7, 0, 0, 1, 1, 0, 1, 2])/
    ((-2 + d - 2*n4)*(-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 4*n7 - 2*d*n7 - 
      4*n4*n7 + 4*n7^2)) + ((-4 + d - 2*n3 - 2*n4 + 2*n7)*
     j[p4a, 0, -1, n3, n4, 0, 1, n7, 0, 0, 1, 1, 0, 2, 1])/
    (-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 4*n7 - 2*d*n7 - 4*n4*n7 + 4*n7^2) + 
   ((-1 + d - 2*n7)*(-4 + d - 2*n3 + 2*n4 - 2*n7)*j[p4a, 0, -1, n3, n4, 0, 1, 
      n7, 1, 0, 1, 1, 0, 0, 2])/((-2 + d - 2*n4)*(-4 + d - 2*n3 - 4*n4 + 
      2*d*n4 + 4*n7 - 2*d*n7 - 4*n4*n7 + 4*n7^2)) + 
   ((1 - d + 2*n7)*j[p4a, 0, -1, n3, n4, 0, 1, n7, 1, 0, 2, 0, 0, 1, 1])/
    (4 - d + 2*n3 + 4*n4 - 2*d*n4 - 4*n7 + 2*d*n7 + 4*n4*n7 - 4*n7^2) + 
   (n7*(1 - d + 2*n7)*j[p4a, 0, -1, n3, n4, 0, 1, 1 + n7, 0, 0, 1, 1, 0, 1, 
      1])/(-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 4*n7 - 2*d*n7 - 4*n4*n7 + 
     4*n7^2) - (n7*(7 - 4*d + 2*n3 + 2*n4 + 4*n7)*j[p4a, 0, -1, n3, n4, 0, 1, 
      1 + n7, 1, 0, 0, 1, 0, 1, 1])/(-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 4*n7 - 
     2*d*n7 - 4*n4*n7 + 4*n7^2) + (n7*(7 - 4*d + 2*n3 + 2*n4 + 4*n7)*
     j[p4a, 0, -1, n3, n4, 0, 1, 1 + n7, 1, 0, 1, 0, 0, 1, 1])/
    (-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 4*n7 - 2*d*n7 - 4*n4*n7 + 4*n7^2) + 
   (2*(-1 + d - 2*n7)*(-3 + d - n3 - n7)*j[p4a, 0, -1, n3, n4, 0, 2, n7, 0, 
      0, 1, 1, 0, 1, 1])/((-2 + d - 2*n4)*(-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 
      4*n7 - 2*d*n7 - 4*n4*n7 + 4*n7^2)) + 
   ((1 - d + 2*n7)*j[p4a, 0, -1, n3, n4, 0, 2, n7, 1, 0, 0, 1, 0, 1, 1])/
    (4 - d + 2*n3 + 4*n4 - 2*d*n4 - 4*n7 + 2*d*n7 + 4*n4*n7 - 4*n7^2) + 
   (n4*(-1 + d - 2*n7)*(12 - 5*d + 2*n3 + 6*n4 + 2*n7)*
     j[p4a, 0, -1, n3, 1 + n4, 0, 0, n7, 1, 0, 1, 1, 0, 1, 1])/
    ((2 - d + 2*n4)*(-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 4*n7 - 2*d*n7 - 
      4*n4*n7 + 4*n7^2)) - (2*n4*(-1 + d - 2*n7)*(5 - 2*d + n3 + 2*n4 + n7)*
     j[p4a, 0, -1, n3, 1 + n4, 0, 1, n7, 0, 0, 1, 1, 0, 1, 1])/
    ((2 - d + 2*n4)*(-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 4*n7 - 2*d*n7 - 
      4*n4*n7 + 4*n7^2)) + (n4*(-1 + d - 2*n7)*j[p4a, 0, -1, n3, 1 + n4, 0, 
      1, n7, 1, 0, 0, 1, 0, 1, 1])/(-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 4*n7 - 
     2*d*n7 - 4*n4*n7 + 4*n7^2) - 
   (n4*(-1 + d - 2*n7)*j[p4a, 0, -1, n3, 1 + n4, 0, 1, n7, 1, 0, 1, 0, 0, 1, 
      1])/(-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 4*n7 - 2*d*n7 - 4*n4*n7 + 
     4*n7^2) - ((-1 + d - 2*n7)*(-4 + d - 2*n3 + 2*n4 - 2*n7)*
     j[p4a, 0, -1, 1 + n3, -1 + n4, 0, 0, n7, 1, 0, 1, 1, 0, 1, 2])/
    ((-2 + d - 2*n4)*(-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 4*n7 - 2*d*n7 - 
      4*n4*n7 + 4*n7^2)) - ((-1 + d - 2*n7)*(-4 + d - 2*n3 + 2*n4 - 2*n7)*
     j[p4a, 0, -1, 1 + n3, -1 + n4, 0, 1, n7, 0, 0, 1, 1, 0, 1, 2])/
    ((-2 + d - 2*n4)*(-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 4*n7 - 2*d*n7 - 
      4*n4*n7 + 4*n7^2)) - ((-1 + d - 2*n7)*(-4 + d - 2*n3 + 2*n4 - 2*n7)*
     j[p4a, 0, -1, 1 + n3, -1 + n4, 0, 1, n7, 1, 0, 1, 1, 0, 0, 2])/
    ((-2 + d - 2*n4)*(-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 4*n7 - 2*d*n7 - 
      4*n4*n7 + 4*n7^2)) + (4*(-1 + d - 2*n7)*(6 - 5*d + d^2 + 2*n3 - d*n3 + 
      3*n4 - d*n4 + n3*n4 + 2*n7 - d*n7 + n4*n7)*j[p4a, 0, -1, 1 + n3, 
      -1 + n4, 0, 1, n7, 1, 0, 1, 1, 0, 1, 1])/((-2 + d - 2*n4)*
     (-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 4*n7 - 2*d*n7 - 4*n4*n7 + 4*n7^2)) - 
   (2*(-1 + d - 2*n7)*(-3 + d - n3 - n7)*j[p4a, 0, -1, 1 + n3, -1 + n4, 0, 2, 
      n7, 0, 0, 1, 1, 0, 1, 1])/((-2 + d - 2*n4)*(-4 + d - 2*n3 - 4*n4 + 
      2*d*n4 + 4*n7 - 2*d*n7 - 4*n4*n7 + 4*n7^2)) + 
   ((1 - d + 2*n7)*j[p4a, 0, -1, 1 + n3, -1 + n4, 0, 2, n7, 1, 0, 0, 1, 0, 1, 
      1])/(4 - d + 2*n3 + 4*n4 - 2*d*n4 - 4*n7 + 2*d*n7 + 4*n4*n7 - 4*n7^2) - 
   (2*(-1 + d - 2*n7)*(-3 + d - n3 - n7)*j[p4a, 0, -1, 1 + n3, -1 + n4, 0, 2, 
      n7, 1, 0, 1, 1, 0, 0, 1])/((-2 + d - 2*n4)*(-4 + d - 2*n3 - 4*n4 + 
      2*d*n4 + 4*n7 - 2*d*n7 - 4*n4*n7 + 4*n7^2)) - 
   (2*(-1 + d - 2*n7)*(-3 + d - n3 - n7)*j[p4a, 0, -1, 1 + n3, -1 + n4, 0, 2, 
      n7, 1, 0, 1, 1, 0, 1, 0])/((-2 + d - 2*n4)*(-4 + d - 2*n3 - 4*n4 + 
      2*d*n4 + 4*n7 - 2*d*n7 - 4*n4*n7 + 4*n7^2)) - 
   ((-1 + d - 2*n7)*(4 - d + 2*n3 - 6*n4 + d*n4 - 2*n3*n4 + 2*n4^2 + 2*n7 - 
      2*n4*n7)*j[p4a, 0, -1, 1 + n3, n4, 0, 0, n7, 1, 0, 1, 1, 0, 1, 1])/
    ((-2 + d - 2*n4)*(-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 4*n7 - 2*d*n7 - 
      4*n4*n7 + 4*n7^2)) + ((4 - d + 2*n3 + 2*n4 - 2*n7)*
     j[p4a, 0, -1, 1 + n3, n4, 0, 1, -1 + n7, 0, 0, 1, 1, 0, 2, 1])/
    (-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 4*n7 - 2*d*n7 - 4*n4*n7 + 4*n7^2) + 
   ((6 - 3*d + 2*n3 + 2*n4 + 2*n7)*j[p4a, 0, -1, 1 + n3, n4, 0, 1, -1 + n7, 
      0, 0, 1, 2, 0, 1, 1])/(-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 4*n7 - 2*d*n7 - 
     4*n4*n7 + 4*n7^2) + ((-1 + d - 2*n7)*j[p4a, 0, -1, 1 + n3, n4, 0, 1, 
      -1 + n7, 0, 0, 2, 1, 0, 1, 1])/(4 - d + 2*n3 + 4*n4 - 2*d*n4 - 4*n7 + 
     2*d*n7 + 4*n4*n7 - 4*n7^2) - 
   (2*(9 - 8*d + 2*d^2 + 4*n3 - 2*d*n3 + 4*n4 - 2*d*n4 + 3*n7 - 2*d*n7 + 
      2*n3*n7 + 2*n4*n7)*j[p4a, 0, -1, 1 + n3, n4, 0, 1, -1 + n7, 1, 0, 1, 1, 
      0, 1, 1])/(-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 4*n7 - 2*d*n7 - 4*n4*n7 + 
     4*n7^2) + ((-1 + d - 2*n7)*j[p4a, 0, -1, 1 + n3, n4, 0, 1, -1 + n7, 1, 
      0, 2, 0, 0, 1, 1])/(4 - d + 2*n3 + 4*n4 - 2*d*n4 - 4*n7 + 2*d*n7 + 
     4*n4*n7 - 4*n7^2) + ((-1 + d - 2*n7)*j[p4a, 0, -1, 1 + n3, n4, 0, 1, 
      -1 + n7, 1, 0, 2, 1, 0, 0, 1])/(4 - d + 2*n3 + 4*n4 - 2*d*n4 - 4*n7 + 
     2*d*n7 + 4*n4*n7 - 4*n7^2) + 
   ((-1 + d - 2*n7)*j[p4a, 0, -1, 1 + n3, n4, 0, 1, -1 + n7, 2, 0, 1, 0, 0, 
      1, 1])/(4 - d + 2*n3 + 4*n4 - 2*d*n4 - 4*n7 + 2*d*n7 + 4*n4*n7 - 
     4*n7^2) + ((-1 + d - 2*n7)*j[p4a, 0, -1, 1 + n3, n4, 0, 1, -1 + n7, 2, 
      0, 1, 1, 0, 0, 1])/(4 - d + 2*n3 + 4*n4 - 2*d*n4 - 4*n7 + 2*d*n7 + 
     4*n4*n7 - 4*n7^2) + ((-1 + d - 2*n7)*(16 - 7*d + 14*n3 - 6*d*n3 + 4*n4 + 
      2*d*n4 + 10*n3*n4 + 4*n7 - d*n7)*j[p4a, 0, -1, 1 + n3, n4, 0, 1, n7, 0, 
      0, 1, 1, 0, 1, 1])/((-2 + d - 2*n4)*(-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 
      4*n7 - 2*d*n7 - 4*n4*n7 + 4*n7^2)) + 
   ((1 - d + 2*n7)*j[p4a, 0, -1, 1 + n3, n4, 0, 1, n7, 0, 0, 1, 2, -1, 1, 1])/
    (4 - d + 2*n3 + 4*n4 - 2*d*n4 - 4*n7 + 2*d*n7 + 4*n4*n7 - 4*n7^2) + 
   ((-1 + d - 2*n7)*j[p4a, 0, -1, 1 + n3, n4, 0, 1, n7, 0, 0, 1, 2, 0, 1, 1])/
    (4 - d + 2*n3 + 4*n4 - 2*d*n4 - 4*n7 + 2*d*n7 + 4*n4*n7 - 4*n7^2) + 
   ((2 - 2*d - 2*n3 + 2*d*n3 - n4 + d*n4 + 9*n7 - 2*d*n7 - 2*n3*n7)*
     j[p4a, 0, -1, 1 + n3, n4, 0, 1, n7, 1, 0, 0, 1, 0, 1, 1])/
    (-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 4*n7 - 2*d*n7 - 4*n4*n7 + 4*n7^2) + 
   ((-5 + 2*d - 2*n3 - 2*n4)*j[p4a, 0, -1, 1 + n3, n4, 0, 1, n7, 1, 0, 0, 2, 
      -1, 1, 1])/(-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 4*n7 - 2*d*n7 - 4*n4*n7 + 
     4*n7^2) + ((5 - 2*d + 2*n3 + 2*n4)*j[p4a, 0, -1, 1 + n3, n4, 0, 1, n7, 
      1, 0, 0, 2, 0, 1, 1])/(-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 4*n7 - 2*d*n7 - 
     4*n4*n7 + 4*n7^2) + ((1 - d + 2*n3 - 2*d*n3 + n4 - d*n4 - 3*n7 + 
      2*d*n7 + 2*n3*n7)*j[p4a, 0, -1, 1 + n3, n4, 0, 1, n7, 1, 0, 1, 0, 0, 1, 
      1])/(-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 4*n7 - 2*d*n7 - 4*n4*n7 + 
     4*n7^2) + ((6 - 6*d + 4*n3 - 4*d*n3 + 8*n7 + d*n7 + 6*n3*n7 - 2*n4*n7 + 
      2*n7^2)*j[p4a, 0, -1, 1 + n3, n4, 0, 1, n7, 1, 0, 1, 1, 0, 0, 1])/
    (-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 4*n7 - 2*d*n7 - 4*n4*n7 + 4*n7^2) - 
   ((-1 + d - 2*n7)*(8 - 3*d + 2*n3 - 4*n4 + 2*d*n4 - 2*n3*n4 + 2*n7 - 
      2*n4*n7)*j[p4a, 0, -1, 1 + n3, n4, 0, 1, n7, 1, 0, 1, 1, 0, 1, 0])/
    ((-2 + d - 2*n4)*(-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 4*n7 - 2*d*n7 - 
      4*n4*n7 + 4*n7^2)) + ((1 - d + 2*n7)*j[p4a, 0, -1, 1 + n3, n4, 0, 1, 
      n7, 1, 0, 2, 0, -1, 1, 1])/(4 - d + 2*n3 + 4*n4 - 2*d*n4 - 4*n7 + 
     2*d*n7 + 4*n4*n7 - 4*n7^2) + 
   ((-1 + d - 2*n7)*j[p4a, 0, -1, 1 + n3, n4, 0, 1, n7, 1, 0, 2, 0, 0, 1, 1])/
    (4 - d + 2*n3 + 4*n4 - 2*d*n4 - 4*n7 + 2*d*n7 + 4*n4*n7 - 4*n7^2) + 
   ((1 - d + 2*n7)*j[p4a, 0, -1, 1 + n3, n4, 0, 1, n7, 2, 0, 1, 0, -1, 1, 1])/
    (4 - d + 2*n3 + 4*n4 - 2*d*n4 - 4*n7 + 2*d*n7 + 4*n4*n7 - 4*n7^2) - 
   (2*(-1 + d - 2*n7)*(-3 + d - n3 - n7)*j[p4a, 0, -1, 1 + n3, n4, 0, 2, 
      -1 + n7, 0, 0, 1, 1, 0, 1, 1])/((-2 + d - 2*n4)*
     (-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 4*n7 - 2*d*n7 - 4*n4*n7 + 4*n7^2)) + 
   ((-1 + d - 2*n7)*j[p4a, 0, -1, 1 + n3, n4, 0, 2, -1 + n7, 1, 0, 0, 1, 0, 
      1, 1])/(4 - d + 2*n3 + 4*n4 - 2*d*n4 - 4*n7 + 2*d*n7 + 4*n4*n7 - 
     4*n7^2) + (2*(-1 + d - 2*n7)*j[p4a, 0, -1, 1 + n3, n4, 0, 2, n7, 0, -1, 
      1, 1, 0, 1, 1])/(4 - d + 2*n3 + 4*n4 - 2*d*n4 - 4*n7 + 2*d*n7 + 
     4*n4*n7 - 4*n7^2) + (2*(-1 + d - 2*n7)*(-3 + d - n3 - n7)*
     j[p4a, 0, -1, 1 + n3, n4, 0, 2, n7, 0, 0, 1, 1, -1, 1, 1])/
    ((-2 + d - 2*n4)*(-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 4*n7 - 2*d*n7 - 
      4*n4*n7 + 4*n7^2)) + ((-1 + d - 2*n7)*j[p4a, 0, -1, 1 + n3, n4, 0, 2, 
      n7, 1, -1, 1, 1, 0, 0, 1])/(4 - d + 2*n3 + 4*n4 - 2*d*n4 - 4*n7 + 
     2*d*n7 + 4*n4*n7 - 4*n7^2) + 
   ((-1 + d - 2*n7)*j[p4a, 0, -1, 1 + n3, n4, 0, 2, n7, 1, -1, 1, 1, 0, 1, 
      0])/(4 - d + 2*n3 + 4*n4 - 2*d*n4 - 4*n7 + 2*d*n7 + 4*n4*n7 - 4*n7^2) + 
   ((1 - d + 2*n7)*j[p4a, 0, -1, 1 + n3, n4, 0, 2, n7, 1, 0, 0, 1, -1, 1, 1])/
    (4 - d + 2*n3 + 4*n4 - 2*d*n4 - 4*n7 + 2*d*n7 + 4*n4*n7 - 4*n7^2) + 
   (n4*(-1 + d - 2*n7)*j[p4a, 0, -1, 1 + n3, 1 + n4, 0, 1, -1 + n7, 1, 0, 1, 
      1, 0, 1, 0])/(-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 4*n7 - 2*d*n7 - 4*n4*n7 + 
     4*n7^2) - (n4*(-1 + d - 2*n7)*j[p4a, 0, -1, 1 + n3, 1 + n4, 0, 1, n7, 1, 
      -1, 1, 1, 0, 1, 0])/(-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 4*n7 - 2*d*n7 - 
     4*n4*n7 + 4*n7^2) + (2*(-4 + d - 2*n3 - 2*n4 + 2*n7)*
     j[p4a, 0, 0, n3, n4, 0, 1, -1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    (-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 4*n7 - 2*d*n7 - 4*n4*n7 + 4*n7^2) + 
   ((5 - 2*d + 2*n3 + 2*n4)*j[p4a, 0, 0, n3, n4, 0, 1, n7, 0, 0, 1, 1, 0, 1, 
      1])/(-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 4*n7 - 2*d*n7 - 4*n4*n7 + 
     4*n7^2) + ((7 - 4*d + 2*n3 + 2*n4 + 4*n7)*j[p4a, 0, 0, n3, n4, 0, 1, n7, 
      1, 0, 0, 1, 0, 1, 1])/(-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 4*n7 - 2*d*n7 - 
     4*n4*n7 + 4*n7^2) - (2*(-4 + d - 2*n3 - 2*n4 + 2*n7)*
     j[p4a, 0, 0, 1 + n3, n4, 0, 1, -2 + n7, 1, 0, 1, 1, 0, 1, 1])/
    (-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 4*n7 - 2*d*n7 - 4*n4*n7 + 4*n7^2) - 
   (2*(-1 + d - 2*n7)*j[p4a, 0, 0, 1 + n3, n4, 0, 1, -1 + n7, 0, 0, 1, 1, 0, 
      1, 1])/(4 - d + 2*n3 + 4*n4 - 2*d*n4 - 4*n7 + 2*d*n7 + 4*n4*n7 - 
     4*n7^2) + ((-6 + 3*d - 2*n3 - 2*n4 - 2*n7)*j[p4a, 0, 0, 1 + n3, n4, 0, 
      1, -1 + n7, 1, 0, 0, 1, 0, 1, 1])/(-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 
     4*n7 - 2*d*n7 - 4*n4*n7 + 4*n7^2) + 
   (2*(-4 + d - 2*n3 - 2*n4 + 2*n7)*j[p4a, 0, 0, 1 + n3, n4, 0, 1, -1 + n7, 
      1, 0, 1, 1, -1, 1, 1])/(-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 4*n7 - 2*d*n7 - 
     4*n4*n7 + 4*n7^2) - (2*(3 + 2*n3 + 2*n4 - 4*n7)*
     j[p4a, 0, 0, 1 + n3, n4, 0, 1, -1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    (4 - d + 2*n3 + 4*n4 - 2*d*n4 - 4*n7 + 2*d*n7 + 4*n4*n7 - 4*n7^2) + 
   ((6 - 3*d + 2*n3 + 2*n4 + 2*n7)*j[p4a, 0, 0, 1 + n3, n4, 0, 1, -1 + n7, 1, 
      0, 1, 1, 0, 1, 1])/(-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 4*n7 - 2*d*n7 - 
     4*n4*n7 + 4*n7^2) + ((5 - 2*d + 2*n3 + 2*n4)*j[p4a, 0, 0, 1 + n3, n4, 0, 
      1, n7, 0, 0, 1, 1, -1, 1, 1])/(-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 4*n7 - 
     2*d*n7 - 4*n4*n7 + 4*n7^2) + ((-6 + 3*d - 2*n3 - 2*n4 - 2*n7)*
     j[p4a, 0, 0, 1 + n3, n4, 0, 1, n7, 0, 0, 1, 1, 0, 1, 1])/
    (-4 + d - 2*n3 - 4*n4 + 2*d*n4 + 4*n7 - 2*d*n7 - 4*n4*n7 + 4*n7^2) + 
   ((-1 + d - 2*n7)*j[p4a, 0, 0, 1 + n3, n4, 0, 1, n7, 1, 0, 0, 1, -1, 1, 1])/
    (4 - d + 2*n3 + 4*n4 - 2*d*n4 - 4*n7 + 2*d*n7 + 4*n4*n7 - 4*n7^2), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n1 == 0 && n10 == 1 && n11 == 1 && 
    n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && n5 == 0 && n6 == 1 && 
    n8 == 1 && n9 == 0 &&  !(n4 == n7 || n4 == n7) -> 
  -j[p4a, -1, 0, 1 + n3, n4, 0, 1, n7, 0, 0, 2, 1, 0, 1, 1]/(2*(n4 - n7)) + 
   ((8 - 3*d + 2*n3 + 2*n4 + 2*n7)*j[p4a, -1, 0, 1 + n3, n4, 0, 1, n7, 1, 0, 
      0, 2, 0, 1, 1])/(2*(-2 + d - 2*n7)*(-n4 + n7)) - 
   j[p4a, -1, 0, 1 + n3, n4, 0, 1, n7, 1, 0, 2, 1, 0, 0, 1]/(2*(n4 - n7)) - 
   j[p4a, -1, 0, 1 + n3, n4, 0, 1, n7, 2, 0, 1, 1, 0, 0, 1]/(2*(n4 - n7)) + 
   (n4*j[p4a, -1, 0, 1 + n3, 1 + n4, 0, 1, n7, 1, 0, 1, 1, 0, 1, 0])/
    (2*(n4 - n7)) + j[p4a, 0, -1, 1 + n3, n4, 0, 1, n7, 0, 0, 2, 1, 0, 1, 1]/
    (2*(n4 - n7)) + j[p4a, 0, -1, 1 + n3, n4, 0, 1, n7, 1, 0, 2, 0, 0, 1, 1]/
    (2*(n4 - n7)) + j[p4a, 0, -1, 1 + n3, n4, 0, 1, n7, 1, 0, 2, 1, 0, 0, 1]/
    (2*(n4 - n7)) + j[p4a, 0, -1, 1 + n3, n4, 0, 1, n7, 2, 0, 1, 0, 0, 1, 1]/
    (2*(n4 - n7)) + j[p4a, 0, -1, 1 + n3, n4, 0, 1, n7, 2, 0, 1, 1, 0, 0, 1]/
    (2*(n4 - n7)) + (n7*j[p4a, 0, -1, 1 + n3, n4, 0, 1, 1 + n7, 1, 0, 1, 1, 
      0, 0, 1])/(2*(n4 - n7)) + 
   ((-3 + d - n3 - n7)*j[p4a, 0, -1, 1 + n3, n4, 0, 2, n7, 0, 0, 1, 1, 0, 1, 
      1])/((-2 + d - 2*n4)*(n4 - n7)) + 
   j[p4a, 0, -1, 1 + n3, n4, 0, 2, n7, 1, 0, 0, 1, 0, 1, 1]/(2*(n4 - n7)) - 
   (n4*j[p4a, 0, -1, 1 + n3, 1 + n4, 0, 1, n7, 1, 0, 1, 1, 0, 1, 0])/
    (2*(n4 - n7)) + ((-4 + d - 2*n3 + 2*n4 - 2*n7)*j[p4a, 0, 0, n3, n4, 0, 0, 
      n7, 1, 0, 1, 1, 0, 1, 2])/(2*(-2 + d - 2*n4)*(n4 - n7)) + 
   ((-4 + d - 2*n3 + 2*n4 - 2*n7)*j[p4a, 0, 0, n3, n4, 0, 1, n7, 0, 0, 1, 1, 
      0, 1, 2])/(2*(-2 + d - 2*n4)*(n4 - n7)) + 
   ((4 - d + 2*n3 + 2*n4 - 2*n7)*j[p4a, 0, 0, n3, n4, 0, 1, n7, 0, 0, 1, 1, 
      0, 2, 1])/(2*(-2 + d - 2*n7)*(-n4 + n7)) + 
   ((-4 + d - 2*n3 + 2*n4 - 2*n7)*j[p4a, 0, 0, n3, n4, 0, 1, n7, 1, 0, 1, 1, 
      0, 0, 2])/(2*(-2 + d - 2*n4)*(n4 - n7)) + 
   j[p4a, 0, 0, n3, n4, 0, 1, n7, 1, 0, 2, 0, 0, 1, 1]/(2*(n4 - n7)) - 
   (n7*j[p4a, 0, 0, n3, n4, 0, 1, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (2*(n4 - n7)) + (n7*(5 - 2*d + n3 + n4 + 2*n7)*j[p4a, 0, 0, n3, n4, 0, 1, 
      1 + n7, 1, 0, 0, 1, 0, 1, 1])/((n4 - n7)*(2 - d + 2*n7)) - 
   (n7*(5 - 2*d + n3 + n4 + 2*n7)*j[p4a, 0, 0, n3, n4, 0, 1, 1 + n7, 1, 0, 1, 
      0, 0, 1, 1])/((n4 - n7)*(2 - d + 2*n7)) + 
   ((-3 + d - n3 - n7)*j[p4a, 0, 0, n3, n4, 0, 2, n7, 0, 0, 1, 1, 0, 1, 1])/
    ((-2 + d - 2*n4)*(n4 - n7)) + j[p4a, 0, 0, n3, n4, 0, 2, n7, 1, 0, 0, 1, 
     0, 1, 1]/(2*(n4 - n7)) + (n4*(12 - 5*d + 2*n3 + 6*n4 + 2*n7)*
     j[p4a, 0, 0, n3, 1 + n4, 0, 0, n7, 1, 0, 1, 1, 0, 1, 1])/
    (2*(2 - d + 2*n4)*(n4 - n7)) - (n4*(5 - 2*d + n3 + 2*n4 + n7)*
     j[p4a, 0, 0, n3, 1 + n4, 0, 1, n7, 0, 0, 1, 1, 0, 1, 1])/
    ((2 - d + 2*n4)*(n4 - n7)) + 
   (n4*j[p4a, 0, 0, n3, 1 + n4, 0, 1, n7, 1, 0, 0, 1, 0, 1, 1])/
    (2*(n4 - n7)) - (n4*j[p4a, 0, 0, n3, 1 + n4, 0, 1, n7, 1, 0, 1, 0, 0, 1, 
      1])/(2*(n4 - n7)) + ((4 - d + 2*n3 - 2*n4 + 2*n7)*
     j[p4a, 0, 0, 1 + n3, -1 + n4, 0, 0, n7, 1, 0, 1, 1, 0, 1, 2])/
    (2*(-2 + d - 2*n4)*(n4 - n7)) + ((4 - d + 2*n3 - 2*n4 + 2*n7)*
     j[p4a, 0, 0, 1 + n3, -1 + n4, 0, 1, n7, 0, 0, 1, 1, 0, 1, 2])/
    (2*(-2 + d - 2*n4)*(n4 - n7)) + ((4 - d + 2*n3 - 2*n4 + 2*n7)*
     j[p4a, 0, 0, 1 + n3, -1 + n4, 0, 1, n7, 1, 0, 1, 1, 0, 0, 2])/
    (2*(-2 + d - 2*n4)*(n4 - n7)) + 
   (2*(6 - 5*d + d^2 + 2*n3 - d*n3 + 3*n4 - d*n4 + n3*n4 + 2*n7 - d*n7 + 
      n4*n7)*j[p4a, 0, 0, 1 + n3, -1 + n4, 0, 1, n7, 1, 0, 1, 1, 0, 1, 1])/
    ((-2 + d - 2*n4)*(n4 - n7)) + 
   ((3 - d + n3 + n7)*j[p4a, 0, 0, 1 + n3, -1 + n4, 0, 2, n7, 0, 0, 1, 1, 0, 
      1, 1])/((-2 + d - 2*n4)*(n4 - n7)) + 
   j[p4a, 0, 0, 1 + n3, -1 + n4, 0, 2, n7, 1, 0, 0, 1, 0, 1, 1]/
    (2*(n4 - n7)) + ((3 - d + n3 + n7)*j[p4a, 0, 0, 1 + n3, -1 + n4, 0, 2, 
      n7, 1, 0, 1, 1, 0, 0, 1])/((-2 + d - 2*n4)*(n4 - n7)) + 
   ((3 - d + n3 + n7)*j[p4a, 0, 0, 1 + n3, -1 + n4, 0, 2, n7, 1, 0, 1, 1, 0, 
      1, 0])/((-2 + d - 2*n4)*(n4 - n7)) + 
   ((-4 + d - 2*n3 + 6*n4 - d*n4 + 2*n3*n4 - 2*n4^2 - 2*n7 + 2*n4*n7)*
     j[p4a, 0, 0, 1 + n3, n4, 0, 0, n7, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-2 + d - 2*n4)*(n4 - n7)) + ((-4 + d - 2*n3 - 2*n4 + 2*n7)*
     j[p4a, 0, 0, 1 + n3, n4, 0, 1, -1 + n7, 0, 0, 1, 1, 0, 2, 1])/
    (2*(-2 + d - 2*n7)*(-n4 + n7)) + ((-8 + 3*d - 2*n3 - 2*n4 - 2*n7)*
     j[p4a, 0, 0, 1 + n3, n4, 0, 1, -1 + n7, 0, 0, 1, 2, 0, 1, 1])/
    (2*(-2 + d - 2*n7)*(-n4 + n7)) - j[p4a, 0, 0, 1 + n3, n4, 0, 1, -1 + n7, 
     0, 0, 2, 1, 0, 1, 1]/(2*(n4 - n7)) + 
   (2*(6 - 5*d + d^2 + 2*n3 - d*n3 + 2*n4 - d*n4 + 3*n7 - d*n7 + n3*n7 + 
      n4*n7)*j[p4a, 0, 0, 1 + n3, n4, 0, 1, -1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    ((-2 + d - 2*n7)*(-n4 + n7)) - j[p4a, 0, 0, 1 + n3, n4, 0, 1, -1 + n7, 1, 
     0, 2, 0, 0, 1, 1]/(2*(n4 - n7)) - 
   j[p4a, 0, 0, 1 + n3, n4, 0, 1, -1 + n7, 1, 0, 2, 1, 0, 0, 1]/
    (2*(n4 - n7)) - j[p4a, 0, 0, 1 + n3, n4, 0, 1, -1 + n7, 2, 0, 1, 0, 0, 1, 
     1]/(2*(n4 - n7)) - j[p4a, 0, 0, 1 + n3, n4, 0, 1, -1 + n7, 2, 0, 1, 1, 
     0, 0, 1]/(2*(n4 - n7)) + ((10 - 4*d + 14*n3 - 6*d*n3 - 2*n4 + 2*d*n4 + 
      10*n3*n4 + 4*n7 - d*n7)*j[p4a, 0, 0, 1 + n3, n4, 0, 1, n7, 0, 0, 1, 1, 
      0, 1, 1])/(2*(-2 + d - 2*n4)*(n4 - n7)) + 
   j[p4a, 0, 0, 1 + n3, n4, 0, 1, n7, 0, 0, 1, 2, -1, 1, 1]/(2*(n4 - n7)) - 
   j[p4a, 0, 0, 1 + n3, n4, 0, 1, n7, 0, 0, 1, 2, 0, 1, 1]/(2*(n4 - n7)) + 
   ((-2 + d + 4*n3 - 2*d*n3 + 2*n4 - d*n4 - 8*n7 + 2*d*n7 + 2*n3*n7)*
     j[p4a, 0, 0, 1 + n3, n4, 0, 1, n7, 1, 0, 0, 1, 0, 1, 1])/
    (2*(-2 + d - 2*n7)*(-n4 + n7)) - 
   ((-3 + d - n3 - n4)*j[p4a, 0, 0, 1 + n3, n4, 0, 1, n7, 1, 0, 0, 2, -1, 1, 
      1])/((-2 + d - 2*n7)*(-n4 + n7)) - 
   ((3 - d + n3 + n4)*j[p4a, 0, 0, 1 + n3, n4, 0, 1, n7, 1, 0, 0, 2, 0, 1, 
      1])/((-2 + d - 2*n7)*(-n4 + n7)) + 
   ((-2 + d - 4*n3 + 2*d*n3 - 2*n4 + d*n4 + 4*n7 - 2*d*n7 - 2*n3*n7)*
     j[p4a, 0, 0, 1 + n3, n4, 0, 1, n7, 1, 0, 1, 0, 0, 1, 1])/
    (2*(-2 + d - 2*n7)*(-n4 + n7)) + 
   ((-4 + 2*d - 8*n3 + 4*d*n3 - d*n7 - 6*n3*n7 + 2*n4*n7 - 2*n7^2)*
     j[p4a, 0, 0, 1 + n3, n4, 0, 1, n7, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-2 + d - 2*n7)*(-n4 + n7)) + 
   ((-8 + 3*d - 2*n3 + 4*n4 - 2*d*n4 + 2*n3*n4 - 2*n7 + 2*n4*n7)*
     j[p4a, 0, 0, 1 + n3, n4, 0, 1, n7, 1, 0, 1, 1, 0, 1, 0])/
    (2*(-2 + d - 2*n4)*(n4 - n7)) + j[p4a, 0, 0, 1 + n3, n4, 0, 1, n7, 1, 0, 
     2, 0, -1, 1, 1]/(2*(n4 - n7)) - j[p4a, 0, 0, 1 + n3, n4, 0, 1, n7, 1, 0, 
     2, 0, 0, 1, 1]/(2*(n4 - n7)) + j[p4a, 0, 0, 1 + n3, n4, 0, 1, n7, 2, 0, 
     1, 0, -1, 1, 1]/(2*(n4 - n7)) + 
   ((3 - d + n3 + n7)*j[p4a, 0, 0, 1 + n3, n4, 0, 2, -1 + n7, 0, 0, 1, 1, 0, 
      1, 1])/((-2 + d - 2*n4)*(n4 - n7)) - 
   j[p4a, 0, 0, 1 + n3, n4, 0, 2, -1 + n7, 1, 0, 0, 1, 0, 1, 1]/
    (2*(n4 - n7)) + j[p4a, 0, 0, 1 + n3, n4, 0, 2, n7, 0, -1, 1, 1, 0, 1, 1]/
    (-n4 + n7) + ((-3 + d - n3 - n7)*j[p4a, 0, 0, 1 + n3, n4, 0, 2, n7, 0, 0, 
      1, 1, -1, 1, 1])/((-2 + d - 2*n4)*(n4 - n7)) - 
   j[p4a, 0, 0, 1 + n3, n4, 0, 2, n7, 1, -1, 1, 1, 0, 0, 1]/(2*(n4 - n7)) - 
   j[p4a, 0, 0, 1 + n3, n4, 0, 2, n7, 1, -1, 1, 1, 0, 1, 0]/(2*(n4 - n7)) + 
   j[p4a, 0, 0, 1 + n3, n4, 0, 2, n7, 1, 0, 0, 1, -1, 1, 1]/(2*(n4 - n7)) + 
   (n4*j[p4a, 0, 0, 1 + n3, 1 + n4, 0, 1, -1 + n7, 1, 0, 1, 1, 0, 1, 0])/
    (2*(n4 - n7)) - (n4*j[p4a, 0, 0, 1 + n3, 1 + n4, 0, 1, n7, 1, -1, 1, 1, 
      0, 1, 0])/(2*(n4 - n7)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n10 == 1 && n11 == 1 && n12 == -1 && 
    n13 == 1 && n14 == 1 && n2 == 0 && n5 == 0 && n6 == 1 && n7 == 1 && 
    n8 == 1 && n9 == 0 && n4 != 1 -> 
  ((3*n3 - d*n3 + n1*n3 + n3^2)*j[p4a, n1, -1, 1 + n3, -1 + n4, 0, 1, 1, 1, 
      0, 1, 1, 0, 1, 1])/((-2 + d - 2*n4)*(-1 + n4)) + 
   ((4 - d + n1 + n3)*j[p4a, n1, 0, -1 + n3, -1 + n4, 0, 1, 1, 1, 0, 1, 1, 0, 
      2, 1])/((-2 + d - 2*n4)*(-1 + n4)) - j[p4a, n1, 0, -1 + n3, n4, 0, 1, 
    1, 1, 0, 1, 1, 0, 1, 1] + ((-4 + d - n1 - n3)*j[p4a, n1, 0, n3, -1 + n4, 
      0, 1, 0, 1, 0, 1, 1, 0, 2, 1])/((-2 + d - 2*n4)*(-1 + n4)) + 
   ((-4 + d - n1 - n3)*j[p4a, n1, 0, n3, -1 + n4, 0, 1, 0, 1, 0, 1, 2, 0, 1, 
      1])/((-2 + d - 2*n4)*(-1 + n4)) + 
   ((-4 + d - n1 - n3)*j[p4a, n1, 0, n3, -1 + n4, 0, 1, 1, 0, 0, 1, 1, 0, 2, 
      1])/((-2 + d - 2*n4)*(-1 + n4)) + 
   ((4 - d + n1 + n3)*j[p4a, n1, 0, n3, -1 + n4, 0, 1, 1, 1, 0, 0, 2, 0, 1, 
      1])/((-2 + d - 2*n4)*(-1 + n4)) + 
   ((-18 + 9*d - d^2 - 8*n1 + 2*d*n1 - n1^2 - 5*n3 + d*n3 - n1*n3 + 2*n4 - 
      d*n4 + n1*n4 + n3*n4)*j[p4a, n1, 0, n3, -1 + n4, 0, 1, 1, 1, 0, 1, 1, 
      0, 1, 1])/((-2 + d - 2*n4)*(-1 + n4)) + 
   j[p4a, n1, 0, n3, -1 + n4, 0, 1, 1, 2, 0, 1, 1, 0, 0, 1]/(1 - n4) - 
   j[p4a, n1, 0, n3, n4, -1, 1, 1, 1, 0, 1, 1, 0, 1, 1] + 
   ((4 - d + n1 + n3)*j[p4a, n1, 0, n3, n4, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1])/
    (-2 + d - 2*n4) - (2*j[p4a, n1, 0, n3, n4, 0, 0, 1, 2, 0, 1, 1, -1, 1, 
      1])/(-2 + d - 2*n4) + j[p4a, n1, 0, n3, n4, 0, 1, 0, 1, 0, 1, 1, 0, 1, 
    1] + ((-4 + d - n1 - n3)*j[p4a, n1, 0, n3, n4, 0, 1, 1, 0, 0, 1, 1, 0, 1, 
      1])/(-2 + d - 2*n4) + j[p4a, n1, 0, n3, n4, 0, 1, 1, 1, 0, 1, 1, 0, 1, 
    0] - (n3*j[p4a, n1, 0, 1 + n3, -1 + n4, 0, 1, 0, 1, 0, 1, 1, -1, 2, 1])/
    ((-1 + n4)*(2 - d + 2*n4)) + ((-4*n3 + 2*d*n3 - n1*n3 - n3^2 - 2*n3*n4)*
     j[p4a, n1, 0, 1 + n3, -1 + n4, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-2 + d - 2*n4)*(-1 + n4)) + 
   (n3*j[p4a, n1, 0, 1 + n3, -1 + n4, 0, 1, 0, 1, 0, 1, 2, -1, 1, 1])/
    ((-1 + n4)*(2 - d + 2*n4)) + ((-7*n3 + 2*d*n3 - 2*n1*n3 - 2*n3^2)*
     j[p4a, n1, 0, 1 + n3, -1 + n4, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1])/
    ((-2 + d - 2*n4)*(-1 + n4)) - 
   (n3*j[p4a, n1, 0, 1 + n3, -1 + n4, 0, 1, 1, 1, 0, 0, 2, -1, 1, 1])/
    ((-1 + n4)*(2 - d + 2*n4)) + ((-4*n3 + d*n3 - n1*n3 - n3^2)*
     j[p4a, n1, 0, 1 + n3, -1 + n4, 0, 1, 1, 1, 0, 1, 1, -1, 1, 1])/
    ((-2 + d - 2*n4)*(-1 + n4)) + ((n3 + n1*n3 + n3^2 - 2*n3*n4)*
     j[p4a, n1, 0, 1 + n3, -1 + n4, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1])/
    ((-1 + n4)*(2 - d + 2*n4)) - 
   (n1*(4 - d + n1 + n3)*j[p4a, 1 + n1, -1, n3, -1 + n4, 0, 1, 1, 1, 0, 1, 1, 
      0, 1, 1])/((-2 + d - 2*n4)*(-1 + n4)) + 
   (n1*(4 - d + n1 + n3)*j[p4a, 1 + n1, 0, n3, -1 + n4, 0, 1, 1, 1, 0, 0, 1, 
      0, 1, 1])/((-2 + d - 2*n4)*(-1 + n4)) + 
   (n1*j[p4a, 1 + n1, 0, n3, -1 + n4, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1])/
    ((-1 + n4)*(2 - d + 2*n4)) - 
   (n1*(2 - d + n4)*j[p4a, 1 + n1, 0, n3, -1 + n4, 0, 1, 1, 1, 0, 1, 1, -1, 
      1, 1])/((-1 + n4)*(2 - d + 2*n4)) - 
   (n1*j[p4a, 1 + n1, 0, n3, -1 + n4, 0, 1, 1, 1, 0, 1, 1, -1, 2, 1])/
    ((-1 + n4)*(2 - d + 2*n4)) - 
   (n1*j[p4a, 1 + n1, 0, n3, -1 + n4, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1])/
    (-1 + n4) + ((-n1 + d*n1 - 2*n1*n4)*j[p4a, 1 + n1, 0, n3, -1 + n4, 0, 1, 
      1, 1, 0, 1, 1, 0, 1, 1])/((-2 + d - 2*n4)*(-1 + n4)) + 
   (n1*j[p4a, 1 + n1, 0, n3, -1 + n4, 0, 1, 2, 1, 0, 0, 1, -1, 1, 1])/
    ((-1 + n4)*(2 - d + 2*n4)) - 
   (n1*j[p4a, 1 + n1, 0, n3, -1 + n4, 0, 1, 2, 1, 0, 1, 0, -1, 1, 1])/
    ((-1 + n4)*(2 - d + 2*n4)) - 
   (n1*j[p4a, 1 + n1, 0, n3, n4, 0, 0, 1, 1, 0, 1, 1, -1, 1, 1])/
    (-2 + d - 2*n4) + (n1*j[p4a, 1 + n1, 0, n3, n4, 0, 1, 1, 0, 0, 1, 1, -1, 
      1, 1])/(-2 + d - 2*n4) - 
   (n1*n3*j[p4a, 1 + n1, 0, 1 + n3, -1 + n4, 0, 1, 0, 1, 0, 1, 1, -1, 1, 1])/
    ((-1 + n4)*(2 - d + 2*n4)) - 
   (n1*n3*j[p4a, 1 + n1, 0, 1 + n3, -1 + n4, 0, 1, 1, 0, 0, 1, 1, -1, 1, 1])/
    ((-1 + n4)*(2 - d + 2*n4)) + 
   (n1*n3*j[p4a, 1 + n1, 0, 1 + n3, -1 + n4, 0, 1, 1, 1, 0, 0, 1, -1, 1, 1])/
    ((-1 + n4)*(2 - d + 2*n4)) - 
   (n1*n3*j[p4a, 1 + n1, 0, 1 + n3, -1 + n4, 0, 1, 1, 1, 0, 1, 0, -1, 1, 1])/
    ((-1 + n4)*(2 - d + 2*n4)) + 
   (n1*n3*j[p4a, 1 + n1, 0, 1 + n3, -1 + n4, 0, 1, 1, 1, 0, 1, 1, -2, 1, 1])/
    ((-1 + n4)*(2 - d + 2*n4)) + 
   (n1*n3*j[p4a, 1 + n1, 0, 1 + n3, -1 + n4, 0, 1, 1, 1, 0, 1, 1, -1, 0, 1])/
    ((-1 + n4)*(2 - d + 2*n4)) - 
   (2*n1*n3*j[p4a, 1 + n1, 0, 1 + n3, -1 + n4, 0, 1, 1, 1, 0, 1, 1, -1, 1, 
      1])/((-1 + n4)*(2 - d + 2*n4)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n10 == 1 && n11 == 1 && n12 == -1 && 
    n13 == 1 && n14 == 1 && n2 == 0 && n4 == 1 && n5 == 0 && n6 == 1 && 
    n7 == 1 && n8 == 1 -> ((5*n9 - 2*d*n9 + n1*n9 + 2*n3*n9 - n9^2)*
     j[p4a, -1 + n1, 0, n3, 1, 0, 1, 1, 1, 1 + n9, 1, 1, -1, 1, 1])/
    (14 - 11*d + 2*d^2 + 4*n1 - d*n1 + 12*n3 - 4*d*n3 + 2*n3^2 + n9 - d*n9 + 
     n1*n9 + 2*n3*n9 - n9^2) + 
   (n9*j[p4a, n1, -1, -1 + n3, 1, 0, 1, 1, 1, 1 + n9, 1, 1, 0, 1, 1])/
    (-14 + 11*d - 2*d^2 - 4*n1 + d*n1 - 12*n3 + 4*d*n3 - 2*n3^2 - n9 + d*n9 - 
     n1*n9 - 2*n3*n9 + n9^2) + 
   ((7 - 2*d - n1 - 5*n3 + 2*d*n3 + n1*n3 - 2*n3^2 + n9 - n3*n9)*
     j[p4a, n1, -1, n3, 1, 0, 1, 1, 1, n9, 1, 1, 0, 1, 1])/
    (14 - 11*d + 2*d^2 + 4*n1 - d*n1 + 12*n3 - 4*d*n3 + 2*n3^2 + n9 - d*n9 + 
     n1*n9 + 2*n3*n9 - n9^2) - (n9*(-5 + 2*d - n1 - 2*n3 + n9)*
     j[p4a, n1, -1, n3, 1, 0, 1, 1, 1, 1 + n9, 1, 1, -1, 1, 1])/
    (-14 + 11*d - 2*d^2 - 4*n1 + d*n1 - 12*n3 + 4*d*n3 - 2*n3^2 - n9 + d*n9 - 
     n1*n9 - 2*n3*n9 + n9^2) + ((-6 + 2*d + n1 - 2*n3 - n9)*
     j[p4a, n1, 0, -2 + n3, 1, 0, 1, 1, 1, n9, 1, 1, 0, 2, 1])/
    (14 - 11*d + 2*d^2 + 4*n1 - d*n1 + 12*n3 - 4*d*n3 + 2*n3^2 + n9 - d*n9 + 
     n1*n9 + 2*n3*n9 - n9^2) + 
   (n9*j[p4a, n1, 0, -2 + n3, 1, 0, 1, 1, 1, 1 + n9, 1, 1, 0, 1, 1])/
    (-14 + 11*d - 2*d^2 - 4*n1 + d*n1 - 12*n3 + 4*d*n3 - 2*n3^2 - n9 + d*n9 - 
     n1*n9 - 2*n3*n9 + n9^2) + j[p4a, n1, 0, -1 + n3, 0, 0, 1, 1, 2, n9, 1, 
     1, -1, 1, 2]/(-14 + 11*d - 2*d^2 - 4*n1 + d*n1 - 12*n3 + 4*d*n3 - 
     2*n3^2 - n9 + d*n9 - n1*n9 - 2*n3*n9 + n9^2) + 
   (n9*j[p4a, n1, 0, -1 + n3, 0, 0, 1, 1, 2, 1 + n9, 1, 1, -1, 1, 1])/
    (-14 + 11*d - 2*d^2 - 4*n1 + d*n1 - 12*n3 + 4*d*n3 - 2*n3^2 - n9 + d*n9 - 
     n1*n9 - 2*n3*n9 + n9^2) + j[p4a, n1, 0, -1 + n3, 0, 0, 2, 1, 1, n9, 1, 
     1, -1, 2, 1]/(14 - 11*d + 2*d^2 + 4*n1 - d*n1 + 12*n3 - 4*d*n3 + 
     2*n3^2 + n9 - d*n9 + n1*n9 + 2*n3*n9 - n9^2) + 
   j[p4a, n1, 0, -1 + n3, 1, 0, 0, 1, 1, n9, 1, 1, 0, 1, 2]/
    (-14 + 11*d - 2*d^2 - 4*n1 + d*n1 - 12*n3 + 4*d*n3 - 2*n3^2 - n9 + d*n9 - 
     n1*n9 - 2*n3*n9 + n9^2) + 
   (n9*j[p4a, n1, 0, -1 + n3, 1, 0, 0, 1, 1, 1 + n9, 1, 1, 0, 1, 1])/
    (-14 + 11*d - 2*d^2 - 4*n1 + d*n1 - 12*n3 + 4*d*n3 - 2*n3^2 - n9 + d*n9 - 
     n1*n9 - 2*n3*n9 + n9^2) + j[p4a, n1, 0, -1 + n3, 1, 0, 0, 1, 2, n9, 1, 
     1, -1, 1, 2]/(14 - 11*d + 2*d^2 + 4*n1 - d*n1 + 12*n3 - 4*d*n3 + 
     2*n3^2 + n9 - d*n9 + n1*n9 + 2*n3*n9 - n9^2) - 
   (n9*j[p4a, n1, 0, -1 + n3, 1, 0, 0, 1, 2, 1 + n9, 1, 1, -1, 1, 1])/
    (-14 + 11*d - 2*d^2 - 4*n1 + d*n1 - 12*n3 + 4*d*n3 - 2*n3^2 - n9 + d*n9 - 
     n1*n9 - 2*n3*n9 + n9^2) + j[p4a, n1, 0, -1 + n3, 1, 0, 1, 0, 1, n9, 1, 
     1, 0, 1, 2]/(14 - 11*d + 2*d^2 + 4*n1 - d*n1 + 12*n3 - 4*d*n3 + 2*n3^2 + 
     n9 - d*n9 + n1*n9 + 2*n3*n9 - n9^2) + 
   ((6 - 2*d - n1 + 2*n3 + n9)*j[p4a, n1, 0, -1 + n3, 1, 0, 1, 0, 1, n9, 1, 
      1, 0, 2, 1])/(14 - 11*d + 2*d^2 + 4*n1 - d*n1 + 12*n3 - 4*d*n3 + 
     2*n3^2 + n9 - d*n9 + n1*n9 + 2*n3*n9 - n9^2) + 
   j[p4a, n1, 0, -1 + n3, 1, 0, 1, 0, 1, n9, 1, 2, -1, 1, 2]/
    (-14 + 11*d - 2*d^2 - 4*n1 + d*n1 - 12*n3 + 4*d*n3 - 2*n3^2 - n9 + d*n9 - 
     n1*n9 - 2*n3*n9 + n9^2) + ((6 - 2*d - n1 + 2*n3 + n9)*
     j[p4a, n1, 0, -1 + n3, 1, 0, 1, 0, 1, n9, 1, 2, 0, 1, 1])/
    (14 - 11*d + 2*d^2 + 4*n1 - d*n1 + 12*n3 - 4*d*n3 + 2*n3^2 + n9 - d*n9 + 
     n1*n9 + 2*n3*n9 - n9^2) + j[p4a, n1, 0, -1 + n3, 1, 0, 1, 0, 1, n9, 2, 
     1, -1, 2, 1]/(14 - 11*d + 2*d^2 + 4*n1 - d*n1 + 12*n3 - 4*d*n3 + 
     2*n3^2 + n9 - d*n9 + n1*n9 + 2*n3*n9 - n9^2) - 
   (2*n9*j[p4a, n1, 0, -1 + n3, 1, 0, 1, 0, 1, 1 + n9, 1, 1, 0, 1, 1])/
    (-14 + 11*d - 2*d^2 - 4*n1 + d*n1 - 12*n3 + 4*d*n3 - 2*n3^2 - n9 + d*n9 - 
     n1*n9 - 2*n3*n9 + n9^2) + 
   (n9*j[p4a, n1, 0, -1 + n3, 1, 0, 1, 0, 1, 1 + n9, 1, 2, -1, 1, 1])/
    (-14 + 11*d - 2*d^2 - 4*n1 + d*n1 - 12*n3 + 4*d*n3 - 2*n3^2 - n9 + d*n9 - 
     n1*n9 - 2*n3*n9 + n9^2) + ((6 - 2*d - n1 + 2*n3 + n9)*
     j[p4a, n1, 0, -1 + n3, 1, 0, 1, 1, 0, n9, 1, 1, 0, 2, 1])/
    (14 - 11*d + 2*d^2 + 4*n1 - d*n1 + 12*n3 - 4*d*n3 + 2*n3^2 + n9 - d*n9 + 
     n1*n9 + 2*n3*n9 - n9^2) - 
   (n9*j[p4a, n1, 0, -1 + n3, 1, 0, 1, 1, 0, 1 + n9, 1, 1, 0, 1, 1])/
    (-14 + 11*d - 2*d^2 - 4*n1 + d*n1 - 12*n3 + 4*d*n3 - 2*n3^2 - n9 + d*n9 - 
     n1*n9 - 2*n3*n9 + n9^2) + j[p4a, n1, 0, -1 + n3, 1, 0, 1, 1, 1, n9, 0, 
     2, -1, 1, 2]/(14 - 11*d + 2*d^2 + 4*n1 - d*n1 + 12*n3 - 4*d*n3 + 
     2*n3^2 + n9 - d*n9 + n1*n9 + 2*n3*n9 - n9^2) + 
   ((-6 + 2*d + n1 - 2*n3 - n9)*j[p4a, n1, 0, -1 + n3, 1, 0, 1, 1, 1, n9, 0, 
      2, 0, 1, 1])/(14 - 11*d + 2*d^2 + 4*n1 - d*n1 + 12*n3 - 4*d*n3 + 
     2*n3^2 + n9 - d*n9 + n1*n9 + 2*n3*n9 - n9^2) + 
   ((45 - 27*d + 4*d^2 - 2*n1 - n1^2 + 15*n3 - 4*d*n3 + 2*n1*n3 + 7*n9 - 
      2*d*n9 + n1*n9)*j[p4a, n1, 0, -1 + n3, 1, 0, 1, 1, 1, n9, 1, 1, 0, 1, 
      1])/(14 - 11*d + 2*d^2 + 4*n1 - d*n1 + 12*n3 - 4*d*n3 + 2*n3^2 + n9 - 
     d*n9 + n1*n9 + 2*n3*n9 - n9^2) + j[p4a, n1, 0, -1 + n3, 1, 0, 1, 1, 1, 
     n9, 2, 0, -1, 2, 1]/(-14 + 11*d - 2*d^2 - 4*n1 + d*n1 - 12*n3 + 4*d*n3 - 
     2*n3^2 - n9 + d*n9 - n1*n9 - 2*n3*n9 + n9^2) - 
   (n9*j[p4a, n1, 0, -1 + n3, 1, 0, 1, 1, 1, 1 + n9, 0, 1, 0, 1, 1])/
    (-14 + 11*d - 2*d^2 - 4*n1 + d*n1 - 12*n3 + 4*d*n3 - 2*n3^2 - n9 + d*n9 - 
     n1*n9 - 2*n3*n9 + n9^2) - 
   (n9*j[p4a, n1, 0, -1 + n3, 1, 0, 1, 1, 1, 1 + n9, 0, 2, -1, 1, 1])/
    (-14 + 11*d - 2*d^2 - 4*n1 + d*n1 - 12*n3 + 4*d*n3 - 2*n3^2 - n9 + d*n9 - 
     n1*n9 - 2*n3*n9 + n9^2) + 
   (n9*j[p4a, n1, 0, -1 + n3, 1, 0, 1, 1, 1, 1 + n9, 1, 0, 0, 1, 1])/
    (-14 + 11*d - 2*d^2 - 4*n1 + d*n1 - 12*n3 + 4*d*n3 - 2*n3^2 - n9 + d*n9 - 
     n1*n9 - 2*n3*n9 + n9^2) - (2*(4*n9 - d*n9 + n9^2)*
     j[p4a, n1, 0, -1 + n3, 1, 0, 1, 1, 1, 1 + n9, 1, 1, -1, 1, 1])/
    (-14 + 11*d - 2*d^2 - 4*n1 + d*n1 - 12*n3 + 4*d*n3 - 2*n3^2 - n9 + d*n9 - 
     n1*n9 - 2*n3*n9 + n9^2) + 
   (n9*j[p4a, n1, 0, -1 + n3, 1, 0, 1, 1, 1, 1 + n9, 1, 1, -1, 1, 2])/
    (-14 + 11*d - 2*d^2 - 4*n1 + d*n1 - 12*n3 + 4*d*n3 - 2*n3^2 - n9 + d*n9 - 
     n1*n9 - 2*n3*n9 + n9^2) - 
   (n9*j[p4a, n1, 0, -1 + n3, 1, 0, 1, 1, 1, 1 + n9, 1, 1, -1, 2, 0])/
    (-14 + 11*d - 2*d^2 - 4*n1 + d*n1 - 12*n3 + 4*d*n3 - 2*n3^2 - n9 + d*n9 - 
     n1*n9 - 2*n3*n9 + n9^2) + 
   (n9*j[p4a, n1, 0, -1 + n3, 1, 0, 1, 1, 1, 1 + n9, 1, 1, -1, 2, 1])/
    (-14 + 11*d - 2*d^2 - 4*n1 + d*n1 - 12*n3 + 4*d*n3 - 2*n3^2 - n9 + d*n9 - 
     n1*n9 - 2*n3*n9 + n9^2) - 
   (n9*j[p4a, n1, 0, -1 + n3, 1, 0, 1, 1, 1, 1 + n9, 1, 1, 0, 0, 1])/
    (-14 + 11*d - 2*d^2 - 4*n1 + d*n1 - 12*n3 + 4*d*n3 - 2*n3^2 - n9 + d*n9 - 
     n1*n9 - 2*n3*n9 + n9^2) - 
   (n9*j[p4a, n1, 0, -1 + n3, 1, 0, 1, 1, 1, 1 + n9, 1, 1, 0, 1, 1])/
    (-14 + 11*d - 2*d^2 - 4*n1 + d*n1 - 12*n3 + 4*d*n3 - 2*n3^2 - n9 + d*n9 - 
     n1*n9 - 2*n3*n9 + n9^2) + j[p4a, n1, 0, -1 + n3, 1, 0, 2, 1, 0, n9, 1, 
     1, -1, 2, 1]/(-14 + 11*d - 2*d^2 - 4*n1 + d*n1 - 12*n3 + 4*d*n3 - 
     2*n3^2 - n9 + d*n9 - n1*n9 - 2*n3*n9 + n9^2) + 
   ((-7 + 2*d + n1 - 2*n3 - n9)*j[p4a, n1, 0, -1 + n3, 2, 0, 0, 1, 1, n9, 1, 
      1, 0, 1, 1])/(14 - 11*d + 2*d^2 + 4*n1 - d*n1 + 12*n3 - 4*d*n3 + 
     2*n3^2 + n9 - d*n9 + n1*n9 + 2*n3*n9 - n9^2) + 
   ((7 - 2*d - n1 + 2*n3 + n9)*j[p4a, n1, 0, -1 + n3, 2, 0, 1, 1, 0, n9, 1, 
      1, 0, 1, 1])/(14 - 11*d + 2*d^2 + 4*n1 - d*n1 + 12*n3 - 4*d*n3 + 
     2*n3^2 + n9 - d*n9 + n1*n9 + 2*n3*n9 - n9^2) + 
   ((-5 + 2*d - n1 - 2*n3 + n9)*j[p4a, n1, 0, n3, 0, 0, 1, 1, 1, n9, 1, 1, 
      -1, 1, 2])/(14 - 11*d + 2*d^2 + 4*n1 - d*n1 + 12*n3 - 4*d*n3 + 2*n3^2 + 
     n9 - d*n9 + n1*n9 + 2*n3*n9 - n9^2) - 
   (n9*(-5 + 2*d - n1 - 2*n3 + n9)*j[p4a, n1, 0, n3, 0, 0, 1, 1, 1, 1 + n9, 
      1, 1, -1, 1, 1])/(-14 + 11*d - 2*d^2 - 4*n1 + d*n1 - 12*n3 + 4*d*n3 - 
     2*n3^2 - n9 + d*n9 - n1*n9 - 2*n3*n9 + n9^2) + 
   ((-6 + 2*d - n1 - n3 + n9)*j[p4a, n1, 0, n3, 0, 0, 2, 1, 1, n9, 1, 1, -1, 
      1, 1])/(14 - 11*d + 2*d^2 + 4*n1 - d*n1 + 12*n3 - 4*d*n3 + 2*n3^2 + 
     n9 - d*n9 + n1*n9 + 2*n3*n9 - n9^2) + 
   ((-8 + 2*d + n1 + 6*n3 - 2*d*n3 - n1*n3 + 2*n3^2 - n9 + n3*n9)*
     j[p4a, n1, 0, n3, 1, 0, 1, 0, 1, n9, 1, 1, 0, 1, 1])/
    (14 - 11*d + 2*d^2 + 4*n1 - d*n1 + 12*n3 - 4*d*n3 + 2*n3^2 + n9 - d*n9 + 
     n1*n9 + 2*n3*n9 - n9^2) + 
   ((1 - n3)*j[p4a, n1, 0, n3, 1, 0, 1, 0, 1, n9, 1, 2, -1, 1, 1])/
    (14 - 11*d + 2*d^2 + 4*n1 - d*n1 + 12*n3 - 4*d*n3 + 2*n3^2 + n9 - d*n9 + 
     n1*n9 + 2*n3*n9 - n9^2) + (n9*(-5 + 2*d - n1 - 2*n3 + n9)*
     j[p4a, n1, 0, n3, 1, 0, 1, 0, 1, 1 + n9, 1, 1, -1, 1, 1])/
    (-14 + 11*d - 2*d^2 - 4*n1 + d*n1 - 12*n3 + 4*d*n3 - 2*n3^2 - n9 + d*n9 - 
     n1*n9 - 2*n3*n9 + n9^2) + 
   ((-13 + 4*d + 2*n1 + 9*n3 - 4*d*n3 - 2*n1*n3 + 4*n3^2 - 2*n9 + 2*n3*n9)*
     j[p4a, n1, 0, n3, 1, 0, 1, 1, 0, n9, 1, 1, 0, 1, 1])/
    (14 - 11*d + 2*d^2 + 4*n1 - d*n1 + 12*n3 - 4*d*n3 + 2*n3^2 + n9 - d*n9 + 
     n1*n9 + 2*n3*n9 - n9^2) + ((5*n9 - 2*d*n9 + n1*n9 + 2*n3*n9 - n9^2)*
     j[p4a, n1, 0, n3, 1, 0, 1, 1, 0, 1 + n9, 1, 1, -1, 1, 1])/
    (14 - 11*d + 2*d^2 + 4*n1 - d*n1 + 12*n3 - 4*d*n3 + 2*n3^2 + n9 - d*n9 + 
     n1*n9 + 2*n3*n9 - n9^2) + 
   ((-1 + n3)*j[p4a, n1, 0, n3, 1, 0, 1, 1, 1, n9, 0, 2, -1, 1, 1])/
    (14 - 11*d + 2*d^2 + 4*n1 - d*n1 + 12*n3 - 4*d*n3 + 2*n3^2 + n9 - d*n9 + 
     n1*n9 + 2*n3*n9 - n9^2) + 
   ((-7 + 2*d + n1 + 5*n3 - 2*d*n3 - n1*n3 + 2*n3^2 - n9 + n3*n9)*
     j[p4a, n1, 0, n3, 1, 0, 1, 1, 1, n9, 1, 1, 0, 0, 1])/
    (14 - 11*d + 2*d^2 + 4*n1 - d*n1 + 12*n3 - 4*d*n3 + 2*n3^2 + n9 - d*n9 + 
     n1*n9 + 2*n3*n9 - n9^2) + ((5*n9 - 2*d*n9 + n1*n9 + 2*n3*n9 - n9^2)*
     j[p4a, n1, 0, n3, 1, 0, 1, 1, 1, 1 + n9, 0, 1, -1, 1, 1])/
    (14 - 11*d + 2*d^2 + 4*n1 - d*n1 + 12*n3 - 4*d*n3 + 2*n3^2 + n9 - d*n9 + 
     n1*n9 + 2*n3*n9 - n9^2) + ((-5*n9 + 2*d*n9 - n1*n9 - 2*n3*n9 + n9^2)*
     j[p4a, n1, 0, n3, 1, 0, 1, 1, 1, 1 + n9, 1, 0, -1, 1, 1])/
    (14 - 11*d + 2*d^2 + 4*n1 - d*n1 + 12*n3 - 4*d*n3 + 2*n3^2 + n9 - d*n9 + 
     n1*n9 + 2*n3*n9 - n9^2) + 
   ((-1 + n3)*n9*j[p4a, n1, 0, n3, 1, 0, 1, 1, 1, 1 + n9, 1, 1, -1, 1, 0])/
    (14 - 11*d + 2*d^2 + 4*n1 - d*n1 + 12*n3 - 4*d*n3 + 2*n3^2 + n9 - d*n9 + 
     n1*n9 + 2*n3*n9 - n9^2) - 
   ((-1 + n3)*n9*j[p4a, n1, 0, n3, 1, 0, 1, 1, 1, 1 + n9, 1, 1, -1, 1, 1])/
    (14 - 11*d + 2*d^2 + 4*n1 - d*n1 + 12*n3 - 4*d*n3 + 2*n3^2 + n9 - d*n9 + 
     n1*n9 + 2*n3*n9 - n9^2) + ((6 - 2*d + n1 + n3 - n9)*
     j[p4a, n1, 0, n3, 1, 0, 2, 1, 0, n9, 1, 1, -1, 1, 1])/
    (14 - 11*d + 2*d^2 + 4*n1 - d*n1 + 12*n3 - 4*d*n3 + 2*n3^2 + n9 - d*n9 + 
     n1*n9 + 2*n3*n9 - n9^2) + ((-6*n1 + 2*d*n1 + n1^2 - 2*n1*n3 - n1*n9)*
     j[p4a, 1 + n1, -1, -1 + n3, 1, 0, 1, 1, 1, n9, 1, 1, 0, 1, 1])/
    (-14 + 11*d - 2*d^2 - 4*n1 + d*n1 - 12*n3 + 4*d*n3 - 2*n3^2 - n9 + d*n9 - 
     n1*n9 - 2*n3*n9 + n9^2) - 
   (n1*j[p4a, 1 + n1, 0, -1 + n3, 0, 0, 2, 1, 1, n9, 1, 1, -1, 1, 1])/
    (-14 + 11*d - 2*d^2 - 4*n1 + d*n1 - 12*n3 + 4*d*n3 - 2*n3^2 - n9 + d*n9 - 
     n1*n9 - 2*n3*n9 + n9^2) - 
   (n1*j[p4a, 1 + n1, 0, -1 + n3, 1, 0, 1, 0, 1, n9, 2, 1, -1, 1, 1])/
    (-14 + 11*d - 2*d^2 - 4*n1 + d*n1 - 12*n3 + 4*d*n3 - 2*n3^2 - n9 + d*n9 - 
     n1*n9 - 2*n3*n9 + n9^2) + ((6*n1 - 2*d*n1 - n1^2 + 2*n1*n3 + n1*n9)*
     j[p4a, 1 + n1, 0, -1 + n3, 1, 0, 1, 1, 1, n9, 0, 1, 0, 1, 1])/
    (-14 + 11*d - 2*d^2 - 4*n1 + d*n1 - 12*n3 + 4*d*n3 - 2*n3^2 - n9 + d*n9 - 
     n1*n9 - 2*n3*n9 + n9^2) - 
   (n1*j[p4a, 1 + n1, 0, -1 + n3, 1, 0, 1, 1, 1, n9, 1, 0, 0, 1, 1])/
    (-14 + 11*d - 2*d^2 - 4*n1 + d*n1 - 12*n3 + 4*d*n3 - 2*n3^2 - n9 + d*n9 - 
     n1*n9 - 2*n3*n9 + n9^2) + 
   (n1*j[p4a, 1 + n1, 0, -1 + n3, 1, 0, 1, 1, 1, n9, 1, 1, -1, 0, 2])/
    (-14 + 11*d - 2*d^2 - 4*n1 + d*n1 - 12*n3 + 4*d*n3 - 2*n3^2 - n9 + d*n9 - 
     n1*n9 - 2*n3*n9 + n9^2) + 
   (2*(-4 + d - n1)*n1*j[p4a, 1 + n1, 0, -1 + n3, 1, 0, 1, 1, 1, n9, 1, 1, 
      -1, 1, 1])/(14 - 11*d + 2*d^2 + 4*n1 - d*n1 + 12*n3 - 4*d*n3 + 2*n3^2 + 
     n9 - d*n9 + n1*n9 + 2*n3*n9 - n9^2) - 
   (n1*j[p4a, 1 + n1, 0, -1 + n3, 1, 0, 1, 1, 1, n9, 1, 1, -1, 1, 2])/
    (-14 + 11*d - 2*d^2 - 4*n1 + d*n1 - 12*n3 + 4*d*n3 - 2*n3^2 - n9 + d*n9 - 
     n1*n9 - 2*n3*n9 + n9^2) - 
   (n1*j[p4a, 1 + n1, 0, -1 + n3, 1, 0, 1, 1, 1, n9, 1, 1, -1, 2, 1])/
    (-14 + 11*d - 2*d^2 - 4*n1 + d*n1 - 12*n3 + 4*d*n3 - 2*n3^2 - n9 + d*n9 - 
     n1*n9 - 2*n3*n9 + n9^2) + 
   (n1*j[p4a, 1 + n1, 0, -1 + n3, 1, 0, 1, 1, 1, n9, 1, 1, 0, 1, 1])/
    (-14 + 11*d - 2*d^2 - 4*n1 + d*n1 - 12*n3 + 4*d*n3 - 2*n3^2 - n9 + d*n9 - 
     n1*n9 - 2*n3*n9 + n9^2) + 
   (n1*j[p4a, 1 + n1, 0, -1 + n3, 1, 0, 1, 1, 1, n9, 2, 0, -1, 1, 1])/
    (-14 + 11*d - 2*d^2 - 4*n1 + d*n1 - 12*n3 + 4*d*n3 - 2*n3^2 - n9 + d*n9 - 
     n1*n9 - 2*n3*n9 + n9^2) + 
   (n1*j[p4a, 1 + n1, 0, -1 + n3, 1, 0, 2, 1, 0, n9, 1, 1, -1, 1, 1])/
    (-14 + 11*d - 2*d^2 - 4*n1 + d*n1 - 12*n3 + 4*d*n3 - 2*n3^2 - n9 + d*n9 - 
     n1*n9 - 2*n3*n9 + n9^2) + 
   (n1*(-1 + n3)*j[p4a, 1 + n1, 0, n3, 1, 0, 1, 1, 1, n9, 1, 1, -1, 0, 1])/
    (-14 + 11*d - 2*d^2 - 4*n1 + d*n1 - 12*n3 + 4*d*n3 - 2*n3^2 - n9 + d*n9 - 
     n1*n9 - 2*n3*n9 + n9^2) - 
   (n1*(-1 + n3)*j[p4a, 1 + n1, 0, n3, 1, 0, 1, 1, 1, n9, 1, 1, -1, 1, 1])/
    (-14 + 11*d - 2*d^2 - 4*n1 + d*n1 - 12*n3 + 4*d*n3 - 2*n3^2 - n9 + d*n9 - 
     n1*n9 - 2*n3*n9 + n9^2), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n10 == 1 && n11 == 1 && n12 == 0 && 
    n13 == 1 && n14 == 1 && n2 == 0 && n4 == 1 && n5 == 0 && n6 == 1 && 
    n7 == 1 && n8 == 1 && n9 != 0 -> 
  j[p4a, -1 + n1, 0, n3, 1, 0, 1, 0, 1, 1 + n9, 1, 2, 0, 1, 1]/
    (-4 + d - n9) + j[p4a, -1 + n1, 0, n3, 1, 0, 1, 0, 2, 1 + n9, 1, 1, 0, 1, 
     1]/(-4 + d - n9) + j[p4a, -1 + n1, 0, n3, 1, 0, 1, 1, 1, 1 + n9, 0, 2, 
     0, 1, 1]/(4 - d + n9) + ((3 - d + n3 - n9)*j[p4a, -1 + n1, 0, n3, 1, 0, 
      1, 1, 1, 1 + n9, 1, 1, 0, 1, 1])/(-4 + d - n9) + 
   j[p4a, -1 + n1, 0, n3, 2, 0, 1, 0, 1, 1 + n9, 1, 1, 0, 1, 1]/
    (-4 + d - n9) + (n3*j[p4a, -1 + n1, 0, 1 + n3, 1, 0, 1, 0, 1, 1 + n9, 1, 
      1, 0, 1, 1])/(-4 + d - n9) - 
   (n3*j[p4a, -1 + n1, 0, 1 + n3, 1, 0, 1, 1, 1, 1 + n9, 1, 1, 0, 0, 1])/
    (-4 + d - n9) + ((-8 + 2*d - n3)*j[p4a, n1, -1, n3, 1, 0, 1, 1, 1, 
      1 + n9, 1, 1, 0, 1, 1])/(-4 + d - n9) + 
   ((-1 - n9)*j[p4a, n1, -1, n3, 1, 0, 1, 1, 1, 2 + n9, 1, 1, 0, 1, 1])/
    (4 - d + n9) + j[p4a, n1, -1, n3, 1, 0, 1, 1, 2, 1 + n9, 1, 0, 0, 1, 1]/
    (4 - d + n9) + j[p4a, n1, -1, n3, 1, 0, 2, 1, 1, 1 + n9, 0, 1, 0, 1, 1]/
    (4 - d + n9) + j[p4a, n1, -1, n3, 2, 0, 1, 0, 1, 1 + n9, 1, 1, 0, 1, 1]/
    (4 - d + n9) - (n3*j[p4a, n1, -1, 1 + n3, 1, 0, 1, 0, 1, 1 + n9, 1, 1, 0, 
      1, 1])/(-4 + d - n9) + (n3*j[p4a, n1, -1, 1 + n3, 1, 0, 1, 1, 1, 
      1 + n9, 1, 1, 0, 0, 1])/(-4 + d - n9) + 
   j[p4a, n1, 0, -1 + n3, 1, 0, 1, 1, 1, 1 + n9, 1, 1, 0, 1, 2]/
    (4 - d + n9) + j[p4a, n1, 0, n3, 0, 0, 1, 1, 1, 1 + n9, 1, 1, 0, 1, 2]/
    (-4 + d - n9) + ((-1 - n9)*j[p4a, n1, 0, n3, 0, 0, 1, 1, 1, 2 + n9, 1, 1, 
      0, 1, 1])/(4 - d + n9) + j[p4a, n1, 0, n3, 1, -1, 1, 1, 1, 1 + n9, 1, 
    1, 0, 1, 1] + ((1 + n9)*j[p4a, n1, 0, n3, 1, -1, 1, 1, 1, 2 + n9, 1, 1, 
      0, 1, 1])/(4 - d + n9) + j[p4a, n1, 0, n3, 1, -1, 2, 1, 1, 1 + n9, 0, 
     1, 0, 1, 1]/(-4 + d - n9) + j[p4a, n1, 0, n3, 1, 0, 1, 0, 1, 1 + n9, 2, 
     1, 0, 1, 1]/(4 - d + n9) + 
   ((1 + n9)*j[p4a, n1, 0, n3, 1, 0, 1, 0, 1, 2 + n9, 1, 1, 0, 1, 1])/
    (4 - d + n9) + ((1 + n9)*j[p4a, n1, 0, n3, 1, 0, 1, 1, 0, 2 + n9, 1, 1, 
      0, 1, 1])/(4 - d + n9) + j[p4a, n1, 0, n3, 1, 0, 1, 1, 1, n9, 1, 1, 0, 
     0, 2]/(4 - d + n9) + j[p4a, n1, 0, n3, 1, 0, 1, 1, 1, 1 + n9, 0, 1, 0, 
     1, 1]/(-4 + d - n9) + j[p4a, n1, 0, n3, 1, 0, 1, 1, 1, 1 + n9, 1, 1, 0, 
     0, 2]/(-4 + d - n9) + ((-3 + d - n3)*j[p4a, n1, 0, n3, 1, 0, 1, 1, 1, 
      1 + n9, 1, 1, 0, 1, 1])/(-4 + d - n9) + 
   j[p4a, n1, 0, n3, 1, 0, 1, 1, 1, 1 + n9, 2, 0, 0, 1, 1]/(-4 + d - n9) + 
   ((1 + n9)*j[p4a, n1, 0, n3, 1, 0, 1, 1, 1, 2 + n9, 0, 1, 0, 1, 1])/
    (4 - d + n9) + ((-1 - n9)*j[p4a, n1, 0, n3, 1, 0, 1, 1, 1, 2 + n9, 1, 0, 
      0, 1, 1])/(4 - d + n9) + j[p4a, n1, 0, n3, 2, -1, 1, 0, 1, 1 + n9, 1, 
     1, 0, 1, 1]/(-4 + d - n9) + j[p4a, n1, 0, n3, 2, -1, 1, 1, 0, 1 + n9, 1, 
     1, 0, 1, 1]/(-4 + d - n9) + j[p4a, n1, 0, n3, 2, -1, 1, 1, 1, 1 + n9, 0, 
     1, 0, 1, 1]/(-4 + d - n9) + j[p4a, n1, 0, n3, 2, -1, 1, 1, 1, 1 + n9, 1, 
     0, 0, 1, 1]/(4 - d + n9) + j[p4a, n1, 0, n3, 2, 0, 1, 0, 1, n9, 1, 1, 0, 
     1, 1]/(4 - d + n9) - (n3*j[p4a, n1, 0, 1 + n3, 1, 0, 1, 0, 1, 1 + n9, 1, 
      1, 0, 1, 1])/(-4 + d - n9) + 
   (n3*j[p4a, n1, 0, 1 + n3, 1, 0, 1, 1, 1, 1 + n9, 1, 1, 0, 0, 1])/
    (-4 + d - n9), j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?Positive, (n4_)?Positive, (n5_)?NonPositive, (n6_)?Positive, 
    (n7_)?Positive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n13 == 1 && n14 == 1 && n2 == 0 && n3 == 1 && 
    n5 == 0 && n6 == 1 && n7 == 1 && n8 == 1 && n9 == 0 && n12 != 0 -> 
  j[p4a, n1, 0, 0, -1 + n4, 0, 2, 1, 2, 0, 1, 1, n12, 1, 1]/
    ((-2 + d - 2*n4)*(-7 + 2*d - n1 - n12 - n4)) + 
   j[p4a, n1, 0, 0, n4, 0, 1, 1, 1, 0, 1, 1, n12, 1, 2]/(2 - d + 2*n4) + 
   ((2 - d - n12 - n4 + d*n4 + n12*n4 - n4^2)*j[p4a, n1, 0, 0, n4, 0, 1, 1, 
      1, 0, 1, 1, 1 + n12, 1, 1])/((-2 + d - 2*n4)*(-7 + 2*d - n1 - n12 - 
      n4)) + ((-1 + n4)*j[p4a, n1, 0, 0, n4, 0, 1, 1, 2, 0, 1, 1, n12, 1, 1])/
    ((-2 + d - 2*n4)*(-7 + 2*d - n1 - n12 - n4)) + 
   ((-1 + n4)*j[p4a, n1, 0, 0, n4, 0, 2, 1, 1, 0, 1, 1, n12, 1, 1])/
    ((-2 + d - 2*n4)*(-7 + 2*d - n1 - n12 - n4)) + 
   ((-8 + 6*d - d^2 - 2*n1 + d*n1 - 2*n12 + d*n12 - 4*n4 + d*n4 - n1*n4 - 
      n12*n4)*j[p4a, n1, 0, 1, -1 + n4, 0, 1, 1, 1, 0, 1, 1, 1 + n12, 1, 1])/
    ((-2 + d - 2*n4)*(-7 + 2*d - n1 - n12 - n4)) + 
   ((-2 + d - n4)*j[p4a, n1, 0, 1, -1 + n4, 0, 1, 1, 2, 0, 1, 1, 1 + n12, 0, 
      1])/((-2 + d - 2*n4)*(-7 + 2*d - n1 - n12 - n4)) + 
   (n12*j[p4a, n1, 0, 1, -1 + n4, 0, 2, 0, 1, 0, 1, 1, 1 + n12, 1, 1])/
    ((-2 + d - 2*n4)*(-7 + 2*d - n1 - n12 - n4)) + 
   j[p4a, n1, 0, 1, -1 + n4, 0, 2, 0, 1, 0, 1, 2, n12, 1, 1]/
    ((-2 + d - 2*n4)*(-7 + 2*d - n1 - n12 - n4)) - 
   j[p4a, n1, 0, 1, -1 + n4, 0, 2, 1, 1, 0, 0, 2, n12, 1, 1]/
    ((-2 + d - 2*n4)*(-7 + 2*d - n1 - n12 - n4)) - 
   (n12*j[p4a, n1, 0, 1, -1 + n4, 0, 2, 1, 1, 0, 1, 1, 1 + n12, 1, 0])/
    ((-2 + d - 2*n4)*(-7 + 2*d - n1 - n12 - n4)) - 
   j[p4a, n1, 0, 1, -1 + n4, 0, 2, 1, 2, 0, 1, 1, n12, 1, 0]/
    ((-2 + d - 2*n4)*(-7 + 2*d - n1 - n12 - n4)) + 
   ((-2 + d - n4)*(-1 + n4)*j[p4a, n1, 0, 1, n4, -1, 1, 1, 1, 0, 1, 1, 
      1 + n12, 1, 1])/((-2 + d - 2*n4)*(-7 + 2*d - n1 - n12 - n4)) - 
   ((-2 + d - n4)*(-1 + n4)*j[p4a, n1, 0, 1, n4, 0, 1, 0, 1, 0, 1, 1, 
      1 + n12, 1, 1])/((-2 + d - 2*n4)*(-7 + 2*d - n1 - n12 - n4)) + 
   ((-2 + d + n12 + n4 - d*n4 - n12*n4 + n4^2)*j[p4a, n1, 0, 1, n4, 0, 1, 1, 
      1, 0, 1, 1, 1 + n12, 1, 0])/((-2 + d - 2*n4)*(-7 + 2*d - n1 - n12 - 
      n4)) + ((1 - n4)*j[p4a, n1, 0, 1, n4, 0, 1, 1, 2, 0, 1, 1, n12, 1, 0])/
    ((-2 + d - 2*n4)*(-7 + 2*d - n1 - n12 - n4)) + 
   j[p4a, n1, 0, 1, n4, 0, 2, 1, 0, 0, 1, 1, n12, 1, 1]/(2 - d + 2*n4) + 
   ((1 - n4)*j[p4a, n1, 0, 1, n4, 0, 2, 1, 1, 0, 1, 1, n12, 1, 0])/
    ((-2 + d - 2*n4)*(-7 + 2*d - n1 - n12 - n4)) + 
   j[p4a, n1, 0, 2, -2 + n4, 0, 1, 1, 1, 0, 1, 1, n12, 1, 2]/
    (-2 + d - 2*n4) + j[p4a, n1, 0, 2, -2 + n4, 0, 2, 1, 1, 0, 1, 1, n12, 1, 
     1]/(-2 + d - 2*n4) + ((2 - d + n4)*j[p4a, n1, 0, 2, -1 + n4, 0, 1, 0, 1, 
      0, 1, 1, 1 + n12, 1, 1])/((-2 + d - 2*n4)*(-7 + 2*d - n1 - n12 - n4)) + 
   ((-d + 2*n4)*j[p4a, n1, 0, 2, -1 + n4, 0, 1, 1, 1, 0, 1, 1, n12, 1, 1])/
    (-2 + d - 2*n4) + ((-2 + d - n4)*j[p4a, n1, 0, 2, -1 + n4, 0, 1, 1, 1, 0, 
      1, 1, 1 + n12, 0, 1])/((-2 + d - 2*n4)*(-7 + 2*d - n1 - n12 - n4)) + 
   j[p4a, n1, 0, 2, -1 + n4, 0, 2, 1, 0, 0, 1, 1, n12, 1, 1]/(2 - d + 2*n4) + 
   (n1*(-2 + d - n4)*j[p4a, 1 + n1, 0, 1, -1 + n4, 0, 1, 1, 1, 0, 1, 1, 
      1 + n12, 0, 1])/((-2 + d - 2*n4)*(-7 + 2*d - n1 - n12 - n4)) - 
   (n1*(-2 + d - n4)*j[p4a, 1 + n1, 0, 1, -1 + n4, 0, 1, 1, 1, 0, 1, 1, 
      1 + n12, 1, 1])/((-2 + d - 2*n4)*(-7 + 2*d - n1 - n12 - n4)) + 
   (n1*j[p4a, 1 + n1, 0, 1, -1 + n4, 0, 2, 1, 1, 0, 1, 1, n12, 0, 1])/
    ((-2 + d - 2*n4)*(-7 + 2*d - n1 - n12 - n4)) - 
   (n1*j[p4a, 1 + n1, 0, 1, -1 + n4, 0, 2, 1, 1, 0, 1, 1, n12, 1, 1])/
    ((-2 + d - 2*n4)*(-7 + 2*d - n1 - n12 - n4)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n1 == 0 && n10 == 1 && n11 == 1 && 
    n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && n4 == n7 && n5 == 0 && 
    n6 == 1 && n8 == 1 && n9 == 0 -> 
  ((-8 + 3*d - 2*n3 - 2*n7)*(-2 + d - n7)*j[p4a, -1, 0, n3, n7, 0, 0, n7, 2, 
      0, 1, 1, 0, 1, 1])/((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 
      28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) - 
   ((-8 + 4*d - 2*n3 - 5*n7)*(-8 + 3*d - 2*n3 - 2*n7)*
     j[p4a, -1, 0, n3, n7, 0, 1, n7, 0, 0, 2, 1, 0, 1, 1])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 
      48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   ((-10 + 5*d - 3*n3 - 6*n7)*(-8 + 3*d - 2*n3 - 2*n7)*
     j[p4a, -1, 0, n3, n7, 0, 1, n7, 1, 0, 0, 2, 0, 1, 1])/
    ((-2 + d - 2*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 
      22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   ((-8 + 3*d - 2*n3 - 2*n7)*(-2 + d - n7)*j[p4a, -1, 0, n3, n7, 0, 1, n7, 1, 
      0, 1, 1, 0, 2, 0])/((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 
      28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) - 
   ((-8 + 4*d - 2*n3 - 5*n7)*(-8 + 3*d - 2*n3 - 2*n7)*
     j[p4a, -1, 0, n3, n7, 0, 1, n7, 1, 0, 2, 1, 0, 0, 1])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 
      48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) - 
   (n3*(-2 + d - n7)*(4 - 3*d + 2*n3 + 6*n7)*j[p4a, -1, 0, 1 + n3, n7, 0, 1, 
      n7, 1, 0, 1, 1, 0, 0, 1])/((6 - 3*d + 2*n3 + 4*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) + (n3*(-2 + d - n7)*(8 - 3*d + 2*n3 + 2*n7)*
     j[p4a, -1, 0, 1 + n3, n7, 0, 1, n7, 1, 0, 1, 1, 0, 1, 0])/
    ((6 - 3*d + 2*n3 + 4*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 
      48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) - 
   ((-8 + 3*d - 2*n3 - 2*n7)*(-2 + d - n7)*j[p4a, 0, -1, n3, n7, 0, 0, n7, 1, 
      0, 2, 1, 0, 1, 1])/((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 
      28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   ((-8 + 4*d - 2*n3 - 5*n7)*(-8 + 3*d - 2*n3 - 2*n7)*
     j[p4a, 0, -1, n3, n7, 0, 1, n7, 0, 0, 2, 1, 0, 1, 1])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 
      48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   (2*(-8 + 3*d - 2*n3 - 2*n7)*(-2 + d - n7)*j[p4a, 0, -1, n3, n7, 0, 1, n7, 
      1, 0, 1, 1, 0, 0, 2])/((-6 + 3*d - 2*n3 - 4*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) + ((104 - 94*d + 21*d^2 + 44*n3 - 20*d*n3 + 
      4*n3^2 + 96*n7 - 42*d*n7 + 20*n3*n7 + 20*n7^2)*
     j[p4a, 0, -1, n3, n7, 0, 1, n7, 1, 0, 2, 0, 0, 1, 1])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 
      48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   ((-8 + 4*d - 2*n3 - 5*n7)*(-8 + 3*d - 2*n3 - 2*n7)*
     j[p4a, 0, -1, n3, n7, 0, 1, n7, 1, 0, 2, 1, 0, 0, 1])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 
      48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) - 
   ((-4 + 3*d - 2*n3 - 6*n7)*(-2 + d - n7)*j[p4a, 0, -1, n3, n7, 0, 1, n7, 2, 
      0, 1, 0, 0, 1, 1])/((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 
      28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) - 
   ((-4 + 3*d - 2*n3 - 6*n7)*(-2 + d - n7)*j[p4a, 0, -1, n3, n7, 0, 1, n7, 2, 
      0, 1, 1, 0, 0, 1])/((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 
      28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   ((-8 + 3*d - 2*n3 - 2*n7)*n7*j[p4a, 0, -1, n3, n7, 0, 1, 1 + n7, 1, 0, 1, 
      1, 0, 0, 1])/(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 
     22*d*n7 + 12*n3*n7 + 12*n7^2) + 
   ((368 - 536*d + 260*d^2 - 42*d^3 + 288*n3 - 278*d*n3 + 67*d^2*n3 + 
      68*n3^2 - 32*d*n3^2 + 4*n3^3 + 664*n7 - 638*d*n7 + 153*d^2*n7 + 
      336*n3*n7 - 160*d*n3*n7 + 36*n3^2*n7 + 380*n7^2 - 180*d*n7^2 + 
      92*n3*n7^2 + 68*n7^3)*j[p4a, 0, -1, n3, n7, 0, 2, n7, 0, 0, 1, 1, 0, 1, 
      1])/((-6 + 3*d - 2*n3 - 4*n7)*(-2 + d - 2*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) - ((-4 + 3*d - 2*n3 - 6*n7)*(-2 + d - n7)*
     j[p4a, 0, -1, n3, n7, 0, 2, n7, 1, 0, 0, 1, 0, 1, 1])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 
      48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) - 
   ((-4 + 3*d - 2*n3 - 6*n7)*(-2 + d - n7)*j[p4a, 0, -1, n3, n7, 0, 2, n7, 1, 
      0, 1, 1, 0, 0, 1])/((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 
      28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) - 
   ((-4 + 3*d - 2*n3 - 6*n7)*(-2 + d - n7)*j[p4a, 0, -1, n3, n7, 0, 2, n7, 1, 
      0, 1, 1, 0, 1, 0])/((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 
      28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   (n3*(-2 + d - n7)*(20 - 9*d + 6*n3 + 10*n7)*j[p4a, 0, -1, 1 + n3, n7, 0, 
      1, n7, 1, 0, 1, 1, 0, 0, 1])/((6 - 3*d + 2*n3 + 4*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) + (n3*(-2 + d - n7)*(8 - 3*d + 2*n3 + 2*n7)*
     j[p4a, 0, -1, 1 + n3, n7, 0, 1, n7, 1, 0, 1, 1, 0, 1, 0])/
    ((6 - 3*d + 2*n3 + 4*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 
      48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   ((-496 + 712*d - 340*d^2 + 54*d^3 - 352*n3 + 338*d*n3 - 81*d^2*n3 - 
      76*n3^2 + 36*d*n3^2 - 4*n3^3 - 904*n7 + 852*d*n7 - 200*d^2*n7 - 
      428*n3*n7 + 202*d*n3*n7 - 44*n3^2*n7 - 512*n7^2 + 236*d*n7^2 - 
      120*n3*n7^2 - 88*n7^3)*j[p4a, 0, 0, -2 + n3, n7, 0, 1, n7, 1, 0, 1, 1, 
      0, 1, 2])/((-6 + 3*d - 2*n3 - 4*n7)*(-2 + d - 2*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) + ((448 - 628*d + 292*d^2 - 45*d^3 + 424*n3 - 
      386*d*n3 + 87*d^2*n3 + 124*n3^2 - 56*d*n3^2 + 12*n3^3 + 712*n7 - 
      660*d*n7 + 152*d^2*n7 + 420*n3*n7 - 186*d*n3*n7 + 60*n3^2*n7 + 
      376*n7^2 - 172*d*n7^2 + 96*n3*n7^2 + 64*n7^3)*
     j[p4a, 0, 0, -2 + n3, n7, 0, 1, n7, 1, 0, 1, 1, 0, 2, 1])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(-2 + d - 2*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 
      12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   ((496 - 712*d + 340*d^2 - 54*d^3 + 352*n3 - 338*d*n3 + 81*d^2*n3 + 
      76*n3^2 - 36*d*n3^2 + 4*n3^3 + 904*n7 - 852*d*n7 + 200*d^2*n7 + 
      428*n3*n7 - 202*d*n3*n7 + 44*n3^2*n7 + 512*n7^2 - 236*d*n7^2 + 
      120*n3*n7^2 + 88*n7^3)*j[p4a, 0, 0, -1 + n3, -1 + n7, 0, 1, n7, 1, 0, 
      1, 1, 0, 1, 2])/((-6 + 3*d - 2*n3 - 4*n7)*(-2 + d - 2*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) + ((496 - 712*d + 340*d^2 - 54*d^3 + 352*n3 - 
      338*d*n3 + 81*d^2*n3 + 76*n3^2 - 36*d*n3^2 + 4*n3^3 + 904*n7 - 
      852*d*n7 + 200*d^2*n7 + 428*n3*n7 - 202*d*n3*n7 + 44*n3^2*n7 + 
      512*n7^2 - 236*d*n7^2 + 120*n3*n7^2 + 88*n7^3)*
     j[p4a, 0, 0, -1 + n3, -1 + n7, 0, 2, n7, 1, 0, 1, 1, 0, 1, 1])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(-2 + d - 2*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 
      12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   ((560 - 800*d + 380*d^2 - 60*d^3 + 368*n3 - 354*d*n3 + 85*d^2*n3 + 
      76*n3^2 - 36*d*n3^2 + 4*n3^3 + 1016*n7 - 952*d*n7 + 222*d^2*n7 + 
      452*n3*n7 - 214*d*n3*n7 + 44*n3^2*n7 + 568*n7^2 - 260*d*n7^2 + 
      128*n3*n7^2 + 96*n7^3)*j[p4a, 0, 0, -1 + n3, n7, 0, 0, n7, 1, 0, 1, 1, 
      0, 1, 2])/((-6 + 3*d - 2*n3 - 4*n7)*(-2 + d - 2*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) - ((-8 + 3*d - 2*n3 - 2*n7)*(-2 + d - n7)*
     j[p4a, 0, 0, -1 + n3, n7, 0, 0, n7, 1, 0, 2, 1, 0, 1, 1])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 
      48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   ((496 - 712*d + 340*d^2 - 54*d^3 + 352*n3 - 338*d*n3 + 81*d^2*n3 + 
      76*n3^2 - 36*d*n3^2 + 4*n3^3 + 904*n7 - 852*d*n7 + 200*d^2*n7 + 
      428*n3*n7 - 202*d*n3*n7 + 44*n3^2*n7 + 512*n7^2 - 236*d*n7^2 + 
      120*n3*n7^2 + 88*n7^3)*j[p4a, 0, 0, -1 + n3, n7, 0, 1, -1 + n7, 1, 0, 
      1, 1, 0, 1, 2])/((-6 + 3*d - 2*n3 - 4*n7)*(-2 + d - 2*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) + (2*(-448 + 628*d - 292*d^2 + 45*d^3 - 424*n3 + 
      386*d*n3 - 87*d^2*n3 - 124*n3^2 + 56*d*n3^2 - 12*n3^3 - 712*n7 + 
      660*d*n7 - 152*d^2*n7 - 420*n3*n7 + 186*d*n3*n7 - 60*n3^2*n7 - 
      376*n7^2 + 172*d*n7^2 - 96*n3*n7^2 - 64*n7^3)*
     j[p4a, 0, 0, -1 + n3, n7, 0, 1, -1 + n7, 1, 0, 1, 1, 0, 2, 1])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(-2 + d - 2*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 
      12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   ((-448 + 628*d - 292*d^2 + 45*d^3 - 424*n3 + 386*d*n3 - 87*d^2*n3 - 
      124*n3^2 + 56*d*n3^2 - 12*n3^3 - 712*n7 + 660*d*n7 - 152*d^2*n7 - 
      420*n3*n7 + 186*d*n3*n7 - 60*n3^2*n7 - 376*n7^2 + 172*d*n7^2 - 
      96*n3*n7^2 - 64*n7^3)*j[p4a, 0, 0, -1 + n3, n7, 0, 1, -1 + n7, 1, 0, 1, 
      2, 0, 1, 1])/((-6 + 3*d - 2*n3 - 4*n7)*(-2 + d - 2*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) + ((560 - 800*d + 380*d^2 - 60*d^3 + 368*n3 - 
      354*d*n3 + 85*d^2*n3 + 76*n3^2 - 36*d*n3^2 + 4*n3^3 + 1016*n7 - 
      952*d*n7 + 222*d^2*n7 + 452*n3*n7 - 214*d*n3*n7 + 44*n3^2*n7 + 
      568*n7^2 - 260*d*n7^2 + 128*n3*n7^2 + 96*n7^3)*
     j[p4a, 0, 0, -1 + n3, n7, 0, 1, n7, 0, 0, 1, 1, 0, 1, 2])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(-2 + d - 2*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 
      12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   ((-448 + 628*d - 292*d^2 + 45*d^3 - 424*n3 + 386*d*n3 - 87*d^2*n3 - 
      124*n3^2 + 56*d*n3^2 - 12*n3^3 - 712*n7 + 660*d*n7 - 152*d^2*n7 - 
      420*n3*n7 + 186*d*n3*n7 - 60*n3^2*n7 - 376*n7^2 + 172*d*n7^2 - 
      96*n3*n7^2 - 64*n7^3)*j[p4a, 0, 0, -1 + n3, n7, 0, 1, n7, 0, 0, 1, 1, 
      0, 2, 1])/((-6 + 3*d - 2*n3 - 4*n7)*(-2 + d - 2*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) + ((448 - 628*d + 292*d^2 - 45*d^3 + 424*n3 - 
      386*d*n3 + 87*d^2*n3 + 124*n3^2 - 56*d*n3^2 + 12*n3^3 + 712*n7 - 
      660*d*n7 + 152*d^2*n7 + 420*n3*n7 - 186*d*n3*n7 + 60*n3^2*n7 + 
      376*n7^2 - 172*d*n7^2 + 96*n3*n7^2 + 64*n7^3)*
     j[p4a, 0, 0, -1 + n3, n7, 0, 1, n7, 1, 0, 0, 2, 0, 1, 1])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(-2 + d - 2*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 
      12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   ((496 - 712*d + 340*d^2 - 54*d^3 + 352*n3 - 338*d*n3 + 81*d^2*n3 + 
      76*n3^2 - 36*d*n3^2 + 4*n3^3 + 904*n7 - 852*d*n7 + 200*d^2*n7 + 
      428*n3*n7 - 202*d*n3*n7 + 44*n3^2*n7 + 512*n7^2 - 236*d*n7^2 + 
      120*n3*n7^2 + 88*n7^3)*j[p4a, 0, 0, -1 + n3, n7, 0, 1, n7, 1, 0, 1, 1, 
      0, 0, 2])/((-6 + 3*d - 2*n3 - 4*n7)*(-2 + d - 2*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) + (2*(-240 + 348*d - 168*d^2 + 27*d^3 - 144*n3 + 
      144*d*n3 - 36*d^2*n3 - 24*n3^2 + 12*d*n3^2 - 456*n7 + 432*d*n7 - 
      102*d^2*n7 - 196*n3*n7 + 96*d*n3*n7 - 16*n3^2*n7 - 260*n7^2 + 
      120*d*n7^2 - 60*n3*n7^2 - 44*n7^3)*j[p4a, 0, 0, -1 + n3, n7, 0, 1, n7, 
      1, 0, 1, 1, 0, 1, 1])/((-6 + 3*d - 2*n3 - 4*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) + ((104 - 94*d + 21*d^2 + 44*n3 - 20*d*n3 + 
      4*n3^2 + 96*n7 - 42*d*n7 + 20*n3*n7 + 20*n7^2)*
     j[p4a, 0, 0, -1 + n3, n7, 0, 1, n7, 1, 0, 2, 0, 0, 1, 1])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 
      48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) - 
   ((-8 + 3*d - 2*n3 - 2*n7)*n7*j[p4a, 0, 0, -1 + n3, n7, 0, 1, 1 + n7, 0, 0, 
      1, 1, 0, 1, 1])/(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 
     22*d*n7 + 12*n3*n7 + 12*n7^2) + 
   ((-12 + 6*d - 3*n3 - 8*n7)*(-8 + 3*d - 2*n3 - 2*n7)*n7*
     j[p4a, 0, 0, -1 + n3, n7, 0, 1, 1 + n7, 1, 0, 0, 1, 0, 1, 1])/
    ((-2 + d - 2*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 
      22*d*n7 + 12*n3*n7 + 12*n7^2)) - 
   ((-12 + 6*d - 3*n3 - 8*n7)*(-8 + 3*d - 2*n3 - 2*n7)*n7*
     j[p4a, 0, 0, -1 + n3, n7, 0, 1, 1 + n7, 1, 0, 1, 0, 0, 1, 1])/
    ((-2 + d - 2*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 
      22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   ((-12 + 5*d - 2*n3 - 4*n7)*j[p4a, 0, 0, -1 + n3, n7, 0, 2, n7, 0, 0, 1, 1, 
      0, 1, 1])/(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 
     22*d*n7 + 12*n3*n7 + 12*n7^2) + 
   (n7*(56 - 56*d + 14*d^2 + 24*n3 - 11*d*n3 + 2*n3^2 + 68*n7 - 34*d*n7 + 
      10*n3*n7 + 20*n7^2)*j[p4a, 0, 0, -1 + n3, 1 + n7, 0, 0, n7, 1, 0, 1, 1, 
      0, 1, 1])/((2 - d + 2*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 
      4*n3^2 + 48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) - 
   (n7*(56 - 56*d + 14*d^2 + 24*n3 - 11*d*n3 + 2*n3^2 + 68*n7 - 34*d*n7 + 
      10*n3*n7 + 20*n7^2)*j[p4a, 0, 0, -1 + n3, 1 + n7, 0, 1, n7, 0, 0, 1, 1, 
      0, 1, 1])/((2 - d + 2*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 
      4*n3^2 + 48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   ((-560 + 800*d - 380*d^2 + 60*d^3 - 368*n3 + 354*d*n3 - 85*d^2*n3 - 
      76*n3^2 + 36*d*n3^2 - 4*n3^3 - 1016*n7 + 952*d*n7 - 222*d^2*n7 - 
      452*n3*n7 + 214*d*n3*n7 - 44*n3^2*n7 - 568*n7^2 + 260*d*n7^2 - 
      128*n3*n7^2 - 96*n7^3)*j[p4a, 0, 0, n3, -1 + n7, 0, 0, n7, 1, 0, 1, 1, 
      0, 1, 2])/((-6 + 3*d - 2*n3 - 4*n7)*(-2 + d - 2*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) + ((-496 + 712*d - 340*d^2 + 54*d^3 - 352*n3 + 
      338*d*n3 - 81*d^2*n3 - 76*n3^2 + 36*d*n3^2 - 4*n3^3 - 904*n7 + 
      852*d*n7 - 200*d^2*n7 - 428*n3*n7 + 202*d*n3*n7 - 44*n3^2*n7 - 
      512*n7^2 + 236*d*n7^2 - 120*n3*n7^2 - 88*n7^3)*
     j[p4a, 0, 0, n3, -1 + n7, 0, 1, -1 + n7, 1, 0, 1, 1, 0, 1, 2])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(-2 + d - 2*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 
      12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   ((-560 + 800*d - 380*d^2 + 60*d^3 - 368*n3 + 354*d*n3 - 85*d^2*n3 - 
      76*n3^2 + 36*d*n3^2 - 4*n3^3 - 1016*n7 + 952*d*n7 - 222*d^2*n7 - 
      452*n3*n7 + 214*d*n3*n7 - 44*n3^2*n7 - 568*n7^2 + 260*d*n7^2 - 
      128*n3*n7^2 - 96*n7^3)*j[p4a, 0, 0, n3, -1 + n7, 0, 1, n7, 0, 0, 1, 1, 
      0, 1, 2])/((-6 + 3*d - 2*n3 - 4*n7)*(-2 + d - 2*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) + ((-560 + 800*d - 380*d^2 + 60*d^3 - 368*n3 + 
      354*d*n3 - 85*d^2*n3 - 76*n3^2 + 36*d*n3^2 - 4*n3^3 - 1016*n7 + 
      952*d*n7 - 222*d^2*n7 - 452*n3*n7 + 214*d*n3*n7 - 44*n3^2*n7 - 
      568*n7^2 + 260*d*n7^2 - 128*n3*n7^2 - 96*n7^3)*
     j[p4a, 0, 0, n3, -1 + n7, 0, 1, n7, 1, 0, 1, 1, 0, 0, 2])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(-2 + d - 2*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 
      12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) - 
   (2*(-2 + d - n7)*(-336 + 492*d - 240*d^2 + 39*d^3 - 264*n3 + 256*d*n3 - 
      62*d^2*n3 - 64*n3^2 + 30*d*n3^2 - 4*n3^3 - 608*n7 + 588*d*n7 - 
      142*d^2*n7 - 304*n3*n7 + 146*d*n3*n7 - 32*n3^2*n7 - 352*n7^2 + 
      168*d*n7^2 - 84*n3*n7^2 - 64*n7^3)*j[p4a, 0, 0, n3, -1 + n7, 0, 1, n7, 
      1, 0, 1, 1, 0, 1, 1])/((-6 + 3*d - 2*n3 - 4*n7)*(-2 + d - 2*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) - ((-8 + 3*d - 2*n3 - 2*n7)*(-2 + d - n7)*
     j[p4a, 0, 0, n3, -1 + n7, 0, 1, n7, 2, 0, 1, 0, 0, 1, 1])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 
      48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) - 
   ((-8 + 3*d - 2*n3 - 2*n7)*(-2 + d - n7)*j[p4a, 0, 0, n3, -1 + n7, 0, 1, 
      n7, 2, 0, 1, 1, 0, 0, 1])/((-6 + 3*d - 2*n3 - 4*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) - ((-8 + 3*d - 2*n3 - 2*n7)*(-2 + d - n7)*n7*
     j[p4a, 0, 0, n3, -1 + n7, 0, 1, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 
      48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   ((-8 + 3*d - 2*n3 - 2*n7)*(-2 + d - n7)*n7*j[p4a, 0, 0, n3, -1 + n7, 0, 1, 
      1 + n7, 1, 0, 0, 1, 0, 1, 1])/((-6 + 3*d - 2*n3 - 4*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) - ((-8 + 3*d - 2*n3 - 2*n7)*(-2 + d - n7)*n7*
     j[p4a, 0, 0, n3, -1 + n7, 0, 1, 1 + n7, 1, 0, 1, 0, 0, 1, 1])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 
      48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) - 
   ((-8 + 3*d - 2*n3 - 2*n7)*(-2 + d - n7)*n7*j[p4a, 0, 0, n3, -1 + n7, 0, 1, 
      1 + n7, 1, 0, 1, 1, 0, 0, 1])/((-6 + 3*d - 2*n3 - 4*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) + ((-496 + 712*d - 340*d^2 + 54*d^3 - 352*n3 + 
      338*d*n3 - 81*d^2*n3 - 76*n3^2 + 36*d*n3^2 - 4*n3^3 - 904*n7 + 
      852*d*n7 - 200*d^2*n7 - 428*n3*n7 + 202*d*n3*n7 - 44*n3^2*n7 - 
      512*n7^2 + 236*d*n7^2 - 120*n3*n7^2 - 88*n7^3)*
     j[p4a, 0, 0, n3, -1 + n7, 0, 2, -1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(-2 + d - 2*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 
      12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   ((-352 + 508*d - 244*d^2 + 39*d^3 - 280*n3 + 270*d*n3 - 65*d^2*n3 - 
      68*n3^2 + 32*d*n3^2 - 4*n3^3 - 616*n7 + 584*d*n7 - 138*d^2*n7 - 
      324*n3*n7 + 154*d*n3*n7 - 36*n3^2*n7 - 336*n7^2 + 156*d*n7^2 - 
      88*n3*n7^2 - 56*n7^3)*j[p4a, 0, 0, n3, -1 + n7, 0, 2, n7, 0, 0, 1, 1, 
      0, 1, 1])/((-6 + 3*d - 2*n3 - 4*n7)*(-2 + d - 2*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) + ((56 - 46*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 
      40*n7 - 14*d*n7 + 12*n3*n7 + 4*n7^2)*j[p4a, 0, 0, n3, -1 + n7, 0, 2, 
      n7, 1, 0, 0, 1, 0, 1, 1])/((-6 + 3*d - 2*n3 - 4*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) + ((-352 + 508*d - 244*d^2 + 39*d^3 - 280*n3 + 
      270*d*n3 - 65*d^2*n3 - 68*n3^2 + 32*d*n3^2 - 4*n3^3 - 616*n7 + 
      584*d*n7 - 138*d^2*n7 - 324*n3*n7 + 154*d*n3*n7 - 36*n3^2*n7 - 
      336*n7^2 + 156*d*n7^2 - 88*n3*n7^2 - 56*n7^3)*
     j[p4a, 0, 0, n3, -1 + n7, 0, 2, n7, 1, 0, 1, 1, 0, 0, 1])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(-2 + d - 2*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 
      12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   ((-352 + 508*d - 244*d^2 + 39*d^3 - 280*n3 + 270*d*n3 - 65*d^2*n3 - 
      68*n3^2 + 32*d*n3^2 - 4*n3^3 - 616*n7 + 584*d*n7 - 138*d^2*n7 - 
      324*n3*n7 + 154*d*n3*n7 - 36*n3^2*n7 - 336*n7^2 + 156*d*n7^2 - 
      88*n3*n7^2 - 56*n7^3)*j[p4a, 0, 0, n3, -1 + n7, 0, 2, n7, 1, 0, 1, 1, 
      0, 1, 0])/((-6 + 3*d - 2*n3 - 4*n7)*(-2 + d - 2*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) - (2*(-8 + 3*d - 2*n3 - 2*n7)*(-2 + d - n7)*
     j[p4a, 0, 0, n3, n7, -1, 0, n7, 1, 0, 1, 1, 0, 1, 2])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 
      48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) - 
   (2*(-8 + 3*d - 2*n3 - 2*n7)*(-2 + d - n7)*j[p4a, 0, 0, n3, n7, -1, 1, n7, 
      0, 0, 1, 1, 0, 1, 2])/((-6 + 3*d - 2*n3 - 4*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) - (2*(-8 + 3*d - 2*n3 - 2*n7)*(-2 + d - n7)*
     j[p4a, 0, 0, n3, n7, -1, 1, n7, 0, 0, 1, 1, 0, 2, 1])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 
      48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) - 
   (2*(-8 + 3*d - 2*n3 - 2*n7)*(-2 + d - n7)*j[p4a, 0, 0, n3, n7, -1, 1, n7, 
      1, 0, 1, 1, 0, 0, 2])/((-6 + 3*d - 2*n3 - 4*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) + ((-8 + 3*d - 2*n3 - 2*n7)*(-2 + d - n7)*n7*
     j[p4a, 0, 0, n3, n7, -1, 1, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 
      48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) - 
   ((-8 + 3*d - 2*n3 - 2*n7)*(-2 + d - n7)*n7*j[p4a, 0, 0, n3, n7, -1, 1, 
      1 + n7, 1, 0, 0, 1, 0, 1, 1])/((-6 + 3*d - 2*n3 - 4*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) + ((-8 + 3*d - 2*n3 - 2*n7)*(-2 + d - n7)*n7*
     j[p4a, 0, 0, n3, n7, -1, 1, 1 + n7, 1, 0, 1, 0, 0, 1, 1])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 
      48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   ((-8 + 3*d - 2*n3 - 2*n7)*(-2 + d - n7)*n7*j[p4a, 0, 0, n3, n7, -1, 1, 
      1 + n7, 1, 0, 1, 1, 0, 0, 1])/((-6 + 3*d - 2*n3 - 4*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) + ((-4 + 3*d - 2*n3 - 6*n7)*(-2 + d - n7)*
     j[p4a, 0, 0, n3, n7, -1, 2, n7, 0, 0, 1, 1, 0, 1, 1])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 
      48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   ((-4 + 3*d - 2*n3 - 6*n7)*(-2 + d - n7)*j[p4a, 0, 0, n3, n7, -1, 2, n7, 1, 
      0, 0, 1, 0, 1, 1])/((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 
      28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   ((-4 + 3*d - 2*n3 - 6*n7)*(-2 + d - n7)*j[p4a, 0, 0, n3, n7, -1, 2, n7, 1, 
      0, 1, 1, 0, 0, 1])/((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 
      28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   ((-4 + 3*d - 2*n3 - 6*n7)*(-2 + d - n7)*j[p4a, 0, 0, n3, n7, -1, 2, n7, 1, 
      0, 1, 1, 0, 1, 0])/((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 
      28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   ((-8 + 3*d - 2*n3 - 2*n7)*(-2 + d - n7)*j[p4a, 0, 0, n3, n7, 0, 0, 
      -1 + n7, 1, 0, 2, 1, 0, 1, 1])/((-6 + 3*d - 2*n3 - 4*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) + ((560 - 800*d + 380*d^2 - 60*d^3 + 368*n3 - 
      354*d*n3 + 85*d^2*n3 + 76*n3^2 - 36*d*n3^2 + 4*n3^3 + 392*n7 - 
      64*d*n7 - 198*d^2*n7 + 66*d^3*n7 + 68*n3*n7 + 156*d*n3*n7 - 
      89*d^2*n3*n7 - 32*n3^2*n7 + 36*d*n3^2*n7 - 4*n3^3*n7 - 560*n7^2 + 
      792*d*n7^2 - 244*d^2*n7^2 - 348*n3*n7^2 + 226*d*n3*n7^2 - 
      44*n3^2*n7^2 - 528*n7^3 + 284*d*n7^3 - 136*n3*n7^3 - 104*n7^4)*
     j[p4a, 0, 0, n3, n7, 0, 0, n7, 1, 0, 1, 1, 0, 1, 1])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(-2 + d - 2*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 
      12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) - 
   ((-8 + 3*d - 2*n3 - 2*n7)*(-2 + d - n7)*j[p4a, 0, 0, n3, n7, 0, 0, n7, 1, 
      0, 1, 2, -1, 1, 1])/((-6 + 3*d - 2*n3 - 4*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) + ((-8 + 3*d - 2*n3 - 2*n7)*(-2 + d - n7)*
     j[p4a, 0, 0, n3, n7, 0, 0, n7, 1, 0, 1, 2, 0, 1, 1])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 
      48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) - 
   ((-8 + 3*d - 2*n3 - 2*n7)*(-2 + d - n7)*j[p4a, 0, 0, n3, n7, 0, 0, n7, 1, 
      0, 2, 1, -1, 1, 1])/((-6 + 3*d - 2*n3 - 4*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) + ((-8 + 3*d - 2*n3 - 2*n7)*(-2 + d - n7)*
     j[p4a, 0, 0, n3, n7, 0, 0, n7, 1, 0, 2, 1, 0, 1, 1])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 
      48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   ((-8 + 3*d - 2*n3 - 2*n7)*(-2 + d - n7)*j[p4a, 0, 0, n3, n7, 0, 0, n7, 2, 
      0, 1, 1, -1, 1, 1])/((-6 + 3*d - 2*n3 - 4*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) + ((448 - 628*d + 292*d^2 - 45*d^3 + 424*n3 - 
      386*d*n3 + 87*d^2*n3 + 124*n3^2 - 56*d*n3^2 + 12*n3^3 + 712*n7 - 
      660*d*n7 + 152*d^2*n7 + 420*n3*n7 - 186*d*n3*n7 + 60*n3^2*n7 + 
      376*n7^2 - 172*d*n7^2 + 96*n3*n7^2 + 64*n7^3)*
     j[p4a, 0, 0, n3, n7, 0, 1, -2 + n7, 1, 0, 1, 1, 0, 2, 1])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(-2 + d - 2*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 
      12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   ((448 - 628*d + 292*d^2 - 45*d^3 + 424*n3 - 386*d*n3 + 87*d^2*n3 + 
      124*n3^2 - 56*d*n3^2 + 12*n3^3 + 712*n7 - 660*d*n7 + 152*d^2*n7 + 
      420*n3*n7 - 186*d*n3*n7 + 60*n3^2*n7 + 376*n7^2 - 172*d*n7^2 + 
      96*n3*n7^2 + 64*n7^3)*j[p4a, 0, 0, n3, n7, 0, 1, -2 + n7, 1, 0, 1, 2, 
      0, 1, 1])/((-6 + 3*d - 2*n3 - 4*n7)*(-2 + d - 2*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) + ((448 - 628*d + 292*d^2 - 45*d^3 + 424*n3 - 
      386*d*n3 + 87*d^2*n3 + 124*n3^2 - 56*d*n3^2 + 12*n3^3 + 712*n7 - 
      660*d*n7 + 152*d^2*n7 + 420*n3*n7 - 186*d*n3*n7 + 60*n3^2*n7 + 
      376*n7^2 - 172*d*n7^2 + 96*n3*n7^2 + 64*n7^3)*
     j[p4a, 0, 0, n3, n7, 0, 1, -1 + n7, 0, 0, 1, 1, 0, 2, 1])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(-2 + d - 2*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 
      12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) - 
   ((-10 + 5*d - 3*n3 - 6*n7)*(-8 + 3*d - 2*n3 - 2*n7)*
     j[p4a, 0, 0, n3, n7, 0, 1, -1 + n7, 0, 0, 1, 2, 0, 1, 1])/
    ((-2 + d - 2*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 
      22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   ((-104 + 94*d - 21*d^2 - 44*n3 + 20*d*n3 - 4*n3^2 - 96*n7 + 42*d*n7 - 
      20*n3*n7 - 20*n7^2)*j[p4a, 0, 0, n3, n7, 0, 1, -1 + n7, 0, 0, 2, 1, 0, 
      1, 1])/((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 
      4*n3^2 + 48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   ((-448 + 628*d - 292*d^2 + 45*d^3 - 424*n3 + 386*d*n3 - 87*d^2*n3 - 
      124*n3^2 + 56*d*n3^2 - 12*n3^3 - 712*n7 + 660*d*n7 - 152*d^2*n7 - 
      420*n3*n7 + 186*d*n3*n7 - 60*n3^2*n7 - 376*n7^2 + 172*d*n7^2 - 
      96*n3*n7^2 - 64*n7^3)*j[p4a, 0, 0, n3, n7, 0, 1, -1 + n7, 1, 0, 0, 2, 
      0, 1, 1])/((-6 + 3*d - 2*n3 - 4*n7)*(-2 + d - 2*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) - (2*(-8 + 3*d - 2*n3 - 2*n7)*(-2 + d - n7)*
     j[p4a, 0, 0, n3, n7, 0, 1, -1 + n7, 1, 0, 1, 1, 0, 0, 2])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 
      48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   ((-3104 + 5456*d - 3572*d^2 + 1032*d^3 - 111*d^4 - 2528*n3 + 3180*d*n3 - 
      1322*d^2*n3 + 182*d^3*n3 - 664*n3^2 + 512*d*n3^2 - 96*d^2*n3^2 - 
      56*n3^3 + 16*d*n3^3 - 6288*n7 + 8216*d*n7 - 3552*d^2*n7 + 508*d^3*n7 - 
      3480*n3*n7 + 2900*d*n3*n7 - 604*d^2*n3*n7 - 504*n3^2*n7 + 
      188*d*n3^2*n7 - 8*n3^3*n7 - 4736*n7^2 + 4072*d*n7^2 - 868*d^2*n7^2 - 
      1616*n3*n7^2 + 684*d*n3*n7^2 - 96*n3^2*n7^2 - 1536*n7^3 + 648*d*n7^3 - 
      264*n3*n7^3 - 176*n7^4)*j[p4a, 0, 0, n3, n7, 0, 1, -1 + n7, 1, 0, 1, 1, 
      0, 1, 1])/((-6 + 3*d - 2*n3 - 4*n7)*(-2 + d - 2*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) + ((-104 + 94*d - 21*d^2 - 44*n3 + 20*d*n3 - 
      4*n3^2 - 96*n7 + 42*d*n7 - 20*n3*n7 - 20*n7^2)*
     j[p4a, 0, 0, n3, n7, 0, 1, -1 + n7, 1, 0, 2, 0, 0, 1, 1])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 
      48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   ((-104 + 94*d - 21*d^2 - 44*n3 + 20*d*n3 - 4*n3^2 - 96*n7 + 42*d*n7 - 
      20*n3*n7 - 20*n7^2)*j[p4a, 0, 0, n3, n7, 0, 1, -1 + n7, 1, 0, 2, 1, 0, 
      0, 1])/((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 
      4*n3^2 + 48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   ((-4 + 3*d - 2*n3 - 6*n7)*(-2 + d - n7)*j[p4a, 0, 0, n3, n7, 0, 1, 
      -1 + n7, 2, 0, 1, 0, 0, 1, 1])/((-6 + 3*d - 2*n3 - 4*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) + ((-4 + 3*d - 2*n3 - 6*n7)*(-2 + d - n7)*
     j[p4a, 0, 0, n3, n7, 0, 1, -1 + n7, 2, 0, 1, 1, 0, 0, 1])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 
      48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   ((-8 + 3*d - 2*n3 - 2*n7)*(-2 + d - n7)*j[p4a, 0, 0, n3, n7, 0, 1, n7, 0, 
      -1, 2, 1, 0, 1, 1])/((-6 + 3*d - 2*n3 - 4*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) + ((-640 + 892*d - 412*d^2 + 63*d^3 - 40*n3 - 
      82*d*n3 + 105*d^2*n3 - 27*d^3*n3 + 92*n3^2 - 120*d*n3^2 + 36*d^2*n3^2 + 
      20*n3^3 - 12*d*n3^3 - 520*n7 + 162*d*n7 + 175*d^2*n7 - 63*d^3*n7 + 
      456*n3*n7 - 594*d*n3*n7 + 177*d^2*n3*n7 + 264*n3^2*n7 - 140*d*n3^2*n7 + 
      28*n3^3*n7 + 500*n7^2 - 756*d*n7^2 + 234*d^2*n7^2 + 552*n3*n7^2 - 
      298*d*n3*n7^2 + 108*n3^2*n7^2 + 516*n7^3 - 276*d*n7^3 + 144*n3*n7^3 + 
      104*n7^4)*j[p4a, 0, 0, n3, n7, 0, 1, n7, 0, 0, 1, 1, 0, 1, 1])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(-2 + d - 2*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 
      12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   ((-8 + 3*d - 2*n3 - 2*n7)*j[p4a, 0, 0, n3, n7, 0, 1, n7, 0, 0, 1, 2, -1, 
      1, 1])/(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 
     22*d*n7 + 12*n3*n7 + 12*n7^2) + 
   ((8 - 3*d + 2*n3 + 2*n7)*j[p4a, 0, 0, n3, n7, 0, 1, n7, 0, 0, 1, 2, 0, 1, 
      1])/(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
     12*n3*n7 + 12*n7^2) - ((-4 + 3*d - 2*n3 - 6*n7)*(-2 + d - n7)*
     j[p4a, 0, 0, n3, n7, 0, 1, n7, 1, -1, 1, 1, 0, 0, 2])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 
      48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   ((-8 + 3*d - 2*n3 - 2*n7)*(-2 + d - n7)*j[p4a, 0, 0, n3, n7, 0, 1, n7, 1, 
      -1, 2, 1, 0, 0, 1])/((-6 + 3*d - 2*n3 - 4*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) + ((112 - 136*d + 52*d^2 - 6*d^3 - 64*n3 + 
      104*d*n3 - 54*d^2*n3 + 9*d^3*n3 - 48*n3^2 + 48*d*n3^2 - 12*d^2*n3^2 - 
      8*n3^3 + 4*d*n3^3 + 488*n7 - 582*d*n7 + 241*d^2*n7 - 36*d^3*n7 + 
      244*n3*n7 - 204*d*n3*n7 + 43*d^2*n3*n7 + 44*n3^2*n7 - 16*d*n3^2*n7 + 
      4*n3^3*n7 + 548*n7^2 - 496*d*n7^2 + 120*d^2*n7^2 + 272*n3*n7^2 - 
      118*d*n3*n7^2 + 28*n3^2*n7^2 + 276*n7^3 - 140*d*n7^3 + 64*n3*n7^3 + 
      56*n7^4)*j[p4a, 0, 0, n3, n7, 0, 1, n7, 1, 0, 0, 1, 0, 1, 1])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(-2 + d - 2*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 
      12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   ((-464 + 644*d - 296*d^2 + 45*d^3 - 424*n3 + 386*d*n3 - 87*d^2*n3 - 
      124*n3^2 + 56*d*n3^2 - 12*n3^3 - 720*n7 + 656*d*n7 - 148*d^2*n7 - 
      420*n3*n7 + 186*d*n3*n7 - 60*n3^2*n7 - 360*n7^2 + 160*d*n7^2 - 
      96*n3*n7^2 - 56*n7^3)*j[p4a, 0, 0, n3, n7, 0, 1, n7, 1, 0, 0, 2, -1, 1, 
      1])/((-6 + 3*d - 2*n3 - 4*n7)*(-2 + d - 2*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) + ((464 - 644*d + 296*d^2 - 45*d^3 + 424*n3 - 
      386*d*n3 + 87*d^2*n3 + 124*n3^2 - 56*d*n3^2 + 12*n3^3 + 720*n7 - 
      656*d*n7 + 148*d^2*n7 + 420*n3*n7 - 186*d*n3*n7 + 60*n3^2*n7 + 
      360*n7^2 - 160*d*n7^2 + 96*n3*n7^2 + 56*n7^3)*
     j[p4a, 0, 0, n3, n7, 0, 1, n7, 1, 0, 0, 2, 0, 1, 1])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(-2 + d - 2*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 
      12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   ((-128 + 164*d - 68*d^2 + 9*d^3 + 56*n3 - 96*d*n3 + 52*d^2*n3 - 9*d^3*n3 + 
      48*n3^2 - 48*d*n3^2 + 12*d^2*n3^2 + 8*n3^3 - 4*d*n3^3 - 536*n7 + 
      636*d*n7 - 256*d^2*n7 + 36*d^3*n7 - 256*n3*n7 + 210*d*n3*n7 - 
      43*d^2*n3*n7 - 44*n3^2*n7 + 16*d*n3^2*n7 - 4*n3^3*n7 - 592*n7^2 + 
      520*d*n7^2 - 120*d^2*n7^2 - 276*n3*n7^2 + 118*d*n3*n7^2 - 
      28*n3^2*n7^2 - 288*n7^3 + 140*d*n7^3 - 64*n3*n7^3 - 56*n7^4)*
     j[p4a, 0, 0, n3, n7, 0, 1, n7, 1, 0, 1, 0, 0, 1, 1])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(-2 + d - 2*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 
      12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   (2*(-8 + 3*d - 2*n3 - 2*n7)*(-2 + d - n7)*j[p4a, 0, 0, n3, n7, 0, 1, n7, 
      1, 0, 1, 1, -1, 0, 2])/((-6 + 3*d - 2*n3 - 4*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) + (2*(-8 + 3*d - 2*n3 - 2*n7)*(-2 + d - n7)*
     j[p4a, 0, 0, n3, n7, 0, 1, n7, 1, 0, 1, 1, -1, 2, 0])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 
      48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   ((-144 + 204*d - 96*d^2 + 15*d^3 + 72*n3 - 112*d*n3 + 56*d^2*n3 - 
      9*d^3*n3 + 80*n3^2 - 76*d*n3^2 + 18*d^2*n3^2 + 16*n3^3 - 8*d*n3^3 - 
      576*n7 + 664*d*n7 - 242*d^2*n7 + 27*d^3*n7 - 224*n3*n7 + 192*d*n3*n7 - 
      42*d^2*n3*n7 - 2*d*n3^2*n7 + 4*n3^3*n7 - 552*n7^2 + 418*d*n7^2 - 
      75*d^2*n7^2 - 260*n3*n7^2 + 116*d*n3*n7^2 - 16*n3^2*n7^2 - 188*n7^3 + 
      68*d*n7^3 - 64*n3*n7^3 - 20*n7^4)*j[p4a, 0, 0, n3, n7, 0, 1, n7, 1, 0, 
      1, 1, 0, 0, 1])/((-6 + 3*d - 2*n3 - 4*n7)*(-2 + d - 2*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) + ((-4 + 3*d - 2*n3 - 6*n7)*(-2 + d - n7)*
     j[p4a, 0, 0, n3, n7, 0, 1, n7, 1, 0, 1, 1, 0, 0, 2])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 
      48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   ((400 - 580*d + 280*d^2 - 45*d^3 + 264*n3 - 242*d*n3 + 49*d^2*n3 + 
      3*d^3*n3 + 60*n3^2 - 24*d*n3^2 - 2*d^2*n3^2 + 4*n3^3 + 336*n7 - 
      136*d*n7 - 100*d^2*n7 + 42*d^3*n7 + 4*n3*n7 + 162*d*n3*n7 - 
      78*d^2*n3*n7 - 44*n3^2*n7 + 38*d*n3^2*n7 - 4*n3^3*n7 - 264*n7^2 + 
      442*d*n7^2 - 149*d^2*n7^2 - 268*n3*n7^2 + 172*d*n3*n7^2 - 
      40*n3^2*n7^2 - 292*n7^3 + 168*d*n7^3 - 96*n3*n7^3 - 60*n7^4)*
     j[p4a, 0, 0, n3, n7, 0, 1, n7, 1, 0, 1, 1, 0, 1, 0])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(-2 + d - 2*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 
      12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) - 
   ((-8 + 3*d - 2*n3 - 2*n7)*(-2 + d - n7)*j[p4a, 0, 0, n3, n7, 0, 1, n7, 1, 
      0, 1, 1, 0, 2, 0])/((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 
      28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   ((104 - 94*d + 21*d^2 + 44*n3 - 20*d*n3 + 4*n3^2 + 96*n7 - 42*d*n7 + 
      20*n3*n7 + 20*n7^2)*j[p4a, 0, 0, n3, n7, 0, 1, n7, 1, 0, 2, 0, -1, 1, 
      1])/((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 
      4*n3^2 + 48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   ((16 - 52*d + 40*d^2 - 9*d^3 + 24*n3 - 36*d*n3 + 12*d^2*n3 + 8*n3^2 - 
      4*d*n3^2 + 176*n7 - 200*d*n7 + 56*d^2*n7 + 96*n3*n7 - 52*d*n3*n7 + 
      8*n3^2*n7 + 168*n7^2 - 88*d*n7^2 + 40*n3*n7^2 + 40*n7^3)*
     j[p4a, 0, 0, n3, n7, 0, 1, n7, 1, 0, 2, 0, 0, 1, 1])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(-2 + d - 2*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 
      12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   ((12 - 5*d + 2*n3 + 4*n7)*j[p4a, 0, 0, n3, n7, 0, 2, -1 + n7, 0, 0, 1, 1, 
      0, 1, 1])/(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 
     22*d*n7 + 12*n3*n7 + 12*n7^2) - (4*(-4 + d - 2*n7)*(-2 + d - n7)*
     j[p4a, 0, 0, n3, n7, 0, 2, -1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    ((-2 + d - 2*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 
      22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   ((-56 + 46*d - 9*d^2 - 28*n3 + 12*d*n3 - 4*n3^2 - 40*n7 + 14*d*n7 - 
      12*n3*n7 - 4*n7^2)*j[p4a, 0, 0, n3, n7, 0, 2, n7, 0, -1, 1, 1, 0, 1, 
      1])/((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 
      4*n3^2 + 48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   ((352 - 508*d + 244*d^2 - 39*d^3 + 280*n3 - 270*d*n3 + 65*d^2*n3 + 
      68*n3^2 - 32*d*n3^2 + 4*n3^3 + 616*n7 - 584*d*n7 + 138*d^2*n7 + 
      324*n3*n7 - 154*d*n3*n7 + 36*n3^2*n7 + 336*n7^2 - 156*d*n7^2 + 
      88*n3*n7^2 + 56*n7^3)*j[p4a, 0, 0, n3, n7, 0, 2, n7, 0, 0, 1, 1, -1, 1, 
      1])/((-6 + 3*d - 2*n3 - 4*n7)*(-2 + d - 2*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) - (2*(-8 + 3*d - 2*n3 - 2*n7)*(-2 + d - n7)*n7*
     j[p4a, 0, 0, n3, 1 + n7, -1, 0, n7, 1, 0, 1, 1, 0, 1, 1])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 
      48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   ((-20 + 9*d - 6*n3 - 10*n7)*(-2 + d - n7)*n7*j[p4a, 0, 0, n3, 1 + n7, -1, 
      1, n7, 0, 0, 1, 1, 0, 1, 1])/((-6 + 3*d - 2*n3 - 4*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) + ((-4 + 3*d - 2*n3 - 6*n7)*(-2 + d - n7)*n7*
     j[p4a, 0, 0, n3, 1 + n7, -1, 1, n7, 1, 0, 0, 1, 0, 1, 1])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 
      48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) - 
   ((-4 + 3*d - 2*n3 - 6*n7)*(-2 + d - n7)*n7*j[p4a, 0, 0, n3, 1 + n7, -1, 1, 
      n7, 1, 0, 1, 0, 0, 1, 1])/((-6 + 3*d - 2*n3 - 4*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) + ((-4 + 3*d - 2*n3 - 6*n7)*(-2 + d - n7)*n7*
     j[p4a, 0, 0, n3, 1 + n7, -1, 1, n7, 1, 0, 1, 1, 0, 1, 0])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 
      48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   (2*(-8 + 3*d - 2*n3 - 2*n7)*(-2 + d - n7)*n7*j[p4a, 0, 0, n3, 1 + n7, 0, 
      0, -1 + n7, 1, 0, 1, 1, 0, 1, 1])/((-6 + 3*d - 2*n3 - 4*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) - ((-20 + 9*d - 6*n3 - 10*n7)*(-2 + d - n7)*n7*
     j[p4a, 0, 0, n3, 1 + n7, 0, 1, -1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 
      48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) - 
   ((-4 + 3*d - 2*n3 - 6*n7)*(-2 + d - n7)*n7*j[p4a, 0, 0, n3, 1 + n7, 0, 1, 
      -1 + n7, 1, 0, 0, 1, 0, 1, 1])/((-6 + 3*d - 2*n3 - 4*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) + ((-4 + 3*d - 2*n3 - 6*n7)*(-2 + d - n7)*n7*
     j[p4a, 0, 0, n3, 1 + n7, 0, 1, -1 + n7, 1, 0, 1, 0, 0, 1, 1])/
    ((-6 + 3*d - 2*n3 - 4*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 
      48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) - 
   ((-4 + 3*d - 2*n3 - 6*n7)*(-2 + d - n7)*n7*j[p4a, 0, 0, n3, 1 + n7, 0, 1, 
      -1 + n7, 1, 0, 1, 1, 0, 1, 0])/((-6 + 3*d - 2*n3 - 4*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) - (4*(-2 + d - n7)*(-4*n7 + d*n7 - 2*n7^2)*
     j[p4a, 0, 0, n3, 1 + n7, 0, 1, -1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    ((-2 + d - 2*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 
      22*d*n7 + 12*n3*n7 + 12*n7^2)) - 
   (8*(-2 + d - n7)*n7*j[p4a, 0, 0, n3, 1 + n7, 0, 2, -1 + n7, 0, 0, 1, 1, 0, 
      1, 1])/((-2 + d - 2*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 
      48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) - 
   (3*n3*(-2 + d - n7)*(8 - 3*d + 2*n3 + 2*n7)*j[p4a, 0, 0, 1 + n3, -1 + n7, 
      0, 1, n7, 0, 0, 1, 1, 0, 1, 1])/((6 - 3*d + 2*n3 + 4*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) + (n3*(-2 + d - n7)*(8 - 3*d + 2*n3 + 2*n7)*
     j[p4a, 0, 0, 1 + n3, -1 + n7, 0, 1, n7, 1, 0, 0, 1, 0, 1, 1])/
    ((6 - 3*d + 2*n3 + 4*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 
      48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) - 
   (n3*(-2 + d - n7)*(8 - 3*d + 2*n3 + 2*n7)*j[p4a, 0, 0, 1 + n3, -1 + n7, 0, 
      1, n7, 1, 0, 1, 0, 0, 1, 1])/((6 - 3*d + 2*n3 + 4*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) - (2*n3*(-2 + d - n7)*(8 - 3*d + 2*n3 + 2*n7)*
     j[p4a, 0, 0, 1 + n3, -1 + n7, 0, 1, n7, 1, 0, 1, 1, 0, 0, 1])/
    ((6 - 3*d + 2*n3 + 4*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 
      48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   (8*n3*(-2 + d - n7)*j[p4a, 0, 0, 1 + n3, -1 + n7, 0, 2, -1 + n7, 1, 0, 1, 
      1, 0, 1, 1])/((-2 + d - 2*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 
      4*n3^2 + 48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) - 
   (n3*(-2 + d - n7)*(36 - 15*d + 10*n3 + 14*n7)*j[p4a, 0, 0, 1 + n3, n7, 0, 
      1, -1 + n7, 0, 0, 1, 1, 0, 1, 1])/((6 - 3*d + 2*n3 + 4*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) - (n3*(-2 + d - n7)*(4 - 3*d + 2*n3 + 6*n7)*
     j[p4a, 0, 0, 1 + n3, n7, 0, 1, -1 + n7, 1, 0, 0, 1, 0, 1, 1])/
    ((6 - 3*d + 2*n3 + 4*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 
      48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   (n3*(-2 + d - n7)*(4 - 3*d + 2*n3 + 6*n7)*j[p4a, 0, 0, 1 + n3, n7, 0, 1, 
      -1 + n7, 1, 0, 1, 0, 0, 1, 1])/((6 - 3*d + 2*n3 + 4*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) - (n3*(-2 + d - n7)*(36 - 15*d + 10*n3 + 14*n7)*
     j[p4a, 0, 0, 1 + n3, n7, 0, 1, -1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    ((6 - 3*d + 2*n3 + 4*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 
      48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) - 
   (n3*(-2 + d - n7)*(8 - 3*d + 2*n3 + 2*n7)*j[p4a, 0, 0, 1 + n3, n7, 0, 1, 
      -1 + n7, 1, 0, 1, 1, 0, 1, 0])/((6 - 3*d + 2*n3 + 4*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) - (4*(-2 + d - n7)*(-8*n3 + 3*d*n3 - 2*n3^2 - 
      4*n3*n7)*j[p4a, 0, 0, 1 + n3, n7, 0, 1, -1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    ((-2 + d - 2*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 
      22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   (2*n3*(-2 + d - n7)*(8 - 3*d + 2*n3 + 2*n7)*j[p4a, 0, 0, 1 + n3, n7, 0, 1, 
      n7, 1, 0, 1, 1, -1, 0, 1])/((6 - 3*d + 2*n3 + 4*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) + (2*n3*(-2 + d - n7)*(8 - 3*d + 2*n3 + 2*n7)*
     j[p4a, 0, 0, 1 + n3, n7, 0, 1, n7, 1, 0, 1, 1, -1, 1, 0])/
    ((6 - 3*d + 2*n3 + 4*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 
      48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) + 
   (n3*(-2 + d - n7)*(4 - 3*d + 2*n3 + 6*n7)*j[p4a, 0, 0, 1 + n3, n7, 0, 1, 
      n7, 1, 0, 1, 1, 0, 0, 1])/((6 - 3*d + 2*n3 + 4*n7)*
     (40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 48*n7 - 22*d*n7 + 
      12*n3*n7 + 12*n7^2)) - (n3*(-2 + d - n7)*(8 - 3*d + 2*n3 + 2*n7)*
     j[p4a, 0, 0, 1 + n3, n7, 0, 1, n7, 1, 0, 1, 1, 0, 1, 0])/
    ((6 - 3*d + 2*n3 + 4*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 
      48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)) - 
   (8*n3*(-2 + d - n7)*j[p4a, 0, 0, 1 + n3, n7, 0, 2, -1 + n7, 0, 0, 1, 1, 0, 
      1, 1])/((-2 + d - 2*n7)*(40 - 38*d + 9*d^2 + 28*n3 - 12*d*n3 + 4*n3^2 + 
      48*n7 - 22*d*n7 + 12*n3*n7 + 12*n7^2)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, (n4_)?Positive, 
    (n5_)?NonPositive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
    (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n10 == 1 && n11 == 1 && n12 == 0 && 
    n13 == 1 && n14 == 1 && n2 == 0 && n3 == 1 && n4 == n7 && n5 == 0 && 
    n6 == 1 && n8 == 1 && n9 == 0 && n1 != 0 -> 
  ((-28 + 22*d - 4*d^2 - 2*n1 + d*n1 - 34*n7 + 11*d*n7 - 3*n1*n7 - 6*n7^2)*
     j[p4a, n1, 0, 0, n7, 0, 1, n7, 1, 0, 1, 1, 0, 2, 1])/
    (-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + 
     d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 
     3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3) - 
   ((-2 + d - n7)*(-1 - n1 + n7)*j[p4a, n1, 0, 1, n7, 0, 0, n7, 2, 0, 1, 1, 
      0, 1, 1])/(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 
     2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 
     3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3) + 
   ((68 - 82*d + 32*d^2 - 4*d^3 + 16*n1 - 14*d*n1 + 3*d^2*n1 + 122*n7 - 
      94*d*n7 + 17*d^2*n7 + 20*n1*n7 - 9*d*n1*n7 + 72*n7^2 - 24*d*n7^2 + 
      8*n1*n7^2 + 10*n7^3)*j[p4a, n1, 0, 1, n7, 0, 1, n7, 1, 0, 0, 2, 0, 1, 
      1])/((-2 + d - 2*n7)*(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 
      4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 
      14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) - 
   ((-2 + d - n7)*(-1 - n1 + n7)*j[p4a, n1, 0, 1, n7, 0, 1, n7, 1, 0, 1, 1, 
      0, 2, 0])/(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 
     2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 
     3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3) - 
   ((-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*j[p4a, n1, 0, 2, n7, 0, 1, n7, 1, 
      0, 1, 1, 0, 0, 1])/((-2 + d - 2*n7)*(-76 + 88*d - 33*d^2 + 4*d^3 - 
      26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 
      16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 
      9*n1*n7^2 - 6*n7^3)) - ((-2 + d - n7)*(-1 - n1 + n7)*
     j[p4a, n1, 0, 2, n7, 0, 1, n7, 1, 0, 1, 1, 0, 1, 0])/
    (-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + 
     d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 
     3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3) + 
   ((-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, -1, 0, n7, 0, 1, n7, 
      1, 0, 1, 1, 0, 1, 2])/((-2 + d - 2*n7)*(-76 + 88*d - 33*d^2 + 4*d^3 - 
      26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 
      16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 
      9*n1*n7^2 - 6*n7^3)) + ((-2 + d - n7)*n7*(-1 - n1 + n7)*
     j[p4a, 1 + n1, -1, 0, n7, 0, 1, 1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    (-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + 
     d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 
     3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3) - 
   ((-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, -1, 1, n7, 0, 0, n7, 1, 0, 2, 
      1, 0, 1, 1])/(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 
     4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 
     14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3) - 
   ((-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, -1, 1, n7, 0, 1, n7, 
      1, 0, 1, 1, 0, 0, 2])/((-2 + d - 2*n7)*(-76 + 88*d - 33*d^2 + 4*d^3 - 
      26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 
      16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 
      9*n1*n7^2 - 6*n7^3)) - ((-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*
     j[p4a, 1 + n1, -1, 1, n7, 0, 1, n7, 1, 0, 2, 0, 0, 1, 1])/
    ((-2 + d - 2*n7)*(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 
      4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 
      14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) - 
   ((-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, -1, 1, n7, 0, 1, n7, 
      2, 0, 1, 0, 0, 1, 1])/((-2 + d - 2*n7)*(-76 + 88*d - 33*d^2 + 4*d^3 - 
      26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 
      16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 
      9*n1*n7^2 - 6*n7^3)) - ((-2 + d - n7)*n7*(-1 - n1 + n7)*
     j[p4a, 1 + n1, -1, 1, n7, 0, 1, 1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    (-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + 
     d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 
     3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3) - 
   ((-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, -1, 1, n7, 0, 2, n7, 
      1, 0, 0, 1, 0, 1, 1])/((-2 + d - 2*n7)*(-76 + 88*d - 33*d^2 + 4*d^3 - 
      26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 
      16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 
      9*n1*n7^2 - 6*n7^3)) - (2*(-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*
     j[p4a, 1 + n1, -1, 2, n7, 0, 1, -1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    ((-2 + d - 2*n7)*(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 
      4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 
      14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) + 
   ((-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, -1, 2, n7, 0, 1, n7, 1, 0, 1, 
      1, 0, 1, 0])/(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 
     4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 
     14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3) + 
   ((-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 0, -1 + n7, 0, 1, 
      n7, 1, 0, 1, 1, 0, 1, 2])/((-2 + d - 2*n7)*(-76 + 88*d - 33*d^2 + 
      4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 
      94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 
      18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) + 
   ((-2 + d - n7)*n7*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 0, -1 + n7, 0, 1, 
      1 + n7, 1, 0, 1, 1, 0, 1, 1])/(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 
     21*d*n1 - 4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 
     41*n1*n7 + 14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 
     6*n7^3) - ((-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*
     j[p4a, 1 + n1, 0, 0, n7, -1, 1, n7, 1, 0, 1, 1, 0, 1, 2])/
    ((-2 + d - 2*n7)*(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 
      4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 
      14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) - 
   ((-2 + d - n7)*n7*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 0, n7, -1, 1, 1 + n7, 
      1, 0, 1, 1, 0, 1, 1])/(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 
     4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 
     14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3) - 
   ((-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 0, n7, 0, 1, 
      -1 + n7, 1, 0, 1, 1, 0, 1, 2])/((-2 + d - 2*n7)*
     (-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + 
      d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 
      3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) - 
   ((-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 0, n7, 0, 1, 
      -1 + n7, 1, 0, 2, 1, 0, 1, 1])/((-2 + d - 2*n7)*
     (-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + 
      d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 
      3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) - 
   ((-1 - n1 + n7)*(20 - 16*d + 3*d^2 + 4*n1 - 2*d*n1 + 30*n7 - 10*d*n7 + 
      4*n1*n7 + 6*n7^2)*j[p4a, 1 + n1, 0, 0, n7, 0, 1, n7, 1, -1, 1, 1, 0, 1, 
      2])/((-2 + d - 2*n7)*(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 
      4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 
      14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) - 
   ((-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 0, n7, 0, 1, n7, 1, -1, 2, 
      1, 0, 1, 1])/(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 
     4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 
     14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3) + 
   ((-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 0, n7, 0, 1, n7, 
      1, 0, 1, 1, -1, 1, 2])/((-2 + d - 2*n7)*(-76 + 88*d - 33*d^2 + 4*d^3 - 
      26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 
      16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 
      9*n1*n7^2 - 6*n7^3)) - (2*(-2 + d - n7)*(-1 + n7)^2*(-1 - n1 + n7)*
     j[p4a, 1 + n1, 0, 0, n7, 0, 1, n7, 1, 0, 1, 1, 0, 1, 1])/
    ((-2 + d - 2*n7)*(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 
      4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 
      14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) - 
   ((-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 0, n7, 0, 1, n7, 
      1, 0, 1, 1, 0, 1, 2])/((-2 + d - 2*n7)*(-76 + 88*d - 33*d^2 + 4*d^3 - 
      26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 
      16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 
      9*n1*n7^2 - 6*n7^3)) - ((-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*
     j[p4a, 1 + n1, 0, 0, n7, 0, 2, -1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    ((-2 + d - 2*n7)*(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 
      4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 
      14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) - 
   ((-4 + d)*(-2 + d - n7)*n7*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 0, 1 + n7, 0, 
      1, -1 + n7, 1, 0, 1, 1, 0, 1, 1])/((-2 + d - 2*n7)*
     (-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + 
      d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 
      3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) - 
   ((-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, -1 + n7, 0, 0, 
      n7, 1, 0, 1, 1, 0, 1, 2])/((-2 + d - 2*n7)*(-76 + 88*d - 33*d^2 + 
      4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 
      94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 
      18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) - 
   ((-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, -1 + n7, 0, 1, 
      n7, 0, 0, 1, 1, 0, 1, 2])/((-2 + d - 2*n7)*(-76 + 88*d - 33*d^2 + 
      4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 
      94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 
      18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) - 
   ((-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, -1 + n7, 0, 1, 
      n7, 1, 0, 1, 1, 0, 0, 2])/((-2 + d - 2*n7)*(-76 + 88*d - 33*d^2 + 
      4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 
      94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 
      18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) - 
   ((-14 + 4*d - 2*n1 - 3*n7)*(-2 + d - n7)*(1 + n1 - n7)*
     j[p4a, 1 + n1, 0, 1, -1 + n7, 0, 1, n7, 1, 0, 1, 1, 0, 1, 1])/
    (-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + 
     d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 
     3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3) - 
   ((-14 + 4*d - 2*n1 - 3*n7)*(1 + n1 - n7)*j[p4a, 1 + n1, 0, 1, -1 + n7, 0, 
      1, n7, 1, 0, 1, 1, 0, 1, 2])/(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 
     21*d*n1 - 4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 
     41*n1*n7 + 14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 
     6*n7^3) + ((-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, -1 + n7, 0, 
      1, n7, 2, 0, 1, 0, 0, 1, 1])/(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 
     21*d*n1 - 4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 
     41*n1*n7 + 14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 
     6*n7^3) + ((-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, -1 + n7, 0, 
      1, n7, 2, 0, 1, 1, 0, 0, 1])/(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 
     21*d*n1 - 4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 
     41*n1*n7 + 14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 
     6*n7^3) - (2*(-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, -1 + n7, 
      0, 1, n7, 2, 0, 1, 1, 0, 1, 1])/(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 
     21*d*n1 - 4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 
     41*n1*n7 + 14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 
     6*n7^3) - ((-2 + d - n7)*n7*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, -1 + n7, 
      0, 1, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/(-76 + 88*d - 33*d^2 + 4*d^3 - 
     26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 
     16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 
     9*n1*n7^2 - 6*n7^3) - ((-2 + d - n7)*n7*(-1 - n1 + n7)*
     j[p4a, 1 + n1, 0, 1, -1 + n7, 0, 1, 1 + n7, 1, 0, 0, 1, 0, 1, 1])/
    (-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + 
     d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 
     3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3) + 
   ((-2 + d - n7)*n7*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, -1 + n7, 0, 1, 
      1 + n7, 1, 0, 1, 0, 0, 1, 1])/(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 
     21*d*n1 - 4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 
     41*n1*n7 + 14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 
     6*n7^3) - ((-2 + d - n7)*n7*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, -1 + n7, 
      0, 1, 1 + n7, 1, 0, 1, 1, 0, 0, 1])/(-76 + 88*d - 33*d^2 + 4*d^3 - 
     26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 
     16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 
     9*n1*n7^2 - 6*n7^3) + ((-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*
     j[p4a, 1 + n1, 0, 1, -1 + n7, 0, 2, -1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    ((-2 + d - 2*n7)*(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 
      4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 
      14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) + 
   ((-1 - n1 + n7)*(20 - 16*d + 3*d^2 + 4*n1 - 2*d*n1 + 30*n7 - 10*d*n7 + 
      4*n1*n7 + 6*n7^2)*j[p4a, 1 + n1, 0, 1, -1 + n7, 0, 2, n7, 1, 0, 0, 1, 
      0, 1, 1])/((-2 + d - 2*n7)*(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 
      21*d*n1 - 4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 
      41*n1*n7 + 14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 
      6*n7^3)) + ((-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*
     j[p4a, 1 + n1, 0, 1, n7, -1, 0, n7, 1, 0, 1, 1, 0, 1, 2])/
    ((-2 + d - 2*n7)*(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 
      4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 
      14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) + 
   ((-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, n7, -1, 1, n7, 
      0, 0, 1, 1, 0, 1, 2])/((-2 + d - 2*n7)*(-76 + 88*d - 33*d^2 + 4*d^3 - 
      26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 
      16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 
      9*n1*n7^2 - 6*n7^3)) + ((-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*
     j[p4a, 1 + n1, 0, 1, n7, -1, 1, n7, 1, 0, 1, 1, 0, 0, 2])/
    ((-2 + d - 2*n7)*(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 
      4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 
      14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) + 
   ((-2 + d - n7)*n7*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, n7, -1, 1, 1 + n7, 
      0, 0, 1, 1, 0, 1, 1])/(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 
     4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 
     14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3) + 
   ((-2 + d - n7)*n7*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, n7, -1, 1, 1 + n7, 
      1, 0, 0, 1, 0, 1, 1])/(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 
     4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 
     14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3) - 
   ((-2 + d - n7)*n7*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, n7, -1, 1, 1 + n7, 
      1, 0, 1, 0, 0, 1, 1])/(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 
     4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 
     14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3) + 
   ((-2 + d - n7)*n7*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, n7, -1, 1, 1 + n7, 
      1, 0, 1, 1, 0, 0, 1])/(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 
     4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 
     14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3) - 
   ((-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, n7, -1, 2, 
      -1 + n7, 1, 0, 1, 1, 0, 1, 1])/((-2 + d - 2*n7)*
     (-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + 
      d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 
      3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) + 
   ((-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, n7, -1, 2, n7, 
      1, 0, 0, 1, 0, 1, 1])/((-2 + d - 2*n7)*(-76 + 88*d - 33*d^2 + 4*d^3 - 
      26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 
      16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 
      9*n1*n7^2 - 6*n7^3)) + ((-2 + d - n7)*(-1 - n1 + n7)*
     j[p4a, 1 + n1, 0, 1, n7, 0, 0, -1 + n7, 1, 0, 2, 1, 0, 1, 1])/
    (-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + 
     d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 
     3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3) - 
   ((-2 + d - n7)*(-1 - n1 + n7)*(4 - 2*d + d*n7)*j[p4a, 1 + n1, 0, 1, n7, 0, 
      0, n7, 1, 0, 1, 1, 0, 1, 1])/((-2 + d - 2*n7)*
     (-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + 
      d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 
      3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) - 
   ((-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, n7, 0, 0, n7, 1, 0, 1, 
      2, -1, 1, 1])/(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 
     4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 
     14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3) + 
   ((-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, n7, 0, 0, n7, 1, 0, 1, 
      2, 0, 1, 1])/(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 
     4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 
     14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3) - 
   ((-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, n7, 0, 0, n7, 1, 0, 2, 
      1, -1, 1, 1])/(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 
     4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 
     14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3) + 
   ((-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, n7, 0, 0, n7, 1, 0, 2, 
      1, 0, 1, 1])/(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 
     4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 
     14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3) - 
   ((-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, n7, 0, 0, n7, 2, 0, 1, 
      1, -1, 1, 1])/(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 
     4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 
     14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3) + 
   (2*(-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, n7, 0, 0, n7, 2, 0, 
      1, 1, 0, 1, 1])/(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 
     4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 
     14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3) + 
   ((-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, n7, 0, 1, 
      -2 + n7, 1, 0, 2, 1, 0, 1, 1])/((-2 + d - 2*n7)*
     (-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + 
      d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 
      3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) + 
   ((-68 + 82*d - 32*d^2 + 4*d^3 - 16*n1 + 14*d*n1 - 3*d^2*n1 - 122*n7 + 
      94*d*n7 - 17*d^2*n7 - 20*n1*n7 + 9*d*n1*n7 - 72*n7^2 + 24*d*n7^2 - 
      8*n1*n7^2 - 10*n7^3)*j[p4a, 1 + n1, 0, 1, n7, 0, 1, -1 + n7, 0, 0, 1, 
      2, 0, 1, 1])/((-2 + d - 2*n7)*(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 
      21*d*n1 - 4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 
      41*n1*n7 + 14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 
      6*n7^3)) + ((-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*
     j[p4a, 1 + n1, 0, 1, n7, 0, 1, -1 + n7, 0, 0, 2, 1, 0, 1, 1])/
    ((-2 + d - 2*n7)*(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 
      4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 
      14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) + 
   ((-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, n7, 0, 1, 
      -1 + n7, 1, 0, 1, 1, 0, 0, 2])/((-2 + d - 2*n7)*
     (-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + 
      d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 
      3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) + 
   ((204 - 306*d + 172*d^2 - 43*d^3 + 4*d^4 + 108*n1 - 126*d*n1 + 48*d^2*n1 - 
      6*d^3*n1 + 8*n1^2 - 8*d*n1^2 + 2*d^2*n1^2 + 410*n7 - 472*d*n7 + 
      179*d^2*n7 - 22*d^3*n7 + 178*n1*n7 - 138*d*n1*n7 + 26*d^2*n1*n7 + 
      16*n1^2*n7 - 8*d*n1^2*n7 + 350*n7^2 - 257*d*n7^2 + 45*d^2*n7^2 + 
      108*n1*n7^2 - 39*d*n1*n7^2 + 8*n1^2*n7^2 + 114*n7^3 - 37*d*n7^3 + 
      18*n1*n7^3 + 10*n7^4)*j[p4a, 1 + n1, 0, 1, n7, 0, 1, -1 + n7, 1, 0, 1, 
      1, 0, 1, 1])/((-2 + d - 2*n7)*(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 
      21*d*n1 - 4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 
      41*n1*n7 + 14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 
      6*n7^3)) + ((28 - 22*d + 4*d^2 + 2*n1 - d*n1 + 34*n7 - 11*d*n7 + 
      3*n1*n7 + 6*n7^2)*j[p4a, 1 + n1, 0, 1, n7, 0, 1, -1 + n7, 1, 0, 1, 1, 
      0, 2, 1])/(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 
     2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 
     3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3) - 
   ((-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, n7, 0, 1, -1 + n7, 1, 
      0, 1, 2, 0, 1, 1])/(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 
     4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 
     14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3) + 
   ((-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, n7, 0, 1, 
      -1 + n7, 1, 0, 2, 1, 0, 0, 1])/((-2 + d - 2*n7)*
     (-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + 
      d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 
      3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) + 
   ((-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, n7, 0, 1, 
      -1 + n7, 2, 0, 1, 0, 0, 1, 1])/((-2 + d - 2*n7)*
     (-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + 
      d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 
      3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) + 
   ((-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, n7, 0, 1, n7, 0, -1, 2, 
      1, 0, 1, 1])/(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 
     4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 
     14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3) + 
   ((-2 + d - n7)*(-1 - n1 + n7)*(32 - 22*d + 4*d^2 + 2*n1 - d*n1 + 24*n7 - 
      10*d*n7 + 2*n1*n7 + 8*n7^2)*j[p4a, 1 + n1, 0, 1, n7, 0, 1, n7, 0, 0, 1, 
      1, 0, 1, 1])/((-2 + d - 2*n7)*(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 
      21*d*n1 - 4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 
      41*n1*n7 + 14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 
      6*n7^3)) - ((-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, n7, 0, 1, 
      n7, 0, 0, 1, 2, -1, 1, 1])/(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 
     21*d*n1 - 4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 
     41*n1*n7 + 14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 
     6*n7^3) + ((-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, n7, 0, 1, 
      n7, 0, 0, 1, 2, 0, 1, 1])/(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 
     21*d*n1 - 4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 
     41*n1*n7 + 14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 
     6*n7^3) - ((-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*
     j[p4a, 1 + n1, 0, 1, n7, 0, 1, n7, 1, -1, 1, 1, 0, 0, 2])/
    ((-2 + d - 2*n7)*(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 
      4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 
      14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) + 
   ((-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, n7, 0, 1, n7, 1, -1, 2, 
      1, 0, 0, 1])/(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 
     4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 
     14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3) + 
   ((-2 + d - n7)*(-1 - n1 + n7)*(18 - 19*d + 4*d^2 + 2*n1 - d*n1 + 42*n7 - 
      14*d*n7 + 2*n1*n7 + 8*n7^2)*j[p4a, 1 + n1, 0, 1, n7, 0, 1, n7, 1, 0, 0, 
      1, 0, 1, 1])/((-2 + d - 2*n7)*(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 
      21*d*n1 - 4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 
      41*n1*n7 + 14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 
      6*n7^3)) - ((-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, n7, 0, 1, 
      n7, 1, 0, 0, 2, -1, 1, 1])/(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 
     21*d*n1 - 4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 
     41*n1*n7 + 14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 
     6*n7^3) + (2*(-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, n7, 0, 1, 
      n7, 1, 0, 0, 2, 0, 1, 1])/(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 
     21*d*n1 - 4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 
     41*n1*n7 + 14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 
     6*n7^3) - ((-2 + d - n7)*(-1 - n1 + n7)*(22 - 20*d + 4*d^2 + 2*n1 - 
      d*n1 + 42*n7 - 14*d*n7 + 2*n1*n7 + 8*n7^2)*j[p4a, 1 + n1, 0, 1, n7, 0, 
      1, n7, 1, 0, 1, 0, 0, 1, 1])/((-2 + d - 2*n7)*
     (-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + 
      d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 
      3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) - 
   ((-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, n7, 0, 1, n7, 
      1, 0, 1, 1, -1, 0, 2])/((-2 + d - 2*n7)*(-76 + 88*d - 33*d^2 + 4*d^3 - 
      26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 
      16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 
      9*n1*n7^2 - 6*n7^3)) + ((-4 + d)*(-2 + d - n7)*(-1 + n7)*(-1 - n1 + n7)*
     j[p4a, 1 + n1, 0, 1, n7, 0, 1, n7, 1, 0, 1, 1, 0, 0, 1])/
    ((-2 + d - 2*n7)*(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 
      4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 
      14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) + 
   ((-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, n7, 0, 1, n7, 
      1, 0, 1, 1, 0, 0, 2])/((-2 + d - 2*n7)*(-76 + 88*d - 33*d^2 + 4*d^3 - 
      26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 
      16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 
      9*n1*n7^2 - 6*n7^3)) - ((-2 + d - n7)*(-2 + n7)*(-1 - n1 + n7)*
     j[p4a, 1 + n1, 0, 1, n7, 0, 1, n7, 1, 0, 1, 1, 0, 1, 0])/
    (-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + 
     d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 
     3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3) - 
   ((-6 + 2*d - n1 - 4*n7)*(-2 + d - n7)*(1 + n1 - n7)*
     j[p4a, 1 + n1, 0, 1, n7, 0, 1, n7, 1, 0, 1, 1, 0, 1, 1])/
    (-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + 
     d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 
     3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3) + 
   ((-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, n7, 0, 1, n7, 1, 0, 1, 
      1, 0, 2, 0])/(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 
     4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 
     14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3) - 
   ((-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, n7, 0, 1, n7, 
      1, 0, 2, 0, -1, 1, 1])/((-2 + d - 2*n7)*(-76 + 88*d - 33*d^2 + 4*d^3 - 
      26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 
      16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 
      9*n1*n7^2 - 6*n7^3)) + ((-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*
     j[p4a, 1 + n1, 0, 1, n7, 0, 1, n7, 1, 0, 2, 0, 0, 1, 1])/
    ((-2 + d - 2*n7)*(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 
      4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 
      14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) + 
   ((-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, n7, 0, 2, 
      -2 + n7, 1, 0, 1, 1, 0, 1, 1])/((-2 + d - 2*n7)*
     (-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + 
      d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 
      3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) - 
   ((-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, n7, 0, 2, 
      -1 + n7, 1, 0, 1, 1, -1, 1, 1])/((-2 + d - 2*n7)*
     (-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + 
      d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 
      3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) + 
   ((-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, n7, 0, 2, 
      -1 + n7, 1, 0, 1, 1, 0, 0, 1])/((-2 + d - 2*n7)*
     (-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + 
      d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 
      3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) + 
   ((-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, n7, 0, 2, 
      -1 + n7, 1, 0, 1, 1, 0, 1, 0])/((-2 + d - 2*n7)*
     (-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + 
      d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 
      3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) - 
   ((-1 - n1 + n7)*(20 - 16*d + 3*d^2 + 4*n1 - 2*d*n1 + 30*n7 - 10*d*n7 + 
      4*n1*n7 + 6*n7^2)*j[p4a, 1 + n1, 0, 1, n7, 0, 2, n7, 0, -1, 1, 1, 0, 1, 
      1])/((-2 + d - 2*n7)*(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 
      4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 
      14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) + 
   ((-4 + d)*(-2 + d - n7)*n7*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, 1 + n7, -1, 
      0, n7, 1, 0, 1, 1, 0, 1, 1])/((-2 + d - 2*n7)*
     (-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + 
      d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 
      3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) - 
   ((-4 + d)*(-2 + d - n7)*n7*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, 1 + n7, -1, 
      1, -1 + n7, 1, 0, 1, 1, 0, 1, 1])/((-2 + d - 2*n7)*
     (-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + 
      d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 
      3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) + 
   ((-4 + d)*(-2 + d - n7)*n7*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, 1 + n7, -1, 
      1, n7, 1, 0, 0, 1, 0, 1, 1])/((-2 + d - 2*n7)*
     (-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + 
      d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 
      3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) - 
   ((-4 + d)*(-2 + d - n7)*n7*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, 1 + n7, -1, 
      1, n7, 1, 0, 1, 0, 0, 1, 1])/((-2 + d - 2*n7)*
     (-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + 
      d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 
      3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) - 
   (3*(-4 + d)*(-2 + d - n7)*n7*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, 1 + n7, 
      0, 0, -1 + n7, 1, 0, 1, 1, 0, 1, 1])/((-2 + d - 2*n7)*
     (-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + 
      d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 
      3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) + 
   ((-4 + d)*(-2 + d - n7)*n7*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, 1 + n7, 0, 
      1, -2 + n7, 1, 0, 1, 1, 0, 1, 1])/((-2 + d - 2*n7)*
     (-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + 
      d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 
      3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) + 
   (2*(-4 + d)*(-2 + d - n7)*n7*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, 1 + n7, 
      0, 1, -1 + n7, 0, 0, 1, 1, 0, 1, 1])/((-2 + d - 2*n7)*
     (-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + 
      d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 
      3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) - 
   ((-4 + d)*(-2 + d - n7)*n7*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, 1 + n7, 0, 
      1, -1 + n7, 1, 0, 0, 1, 0, 1, 1])/((-2 + d - 2*n7)*
     (-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + 
      d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 
      3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) + 
   ((-4 + d)*(-2 + d - n7)*n7*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, 1 + n7, 0, 
      1, -1 + n7, 1, 0, 1, 0, 0, 1, 1])/((-2 + d - 2*n7)*
     (-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + 
      d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 
      3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) + 
   ((-4 + d)*(-2 + d - n7)*n7*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 1, 1 + n7, 0, 
      1, -1 + n7, 1, 0, 1, 1, 0, 1, 0])/((-2 + d - 2*n7)*
     (-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + 
      d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 
      3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) - 
   ((-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 2, -1 + n7, 0, 1, n7, 0, 
      0, 1, 1, 0, 1, 1])/(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 
     4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 
     14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3) - 
   ((-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 2, -1 + n7, 0, 1, n7, 1, 
      0, 0, 1, 0, 1, 1])/(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 
     4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 
     14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3) + 
   ((-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 2, -1 + n7, 0, 1, n7, 1, 
      0, 1, 0, 0, 1, 1])/(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 
     4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 
     14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3) + 
   (3*(-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 2, n7, 0, 1, 
      -2 + n7, 1, 0, 1, 1, 0, 1, 1])/((-2 + d - 2*n7)*
     (-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + 
      d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 
      3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) + 
   (5*(-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 2, n7, 0, 1, 
      -1 + n7, 0, 0, 1, 1, 0, 1, 1])/((-2 + d - 2*n7)*
     (-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + 
      d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 
      3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) - 
   ((-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 2, n7, 0, 1, 
      -1 + n7, 1, 0, 0, 1, 0, 1, 1])/((-2 + d - 2*n7)*
     (-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + 
      d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 
      3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) + 
   ((-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 2, n7, 0, 1, 
      -1 + n7, 1, 0, 1, 0, 0, 1, 1])/((-2 + d - 2*n7)*
     (-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + 
      d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 
      3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) - 
   (2*(-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 2, n7, 0, 1, 
      -1 + n7, 1, 0, 1, 1, -1, 1, 1])/((-2 + d - 2*n7)*
     (-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + 
      d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 
      3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) + 
   (2*(-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 2, n7, 0, 1, 
      -1 + n7, 1, 0, 1, 1, 0, 0, 1])/((-2 + d - 2*n7)*
     (-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + 
      d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 
      3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) - 
   ((-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 2, n7, 0, 1, -1 + n7, 1, 
      0, 1, 1, 0, 1, 0])/(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 
     4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 
     14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3) - 
   ((-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 2, n7, 0, 1, n7, 
      1, 0, 1, 1, -1, 0, 1])/((-2 + d - 2*n7)*(-76 + 88*d - 33*d^2 + 4*d^3 - 
      26*n1 + 21*d*n1 - 4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 
      16*d^2*n7 - 41*n1*n7 + 14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 
      9*n1*n7^2 - 6*n7^3)) + ((-4 + d)*(-2 + d - n7)*(-1 - n1 + n7)*
     j[p4a, 1 + n1, 0, 2, n7, 0, 1, n7, 1, 0, 1, 1, 0, 0, 1])/
    ((-2 + d - 2*n7)*(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 
      4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 
      14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3)) + 
   ((-2 + d - n7)*(-1 - n1 + n7)*j[p4a, 1 + n1, 0, 2, n7, 0, 1, n7, 1, 0, 1, 
      1, 0, 1, 0])/(-76 + 88*d - 33*d^2 + 4*d^3 - 26*n1 + 21*d*n1 - 
     4*d^2*n1 - 2*n1^2 + d*n1^2 - 134*n7 + 94*d*n7 - 16*d^2*n7 - 41*n1*n7 + 
     14*d*n1*n7 - 3*n1^2*n7 - 56*n7^2 + 18*d*n7^2 - 9*n1*n7^2 - 6*n7^3) + 
   ((1 + n1)*(1 + n1 - n7)*(2 - d + n7)*j[p4a, 2 + n1, -1, 1, n7, 0, 1, n7, 
      1, 0, 1, 1, 0, 0, 1])/(76 - 88*d + 33*d^2 - 4*d^3 + 26*n1 - 21*d*n1 + 
     4*d^2*n1 + 2*n1^2 - d*n1^2 + 134*n7 - 94*d*n7 + 16*d^2*n7 + 41*n1*n7 - 
     14*d*n1*n7 + 3*n1^2*n7 + 56*n7^2 - 18*d*n7^2 + 9*n1*n7^2 + 6*n7^3) - 
   ((1 + n1)*(1 + n1 - n7)*(2 - d + n7)*j[p4a, 2 + n1, -1, 1, n7, 0, 1, n7, 
      1, 0, 1, 1, 0, 1, 1])/(76 - 88*d + 33*d^2 - 4*d^3 + 26*n1 - 21*d*n1 + 
     4*d^2*n1 + 2*n1^2 - d*n1^2 + 134*n7 - 94*d*n7 + 16*d^2*n7 + 41*n1*n7 - 
     14*d*n1*n7 + 3*n1^2*n7 + 56*n7^2 - 18*d*n7^2 + 9*n1*n7^2 + 6*n7^3) - 
   ((1 + n1)*(1 + n1 - n7)*(2 - d + n7)*j[p4a, 2 + n1, 0, 1, n7, -1, 1, n7, 
      1, 0, 1, 1, 0, 0, 1])/(76 - 88*d + 33*d^2 - 4*d^3 + 26*n1 - 21*d*n1 + 
     4*d^2*n1 + 2*n1^2 - d*n1^2 + 134*n7 - 94*d*n7 + 16*d^2*n7 + 41*n1*n7 - 
     14*d*n1*n7 + 3*n1^2*n7 + 56*n7^2 - 18*d*n7^2 + 9*n1*n7^2 + 6*n7^3) + 
   (2*(1 + n1)*(1 + n1 - n7)*(2 - d + n7)*j[p4a, 2 + n1, 0, 1, n7, -1, 1, n7, 
      1, 0, 1, 1, 0, 1, 1])/(76 - 88*d + 33*d^2 - 4*d^3 + 26*n1 - 21*d*n1 + 
     4*d^2*n1 + 2*n1^2 - d*n1^2 + 134*n7 - 94*d*n7 + 16*d^2*n7 + 41*n1*n7 - 
     14*d*n1*n7 + 3*n1^2*n7 + 56*n7^2 - 18*d*n7^2 + 9*n1*n7^2 + 6*n7^3) + 
   ((1 + n1)*(1 + n1 - n7)*(2 - d + n7)*j[p4a, 2 + n1, 0, 1, n7, 0, 1, n7, 1, 
      -1, 1, 1, 0, 0, 1])/(76 - 88*d + 33*d^2 - 4*d^3 + 26*n1 - 21*d*n1 + 
     4*d^2*n1 + 2*n1^2 - d*n1^2 + 134*n7 - 94*d*n7 + 16*d^2*n7 + 41*n1*n7 - 
     14*d*n1*n7 + 3*n1^2*n7 + 56*n7^2 - 18*d*n7^2 + 9*n1*n7^2 + 6*n7^3) - 
   (2*(1 + n1)*(1 + n1 - n7)*(2 - d + n7)*j[p4a, 2 + n1, 0, 1, n7, 0, 1, n7, 
      1, -1, 1, 1, 0, 1, 1])/(76 - 88*d + 33*d^2 - 4*d^3 + 26*n1 - 21*d*n1 + 
     4*d^2*n1 + 2*n1^2 - d*n1^2 + 134*n7 - 94*d*n7 + 16*d^2*n7 + 41*n1*n7 - 
     14*d*n1*n7 + 3*n1^2*n7 + 56*n7^2 - 18*d*n7^2 + 9*n1*n7^2 + 6*n7^3)}
