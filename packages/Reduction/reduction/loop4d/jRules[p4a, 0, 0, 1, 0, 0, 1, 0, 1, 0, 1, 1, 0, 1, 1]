{j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n1 == 0 || n13 == 1) -> 
  -((n8*j[p4a, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
       -1 + n13, n14])/(-1 + n13)) - 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4a, 1 + n1, -1 + n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n3*j[p4a, 1 + n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4a, 1 + n1, n2, -1 + n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + ((-2 - n1 + n13 - n2 + n3)*
     j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) + j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, 
    n11, n12, n13, n14] + (n8*j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, 1 + n8, 
      n9, n10, -1 + n11, n12, -1 + n13, n14])/(-1 + n13) - 
   (n8*j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, -1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n8*j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) + 
   (n5*j[p4a, 1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, -1 + n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n5*j[p4a, 1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) - 
   (n5*j[p4a, 1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n13) - 
   (n4*j[p4a, 1 + n1, n2, n3, 1 + n4, n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n4*j[p4a, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4a, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, n8, -1 + n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n4*j[p4a, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4a, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, -1 + n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n4*j[p4a, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n13) - 
   (n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n2*j[p4a, 1 + n1, 1 + n2, -1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4a, 1 + n1, 1 + n2, n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4a, 1 + n1, 1 + n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4a, 1 + n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n2*j[p4a, 1 + n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, -1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (2*n2*j[p4a, 1 + n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) + 
   ((1 + n1)*j[p4a, 2 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) + 
   ((-1 - n1)*j[p4a, 2 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n1 == 0 || n8 == 1) -> 
  -((n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
       n13, n14])/(-1 + n8)) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      n13, n14])/(-1 + n8) + (n4*j[p4a, 1 + n1, -1 + n2, n3, 1 + n4, n5, n6, 
      n7, -1 + n8, n9, n10, n11, n12, n13, n14])/(-1 + n8) + 
   (n12*j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n8) + ((-1 - d + 2*n11 + n12 + n4 + n7 + n8)*
     j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, n13, 
      n14])/(-1 + n8) - (n12*j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, -1 + n8, 
      n9, n10, n11, 1 + n12, n13, n14])/(-1 + n8) + 
   j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, n12, n13, 
    n14] - (n7*j[p4a, 1 + n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, n9, 
      -1 + n10, n11, n12, n13, n14])/(-1 + n8) + 
   (n7*j[p4a, 1 + n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n8) - 
   (n4*j[p4a, 1 + n1, n2, n3, 1 + n4, -1 + n5, n6, n7, -1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n8) - 
   (n4*j[p4a, 1 + n1, n2, n3, 1 + n4, n5, -1 + n6, n7, -1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n8) + 
   (n4*j[p4a, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, -1 + n9, n10, n11, 
      n12, n13, n14])/(-1 + n8) - 
   (n4*j[p4a, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n8) + 
   (n4*j[p4a, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n8) + 
   (n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, -1 + n7, -1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n8) + 
   (n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, -2 + n8, n9, n10, n11, n12, 
      n13, n14])/(-1 + n8) - (n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, 
      -1 + n8, n9, -1 + n10, n11, n12, n13, n14])/(-1 + n8) + 
   (n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n8) - 
   (n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n8) + 
   (n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      n13, n14])/(-1 + n8), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n6 == 1 || n9 == 0) -> 
  (n4*j[p4a, -1 + n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 
      n12, n13, n14])/(-1 + n6) + 
   (n3*j[p4a, -1 + n1, n2, 1 + n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 
      n12, n13, n14])/(-1 + n6) - 
   (n2*j[p4a, -1 + n1, 1 + n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 
      n12, n13, n14])/(-1 + n6) - 
   (n4*j[p4a, n1, -1 + n2, n3, 1 + n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 
      n12, n13, n14])/(-1 + n6) + ((-1 - d + 2*n10 + n2 + n3 + n6 + n7)*
     j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
      n14])/(-1 + n6) + (n7*j[p4a, n1, n2, n3, n4, n5, -1 + n6, 1 + n7, n8, 
      1 + n9, -1 + n10, n11, n12, n13, n14])/(-1 + n6) - 
   (n7*j[p4a, n1, n2, n3, n4, n5, -1 + n6, 1 + n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n6) + j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 
    1 + n9, -1 + n10, n11, n12, n13, n14] + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, -2 + n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, n14])/(-1 + n6) + (n4*j[p4a, n1, n2, n3, 1 + n4, n5, -1 + n6, 
      -1 + n7, n8, 1 + n9, n10, n11, n12, n13, n14])/(-1 + n6) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, n9, n10, n11, n12, 
      n13, n14])/(-1 + n6) + (n4*j[p4a, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, 
      n8, 1 + n9, -1 + n10, n11, n12, n13, n14])/(-1 + n6) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n6) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, -1 + n6, n7, -1 + n8, 1 + n9, n10, n11, 
      n12, n13, n14])/(-1 + n6) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, -1 + n6, n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n6) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n6) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n6) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n6) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, n14])/(-1 + n6) + (n2*j[p4a, n1, 1 + n2, n3, n4, n5, -1 + n6, n7, 
      n8, 1 + n9, -1 + n10, n11, n12, n13, n14])/(-1 + n6), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n14 == 1 || n9 == 0) -> 
  (n5*j[p4a, -1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n4*j[p4a, -1 + n1, n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, n1, -1 + n2, n3, n4, n5, 1 + n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4a, n1, -1 + n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, n1, n2, -1 + n3, n4, n5, 1 + n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   ((-2 + n14 - n9)*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) + j[p4a, n1, n2, n3, n4, n5, n6, n7, 
    n8, 1 + n9, n10, n11, n12, n13, n14] + 
   ((1 + n9)*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 2 + n9, n10, n11, n12, 
      n13, -2 + n14])/(-1 + n14) + 
   ((-1 - n9)*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 2 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, -1 + n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, -1 + n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) + (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 
      1 + n9, -1 + n10, n11, n12, n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 1 + n9, n10, n11, -1 + n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 1 + n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14) - (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, 
      n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) - 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n14) + 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14) + (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, 
      n8, 1 + n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) + (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, 
      1 + n9, -1 + n10, n11, n12, n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n12 == 0 || n8 == 1) -> 
  (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) + ((-1 - d + n1 + 2*n13 + n3 + n5 + n8)*
     j[p4a, n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, n13, 
      n14])/(-1 + n8) + j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 
    1 + n12, -1 + n13, n14] + (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, 
      -1 + n8, n9, n10, n11, 1 + n12, -1 + n13, n14])/(-1 + n8) - 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n8) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, -1 + n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n8) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n8) - 
   (n2*j[p4a, n1, 1 + n2, -1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) + 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, -1 + n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) + 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, -2 + n8, n9, n10, n11, 1 + n12, 
      n13, n14])/(-1 + n8) - (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, 
      -1 + n8, n9, n10, n11, n12, n13, n14])/(-1 + n8) + 
   (2*n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, -1 + n13, n14])/(-1 + n8) + 
   (n1*j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n8) - 
   (n1*j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      n13, n14])/(-1 + n8), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n1 == 0 || n11 == 1) -> 
  -((n7*j[p4a, 1 + n1, -1 + n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, 
       -1 + n11, n12, n13, n14])/(-1 + n11)) - 
   (n3*j[p4a, 1 + n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n12*j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, 
    -1 + n8, n9, n10, n11, n12, n13, n14] + 
   ((-1 - d + n11 + n12 + n4 + n7 + 2*n8)*j[p4a, 1 + n1, n2, n3, n4, n5, n6, 
      n7, n8, n9, n10, -1 + n11, n12, n13, n14])/(-1 + n11) - 
   (n12*j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      1 + n12, -1 + n13, n14])/(-1 + n11) + 
   (n7*j[p4a, 1 + n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n4*j[p4a, 1 + n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n4*j[p4a, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (2*n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, 
      -1 + n11, n12, n13, n14])/(-1 + n11) - 
   (n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      -1 + n12, n13, n14])/(-1 + n11) + 
   (n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, n12, 
      -1 + n13, n14])/(-1 + n11), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n10 == 1 || n2 == 0) -> j[p4a, -1 + n1, 1 + n2, n3, n4, n5, n6, n7, n8, 
    n9, n10, n11, n12, n13, n14] - 
   (n7*j[p4a, n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, -1 + n10, n11, n12, 
      n13, n14])/(-1 + n10) - (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 
      n9, -1 + n10, n11, n12, n13, n14])/(-1 + n10) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, 
      n13, n14])/(-1 + n10) + (n6*j[p4a, n1, 1 + n2, n3, n4, -1 + n5, 1 + n6, 
      n7, n8, n9, -1 + n10, n11, n12, n13, n14])/(-1 + n10) + 
   ((-1 + d - n10 - 2*n2 - n3 - n6 - n7)*j[p4a, n1, 1 + n2, n3, n4, n5, n6, 
      n7, n8, n9, -1 + n10, n11, n12, n13, n14])/(-1 + n10) + 
   (n7*j[p4a, n1, 1 + n2, n3, n4, n5, n6, 1 + n7, -1 + n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n4*j[p4a, n1, 1 + n2, n3, 1 + n4, -1 + n5, n6, n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n4*j[p4a, n1, 1 + n2, n3, 1 + n4, n5, -1 + n6, n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n4*j[p4a, n1, 1 + n2, n3, 1 + n4, n5, n6, -1 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n4*j[p4a, n1, 1 + n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (2*n3*j[p4a, n1, 1 + n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, -1 + n10, 
      n11, n12, n13, n14])/(-1 + n10) - 
   (n3*j[p4a, n1, 1 + n2, 1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, 
      -1 + n12, n13, n14])/(-1 + n10) + 
   (2*n3*j[p4a, n1, 1 + n2, 1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, 
      n12, -1 + n13, n14])/(-1 + n10), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n14 == 1 || n4 == 0) -> 
  (n9*j[p4a, -1 + n1, n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4a, n1, -1 + n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, n1, -1 + n2, n3, 1 + n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + j[p4a, n1, n2, -1 + n3, 1 + n4, n5, n6, 
    n7, n8, n9, n10, n11, n12, n13, n14] - 
   (n6*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   ((-1 - n4)*j[p4a, n1, n2, -1 + n3, 2 + n4, n5, n6, n7, n8, n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) - (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 
      n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) - 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) + (n9*j[p4a, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, 
      n8, 1 + n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) + 
   (n9*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   ((-2 + n14 - n4)*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) + 
   (n9*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, -1 + n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n9*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14) - (n9*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, 
      1 + n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4a, n1, n2, n3, 1 + n4, n5, 1 + n6, -1 + n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (2*n6*j[p4a, n1, n2, n3, 1 + n4, n5, 1 + n6, n7, -1 + n8, n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, n1, n2, n3, 1 + n4, n5, 1 + n6, n7, n8, n9, n10, n11, -1 + n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4a, n1, n2, n3, 1 + n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4a, n1, n2, n3, 1 + n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14) + (n5*j[p4a, n1, n2, n3, 1 + n4, 1 + n5, n6, 
      -1 + n7, n8, n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) - 
   (n5*j[p4a, n1, n2, n3, 1 + n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n14) + 
   (n5*j[p4a, n1, n2, n3, 1 + n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14) + ((1 + n4)*j[p4a, n1, n2, n3, 2 + n4, n5, n6, 
      n7, n8, n9, n10, n11, n12, n13, -2 + n14])/(-1 + n14), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n13 == 1 || n7 == 0) -> 
  -((n8*j[p4a, n1, -1 + n2, n3, n4, n5, n6, 1 + n7, 1 + n8, n9, n10, n11, 
       n12, -1 + n13, n14])/(-1 + n13)) + j[p4a, n1, n2, -1 + n3, n4, n5, n6, 
    1 + n7, n8, n9, n10, n11, n12, n13, n14] + 
   (n5*j[p4a, n1, n2, n3, -1 + n4, 1 + n5, n6, 1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n8*j[p4a, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + ((1 - n13 - n2 + n3 + n4 - n5 + n8)*
     j[p4a, n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) - (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, 
      n10, n11, n12, -1 + n13, n14])/(-1 + n13) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, -1 + n5, n6, 1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, 1 + n7, n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) - 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, 1 + n7, -1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n1*j[p4a, 1 + n1, -1 + n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n1*j[p4a, 1 + n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n1*j[p4a, 1 + n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, -1 + n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n1*j[p4a, 1 + n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, n12, 
      -1 + n13, n14])/(-1 + n13), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n11 == 1 || n7 == 0) -> 
  (n12*j[p4a, n1, -1 + n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   (n8*j[p4a, n1, -1 + n2, n3, n4, n5, n6, 1 + n7, 1 + n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n12*j[p4a, n1, n2, -1 + n3, n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) - 
   (2*n12*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 1 + n12, 
      n13, n14])/(-1 + n11) - (n8*j[p4a, n1, n2, n3, n4, n5, n6, n7, 1 + n8, 
      n9, n10, -1 + n11, n12, n13, n14])/(-1 + n11) - 
   (n12*j[p4a, n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + j[p4a, n1, n2, n3, n4, n5, n6, 1 + n7, 
    n8, n9, -1 + n10, n11, n12, n13, n14] + 
   ((-1 + d - n11 - n3 - n4 - 2*n7 - n8)*j[p4a, n1, n2, n3, n4, n5, n6, 
      1 + n7, n8, n9, n10, -1 + n11, n12, n13, n14])/(-1 + n11) - 
   (n12*j[p4a, n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 
      1 + n12, -1 + n13, n14])/(-1 + n11) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, -1 + n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, -1 + n11, n12, 
      n13, n14])/(-1 + n11) - (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, 
      n9, n10, -1 + n11, n12, n13, n14])/(-1 + n11) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, n12, 
      -1 + n13, n14])/(-1 + n11), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n10 == 1 || n7 == 0) -> 
  -((n6*j[p4a, n1, -1 + n2, n3, n4, n5, 1 + n6, 1 + n7, n8, n9, -1 + n10, 
       n11, n12, n13, n14])/(-1 + n10)) - 
   (n6*j[p4a, n1, n2, n3, -1 + n4, n5, 1 + n6, 1 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n6*j[p4a, n1, n2, n3, n4, -1 + n5, 1 + n6, 1 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + ((-1 + d - n10 - n2 - n3 - n4 - 2*n7)*
     j[p4a, n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, -1 + n10, n11, n12, n13, 
      n14])/(-1 + n10) + j[p4a, n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, 
    -1 + n11, n12, n13, n14] + 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, 1 + n7, -1 + n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, -1 + n5, n6, 1 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, 
      n13, n14])/(-1 + n10) - (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, 
      n9, -1 + n10, n11, n12, n13, n14])/(-1 + n10) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, 1 + n7, n8, n9, -1 + n10, n11, n12, 
      -1 + n13, n14])/(-1 + n10) - 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, 
      n13, n14])/(-1 + n10) + (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, 1 + n7, 
      -1 + n8, n9, -1 + n10, n11, n12, n13, n14])/(-1 + n10), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n14 == 1 || n5 == 0) -> 
  (n9*j[p4a, n1, -1 + n2, n3, n4, 1 + n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4a, n1, -1 + n2, n3, n4, 1 + n5, 1 + n6, n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - j[p4a, n1, n2, -1 + n3, n4, 1 + n5, n6, 
    n7, n8, n9, n10, n11, n12, n13, n14] + j[p4a, n1, n2, n3, -1 + n4, 
    1 + n5, n6, n7, n8, n9, n10, n11, n12, n13, n14] + 
   (n9*j[p4a, n1, n2, n3, -1 + n4, 1 + n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4a, n1, n2, n3, -1 + n4, 1 + n5, 1 + n6, n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   ((1 + n5)*j[p4a, n1, n2, n3, -1 + n4, 2 + n5, n6, n7, n8, n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) - (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 
      n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4a, n1, n2, n3, n4, 1 + n5, n6, -1 + n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, -1 + n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, 
    n9, n10, n11, n12, -1 + n13, n14] + 
   ((-1 + n4 - n5)*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, 1 + n9, -1 + n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n9*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, 1 + n9, n10, -1 + n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, n1, n2, n3, n4, 1 + n5, 1 + n6, n7, -1 + n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   ((-1 - n5)*j[p4a, n1, n2, n3, n4, 2 + n5, n6, -1 + n7, n8, n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) + (n4*j[p4a, n1, n2, n3, 1 + n4, 1 + n5, n6, 
      -1 + n7, n8, n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n12 == 0 || n13 == 1) -> 
  (n8*j[p4a, n1, -1 + n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n5*j[p4a, n1, -1 + n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n3*j[p4a, n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) - j[p4a, n1, n2, -1 + n3, n4, n5, n6, n7, 
    n8, n9, n10, n11, 1 + n12, n13, n14] - 
   (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + j[p4a, n1, n2, n3, n4, n5, n6, -1 + n7, 
    n8, n9, n10, n11, 1 + n12, n13, n14] - 
   (n8*j[p4a, n1, n2, n3, n4, n5, n6, -1 + n7, 1 + n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + j[p4a, n1, n2, n3, n4, n5, n6, n7, 
    -1 + n8, n9, n10, n11, 1 + n12, n13, n14] + 
   (2*(n2 - n3)*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n8*j[p4a, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n8*j[p4a, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, 1 + n12, 
      -2 + n13, n14])/(-1 + n13) - 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, -1 + n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -2 + n13, n14])/(-1 + n13) + 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, -1 + n14])/(-1 + n13) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, -1 + n14])/(-1 + n13) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (2*n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, -1 + n13, n14])/(-1 + n13) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -2 + n13, n14])/(-1 + n13) + 
   (n2*j[p4a, n1, 1 + n2, -1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (2*n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -2 + n13, n14])/(-1 + n13) + 
   (n1*j[p4a, 1 + n1, -1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n1*j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n1*j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -2 + n13, n14])/(-1 + n13) + 
   (n1*j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n11 == 1 || n9 == 0) -> 
  -j[p4a, n1, -1 + n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
     n14] - (n7*j[p4a, n1, -1 + n2, n3, n4, n5, n6, 1 + n7, n8, 1 + n9, n10, 
      -1 + n11, n12, n13, n14])/(-1 + n11) - 
   (n3*j[p4a, n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n12*j[p4a, n1, n2, -1 + n3, n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) - 
   (n12*j[p4a, n1, n2, n3, -1 + n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) - j[p4a, n1, n2, n3, -1 + n4, n5, n6, 
    n7, n8, 1 + n9, n10, n11, n12, n13, n14] - 
   (n8*j[p4a, n1, n2, n3, -1 + n4, n5, n6, n7, 1 + n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n7*j[p4a, n1, n2, n3, -1 + n4, n5, n6, 1 + n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n12*j[p4a, n1, n2, n3, n4, -1 + n5, n6, n7, n8, 1 + n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + j[p4a, n1, n2, n3, n4, -1 + n5, n6, 
    n7, n8, 1 + n9, n10, n11, n12, n13, n14] + 
   (n7*j[p4a, n1, n2, n3, n4, -1 + n5, n6, 1 + n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n12*j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + j[p4a, n1, n2, n3, n4, n5, -1 + n6, 
    n7, n8, 1 + n9, n10, n11, n12, n13, n14] + 
   (n8*j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, 1 + n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n12*j[p4a, n1, n2, n3, n4, n5, n6, -1 + n7, n8, 1 + n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + j[p4a, n1, n2, n3, n4, n5, n6, n7, 
    -1 + n8, 1 + n9, n10, n11, n12, n13, n14] + j[p4a, n1, n2, n3, n4, n5, 
    n6, n7, n8, 1 + n9, -1 + n10, n11, n12, n13, n14] + 
   ((n12 - n3 - n4 + n8)*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, 
      -1 + n11, n12, n13, n14])/(-1 + n11) - 
   (n12*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, 
      1 + n12, -1 + n13, n14])/(-1 + n11) - 
   (n12*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, 
      1 + n12, n13, -1 + n14])/(-1 + n11) + 
   (n7*j[p4a, n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n3*j[p4a, n1, n2, 1 + n3, -1 + n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (2*n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, 1 + n9, n10, 
      -1 + n11, n12, n13, n14])/(-1 + n11) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, 
      -1 + n12, n13, n14])/(-1 + n11) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, n12, 
      -1 + n13, n14])/(-1 + n11) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, n12, 
      n13, -1 + n14])/(-1 + n11), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n10 == 1 || n9 == 0) -> 
  (n7*j[p4a, n1, -1 + n2, n3, n4, n5, n6, 1 + n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n3*j[p4a, n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n7*j[p4a, n1, n2, n3, -1 + n4, n5, n6, 1 + n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n7*j[p4a, n1, n2, n3, n4, -1 + n5, n6, 1 + n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, 
    n8, 1 + n9, n10, n11, n12, n13, n14] + 
   ((-1 - d + n10 + n2 + n3 + n4 + 2*n6)*j[p4a, n1, n2, n3, n4, n5, n6, n7, 
      n8, 1 + n9, -1 + n10, n11, n12, n13, n14])/(-1 + n10) - 
   (n7*j[p4a, n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n3*j[p4a, n1, n2, 1 + n3, -1 + n4, n5, n6, n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (2*n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, 1 + n9, -1 + n10, 
      n11, n12, n13, n14])/(-1 + n10) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, -1 + n10, n11, 
      -1 + n12, n13, n14])/(-1 + n10) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, -1 + n10, n11, n12, 
      -1 + n13, n14])/(-1 + n10) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, -1 + n10, n11, n12, 
      n13, -1 + n14])/(-1 + n10) - 
   (n2*j[p4a, n1, 1 + n2, n3, n4, -1 + n5, n6, n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n12 == 0 || n14 == 1) -> 
  -j[p4a, n1, -1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
     n14] + (n6*j[p4a, n1, -1 + n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, 
      1 + n12, n13, -1 + n14])/(-1 + n14) - 
   (n5*j[p4a, n1, -1 + n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) - j[p4a, n1, n2, -1 + n3, n4, n5, n6, n7, 
    n8, n9, n10, n11, 1 + n12, n13, n14] + 
   (n6*j[p4a, n1, n2, -1 + n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) + j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, 
    n8, n9, n10, n11, 1 + n12, n13, n14] + 
   (n9*j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) + j[p4a, n1, n2, n3, n4, n5, n6, -1 + n7, 
    n8, n9, n10, n11, 1 + n12, n13, n14] + j[p4a, n1, n2, n3, n4, n5, n6, n7, 
    -1 + n8, n9, n10, n11, 1 + n12, n13, n14] + j[p4a, n1, n2, n3, n4, n5, 
    n6, n7, n8, n9, n10, n11, 1 + n12, -1 + n13, n14] + 
   ((1 - n14 + n6)*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 
      1 + n12, n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, -1 + n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, n11, 1 + n12, n13, 
      -2 + n14])/(-1 + n14) + (n9*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 
      1 + n9, n10, n11, 1 + n12, n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, -1 + n7, n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) - (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 
      n9, n10, n11, 1 + n12, -1 + n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
      -2 + n14])/(-1 + n14) + (n5*j[p4a, n1, n2, n3, n4, 1 + n5, -1 + n6, n7, 
      n8, n9, n10, n11, 1 + n12, n13, -1 + n14])/(-1 + n14) + 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, -1 + n14])/(-1 + n14) - 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
      -2 + n14])/(-1 + n14) + (n4*j[p4a, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, 
      n8, n9, n10, n11, 1 + n12, n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
      -2 + n14])/(-1 + n14), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n13 == 1 || n5 == 0) -> 
  -((n8*j[p4a, n1, -1 + n2, n3, n4, 1 + n5, n6, n7, 1 + n8, n9, n10, n11, 
       n12, -1 + n13, n14])/(-1 + n13)) + 
   (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n8*j[p4a, n1, n2, n3, -1 + n4, 1 + n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n8*j[p4a, n1, n2, n3, n4, 1 + n5, -1 + n6, n7, 1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n8*j[p4a, n1, n2, n3, n4, 1 + n5, n6, -1 + n7, 1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + ((-2 + n13 - n2 + n3 - n4 - n5 + n8)*
     j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) + j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, 
    n11, n12, n13, -1 + n14] - 
   (n8*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, 1 + n8, n9, n10, n11, -1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n8*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) + 
   ((1 + n5)*j[p4a, n1, n2, n3, n4, 2 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) + 
   ((-1 - n5)*j[p4a, n1, n2, n3, n4, 2 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n13) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n13) - 
   (n3*j[p4a, n1, n2, 1 + n3, -1 + n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n13) - 
   (n2*j[p4a, n1, 1 + n2, -1 + n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4a, n1, 1 + n2, n3, n4, 1 + n5, -1 + n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4a, n1, 1 + n2, n3, n4, 1 + n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4a, n1, 1 + n2, n3, n4, 1 + n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n2*j[p4a, n1, 1 + n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, -1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (2*n2*j[p4a, n1, 1 + n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) - 
   (n1*j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n1*j[p4a, 1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, -1 + n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n1*j[p4a, 1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) - 
   (n1*j[p4a, 1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n11 == 1 || n12 == 0) -> 
  ((-1 - n12)*j[p4a, n1, -1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      2 + n12, n13, n14])/(-1 + n11) - j[p4a, n1, -1 + n2, n3, n4, n5, n6, 
    n7, n8, n9, n10, n11, 1 + n12, n13, n14] - 
   (n8*j[p4a, n1, -1 + n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   (n7*j[p4a, n1, n2, -1 + n3, n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   ((-1 - n12)*j[p4a, n1, n2, n3, -1 + n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      2 + n12, n13, n14])/(-1 + n11) - j[p4a, n1, n2, n3, -1 + n4, n5, n6, 
    n7, n8, n9, n10, n11, 1 + n12, n13, n14] - 
   (n8*j[p4a, n1, n2, n3, -1 + n4, n5, n6, n7, 1 + n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) - 
   (n7*j[p4a, n1, n2, n3, -1 + n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   ((1 + n12)*j[p4a, n1, n2, n3, n4, -1 + n5, n6, n7, n8, n9, n10, -1 + n11, 
      2 + n12, n13, n14])/(-1 + n11) + j[p4a, n1, n2, n3, n4, -1 + n5, n6, 
    n7, n8, n9, n10, n11, 1 + n12, n13, n14] + 
   (n7*j[p4a, n1, n2, n3, n4, -1 + n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   ((1 + n12)*j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, n8, n9, n10, -1 + n11, 
      2 + n12, n13, n14])/(-1 + n11) + j[p4a, n1, n2, n3, n4, n5, -1 + n6, 
    n7, n8, n9, n10, n11, 1 + n12, n13, n14] + 
   (n8*j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, 1 + n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   ((1 + n12)*j[p4a, n1, n2, n3, n4, n5, n6, -1 + n7, n8, n9, n10, -1 + n11, 
      2 + n12, n13, n14])/(-1 + n11) + j[p4a, n1, n2, n3, n4, n5, n6, 
    -1 + n7, n8, n9, n10, n11, 1 + n12, n13, n14] + 
   (n8*j[p4a, n1, n2, n3, n4, n5, n6, -1 + n7, 1 + n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   ((1 + n12)*j[p4a, n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, -1 + n11, 
      2 + n12, n13, n14])/(-1 + n11) + j[p4a, n1, n2, n3, n4, n5, n6, n7, 
    -1 + n8, n9, n10, n11, 1 + n12, n13, n14] - j[p4a, n1, n2, n3, n4, n5, 
    n6, n7, n8, -1 + n9, n10, n11, 1 + n12, n13, n14] + 
   ((-1 - n12 + n3 - n4 + n8)*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, 
      -1 + n11, 1 + n12, n13, n14])/(-1 + n11) + 
   ((-1 - n12)*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      2 + n12, n13, -1 + n14])/(-1 + n11) + j[p4a, n1, n2, n3, n4, n5, n6, 
    n7, n8, n9, n10, n11, 1 + n12, n13, n14] - 
   (n8*j[p4a, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, -1 + n11, n12, 
      n13, n14])/(-1 + n11) + (n8*j[p4a, n1, n2, n3, n4, n5, n6, n7, 1 + n8, 
      n9, n10, -1 + n11, 1 + n12, -1 + n13, n14])/(-1 + n11) - 
   (n7*j[p4a, n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n11) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, -1 + n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n11) - 
   (n3*j[p4a, n1, n2, 1 + n3, -1 + n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n11), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n10 == 1 || n12 == 0) -> 
  -j[p4a, n1, -1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
     n14] - (n6*j[p4a, n1, -1 + n2, n3, n4, n5, 1 + n6, n7, n8, n9, -1 + n10, 
      n11, 1 + n12, n13, n14])/(-1 + n10) - j[p4a, n1, n2, -1 + n3, n4, n5, 
    n6, n7, n8, n9, n10, n11, 1 + n12, n13, n14] - 
   (n7*j[p4a, n1, n2, -1 + n3, n4, n5, n6, 1 + n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) - 
   (n6*j[p4a, n1, n2, -1 + n3, n4, n5, 1 + n6, n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) - 
   (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) + 
   (n7*j[p4a, n1, n2, n3, -1 + n4, n5, n6, 1 + n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) - 
   (n7*j[p4a, n1, n2, n3, n4, -1 + n5, n6, 1 + n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) + j[p4a, n1, n2, n3, n4, n5, -1 + n6, 
    n7, n8, n9, n10, n11, 1 + n12, n13, n14] + j[p4a, n1, n2, n3, n4, n5, n6, 
    -1 + n7, n8, n9, n10, n11, 1 + n12, n13, n14] + 
   j[p4a, n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, n13, 
    n14] - j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, -1 + n9, n10, n11, 1 + n12, 
    n13, n14] + ((-n2 - n3 + n4 + n6)*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 
      n9, -1 + n10, n11, 1 + n12, n13, n14])/(-1 + n10) + 
   j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, -1 + n13, 
    n14] + j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
    n14] + (n7*j[p4a, n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, -1 + n10, n11, 
      1 + n12, -1 + n13, n14])/(-1 + n10) + 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, -1 + n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) + 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, -1 + n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) - 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, -1 + n10, n11, n12, 
      n13, n14])/(-1 + n10) + (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 
      n9, -1 + n10, n11, 1 + n12, -1 + n13, n14])/(-1 + n10) + 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, -1 + n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n10) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, -1 + n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n10) + 
   (n3*j[p4a, n1, n2, 1 + n3, -1 + n4, n5, n6, n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n10) - 
   (n2*j[p4a, n1, 1 + n2, -1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) - 
   (n2*j[p4a, n1, 1 + n2, n3, n4, -1 + n5, n6, n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) + 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, -1 + n6, n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) + 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, -1 + n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) + 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, -1 + n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) - 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, 
      n13, n14])/(-1 + n10) + (2*n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, 
      n8, n9, -1 + n10, n11, 1 + n12, -1 + n13, n14])/(-1 + n10), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n12 == 0 || n6 == 1) -> 
  -j[p4a, n1, -1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
     n14] - j[p4a, n1, n2, -1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, 
    1 + n12, n13, n14] - (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, -1 + n6, n7, 
      n8, n9, n10, n11, 1 + n12, n13, n14])/(-1 + n6) + 
   ((-1 - d + 2*n14 + n4 + n5 + n6 + n9)*j[p4a, n1, n2, n3, n4, n5, -1 + n6, 
      n7, n8, n9, n10, n11, 1 + n12, n13, n14])/(-1 + n6) + 
   (n9*j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n6) - 
   (n9*j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 1 + n12, 
      n13, n14])/(-1 + n6) + j[p4a, n1, n2, n3, n4, n5, n6, -1 + n7, n8, n9, 
    n10, n11, 1 + n12, n13, n14] + j[p4a, n1, n2, n3, n4, n5, n6, n7, 
    -1 + n8, n9, n10, n11, 1 + n12, n13, n14] + j[p4a, n1, n2, n3, n4, n5, 
    n6, n7, n8, n9, n10, n11, 1 + n12, -1 + n13, n14] + 
   j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
    -1 + n14] - (n5*j[p4a, n1, n2, n3, n4, 1 + n5, -1 + n6, n7, n8, n9, n10, 
      n11, 1 + n12, -1 + n13, n14])/(-1 + n6) + 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, -1 + n6, n7, n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n6) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n6), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n13 == 1 && n14 == 1 && n6 == 1 && n8 == 1 && 
     !(n12 == -1 || n12 == 0 || n3 == 1) -> 
  -((n7*j[p4a, -1 + n1, -1 + n2, -1 + n3, n4, n5, 1, 1 + n7, 1, n9, 1, 1, 
       2 + n12, 1, 1])/(-1 + n3)) - j[p4a, -1 + n1, -1 + n2, n3, n4, n5, 1, 
    n7, 1, n9, 1, 1, 2 + n12, 1, 1] - 
   (n7*j[p4a, -1 + n1, n2, -2 + n3, n4, n5, 1, 1 + n7, 1, n9, 1, 1, 2 + n12, 
      1, 1])/(-1 + n3) + ((8 - 2*d + n1 + 2*n12 + n4 + n5 + 2*n7)*
     j[p4a, -1 + n1, n2, -1 + n3, n4, n5, 1, n7, 1, n9, 1, 1, 2 + n12, 1, 1])/
    (-1 + n3) + j[p4a, -1 + n1, n2, -1 + n3, n4, n5, 1, n7, 1, n9, 1, 2, 
     2 + n12, 1, 1]/(1 - n3) + 
   (n7*j[p4a, -1 + n1, n2, -1 + n3, n4, n5, 1, 1 + n7, 0, n9, 1, 1, 2 + n12, 
      1, 1])/(-1 + n3) + (n7*j[p4a, -1 + n1, n2, -1 + n3, n4, n5, 1, 1 + n7, 
      1, n9, 1, 1, 2 + n12, 0, 1])/(-1 + n3) + 
   (n5*j[p4a, -1 + n1, n2, -1 + n3, n4, 1 + n5, 1, n7, 1, n9, 1, 1, 2 + n12, 
      0, 1])/(-1 + n3) - (n5*j[p4a, -1 + n1, n2, -1 + n3, n4, 1 + n5, 1, n7, 
      1, n9, 1, 1, 2 + n12, 1, 0])/(-1 + n3) - 
   (n4*j[p4a, -1 + n1, n2, -1 + n3, 1 + n4, n5, 0, n7, 1, n9, 1, 1, 2 + n12, 
      1, 1])/(-1 + n3) + (n4*j[p4a, -1 + n1, n2, -1 + n3, 1 + n4, n5, 1, n7, 
      0, n9, 1, 1, 2 + n12, 1, 1])/(-1 + n3) + j[p4a, -1 + n1, n2, n3, n4, 
    n5, 1, -1 + n7, 1, n9, 1, 1, 2 + n12, 1, 1] + 
   2*j[p4a, -1 + n1, n2, n3, n4, n5, 1, n7, 0, n9, 1, 1, 2 + n12, 1, 1] - 
   j[p4a, -1 + n1, n2, n3, n4, n5, 1, n7, 1, n9, 1, 1, 1 + n12, 1, 1] + 
   j[p4a, -1 + n1, n2, n3, n4, n5, 1, n7, 1, n9, 1, 1, 2 + n12, 0, 1] - 
   (n2*j[p4a, -1 + n1, 1 + n2, -2 + n3, n4, n5, 1, n7, 1, n9, 1, 1, 2 + n12, 
      1, 1])/(-1 + n3) + (n2*j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, n5, 1, 
      -1 + n7, 1, n9, 1, 1, 2 + n12, 1, 1])/(-1 + n3) + 
   (n2*j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, n5, 1, n7, 0, n9, 1, 1, 2 + n12, 
      1, 1])/(-1 + n3) - (n2*j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, n5, 1, n7, 
      1, n9, 1, 1, 1 + n12, 1, 1])/(-1 + n3) + 
   (2*n2*j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, n5, 1, n7, 1, n9, 1, 1, 
      2 + n12, 0, 1])/(-1 + n3) - 
   (n7*j[p4a, n1, -1 + n2, -1 + n3, n4, n5, 1, 1 + n7, 1, n9, 1, 1, 1 + n12, 
      1, 1])/(-1 + n3) - j[p4a, n1, -1 + n2, n3, n4, n5, 1, n7, 1, n9, 1, 1, 
    1 + n12, 1, 1] + ((1 + n12)*j[p4a, n1, n2, -1 + n3, n4, n5, 1, n7, 0, n9, 
      1, 1, 2 + n12, 1, 1])/(-1 + n3) + 
   j[p4a, n1, n2, -1 + n3, n4, n5, 1, n7, 0, n9, 1, 2, 1 + n12, 1, 1]/
    (-1 + n3) + ((4 - d + n12 + n4 + n7)*j[p4a, n1, n2, -1 + n3, n4, n5, 1, 
      n7, 1, n9, 1, 1, 1 + n12, 1, 1])/(-1 + n3) + 
   ((-2 + n1 - n12)*j[p4a, n1, n2, -1 + n3, n4, n5, 1, n7, 1, n9, 1, 1, 
      2 + n12, 0, 1])/(-1 + n3) + 
   ((1 - n1)*j[p4a, n1, n2, -1 + n3, n4, n5, 1, n7, 1, n9, 1, 1, 2 + n12, 1, 
      1])/(-1 + n3) + (n7*j[p4a, n1, n2, -1 + n3, n4, n5, 1, 1 + n7, 0, n9, 
      1, 1, 1 + n12, 1, 1])/(-1 + n3) - 
   (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, 0, n7, 1, n9, 1, 1, 1 + n12, 1, 
      1])/(-1 + n3) + (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, 1, n7, 0, n9, 
      1, 1, 1 + n12, 1, 1])/(-1 + n3) + j[p4a, n1, n2, n3, n4, n5, 1, 
    -1 + n7, 1, n9, 1, 1, 1 + n12, 1, 1] + 
   2*j[p4a, n1, n2, n3, n4, n5, 1, n7, 0, n9, 1, 1, 1 + n12, 1, 1] + 
   j[p4a, n1, n2, n3, n4, n5, 1, n7, 1, n9, 1, 1, 1 + n12, 0, 1], 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n12 == 0 && n2 == 0 && n4 == 0 && n5 == 0 && n7 == 0 && 
    n9 == 0 && n13 != 1 -> ((-2*n11 + d*n11 - 2*n11^2)*
    j[p4a, 0, 0, n3, 0, 0, n6, 0, n8, 0, n10, 1 + n11, 0, -1 + n13, n14])/
   ((d - 2*n13)*(-1 + n13)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n12 == 0 && n14 == 1 && n2 == 0 && n5 == 0 && n7 == 0 && 
    n9 == 0 && n13 != 1 -> ((-2*n11 + d*n11 - 2*n11^2)*
    j[p4a, 0, 0, n3, n4, 0, n6, 0, n8, 0, n10, 1 + n11, 0, -1 + n13, 1])/
   ((d - 2*n13)*(-1 + n13)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && n7 == 0 && 
    n9 == 0 &&  !(n10 == 1 || n11 == 1 || n5 == 0) -> 
  (n8*j[p4a, 0, -1, n3, n4, 1 + n5, n6, 0, 1 + n8, 0, n10, -1 + n11, 0, 1, 
      1])/(-1 + n11) - (n6*j[p4a, 0, -1, n3, n4, 1 + n5, 1 + n6, 0, n8, 0, 
      -1 + n10, n11, 0, 1, 1])/(-1 + n10) - j[p4a, 0, 0, -1 + n3, n4, 1 + n5, 
    n6, 0, n8, 0, n10, n11, 0, 1, 1] - 
   (n6*j[p4a, 0, 0, -1 + n3, n4, 1 + n5, 1 + n6, 0, n8, 0, -1 + n10, n11, 0, 
      1, 1])/(-1 + n10) - (n4*j[p4a, 0, 0, -1 + n3, 1 + n4, 1 + n5, n6, 0, 
      n8, 0, -1 + n10, n11, 0, 1, 1])/(-1 + n10) - 
   (n4*j[p4a, 0, 0, -1 + n3, 1 + n4, 1 + n5, n6, 0, n8, 0, n10, -1 + n11, 0, 
      1, 1])/(-1 + n11) + j[p4a, 0, 0, n3, -1 + n4, 1 + n5, n6, 0, n8, 0, 
    n10, n11, 0, 1, 1] + (n8*j[p4a, 0, 0, n3, -1 + n4, 1 + n5, n6, 0, 1 + n8, 
      0, n10, -1 + n11, 0, 1, 1])/(-1 + n11) - 
   (n8*j[p4a, 0, 0, n3, n4, 1 + n5, -1 + n6, 0, 1 + n8, 0, n10, -1 + n11, 0, 
      1, 1])/(-1 + n11) - (n8*j[p4a, 0, 0, n3, n4, 1 + n5, n6, -1, 1 + n8, 0, 
      n10, -1 + n11, 0, 1, 1])/(-1 + n11) + 
   ((-n3 + n4 + n6)*j[p4a, 0, 0, n3, n4, 1 + n5, n6, 0, n8, 0, -1 + n10, n11, 
      0, 1, 1])/(-1 + n10) + ((-n3 + n4 - n8)*j[p4a, 0, 0, n3, n4, 1 + n5, 
      n6, 0, n8, 0, n10, -1 + n11, 0, 1, 1])/(-1 + n11) + 
   j[p4a, 0, 0, n3, n4, 1 + n5, n6, 0, n8, 0, n10, n11, 0, 0, 1] + 
   (n8*j[p4a, 0, 0, n3, n4, 1 + n5, n6, 0, 1 + n8, 0, n10, -1 + n11, -1, 1, 
      1])/(-1 + n11) - (n8*j[p4a, 0, 0, n3, n4, 1 + n5, n6, 0, 1 + n8, 0, 
      n10, -1 + n11, 0, 0, 1])/(-1 + n11) + 
   (n6*j[p4a, 0, 0, n3, n4, 1 + n5, 1 + n6, -1, n8, 0, -1 + n10, n11, 0, 1, 
      1])/(-1 + n10) + (n6*j[p4a, 0, 0, n3, n4, 1 + n5, 1 + n6, 0, -1 + n8, 
      0, -1 + n10, n11, 0, 1, 1])/(-1 + n10) - 
   (n6*j[p4a, 0, 0, n3, n4, 1 + n5, 1 + n6, 0, n8, 0, -1 + n10, n11, -1, 1, 
      1])/(-1 + n10) + (n6*j[p4a, 0, 0, n3, n4, 1 + n5, 1 + n6, 0, n8, 0, 
      -1 + n10, n11, 0, 0, 1])/(-1 + n10) + 
   (n6*j[p4a, 0, 0, n3, n4, 1 + n5, 1 + n6, 0, n8, 0, -1 + n10, n11, 0, 1, 
      0])/(-1 + n10) + (n4*j[p4a, 0, 0, n3, 1 + n4, 1 + n5, n6, 0, n8, 0, 
      -1 + n10, n11, 0, 1, 0])/(-1 + n10) + 
   (n4*j[p4a, 0, 0, n3, 1 + n4, 1 + n5, n6, 0, n8, 0, n10, -1 + n11, 0, 1, 
      0])/(-1 + n11) + (n3*j[p4a, 0, 0, 1 + n3, -1 + n4, 1 + n5, n6, 0, n8, 
      0, -1 + n10, n11, 0, 1, 1])/(-1 + n10) + 
   (n3*j[p4a, 0, 0, 1 + n3, -1 + n4, 1 + n5, n6, 0, n8, 0, n10, -1 + n11, 0, 
      1, 1])/(-1 + n11) - (n3*j[p4a, 0, 0, 1 + n3, n4, 1 + n5, n6, 0, n8, 0, 
      -1 + n10, n11, 0, 1, 0])/(-1 + n10) - 
   (n3*j[p4a, 0, 0, 1 + n3, n4, 1 + n5, n6, 0, n8, 0, n10, -1 + n11, 0, 1, 
      0])/(-1 + n11), j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?Positive, (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, 
    (n7_)?NonPositive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n4 == 0 && n5 == 0 && n7 == 0 && 
    n9 == 0 &&  !(n13 == 1 || n14 == 1 || n2 == 0) -> 
  -((n8*j[p4a, 0, n2, n3, 0, 0, n6, 0, 1 + n8, 0, 1, n11, 0, -1 + n13, n14])/
     (-1 + n13)) + (n6*j[p4a, 0, n2, n3, 0, 0, 1 + n6, 0, n8, 0, 1, n11, 0, 
      n13, -1 + n14])/(-1 + n14) + 
   (n3*j[p4a, 0, n2, 1 + n3, 0, 0, n6, 0, n8, 0, 1, n11, 0, -1 + n13, n14])/
    (-1 + n13) + (n6*j[p4a, 0, 1 + n2, -1 + n3, 0, 0, 1 + n6, 0, n8, 0, 1, 
      n11, 0, n13, -1 + n14])/(-1 + n14) + j[p4a, 0, 1 + n2, n3, 0, 0, 
    -1 + n6, 0, n8, 0, 1, n11, 0, n13, n14] + 
   (n8*j[p4a, 0, 1 + n2, n3, 0, 0, n6, -1, 1 + n8, 0, 1, n11, 0, -1 + n13, 
      n14])/(-1 + n13) + ((-3 + n13 - 2*n2 + 2*n3)*j[p4a, 0, 1 + n2, n3, 0, 
      0, n6, 0, n8, 0, 1, n11, 0, -1 + n13, n14])/(-1 + n13) + 
   ((1 - n14 + n6)*j[p4a, 0, 1 + n2, n3, 0, 0, n6, 0, n8, 0, 1, n11, 0, n13, 
      -1 + n14])/(-1 + n14) - (n8*j[p4a, 0, 1 + n2, n3, 0, 0, n6, 0, 1 + n8, 
      0, 1, n11, -1, -1 + n13, n14])/(-1 + n13) + 
   (n8*j[p4a, 0, 1 + n2, n3, 0, 0, n6, 0, 1 + n8, 0, 1, n11, 0, -2 + n13, 
      n14])/(-1 + n13) - (n6*j[p4a, 0, 1 + n2, n3, 0, 0, 1 + n6, -1, n8, 0, 
      1, n11, 0, n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, 0, 1 + n2, n3, 0, 0, 1 + n6, 0, -1 + n8, 0, 1, n11, 0, n13, 
      -1 + n14])/(-1 + n14) + (n6*j[p4a, 0, 1 + n2, n3, 0, 0, 1 + n6, 0, n8, 
      0, 1, n11, -1, n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, 0, 1 + n2, n3, 0, 0, 1 + n6, 0, n8, 0, 1, n11, 0, -1 + n13, 
      -1 + n14])/(-1 + n14) - (n6*j[p4a, 0, 1 + n2, n3, 0, 0, 1 + n6, 0, n8, 
      0, 1, n11, 0, n13, -2 + n14])/(-1 + n14) - 
   (n3*j[p4a, 0, 1 + n2, 1 + n3, 0, 0, n6, -1, n8, 0, 1, n11, 0, -1 + n13, 
      n14])/(-1 + n13) - (2*n3*j[p4a, 0, 1 + n2, 1 + n3, 0, 0, n6, 0, 
      -1 + n8, 0, 1, n11, 0, -1 + n13, n14])/(-1 + n13) + 
   (n3*j[p4a, 0, 1 + n2, 1 + n3, 0, 0, n6, 0, n8, 0, 1, n11, -1, -1 + n13, 
      n14])/(-1 + n13) - (n3*j[p4a, 0, 1 + n2, 1 + n3, 0, 0, n6, 0, n8, 0, 1, 
      n11, 0, -2 + n13, n14])/(-1 + n13) + 
   ((-1 - n2)*j[p4a, 0, 2 + n2, -1 + n3, 0, 0, n6, 0, n8, 0, 1, n11, 0, 
      -1 + n13, n14])/(-1 + n13) + 
   ((1 + n2)*j[p4a, 0, 2 + n2, n3, 0, 0, n6, -1, n8, 0, 1, n11, 0, -1 + n13, 
      n14])/(-1 + n13) + ((1 + n2)*j[p4a, 0, 2 + n2, n3, 0, 0, n6, 0, 
      -1 + n8, 0, 1, n11, 0, -1 + n13, n14])/(-1 + n13) + 
   ((-1 - n2)*j[p4a, 0, 2 + n2, n3, 0, 0, n6, 0, n8, 0, 1, n11, -1, -1 + n13, 
      n14])/(-1 + n13) + (2*(1 + n2)*j[p4a, 0, 2 + n2, n3, 0, 0, n6, 0, n8, 
      0, 1, n11, 0, -2 + n13, n14])/(-1 + n13), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n14 == 1 && n5 == 0 && n7 == 0 && 
    n9 == 0 &&  !(n13 == 1 || n2 == 0 || n6 == 1) -> 
  -((n8*j[p4a, 0, n2, n3, n4, 0, n6, 0, 1 + n8, 0, 1, n11, 0, -1 + n13, 1])/
     (-1 + n13)) + (n3*j[p4a, 0, n2, 1 + n3, n4, 0, n6, 0, n8, 0, 1, n11, 0, 
      -1 + n13, 1])/(-1 + n13) - 
   (n4*j[p4a, 0, 1 + n2, -1 + n3, 1 + n4, 0, -1 + n6, 0, n8, 0, 1, n11, 0, 
      n13, 1])/(-1 + n6) + (n4*j[p4a, 0, 1 + n2, -1 + n3, 1 + n4, 0, n6, 0, 
      n8, 0, 1, n11, 0, -1 + n13, 1])/(-1 + n13) + 
   ((1 - d + n4 + n6)*j[p4a, 0, 1 + n2, n3, n4, 0, -1 + n6, 0, n8, 0, 1, n11, 
      0, n13, 1])/(-1 + n6) + 
   (n8*j[p4a, 0, 1 + n2, n3, n4, 0, n6, -1, 1 + n8, 0, 1, n11, 0, -1 + n13, 
      1])/(-1 + n13) + ((-3 + n13 - 2*n2 + 2*n3)*j[p4a, 0, 1 + n2, n3, n4, 0, 
      n6, 0, n8, 0, 1, n11, 0, -1 + n13, 1])/(-1 + n13) + 
   j[p4a, 0, 1 + n2, n3, n4, 0, n6, 0, n8, 0, 1, n11, 0, n13, 0] - 
   (n8*j[p4a, 0, 1 + n2, n3, n4, 0, n6, 0, 1 + n8, 0, 1, n11, -1, -1 + n13, 
      1])/(-1 + n13) + (n8*j[p4a, 0, 1 + n2, n3, n4, 0, n6, 0, 1 + n8, 0, 1, 
      n11, 0, -2 + n13, 1])/(-1 + n13) + 
   (n4*j[p4a, 0, 1 + n2, n3, 1 + n4, 0, -1 + n6, 0, n8, 0, 1, n11, 0, 
      -1 + n13, 1])/(-1 + n13) + 
   (n4*j[p4a, 0, 1 + n2, n3, 1 + n4, 0, -1 + n6, 0, n8, 0, 1, n11, 0, n13, 
      0])/(-1 + n6) - (n4*j[p4a, 0, 1 + n2, n3, 1 + n4, 0, n6, 0, -1 + n8, 0, 
      1, n11, 0, -1 + n13, 1])/(-1 + n13) - 
   (n4*j[p4a, 0, 1 + n2, n3, 1 + n4, 0, n6, 0, n8, 0, 1, n11, 0, -1 + n13, 
      0])/(-1 + n13) - (n3*j[p4a, 0, 1 + n2, 1 + n3, n4, 0, n6, -1, n8, 0, 1, 
      n11, 0, -1 + n13, 1])/(-1 + n13) - 
   (2*n3*j[p4a, 0, 1 + n2, 1 + n3, n4, 0, n6, 0, -1 + n8, 0, 1, n11, 0, 
      -1 + n13, 1])/(-1 + n13) + 
   (n3*j[p4a, 0, 1 + n2, 1 + n3, n4, 0, n6, 0, n8, 0, 1, n11, -1, -1 + n13, 
      1])/(-1 + n13) - (n3*j[p4a, 0, 1 + n2, 1 + n3, n4, 0, n6, 0, n8, 0, 1, 
      n11, 0, -2 + n13, 1])/(-1 + n13) + 
   ((-1 - n2)*j[p4a, 0, 2 + n2, -1 + n3, n4, 0, n6, 0, n8, 0, 1, n11, 0, 
      -1 + n13, 1])/(-1 + n13) + 
   ((1 + n2)*j[p4a, 0, 2 + n2, n3, n4, 0, n6, -1, n8, 0, 1, n11, 0, -1 + n13, 
      1])/(-1 + n13) + ((1 + n2)*j[p4a, 0, 2 + n2, n3, n4, 0, n6, 0, -1 + n8, 
      0, 1, n11, 0, -1 + n13, 1])/(-1 + n13) + 
   ((-1 - n2)*j[p4a, 0, 2 + n2, n3, n4, 0, n6, 0, n8, 0, 1, n11, -1, 
      -1 + n13, 1])/(-1 + n13) + 
   (2*(1 + n2)*j[p4a, 0, 2 + n2, n3, n4, 0, n6, 0, n8, 0, 1, n11, 0, 
      -2 + n13, 1])/(-1 + n13), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n7 == 0 && 
    n9 == 0 &&  !(n2 == 0 || n4 == 0 || n6 == 1) -> 
  j[p4a, 0, 1 + n2, -1 + n3, 1 + n4, -1 + n5, -1 + n6, 0, n8, 0, 1, n11, 0, 
     1, 2]/(-1 + n6) + j[p4a, 0, 1 + n2, n3, n4, n5, -1 + n6, 0, n8, 0, 1, 
     n11, 0, 0, 2]/(1 - n6) + ((1 - d + n4 + n5 + n6)*
     j[p4a, 0, 1 + n2, n3, n4, n5, -1 + n6, 0, n8, 0, 1, n11, 0, 1, 1])/
    (-1 + n6) + ((-1 + d - n4 - n5 - n6)*j[p4a, 0, 1 + n2, n3, 1 + n4, 
      -1 + n5, -1 + n6, 0, n8, 0, 1, n11, 0, 1, 1])/(-1 + n6) + 
   j[p4a, 0, 1 + n2, n3, 1 + n4, -1 + n5, n6, 0, -1 + n8, 0, 1, n11, 0, 1, 
    1] + ((-1 - n4 + n5)*j[p4a, 0, 1 + n2, n3, 1 + n4, n5, -1 + n6, -1, n8, 
      0, 1, n11, 0, 1, 1])/(-1 + n6), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n9 == 0 &&  !(n7 == -1 || n7 == 0 || n8 == 1) -> 
  -j[p4a, 0, -1 + n2, n3, n4, -1 + n5, n6, 2 + n7, n8, 0, 1, 1, 0, 1, 1] + 
   j[p4a, 0, -1 + n2, n3, n4, n5, n6, 1 + n7, n8, 0, 1, 1, 0, 1, 1] + 
   j[p4a, 0, n2, -1 + n3, n4, -1 + n5, n6, 2 + n7, -1 + n8, 0, 1, 1, 0, 2, 1]/
    (-1 + n8) + j[p4a, 0, n2, n3, -1 + n4, n5, n6, 1 + n7, n8, 0, 1, 1, 0, 1, 
    1] + ((-1 + n5)*j[p4a, 0, n2, n3, -1 + n4, n5, n6, 2 + n7, -1 + n8, 0, 1, 
      1, 0, 1, 1])/(-1 + n8) + j[p4a, 0, n2, n3, n4, -1 + n5, n6, 1 + n7, n8, 
    0, 1, 1, 0, 1, 1] + ((-1 - n2 + n3 + n4 - n5 + n8)*
     j[p4a, 0, n2, n3, n4, -1 + n5, n6, 2 + n7, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (-1 + n8) - j[p4a, 0, n2, n3, n4, n5, -1 + n6, 1 + n7, n8, 0, 1, 1, 0, 1, 
    1] + ((2 - d + n2 + n4 + n5)*j[p4a, 0, n2, n3, n4, n5, n6, 1 + n7, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) + 
   j[p4a, 0, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, 0, 1, 1, 0, 2, 0]/
    (1 - n8) - (n4*j[p4a, 0, n2, n3, 1 + n4, -2 + n5, n6, 2 + n7, -1 + n8, 0, 
      1, 1, 0, 1, 1])/(-1 + n8) + 
   (2*n4*j[p4a, 0, n2, n3, 1 + n4, -1 + n5, n6, 1 + n7, -1 + n8, 0, 1, 1, 0, 
      1, 1])/(-1 + n8) - (n4*j[p4a, 0, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, 
      0, 1, 1, 0, 1, 1])/(-1 + n8) + 
   (n3*j[p4a, 0, n2, 1 + n3, -1 + n4, n5, n6, 1 + n7, -1 + n8, 0, 1, 1, 0, 1, 
      1])/(-1 + n8) + (n3*j[p4a, 0, n2, 1 + n3, n4, -1 + n5, n6, 1 + n7, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) - 
   (n3*j[p4a, 0, n2, 1 + n3, n4, -1 + n5, n6, 2 + n7, -1 + n8, 0, 1, 1, 0, 0, 
      1])/(-1 + n8) - (n3*j[p4a, 0, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, 0, 
      1, 1, 0, 1, 1])/(-1 + n8) + 
   (n3*j[p4a, 0, n2, 1 + n3, n4, n5, n6, 1 + n7, -1 + n8, 0, 1, 1, 0, 0, 1])/
    (-1 + n8) - (n3*j[p4a, 0, n2, 1 + n3, n4, n5, n6, 1 + n7, -1 + n8, 0, 1, 
      1, 0, 1, 0])/(-1 + n8) + 
   (n2*j[p4a, 0, 1 + n2, n3, n4, -1 + n5, n6, 2 + n7, -2 + n8, 0, 1, 1, 0, 1, 
      1])/(-1 + n8) - (n2*j[p4a, 0, 1 + n2, n3, n4, n5, -1 + n6, 1 + n7, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n8 == 1 && 
    n9 == 0 &&  !(n2 == 0 || n4 == 0 || n6 == 1) -> 
  j[p4a, n1, 1 + n2, -1 + n3, 1 + n4, -1 + n5, -1 + n6, n7, 1, 0, 1, 1, 0, 1, 
     2]/(-1 + n6) + j[p4a, n1, 1 + n2, n3, n4, n5, -1 + n6, n7, 1, 0, 1, 1, 
     0, 0, 2]/(1 - n6) + ((1 - d + n4 + n5 + n6)*j[p4a, n1, 1 + n2, n3, n4, 
      n5, -1 + n6, n7, 1, 0, 1, 1, 0, 1, 1])/(-1 + n6) + 
   ((-1 + d - n4 - n5 - n6)*j[p4a, n1, 1 + n2, n3, 1 + n4, -1 + n5, -1 + n6, 
      n7, 1, 0, 1, 1, 0, 1, 1])/(-1 + n6) + j[p4a, n1, 1 + n2, n3, 1 + n4, 
    -1 + n5, n6, n7, 0, 0, 1, 1, 0, 1, 1] + 
   ((-1 - n4 + n5)*j[p4a, n1, 1 + n2, n3, 1 + n4, n5, -1 + n6, -1 + n7, 1, 0, 
      1, 1, 0, 1, 1])/(-1 + n6), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n6 == 1 &&  !(n7 == -1 || n7 == 0 || n8 == 1) -> 
  -j[p4a, 0, -1 + n2, n3, n4, -1 + n5, 1, 2 + n7, n8, n9, 1, 1, 0, 1, 1] + 
   j[p4a, 0, -1 + n2, n3, n4, n5, 1, 1 + n7, n8, n9, 1, 1, 0, 1, 1] + 
   j[p4a, 0, n2, -1 + n3, n4, -1 + n5, 1, 2 + n7, -1 + n8, n9, 1, 1, 0, 2, 1]/
    (-1 + n8) + j[p4a, 0, n2, n3, -1 + n4, n5, 1, 1 + n7, n8, n9, 1, 1, 0, 1, 
    1] + ((-1 + n5)*j[p4a, 0, n2, n3, -1 + n4, n5, 1, 2 + n7, -1 + n8, n9, 1, 
      1, 0, 1, 1])/(-1 + n8) + j[p4a, 0, n2, n3, n4, -1 + n5, 1, 1 + n7, n8, 
    n9, 1, 1, 0, 1, 1] + ((-1 - n2 + n3 + n4 - n5 + n8)*
     j[p4a, 0, n2, n3, n4, -1 + n5, 1, 2 + n7, -1 + n8, n9, 1, 1, 0, 1, 1])/
    (-1 + n8) - j[p4a, 0, n2, n3, n4, n5, 0, 1 + n7, n8, n9, 1, 1, 0, 1, 1] + 
   ((2 - d + n2 + n4 + n5)*j[p4a, 0, n2, n3, n4, n5, 1, 1 + n7, -1 + n8, n9, 
      1, 1, 0, 1, 1])/(-1 + n8) + j[p4a, 0, n2, n3, n4, n5, 1, 1 + n7, 
     -1 + n8, n9, 1, 1, 0, 2, 0]/(1 - n8) - 
   (n4*j[p4a, 0, n2, n3, 1 + n4, -2 + n5, 1, 2 + n7, -1 + n8, n9, 1, 1, 0, 1, 
      1])/(-1 + n8) + (2*n4*j[p4a, 0, n2, n3, 1 + n4, -1 + n5, 1, 1 + n7, 
      -1 + n8, n9, 1, 1, 0, 1, 1])/(-1 + n8) - 
   (n4*j[p4a, 0, n2, n3, 1 + n4, n5, 1, n7, -1 + n8, n9, 1, 1, 0, 1, 1])/
    (-1 + n8) + (n3*j[p4a, 0, n2, 1 + n3, -1 + n4, n5, 1, 1 + n7, -1 + n8, 
      n9, 1, 1, 0, 1, 1])/(-1 + n8) + 
   (n3*j[p4a, 0, n2, 1 + n3, n4, -1 + n5, 1, 1 + n7, -1 + n8, n9, 1, 1, 0, 1, 
      1])/(-1 + n8) - (n3*j[p4a, 0, n2, 1 + n3, n4, -1 + n5, 1, 2 + n7, 
      -1 + n8, n9, 1, 1, 0, 0, 1])/(-1 + n8) - 
   (n3*j[p4a, 0, n2, 1 + n3, n4, n5, 1, n7, -1 + n8, n9, 1, 1, 0, 1, 1])/
    (-1 + n8) + (n3*j[p4a, 0, n2, 1 + n3, n4, n5, 1, 1 + n7, -1 + n8, n9, 1, 
      1, 0, 0, 1])/(-1 + n8) - 
   (n3*j[p4a, 0, n2, 1 + n3, n4, n5, 1, 1 + n7, -1 + n8, n9, 1, 1, 0, 1, 0])/
    (-1 + n8) + (n2*j[p4a, 0, 1 + n2, n3, n4, -1 + n5, 1, 2 + n7, -2 + n8, 
      n9, 1, 1, 0, 1, 1])/(-1 + n8) - 
   (n2*j[p4a, 0, 1 + n2, n3, n4, n5, 0, 1 + n7, -1 + n8, n9, 1, 1, 0, 1, 1])/
    (-1 + n8), j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == -1 && n13 == 1 && n14 == 1 && n6 == 1 && 
    n8 == 1 &&  !(n2 == 0 || n3 == 1) -> 
  -((n7*j[p4a, -1 + n1, n2, -1 + n3, n4, n5, 1, 1 + n7, 1, n9, 1, 1, 0, 1, 
       1])/(-1 + n3)) - j[p4a, -1 + n1, n2, n3, n4, n5, 1, n7, 1, n9, 1, 1, 
    0, 1, 1] - (n7*j[p4a, -1 + n1, 1 + n2, -2 + n3, n4, n5, 1, 1 + n7, 1, n9, 
      1, 1, 0, 1, 1])/(-1 + n3) + 
   (n4*j[p4a, -1 + n1, 1 + n2, -2 + n3, 1 + n4, n5, 1, n7, 1, n9, 1, 1, 0, 1, 
      1])/(-1 + n3) + ((5 - 3*d + 2*n1 + n3 + n4 + 2*n5 + 2*n7)*
     j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, n5, 1, n7, 1, n9, 1, 1, 0, 1, 1])/
    (-1 + n3) + j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, n5, 1, n7, 1, n9, 1, 2, 
     0, 1, 1]/(1 - n3) + j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, n5, 1, n7, 2, 
     n9, 1, 1, 0, 0, 1]/(-1 + n3) + 
   (n7*j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, n5, 1, 1 + n7, 0, n9, 1, 1, 0, 1, 
      1])/(-1 + n3) + (n7*j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, n5, 1, 1 + n7, 
      1, n9, 1, 1, 0, 0, 1])/(-1 + n3) + 
   (2*n5*j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, 1 + n5, 1, n7, 1, n9, 1, 1, 0, 
      0, 1])/(-1 + n3) - (2*n5*j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, 1 + n5, 
      1, n7, 1, n9, 1, 1, 0, 1, 0])/(-1 + n3) + 
   (n4*j[p4a, -1 + n1, 1 + n2, -1 + n3, 1 + n4, -1 + n5, 1, n7, 1, n9, 1, 1, 
      0, 1, 1])/(-1 + n3) - (n4*j[p4a, -1 + n1, 1 + n2, -1 + n3, 1 + n4, n5, 
      0, n7, 1, n9, 1, 1, 0, 1, 1])/(-1 + n3) - 
   (n4*j[p4a, -1 + n1, 1 + n2, -1 + n3, 1 + n4, n5, 1, -1 + n7, 1, n9, 1, 1, 
      0, 1, 1])/(-1 + n3) + (n4*j[p4a, -1 + n1, 1 + n2, -1 + n3, 1 + n4, n5, 
      1, n7, 0, n9, 1, 1, 0, 1, 1])/(-1 + n3) + 
   (n4*j[p4a, -1 + n1, 1 + n2, -1 + n3, 1 + n4, n5, 1, n7, 1, n9, 1, 1, -1, 
      1, 1])/(-1 + n3) - (n4*j[p4a, -1 + n1, 1 + n2, -1 + n3, 1 + n4, n5, 1, 
      n7, 1, n9, 1, 1, 0, 1, 0])/(-1 + n3) + 
   2*j[p4a, -1 + n1, 1 + n2, n3, n4, n5, 1, n7, 0, n9, 1, 1, 0, 1, 1] + 
   2*j[p4a, -1 + n1, 1 + n2, n3, n4, n5, 1, n7, 1, n9, 1, 1, 0, 0, 1] - 
   (2*(1 + n2)*j[p4a, -1 + n1, 2 + n2, -2 + n3, n4, n5, 1, n7, 1, n9, 1, 1, 
      0, 1, 1])/(-1 + n3) + (2*(1 + n2)*j[p4a, -1 + n1, 2 + n2, -1 + n3, n4, 
      n5, 1, -1 + n7, 1, n9, 1, 1, 0, 1, 1])/(-1 + n3) + 
   (2*(1 + n2)*j[p4a, -1 + n1, 2 + n2, -1 + n3, n4, n5, 1, n7, 0, n9, 1, 1, 
      0, 1, 1])/(-1 + n3) - (2*(1 + n2)*j[p4a, -1 + n1, 2 + n2, -1 + n3, n4, 
      n5, 1, n7, 1, n9, 1, 1, -1, 1, 1])/(-1 + n3) + 
   (4*(1 + n2)*j[p4a, -1 + n1, 2 + n2, -1 + n3, n4, n5, 1, n7, 1, n9, 1, 1, 
      0, 0, 1])/(-1 + n3) - (n7*j[p4a, n1, n2, -1 + n3, n4, n5, 1, 1 + n7, 1, 
      n9, 1, 1, -1, 1, 1])/(-1 + n3) - 
   (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, 1, n7, 1, n9, 1, 1, -1, 1, 1])/
    (-1 + n3) + j[p4a, n1, 1 + n2, -1 + n3, n4, n5, 1, n7, 0, n9, 1, 1, 0, 1, 
     1]/(1 - n3) + j[p4a, n1, 1 + n2, -1 + n3, n4, n5, 1, n7, 0, n9, 1, 2, 
     -1, 1, 1]/(-1 + n3) + j[p4a, n1, 1 + n2, -1 + n3, n4, n5, 1, n7, 1, n9, 
     1, 0, 0, 1, 1]/(-1 + n3) + 
   ((-1 + 2*n1)*j[p4a, n1, 1 + n2, -1 + n3, n4, n5, 1, n7, 1, n9, 1, 1, 0, 0, 
      1])/(-1 + n3) + ((1 - 2*n1)*j[p4a, n1, 1 + n2, -1 + n3, n4, n5, 1, n7, 
      1, n9, 1, 1, 0, 1, 1])/(-1 + n3) + 
   j[p4a, n1, 1 + n2, -1 + n3, n4, n5, 1, n7, 2, n9, 1, 0, -1, 1, 1]/
    (1 - n3) + (n7*j[p4a, n1, 1 + n2, -1 + n3, n4, n5, 1, 1 + n7, 0, n9, 1, 
      1, -1, 1, 1])/(-1 + n3) + 
   (n7*j[p4a, n1, 1 + n2, -1 + n3, n4, n5, 1, 1 + n7, 1, n9, 0, 1, -1, 1, 1])/
    (-1 + n3) - (n7*j[p4a, n1, 1 + n2, -1 + n3, n4, n5, 1, 1 + n7, 1, n9, 1, 
      0, -1, 1, 1])/(-1 + n3) + 
   (n4*j[p4a, n1, 1 + n2, -1 + n3, 1 + n4, -1 + n5, 1, n7, 1, n9, 1, 1, -1, 
      1, 1])/(-1 + n3) + (n4*j[p4a, n1, 1 + n2, -1 + n3, 1 + n4, n5, 1, n7, 
      0, n9, 1, 1, -1, 1, 1])/(-1 + n3) - 
   (n4*j[p4a, n1, 1 + n2, -1 + n3, 1 + n4, n5, 1, n7, 1, -1 + n9, 1, 1, -1, 
      1, 1])/(-1 + n3) + (n4*j[p4a, n1, 1 + n2, -1 + n3, 1 + n4, n5, 1, n7, 
      1, n9, 0, 1, -1, 1, 1])/(-1 + n3) - 
   (n4*j[p4a, n1, 1 + n2, -1 + n3, 1 + n4, n5, 1, n7, 1, n9, 1, 0, -1, 1, 1])/
    (-1 + n3) + j[p4a, n1, 1 + n2, n3, n4, n5, 1, n7, 0, n9, 1, 1, -1, 1, 
    1] + j[p4a, n1, 1 + n2, n3, n4, n5, 1, n7, 1, n9, 0, 1, -1, 1, 1] - 
   j[p4a, n1, 1 + n2, n3, n4, n5, 1, n7, 1, n9, 1, 0, -1, 1, 1] + 
   j[p4a, n1, 1 + n2, n3, n4, n5, 1, n7, 1, n9, 1, 1, -1, 0, 1] - 
   j[p4a, n1, 1 + n2, n3, n4, n5, 1, n7, 1, n9, 1, 1, -1, 1, 1], 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n6 == 1 && 
    n8 == 1 &&  !(n3 == 1 || n7 == 0 || n9 == 0) -> 
  -((n4*j[p4a, -1 + n1, -1 + n2, -1 + n3, 1 + n4, n5, 1, 1 + n7, 1, 1 + n9, 
       1, 1, 0, 1, 1])/(-1 + n3)) - j[p4a, -1 + n1, -1 + n2, n3, n4, n5, 1, 
    1 + n7, 1, 1 + n9, 1, 1, 0, 1, 1] + 
   j[p4a, -1 + n1, n2, -1 + n3, n4, n5, 0, 1 + n7, 2, 1 + n9, 1, 1, 0, 1, 1]/
    (-1 + n3) + j[p4a, -1 + n1, n2, -1 + n3, n4, n5, 1, 1 + n7, 1, 1 + n9, 0, 
     2, 0, 1, 1]/(-1 + n3) + ((-5 + 2*d - n1 - n3 - 2*n4 - n5 - 2*n7)*
     j[p4a, -1 + n1, n2, -1 + n3, n4, n5, 1, 1 + n7, 1, 1 + n9, 1, 1, 0, 1, 
      1])/(-1 + n3) + j[p4a, -1 + n1, n2, -1 + n3, n4, n5, 1, 1 + n7, 1, 
     1 + n9, 1, 1, 0, 2, 0]/(-1 + n3) + 
   (n4*j[p4a, -1 + n1, n2, -1 + n3, 1 + n4, -1 + n5, 1, 1 + n7, 1, 1 + n9, 1, 
      1, 0, 1, 1])/(-1 + n3) - j[p4a, -1 + n1, n2, n3, -1 + n4, n5, 1, 
    1 + n7, 1, 1 + n9, 1, 1, 0, 1, 1] + j[p4a, -1 + n1, n2, n3, n4, -1 + n5, 
    1, 1 + n7, 1, 1 + n9, 1, 1, 0, 1, 1] + j[p4a, -1 + n1, n2, n3, n4, n5, 1, 
    1 + n7, 1, 1 + n9, 1, 1, 0, 1, 0] + 
   (n2*j[p4a, -1 + n1, 1 + n2, -1 + n3, -1 + n4, n5, 1, 1 + n7, 1, 1 + n9, 1, 
      1, 0, 1, 1])/(-1 + n3) - 
   (n2*j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, -1 + n5, 1, 1 + n7, 1, 1 + n9, 1, 
      1, 0, 1, 1])/(-1 + n3) + 
   (n2*j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, n5, 0, 1 + n7, 1, 1 + n9, 1, 1, 
      0, 1, 1])/(-1 + n3) + (n4*j[p4a, n1, -2 + n2, -1 + n3, 1 + n4, n5, 1, 
      1 + n7, 1, 1 + n9, 1, 1, 0, 1, 1])/(-1 + n3) + 
   ((-2 + d - n2 - n3 - n7)*j[p4a, n1, -1 + n2, -1 + n3, n4, n5, 1, 1 + n7, 
      1, 1 + n9, 1, 1, 0, 1, 1])/(-1 + n3) + 
   ((-1 - n7)*j[p4a, n1, -1 + n2, -1 + n3, n4, n5, 1, 2 + n7, 1, 1 + n9, 0, 
      1, 0, 1, 1])/(-1 + n3) + 
   ((1 + n7)*j[p4a, n1, -1 + n2, -1 + n3, n4, n5, 1, 2 + n7, 1, 1 + n9, 1, 0, 
      0, 1, 1])/(-1 + n3) + j[p4a, n1, -1 + n2, -1 + n3, n4, n5, 2, 1 + n7, 
     1, 1 + n9, 0, 1, 0, 1, 1]/(1 - n3) - 
   (n4*j[p4a, n1, -1 + n2, -1 + n3, 1 + n4, -1 + n5, 1, 1 + n7, 1, 1 + n9, 1, 
      1, 0, 1, 1])/(-1 + n3) - 
   (n4*j[p4a, n1, -1 + n2, -1 + n3, 1 + n4, n5, 0, 1 + n7, 1, 1 + n9, 1, 1, 
      0, 1, 1])/(-1 + n3) - (n4*j[p4a, n1, -1 + n2, -1 + n3, 1 + n4, n5, 1, 
      n7, 1, 1 + n9, 1, 1, 0, 1, 1])/(-1 + n3) + 
   (n4*j[p4a, n1, -1 + n2, -1 + n3, 1 + n4, n5, 1, 1 + n7, 1, n9, 1, 1, 0, 1, 
      1])/(-1 + n3) - (n4*j[p4a, n1, -1 + n2, -1 + n3, 1 + n4, n5, 1, 1 + n7, 
      1, 1 + n9, 0, 1, 0, 1, 1])/(-1 + n3) + 
   (n4*j[p4a, n1, -1 + n2, -1 + n3, 1 + n4, n5, 1, 1 + n7, 1, 1 + n9, 1, 0, 
      0, 1, 1])/(-1 + n3) - j[p4a, n1, -1 + n2, n3, n4, -1 + n5, 1, 1 + n7, 
    1, 1 + n9, 1, 1, 0, 1, 1] + j[p4a, n1, -1 + n2, n3, n4, n5, 1, 1 + n7, 0, 
    1 + n9, 1, 1, 0, 1, 1] - j[p4a, n1, -1 + n2, n3, n4, n5, 1, 1 + n7, 1, 
    1 + n9, 0, 1, 0, 1, 1] + j[p4a, n1, -1 + n2, n3, n4, n5, 1, 1 + n7, 1, 
    1 + n9, 1, 0, 0, 1, 1] - j[p4a, n1, -1 + n2, n3, n4, n5, 1, 1 + n7, 1, 
    1 + n9, 1, 1, -1, 1, 1] + j[p4a, n1, -1 + n2, n3, n4, n5, 1, 1 + n7, 1, 
    1 + n9, 1, 1, 0, 0, 1] + j[p4a, n1, -1 + n2, n3, n4, n5, 1, 1 + n7, 1, 
    1 + n9, 1, 1, 0, 1, 1] + ((-6 + 2*d - n2 - n3 - n4 - 3*n7)*
     j[p4a, n1, n2, -1 + n3, -1 + n4, n5, 1, 1 + n7, 1, 1 + n9, 1, 1, 0, 1, 
      1])/(-1 + n3) + j[p4a, n1, n2, -1 + n3, -1 + n4, n5, 1, 1 + n7, 2, 
     1 + n9, 1, 0, 0, 1, 1]/(1 - n3) + 
   j[p4a, n1, n2, -1 + n3, -1 + n4, n5, 2, 1 + n7, 1, 1 + n9, 0, 1, 0, 1, 1]/
    (1 - n3) + ((8 - 3*d + n1 + 2*n2 + n3 + 2*n4 + n5 + 3*n7)*
     j[p4a, n1, n2, -1 + n3, n4, -1 + n5, 1, 1 + n7, 1, 1 + n9, 1, 1, 0, 1, 
      1])/(-1 + n3) + j[p4a, n1, n2, -1 + n3, n4, -1 + n5, 1, 1 + n7, 1, 
     1 + n9, 1, 1, 0, 2, 1]/(1 - n3) + 
   j[p4a, n1, n2, -1 + n3, n4, -1 + n5, 2, 1 + n7, 1, 1 + n9, 0, 1, 0, 1, 1]/
    (-1 + n3) + j[p4a, n1, n2, -1 + n3, n4, n5, 0, n7, 1, 1 + n9, 2, 1, 0, 1, 
     1]/(1 - n3) + j[p4a, n1, n2, -1 + n3, n4, n5, 1, n7, 0, 1 + n9, 1, 2, 0, 
     1, 1]/(1 - n3) + ((-4 + 2*d - n2 - n3 - 3*n4 - n7)*
     j[p4a, n1, n2, -1 + n3, n4, n5, 1, n7, 1, 1 + n9, 1, 1, 0, 1, 1])/
    (-1 + n3) + ((-2 + d + n1 - n2 - n3 - n4 - n5 - 2*n7)*
     j[p4a, n1, n2, -1 + n3, n4, n5, 1, 1 + n7, 1, n9, 1, 1, 0, 1, 1])/
    (-1 + n3) + j[p4a, n1, n2, -1 + n3, n4, n5, 1, 1 + n7, 1, n9, 2, 0, 0, 1, 
     1]/(-1 + n3) + ((1 - n2)*j[p4a, n1, n2, -1 + n3, n4, n5, 1, 1 + n7, 1, 
      1 + n9, 0, 1, 0, 1, 1])/(-1 + n3) + 
   j[p4a, n1, n2, -1 + n3, n4, n5, 2, 1 + n7, 0, n9, 1, 1, 0, 1, 1]/
    (-1 + n3) + (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, -1 + n5, 1, n7, 1, 
      1 + n9, 1, 1, 0, 1, 1])/(-1 + n3) + 
   (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, -1 + n5, 1, 1 + n7, 0, 1 + n9, 1, 1, 
      0, 1, 1])/(-1 + n3) + (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, -1 + n5, 1, 
      1 + n7, 1, 1 + n9, 0, 1, 0, 1, 1])/(-1 + n3) - 
   (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, -1 + n5, 1, 1 + n7, 1, 1 + n9, 1, 0, 
      0, 1, 1])/(-1 + n3) - (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, 1, n7, 1, 
      n9, 1, 1, 0, 1, 1])/(-1 + n3) - 2*j[p4a, n1, n2, n3, -1 + n4, n5, 1, 
     n7, 1, 1 + n9, 1, 1, 0, 1, 1] + j[p4a, n1, n2, n3, -1 + n4, n5, 1, 
    1 + n7, 1, 1 + n9, 1, 1, 0, 0, 1] + j[p4a, n1, n2, n3, n4, -1 + n5, 1, 
    n7, 1, 1 + n9, 1, 1, 0, 1, 1] + j[p4a, n1, n2, n3, n4, -1 + n5, 1, 
    1 + n7, 0, 1 + n9, 1, 1, 0, 1, 1] + j[p4a, n1, n2, n3, n4, -1 + n5, 1, 
    1 + n7, 1, 1 + n9, 0, 1, 0, 1, 1] - j[p4a, n1, n2, n3, n4, -1 + n5, 1, 
    1 + n7, 1, 1 + n9, 1, 0, 0, 1, 1] - j[p4a, n1, n2, n3, n4, -1 + n5, 1, 
    1 + n7, 1, 1 + n9, 1, 1, 0, 1, 1] + j[p4a, n1, n2, n3, n4, n5, 1, n7, 1, 
    1 + n9, 1, 1, 0, 1, 0] + j[p4a, n1, n2, n3, n4, n5, 1, 1 + n7, 1, n9, 1, 
    1, 0, 0, 1] - (n2*j[p4a, n1, 1 + n2, -1 + n3, -1 + n4, n5, 1, 1 + n7, 1, 
      1 + n9, 0, 1, 0, 1, 1])/(-1 + n3) + 
   (n2*j[p4a, n1, 1 + n2, -1 + n3, n4, -1 + n5, 1, n7, 1, 1 + n9, 1, 1, 0, 1, 
      1])/(-1 + n3) - (n2*j[p4a, n1, 1 + n2, -1 + n3, n4, n5, 0, n7, 1, 
      1 + n9, 1, 1, 0, 1, 1])/(-1 + n3) - 
   (n2*j[p4a, n1, 1 + n2, -1 + n3, n4, n5, 1, n7, 1, n9, 1, 1, 0, 1, 1])/
    (-1 + n3) + (n2*j[p4a, n1, 1 + n2, -1 + n3, n4, n5, 1, 1 + n7, 0, n9, 1, 
      1, 0, 1, 1])/(-1 + n3), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n13 == 1 && n14 == 1 && n3 == 1 && n6 == 1 && 
    n8 == 1 &&  !(n12 == 0 || n7 == 0) -> 
  -((n9*j[p4a, n1, -2 + n2, 1, -1 + n4, n5, 1, 1 + n7, 1, 1 + n9, 1, 1, 
       1 + n12, 1, 1])/(-1 + n4)) + j[p4a, n1, -1 + n2, 0, -1 + n4, n5, 1, 
     1 + n7, 1, n9, 1, 1, 1 + n12, 1, 2]/(-1 + n4) + 
   j[p4a, n1, -1 + n2, 0, -1 + n4, n5, 2, 1 + n7, 1, n9, 1, 1, 1 + n12, 1, 1]/
    (-1 + n4) + j[p4a, n1, -1 + n2, 0, n4, n5, 1, 1 + n7, 1, n9, 1, 1, 
    1 + n12, 1, 1] - (n9*j[p4a, n1, -1 + n2, 1, -2 + n4, n5, 1, 1 + n7, 1, 
      1 + n9, 1, 1, 1 + n12, 1, 1])/(-1 + n4) + 
   (n9*j[p4a, n1, -1 + n2, 1, -1 + n4, -1 + n5, 1, 1 + n7, 1, 1 + n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n4) + 
   (2*n9*j[p4a, n1, -1 + n2, 1, -1 + n4, n5, 1, n7, 1, 1 + n9, 1, 1, 1 + n12, 
      1, 1])/(-1 + n4) + (n9*j[p4a, n1, -1 + n2, 1, -1 + n4, n5, 1, 1 + n7, 
      0, 1 + n9, 1, 1, 1 + n12, 1, 1])/(-1 + n4) + 
   j[p4a, n1, -1 + n2, 1, -1 + n4, n5, 1, 1 + n7, 1, n9, 1, 1, 1 + n12, 0, 2]/
    (1 - n4) + ((d - 2*n4 - n5 - n9)*j[p4a, n1, -1 + n2, 1, -1 + n4, n5, 1, 
      1 + n7, 1, n9, 1, 1, 1 + n12, 1, 1])/(-1 + n4) + 
   (n9*j[p4a, n1, -1 + n2, 1, -1 + n4, n5, 1, 1 + n7, 1, 1 + n9, 0, 1, 
      1 + n12, 1, 1])/(-1 + n4) - 
   (n9*j[p4a, n1, -1 + n2, 1, -1 + n4, n5, 1, 1 + n7, 1, 1 + n9, 1, 0, 
      1 + n12, 1, 1])/(-1 + n4) - 
   (n9*j[p4a, n1, -1 + n2, 1, -1 + n4, n5, 1, 1 + n7, 1, 1 + n9, 1, 1, n12, 
      1, 1])/(-1 + n4) - (n9*j[p4a, n1, -1 + n2, 1, -1 + n4, n5, 1, 1 + n7, 
      1, 1 + n9, 1, 1, 1 + n12, 1, 0])/(-1 + n4) + 
   (n9*j[p4a, n1, -1 + n2, 1, -1 + n4, n5, 1, 1 + n7, 1, 1 + n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n4) + j[p4a, n1, -1 + n2, 1, -1 + n4, n5, 2, 
     1 + n7, 1, n9, 1, 1, 1 + n12, 0, 1]/(1 - n4) + 
   j[p4a, n1, -1 + n2, 1, -1 + n4, n5, 2, 1 + n7, 1, n9, 1, 1, 1 + n12, 1, 0]/
    (1 - n4) + (n5*j[p4a, n1, -1 + n2, 1, -1 + n4, 1 + n5, 1, n7, 1, n9, 1, 
      1, 1 + n12, 1, 1])/(-1 + n4) + 
   (n5*j[p4a, n1, -1 + n2, 1, -1 + n4, 1 + n5, 1, 1 + n7, 1, n9, 1, 1, 
      1 + n12, 0, 1])/(-1 + n4) - 
   (n5*j[p4a, n1, -1 + n2, 1, -1 + n4, 1 + n5, 1, 1 + n7, 1, n9, 1, 1, 
      1 + n12, 1, 0])/(-1 + n4) + j[p4a, n1, -1 + n2, 1, n4, -1 + n5, 1, 
    1 + n7, 1, n9, 1, 1, 1 + n12, 1, 1] - j[p4a, n1, -1 + n2, 1, n4, n5, 1, 
    n7, 1, n9, 1, 1, 1 + n12, 1, 1] - j[p4a, n1, -1 + n2, 1, n4, n5, 1, 
    1 + n7, 1, n9, 1, 1, 1 + n12, 1, 0] + 
   j[p4a, n1, n2, 0, -2 + n4, n5, 1, 1 + n7, 1, n9, 1, 1, 1 + n12, 1, 2]/
    (-1 + n4) + j[p4a, n1, n2, 0, -2 + n4, n5, 2, 1 + n7, 1, n9, 1, 1, 
     1 + n12, 1, 1]/(-1 + n4) + j[p4a, n1, n2, 0, -1 + n4, -1 + n5, 1, 
     1 + n7, 1, n9, 1, 1, 1 + n12, 1, 2]/(1 - n4) + 
   j[p4a, n1, n2, 0, -1 + n4, -1 + n5, 2, 1 + n7, 1, n9, 1, 1, 1 + n12, 1, 1]/
    (1 - n4) + j[p4a, n1, n2, 0, -1 + n4, n5, 1, n7, 1, n9, 1, 1, 1 + n12, 1, 
     2]/(1 - n4) + j[p4a, n1, n2, 0, -1 + n4, n5, 1, 1 + n7, 1, n9, 1, 1, 
     n12, 1, 2]/(-1 + n4) + ((-2 + n4)*j[p4a, n1, n2, 0, -1 + n4, n5, 1, 
      1 + n7, 1, n9, 1, 1, 1 + n12, 1, 1])/(-1 + n4) - 
   j[p4a, n1, n2, 0, n4, -1 + n5, 1, 1 + n7, 1, n9, 1, 1, 1 + n12, 1, 1] + 
   j[p4a, n1, n2, 1, -2 + n4, n5, 0, 1 + n7, 1, n9, 1, 1, 1 + n12, 1, 2]/
    (1 - n4) - (n9*j[p4a, n1, n2, 1, -2 + n4, n5, 0, 1 + n7, 1, 1 + n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n4) + 
   (n9*j[p4a, n1, n2, 1, -2 + n4, n5, 1, n7, 1, 1 + n9, 1, 1, 1 + n12, 1, 1])/
    (-1 + n4) + j[p4a, n1, n2, 1, -2 + n4, n5, 1, 1 + n7, 0, n9, 1, 1, 
     1 + n12, 1, 2]/(1 - n4) + j[p4a, n1, n2, 1, -2 + n4, n5, 1, 1 + n7, 1, 
     n9, 1, 1, 1 + n12, 0, 2]/(1 - n4) - 
   (2*(1 - d + n4 + n5 + n9)*j[p4a, n1, n2, 1, -2 + n4, n5, 1, 1 + n7, 1, n9, 
      1, 1, 1 + n12, 1, 1])/(-1 + n4) + 
   (n9*j[p4a, n1, n2, 1, -2 + n4, n5, 1, 1 + n7, 1, 1 + n9, 0, 1, 1 + n12, 1, 
      1])/(-1 + n4) - (n9*j[p4a, n1, n2, 1, -2 + n4, n5, 1, 1 + n7, 1, 
      1 + n9, 1, 1, n12, 1, 1])/(-1 + n4) - 
   (n9*j[p4a, n1, n2, 1, -2 + n4, n5, 1, 1 + n7, 1, 1 + n9, 1, 1, 1 + n12, 1, 
      0])/(-1 + n4) + (n9*j[p4a, n1, n2, 1, -2 + n4, n5, 1, 1 + n7, 1, 
      1 + n9, 1, 1, 1 + n12, 1, 1])/(-1 + n4) + 
   j[p4a, n1, n2, 1, -2 + n4, n5, 2, 1 + n7, 0, n9, 1, 1, 1 + n12, 1, 1]/
    (1 - n4) + j[p4a, n1, n2, 1, -2 + n4, n5, 2, 1 + n7, 1, n9, 1, 1, 
     1 + n12, 0, 1]/(1 - n4) + j[p4a, n1, n2, 1, -2 + n4, n5, 2, 1 + n7, 1, 
     n9, 1, 1, 1 + n12, 1, 0]/(1 - n4) - 
   (n5*j[p4a, n1, n2, 1, -2 + n4, 1 + n5, 0, 1 + n7, 1, n9, 1, 1, 1 + n12, 1, 
      1])/(-1 + n4) + (n5*j[p4a, n1, n2, 1, -2 + n4, 1 + n5, 1, n7, 1, n9, 1, 
      1, 1 + n12, 1, 1])/(-1 + n4) - 
   (n5*j[p4a, n1, n2, 1, -2 + n4, 1 + n5, 1, 1 + n7, 1, n9, 1, 1, n12, 1, 1])/
    (-1 + n4) + (n5*j[p4a, n1, n2, 1, -2 + n4, 1 + n5, 1, 1 + n7, 1, n9, 1, 
      1, 1 + n12, 0, 1])/(-1 + n4) - 
   (n5*j[p4a, n1, n2, 1, -2 + n4, 1 + n5, 1, 1 + n7, 1, n9, 1, 1, 1 + n12, 1, 
      0])/(-1 + n4) + j[p4a, n1, n2, 1, -1 + n4, -1 + n5, 0, 1 + n7, 1, n9, 
     1, 1, 1 + n12, 1, 2]/(-1 + n4) + 
   (n9*j[p4a, n1, n2, 1, -1 + n4, -1 + n5, 0, 1 + n7, 1, 1 + n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n4) - 
   (n9*j[p4a, n1, n2, 1, -1 + n4, -1 + n5, 1, n7, 1, 1 + n9, 1, 1, 1 + n12, 
      1, 1])/(-1 + n4) + j[p4a, n1, n2, 1, -1 + n4, -1 + n5, 1, 1 + n7, 0, 
     n9, 1, 1, 1 + n12, 1, 2]/(-1 + n4) + 
   j[p4a, n1, n2, 1, -1 + n4, -1 + n5, 1, 1 + n7, 1, n9, 1, 1, 1 + n12, 0, 2]/
    (-1 + n4) + (2*(1 - d + n4 + n5 + n9)*j[p4a, n1, n2, 1, -1 + n4, -1 + n5, 
      1, 1 + n7, 1, n9, 1, 1, 1 + n12, 1, 1])/(-1 + n4) - 
   (n9*j[p4a, n1, n2, 1, -1 + n4, -1 + n5, 1, 1 + n7, 1, 1 + n9, 0, 1, 
      1 + n12, 1, 1])/(-1 + n4) + 
   (n9*j[p4a, n1, n2, 1, -1 + n4, -1 + n5, 1, 1 + n7, 1, 1 + n9, 1, 1, n12, 
      1, 1])/(-1 + n4) + (n9*j[p4a, n1, n2, 1, -1 + n4, -1 + n5, 1, 1 + n7, 
      1, 1 + n9, 1, 1, 1 + n12, 1, 0])/(-1 + n4) - 
   (n9*j[p4a, n1, n2, 1, -1 + n4, -1 + n5, 1, 1 + n7, 1, 1 + n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n4) + j[p4a, n1, n2, 1, -1 + n4, -1 + n5, 2, 
     1 + n7, 0, n9, 1, 1, 1 + n12, 1, 1]/(-1 + n4) + 
   j[p4a, n1, n2, 1, -1 + n4, -1 + n5, 2, 1 + n7, 1, n9, 1, 1, 1 + n12, 0, 1]/
    (-1 + n4) + j[p4a, n1, n2, 1, -1 + n4, -1 + n5, 2, 1 + n7, 1, n9, 1, 1, 
     1 + n12, 1, 0]/(-1 + n4) + 
   ((1 - n4 + n5)*j[p4a, n1, n2, 1, -1 + n4, n5, 0, 1 + n7, 1, n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n4) - 
   (n9*j[p4a, n1, n2, 1, -1 + n4, n5, 1, -1 + n7, 1, 1 + n9, 1, 1, 1 + n12, 
      1, 1])/(-1 + n4) - (n9*j[p4a, n1, n2, 1, -1 + n4, n5, 1, n7, 0, 1 + n9, 
      1, 1, 1 + n12, 1, 1])/(-1 + n4) + 
   j[p4a, n1, n2, 1, -1 + n4, n5, 1, n7, 1, n9, 1, 1, 1 + n12, 0, 2]/
    (-1 + n4) + ((-1 + n4 - n5)*j[p4a, n1, n2, 1, -1 + n4, n5, 1, n7, 1, n9, 
      1, 1, 1 + n12, 1, 1])/(-1 + n4) - 
   (n9*j[p4a, n1, n2, 1, -1 + n4, n5, 1, n7, 1, 1 + n9, 0, 1, 1 + n12, 1, 1])/
    (-1 + n4) + (n9*j[p4a, n1, n2, 1, -1 + n4, n5, 1, n7, 1, 1 + n9, 1, 0, 
      1 + n12, 1, 1])/(-1 + n4) + 
   (n9*j[p4a, n1, n2, 1, -1 + n4, n5, 1, n7, 1, 1 + n9, 1, 1, n12, 1, 1])/
    (-1 + n4) + ((-2 + n4)*j[p4a, n1, n2, 1, -1 + n4, n5, 1, 1 + n7, 0, n9, 
      1, 1, 1 + n12, 1, 1])/(-1 + n4) + 
   (n9*j[p4a, n1, n2, 1, -1 + n4, n5, 1, 1 + n7, 0, 1 + n9, 1, 1, n12, 1, 1])/
    (-1 + n4) + j[p4a, n1, n2, 1, -1 + n4, n5, 1, 1 + n7, 1, n9, 1, 1, n12, 
     0, 2]/(1 - n4) + ((1 - n4 + n5)*j[p4a, n1, n2, 1, -1 + n4, n5, 1, 
      1 + n7, 1, n9, 1, 1, n12, 1, 1])/(-1 + n4) + 
   ((1 - n5)*j[p4a, n1, n2, 1, -1 + n4, n5, 1, 1 + n7, 1, n9, 1, 1, 1 + n12, 
      0, 1])/(-1 + n4) + ((1 - n4 + n5)*j[p4a, n1, n2, 1, -1 + n4, n5, 1, 
      1 + n7, 1, n9, 1, 1, 1 + n12, 1, 0])/(-1 + n4) + 
   (n9*j[p4a, n1, n2, 1, -1 + n4, n5, 1, 1 + n7, 1, 1 + n9, 0, 1, n12, 1, 1])/
    (-1 + n4) - (n9*j[p4a, n1, n2, 1, -1 + n4, n5, 1, 1 + n7, 1, 1 + n9, 1, 
      0, n12, 1, 1])/(-1 + n4) + j[p4a, n1, n2, 1, -1 + n4, n5, 2, n7, 0, n9, 
     1, 1, 1 + n12, 1, 1]/(1 - n4) + j[p4a, n1, n2, 1, -1 + n4, n5, 2, 
     1 + n7, 0, n9, 1, 1, n12, 1, 1]/(-1 + n4) - 
   (n5*j[p4a, n1, n2, 1, -1 + n4, 1 + n5, 1, -1 + n7, 1, n9, 1, 1, 1 + n12, 
      1, 1])/(-1 + n4) + (n5*j[p4a, n1, n2, 1, -1 + n4, 1 + n5, 1, n7, 1, n9, 
      1, 1, n12, 1, 1])/(-1 + n4) + j[p4a, n1, n2, 1, n4, -1 + n5, 0, 1 + n7, 
    1, n9, 1, 1, 1 + n12, 1, 1] - j[p4a, n1, n2, 1, n4, -1 + n5, 1, n7, 1, 
    n9, 1, 1, 1 + n12, 1, 1] - j[p4a, n1, n2, 1, n4, -1 + n5, 1, 1 + n7, 0, 
    n9, 1, 1, 1 + n12, 1, 1] + j[p4a, n1, n2, 1, n4, -1 + n5, 1, 1 + n7, 1, 
    n9, 1, 1, n12, 1, 1] + j[p4a, n1, n2, 1, n4, -1 + n5, 1, 1 + n7, 1, n9, 
    1, 1, 1 + n12, 1, 0] + j[p4a, n1, n2, 1, n4, n5, 1, -1 + n7, 1, n9, 1, 1, 
    1 + n12, 1, 1], j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?Positive, (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, 
    (n7_)?NonPositive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n12 == 0 && n13 == 1 && n2 == 0 && n4 == 0 && n5 == 0 && 
    n7 == 0 && n9 == 0 && n14 != 1 -> 
  ((-2 + d - 2*n6)*n6*j[p4a, 0, 0, n3, 0, 0, 1 + n6, 0, n8, 0, n10, n11, 0, 
     1, -1 + n14])/((d - 2*n14)*(-1 + n14)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && n5 == 0 && 
    n7 == 0 && n9 == 0 &&  !(n11 == 1 || n4 == 0 || n6 == 1) -> 
  -((n10*j[p4a, 0, 0, -1 + n3, 1 + n4, 0, -1 + n6, 0, n8, 0, 1 + n10, n11, 0, 
       1, 1])/(-1 + n6)) + ((-3 + 2*d - n10 - 2*n3 - 2*n4 - n6)*
     j[p4a, 0, 0, n3, 1 + n4, 0, -1 + n6, 0, n8, 0, n10, n11, 0, 1, 1])/
    (-1 + n6) + ((n10 - d*n10 + n10*n11)*j[p4a, 0, 0, n3, 1 + n4, 0, -1 + n6, 
      0, n8, 0, 1 + n10, -1 + n11, 0, 1, 1])/((-1 + n11)*(-1 + n6)) + 
   (n10*j[p4a, 0, 0, n3, 1 + n4, 0, -1 + n6, 0, n8, 0, 1 + n10, n11, 0, 0, 
      1])/(-1 + n6) + j[p4a, 0, 0, n3, 1 + n4, 0, n6, 0, -1 + n8, 0, n10, 
    n11, 0, 1, 1], j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?Positive, (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, 
    (n7_)?NonPositive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n7 == 0 && n9 == 0 &&  !(n4 == 0 || n6 == 1 || n8 == 1) -> 
  (n10*(1 + n4)*j[p4a, -1, 0, n3, 2 + n4, n5, -1 + n6, 0, -1 + n8, 0, 
      1 + n10, 1, 0, 1, 1])/((-1 + n6)*(-1 + n8)) + 
   (n10*n3*j[p4a, -1, 0, 1 + n3, 1 + n4, n5, -1 + n6, 0, -1 + n8, 0, 1 + n10, 
      1, 0, 1, 1])/((-1 + n6)*(-1 + n8)) - 
   (n10*(1 + n4)*j[p4a, 0, -1, n3, 2 + n4, n5, -1 + n6, 0, -1 + n8, 0, 
      1 + n10, 1, 0, 1, 1])/((-1 + n6)*(-1 + n8)) - 
   (n10*j[p4a, 0, 0, -1 + n3, 1 + n4, n5, -1 + n6, 0, n8, 0, 1 + n10, 1, 0, 
      1, 1])/(-1 + n6) - (n10*(1 + n4)*j[p4a, 0, 0, -1 + n3, 2 + n4, n5, 
      -1 + n6, 0, -1 + n8, 0, 1 + n10, 1, 0, 1, 1])/((-1 + n6)*(-1 + n8)) + 
   (n10*(-4 + 2*d - n3 - n4 - n5 - n8)*j[p4a, 0, 0, n3, 1 + n4, n5, -1 + n6, 
      0, -1 + n8, 0, 1 + n10, 1, 0, 1, 1])/((-1 + n6)*(-1 + n8)) + 
   ((-3 + 2*d - n10 - 2*n3 - 2*n4 - n5 - n6)*j[p4a, 0, 0, n3, 1 + n4, n5, 
      -1 + n6, 0, n8, 0, n10, 1, 0, 1, 1])/(-1 + n6) + 
   (n10*j[p4a, 0, 0, n3, 1 + n4, n5, -1 + n6, 0, n8, 0, 1 + n10, 1, 0, 1, 1])/
    (-1 + n6) + j[p4a, 0, 0, n3, 1 + n4, n5, n6, 0, -1 + n8, 0, n10, 1, 0, 1, 
    1] - (n10*n5*j[p4a, 0, 0, n3, 1 + n4, 1 + n5, -1 + n6, 0, -1 + n8, 0, 
      1 + n10, 1, 0, 0, 1])/((-1 + n6)*(-1 + n8)) + 
   (n10*n5*j[p4a, 0, 0, n3, 1 + n4, 1 + n5, -1 + n6, 0, -1 + n8, 0, 1 + n10, 
      1, 0, 1, 0])/((-1 + n6)*(-1 + n8)) + 
   (n5*j[p4a, 0, 0, n3, 1 + n4, 1 + n5, -1 + n6, 0, n8, 0, n10, 1, 0, 0, 1])/
    (-1 + n6) - (n5*j[p4a, 0, 0, n3, 1 + n4, 1 + n5, -1 + n6, 0, n8, 0, n10, 
      1, 0, 1, 0])/(-1 + n6) + 
   (n10*(1 + n4)*j[p4a, 0, 0, n3, 2 + n4, n5, -2 + n6, 0, -1 + n8, 0, 
      1 + n10, 1, 0, 1, 1])/((-1 + n6)*(-1 + n8)) + 
   (n10*(1 + n4)*j[p4a, 0, 0, n3, 2 + n4, n5, -1 + n6, -1, -1 + n8, 0, 
      1 + n10, 1, 0, 1, 1])/((-1 + n6)*(-1 + n8)) - 
   (n10*(1 + n4)*j[p4a, 0, 0, n3, 2 + n4, n5, -1 + n6, 0, -1 + n8, -1, 
      1 + n10, 1, 0, 1, 1])/((-1 + n6)*(-1 + n8)) + 
   (n10*(1 + n4)*j[p4a, 0, 0, n3, 2 + n4, n5, -1 + n6, 0, -1 + n8, 0, n10, 1, 
      0, 1, 1])/((-1 + n6)*(-1 + n8)) - 
   (n10*(1 + n4)*j[p4a, 0, 0, n3, 2 + n4, n5, -1 + n6, 0, -1 + n8, 0, 
      1 + n10, 0, 0, 1, 1])/((-1 + n6)*(-1 + n8)) + 
   (n10*(1 + n4)*j[p4a, 0, 0, n3, 2 + n4, n5, -1 + n6, 0, -1 + n8, 0, 
      1 + n10, 1, 0, 1, 0])/((-1 + n6)*(-1 + n8)) - 
   (n10*n3*j[p4a, 0, 0, 1 + n3, 1 + n4, n5, -1 + n6, 0, -2 + n8, 0, 1 + n10, 
      1, 0, 1, 1])/((-1 + n6)*(-1 + n8)) + 
   (n10*n3*j[p4a, 0, 0, 1 + n3, 1 + n4, n5, -1 + n6, 0, -1 + n8, 0, n10, 1, 
      0, 1, 1])/((-1 + n6)*(-1 + n8)) - 
   (n10*n3*j[p4a, 0, 0, 1 + n3, 1 + n4, n5, -1 + n6, 0, -1 + n8, 0, 1 + n10, 
      0, 0, 1, 1])/((-1 + n6)*(-1 + n8)) + 
   (n10*n3*j[p4a, 0, 0, 1 + n3, 1 + n4, n5, -1 + n6, 0, -1 + n8, 0, 1 + n10, 
      1, -1, 1, 1])/((-1 + n6)*(-1 + n8)) - 
   (n10*n3*j[p4a, 0, 0, 1 + n3, 1 + n4, n5, -1 + n6, 0, -1 + n8, 0, 1 + n10, 
      1, 0, 0, 1])/((-1 + n6)*(-1 + n8)) - 
   (n10*n3*j[p4a, 0, 0, 1 + n3, 1 + n4, n5, -1 + n6, 0, -1 + n8, 0, 1 + n10, 
      1, 0, 1, 1])/((-1 + n6)*(-1 + n8)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n13 == 1 && n4 == 0 && n5 == 0 && 
    n7 == 0 && n9 == 0 &&  !(n11 == 1 || n14 == 1 || n2 == 0) -> 
  (n8*j[p4a, 0, n2, n3, 0, 0, n6, 0, 1 + n8, 0, 1, -1 + n11, 0, 1, n14])/
    (-1 + n11) + (n6*j[p4a, 0, n2, n3, 0, 0, 1 + n6, 0, n8, 0, 1, n11, 0, 1, 
      -1 + n14])/(-1 + n14) - (n3*j[p4a, 0, n2, 1 + n3, 0, 0, n6, 0, n8, 0, 
      1, -1 + n11, 0, 1, n14])/(-1 + n11) - j[p4a, 0, 1 + n2, -1 + n3, 0, 0, 
    n6, 0, n8, 0, 1, n11, 0, 1, n14] + 
   (n6*j[p4a, 0, 1 + n2, -1 + n3, 0, 0, 1 + n6, 0, n8, 0, 1, n11, 0, 1, 
      -1 + n14])/(-1 + n14) + j[p4a, 0, 1 + n2, n3, 0, 0, -1 + n6, 0, n8, 0, 
    1, n11, 0, 1, n14] - (n8*j[p4a, 0, 1 + n2, n3, 0, 0, n6, -1, 1 + n8, 0, 
      1, -1 + n11, 0, 1, n14])/(-1 + n11) + j[p4a, 0, 1 + n2, n3, 0, 0, n6, 
    0, -1 + n8, 0, 1, n11, 0, 1, n14] + j[p4a, 0, 1 + n2, n3, 0, 0, n6, 0, 
    n8, 0, 0, n11, 0, 1, n14] - 
   (2*n3*j[p4a, 0, 1 + n2, n3, 0, 0, n6, 0, n8, 0, 1, -1 + n11, 0, 1, n14])/
    (-1 + n11) + j[p4a, 0, 1 + n2, n3, 0, 0, n6, 0, n8, 0, 1, n11, 0, 0, 
    n14] + ((1 - n14 + n6)*j[p4a, 0, 1 + n2, n3, 0, 0, n6, 0, n8, 0, 1, n11, 
      0, 1, -1 + n14])/(-1 + n14) - j[p4a, 0, 1 + n2, n3, 0, 0, n6, 0, n8, 0, 
    1, n11, 0, 1, n14] + (n8*j[p4a, 0, 1 + n2, n3, 0, 0, n6, 0, 1 + n8, 0, 1, 
      -1 + n11, -1, 1, n14])/(-1 + n11) - 
   (n8*j[p4a, 0, 1 + n2, n3, 0, 0, n6, 0, 1 + n8, 0, 1, -1 + n11, 0, 0, n14])/
    (-1 + n11) - (n6*j[p4a, 0, 1 + n2, n3, 0, 0, 1 + n6, -1, n8, 0, 1, n11, 
      0, 1, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, 0, 1 + n2, n3, 0, 0, 1 + n6, 0, -1 + n8, 0, 1, n11, 0, 1, 
      -1 + n14])/(-1 + n14) + (n6*j[p4a, 0, 1 + n2, n3, 0, 0, 1 + n6, 0, n8, 
      0, 1, n11, -1, 1, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, 0, 1 + n2, n3, 0, 0, 1 + n6, 0, n8, 0, 1, n11, 0, 0, -1 + n14])/
    (-1 + n14) - (n6*j[p4a, 0, 1 + n2, n3, 0, 0, 1 + n6, 0, n8, 0, 1, n11, 0, 
      1, -2 + n14])/(-1 + n14) + 
   (n3*j[p4a, 0, 1 + n2, 1 + n3, 0, 0, n6, -1, n8, 0, 1, -1 + n11, 0, 1, 
      n14])/(-1 + n11) + (2*n3*j[p4a, 0, 1 + n2, 1 + n3, 0, 0, n6, 0, 
      -1 + n8, 0, 1, -1 + n11, 0, 1, n14])/(-1 + n11) - 
   (n3*j[p4a, 0, 1 + n2, 1 + n3, 0, 0, n6, 0, n8, 0, 1, -1 + n11, -1, 1, 
      n14])/(-1 + n11) + (n3*j[p4a, 0, 1 + n2, 1 + n3, 0, 0, n6, 0, n8, 0, 1, 
      -1 + n11, 0, 0, n14])/(-1 + n11), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n4 == 0 && 
    n7 == 0 && n9 == 0 &&  !(n11 == 1 || n2 == 0 || n6 == 1) -> 
  (n8*j[p4a, 0, n2, n3, 0, n5, n6, 0, 1 + n8, 0, 1, -1 + n11, 0, 1, 1])/
    (-1 + n11) - (n3*j[p4a, 0, n2, 1 + n3, 0, n5, n6, 0, n8, 0, 1, -1 + n11, 
      0, 1, 1])/(-1 + n11) - j[p4a, 0, 1 + n2, -1 + n3, 0, n5, n6, 0, n8, 0, 
    1, n11, 0, 1, 1] + ((1 - d + n5 + n6)*j[p4a, 0, 1 + n2, n3, 0, n5, 
      -1 + n6, 0, n8, 0, 1, n11, 0, 1, 1])/(-1 + n6) - 
   (n8*j[p4a, 0, 1 + n2, n3, 0, n5, n6, -1, 1 + n8, 0, 1, -1 + n11, 0, 1, 1])/
    (-1 + n11) + j[p4a, 0, 1 + n2, n3, 0, n5, n6, 0, -1 + n8, 0, 1, n11, 0, 
    1, 1] + j[p4a, 0, 1 + n2, n3, 0, n5, n6, 0, n8, 0, 0, n11, 0, 1, 1] - 
   (2*n3*j[p4a, 0, 1 + n2, n3, 0, n5, n6, 0, n8, 0, 1, -1 + n11, 0, 1, 1])/
    (-1 + n11) + j[p4a, 0, 1 + n2, n3, 0, n5, n6, 0, n8, 0, 1, n11, 0, 0, 
    1] + j[p4a, 0, 1 + n2, n3, 0, n5, n6, 0, n8, 0, 1, n11, 0, 1, 0] - 
   j[p4a, 0, 1 + n2, n3, 0, n5, n6, 0, n8, 0, 1, n11, 0, 1, 1] + 
   (n8*j[p4a, 0, 1 + n2, n3, 0, n5, n6, 0, 1 + n8, 0, 1, -1 + n11, -1, 1, 1])/
    (-1 + n11) - (n8*j[p4a, 0, 1 + n2, n3, 0, n5, n6, 0, 1 + n8, 0, 1, 
      -1 + n11, 0, 0, 1])/(-1 + n11) - 
   (n5*j[p4a, 0, 1 + n2, n3, 0, 1 + n5, -1 + n6, 0, n8, 0, 1, n11, 0, 0, 1])/
    (-1 + n6) + (n5*j[p4a, 0, 1 + n2, n3, 0, 1 + n5, -1 + n6, 0, n8, 0, 1, 
      n11, 0, 1, 0])/(-1 + n6) + 
   (n3*j[p4a, 0, 1 + n2, 1 + n3, 0, n5, n6, -1, n8, 0, 1, -1 + n11, 0, 1, 1])/
    (-1 + n11) + (2*n3*j[p4a, 0, 1 + n2, 1 + n3, 0, n5, n6, 0, -1 + n8, 0, 1, 
      -1 + n11, 0, 1, 1])/(-1 + n11) - 
   (n3*j[p4a, 0, 1 + n2, 1 + n3, 0, n5, n6, 0, n8, 0, 1, -1 + n11, -1, 1, 1])/
    (-1 + n11) + (n3*j[p4a, 0, 1 + n2, 1 + n3, 0, n5, n6, 0, n8, 0, 1, 
      -1 + n11, 0, 0, 1])/(-1 + n11), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n7 == 0 && n9 == 0 &&  !(n11 == 1 || n5 == 0 || n6 == 1) -> 
  (n4*j[p4a, -1, 0, n3, 1 + n4, 1 + n5, -1 + n6, 0, n8, 0, 1, n11, 0, 1, 1])/
    (-1 + n6) + (n3*j[p4a, -1, 0, 1 + n3, n4, 1 + n5, -1 + n6, 0, n8, 0, 1, 
      n11, 0, 1, 1])/(-1 + n6) + j[p4a, 0, -1, n3, n4, 1 + n5, n6, 0, n8, 0, 
    1, n11, 0, 1, 1] - (n4*j[p4a, 0, -1, n3, 1 + n4, 1 + n5, -1 + n6, 0, n8, 
      0, 1, n11, 0, 1, 1])/(-1 + n6) + 
   (n3*j[p4a, 0, -1, 1 + n3, n4, 1 + n5, n6, 0, n8, 0, 1, -1 + n11, 0, 1, 1])/
    (-1 + n11) + j[p4a, 0, 0, n3, -1 + n4, 1 + n5, n6, 0, n8, 0, 1, n11, 0, 
    1, 1] + (n8*j[p4a, 0, 0, n3, -1 + n4, 1 + n5, n6, 0, 1 + n8, 0, 1, 
      -1 + n11, 0, 1, 1])/(-1 + n11) + 
   ((2 - d + n3)*j[p4a, 0, 0, n3, n4, 1 + n5, -1 + n6, 0, n8, 0, 1, n11, 0, 
      1, 1])/(-1 + n6) - (n8*j[p4a, 0, 0, n3, n4, 1 + n5, -1 + n6, 0, 1 + n8, 
      0, 1, -1 + n11, 0, 1, 1])/(-1 + n11) - j[p4a, 0, 0, n3, n4, 1 + n5, n6, 
    0, -1 + n8, 0, 1, n11, 0, 1, 1] + 
   ((n3 + n4 - n8)*j[p4a, 0, 0, n3, n4, 1 + n5, n6, 0, n8, 0, 1, -1 + n11, 0, 
      1, 1])/(-1 + n11) + (n4*j[p4a, 0, 0, n3, 1 + n4, 1 + n5, -2 + n6, 0, 
      n8, 0, 1, n11, 0, 1, 1])/(-1 + n6) + 
   (n4*j[p4a, 0, 0, n3, 1 + n4, 1 + n5, -1 + n6, -1, n8, 0, 1, n11, 0, 1, 1])/
    (-1 + n6) - (n4*j[p4a, 0, 0, n3, 1 + n4, 1 + n5, -1 + n6, 0, n8, -1, 1, 
      n11, 0, 1, 1])/(-1 + n6) + 
   (n4*j[p4a, 0, 0, n3, 1 + n4, 1 + n5, -1 + n6, 0, n8, 0, 0, n11, 0, 1, 1])/
    (-1 + n6) - (n4*(n11 - n6)*j[p4a, 0, 0, n3, 1 + n4, 1 + n5, -1 + n6, 0, 
      n8, 0, 1, -1 + n11, 0, 1, 1])/((-1 + n11)*(-1 + n6)) - 
   (n4*j[p4a, 0, 0, n3, 1 + n4, 1 + n5, n6, 0, -1 + n8, 0, 1, -1 + n11, 0, 1, 
      1])/(-1 + n11) + (n3*j[p4a, 0, 0, 1 + n3, -1 + n4, 1 + n5, n6, 0, n8, 
      0, 1, -1 + n11, 0, 1, 1])/(-1 + n11) - 
   (n3*j[p4a, 0, 0, 1 + n3, n4, 1 + n5, -1 + n6, 0, -1 + n8, 0, 1, n11, 0, 1, 
      1])/(-1 + n6) + (n3*j[p4a, 0, 0, 1 + n3, n4, 1 + n5, -1 + n6, 0, n8, 0, 
      0, n11, 0, 1, 1])/(-1 + n6) - 
   (n3*j[p4a, 0, 0, 1 + n3, n4, 1 + n5, -1 + n6, 0, n8, 0, 1, -1 + n11, 0, 1, 
      1])/(-1 + n6) + (n3*j[p4a, 0, 0, 1 + n3, n4, 1 + n5, -1 + n6, 0, n8, 0, 
      1, n11, -1, 1, 1])/(-1 + n6) - 
   (n3*j[p4a, 0, 0, 1 + n3, n4, 1 + n5, -1 + n6, 0, n8, 0, 1, n11, 0, 0, 1])/
    (-1 + n6) - (n3*j[p4a, 0, 0, 1 + n3, n4, 1 + n5, -1 + n6, 0, n8, 0, 1, 
      n11, 0, 1, 1])/(-1 + n6) - 
   (n3*j[p4a, 0, 0, 1 + n3, n4, 1 + n5, n6, -1, n8, 0, 1, -1 + n11, 0, 1, 1])/
    (-1 + n11) - (2*n3*j[p4a, 0, 0, 1 + n3, n4, 1 + n5, n6, 0, -1 + n8, 0, 1, 
      -1 + n11, 0, 1, 1])/(-1 + n11) + 
   (n3*j[p4a, 0, 0, 1 + n3, n4, 1 + n5, n6, 0, n8, 0, 1, -1 + n11, -1, 1, 1])/
    (-1 + n11) - (n3*j[p4a, 0, 0, 1 + n3, n4, 1 + n5, n6, 0, n8, 0, 1, 
      -1 + n11, 0, 0, 1])/(-1 + n11) - 
   (n3*j[p4a, 0, 0, 1 + n3, n4, 1 + n5, n6, 0, n8, 0, 1, -1 + n11, 0, 1, 0])/
    (-1 + n11), j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n4 == 0 && 
    n5 == 0 && n9 == 0 &&  !(n14 == 1 || n7 == 0 || n8 == 1) -> 
  j[p4a, 0, -1 + n2, n3, 0, 0, n6, 1 + n7, n8, 0, 1, 1, 0, 1, n14] - 
   (n6*j[p4a, 0, -1 + n2, n3, 0, 0, 1 + n6, 1 + n7, n8, 0, 1, 1, 0, 1, 
      -1 + n14])/(-1 + n14) + j[p4a, 0, n2, -1 + n3, 0, 0, n6, 1 + n7, n8, 0, 
    1, 1, 0, 1, n14] - (n6*j[p4a, 0, n2, -1 + n3, 0, 0, 1 + n6, 1 + n7, n8, 
      0, 1, 1, 0, 1, -1 + n14])/(-1 + n14) - j[p4a, 0, n2, n3, 0, 0, -1 + n6, 
    1 + n7, n8, 0, 1, 1, 0, 1, n14] + 
   ((2 - d + n3)*j[p4a, 0, n2, n3, 0, 0, n6, 1 + n7, -1 + n8, 0, 1, 1, 0, 1, 
      n14])/(-1 + n8) + ((-1 + n14 - n6)*j[p4a, 0, n2, n3, 0, 0, n6, 1 + n7, 
      n8, 0, 1, 1, 0, 1, -1 + n14])/(-1 + n14) + 
   (n6*j[p4a, 0, n2, n3, 0, 0, 1 + n6, n7, n8, 0, 1, 1, 0, 1, -1 + n14])/
    (-1 + n14) + (n6*j[p4a, 0, n2, n3, 0, 0, 1 + n6, 1 + n7, -1 + n8, 0, 1, 
      1, 0, 1, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, 0, n2, n3, 0, 0, 1 + n6, 1 + n7, n8, 0, 1, 1, -1, 1, -1 + n14])/
    (-1 + n14) + (n6*j[p4a, 0, n2, n3, 0, 0, 1 + n6, 1 + n7, n8, 0, 1, 1, 0, 
      0, -1 + n14])/(-1 + n14) + 
   (n6*j[p4a, 0, n2, n3, 0, 0, 1 + n6, 1 + n7, n8, 0, 1, 1, 0, 1, -2 + n14])/
    (-1 + n14) - (n3*j[p4a, 0, n2, 1 + n3, 0, 0, n6, n7, -1 + n8, 0, 1, 1, 0, 
      1, n14])/(-1 + n8) + (n3*j[p4a, 0, n2, 1 + n3, 0, 0, n6, 1 + n7, 
      -1 + n8, 0, 1, 1, 0, 0, n14])/(-1 + n8) - 
   (n2*j[p4a, 0, 1 + n2, -1 + n3, 0, 0, n6, 1 + n7, -1 + n8, 0, 1, 1, 0, 1, 
      n14])/(-1 + n8) + (n2*j[p4a, 0, 1 + n2, n3, 0, 0, n6, n7, -1 + n8, 0, 
      1, 1, 0, 1, n14])/(-1 + n8) + 
   (n2*j[p4a, 0, 1 + n2, n3, 0, 0, n6, 1 + n7, -2 + n8, 0, 1, 1, 0, 1, n14])/
    (-1 + n8) - (n2*j[p4a, 0, 1 + n2, n3, 0, 0, n6, 1 + n7, -1 + n8, 0, 1, 1, 
      -1, 1, n14])/(-1 + n8) + 
   (2*n2*j[p4a, 0, 1 + n2, n3, 0, 0, n6, 1 + n7, -1 + n8, 0, 1, 1, 0, 0, 
      n14])/(-1 + n8), j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?Positive, (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, 
    (n7_)?NonPositive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n7 == -1 && n9 == 0 &&  !(n2 == 0 || n4 == 0 || n6 == 1) -> 
  j[p4a, 0, 1 + n2, -1 + n3, 1 + n4, -1 + n5, -1 + n6, -1, n8, 0, 1, 1, 0, 1, 
     2]/(-1 + n6) + j[p4a, 0, 1 + n2, n3, n4, n5, -1 + n6, -1, n8, 0, 1, 1, 
     0, 0, 2]/(1 - n6) + ((1 - d + n4 + n5 + n6)*j[p4a, 0, 1 + n2, n3, n4, 
      n5, -1 + n6, -1, n8, 0, 1, 1, 0, 1, 1])/(-1 + n6) + 
   ((-1 + d - n4 - n5 - n6)*j[p4a, 0, 1 + n2, n3, 1 + n4, -1 + n5, -1 + n6, 
      -1, n8, 0, 1, 1, 0, 1, 1])/(-1 + n6) + j[p4a, 0, 1 + n2, n3, 1 + n4, 
    -1 + n5, n6, -1, -1 + n8, 0, 1, 1, 0, 1, 1] + 
   ((-1 - n4 + n5)*j[p4a, 0, 1 + n2, n3, 1 + n4, n5, -1 + n6, -2, n8, 0, 1, 
      1, 0, 1, 1])/(-1 + n6), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && n7 == 0 && 
    n8 == 1 && n9 == 0 &&  !(n10 == 1 || n6 == 1) -> 
  -((n4*j[p4a, n1, 0, -1 + n3, 1 + n4, n5, -1 + n6, 0, 1, 0, n10, 1, 0, 1, 
       1])/(-1 + n6)) + ((1 - d + n4 + n5 + n6)*j[p4a, n1, 0, n3, n4, n5, 
      -1 + n6, 0, 1, 0, n10, 1, 0, 1, 1])/(-1 + n6) + 
   ((1 - 2*d + n10 + n3 + n4 + n5 + 2*n6)*j[p4a, n1, 0, n3, n4, n5, n6, 0, 1, 
      0, -1 + n10, 1, 0, 1, 1])/(-1 + n10) + j[p4a, n1, 0, n3, n4, n5, n6, 0, 
    1, 0, n10, 1, 0, 1, 0] - (n5*j[p4a, n1, 0, n3, n4, 1 + n5, -1 + n6, 0, 1, 
      0, n10, 1, 0, 0, 1])/(-1 + n6) + 
   (n5*j[p4a, n1, 0, n3, n4, 1 + n5, -1 + n6, 0, 1, 0, n10, 1, 0, 1, 0])/
    (-1 + n6) - (n5*j[p4a, n1, 0, n3, n4, 1 + n5, n6, 0, 1, 0, -1 + n10, 1, 
      0, 0, 1])/(-1 + n10) + (n5*j[p4a, n1, 0, n3, n4, 1 + n5, n6, 0, 1, 0, 
      -1 + n10, 1, 0, 1, 0])/(-1 + n10) + 
   ((-n4 - n3*n4 + n4*n6)*j[p4a, n1, 0, n3, 1 + n4, n5, -1 + n6, 0, 1, 0, 
      -1 + n10, 1, 0, 1, 1])/((-1 + n10)*(-1 + n6)) + 
   (n4*j[p4a, n1, 0, n3, 1 + n4, n5, -1 + n6, 0, 1, 0, n10, 1, 0, 1, 0])/
    (-1 + n6) - (n4*j[p4a, n1, 0, n3, 1 + n4, n5, n6, 0, 0, 0, -1 + n10, 1, 
      0, 1, 1])/(-1 + n10) - (n3*(-1 + d - n4 - n5 - n6)*
     j[p4a, n1, 0, 1 + n3, n4, n5, -1 + n6, 0, 1, 0, -1 + n10, 1, 0, 1, 1])/
    ((-1 + n10)*(-1 + n6)) - (n3*j[p4a, n1, 0, 1 + n3, n4, n5, n6, 0, 0, 0, 
      -1 + n10, 1, 0, 1, 1])/(-1 + n10) + 
   (n3*j[p4a, n1, 0, 1 + n3, n4, n5, n6, 0, 1, 0, -1 + n10, 1, 0, 1, 0])/
    (-1 + n10) - (n3*n5*j[p4a, n1, 0, 1 + n3, n4, 1 + n5, -1 + n6, 0, 1, 0, 
      -1 + n10, 1, 0, 0, 1])/((-1 + n10)*(-1 + n6)) + 
   (n3*n5*j[p4a, n1, 0, 1 + n3, n4, 1 + n5, -1 + n6, 0, 1, 0, -1 + n10, 1, 0, 
      1, 0])/((-1 + n10)*(-1 + n6)) + 
   (n3*n4*j[p4a, n1, 0, 1 + n3, 1 + n4, n5, -1 + n6, 0, 1, 0, -1 + n10, 1, 0, 
      1, 0])/((-1 + n10)*(-1 + n6)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n4 == 0 && n5 == 0 && 
    n8 == 1 && n9 == 0 && n14 != 1 -> 
  ((-2 + d - 2*n6)*n6*j[p4a, n1, n2, n3, 0, 0, 1 + n6, n7, 1, 0, 1, 1, 0, 1, 
     -1 + n14])/((d - 2*n14)*(-1 + n14)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n4 == 0 && 
    n8 == 1 && n9 == 0 &&  !(n5 == 0 || n6 == 1) -> 
  ((-4 + d - 2*n5)*j[p4a, n1, -1 + n2, n3, 0, 1 + n5, n6, n7, 1, 0, 1, 1, 0, 
      1, 1])/(2*(-2 + d - n5 - n6)) + 
   ((-4 + d)*j[p4a, n1, n2, n3, 0, 1 + n5, -1 + n6, n7, 1, 0, 1, 1, 0, 0, 2])/
    (2*(-2 + d - n5 - n6)*(-1 + n6)) + 
   ((-4 + d - 2*n5)*j[p4a, n1, n2, n3, 0, 1 + n5, -1 + n6, n7, 1, 0, 1, 1, 0, 
      1, 1])/(2*(-1 + n6)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n8 == 1 && n9 == 0 &&  !(n3 == 1 || n4 == 0 || n6 == 1) -> 
  ((1 + n4)*j[p4a, -1 + n1, 0, -1 + n3, 2 + n4, n5, -1 + n6, n7, 1, 0, 2, 1, 
      0, 1, 1])/(2*(-1 + n3)*(-1 + n6)) - 
   (n7*j[p4a, n1, -1, -1 + n3, 1 + n4, n5, n6, 1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-1 + n3)) + ((-1 - n4)*j[p4a, n1, -1, -1 + n3, 2 + n4, n5, -1 + n6, 
      n7, 1, 0, 2, 1, 0, 1, 1])/(2*(-1 + n3)*(-1 + n6)) - 
   (n7*j[p4a, n1, 0, -1 + n3, n4, n5, n6, 1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-1 + n3)) + (n7*j[p4a, n1, 0, -1 + n3, 1 + n4, -1 + n5, n6, 1 + n7, 
      1, 0, 1, 1, 0, 1, 1])/(2*(-1 + n3)) + 
   ((4 - d + n7)*j[p4a, n1, 0, -1 + n3, 1 + n4, n5, -1 + n6, n7, 1, 0, 2, 1, 
      0, 1, 1])/(2*(-1 + n3)*(-1 + n6)) + 
   ((2*n7 - n3*n7)*j[p4a, n1, 0, -1 + n3, 1 + n4, n5, -1 + n6, 1 + n7, 1, 0, 
      1, 1, 0, 1, 1])/(2*(-1 + n3)*(-1 + n6)) - 
   (n7*j[p4a, n1, 0, -1 + n3, 1 + n4, n5, -1 + n6, 1 + n7, 1, 0, 2, 0, 0, 1, 
      1])/(2*(-1 + n3)*(-1 + n6)) + 
   ((-1 + d - n4 - 2*n6)*j[p4a, n1, 0, -1 + n3, 1 + n4, n5, n6, n7, 1, 0, 1, 
      1, 0, 1, 1])/(2*(-1 + n3)) + 
   (n7*j[p4a, n1, 0, -1 + n3, 1 + n4, n5, n6, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-1 + n3)) + ((1 + n4)*j[p4a, n1, 0, -1 + n3, 2 + n4, n5, -2 + n6, n7, 
      1, 0, 2, 1, 0, 1, 1])/(2*(-1 + n3)*(-1 + n6)) + 
   ((1 + n4)*j[p4a, n1, 0, -1 + n3, 2 + n4, n5, -1 + n6, -1 + n7, 1, 0, 2, 1, 
      0, 1, 1])/(2*(-1 + n3)*(-1 + n6)) + 
   ((-1 - n4)*j[p4a, n1, 0, -1 + n3, 2 + n4, n5, -1 + n6, n7, 1, -1, 2, 1, 0, 
      1, 1])/(2*(-1 + n3)*(-1 + n6)) + 
   ((1 + n3 + n4 + n3*n4 - n6 - n4*n6)*j[p4a, n1, 0, -1 + n3, 2 + n4, n5, 
      -1 + n6, n7, 1, 0, 1, 1, 0, 1, 1])/(2*(-1 + n3)*(-1 + n6)) + 
   ((-1 - n4)*j[p4a, n1, 0, -1 + n3, 2 + n4, n5, -1 + n6, n7, 1, 0, 2, 0, 0, 
      1, 1])/(2*(-1 + n3)*(-1 + n6)) + 
   ((1 + n4)*j[p4a, n1, 0, -1 + n3, 2 + n4, n5, n6, n7, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-1 + n3)) + ((-5 + 3*d - 2*n3 - 3*n4 - 2*n5 - 2*n6 - n7)*
     j[p4a, n1, 0, n3, 1 + n4, n5, -1 + n6, n7, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-1 + n6)) + (n7*j[p4a, n1, 0, n3, 1 + n4, n5, -1 + n6, 1 + n7, 1, 0, 
      1, 1, 0, 0, 1])/(2*(-1 + n6)) + j[p4a, n1, 0, n3, 1 + n4, n5, n6, n7, 
    0, 0, 1, 1, 0, 1, 1] + (n5*j[p4a, n1, 0, n3, 1 + n4, 1 + n5, -1 + n6, n7, 
      1, 0, 1, 1, 0, 0, 1])/(-1 + n6) - 
   (n5*j[p4a, n1, 0, n3, 1 + n4, 1 + n5, -1 + n6, n7, 1, 0, 1, 1, 0, 1, 0])/
    (-1 + n6) + ((-1 - n4)*j[p4a, n1, 0, n3, 2 + n4, n5, -1 + n6, n7, 1, 0, 
      1, 1, 0, 1, 0])/(2*(-1 + n6)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n14 == 1 && n5 == 0 && n6 == 1 && 
    n7 == 0 && n9 == 0 &&  !(n11 == 1 || n8 == 1) -> 
  -((n4*j[p4a, -1, n2, n3, 1 + n4, 0, 1, 0, -1 + n8, 0, 1, n11, 0, n13, 1])/
     (-1 + n8)) + (n4*j[p4a, 0, -1 + n2, n3, 1 + n4, 0, 1, 0, -1 + n8, 0, 1, 
      n11, 0, n13, 1])/(-1 + n8) + 
   (n4*j[p4a, 0, n2, -1 + n3, 1 + n4, 0, 1, 0, -1 + n8, 0, 1, n11, 0, n13, 
      1])/(-1 + n8) + ((-1 - 2*d + 2*n11 + 2*n13 + n3 + n4 + n8)*
     j[p4a, 0, n2, n3, n4, 0, 1, 0, -1 + n8, 0, 1, n11, 0, n13, 1])/
    (-1 + n8) + ((-1 - d + n11 + 2*n13)*j[p4a, 0, n2, n3, n4, 0, 1, 0, n8, 0, 
      1, -1 + n11, 0, n13, 1])/(-1 + n11) + j[p4a, 0, n2, n3, n4, 0, 1, 0, 
    n8, 0, 1, n11, 0, -1 + n13, 1] - 
   (n4*j[p4a, 0, n2, n3, 1 + n4, 0, 0, 0, -1 + n8, 0, 1, n11, 0, n13, 1])/
    (-1 + n8) - (n4*j[p4a, 0, n2, n3, 1 + n4, 0, 1, -1, -1 + n8, 0, 1, n11, 
      0, n13, 1])/(-1 + n8) + (n4*j[p4a, 0, n2, n3, 1 + n4, 0, 1, 0, -1 + n8, 
      -1, 1, n11, 0, n13, 1])/(-1 + n8) - 
   (n4*j[p4a, 0, n2, n3, 1 + n4, 0, 1, 0, -1 + n8, 0, 0, n11, 0, n13, 1])/
    (-1 + n8) + (n4*j[p4a, 0, n2, n3, 1 + n4, 0, 1, 0, -1 + n8, 0, 1, 
      -1 + n11, 0, n13, 1])/(-1 + n8) - 
   (n4*j[p4a, 0, n2, n3, 1 + n4, 0, 1, 0, -1 + n8, 0, 1, n11, 0, n13, 0])/
    (-1 + n8) - (n3*j[p4a, 0, n2, 1 + n3, n4, 0, 1, 0, -1 + n8, 0, 0, n11, 0, 
      n13, 1])/(-1 + n8) + ((-n3 - d*n3 + n11*n3 + 2*n13*n3)*
     j[p4a, 0, n2, 1 + n3, n4, 0, 1, 0, -1 + n8, 0, 1, -1 + n11, 0, n13, 1])/
    ((-1 + n11)*(-1 + n8)) + (n3*j[p4a, 0, n2, 1 + n3, n4, 0, 1, 0, -1 + n8, 
      0, 1, n11, 0, -1 + n13, 1])/(-1 + n8) - 
   (n2*j[p4a, 0, 1 + n2, -1 + n3, n4, 0, 1, 0, -1 + n8, 0, 1, n11, 0, n13, 
      1])/(-1 + n8) - (n2*j[p4a, 0, 1 + n2, -1 + n3, n4, 0, 1, 0, n8, 0, 1, 
      -1 + n11, 0, n13, 1])/(-1 + n11) + 
   (n2*j[p4a, 0, 1 + n2, n3, n4, 0, 1, -1, -1 + n8, 0, 1, n11, 0, n13, 1])/
    (-1 + n8) + (n2*j[p4a, 0, 1 + n2, n3, n4, 0, 1, -1, n8, 0, 1, -1 + n11, 
      0, n13, 1])/(-1 + n11) + 
   (n2*j[p4a, 0, 1 + n2, n3, n4, 0, 1, 0, -2 + n8, 0, 1, n11, 0, n13, 1])/
    (-1 + n8) + ((-n2 - n2*n3 + n2*n8)*j[p4a, 0, 1 + n2, n3, n4, 0, 1, 0, 
      -1 + n8, 0, 1, -1 + n11, 0, n13, 1])/((-1 + n11)*(-1 + n8)) - 
   (n2*j[p4a, 0, 1 + n2, n3, n4, 0, 1, 0, -1 + n8, 0, 1, n11, -1, n13, 1])/
    (-1 + n8) + (2*n2*j[p4a, 0, 1 + n2, n3, n4, 0, 1, 0, -1 + n8, 0, 1, n11, 
      0, -1 + n13, 1])/(-1 + n8) - 
   (n2*j[p4a, 0, 1 + n2, n3, n4, 0, 1, 0, n8, 0, 1, -1 + n11, -1, n13, 1])/
    (-1 + n11) + (2*n2*j[p4a, 0, 1 + n2, n3, n4, 0, 1, 0, n8, 0, 1, -1 + n11, 
      0, -1 + n13, 1])/(-1 + n11) + 
   (n2*n3*j[p4a, 0, 1 + n2, 1 + n3, n4, 0, 1, -1, -1 + n8, 0, 1, -1 + n11, 0, 
      n13, 1])/((-1 + n11)*(-1 + n8)) + 
   (n2*n3*j[p4a, 0, 1 + n2, 1 + n3, n4, 0, 1, 0, -2 + n8, 0, 1, -1 + n11, 0, 
      n13, 1])/((-1 + n11)*(-1 + n8)) - 
   (n2*n3*j[p4a, 0, 1 + n2, 1 + n3, n4, 0, 1, 0, -1 + n8, 0, 1, -1 + n11, -1, 
      n13, 1])/((-1 + n11)*(-1 + n8)) + 
   (2*n2*n3*j[p4a, 0, 1 + n2, 1 + n3, n4, 0, 1, 0, -1 + n8, 0, 1, -1 + n11, 
      0, -1 + n13, 1])/((-1 + n11)*(-1 + n8)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n6 == 1 && 
    n7 == 0 && n9 == 0 &&  !(n11 == 1 || n8 == 1) -> 
  -((n4*j[p4a, -1, n2, n3, 1 + n4, n5, 1, 0, -1 + n8, 0, 1, n11, 0, 1, 1])/
     (-1 + n8)) + (n4*j[p4a, 0, -1 + n2, n3, 1 + n4, n5, 1, 0, -1 + n8, 0, 1, 
      n11, 0, 1, 1])/(-1 + n8) + 
   (n4*j[p4a, 0, n2, -1 + n3, 1 + n4, n5, 1, 0, -1 + n8, 0, 1, n11, 0, 1, 1])/
    (-1 + n8) + ((1 - 2*d + 2*n11 + n3 + n4 + n5 + n8)*
     j[p4a, 0, n2, n3, n4, n5, 1, 0, -1 + n8, 0, 1, n11, 0, 1, 1])/
    (-1 + n8) + ((1 - d + n11 + n5)*j[p4a, 0, n2, n3, n4, n5, 1, 0, n8, 0, 1, 
      -1 + n11, 0, 1, 1])/(-1 + n11) + j[p4a, 0, n2, n3, n4, n5, 1, 0, n8, 0, 
    1, n11, 0, 0, 1] + (n5*j[p4a, 0, n2, n3, n4, 1 + n5, 1, 0, -1 + n8, 0, 1, 
      n11, 0, 0, 1])/(-1 + n8) - 
   (n5*j[p4a, 0, n2, n3, n4, 1 + n5, 1, 0, -1 + n8, 0, 1, n11, 0, 1, 0])/
    (-1 + n8) + (n5*j[p4a, 0, n2, n3, n4, 1 + n5, 1, 0, n8, 0, 1, -1 + n11, 
      0, 0, 1])/(-1 + n11) - (n5*j[p4a, 0, n2, n3, n4, 1 + n5, 1, 0, n8, 0, 
      1, -1 + n11, 0, 1, 0])/(-1 + n11) - 
   (n4*j[p4a, 0, n2, n3, 1 + n4, n5, 0, 0, -1 + n8, 0, 1, n11, 0, 1, 1])/
    (-1 + n8) - (n4*j[p4a, 0, n2, n3, 1 + n4, n5, 1, -1, -1 + n8, 0, 1, n11, 
      0, 1, 1])/(-1 + n8) + (n4*j[p4a, 0, n2, n3, 1 + n4, n5, 1, 0, -1 + n8, 
      -1, 1, n11, 0, 1, 1])/(-1 + n8) - 
   (n4*j[p4a, 0, n2, n3, 1 + n4, n5, 1, 0, -1 + n8, 0, 0, n11, 0, 1, 1])/
    (-1 + n8) + (n4*j[p4a, 0, n2, n3, 1 + n4, n5, 1, 0, -1 + n8, 0, 1, 
      -1 + n11, 0, 1, 1])/(-1 + n8) - 
   (n4*j[p4a, 0, n2, n3, 1 + n4, n5, 1, 0, -1 + n8, 0, 1, n11, 0, 1, 0])/
    (-1 + n8) - (n3*j[p4a, 0, n2, 1 + n3, n4, n5, 1, 0, -1 + n8, 0, 0, n11, 
      0, 1, 1])/(-1 + n8) + ((n3 - d*n3 + n11*n3 + n3*n5)*
     j[p4a, 0, n2, 1 + n3, n4, n5, 1, 0, -1 + n8, 0, 1, -1 + n11, 0, 1, 1])/
    ((-1 + n11)*(-1 + n8)) + (n3*j[p4a, 0, n2, 1 + n3, n4, n5, 1, 0, -1 + n8, 
      0, 1, n11, 0, 0, 1])/(-1 + n8) + 
   (n3*n5*j[p4a, 0, n2, 1 + n3, n4, 1 + n5, 1, 0, -1 + n8, 0, 1, -1 + n11, 0, 
      0, 1])/((-1 + n11)*(-1 + n8)) - 
   (n3*n5*j[p4a, 0, n2, 1 + n3, n4, 1 + n5, 1, 0, -1 + n8, 0, 1, -1 + n11, 0, 
      1, 0])/((-1 + n11)*(-1 + n8)) - 
   (n2*j[p4a, 0, 1 + n2, -1 + n3, n4, n5, 1, 0, -1 + n8, 0, 1, n11, 0, 1, 1])/
    (-1 + n8) - (n2*j[p4a, 0, 1 + n2, -1 + n3, n4, n5, 1, 0, n8, 0, 1, 
      -1 + n11, 0, 1, 1])/(-1 + n11) + 
   (n2*j[p4a, 0, 1 + n2, n3, n4, n5, 1, -1, -1 + n8, 0, 1, n11, 0, 1, 1])/
    (-1 + n8) + (n2*j[p4a, 0, 1 + n2, n3, n4, n5, 1, -1, n8, 0, 1, -1 + n11, 
      0, 1, 1])/(-1 + n11) + (n2*j[p4a, 0, 1 + n2, n3, n4, n5, 1, 0, -2 + n8, 
      0, 1, n11, 0, 1, 1])/(-1 + n8) + 
   ((-n2 - n2*n3 + n2*n8)*j[p4a, 0, 1 + n2, n3, n4, n5, 1, 0, -1 + n8, 0, 1, 
      -1 + n11, 0, 1, 1])/((-1 + n11)*(-1 + n8)) - 
   (n2*j[p4a, 0, 1 + n2, n3, n4, n5, 1, 0, -1 + n8, 0, 1, n11, -1, 1, 1])/
    (-1 + n8) + (2*n2*j[p4a, 0, 1 + n2, n3, n4, n5, 1, 0, -1 + n8, 0, 1, n11, 
      0, 0, 1])/(-1 + n8) - (n2*j[p4a, 0, 1 + n2, n3, n4, n5, 1, 0, n8, 0, 1, 
      -1 + n11, -1, 1, 1])/(-1 + n11) + 
   (2*n2*j[p4a, 0, 1 + n2, n3, n4, n5, 1, 0, n8, 0, 1, -1 + n11, 0, 0, 1])/
    (-1 + n11) + (n2*n3*j[p4a, 0, 1 + n2, 1 + n3, n4, n5, 1, -1, -1 + n8, 0, 
      1, -1 + n11, 0, 1, 1])/((-1 + n11)*(-1 + n8)) + 
   (n2*n3*j[p4a, 0, 1 + n2, 1 + n3, n4, n5, 1, 0, -2 + n8, 0, 1, -1 + n11, 0, 
      1, 1])/((-1 + n11)*(-1 + n8)) - 
   (n2*n3*j[p4a, 0, 1 + n2, 1 + n3, n4, n5, 1, 0, -1 + n8, 0, 1, -1 + n11, 
      -1, 1, 1])/((-1 + n11)*(-1 + n8)) + 
   (2*n2*n3*j[p4a, 0, 1 + n2, 1 + n3, n4, n5, 1, 0, -1 + n8, 0, 1, -1 + n11, 
      0, 0, 1])/((-1 + n11)*(-1 + n8)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n14 == 1 && n5 == 0 && 
    n6 == 1 && n7 == 0 &&  !(n13 == 1 || n2 == 0 || n8 == 1) -> 
  j[p4a, 0, n2, n3, n4, 0, 1, 0, n8, n9, 1, 2, 0, -1 + n13, 1]/(1 - n13) - 
   (n8*j[p4a, 0, n2, n3, n4, 0, 1, 0, 1 + n8, n9, 1, 1, 0, -1 + n13, 1])/
    (-1 + n13) + (n3*j[p4a, 0, n2, 1 + n3, n4, 0, 1, 0, -1 + n8, n9, 1, 1, 0, 
      n13, 1])/(-1 + n8) + (n3*j[p4a, 0, n2, 1 + n3, n4, 0, 1, 0, -1 + n8, 
      n9, 1, 2, 0, -1 + n13, 1])/((-1 + n13)*(-1 + n8)) + 
   (n3*j[p4a, 0, n2, 1 + n3, n4, 0, 1, 0, n8, n9, 1, 1, 0, -1 + n13, 1])/
    (-1 + n13) + j[p4a, 0, 1 + n2, -1 + n3, n4, 0, 1, 0, -1 + n8, n9, 1, 2, 
     0, n13, 1]/(-1 + n8) + j[p4a, 0, 1 + n2, -1 + n3, n4, 0, 1, 0, n8, n9, 
    1, 1, 0, n13, 1] + (n4*j[p4a, 0, 1 + n2, -1 + n3, 1 + n4, 0, 1, 0, 
      -1 + n8, n9, 1, 1, 0, n13, 1])/(-1 + n8) + 
   (n4*j[p4a, 0, 1 + n2, -1 + n3, 1 + n4, 0, 1, 0, -1 + n8, n9, 1, 2, 0, 
      -1 + n13, 1])/((-1 + n13)*(-1 + n8)) + 
   (n4*j[p4a, 0, 1 + n2, -1 + n3, 1 + n4, 0, 1, 0, n8, n9, 1, 1, 0, -1 + n13, 
      1])/(-1 + n13) + j[p4a, 0, 1 + n2, n3, n4, 0, 1, -1, n8, n9, 1, 2, 0, 
     -1 + n13, 1]/(-1 + n13) + 
   (n8*j[p4a, 0, 1 + n2, n3, n4, 0, 1, -1, 1 + n8, n9, 1, 1, 0, -1 + n13, 1])/
    (-1 + n13) + j[p4a, 0, 1 + n2, n3, n4, 0, 1, 0, -2 + n8, n9, 1, 2, 0, 
     n13, 1]/(1 - n8) + j[p4a, 0, 1 + n2, n3, n4, 0, 1, 0, -1 + n8, n9, 0, 2, 
     0, n13, 1]/(1 - n8) + ((1 + 2*n3 - n8)*j[p4a, 0, 1 + n2, n3, n4, 0, 1, 
      0, -1 + n8, n9, 1, 1, 0, n13, 1])/(-1 + n8) - 
   (2*(1 + n2 - n3)*j[p4a, 0, 1 + n2, n3, n4, 0, 1, 0, -1 + n8, n9, 1, 2, 0, 
      -1 + n13, 1])/((-1 + n13)*(-1 + n8)) + 
   j[p4a, 0, 1 + n2, n3, n4, 0, 1, 0, -1 + n8, n9, 1, 2, 0, n13, 1]/
    (-1 + n8) + ((-3 + n13 - 2*n2 + 2*n3)*j[p4a, 0, 1 + n2, n3, n4, 0, 1, 0, 
      n8, n9, 1, 1, 0, -1 + n13, 1])/(-1 + n13) + 
   j[p4a, 0, 1 + n2, n3, n4, 0, 1, 0, n8, n9, 1, 2, -1, -1 + n13, 1]/
    (1 - n13) + j[p4a, 0, 1 + n2, n3, n4, 0, 1, 0, n8, n9, 1, 2, 0, -2 + n13, 
     1]/(-1 + n13) - (n8*j[p4a, 0, 1 + n2, n3, n4, 0, 1, 0, 1 + n8, n9, 1, 1, 
      -1, -1 + n13, 1])/(-1 + n13) + 
   (n8*j[p4a, 0, 1 + n2, n3, n4, 0, 1, 0, 1 + n8, n9, 1, 1, 0, -2 + n13, 1])/
    (-1 + n13) + (n4*j[p4a, 0, 1 + n2, n3, 1 + n4, 0, 0, 0, -1 + n8, n9, 1, 
      1, 0, n13, 1])/(-1 + n8) + 
   (n4*j[p4a, 0, 1 + n2, n3, 1 + n4, 0, 0, 0, -1 + n8, n9, 1, 2, 0, -1 + n13, 
      1])/((-1 + n13)*(-1 + n8)) + 
   (n4*j[p4a, 0, 1 + n2, n3, 1 + n4, 0, 0, 0, n8, n9, 1, 1, 0, -1 + n13, 1])/
    (-1 + n13) - (n4*j[p4a, 0, 1 + n2, n3, 1 + n4, 0, 1, 0, -2 + n8, n9, 1, 
      1, 0, n13, 1])/(-1 + n8) - 
   (n4*j[p4a, 0, 1 + n2, n3, 1 + n4, 0, 1, 0, -2 + n8, n9, 1, 2, 0, -1 + n13, 
      1])/((-1 + n13)*(-1 + n8)) - 
   (n4*j[p4a, 0, 1 + n2, n3, 1 + n4, 0, 1, 0, -1 + n8, n9, 1, 1, 0, -1 + n13, 
      1])/(-1 + n13) - (n4*j[p4a, 0, 1 + n2, n3, 1 + n4, 0, 1, 0, -1 + n8, 
      n9, 1, 1, 0, n13, 0])/(-1 + n8) - 
   (n4*j[p4a, 0, 1 + n2, n3, 1 + n4, 0, 1, 0, -1 + n8, n9, 1, 2, 0, -1 + n13, 
      0])/((-1 + n13)*(-1 + n8)) - 
   (n4*j[p4a, 0, 1 + n2, n3, 1 + n4, 0, 1, 0, n8, n9, 1, 1, 0, -1 + n13, 0])/
    (-1 + n13) - (n3*j[p4a, 0, 1 + n2, 1 + n3, n4, 0, 1, -1, -1 + n8, n9, 1, 
      1, 0, n13, 1])/(-1 + n8) - 
   (n3*j[p4a, 0, 1 + n2, 1 + n3, n4, 0, 1, -1, -1 + n8, n9, 1, 2, 0, 
      -1 + n13, 1])/((-1 + n13)*(-1 + n8)) - 
   (n3*j[p4a, 0, 1 + n2, 1 + n3, n4, 0, 1, -1, n8, n9, 1, 1, 0, -1 + n13, 1])/
    (-1 + n13) - (2*n3*j[p4a, 0, 1 + n2, 1 + n3, n4, 0, 1, 0, -2 + n8, n9, 1, 
      1, 0, n13, 1])/(-1 + n8) - 
   (2*n3*j[p4a, 0, 1 + n2, 1 + n3, n4, 0, 1, 0, -2 + n8, n9, 1, 2, 0, 
      -1 + n13, 1])/((-1 + n13)*(-1 + n8)) + 
   (n3*j[p4a, 0, 1 + n2, 1 + n3, n4, 0, 1, 0, -1 + n8, n9, 1, 1, -1, n13, 1])/
    (-1 + n8) - (n3*(-3 + n13 + 2*n8)*j[p4a, 0, 1 + n2, 1 + n3, n4, 0, 1, 0, 
      -1 + n8, n9, 1, 1, 0, -1 + n13, 1])/((-1 + n13)*(-1 + n8)) + 
   (n3*j[p4a, 0, 1 + n2, 1 + n3, n4, 0, 1, 0, -1 + n8, n9, 1, 2, -1, 
      -1 + n13, 1])/((-1 + n13)*(-1 + n8)) - 
   (n3*j[p4a, 0, 1 + n2, 1 + n3, n4, 0, 1, 0, -1 + n8, n9, 1, 2, 0, -2 + n13, 
      1])/((-1 + n13)*(-1 + n8)) + 
   (n3*j[p4a, 0, 1 + n2, 1 + n3, n4, 0, 1, 0, n8, n9, 1, 1, -1, -1 + n13, 1])/
    (-1 + n13) - (n3*j[p4a, 0, 1 + n2, 1 + n3, n4, 0, 1, 0, n8, n9, 1, 1, 0, 
      -2 + n13, 1])/(-1 + n13) + 
   ((-1 - n2)*j[p4a, 0, 2 + n2, -1 + n3, n4, 0, 1, 0, -1 + n8, n9, 1, 2, 0, 
      -1 + n13, 1])/((-1 + n13)*(-1 + n8)) + 
   ((-1 - n2)*j[p4a, 0, 2 + n2, -1 + n3, n4, 0, 1, 0, n8, n9, 1, 1, 0, 
      -1 + n13, 1])/(-1 + n13) + 
   ((1 + n2)*j[p4a, 0, 2 + n2, n3, n4, 0, 1, -1, -1 + n8, n9, 1, 2, 0, 
      -1 + n13, 1])/((-1 + n13)*(-1 + n8)) + 
   ((1 + n2)*j[p4a, 0, 2 + n2, n3, n4, 0, 1, -1, n8, n9, 1, 1, 0, -1 + n13, 
      1])/(-1 + n13) + ((1 + n2)*j[p4a, 0, 2 + n2, n3, n4, 0, 1, 0, -2 + n8, 
      n9, 1, 2, 0, -1 + n13, 1])/((-1 + n13)*(-1 + n8)) + 
   ((1 + n2)*j[p4a, 0, 2 + n2, n3, n4, 0, 1, 0, -1 + n8, n9, 1, 1, 0, 
      -1 + n13, 1])/(-1 + n13) + 
   ((-1 - n2)*j[p4a, 0, 2 + n2, n3, n4, 0, 1, 0, -1 + n8, n9, 1, 2, -1, 
      -1 + n13, 1])/((-1 + n13)*(-1 + n8)) + 
   (2*(1 + n2)*j[p4a, 0, 2 + n2, n3, n4, 0, 1, 0, -1 + n8, n9, 1, 2, 0, 
      -2 + n13, 1])/((-1 + n13)*(-1 + n8)) + 
   ((-1 - n2)*j[p4a, 0, 2 + n2, n3, n4, 0, 1, 0, n8, n9, 1, 1, -1, -1 + n13, 
      1])/(-1 + n13) + (2*(1 + n2)*j[p4a, 0, 2 + n2, n3, n4, 0, 1, 0, n8, n9, 
      1, 1, 0, -2 + n13, 1])/(-1 + n13), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n6 == 1 && n7 == -1 &&  !(n4 == 0 || n8 == 1) -> 
  j[p4a, -1, n2, -1 + n3, 1 + n4, n5, 1, -1, -1 + n8, n9, 1, 1, 0, 2, 1]/
    (2*(-1 + n8)) + (n5*j[p4a, -1, n2, n3, n4, 1 + n5, 1, -1, -1 + n8, n9, 1, 
      1, 0, 1, 1])/(2*(-1 + n8)) - j[p4a, -1, n2, n3, 1 + n4, n5, 0, -1, n8, 
     n9, 1, 1, 0, 1, 1]/2 + ((1 - d + n3 + n4 + n8)*
     j[p4a, -1, n2, n3, 1 + n4, n5, 1, -1, -1 + n8, n9, 1, 1, 0, 1, 1])/
    (2*(-1 + n8)) - j[p4a, -1, n2, n3, 1 + n4, n5, 1, -1, -1 + n8, n9, 1, 1, 
     0, 2, 0]/(2*(-1 + n8)) - (n3*j[p4a, -1, n2, 1 + n3, 1 + n4, n5, 1, -1, 
      -1 + n8, n9, 1, 1, 0, 1, 0])/(2*(-1 + n8)) - 
   (n2*j[p4a, -1, 1 + n2, n3, 1 + n4, n5, 0, -1, -1 + n8, n9, 1, 1, 0, 1, 1])/
    (2*(-1 + n8)) + (n2*j[p4a, -1, 1 + n2, n3, 1 + n4, n5, 1, -1, -2 + n8, 
      n9, 1, 1, 0, 1, 1])/(2*(-1 + n8)) - 
   j[p4a, 0, -1 + n2, -1 + n3, 1 + n4, n5, 1, 0, -1 + n8, n9, 1, 1, 0, 1, 1]/
    (2*(-1 + n8)) - j[p4a, 0, -1 + n2, n3, 1 + n4, n5, 0, -1, -1 + n8, n9, 2, 
     1, 0, 1, 1]/(2*(-1 + n8)) + ((-4 + 3*d - n2 - n3 - n4 - n5 - 2*n8)*
     j[p4a, 0, -1 + n2, n3, 1 + n4, n5, 1, -1, -1 + n8, n9, 1, 1, 0, 1, 1])/
    (2*(-1 + n8)) + j[p4a, 0, -1 + n2, n3, 1 + n4, n5, 1, 0, -1 + n8, n9, 1, 
     1, 0, 0, 1]/(2*(-1 + n8)) - 
   (n5*j[p4a, 0, -1 + n2, n3, 1 + n4, 1 + n5, 1, -1, -1 + n8, n9, 1, 1, 0, 0, 
      1])/(2*(-1 + n8)) + (n5*j[p4a, 0, -1 + n2, n3, 1 + n4, 1 + n5, 1, -1, 
      -1 + n8, n9, 1, 1, 0, 1, 0])/(2*(-1 + n8)) + 
   (n3*j[p4a, 0, -1 + n2, 1 + n3, 1 + n4, n5, 1, -1, -1 + n8, n9, 1, 1, 0, 1, 
      0])/(2*(-1 + n8)) - j[p4a, 0, n2, -1 + n3, n4, n5, 1, 0, -1 + n8, n9, 
     1, 1, 0, 1, 1]/(2*(-1 + n8)) + j[p4a, 0, n2, -1 + n3, 1 + n4, -1 + n5, 
     1, 0, -1 + n8, n9, 1, 1, 0, 1, 1]/(2*(-1 + n8)) - 
   j[p4a, 0, n2, -1 + n3, 1 + n4, n5, 1, -1, -1 + n8, -1 + n9, 2, 1, 0, 1, 1]/
    (2*(-1 + n8)) + ((n2 + n4)*j[p4a, 0, n2, -1 + n3, 1 + n4, n5, 1, -1, 
      -1 + n8, n9, 1, 1, 0, 1, 1])/(2*(-1 + n8)) - 
   j[p4a, 0, n2, -1 + n3, 1 + n4, n5, 1, -1, -1 + n8, n9, 1, 1, 0, 2, 1]/
    (2*(-1 + n8)) + ((-1 + n3)*j[p4a, 0, n2, n3, n4, n5, 1, -1, -1 + n8, n9, 
      1, 1, 0, 1, 1])/(2*(-1 + n8)) + j[p4a, 0, n2, n3, n4, n5, 1, -1, n8, 
     n9, 1, 0, 0, 1, 1]/2 + j[p4a, 0, n2, n3, n4, n5, 1, -1, n8, n9, 1, 1, 0, 
     0, 1]/2 + j[p4a, 0, n2, n3, n4, n5, 1, 0, -2 + n8, n9, 1, 1, 0, 1, 1]/
    (2*(-1 + n8)) + j[p4a, 0, n2, n3, n4, n5, 1, 0, -1 + n8, n9, 0, 1, 0, 1, 
     1]/(2*(-1 + n8)) - j[p4a, 0, n2, n3, n4, n5, 1, 0, -1 + n8, n9, 1, 0, 0, 
     1, 1]/(2*(-1 + n8)) + j[p4a, 0, n2, n3, n4, n5, 1, 0, -1 + n8, n9, 1, 1, 
     0, 0, 1]/(2*(-1 + n8)) - 
   (n5*j[p4a, 0, n2, n3, n4, 1 + n5, 1, -1, -1 + n8, n9, 1, 1, 0, 1, 1])/
    (2*(-1 + n8)) - j[p4a, 0, n2, n3, 1 + n4, -1 + n5, 1, 0, -2 + n8, n9, 1, 
     1, 0, 1, 1]/(2*(-1 + n8)) - j[p4a, 0, n2, n3, 1 + n4, -1 + n5, 1, 0, 
     -1 + n8, n9, 0, 1, 0, 1, 1]/(2*(-1 + n8)) + 
   j[p4a, 0, n2, n3, 1 + n4, -1 + n5, 1, 0, -1 + n8, n9, 1, 0, 0, 1, 1]/
    (2*(-1 + n8)) - j[p4a, 0, n2, n3, 1 + n4, -1 + n5, 1, 0, -1 + n8, n9, 1, 
     1, 0, 0, 1]/(2*(-1 + n8)) + j[p4a, 0, n2, n3, 1 + n4, n5, 0, -2, 
     -1 + n8, n9, 2, 1, 0, 1, 1]/(2*(-1 + n8)) + 
   ((2 - n2)*j[p4a, 0, n2, n3, 1 + n4, n5, 0, -1, -1 + n8, n9, 1, 1, 0, 1, 
      1])/(2*(-1 + n8)) - j[p4a, 0, n2, n3, 1 + n4, n5, 0, -1, -1 + n8, n9, 
     1, 2, -1, 1, 1]/(2*(-1 + n8)) + j[p4a, 0, n2, n3, 1 + n4, n5, 0, -1, 
     -1 + n8, n9, 1, 2, 0, 1, 1]/(2*(-1 + n8)) - 
   j[p4a, 0, n2, n3, 1 + n4, n5, 0, -1, -1 + n8, n9, 2, 1, -1, 1, 1]/
    (2*(-1 + n8)) + j[p4a, 0, n2, n3, 1 + n4, n5, 0, -1, -1 + n8, n9, 2, 1, 
     0, 1, 1]/(2*(-1 + n8)) - j[p4a, 0, n2, n3, 1 + n4, n5, 0, -1, n8, n9, 1, 
     1, -1, 1, 1]/2 + j[p4a, 0, n2, n3, 1 + n4, n5, 0, -1, n8, n9, 1, 1, 0, 
    1, 1] + ((4 - 3*d + n2 + n3 + n4 + n5 + 2*n8)*j[p4a, 0, n2, n3, 1 + n4, 
      n5, 1, -2, -1 + n8, n9, 1, 1, 0, 1, 1])/(2*(-1 + n8)) + 
   j[p4a, 0, n2, n3, 1 + n4, n5, 1, -1, -2 + n8, -1 + n9, 2, 1, 0, 1, 1]/
    (2*(-1 + n8)) + ((2 - n2 - n4)*j[p4a, 0, n2, n3, 1 + n4, n5, 1, -1, 
      -2 + n8, n9, 1, 1, 0, 1, 1])/(2*(-1 + n8)) - 
   j[p4a, 0, n2, n3, 1 + n4, n5, 1, -1, -2 + n8, n9, 1, 2, -1, 1, 1]/
    (2*(-1 + n8)) + j[p4a, 0, n2, n3, 1 + n4, n5, 1, -1, -2 + n8, n9, 1, 2, 
     0, 1, 1]/(2*(-1 + n8)) + ((-5 + 4*d - 2*n2 - 2*n3 - n4 - n5 - 2*n8 - n9)*
     j[p4a, 0, n2, n3, 1 + n4, n5, 1, -1, -1 + n8, -1 + n9, 1, 1, 0, 1, 1])/
    (2*(-1 + n8)) + j[p4a, 0, n2, n3, 1 + n4, n5, 1, -1, -1 + n8, -1 + n9, 2, 
     1, 0, 0, 1]/(2*(-1 + n8)) + 
   ((1 - n4)*j[p4a, 0, n2, n3, 1 + n4, n5, 1, -1, -1 + n8, n9, 0, 1, 0, 1, 
      1])/(2*(-1 + n8)) - j[p4a, 0, n2, n3, 1 + n4, n5, 1, -1, -1 + n8, n9, 
     0, 2, -1, 1, 1]/(2*(-1 + n8)) + j[p4a, 0, n2, n3, 1 + n4, n5, 1, -1, 
     -1 + n8, n9, 0, 2, 0, 1, 1]/(2*(-1 + n8)) + 
   ((-1 + n4)*j[p4a, 0, n2, n3, 1 + n4, n5, 1, -1, -1 + n8, n9, 1, 0, 0, 1, 
      1])/(2*(-1 + n8)) + ((-2 + d - n8)*j[p4a, 0, n2, n3, 1 + n4, n5, 1, -1, 
      -1 + n8, n9, 1, 1, -1, 1, 1])/(2*(-1 + n8)) + 
   ((-2*n2 + n5)*j[p4a, 0, n2, n3, 1 + n4, n5, 1, -1, -1 + n8, n9, 1, 1, 0, 
      0, 1])/(2*(-1 + n8)) + ((1 - n4 - n5 - n9)*j[p4a, 0, n2, n3, 1 + n4, 
      n5, 1, -1, -1 + n8, n9, 1, 1, 0, 1, 0])/(2*(-1 + n8)) + 
   ((n2 - n3 - 2*n4 - n5 + n9)*j[p4a, 0, n2, n3, 1 + n4, n5, 1, -1, -1 + n8, 
      n9, 1, 1, 0, 1, 1])/(2*(-1 + n8)) + 
   j[p4a, 0, n2, n3, 1 + n4, n5, 1, -1, -1 + n8, n9, 1, 1, 0, 2, 0]/
    (2*(-1 + n8)) - (n5*j[p4a, 0, n2, n3, 1 + n4, 1 + n5, 1, -2, -1 + n8, 
      -1 + n9, 1, 1, 0, 1, 1])/(2*(-1 + n8)) + 
   (n5*j[p4a, 0, n2, n3, 1 + n4, 1 + n5, 1, -2, -1 + n8, n9, 1, 1, 0, 1, 1])/
    (2*(-1 + n8)) - (n3*j[p4a, 0, n2, 1 + n3, n4, n5, 1, -1, -2 + n8, n9, 1, 
      1, 0, 1, 1])/(2*(-1 + n8)) - 
   (n3*j[p4a, 0, n2, 1 + n3, n4, n5, 1, -1, -1 + n8, n9, 0, 1, 0, 1, 1])/
    (2*(-1 + n8)) + (n3*j[p4a, 0, n2, 1 + n3, n4, n5, 1, -1, -1 + n8, n9, 1, 
      0, 0, 1, 1])/(2*(-1 + n8)) - 
   (n3*j[p4a, 0, n2, 1 + n3, 1 + n4, n5, 1, -2, -1 + n8, n9, 1, 1, 0, 1, 0])/
    (2*(-1 + n8)) + (n3*j[p4a, 0, n2, 1 + n3, 1 + n4, n5, 1, -1, -1 + n8, n9, 
      1, 1, 0, 1, 0])/(2*(-1 + n8)) - 
   (n2*j[p4a, 0, 1 + n2, -1 + n3, 1 + n4, -1 + n5, 1, -1, -1 + n8, n9, 1, 1, 
      0, 1, 1])/(2*(-1 + n8)) + 
   (n2*j[p4a, 0, 1 + n2, n3, 1 + n4, -1 + n5, 1, -1, -2 + n8, n9, 1, 1, 0, 1, 
      1])/(2*(-1 + n8)) + (n2*j[p4a, 0, 1 + n2, n3, 1 + n4, -1 + n5, 1, -1, 
      -1 + n8, n9, 0, 1, 0, 1, 1])/(2*(-1 + n8)) + 
   (n2*j[p4a, 0, 1 + n2, n3, 1 + n4, -1 + n5, 1, -1, -1 + n8, n9, 1, 1, 0, 0, 
      1])/(-1 + n8) - (n2*j[p4a, 0, 1 + n2, n3, 1 + n4, -1 + n5, 1, -1, 
      -1 + n8, n9, 1, 1, 0, 1, 1])/(-1 + n8) + 
   (n2*j[p4a, 0, 1 + n2, n3, 1 + n4, n5, 0, -2, -1 + n8, n9, 1, 1, 0, 1, 1])/
    (2*(-1 + n8)) - (n2*j[p4a, 0, 1 + n2, n3, 1 + n4, n5, 0, -1, -1 + n8, n9, 
      1, 1, -1, 1, 1])/(2*(-1 + n8)) + 
   (n2*j[p4a, 0, 1 + n2, n3, 1 + n4, n5, 0, -1, -1 + n8, n9, 1, 1, 0, 1, 1])/
    (-1 + n8) - (n2*j[p4a, 0, 1 + n2, n3, 1 + n4, n5, 1, -2, -1 + n8, n9, 0, 
      1, 0, 1, 1])/(2*(-1 + n8)) + 
   (n2*j[p4a, 0, 1 + n2, n3, 1 + n4, n5, 1, -2, -1 + n8, n9, 1, 1, 0, 1, 1])/
    (2*(-1 + n8)) - (n2*j[p4a, 0, 1 + n2, n3, 1 + n4, n5, 1, -1, -2 + n8, n9, 
      1, 1, 0, 1, 1])/(2*(-1 + n8)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n6 == 1 && n7 == 0 &&  !(n4 == 0 || n8 == 1) -> 
  j[p4a, -1, n2, -1 + n3, 1 + n4, n5, 1, 0, -1 + n8, n9, 1, 1, 0, 2, 1]/
    (2*(-1 + n8)) + (n5*j[p4a, -1, n2, n3, n4, 1 + n5, 1, 0, -1 + n8, n9, 1, 
      1, 0, 1, 1])/(2*(-1 + n8)) - j[p4a, -1, n2, n3, 1 + n4, n5, 0, 0, n8, 
     n9, 1, 1, 0, 1, 1]/2 + ((1 - d + n3 + n4 + n8)*
     j[p4a, -1, n2, n3, 1 + n4, n5, 1, 0, -1 + n8, n9, 1, 1, 0, 1, 1])/
    (2*(-1 + n8)) - j[p4a, -1, n2, n3, 1 + n4, n5, 1, 0, -1 + n8, n9, 1, 1, 
     0, 2, 0]/(2*(-1 + n8)) - (n3*j[p4a, -1, n2, 1 + n3, 1 + n4, n5, 1, 0, 
      -1 + n8, n9, 1, 1, 0, 1, 0])/(2*(-1 + n8)) - 
   (n2*j[p4a, -1, 1 + n2, n3, 1 + n4, n5, 0, 0, -1 + n8, n9, 1, 1, 0, 1, 1])/
    (2*(-1 + n8)) + (n2*j[p4a, -1, 1 + n2, n3, 1 + n4, n5, 1, 0, -2 + n8, n9, 
      1, 1, 0, 1, 1])/(2*(-1 + n8)) - j[p4a, 0, -1 + n2, n3, 1 + n4, n5, 0, 
     0, -1 + n8, n9, 2, 1, 0, 1, 1]/(2*(-1 + n8)) + 
   ((-5 + 3*d - n2 - n3 - n4 - n5 - 2*n8)*j[p4a, 0, -1 + n2, n3, 1 + n4, n5, 
      1, 0, -1 + n8, n9, 1, 1, 0, 1, 1])/(2*(-1 + n8)) - 
   (n5*j[p4a, 0, -1 + n2, n3, 1 + n4, 1 + n5, 1, 0, -1 + n8, n9, 1, 1, 0, 0, 
      1])/(2*(-1 + n8)) + (n5*j[p4a, 0, -1 + n2, n3, 1 + n4, 1 + n5, 1, 0, 
      -1 + n8, n9, 1, 1, 0, 1, 0])/(2*(-1 + n8)) + 
   (n3*j[p4a, 0, -1 + n2, 1 + n3, 1 + n4, n5, 1, 0, -1 + n8, n9, 1, 1, 0, 1, 
      0])/(2*(-1 + n8)) - j[p4a, 0, n2, -1 + n3, 1 + n4, n5, 1, 0, -1 + n8, 
     -1 + n9, 2, 1, 0, 1, 1]/(2*(-1 + n8)) + 
   ((n2 + n4)*j[p4a, 0, n2, -1 + n3, 1 + n4, n5, 1, 0, -1 + n8, n9, 1, 1, 0, 
      1, 1])/(2*(-1 + n8)) - j[p4a, 0, n2, -1 + n3, 1 + n4, n5, 1, 0, 
     -1 + n8, n9, 1, 1, 0, 2, 1]/(2*(-1 + n8)) + 
   ((-1 + n3)*j[p4a, 0, n2, n3, n4, n5, 1, 0, -1 + n8, n9, 1, 1, 0, 1, 1])/
    (2*(-1 + n8)) + j[p4a, 0, n2, n3, n4, n5, 1, 0, n8, n9, 1, 0, 0, 1, 1]/
    2 + j[p4a, 0, n2, n3, n4, n5, 1, 0, n8, n9, 1, 1, 0, 0, 1]/2 - 
   (n5*j[p4a, 0, n2, n3, n4, 1 + n5, 1, 0, -1 + n8, n9, 1, 1, 0, 1, 1])/
    (2*(-1 + n8)) + j[p4a, 0, n2, n3, 1 + n4, n5, 0, -1, -1 + n8, n9, 2, 1, 
     0, 1, 1]/(2*(-1 + n8)) + ((2 - n2)*j[p4a, 0, n2, n3, 1 + n4, n5, 0, 0, 
      -1 + n8, n9, 1, 1, 0, 1, 1])/(2*(-1 + n8)) - 
   j[p4a, 0, n2, n3, 1 + n4, n5, 0, 0, -1 + n8, n9, 1, 2, -1, 1, 1]/
    (2*(-1 + n8)) + j[p4a, 0, n2, n3, 1 + n4, n5, 0, 0, -1 + n8, n9, 1, 2, 0, 
     1, 1]/(2*(-1 + n8)) - j[p4a, 0, n2, n3, 1 + n4, n5, 0, 0, -1 + n8, n9, 
     2, 1, -1, 1, 1]/(2*(-1 + n8)) + j[p4a, 0, n2, n3, 1 + n4, n5, 0, 0, 
     -1 + n8, n9, 2, 1, 0, 1, 1]/(2*(-1 + n8)) - 
   j[p4a, 0, n2, n3, 1 + n4, n5, 0, 0, n8, n9, 1, 1, -1, 1, 1]/2 + 
   j[p4a, 0, n2, n3, 1 + n4, n5, 0, 0, n8, n9, 1, 1, 0, 1, 1] + 
   ((5 - 3*d + n2 + n3 + n4 + n5 + 2*n8)*j[p4a, 0, n2, n3, 1 + n4, n5, 1, -1, 
      -1 + n8, n9, 1, 1, 0, 1, 1])/(2*(-1 + n8)) + 
   j[p4a, 0, n2, n3, 1 + n4, n5, 1, 0, -2 + n8, -1 + n9, 2, 1, 0, 1, 1]/
    (2*(-1 + n8)) + ((1 - n2 - n4)*j[p4a, 0, n2, n3, 1 + n4, n5, 1, 0, 
      -2 + n8, n9, 1, 1, 0, 1, 1])/(2*(-1 + n8)) - 
   j[p4a, 0, n2, n3, 1 + n4, n5, 1, 0, -2 + n8, n9, 1, 2, -1, 1, 1]/
    (2*(-1 + n8)) + j[p4a, 0, n2, n3, 1 + n4, n5, 1, 0, -2 + n8, n9, 1, 2, 0, 
     1, 1]/(2*(-1 + n8)) + ((-7 + 4*d - 2*n2 - 2*n3 - n4 - n5 - 2*n8 - n9)*
     j[p4a, 0, n2, n3, 1 + n4, n5, 1, 0, -1 + n8, -1 + n9, 1, 1, 0, 1, 1])/
    (2*(-1 + n8)) + j[p4a, 0, n2, n3, 1 + n4, n5, 1, 0, -1 + n8, -1 + n9, 2, 
     1, 0, 0, 1]/(2*(-1 + n8)) - 
   (n4*j[p4a, 0, n2, n3, 1 + n4, n5, 1, 0, -1 + n8, n9, 0, 1, 0, 1, 1])/
    (2*(-1 + n8)) - j[p4a, 0, n2, n3, 1 + n4, n5, 1, 0, -1 + n8, n9, 0, 2, 
     -1, 1, 1]/(2*(-1 + n8)) + j[p4a, 0, n2, n3, 1 + n4, n5, 1, 0, -1 + n8, 
     n9, 0, 2, 0, 1, 1]/(2*(-1 + n8)) + 
   (n4*j[p4a, 0, n2, n3, 1 + n4, n5, 1, 0, -1 + n8, n9, 1, 0, 0, 1, 1])/
    (2*(-1 + n8)) + ((-2 + d - n8)*j[p4a, 0, n2, n3, 1 + n4, n5, 1, 0, 
      -1 + n8, n9, 1, 1, -1, 1, 1])/(2*(-1 + n8)) + 
   ((-2*n2 + n5)*j[p4a, 0, n2, n3, 1 + n4, n5, 1, 0, -1 + n8, n9, 1, 1, 0, 0, 
      1])/(2*(-1 + n8)) + ((1 - n4 - n5 - n9)*j[p4a, 0, n2, n3, 1 + n4, n5, 
      1, 0, -1 + n8, n9, 1, 1, 0, 1, 0])/(2*(-1 + n8)) + 
   ((n2 - n3 - 2*n4 - n5 + n9)*j[p4a, 0, n2, n3, 1 + n4, n5, 1, 0, -1 + n8, 
      n9, 1, 1, 0, 1, 1])/(2*(-1 + n8)) + 
   j[p4a, 0, n2, n3, 1 + n4, n5, 1, 0, -1 + n8, n9, 1, 1, 0, 2, 0]/
    (2*(-1 + n8)) - (n5*j[p4a, 0, n2, n3, 1 + n4, 1 + n5, 1, -1, -1 + n8, 
      -1 + n9, 1, 1, 0, 1, 1])/(2*(-1 + n8)) + 
   (n5*j[p4a, 0, n2, n3, 1 + n4, 1 + n5, 1, -1, -1 + n8, n9, 1, 1, 0, 1, 1])/
    (2*(-1 + n8)) - (n3*j[p4a, 0, n2, 1 + n3, n4, n5, 1, 0, -2 + n8, n9, 1, 
      1, 0, 1, 1])/(2*(-1 + n8)) - 
   (n3*j[p4a, 0, n2, 1 + n3, n4, n5, 1, 0, -1 + n8, n9, 0, 1, 0, 1, 1])/
    (2*(-1 + n8)) + (n3*j[p4a, 0, n2, 1 + n3, n4, n5, 1, 0, -1 + n8, n9, 1, 
      0, 0, 1, 1])/(2*(-1 + n8)) - 
   (n3*j[p4a, 0, n2, 1 + n3, 1 + n4, n5, 1, -1, -1 + n8, n9, 1, 1, 0, 1, 0])/
    (2*(-1 + n8)) + (n3*j[p4a, 0, n2, 1 + n3, 1 + n4, n5, 1, 0, -1 + n8, n9, 
      1, 1, 0, 1, 0])/(2*(-1 + n8)) - 
   (n2*j[p4a, 0, 1 + n2, -1 + n3, 1 + n4, -1 + n5, 1, 0, -1 + n8, n9, 1, 1, 
      0, 1, 1])/(2*(-1 + n8)) + 
   (n2*j[p4a, 0, 1 + n2, n3, 1 + n4, -1 + n5, 1, 0, -2 + n8, n9, 1, 1, 0, 1, 
      1])/(2*(-1 + n8)) + (n2*j[p4a, 0, 1 + n2, n3, 1 + n4, -1 + n5, 1, 0, 
      -1 + n8, n9, 0, 1, 0, 1, 1])/(2*(-1 + n8)) + 
   (n2*j[p4a, 0, 1 + n2, n3, 1 + n4, -1 + n5, 1, 0, -1 + n8, n9, 1, 1, 0, 0, 
      1])/(-1 + n8) - (n2*j[p4a, 0, 1 + n2, n3, 1 + n4, -1 + n5, 1, 0, 
      -1 + n8, n9, 1, 1, 0, 1, 1])/(-1 + n8) + 
   (n2*j[p4a, 0, 1 + n2, n3, 1 + n4, n5, 0, -1, -1 + n8, n9, 1, 1, 0, 1, 1])/
    (2*(-1 + n8)) - (n2*j[p4a, 0, 1 + n2, n3, 1 + n4, n5, 0, 0, -1 + n8, n9, 
      1, 1, -1, 1, 1])/(2*(-1 + n8)) + 
   (n2*j[p4a, 0, 1 + n2, n3, 1 + n4, n5, 0, 0, -1 + n8, n9, 1, 1, 0, 1, 1])/
    (-1 + n8) - (n2*j[p4a, 0, 1 + n2, n3, 1 + n4, n5, 1, -1, -1 + n8, n9, 0, 
      1, 0, 1, 1])/(2*(-1 + n8)) + 
   (n2*j[p4a, 0, 1 + n2, n3, 1 + n4, n5, 1, -1, -1 + n8, n9, 1, 1, 0, 1, 1])/
    (2*(-1 + n8)) - (n2*j[p4a, 0, 1 + n2, n3, 1 + n4, n5, 1, 0, -2 + n8, n9, 
      1, 1, 0, 1, 1])/(2*(-1 + n8)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n6 == 1 && 
    n8 == 1 && n9 == 0 && n7 != 0 -> 
  ((8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4a, -1 + n1, n2, n3, n4, n5, 
      1, 1 + n7, 0, 0, 1, 1, 0, 2, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((24 - 9*d + 2*n1 + 4*n2 + 4*n3 + 6*n4 + 6*n5 + 6*n7)*
     j[p4a, -1 + n1, n2, n3, n4, n5, 1, 1 + n7, 0, 0, 2, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-192 + 144*d - 27*d^2 - 16*n1 + 6*d*n1 - 80*n2 + 30*d*n2 - 4*n1*n2 - 
      8*n2^2 - 80*n3 + 30*d*n3 - 4*n1*n3 - 16*n2*n3 - 8*n3^2 - 96*n4 + 
      36*d*n4 - 4*n1*n4 - 20*n2*n4 - 20*n3*n4 - 12*n4^2 - 96*n5 + 36*d*n5 - 
      4*n1*n5 - 20*n2*n5 - 20*n3*n5 - 24*n4*n5 - 12*n5^2 - 96*n7 + 36*d*n7 - 
      4*n1*n7 - 20*n2*n7 - 20*n3*n7 - 24*n4*n7 - 24*n5*n7 - 12*n7^2)*
     j[p4a, -1 + n1, n2, n3, n4, n5, 1, 1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((24 - 9*d + 2*n1 + 4*n2 + 4*n3 + 6*n4 + 6*n5 + 6*n7)*
     j[p4a, -1 + n1, n2, n3, n4, n5, 1, 1 + n7, 1, 0, 2, 1, 0, 0, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*j[p4a, -1 + n1, n2, n3, n4, 
      n5, 1, 1 + n7, 2, 0, 1, 1, 0, 0, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   (n5*(8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4a, -1 + n1, n2, n3, n4, 
      1 + n5, 0, 1 + n7, 1, 0, 1, 1, 0, 1, 1])/(-40 + 31*d - 6*d^2 + 10*n1 - 
     4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 
     4*n3^2 - 34*n4 + 13*d*n4 + 2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 
     10*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 
     2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 8*n4*n7 - 2*n5*n7 - 2*n7^2) - 
   (n5*(8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*
     j[p4a, -1 + n1, n2, n3, n4, 1 + n5, 1, 1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 
      28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 
      2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 
      6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 
      8*n4*n7 - 2*n5*n7 - 2*n7^2)) + 
   (n5*(8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*
     j[p4a, -1 + n1, n2, n3, n4, 1 + n5, 1, 1 + n7, 1, 0, 1, 1, 0, 1, 0])/
    (2*(-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 
      28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 
      2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 
      6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 
      8*n4*n7 - 2*n5*n7 - 2*n7^2)) - 
   (n4*(8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4a, -1 + n1, n2, n3, 
      1 + n4, n5, 0, 1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + (n4*(8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*
     j[p4a, -1 + n1, n2, n3, 1 + n4, n5, 1, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) - (n4*(8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*
     j[p4a, -1 + n1, n2, n3, 1 + n4, n5, 1, 1 + n7, 1, 0, 1, 1, 0, 1, 0])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   (2*n3*(8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*
     j[p4a, -1 + n1, n2, 1 + n3, n4, n5, 1, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + (n3*(24 - 9*d + 2*n1 + 4*n2 + 4*n3 + 6*n4 + 6*n5 + 
      6*n7)*j[p4a, -1 + n1, n2, 1 + n3, n4, n5, 1, 1 + n7, 1, 0, 1, 1, 0, 0, 
      1])/(2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) - 
   (n2*(24 - 9*d + 2*n1 + 4*n2 + 4*n3 + 6*n4 + 6*n5 + 6*n7)*
     j[p4a, -1 + n1, 1 + n2, n3, n4, n5, 1, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 
      28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 
      2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 
      6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 
      8*n4*n7 - 2*n5*n7 - 2*n7^2)) - 
   (n2*(8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*
     j[p4a, -1 + n1, 1 + n2, n3, n4, n5, 1, 1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    (-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 28*n3 + 
     11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 2*n1*n4 - 
     4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 
     6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 8*n4*n7 - 
     2*n5*n7 - 2*n7^2) + ((-24 + 9*d - 2*n1 - 4*n2 - 4*n3 - 6*n4 - 6*n5 - 
      6*n7)*j[p4a, n1, -1 + n2, n3, n4, n5, 1, 1 + n7, 0, 0, 2, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*j[p4a, n1, -1 + n2, n3, n4, 
      n5, 1, 1 + n7, 1, 0, 1, 1, 0, 0, 2])/(40 - 31*d + 6*d^2 - 10*n1 + 
     4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
     4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
     10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 
     2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   (2*(-8 + 3*d - n2 - 2*n3 - 2*n4 - 2*n5 - 2*n7)*(-5 + 2*d - n2 - n3 - 
      2*n4 - n5 - n7)*j[p4a, n1, -1 + n2, n3, n4, n5, 1, 1 + n7, 1, 0, 1, 1, 
      0, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 
     2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 
     13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 
     4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 
     6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-8 + 3*d - n2 - 2*n3 - 2*n4 - 2*n5 - 2*n7)*j[p4a, n1, -1 + n2, n3, n4, 
      n5, 1, 1 + n7, 1, 0, 2, 0, 0, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 
     4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
     4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
     10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 
     2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-24 + 9*d - 2*n1 - 4*n2 - 4*n3 - 6*n4 - 6*n5 - 6*n7)*
     j[p4a, n1, -1 + n2, n3, n4, n5, 1, 1 + n7, 1, 0, 2, 1, 0, 0, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((1 + n7)*(8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*
     j[p4a, n1, -1 + n2, n3, n4, n5, 1, 2 + n7, 1, 0, 0, 1, 0, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) - ((1 + n7)*(8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*
     j[p4a, n1, -1 + n2, n3, n4, n5, 1, 2 + n7, 1, 0, 1, 0, 0, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) - ((1 + n7)*(24 - 9*d + 2*n1 + 4*n2 + 4*n3 + 6*n4 + 
      6*n5 + 6*n7)*j[p4a, n1, -1 + n2, n3, n4, n5, 1, 2 + n7, 1, 0, 1, 1, 0, 
      0, 1])/(2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 
      2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 
      13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 
      4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 
      6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8 + 3*d + 2*n1 - 4*n3 - 2*n4 - 2*n5 - 2*n7)*j[p4a, n1, -1 + n2, n3, n4, 
      n5, 2, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*j[p4a, n1, -1 + n2, n3, n4, 
      n5, 2, 1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*j[p4a, n1, -1 + n2, n3, n4, 
      n5, 2, 1 + n7, 1, 0, 1, 1, 0, 1, 0])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   (n5*(16 - 6*d + 2*n1 + 3*n2 + 2*n3 + 4*n4 + 4*n5 + 4*n7)*
     j[p4a, n1, -1 + n2, n3, n4, 1 + n5, 1, 1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    (-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 28*n3 + 
     11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 2*n1*n4 - 
     4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 
     6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 8*n4*n7 - 
     2*n5*n7 - 2*n7^2) - (n5*(16 - 6*d + 2*n1 + 3*n2 + 2*n3 + 4*n4 + 4*n5 + 
      4*n7)*j[p4a, n1, -1 + n2, n3, n4, 1 + n5, 1, 1 + n7, 1, 0, 1, 1, 0, 1, 
      0])/(-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 
     28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 
     2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 
     6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 
     8*n4*n7 - 2*n5*n7 - 2*n7^2) + 
   (n4*(8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4a, n1, -1 + n2, n3, 
      1 + n4, n5, 0, 1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) - (n4*(8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*
     j[p4a, n1, -1 + n2, n3, 1 + n4, n5, 1, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + (n4*(8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*
     j[p4a, n1, -1 + n2, n3, 1 + n4, n5, 1, 1 + n7, 1, 0, 1, 1, 0, 1, 0])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) - 
   (n3*(8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4a, n1, -1 + n2, 1 + n3, 
      n4, n5, 1, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 
     4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
     4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
     10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 
     2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   (n3*(8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4a, n1, -1 + n2, 1 + n3, 
      n4, n5, 1, 1 + n7, 1, 0, 0, 1, 0, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 
     4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
     4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
     10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 
     2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) - 
   (n3*(8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4a, n1, -1 + n2, 1 + n3, 
      n4, n5, 1, 1 + n7, 1, 0, 1, 0, 0, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 
     4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
     4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
     10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 
     2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) - 
   (n3*(8 - 3*d - 2*n1 + 4*n3 + 2*n4 + 2*n5 + 2*n7)*
     j[p4a, n1, -1 + n2, 1 + n3, n4, n5, 1, 1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*j[p4a, n1, n2, -1 + n3, n4, 
      n5, 1, 1 + n7, 1, 0, 1, 1, 0, 0, 2])/(40 - 31*d + 6*d^2 - 10*n1 + 
     4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
     4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
     10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 
     2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) - 
   ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*(-5 + 2*d - n2 - n3 - n4 - 
      2*n5 - n7)*j[p4a, n1, n2, -1 + n3, n4, n5, 1, 1 + n7, 1, 0, 1, 1, 0, 1, 
      1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
     28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
     2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
     6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
     8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-8 + 3*d - n2 - 2*n3 - 2*n4 - 2*n5 - 2*n7)*j[p4a, n1, n2, -1 + n3, n4, 
      n5, 1, 1 + n7, 1, 0, 2, 0, 0, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 
     4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
     4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
     10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 
     2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((1 + n7)*(24 - 9*d + 2*n1 + 4*n2 + 4*n3 + 6*n4 + 6*n5 + 6*n7)*
     j[p4a, n1, n2, -1 + n3, n4, n5, 1, 2 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) - 
   ((1 + n7)*(8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*
     j[p4a, n1, n2, -1 + n3, n4, n5, 1, 2 + n7, 1, 0, 0, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((1 + n7)*(8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*
     j[p4a, n1, n2, -1 + n3, n4, n5, 1, 2 + n7, 1, 0, 1, 0, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8 + 3*d - n2 - 2*n3 - 2*n4 - 2*n5 - 2*n7)*j[p4a, n1, n2, -1 + n3, n4, 
      n5, 2, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 
     4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
     4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
     10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 
     2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*j[p4a, n1, n2, -1 + n3, n4, 
      n5, 2, 1 + n7, 1, 0, 0, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) - 
   (n4*(16 - 6*d + 2*n1 + 3*n2 + 2*n3 + 4*n4 + 4*n5 + 4*n7)*
     j[p4a, n1, n2, -1 + n3, 1 + n4, n5, 0, 1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + (n4*(24 - 9*d + 2*n1 + 4*n2 + 4*n3 + 6*n4 + 6*n5 + 
      6*n7)*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, 1, 1 + n7, 0, 0, 1, 1, 0, 1, 
      1])/(2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) - 
   (n4*(8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*
     j[p4a, n1, n2, -1 + n3, 1 + n4, n5, 1, 1 + n7, 1, 0, 0, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   (n4*(8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*
     j[p4a, n1, n2, -1 + n3, 1 + n4, n5, 1, 1 + n7, 1, 0, 1, 0, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   (2*(-2 + d - n4 - n5)*(-8 + 3*d - n2 - 2*n3 - 2*n4 - 2*n5 - 2*n7)*
     j[p4a, n1, n2, n3, -1 + n4, n5, 1, 1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*
     j[p4a, n1, n2, n3, -1 + n4, n5, 2, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((-8 + 3*d - n2 - 2*n3 - 2*n4 - 2*n5 - 2*n7)*
     j[p4a, n1, n2, n3, -1 + n4, n5, 2, 1 + n7, 1, 0, 0, 1, 0, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*
     j[p4a, n1, n2, n3, -1 + n4, n5, 2, 1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*
     j[p4a, n1, n2, n3, -1 + n4, n5, 2, 1 + n7, 1, 0, 1, 1, 0, 1, 0])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + (n5*(8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*
     j[p4a, n1, n2, n3, -1 + n4, 1 + n5, 1, 1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    (-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 28*n3 + 
     11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 2*n1*n4 - 
     4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 
     6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 8*n4*n7 - 
     2*n5*n7 - 2*n7^2) - (n5*(8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*
     j[p4a, n1, n2, n3, -1 + n4, 1 + n5, 1, 1 + n7, 1, 0, 1, 1, 0, 1, 0])/
    (-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 28*n3 + 
     11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 2*n1*n4 - 
     4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 
     6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 8*n4*n7 - 
     2*n5*n7 - 2*n7^2) + ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*
     j[p4a, n1, n2, n3, n4, -1 + n5, 0, 1 + n7, 1, 0, 1, 1, 0, 1, 2])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*
     j[p4a, n1, n2, n3, n4, -1 + n5, 1, 1 + n7, 0, 0, 1, 1, 0, 1, 2])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*
     j[p4a, n1, n2, n3, n4, -1 + n5, 1, 1 + n7, 1, 0, 1, 1, 0, 0, 2])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) - ((-2 + d - n4 - n5)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 
      2*n5 - 2*n7)*j[p4a, n1, n2, n3, n4, -1 + n5, 1, 1 + n7, 1, 0, 1, 1, 0, 
      1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
     28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
     2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
     6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
     8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*j[p4a, n1, n2, n3, n4, 
      -1 + n5, 2, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*j[p4a, n1, n2, n3, n4, 
      -1 + n5, 2, 1 + n7, 1, 0, 0, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*j[p4a, n1, n2, n3, n4, 
      -1 + n5, 2, 1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*j[p4a, n1, n2, n3, n4, 
      -1 + n5, 2, 1 + n7, 1, 0, 1, 1, 0, 1, 0])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4a, n1, n2, n3, n4, n5, 0, 
      1 + n7, 1, -1, 1, 1, 0, 1, 2])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-2*n1 - n2 + 2*n3 + 8*n5 - 3*d*n5 + 2*n1*n5 + 2*n2*n5 + 2*n4*n5 + 
      2*n5^2 + 2*n5*n7)*j[p4a, n1, n2, n3, n4, n5, 0, 1 + n7, 1, 0, 1, 1, 0, 
      1, 1])/(-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 
     28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 
     2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 
     6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 
     8*n4*n7 - 2*n5*n7 - 2*n7^2) + 
   ((-8 + 3*d - n2 - 2*n3 - 2*n4 - 2*n5 - 2*n7)*j[p4a, n1, n2, n3, n4, n5, 0, 
      1 + n7, 1, 0, 1, 1, 0, 1, 2])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4a, n1, n2, n3, n4, n5, 1, 
      n7, 0, 0, 2, 1, 0, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 
     3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*j[p4a, n1, n2, n3, n4, n5, 
      1, n7, 1, 0, 1, 1, 0, 0, 2])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4a, n1, n2, n3, n4, n5, 1, 
      n7, 1, 0, 2, 0, 0, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 
     3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4a, n1, n2, n3, n4, n5, 1, 
      n7, 1, 0, 2, 1, 0, 0, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 
     3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4a, n1, n2, n3, n4, n5, 1, 
      1 + n7, 0, -1, 1, 1, 0, 1, 2])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-8 + 3*d + 14*n1 - 6*d*n1 - 42*n2 + 15*d*n2 - 6*n2^2 + 56*n3 - 21*d*n3 + 
      10*n1*n3 + 2*n2*n3 + 8*n3^2 - 18*n4 + 6*d*n4 + 4*n1*n4 - 12*n2*n4 + 
      10*n3*n4 - 4*n4^2 - 2*n5 + 4*n1*n5 - 10*n2*n5 + 14*n3*n5 - 4*n4*n5 - 
      10*n7 + 3*d*n7 + 2*n1*n7 - 12*n2*n7 + 14*n3*n7 - 6*n4*n7 - 2*n5*n7 - 
      2*n7^2)*j[p4a, n1, n2, n3, n4, n5, 1, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8 + 3*d - n2 - 2*n3 - 2*n4 - 2*n5 - 2*n7)*j[p4a, n1, n2, n3, n4, n5, 1, 
      1 + n7, 0, 0, 1, 1, 0, 1, 2])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-8 + 3*d - n2 - 2*n3 - 2*n4 - 2*n5 - 2*n7)*j[p4a, n1, n2, n3, n4, n5, 1, 
      1 + n7, 0, 0, 1, 1, 0, 2, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-24 + 9*d - 2*n1 - 4*n2 - 4*n3 - 6*n4 - 6*n5 - 6*n7)*
     j[p4a, n1, n2, n3, n4, n5, 1, 1 + n7, 0, 0, 1, 2, -1, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((24 - 9*d + 2*n1 + 4*n2 + 4*n3 + 6*n4 + 6*n5 + 6*n7)*
     j[p4a, n1, n2, n3, n4, n5, 1, 1 + n7, 0, 0, 1, 2, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((24 - 9*d + 2*n1 + 4*n2 + 4*n3 + 6*n4 + 6*n5 + 6*n7)*
     j[p4a, n1, n2, n3, n4, n5, 1, 1 + n7, 1, -1, 1, 1, 0, 0, 2])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8 - 3*d + 2*n1 + 18*n2 - 6*d*n2 + 2*n2^2 - 8*n3 + 3*d*n3 - 2*n1*n3 + 
      2*n2*n3 - 14*n4 + 6*d*n4 + 2*n2*n4 - 6*n3*n4 - 4*n4^2 + 2*n5 + 
      4*n2*n5 - 2*n3*n5 - 4*n4*n5 - 6*n7 + 3*d*n7 + 2*n1*n7 + 4*n2*n7 - 
      6*n3*n7 - 6*n4*n7 - 2*n5*n7 - 2*n7^2)*j[p4a, n1, n2, n3, n4, n5, 1, 
      1 + n7, 1, 0, 0, 1, 0, 1, 1])/(2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
      8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
      4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
      10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 
      2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-16*n1 + 6*d*n1 - 2*n1*n2 + 8*n3 - 3*d*n3 - 2*n1*n3 + 2*n2*n3 + 16*n4 - 
      6*d*n4 - 4*n1*n4 + 2*n2*n4 + 6*n3*n4 + 4*n4^2 - 4*n1*n5 + 2*n3*n5 + 
      4*n4*n5 + 8*n7 - 3*d*n7 - 6*n1*n7 + 6*n3*n7 + 6*n4*n7 + 2*n5*n7 + 
      2*n7^2)*j[p4a, n1, n2, n3, n4, n5, 1, 1 + n7, 1, 0, 1, 0, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*j[p4a, n1, n2, n3, n4, n5, 
      1, 1 + n7, 1, 0, 1, 1, -1, 0, 2])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-8 + 3*d - 22*n1 + 6*d*n1 - 52*n2 + 18*d*n2 - 6*n1*n2 - 8*n2^2 + 44*n3 - 
      15*d*n3 + 2*n1*n3 + 4*n3^2 - 2*n4 - 4*n1*n4 - 12*n2*n4 + 10*n3*n4 + 
      6*n5 - 3*d*n5 - 2*n1*n5 - 10*n2*n5 + 10*n3*n5 + 2*n4*n5 + 2*n5^2 + 
      14*n7 - 6*d*n7 - 4*n1*n7 - 10*n2*n7 + 14*n3*n7 + 4*n4*n7 + 6*n5*n7 + 
      4*n7^2)*j[p4a, n1, n2, n3, n4, n5, 1, 1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-24 + 9*d - 2*n1 - 4*n2 - 4*n3 - 6*n4 - 6*n5 - 6*n7)*
     j[p4a, n1, n2, n3, n4, n5, 1, 1 + n7, 1, 0, 1, 1, 0, 0, 2])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-16 + 6*d - 2*n2 - 4*n3 + 12*n4 - 6*d*n4 + 2*n2*n4 + 4*n3*n4 + 4*n4^2 - 
      12*n5 + 3*d*n5 - 2*n1*n5 - 2*n2*n5 + 2*n4*n5 - 2*n5^2 - 4*n7 + 
      4*n4*n7 - 2*n5*n7)*j[p4a, n1, n2, n3, n4, n5, 1, 1 + n7, 1, 0, 1, 1, 0, 
      1, 0])/(2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 
      2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 
      13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 
      4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 
      6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*(-8 + 3*d - 2*n2 - 2*n3 - 
      2*n4 - 2*n5 - 2*n7)*j[p4a, n1, n2, n3, n4, n5, 1, 1 + n7, 1, 0, 1, 1, 
      0, 1, 1])/(2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 
      2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 
      13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 
      4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 
      6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8 + 3*d - n2 - 2*n3 - 2*n4 - 2*n5 - 2*n7)*j[p4a, n1, n2, n3, n4, n5, 1, 
      1 + n7, 1, 0, 2, 0, -1, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4a, n1, n2, n3, n4, n5, 1, 
      1 + n7, 1, 0, 2, 0, 0, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*j[p4a, n1, n2, n3, n4, n5, 
      1, 1 + n7, 2, 0, 1, 0, -1, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4a, n1, n2, n3, n4, n5, 2, 
      n7, 0, 0, 1, 1, 0, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 
     3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*j[p4a, n1, n2, n3, n4, n5, 
      2, n7, 1, 0, 0, 1, 0, 1, 1])/(2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
      8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
      4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
      10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 
      2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((24 - 9*d + 2*n1 + 4*n2 + 4*n3 + 6*n4 + 6*n5 + 6*n7)*
     j[p4a, n1, n2, n3, n4, n5, 2, 1 + n7, 0, -1, 1, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8 + 3*d - n2 - 2*n3 - 2*n4 - 2*n5 - 2*n7)*j[p4a, n1, n2, n3, n4, n5, 2, 
      1 + n7, 0, 0, 1, 1, -1, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*j[p4a, n1, n2, n3, n4, n5, 
      2, 1 + n7, 1, -1, 1, 1, 0, 0, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*j[p4a, n1, n2, n3, n4, n5, 
      2, 1 + n7, 1, -1, 1, 1, 0, 1, 0])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*j[p4a, n1, n2, n3, n4, n5, 
      2, 1 + n7, 1, 0, 0, 1, -1, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) - 
   (n5*(8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4a, n1, n2, n3, n4, 
      1 + n5, 0, 1 + n7, 1, -1, 1, 1, 0, 1, 1])/(-40 + 31*d - 6*d^2 + 10*n1 - 
     4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 
     4*n3^2 - 34*n4 + 13*d*n4 + 2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 
     10*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 
     2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 8*n4*n7 - 2*n5*n7 - 2*n7^2) - 
   (n5*(8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4a, n1, n2, n3, n4, 
      1 + n5, 1, n7, 1, 0, 1, 1, 0, 0, 1])/(-40 + 31*d - 6*d^2 + 10*n1 - 
     4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 
     4*n3^2 - 34*n4 + 13*d*n4 + 2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 
     10*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 
     2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 8*n4*n7 - 2*n5*n7 - 2*n7^2) + 
   (n5*(8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4a, n1, n2, n3, n4, 
      1 + n5, 1, n7, 1, 0, 1, 1, 0, 1, 0])/(-40 + 31*d - 6*d^2 + 10*n1 - 
     4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 
     4*n3^2 - 34*n4 + 13*d*n4 + 2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 
     10*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 
     2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 8*n4*n7 - 2*n5*n7 - 2*n7^2) + 
   (n5*(8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*
     j[p4a, n1, n2, n3, n4, 1 + n5, 1, 1 + n7, 1, -1, 1, 1, 0, 0, 1])/
    (2*(-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 
      28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 
      2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 
      6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 
      8*n4*n7 - 2*n5*n7 - 2*n7^2)) - 
   (n5*(8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*
     j[p4a, n1, n2, n3, n4, 1 + n5, 1, 1 + n7, 1, -1, 1, 1, 0, 1, 0])/
    (2*(-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 
      28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 
      2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 
      6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 
      8*n4*n7 - 2*n5*n7 - 2*n7^2)) - 
   (n4*(8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*
     j[p4a, n1, n2, n3, 1 + n4, -1 + n5, 0, 1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + (n4*(8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*
     j[p4a, n1, n2, n3, 1 + n4, -1 + n5, 1, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) - 
   (n4*(8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*
     j[p4a, n1, n2, n3, 1 + n4, -1 + n5, 1, 1 + n7, 1, 0, 0, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   (n4*(8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*
     j[p4a, n1, n2, n3, 1 + n4, -1 + n5, 1, 1 + n7, 1, 0, 1, 0, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) - 
   (n4*(8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*
     j[p4a, n1, n2, n3, 1 + n4, -1 + n5, 1, 1 + n7, 1, 0, 1, 1, 0, 1, 0])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) - 
   ((2*n1 + n2 - 2*n3)*n4*j[p4a, n1, n2, n3, 1 + n4, n5, 0, n7, 1, 0, 1, 1, 
      0, 1, 1])/(-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 
     2*n1*n2 - 28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 
     13*d*n4 + 2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 
     4*n1*n5 - 6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 
     6*n3*n7 - 8*n4*n7 - 2*n5*n7 - 2*n7^2) + 
   (n4*(8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4a, n1, n2, n3, 1 + n4, 
      n5, 0, 1 + n7, 1, -1, 1, 1, 0, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 
     4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
     4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
     10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 
     2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   (n4*(8 - 3*d - 2*n1 + 4*n3 + 2*n4 + 2*n5 + 2*n7)*
     j[p4a, n1, n2, n3, 1 + n4, n5, 1, n7, 0, 0, 1, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   (n4*(8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*
     j[p4a, n1, n2, n3, 1 + n4, n5, 1, n7, 1, 0, 0, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) - 
   (n4*(8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*
     j[p4a, n1, n2, n3, 1 + n4, n5, 1, n7, 1, 0, 1, 0, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) - 
   (n4*(8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4a, n1, n2, n3, 1 + n4, 
      n5, 1, 1 + n7, 0, -1, 1, 1, 0, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 
     4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
     4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
     10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 
     2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   (n4*(8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*
     j[p4a, n1, n2, n3, 1 + n4, n5, 1, 1 + n7, 1, -1, 1, 1, 0, 1, 0])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   (n3*(-8 + 3*d - 6*n1 - 4*n2 + 4*n3 - 2*n4 - 2*n5 - 2*n7)*
     j[p4a, n1, n2, 1 + n3, n4, n5, 1, n7, 0, 0, 1, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) - 
   (n3*(8 - 3*d - 2*n1 + 4*n3 + 2*n4 + 2*n5 + 2*n7)*
     j[p4a, n1, n2, 1 + n3, n4, n5, 1, n7, 1, 0, 0, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   (n3*(8 - 3*d - 2*n1 + 4*n3 + 2*n4 + 2*n5 + 2*n7)*
     j[p4a, n1, n2, 1 + n3, n4, n5, 1, n7, 1, 0, 1, 0, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   (n3*(-8 + 3*d - 6*n1 - 4*n2 + 4*n3 - 2*n4 - 2*n5 - 2*n7)*
     j[p4a, n1, n2, 1 + n3, n4, n5, 1, n7, 1, 0, 1, 1, 0, 0, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   (n3*(8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4a, n1, n2, 1 + n3, n4, 
      n5, 1, 1 + n7, 0, 0, 1, 1, -1, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 
     4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
     4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
     10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 
     2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) - 
   (2*n3*(8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*
     j[p4a, n1, n2, 1 + n3, n4, n5, 1, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + (n3*(8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*
     j[p4a, n1, n2, 1 + n3, n4, n5, 1, 1 + n7, 1, 0, 0, 1, -1, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) - (n3*(8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*
     j[p4a, n1, n2, 1 + n3, n4, n5, 1, 1 + n7, 1, 0, 1, 0, -1, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) - (n3*(-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*
     j[p4a, n1, n2, 1 + n3, n4, n5, 1, 1 + n7, 1, 0, 1, 1, -1, 0, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) - (n3*(24 - 9*d + 2*n1 + 4*n2 + 4*n3 + 6*n4 + 6*n5 + 
      6*n7)*j[p4a, n1, n2, 1 + n3, n4, n5, 1, 1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   (n2*(8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4a, n1, 1 + n2, -1 + n3, 
      n4, n5, 1, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/(-40 + 31*d - 6*d^2 + 10*n1 - 
     4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 
     4*n3^2 - 34*n4 + 13*d*n4 + 2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 
     10*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 
     2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 8*n4*n7 - 2*n5*n7 - 2*n7^2) + 
   (n2*(8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*
     j[p4a, n1, 1 + n2, -1 + n3, n4, n5, 1, 1 + n7, 1, 0, 0, 1, 0, 1, 1])/
    (2*(-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 
      28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 
      2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 
      6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 
      8*n4*n7 - 2*n5*n7 - 2*n7^2)) - 
   (2*n2*(8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*
     j[p4a, n1, 1 + n2, n3, n4, n5, 1, n7, 0, 0, 1, 1, 0, 1, 1])/
    (-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 28*n3 + 
     11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 2*n1*n4 - 
     4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 
     6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 8*n4*n7 - 
     2*n5*n7 - 2*n7^2) - (n2*(-8 + 3*d + 2*n1 - 4*n3 - 2*n4 - 2*n5 - 2*n7)*
     j[p4a, n1, 1 + n2, n3, n4, n5, 1, n7, 1, 0, 0, 1, 0, 1, 1])/
    (2*(-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 
      28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 
      2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 
      6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 
      8*n4*n7 - 2*n5*n7 - 2*n7^2)) - 
   (2*n2*(8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*
     j[p4a, n1, 1 + n2, n3, n4, n5, 1, n7, 1, 0, 1, 1, 0, 0, 1])/
    (-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 28*n3 + 
     11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 2*n1*n4 - 
     4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 
     6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 8*n4*n7 - 
     2*n5*n7 - 2*n7^2) + (n2*(8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*
     j[p4a, n1, 1 + n2, n3, n4, n5, 1, 1 + n7, 0, 0, 1, 1, -1, 1, 1])/
    (-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 28*n3 + 
     11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 2*n1*n4 - 
     4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 
     6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 8*n4*n7 - 
     2*n5*n7 - 2*n7^2) + (n2*(8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*
     j[p4a, n1, 1 + n2, n3, n4, n5, 1, 1 + n7, 1, 0, 0, 1, -1, 1, 1])/
    (2*(-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 
      28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 
      2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 
      6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 
      8*n4*n7 - 2*n5*n7 - 2*n7^2)) + 
   (n1*(-8 + 3*d - n2 - 2*n3 - 2*n4 - 2*n5 - 2*n7)*j[p4a, 1 + n1, n2, n3, n4, 
      n5, 1, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 
     4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
     4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
     10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 
     2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) - 
   (n1*(-8 + 3*d - n2 - 2*n3 - 2*n4 - 2*n5 - 2*n7)*j[p4a, 1 + n1, n2, n3, n4, 
      n5, 1, 1 + n7, 1, 0, 1, 0, 0, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 
     4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
     4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
     10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 
     2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n6 == 1 && 
    n7 == 0 && n8 == 1 && n9 != 0 -> 
  -j[p4a, -1 + n1, n2, n3, n4, n5, 1, 0, 0, 1 + n9, 2, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4a, -1 + n1, n2, n3, n4, n5, 1, 0, 1, 
     1 + n9, 0, 2, 0, 1, 1]/(3 - d + n4 + n5 + n9) + 
   ((14 - 7*d + 2*n1 + 4*n2 + 4*n3 + 4*n4 + 4*n5)*j[p4a, -1 + n1, n2, n3, n4, 
      n5, 1, 0, 1, 1 + n9, 1, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4a, -1 + n1, n2, n3, n4, n5, 1, 0, 1, 1 + n9, 2, 1, 0, 0, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + 
   ((1 + n9)*j[p4a, -1 + n1, n2, n3, n4, n5, 1, 0, 1, 2 + n9, 1, 1, 0, 1, 0])/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4a, -1 + n1, n2, n3, n4, n5, 1, 0, 2, 
     1 + n9, 1, 1, 0, 0, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   (n5*j[p4a, -1 + n1, n2, n3, n4, 1 + n5, 1, 0, 1, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n5*j[p4a, -1 + n1, n2, n3, n4, 1 + n5, 1, 0, 1, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n4*j[p4a, -1 + n1, n2, n3, 1 + n4, n5, 1, 0, 1, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n2*j[p4a, -1 + n1, 1 + n2, n3, n4, n5, 1, 0, 1, 1 + n9, 1, 1, 0, 0, 1])/
    (-3 + d - n4 - n5 - n9) + j[p4a, n1, -1 + n2, n3, n4, n5, 1, 0, 0, 
     1 + n9, 2, 1, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   ((-10 + 5*d - 2*n2 - 4*n3 - 4*n4 - 2*n5)*j[p4a, n1, -1 + n2, n3, n4, n5, 
      1, 0, 1, 1 + n9, 1, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4a, n1, -1 + n2, n3, n4, n5, 1, 0, 1, 1 + n9, 2, 0, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4a, n1, -1 + n2, n3, n4, n5, 1, 0, 1, 
     1 + n9, 2, 1, 0, 0, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   ((1 + n9)*j[p4a, n1, -1 + n2, n3, n4, n5, 1, 0, 1, 2 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) - j[p4a, n1, -1 + n2, n3, n4, n5, 1, 0, 2, 
     1 + n9, 1, 0, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4a, n1, -1 + n2, n3, n4, n5, 1, 0, 2, 1 + n9, 1, 1, 0, 0, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4a, n1, -1 + n2, n3, n4, n5, 2, 0, 0, 
     1 + n9, 1, 1, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4a, n1, -1 + n2, n3, n4, n5, 2, 0, 1, 1 + n9, 0, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) - 
   (n4*j[p4a, n1, -1 + n2, n3, 1 + n4, n5, 1, 0, 1, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   ((8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n9)*j[p4a, n1, n2, -1 + n3, n4, 
      n5, 1, 0, 1, 1 + n9, 1, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4a, n1, n2, -1 + n3, n4, n5, 1, 0, 1, 1 + n9, 2, 0, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4a, n1, n2, -1 + n3, n4, n5, 2, 0, 0, 
     1 + n9, 1, 1, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4a, n1, n2, -1 + n3, n4, n5, 2, 0, 1, 1 + n9, 0, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + 
   (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, 1, 0, 0, 1 + n9, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, 1, 0, 1, 1 + n9, 0, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, 1, 0, 1, 1 + n9, 1, 0, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) + j[p4a, n1, n2, n3, -1 + n4, n5, 1, 0, 1, 
    1 + n9, 1, 1, 0, 1, 1] + ((1 + n9)*j[p4a, n1, n2, n3, -1 + n4, n5, 1, 0, 
      1, 2 + n9, 1, 1, 0, 1, 0])/(2*(3 - d + n4 + n5 + n9)) - 
   j[p4a, n1, n2, n3, -1 + n4, n5, 2, 0, 0, 1 + n9, 1, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4a, n1, n2, n3, -1 + n4, n5, 2, 0, 1, 
     1 + n9, 0, 1, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4a, n1, n2, n3, -1 + n4, n5, 2, 0, 1, 1 + n9, 1, 1, 0, 0, 1]/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4a, n1, n2, n3, -1 + n4, n5, 2, 0, 1, 
     1 + n9, 1, 1, 0, 1, 0]/(2*(-3 + d - n4 - n5 - n9)) - 
   (n5*j[p4a, n1, n2, n3, -1 + n4, 1 + n5, 1, 0, 1, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n5*j[p4a, n1, n2, n3, -1 + n4, 1 + n5, 1, 0, 1, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + j[p4a, n1, n2, n3, n4, n5, 1, -1, 0, 1 + n9, 
     1, 2, 0, 1, 1]/(-3 + d - n4 - n5 - n9) - 
   j[p4a, n1, n2, n3, n4, n5, 1, -1, 0, 1 + n9, 2, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + ((6 - 3*d - 2*n1 + 4*n3 + 4*n4)*
     j[p4a, n1, n2, n3, n4, n5, 1, -1, 1, 1 + n9, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4a, n1, n2, n3, n4, n5, 1, -1, 1, 
     1 + n9, 2, 0, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4a, n1, n2, n3, n4, n5, 1, -1, 1, 1 + n9, 2, 1, 0, 0, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + 
   ((1 + n9)*j[p4a, n1, n2, n3, n4, n5, 1, -1, 1, 2 + n9, 1, 1, 0, 1, 0])/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4a, n1, n2, n3, n4, n5, 1, -1, 2, 
     1 + n9, 1, 0, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4a, n1, n2, n3, n4, n5, 1, -1, 2, 1 + n9, 1, 1, 0, 0, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + 
   ((4 + n1 - n2 - n4 + n9)*j[p4a, n1, n2, n3, n4, n5, 1, 0, 0, 1 + n9, 1, 1, 
      0, 1, 1])/(2*(3 - d + n4 + n5 + n9)) + 
   j[p4a, n1, n2, n3, n4, n5, 1, 0, 0, 1 + n9, 1, 2, -1, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4a, n1, n2, n3, n4, n5, 1, 0, 0, 1 + n9, 
     1, 2, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   ((1 + n9)*j[p4a, n1, n2, n3, n4, n5, 1, 0, 0, 2 + n9, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) + 
   ((n1 + n2 - n4 + n9)*j[p4a, n1, n2, n3, n4, n5, 1, 0, 1, 1 + n9, 0, 1, 0, 
      1, 1])/(2*(3 - d + n4 + n5 + n9)) - 
   j[p4a, n1, n2, n3, n4, n5, 1, 0, 1, 1 + n9, 0, 2, -1, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4a, n1, n2, n3, n4, n5, 1, 0, 1, 1 + n9, 
     0, 2, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   ((2 + n1 - n4 + n9)*j[p4a, n1, n2, n3, n4, n5, 1, 0, 1, 1 + n9, 1, 0, 0, 
      1, 1])/(2*(-3 + d - n4 - n5 - n9)) + 
   (n1*j[p4a, n1, n2, n3, n4, n5, 1, 0, 1, 1 + n9, 1, 1, 0, 0, 1])/
    (-3 + d - n4 - n5 - n9) + ((1 - n4 + n9)*j[p4a, n1, n2, n3, n4, n5, 1, 0, 
      1, 1 + n9, 1, 1, 0, 1, 0])/(2*(-3 + d - n4 - n5 - n9)) + 
   ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n9)*j[p4a, n1, n2, n3, n4, n5, 
      1, 0, 1, 1 + n9, 1, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4a, n1, n2, n3, n4, n5, 1, 0, 1, 1 + n9, 2, 0, -1, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4a, n1, n2, n3, n4, n5, 1, 0, 1, 1 + n9, 
     2, 0, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   ((1 + n9)*j[p4a, n1, n2, n3, n4, n5, 1, 0, 1, 2 + n9, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) + 
   ((1 + n9)*j[p4a, n1, n2, n3, n4, n5, 1, 0, 1, 2 + n9, 1, 0, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) - j[p4a, n1, n2, n3, n4, n5, 1, 0, 2, 1 + n9, 
     1, 0, -1, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4a, n1, n2, n3, n4, n5, 2, -1, 0, 1 + n9, 1, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4a, n1, n2, n3, n4, n5, 2, -1, 1, 
     1 + n9, 0, 1, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4a, n1, n2, n3, n4, n5, 2, 0, 0, 1 + n9, 1, 1, -1, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4a, n1, n2, n3, n4, n5, 2, 0, 1, n9, 1, 
     1, 0, 0, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4a, n1, n2, n3, n4, n5, 2, 0, 1, n9, 1, 1, 0, 1, 0]/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4a, n1, n2, n3, n4, n5, 2, 0, 1, 1 + n9, 
     0, 1, -1, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, 1, -1, 1, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, 1, -1, 1, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, 1, 0, 1, n9, 1, 1, 0, 0, 1])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, 1, 0, 1, n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, 1, -1, 1, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, 1, 0, 1, n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n2*j[p4a, n1, 1 + n2, -1 + n3, n4, n5, 1, 0, 0, 1 + n9, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) - 
   (n2*j[p4a, n1, 1 + n2, -1 + n3, n4, n5, 1, 0, 1, 1 + n9, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) - 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, 1, -1, 0, 1 + n9, 1, 1, 0, 1, 1])/
    (-3 + d - n4 - n5 - n9) + (n2*j[p4a, n1, 1 + n2, n3, n4, n5, 1, -1, 1, 
      1 + n9, 0, 1, 0, 1, 1])/(-3 + d - n4 - n5 - n9) - 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, 1, -1, 1, 1 + n9, 1, 1, 0, 0, 1])/
    (-3 + d - n4 - n5 - n9) + (n2*j[p4a, n1, 1 + n2, n3, n4, n5, 1, 0, 0, 
      1 + n9, 1, 1, -1, 1, 1])/(2*(-3 + d - n4 - n5 - n9)) - 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, 1, 0, 1, 1 + n9, 0, 1, -1, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) - 
   (n1*j[p4a, 1 + n1, -1 + n2, n3, n4, n5, 1, 0, 1, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5 - n9)) + 
   (n1*j[p4a, 1 + n1, n2, n3, n4, n5, 1, 0, 0, 1 + n9, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) + 
   (n1*j[p4a, 1 + n1, n2, n3, n4, n5, 1, 0, 1, 1 + n9, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) - 
   (n1*j[p4a, 1 + n1, n2, n3, n4, n5, 1, 0, 1, 1 + n9, 1, 0, 0, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == -1 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n6 == 1 && n8 == 1 && n3 != 1 -> 
  ((4*n7 - d*n7 + n1*n7 + 2*n7^2)*j[p4a, n1, -1, -1 + n3, n4, n5, 1, 1 + n7, 
      1, n9, 1, 1, 0, 1, 1])/(2*(-1 + n3)*(-3 + d - n1 - n5 - n7)) + 
   ((4*n5 - d*n5 + n1*n5 + 2*n5^2)*j[p4a, n1, -1, -1 + n3, n4, 1 + n5, 1, n7, 
      1, n9, 1, 1, 0, 1, 1])/(2*(-1 + n3)*(3 - d + n1 + n5 + n7)) - 
   j[p4a, n1, -1, n3, n4, n5, 1, n7, 1, n9, 1, 1, 0, 1, 1] + 
   ((4*n7 - d*n7 + n1*n7 + 2*n7^2)*j[p4a, n1, 0, -2 + n3, n4, n5, 1, 1 + n7, 
      1, n9, 1, 1, 0, 1, 1])/(2*(-1 + n3)*(-3 + d - n1 - n5 - n7)) + 
   ((4*n5 - d*n5 + n1*n5 + 2*n5^2)*j[p4a, n1, 0, -1 + n3, -1 + n4, 1 + n5, 1, 
      n7, 1, n9, 1, 1, 0, 1, 1])/(2*(-1 + n3)*(3 - d + n1 + n5 + n7)) + 
   ((-4 + d - n1 - 2*n5)*j[p4a, n1, 0, -1 + n3, n4, n5, 1, n7, 0, n9, 1, 1, 
      0, 2, 1])/(2*(-1 + n3)*(-3 + d - n1 - n5 - n7)) + 
   ((-24 + 17*d - 3*d^2 - 14*n1 + 5*d*n1 - 2*n1^2 - 6*n4 + 2*d*n4 - 2*n1*n4 - 
      8*n5 + 3*d*n5 - 3*n1*n5 - 2*n4*n5 - 18*n7 + 6*d*n7 - 4*n1*n7 - 
      2*n4*n7 - 2*n5*n7 - 4*n7^2)*j[p4a, n1, 0, -1 + n3, n4, n5, 1, n7, 1, 
      n9, 1, 1, 0, 1, 1])/(2*(-1 + n3)*(-3 + d - n1 - n5 - n7)) + 
   ((4 - d + n1 + 2*n7)*j[p4a, n1, 0, -1 + n3, n4, n5, 1, n7, 1, n9, 1, 2, 0, 
      1, 1])/(2*(-1 + n3)*(-3 + d - n1 - n5 - n7)) + 
   ((-4*n7 + d*n7 - n1*n7 - 2*n7^2)*j[p4a, n1, 0, -1 + n3, n4, n5, 1, 1 + n7, 
      0, n9, 1, 1, 0, 1, 1])/(2*(-1 + n3)*(-3 + d - n1 - n5 - n7)) + 
   (n7*j[p4a, n1, 0, -1 + n3, n4, n5, 1, 1 + n7, 1, n9, 0, 2, -1, 1, 1])/
    ((-1 + n3)*(3 - d + n1 + n5 + n7)) + 
   ((4*n7 - d*n7 + 2*n7^2)*j[p4a, n1, 0, -1 + n3, n4, n5, 1, 1 + n7, 1, n9, 
      1, 1, -1, 1, 1])/(2*(-1 + n3)*(-3 + d - n1 - n5 - n7)) + 
   ((-4*n7 + d*n7 - n1*n7 - 2*n7^2)*j[p4a, n1, 0, -1 + n3, n4, n5, 1, 1 + n7, 
      1, n9, 1, 1, 0, 0, 1])/(2*(-1 + n3)*(-3 + d - n1 - n5 - n7)) + 
   ((-4*n5 + d*n5 - n1*n5 - 2*n5^2)*j[p4a, n1, 0, -1 + n3, n4, 1 + n5, 0, n7, 
      1, n9, 1, 1, 0, 1, 1])/(2*(-1 + n3)*(3 - d + n1 + n5 + n7)) + 
   ((-4*n5 + d*n5 - n1*n5 - 2*n5^2)*j[p4a, n1, 0, -1 + n3, n4, 1 + n5, 1, 
      -1 + n7, 1, n9, 1, 1, 0, 1, 1])/(2*(-1 + n3)*(3 - d + n1 + n5 + n7)) + 
   ((4*n5 - d*n5 + n1*n5 + 2*n5^2)*j[p4a, n1, 0, -1 + n3, n4, 1 + n5, 1, n7, 
      1, n9, 1, 1, -1, 1, 1])/(2*(-1 + n3)*(3 - d + n1 + n5 + n7)) - 
   (n5*j[p4a, n1, 0, -1 + n3, n4, 1 + n5, 1, n7, 1, n9, 1, 1, -1, 2, 0])/
    ((-1 + n3)*(3 - d + n1 + n5 + n7)) + 
   ((-2*n5 + d*n5 - n1*n5 - 2*n5*n7)*j[p4a, n1, 0, -1 + n3, n4, 1 + n5, 1, 
      n7, 1, n9, 1, 1, 0, 0, 1])/(2*(-1 + n3)*(-3 + d - n1 - n5 - n7)) + 
   ((2*n5 - d*n5 + n1*n5 + 2*n5*n7)*j[p4a, n1, 0, -1 + n3, n4, 1 + n5, 1, n7, 
      1, n9, 1, 1, 0, 1, 0])/(2*(-1 + n3)*(-3 + d - n1 - n5 - n7)) - 
   (n4*j[p4a, n1, 0, -1 + n3, 1 + n4, n5, 0, n7, 1, n9, 1, 1, 0, 1, 1])/
    (-1 + n3) + (n4*j[p4a, n1, 0, -1 + n3, 1 + n4, n5, 1, n7, 0, n9, 1, 1, 0, 
      1, 1])/(-1 + n3) + j[p4a, n1, 0, n3, n4, n5, 1, -1 + n7, 1, n9, 1, 1, 
    0, 1, 1] + 2*j[p4a, n1, 0, n3, n4, n5, 1, n7, 0, n9, 1, 1, 0, 1, 1] + 
   j[p4a, n1, 0, n3, n4, n5, 1, n7, 1, n9, 1, 1, 0, 0, 1] - 
   (n1*n7*j[p4a, 1 + n1, -1, -1 + n3, n4, n5, 1, 1 + n7, 1, n9, 1, 1, -1, 1, 
      1])/(2*(-1 + n3)*(3 - d + n1 + n5 + n7)) + 
   ((3*n1 - d*n1 + n1^2 + 2*n1*n5)*j[p4a, 1 + n1, 0, -1 + n3, n4, n5, 1, n7, 
      0, n9, 1, 1, 0, 1, 1])/(2*(-1 + n3)*(3 - d + n1 + n5 + n7)) + 
   (n1*j[p4a, 1 + n1, 0, -1 + n3, n4, n5, 1, n7, 0, n9, 1, 2, -1, 1, 1])/
    (2*(-1 + n3)*(3 - d + n1 + n5 + n7)) + 
   ((-3*n1 + d*n1 - n1^2 - 2*n1*n5)*j[p4a, 1 + n1, 0, -1 + n3, n4, n5, 1, n7, 
      1, n9, 1, 0, 0, 1, 1])/(2*(-1 + n3)*(3 - d + n1 + n5 + n7)) + 
   (n1*n5*j[p4a, 1 + n1, 0, -1 + n3, n4, n5, 1, n7, 1, n9, 1, 1, -1, 1, 1])/
    (2*(-1 + n3)*(3 - d + n1 + n5 + n7)) - 
   (n1*j[p4a, 1 + n1, 0, -1 + n3, n4, n5, 1, n7, 1, n9, 1, 1, -1, 2, 1])/
    (2*(-1 + n3)*(3 - d + n1 + n5 + n7)) + 
   ((-3*n1 + d*n1 - n1^2 - 2*n1*n7)*j[p4a, 1 + n1, 0, -1 + n3, n4, n5, 1, n7, 
      1, n9, 1, 1, 0, 0, 1])/(2*(-1 + n3)*(-3 + d - n1 - n5 - n7)) + 
   ((3*n1 - d*n1 + n1^2 + 2*n1*n7)*j[p4a, 1 + n1, 0, -1 + n3, n4, n5, 1, n7, 
      1, n9, 1, 1, 0, 1, 1])/(2*(-1 + n3)*(-3 + d - n1 - n5 - n7)) + 
   (n1*n7*j[p4a, 1 + n1, 0, -1 + n3, n4, n5, 1, 1 + n7, 0, n9, 1, 1, -1, 1, 
      1])/(2*(-1 + n3)*(3 - d + n1 + n5 + n7)) + 
   (n1*n7*j[p4a, 1 + n1, 0, -1 + n3, n4, n5, 1, 1 + n7, 1, n9, 0, 1, -1, 1, 
      1])/(2*(-1 + n3)*(3 - d + n1 + n5 + n7)) - 
   (n1*n7*j[p4a, 1 + n1, 0, -1 + n3, n4, n5, 1, 1 + n7, 1, n9, 1, 0, -1, 1, 
      1])/(2*(-1 + n3)*(3 - d + n1 + n5 + n7)) - 
   (n1*n5*j[p4a, 1 + n1, 0, -1 + n3, n4, 1 + n5, 1, n7, 1, -1 + n9, 1, 1, -1, 
      1, 1])/(2*(-1 + n3)*(3 - d + n1 + n5 + n7)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n3 == 1 && 
    n6 == 1 && n8 == 1 &&  !(n7 == 0 || n9 == 0) -> 
  ((1 + n9)*j[p4a, -1 + n1, -1 + n2, 1, n4, -1 + n5, 1, 1 + n7, 1, 2 + n9, 1, 
      1, 0, 1, 1])/(-1 + n5) + j[p4a, -1 + n1, n2, 0, n4, -1 + n5, 1, 1 + n7, 
     1, 1 + n9, 1, 1, 0, 2, 1]/(2*(-1 + n5)) + j[p4a, -1 + n1, n2, 1, 
    -1 + n4, n5, 1, 1 + n7, 1, 1 + n9, 1, 1, 0, 1, 1] + 
   ((-1 - n9)*j[p4a, -1 + n1, n2, 1, n4, -1 + n5, 1, n7, 1, 2 + n9, 1, 1, 0, 
      1, 1])/(-1 + n5) + j[p4a, -1 + n1, n2, 1, n4, -1 + n5, 1, 1 + n7, 1, 
     1 + n9, 0, 2, 0, 1, 1]/(-1 + n5) + 
   ((-3 + d - n2 - n5 - 2*n7)*j[p4a, -1 + n1, n2, 1, n4, -1 + n5, 1, 1 + n7, 
      1, 1 + n9, 1, 1, 0, 1, 1])/(-1 + n5) + 
   ((1 + n9)*j[p4a, -1 + n1, n2, 1, n4, -1 + n5, 1, 1 + n7, 1, 2 + n9, 1, 1, 
      -1, 1, 1])/(-1 + n5) + j[p4a, -1 + n1, n2, 2, n4, -1 + n5, 1, 1 + n7, 
     1, 1 + n9, 1, 1, 0, 0, 1]/(2*(-1 + n5)) + 
   (n2*j[p4a, -1 + n1, 1 + n2, 1, n4, -1 + n5, 1, 1 + n7, 0, 1 + n9, 1, 1, 0, 
      1, 1])/(2*(-1 + n5)) - j[p4a, n1, -1 + n2, 0, n4, -1 + n5, 2, 1 + n7, 
     1, 1 + n9, 1, 1, 0, 1, 1]/(2*(-1 + n5)) + 
   ((-1 - n9)*j[p4a, n1, -1 + n2, 1, n4, -2 + n5, 1, 1 + n7, 1, 2 + n9, 1, 1, 
      0, 1, 1])/(-1 + n5) + j[p4a, n1, -1 + n2, 1, n4, -1 + n5, 1, 1 + n7, 1, 
     1 + n9, 1, 1, 0, 0, 2]/(-1 + n5) + 
   ((6 - d - 2*n4 + 2*n7)*j[p4a, n1, -1 + n2, 1, n4, -1 + n5, 1, 1 + n7, 1, 
      1 + n9, 1, 1, 0, 1, 1])/(2*(-1 + n5)) + 
   j[p4a, n1, -1 + n2, 1, n4, -1 + n5, 1, 1 + n7, 1, 1 + n9, 2, 0, 0, 1, 1]/
    (2*(-1 + n5)) + ((1 + n9)*j[p4a, n1, -1 + n2, 1, n4, -1 + n5, 1, 1 + n7, 
      1, 2 + n9, 1, 1, 0, 1, 0])/(2*(-1 + n5)) + 
   ((-1 - n9)*j[p4a, n1, -1 + n2, 1, n4, -1 + n5, 1, 1 + n7, 1, 2 + n9, 1, 1, 
      0, 1, 1])/(-1 + n5) + j[p4a, n1, -1 + n2, 1, n4, -1 + n5, 1, 1 + n7, 2, 
     1 + n9, 1, 0, 0, 1, 1]/(2*(-1 + n5)) + 
   j[p4a, n1, -1 + n2, 1, n4, -1 + n5, 1, 1 + n7, 2, 1 + n9, 1, 1, 0, 0, 1]/
    (2*(-1 + n5)) + j[p4a, n1, -1 + n2, 1, n4, -1 + n5, 2, 1 + n7, 0, 1 + n9, 
     1, 1, 0, 1, 1]/(-1 + n5) + j[p4a, n1, -1 + n2, 1, n4, -1 + n5, 2, 
     1 + n7, 1, 1 + n9, 0, 1, 0, 1, 1]/(2*(-1 + n5)) + 
   j[p4a, n1, -1 + n2, 1, n4, -1 + n5, 2, 1 + n7, 1, 1 + n9, 1, 1, 0, 0, 1]/
    (2*(-1 + n5)) + j[p4a, n1, -1 + n2, 1, n4, -1 + n5, 2, 1 + n7, 1, 1 + n9, 
     1, 1, 0, 1, 0]/(2*(-1 + n5)) + j[p4a, n1, -1 + n2, 2, n4, -1 + n5, 1, 
     1 + n7, 1, 1 + n9, 1, 1, 0, 0, 1]/(2*(-1 + n5)) + 
   j[p4a, n1, n2, 0, -1 + n4, -1 + n5, 2, 1 + n7, 1, 1 + n9, 1, 1, 0, 1, 1]/
    (2*(-1 + n5)) + j[p4a, n1, n2, 0, n4, -2 + n5, 1, 1 + n7, 1, 1 + n9, 1, 
     1, 0, 1, 2]/(-1 + n5) + j[p4a, n1, n2, 0, n4, -2 + n5, 2, 1 + n7, 1, 
     1 + n9, 1, 1, 0, 1, 1]/(2*(-1 + n5)) + 
   j[p4a, n1, n2, 0, n4, -1 + n5, 1, n7, 1, 1 + n9, 2, 1, 0, 1, 1]/
    (2*(-1 + n5)) - j[p4a, n1, n2, 0, n4, -1 + n5, 1, 1 + n7, 1, n9, 1, 1, 0, 
     1, 2]/(2*(-1 + n5)) + ((-1 - n2 + n4)*j[p4a, n1, n2, 0, n4, -1 + n5, 1, 
      1 + n7, 1, 1 + n9, 1, 1, 0, 1, 1])/(2*(-1 + n5)) + 
   j[p4a, n1, n2, 0, n4, -1 + n5, 1, 1 + n7, 1, 1 + n9, 1, 1, 0, 1, 2]/
    (2*(-1 + n5)) - j[p4a, n1, n2, 0, n4, -1 + n5, 1, 1 + n7, 1, 1 + n9, 1, 
     1, 0, 2, 1]/(2*(-1 + n5)) + 
   (n4*j[p4a, n1, n2, 0, 1 + n4, -2 + n5, 1, 1 + n7, 1, 1 + n9, 1, 1, 0, 1, 
      1])/(2*(-1 + n5)) - (n4*j[p4a, n1, n2, 0, 1 + n4, -1 + n5, 1, n7, 1, 
      1 + n9, 1, 1, 0, 1, 1])/(2*(-1 + n5)) + 
   ((-2 + d - n4 - n5 - n9)*j[p4a, n1, n2, 1, -1 + n4, -1 + n5, 1, 1 + n7, 1, 
      1 + n9, 1, 1, 0, 1, 1])/(-1 + n5) + 
   ((-1 - n9)*j[p4a, n1, n2, 1, -1 + n4, -1 + n5, 1, 1 + n7, 1, 2 + n9, 1, 1, 
      0, 1, 0])/(2*(-1 + n5)) - j[p4a, n1, n2, 1, -1 + n4, -1 + n5, 2, 
     1 + n7, 0, 1 + n9, 1, 1, 0, 1, 1]/(2*(-1 + n5)) + 
   j[p4a, n1, n2, 1, -1 + n4, -1 + n5, 2, 1 + n7, 1, 1 + n9, 0, 1, 0, 1, 1]/
    (2*(-1 + n5)) - j[p4a, n1, n2, 1, -1 + n4, -1 + n5, 2, 1 + n7, 1, 1 + n9, 
     1, 1, 0, 0, 1]/(2*(-1 + n5)) - j[p4a, n1, n2, 1, -1 + n4, -1 + n5, 2, 
     1 + n7, 1, 1 + n9, 1, 1, 0, 1, 0]/(2*(-1 + n5)) + 
   j[p4a, n1, n2, 1, -1 + n4, n5, 1, 1 + n7, 1, 1 + n9, 1, 1, 0, 0, 1]/2 - 
   j[p4a, n1, n2, 1, -1 + n4, n5, 1, 1 + n7, 1, 1 + n9, 1, 1, 0, 1, 0]/2 - 
   j[p4a, n1, n2, 1, -1 + n4, n5, 1, 1 + n7, 1, 1 + n9, 1, 1, 0, 1, 1] + 
   j[p4a, n1, n2, 1, n4, -2 + n5, 0, 1 + n7, 1, 1 + n9, 1, 1, 0, 1, 2]/
    (1 - n5) + ((-1 - n9)*j[p4a, n1, n2, 1, n4, -2 + n5, 0, 1 + n7, 1, 
      2 + n9, 1, 1, 0, 1, 1])/(-1 + n5) + 
   ((1 + n9)*j[p4a, n1, n2, 1, n4, -2 + n5, 1, n7, 1, 2 + n9, 1, 1, 0, 1, 1])/
    (-1 + n5) + j[p4a, n1, n2, 1, n4, -2 + n5, 1, 1 + n7, 0, 1 + n9, 1, 1, 0, 
     1, 2]/(1 - n5) + j[p4a, n1, n2, 1, n4, -2 + n5, 1, 1 + n7, 1, 1 + n9, 1, 
     1, 0, 0, 2]/(1 - n5) + ((-2 + d - n4 - n5 - n9)*
     j[p4a, n1, n2, 1, n4, -2 + n5, 1, 1 + n7, 1, 1 + n9, 1, 1, 0, 1, 1])/
    (-1 + n5) + ((1 + n9)*j[p4a, n1, n2, 1, n4, -2 + n5, 1, 1 + n7, 1, 
      2 + n9, 0, 1, 0, 1, 1])/(-1 + n5) + 
   ((-1 - n9)*j[p4a, n1, n2, 1, n4, -2 + n5, 1, 1 + n7, 1, 2 + n9, 1, 1, -1, 
      1, 1])/(-1 + n5) + ((-1 - n9)*j[p4a, n1, n2, 1, n4, -2 + n5, 1, 1 + n7, 
      1, 2 + n9, 1, 1, 0, 1, 0])/(2*(-1 + n5)) + 
   ((1 + n9)*j[p4a, n1, n2, 1, n4, -2 + n5, 1, 1 + n7, 1, 2 + n9, 1, 1, 0, 1, 
      1])/(-1 + n5) - j[p4a, n1, n2, 1, n4, -2 + n5, 2, 1 + n7, 0, 1 + n9, 1, 
     1, 0, 1, 1]/(2*(-1 + n5)) - j[p4a, n1, n2, 1, n4, -2 + n5, 2, 1 + n7, 1, 
     1 + n9, 0, 1, 0, 1, 1]/(2*(-1 + n5)) - 
   j[p4a, n1, n2, 1, n4, -2 + n5, 2, 1 + n7, 1, 1 + n9, 1, 1, 0, 0, 1]/
    (2*(-1 + n5)) - j[p4a, n1, n2, 1, n4, -2 + n5, 2, 1 + n7, 1, 1 + n9, 1, 
     1, 0, 1, 0]/(2*(-1 + n5)) + 
   ((2 - n5)*j[p4a, n1, n2, 1, n4, -1 + n5, 0, 1 + n7, 1, 1 + n9, 1, 1, 0, 1, 
      1])/(-1 + n5) + j[p4a, n1, n2, 1, n4, -1 + n5, 1, n7, 0, 1 + n9, 1, 2, 
     0, 1, 1]/(1 - n5) - j[p4a, n1, n2, 1, n4, -1 + n5, 1, n7, 0, 1 + n9, 2, 
     1, 0, 1, 1]/(2*(-1 + n5)) + j[p4a, n1, n2, 1, n4, -1 + n5, 1, n7, 1, 
     1 + n9, 1, 1, 0, 0, 2]/(1 - n5) + 
   ((8 - 5*d + 2*n1 + 4*n2 + 4*n4 + 6*n5 + 2*n7 + 2*n9)*
     j[p4a, n1, n2, 1, n4, -1 + n5, 1, n7, 1, 1 + n9, 1, 1, 0, 1, 1])/
    (2*(-1 + n5)) - j[p4a, n1, n2, 1, n4, -1 + n5, 1, n7, 1, 1 + n9, 2, 0, 0, 
     1, 1]/(2*(-1 + n5)) - j[p4a, n1, n2, 1, n4, -1 + n5, 1, n7, 1, 1 + n9, 
     2, 1, 0, 0, 1]/(2*(-1 + n5)) + 
   ((1 + n9)*j[p4a, n1, n2, 1, n4, -1 + n5, 1, n7, 1, 2 + n9, 1, 1, 0, 1, 0])/
    (2*(-1 + n5)) - j[p4a, n1, n2, 1, n4, -1 + n5, 1, n7, 2, 1 + n9, 1, 0, 0, 
     1, 1]/(2*(-1 + n5)) - j[p4a, n1, n2, 1, n4, -1 + n5, 1, n7, 2, 1 + n9, 
     1, 1, 0, 0, 1]/(2*(-1 + n5)) + ((-3 + n1 + 2*n2 + n4 - 2*n7 - n9)*
     j[p4a, n1, n2, 1, n4, -1 + n5, 1, 1 + n7, 0, 1 + n9, 1, 1, 0, 1, 1])/
    (2*(-1 + n5)) + ((1 + n9)*j[p4a, n1, n2, 1, n4, -1 + n5, 1, 1 + n7, 0, 
      2 + n9, 1, 1, 0, 1, 1])/(2*(-1 + n5)) + 
   j[p4a, n1, n2, 1, n4, -1 + n5, 1, 1 + n7, 1, n9, 1, 1, 0, 0, 2]/
    (2*(-1 + n5)) + ((-3 + n1 + n2 + n4 - n9)*j[p4a, n1, n2, 1, n4, -1 + n5, 
      1, 1 + n7, 1, 1 + n9, 0, 1, 0, 1, 1])/(2*(-1 + n5)) + 
   j[p4a, n1, n2, 1, n4, -1 + n5, 1, 1 + n7, 1, 1 + n9, 0, 2, -1, 1, 1]/
    (2*(-1 + n5)) - j[p4a, n1, n2, 1, n4, -1 + n5, 1, 1 + n7, 1, 1 + n9, 0, 
     2, 0, 1, 1]/(2*(-1 + n5)) + 
   ((2 - n1 - n4 + n9)*j[p4a, n1, n2, 1, n4, -1 + n5, 1, 1 + n7, 1, 1 + n9, 
      1, 0, 0, 1, 1])/(2*(-1 + n5)) + 
   j[p4a, n1, n2, 1, n4, -1 + n5, 1, 1 + n7, 1, 1 + n9, 1, 1, -1, 0, 2]/
    (-1 + n5) + ((-5 + 2*d - n2 - 2*n4 - 2*n5 - 2*n7 - n9)*
     j[p4a, n1, n2, 1, n4, -1 + n5, 1, 1 + n7, 1, 1 + n9, 1, 1, -1, 1, 1])/
    (-1 + n5) + ((-3 + 2*n2 + n5)*j[p4a, n1, n2, 1, n4, -1 + n5, 1, 1 + n7, 
      1, 1 + n9, 1, 1, 0, 0, 1])/(2*(-1 + n5)) - 
   j[p4a, n1, n2, 1, n4, -1 + n5, 1, 1 + n7, 1, 1 + n9, 1, 1, 0, 0, 2]/
    (2*(-1 + n5)) + ((3 - n4 - n5)*j[p4a, n1, n2, 1, n4, -1 + n5, 1, 1 + n7, 
      1, 1 + n9, 1, 1, 0, 1, 0])/(2*(-1 + n5)) + 
   ((3 - d + n2 + n5 + 2*n7)*j[p4a, n1, n2, 1, n4, -1 + n5, 1, 1 + n7, 1, 
      1 + n9, 1, 1, 0, 1, 1])/(-1 + n5) + 
   j[p4a, n1, n2, 1, n4, -1 + n5, 1, 1 + n7, 1, 1 + n9, 2, 0, -1, 1, 1]/
    (2*(-1 + n5)) - j[p4a, n1, n2, 1, n4, -1 + n5, 1, 1 + n7, 1, 1 + n9, 2, 
     0, 0, 1, 1]/(2*(-1 + n5)) + 
   ((1 + n9)*j[p4a, n1, n2, 1, n4, -1 + n5, 1, 1 + n7, 1, 2 + n9, 0, 1, 0, 1, 
      1])/(2*(-1 + n5)) + ((-1 - n9)*j[p4a, n1, n2, 1, n4, -1 + n5, 1, 
      1 + n7, 1, 2 + n9, 1, 0, 0, 1, 1])/(2*(-1 + n5)) - 
   j[p4a, n1, n2, 1, n4, -1 + n5, 2, n7, 0, 1 + n9, 1, 1, 0, 1, 1]/
    (2*(-1 + n5)) - j[p4a, n1, n2, 1, n4, -1 + n5, 2, 1 + n7, 0, n9, 1, 1, 0, 
     1, 1]/(2*(-1 + n5)) + j[p4a, n1, n2, 1, n4, -1 + n5, 2, 1 + n7, 0, 
     1 + n9, 1, 1, -1, 1, 1]/(2*(-1 + n5)) - 
   j[p4a, n1, n2, 1, n4, n5, 1, n7, 1, 1 + n9, 1, 1, 0, 0, 1]/2 + 
   j[p4a, n1, n2, 1, n4, n5, 1, n7, 1, 1 + n9, 1, 1, 0, 1, 0]/2 + 
   j[p4a, n1, n2, 1, n4, n5, 1, n7, 1, 1 + n9, 1, 1, 0, 1, 1] - 
   (n4*j[p4a, n1, n2, 1, 1 + n4, -2 + n5, 0, 1 + n7, 1, 1 + n9, 1, 1, 0, 1, 
      1])/(-1 + n5) + (n4*j[p4a, n1, n2, 1, 1 + n4, -2 + n5, 1, 1 + n7, 0, 
      1 + n9, 1, 1, 0, 1, 1])/(2*(-1 + n5)) - 
   (n4*j[p4a, n1, n2, 1, 1 + n4, -2 + n5, 1, 1 + n7, 1, 1 + n9, 0, 1, 0, 1, 
      1])/(2*(-1 + n5)) + (n4*j[p4a, n1, n2, 1, 1 + n4, -2 + n5, 1, 1 + n7, 
      1, 1 + n9, 1, 0, 0, 1, 1])/(2*(-1 + n5)) - 
   (n4*j[p4a, n1, n2, 1, 1 + n4, -2 + n5, 1, 1 + n7, 1, 1 + n9, 1, 1, 0, 1, 
      0])/(2*(-1 + n5)) + (n4*j[p4a, n1, n2, 1, 1 + n4, -1 + n5, 0, n7, 1, 
      1 + n9, 1, 1, 0, 1, 1])/(-1 + n5) - 
   (n4*j[p4a, n1, n2, 1, 1 + n4, -1 + n5, 1, n7, 0, 1 + n9, 1, 1, 0, 1, 1])/
    (2*(-1 + n5)) + (n4*j[p4a, n1, n2, 1, 1 + n4, -1 + n5, 1, n7, 1, 1 + n9, 
      0, 1, 0, 1, 1])/(2*(-1 + n5)) - 
   (n4*j[p4a, n1, n2, 1, 1 + n4, -1 + n5, 1, n7, 1, 1 + n9, 1, 0, 0, 1, 1])/
    (2*(-1 + n5)) + (n4*j[p4a, n1, n2, 1, 1 + n4, -1 + n5, 1, n7, 1, 1 + n9, 
      1, 1, 0, 1, 0])/(2*(-1 + n5)) - 
   (3*j[p4a, n1, n2, 2, n4, -1 + n5, 1, n7, 0, 1 + n9, 1, 1, 0, 1, 1])/
    (2*(-1 + n5)) + j[p4a, n1, n2, 2, n4, -1 + n5, 1, n7, 1, 1 + n9, 0, 1, 0, 
     1, 1]/(2*(-1 + n5)) - j[p4a, n1, n2, 2, n4, -1 + n5, 1, n7, 1, 1 + n9, 
     1, 0, 0, 1, 1]/(2*(-1 + n5)) - 
   (3*j[p4a, n1, n2, 2, n4, -1 + n5, 1, n7, 1, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(-1 + n5)) + j[p4a, n1, n2, 2, n4, -1 + n5, 1, 1 + n7, 1, 1 + n9, 1, 
     1, -1, 0, 1]/(-1 + n5) - j[p4a, n1, n2, 2, n4, -1 + n5, 1, 1 + n7, 1, 
     1 + n9, 1, 1, 0, 0, 1]/(2*(-1 + n5)) + 
   (n2*j[p4a, n1, 1 + n2, 0, n4, -1 + n5, 1, n7, 1, 1 + n9, 1, 1, 0, 1, 1])/
    (2*(-1 + n5)) - (n2*j[p4a, n1, 1 + n2, 1, n4, -1 + n5, 1, n7, 0, 1 + n9, 
      1, 1, 0, 1, 1])/(-1 + n5) - 
   (n2*j[p4a, n1, 1 + n2, 1, n4, -1 + n5, 1, n7, 1, 1 + n9, 0, 1, 0, 1, 1])/
    (2*(-1 + n5)) - (n2*j[p4a, n1, 1 + n2, 1, n4, -1 + n5, 1, n7, 1, 1 + n9, 
      1, 1, 0, 0, 1])/(-1 + n5) + 
   (n2*j[p4a, n1, 1 + n2, 1, n4, -1 + n5, 1, n7, 1, 1 + n9, 1, 1, 0, 1, 1])/
    (-1 + n5) + (n2*j[p4a, n1, 1 + n2, 1, n4, -1 + n5, 1, 1 + n7, 0, 1 + n9, 
      1, 1, -1, 1, 1])/(2*(-1 + n5)) - 
   (n2*j[p4a, n1, 1 + n2, 1, n4, -1 + n5, 1, 1 + n7, 0, 1 + n9, 1, 1, 0, 1, 
      1])/(-1 + n5) + (n1*j[p4a, 1 + n1, -1 + n2, 1, n4, -1 + n5, 1, 1 + n7, 
      1, 1 + n9, 1, 1, 0, 0, 1])/(2*(-1 + n5)) - 
   (n1*j[p4a, 1 + n1, n2, 1, n4, -1 + n5, 1, 1 + n7, 0, 1 + n9, 1, 1, 0, 1, 
      1])/(2*(-1 + n5)) - (n1*j[p4a, 1 + n1, n2, 1, n4, -1 + n5, 1, 1 + n7, 
      1, 1 + n9, 0, 1, 0, 1, 1])/(2*(-1 + n5)) + 
   (n1*j[p4a, 1 + n1, n2, 1, n4, -1 + n5, 1, 1 + n7, 1, 1 + n9, 1, 0, 0, 1, 
      1])/(2*(-1 + n5)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n13 == 1 && n14 == 1 && n3 == 1 && n6 == 1 && 
    n7 == 0 && n8 == 1 &&  !(n12 == 0 || n2 == 0) -> 
  ((-1 - n12)*j[p4a, -2 + n1, n2, 1, n4, n5, 1, 0, 1, n9, 1, 1, 2 + n12, 1, 
      1])/(-1 + n1) + ((-1 - n12)*j[p4a, -2 + n1, 1 + n2, 0, n4, n5, 1, 0, 1, 
      n9, 1, 1, 2 + n12, 1, 1])/(-1 + n1) - 
   (n5*j[p4a, -2 + n1, 1 + n2, 1, -1 + n4, 1 + n5, 1, 0, 1, n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n1) + 
   (2*(1 + n12)*j[p4a, -2 + n1, 1 + n2, 1, n4, n5, 1, -1, 1, n9, 1, 1, 
      2 + n12, 1, 1])/(-1 + n1) + 
   ((1 + n12)*j[p4a, -2 + n1, 1 + n2, 1, n4, n5, 1, 0, 0, n9, 1, 1, 2 + n12, 
      1, 1])/(-1 + n1) + j[p4a, -2 + n1, 1 + n2, 1, n4, n5, 1, 0, 1, n9, 0, 
     2, 1 + n12, 1, 1]/(1 - n1) + 
   ((3 - d + n2 + n5)*j[p4a, -2 + n1, 1 + n2, 1, n4, n5, 1, 0, 1, n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n1) + 
   ((1 + n12)*j[p4a, -2 + n1, 1 + n2, 1, n4, n5, 1, 0, 1, n9, 1, 1, 2 + n12, 
      0, 1])/(-1 + n1) + j[p4a, -2 + n1, 1 + n2, 2, n4, n5, 1, 0, 1, n9, 1, 
     1, 1 + n12, 0, 1]/(1 - n1) + j[p4a, -1 + n1, n2, 0, n4, n5, 2, 0, 1, n9, 
     1, 1, 1 + n12, 1, 1]/(1 - n1) - 
   (2*n4*j[p4a, -1 + n1, n2, 0, 1 + n4, n5, 1, 0, 1, n9, 1, 1, 1 + n12, 1, 
      1])/(-1 + n1) + ((-1 - n12)*j[p4a, -1 + n1, n2, 1, n4, n5, 1, 0, 1, n9, 
      1, 0, 2 + n12, 1, 1])/(-1 + n1) + 
   ((-4 + d - n1 - n12 + 2*n4)*j[p4a, -1 + n1, n2, 1, n4, n5, 1, 0, 1, n9, 1, 
      1, 1 + n12, 1, 1])/(-1 + n1) + 
   ((1 + n12)*j[p4a, -1 + n1, n2, 1, n4, n5, 1, 0, 1, n9, 1, 1, 2 + n12, 1, 
      1])/(-1 + n1) + j[p4a, -1 + n1, n2, 1, n4, n5, 1, 0, 1, n9, 2, 0, 
     1 + n12, 1, 1]/(1 - n1) + 
   (n9*j[p4a, -1 + n1, n2, 1, n4, n5, 1, 0, 1, 1 + n9, 1, 1, 1 + n12, 1, 0])/
    (-1 + n1) + j[p4a, -1 + n1, n2, 1, n4, n5, 1, 0, 2, n9, 1, 0, 1 + n12, 1, 
     1]/(1 - n1) + j[p4a, -1 + n1, n2, 1, n4, n5, 1, 0, 2, n9, 1, 1, 1 + n12, 
     0, 1]/(1 - n1) + j[p4a, -1 + n1, n2, 1, n4, n5, 2, 0, 1, n9, 0, 1, 
     1 + n12, 1, 1]/(1 - n1) + j[p4a, -1 + n1, n2, 1, n4, n5, 2, 0, 1, n9, 1, 
     1, 1 + n12, 0, 1]/(-1 + n1) + j[p4a, -1 + n1, n2, 1, n4, n5, 2, 0, 1, 
     n9, 1, 1, 1 + n12, 1, 0]/(-1 + n1) - 
   (n5*j[p4a, -1 + n1, n2, 1, n4, 1 + n5, 1, -1, 1, n9, 1, 1, 1 + n12, 1, 1])/
    (-1 + n1) - (2*n5*j[p4a, -1 + n1, n2, 1, n4, 1 + n5, 1, 0, 1, n9, 1, 1, 
      1 + n12, 0, 1])/(-1 + n1) + 
   (2*n5*j[p4a, -1 + n1, n2, 1, n4, 1 + n5, 1, 0, 1, n9, 1, 1, 1 + n12, 1, 
      0])/(-1 + n1) - (2*n4*j[p4a, -1 + n1, n2, 1, 1 + n4, -1 + n5, 1, 0, 1, 
      n9, 1, 1, 1 + n12, 1, 1])/(-1 + n1) + 
   (2*n4*j[p4a, -1 + n1, n2, 1, 1 + n4, n5, 1, -1, 1, n9, 1, 1, 1 + n12, 1, 
      1])/(-1 + n1) + (2*n4*j[p4a, -1 + n1, n2, 1, 1 + n4, n5, 1, 0, 1, n9, 
      1, 1, 1 + n12, 1, 0])/(-1 + n1) + 
   j[p4a, -1 + n1, n2, 2, n4, n5, 1, 0, 1, n9, 1, 1, 1 + n12, 0, 1]/
    (1 - n1) + j[p4a, -1 + n1, 1 + n2, 0, -1 + n4, n5, 2, 0, 1, n9, 1, 1, 
     1 + n12, 1, 1]/(1 - n1) + j[p4a, -1 + n1, 1 + n2, 0, n4, -1 + n5, 2, 0, 
     1, n9, 1, 1, 1 + n12, 1, 1]/(-1 + n1) + 
   j[p4a, -1 + n1, 1 + n2, 0, n4, n5, 1, -1, 1, n9, 2, 1, 1 + n12, 1, 1]/
    (1 - n1) + j[p4a, -1 + n1, 1 + n2, 0, n4, n5, 1, 0, 1, -1 + n9, 1, 1, 
     1 + n12, 1, 2]/(-1 + n1) + j[p4a, -1 + n1, 1 + n2, 0, n4, n5, 1, 0, 1, 
     n9, 1, 1, n12, 2, 1]/(-1 + n1) + 
   ((2 + n2 - n4)*j[p4a, -1 + n1, 1 + n2, 0, n4, n5, 1, 0, 1, n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n1) + j[p4a, -1 + n1, 1 + n2, 0, n4, n5, 1, 0, 1, 
     n9, 1, 1, 1 + n12, 1, 2]/(1 - n1) + 
   (n4*j[p4a, -1 + n1, 1 + n2, 0, 1 + n4, -1 + n5, 1, 0, 1, n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n1) + 
   (n4*j[p4a, -1 + n1, 1 + n2, 0, 1 + n4, n5, 1, -1, 1, n9, 1, 1, 1 + n12, 1, 
      1])/(-1 + n1) - (2*(-2 + d - n4 - n5 - n9)*j[p4a, -1 + n1, 1 + n2, 1, 
      -1 + n4, n5, 1, 0, 1, n9, 1, 1, 1 + n12, 1, 1])/(-1 + n1) + 
   (n9*j[p4a, -1 + n1, 1 + n2, 1, -1 + n4, n5, 1, 0, 1, 1 + n9, 1, 1, 
      1 + n12, 1, 0])/(-1 + n1) + j[p4a, -1 + n1, 1 + n2, 1, -1 + n4, n5, 2, 
     0, 0, n9, 1, 1, 1 + n12, 1, 1]/(-1 + n1) + 
   j[p4a, -1 + n1, 1 + n2, 1, -1 + n4, n5, 2, 0, 1, n9, 0, 1, 1 + n12, 1, 1]/
    (1 - n1) + j[p4a, -1 + n1, 1 + n2, 1, -1 + n4, n5, 2, 0, 1, n9, 1, 1, 
     1 + n12, 0, 1]/(-1 + n1) + j[p4a, -1 + n1, 1 + n2, 1, -1 + n4, n5, 2, 0, 
     1, n9, 1, 1, 1 + n12, 1, 0]/(-1 + n1) - 
   (n5*j[p4a, -1 + n1, 1 + n2, 1, -1 + n4, 1 + n5, 1, -1, 1, n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n1) + 
   (n5*j[p4a, -1 + n1, 1 + n2, 1, -1 + n4, 1 + n5, 1, 0, 1, n9, 1, 1, n12, 1, 
      1])/(-1 + n1) - (n5*j[p4a, -1 + n1, 1 + n2, 1, -1 + n4, 1 + n5, 1, 0, 
      1, n9, 1, 1, 1 + n12, 0, 1])/(-1 + n1) + 
   (n5*j[p4a, -1 + n1, 1 + n2, 1, -1 + n4, 1 + n5, 1, 0, 1, n9, 1, 1, 
      1 + n12, 1, 0])/(-1 + n1) + 
   (n5*j[p4a, -1 + n1, 1 + n2, 1, -1 + n4, 1 + n5, 1, 0, 1, n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n1) + (2*(-2 + d - n4 - n5 - n9)*
     j[p4a, -1 + n1, 1 + n2, 1, n4, -1 + n5, 1, 0, 1, n9, 1, 1, 1 + n12, 1, 
      1])/(-1 + n1) - (n9*j[p4a, -1 + n1, 1 + n2, 1, n4, -1 + n5, 1, 0, 1, 
      1 + n9, 1, 1, 1 + n12, 1, 0])/(-1 + n1) + 
   j[p4a, -1 + n1, 1 + n2, 1, n4, -1 + n5, 2, 0, 0, n9, 1, 1, 1 + n12, 1, 1]/
    (1 - n1) + j[p4a, -1 + n1, 1 + n2, 1, n4, -1 + n5, 2, 0, 1, n9, 0, 1, 
     1 + n12, 1, 1]/(-1 + n1) + j[p4a, -1 + n1, 1 + n2, 1, n4, -1 + n5, 2, 0, 
     1, n9, 1, 1, 1 + n12, 0, 1]/(1 - n1) + 
   j[p4a, -1 + n1, 1 + n2, 1, n4, -1 + n5, 2, 0, 1, n9, 1, 1, 1 + n12, 1, 0]/
    (1 - n1) + j[p4a, -1 + n1, 1 + n2, 1, n4, n5, 1, -1, 0, n9, 1, 1, 
     1 + n12, 2, 1]/(1 - n1) + 
   ((1 + n12)*j[p4a, -1 + n1, 1 + n2, 1, n4, n5, 1, -1, 0, n9, 1, 1, 2 + n12, 
      1, 1])/(-1 + n1) + j[p4a, -1 + n1, 1 + n2, 1, n4, n5, 1, -1, 0, n9, 1, 
     2, 1 + n12, 1, 1]/(-1 + n1) + j[p4a, -1 + n1, 1 + n2, 1, n4, n5, 1, -1, 
     0, n9, 2, 1, 1 + n12, 1, 1]/(-1 + n1) + 
   ((1 + n12)*j[p4a, -1 + n1, 1 + n2, 1, n4, n5, 1, -1, 1, n9, 1, 0, 2 + n12, 
      1, 1])/(-1 + n1) + ((-4 + d + 2*n12 - 4*n2 - 2*n4)*
     j[p4a, -1 + n1, 1 + n2, 1, n4, n5, 1, -1, 1, n9, 1, 1, 1 + n12, 1, 1])/
    (-1 + n1) + ((-1 - n12)*j[p4a, -1 + n1, 1 + n2, 1, n4, n5, 1, -1, 1, n9, 
      1, 1, 2 + n12, 0, 1])/(-1 + n1) + 
   ((-1 - n12)*j[p4a, -1 + n1, 1 + n2, 1, n4, n5, 1, -1, 1, n9, 1, 1, 
      2 + n12, 1, 1])/(-1 + n1) + j[p4a, -1 + n1, 1 + n2, 1, n4, n5, 1, -1, 
     1, n9, 2, 0, 1 + n12, 1, 1]/(-1 + n1) + 
   j[p4a, -1 + n1, 1 + n2, 1, n4, n5, 1, -1, 1, n9, 2, 1, 1 + n12, 0, 1]/
    (-1 + n1) - (n9*j[p4a, -1 + n1, 1 + n2, 1, n4, n5, 1, -1, 1, 1 + n9, 1, 
      1, 1 + n12, 1, 0])/(-1 + n1) + j[p4a, -1 + n1, 1 + n2, 1, n4, n5, 1, 
     -1, 2, n9, 1, 0, 1 + n12, 1, 1]/(-1 + n1) + 
   j[p4a, -1 + n1, 1 + n2, 1, n4, n5, 1, -1, 2, n9, 1, 1, 1 + n12, 0, 1]/
    (-1 + n1) + ((-2 - 2*n2 - n4 + n9)*j[p4a, -1 + n1, 1 + n2, 1, n4, n5, 1, 
      0, 0, n9, 1, 1, 1 + n12, 1, 1])/(-1 + n1) - 
   (n9*j[p4a, -1 + n1, 1 + n2, 1, n4, n5, 1, 0, 0, 1 + n9, 1, 1, 1 + n12, 1, 
      1])/(-1 + n1) + j[p4a, -1 + n1, 1 + n2, 1, n4, n5, 1, 0, 1, -1 + n9, 1, 
     1, 1 + n12, 0, 2]/(1 - n1) + 
   ((1 - n2 - n4 + n9)*j[p4a, -1 + n1, 1 + n2, 1, n4, n5, 1, 0, 1, n9, 0, 1, 
      1 + n12, 1, 1])/(-1 + n1) + 
   ((-1 + n4 - n9)*j[p4a, -1 + n1, 1 + n2, 1, n4, n5, 1, 0, 1, n9, 1, 0, 
      1 + n12, 1, 1])/(-1 + n1) + ((3 - d + n2 + 2*n4 - n5)*
     j[p4a, -1 + n1, 1 + n2, 1, n4, n5, 1, 0, 1, n9, 1, 1, n12, 1, 1])/
    (-1 + n1) + ((-2 - 2*n2 + n5)*j[p4a, -1 + n1, 1 + n2, 1, n4, n5, 1, 0, 1, 
      n9, 1, 1, 1 + n12, 0, 1])/(-1 + n1) + 
   j[p4a, -1 + n1, 1 + n2, 1, n4, n5, 1, 0, 1, n9, 1, 1, 1 + n12, 0, 2]/
    (-1 + n1) + ((n4 - n5)*j[p4a, -1 + n1, 1 + n2, 1, n4, n5, 1, 0, 1, n9, 1, 
      1, 1 + n12, 1, 0])/(-1 + n1) + 
   ((-3 + d - n2 - n5)*j[p4a, -1 + n1, 1 + n2, 1, n4, n5, 1, 0, 1, n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n1) + j[p4a, -1 + n1, 1 + n2, 1, n4, n5, 1, 0, 1, 
     n9, 2, 0, n12, 1, 1]/(1 - n1) + j[p4a, -1 + n1, 1 + n2, 1, n4, n5, 1, 0, 
     1, n9, 2, 0, 1 + n12, 1, 1]/(-1 + n1) - 
   (n9*j[p4a, -1 + n1, 1 + n2, 1, n4, n5, 1, 0, 1, 1 + n9, 0, 1, 1 + n12, 1, 
      1])/(-1 + n1) + (n9*j[p4a, -1 + n1, 1 + n2, 1, n4, n5, 1, 0, 1, 1 + n9, 
      1, 0, 1 + n12, 1, 1])/(-1 + n1) + 
   j[p4a, -1 + n1, 1 + n2, 1, n4, n5, 2, -1, 0, n9, 1, 1, 1 + n12, 1, 1]/
    (-1 + n1) + j[p4a, -1 + n1, 1 + n2, 1, n4, n5, 2, 0, 0, -1 + n9, 1, 1, 
     1 + n12, 1, 1]/(-1 + n1) + j[p4a, -1 + n1, 1 + n2, 1, n4, n5, 2, 0, 0, 
     n9, 1, 1, n12, 1, 1]/(1 - n1) + 
   (n5*j[p4a, -1 + n1, 1 + n2, 1, n4, 1 + n5, 0, -1, 1, n9, 1, 1, 1 + n12, 1, 
      1])/(-1 + n1) + (n5*j[p4a, -1 + n1, 1 + n2, 1, n4, 1 + n5, 1, -2, 1, 
      n9, 1, 1, 1 + n12, 1, 1])/(-1 + n1) + 
   (n5*j[p4a, -1 + n1, 1 + n2, 1, n4, 1 + n5, 1, -1, 1, -1 + n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n1) - 
   (n5*j[p4a, -1 + n1, 1 + n2, 1, n4, 1 + n5, 1, -1, 1, n9, 1, 1, n12, 1, 1])/
    (-1 + n1) + (2*n5*j[p4a, -1 + n1, 1 + n2, 1, n4, 1 + n5, 1, -1, 1, n9, 1, 
      1, 1 + n12, 0, 1])/(-1 + n1) - 
   (2*n5*j[p4a, -1 + n1, 1 + n2, 1, n4, 1 + n5, 1, -1, 1, n9, 1, 1, 1 + n12, 
      1, 0])/(-1 + n1) - (n5*j[p4a, -1 + n1, 1 + n2, 1, n4, 1 + n5, 1, -1, 1, 
      n9, 1, 1, 1 + n12, 1, 1])/(-1 + n1) + 
   (2*n4*j[p4a, -1 + n1, 1 + n2, 1, 1 + n4, -1 + n5, 1, -1, 1, n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n1) + 
   (n4*j[p4a, -1 + n1, 1 + n2, 1, 1 + n4, -1 + n5, 1, 0, 0, n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n1) + 
   (n4*j[p4a, -1 + n1, 1 + n2, 1, 1 + n4, -1 + n5, 1, 0, 1, n9, 0, 1, 
      1 + n12, 1, 1])/(-1 + n1) - 
   (n4*j[p4a, -1 + n1, 1 + n2, 1, 1 + n4, -1 + n5, 1, 0, 1, n9, 1, 0, 
      1 + n12, 1, 1])/(-1 + n1) - 
   (2*n4*j[p4a, -1 + n1, 1 + n2, 1, 1 + n4, -1 + n5, 1, 0, 1, n9, 1, 1, n12, 
      1, 1])/(-1 + n1) - (n4*j[p4a, -1 + n1, 1 + n2, 1, 1 + n4, -1 + n5, 1, 
      0, 1, n9, 1, 1, 1 + n12, 1, 0])/(-1 + n1) - 
   (2*n4*j[p4a, -1 + n1, 1 + n2, 1, 1 + n4, n5, 0, -1, 1, n9, 1, 1, 1 + n12, 
      1, 1])/(-1 + n1) - (2*n4*j[p4a, -1 + n1, 1 + n2, 1, 1 + n4, n5, 1, -2, 
      1, n9, 1, 1, 1 + n12, 1, 1])/(-1 + n1) + 
   (n4*j[p4a, -1 + n1, 1 + n2, 1, 1 + n4, n5, 1, -1, 0, n9, 1, 1, 1 + n12, 1, 
      1])/(-1 + n1) - (n4*j[p4a, -1 + n1, 1 + n2, 1, 1 + n4, n5, 1, -1, 1, 
      n9, 0, 1, 1 + n12, 1, 1])/(-1 + n1) + 
   (n4*j[p4a, -1 + n1, 1 + n2, 1, 1 + n4, n5, 1, -1, 1, n9, 1, 0, 1 + n12, 1, 
      1])/(-1 + n1) + (2*n4*j[p4a, -1 + n1, 1 + n2, 1, 1 + n4, n5, 1, -1, 1, 
      n9, 1, 1, n12, 1, 1])/(-1 + n1) - 
   (n4*j[p4a, -1 + n1, 1 + n2, 1, 1 + n4, n5, 1, -1, 1, n9, 1, 1, 1 + n12, 1, 
      0])/(-1 + n1) + (3*j[p4a, -1 + n1, 1 + n2, 2, n4, n5, 1, -1, 0, n9, 1, 
      1, 1 + n12, 1, 1])/(-1 + n1) + j[p4a, -1 + n1, 1 + n2, 2, n4, n5, 1, 
     -1, 1, n9, 0, 1, 1 + n12, 1, 1]/(1 - n1) + 
   j[p4a, -1 + n1, 1 + n2, 2, n4, n5, 1, -1, 1, n9, 1, 0, 1 + n12, 1, 1]/
    (-1 + n1) + (3*j[p4a, -1 + n1, 1 + n2, 2, n4, n5, 1, -1, 1, n9, 1, 1, 
      1 + n12, 0, 1])/(-1 + n1) - 
   (2*j[p4a, -1 + n1, 1 + n2, 2, n4, n5, 1, 0, 1, n9, 1, 1, n12, 0, 1])/
    (-1 + n1) + j[p4a, -1 + n1, 1 + n2, 2, n4, n5, 1, 0, 1, n9, 1, 1, 
     1 + n12, 0, 1]/(-1 + n1) - 
   (2*(1 + n2)*j[p4a, -1 + n1, 2 + n2, 0, n4, n5, 1, -1, 1, n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n1) + 
   (2*(1 + n2)*j[p4a, -1 + n1, 2 + n2, 1, n4, n5, 1, -2, 1, n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n1) + 
   (2*(1 + n2)*j[p4a, -1 + n1, 2 + n2, 1, n4, n5, 1, -1, 0, n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n1) - 
   (2*(1 + n2)*j[p4a, -1 + n1, 2 + n2, 1, n4, n5, 1, -1, 1, n9, 1, 1, n12, 1, 
      1])/(-1 + n1) + (4*(1 + n2)*j[p4a, -1 + n1, 2 + n2, 1, n4, n5, 1, -1, 
      1, n9, 1, 1, 1 + n12, 0, 1])/(-1 + n1) + 
   ((-1 - n2)*j[p4a, -1 + n1, 2 + n2, 1, n4, n5, 1, -1, 1, n9, 1, 1, 1 + n12, 
      1, 1])/(-1 + n1) + ((1 + n2)*j[p4a, -1 + n1, 2 + n2, 1, n4, n5, 1, 0, 
      0, n9, 1, 1, 1 + n12, 1, 1])/(-1 + n1) - j[p4a, n1, n2, 1, n4, n5, 1, 
    0, 1, n9, 1, 1, 1 + n12, 0, 1] + j[p4a, n1, n2, 1, n4, n5, 1, 0, 1, n9, 
    1, 1, 1 + n12, 1, 1] - j[p4a, n1, 1 + n2, 1, n4, n5, 1, -1, 0, n9, 1, 1, 
    1 + n12, 1, 1] + j[p4a, n1, 1 + n2, 1, n4, n5, 1, -1, 1, n9, 1, 0, 
    1 + n12, 1, 1] + j[p4a, n1, 1 + n2, 1, n4, n5, 1, -1, 1, n9, 1, 1, 
    1 + n12, 0, 1] - j[p4a, n1, 1 + n2, 1, n4, n5, 1, -1, 1, n9, 1, 1, 
    1 + n12, 1, 1] + j[p4a, n1, 1 + n2, 1, n4, n5, 1, 0, 0, n9, 1, 1, n12, 1, 
    1] + j[p4a, n1, 1 + n2, 1, n4, n5, 1, 0, 1, n9, 0, 1, n12, 1, 1] - 
   j[p4a, n1, 1 + n2, 1, n4, n5, 1, 0, 1, n9, 1, 0, n12, 1, 1], 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && n4 == 0 && 
    n5 == 0 && n7 == 0 && n9 == 0 &&  !(n10 == 1 || n6 == 1) -> 
  ((1 - d + n6)*j[p4a, 0, 0, n3, 0, 0, -1 + n6, 0, n8, 0, n10, n11, 0, 1, 1])/
    (-1 + n6) + ((1 - 2*d + n10 + n3 + 2*n6)*j[p4a, 0, 0, n3, 0, 0, n6, 0, 
      n8, 0, -1 + n10, n11, 0, 1, 1])/(-1 + n10) + 
   j[p4a, 0, 0, n3, 0, 0, n6, 0, n8, 0, n10, n11, 0, 1, 0] - 
   (n3*(-1 + d - n6)*j[p4a, 0, 0, 1 + n3, 0, 0, -1 + n6, 0, n8, 0, -1 + n10, 
      n11, 0, 1, 1])/((-1 + n10)*(-1 + n6)) - 
   (n3*j[p4a, 0, 0, 1 + n3, 0, 0, n6, 0, -1 + n8, 0, -1 + n10, n11, 0, 1, 1])/
    (-1 + n10) + (n3*j[p4a, 0, 0, 1 + n3, 0, 0, n6, 0, n8, 0, -1 + n10, n11, 
      0, 1, 0])/(-1 + n10), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n4 == 0 && n7 == 0 && n9 == 0 &&  !(n10 == 1 || n6 == 1) -> 
  ((1 - d + n5 + n6)*j[p4a, 0, 0, n3, 0, n5, -1 + n6, 0, n8, 0, n10, 1, 0, 1, 
      1])/(-1 + n6) + ((1 - 2*d + n10 + n3 + n5 + 2*n6)*
     j[p4a, 0, 0, n3, 0, n5, n6, 0, n8, 0, -1 + n10, 1, 0, 1, 1])/
    (-1 + n10) + j[p4a, 0, 0, n3, 0, n5, n6, 0, n8, 0, n10, 1, 0, 1, 0] - 
   (n5*j[p4a, 0, 0, n3, 0, 1 + n5, -1 + n6, 0, n8, 0, n10, 1, 0, 0, 1])/
    (-1 + n6) + (n5*j[p4a, 0, 0, n3, 0, 1 + n5, -1 + n6, 0, n8, 0, n10, 1, 0, 
      1, 0])/(-1 + n6) - (n5*j[p4a, 0, 0, n3, 0, 1 + n5, n6, 0, n8, 0, 
      -1 + n10, 1, 0, 0, 1])/(-1 + n10) + 
   (n5*j[p4a, 0, 0, n3, 0, 1 + n5, n6, 0, n8, 0, -1 + n10, 1, 0, 1, 0])/
    (-1 + n10) - (n3*(-1 + d - n5 - n6)*j[p4a, 0, 0, 1 + n3, 0, n5, -1 + n6, 
      0, n8, 0, -1 + n10, 1, 0, 1, 1])/((-1 + n10)*(-1 + n6)) - 
   (n3*j[p4a, 0, 0, 1 + n3, 0, n5, n6, 0, -1 + n8, 0, -1 + n10, 1, 0, 1, 1])/
    (-1 + n10) + (n3*j[p4a, 0, 0, 1 + n3, 0, n5, n6, 0, n8, 0, -1 + n10, 1, 
      0, 1, 0])/(-1 + n10) - (n3*n5*j[p4a, 0, 0, 1 + n3, 0, 1 + n5, -1 + n6, 
      0, n8, 0, -1 + n10, 1, 0, 0, 1])/((-1 + n10)*(-1 + n6)) + 
   (n3*n5*j[p4a, 0, 0, 1 + n3, 0, 1 + n5, -1 + n6, 0, n8, 0, -1 + n10, 1, 0, 
      1, 0])/((-1 + n10)*(-1 + n6)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n4 == 0 && 
    n5 == 0 && n7 == 0 && n9 == 0 && n14 != 1 -> 
  ((-2 + d - 2*n6)*n6*j[p4a, 0, n2, n3, 0, 0, 1 + n6, 0, n8, 0, 1, 1, 0, 1, 
     -1 + n14])/((d - 2*n14)*(-1 + n14)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n4 == 0 && n7 == -1 && n9 == 0 &&  !(n5 == 0 || n6 == 1) -> 
  ((-4 + d - 2*n5)*j[p4a, 0, -1 + n2, n3, 0, 1 + n5, n6, -1, n8, 0, 1, 1, 0, 
      1, 1])/(2*(-2 + d - n5 - n6)) + 
   ((-4 + d)*j[p4a, 0, n2, n3, 0, 1 + n5, -1 + n6, -1, n8, 0, 1, 1, 0, 0, 2])/
    (2*(-2 + d - n5 - n6)*(-1 + n6)) + 
   ((-4 + d - 2*n5)*j[p4a, 0, n2, n3, 0, 1 + n5, -1 + n6, -1, n8, 0, 1, 1, 0, 
      1, 1])/(2*(-1 + n6)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n4 == 0 && n7 == 0 && n9 == 0 &&  !(n5 == 0 || n6 == 1) -> 
  ((-4 + d - 2*n5)*j[p4a, 0, -1 + n2, n3, 0, 1 + n5, n6, 0, n8, 0, 1, 1, 0, 
      1, 1])/(2*(-2 + d - n5 - n6)) + 
   ((-4 + d)*j[p4a, 0, n2, n3, 0, 1 + n5, -1 + n6, 0, n8, 0, 1, 1, 0, 0, 2])/
    (2*(-2 + d - n5 - n6)*(-1 + n6)) + 
   ((-4 + d - 2*n5)*j[p4a, 0, n2, n3, 0, 1 + n5, -1 + n6, 0, n8, 0, 1, 1, 0, 
      1, 1])/(2*(-1 + n6)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n2 == 0 && n7 == -1 && n9 == 0 &&  !(n3 == 1 || n4 == 0 || n6 == 1) -> 
  ((1 + n4)*j[p4a, -1, 0, -1 + n3, 2 + n4, n5, -1 + n6, -1, n8, 0, 2, 1, 0, 
      1, 1])/(2*(-1 + n3)*(-1 + n6)) + 
   j[p4a, 0, -1, -1 + n3, 1 + n4, n5, n6, 0, n8, 0, 1, 1, 0, 1, 1]/
    (2*(-1 + n3)) + ((-1 - n4)*j[p4a, 0, -1, -1 + n3, 2 + n4, n5, -1 + n6, 
      -1, n8, 0, 2, 1, 0, 1, 1])/(2*(-1 + n3)*(-1 + n6)) + 
   j[p4a, 0, 0, -1 + n3, n4, n5, n6, 0, n8, 0, 1, 1, 0, 1, 1]/(2*(-1 + n3)) - 
   j[p4a, 0, 0, -1 + n3, 1 + n4, -1 + n5, n6, 0, n8, 0, 1, 1, 0, 1, 1]/
    (2*(-1 + n3)) + ((3 - d)*j[p4a, 0, 0, -1 + n3, 1 + n4, n5, -1 + n6, -1, 
      n8, 0, 2, 1, 0, 1, 1])/(2*(-1 + n3)*(-1 + n6)) + 
   ((-2 + n3)*j[p4a, 0, 0, -1 + n3, 1 + n4, n5, -1 + n6, 0, n8, 0, 1, 1, 0, 
      1, 1])/(2*(-1 + n3)*(-1 + n6)) + 
   j[p4a, 0, 0, -1 + n3, 1 + n4, n5, -1 + n6, 0, n8, 0, 2, 0, 0, 1, 1]/
    (2*(-1 + n3)*(-1 + n6)) + ((-1 + d - n4 - 2*n6)*
     j[p4a, 0, 0, -1 + n3, 1 + n4, n5, n6, -1, n8, 0, 1, 1, 0, 1, 1])/
    (2*(-1 + n3)) - j[p4a, 0, 0, -1 + n3, 1 + n4, n5, n6, 0, -1 + n8, 0, 1, 
     1, 0, 1, 1]/(2*(-1 + n3)) + 
   ((1 + n4)*j[p4a, 0, 0, -1 + n3, 2 + n4, n5, -2 + n6, -1, n8, 0, 2, 1, 0, 
      1, 1])/(2*(-1 + n3)*(-1 + n6)) + 
   ((1 + n4)*j[p4a, 0, 0, -1 + n3, 2 + n4, n5, -1 + n6, -2, n8, 0, 2, 1, 0, 
      1, 1])/(2*(-1 + n3)*(-1 + n6)) + 
   ((-1 - n4)*j[p4a, 0, 0, -1 + n3, 2 + n4, n5, -1 + n6, -1, n8, -1, 2, 1, 0, 
      1, 1])/(2*(-1 + n3)*(-1 + n6)) + 
   ((1 + n3 + n4 + n3*n4 - n6 - n4*n6)*j[p4a, 0, 0, -1 + n3, 2 + n4, n5, 
      -1 + n6, -1, n8, 0, 1, 1, 0, 1, 1])/(2*(-1 + n3)*(-1 + n6)) + 
   ((-1 - n4)*j[p4a, 0, 0, -1 + n3, 2 + n4, n5, -1 + n6, -1, n8, 0, 2, 0, 0, 
      1, 1])/(2*(-1 + n3)*(-1 + n6)) + 
   ((1 + n4)*j[p4a, 0, 0, -1 + n3, 2 + n4, n5, n6, -1, -1 + n8, 0, 1, 1, 0, 
      1, 1])/(2*(-1 + n3)) + ((-4 + 3*d - 2*n3 - 3*n4 - 2*n5 - 2*n6)*
     j[p4a, 0, 0, n3, 1 + n4, n5, -1 + n6, -1, n8, 0, 1, 1, 0, 1, 1])/
    (2*(-1 + n6)) - j[p4a, 0, 0, n3, 1 + n4, n5, -1 + n6, 0, n8, 0, 1, 1, 0, 
     0, 1]/(2*(-1 + n6)) + j[p4a, 0, 0, n3, 1 + n4, n5, n6, -1, -1 + n8, 0, 
    1, 1, 0, 1, 1] + (n5*j[p4a, 0, 0, n3, 1 + n4, 1 + n5, -1 + n6, -1, n8, 0, 
      1, 1, 0, 0, 1])/(-1 + n6) - 
   (n5*j[p4a, 0, 0, n3, 1 + n4, 1 + n5, -1 + n6, -1, n8, 0, 1, 1, 0, 1, 0])/
    (-1 + n6) + ((-1 - n4)*j[p4a, 0, 0, n3, 2 + n4, n5, -1 + n6, -1, n8, 0, 
      1, 1, 0, 1, 0])/(2*(-1 + n6)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n11 == 1 && n12 == 0 && n13 == 1 && n2 == 0 && n4 == 0 && n5 == 0 && 
    n7 == 0 && n8 == 1 && n9 == 0 && n14 != 1 -> 
  ((-2 + d - 2*n6)*n6*j[p4a, n1, 0, n3, 0, 0, 1 + n6, 0, 1, 0, n10, 1, 0, 1, 
     -1 + n14])/((d - 2*n14)*(-1 + n14)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n4 == 0 && 
    n5 == 0 && n8 == 1 && n9 == 0 &&  !(n6 == 1 || n7 == 0) -> 
  (2*j[p4a, -1 + n1, n2, n3, 0, 0, n6, 1 + n7, 1, 0, 0, 2, 0, 1, 1])/
    (2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) + 
   (2*(-4 + d - n2 - 2*n7)*j[p4a, -1 + n1, n2, n3, 0, 0, n6, 1 + n7, 1, 0, 1, 
      1, 0, 1, 1])/(2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) + 
   (n3*j[p4a, -1 + n1, n2, 1 + n3, 0, 0, n6, 1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    (2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) + 
   (2*n2*j[p4a, -1 + n1, 1 + n2, -1 + n3, 0, 0, n6, 1 + n7, 1, 0, 1, 1, 0, 1, 
      1])/(-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) - 
   (n2*j[p4a, -1 + n1, 1 + n2, n3, 0, 0, n6, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   ((12 - 3*d + 2*n2 + 2*n3 + 6*n7)*j[p4a, n1, -1 + n2, n3, 0, 0, n6, 1 + n7, 
      1, 0, 1, 1, 0, 1, 1])/(2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) + 
   j[p4a, n1, -1 + n2, n3, 0, 0, n6, 1 + n7, 1, 0, 2, 0, 0, 1, 1]/
    (2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) + 
   j[p4a, n1, -1 + n2, n3, 0, 0, n6, 1 + n7, 2, 0, 1, 0, 0, 1, 1]/
    (2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) + 
   j[p4a, n1, -1 + n2, n3, 0, 0, n6, 1 + n7, 2, 0, 1, 1, 0, 0, 1]/
    (2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) - 
   (n6*j[p4a, n1, -1 + n2, n3, 0, 0, 1 + n6, 1 + n7, 1, 0, 0, 1, 0, 1, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   (n6*j[p4a, n1, -1 + n2, n3, 0, 0, 1 + n6, 1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   (n6*j[p4a, n1, -1 + n2, n3, 0, 0, 1 + n6, 1 + n7, 1, 0, 1, 1, 0, 1, 0])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   (n3*j[p4a, n1, -1 + n2, 1 + n3, 0, 0, n6, 1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    (2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) + 
   ((2 - d - 2*n1 + 2*n6 + 2*n7)*j[p4a, n1, n2, -1 + n3, 0, 0, n6, 1 + n7, 1, 
      0, 1, 1, 0, 1, 1])/(2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) + 
   j[p4a, n1, n2, -1 + n3, 0, 0, n6, 1 + n7, 1, 0, 2, 0, 0, 1, 1]/
    (2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) + 
   (2*(1 + n7)*j[p4a, n1, n2, -1 + n3, 0, 0, n6, 2 + n7, 1, 0, 0, 1, 0, 1, 
      1])/(2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) - 
   (2*(1 + n7)*j[p4a, n1, n2, -1 + n3, 0, 0, n6, 2 + n7, 1, 0, 1, 0, 0, 1, 
      1])/(2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) - 
   (n6*j[p4a, n1, n2, -1 + n3, 0, 0, 1 + n6, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   (2*(-1 + d - n6)*j[p4a, n1, n2, n3, -1, 0, n6, 1 + n7, 1, 0, 1, 1, 0, 1, 
      1])/(2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) + 
   (n6*j[p4a, n1, n2, n3, -1, 0, 1 + n6, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) - 
   (n6*j[p4a, n1, n2, n3, -1, 0, 1 + n6, 1 + n7, 1, 0, 0, 1, 0, 1, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   (n6*j[p4a, n1, n2, n3, -1, 0, 1 + n6, 1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   (n6*j[p4a, n1, n2, n3, -1, 0, 1 + n6, 1 + n7, 1, 0, 1, 1, 0, 1, 0])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) - 
   (2*(-1 + d - n6)*j[p4a, n1, n2, n3, 0, -1, n6, 1 + n7, 1, 0, 1, 1, 0, 1, 
      1])/(2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) - 
   (n6*j[p4a, n1, n2, n3, 0, -1, 1 + n6, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   (n6*j[p4a, n1, n2, n3, 0, -1, 1 + n6, 1 + n7, 1, 0, 0, 1, 0, 1, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) - 
   (n6*j[p4a, n1, n2, n3, 0, -1, 1 + n6, 1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) - 
   (n6*j[p4a, n1, n2, n3, 0, -1, 1 + n6, 1 + n7, 1, 0, 1, 1, 0, 1, 0])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   (2*(-1 + d - n6)*(-4 + d - n2 - 2*n7)*j[p4a, n1, n2, n3, 0, 0, -1 + n6, 
      1 + n7, 1, 0, 1, 1, 0, 1, 1])/((-1 + n6)*(-2 - d + 2*n1 + 2*n2 + 2*n6 - 
      2*n7)) - (2*j[p4a, n1, n2, n3, 0, 0, n6, n7, 0, 0, 1, 2, 0, 1, 1])/
    (2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) + 
   j[p4a, n1, n2, n3, 0, 0, n6, n7, 0, 0, 2, 1, 0, 1, 1]/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   j[p4a, n1, n2, n3, 0, 0, n6, n7, 1, 0, 2, 0, 0, 1, 1]/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   j[p4a, n1, n2, n3, 0, 0, n6, n7, 1, 0, 2, 1, 0, 0, 1]/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   j[p4a, n1, n2, n3, 0, 0, n6, n7, 2, 0, 1, 0, 0, 1, 1]/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   j[p4a, n1, n2, n3, 0, 0, n6, n7, 2, 0, 1, 1, 0, 0, 1]/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   ((-7 + 2*d + n1 - 3*n3 - 6*n7)*j[p4a, n1, n2, n3, 0, 0, n6, 1 + n7, 0, 0, 
      1, 1, 0, 1, 1])/(2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) + 
   j[p4a, n1, n2, n3, 0, 0, n6, 1 + n7, 1, -1, 1, 1, 0, 0, 2]/
    (2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) + 
   ((3 - n1 - n2 - n3)*j[p4a, n1, n2, n3, 0, 0, n6, 1 + n7, 1, 0, 0, 1, 0, 1, 
      1])/(-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   j[p4a, n1, n2, n3, 0, 0, n6, 1 + n7, 1, 0, 0, 2, -1, 1, 1]/
    (2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) + 
   j[p4a, n1, n2, n3, 0, 0, n6, 1 + n7, 1, 0, 0, 2, 0, 1, 1]/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   ((-2 + n1 + n3)*j[p4a, n1, n2, n3, 0, 0, n6, 1 + n7, 1, 0, 1, 0, 0, 1, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   ((-7 + 2*d - n3 - 4*n7)*j[p4a, n1, n2, n3, 0, 0, n6, 1 + n7, 1, 0, 1, 1, 
      0, 0, 1])/(2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) + 
   j[p4a, n1, n2, n3, 0, 0, n6, 1 + n7, 1, 0, 1, 1, 0, 0, 2]/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   (2*(-4 + d - n2 - 2*n7)*j[p4a, n1, n2, n3, 0, 0, n6, 1 + n7, 1, 0, 1, 1, 
      0, 1, 0])/(2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) - 
   (2*(-4 + d - n2 - 2*n7)*j[p4a, n1, n2, n3, 0, 0, n6, 1 + n7, 1, 0, 1, 1, 
      0, 1, 1])/(2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) + 
   j[p4a, n1, n2, n3, 0, 0, n6, 1 + n7, 1, 0, 2, 0, -1, 1, 1]/
    (2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) + 
   j[p4a, n1, n2, n3, 0, 0, n6, 1 + n7, 1, 0, 2, 0, 0, 1, 1]/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   (n6*j[p4a, n1, n2, n3, 0, 0, 1 + n6, n7, 0, 0, 1, 1, 0, 1, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   (n6*j[p4a, n1, n2, n3, 0, 0, 1 + n6, 1 + n7, 0, -1, 1, 1, 0, 1, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) - 
   (n6*j[p4a, n1, n2, n3, 0, 0, 1 + n6, 1 + n7, 0, 0, 1, 1, -1, 1, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) - 
   (3*n3*j[p4a, n1, n2, 1 + n3, 0, 0, n6, n7, 0, 0, 1, 1, 0, 1, 1])/
    (2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) + 
   (n3*j[p4a, n1, n2, 1 + n3, 0, 0, n6, n7, 1, 0, 0, 1, 0, 1, 1])/
    (2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) - 
   (n3*j[p4a, n1, n2, 1 + n3, 0, 0, n6, n7, 1, 0, 1, 0, 0, 1, 1])/
    (2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) - 
   (3*n3*j[p4a, n1, n2, 1 + n3, 0, 0, n6, n7, 1, 0, 1, 1, 0, 0, 1])/
    (2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) + 
   (2*n3*j[p4a, n1, n2, 1 + n3, 0, 0, n6, 1 + n7, 1, 0, 1, 1, -1, 0, 1])/
    (2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) - 
   (n3*j[p4a, n1, n2, 1 + n3, 0, 0, n6, 1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    (2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) - 
   (n2*j[p4a, n1, 1 + n2, -1 + n3, 0, 0, n6, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) - 
   (2*n2*j[p4a, n1, 1 + n2, -1 + n3, 0, 0, n6, 1 + n7, 1, 0, 0, 1, 0, 1, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   (2*n2*j[p4a, n1, 1 + n2, n3, 0, 0, n6, n7, 0, 0, 1, 1, 0, 1, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   (n2*j[p4a, n1, 1 + n2, n3, 0, 0, n6, n7, 1, 0, 0, 1, 0, 1, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   (2*n2*j[p4a, n1, 1 + n2, n3, 0, 0, n6, n7, 1, 0, 1, 1, 0, 0, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) - 
   (2*n2*j[p4a, n1, 1 + n2, n3, 0, 0, n6, n7, 1, 0, 1, 1, 0, 1, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) - 
   (n2*j[p4a, n1, 1 + n2, n3, 0, 0, n6, 1 + n7, 0, 0, 1, 1, -1, 1, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   (2*n2*j[p4a, n1, 1 + n2, n3, 0, 0, n6, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) - 
   (n1*j[p4a, 1 + n1, -1 + n2, n3, 0, 0, n6, 1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   (n1*j[p4a, 1 + n1, n2, n3, 0, 0, n6, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   (n1*j[p4a, 1 + n1, n2, n3, 0, 0, n6, 1 + n7, 1, 0, 0, 1, 0, 1, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) - 
   (n1*j[p4a, 1 + n1, n2, n3, 0, 0, n6, 1 + n7, 1, 0, 1, 0, 0, 1, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && n5 == 0 && 
    n6 == 1 && n7 == 0 && n9 == 0 &&  !(n11 == 1 || n8 == 1) -> 
  -((n4*j[p4a, -1, 0, n3, 1 + n4, 0, 1, 0, -1 + n8, 0, n10, n11, 0, 1, 1])/
     (-1 + n8)) + (n4*j[p4a, 0, -1, n3, 1 + n4, 0, 1, 0, -1 + n8, 0, n10, 
      n11, 0, 1, 1])/(-1 + n8) + 
   (n4*j[p4a, 0, 0, -1 + n3, 1 + n4, 0, 1, 0, -1 + n8, 0, n10, n11, 0, 1, 1])/
    (-1 + n8) + ((1 - 2*d + 2*n11 + n3 + n4 + n8)*j[p4a, 0, 0, n3, n4, 0, 1, 
      0, -1 + n8, 0, n10, n11, 0, 1, 1])/(-1 + n8) + 
   ((1 - d + n11)*j[p4a, 0, 0, n3, n4, 0, 1, 0, n8, 0, n10, -1 + n11, 0, 1, 
      1])/(-1 + n11) + j[p4a, 0, 0, n3, n4, 0, 1, 0, n8, 0, n10, n11, 0, 0, 
    1] - (n4*j[p4a, 0, 0, n3, 1 + n4, 0, 0, 0, -1 + n8, 0, n10, n11, 0, 1, 
      1])/(-1 + n8) - (n4*j[p4a, 0, 0, n3, 1 + n4, 0, 1, -1, -1 + n8, 0, n10, 
      n11, 0, 1, 1])/(-1 + n8) + 
   (n4*j[p4a, 0, 0, n3, 1 + n4, 0, 1, 0, -1 + n8, -1, n10, n11, 0, 1, 1])/
    (-1 + n8) - (n4*j[p4a, 0, 0, n3, 1 + n4, 0, 1, 0, -1 + n8, 0, -1 + n10, 
      n11, 0, 1, 1])/(-1 + n8) + 
   (n4*j[p4a, 0, 0, n3, 1 + n4, 0, 1, 0, -1 + n8, 0, n10, -1 + n11, 0, 1, 1])/
    (-1 + n8) - (n4*j[p4a, 0, 0, n3, 1 + n4, 0, 1, 0, -1 + n8, 0, n10, n11, 
      0, 1, 0])/(-1 + n8) - (n3*j[p4a, 0, 0, 1 + n3, n4, 0, 1, 0, -1 + n8, 0, 
      -1 + n10, n11, 0, 1, 1])/(-1 + n8) + 
   ((n3 - d*n3 + n11*n3)*j[p4a, 0, 0, 1 + n3, n4, 0, 1, 0, -1 + n8, 0, n10, 
      -1 + n11, 0, 1, 1])/((-1 + n11)*(-1 + n8)) + 
   (n3*j[p4a, 0, 0, 1 + n3, n4, 0, 1, 0, -1 + n8, 0, n10, n11, 0, 0, 1])/
    (-1 + n8), j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n6 == 1 && n7 == 0 && n9 == 0 &&  !(n4 == 0 || n8 == 1) -> 
  j[p4a, -1, 0, -1 + n3, 1 + n4, n5, 1, 0, -1 + n8, 0, n10, 1, 0, 2, 1]/
    (2*(-1 + n8)) + (n5*j[p4a, -1, 0, n3, n4, 1 + n5, 1, 0, -1 + n8, 0, n10, 
      1, 0, 1, 1])/(2*(-1 + n8)) - j[p4a, -1, 0, n3, 1 + n4, n5, 0, 0, n8, 0, 
     n10, 1, 0, 1, 1]/2 + ((1 - d + n3 + n4 + n8)*j[p4a, -1, 0, n3, 1 + n4, 
      n5, 1, 0, -1 + n8, 0, n10, 1, 0, 1, 1])/(2*(-1 + n8)) - 
   j[p4a, -1, 0, n3, 1 + n4, n5, 1, 0, -1 + n8, 0, n10, 1, 0, 2, 0]/
    (2*(-1 + n8)) - (n3*j[p4a, -1, 0, 1 + n3, 1 + n4, n5, 1, 0, -1 + n8, 0, 
      n10, 1, 0, 1, 0])/(2*(-1 + n8)) - 
   (n10*j[p4a, 0, -1, n3, 1 + n4, n5, 0, 0, -1 + n8, 0, 1 + n10, 1, 0, 1, 1])/
    (2*(-1 + n8)) + ((-4 + 3*d - n10 - n3 - n4 - n5 - 2*n8)*
     j[p4a, 0, -1, n3, 1 + n4, n5, 1, 0, -1 + n8, 0, n10, 1, 0, 1, 1])/
    (2*(-1 + n8)) - (n5*j[p4a, 0, -1, n3, 1 + n4, 1 + n5, 1, 0, -1 + n8, 0, 
      n10, 1, 0, 0, 1])/(2*(-1 + n8)) + 
   (n5*j[p4a, 0, -1, n3, 1 + n4, 1 + n5, 1, 0, -1 + n8, 0, n10, 1, 0, 1, 0])/
    (2*(-1 + n8)) + (n3*j[p4a, 0, -1, 1 + n3, 1 + n4, n5, 1, 0, -1 + n8, 0, 
      n10, 1, 0, 1, 0])/(2*(-1 + n8)) - 
   (n10*j[p4a, 0, 0, -1 + n3, 1 + n4, n5, 1, 0, -1 + n8, -1, 1 + n10, 1, 0, 
      1, 1])/(2*(-1 + n8)) + (n4*j[p4a, 0, 0, -1 + n3, 1 + n4, n5, 1, 0, 
      -1 + n8, 0, n10, 1, 0, 1, 1])/(2*(-1 + n8)) - 
   j[p4a, 0, 0, -1 + n3, 1 + n4, n5, 1, 0, -1 + n8, 0, n10, 1, 0, 2, 1]/
    (2*(-1 + n8)) + ((-1 + n3)*j[p4a, 0, 0, n3, n4, n5, 1, 0, -1 + n8, 0, 
      n10, 1, 0, 1, 1])/(2*(-1 + n8)) + 
   j[p4a, 0, 0, n3, n4, n5, 1, 0, n8, 0, n10, 0, 0, 1, 1]/2 + 
   j[p4a, 0, 0, n3, n4, n5, 1, 0, n8, 0, n10, 1, 0, 0, 1]/2 - 
   (n5*j[p4a, 0, 0, n3, n4, 1 + n5, 1, 0, -1 + n8, 0, n10, 1, 0, 1, 1])/
    (2*(-1 + n8)) + (n10*j[p4a, 0, 0, n3, 1 + n4, n5, 0, -1, -1 + n8, 0, 
      1 + n10, 1, 0, 1, 1])/(2*(-1 + n8)) + 
   j[p4a, 0, 0, n3, 1 + n4, n5, 0, 0, -1 + n8, 0, n10, 1, 0, 1, 1]/
    (-1 + n8) - j[p4a, 0, 0, n3, 1 + n4, n5, 0, 0, -1 + n8, 0, n10, 2, -1, 1, 
     1]/(2*(-1 + n8)) + j[p4a, 0, 0, n3, 1 + n4, n5, 0, 0, -1 + n8, 0, n10, 
     2, 0, 1, 1]/(2*(-1 + n8)) - 
   (n10*j[p4a, 0, 0, n3, 1 + n4, n5, 0, 0, -1 + n8, 0, 1 + n10, 1, -1, 1, 1])/
    (2*(-1 + n8)) + (n10*j[p4a, 0, 0, n3, 1 + n4, n5, 0, 0, -1 + n8, 0, 
      1 + n10, 1, 0, 1, 1])/(2*(-1 + n8)) - 
   j[p4a, 0, 0, n3, 1 + n4, n5, 0, 0, n8, 0, n10, 1, -1, 1, 1]/2 + 
   j[p4a, 0, 0, n3, 1 + n4, n5, 0, 0, n8, 0, n10, 1, 0, 1, 1] + 
   ((4 - 3*d + n10 + n3 + n4 + n5 + 2*n8)*j[p4a, 0, 0, n3, 1 + n4, n5, 1, -1, 
      -1 + n8, 0, n10, 1, 0, 1, 1])/(2*(-1 + n8)) + 
   (n10*j[p4a, 0, 0, n3, 1 + n4, n5, 1, 0, -2 + n8, -1, 1 + n10, 1, 0, 1, 1])/
    (2*(-1 + n8)) + ((1 - n4)*j[p4a, 0, 0, n3, 1 + n4, n5, 1, 0, -2 + n8, 0, 
      n10, 1, 0, 1, 1])/(2*(-1 + n8)) - 
   j[p4a, 0, 0, n3, 1 + n4, n5, 1, 0, -2 + n8, 0, n10, 2, -1, 1, 1]/
    (2*(-1 + n8)) + j[p4a, 0, 0, n3, 1 + n4, n5, 1, 0, -2 + n8, 0, n10, 2, 0, 
     1, 1]/(2*(-1 + n8)) + ((-6 + 4*d - n10 - 2*n3 - n4 - n5 - 2*n8)*
     j[p4a, 0, 0, n3, 1 + n4, n5, 1, 0, -1 + n8, -1, n10, 1, 0, 1, 1])/
    (2*(-1 + n8)) + (n10*j[p4a, 0, 0, n3, 1 + n4, n5, 1, 0, -1 + n8, -1, 
      1 + n10, 1, 0, 0, 1])/(2*(-1 + n8)) - 
   (n4*j[p4a, 0, 0, n3, 1 + n4, n5, 1, 0, -1 + n8, 0, -1 + n10, 1, 0, 1, 1])/
    (2*(-1 + n8)) - j[p4a, 0, 0, n3, 1 + n4, n5, 1, 0, -1 + n8, 0, -1 + n10, 
     2, -1, 1, 1]/(2*(-1 + n8)) + j[p4a, 0, 0, n3, 1 + n4, n5, 1, 0, -1 + n8, 
     0, -1 + n10, 2, 0, 1, 1]/(2*(-1 + n8)) + 
   (n4*j[p4a, 0, 0, n3, 1 + n4, n5, 1, 0, -1 + n8, 0, n10, 0, 0, 1, 1])/
    (2*(-1 + n8)) + ((-1 + d - n10 - n8)*j[p4a, 0, 0, n3, 1 + n4, n5, 1, 0, 
      -1 + n8, 0, n10, 1, -1, 1, 1])/(2*(-1 + n8)) + 
   (n5*j[p4a, 0, 0, n3, 1 + n4, n5, 1, 0, -1 + n8, 0, n10, 1, 0, 0, 1])/
    (2*(-1 + n8)) + ((1 - n4 - n5)*j[p4a, 0, 0, n3, 1 + n4, n5, 1, 0, 
      -1 + n8, 0, n10, 1, 0, 1, 0])/(2*(-1 + n8)) + 
   ((-1 + n10 - n3 - 2*n4 - n5)*j[p4a, 0, 0, n3, 1 + n4, n5, 1, 0, -1 + n8, 
      0, n10, 1, 0, 1, 1])/(2*(-1 + n8)) + 
   j[p4a, 0, 0, n3, 1 + n4, n5, 1, 0, -1 + n8, 0, n10, 1, 0, 2, 0]/
    (2*(-1 + n8)) - (n5*j[p4a, 0, 0, n3, 1 + n4, 1 + n5, 1, -1, -1 + n8, -1, 
      n10, 1, 0, 1, 1])/(2*(-1 + n8)) + 
   (n5*j[p4a, 0, 0, n3, 1 + n4, 1 + n5, 1, -1, -1 + n8, 0, n10, 1, 0, 1, 1])/
    (2*(-1 + n8)) - (n3*j[p4a, 0, 0, 1 + n3, n4, n5, 1, 0, -2 + n8, 0, n10, 
      1, 0, 1, 1])/(2*(-1 + n8)) - 
   (n3*j[p4a, 0, 0, 1 + n3, n4, n5, 1, 0, -1 + n8, 0, -1 + n10, 1, 0, 1, 1])/
    (2*(-1 + n8)) + (n3*j[p4a, 0, 0, 1 + n3, n4, n5, 1, 0, -1 + n8, 0, n10, 
      0, 0, 1, 1])/(2*(-1 + n8)) - 
   (n3*j[p4a, 0, 0, 1 + n3, 1 + n4, n5, 1, -1, -1 + n8, 0, n10, 1, 0, 1, 0])/
    (2*(-1 + n8)) + (n3*j[p4a, 0, 0, 1 + n3, 1 + n4, n5, 1, 0, -1 + n8, 0, 
      n10, 1, 0, 1, 0])/(2*(-1 + n8)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n14 == 1 && n2 == 0 && 
    n5 == 0 && n6 == 1 && n7 == 0 && n13 != 1 -> 
  (n4*j[p4a, -1, 0, n3, 1 + n4, 0, 1, 0, n8, n9, 1, 2, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n4*j[p4a, 0, -1, n3, 1 + n4, 0, 1, 0, n8, n9, 1, 2, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n4*(1 + n4)*j[p4a, 0, 0, -1 + n3, 2 + n4, 0, 1, 0, n8, n9, 1, 1, 0, 
      -1 + n13, 1])/((d - 2*n13)*(-1 + n13)) + 
   ((-4 + d - n4)*j[p4a, 0, 0, n3, n4, 0, 1, 0, n8, n9, 1, 2, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) - 
   (n4*n8*j[p4a, 0, 0, n3, n4, 0, 1, 0, 1 + n8, n9, 1, 1, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n4*j[p4a, 0, 0, n3, 1 + n4, -1, 1, 0, n8, n9, 1, 2, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n4*j[p4a, 0, 0, n3, 1 + n4, 0, 0, 0, n8, n9, 1, 2, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n4*n8*j[p4a, 0, 0, n3, 1 + n4, 0, 0, 0, 1 + n8, n9, 1, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) - 
   (n4*j[p4a, 0, 0, n3, 1 + n4, 0, 1, 0, n8, -1 + n9, 1, 2, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n4*j[p4a, 0, 0, n3, 1 + n4, 0, 1, 0, n8, n9, 0, 2, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + ((-5*n4 + 2*n13*n4 - 2*n4^2)*
     j[p4a, 0, 0, n3, 1 + n4, 0, 1, 0, n8, n9, 1, 1, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n4*n8*j[p4a, 0, 0, n3, 1 + n4, 0, 1, 0, 1 + n8, n9, 1, 1, -1, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (n4*n8*j[p4a, 0, 0, n3, 1 + n4, 0, 1, 0, 1 + n8, n9, 1, 1, 0, -2 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (n4*(1 + n4)*j[p4a, 0, 0, n3, 2 + n4, -1, 1, 0, n8, n9, 1, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) - 
   (n4*(1 + n4)*j[p4a, 0, 0, n3, 2 + n4, 0, 1, -1, n8, n9, 1, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) - 
   (n4*(1 + n4)*j[p4a, 0, 0, n3, 2 + n4, 0, 1, 0, n8, n9, 1, 1, 0, -1 + n13, 
      0])/((d - 2*n13)*(-1 + n13)) - 
   (n3*n4*j[p4a, 0, 0, 1 + n3, n4, 0, 1, 0, n8, n9, 1, 1, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n3*n4*j[p4a, 0, 0, 1 + n3, 1 + n4, 0, 1, -1, n8, n9, 1, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (n3*n4*j[p4a, 0, 0, 1 + n3, 1 + n4, 0, 1, 0, n8, n9, 1, 1, 0, -2 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (n3*n4*j[p4a, 0, 0, 1 + n3, 1 + n4, 0, 1, 0, n8, n9, 1, 1, 0, -1 + n13, 
      0])/((d - 2*n13)*(-1 + n13)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n4 == 0 && n6 == 1 && n7 == -1 &&  !(n8 == 1 || n9 == 0) -> 
  j[p4a, -1, n2, n3, 0, n5, 1, -1, n8, 1 + n9, 0, 2, 0, 1, 1]/
    (3 - d + n5 + n9) + ((7 - 10*d + 6*n2 + 6*n3 + 6*n5 + 5*n8)*
     j[p4a, -1, n2, n3, 0, n5, 1, -1, n8, 1 + n9, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n5 - n9)) + j[p4a, -1, n2, n3, 0, n5, 1, -1, n8, 1 + n9, 2, 
     1, 0, 0, 1]/(3 - d + n5 + n9) + 
   ((-1 - n9)*j[p4a, -1, n2, n3, 0, n5, 1, -1, n8, 2 + n9, 1, 1, 0, 1, 0])/
    (3 - d + n5 + n9) - (n3*j[p4a, -1, n2, 1 + n3, 0, n5, 1, -1, n8, 1 + n9, 
      1, 1, 0, 0, 1])/(2*(-3 + d - n5 - n9)) - 
   (n2*j[p4a, -1, 1 + n2, n3, 0, n5, 1, -1, -1 + n8, 1 + n9, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n5 - n9)) + ((-6 + 5*d - 2*n2 - 4*n3 - 2*n5)*
     j[p4a, 0, -1 + n2, n3, 0, n5, 1, -1, n8, 1 + n9, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n5 - n9)) + j[p4a, 0, -1 + n2, n3, 0, n5, 1, -1, n8, 1 + n9, 
     2, 0, 0, 1, 1]/(2*(-3 + d - n5 - n9)) + 
   j[p4a, 0, -1 + n2, n3, 0, n5, 1, -1, n8, 1 + n9, 2, 1, 0, 0, 1]/
    (-3 + d - n5 - n9) + ((1 + n9)*j[p4a, 0, -1 + n2, n3, 0, n5, 1, -1, n8, 
      2 + n9, 1, 1, 0, 1, 0])/(2*(3 - d + n5 + n9)) - 
   (n8*j[p4a, 0, -1 + n2, n3, 0, n5, 1, -1, 1 + n8, 1 + n9, 1, 0, 0, 1, 1])/
    (2*(-3 + d - n5 - n9)) - (n8*j[p4a, 0, -1 + n2, n3, 0, n5, 1, -1, 1 + n8, 
      1 + n9, 1, 1, 0, 0, 1])/(2*(-3 + d - n5 - n9)) + 
   j[p4a, 0, -1 + n2, n3, 0, n5, 1, 0, n8, 1 + n9, 1, 1, 0, 0, 1]/
    (3 - d + n5 + n9) + j[p4a, 0, -1 + n2, n3, 0, n5, 2, -1, -1 + n8, 1 + n9, 
     1, 1, 0, 1, 1]/(2*(-3 + d - n5 - n9)) - 
   j[p4a, 0, -1 + n2, n3, 0, n5, 2, -1, n8, 1 + n9, 0, 1, 0, 1, 1]/
    (2*(-3 + d - n5 - n9)) + j[p4a, 0, -1 + n2, n3, 0, n5, 2, -1, n8, 1 + n9, 
     1, 1, 0, 0, 1]/(2*(-3 + d - n5 - n9)) + 
   j[p4a, 0, -1 + n2, n3, 0, n5, 2, -1, n8, 1 + n9, 1, 1, 0, 1, 0]/
    (2*(-3 + d - n5 - n9)) - (n3*j[p4a, 0, -1 + n2, 1 + n3, 0, n5, 1, -1, n8, 
      1 + n9, 1, 1, 0, 0, 1])/(2*(-3 + d - n5 - n9)) + 
   ((6 - 5*d + 4*n2 + 2*n3 + 2*n5 + 2*n8 + 2*n9)*j[p4a, 0, n2, -1 + n3, 0, 
      n5, 1, -1, n8, 1 + n9, 1, 1, 0, 1, 1])/(2*(-3 + d - n5 - n9)) + 
   j[p4a, 0, n2, -1 + n3, 0, n5, 1, -1, n8, 1 + n9, 2, 0, 0, 1, 1]/
    (2*(-3 + d - n5 - n9)) + j[p4a, 0, n2, -1 + n3, 0, n5, 2, -1, -1 + n8, 
     1 + n9, 1, 1, 0, 1, 1]/(2*(-3 + d - n5 - n9)) + 
   j[p4a, 0, n2, n3, -1, n5, 1, -1, n8, 1 + n9, 1, 1, 0, 1, 1] + 
   ((1 + n9)*j[p4a, 0, n2, n3, -1, n5, 1, -1, n8, 2 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n5 + n9)) + j[p4a, 0, n2, n3, -1, n5, 2, -1, n8, 1 + n9, 0, 
     1, 0, 1, 1]/(2*(-3 + d - n5 - n9)) - 
   j[p4a, 0, n2, n3, -1, n5, 2, -1, n8, 1 + n9, 1, 1, 0, 0, 1]/
    (2*(-3 + d - n5 - n9)) - j[p4a, 0, n2, n3, -1, n5, 2, -1, n8, 1 + n9, 1, 
     1, 0, 1, 0]/(2*(-3 + d - n5 - n9)) - 
   (n5*j[p4a, 0, n2, n3, -1, 1 + n5, 1, -1, n8, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(3 - d + n5 + n9)) + (n5*j[p4a, 0, n2, n3, -1, 1 + n5, 1, -1, n8, 
      1 + n9, 1, 1, 0, 1, 0])/(2*(3 - d + n5 + n9)) + 
   j[p4a, 0, n2, n3, 0, -1 + n5, 1, -1, n8, 1 + n9, 1, 1, 0, 1, 1] + 
   ((1 + n9)*j[p4a, 0, n2, n3, 0, -1 + n5, 1, -1, n8, 2 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n5 + n9)) + j[p4a, 0, n2, n3, 0, -1 + n5, 2, -1, n8, 1 + n9, 
     0, 1, 0, 1, 1]/(2*(-3 + d - n5 - n9)) - 
   j[p4a, 0, n2, n3, 0, -1 + n5, 2, -1, n8, 1 + n9, 1, 1, 0, 0, 1]/
    (2*(-3 + d - n5 - n9)) - j[p4a, 0, n2, n3, 0, -1 + n5, 2, -1, n8, 1 + n9, 
     1, 1, 0, 1, 0]/(2*(-3 + d - n5 - n9)) + 
   ((2 - d - 2*n2 + 2*n3)*j[p4a, 0, n2, n3, 0, n5, 1, -2, n8, 1 + n9, 1, 1, 
      0, 1, 1])/(2*(-3 + d - n5 - n9)) - 
   j[p4a, 0, n2, n3, 0, n5, 1, -2, n8, 1 + n9, 2, 0, 0, 1, 1]/
    (2*(-3 + d - n5 - n9)) - j[p4a, 0, n2, n3, 0, n5, 1, -2, n8, 1 + n9, 2, 
     1, 0, 0, 1]/(2*(-3 + d - n5 - n9)) + 
   ((-1 - n9)*j[p4a, 0, n2, n3, 0, n5, 1, -2, n8, 2 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n5 + n9)) + (n8*j[p4a, 0, n2, n3, 0, n5, 1, -2, 1 + n8, 
      1 + n9, 1, 0, 0, 1, 1])/(2*(-3 + d - n5 - n9)) + 
   (n8*j[p4a, 0, n2, n3, 0, n5, 1, -2, 1 + n8, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n5 - n9)) + j[p4a, 0, n2, n3, 0, n5, 1, -1, -1 + n8, 1 + n9, 
     0, 2, 0, 1, 1]/(-3 + d - n5 - n9) + 
   ((2 - 10*d + 4*d^2 + 3*n2 - 2*d*n2 + 9*n3 - 8*d*n3 + 2*n2*n3 + 4*n3^2 + 
      n5 - 4*d*n5 + 2*n2*n5 + 4*n3*n5 + 7*n8 - 2*d*n8 + n2*n8 + 3*n3*n8 + 
      3*n5*n8 - n8^2 + n9 - n8*n9)*j[p4a, 0, n2, n3, 0, n5, 1, -1, -1 + n8, 
      1 + n9, 1, 1, 0, 1, 1])/(2*(-1 + n8)*(-3 + d - n5 - n9)) - 
   j[p4a, 0, n2, n3, 0, n5, 1, -1, -1 + n8, 1 + n9, 2, 0, 0, 1, 1]/
    (2*(-3 + d - n5 - n9)) + ((-1 - n9)*j[p4a, 0, n2, n3, 0, n5, 1, -1, 
      -1 + n8, 2 + n9, 1, 1, 0, 1, 1])/(2*(3 - d + n5 + n9)) - 
   j[p4a, 0, n2, n3, 0, n5, 1, -1, n8, n9, 1, 1, 0, 0, 2]/
    (2*(-3 + d - n5 - n9)) + ((n2 - n3 + n9)*j[p4a, 0, n2, n3, 0, n5, 1, -1, 
      n8, 1 + n9, 0, 1, 0, 1, 1])/(2*(3 - d + n5 + n9)) - 
   j[p4a, 0, n2, n3, 0, n5, 1, -1, n8, 1 + n9, 0, 2, -1, 1, 1]/
    (2*(-3 + d - n5 - n9)) + j[p4a, 0, n2, n3, 0, n5, 1, -1, n8, 1 + n9, 0, 
     2, 0, 1, 1]/(2*(-3 + d - n5 - n9)) + 
   ((-1 + n3 - n9)*j[p4a, 0, n2, n3, 0, n5, 1, -1, n8, 1 + n9, 1, 0, 0, 1, 
      1])/(2*(3 - d + n5 + n9)) + ((2 - 4*d + 4*n2 + n3 + n5 + 5*n8)*
     j[p4a, 0, n2, n3, 0, n5, 1, -1, n8, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n5 - n9)) + j[p4a, 0, n2, n3, 0, n5, 1, -1, n8, 1 + n9, 1, 
     1, 0, 0, 2]/(2*(-3 + d - n5 - n9)) + 
   ((-2 + n5)*j[p4a, 0, n2, n3, 0, n5, 1, -1, n8, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n5 + n9)) + ((-3 + 3*d - 2*n2 - n3 - 2*n5 - 2*n8 - n9)*
     j[p4a, 0, n2, n3, 0, n5, 1, -1, n8, 1 + n9, 1, 1, 0, 1, 1])/
    (-3 + d - n5 - n9) + j[p4a, 0, n2, n3, 0, n5, 1, -1, n8, 1 + n9, 2, 0, 
     -1, 1, 1]/(2*(-3 + d - n5 - n9)) - 
   j[p4a, 0, n2, n3, 0, n5, 1, -1, n8, 1 + n9, 2, 0, 0, 1, 1]/
    (2*(-3 + d - n5 - n9)) + ((-1 - n9)*j[p4a, 0, n2, n3, 0, n5, 1, -1, n8, 
      2 + n9, 0, 1, 0, 1, 1])/(2*(3 - d + n5 + n9)) + 
   ((1 + n9)*j[p4a, 0, n2, n3, 0, n5, 1, -1, n8, 2 + n9, 1, 0, 0, 1, 1])/
    (2*(3 - d + n5 + n9)) + j[p4a, 0, n2, n3, 0, n5, 1, 0, -1 + n8, 1 + n9, 
     1, 1, 0, 0, 1]/(-3 + d - n5 - n9) - 
   j[p4a, 0, n2, n3, 0, n5, 2, -2, -1 + n8, 1 + n9, 1, 1, 0, 1, 1]/
    (2*(-3 + d - n5 - n9)) - j[p4a, 0, n2, n3, 0, n5, 2, -1, -2 + n8, 1 + n9, 
     1, 1, 0, 1, 1]/(2*(-3 + d - n5 - n9)) - 
   j[p4a, 0, n2, n3, 0, n5, 2, -1, -1 + n8, n9, 1, 1, 0, 1, 1]/
    (2*(-3 + d - n5 - n9)) + j[p4a, 0, n2, n3, 0, n5, 2, -1, -1 + n8, 1 + n9, 
     1, 1, -1, 1, 1]/(2*(-3 + d - n5 - n9)) + 
   (n5*j[p4a, 0, n2, n3, 0, 1 + n5, 1, -2, n8, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(3 - d + n5 + n9)) - (n5*j[p4a, 0, n2, n3, 0, 1 + n5, 1, -2, n8, 
      1 + n9, 1, 1, 0, 1, 0])/(2*(3 - d + n5 + n9)) - 
   (n5*(1 - 4*d + 2*n2 + 4*n3 + 3*n8)*j[p4a, 0, n2, n3, 0, 1 + n5, 1, -1, 
      -1 + n8, 1 + n9, 1, 1, 0, 0, 1])/(2*(-1 + n8)*(3 - d + n5 + n9)) + 
   (n5*(1 - 4*d + 2*n2 + 4*n3 + 3*n8)*j[p4a, 0, n2, n3, 0, 1 + n5, 1, -1, 
      -1 + n8, 1 + n9, 1, 1, 0, 1, 0])/(2*(-1 + n8)*(3 - d + n5 + n9)) - 
   (n3*(-1 - 4*d + 2*n2 + 4*n3 + 5*n8)*j[p4a, 0, n2, 1 + n3, 0, n5, 1, -2, 
      -1 + n8, 1 + n9, 1, 1, 0, 1, 1])/(2*(-1 + n8)*(-3 + d - n5 - n9)) - 
   (n3*j[p4a, 0, n2, 1 + n3, 0, n5, 1, -2, n8, 1 + n9, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n5 - n9)) + (n3*j[p4a, 0, n2, 1 + n3, 0, n5, 1, -2, n8, 
      1 + n9, 1, 0, 0, 1, 1])/(2*(-3 + d - n5 - n9)) + 
   (3*n3*j[p4a, 0, n2, 1 + n3, 0, n5, 1, -2, n8, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n5 - n9)) + (n3*(-2 - 2*d + n2 + 2*n3 + 4*n8)*
     j[p4a, 0, n2, 1 + n3, 0, n5, 1, -1, -1 + n8, 1 + n9, 1, 1, 0, 0, 1])/
    ((-1 + n8)*(-3 + d - n5 - n9)) - 
   (n3*j[p4a, 0, n2, 1 + n3, 0, n5, 1, -1, n8, 1 + n9, 1, 1, -1, 0, 1])/
    (-3 + d - n5 - n9) + (n3*j[p4a, 0, n2, 1 + n3, 0, n5, 1, -1, n8, 1 + n9, 
      1, 1, 0, 0, 1])/(2*(-3 + d - n5 - n9)) - 
   (n2*(1 - 2*d + n2 + 2*n3 + n8)*j[p4a, 0, 1 + n2, -1 + n3, 0, n5, 1, -1, 
      -1 + n8, 1 + n9, 1, 1, 0, 1, 1])/((-1 + n8)*(-3 + d - n5 - n9)) + 
   (n2*(1 - 2*d + n2 + 2*n3 + n8)*j[p4a, 0, 1 + n2, n3, 0, n5, 1, -2, 
      -1 + n8, 1 + n9, 1, 1, 0, 1, 1])/((-1 + n8)*(-3 + d - n5 - n9)) + 
   (n2*j[p4a, 0, 1 + n2, n3, 0, n5, 1, -2, n8, 1 + n9, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n5 - n9)) - (n2*j[p4a, 0, 1 + n2, n3, 0, n5, 1, -2, n8, 
      1 + n9, 1, 1, 0, 0, 1])/(-3 + d - n5 - n9) + 
   (n2*(1 - 2*d + n2 + 2*n3 + n8)*j[p4a, 0, 1 + n2, n3, 0, n5, 1, -1, 
      -2 + n8, 1 + n9, 1, 1, 0, 1, 1])/((-1 + n8)*(-3 + d - n5 - n9)) - 
   (n2*(1 - 2*d + n2 + 2*n3 + n8)*j[p4a, 0, 1 + n2, n3, 0, n5, 1, -1, 
      -1 + n8, 1 + n9, 1, 1, -1, 1, 1])/((-1 + n8)*(-3 + d - n5 - n9)) + 
   (n2*(1 - 4*d + 2*n2 + 4*n3 + 3*n8)*j[p4a, 0, 1 + n2, n3, 0, n5, 1, -1, 
      -1 + n8, 1 + n9, 1, 1, 0, 0, 1])/((-1 + n8)*(-3 + d - n5 - n9)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n4 == 0 && n6 == 1 && n7 == 0 &&  !(n8 == 1 || n9 == 0) -> 
  j[p4a, -1, n2, n3, 0, n5, 1, 0, n8, 1 + n9, 0, 2, 0, 1, 1]/
    (3 - d + n5 + n9) + ((15 - 10*d + 6*n2 + 6*n3 + 6*n5 + 5*n8)*
     j[p4a, -1, n2, n3, 0, n5, 1, 0, n8, 1 + n9, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n5 - n9)) + j[p4a, -1, n2, n3, 0, n5, 1, 0, n8, 1 + n9, 2, 
     1, 0, 0, 1]/(3 - d + n5 + n9) + 
   ((-1 - n9)*j[p4a, -1, n2, n3, 0, n5, 1, 0, n8, 2 + n9, 1, 1, 0, 1, 0])/
    (3 - d + n5 + n9) - (n3*j[p4a, -1, n2, 1 + n3, 0, n5, 1, 0, n8, 1 + n9, 
      1, 1, 0, 0, 1])/(2*(-3 + d - n5 - n9)) - 
   (n2*j[p4a, -1, 1 + n2, n3, 0, n5, 1, 0, -1 + n8, 1 + n9, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n5 - n9)) + ((-10 + 5*d - 2*n2 - 4*n3 - 2*n5)*
     j[p4a, 0, -1 + n2, n3, 0, n5, 1, 0, n8, 1 + n9, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n5 - n9)) + j[p4a, 0, -1 + n2, n3, 0, n5, 1, 0, n8, 1 + n9, 
     2, 0, 0, 1, 1]/(2*(-3 + d - n5 - n9)) + 
   j[p4a, 0, -1 + n2, n3, 0, n5, 1, 0, n8, 1 + n9, 2, 1, 0, 0, 1]/
    (-3 + d - n5 - n9) + ((1 + n9)*j[p4a, 0, -1 + n2, n3, 0, n5, 1, 0, n8, 
      2 + n9, 1, 1, 0, 1, 0])/(2*(3 - d + n5 + n9)) - 
   (n8*j[p4a, 0, -1 + n2, n3, 0, n5, 1, 0, 1 + n8, 1 + n9, 1, 0, 0, 1, 1])/
    (2*(-3 + d - n5 - n9)) - (n8*j[p4a, 0, -1 + n2, n3, 0, n5, 1, 0, 1 + n8, 
      1 + n9, 1, 1, 0, 0, 1])/(2*(-3 + d - n5 - n9)) + 
   j[p4a, 0, -1 + n2, n3, 0, n5, 2, 0, -1 + n8, 1 + n9, 1, 1, 0, 1, 1]/
    (2*(-3 + d - n5 - n9)) - j[p4a, 0, -1 + n2, n3, 0, n5, 2, 0, n8, 1 + n9, 
     0, 1, 0, 1, 1]/(2*(-3 + d - n5 - n9)) + 
   j[p4a, 0, -1 + n2, n3, 0, n5, 2, 0, n8, 1 + n9, 1, 1, 0, 0, 1]/
    (2*(-3 + d - n5 - n9)) + j[p4a, 0, -1 + n2, n3, 0, n5, 2, 0, n8, 1 + n9, 
     1, 1, 0, 1, 0]/(2*(-3 + d - n5 - n9)) - 
   (n3*j[p4a, 0, -1 + n2, 1 + n3, 0, n5, 1, 0, n8, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n5 - n9)) + ((10 - 5*d + 4*n2 + 2*n3 + 2*n5 + 2*n8 + 2*n9)*
     j[p4a, 0, n2, -1 + n3, 0, n5, 1, 0, n8, 1 + n9, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n5 - n9)) + j[p4a, 0, n2, -1 + n3, 0, n5, 1, 0, n8, 1 + n9, 
     2, 0, 0, 1, 1]/(2*(-3 + d - n5 - n9)) + 
   j[p4a, 0, n2, -1 + n3, 0, n5, 2, 0, -1 + n8, 1 + n9, 1, 1, 0, 1, 1]/
    (2*(-3 + d - n5 - n9)) + j[p4a, 0, n2, n3, -1, n5, 1, 0, n8, 1 + n9, 1, 
    1, 0, 1, 1] + ((1 + n9)*j[p4a, 0, n2, n3, -1, n5, 1, 0, n8, 2 + n9, 1, 1, 
      0, 1, 0])/(2*(3 - d + n5 + n9)) + 
   j[p4a, 0, n2, n3, -1, n5, 2, 0, n8, 1 + n9, 0, 1, 0, 1, 1]/
    (2*(-3 + d - n5 - n9)) - j[p4a, 0, n2, n3, -1, n5, 2, 0, n8, 1 + n9, 1, 
     1, 0, 0, 1]/(2*(-3 + d - n5 - n9)) - 
   j[p4a, 0, n2, n3, -1, n5, 2, 0, n8, 1 + n9, 1, 1, 0, 1, 0]/
    (2*(-3 + d - n5 - n9)) - (n5*j[p4a, 0, n2, n3, -1, 1 + n5, 1, 0, n8, 
      1 + n9, 1, 1, 0, 0, 1])/(2*(3 - d + n5 + n9)) + 
   (n5*j[p4a, 0, n2, n3, -1, 1 + n5, 1, 0, n8, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n5 + n9)) + j[p4a, 0, n2, n3, 0, -1 + n5, 1, 0, n8, 1 + n9, 
    1, 1, 0, 1, 1] + ((1 + n9)*j[p4a, 0, n2, n3, 0, -1 + n5, 1, 0, n8, 
      2 + n9, 1, 1, 0, 1, 0])/(2*(3 - d + n5 + n9)) + 
   j[p4a, 0, n2, n3, 0, -1 + n5, 2, 0, n8, 1 + n9, 0, 1, 0, 1, 1]/
    (2*(-3 + d - n5 - n9)) - j[p4a, 0, n2, n3, 0, -1 + n5, 2, 0, n8, 1 + n9, 
     1, 1, 0, 0, 1]/(2*(-3 + d - n5 - n9)) - 
   j[p4a, 0, n2, n3, 0, -1 + n5, 2, 0, n8, 1 + n9, 1, 1, 0, 1, 0]/
    (2*(-3 + d - n5 - n9)) + ((2 - d - 2*n2 + 2*n3)*
     j[p4a, 0, n2, n3, 0, n5, 1, -1, n8, 1 + n9, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n5 - n9)) - j[p4a, 0, n2, n3, 0, n5, 1, -1, n8, 1 + n9, 2, 
     0, 0, 1, 1]/(2*(-3 + d - n5 - n9)) - 
   j[p4a, 0, n2, n3, 0, n5, 1, -1, n8, 1 + n9, 2, 1, 0, 0, 1]/
    (2*(-3 + d - n5 - n9)) + ((-1 - n9)*j[p4a, 0, n2, n3, 0, n5, 1, -1, n8, 
      2 + n9, 1, 1, 0, 1, 0])/(2*(3 - d + n5 + n9)) + 
   (n8*j[p4a, 0, n2, n3, 0, n5, 1, -1, 1 + n8, 1 + n9, 1, 0, 0, 1, 1])/
    (2*(-3 + d - n5 - n9)) + (n8*j[p4a, 0, n2, n3, 0, n5, 1, -1, 1 + n8, 
      1 + n9, 1, 1, 0, 0, 1])/(2*(-3 + d - n5 - n9)) + 
   j[p4a, 0, n2, n3, 0, n5, 1, 0, -1 + n8, 1 + n9, 0, 2, 0, 1, 1]/
    (-3 + d - n5 - n9) + ((12 - 14*d + 4*d^2 + 3*n2 - 2*d*n2 + 13*n3 - 
      8*d*n3 + 2*n2*n3 + 4*n3^2 + 5*n5 - 4*d*n5 + 2*n2*n5 + 4*n3*n5 + 5*n8 - 
      2*d*n8 + n2*n8 + 3*n3*n8 + 3*n5*n8 - n8^2 + n9 - n8*n9)*
     j[p4a, 0, n2, n3, 0, n5, 1, 0, -1 + n8, 1 + n9, 1, 1, 0, 1, 1])/
    (2*(-1 + n8)*(-3 + d - n5 - n9)) - 
   j[p4a, 0, n2, n3, 0, n5, 1, 0, -1 + n8, 1 + n9, 2, 0, 0, 1, 1]/
    (2*(-3 + d - n5 - n9)) + ((-1 - n9)*j[p4a, 0, n2, n3, 0, n5, 1, 0, 
      -1 + n8, 2 + n9, 1, 1, 0, 1, 1])/(2*(3 - d + n5 + n9)) - 
   j[p4a, 0, n2, n3, 0, n5, 1, 0, n8, n9, 1, 1, 0, 0, 2]/
    (2*(-3 + d - n5 - n9)) + ((n2 - n3 + n9)*j[p4a, 0, n2, n3, 0, n5, 1, 0, 
      n8, 1 + n9, 0, 1, 0, 1, 1])/(2*(3 - d + n5 + n9)) - 
   j[p4a, 0, n2, n3, 0, n5, 1, 0, n8, 1 + n9, 0, 2, -1, 1, 1]/
    (2*(-3 + d - n5 - n9)) + j[p4a, 0, n2, n3, 0, n5, 1, 0, n8, 1 + n9, 0, 2, 
     0, 1, 1]/(2*(-3 + d - n5 - n9)) + 
   ((-1 + n3 - n9)*j[p4a, 0, n2, n3, 0, n5, 1, 0, n8, 1 + n9, 1, 0, 0, 1, 1])/
    (2*(3 - d + n5 + n9)) + ((4 - 4*d + 4*n2 + n3 + n5 + 5*n8)*
     j[p4a, 0, n2, n3, 0, n5, 1, 0, n8, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n5 - n9)) + j[p4a, 0, n2, n3, 0, n5, 1, 0, n8, 1 + n9, 1, 1, 
     0, 0, 2]/(2*(-3 + d - n5 - n9)) + 
   ((-2 + n5)*j[p4a, 0, n2, n3, 0, n5, 1, 0, n8, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n5 + n9)) + ((-5 + 3*d - 2*n2 - n3 - 2*n5 - 2*n8 - n9)*
     j[p4a, 0, n2, n3, 0, n5, 1, 0, n8, 1 + n9, 1, 1, 0, 1, 1])/
    (-3 + d - n5 - n9) + j[p4a, 0, n2, n3, 0, n5, 1, 0, n8, 1 + n9, 2, 0, -1, 
     1, 1]/(2*(-3 + d - n5 - n9)) - j[p4a, 0, n2, n3, 0, n5, 1, 0, n8, 
     1 + n9, 2, 0, 0, 1, 1]/(2*(-3 + d - n5 - n9)) + 
   ((-1 - n9)*j[p4a, 0, n2, n3, 0, n5, 1, 0, n8, 2 + n9, 0, 1, 0, 1, 1])/
    (2*(3 - d + n5 + n9)) + ((1 + n9)*j[p4a, 0, n2, n3, 0, n5, 1, 0, n8, 
      2 + n9, 1, 0, 0, 1, 1])/(2*(3 - d + n5 + n9)) - 
   j[p4a, 0, n2, n3, 0, n5, 2, -1, -1 + n8, 1 + n9, 1, 1, 0, 1, 1]/
    (2*(-3 + d - n5 - n9)) - j[p4a, 0, n2, n3, 0, n5, 2, 0, -2 + n8, 1 + n9, 
     1, 1, 0, 1, 1]/(2*(-3 + d - n5 - n9)) - 
   j[p4a, 0, n2, n3, 0, n5, 2, 0, -1 + n8, n9, 1, 1, 0, 1, 1]/
    (2*(-3 + d - n5 - n9)) + j[p4a, 0, n2, n3, 0, n5, 2, 0, -1 + n8, 1 + n9, 
     1, 1, -1, 1, 1]/(2*(-3 + d - n5 - n9)) + 
   (n5*j[p4a, 0, n2, n3, 0, 1 + n5, 1, -1, n8, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(3 - d + n5 + n9)) - (n5*j[p4a, 0, n2, n3, 0, 1 + n5, 1, -1, n8, 
      1 + n9, 1, 1, 0, 1, 0])/(2*(3 - d + n5 + n9)) - 
   (n5*(5 - 4*d + 2*n2 + 4*n3 + 3*n8)*j[p4a, 0, n2, n3, 0, 1 + n5, 1, 0, 
      -1 + n8, 1 + n9, 1, 1, 0, 0, 1])/(2*(-1 + n8)*(3 - d + n5 + n9)) + 
   (n5*(5 - 4*d + 2*n2 + 4*n3 + 3*n8)*j[p4a, 0, n2, n3, 0, 1 + n5, 1, 0, 
      -1 + n8, 1 + n9, 1, 1, 0, 1, 0])/(2*(-1 + n8)*(3 - d + n5 + n9)) - 
   (n3*(3 - 4*d + 2*n2 + 4*n3 + 5*n8)*j[p4a, 0, n2, 1 + n3, 0, n5, 1, -1, 
      -1 + n8, 1 + n9, 1, 1, 0, 1, 1])/(2*(-1 + n8)*(-3 + d - n5 - n9)) - 
   (n3*j[p4a, 0, n2, 1 + n3, 0, n5, 1, -1, n8, 1 + n9, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n5 - n9)) + (n3*j[p4a, 0, n2, 1 + n3, 0, n5, 1, -1, n8, 
      1 + n9, 1, 0, 0, 1, 1])/(2*(-3 + d - n5 - n9)) + 
   (3*n3*j[p4a, 0, n2, 1 + n3, 0, n5, 1, -1, n8, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n5 - n9)) + (n3*(-2*d + n2 + 2*n3 + 4*n8)*
     j[p4a, 0, n2, 1 + n3, 0, n5, 1, 0, -1 + n8, 1 + n9, 1, 1, 0, 0, 1])/
    ((-1 + n8)*(-3 + d - n5 - n9)) - 
   (n3*j[p4a, 0, n2, 1 + n3, 0, n5, 1, 0, n8, 1 + n9, 1, 1, -1, 0, 1])/
    (-3 + d - n5 - n9) + (n3*j[p4a, 0, n2, 1 + n3, 0, n5, 1, 0, n8, 1 + n9, 
      1, 1, 0, 0, 1])/(2*(-3 + d - n5 - n9)) - 
   (n2*(3 - 2*d + n2 + 2*n3 + n8)*j[p4a, 0, 1 + n2, -1 + n3, 0, n5, 1, 0, 
      -1 + n8, 1 + n9, 1, 1, 0, 1, 1])/((-1 + n8)*(-3 + d - n5 - n9)) + 
   (n2*(3 - 2*d + n2 + 2*n3 + n8)*j[p4a, 0, 1 + n2, n3, 0, n5, 1, -1, 
      -1 + n8, 1 + n9, 1, 1, 0, 1, 1])/((-1 + n8)*(-3 + d - n5 - n9)) + 
   (n2*j[p4a, 0, 1 + n2, n3, 0, n5, 1, -1, n8, 1 + n9, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n5 - n9)) - (n2*j[p4a, 0, 1 + n2, n3, 0, n5, 1, -1, n8, 
      1 + n9, 1, 1, 0, 0, 1])/(-3 + d - n5 - n9) + 
   (n2*(3 - 2*d + n2 + 2*n3 + n8)*j[p4a, 0, 1 + n2, n3, 0, n5, 1, 0, -2 + n8, 
      1 + n9, 1, 1, 0, 1, 1])/((-1 + n8)*(-3 + d - n5 - n9)) - 
   (n2*(3 - 2*d + n2 + 2*n3 + n8)*j[p4a, 0, 1 + n2, n3, 0, n5, 1, 0, -1 + n8, 
      1 + n9, 1, 1, -1, 1, 1])/((-1 + n8)*(-3 + d - n5 - n9)) + 
   (n2*(5 - 4*d + 2*n2 + 4*n3 + 3*n8)*j[p4a, 0, 1 + n2, n3, 0, n5, 1, 0, 
      -1 + n8, 1 + n9, 1, 1, 0, 0, 1])/((-1 + n8)*(-3 + d - n5 - n9)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && n6 == 1 && 
    n7 == 0 && n8 == 1 && n9 == 0 &&  !(n10 == 1 || n5 == 0) -> 
  (2*j[p4a, -1 + n1, 0, n3, n4, 1 + n5, 0, 0, 1, 0, n10, 2, 0, 1, 1])/
    (-3 + d + 2*n1 - 3*n4 - n5) + j[p4a, -1 + n1, 0, n3, n4, 1 + n5, 0, 0, 2, 
     0, n10, 1, 0, 1, 1]/(-3 + d + 2*n1 - 3*n4 - n5) + 
   (2*j[p4a, -1 + n1, 0, n3, n4, 1 + n5, 1, 0, 0, 0, n10, 2, 0, 1, 1])/
    (-3 + d + 2*n1 - 3*n4 - n5) - 
   (2*n10*j[p4a, -1 + n1, 0, n3, n4, 1 + n5, 1, 0, 0, 0, 1 + n10, 1, 0, 1, 
      1])/(-3 + d + 2*n1 - 3*n4 - n5) + 
   ((19 - 8*d + n1 + 2*n10 + 5*n3 + 5*n4 + 5*n5)*j[p4a, -1 + n1, 0, n3, n4, 
      1 + n5, 1, 0, 1, 0, n10, 1, 0, 1, 1])/(-3 + d + 2*n1 - 3*n4 - n5) + 
   j[p4a, -1 + n1, 0, n3, n4, 1 + n5, 1, 0, 1, 0, n10, 1, 0, 2, 0]/
    (3 - d - 2*n1 + 3*n4 + n5) - 
   (2*n10*j[p4a, -1 + n1, 0, n3, n4, 1 + n5, 1, 0, 1, 0, 1 + n10, 1, 0, 0, 
      1])/(-3 + d + 2*n1 - 3*n4 - n5) + 
   (2*(1 + n5)*j[p4a, -1 + n1, 0, n3, n4, 2 + n5, 1, 0, 1, 0, n10, 1, 0, 0, 
      1])/(3 - d - 2*n1 + 3*n4 + n5) - 
   (2*(1 + n5)*j[p4a, -1 + n1, 0, n3, n4, 2 + n5, 1, 0, 1, 0, n10, 1, 0, 1, 
      0])/(3 - d - 2*n1 + 3*n4 + n5) - 
   (3*n3*j[p4a, -1 + n1, 0, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, n10, 1, 0, 0, 1])/
    (2*(-3 + d + 2*n1 - 3*n4 - n5)) + 
   (n3*j[p4a, -1 + n1, 0, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, n10, 1, 0, 1, 0])/
    (-3 + d + 2*n1 - 3*n4 - n5) - 
   (n10*j[p4a, n1, -1, n3, n4, 1 + n5, 0, 0, 1, 0, 1 + n10, 1, 0, 1, 1])/
    (-3 + d + 2*n1 - 3*n4 - n5) - 
   (2*j[p4a, n1, -1, n3, n4, 1 + n5, 1, 0, 0, 0, n10, 2, 0, 1, 1])/
    (-3 + d + 2*n1 - 3*n4 - n5) + 
   (2*n10*j[p4a, n1, -1, n3, n4, 1 + n5, 1, 0, 0, 0, 1 + n10, 1, 0, 1, 1])/
    (-3 + d + 2*n1 - 3*n4 - n5) - 
   (3*j[p4a, n1, -1, n3, n4, 1 + n5, 1, 0, 1, 0, n10, 1, 0, 0, 2])/
    (-3 + d + 2*n1 - 3*n4 - n5) + 
   ((-50 + 23*d - 10*n10 - 16*n3 - 16*n4 - 14*n5)*j[p4a, n1, -1, n3, n4, 
      1 + n5, 1, 0, 1, 0, n10, 1, 0, 1, 1])/(2*(-3 + d + 2*n1 - 3*n4 - n5)) + 
   (n10*j[p4a, n1, -1, n3, n4, 1 + n5, 1, 0, 1, 0, 1 + n10, 0, 0, 1, 1])/
    (2*(-3 + d + 2*n1 - 3*n4 - n5)) + 
   (2*n10*j[p4a, n1, -1, n3, n4, 1 + n5, 1, 0, 1, 0, 1 + n10, 1, 0, 0, 1])/
    (-3 + d + 2*n1 - 3*n4 - n5) - 
   (3*j[p4a, n1, -1, n3, n4, 1 + n5, 1, 0, 2, 0, n10, 0, 0, 1, 1])/
    (2*(-3 + d + 2*n1 - 3*n4 - n5)) - 
   (3*j[p4a, n1, -1, n3, n4, 1 + n5, 1, 0, 2, 0, n10, 1, 0, 0, 1])/
    (2*(-3 + d + 2*n1 - 3*n4 - n5)) + j[p4a, n1, -1, n3, n4, 1 + n5, 2, 0, 0, 
     0, n10, 1, 0, 1, 1]/(3 - d - 2*n1 + 3*n4 + n5) + 
   ((-45 + 19*d + 2*n1 - 5*n10 - 14*n3 - 14*n4 - 12*n5)*
     j[p4a, n1, -1, n3, n4, 1 + n5, 2, 0, 1, 0, -1 + n10, 1, 0, 1, 1])/
    (2*(-1 + n10)*(-3 + d + 2*n1 - 3*n4 - n5)) - 
   (3*j[p4a, n1, -1, n3, n4, 1 + n5, 2, 0, 1, 0, n10, 1, 0, 0, 1])/
    (2*(-3 + d + 2*n1 - 3*n4 - n5)) - 
   (3*j[p4a, n1, -1, n3, n4, 1 + n5, 2, 0, 1, 0, n10, 1, 0, 1, 0])/
    (2*(-3 + d + 2*n1 - 3*n4 - n5)) - 
   (3*(1 + n5)*j[p4a, n1, -1, n3, n4, 2 + n5, 1, 0, 1, 0, n10, 1, 0, 0, 1])/
    (3 - d - 2*n1 + 3*n4 + n5) + 
   (3*(1 + n5)*j[p4a, n1, -1, n3, n4, 2 + n5, 1, 0, 1, 0, n10, 1, 0, 1, 0])/
    (3 - d - 2*n1 + 3*n4 + n5) - (n3*(12 - 5*d + n10 + 4*n3 + 3*n4 + 3*n5)*
     j[p4a, n1, -1, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, -1 + n10, 1, 0, 1, 1])/
    ((-1 + n10)*(-3 + d + 2*n1 - 3*n4 - n5)) - 
   (3*n3*j[p4a, n1, -1, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, n10, 1, 0, 0, 1])/
    (2*(-3 + d + 2*n1 - 3*n4 - n5)) + 
   (n3*j[p4a, n1, -1, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, n10, 1, 0, 1, 0])/
    (-3 + d + 2*n1 - 3*n4 - n5) - 
   (n10*j[p4a, n1, 0, -1 + n3, n4, 1 + n5, 0, 0, 1, 0, 1 + n10, 1, 0, 1, 1])/
    (-3 + d + 2*n1 - 3*n4 - n5) - 
   (3*j[p4a, n1, 0, -1 + n3, n4, 1 + n5, 1, 0, 1, 0, n10, 1, 0, 0, 2])/
    (-3 + d + 2*n1 - 3*n4 - n5) + ((2 - d + 2*n1 + 2*n10 - 2*n3 + 2*n5)*
     j[p4a, n1, 0, -1 + n3, n4, 1 + n5, 1, 0, 1, 0, n10, 1, 0, 1, 1])/
    (2*(-3 + d + 2*n1 - 3*n4 - n5)) + 
   (n10*j[p4a, n1, 0, -1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1 + n10, 0, 0, 1, 1])/
    (2*(-3 + d + 2*n1 - 3*n4 - n5)) + j[p4a, n1, 0, -1 + n3, n4, 1 + n5, 2, 
     0, 0, 0, n10, 1, 0, 1, 1]/(2*(-3 + d + 2*n1 - 3*n4 - n5)) + 
   ((-31 + 10*d - n10 - 4*n3 - 4*n4 - 12*n5)*j[p4a, n1, 0, -1 + n3, n4, 
      1 + n5, 2, 0, 1, 0, -1 + n10, 1, 0, 1, 1])/
    (2*(-1 + n10)*(-3 + d + 2*n1 - 3*n4 - n5)) - 
   (n4*j[p4a, n1, 0, -1 + n3, 1 + n4, 1 + n5, 0, 0, 1, 0, n10, 1, 0, 1, 1])/
    (3 - d - 2*n1 + 3*n4 + n5) + 
   (n4*j[p4a, n1, 0, -1 + n3, 1 + n4, 1 + n5, 1, 0, 0, 0, n10, 1, 0, 1, 1])/
    (3 - d - 2*n1 + 3*n4 + n5) + (n4*(15 - 5*d + n10 + 2*n3 + 2*n4 + 6*n5)*
     j[p4a, n1, 0, -1 + n3, 1 + n4, 1 + n5, 1, 0, 1, 0, -1 + n10, 1, 0, 1, 
      1])/((-1 + n10)*(3 - d - 2*n1 + 3*n4 + n5)) - 
   (2*j[p4a, n1, 0, n3, -1 + n4, 1 + n5, 1, 0, 0, 0, n10, 2, 0, 1, 1])/
    (-3 + d + 2*n1 - 3*n4 - n5) + ((-7 + 3*d - 2*n3 - 3*n4 - n5)*
     j[p4a, n1, 0, n3, -1 + n4, 1 + n5, 1, 0, 1, 0, n10, 1, 0, 1, 1])/
    (-3 + d + 2*n1 - 3*n4 - n5) + j[p4a, n1, 0, n3, -1 + n4, 1 + n5, 1, 0, 2, 
     0, n10, 0, 0, 1, 1]/(3 - d - 2*n1 + 3*n4 + n5) + 
   j[p4a, n1, 0, n3, -1 + n4, 1 + n5, 1, 0, 2, 0, n10, 1, 0, 0, 1]/
    (3 - d - 2*n1 + 3*n4 + n5) - j[p4a, n1, 0, n3, -1 + n4, 1 + n5, 2, 0, 0, 
     0, n10, 1, 0, 1, 1]/(2*(-3 + d + 2*n1 - 3*n4 - n5)) + 
   ((-18 + 9*d + 2*n1 - 10*n3 - 10*n4)*j[p4a, n1, 0, n3, -1 + n4, 1 + n5, 2, 
      0, 1, 0, -1 + n10, 1, 0, 1, 1])/(2*(-1 + n10)*
     (-3 + d + 2*n1 - 3*n4 - n5)) - j[p4a, n1, 0, n3, -1 + n4, 1 + n5, 2, 0, 
     1, 0, n10, 1, 0, 0, 1]/(2*(-3 + d + 2*n1 - 3*n4 - n5)) - 
   j[p4a, n1, 0, n3, -1 + n4, 1 + n5, 2, 0, 1, 0, n10, 1, 0, 1, 0]/
    (2*(-3 + d + 2*n1 - 3*n4 - n5)) + 
   ((-1 - n5)*j[p4a, n1, 0, n3, -1 + n4, 2 + n5, 1, 0, 1, 0, n10, 1, 0, 0, 
      1])/(2*(3 - d - 2*n1 + 3*n4 + n5)) + 
   ((1 + n5)*j[p4a, n1, 0, n3, -1 + n4, 2 + n5, 1, 0, 1, 0, n10, 1, 0, 1, 0])/
    (2*(3 - d - 2*n1 + 3*n4 + n5)) + 
   (3*j[p4a, n1, 0, n3, n4, n5, 0, 0, 1, 0, n10, 1, 0, 1, 2])/
    (-3 + d + 2*n1 - 3*n4 - n5) + 
   (3*j[p4a, n1, 0, n3, n4, n5, 1, 0, 0, 0, n10, 1, 0, 1, 2])/
    (-3 + d + 2*n1 - 3*n4 - n5) + 
   (2*j[p4a, n1, 0, n3, n4, n5, 1, 0, 0, 0, n10, 2, 0, 1, 1])/
    (-3 + d + 2*n1 - 3*n4 - n5) + 
   (3*j[p4a, n1, 0, n3, n4, n5, 1, 0, 1, 0, n10, 1, 0, 0, 2])/
    (-3 + d + 2*n1 - 3*n4 - n5) + 
   (3*j[p4a, n1, 0, n3, n4, n5, 2, 0, 0, 0, n10, 1, 0, 1, 1])/
    (2*(-3 + d + 2*n1 - 3*n4 - n5)) + 
   ((14 - 9*d - 2*n1 + 4*n10 + 10*n3 + 10*n4)*j[p4a, n1, 0, n3, n4, n5, 2, 0, 
      1, 0, -1 + n10, 1, 0, 1, 1])/(2*(-1 + n10)*(-3 + d + 2*n1 - 3*n4 - 
      n5)) + (3*j[p4a, n1, 0, n3, n4, n5, 2, 0, 1, 0, n10, 1, 0, 0, 1])/
    (2*(-3 + d + 2*n1 - 3*n4 - n5)) + 
   (3*j[p4a, n1, 0, n3, n4, n5, 2, 0, 1, 0, n10, 1, 0, 1, 0])/
    (2*(-3 + d + 2*n1 - 3*n4 - n5)) + 
   (n10*j[p4a, n1, 0, n3, n4, 1 + n5, 0, -1, 1, 0, 1 + n10, 1, 0, 1, 1])/
    (-3 + d + 2*n1 - 3*n4 - n5) + ((2 - n10 - 2*n3 + n4 + 6*n5)*
     j[p4a, n1, 0, n3, n4, 1 + n5, 0, 0, 1, 0, n10, 1, 0, 1, 1])/
    (-3 + d + 2*n1 - 3*n4 - n5) + j[p4a, n1, 0, n3, n4, 1 + n5, 0, 0, 1, 0, 
     n10, 2, -1, 1, 1]/(-3 + d + 2*n1 - 3*n4 - n5) + 
   j[p4a, n1, 0, n3, n4, 1 + n5, 0, 0, 1, 0, n10, 2, 0, 1, 1]/
    (3 - d - 2*n1 + 3*n4 + n5) - 
   (n10*j[p4a, n1, 0, n3, n4, 1 + n5, 0, 0, 1, 0, 1 + n10, 1, -1, 1, 1])/
    (-3 + d + 2*n1 - 3*n4 - n5) + 
   (n10*j[p4a, n1, 0, n3, n4, 1 + n5, 0, 0, 1, 0, 1 + n10, 1, 0, 1, 1])/
    (-3 + d + 2*n1 - 3*n4 - n5) + j[p4a, n1, 0, n3, n4, 1 + n5, 0, 0, 2, 0, 
     n10, 1, -1, 1, 1]/(-3 + d + 2*n1 - 3*n4 - n5) + 
   (3*j[p4a, n1, 0, n3, n4, 1 + n5, 1, -1, 0, 0, n10, 2, 0, 1, 1])/
    (-3 + d + 2*n1 - 3*n4 - n5) - 
   (n10*j[p4a, n1, 0, n3, n4, 1 + n5, 1, -1, 0, 0, 1 + n10, 1, 0, 1, 1])/
    (2*(-3 + d + 2*n1 - 3*n4 - n5)) + 
   (3*j[p4a, n1, 0, n3, n4, 1 + n5, 1, -1, 1, 0, n10, 1, 0, 0, 2])/
    (-3 + d + 2*n1 - 3*n4 - n5) - 
   (n10*j[p4a, n1, 0, n3, n4, 1 + n5, 1, -1, 1, 0, 1 + n10, 0, 0, 1, 1])/
    (2*(-3 + d + 2*n1 - 3*n4 - n5)) - 
   (n10*j[p4a, n1, 0, n3, n4, 1 + n5, 1, -1, 1, 0, 1 + n10, 1, 0, 0, 1])/
    (2*(-3 + d + 2*n1 - 3*n4 - n5)) + 
   (3*j[p4a, n1, 0, n3, n4, 1 + n5, 1, -1, 2, 0, n10, 0, 0, 1, 1])/
    (2*(-3 + d + 2*n1 - 3*n4 - n5)) + 
   (3*j[p4a, n1, 0, n3, n4, 1 + n5, 1, -1, 2, 0, n10, 1, 0, 0, 1])/
    (2*(-3 + d + 2*n1 - 3*n4 - n5)) - 
   (2*j[p4a, n1, 0, n3, n4, 1 + n5, 1, 0, 0, -1, n10, 2, 0, 1, 1])/
    (-3 + d + 2*n1 - 3*n4 - n5) + 
   (n10*j[p4a, n1, 0, n3, n4, 1 + n5, 1, 0, 0, -1, 1 + n10, 1, 0, 1, 1])/
    (-3 + d + 2*n1 - 3*n4 - n5) + j[p4a, n1, 0, n3, n4, 1 + n5, 1, 0, 0, 0, 
     -1 + n10, 2, 0, 1, 1]/(3 - d - 2*n1 + 3*n4 + n5) + 
   ((26 - 10*d - n1 + n10 + n3 + 3*n4 + 12*n5)*j[p4a, n1, 0, n3, n4, 1 + n5, 
      1, 0, 0, 0, n10, 1, 0, 1, 1])/(2*(-3 + d + 2*n1 - 3*n4 - n5)) + 
   j[p4a, n1, 0, n3, n4, 1 + n5, 1, 0, 0, 0, n10, 2, -1, 1, 1]/
    (-3 + d + 2*n1 - 3*n4 - n5) + j[p4a, n1, 0, n3, n4, 1 + n5, 1, 0, 0, 0, 
     n10, 2, 0, 1, 1]/(3 - d - 2*n1 + 3*n4 + n5) - 
   (3*j[p4a, n1, 0, n3, n4, 1 + n5, 1, 0, 1, -1, n10, 1, 0, 0, 2])/
    (2*(-3 + d + 2*n1 - 3*n4 - n5)) + 
   (n10*j[p4a, n1, 0, n3, n4, 1 + n5, 1, 0, 1, -1, 1 + n10, 1, 0, 0, 1])/
    (-3 + d + 2*n1 - 3*n4 - n5) + 
   ((26 + 30*d - 19*d^2 - n1 - 2*d*n1 - 42*n10 + 24*d*n10 + n1*n10 - 
      4*n10^2 - 65*n3 + 47*d*n3 + 2*n1*n3 - 23*n10*n3 - 22*n3^2 - 3*n4 + 
      25*d*n4 + 2*n1*n4 - 17*n10*n4 - 34*n3*n4 - 12*n4^2 + 6*n5 + 6*d*n5 - 
      6*n10*n5 - 18*n3*n5 + 6*n4*n5)*j[p4a, n1, 0, n3, n4, 1 + n5, 1, 0, 1, 
      0, -1 + n10, 1, 0, 1, 1])/(2*(-1 + n10)*(-3 + d + 2*n1 - 3*n4 - n5)) + 
   ((17 - 9*d - n1 + n10 + 9*n3 + 7*n4)*j[p4a, n1, 0, n3, n4, 1 + n5, 1, 0, 
      1, 0, n10, 0, 0, 1, 1])/(2*(-3 + d + 2*n1 - 3*n4 - n5)) - 
   (3*j[p4a, n1, 0, n3, n4, 1 + n5, 1, 0, 1, 0, n10, 1, -1, 0, 2])/
    (-3 + d + 2*n1 - 3*n4 - n5) + ((33 - 10*d + n10 - n3 + 4*n4 + 7*n5)*
     j[p4a, n1, 0, n3, n4, 1 + n5, 1, 0, 1, 0, n10, 1, 0, 0, 1])/
    (2*(-3 + d + 2*n1 - 3*n4 - n5)) + 
   (3*j[p4a, n1, 0, n3, n4, 1 + n5, 1, 0, 1, 0, n10, 1, 0, 0, 2])/
    (2*(-3 + d + 2*n1 - 3*n4 - n5)) + 
   ((1 + 2*n3 + n4 + 5*n5)*j[p4a, n1, 0, n3, n4, 1 + n5, 1, 0, 1, 0, n10, 1, 
      0, 1, 0])/(2*(-3 + d + 2*n1 - 3*n4 - n5)) + 
   ((-n1 + n3)*j[p4a, n1, 0, n3, n4, 1 + n5, 1, 0, 1, 0, n10, 1, 0, 1, 1])/
    (-3 + d + 2*n1 - 3*n4 - n5) + j[p4a, n1, 0, n3, n4, 1 + n5, 1, 0, 1, 0, 
     n10, 1, 0, 2, 0]/(-3 + d + 2*n1 - 3*n4 - n5) + 
   (n10*j[p4a, n1, 0, n3, n4, 1 + n5, 1, 0, 1, 0, 1 + n10, 0, -1, 1, 1])/
    (2*(-3 + d + 2*n1 - 3*n4 - n5)) - 
   (n10*j[p4a, n1, 0, n3, n4, 1 + n5, 1, 0, 1, 0, 1 + n10, 0, 0, 1, 1])/
    (2*(-3 + d + 2*n1 - 3*n4 - n5)) + j[p4a, n1, 0, n3, n4, 1 + n5, 1, 0, 2, 
     0, -1 + n10, 1, -1, 1, 1]/(2*(-3 + d + 2*n1 - 3*n4 - n5)) - 
   j[p4a, n1, 0, n3, n4, 1 + n5, 1, 0, 2, 0, -1 + n10, 1, 0, 0, 1]/
    (2*(-3 + d + 2*n1 - 3*n4 - n5)) - j[p4a, n1, 0, n3, n4, 1 + n5, 2, -1, 0, 
     0, n10, 1, 0, 1, 1]/(2*(-3 + d + 2*n1 - 3*n4 - n5)) + 
   ((31 - 10*d + n10 + 4*n3 + 4*n4 + 12*n5)*j[p4a, n1, 0, n3, n4, 1 + n5, 2, 
      -1, 1, 0, -1 + n10, 1, 0, 1, 1])/(2*(-1 + n10)*
     (-3 + d + 2*n1 - 3*n4 - n5)) - j[p4a, n1, 0, n3, n4, 1 + n5, 2, 0, 0, 
     -1, n10, 1, 0, 1, 1]/(2*(-3 + d + 2*n1 - 3*n4 - n5)) + 
   ((48 - 19*d - 2*n1 + 2*n10 + 14*n3 + 14*n4 + 12*n5)*
     j[p4a, n1, 0, n3, n4, 1 + n5, 2, 0, 0, 0, -1 + n10, 1, 0, 1, 1])/
    (2*(-1 + n10)*(-3 + d + 2*n1 - 3*n4 - n5)) + 
   j[p4a, n1, 0, n3, n4, 1 + n5, 2, 0, 0, 0, n10, 1, -1, 1, 1]/
    (2*(-3 + d + 2*n1 - 3*n4 - n5)) + 
   ((-31 + 10*d - n10 - 4*n3 - 4*n4 - 12*n5)*j[p4a, n1, 0, n3, n4, 1 + n5, 2, 
      0, 1, 0, -1 + n10, 1, -1, 1, 1])/(2*(-1 + n10)*
     (-3 + d + 2*n1 - 3*n4 - n5)) + ((31 - 10*d + n10 + 4*n3 + 4*n4 + 12*n5)*
     j[p4a, n1, 0, n3, n4, 1 + n5, 2, 0, 1, 0, -1 + n10, 1, 0, 0, 1])/
    (2*(-1 + n10)*(-3 + d + 2*n1 - 3*n4 - n5)) + 
   ((31 - 10*d + n10 + 4*n3 + 4*n4 + 12*n5)*j[p4a, n1, 0, n3, n4, 1 + n5, 2, 
      0, 1, 0, -1 + n10, 1, 0, 1, 0])/(2*(-1 + n10)*
     (-3 + d + 2*n1 - 3*n4 - n5)) + 
   ((1 + n5)*j[p4a, n1, 0, n3, n4, 2 + n5, 1, -1, 1, 0, n10, 1, 0, 0, 1])/
    (2*(3 - d - 2*n1 + 3*n4 + n5)) + 
   ((-1 - n5)*j[p4a, n1, 0, n3, n4, 2 + n5, 1, -1, 1, 0, n10, 1, 0, 1, 0])/
    (2*(3 - d - 2*n1 + 3*n4 + n5)) - 
   (2*(1 + n5)*j[p4a, n1, 0, n3, n4, 2 + n5, 1, 0, 1, -1, n10, 1, 0, 0, 1])/
    (3 - d - 2*n1 + 3*n4 + n5) + 
   (2*(1 + n5)*j[p4a, n1, 0, n3, n4, 2 + n5, 1, 0, 1, -1, n10, 1, 0, 1, 0])/
    (3 - d - 2*n1 + 3*n4 + n5) - 
   (3*n4*j[p4a, n1, 0, n3, 1 + n4, n5, 0, 0, 1, 0, n10, 1, 0, 1, 1])/
    (3 - d - 2*n1 + 3*n4 + n5) + 
   (3*n4*j[p4a, n1, 0, n3, 1 + n4, n5, 1, 0, 0, 0, n10, 1, 0, 1, 1])/
    (2*(3 - d - 2*n1 + 3*n4 + n5)) - 
   (n4*(15 - 9*d - 2*n1 + 3*n10 + 10*n3 + 10*n4)*j[p4a, n1, 0, n3, 1 + n4, 
      n5, 1, 0, 1, 0, -1 + n10, 1, 0, 1, 1])/
    (2*(-1 + n10)*(3 - d - 2*n1 + 3*n4 + n5)) + 
   (3*n4*j[p4a, n1, 0, n3, 1 + n4, n5, 1, 0, 1, 0, n10, 0, 0, 1, 1])/
    (2*(3 - d - 2*n1 + 3*n4 + n5)) - 
   (3*n4*j[p4a, n1, 0, n3, 1 + n4, n5, 1, 0, 1, 0, n10, 1, 0, 1, 0])/
    (2*(3 - d - 2*n1 + 3*n4 + n5)) + 
   (3*n4*j[p4a, n1, 0, n3, 1 + n4, 1 + n5, 0, -1, 1, 0, n10, 1, 0, 1, 1])/
    (3 - d - 2*n1 + 3*n4 + n5) + (n4*(12 - 5*d + n10 + 4*n3 + 3*n4 + 3*n5)*
     j[p4a, n1, 0, n3, 1 + n4, 1 + n5, 0, 0, 1, 0, -1 + n10, 1, 0, 1, 1])/
    ((-1 + n10)*(3 - d - 2*n1 + 3*n4 + n5)) - 
   (3*n4*j[p4a, n1, 0, n3, 1 + n4, 1 + n5, 1, -1, 0, 0, n10, 1, 0, 1, 1])/
    (2*(3 - d - 2*n1 + 3*n4 + n5)) + 
   (n4*(15 - 9*d - 2*n1 + 3*n10 + 10*n3 + 10*n4)*j[p4a, n1, 0, n3, 1 + n4, 
      1 + n5, 1, -1, 1, 0, -1 + n10, 1, 0, 1, 1])/
    (2*(-1 + n10)*(3 - d - 2*n1 + 3*n4 + n5)) - 
   (3*n4*j[p4a, n1, 0, n3, 1 + n4, 1 + n5, 1, -1, 1, 0, n10, 0, 0, 1, 1])/
    (2*(3 - d - 2*n1 + 3*n4 + n5)) + 
   (3*n4*j[p4a, n1, 0, n3, 1 + n4, 1 + n5, 1, -1, 1, 0, n10, 1, 0, 1, 0])/
    (2*(3 - d - 2*n1 + 3*n4 + n5)) - 
   (n4*(12 - 5*d + n10 + 4*n3 + 3*n4 + 3*n5)*j[p4a, n1, 0, n3, 1 + n4, 
      1 + n5, 1, 0, 0, 0, -1 + n10, 1, 0, 1, 1])/
    ((-1 + n10)*(3 - d - 2*n1 + 3*n4 + n5)) - 
   (n4*(15 - 5*d + n10 + 2*n3 + 2*n4 + 6*n5)*j[p4a, n1, 0, n3, 1 + n4, 
      1 + n5, 1, 0, 1, 0, -1 + n10, 1, 0, 1, 0])/
    ((-1 + n10)*(3 - d - 2*n1 + 3*n4 + n5)) - 
   (3*n3*j[p4a, n1, 0, 1 + n3, -1 + n4, 1 + n5, 1, 0, 0, 0, n10, 1, 0, 1, 1])/
    (-3 + d + 2*n1 - 3*n4 - n5) + (n3*(-3 + 2*n3 + n4 - 3*n5)*
     j[p4a, n1, 0, 1 + n3, -1 + n4, 1 + n5, 1, 0, 1, 0, -1 + n10, 1, 0, 1, 
      1])/((-1 + n10)*(3 - d - 2*n1 + 3*n4 + n5)) - 
   (n3*j[p4a, n1, 0, 1 + n3, -1 + n4, 1 + n5, 1, 0, 1, 0, n10, 0, 0, 1, 1])/
    (-3 + d + 2*n1 - 3*n4 - n5) - 
   (2*n3*j[p4a, n1, 0, 1 + n3, -1 + n4, 1 + n5, 1, 0, 1, 0, n10, 1, 0, 0, 1])/
    (-3 + d + 2*n1 - 3*n4 - n5) + 
   (9*n3*j[p4a, n1, 0, 1 + n3, n4, 1 + n5, 1, -1, 0, 0, n10, 1, 0, 1, 1])/
    (2*(-3 + d + 2*n1 - 3*n4 - n5)) + 
   ((9*n3 - d*n3 + 2*n1*n3 - n10*n3 - 2*n3^2 - 4*n3*n4 + 6*n3*n5)*
     j[p4a, n1, 0, 1 + n3, n4, 1 + n5, 1, -1, 1, 0, -1 + n10, 1, 0, 1, 1])/
    (2*(-1 + n10)*(-3 + d + 2*n1 - 3*n4 - n5)) + 
   (3*n3*j[p4a, n1, 0, 1 + n3, n4, 1 + n5, 1, -1, 1, 0, n10, 0, 0, 1, 1])/
    (2*(-3 + d + 2*n1 - 3*n4 - n5)) + 
   (9*n3*j[p4a, n1, 0, 1 + n3, n4, 1 + n5, 1, -1, 1, 0, n10, 1, 0, 0, 1])/
    (2*(-3 + d + 2*n1 - 3*n4 - n5)) - 
   (n3*j[p4a, n1, 0, 1 + n3, n4, 1 + n5, 1, -1, 1, 0, n10, 1, 0, 1, 0])/
    (-3 + d + 2*n1 - 3*n4 - n5) + (2*n3*(12 - 5*d + n10 + 4*n3 + 3*n4 + 3*n5)*
     j[p4a, n1, 0, 1 + n3, n4, 1 + n5, 1, 0, 0, 0, -1 + n10, 1, 0, 1, 1])/
    ((-1 + n10)*(-3 + d + 2*n1 - 3*n4 - n5)) - 
   (n3*(12 - 5*d + n10 + 4*n3 + 3*n4 + 3*n5)*j[p4a, n1, 0, 1 + n3, n4, 
      1 + n5, 1, 0, 1, 0, -1 + n10, 1, -1, 1, 1])/
    ((-1 + n10)*(-3 + d + 2*n1 - 3*n4 - n5)) + 
   ((42*n3 - 19*d*n3 - 2*n1*n3 + 2*n10*n3 + 18*n3^2 + 16*n3*n4 + 6*n3*n5)*
     j[p4a, n1, 0, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, -1 + n10, 1, 0, 0, 1])/
    (2*(-1 + n10)*(-3 + d + 2*n1 - 3*n4 - n5)) - 
   (n3*(-4 + n10 + 2*n3 + n4 - 3*n5)*j[p4a, n1, 0, 1 + n3, n4, 1 + n5, 1, 0, 
      1, 0, -1 + n10, 1, 0, 1, 0])/((-1 + n10)*(3 - d - 2*n1 + 3*n4 + n5)) - 
   (3*n3*j[p4a, n1, 0, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, n10, 1, -1, 0, 1])/
    (-3 + d + 2*n1 - 3*n4 - n5) + 
   (2*n3*j[p4a, n1, 0, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, n10, 1, -1, 1, 0])/
    (-3 + d + 2*n1 - 3*n4 - n5) + 
   (3*n3*j[p4a, n1, 0, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, n10, 1, 0, 0, 1])/
    (2*(-3 + d + 2*n1 - 3*n4 - n5)) - 
   (n3*j[p4a, n1, 0, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, n10, 1, 0, 1, 0])/
    (-3 + d + 2*n1 - 3*n4 - n5) - 
   (n1*j[p4a, 1 + n1, -1, n3, n4, 1 + n5, 1, 0, 1, 0, n10, 1, 0, 0, 1])/
    (2*(-3 + d + 2*n1 - 3*n4 - n5)) - 
   (n1*j[p4a, 1 + n1, 0, n3, n4, n5, 1, 0, 1, 0, n10, 1, 0, 0, 1])/
    (-3 + d + 2*n1 - 3*n4 - n5) + 
   (n1*j[p4a, 1 + n1, 0, n3, n4, 1 + n5, 1, 0, 0, 0, n10, 1, 0, 1, 1])/
    (2*(-3 + d + 2*n1 - 3*n4 - n5)) + 
   (n1*j[p4a, 1 + n1, 0, n3, n4, 1 + n5, 1, 0, 1, -1, n10, 1, 0, 0, 1])/
    (-3 + d + 2*n1 - 3*n4 - n5) + 
   (n1*j[p4a, 1 + n1, 0, n3, n4, 1 + n5, 1, 0, 1, 0, -1 + n10, 1, 0, 1, 1])/
    (2*(-3 + d + 2*n1 - 3*n4 - n5)) - 
   (n1*j[p4a, 1 + n1, 0, n3, n4, 1 + n5, 1, 0, 1, 0, n10, 0, 0, 1, 1])/
    (2*(-3 + d + 2*n1 - 3*n4 - n5)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n14 == 1 && n5 == 0 && n6 == 1 && 
    n7 == 0 && n8 == 1 && n9 == 0 &&  !(n13 == 1 || n2 == 0 || n3 == 1) -> 
  -((n11*j[p4a, 0, n2, n3, n4, 0, 1, 0, 1, 0, 1, 1 + n11, 0, -1 + n13, 1])/
     (-1 + n13)) - (2*j[p4a, 0, n2, n3, n4, 0, 1, 0, 2, 0, 1, n11, 0, 
      -1 + n13, 1])/(-1 + n13) + 
   (n3*j[p4a, 0, n2, 1 + n3, n4, 0, 1, 0, 1, 0, 1, n11, 0, -1 + n13, 1])/
    (-1 + n13) - (n4*j[p4a, 0, 1 + n2, -2 + n3, 1 + n4, 0, 1, 0, 1, 0, 1, 
      n11, 0, n13, 1])/(-1 + n3) - 
   (n11*n4*j[p4a, 0, 1 + n2, -2 + n3, 1 + n4, 0, 1, 0, 1, 0, 1, 1 + n11, 0, 
      -1 + n13, 1])/((-1 + n13)*(-1 + n3)) + 
   (n11*j[p4a, 0, 1 + n2, -1 + n3, n4, 0, 1, 0, 0, 0, 1, 1 + n11, 0, n13, 1])/
    (-1 + n3) + ((1 - d + n11 + n3 + n4)*j[p4a, 0, 1 + n2, -1 + n3, n4, 0, 1, 
      0, 1, 0, 1, n11, 0, n13, 1])/(-1 + n3) + 
   ((4*n11 - n11*n13 + n11*n2 - n11*n3 + n11*n4)*j[p4a, 0, 1 + n2, -1 + n3, 
      n4, 0, 1, 0, 1, 0, 1, 1 + n11, 0, -1 + n13, 1])/
    ((-1 + n13)*(-1 + n3)) - (n11*j[p4a, 0, 1 + n2, -1 + n3, n4, 0, 1, 0, 1, 
      0, 1, 1 + n11, 0, n13, 1])/(-1 + n3) + 
   ((3 + d - n11 - 2*n13 + n2)*j[p4a, 0, 1 + n2, -1 + n3, n4, 0, 1, 0, 2, 0, 
      1, n11, 0, -1 + n13, 1])/((-1 + n13)*(-1 + n3)) - 
   (n11*j[p4a, 0, 1 + n2, -1 + n3, n4, 0, 1, 0, 2, 0, 1, 1 + n11, 0, 
      -2 + n13, 1])/((-1 + n13)*(-1 + n3)) + 
   (n11*j[p4a, 0, 1 + n2, -1 + n3, n4, 0, 1, 0, 2, 0, 1, 1 + n11, 0, 
      -1 + n13, 1])/((-1 + n13)*(-1 + n3)) - 
   (n4*j[p4a, 0, 1 + n2, -1 + n3, 1 + n4, -1, 1, 0, 1, 0, 1, n11, 0, n13, 1])/
    (-1 + n3) - (n11*n4*j[p4a, 0, 1 + n2, -1 + n3, 1 + n4, -1, 1, 0, 1, 0, 1, 
      1 + n11, 0, -1 + n13, 1])/((-1 + n13)*(-1 + n3)) - 
   (n4*j[p4a, 0, 1 + n2, -1 + n3, 1 + n4, 0, 0, 0, 1, 0, 1, n11, 0, n13, 1])/
    (-1 + n3) - (n11*n4*j[p4a, 0, 1 + n2, -1 + n3, 1 + n4, 0, 0, 0, 1, 0, 1, 
      1 + n11, 0, -1 + n13, 1])/((-1 + n13)*(-1 + n3)) + 
   (n4*j[p4a, 0, 1 + n2, -1 + n3, 1 + n4, 0, 1, -1, 1, 0, 1, n11, 0, n13, 1])/
    (-1 + n3) + (n11*n4*j[p4a, 0, 1 + n2, -1 + n3, 1 + n4, 0, 1, -1, 1, 0, 1, 
      1 + n11, 0, -1 + n13, 1])/((-1 + n13)*(-1 + n3)) + 
   (n4*j[p4a, 0, 1 + n2, -1 + n3, 1 + n4, 0, 1, 0, 0, 0, 1, n11, 0, n13, 1])/
    (-1 + n3) + (n11*n4*j[p4a, 0, 1 + n2, -1 + n3, 1 + n4, 0, 1, 0, 0, 0, 1, 
      1 + n11, 0, -1 + n13, 1])/((-1 + n13)*(-1 + n3)) + 
   (n4*j[p4a, 0, 1 + n2, -1 + n3, 1 + n4, 0, 1, 0, 1, 0, 1, n11, 0, -1 + n13, 
      1])/(-1 + n13) + (n4*j[p4a, 0, 1 + n2, -1 + n3, 1 + n4, 0, 1, 0, 1, 0, 
      1, n11, 0, n13, 0])/(-1 + n3) + 
   (n11*n4*j[p4a, 0, 1 + n2, -1 + n3, 1 + n4, 0, 1, 0, 1, 0, 1, 1 + n11, 0, 
      -1 + n13, 0])/((-1 + n13)*(-1 + n3)) + 
   (2*n11*j[p4a, 0, 1 + n2, n3, n4, 0, 1, -1, 1, 0, 1, 1 + n11, 0, -1 + n13, 
      1])/(-1 + n13) + (2*j[p4a, 0, 1 + n2, n3, n4, 0, 1, -1, 2, 0, 1, n11, 
      0, -1 + n13, 1])/(-1 + n13) + j[p4a, 0, 1 + n2, n3, n4, 0, 1, 0, 0, 0, 
    1, n11, 0, n13, 1] + (2*n11*j[p4a, 0, 1 + n2, n3, n4, 0, 1, 0, 0, 0, 1, 
      1 + n11, 0, -1 + n13, 1])/(-1 + n13) + 
   ((-1 - n13 - 3*n2 + 3*n3 + n4)*j[p4a, 0, 1 + n2, n3, n4, 0, 1, 0, 1, 0, 1, 
      n11, 0, -1 + n13, 1])/(-1 + n13) - 
   (n11*j[p4a, 0, 1 + n2, n3, n4, 0, 1, 0, 1, 0, 1, 1 + n11, -1, -1 + n13, 
      1])/(-1 + n13) + j[p4a, 0, 1 + n2, n3, n4, 0, 1, 0, 2, 0, 1, n11, -1, 
     -1 + n13, 1]/(1 - n13) + j[p4a, 0, 1 + n2, n3, n4, 0, 1, 0, 2, 0, 1, 
     n11, 0, -2 + n13, 1]/(-1 + n13) - 
   (n4*j[p4a, 0, 1 + n2, n3, 1 + n4, -1, 1, 0, 1, 0, 1, n11, 0, -1 + n13, 1])/
    (-1 + n13) + (n4*j[p4a, 0, 1 + n2, n3, 1 + n4, 0, 0, 0, 1, 0, 1, n11, 0, 
      -1 + n13, 1])/(-1 + n13) + 
   (n4*j[p4a, 0, 1 + n2, n3, 1 + n4, 0, 1, -1, 1, 0, 1, n11, 0, -1 + n13, 1])/
    (-1 + n13) - (n4*j[p4a, 0, 1 + n2, n3, 1 + n4, 0, 1, 0, 0, 0, 1, n11, 0, 
      -1 + n13, 1])/(-1 + n13) - 
   (n4*j[p4a, 0, 1 + n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, n11, 0, -1 + n13, 0])/
    (-1 + n13) - (2*n3*j[p4a, 0, 1 + n2, 1 + n3, n4, 0, 1, 0, 0, 0, 1, n11, 
      0, -1 + n13, 1])/(-1 + n13) + 
   (n3*j[p4a, 0, 1 + n2, 1 + n3, n4, 0, 1, 0, 1, 0, 1, n11, -1, -1 + n13, 1])/
    (-1 + n13) - (2*n3*j[p4a, 0, 1 + n2, 1 + n3, n4, 0, 1, 0, 1, 0, 1, n11, 
      0, -2 + n13, 1])/(-1 + n13) + 
   (n11*(1 + n2)*j[p4a, 0, 2 + n2, -2 + n3, n4, 0, 1, 0, 1, 0, 1, 1 + n11, 0, 
      -1 + n13, 1])/((-1 + n13)*(-1 + n3)) + 
   ((1 + n2)*j[p4a, 0, 2 + n2, -2 + n3, n4, 0, 1, 0, 2, 0, 1, n11, 0, 
      -1 + n13, 1])/((-1 + n13)*(-1 + n3)) - 
   (2*n11*(1 + n2)*j[p4a, 0, 2 + n2, -1 + n3, n4, 0, 1, -1, 1, 0, 1, 1 + n11, 
      0, -1 + n13, 1])/((-1 + n13)*(-1 + n3)) - 
   (2*(1 + n2)*j[p4a, 0, 2 + n2, -1 + n3, n4, 0, 1, -1, 2, 0, 1, n11, 0, 
      -1 + n13, 1])/((-1 + n13)*(-1 + n3)) + 
   ((-1 - n2)*j[p4a, 0, 2 + n2, -1 + n3, n4, 0, 1, 0, 1, 0, 1, n11, 0, 
      -1 + n13, 1])/(-1 + n13) + 
   (n11*(1 + n2)*j[p4a, 0, 2 + n2, -1 + n3, n4, 0, 1, 0, 1, 0, 1, 1 + n11, 
      -1, -1 + n13, 1])/((-1 + n13)*(-1 + n3)) - 
   (2*n11*(1 + n2)*j[p4a, 0, 2 + n2, -1 + n3, n4, 0, 1, 0, 1, 0, 1, 1 + n11, 
      0, -2 + n13, 1])/((-1 + n13)*(-1 + n3)) + 
   ((1 + n2)*j[p4a, 0, 2 + n2, -1 + n3, n4, 0, 1, 0, 2, 0, 1, n11, -1, 
      -1 + n13, 1])/((-1 + n13)*(-1 + n3)) - 
   (2*(1 + n2)*j[p4a, 0, 2 + n2, -1 + n3, n4, 0, 1, 0, 2, 0, 1, n11, 0, 
      -2 + n13, 1])/((-1 + n13)*(-1 + n3)) + 
   (2*(1 + n2)*j[p4a, 0, 2 + n2, n3, n4, 0, 1, 0, 0, 0, 1, n11, 0, -1 + n13, 
      1])/(-1 + n13) + ((-1 - n2)*j[p4a, 0, 2 + n2, n3, n4, 0, 1, 0, 1, 0, 1, 
      n11, -1, -1 + n13, 1])/(-1 + n13) + 
   (2*(1 + n2)*j[p4a, 0, 2 + n2, n3, n4, 0, 1, 0, 1, 0, 1, n11, 0, -2 + n13, 
      1])/(-1 + n13), j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?Positive, (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, 
    (n7_)?NonPositive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n6 == 1 && 
    n7 == 0 && n8 == 1 && n9 == 0 &&  !(n11 == 1 || n5 == 0) -> 
  -((n4*j[p4a, -1, n2, n3, 1 + n4, n5, 1, 0, 1, 0, 1, n11, 0, 1, 1])/
     (d - 2*n11)) + ((-4 + d - 2*n5)*j[p4a, 0, -1 + n2, n3, n4, 1 + n5, 1, 0, 
      2, 0, 1, -1 + n11, 0, 1, 1])/((-1 + n11)*(-d + 2*n11)) + 
   (n3*n4*j[p4a, 0, -1 + n2, 1 + n3, 1 + n4, n5, 1, 0, 1, 0, 1, -1 + n11, 0, 
      1, 1])/((-1 + n11)*(-d + 2*n11)) - 
   (n4*(-4 + d - n5)*j[p4a, 0, n2, -1 + n3, 1 + n4, 1 + n5, 1, 0, 1, 0, 1, 
      -1 + n11, 0, 1, 1])/((-1 + n11)*(-d + 2*n11)) + 
   (n4*(1 + n4)*j[p4a, 0, n2, -1 + n3, 2 + n4, n5, 1, 0, 1, 0, 1, -1 + n11, 
      0, 1, 1])/((-1 + n11)*(-d + 2*n11)) + 
   ((-4 + d - 2*n5)*j[p4a, 0, n2, n3, -1 + n4, 1 + n5, 1, 0, 2, 0, 1, 
      -1 + n11, 0, 1, 1])/((-1 + n11)*(-d + 2*n11)) - 
   (2*n2*j[p4a, 0, n2, n3, n4, n5, 1, 0, 2, 0, 1, -1 + n11, 0, 1, 1])/
    ((-1 + n11)*(-d + 2*n11)) + 
   ((4 - d + 2*n5)*j[p4a, 0, n2, n3, n4, 1 + n5, 0, 0, 2, 0, 1, -1 + n11, 0, 
      1, 1])/((-1 + n11)*(-d + 2*n11)) + 
   ((4 - d + 2*n5)*j[p4a, 0, n2, n3, n4, 1 + n5, 1, -1, 2, 0, 1, -1 + n11, 0, 
      1, 1])/((-1 + n11)*(-d + 2*n11)) + 
   ((4 - d - 4*n2 + d*n2 + 4*n3 - d*n3 - 4*n4 + d*n4 - 2*n5 + d*n5 - 
      2*n2*n5 + n3*n5 - 2*n4*n5 - n5^2)*j[p4a, 0, n2, n3, n4, 1 + n5, 1, 0, 
      1, 0, 1, -1 + n11, 0, 1, 1])/((-1 + n11)*(-d + 2*n11)) + 
   ((-4 + d)*j[p4a, 0, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, -1 + n11, 0, 2, 0])/
    ((d - 2*n11)*(-1 + n11)) + 
   ((-4 + d - n5)*j[p4a, 0, n2, n3, n4, 1 + n5, 1, 0, 2, 0, 1, -1 + n11, -1, 
      1, 1])/((-1 + n11)*(-d + 2*n11)) + 
   ((4 - d + n5)*j[p4a, 0, n2, n3, n4, 1 + n5, 1, 0, 2, 0, 1, -1 + n11, 0, 0, 
      1])/((-1 + n11)*(-d + 2*n11)) - 
   ((-4 + d - n5)*(1 + n5)*j[p4a, 0, n2, n3, n4, 2 + n5, 1, 0, 1, 0, 1, 
      -1 + n11, 0, 0, 1])/((-1 + n11)*(-d + 2*n11)) + 
   ((-4 + d - n5)*(1 + n5)*j[p4a, 0, n2, n3, n4, 2 + n5, 1, 0, 1, 0, 1, 
      -1 + n11, 0, 1, 0])/((-1 + n11)*(-d + 2*n11)) + 
   (n4*j[p4a, 0, n2, n3, 1 + n4, n5, 1, 0, 0, 0, 1, n11, 0, 1, 1])/
    (d - 2*n11) + ((n4 - n11*n4 + n3*n4 - n4^2)*j[p4a, 0, n2, n3, 1 + n4, n5, 
      1, 0, 1, 0, 1, -1 + n11, 0, 1, 1])/((-1 + n11)*(-d + 2*n11)) - 
   (n4*j[p4a, 0, n2, n3, 1 + n4, n5, 1, 0, 2, 0, 1, -1 + n11, -1, 1, 1])/
    ((-1 + n11)*(-d + 2*n11)) + 
   (n4*j[p4a, 0, n2, n3, 1 + n4, n5, 1, 0, 2, 0, 1, -1 + n11, 0, 0, 1])/
    ((-1 + n11)*(-d + 2*n11)) + 
   (n4*n5*j[p4a, 0, n2, n3, 1 + n4, 1 + n5, 1, -1, 1, 0, 1, -1 + n11, 0, 1, 
      1])/((-1 + n11)*(-d + 2*n11)) + 
   (n4*n5*j[p4a, 0, n2, n3, 1 + n4, 1 + n5, 1, 0, 1, 0, 1, -1 + n11, 0, 0, 
      1])/((-1 + n11)*(-d + 2*n11)) + 
   ((-4*n4 + d*n4 - 2*n4*n5)*j[p4a, 0, n2, n3, 1 + n4, 1 + n5, 1, 0, 1, 0, 1, 
      -1 + n11, 0, 1, 0])/((-1 + n11)*(-d + 2*n11)) + 
   (n4*(1 + n4)*j[p4a, 0, n2, n3, 2 + n4, -1 + n5, 1, 0, 1, 0, 1, -1 + n11, 
      0, 1, 1])/((-1 + n11)*(-d + 2*n11)) + 
   (n4*(1 + n4)*j[p4a, 0, n2, n3, 2 + n4, n5, 0, 0, 1, 0, 1, -1 + n11, 0, 1, 
      1])/((-1 + n11)*(-d + 2*n11)) - 
   (n4*(1 + n4)*j[p4a, 0, n2, n3, 2 + n4, n5, 1, -1, 1, 0, 1, -1 + n11, 0, 1, 
      1])/((-1 + n11)*(-d + 2*n11)) - 
   (n4*(1 + n4)*j[p4a, 0, n2, n3, 2 + n4, n5, 1, 0, 0, 0, 1, -1 + n11, 0, 1, 
      1])/((-1 + n11)*(-d + 2*n11)) - 
   (n4*(1 + n4)*j[p4a, 0, n2, n3, 2 + n4, n5, 1, 0, 1, 0, 1, -1 + n11, 0, 1, 
      0])/((-1 + n11)*(-d + 2*n11)) + 
   ((-4*n3 + d*n3 - 2*n3*n5)*j[p4a, 0, n2, 1 + n3, -1 + n4, 1 + n5, 1, 0, 1, 
      0, 1, -1 + n11, 0, 1, 1])/((-1 + n11)*(-d + 2*n11)) + 
   (2*n2*n3*j[p4a, 0, n2, 1 + n3, n4, n5, 1, 0, 1, 0, 1, -1 + n11, 0, 1, 1])/
    ((-1 + n11)*(-d + 2*n11)) + 
   (n3*n5*j[p4a, 0, n2, 1 + n3, n4, 1 + n5, 1, -1, 1, 0, 1, -1 + n11, 0, 1, 
      1])/((-1 + n11)*(-d + 2*n11)) - 
   (n3*n5*j[p4a, 0, n2, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, -1 + n11, 0, 0, 
      1])/((-1 + n11)*(-d + 2*n11)) + 
   ((4*n3 - d*n3 + 2*n3*n5)*j[p4a, 0, n2, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 
      -1 + n11, 0, 1, 0])/((-1 + n11)*(-d + 2*n11)) - 
   (2*n3*n4*j[p4a, 0, n2, 1 + n3, 1 + n4, n5, 1, -1, 1, 0, 1, -1 + n11, 0, 1, 
      1])/((-1 + n11)*(-d + 2*n11)) - 
   (2*n3*n4*j[p4a, 0, n2, 1 + n3, 1 + n4, n5, 1, 0, 0, 0, 1, -1 + n11, 0, 1, 
      1])/((-1 + n11)*(-d + 2*n11)) + 
   (n3*n4*j[p4a, 0, n2, 1 + n3, 1 + n4, n5, 1, 0, 1, 0, 1, -1 + n11, -1, 1, 
      1])/((-1 + n11)*(-d + 2*n11)) + 
   (n2*(-4 + d - n5)*j[p4a, 0, 1 + n2, -1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 
      -1 + n11, 0, 1, 1])/((-1 + n11)*(-d + 2*n11)) + 
   (2*n2*j[p4a, 0, 1 + n2, n3, n4, n5, 1, -1, 2, 0, 1, -1 + n11, 0, 1, 1])/
    ((-1 + n11)*(-d + 2*n11)) + ((-5*n2 + d*n2 - 2*n2^2 + 3*n2*n3 - n2*n5)*
     j[p4a, 0, 1 + n2, n3, n4, n5, 1, 0, 1, 0, 1, -1 + n11, 0, 1, 1])/
    ((-1 + n11)*(-d + 2*n11)) - 
   (n2*j[p4a, 0, 1 + n2, n3, n4, n5, 1, 0, 2, 0, 1, -1 + n11, -1, 1, 1])/
    ((-1 + n11)*(-d + 2*n11)) + 
   (n2*j[p4a, 0, 1 + n2, n3, n4, n5, 1, 0, 2, 0, 1, -1 + n11, 0, 0, 1])/
    ((-1 + n11)*(-d + 2*n11)) + ((4*n2 - d*n2 + 2*n2*n5)*
     j[p4a, 0, 1 + n2, n3, n4, 1 + n5, 0, 0, 1, 0, 1, -1 + n11, 0, 1, 1])/
    ((-1 + n11)*(-d + 2*n11)) - 
   (n2*(-4 + d - n5)*j[p4a, 0, 1 + n2, n3, n4, 1 + n5, 1, -1, 1, 0, 1, 
      -1 + n11, 0, 1, 1])/((-1 + n11)*(-d + 2*n11)) - 
   (n2*(-4 + d - n5)*j[p4a, 0, 1 + n2, n3, n4, 1 + n5, 1, 0, 0, 0, 1, 
      -1 + n11, 0, 1, 1])/((-1 + n11)*(-d + 2*n11)) + 
   (n2*(-4 + d - n5)*j[p4a, 0, 1 + n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 
      -1 + n11, -1, 1, 1])/((-1 + n11)*(-d + 2*n11)) + 
   ((8*n2 - 2*d*n2 + 3*n2*n5)*j[p4a, 0, 1 + n2, n3, n4, 1 + n5, 1, 0, 1, 0, 
      1, -1 + n11, 0, 0, 1])/((-1 + n11)*(-d + 2*n11)) - 
   (n2*n5*j[p4a, 0, 1 + n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, -1 + n11, 0, 1, 
      0])/((-1 + n11)*(-d + 2*n11)) - 
   (n2*n4*j[p4a, 0, 1 + n2, n3, 1 + n4, -1 + n5, 1, 0, 1, 0, 1, -1 + n11, 0, 
      1, 1])/((-1 + n11)*(-d + 2*n11)) + 
   (2*n2*n4*j[p4a, 0, 1 + n2, n3, 1 + n4, n5, 0, 0, 1, 0, 1, -1 + n11, 0, 1, 
      1])/((-1 + n11)*(-d + 2*n11)) + 
   (2*n2*n4*j[p4a, 0, 1 + n2, n3, 1 + n4, n5, 1, -1, 1, 0, 1, -1 + n11, 0, 1, 
      1])/((-1 + n11)*(-d + 2*n11)) - 
   (n2*n4*j[p4a, 0, 1 + n2, n3, 1 + n4, n5, 1, 0, 0, 0, 1, -1 + n11, 0, 1, 
      1])/((-1 + n11)*(-d + 2*n11)) - 
   (n2*n4*j[p4a, 0, 1 + n2, n3, 1 + n4, n5, 1, 0, 1, 0, 1, -1 + n11, -1, 1, 
      1])/((-1 + n11)*(-d + 2*n11)) + 
   (2*n2*n4*j[p4a, 0, 1 + n2, n3, 1 + n4, n5, 1, 0, 1, 0, 1, -1 + n11, 0, 0, 
      1])/((-1 + n11)*(-d + 2*n11)) - 
   (n2*n4*j[p4a, 0, 1 + n2, n3, 1 + n4, n5, 1, 0, 1, 0, 1, -1 + n11, 0, 1, 
      0])/((-1 + n11)*(-d + 2*n11)) - 
   (n2*n3*j[p4a, 0, 1 + n2, 1 + n3, n4, n5, 1, -1, 1, 0, 1, -1 + n11, 0, 1, 
      1])/((-1 + n11)*(-d + 2*n11)) - 
   (4*n2*n3*j[p4a, 0, 1 + n2, 1 + n3, n4, n5, 1, 0, 0, 0, 1, -1 + n11, 0, 1, 
      1])/((-1 + n11)*(-d + 2*n11)) + 
   (2*n2*n3*j[p4a, 0, 1 + n2, 1 + n3, n4, n5, 1, 0, 1, 0, 1, -1 + n11, -1, 1, 
      1])/((-1 + n11)*(-d + 2*n11)) - 
   (3*n2*n3*j[p4a, 0, 1 + n2, 1 + n3, n4, n5, 1, 0, 1, 0, 1, -1 + n11, 0, 0, 
      1])/((-1 + n11)*(-d + 2*n11)) - 
   (n2*(1 + n2)*j[p4a, 0, 2 + n2, -1 + n3, n4, n5, 1, 0, 1, 0, 1, -1 + n11, 
      0, 1, 1])/((-1 + n11)*(-d + 2*n11)) + 
   (n2*(1 + n2)*j[p4a, 0, 2 + n2, n3, n4, n5, 1, -1, 1, 0, 1, -1 + n11, 0, 1, 
      1])/((-1 + n11)*(-d + 2*n11)) + 
   (n2*(1 + n2)*j[p4a, 0, 2 + n2, n3, n4, n5, 1, 0, 0, 0, 1, -1 + n11, 0, 1, 
      1])/((-1 + n11)*(-d + 2*n11)) - 
   (n2*(1 + n2)*j[p4a, 0, 2 + n2, n3, n4, n5, 1, 0, 1, 0, 1, -1 + n11, -1, 1, 
      1])/((-1 + n11)*(-d + 2*n11)) + 
   (2*n2*(1 + n2)*j[p4a, 0, 2 + n2, n3, n4, n5, 1, 0, 1, 0, 1, -1 + n11, 0, 
      0, 1])/((-1 + n11)*(-d + 2*n11)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n14 == 1 && n5 == 0 && 
    n6 == 1 && n7 == 0 && n8 == 1 &&  !(n13 == 1 || n2 == 0 || n3 == 1) -> 
  j[p4a, 0, n2, n3, n4, 0, 1, 0, 1, n9, 1, 2, 0, -1 + n13, 1]/(1 - n13) - 
   (2*j[p4a, 0, n2, n3, n4, 0, 1, 0, 2, n9, 1, 1, 0, -1 + n13, 1])/
    (-1 + n13) + (n3*j[p4a, 0, n2, 1 + n3, n4, 0, 1, 0, 1, n9, 1, 1, 0, 
      -1 + n13, 1])/(-1 + n13) - 
   (n4*j[p4a, 0, 1 + n2, -2 + n3, 1 + n4, 0, 1, 0, 1, n9, 1, 1, 0, n13, 1])/
    (-1 + n3) - (n4*j[p4a, 0, 1 + n2, -2 + n3, 1 + n4, 0, 1, 0, 1, n9, 1, 2, 
      0, -1 + n13, 1])/((-1 + n13)*(-1 + n3)) + 
   j[p4a, 0, 1 + n2, -1 + n3, n4, 0, 1, 0, 0, n9, 1, 2, 0, n13, 1]/
    (-1 + n3) + ((2 - d + n3 + n4)*j[p4a, 0, 1 + n2, -1 + n3, n4, 0, 1, 0, 1, 
      n9, 1, 1, 0, n13, 1])/(-1 + n3) + 
   ((4 - n13 + n2 - n3 + n4)*j[p4a, 0, 1 + n2, -1 + n3, n4, 0, 1, 0, 1, n9, 
      1, 2, 0, -1 + n13, 1])/((-1 + n13)*(-1 + n3)) + 
   j[p4a, 0, 1 + n2, -1 + n3, n4, 0, 1, 0, 1, n9, 1, 2, 0, n13, 1]/(1 - n3) + 
   ((2 + d - 2*n13 + n2)*j[p4a, 0, 1 + n2, -1 + n3, n4, 0, 1, 0, 2, n9, 1, 1, 
      0, -1 + n13, 1])/((-1 + n13)*(-1 + n3)) - 
   j[p4a, 0, 1 + n2, -1 + n3, n4, 0, 1, 0, 2, n9, 1, 2, 0, -2 + n13, 1]/
    ((-1 + n13)*(-1 + n3)) + j[p4a, 0, 1 + n2, -1 + n3, n4, 0, 1, 0, 2, n9, 
     1, 2, 0, -1 + n13, 1]/((-1 + n13)*(-1 + n3)) - 
   (n4*j[p4a, 0, 1 + n2, -1 + n3, 1 + n4, -1, 1, 0, 1, n9, 1, 1, 0, n13, 1])/
    (-1 + n3) - (n4*j[p4a, 0, 1 + n2, -1 + n3, 1 + n4, -1, 1, 0, 1, n9, 1, 2, 
      0, -1 + n13, 1])/((-1 + n13)*(-1 + n3)) - 
   (n4*j[p4a, 0, 1 + n2, -1 + n3, 1 + n4, 0, 0, 0, 1, n9, 1, 1, 0, n13, 1])/
    (-1 + n3) - (n4*j[p4a, 0, 1 + n2, -1 + n3, 1 + n4, 0, 0, 0, 1, n9, 1, 2, 
      0, -1 + n13, 1])/((-1 + n13)*(-1 + n3)) + 
   (n4*j[p4a, 0, 1 + n2, -1 + n3, 1 + n4, 0, 1, -1, 1, n9, 1, 1, 0, n13, 1])/
    (-1 + n3) + (n4*j[p4a, 0, 1 + n2, -1 + n3, 1 + n4, 0, 1, -1, 1, n9, 1, 2, 
      0, -1 + n13, 1])/((-1 + n13)*(-1 + n3)) + 
   (n4*j[p4a, 0, 1 + n2, -1 + n3, 1 + n4, 0, 1, 0, 0, n9, 1, 1, 0, n13, 1])/
    (-1 + n3) + (n4*j[p4a, 0, 1 + n2, -1 + n3, 1 + n4, 0, 1, 0, 0, n9, 1, 2, 
      0, -1 + n13, 1])/((-1 + n13)*(-1 + n3)) + 
   (n4*j[p4a, 0, 1 + n2, -1 + n3, 1 + n4, 0, 1, 0, 1, n9, 1, 1, 0, -1 + n13, 
      1])/(-1 + n13) + (n4*j[p4a, 0, 1 + n2, -1 + n3, 1 + n4, 0, 1, 0, 1, n9, 
      1, 1, 0, n13, 0])/(-1 + n3) + 
   (n4*j[p4a, 0, 1 + n2, -1 + n3, 1 + n4, 0, 1, 0, 1, n9, 1, 2, 0, -1 + n13, 
      0])/((-1 + n13)*(-1 + n3)) + 
   (2*j[p4a, 0, 1 + n2, n3, n4, 0, 1, -1, 1, n9, 1, 2, 0, -1 + n13, 1])/
    (-1 + n13) + (2*j[p4a, 0, 1 + n2, n3, n4, 0, 1, -1, 2, n9, 1, 1, 0, 
      -1 + n13, 1])/(-1 + n13) + j[p4a, 0, 1 + n2, n3, n4, 0, 1, 0, 0, n9, 1, 
    1, 0, n13, 1] + (2*j[p4a, 0, 1 + n2, n3, n4, 0, 1, 0, 0, n9, 1, 2, 0, 
      -1 + n13, 1])/(-1 + n13) + ((-1 - n13 - 3*n2 + 3*n3 + n4)*
     j[p4a, 0, 1 + n2, n3, n4, 0, 1, 0, 1, n9, 1, 1, 0, -1 + n13, 1])/
    (-1 + n13) + j[p4a, 0, 1 + n2, n3, n4, 0, 1, 0, 1, n9, 1, 2, -1, 
     -1 + n13, 1]/(1 - n13) + j[p4a, 0, 1 + n2, n3, n4, 0, 1, 0, 2, n9, 1, 1, 
     -1, -1 + n13, 1]/(1 - n13) + j[p4a, 0, 1 + n2, n3, n4, 0, 1, 0, 2, n9, 
     1, 1, 0, -2 + n13, 1]/(-1 + n13) - 
   (n4*j[p4a, 0, 1 + n2, n3, 1 + n4, -1, 1, 0, 1, n9, 1, 1, 0, -1 + n13, 1])/
    (-1 + n13) + (n4*j[p4a, 0, 1 + n2, n3, 1 + n4, 0, 0, 0, 1, n9, 1, 1, 0, 
      -1 + n13, 1])/(-1 + n13) + 
   (n4*j[p4a, 0, 1 + n2, n3, 1 + n4, 0, 1, -1, 1, n9, 1, 1, 0, -1 + n13, 1])/
    (-1 + n13) - (n4*j[p4a, 0, 1 + n2, n3, 1 + n4, 0, 1, 0, 0, n9, 1, 1, 0, 
      -1 + n13, 1])/(-1 + n13) - 
   (n4*j[p4a, 0, 1 + n2, n3, 1 + n4, 0, 1, 0, 1, n9, 1, 1, 0, -1 + n13, 0])/
    (-1 + n13) - (2*n3*j[p4a, 0, 1 + n2, 1 + n3, n4, 0, 1, 0, 0, n9, 1, 1, 0, 
      -1 + n13, 1])/(-1 + n13) + 
   (n3*j[p4a, 0, 1 + n2, 1 + n3, n4, 0, 1, 0, 1, n9, 1, 1, -1, -1 + n13, 1])/
    (-1 + n13) - (2*n3*j[p4a, 0, 1 + n2, 1 + n3, n4, 0, 1, 0, 1, n9, 1, 1, 0, 
      -2 + n13, 1])/(-1 + n13) + 
   ((1 + n2)*j[p4a, 0, 2 + n2, -2 + n3, n4, 0, 1, 0, 1, n9, 1, 2, 0, 
      -1 + n13, 1])/((-1 + n13)*(-1 + n3)) + 
   ((1 + n2)*j[p4a, 0, 2 + n2, -2 + n3, n4, 0, 1, 0, 2, n9, 1, 1, 0, 
      -1 + n13, 1])/((-1 + n13)*(-1 + n3)) - 
   (2*(1 + n2)*j[p4a, 0, 2 + n2, -1 + n3, n4, 0, 1, -1, 1, n9, 1, 2, 0, 
      -1 + n13, 1])/((-1 + n13)*(-1 + n3)) - 
   (2*(1 + n2)*j[p4a, 0, 2 + n2, -1 + n3, n4, 0, 1, -1, 2, n9, 1, 1, 0, 
      -1 + n13, 1])/((-1 + n13)*(-1 + n3)) + 
   ((-1 - n2)*j[p4a, 0, 2 + n2, -1 + n3, n4, 0, 1, 0, 1, n9, 1, 1, 0, 
      -1 + n13, 1])/(-1 + n13) + 
   ((1 + n2)*j[p4a, 0, 2 + n2, -1 + n3, n4, 0, 1, 0, 1, n9, 1, 2, -1, 
      -1 + n13, 1])/((-1 + n13)*(-1 + n3)) - 
   (2*(1 + n2)*j[p4a, 0, 2 + n2, -1 + n3, n4, 0, 1, 0, 1, n9, 1, 2, 0, 
      -2 + n13, 1])/((-1 + n13)*(-1 + n3)) + 
   ((1 + n2)*j[p4a, 0, 2 + n2, -1 + n3, n4, 0, 1, 0, 2, n9, 1, 1, -1, 
      -1 + n13, 1])/((-1 + n13)*(-1 + n3)) - 
   (2*(1 + n2)*j[p4a, 0, 2 + n2, -1 + n3, n4, 0, 1, 0, 2, n9, 1, 1, 0, 
      -2 + n13, 1])/((-1 + n13)*(-1 + n3)) + 
   (2*(1 + n2)*j[p4a, 0, 2 + n2, n3, n4, 0, 1, 0, 0, n9, 1, 1, 0, -1 + n13, 
      1])/(-1 + n13) + ((-1 - n2)*j[p4a, 0, 2 + n2, n3, n4, 0, 1, 0, 1, n9, 
      1, 1, -1, -1 + n13, 1])/(-1 + n13) + 
   (2*(1 + n2)*j[p4a, 0, 2 + n2, n3, n4, 0, 1, 0, 1, n9, 1, 1, 0, -2 + n13, 
      1])/(-1 + n13), j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?Positive, (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, 
    (n7_)?NonPositive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n6 == 1 && 
    n7 == 0 && n8 == 1 && n9 == 0 &&  !(n2 == 0 || n3 == 1 || n4 == 0 || 
      n5 == 0) -> j[p4a, -2 + n1, 1 + n2, -2 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 
     1, 0, 2, 1]/(2*(-1 + n3)) + j[p4a, -2 + n1, 1 + n2, -2 + n3, 1 + n4, n5, 
     1, 0, 1, 0, 1, 1, 0, 2, 1]/(2*(-1 + n3)) + 
   ((1 + n5)*j[p4a, -2 + n1, 1 + n2, -1 + n3, -1 + n4, 2 + n5, 1, 0, 1, 0, 1, 
      1, 0, 1, 1])/(2*(-1 + n3)) + j[p4a, -2 + n1, 1 + n2, -1 + n3, n4, 
     1 + n5, 0, 0, 2, 0, 1, 1, 0, 1, 1]/(2*(-1 + n3)) + 
   j[p4a, -2 + n1, 1 + n2, -1 + n3, n4, 1 + n5, 1, 0, 1, 0, 0, 2, 0, 1, 1]/
    (-1 + n3) + ((-8 + 3*d - n1 - 2*n2 - n3 - n4 - n5)*
     j[p4a, -2 + n1, 1 + n2, -1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-1 + n3)) + j[p4a, -2 + n1, 1 + n2, -1 + n3, n4, 1 + n5, 1, 0, 1, 0, 
     1, 1, 0, 2, 0]/(2*(-1 + n3)) - j[p4a, -2 + n1, 1 + n2, -1 + n3, 1 + n4, 
     n5, 0, 0, 2, 0, 1, 1, 0, 1, 1]/(2*(-1 + n3)) + 
   ((1 - d + n1 + n3 + n4)*j[p4a, -2 + n1, 1 + n2, -1 + n3, 1 + n4, n5, 1, 0, 
      1, 0, 1, 1, 0, 1, 1])/(2*(-1 + n3)) - 
   j[p4a, -2 + n1, 1 + n2, -1 + n3, 1 + n4, n5, 1, 0, 1, 0, 1, 1, 0, 2, 0]/
    (2*(-1 + n3)) + j[p4a, -2 + n1, 1 + n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 
     0, 1, 0]/2 - j[p4a, -2 + n1, 1 + n2, n3, 1 + n4, n5, 1, 0, 1, 0, 1, 1, 
     0, 1, 0]/2 + ((1 + n2)*j[p4a, -2 + n1, 2 + n2, -1 + n3, n4, 1 + n5, 0, 
      0, 1, 0, 1, 1, 0, 1, 1])/(2*(-1 + n3)) + 
   ((1 + n2)*j[p4a, -2 + n1, 2 + n2, -1 + n3, n4, 1 + n5, 1, 0, 0, 0, 1, 1, 
      0, 1, 1])/(2*(-1 + n3)) + 
   ((-1 - n2)*j[p4a, -2 + n1, 2 + n2, -1 + n3, 1 + n4, n5, 0, 0, 1, 0, 1, 1, 
      0, 1, 1])/(2*(-1 + n3)) + 
   ((1 + n2)*j[p4a, -2 + n1, 2 + n2, -1 + n3, 1 + n4, n5, 1, 0, 0, 0, 1, 1, 
      0, 1, 1])/(2*(-1 + n3)) + j[p4a, -1 + n1, n2, -1 + n3, n4, 1 + n5, 0, 
     0, 1, 0, 2, 1, 0, 1, 1]/(2*(-1 + n3)) + 
   ((9 - 3*d + n2 + n3 + n4 + n5)*j[p4a, -1 + n1, n2, -1 + n3, n4, 1 + n5, 1, 
      0, 1, 0, 1, 1, 0, 1, 1])/(2*(-1 + n3)) + 
   ((1 + n5)*j[p4a, -1 + n1, n2, -1 + n3, n4, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 
      1])/(2*(-1 + n3)) + ((-1 - n5)*j[p4a, -1 + n1, n2, -1 + n3, n4, 2 + n5, 
      1, 0, 1, 0, 1, 1, 0, 1, 0])/(2*(-1 + n3)) - 
   j[p4a, -1 + n1, n2, -1 + n3, 1 + n4, n5, 0, 0, 1, 0, 2, 1, 0, 1, 1]/
    (2*(-1 + n3)) + ((-7 + 3*d - 2*n1 - n2 - n3 - n4 - n5)*
     j[p4a, -1 + n1, n2, -1 + n3, 1 + n4, n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-1 + n3)) - (n5*j[p4a, -1 + n1, n2, -1 + n3, 1 + n4, 1 + n5, 1, 0, 1, 
      0, 1, 1, 0, 0, 1])/(2*(-1 + n3)) + 
   (n5*j[p4a, -1 + n1, n2, -1 + n3, 1 + n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 
      0])/(2*(-1 + n3)) - j[p4a, -1 + n1, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 
     1, 0, 1, 0]/2 + j[p4a, -1 + n1, n2, n3, 1 + n4, n5, 1, 0, 1, 0, 1, 1, 0, 
     1, 0]/2 + j[p4a, -1 + n1, 1 + n2, -2 + n3, n4, 1 + n5, 1, 0, 1, -1, 2, 
     1, 0, 1, 1]/(2*(-1 + n3)) + 
   ((-n2 - n4)*j[p4a, -1 + n1, 1 + n2, -2 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 
      0, 1, 1])/(2*(-1 + n3)) - j[p4a, -1 + n1, 1 + n2, -2 + n3, n4, 1 + n5, 
     1, 0, 1, 0, 1, 1, 0, 2, 1]/(2*(-1 + n3)) - 
   j[p4a, -1 + n1, 1 + n2, -2 + n3, 1 + n4, n5, 1, 0, 1, -1, 2, 1, 0, 1, 1]/
    (2*(-1 + n3)) + ((1 + n2 + n4)*j[p4a, -1 + n1, 1 + n2, -2 + n3, 1 + n4, 
      n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/(2*(-1 + n3)) - 
   j[p4a, -1 + n1, 1 + n2, -2 + n3, 1 + n4, n5, 1, 0, 1, 0, 1, 1, 0, 2, 1]/
    (2*(-1 + n3)) + ((2 - n3)*j[p4a, -1 + n1, 1 + n2, -1 + n3, -1 + n4, 
      1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/(2*(-1 + n3)) - 
   j[p4a, -1 + n1, 1 + n2, -1 + n3, -1 + n4, 1 + n5, 1, 0, 2, 0, 1, 0, 0, 1, 
     1]/(2*(-1 + n3)) - j[p4a, -1 + n1, 1 + n2, -1 + n3, -1 + n4, 1 + n5, 1, 
     0, 2, 0, 1, 1, 0, 0, 1]/(2*(-1 + n3)) + 
   ((-1 - n5)*j[p4a, -1 + n1, 1 + n2, -1 + n3, -1 + n4, 2 + n5, 1, 0, 1, 0, 
      1, 1, 0, 1, 1])/(2*(-1 + n3)) + 
   ((-2 + n3)*j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, n5, 1, 0, 1, 0, 1, 1, 0, 
      1, 1])/(2*(-1 + n3)) + j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, n5, 1, 0, 
     2, 0, 1, 0, 0, 1, 1]/(2*(-1 + n3)) + 
   j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, n5, 1, 0, 2, 0, 1, 1, 0, 0, 1]/
    (2*(-1 + n3)) - j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, 1 + n5, 0, -1, 1, 0, 
     2, 1, 0, 1, 1]/(2*(-1 + n3)) + 
   ((-1 + n2)*j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, 1 + n5, 0, 0, 1, 0, 1, 1, 
      0, 1, 1])/(2*(-1 + n3)) + j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, 1 + n5, 
     0, 0, 1, 0, 1, 2, -1, 1, 1]/(2*(-1 + n3)) - 
   j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, 1 + n5, 0, 0, 1, 0, 1, 2, 0, 1, 1]/
    (2*(-1 + n3)) + j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, 1 + n5, 0, 0, 1, 0, 
     2, 1, -1, 1, 1]/(2*(-1 + n3)) - j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, 
     1 + n5, 0, 0, 1, 0, 2, 1, 0, 1, 1]/(2*(-1 + n3)) + 
   j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, 1 + n5, 0, 0, 2, 0, 1, 1, -1, 1, 1]/
    (2*(-1 + n3)) + j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, 1 + n5, 1, -1, 0, 0, 
     1, 2, 0, 1, 1]/(1 - n3) + ((-3 + d + 2*n1 + n2 - n3 - n4 + n5)*
     j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, 1 + n5, 1, -1, 1, 0, 1, 1, 0, 1, 
      1])/(2*(-1 + n3)) - j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, 1 + n5, 1, 0, 
     0, -1, 2, 1, 0, 1, 1]/(2*(-1 + n3)) + 
   ((-2 + n1 + n2 + n4)*j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, 1 + n5, 1, 0, 0, 
      0, 1, 1, 0, 1, 1])/(2*(-1 + n3)) + 
   j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, 1 + n5, 1, 0, 0, 0, 1, 2, -1, 1, 1]/
    (2*(-1 + n3)) - j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, 1 + n5, 1, 0, 0, 0, 
     1, 2, 0, 1, 1]/(2*(-1 + n3)) + ((9 - 4*d + 2*n1 + 2*n2 + 2*n3 + n4 + n5)*
     j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, 1 + n5, 1, 0, 1, -1, 1, 1, 0, 1, 
      1])/(2*(-1 + n3)) - j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, 1 + n5, 1, 0, 
     1, -1, 2, 1, 0, 0, 1]/(2*(-1 + n3)) + 
   ((-2 + n1 + n4)*j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, 1 + n5, 1, 0, 1, 0, 
      0, 1, 0, 1, 1])/(2*(-1 + n3)) + j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, 
     1 + n5, 1, 0, 1, 0, 0, 2, -1, 1, 1]/(2*(-1 + n3)) - 
   j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, 1 + n5, 1, 0, 1, 0, 0, 2, 0, 1, 1]/
    (2*(-1 + n3)) + ((2 - n1 - n4)*j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, 
      1 + n5, 1, 0, 1, 0, 1, 0, 0, 1, 1])/(2*(-1 + n3)) + 
   ((4 - d)*j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 
      -1, 1, 1])/(2*(-1 + n3)) + 
   ((1 + 2*n2 - n5)*j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, 1 + n5, 1, 0, 1, 0, 
      1, 1, 0, 0, 1])/(2*(-1 + n3)) + 
   ((-1 + n4 + n5)*j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, 1 + n5, 1, 0, 1, 0, 
      1, 1, 0, 1, 0])/(2*(-1 + n3)) + 
   ((-4 + 2*d - n1 - n2 - n3 - 2*n4)*j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, 
      1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/(2*(-1 + n3)) + 
   j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 2, 0]/
    (2*(-1 + n3)) + ((-1 - n5)*j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, 2 + n5, 
      1, -1, 1, -1, 1, 1, 0, 1, 1])/(2*(-1 + n3)) + 
   ((1 + n5)*j[p4a, -1 + n1, 1 + n2, -1 + n3, n4, 2 + n5, 1, -1, 1, 0, 1, 1, 
      0, 1, 1])/(2*(-1 + n3)) + j[p4a, -1 + n1, 1 + n2, -1 + n3, 1 + n4, n5, 
     0, -1, 1, 0, 2, 1, 0, 1, 1]/(2*(-1 + n3)) + 
   ((1 - n2)*j[p4a, -1 + n1, 1 + n2, -1 + n3, 1 + n4, n5, 0, 0, 1, 0, 1, 1, 
      0, 1, 1])/(2*(-1 + n3)) - j[p4a, -1 + n1, 1 + n2, -1 + n3, 1 + n4, n5, 
     0, 0, 1, 0, 1, 2, -1, 1, 1]/(2*(-1 + n3)) + 
   j[p4a, -1 + n1, 1 + n2, -1 + n3, 1 + n4, n5, 0, 0, 1, 0, 1, 2, 0, 1, 1]/
    (2*(-1 + n3)) - j[p4a, -1 + n1, 1 + n2, -1 + n3, 1 + n4, n5, 0, 0, 1, 0, 
     2, 1, -1, 1, 1]/(2*(-1 + n3)) + j[p4a, -1 + n1, 1 + n2, -1 + n3, 1 + n4, 
     n5, 0, 0, 1, 0, 2, 1, 0, 1, 1]/(2*(-1 + n3)) - 
   j[p4a, -1 + n1, 1 + n2, -1 + n3, 1 + n4, n5, 0, 0, 2, 0, 1, 1, -1, 1, 1]/
    (2*(-1 + n3)) + j[p4a, -1 + n1, 1 + n2, -1 + n3, 1 + n4, n5, 0, 0, 2, 0, 
     1, 1, 0, 1, 1]/(-1 + n3) + ((7 - 3*d + 2*n1 + n2 + n3 + n4 + n5)*
     j[p4a, -1 + n1, 1 + n2, -1 + n3, 1 + n4, n5, 1, -1, 1, 0, 1, 1, 0, 1, 
      1])/(2*(-1 + n3)) + j[p4a, -1 + n1, 1 + n2, -1 + n3, 1 + n4, n5, 1, 0, 
     0, -1, 2, 1, 0, 1, 1]/(2*(-1 + n3)) + 
   ((-1 + n1 - n2 - n4)*j[p4a, -1 + n1, 1 + n2, -1 + n3, 1 + n4, n5, 1, 0, 0, 
      0, 1, 1, 0, 1, 1])/(2*(-1 + n3)) - 
   j[p4a, -1 + n1, 1 + n2, -1 + n3, 1 + n4, n5, 1, 0, 0, 0, 1, 2, -1, 1, 1]/
    (2*(-1 + n3)) + j[p4a, -1 + n1, 1 + n2, -1 + n3, 1 + n4, n5, 1, 0, 0, 0, 
     1, 2, 0, 1, 1]/(2*(-1 + n3)) + 
   ((-9 + 4*d - 2*n1 - 2*n2 - 2*n3 - n4 - n5)*j[p4a, -1 + n1, 1 + n2, 
      -1 + n3, 1 + n4, n5, 1, 0, 1, -1, 1, 1, 0, 1, 1])/(2*(-1 + n3)) + 
   j[p4a, -1 + n1, 1 + n2, -1 + n3, 1 + n4, n5, 1, 0, 1, -1, 2, 1, 0, 0, 1]/
    (2*(-1 + n3)) + ((-1 + n1 - n4)*j[p4a, -1 + n1, 1 + n2, -1 + n3, 1 + n4, 
      n5, 1, 0, 1, 0, 0, 1, 0, 1, 1])/(2*(-1 + n3)) - 
   j[p4a, -1 + n1, 1 + n2, -1 + n3, 1 + n4, n5, 1, 0, 1, 0, 0, 2, -1, 1, 1]/
    (2*(-1 + n3)) + j[p4a, -1 + n1, 1 + n2, -1 + n3, 1 + n4, n5, 1, 0, 1, 0, 
     0, 2, 0, 1, 1]/(2*(-1 + n3)) + 
   ((1 - n1 + n4)*j[p4a, -1 + n1, 1 + n2, -1 + n3, 1 + n4, n5, 1, 0, 1, 0, 1, 
      0, 0, 1, 1])/(2*(-1 + n3)) + 
   ((-4 + d)*j[p4a, -1 + n1, 1 + n2, -1 + n3, 1 + n4, n5, 1, 0, 1, 0, 1, 1, 
      -1, 1, 1])/(2*(-1 + n3)) + 
   ((-2 - 2*n2 + n5)*j[p4a, -1 + n1, 1 + n2, -1 + n3, 1 + n4, n5, 1, 0, 1, 0, 
      1, 1, 0, 0, 1])/(2*(-1 + n3)) + 
   ((1 - n4 - n5)*j[p4a, -1 + n1, 1 + n2, -1 + n3, 1 + n4, n5, 1, 0, 1, 0, 1, 
      1, 0, 1, 0])/(2*(-1 + n3)) + 
   ((3 - n1 + n2 - n3 - n5)*j[p4a, -1 + n1, 1 + n2, -1 + n3, 1 + n4, n5, 1, 
      0, 1, 0, 1, 1, 0, 1, 1])/(2*(-1 + n3)) + 
   j[p4a, -1 + n1, 1 + n2, -1 + n3, 1 + n4, n5, 1, 0, 1, 0, 1, 1, 0, 2, 0]/
    (2*(-1 + n3)) - (n5*j[p4a, -1 + n1, 1 + n2, -1 + n3, 1 + n4, 1 + n5, 1, 
      -1, 1, -1, 1, 1, 0, 1, 1])/(2*(-1 + n3)) + 
   (n5*j[p4a, -1 + n1, 1 + n2, -1 + n3, 1 + n4, 1 + n5, 1, -1, 1, 0, 1, 1, 0, 
      1, 1])/(2*(-1 + n3)) + j[p4a, -1 + n1, 1 + n2, n3, -1 + n4, 1 + n5, 1, 
     0, 0, 0, 1, 1, 0, 1, 1]/2 + j[p4a, -1 + n1, 1 + n2, n3, -1 + n4, 1 + n5, 
     1, 0, 1, 0, 0, 1, 0, 1, 1]/2 - j[p4a, -1 + n1, 1 + n2, n3, -1 + n4, 
     1 + n5, 1, 0, 1, 0, 1, 0, 0, 1, 1]/2 - j[p4a, -1 + n1, 1 + n2, n3, 
    -1 + n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1] - 
   j[p4a, -1 + n1, 1 + n2, n3, n4, n5, 1, 0, 0, 0, 1, 1, 0, 1, 1]/2 - 
   j[p4a, -1 + n1, 1 + n2, n3, n4, n5, 1, 0, 1, 0, 0, 1, 0, 1, 1]/2 + 
   j[p4a, -1 + n1, 1 + n2, n3, n4, n5, 1, 0, 1, 0, 1, 0, 0, 1, 1]/2 + 
   j[p4a, -1 + n1, 1 + n2, n3, n4, n5, 1, 0, 1, 0, 1, 1, 0, 1, 1] + 
   j[p4a, -1 + n1, 1 + n2, n3, n4, 1 + n5, 1, -1, 1, 0, 1, 1, 0, 1, 0]/2 + 
   j[p4a, -1 + n1, 1 + n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 0]/2 - 
   j[p4a, -1 + n1, 1 + n2, n3, 1 + n4, n5, 1, -1, 1, 0, 1, 1, 0, 1, 0]/2 + 
   j[p4a, -1 + n1, 1 + n2, n3, 1 + n4, n5, 1, 0, 1, 0, 1, 1, 0, 1, 0]/2 + 
   ((1 + n2)*j[p4a, -1 + n1, 2 + n2, -2 + n3, n4, n5, 1, 0, 1, 0, 1, 1, 0, 1, 
      1])/(2*(-1 + n3)) + ((-1 - n2)*j[p4a, -1 + n1, 2 + n2, -2 + n3, 1 + n4, 
      -1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/(2*(-1 + n3)) + 
   ((-1 - n2)*j[p4a, -1 + n1, 2 + n2, -1 + n3, n4, n5, 1, 0, 0, 0, 1, 1, 0, 
      1, 1])/(2*(-1 + n3)) + ((-1 - n2)*j[p4a, -1 + n1, 2 + n2, -1 + n3, n4, 
      n5, 1, 0, 1, 0, 0, 1, 0, 1, 1])/(2*(-1 + n3)) + 
   ((-1 - n2)*j[p4a, -1 + n1, 2 + n2, -1 + n3, n4, n5, 1, 0, 1, 0, 1, 1, 0, 
      0, 1])/(-1 + n3) + ((1 + n2)*j[p4a, -1 + n1, 2 + n2, -1 + n3, n4, n5, 
      1, 0, 1, 0, 1, 1, 0, 1, 1])/(-1 + n3) + 
   ((-1 - n2)*j[p4a, -1 + n1, 2 + n2, -1 + n3, n4, 1 + n5, 0, -1, 1, 0, 1, 1, 
      0, 1, 1])/(2*(-1 + n3)) + 
   ((1 + n2)*j[p4a, -1 + n1, 2 + n2, -1 + n3, n4, 1 + n5, 0, 0, 1, 0, 1, 1, 
      -1, 1, 1])/(2*(-1 + n3)) + 
   ((-1 - n2)*j[p4a, -1 + n1, 2 + n2, -1 + n3, n4, 1 + n5, 1, -1, 1, 0, 0, 1, 
      0, 1, 1])/(2*(-1 + n3)) + 
   ((1 + n2)*j[p4a, -1 + n1, 2 + n2, -1 + n3, n4, 1 + n5, 1, -1, 1, 0, 1, 1, 
      0, 1, 1])/(2*(-1 + n3)) + 
   ((-1 - n2)*j[p4a, -1 + n1, 2 + n2, -1 + n3, n4, 1 + n5, 1, 0, 0, 0, 1, 1, 
      0, 1, 1])/(2*(-1 + n3)) + 
   ((1 + n2)*j[p4a, -1 + n1, 2 + n2, -1 + n3, 1 + n4, -1 + n5, 1, 0, 0, 0, 1, 
      1, 0, 1, 1])/(2*(-1 + n3)) + 
   ((1 + n2)*j[p4a, -1 + n1, 2 + n2, -1 + n3, 1 + n4, -1 + n5, 1, 0, 1, 0, 0, 
      1, 0, 1, 1])/(2*(-1 + n3)) + 
   ((1 + n2)*j[p4a, -1 + n1, 2 + n2, -1 + n3, 1 + n4, -1 + n5, 1, 0, 1, 0, 1, 
      1, 0, 0, 1])/(-1 + n3) + 
   ((-1 - n2)*j[p4a, -1 + n1, 2 + n2, -1 + n3, 1 + n4, -1 + n5, 1, 0, 1, 0, 
      1, 1, 0, 1, 1])/(-1 + n3) + 
   ((1 + n2)*j[p4a, -1 + n1, 2 + n2, -1 + n3, 1 + n4, n5, 0, -1, 1, 0, 1, 1, 
      0, 1, 1])/(2*(-1 + n3)) + 
   ((-1 - n2)*j[p4a, -1 + n1, 2 + n2, -1 + n3, 1 + n4, n5, 0, 0, 1, 0, 1, 1, 
      -1, 1, 1])/(2*(-1 + n3)) + 
   ((1 + n2)*j[p4a, -1 + n1, 2 + n2, -1 + n3, 1 + n4, n5, 0, 0, 1, 0, 1, 1, 
      0, 1, 1])/(-1 + n3) + ((-1 - n2)*j[p4a, -1 + n1, 2 + n2, -1 + n3, 
      1 + n4, n5, 1, -1, 1, 0, 0, 1, 0, 1, 1])/(2*(-1 + n3)) + 
   ((1 + n2)*j[p4a, -1 + n1, 2 + n2, -1 + n3, 1 + n4, n5, 1, -1, 1, 0, 1, 1, 
      0, 1, 1])/(2*(-1 + n3)) + 
   ((-1 - n2)*j[p4a, -1 + n1, 2 + n2, -1 + n3, 1 + n4, n5, 1, 0, 0, 0, 1, 1, 
      0, 1, 1])/(2*(-1 + n3)) + 
   ((-1 + n1)*j[p4a, n1, n2, -1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-1 + n3)) + ((1 - n1)*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, 1, 0, 1, 0, 
      1, 1, 0, 0, 1])/(2*(-1 + n3)) + 
   ((-1 + n1 - n4)*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, 1, 0, 1, 0, 1, 1, 0, 
      1, 1])/(-1 + n3) + ((1 - n1)*j[p4a, n1, 1 + n2, -1 + n3, n4, n5, 1, 0, 
      1, 0, 1, 1, 0, 0, 1])/(2*(-1 + n3)) + 
   ((3 - d + 2*n1 + n2 + n5)*j[p4a, n1, 1 + n2, -1 + n3, n4, n5, 1, 0, 1, 0, 
      1, 1, 0, 1, 1])/(-1 + n3) + j[p4a, n1, 1 + n2, -1 + n3, n4, n5, 1, 0, 
     1, 0, 1, 1, 0, 2, 1]/(1 - n3) + j[p4a, n1, 1 + n2, -1 + n3, n4, n5, 1, 
     0, 2, 0, 1, 0, 0, 1, 1]/(1 - n3) + 
   ((1 - n1)*j[p4a, n1, 1 + n2, -1 + n3, n4, 1 + n5, 1, 0, 0, 0, 1, 1, 0, 1, 
      1])/(2*(-1 + n3)) + ((-1 + n1)*j[p4a, n1, 1 + n2, -1 + n3, n4, 1 + n5, 
      1, 0, 1, -1, 1, 1, 0, 0, 1])/(2*(-1 + n3)) - 
   (n5*j[p4a, n1, 1 + n2, -1 + n3, n4, 1 + n5, 1, 0, 1, -1, 1, 1, 0, 1, 1])/
    (-1 + n3) + ((1 - n1)*j[p4a, n1, 1 + n2, -1 + n3, n4, 1 + n5, 1, 0, 1, 0, 
      0, 1, 0, 1, 1])/(2*(-1 + n3)) + 
   ((-1 + n1)*j[p4a, n1, 1 + n2, -1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 0, 0, 1, 
      1])/(2*(-1 + n3)) + ((-1 + n1)*j[p4a, n1, 1 + n2, -1 + n3, 1 + n4, 
      -1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/(2*(-1 + n3)) + 
   ((1 - n1 + n4)*j[p4a, n1, 1 + n2, -1 + n3, 1 + n4, -1 + n5, 1, 0, 1, 0, 1, 
      1, 0, 1, 1])/(-1 + n3) + 
   ((1 - n1 + 2*n4)*j[p4a, n1, 1 + n2, -1 + n3, 1 + n4, n5, 1, 0, 0, 0, 1, 1, 
      0, 1, 1])/(2*(-1 + n3)) + 
   ((1 - n1)*j[p4a, n1, 1 + n2, -1 + n3, 1 + n4, n5, 1, 0, 1, -1, 1, 1, 0, 0, 
      1])/(2*(-1 + n3)) + ((-1 + n1 - n4)*j[p4a, n1, 1 + n2, -1 + n3, 1 + n4, 
      n5, 1, 0, 1, -1, 1, 1, 0, 1, 1])/(-1 + n3) + 
   ((1 - n1 + 2*n4)*j[p4a, n1, 1 + n2, -1 + n3, 1 + n4, n5, 1, 0, 1, 0, 0, 1, 
      0, 1, 1])/(2*(-1 + n3)) + 
   ((-1 + n1 - 2*n4)*j[p4a, n1, 1 + n2, -1 + n3, 1 + n4, n5, 1, 0, 1, 0, 1, 
      0, 0, 1, 1])/(2*(-1 + n3)) + j[p4a, n1, 1 + n2, n3, n4, n5, 1, 0, 0, 0, 
    1, 1, 0, 1, 1] + j[p4a, n1, 1 + n2, n3, n4, n5, 1, 0, 1, 0, 0, 1, 0, 1, 
    1] - j[p4a, n1, 1 + n2, n3, n4, n5, 1, 0, 1, 0, 1, 0, 0, 1, 1] + 
   j[p4a, n1, 1 + n2, n3, n4, n5, 1, 0, 1, 0, 1, 1, 0, 0, 1] - 
   j[p4a, n1, 1 + n2, n3, n4, n5, 1, 0, 1, 0, 1, 1, 0, 1, 1] + 
   ((-1 - n2)*j[p4a, n1, 2 + n2, -1 + n3, n4, n5, 1, 0, 1, 0, 0, 1, 0, 1, 1])/
    (-1 + n3), j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n3 == 1 && n8 == 1 && n9 == 0 &&  !(n5 == 0 || n6 == 1) -> 
  ((-4 + d - n4 - 2*n5)*j[p4a, n1, -1, 1, n4, 1 + n5, n6, n7, 1, 0, 1, 1, 0, 
      1, 1])/(2*(-2 + d - n4 - n5 - n6)) - 
   (n4*j[p4a, n1, 0, 0, 1 + n4, n5, -1 + n6, n7, 1, 0, 1, 1, 0, 1, 2])/
    (2*(-1 + n6)*(2 - d + n4 + n5 + n6)) + 
   ((-4 + d - n4)*j[p4a, n1, 0, 1, n4, 1 + n5, -1 + n6, n7, 1, 0, 1, 1, 0, 0, 
      2])/(2*(-2 + d - n4 - n5 - n6)*(-1 + n6)) + 
   ((-4 + d - n4 - 2*n5)*j[p4a, n1, 0, 1, n4, 1 + n5, -1 + n6, n7, 1, 0, 1, 
      1, 0, 1, 1])/(2*(-1 + n6)) - 
   (n4*j[p4a, n1, 0, 1, 1 + n4, n5, -1 + n6, n7, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-1 + n6)) + (n4*j[p4a, n1, 0, 1, 1 + n4, n5, n6, n7, 0, 0, 1, 1, 0, 
      1, 1])/(2*(2 - d + n4 + n5 + n6)) + 
   (n4*(4 - d + n4 + n5)*j[p4a, n1, 0, 1, 1 + n4, 1 + n5, -1 + n6, -1 + n7, 
      1, 0, 1, 1, 0, 1, 1])/(2*(-1 + n6)*(2 - d + n4 + n5 + n6)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n13 == 1 && n14 == 1 && n2 == 0 && n3 == 1 && 
    n6 == 1 && n7 == 0 && n8 == 1 && n12 != 0 -> 
  (3*(1 + n12)*j[p4a, -1 + n1, -1, 1, n4, n5, 1, 0, 1, n9, 1, 1, 2 + n12, 1, 
      1])/(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) + 
   (3*n9*j[p4a, -1 + n1, -1, 1, n4, n5, 1, 0, 1, 1 + n9, 1, 1, 1 + n12, 1, 
      1])/(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) - 
   j[p4a, -1 + n1, 0, 0, n4, n5, 1, 0, 1, n9, 1, 1, 1 + n12, 2, 1]/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) + 
   ((1 + n12)*j[p4a, -1 + n1, 0, 0, n4, n5, 1, 0, 1, n9, 1, 1, 2 + n12, 1, 
      1])/(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) + 
   (2*j[p4a, -1 + n1, 0, 0, n4, n5, 1, 0, 1, n9, 2, 1, 1 + n12, 1, 1])/
    (-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9) + 
   (2*(1 + n12)*j[p4a, -1 + n1, 0, 1, -1 + n4, n5, 1, 0, 1, n9, 1, 1, 
      2 + n12, 1, 1])/(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) - 
   (2*(1 + n12)*j[p4a, -1 + n1, 0, 1, n4, -1 + n5, 1, 0, 1, n9, 1, 1, 
      2 + n12, 1, 1])/(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) - 
   (2*(1 + n12)*j[p4a, -1 + n1, 0, 1, n4, n5, 0, 0, 1, n9, 1, 1, 2 + n12, 1, 
      1])/(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) + 
   (2*j[p4a, -1 + n1, 0, 1, n4, n5, 0, 0, 1, n9, 1, 2, 1 + n12, 1, 1])/
    (-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9) + 
   j[p4a, -1 + n1, 0, 1, n4, n5, 0, 0, 2, n9, 1, 1, 1 + n12, 1, 1]/
    (-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9) - 
   (4*(1 + n12)*j[p4a, -1 + n1, 0, 1, n4, n5, 1, -1, 1, n9, 1, 1, 2 + n12, 1, 
      1])/(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) - 
   (3*n9*j[p4a, -1 + n1, 0, 1, n4, n5, 1, -1, 1, 1 + n9, 1, 1, 1 + n12, 1, 
      1])/(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) - 
   (3*(1 + n12)*j[p4a, -1 + n1, 0, 1, n4, n5, 1, 0, 0, n9, 1, 1, 2 + n12, 1, 
      1])/(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) + 
   (2*j[p4a, -1 + n1, 0, 1, n4, n5, 1, 0, 0, n9, 1, 2, 1 + n12, 1, 1])/
    (-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9) - 
   (2*j[p4a, -1 + n1, 0, 1, n4, n5, 1, 0, 0, n9, 2, 1, 1 + n12, 1, 1])/
    (-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9) + 
   j[p4a, -1 + n1, 0, 1, n4, n5, 1, 0, 1, n9, 0, 2, 1 + n12, 1, 1]/
    (13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) + 
   ((23 - 8*d + n1 + 2*n12 + 5*n4 + 5*n5)*j[p4a, -1 + n1, 0, 1, n4, n5, 1, 0, 
      1, n9, 1, 1, 1 + n12, 1, 1])/(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9) + 
   j[p4a, -1 + n1, 0, 1, n4, n5, 1, 0, 1, n9, 1, 1, 1 + n12, 2, 0]/
    (13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) + 
   ((-1 - n12)*j[p4a, -1 + n1, 0, 1, n4, n5, 1, 0, 1, n9, 1, 1, 2 + n12, 0, 
      1])/(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) + 
   (2*(1 + n12)*j[p4a, -1 + n1, 0, 1, n4, n5, 1, 0, 1, n9, 1, 1, 2 + n12, 1, 
      0])/(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) - 
   (2*j[p4a, -1 + n1, 0, 1, n4, n5, 1, 0, 1, n9, 2, 1, 1 + n12, 0, 1])/
    (-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9) + 
   (3*n9*j[p4a, -1 + n1, 0, 1, n4, n5, 1, 0, 1, 1 + n9, 1, 1, n12, 1, 1])/
    (13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) - 
   (2*n9*j[p4a, -1 + n1, 0, 1, n4, n5, 1, 0, 1, 1 + n9, 1, 1, 1 + n12, 1, 0])/
    (13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) + 
   (2*n5*j[p4a, -1 + n1, 0, 1, n4, 1 + n5, 1, 0, 1, n9, 1, 1, 1 + n12, 0, 1])/
    (13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) - 
   (2*n5*j[p4a, -1 + n1, 0, 1, n4, 1 + n5, 1, 0, 1, n9, 1, 1, 1 + n12, 1, 0])/
    (13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) - 
   (3*j[p4a, -1 + n1, 0, 2, n4, n5, 1, 0, 1, n9, 1, 1, 1 + n12, 0, 1])/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) + 
   j[p4a, -1 + n1, 0, 2, n4, n5, 1, 0, 1, n9, 1, 1, 1 + n12, 1, 0]/
    (-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9) - 
   (2*j[p4a, n1, -1, 0, n4, n5, 1, 0, 1, n9, 2, 1, 1 + n12, 1, 1])/
    (-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9) + 
   (3*j[p4a, n1, -1, 0, n4, n5, 2, 0, 1, n9, 1, 1, 1 + n12, 1, 1])/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) - 
   (3*n9*j[p4a, n1, -1, 1, n4, -1 + n5, 1, 0, 1, 1 + n9, 1, 1, 1 + n12, 1, 
      1])/(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) + 
   j[p4a, n1, -1, 1, n4, n5, 0, 0, 1, n9, 2, 1, 1 + n12, 1, 1]/
    (13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) + 
   (2*(1 + n12)*j[p4a, n1, -1, 1, n4, n5, 1, 0, 0, n9, 1, 1, 2 + n12, 1, 1])/
    (13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) - 
   (2*j[p4a, n1, -1, 1, n4, n5, 1, 0, 0, n9, 1, 2, 1 + n12, 1, 1])/
    (-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9) + 
   (2*j[p4a, n1, -1, 1, n4, n5, 1, 0, 0, n9, 2, 1, 1 + n12, 1, 1])/
    (-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9) + 
   (3*(1 + n12)*j[p4a, n1, -1, 1, n4, n5, 1, 0, 1, n9, 1, 0, 2 + n12, 1, 1])/
    (2*(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9)) - 
   (3*j[p4a, n1, -1, 1, n4, n5, 1, 0, 1, n9, 1, 1, 1 + n12, 0, 2])/
    (-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9) + 
   ((-44 + 13*d - 6*n12 - 12*n4 - 2*n5)*j[p4a, n1, -1, 1, n4, n5, 1, 0, 1, 
      n9, 1, 1, 1 + n12, 1, 1])/(2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) - 
   (2*(1 + n12)*j[p4a, n1, -1, 1, n4, n5, 1, 0, 1, n9, 1, 1, 2 + n12, 0, 1])/
    (13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) - 
   (3*(1 + n12)*j[p4a, n1, -1, 1, n4, n5, 1, 0, 1, n9, 1, 1, 2 + n12, 1, 1])/
    (13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) + 
   j[p4a, n1, -1, 1, n4, n5, 1, 0, 1, n9, 2, 0, 1 + n12, 1, 1]/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) + 
   (2*j[p4a, n1, -1, 1, n4, n5, 1, 0, 1, n9, 2, 1, 1 + n12, 0, 1])/
    (-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9) + 
   (7*n9*j[p4a, n1, -1, 1, n4, n5, 1, 0, 1, 1 + n9, 1, 1, 1 + n12, 1, 0])/
    (2*(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9)) - 
   (3*n9*j[p4a, n1, -1, 1, n4, n5, 1, 0, 1, 1 + n9, 1, 1, 1 + n12, 1, 1])/
    (13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) - 
   (3*j[p4a, n1, -1, 1, n4, n5, 1, 0, 2, n9, 1, 0, 1 + n12, 1, 1])/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) - 
   (3*j[p4a, n1, -1, 1, n4, n5, 1, 0, 2, n9, 1, 1, 1 + n12, 0, 1])/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) + 
   j[p4a, n1, -1, 1, n4, n5, 2, 0, 0, n9, 1, 1, 1 + n12, 1, 1]/
    (13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) - 
   (3*j[p4a, n1, -1, 1, n4, n5, 2, 0, 1, n9, 0, 1, 1 + n12, 1, 1])/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) - 
   (3*j[p4a, n1, -1, 1, n4, n5, 2, 0, 1, n9, 1, 1, 1 + n12, 0, 1])/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) - 
   (3*j[p4a, n1, -1, 1, n4, n5, 2, 0, 1, n9, 1, 1, 1 + n12, 1, 0])/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) - 
   (3*n5*j[p4a, n1, -1, 1, n4, 1 + n5, 1, 0, 1, n9, 1, 1, 1 + n12, 0, 1])/
    (13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) + 
   (3*n5*j[p4a, n1, -1, 1, n4, 1 + n5, 1, 0, 1, n9, 1, 1, 1 + n12, 1, 0])/
    (13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) - 
   (3*j[p4a, n1, -1, 2, n4, n5, 1, 0, 1, n9, 1, 1, 1 + n12, 0, 1])/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) + 
   j[p4a, n1, -1, 2, n4, n5, 1, 0, 1, n9, 1, 1, 1 + n12, 1, 0]/
    (-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9) + 
   j[p4a, n1, 0, 0, -1 + n4, n5, 2, 0, 1, n9, 1, 1, 1 + n12, 1, 1]/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) - 
   (3*j[p4a, n1, 0, 0, n4, -1 + n5, 1, 0, 1, n9, 1, 1, 1 + n12, 1, 2])/
    (-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9) - 
   (3*j[p4a, n1, 0, 0, n4, -1 + n5, 2, 0, 1, n9, 1, 1, 1 + n12, 1, 1])/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) + 
   j[p4a, n1, 0, 0, n4, n5, 1, -1, 1, n9, 2, 1, 1 + n12, 1, 1]/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) - 
   j[p4a, n1, 0, 0, n4, n5, 1, 0, 1, -1 + n9, 1, 1, 1 + n12, 1, 2]/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) + 
   j[p4a, n1, 0, 0, n4, n5, 1, 0, 1, -1 + n9, 2, 1, 1 + n12, 1, 1]/
    (13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) + 
   ((n12 + n4)*j[p4a, n1, 0, 0, n4, n5, 1, 0, 1, n9, 1, 1, 1 + n12, 1, 1])/
    (2*(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9)) + 
   j[p4a, n1, 0, 0, n4, n5, 1, 0, 1, n9, 1, 1, 1 + n12, 1, 2]/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) + 
   j[p4a, n1, 0, 0, n4, n5, 1, 0, 1, n9, 1, 1, 1 + n12, 2, 1]/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) + 
   ((-1 - n12)*j[p4a, n1, 0, 0, n4, n5, 1, 0, 1, n9, 1, 1, 2 + n12, 1, 1])/
    (2*(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9)) + 
   (3*n4*j[p4a, n1, 0, 0, 1 + n4, -1 + n5, 1, 0, 1, n9, 1, 1, 1 + n12, 1, 1])/
    (2*(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9)) - 
   (3*n4*j[p4a, n1, 0, 0, 1 + n4, n5, 1, -1, 1, n9, 1, 1, 1 + n12, 1, 1])/
    (2*(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9)) + 
   (2*(1 + n12)*j[p4a, n1, 0, 1, -1 + n4, n5, 1, 0, 0, n9, 1, 1, 2 + n12, 1, 
      1])/(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) - 
   (2*j[p4a, n1, 0, 1, -1 + n4, n5, 1, 0, 0, n9, 1, 2, 1 + n12, 1, 1])/
    (-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9) + 
   ((1 + n12)*j[p4a, n1, 0, 1, -1 + n4, n5, 1, 0, 1, n9, 1, 0, 2 + n12, 1, 
      1])/(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) + 
   ((-10 + 3*d - 2*n12 - 3*n4 - n5 - n9)*j[p4a, n1, 0, 1, -1 + n4, n5, 1, 0, 
      1, n9, 1, 1, 1 + n12, 1, 1])/(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9) - 
   (2*(1 + n12)*j[p4a, n1, 0, 1, -1 + n4, n5, 1, 0, 1, n9, 1, 1, 2 + n12, 0, 
      1])/(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) - 
   (2*(1 + n12)*j[p4a, n1, 0, 1, -1 + n4, n5, 1, 0, 1, n9, 1, 1, 2 + n12, 1, 
      1])/(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) + 
   (n9*j[p4a, n1, 0, 1, -1 + n4, n5, 1, 0, 1, 1 + n9, 1, 1, 1 + n12, 1, 0])/
    (2*(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9)) + 
   j[p4a, n1, 0, 1, -1 + n4, n5, 1, 0, 2, n9, 1, 0, 1 + n12, 1, 1]/
    (13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) + 
   j[p4a, n1, 0, 1, -1 + n4, n5, 1, 0, 2, n9, 1, 1, 1 + n12, 0, 1]/
    (13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) - 
   j[p4a, n1, 0, 1, -1 + n4, n5, 2, 0, 0, n9, 1, 1, 1 + n12, 1, 1]/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) + 
   j[p4a, n1, 0, 1, -1 + n4, n5, 2, 0, 1, n9, 0, 1, 1 + n12, 1, 1]/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) - 
   j[p4a, n1, 0, 1, -1 + n4, n5, 2, 0, 1, n9, 1, 1, 1 + n12, 0, 1]/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) - 
   j[p4a, n1, 0, 1, -1 + n4, n5, 2, 0, 1, n9, 1, 1, 1 + n12, 1, 0]/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) - 
   (n5*j[p4a, n1, 0, 1, -1 + n4, 1 + n5, 1, 0, 1, n9, 1, 1, 1 + n12, 0, 1])/
    (2*(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9)) + 
   (n5*j[p4a, n1, 0, 1, -1 + n4, 1 + n5, 1, 0, 1, n9, 1, 1, 1 + n12, 1, 0])/
    (2*(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9)) + 
   (3*j[p4a, n1, 0, 1, n4, -1 + n5, 0, 0, 1, n9, 1, 1, 1 + n12, 1, 2])/
    (-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9) - 
   (3*n9*j[p4a, n1, 0, 1, n4, -1 + n5, 0, 0, 1, 1 + n9, 1, 1, 1 + n12, 1, 1])/
    (13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) + 
   (3*n9*j[p4a, n1, 0, 1, n4, -1 + n5, 1, -1, 1, 1 + n9, 1, 1, 1 + n12, 1, 
      1])/(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) + 
   (3*j[p4a, n1, 0, 1, n4, -1 + n5, 1, 0, 0, n9, 1, 1, 1 + n12, 1, 2])/
    (-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9) - 
   (2*(1 + n12)*j[p4a, n1, 0, 1, n4, -1 + n5, 1, 0, 0, n9, 1, 1, 2 + n12, 1, 
      1])/(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) + 
   (2*j[p4a, n1, 0, 1, n4, -1 + n5, 1, 0, 0, n9, 1, 2, 1 + n12, 1, 1])/
    (-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9) + 
   ((1 + n12)*j[p4a, n1, 0, 1, n4, -1 + n5, 1, 0, 1, n9, 1, 0, 2 + n12, 1, 
      1])/(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) + 
   (3*j[p4a, n1, 0, 1, n4, -1 + n5, 1, 0, 1, n9, 1, 1, 1 + n12, 0, 2])/
    (-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9) + 
   ((2 - d - 2*n1 + 3*n4 + n5 + 3*n9)*j[p4a, n1, 0, 1, n4, -1 + n5, 1, 0, 1, 
      n9, 1, 1, 1 + n12, 1, 1])/(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9) + 
   (2*(1 + n12)*j[p4a, n1, 0, 1, n4, -1 + n5, 1, 0, 1, n9, 1, 1, 2 + n12, 0, 
      1])/(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) + 
   (3*n9*j[p4a, n1, 0, 1, n4, -1 + n5, 1, 0, 1, 1 + n9, 0, 1, 1 + n12, 1, 1])/
    (13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) - 
   (3*n9*j[p4a, n1, 0, 1, n4, -1 + n5, 1, 0, 1, 1 + n9, 1, 1, n12, 1, 1])/
    (13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) - 
   (3*n9*j[p4a, n1, 0, 1, n4, -1 + n5, 1, 0, 1, 1 + n9, 1, 1, 1 + n12, 1, 0])/
    (2*(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9)) + 
   (3*n9*j[p4a, n1, 0, 1, n4, -1 + n5, 1, 0, 1, 1 + n9, 1, 1, 1 + n12, 1, 1])/
    (13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) + 
   (3*j[p4a, n1, 0, 1, n4, -1 + n5, 2, 0, 0, n9, 1, 1, 1 + n12, 1, 1])/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) + 
   (3*j[p4a, n1, 0, 1, n4, -1 + n5, 2, 0, 1, n9, 0, 1, 1 + n12, 1, 1])/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) + 
   (3*j[p4a, n1, 0, 1, n4, -1 + n5, 2, 0, 1, n9, 1, 1, 1 + n12, 0, 1])/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) + 
   (3*j[p4a, n1, 0, 1, n4, -1 + n5, 2, 0, 1, n9, 1, 1, 1 + n12, 1, 0])/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) + 
   j[p4a, n1, 0, 1, n4, n5, 0, -1, 1, n9, 2, 1, 1 + n12, 1, 1]/
    (-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9) + 
   ((4 - n12 - 2*n4 - 3*n5)*j[p4a, n1, 0, 1, n4, n5, 0, 0, 1, n9, 1, 1, 
      1 + n12, 1, 1])/(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) + 
   ((1 + n12)*j[p4a, n1, 0, 1, n4, n5, 0, 0, 1, n9, 1, 1, 2 + n12, 1, 1])/
    (13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) + 
   j[p4a, n1, 0, 1, n4, n5, 0, 0, 1, n9, 1, 2, n12, 1, 1]/
    (-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9) + 
   j[p4a, n1, 0, 1, n4, n5, 0, 0, 1, n9, 1, 2, 1 + n12, 1, 1]/
    (13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) + 
   j[p4a, n1, 0, 1, n4, n5, 0, 0, 1, n9, 2, 1, n12, 1, 1]/
    (13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) + 
   j[p4a, n1, 0, 1, n4, n5, 0, 0, 1, n9, 2, 1, 1 + n12, 1, 1]/
    (-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9) + 
   j[p4a, n1, 0, 1, n4, n5, 0, 0, 2, n9, 1, 1, n12, 1, 1]/
    (-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9) - 
   (3*(1 + n12)*j[p4a, n1, 0, 1, n4, n5, 1, -1, 0, n9, 1, 1, 2 + n12, 1, 1])/
    (13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) + 
   (3*j[p4a, n1, 0, 1, n4, n5, 1, -1, 0, n9, 1, 2, 1 + n12, 1, 1])/
    (-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9) - 
   j[p4a, n1, 0, 1, n4, n5, 1, -1, 0, n9, 2, 1, 1 + n12, 1, 1]/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) + 
   ((-1 - n12)*j[p4a, n1, 0, 1, n4, n5, 1, -1, 1, n9, 1, 0, 2 + n12, 1, 1])/
    (13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) + 
   (3*j[p4a, n1, 0, 1, n4, n5, 1, -1, 1, n9, 1, 1, 1 + n12, 0, 2])/
    (-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9) + 
   ((10 + d - 2*n1 + 6*n12 + 6*n4 - 12*n5 - 6*n9)*j[p4a, n1, 0, 1, n4, n5, 1, 
      -1, 1, n9, 1, 1, 1 + n12, 1, 1])/(2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 
      3*n9)) + (3*(1 + n12)*j[p4a, n1, 0, 1, n4, n5, 1, -1, 1, n9, 1, 1, 
      2 + n12, 0, 1])/(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) + 
   (3*(1 + n12)*j[p4a, n1, 0, 1, n4, n5, 1, -1, 1, n9, 1, 1, 2 + n12, 1, 1])/
    (13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) - 
   j[p4a, n1, 0, 1, n4, n5, 1, -1, 1, n9, 2, 0, 1 + n12, 1, 1]/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) - 
   j[p4a, n1, 0, 1, n4, n5, 1, -1, 1, n9, 2, 1, 1 + n12, 0, 1]/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) - 
   (n9*j[p4a, n1, 0, 1, n4, n5, 1, -1, 1, 1 + n9, 1, 1, 1 + n12, 1, 0])/
    (2*(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9)) + 
   (3*j[p4a, n1, 0, 1, n4, n5, 1, -1, 2, n9, 1, 0, 1 + n12, 1, 1])/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) + 
   (3*j[p4a, n1, 0, 1, n4, n5, 1, -1, 2, n9, 1, 1, 1 + n12, 0, 1])/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) + 
   (2*(1 + n12)*j[p4a, n1, 0, 1, n4, n5, 1, 0, 0, -1 + n9, 1, 1, 2 + n12, 1, 
      1])/(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) - 
   (2*j[p4a, n1, 0, 1, n4, n5, 1, 0, 0, -1 + n9, 1, 2, 1 + n12, 1, 1])/
    (-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9) + 
   j[p4a, n1, 0, 1, n4, n5, 1, 0, 0, -1 + n9, 2, 1, 1 + n12, 1, 1]/
    (-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9) + 
   ((5 + n1 - 3*n12 + n4 + n9)*j[p4a, n1, 0, 1, n4, n5, 1, 0, 0, n9, 1, 1, 
      1 + n12, 1, 1])/(2*(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9)) + 
   (3*(1 + n12)*j[p4a, n1, 0, 1, n4, n5, 1, 0, 0, n9, 1, 1, 2 + n12, 1, 1])/
    (2*(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9)) + 
   j[p4a, n1, 0, 1, n4, n5, 1, 0, 0, n9, 1, 2, n12, 1, 1]/
    (-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9) + 
   j[p4a, n1, 0, 1, n4, n5, 1, 0, 0, n9, 1, 2, 1 + n12, 1, 1]/
    (13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) - 
   (n9*j[p4a, n1, 0, 1, n4, n5, 1, 0, 0, 1 + n9, 1, 1, 1 + n12, 1, 1])/
    (2*(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9)) - 
   (3*j[p4a, n1, 0, 1, n4, n5, 1, 0, 1, -1 + n9, 1, 1, 1 + n12, 0, 2])/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) + 
   ((2 + n4 - 3*n5 - n9)*j[p4a, n1, 0, 1, n4, n5, 1, 0, 1, -1 + n9, 1, 1, 
      1 + n12, 1, 1])/(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) - 
   (2*(1 + n12)*j[p4a, n1, 0, 1, n4, n5, 1, 0, 1, -1 + n9, 1, 1, 2 + n12, 0, 
      1])/(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) + 
   j[p4a, n1, 0, 1, n4, n5, 1, 0, 1, -1 + n9, 2, 1, 1 + n12, 0, 1]/
    (-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9) + 
   ((-4 + n1 - 3*n4 + n9)*j[p4a, n1, 0, 1, n4, n5, 1, 0, 1, n9, 0, 1, 
      1 + n12, 1, 1])/(2*(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9)) - 
   j[p4a, n1, 0, 1, n4, n5, 1, 0, 1, n9, 0, 2, n12, 1, 1]/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) + 
   j[p4a, n1, 0, 1, n4, n5, 1, 0, 1, n9, 0, 2, 1 + n12, 1, 1]/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) + 
   ((1 - n1 + 3*n4 - n9)*j[p4a, n1, 0, 1, n4, n5, 1, 0, 1, n9, 1, 0, 1 + n12, 
      1, 1])/(2*(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9)) - 
   (3*j[p4a, n1, 0, 1, n4, n5, 1, 0, 1, n9, 1, 1, n12, 0, 2])/
    (-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9) + 
   ((-3 - n12 + 5*n5)*j[p4a, n1, 0, 1, n4, n5, 1, 0, 1, n9, 1, 1, 1 + n12, 0, 
      1])/(2*(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9)) + 
   (3*j[p4a, n1, 0, 1, n4, n5, 1, 0, 1, n9, 1, 1, 1 + n12, 0, 2])/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) + 
   ((4 + 2*n12 - n4 - 5*n5 + 2*n9)*j[p4a, n1, 0, 1, n4, n5, 1, 0, 1, n9, 1, 
      1, 1 + n12, 1, 0])/(2*(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9)) + 
   ((-12 + 5*d - n1 - n12 - 2*n4 - 6*n5 - n9)*j[p4a, n1, 0, 1, n4, n5, 1, 0, 
      1, n9, 1, 1, 1 + n12, 1, 1])/(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9) + 
   j[p4a, n1, 0, 1, n4, n5, 1, 0, 1, n9, 1, 1, 1 + n12, 2, 0]/
    (-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9) + 
   ((1 + n12)*j[p4a, n1, 0, 1, n4, n5, 1, 0, 1, n9, 1, 1, 2 + n12, 0, 1])/
    (2*(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9)) + 
   ((-1 - n12)*j[p4a, n1, 0, 1, n4, n5, 1, 0, 1, n9, 1, 1, 2 + n12, 1, 0])/
    (13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) + 
   j[p4a, n1, 0, 1, n4, n5, 1, 0, 1, n9, 2, 0, n12, 1, 1]/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) - 
   j[p4a, n1, 0, 1, n4, n5, 1, 0, 1, n9, 2, 0, 1 + n12, 1, 1]/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) - 
   (n9*j[p4a, n1, 0, 1, n4, n5, 1, 0, 1, 1 + n9, 0, 1, 1 + n12, 1, 1])/
    (2*(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9)) + 
   (n9*j[p4a, n1, 0, 1, n4, n5, 1, 0, 1, 1 + n9, 1, 0, 1 + n12, 1, 1])/
    (2*(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9)) - 
   j[p4a, n1, 0, 1, n4, n5, 2, -1, 0, n9, 1, 1, 1 + n12, 1, 1]/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) - 
   j[p4a, n1, 0, 1, n4, n5, 2, 0, 0, -1 + n9, 1, 1, 1 + n12, 1, 1]/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) + 
   j[p4a, n1, 0, 1, n4, n5, 2, 0, 0, n9, 1, 1, n12, 1, 1]/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) + 
   (n5*j[p4a, n1, 0, 1, n4, 1 + n5, 1, -1, 1, n9, 1, 1, 1 + n12, 0, 1])/
    (2*(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9)) - 
   (n5*j[p4a, n1, 0, 1, n4, 1 + n5, 1, -1, 1, n9, 1, 1, 1 + n12, 1, 0])/
    (2*(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9)) - 
   (2*n5*j[p4a, n1, 0, 1, n4, 1 + n5, 1, 0, 1, -1 + n9, 1, 1, 1 + n12, 0, 1])/
    (13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) + 
   (2*n5*j[p4a, n1, 0, 1, n4, 1 + n5, 1, 0, 1, -1 + n9, 1, 1, 1 + n12, 1, 0])/
    (13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) - 
   (3*n4*j[p4a, n1, 0, 1, 1 + n4, -1 + n5, 0, 0, 1, n9, 1, 1, 1 + n12, 1, 1])/
    (13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) + 
   (3*n4*j[p4a, n1, 0, 1, 1 + n4, -1 + n5, 1, 0, 0, n9, 1, 1, 1 + n12, 1, 1])/
    (2*(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9)) - 
   (3*n4*j[p4a, n1, 0, 1, 1 + n4, -1 + n5, 1, 0, 1, n9, 0, 1, 1 + n12, 1, 1])/
    (2*(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9)) + 
   (3*n4*j[p4a, n1, 0, 1, 1 + n4, -1 + n5, 1, 0, 1, n9, 1, 0, 1 + n12, 1, 1])/
    (2*(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9)) - 
   (3*n4*j[p4a, n1, 0, 1, 1 + n4, -1 + n5, 1, 0, 1, n9, 1, 1, 1 + n12, 1, 0])/
    (2*(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9)) + 
   (3*n4*j[p4a, n1, 0, 1, 1 + n4, n5, 0, -1, 1, n9, 1, 1, 1 + n12, 1, 1])/
    (13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) - 
   (3*n4*j[p4a, n1, 0, 1, 1 + n4, n5, 1, -1, 0, n9, 1, 1, 1 + n12, 1, 1])/
    (2*(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9)) + 
   (3*n4*j[p4a, n1, 0, 1, 1 + n4, n5, 1, -1, 1, n9, 0, 1, 1 + n12, 1, 1])/
    (2*(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9)) - 
   (3*n4*j[p4a, n1, 0, 1, 1 + n4, n5, 1, -1, 1, n9, 1, 0, 1 + n12, 1, 1])/
    (2*(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9)) + 
   (3*n4*j[p4a, n1, 0, 1, 1 + n4, n5, 1, -1, 1, n9, 1, 1, 1 + n12, 1, 0])/
    (2*(13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9)) - 
   (3*j[p4a, n1, 0, 2, -1 + n4, n5, 1, 0, 0, n9, 1, 1, 1 + n12, 1, 1])/
    (-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9) + 
   j[p4a, n1, 0, 2, -1 + n4, n5, 1, 0, 1, n9, 0, 1, 1 + n12, 1, 1]/
    (-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9) + 
   j[p4a, n1, 0, 2, -1 + n4, n5, 1, 0, 1, n9, 1, 0, 1 + n12, 1, 1]/
    (13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) - 
   (2*j[p4a, n1, 0, 2, -1 + n4, n5, 1, 0, 1, n9, 1, 1, 1 + n12, 0, 1])/
    (-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9) + 
   (9*j[p4a, n1, 0, 2, n4, n5, 1, -1, 0, n9, 1, 1, 1 + n12, 1, 1])/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) - 
   (3*j[p4a, n1, 0, 2, n4, n5, 1, -1, 1, n9, 0, 1, 1 + n12, 1, 1])/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) + 
   (3*j[p4a, n1, 0, 2, n4, n5, 1, -1, 1, n9, 1, 0, 1 + n12, 1, 1])/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) + 
   (9*j[p4a, n1, 0, 2, n4, n5, 1, -1, 1, n9, 1, 1, 1 + n12, 0, 1])/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) + 
   j[p4a, n1, 0, 2, n4, n5, 1, -1, 1, n9, 1, 1, 1 + n12, 1, 0]/
    (13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) - 
   (3*j[p4a, n1, 0, 2, n4, n5, 1, 0, 1, n9, 1, 1, n12, 0, 1])/
    (-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9) + 
   (2*j[p4a, n1, 0, 2, n4, n5, 1, 0, 1, n9, 1, 1, n12, 1, 0])/
    (-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9) + 
   (3*j[p4a, n1, 0, 2, n4, n5, 1, 0, 1, n9, 1, 1, 1 + n12, 0, 1])/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) + 
   j[p4a, n1, 0, 2, n4, n5, 1, 0, 1, n9, 1, 1, 1 + n12, 1, 0]/
    (13 - 5*d + n12 + 2*n4 + 6*n5 + 3*n9) - 
   (n1*j[p4a, 1 + n1, -1, 1, n4, n5, 1, 0, 1, n9, 1, 1, 1 + n12, 0, 1])/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) - 
   (n1*j[p4a, 1 + n1, 0, 1, n4, -1 + n5, 1, 0, 1, n9, 1, 1, 1 + n12, 0, 1])/
    (-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9) + 
   (n1*j[p4a, 1 + n1, 0, 1, n4, n5, 1, 0, 0, n9, 1, 1, 1 + n12, 1, 1])/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) + 
   (n1*j[p4a, 1 + n1, 0, 1, n4, n5, 1, 0, 1, -1 + n9, 1, 1, 1 + n12, 0, 1])/
    (-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9) + 
   (n1*j[p4a, 1 + n1, 0, 1, n4, n5, 1, 0, 1, n9, 0, 1, 1 + n12, 1, 1])/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)) - 
   (n1*j[p4a, 1 + n1, 0, 1, n4, n5, 1, 0, 1, n9, 1, 0, 1 + n12, 1, 1])/
    (2*(-13 + 5*d - n12 - 2*n4 - 6*n5 - 3*n9)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n4 == 0 && n5 == 0 && n7 == 0 && n9 == 0 &&  !(n11 == 1 || n8 == 1) -> 
  ((1 - 2*d + 2*n11 + n3 + n8)*j[p4a, 0, 0, n3, 0, 0, n6, 0, -1 + n8, 0, 1, 
      n11, 0, 1, 1])/(-1 + n8) + 
   ((1 - d + n11)*j[p4a, 0, 0, n3, 0, 0, n6, 0, n8, 0, 1, -1 + n11, 0, 1, 1])/
    (-1 + n11) + j[p4a, 0, 0, n3, 0, 0, n6, 0, n8, 0, 1, n11, 0, 0, 1] - 
   (n3*j[p4a, 0, 0, 1 + n3, 0, 0, n6, 0, -1 + n8, 0, 0, n11, 0, 1, 1])/
    (-1 + n8) + ((n3 - d*n3 + n11*n3)*j[p4a, 0, 0, 1 + n3, 0, 0, n6, 0, 
      -1 + n8, 0, 1, -1 + n11, 0, 1, 1])/((-1 + n11)*(-1 + n8)) + 
   (n3*j[p4a, 0, 0, 1 + n3, 0, 0, n6, 0, -1 + n8, 0, 1, n11, 0, 0, 1])/
    (-1 + n8), j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n4 == 0 && n5 == 0 && n7 == -1 && n9 == 0 && 
     !(n2 == 0 || n6 == 1 || n8 == 1) -> 
  (2*j[p4a, -1, 1 + n2, n3, 0, 0, n6, -1, n8, 0, 0, 2, 0, 1, 1])/
    (-8 + 5*d - 4*n2 - 2*n3 - 2*n6) + 
   ((-1 + 2*d - 2*n2 - n8)*j[p4a, -1, 1 + n2, n3, 0, 0, n6, -1, n8, 0, 1, 1, 
      0, 1, 1])/(-8 + 5*d - 4*n2 - 2*n3 - 2*n6) - 
   (n3*j[p4a, -1, 1 + n2, 1 + n3, 0, 0, n6, -1, n8, 0, 1, 1, 0, 0, 1])/
    (8 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   (2*(1 + n2)*j[p4a, -1, 2 + n2, -1 + n3, 0, 0, n6, -1, n8, 0, 1, 1, 0, 1, 
      1])/(8 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   ((-1 - n2)*j[p4a, -1, 2 + n2, n3, 0, 0, n6, -1, -1 + n8, 0, 1, 1, 0, 1, 
      1])/(8 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   j[p4a, 0, n2, n3, 0, 0, n6, -1, n8, 0, 1, 1, 0, 0, 2]/
    (-8 + 5*d - 4*n2 - 2*n3 - 2*n6) + j[p4a, 0, n2, n3, 0, 0, n6, -1, n8, 0, 
     2, 0, 0, 1, 1]/(-8 + 5*d - 4*n2 - 2*n3 - 2*n6) + 
   (n8*j[p4a, 0, n2, n3, 0, 0, n6, -1, 1 + n8, 0, 1, 0, 0, 1, 1])/
    (-8 + 5*d - 4*n2 - 2*n3 - 2*n6) + 
   (n8*j[p4a, 0, n2, n3, 0, 0, n6, -1, 1 + n8, 0, 1, 1, 0, 0, 1])/
    (-8 + 5*d - 4*n2 - 2*n3 - 2*n6) - 
   (n6*j[p4a, 0, n2, n3, 0, 0, 1 + n6, -1, n8, 0, 0, 1, 0, 1, 1])/
    (8 - 5*d + 4*n2 + 2*n3 + 2*n6) - 
   (n3*j[p4a, 0, n2, 1 + n3, 0, 0, n6, -1, n8, 0, 1, 1, 0, 0, 1])/
    (8 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   ((4 - d + 2*n2 + 2*n6 - 2*n8)*j[p4a, 0, 1 + n2, -1 + n3, 0, 0, n6, -1, n8, 
      0, 1, 1, 0, 1, 1])/(-8 + 5*d - 4*n2 - 2*n3 - 2*n6) + 
   j[p4a, 0, 1 + n2, -1 + n3, 0, 0, n6, -1, n8, 0, 2, 0, 0, 1, 1]/
    (-8 + 5*d - 4*n2 - 2*n3 - 2*n6) - 
   (2*j[p4a, 0, 1 + n2, -1 + n3, 0, 0, n6, 0, n8, 0, 0, 1, 0, 1, 1])/
    (-8 + 5*d - 4*n2 - 2*n3 - 2*n6) + 
   (2*j[p4a, 0, 1 + n2, -1 + n3, 0, 0, n6, 0, n8, 0, 1, 0, 0, 1, 1])/
    (-8 + 5*d - 4*n2 - 2*n3 - 2*n6) + j[p4a, 0, 1 + n2, n3, -1, 0, n6, -1, 
     n8, 0, 1, 1, 0, 0, 2]/(-8 + 5*d - 4*n2 - 2*n3 - 2*n6) - 
   (n6*j[p4a, 0, 1 + n2, n3, -1, 0, 1 + n6, -1, n8, 0, 0, 1, 0, 1, 1])/
    (8 - 5*d + 4*n2 + 2*n3 + 2*n6) + j[p4a, 0, 1 + n2, n3, 0, -1, n6, -1, n8, 
     0, 1, 1, 0, 0, 2]/(8 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   (n6*j[p4a, 0, 1 + n2, n3, 0, -1, 1 + n6, -1, n8, 0, 0, 1, 0, 1, 1])/
    (8 - 5*d + 4*n2 + 2*n3 + 2*n6) + j[p4a, 0, 1 + n2, n3, 0, 0, -1 + n6, -1, 
     n8, 0, 1, 1, 0, 0, 2]/(8 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   ((1 - d + n6)*(6 - 3*d + 4*n2 + 2*n6)*j[p4a, 0, 1 + n2, n3, 0, 0, -1 + n6, 
      -1, n8, 0, 1, 1, 0, 1, 1])/((-1 + n6)*(8 - 5*d + 4*n2 + 2*n3 + 2*n6)) + 
   j[p4a, 0, 1 + n2, n3, 0, 0, n6, -2, n8, 0, 1, 1, 0, 0, 2]/
    (8 - 5*d + 4*n2 + 2*n3 + 2*n6) + j[p4a, 0, 1 + n2, n3, 0, 0, n6, -2, n8, 
     0, 2, 0, 0, 1, 1]/(8 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   j[p4a, 0, 1 + n2, n3, 0, 0, n6, -2, n8, 0, 2, 1, 0, 0, 1]/
    (8 - 5*d + 4*n2 + 2*n3 + 2*n6) - 
   (n8*j[p4a, 0, 1 + n2, n3, 0, 0, n6, -2, 1 + n8, 0, 1, 0, 0, 1, 1])/
    (-8 + 5*d - 4*n2 - 2*n3 - 2*n6) - 
   (n8*j[p4a, 0, 1 + n2, n3, 0, 0, n6, -2, 1 + n8, 0, 1, 1, 0, 0, 1])/
    (-8 + 5*d - 4*n2 - 2*n3 - 2*n6) - 
   (2*j[p4a, 0, 1 + n2, n3, 0, 0, n6, -1, -1 + n8, 0, 0, 2, 0, 1, 1])/
    (-8 + 5*d - 4*n2 - 2*n3 - 2*n6) + 
   j[p4a, 0, 1 + n2, n3, 0, 0, n6, -1, -1 + n8, 0, 1, 1, 0, 0, 2]/
    (8 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   ((8 - 6*d + d^2 + 3*n2 - 2*d*n2 + 5*n3 - d*n3 + 2*n2*n3 + 3*n6 - 2*d*n6 + 
      2*n3*n6 - n8 + n2*n8 - n3*n8 + n6*n8 + n8^2)*j[p4a, 0, 1 + n2, n3, 0, 
      0, n6, -1, -1 + n8, 0, 1, 1, 0, 1, 1])/((-8 + 5*d - 4*n2 - 2*n3 - 2*n6)*
     (-1 + n8)) + j[p4a, 0, 1 + n2, n3, 0, 0, n6, -1, -1 + n8, 0, 2, 0, 0, 1, 
     1]/(8 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   j[p4a, 0, 1 + n2, n3, 0, 0, n6, -1, n8, -1, 1, 1, 0, 0, 2]/
    (-8 + 5*d - 4*n2 - 2*n3 - 2*n6) + 
   ((2 - n2 - n3)*j[p4a, 0, 1 + n2, n3, 0, 0, n6, -1, n8, 0, 0, 1, 0, 1, 1])/
    (8 - 5*d + 4*n2 + 2*n3 + 2*n6) + j[p4a, 0, 1 + n2, n3, 0, 0, n6, -1, n8, 
     0, 0, 2, -1, 1, 1]/(-8 + 5*d - 4*n2 - 2*n3 - 2*n6) + 
   j[p4a, 0, 1 + n2, n3, 0, 0, n6, -1, n8, 0, 0, 2, 0, 1, 1]/
    (8 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   ((-2 + n3)*j[p4a, 0, 1 + n2, n3, 0, 0, n6, -1, n8, 0, 1, 0, 0, 1, 1])/
    (8 - 5*d + 4*n2 + 2*n3 + 2*n6) + j[p4a, 0, 1 + n2, n3, 0, 0, n6, -1, n8, 
     0, 1, 1, -1, 0, 2]/(-8 + 5*d - 4*n2 - 2*n3 - 2*n6) + 
   ((1 + 2*d - n3 - n8)*j[p4a, 0, 1 + n2, n3, 0, 0, n6, -1, n8, 0, 1, 1, 0, 
      0, 1])/(-8 + 5*d - 4*n2 - 2*n3 - 2*n6) + 
   j[p4a, 0, 1 + n2, n3, 0, 0, n6, -1, n8, 0, 1, 1, 0, 0, 2]/
    (8 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   ((-6 + 3*d - 4*n2 - 2*n6)*j[p4a, 0, 1 + n2, n3, 0, 0, n6, -1, n8, 0, 1, 1, 
      0, 1, 0])/(-8 + 5*d - 4*n2 - 2*n3 - 2*n6) - 
   (2*(-1 + d - n2)*j[p4a, 0, 1 + n2, n3, 0, 0, n6, -1, n8, 0, 1, 1, 0, 1, 
      1])/(-8 + 5*d - 4*n2 - 2*n3 - 2*n6) + 
   j[p4a, 0, 1 + n2, n3, 0, 0, n6, -1, n8, 0, 2, 0, -1, 1, 1]/
    (-8 + 5*d - 4*n2 - 2*n3 - 2*n6) + j[p4a, 0, 1 + n2, n3, 0, 0, n6, -1, n8, 
     0, 2, 0, 0, 1, 1]/(8 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   (n6*j[p4a, 0, 1 + n2, n3, 0, 0, 1 + n6, -1, -1 + n8, -1, 1, 1, 0, 1, 1])/
    (8 - 5*d + 4*n2 + 2*n3 + 2*n6) - (n3*(-5 + d - 2*n2 - 2*n6 + n8)*
     j[p4a, 0, 1 + n2, 1 + n3, 0, 0, n6, -2, -1 + n8, 0, 1, 1, 0, 1, 1])/
    ((8 - 5*d + 4*n2 + 2*n3 + 2*n6)*(-1 + n8)) - 
   (n3*j[p4a, 0, 1 + n2, 1 + n3, 0, 0, n6, -2, n8, 0, 0, 1, 0, 1, 1])/
    (8 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   (n3*j[p4a, 0, 1 + n2, 1 + n3, 0, 0, n6, -2, n8, 0, 1, 0, 0, 1, 1])/
    (8 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   (3*n3*j[p4a, 0, 1 + n2, 1 + n3, 0, 0, n6, -2, n8, 0, 1, 1, 0, 0, 1])/
    (8 - 5*d + 4*n2 + 2*n3 + 2*n6) + (n3*(-8 + d - 2*n2 - 2*n6 + 4*n8)*
     j[p4a, 0, 1 + n2, 1 + n3, 0, 0, n6, -1, -1 + n8, 0, 1, 1, 0, 0, 1])/
    ((8 - 5*d + 4*n2 + 2*n3 + 2*n6)*(-1 + n8)) - 
   (2*n3*j[p4a, 0, 1 + n2, 1 + n3, 0, 0, n6, -1, n8, 0, 1, 1, -1, 0, 1])/
    (8 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   (n3*j[p4a, 0, 1 + n2, 1 + n3, 0, 0, n6, -1, n8, 0, 1, 1, 0, 0, 1])/
    (8 - 5*d + 4*n2 + 2*n3 + 2*n6) + ((1 + n2)*(6 - d + 2*n2 + 2*n6 - 2*n8)*
     j[p4a, 0, 2 + n2, -1 + n3, 0, 0, n6, -1, -1 + n8, 0, 1, 1, 0, 1, 1])/
    ((8 - 5*d + 4*n2 + 2*n3 + 2*n6)*(-1 + n8)) - 
   (2*(1 + n2)*j[p4a, 0, 2 + n2, -1 + n3, 0, 0, n6, -1, n8, 0, 0, 1, 0, 1, 
      1])/(8 - 5*d + 4*n2 + 2*n3 + 2*n6) - 
   ((1 + n2)*(6 - d + 2*n2 + 2*n6 - 2*n8)*j[p4a, 0, 2 + n2, n3, 0, 0, n6, -2, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/((8 - 5*d + 4*n2 + 2*n3 + 2*n6)*
     (-1 + n8)) + ((1 + n2)*j[p4a, 0, 2 + n2, n3, 0, 0, n6, -2, n8, 0, 0, 1, 
      0, 1, 1])/(8 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   (2*(1 + n2)*j[p4a, 0, 2 + n2, n3, 0, 0, n6, -2, n8, 0, 1, 1, 0, 0, 1])/
    (8 - 5*d + 4*n2 + 2*n3 + 2*n6) - 
   (2*(1 + n2)*j[p4a, 0, 2 + n2, n3, 0, 0, n6, -2, n8, 0, 1, 1, 0, 1, 1])/
    (8 - 5*d + 4*n2 + 2*n3 + 2*n6) - ((1 + n2)*(6 - d + 2*n2 + 2*n6 - 2*n8)*
     j[p4a, 0, 2 + n2, n3, 0, 0, n6, -1, -2 + n8, 0, 1, 1, 0, 1, 1])/
    ((8 - 5*d + 4*n2 + 2*n3 + 2*n6)*(-1 + n8)) + 
   ((1 + n2)*(6 - d + 2*n2 + 2*n6 - 2*n8)*j[p4a, 0, 2 + n2, n3, 0, 0, n6, -1, 
      -1 + n8, 0, 1, 1, -1, 1, 1])/((8 - 5*d + 4*n2 + 2*n3 + 2*n6)*
     (-1 + n8)) - (2*(1 + n2)*(5 - d + 2*n2 + 2*n6 - n8)*
     j[p4a, 0, 2 + n2, n3, 0, 0, n6, -1, -1 + n8, 0, 1, 1, 0, 0, 1])/
    ((8 - 5*d + 4*n2 + 2*n3 + 2*n6)*(-1 + n8)) + 
   (2*(1 + n2)*j[p4a, 0, 2 + n2, n3, 0, 0, n6, -1, -1 + n8, 0, 1, 1, 0, 1, 
      1])/(8 - 5*d + 4*n2 + 2*n3 + 2*n6), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n4 == 0 && n5 == 0 && n7 == 0 && n9 == 0 && 
     !(n2 == 0 || n6 == 1 || n8 == 1) -> 
  (2*j[p4a, -1, 1 + n2, n3, 0, 0, n6, 0, n8, 0, 0, 2, 0, 1, 1])/
    (-12 + 5*d - 4*n2 - 2*n3 - 2*n6) + 
   ((-5 + 2*d - 2*n2 - n8)*j[p4a, -1, 1 + n2, n3, 0, 0, n6, 0, n8, 0, 1, 1, 
      0, 1, 1])/(-12 + 5*d - 4*n2 - 2*n3 - 2*n6) - 
   (n3*j[p4a, -1, 1 + n2, 1 + n3, 0, 0, n6, 0, n8, 0, 1, 1, 0, 0, 1])/
    (12 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   (2*(1 + n2)*j[p4a, -1, 2 + n2, -1 + n3, 0, 0, n6, 0, n8, 0, 1, 1, 0, 1, 
      1])/(12 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   ((-1 - n2)*j[p4a, -1, 2 + n2, n3, 0, 0, n6, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (12 - 5*d + 4*n2 + 2*n3 + 2*n6) + j[p4a, 0, n2, n3, 0, 0, n6, 0, n8, 0, 
     1, 1, 0, 0, 2]/(-12 + 5*d - 4*n2 - 2*n3 - 2*n6) + 
   j[p4a, 0, n2, n3, 0, 0, n6, 0, n8, 0, 2, 0, 0, 1, 1]/
    (-12 + 5*d - 4*n2 - 2*n3 - 2*n6) + 
   (n8*j[p4a, 0, n2, n3, 0, 0, n6, 0, 1 + n8, 0, 1, 0, 0, 1, 1])/
    (-12 + 5*d - 4*n2 - 2*n3 - 2*n6) + 
   (n8*j[p4a, 0, n2, n3, 0, 0, n6, 0, 1 + n8, 0, 1, 1, 0, 0, 1])/
    (-12 + 5*d - 4*n2 - 2*n3 - 2*n6) - 
   (n6*j[p4a, 0, n2, n3, 0, 0, 1 + n6, 0, n8, 0, 0, 1, 0, 1, 1])/
    (12 - 5*d + 4*n2 + 2*n3 + 2*n6) - 
   (n3*j[p4a, 0, n2, 1 + n3, 0, 0, n6, 0, n8, 0, 1, 1, 0, 0, 1])/
    (12 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   ((4 - d + 2*n2 + 2*n6 - 2*n8)*j[p4a, 0, 1 + n2, -1 + n3, 0, 0, n6, 0, n8, 
      0, 1, 1, 0, 1, 1])/(-12 + 5*d - 4*n2 - 2*n3 - 2*n6) + 
   j[p4a, 0, 1 + n2, -1 + n3, 0, 0, n6, 0, n8, 0, 2, 0, 0, 1, 1]/
    (-12 + 5*d - 4*n2 - 2*n3 - 2*n6) + 
   j[p4a, 0, 1 + n2, n3, -1, 0, n6, 0, n8, 0, 1, 1, 0, 0, 2]/
    (-12 + 5*d - 4*n2 - 2*n3 - 2*n6) - 
   (n6*j[p4a, 0, 1 + n2, n3, -1, 0, 1 + n6, 0, n8, 0, 0, 1, 0, 1, 1])/
    (12 - 5*d + 4*n2 + 2*n3 + 2*n6) + j[p4a, 0, 1 + n2, n3, 0, -1, n6, 0, n8, 
     0, 1, 1, 0, 0, 2]/(12 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   (n6*j[p4a, 0, 1 + n2, n3, 0, -1, 1 + n6, 0, n8, 0, 0, 1, 0, 1, 1])/
    (12 - 5*d + 4*n2 + 2*n3 + 2*n6) + j[p4a, 0, 1 + n2, n3, 0, 0, -1 + n6, 0, 
     n8, 0, 1, 1, 0, 0, 2]/(12 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   ((1 - d + n6)*(8 - 3*d + 4*n2 + 2*n6)*j[p4a, 0, 1 + n2, n3, 0, 0, -1 + n6, 
      0, n8, 0, 1, 1, 0, 1, 1])/((-1 + n6)*(12 - 5*d + 4*n2 + 2*n3 + 2*n6)) + 
   j[p4a, 0, 1 + n2, n3, 0, 0, n6, -1, n8, 0, 1, 1, 0, 0, 2]/
    (12 - 5*d + 4*n2 + 2*n3 + 2*n6) + j[p4a, 0, 1 + n2, n3, 0, 0, n6, -1, n8, 
     0, 2, 0, 0, 1, 1]/(12 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   j[p4a, 0, 1 + n2, n3, 0, 0, n6, -1, n8, 0, 2, 1, 0, 0, 1]/
    (12 - 5*d + 4*n2 + 2*n3 + 2*n6) - 
   (n8*j[p4a, 0, 1 + n2, n3, 0, 0, n6, -1, 1 + n8, 0, 1, 0, 0, 1, 1])/
    (-12 + 5*d - 4*n2 - 2*n3 - 2*n6) - 
   (n8*j[p4a, 0, 1 + n2, n3, 0, 0, n6, -1, 1 + n8, 0, 1, 1, 0, 0, 1])/
    (-12 + 5*d - 4*n2 - 2*n3 - 2*n6) - 
   (2*j[p4a, 0, 1 + n2, n3, 0, 0, n6, 0, -1 + n8, 0, 0, 2, 0, 1, 1])/
    (-12 + 5*d - 4*n2 - 2*n3 - 2*n6) + 
   j[p4a, 0, 1 + n2, n3, 0, 0, n6, 0, -1 + n8, 0, 1, 1, 0, 0, 2]/
    (12 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   ((4 - 4*d + d^2 + 3*n2 - 2*d*n2 + 3*n3 - d*n3 + 2*n2*n3 + 3*n6 - 2*d*n6 + 
      2*n3*n6 - n8 + n2*n8 - n3*n8 + n6*n8 + n8^2)*j[p4a, 0, 1 + n2, n3, 0, 
      0, n6, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/((-12 + 5*d - 4*n2 - 2*n3 - 2*n6)*
     (-1 + n8)) + j[p4a, 0, 1 + n2, n3, 0, 0, n6, 0, -1 + n8, 0, 2, 0, 0, 1, 
     1]/(12 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   j[p4a, 0, 1 + n2, n3, 0, 0, n6, 0, n8, -1, 1, 1, 0, 0, 2]/
    (-12 + 5*d - 4*n2 - 2*n3 - 2*n6) + 
   ((2 - n2 - n3)*j[p4a, 0, 1 + n2, n3, 0, 0, n6, 0, n8, 0, 0, 1, 0, 1, 1])/
    (12 - 5*d + 4*n2 + 2*n3 + 2*n6) + j[p4a, 0, 1 + n2, n3, 0, 0, n6, 0, n8, 
     0, 0, 2, -1, 1, 1]/(-12 + 5*d - 4*n2 - 2*n3 - 2*n6) + 
   j[p4a, 0, 1 + n2, n3, 0, 0, n6, 0, n8, 0, 0, 2, 0, 1, 1]/
    (12 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   ((-2 + n3)*j[p4a, 0, 1 + n2, n3, 0, 0, n6, 0, n8, 0, 1, 0, 0, 1, 1])/
    (12 - 5*d + 4*n2 + 2*n3 + 2*n6) + j[p4a, 0, 1 + n2, n3, 0, 0, n6, 0, n8, 
     0, 1, 1, -1, 0, 2]/(-12 + 5*d - 4*n2 - 2*n3 - 2*n6) + 
   ((-3 + 2*d - n3 - n8)*j[p4a, 0, 1 + n2, n3, 0, 0, n6, 0, n8, 0, 1, 1, 0, 
      0, 1])/(-12 + 5*d - 4*n2 - 2*n3 - 2*n6) + 
   j[p4a, 0, 1 + n2, n3, 0, 0, n6, 0, n8, 0, 1, 1, 0, 0, 2]/
    (12 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   ((-8 + 3*d - 4*n2 - 2*n6)*j[p4a, 0, 1 + n2, n3, 0, 0, n6, 0, n8, 0, 1, 1, 
      0, 1, 0])/(-12 + 5*d - 4*n2 - 2*n3 - 2*n6) - 
   (2*(-3 + d - n2)*j[p4a, 0, 1 + n2, n3, 0, 0, n6, 0, n8, 0, 1, 1, 0, 1, 1])/
    (-12 + 5*d - 4*n2 - 2*n3 - 2*n6) + 
   j[p4a, 0, 1 + n2, n3, 0, 0, n6, 0, n8, 0, 2, 0, -1, 1, 1]/
    (-12 + 5*d - 4*n2 - 2*n3 - 2*n6) + 
   j[p4a, 0, 1 + n2, n3, 0, 0, n6, 0, n8, 0, 2, 0, 0, 1, 1]/
    (12 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   (n6*j[p4a, 0, 1 + n2, n3, 0, 0, 1 + n6, 0, -1 + n8, -1, 1, 1, 0, 1, 1])/
    (12 - 5*d + 4*n2 + 2*n3 + 2*n6) - 
   (n3*(-3 + d - 2*n2 - 2*n6 + n8)*j[p4a, 0, 1 + n2, 1 + n3, 0, 0, n6, -1, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/((12 - 5*d + 4*n2 + 2*n3 + 2*n6)*
     (-1 + n8)) - (n3*j[p4a, 0, 1 + n2, 1 + n3, 0, 0, n6, -1, n8, 0, 0, 1, 0, 
      1, 1])/(12 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   (n3*j[p4a, 0, 1 + n2, 1 + n3, 0, 0, n6, -1, n8, 0, 1, 0, 0, 1, 1])/
    (12 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   (3*n3*j[p4a, 0, 1 + n2, 1 + n3, 0, 0, n6, -1, n8, 0, 1, 1, 0, 0, 1])/
    (12 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   (n3*(-6 + d - 2*n2 - 2*n6 + 4*n8)*j[p4a, 0, 1 + n2, 1 + n3, 0, 0, n6, 0, 
      -1 + n8, 0, 1, 1, 0, 0, 1])/((12 - 5*d + 4*n2 + 2*n3 + 2*n6)*
     (-1 + n8)) - (2*n3*j[p4a, 0, 1 + n2, 1 + n3, 0, 0, n6, 0, n8, 0, 1, 1, 
      -1, 0, 1])/(12 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   (n3*j[p4a, 0, 1 + n2, 1 + n3, 0, 0, n6, 0, n8, 0, 1, 1, 0, 0, 1])/
    (12 - 5*d + 4*n2 + 2*n3 + 2*n6) + ((1 + n2)*(4 - d + 2*n2 + 2*n6 - 2*n8)*
     j[p4a, 0, 2 + n2, -1 + n3, 0, 0, n6, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/
    ((12 - 5*d + 4*n2 + 2*n3 + 2*n6)*(-1 + n8)) - 
   (2*(1 + n2)*j[p4a, 0, 2 + n2, -1 + n3, 0, 0, n6, 0, n8, 0, 0, 1, 0, 1, 1])/
    (12 - 5*d + 4*n2 + 2*n3 + 2*n6) - ((1 + n2)*(4 - d + 2*n2 + 2*n6 - 2*n8)*
     j[p4a, 0, 2 + n2, n3, 0, 0, n6, -1, -1 + n8, 0, 1, 1, 0, 1, 1])/
    ((12 - 5*d + 4*n2 + 2*n3 + 2*n6)*(-1 + n8)) + 
   ((1 + n2)*j[p4a, 0, 2 + n2, n3, 0, 0, n6, -1, n8, 0, 0, 1, 0, 1, 1])/
    (12 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   (2*(1 + n2)*j[p4a, 0, 2 + n2, n3, 0, 0, n6, -1, n8, 0, 1, 1, 0, 0, 1])/
    (12 - 5*d + 4*n2 + 2*n3 + 2*n6) - 
   (2*(1 + n2)*j[p4a, 0, 2 + n2, n3, 0, 0, n6, -1, n8, 0, 1, 1, 0, 1, 1])/
    (12 - 5*d + 4*n2 + 2*n3 + 2*n6) - ((1 + n2)*(4 - d + 2*n2 + 2*n6 - 2*n8)*
     j[p4a, 0, 2 + n2, n3, 0, 0, n6, 0, -2 + n8, 0, 1, 1, 0, 1, 1])/
    ((12 - 5*d + 4*n2 + 2*n3 + 2*n6)*(-1 + n8)) + 
   ((1 + n2)*(4 - d + 2*n2 + 2*n6 - 2*n8)*j[p4a, 0, 2 + n2, n3, 0, 0, n6, 0, 
      -1 + n8, 0, 1, 1, -1, 1, 1])/((12 - 5*d + 4*n2 + 2*n3 + 2*n6)*
     (-1 + n8)) - (2*(1 + n2)*(3 - d + 2*n2 + 2*n6 - n8)*
     j[p4a, 0, 2 + n2, n3, 0, 0, n6, 0, -1 + n8, 0, 1, 1, 0, 0, 1])/
    ((12 - 5*d + 4*n2 + 2*n3 + 2*n6)*(-1 + n8)) + 
   (2*(1 + n2)*j[p4a, 0, 2 + n2, n3, 0, 0, n6, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (12 - 5*d + 4*n2 + 2*n3 + 2*n6), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n4 == 0 && 
    n5 == 0 && n7 == 0 && n8 == 1 && n9 == 0 &&  !(n2 == 0 || n6 == 1) -> 
  ((-2 + d - 2*n1 - 2*n2 - 2*n6)*j[p4a, -1 + n1, 1 + n2, n3, 0, 0, n6, 0, 0, 
      0, 2, 1, 0, 1, 1])/((-5 + 3*d - n2 - 3*n3 - 2*n6)*
     (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6)) + 
   (2*j[p4a, -1 + n1, 1 + n2, n3, 0, 0, n6, 0, 1, 0, 0, 2, 0, 1, 1])/
    (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6) + 
   ((46 - 44*d + 10*d^2 + 18*n1 - 9*d*n1 + 2*n1^2 + 36*n2 - 18*d*n2 + 
      6*n1*n2 + 6*n2^2 + 24*n3 - 9*d*n3 + 6*n1*n3 + 12*n2*n3 + 32*n6 - 
      14*d*n6 + 6*n1*n6 + 12*n2*n6 + 6*n3*n6 + 4*n6^2)*
     j[p4a, -1 + n1, 1 + n2, n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-5 + 3*d - n2 - 3*n3 - 2*n6)*(-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6)) + 
   ((-2 + d - 2*n1 - 2*n2 - 2*n6)*j[p4a, -1 + n1, 1 + n2, n3, 0, 0, n6, 0, 1, 
      0, 2, 1, 0, 0, 1])/((-5 + 3*d - n2 - 3*n3 - 2*n6)*
     (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6)) + 
   (n3*(1 - d + n6)*(2 - d + 2*n1 + 2*n2 + 2*n6)*j[p4a, -1 + n1, 1 + n2, 
      1 + n3, 0, 0, -1 + n6, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-1 + n6)*(12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6)*
     (5 - 3*d + n2 + 3*n3 + 2*n6)) - 
   (n3*j[p4a, -1 + n1, 1 + n2, 1 + n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 0, 1])/
    (12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6) - 
   ((1 + n2)*(-8 + 5*d + 2*n1 - 6*n3 - 2*n6)*j[p4a, -1 + n1, 2 + n2, -1 + n3, 
      0, 0, n6, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6)*(5 - 3*d + n2 + 3*n3 + 2*n6)) - 
   ((1 + n2)*(1 - d + n6)*(2 - d + 2*n1 + 2*n2 + 2*n6)*
     j[p4a, -1 + n1, 2 + n2, n3, 0, 0, -1 + n6, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-1 + n6)*(12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6)*
     (5 - 3*d + n2 + 3*n3 + 2*n6)) + 
   ((-1 - n2)*j[p4a, -1 + n1, 2 + n2, n3, 0, 0, n6, 0, 0, 0, 1, 1, 0, 1, 1])/
    (12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6) + 
   ((2 - d + 2*n1 + 2*n2 + 2*n6)*j[p4a, n1, n2, n3, 0, 0, n6, 0, 0, 0, 2, 1, 
      0, 1, 1])/((-5 + 3*d - n2 - 3*n3 - 2*n6)*(-12 + 5*d - 2*n1 - 4*n2 - 
      2*n3 - 2*n6)) + j[p4a, n1, n2, n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 0, 2]/
    (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6) + 
   ((-3 + 2*d + 2*n1 + n2 - 3*n3)*j[p4a, n1, n2, n3, 0, 0, n6, 0, 1, 0, 2, 0, 
      0, 1, 1])/((-5 + 3*d - n2 - 3*n3 - 2*n6)*(-12 + 5*d - 2*n1 - 4*n2 - 
      2*n3 - 2*n6)) + ((2 - d + 2*n1 + 2*n2 + 2*n6)*
     j[p4a, n1, n2, n3, 0, 0, n6, 0, 1, 0, 2, 1, 0, 0, 1])/
    ((-5 + 3*d - n2 - 3*n3 - 2*n6)*(-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6)) + 
   j[p4a, n1, n2, n3, 0, 0, n6, 0, 2, 0, 1, 0, 0, 1, 1]/
    (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6) + 
   j[p4a, n1, n2, n3, 0, 0, n6, 0, 2, 0, 1, 1, 0, 0, 1]/
    (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6) - 
   (n6*j[p4a, n1, n2, n3, 0, 0, 1 + n6, 0, 1, 0, 0, 1, 0, 1, 1])/
    (12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6) - 
   (n3*j[p4a, n1, n2, 1 + n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 0, 1])/
    (12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6) + 
   ((3 - 2*d - 2*n1 - n2 + 3*n3)*j[p4a, n1, 1 + n2, -1 + n3, 0, 0, n6, 0, 0, 
      0, 1, 1, 0, 1, 2])/((-5 + 3*d - n2 - 3*n3 - 2*n6)*
     (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6)) + 
   ((-2 + d - 2*n1 - 2*n2 - 2*n6)*j[p4a, n1, 1 + n2, -1 + n3, 0, 0, n6, 0, 1, 
      0, 1, 1, 0, 0, 2])/((-5 + 3*d - n2 - 3*n3 - 2*n6)*
     (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6)) + 
   ((2 - d + 12*n1 - 6*d*n1 + 4*n2 - d*n2 + 4*n1*n2 + 2*n2^2 - 2*n3 + d*n3 + 
      4*n1*n3 - 2*n2*n3 + 2*n6 + 4*n1*n6 + 2*n2*n6 - 2*n3*n6)*
     j[p4a, n1, 1 + n2, -1 + n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-5 + 3*d - n2 - 3*n3 - 2*n6)*(-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6)) + 
   ((-3 + 2*d + 2*n1 + n2 - 3*n3)*j[p4a, n1, 1 + n2, -1 + n3, 0, 0, n6, 0, 1, 
      0, 2, 0, 0, 1, 1])/((-5 + 3*d - n2 - 3*n3 - 2*n6)*
     (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6)) + 
   ((-3 + 2*d + 2*n1 + n2 - 3*n3)*j[p4a, n1, 1 + n2, n3, -1, 0, n6, 0, 0, 0, 
      1, 1, 0, 1, 2])/((-5 + 3*d - n2 - 3*n3 - 2*n6)*
     (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6)) + 
   ((-3 + 2*d + 2*n1 + n2 - 3*n3)*j[p4a, n1, 1 + n2, n3, -1, 0, n6, 0, 1, 0, 
      1, 1, 0, 0, 2])/((-5 + 3*d - n2 - 3*n3 - 2*n6)*
     (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6)) + 
   ((-3 + 2*d + 2*n1 + n2 - 3*n3)*n6*j[p4a, n1, 1 + n2, n3, -1, 0, 1 + n6, 0, 
      1, 0, 0, 1, 0, 1, 1])/((-5 + 3*d - n2 - 3*n3 - 2*n6)*
     (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6)) + 
   j[p4a, n1, 1 + n2, n3, 0, -1, n6, 0, 0, 0, 1, 1, 0, 1, 2]/
    (12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6) + 
   j[p4a, n1, 1 + n2, n3, 0, -1, n6, 0, 1, 0, 1, 1, 0, 0, 2]/
    (12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6) + 
   (n6*j[p4a, n1, 1 + n2, n3, 0, -1, 1 + n6, 0, 1, 0, 0, 1, 0, 1, 1])/
    (12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6) + 
   j[p4a, n1, 1 + n2, n3, 0, 0, -1 + n6, 0, 1, 0, 1, 1, 0, 0, 2]/
    (12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6) + 
   ((8 - 11*d + 3*d^2 + 2*n1 - 2*d*n1 + 4*n2 - 4*d*n2 + 10*n6 - 5*d*n6 + 
      2*n1*n6 + 4*n2*n6 + 2*n6^2)*j[p4a, n1, 1 + n2, n3, 0, 0, -1 + n6, 0, 1, 
      0, 1, 1, 0, 1, 1])/((-1 + n6)*(12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6)) - 
   (2*j[p4a, n1, 1 + n2, n3, 0, 0, n6, -1, 0, 0, 1, 2, 0, 1, 1])/
    (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6) + 
   ((3 - 2*d - 2*n1 - n2 + 3*n3)*j[p4a, n1, 1 + n2, n3, 0, 0, n6, -1, 0, 0, 
      2, 1, 0, 1, 1])/((-5 + 3*d - n2 - 3*n3 - 2*n6)*
     (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6)) + 
   j[p4a, n1, 1 + n2, n3, 0, 0, n6, -1, 1, 0, 1, 1, 0, 0, 2]/
    (12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6) + 
   ((3 - 2*d - 2*n1 - n2 + 3*n3)*j[p4a, n1, 1 + n2, n3, 0, 0, n6, -1, 1, 0, 
      2, 0, 0, 1, 1])/((-5 + 3*d - n2 - 3*n3 - 2*n6)*
     (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6)) + 
   ((3 - 2*d - 2*n1 - n2 + 3*n3)*j[p4a, n1, 1 + n2, n3, 0, 0, n6, -1, 1, 0, 
      2, 1, 0, 0, 1])/((-5 + 3*d - n2 - 3*n3 - 2*n6)*
     (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6)) + 
   j[p4a, n1, 1 + n2, n3, 0, 0, n6, -1, 2, 0, 1, 0, 0, 1, 1]/
    (12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6) + 
   j[p4a, n1, 1 + n2, n3, 0, 0, n6, -1, 2, 0, 1, 1, 0, 0, 1]/
    (12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6) + 
   ((13 - 21*d + 8*d^2 + 3*n1 - d*n1 + 13*n2 - 8*d*n2 + 3*n1*n2 + 4*n2^2 + 
      16*n3 - 14*d*n3 - 5*n1*n3 + n2*n3 + 9*n3^2 + 11*n6 - 8*d*n6 + 4*n1*n6 + 
      9*n2*n6 + n3*n6 + 4*n6^2)*j[p4a, n1, 1 + n2, n3, 0, 0, n6, 0, 0, 0, 1, 
      1, 0, 1, 1])/((-5 + 3*d - n2 - 3*n3 - 2*n6)*(-12 + 5*d - 2*n1 - 4*n2 - 
      2*n3 - 2*n6)) + ((2 - d + 2*n1 + 2*n2 + 2*n6)*
     j[p4a, n1, 1 + n2, n3, 0, 0, n6, 0, 0, 0, 1, 2, -1, 1, 1])/
    ((-5 + 3*d - n2 - 3*n3 - 2*n6)*(-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6)) + 
   ((-2 + d - 2*n1 - 2*n2 - 2*n6)*j[p4a, n1, 1 + n2, n3, 0, 0, n6, 0, 0, 0, 
      1, 2, 0, 1, 1])/((-5 + 3*d - n2 - 3*n3 - 2*n6)*
     (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6)) + 
   j[p4a, n1, 1 + n2, n3, 0, 0, n6, 0, 1, -1, 1, 1, 0, 0, 2]/
    (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6) + 
   ((10 - 8*d + d^2 - 5*n1 + d*n1 - 3*n2 + d*n2 - n1*n2 - n2^2 + 3*n3 + 
      2*d*n3 - n1*n3 - 2*n2*n3 - 3*n3^2 + 6*n6 - 3*d*n6 + 2*n6^2)*
     j[p4a, n1, 1 + n2, n3, 0, 0, n6, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((-5 + 3*d - n2 - 3*n3 - 2*n6)*(-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6)) + 
   j[p4a, n1, 1 + n2, n3, 0, 0, n6, 0, 1, 0, 0, 2, -1, 1, 1]/
    (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6) + 
   j[p4a, n1, 1 + n2, n3, 0, 0, n6, 0, 1, 0, 0, 2, 0, 1, 1]/
    (12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6) + 
   ((-8 + 5*d + 7*n1 - 3*d*n1 + n1*n2 - 3*n3 - 2*d*n3 + n1*n3 - n2*n3 + 
      3*n3^2 - 2*n6 + 2*n1*n6)*j[p4a, n1, 1 + n2, n3, 0, 0, n6, 0, 1, 0, 1, 
      0, 0, 1, 1])/((-5 + 3*d - n2 - 3*n3 - 2*n6)*(-12 + 5*d - 2*n1 - 4*n2 - 
      2*n3 - 2*n6)) + j[p4a, n1, 1 + n2, n3, 0, 0, n6, 0, 1, 0, 1, 1, -1, 0, 
     2]/(-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6) + 
   ((30 - 31*d + 8*d^2 + 12*n1 - 5*d*n1 + 2*n1^2 + 18*n2 - 8*d*n2 + 6*n1*n2 + 
      4*n2^2 + 17*n3 - 9*d*n3 + n2*n3 + 3*n3^2 + 22*n6 - 10*d*n6 + 6*n1*n6 + 
      8*n2*n6 + 2*n3*n6 + 4*n6^2)*j[p4a, n1, 1 + n2, n3, 0, 0, n6, 0, 1, 0, 
      1, 1, 0, 0, 1])/((-5 + 3*d - n2 - 3*n3 - 2*n6)*
     (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6)) + 
   j[p4a, n1, 1 + n2, n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 0, 2]/
    (12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6) + 
   (2*(17 - 17*d + 4*d^2 + 2*n1 - 2*d*n1 + 10*n2 - 6*d*n2 + n2^2 + 11*n3 - 
      4*d*n3 + 2*n1*n3 + 5*n2*n3 + 10*n6 - 5*d*n6 + 2*n1*n6 + 4*n2*n6 + 
      2*n3*n6 + 2*n6^2)*j[p4a, n1, 1 + n2, n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 1, 
      0])/((-5 + 3*d - n2 - 3*n3 - 2*n6)*(-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 
      2*n6)) + ((-36 + 35*d - 8*d^2 - 8*n1 + 5*d*n1 - 2*n1^2 - 24*n2 + 
      13*d*n2 - 4*n1*n2 - 4*n2^2 - 20*n3 + 7*d*n3 - 2*n1*n3 - 8*n2*n3 - 
      22*n6 + 10*d*n6 - 6*n1*n6 - 10*n2*n6 - 2*n3*n6 - 4*n6^2)*
     j[p4a, n1, 1 + n2, n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-5 + 3*d - n2 - 3*n3 - 2*n6)*(-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6)) + 
   ((-3 + 2*d + 2*n1 + n2 - 3*n3)*j[p4a, n1, 1 + n2, n3, 0, 0, n6, 0, 1, 0, 
      2, 0, -1, 1, 1])/((-5 + 3*d - n2 - 3*n3 - 2*n6)*
     (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6)) + 
   ((3 - 2*d - 2*n1 - n2 + 3*n3)*j[p4a, n1, 1 + n2, n3, 0, 0, n6, 0, 1, 0, 2, 
      0, 0, 1, 1])/((-5 + 3*d - n2 - 3*n3 - 2*n6)*(-12 + 5*d - 2*n1 - 4*n2 - 
      2*n3 - 2*n6)) - ((-3 + 2*d + 2*n1 + n2 - 3*n3)*n6*
     j[p4a, n1, 1 + n2, n3, 0, 0, 1 + n6, 0, 0, -1, 1, 1, 0, 1, 1])/
    ((-5 + 3*d - n2 - 3*n3 - 2*n6)*(-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6)) - 
   (n3*(1 - d + n6)*(2 - d + 2*n1 + 2*n2 + 2*n6)*j[p4a, n1, 1 + n2, 1 + n3, 
      0, 0, -1 + n6, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-1 + n6)*(12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6)*
     (5 - 3*d + n2 + 3*n3 + 2*n6)) + 
   (n3*(1 - d + n6)*(2 - d + 2*n1 + 2*n2 + 2*n6)*j[p4a, n1, 1 + n2, 1 + n3, 
      0, 0, -1 + n6, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((-1 + n6)*(12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6)*
     (5 - 3*d + n2 + 3*n3 + 2*n6)) - 
   (n3*(1 - d + n6)*(2 - d + 2*n1 + 2*n2 + 2*n6)*j[p4a, n1, 1 + n2, 1 + n3, 
      0, 0, -1 + n6, 0, 1, 0, 1, 0, 0, 1, 1])/
    ((-1 + n6)*(12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6)*
     (5 - 3*d + n2 + 3*n3 + 2*n6)) + 
   (n3*(1 - d + n6)*(2 - d + 2*n1 + 2*n2 + 2*n6)*j[p4a, n1, 1 + n2, 1 + n3, 
      0, 0, -1 + n6, 0, 1, 0, 1, 1, -1, 1, 1])/
    ((-1 + n6)*(12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6)*
     (5 - 3*d + n2 + 3*n3 + 2*n6)) - 
   (n3*(1 - d + n6)*(2 - d + 2*n1 + 2*n2 + 2*n6)*j[p4a, n1, 1 + n2, 1 + n3, 
      0, 0, -1 + n6, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((-1 + n6)*(12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6)*
     (5 - 3*d + n2 + 3*n3 + 2*n6)) - 
   (n3*(1 - d + n6)*(2 - d + 2*n1 + 2*n2 + 2*n6)*j[p4a, n1, 1 + n2, 1 + n3, 
      0, 0, -1 + n6, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-1 + n6)*(12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6)*
     (5 - 3*d + n2 + 3*n3 + 2*n6)) + 
   (3*n3*j[p4a, n1, 1 + n2, 1 + n3, 0, 0, n6, -1, 0, 0, 1, 1, 0, 1, 1])/
    (12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6) - 
   (n3*j[p4a, n1, 1 + n2, 1 + n3, 0, 0, n6, -1, 1, 0, 0, 1, 0, 1, 1])/
    (12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6) + 
   (n3*j[p4a, n1, 1 + n2, 1 + n3, 0, 0, n6, -1, 1, 0, 1, 0, 0, 1, 1])/
    (12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6) + 
   (3*n3*j[p4a, n1, 1 + n2, 1 + n3, 0, 0, n6, -1, 1, 0, 1, 1, 0, 0, 1])/
    (12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6) - 
   (2*n3*j[p4a, n1, 1 + n2, 1 + n3, 0, 0, n6, 0, 1, 0, 1, 1, -1, 0, 1])/
    (12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6) + 
   (n3*j[p4a, n1, 1 + n2, 1 + n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 0, 1])/
    (12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6) + 
   ((1 + n2)*(-3 + 2*d + 2*n1 + n2 - 3*n3)*j[p4a, n1, 2 + n2, -1 + n3, 0, 0, 
      n6, 0, 0, 0, 1, 1, 0, 1, 1])/((12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6)*
     (5 - 3*d + n2 + 3*n3 + 2*n6)) + 
   ((1 + n2)*(-8 + 5*d + 2*n1 - 6*n3 - 2*n6)*j[p4a, n1, 2 + n2, -1 + n3, 0, 
      0, n6, 0, 1, 0, 0, 1, 0, 1, 1])/((12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6)*
     (5 - 3*d + n2 + 3*n3 + 2*n6)) + 
   ((1 + n2)*(1 - d + n6)*(2 - d + 2*n1 + 2*n2 + 2*n6)*
     j[p4a, n1, 2 + n2, n3, 0, 0, -1 + n6, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((-1 + n6)*(12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6)*
     (5 - 3*d + n2 + 3*n3 + 2*n6)) - 
   (2*(1 + n2)*(-3 + 2*d + 2*n1 + n2 - 3*n3)*j[p4a, n1, 2 + n2, n3, 0, 0, n6, 
      -1, 0, 0, 1, 1, 0, 1, 1])/((12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6)*
     (5 - 3*d + n2 + 3*n3 + 2*n6)) + 
   ((1 + n2)*j[p4a, n1, 2 + n2, n3, 0, 0, n6, -1, 1, 0, 0, 1, 0, 1, 1])/
    (12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6) - 
   (2*(1 + n2)*(-3 + 2*d + 2*n1 + n2 - 3*n3)*j[p4a, n1, 2 + n2, n3, 0, 0, n6, 
      -1, 1, 0, 1, 1, 0, 0, 1])/((12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6)*
     (5 - 3*d + n2 + 3*n3 + 2*n6)) + 
   ((1 + n2)*(-8 + 5*d + 2*n1 - 6*n3 - 2*n6)*j[p4a, n1, 2 + n2, n3, 0, 0, n6, 
      -1, 1, 0, 1, 1, 0, 1, 1])/((12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6)*
     (5 - 3*d + n2 + 3*n3 + 2*n6)) + ((1 + n2)*(-3 + 2*d + 2*n1 + n2 - 3*n3)*
     j[p4a, n1, 2 + n2, n3, 0, 0, n6, 0, 0, 0, 1, 1, -1, 1, 1])/
    ((12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6)*(5 - 3*d + n2 + 3*n3 + 2*n6)) - 
   ((1 + n2)*(-8 + 5*d + 2*n1 - 6*n3 - 2*n6)*j[p4a, n1, 2 + n2, n3, 0, 0, n6, 
      0, 0, 0, 1, 1, 0, 1, 1])/((12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6)*
     (5 - 3*d + n2 + 3*n3 + 2*n6)) - 
   (n1*j[p4a, 1 + n1, n2, n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 0, 1])/
    (12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6) + 
   (n1*j[p4a, 1 + n1, 1 + n2, n3, 0, 0, n6, 0, 0, 0, 1, 1, 0, 1, 1])/
    (12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6) + 
   (n1*j[p4a, 1 + n1, 1 + n2, n3, 0, 0, n6, 0, 1, 0, 0, 1, 0, 1, 1])/
    (12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6) - 
   (n1*j[p4a, 1 + n1, 1 + n2, n3, 0, 0, n6, 0, 1, 0, 1, 0, 0, 1, 1])/
    (12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n4 == 0 && n6 == 1 && n7 == 0 && n9 == 0 &&  !(n10 == 1 || n5 == 0) -> 
  ((-1 + n8)*j[p4a, -1, 0, n3, 0, 1 + n5, 1, 0, n8, 0, n10, 1, 0, 1, 1])/
    (2*(-3 + d - n5)) - (n3*j[p4a, -1, 0, 1 + n3, 0, 1 + n5, 1, 0, n8, 0, 
      n10, 1, 0, 0, 1])/(2*(-3 + d - n5)) + 
   j[p4a, 0, -1, n3, 0, 1 + n5, 1, 0, n8, 0, n10, 1, 0, 0, 2]/(3 - d + n5) + 
   ((-5 + 3*d - 2*n10 - 2*n3 - 2*n5 - n8)*j[p4a, 0, -1, n3, 0, 1 + n5, 1, 0, 
      n8, 0, n10, 1, 0, 1, 1])/(2*(-3 + d - n5)) - 
   (n10*j[p4a, 0, -1, n3, 0, 1 + n5, 1, 0, n8, 0, 1 + n10, 0, 0, 1, 1])/
    (2*(-3 + d - n5)) - (n8*j[p4a, 0, -1, n3, 0, 1 + n5, 1, 0, 1 + n8, 0, 
      n10, 0, 0, 1, 1])/(2*(-3 + d - n5)) - 
   (n8*j[p4a, 0, -1, n3, 0, 1 + n5, 1, 0, 1 + n8, 0, n10, 1, 0, 0, 1])/
    (2*(-3 + d - n5)) + j[p4a, 0, -1, n3, 0, 1 + n5, 2, 0, -1 + n8, 0, n10, 
     1, 0, 1, 1]/(2*(-3 + d - n5)) + 
   ((1 + d - n10 - 2*n8)*j[p4a, 0, -1, n3, 0, 1 + n5, 2, 0, n8, 0, -1 + n10, 
      1, 0, 1, 1])/(2*(-1 + n10)*(-3 + d - n5)) - 
   j[p4a, 0, -1, n3, 0, 1 + n5, 2, 0, n8, 0, n10, 1, 0, 0, 1]/
    (2*(-3 + d - n5)) - j[p4a, 0, -1, n3, 0, 1 + n5, 2, 0, n8, 0, n10, 1, 0, 
     1, 0]/(2*(-3 + d - n5)) - 
   (n3*(-1 + n8)*j[p4a, 0, -1, 1 + n3, 0, 1 + n5, 1, 0, n8, 0, -1 + n10, 1, 
      0, 1, 1])/(2*(-1 + n10)*(-3 + d - n5)) - 
   (n3*j[p4a, 0, -1, 1 + n3, 0, 1 + n5, 1, 0, n8, 0, n10, 1, 0, 0, 1])/
    (2*(-3 + d - n5)) + j[p4a, 0, 0, -1 + n3, 0, 1 + n5, 0, 0, n8, 0, n10, 1, 
     0, 1, 2]/(-3 + d - n5) + ((5 - d - 2*n10 + 2*n5 + n8)*
     j[p4a, 0, 0, -1 + n3, 0, 1 + n5, 1, 0, n8, 0, n10, 1, 0, 1, 1])/
    (2*(-3 + d - n5)) - (n10*j[p4a, 0, 0, -1 + n3, 0, 1 + n5, 1, 0, n8, 0, 
      1 + n10, 0, 0, 1, 1])/(2*(-3 + d - n5)) + 
   j[p4a, 0, 0, -1 + n3, 0, 1 + n5, 2, 0, -1 + n8, 0, n10, 1, 0, 1, 1]/
    (2*(-3 + d - n5)) + ((2 - n10 - n8)*j[p4a, 0, 0, -1 + n3, 0, 1 + n5, 2, 
      0, n8, 0, -1 + n10, 1, 0, 1, 1])/(2*(-1 + n10)*(-3 + d - n5)) + 
   j[p4a, 0, 0, n3, -1, 1 + n5, 0, 0, n8, 0, n10, 1, 0, 1, 2]/(3 - d + n5) + 
   j[p4a, 0, 0, n3, -1, 1 + n5, 1, 0, n8, 0, n10, 1, 0, 0, 2]/(3 - d + n5) + 
   j[p4a, 0, 0, n3, -1, 1 + n5, 1, 0, n8, 0, n10, 1, 0, 1, 1] + 
   ((-1 + d - n8)*j[p4a, 0, 0, n3, -1, 1 + n5, 2, 0, n8, 0, -1 + n10, 1, 0, 
      1, 1])/(2*(-1 + n10)*(-3 + d - n5)) - 
   j[p4a, 0, 0, n3, -1, 1 + n5, 2, 0, n8, 0, n10, 1, 0, 0, 1]/
    (2*(-3 + d - n5)) - j[p4a, 0, 0, n3, -1, 1 + n5, 2, 0, n8, 0, n10, 1, 0, 
     1, 0]/(2*(-3 + d - n5)) + 
   ((1 + n5)*j[p4a, 0, 0, n3, -1, 2 + n5, 0, 0, n8, 0, n10, 1, 0, 1, 1])/
    (3 - d + n5) + ((-1 - n5)*j[p4a, 0, 0, n3, -1, 2 + n5, 1, 0, n8, 0, n10, 
      1, 0, 0, 1])/(2*(3 - d + n5)) + 
   ((1 + n5)*j[p4a, 0, 0, n3, -1, 2 + n5, 1, 0, n8, 0, n10, 1, 0, 1, 0])/
    (2*(3 - d + n5)) + j[p4a, 0, 0, n3, 0, n5, 0, 0, n8, 0, n10, 1, 0, 1, 2]/
    (-3 + d - n5) + j[p4a, 0, 0, n3, 0, n5, 1, 0, n8, 0, n10, 1, 0, 0, 2]/
    (-3 + d - n5) + ((1 - d + n8)*j[p4a, 0, 0, n3, 0, n5, 2, 0, n8, 0, 
      -1 + n10, 1, 0, 1, 1])/(2*(-1 + n10)*(-3 + d - n5)) + 
   j[p4a, 0, 0, n3, 0, n5, 2, 0, n8, 0, n10, 1, 0, 0, 1]/(2*(-3 + d - n5)) + 
   j[p4a, 0, 0, n3, 0, n5, 2, 0, n8, 0, n10, 1, 0, 1, 0]/(2*(-3 + d - n5)) + 
   ((-1 - n5)*j[p4a, 0, 0, n3, 0, 1 + n5, 0, 0, n8, 0, n10, 1, 0, 1, 1])/
    (3 - d + n5) + j[p4a, 0, 0, n3, 0, 1 + n5, 1, -1, n8, 0, n10, 1, 0, 0, 2]/
    (-3 + d - n5) + (n10*j[p4a, 0, 0, n3, 0, 1 + n5, 1, -1, n8, 0, 1 + n10, 
      0, 0, 1, 1])/(2*(-3 + d - n5)) + 
   (n10*j[p4a, 0, 0, n3, 0, 1 + n5, 1, -1, n8, 0, 1 + n10, 1, 0, 0, 1])/
    (2*(-3 + d - n5)) + (n8*j[p4a, 0, 0, n3, 0, 1 + n5, 1, -1, 1 + n8, 0, 
      n10, 0, 0, 1, 1])/(2*(-3 + d - n5)) + 
   (n8*j[p4a, 0, 0, n3, 0, 1 + n5, 1, -1, 1 + n8, 0, n10, 1, 0, 0, 1])/
    (2*(-3 + d - n5)) + j[p4a, 0, 0, n3, 0, 1 + n5, 1, 0, -1 + n8, 0, n10, 1, 
     0, 0, 2]/(-3 + d - n5) + ((-3 + d - n8)*j[p4a, 0, 0, n3, 0, 1 + n5, 1, 
      0, -1 + n8, 0, n10, 1, 0, 1, 1])/(2*(-3 + d - n5)) + 
   (n10*j[p4a, 0, 0, n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 1 + n10, 0, 0, 1, 1])/
    (2*(-3 + d - n5)) - j[p4a, 0, 0, n3, 0, 1 + n5, 1, 0, n8, -1, n10, 1, 0, 
     0, 2]/(2*(-3 + d - n5)) + 
   ((-2*d - d^2 + n10 + 2*d*n10 + 2*n3 + d*n3 - n10*n3 + 2*n8 + 2*d*n8 - 
      3*n10*n8 - 3*n3*n8)*j[p4a, 0, 0, n3, 0, 1 + n5, 1, 0, n8, 0, -1 + n10, 
      1, 0, 1, 1])/(2*(-1 + n10)*(-3 + d - n5)) + 
   ((-d - n10 + n3 + n8)*j[p4a, 0, 0, n3, 0, 1 + n5, 1, 0, n8, 0, n10, 0, 0, 
      1, 1])/(2*(-3 + d - n5)) + j[p4a, 0, 0, n3, 0, 1 + n5, 1, 0, n8, 0, 
     n10, 1, -1, 0, 2]/(3 - d + n5) + 
   ((-2 + n10 + n3 - n5 + n8)*j[p4a, 0, 0, n3, 0, 1 + n5, 1, 0, n8, 0, n10, 
      1, 0, 0, 1])/(2*(-3 + d - n5)) + 
   j[p4a, 0, 0, n3, 0, 1 + n5, 1, 0, n8, 0, n10, 1, 0, 0, 2]/
    (2*(-3 + d - n5)) + ((-1 - n5)*j[p4a, 0, 0, n3, 0, 1 + n5, 1, 0, n8, 0, 
      n10, 1, 0, 1, 0])/(2*(3 - d + n5)) + 
   ((-1 + n8)*j[p4a, 0, 0, n3, 0, 1 + n5, 1, 0, n8, 0, n10, 1, 0, 1, 1])/
    (2*(-3 + d - n5)) - (n10*j[p4a, 0, 0, n3, 0, 1 + n5, 1, 0, n8, 0, 
      1 + n10, 0, -1, 1, 1])/(2*(-3 + d - n5)) + 
   (n10*j[p4a, 0, 0, n3, 0, 1 + n5, 1, 0, n8, 0, 1 + n10, 0, 0, 1, 1])/
    (2*(-3 + d - n5)) - (n8*j[p4a, 0, 0, n3, 0, 1 + n5, 1, 0, 1 + n8, 0, 
      -1 + n10, 1, -1, 1, 1])/(2*(-3 + d - n5)) + 
   (n8*j[p4a, 0, 0, n3, 0, 1 + n5, 1, 0, 1 + n8, 0, -1 + n10, 1, 0, 0, 1])/
    (2*(-3 + d - n5)) - j[p4a, 0, 0, n3, 0, 1 + n5, 2, -1, -1 + n8, 0, n10, 
     1, 0, 1, 1]/(2*(-3 + d - n5)) + 
   ((-2 + n10 + n8)*j[p4a, 0, 0, n3, 0, 1 + n5, 2, -1, n8, 0, -1 + n10, 1, 0, 
      1, 1])/(2*(-1 + n10)*(-3 + d - n5)) - 
   j[p4a, 0, 0, n3, 0, 1 + n5, 2, 0, -2 + n8, 0, n10, 1, 0, 1, 1]/
    (2*(-3 + d - n5)) + j[p4a, 0, 0, n3, 0, 1 + n5, 2, 0, -1 + n8, -1, n10, 
     1, 0, 1, 1]/(2*(-3 + d - n5)) + 
   ((-d + 2*n8)*j[p4a, 0, 0, n3, 0, 1 + n5, 2, 0, -1 + n8, 0, -1 + n10, 1, 0, 
      1, 1])/(2*(-1 + n10)*(-3 + d - n5)) + 
   j[p4a, 0, 0, n3, 0, 1 + n5, 2, 0, -1 + n8, 0, n10, 1, -1, 1, 1]/
    (2*(-3 + d - n5)) + ((2 - n10 - n8)*j[p4a, 0, 0, n3, 0, 1 + n5, 2, 0, n8, 
      0, -1 + n10, 1, -1, 1, 1])/(2*(-1 + n10)*(-3 + d - n5)) + 
   ((-2 + n10 + n8)*j[p4a, 0, 0, n3, 0, 1 + n5, 2, 0, n8, 0, -1 + n10, 1, 0, 
      0, 1])/(2*(-1 + n10)*(-3 + d - n5)) + 
   ((-2 + n10 + n8)*j[p4a, 0, 0, n3, 0, 1 + n5, 2, 0, n8, 0, -1 + n10, 1, 0, 
      1, 0])/(2*(-1 + n10)*(-3 + d - n5)) + 
   ((-1 - n5)*j[p4a, 0, 0, n3, 0, 2 + n5, 0, -1, n8, 0, n10, 1, 0, 1, 1])/
    (3 - d + n5) - (3*(1 + n5)*j[p4a, 0, 0, n3, 0, 2 + n5, 1, -1, n8, 0, n10, 
      1, 0, 0, 1])/(2*(3 - d + n5)) + 
   (3*(1 + n5)*j[p4a, 0, 0, n3, 0, 2 + n5, 1, -1, n8, 0, n10, 1, 0, 1, 0])/
    (2*(3 - d + n5)) + ((-n3 + d*n3 - n10*n3)*j[p4a, 0, 0, 1 + n3, 0, 1 + n5, 
      1, -1, n8, 0, -1 + n10, 1, 0, 1, 1])/(2*(-1 + n10)*(-3 + d - n5)) + 
   (n3*j[p4a, 0, 0, 1 + n3, 0, 1 + n5, 1, -1, n8, 0, n10, 0, 0, 1, 1])/
    (2*(-3 + d - n5)) + (3*n3*j[p4a, 0, 0, 1 + n3, 0, 1 + n5, 1, -1, n8, 0, 
      n10, 1, 0, 0, 1])/(2*(-3 + d - n5)) + 
   (n3*(-1 + n8)*j[p4a, 0, 0, 1 + n3, 0, 1 + n5, 1, 0, -1 + n8, 0, -1 + n10, 
      1, 0, 1, 1])/((-1 + n10)*(-3 + d - n5)) + 
   (3*n3*j[p4a, 0, 0, 1 + n3, 0, 1 + n5, 1, 0, -1 + n8, 0, n10, 1, 0, 0, 1])/
    (2*(-3 + d - n5)) - (n3*(-1 + n8)*j[p4a, 0, 0, 1 + n3, 0, 1 + n5, 1, 0, 
      n8, 0, -1 + n10, 1, -1, 1, 1])/(2*(-1 + n10)*(-3 + d - n5)) + 
   ((-(d*n3) + 2*n3*n8)*j[p4a, 0, 0, 1 + n3, 0, 1 + n5, 1, 0, n8, 0, 
      -1 + n10, 1, 0, 0, 1])/(2*(-1 + n10)*(-3 + d - n5)) - 
   (n3*j[p4a, 0, 0, 1 + n3, 0, 1 + n5, 1, 0, n8, 0, n10, 1, -1, 0, 1])/
    (-3 + d - n5) + (n3*j[p4a, 0, 0, 1 + n3, 0, 1 + n5, 1, 0, n8, 0, n10, 1, 
      0, 0, 1])/(2*(-3 + d - n5)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n4 == 0 && n6 == 1 && n7 == -1 && n9 == 0 &&  !(n5 == 0 || n8 == 1) -> 
  ((4 - d + 2*n5)*j[p4a, -1, -1 + n2, n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, 0, 1, 
      1])/(2*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((4 - d + 2*n5)*j[p4a, -1, n2, -1 + n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, 0, 
      1, 1])/(2*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*j[p4a, -1, n2, n3, 0, 1 + n5, 1, -1, n8, 0, 0, 2, 0, 1, 
      1])/(2*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*(-15 + 14*d - 4*n2 - 8*n3 - 8*n5 - 9*n8)*
     j[p4a, -1, n2, n3, 0, 1 + n5, 1, -1, n8, 0, 1, 1, 0, 1, 1])/
    (4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*j[p4a, -1, n2, n3, 0, 1 + n5, 1, -1, n8, 0, 2, 1, 0, 0, 
      1])/(2*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*j[p4a, -1, n2, n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 1, 1, 0, 
      1, 1])/(2*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*j[p4a, -1, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, 0, 0, 
      1])/(2*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) - 
   ((-4 + d - 2*n5)*(1 + n5)*j[p4a, -1, n2, n3, 0, 2 + n5, 1, -1, n8, 0, 1, 
      1, 0, 0, 1])/(2*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*(1 + n5)*j[p4a, -1, n2, n3, 0, 2 + n5, 1, -1, n8, 0, 1, 
      1, 0, 1, 0])/(2*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) - 
   (n3*(-4 + d - 2*n5)*j[p4a, -1, n2, 1 + n3, 0, 1 + n5, 1, -1, -1 + n8, 0, 
      1, 1, 0, 1, 1])/((-3 + d - n5)*(-2 + d - 2*n2 - n5)) - 
   (n3*(-4 + d - 2*n5)*j[p4a, -1, n2, 1 + n3, 0, 1 + n5, 1, -1, n8, 0, 1, 1, 
      0, 0, 1])/(4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   (n2*(-4 + d - 2*n5)*j[p4a, -1, 1 + n2, -1 + n3, 0, 1 + n5, 1, -1, n8, 0, 
      1, 1, 0, 1, 1])/((-3 + d - n5)*(-2 + d - 2*n2 - n5)) - 
   (n2*(-4 + d - 2*n5)*j[p4a, -1, 1 + n2, n3, 0, 1 + n5, 1, -2, n8, 0, 1, 1, 
      0, 1, 1])/((-3 + d - n5)*(-2 + d - 2*n2 - n5)) - 
   (n2*(-4 + d - 2*n5)*j[p4a, -1, 1 + n2, n3, 0, 1 + n5, 1, -1, -1 + n8, 0, 
      1, 1, 0, 1, 1])/(4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   (n2*(-4 + d - 2*n5)*j[p4a, -1, 1 + n2, n3, 0, 1 + n5, 1, -1, n8, 0, 1, 1, 
      -1, 1, 1])/((-3 + d - n5)*(-2 + d - 2*n2 - n5)) - 
   (n2*(-4 + d - 2*n5)*j[p4a, -1, 1 + n2, n3, 0, 1 + n5, 1, -1, n8, 0, 1, 1, 
      0, 0, 1])/((-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((-d + 4*n2)*j[p4a, 0, -1 + n2, n3, 0, 1 + n5, 1, -1, n8, 0, 1, 1, 0, 0, 
      2])/(4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) - 
   ((-4 + d - 2*n5)*(-6 + 3*d - 2*n3 - 2*n5)*j[p4a, 0, -1 + n2, n3, 0, 
      1 + n5, 1, -1, n8, 0, 1, 1, 0, 1, 1])/(4*(-3 + d - n5)*
     (-2 + d - 2*n2 - n5)) + ((4 - d + 2*n5)*j[p4a, 0, -1 + n2, n3, 0, 
      1 + n5, 1, -1, n8, 0, 2, 0, 0, 1, 1])/(4*(-3 + d - n5)*
     (-2 + d - 2*n2 - n5)) + ((4 - d + 2*n5)*j[p4a, 0, -1 + n2, n3, 0, 
      1 + n5, 1, -1, n8, 0, 2, 1, 0, 0, 1])/(2*(-3 + d - n5)*
     (-2 + d - 2*n2 - n5)) + ((-4 + d - 2*n5)*n8*j[p4a, 0, -1 + n2, n3, 0, 
      1 + n5, 1, -1, 1 + n8, 0, 1, 0, 0, 1, 1])/
    (4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*n8*j[p4a, 0, -1 + n2, n3, 0, 1 + n5, 1, -1, 1 + n8, 0, 1, 
      1, 0, 0, 1])/(4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*j[p4a, 0, -1 + n2, n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 1, 1, 
      0, 1, 1])/(2*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*j[p4a, 0, -1 + n2, n3, 0, 1 + n5, 1, 0, n8, 0, 0, 1, 0, 
      1, 1])/(2*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((4 - d + 2*n5)*j[p4a, 0, -1 + n2, n3, 0, 1 + n5, 1, 0, n8, 0, 1, 0, 0, 1, 
      1])/(2*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((4 - d + 2*n5)*j[p4a, 0, -1 + n2, n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, -1, 
      1, 1])/(2*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*j[p4a, 0, -1 + n2, n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, 0, 
      0, 1])/(2*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*j[p4a, 0, -1 + n2, n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, 0, 
      1, 1])/(2*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) - 
   j[p4a, 0, -1 + n2, n3, 0, 1 + n5, 2, -1, -1 + n8, 0, 1, 1, 0, 1, 1]/
    (2*(-3 + d - n5)) + ((4 - d + 2*n5)*j[p4a, 0, -1 + n2, n3, 0, 1 + n5, 2, 
      -1, n8, 0, 0, 1, 0, 1, 1])/(4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) - 
   j[p4a, 0, -1 + n2, n3, 0, 1 + n5, 2, -1, n8, 0, 1, 1, 0, 0, 1]/
    (2*(-3 + d - n5)) - j[p4a, 0, -1 + n2, n3, 0, 1 + n5, 2, -1, n8, 0, 1, 1, 
     0, 1, 0]/(2*(-3 + d - n5)) + 
   ((d - 4*n2)*(1 + n5)*j[p4a, 0, -1 + n2, n3, 0, 2 + n5, 1, -1, n8, 0, 1, 1, 
      0, 0, 1])/(4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) - 
   ((d - 4*n2)*(1 + n5)*j[p4a, 0, -1 + n2, n3, 0, 2 + n5, 1, -1, n8, 0, 1, 1, 
      0, 1, 0])/(4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) - 
   (n3*(-4 + d - 2*n5)*j[p4a, 0, -1 + n2, 1 + n3, 0, 1 + n5, 1, -1, n8, 0, 0, 
      1, 0, 1, 1])/(2*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   (n3*(-4 + d - 2*n5)*j[p4a, 0, -1 + n2, 1 + n3, 0, 1 + n5, 1, -1, n8, 0, 1, 
      0, 0, 1, 1])/(2*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   (3*n3*(-4 + d - 2*n5)*j[p4a, 0, -1 + n2, 1 + n3, 0, 1 + n5, 1, -1, n8, 0, 
      1, 1, 0, 0, 1])/(4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((-d + 4*n2)*j[p4a, 0, n2, -1 + n3, 0, 1 + n5, 1, -1, n8, 0, 1, 1, 0, 0, 
      2])/(4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*(-4 + 3*d - n2 - 2*n3 - n5 - n8)*
     j[p4a, 0, n2, -1 + n3, 0, 1 + n5, 1, -1, n8, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((4 - d + 2*n5)*j[p4a, 0, n2, -1 + n3, 0, 1 + n5, 1, -1, n8, 0, 2, 0, 0, 
      1, 1])/(4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*j[p4a, 0, n2, -1 + n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 1, 1, 
      0, 1, 1])/(2*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*j[p4a, 0, n2, -1 + n3, 0, 1 + n5, 1, 0, n8, 0, 0, 1, 0, 
      1, 1])/(2*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((4 - d + 2*n5)*j[p4a, 0, n2, -1 + n3, 0, 1 + n5, 1, 0, n8, 0, 1, 0, 0, 1, 
      1])/(2*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) - 
   j[p4a, 0, n2, -1 + n3, 0, 1 + n5, 2, -1, -1 + n8, 0, 1, 1, 0, 1, 1]/
    (2*(-3 + d - n5)) + ((4 - d + 2*n5)*j[p4a, 0, n2, -1 + n3, 0, 1 + n5, 2, 
      -1, n8, 0, 0, 1, 0, 1, 1])/(2*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((4 - d + 2*n5)*j[p4a, 0, n2, n3, -1, 1 + n5, 1, -1, n8, 0, 1, 1, 0, 1, 
      1])/(2*(-2 + d - 2*n2 - n5)) + 
   ((4 - d + 2*n5)*j[p4a, 0, n2, n3, -1, 1 + n5, 2, -1, n8, 0, 0, 1, 0, 1, 
      1])/(4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*j[p4a, 0, n2, n3, -1, 1 + n5, 2, -1, n8, 0, 1, 1, 0, 0, 
      1])/(4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*j[p4a, 0, n2, n3, -1, 1 + n5, 2, -1, n8, 0, 1, 1, 0, 1, 
      0])/(4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) - 
   ((-4 + d - 2*n5)*(1 + n5)*j[p4a, 0, n2, n3, -1, 2 + n5, 1, -1, n8, 0, 1, 
      1, 0, 0, 1])/(4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*(1 + n5)*j[p4a, 0, n2, n3, -1, 2 + n5, 1, -1, n8, 0, 1, 
      1, 0, 1, 0])/(4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((d - 4*n2)*j[p4a, 0, n2, n3, 0, n5, 0, -1, n8, 0, 1, 1, 0, 1, 2])/
    (4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((d - 4*n2)*j[p4a, 0, n2, n3, 0, n5, 1, -1, n8, 0, 1, 1, 0, 0, 2])/
    (4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((4 - d + 2*n5)*j[p4a, 0, n2, n3, 0, n5, 2, -1, n8, 0, 0, 1, 0, 1, 1])/
    (4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   j[p4a, 0, n2, n3, 0, n5, 2, -1, n8, 0, 1, 1, 0, 0, 1]/(2*(-3 + d - n5)) + 
   j[p4a, 0, n2, n3, 0, n5, 2, -1, n8, 0, 1, 1, 0, 1, 0]/(2*(-3 + d - n5)) + 
   ((d - 4*n2)*n5*j[p4a, 0, n2, n3, 0, 1 + n5, 0, -1, n8, 0, 1, 1, 0, 1, 1])/
    (4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((d - 4*n2)*j[p4a, 0, n2, n3, 0, 1 + n5, 1, -2, n8, 0, 1, 1, 0, 0, 2])/
    (4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*j[p4a, 0, n2, n3, 0, 1 + n5, 1, -2, n8, 0, 2, 0, 0, 1, 
      1])/(4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*j[p4a, 0, n2, n3, 0, 1 + n5, 1, -2, n8, 0, 2, 1, 0, 0, 
      1])/(4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) - 
   ((-4 + d - 2*n5)*n8*j[p4a, 0, n2, n3, 0, 1 + n5, 1, -2, 1 + n8, 0, 1, 0, 
      0, 1, 1])/(4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) - 
   ((-4 + d - 2*n5)*n8*j[p4a, 0, n2, n3, 0, 1 + n5, 1, -2, 1 + n8, 0, 1, 1, 
      0, 0, 1])/(4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((4 - d + 2*n5)*j[p4a, 0, n2, n3, 0, 1 + n5, 1, -1, -1 + n8, 0, 0, 2, 0, 
      1, 1])/(2*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((d - 4*n2)*j[p4a, 0, n2, n3, 0, 1 + n5, 1, -1, -1 + n8, 0, 1, 1, 0, 0, 
      2])/(4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((8 - 98*d + 52*d^2 - 7*d^3 + 4*n2 - d*n2 + 92*n3 - 83*d*n3 + 15*d^2*n3 + 
      32*n3^2 - 8*d*n3^2 + 16*n5 - 78*d*n5 + 21*d^2*n5 - 2*n2*n5 + 78*n3*n5 - 
      38*d*n3*n5 + 16*n3^2*n5 + 6*n5^2 - 14*d*n5^2 + 16*n3*n5^2 + 92*n8 - 
      43*d*n8 + 5*d^2*n8 - 4*n2*n8 + d*n2*n8 + 36*n3*n8 - 9*d*n3*n8 + 
      66*n5*n8 - 16*d*n5*n8 + 2*n2*n5*n8 + 18*n3*n5*n8 + 10*n5^2*n8 - 
      4*n8^2 + d*n8^2 - 2*n5*n8^2)*j[p4a, 0, n2, n3, 0, 1 + n5, 1, -1, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/(4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)*
     (-1 + n8)) + ((-4 + d - 2*n5)*j[p4a, 0, n2, n3, 0, 1 + n5, 1, -1, 
      -1 + n8, 0, 2, 0, 0, 1, 1])/(4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*j[p4a, 0, n2, n3, 0, 1 + n5, 1, -1, n8, -1, 1, 1, 0, 0, 
      2])/(4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) - 
   ((1 + n2 + 3*n3)*(-4 + d - 2*n5)*j[p4a, 0, n2, n3, 0, 1 + n5, 1, -1, n8, 
      0, 0, 1, 0, 1, 1])/(4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*j[p4a, 0, n2, n3, 0, 1 + n5, 1, -1, n8, 0, 0, 2, -1, 1, 
      1])/(4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((4 - d + 2*n5)*j[p4a, 0, n2, n3, 0, 1 + n5, 1, -1, n8, 0, 0, 2, 0, 1, 1])/
    (4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((2 + 3*n3)*(-4 + d - 2*n5)*j[p4a, 0, n2, n3, 0, 1 + n5, 1, -1, n8, 0, 1, 
      0, 0, 1, 1])/(4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((-d + 4*n2)*j[p4a, 0, n2, n3, 0, 1 + n5, 1, -1, n8, 0, 1, 1, -1, 0, 2])/
    (4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((20 - 33*d + 7*d^2 + 8*n2 - 2*d*n2 + 12*n3 - 3*d*n3 + 14*n5 - 16*d*n5 + 
      8*n2*n5 + 6*n3*n5 + 2*n5^2 + 36*n8 - 9*d*n8 + 18*n5*n8)*
     j[p4a, 0, n2, n3, 0, 1 + n5, 1, -1, n8, 0, 1, 1, 0, 0, 1])/
    (4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((4 - d + 2*n5)*j[p4a, 0, n2, n3, 0, 1 + n5, 1, -1, n8, 0, 1, 1, 0, 0, 2])/
    (4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((12 - 3*d + 2*n5 + 2*d*n5 - 4*n2*n5 - 2*n5^2)*j[p4a, 0, n2, n3, 0, 
      1 + n5, 1, -1, n8, 0, 1, 1, 0, 1, 0])/(4*(-3 + d - n5)*
     (-2 + d - 2*n2 - n5)) - ((-4 + d - 2*n5)*(-3 + 4*d - 2*n2 - 2*n3 - 
      2*n5 - 4*n8)*j[p4a, 0, n2, n3, 0, 1 + n5, 1, -1, n8, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((4 - d + 2*n5)*j[p4a, 0, n2, n3, 0, 1 + n5, 1, -1, n8, 0, 2, 0, -1, 1, 
      1])/(4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*j[p4a, 0, n2, n3, 0, 1 + n5, 1, -1, n8, 0, 2, 0, 0, 1, 
      1])/(4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((4 - d + 2*n5)*j[p4a, 0, n2, n3, 0, 1 + n5, 1, 0, -2 + n8, 0, 1, 1, 0, 1, 
      1])/(2*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*j[p4a, 0, n2, n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 1, 1, -1, 
      1, 1])/(2*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((4 - d + 2*n5)*j[p4a, 0, n2, n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 1, 1, 0, 0, 
      1])/((-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((4 - d + 2*n5)*j[p4a, 0, n2, n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 1, 1, 0, 1, 
      1])/(2*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*j[p4a, 0, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 0, 1, -1, 1, 
      1])/(2*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((4 - d + 2*n5)*j[p4a, 0, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 1, 0, -1, 1, 1])/
    (2*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   j[p4a, 0, n2, n3, 0, 1 + n5, 2, -2, -1 + n8, 0, 1, 1, 0, 1, 1]/
    (2*(-3 + d - n5)) + ((-4 + d - 2*n5)*j[p4a, 0, n2, n3, 0, 1 + n5, 2, -2, 
      n8, 0, 0, 1, 0, 1, 1])/(2*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   j[p4a, 0, n2, n3, 0, 1 + n5, 2, -1, -2 + n8, 0, 1, 1, 0, 1, 1]/
    (2*(-3 + d - n5)) + (3*(-4 + d - 2*n5)*j[p4a, 0, n2, n3, 0, 1 + n5, 2, 
      -1, -1 + n8, -1, 1, 1, 0, 1, 1])/(4*(-3 + d - n5)*
     (-2 + d - 2*n2 - n5)) - j[p4a, 0, n2, n3, 0, 1 + n5, 2, -1, -1 + n8, 0, 
     1, 1, -1, 1, 1]/(2*(-3 + d - n5)) + 
   ((d - 4*n2)*j[p4a, 0, n2, n3, 0, 1 + n5, 2, -1, -1 + n8, 0, 1, 1, 0, 0, 
      1])/(4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((d - 4*n2)*j[p4a, 0, n2, n3, 0, 1 + n5, 2, -1, -1 + n8, 0, 1, 1, 0, 1, 
      0])/(4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*j[p4a, 0, n2, n3, 0, 1 + n5, 2, -1, n8, -1, 1, 1, 0, 0, 
      1])/(2*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*j[p4a, 0, n2, n3, 0, 1 + n5, 2, -1, n8, -1, 1, 1, 0, 1, 
      0])/(2*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((4 - d + 2*n5)*j[p4a, 0, n2, n3, 0, 1 + n5, 2, -1, n8, 0, 0, 1, -1, 1, 
      1])/(2*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*(1 + n5)*j[p4a, 0, n2, n3, 0, 2 + n5, 1, -2, n8, 0, 1, 1, 
      0, 0, 1])/(4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) - 
   ((-4 + d - 2*n5)*(1 + n5)*j[p4a, 0, n2, n3, 0, 2 + n5, 1, -2, n8, 0, 1, 1, 
      0, 1, 0])/(4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((1 + n5)*(12 - 30*d + 7*d^2 - 4*n2 + 32*n3 - 8*d*n3 + 6*n5 - 14*d*n5 + 
      16*n3*n5 + 20*n8 - 6*d*n8 + 4*n2*n8 + 10*n5*n8)*
     j[p4a, 0, n2, n3, 0, 2 + n5, 1, -1, -1 + n8, 0, 1, 1, 0, 0, 1])/
    (4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)*(-1 + n8)) - 
   ((1 + n5)*(12 - 30*d + 7*d^2 - 4*n2 + 32*n3 - 8*d*n3 + 6*n5 - 14*d*n5 + 
      16*n3*n5 + 20*n8 - 6*d*n8 + 4*n2*n8 + 10*n5*n8)*
     j[p4a, 0, n2, n3, 0, 2 + n5, 1, -1, -1 + n8, 0, 1, 1, 0, 1, 0])/
    (4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)*(-1 + n8)) - 
   ((-4 + d - 2*n5)*(1 + n5)*j[p4a, 0, n2, n3, 0, 2 + n5, 1, -1, n8, -1, 1, 
      1, 0, 0, 1])/(2*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*(1 + n5)*j[p4a, 0, n2, n3, 0, 2 + n5, 1, -1, n8, -1, 1, 
      1, 0, 1, 0])/(2*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   (n3*(-4 + d - 2*n5)*(-1 - 7*d + 8*n3 + 9*n8)*j[p4a, 0, n2, 1 + n3, 0, 
      1 + n5, 1, -2, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)*(-1 + n8)) + 
   (3*n3*(-4 + d - 2*n5)*j[p4a, 0, n2, 1 + n3, 0, 1 + n5, 1, -2, n8, 0, 0, 1, 
      0, 1, 1])/(4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) - 
   (3*n3*(-4 + d - 2*n5)*j[p4a, 0, n2, 1 + n3, 0, 1 + n5, 1, -2, n8, 0, 1, 0, 
      0, 1, 1])/(4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) - 
   (5*n3*(-4 + d - 2*n5)*j[p4a, 0, n2, 1 + n3, 0, 1 + n5, 1, -2, n8, 0, 1, 1, 
      0, 0, 1])/(4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   (n3*(-4 + d - 2*n5)*j[p4a, 0, n2, 1 + n3, 0, 1 + n5, 1, -1, -2 + n8, 0, 1, 
      1, 0, 1, 1])/((-3 + d - n5)*(-2 + d - 2*n2 - n5)) - 
   (n3*(-4 + d - 2*n5)*j[p4a, 0, n2, 1 + n3, 0, 1 + n5, 1, -1, -1 + n8, 0, 1, 
      1, -1, 1, 1])/((-3 + d - n5)*(-2 + d - 2*n2 - n5)) - 
   (n3*(-4 + d - 2*n5)*(-2 - 7*d + 8*n3 + 10*n8)*j[p4a, 0, n2, 1 + n3, 0, 
      1 + n5, 1, -1, -1 + n8, 0, 1, 1, 0, 0, 1])/
    (4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)*(-1 + n8)) + 
   (n3*(-4 + d - 2*n5)*j[p4a, 0, n2, 1 + n3, 0, 1 + n5, 1, -1, -1 + n8, 0, 1, 
      1, 0, 1, 1])/((-3 + d - n5)*(-2 + d - 2*n2 - n5)) - 
   (n3*(-4 + d - 2*n5)*j[p4a, 0, n2, 1 + n3, 0, 1 + n5, 1, -1, n8, 0, 0, 1, 
      -1, 1, 1])/(2*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   (n3*(-4 + d - 2*n5)*j[p4a, 0, n2, 1 + n3, 0, 1 + n5, 1, -1, n8, 0, 1, 0, 
      -1, 1, 1])/(2*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   (n3*(-4 + d - 2*n5)*j[p4a, 0, n2, 1 + n3, 0, 1 + n5, 1, -1, n8, 0, 1, 1, 
      -1, 0, 1])/(2*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   (n3*(-4 + d - 2*n5)*j[p4a, 0, n2, 1 + n3, 0, 1 + n5, 1, -1, n8, 0, 1, 1, 
      0, 0, 1])/(4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) - 
   (n2*(-4 + d - 2*n5)*(-4 + 7*d - 8*n3 - 4*n8)*j[p4a, 0, 1 + n2, -1 + n3, 0, 
      1 + n5, 1, -1, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)*(-1 + n8)) - 
   (n2*(-4 + d - 2*n5)*j[p4a, 0, 1 + n2, -1 + n3, 0, 1 + n5, 1, -1, n8, 0, 0, 
      1, 0, 1, 1])/(2*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   (n2*(-4 + d - 2*n5)*(-4 + 7*d - 8*n3 - 4*n8)*j[p4a, 0, 1 + n2, n3, 0, 
      1 + n5, 1, -2, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)*(-1 + n8)) + 
   (n2*(-4 + d - 2*n5)*j[p4a, 0, 1 + n2, n3, 0, 1 + n5, 1, -2, n8, 0, 0, 1, 
      0, 1, 1])/(4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   (n2*(-4 + d - 2*n5)*j[p4a, 0, 1 + n2, n3, 0, 1 + n5, 1, -2, n8, 0, 1, 1, 
      0, 0, 1])/(2*(-3 + d - n5)*(-2 + d - 2*n2 - n5)) + 
   (n2*(-4 + d - 2*n5)*(-4 + 7*d - 8*n3 - 4*n8)*j[p4a, 0, 1 + n2, n3, 0, 
      1 + n5, 1, -1, -2 + n8, 0, 1, 1, 0, 1, 1])/
    (4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)*(-1 + n8)) - 
   (n2*(-4 + d - 2*n5)*(-4 + 7*d - 8*n3 - 4*n8)*j[p4a, 0, 1 + n2, n3, 0, 
      1 + n5, 1, -1, -1 + n8, 0, 1, 1, -1, 1, 1])/
    (4*(-3 + d - n5)*(-2 + d - 2*n2 - n5)*(-1 + n8)) + 
   (n2*(-4 + d - 2*n5)*(-3 + 7*d - 8*n3 - 5*n8)*j[p4a, 0, 1 + n2, n3, 0, 
      1 + n5, 1, -1, -1 + n8, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n5)*(-2 + d - 2*n2 - n5)*(-1 + n8)) - 
   (n2*(-4 + d - 2*n5)*j[p4a, 0, 1 + n2, n3, 0, 1 + n5, 1, -1, n8, 0, 0, 1, 
      -1, 1, 1])/(2*(-3 + d - n5)*(-2 + d - 2*n2 - n5)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n4 == 0 && n6 == 1 && n7 == 0 && n9 == 0 &&  !(n5 == 0 || n8 == 1) -> 
  ((-4 + d - 2*n5)*j[p4a, -1, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 0, 2, 0, 1, 1])/
    (2*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*(-27 + 14*d - 4*n2 - 8*n3 - 8*n5 - 9*n8)*
     j[p4a, -1, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, 0, 1, 1])/
    (4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*j[p4a, -1, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 2, 1, 0, 0, 
      1])/(2*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) - 
   ((-4 + d - 2*n5)*(1 + n5)*j[p4a, -1, n2, n3, 0, 2 + n5, 1, 0, n8, 0, 1, 1, 
      0, 0, 1])/(2*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*(1 + n5)*j[p4a, -1, n2, n3, 0, 2 + n5, 1, 0, n8, 0, 1, 1, 
      0, 1, 0])/(2*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) - 
   (n3*(-4 + d - 2*n5)*j[p4a, -1, n2, 1 + n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 1, 
      1, 0, 1, 1])/((-3 + d - n5)*(-3 + d - 2*n2 - n5)) - 
   (n3*(-4 + d - 2*n5)*j[p4a, -1, n2, 1 + n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, 
      0, 0, 1])/(4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   (n2*(-4 + d - 2*n5)*j[p4a, -1, 1 + n2, -1 + n3, 0, 1 + n5, 1, 0, n8, 0, 1, 
      1, 0, 1, 1])/((-3 + d - n5)*(-3 + d - 2*n2 - n5)) - 
   (n2*(-4 + d - 2*n5)*j[p4a, -1, 1 + n2, n3, 0, 1 + n5, 1, -1, n8, 0, 1, 1, 
      0, 1, 1])/((-3 + d - n5)*(-3 + d - 2*n2 - n5)) - 
   (n2*(-4 + d - 2*n5)*j[p4a, -1, 1 + n2, n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 1, 
      1, 0, 1, 1])/(4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   (n2*(-4 + d - 2*n5)*j[p4a, -1, 1 + n2, n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, 
      -1, 1, 1])/((-3 + d - n5)*(-3 + d - 2*n2 - n5)) - 
   (n2*(-4 + d - 2*n5)*j[p4a, -1, 1 + n2, n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, 
      0, 0, 1])/((-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   ((2 - d + 4*n2)*j[p4a, 0, -1 + n2, n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, 0, 0, 
      2])/(4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) - 
   ((-4 + d - 2*n5)*(-8 + 3*d - 2*n3 - 2*n5)*j[p4a, 0, -1 + n2, n3, 0, 
      1 + n5, 1, 0, n8, 0, 1, 1, 0, 1, 1])/(4*(-3 + d - n5)*
     (-3 + d - 2*n2 - n5)) + ((4 - d + 2*n5)*j[p4a, 0, -1 + n2, n3, 0, 
      1 + n5, 1, 0, n8, 0, 2, 0, 0, 1, 1])/(4*(-3 + d - n5)*
     (-3 + d - 2*n2 - n5)) + ((4 - d + 2*n5)*j[p4a, 0, -1 + n2, n3, 0, 
      1 + n5, 1, 0, n8, 0, 2, 1, 0, 0, 1])/(2*(-3 + d - n5)*
     (-3 + d - 2*n2 - n5)) + ((-4 + d - 2*n5)*n8*j[p4a, 0, -1 + n2, n3, 0, 
      1 + n5, 1, 0, 1 + n8, 0, 1, 0, 0, 1, 1])/(4*(-3 + d - n5)*
     (-3 + d - 2*n2 - n5)) + ((-4 + d - 2*n5)*n8*j[p4a, 0, -1 + n2, n3, 0, 
      1 + n5, 1, 0, 1 + n8, 0, 1, 1, 0, 0, 1])/(4*(-3 + d - n5)*
     (-3 + d - 2*n2 - n5)) - j[p4a, 0, -1 + n2, n3, 0, 1 + n5, 2, 0, -1 + n8, 
     0, 1, 1, 0, 1, 1]/(2*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4a, 0, -1 + n2, n3, 0, 1 + n5, 2, 0, n8, 0, 0, 1, 0, 1, 
      1])/(4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) - 
   j[p4a, 0, -1 + n2, n3, 0, 1 + n5, 2, 0, n8, 0, 1, 1, 0, 0, 1]/
    (2*(-3 + d - n5)) - j[p4a, 0, -1 + n2, n3, 0, 1 + n5, 2, 0, n8, 0, 1, 1, 
     0, 1, 0]/(2*(-3 + d - n5)) + ((-2 + d - 4*n2)*(1 + n5)*
     j[p4a, 0, -1 + n2, n3, 0, 2 + n5, 1, 0, n8, 0, 1, 1, 0, 0, 1])/
    (4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) - 
   ((-2 + d - 4*n2)*(1 + n5)*j[p4a, 0, -1 + n2, n3, 0, 2 + n5, 1, 0, n8, 0, 
      1, 1, 0, 1, 0])/(4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) - 
   (n3*(-4 + d - 2*n5)*j[p4a, 0, -1 + n2, 1 + n3, 0, 1 + n5, 1, 0, n8, 0, 0, 
      1, 0, 1, 1])/(2*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   (n3*(-4 + d - 2*n5)*j[p4a, 0, -1 + n2, 1 + n3, 0, 1 + n5, 1, 0, n8, 0, 1, 
      0, 0, 1, 1])/(2*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   (3*n3*(-4 + d - 2*n5)*j[p4a, 0, -1 + n2, 1 + n3, 0, 1 + n5, 1, 0, n8, 0, 
      1, 1, 0, 0, 1])/(4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   ((2 - d + 4*n2)*j[p4a, 0, n2, -1 + n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, 0, 0, 
      2])/(4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*(-6 + 3*d - n2 - 2*n3 - n5 - n8)*
     j[p4a, 0, n2, -1 + n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   ((4 - d + 2*n5)*j[p4a, 0, n2, -1 + n3, 0, 1 + n5, 1, 0, n8, 0, 2, 0, 0, 1, 
      1])/(4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) - 
   j[p4a, 0, n2, -1 + n3, 0, 1 + n5, 2, 0, -1 + n8, 0, 1, 1, 0, 1, 1]/
    (2*(-3 + d - n5)) + ((4 - d + 2*n5)*j[p4a, 0, n2, -1 + n3, 0, 1 + n5, 2, 
      0, n8, 0, 0, 1, 0, 1, 1])/(2*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   ((4 - d + 2*n5)*j[p4a, 0, n2, n3, -1, 1 + n5, 1, 0, n8, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - 2*n2 - n5)) + 
   ((4 - d + 2*n5)*j[p4a, 0, n2, n3, -1, 1 + n5, 2, 0, n8, 0, 0, 1, 0, 1, 1])/
    (4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*j[p4a, 0, n2, n3, -1, 1 + n5, 2, 0, n8, 0, 1, 1, 0, 0, 
      1])/(4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*j[p4a, 0, n2, n3, -1, 1 + n5, 2, 0, n8, 0, 1, 1, 0, 1, 
      0])/(4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) - 
   ((-4 + d - 2*n5)*(1 + n5)*j[p4a, 0, n2, n3, -1, 2 + n5, 1, 0, n8, 0, 1, 1, 
      0, 0, 1])/(4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*(1 + n5)*j[p4a, 0, n2, n3, -1, 2 + n5, 1, 0, n8, 0, 1, 1, 
      0, 1, 0])/(4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   ((-2 + d - 4*n2)*j[p4a, 0, n2, n3, 0, n5, 0, 0, n8, 0, 1, 1, 0, 1, 2])/
    (4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   ((-2 + d - 4*n2)*j[p4a, 0, n2, n3, 0, n5, 1, 0, n8, 0, 1, 1, 0, 0, 2])/
    (4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   ((4 - d + 2*n5)*j[p4a, 0, n2, n3, 0, n5, 2, 0, n8, 0, 0, 1, 0, 1, 1])/
    (4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   j[p4a, 0, n2, n3, 0, n5, 2, 0, n8, 0, 1, 1, 0, 0, 1]/(2*(-3 + d - n5)) + 
   j[p4a, 0, n2, n3, 0, n5, 2, 0, n8, 0, 1, 1, 0, 1, 0]/(2*(-3 + d - n5)) + 
   ((-2 + d - 4*n2)*n5*j[p4a, 0, n2, n3, 0, 1 + n5, 0, 0, n8, 0, 1, 1, 0, 1, 
      1])/(4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   ((-2 + d - 4*n2)*j[p4a, 0, n2, n3, 0, 1 + n5, 1, -1, n8, 0, 1, 1, 0, 0, 
      2])/(4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*j[p4a, 0, n2, n3, 0, 1 + n5, 1, -1, n8, 0, 2, 0, 0, 1, 
      1])/(4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*j[p4a, 0, n2, n3, 0, 1 + n5, 1, -1, n8, 0, 2, 1, 0, 0, 
      1])/(4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) - 
   ((-4 + d - 2*n5)*n8*j[p4a, 0, n2, n3, 0, 1 + n5, 1, -1, 1 + n8, 0, 1, 0, 
      0, 1, 1])/(4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) - 
   ((-4 + d - 2*n5)*n8*j[p4a, 0, n2, n3, 0, 1 + n5, 1, -1, 1 + n8, 0, 1, 1, 
      0, 0, 1])/(4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   ((4 - d + 2*n5)*j[p4a, 0, n2, n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 0, 2, 0, 1, 
      1])/(2*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   ((-2 + d - 4*n2)*j[p4a, 0, n2, n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 1, 1, 0, 
      0, 2])/(4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   ((96 - 144*d + 58*d^2 - 7*d^3 + 4*n2 - d*n2 + 116*n3 - 89*d*n3 + 
      15*d^2*n3 + 32*n3^2 - 8*d*n3^2 + 82*n5 - 96*d*n5 + 21*d^2*n5 - 
      2*n2*n5 + 90*n3*n5 - 38*d*n3*n5 + 16*n3^2*n5 + 18*n5^2 - 14*d*n5^2 + 
      16*n3*n5^2 + 76*n8 - 39*d*n8 + 5*d^2*n8 - 4*n2*n8 + d*n2*n8 + 
      36*n3*n8 - 9*d*n3*n8 + 60*n5*n8 - 16*d*n5*n8 + 2*n2*n5*n8 + 
      18*n3*n5*n8 + 10*n5^2*n8 - 4*n8^2 + d*n8^2 - 2*n5*n8^2)*
     j[p4a, 0, n2, n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)*(-1 + n8)) + 
   ((-4 + d - 2*n5)*j[p4a, 0, n2, n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 2, 0, 0, 
      1, 1])/(4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*j[p4a, 0, n2, n3, 0, 1 + n5, 1, 0, n8, -1, 1, 1, 0, 0, 
      2])/(4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) - 
   ((-1 + n2 + 3*n3)*(-4 + d - 2*n5)*j[p4a, 0, n2, n3, 0, 1 + n5, 1, 0, n8, 
      0, 0, 1, 0, 1, 1])/(4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*j[p4a, 0, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 0, 2, -1, 1, 
      1])/(4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   ((4 - d + 2*n5)*j[p4a, 0, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 0, 2, 0, 1, 1])/
    (4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   (3*n3*(-4 + d - 2*n5)*j[p4a, 0, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 1, 0, 0, 
      1, 1])/(4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   ((2 - d + 4*n2)*j[p4a, 0, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, -1, 0, 2])/
    (4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   ((36 - 37*d + 7*d^2 + 8*n2 - 2*d*n2 + 12*n3 - 3*d*n3 + 24*n5 - 16*d*n5 + 
      8*n2*n5 + 6*n3*n5 + 2*n5^2 + 36*n8 - 9*d*n8 + 18*n5*n8)*
     j[p4a, 0, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, 0, 0, 1])/
    (4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   ((4 - d + 2*n5)*j[p4a, 0, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, 0, 0, 2])/
    (4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   ((12 - 3*d + 2*d*n5 - 4*n2*n5 - 2*n5^2)*j[p4a, 0, n2, n3, 0, 1 + n5, 1, 0, 
      n8, 0, 1, 1, 0, 1, 0])/(4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) - 
   ((-4 + d - 2*n5)*(-3 + 2*d - n2 - n3 - n5 - 2*n8)*
     j[p4a, 0, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   ((4 - d + 2*n5)*j[p4a, 0, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 2, 0, -1, 1, 1])/
    (4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*j[p4a, 0, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 2, 0, 0, 1, 1])/
    (4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   j[p4a, 0, n2, n3, 0, 1 + n5, 2, -1, -1 + n8, 0, 1, 1, 0, 1, 1]/
    (2*(-3 + d - n5)) + ((-4 + d - 2*n5)*j[p4a, 0, n2, n3, 0, 1 + n5, 2, -1, 
      n8, 0, 0, 1, 0, 1, 1])/(2*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   j[p4a, 0, n2, n3, 0, 1 + n5, 2, 0, -2 + n8, 0, 1, 1, 0, 1, 1]/
    (2*(-3 + d - n5)) + (3*(-4 + d - 2*n5)*j[p4a, 0, n2, n3, 0, 1 + n5, 2, 0, 
      -1 + n8, -1, 1, 1, 0, 1, 1])/(4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) - 
   j[p4a, 0, n2, n3, 0, 1 + n5, 2, 0, -1 + n8, 0, 1, 1, -1, 1, 1]/
    (2*(-3 + d - n5)) + ((-2 + d - 4*n2)*j[p4a, 0, n2, n3, 0, 1 + n5, 2, 0, 
      -1 + n8, 0, 1, 1, 0, 0, 1])/(4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   ((-2 + d - 4*n2)*j[p4a, 0, n2, n3, 0, 1 + n5, 2, 0, -1 + n8, 0, 1, 1, 0, 
      1, 0])/(4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*j[p4a, 0, n2, n3, 0, 1 + n5, 2, 0, n8, -1, 1, 1, 0, 0, 
      1])/(2*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*j[p4a, 0, n2, n3, 0, 1 + n5, 2, 0, n8, -1, 1, 1, 0, 1, 
      0])/(2*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   ((4 - d + 2*n5)*j[p4a, 0, n2, n3, 0, 1 + n5, 2, 0, n8, 0, 0, 1, -1, 1, 1])/
    (2*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*(1 + n5)*j[p4a, 0, n2, n3, 0, 2 + n5, 1, -1, n8, 0, 1, 1, 
      0, 0, 1])/(4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) - 
   ((-4 + d - 2*n5)*(1 + n5)*j[p4a, 0, n2, n3, 0, 2 + n5, 1, -1, n8, 0, 1, 1, 
      0, 1, 0])/(4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   ((1 + n5)*(34 - 36*d + 7*d^2 - 4*n2 + 32*n3 - 8*d*n3 + 18*n5 - 14*d*n5 + 
      16*n3*n5 + 22*n8 - 6*d*n8 + 4*n2*n8 + 10*n5*n8)*
     j[p4a, 0, n2, n3, 0, 2 + n5, 1, 0, -1 + n8, 0, 1, 1, 0, 0, 1])/
    (4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)*(-1 + n8)) - 
   ((1 + n5)*(34 - 36*d + 7*d^2 - 4*n2 + 32*n3 - 8*d*n3 + 18*n5 - 14*d*n5 + 
      16*n3*n5 + 22*n8 - 6*d*n8 + 4*n2*n8 + 10*n5*n8)*
     j[p4a, 0, n2, n3, 0, 2 + n5, 1, 0, -1 + n8, 0, 1, 1, 0, 1, 0])/
    (4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)*(-1 + n8)) - 
   ((-4 + d - 2*n5)*(1 + n5)*j[p4a, 0, n2, n3, 0, 2 + n5, 1, 0, n8, -1, 1, 1, 
      0, 0, 1])/(2*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   ((-4 + d - 2*n5)*(1 + n5)*j[p4a, 0, n2, n3, 0, 2 + n5, 1, 0, n8, -1, 1, 1, 
      0, 1, 0])/(2*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   (n3*(-4 + d - 2*n5)*(5 - 7*d + 8*n3 + 9*n8)*j[p4a, 0, n2, 1 + n3, 0, 
      1 + n5, 1, -1, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)*(-1 + n8)) + 
   (3*n3*(-4 + d - 2*n5)*j[p4a, 0, n2, 1 + n3, 0, 1 + n5, 1, -1, n8, 0, 0, 1, 
      0, 1, 1])/(4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) - 
   (3*n3*(-4 + d - 2*n5)*j[p4a, 0, n2, 1 + n3, 0, 1 + n5, 1, -1, n8, 0, 1, 0, 
      0, 1, 1])/(4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) - 
   (5*n3*(-4 + d - 2*n5)*j[p4a, 0, n2, 1 + n3, 0, 1 + n5, 1, -1, n8, 0, 1, 1, 
      0, 0, 1])/(4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   (n3*(-4 + d - 2*n5)*j[p4a, 0, n2, 1 + n3, 0, 1 + n5, 1, 0, -2 + n8, 0, 1, 
      1, 0, 1, 1])/((-3 + d - n5)*(-3 + d - 2*n2 - n5)) - 
   (n3*(-4 + d - 2*n5)*j[p4a, 0, n2, 1 + n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 1, 
      1, -1, 1, 1])/((-3 + d - n5)*(-3 + d - 2*n2 - n5)) - 
   (n3*(-4 + d - 2*n5)*(4 - 7*d + 8*n3 + 10*n8)*j[p4a, 0, n2, 1 + n3, 0, 
      1 + n5, 1, 0, -1 + n8, 0, 1, 1, 0, 0, 1])/
    (4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)*(-1 + n8)) + 
   (n3*(-4 + d - 2*n5)*j[p4a, 0, n2, 1 + n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 1, 
      1, 0, 1, 1])/((-3 + d - n5)*(-3 + d - 2*n2 - n5)) - 
   (n3*(-4 + d - 2*n5)*j[p4a, 0, n2, 1 + n3, 0, 1 + n5, 1, 0, n8, 0, 0, 1, 
      -1, 1, 1])/(2*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   (n3*(-4 + d - 2*n5)*j[p4a, 0, n2, 1 + n3, 0, 1 + n5, 1, 0, n8, 0, 1, 0, 
      -1, 1, 1])/(2*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   (n3*(-4 + d - 2*n5)*j[p4a, 0, n2, 1 + n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, 
      -1, 0, 1])/(2*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   (n3*(-4 + d - 2*n5)*j[p4a, 0, n2, 1 + n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, 0, 
      0, 1])/(4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) - 
   (n2*(-4 + d - 2*n5)*(-10 + 7*d - 8*n3 - 4*n8)*j[p4a, 0, 1 + n2, -1 + n3, 
      0, 1 + n5, 1, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)*(-1 + n8)) - 
   (n2*(-4 + d - 2*n5)*j[p4a, 0, 1 + n2, -1 + n3, 0, 1 + n5, 1, 0, n8, 0, 0, 
      1, 0, 1, 1])/(2*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   (n2*(-4 + d - 2*n5)*(-10 + 7*d - 8*n3 - 4*n8)*j[p4a, 0, 1 + n2, n3, 0, 
      1 + n5, 1, -1, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)*(-1 + n8)) + 
   (n2*(-4 + d - 2*n5)*j[p4a, 0, 1 + n2, n3, 0, 1 + n5, 1, -1, n8, 0, 0, 1, 
      0, 1, 1])/(4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   (n2*(-4 + d - 2*n5)*j[p4a, 0, 1 + n2, n3, 0, 1 + n5, 1, -1, n8, 0, 1, 1, 
      0, 0, 1])/(2*(-3 + d - n5)*(-3 + d - 2*n2 - n5)) + 
   (n2*(-4 + d - 2*n5)*(-10 + 7*d - 8*n3 - 4*n8)*j[p4a, 0, 1 + n2, n3, 0, 
      1 + n5, 1, 0, -2 + n8, 0, 1, 1, 0, 1, 1])/
    (4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)*(-1 + n8)) - 
   (n2*(-4 + d - 2*n5)*(-10 + 7*d - 8*n3 - 4*n8)*j[p4a, 0, 1 + n2, n3, 0, 
      1 + n5, 1, 0, -1 + n8, 0, 1, 1, -1, 1, 1])/
    (4*(-3 + d - n5)*(-3 + d - 2*n2 - n5)*(-1 + n8)) + 
   (n2*(-4 + d - 2*n5)*(-9 + 7*d - 8*n3 - 5*n8)*j[p4a, 0, 1 + n2, n3, 0, 
      1 + n5, 1, 0, -1 + n8, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n5)*(-3 + d - 2*n2 - n5)*(-1 + n8)) - 
   (n2*(-4 + d - 2*n5)*j[p4a, 0, 1 + n2, n3, 0, 1 + n5, 1, 0, n8, 0, 0, 1, 
      -1, 1, 1])/(2*(-3 + d - n5)*(-3 + d - 2*n2 - n5)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && n5 == 0 && 
    n6 == 1 && n7 == 0 && n8 == 1 && n9 == 0 &&  !(n11 == 1 || n4 == 0) -> 
  ((4 - d + 2*n4)*j[p4a, 0, -1, n3, 1 + n4, 0, 1, 0, 1, 0, n10, n11, 0, 1, 
      1])/(2*(-3 + d - n4)) + ((-4 + d - 2*n4)*j[p4a, 0, -1, n3, 1 + n4, 0, 
      1, 0, 2, 0, n10, -1 + n11, 0, 1, 1])/(2*(-1 + n11)*(-3 + d - n4)) - 
   j[p4a, 0, -1, n3, 1 + n4, 0, 2, 0, 0, 0, n10, n11, 0, 1, 1]/
    (2*(-3 + d - n4)) - (n3*(-4 + d - 2*n4)*j[p4a, 0, -1, 1 + n3, 1 + n4, 0, 
      1, 0, 1, 0, n10, -1 + n11, 0, 1, 1])/(2*(-1 + n11)*(-3 + d - n4)) - 
   j[p4a, 0, 0, -1 + n3, 1 + n4, 0, 0, 0, 1, 0, n10, n11, 0, 1, 2]/
    (2*(-3 + d - n4)) - j[p4a, 0, 0, -1 + n3, 1 + n4, 0, 1, 0, 0, 0, n10, 
     n11, 0, 1, 2]/(2*(-3 + d - n4)) - 
   j[p4a, 0, 0, -1 + n3, 1 + n4, 0, 1, 0, 1, 0, n10, n11, 0, 0, 2]/
    (2*(-3 + d - n4)) - j[p4a, 0, 0, -1 + n3, 1 + n4, 0, 2, 0, 0, 0, n10, 
     n11, 0, 1, 1]/(2*(-3 + d - n4)) + 
   ((1 + n4)*j[p4a, 0, 0, -1 + n3, 2 + n4, 0, 0, 0, 1, 0, n10, n11, 0, 1, 1])/
    (2*(3 - d + n4)) + ((1 + n4)*j[p4a, 0, 0, -1 + n3, 2 + n4, 0, 1, 0, 0, 0, 
      n10, n11, 0, 1, 1])/(2*(-3 + d - n4)) - 
   ((-4 + d - 2*n4)*(1 + n4)*j[p4a, 0, 0, -1 + n3, 2 + n4, 0, 1, 0, 1, 0, 
      n10, -1 + n11, 0, 1, 1])/(2*(-1 + n11)*(-3 + d - n4)) + 
   j[p4a, 0, 0, n3, n4, 0, 0, 0, 1, 0, n10, n11, 0, 1, 2]/(2*(-3 + d - n4)) + 
   j[p4a, 0, 0, n3, n4, 0, 1, 0, 0, 0, n10, n11, 0, 1, 2]/(2*(-3 + d - n4)) + 
   j[p4a, 0, 0, n3, n4, 0, 1, 0, 1, 0, n10, n11, 0, 0, 2]/(2*(-3 + d - n4)) + 
   j[p4a, 0, 0, n3, n4, 0, 2, 0, 0, 0, n10, n11, 0, 1, 1]/(2*(-3 + d - n4)) + 
   j[p4a, 0, 0, n3, n4, 0, 2, 0, 1, 0, n10, n11, 0, 0, 1]/(2*(-3 + d - n4)) + 
   j[p4a, 0, 0, n3, n4, 0, 2, 0, 1, 0, n10, n11, 0, 1, 0]/(2*(-3 + d - n4)) + 
   (n4*j[p4a, 0, 0, n3, 1 + n4, 0, 0, 0, 1, 0, n10, n11, 0, 1, 1])/
    (2*(-3 + d - n4)) + ((4 - d + 2*n4)*j[p4a, 0, 0, n3, 1 + n4, 0, 1, -1, 2, 
      0, n10, -1 + n11, 0, 1, 1])/(2*(-1 + n11)*(-3 + d - n4)) - 
   (n4*j[p4a, 0, 0, n3, 1 + n4, 0, 1, 0, 0, 0, n10, n11, 0, 1, 1])/
    (2*(-3 + d - n4)) + ((-4 + d - 2*n4)*j[p4a, 0, 0, n3, 1 + n4, 0, 1, 0, 1, 
      0, -1 + n10, n11, 0, 1, 1])/(2*(-3 + d - n4)) - 
   (n3*(-4 + d - 2*n4)*j[p4a, 0, 0, n3, 1 + n4, 0, 1, 0, 1, 0, n10, -1 + n11, 
      0, 1, 1])/((-1 + n11)*(-3 + d - n4)) + 
   (n4*j[p4a, 0, 0, n3, 1 + n4, 0, 1, 0, 1, 0, n10, n11, 0, 1, 0])/
    (2*(-3 + d - n4)) + ((4 - d + 2*n4)*j[p4a, 0, 0, n3, 1 + n4, 0, 1, 0, 1, 
      0, n10, n11, 0, 1, 1])/(2*(-3 + d - n4)) + 
   ((-4 + d - 2*n4)*j[p4a, 0, 0, n3, 1 + n4, 0, 1, 0, 2, 0, n10, -1 + n11, 
      -1, 1, 1])/(2*(-1 + n11)*(-3 + d - n4)) + 
   ((4 - d + 2*n4)*j[p4a, 0, 0, n3, 1 + n4, 0, 1, 0, 2, 0, n10, -1 + n11, 0, 
      0, 1])/(2*(-1 + n11)*(-3 + d - n4)) + 
   j[p4a, 0, 0, n3, 1 + n4, 0, 2, -1, 0, 0, n10, n11, 0, 1, 1]/
    (2*(-3 + d - n4)) - j[p4a, 0, 0, n3, 1 + n4, 0, 2, 0, 0, 0, n10, n11, -1, 
     1, 1]/(2*(-3 + d - n4)) - ((-4 + d - 2*n4)*(1 + n4)*
     j[p4a, 0, 0, n3, 2 + n4, 0, 0, 0, 1, 0, n10, -1 + n11, 0, 1, 1])/
    (2*(-1 + n11)*(-3 + d - n4)) + 
   ((-4 + d - 2*n4)*(1 + n4)*j[p4a, 0, 0, n3, 2 + n4, 0, 1, 0, 0, 0, n10, 
      -1 + n11, 0, 1, 1])/(2*(-1 + n11)*(-3 + d - n4)) + 
   ((-4 + d - 2*n4)*(1 + n4)*j[p4a, 0, 0, n3, 2 + n4, 0, 1, 0, 1, 0, n10, 
      -1 + n11, 0, 1, 0])/(2*(-1 + n11)*(-3 + d - n4)) + 
   (n3*(-4 + d - 2*n4)*j[p4a, 0, 0, 1 + n3, 1 + n4, 0, 1, -1, 1, 0, n10, 
      -1 + n11, 0, 1, 1])/(2*(-1 + n11)*(-3 + d - n4)) + 
   (n3*(-4 + d - 2*n4)*j[p4a, 0, 0, 1 + n3, 1 + n4, 0, 1, 0, 0, 0, n10, 
      -1 + n11, 0, 1, 1])/((-1 + n11)*(-3 + d - n4)) - 
   (n3*(-4 + d - 2*n4)*j[p4a, 0, 0, 1 + n3, 1 + n4, 0, 1, 0, 1, 0, n10, 
      -1 + n11, -1, 1, 1])/(2*(-1 + n11)*(-3 + d - n4)) + 
   (n3*(-4 + d - 2*n4)*j[p4a, 0, 0, 1 + n3, 1 + n4, 0, 1, 0, 1, 0, n10, 
      -1 + n11, 0, 0, 1])/(2*(-1 + n11)*(-3 + d - n4)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && n5 == 0 && 
    n6 == 1 && n7 == 0 && n8 == 1 && n9 == 0 &&  !(n10 == 1 || n4 == 0) -> 
  -j[p4a, n1, -1, n3, 1 + n4, 0, 2, 0, 0, 0, n10, 1, 0, 1, 1]/
    (2*(-3 + d - n4)) + ((-4 + d - 2*n4)*j[p4a, n1, -1, n3, 1 + n4, 0, 2, 0, 
      1, 0, -1 + n10, 1, 0, 1, 1])/(2*(-1 + n10)*(-3 + d - n4)) + 
   (n3*(-4 + d - 2*n4)*j[p4a, n1, -1, 1 + n3, 1 + n4, 0, 1, 0, 1, 0, 
      -1 + n10, 1, 0, 1, 1])/(2*(-1 + n10)*(-3 + d - n4)) - 
   j[p4a, n1, 0, -1 + n3, 1 + n4, 0, 0, 0, 1, 0, n10, 1, 0, 1, 2]/
    (2*(-3 + d - n4)) - j[p4a, n1, 0, -1 + n3, 1 + n4, 0, 1, 0, 0, 0, n10, 1, 
     0, 1, 2]/(2*(-3 + d - n4)) - j[p4a, n1, 0, -1 + n3, 1 + n4, 0, 1, 0, 1, 
     0, n10, 1, 0, 0, 2]/(2*(-3 + d - n4)) + 
   ((-4 + d - 2*n4)*j[p4a, n1, 0, -1 + n3, 1 + n4, 0, 1, 0, 1, 0, n10, 1, 0, 
      1, 1])/(2*(-3 + d - n4)) - j[p4a, n1, 0, -1 + n3, 1 + n4, 0, 2, 0, 0, 
     0, n10, 1, 0, 1, 1]/(2*(-3 + d - n4)) + 
   ((-4 + d - 2*n4)*j[p4a, n1, 0, -1 + n3, 1 + n4, 0, 2, 0, 1, 0, -1 + n10, 
      1, 0, 1, 1])/(2*(-1 + n10)*(-3 + d - n4)) + 
   ((1 + n4)*j[p4a, n1, 0, -1 + n3, 2 + n4, 0, 0, 0, 1, 0, n10, 1, 0, 1, 1])/
    (2*(3 - d + n4)) + ((1 + n4)*j[p4a, n1, 0, -1 + n3, 2 + n4, 0, 1, 0, 0, 
      0, n10, 1, 0, 1, 1])/(2*(-3 + d - n4)) + 
   ((-4 + d - 2*n4)*(1 + n4)*j[p4a, n1, 0, -1 + n3, 2 + n4, 0, 1, 0, 1, 0, 
      -1 + n10, 1, 0, 1, 1])/(2*(-1 + n10)*(-3 + d - n4)) + 
   j[p4a, n1, 0, n3, n4, 0, 0, 0, 1, 0, n10, 1, 0, 1, 2]/(2*(-3 + d - n4)) + 
   j[p4a, n1, 0, n3, n4, 0, 1, 0, 0, 0, n10, 1, 0, 1, 2]/(2*(-3 + d - n4)) + 
   j[p4a, n1, 0, n3, n4, 0, 1, 0, 1, 0, n10, 1, 0, 0, 2]/(2*(-3 + d - n4)) + 
   j[p4a, n1, 0, n3, n4, 0, 2, 0, 0, 0, n10, 1, 0, 1, 1]/(2*(-3 + d - n4)) + 
   j[p4a, n1, 0, n3, n4, 0, 2, 0, 1, 0, n10, 1, 0, 0, 1]/(2*(-3 + d - n4)) + 
   j[p4a, n1, 0, n3, n4, 0, 2, 0, 1, 0, n10, 1, 0, 1, 0]/(2*(-3 + d - n4)) + 
   (n4*j[p4a, n1, 0, n3, 1 + n4, 0, 0, 0, 1, 0, n10, 1, 0, 1, 1])/
    (2*(-3 + d - n4)) + ((4 - d + n4)*j[p4a, n1, 0, n3, 1 + n4, 0, 1, 0, 0, 
      0, n10, 1, 0, 1, 1])/(2*(-3 + d - n4)) + 
   ((-d + n10 + 2*n3)*(-4 + d - 2*n4)*j[p4a, n1, 0, n3, 1 + n4, 0, 1, 0, 1, 
      0, -1 + n10, 1, 0, 1, 1])/(2*(-1 + n10)*(-3 + d - n4)) + 
   ((4 - d + 2*n4)*j[p4a, n1, 0, n3, 1 + n4, 0, 1, 0, 1, 0, n10, 1, 0, 0, 1])/
    (2*(-3 + d - n4)) + (n4*j[p4a, n1, 0, n3, 1 + n4, 0, 1, 0, 1, 0, n10, 1, 
      0, 1, 0])/(2*(-3 + d - n4)) + 
   ((4 - d + 2*n4)*j[p4a, n1, 0, n3, 1 + n4, 0, 1, 0, 1, 0, n10, 1, 0, 1, 1])/
    (2*(-3 + d - n4)) + j[p4a, n1, 0, n3, 1 + n4, 0, 2, -1, 0, 0, n10, 1, 0, 
     1, 1]/(2*(-3 + d - n4)) + 
   ((4 - d + 2*n4)*j[p4a, n1, 0, n3, 1 + n4, 0, 2, -1, 1, 0, -1 + n10, 1, 0, 
      1, 1])/(2*(-1 + n10)*(-3 + d - n4)) + 
   ((4 - d + 2*n4)*j[p4a, n1, 0, n3, 1 + n4, 0, 2, 0, 0, 0, -1 + n10, 1, 0, 
      1, 1])/(2*(-1 + n10)*(-3 + d - n4)) - 
   j[p4a, n1, 0, n3, 1 + n4, 0, 2, 0, 0, 0, n10, 1, -1, 1, 1]/
    (2*(-3 + d - n4)) + ((-4 + d - 2*n4)*j[p4a, n1, 0, n3, 1 + n4, 0, 2, 0, 
      1, 0, -1 + n10, 1, -1, 1, 1])/(2*(-1 + n10)*(-3 + d - n4)) + 
   ((4 - d + 2*n4)*j[p4a, n1, 0, n3, 1 + n4, 0, 2, 0, 1, 0, -1 + n10, 1, 0, 
      0, 1])/(2*(-1 + n10)*(-3 + d - n4)) + 
   ((4 - d + 2*n4)*j[p4a, n1, 0, n3, 1 + n4, 0, 2, 0, 1, 0, -1 + n10, 1, 0, 
      1, 0])/(2*(-1 + n10)*(-3 + d - n4)) + 
   ((-4 + d - 2*n4)*(1 + n4)*j[p4a, n1, 0, n3, 2 + n4, 0, 0, 0, 1, 0, 
      -1 + n10, 1, 0, 1, 1])/(2*(-1 + n10)*(-3 + d - n4)) - 
   ((-4 + d - 2*n4)*(1 + n4)*j[p4a, n1, 0, n3, 2 + n4, 0, 1, 0, 0, 0, 
      -1 + n10, 1, 0, 1, 1])/(2*(-1 + n10)*(-3 + d - n4)) - 
   ((-4 + d - 2*n4)*(1 + n4)*j[p4a, n1, 0, n3, 2 + n4, 0, 1, 0, 1, 0, 
      -1 + n10, 1, 0, 1, 0])/(2*(-1 + n10)*(-3 + d - n4)) - 
   (n3*(-4 + d - 2*n4)*j[p4a, n1, 0, 1 + n3, 1 + n4, 0, 1, -1, 1, 0, 
      -1 + n10, 1, 0, 1, 1])/(2*(-1 + n10)*(-3 + d - n4)) - 
   (n3*(-4 + d - 2*n4)*j[p4a, n1, 0, 1 + n3, 1 + n4, 0, 1, 0, 0, 0, -1 + n10, 
      1, 0, 1, 1])/((-1 + n10)*(-3 + d - n4)) + 
   (n3*(-4 + d - 2*n4)*j[p4a, n1, 0, 1 + n3, 1 + n4, 0, 1, 0, 1, 0, -1 + n10, 
      1, -1, 1, 1])/(2*(-1 + n10)*(-3 + d - n4)) - 
   (n3*(-4 + d - 2*n4)*j[p4a, n1, 0, 1 + n3, 1 + n4, 0, 1, 0, 1, 0, -1 + n10, 
      1, 0, 0, 1])/(2*(-1 + n10)*(-3 + d - n4)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n5 == 0 && 
    n6 == 1 && n7 == 0 && n8 == 1 && n9 == 0 &&  !(n11 == 1 || n4 == 0) -> 
  ((4 - d + 2*n4)*j[p4a, 0, -1 + n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, n11, 0, 1, 
      1])/(2*(-3 + d - n4)) + ((-4 + d - 2*n4)*j[p4a, 0, -1 + n2, n3, 1 + n4, 
      0, 1, 0, 2, 0, 1, -1 + n11, 0, 1, 1])/(2*(-1 + n11)*(-3 + d - n4)) - 
   j[p4a, 0, -1 + n2, n3, 1 + n4, 0, 2, 0, 0, 0, 1, n11, 0, 1, 1]/
    (2*(-3 + d - n4)) - (n3*(-4 + d - 2*n4)*j[p4a, 0, -1 + n2, 1 + n3, 
      1 + n4, 0, 1, 0, 1, 0, 1, -1 + n11, 0, 1, 1])/
    (2*(-1 + n11)*(-3 + d - n4)) - j[p4a, 0, n2, -1 + n3, 1 + n4, 0, 0, 0, 1, 
     0, 1, n11, 0, 1, 2]/(2*(-3 + d - n4)) - 
   j[p4a, 0, n2, -1 + n3, 1 + n4, 0, 1, 0, 0, 0, 1, n11, 0, 1, 2]/
    (2*(-3 + d - n4)) - j[p4a, 0, n2, -1 + n3, 1 + n4, 0, 1, 0, 1, 0, 1, n11, 
     0, 0, 2]/(2*(-3 + d - n4)) - j[p4a, 0, n2, -1 + n3, 1 + n4, 0, 2, 0, 0, 
     0, 1, n11, 0, 1, 1]/(2*(-3 + d - n4)) + 
   ((1 + n4)*j[p4a, 0, n2, -1 + n3, 2 + n4, 0, 0, 0, 1, 0, 1, n11, 0, 1, 1])/
    (2*(3 - d + n4)) + ((1 + n4)*j[p4a, 0, n2, -1 + n3, 2 + n4, 0, 1, 0, 0, 
      0, 1, n11, 0, 1, 1])/(2*(-3 + d - n4)) - 
   ((-4 + d - 2*n4)*(1 + n4)*j[p4a, 0, n2, -1 + n3, 2 + n4, 0, 1, 0, 1, 0, 1, 
      -1 + n11, 0, 1, 1])/(2*(-1 + n11)*(-3 + d - n4)) + 
   j[p4a, 0, n2, n3, n4, 0, 0, 0, 1, 0, 1, n11, 0, 1, 2]/(2*(-3 + d - n4)) + 
   j[p4a, 0, n2, n3, n4, 0, 1, 0, 0, 0, 1, n11, 0, 1, 2]/(2*(-3 + d - n4)) + 
   j[p4a, 0, n2, n3, n4, 0, 1, 0, 1, 0, 1, n11, 0, 0, 2]/(2*(-3 + d - n4)) + 
   j[p4a, 0, n2, n3, n4, 0, 2, 0, 0, 0, 1, n11, 0, 1, 1]/(2*(-3 + d - n4)) + 
   j[p4a, 0, n2, n3, n4, 0, 2, 0, 1, 0, 1, n11, 0, 0, 1]/(2*(-3 + d - n4)) + 
   j[p4a, 0, n2, n3, n4, 0, 2, 0, 1, 0, 1, n11, 0, 1, 0]/(2*(-3 + d - n4)) + 
   (n4*j[p4a, 0, n2, n3, 1 + n4, 0, 0, 0, 1, 0, 1, n11, 0, 1, 1])/
    (2*(-3 + d - n4)) + ((4 - d + 2*n4)*j[p4a, 0, n2, n3, 1 + n4, 0, 1, -1, 
      2, 0, 1, -1 + n11, 0, 1, 1])/(2*(-1 + n11)*(-3 + d - n4)) - 
   (n4*j[p4a, 0, n2, n3, 1 + n4, 0, 1, 0, 0, 0, 1, n11, 0, 1, 1])/
    (2*(-3 + d - n4)) + ((-4 + d - 2*n4)*j[p4a, 0, n2, n3, 1 + n4, 0, 1, 0, 
      1, 0, 0, n11, 0, 1, 1])/(2*(-3 + d - n4)) - 
   (n3*(-4 + d - 2*n4)*j[p4a, 0, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, -1 + n11, 
      0, 1, 1])/((-1 + n11)*(-3 + d - n4)) + 
   (n4*j[p4a, 0, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, n11, 0, 1, 0])/
    (2*(-3 + d - n4)) + ((4 - d + 2*n4)*j[p4a, 0, n2, n3, 1 + n4, 0, 1, 0, 1, 
      0, 1, n11, 0, 1, 1])/(2*(-3 + d - n4)) + 
   ((-4 + d - 2*n4)*j[p4a, 0, n2, n3, 1 + n4, 0, 1, 0, 2, 0, 1, -1 + n11, -1, 
      1, 1])/(2*(-1 + n11)*(-3 + d - n4)) + 
   ((4 - d + 2*n4)*j[p4a, 0, n2, n3, 1 + n4, 0, 1, 0, 2, 0, 1, -1 + n11, 0, 
      0, 1])/(2*(-1 + n11)*(-3 + d - n4)) + 
   j[p4a, 0, n2, n3, 1 + n4, 0, 2, -1, 0, 0, 1, n11, 0, 1, 1]/
    (2*(-3 + d - n4)) - j[p4a, 0, n2, n3, 1 + n4, 0, 2, 0, 0, 0, 1, n11, -1, 
     1, 1]/(2*(-3 + d - n4)) - ((-4 + d - 2*n4)*(1 + n4)*
     j[p4a, 0, n2, n3, 2 + n4, 0, 0, 0, 1, 0, 1, -1 + n11, 0, 1, 1])/
    (2*(-1 + n11)*(-3 + d - n4)) + 
   ((-4 + d - 2*n4)*(1 + n4)*j[p4a, 0, n2, n3, 2 + n4, 0, 1, 0, 0, 0, 1, 
      -1 + n11, 0, 1, 1])/(2*(-1 + n11)*(-3 + d - n4)) + 
   ((-4 + d - 2*n4)*(1 + n4)*j[p4a, 0, n2, n3, 2 + n4, 0, 1, 0, 1, 0, 1, 
      -1 + n11, 0, 1, 0])/(2*(-1 + n11)*(-3 + d - n4)) + 
   (n3*(-4 + d - 2*n4)*j[p4a, 0, n2, 1 + n3, 1 + n4, 0, 1, -1, 1, 0, 1, 
      -1 + n11, 0, 1, 1])/(2*(-1 + n11)*(-3 + d - n4)) + 
   (n3*(-4 + d - 2*n4)*j[p4a, 0, n2, 1 + n3, 1 + n4, 0, 1, 0, 0, 0, 1, 
      -1 + n11, 0, 1, 1])/((-1 + n11)*(-3 + d - n4)) - 
   (n3*(-4 + d - 2*n4)*j[p4a, 0, n2, 1 + n3, 1 + n4, 0, 1, 0, 1, 0, 1, 
      -1 + n11, -1, 1, 1])/(2*(-1 + n11)*(-3 + d - n4)) + 
   (n3*(-4 + d - 2*n4)*j[p4a, 0, n2, 1 + n3, 1 + n4, 0, 1, 0, 1, 0, 1, 
      -1 + n11, 0, 0, 1])/(2*(-1 + n11)*(-3 + d - n4)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n5 == 0 && 
    n6 == 1 && n7 == 0 && n8 == 1 && n9 == 0 && n4 != 0 -> 
  -((-2 + d - 2*n1 - n2)*(-4 + d - 2*n4)*j[p4a, -1 + n1, n2, n3, 1 + n4, 0, 
       1, 0, 0, 0, 2, 1, 0, 1, 1])/(2*(-3 + d - n4)*
     (64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) - ((-4 + d - 2*n4)*(-6 + 2*d - n2 - 2*n3 - 2*n4)*
     j[p4a, -1 + n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 0, 2, 0, 1, 1])/
    ((-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   ((-4 + d - 2*n4)*(12 - 10*d + 2*d^2 + 6*n1 - 2*d*n1 + 16*n2 - 6*d*n2 + 
      3*n1*n2 + 3*n2^2 + 4*n3 - 2*d*n3 + 2*n1*n3 + 4*n2*n3 + 4*n4 - 2*d*n4 + 
      2*n1*n4 + 4*n2*n4)*j[p4a, -1 + n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, 1, 
      0, 1, 1])/((-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 
      8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 
      32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   ((-2 + d - 2*n1 - n2)*(-4 + d - 2*n4)*j[p4a, -1 + n1, n2, n3, 1 + n4, 0, 
      1, 0, 1, 0, 2, 1, 0, 0, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 
      4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-4 + d - 2*n4)*(-6 + 2*d - n2 - 2*n3 - 2*n4)*j[p4a, -1 + n1, n2, n3, 
      1 + n4, 0, 1, 0, 2, 0, 1, 1, 0, 0, 1])/(2*(-3 + d - n4)*
     (64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) - ((1 + n4)*(4 - d + 2*n4)*
     (8 - 3*d + 2*n1 + 2*n2 + 2*n3 + 2*n4)*j[p4a, -1 + n1, n2, n3, 2 + n4, 0, 
      0, 0, 1, 0, 1, 1, 0, 1, 1])/(2*(3 - d + n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((1 + n4)*(4 - d + 2*n4)*(8 - 3*d + 2*n1 + 2*n2 + 2*n3 + 2*n4)*
     j[p4a, -1 + n1, n2, n3, 2 + n4, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((1 + n4)*(4 - d + 2*n4)*(6 - 2*d + n2 + 2*n3 + 2*n4)*
     j[p4a, -1 + n1, n2, n3, 2 + n4, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   (n3*(-4 + d - 2*n4)*(8 - 3*d + 2*n1 + 2*n2 + 2*n3 + 2*n4)*
     j[p4a, -1 + n1, n2, 1 + n3, 1 + n4, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   ((-4 + d - 2*n4)*(-8*n3 + 3*d*n3 - 2*n1*n3 - 2*n2*n3 - 2*n3^2 - 2*n3*n4)*
     j[p4a, -1 + n1, n2, 1 + n3, 1 + n4, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   (n2*(-4 + d - 2*n4)*(20 - 7*d + 2*n1 + 4*n2 + 6*n3 + 6*n4)*
     j[p4a, -1 + n1, 1 + n2, -1 + n3, 1 + n4, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   (n2*(-4 + d - 2*n4)*(8 - 3*d + 2*n1 + 2*n2 + 2*n3 + 2*n4)*
     j[p4a, -1 + n1, 1 + n2, n3, 1 + n4, 0, 1, -1, 1, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   (n2*(-4 + d - 2*n4)*(8 - 3*d + 2*n1 + 2*n2 + 2*n3 + 2*n4)*
     j[p4a, -1 + n1, 1 + n2, n3, 1 + n4, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   (n2*(-4 + d - 2*n4)*(8 - 3*d + 2*n1 + 2*n2 + 2*n3 + 2*n4)*
     j[p4a, -1 + n1, 1 + n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, 1, -1, 1, 1])/
    ((-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   (n2*(2 - d + 2*n1 + n2)*(-4 + d - 2*n4)*j[p4a, -1 + n1, 1 + n2, n3, 
      1 + n4, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/((-3 + d - n4)*
     (64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((-2 + d - 2*n1 - n2)*(-4 + d - 2*n4)*
     j[p4a, n1, -1 + n2, n3, 1 + n4, 0, 1, 0, 0, 0, 2, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-2 + d - n1 - n2)*(-4 + d - 2*n4)*(-6 + 2*d - n2 - 2*n3 - 2*n4)*
     j[p4a, n1, -1 + n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-2 + d - 2*n1 - n2)*(-4 + d - 2*n4)*j[p4a, n1, -1 + n2, n3, 1 + n4, 0, 
      1, 0, 1, 0, 2, 0, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 
      4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-2 + d - 2*n1 - n2)*(-4 + d - 2*n4)*j[p4a, n1, -1 + n2, n3, 1 + n4, 0, 
      1, 0, 1, 0, 2, 1, 0, 0, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 
      4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   ((-4 + d - 2*n4)*(-6 + 2*d - n2 - 2*n3 - 2*n4)*j[p4a, n1, -1 + n2, n3, 
      1 + n4, 0, 1, 0, 2, 0, 1, 0, 0, 1, 1])/(2*(-3 + d - n4)*
     (64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) - ((-4 + d - 2*n4)*(-6 + 2*d - n2 - 2*n3 - 2*n4)*
     j[p4a, n1, -1 + n2, n3, 1 + n4, 0, 1, 0, 2, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   j[p4a, n1, -1 + n2, n3, 1 + n4, 0, 2, 0, 0, 0, 1, 1, 0, 1, 1]/
    (2*(-3 + d - n4)) - ((-4 + d - 2*n4)*(-6 + 2*d - n2 - 2*n3 - 2*n4)*
     j[p4a, n1, -1 + n2, n3, 1 + n4, 0, 2, 0, 1, 0, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((1 + n4)*(4 - d + 2*n4)*(8 - 3*d + 2*n1 + 2*n2 + 2*n3 + 2*n4)*
     j[p4a, n1, -1 + n2, n3, 2 + n4, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   ((1 + n4)*(4 - d + 2*n4)*(8 - 3*d + 2*n1 + 2*n2 + 2*n3 + 2*n4)*
     j[p4a, n1, -1 + n2, n3, 2 + n4, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   ((1 + n4)*(4 - d + 2*n4)*(6 - 2*d + n2 + 2*n3 + 2*n4)*
     j[p4a, n1, -1 + n2, n3, 2 + n4, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   (n3*(-4 + d - 2*n4)*(8 - 3*d + 2*n1 + 2*n2 + 2*n3 + 2*n4)*
     j[p4a, n1, -1 + n2, 1 + n3, 1 + n4, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   (n3*(-4 + d - 2*n4)*(8 - 3*d + 2*n1 + 2*n2 + 2*n3 + 2*n4)*
     j[p4a, n1, -1 + n2, 1 + n3, 1 + n4, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   (n3*(-4 + d - 2*n4)*(8 - 3*d + 2*n1 + 2*n2 + 2*n3 + 2*n4)*
     j[p4a, n1, -1 + n2, 1 + n3, 1 + n4, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-4 + d - 2*n4)*(-8*n3 + 3*d*n3 - 2*n1*n3 - 2*n2*n3 - 2*n3^2 - 2*n3*n4)*
     j[p4a, n1, -1 + n2, 1 + n3, 1 + n4, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-72 + 54*d - 10*d^2 - 12*n1 + 4*d*n1 - 24*n2 + 9*d*n2 - 2*n1*n2 - 
      2*n2^2 - 44*n3 + 16*d*n3 - 6*n2*n3 - 8*n3^2 - 36*n4 + 14*d*n4 - 
      4*n1*n4 - 6*n2*n4 - 12*n3*n4 - 4*n4^2)*j[p4a, n1, n2, -1 + n3, 1 + n4, 
      0, 0, 0, 1, 0, 1, 1, 0, 1, 2])/(2*(-3 + d - n4)*
     (64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((-72 + 54*d - 10*d^2 - 12*n1 + 4*d*n1 - 24*n2 + 
      9*d*n2 - 2*n1*n2 - 2*n2^2 - 44*n3 + 16*d*n3 - 6*n2*n3 - 8*n3^2 - 
      36*n4 + 14*d*n4 - 4*n1*n4 - 6*n2*n4 - 12*n3*n4 - 4*n4^2)*
     j[p4a, n1, n2, -1 + n3, 1 + n4, 0, 1, 0, 0, 0, 1, 1, 0, 1, 2])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-72 + 54*d - 10*d^2 - 12*n1 + 4*d*n1 - 24*n2 + 9*d*n2 - 2*n1*n2 - 
      2*n2^2 - 44*n3 + 16*d*n3 - 6*n2*n3 - 8*n3^2 - 36*n4 + 14*d*n4 - 
      4*n1*n4 - 6*n2*n4 - 12*n3*n4 - 4*n4^2)*j[p4a, n1, n2, -1 + n3, 1 + n4, 
      0, 1, 0, 1, 0, 1, 1, 0, 0, 2])/(2*(-3 + d - n4)*
     (64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((-2 + d + 2*n1 - 2*n3)*(-4 + d - 2*n4)*
     (-6 + 2*d - n2 - 2*n3 - 2*n4)*j[p4a, n1, n2, -1 + n3, 1 + n4, 0, 1, 0, 
      1, 0, 1, 1, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-2 + d - 2*n1 - n2)*(-4 + d - 2*n4)*j[p4a, n1, n2, -1 + n3, 1 + n4, 0, 
      1, 0, 1, 0, 2, 0, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 
      4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   j[p4a, n1, n2, -1 + n3, 1 + n4, 0, 2, 0, 0, 0, 1, 1, 0, 1, 1]/
    (2*(-3 + d - n4)) - ((-4 + d - 2*n4)*(-6 + 2*d - n2 - 2*n3 - 2*n4)*
     j[p4a, n1, n2, -1 + n3, 1 + n4, 0, 2, 0, 1, 0, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((1 + n4)*(136 - 90*d + 15*d^2 + 4*n1 - 2*d*n1 + 32*n2 - 11*d*n2 + 
      2*n1*n2 + 2*n2^2 + 68*n3 - 22*d*n3 + 6*n2*n3 + 8*n3^2 + 92*n4 - 
      30*d*n4 + 10*n2*n4 + 24*n3*n4 + 16*n4^2)*j[p4a, n1, n2, -1 + n3, 
      2 + n4, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1])/(2*(3 - d + n4)*
     (64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) - ((1 + n4)*(112 - 76*d + 13*d^2 + 4*n1 - 2*d*n1 + 
      28*n2 - 10*d*n2 + 2*n1*n2 + 2*n2^2 + 60*n3 - 20*d*n3 + 6*n2*n3 + 
      8*n3^2 + 72*n4 - 24*d*n4 + 8*n2*n4 + 20*n3*n4 + 12*n4^2)*
     j[p4a, n1, n2, -1 + n3, 2 + n4, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((1 + n4)*(4 - d + 2*n4)*(6 - 2*d + n2 + 2*n3 + 2*n4)*
     j[p4a, n1, n2, -1 + n3, 2 + n4, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1])/
    (2*(3 - d + n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   ((1 + n4)*(4 - d + 2*n4)*(6 - 2*d + n2 + 2*n3 + 2*n4)*
     j[p4a, n1, n2, -1 + n3, 2 + n4, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1])/
    (2*(3 - d + n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((72 - 54*d + 10*d^2 + 12*n1 - 4*d*n1 + 24*n2 - 9*d*n2 + 2*n1*n2 + 
      2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 36*n4 - 14*d*n4 + 
      4*n1*n4 + 6*n2*n4 + 12*n3*n4 + 4*n4^2)*j[p4a, n1, n2, n3, n4, 0, 0, 0, 
      1, 0, 1, 1, 0, 1, 2])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((72 - 54*d + 10*d^2 + 12*n1 - 4*d*n1 + 24*n2 - 9*d*n2 + 2*n1*n2 + 
      2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 36*n4 - 14*d*n4 + 
      4*n1*n4 + 6*n2*n4 + 12*n3*n4 + 4*n4^2)*j[p4a, n1, n2, n3, n4, 0, 1, 0, 
      0, 0, 1, 1, 0, 1, 2])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((72 - 54*d + 10*d^2 + 12*n1 - 4*d*n1 + 24*n2 - 9*d*n2 + 2*n1*n2 + 
      2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 36*n4 - 14*d*n4 + 
      4*n1*n4 + 6*n2*n4 + 12*n3*n4 + 4*n4^2)*j[p4a, n1, n2, n3, n4, 0, 1, 0, 
      1, 0, 1, 1, 0, 0, 2])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   j[p4a, n1, n2, n3, n4, 0, 2, 0, 0, 0, 1, 1, 0, 1, 1]/(2*(-3 + d - n4)) + 
   ((-2 + d - 2*n1 - n2)*(-4 + d - 2*n4)*j[p4a, n1, n2, n3, n4, 0, 2, 0, 1, 
      0, 0, 1, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   j[p4a, n1, n2, n3, n4, 0, 2, 0, 1, 0, 1, 1, 0, 0, 1]/(2*(-3 + d - n4)) + 
   j[p4a, n1, n2, n3, n4, 0, 2, 0, 1, 0, 1, 1, 0, 1, 0]/(2*(-3 + d - n4)) - 
   ((-4 + d - 2*n4)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3 - 2*n4)*
     j[p4a, n1, n2, n3, 1 + n4, 0, 0, 0, 1, -1, 1, 1, 0, 1, 2])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((32 - 20*d + 3*d^2 + 8*n1 - 2*d*n1 + 8*n2 - 2*d*n2 + 8*n3 - 2*d*n3 + 
      96*n4 - 62*d*n4 + 10*d^2*n4 + 16*n1*n4 - 4*d*n1*n4 + 28*n2*n4 - 
      9*d*n2*n4 + 2*n1*n2*n4 + 2*n2^2*n4 + 48*n3*n4 - 16*d*n3*n4 + 
      6*n2*n3*n4 + 8*n3^2*n4 + 40*n4^2 - 14*d*n4^2 + 4*n1*n4^2 + 6*n2*n4^2 + 
      12*n3*n4^2 + 4*n4^3)*j[p4a, n1, n2, n3, 1 + n4, 0, 0, 0, 1, 0, 1, 1, 0, 
      1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 
      8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 
      32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-4 + d - 2*n4)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3 - 2*n4)*
     j[p4a, n1, n2, n3, 1 + n4, 0, 0, 0, 1, 0, 1, 1, 0, 1, 2])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-4 + d - 2*n4)*(-6 + 2*d - n2 - 2*n3 - 2*n4)*j[p4a, n1, n2, n3, 1 + n4, 
      0, 1, -1, 0, 0, 1, 2, 0, 1, 1])/((-3 + d - n4)*
     (64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) - ((-2 + d - 2*n1 - n2)*(-4 + d - 2*n4)*
     j[p4a, n1, n2, n3, 1 + n4, 0, 1, -1, 0, 0, 2, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   ((-2 + d - 2*n1 - n2)*(-4 + d - 2*n4)*j[p4a, n1, n2, n3, 1 + n4, 0, 1, -1, 
      1, 0, 2, 0, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   ((-2 + d - 2*n1 - n2)*(-4 + d - 2*n4)*j[p4a, n1, n2, n3, 1 + n4, 0, 1, -1, 
      1, 0, 2, 1, 0, 0, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-4 + d - 2*n4)*(-6 + 2*d - n2 - 2*n3 - 2*n4)*j[p4a, n1, n2, n3, 1 + n4, 
      0, 1, -1, 2, 0, 1, 0, 0, 1, 1])/(2*(-3 + d - n4)*
     (64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((-4 + d - 2*n4)*(-6 + 2*d - n2 - 2*n3 - 2*n4)*
     j[p4a, n1, n2, n3, 1 + n4, 0, 1, -1, 2, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   ((-4 + d - 2*n4)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3 - 2*n4)*
     j[p4a, n1, n2, n3, 1 + n4, 0, 1, 0, 0, -1, 1, 1, 0, 1, 2])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-64 + 36*d - 5*d^2 - 16*n1 + 12*d*n1 - 2*d^2*n1 - 16*n2 + 4*d*n2 + 
      12*n1*n2 - 3*d*n1*n2 + 4*n2^2 - d*n2^2 + 56*n3 - 38*d*n3 + 6*d^2*n3 - 
      24*n1*n3 + 6*d*n1*n3 + 32*n3^2 - 8*d*n3^2 - 120*n4 + 64*d*n4 - 
      9*d^2*n4 - 20*n1*n4 + 8*d*n1*n4 - 36*n2*n4 + 10*d*n2*n4 + 4*n1*n2*n4 + 
      16*n3*n4 - 4*d*n3*n4 - 12*n1*n3*n4 - 6*n2*n3*n4 + 8*n3^2*n4 - 44*n4^2 + 
      12*d*n4^2 - 4*n1*n4^2 - 8*n2*n4^2 + 4*n3*n4^2 - 4*n4^3)*
     j[p4a, n1, n2, n3, 1 + n4, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-4 + d - 2*n4)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3 - 2*n4)*
     j[p4a, n1, n2, n3, 1 + n4, 0, 1, 0, 0, 0, 1, 1, 0, 1, 2])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   ((-4 + d - 2*n4)*(-6 + 2*d - n2 - 2*n3 - 2*n4)*j[p4a, n1, n2, n3, 1 + n4, 
      0, 1, 0, 0, 0, 1, 2, -1, 1, 1])/(2*(-3 + d - n4)*
     (64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((-4 + d - 2*n4)*(-6 + 2*d - n2 - 2*n3 - 2*n4)*
     j[p4a, n1, n2, n3, 1 + n4, 0, 1, 0, 0, 0, 1, 2, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   ((-4 + d - 2*n4)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3 - 2*n4)*
     j[p4a, n1, n2, n3, 1 + n4, 0, 1, 0, 1, -1, 1, 1, 0, 0, 2])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-4 + d - 2*n4)*(-12 + 4*d + 6*n1 - 2*d*n1 + 12*n2 - 5*d*n2 + 3*n1*n2 + 
      3*n2^2 + 8*n3 - 4*d*n3 + 2*n1*n3 + 6*n2*n3 + 4*n3^2 - 6*n4 + d*n4 + 
      3*n2*n4 + 4*n3*n4)*j[p4a, n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 0, 1, 0, 
      1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 
      8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 
      32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   ((-4 + d - 2*n4)*(-6 + 2*d - n2 - 2*n3 - 2*n4)*j[p4a, n1, n2, n3, 1 + n4, 
      0, 1, 0, 1, 0, 0, 2, -1, 1, 1])/(2*(-3 + d - n4)*
     (64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((-4 + d - 2*n4)*(-6 + 2*d - n2 - 2*n3 - 2*n4)*
     j[p4a, n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 0, 2, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   ((-4 + d - 2*n4)*(6*n1 - 2*d*n1 + n1*n2 + 12*n3 - 4*d*n3 + 2*n1*n3 + 
      2*n2*n3 + 4*n3^2 - 2*n4 + d*n4 - n2*n4 + 4*n3*n4)*
     j[p4a, n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   ((-4 + d - 2*n4)*(-12 + 4*d - 10*n2 + 2*d*n2 + 4*n1*n2 + 12*n3 - 5*d*n3 - 
      2*n1*n3 - 2*n2*n3 + 6*n3^2 - 4*n4 - 4*n2*n4 + 6*n3*n4)*
     j[p4a, n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-4 + d - 2*n4)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3 - 2*n4)*
     j[p4a, n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 + 44*n4 - 42*d*n4 + 
      9*d^2*n4 + 4*n1*n4 - 2*d*n1*n4 + 18*n2*n4 - 8*d*n2*n4 + 2*n1*n2*n4 + 
      2*n2^2*n4 + 40*n3*n4 - 16*d*n3*n4 + 6*n2*n3*n4 + 8*n3^2*n4 + 28*n4^2 - 
      12*d*n4^2 + 4*n2*n4^2 + 12*n3*n4^2 + 4*n4^3)*j[p4a, n1, n2, n3, 1 + n4, 
      0, 1, 0, 1, 0, 1, 1, 0, 1, 0])/(2*(-3 + d - n4)*
     (64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) - ((-4 + d - 2*n4)*(12 - 7*d + d^2 - 2*n2 + d*n2 - 
      n1*n2 - n2^2 + 10*n3 - 3*d*n3 + 2*n3^2 + 10*n4 - 3*d*n4 + 4*n3*n4 + 
      2*n4^2)*j[p4a, n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-2 + d - 2*n1 - n2)*(-4 + d - 2*n4)*j[p4a, n1, n2, n3, 1 + n4, 0, 1, 0, 
      1, 0, 2, 0, -1, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   ((-2 + d - 2*n1 - n2)*(-4 + d - 2*n4)*j[p4a, n1, n2, n3, 1 + n4, 0, 1, 0, 
      1, 0, 2, 0, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   ((-4 + d - 2*n4)*(-6 + 2*d - n2 - 2*n3 - 2*n4)*j[p4a, n1, n2, n3, 1 + n4, 
      0, 1, 0, 2, 0, 1, 0, -1, 1, 1])/(2*(-3 + d - n4)*
     (64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + j[p4a, n1, n2, n3, 1 + n4, 0, 2, -1, 0, 0, 1, 1, 
     0, 1, 1]/(2*(-3 + d - n4)) + 
   ((-4 + d - 2*n4)*(-6 + 2*d - n2 - 2*n3 - 2*n4)*j[p4a, n1, n2, n3, 1 + n4, 
      0, 2, -1, 1, 0, 0, 1, 0, 1, 1])/(2*(-3 + d - n4)*
     (64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((-4 + d - 2*n4)*(-4 + d + 2*n1 - 2*n3 - 2*n4)*
     j[p4a, n1, n2, n3, 1 + n4, 0, 2, 0, 0, -1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   j[p4a, n1, n2, n3, 1 + n4, 0, 2, 0, 0, 0, 1, 1, -1, 1, 1]/
    (2*(-3 + d - n4)) + ((-4 + d - 2*n4)*(-6 + 2*d - n2 - 2*n3 - 2*n4)*
     j[p4a, n1, n2, n3, 1 + n4, 0, 2, 0, 1, -1, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-4 + d - 2*n4)*(-6 + 2*d - n2 - 2*n3 - 2*n4)*j[p4a, n1, n2, n3, 1 + n4, 
      0, 2, 0, 1, -1, 1, 1, 0, 1, 0])/(2*(-3 + d - n4)*
     (64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) - ((-4 + d - 2*n4)*(-6 + 2*d - n2 - 2*n3 - 2*n4)*
     j[p4a, n1, n2, n3, 1 + n4, 0, 2, 0, 1, 0, 0, 1, -1, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-4 + d - 2*n4)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3 - 10*n4 + 3*d*n4 - 
      2*n1*n4 - 2*n2*n4 - 2*n3*n4 - 2*n4^2)*j[p4a, n1, n2, n3, 2 + n4, 0, 0, 
      -1, 1, 0, 1, 1, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((1 + n4)*(4 - d + 2*n4)*(8 - 3*d + 2*n1 + 2*n2 + 2*n3 + 2*n4)*
     j[p4a, n1, n2, n3, 2 + n4, 0, 0, 0, 1, -1, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   ((-4 + d - 2*n4)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3 - 10*n4 + 3*d*n4 - 
      2*n1*n4 - 2*n2*n4 - 2*n3*n4 - 2*n4^2)*j[p4a, n1, n2, n3, 2 + n4, 0, 1, 
      -1, 0, 0, 1, 1, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((1 + n4)*(4 - d + 2*n4)*(6 - 2*d + n2 + 2*n3 + 2*n4)*
     j[p4a, n1, n2, n3, 2 + n4, 0, 1, -1, 1, 0, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   ((1 + n4)*(4 - d + 2*n4)*(8 - 3*d + 2*n1 + 2*n2 + 2*n3 + 2*n4)*
     j[p4a, n1, n2, n3, 2 + n4, 0, 1, 0, 0, -1, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   ((1 + n4)*(4 - d + 2*n4)*(6 - 2*d + n2 + 2*n3 + 2*n4)*
     j[p4a, n1, n2, n3, 2 + n4, 0, 1, 0, 1, -1, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   ((-4 + d - 2*n4)*(-8*n3 + 3*d*n3 - 2*n1*n3 - 2*n2*n3 - 2*n3^2 - 2*n3*n4)*
     j[p4a, n1, n2, 1 + n3, 1 + n4, 0, 1, -1, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-4 + d - 2*n4)*(-8*n3 + 3*d*n3 - 2*n1*n3 - 2*n2*n3 - 2*n3^2 - 2*n3*n4)*
     j[p4a, n1, n2, 1 + n3, 1 + n4, 0, 1, -1, 1, 0, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   ((-4 + d - 2*n4)*(-8*n3 + 3*d*n3 - 2*n1*n3 - 2*n2*n3 - 2*n3^2 - 2*n3*n4)*
     j[p4a, n1, n2, 1 + n3, 1 + n4, 0, 1, -1, 1, 0, 1, 0, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   ((-4 + d - 2*n4)*(-8*n3 + 3*d*n3 - 2*n1*n3 - 2*n2*n3 - 2*n3^2 - 2*n3*n4)*
     j[p4a, n1, n2, 1 + n3, 1 + n4, 0, 1, -1, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   (n3*(-4 + d - 2*n4)*(8 - 3*d + 2*n1 + 2*n2 + 2*n3 + 2*n4)*
     j[p4a, n1, n2, 1 + n3, 1 + n4, 0, 1, 0, 0, 0, 1, 1, -1, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   (n3*(-4 + d - 2*n4)*(8 - 3*d + 2*n1 + 2*n2 + 2*n3 + 2*n4)*
     j[p4a, n1, n2, 1 + n3, 1 + n4, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   (n3*(-4 + d - 2*n4)*(8 - 3*d + 2*n1 + 2*n2 + 2*n3 + 2*n4)*
     j[p4a, n1, n2, 1 + n3, 1 + n4, 0, 1, 0, 1, 0, 0, 1, -1, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   (n3*(-4 + d - 2*n4)*(8 - 3*d + 2*n1 + 2*n2 + 2*n3 + 2*n4)*
     j[p4a, n1, n2, 1 + n3, 1 + n4, 0, 1, 0, 1, 0, 1, 0, -1, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-4 + d - 2*n4)*(-8*n3 + 3*d*n3 - 2*n1*n3 - 2*n2*n3 - 2*n3^2 - 2*n3*n4)*
     j[p4a, n1, n2, 1 + n3, 1 + n4, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   (n2*(2 - d + 2*n1 + n2)*(-4 + d - 2*n4)*j[p4a, n1, 1 + n2, -1 + n3, 
      1 + n4, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/(2*(-3 + d - n4)*
     (64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + (3*n2*(-4 + d - 2*n4)*(6 - 2*d + n2 + 2*n3 + 
      2*n4)*j[p4a, n1, 1 + n2, -1 + n3, 1 + n4, 0, 1, 0, 1, 0, 0, 1, 0, 1, 
      1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 
      8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 
      32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   (n2*(2 - d + 2*n1 + n2)*(-4 + d - 2*n4)*j[p4a, n1, 1 + n2, n3, 1 + n4, 0, 
      1, -1, 0, 0, 1, 1, 0, 1, 1])/((-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   (n2*(-4 + d - 2*n4)*(20 - 7*d + 2*n1 + 4*n2 + 6*n3 + 6*n4)*
     j[p4a, n1, 1 + n2, n3, 1 + n4, 0, 1, -1, 1, 0, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   (n2*(2 - d + 2*n1 + n2)*(-4 + d - 2*n4)*j[p4a, n1, 1 + n2, n3, 1 + n4, 0, 
      1, -1, 1, 0, 1, 1, 0, 0, 1])/((-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   (n2*(-4 + d - 2*n4)*(-4 + d + 2*n1 - 2*n3 - 2*n4)*
     j[p4a, n1, 1 + n2, n3, 1 + n4, 0, 1, -1, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   (n2*(2 - d + 2*n1 + n2)*(-4 + d - 2*n4)*j[p4a, n1, 1 + n2, n3, 1 + n4, 0, 
      1, 0, 0, 0, 1, 1, -1, 1, 1])/(2*(-3 + d - n4)*
     (64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + (n2*(-4 + d - 2*n4)*(-4 + d + 2*n1 - 2*n3 - 2*n4)*
     j[p4a, n1, 1 + n2, n3, 1 + n4, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   (n2*(-4 + d - 2*n4)*(14 - 5*d + 2*n1 + 3*n2 + 4*n3 + 4*n4)*
     j[p4a, n1, 1 + n2, n3, 1 + n4, 0, 1, 0, 1, 0, 0, 1, -1, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   (n1*(-4 + d - 2*n4)*(-6 + 2*d - n2 - 2*n3 - 2*n4)*
     j[p4a, 1 + n1, -1 + n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   (n1*(-4 + d - 2*n4)*(-6 + 2*d - n2 - 2*n3 - 2*n4)*
     j[p4a, 1 + n1, n2, n3, 1 + n4, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   (n1*(-4 + d - 2*n4)*(-6 + 2*d - n2 - 2*n3 - 2*n4)*
     j[p4a, 1 + n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   (n1*(-4 + d - 2*n4)*(-6 + 2*d - n2 - 2*n3 - 2*n4)*
     j[p4a, 1 + n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n4 == 0 && 
    n6 == 1 && n7 == 0 && n8 == 1 && n9 == 0 && n5 != 0 -> 
  ((-6 + 3*d + 2*n1 - 4*n3)*(-4 + d - 2*n5)*j[p4a, -1 + n1, n2, n3, 0, 
      1 + n5, 1, 0, 0, 0, 2, 1, 0, 1, 1])/(2*(-3 + d - n5)*
     (88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 
      80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 
      4*n1*n5 + 12*n3*n5)) - (2*(-2 + d - n3)*(-4 + d - 2*n5)*
     j[p4a, -1 + n1, n2, n3, 0, 1 + n5, 1, 0, 1, 0, 0, 2, 0, 1, 1])/
    ((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 
      4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 
      10*d*n5 - 4*n1*n5 + 12*n3*n5)) - 
   ((-4 + d - 2*n5)*(32 - 30*d + 7*d^2 + 32*n1 - 14*d*n1 - 12*n2 + 6*d*n2 + 
      4*n1*n2 + 12*n3 - 6*d*n3 + 12*n1*n3 - 8*n2*n3 + 4*n5 - 2*d*n5 + 
      4*n1*n5)*j[p4a, -1 + n1, n2, n3, 0, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 
      4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 
      10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   ((-6 + 3*d + 2*n1 - 4*n3)*(-4 + d - 2*n5)*j[p4a, -1 + n1, n2, n3, 0, 
      1 + n5, 1, 0, 1, 0, 2, 1, 0, 0, 1])/(2*(-3 + d - n5)*
     (88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 
      80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 
      4*n1*n5 + 12*n3*n5)) + ((-14 + 7*d + 2*n1 - 8*n3)*(-4 + d - 2*n5)*
     j[p4a, -1 + n1, n2, n3, 0, 1 + n5, 1, 0, 2, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 
      4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 
      10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   ((-22 + 11*d + 2*n1 - 12*n3)*(-4 + d - 2*n5)*(1 + n5)*
     j[p4a, -1 + n1, n2, n3, 0, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 
      4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 
      10*d*n5 - 4*n1*n5 + 12*n3*n5)) - 
   ((-22 + 11*d + 2*n1 - 12*n3)*(-4 + d - 2*n5)*(1 + n5)*
     j[p4a, -1 + n1, n2, n3, 0, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 0])/
    (2*(-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 
      4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 
      10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   (4*(-2 + d - n3)*n3*(-4 + d - 2*n5)*j[p4a, -1 + n1, n2, 1 + n3, 0, 1 + n5, 
      1, 0, 0, 0, 1, 1, 0, 1, 1])/((-3 + d - n5)*(88 - 78*d + 17*d^2 - 
      24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 
      8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   ((-18 + 9*d + 2*n1 - 10*n3)*n3*(-4 + d - 2*n5)*j[p4a, -1 + n1, n2, 1 + n3, 
      0, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/(2*(-3 + d - n5)*
     (88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 
      80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 
      4*n1*n5 + 12*n3*n5)) - (4*n2*(-2 + d - n3)*(-4 + d - 2*n5)*
     j[p4a, -1 + n1, 1 + n2, -1 + n3, 0, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 
      4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 
      10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   (4*n2*(-2 + d - n3)*(-4 + d - 2*n5)*j[p4a, -1 + n1, 1 + n2, n3, 0, 1 + n5, 
      1, -1, 1, 0, 1, 1, 0, 1, 1])/((-3 + d - n5)*(88 - 78*d + 17*d^2 - 
      24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 
      8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   (n2*(-18 + 9*d + 2*n1 - 10*n3)*(-4 + d - 2*n5)*j[p4a, -1 + n1, 1 + n2, n3, 
      0, 1 + n5, 1, 0, 0, 0, 1, 1, 0, 1, 1])/(2*(-3 + d - n5)*
     (88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 
      80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 
      4*n1*n5 + 12*n3*n5)) - (4*n2*(-2 + d - n3)*(-4 + d - 2*n5)*
     j[p4a, -1 + n1, 1 + n2, n3, 0, 1 + n5, 1, 0, 1, 0, 1, 1, -1, 1, 1])/
    ((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 
      4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 
      10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   (n2*(-22 + 11*d + 2*n1 - 12*n3)*(-4 + d - 2*n5)*j[p4a, -1 + n1, 1 + n2, 
      n3, 0, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 
      4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 
      10*d*n5 - 4*n1*n5 + 12*n3*n5)) - 
   ((-6 + 3*d + 2*n1 - 4*n3)*(-4 + d - 2*n5)*j[p4a, n1, -1 + n2, n3, 0, 
      1 + n5, 1, 0, 0, 0, 2, 1, 0, 1, 1])/(2*(-3 + d - n5)*
     (88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 
      80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 
      4*n1*n5 + 12*n3*n5)) - ((-6 + 3*d + 2*n1 - 4*n3)*(-4 + 2*d - n2 - 2*n3)*
     j[p4a, n1, -1 + n2, n3, 0, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    ((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 
      4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 
      10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   ((-2 + d - n3)*(-4 + d - 2*n5)*(-8 + 3*d - 2*n3 - 2*n5)*
     j[p4a, n1, -1 + n2, n3, 0, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 
      4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 
      10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   ((-2 + d - n3)*(-4 + d - 2*n5)*j[p4a, n1, -1 + n2, n3, 0, 1 + n5, 1, 0, 1, 
      0, 2, 0, 0, 1, 1])/((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 
      10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 
      8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) - 
   ((-6 + 3*d + 2*n1 - 4*n3)*(-4 + d - 2*n5)*j[p4a, n1, -1 + n2, n3, 0, 
      1 + n5, 1, 0, 1, 0, 2, 1, 0, 0, 1])/(2*(-3 + d - n5)*
     (88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 
      80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 
      4*n1*n5 + 12*n3*n5)) - ((-2 + d - n3)*(-4 + d - 2*n5)*
     j[p4a, n1, -1 + n2, n3, 0, 1 + n5, 1, 0, 2, 0, 1, 0, 0, 1, 1])/
    ((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 
      4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 
      10*d*n5 - 4*n1*n5 + 12*n3*n5)) - 
   ((-2 + d - n3)*(-4 + d - 2*n5)*j[p4a, n1, -1 + n2, n3, 0, 1 + n5, 1, 0, 2, 
      0, 1, 1, 0, 0, 1])/((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 
      10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 
      8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) - 
   ((-6 + 3*d + 2*n1 - 4*n3)*(-12 + 5*d - 2*n2 - 4*n3 - 2*n5)*
     j[p4a, n1, -1 + n2, n3, 0, 1 + n5, 2, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 
      4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 
      10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   ((-2 + d - n3)*(-4 + d - 2*n5)*j[p4a, n1, -1 + n2, n3, 0, 1 + n5, 2, 0, 1, 
      0, 0, 1, 0, 1, 1])/((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 
      10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 
      8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) - 
   j[p4a, n1, -1 + n2, n3, 0, 1 + n5, 2, 0, 1, 0, 1, 1, 0, 0, 1]/
    (2*(-3 + d - n5)) - j[p4a, n1, -1 + n2, n3, 0, 1 + n5, 2, 0, 1, 0, 1, 1, 
     0, 1, 0]/(2*(-3 + d - n5)) + ((-6 + 3*d + 2*n1 - 4*n3)*
     (-4 + 2*d - n2 - 2*n3)*(1 + n5)*j[p4a, n1, -1 + n2, n3, 0, 2 + n5, 1, 0, 
      1, 0, 1, 1, 0, 0, 1])/((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 
      10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 
      8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) - 
   ((-6 + 3*d + 2*n1 - 4*n3)*(-4 + 2*d - n2 - 2*n3)*(1 + n5)*
     j[p4a, n1, -1 + n2, n3, 0, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 0])/
    ((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 
      4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 
      10*d*n5 - 4*n1*n5 + 12*n3*n5)) - 
   (2*(-2 + d - n3)*n3*(-4 + d - 2*n5)*j[p4a, n1, -1 + n2, 1 + n3, 0, 1 + n5, 
      1, 0, 0, 0, 1, 1, 0, 1, 1])/((-3 + d - n5)*(88 - 78*d + 17*d^2 - 
      24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 
      8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   (2*(-2 + d - n3)*n3*(-4 + d - 2*n5)*j[p4a, n1, -1 + n2, 1 + n3, 0, 1 + n5, 
      1, 0, 1, 0, 0, 1, 0, 1, 1])/((-3 + d - n5)*(88 - 78*d + 17*d^2 - 
      24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 
      8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) - 
   (2*(-2 + d - n3)*n3*(-4 + d - 2*n5)*j[p4a, n1, -1 + n2, 1 + n3, 0, 1 + n5, 
      1, 0, 1, 0, 1, 0, 0, 1, 1])/((-3 + d - n5)*(88 - 78*d + 17*d^2 - 
      24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 
      8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   ((-2 + d + 2*n1 - 2*n3)*n3*(-4 + d - 2*n5)*j[p4a, n1, -1 + n2, 1 + n3, 0, 
      1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/(2*(-3 + d - n5)*
     (88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 
      80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 
      4*n1*n5 + 12*n3*n5)) - ((-6 + 3*d + 2*n1 - 4*n3)*(-4 + 2*d - n2 - 2*n3)*
     j[p4a, n1, n2, -1 + n3, 0, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    ((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 
      4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 
      10*d*n5 - 4*n1*n5 + 12*n3*n5)) - 
   (2*(-4 + d - 2*n5)*(14 - 13*d + 3*d^2 + 2*n2 - d*n2 + 11*n3 - 5*d*n3 + 
      n2*n3 + 2*n3^2 + 2*n5 - d*n5 + n3*n5)*j[p4a, n1, n2, -1 + n3, 0, 
      1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/((-3 + d - n5)*
     (88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 
      80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 
      4*n1*n5 + 12*n3*n5)) + ((-2 + d - n3)*(-4 + d - 2*n5)*
     j[p4a, n1, n2, -1 + n3, 0, 1 + n5, 1, 0, 1, 0, 2, 0, 0, 1, 1])/
    ((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 
      4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 
      10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   ((-2 + d - n3)*(-4 + d - 2*n5)*j[p4a, n1, n2, -1 + n3, 0, 1 + n5, 2, 0, 0, 
      0, 1, 1, 0, 1, 1])/((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 
      10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 
      8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) - 
   ((-6 + 3*d + 2*n1 - 4*n3)*(-4 + d - 2*n5)*j[p4a, n1, n2, -1 + n3, 0, 
      1 + n5, 2, 0, 1, 0, 0, 1, 0, 1, 1])/(2*(-3 + d - n5)*
     (88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 
      80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 
      4*n1*n5 + 12*n3*n5)) + (2*(-2 + d - n3)*(-4 + d - 2*n5)*
     j[p4a, n1, n2, n3, -1, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 
     80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 
     4*n1*n5 + 12*n3*n5) - ((-2 + d - n3)*(-4 + d - 2*n5)*
     j[p4a, n1, n2, n3, -1, 1 + n5, 2, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 
      4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 
      10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   ((-2 + d - n3)*(-4 + d - 2*n5)*j[p4a, n1, n2, n3, -1, 1 + n5, 2, 0, 1, 0, 
      0, 1, 0, 1, 1])/((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 
      12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 
      16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) - 
   ((-2 + d - n3)*(-4 + d - 2*n5)*j[p4a, n1, n2, n3, -1, 1 + n5, 2, 0, 1, 0, 
      1, 1, 0, 0, 1])/((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 
      12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 
      16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) - 
   ((-2 + d - n3)*(-4 + d - 2*n5)*j[p4a, n1, n2, n3, -1, 1 + n5, 2, 0, 1, 0, 
      1, 1, 0, 1, 0])/((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 
      12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 
      16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   ((-2 + d - n3)*(-4 + d - 2*n5)*(1 + n5)*j[p4a, n1, n2, n3, -1, 2 + n5, 1, 
      0, 1, 0, 1, 1, 0, 0, 1])/((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 
      10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 
      8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) - 
   ((-2 + d - n3)*(-4 + d - 2*n5)*(1 + n5)*j[p4a, n1, n2, n3, -1, 2 + n5, 1, 
      0, 1, 0, 1, 1, 0, 1, 0])/((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 
      10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 
      8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   ((-6 + 3*d + 2*n1 - 4*n3)*(-4 + 2*d - n2 - 2*n3)*
     j[p4a, n1, n2, n3, 0, n5, 0, 0, 1, 0, 1, 1, 0, 1, 2])/
    ((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 
      4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 
      10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   ((-6 + 3*d + 2*n1 - 4*n3)*(-4 + 2*d - n2 - 2*n3)*
     j[p4a, n1, n2, n3, 0, n5, 1, 0, 0, 0, 1, 1, 0, 1, 2])/
    ((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 
      4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 
      10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   ((-6 + 3*d + 2*n1 - 4*n3)*(-4 + 2*d - n2 - 2*n3)*
     j[p4a, n1, n2, n3, 0, n5, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    ((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 
      4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 
      10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   j[p4a, n1, n2, n3, 0, n5, 2, 0, 0, 0, 1, 1, 0, 1, 1]/(2*(-3 + d - n5)) - 
   ((-10 + 5*d + 2*n1 - 6*n3)*(-4 + d - 2*n5)*j[p4a, n1, n2, n3, 0, n5, 2, 0, 
      1, 0, 0, 1, 0, 1, 1])/(2*(-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 
      10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 
      8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   j[p4a, n1, n2, n3, 0, n5, 2, 0, 1, 0, 1, 1, 0, 0, 1]/(2*(-3 + d - n5)) + 
   j[p4a, n1, n2, n3, 0, n5, 2, 0, 1, 0, 1, 1, 0, 1, 0]/(2*(-3 + d - n5)) + 
   ((-6 + 3*d + 2*n1 - 4*n3)*(-4 + 2*d - n2 - 2*n3)*n5*
     j[p4a, n1, n2, n3, 0, 1 + n5, 0, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 
      4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 
      10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   (2*(-2 + d - n3)*(-4 + d - 2*n5)*j[p4a, n1, n2, n3, 0, 1 + n5, 1, -1, 0, 
      0, 1, 2, 0, 1, 1])/((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 
      10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 
      8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) - 
   ((-2 + d - n3)*(-4 + d - 2*n5)*j[p4a, n1, n2, n3, 0, 1 + n5, 1, -1, 0, 0, 
      2, 1, 0, 1, 1])/((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 
      12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 
      16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   ((-6 + 3*d + 2*n1 - 4*n3)*(-4 + 2*d - n2 - 2*n3)*
     j[p4a, n1, n2, n3, 0, 1 + n5, 1, -1, 1, 0, 1, 1, 0, 0, 2])/
    ((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 
      4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 
      10*d*n5 - 4*n1*n5 + 12*n3*n5)) - 
   ((-2 + d - n3)*(-4 + d - 2*n5)*j[p4a, n1, n2, n3, 0, 1 + n5, 1, -1, 1, 0, 
      2, 0, 0, 1, 1])/((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 
      12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 
      16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) - 
   ((-2 + d - n3)*(-4 + d - 2*n5)*j[p4a, n1, n2, n3, 0, 1 + n5, 1, -1, 1, 0, 
      2, 1, 0, 0, 1])/((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 
      12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 
      16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   ((-2 + d - n3)*(-4 + d - 2*n5)*j[p4a, n1, n2, n3, 0, 1 + n5, 1, -1, 2, 0, 
      1, 0, 0, 1, 1])/((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 
      12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 
      16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   ((-2 + d - n3)*(-4 + d - 2*n5)*j[p4a, n1, n2, n3, 0, 1 + n5, 1, -1, 2, 0, 
      1, 1, 0, 0, 1])/((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 
      12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 
      16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) - 
   ((-12 + 6*d - 4*n1 + 2*d*n1 - 6*n2 + 3*d*n2 + 2*n1*n2 + 16*n3 - 11*d*n3 - 
      8*n1*n3 - 4*n2*n3 + 14*n3^2)*(-4 + d - 2*n5)*j[p4a, n1, n2, n3, 0, 
      1 + n5, 1, 0, 0, 0, 1, 1, 0, 1, 1])/(2*(-3 + d - n5)*
     (88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 
      80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 
      4*n1*n5 + 12*n3*n5)) + ((-2 + d - 2*n1)*(-4 + d - 2*n5)*
     j[p4a, n1, n2, n3, 0, 1 + n5, 1, 0, 0, 0, 1, 2, -1, 1, 1])/
    (2*(-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 
      4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 
      10*d*n5 - 4*n1*n5 + 12*n3*n5)) - 
   ((-2 + d - 2*n1)*(-4 + d - 2*n5)*j[p4a, n1, n2, n3, 0, 1 + n5, 1, 0, 0, 0, 
      1, 2, 0, 1, 1])/(2*(-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 
      10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 
      8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   ((-10 + 5*d + 2*n1 - 6*n3)*(-4 + d - 2*n5)*j[p4a, n1, n2, n3, 0, 1 + n5, 
      1, 0, 1, -1, 1, 1, 0, 0, 2])/(2*(-3 + d - n5)*
     (88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 
      80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 
      4*n1*n5 + 12*n3*n5)) - ((-4 + 2*d - 4*n1 + 2*d*n1 + 4*n2 - 2*d*n2 - 
      4*n3 + d*n3 + 2*n2*n3 - 2*n3^2)*(-4 + d - 2*n5)*
     j[p4a, n1, n2, n3, 0, 1 + n5, 1, 0, 1, 0, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 
      4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 
      10*d*n5 - 4*n1*n5 + 12*n3*n5)) - 
   ((-2 + d - n3)*(-4 + d - 2*n5)*j[p4a, n1, n2, n3, 0, 1 + n5, 1, 0, 1, 0, 
      0, 2, -1, 1, 1])/((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 
      12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 
      16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   ((-2 + d - n3)*(-4 + d - 2*n5)*j[p4a, n1, n2, n3, 0, 1 + n5, 1, 0, 1, 0, 
      0, 2, 0, 1, 1])/((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 
      12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 
      16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   ((-14 + 7*d - 2*n1 + 2*d*n1 - 10*n3 + d*n3 - 2*n3^2)*(-4 + d - 2*n5)*
     j[p4a, n1, n2, n3, 0, 1 + n5, 1, 0, 1, 0, 1, 0, 0, 1, 1])/
    (2*(-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 
      4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 
      10*d*n5 - 4*n1*n5 + 12*n3*n5)) - 
   ((-6 + 3*d + 2*n1 - 4*n3)*(-4 + 2*d - n2 - 2*n3)*
     j[p4a, n1, n2, n3, 0, 1 + n5, 1, 0, 1, 0, 1, 1, -1, 0, 2])/
    ((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 
      4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 
      10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   ((-48 + 36*d - 6*d^2 + 80*n1 - 52*d*n1 + 8*d^2*n1 - 80*n2 + 60*d*n2 - 
      10*d^2*n2 + 16*n1*n2 - 4*d*n1*n2 + 56*n3 - 58*d*n3 + 11*d^2*n3 + 
      8*n1*n3 - 2*d*n1*n3 - 48*n2*n3 + 12*d*n2*n3 + 56*n3^2 - 14*d*n3^2 - 
      112*n5 + 90*d*n5 - 17*d^2*n5 + 64*n1*n5 - 26*d*n1*n5 - 52*n2*n5 + 
      26*d*n2*n5 + 12*n1*n2*n5 - 52*n3*n5 + 12*d*n3*n5 + 12*n1*n3*n5 - 
      32*n2*n3*n5 + 12*n3^2*n5 - 20*n5^2 + 10*d*n5^2 + 4*n1*n5^2 - 
      12*n3*n5^2)*j[p4a, n1, n2, n3, 0, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 
      4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 
      10*d*n5 - 4*n1*n5 + 12*n3*n5)) - 
   ((-10 + 5*d + 2*n1 - 6*n3)*(-4 + d - 2*n5)*j[p4a, n1, n2, n3, 0, 1 + n5, 
      1, 0, 1, 0, 1, 1, 0, 0, 2])/(2*(-3 + d - n5)*(88 - 78*d + 17*d^2 - 
      24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 
      8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   ((-8 + 6*d - d^2 + 8*n1 - 2*d*n1 - 8*n3 + 2*d*n3 + 84*n5 - 76*d*n5 + 
      17*d^2*n5 - 20*n1*n5 + 10*d*n1*n5 + 12*n2*n5 - 6*d*n2*n5 - 4*n1*n2*n5 + 
      76*n3*n5 - 34*d*n3*n5 - 8*n1*n3*n5 + 8*n2*n3*n5 + 16*n3^2*n5 + 
      20*n5^2 - 10*d*n5^2 - 4*n1*n5^2 + 12*n3*n5^2)*
     j[p4a, n1, n2, n3, 0, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 0])/
    (2*(-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 
      4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 
      10*d*n5 - 4*n1*n5 + 12*n3*n5)) - 
   ((-4 + d - 2*n5)*(32 - 26*d + 5*d^2 - 32*n1 + 14*d*n1 + 12*n2 - 6*d*n2 - 
      4*n1*n2 + 36*n3 - 14*d*n3 - 12*n1*n3 + 8*n2*n3 + 8*n3^2 + 12*n5 - 
      6*d*n5 - 4*n1*n5 + 8*n3*n5)*j[p4a, n1, n2, n3, 0, 1 + n5, 1, 0, 1, 0, 
      1, 1, 0, 1, 1])/(2*(-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 
      10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 
      8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   ((-2 + d - n3)*(-4 + d - 2*n5)*j[p4a, n1, n2, n3, 0, 1 + n5, 1, 0, 1, 0, 
      2, 0, -1, 1, 1])/((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 
      12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 
      16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) - 
   ((-2 + d - n3)*(-4 + d - 2*n5)*j[p4a, n1, n2, n3, 0, 1 + n5, 1, 0, 1, 0, 
      2, 0, 0, 1, 1])/((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 
      12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 
      16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) - 
   ((-14 + 7*d + 2*n1 - 8*n3)*(-4 + d - 2*n5)*j[p4a, n1, n2, n3, 0, 1 + n5, 
      1, 0, 2, 0, 1, 0, -1, 1, 1])/(2*(-3 + d - n5)*
     (88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 
      80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 
      4*n1*n5 + 12*n3*n5)) - ((-2 + d - n3)*(-4 + d - 2*n5)*
     j[p4a, n1, n2, n3, 0, 1 + n5, 2, -1, 0, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 
      4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 
      10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   ((-6 + 3*d + 2*n1 - 4*n3)*(-4 + d - 2*n5)*j[p4a, n1, n2, n3, 0, 1 + n5, 2, 
      -1, 1, 0, 0, 1, 0, 1, 1])/(2*(-3 + d - n5)*(88 - 78*d + 17*d^2 - 
      24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 
      8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   ((-2 + d + 2*n1 - 2*n3)*(-4 + d - 2*n5)*j[p4a, n1, n2, n3, 0, 1 + n5, 2, 
      0, 0, -1, 1, 1, 0, 1, 1])/(2*(-3 + d - n5)*(88 - 78*d + 17*d^2 - 
      24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 
      8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   ((-2 + d - n3)*(-4 + d - 2*n5)*j[p4a, n1, n2, n3, 0, 1 + n5, 2, 0, 0, 0, 
      1, 1, -1, 1, 1])/((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 
      12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 
      16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   ((-6 + 3*d + 2*n1 - 4*n3)*(-4 + d - 2*n5)*j[p4a, n1, n2, n3, 0, 1 + n5, 2, 
      0, 1, -1, 1, 1, 0, 0, 1])/(2*(-3 + d - n5)*(88 - 78*d + 17*d^2 - 
      24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 
      8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   ((-6 + 3*d + 2*n1 - 4*n3)*(-4 + d - 2*n5)*j[p4a, n1, n2, n3, 0, 1 + n5, 2, 
      0, 1, -1, 1, 1, 0, 1, 0])/(2*(-3 + d - n5)*(88 - 78*d + 17*d^2 - 
      24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 
      8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) - 
   ((-6 + 3*d + 2*n1 - 4*n3)*(-4 + d - 2*n5)*j[p4a, n1, n2, n3, 0, 1 + n5, 2, 
      0, 1, 0, 0, 1, -1, 1, 1])/(2*(-3 + d - n5)*(88 - 78*d + 17*d^2 - 
      24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 
      8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) - 
   ((-2 + d - n3)*(-4 + d - 2*n5)*(1 + n5)*j[p4a, n1, n2, n3, 0, 2 + n5, 1, 
      -1, 1, 0, 1, 1, 0, 0, 1])/((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 
      10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 
      8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   ((-2 + d - n3)*(-4 + d - 2*n5)*(1 + n5)*j[p4a, n1, n2, n3, 0, 2 + n5, 1, 
      -1, 1, 0, 1, 1, 0, 1, 0])/((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 
      10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 
      8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) - 
   ((-6 + 3*d + 2*n1 - 4*n3)*(-4 + d - 2*n5)*(1 + n5)*
     j[p4a, n1, n2, n3, 0, 2 + n5, 1, 0, 1, -1, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 
      4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 
      10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   ((-6 + 3*d + 2*n1 - 4*n3)*(-4 + d - 2*n5)*(1 + n5)*
     j[p4a, n1, n2, n3, 0, 2 + n5, 1, 0, 1, -1, 1, 1, 0, 1, 0])/
    (2*(-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 
      4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 
      10*d*n5 - 4*n1*n5 + 12*n3*n5)) - 
   ((-22 + 11*d + 6*n1 - 14*n3)*n3*(-4 + d - 2*n5)*j[p4a, n1, n2, 1 + n3, 0, 
      1 + n5, 1, -1, 0, 0, 1, 1, 0, 1, 1])/(2*(-3 + d - n5)*
     (88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 
      80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 
      4*n1*n5 + 12*n3*n5)) + ((-2 + d + 2*n1 - 2*n3)*n3*(-4 + d - 2*n5)*
     j[p4a, n1, n2, 1 + n3, 0, 1 + n5, 1, -1, 1, 0, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 
      4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 
      10*d*n5 - 4*n1*n5 + 12*n3*n5)) - 
   ((-2 + d + 2*n1 - 2*n3)*n3*(-4 + d - 2*n5)*j[p4a, n1, n2, 1 + n3, 0, 
      1 + n5, 1, -1, 1, 0, 1, 0, 0, 1, 1])/(2*(-3 + d - n5)*
     (88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 
      80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 
      4*n1*n5 + 12*n3*n5)) - ((-22 + 11*d + 6*n1 - 14*n3)*n3*(-4 + d - 2*n5)*
     j[p4a, n1, n2, 1 + n3, 0, 1 + n5, 1, -1, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 
      4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 
      10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   (2*(-2 + d - n3)*n3*(-4 + d - 2*n5)*j[p4a, n1, n2, 1 + n3, 0, 1 + n5, 1, 
      0, 0, 0, 1, 1, -1, 1, 1])/((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 
      10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 
      8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) - 
   (4*(-2 + d - n3)*n3*(-4 + d - 2*n5)*j[p4a, n1, n2, 1 + n3, 0, 1 + n5, 1, 
      0, 0, 0, 1, 1, 0, 1, 1])/((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 
      10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 
      8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   (2*(-2 + d - n3)*n3*(-4 + d - 2*n5)*j[p4a, n1, n2, 1 + n3, 0, 1 + n5, 1, 
      0, 1, 0, 0, 1, -1, 1, 1])/((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 
      10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 
      8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) - 
   (2*(-2 + d - n3)*n3*(-4 + d - 2*n5)*j[p4a, n1, n2, 1 + n3, 0, 1 + n5, 1, 
      0, 1, 0, 1, 0, -1, 1, 1])/((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 
      10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 
      8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   ((-10 + 5*d + 2*n1 - 6*n3)*n3*(-4 + d - 2*n5)*j[p4a, n1, n2, 1 + n3, 0, 
      1 + n5, 1, 0, 1, 0, 1, 1, -1, 0, 1])/((-3 + d - n5)*
     (88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 
      80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 
      4*n1*n5 + 12*n3*n5)) - ((-18 + 9*d + 2*n1 - 10*n3)*n3*(-4 + d - 2*n5)*
     j[p4a, n1, n2, 1 + n3, 0, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 
      4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 
      10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   (n2*(-2 + d - n3)*(-4 + d - 2*n5)*j[p4a, n1, 1 + n2, -1 + n3, 0, 1 + n5, 
      1, 0, 0, 0, 1, 1, 0, 1, 1])/((-3 + d - n5)*(88 - 78*d + 17*d^2 - 
      24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 
      8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) - 
   (n2*(-6 + 3*d + 2*n1 - 4*n3)*(-4 + d - 2*n5)*j[p4a, n1, 1 + n2, -1 + n3, 
      0, 1 + n5, 1, 0, 1, 0, 0, 1, 0, 1, 1])/(2*(-3 + d - n5)*
     (88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 
      80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 
      4*n1*n5 + 12*n3*n5)) - (2*n2*(-2 + d - n3)*(-4 + d - 2*n5)*
     j[p4a, n1, 1 + n2, n3, 0, 1 + n5, 1, -1, 0, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 
      4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 
      10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   (n2*(-10 + 5*d + 2*n1 - 6*n3)*(-4 + d - 2*n5)*j[p4a, n1, 1 + n2, n3, 0, 
      1 + n5, 1, -1, 1, 0, 0, 1, 0, 1, 1])/(2*(-3 + d - n5)*
     (88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 
      80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 
      4*n1*n5 + 12*n3*n5)) - (2*n2*(-2 + d - n3)*(-4 + d - 2*n5)*
     j[p4a, n1, 1 + n2, n3, 0, 1 + n5, 1, -1, 1, 0, 1, 1, 0, 0, 1])/
    ((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 
      4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 
      10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   (n2*(-2 + d - n3)*(-4 + d - 2*n5)*j[p4a, n1, 1 + n2, n3, 0, 1 + n5, 1, 0, 
      0, 0, 1, 1, -1, 1, 1])/((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 
      10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 
      8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) - 
   (n2*(-6 + 3*d + 2*n1 - 4*n3)*(-4 + d - 2*n5)*j[p4a, n1, 1 + n2, n3, 0, 
      1 + n5, 1, 0, 1, 0, 0, 1, -1, 1, 1])/(2*(-3 + d - n5)*
     (88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 
      80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 
      4*n1*n5 + 12*n3*n5)) - (n1*(-2 + d - n3)*(-4 + d - 2*n5)*
     j[p4a, 1 + n1, -1 + n2, n3, 0, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 10*d*n1 + 12*n2 - 6*d*n2 - 
      4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 8*n2*n3 + 16*n3^2 + 20*n5 - 
      10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   (n1*(-2 + d - n3)*(-4 + d - 2*n5)*j[p4a, 1 + n1, n2, n3, 0, 1 + n5, 1, 0, 
      0, 0, 1, 1, 0, 1, 1])/((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 
      10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 
      8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) + 
   (n1*(-2 + d - n3)*(-4 + d - 2*n5)*j[p4a, 1 + n1, n2, n3, 0, 1 + n5, 1, 0, 
      1, 0, 0, 1, 0, 1, 1])/((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 
      10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 
      8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)) - 
   (n1*(-2 + d - n3)*(-4 + d - 2*n5)*j[p4a, 1 + n1, n2, n3, 0, 1 + n5, 1, 0, 
      1, 0, 1, 0, 0, 1, 1])/((-3 + d - n5)*(88 - 78*d + 17*d^2 - 24*n1 + 
      10*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 80*n3 - 34*d*n3 - 8*n1*n3 + 
      8*n2*n3 + 16*n3^2 + 20*n5 - 10*d*n5 - 4*n1*n5 + 12*n3*n5)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n6 == 1 && n7 == 0 && n8 == 1 && n9 == 0 && n5 != 0 -> 
  (-4*(32 - 28*d + 6*d^2 - 12*n1 + 4*d*n1 + 28*n3 - 11*d*n3 - 2*n1*n3 + 
      4*n3^2 + 32*n4 - 13*d*n4 - 2*n1*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5)*j[p4a, -1 + n1, 0, n3, n4, 
      1 + n5, 0, 0, 1, 0, 1, 2, 0, 1, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 
     80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) - 
   (2*(32 - 28*d + 6*d^2 - 12*n1 + 4*d*n1 + 28*n3 - 11*d*n3 - 2*n1*n3 + 
      4*n3^2 + 32*n4 - 13*d*n4 - 2*n1*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5)*j[p4a, -1 + n1, 0, n3, n4, 
      1 + n5, 0, 0, 2, 0, 1, 1, 0, 1, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 
     80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((96 - 176*d + 98*d^2 - 17*d^3 + 16*d*n1 - 6*d^2*n1 + 192*n3 - 208*d*n3 + 
      52*d^2*n3 - 32*n1*n3 + 16*d*n1*n3 + 112*n3^2 - 52*d*n3^2 - 8*n1*n3^2 + 
      16*n3^3 + 224*n4 - 240*d*n4 + 60*d^2*n4 - 32*n1*n4 + 16*d*n1*n4 + 
      256*n3*n4 - 120*d*n3*n4 - 16*n1*n3*n4 + 56*n3^2*n4 + 144*n4^2 - 
      68*d*n4^2 - 8*n1*n4^2 + 64*n3*n4^2 + 24*n4^3 - 64*n5 + 40*d*n5 - 
      4*d^2*n5 + 32*n1*n5 - 8*d*n1*n5 - 32*n3*n5 + 8*n3^2*n5 - 32*n4*n5 + 
      16*n3*n4*n5 + 8*n4^2*n5 - 24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 
      16*n3*n5^2 - 16*n4*n5^2)*j[p4a, -1 + n1, 0, n3, n4, 1 + n5, 1, 0, 0, 0, 
      1, 1, 0, 2, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) - 
   (4*(32 - 28*d + 6*d^2 - 12*n1 + 4*d*n1 + 28*n3 - 11*d*n3 - 2*n1*n3 + 
      4*n3^2 + 32*n4 - 13*d*n4 - 2*n1*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5)*j[p4a, -1 + n1, 0, n3, n4, 
      1 + n5, 1, 0, 0, 0, 1, 2, 0, 1, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 
     80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((96 - 208*d + 126*d^2 - 23*d^3 + 96*n1 - 68*d*n1 + 12*d^2*n1 + 4*d*n1^2 + 
      208*n3 - 244*d*n3 + 64*d^2*n3 + 24*n1*n3 - 12*d*n1*n3 - 8*n1^2*n3 + 
      128*n3^2 - 60*d*n3^2 + 8*n1*n3^2 + 16*n3^3 + 240*n4 - 280*d*n4 + 
      74*d^2*n4 + 56*n1*n4 - 24*d*n1*n4 - 8*n1^2*n4 + 280*n3*n4 - 
      136*d*n3*n4 + 24*n1*n3*n4 + 56*n3^2*n4 + 152*n4^2 - 76*d*n4^2 + 
      16*n1*n4^2 + 64*n3*n4^2 + 24*n4^3 - 128*n5 + 88*d*n5 - 12*d^2*n5 + 
      56*n1*n5 - 20*d*n1*n5 + 8*n1^2*n5 - 72*n3*n5 + 12*d*n3*n5 + 8*n3^2*n5 - 
      80*n4*n5 + 16*d*n4*n5 + 8*n1*n4*n5 + 8*n3*n4*n5 - 40*n5^2 + 20*d*n5^2 + 
      8*n1*n5^2 - 24*n3*n5^2 - 24*n4*n5^2)*j[p4a, -1 + n1, 0, n3, n4, 1 + n5, 
      1, 0, 0, 0, 2, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5)*
     (-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 
      48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 
      60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 
      260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 16*n1^2*n4 - 
      128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 28*d*n4^2 - 
      48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 
      8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 16*n3^2*n5 - 
      88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 8*n4^2*n5 - 
      8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   (2*(32*d - 28*d^2 + 6*d^3 - 12*d*n1 + 4*d^2*n1 - 64*n3 + 84*d*n3 - 
      23*d^2*n3 + 24*n1*n3 - 10*d*n1*n3 - 56*n3^2 + 26*d*n3^2 + 4*n1*n3^2 - 
      8*n3^3 - 64*n4 + 88*d*n4 - 25*d^2*n4 + 24*n1*n4 - 10*d*n1*n4 - 
      120*n3*n4 + 58*d*n3*n4 + 8*n1*n3*n4 - 28*n3^2*n4 - 64*n4^2 + 
      32*d*n4^2 + 4*n1*n4^2 - 32*n3*n4^2 - 12*n4^3 + 64*n5 - 48*d*n5 + 
      8*d^2*n5 - 24*n1*n5 + 4*d*n1*n5 + 40*n3*n5 - 8*d*n3*n5 + 4*n1*n3*n5 - 
      4*n3^2*n5 + 48*n4*n5 - 12*d*n4*n5 + 4*n1*n4*n5 - 4*n3*n4*n5 + 16*n5^2 - 
      8*d*n5^2 - 8*n1*n5^2 + 12*n3*n5^2 + 12*n4*n5^2)*
     j[p4a, -1 + n1, 0, n3, n4, 1 + n5, 1, 0, 1, 0, 0, 2, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-768 + 1312*d - 816*d^2 + 218*d^3 - 21*d^4 - 768*n1 + 944*d*n1 - 
      364*d^2*n1 + 44*d^3*n1 + 16*d*n1^2 - 4*d^2*n1^2 - 576*n3 + 672*d*n3 - 
      252*d^2*n3 + 30*d^3*n3 - 608*n1*n3 + 408*d*n1*n3 - 64*d^2*n1*n3 - 
      32*n1^2*n3 + 8*d*n1^2*n3 - 64*n3^2 + 48*d*n3^2 - 8*d^2*n3^2 - 
      64*n1*n3^2 + 16*d*n1*n3^2 - 832*n4 + 976*d*n4 - 368*d^2*n4 + 
      44*d^3*n4 - 864*n1*n4 + 584*d*n1*n4 - 92*d^2*n1*n4 - 32*n1^2*n4 + 
      8*d*n1^2*n4 - 224*n3*n4 + 168*d*n3*n4 - 28*d^2*n3*n4 - 224*n1*n3*n4 + 
      56*d*n1*n3*n4 - 160*n4^2 + 120*d*n4^2 - 20*d^2*n4^2 - 160*n1*n4^2 + 
      40*d*n1*n4^2 - 448*n5 + 672*d*n5 - 324*d^2*n5 + 50*d^3*n5 - 416*n1*n5 + 
      432*d*n1*n5 - 100*d^2*n1*n5 + 32*n1^2*n5 - 384*n3*n5 + 336*d*n3*n5 - 
      72*d^2*n3*n5 - 400*n1*n3*n5 + 152*d*n1*n3*n5 - 16*n1^2*n3*n5 - 
      32*n3^2*n5 + 16*d*n3^2*n5 - 32*n1*n3^2*n5 - 544*n4*n5 + 480*d*n4*n5 - 
      104*d^2*n4*n5 - 560*n1*n4*n5 + 216*d*n1*n4*n5 - 16*n1^2*n4*n5 - 
      112*n3*n4*n5 + 56*d*n3*n4*n5 - 112*n1*n3*n4*n5 - 80*n4^2*n5 + 
      40*d*n4^2*n5 - 80*n1*n4^2*n5 + 24*d*n5^2 - 12*d^2*n5^2 + 16*n1*n5^2 + 
      16*d*n1*n5^2 + 16*n1^2*n5^2 - 48*n3*n5^2 + 24*d*n3*n5^2 - 
      48*n1*n3*n5^2 - 64*n4*n5^2 + 32*d*n4*n5^2 - 64*n1*n4*n5^2 + 16*n5^3 - 
      8*d*n5^3 + 16*n1*n5^3)*j[p4a, -1 + n1, 0, n3, n4, 1 + n5, 1, 0, 1, 0, 
      1, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   (2*(32 - 28*d + 6*d^2 - 12*n1 + 4*d*n1 + 28*n3 - 11*d*n3 - 2*n1*n3 + 
      4*n3^2 + 32*n4 - 13*d*n4 - 2*n1*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5)*j[p4a, -1 + n1, 0, n3, n4, 
      1 + n5, 1, 0, 1, 0, 1, 1, 0, 2, 0])/(-288 + 384*d - 170*d^2 + 25*d^3 - 
     80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((96 - 208*d + 126*d^2 - 23*d^3 + 96*n1 - 68*d*n1 + 12*d^2*n1 + 4*d*n1^2 + 
      208*n3 - 244*d*n3 + 64*d^2*n3 + 24*n1*n3 - 12*d*n1*n3 - 8*n1^2*n3 + 
      128*n3^2 - 60*d*n3^2 + 8*n1*n3^2 + 16*n3^3 + 240*n4 - 280*d*n4 + 
      74*d^2*n4 + 56*n1*n4 - 24*d*n1*n4 - 8*n1^2*n4 + 280*n3*n4 - 
      136*d*n3*n4 + 24*n1*n3*n4 + 56*n3^2*n4 + 152*n4^2 - 76*d*n4^2 + 
      16*n1*n4^2 + 64*n3*n4^2 + 24*n4^3 - 128*n5 + 88*d*n5 - 12*d^2*n5 + 
      56*n1*n5 - 20*d*n1*n5 + 8*n1^2*n5 - 72*n3*n5 + 12*d*n3*n5 + 8*n3^2*n5 - 
      80*n4*n5 + 16*d*n4*n5 + 8*n1*n4*n5 + 8*n3*n4*n5 - 40*n5^2 + 20*d*n5^2 + 
      8*n1*n5^2 - 24*n3*n5^2 - 24*n4*n5^2)*j[p4a, -1 + n1, 0, n3, n4, 1 + n5, 
      1, 0, 1, 0, 2, 1, 0, 0, 1])/(2*(-3 + d - n4 - n5)*
     (-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 
      48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 
      60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 
      260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 16*n1^2*n4 - 
      128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 28*d*n4^2 - 
      48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 
      8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 16*n3^2*n5 - 
      88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 8*n4^2*n5 - 
      8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((288 - 448*d + 226*d^2 - 37*d^3 - 48*n1 + 44*d*n1 - 8*d^2*n1 + 4*d*n1^2 + 
      416*n3 - 408*d*n3 + 96*d^2*n3 - 32*n1*n3 + 4*d*n1*n3 - 8*n1^2*n3 + 
      176*n3^2 - 76*d*n3^2 + 8*n1*n3^2 + 16*n3^3 + 560*n4 - 548*d*n4 + 
      130*d^2*n4 - 48*n1*n4 + 8*d*n1*n4 - 8*n1^2*n4 + 480*n3*n4 - 
      212*d*n3*n4 + 16*n1*n3*n4 + 72*n3^2*n4 + 320*n4^2 - 144*d*n4^2 + 
      8*n1*n4^2 + 104*n3*n4^2 + 48*n4^3 - 32*n5 + 8*d*n5 + 4*d^2*n5 - 
      8*n1*n5 + 12*d*n1*n5 + 8*n1^2*n5 + 16*n3*n5 - 24*d*n3*n5 - 
      24*n1*n3*n5 + 24*n3^2*n5 + 24*n4*n5 - 28*d*n4*n5 - 32*n1*n4*n5 + 
      56*n3*n4*n5 + 32*n4^2*n5 - 24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 
      16*n3*n5^2 - 16*n4*n5^2)*j[p4a, -1 + n1, 0, n3, n4, 1 + n5, 1, 0, 2, 0, 
      1, 1, 0, 0, 1])/(2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((1 + n5)*(96 - 176*d + 98*d^2 - 17*d^3 + 16*d*n1 - 6*d^2*n1 + 192*n3 - 
      208*d*n3 + 52*d^2*n3 - 32*n1*n3 + 16*d*n1*n3 + 112*n3^2 - 52*d*n3^2 - 
      8*n1*n3^2 + 16*n3^3 + 224*n4 - 240*d*n4 + 60*d^2*n4 - 32*n1*n4 + 
      16*d*n1*n4 + 256*n3*n4 - 120*d*n3*n4 - 16*n1*n3*n4 + 56*n3^2*n4 + 
      144*n4^2 - 68*d*n4^2 - 8*n1*n4^2 + 64*n3*n4^2 + 24*n4^3 - 64*n5 + 
      40*d*n5 - 4*d^2*n5 + 32*n1*n5 - 8*d*n1*n5 - 32*n3*n5 + 8*n3^2*n5 - 
      32*n4*n5 + 16*n3*n4*n5 + 8*n4^2*n5 - 24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 
      16*n3*n5^2 - 16*n4*n5^2)*j[p4a, -1 + n1, 0, n3, n4, 2 + n5, 0, 0, 1, 0, 
      1, 1, 0, 1, 1])/((3 - d + n4 + n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) - 
   ((1 + n5)*(-480 + 480*d - 142*d^2 + 11*d^3 + 240*n1 - 148*d*n1 + 
      24*d^2*n1 + 4*d*n1^2 - 256*n3 + 80*d*n3 + 8*d^2*n3 + 16*n1*n3 - 
      12*d*n1*n3 - 8*n1^2*n3 + 80*n3^2 - 44*d*n3^2 + 8*n1*n3^2 + 16*n3^3 - 
      464*n4 + 244*d*n4 - 22*d^2*n4 + 96*n1*n4 - 40*d*n1*n4 - 8*n1^2*n4 + 
      16*n3*n4 - 44*d*n3*n4 + 32*n1*n3*n4 + 40*n3^2*n4 - 80*n4^2 + 8*d*n4^2 + 
      24*n1*n4^2 + 24*n3*n4^2 - 480*n5 + 392*d*n5 - 76*d^2*n5 + 184*n1*n5 - 
      52*d*n1*n5 + 8*n1^2*n5 - 352*n3*n5 + 112*d*n3*n5 - 8*n1*n3*n5 - 
      8*n3^2*n5 - 440*n4*n5 + 156*d*n4*n5 + 16*n1*n4*n5 - 72*n3*n4*n5 - 
      64*n4^2*n5 - 88*n5^2 + 44*d*n5^2 + 40*n1*n5^2 - 64*n3*n5^2 - 
      64*n4*n5^2)*j[p4a, -1 + n1, 0, n3, n4, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 
      1])/(2*(3 - d + n4 + n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
      92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((1 + n5)*(-480 + 480*d - 142*d^2 + 11*d^3 + 240*n1 - 148*d*n1 + 
      24*d^2*n1 + 4*d*n1^2 - 256*n3 + 80*d*n3 + 8*d^2*n3 + 16*n1*n3 - 
      12*d*n1*n3 - 8*n1^2*n3 + 80*n3^2 - 44*d*n3^2 + 8*n1*n3^2 + 16*n3^3 - 
      464*n4 + 244*d*n4 - 22*d^2*n4 + 96*n1*n4 - 40*d*n1*n4 - 8*n1^2*n4 + 
      16*n3*n4 - 44*d*n3*n4 + 32*n1*n3*n4 + 40*n3^2*n4 - 80*n4^2 + 8*d*n4^2 + 
      24*n1*n4^2 + 24*n3*n4^2 - 480*n5 + 392*d*n5 - 76*d^2*n5 + 184*n1*n5 - 
      52*d*n1*n5 + 8*n1^2*n5 - 352*n3*n5 + 112*d*n3*n5 - 8*n1*n3*n5 - 
      8*n3^2*n5 - 440*n4*n5 + 156*d*n4*n5 + 16*n1*n4*n5 - 72*n3*n4*n5 - 
      64*n4^2*n5 - 88*n5^2 + 44*d*n5^2 + 40*n1*n5^2 - 64*n3*n5^2 - 
      64*n4*n5^2)*j[p4a, -1 + n1, 0, n3, n4, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 
      0])/(2*(3 - d + n4 + n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
      92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   (n4*(96 - 176*d + 98*d^2 - 17*d^3 + 16*d*n1 - 6*d^2*n1 + 192*n3 - 
      208*d*n3 + 52*d^2*n3 - 32*n1*n3 + 16*d*n1*n3 + 112*n3^2 - 52*d*n3^2 - 
      8*n1*n3^2 + 16*n3^3 + 224*n4 - 240*d*n4 + 60*d^2*n4 - 32*n1*n4 + 
      16*d*n1*n4 + 256*n3*n4 - 120*d*n3*n4 - 16*n1*n3*n4 + 56*n3^2*n4 + 
      144*n4^2 - 68*d*n4^2 - 8*n1*n4^2 + 64*n3*n4^2 + 24*n4^3 - 64*n5 + 
      40*d*n5 - 4*d^2*n5 + 32*n1*n5 - 8*d*n1*n5 - 32*n3*n5 + 8*n3^2*n5 - 
      32*n4*n5 + 16*n3*n4*n5 + 8*n4^2*n5 - 24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 
      16*n3*n5^2 - 16*n4*n5^2)*j[p4a, -1 + n1, 0, n3, 1 + n4, 1 + n5, 0, 0, 
      1, 0, 1, 1, 0, 1, 1])/((3 - d + n4 + n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) - 
   (n4*(96 - 176*d + 98*d^2 - 17*d^3 + 16*d*n1 - 6*d^2*n1 + 192*n3 - 
      208*d*n3 + 52*d^2*n3 - 32*n1*n3 + 16*d*n1*n3 + 112*n3^2 - 52*d*n3^2 - 
      8*n1*n3^2 + 16*n3^3 + 224*n4 - 240*d*n4 + 60*d^2*n4 - 32*n1*n4 + 
      16*d*n1*n4 + 256*n3*n4 - 120*d*n3*n4 - 16*n1*n3*n4 + 56*n3^2*n4 + 
      144*n4^2 - 68*d*n4^2 - 8*n1*n4^2 + 64*n3*n4^2 + 24*n4^3 - 64*n5 + 
      40*d*n5 - 4*d^2*n5 + 32*n1*n5 - 8*d*n1*n5 - 32*n3*n5 + 8*n3^2*n5 - 
      32*n4*n5 + 16*n3*n4*n5 + 8*n4^2*n5 - 24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 
      16*n3*n5^2 - 16*n4*n5^2)*j[p4a, -1 + n1, 0, n3, 1 + n4, 1 + n5, 1, 0, 
      0, 0, 1, 1, 0, 1, 1])/((3 - d + n4 + n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   (n4*(288 - 448*d + 226*d^2 - 37*d^3 - 48*n1 + 44*d*n1 - 8*d^2*n1 + 
      4*d*n1^2 + 416*n3 - 408*d*n3 + 96*d^2*n3 - 32*n1*n3 + 4*d*n1*n3 - 
      8*n1^2*n3 + 176*n3^2 - 76*d*n3^2 + 8*n1*n3^2 + 16*n3^3 + 560*n4 - 
      548*d*n4 + 130*d^2*n4 - 48*n1*n4 + 8*d*n1*n4 - 8*n1^2*n4 + 480*n3*n4 - 
      212*d*n3*n4 + 16*n1*n3*n4 + 72*n3^2*n4 + 320*n4^2 - 144*d*n4^2 + 
      8*n1*n4^2 + 104*n3*n4^2 + 48*n4^3 - 32*n5 + 8*d*n5 + 4*d^2*n5 - 
      8*n1*n5 + 12*d*n1*n5 + 8*n1^2*n5 + 16*n3*n5 - 24*d*n3*n5 - 
      24*n1*n3*n5 + 24*n3^2*n5 + 24*n4*n5 - 28*d*n4*n5 - 32*n1*n4*n5 + 
      56*n3*n4*n5 + 32*n4^2*n5 - 24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 
      16*n3*n5^2 - 16*n4*n5^2)*j[p4a, -1 + n1, 0, n3, 1 + n4, 1 + n5, 1, 0, 
      1, 0, 1, 1, 0, 1, 0])/(2*(3 - d + n4 + n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   (2*n3*(96 - 176*d + 98*d^2 - 17*d^3 + 16*d*n1 - 6*d^2*n1 + 192*n3 - 
      208*d*n3 + 52*d^2*n3 - 32*n1*n3 + 16*d*n1*n3 + 112*n3^2 - 52*d*n3^2 - 
      8*n1*n3^2 + 16*n3^3 + 224*n4 - 240*d*n4 + 60*d^2*n4 - 32*n1*n4 + 
      16*d*n1*n4 + 256*n3*n4 - 120*d*n3*n4 - 16*n1*n3*n4 + 56*n3^2*n4 + 
      144*n4^2 - 68*d*n4^2 - 8*n1*n4^2 + 64*n3*n4^2 + 24*n4^3 - 64*n5 + 
      40*d*n5 - 4*d^2*n5 + 32*n1*n5 - 8*d*n1*n5 - 32*n3*n5 + 8*n3^2*n5 - 
      32*n4*n5 + 16*n3*n4*n5 + 8*n4^2*n5 - 24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 
      16*n3*n5^2 - 16*n4*n5^2)*j[p4a, -1 + n1, 0, 1 + n3, n4, 1 + n5, 1, 0, 
      0, 0, 1, 1, 0, 1, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   (n3*(96 - 272*d + 182*d^2 - 35*d^3 + 96*n1 - 44*d*n1 + 4*d^2*n1 + 
      4*d*n1^2 + 336*n3 - 412*d*n3 + 110*d^2*n3 - 24*n1*n3 + 8*d*n1*n3 - 
      8*n1^2*n3 + 240*n3^2 - 112*d*n3^2 + 32*n3^3 + 368*n4 - 456*d*n4 + 
      124*d^2*n4 + 8*n1*n4 - 4*d*n1*n4 - 8*n1^2*n4 + 520*n3*n4 - 
      252*d*n3*n4 + 8*n1*n3*n4 + 112*n3^2*n4 + 280*n4^2 - 140*d*n4^2 + 
      8*n1*n4^2 + 128*n3*n4^2 + 48*n4^3 - 256*n5 + 184*d*n5 - 28*d^2*n5 + 
      104*n1*n5 - 28*d*n1*n5 + 8*n1^2*n5 - 152*n3*n5 + 28*d*n3*n5 - 
      8*n1*n3*n5 + 16*n3^2*n5 - 176*n4*n5 + 40*d*n4*n5 + 16*n3*n4*n5 - 
      72*n5^2 + 36*d*n5^2 + 24*n1*n5^2 - 48*n3*n5^2 - 48*n4*n5^2)*
     j[p4a, -1 + n1, 0, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
      92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) - 
   (2*n3*(32 - 28*d + 6*d^2 - 12*n1 + 4*d*n1 + 28*n3 - 11*d*n3 - 2*n1*n3 + 
      4*n3^2 + 32*n4 - 13*d*n4 - 2*n1*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5)*j[p4a, -1 + n1, 0, 1 + n3, n4, 
      1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 0])/(-288 + 384*d - 170*d^2 + 25*d^3 - 
     80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   (2*(32 - 28*d + 6*d^2 - 12*n1 + 4*d*n1 + 28*n3 - 11*d*n3 - 2*n1*n3 + 
      4*n3^2 + 32*n4 - 13*d*n4 - 2*n1*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5)*j[p4a, n1, -1, n3, n4, 1 + n5, 0, 
      0, 1, 0, 2, 1, 0, 1, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
     92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   (4*(32 - 28*d + 6*d^2 - 12*n1 + 4*d*n1 + 28*n3 - 11*d*n3 - 2*n1*n3 + 
      4*n3^2 + 32*n4 - 13*d*n4 - 2*n1*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5)*j[p4a, n1, -1, n3, n4, 1 + n5, 1, 
      0, 0, 0, 1, 2, 0, 1, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
     92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-96 + 208*d - 126*d^2 + 23*d^3 - 96*n1 + 68*d*n1 - 12*d^2*n1 - 
      4*d*n1^2 - 208*n3 + 244*d*n3 - 64*d^2*n3 - 24*n1*n3 + 12*d*n1*n3 + 
      8*n1^2*n3 - 128*n3^2 + 60*d*n3^2 - 8*n1*n3^2 - 16*n3^3 - 240*n4 + 
      280*d*n4 - 74*d^2*n4 - 56*n1*n4 + 24*d*n1*n4 + 8*n1^2*n4 - 280*n3*n4 + 
      136*d*n3*n4 - 24*n1*n3*n4 - 56*n3^2*n4 - 152*n4^2 + 76*d*n4^2 - 
      16*n1*n4^2 - 64*n3*n4^2 - 24*n4^3 + 128*n5 - 88*d*n5 + 12*d^2*n5 - 
      56*n1*n5 + 20*d*n1*n5 - 8*n1^2*n5 + 72*n3*n5 - 12*d*n3*n5 - 8*n3^2*n5 + 
      80*n4*n5 - 16*d*n4*n5 - 8*n1*n4*n5 - 8*n3*n4*n5 + 40*n5^2 - 20*d*n5^2 - 
      8*n1*n5^2 + 24*n3*n5^2 + 24*n4*n5^2)*j[p4a, n1, -1, n3, n4, 1 + n5, 1, 
      0, 0, 0, 2, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5)*
     (-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 
      48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 
      60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 
      260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 16*n1^2*n4 - 
      128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 28*d*n4^2 - 
      48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 
      8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 16*n3^2*n5 - 
      88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 8*n4^2*n5 - 
      8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-96 + 80*d - 14*d^2 - d^3 + 96*n1 - 76*d*n1 + 16*d^2*n1 + 4*d*n1^2 - 
      48*n3 + 4*d*n3 + 6*d^2*n3 + 40*n1*n3 - 24*d*n1*n3 - 8*n1^2*n3 + 
      16*n3^2 - 8*d*n3^2 + 16*n1*n3^2 - 80*n4 + 24*d*n4 + 4*d^2*n4 + 
      72*n1*n4 - 36*d*n1*n4 - 8*n1^2*n4 + 8*n3*n4 - 12*d*n3*n4 + 
      40*n1*n3*n4 - 8*n4^2 - 4*d*n4^2 + 24*n1*n4^2 - 128*n5 + 104*d*n5 - 
      20*d^2*n5 + 40*n1*n5 - 12*d*n1*n5 + 8*n1^2*n5 - 88*n3*n5 + 28*d*n3*n5 - 
      8*n1*n3*n5 - 112*n4*n5 + 40*d*n4*n5 - 16*n3*n4*n5 - 16*n4^2*n5 - 
      24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 16*n3*n5^2 - 16*n4*n5^2)*
     j[p4a, n1, -1, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    ((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-576 + 864*d - 476*d^2 + 114*d^3 - 10*d^4 + 576*n1 - 656*d*n1 + 
      240*d^2*n1 - 28*d^3*n1 - 768*n3 + 832*d*n3 - 292*d^2*n3 + 33*d^3*n3 + 
      352*n1*n3 - 240*d*n1*n3 + 38*d^2*n1*n3 - 288*n3^2 + 192*d*n3^2 - 
      30*d^2*n3^2 + 48*n1*n3^2 - 12*d*n1*n3^2 - 32*n3^3 + 8*d*n3^3 - 960*n4 + 
      1040*d*n4 - 364*d^2*n4 + 41*d^3*n4 + 544*n1*n4 - 368*d*n1*n4 + 
      58*d^2*n1*n4 - 800*n3*n4 + 528*d*n3*n4 - 82*d^2*n3*n4 + 160*n1*n3*n4 - 
      40*d*n1*n3*n4 - 144*n3^2*n4 + 36*d*n3^2*n4 - 512*n4^2 + 336*d*n4^2 - 
      52*d^2*n4^2 + 112*n1*n4^2 - 28*d*n1*n4^2 - 192*n3*n4^2 + 48*d*n3*n4^2 - 
      80*n4^3 + 20*d*n4^3 - 576*n5 + 688*d*n5 - 268*d^2*n5 + 34*d^3*n5 + 
      416*n1*n5 - 352*d*n1*n5 + 72*d^2*n1*n5 - 640*n3*n5 + 496*d*n3*n5 - 
      94*d^2*n3*n5 + 224*n1*n3*n5 - 88*d*n1*n3*n5 - 192*n3^2*n5 + 
      72*d*n3^2*n5 + 24*n1*n3^2*n5 - 16*n3^3*n5 - 800*n4*n5 + 624*d*n4*n5 - 
      118*d^2*n4*n5 + 352*n1*n4*n5 - 136*d*n1*n4*n5 - 544*n3*n4*n5 + 
      200*d*n3*n4*n5 + 80*n1*n3*n4*n5 - 72*n3^2*n4*n5 - 352*n4^2*n5 + 
      128*d*n4^2*n5 + 56*n1*n4^2*n5 - 96*n3*n4^2*n5 - 40*n4^3*n5 - 176*n5^2 + 
      152*d*n5^2 - 32*d^2*n5^2 + 64*n1*n5^2 - 32*d*n1*n5^2 - 144*n3*n5^2 + 
      60*d*n3*n5^2 + 24*n1*n3*n5^2 - 24*n3^2*n5^2 - 176*n4*n5^2 + 
      76*d*n4*n5^2 + 40*n1*n4*n5^2 - 72*n3*n4*n5^2 - 48*n4^2*n5^2 - 16*n5^3 + 
      8*d*n5^3 - 8*n3*n5^3 - 8*n4*n5^3)*j[p4a, n1, -1, n3, n4, 1 + n5, 1, 0, 
      1, 0, 1, 1, 0, 1, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-96 + 144*d - 70*d^2 + 11*d^3 - 4*d*n1 + 2*d^2*n1 - 128*n3 + 124*d*n3 - 
      29*d^2*n3 + 8*n1*n3 - 6*d*n1*n3 - 56*n3^2 + 26*d*n3^2 + 4*n1*n3^2 - 
      8*n3^3 - 160*n4 + 152*d*n4 - 35*d^2*n4 + 8*n1*n4 - 6*d*n1*n4 - 
      136*n3*n4 + 62*d*n3*n4 + 8*n1*n3*n4 - 28*n3^2*n4 - 80*n4^2 + 
      36*d*n4^2 + 4*n1*n4^2 - 32*n3*n4^2 - 12*n4^3 + 8*d*n5 - 4*d^2*n5 - 
      8*n1*n5 + 4*d*n1*n5 - 8*n3*n5 + 8*d*n3*n5 - 4*n1*n3*n5 - 4*n3^2*n5 - 
      16*n4*n5 + 12*d*n4*n5 - 4*n1*n4*n5 - 12*n3*n4*n5 - 8*n4^2*n5 + 8*n5^2 - 
      4*d*n5^2 + 4*n3*n5^2 + 4*n4*n5^2)*j[p4a, n1, -1, n3, n4, 1 + n5, 1, 0, 
      1, 0, 2, 0, 0, 1, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-96 + 208*d - 126*d^2 + 23*d^3 - 96*n1 + 68*d*n1 - 12*d^2*n1 - 
      4*d*n1^2 - 208*n3 + 244*d*n3 - 64*d^2*n3 - 24*n1*n3 + 12*d*n1*n3 + 
      8*n1^2*n3 - 128*n3^2 + 60*d*n3^2 - 8*n1*n3^2 - 16*n3^3 - 240*n4 + 
      280*d*n4 - 74*d^2*n4 - 56*n1*n4 + 24*d*n1*n4 + 8*n1^2*n4 - 280*n3*n4 + 
      136*d*n3*n4 - 24*n1*n3*n4 - 56*n3^2*n4 - 152*n4^2 + 76*d*n4^2 - 
      16*n1*n4^2 - 64*n3*n4^2 - 24*n4^3 + 128*n5 - 88*d*n5 + 12*d^2*n5 - 
      56*n1*n5 + 20*d*n1*n5 - 8*n1^2*n5 + 72*n3*n5 - 12*d*n3*n5 - 8*n3^2*n5 + 
      80*n4*n5 - 16*d*n4*n5 - 8*n1*n4*n5 - 8*n3*n4*n5 + 40*n5^2 - 20*d*n5^2 - 
      8*n1*n5^2 + 24*n3*n5^2 + 24*n4*n5^2)*j[p4a, n1, -1, n3, n4, 1 + n5, 1, 
      0, 1, 0, 2, 1, 0, 0, 1])/(2*(-3 + d - n4 - n5)*
     (-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 
      48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 
      60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 
      260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 16*n1^2*n4 - 
      128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 28*d*n4^2 - 
      48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 
      8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 16*n3^2*n5 - 
      88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 8*n4^2*n5 - 
      8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-192 + 264*d - 120*d^2 + 18*d^3 + 72*n1 - 60*d*n1 + 12*d^2*n1 - 232*n3 + 
      206*d*n3 - 45*d^2*n3 + 36*n1*n3 - 14*d*n1*n3 - 80*n3^2 + 34*d*n3^2 + 
      4*n1*n3^2 - 8*n3^3 - 320*n4 + 286*d*n4 - 63*d^2*n4 + 60*n1*n4 - 
      22*d*n1*n4 - 236*n3*n4 + 100*d*n3*n4 + 12*n1*n3*n4 - 36*n3^2*n4 - 
      164*n4^2 + 70*d*n4^2 + 8*n1*n4^2 - 52*n3*n4^2 - 24*n4^3 - 48*n5 + 
      48*d*n5 - 12*d^2*n5 + 24*n1*n5 - 12*d*n1*n5 - 52*n3*n5 + 26*d*n3*n5 + 
      8*n1*n3*n5 - 12*n3^2*n5 - 68*n4*n5 + 34*d*n4*n5 + 16*n1*n4*n5 - 
      36*n3*n4*n5 - 24*n4^2*n5)*j[p4a, n1, -1, n3, n4, 1 + n5, 1, 0, 2, 0, 1, 
      0, 0, 1, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-192 + 264*d - 120*d^2 + 18*d^3 + 72*n1 - 60*d*n1 + 12*d^2*n1 - 232*n3 + 
      206*d*n3 - 45*d^2*n3 + 36*n1*n3 - 14*d*n1*n3 - 80*n3^2 + 34*d*n3^2 + 
      4*n1*n3^2 - 8*n3^3 - 320*n4 + 286*d*n4 - 63*d^2*n4 + 60*n1*n4 - 
      22*d*n1*n4 - 236*n3*n4 + 100*d*n3*n4 + 12*n1*n3*n4 - 36*n3^2*n4 - 
      164*n4^2 + 70*d*n4^2 + 8*n1*n4^2 - 52*n3*n4^2 - 24*n4^3 - 48*n5 + 
      48*d*n5 - 12*d^2*n5 + 24*n1*n5 - 12*d*n1*n5 - 52*n3*n5 + 26*d*n3*n5 + 
      8*n1*n3*n5 - 12*n3^2*n5 - 68*n4*n5 + 34*d*n4*n5 + 16*n1*n4*n5 - 
      36*n3*n4*n5 - 24*n4^2*n5)*j[p4a, n1, -1, n3, n4, 1 + n5, 1, 0, 2, 0, 1, 
      1, 0, 0, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-288 + 368*d - 154*d^2 + 21*d^3 + 96*n1 - 84*d*n1 + 20*d^2*n1 + 
      4*d*n1^2 - 304*n3 + 252*d*n3 - 52*d^2*n3 + 56*n1*n3 - 36*d*n1*n3 - 
      8*n1^2*n3 - 96*n3^2 + 44*d*n3^2 + 24*n1*n3^2 - 16*n3^3 - 400*n4 + 
      328*d*n4 - 66*d^2*n4 + 88*n1*n4 - 48*d*n1*n4 - 8*n1^2*n4 - 264*n3*n4 + 
      112*d*n3*n4 + 56*n1*n3*n4 - 56*n3^2*n4 - 168*n4^2 + 68*d*n4^2 + 
      32*n1*n4^2 - 64*n3*n4^2 - 24*n4^3 - 128*n5 + 120*d*n5 - 28*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 104*n3*n5 + 44*d*n3*n5 - 
      16*n1*n3*n5 - 8*n3^2*n5 - 144*n4*n5 + 64*d*n4*n5 - 8*n1*n4*n5 - 
      40*n3*n4*n5 - 32*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)*j[p4a, n1, -1, n3, n4, 1 + n5, 2, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
      92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-192 + 264*d - 120*d^2 + 18*d^3 + 72*n1 - 60*d*n1 + 12*d^2*n1 - 232*n3 + 
      206*d*n3 - 45*d^2*n3 + 36*n1*n3 - 14*d*n1*n3 - 80*n3^2 + 34*d*n3^2 + 
      4*n1*n3^2 - 8*n3^3 - 320*n4 + 286*d*n4 - 63*d^2*n4 + 60*n1*n4 - 
      22*d*n1*n4 - 236*n3*n4 + 100*d*n3*n4 + 12*n1*n3*n4 - 36*n3^2*n4 - 
      164*n4^2 + 70*d*n4^2 + 8*n1*n4^2 - 52*n3*n4^2 - 24*n4^3 - 48*n5 + 
      48*d*n5 - 12*d^2*n5 + 24*n1*n5 - 12*d*n1*n5 - 52*n3*n5 + 26*d*n3*n5 + 
      8*n1*n3*n5 - 12*n3^2*n5 - 68*n4*n5 + 34*d*n4*n5 + 16*n1*n4*n5 - 
      36*n3*n4*n5 - 24*n4^2*n5)*j[p4a, n1, -1, n3, n4, 1 + n5, 2, 0, 1, 0, 0, 
      1, 0, 1, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-96 + 80*d - 14*d^2 - d^3 + 96*n1 - 76*d*n1 + 16*d^2*n1 + 4*d*n1^2 - 
      48*n3 + 4*d*n3 + 6*d^2*n3 + 40*n1*n3 - 24*d*n1*n3 - 8*n1^2*n3 + 
      16*n3^2 - 8*d*n3^2 + 16*n1*n3^2 - 80*n4 + 24*d*n4 + 4*d^2*n4 + 
      72*n1*n4 - 36*d*n1*n4 - 8*n1^2*n4 + 8*n3*n4 - 12*d*n3*n4 + 
      40*n1*n3*n4 - 8*n4^2 - 4*d*n4^2 + 24*n1*n4^2 - 128*n5 + 104*d*n5 - 
      20*d^2*n5 + 40*n1*n5 - 12*d*n1*n5 + 8*n1^2*n5 - 88*n3*n5 + 28*d*n3*n5 - 
      8*n1*n3*n5 - 112*n4*n5 + 40*d*n4*n5 - 16*n3*n4*n5 - 16*n4^2*n5 - 
      24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 16*n3*n5^2 - 16*n4*n5^2)*
     j[p4a, n1, -1, n3, n4, 1 + n5, 2, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
      92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-96 + 80*d - 14*d^2 - d^3 + 96*n1 - 76*d*n1 + 16*d^2*n1 + 4*d*n1^2 - 
      48*n3 + 4*d*n3 + 6*d^2*n3 + 40*n1*n3 - 24*d*n1*n3 - 8*n1^2*n3 + 
      16*n3^2 - 8*d*n3^2 + 16*n1*n3^2 - 80*n4 + 24*d*n4 + 4*d^2*n4 + 
      72*n1*n4 - 36*d*n1*n4 - 8*n1^2*n4 + 8*n3*n4 - 12*d*n3*n4 + 
      40*n1*n3*n4 - 8*n4^2 - 4*d*n4^2 + 24*n1*n4^2 - 128*n5 + 104*d*n5 - 
      20*d^2*n5 + 40*n1*n5 - 12*d*n1*n5 + 8*n1^2*n5 - 88*n3*n5 + 28*d*n3*n5 - 
      8*n1*n3*n5 - 112*n4*n5 + 40*d*n4*n5 - 16*n3*n4*n5 - 16*n4^2*n5 - 
      24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 16*n3*n5^2 - 16*n4*n5^2)*
     j[p4a, n1, -1, n3, n4, 1 + n5, 2, 0, 1, 0, 1, 1, 0, 1, 0])/
    (2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
      92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   (2*(1 + n5)*(-48*d + 42*d^2 - 9*d^3 + 48*n1 - 30*d*n1 + 5*d^2*n1 + 
      2*d*n1^2 + 72*n3 - 102*d*n3 + 29*d^2*n3 + 4*n1*n3 - 4*d*n1*n3 - 
      4*n1^2*n3 + 64*n3^2 - 30*d*n3^2 + 4*n1*n3^2 + 8*n3^3 + 72*n4 - 
      108*d*n4 + 32*d^2*n4 + 20*n1*n4 - 10*d*n1*n4 - 4*n1^2*n4 + 132*n3*n4 - 
      66*d*n3*n4 + 12*n1*n3*n4 + 28*n3^2*n4 + 68*n4^2 - 36*d*n4^2 + 
      8*n1*n4^2 + 32*n3*n4^2 + 12*n4^3 - 96*n5 + 72*d*n5 - 12*d^2*n5 + 
      36*n1*n5 - 10*d*n1*n5 + 4*n1^2*n5 - 60*n3*n5 + 14*d*n3*n5 - 
      4*n1*n3*n5 + 4*n3^2*n5 - 72*n4*n5 + 20*d*n4*n5 - 4*n4^2*n5 - 24*n5^2 + 
      12*d*n5^2 + 8*n1*n5^2 - 16*n3*n5^2 - 16*n4*n5^2)*
     j[p4a, n1, -1, n3, n4, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((3 - d + n4 + n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) - 
   (2*(1 + n5)*(-48*d + 42*d^2 - 9*d^3 + 48*n1 - 30*d*n1 + 5*d^2*n1 + 
      2*d*n1^2 + 72*n3 - 102*d*n3 + 29*d^2*n3 + 4*n1*n3 - 4*d*n1*n3 - 
      4*n1^2*n3 + 64*n3^2 - 30*d*n3^2 + 4*n1*n3^2 + 8*n3^3 + 72*n4 - 
      108*d*n4 + 32*d^2*n4 + 20*n1*n4 - 10*d*n1*n4 - 4*n1^2*n4 + 132*n3*n4 - 
      66*d*n3*n4 + 12*n1*n3*n4 + 28*n3^2*n4 + 68*n4^2 - 36*d*n4^2 + 
      8*n1*n4^2 + 32*n3*n4^2 + 12*n4^3 - 96*n5 + 72*d*n5 - 12*d^2*n5 + 
      36*n1*n5 - 10*d*n1*n5 + 4*n1^2*n5 - 60*n3*n5 + 14*d*n3*n5 - 
      4*n1*n3*n5 + 4*n3^2*n5 - 72*n4*n5 + 20*d*n4*n5 - 4*n4^2*n5 - 24*n5^2 + 
      12*d*n5^2 + 8*n1*n5^2 - 16*n3*n5^2 - 16*n4*n5^2)*
     j[p4a, n1, -1, n3, n4, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 0])/
    ((3 - d + n4 + n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) - 
   (n4*(96 - 176*d + 98*d^2 - 17*d^3 + 16*d*n1 - 6*d^2*n1 + 192*n3 - 
      208*d*n3 + 52*d^2*n3 - 32*n1*n3 + 16*d*n1*n3 + 112*n3^2 - 52*d*n3^2 - 
      8*n1*n3^2 + 16*n3^3 + 224*n4 - 240*d*n4 + 60*d^2*n4 - 32*n1*n4 + 
      16*d*n1*n4 + 256*n3*n4 - 120*d*n3*n4 - 16*n1*n3*n4 + 56*n3^2*n4 + 
      144*n4^2 - 68*d*n4^2 - 8*n1*n4^2 + 64*n3*n4^2 + 24*n4^3 - 64*n5 + 
      40*d*n5 - 4*d^2*n5 + 32*n1*n5 - 8*d*n1*n5 - 32*n3*n5 + 8*n3^2*n5 - 
      32*n4*n5 + 16*n3*n4*n5 + 8*n4^2*n5 - 24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 
      16*n3*n5^2 - 16*n4*n5^2)*j[p4a, n1, -1, n3, 1 + n4, 1 + n5, 0, 0, 1, 0, 
      1, 1, 0, 1, 1])/((3 - d + n4 + n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   (n4*(96 - 176*d + 98*d^2 - 17*d^3 + 16*d*n1 - 6*d^2*n1 + 192*n3 - 
      208*d*n3 + 52*d^2*n3 - 32*n1*n3 + 16*d*n1*n3 + 112*n3^2 - 52*d*n3^2 - 
      8*n1*n3^2 + 16*n3^3 + 224*n4 - 240*d*n4 + 60*d^2*n4 - 32*n1*n4 + 
      16*d*n1*n4 + 256*n3*n4 - 120*d*n3*n4 - 16*n1*n3*n4 + 56*n3^2*n4 + 
      144*n4^2 - 68*d*n4^2 - 8*n1*n4^2 + 64*n3*n4^2 + 24*n4^3 - 64*n5 + 
      40*d*n5 - 4*d^2*n5 + 32*n1*n5 - 8*d*n1*n5 - 32*n3*n5 + 8*n3^2*n5 - 
      32*n4*n5 + 16*n3*n4*n5 + 8*n4^2*n5 - 24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 
      16*n3*n5^2 - 16*n4*n5^2)*j[p4a, n1, -1, n3, 1 + n4, 1 + n5, 1, 0, 0, 0, 
      1, 1, 0, 1, 1])/((3 - d + n4 + n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) - 
   (n4*(288 - 448*d + 226*d^2 - 37*d^3 - 48*n1 + 44*d*n1 - 8*d^2*n1 + 
      4*d*n1^2 + 416*n3 - 408*d*n3 + 96*d^2*n3 - 32*n1*n3 + 4*d*n1*n3 - 
      8*n1^2*n3 + 176*n3^2 - 76*d*n3^2 + 8*n1*n3^2 + 16*n3^3 + 560*n4 - 
      548*d*n4 + 130*d^2*n4 - 48*n1*n4 + 8*d*n1*n4 - 8*n1^2*n4 + 480*n3*n4 - 
      212*d*n3*n4 + 16*n1*n3*n4 + 72*n3^2*n4 + 320*n4^2 - 144*d*n4^2 + 
      8*n1*n4^2 + 104*n3*n4^2 + 48*n4^3 - 32*n5 + 8*d*n5 + 4*d^2*n5 - 
      8*n1*n5 + 12*d*n1*n5 + 8*n1^2*n5 + 16*n3*n5 - 24*d*n3*n5 - 
      24*n1*n3*n5 + 24*n3^2*n5 + 24*n4*n5 - 28*d*n4*n5 - 32*n1*n4*n5 + 
      56*n3*n4*n5 + 32*n4^2*n5 - 24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 
      16*n3*n5^2 - 16*n4*n5^2)*j[p4a, n1, -1, n3, 1 + n4, 1 + n5, 1, 0, 1, 0, 
      1, 1, 0, 1, 0])/(2*(3 - d + n4 + n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) - 
   (n3*(96 - 176*d + 98*d^2 - 17*d^3 + 16*d*n1 - 6*d^2*n1 + 192*n3 - 
      208*d*n3 + 52*d^2*n3 - 32*n1*n3 + 16*d*n1*n3 + 112*n3^2 - 52*d*n3^2 - 
      8*n1*n3^2 + 16*n3^3 + 224*n4 - 240*d*n4 + 60*d^2*n4 - 32*n1*n4 + 
      16*d*n1*n4 + 256*n3*n4 - 120*d*n3*n4 - 16*n1*n3*n4 + 56*n3^2*n4 + 
      144*n4^2 - 68*d*n4^2 - 8*n1*n4^2 + 64*n3*n4^2 + 24*n4^3 - 64*n5 + 
      40*d*n5 - 4*d^2*n5 + 32*n1*n5 - 8*d*n1*n5 - 32*n3*n5 + 8*n3^2*n5 - 
      32*n4*n5 + 16*n3*n4*n5 + 8*n4^2*n5 - 24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 
      16*n3*n5^2 - 16*n4*n5^2)*j[p4a, n1, -1, 1 + n3, n4, 1 + n5, 1, 0, 0, 0, 
      1, 1, 0, 1, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   (n3*(96 - 176*d + 98*d^2 - 17*d^3 + 16*d*n1 - 6*d^2*n1 + 192*n3 - 
      208*d*n3 + 52*d^2*n3 - 32*n1*n3 + 16*d*n1*n3 + 112*n3^2 - 52*d*n3^2 - 
      8*n1*n3^2 + 16*n3^3 + 224*n4 - 240*d*n4 + 60*d^2*n4 - 32*n1*n4 + 
      16*d*n1*n4 + 256*n3*n4 - 120*d*n3*n4 - 16*n1*n3*n4 + 56*n3^2*n4 + 
      144*n4^2 - 68*d*n4^2 - 8*n1*n4^2 + 64*n3*n4^2 + 24*n4^3 - 64*n5 + 
      40*d*n5 - 4*d^2*n5 + 32*n1*n5 - 8*d*n1*n5 - 32*n3*n5 + 8*n3^2*n5 - 
      32*n4*n5 + 16*n3*n4*n5 + 8*n4^2*n5 - 24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 
      16*n3*n5^2 - 16*n4*n5^2)*j[p4a, n1, -1, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 
      0, 1, 0, 1, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) - 
   (n3*(96 - 176*d + 98*d^2 - 17*d^3 + 16*d*n1 - 6*d^2*n1 + 192*n3 - 
      208*d*n3 + 52*d^2*n3 - 32*n1*n3 + 16*d*n1*n3 + 112*n3^2 - 52*d*n3^2 - 
      8*n1*n3^2 + 16*n3^3 + 224*n4 - 240*d*n4 + 60*d^2*n4 - 32*n1*n4 + 
      16*d*n1*n4 + 256*n3*n4 - 120*d*n3*n4 - 16*n1*n3*n4 + 56*n3^2*n4 + 
      144*n4^2 - 68*d*n4^2 - 8*n1*n4^2 + 64*n3*n4^2 + 24*n4^3 - 64*n5 + 
      40*d*n5 - 4*d^2*n5 + 32*n1*n5 - 8*d*n1*n5 - 32*n3*n5 + 8*n3^2*n5 - 
      32*n4*n5 + 16*n3*n4*n5 + 8*n4^2*n5 - 24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 
      16*n3*n5^2 - 16*n4*n5^2)*j[p4a, n1, -1, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 
      1, 0, 0, 1, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) - 
   (n3*(288 - 432*d + 210*d^2 - 33*d^3 - 96*n1 + 108*d*n1 - 28*d^2*n1 - 
      4*d*n1^2 + 432*n3 - 420*d*n3 + 98*d^2*n3 - 104*n1*n3 + 56*d*n1*n3 + 
      8*n1^2*n3 + 208*n3^2 - 96*d*n3^2 - 32*n1*n3^2 + 32*n3^3 + 528*n4 - 
      504*d*n4 + 116*d^2*n4 - 136*n1*n4 + 68*d*n1*n4 + 8*n1^2*n4 + 
      504*n3*n4 - 228*d*n3*n4 - 72*n1*n3*n4 + 112*n3^2*n4 + 296*n4^2 - 
      132*d*n4^2 - 40*n1*n4^2 + 128*n3*n4^2 + 48*n4^3 - 24*d*n5 + 12*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 - 8*n1^2*n5 + 24*n3*n5 - 28*d*n3*n5 + 8*n1*n3*n5 + 
      16*n3^2*n5 + 48*n4*n5 - 40*d*n4*n5 + 48*n3*n4*n5 + 32*n4^2*n5 - 
      24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 16*n3*n5^2 - 16*n4*n5^2)*
     j[p4a, n1, -1, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
      92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) - 
   (2*n3*(32 - 28*d + 6*d^2 - 12*n1 + 4*d*n1 + 28*n3 - 11*d*n3 - 2*n1*n3 + 
      4*n3^2 + 32*n4 - 13*d*n4 - 2*n1*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5)*j[p4a, n1, -1, 1 + n3, n4, 
      1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 0])/(-288 + 384*d - 170*d^2 + 25*d^3 - 
     80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   (2*(32 - 28*d + 6*d^2 - 12*n1 + 4*d*n1 + 28*n3 - 11*d*n3 - 2*n1*n3 + 
      4*n3^2 + 32*n4 - 13*d*n4 - 2*n1*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5)*j[p4a, n1, 0, -1 + n3, n4, 
      1 + n5, 0, 0, 1, 0, 2, 1, 0, 1, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 
     80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-96 + 80*d - 14*d^2 - d^3 + 96*n1 - 76*d*n1 + 16*d^2*n1 + 4*d*n1^2 - 
      48*n3 + 4*d*n3 + 6*d^2*n3 + 40*n1*n3 - 24*d*n1*n3 - 8*n1^2*n3 + 
      16*n3^2 - 8*d*n3^2 + 16*n1*n3^2 - 80*n4 + 24*d*n4 + 4*d^2*n4 + 
      72*n1*n4 - 36*d*n1*n4 - 8*n1^2*n4 + 8*n3*n4 - 12*d*n3*n4 + 
      40*n1*n3*n4 - 8*n4^2 - 4*d*n4^2 + 24*n1*n4^2 - 128*n5 + 104*d*n5 - 
      20*d^2*n5 + 40*n1*n5 - 12*d*n1*n5 + 8*n1^2*n5 - 88*n3*n5 + 28*d*n3*n5 - 
      8*n1*n3*n5 - 112*n4*n5 + 40*d*n4*n5 - 16*n3*n4*n5 - 16*n4^2*n5 - 
      24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 16*n3*n5^2 - 16*n4*n5^2)*
     j[p4a, n1, 0, -1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    ((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) - 
   (2*(96 - 192*d + 134*d^2 - 39*d^3 + 4*d^4 + 144*n1 - 172*d*n1 + 
      66*d^2*n1 - 8*d^3*n1 + 80*n3 - 112*d*n3 + 47*d^2*n3 - 6*d^3*n3 + 
      104*n1*n3 - 74*d*n1*n3 + 12*d^2*n1*n3 + 16*n3^2 - 12*d*n3^2 + 
      2*d^2*n3^2 + 16*n1*n3^2 - 4*d*n1*n3^2 + 160*n4 - 212*d*n4 + 87*d^2*n4 - 
      11*d^3*n4 + 152*n1*n4 - 110*d*n1*n4 + 18*d^2*n1*n4 + 72*n3*n4 - 
      54*d*n3*n4 + 9*d^2*n3*n4 + 56*n1*n3*n4 - 14*d*n1*n3*n4 + 72*n4^2 - 
      54*d*n4^2 + 9*d^2*n4^2 + 40*n1*n4^2 - 10*d*n1*n4^2 + 8*n3*n4^2 - 
      2*d*n3*n4^2 + 8*n4^3 - 2*d*n4^3 - 40*d*n5 + 34*d^2*n5 - 7*d^3*n5 + 
      88*n1*n5 - 80*d*n1*n5 + 18*d^2*n1*n5 + 16*n3*n5 - 36*d*n3*n5 + 
      11*d^2*n3*n5 + 60*n1*n3*n5 - 26*d*n1*n3*n5 + 8*n3^2*n5 - 4*d*n3^2*n5 + 
      8*n1*n3^2*n5 + 56*n4*n5 - 76*d*n4*n5 + 21*d^2*n4*n5 + 84*n1*n4*n5 - 
      38*d*n1*n4*n5 + 36*n3*n4*n5 - 18*d*n3*n4*n5 + 28*n1*n3*n4*n5 + 
      36*n4^2*n5 - 18*d*n4^2*n5 + 20*n1*n4^2*n5 + 4*n3*n4^2*n5 + 4*n4^3*n5 - 
      40*n5^2 + 28*d*n5^2 - 4*d^2*n5^2 + 8*n1*n5^2 - 4*d*n1*n5^2 - 
      20*n3*n5^2 + 4*d*n3*n5^2 + 4*n1*n3*n5^2 - 20*n4*n5^2 + 4*d*n4*n5^2 + 
      4*n1*n4*n5^2 - 8*n5^3 + 4*d*n5^3 - 4*n3*n5^3 - 4*n4*n5^3)*
     j[p4a, n1, 0, -1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-96 + 144*d - 70*d^2 + 11*d^3 - 4*d*n1 + 2*d^2*n1 - 128*n3 + 124*d*n3 - 
      29*d^2*n3 + 8*n1*n3 - 6*d*n1*n3 - 56*n3^2 + 26*d*n3^2 + 4*n1*n3^2 - 
      8*n3^3 - 160*n4 + 152*d*n4 - 35*d^2*n4 + 8*n1*n4 - 6*d*n1*n4 - 
      136*n3*n4 + 62*d*n3*n4 + 8*n1*n3*n4 - 28*n3^2*n4 - 80*n4^2 + 
      36*d*n4^2 + 4*n1*n4^2 - 32*n3*n4^2 - 12*n4^3 + 8*d*n5 - 4*d^2*n5 - 
      8*n1*n5 + 4*d*n1*n5 - 8*n3*n5 + 8*d*n3*n5 - 4*n1*n3*n5 - 4*n3^2*n5 - 
      16*n4*n5 + 12*d*n4*n5 - 4*n1*n4*n5 - 12*n3*n4*n5 - 8*n4^2*n5 + 8*n5^2 - 
      4*d*n5^2 + 4*n3*n5^2 + 4*n4*n5^2)*j[p4a, n1, 0, -1 + n3, n4, 1 + n5, 1, 
      0, 1, 0, 2, 0, 0, 1, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-96 + 144*d - 70*d^2 + 11*d^3 - 4*d*n1 + 2*d^2*n1 - 128*n3 + 124*d*n3 - 
      29*d^2*n3 + 8*n1*n3 - 6*d*n1*n3 - 56*n3^2 + 26*d*n3^2 + 4*n1*n3^2 - 
      8*n3^3 - 160*n4 + 152*d*n4 - 35*d^2*n4 + 8*n1*n4 - 6*d*n1*n4 - 
      136*n3*n4 + 62*d*n3*n4 + 8*n1*n3*n4 - 28*n3^2*n4 - 80*n4^2 + 
      36*d*n4^2 + 4*n1*n4^2 - 32*n3*n4^2 - 12*n4^3 + 8*d*n5 - 4*d^2*n5 - 
      8*n1*n5 + 4*d*n1*n5 - 8*n3*n5 + 8*d*n3*n5 - 4*n1*n3*n5 - 4*n3^2*n5 - 
      16*n4*n5 + 12*d*n4*n5 - 4*n1*n4*n5 - 12*n3*n4*n5 - 8*n4^2*n5 + 8*n5^2 - 
      4*d*n5^2 + 4*n3*n5^2 + 4*n4*n5^2)*j[p4a, n1, 0, -1 + n3, n4, 1 + n5, 2, 
      0, 0, 0, 1, 1, 0, 1, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-288 + 448*d - 226*d^2 + 37*d^3 + 48*n1 - 44*d*n1 + 8*d^2*n1 - 
      4*d*n1^2 - 416*n3 + 408*d*n3 - 96*d^2*n3 + 32*n1*n3 - 4*d*n1*n3 + 
      8*n1^2*n3 - 176*n3^2 + 76*d*n3^2 - 8*n1*n3^2 - 16*n3^3 - 560*n4 + 
      548*d*n4 - 130*d^2*n4 + 48*n1*n4 - 8*d*n1*n4 + 8*n1^2*n4 - 480*n3*n4 + 
      212*d*n3*n4 - 16*n1*n3*n4 - 72*n3^2*n4 - 320*n4^2 + 144*d*n4^2 - 
      8*n1*n4^2 - 104*n3*n4^2 - 48*n4^3 + 32*n5 - 8*d*n5 - 4*d^2*n5 + 
      8*n1*n5 - 12*d*n1*n5 - 8*n1^2*n5 - 16*n3*n5 + 24*d*n3*n5 + 
      24*n1*n3*n5 - 24*n3^2*n5 - 24*n4*n5 + 28*d*n4*n5 + 32*n1*n4*n5 - 
      56*n3*n4*n5 - 32*n4^2*n5 + 24*n5^2 - 12*d*n5^2 - 8*n1*n5^2 + 
      16*n3*n5^2 + 16*n4*n5^2)*j[p4a, n1, 0, -1 + n3, n4, 1 + n5, 2, 0, 1, 0, 
      0, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   (2*n4*(192 - 280*d + 134*d^2 - 21*d^3 - 24*n1 + 18*d*n1 - 3*d^2*n1 + 
      2*d*n1^2 + 240*n3 - 224*d*n3 + 51*d^2*n3 - 8*n1*n3 - 4*n1^2*n3 + 
      88*n3^2 - 38*d*n3^2 + 4*n1*n3^2 + 8*n3^3 + 328*n4 - 306*d*n4 + 
      70*d^2*n4 - 16*n1*n4 + 2*d*n1*n4 - 4*n1^2*n4 + 248*n3*n4 - 
      108*d*n3*n4 + 8*n1*n3*n4 + 36*n3^2*n4 + 168*n4^2 - 74*d*n4^2 + 
      4*n1*n4^2 + 52*n3*n4^2 + 24*n4^3 + 16*n5 - 24*d*n5 + 8*d^2*n5 - 
      12*n1*n5 + 6*d*n1*n5 + 4*n1^2*n5 + 32*n3*n5 - 20*d*n3*n5 - 8*n1*n3*n5 + 
      12*n3^2*n5 + 44*n4*n5 - 26*d*n4*n5 - 12*n1*n4*n5 + 32*n3*n4*n5 + 
      20*n4^2*n5 - 8*n5^2 + 4*d*n5^2 - 4*n3*n5^2 - 4*n4*n5^2)*
     j[p4a, n1, 0, -1 + n3, 1 + n4, 1 + n5, 0, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((3 - d + n4 + n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) - 
   (n4*(480 - 672*d + 310*d^2 - 47*d^3 - 48*n1 + 28*d*n1 - 4*d^2*n1 + 
      4*d*n1^2 + 544*n3 - 488*d*n3 + 108*d^2*n3 - 4*d*n1*n3 - 8*n1^2*n3 + 
      176*n3^2 - 76*d*n3^2 + 8*n1*n3^2 + 16*n3^3 + 752*n4 - 676*d*n4 + 
      150*d^2*n4 - 16*n1*n4 - 8*n1^2*n4 + 512*n3*n4 - 220*d*n3*n4 + 
      16*n1*n3*n4 + 72*n3^2*n4 + 352*n4^2 - 152*d*n4^2 + 8*n1*n4^2 + 
      104*n3*n4^2 + 48*n4^3 + 96*n5 - 104*d*n5 + 28*d^2*n5 - 40*n1*n5 + 
      12*d*n1*n5 + 8*n1^2*n5 + 112*n3*n5 - 56*d*n3*n5 - 8*n1*n3*n5 + 
      24*n3^2*n5 + 152*n4*n5 - 76*d*n4*n5 - 16*n1*n4*n5 + 72*n3*n4*n5 + 
      48*n4^2*n5 - 8*n5^2 + 4*d*n5^2 - 8*n1*n5^2)*j[p4a, n1, 0, -1 + n3, 
      1 + n4, 1 + n5, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   (n4*(288 - 448*d + 226*d^2 - 37*d^3 - 48*n1 + 44*d*n1 - 8*d^2*n1 + 
      4*d*n1^2 + 416*n3 - 408*d*n3 + 96*d^2*n3 - 32*n1*n3 + 4*d*n1*n3 - 
      8*n1^2*n3 + 176*n3^2 - 76*d*n3^2 + 8*n1*n3^2 + 16*n3^3 + 560*n4 - 
      548*d*n4 + 130*d^2*n4 - 48*n1*n4 + 8*d*n1*n4 - 8*n1^2*n4 + 480*n3*n4 - 
      212*d*n3*n4 + 16*n1*n3*n4 + 72*n3^2*n4 + 320*n4^2 - 144*d*n4^2 + 
      8*n1*n4^2 + 104*n3*n4^2 + 48*n4^3 - 32*n5 + 8*d*n5 + 4*d^2*n5 - 
      8*n1*n5 + 12*d*n1*n5 + 8*n1^2*n5 + 16*n3*n5 - 24*d*n3*n5 - 
      24*n1*n3*n5 + 24*n3^2*n5 + 24*n4*n5 - 28*d*n4*n5 - 32*n1*n4*n5 + 
      56*n3*n4*n5 + 32*n4^2*n5 - 24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 
      16*n3*n5^2 - 16*n4*n5^2)*j[p4a, n1, 0, -1 + n3, 1 + n4, 1 + n5, 1, 0, 
      1, 0, 0, 1, 0, 1, 1])/(2*(3 - d + n4 + n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) - 
   (n4*(288 - 448*d + 226*d^2 - 37*d^3 - 48*n1 + 44*d*n1 - 8*d^2*n1 + 
      4*d*n1^2 + 416*n3 - 408*d*n3 + 96*d^2*n3 - 32*n1*n3 + 4*d*n1*n3 - 
      8*n1^2*n3 + 176*n3^2 - 76*d*n3^2 + 8*n1*n3^2 + 16*n3^3 + 560*n4 - 
      548*d*n4 + 130*d^2*n4 - 48*n1*n4 + 8*d*n1*n4 - 8*n1^2*n4 + 480*n3*n4 - 
      212*d*n3*n4 + 16*n1*n3*n4 + 72*n3^2*n4 + 320*n4^2 - 144*d*n4^2 + 
      8*n1*n4^2 + 104*n3*n4^2 + 48*n4^3 - 32*n5 + 8*d*n5 + 4*d^2*n5 - 
      8*n1*n5 + 12*d*n1*n5 + 8*n1^2*n5 + 16*n3*n5 - 24*d*n3*n5 - 
      24*n1*n3*n5 + 24*n3^2*n5 + 24*n4*n5 - 28*d*n4*n5 - 32*n1*n4*n5 + 
      56*n3*n4*n5 + 32*n4^2*n5 - 24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 
      16*n3*n5^2 - 16*n4*n5^2)*j[p4a, n1, 0, -1 + n3, 1 + n4, 1 + n5, 1, 0, 
      1, 0, 1, 0, 0, 1, 1])/(2*(3 - d + n4 + n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   (4*(32 - 28*d + 6*d^2 - 12*n1 + 4*d*n1 + 28*n3 - 11*d*n3 - 2*n1*n3 + 
      4*n3^2 + 32*n4 - 13*d*n4 - 2*n1*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5)*j[p4a, n1, 0, n3, -1 + n4, 
      1 + n5, 1, 0, 0, 0, 1, 2, 0, 1, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 
     80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) - 
   (2*(-32 + 32*d - 10*d^2 + d^3 + 48*n1 - 36*d*n1 + 6*d^2*n1 - 48*n3 + 
      32*d*n3 - 5*d^2*n3 + 24*n1*n3 - 6*d*n1*n3 - 16*n3^2 + 4*d*n3^2 - 
      32*n4 + 20*d*n4 - 3*d^2*n4 + 24*n1*n4 - 6*d*n1*n4 - 24*n3*n4 + 
      6*d*n3*n4 - 8*n4^2 + 2*d*n4^2 - 32*n5 + 24*d*n5 - 4*d^2*n5 + 24*n1*n5 - 
      12*d*n1*n5 - 32*n3*n5 + 12*d*n3*n5 + 12*n1*n3*n5 - 8*n3^2*n5 - 
      24*n4*n5 + 8*d*n4*n5 + 12*n1*n4*n5 - 12*n3*n4*n5 - 4*n4^2*n5 - 8*n5^2 + 
      4*d*n5^2 - 4*n3*n5^2 - 4*n4*n5^2)*j[p4a, n1, 0, n3, -1 + n4, 1 + n5, 1, 
      0, 1, 0, 1, 1, 0, 1, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
     92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   (2*(32 - 28*d + 6*d^2 - 12*n1 + 4*d*n1 + 28*n3 - 11*d*n3 - 2*n1*n3 + 
      4*n3^2 + 32*n4 - 13*d*n4 - 2*n1*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5)*j[p4a, n1, 0, n3, -1 + n4, 
      1 + n5, 1, 0, 2, 0, 1, 0, 0, 1, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 
     80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   (2*(32 - 28*d + 6*d^2 - 12*n1 + 4*d*n1 + 28*n3 - 11*d*n3 - 2*n1*n3 + 
      4*n3^2 + 32*n4 - 13*d*n4 - 2*n1*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5)*j[p4a, n1, 0, n3, -1 + n4, 
      1 + n5, 1, 0, 2, 0, 1, 1, 0, 0, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 
     80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((96 - 144*d + 70*d^2 - 11*d^3 + 4*d*n1 - 2*d^2*n1 + 128*n3 - 124*d*n3 + 
      29*d^2*n3 - 8*n1*n3 + 6*d*n1*n3 + 56*n3^2 - 26*d*n3^2 - 4*n1*n3^2 + 
      8*n3^3 + 160*n4 - 152*d*n4 + 35*d^2*n4 - 8*n1*n4 + 6*d*n1*n4 + 
      136*n3*n4 - 62*d*n3*n4 - 8*n1*n3*n4 + 28*n3^2*n4 + 80*n4^2 - 
      36*d*n4^2 - 4*n1*n4^2 + 32*n3*n4^2 + 12*n4^3 - 8*d*n5 + 4*d^2*n5 + 
      8*n1*n5 - 4*d*n1*n5 + 8*n3*n5 - 8*d*n3*n5 + 4*n1*n3*n5 + 4*n3^2*n5 + 
      16*n4*n5 - 12*d*n4*n5 + 4*n1*n4*n5 + 12*n3*n4*n5 + 8*n4^2*n5 - 8*n5^2 + 
      4*d*n5^2 - 4*n3*n5^2 - 4*n4*n5^2)*j[p4a, n1, 0, n3, -1 + n4, 1 + n5, 2, 
      0, 0, 0, 1, 1, 0, 1, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-96 + 144*d - 70*d^2 + 11*d^3 - 4*d*n1 + 2*d^2*n1 - 128*n3 + 124*d*n3 - 
      29*d^2*n3 + 8*n1*n3 - 6*d*n1*n3 - 56*n3^2 + 26*d*n3^2 + 4*n1*n3^2 - 
      8*n3^3 - 160*n4 + 152*d*n4 - 35*d^2*n4 + 8*n1*n4 - 6*d*n1*n4 - 
      136*n3*n4 + 62*d*n3*n4 + 8*n1*n3*n4 - 28*n3^2*n4 - 80*n4^2 + 
      36*d*n4^2 + 4*n1*n4^2 - 32*n3*n4^2 - 12*n4^3 + 8*d*n5 - 4*d^2*n5 - 
      8*n1*n5 + 4*d*n1*n5 - 8*n3*n5 + 8*d*n3*n5 - 4*n1*n3*n5 - 4*n3^2*n5 - 
      16*n4*n5 + 12*d*n4*n5 - 4*n1*n4*n5 - 12*n3*n4*n5 - 8*n4^2*n5 + 8*n5^2 - 
      4*d*n5^2 + 4*n3*n5^2 + 4*n4*n5^2)*j[p4a, n1, 0, n3, -1 + n4, 1 + n5, 2, 
      0, 1, 0, 0, 1, 0, 1, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96 - 144*d + 70*d^2 - 11*d^3 + 4*d*n1 - 2*d^2*n1 + 128*n3 - 124*d*n3 + 
      29*d^2*n3 - 8*n1*n3 + 6*d*n1*n3 + 56*n3^2 - 26*d*n3^2 - 4*n1*n3^2 + 
      8*n3^3 + 160*n4 - 152*d*n4 + 35*d^2*n4 - 8*n1*n4 + 6*d*n1*n4 + 
      136*n3*n4 - 62*d*n3*n4 - 8*n1*n3*n4 + 28*n3^2*n4 + 80*n4^2 - 
      36*d*n4^2 - 4*n1*n4^2 + 32*n3*n4^2 + 12*n4^3 - 8*d*n5 + 4*d^2*n5 + 
      8*n1*n5 - 4*d*n1*n5 + 8*n3*n5 - 8*d*n3*n5 + 4*n1*n3*n5 + 4*n3^2*n5 + 
      16*n4*n5 - 12*d*n4*n5 + 4*n1*n4*n5 + 12*n3*n4*n5 + 8*n4^2*n5 - 8*n5^2 + 
      4*d*n5^2 - 4*n3*n5^2 - 4*n4*n5^2)*j[p4a, n1, 0, n3, -1 + n4, 1 + n5, 2, 
      0, 1, 0, 1, 1, 0, 0, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96 - 144*d + 70*d^2 - 11*d^3 + 4*d*n1 - 2*d^2*n1 + 128*n3 - 124*d*n3 + 
      29*d^2*n3 - 8*n1*n3 + 6*d*n1*n3 + 56*n3^2 - 26*d*n3^2 - 4*n1*n3^2 + 
      8*n3^3 + 160*n4 - 152*d*n4 + 35*d^2*n4 - 8*n1*n4 + 6*d*n1*n4 + 
      136*n3*n4 - 62*d*n3*n4 - 8*n1*n3*n4 + 28*n3^2*n4 + 80*n4^2 - 
      36*d*n4^2 - 4*n1*n4^2 + 32*n3*n4^2 + 12*n4^3 - 8*d*n5 + 4*d^2*n5 + 
      8*n1*n5 - 4*d*n1*n5 + 8*n3*n5 - 8*d*n3*n5 + 4*n1*n3*n5 + 4*n3^2*n5 + 
      16*n4*n5 - 12*d*n4*n5 + 4*n1*n4*n5 + 12*n3*n4*n5 + 8*n4^2*n5 - 8*n5^2 + 
      4*d*n5^2 - 4*n3*n5^2 - 4*n4*n5^2)*j[p4a, n1, 0, n3, -1 + n4, 1 + n5, 2, 
      0, 1, 0, 1, 1, 0, 1, 0])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((1 + n5)*(96 - 144*d + 70*d^2 - 11*d^3 + 4*d*n1 - 2*d^2*n1 + 128*n3 - 
      124*d*n3 + 29*d^2*n3 - 8*n1*n3 + 6*d*n1*n3 + 56*n3^2 - 26*d*n3^2 - 
      4*n1*n3^2 + 8*n3^3 + 160*n4 - 152*d*n4 + 35*d^2*n4 - 8*n1*n4 + 
      6*d*n1*n4 + 136*n3*n4 - 62*d*n3*n4 - 8*n1*n3*n4 + 28*n3^2*n4 + 
      80*n4^2 - 36*d*n4^2 - 4*n1*n4^2 + 32*n3*n4^2 + 12*n4^3 - 8*d*n5 + 
      4*d^2*n5 + 8*n1*n5 - 4*d*n1*n5 + 8*n3*n5 - 8*d*n3*n5 + 4*n1*n3*n5 + 
      4*n3^2*n5 + 16*n4*n5 - 12*d*n4*n5 + 4*n1*n4*n5 + 12*n3*n4*n5 + 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 - 4*n3*n5^2 - 4*n4*n5^2)*
     j[p4a, n1, 0, n3, -1 + n4, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((3 - d + n4 + n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) - 
   ((1 + n5)*(96 - 144*d + 70*d^2 - 11*d^3 + 4*d*n1 - 2*d^2*n1 + 128*n3 - 
      124*d*n3 + 29*d^2*n3 - 8*n1*n3 + 6*d*n1*n3 + 56*n3^2 - 26*d*n3^2 - 
      4*n1*n3^2 + 8*n3^3 + 160*n4 - 152*d*n4 + 35*d^2*n4 - 8*n1*n4 + 
      6*d*n1*n4 + 136*n3*n4 - 62*d*n3*n4 - 8*n1*n3*n4 + 28*n3^2*n4 + 
      80*n4^2 - 36*d*n4^2 - 4*n1*n4^2 + 32*n3*n4^2 + 12*n4^3 - 8*d*n5 + 
      4*d^2*n5 + 8*n1*n5 - 4*d*n1*n5 + 8*n3*n5 - 8*d*n3*n5 + 4*n1*n3*n5 + 
      4*n3^2*n5 + 16*n4*n5 - 12*d*n4*n5 + 4*n1*n4*n5 + 12*n3*n4*n5 + 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 - 4*n3*n5^2 - 4*n4*n5^2)*
     j[p4a, n1, 0, n3, -1 + n4, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 0])/
    ((3 - d + n4 + n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96 - 80*d + 14*d^2 + d^3 - 96*n1 + 76*d*n1 - 16*d^2*n1 - 4*d*n1^2 + 
      48*n3 - 4*d*n3 - 6*d^2*n3 - 40*n1*n3 + 24*d*n1*n3 + 8*n1^2*n3 - 
      16*n3^2 + 8*d*n3^2 - 16*n1*n3^2 + 80*n4 - 24*d*n4 - 4*d^2*n4 - 
      72*n1*n4 + 36*d*n1*n4 + 8*n1^2*n4 - 8*n3*n4 + 12*d*n3*n4 - 
      40*n1*n3*n4 + 8*n4^2 + 4*d*n4^2 - 24*n1*n4^2 + 128*n5 - 104*d*n5 + 
      20*d^2*n5 - 40*n1*n5 + 12*d*n1*n5 - 8*n1^2*n5 + 88*n3*n5 - 28*d*n3*n5 + 
      8*n1*n3*n5 + 112*n4*n5 - 40*d*n4*n5 + 16*n3*n4*n5 + 16*n4^2*n5 + 
      24*n5^2 - 12*d*n5^2 - 8*n1*n5^2 + 16*n3*n5^2 + 16*n4*n5^2)*
     j[p4a, n1, 0, n3, n4, n5, 0, 0, 1, 0, 1, 1, 0, 1, 2])/
    ((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96 - 80*d + 14*d^2 + d^3 - 96*n1 + 76*d*n1 - 16*d^2*n1 - 4*d*n1^2 + 
      48*n3 - 4*d*n3 - 6*d^2*n3 - 40*n1*n3 + 24*d*n1*n3 + 8*n1^2*n3 - 
      16*n3^2 + 8*d*n3^2 - 16*n1*n3^2 + 80*n4 - 24*d*n4 - 4*d^2*n4 - 
      72*n1*n4 + 36*d*n1*n4 + 8*n1^2*n4 - 8*n3*n4 + 12*d*n3*n4 - 
      40*n1*n3*n4 + 8*n4^2 + 4*d*n4^2 - 24*n1*n4^2 + 128*n5 - 104*d*n5 + 
      20*d^2*n5 - 40*n1*n5 + 12*d*n1*n5 - 8*n1^2*n5 + 88*n3*n5 - 28*d*n3*n5 + 
      8*n1*n3*n5 + 112*n4*n5 - 40*d*n4*n5 + 16*n3*n4*n5 + 16*n4^2*n5 + 
      24*n5^2 - 12*d*n5^2 - 8*n1*n5^2 + 16*n3*n5^2 + 16*n4*n5^2)*
     j[p4a, n1, 0, n3, n4, n5, 1, 0, 0, 0, 1, 1, 0, 1, 2])/
    ((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) - 
   (4*(32 - 28*d + 6*d^2 - 12*n1 + 4*d*n1 + 28*n3 - 11*d*n3 - 2*n1*n3 + 
      4*n3^2 + 32*n4 - 13*d*n4 - 2*n1*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5)*j[p4a, n1, 0, n3, n4, n5, 1, 0, 
      0, 0, 1, 2, 0, 1, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
     92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((96 - 80*d + 14*d^2 + d^3 - 96*n1 + 76*d*n1 - 16*d^2*n1 - 4*d*n1^2 + 
      48*n3 - 4*d*n3 - 6*d^2*n3 - 40*n1*n3 + 24*d*n1*n3 + 8*n1^2*n3 - 
      16*n3^2 + 8*d*n3^2 - 16*n1*n3^2 + 80*n4 - 24*d*n4 - 4*d^2*n4 - 
      72*n1*n4 + 36*d*n1*n4 + 8*n1^2*n4 - 8*n3*n4 + 12*d*n3*n4 - 
      40*n1*n3*n4 + 8*n4^2 + 4*d*n4^2 - 24*n1*n4^2 + 128*n5 - 104*d*n5 + 
      20*d^2*n5 - 40*n1*n5 + 12*d*n1*n5 - 8*n1^2*n5 + 88*n3*n5 - 28*d*n3*n5 + 
      8*n1*n3*n5 + 112*n4*n5 - 40*d*n4*n5 + 16*n3*n4*n5 + 16*n4^2*n5 + 
      24*n5^2 - 12*d*n5^2 - 8*n1*n5^2 + 16*n3*n5^2 + 16*n4*n5^2)*
     j[p4a, n1, 0, n3, n4, n5, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    ((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96 - 80*d + 14*d^2 + d^3 - 96*n1 + 76*d*n1 - 16*d^2*n1 - 4*d*n1^2 + 
      48*n3 - 4*d*n3 - 6*d^2*n3 - 40*n1*n3 + 24*d*n1*n3 + 8*n1^2*n3 - 
      16*n3^2 + 8*d*n3^2 - 16*n1*n3^2 + 80*n4 - 24*d*n4 - 4*d^2*n4 - 
      72*n1*n4 + 36*d*n1*n4 + 8*n1^2*n4 - 8*n3*n4 + 12*d*n3*n4 - 
      40*n1*n3*n4 + 8*n4^2 + 4*d*n4^2 - 24*n1*n4^2 + 128*n5 - 104*d*n5 + 
      20*d^2*n5 - 40*n1*n5 + 12*d*n1*n5 - 8*n1^2*n5 + 88*n3*n5 - 28*d*n3*n5 + 
      8*n1*n3*n5 + 112*n4*n5 - 40*d*n4*n5 + 16*n3*n4*n5 + 16*n4^2*n5 + 
      24*n5^2 - 12*d*n5^2 - 8*n1*n5^2 + 16*n3*n5^2 + 16*n4*n5^2)*
     j[p4a, n1, 0, n3, n4, n5, 2, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
      92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96 - 80*d + 14*d^2 + d^3 - 96*n1 + 76*d*n1 - 16*d^2*n1 - 4*d*n1^2 + 
      48*n3 - 4*d*n3 - 6*d^2*n3 - 40*n1*n3 + 24*d*n1*n3 + 8*n1^2*n3 - 
      16*n3^2 + 8*d*n3^2 - 16*n1*n3^2 + 80*n4 - 24*d*n4 - 4*d^2*n4 - 
      72*n1*n4 + 36*d*n1*n4 + 8*n1^2*n4 - 8*n3*n4 + 12*d*n3*n4 - 
      40*n1*n3*n4 + 8*n4^2 + 4*d*n4^2 - 24*n1*n4^2 + 128*n5 - 104*d*n5 + 
      20*d^2*n5 - 40*n1*n5 + 12*d*n1*n5 - 8*n1^2*n5 + 88*n3*n5 - 28*d*n3*n5 + 
      8*n1*n3*n5 + 112*n4*n5 - 40*d*n4*n5 + 16*n3*n4*n5 + 16*n4^2*n5 + 
      24*n5^2 - 12*d*n5^2 - 8*n1*n5^2 + 16*n3*n5^2 + 16*n4*n5^2)*
     j[p4a, n1, 0, n3, n4, n5, 2, 0, 1, 0, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
      92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96 - 80*d + 14*d^2 + d^3 - 96*n1 + 76*d*n1 - 16*d^2*n1 - 4*d*n1^2 + 
      48*n3 - 4*d*n3 - 6*d^2*n3 - 40*n1*n3 + 24*d*n1*n3 + 8*n1^2*n3 - 
      16*n3^2 + 8*d*n3^2 - 16*n1*n3^2 + 80*n4 - 24*d*n4 - 4*d^2*n4 - 
      72*n1*n4 + 36*d*n1*n4 + 8*n1^2*n4 - 8*n3*n4 + 12*d*n3*n4 - 
      40*n1*n3*n4 + 8*n4^2 + 4*d*n4^2 - 24*n1*n4^2 + 128*n5 - 104*d*n5 + 
      20*d^2*n5 - 40*n1*n5 + 12*d*n1*n5 - 8*n1^2*n5 + 88*n3*n5 - 28*d*n3*n5 + 
      8*n1*n3*n5 + 112*n4*n5 - 40*d*n4*n5 + 16*n3*n4*n5 + 16*n4^2*n5 + 
      24*n5^2 - 12*d*n5^2 - 8*n1*n5^2 + 16*n3*n5^2 + 16*n4*n5^2)*
     j[p4a, n1, 0, n3, n4, n5, 2, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
      92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96 - 80*d + 14*d^2 + d^3 - 96*n1 + 76*d*n1 - 16*d^2*n1 - 4*d*n1^2 + 
      48*n3 - 4*d*n3 - 6*d^2*n3 - 40*n1*n3 + 24*d*n1*n3 + 8*n1^2*n3 - 
      16*n3^2 + 8*d*n3^2 - 16*n1*n3^2 + 80*n4 - 24*d*n4 - 4*d^2*n4 - 
      72*n1*n4 + 36*d*n1*n4 + 8*n1^2*n4 - 8*n3*n4 + 12*d*n3*n4 - 
      40*n1*n3*n4 + 8*n4^2 + 4*d*n4^2 - 24*n1*n4^2 + 128*n5 - 104*d*n5 + 
      20*d^2*n5 - 40*n1*n5 + 12*d*n1*n5 - 8*n1^2*n5 + 88*n3*n5 - 28*d*n3*n5 + 
      8*n1*n3*n5 + 112*n4*n5 - 40*d*n4*n5 + 16*n3*n4*n5 + 16*n4^2*n5 + 
      24*n5^2 - 12*d*n5^2 - 8*n1*n5^2 + 16*n3*n5^2 + 16*n4*n5^2)*
     j[p4a, n1, 0, n3, n4, n5, 2, 0, 1, 0, 1, 1, 0, 1, 0])/
    (2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
      92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) - 
   (2*(32 - 28*d + 6*d^2 - 12*n1 + 4*d*n1 + 28*n3 - 11*d*n3 - 2*n1*n3 + 
      4*n3^2 + 32*n4 - 13*d*n4 - 2*n1*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5)*j[p4a, n1, 0, n3, n4, 1 + n5, 0, 
      -1, 1, 0, 2, 1, 0, 1, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
     92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((96 - 176*d + 98*d^2 - 17*d^3 + 16*d*n1 - 6*d^2*n1 + 192*n3 - 208*d*n3 + 
      52*d^2*n3 - 32*n1*n3 + 16*d*n1*n3 + 112*n3^2 - 52*d*n3^2 - 8*n1*n3^2 + 
      16*n3^3 + 224*n4 - 240*d*n4 + 60*d^2*n4 - 32*n1*n4 + 16*d*n1*n4 + 
      256*n3*n4 - 120*d*n3*n4 - 16*n1*n3*n4 + 56*n3^2*n4 + 144*n4^2 - 
      68*d*n4^2 - 8*n1*n4^2 + 64*n3*n4^2 + 24*n4^3 - 64*n5 + 40*d*n5 - 
      4*d^2*n5 + 32*n1*n5 - 8*d*n1*n5 - 32*n3*n5 + 8*n3^2*n5 - 32*n4*n5 + 
      16*n3*n4*n5 + 8*n4^2*n5 - 24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 
      16*n3*n5^2 - 16*n4*n5^2)*j[p4a, n1, 0, n3, n4, 1 + n5, 0, 0, 1, -1, 1, 
      1, 0, 1, 2])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-480 + 640*d - 282*d^2 + 41*d^3 + 144*n1 - 112*d*n1 + 22*d^2*n1 - 
      528*n3 + 452*d*n3 - 96*d^2*n3 + 56*n1*n3 - 24*d*n1*n3 - 160*n3^2 + 
      68*d*n3^2 + 8*n1*n3^2 - 16*n3^3 - 352*n4 + 172*d*n4 + 48*d^2*n4 - 
      24*d^3*n4 - 40*n1*n4 + 56*d*n1*n4 - 16*d^2*n1*n4 - 152*n3*n4 - 
      40*d*n3*n4 + 44*d^2*n3*n4 + 8*d*n1*n3*n4 - 24*n3^2*n4 - 16*d*n3^2*n4 + 
      168*n4^2 - 252*d*n4^2 + 76*d^2*n4^2 - 56*n1*n4^2 + 24*d*n1*n4^2 + 
      128*n3*n4^2 - 84*d*n3*n4^2 - 8*n1*n3*n4^2 + 16*n3^2*n4^2 + 152*n4^3 - 
      76*d*n4^3 - 8*n1*n4^3 + 40*n3*n4^3 + 24*n4^4 - 64*n5 + 72*d*n5 - 
      22*d^2*n5 + d^3*n5 - 32*n1*n5 + 52*d*n1*n5 - 16*d^2*n1*n5 - 
      4*d*n1^2*n5 - 104*n3*n5 + 64*d*n3*n5 - 6*d^2*n3*n5 - 32*n1*n3*n5 + 
      24*d*n1*n3*n5 + 8*n1^2*n3*n5 - 40*n3^2*n5 + 8*d*n3^2*n5 - 
      16*n1*n3^2*n5 + 104*n4*n5 - 124*d*n4*n5 + 36*d^2*n4*n5 - 144*n1*n4*n5 + 
      68*d*n1*n4*n5 + 8*n1^2*n4*n5 + 96*n3*n4*n5 - 56*d*n3*n4*n5 - 
      48*n1*n3*n4*n5 + 16*n3^2*n4*n5 + 184*n4^2*n5 - 88*d*n4^2*n5 - 
      48*n1*n4^2*n5 + 64*n3*n4^2*n5 + 48*n4^3*n5 + 120*n5^2 - 100*d*n5^2 + 
      20*d^2*n5^2 - 32*n1*n5^2 + 12*d*n1*n5^2 - 8*n1^2*n5^2 + 80*n3*n5^2 - 
      28*d*n3*n5^2 + 8*n1*n3*n5^2 + 136*n4*n5^2 - 56*d*n4*n5^2 - 
      16*n1*n4*n5^2 + 40*n3*n4*n5^2 + 40*n4^2*n5^2 + 24*n5^3 - 12*d*n5^3 - 
      8*n1*n5^3 + 16*n3*n5^3 + 16*n4*n5^3)*j[p4a, n1, 0, n3, n4, 1 + n5, 0, 
      0, 1, 0, 1, 1, 0, 1, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-96 + 176*d - 98*d^2 + 17*d^3 - 16*d*n1 + 6*d^2*n1 - 192*n3 + 208*d*n3 - 
      52*d^2*n3 + 32*n1*n3 - 16*d*n1*n3 - 112*n3^2 + 52*d*n3^2 + 8*n1*n3^2 - 
      16*n3^3 - 224*n4 + 240*d*n4 - 60*d^2*n4 + 32*n1*n4 - 16*d*n1*n4 - 
      256*n3*n4 + 120*d*n3*n4 + 16*n1*n3*n4 - 56*n3^2*n4 - 144*n4^2 + 
      68*d*n4^2 + 8*n1*n4^2 - 64*n3*n4^2 - 24*n4^3 + 64*n5 - 40*d*n5 + 
      4*d^2*n5 - 32*n1*n5 + 8*d*n1*n5 + 32*n3*n5 - 8*n3^2*n5 + 32*n4*n5 - 
      16*n3*n4*n5 - 8*n4^2*n5 + 24*n5^2 - 12*d*n5^2 - 8*n1*n5^2 + 
      16*n3*n5^2 + 16*n4*n5^2)*j[p4a, n1, 0, n3, n4, 1 + n5, 0, 0, 1, 0, 1, 
      1, 0, 1, 2])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) - 
   (2*(32 - 28*d + 6*d^2 - 12*n1 + 4*d*n1 + 28*n3 - 11*d*n3 - 2*n1*n3 + 
      4*n3^2 + 32*n4 - 13*d*n4 - 2*n1*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5)*j[p4a, n1, 0, n3, n4, 1 + n5, 0, 
      0, 1, 0, 1, 2, -1, 1, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
     92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   (2*(32 - 28*d + 6*d^2 - 12*n1 + 4*d*n1 + 28*n3 - 11*d*n3 - 2*n1*n3 + 
      4*n3^2 + 32*n4 - 13*d*n4 - 2*n1*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5)*j[p4a, n1, 0, n3, n4, 1 + n5, 0, 
      0, 1, 0, 1, 2, 0, 1, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
     92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   (2*(32 - 28*d + 6*d^2 - 12*n1 + 4*d*n1 + 28*n3 - 11*d*n3 - 2*n1*n3 + 
      4*n3^2 + 32*n4 - 13*d*n4 - 2*n1*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5)*j[p4a, n1, 0, n3, n4, 1 + n5, 0, 
      0, 1, 0, 2, 1, -1, 1, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
     92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) - 
   (2*(32 - 28*d + 6*d^2 - 12*n1 + 4*d*n1 + 28*n3 - 11*d*n3 - 2*n1*n3 + 
      4*n3^2 + 32*n4 - 13*d*n4 - 2*n1*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5)*j[p4a, n1, 0, n3, n4, 1 + n5, 0, 
      0, 1, 0, 2, 1, 0, 1, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
     92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) - 
   (2*(32 - 28*d + 6*d^2 - 12*n1 + 4*d*n1 + 28*n3 - 11*d*n3 - 2*n1*n3 + 
      4*n3^2 + 32*n4 - 13*d*n4 - 2*n1*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5)*j[p4a, n1, 0, n3, n4, 1 + n5, 0, 
      0, 2, 0, 1, 1, -1, 1, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
     92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) - 
   (2*(-192 + 264*d - 120*d^2 + 18*d^3 + 72*n1 - 60*d*n1 + 12*d^2*n1 - 
      232*n3 + 206*d*n3 - 45*d^2*n3 + 36*n1*n3 - 14*d*n1*n3 - 80*n3^2 + 
      34*d*n3^2 + 4*n1*n3^2 - 8*n3^3 - 320*n4 + 286*d*n4 - 63*d^2*n4 + 
      60*n1*n4 - 22*d*n1*n4 - 236*n3*n4 + 100*d*n3*n4 + 12*n1*n3*n4 - 
      36*n3^2*n4 - 164*n4^2 + 70*d*n4^2 + 8*n1*n4^2 - 52*n3*n4^2 - 24*n4^3 - 
      48*n5 + 48*d*n5 - 12*d^2*n5 + 24*n1*n5 - 12*d*n1*n5 - 52*n3*n5 + 
      26*d*n3*n5 + 8*n1*n3*n5 - 12*n3^2*n5 - 68*n4*n5 + 34*d*n4*n5 + 
      16*n1*n4*n5 - 36*n3*n4*n5 - 24*n4^2*n5)*j[p4a, n1, 0, n3, n4, 1 + n5, 
      1, -1, 0, 0, 1, 2, 0, 1, 1])/((-3 + d - n4 - n5)*
     (-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 
      48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 
      60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 
      260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 16*n1^2*n4 - 
      128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 28*d*n4^2 - 
      48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 
      8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 16*n3^2*n5 - 
      88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 8*n4^2*n5 - 
      8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96 - 144*d + 70*d^2 - 11*d^3 + 4*d*n1 - 2*d^2*n1 + 128*n3 - 124*d*n3 + 
      29*d^2*n3 - 8*n1*n3 + 6*d*n1*n3 + 56*n3^2 - 26*d*n3^2 - 4*n1*n3^2 + 
      8*n3^3 + 160*n4 - 152*d*n4 + 35*d^2*n4 - 8*n1*n4 + 6*d*n1*n4 + 
      136*n3*n4 - 62*d*n3*n4 - 8*n1*n3*n4 + 28*n3^2*n4 + 80*n4^2 - 
      36*d*n4^2 - 4*n1*n4^2 + 32*n3*n4^2 + 12*n4^3 - 8*d*n5 + 4*d^2*n5 + 
      8*n1*n5 - 4*d*n1*n5 + 8*n3*n5 - 8*d*n3*n5 + 4*n1*n3*n5 + 4*n3^2*n5 + 
      16*n4*n5 - 12*d*n4*n5 + 4*n1*n4*n5 + 12*n3*n4*n5 + 8*n4^2*n5 - 8*n5^2 + 
      4*d*n5^2 - 4*n3*n5^2 - 4*n4*n5^2)*j[p4a, n1, 0, n3, n4, 1 + n5, 1, -1, 
      0, 0, 2, 1, 0, 1, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96 - 80*d + 14*d^2 + d^3 - 96*n1 + 76*d*n1 - 16*d^2*n1 - 4*d*n1^2 + 
      48*n3 - 4*d*n3 - 6*d^2*n3 - 40*n1*n3 + 24*d*n1*n3 + 8*n1^2*n3 - 
      16*n3^2 + 8*d*n3^2 - 16*n1*n3^2 + 80*n4 - 24*d*n4 - 4*d^2*n4 - 
      72*n1*n4 + 36*d*n1*n4 + 8*n1^2*n4 - 8*n3*n4 + 12*d*n3*n4 - 
      40*n1*n3*n4 + 8*n4^2 + 4*d*n4^2 - 24*n1*n4^2 + 128*n5 - 104*d*n5 + 
      20*d^2*n5 - 40*n1*n5 + 12*d*n1*n5 - 8*n1^2*n5 + 88*n3*n5 - 28*d*n3*n5 + 
      8*n1*n3*n5 + 112*n4*n5 - 40*d*n4*n5 + 16*n3*n4*n5 + 16*n4^2*n5 + 
      24*n5^2 - 12*d*n5^2 - 8*n1*n5^2 + 16*n3*n5^2 + 16*n4*n5^2)*
     j[p4a, n1, 0, n3, n4, 1 + n5, 1, -1, 1, 0, 1, 1, 0, 0, 2])/
    ((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96 - 144*d + 70*d^2 - 11*d^3 + 4*d*n1 - 2*d^2*n1 + 128*n3 - 124*d*n3 + 
      29*d^2*n3 - 8*n1*n3 + 6*d*n1*n3 + 56*n3^2 - 26*d*n3^2 - 4*n1*n3^2 + 
      8*n3^3 + 160*n4 - 152*d*n4 + 35*d^2*n4 - 8*n1*n4 + 6*d*n1*n4 + 
      136*n3*n4 - 62*d*n3*n4 - 8*n1*n3*n4 + 28*n3^2*n4 + 80*n4^2 - 
      36*d*n4^2 - 4*n1*n4^2 + 32*n3*n4^2 + 12*n4^3 - 8*d*n5 + 4*d^2*n5 + 
      8*n1*n5 - 4*d*n1*n5 + 8*n3*n5 - 8*d*n3*n5 + 4*n1*n3*n5 + 4*n3^2*n5 + 
      16*n4*n5 - 12*d*n4*n5 + 4*n1*n4*n5 + 12*n3*n4*n5 + 8*n4^2*n5 - 8*n5^2 + 
      4*d*n5^2 - 4*n3*n5^2 - 4*n4*n5^2)*j[p4a, n1, 0, n3, n4, 1 + n5, 1, -1, 
      1, 0, 2, 0, 0, 1, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96 - 144*d + 70*d^2 - 11*d^3 + 4*d*n1 - 2*d^2*n1 + 128*n3 - 124*d*n3 + 
      29*d^2*n3 - 8*n1*n3 + 6*d*n1*n3 + 56*n3^2 - 26*d*n3^2 - 4*n1*n3^2 + 
      8*n3^3 + 160*n4 - 152*d*n4 + 35*d^2*n4 - 8*n1*n4 + 6*d*n1*n4 + 
      136*n3*n4 - 62*d*n3*n4 - 8*n1*n3*n4 + 28*n3^2*n4 + 80*n4^2 - 
      36*d*n4^2 - 4*n1*n4^2 + 32*n3*n4^2 + 12*n4^3 - 8*d*n5 + 4*d^2*n5 + 
      8*n1*n5 - 4*d*n1*n5 + 8*n3*n5 - 8*d*n3*n5 + 4*n1*n3*n5 + 4*n3^2*n5 + 
      16*n4*n5 - 12*d*n4*n5 + 4*n1*n4*n5 + 12*n3*n4*n5 + 8*n4^2*n5 - 8*n5^2 + 
      4*d*n5^2 - 4*n3*n5^2 - 4*n4*n5^2)*j[p4a, n1, 0, n3, n4, 1 + n5, 1, -1, 
      1, 0, 2, 1, 0, 0, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((192 - 264*d + 120*d^2 - 18*d^3 - 72*n1 + 60*d*n1 - 12*d^2*n1 + 232*n3 - 
      206*d*n3 + 45*d^2*n3 - 36*n1*n3 + 14*d*n1*n3 + 80*n3^2 - 34*d*n3^2 - 
      4*n1*n3^2 + 8*n3^3 + 320*n4 - 286*d*n4 + 63*d^2*n4 - 60*n1*n4 + 
      22*d*n1*n4 + 236*n3*n4 - 100*d*n3*n4 - 12*n1*n3*n4 + 36*n3^2*n4 + 
      164*n4^2 - 70*d*n4^2 - 8*n1*n4^2 + 52*n3*n4^2 + 24*n4^3 + 48*n5 - 
      48*d*n5 + 12*d^2*n5 - 24*n1*n5 + 12*d*n1*n5 + 52*n3*n5 - 26*d*n3*n5 - 
      8*n1*n3*n5 + 12*n3^2*n5 + 68*n4*n5 - 34*d*n4*n5 - 16*n1*n4*n5 + 
      36*n3*n4*n5 + 24*n4^2*n5)*j[p4a, n1, 0, n3, n4, 1 + n5, 1, -1, 2, 0, 1, 
      0, 0, 1, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((192 - 264*d + 120*d^2 - 18*d^3 - 72*n1 + 60*d*n1 - 12*d^2*n1 + 232*n3 - 
      206*d*n3 + 45*d^2*n3 - 36*n1*n3 + 14*d*n1*n3 + 80*n3^2 - 34*d*n3^2 - 
      4*n1*n3^2 + 8*n3^3 + 320*n4 - 286*d*n4 + 63*d^2*n4 - 60*n1*n4 + 
      22*d*n1*n4 + 236*n3*n4 - 100*d*n3*n4 - 12*n1*n3*n4 + 36*n3^2*n4 + 
      164*n4^2 - 70*d*n4^2 - 8*n1*n4^2 + 52*n3*n4^2 + 24*n4^3 + 48*n5 - 
      48*d*n5 + 12*d^2*n5 - 24*n1*n5 + 12*d*n1*n5 + 52*n3*n5 - 26*d*n3*n5 - 
      8*n1*n3*n5 + 12*n3^2*n5 + 68*n4*n5 - 34*d*n4*n5 - 16*n1*n4*n5 + 
      36*n3*n4*n5 + 24*n4^2*n5)*j[p4a, n1, 0, n3, n4, 1 + n5, 1, -1, 2, 0, 1, 
      1, 0, 0, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96 - 176*d + 98*d^2 - 17*d^3 + 16*d*n1 - 6*d^2*n1 + 192*n3 - 208*d*n3 + 
      52*d^2*n3 - 32*n1*n3 + 16*d*n1*n3 + 112*n3^2 - 52*d*n3^2 - 8*n1*n3^2 + 
      16*n3^3 + 224*n4 - 240*d*n4 + 60*d^2*n4 - 32*n1*n4 + 16*d*n1*n4 + 
      256*n3*n4 - 120*d*n3*n4 - 16*n1*n3*n4 + 56*n3^2*n4 + 144*n4^2 - 
      68*d*n4^2 - 8*n1*n4^2 + 64*n3*n4^2 + 24*n4^3 - 64*n5 + 40*d*n5 - 
      4*d^2*n5 + 32*n1*n5 - 8*d*n1*n5 - 32*n3*n5 + 8*n3^2*n5 - 32*n4*n5 + 
      16*n3*n4*n5 + 8*n4^2*n5 - 24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 
      16*n3*n5^2 - 16*n4*n5^2)*j[p4a, n1, 0, n3, n4, 1 + n5, 1, 0, 0, -1, 1, 
      1, 0, 1, 2])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   (4*(32 - 28*d + 6*d^2 - 12*n1 + 4*d*n1 + 28*n3 - 11*d*n3 - 2*n1*n3 + 
      4*n3^2 + 32*n4 - 13*d*n4 - 2*n1*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5)*j[p4a, n1, 0, n3, n4, 1 + n5, 1, 
      0, 0, -1, 1, 2, 0, 1, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
     92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) - 
   (2*(32 - 28*d + 6*d^2 - 12*n1 + 4*d*n1 + 28*n3 - 11*d*n3 - 2*n1*n3 + 
      4*n3^2 + 32*n4 - 13*d*n4 - 2*n1*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5)*j[p4a, n1, 0, n3, n4, 1 + n5, 1, 
      0, 0, -1, 2, 1, 0, 1, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
     92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-384 + 656*d - 352*d^2 + 60*d^3 + 336*n1 - 456*d*n1 + 180*d^2*n1 - 
      22*d^3*n1 + 8*d*n1^2 - 4*d^2*n1^2 + 528*n3 - 1108*d*n3 + 720*d^2*n3 - 
      143*d^3*n3 + 280*n1*n3 - 192*d*n1*n3 + 34*d^2*n1*n3 - 16*n1^2*n3 + 
      24*d*n1^2*n3 + 1248*n3^2 - 1380*d*n3^2 + 358*d^2*n3^2 + 56*n1*n3^2 - 
      36*d*n1*n3^2 - 32*n1^2*n3^2 + 592*n3^3 - 280*d*n3^3 + 32*n1*n3^3 + 
      64*n3^4 - 1472*n4 + 1676*d*n4 - 550*d^2*n4 + 46*d^3*n4 + 680*n1*n4 - 
      492*d*n1*n4 + 90*d^2*n1*n4 - 16*n1^2*n4 + 12*d*n1^2*n4 + 648*n3*n4 - 
      1152*d*n3*n4 + 378*d^2*n3*n4 + 240*n1*n3*n4 - 116*d*n1*n3*n4 - 
      40*n1^2*n3*n4 + 1400*n3^2*n4 - 700*d*n3^2*n4 + 96*n1*n3^2*n4 + 
      256*n3^3*n4 - 1416*n4^2 + 968*d*n4^2 - 146*d^2*n4^2 + 280*n1*n4^2 - 
      108*d*n1*n4^2 - 8*n1^2*n4^2 + 416*n3*n4^2 - 304*d*n3*n4^2 + 
      104*n1*n3*n4^2 + 304*n3^2*n4^2 - 456*n4^3 + 148*d*n4^3 + 40*n1*n4^3 + 
      64*n3*n4^3 - 48*n4^4 + 160*n5 - 96*d*n5 + 8*d^2*n5 - 48*n1*n5 - 
      24*d*n1*n5 + 8*d^2*n1*n5 + 16*n1^2*n5 - 8*d*n1^2*n5 + 88*n3*n5 - 
      84*d*n3*n5 + 44*d^2*n3*n5 + 8*n1*n3*n5 + 12*d*n1*n3*n5 + 
      32*n1^2*n3*n5 + 120*n3^2*n5 - 120*d*n3^2*n5 - 40*n1*n3^2*n5 + 
      80*n3^3*n5 - 168*n4*n5 + 228*d*n4*n5 - 48*d^2*n4*n5 + 160*n1*n4*n5 - 
      48*d*n1*n4*n5 + 8*n1^2*n4*n5 - 56*n3*n4*n5 - 72*d*n3*n4*n5 - 
      48*n1*n3*n4*n5 + 184*n3^2*n4*n5 - 312*n4^2*n5 + 116*d*n4^2*n5 + 
      32*n1*n4^2*n5 + 40*n3*n4^2*n5 - 64*n4^3*n5 + 64*n5^2 - 32*d*n5^2 - 
      48*n1*n5^2 + 8*d*n1*n5^2 - 24*n3*n5^2 + 36*d*n3*n5^2 - 40*n3^2*n5^2 + 
      32*n4*n5^2 + 8*d*n4*n5^2 + 8*n1*n4*n5^2 - 56*n3*n4*n5^2 - 16*n4^2*n5^2)*
     j[p4a, n1, 0, n3, n4, 1 + n5, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
      92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-96 + 176*d - 98*d^2 + 17*d^3 - 16*d*n1 + 6*d^2*n1 - 192*n3 + 208*d*n3 - 
      52*d^2*n3 + 32*n1*n3 - 16*d*n1*n3 - 112*n3^2 + 52*d*n3^2 + 8*n1*n3^2 - 
      16*n3^3 - 224*n4 + 240*d*n4 - 60*d^2*n4 + 32*n1*n4 - 16*d*n1*n4 - 
      256*n3*n4 + 120*d*n3*n4 + 16*n1*n3*n4 - 56*n3^2*n4 - 144*n4^2 + 
      68*d*n4^2 + 8*n1*n4^2 - 64*n3*n4^2 - 24*n4^3 + 64*n5 - 40*d*n5 + 
      4*d^2*n5 - 32*n1*n5 + 8*d*n1*n5 + 32*n3*n5 - 8*n3^2*n5 + 32*n4*n5 - 
      16*n3*n4*n5 - 8*n4^2*n5 + 24*n5^2 - 12*d*n5^2 - 8*n1*n5^2 + 
      16*n3*n5^2 + 16*n4*n5^2)*j[p4a, n1, 0, n3, n4, 1 + n5, 1, 0, 0, 0, 1, 
      1, 0, 1, 2])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-96 + 176*d - 98*d^2 + 17*d^3 - 16*d*n1 + 6*d^2*n1 - 192*n3 + 208*d*n3 - 
      52*d^2*n3 + 32*n1*n3 - 16*d*n1*n3 - 112*n3^2 + 52*d*n3^2 + 8*n1*n3^2 - 
      16*n3^3 - 224*n4 + 240*d*n4 - 60*d^2*n4 + 32*n1*n4 - 16*d*n1*n4 - 
      256*n3*n4 + 120*d*n3*n4 + 16*n1*n3*n4 - 56*n3^2*n4 - 144*n4^2 + 
      68*d*n4^2 + 8*n1*n4^2 - 64*n3*n4^2 - 24*n4^3 + 64*n5 - 40*d*n5 + 
      4*d^2*n5 - 32*n1*n5 + 8*d*n1*n5 + 32*n3*n5 - 8*n3^2*n5 + 32*n4*n5 - 
      16*n3*n4*n5 - 8*n4^2*n5 + 24*n5^2 - 12*d*n5^2 - 8*n1*n5^2 + 
      16*n3*n5^2 + 16*n4*n5^2)*j[p4a, n1, 0, n3, n4, 1 + n5, 1, 0, 0, 0, 1, 
      1, 0, 2, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-480 + 672*d - 310*d^2 + 47*d^3 + 48*n1 - 28*d*n1 + 4*d^2*n1 - 
      4*d*n1^2 - 544*n3 + 488*d*n3 - 108*d^2*n3 + 4*d*n1*n3 + 8*n1^2*n3 - 
      176*n3^2 + 76*d*n3^2 - 8*n1*n3^2 - 16*n3^3 - 752*n4 + 676*d*n4 - 
      150*d^2*n4 + 16*n1*n4 + 8*n1^2*n4 - 512*n3*n4 + 220*d*n3*n4 - 
      16*n1*n3*n4 - 72*n3^2*n4 - 352*n4^2 + 152*d*n4^2 - 8*n1*n4^2 - 
      104*n3*n4^2 - 48*n4^3 - 96*n5 + 104*d*n5 - 28*d^2*n5 + 40*n1*n5 - 
      12*d*n1*n5 - 8*n1^2*n5 - 112*n3*n5 + 56*d*n3*n5 + 8*n1*n3*n5 - 
      24*n3^2*n5 - 152*n4*n5 + 76*d*n4*n5 + 16*n1*n4*n5 - 72*n3*n4*n5 - 
      48*n4^2*n5 + 8*n5^2 - 4*d*n5^2 + 8*n1*n5^2)*j[p4a, n1, 0, n3, n4, 
      1 + n5, 1, 0, 0, 0, 1, 2, -1, 1, 1])/(2*(-3 + d - n4 - n5)*
     (-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 
      48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 
      60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 
      260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 16*n1^2*n4 - 
      128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 28*d*n4^2 - 
      48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 
      8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 16*n3^2*n5 - 
      88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 8*n4^2*n5 - 
      8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((480 - 672*d + 310*d^2 - 47*d^3 - 48*n1 + 28*d*n1 - 4*d^2*n1 + 4*d*n1^2 + 
      544*n3 - 488*d*n3 + 108*d^2*n3 - 4*d*n1*n3 - 8*n1^2*n3 + 176*n3^2 - 
      76*d*n3^2 + 8*n1*n3^2 + 16*n3^3 + 752*n4 - 676*d*n4 + 150*d^2*n4 - 
      16*n1*n4 - 8*n1^2*n4 + 512*n3*n4 - 220*d*n3*n4 + 16*n1*n3*n4 + 
      72*n3^2*n4 + 352*n4^2 - 152*d*n4^2 + 8*n1*n4^2 + 104*n3*n4^2 + 
      48*n4^3 + 96*n5 - 104*d*n5 + 28*d^2*n5 - 40*n1*n5 + 12*d*n1*n5 + 
      8*n1^2*n5 + 112*n3*n5 - 56*d*n3*n5 - 8*n1*n3*n5 + 24*n3^2*n5 + 
      152*n4*n5 - 76*d*n4*n5 - 16*n1*n4*n5 + 72*n3*n4*n5 + 48*n4^2*n5 - 
      8*n5^2 + 4*d*n5^2 - 8*n1*n5^2)*j[p4a, n1, 0, n3, n4, 1 + n5, 1, 0, 0, 
      0, 1, 2, 0, 1, 1])/(2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96 - 272*d + 182*d^2 - 35*d^3 + 96*n1 - 44*d*n1 + 4*d^2*n1 + 4*d*n1^2 + 
      336*n3 - 412*d*n3 + 110*d^2*n3 - 24*n1*n3 + 8*d*n1*n3 - 8*n1^2*n3 + 
      240*n3^2 - 112*d*n3^2 + 32*n3^3 + 368*n4 - 456*d*n4 + 124*d^2*n4 + 
      8*n1*n4 - 4*d*n1*n4 - 8*n1^2*n4 + 520*n3*n4 - 252*d*n3*n4 + 
      8*n1*n3*n4 + 112*n3^2*n4 + 280*n4^2 - 140*d*n4^2 + 8*n1*n4^2 + 
      128*n3*n4^2 + 48*n4^3 - 256*n5 + 184*d*n5 - 28*d^2*n5 + 104*n1*n5 - 
      28*d*n1*n5 + 8*n1^2*n5 - 152*n3*n5 + 28*d*n3*n5 - 8*n1*n3*n5 + 
      16*n3^2*n5 - 176*n4*n5 + 40*d*n4*n5 + 16*n3*n4*n5 - 72*n5^2 + 
      36*d*n5^2 + 24*n1*n5^2 - 48*n3*n5^2 - 48*n4*n5^2)*
     j[p4a, n1, 0, n3, n4, 1 + n5, 1, 0, 1, -1, 1, 1, 0, 0, 2])/
    (2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
      92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) - 
   (2*(32 - 28*d + 6*d^2 - 12*n1 + 4*d*n1 + 28*n3 - 11*d*n3 - 2*n1*n3 + 
      4*n3^2 + 32*n4 - 13*d*n4 - 2*n1*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5)*j[p4a, n1, 0, n3, n4, 1 + n5, 1, 
      0, 1, -1, 2, 1, 0, 0, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
     92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((576 - 880*d + 436*d^2 - 70*d^3 - 144*n1 + 216*d*n1 - 92*d^2*n1 + 
      12*d^3*n1 - 24*d*n1^2 + 8*d^2*n1^2 + 560*n3 - 444*d*n3 + 24*d^2*n3 + 
      25*d^3*n3 - 216*n1*n3 + 208*d*n1*n3 - 46*d^2*n1*n3 + 48*n1^2*n3 - 
      24*d*n1^2*n3 + 96*n3^2 + 68*d*n3^2 - 50*d^2*n3^2 - 152*n1*n3^2 + 
      68*d*n1*n3^2 + 16*n1^2*n3^2 - 16*n3^3 + 24*d*n3^3 - 32*n1*n3^3 + 
      1280*n4 - 1228*d*n4 + 290*d^2*n4 - 2*d^3*n4 - 456*n1*n4 + 340*d*n1*n4 - 
      62*d^2*n1*n4 + 48*n1^2*n4 - 20*d*n1^2*n4 + 632*n3*n4 - 64*d*n3*n4 - 
      94*d^2*n3*n4 - 304*n1*n3*n4 + 124*d*n1*n3*n4 + 24*n1^2*n3*n4 - 
      120*n3^2*n4 + 132*d*n3^2*n4 - 80*n1*n3^2*n4 - 32*n3^3*n4 + 808*n4^2 - 
      368*d*n4^2 + 6*d^2*n4^2 - 216*n1*n4^2 + 76*d*n1*n4^2 + 8*n1^2*n4^2 + 
      120*d*n3*n4^2 - 72*n1*n3*n4^2 - 80*n3^2*n4^2 + 136*n4^3 - 4*d*n4^3 - 
      24*n1*n4^3 - 48*n3*n4^3 - 32*n5 - 16*d*n5 + 16*d^2*n5 + 144*n1*n5 - 
      88*d*n1*n5 + 16*d^2*n1*n5 - 48*n1^2*n5 + 8*d*n1^2*n5 - 56*n3*n5 + 
      36*d*n3*n5 - 20*d^2*n3*n5 + 120*n1*n3*n5 - 36*d*n1*n3*n5 - 56*n3^2*n5 + 
      40*d*n3^2*n5 + 8*n1*n3^2*n5 - 16*n3^3*n5 + 296*n4*n5 - 244*d*n4*n5 + 
      32*d^2*n4*n5 - 48*n1*n4*n5 + 16*d*n1*n4*n5 + 8*n1^2*n4*n5 + 
      152*n3*n4*n5 - 40*n3^2*n4*n5 + 264*n4^2*n5 - 68*d*n4^2*n5 - 
      32*n1*n4^2*n5 + 8*n3*n4^2*n5 + 32*n4^3*n5 - 48*n5^2 + 24*d*n5^2 + 
      48*n1*n5^2 - 16*d*n1*n5^2 - 16*n1^2*n5^2 - 40*n3*n5^2 + 4*d*n3*n5^2 + 
      32*n1*n3*n5^2 - 8*n3^2*n5^2 + 16*n4*n5^2 - 24*d*n4*n5^2 + 
      8*n1*n4*n5^2 + 24*n3*n4*n5^2 + 32*n4^2*n5^2)*j[p4a, n1, 0, n3, n4, 
      1 + n5, 1, 0, 1, 0, 0, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5)*
     (-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 
      48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 
      60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 
      260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 16*n1^2*n4 - 
      128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 28*d*n4^2 - 
      48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 
      8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 16*n3^2*n5 - 
      88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 8*n4^2*n5 - 
      8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((32*d - 28*d^2 + 6*d^3 - 12*d*n1 + 4*d^2*n1 - 64*n3 + 84*d*n3 - 
      23*d^2*n3 + 24*n1*n3 - 10*d*n1*n3 - 56*n3^2 + 26*d*n3^2 + 4*n1*n3^2 - 
      8*n3^3 - 64*n4 + 88*d*n4 - 25*d^2*n4 + 24*n1*n4 - 10*d*n1*n4 - 
      120*n3*n4 + 58*d*n3*n4 + 8*n1*n3*n4 - 28*n3^2*n4 - 64*n4^2 + 
      32*d*n4^2 + 4*n1*n4^2 - 32*n3*n4^2 - 12*n4^3 + 64*n5 - 48*d*n5 + 
      8*d^2*n5 - 24*n1*n5 + 4*d*n1*n5 + 40*n3*n5 - 8*d*n3*n5 + 4*n1*n3*n5 - 
      4*n3^2*n5 + 48*n4*n5 - 12*d*n4*n5 + 4*n1*n4*n5 - 4*n3*n4*n5 + 16*n5^2 - 
      8*d*n5^2 - 8*n1*n5^2 + 12*n3*n5^2 + 12*n4*n5^2)*
     j[p4a, n1, 0, n3, n4, 1 + n5, 1, 0, 1, 0, 0, 2, -1, 1, 1])/
    ((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-32*d + 28*d^2 - 6*d^3 + 12*d*n1 - 4*d^2*n1 + 64*n3 - 84*d*n3 + 
      23*d^2*n3 - 24*n1*n3 + 10*d*n1*n3 + 56*n3^2 - 26*d*n3^2 - 4*n1*n3^2 + 
      8*n3^3 + 64*n4 - 88*d*n4 + 25*d^2*n4 - 24*n1*n4 + 10*d*n1*n4 + 
      120*n3*n4 - 58*d*n3*n4 - 8*n1*n3*n4 + 28*n3^2*n4 + 64*n4^2 - 
      32*d*n4^2 - 4*n1*n4^2 + 32*n3*n4^2 + 12*n4^3 - 64*n5 + 48*d*n5 - 
      8*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 - 40*n3*n5 + 8*d*n3*n5 - 4*n1*n3*n5 + 
      4*n3^2*n5 - 48*n4*n5 + 12*d*n4*n5 - 4*n1*n4*n5 + 4*n3*n4*n5 - 16*n5^2 + 
      8*d*n5^2 + 8*n1*n5^2 - 12*n3*n5^2 - 12*n4*n5^2)*
     j[p4a, n1, 0, n3, n4, 1 + n5, 1, 0, 1, 0, 0, 2, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96 - 96*d + 30*d^2 - 3*d^3 - 240*n1 + 300*d*n1 - 136*d^2*n1 + 
      22*d^3*n1 - 4*d*n1^2 + 4*d^2*n1^2 + 320*n3 - 376*d*n3 + 162*d^2*n3 - 
      25*d^3*n3 - 272*n1*n3 + 240*d*n1*n3 - 58*d^2*n1*n3 + 8*n1^2*n3 - 
      8*d*n1^2*n3 + 240*n3^2 - 212*d*n3^2 + 50*d^2*n3^2 - 72*n1*n3^2 + 
      36*d*n1*n3^2 + 48*n3^3 - 24*d*n3^3 - 80*n4 + 108*d*n4 - 34*d^2*n4 + 
      2*d^3*n4 - 160*n1*n4 + 192*d*n1*n4 - 58*d^2*n1*n4 + 8*n1^2*n4 - 
      12*d*n1^2*n4 + 320*n3*n4 - 348*d*n3*n4 + 94*d^2*n3*n4 - 216*n1*n3*n4 + 
      116*d*n1*n3*n4 + 8*n1^2*n3*n4 + 264*n3^2*n4 - 132*d*n3^2*n4 - 
      32*n1*n3^2*n4 + 32*n3^3*n4 - 160*n4^2 + 84*d*n4^2 - 6*d^2*n4^2 - 
      80*n1*n4^2 + 60*d*n1*n4^2 + 8*n1^2*n4^2 + 208*n3*n4^2 - 120*d*n3*n4^2 - 
      56*n1*n3*n4^2 + 80*n3^2*n4^2 - 40*n4^3 + 4*d*n4^3 - 24*n1*n4^3 + 
      48*n3*n4^3 + 96*n5 - 72*d*n5 + 12*d^2*n5 - 72*n1*n5 + 44*d*n1*n5 - 
      8*d^2*n1*n5 - 8*n1^2*n5 + 8*d*n1^2*n5 + 176*n3*n5 - 112*d*n3*n5 + 
      20*d^2*n3*n5 - 96*n1*n3*n5 + 36*d*n1*n3*n5 + 104*n3^2*n5 - 
      40*d*n3^2*n5 - 24*n1*n3^2*n5 + 16*n3^3*n5 - 136*n4*n5 + 148*d*n4*n5 - 
      32*d^2*n4*n5 + 48*n1*n4*n5 - 16*d*n1*n4*n5 - 8*n1^2*n4*n5 - 
      24*n3*n4*n5 - 32*n1*n3*n4*n5 + 40*n3^2*n4*n5 - 184*n4^2*n5 + 
      68*d*n4^2*n5 + 16*n1*n4^2*n5 - 8*n3*n4^2*n5 - 32*n4^3*n5 + 24*n5^2 - 
      12*d*n5^2 + 8*n1*n5^2 - 8*d*n1*n5^2 + 24*n3*n5^2 - 4*d*n3*n5^2 + 
      8*n3^2*n5^2 - 32*n4*n5^2 + 24*d*n4*n5^2 + 24*n1*n4*n5^2 - 
      24*n3*n4*n5^2 - 32*n4^2*n5^2)*j[p4a, n1, 0, n3, n4, 1 + n5, 1, 0, 1, 0, 
      1, 0, 0, 1, 1])/(2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-96 + 80*d - 14*d^2 - d^3 + 96*n1 - 76*d*n1 + 16*d^2*n1 + 4*d*n1^2 - 
      48*n3 + 4*d*n3 + 6*d^2*n3 + 40*n1*n3 - 24*d*n1*n3 - 8*n1^2*n3 + 
      16*n3^2 - 8*d*n3^2 + 16*n1*n3^2 - 80*n4 + 24*d*n4 + 4*d^2*n4 + 
      72*n1*n4 - 36*d*n1*n4 - 8*n1^2*n4 + 8*n3*n4 - 12*d*n3*n4 + 
      40*n1*n3*n4 - 8*n4^2 - 4*d*n4^2 + 24*n1*n4^2 - 128*n5 + 104*d*n5 - 
      20*d^2*n5 + 40*n1*n5 - 12*d*n1*n5 + 8*n1^2*n5 - 88*n3*n5 + 28*d*n3*n5 - 
      8*n1*n3*n5 - 112*n4*n5 + 40*d*n4*n5 - 16*n3*n4*n5 - 16*n4^2*n5 - 
      24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 16*n3*n5^2 - 16*n4*n5^2)*
     j[p4a, n1, 0, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, -1, 0, 2])/
    ((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-576 + 768*d - 340*d^2 + 50*d^3 - 480*n1 + 648*d*n1 - 268*d^2*n1 + 
      34*d^3*n1 + 144*n1^2 - 88*d*n1^2 + 12*d^2*n1^2 + 96*n3 - 560*d*n3 + 
      422*d^2*n3 - 85*d^3*n3 - 496*n1*n3 + 352*d*n1*n3 - 52*d^2*n1*n3 + 
      8*n1^2*n3 + 12*d*n1^2*n3 + 784*n3^2 - 844*d*n3^2 + 210*d^2*n3^2 - 
      72*n1*n3^2 - 8*d*n1*n3^2 - 24*n1^2*n3^2 + 368*n3^3 - 160*d*n3^3 + 
      32*n1*n3^3 + 32*n3^4 - 864*n4 + 744*d*n4 - 160*d^2*n4 - 704*n1*n4 + 
      548*d*n1*n4 - 96*d^2*n1*n4 + 56*n1^2*n4 - 16*d*n1^2*n4 + 752*n3*n4 - 
      1008*d*n3*n4 + 284*d^2*n3*n4 - 320*n1*n3*n4 + 64*d*n1*n3*n4 - 
      16*n1^2*n3*n4 + 968*n3^2*n4 - 444*d*n3^2*n4 + 56*n1*n3^2*n4 + 
      144*n3^3*n4 - 384*n4^2 + 160*d*n4^2 - 264*n1*n4^2 + 84*d*n1*n4^2 + 
      8*n1^2*n4^2 + 584*n3*n4^2 - 300*d*n3*n4^2 + 208*n3^2*n4^2 - 48*n4^3 - 
      24*n1*n4^3 + 96*n3*n4^3 - 672*n5 + 720*d*n5 - 238*d^2*n5 + 23*d^3*n5 + 
      92*d*n1*n5 - 32*d^2*n1*n5 + 112*n1^2*n5 - 28*d*n1^2*n5 - 640*n3*n5 + 
      336*d*n3*n5 - 26*d^2*n3*n5 - 192*n1*n3*n5 + 80*d*n1*n3*n5 + 
      8*n1^2*n3*n5 - 24*n3^2*n5 - 44*d*n3^2*n5 - 40*n1*n3^2*n5 + 48*n3^3*n5 - 
      832*n4*n5 + 524*d*n4*n5 - 72*d^2*n4*n5 - 168*n1*n4*n5 + 80*d*n1*n4*n5 - 
      256*n3*n4*n5 + 8*d*n3*n4*n5 - 80*n1*n3*n4*n5 + 96*n3^2*n4*n5 - 
      272*n4^2*n5 + 72*d*n4^2*n5 - 32*n1*n4^2*n5 + 24*n3*n4^2*n5 - 
      24*n4^3*n5 - 368*n5^2 + 304*d*n5^2 - 60*d^2*n5^2 + 104*n1*n5^2 - 
      20*d*n1*n5^2 + 40*n1^2*n5^2 - 344*n3*n5^2 + 124*d*n3*n5^2 - 
      32*n1*n3*n5^2 - 48*n3^2*n5^2 - 360*n4*n5^2 + 132*d*n4*n5^2 - 
      16*n1*n4*n5^2 - 112*n3*n4*n5^2 - 64*n4^2*n5^2 - 56*n5^3 + 28*d*n5^3 + 
      24*n1*n5^3 - 40*n3*n5^3 - 40*n4*n5^3)*j[p4a, n1, 0, n3, n4, 1 + n5, 1, 
      0, 1, 0, 1, 1, 0, 0, 1])/(2*(-3 + d - n4 - n5)*
     (-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 
      48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 
      60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 
      260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 16*n1^2*n4 - 
      128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 28*d*n4^2 - 
      48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 
      8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 16*n3^2*n5 - 
      88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 8*n4^2*n5 - 
      8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-96 + 272*d - 182*d^2 + 35*d^3 - 96*n1 + 44*d*n1 - 4*d^2*n1 - 4*d*n1^2 - 
      336*n3 + 412*d*n3 - 110*d^2*n3 + 24*n1*n3 - 8*d*n1*n3 + 8*n1^2*n3 - 
      240*n3^2 + 112*d*n3^2 - 32*n3^3 - 368*n4 + 456*d*n4 - 124*d^2*n4 - 
      8*n1*n4 + 4*d*n1*n4 + 8*n1^2*n4 - 520*n3*n4 + 252*d*n3*n4 - 
      8*n1*n3*n4 - 112*n3^2*n4 - 280*n4^2 + 140*d*n4^2 - 8*n1*n4^2 - 
      128*n3*n4^2 - 48*n4^3 + 256*n5 - 184*d*n5 + 28*d^2*n5 - 104*n1*n5 + 
      28*d*n1*n5 - 8*n1^2*n5 + 152*n3*n5 - 28*d*n3*n5 + 8*n1*n3*n5 - 
      16*n3^2*n5 + 176*n4*n5 - 40*d*n4*n5 - 16*n3*n4*n5 + 72*n5^2 - 
      36*d*n5^2 - 24*n1*n5^2 + 48*n3*n5^2 + 48*n4*n5^2)*
     j[p4a, n1, 0, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    (2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
      92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-480 + 736*d - 366*d^2 + 59*d^3 + 48*n1 - 52*d*n1 + 12*d^2*n1 - 
      4*d*n1^2 - 288*n3 + 192*d*n3 + 30*d^2*n3 - 24*d^3*n3 - 96*n1*n3 + 
      80*d*n1*n3 - 16*d^2*n1*n3 + 8*n1^2*n3 + 48*n3^2 - 116*d*n3^2 + 
      44*d^2*n3^2 - 24*n1*n3^2 + 8*d*n1*n3^2 + 16*n3^3 - 16*d*n3^3 - 304*n4 + 
      100*d*n4 + 124*d^2*n4 - 46*d^3*n4 - 80*n1*n4 + 84*d*n1*n4 - 
      20*d^2*n1*n4 + 8*n1^2*n4 + 352*n3*n4 - 552*d*n3*n4 + 178*d^2*n3*n4 - 
      112*n1*n3*n4 + 44*d*n1*n3*n4 + 264*n3^2*n4 - 152*d*n3^2*n4 - 
      16*n1*n3^2*n4 + 32*n3^3*n4 + 352*n4^2 - 484*d*n4^2 + 146*d^2*n4^2 - 
      88*n1*n4^2 + 36*d*n1*n4^2 + 536*n3*n4^2 - 284*d*n3*n4^2 - 
      32*n1*n3*n4^2 + 112*n3^2*n4^2 + 288*n4^3 - 148*d*n4^3 - 16*n1*n4^3 + 
      128*n3*n4^3 + 48*n4^4 + 512*n5 - 536*d*n5 + 186*d^2*n5 - 23*d^3*n5 - 
      248*n1*n5 + 168*d*n1*n5 - 32*d^2*n1*n5 - 8*n1^2*n5 - 4*d*n1^2*n5 + 
      576*n3*n5 - 400*d*n3*n5 + 78*d^2*n3*n5 - 144*n1*n3*n5 + 64*d*n1*n3*n5 + 
      8*n1^2*n3*n5 + 184*n3^2*n5 - 76*d*n3^2*n5 - 24*n1*n3^2*n5 + 
      16*n3^3*n5 + 760*n4*n5 - 576*d*n4*n5 + 120*d^2*n4*n5 - 200*n1*n4*n5 + 
      84*d*n1*n4*n5 + 8*n1^2*n4*n5 + 576*n3*n4*n5 - 248*d*n3*n4*n5 - 
      72*n1*n3*n4*n5 + 104*n3^2*n4*n5 + 424*n4^2*n5 - 188*d*n4^2*n5 - 
      48*n1*n4^2*n5 + 176*n3*n4^2*n5 + 88*n4^3*n5 + 392*n5^2 - 316*d*n5^2 + 
      60*d^2*n5^2 - 144*n1*n5^2 + 44*d*n1*n5^2 - 8*n1^2*n5^2 + 328*n3*n5^2 - 
      112*d*n3*n5^2 - 16*n1*n3*n5^2 + 40*n3^2*n5^2 + 384*n4*n5^2 - 
      140*d*n4*n5^2 - 40*n1*n4*n5^2 + 120*n3*n4*n5^2 + 80*n4^2*n5^2 + 
      56*n5^3 - 28*d*n5^3 - 24*n1*n5^3 + 40*n3*n5^3 + 40*n4*n5^3)*
     j[p4a, n1, 0, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 0])/
    (2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
      92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-768 + 1056*d - 528*d^2 + 114*d^3 - 9*d^4 + 768*n1 - 816*d*n1 + 
      284*d^2*n1 - 32*d^3*n1 - 16*d*n1^2 + 4*d^2*n1^2 - 832*n3 + 800*d*n3 - 
      252*d^2*n3 + 26*d^3*n3 + 352*n1*n3 - 216*d*n1*n3 + 32*d^2*n1*n3 + 
      32*n1^2*n3 - 8*d*n1^2*n3 - 192*n3^2 + 112*d*n3^2 - 16*d^2*n3^2 - 
      1088*n4 + 1072*d*n4 - 344*d^2*n4 + 36*d^3*n4 + 608*n1*n4 - 
      392*d*n1*n4 + 60*d^2*n1*n4 + 32*n1^2*n4 - 8*d*n1^2*n4 - 672*n3*n4 + 
      408*d*n3*n4 - 60*d^2*n3*n4 + 96*n1*n3*n4 - 24*d*n1*n3*n4 - 64*n3^2*n4 + 
      16*d*n3^2*n4 - 480*n4^2 + 296*d*n4^2 - 44*d^2*n4^2 + 96*n1*n4^2 - 
      24*d*n1*n4^2 - 128*n3*n4^2 + 32*d*n3*n4^2 - 64*n4^3 + 16*d*n4^3 - 
      960*n5 + 1056*d*n5 - 372*d^2*n5 + 42*d^3*n5 + 672*n1*n5 - 496*d*n1*n5 + 
      92*d^2*n1*n5 - 32*n1^2*n5 - 896*n3*n5 + 592*d*n3*n5 - 96*d^2*n3*n5 + 
      272*n1*n3*n5 - 88*d*n1*n3*n5 + 16*n1^2*n3*n5 - 160*n3^2*n5 + 
      48*d*n3^2*n5 - 1120*n4*n5 + 768*d*n4*n5 - 128*d^2*n4*n5 + 
      432*n1*n4*n5 - 152*d*n1*n4*n5 + 16*n1^2*n4*n5 - 528*n3*n4*n5 + 
      168*d*n3*n4*n5 + 48*n1*n3*n4*n5 - 32*n3^2*n4*n5 - 368*n4^2*n5 + 
      120*d*n4^2*n5 + 48*n1*n4^2*n5 - 64*n3*n4^2*n5 - 32*n4^3*n5 - 384*n5^2 + 
      312*d*n5^2 - 60*d^2*n5^2 + 176*n1*n5^2 - 64*d*n1*n5^2 - 16*n1^2*n5^2 - 
      304*n3*n5^2 + 104*d*n3*n5^2 + 48*n1*n3*n5^2 - 32*n3^2*n5^2 - 
      352*n4*n5^2 + 128*d*n4*n5^2 + 64*n1*n4*n5^2 - 96*n3*n4*n5^2 - 
      64*n4^2*n5^2 - 48*n5^3 + 24*d*n5^3 + 16*n1*n5^3 - 32*n3*n5^3 - 
      32*n4*n5^3)*j[p4a, n1, 0, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
      92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) - 
   (2*(32 - 28*d + 6*d^2 - 12*n1 + 4*d*n1 + 28*n3 - 11*d*n3 - 2*n1*n3 + 
      4*n3^2 + 32*n4 - 13*d*n4 - 2*n1*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5)*j[p4a, n1, 0, n3, n4, 1 + n5, 1, 
      0, 1, 0, 1, 1, 0, 2, 0])/(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
     92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-96 + 144*d - 70*d^2 + 11*d^3 - 4*d*n1 + 2*d^2*n1 - 128*n3 + 124*d*n3 - 
      29*d^2*n3 + 8*n1*n3 - 6*d*n1*n3 - 56*n3^2 + 26*d*n3^2 + 4*n1*n3^2 - 
      8*n3^3 - 160*n4 + 152*d*n4 - 35*d^2*n4 + 8*n1*n4 - 6*d*n1*n4 - 
      136*n3*n4 + 62*d*n3*n4 + 8*n1*n3*n4 - 28*n3^2*n4 - 80*n4^2 + 
      36*d*n4^2 + 4*n1*n4^2 - 32*n3*n4^2 - 12*n4^3 + 8*d*n5 - 4*d^2*n5 - 
      8*n1*n5 + 4*d*n1*n5 - 8*n3*n5 + 8*d*n3*n5 - 4*n1*n3*n5 - 4*n3^2*n5 - 
      16*n4*n5 + 12*d*n4*n5 - 4*n1*n4*n5 - 12*n3*n4*n5 - 8*n4^2*n5 + 8*n5^2 - 
      4*d*n5^2 + 4*n3*n5^2 + 4*n4*n5^2)*j[p4a, n1, 0, n3, n4, 1 + n5, 1, 0, 
      1, 0, 2, 0, -1, 1, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96 - 144*d + 70*d^2 - 11*d^3 + 4*d*n1 - 2*d^2*n1 + 128*n3 - 124*d*n3 + 
      29*d^2*n3 - 8*n1*n3 + 6*d*n1*n3 + 56*n3^2 - 26*d*n3^2 - 4*n1*n3^2 + 
      8*n3^3 + 160*n4 - 152*d*n4 + 35*d^2*n4 - 8*n1*n4 + 6*d*n1*n4 + 
      136*n3*n4 - 62*d*n3*n4 - 8*n1*n3*n4 + 28*n3^2*n4 + 80*n4^2 - 
      36*d*n4^2 - 4*n1*n4^2 + 32*n3*n4^2 + 12*n4^3 - 8*d*n5 + 4*d^2*n5 + 
      8*n1*n5 - 4*d*n1*n5 + 8*n3*n5 - 8*d*n3*n5 + 4*n1*n3*n5 + 4*n3^2*n5 + 
      16*n4*n5 - 12*d*n4*n5 + 4*n1*n4*n5 + 12*n3*n4*n5 + 8*n4^2*n5 - 8*n5^2 + 
      4*d*n5^2 - 4*n3*n5^2 - 4*n4*n5^2)*j[p4a, n1, 0, n3, n4, 1 + n5, 1, 0, 
      1, 0, 2, 0, 0, 1, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-288 + 448*d - 226*d^2 + 37*d^3 + 48*n1 - 44*d*n1 + 8*d^2*n1 - 
      4*d*n1^2 - 416*n3 + 408*d*n3 - 96*d^2*n3 + 32*n1*n3 - 4*d*n1*n3 + 
      8*n1^2*n3 - 176*n3^2 + 76*d*n3^2 - 8*n1*n3^2 - 16*n3^3 - 560*n4 + 
      548*d*n4 - 130*d^2*n4 + 48*n1*n4 - 8*d*n1*n4 + 8*n1^2*n4 - 480*n3*n4 + 
      212*d*n3*n4 - 16*n1*n3*n4 - 72*n3^2*n4 - 320*n4^2 + 144*d*n4^2 - 
      8*n1*n4^2 - 104*n3*n4^2 - 48*n4^3 + 32*n5 - 8*d*n5 - 4*d^2*n5 + 
      8*n1*n5 - 12*d*n1*n5 - 8*n1^2*n5 - 16*n3*n5 + 24*d*n3*n5 + 
      24*n1*n3*n5 - 24*n3^2*n5 - 24*n4*n5 + 28*d*n4*n5 + 32*n1*n4*n5 - 
      56*n3*n4*n5 - 32*n4^2*n5 + 24*n5^2 - 12*d*n5^2 - 8*n1*n5^2 + 
      16*n3*n5^2 + 16*n4*n5^2)*j[p4a, n1, 0, n3, n4, 1 + n5, 1, 0, 2, 0, 1, 
      0, -1, 1, 1])/(2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96 - 144*d + 70*d^2 - 11*d^3 + 4*d*n1 - 2*d^2*n1 + 128*n3 - 124*d*n3 + 
      29*d^2*n3 - 8*n1*n3 + 6*d*n1*n3 + 56*n3^2 - 26*d*n3^2 - 4*n1*n3^2 + 
      8*n3^3 + 160*n4 - 152*d*n4 + 35*d^2*n4 - 8*n1*n4 + 6*d*n1*n4 + 
      136*n3*n4 - 62*d*n3*n4 - 8*n1*n3*n4 + 28*n3^2*n4 + 80*n4^2 - 
      36*d*n4^2 - 4*n1*n4^2 + 32*n3*n4^2 + 12*n4^3 - 8*d*n5 + 4*d^2*n5 + 
      8*n1*n5 - 4*d*n1*n5 + 8*n3*n5 - 8*d*n3*n5 + 4*n1*n3*n5 + 4*n3^2*n5 + 
      16*n4*n5 - 12*d*n4*n5 + 4*n1*n4*n5 + 12*n3*n4*n5 + 8*n4^2*n5 - 8*n5^2 + 
      4*d*n5^2 - 4*n3*n5^2 - 4*n4*n5^2)*j[p4a, n1, 0, n3, n4, 1 + n5, 2, -1, 
      0, 0, 1, 1, 0, 1, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((288 - 448*d + 226*d^2 - 37*d^3 - 48*n1 + 44*d*n1 - 8*d^2*n1 + 4*d*n1^2 + 
      416*n3 - 408*d*n3 + 96*d^2*n3 - 32*n1*n3 + 4*d*n1*n3 - 8*n1^2*n3 + 
      176*n3^2 - 76*d*n3^2 + 8*n1*n3^2 + 16*n3^3 + 560*n4 - 548*d*n4 + 
      130*d^2*n4 - 48*n1*n4 + 8*d*n1*n4 - 8*n1^2*n4 + 480*n3*n4 - 
      212*d*n3*n4 + 16*n1*n3*n4 + 72*n3^2*n4 + 320*n4^2 - 144*d*n4^2 + 
      8*n1*n4^2 + 104*n3*n4^2 + 48*n4^3 - 32*n5 + 8*d*n5 + 4*d^2*n5 - 
      8*n1*n5 + 12*d*n1*n5 + 8*n1^2*n5 + 16*n3*n5 - 24*d*n3*n5 - 
      24*n1*n3*n5 + 24*n3^2*n5 + 24*n4*n5 - 28*d*n4*n5 - 32*n1*n4*n5 + 
      56*n3*n4*n5 + 32*n4^2*n5 - 24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 
      16*n3*n5^2 - 16*n4*n5^2)*j[p4a, n1, 0, n3, n4, 1 + n5, 2, -1, 1, 0, 0, 
      1, 0, 1, 1])/(2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((480 - 736*d + 366*d^2 - 59*d^3 - 48*n1 + 52*d*n1 - 12*d^2*n1 + 
      4*d*n1^2 + 672*n3 - 656*d*n3 + 154*d^2*n3 - 48*n1*n3 + 16*d*n1*n3 - 
      8*n1^2*n3 + 288*n3^2 - 128*d*n3^2 + 32*n3^3 + 880*n4 - 852*d*n4 + 
      200*d^2*n4 - 64*n1*n4 + 20*d*n1*n4 - 8*n1^2*n4 + 752*n3*n4 - 
      336*d*n3*n4 + 128*n3^2*n4 + 480*n4^2 - 216*d*n4^2 + 168*n3*n4^2 + 
      72*n4^3 - 32*n5 - 8*d*n5 + 12*d^2*n5 + 8*n1*n5 + 4*d*n1*n5 + 
      8*n1^2*n5 + 32*n3*n5 - 40*d*n3*n5 - 16*n1*n3*n5 + 32*n3^2*n5 + 
      56*n4*n5 - 52*d*n4*n5 - 24*n1*n4*n5 + 80*n3*n4*n5 + 48*n4^2*n5 - 
      40*n5^2 + 20*d*n5^2 + 8*n1*n5^2 - 24*n3*n5^2 - 24*n4*n5^2)*
     j[p4a, n1, 0, n3, n4, 1 + n5, 2, 0, 0, -1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
      92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-96 + 144*d - 70*d^2 + 11*d^3 - 4*d*n1 + 2*d^2*n1 - 128*n3 + 124*d*n3 - 
      29*d^2*n3 + 8*n1*n3 - 6*d*n1*n3 - 56*n3^2 + 26*d*n3^2 + 4*n1*n3^2 - 
      8*n3^3 - 160*n4 + 152*d*n4 - 35*d^2*n4 + 8*n1*n4 - 6*d*n1*n4 - 
      136*n3*n4 + 62*d*n3*n4 + 8*n1*n3*n4 - 28*n3^2*n4 - 80*n4^2 + 
      36*d*n4^2 + 4*n1*n4^2 - 32*n3*n4^2 - 12*n4^3 + 8*d*n5 - 4*d^2*n5 - 
      8*n1*n5 + 4*d*n1*n5 - 8*n3*n5 + 8*d*n3*n5 - 4*n1*n3*n5 - 4*n3^2*n5 - 
      16*n4*n5 + 12*d*n4*n5 - 4*n1*n4*n5 - 12*n3*n4*n5 - 8*n4^2*n5 + 8*n5^2 - 
      4*d*n5^2 + 4*n3*n5^2 + 4*n4*n5^2)*j[p4a, n1, 0, n3, n4, 1 + n5, 2, 0, 
      0, 0, 1, 1, -1, 1, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((288 - 448*d + 226*d^2 - 37*d^3 - 48*n1 + 44*d*n1 - 8*d^2*n1 + 4*d*n1^2 + 
      416*n3 - 408*d*n3 + 96*d^2*n3 - 32*n1*n3 + 4*d*n1*n3 - 8*n1^2*n3 + 
      176*n3^2 - 76*d*n3^2 + 8*n1*n3^2 + 16*n3^3 + 560*n4 - 548*d*n4 + 
      130*d^2*n4 - 48*n1*n4 + 8*d*n1*n4 - 8*n1^2*n4 + 480*n3*n4 - 
      212*d*n3*n4 + 16*n1*n3*n4 + 72*n3^2*n4 + 320*n4^2 - 144*d*n4^2 + 
      8*n1*n4^2 + 104*n3*n4^2 + 48*n4^3 - 32*n5 + 8*d*n5 + 4*d^2*n5 - 
      8*n1*n5 + 12*d*n1*n5 + 8*n1^2*n5 + 16*n3*n5 - 24*d*n3*n5 - 
      24*n1*n3*n5 + 24*n3^2*n5 + 24*n4*n5 - 28*d*n4*n5 - 32*n1*n4*n5 + 
      56*n3*n4*n5 + 32*n4^2*n5 - 24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 
      16*n3*n5^2 - 16*n4*n5^2)*j[p4a, n1, 0, n3, n4, 1 + n5, 2, 0, 1, -1, 1, 
      1, 0, 0, 1])/(2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((288 - 448*d + 226*d^2 - 37*d^3 - 48*n1 + 44*d*n1 - 8*d^2*n1 + 4*d*n1^2 + 
      416*n3 - 408*d*n3 + 96*d^2*n3 - 32*n1*n3 + 4*d*n1*n3 - 8*n1^2*n3 + 
      176*n3^2 - 76*d*n3^2 + 8*n1*n3^2 + 16*n3^3 + 560*n4 - 548*d*n4 + 
      130*d^2*n4 - 48*n1*n4 + 8*d*n1*n4 - 8*n1^2*n4 + 480*n3*n4 - 
      212*d*n3*n4 + 16*n1*n3*n4 + 72*n3^2*n4 + 320*n4^2 - 144*d*n4^2 + 
      8*n1*n4^2 + 104*n3*n4^2 + 48*n4^3 - 32*n5 + 8*d*n5 + 4*d^2*n5 - 
      8*n1*n5 + 12*d*n1*n5 + 8*n1^2*n5 + 16*n3*n5 - 24*d*n3*n5 - 
      24*n1*n3*n5 + 24*n3^2*n5 + 24*n4*n5 - 28*d*n4*n5 - 32*n1*n4*n5 + 
      56*n3*n4*n5 + 32*n4^2*n5 - 24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 
      16*n3*n5^2 - 16*n4*n5^2)*j[p4a, n1, 0, n3, n4, 1 + n5, 2, 0, 1, -1, 1, 
      1, 0, 1, 0])/(2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-288 + 448*d - 226*d^2 + 37*d^3 + 48*n1 - 44*d*n1 + 8*d^2*n1 - 
      4*d*n1^2 - 416*n3 + 408*d*n3 - 96*d^2*n3 + 32*n1*n3 - 4*d*n1*n3 + 
      8*n1^2*n3 - 176*n3^2 + 76*d*n3^2 - 8*n1*n3^2 - 16*n3^3 - 560*n4 + 
      548*d*n4 - 130*d^2*n4 + 48*n1*n4 - 8*d*n1*n4 + 8*n1^2*n4 - 480*n3*n4 + 
      212*d*n3*n4 - 16*n1*n3*n4 - 72*n3^2*n4 - 320*n4^2 + 144*d*n4^2 - 
      8*n1*n4^2 - 104*n3*n4^2 - 48*n4^3 + 32*n5 - 8*d*n5 - 4*d^2*n5 + 
      8*n1*n5 - 12*d*n1*n5 - 8*n1^2*n5 - 16*n3*n5 + 24*d*n3*n5 + 
      24*n1*n3*n5 - 24*n3^2*n5 - 24*n4*n5 + 28*d*n4*n5 + 32*n1*n4*n5 - 
      56*n3*n4*n5 - 32*n4^2*n5 + 24*n5^2 - 12*d*n5^2 - 8*n1*n5^2 + 
      16*n3*n5^2 + 16*n4*n5^2)*j[p4a, n1, 0, n3, n4, 1 + n5, 2, 0, 1, 0, 0, 
      1, -1, 1, 1])/(2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) - 
   ((1 + n5)*(96 - 176*d + 98*d^2 - 17*d^3 + 16*d*n1 - 6*d^2*n1 + 192*n3 - 
      208*d*n3 + 52*d^2*n3 - 32*n1*n3 + 16*d*n1*n3 + 112*n3^2 - 52*d*n3^2 - 
      8*n1*n3^2 + 16*n3^3 + 224*n4 - 240*d*n4 + 60*d^2*n4 - 32*n1*n4 + 
      16*d*n1*n4 + 256*n3*n4 - 120*d*n3*n4 - 16*n1*n3*n4 + 56*n3^2*n4 + 
      144*n4^2 - 68*d*n4^2 - 8*n1*n4^2 + 64*n3*n4^2 + 24*n4^3 - 64*n5 + 
      40*d*n5 - 4*d^2*n5 + 32*n1*n5 - 8*d*n1*n5 - 32*n3*n5 + 8*n3^2*n5 - 
      32*n4*n5 + 16*n3*n4*n5 + 8*n4^2*n5 - 24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 
      16*n3*n5^2 - 16*n4*n5^2)*j[p4a, n1, 0, n3, n4, 2 + n5, 0, 0, 1, -1, 1, 
      1, 0, 1, 1])/((3 - d + n4 + n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) - 
   ((1 + n5)*(96 - 144*d + 70*d^2 - 11*d^3 + 4*d*n1 - 2*d^2*n1 + 128*n3 - 
      124*d*n3 + 29*d^2*n3 - 8*n1*n3 + 6*d*n1*n3 + 56*n3^2 - 26*d*n3^2 - 
      4*n1*n3^2 + 8*n3^3 + 160*n4 - 152*d*n4 + 35*d^2*n4 - 8*n1*n4 + 
      6*d*n1*n4 + 136*n3*n4 - 62*d*n3*n4 - 8*n1*n3*n4 + 28*n3^2*n4 + 
      80*n4^2 - 36*d*n4^2 - 4*n1*n4^2 + 32*n3*n4^2 + 12*n4^3 - 8*d*n5 + 
      4*d^2*n5 + 8*n1*n5 - 4*d*n1*n5 + 8*n3*n5 - 8*d*n3*n5 + 4*n1*n3*n5 + 
      4*n3^2*n5 + 16*n4*n5 - 12*d*n4*n5 + 4*n1*n4*n5 + 12*n3*n4*n5 + 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 - 4*n3*n5^2 - 4*n4*n5^2)*
     j[p4a, n1, 0, n3, n4, 2 + n5, 1, -1, 1, 0, 1, 1, 0, 0, 1])/
    ((3 - d + n4 + n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((1 + n5)*(96 - 144*d + 70*d^2 - 11*d^3 + 4*d*n1 - 2*d^2*n1 + 128*n3 - 
      124*d*n3 + 29*d^2*n3 - 8*n1*n3 + 6*d*n1*n3 + 56*n3^2 - 26*d*n3^2 - 
      4*n1*n3^2 + 8*n3^3 + 160*n4 - 152*d*n4 + 35*d^2*n4 - 8*n1*n4 + 
      6*d*n1*n4 + 136*n3*n4 - 62*d*n3*n4 - 8*n1*n3*n4 + 28*n3^2*n4 + 
      80*n4^2 - 36*d*n4^2 - 4*n1*n4^2 + 32*n3*n4^2 + 12*n4^3 - 8*d*n5 + 
      4*d^2*n5 + 8*n1*n5 - 4*d*n1*n5 + 8*n3*n5 - 8*d*n3*n5 + 4*n1*n3*n5 + 
      4*n3^2*n5 + 16*n4*n5 - 12*d*n4*n5 + 4*n1*n4*n5 + 12*n3*n4*n5 + 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 - 4*n3*n5^2 - 4*n4*n5^2)*
     j[p4a, n1, 0, n3, n4, 2 + n5, 1, -1, 1, 0, 1, 1, 0, 1, 0])/
    ((3 - d + n4 + n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((1 + n5)*(-480 + 480*d - 142*d^2 + 11*d^3 + 240*n1 - 148*d*n1 + 
      24*d^2*n1 + 4*d*n1^2 - 256*n3 + 80*d*n3 + 8*d^2*n3 + 16*n1*n3 - 
      12*d*n1*n3 - 8*n1^2*n3 + 80*n3^2 - 44*d*n3^2 + 8*n1*n3^2 + 16*n3^3 - 
      464*n4 + 244*d*n4 - 22*d^2*n4 + 96*n1*n4 - 40*d*n1*n4 - 8*n1^2*n4 + 
      16*n3*n4 - 44*d*n3*n4 + 32*n1*n3*n4 + 40*n3^2*n4 - 80*n4^2 + 8*d*n4^2 + 
      24*n1*n4^2 + 24*n3*n4^2 - 480*n5 + 392*d*n5 - 76*d^2*n5 + 184*n1*n5 - 
      52*d*n1*n5 + 8*n1^2*n5 - 352*n3*n5 + 112*d*n3*n5 - 8*n1*n3*n5 - 
      8*n3^2*n5 - 440*n4*n5 + 156*d*n4*n5 + 16*n1*n4*n5 - 72*n3*n4*n5 - 
      64*n4^2*n5 - 88*n5^2 + 44*d*n5^2 + 40*n1*n5^2 - 64*n3*n5^2 - 
      64*n4*n5^2)*j[p4a, n1, 0, n3, n4, 2 + n5, 1, 0, 1, -1, 1, 1, 0, 0, 1])/
    (2*(3 - d + n4 + n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) - 
   ((1 + n5)*(-480 + 480*d - 142*d^2 + 11*d^3 + 240*n1 - 148*d*n1 + 
      24*d^2*n1 + 4*d*n1^2 - 256*n3 + 80*d*n3 + 8*d^2*n3 + 16*n1*n3 - 
      12*d*n1*n3 - 8*n1^2*n3 + 80*n3^2 - 44*d*n3^2 + 8*n1*n3^2 + 16*n3^3 - 
      464*n4 + 244*d*n4 - 22*d^2*n4 + 96*n1*n4 - 40*d*n1*n4 - 8*n1^2*n4 + 
      16*n3*n4 - 44*d*n3*n4 + 32*n1*n3*n4 + 40*n3^2*n4 - 80*n4^2 + 8*d*n4^2 + 
      24*n1*n4^2 + 24*n3*n4^2 - 480*n5 + 392*d*n5 - 76*d^2*n5 + 184*n1*n5 - 
      52*d*n1*n5 + 8*n1^2*n5 - 352*n3*n5 + 112*d*n3*n5 - 8*n1*n3*n5 - 
      8*n3^2*n5 - 440*n4*n5 + 156*d*n4*n5 + 16*n1*n4*n5 - 72*n3*n4*n5 - 
      64*n4^2*n5 - 88*n5^2 + 44*d*n5^2 + 40*n1*n5^2 - 64*n3*n5^2 - 
      64*n4*n5^2)*j[p4a, n1, 0, n3, n4, 2 + n5, 1, 0, 1, -1, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) - 
   (n4*(96 - 80*d + 14*d^2 + d^3 - 96*n1 + 76*d*n1 - 16*d^2*n1 - 4*d*n1^2 + 
      48*n3 - 4*d*n3 - 6*d^2*n3 - 40*n1*n3 + 24*d*n1*n3 + 8*n1^2*n3 - 
      16*n3^2 + 8*d*n3^2 - 16*n1*n3^2 + 80*n4 - 24*d*n4 - 4*d^2*n4 - 
      72*n1*n4 + 36*d*n1*n4 + 8*n1^2*n4 - 8*n3*n4 + 12*d*n3*n4 - 
      40*n1*n3*n4 + 8*n4^2 + 4*d*n4^2 - 24*n1*n4^2 + 128*n5 - 104*d*n5 + 
      20*d^2*n5 - 40*n1*n5 + 12*d*n1*n5 - 8*n1^2*n5 + 88*n3*n5 - 28*d*n3*n5 + 
      8*n1*n3*n5 + 112*n4*n5 - 40*d*n4*n5 + 16*n3*n4*n5 + 16*n4^2*n5 + 
      24*n5^2 - 12*d*n5^2 - 8*n1*n5^2 + 16*n3*n5^2 + 16*n4*n5^2)*
     j[p4a, n1, 0, n3, 1 + n4, n5, 0, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((3 - d + n4 + n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   (n4*(96 - 80*d + 14*d^2 + d^3 - 96*n1 + 76*d*n1 - 16*d^2*n1 - 4*d*n1^2 + 
      48*n3 - 4*d*n3 - 6*d^2*n3 - 40*n1*n3 + 24*d*n1*n3 + 8*n1^2*n3 - 
      16*n3^2 + 8*d*n3^2 - 16*n1*n3^2 + 80*n4 - 24*d*n4 - 4*d^2*n4 - 
      72*n1*n4 + 36*d*n1*n4 + 8*n1^2*n4 - 8*n3*n4 + 12*d*n3*n4 - 
      40*n1*n3*n4 + 8*n4^2 + 4*d*n4^2 - 24*n1*n4^2 + 128*n5 - 104*d*n5 + 
      20*d^2*n5 - 40*n1*n5 + 12*d*n1*n5 - 8*n1^2*n5 + 88*n3*n5 - 28*d*n3*n5 + 
      8*n1*n3*n5 + 112*n4*n5 - 40*d*n4*n5 + 16*n3*n4*n5 + 16*n4^2*n5 + 
      24*n5^2 - 12*d*n5^2 - 8*n1*n5^2 + 16*n3*n5^2 + 16*n4*n5^2)*
     j[p4a, n1, 0, n3, 1 + n4, n5, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) - 
   (n4*(96 - 80*d + 14*d^2 + d^3 - 96*n1 + 76*d*n1 - 16*d^2*n1 - 4*d*n1^2 + 
      48*n3 - 4*d*n3 - 6*d^2*n3 - 40*n1*n3 + 24*d*n1*n3 + 8*n1^2*n3 - 
      16*n3^2 + 8*d*n3^2 - 16*n1*n3^2 + 80*n4 - 24*d*n4 - 4*d^2*n4 - 
      72*n1*n4 + 36*d*n1*n4 + 8*n1^2*n4 - 8*n3*n4 + 12*d*n3*n4 - 
      40*n1*n3*n4 + 8*n4^2 + 4*d*n4^2 - 24*n1*n4^2 + 128*n5 - 104*d*n5 + 
      20*d^2*n5 - 40*n1*n5 + 12*d*n1*n5 - 8*n1^2*n5 + 88*n3*n5 - 28*d*n3*n5 + 
      8*n1*n3*n5 + 112*n4*n5 - 40*d*n4*n5 + 16*n3*n4*n5 + 16*n4^2*n5 + 
      24*n5^2 - 12*d*n5^2 - 8*n1*n5^2 + 16*n3*n5^2 + 16*n4*n5^2)*
     j[p4a, n1, 0, n3, 1 + n4, n5, 1, 0, 1, 0, 0, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   (n4*(96 - 80*d + 14*d^2 + d^3 - 96*n1 + 76*d*n1 - 16*d^2*n1 - 4*d*n1^2 + 
      48*n3 - 4*d*n3 - 6*d^2*n3 - 40*n1*n3 + 24*d*n1*n3 + 8*n1^2*n3 - 
      16*n3^2 + 8*d*n3^2 - 16*n1*n3^2 + 80*n4 - 24*d*n4 - 4*d^2*n4 - 
      72*n1*n4 + 36*d*n1*n4 + 8*n1^2*n4 - 8*n3*n4 + 12*d*n3*n4 - 
      40*n1*n3*n4 + 8*n4^2 + 4*d*n4^2 - 24*n1*n4^2 + 128*n5 - 104*d*n5 + 
      20*d^2*n5 - 40*n1*n5 + 12*d*n1*n5 - 8*n1^2*n5 + 88*n3*n5 - 28*d*n3*n5 + 
      8*n1*n3*n5 + 112*n4*n5 - 40*d*n4*n5 + 16*n3*n4*n5 + 16*n4^2*n5 + 
      24*n5^2 - 12*d*n5^2 - 8*n1*n5^2 + 16*n3*n5^2 + 16*n4*n5^2)*
     j[p4a, n1, 0, n3, 1 + n4, n5, 1, 0, 1, 0, 1, 0, 0, 1, 1])/
    (2*(3 - d + n4 + n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) - 
   (n4*(96 - 80*d + 14*d^2 + d^3 - 96*n1 + 76*d*n1 - 16*d^2*n1 - 4*d*n1^2 + 
      48*n3 - 4*d*n3 - 6*d^2*n3 - 40*n1*n3 + 24*d*n1*n3 + 8*n1^2*n3 - 
      16*n3^2 + 8*d*n3^2 - 16*n1*n3^2 + 80*n4 - 24*d*n4 - 4*d^2*n4 - 
      72*n1*n4 + 36*d*n1*n4 + 8*n1^2*n4 - 8*n3*n4 + 12*d*n3*n4 - 
      40*n1*n3*n4 + 8*n4^2 + 4*d*n4^2 - 24*n1*n4^2 + 128*n5 - 104*d*n5 + 
      20*d^2*n5 - 40*n1*n5 + 12*d*n1*n5 - 8*n1^2*n5 + 88*n3*n5 - 28*d*n3*n5 + 
      8*n1*n3*n5 + 112*n4*n5 - 40*d*n4*n5 + 16*n3*n4*n5 + 16*n4^2*n5 + 
      24*n5^2 - 12*d*n5^2 - 8*n1*n5^2 + 16*n3*n5^2 + 16*n4*n5^2)*
     j[p4a, n1, 0, n3, 1 + n4, n5, 1, 0, 1, 0, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   (2*n4*(96 - 128*d + 56*d^2 - 8*d^3 - 48*n1 + 46*d*n1 - 11*d^2*n1 - 
      2*d*n1^2 + 120*n3 - 106*d*n3 + 23*d^2*n3 - 36*n1*n3 + 20*d*n1*n3 + 
      4*n1^2*n3 + 48*n3^2 - 22*d*n3^2 - 12*n1*n3^2 + 8*n3^3 + 152*n4 - 
      132*d*n4 + 28*d^2*n4 - 52*n1*n4 + 26*d*n1*n4 + 4*n1^2*n4 + 124*n3*n4 - 
      54*d*n3*n4 - 28*n1*n3*n4 + 28*n3^2*n4 + 76*n4^2 - 32*d*n4^2 - 
      16*n1*n4^2 + 32*n3*n4^2 + 12*n4^3 + 32*n5 - 32*d*n5 + 8*d^2*n5 - 
      4*n1*n5 + 2*d*n1*n5 - 4*n1^2*n5 + 28*n3*n5 - 14*d*n3*n5 + 4*n1*n3*n5 + 
      4*n3^2*n5 + 40*n4*n5 - 20*d*n4*n5 + 16*n3*n4*n5 + 12*n4^2*n5)*
     j[p4a, n1, 0, n3, 1 + n4, 1 + n5, 0, -1, 1, 0, 1, 1, 0, 1, 1])/
    ((3 - d + n4 + n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) - 
   (n4*(96 - 176*d + 98*d^2 - 17*d^3 + 16*d*n1 - 6*d^2*n1 + 192*n3 - 
      208*d*n3 + 52*d^2*n3 - 32*n1*n3 + 16*d*n1*n3 + 112*n3^2 - 52*d*n3^2 - 
      8*n1*n3^2 + 16*n3^3 + 224*n4 - 240*d*n4 + 60*d^2*n4 - 32*n1*n4 + 
      16*d*n1*n4 + 256*n3*n4 - 120*d*n3*n4 - 16*n1*n3*n4 + 56*n3^2*n4 + 
      144*n4^2 - 68*d*n4^2 - 8*n1*n4^2 + 64*n3*n4^2 + 24*n4^3 - 64*n5 + 
      40*d*n5 - 4*d^2*n5 + 32*n1*n5 - 8*d*n1*n5 - 32*n3*n5 + 8*n3^2*n5 - 
      32*n4*n5 + 16*n3*n4*n5 + 8*n4^2*n5 - 24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 
      16*n3*n5^2 - 16*n4*n5^2)*j[p4a, n1, 0, n3, 1 + n4, 1 + n5, 0, 0, 1, -1, 
      1, 1, 0, 1, 1])/((3 - d + n4 + n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) - 
   (n4*(288 - 432*d + 210*d^2 - 33*d^3 - 96*n1 + 108*d*n1 - 28*d^2*n1 - 
      4*d*n1^2 + 432*n3 - 420*d*n3 + 98*d^2*n3 - 104*n1*n3 + 56*d*n1*n3 + 
      8*n1^2*n3 + 208*n3^2 - 96*d*n3^2 - 32*n1*n3^2 + 32*n3^3 + 528*n4 - 
      504*d*n4 + 116*d^2*n4 - 136*n1*n4 + 68*d*n1*n4 + 8*n1^2*n4 + 
      504*n3*n4 - 228*d*n3*n4 - 72*n1*n3*n4 + 112*n3^2*n4 + 296*n4^2 - 
      132*d*n4^2 - 40*n1*n4^2 + 128*n3*n4^2 + 48*n4^3 - 24*d*n5 + 12*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 - 8*n1^2*n5 + 24*n3*n5 - 28*d*n3*n5 + 8*n1*n3*n5 + 
      16*n3^2*n5 + 48*n4*n5 - 40*d*n4*n5 + 48*n3*n4*n5 + 32*n4^2*n5 - 
      24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 16*n3*n5^2 - 16*n4*n5^2)*
     j[p4a, n1, 0, n3, 1 + n4, 1 + n5, 1, -1, 0, 0, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   (n4*(96 - 80*d + 14*d^2 + d^3 - 96*n1 + 76*d*n1 - 16*d^2*n1 - 4*d*n1^2 + 
      48*n3 - 4*d*n3 - 6*d^2*n3 - 40*n1*n3 + 24*d*n1*n3 + 8*n1^2*n3 - 
      16*n3^2 + 8*d*n3^2 - 16*n1*n3^2 + 80*n4 - 24*d*n4 - 4*d^2*n4 - 
      72*n1*n4 + 36*d*n1*n4 + 8*n1^2*n4 - 8*n3*n4 + 12*d*n3*n4 - 
      40*n1*n3*n4 + 8*n4^2 + 4*d*n4^2 - 24*n1*n4^2 + 128*n5 - 104*d*n5 + 
      20*d^2*n5 - 40*n1*n5 + 12*d*n1*n5 - 8*n1^2*n5 + 88*n3*n5 - 28*d*n3*n5 + 
      8*n1*n3*n5 + 112*n4*n5 - 40*d*n4*n5 + 16*n3*n4*n5 + 16*n4^2*n5 + 
      24*n5^2 - 12*d*n5^2 - 8*n1*n5^2 + 16*n3*n5^2 + 16*n4*n5^2)*
     j[p4a, n1, 0, n3, 1 + n4, 1 + n5, 1, -1, 1, 0, 0, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) - 
   (n4*(96 - 80*d + 14*d^2 + d^3 - 96*n1 + 76*d*n1 - 16*d^2*n1 - 4*d*n1^2 + 
      48*n3 - 4*d*n3 - 6*d^2*n3 - 40*n1*n3 + 24*d*n1*n3 + 8*n1^2*n3 - 
      16*n3^2 + 8*d*n3^2 - 16*n1*n3^2 + 80*n4 - 24*d*n4 - 4*d^2*n4 - 
      72*n1*n4 + 36*d*n1*n4 + 8*n1^2*n4 - 8*n3*n4 + 12*d*n3*n4 - 
      40*n1*n3*n4 + 8*n4^2 + 4*d*n4^2 - 24*n1*n4^2 + 128*n5 - 104*d*n5 + 
      20*d^2*n5 - 40*n1*n5 + 12*d*n1*n5 - 8*n1^2*n5 + 88*n3*n5 - 28*d*n3*n5 + 
      8*n1*n3*n5 + 112*n4*n5 - 40*d*n4*n5 + 16*n3*n4*n5 + 16*n4^2*n5 + 
      24*n5^2 - 12*d*n5^2 - 8*n1*n5^2 + 16*n3*n5^2 + 16*n4*n5^2)*
     j[p4a, n1, 0, n3, 1 + n4, 1 + n5, 1, -1, 1, 0, 1, 0, 0, 1, 1])/
    (2*(3 - d + n4 + n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   (n4*(192 - 264*d + 120*d^2 - 18*d^3 - 72*n1 + 60*d*n1 - 12*d^2*n1 + 
      232*n3 - 206*d*n3 + 45*d^2*n3 - 36*n1*n3 + 14*d*n1*n3 + 80*n3^2 - 
      34*d*n3^2 - 4*n1*n3^2 + 8*n3^3 + 320*n4 - 286*d*n4 + 63*d^2*n4 - 
      60*n1*n4 + 22*d*n1*n4 + 236*n3*n4 - 100*d*n3*n4 - 12*n1*n3*n4 + 
      36*n3^2*n4 + 164*n4^2 - 70*d*n4^2 - 8*n1*n4^2 + 52*n3*n4^2 + 24*n4^3 + 
      48*n5 - 48*d*n5 + 12*d^2*n5 - 24*n1*n5 + 12*d*n1*n5 + 52*n3*n5 - 
      26*d*n3*n5 - 8*n1*n3*n5 + 12*n3^2*n5 + 68*n4*n5 - 34*d*n4*n5 - 
      16*n1*n4*n5 + 36*n3*n4*n5 + 24*n4^2*n5)*j[p4a, n1, 0, n3, 1 + n4, 
      1 + n5, 1, -1, 1, 0, 1, 1, 0, 1, 0])/((3 - d + n4 + n5)*
     (-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 
      48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 
      60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 
      260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 16*n1^2*n4 - 
      128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 28*d*n4^2 - 
      48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 
      8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 16*n3^2*n5 - 
      88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 8*n4^2*n5 - 
      8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   (n4*(96 - 176*d + 98*d^2 - 17*d^3 + 16*d*n1 - 6*d^2*n1 + 192*n3 - 
      208*d*n3 + 52*d^2*n3 - 32*n1*n3 + 16*d*n1*n3 + 112*n3^2 - 52*d*n3^2 - 
      8*n1*n3^2 + 16*n3^3 + 224*n4 - 240*d*n4 + 60*d^2*n4 - 32*n1*n4 + 
      16*d*n1*n4 + 256*n3*n4 - 120*d*n3*n4 - 16*n1*n3*n4 + 56*n3^2*n4 + 
      144*n4^2 - 68*d*n4^2 - 8*n1*n4^2 + 64*n3*n4^2 + 24*n4^3 - 64*n5 + 
      40*d*n5 - 4*d^2*n5 + 32*n1*n5 - 8*d*n1*n5 - 32*n3*n5 + 8*n3^2*n5 - 
      32*n4*n5 + 16*n3*n4*n5 + 8*n4^2*n5 - 24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 
      16*n3*n5^2 - 16*n4*n5^2)*j[p4a, n1, 0, n3, 1 + n4, 1 + n5, 1, 0, 0, -1, 
      1, 1, 0, 1, 1])/((3 - d + n4 + n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) - 
   (n4*(288 - 448*d + 226*d^2 - 37*d^3 - 48*n1 + 44*d*n1 - 8*d^2*n1 + 
      4*d*n1^2 + 416*n3 - 408*d*n3 + 96*d^2*n3 - 32*n1*n3 + 4*d*n1*n3 - 
      8*n1^2*n3 + 176*n3^2 - 76*d*n3^2 + 8*n1*n3^2 + 16*n3^3 + 560*n4 - 
      548*d*n4 + 130*d^2*n4 - 48*n1*n4 + 8*d*n1*n4 - 8*n1^2*n4 + 480*n3*n4 - 
      212*d*n3*n4 + 16*n1*n3*n4 + 72*n3^2*n4 + 320*n4^2 - 144*d*n4^2 + 
      8*n1*n4^2 + 104*n3*n4^2 + 48*n4^3 - 32*n5 + 8*d*n5 + 4*d^2*n5 - 
      8*n1*n5 + 12*d*n1*n5 + 8*n1^2*n5 + 16*n3*n5 - 24*d*n3*n5 - 
      24*n1*n3*n5 + 24*n3^2*n5 + 24*n4*n5 - 28*d*n4*n5 - 32*n1*n4*n5 + 
      56*n3*n4*n5 + 32*n4^2*n5 - 24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 
      16*n3*n5^2 - 16*n4*n5^2)*j[p4a, n1, 0, n3, 1 + n4, 1 + n5, 1, 0, 1, -1, 
      1, 1, 0, 1, 0])/(2*(3 - d + n4 + n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   (6*n3*(32 - 28*d + 6*d^2 - 12*n1 + 4*d*n1 + 28*n3 - 11*d*n3 - 2*n1*n3 + 
      4*n3^2 + 32*n4 - 13*d*n4 - 2*n1*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5)*j[p4a, n1, 0, 1 + n3, -1 + n4, 
      1 + n5, 1, 0, 0, 0, 1, 1, 0, 1, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 
     80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) - 
   (2*n3*(32 - 28*d + 6*d^2 - 12*n1 + 4*d*n1 + 28*n3 - 11*d*n3 - 2*n1*n3 + 
      4*n3^2 + 32*n4 - 13*d*n4 - 2*n1*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5)*j[p4a, n1, 0, 1 + n3, -1 + n4, 
      1 + n5, 1, 0, 1, 0, 0, 1, 0, 1, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 
     80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   (2*n3*(32 - 28*d + 6*d^2 - 12*n1 + 4*d*n1 + 28*n3 - 11*d*n3 - 2*n1*n3 + 
      4*n3^2 + 32*n4 - 13*d*n4 - 2*n1*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5)*j[p4a, n1, 0, 1 + n3, -1 + n4, 
      1 + n5, 1, 0, 1, 0, 1, 0, 0, 1, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 
     80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   (4*n3*(32 - 28*d + 6*d^2 - 12*n1 + 4*d*n1 + 28*n3 - 11*d*n3 - 2*n1*n3 + 
      4*n3^2 + 32*n4 - 13*d*n4 - 2*n1*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5)*j[p4a, n1, 0, 1 + n3, -1 + n4, 
      1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 
     80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   (n3*(480 - 592*d + 238*d^2 - 31*d^3 - 288*n1 + 260*d*n1 - 60*d^2*n1 - 
      12*d*n1^2 + 528*n3 - 428*d*n3 + 86*d^2*n3 - 184*n1*n3 + 104*d*n1*n3 + 
      24*n1^2*n3 + 176*n3^2 - 80*d*n3^2 - 64*n1*n3^2 + 32*n3^3 + 688*n4 - 
      552*d*n4 + 108*d^2*n4 - 280*n1*n4 + 140*d*n1*n4 + 24*n1^2*n4 + 
      488*n3*n4 - 204*d*n3*n4 - 152*n1*n3*n4 + 112*n3^2*n4 + 312*n4^2 - 
      124*d*n4^2 - 88*n1*n4^2 + 128*n3*n4^2 + 48*n4^3 + 256*n5 - 232*d*n5 + 
      52*d^2*n5 - 56*n1*n5 + 20*d*n1*n5 - 24*n1^2*n5 + 200*n3*n5 - 
      84*d*n3*n5 + 24*n1*n3*n5 + 16*n3^2*n5 + 272*n4*n5 - 120*d*n4*n5 + 
      80*n3*n4*n5 + 64*n4^2*n5 + 24*n5^2 - 12*d*n5^2 - 8*n1*n5^2 + 
      16*n3*n5^2 + 16*n4*n5^2)*j[p4a, n1, 0, 1 + n3, n4, 1 + n5, 1, -1, 0, 0, 
      1, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) - 
   (n3*(288 - 432*d + 210*d^2 - 33*d^3 - 96*n1 + 108*d*n1 - 28*d^2*n1 - 
      4*d*n1^2 + 432*n3 - 420*d*n3 + 98*d^2*n3 - 104*n1*n3 + 56*d*n1*n3 + 
      8*n1^2*n3 + 208*n3^2 - 96*d*n3^2 - 32*n1*n3^2 + 32*n3^3 + 528*n4 - 
      504*d*n4 + 116*d^2*n4 - 136*n1*n4 + 68*d*n1*n4 + 8*n1^2*n4 + 
      504*n3*n4 - 228*d*n3*n4 - 72*n1*n3*n4 + 112*n3^2*n4 + 296*n4^2 - 
      132*d*n4^2 - 40*n1*n4^2 + 128*n3*n4^2 + 48*n4^3 - 24*d*n5 + 12*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 - 8*n1^2*n5 + 24*n3*n5 - 28*d*n3*n5 + 8*n1*n3*n5 + 
      16*n3^2*n5 + 48*n4*n5 - 40*d*n4*n5 + 48*n3*n4*n5 + 32*n4^2*n5 - 
      24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 16*n3*n5^2 - 16*n4*n5^2)*
     j[p4a, n1, 0, 1 + n3, n4, 1 + n5, 1, -1, 1, 0, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
      92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   (n3*(288 - 432*d + 210*d^2 - 33*d^3 - 96*n1 + 108*d*n1 - 28*d^2*n1 - 
      4*d*n1^2 + 432*n3 - 420*d*n3 + 98*d^2*n3 - 104*n1*n3 + 56*d*n1*n3 + 
      8*n1^2*n3 + 208*n3^2 - 96*d*n3^2 - 32*n1*n3^2 + 32*n3^3 + 528*n4 - 
      504*d*n4 + 116*d^2*n4 - 136*n1*n4 + 68*d*n1*n4 + 8*n1^2*n4 + 
      504*n3*n4 - 228*d*n3*n4 - 72*n1*n3*n4 + 112*n3^2*n4 + 296*n4^2 - 
      132*d*n4^2 - 40*n1*n4^2 + 128*n3*n4^2 + 48*n4^3 - 24*d*n5 + 12*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 - 8*n1^2*n5 + 24*n3*n5 - 28*d*n3*n5 + 8*n1*n3*n5 + 
      16*n3^2*n5 + 48*n4*n5 - 40*d*n4*n5 + 48*n3*n4*n5 + 32*n4^2*n5 - 
      24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 16*n3*n5^2 - 16*n4*n5^2)*
     j[p4a, n1, 0, 1 + n3, n4, 1 + n5, 1, -1, 1, 0, 1, 0, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
      92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   (n3*(480 - 592*d + 238*d^2 - 31*d^3 - 288*n1 + 260*d*n1 - 60*d^2*n1 - 
      12*d*n1^2 + 528*n3 - 428*d*n3 + 86*d^2*n3 - 184*n1*n3 + 104*d*n1*n3 + 
      24*n1^2*n3 + 176*n3^2 - 80*d*n3^2 - 64*n1*n3^2 + 32*n3^3 + 688*n4 - 
      552*d*n4 + 108*d^2*n4 - 280*n1*n4 + 140*d*n1*n4 + 24*n1^2*n4 + 
      488*n3*n4 - 204*d*n3*n4 - 152*n1*n3*n4 + 112*n3^2*n4 + 312*n4^2 - 
      124*d*n4^2 - 88*n1*n4^2 + 128*n3*n4^2 + 48*n4^3 + 256*n5 - 232*d*n5 + 
      52*d^2*n5 - 56*n1*n5 + 20*d*n1*n5 - 24*n1^2*n5 + 200*n3*n5 - 
      84*d*n3*n5 + 24*n1*n3*n5 + 16*n3^2*n5 + 272*n4*n5 - 120*d*n4*n5 + 
      80*n3*n4*n5 + 64*n4^2*n5 + 24*n5^2 - 12*d*n5^2 - 8*n1*n5^2 + 
      16*n3*n5^2 + 16*n4*n5^2)*j[p4a, n1, 0, 1 + n3, n4, 1 + n5, 1, -1, 1, 0, 
      1, 1, 0, 0, 1])/(2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   (2*n3*(32 - 28*d + 6*d^2 - 12*n1 + 4*d*n1 + 28*n3 - 11*d*n3 - 2*n1*n3 + 
      4*n3^2 + 32*n4 - 13*d*n4 - 2*n1*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5)*j[p4a, n1, 0, 1 + n3, n4, 1 + n5, 
      1, -1, 1, 0, 1, 1, 0, 1, 0])/(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
     92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   (n3*(96 - 176*d + 98*d^2 - 17*d^3 + 16*d*n1 - 6*d^2*n1 + 192*n3 - 
      208*d*n3 + 52*d^2*n3 - 32*n1*n3 + 16*d*n1*n3 + 112*n3^2 - 52*d*n3^2 - 
      8*n1*n3^2 + 16*n3^3 + 224*n4 - 240*d*n4 + 60*d^2*n4 - 32*n1*n4 + 
      16*d*n1*n4 + 256*n3*n4 - 120*d*n3*n4 - 16*n1*n3*n4 + 56*n3^2*n4 + 
      144*n4^2 - 68*d*n4^2 - 8*n1*n4^2 + 64*n3*n4^2 + 24*n4^3 - 64*n5 + 
      40*d*n5 - 4*d^2*n5 + 32*n1*n5 - 8*d*n1*n5 - 32*n3*n5 + 8*n3^2*n5 - 
      32*n4*n5 + 16*n3*n4*n5 + 8*n4^2*n5 - 24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 
      16*n3*n5^2 - 16*n4*n5^2)*j[p4a, n1, 0, 1 + n3, n4, 1 + n5, 1, 0, 0, 0, 
      1, 1, -1, 1, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) - 
   (2*n3*(96 - 176*d + 98*d^2 - 17*d^3 + 16*d*n1 - 6*d^2*n1 + 192*n3 - 
      208*d*n3 + 52*d^2*n3 - 32*n1*n3 + 16*d*n1*n3 + 112*n3^2 - 52*d*n3^2 - 
      8*n1*n3^2 + 16*n3^3 + 224*n4 - 240*d*n4 + 60*d^2*n4 - 32*n1*n4 + 
      16*d*n1*n4 + 256*n3*n4 - 120*d*n3*n4 - 16*n1*n3*n4 + 56*n3^2*n4 + 
      144*n4^2 - 68*d*n4^2 - 8*n1*n4^2 + 64*n3*n4^2 + 24*n4^3 - 64*n5 + 
      40*d*n5 - 4*d^2*n5 + 32*n1*n5 - 8*d*n1*n5 - 32*n3*n5 + 8*n3^2*n5 - 
      32*n4*n5 + 16*n3*n4*n5 + 8*n4^2*n5 - 24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 
      16*n3*n5^2 - 16*n4*n5^2)*j[p4a, n1, 0, 1 + n3, n4, 1 + n5, 1, 0, 0, 0, 
      1, 1, 0, 1, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   (n3*(96 - 176*d + 98*d^2 - 17*d^3 + 16*d*n1 - 6*d^2*n1 + 192*n3 - 
      208*d*n3 + 52*d^2*n3 - 32*n1*n3 + 16*d*n1*n3 + 112*n3^2 - 52*d*n3^2 - 
      8*n1*n3^2 + 16*n3^3 + 224*n4 - 240*d*n4 + 60*d^2*n4 - 32*n1*n4 + 
      16*d*n1*n4 + 256*n3*n4 - 120*d*n3*n4 - 16*n1*n3*n4 + 56*n3^2*n4 + 
      144*n4^2 - 68*d*n4^2 - 8*n1*n4^2 + 64*n3*n4^2 + 24*n4^3 - 64*n5 + 
      40*d*n5 - 4*d^2*n5 + 32*n1*n5 - 8*d*n1*n5 - 32*n3*n5 + 8*n3^2*n5 - 
      32*n4*n5 + 16*n3*n4*n5 + 8*n4^2*n5 - 24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 
      16*n3*n5^2 - 16*n4*n5^2)*j[p4a, n1, 0, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 
      0, 1, -1, 1, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) - 
   (n3*(96 - 176*d + 98*d^2 - 17*d^3 + 16*d*n1 - 6*d^2*n1 + 192*n3 - 
      208*d*n3 + 52*d^2*n3 - 32*n1*n3 + 16*d*n1*n3 + 112*n3^2 - 52*d*n3^2 - 
      8*n1*n3^2 + 16*n3^3 + 224*n4 - 240*d*n4 + 60*d^2*n4 - 32*n1*n4 + 
      16*d*n1*n4 + 256*n3*n4 - 120*d*n3*n4 - 16*n1*n3*n4 + 56*n3^2*n4 + 
      144*n4^2 - 68*d*n4^2 - 8*n1*n4^2 + 64*n3*n4^2 + 24*n4^3 - 64*n5 + 
      40*d*n5 - 4*d^2*n5 + 32*n1*n5 - 8*d*n1*n5 - 32*n3*n5 + 8*n3^2*n5 - 
      32*n4*n5 + 16*n3*n4*n5 + 8*n4^2*n5 - 24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 
      16*n3*n5^2 - 16*n4*n5^2)*j[p4a, n1, 0, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 
      1, 0, -1, 1, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) - 
   (n3*(96 - 80*d + 14*d^2 + d^3 - 96*n1 + 76*d*n1 - 16*d^2*n1 - 4*d*n1^2 + 
      48*n3 - 4*d*n3 - 6*d^2*n3 - 40*n1*n3 + 24*d*n1*n3 + 8*n1^2*n3 - 
      16*n3^2 + 8*d*n3^2 - 16*n1*n3^2 + 80*n4 - 24*d*n4 - 4*d^2*n4 - 
      72*n1*n4 + 36*d*n1*n4 + 8*n1^2*n4 - 8*n3*n4 + 12*d*n3*n4 - 
      40*n1*n3*n4 + 8*n4^2 + 4*d*n4^2 - 24*n1*n4^2 + 128*n5 - 104*d*n5 + 
      20*d^2*n5 - 40*n1*n5 + 12*d*n1*n5 - 8*n1^2*n5 + 88*n3*n5 - 28*d*n3*n5 + 
      8*n1*n3*n5 + 112*n4*n5 - 40*d*n4*n5 + 16*n3*n4*n5 + 16*n4^2*n5 + 
      24*n5^2 - 12*d*n5^2 - 8*n1*n5^2 + 16*n3*n5^2 + 16*n4*n5^2)*
     j[p4a, n1, 0, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, -1, 0, 1])/
    ((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) - 
   (4*n3*(32 - 28*d + 6*d^2 - 12*n1 + 4*d*n1 + 28*n3 - 11*d*n3 - 2*n1*n3 + 
      4*n3^2 + 32*n4 - 13*d*n4 - 2*n1*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5)*j[p4a, n1, 0, 1 + n3, n4, 1 + n5, 
      1, 0, 1, 0, 1, 1, -1, 1, 0])/(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
     92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) - 
   (n3*(96 - 272*d + 182*d^2 - 35*d^3 + 96*n1 - 44*d*n1 + 4*d^2*n1 + 
      4*d*n1^2 + 336*n3 - 412*d*n3 + 110*d^2*n3 - 24*n1*n3 + 8*d*n1*n3 - 
      8*n1^2*n3 + 240*n3^2 - 112*d*n3^2 + 32*n3^3 + 368*n4 - 456*d*n4 + 
      124*d^2*n4 + 8*n1*n4 - 4*d*n1*n4 - 8*n1^2*n4 + 520*n3*n4 - 
      252*d*n3*n4 + 8*n1*n3*n4 + 112*n3^2*n4 + 280*n4^2 - 140*d*n4^2 + 
      8*n1*n4^2 + 128*n3*n4^2 + 48*n4^3 - 256*n5 + 184*d*n5 - 28*d^2*n5 + 
      104*n1*n5 - 28*d*n1*n5 + 8*n1^2*n5 - 152*n3*n5 + 28*d*n3*n5 - 
      8*n1*n3*n5 + 16*n3^2*n5 - 176*n4*n5 + 40*d*n4*n5 + 16*n3*n4*n5 - 
      72*n5^2 + 36*d*n5^2 + 24*n1*n5^2 - 48*n3*n5^2 - 48*n4*n5^2)*
     j[p4a, n1, 0, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
      92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   (2*n3*(32 - 28*d + 6*d^2 - 12*n1 + 4*d*n1 + 28*n3 - 11*d*n3 - 2*n1*n3 + 
      4*n3^2 + 32*n4 - 13*d*n4 - 2*n1*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5)*j[p4a, n1, 0, 1 + n3, n4, 1 + n5, 
      1, 0, 1, 0, 1, 1, 0, 1, 0])/(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
     92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   (n1*(32*d - 28*d^2 + 6*d^3 - 12*d*n1 + 4*d^2*n1 - 64*n3 + 84*d*n3 - 
      23*d^2*n3 + 24*n1*n3 - 10*d*n1*n3 - 56*n3^2 + 26*d*n3^2 + 4*n1*n3^2 - 
      8*n3^3 - 64*n4 + 88*d*n4 - 25*d^2*n4 + 24*n1*n4 - 10*d*n1*n4 - 
      120*n3*n4 + 58*d*n3*n4 + 8*n1*n3*n4 - 28*n3^2*n4 - 64*n4^2 + 
      32*d*n4^2 + 4*n1*n4^2 - 32*n3*n4^2 - 12*n4^3 + 64*n5 - 48*d*n5 + 
      8*d^2*n5 - 24*n1*n5 + 4*d*n1*n5 + 40*n3*n5 - 8*d*n3*n5 + 4*n1*n3*n5 - 
      4*n3^2*n5 + 48*n4*n5 - 12*d*n4*n5 + 4*n1*n4*n5 - 4*n3*n4*n5 + 16*n5^2 - 
      8*d*n5^2 - 8*n1*n5^2 + 12*n3*n5^2 + 12*n4*n5^2)*
     j[p4a, 1 + n1, -1, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) - 
   (2*n1*(32 - 28*d + 6*d^2 - 12*n1 + 4*d*n1 + 28*n3 - 11*d*n3 - 2*n1*n3 + 
      4*n3^2 + 32*n4 - 13*d*n4 - 2*n1*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5)*j[p4a, 1 + n1, 0, n3, n4, n5, 1, 
      0, 1, 0, 1, 1, 0, 0, 1])/(288 - 384*d + 170*d^2 - 25*d^3 + 80*n1 - 
     92*d*n1 + 24*d^2*n1 - 48*n1^2 + 20*d*n1^2 + 288*n3 - 240*d*n3 + 
     50*d^2*n3 + 128*n1*n3 - 60*d*n1*n3 - 16*n1^2*n3 + 64*n3^2 - 24*d*n3^2 + 
     32*n1*n3^2 + 304*n4 - 260*d*n4 + 56*d^2*n4 + 176*n1*n4 - 80*d*n1*n4 - 
     16*n1^2*n4 + 128*n3*n4 - 52*d*n3*n4 + 80*n1*n3*n4 + 64*n4^2 - 
     28*d*n4^2 + 48*n1*n4^2 + 96*n5 - 88*d*n5 + 20*d^2*n5 - 24*n1*n5 + 
     4*d*n1*n5 - 8*n1^2*n5 + 96*n3*n5 - 40*d*n3*n5 + 8*n1*n3*n5 + 
     16*n3^2*n5 + 88*n4*n5 - 36*d*n4*n5 + 16*n1*n4*n5 + 24*n3*n4*n5 + 
     8*n4^2*n5 + 8*n5^2 - 4*d*n5^2 - 8*n1*n5^2 + 8*n3*n5^2 + 8*n4*n5^2) + 
   (n1*(-96 + 144*d - 70*d^2 + 11*d^3 - 4*d*n1 + 2*d^2*n1 - 128*n3 + 
      124*d*n3 - 29*d^2*n3 + 8*n1*n3 - 6*d*n1*n3 - 56*n3^2 + 26*d*n3^2 + 
      4*n1*n3^2 - 8*n3^3 - 160*n4 + 152*d*n4 - 35*d^2*n4 + 8*n1*n4 - 
      6*d*n1*n4 - 136*n3*n4 + 62*d*n3*n4 + 8*n1*n3*n4 - 28*n3^2*n4 - 
      80*n4^2 + 36*d*n4^2 + 4*n1*n4^2 - 32*n3*n4^2 - 12*n4^3 + 8*d*n5 - 
      4*d^2*n5 - 8*n1*n5 + 4*d*n1*n5 - 8*n3*n5 + 8*d*n3*n5 - 4*n1*n3*n5 - 
      4*n3^2*n5 - 16*n4*n5 + 12*d*n4*n5 - 4*n1*n4*n5 - 12*n3*n4*n5 - 
      8*n4^2*n5 + 8*n5^2 - 4*d*n5^2 + 4*n3*n5^2 + 4*n4*n5^2)*
     j[p4a, 1 + n1, 0, n3, n4, 1 + n5, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   (2*n1*(32 - 28*d + 6*d^2 - 12*n1 + 4*d*n1 + 28*n3 - 11*d*n3 - 2*n1*n3 + 
      4*n3^2 + 32*n4 - 13*d*n4 - 2*n1*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5)*j[p4a, 1 + n1, 0, n3, n4, 1 + n5, 
      1, 0, 1, -1, 1, 1, 0, 0, 1])/(288 - 384*d + 170*d^2 - 25*d^3 + 80*n1 - 
     92*d*n1 + 24*d^2*n1 - 48*n1^2 + 20*d*n1^2 + 288*n3 - 240*d*n3 + 
     50*d^2*n3 + 128*n1*n3 - 60*d*n1*n3 - 16*n1^2*n3 + 64*n3^2 - 24*d*n3^2 + 
     32*n1*n3^2 + 304*n4 - 260*d*n4 + 56*d^2*n4 + 176*n1*n4 - 80*d*n1*n4 - 
     16*n1^2*n4 + 128*n3*n4 - 52*d*n3*n4 + 80*n1*n3*n4 + 64*n4^2 - 
     28*d*n4^2 + 48*n1*n4^2 + 96*n5 - 88*d*n5 + 20*d^2*n5 - 24*n1*n5 + 
     4*d*n1*n5 - 8*n1^2*n5 + 96*n3*n5 - 40*d*n3*n5 + 8*n1*n3*n5 + 
     16*n3^2*n5 + 88*n4*n5 - 36*d*n4*n5 + 16*n1*n4*n5 + 24*n3*n4*n5 + 
     8*n4^2*n5 + 8*n5^2 - 4*d*n5^2 - 8*n1*n5^2 + 8*n3*n5^2 + 8*n4*n5^2) - 
   (n1*(32*d - 28*d^2 + 6*d^3 - 12*d*n1 + 4*d^2*n1 - 64*n3 + 84*d*n3 - 
      23*d^2*n3 + 24*n1*n3 - 10*d*n1*n3 - 56*n3^2 + 26*d*n3^2 + 4*n1*n3^2 - 
      8*n3^3 - 64*n4 + 88*d*n4 - 25*d^2*n4 + 24*n1*n4 - 10*d*n1*n4 - 
      120*n3*n4 + 58*d*n3*n4 + 8*n1*n3*n4 - 28*n3^2*n4 - 64*n4^2 + 
      32*d*n4^2 + 4*n1*n4^2 - 32*n3*n4^2 - 12*n4^3 + 64*n5 - 48*d*n5 + 
      8*d^2*n5 - 24*n1*n5 + 4*d*n1*n5 + 40*n3*n5 - 8*d*n3*n5 + 4*n1*n3*n5 - 
      4*n3^2*n5 + 48*n4*n5 - 12*d*n4*n5 + 4*n1*n4*n5 - 4*n3*n4*n5 + 16*n5^2 - 
      8*d*n5^2 - 8*n1*n5^2 + 12*n3*n5^2 + 12*n4*n5^2)*
     j[p4a, 1 + n1, 0, n3, n4, 1 + n5, 1, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) - 
   (n1*(-96 + 144*d - 70*d^2 + 11*d^3 - 4*d*n1 + 2*d^2*n1 - 128*n3 + 
      124*d*n3 - 29*d^2*n3 + 8*n1*n3 - 6*d*n1*n3 - 56*n3^2 + 26*d*n3^2 + 
      4*n1*n3^2 - 8*n3^3 - 160*n4 + 152*d*n4 - 35*d^2*n4 + 8*n1*n4 - 
      6*d*n1*n4 - 136*n3*n4 + 62*d*n3*n4 + 8*n1*n3*n4 - 28*n3^2*n4 - 
      80*n4^2 + 36*d*n4^2 + 4*n1*n4^2 - 32*n3*n4^2 - 12*n4^3 + 8*d*n5 - 
      4*d^2*n5 - 8*n1*n5 + 4*d*n1*n5 - 8*n3*n5 + 8*d*n3*n5 - 4*n1*n3*n5 - 
      4*n3^2*n5 - 16*n4*n5 + 12*d*n4*n5 - 4*n1*n4*n5 - 12*n3*n4*n5 - 
      8*n4^2*n5 + 8*n5^2 - 4*d*n5^2 + 4*n3*n5^2 + 4*n4*n5^2)*
     j[p4a, 1 + n1, 0, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 0, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n2 == 0 && n3 == 1 && n7 == -1 && n9 == 0 && 
     !(n4 == 0 || n6 == 1 || n8 == 1) -> 
  ((1 + n4)*j[p4a, -1, 0, 1, 2 + n4, n5, -1 + n6, -1, -1 + n8, 0, 2, 1, 0, 1, 
      1])/((-1 + n6)*(-1 + n8)) + j[p4a, -1, 0, 2, 1 + n4, n5, -1 + n6, -1, 
     -1 + n8, 0, 2, 1, 0, 1, 1]/((-1 + n6)*(-1 + n8)) + 
   ((-1 - n4)*j[p4a, 0, -1, 1, 2 + n4, n5, -1 + n6, -1, -1 + n8, 0, 2, 1, 0, 
      1, 1])/((-1 + n6)*(-1 + n8)) + j[p4a, 0, 0, 0, 1 + n4, n5, -1 + n6, -1, 
     n8, 0, 2, 1, 0, 1, 1]/(1 - n6) + j[p4a, 0, 0, 0, 1 + n4, n5, -1 + n6, 0, 
     n8, 0, 1, 1, 0, 1, 1]/(-1 + n6) + 
   ((-1 - n4)*j[p4a, 0, 0, 0, 2 + n4, n5, -1 + n6, -1, -1 + n8, 0, 2, 1, 0, 
      1, 1])/((-1 + n6)*(-1 + n8)) + 
   ((-4 + 2*d - n4 - n5 - n8)*j[p4a, 0, 0, 1, 1 + n4, n5, -1 + n6, -1, 
      -1 + n8, 0, 2, 1, 0, 1, 1])/((-1 + n6)*(-1 + n8)) + 
   ((-5 + 2*d - 2*n4 - n5 - n6)*j[p4a, 0, 0, 1, 1 + n4, n5, -1 + n6, -1, n8, 
      0, 1, 1, 0, 1, 1])/(-1 + n6) + j[p4a, 0, 0, 1, 1 + n4, n5, -1 + n6, -1, 
     n8, 0, 2, 1, 0, 1, 1]/(-1 + n6) - 
   j[p4a, 0, 0, 1, 1 + n4, n5, -1 + n6, 0, -1 + n8, 0, 1, 1, 0, 1, 1]/
    ((-1 + n6)*(-1 + n8)) + j[p4a, 0, 0, 1, 1 + n4, n5, -1 + n6, 0, -1 + n8, 
     0, 2, 0, 0, 1, 1]/((-1 + n6)*(-1 + n8)) + 
   j[p4a, 0, 0, 1, 1 + n4, n5, -1 + n6, 0, n8, 0, 1, 1, 0, 0, 1]/(1 - n6) + 
   j[p4a, 0, 0, 1, 1 + n4, n5, n6, -1, -1 + n8, 0, 1, 1, 0, 1, 1] - 
   (n5*j[p4a, 0, 0, 1, 1 + n4, 1 + n5, -1 + n6, -1, -1 + n8, 0, 2, 1, 0, 0, 
      1])/((-1 + n6)*(-1 + n8)) + 
   (n5*j[p4a, 0, 0, 1, 1 + n4, 1 + n5, -1 + n6, -1, -1 + n8, 0, 2, 1, 0, 1, 
      0])/((-1 + n6)*(-1 + n8)) + 
   (n5*j[p4a, 0, 0, 1, 1 + n4, 1 + n5, -1 + n6, -1, n8, 0, 1, 1, 0, 0, 1])/
    (-1 + n6) - (n5*j[p4a, 0, 0, 1, 1 + n4, 1 + n5, -1 + n6, -1, n8, 0, 1, 1, 
      0, 1, 0])/(-1 + n6) + ((1 + n4)*j[p4a, 0, 0, 1, 2 + n4, n5, -2 + n6, 
      -1, -1 + n8, 0, 2, 1, 0, 1, 1])/((-1 + n6)*(-1 + n8)) + 
   ((1 + n4)*j[p4a, 0, 0, 1, 2 + n4, n5, -1 + n6, -2, -1 + n8, 0, 2, 1, 0, 1, 
      1])/((-1 + n6)*(-1 + n8)) + 
   ((-1 - n4)*j[p4a, 0, 0, 1, 2 + n4, n5, -1 + n6, -1, -1 + n8, -1, 2, 1, 0, 
      1, 1])/((-1 + n6)*(-1 + n8)) + 
   ((1 + n4)*j[p4a, 0, 0, 1, 2 + n4, n5, -1 + n6, -1, -1 + n8, 0, 1, 1, 0, 1, 
      1])/((-1 + n6)*(-1 + n8)) + 
   ((-1 - n4)*j[p4a, 0, 0, 1, 2 + n4, n5, -1 + n6, -1, -1 + n8, 0, 2, 0, 0, 
      1, 1])/((-1 + n6)*(-1 + n8)) + 
   ((1 + n4)*j[p4a, 0, 0, 1, 2 + n4, n5, -1 + n6, -1, -1 + n8, 0, 2, 1, 0, 1, 
      0])/((-1 + n6)*(-1 + n8)) - j[p4a, 0, 0, 2, 1 + n4, n5, -1 + n6, -1, 
     -2 + n8, 0, 2, 1, 0, 1, 1]/((-1 + n6)*(-1 + n8)) + 
   j[p4a, 0, 0, 2, 1 + n4, n5, -1 + n6, -1, -1 + n8, 0, 1, 1, 0, 1, 1]/
    ((-1 + n6)*(-1 + n8)) - j[p4a, 0, 0, 2, 1 + n4, n5, -1 + n6, -1, -1 + n8, 
     0, 2, 0, 0, 1, 1]/((-1 + n6)*(-1 + n8)) + 
   j[p4a, 0, 0, 2, 1 + n4, n5, -1 + n6, -1, -1 + n8, 0, 2, 1, -1, 1, 1]/
    ((-1 + n6)*(-1 + n8)) - j[p4a, 0, 0, 2, 1 + n4, n5, -1 + n6, -1, -1 + n8, 
     0, 2, 1, 0, 0, 1]/((-1 + n6)*(-1 + n8)) - 
   j[p4a, 0, 0, 2, 1 + n4, n5, -1 + n6, -1, -1 + n8, 0, 2, 1, 0, 1, 1]/
    ((-1 + n6)*(-1 + n8)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n3 == 1 && n5 == 0 && n8 == 1 && n9 == 0 &&  !(n4 == 0 || n6 == 1) -> 
  ((-4 + d)*j[p4a, n1, 0, 0, 1 + n4, 0, -1 + n6, n7, 1, 0, 1, 1, 0, 1, 2])/
    (2*(-2 + d - n4 - n6)*(-1 + n6)) + 
   ((-4 + d - 2*n4)*j[p4a, n1, 0, 1, 1 + n4, 0, -1 + n6, n7, 1, 0, 1, 1, 0, 
      1, 1])/(2*(-1 + n6)) + ((-4 + d - 2*n4)*j[p4a, n1, 0, 1, 1 + n4, 0, n6, 
      n7, 0, 0, 1, 1, 0, 1, 1])/(2*(-2 + d - n4 - n6)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n14 == 1 && n3 == 1 && n5 == 0 && 
    n6 == 1 && n7 == 0 && n8 == 1 && n9 == 0 && n13 != 1 -> 
  (n11*n4*j[p4a, -1, n2, 1, 1 + n4, 0, 1, 0, 1, 0, 1, 1 + n11, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) - 
   (n11*n4*j[p4a, 0, -1 + n2, 1, 1 + n4, 0, 1, 0, 1, 0, 1, 1 + n11, 0, 
      -1 + n13, 1])/((d - 2*n13)*(-1 + n13)) + 
   (n4*(1 + n4)*j[p4a, 0, n2, 0, 2 + n4, 0, 1, 0, 1, 0, 1, n11, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + ((-2*n11 + d*n11 - 2*n11^2 - n11*n4)*
     j[p4a, 0, n2, 1, n4, 0, 1, 0, 1, 0, 1, 1 + n11, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   ((-2*n2 - n4)*j[p4a, 0, n2, 1, n4, 0, 1, 0, 2, 0, 1, n11, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n11*n4*j[p4a, 0, n2, 1, 1 + n4, -1, 1, 0, 1, 0, 1, 1 + n11, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (n11*n4*j[p4a, 0, n2, 1, 1 + n4, 0, 0, 0, 1, 0, 1, 1 + n11, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (n4*j[p4a, 0, n2, 1, 1 + n4, 0, 0, 0, 2, 0, 1, n11, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n11*n4*j[p4a, 0, n2, 1, 1 + n4, 0, 1, 0, 1, -1, 1, 1 + n11, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (n11*n4*j[p4a, 0, n2, 1, 1 + n4, 0, 1, 0, 1, 0, 0, 1 + n11, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + ((-4*n4 - n11*n4 + 2*n13*n4 - 2*n4^2)*
     j[p4a, 0, n2, 1, 1 + n4, 0, 1, 0, 1, 0, 1, n11, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n4*j[p4a, 0, n2, 1, 1 + n4, 0, 1, 0, 2, 0, 1, n11, -1, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n4*j[p4a, 0, n2, 1, 1 + n4, 0, 1, 0, 2, 0, 1, n11, 0, -2 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n4*(1 + n4)*j[p4a, 0, n2, 1, 2 + n4, -1, 1, 0, 1, 0, 1, n11, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) - 
   (n4*(1 + n4)*j[p4a, 0, n2, 1, 2 + n4, 0, 1, -1, 1, 0, 1, n11, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) - 
   (n4*(1 + n4)*j[p4a, 0, n2, 1, 2 + n4, 0, 1, 0, 1, 0, 1, n11, 0, -1 + n13, 
      0])/((d - 2*n13)*(-1 + n13)) + 
   ((2*n2 - n4)*j[p4a, 0, n2, 2, n4, 0, 1, 0, 1, 0, 1, n11, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n4*j[p4a, 0, n2, 2, 1 + n4, 0, 1, -1, 1, 0, 1, n11, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n4*j[p4a, 0, n2, 2, 1 + n4, 0, 1, 0, 1, 0, 1, n11, 0, -2 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n4*j[p4a, 0, n2, 2, 1 + n4, 0, 1, 0, 1, 0, 1, n11, 0, -1 + n13, 0])/
    ((d - 2*n13)*(-1 + n13)) + 
   (2*n2*j[p4a, 0, 1 + n2, 1, n4, 0, 1, -1, 2, 0, 1, n11, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + (2*(-n2 + n13*n2 - n2^2)*
     j[p4a, 0, 1 + n2, 1, n4, 0, 1, 0, 1, 0, 1, n11, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n2*j[p4a, 0, 1 + n2, 1, n4, 0, 1, 0, 2, 0, 1, n11, -1, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n2*j[p4a, 0, 1 + n2, 1, n4, 0, 1, 0, 2, 0, 1, n11, 0, -2 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n2*n4*j[p4a, 0, 1 + n2, 1, 1 + n4, -1, 1, 0, 1, 0, 1, n11, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (2*n2*n4*j[p4a, 0, 1 + n2, 1, 1 + n4, 0, 0, 0, 1, 0, 1, n11, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (2*n2*n4*j[p4a, 0, 1 + n2, 1, 1 + n4, 0, 1, -1, 1, 0, 1, n11, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) - 
   (n2*n4*j[p4a, 0, 1 + n2, 1, 1 + n4, 0, 1, 0, 0, 0, 1, n11, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) - 
   (n2*n4*j[p4a, 0, 1 + n2, 1, 1 + n4, 0, 1, 0, 1, 0, 1, n11, -1, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (2*n2*n4*j[p4a, 0, 1 + n2, 1, 1 + n4, 0, 1, 0, 1, 0, 1, n11, 0, -2 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) - 
   (n2*n4*j[p4a, 0, 1 + n2, 1, 1 + n4, 0, 1, 0, 1, 0, 1, n11, 0, -1 + n13, 
      0])/((d - 2*n13)*(-1 + n13)) - 
   (n2*j[p4a, 0, 1 + n2, 2, n4, 0, 1, -1, 1, 0, 1, n11, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (4*n2*j[p4a, 0, 1 + n2, 2, n4, 0, 1, 0, 0, 0, 1, n11, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (2*n2*j[p4a, 0, 1 + n2, 2, n4, 0, 1, 0, 1, 0, 1, n11, -1, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (3*n2*j[p4a, 0, 1 + n2, 2, n4, 0, 1, 0, 1, 0, 1, n11, 0, -2 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n2*(1 + n2)*j[p4a, 0, 2 + n2, 0, n4, 0, 1, 0, 1, 0, 1, n11, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (n2*(1 + n2)*j[p4a, 0, 2 + n2, 1, n4, 0, 1, -1, 1, 0, 1, n11, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (n2*(1 + n2)*j[p4a, 0, 2 + n2, 1, n4, 0, 1, 0, 0, 0, 1, n11, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) - 
   (n2*(1 + n2)*j[p4a, 0, 2 + n2, 1, n4, 0, 1, 0, 1, 0, 1, n11, -1, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (2*n2*(1 + n2)*j[p4a, 0, 2 + n2, 1, n4, 0, 1, 0, 1, 0, 1, n11, 0, 
      -2 + n13, 1])/((d - 2*n13)*(-1 + n13)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n14 == 1 && n3 == 1 && 
    n5 == 0 && n6 == 1 && n7 == 0 && n8 == 1 && n13 != 1 -> 
  (n4*j[p4a, -1, n2, 1, 1 + n4, 0, 1, 0, 1, n9, 1, 2, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n4*j[p4a, 0, -1 + n2, 1, 1 + n4, 0, 1, 0, 1, n9, 1, 2, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n4*(1 + n4)*j[p4a, 0, n2, 0, 2 + n4, 0, 1, 0, 1, n9, 1, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((-4 + d - n4)*j[p4a, 0, n2, 1, n4, 0, 1, 0, 1, n9, 1, 2, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   ((-2*n2 - n4)*j[p4a, 0, n2, 1, n4, 0, 1, 0, 2, n9, 1, 1, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n4*j[p4a, 0, n2, 1, 1 + n4, -1, 1, 0, 1, n9, 1, 2, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n4*j[p4a, 0, n2, 1, 1 + n4, 0, 0, 0, 1, n9, 1, 2, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n4*j[p4a, 0, n2, 1, 1 + n4, 0, 0, 0, 2, n9, 1, 1, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n4*j[p4a, 0, n2, 1, 1 + n4, 0, 1, 0, 1, -1 + n9, 1, 2, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n4*j[p4a, 0, n2, 1, 1 + n4, 0, 1, 0, 1, n9, 0, 2, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + ((-5*n4 + 2*n13*n4 - 2*n4^2)*
     j[p4a, 0, n2, 1, 1 + n4, 0, 1, 0, 1, n9, 1, 1, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n4*j[p4a, 0, n2, 1, 1 + n4, 0, 1, 0, 2, n9, 1, 1, -1, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n4*j[p4a, 0, n2, 1, 1 + n4, 0, 1, 0, 2, n9, 1, 1, 0, -2 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n4*(1 + n4)*j[p4a, 0, n2, 1, 2 + n4, -1, 1, 0, 1, n9, 1, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) - 
   (n4*(1 + n4)*j[p4a, 0, n2, 1, 2 + n4, 0, 1, -1, 1, n9, 1, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) - 
   (n4*(1 + n4)*j[p4a, 0, n2, 1, 2 + n4, 0, 1, 0, 1, n9, 1, 1, 0, -1 + n13, 
      0])/((d - 2*n13)*(-1 + n13)) + 
   ((2*n2 - n4)*j[p4a, 0, n2, 2, n4, 0, 1, 0, 1, n9, 1, 1, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n4*j[p4a, 0, n2, 2, 1 + n4, 0, 1, -1, 1, n9, 1, 1, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n4*j[p4a, 0, n2, 2, 1 + n4, 0, 1, 0, 1, n9, 1, 1, 0, -2 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n4*j[p4a, 0, n2, 2, 1 + n4, 0, 1, 0, 1, n9, 1, 1, 0, -1 + n13, 0])/
    ((d - 2*n13)*(-1 + n13)) + 
   (2*n2*j[p4a, 0, 1 + n2, 1, n4, 0, 1, -1, 2, n9, 1, 1, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + (2*(-n2 + n13*n2 - n2^2)*
     j[p4a, 0, 1 + n2, 1, n4, 0, 1, 0, 1, n9, 1, 1, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n2*j[p4a, 0, 1 + n2, 1, n4, 0, 1, 0, 2, n9, 1, 1, -1, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n2*j[p4a, 0, 1 + n2, 1, n4, 0, 1, 0, 2, n9, 1, 1, 0, -2 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n2*n4*j[p4a, 0, 1 + n2, 1, 1 + n4, -1, 1, 0, 1, n9, 1, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (2*n2*n4*j[p4a, 0, 1 + n2, 1, 1 + n4, 0, 0, 0, 1, n9, 1, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (2*n2*n4*j[p4a, 0, 1 + n2, 1, 1 + n4, 0, 1, -1, 1, n9, 1, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) - 
   (n2*n4*j[p4a, 0, 1 + n2, 1, 1 + n4, 0, 1, 0, 0, n9, 1, 1, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n2*n4*j[p4a, 0, 1 + n2, 1, 1 + n4, 0, 1, 0, 1, n9, 1, 1, -1, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (2*n2*n4*j[p4a, 0, 1 + n2, 1, 1 + n4, 0, 1, 0, 1, n9, 1, 1, 0, -2 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) - 
   (n2*n4*j[p4a, 0, 1 + n2, 1, 1 + n4, 0, 1, 0, 1, n9, 1, 1, 0, -1 + n13, 0])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n2*j[p4a, 0, 1 + n2, 2, n4, 0, 1, -1, 1, n9, 1, 1, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (4*n2*j[p4a, 0, 1 + n2, 2, n4, 0, 1, 0, 0, n9, 1, 1, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (2*n2*j[p4a, 0, 1 + n2, 2, n4, 0, 1, 0, 1, n9, 1, 1, -1, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (3*n2*j[p4a, 0, 1 + n2, 2, n4, 0, 1, 0, 1, n9, 1, 1, 0, -2 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n2*(1 + n2)*j[p4a, 0, 2 + n2, 0, n4, 0, 1, 0, 1, n9, 1, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (n2*(1 + n2)*j[p4a, 0, 2 + n2, 1, n4, 0, 1, -1, 1, n9, 1, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (n2*(1 + n2)*j[p4a, 0, 2 + n2, 1, n4, 0, 1, 0, 0, n9, 1, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) - 
   (n2*(1 + n2)*j[p4a, 0, 2 + n2, 1, n4, 0, 1, 0, 1, n9, 1, 1, -1, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (2*n2*(1 + n2)*j[p4a, 0, 2 + n2, 1, n4, 0, 1, 0, 1, n9, 1, 1, 0, -2 + n13, 
      1])/((d - 2*n13)*(-1 + n13)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n3 == 1 && 
    n6 == 1 && n7 == 0 && n8 == 1 && n9 == 0 && n5 != 0 -> 
  ((1 + n5)*(2 + n5)*j[p4a, -1 + n1, -1 + n2, 1, -1 + n4, 3 + n5, 1, 0, 1, 0, 
      1, 1, 0, 1, 1])/((-1 + n4)*(3 - d + n4 + n5)) - 
   j[p4a, -1 + n1, n2, 0, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 2, 1]/
    (2*(-3 + d - n4 - n5)) + ((-10 + 3*d - 2*n1 - 2*n2 - 2*n5)*
     j[p4a, -1 + n1, n2, 0, n4, 1 + n5, 1, 0, 1, 0, 2, 1, 0, 1, 1])/
    (2*(-10 + 3*d - n2 - 2*n4 - n5)*(-3 + d - n4 - n5)) - 
   ((1 + n5)*(2 + n5)*j[p4a, -1 + n1, n2, 1, -1 + n4, 3 + n5, 1, -1, 1, 0, 1, 
      1, 0, 1, 1])/((-1 + n4)*(3 - d + n4 + n5)) + 
   ((1 + n5)*(2 + n5)*j[p4a, -1 + n1, n2, 1, -1 + n4, 3 + n5, 1, 0, 1, 0, 1, 
      1, -1, 1, 1])/((-1 + n4)*(3 - d + n4 + n5)) + 
   ((10 - 3*d + 2*n1 + 2*n2 + 2*n5)*j[p4a, -1 + n1, n2, 1, n4, 1 + n5, 1, 0, 
      0, 0, 2, 1, 0, 1, 1])/(2*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + j[p4a, -1 + n1, n2, 1, n4, 1 + n5, 1, 0, 1, 0, 0, 
     2, 0, 1, 1]/(3 - d + n4 + n5) + 
   ((-70 + 41*d - 6*d^2 - 16*n1 + 5*d*n1 - 2*n1^2 - 80*n2 + 24*d*n2 - 
      4*n1*n2 - 8*n2^2 - 8*n4 + 2*d*n4 - 12*n2*n4 - 40*n5 + 12*d*n5 - 
      4*n1*n5 - 12*n2*n5 - 4*n4*n5 - 4*n5^2)*j[p4a, -1 + n1, n2, 1, n4, 
      1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/(2*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + ((10 - 3*d + 2*n1 + 2*n2 + 2*n5)*
     j[p4a, -1 + n1, n2, 1, n4, 1 + n5, 1, 0, 1, 0, 2, 1, 0, 0, 1])/
    (2*(-10 + 3*d - n2 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((1 + n5)*j[p4a, -1 + n1, n2, 1, n4, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (3 - d + n4 + n5) + ((-1 - n5)*j[p4a, -1 + n1, n2, 1, n4, 2 + n5, 1, 0, 
      1, 0, 1, 1, 0, 1, 0])/(3 - d + n4 + n5) - 
   (n4*j[p4a, -1 + n1, n2, 1, 1 + n4, 1 + n5, 0, 0, 1, 0, 1, 1, 0, 1, 1])/
    (3 - d + n4 + n5) + (n4*j[p4a, -1 + n1, n2, 1, 1 + n4, 1 + n5, 1, 0, 0, 
      0, 1, 1, 0, 1, 1])/(3 - d + n4 + n5) - 
   (2*j[p4a, -1 + n1, n2, 2, n4, 1 + n5, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (-3 + d - n4 - n5) - (3*j[p4a, -1 + n1, n2, 2, n4, 1 + n5, 1, 0, 1, 0, 1, 
      1, 0, 0, 1])/(2*(-3 + d - n4 - n5)) + 
   (n2*j[p4a, -1 + n1, 1 + n2, 0, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (-3 + d - n4 - n5) - (2*n2*j[p4a, -1 + n1, 1 + n2, 1, n4, 1 + n5, 1, -1, 
      1, 0, 1, 1, 0, 1, 1])/(-3 + d - n4 - n5) - 
   (3*n2*j[p4a, -1 + n1, 1 + n2, 1, n4, 1 + n5, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)) + (2*n2*j[p4a, -1 + n1, 1 + n2, 1, n4, 1 + n5, 1, 
      0, 1, 0, 1, 1, -1, 1, 1])/(-3 + d - n4 - n5) - 
   (2*n2*j[p4a, -1 + n1, 1 + n2, 1, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (-3 + d - n4 - n5) + ((-1 - n5)*j[p4a, n1, -2 + n2, 1, n4, 2 + n5, 1, 0, 
      1, 0, 1, 1, 0, 1, 1])/(3 - d + n4 + n5) - 
   ((1 + n5)*(80 - 54*d + 9*d^2 - 8*n1 + 2*d*n1 + 4*n2 - 2*d*n2 + 64*n4 - 
      20*d*n4 + 4*n2*n4 + 8*n4^2 + 4*n5 - 2*d*n5 + 4*n4*n5)*
     j[p4a, n1, -1 + n2, 0, -1 + n4, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 2])/
    (2*(-2 + d - 2*n4)*(-1 + n4)*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) - ((1 + n5)*(80 - 54*d + 9*d^2 - 8*n1 + 2*d*n1 + 
      4*n2 - 2*d*n2 + 64*n4 - 20*d*n4 + 4*n2*n4 + 8*n4^2 + 4*n5 - 2*d*n5 + 
      4*n4*n5)*j[p4a, n1, -1 + n2, 0, -1 + n4, 2 + n5, 2, 0, 1, 0, 1, 1, 0, 
      1, 1])/(2*(-2 + d - 2*n4)*(-1 + n4)*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) - ((-4 + d)*(-10 + 3*d + 2*n1 - 4*n4)*
     j[p4a, n1, -1 + n2, 0, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 2])/
    (2*(-2 + d - 2*n4)*(-10 + 3*d - n2 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((10 - 3*d + 2*n1 + 2*n2 + 2*n5)*j[p4a, n1, -1 + n2, 0, n4, 1 + n5, 1, 0, 
      1, 0, 2, 1, 0, 1, 1])/(2*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + j[p4a, n1, -1 + n2, 0, n4, 1 + n5, 2, 0, 1, 0, 1, 
     1, 0, 1, 1]/(2*(-3 + d - n4 - n5)) - 
   ((1 + n5)*(80 - 54*d + 9*d^2 - 8*n1 + 2*d*n1 + 4*n2 - 2*d*n2 + 64*n4 - 
      20*d*n4 + 4*n2*n4 + 8*n4^2 + 4*n5 - 2*d*n5 + 4*n4*n5)*
     j[p4a, n1, -1 + n2, 0, n4, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-2 + d - 2*n4)*(-10 + 3*d - n2 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((1 + n5)*(80 - 54*d + 9*d^2 - 8*n1 + 2*d*n1 + 4*n2 - 2*d*n2 + 64*n4 - 
      20*d*n4 + 4*n2*n4 + 8*n4^2 + 4*n5 - 2*d*n5 + 4*n4*n5)*
     j[p4a, n1, -1 + n2, 1, -1 + n4, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    (2*(-2 + d - 2*n4)*(-1 + n4)*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + ((280 - 324*d + 122*d^2 - 15*d^3 - 16*n1 + 
      12*d*n1 - 2*d^2*n1 + 20*n2 - 18*d*n2 + 4*d^2*n2 + 472*n4 - 340*d*n4 + 
      60*d^2*n4 - 16*n1*n4 + 4*d*n1*n4 + 32*n2*n4 - 14*d*n2*n4 + 216*n4^2 - 
      72*d*n4^2 + 12*n2*n4^2 + 24*n4^3 + 420*n5 - 428*d*n5 + 141*d^2*n5 - 
      15*d^3*n5 - 24*n1*n5 + 14*d*n1*n5 - 2*d^2*n1*n5 + 28*n2*n5 - 
      22*d*n2*n5 + 4*d^2*n2*n5 + 616*n4*n5 - 390*d*n4*n5 + 60*d^2*n4*n5 - 
      16*n1*n4*n5 + 4*d*n1*n4*n5 + 40*n2*n4*n5 - 14*d*n2*n4*n5 + 
      244*n4^2*n5 - 72*d*n4^2*n5 + 12*n2*n4^2*n5 + 24*n4^3*n5 + 148*n5^2 - 
      108*d*n5^2 + 19*d^2*n5^2 - 8*n1*n5^2 + 2*d*n1*n5^2 + 8*n2*n5^2 - 
      4*d*n2*n5^2 + 152*n4*n5^2 - 50*d*n4*n5^2 + 8*n2*n4*n5^2 + 
      28*n4^2*n5^2 + 8*n5^3 - 4*d*n5^3 + 8*n4*n5^3)*
     j[p4a, n1, -1 + n2, 1, -1 + n4, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-2 + d - 2*n4)*(-1 + n4)*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + ((1 + n5)*j[p4a, n1, -1 + n2, 1, -1 + n4, 2 + n5, 
      2, 0, 1, 0, 0, 1, 0, 1, 1])/((-1 + n4)*(3 - d + n4 + n5)) + 
   ((1 + n5)*(80 - 54*d + 9*d^2 - 8*n1 + 2*d*n1 + 4*n2 - 2*d*n2 + 64*n4 - 
      20*d*n4 + 4*n2*n4 + 8*n4^2 + 4*n5 - 2*d*n5 + 4*n4*n5)*
     j[p4a, n1, -1 + n2, 1, -1 + n4, 2 + n5, 2, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-2 + d - 2*n4)*(-1 + n4)*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + ((1 + n5)*(80 - 54*d + 9*d^2 - 8*n1 + 2*d*n1 + 
      4*n2 - 2*d*n2 + 64*n4 - 20*d*n4 + 4*n2*n4 + 8*n4^2 + 4*n5 - 2*d*n5 + 
      4*n4*n5)*j[p4a, n1, -1 + n2, 1, -1 + n4, 2 + n5, 2, 0, 1, 0, 1, 1, 0, 
      1, 0])/(2*(-2 + d - 2*n4)*(-1 + n4)*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) - ((1 + n5)*(2 + n5)*(80 - 54*d + 9*d^2 - 8*n1 + 
      2*d*n1 + 4*n2 - 2*d*n2 + 64*n4 - 20*d*n4 + 4*n2*n4 + 8*n4^2 + 4*n5 - 
      2*d*n5 + 4*n4*n5)*j[p4a, n1, -1 + n2, 1, -1 + n4, 3 + n5, 1, -1, 1, 0, 
      1, 1, 0, 1, 1])/(2*(-2 + d - 2*n4)*(-1 + n4)*(-10 + 3*d - n2 - 2*n4 - 
      n5)*(-3 + d - n4 - n5)) - 
   ((1 + n5)*(2 + n5)*(80 - 54*d + 9*d^2 - 8*n1 + 2*d*n1 + 4*n2 - 2*d*n2 + 
      64*n4 - 20*d*n4 + 4*n2*n4 + 8*n4^2 + 4*n5 - 2*d*n5 + 4*n4*n5)*
     j[p4a, n1, -1 + n2, 1, -1 + n4, 3 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-2 + d - 2*n4)*(-1 + n4)*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + ((1 + n5)*(2 + n5)*(80 - 54*d + 9*d^2 - 8*n1 + 
      2*d*n1 + 4*n2 - 2*d*n2 + 64*n4 - 20*d*n4 + 4*n2*n4 + 8*n4^2 + 4*n5 - 
      2*d*n5 + 4*n4*n5)*j[p4a, n1, -1 + n2, 1, -1 + n4, 3 + n5, 1, 0, 1, 0, 
      1, 1, 0, 1, 0])/(2*(-2 + d - 2*n4)*(-1 + n4)*(-10 + 3*d - n2 - 2*n4 - 
      n5)*(-3 + d - n4 - n5)) - 
   ((1 + n5)*(2 + n5)*j[p4a, n1, -1 + n2, 1, -1 + n4, 3 + n5, 1, 0, 1, 0, 1, 
      1, 0, 1, 1])/((-1 + n4)*(3 - d + n4 + n5)) + 
   ((-10 + 3*d - 2*n1 - 2*n2 - 2*n5)*j[p4a, n1, -1 + n2, 1, n4, 1 + n5, 1, 0, 
      0, 0, 2, 1, 0, 1, 1])/(2*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + j[p4a, n1, -1 + n2, 1, n4, 1 + n5, 1, 0, 1, 0, 1, 
     1, 0, 0, 2]/(3 - d + n4 + n5) + ((-10 + 3*d - n1 - 2*n2 - n4 - 3*n5)*
     j[p4a, n1, -1 + n2, 1, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (-3 + d - n4 - n5) + ((-2*n1 - n2 + 2*n4 - n5)*j[p4a, n1, -1 + n2, 1, n4, 
      1 + n5, 1, 0, 1, 0, 2, 0, 0, 1, 1])/(2*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + ((-10 + 3*d - 2*n1 - 2*n2 - 2*n5)*
     j[p4a, n1, -1 + n2, 1, n4, 1 + n5, 1, 0, 1, 0, 2, 1, 0, 0, 1])/
    (2*(-10 + 3*d - n2 - 2*n4 - n5)*(-3 + d - n4 - n5)) - 
   j[p4a, n1, -1 + n2, 1, n4, 1 + n5, 1, 0, 2, 0, 1, 0, 0, 1, 1]/
    (2*(-3 + d - n4 - n5)) - j[p4a, n1, -1 + n2, 1, n4, 1 + n5, 1, 0, 2, 0, 
     1, 1, 0, 0, 1]/(2*(-3 + d - n4 - n5)) - 
   ((-10 + 3*d + 2*n1 - 4*n4)*(-3 + d - n4)*j[p4a, n1, -1 + n2, 1, n4, 
      1 + n5, 2, 0, 0, 0, 1, 1, 0, 1, 1])/((-2 + d - 2*n4)*
     (-10 + 3*d - n2 - 2*n4 - n5)*(-3 + d - n4 - n5)) - 
   j[p4a, n1, -1 + n2, 1, n4, 1 + n5, 2, 0, 1, 0, 0, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5)) - j[p4a, n1, -1 + n2, 1, n4, 1 + n5, 2, 0, 1, 0, 
     1, 1, 0, 0, 1]/(2*(-3 + d - n4 - n5)) - 
   j[p4a, n1, -1 + n2, 1, n4, 1 + n5, 2, 0, 1, 0, 1, 1, 0, 1, 0]/
    (2*(-3 + d - n4 - n5)) + ((1 + n5)*j[p4a, n1, -1 + n2, 1, n4, 2 + n5, 1, 
      -1, 1, 0, 1, 1, 0, 1, 1])/(3 - d + n4 + n5) + 
   ((1 + n5)*j[p4a, n1, -1 + n2, 1, n4, 2 + n5, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (3 - d + n4 + n5) + ((-1 - n5)*j[p4a, n1, -1 + n2, 1, n4, 2 + n5, 1, 0, 
      1, -1, 1, 1, 0, 1, 1])/(3 - d + n4 + n5) + 
   ((1 + n5)*j[p4a, n1, -1 + n2, 1, n4, 2 + n5, 1, 0, 1, 0, 0, 1, 0, 1, 1])/
    (3 - d + n4 + n5) + ((-1 - n5)*j[p4a, n1, -1 + n2, 1, n4, 2 + n5, 1, 0, 
      1, 0, 1, 0, 0, 1, 1])/(3 - d + n4 + n5) + 
   ((-1 - n5)*j[p4a, n1, -1 + n2, 1, n4, 2 + n5, 1, 0, 1, 0, 1, 1, -1, 1, 1])/
    (3 - d + n4 + n5) - ((1 + n5)*(10 - 3*d + 2*n1 + 2*n2 + 2*n5)*
     j[p4a, n1, -1 + n2, 1, n4, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(3 - d + n4 + n5)*(10 - 3*d + n2 + 2*n4 + n5)) + 
   ((-10 + 3*d + 2*n1 - 4*n4)*(-3 + d - n4)*(1 + n5)*
     j[p4a, n1, -1 + n2, 1, n4, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 0])/
    ((-2 + d - 2*n4)*(-10 + 3*d - n2 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((1 + n5)*j[p4a, n1, -1 + n2, 1, n4, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (3 - d + n4 + n5) + (n4*j[p4a, n1, -1 + n2, 1, 1 + n4, 1 + n5, 0, 0, 1, 
      0, 1, 1, 0, 1, 1])/(3 - d + n4 + n5) - 
   (n4*j[p4a, n1, -1 + n2, 1, 1 + n4, 1 + n5, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (3 - d + n4 + n5) + j[p4a, n1, -1 + n2, 2, n4, 1 + n5, 1, 0, 0, 0, 1, 1, 
     0, 1, 1]/(-3 + d - n4 - n5) + j[p4a, n1, -1 + n2, 2, n4, 1 + n5, 1, 0, 
     1, 0, 0, 1, 0, 1, 1]/(3 - d + n4 + n5) + 
   j[p4a, n1, -1 + n2, 2, n4, 1 + n5, 1, 0, 1, 0, 1, 0, 0, 1, 1]/
    (-3 + d - n4 - n5) + j[p4a, n1, -1 + n2, 2, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 
     0, 0, 1]/(2*(-3 + d - n4 - n5)) - 
   ((1 + n5)*(80 - 54*d + 9*d^2 - 8*n1 + 2*d*n1 + 4*n2 - 2*d*n2 + 64*n4 - 
      20*d*n4 + 4*n2*n4 + 8*n4^2 + 4*n5 - 2*d*n5 + 4*n4*n5)*
     j[p4a, n1, n2, 0, -2 + n4, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 2])/
    (2*(-2 + d - 2*n4)*(-1 + n4)*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) - ((1 + n5)*(80 - 54*d + 9*d^2 - 8*n1 + 2*d*n1 + 
      4*n2 - 2*d*n2 + 64*n4 - 20*d*n4 + 4*n2*n4 + 8*n4^2 + 4*n5 - 2*d*n5 + 
      4*n4*n5)*j[p4a, n1, n2, 0, -2 + n4, 2 + n5, 2, 0, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-2 + d - 2*n4)*(-1 + n4)*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + ((120 - 76*d + 12*d^2 - 16*n1 + 4*d*n1 + 4*n2 - 
      2*d*n2 + 40*n4 - 2*d*n4 - 3*d^2*n4 + 8*n1*n4 - 2*d*n1*n4 + 4*n2*n4 - 
      8*n4^2 + 4*d*n4^2 + 84*n5 - 56*d*n5 + 9*d^2*n5 - 8*n1*n5 + 2*d*n1*n5 + 
      4*n2*n5 - 2*d*n2*n5 + 68*n4*n5 - 20*d*n4*n5 + 4*n2*n4*n5 + 8*n4^2*n5 + 
      4*n5^2 - 2*d*n5^2 + 4*n4*n5^2)*j[p4a, n1, n2, 0, -1 + n4, 1 + n5, 1, 0, 
      1, 0, 1, 1, 0, 1, 2])/(2*(-2 + d - 2*n4)*(-1 + n4)*
     (-10 + 3*d - n2 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((120 - 76*d + 12*d^2 - 20*n1 + 6*d*n1 + 2*n2 - d*n2 + 44*n4 - 4*d*n4 - 
      3*d^2*n4 + 8*n1*n4 - 4*d*n1*n4 + 4*n2*n4 - d*n2*n4 - 8*n4^2 + 
      6*d*n4^2 + 4*n1*n4^2 + 2*n2*n4^2 - 4*n4^3 + 82*n5 - 55*d*n5 + 
      9*d^2*n5 - 8*n1*n5 + 2*d*n1*n5 + 4*n2*n5 - 2*d*n2*n5 + 68*n4*n5 - 
      21*d*n4*n5 + 4*n2*n4*n5 + 10*n4^2*n5 + 4*n5^2 - 2*d*n5^2 + 4*n4*n5^2)*
     j[p4a, n1, n2, 0, -1 + n4, 1 + n5, 2, 0, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-2 + d - 2*n4)*(-1 + n4)*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + ((1 + n5)*(80 - 54*d + 9*d^2 - 8*n1 + 2*d*n1 + 
      4*n2 - 2*d*n2 + 64*n4 - 20*d*n4 + 4*n2*n4 + 8*n4^2 + 4*n5 - 2*d*n5 + 
      4*n4*n5)*j[p4a, n1, n2, 0, -1 + n4, 2 + n5, 1, -1, 1, 0, 1, 1, 0, 1, 
      2])/(2*(-2 + d - 2*n4)*(-1 + n4)*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + ((1 + n5)*j[p4a, n1, n2, 0, -1 + n4, 2 + n5, 1, 0, 
      1, -1, 1, 1, 0, 1, 2])/((-1 + n4)*(3 - d + n4 + n5)) - 
   ((1 + n5)*(80 - 54*d + 9*d^2 - 8*n1 + 2*d*n1 + 4*n2 - 2*d*n2 + 64*n4 - 
      20*d*n4 + 4*n2*n4 + 8*n4^2 + 4*n5 - 2*d*n5 + 4*n4*n5)*
     j[p4a, n1, n2, 0, -1 + n4, 2 + n5, 1, 0, 1, 0, 1, 1, -1, 1, 2])/
    (2*(-2 + d - 2*n4)*(-1 + n4)*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) - ((-2 + n4)*(1 + n5)*(80 - 54*d + 9*d^2 - 8*n1 + 
      2*d*n1 + 4*n2 - 2*d*n2 + 64*n4 - 20*d*n4 + 4*n2*n4 + 8*n4^2 + 4*n5 - 
      2*d*n5 + 4*n4*n5)*j[p4a, n1, n2, 0, -1 + n4, 2 + n5, 1, 0, 1, 0, 1, 1, 
      0, 1, 1])/(2*(-2 + d - 2*n4)*(-1 + n4)*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + ((-1 - n5)*j[p4a, n1, n2, 0, -1 + n4, 2 + n5, 1, 
      0, 1, 0, 1, 1, 0, 1, 2])/((-1 + n4)*(3 - d + n4 + n5)) + 
   ((1 + n5)*j[p4a, n1, n2, 0, -1 + n4, 2 + n5, 2, 0, 1, -1, 1, 1, 0, 1, 1])/
    ((-1 + n4)*(3 - d + n4 + n5)) + j[p4a, n1, n2, 0, n4, n5, 1, 0, 1, 0, 1, 
     1, 0, 1, 2]/(3 - d + n4 + n5) - j[p4a, n1, n2, 0, n4, n5, 2, 0, 1, 0, 1, 
     1, 0, 1, 1]/(2*(-3 + d - n4 - n5)) + 
   ((-4 + d)*(-10 + 3*d + 2*n1 - 4*n4)*j[p4a, n1, n2, 0, n4, 1 + n5, 1, -1, 
      1, 0, 1, 1, 0, 1, 2])/(2*(-2 + d - 2*n4)*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + ((-2*n1 - n2 + 2*n4 - n5)*
     j[p4a, n1, n2, 0, n4, 1 + n5, 1, -1, 1, 0, 2, 1, 0, 1, 1])/
    (2*(-10 + 3*d - n2 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   j[p4a, n1, n2, 0, n4, 1 + n5, 1, 0, 1, -1, 1, 1, 0, 1, 2]/
    (2*(-3 + d - n4 - n5)) - ((-4 + d)*(-10 + 3*d + 2*n1 - 4*n4)*
     j[p4a, n1, n2, 0, n4, 1 + n5, 1, 0, 1, 0, 1, 1, -1, 1, 2])/
    (2*(-2 + d - 2*n4)*(-10 + 3*d - n2 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((120 - 76*d + 12*d^2 - 20*n1 + 6*d*n1 + 2*n2 - d*n2 - 4*n1*n2 + 
      2*d*n1*n2 - 2*n2^2 + d*n2^2 + 44*n4 - 4*d*n4 - 3*d^2*n4 + 8*n1*n4 - 
      4*d*n1*n4 + 8*n2*n4 - 3*d*n2*n4 - 4*n1*n2*n4 - 2*n2^2*n4 - 8*n4^2 + 
      6*d*n4^2 + 4*n1*n4^2 + 6*n2*n4^2 - 4*n4^3 + 82*n5 - 55*d*n5 + 
      9*d^2*n5 - 8*n1*n5 + 2*d*n1*n5 + 2*n2*n5 - d*n2*n5 + 68*n4*n5 - 
      21*d*n4*n5 + 2*n2*n4*n5 + 10*n4^2*n5 + 4*n5^2 - 2*d*n5^2 + 4*n4*n5^2)*
     j[p4a, n1, n2, 0, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-2 + d - 2*n4)*(-10 + 3*d - n2 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-140 + 72*d - 9*d^2 + 12*n1 - 2*d*n1 - 8*n2 + 2*d*n2 - 60*n4 + 14*d*n4 - 
      2*n2*n4 - 4*n4^2 - 48*n5 + 14*d*n5 + 4*n1*n5 - 2*n2*n5 - 14*n4*n5 - 
      2*n5^2)*j[p4a, n1, n2, 0, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 2])/
    (4*(-10 + 3*d - n2 - 2*n4 - n5)*(-4 + d - n4 - n5)*(-3 + d - n4 - n5)) + 
   j[p4a, n1, n2, 0, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 2, 1]/
    (2*(-3 + d - n4 - n5)) + ((1 + n5)*j[p4a, n1, n2, 0, n4, 2 + n5, 1, 0, 1, 
      -1, 1, 1, 0, 1, 1])/(3 - d + n4 + n5) + 
   (n4*j[p4a, n1, n2, 0, 1 + n4, n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5)) - (n4*j[p4a, n1, n2, 0, 1 + n4, 1 + n5, 1, -1, 1, 
      0, 1, 1, 0, 1, 1])/(2*(3 - d + n4 + n5)) + 
   ((1 + n5)*(80 - 54*d + 9*d^2 - 8*n1 + 2*d*n1 + 4*n2 - 2*d*n2 + 64*n4 - 
      20*d*n4 + 4*n2*n4 + 8*n4^2 + 4*n5 - 2*d*n5 + 4*n4*n5)*
     j[p4a, n1, n2, 1, -2 + n4, 2 + n5, 0, 0, 1, 0, 1, 1, 0, 1, 2])/
    (2*(-2 + d - 2*n4)*(-1 + n4)*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + ((1 + n5)*(80 - 54*d + 9*d^2 - 8*n1 + 2*d*n1 + 
      4*n2 - 2*d*n2 + 64*n4 - 20*d*n4 + 4*n2*n4 + 8*n4^2 + 4*n5 - 2*d*n5 + 
      4*n4*n5)*j[p4a, n1, n2, 1, -2 + n4, 2 + n5, 1, 0, 0, 0, 1, 1, 0, 1, 2])/
    (2*(-2 + d - 2*n4)*(-1 + n4)*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + ((1 + n5)*(80 - 54*d + 9*d^2 - 8*n1 + 2*d*n1 + 
      4*n2 - 2*d*n2 + 64*n4 - 20*d*n4 + 4*n2*n4 + 8*n4^2 + 4*n5 - 2*d*n5 + 
      4*n4*n5)*j[p4a, n1, n2, 1, -2 + n4, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    (2*(-2 + d - 2*n4)*(-1 + n4)*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) - ((1 + n5)*(80 - 54*d + 9*d^2 - 8*n1 + 2*d*n1 + 
      4*n2 - 2*d*n2 + 64*n4 - 20*d*n4 + 4*n2*n4 + 8*n4^2 + 4*n5 - 2*d*n5 + 
      4*n4*n5)*j[p4a, n1, n2, 1, -2 + n4, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-2 + d - 2*n4)*(-1 + n4)*(-10 + 3*d - n2 - 2*n4 - n5)) + 
   ((1 + n5)*(80 - 54*d + 9*d^2 - 8*n1 + 2*d*n1 + 4*n2 - 2*d*n2 + 64*n4 - 
      20*d*n4 + 4*n2*n4 + 8*n4^2 + 4*n5 - 2*d*n5 + 4*n4*n5)*
     j[p4a, n1, n2, 1, -2 + n4, 2 + n5, 2, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-2 + d - 2*n4)*(-1 + n4)*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + ((1 + n5)*(80 - 54*d + 9*d^2 - 8*n1 + 2*d*n1 + 
      4*n2 - 2*d*n2 + 64*n4 - 20*d*n4 + 4*n2*n4 + 8*n4^2 + 4*n5 - 2*d*n5 + 
      4*n4*n5)*j[p4a, n1, n2, 1, -2 + n4, 2 + n5, 2, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-2 + d - 2*n4)*(-1 + n4)*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + ((1 + n5)*(80 - 54*d + 9*d^2 - 8*n1 + 2*d*n1 + 
      4*n2 - 2*d*n2 + 64*n4 - 20*d*n4 + 4*n2*n4 + 8*n4^2 + 4*n5 - 2*d*n5 + 
      4*n4*n5)*j[p4a, n1, n2, 1, -2 + n4, 2 + n5, 2, 0, 1, 0, 1, 1, 0, 1, 0])/
    (2*(-2 + d - 2*n4)*(-1 + n4)*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + ((1 + n5)*(2 + n5)*(80 - 54*d + 9*d^2 - 8*n1 + 
      2*d*n1 + 4*n2 - 2*d*n2 + 64*n4 - 20*d*n4 + 4*n2*n4 + 8*n4^2 + 4*n5 - 
      2*d*n5 + 4*n4*n5)*j[p4a, n1, n2, 1, -2 + n4, 3 + n5, 0, 0, 1, 0, 1, 1, 
      0, 1, 1])/(2*(-2 + d - 2*n4)*(-1 + n4)*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) - ((1 + n5)*(2 + n5)*(80 - 54*d + 9*d^2 - 8*n1 + 
      2*d*n1 + 4*n2 - 2*d*n2 + 64*n4 - 20*d*n4 + 4*n2*n4 + 8*n4^2 + 4*n5 - 
      2*d*n5 + 4*n4*n5)*j[p4a, n1, n2, 1, -2 + n4, 3 + n5, 1, -1, 1, 0, 1, 1, 
      0, 1, 1])/(2*(-2 + d - 2*n4)*(-1 + n4)*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + ((1 + n5)*(2 + n5)*(80 - 54*d + 9*d^2 - 8*n1 + 
      2*d*n1 + 4*n2 - 2*d*n2 + 64*n4 - 20*d*n4 + 4*n2*n4 + 8*n4^2 + 4*n5 - 
      2*d*n5 + 4*n4*n5)*j[p4a, n1, n2, 1, -2 + n4, 3 + n5, 1, 0, 1, 0, 1, 1, 
      -1, 1, 1])/(2*(-2 + d - 2*n4)*(-1 + n4)*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) - ((1 + n5)*(2 + n5)*(80 - 54*d + 9*d^2 - 8*n1 + 
      2*d*n1 + 4*n2 - 2*d*n2 + 64*n4 - 20*d*n4 + 4*n2*n4 + 8*n4^2 + 4*n5 - 
      2*d*n5 + 4*n4*n5)*j[p4a, n1, n2, 1, -2 + n4, 3 + n5, 1, 0, 1, 0, 1, 1, 
      0, 0, 1])/(2*(-2 + d - 2*n4)*(-1 + n4)*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + ((1 + n5)*(2 + n5)*(80 - 54*d + 9*d^2 - 8*n1 + 
      2*d*n1 + 4*n2 - 2*d*n2 + 64*n4 - 20*d*n4 + 4*n2*n4 + 8*n4^2 + 4*n5 - 
      2*d*n5 + 4*n4*n5)*j[p4a, n1, n2, 1, -2 + n4, 3 + n5, 1, 0, 1, 0, 1, 1, 
      0, 1, 0])/(2*(-2 + d - 2*n4)*(-1 + n4)*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + ((-120 + 76*d - 12*d^2 + 16*n1 - 4*d*n1 - 4*n2 + 
      2*d*n2 - 40*n4 + 2*d*n4 + 3*d^2*n4 - 8*n1*n4 + 2*d*n1*n4 - 4*n2*n4 + 
      8*n4^2 - 4*d*n4^2 - 84*n5 + 56*d*n5 - 9*d^2*n5 + 8*n1*n5 - 2*d*n1*n5 - 
      4*n2*n5 + 2*d*n2*n5 - 68*n4*n5 + 20*d*n4*n5 - 4*n2*n4*n5 - 8*n4^2*n5 - 
      4*n5^2 + 2*d*n5^2 - 4*n4*n5^2)*j[p4a, n1, n2, 1, -1 + n4, 1 + n5, 0, 0, 
      1, 0, 1, 1, 0, 1, 2])/(2*(-2 + d - 2*n4)*(-1 + n4)*
     (-10 + 3*d - n2 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-120 + 76*d - 12*d^2 + 16*n1 - 4*d*n1 - 4*n2 + 2*d*n2 - 40*n4 + 2*d*n4 + 
      3*d^2*n4 - 8*n1*n4 + 2*d*n1*n4 - 4*n2*n4 + 8*n4^2 - 4*d*n4^2 - 84*n5 + 
      56*d*n5 - 9*d^2*n5 + 8*n1*n5 - 2*d*n1*n5 - 4*n2*n5 + 2*d*n2*n5 - 
      68*n4*n5 + 20*d*n4*n5 - 4*n2*n4*n5 - 8*n4^2*n5 - 4*n5^2 + 2*d*n5^2 - 
      4*n4*n5^2)*j[p4a, n1, n2, 1, -1 + n4, 1 + n5, 1, 0, 0, 0, 1, 1, 0, 1, 
      2])/(2*(-2 + d - 2*n4)*(-1 + n4)*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + ((-120 + 76*d - 12*d^2 + 16*n1 - 4*d*n1 - 4*n2 + 
      2*d*n2 - 40*n4 + 2*d*n4 + 3*d^2*n4 - 8*n1*n4 + 2*d*n1*n4 - 4*n2*n4 + 
      8*n4^2 - 4*d*n4^2 - 84*n5 + 56*d*n5 - 9*d^2*n5 + 8*n1*n5 - 2*d*n1*n5 - 
      4*n2*n5 + 2*d*n2*n5 - 68*n4*n5 + 20*d*n4*n5 - 4*n2*n4*n5 - 8*n4^2*n5 - 
      4*n5^2 + 2*d*n5^2 - 4*n4*n5^2)*j[p4a, n1, n2, 1, -1 + n4, 1 + n5, 1, 0, 
      1, 0, 1, 1, 0, 0, 2])/(2*(-2 + d - 2*n4)*(-1 + n4)*
     (-10 + 3*d - n2 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((220 - 136*d + 21*d^2 - 36*n1 + 10*d*n1 + 4*n2 - 2*d*n2 + 80*n4 - 
      14*d*n4 - 3*d^2*n4 + 16*n1*n4 - 6*d*n1*n4 + 8*n2*n4 - 2*d*n2*n4 + 
      4*n4^2 + 2*d*n4^2 + 4*n1*n4^2 + 4*n2*n4^2 + 164*n5 - 110*d*n5 + 
      18*d^2*n5 - 16*n1*n5 + 4*d*n1*n5 + 8*n2*n5 - 4*d*n2*n5 + 136*n4*n5 - 
      42*d*n4*n5 + 8*n2*n4*n5 + 20*n4^2*n5 + 8*n5^2 - 4*d*n5^2 + 8*n4*n5^2)*
     j[p4a, n1, n2, 1, -1 + n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-2 + d - 2*n4)*(-1 + n4)*(-10 + 3*d - n2 - 2*n4 - n5)) + 
   ((-120 + 76*d - 12*d^2 + 20*n1 - 6*d*n1 - 2*n2 + d*n2 - 44*n4 + 4*d*n4 + 
      3*d^2*n4 - 8*n1*n4 + 4*d*n1*n4 - 4*n2*n4 + d*n2*n4 + 8*n4^2 - 
      6*d*n4^2 - 4*n1*n4^2 - 2*n2*n4^2 + 4*n4^3 - 82*n5 + 55*d*n5 - 
      9*d^2*n5 + 8*n1*n5 - 2*d*n1*n5 - 4*n2*n5 + 2*d*n2*n5 - 68*n4*n5 + 
      21*d*n4*n5 - 4*n2*n4*n5 - 10*n4^2*n5 - 4*n5^2 + 2*d*n5^2 - 4*n4*n5^2)*
     j[p4a, n1, n2, 1, -1 + n4, 1 + n5, 2, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-2 + d - 2*n4)*(-1 + n4)*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + j[p4a, n1, n2, 1, -1 + n4, 1 + n5, 2, 0, 1, 0, 0, 
     1, 0, 1, 1]/(2*(-3 + d - n4 - n5)) + 
   ((-120 + 76*d - 12*d^2 + 20*n1 - 6*d*n1 - 2*n2 + d*n2 - 44*n4 + 4*d*n4 + 
      3*d^2*n4 - 8*n1*n4 + 4*d*n1*n4 - 4*n2*n4 + d*n2*n4 + 8*n4^2 - 
      6*d*n4^2 - 4*n1*n4^2 - 2*n2*n4^2 + 4*n4^3 - 82*n5 + 55*d*n5 - 
      9*d^2*n5 + 8*n1*n5 - 2*d*n1*n5 - 4*n2*n5 + 2*d*n2*n5 - 68*n4*n5 + 
      21*d*n4*n5 - 4*n2*n4*n5 - 10*n4^2*n5 - 4*n5^2 + 2*d*n5^2 - 4*n4*n5^2)*
     j[p4a, n1, n2, 1, -1 + n4, 1 + n5, 2, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-2 + d - 2*n4)*(-1 + n4)*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + ((-120 + 76*d - 12*d^2 + 20*n1 - 6*d*n1 - 2*n2 + 
      d*n2 - 44*n4 + 4*d*n4 + 3*d^2*n4 - 8*n1*n4 + 4*d*n1*n4 - 4*n2*n4 + 
      d*n2*n4 + 8*n4^2 - 6*d*n4^2 - 4*n1*n4^2 - 2*n2*n4^2 + 4*n4^3 - 82*n5 + 
      55*d*n5 - 9*d^2*n5 + 8*n1*n5 - 2*d*n1*n5 - 4*n2*n5 + 2*d*n2*n5 - 
      68*n4*n5 + 21*d*n4*n5 - 4*n2*n4*n5 - 10*n4^2*n5 - 4*n5^2 + 2*d*n5^2 - 
      4*n4*n5^2)*j[p4a, n1, n2, 1, -1 + n4, 1 + n5, 2, 0, 1, 0, 1, 1, 0, 1, 
      0])/(2*(-2 + d - 2*n4)*(-1 + n4)*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + ((-1 - n5)*j[p4a, n1, n2, 1, -1 + n4, 2 + n5, 0, 
      0, 1, -1, 1, 1, 0, 1, 2])/((-1 + n4)*(3 - d + n4 + n5)) + 
   ((-320 + 216*d - 36*d^2 + 32*n1 - 8*d*n1 - 16*n2 + 8*d*n2 - 136*n4 + 
      4*d*n4 + 12*d^2*n4 - 16*n1*n4 + 4*d*n1*n4 - 12*n2*n4 - 2*d*n2*n4 + 
      48*n4^2 - 24*d*n4^2 + 4*n2*n4^2 + 8*n4^3 - 416*n5 + 278*d*n5 - 
      45*d^2*n5 + 40*n1*n5 - 10*d*n1*n5 - 20*n2*n5 + 10*d*n2*n5 - 212*n4*n5 + 
      22*d*n4*n5 + 12*d^2*n4*n5 - 16*n1*n4*n5 + 4*d*n1*n4*n5 - 16*n2*n4*n5 - 
      2*d*n2*n4*n5 + 44*n4^2*n5 - 24*d*n4^2*n5 + 4*n2*n4^2*n5 + 8*n4^3*n5 - 
      100*n5^2 + 64*d*n5^2 - 9*d^2*n5^2 + 8*n1*n5^2 - 2*d*n1*n5^2 - 
      4*n2*n5^2 + 2*d*n2*n5^2 - 80*n4*n5^2 + 18*d*n4*n5^2 - 4*n2*n4*n5^2 - 
      4*n4^2*n5^2 - 4*n5^3 + 2*d*n5^3 - 4*n4*n5^3)*j[p4a, n1, n2, 1, -1 + n4, 
      2 + n5, 0, 0, 1, 0, 1, 1, 0, 1, 1])/(2*(-2 + d - 2*n4)*(-1 + n4)*
     (-10 + 3*d - n2 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((1 + n5)*j[p4a, n1, n2, 1, -1 + n4, 2 + n5, 0, 0, 1, 0, 1, 1, 0, 1, 2])/
    ((-1 + n4)*(3 - d + n4 + n5)) - 
   ((1 + n5)*(80 - 54*d + 9*d^2 - 8*n1 + 2*d*n1 + 4*n2 - 2*d*n2 + 64*n4 - 
      20*d*n4 + 4*n2*n4 + 8*n4^2 + 4*n5 - 2*d*n5 + 4*n4*n5)*
     j[p4a, n1, n2, 1, -1 + n4, 2 + n5, 1, -1, 1, 0, 1, 1, 0, 0, 2])/
    (2*(-2 + d - 2*n4)*(-1 + n4)*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + ((160 - 48*d - 20*d^2 + 6*d^3 - 32*n1 + 8*d*n1 + 
      4*d*n2 - 2*d^2*n2 - 96*n4 + 140*d*n4 - 34*d^2*n4 + 16*n1*n4 - 
      4*d*n1*n4 - 8*n2*n4 + 8*d*n2*n4 - 128*n4^2 + 48*d*n4^2 - 8*n2*n4^2 - 
      16*n4^3 + 200*n5 - 66*d*n5 - 19*d^2*n5 + 6*d^3*n5 - 40*n1*n5 + 
      10*d*n1*n5 + 4*d*n2*n5 - 2*d^2*n2*n5 - 88*n4*n5 + 144*d*n4*n5 - 
      34*d^2*n4*n5 + 16*n1*n4*n5 - 4*d*n1*n4*n5 - 8*n2*n4*n5 + 8*d*n2*n4*n5 - 
      136*n4^2*n5 + 48*d*n4^2*n5 - 8*n2*n4^2*n5 - 16*n4^3*n5 + 40*n5^2 - 
      18*d*n5^2 + d^2*n5^2 - 8*n1*n5^2 + 2*d*n1*n5^2 + 8*n4*n5^2 + 
      4*d*n4*n5^2 - 8*n4^2*n5^2)*j[p4a, n1, n2, 1, -1 + n4, 2 + n5, 1, -1, 1, 
      0, 1, 1, 0, 1, 1])/(2*(-2 + d - 2*n4)*(-1 + n4)*
     (-10 + 3*d - n2 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-1 - n5)*j[p4a, n1, n2, 1, -1 + n4, 2 + n5, 1, 0, 0, -1, 1, 1, 0, 1, 2])/
    ((-1 + n4)*(3 - d + n4 + n5)) - 
   ((-2 + n4)*(1 + n5)*(80 - 54*d + 9*d^2 - 8*n1 + 2*d*n1 + 4*n2 - 2*d*n2 + 
      64*n4 - 20*d*n4 + 4*n2*n4 + 8*n4^2 + 4*n5 - 2*d*n5 + 4*n4*n5)*
     j[p4a, n1, n2, 1, -1 + n4, 2 + n5, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-2 + d - 2*n4)*(-1 + n4)*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + ((1 + n5)*j[p4a, n1, n2, 1, -1 + n4, 2 + n5, 1, 0, 
      0, 0, 1, 1, 0, 1, 2])/((-1 + n4)*(3 - d + n4 + n5)) + 
   ((-1 - n5)*j[p4a, n1, n2, 1, -1 + n4, 2 + n5, 1, 0, 1, -1, 1, 1, 0, 0, 2])/
    ((-1 + n4)*(3 - d + n4 + n5)) - 
   (2*(1 + n5)*j[p4a, n1, n2, 1, -1 + n4, 2 + n5, 1, 0, 1, -1, 1, 1, 0, 1, 
      1])/(-1 + n4) + ((-1 - n5)*j[p4a, n1, n2, 1, -1 + n4, 2 + n5, 1, 0, 1, 
      0, 0, 1, 0, 1, 1])/((-1 + n4)*(3 - d + n4 + n5)) + 
   ((1 + n5)*(80 - 54*d + 9*d^2 - 8*n1 + 2*d*n1 + 4*n2 - 2*d*n2 + 64*n4 - 
      20*d*n4 + 4*n2*n4 + 8*n4^2 + 4*n5 - 2*d*n5 + 4*n4*n5)*
     j[p4a, n1, n2, 1, -1 + n4, 2 + n5, 1, 0, 1, 0, 1, 1, -1, 0, 2])/
    (2*(-2 + d - 2*n4)*(-1 + n4)*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + ((-160 + 48*d + 20*d^2 - 6*d^3 + 32*n1 - 8*d*n1 - 
      4*d*n2 + 2*d^2*n2 + 96*n4 - 140*d*n4 + 34*d^2*n4 - 16*n1*n4 + 
      4*d*n1*n4 + 8*n2*n4 - 8*d*n2*n4 + 128*n4^2 - 48*d*n4^2 + 8*n2*n4^2 + 
      16*n4^3 - 200*n5 + 66*d*n5 + 19*d^2*n5 - 6*d^3*n5 + 40*n1*n5 - 
      10*d*n1*n5 - 4*d*n2*n5 + 2*d^2*n2*n5 + 88*n4*n5 - 144*d*n4*n5 + 
      34*d^2*n4*n5 - 16*n1*n4*n5 + 4*d*n1*n4*n5 + 8*n2*n4*n5 - 8*d*n2*n4*n5 + 
      136*n4^2*n5 - 48*d*n4^2*n5 + 8*n2*n4^2*n5 + 16*n4^3*n5 - 40*n5^2 + 
      18*d*n5^2 - d^2*n5^2 + 8*n1*n5^2 - 2*d*n1*n5^2 - 8*n4*n5^2 - 
      4*d*n4*n5^2 + 8*n4^2*n5^2)*j[p4a, n1, n2, 1, -1 + n4, 2 + n5, 1, 0, 1, 
      0, 1, 1, -1, 1, 1])/(2*(-2 + d - 2*n4)*(-1 + n4)*
     (-10 + 3*d - n2 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((120 - 76*d + 12*d^2 - 20*n1 + 6*d*n1 + 2*n2 - d*n2 + 44*n4 - 4*d*n4 - 
      3*d^2*n4 + 8*n1*n4 - 4*d*n1*n4 + 4*n2*n4 - d*n2*n4 - 8*n4^2 + 
      6*d*n4^2 + 4*n1*n4^2 + 2*n2*n4^2 - 4*n4^3 + 202*n5 - 131*d*n5 + 
      21*d^2*n5 - 28*n1*n5 + 8*d*n1*n5 + 6*n2*n5 - 3*d*n2*n5 + 112*n4*n5 - 
      25*d*n4*n5 - 3*d^2*n4*n5 + 8*n1*n4*n5 - 4*d*n1*n4*n5 + 8*n2*n4*n5 - 
      d*n2*n4*n5 + 2*n4^2*n5 + 6*d*n4^2*n5 + 4*n1*n4^2*n5 + 2*n2*n4^2*n5 - 
      4*n4^3*n5 + 86*n5^2 - 57*d*n5^2 + 9*d^2*n5^2 - 8*n1*n5^2 + 
      2*d*n1*n5^2 + 4*n2*n5^2 - 2*d*n2*n5^2 + 72*n4*n5^2 - 21*d*n4*n5^2 + 
      4*n2*n4*n5^2 + 10*n4^2*n5^2 + 4*n5^3 - 2*d*n5^3 + 4*n4*n5^3)*
     j[p4a, n1, n2, 1, -1 + n4, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-2 + d - 2*n4)*(-1 + n4)*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + ((1 + n5)*(90 - 47*d + 6*d^2 - 2*n1 + 8*n2 - 
      2*d*n2 + 30*n4 - 7*d*n4 + 2*n1*n4 + 2*n2*n4 + 28*n5 - 8*d*n5 + 
      2*n2*n5 + 6*n4*n5 + 2*n5^2)*j[p4a, n1, n2, 1, -1 + n4, 2 + n5, 1, 0, 1, 
      0, 1, 1, 0, 0, 2])/(2*(-1 + n4)*(3 - d + n4 + n5)*(4 - d + n4 + n5)*
     (10 - 3*d + n2 + 2*n4 + n5)) + 
   ((-320 + 216*d - 36*d^2 + 36*n1 - 10*d*n1 - 14*n2 + 7*d*n2 - 140*n4 + 
      6*d*n4 + 12*d^2*n4 - 16*n1*n4 + 6*d*n1*n4 - 12*n2*n4 - d*n2*n4 + 
      48*n4^2 - 26*d*n4^2 - 4*n1*n4^2 + 2*n2*n4^2 + 12*n4^3 - 414*n5 + 
      277*d*n5 - 45*d^2*n5 + 44*n1*n5 - 12*d*n1*n5 - 18*n2*n5 + 9*d*n2*n5 - 
      216*n4*n5 + 25*d*n4*n5 + 12*d^2*n4*n5 - 16*n1*n4*n5 + 6*d*n1*n4*n5 - 
      16*n2*n4*n5 - d*n2*n4*n5 + 42*n4^2*n5 - 26*d*n4^2*n5 - 4*n1*n4^2*n5 + 
      2*n2*n4^2*n5 + 12*n4^3*n5 - 98*n5^2 + 63*d*n5^2 - 9*d^2*n5^2 + 
      8*n1*n5^2 - 2*d*n1*n5^2 - 4*n2*n5^2 + 2*d*n2*n5^2 - 80*n4*n5^2 + 
      19*d*n4*n5^2 - 4*n2*n4*n5^2 - 6*n4^2*n5^2 - 4*n5^3 + 2*d*n5^3 - 
      4*n4*n5^3)*j[p4a, n1, n2, 1, -1 + n4, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 
      0])/(2*(-2 + d - 2*n4)*(-1 + n4)*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + ((1 + n5)*j[p4a, n1, n2, 1, -1 + n4, 2 + n5, 1, 0, 
      1, 0, 1, 1, 0, 1, 1])/(-1 + n4) + 
   ((1 + n5)*(80 - 54*d + 9*d^2 - 8*n1 + 2*d*n1 + 4*n2 - 2*d*n2 + 64*n4 - 
      20*d*n4 + 4*n2*n4 + 8*n4^2 + 4*n5 - 2*d*n5 + 4*n4*n5)*
     j[p4a, n1, n2, 1, -1 + n4, 2 + n5, 2, -1, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-2 + d - 2*n4)*(-1 + n4)*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + ((-1 - n5)*j[p4a, n1, n2, 1, -1 + n4, 2 + n5, 2, 
      -1, 1, 0, 0, 1, 0, 1, 1])/((-1 + n4)*(3 - d + n4 + n5)) + 
   ((-1 - n5)*j[p4a, n1, n2, 1, -1 + n4, 2 + n5, 2, 0, 0, -1, 1, 1, 0, 1, 1])/
    ((-1 + n4)*(3 - d + n4 + n5)) - 
   ((1 + n5)*(80 - 54*d + 9*d^2 - 8*n1 + 2*d*n1 + 4*n2 - 2*d*n2 + 64*n4 - 
      20*d*n4 + 4*n2*n4 + 8*n4^2 + 4*n5 - 2*d*n5 + 4*n4*n5)*
     j[p4a, n1, n2, 1, -1 + n4, 2 + n5, 2, 0, 0, 0, 1, 1, -1, 1, 1])/
    (2*(-2 + d - 2*n4)*(-1 + n4)*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + ((-1 - n5)*j[p4a, n1, n2, 1, -1 + n4, 2 + n5, 2, 
      0, 1, -1, 1, 1, 0, 0, 1])/((-1 + n4)*(3 - d + n4 + n5)) + 
   ((-1 - n5)*j[p4a, n1, n2, 1, -1 + n4, 2 + n5, 2, 0, 1, -1, 1, 1, 0, 1, 0])/
    ((-1 + n4)*(3 - d + n4 + n5)) + 
   ((1 + n5)*j[p4a, n1, n2, 1, -1 + n4, 2 + n5, 2, 0, 1, 0, 0, 1, -1, 1, 1])/
    ((-1 + n4)*(3 - d + n4 + n5)) - 
   ((1 + n5)*(2 + n5)*j[p4a, n1, n2, 1, -1 + n4, 3 + n5, 0, 0, 1, -1, 1, 1, 
      0, 1, 1])/((-1 + n4)*(3 - d + n4 + n5)) + 
   ((1 + n5)*(2 + n5)*j[p4a, n1, n2, 1, -1 + n4, 3 + n5, 0, 0, 1, 0, 1, 1, 0, 
      1, 1])/((-1 + n4)*(3 - d + n4 + n5)) + 
   ((1 + n5)*(2 + n5)*(80 - 54*d + 9*d^2 - 8*n1 + 2*d*n1 + 4*n2 - 2*d*n2 + 
      64*n4 - 20*d*n4 + 4*n2*n4 + 8*n4^2 + 4*n5 - 2*d*n5 + 4*n4*n5)*
     j[p4a, n1, n2, 1, -1 + n4, 3 + n5, 1, -2, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-2 + d - 2*n4)*(-1 + n4)*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + ((1 + n5)*(2 + n5)*j[p4a, n1, n2, 1, -1 + n4, 
      3 + n5, 1, -1, 1, -1, 1, 1, 0, 1, 1])/((-1 + n4)*(3 - d + n4 + n5)) - 
   ((1 + n5)*(2 + n5)*(80 - 54*d + 9*d^2 - 8*n1 + 2*d*n1 + 4*n2 - 2*d*n2 + 
      64*n4 - 20*d*n4 + 4*n2*n4 + 8*n4^2 + 4*n5 - 2*d*n5 + 4*n4*n5)*
     j[p4a, n1, n2, 1, -1 + n4, 3 + n5, 1, -1, 1, 0, 1, 1, -1, 1, 1])/
    (2*(-2 + d - 2*n4)*(-1 + n4)*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) - ((1 + n5)*(2 + n5)*j[p4a, n1, n2, 1, -1 + n4, 
      3 + n5, 1, 0, 1, -1, 1, 1, -1, 1, 1])/((-1 + n4)*(3 - d + n4 + n5)) + 
   ((1 + n5)*(2 + n5)*j[p4a, n1, n2, 1, -1 + n4, 3 + n5, 1, 0, 1, -1, 1, 1, 
      0, 0, 1])/((-1 + n4)*(3 - d + n4 + n5)) - 
   ((1 + n5)*(2 + n5)*j[p4a, n1, n2, 1, -1 + n4, 3 + n5, 1, 0, 1, -1, 1, 1, 
      0, 1, 0])/((-1 + n4)*(3 - d + n4 + n5)) + 
   j[p4a, n1, n2, 1, n4, n5, 0, 0, 1, 0, 1, 1, 0, 1, 2]/(-3 + d - n4 - n5) + 
   j[p4a, n1, n2, 1, n4, n5, 1, 0, 0, 0, 1, 1, 0, 1, 2]/(-3 + d - n4 - n5) + 
   j[p4a, n1, n2, 1, n4, n5, 1, 0, 1, 0, 1, 1, 0, 0, 2]/(-3 + d - n4 - n5) + 
   j[p4a, n1, n2, 1, n4, n5, 2, 0, 0, 0, 1, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5)) + j[p4a, n1, n2, 1, n4, n5, 2, 0, 1, 0, 0, 1, 0, 
     1, 1]/(2*(-3 + d - n4 - n5)) + j[p4a, n1, n2, 1, n4, n5, 2, 0, 1, 0, 1, 
     1, 0, 0, 1]/(2*(-3 + d - n4 - n5)) + 
   j[p4a, n1, n2, 1, n4, n5, 2, 0, 1, 0, 1, 1, 0, 1, 0]/
    (2*(-3 + d - n4 - n5)) + j[p4a, n1, n2, 1, n4, 1 + n5, 0, 0, 1, -1, 1, 1, 
     0, 1, 2]/(3 - d + n4 + n5) + ((-10 + 3*d + 2*n1 - 4*n4)*
     (8 - 2*d - 4*n4 + d*n4 + 4*n5 - d*n5)*j[p4a, n1, n2, 1, n4, 1 + n5, 0, 
      0, 1, 0, 1, 1, 0, 1, 1])/(2*(-2 + d - 2*n4)*(-10 + 3*d - n2 - 2*n4 - 
      n5)*(-3 + d - n4 - n5)) + j[p4a, n1, n2, 1, n4, 1 + n5, 0, 0, 1, 0, 1, 
     1, 0, 1, 2]/(-3 + d - n4 - n5) + j[p4a, n1, n2, 1, n4, 1 + n5, 1, -1, 0, 
     0, 1, 2, 0, 1, 1]/(-3 + d - n4 - n5) + 
   ((2*n1 + n2 - 2*n4 + n5)*j[p4a, n1, n2, 1, n4, 1 + n5, 1, -1, 0, 0, 2, 1, 
      0, 1, 1])/(2*(-10 + 3*d - n2 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   j[p4a, n1, n2, 1, n4, 1 + n5, 1, -1, 1, 0, 1, 1, 0, 0, 2]/
    (-3 + d - n4 - n5) + ((2*n1 + n2 - 2*n4 + n5)*j[p4a, n1, n2, 1, n4, 
      1 + n5, 1, -1, 1, 0, 2, 0, 0, 1, 1])/(2*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + ((2*n1 + n2 - 2*n4 + n5)*
     j[p4a, n1, n2, 1, n4, 1 + n5, 1, -1, 1, 0, 2, 1, 0, 0, 1])/
    (2*(-10 + 3*d - n2 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   j[p4a, n1, n2, 1, n4, 1 + n5, 1, -1, 2, 0, 1, 0, 0, 1, 1]/
    (2*(-3 + d - n4 - n5)) + j[p4a, n1, n2, 1, n4, 1 + n5, 1, -1, 2, 0, 1, 1, 
     0, 0, 1]/(2*(-3 + d - n4 - n5)) + 
   j[p4a, n1, n2, 1, n4, 1 + n5, 1, 0, 0, -1, 1, 1, 0, 1, 2]/
    (3 - d + n4 + n5) + ((100 - 60*d + 9*d^2 - 48*n1 + 26*d*n1 - 3*d^2*n1 - 
      4*n2 + 2*d*n2 + 6*n1*n2 - 3*d*n1*n2 + 4*n2^2 - 2*d*n2^2 + 48*n4 - 
      16*d*n4 - 28*n1*n4 + 6*d*n1*n4 - 10*n2*n4 + 3*d*n2*n4 + 6*n1*n2*n4 + 
      4*n2^2*n4 + 24*n4^2 - 4*d*n4^2 - 4*n1*n4^2 - 6*n2*n4^2 + 4*n4^3 + 
      76*n5 - 52*d*n5 + 9*d^2*n5 - 10*n1*n5 + 3*d*n1*n5 + 8*n2*n5 - 
      4*d*n2*n5 + 62*n4*n5 - 21*d*n4*n5 - 2*n1*n4*n5 + 8*n2*n4*n5 + 
      10*n4^2*n5 + 4*n5^2 - 2*d*n5^2 + 4*n4*n5^2)*j[p4a, n1, n2, 1, n4, 
      1 + n5, 1, 0, 0, 0, 1, 1, 0, 1, 1])/(2*(-2 + d - 2*n4)*
     (-10 + 3*d - n2 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   j[p4a, n1, n2, 1, n4, 1 + n5, 1, 0, 0, 0, 1, 1, 0, 1, 2]/
    (-3 + d - n4 - n5) + ((10 - 3*d - 2*n1 + 4*n4)*j[p4a, n1, n2, 1, n4, 
      1 + n5, 1, 0, 0, 0, 1, 2, -1, 1, 1])/(2*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + ((-10 + 3*d + 2*n1 - 4*n4)*
     j[p4a, n1, n2, 1, n4, 1 + n5, 1, 0, 0, 0, 1, 2, 0, 1, 1])/
    (2*(-10 + 3*d - n2 - 2*n4 - n5)*(-3 + d - n4 - n5)) - 
   (3*j[p4a, n1, n2, 1, n4, 1 + n5, 1, 0, 1, -1, 1, 1, 0, 0, 2])/
    (2*(-3 + d - n4 - n5)) + ((n1 + 3*n2 - n4)*j[p4a, n1, n2, 1, n4, 1 + n5, 
      1, 0, 1, 0, 0, 1, 0, 1, 1])/(2*(3 - d + n4 + n5)) - 
   j[p4a, n1, n2, 1, n4, 1 + n5, 1, 0, 1, 0, 0, 2, -1, 1, 1]/
    (2*(-3 + d - n4 - n5)) + j[p4a, n1, n2, 1, n4, 1 + n5, 1, 0, 1, 0, 0, 2, 
     0, 1, 1]/(2*(-3 + d - n4 - n5)) + 
   ((-1 - n1 + n4)*j[p4a, n1, n2, 1, n4, 1 + n5, 1, 0, 1, 0, 1, 0, 0, 1, 1])/
    (2*(3 - d + n4 + n5)) + j[p4a, n1, n2, 1, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 
     -1, 0, 2]/(3 - d + n4 + n5) + 
   ((12*n1 - 3*d*n1 - 2*n1^2 + n2 - 4*n1*n2 - 2*n2^2 - 2*n4 + 4*n1*n4 + 
      4*n2*n4 + 11*n5 - 3*d*n5 - n2*n5 + 2*n4*n5 + n5^2)*
     j[p4a, n1, n2, 1, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-10 + 3*d - n2 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   (3*j[p4a, n1, n2, 1, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    (2*(-3 + d - n4 - n5)) + ((-120 + 76*d - 12*d^2 + 20*n1 - 6*d*n1 - 2*n2 + 
      d*n2 - 44*n4 + 4*d*n4 + 3*d^2*n4 - 8*n1*n4 + 4*d*n1*n4 - 4*n2*n4 + 
      d*n2*n4 + 8*n4^2 - 6*d*n4^2 - 4*n1*n4^2 - 2*n2*n4^2 + 4*n4^3 - 62*n5 + 
      39*d*n5 - 6*d^2*n5 + 8*n1*n5 - 2*d*n1*n5 - 2*n2*n5 + d*n2*n5 - 
      44*n4*n5 + 13*d*n4*n5 - 2*n2*n4*n5 - 6*n4^2*n5 - 2*n5^2 + d*n5^2 - 
      2*n4*n5^2)*j[p4a, n1, n2, 1, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 0])/
    (2*(-2 + d - 2*n4)*(-10 + 3*d - n2 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((20 - 16*d + 3*d^2 + 4*n1^2 + 72*n2 - 22*d*n2 + 4*n1*n2 + 8*n2^2 - 
      36*n4 + 10*d*n4 - 4*n1*n4 + 8*n2*n4 - 8*n4^2 + 32*n5 - 10*d*n5 + 
      4*n1*n5 + 12*n2*n5 + 4*n5^2)*j[p4a, n1, n2, 1, n4, 1 + n5, 1, 0, 1, 0, 
      1, 1, 0, 1, 1])/(4*(-10 + 3*d - n2 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-2*n1 - n2 + 2*n4 - n5)*j[p4a, n1, n2, 1, n4, 1 + n5, 1, 0, 1, 0, 2, 0, 
      -1, 1, 1])/(2*(-10 + 3*d - n2 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((2*n1 + n2 - 2*n4 + n5)*j[p4a, n1, n2, 1, n4, 1 + n5, 1, 0, 1, 0, 2, 0, 
      0, 1, 1])/(2*(-10 + 3*d - n2 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((40 - 22*d + 3*d^2 - 12*n1 + 4*d*n1 - 2*n2 + d*n2 + 20*n4 - 6*d*n4 - 
      4*n1*n4 - 2*n2*n4 + 4*n4^2 - 2*n5 + d*n5 - 2*n4*n5)*
     j[p4a, n1, n2, 1, n4, 1 + n5, 2, -1, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-2 + d - 2*n4)*(-10 + 3*d - n2 - 2*n4 - n5)*(-3 + d - n4 - n5)) - 
   j[p4a, n1, n2, 1, n4, 1 + n5, 2, 0, 0, -1, 1, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5)) + ((-40 + 22*d - 3*d^2 + 12*n1 - 4*d*n1 + 2*n2 - 
      d*n2 - 20*n4 + 6*d*n4 + 4*n1*n4 + 2*n2*n4 - 4*n4^2 + 2*n5 - d*n5 + 
      2*n4*n5)*j[p4a, n1, n2, 1, n4, 1 + n5, 2, 0, 0, 0, 1, 1, -1, 1, 1])/
    (2*(-2 + d - 2*n4)*(-10 + 3*d - n2 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-4 + d)*(-10 + 3*d + 2*n1 - 4*n4)*j[p4a, n1, n2, 1, n4, 1 + n5, 2, 0, 0, 
      0, 1, 1, 0, 1, 1])/(4*(-10 + 3*d - n2 - 2*n4 - n5)*(-4 + d - n4 - n5)*
     (-3 + d - n4 - n5)) + ((-1 - n5)*j[p4a, n1, n2, 1, n4, 2 + n5, 1, -1, 0, 
      0, 1, 1, 0, 1, 1])/(3 - d + n4 + n5) + 
   ((-1 - n5)*j[p4a, n1, n2, 1, n4, 2 + n5, 1, -1, 1, 0, 0, 1, 0, 1, 1])/
    (3 - d + n4 + n5) + ((1 + n5)*j[p4a, n1, n2, 1, n4, 2 + n5, 1, -1, 1, 0, 
      1, 0, 0, 1, 1])/(3 - d + n4 + n5) + 
   ((1 + n5)*(2*n1 + n2 - 2*n4 + n5)*j[p4a, n1, n2, 1, n4, 2 + n5, 1, -1, 1, 
      0, 1, 1, 0, 0, 1])/(2*(3 - d + n4 + n5)*(10 - 3*d + n2 + 2*n4 + n5)) - 
   ((1 + n5)*(2*n1 + n2 - 2*n4 + n5)*j[p4a, n1, n2, 1, n4, 2 + n5, 1, -1, 1, 
      0, 1, 1, 0, 1, 0])/(2*(3 - d + n4 + n5)*(10 - 3*d + n2 + 2*n4 + n5)) - 
   ((-10 + 3*d + 2*n1 - 4*n4)*(-6 + d - 8*n5 + d*n5 - 2*n5^2)*
     j[p4a, n1, n2, 1, n4, 2 + n5, 1, -1, 1, 0, 1, 1, 0, 1, 1])/
    (4*(-10 + 3*d - n2 - 2*n4 - n5)*(-4 + d - n4 - n5)*(-3 + d - n4 - n5)) + 
   ((1 + n5)*j[p4a, n1, n2, 1, n4, 2 + n5, 1, 0, 0, -1, 1, 1, 0, 1, 1])/
    (3 - d + n4 + n5) + ((1 + n5)*j[p4a, n1, n2, 1, n4, 2 + n5, 1, 0, 0, 0, 
      1, 1, -1, 1, 1])/(3 - d + n4 + n5) + 
   ((-1 - n5)*j[p4a, n1, n2, 1, n4, 2 + n5, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (3 - d + n4 + n5) + ((-1 - n5)*j[p4a, n1, n2, 1, n4, 2 + n5, 1, 0, 1, -1, 
      1, 1, 0, 1, 0])/(3 - d + n4 + n5) + 
   ((1 + n5)*j[p4a, n1, n2, 1, n4, 2 + n5, 1, 0, 1, 0, 0, 1, -1, 1, 1])/
    (3 - d + n4 + n5) + ((-1 - n5)*j[p4a, n1, n2, 1, n4, 2 + n5, 1, 0, 1, 0, 
      1, 0, -1, 1, 1])/(3 - d + n4 + n5) - 
   (n4*j[p4a, n1, n2, 1, 1 + n4, n5, 0, 0, 1, 0, 1, 1, 0, 1, 1])/
    (3 - d + n4 + n5) + (n4*j[p4a, n1, n2, 1, 1 + n4, n5, 1, 0, 0, 0, 1, 1, 
      0, 1, 1])/(2*(3 - d + n4 + n5)) - 
   (n4*j[p4a, n1, n2, 1, 1 + n4, n5, 1, 0, 1, 0, 0, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5)) + (n4*j[p4a, n1, n2, 1, 1 + n4, n5, 1, 0, 1, 0, 1, 
      0, 0, 1, 1])/(2*(3 - d + n4 + n5)) - 
   (n4*j[p4a, n1, n2, 1, 1 + n4, n5, 1, 0, 1, 0, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5)) + (n4*j[p4a, n1, n2, 1, 1 + n4, 1 + n5, 0, 0, 1, 
      -1, 1, 1, 0, 1, 1])/(3 - d + n4 + n5) + 
   (n4*j[p4a, n1, n2, 1, 1 + n4, 1 + n5, 1, -1, 0, 0, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5)) + (n4*j[p4a, n1, n2, 1, 1 + n4, 1 + n5, 1, -1, 1, 
      0, 0, 1, 0, 1, 1])/(2*(3 - d + n4 + n5)) - 
   (n4*j[p4a, n1, n2, 1, 1 + n4, 1 + n5, 1, -1, 1, 0, 1, 0, 0, 1, 1])/
    (2*(3 - d + n4 + n5)) + (n4*j[p4a, n1, n2, 1, 1 + n4, 1 + n5, 1, -1, 1, 
      0, 1, 1, 0, 1, 0])/(2*(3 - d + n4 + n5)) - 
   (n4*j[p4a, n1, n2, 1, 1 + n4, 1 + n5, 1, 0, 0, -1, 1, 1, 0, 1, 1])/
    (3 - d + n4 + n5) + j[p4a, n1, n2, 2, n4, 1 + n5, 1, -1, 0, 0, 1, 1, 0, 
     1, 1]/(2*(-3 + d - n4 - n5)) + j[p4a, n1, n2, 2, n4, 1 + n5, 1, -1, 1, 
     0, 0, 1, 0, 1, 1]/(2*(-3 + d - n4 - n5)) - 
   j[p4a, n1, n2, 2, n4, 1 + n5, 1, -1, 1, 0, 1, 0, 0, 1, 1]/
    (2*(-3 + d - n4 - n5)) + j[p4a, n1, n2, 2, n4, 1 + n5, 1, -1, 1, 0, 1, 1, 
     0, 0, 1]/(2*(-3 + d - n4 - n5)) + 
   j[p4a, n1, n2, 2, n4, 1 + n5, 1, 0, 0, 0, 1, 1, -1, 1, 1]/
    (3 - d + n4 + n5) + (2*j[p4a, n1, n2, 2, n4, 1 + n5, 1, 0, 0, 0, 1, 1, 0, 
      1, 1])/(-3 + d - n4 - n5) + j[p4a, n1, n2, 2, n4, 1 + n5, 1, 0, 1, 0, 
     0, 1, -1, 1, 1]/(3 - d + n4 + n5) + 
   j[p4a, n1, n2, 2, n4, 1 + n5, 1, 0, 1, 0, 1, 0, -1, 1, 1]/
    (-3 + d - n4 - n5) + j[p4a, n1, n2, 2, n4, 1 + n5, 1, 0, 1, 0, 1, 1, -1, 
     0, 1]/(3 - d + n4 + n5) + 
   (3*j[p4a, n1, n2, 2, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5)) - (n2*(2*n1 + n2 - 2*n4 + n5)*
     j[p4a, n1, 1 + n2, 0, n4, 1 + n5, 1, -1, 1, 0, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5)*(10 - 3*d + n2 + 2*n4 + n5)) + 
   (n2*(2*n1 + n2 - 2*n4 + n5)*j[p4a, n1, 1 + n2, 1, n4, 1 + n5, 1, -1, 0, 0, 
      1, 1, 0, 1, 1])/((3 - d + n4 + n5)*(10 - 3*d + n2 + 2*n4 + n5)) + 
   (3*n2*j[p4a, n1, 1 + n2, 1, n4, 1 + n5, 1, -1, 1, 0, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)) + (n2*(2*n1 + n2 - 2*n4 + n5)*
     j[p4a, n1, 1 + n2, 1, n4, 1 + n5, 1, -1, 1, 0, 1, 1, 0, 0, 1])/
    ((3 - d + n4 + n5)*(10 - 3*d + n2 + 2*n4 + n5)) - 
   (n2*(-10 + 3*d + 2*n1 - 4*n4)*j[p4a, n1, 1 + n2, 1, n4, 1 + n5, 1, -1, 1, 
      0, 1, 1, 0, 1, 1])/(2*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) - (n2*(2*n1 + n2 - 2*n4 + n5)*
     j[p4a, n1, 1 + n2, 1, n4, 1 + n5, 1, 0, 0, 0, 1, 1, -1, 1, 1])/
    (2*(3 - d + n4 + n5)*(10 - 3*d + n2 + 2*n4 + n5)) + 
   (n2*(-10 + 3*d + 2*n1 - 4*n4)*j[p4a, n1, 1 + n2, 1, n4, 1 + n5, 1, 0, 0, 
      0, 1, 1, 0, 1, 1])/(2*(-10 + 3*d - n2 - 2*n4 - n5)*
     (-3 + d - n4 - n5)) - (n2*j[p4a, n1, 1 + n2, 1, n4, 1 + n5, 1, 0, 1, 0, 
      0, 1, -1, 1, 1])/(-3 + d - n4 - n5) - 
   (n1*j[p4a, 1 + n1, -1 + n2, 1, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5)) + (n1*j[p4a, 1 + n1, n2, 1, n4, 1 + n5, 1, 0, 0, 
      0, 1, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5)) + 
   (n1*j[p4a, 1 + n1, n2, 1, n4, 1 + n5, 1, 0, 1, 0, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)) - (n1*j[p4a, 1 + n1, n2, 1, n4, 1 + n5, 1, 0, 1, 
      0, 1, 0, 0, 1, 1])/(2*(-3 + d - n4 - n5)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n2 == 0 && n4 == 0 && n5 == 0 && n7 == -1 && n9 == 0 && n8 != 1 -> 
  j[p4a, 0, -1, n3, 0, 0, n6, 0, n8, 0, 1, 1, 0, 1, 1] + 
   ((4 - d)*j[p4a, 0, 0, -1 + n3, 0, 0, n6, 0, -1 + n8, 0, 1, 1, 0, 2, 1])/
    (2*(-3 + d)*(-1 + n8)) + ((-4 + d)*j[p4a, 0, 0, n3, 0, 0, n6, 0, -1 + n8, 
      0, 0, 2, 0, 1, 1])/(2*(-3 + d)*(-1 + n8)) + 
   ((2 + d - 2*n3 - 2*n8)*j[p4a, 0, 0, n3, 0, 0, n6, 0, -1 + n8, 0, 1, 1, 0, 
      1, 1])/(2*(-1 + n8)) - (n3*j[p4a, 0, 0, 1 + n3, 0, 0, n6, -1, -1 + n8, 
      0, 1, 1, 0, 1, 1])/(-1 + n8) + 
   (n3*j[p4a, 0, 0, 1 + n3, 0, 0, n6, 0, -1 + n8, 0, 1, 1, 0, 0, 1])/
    (-1 + n8), j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n2 == 0 && n4 == 0 && n5 == 0 && n7 == 0 && n9 == 0 && n6 != 1 -> 
  ((16 - 56*d + 55*d^2 - 12*d^3 + 32*n3 - 62*d*n3 + 18*d^2*n3 + 16*n3^2 - 
      7*d*n3^2 + 36*n6 - 55*d*n6 + 4*d^2*n6 + 32*n3*n6 - 2*n3^2*n6 + 6*n6^2 + 
      16*d*n6^2 - 12*n3*n6^2 - 8*n6^3 + 28*n8 - 53*d*n8 + 13*d^2*n8 + 
      28*n3*n8 - 10*d*n3*n8 + 26*n6*n8 + 7*d*n6*n8 - 8*n3*n6*n8 - 
      14*n6^2*n8 + 12*n8^2 - 3*d*n8^2 - 6*n6*n8^2)*j[p4a, -1, 0, n3, 0, 0, 
      n6, 0, n8, 0, 0, 2, 0, 1, 1])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 
      6*d*n6 + 4*n3*n6)*(-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 
      4*d*n6 + 3*n3*n6 + n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((-1 + d - n6)*(32 - 54*d + 19*d^2 + 36*n3 - 30*d*n3 + 12*n3^2 + 20*n6 - 
      10*d*n6 + 12*n3*n6 + 24*n8 - 12*d*n8 + 12*n3*n8)*
     j[p4a, -1, 0, n3, 0, 0, n6, 0, n8, 0, 1, 1, 0, 2, 0])/
    ((-2 + d)*(-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((-16 + 40*d - 26*d^2 + 5*d^3 - 16*n3 + 19*d*n3 - 6*d^2*n3 - 2*n3^2 + 
      2*d*n3^2 - 20*n6 + 12*d*n6 - d^2*n6 - 4*n3*n6 + 3*d*n3*n6 - 2*n3^2*n6 + 
      8*n6^2 - 4*d*n6^2 - 12*n8 + 12*d*n8 - 3*d^2*n8 - 2*n3*n8 + 2*d*n3*n8 - 
      2*n3*n6*n8)*j[p4a, -1, 0, n3, 0, 0, n6, 0, n8, 0, 2, 1, 0, 0, 1])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) - 
   ((-2 + d)*n3*(-8 + 11*d - 6*n3 - 8*n6 - 6*n8)*j[p4a, -1, 0, 1 + n3, 0, 0, 
      n6, 0, n8, 0, 1, 1, 0, 0, 1])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 
      6*d*n6 + 4*n3*n6)*(-4 + 3*d - 2*n3 - n6 - n8)) + 
   (n3*(-1 + d - n6)*(16 - 24*d + 8*d^2 + 16*n3 - 13*d*n3 + 6*n3^2 + 4*n6 - 
      2*d*n6 + 4*n3*n6 + 12*n8 - 6*d*n8 + 6*n3*n8)*j[p4a, -1, 0, 1 + n3, 0, 
      0, n6, 0, n8, 0, 1, 1, 0, 1, 0])/((6*d - 3*d^2 - 4*n3 + 4*d*n3 - 
      12*n6 + 6*d*n6 - 4*n3*n6)*(-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 
      4*n6 - 4*d*n6 + 3*n3*n6 + n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + 
      n8^2)) + (2*(8 - 12*d + 4*d^2 + 12*n3 - 12*d*n3 + 6*n3^2 + 2*n6 - 
      d*n6 + 6*n3*n6 + 6*n8 - 3*d*n8 + 6*n3*n8)*j[p4a, 0, -1, n3, 0, 0, n6, 
      0, n8, 0, 1, 1, 0, 0, 2])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 
      6*d*n6 + 4*n3*n6)*(-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((16 - 56*d + 56*d^2 - 16*d^3 + 32*n3 - 61*d*n3 + 23*d^2*n3 + 14*n3^2 - 
      8*d*n3^2 + 36*n6 - 58*d*n6 + 20*d^2*n6 + 32*n3*n6 - 17*d*n3*n6 + 
      2*n3^2*n6 + 8*n6^2 - 4*d*n6^2 + 28*n8 - 54*d*n8 + 20*d^2*n8 + 
      26*n3*n8 - 14*d*n3*n8 + 28*n6*n8 - 14*d*n6*n8 + 2*n3*n6*n8 + 12*n8^2 - 
      6*d*n8^2)*j[p4a, 0, -1, n3, 0, 0, n6, 0, n8, 0, 2, 0, 0, 1, 1])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((16 - 40*d + 26*d^2 - 5*d^3 + 16*n3 - 19*d*n3 + 6*d^2*n3 + 2*n3^2 - 
      2*d*n3^2 + 20*n6 - 12*d*n6 + d^2*n6 + 4*n3*n6 - 3*d*n3*n6 + 2*n3^2*n6 - 
      8*n6^2 + 4*d*n6^2 + 12*n8 - 12*d*n8 + 3*d^2*n8 + 2*n3*n8 - 2*d*n3*n8 + 
      2*n3*n6*n8)*j[p4a, 0, -1, n3, 0, 0, n6, 0, n8, 0, 2, 1, 0, 0, 1])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) - 
   ((-2 + d)*(-8 + 11*d - 6*n3 - 8*n6 - 6*n8)*n8*j[p4a, 0, -1, n3, 0, 0, n6, 
      0, 1 + n8, 0, 1, 0, 0, 1, 1])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 
      6*d*n6 + 4*n3*n6)*(-4 + 3*d - 2*n3 - n6 - n8)) - 
   ((-2 + d)*(-8 + 11*d - 6*n3 - 8*n6 - 6*n8)*n8*j[p4a, 0, -1, n3, 0, 0, n6, 
      0, 1 + n8, 0, 1, 1, 0, 0, 1])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 
      6*d*n6 + 4*n3*n6)*(-4 + 3*d - 2*n3 - n6 - n8)) - 
   ((-2 + d)*n6*(-8 + 11*d - 6*n3 - 8*n6 - 6*n8)*j[p4a, 0, -1, n3, 0, 0, 
      1 + n6, 0, n8, 0, 0, 1, 0, 1, 1])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4 + 3*d - 2*n3 - n6 - n8)) - 
   (n6*(-32 + 54*d - 19*d^2 - 36*n3 + 30*d*n3 - 12*n3^2 - 20*n6 + 10*d*n6 - 
      12*n3*n6 - 24*n8 + 12*d*n8 - 12*n3*n8)*j[p4a, 0, -1, n3, 0, 0, 1 + n6, 
      0, n8, 0, 1, 1, 0, 0, 1])/((6*d - 3*d^2 - 4*n3 + 4*d*n3 - 12*n6 + 
      6*d*n6 - 4*n3*n6)*(4 - 3*d + 2*n3 + n6 + n8)) - 
   (n6*(-32 + 54*d - 19*d^2 - 36*n3 + 30*d*n3 - 12*n3^2 - 20*n6 + 10*d*n6 - 
      12*n3*n6 - 24*n8 + 12*d*n8 - 12*n3*n8)*j[p4a, 0, -1, n3, 0, 0, 1 + n6, 
      0, n8, 0, 1, 1, 0, 1, 0])/((6*d - 3*d^2 - 4*n3 + 4*d*n3 - 12*n6 + 
      6*d*n6 - 4*n3*n6)*(4 - 3*d + 2*n3 + n6 + n8)) - 
   ((-2 + d)*n3*(-8 + 11*d - 6*n3 - 8*n6 - 6*n8)*j[p4a, 0, -1, 1 + n3, 0, 0, 
      n6, 0, n8, 0, 1, 1, 0, 0, 1])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 
      6*d*n6 + 4*n3*n6)*(-4 + 3*d - 2*n3 - n6 - n8)) + 
   (n3*(-1 + d - n6)*(16 - 24*d + 8*d^2 + 16*n3 - 13*d*n3 + 6*n3^2 + 4*n6 - 
      2*d*n6 + 4*n3*n6 + 12*n8 - 6*d*n8 + 6*n3*n8)*j[p4a, 0, -1, 1 + n3, 0, 
      0, n6, 0, n8, 0, 1, 1, 0, 1, 0])/((6*d - 3*d^2 - 4*n3 + 4*d*n3 - 
      12*n6 + 6*d*n6 - 4*n3*n6)*(-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 
      4*n6 - 4*d*n6 + 3*n3*n6 + n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + 
      n8^2)) + ((-96 + 256*d - 210*d^2 + 53*d^3 - 160*n3 + 276*d*n3 - 
      116*d^2*n3 - 96*n3^2 + 90*d*n3^2 - 24*n3^3 - 88*n6 + 118*d*n6 - 
      37*d^2*n6 - 88*n3*n6 + 74*d*n3*n6 - 36*n3^2*n6 - 4*n6^2 + 2*d*n6^2 - 
      12*n3*n6^2 - 136*n8 + 210*d*n8 - 71*d^2*n8 - 144*n3*n8 + 114*d*n3*n8 - 
      48*n3^2*n8 - 52*n6*n8 + 26*d*n6*n8 - 36*n3*n6*n8 - 48*n8^2 + 
      24*d*n8^2 - 24*n3*n8^2)*j[p4a, 0, 0, -1 + n3, 0, 0, n6, 0, n8, 0, 1, 1, 
      0, 0, 2])/(2*(-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((128 - 288*d + 136*d^2 + 42*d^3 - 27*d^4 + 128*n3 - 64*d*n3 - 
      136*d^2*n3 + 72*d^3*n3 + 96*d*n3^2 - 60*d^2*n3^2 - 16*n3^3 + 
      16*d*n3^3 + 32*n6 + 128*d*n6 - 198*d^2*n6 + 63*d^3*n6 - 128*n3*n6 + 
      296*d*n3*n6 - 126*d^2*n3*n6 - 104*n3^2*n6 + 80*d*n3^2*n6 - 16*n3^3*n6 - 
      48*n6^2 + 60*d*n6^2 - 18*d^2*n6^2 - 40*n3*n6^2 + 24*d*n3*n6^2 - 
      8*n3^2*n6^2 + 32*n8 + 192*d*n8 - 326*d^2*n8 + 111*d^3*n8 - 128*n3*n8 + 
      376*d*n3*n8 - 170*d^2*n3*n8 - 88*n3^2*n8 + 64*d*n3^2*n8 - 256*n6*n8 + 
      416*d*n6*n8 - 144*d^2*n6*n8 - 256*n3*n6*n8 + 160*d*n3*n6*n8 - 
      40*n3^2*n6*n8 - 24*n6^2*n8 + 12*d*n6^2*n8 - 8*n3*n6^2*n8 - 112*n8^2 + 
      252*d*n8^2 - 98*d^2*n8^2 - 120*n3*n8^2 + 72*d*n3*n8^2 - 136*n6*n8^2 + 
      68*d*n6*n8^2 - 24*n3*n6*n8^2 - 48*n8^3 + 24*d*n8^3)*
     j[p4a, 0, 0, -1 + n3, 0, 0, n6, 0, n8, 0, 1, 1, 0, 1, 1])/
    (2*(-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((16 - 56*d + 56*d^2 - 16*d^3 + 32*n3 - 61*d*n3 + 23*d^2*n3 + 14*n3^2 - 
      8*d*n3^2 + 36*n6 - 58*d*n6 + 20*d^2*n6 + 32*n3*n6 - 17*d*n3*n6 + 
      2*n3^2*n6 + 8*n6^2 - 4*d*n6^2 + 28*n8 - 54*d*n8 + 20*d^2*n8 + 
      26*n3*n8 - 14*d*n3*n8 + 28*n6*n8 - 14*d*n6*n8 + 2*n3*n6*n8 + 12*n8^2 - 
      6*d*n8^2)*j[p4a, 0, 0, -1 + n3, 0, 0, n6, 0, n8, 0, 2, 0, 0, 1, 1])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((96 - 224*d + 162*d^2 - 37*d^3 + 128*n3 - 180*d*n3 + 52*d^2*n3 + 
      48*n3^2 - 18*d*n3^2 + 56*n6 - 62*d*n6 + 17*d^2*n6 + 32*n3*n6 + 
      2*d*n3*n6 - 12*n3^2*n6 - 4*n6^2 + 2*d*n6^2 - 12*n3*n6^2 + 104*n8 - 
      138*d*n8 + 43*d^2*n8 + 72*n3*n8 - 30*d*n3*n8 + 20*n6*n8 - 10*d*n6*n8 - 
      12*n3*n6*n8 + 24*n8^2 - 12*d*n8^2)*j[p4a, 0, 0, n3, -1, 0, n6, 0, n8, 
      0, 1, 1, 0, 0, 2])/(2*(-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 
      4*n3*n6)*(-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 
      3*n3*n6 + n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((-1 + d - n6)*n8*(16 - 24*d + 8*d^2 + 16*n3 - 13*d*n3 + 6*n3^2 + 4*n6 - 
      2*d*n6 + 4*n3*n6 + 12*n8 - 6*d*n8 + 6*n3*n8)*j[p4a, 0, 0, n3, -1, 0, 
      n6, 0, 1 + n8, 0, 1, 0, 0, 1, 1])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((-1 + d - n6)*n8*(16 - 24*d + 8*d^2 + 16*n3 - 13*d*n3 + 6*n3^2 + 4*n6 - 
      2*d*n6 + 4*n3*n6 + 12*n8 - 6*d*n8 + 6*n3*n8)*j[p4a, 0, 0, n3, -1, 0, 
      n6, 0, 1 + n8, 0, 1, 1, 0, 0, 1])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   (n6*(-16 + 56*d - 56*d^2 + 16*d^3 - 32*n3 + 61*d*n3 - 23*d^2*n3 - 
      14*n3^2 + 8*d*n3^2 - 36*n6 + 58*d*n6 - 20*d^2*n6 - 32*n3*n6 + 
      17*d*n3*n6 - 2*n3^2*n6 - 8*n6^2 + 4*d*n6^2 - 28*n8 + 54*d*n8 - 
      20*d^2*n8 - 26*n3*n8 + 14*d*n3*n8 - 28*n6*n8 + 14*d*n6*n8 - 
      2*n3*n6*n8 - 12*n8^2 + 6*d*n8^2)*j[p4a, 0, 0, n3, -1, 0, 1 + n6, 0, n8, 
      0, 0, 1, 0, 1, 1])/((6*d - 3*d^2 - 4*n3 + 4*d*n3 - 12*n6 + 6*d*n6 - 
      4*n3*n6)*(-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 
      3*n3*n6 + n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((64*n6 - 112*d*n6 + 50*d^2*n6 - 5*d^3*n6 + 64*n3*n6 - 58*d*n3*n6 + 
      6*d^2*n3*n6 + 20*n3^2*n6 - 2*d*n3^2*n6 - 16*n6^2 + 54*d*n6^2 - 
      23*d^2*n6^2 - 32*n3*n6^2 + 36*d*n3*n6^2 - 16*n3^2*n6^2 - 20*n6^3 + 
      10*d*n6^3 - 12*n3*n6^3 + 48*n6*n8 - 30*d*n6*n8 + 3*d^2*n6*n8 + 
      20*n3*n6*n8 - 2*d*n3*n6*n8 - 36*n6^2*n8 + 18*d*n6^2*n8 - 16*n3*n6^2*n8)*
     j[p4a, 0, 0, n3, -1, 0, 1 + n6, 0, n8, 0, 1, 1, 0, 0, 1])/
    (2*(-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((64*n6 - 112*d*n6 + 50*d^2*n6 - 5*d^3*n6 + 64*n3*n6 - 58*d*n3*n6 + 
      6*d^2*n3*n6 + 20*n3^2*n6 - 2*d*n3^2*n6 - 16*n6^2 + 54*d*n6^2 - 
      23*d^2*n6^2 - 32*n3*n6^2 + 36*d*n3*n6^2 - 16*n3^2*n6^2 - 20*n6^3 + 
      10*d*n6^3 - 12*n3*n6^3 + 48*n6*n8 - 30*d*n6*n8 + 3*d^2*n6*n8 + 
      20*n3*n6*n8 - 2*d*n3*n6*n8 - 36*n6^2*n8 + 18*d*n6^2*n8 - 16*n3*n6^2*n8)*
     j[p4a, 0, 0, n3, -1, 0, 1 + n6, 0, n8, 0, 1, 1, 0, 1, 0])/
    (2*(-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) - 
   (2*(8 - 12*d + 4*d^2 + 12*n3 - 12*d*n3 + 6*n3^2 + 2*n6 - d*n6 + 6*n3*n6 + 
      6*n8 - 3*d*n8 + 6*n3*n8)*j[p4a, 0, 0, n3, 0, -1, n6, 0, n8, 0, 1, 1, 0, 
      0, 2])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((-2 + d)*n6*(-8 + 11*d - 6*n3 - 8*n6 - 6*n8)*j[p4a, 0, 0, n3, 0, -1, 
      1 + n6, 0, n8, 0, 0, 1, 0, 1, 1])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4 + 3*d - 2*n3 - n6 - n8)) + 
   (n6*(-32 + 54*d - 19*d^2 - 36*n3 + 30*d*n3 - 12*n3^2 - 20*n6 + 10*d*n6 - 
      12*n3*n6 - 24*n8 + 12*d*n8 - 12*n3*n8)*j[p4a, 0, 0, n3, 0, -1, 1 + n6, 
      0, n8, 0, 1, 1, 0, 0, 1])/((6*d - 3*d^2 - 4*n3 + 4*d*n3 - 12*n6 + 
      6*d*n6 - 4*n3*n6)*(4 - 3*d + 2*n3 + n6 + n8)) + 
   (n6*(-32 + 54*d - 19*d^2 - 36*n3 + 30*d*n3 - 12*n3^2 - 20*n6 + 10*d*n6 - 
      12*n3*n6 - 24*n8 + 12*d*n8 - 12*n3*n8)*j[p4a, 0, 0, n3, 0, -1, 1 + n6, 
      0, n8, 0, 1, 1, 0, 1, 0])/((6*d - 3*d^2 - 4*n3 + 4*d*n3 - 12*n6 + 
      6*d*n6 - 4*n3*n6)*(4 - 3*d + 2*n3 + n6 + n8)) - 
   (2*(8 - 12*d + 4*d^2 + 12*n3 - 12*d*n3 + 6*n3^2 + 2*n6 - d*n6 + 6*n3*n6 + 
      6*n8 - 3*d*n8 + 6*n3*n8)*j[p4a, 0, 0, n3, 0, 0, -1 + n6, 0, n8, 0, 1, 
      1, 0, 0, 2])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((1 - d + n6)*(128 - 160*d - 104*d^2 + 166*d^3 - 45*d^4 + 64*n3 + 
      208*d*n3 - 368*d^2*n3 + 126*d^3*n3 - 64*n3^2 + 224*d*n3^2 - 
      112*d^2*n3^2 - 32*n3^3 + 32*d*n3^3 - 160*n6 + 592*d*n6 - 502*d^2*n6 + 
      123*d^3*n6 - 432*n3*n6 + 716*d*n3*n6 - 260*d^2*n3*n6 - 240*n3^2*n6 + 
      168*d*n3^2*n6 - 32*n3^3*n6 - 192*n6^2 + 240*d*n6^2 - 72*d^2*n6^2 - 
      168*n3*n6^2 + 100*d*n3*n6^2 - 32*n3^2*n6^2 - 24*n6^3 + 12*d*n6^3 - 
      8*n3*n6^3 - 32*n8 + 304*d*n8 - 286*d^2*n8 + 71*d^3*n8 - 176*n3*n8 + 
      340*d*n3*n8 - 128*d^2*n3*n8 - 80*n3^2*n8 + 56*d*n3^2*n8 - 320*n6*n8 + 
      344*d*n6*n8 - 92*d^2*n6*n8 - 232*n3*n6*n8 + 124*d*n3*n6*n8 - 
      32*n3^2*n6*n8 - 24*n6^2*n8 + 12*d*n6^2*n8 - 8*n3*n6^2*n8 - 96*n8^2 + 
      96*d*n8^2 - 24*d^2*n8^2 - 48*n3*n8^2 + 24*d*n3*n8^2)*
     j[p4a, 0, 0, n3, 0, 0, -1 + n6, 0, n8, 0, 1, 1, 0, 1, 1])/
    (2*(-1 + n6)*(6*d - 3*d^2 - 4*n3 + 4*d*n3 - 12*n6 + 6*d*n6 - 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((-1 + d - n6)*(16 - 24*d + 8*d^2 + 16*n3 - 13*d*n3 + 6*n3^2 + 4*n6 - 
      2*d*n6 + 4*n3*n6 + 12*n8 - 6*d*n8 + 6*n3*n8)*j[p4a, 0, 0, n3, 0, 0, 
      -1 + n6, 0, n8, 0, 2, 1, 0, 0, 1])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) - 
   ((-1 + d - n6)*n8*(16 - 24*d + 8*d^2 + 16*n3 - 13*d*n3 + 6*n3^2 + 4*n6 - 
      2*d*n6 + 4*n3*n6 + 12*n8 - 6*d*n8 + 6*n3*n8)*j[p4a, 0, 0, n3, 0, 0, 
      -1 + n6, 0, 1 + n8, 0, 1, 0, 0, 1, 1])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) - 
   ((-1 + d - n6)*n8*(16 - 24*d + 8*d^2 + 16*n3 - 13*d*n3 + 6*n3^2 + 4*n6 - 
      2*d*n6 + 4*n3*n6 + 12*n8 - 6*d*n8 + 6*n3*n8)*j[p4a, 0, 0, n3, 0, 0, 
      -1 + n6, 0, 1 + n8, 0, 1, 1, 0, 0, 1])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) - 
   (2*(8 - 12*d + 4*d^2 + 12*n3 - 12*d*n3 + 6*n3^2 + 2*n6 - d*n6 + 6*n3*n6 + 
      6*n8 - 3*d*n8 + 6*n3*n8)*j[p4a, 0, 0, n3, 0, 0, n6, -1, n8, 0, 1, 1, 0, 
      0, 2])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((-16 + 56*d - 56*d^2 + 16*d^3 - 32*n3 + 61*d*n3 - 23*d^2*n3 - 14*n3^2 + 
      8*d*n3^2 - 36*n6 + 58*d*n6 - 20*d^2*n6 - 32*n3*n6 + 17*d*n3*n6 - 
      2*n3^2*n6 - 8*n6^2 + 4*d*n6^2 - 28*n8 + 54*d*n8 - 20*d^2*n8 - 
      26*n3*n8 + 14*d*n3*n8 - 28*n6*n8 + 14*d*n6*n8 - 2*n3*n6*n8 - 12*n8^2 + 
      6*d*n8^2)*j[p4a, 0, 0, n3, 0, 0, n6, -1, n8, 0, 2, 0, 0, 1, 1])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((-16 + 56*d - 56*d^2 + 16*d^3 - 32*n3 + 61*d*n3 - 23*d^2*n3 - 14*n3^2 + 
      8*d*n3^2 - 36*n6 + 58*d*n6 - 20*d^2*n6 - 32*n3*n6 + 17*d*n3*n6 - 
      2*n3^2*n6 - 8*n6^2 + 4*d*n6^2 - 28*n8 + 54*d*n8 - 20*d^2*n8 - 
      26*n3*n8 + 14*d*n3*n8 - 28*n6*n8 + 14*d*n6*n8 - 2*n3*n6*n8 - 12*n8^2 + 
      6*d*n8^2)*j[p4a, 0, 0, n3, 0, 0, n6, -1, n8, 0, 2, 1, 0, 0, 1])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((-2 + d)*(-8 + 11*d - 6*n3 - 8*n6 - 6*n8)*n8*j[p4a, 0, 0, n3, 0, 0, n6, 
      -1, 1 + n8, 0, 1, 0, 0, 1, 1])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 
      6*d*n6 + 4*n3*n6)*(-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((-2 + d)*(-8 + 11*d - 6*n3 - 8*n6 - 6*n8)*n8*j[p4a, 0, 0, n3, 0, 0, n6, 
      -1, 1 + n8, 0, 1, 1, 0, 0, 1])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 
      6*d*n6 + 4*n3*n6)*(-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((-16 + 56*d - 55*d^2 + 12*d^3 - 32*n3 + 62*d*n3 - 18*d^2*n3 - 16*n3^2 + 
      7*d*n3^2 - 36*n6 + 55*d*n6 - 4*d^2*n6 - 32*n3*n6 + 2*n3^2*n6 - 6*n6^2 - 
      16*d*n6^2 + 12*n3*n6^2 + 8*n6^3 - 28*n8 + 53*d*n8 - 13*d^2*n8 - 
      28*n3*n8 + 10*d*n3*n8 - 26*n6*n8 - 7*d*n6*n8 + 8*n3*n6*n8 + 
      14*n6^2*n8 - 12*n8^2 + 3*d*n8^2 + 6*n6*n8^2)*j[p4a, 0, 0, n3, 0, 0, n6, 
      0, -1 + n8, 0, 0, 2, 0, 1, 1])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 
      6*d*n6 + 4*n3*n6)*(-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 
      4*d*n6 + 3*n3*n6 + n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) - 
   (2*(8 - 12*d + 4*d^2 + 12*n3 - 12*d*n3 + 6*n3^2 + 2*n6 - d*n6 + 6*n3*n6 + 
      6*n8 - 3*d*n8 + 6*n3*n8)*j[p4a, 0, 0, n3, 0, 0, n6, 0, -1 + n8, 0, 1, 
      1, 0, 0, 2])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((-256 + 800*d - 848*d^2 + 370*d^3 - 57*d^4 - 448*n3 + 960*d*n3 - 
      628*d^2*n3 + 128*d^3*n3 - 256*n3^2 + 328*d*n3^2 - 96*d^2*n3^2 - 
      48*n3^3 + 24*d*n3^3 - 256*n6 + 376*d*n6 - 166*d^2*n6 + 21*d^3*n6 - 
      240*n3*n6 + 208*d*n3*n6 - 38*d^2*n3*n6 - 56*n3^2*n6 + 16*d*n3^2*n6 + 
      48*n6^2 - 60*d*n6^2 + 18*d^2*n6^2 + 40*n3*n6^2 - 24*d*n3*n6^2 + 
      8*n3^2*n6^2 - 320*n8 + 616*d*n8 - 358*d^2*n8 + 65*d^3*n8 - 336*n3*n8 + 
      384*d*n3*n8 - 102*d^2*n3*n8 - 88*n3^2*n8 + 40*d*n3^2*n8 - 80*n6*n8 + 
      32*d*n6*n8 + 4*d^2*n6*n8 - 16*n3*n6*n8 - 8*d*n3*n6*n8 + 8*n3^2*n6*n8 + 
      24*n6^2*n8 - 12*d*n6^2*n8 + 8*n3*n6^2*n8 - 96*n8^2 + 84*d*n8^2 - 
      18*d^2*n8^2 - 40*n3*n8^2 + 16*d*n3*n8^2 + 24*n6*n8^2 - 12*d*n6*n8^2 + 
      8*n3*n6*n8^2)*j[p4a, 0, 0, n3, 0, 0, n6, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (2*(-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) - 
   ((-1 + d - n6)*(32 - 32*d - 14*d^2 + 11*d^3 + 48*d*n3 - 36*d^2*n3 - 
      24*n3^2 + 36*d*n3^2 - 12*n3^3 - 24*n6 + 66*d*n6 - 27*d^2*n6 - 
      48*n3*n6 + 48*d*n3*n6 - 24*n3^2*n6 - 20*n6^2 + 10*d*n6^2 - 12*n3*n6^2 - 
      8*n8 + 54*d*n8 - 25*d^2*n8 - 48*n3*n8 + 48*d*n3*n8 - 24*n3^2*n8 - 
      44*n6*n8 + 22*d*n6*n8 - 24*n3*n6*n8 - 24*n8^2 + 12*d*n8^2 - 12*n3*n8^2)*
     j[p4a, 0, 0, n3, 0, 0, n6, 0, -1 + n8, 0, 1, 1, 0, 2, 0])/
    ((-2 + d)*(-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((-16 + 56*d - 56*d^2 + 16*d^3 - 32*n3 + 61*d*n3 - 23*d^2*n3 - 14*n3^2 + 
      8*d*n3^2 - 36*n6 + 58*d*n6 - 20*d^2*n6 - 32*n3*n6 + 17*d*n3*n6 - 
      2*n3^2*n6 - 8*n6^2 + 4*d*n6^2 - 28*n8 + 54*d*n8 - 20*d^2*n8 - 
      26*n3*n8 + 14*d*n3*n8 - 28*n6*n8 + 14*d*n6*n8 - 2*n3*n6*n8 - 12*n8^2 + 
      6*d*n8^2)*j[p4a, 0, 0, n3, 0, 0, n6, 0, -1 + n8, 0, 2, 0, 0, 1, 1])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) - 
   ((-2 + d)*(-8 + 11*d - 6*n3 - 8*n6 - 6*n8)*j[p4a, 0, 0, n3, 0, 0, n6, 0, 
      n8, -1, 1, 1, 0, 0, 2])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 
      6*d*n6 + 4*n3*n6)*(-4 + 3*d - 2*n3 - n6 - n8)) - 
   ((-1 + d - n6)*(16 - 24*d + 8*d^2 + 16*n3 - 13*d*n3 + 6*n3^2 + 4*n6 - 
      2*d*n6 + 4*n3*n6 + 12*n8 - 6*d*n8 + 6*n3*n8)*j[p4a, 0, 0, n3, 0, 0, n6, 
      0, n8, -1, 2, 1, 0, 0, 1])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 
      6*d*n6 + 4*n3*n6)*(-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 
      4*d*n6 + 3*n3*n6 + n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((-48 + 168*d - 180*d^2 + 54*d^3 - 80*n3 + 147*d*n3 - 27*d^2*n3 - 
      16*d^3*n3 - 18*n3^2 - 29*d*n3^2 + 23*d^2*n3^2 + 14*n3^3 - 8*d*n3^3 - 
      92*n6 + 170*d*n6 - 46*d^2*n6 - 8*d^3*n6 - 76*n3*n6 - 8*d*n3*n6 + 
      33*d^2*n3*n6 + 24*n3^2*n6 - 23*d*n3^2*n6 + 2*n3^3*n6 - 28*n6^2 - 
      6*d*n6^2 + 10*d^2*n6^2 + 20*n3*n6^2 - 21*d*n3*n6^2 + 6*n3^2*n6^2 + 
      4*n6^3 - 2*d*n6^3 + 4*n3*n6^3 - 84*n8 + 174*d*n8 - 66*d^2*n8 - 
      58*n3*n8 - 4*d*n3*n8 + 20*d^2*n3*n8 + 26*n3^2*n8 - 14*d*n3^2*n8 - 
      96*n6*n8 + 36*d*n6*n8 + 6*d^2*n6*n8 + 20*n3*n6*n8 - 20*d*n3*n6*n8 + 
      2*n3^2*n6*n8 + 12*n6^2*n8 - 6*d*n6^2*n8 + 6*n3*n6^2*n8 - 36*n8^2 + 
      18*d*n8^2 + 12*n3*n8^2 - 6*d*n3*n8^2)*j[p4a, 0, 0, n3, 0, 0, n6, 0, n8, 
      0, 0, 1, 0, 1, 1])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 
      4*n3*n6)*(-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 
      3*n3*n6 + n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((-7*d + 7*d^2 + 2*n3 - 5*d*n3 + 14*n6 - 18*d*n6 + 8*n3*n6 + 8*n6^2 - 
      3*d*n8 + 6*n6*n8)*j[p4a, 0, 0, n3, 0, 0, n6, 0, n8, 0, 0, 2, -1, 1, 1])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((7*d - 7*d^2 - 2*n3 + 5*d*n3 - 14*n6 + 18*d*n6 - 8*n3*n6 - 8*n6^2 + 
      3*d*n8 - 6*n6*n8)*j[p4a, 0, 0, n3, 0, 0, n6, 0, n8, 0, 0, 2, 0, 1, 1])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((48 - 168*d + 174*d^2 - 51*d^3 + 80*n3 - 137*d*n3 + 20*d^2*n3 + 
      16*d^3*n3 + 14*n3^2 + 33*d*n3^2 - 23*d^2*n3^2 - 14*n3^3 + 8*d*n3^3 + 
      108*n6 - 192*d*n6 + 69*d^2*n6 + 76*n3*n6 - 7*d*n3*n6 - 20*d^2*n3*n6 - 
      22*n3^2*n6 + 17*d*n3^2*n6 - 2*n3^3*n6 + 36*n6^2 - 18*d*n6^2 - 
      4*n3*n6^2 + 4*d*n3*n6^2 + 68*n8 - 112*d*n8 + 7*d^2*n8 + 16*d^3*n8 + 
      22*n3*n8 + 69*d*n3*n8 - 43*d^2*n3*n8 - 40*n3^2*n8 + 22*d*n3^2*n8 + 
      60*n6*n8 + 10*d*n6*n8 - 20*d^2*n6*n8 - 50*n3*n6*n8 + 31*d*n3*n6*n8 - 
      4*n3^2*n6*n8 - 8*n6^2*n8 + 4*d*n6^2*n8 + 8*n8^2 + 36*d*n8^2 - 
      20*d^2*n8^2 - 38*n3*n8^2 + 20*d*n3*n8^2 - 28*n6*n8^2 + 14*d*n6*n8^2 - 
      2*n3*n6*n8^2 - 12*n8^3 + 6*d*n8^3)*j[p4a, 0, 0, n3, 0, 0, n6, 0, n8, 0, 
      1, 0, 0, 1, 1])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 
      4*n3*n6)*(-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 
      3*n3*n6 + n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   (2*(8 - 12*d + 4*d^2 + 12*n3 - 12*d*n3 + 6*n3^2 + 2*n6 - d*n6 + 6*n3*n6 + 
      6*n8 - 3*d*n8 + 6*n3*n8)*j[p4a, 0, 0, n3, 0, 0, n6, 0, n8, 0, 1, 1, -1, 
      0, 2])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((-1 + d - n6)*(32 - 32*d - 14*d^2 + 11*d^3 + 48*d*n3 - 36*d^2*n3 - 
      24*n3^2 + 36*d*n3^2 - 12*n3^3 - 24*n6 + 66*d*n6 - 27*d^2*n6 - 
      48*n3*n6 + 48*d*n3*n6 - 24*n3^2*n6 - 20*n6^2 + 10*d*n6^2 - 12*n3*n6^2 - 
      8*n8 + 54*d*n8 - 25*d^2*n8 - 48*n3*n8 + 48*d*n3*n8 - 24*n3^2*n8 - 
      44*n6*n8 + 22*d*n6*n8 - 24*n3*n6*n8 - 24*n8^2 + 12*d*n8^2 - 12*n3*n8^2)*
     j[p4a, 0, 0, n3, 0, 0, n6, 0, n8, 0, 1, 1, -1, 2, 0])/
    ((-2 + d)*(-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((64 - 304*d + 458*d^2 - 251*d^3 + 45*d^4 + 160*n3 - 466*d*n3 + 
      366*d^2*n3 - 84*d^3*n3 + 116*n3^2 - 170*d*n3^2 + 54*d^2*n3^2 + 
      24*n3^3 - 12*d*n3^3 + 208*n6 - 626*d*n6 + 497*d^2*n6 - 118*d^3*n6 + 
      360*n3*n6 - 574*d*n3*n6 + 212*d^2*n3*n6 + 164*n3^2*n6 - 126*d*n3^2*n6 + 
      24*n3^3*n6 + 212*n6^2 - 296*d*n6^2 + 95*d^2*n6^2 + 196*n3*n6^2 - 
      136*d*n3*n6^2 + 48*n3^2*n6^2 + 44*n6^3 - 22*d*n6^3 + 20*n3*n6^3 + 
      176*n8 - 438*d*n8 + 253*d^2*n8 - 39*d^3*n8 + 188*n3*n8 - 176*d*n3*n8 + 
      36*d^2*n3*n8 + 20*n3^2*n8 - 8*d*n3^2*n8 + 308*n6*n8 - 316*d*n6*n8 + 
      81*d^2*n6*n8 + 156*n3*n6*n8 - 112*d*n3*n6*n8 + 44*n3^2*n6*n8 + 
      60*n6^2*n8 - 30*d*n6^2*n8 + 40*n3*n6^2*n8 + 64*n8^2 - 16*d^2*n8^2 - 
      28*n3*n8^2 + 16*d*n3*n8^2 - 8*n6*n8^2 + 4*d*n6*n8^2 + 20*n3*n6*n8^2 - 
      24*n8^3 + 12*d*n8^3)*j[p4a, 0, 0, n3, 0, 0, n6, 0, n8, 0, 1, 1, 0, 0, 
      1])/(2*(-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((-2 + d)*(-8 + 11*d - 6*n3 - 8*n6 - 6*n8)*j[p4a, 0, 0, n3, 0, 0, n6, 0, 
      n8, 0, 1, 1, 0, 0, 2])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 
      6*d*n6 + 4*n3*n6)*(-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((-96 + 208*d - 36*d^2 - 112*d^3 + 45*d^4 - 64*n3 - 102*d*n3 + 
      308*d^2*n3 - 142*d^3*n3 + 36*n3^2 - 186*d*n3^2 + 138*d^2*n3^2 + 
      20*n3^3 - 44*d*n3^3 - 56*n6 - 184*d*n6 + 342*d^2*n6 - 118*d^3*n6 + 
      208*n3*n6 - 528*d*n3*n6 + 274*d^2*n3*n6 + 176*n3^2*n6 - 200*d*n3^2*n6 + 
      44*n3^3*n6 + 144*n6^2 - 262*d*n6^2 + 95*d^2*n6^2 + 160*n3*n6^2 - 
      140*d*n3*n6^2 + 56*n3^2*n6^2 + 44*n6^3 - 22*d*n6^3 + 20*n3*n6^3 - 
      72*n8 - 40*d*n8 + 180*d^2*n8 - 71*d^3*n8 + 28*n3*n8 - 204*d*n3*n8 + 
      140*d^2*n3*n8 + 20*n3^2*n8 - 68*d*n3^2*n8 + 160*n6*n8 - 322*d*n6*n8 + 
      121*d^2*n6*n8 + 200*n3*n6*n8 - 186*d*n3*n6*n8 + 68*n3^2*n6*n8 + 
      76*n6^2*n8 - 38*d*n6^2*n8 + 40*n3*n6^2*n8 - 48*d*n8^2 + 24*d^2*n8^2 - 
      24*d*n3*n8^2 + 48*n6*n8^2 - 24*d*n6*n8^2 + 24*n3*n6*n8^2)*
     j[p4a, 0, 0, n3, 0, 0, n6, 0, n8, 0, 1, 1, 0, 1, 0])/
    (2*(-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) - 
   ((-1 + d - n6)*(32 - 54*d + 19*d^2 + 36*n3 - 30*d*n3 + 12*n3^2 + 20*n6 - 
      10*d*n6 + 12*n3*n6 + 24*n8 - 12*d*n8 + 12*n3*n8)*
     j[p4a, 0, 0, n3, 0, 0, n6, 0, n8, 0, 1, 1, 0, 2, 0])/
    ((-2 + d)*(-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((16 - 56*d + 56*d^2 - 16*d^3 + 32*n3 - 61*d*n3 + 23*d^2*n3 + 14*n3^2 - 
      8*d*n3^2 + 36*n6 - 58*d*n6 + 20*d^2*n6 + 32*n3*n6 - 17*d*n3*n6 + 
      2*n3^2*n6 + 8*n6^2 - 4*d*n6^2 + 28*n8 - 54*d*n8 + 20*d^2*n8 + 
      26*n3*n8 - 14*d*n3*n8 + 28*n6*n8 - 14*d*n6*n8 + 2*n3*n6*n8 + 12*n8^2 - 
      6*d*n8^2)*j[p4a, 0, 0, n3, 0, 0, n6, 0, n8, 0, 2, 0, -1, 1, 1])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((-16 + 56*d - 56*d^2 + 16*d^3 - 32*n3 + 61*d*n3 - 23*d^2*n3 - 14*n3^2 + 
      8*d*n3^2 - 36*n6 + 58*d*n6 - 20*d^2*n6 - 32*n3*n6 + 17*d*n3*n6 - 
      2*n3^2*n6 - 8*n6^2 + 4*d*n6^2 - 28*n8 + 54*d*n8 - 20*d^2*n8 - 
      26*n3*n8 + 14*d*n3*n8 - 28*n6*n8 + 14*d*n6*n8 - 2*n3*n6*n8 - 12*n8^2 + 
      6*d*n8^2)*j[p4a, 0, 0, n3, 0, 0, n6, 0, n8, 0, 2, 0, 0, 1, 1])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) - 
   (n6*(-16 + 56*d - 56*d^2 + 16*d^3 - 32*n3 + 61*d*n3 - 23*d^2*n3 - 
      14*n3^2 + 8*d*n3^2 - 36*n6 + 58*d*n6 - 20*d^2*n6 - 32*n3*n6 + 
      17*d*n3*n6 - 2*n3^2*n6 - 8*n6^2 + 4*d*n6^2 - 28*n8 + 54*d*n8 - 
      20*d^2*n8 - 26*n3*n8 + 14*d*n3*n8 - 28*n6*n8 + 14*d*n6*n8 - 
      2*n3*n6*n8 - 12*n8^2 + 6*d*n8^2)*j[p4a, 0, 0, n3, 0, 0, 1 + n6, 0, 
      -1 + n8, 0, 0, 1, 0, 1, 1])/((6*d - 3*d^2 - 4*n3 + 4*d*n3 - 12*n6 + 
      6*d*n6 - 4*n3*n6)*(-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 
      4*d*n6 + 3*n3*n6 + n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   (n6*(64 - 112*d + 50*d^2 - 5*d^3 + 64*n3 - 58*d*n3 + 6*d^2*n3 + 20*n3^2 - 
      2*d*n3^2 - 16*n6 + 54*d*n6 - 23*d^2*n6 - 32*n3*n6 + 36*d*n3*n6 - 
      16*n3^2*n6 - 20*n6^2 + 10*d*n6^2 - 12*n3*n6^2 + 48*n8 - 30*d*n8 + 
      3*d^2*n8 + 20*n3*n8 - 2*d*n3*n8 - 36*n6*n8 + 18*d*n6*n8 - 16*n3*n6*n8)*
     j[p4a, 0, 0, n3, 0, 0, 1 + n6, 0, -1 + n8, 0, 1, 1, 0, 0, 1])/
    (2*(6*d - 3*d^2 - 4*n3 + 4*d*n3 - 12*n6 + 6*d*n6 - 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   (n6*(64 - 112*d + 50*d^2 - 5*d^3 + 64*n3 - 58*d*n3 + 6*d^2*n3 + 20*n3^2 - 
      2*d*n3^2 - 16*n6 + 54*d*n6 - 23*d^2*n6 - 32*n3*n6 + 36*d*n3*n6 - 
      16*n3^2*n6 - 20*n6^2 + 10*d*n6^2 - 12*n3*n6^2 + 48*n8 - 30*d*n8 + 
      3*d^2*n8 + 20*n3*n8 - 2*d*n3*n8 - 36*n6*n8 + 18*d*n6*n8 - 16*n3*n6*n8)*
     j[p4a, 0, 0, n3, 0, 0, 1 + n6, 0, -1 + n8, 0, 1, 1, 0, 1, 0])/
    (2*(6*d - 3*d^2 - 4*n3 + 4*d*n3 - 12*n6 + 6*d*n6 - 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   (n3*(-1 + d - n6)*(16 - 24*d + 8*d^2 + 16*n3 - 13*d*n3 + 6*n3^2 + 4*n6 - 
      2*d*n6 + 4*n3*n6 + 12*n8 - 6*d*n8 + 6*n3*n8)*j[p4a, 0, 0, 1 + n3, -1, 
      0, n6, 0, n8, 0, 0, 1, 0, 1, 1])/((6*d - 3*d^2 - 4*n3 + 4*d*n3 - 
      12*n6 + 6*d*n6 - 4*n3*n6)*(-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 
      4*n6 - 4*d*n6 + 3*n3*n6 + n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + 
      n8^2)) - (n3*(-1 + d - n6)*(16 - 24*d + 8*d^2 + 16*n3 - 13*d*n3 + 
      6*n3^2 + 4*n6 - 2*d*n6 + 4*n3*n6 + 12*n8 - 6*d*n8 + 6*n3*n8)*
     j[p4a, 0, 0, 1 + n3, -1, 0, n6, 0, n8, 0, 1, 0, 0, 1, 1])/
    ((6*d - 3*d^2 - 4*n3 + 4*d*n3 - 12*n6 + 6*d*n6 - 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) - 
   (2*n3*(-1 + d - n6)*(16 - 24*d + 8*d^2 + 16*n3 - 13*d*n3 + 6*n3^2 + 4*n6 - 
      2*d*n6 + 4*n3*n6 + 12*n8 - 6*d*n8 + 6*n3*n8)*j[p4a, 0, 0, 1 + n3, -1, 
      0, n6, 0, n8, 0, 1, 1, 0, 0, 1])/((6*d - 3*d^2 - 4*n3 + 4*d*n3 - 
      12*n6 + 6*d*n6 - 4*n3*n6)*(-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 
      4*n6 - 4*d*n6 + 3*n3*n6 + n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + 
      n8^2)) - ((-2 + d)*n3*(-8 + 11*d - 6*n3 - 8*n6 - 6*n8)*
     j[p4a, 0, 0, 1 + n3, 0, 0, n6, -1, n8, 0, 0, 1, 0, 1, 1])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((-2 + d)*n3*(-8 + 11*d - 6*n3 - 8*n6 - 6*n8)*j[p4a, 0, 0, 1 + n3, 0, 0, 
      n6, -1, n8, 0, 1, 0, 0, 1, 1])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 
      6*d*n6 + 4*n3*n6)*(-4 + 3*d - 2*n3 - n6 - n8)) + 
   (3*(-2 + d)*n3*(-8 + 11*d - 6*n3 - 8*n6 - 6*n8)*j[p4a, 0, 0, 1 + n3, 0, 0, 
      n6, -1, n8, 0, 1, 1, 0, 0, 1])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 
      6*d*n6 + 4*n3*n6)*(-4 + 3*d - 2*n3 - n6 - n8)) - 
   (n3*(-1 + d - n6)*(16 - 24*d + 8*d^2 + 16*n3 - 13*d*n3 + 6*n3^2 + 4*n6 - 
      2*d*n6 + 4*n3*n6 + 12*n8 - 6*d*n8 + 6*n3*n8)*j[p4a, 0, 0, 1 + n3, 0, 0, 
      n6, -1, n8, 0, 1, 1, 0, 1, 0])/((6*d - 3*d^2 - 4*n3 + 4*d*n3 - 12*n6 + 
      6*d*n6 - 4*n3*n6)*(-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 
      4*d*n6 + 3*n3*n6 + n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   (3*(-2 + d)*n3*(-8 + 11*d - 6*n3 - 8*n6 - 6*n8)*j[p4a, 0, 0, 1 + n3, 0, 0, 
      n6, 0, -1 + n8, 0, 1, 1, 0, 0, 1])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4 + 3*d - 2*n3 - n6 - n8)) - 
   (3*n3*(-1 + d - n6)*(16 - 24*d + 8*d^2 + 16*n3 - 13*d*n3 + 6*n3^2 + 4*n6 - 
      2*d*n6 + 4*n3*n6 + 12*n8 - 6*d*n8 + 6*n3*n8)*j[p4a, 0, 0, 1 + n3, 0, 0, 
      n6, 0, -1 + n8, 0, 1, 1, 0, 1, 0])/
    ((6*d - 3*d^2 - 4*n3 + 4*d*n3 - 12*n6 + 6*d*n6 - 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) - 
   (2*(-2 + d)*n3*(-8 + 11*d - 6*n3 - 8*n6 - 6*n8)*j[p4a, 0, 0, 1 + n3, 0, 0, 
      n6, 0, n8, 0, 1, 1, -1, 0, 1])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 
      6*d*n6 + 4*n3*n6)*(-4 + 3*d - 2*n3 - n6 - n8)) + 
   (2*n3*(-1 + d - n6)*(16 - 24*d + 8*d^2 + 16*n3 - 13*d*n3 + 6*n3^2 + 4*n6 - 
      2*d*n6 + 4*n3*n6 + 12*n8 - 6*d*n8 + 6*n3*n8)*j[p4a, 0, 0, 1 + n3, 0, 0, 
      n6, 0, n8, 0, 1, 1, -1, 1, 0])/((6*d - 3*d^2 - 4*n3 + 4*d*n3 - 12*n6 + 
      6*d*n6 - 4*n3*n6)*(-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 
      4*d*n6 + 3*n3*n6 + n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((-2 + d)*n3*(-8 + 11*d - 6*n3 - 8*n6 - 6*n8)*j[p4a, 0, 0, 1 + n3, 0, 0, 
      n6, 0, n8, 0, 1, 1, 0, 0, 1])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 
      6*d*n6 + 4*n3*n6)*(-4 + 3*d - 2*n3 - n6 - n8)) - 
   (n3*(-1 + d - n6)*(16 - 24*d + 8*d^2 + 16*n3 - 13*d*n3 + 6*n3^2 + 4*n6 - 
      2*d*n6 + 4*n3*n6 + 12*n8 - 6*d*n8 + 6*n3*n8)*j[p4a, 0, 0, 1 + n3, 0, 0, 
      n6, 0, n8, 0, 1, 1, 0, 1, 0])/((6*d - 3*d^2 - 4*n3 + 4*d*n3 - 12*n6 + 
      6*d*n6 - 4*n3*n6)*(-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 
      4*d*n6 + 3*n3*n6 + n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n4 == 0 && n5 == 0 && n7 == 0 && n8 == 1 && n9 == 0 && 
     !(n11 == 1 || n6 == 1) -> 
  (2*n11*(-1 + d - n6)*j[p4a, -1, 0, n3, 0, 0, n6, 0, 0, 0, 1, 1 + n11, 0, 1, 
      1])/((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((1 - 2*d + 2*n3 + 3*n6)*j[p4a, -1, 0, n3, 0, 0, n6, 0, 0, 0, 2, n11, 0, 
      1, 1])/((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) - 
   (n11*(-2 + 6*d - 3*d^2 - 6*n11 + 3*d*n11 - 4*n3 + 4*d*n3 + 2*n11*n3 - 
      2*n3^2 - 2*n6 + 3*d*n6 - 6*n3*n6 - 2*n6^2)*j[p4a, -1, 0, n3, 0, 0, n6, 
      0, 1, 0, 0, 1 + n11, 0, 1, 1])/(2*(1 - d + n11 + n3)*(d - 2*n3 - 2*n6)*
     (4 - 3*d + n11 + 2*n3 + n6)) + 
   ((1 - d + n6)*j[p4a, -1, 0, n3, 0, 0, n6, 0, 1, 0, 1, n11, 0, 2, 0])/
    ((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((1 - 2*d + 2*n3 + 3*n6)*j[p4a, -1, 0, n3, 0, 0, n6, 0, 1, 0, 2, n11, 0, 
      0, 1])/((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((n3 - d*n3 + n11*n3 - n3^2 + d*n3^2 - n11*n3^2 - n3*n6 + d*n3*n6 - 
      n11*n3*n6)*j[p4a, -1, 0, 1 + n3, 0, 0, n6, 0, 1, 0, 1, n11, 0, 0, 1])/
    ((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-n3 + d*n3 - n3*n6)*j[p4a, -1, 0, 1 + n3, 0, 0, n6, 0, 1, 0, 1, n11, 0, 
      1, 0])/((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) - 
   (2*n11*(-1 + d - n6)*j[p4a, 0, -1, n3, 0, 0, n6, 0, 0, 0, 1, 1 + n11, 0, 
      1, 1])/((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-1 + 2*d - 2*n3 - 3*n6)*j[p4a, 0, -1, n3, 0, 0, n6, 0, 0, 0, 2, n11, 0, 
      1, 1])/((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((d - d^2 - n11 + 2*d*n11 - n11^2 - 2*n3 + 2*d*n3 - 2*n11*n3 - n6 + d*n6 - 
      n11*n6)*j[p4a, 0, -1, n3, 0, 0, n6, 0, 1, 0, 1, n11, 0, 0, 2])/
    ((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-1 + 2*d - 2*n3 - 3*n6)*j[p4a, 0, -1, n3, 0, 0, n6, 0, 1, 0, 2, n11, 0, 
      0, 1])/((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((1 - d + n11 - n3 + d*n3 - n11*n3 - n6 + d*n6 - n11*n6)*
     j[p4a, 0, -1, n3, 0, 0, n6, 0, 2, 0, 1, n11, 0, 0, 1])/
    ((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) - 
   ((-2 + 2*d - 2*n11 - n3)*n6*j[p4a, 0, -1, n3, 0, 0, 1 + n6, 0, 0, 0, 1, 
      n11, 0, 1, 1])/((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   (n6*(1 - d + n11 - n3 + d*n3 - n11*n3 - n6 + d*n6 - n11*n6)*
     j[p4a, 0, -1, n3, 0, 0, 1 + n6, 0, 1, 0, 0, n11, 0, 1, 1])/
    ((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) - 
   ((-1 + d - n11)*n6*j[p4a, 0, -1, n3, 0, 0, 1 + n6, 0, 1, 0, 1, n11, 0, 0, 
      1])/((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) - 
   ((-1 + d - n11)*n6*j[p4a, 0, -1, n3, 0, 0, 1 + n6, 0, 1, 0, 1, n11, 0, 1, 
      0])/((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((n3 - d*n3 + n11*n3 - n3^2 + d*n3^2 - n11*n3^2 - n3*n6 + d*n3*n6 - 
      n11*n3*n6)*j[p4a, 0, -1, 1 + n3, 0, 0, n6, 0, 1, 0, 1, n11, 0, 0, 1])/
    ((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-n3 + d*n3 - n3*n6)*j[p4a, 0, -1, 1 + n3, 0, 0, n6, 0, 1, 0, 1, n11, 0, 
      1, 0])/((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-3 + 6*d - 3*d^2 - 4*n11 + 4*d*n11 - n11^2 - 4*n3 + 5*d*n3 - 3*n11*n3 - 
      3*n3^2 - 2*n6 + 2*d*n6 - 2*n11*n6 - 3*n3*n6)*j[p4a, 0, 0, -1 + n3, 0, 
      0, n6, 0, 0, 0, 1, n11, 0, 1, 2])/((-1 + d - n11 - n3)*
     (d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-6 + 6*d - d^2 - 2*n11 + d*n11 + 4*n3 - 4*d*n3 + 2*n11*n3 + 2*n3^2 + 
      2*n6 - 3*d*n6 + 2*n3*n6 + 2*n6^2)*j[p4a, 0, 0, -1 + n3, 0, 0, n6, 0, 0, 
      0, 1, n11, 0, 2, 1])/(2*(-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*
     (-4 + 3*d - n11 - 2*n3 - n6)) + ((3 - 4*d + 2*n11 + 3*n3 + 3*n6)*
     j[p4a, 0, 0, -1 + n3, 0, 0, n6, 0, 1, 0, 1, n11, 0, 0, 2])/
    ((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-16*d + 24*d^2 - 9*d^3 + 4*n11 - 12*d*n11 + 7*d^2*n11 - 4*n11^2 + 
      2*d*n11^2 + 32*n3 - 64*d*n3 + 30*d^2*n3 + 24*n11*n3 - 20*d*n11*n3 + 
      4*n11^2*n3 + 32*n3^2 - 28*d*n3^2 + 8*n11*n3^2 + 8*n3^3 + 28*n6 - 
      52*d*n6 + 23*d^2*n6 + 24*n11*n6 - 20*d*n11*n6 + 40*n3*n6 - 36*d*n3*n6 + 
      8*n11*n3*n6 + 16*n3^2*n6 + 12*n6^2 - 10*d*n6^2 + 8*n11*n6^2 + 
      12*n3*n6^2)*j[p4a, 0, 0, -1 + n3, 0, 0, n6, 0, 1, 0, 1, n11, 0, 1, 1])/
    (2*(-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) - 
   ((-1 + d - n11 - n3)*n6*j[p4a, 0, 0, -1 + n3, 0, 0, 1 + n6, 0, 0, 0, 1, 
      n11, 0, 1, 1])/((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((3 - 6*d + 3*d^2 + 4*n11 - 4*d*n11 + n11^2 + 4*n3 - 5*d*n3 + 3*n11*n3 + 
      3*n3^2 + 2*n6 - 2*d*n6 + 2*n11*n6 + 3*n3*n6)*j[p4a, 0, 0, n3, -1, 0, 
      n6, 0, 0, 0, 1, n11, 0, 1, 2])/((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*
     (-4 + 3*d - n11 - 2*n3 - n6)) - 
   (2*n11*(-1 + d - n6)*j[p4a, 0, 0, n3, -1, 0, n6, 0, 0, 0, 1, 1 + n11, 0, 
      1, 1])/((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((3 - 6*d + 3*d^2 + 4*n11 - 4*d*n11 + n11^2 + 4*n3 - 5*d*n3 + 3*n11*n3 + 
      3*n3^2 + 2*n6 - 2*d*n6 + 2*n11*n6 + 3*n3*n6)*j[p4a, 0, 0, n3, -1, 0, 
      n6, 0, 1, 0, 1, n11, 0, 0, 2])/((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*
     (-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((1 - d + n6)*j[p4a, 0, 0, n3, -1, 0, n6, 0, 2, 0, 1, n11, 0, 0, 1])/
    ((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-1 + d - n11 - n3)*n6*j[p4a, 0, 0, n3, -1, 0, 1 + n6, 0, 0, 0, 1, n11, 
      0, 1, 1])/((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   (n6*(2 - 4*d + 2*d^2 + 2*n11 - 2*d*n11 + 2*n3 - 3*d*n3 + n11*n3 + 2*n3^2 + 
      2*n6 - 2*d*n6 + 2*n11*n6 + 3*n3*n6)*j[p4a, 0, 0, n3, -1, 0, 1 + n6, 0, 
      1, 0, 0, n11, 0, 1, 1])/((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*
     (-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-1 + d - n11 - n3)*n6*j[p4a, 0, 0, n3, -1, 0, 1 + n6, 0, 1, 0, 1, n11, 
      0, 0, 1])/((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-1 + d - n11 - n3)*n6*j[p4a, 0, 0, n3, -1, 0, 1 + n6, 0, 1, 0, 1, n11, 
      0, 1, 0])/((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-d + d^2 + n11 - 2*d*n11 + n11^2 + 2*n3 - 2*d*n3 + 2*n11*n3 + n6 - 
      d*n6 + n11*n6)*j[p4a, 0, 0, n3, 0, -1, n6, 0, 0, 0, 1, n11, 0, 1, 2])/
    ((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   (2*n11*(-1 + d - n6)*j[p4a, 0, 0, n3, 0, -1, n6, 0, 0, 0, 1, 1 + n11, 0, 
      1, 1])/((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-d + d^2 + n11 - 2*d*n11 + n11^2 + 2*n3 - 2*d*n3 + 2*n11*n3 + n6 - 
      d*n6 + n11*n6)*j[p4a, 0, 0, n3, 0, -1, n6, 0, 1, 0, 1, n11, 0, 0, 2])/
    ((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-1 + d - n11)*n6*j[p4a, 0, 0, n3, 0, -1, 1 + n6, 0, 0, 0, 1, n11, 0, 1, 
      1])/((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) - 
   (n6*(1 - d + n11 - n3 + d*n3 - n11*n3 - n6 + d*n6 - n11*n6)*
     j[p4a, 0, 0, n3, 0, -1, 1 + n6, 0, 1, 0, 0, n11, 0, 1, 1])/
    ((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-1 + d - n11)*n6*j[p4a, 0, 0, n3, 0, -1, 1 + n6, 0, 1, 0, 1, n11, 0, 0, 
      1])/((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-1 + d - n11)*n6*j[p4a, 0, 0, n3, 0, -1, 1 + n6, 0, 1, 0, 1, n11, 0, 1, 
      0])/((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   (2*n11*(-1 + d - n6)*j[p4a, 0, 0, n3, 0, 0, -1 + n6, 0, 0, 0, 1, 1 + n11, 
      0, 1, 1])/((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((1 - d + n6)*j[p4a, 0, 0, n3, 0, 0, -1 + n6, 0, 0, 0, 2, n11, 0, 1, 1])/
    ((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-d + d^2 + n11 - 2*d*n11 + n11^2 + 2*n3 - 2*d*n3 + 2*n11*n3 + n6 - 
      d*n6 + n11*n6)*j[p4a, 0, 0, n3, 0, 0, -1 + n6, 0, 1, 0, 1, n11, 0, 0, 
      2])/((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - 
      n6)) + ((2 - 6*d + 6*d^2 - 2*d^3 - 2*n11 + 3*d*n11 - d^2*n11 + 8*n3 - 
      14*d*n3 + 6*d^2*n3 + 2*n11*n3 - 2*d*n11*n3 + 2*n3^2 - 2*d*n3^2 + 8*n6 - 
      15*d*n6 + 7*d^2*n6 - 2*n11*n6 + d*n11*n6 + 10*n3*n6 - 8*d*n3*n6 + 
      2*n11*n3*n6 + 2*n3^2*n6 + 8*n6^2 - 7*d*n6^2 + 2*n3*n6^2 + 2*n6^3)*
     j[p4a, 0, 0, n3, 0, 0, -1 + n6, 0, 1, 0, 1, n11, 0, 1, 1])/
    ((-1 + n6)*(4 - 3*d + n11 + 2*n3 + n6)*(-d + 2*n3 + 2*n6)) + 
   ((1 - d + n6)*j[p4a, 0, 0, n3, 0, 0, -1 + n6, 0, 1, 0, 2, n11, 0, 0, 1])/
    ((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-1 + d - n6)*j[p4a, 0, 0, n3, 0, 0, -1 + n6, 0, 2, 0, 1, n11, 0, 0, 1])/
    ((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((6 - 6*d + d^2 + 2*n11 - d*n11 - 4*n3 + 4*d*n3 - 2*n11*n3 - 2*n3^2 - 
      2*n6 + 3*d*n6 - 2*n3*n6 - 2*n6^2)*j[p4a, 0, 0, n3, 0, 0, n6, -1, 0, 0, 
      1, n11, 0, 2, 1])/(2*(-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*
     (-4 + 3*d - n11 - 2*n3 - n6)) - 
   (n11*(-2 + 2*d - d^2 + 2*n11 + d*n11 - 2*n11*n3 + 2*n3^2 - 2*n6 + d*n6 - 
      4*n11*n6 + 2*n3*n6 + 2*n6^2)*j[p4a, 0, 0, n3, 0, 0, n6, -1, 0, 0, 1, 
      1 + n11, 0, 1, 1])/(2*(1 - d + n11 + n3)*(d - 2*n3 - 2*n6)*
     (4 - 3*d + n11 + 2*n3 + n6)) + 
   ((-2 + 4*d - 2*d^2 - 2*n11 + 2*d*n11 - 2*n3 + 3*d*n3 - n11*n3 - 2*n3^2 - 
      2*n6 + 2*d*n6 - 2*n11*n6 - 3*n3*n6)*j[p4a, 0, 0, n3, 0, 0, n6, -1, 0, 
      0, 2, n11, 0, 1, 1])/((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*
     (-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-d + d^2 + n11 - 2*d*n11 + n11^2 + 2*n3 - 2*d*n3 + 2*n11*n3 + n6 - 
      d*n6 + n11*n6)*j[p4a, 0, 0, n3, 0, 0, n6, -1, 1, 0, 1, n11, 0, 0, 2])/
    ((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-2 + 4*d - 2*d^2 - 2*n11 + 2*d*n11 - 2*n3 + 3*d*n3 - n11*n3 - 2*n3^2 - 
      2*n6 + 2*d*n6 - 2*n11*n6 - 3*n3*n6)*j[p4a, 0, 0, n3, 0, 0, n6, -1, 1, 
      0, 2, n11, 0, 0, 1])/((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*
     (-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-1 + d - n11 + n3 - d*n3 + n11*n3 + n6 - d*n6 + n11*n6)*
     j[p4a, 0, 0, n3, 0, 0, n6, -1, 2, 0, 1, n11, 0, 0, 1])/
    ((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) - 
   (2*n11*(-1 + d - n6)*j[p4a, 0, 0, n3, 0, 0, n6, 0, 0, -1, 1, 1 + n11, 0, 
      1, 1])/((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-1 + d - n6)*j[p4a, 0, 0, n3, 0, 0, n6, 0, 0, -1, 2, n11, 0, 1, 1])/
    ((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((16 - 32*d + 23*d^2 - 7*d^3 + 14*n11 - 15*d*n11 + 8*d^2*n11 - 2*n11^2 - 
      d*n11^2 - 8*d*n3 + 8*d^2*n3 - 6*n11*n3 - 4*d*n11*n3 + 2*n11^2*n3 + 
      4*n3^2 - 2*d*n3^2 - 4*n3^3 + 18*n6 - 39*d*n6 + 21*d^2*n6 + 24*n11*n6 - 
      27*d*n11*n6 + 6*n11^2*n6 + 28*n3*n6 - 28*d*n3*n6 + 10*n11*n3*n6 + 
      6*n3^2*n6 + 10*n6^2 - 10*d*n6^2 + 10*n11*n6^2 + 14*n3*n6^2)*
     j[p4a, 0, 0, n3, 0, 0, n6, 0, 0, 0, 1, n11, 0, 1, 1])/
    (2*(-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) - 
   (n11*j[p4a, 0, 0, n3, 0, 0, n6, 0, 0, 0, 1, 1 + n11, -1, 1, 1])/
    (4 - 3*d + n11 + 2*n3 + n6) + 
   (n11*j[p4a, 0, 0, n3, 0, 0, n6, 0, 0, 0, 1, 1 + n11, 0, 1, 1])/
    (4 - 3*d + n11 + 2*n3 + n6) + 
   ((2 - 4*d + 2*d^2 + 2*n11 - 2*d*n11 + 2*n3 - 3*d*n3 + n11*n3 + 2*n3^2 + 
      2*n6 - 2*d*n6 + 2*n11*n6 + 3*n3*n6)*j[p4a, 0, 0, n3, 0, 0, n6, 0, 0, 0, 
      2, -1 + n11, 0, 1, 1])/((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*
     (-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((1 - d + n11 - n3 + d*n3 - n11*n3 - n6 + d*n6 - n11*n6)*
     j[p4a, 0, 0, n3, 0, 0, n6, 0, 1, -1, 1, n11, 0, 0, 2])/
    ((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-1 + d - n6)*j[p4a, 0, 0, n3, 0, 0, n6, 0, 1, -1, 2, n11, 0, 0, 1])/
    ((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-4 + 7*d - 3*d^2 - 6*n11 + 6*d*n11 - d^2*n11 - 2*n11^2 + d*n11^2 - 
      d*n3 + 2*d^2*n3 + 2*n11*n3 - 2*d*n11*n3 + n11^2*n3 - 3*d*n3^2 + 
      n11*n3^2 + 2*n3^3 - n6 + d^2*n6 - n11*n6 - d*n11*n6 - n3*n6 - 
      3*d*n3*n6 + n11*n3*n6 + 3*n3^2*n6 + n6^2 - d*n6^2 + n11*n6^2 + n3*n6^2)*
     j[p4a, 0, 0, n3, 0, 0, n6, 0, 1, 0, 0, n11, 0, 1, 1])/
    ((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) - 
   (n11*(2 - d^2 - 2*n11 + d*n11 - 4*n3 + 4*d*n3 - 2*n3^2 - 2*n6 + 3*d*n6 - 
      4*n3*n6 - 2*n6^2)*j[p4a, 0, 0, n3, 0, 0, n6, 0, 1, 0, 0, 1 + n11, -1, 
      1, 1])/(2*(1 - d + n11 + n3)*(d - 2*n3 - 2*n6)*
     (4 - 3*d + n11 + 2*n3 + n6)) + 
   (n11*(2 - d^2 - 2*n11 + d*n11 - 4*n3 + 4*d*n3 - 2*n3^2 - 2*n6 + 3*d*n6 - 
      4*n3*n6 - 2*n6^2)*j[p4a, 0, 0, n3, 0, 0, n6, 0, 1, 0, 0, 1 + n11, 0, 1, 
      1])/(2*(1 - d + n11 + n3)*(d - 2*n3 - 2*n6)*(4 - 3*d + n11 + 2*n3 + 
      n6)) + ((4 + 8*d - 38*d^2 + 37*d^3 - 11*d^4 + 36*d*n11 - 59*d^2*n11 + 
      24*d^3*n11 - 4*n11^2 + 22*d*n11^2 - 15*d^2*n11^2 + 2*d*n11^3 - 28*n3 + 
      96*d*n3 - 104*d^2*n3 + 36*d^3*n3 - 56*n11*n3 + 124*d*n11*n3 - 
      64*d^2*n11*n3 - 32*n11^2*n3 + 32*d*n11^2*n3 - 4*n11^3*n3 - 36*n3^2 + 
      72*d*n3^2 - 36*d^2*n3^2 - 48*n11*n3^2 + 48*d*n11*n3^2 - 12*n11^2*n3^2 - 
      12*n3^3 + 12*d*n3^3 - 12*n11*n3^3 - 32*n6 + 92*d*n6 - 87*d^2*n6 + 
      27*d^3*n6 - 64*n11*n6 + 120*d*n11*n6 - 55*d^2*n11*n6 - 36*n11^2*n6 + 
      32*d*n11^2*n6 - 4*n11^3*n6 - 52*n3*n6 + 100*d*n3*n6 - 48*d^2*n3*n6 - 
      72*n11*n3*n6 + 68*d*n11*n3*n6 - 20*n11^2*n3*n6 - 24*n3^2*n6 + 
      24*d*n3^2*n6 - 24*n11*n3^2*n6 - 12*n6^2 + 22*d*n6^2 - 10*d^2*n6^2 - 
      20*n11*n6^2 + 18*d*n11*n6^2 - 8*n11^2*n6^2 - 12*n3*n6^2 + 
      12*d*n3*n6^2 - 12*n11*n3*n6^2)*j[p4a, 0, 0, n3, 0, 0, n6, 0, 1, 0, 1, 
      -1 + n11, 0, 1, 1])/(2*(-1 + n11)*(1 - d + n11 + n3)*(d - 2*n3 - 2*n6)*
     (4 - 3*d + n11 + 2*n3 + n6)) + 
   ((d - d^2 - n11 + 2*d*n11 - n11^2 - 2*n3 + 2*d*n3 - 2*n11*n3 - n6 + d*n6 - 
      n11*n6)*j[p4a, 0, 0, n3, 0, 0, n6, 0, 1, 0, 1, n11, -1, 0, 2])/
    ((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((2 - 2*d - 2*d^2 + 2*d^3 + 5*n11 - 4*d*n11 - d^2*n11 + 3*n11^2 - 
      d*n11^2 - 6*n3 + 18*d*n3 - 12*d^2*n3 - 7*n11*n3 + 11*d*n11*n3 - 
      2*n11^2*n3 - 12*n3^2 + 15*d*n3^2 - 7*n11*n3^2 - 6*n3^3 - 5*n6 + 
      11*d*n6 - 6*d^2*n6 - 5*n11*n6 + 6*d*n11*n6 - 13*n3*n6 + 14*d*n3*n6 - 
      8*n11*n3*n6 - 9*n3^2*n6 - 2*n6^2 + 2*d*n6^2 - 2*n11*n6^2 - 2*n3*n6^2)*
     j[p4a, 0, 0, n3, 0, 0, n6, 0, 1, 0, 1, n11, 0, 0, 1])/
    ((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-1 + d - n11 + n3 - d*n3 + n11*n3 + n6 - d*n6 + n11*n6)*
     j[p4a, 0, 0, n3, 0, 0, n6, 0, 1, 0, 1, n11, 0, 0, 2])/
    ((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((3 - 6*d + 2*d^2 + d*n11 + 7*n3 - 5*d*n3 + 2*n11*n3 + 2*n3^2 + 9*n6 - 
      6*d*n6 + 2*n3*n6 + 2*n6^2)*j[p4a, 0, 0, n3, 0, 0, n6, 0, 1, 0, 1, n11, 
      0, 1, 0])/((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-1 + d - n6)*j[p4a, 0, 0, n3, 0, 0, n6, 0, 1, 0, 1, n11, 0, 2, 0])/
    ((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((2 - 4*d + 2*d^2 + 2*n11 - 2*d*n11 + 2*n3 - 3*d*n3 + n11*n3 + 2*n3^2 + 
      2*n6 - 2*d*n6 + 2*n11*n6 + 3*n3*n6)*j[p4a, 0, 0, n3, 0, 0, n6, 0, 1, 0, 
      2, -1 + n11, 0, 0, 1])/((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*
     (-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-1 + d - n11 - n3)*n6*j[p4a, 0, 0, n3, 0, 0, 1 + n6, -1, 0, 0, 1, n11, 
      0, 1, 1])/((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) - 
   (n6*(2 - 4*d + 2*d^2 + 2*n11 - 2*d*n11 + 2*n3 - 3*d*n3 + n11*n3 + 2*n3^2 + 
      2*n6 - 2*d*n6 + 2*n11*n6 + 3*n3*n6)*j[p4a, 0, 0, n3, 0, 0, 1 + n6, 0, 
      0, -1, 1, n11, 0, 1, 1])/((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*
     (-4 + 3*d - n11 - 2*n3 - n6)) - 
   ((-1 + d - n11 - n3)*n6*j[p4a, 0, 0, n3, 0, 0, 1 + n6, 0, 0, 0, 1, n11, 
      -1, 1, 1])/((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) - 
   (3*(-n3 + d*n3 - n3*n6)*j[p4a, 0, 0, 1 + n3, -1, 0, n6, 0, 0, 0, 1, n11, 
      0, 1, 1])/((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-n3 + d*n3 - n3*n6)*j[p4a, 0, 0, 1 + n3, -1, 0, n6, 0, 1, 0, 0, n11, 0, 
      1, 1])/((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) - 
   (2*(-n3 + d*n3 - n3*n6)*j[p4a, 0, 0, 1 + n3, -1, 0, n6, 0, 1, 0, 1, n11, 
      0, 0, 1])/((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) - 
   (3*(n3 - d*n3 + n11*n3 - n3^2 + d*n3^2 - n11*n3^2 - n3*n6 + d*n3*n6 - 
      n11*n3*n6)*j[p4a, 0, 0, 1 + n3, 0, 0, n6, -1, 0, 0, 1, n11, 0, 1, 1])/
    ((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((n3 - d*n3 + n11*n3 - n3^2 + d*n3^2 - n11*n3^2 - n3*n6 + d*n3*n6 - 
      n11*n3*n6)*j[p4a, 0, 0, 1 + n3, 0, 0, n6, -1, 1, 0, 0, n11, 0, 1, 1])/
    ((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) - 
   (3*(n3 - d*n3 + n11*n3 - n3^2 + d*n3^2 - n11*n3^2 - n3*n6 + d*n3*n6 - 
      n11*n3*n6)*j[p4a, 0, 0, 1 + n3, 0, 0, n6, -1, 1, 0, 1, n11, 0, 0, 1])/
    ((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((n3 - d*n3 + n3*n6)*j[p4a, 0, 0, 1 + n3, 0, 0, n6, -1, 1, 0, 1, n11, 0, 
      1, 0])/((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-n3 + d*n3 - n11*n3 + n3^2 - d*n3^2 + n11*n3^2 + n3*n6 - d*n3*n6 + 
      n11*n3*n6)*j[p4a, 0, 0, 1 + n3, 0, 0, n6, 0, 1, 0, 1, -1 + n11, 0, 0, 
      1])/((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - 
      n6)) + ((n3 - d*n3 + n3*n6)*j[p4a, 0, 0, 1 + n3, 0, 0, n6, 0, 1, 0, 1, 
      -1 + n11, 0, 1, 0])/((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   (2*(n3 - d*n3 + n11*n3 - n3^2 + d*n3^2 - n11*n3^2 - n3*n6 + d*n3*n6 - 
      n11*n3*n6)*j[p4a, 0, 0, 1 + n3, 0, 0, n6, 0, 1, 0, 1, n11, -1, 0, 1])/
    ((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   (2*(-n3 + d*n3 - n3*n6)*j[p4a, 0, 0, 1 + n3, 0, 0, n6, 0, 1, 0, 1, n11, 
      -1, 1, 0])/((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-n3 + d*n3 - n11*n3 + n3^2 - d*n3^2 + n11*n3^2 + n3*n6 - d*n3*n6 + 
      n11*n3*n6)*j[p4a, 0, 0, 1 + n3, 0, 0, n6, 0, 1, 0, 1, n11, 0, 0, 1])/
    ((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((n3 - d*n3 + n3*n6)*j[p4a, 0, 0, 1 + n3, 0, 0, n6, 0, 1, 0, 1, n11, 0, 1, 
      0])/((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n4 == 0 && n5 == 0 && n7 == 0 && n8 == 1 && n9 == 0 && 
     !(n1 == 0 || n6 == 1) -> 
  (-2*(-40 + 90*d - 65*d^2 + 15*d^3 - 8*n1 + 14*d*n1 - 6*d^2*n1 - 38*n3 + 
      59*d*n3 - 21*d^2*n3 - 6*n1*n3 + 6*d*n1*n3 - 6*n3^2 + 6*d*n3^2 - 68*n6 + 
      94*d*n6 - 31*d^2*n6 - 12*n1*n6 + 10*d*n1*n6 - 48*n3*n6 + 31*d*n3*n6 - 
      6*n1*n3*n6 - 6*n3^2*n6 - 32*n6^2 + 20*d*n6^2 - 4*n1*n6^2 - 10*n3*n6^2 - 
      4*n6^3)*j[p4a, n1, 0, n3, 0, 0, n6, 0, 0, 0, 1, 2, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((20 - 24*d + 5*d^2 + d^3 + 24*n1 - 26*d*n1 + 
      7*d^2*n1 + 4*n1^2 - 2*d*n1^2 - 6*n3 + 11*d*n3 - 5*d^2*n3 + 2*n1*n3 - 
      2*d*n1*n3 - 2*n3^2 + 2*d*n3^2 + 12*n6 + 2*d*n6 - 4*d^2*n6 + 12*n1*n6 - 
      6*d*n1*n6 - 8*n3*n6 + 7*d*n3*n6 + 2*n1*n3*n6 - 2*n3^2*n6 - 8*n6^2 + 
      4*d*n6^2 - 2*n3*n6^2)*j[p4a, n1, 0, n3, 0, 0, n6, 0, 0, 0, 2, 1, 0, 1, 
      1])/((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) - 
   (2*(-40 + 78*d - 52*d^2 + 12*d^3 - 8*n1 + 10*d*n1 - 3*d^2*n1 - 38*n3 + 
      50*d*n3 - 18*d^2*n3 - 6*n1*n3 + 3*d*n1*n3 - 6*n3^2 + 6*d*n3^2 - 44*n6 + 
      62*d*n6 - 23*d^2*n6 - 4*n1*n6 + 2*d*n1*n6 - 30*n3*n6 + 25*d*n3*n6 - 
      6*n3^2*n6 - 20*n6^2 + 16*d*n6^2 - 10*n3*n6^2 - 4*n6^3)*
     j[p4a, n1, 0, n3, 0, 0, n6, 0, 1, 0, 0, 2, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((-40 + 90*d - 65*d^2 + 15*d^3 - 8*n1 + 14*d*n1 - 6*d^2*n1 - 38*n3 + 
      59*d*n3 - 21*d^2*n3 - 6*n1*n3 + 6*d*n1*n3 - 6*n3^2 + 6*d*n3^2 - 68*n6 + 
      94*d*n6 - 31*d^2*n6 - 12*n1*n6 + 10*d*n1*n6 - 48*n3*n6 + 31*d*n3*n6 - 
      6*n1*n3*n6 - 6*n3^2*n6 - 32*n6^2 + 20*d*n6^2 - 4*n1*n6^2 - 10*n3*n6^2 - 
      4*n6^3)*j[p4a, n1, 0, n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 2, 0])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((20 - 24*d + 5*d^2 + d^3 + 24*n1 - 26*d*n1 + 
      7*d^2*n1 + 4*n1^2 - 2*d*n1^2 - 6*n3 + 11*d*n3 - 5*d^2*n3 + 2*n1*n3 - 
      2*d*n1*n3 - 2*n3^2 + 2*d*n3^2 + 12*n6 + 2*d*n6 - 4*d^2*n6 + 12*n1*n6 - 
      6*d*n1*n6 - 8*n3*n6 + 7*d*n3*n6 + 2*n1*n3*n6 - 2*n3^2*n6 - 8*n6^2 + 
      4*d*n6^2 - 2*n3*n6^2)*j[p4a, n1, 0, n3, 0, 0, n6, 0, 1, 0, 2, 1, 0, 0, 
      1])/((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((-60*n3 + 214*d*n3 - 274*d^2*n3 + 149*d^3*n3 - 
      29*d^4*n3 - 32*n1*n3 + 80*d*n1*n3 - 67*d^2*n1*n3 + 19*d^3*n1*n3 - 
      4*n1^2*n3 + 6*d*n1^2*n3 - 2*d^2*n1^2*n3 - 112*n3^2 + 298*d*n3^2 - 
      253*d^2*n3^2 + 67*d^3*n3^2 - 24*n1*n3^2 + 50*d*n1*n3^2 - 
      26*d^2*n1*n3^2 - 80*n3^3 + 132*d*n3^3 - 52*d^2*n3^3 - 12*n1*n3^3 + 
      12*d*n1*n3^3 - 12*n3^4 + 12*d*n3^4 - 220*n3*n6 + 534*d*n3*n6 - 
      413*d^2*n3*n6 + 102*d^3*n3*n6 - 72*n1*n3*n6 + 120*d*n1*n3*n6 - 
      51*d^2*n1*n3*n6 - 4*n1^2*n3*n6 + 2*d*n1^2*n3*n6 - 284*n3^2*n6 + 
      466*d*n3^2*n6 - 175*d^2*n3^2*n6 - 52*n1*n3^2*n6 + 54*d*n1*n3^2*n6 - 
      116*n3^3*n6 + 88*d*n3^3*n6 - 12*n1*n3^3*n6 - 12*n3^4*n6 - 240*n3*n6^2 + 
      352*d*n3*n6^2 - 125*d^2*n3*n6^2 - 52*n1*n3*n6^2 + 44*d*n1*n3*n6^2 - 
      208*n3^2*n6^2 + 144*d*n3^2*n6^2 - 28*n1*n3^2*n6^2 - 36*n3^3*n6^2 - 
      92*n3*n6^3 + 64*d*n3*n6^3 - 12*n1*n3*n6^3 - 36*n3^2*n6^3 - 12*n3*n6^4)*
     j[p4a, n1, 0, 1 + n3, 0, 0, -1 + n6, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n1)*(-1 + n6)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 
      60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 
      49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 
      200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) - (n3*(4*d - 3*d^2 + 3*d*n3 - 8*n6 + 8*d*n6 - 
      6*n3*n6 - 4*n6^2)*j[p4a, n1, 0, 1 + n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 0, 
      1])/(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 
     4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 
     14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 59*d^2*n6 - 
     32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 8*n1*n3*n6 - 
     16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3) - 
   (n3*(-40 + 90*d - 65*d^2 + 15*d^3 - 8*n1 + 14*d*n1 - 6*d^2*n1 - 38*n3 + 
      59*d*n3 - 21*d^2*n3 - 6*n1*n3 + 6*d*n1*n3 - 6*n3^2 + 6*d*n3^2 - 68*n6 + 
      94*d*n6 - 31*d^2*n6 - 12*n1*n6 + 10*d*n1*n6 - 48*n3*n6 + 31*d*n3*n6 - 
      6*n1*n3*n6 - 6*n3^2*n6 - 32*n6^2 + 20*d*n6^2 - 4*n1*n6^2 - 10*n3*n6^2 - 
      4*n6^3)*j[p4a, n1, 0, 1 + n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 1, 0])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   (2*(-40 + 90*d - 65*d^2 + 15*d^3 - 8*n1 + 14*d*n1 - 6*d^2*n1 - 38*n3 + 
      59*d*n3 - 21*d^2*n3 - 6*n1*n3 + 6*d*n1*n3 - 6*n3^2 + 6*d*n3^2 - 68*n6 + 
      94*d*n6 - 31*d^2*n6 - 12*n1*n6 + 10*d*n1*n6 - 48*n3*n6 + 31*d*n3*n6 - 
      6*n1*n3*n6 - 6*n3^2*n6 - 32*n6^2 + 20*d*n6^2 - 4*n1*n6^2 - 10*n3*n6^2 - 
      4*n6^3)*j[p4a, 1 + n1, -1, n3, 0, 0, n6, 0, 0, 0, 1, 2, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((-20 + 24*d - 5*d^2 - d^3 - 24*n1 + 26*d*n1 - 
      7*d^2*n1 - 4*n1^2 + 2*d*n1^2 + 6*n3 - 11*d*n3 + 5*d^2*n3 - 2*n1*n3 + 
      2*d*n1*n3 + 2*n3^2 - 2*d*n3^2 - 12*n6 - 2*d*n6 + 4*d^2*n6 - 12*n1*n6 + 
      6*d*n1*n6 + 8*n3*n6 - 7*d*n3*n6 - 2*n1*n3*n6 + 2*n3^2*n6 + 8*n6^2 - 
      4*d*n6^2 + 2*n3*n6^2)*j[p4a, 1 + n1, -1, n3, 0, 0, n6, 0, 0, 0, 2, 1, 
      0, 1, 1])/((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 
      60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 
      49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 
      200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + (2*(20 - 27*d + 9*d^2 + 4*n1 - 3*d*n1 + 19*n3 - 
      12*d*n3 + 3*n1*n3 + 3*n3^2 + 18*n6 - 12*d*n6 + 2*n1*n6 + 8*n3*n6 + 
      4*n6^2)*j[p4a, 1 + n1, -1, n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 0, 2])/
    (-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 
     2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 
     16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 
     20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 8*n1*n3*n6 - 16*n3^2*n6 - 
     48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3) + 
   ((-20 + 36*d - 18*d^2 + 2*d^3 - 24*n1 + 30*d*n1 - 10*d^2*n1 - 4*n1^2 + 
      2*d*n1^2 + 6*n3 - 2*d*n3 + 2*d^2*n3 - 2*n1*n3 + 5*d*n1*n3 + 2*n3^2 - 
      2*d*n3^2 - 36*n6 + 30*d*n6 - 4*d^2*n6 - 20*n1*n6 + 14*d*n1*n6 - 
      10*n3*n6 - d*n3*n6 - 8*n1*n3*n6 + 2*n3^2*n6 - 4*n6^2 - 4*n1*n6^2 + 
      2*n3*n6^2)*j[p4a, 1 + n1, -1, n3, 0, 0, n6, 0, 1, 0, 2, 0, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((-20 + 24*d - 5*d^2 - d^3 - 24*n1 + 26*d*n1 - 
      7*d^2*n1 - 4*n1^2 + 2*d*n1^2 + 6*n3 - 11*d*n3 + 5*d^2*n3 - 2*n1*n3 + 
      2*d*n1*n3 + 2*n3^2 - 2*d*n3^2 - 12*n6 - 2*d*n6 + 4*d^2*n6 - 12*n1*n6 + 
      6*d*n1*n6 + 8*n3*n6 - 7*d*n3*n6 - 2*n1*n3*n6 + 2*n3^2*n6 + 8*n6^2 - 
      4*d*n6^2 + 2*n3*n6^2)*j[p4a, 1 + n1, -1, n3, 0, 0, n6, 0, 1, 0, 2, 1, 
      0, 0, 1])/((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 
      60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 
      49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 
      200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((-4*d + 3*d^2 - 3*d*n3 + 8*n6 - 8*d*n6 + 6*n3*n6 + 4*n6^2)*
     j[p4a, 1 + n1, -1, n3, 0, 0, n6, 0, 2, 0, 1, 0, 0, 1, 1])/
    (-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 
     2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 
     16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 
     20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 8*n1*n3*n6 - 16*n3^2*n6 - 
     48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3) + 
   ((-4*d + 3*d^2 - 3*d*n3 + 8*n6 - 8*d*n6 + 6*n3*n6 + 4*n6^2)*
     j[p4a, 1 + n1, -1, n3, 0, 0, n6, 0, 2, 0, 1, 1, 0, 0, 1])/
    (-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 
     2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 
     16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 
     20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 8*n1*n3*n6 - 16*n3^2*n6 - 
     48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3) + 
   ((-5 + 2*d - n1 - n3)*n6*(40 - 50*d + 15*d^2 + 8*n1 - 6*d*n1 + 38*n3 - 
      21*d*n3 + 6*n1*n3 + 6*n3^2 + 28*n6 - 16*d*n6 + 4*n1*n6 + 10*n3*n6 + 
      4*n6^2)*j[p4a, 1 + n1, -1, n3, 0, 0, 1 + n6, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) - (n6*(-4*d + 3*d^2 - 3*d*n3 + 8*n6 - 8*d*n6 + 
      6*n3*n6 + 4*n6^2)*j[p4a, 1 + n1, -1, n3, 0, 0, 1 + n6, 0, 1, 0, 0, 1, 
      0, 1, 1])/(140 - 270*d + 170*d^2 - 35*d^3 + 48*n1 - 60*d*n1 + 
     19*d^2*n1 + 4*n1^2 - 2*d*n1^2 + 108*n3 - 148*d*n3 + 49*d^2*n3 + 
     20*n1*n3 - 14*d*n1*n3 + 16*n3^2 - 16*d*n3^2 + 168*n6 - 200*d*n6 + 
     59*d^2*n6 + 32*n1*n6 - 20*d*n1*n6 + 100*n3*n6 - 62*d*n3*n6 + 
     8*n1*n3*n6 + 16*n3^2*n6 + 48*n6^2 - 28*d*n6^2 + 4*n1*n6^2 + 16*n3*n6^2 + 
     4*n6^3) - (n6*(40 - 50*d + 15*d^2 + 8*n1 - 6*d*n1 + 38*n3 - 21*d*n3 + 
      6*n1*n3 + 6*n3^2 + 28*n6 - 16*d*n6 + 4*n1*n6 + 10*n3*n6 + 4*n6^2)*
     j[p4a, 1 + n1, -1, n3, 0, 0, 1 + n6, 0, 1, 0, 1, 1, 0, 0, 1])/
    (140 - 270*d + 170*d^2 - 35*d^3 + 48*n1 - 60*d*n1 + 19*d^2*n1 + 4*n1^2 - 
     2*d*n1^2 + 108*n3 - 148*d*n3 + 49*d^2*n3 + 20*n1*n3 - 14*d*n1*n3 + 
     16*n3^2 - 16*d*n3^2 + 168*n6 - 200*d*n6 + 59*d^2*n6 + 32*n1*n6 - 
     20*d*n1*n6 + 100*n3*n6 - 62*d*n3*n6 + 8*n1*n3*n6 + 16*n3^2*n6 + 
     48*n6^2 - 28*d*n6^2 + 4*n1*n6^2 + 16*n3*n6^2 + 4*n6^3) - 
   (n6*(40 - 50*d + 15*d^2 + 8*n1 - 6*d*n1 + 38*n3 - 21*d*n3 + 6*n1*n3 + 
      6*n3^2 + 28*n6 - 16*d*n6 + 4*n1*n6 + 10*n3*n6 + 4*n6^2)*
     j[p4a, 1 + n1, -1, n3, 0, 0, 1 + n6, 0, 1, 0, 1, 1, 0, 1, 0])/
    (140 - 270*d + 170*d^2 - 35*d^3 + 48*n1 - 60*d*n1 + 19*d^2*n1 + 4*n1^2 - 
     2*d*n1^2 + 108*n3 - 148*d*n3 + 49*d^2*n3 + 20*n1*n3 - 14*d*n1*n3 + 
     16*n3^2 - 16*d*n3^2 + 168*n6 - 200*d*n6 + 59*d^2*n6 + 32*n1*n6 - 
     20*d*n1*n6 + 100*n3*n6 - 62*d*n3*n6 + 8*n1*n3*n6 + 16*n3^2*n6 + 
     48*n6^2 - 28*d*n6^2 + 4*n1*n6^2 + 16*n3*n6^2 + 4*n6^3) - 
   (n3*(4*d - 3*d^2 + 3*d*n3 - 8*n6 + 8*d*n6 - 6*n3*n6 - 4*n6^2)*
     j[p4a, 1 + n1, -1, 1 + n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 0, 1])/
    (-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 
     2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 
     16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 
     20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 8*n1*n3*n6 - 16*n3^2*n6 - 
     48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3) - 
   (n3*(-40 + 90*d - 65*d^2 + 15*d^3 - 8*n1 + 14*d*n1 - 6*d^2*n1 - 38*n3 + 
      59*d*n3 - 21*d^2*n3 - 6*n1*n3 + 6*d*n1*n3 - 6*n3^2 + 6*d*n3^2 - 68*n6 + 
      94*d*n6 - 31*d^2*n6 - 12*n1*n6 + 10*d*n1*n6 - 48*n3*n6 + 31*d*n3*n6 - 
      6*n1*n3*n6 - 6*n3^2*n6 - 32*n6^2 + 20*d*n6^2 - 4*n1*n6^2 - 10*n3*n6^2 - 
      4*n6^3)*j[p4a, 1 + n1, -1, 1 + n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 1, 0])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((-60 + 104*d - 62*d^2 + 13*d^3 + 8*n1 - 10*d*n1 + 4*d^2*n1 + 4*n1^2 - 
      2*d*n1^2 - 122*n3 + 132*d*n3 - 38*d^2*n3 - 18*n1*n3 + 7*d*n1*n3 - 
      52*n3^2 + 29*d*n3^2 - 6*n1*n3^2 - 6*n3^3 - 20*n6 + 30*d*n6 - 
      12*d^2*n6 + 12*n1*n6 - 10*d*n1*n6 - 38*n3*n6 + 27*d*n3*n6 + 
      4*n1*n3*n6 - 12*n3^2*n6 - 4*n6^2 + 4*d*n6^2 + 4*n1*n6^2 - 6*n3*n6^2)*
     j[p4a, 1 + n1, 0, -1 + n3, 0, 0, n6, 0, 0, 0, 1, 1, 0, 1, 2])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((-180 + 306*d - 170*d^2 + 31*d^3 - 56*n1 + 
      70*d*n1 - 20*d^2*n1 - 4*n1^2 + 4*d*n1^2 - 236*n3 + 242*d*n3 - 
      62*d^2*n3 - 74*n1*n3 + 37*d*n1*n3 - 6*n1^2*n3 - 70*n3^2 + 35*d*n3^2 - 
      12*n1*n3^2 - 6*n3^3 - 128*n6 + 138*d*n6 - 36*d^2*n6 - 36*n1*n6 + 
      18*d*n1*n6 - 4*n1^2*n6 - 86*n3*n6 + 43*d*n3*n6 - 12*n1*n3*n6 - 
      12*n3^2*n6 - 28*n6^2 + 12*d*n6^2 - 4*n1*n6^2 - 6*n3*n6^2)*
     j[p4a, 1 + n1, 0, -1 + n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 0, 2])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((-80 + 236*d - 244*d^2 + 104*d^3 - 15*d^4 - 
      96*n1 + 192*d*n1 - 130*d^2*n1 + 30*d^3*n1 - 16*n1^2 + 20*d*n1^2 - 
      6*d^2*n1^2 - 16*n3 + 102*d*n3 - 96*d^2*n3 + 22*d^3*n3 - 56*n1*n3 + 
      86*d*n1*n3 - 35*d^2*n1*n3 - 8*n1^2*n3 + 4*d*n1^2*n3 + 20*n3^2 + 
      14*d*n3^2 - 11*d^2*n3^2 - 4*n1*n3^2 + 10*d*n1*n3^2 + 4*n3^3 + 
      2*d*n3^3 - 248*n6 + 460*d*n6 - 266*d^2*n6 + 46*d^3*n6 - 128*n1*n6 + 
      176*d*n1*n6 - 62*d^2*n1*n6 - 8*n1^2*n6 + 4*d*n1^2*n6 - 212*n3*n6 + 
      266*d*n3*n6 - 71*d^2*n3*n6 - 76*n1*n3*n6 + 62*d*n1*n3*n6 - 72*n3^2*n6 + 
      40*d*n3^2*n6 - 16*n1*n3^2*n6 - 8*n3^3*n6 - 152*n6^2 + 160*d*n6^2 - 
      36*d^2*n6^2 - 56*n1*n6^2 + 40*d*n1*n6^2 - 92*n3*n6^2 + 40*d*n3*n6^2 - 
      24*n1*n3*n6^2 - 12*n3^2*n6^2 - 24*n6^3 + 8*d*n6^3 - 8*n1*n6^3 - 
      4*n3*n6^3)*j[p4a, 1 + n1, 0, -1 + n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 1, 
      1])/((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((-20 + 36*d - 18*d^2 + 2*d^3 - 24*n1 + 30*d*n1 - 10*d^2*n1 - 4*n1^2 + 
      2*d*n1^2 + 6*n3 - 2*d*n3 + 2*d^2*n3 - 2*n1*n3 + 5*d*n1*n3 + 2*n3^2 - 
      2*d*n3^2 - 36*n6 + 30*d*n6 - 4*d^2*n6 - 20*n1*n6 + 14*d*n1*n6 - 
      10*n3*n6 - d*n3*n6 - 8*n1*n3*n6 + 2*n3^2*n6 - 4*n6^2 - 4*n1*n6^2 + 
      2*n3*n6^2)*j[p4a, 1 + n1, 0, -1 + n3, 0, 0, n6, 0, 1, 0, 2, 0, 0, 1, 
      1])/((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((-2 + d - n3)*n6*(40 - 50*d + 15*d^2 + 8*n1 - 
      6*d*n1 + 38*n3 - 21*d*n3 + 6*n1*n3 + 6*n3^2 + 28*n6 - 16*d*n6 + 
      4*n1*n6 + 10*n3*n6 + 4*n6^2)*j[p4a, 1 + n1, 0, -1 + n3, 0, 0, 1 + n6, 
      0, 0, 0, 1, 1, 0, 1, 1])/((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 
      35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 
      148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 
      168*n6 + 200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 
      62*d*n3*n6 - 8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 
      4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3)) + 
   ((60 - 104*d + 62*d^2 - 13*d^3 - 8*n1 + 10*d*n1 - 4*d^2*n1 - 4*n1^2 + 
      2*d*n1^2 + 122*n3 - 132*d*n3 + 38*d^2*n3 + 18*n1*n3 - 7*d*n1*n3 + 
      52*n3^2 - 29*d*n3^2 + 6*n1*n3^2 + 6*n3^3 + 20*n6 - 30*d*n6 + 
      12*d^2*n6 - 12*n1*n6 + 10*d*n1*n6 + 38*n3*n6 - 27*d*n3*n6 - 
      4*n1*n3*n6 + 12*n3^2*n6 + 4*n6^2 - 4*d*n6^2 - 4*n1*n6^2 + 6*n3*n6^2)*
     j[p4a, 1 + n1, 0, n3, -1, 0, n6, 0, 0, 0, 1, 1, 0, 1, 2])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   (2*(-40 + 90*d - 65*d^2 + 15*d^3 - 8*n1 + 14*d*n1 - 6*d^2*n1 - 38*n3 + 
      59*d*n3 - 21*d^2*n3 - 6*n1*n3 + 6*d*n1*n3 - 6*n3^2 + 6*d*n3^2 - 68*n6 + 
      94*d*n6 - 31*d^2*n6 - 12*n1*n6 + 10*d*n1*n6 - 48*n3*n6 + 31*d*n3*n6 - 
      6*n1*n3*n6 - 6*n3^2*n6 - 32*n6^2 + 20*d*n6^2 - 4*n1*n6^2 - 10*n3*n6^2 - 
      4*n6^3)*j[p4a, 1 + n1, 0, n3, -1, 0, n6, 0, 0, 0, 1, 2, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((60 - 104*d + 62*d^2 - 13*d^3 - 8*n1 + 10*d*n1 - 4*d^2*n1 - 4*n1^2 + 
      2*d*n1^2 + 122*n3 - 132*d*n3 + 38*d^2*n3 + 18*n1*n3 - 7*d*n1*n3 + 
      52*n3^2 - 29*d*n3^2 + 6*n1*n3^2 + 6*n3^3 + 20*n6 - 30*d*n6 + 
      12*d^2*n6 - 12*n1*n6 + 10*d*n1*n6 + 38*n3*n6 - 27*d*n3*n6 - 
      4*n1*n3*n6 + 12*n3^2*n6 + 4*n6^2 - 4*d*n6^2 - 4*n1*n6^2 + 6*n3*n6^2)*
     j[p4a, 1 + n1, 0, n3, -1, 0, n6, 0, 1, 0, 1, 1, 0, 0, 2])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((-40 + 90*d - 65*d^2 + 15*d^3 - 8*n1 + 14*d*n1 - 6*d^2*n1 - 38*n3 + 
      59*d*n3 - 21*d^2*n3 - 6*n1*n3 + 6*d*n1*n3 - 6*n3^2 + 6*d*n3^2 - 68*n6 + 
      94*d*n6 - 31*d^2*n6 - 12*n1*n6 + 10*d*n1*n6 - 48*n3*n6 + 31*d*n3*n6 - 
      6*n1*n3*n6 - 6*n3^2*n6 - 32*n6^2 + 20*d*n6^2 - 4*n1*n6^2 - 10*n3*n6^2 - 
      4*n6^3)*j[p4a, 1 + n1, 0, n3, -1, 0, n6, 0, 2, 0, 1, 0, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((-40 + 90*d - 65*d^2 + 15*d^3 - 8*n1 + 14*d*n1 - 6*d^2*n1 - 38*n3 + 
      59*d*n3 - 21*d^2*n3 - 6*n1*n3 + 6*d*n1*n3 - 6*n3^2 + 6*d*n3^2 - 68*n6 + 
      94*d*n6 - 31*d^2*n6 - 12*n1*n6 + 10*d*n1*n6 - 48*n3*n6 + 31*d*n3*n6 - 
      6*n1*n3*n6 - 6*n3^2*n6 - 32*n6^2 + 20*d*n6^2 - 4*n1*n6^2 - 10*n3*n6^2 - 
      4*n6^3)*j[p4a, 1 + n1, 0, n3, -1, 0, n6, 0, 2, 0, 1, 1, 0, 0, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) - ((-2 + d - n3)*n6*(40 - 50*d + 15*d^2 + 8*n1 - 
      6*d*n1 + 38*n3 - 21*d*n3 + 6*n1*n3 + 6*n3^2 + 28*n6 - 16*d*n6 + 
      4*n1*n6 + 10*n3*n6 + 4*n6^2)*j[p4a, 1 + n1, 0, n3, -1, 0, 1 + n6, 0, 0, 
      0, 1, 1, 0, 1, 1])/((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 
      48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 
      49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 
      200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + (n6*(-20 + 36*d - 18*d^2 + 2*d^3 - 24*n1 + 
      30*d*n1 - 10*d^2*n1 - 4*n1^2 + 2*d*n1^2 + 6*n3 - 2*d*n3 + 2*d^2*n3 - 
      2*n1*n3 + 5*d*n1*n3 + 2*n3^2 - 2*d*n3^2 - 36*n6 + 30*d*n6 - 4*d^2*n6 - 
      20*n1*n6 + 14*d*n1*n6 - 10*n3*n6 - d*n3*n6 - 8*n1*n3*n6 + 2*n3^2*n6 - 
      4*n6^2 - 4*n1*n6^2 + 2*n3*n6^2)*j[p4a, 1 + n1, 0, n3, -1, 0, 1 + n6, 0, 
      1, 0, 0, 1, 0, 1, 1])/((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 
      48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 
      49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 
      200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) - ((-2 + d - n3)*n6*(40 - 50*d + 15*d^2 + 8*n1 - 
      6*d*n1 + 38*n3 - 21*d*n3 + 6*n1*n3 + 6*n3^2 + 28*n6 - 16*d*n6 + 
      4*n1*n6 + 10*n3*n6 + 4*n6^2)*j[p4a, 1 + n1, 0, n3, -1, 0, 1 + n6, 0, 1, 
      0, 1, 1, 0, 0, 1])/((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 
      48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 
      49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 
      200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) - ((-2 + d - n3)*n6*(40 - 50*d + 15*d^2 + 8*n1 - 
      6*d*n1 + 38*n3 - 21*d*n3 + 6*n1*n3 + 6*n3^2 + 28*n6 - 16*d*n6 + 
      4*n1*n6 + 10*n3*n6 + 4*n6^2)*j[p4a, 1 + n1, 0, n3, -1, 0, 1 + n6, 0, 1, 
      0, 1, 1, 0, 1, 0])/((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 
      48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 
      49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 
      200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) - (2*(20 - 27*d + 9*d^2 + 4*n1 - 3*d*n1 + 19*n3 - 
      12*d*n3 + 3*n1*n3 + 3*n3^2 + 18*n6 - 12*d*n6 + 2*n1*n6 + 8*n3*n6 + 
      4*n6^2)*j[p4a, 1 + n1, 0, n3, 0, -1, n6, 0, 0, 0, 1, 1, 0, 1, 2])/
    (-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 
     2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 
     16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 
     20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 8*n1*n3*n6 - 16*n3^2*n6 - 
     48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3) - 
   (2*(-40 + 90*d - 65*d^2 + 15*d^3 - 8*n1 + 14*d*n1 - 6*d^2*n1 - 38*n3 + 
      59*d*n3 - 21*d^2*n3 - 6*n1*n3 + 6*d*n1*n3 - 6*n3^2 + 6*d*n3^2 - 68*n6 + 
      94*d*n6 - 31*d^2*n6 - 12*n1*n6 + 10*d*n1*n6 - 48*n3*n6 + 31*d*n3*n6 - 
      6*n1*n3*n6 - 6*n3^2*n6 - 32*n6^2 + 20*d*n6^2 - 4*n1*n6^2 - 10*n3*n6^2 - 
      4*n6^3)*j[p4a, 1 + n1, 0, n3, 0, -1, n6, 0, 0, 0, 1, 2, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) - (2*(20 - 27*d + 9*d^2 + 4*n1 - 3*d*n1 + 19*n3 - 
      12*d*n3 + 3*n1*n3 + 3*n3^2 + 18*n6 - 12*d*n6 + 2*n1*n6 + 8*n3*n6 + 
      4*n6^2)*j[p4a, 1 + n1, 0, n3, 0, -1, n6, 0, 1, 0, 1, 1, 0, 0, 2])/
    (-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 
     2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 
     16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 
     20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 8*n1*n3*n6 - 16*n3^2*n6 - 
     48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3) + 
   (n6*(40 - 50*d + 15*d^2 + 8*n1 - 6*d*n1 + 38*n3 - 21*d*n3 + 6*n1*n3 + 
      6*n3^2 + 28*n6 - 16*d*n6 + 4*n1*n6 + 10*n3*n6 + 4*n6^2)*
     j[p4a, 1 + n1, 0, n3, 0, -1, 1 + n6, 0, 0, 0, 1, 1, 0, 1, 1])/
    (140 - 270*d + 170*d^2 - 35*d^3 + 48*n1 - 60*d*n1 + 19*d^2*n1 + 4*n1^2 - 
     2*d*n1^2 + 108*n3 - 148*d*n3 + 49*d^2*n3 + 20*n1*n3 - 14*d*n1*n3 + 
     16*n3^2 - 16*d*n3^2 + 168*n6 - 200*d*n6 + 59*d^2*n6 + 32*n1*n6 - 
     20*d*n1*n6 + 100*n3*n6 - 62*d*n3*n6 + 8*n1*n3*n6 + 16*n3^2*n6 + 
     48*n6^2 - 28*d*n6^2 + 4*n1*n6^2 + 16*n3*n6^2 + 4*n6^3) + 
   (n6*(-4*d + 3*d^2 - 3*d*n3 + 8*n6 - 8*d*n6 + 6*n3*n6 + 4*n6^2)*
     j[p4a, 1 + n1, 0, n3, 0, -1, 1 + n6, 0, 1, 0, 0, 1, 0, 1, 1])/
    (140 - 270*d + 170*d^2 - 35*d^3 + 48*n1 - 60*d*n1 + 19*d^2*n1 + 4*n1^2 - 
     2*d*n1^2 + 108*n3 - 148*d*n3 + 49*d^2*n3 + 20*n1*n3 - 14*d*n1*n3 + 
     16*n3^2 - 16*d*n3^2 + 168*n6 - 200*d*n6 + 59*d^2*n6 + 32*n1*n6 - 
     20*d*n1*n6 + 100*n3*n6 - 62*d*n3*n6 + 8*n1*n3*n6 + 16*n3^2*n6 + 
     48*n6^2 - 28*d*n6^2 + 4*n1*n6^2 + 16*n3*n6^2 + 4*n6^3) + 
   (n6*(40 - 50*d + 15*d^2 + 8*n1 - 6*d*n1 + 38*n3 - 21*d*n3 + 6*n1*n3 + 
      6*n3^2 + 28*n6 - 16*d*n6 + 4*n1*n6 + 10*n3*n6 + 4*n6^2)*
     j[p4a, 1 + n1, 0, n3, 0, -1, 1 + n6, 0, 1, 0, 1, 1, 0, 0, 1])/
    (140 - 270*d + 170*d^2 - 35*d^3 + 48*n1 - 60*d*n1 + 19*d^2*n1 + 4*n1^2 - 
     2*d*n1^2 + 108*n3 - 148*d*n3 + 49*d^2*n3 + 20*n1*n3 - 14*d*n1*n3 + 
     16*n3^2 - 16*d*n3^2 + 168*n6 - 200*d*n6 + 59*d^2*n6 + 32*n1*n6 - 
     20*d*n1*n6 + 100*n3*n6 - 62*d*n3*n6 + 8*n1*n3*n6 + 16*n3^2*n6 + 
     48*n6^2 - 28*d*n6^2 + 4*n1*n6^2 + 16*n3*n6^2 + 4*n6^3) + 
   (n6*(40 - 50*d + 15*d^2 + 8*n1 - 6*d*n1 + 38*n3 - 21*d*n3 + 6*n1*n3 + 
      6*n3^2 + 28*n6 - 16*d*n6 + 4*n1*n6 + 10*n3*n6 + 4*n6^2)*
     j[p4a, 1 + n1, 0, n3, 0, -1, 1 + n6, 0, 1, 0, 1, 1, 0, 1, 0])/
    (140 - 270*d + 170*d^2 - 35*d^3 + 48*n1 - 60*d*n1 + 19*d^2*n1 + 4*n1^2 - 
     2*d*n1^2 + 108*n3 - 148*d*n3 + 49*d^2*n3 + 20*n1*n3 - 14*d*n1*n3 + 
     16*n3^2 - 16*d*n3^2 + 168*n6 - 200*d*n6 + 59*d^2*n6 + 32*n1*n6 - 
     20*d*n1*n6 + 100*n3*n6 - 62*d*n3*n6 + 8*n1*n3*n6 + 16*n3^2*n6 + 
     48*n6^2 - 28*d*n6^2 + 4*n1*n6^2 + 16*n3*n6^2 + 4*n6^3) - 
   (2*(-40 + 90*d - 65*d^2 + 15*d^3 - 8*n1 + 14*d*n1 - 6*d^2*n1 - 38*n3 + 
      59*d*n3 - 21*d^2*n3 - 6*n1*n3 + 6*d*n1*n3 - 6*n3^2 + 6*d*n3^2 - 68*n6 + 
      94*d*n6 - 31*d^2*n6 - 12*n1*n6 + 10*d*n1*n6 - 48*n3*n6 + 31*d*n3*n6 - 
      6*n1*n3*n6 - 6*n3^2*n6 - 32*n6^2 + 20*d*n6^2 - 4*n1*n6^2 - 10*n3*n6^2 - 
      4*n6^3)*j[p4a, 1 + n1, 0, n3, 0, 0, -1 + n6, 0, 0, 0, 1, 2, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((-40 + 90*d - 65*d^2 + 15*d^3 - 8*n1 + 14*d*n1 - 6*d^2*n1 - 38*n3 + 
      59*d*n3 - 21*d^2*n3 - 6*n1*n3 + 6*d*n1*n3 - 6*n3^2 + 6*d*n3^2 - 68*n6 + 
      94*d*n6 - 31*d^2*n6 - 12*n1*n6 + 10*d*n1*n6 - 48*n3*n6 + 31*d*n3*n6 - 
      6*n1*n3*n6 - 6*n3^2*n6 - 32*n6^2 + 20*d*n6^2 - 4*n1*n6^2 - 10*n3*n6^2 - 
      4*n6^3)*j[p4a, 1 + n1, 0, n3, 0, 0, -1 + n6, 0, 0, 0, 2, 1, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) - (2*(20 - 27*d + 9*d^2 + 4*n1 - 3*d*n1 + 19*n3 - 
      12*d*n3 + 3*n1*n3 + 3*n3^2 + 18*n6 - 12*d*n6 + 2*n1*n6 + 8*n3*n6 + 
      4*n6^2)*j[p4a, 1 + n1, 0, n3, 0, 0, -1 + n6, 0, 1, 0, 1, 1, 0, 0, 2])/
    (-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 
     2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 
     16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 
     20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 8*n1*n3*n6 - 16*n3^2*n6 - 
     48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3) + 
   ((-160 + 608*d - 914*d^2 + 679*d^3 - 249*d^4 + 36*d^5 - 32*n1 + 112*d*n1 - 
      146*d^2*n1 + 84*d^3*n1 - 18*d^4*n1 - 392*n3 + 1186*d*n3 - 1321*d^2*n3 + 
      641*d^3*n3 - 114*d^4*n3 - 72*n1*n3 + 190*d*n1*n3 - 166*d^2*n1*n3 + 
      48*d^3*n1*n3 - 332*n3^2 + 758*d*n3^2 - 558*d^2*n3^2 + 132*d^3*n3^2 - 
      52*n1*n3^2 + 94*d*n1*n3^2 - 42*d^2*n1*n3^2 - 112*n3^3 + 178*d*n3^3 - 
      66*d^2*n3^3 - 12*n1*n3^3 + 12*d*n1*n3^3 - 12*n3^4 + 12*d*n3^4 - 
      448*n6 + 1336*d*n6 - 1478*d^2*n6 + 718*d^3*n6 - 129*d^4*n6 - 96*n1*n6 + 
      248*d*n1*n6 - 212*d^2*n1*n6 + 60*d^3*n1*n6 - 876*n3*n6 + 1916*d*n3*n6 - 
      1370*d^2*n3*n6 + 319*d^3*n3*n6 - 164*n1*n3*n6 + 284*d*n1*n3*n6 - 
      122*d^2*n1*n3*n6 - 572*n3^2*n6 + 810*d*n3^2*n6 - 276*d^2*n3^2*n6 - 
      84*n1*n3^2*n6 + 74*d*n1*n3^2*n6 - 144*n3^3*n6 + 98*d*n3^3*n6 - 
      12*n1*n3^3*n6 - 12*n3^4*n6 - 488*n6^2 + 1076*d*n6^2 - 782*d^2*n6^2 + 
      187*d^3*n6^2 - 104*n1*n6^2 + 176*d*n1*n6^2 - 74*d^2*n1*n6^2 - 
      684*n3*n6^2 + 966*d*n3*n6^2 - 333*d^2*n3*n6^2 - 120*n1*n3*n6^2 + 
      102*d*n1*n3*n6^2 - 280*n3^2*n6^2 + 184*d*n3^2*n6^2 - 32*n1*n3^2*n6^2 - 
      32*n3^3*n6^2 - 264*n6^3 + 384*d*n6^3 - 138*d^2*n6^3 - 48*n1*n6^3 + 
      40*d*n1*n6^3 - 228*n3*n6^3 + 156*d*n3*n6^3 - 28*n1*n3*n6^3 - 
      40*n3^2*n6^3 - 72*n6^4 + 52*d*n6^4 - 8*n1*n6^4 - 28*n3*n6^4 - 8*n6^5)*
     j[p4a, 1 + n1, 0, n3, 0, 0, -1 + n6, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n1)*(-1 + n6)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 
      60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 
      49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 
      200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((-40 + 90*d - 65*d^2 + 15*d^3 - 8*n1 + 14*d*n1 - 6*d^2*n1 - 38*n3 + 
      59*d*n3 - 21*d^2*n3 - 6*n1*n3 + 6*d*n1*n3 - 6*n3^2 + 6*d*n3^2 - 68*n6 + 
      94*d*n6 - 31*d^2*n6 - 12*n1*n6 + 10*d*n1*n6 - 48*n3*n6 + 31*d*n3*n6 - 
      6*n1*n3*n6 - 6*n3^2*n6 - 32*n6^2 + 20*d*n6^2 - 4*n1*n6^2 - 10*n3*n6^2 - 
      4*n6^3)*j[p4a, 1 + n1, 0, n3, 0, 0, -1 + n6, 0, 1, 0, 2, 1, 0, 0, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((40 - 90*d + 65*d^2 - 15*d^3 + 8*n1 - 14*d*n1 + 6*d^2*n1 + 38*n3 - 
      59*d*n3 + 21*d^2*n3 + 6*n1*n3 - 6*d*n1*n3 + 6*n3^2 - 6*d*n3^2 + 68*n6 - 
      94*d*n6 + 31*d^2*n6 + 12*n1*n6 - 10*d*n1*n6 + 48*n3*n6 - 31*d*n3*n6 + 
      6*n1*n3*n6 + 6*n3^2*n6 + 32*n6^2 - 20*d*n6^2 + 4*n1*n6^2 + 10*n3*n6^2 + 
      4*n6^3)*j[p4a, 1 + n1, 0, n3, 0, 0, -1 + n6, 0, 2, 0, 1, 0, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((40 - 90*d + 65*d^2 - 15*d^3 + 8*n1 - 14*d*n1 + 6*d^2*n1 + 38*n3 - 
      59*d*n3 + 21*d^2*n3 + 6*n1*n3 - 6*d*n1*n3 + 6*n3^2 - 6*d*n3^2 + 68*n6 - 
      94*d*n6 + 31*d^2*n6 + 12*n1*n6 - 10*d*n1*n6 + 48*n3*n6 - 31*d*n3*n6 + 
      6*n1*n3*n6 + 6*n3^2*n6 + 32*n6^2 - 20*d*n6^2 + 4*n1*n6^2 + 10*n3*n6^2 + 
      4*n6^3)*j[p4a, 1 + n1, 0, n3, 0, 0, -1 + n6, 0, 2, 0, 1, 1, 0, 0, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) - (2*(-4*d + 3*d^2 - 3*d*n3 + 8*n6 - 8*d*n6 + 
      6*n3*n6 + 4*n6^2)*j[p4a, 1 + n1, 0, n3, 0, 0, n6, -1, 0, 0, 1, 2, 0, 1, 
      1])/(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 
     4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 
     14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 59*d^2*n6 - 
     32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 8*n1*n3*n6 - 
     16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3) + 
   ((20 - 36*d + 18*d^2 - 2*d^3 + 24*n1 - 30*d*n1 + 10*d^2*n1 + 4*n1^2 - 
      2*d*n1^2 - 6*n3 + 2*d*n3 - 2*d^2*n3 + 2*n1*n3 - 5*d*n1*n3 - 2*n3^2 + 
      2*d*n3^2 + 36*n6 - 30*d*n6 + 4*d^2*n6 + 20*n1*n6 - 14*d*n1*n6 + 
      10*n3*n6 + d*n3*n6 + 8*n1*n3*n6 - 2*n3^2*n6 + 4*n6^2 + 4*n1*n6^2 - 
      2*n3*n6^2)*j[p4a, 1 + n1, 0, n3, 0, 0, n6, -1, 0, 0, 2, 1, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) - (2*(20 - 27*d + 9*d^2 + 4*n1 - 3*d*n1 + 19*n3 - 
      12*d*n3 + 3*n1*n3 + 3*n3^2 + 18*n6 - 12*d*n6 + 2*n1*n6 + 8*n3*n6 + 
      4*n6^2)*j[p4a, 1 + n1, 0, n3, 0, 0, n6, -1, 1, 0, 1, 1, 0, 0, 2])/
    (-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 
     2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 
     16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 
     20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 8*n1*n3*n6 - 16*n3^2*n6 - 
     48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3) + 
   ((20 - 36*d + 18*d^2 - 2*d^3 + 24*n1 - 30*d*n1 + 10*d^2*n1 + 4*n1^2 - 
      2*d*n1^2 - 6*n3 + 2*d*n3 - 2*d^2*n3 + 2*n1*n3 - 5*d*n1*n3 - 2*n3^2 + 
      2*d*n3^2 + 36*n6 - 30*d*n6 + 4*d^2*n6 + 20*n1*n6 - 14*d*n1*n6 + 
      10*n3*n6 + d*n3*n6 + 8*n1*n3*n6 - 2*n3^2*n6 + 4*n6^2 + 4*n1*n6^2 - 
      2*n3*n6^2)*j[p4a, 1 + n1, 0, n3, 0, 0, n6, -1, 1, 0, 2, 0, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((20 - 36*d + 18*d^2 - 2*d^3 + 24*n1 - 30*d*n1 + 10*d^2*n1 + 4*n1^2 - 
      2*d*n1^2 - 6*n3 + 2*d*n3 - 2*d^2*n3 + 2*n1*n3 - 5*d*n1*n3 - 2*n3^2 + 
      2*d*n3^2 + 36*n6 - 30*d*n6 + 4*d^2*n6 + 20*n1*n6 - 14*d*n1*n6 + 
      10*n3*n6 + d*n3*n6 + 8*n1*n3*n6 - 2*n3^2*n6 + 4*n6^2 + 4*n1*n6^2 - 
      2*n3*n6^2)*j[p4a, 1 + n1, 0, n3, 0, 0, n6, -1, 1, 0, 2, 1, 0, 0, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((4*d - 3*d^2 + 3*d*n3 - 8*n6 + 8*d*n6 - 6*n3*n6 - 4*n6^2)*
     j[p4a, 1 + n1, 0, n3, 0, 0, n6, -1, 2, 0, 1, 0, 0, 1, 1])/
    (-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 
     2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 
     16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 
     20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 8*n1*n3*n6 - 16*n3^2*n6 - 
     48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3) + 
   ((4*d - 3*d^2 + 3*d*n3 - 8*n6 + 8*d*n6 - 6*n3*n6 - 4*n6^2)*
     j[p4a, 1 + n1, 0, n3, 0, 0, n6, -1, 2, 0, 1, 1, 0, 0, 1])/
    (-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 
     2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 
     16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 
     20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 8*n1*n3*n6 - 16*n3^2*n6 - 
     48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3) + 
   (2*(-40 + 90*d - 65*d^2 + 15*d^3 - 8*n1 + 14*d*n1 - 6*d^2*n1 - 38*n3 + 
      59*d*n3 - 21*d^2*n3 - 6*n1*n3 + 6*d*n1*n3 - 6*n3^2 + 6*d*n3^2 - 68*n6 + 
      94*d*n6 - 31*d^2*n6 - 12*n1*n6 + 10*d*n1*n6 - 48*n3*n6 + 31*d*n3*n6 - 
      6*n1*n3*n6 - 6*n3^2*n6 - 32*n6^2 + 20*d*n6^2 - 4*n1*n6^2 - 10*n3*n6^2 - 
      4*n6^3)*j[p4a, 1 + n1, 0, n3, 0, 0, n6, 0, 0, -1, 1, 2, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((40 - 90*d + 65*d^2 - 15*d^3 + 8*n1 - 14*d*n1 + 6*d^2*n1 + 38*n3 - 
      59*d*n3 + 21*d^2*n3 + 6*n1*n3 - 6*d*n1*n3 + 6*n3^2 - 6*d*n3^2 + 68*n6 - 
      94*d*n6 + 31*d^2*n6 + 12*n1*n6 - 10*d*n1*n6 + 48*n3*n6 - 31*d*n3*n6 + 
      6*n1*n3*n6 + 6*n3^2*n6 + 32*n6^2 - 20*d*n6^2 + 4*n1*n6^2 + 10*n3*n6^2 + 
      4*n6^3)*j[p4a, 1 + n1, 0, n3, 0, 0, n6, 0, 0, -1, 2, 1, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((120 - 232*d + 136*d^2 - 13*d^3 - 7*d^4 + 
      64*n1 - 116*d*n1 + 69*d^2*n1 - 13*d^3*n1 + 8*n1^2 - 12*d*n1^2 + 
      5*d^2*n1^2 + 144*n3 - 202*d*n3 + 54*d^2*n3 + 12*d^3*n3 + 112*n1*n3 - 
      143*d*n1*n3 + 45*d^2*n1*n3 + 16*n1^2*n3 - 11*d*n1^2*n3 - 16*n3^2 + 
      17*d*n3^2 - 19*d^2*n3^2 + 8*n1*n3^2 - 17*d*n1*n3^2 - 8*n3^3 + 
      8*d*n3^3 + 188*n6 - 212*d*n6 + 28*d^2*n6 + 22*d^3*n6 + 64*n1*n6 - 
      74*d*n1*n6 + 18*d^2*n1*n6 + 4*n1^2*n6 - 6*d*n1^2*n6 + 282*n3*n6 - 
      178*d*n3*n6 - 10*d^2*n3*n6 + 124*n1*n3*n6 - 69*d*n1*n3*n6 + 
      6*n1^2*n3*n6 + 70*n3^2*n6 + d*n3^2*n6 + 32*n1*n3^2*n6 - 2*n3^3*n6 + 
      4*n6^2 + 58*d*n6^2 - 46*d^2*n6^2 + 8*n1*n6^2 + 2*d*n1*n6^2 + 
      4*n1^2*n6^2 - 2*n3*n6^2 + 39*d*n3*n6^2 + 8*n1*n3*n6^2 - 8*n3^2*n6^2 - 
      28*n6^3 + 32*d*n6^3 - 4*n1*n6^3 - 14*n3*n6^3 - 8*n6^4)*
     j[p4a, 1 + n1, 0, n3, 0, 0, n6, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((-60 + 114*d - 70*d^2 + 14*d^3 - 32*n1 + 40*d*n1 - 13*d^2*n1 - 4*n1^2 + 
      2*d*n1^2 - 32*n3 + 48*d*n3 - 16*d^2*n3 - 8*n1*n3 + 8*d*n1*n3 - 4*n3^2 + 
      4*d*n3^2 - 80*n6 + 92*d*n6 - 27*d^2*n6 - 24*n1*n6 + 16*d*n1*n6 - 
      40*n3*n6 + 24*d*n3*n6 - 8*n1*n3*n6 - 4*n3^2*n6 - 24*n6^2 + 16*d*n6^2 - 
      4*n1*n6^2 - 8*n3*n6^2 - 4*n6^3)*j[p4a, 1 + n1, 0, n3, 0, 0, n6, 0, 0, 
      0, 1, 2, -1, 1, 1])/((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 
      48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 
      49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 
      200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((60 - 114*d + 70*d^2 - 14*d^3 + 32*n1 - 40*d*n1 + 13*d^2*n1 + 4*n1^2 - 
      2*d*n1^2 + 32*n3 - 48*d*n3 + 16*d^2*n3 + 8*n1*n3 - 8*d*n1*n3 + 4*n3^2 - 
      4*d*n3^2 + 80*n6 - 92*d*n6 + 27*d^2*n6 + 24*n1*n6 - 16*d*n1*n6 + 
      40*n3*n6 - 24*d*n3*n6 + 8*n1*n3*n6 + 4*n3^2*n6 + 24*n6^2 - 16*d*n6^2 + 
      4*n1*n6^2 + 8*n3*n6^2 + 4*n6^3)*j[p4a, 1 + n1, 0, n3, 0, 0, n6, 0, 0, 
      0, 1, 2, 0, 1, 1])/((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 
      48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 
      49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 
      200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((-4*d + 3*d^2 - 3*d*n3 + 8*n6 - 8*d*n6 + 6*n3*n6 + 4*n6^2)*
     j[p4a, 1 + n1, 0, n3, 0, 0, n6, 0, 1, -1, 1, 1, 0, 0, 2])/
    (-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 
     2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 
     16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 
     20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 8*n1*n3*n6 - 16*n3^2*n6 - 
     48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3) + 
   ((40 - 90*d + 65*d^2 - 15*d^3 + 8*n1 - 14*d*n1 + 6*d^2*n1 + 38*n3 - 
      59*d*n3 + 21*d^2*n3 + 6*n1*n3 - 6*d*n1*n3 + 6*n3^2 - 6*d*n3^2 + 68*n6 - 
      94*d*n6 + 31*d^2*n6 + 12*n1*n6 - 10*d*n1*n6 + 48*n3*n6 - 31*d*n3*n6 + 
      6*n1*n3*n6 + 6*n3^2*n6 + 32*n6^2 - 20*d*n6^2 + 4*n1*n6^2 + 10*n3*n6^2 + 
      4*n6^3)*j[p4a, 1 + n1, 0, n3, 0, 0, n6, 0, 1, -1, 2, 1, 0, 0, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((-80 + 256*d - 308*d^2 + 159*d^3 - 29*d^4 + 
      24*n1 - 18*d*n1 - 8*d^2*n1 + 7*d^3*n1 + 8*n1^2 - 6*d*n1^2 + d^2*n1^2 - 
      176*n3 + 386*d*n3 - 291*d^2*n3 + 69*d^3*n3 - 14*n1*n3 + 28*d*n1*n3 - 
      18*d^2*n1*n3 + 2*n1^2*n3 - d*n1^2*n3 - 82*n3^2 + 138*d*n3^2 - 
      50*d^2*n3^2 - 8*n1*n3^2 + 11*d*n1*n3^2 - 10*n3^3 + 10*d*n3^3 - 188*n6 + 
      476*d*n6 - 367*d^2*n6 + 87*d^3*n6 - 4*n1*n6 + 32*d*n1*n6 - 
      22*d^2*n1*n6 - 302*n3*n6 + 463*d*n3*n6 - 158*d^2*n3*n6 - 28*n1*n3*n6 + 
      37*d*n1*n3*n6 - 128*n3^2*n6 + 81*d*n3^2*n6 - 14*n1*n3^2*n6 - 
      10*n3^3*n6 - 188*n6^2 + 274*d*n6^2 - 94*d^2*n6^2 - 16*n1*n6^2 + 
      18*d*n1*n6^2 - 176*n3*n6^2 + 113*d*n3*n6^2 - 16*n1*n3*n6^2 - 
      28*n3^2*n6^2 - 64*n6^3 + 44*d*n6^3 - 4*n1*n6^3 - 26*n3*n6^3 - 8*n6^4)*
     j[p4a, 1 + n1, 0, n3, 0, 0, n6, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((40 - 78*d + 52*d^2 - 12*d^3 + 8*n1 - 10*d*n1 + 3*d^2*n1 + 38*n3 - 
      50*d*n3 + 18*d^2*n3 + 6*n1*n3 - 3*d*n1*n3 + 6*n3^2 - 6*d*n3^2 + 44*n6 - 
      62*d*n6 + 23*d^2*n6 + 4*n1*n6 - 2*d*n1*n6 + 30*n3*n6 - 25*d*n3*n6 + 
      6*n3^2*n6 + 20*n6^2 - 16*d*n6^2 + 10*n3*n6^2 + 4*n6^3)*
     j[p4a, 1 + n1, 0, n3, 0, 0, n6, 0, 1, 0, 0, 2, -1, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((-40 + 78*d - 52*d^2 + 12*d^3 - 8*n1 + 10*d*n1 - 3*d^2*n1 - 38*n3 + 
      50*d*n3 - 18*d^2*n3 - 6*n1*n3 + 3*d*n1*n3 - 6*n3^2 + 6*d*n3^2 - 44*n6 + 
      62*d*n6 - 23*d^2*n6 - 4*n1*n6 + 2*d*n1*n6 - 30*n3*n6 + 25*d*n3*n6 - 
      6*n3^2*n6 - 20*n6^2 + 16*d*n6^2 - 10*n3*n6^2 - 4*n6^3)*
     j[p4a, 1 + n1, 0, n3, 0, 0, n6, 0, 1, 0, 0, 2, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((-20 + 36*d - 18*d^2 + 2*d^3 - 64*n1 + 108*d*n1 - 62*d^2*n1 + 12*d^3*n1 - 
      12*n1^2 + 12*d*n1^2 - 3*d^2*n1^2 + 26*n3 - 38*d*n3 + 20*d^2*n3 - 
      2*d^3*n3 - 16*n1*n3 + 25*d*n1*n3 - 8*d^2*n1*n3 - 2*n1^2*n3 + 
      d*n1^2*n3 - 4*n3^2 - 2*d^2*n3^2 - 4*n1*n3^2 + d*n1*n3^2 - 2*n3^3 + 
      2*d*n3^3 - 36*n6 + 30*d*n6 - 4*d^2*n6 - 64*n1*n6 + 76*d*n1*n6 - 
      23*d^2*n1*n6 - 4*n1^2*n6 + 2*d*n1^2*n6 + 26*n3*n6 - 31*d*n3*n6 + 
      4*d^2*n3*n6 - 18*n1*n3*n6 + 11*d*n1*n3*n6 + 12*n3^2*n6 + d*n3^2*n6 + 
      2*n1*n3^2*n6 - 2*n3^3*n6 - 4*n6^2 - 24*n1*n6^2 + 16*d*n1*n6^2 + 
      6*n3*n6^2 - 6*n1*n3*n6^2 - 2*n3^2*n6^2 - 4*n1*n6^3)*
     j[p4a, 1 + n1, 0, n3, 0, 0, n6, 0, 1, 0, 1, 0, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + (2*(20 - 27*d + 9*d^2 + 4*n1 - 3*d*n1 + 19*n3 - 
      12*d*n3 + 3*n1*n3 + 3*n3^2 + 18*n6 - 12*d*n6 + 2*n1*n6 + 8*n3*n6 + 
      4*n6^2)*j[p4a, 1 + n1, 0, n3, 0, 0, n6, 0, 1, 0, 1, 1, -1, 0, 2])/
    (-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 
     2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 
     16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 
     20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 8*n1*n3*n6 - 16*n3^2*n6 - 
     48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3) + 
   ((28*d - 52*d^2 + 33*d^3 - 7*d^4 - 100*n1 + 196*d*n1 - 129*d^2*n1 + 
      28*d^3*n1 - 40*n1^2 + 50*d*n1^2 - 17*d^2*n1^2 - 4*n1^3 + 2*d*n1^3 + 
      60*n3 - 18*d*n3 - 39*d^2*n3 + 17*d^3*n3 + 2*n1*n3 + 43*d*n1*n3 - 
      23*d^2*n1*n3 - 2*n1^2*n3 + 8*d*n1^2*n3 - 18*n3^2 + 44*d*n3^2 - 
      20*d^2*n3^2 - 4*n1*n3^2 + 7*d*n1*n3^2 - 6*n3^3 + 6*d*n3^3 - 56*n6 + 
      154*d*n6 - 133*d^2*n6 + 35*d^3*n6 - 132*n1*n6 + 174*d*n1*n6 - 
      59*d^2*n1*n6 - 28*n1^2*n6 + 20*d*n1^2*n6 - 22*n3*n6 + 123*d*n3*n6 - 
      60*d^2*n3*n6 - 40*n1*n3*n6 + 40*d*n1*n3*n6 - 8*n1^2*n3*n6 - 
      36*n3^2*n6 + 35*d*n3^2*n6 - 4*n1*n3^2*n6 - 6*n3^3*n6 - 100*n6^2 + 
      160*d*n6^2 - 58*d^2*n6^2 - 56*n1*n6^2 + 44*d*n1*n6^2 - 4*n1^2*n6^2 - 
      102*n3*n6^2 + 70*d*n3*n6^2 - 24*n1*n3*n6^2 - 18*n3^2*n6^2 - 52*n6^3 + 
      36*d*n6^3 - 12*n1*n6^3 - 20*n3*n6^3 - 8*n6^4)*
     j[p4a, 1 + n1, 0, n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((4*d - 3*d^2 + 3*d*n3 - 8*n6 + 8*d*n6 - 6*n3*n6 - 4*n6^2)*
     j[p4a, 1 + n1, 0, n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 0, 2])/
    (-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 
     2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 
     16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 
     20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 8*n1*n3*n6 - 16*n3^2*n6 - 
     48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3) + 
   ((-240 + 410*d - 247*d^2 + 65*d^3 - 7*d^4 - 88*n1 + 98*d*n1 - 22*d^2*n1 - 
      d^3*n1 - 8*n1^2 + 4*d*n1^2 + 2*d^2*n1^2 - 258*n3 + 247*d*n3 - 
      64*d^2*n3 + 3*d^3*n3 - 90*n1*n3 + 34*d*n1*n3 + 3*d^2*n1*n3 - 
      8*n1^2*n3 - 2*d*n1^2*n3 - 52*n3^2 + 9*d*n3^2 + 8*d^2*n3^2 - 
      10*n1*n3^2 - 2*d*n1*n3^2 - 2*n3^3 - 4*d*n3^3 - 188*n6 + 276*d*n6 - 
      158*d^2*n6 + 35*d^3*n6 - 36*n1*n6 + 10*d*n1*n6 - d^2*n1*n6 - 
      6*d*n1^2*n6 - 78*n3*n6 + 86*d*n3*n6 - 29*d^2*n3*n6 + 14*n1*n3*n6 - 
      5*d*n1*n3*n6 + 6*n1^2*n3*n6 + 2*n3^2*n6 - 4*d*n3^2*n6 + 2*n1*n3^2*n6 + 
      4*n3^3*n6 - 116*n6^2 + 160*d*n6^2 - 58*d^2*n6^2 - 4*n1*n6^2 + 
      8*d*n1*n6^2 + 4*n1^2*n6^2 - 64*n3*n6^2 + 46*d*n3*n6^2 - 6*n1*n3*n6^2 - 
      4*n3^2*n6^2 - 48*n6^3 + 36*d*n6^3 - 4*n1*n6^3 - 16*n3*n6^3 - 8*n6^4)*
     j[p4a, 1 + n1, 0, n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 1, 0])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((180 - 414*d + 362*d^2 - 144*d^3 + 22*d^4 + 
      156*n1 - 282*d*n1 + 169*d^2*n1 - 34*d^3*n1 + 44*n1^2 - 54*d*n1^2 + 
      17*d^2*n1^2 + 4*n1^3 - 2*d*n1^3 + 156*n3 - 286*d*n3 + 184*d^2*n3 - 
      40*d^3*n3 + 88*n1*n3 - 116*d*n1*n3 + 39*d^2*n1*n3 + 12*n1^2*n3 - 
      10*d*n1^2*n3 + 44*n3^2 - 68*d*n3^2 + 24*d^2*n3^2 + 12*n1*n3^2 - 
      12*d*n1*n3^2 + 4*n3^3 - 4*d*n3^3 + 264*n6 - 488*d*n6 + 309*d^2*n6 - 
      66*d^3*n6 + 184*n1*n6 - 220*d*n1*n6 + 69*d^2*n1*n6 + 32*n1^2*n6 - 
      20*d*n1^2*n6 + 192*n3*n6 - 280*d*n3*n6 + 95*d^2*n3*n6 + 80*n1*n3*n6 - 
      60*d*n1*n3*n6 + 8*n1^2*n3*n6 + 60*n3^2*n6 - 40*d*n3^2*n6 + 
      12*n1*n3^2*n6 + 4*n3^3*n6 + 184*n6^2 - 240*d*n6^2 + 78*d^2*n6^2 + 
      68*n1*n6^2 - 48*d*n1*n6^2 + 4*n1^2*n6^2 + 128*n3*n6^2 - 80*d*n3*n6^2 + 
      28*n1*n3*n6^2 + 16*n3^2*n6^2 + 60*n6^3 - 40*d*n6^3 + 12*n1*n6^3 + 
      20*n3*n6^3 + 8*n6^4)*j[p4a, 1 + n1, 0, n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 
      1, 1])/((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 
      60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 
      49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 
      200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((40 - 90*d + 65*d^2 - 15*d^3 + 8*n1 - 14*d*n1 + 6*d^2*n1 + 38*n3 - 
      59*d*n3 + 21*d^2*n3 + 6*n1*n3 - 6*d*n1*n3 + 6*n3^2 - 6*d*n3^2 + 68*n6 - 
      94*d*n6 + 31*d^2*n6 + 12*n1*n6 - 10*d*n1*n6 + 48*n3*n6 - 31*d*n3*n6 + 
      6*n1*n3*n6 + 6*n3^2*n6 + 32*n6^2 - 20*d*n6^2 + 4*n1*n6^2 + 10*n3*n6^2 + 
      4*n6^3)*j[p4a, 1 + n1, 0, n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 2, 0])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((-20 + 36*d - 18*d^2 + 2*d^3 - 24*n1 + 30*d*n1 - 10*d^2*n1 - 4*n1^2 + 
      2*d*n1^2 + 6*n3 - 2*d*n3 + 2*d^2*n3 - 2*n1*n3 + 5*d*n1*n3 + 2*n3^2 - 
      2*d*n3^2 - 36*n6 + 30*d*n6 - 4*d^2*n6 - 20*n1*n6 + 14*d*n1*n6 - 
      10*n3*n6 - d*n3*n6 - 8*n1*n3*n6 + 2*n3^2*n6 - 4*n6^2 - 4*n1*n6^2 + 
      2*n3*n6^2)*j[p4a, 1 + n1, 0, n3, 0, 0, n6, 0, 1, 0, 2, 0, -1, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((20 - 36*d + 18*d^2 - 2*d^3 + 24*n1 - 30*d*n1 + 10*d^2*n1 + 4*n1^2 - 
      2*d*n1^2 - 6*n3 + 2*d*n3 - 2*d^2*n3 + 2*n1*n3 - 5*d*n1*n3 - 2*n3^2 + 
      2*d*n3^2 + 36*n6 - 30*d*n6 + 4*d^2*n6 + 20*n1*n6 - 14*d*n1*n6 + 
      10*n3*n6 + d*n3*n6 + 8*n1*n3*n6 - 2*n3^2*n6 + 4*n6^2 + 4*n1*n6^2 - 
      2*n3*n6^2)*j[p4a, 1 + n1, 0, n3, 0, 0, n6, 0, 1, 0, 2, 0, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) - ((-2 + d - n3)*n6*(40 - 50*d + 15*d^2 + 8*n1 - 
      6*d*n1 + 38*n3 - 21*d*n3 + 6*n1*n3 + 6*n3^2 + 28*n6 - 16*d*n6 + 
      4*n1*n6 + 10*n3*n6 + 4*n6^2)*j[p4a, 1 + n1, 0, n3, 0, 0, 1 + n6, -1, 0, 
      0, 1, 1, 0, 1, 1])/((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 
      48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 
      49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 
      200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) - (n6*(-20 + 36*d - 18*d^2 + 2*d^3 - 24*n1 + 
      30*d*n1 - 10*d^2*n1 - 4*n1^2 + 2*d*n1^2 + 6*n3 - 2*d*n3 + 2*d^2*n3 - 
      2*n1*n3 + 5*d*n1*n3 + 2*n3^2 - 2*d*n3^2 - 36*n6 + 30*d*n6 - 4*d^2*n6 - 
      20*n1*n6 + 14*d*n1*n6 - 10*n3*n6 - d*n3*n6 - 8*n1*n3*n6 + 2*n3^2*n6 - 
      4*n6^2 - 4*n1*n6^2 + 2*n3*n6^2)*j[p4a, 1 + n1, 0, n3, 0, 0, 1 + n6, 0, 
      0, -1, 1, 1, 0, 1, 1])/((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 
      35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 
      148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 
      168*n6 + 200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 
      62*d*n3*n6 - 8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 
      4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3)) + 
   ((-2 + d - n3)*n6*(40 - 50*d + 15*d^2 + 8*n1 - 6*d*n1 + 38*n3 - 21*d*n3 + 
      6*n1*n3 + 6*n3^2 + 28*n6 - 16*d*n6 + 4*n1*n6 + 10*n3*n6 + 4*n6^2)*
     j[p4a, 1 + n1, 0, n3, 0, 0, 1 + n6, 0, 0, 0, 1, 1, -1, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + (3*n3*(-40 + 90*d - 65*d^2 + 15*d^3 - 8*n1 + 
      14*d*n1 - 6*d^2*n1 - 38*n3 + 59*d*n3 - 21*d^2*n3 - 6*n1*n3 + 
      6*d*n1*n3 - 6*n3^2 + 6*d*n3^2 - 68*n6 + 94*d*n6 - 31*d^2*n6 - 
      12*n1*n6 + 10*d*n1*n6 - 48*n3*n6 + 31*d*n3*n6 - 6*n1*n3*n6 - 
      6*n3^2*n6 - 32*n6^2 + 20*d*n6^2 - 4*n1*n6^2 - 10*n3*n6^2 - 4*n6^3)*
     j[p4a, 1 + n1, 0, 1 + n3, -1, 0, n6, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) - (n3*(-40 + 90*d - 65*d^2 + 15*d^3 - 8*n1 + 
      14*d*n1 - 6*d^2*n1 - 38*n3 + 59*d*n3 - 21*d^2*n3 - 6*n1*n3 + 
      6*d*n1*n3 - 6*n3^2 + 6*d*n3^2 - 68*n6 + 94*d*n6 - 31*d^2*n6 - 
      12*n1*n6 + 10*d*n1*n6 - 48*n3*n6 + 31*d*n3*n6 - 6*n1*n3*n6 - 
      6*n3^2*n6 - 32*n6^2 + 20*d*n6^2 - 4*n1*n6^2 - 10*n3*n6^2 - 4*n6^3)*
     j[p4a, 1 + n1, 0, 1 + n3, -1, 0, n6, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + (n3*(-40 + 90*d - 65*d^2 + 15*d^3 - 8*n1 + 
      14*d*n1 - 6*d^2*n1 - 38*n3 + 59*d*n3 - 21*d^2*n3 - 6*n1*n3 + 
      6*d*n1*n3 - 6*n3^2 + 6*d*n3^2 - 68*n6 + 94*d*n6 - 31*d^2*n6 - 
      12*n1*n6 + 10*d*n1*n6 - 48*n3*n6 + 31*d*n3*n6 - 6*n1*n3*n6 - 
      6*n3^2*n6 - 32*n6^2 + 20*d*n6^2 - 4*n1*n6^2 - 10*n3*n6^2 - 4*n6^3)*
     j[p4a, 1 + n1, 0, 1 + n3, -1, 0, n6, 0, 1, 0, 1, 0, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + (2*n3*(-40 + 90*d - 65*d^2 + 15*d^3 - 8*n1 + 
      14*d*n1 - 6*d^2*n1 - 38*n3 + 59*d*n3 - 21*d^2*n3 - 6*n1*n3 + 
      6*d*n1*n3 - 6*n3^2 + 6*d*n3^2 - 68*n6 + 94*d*n6 - 31*d^2*n6 - 
      12*n1*n6 + 10*d*n1*n6 - 48*n3*n6 + 31*d*n3*n6 - 6*n1*n3*n6 - 
      6*n3^2*n6 - 32*n6^2 + 20*d*n6^2 - 4*n1*n6^2 - 10*n3*n6^2 - 4*n6^3)*
     j[p4a, 1 + n1, 0, 1 + n3, -1, 0, n6, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((60*n3 - 214*d*n3 + 274*d^2*n3 - 149*d^3*n3 + 
      29*d^4*n3 + 32*n1*n3 - 80*d*n1*n3 + 67*d^2*n1*n3 - 19*d^3*n1*n3 + 
      4*n1^2*n3 - 6*d*n1^2*n3 + 2*d^2*n1^2*n3 + 112*n3^2 - 298*d*n3^2 + 
      253*d^2*n3^2 - 67*d^3*n3^2 + 24*n1*n3^2 - 50*d*n1*n3^2 + 
      26*d^2*n1*n3^2 + 80*n3^3 - 132*d*n3^3 + 52*d^2*n3^3 + 12*n1*n3^3 - 
      12*d*n1*n3^3 + 12*n3^4 - 12*d*n3^4 + 220*n3*n6 - 534*d*n3*n6 + 
      413*d^2*n3*n6 - 102*d^3*n3*n6 + 72*n1*n3*n6 - 120*d*n1*n3*n6 + 
      51*d^2*n1*n3*n6 + 4*n1^2*n3*n6 - 2*d*n1^2*n3*n6 + 284*n3^2*n6 - 
      466*d*n3^2*n6 + 175*d^2*n3^2*n6 + 52*n1*n3^2*n6 - 54*d*n1*n3^2*n6 + 
      116*n3^3*n6 - 88*d*n3^3*n6 + 12*n1*n3^3*n6 + 12*n3^4*n6 + 240*n3*n6^2 - 
      352*d*n3*n6^2 + 125*d^2*n3*n6^2 + 52*n1*n3*n6^2 - 44*d*n1*n3*n6^2 + 
      208*n3^2*n6^2 - 144*d*n3^2*n6^2 + 28*n1*n3^2*n6^2 + 36*n3^3*n6^2 + 
      92*n3*n6^3 - 64*d*n3*n6^3 + 12*n1*n3*n6^3 + 36*n3^2*n6^3 + 12*n3*n6^4)*
     j[p4a, 1 + n1, 0, 1 + n3, 0, 0, -1 + n6, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n1)*(-1 + n6)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 
      60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 
      49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 
      200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((-60*n3 + 214*d*n3 - 274*d^2*n3 + 149*d^3*n3 - 
      29*d^4*n3 - 32*n1*n3 + 80*d*n1*n3 - 67*d^2*n1*n3 + 19*d^3*n1*n3 - 
      4*n1^2*n3 + 6*d*n1^2*n3 - 2*d^2*n1^2*n3 - 112*n3^2 + 298*d*n3^2 - 
      253*d^2*n3^2 + 67*d^3*n3^2 - 24*n1*n3^2 + 50*d*n1*n3^2 - 
      26*d^2*n1*n3^2 - 80*n3^3 + 132*d*n3^3 - 52*d^2*n3^3 - 12*n1*n3^3 + 
      12*d*n1*n3^3 - 12*n3^4 + 12*d*n3^4 - 220*n3*n6 + 534*d*n3*n6 - 
      413*d^2*n3*n6 + 102*d^3*n3*n6 - 72*n1*n3*n6 + 120*d*n1*n3*n6 - 
      51*d^2*n1*n3*n6 - 4*n1^2*n3*n6 + 2*d*n1^2*n3*n6 - 284*n3^2*n6 + 
      466*d*n3^2*n6 - 175*d^2*n3^2*n6 - 52*n1*n3^2*n6 + 54*d*n1*n3^2*n6 - 
      116*n3^3*n6 + 88*d*n3^3*n6 - 12*n1*n3^3*n6 - 12*n3^4*n6 - 240*n3*n6^2 + 
      352*d*n3*n6^2 - 125*d^2*n3*n6^2 - 52*n1*n3*n6^2 + 44*d*n1*n3*n6^2 - 
      208*n3^2*n6^2 + 144*d*n3^2*n6^2 - 28*n1*n3^2*n6^2 - 36*n3^3*n6^2 - 
      92*n3*n6^3 + 64*d*n3*n6^3 - 12*n1*n3*n6^3 - 36*n3^2*n6^3 - 12*n3*n6^4)*
     j[p4a, 1 + n1, 0, 1 + n3, 0, 0, -1 + n6, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((-3 + d - n1)*(-1 + n6)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 
      60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 
      49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 
      200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((60*n3 - 214*d*n3 + 274*d^2*n3 - 149*d^3*n3 + 
      29*d^4*n3 + 32*n1*n3 - 80*d*n1*n3 + 67*d^2*n1*n3 - 19*d^3*n1*n3 + 
      4*n1^2*n3 - 6*d*n1^2*n3 + 2*d^2*n1^2*n3 + 112*n3^2 - 298*d*n3^2 + 
      253*d^2*n3^2 - 67*d^3*n3^2 + 24*n1*n3^2 - 50*d*n1*n3^2 + 
      26*d^2*n1*n3^2 + 80*n3^3 - 132*d*n3^3 + 52*d^2*n3^3 + 12*n1*n3^3 - 
      12*d*n1*n3^3 + 12*n3^4 - 12*d*n3^4 + 220*n3*n6 - 534*d*n3*n6 + 
      413*d^2*n3*n6 - 102*d^3*n3*n6 + 72*n1*n3*n6 - 120*d*n1*n3*n6 + 
      51*d^2*n1*n3*n6 + 4*n1^2*n3*n6 - 2*d*n1^2*n3*n6 + 284*n3^2*n6 - 
      466*d*n3^2*n6 + 175*d^2*n3^2*n6 + 52*n1*n3^2*n6 - 54*d*n1*n3^2*n6 + 
      116*n3^3*n6 - 88*d*n3^3*n6 + 12*n1*n3^3*n6 + 12*n3^4*n6 + 240*n3*n6^2 - 
      352*d*n3*n6^2 + 125*d^2*n3*n6^2 + 52*n1*n3*n6^2 - 44*d*n1*n3*n6^2 + 
      208*n3^2*n6^2 - 144*d*n3^2*n6^2 + 28*n1*n3^2*n6^2 + 36*n3^3*n6^2 + 
      92*n3*n6^3 - 64*d*n3*n6^3 + 12*n1*n3*n6^3 + 36*n3^2*n6^3 + 12*n3*n6^4)*
     j[p4a, 1 + n1, 0, 1 + n3, 0, 0, -1 + n6, 0, 1, 0, 1, 0, 0, 1, 1])/
    ((-3 + d - n1)*(-1 + n6)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 
      60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 
      49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 
      200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((-60*n3 + 214*d*n3 - 274*d^2*n3 + 149*d^3*n3 - 
      29*d^4*n3 - 32*n1*n3 + 80*d*n1*n3 - 67*d^2*n1*n3 + 19*d^3*n1*n3 - 
      4*n1^2*n3 + 6*d*n1^2*n3 - 2*d^2*n1^2*n3 - 112*n3^2 + 298*d*n3^2 - 
      253*d^2*n3^2 + 67*d^3*n3^2 - 24*n1*n3^2 + 50*d*n1*n3^2 - 
      26*d^2*n1*n3^2 - 80*n3^3 + 132*d*n3^3 - 52*d^2*n3^3 - 12*n1*n3^3 + 
      12*d*n1*n3^3 - 12*n3^4 + 12*d*n3^4 - 220*n3*n6 + 534*d*n3*n6 - 
      413*d^2*n3*n6 + 102*d^3*n3*n6 - 72*n1*n3*n6 + 120*d*n1*n3*n6 - 
      51*d^2*n1*n3*n6 - 4*n1^2*n3*n6 + 2*d*n1^2*n3*n6 - 284*n3^2*n6 + 
      466*d*n3^2*n6 - 175*d^2*n3^2*n6 - 52*n1*n3^2*n6 + 54*d*n1*n3^2*n6 - 
      116*n3^3*n6 + 88*d*n3^3*n6 - 12*n1*n3^3*n6 - 12*n3^4*n6 - 240*n3*n6^2 + 
      352*d*n3*n6^2 - 125*d^2*n3*n6^2 - 52*n1*n3*n6^2 + 44*d*n1*n3*n6^2 - 
      208*n3^2*n6^2 + 144*d*n3^2*n6^2 - 28*n1*n3^2*n6^2 - 36*n3^3*n6^2 - 
      92*n3*n6^3 + 64*d*n3*n6^3 - 12*n1*n3*n6^3 - 36*n3^2*n6^3 - 12*n3*n6^4)*
     j[p4a, 1 + n1, 0, 1 + n3, 0, 0, -1 + n6, 0, 1, 0, 1, 1, -1, 1, 1])/
    ((-3 + d - n1)*(-1 + n6)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 
      60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 
      49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 
      200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((60*n3 - 214*d*n3 + 274*d^2*n3 - 149*d^3*n3 + 
      29*d^4*n3 + 32*n1*n3 - 80*d*n1*n3 + 67*d^2*n1*n3 - 19*d^3*n1*n3 + 
      4*n1^2*n3 - 6*d*n1^2*n3 + 2*d^2*n1^2*n3 + 112*n3^2 - 298*d*n3^2 + 
      253*d^2*n3^2 - 67*d^3*n3^2 + 24*n1*n3^2 - 50*d*n1*n3^2 + 
      26*d^2*n1*n3^2 + 80*n3^3 - 132*d*n3^3 + 52*d^2*n3^3 + 12*n1*n3^3 - 
      12*d*n1*n3^3 + 12*n3^4 - 12*d*n3^4 + 220*n3*n6 - 534*d*n3*n6 + 
      413*d^2*n3*n6 - 102*d^3*n3*n6 + 72*n1*n3*n6 - 120*d*n1*n3*n6 + 
      51*d^2*n1*n3*n6 + 4*n1^2*n3*n6 - 2*d*n1^2*n3*n6 + 284*n3^2*n6 - 
      466*d*n3^2*n6 + 175*d^2*n3^2*n6 + 52*n1*n3^2*n6 - 54*d*n1*n3^2*n6 + 
      116*n3^3*n6 - 88*d*n3^3*n6 + 12*n1*n3^3*n6 + 12*n3^4*n6 + 240*n3*n6^2 - 
      352*d*n3*n6^2 + 125*d^2*n3*n6^2 + 52*n1*n3*n6^2 - 44*d*n1*n3*n6^2 + 
      208*n3^2*n6^2 - 144*d*n3^2*n6^2 + 28*n1*n3^2*n6^2 + 36*n3^3*n6^2 + 
      92*n3*n6^3 - 64*d*n3*n6^3 + 12*n1*n3*n6^3 + 36*n3^2*n6^3 + 12*n3*n6^4)*
     j[p4a, 1 + n1, 0, 1 + n3, 0, 0, -1 + n6, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((-3 + d - n1)*(-1 + n6)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 
      60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 
      49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 
      200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((60*n3 - 214*d*n3 + 274*d^2*n3 - 149*d^3*n3 + 
      29*d^4*n3 + 32*n1*n3 - 80*d*n1*n3 + 67*d^2*n1*n3 - 19*d^3*n1*n3 + 
      4*n1^2*n3 - 6*d*n1^2*n3 + 2*d^2*n1^2*n3 + 112*n3^2 - 298*d*n3^2 + 
      253*d^2*n3^2 - 67*d^3*n3^2 + 24*n1*n3^2 - 50*d*n1*n3^2 + 
      26*d^2*n1*n3^2 + 80*n3^3 - 132*d*n3^3 + 52*d^2*n3^3 + 12*n1*n3^3 - 
      12*d*n1*n3^3 + 12*n3^4 - 12*d*n3^4 + 220*n3*n6 - 534*d*n3*n6 + 
      413*d^2*n3*n6 - 102*d^3*n3*n6 + 72*n1*n3*n6 - 120*d*n1*n3*n6 + 
      51*d^2*n1*n3*n6 + 4*n1^2*n3*n6 - 2*d*n1^2*n3*n6 + 284*n3^2*n6 - 
      466*d*n3^2*n6 + 175*d^2*n3^2*n6 + 52*n1*n3^2*n6 - 54*d*n1*n3^2*n6 + 
      116*n3^3*n6 - 88*d*n3^3*n6 + 12*n1*n3^3*n6 + 12*n3^4*n6 + 240*n3*n6^2 - 
      352*d*n3*n6^2 + 125*d^2*n3*n6^2 + 52*n1*n3*n6^2 - 44*d*n1*n3*n6^2 + 
      208*n3^2*n6^2 - 144*d*n3^2*n6^2 + 28*n1*n3^2*n6^2 + 36*n3^3*n6^2 + 
      92*n3*n6^3 - 64*d*n3*n6^3 + 12*n1*n3*n6^3 + 36*n3^2*n6^3 + 12*n3*n6^4)*
     j[p4a, 1 + n1, 0, 1 + n3, 0, 0, -1 + n6, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n1)*(-1 + n6)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 
      60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 
      49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 
      200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + (3*n3*(4*d - 3*d^2 + 3*d*n3 - 8*n6 + 8*d*n6 - 
      6*n3*n6 - 4*n6^2)*j[p4a, 1 + n1, 0, 1 + n3, 0, 0, n6, -1, 0, 0, 1, 1, 
      0, 1, 1])/(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
     19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
     20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
     59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
     8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 
     4*n6^3) - (n3*(4*d - 3*d^2 + 3*d*n3 - 8*n6 + 8*d*n6 - 6*n3*n6 - 4*n6^2)*
     j[p4a, 1 + n1, 0, 1 + n3, 0, 0, n6, -1, 1, 0, 0, 1, 0, 1, 1])/
    (-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 
     2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 
     16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 
     20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 8*n1*n3*n6 - 16*n3^2*n6 - 
     48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3) + 
   (n3*(4*d - 3*d^2 + 3*d*n3 - 8*n6 + 8*d*n6 - 6*n3*n6 - 4*n6^2)*
     j[p4a, 1 + n1, 0, 1 + n3, 0, 0, n6, -1, 1, 0, 1, 0, 0, 1, 1])/
    (-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 
     2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 
     16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 
     20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 8*n1*n3*n6 - 16*n3^2*n6 - 
     48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3) + 
   (3*n3*(4*d - 3*d^2 + 3*d*n3 - 8*n6 + 8*d*n6 - 6*n3*n6 - 4*n6^2)*
     j[p4a, 1 + n1, 0, 1 + n3, 0, 0, n6, -1, 1, 0, 1, 1, 0, 0, 1])/
    (-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 
     2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 
     16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 
     20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 8*n1*n3*n6 - 16*n3^2*n6 - 
     48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3) + 
   (n3*(-40 + 90*d - 65*d^2 + 15*d^3 - 8*n1 + 14*d*n1 - 6*d^2*n1 - 38*n3 + 
      59*d*n3 - 21*d^2*n3 - 6*n1*n3 + 6*d*n1*n3 - 6*n3^2 + 6*d*n3^2 - 68*n6 + 
      94*d*n6 - 31*d^2*n6 - 12*n1*n6 + 10*d*n1*n6 - 48*n3*n6 + 31*d*n3*n6 - 
      6*n1*n3*n6 - 6*n3^2*n6 - 32*n6^2 + 20*d*n6^2 - 4*n1*n6^2 - 10*n3*n6^2 - 
      4*n6^3)*j[p4a, 1 + n1, 0, 1 + n3, 0, 0, n6, -1, 1, 0, 1, 1, 0, 1, 0])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) - (2*n3*(4*d - 3*d^2 + 3*d*n3 - 8*n6 + 8*d*n6 - 
      6*n3*n6 - 4*n6^2)*j[p4a, 1 + n1, 0, 1 + n3, 0, 0, n6, 0, 1, 0, 1, 1, 
      -1, 0, 1])/(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
     19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
     20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
     59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
     8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 
     4*n6^3) - (2*n3*(-40 + 90*d - 65*d^2 + 15*d^3 - 8*n1 + 14*d*n1 - 
      6*d^2*n1 - 38*n3 + 59*d*n3 - 21*d^2*n3 - 6*n1*n3 + 6*d*n1*n3 - 6*n3^2 + 
      6*d*n3^2 - 68*n6 + 94*d*n6 - 31*d^2*n6 - 12*n1*n6 + 10*d*n1*n6 - 
      48*n3*n6 + 31*d*n3*n6 - 6*n1*n3*n6 - 6*n3^2*n6 - 32*n6^2 + 20*d*n6^2 - 
      4*n1*n6^2 - 10*n3*n6^2 - 4*n6^3)*j[p4a, 1 + n1, 0, 1 + n3, 0, 0, n6, 0, 
      1, 0, 1, 1, -1, 1, 0])/((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 
      35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 
      148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 
      168*n6 + 200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 
      62*d*n3*n6 - 8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 
      4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3)) + 
   (n3*(4*d - 3*d^2 + 3*d*n3 - 8*n6 + 8*d*n6 - 6*n3*n6 - 4*n6^2)*
     j[p4a, 1 + n1, 0, 1 + n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 0, 1])/
    (-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 
     2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 
     16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 
     20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 8*n1*n3*n6 - 16*n3^2*n6 - 
     48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3) + 
   (n3*(-40 + 90*d - 65*d^2 + 15*d^3 - 8*n1 + 14*d*n1 - 6*d^2*n1 - 38*n3 + 
      59*d*n3 - 21*d^2*n3 - 6*n1*n3 + 6*d*n1*n3 - 6*n3^2 + 6*d*n3^2 - 68*n6 + 
      94*d*n6 - 31*d^2*n6 - 12*n1*n6 + 10*d*n1*n6 - 48*n3*n6 + 31*d*n3*n6 - 
      6*n1*n3*n6 - 6*n3^2*n6 - 32*n6^2 + 20*d*n6^2 - 4*n1*n6^2 - 10*n3*n6^2 - 
      4*n6^3)*j[p4a, 1 + n1, 0, 1 + n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 1, 0])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) - ((1 + n1)*(40 - 78*d + 52*d^2 - 12*d^3 + 8*n1 - 
      10*d*n1 + 3*d^2*n1 + 38*n3 - 50*d*n3 + 18*d^2*n3 + 6*n1*n3 - 
      3*d*n1*n3 + 6*n3^2 - 6*d*n3^2 + 44*n6 - 62*d*n6 + 23*d^2*n6 + 4*n1*n6 - 
      2*d*n1*n6 + 30*n3*n6 - 25*d*n3*n6 + 6*n3^2*n6 + 20*n6^2 - 16*d*n6^2 + 
      10*n3*n6^2 + 4*n6^3)*j[p4a, 2 + n1, -1, n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 
      0, 1])/((3 - d + n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 
      60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 
      49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 
      200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((1 + n1)*(40 - 90*d + 65*d^2 - 15*d^3 + 8*n1 - 
      14*d*n1 + 6*d^2*n1 + 38*n3 - 59*d*n3 + 21*d^2*n3 + 6*n1*n3 - 
      6*d*n1*n3 + 6*n3^2 - 6*d*n3^2 + 68*n6 - 94*d*n6 + 31*d^2*n6 + 
      12*n1*n6 - 10*d*n1*n6 + 48*n3*n6 - 31*d*n3*n6 + 6*n1*n3*n6 + 
      6*n3^2*n6 + 32*n6^2 - 20*d*n6^2 + 4*n1*n6^2 + 10*n3*n6^2 + 4*n6^3)*
     j[p4a, 2 + n1, 0, n3, 0, -1, n6, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((3 - d + n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((1 + n1)*(40 - 78*d + 52*d^2 - 12*d^3 + 8*n1 - 
      10*d*n1 + 3*d^2*n1 + 38*n3 - 50*d*n3 + 18*d^2*n3 + 6*n1*n3 - 
      3*d*n1*n3 + 6*n3^2 - 6*d*n3^2 + 44*n6 - 62*d*n6 + 23*d^2*n6 + 4*n1*n6 - 
      2*d*n1*n6 + 30*n3*n6 - 25*d*n3*n6 + 6*n3^2*n6 + 20*n6^2 - 16*d*n6^2 + 
      10*n3*n6^2 + 4*n6^3)*j[p4a, 2 + n1, 0, n3, 0, 0, n6, 0, 0, 0, 1, 1, 0, 
      1, 1])/((3 - d + n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 
      60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 
      49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 
      200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) - ((1 + n1)*(40 - 90*d + 65*d^2 - 15*d^3 + 8*n1 - 
      14*d*n1 + 6*d^2*n1 + 38*n3 - 59*d*n3 + 21*d^2*n3 + 6*n1*n3 - 
      6*d*n1*n3 + 6*n3^2 - 6*d*n3^2 + 68*n6 - 94*d*n6 + 31*d^2*n6 + 
      12*n1*n6 - 10*d*n1*n6 + 48*n3*n6 - 31*d*n3*n6 + 6*n1*n3*n6 + 
      6*n3^2*n6 + 32*n6^2 - 20*d*n6^2 + 4*n1*n6^2 + 10*n3*n6^2 + 4*n6^3)*
     j[p4a, 2 + n1, 0, n3, 0, 0, n6, 0, 1, -1, 1, 1, 0, 0, 1])/
    ((3 - d + n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((1 + n1)*(40 - 78*d + 52*d^2 - 12*d^3 + 8*n1 - 
      10*d*n1 + 3*d^2*n1 + 38*n3 - 50*d*n3 + 18*d^2*n3 + 6*n1*n3 - 
      3*d*n1*n3 + 6*n3^2 - 6*d*n3^2 + 44*n6 - 62*d*n6 + 23*d^2*n6 + 4*n1*n6 - 
      2*d*n1*n6 + 30*n3*n6 - 25*d*n3*n6 + 6*n3^2*n6 + 20*n6^2 - 16*d*n6^2 + 
      10*n3*n6^2 + 4*n6^3)*j[p4a, 2 + n1, 0, n3, 0, 0, n6, 0, 1, 0, 0, 1, 0, 
      1, 1])/((3 - d + n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 
      60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 
      49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 
      200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) - ((1 + n1)*(40 - 78*d + 52*d^2 - 12*d^3 + 8*n1 - 
      10*d*n1 + 3*d^2*n1 + 38*n3 - 50*d*n3 + 18*d^2*n3 + 6*n1*n3 - 
      3*d*n1*n3 + 6*n3^2 - 6*d*n3^2 + 44*n6 - 62*d*n6 + 23*d^2*n6 + 4*n1*n6 - 
      2*d*n1*n6 + 30*n3*n6 - 25*d*n3*n6 + 6*n3^2*n6 + 20*n6^2 - 16*d*n6^2 + 
      10*n3*n6^2 + 4*n6^3)*j[p4a, 2 + n1, 0, n3, 0, 0, n6, 0, 1, 0, 1, 0, 0, 
      1, 1])/((3 - d + n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 
      60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 
      49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 
      200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n4 == 0 && n5 == 0 && n6 == 1 && n7 == 0 && n9 == 0 && n8 != n10 -> 
  ((6 - 5*d - 4*n10 + 4*d*n10 - 2*n3 + 5*d*n3 - 4*n10*n3 - 4*n3^2 + 2*n8 + 
      d*n8 - 4*n10*n8 - 4*n3*n8)*j[p4a, -1, 0, n3, 0, 0, 0, 0, n8, 0, n10, 2, 
      0, 1, 1])/(2*(-2 + d)*(n10 - n8)*(-1 + d - n3 - n8)) + 
   (n8*(24 - 50*d + 25*d^2 + 28*n10 - 26*d*n10 + 52*n3 - 50*d*n3 + 
      24*n10*n3 + 24*n3^2 + 24*n8 - 24*d*n8 + 24*n10*n8 + 24*n3*n8)*
     j[p4a, -1, 0, n3, 0, 0, 0, 0, 1 + n8, 0, n10, 1, 0, 1, 1])/
    (8*(-1 + d - n10 - n3)*(n10 - n8)*(-1 + d - n3 - n8)) + 
   ((-24 + 80*d - 80*d^2 + 25*d^3 - 48*n10 + 92*d*n10 - 42*d^2*n10 - 
      16*n10^2 + 16*d*n10^2 - 88*n3 + 160*d*n3 - 70*d^2*n3 - 88*n10*n3 + 
      76*d*n10*n3 - 16*n10^2*n3 - 72*n3^2 + 60*d*n3^2 - 32*n10*n3^2 - 
      16*n3^3 - 40*n8 + 68*d*n8 - 28*d^2*n8 - 56*n10*n8 + 44*d*n10*n8 - 
      16*n10^2*n8 - 56*n3*n8 + 44*d*n3*n8 - 32*n10*n3*n8 - 16*n3^2*n8)*
     j[p4a, -1, 0, n3, 0, 0, 1, 0, n8, 0, n10, 1, 0, 2, 0])/
    (8*(-2 + d)*(-1 + d - n10 - n3)*(n10 - n8)*(-1 + d - n3 - n8)) + 
   (n10*(-6 + 5*d - 4*n3 - 4*n8)*j[p4a, -1, 0, n3, 0, 0, 1, 0, n8, 0, 
      1 + n10, 1, 0, 0, 1])/(4*(n10 - n8)*(1 - d + n3 + n8)) + 
   (n3*(-6*d + 5*d^2 + 8*n10 - 8*d*n10 + 12*n3 - 14*d*n3 + 8*n10*n3 + 
      8*n3^2 + 4*n8 - 6*d*n8 + 8*n10*n8 + 8*n3*n8)*j[p4a, -1, 0, 1 + n3, 0, 
      0, 1, 0, n8, 0, n10, 1, 0, 0, 1])/(8*(1 - d + n10 + n3)*(-n10 + n8)*
     (1 - d + n3 + n8)) - (n3*(24 - 50*d + 25*d^2 + 28*n10 - 26*d*n10 + 
      52*n3 - 50*d*n3 + 24*n10*n3 + 24*n3^2 + 24*n8 - 24*d*n8 + 24*n10*n8 + 
      24*n3*n8)*j[p4a, -1, 0, 1 + n3, 0, 0, 1, 0, n8, 0, n10, 1, 0, 1, 0])/
    (8*(1 - d + n10 + n3)*(-n10 + n8)*(1 - d + n3 + n8)) - 
   (n10*(-24 + 50*d - 25*d^2 - 28*n10 + 26*d*n10 - 52*n3 + 50*d*n3 - 
      24*n10*n3 - 24*n3^2 - 24*n8 + 24*d*n8 - 24*n10*n8 - 24*n3*n8)*
     j[p4a, 0, -1, n3, 0, 0, 0, 0, n8, 0, 1 + n10, 1, 0, 1, 1])/
    (8*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((-12 + 34*d - 32*d^2 + 10*d^3 - 16*n10 + 34*d*n10 - 17*d^2*n10 - 
      8*n10^2 + 8*d*n10^2 - 32*n3 + 60*d*n3 - 28*d^2*n3 - 36*n10*n3 + 
      34*d*n10*n3 - 8*n10^2*n3 - 28*n3^2 + 26*d*n3^2 - 16*n10*n3^2 - 8*n3^3 - 
      16*n8 + 26*d*n8 - 11*d^2*n8 - 20*n10*n8 + 18*d*n10*n8 - 8*n10^2*n8 - 
      20*n3*n8 + 18*d*n3*n8 - 16*n10*n3*n8 - 8*n3^2*n8)*
     j[p4a, 0, -1, n3, 0, 0, 1, 0, n8, 0, n10, 1, 0, 0, 2])/
    (4*(-2 + d)*(-1 + d - n10 - n3)*(n10 - n8)*(-1 + d - n3 - n8)) - 
   ((-2 + d)*n10*(-6 + 5*d - 2*n10 - 4*n3 - 2*n8)*j[p4a, 0, -1, n3, 0, 0, 1, 
      0, n8, 0, 1 + n10, 0, 0, 1, 1])/(8*(-1 + d - n10 - n3)*
     (-1 + d - n3 - n8)*(-n10 + n8)) - 
   (n10*(-6 + 5*d - 4*n3 - 4*n8)*j[p4a, 0, -1, n3, 0, 0, 1, 0, n8, 0, 
      1 + n10, 1, 0, 0, 1])/(4*(n10 - n8)*(1 - d + n3 + n8)) - 
   (n8*(-6*d + 5*d^2 + 8*n10 - 8*d*n10 + 12*n3 - 14*d*n3 + 8*n10*n3 + 
      8*n3^2 + 4*n8 - 6*d*n8 + 8*n10*n8 + 8*n3*n8)*j[p4a, 0, -1, n3, 0, 0, 1, 
      0, 1 + n8, 0, n10, 0, 0, 1, 1])/(8*(-1 + d - n10 - n3)*(n10 - n8)*
     (-1 + d - n3 - n8)) - (n8*(-6*d + 5*d^2 + 8*n10 - 8*d*n10 + 12*n3 - 
      14*d*n3 + 8*n10*n3 + 8*n3^2 + 4*n8 - 6*d*n8 + 8*n10*n8 + 8*n3*n8)*
     j[p4a, 0, -1, n3, 0, 0, 1, 0, 1 + n8, 0, n10, 1, 0, 0, 1])/
    (8*(-1 + d - n10 - n3)*(n10 - n8)*(-1 + d - n3 - n8)) + 
   ((-24 + 80*d - 80*d^2 + 25*d^3 - 48*n10 + 92*d*n10 - 42*d^2*n10 - 
      16*n10^2 + 16*d*n10^2 - 88*n3 + 160*d*n3 - 70*d^2*n3 - 88*n10*n3 + 
      76*d*n10*n3 - 16*n10^2*n3 - 72*n3^2 + 60*d*n3^2 - 32*n10*n3^2 - 
      16*n3^3 - 40*n8 + 68*d*n8 - 28*d^2*n8 - 56*n10*n8 + 44*d*n10*n8 - 
      16*n10^2*n8 - 56*n3*n8 + 44*d*n3*n8 - 32*n10*n3*n8 - 16*n3^2*n8)*
     j[p4a, 0, -1, n3, 0, 0, 2, 0, n8, 0, n10, 1, 0, 0, 1])/
    (8*(-2 + d)*(-1 + d - n10 - n3)*(n10 - n8)*(-1 + d - n3 - n8)) + 
   ((-24 + 80*d - 80*d^2 + 25*d^3 - 48*n10 + 92*d*n10 - 42*d^2*n10 - 
      16*n10^2 + 16*d*n10^2 - 88*n3 + 160*d*n3 - 70*d^2*n3 - 88*n10*n3 + 
      76*d*n10*n3 - 16*n10^2*n3 - 72*n3^2 + 60*d*n3^2 - 32*n10*n3^2 - 
      16*n3^3 - 40*n8 + 68*d*n8 - 28*d^2*n8 - 56*n10*n8 + 44*d*n10*n8 - 
      16*n10^2*n8 - 56*n3*n8 + 44*d*n3*n8 - 32*n10*n3*n8 - 16*n3^2*n8)*
     j[p4a, 0, -1, n3, 0, 0, 2, 0, n8, 0, n10, 1, 0, 1, 0])/
    (8*(-2 + d)*(-1 + d - n10 - n3)*(n10 - n8)*(-1 + d - n3 - n8)) + 
   (n3*(-6*d + 5*d^2 + 8*n10 - 8*d*n10 + 12*n3 - 14*d*n3 + 8*n10*n3 + 
      8*n3^2 + 4*n8 - 6*d*n8 + 8*n10*n8 + 8*n3*n8)*j[p4a, 0, -1, 1 + n3, 0, 
      0, 1, 0, n8, 0, n10, 1, 0, 0, 1])/(8*(1 - d + n10 + n3)*(-n10 + n8)*
     (1 - d + n3 + n8)) - (n3*(24 - 50*d + 25*d^2 + 28*n10 - 26*d*n10 + 
      52*n3 - 50*d*n3 + 24*n10*n3 + 24*n3^2 + 24*n8 - 24*d*n8 + 24*n10*n8 + 
      24*n3*n8)*j[p4a, 0, -1, 1 + n3, 0, 0, 1, 0, n8, 0, n10, 1, 0, 1, 0])/
    (8*(1 - d + n10 + n3)*(-n10 + n8)*(1 - d + n3 + n8)) + 
   ((84 - 220*d + 191*d^2 - 55*d^3 + 88*n10 - 148*d*n10 + 62*d^2*n10 + 
      8*n10^2 - 8*d*n10^2 + 188*n3 - 324*d*n3 + 139*d^2*n3 + 120*n10*n3 - 
      100*d*n10*n3 + 8*n10^2*n3 + 136*n3^2 - 116*d*n3^2 + 40*n10*n3^2 + 
      32*n3^3 + 100*n8 - 176*d*n8 + 77*d^2*n8 + 104*n10*n8 - 84*d*n10*n8 + 
      8*n10^2*n8 + 152*n3*n8 - 132*d*n3*n8 + 64*n10*n3*n8 + 56*n3^2*n8 + 
      24*n8^2 - 24*d*n8^2 + 24*n10*n8^2 + 24*n3*n8^2)*
     j[p4a, 0, 0, -1 + n3, 0, 0, 0, 0, n8, 0, n10, 1, 0, 1, 2])/
    (8*(-2 + d)*(-1 + d - n10 - n3)*(n10 - n8)*(-1 + d - n3 - n8)) - 
   (n10*(-24 + 50*d - 25*d^2 - 28*n10 + 26*d*n10 - 52*n3 + 50*d*n3 - 
      24*n10*n3 - 24*n3^2 - 24*n8 + 24*d*n8 - 24*n10*n8 - 24*n3*n8)*
     j[p4a, 0, 0, -1 + n3, 0, 0, 0, 0, n8, 0, 1 + n10, 1, 0, 1, 1])/
    (8*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((60 - 152*d + 127*d^2 - 35*d^3 + 56*n10 - 80*d*n10 + 28*d^2*n10 - 
      8*n10^2 + 8*d*n10^2 + 124*n3 - 204*d*n3 + 83*d^2*n3 + 48*n10*n3 - 
      32*d*n10*n3 - 8*n10^2*n3 + 80*n3^2 - 64*d*n3^2 + 8*n10*n3^2 + 16*n3^3 + 
      68*n8 - 124*d*n8 + 55*d^2*n8 + 64*n10*n8 - 48*d*n10*n8 - 8*n10^2*n8 + 
      112*n3*n8 - 96*d*n3*n8 + 32*n10*n3*n8 + 40*n3^2*n8 + 24*n8^2 - 
      24*d*n8^2 + 24*n10*n8^2 + 24*n3*n8^2)*j[p4a, 0, 0, -1 + n3, 0, 0, 1, 0, 
      n8, 0, n10, 1, 0, 0, 2])/(8*(-2 + d)*(-1 + d - n10 - n3)*(n10 - n8)*
     (-1 + d - n3 - n8)) + ((16 - 24*d + 9*d^2 + 8*n10 - 6*d*n10 + 16*n3 - 
      12*d*n3 + 4*n10*n3 + 4*n3^2 + 8*n8 - 6*d*n8 + 4*n10*n8 + 4*n3*n8)*
     j[p4a, 0, 0, -1 + n3, 0, 0, 1, 0, n8, 0, n10, 1, 0, 1, 1])/
    (4*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)) - 
   ((-2 + d)*n10*(-6 + 5*d - 2*n10 - 4*n3 - 2*n8)*j[p4a, 0, 0, -1 + n3, 0, 0, 
      1, 0, n8, 0, 1 + n10, 0, 0, 1, 1])/(8*(-1 + d - n10 - n3)*
     (-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((-84 + 220*d - 191*d^2 + 55*d^3 - 88*n10 + 148*d*n10 - 62*d^2*n10 - 
      8*n10^2 + 8*d*n10^2 - 188*n3 + 324*d*n3 - 139*d^2*n3 - 120*n10*n3 + 
      100*d*n10*n3 - 8*n10^2*n3 - 136*n3^2 + 116*d*n3^2 - 40*n10*n3^2 - 
      32*n3^3 - 100*n8 + 176*d*n8 - 77*d^2*n8 - 104*n10*n8 + 84*d*n10*n8 - 
      8*n10^2*n8 - 152*n3*n8 + 132*d*n3*n8 - 64*n10*n3*n8 - 56*n3^2*n8 - 
      24*n8^2 + 24*d*n8^2 - 24*n10*n8^2 - 24*n3*n8^2)*
     j[p4a, 0, 0, n3, -1, 0, 0, 0, n8, 0, n10, 1, 0, 1, 2])/
    (8*(-2 + d)*(-1 + d - n10 - n3)*(n10 - n8)*(-1 + d - n3 - n8)) + 
   ((-84 + 220*d - 191*d^2 + 55*d^3 - 88*n10 + 148*d*n10 - 62*d^2*n10 - 
      8*n10^2 + 8*d*n10^2 - 188*n3 + 324*d*n3 - 139*d^2*n3 - 120*n10*n3 + 
      100*d*n10*n3 - 8*n10^2*n3 - 136*n3^2 + 116*d*n3^2 - 40*n10*n3^2 - 
      32*n3^3 - 100*n8 + 176*d*n8 - 77*d^2*n8 - 104*n10*n8 + 84*d*n10*n8 - 
      8*n10^2*n8 - 152*n3*n8 + 132*d*n3*n8 - 64*n10*n3*n8 - 56*n3^2*n8 - 
      24*n8^2 + 24*d*n8^2 - 24*n10*n8^2 - 24*n3*n8^2)*
     j[p4a, 0, 0, n3, -1, 0, 1, 0, n8, 0, n10, 1, 0, 0, 2])/
    (8*(-2 + d)*(-1 + d - n10 - n3)*(n10 - n8)*(-1 + d - n3 - n8)) - 
   (n8*(24 - 50*d + 25*d^2 + 28*n10 - 26*d*n10 + 52*n3 - 50*d*n3 + 
      24*n10*n3 + 24*n3^2 + 24*n8 - 24*d*n8 + 24*n10*n8 + 24*n3*n8)*
     j[p4a, 0, 0, n3, -1, 0, 1, 0, 1 + n8, 0, n10, 0, 0, 1, 1])/
    (8*(-1 + d - n10 - n3)*(n10 - n8)*(-1 + d - n3 - n8)) - 
   (n8*(24 - 50*d + 25*d^2 + 28*n10 - 26*d*n10 + 52*n3 - 50*d*n3 + 
      24*n10*n3 + 24*n3^2 + 24*n8 - 24*d*n8 + 24*n10*n8 + 24*n3*n8)*
     j[p4a, 0, 0, n3, -1, 0, 1, 0, 1 + n8, 0, n10, 1, 0, 0, 1])/
    (8*(-1 + d - n10 - n3)*(n10 - n8)*(-1 + d - n3 - n8)) + 
   ((-60 + 176*d - 165*d^2 + 50*d^3 - 80*n10 + 140*d*n10 - 60*d^2*n10 - 
      8*n10^2 + 8*d*n10^2 - 172*n3 + 308*d*n3 - 135*d^2*n3 - 120*n10*n3 + 
      100*d*n10*n3 - 8*n10^2*n3 - 136*n3^2 + 116*d*n3^2 - 40*n10*n3^2 - 
      32*n3^3 - 92*n8 + 168*d*n8 - 75*d^2*n8 - 104*n10*n8 + 84*d*n10*n8 - 
      8*n10^2*n8 - 152*n3*n8 + 132*d*n3*n8 - 64*n10*n3*n8 - 56*n3^2*n8 - 
      24*n8^2 + 24*d*n8^2 - 24*n10*n8^2 - 24*n3*n8^2)*
     j[p4a, 0, 0, n3, -1, 0, 2, 0, n8, 0, n10, 1, 0, 0, 1])/
    (8*(-2 + d)*(-1 + d - n10 - n3)*(n10 - n8)*(-1 + d - n3 - n8)) + 
   ((-60 + 176*d - 165*d^2 + 50*d^3 - 80*n10 + 140*d*n10 - 60*d^2*n10 - 
      8*n10^2 + 8*d*n10^2 - 172*n3 + 308*d*n3 - 135*d^2*n3 - 120*n10*n3 + 
      100*d*n10*n3 - 8*n10^2*n3 - 136*n3^2 + 116*d*n3^2 - 40*n10*n3^2 - 
      32*n3^3 - 92*n8 + 168*d*n8 - 75*d^2*n8 - 104*n10*n8 + 84*d*n10*n8 - 
      8*n10^2*n8 - 152*n3*n8 + 132*d*n3*n8 - 64*n10*n3*n8 - 56*n3^2*n8 - 
      24*n8^2 + 24*d*n8^2 - 24*n10*n8^2 - 24*n3*n8^2)*
     j[p4a, 0, 0, n3, -1, 0, 2, 0, n8, 0, n10, 1, 0, 1, 0])/
    (8*(-2 + d)*(-1 + d - n10 - n3)*(n10 - n8)*(-1 + d - n3 - n8)) + 
   ((12 - 34*d + 32*d^2 - 10*d^3 + 16*n10 - 34*d*n10 + 17*d^2*n10 + 8*n10^2 - 
      8*d*n10^2 + 32*n3 - 60*d*n3 + 28*d^2*n3 + 36*n10*n3 - 34*d*n10*n3 + 
      8*n10^2*n3 + 28*n3^2 - 26*d*n3^2 + 16*n10*n3^2 + 8*n3^3 + 16*n8 - 
      26*d*n8 + 11*d^2*n8 + 20*n10*n8 - 18*d*n10*n8 + 8*n10^2*n8 + 20*n3*n8 - 
      18*d*n3*n8 + 16*n10*n3*n8 + 8*n3^2*n8)*j[p4a, 0, 0, n3, 0, -1, 0, 0, 
      n8, 0, n10, 1, 0, 1, 2])/(4*(-2 + d)*(-1 + d - n10 - n3)*(n10 - n8)*
     (-1 + d - n3 - n8)) + ((12 - 34*d + 32*d^2 - 10*d^3 + 16*n10 - 
      34*d*n10 + 17*d^2*n10 + 8*n10^2 - 8*d*n10^2 + 32*n3 - 60*d*n3 + 
      28*d^2*n3 + 36*n10*n3 - 34*d*n10*n3 + 8*n10^2*n3 + 28*n3^2 - 
      26*d*n3^2 + 16*n10*n3^2 + 8*n3^3 + 16*n8 - 26*d*n8 + 11*d^2*n8 + 
      20*n10*n8 - 18*d*n10*n8 + 8*n10^2*n8 + 20*n3*n8 - 18*d*n3*n8 + 
      16*n10*n3*n8 + 8*n3^2*n8)*j[p4a, 0, 0, n3, 0, -1, 1, 0, n8, 0, n10, 1, 
      0, 0, 2])/(4*(-2 + d)*(-1 + d - n10 - n3)*(n10 - n8)*
     (-1 + d - n3 - n8)) + ((24 - 80*d + 80*d^2 - 25*d^3 + 48*n10 - 
      92*d*n10 + 42*d^2*n10 + 16*n10^2 - 16*d*n10^2 + 88*n3 - 160*d*n3 + 
      70*d^2*n3 + 88*n10*n3 - 76*d*n10*n3 + 16*n10^2*n3 + 72*n3^2 - 
      60*d*n3^2 + 32*n10*n3^2 + 16*n3^3 + 40*n8 - 68*d*n8 + 28*d^2*n8 + 
      56*n10*n8 - 44*d*n10*n8 + 16*n10^2*n8 + 56*n3*n8 - 44*d*n3*n8 + 
      32*n10*n3*n8 + 16*n3^2*n8)*j[p4a, 0, 0, n3, 0, -1, 2, 0, n8, 0, n10, 1, 
      0, 0, 1])/(8*(-2 + d)*(-1 + d - n10 - n3)*(n10 - n8)*
     (-1 + d - n3 - n8)) + ((24 - 80*d + 80*d^2 - 25*d^3 + 48*n10 - 
      92*d*n10 + 42*d^2*n10 + 16*n10^2 - 16*d*n10^2 + 88*n3 - 160*d*n3 + 
      70*d^2*n3 + 88*n10*n3 - 76*d*n10*n3 + 16*n10^2*n3 + 72*n3^2 - 
      60*d*n3^2 + 32*n10*n3^2 + 16*n3^3 + 40*n8 - 68*d*n8 + 28*d^2*n8 + 
      56*n10*n8 - 44*d*n10*n8 + 16*n10^2*n8 + 56*n3*n8 - 44*d*n3*n8 + 
      32*n10*n3*n8 + 16*n3^2*n8)*j[p4a, 0, 0, n3, 0, -1, 2, 0, n8, 0, n10, 1, 
      0, 1, 0])/(8*(-2 + d)*(-1 + d - n10 - n3)*(n10 - n8)*
     (-1 + d - n3 - n8)) + (n10*(-24 + 50*d - 25*d^2 - 28*n10 + 26*d*n10 - 
      52*n3 + 50*d*n3 - 24*n10*n3 - 24*n3^2 - 24*n8 + 24*d*n8 - 24*n10*n8 - 
      24*n3*n8)*j[p4a, 0, 0, n3, 0, 0, 0, -1, n8, 0, 1 + n10, 1, 0, 1, 1])/
    (8*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((-6 + 5*d + 4*n10 - 4*d*n10 + 2*n3 - 5*d*n3 + 4*n10*n3 + 4*n3^2 - 2*n8 - 
      d*n8 + 4*n10*n8 + 4*n3*n8)*j[p4a, 0, 0, n3, 0, 0, 0, 0, -1 + n8, 0, 
      n10, 2, 0, 1, 1])/(2*(-2 + d)*(n10 - n8)*(-1 + d - n3 - n8)) + 
   (n10*(-24 + 50*d - 25*d^2 - 28*n10 + 26*d*n10 - 52*n3 + 50*d*n3 - 
      24*n10*n3 - 24*n3^2 - 24*n8 + 24*d*n8 - 24*n10*n8 - 24*n3*n8)*
     j[p4a, 0, 0, n3, 0, 0, 0, 0, -1 + n8, 0, 1 + n10, 1, 0, 1, 1])/
    (8*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((-48 + 148*d - 144*d^2 + 45*d^3 - 68*n10 + 124*d*n10 - 55*d^2*n10 - 
      8*n10^2 + 8*d*n10^2 - 152*n3 + 280*d*n3 - 126*d^2*n3 - 112*n10*n3 + 
      96*d*n10*n3 - 8*n10^2*n3 - 128*n3^2 + 112*d*n3^2 - 40*n10*n3^2 - 
      32*n3^3 - 84*n8 + 156*d*n8 - 71*d^2*n8 - 96*n10*n8 + 80*d*n10*n8 - 
      8*n10^2*n8 - 144*n3*n8 + 128*d*n3*n8 - 64*n10*n3*n8 - 56*n3^2*n8 - 
      24*n8^2 + 24*d*n8^2 - 24*n10*n8^2 - 24*n3*n8^2)*
     j[p4a, 0, 0, n3, 0, 0, 0, 0, n8, -1, n10, 1, 0, 1, 2])/
    (8*(-2 + d)*(-1 + d - n10 - n3)*(n10 - n8)*(-1 + d - n3 - n8)) + 
   ((60 - 176*d + 171*d^2 - 55*d^3 + 116*n10 - 248*d*n10 + 157*d^2*n10 - 
      25*d^3*n10 + 56*n10^2 - 80*d*n10^2 + 26*d^2*n10^2 + 172*n3 - 332*d*n3 + 
      159*d^2*n3 + 216*n10*n3 - 256*d*n10*n3 + 50*d^2*n10*n3 + 48*n10^2*n3 - 
      24*d*n10^2*n3 + 160*n3^2 - 152*d*n3^2 + 96*n10*n3^2 - 24*d*n10*n3^2 + 
      48*n3^3 + 200*n8 - 456*d*n8 + 302*d^2*n8 - 50*d^3*n8 + 272*n10*n8 - 
      336*d*n10*n8 + 76*d^2*n10*n8 + 48*n10^2*n8 - 24*d*n10^2*n8 + 
      416*n3*n8 - 504*d*n3*n8 + 100*d^2*n3*n8 + 240*n10*n3*n8 - 
      72*d*n10*n3*n8 + 192*n3^2*n8 - 48*d*n3^2*n8 + 144*n8^2 - 192*d*n8^2 + 
      48*d^2*n8^2 + 144*n10*n8^2 - 48*d*n10*n8^2 + 144*n3*n8^2 - 
      48*d*n3*n8^2)*j[p4a, 0, 0, n3, 0, 0, 0, 0, n8, 0, n10, 1, 0, 1, 1])/
    (8*(-2 + d)*(-1 + d - n10 - n3)*(n10 - n8)*(-1 + d - n3 - n8)) + 
   ((48 - 148*d + 144*d^2 - 45*d^3 + 68*n10 - 124*d*n10 + 55*d^2*n10 + 
      8*n10^2 - 8*d*n10^2 + 152*n3 - 280*d*n3 + 126*d^2*n3 + 112*n10*n3 - 
      96*d*n10*n3 + 8*n10^2*n3 + 128*n3^2 - 112*d*n3^2 + 40*n10*n3^2 + 
      32*n3^3 + 84*n8 - 156*d*n8 + 71*d^2*n8 + 96*n10*n8 - 80*d*n10*n8 + 
      8*n10^2*n8 + 144*n3*n8 - 128*d*n3*n8 + 64*n10*n3*n8 + 56*n3^2*n8 + 
      24*n8^2 - 24*d*n8^2 + 24*n10*n8^2 + 24*n3*n8^2)*
     j[p4a, 0, 0, n3, 0, 0, 0, 0, n8, 0, n10, 1, 0, 1, 2])/
    (8*(-2 + d)*(-1 + d - n10 - n3)*(n10 - n8)*(-1 + d - n3 - n8)) + 
   ((24 - 80*d + 80*d^2 - 25*d^3 + 48*n10 - 92*d*n10 + 42*d^2*n10 + 
      16*n10^2 - 16*d*n10^2 + 88*n3 - 160*d*n3 + 70*d^2*n3 + 88*n10*n3 - 
      76*d*n10*n3 + 16*n10^2*n3 + 72*n3^2 - 60*d*n3^2 + 32*n10*n3^2 + 
      16*n3^3 + 40*n8 - 68*d*n8 + 28*d^2*n8 + 56*n10*n8 - 44*d*n10*n8 + 
      16*n10^2*n8 + 56*n3*n8 - 44*d*n3*n8 + 32*n10*n3*n8 + 16*n3^2*n8)*
     j[p4a, 0, 0, n3, 0, 0, 0, 0, n8, 0, n10, 2, -1, 1, 1])/
    (8*(-2 + d)*(-1 + d - n10 - n3)*(n10 - n8)*(-1 + d - n3 - n8)) + 
   ((-24 + 80*d - 80*d^2 + 25*d^3 - 48*n10 + 92*d*n10 - 42*d^2*n10 - 
      16*n10^2 + 16*d*n10^2 - 88*n3 + 160*d*n3 - 70*d^2*n3 - 88*n10*n3 + 
      76*d*n10*n3 - 16*n10^2*n3 - 72*n3^2 + 60*d*n3^2 - 32*n10*n3^2 - 
      16*n3^3 - 40*n8 + 68*d*n8 - 28*d^2*n8 - 56*n10*n8 + 44*d*n10*n8 - 
      16*n10^2*n8 - 56*n3*n8 + 44*d*n3*n8 - 32*n10*n3*n8 - 16*n3^2*n8)*
     j[p4a, 0, 0, n3, 0, 0, 0, 0, n8, 0, n10, 2, 0, 1, 1])/
    (8*(-2 + d)*(-1 + d - n10 - n3)*(n10 - n8)*(-1 + d - n3 - n8)) - 
   (n10*(-24 + 50*d - 25*d^2 - 28*n10 + 26*d*n10 - 52*n3 + 50*d*n3 - 
      24*n10*n3 - 24*n3^2 - 24*n8 + 24*d*n8 - 24*n10*n8 - 24*n3*n8)*
     j[p4a, 0, 0, n3, 0, 0, 0, 0, n8, 0, 1 + n10, 1, -1, 1, 1])/
    (8*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   (n10*(-24 + 50*d - 25*d^2 - 28*n10 + 26*d*n10 - 52*n3 + 50*d*n3 - 
      24*n10*n3 - 24*n3^2 - 24*n8 + 24*d*n8 - 24*n10*n8 - 24*n3*n8)*
     j[p4a, 0, 0, n3, 0, 0, 0, 0, n8, 0, 1 + n10, 1, 0, 1, 1])/
    (8*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   (n8*(24 - 50*d + 25*d^2 + 28*n10 - 26*d*n10 + 52*n3 - 50*d*n3 + 
      24*n10*n3 + 24*n3^2 + 24*n8 - 24*d*n8 + 24*n10*n8 + 24*n3*n8)*
     j[p4a, 0, 0, n3, 0, 0, 0, 0, 1 + n8, 0, n10, 1, -1, 1, 1])/
    (8*(-1 + d - n10 - n3)*(n10 - n8)*(-1 + d - n3 - n8)) + 
   ((12 - 34*d + 32*d^2 - 10*d^3 + 16*n10 - 34*d*n10 + 17*d^2*n10 + 8*n10^2 - 
      8*d*n10^2 + 32*n3 - 60*d*n3 + 28*d^2*n3 + 36*n10*n3 - 34*d*n10*n3 + 
      8*n10^2*n3 + 28*n3^2 - 26*d*n3^2 + 16*n10*n3^2 + 8*n3^3 + 16*n8 - 
      26*d*n8 + 11*d^2*n8 + 20*n10*n8 - 18*d*n10*n8 + 8*n10^2*n8 + 20*n3*n8 - 
      18*d*n3*n8 + 16*n10*n3*n8 + 8*n3^2*n8)*j[p4a, 0, 0, n3, 0, 0, 1, -1, 
      n8, 0, n10, 1, 0, 0, 2])/(4*(-2 + d)*(-1 + d - n10 - n3)*(n10 - n8)*
     (-1 + d - n3 - n8)) + ((-2 + d)*n10*(-6 + 5*d - 2*n10 - 4*n3 - 2*n8)*
     j[p4a, 0, 0, n3, 0, 0, 1, -1, n8, 0, 1 + n10, 0, 0, 1, 1])/
    (8*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((-2 + d)*n10*(-6 + 5*d - 2*n10 - 4*n3 - 2*n8)*j[p4a, 0, 0, n3, 0, 0, 1, 
      -1, n8, 0, 1 + n10, 1, 0, 0, 1])/(8*(-1 + d - n10 - n3)*
     (-1 + d - n3 - n8)*(-n10 + n8)) + 
   (n8*(-6*d + 5*d^2 + 8*n10 - 8*d*n10 + 12*n3 - 14*d*n3 + 8*n10*n3 + 
      8*n3^2 + 4*n8 - 6*d*n8 + 8*n10*n8 + 8*n3*n8)*j[p4a, 0, 0, n3, 0, 0, 1, 
      -1, 1 + n8, 0, n10, 0, 0, 1, 1])/(8*(-1 + d - n10 - n3)*(n10 - n8)*
     (-1 + d - n3 - n8)) + (n8*(-6*d + 5*d^2 + 8*n10 - 8*d*n10 + 12*n3 - 
      14*d*n3 + 8*n10*n3 + 8*n3^2 + 4*n8 - 6*d*n8 + 8*n10*n8 + 8*n3*n8)*
     j[p4a, 0, 0, n3, 0, 0, 1, -1, 1 + n8, 0, n10, 1, 0, 0, 1])/
    (8*(-1 + d - n10 - n3)*(n10 - n8)*(-1 + d - n3 - n8)) + 
   ((12 - 34*d + 32*d^2 - 10*d^3 + 16*n10 - 34*d*n10 + 17*d^2*n10 + 8*n10^2 - 
      8*d*n10^2 + 32*n3 - 60*d*n3 + 28*d^2*n3 + 36*n10*n3 - 34*d*n10*n3 + 
      8*n10^2*n3 + 28*n3^2 - 26*d*n3^2 + 16*n10*n3^2 + 8*n3^3 + 16*n8 - 
      26*d*n8 + 11*d^2*n8 + 20*n10*n8 - 18*d*n10*n8 + 8*n10^2*n8 + 20*n3*n8 - 
      18*d*n3*n8 + 16*n10*n3*n8 + 8*n3^2*n8)*j[p4a, 0, 0, n3, 0, 0, 1, 0, 
      -1 + n8, 0, n10, 1, 0, 0, 2])/(4*(-2 + d)*(-1 + d - n10 - n3)*
     (n10 - n8)*(-1 + d - n3 - n8)) + 
   ((-24 + 38*d - 15*d^2 - 8*n10 + 6*d*n10 - 28*n3 + 22*d*n3 - 4*n10*n3 - 
      8*n3^2 - 20*n8 + 16*d*n8 - 4*n10*n8 - 12*n3*n8 - 4*n8^2)*
     j[p4a, 0, 0, n3, 0, 0, 1, 0, -1 + n8, 0, n10, 1, 0, 1, 1])/
    (4*(n10 - n8)*(1 - d + n3 + n8)) + 
   ((36 - 102*d + 90*d^2 - 25*d^3 + 52*n10 - 86*d*n10 + 34*d^2*n10 + 
      8*n10^2 - 8*d*n10^2 + 96*n3 - 156*d*n3 + 60*d^2*n3 + 68*n10*n3 - 
      50*d*n10*n3 + 8*n10^2*n3 + 60*n3^2 - 42*d*n3^2 + 16*n10*n3^2 + 8*n3^3 + 
      44*n8 - 70*d*n8 + 26*d^2*n8 + 52*n10*n8 - 34*d*n10*n8 + 8*n10^2*n8 + 
      52*n3*n8 - 34*d*n3*n8 + 16*n10*n3*n8 + 8*n3^2*n8)*
     j[p4a, 0, 0, n3, 0, 0, 1, 0, -1 + n8, 0, n10, 1, 0, 2, 0])/
    (4*(-2 + d)*(-1 + d - n10 - n3)*(n10 - n8)*(-1 + d - n3 - n8)) + 
   ((-2 + d)*n10*(-6 + 5*d - 2*n10 - 4*n3 - 2*n8)*j[p4a, 0, 0, n3, 0, 0, 1, 
      0, -1 + n8, 0, 1 + n10, 0, 0, 1, 1])/(8*(-1 + d - n10 - n3)*
     (-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((-48 + 136*d - 128*d^2 + 40*d^3 - 52*n10 + 100*d*n10 - 47*d^2*n10 - 
      8*n10^2 + 8*d*n10^2 - 128*n3 + 240*d*n3 - 112*d^2*n3 - 96*n10*n3 + 
      88*d*n10*n3 - 8*n10^2*n3 - 112*n3^2 + 104*d*n3^2 - 40*n10*n3^2 - 
      32*n3^3 - 76*n8 + 140*d*n8 - 65*d^2*n8 - 80*n10*n8 + 72*d*n10*n8 - 
      8*n10^2*n8 - 128*n3*n8 + 120*d*n3*n8 - 64*n10*n3*n8 - 56*n3^2*n8 - 
      24*n8^2 + 24*d*n8^2 - 24*n10*n8^2 - 24*n3*n8^2)*
     j[p4a, 0, 0, n3, 0, 0, 1, 0, n8, -1, n10, 1, 0, 0, 2])/
    (8*(-2 + d)*(-1 + d - n10 - n3)*(n10 - n8)*(-1 + d - n3 - n8)) + 
   (n10*(-24 + 50*d - 25*d^2 - 28*n10 + 26*d*n10 - 52*n3 + 50*d*n3 - 
      24*n10*n3 - 24*n3^2 - 24*n8 + 24*d*n8 - 24*n10*n8 - 24*n3*n8)*
     j[p4a, 0, 0, n3, 0, 0, 1, 0, n8, -1, 1 + n10, 1, 0, 0, 1])/
    (8*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((-24 + 38*d - 15*d^2 - 20*n10 + 16*d*n10 - 4*n10^2 - 28*n3 + 22*d*n3 - 
      12*n10*n3 - 8*n3^2 - 8*n8 + 6*d*n8 - 4*n10*n8 - 4*n3*n8)*
     j[p4a, 0, 0, n3, 0, 0, 1, 0, n8, 0, -1 + n10, 1, 0, 1, 1])/
    (4*(-1 + d - n10 - n3)*(n10 - n8)) + 
   ((-36 + 60*d - 25*d^2 - 36*n10 + 36*d*n10 - 5*d^2*n10 - 4*n10^2 + 
      2*d*n10^2 - 36*n3 + 24*d*n3 + 5*d^2*n3 - 20*n10*n3 + 2*d*n10*n3 - 
      8*n3^2 - 4*d*n3^2 - 12*n8 + 4*d*n8 + 5*d^2*n8 - 16*n10*n8 - 4*n3*n8 - 
      6*d*n3*n8 + 4*n8^2 - 2*d*n8^2)*j[p4a, 0, 0, n3, 0, 0, 1, 0, n8, 0, n10, 
      0, 0, 1, 1])/(8*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((-12 + 34*d - 32*d^2 + 10*d^3 - 16*n10 + 34*d*n10 - 17*d^2*n10 - 
      8*n10^2 + 8*d*n10^2 - 32*n3 + 60*d*n3 - 28*d^2*n3 - 36*n10*n3 + 
      34*d*n10*n3 - 8*n10^2*n3 - 28*n3^2 + 26*d*n3^2 - 16*n10*n3^2 - 8*n3^3 - 
      16*n8 + 26*d*n8 - 11*d^2*n8 - 20*n10*n8 + 18*d*n10*n8 - 8*n10^2*n8 - 
      20*n3*n8 + 18*d*n3*n8 - 16*n10*n3*n8 - 8*n3^2*n8)*
     j[p4a, 0, 0, n3, 0, 0, 1, 0, n8, 0, n10, 1, -1, 0, 2])/
    (4*(-2 + d)*(-1 + d - n10 - n3)*(n10 - n8)*(-1 + d - n3 - n8)) + 
   ((-36 + 102*d - 90*d^2 + 25*d^3 - 52*n10 + 86*d*n10 - 34*d^2*n10 - 
      8*n10^2 + 8*d*n10^2 - 96*n3 + 156*d*n3 - 60*d^2*n3 - 68*n10*n3 + 
      50*d*n10*n3 - 8*n10^2*n3 - 60*n3^2 + 42*d*n3^2 - 16*n10*n3^2 - 8*n3^3 - 
      44*n8 + 70*d*n8 - 26*d^2*n8 - 52*n10*n8 + 34*d*n10*n8 - 8*n10^2*n8 - 
      52*n3*n8 + 34*d*n3*n8 - 16*n10*n3*n8 - 8*n3^2*n8)*
     j[p4a, 0, 0, n3, 0, 0, 1, 0, n8, 0, n10, 1, -1, 2, 0])/
    (4*(-2 + d)*(-1 + d - n10 - n3)*(n10 - n8)*(-1 + d - n3 - n8)) + 
   ((-96 + 200*d - 130*d^2 + 25*d^3 + 16*n10 - 128*d*n10 + 138*d^2*n10 - 
      35*d^3*n10 + 88*n10^2 - 120*d*n10^2 + 34*d^2*n10^2 - 64*n3 + 20*d*n3 + 
      48*d^2*n3 - 15*d^3*n3 + 184*n10*n3 - 284*d*n10*n3 + 80*d^2*n10*n3 + 
      80*n10^2*n3 - 32*d*n10^2*n3 + 48*n3^2 - 92*d*n3^2 + 22*d^2*n3^2 + 
      112*n10*n3^2 - 40*d*n10*n3^2 + 32*n3^3 - 8*d*n3^3 - 32*n8 + 24*d*n8 + 
      10*d^2*n8 - 5*d^3*n8 + 56*n10*n8 - 116*d*n10*n8 + 36*d^2*n10*n8 + 
      80*n10^2*n8 - 32*d*n10^2*n8 + 16*n3*n8 - 52*d*n3*n8 + 14*d^2*n3*n8 + 
      112*n10*n3*n8 - 40*d*n10*n3*n8 + 32*n3^2*n8 - 8*d*n3^2*n8 + 8*n8^2 - 
      8*d*n8^2 + 2*d^2*n8^2)*j[p4a, 0, 0, n3, 0, 0, 1, 0, n8, 0, n10, 1, 0, 
      0, 1])/(8*(-2 + d)*(-1 + d - n10 - n3)*(n10 - n8)*(-1 + d - n3 - n8)) + 
   ((48 - 136*d + 128*d^2 - 40*d^3 + 52*n10 - 100*d*n10 + 47*d^2*n10 + 
      8*n10^2 - 8*d*n10^2 + 128*n3 - 240*d*n3 + 112*d^2*n3 + 96*n10*n3 - 
      88*d*n10*n3 + 8*n10^2*n3 + 112*n3^2 - 104*d*n3^2 + 40*n10*n3^2 + 
      32*n3^3 + 76*n8 - 140*d*n8 + 65*d^2*n8 + 80*n10*n8 - 72*d*n10*n8 + 
      8*n10^2*n8 + 128*n3*n8 - 120*d*n3*n8 + 64*n10*n3*n8 + 56*n3^2*n8 + 
      24*n8^2 - 24*d*n8^2 + 24*n10*n8^2 + 24*n3*n8^2)*
     j[p4a, 0, 0, n3, 0, 0, 1, 0, n8, 0, n10, 1, 0, 0, 2])/
    (8*(-2 + d)*(-1 + d - n10 - n3)*(n10 - n8)*(-1 + d - n3 - n8)) + 
   ((132 - 368*d + 329*d^2 - 95*d^3 + 156*n10 - 252*d*n10 + 99*d^2*n10 + 
      292*n3 - 456*d*n3 + 141*d^2*n3 + 25*d^3*n3 + 136*n10*n3 - 64*d*n10*n3 - 
      26*d^2*n10*n3 + 136*n3^2 - 40*d*n3^2 - 50*d^2*n3^2 + 24*d*n10*n3^2 + 
      24*d*n3^3 + 184*n8 - 328*d*n8 + 142*d^2*n8 + 192*n10*n8 - 
      144*d*n10*n8 + 240*n3*n8 - 168*d*n3*n8 - 24*d^2*n3*n8 + 48*n10*n3*n8 + 
      24*d*n10*n3*n8 + 48*n3^2*n8 + 24*d*n3^2*n8 + 48*n8^2 - 48*d*n8^2 + 
      48*n10*n8^2 + 48*n3*n8^2)*j[p4a, 0, 0, n3, 0, 0, 1, 0, n8, 0, n10, 1, 
      0, 1, 0])/(8*(-2 + d)*(-1 + d - n10 - n3)*(n10 - n8)*
     (-1 + d - n3 - n8)) + ((24 - 80*d + 80*d^2 - 25*d^3 + 48*n10 - 
      92*d*n10 + 42*d^2*n10 + 16*n10^2 - 16*d*n10^2 + 88*n3 - 160*d*n3 + 
      70*d^2*n3 + 88*n10*n3 - 76*d*n10*n3 + 16*n10^2*n3 + 72*n3^2 - 
      60*d*n3^2 + 32*n10*n3^2 + 16*n3^3 + 40*n8 - 68*d*n8 + 28*d^2*n8 + 
      56*n10*n8 - 44*d*n10*n8 + 16*n10^2*n8 + 56*n3*n8 - 44*d*n3*n8 + 
      32*n10*n3*n8 + 16*n3^2*n8)*j[p4a, 0, 0, n3, 0, 0, 1, 0, n8, 0, n10, 1, 
      0, 2, 0])/(8*(-2 + d)*(-1 + d - n10 - n3)*(n10 - n8)*
     (-1 + d - n3 - n8)) - ((-2 + d)*n10*(-6 + 5*d - 2*n10 - 4*n3 - 2*n8)*
     j[p4a, 0, 0, n3, 0, 0, 1, 0, n8, 0, 1 + n10, 0, -1, 1, 1])/
    (8*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((-2 + d)*n10*(-6 + 5*d - 2*n10 - 4*n3 - 2*n8)*j[p4a, 0, 0, n3, 0, 0, 1, 
      0, n8, 0, 1 + n10, 0, 0, 1, 1])/(8*(-1 + d - n10 - n3)*
     (-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((60 - 176*d + 165*d^2 - 50*d^3 + 80*n10 - 140*d*n10 + 60*d^2*n10 + 
      8*n10^2 - 8*d*n10^2 + 172*n3 - 308*d*n3 + 135*d^2*n3 + 120*n10*n3 - 
      100*d*n10*n3 + 8*n10^2*n3 + 136*n3^2 - 116*d*n3^2 + 40*n10*n3^2 + 
      32*n3^3 + 92*n8 - 168*d*n8 + 75*d^2*n8 + 104*n10*n8 - 84*d*n10*n8 + 
      8*n10^2*n8 + 152*n3*n8 - 132*d*n3*n8 + 64*n10*n3*n8 + 56*n3^2*n8 + 
      24*n8^2 - 24*d*n8^2 + 24*n10*n8^2 + 24*n3*n8^2)*
     j[p4a, 0, 0, n3, 0, 0, 2, 0, -1 + n8, 0, n10, 1, 0, 0, 1])/
    (8*(-2 + d)*(-1 + d - n10 - n3)*(n10 - n8)*(-1 + d - n3 - n8)) + 
   ((60 - 176*d + 165*d^2 - 50*d^3 + 80*n10 - 140*d*n10 + 60*d^2*n10 + 
      8*n10^2 - 8*d*n10^2 + 172*n3 - 308*d*n3 + 135*d^2*n3 + 120*n10*n3 - 
      100*d*n10*n3 + 8*n10^2*n3 + 136*n3^2 - 116*d*n3^2 + 40*n10*n3^2 + 
      32*n3^3 + 92*n8 - 168*d*n8 + 75*d^2*n8 + 104*n10*n8 - 84*d*n10*n8 + 
      8*n10^2*n8 + 152*n3*n8 - 132*d*n3*n8 + 64*n10*n3*n8 + 56*n3^2*n8 + 
      24*n8^2 - 24*d*n8^2 + 24*n10*n8^2 + 24*n3*n8^2)*
     j[p4a, 0, 0, n3, 0, 0, 2, 0, -1 + n8, 0, n10, 1, 0, 1, 0])/
    (8*(-2 + d)*(-1 + d - n10 - n3)*(n10 - n8)*(-1 + d - n3 - n8)) + 
   ((-48 + 148*d - 144*d^2 + 45*d^3 - 68*n10 + 124*d*n10 - 55*d^2*n10 - 
      8*n10^2 + 8*d*n10^2 - 152*n3 + 280*d*n3 - 126*d^2*n3 - 112*n10*n3 + 
      96*d*n10*n3 - 8*n10^2*n3 - 128*n3^2 + 112*d*n3^2 - 40*n10*n3^2 - 
      32*n3^3 - 84*n8 + 156*d*n8 - 71*d^2*n8 - 96*n10*n8 + 80*d*n10*n8 - 
      8*n10^2*n8 - 144*n3*n8 + 128*d*n3*n8 - 64*n10*n3*n8 - 56*n3^2*n8 - 
      24*n8^2 + 24*d*n8^2 - 24*n10*n8^2 - 24*n3*n8^2)*
     j[p4a, 0, 0, n3, 0, 0, 2, 0, n8, -1, n10, 1, 0, 0, 1])/
    (8*(-2 + d)*(-1 + d - n10 - n3)*(n10 - n8)*(-1 + d - n3 - n8)) + 
   ((-48 + 148*d - 144*d^2 + 45*d^3 - 68*n10 + 124*d*n10 - 55*d^2*n10 - 
      8*n10^2 + 8*d*n10^2 - 152*n3 + 280*d*n3 - 126*d^2*n3 - 112*n10*n3 + 
      96*d*n10*n3 - 8*n10^2*n3 - 128*n3^2 + 112*d*n3^2 - 40*n10*n3^2 - 
      32*n3^3 - 84*n8 + 156*d*n8 - 71*d^2*n8 - 96*n10*n8 + 80*d*n10*n8 - 
      8*n10^2*n8 - 144*n3*n8 + 128*d*n3*n8 - 64*n10*n3*n8 - 56*n3^2*n8 - 
      24*n8^2 + 24*d*n8^2 - 24*n10*n8^2 - 24*n3*n8^2)*
     j[p4a, 0, 0, n3, 0, 0, 2, 0, n8, -1, n10, 1, 0, 1, 0])/
    (8*(-2 + d)*(-1 + d - n10 - n3)*(n10 - n8)*(-1 + d - n3 - n8)) + 
   ((48 - 148*d + 144*d^2 - 45*d^3 + 68*n10 - 124*d*n10 + 55*d^2*n10 + 
      8*n10^2 - 8*d*n10^2 + 152*n3 - 280*d*n3 + 126*d^2*n3 + 112*n10*n3 - 
      96*d*n10*n3 + 8*n10^2*n3 + 128*n3^2 - 112*d*n3^2 + 40*n10*n3^2 + 
      32*n3^3 + 84*n8 - 156*d*n8 + 71*d^2*n8 + 96*n10*n8 - 80*d*n10*n8 + 
      8*n10^2*n8 + 144*n3*n8 - 128*d*n3*n8 + 64*n10*n3*n8 + 56*n3^2*n8 + 
      24*n8^2 - 24*d*n8^2 + 24*n10*n8^2 + 24*n3*n8^2)*
     j[p4a, 0, 0, n3, 0, 0, 2, 0, n8, 0, -1 + n10, 1, 0, 0, 1])/
    (8*(-2 + d)*(-1 + d - n10 - n3)*(n10 - n8)*(-1 + d - n3 - n8)) + 
   ((48 - 148*d + 144*d^2 - 45*d^3 + 68*n10 - 124*d*n10 + 55*d^2*n10 + 
      8*n10^2 - 8*d*n10^2 + 152*n3 - 280*d*n3 + 126*d^2*n3 + 112*n10*n3 - 
      96*d*n10*n3 + 8*n10^2*n3 + 128*n3^2 - 112*d*n3^2 + 40*n10*n3^2 + 
      32*n3^3 + 84*n8 - 156*d*n8 + 71*d^2*n8 + 96*n10*n8 - 80*d*n10*n8 + 
      8*n10^2*n8 + 144*n3*n8 - 128*d*n3*n8 + 64*n10*n3*n8 + 56*n3^2*n8 + 
      24*n8^2 - 24*d*n8^2 + 24*n10*n8^2 + 24*n3*n8^2)*
     j[p4a, 0, 0, n3, 0, 0, 2, 0, n8, 0, -1 + n10, 1, 0, 1, 0])/
    (8*(-2 + d)*(-1 + d - n10 - n3)*(n10 - n8)*(-1 + d - n3 - n8)) + 
   (n3*(24 - 50*d + 25*d^2 + 28*n10 - 26*d*n10 + 52*n3 - 50*d*n3 + 
      24*n10*n3 + 24*n3^2 + 24*n8 - 24*d*n8 + 24*n10*n8 + 24*n3*n8)*
     j[p4a, 0, 0, 1 + n3, -1, 0, 1, 0, n8, 0, n10, 0, 0, 1, 1])/
    (8*(1 - d + n10 + n3)*(-n10 + n8)*(1 - d + n3 + n8)) + 
   (n3*(24 - 50*d + 25*d^2 + 28*n10 - 26*d*n10 + 52*n3 - 50*d*n3 + 
      24*n10*n3 + 24*n3^2 + 24*n8 - 24*d*n8 + 24*n10*n8 + 24*n3*n8)*
     j[p4a, 0, 0, 1 + n3, -1, 0, 1, 0, n8, 0, n10, 1, 0, 0, 1])/
    (4*(1 - d + n10 + n3)*(-n10 + n8)*(1 - d + n3 + n8)) - 
   (n3*(-6*d + 5*d^2 + 8*n10 - 8*d*n10 + 12*n3 - 14*d*n3 + 8*n10*n3 + 
      8*n3^2 + 4*n8 - 6*d*n8 + 8*n10*n8 + 8*n3*n8)*j[p4a, 0, 0, 1 + n3, 0, 0, 
      1, -1, n8, 0, n10, 0, 0, 1, 1])/(8*(1 - d + n10 + n3)*(-n10 + n8)*
     (1 - d + n3 + n8)) - (3*n3*(-6*d + 5*d^2 + 8*n10 - 8*d*n10 + 12*n3 - 
      14*d*n3 + 8*n10*n3 + 8*n3^2 + 4*n8 - 6*d*n8 + 8*n10*n8 + 8*n3*n8)*
     j[p4a, 0, 0, 1 + n3, 0, 0, 1, -1, n8, 0, n10, 1, 0, 0, 1])/
    (8*(1 - d + n10 + n3)*(-n10 + n8)*(1 - d + n3 + n8)) + 
   (n3*(24 - 50*d + 25*d^2 + 28*n10 - 26*d*n10 + 52*n3 - 50*d*n3 + 
      24*n10*n3 + 24*n3^2 + 24*n8 - 24*d*n8 + 24*n10*n8 + 24*n3*n8)*
     j[p4a, 0, 0, 1 + n3, 0, 0, 1, -1, n8, 0, n10, 1, 0, 1, 0])/
    (8*(1 - d + n10 + n3)*(-n10 + n8)*(1 - d + n3 + n8)) - 
   (3*n3*(-6*d + 5*d^2 + 8*n10 - 8*d*n10 + 12*n3 - 14*d*n3 + 8*n10*n3 + 
      8*n3^2 + 4*n8 - 6*d*n8 + 8*n10*n8 + 8*n3*n8)*j[p4a, 0, 0, 1 + n3, 0, 0, 
      1, 0, -1 + n8, 0, n10, 1, 0, 0, 1])/(8*(1 - d + n10 + n3)*(-n10 + n8)*
     (1 - d + n3 + n8)) + (3*n3*(24 - 50*d + 25*d^2 + 28*n10 - 26*d*n10 + 
      52*n3 - 50*d*n3 + 24*n10*n3 + 24*n3^2 + 24*n8 - 24*d*n8 + 24*n10*n8 + 
      24*n3*n8)*j[p4a, 0, 0, 1 + n3, 0, 0, 1, 0, -1 + n8, 0, n10, 1, 0, 1, 
      0])/(8*(1 - d + n10 + n3)*(-n10 + n8)*(1 - d + n3 + n8)) + 
   ((-6*d*n3 + 5*d^2*n3 + 8*n10*n3 - 8*d*n10*n3 + 12*n3^2 - 14*d*n3^2 + 
      8*n10*n3^2 + 8*n3^3 + 4*n3*n8 - 6*d*n3*n8 + 8*n10*n3*n8 + 8*n3^2*n8)*
     j[p4a, 0, 0, 1 + n3, 0, 0, 1, 0, n8, 0, -1 + n10, 1, 0, 0, 1])/
    (8*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) - 
   (n3*(24 - 50*d + 25*d^2 + 28*n10 - 26*d*n10 + 52*n3 - 50*d*n3 + 
      24*n10*n3 + 24*n3^2 + 24*n8 - 24*d*n8 + 24*n10*n8 + 24*n3*n8)*
     j[p4a, 0, 0, 1 + n3, 0, 0, 1, 0, n8, 0, -1 + n10, 1, 0, 1, 0])/
    (8*(1 - d + n10 + n3)*(-n10 + n8)*(1 - d + n3 + n8)) + 
   (n3*(-6*d + 5*d^2 + 8*n10 - 8*d*n10 + 12*n3 - 14*d*n3 + 8*n10*n3 + 
      8*n3^2 + 4*n8 - 6*d*n8 + 8*n10*n8 + 8*n3*n8)*j[p4a, 0, 0, 1 + n3, 0, 0, 
      1, 0, n8, 0, n10, 1, -1, 0, 1])/(4*(1 - d + n10 + n3)*(-n10 + n8)*
     (1 - d + n3 + n8)) - (n3*(24 - 50*d + 25*d^2 + 28*n10 - 26*d*n10 + 
      52*n3 - 50*d*n3 + 24*n10*n3 + 24*n3^2 + 24*n8 - 24*d*n8 + 24*n10*n8 + 
      24*n3*n8)*j[p4a, 0, 0, 1 + n3, 0, 0, 1, 0, n8, 0, n10, 1, -1, 1, 0])/
    (4*(1 - d + n10 + n3)*(-n10 + n8)*(1 - d + n3 + n8)) - 
   (n3*(-6*d + 5*d^2 + 8*n10 - 8*d*n10 + 12*n3 - 14*d*n3 + 8*n10*n3 + 
      8*n3^2 + 4*n8 - 6*d*n8 + 8*n10*n8 + 8*n3*n8)*j[p4a, 0, 0, 1 + n3, 0, 0, 
      1, 0, n8, 0, n10, 1, 0, 0, 1])/(8*(1 - d + n10 + n3)*(-n10 + n8)*
     (1 - d + n3 + n8)) + (n3*(24 - 50*d + 25*d^2 + 28*n10 - 26*d*n10 + 
      52*n3 - 50*d*n3 + 24*n10*n3 + 24*n3^2 + 24*n8 - 24*d*n8 + 24*n10*n8 + 
      24*n3*n8)*j[p4a, 0, 0, 1 + n3, 0, 0, 1, 0, n8, 0, n10, 1, 0, 1, 0])/
    (8*(1 - d + n10 + n3)*(-n10 + n8)*(1 - d + n3 + n8)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n4 == 0 && n5 == 0 && n6 == 1 && n7 == -1 && n9 == 0 && 
     !(n2 == 0 || n8 == 1) -> 
  (2*j[p4a, -1, 1 + n2, n3, 0, 0, 1, -1, n8, 0, 0, 2, 0, 1, 1])/
    (-10 + 5*d - 4*n2 - 2*n3) + 
   ((102 - 115*d + 30*d^2 + 94*n2 - 54*d*n2 + 20*n2^2 + 50*n3 - 22*d*n3 + 
      28*n2*n3 + 38*n8 - 15*d*n8 + 18*n2*n8 + 2*n3*n8)*
     j[p4a, -1, 1 + n2, n3, 0, 0, 1, -1, n8, 0, 1, 1, 0, 1, 1])/
    (60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 32*n3 - 16*d*n3 + 
     12*n2*n3 + 4*n3^2) + (2*(-8 + 3*d - 4*n2)*j[p4a, -1, 1 + n2, n3, 0, 0, 
      1, -1, n8, 0, 2, 1, 0, 0, 1])/(60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 
     8*n2^2 + 32*n3 - 16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   (n3*j[p4a, -1, 1 + n2, 1 + n3, 0, 0, 1, -1, n8, 0, 1, 1, 0, 0, 1])/
    (-10 + 5*d - 4*n2 - 2*n3) - (4*(1 + n2)*(1 + n2 - n3)*
     j[p4a, -1, 2 + n2, -1 + n3, 0, 0, 1, -1, n8, 0, 1, 1, 0, 1, 1])/
    (60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 32*n3 - 16*d*n3 + 
     12*n2*n3 + 4*n3^2) + ((-1 - n2)*j[p4a, -1, 2 + n2, n3, 0, 0, 1, -1, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/(10 - 5*d + 4*n2 + 2*n3) + 
   j[p4a, 0, n2, n3, 0, 0, 1, -1, n8, 0, 1, 1, 0, 0, 2]/
    (-10 + 5*d - 4*n2 - 2*n3) + ((10 - 3*d + 6*n2 - 2*n3)*
     j[p4a, 0, n2, n3, 0, 0, 1, -1, n8, 0, 2, 0, 0, 1, 1])/
    (60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 32*n3 - 16*d*n3 + 
     12*n2*n3 + 4*n3^2) - (2*(-8 + 3*d - 4*n2)*j[p4a, 0, n2, n3, 0, 0, 1, -1, 
      n8, 0, 2, 1, 0, 0, 1])/(60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 
     32*n3 - 16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   (n8*j[p4a, 0, n2, n3, 0, 0, 1, -1, 1 + n8, 0, 1, 0, 0, 1, 1])/
    (-10 + 5*d - 4*n2 - 2*n3) + 
   (n8*j[p4a, 0, n2, n3, 0, 0, 1, -1, 1 + n8, 0, 1, 1, 0, 0, 1])/
    (-10 + 5*d - 4*n2 - 2*n3) + 
   (2*(-8 + 3*d - 4*n2)*j[p4a, 0, n2, n3, 0, 0, 1, 0, n8, 0, 1, 1, 0, 0, 1])/
    (60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 32*n3 - 16*d*n3 + 
     12*n2*n3 + 4*n3^2) + ((-8 + 3*d - 4*n2)*j[p4a, 0, n2, n3, 0, 0, 2, -1, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/(60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 
     8*n2^2 + 32*n3 - 16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   (2*(1 + n2 - n3)*j[p4a, 0, n2, n3, 0, 0, 2, -1, n8, 0, 0, 1, 0, 1, 1])/
    (60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 32*n3 - 16*d*n3 + 
     12*n2*n3 + 4*n3^2) + (n3*j[p4a, 0, n2, 1 + n3, 0, 0, 1, -1, n8, 0, 1, 1, 
      0, 0, 1])/(-10 + 5*d - 4*n2 - 2*n3) + 
   ((-10 + 3*d - 6*n2 + 2*n3)*j[p4a, 0, 1 + n2, -1 + n3, 0, 0, 0, -1, n8, 0, 
      1, 1, 0, 1, 2])/(60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 
     32*n3 - 16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   (2*(-8 + 3*d - 4*n2)*j[p4a, 0, 1 + n2, -1 + n3, 0, 0, 1, -1, n8, 0, 1, 1, 
      0, 0, 2])/(60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 32*n3 - 
     16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((-10 + 5*d - 6*n2 - 2*n8)*j[p4a, 0, 1 + n2, -1 + n3, 0, 0, 1, -1, n8, 0, 
      1, 1, 0, 1, 1])/(-10 + 5*d - 4*n2 - 2*n3) + 
   ((10 - 3*d + 6*n2 - 2*n3)*j[p4a, 0, 1 + n2, -1 + n3, 0, 0, 1, -1, n8, 0, 
      2, 0, 0, 1, 1])/(60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 
     32*n3 - 16*d*n3 + 12*n2*n3 + 4*n3^2) - 
   (4*(1 + n2 - n3)*j[p4a, 0, 1 + n2, -1 + n3, 0, 0, 1, 0, n8, 0, 0, 1, 0, 1, 
      1])/(60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 32*n3 - 16*d*n3 + 
     12*n2*n3 + 4*n3^2) + (4*(1 + n2 - n3)*j[p4a, 0, 1 + n2, -1 + n3, 0, 0, 
      1, 0, n8, 0, 1, 0, 0, 1, 1])/(60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 
     8*n2^2 + 32*n3 - 16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((-8 + 3*d - 4*n2)*j[p4a, 0, 1 + n2, -1 + n3, 0, 0, 2, -1, -1 + n8, 0, 1, 
      1, 0, 1, 1])/(60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 32*n3 - 
     16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((8 - 3*d + 4*n2)*j[p4a, 0, 1 + n2, -1 + n3, 0, 0, 2, -1, n8, 0, 0, 1, 0, 
      1, 1])/(60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 32*n3 - 
     16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((10 - 3*d + 6*n2 - 2*n3)*j[p4a, 0, 1 + n2, n3, -1, 0, 0, -1, n8, 0, 1, 1, 
      0, 1, 2])/(60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 32*n3 - 
     16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((10 - 3*d + 6*n2 - 2*n3)*j[p4a, 0, 1 + n2, n3, -1, 0, 1, -1, n8, 0, 1, 1, 
      0, 0, 2])/(60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 32*n3 - 
     16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((10 - 3*d + 6*n2 - 2*n3)*j[p4a, 0, 1 + n2, n3, -1, 0, 2, -1, n8, 0, 0, 1, 
      0, 1, 1])/(60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 32*n3 - 
     16*d*n3 + 12*n2*n3 + 4*n3^2) + j[p4a, 0, 1 + n2, n3, 0, -1, 0, -1, n8, 
     0, 1, 1, 0, 1, 2]/(10 - 5*d + 4*n2 + 2*n3) + 
   j[p4a, 0, 1 + n2, n3, 0, -1, 1, -1, n8, 0, 1, 1, 0, 0, 2]/
    (10 - 5*d + 4*n2 + 2*n3) + j[p4a, 0, 1 + n2, n3, 0, -1, 2, -1, n8, 0, 0, 
     1, 0, 1, 1]/(10 - 5*d + 4*n2 + 2*n3) + 
   ((-8 + 3*d - 4*n2)*j[p4a, 0, 1 + n2, n3, 0, 0, 0, -1, n8, -1, 1, 1, 0, 1, 
      2])/(60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 32*n3 - 16*d*n3 + 
     12*n2*n3 + 4*n3^2) + ((-8 + 3*d - 4*n2)*j[p4a, 0, 1 + n2, n3, 0, 0, 0, 
      -1, n8, 0, 1, 1, 0, 1, 1])/(60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 
     8*n2^2 + 32*n3 - 16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((8 - 3*d + 4*n2)*j[p4a, 0, 1 + n2, n3, 0, 0, 0, -1, n8, 0, 1, 1, 0, 1, 
      2])/(60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 32*n3 - 16*d*n3 + 
     12*n2*n3 + 4*n3^2) + j[p4a, 0, 1 + n2, n3, 0, 0, 1, -2, n8, 0, 1, 1, 0, 
     0, 2]/(10 - 5*d + 4*n2 + 2*n3) + 
   ((-10 + 3*d - 6*n2 + 2*n3)*j[p4a, 0, 1 + n2, n3, 0, 0, 1, -2, n8, 0, 2, 0, 
      0, 1, 1])/(60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 32*n3 - 
     16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((-10 + 3*d - 6*n2 + 2*n3)*j[p4a, 0, 1 + n2, n3, 0, 0, 1, -2, n8, 0, 2, 1, 
      0, 0, 1])/(60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 32*n3 - 
     16*d*n3 + 12*n2*n3 + 4*n3^2) - 
   (n8*j[p4a, 0, 1 + n2, n3, 0, 0, 1, -2, 1 + n8, 0, 1, 0, 0, 1, 1])/
    (-10 + 5*d - 4*n2 - 2*n3) - 
   (n8*j[p4a, 0, 1 + n2, n3, 0, 0, 1, -2, 1 + n8, 0, 1, 1, 0, 0, 1])/
    (-10 + 5*d - 4*n2 - 2*n3) - 
   (2*j[p4a, 0, 1 + n2, n3, 0, 0, 1, -1, -1 + n8, 0, 0, 2, 0, 1, 1])/
    (-10 + 5*d - 4*n2 - 2*n3) + j[p4a, 0, 1 + n2, n3, 0, 0, 1, -1, -1 + n8, 
     0, 1, 1, 0, 0, 2]/(10 - 5*d + 4*n2 + 2*n3) + 
   ((22 - 120*d + 81*d^2 - 15*d^3 + 20*n2 - 69*d*n2 + 22*d^2*n2 + 2*n2^2 - 
      4*d*n2^2 + 112*n3 - 119*d*n3 + 31*d^2*n3 + 72*n2*n3 - 42*d*n2*n3 + 
      4*n2^2*n3 + 34*n3^2 - 16*d*n3^2 + 20*n2*n3^2 + 104*n8 - 63*d*n8 + 
      9*d^2*n8 + 62*n2*n8 - 15*d*n2*n8 + 6*n2^2*n8 + 22*n3*n8 - 9*d*n3*n8 + 
      8*n2*n3*n8 + 2*n3^2*n8 - 6*n8^2 + 3*d*n8^2 - 2*n2*n8^2 - 2*n3*n8^2)*
     j[p4a, 0, 1 + n2, n3, 0, 0, 1, -1, -1 + n8, 0, 1, 1, 0, 1, 1])/
    ((60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 32*n3 - 16*d*n3 + 
      12*n2*n3 + 4*n3^2)*(-1 + n8)) + 
   ((-10 + 3*d - 6*n2 + 2*n3)*j[p4a, 0, 1 + n2, n3, 0, 0, 1, -1, -1 + n8, 0, 
      2, 0, 0, 1, 1])/(60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 
     32*n3 - 16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   (2*(-7 + 3*d - 3*n2 - n3)*j[p4a, 0, 1 + n2, n3, 0, 0, 1, -1, n8, -1, 1, 1, 
      0, 0, 2])/(60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 32*n3 - 
     16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((-12 + 3*d - 14*n2 + 3*d*n2 - 2*n2^2 + 14*n3 - 3*d*n3 + 4*n2*n3 - 2*n3^2)*
     j[p4a, 0, 1 + n2, n3, 0, 0, 1, -1, n8, 0, 0, 1, 0, 1, 1])/
    (60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 32*n3 - 16*d*n3 + 
     12*n2*n3 + 4*n3^2) + j[p4a, 0, 1 + n2, n3, 0, 0, 1, -1, n8, 0, 0, 2, -1, 
     1, 1]/(-10 + 5*d - 4*n2 - 2*n3) + 
   j[p4a, 0, 1 + n2, n3, 0, 0, 1, -1, n8, 0, 0, 2, 0, 1, 1]/
    (10 - 5*d + 4*n2 + 2*n3) + 
   ((4 + 4*n2 - 14*n3 + 3*d*n3 - 6*n2*n3 + 2*n3^2)*j[p4a, 0, 1 + n2, n3, 0, 
      0, 1, -1, n8, 0, 1, 0, 0, 1, 1])/(60 - 60*d + 15*d^2 + 44*n2 - 
     22*d*n2 + 8*n2^2 + 32*n3 - 16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   j[p4a, 0, 1 + n2, n3, 0, 0, 1, -1, n8, 0, 1, 1, -1, 0, 2]/
    (-10 + 5*d - 4*n2 - 2*n3) + 
   ((74 - 63*d + 15*d^2 + 70*n2 - 28*d*n2 + 16*n2^2 + 4*n3 - 7*d*n3 + 
      2*n2*n3 + 2*n3^2 + 38*n8 - 15*d*n8 + 18*n2*n8 + 2*n3*n8)*
     j[p4a, 0, 1 + n2, n3, 0, 0, 1, -1, n8, 0, 1, 1, 0, 0, 1])/
    (60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 32*n3 - 16*d*n3 + 
     12*n2*n3 + 4*n3^2) - (2*(-7 + 3*d - 3*n2 - n3)*
     j[p4a, 0, 1 + n2, n3, 0, 0, 1, -1, n8, 0, 1, 1, 0, 0, 2])/
    (60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 32*n3 - 16*d*n3 + 
     12*n2*n3 + 4*n3^2) + ((8 - 3*d + 4*n2)*j[p4a, 0, 1 + n2, n3, 0, 0, 1, 
      -1, n8, 0, 1, 1, 0, 1, 0])/(60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 
     8*n2^2 + 32*n3 - 16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((-44 + 54*d - 15*d^2 - 48*n2 + 28*d*n2 - 12*n2^2 - 20*n3 + 10*d*n3 - 
      12*n2*n3 - 32*n8 + 12*d*n8 - 16*n2*n8)*j[p4a, 0, 1 + n2, n3, 0, 0, 1, 
      -1, n8, 0, 1, 1, 0, 1, 1])/(60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 
     8*n2^2 + 32*n3 - 16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((10 - 3*d + 6*n2 - 2*n3)*j[p4a, 0, 1 + n2, n3, 0, 0, 1, -1, n8, 0, 2, 0, 
      -1, 1, 1])/(60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 32*n3 - 
     16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((-10 + 3*d - 6*n2 + 2*n3)*j[p4a, 0, 1 + n2, n3, 0, 0, 1, -1, n8, 0, 2, 0, 
      0, 1, 1])/(60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 32*n3 - 
     16*d*n3 + 12*n2*n3 + 4*n3^2) - 
   (2*(-8 + 3*d - 4*n2)*j[p4a, 0, 1 + n2, n3, 0, 0, 1, 0, -1 + n8, 0, 1, 1, 
      0, 0, 1])/(60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 32*n3 - 
     16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((8 - 3*d + 4*n2)*j[p4a, 0, 1 + n2, n3, 0, 0, 2, -2, -1 + n8, 0, 1, 1, 0, 
      1, 1])/(60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 32*n3 - 
     16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((-8 + 3*d - 4*n2)*j[p4a, 0, 1 + n2, n3, 0, 0, 2, -2, n8, 0, 0, 1, 0, 1, 
      1])/(60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 32*n3 - 16*d*n3 + 
     12*n2*n3 + 4*n3^2) + ((8 - 3*d + 4*n2)*j[p4a, 0, 1 + n2, n3, 0, 0, 2, 
      -1, -2 + n8, 0, 1, 1, 0, 1, 1])/(60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 
     8*n2^2 + 32*n3 - 16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((-10 + 3*d - 6*n2 + 2*n3)*j[p4a, 0, 1 + n2, n3, 0, 0, 2, -1, -1 + n8, -1, 
      1, 1, 0, 1, 1])/(60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 
     32*n3 - 16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((-8 + 3*d - 4*n2)*j[p4a, 0, 1 + n2, n3, 0, 0, 2, -1, -1 + n8, 0, 0, 1, 0, 
      1, 1])/(60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 32*n3 - 
     16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((-8 + 3*d - 4*n2)*j[p4a, 0, 1 + n2, n3, 0, 0, 2, -1, -1 + n8, 0, 1, 1, 
      -1, 1, 1])/(60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 32*n3 - 
     16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((8 - 3*d + 4*n2)*j[p4a, 0, 1 + n2, n3, 0, 0, 2, -1, -1 + n8, 0, 1, 1, 0, 
      0, 1])/(60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 32*n3 - 
     16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((8 - 3*d + 4*n2)*j[p4a, 0, 1 + n2, n3, 0, 0, 2, -1, -1 + n8, 0, 1, 1, 0, 
      1, 0])/(60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 32*n3 - 
     16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((-8 + 3*d - 4*n2)*j[p4a, 0, 1 + n2, n3, 0, 0, 2, -1, n8, -1, 1, 1, 0, 0, 
      1])/(60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 32*n3 - 16*d*n3 + 
     12*n2*n3 + 4*n3^2) + ((-8 + 3*d - 4*n2)*j[p4a, 0, 1 + n2, n3, 0, 0, 2, 
      -1, n8, -1, 1, 1, 0, 1, 0])/(60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 
     8*n2^2 + 32*n3 - 16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((8 - 3*d + 4*n2)*j[p4a, 0, 1 + n2, n3, 0, 0, 2, -1, n8, 0, 0, 1, -1, 1, 
      1])/(60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 32*n3 - 16*d*n3 + 
     12*n2*n3 + 4*n3^2) + (n3*(-22 + 45*d - 15*d^2 - 22*n2 + 22*d*n2 - 
      4*n2^2 - 34*n3 + 16*d*n3 - 20*n2*n3 - 38*n8 + 15*d*n8 - 18*n2*n8 - 
      2*n3*n8)*j[p4a, 0, 1 + n2, 1 + n3, 0, 0, 1, -2, -1 + n8, 0, 1, 1, 0, 1, 
      1])/((60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 32*n3 - 16*d*n3 + 
      12*n2*n3 + 4*n3^2)*(-1 + n8)) + 
   (n3*j[p4a, 0, 1 + n2, 1 + n3, 0, 0, 1, -2, n8, 0, 0, 1, 0, 1, 1])/
    (-10 + 5*d - 4*n2 - 2*n3) - 
   (n3*j[p4a, 0, 1 + n2, 1 + n3, 0, 0, 1, -2, n8, 0, 1, 0, 0, 1, 1])/
    (-10 + 5*d - 4*n2 - 2*n3) - 
   (3*n3*j[p4a, 0, 1 + n2, 1 + n3, 0, 0, 1, -2, n8, 0, 1, 1, 0, 0, 1])/
    (-10 + 5*d - 4*n2 - 2*n3) - 
   (n3*(-4 + 36*d - 15*d^2 - 16*n2 + 22*d*n2 - 4*n2^2 - 28*n3 + 16*d*n3 - 
      20*n2*n3 - 56*n8 + 24*d*n8 - 24*n2*n8 - 8*n3*n8)*
     j[p4a, 0, 1 + n2, 1 + n3, 0, 0, 1, -1, -1 + n8, 0, 1, 1, 0, 0, 1])/
    ((60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 32*n3 - 16*d*n3 + 
      12*n2*n3 + 4*n3^2)*(-1 + n8)) + 
   (2*n3*j[p4a, 0, 1 + n2, 1 + n3, 0, 0, 1, -1, n8, 0, 1, 1, -1, 0, 1])/
    (-10 + 5*d - 4*n2 - 2*n3) - 
   (n3*j[p4a, 0, 1 + n2, 1 + n3, 0, 0, 1, -1, n8, 0, 1, 1, 0, 0, 1])/
    (-10 + 5*d - 4*n2 - 2*n3) - 
   ((1 + n2)*(48 - 54*d + 15*d^2 + 36*n2 - 22*d*n2 + 4*n2^2 + 32*n3 - 
      16*d*n3 + 20*n2*n3 + 12*n8 - 6*d*n8 + 4*n2*n8 + 4*n3*n8)*
     j[p4a, 0, 2 + n2, -1 + n3, 0, 0, 1, -1, -1 + n8, 0, 1, 1, 0, 1, 1])/
    ((60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 32*n3 - 16*d*n3 + 
      12*n2*n3 + 4*n3^2)*(-1 + n8)) + 
   (4*(1 + n2)*(1 + n2 - n3)*j[p4a, 0, 2 + n2, -1 + n3, 0, 0, 1, -1, n8, 0, 
      0, 1, 0, 1, 1])/(60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 
     32*n3 - 16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((1 + n2)*(48 - 54*d + 15*d^2 + 36*n2 - 22*d*n2 + 4*n2^2 + 32*n3 - 
      16*d*n3 + 20*n2*n3 + 12*n8 - 6*d*n8 + 4*n2*n8 + 4*n3*n8)*
     j[p4a, 0, 2 + n2, n3, 0, 0, 1, -2, -1 + n8, 0, 1, 1, 0, 1, 1])/
    ((60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 32*n3 - 16*d*n3 + 
      12*n2*n3 + 4*n3^2)*(-1 + n8)) + 
   ((1 + n2)*j[p4a, 0, 2 + n2, n3, 0, 0, 1, -2, n8, 0, 0, 1, 0, 1, 1])/
    (10 - 5*d + 4*n2 + 2*n3) - (2*(1 + n2)*(10 - 3*d + 6*n2 - 2*n3)*
     j[p4a, 0, 2 + n2, n3, 0, 0, 1, -2, n8, 0, 1, 1, 0, 0, 1])/
    (60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 32*n3 - 16*d*n3 + 
     12*n2*n3 + 4*n3^2) + (4*(1 + n2)*(1 + n2 - n3)*
     j[p4a, 0, 2 + n2, n3, 0, 0, 1, -2, n8, 0, 1, 1, 0, 1, 1])/
    (60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 32*n3 - 16*d*n3 + 
     12*n2*n3 + 4*n3^2) + ((1 + n2)*(48 - 54*d + 15*d^2 + 36*n2 - 22*d*n2 + 
      4*n2^2 + 32*n3 - 16*d*n3 + 20*n2*n3 + 12*n8 - 6*d*n8 + 4*n2*n8 + 
      4*n3*n8)*j[p4a, 0, 2 + n2, n3, 0, 0, 1, -1, -2 + n8, 0, 1, 1, 0, 1, 1])/
    ((60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 32*n3 - 16*d*n3 + 
      12*n2*n3 + 4*n3^2)*(-1 + n8)) - 
   ((1 + n2)*(48 - 54*d + 15*d^2 + 36*n2 - 22*d*n2 + 4*n2^2 + 32*n3 - 
      16*d*n3 + 20*n2*n3 + 12*n8 - 6*d*n8 + 4*n2*n8 + 4*n3*n8)*
     j[p4a, 0, 2 + n2, n3, 0, 0, 1, -1, -1 + n8, 0, 1, 1, -1, 1, 1])/
    ((60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 32*n3 - 16*d*n3 + 
      12*n2*n3 + 4*n3^2)*(-1 + n8)) + 
   (2*(1 + n2)*(38 - 51*d + 15*d^2 + 30*n2 - 22*d*n2 + 4*n2^2 + 34*n3 - 
      16*d*n3 + 20*n2*n3 + 22*n8 - 9*d*n8 + 10*n2*n8 + 2*n3*n8)*
     j[p4a, 0, 2 + n2, n3, 0, 0, 1, -1, -1 + n8, 0, 1, 1, 0, 0, 1])/
    ((60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 32*n3 - 16*d*n3 + 
      12*n2*n3 + 4*n3^2)*(-1 + n8)) - 
   (4*(1 + n2)*(1 + n2 - n3)*j[p4a, 0, 2 + n2, n3, 0, 0, 1, -1, -1 + n8, 0, 
      1, 1, 0, 1, 1])/(60 - 60*d + 15*d^2 + 44*n2 - 22*d*n2 + 8*n2^2 + 
     32*n3 - 16*d*n3 + 12*n2*n3 + 4*n3^2), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n4 == 0 && n5 == 0 && n6 == 1 && n7 == 0 && n9 == 0 && 
     !(n2 == 0 || n8 == 1) -> 
  (2*j[p4a, -1, 1 + n2, n3, 0, 0, 1, 0, n8, 0, 0, 2, 0, 1, 1])/
    (-14 + 5*d - 4*n2 - 2*n3) + 
   ((200 - 159*d + 30*d^2 + 130*n2 - 54*d*n2 + 20*n2^2 + 70*n3 - 22*d*n3 + 
      28*n2*n3 + 48*n8 - 15*d*n8 + 18*n2*n8 + 2*n3*n8)*
     j[p4a, -1, 1 + n2, n3, 0, 0, 1, 0, n8, 0, 1, 1, 0, 1, 1])/
    (112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 44*n3 - 16*d*n3 + 
     12*n2*n3 + 4*n3^2) + (2*(-10 + 3*d - 4*n2)*j[p4a, -1, 1 + n2, n3, 0, 0, 
      1, 0, n8, 0, 2, 1, 0, 0, 1])/(112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 
     8*n2^2 + 44*n3 - 16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   (n3*j[p4a, -1, 1 + n2, 1 + n3, 0, 0, 1, 0, n8, 0, 1, 1, 0, 0, 1])/
    (-14 + 5*d - 4*n2 - 2*n3) - (4*(1 + n2)*(1 + n2 - n3)*
     j[p4a, -1, 2 + n2, -1 + n3, 0, 0, 1, 0, n8, 0, 1, 1, 0, 1, 1])/
    (112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 44*n3 - 16*d*n3 + 
     12*n2*n3 + 4*n3^2) + ((-1 - n2)*j[p4a, -1, 2 + n2, n3, 0, 0, 1, 0, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/(14 - 5*d + 4*n2 + 2*n3) + 
   j[p4a, 0, n2, n3, 0, 0, 1, 0, n8, 0, 1, 1, 0, 0, 2]/
    (-14 + 5*d - 4*n2 - 2*n3) + ((12 - 3*d + 6*n2 - 2*n3)*
     j[p4a, 0, n2, n3, 0, 0, 1, 0, n8, 0, 2, 0, 0, 1, 1])/
    (112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 44*n3 - 16*d*n3 + 
     12*n2*n3 + 4*n3^2) - (2*(-10 + 3*d - 4*n2)*j[p4a, 0, n2, n3, 0, 0, 1, 0, 
      n8, 0, 2, 1, 0, 0, 1])/(112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 
     8*n2^2 + 44*n3 - 16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   (n8*j[p4a, 0, n2, n3, 0, 0, 1, 0, 1 + n8, 0, 1, 0, 0, 1, 1])/
    (-14 + 5*d - 4*n2 - 2*n3) + 
   (n8*j[p4a, 0, n2, n3, 0, 0, 1, 0, 1 + n8, 0, 1, 1, 0, 0, 1])/
    (-14 + 5*d - 4*n2 - 2*n3) + 
   ((-10 + 3*d - 4*n2)*j[p4a, 0, n2, n3, 0, 0, 2, 0, -1 + n8, 0, 1, 1, 0, 1, 
      1])/(112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 44*n3 - 16*d*n3 + 
     12*n2*n3 + 4*n3^2) + (2*(1 + n2 - n3)*j[p4a, 0, n2, n3, 0, 0, 2, 0, n8, 
      0, 0, 1, 0, 1, 1])/(112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 
     44*n3 - 16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   (n3*j[p4a, 0, n2, 1 + n3, 0, 0, 1, 0, n8, 0, 1, 1, 0, 0, 1])/
    (-14 + 5*d - 4*n2 - 2*n3) + ((-12 + 3*d - 6*n2 + 2*n3)*
     j[p4a, 0, 1 + n2, -1 + n3, 0, 0, 0, 0, n8, 0, 1, 1, 0, 1, 2])/
    (112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 44*n3 - 16*d*n3 + 
     12*n2*n3 + 4*n3^2) + (2*(-10 + 3*d - 4*n2)*j[p4a, 0, 1 + n2, -1 + n3, 0, 
      0, 1, 0, n8, 0, 1, 1, 0, 0, 2])/(112 - 82*d + 15*d^2 + 60*n2 - 
     22*d*n2 + 8*n2^2 + 44*n3 - 16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((-14 + 5*d - 6*n2 - 2*n8)*j[p4a, 0, 1 + n2, -1 + n3, 0, 0, 1, 0, n8, 0, 
      1, 1, 0, 1, 1])/(-14 + 5*d - 4*n2 - 2*n3) + 
   ((12 - 3*d + 6*n2 - 2*n3)*j[p4a, 0, 1 + n2, -1 + n3, 0, 0, 1, 0, n8, 0, 2, 
      0, 0, 1, 1])/(112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 44*n3 - 
     16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((-10 + 3*d - 4*n2)*j[p4a, 0, 1 + n2, -1 + n3, 0, 0, 2, 0, -1 + n8, 0, 1, 
      1, 0, 1, 1])/(112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 44*n3 - 
     16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((10 - 3*d + 4*n2)*j[p4a, 0, 1 + n2, -1 + n3, 0, 0, 2, 0, n8, 0, 0, 1, 0, 
      1, 1])/(112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 44*n3 - 
     16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((12 - 3*d + 6*n2 - 2*n3)*j[p4a, 0, 1 + n2, n3, -1, 0, 0, 0, n8, 0, 1, 1, 
      0, 1, 2])/(112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 44*n3 - 
     16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((12 - 3*d + 6*n2 - 2*n3)*j[p4a, 0, 1 + n2, n3, -1, 0, 1, 0, n8, 0, 1, 1, 
      0, 0, 2])/(112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 44*n3 - 
     16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((12 - 3*d + 6*n2 - 2*n3)*j[p4a, 0, 1 + n2, n3, -1, 0, 2, 0, n8, 0, 0, 1, 
      0, 1, 1])/(112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 44*n3 - 
     16*d*n3 + 12*n2*n3 + 4*n3^2) + j[p4a, 0, 1 + n2, n3, 0, -1, 0, 0, n8, 0, 
     1, 1, 0, 1, 2]/(14 - 5*d + 4*n2 + 2*n3) + 
   j[p4a, 0, 1 + n2, n3, 0, -1, 1, 0, n8, 0, 1, 1, 0, 0, 2]/
    (14 - 5*d + 4*n2 + 2*n3) + j[p4a, 0, 1 + n2, n3, 0, -1, 2, 0, n8, 0, 0, 
     1, 0, 1, 1]/(14 - 5*d + 4*n2 + 2*n3) + 
   ((-10 + 3*d - 4*n2)*j[p4a, 0, 1 + n2, n3, 0, 0, 0, 0, n8, -1, 1, 1, 0, 1, 
      2])/(112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 44*n3 - 16*d*n3 + 
     12*n2*n3 + 4*n3^2) + ((-10 + 3*d - 4*n2)*j[p4a, 0, 1 + n2, n3, 0, 0, 0, 
      0, n8, 0, 1, 1, 0, 1, 1])/(112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 
     8*n2^2 + 44*n3 - 16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((10 - 3*d + 4*n2)*j[p4a, 0, 1 + n2, n3, 0, 0, 0, 0, n8, 0, 1, 1, 0, 1, 
      2])/(112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 44*n3 - 16*d*n3 + 
     12*n2*n3 + 4*n3^2) + j[p4a, 0, 1 + n2, n3, 0, 0, 1, -1, n8, 0, 1, 1, 0, 
     0, 2]/(14 - 5*d + 4*n2 + 2*n3) + 
   ((-12 + 3*d - 6*n2 + 2*n3)*j[p4a, 0, 1 + n2, n3, 0, 0, 1, -1, n8, 0, 2, 0, 
      0, 1, 1])/(112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 44*n3 - 
     16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((-12 + 3*d - 6*n2 + 2*n3)*j[p4a, 0, 1 + n2, n3, 0, 0, 1, -1, n8, 0, 2, 1, 
      0, 0, 1])/(112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 44*n3 - 
     16*d*n3 + 12*n2*n3 + 4*n3^2) - 
   (n8*j[p4a, 0, 1 + n2, n3, 0, 0, 1, -1, 1 + n8, 0, 1, 0, 0, 1, 1])/
    (-14 + 5*d - 4*n2 - 2*n3) - 
   (n8*j[p4a, 0, 1 + n2, n3, 0, 0, 1, -1, 1 + n8, 0, 1, 1, 0, 0, 1])/
    (-14 + 5*d - 4*n2 - 2*n3) - 
   (2*j[p4a, 0, 1 + n2, n3, 0, 0, 1, 0, -1 + n8, 0, 0, 2, 0, 1, 1])/
    (-14 + 5*d - 4*n2 - 2*n3) + j[p4a, 0, 1 + n2, n3, 0, 0, 1, 0, -1 + n8, 0, 
     1, 1, 0, 0, 2]/(14 - 5*d + 4*n2 + 2*n3) + 
   ((114 - 212*d + 103*d^2 - 15*d^3 + 50*n2 - 81*d*n2 + 22*d^2*n2 + 2*n2^2 - 
      4*d*n2^2 + 186*n3 - 157*d*n3 + 31*d^2*n3 + 84*n2*n3 - 42*d*n2*n3 + 
      4*n2^2*n3 + 50*n3^2 - 16*d*n3^2 + 20*n2*n3^2 + 110*n8 - 63*d*n8 + 
      9*d^2*n8 + 56*n2*n8 - 15*d*n2*n8 + 6*n2^2*n8 + 28*n3*n8 - 9*d*n3*n8 + 
      8*n2*n3*n8 + 2*n3^2*n8 - 8*n8^2 + 3*d*n8^2 - 2*n2*n8^2 - 2*n3*n8^2)*
     j[p4a, 0, 1 + n2, n3, 0, 0, 1, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/
    ((112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 44*n3 - 16*d*n3 + 
      12*n2*n3 + 4*n3^2)*(-1 + n8)) + 
   ((-12 + 3*d - 6*n2 + 2*n3)*j[p4a, 0, 1 + n2, n3, 0, 0, 1, 0, -1 + n8, 0, 
      2, 0, 0, 1, 1])/(112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 
     44*n3 - 16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   (2*(-9 + 3*d - 3*n2 - n3)*j[p4a, 0, 1 + n2, n3, 0, 0, 1, 0, n8, -1, 1, 1, 
      0, 0, 2])/(112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 44*n3 - 
     16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((-14 + 3*d - 16*n2 + 3*d*n2 - 2*n2^2 + 16*n3 - 3*d*n3 + 4*n2*n3 - 2*n3^2)*
     j[p4a, 0, 1 + n2, n3, 0, 0, 1, 0, n8, 0, 0, 1, 0, 1, 1])/
    (112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 44*n3 - 16*d*n3 + 
     12*n2*n3 + 4*n3^2) + j[p4a, 0, 1 + n2, n3, 0, 0, 1, 0, n8, 0, 0, 2, -1, 
     1, 1]/(-14 + 5*d - 4*n2 - 2*n3) + 
   j[p4a, 0, 1 + n2, n3, 0, 0, 1, 0, n8, 0, 0, 2, 0, 1, 1]/
    (14 - 5*d + 4*n2 + 2*n3) + 
   ((4 + 4*n2 - 16*n3 + 3*d*n3 - 6*n2*n3 + 2*n3^2)*j[p4a, 0, 1 + n2, n3, 0, 
      0, 1, 0, n8, 0, 1, 0, 0, 1, 1])/(112 - 82*d + 15*d^2 + 60*n2 - 
     22*d*n2 + 8*n2^2 + 44*n3 - 16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   j[p4a, 0, 1 + n2, n3, 0, 0, 1, 0, n8, 0, 1, 1, -1, 0, 2]/
    (-14 + 5*d - 4*n2 - 2*n3) + 
   ((104 - 79*d + 15*d^2 + 78*n2 - 28*d*n2 + 16*n2^2 + 14*n3 - 7*d*n3 + 
      2*n2*n3 + 2*n3^2 + 48*n8 - 15*d*n8 + 18*n2*n8 + 2*n3*n8)*
     j[p4a, 0, 1 + n2, n3, 0, 0, 1, 0, n8, 0, 1, 1, 0, 0, 1])/
    (112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 44*n3 - 16*d*n3 + 
     12*n2*n3 + 4*n3^2) - (2*(-9 + 3*d - 3*n2 - n3)*
     j[p4a, 0, 1 + n2, n3, 0, 0, 1, 0, n8, 0, 1, 1, 0, 0, 2])/
    (112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 44*n3 - 16*d*n3 + 
     12*n2*n3 + 4*n3^2) + ((10 - 3*d + 4*n2)*j[p4a, 0, 1 + n2, n3, 0, 0, 1, 
      0, n8, 0, 1, 1, 0, 1, 0])/(112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 
     8*n2^2 + 44*n3 - 16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((-88 + 76*d - 15*d^2 - 64*n2 + 28*d*n2 - 12*n2^2 - 32*n3 + 10*d*n3 - 
      12*n2*n3 - 40*n8 + 12*d*n8 - 16*n2*n8)*j[p4a, 0, 1 + n2, n3, 0, 0, 1, 
      0, n8, 0, 1, 1, 0, 1, 1])/(112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 
     8*n2^2 + 44*n3 - 16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((12 - 3*d + 6*n2 - 2*n3)*j[p4a, 0, 1 + n2, n3, 0, 0, 1, 0, n8, 0, 2, 0, 
      -1, 1, 1])/(112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 44*n3 - 
     16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((-12 + 3*d - 6*n2 + 2*n3)*j[p4a, 0, 1 + n2, n3, 0, 0, 1, 0, n8, 0, 2, 0, 
      0, 1, 1])/(112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 44*n3 - 
     16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((10 - 3*d + 4*n2)*j[p4a, 0, 1 + n2, n3, 0, 0, 2, -1, -1 + n8, 0, 1, 1, 0, 
      1, 1])/(112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 44*n3 - 
     16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((-10 + 3*d - 4*n2)*j[p4a, 0, 1 + n2, n3, 0, 0, 2, -1, n8, 0, 0, 1, 0, 1, 
      1])/(112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 44*n3 - 16*d*n3 + 
     12*n2*n3 + 4*n3^2) + ((10 - 3*d + 4*n2)*j[p4a, 0, 1 + n2, n3, 0, 0, 2, 
      0, -2 + n8, 0, 1, 1, 0, 1, 1])/(112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 
     8*n2^2 + 44*n3 - 16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((-12 + 3*d - 6*n2 + 2*n3)*j[p4a, 0, 1 + n2, n3, 0, 0, 2, 0, -1 + n8, -1, 
      1, 1, 0, 1, 1])/(112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 
     44*n3 - 16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((-10 + 3*d - 4*n2)*j[p4a, 0, 1 + n2, n3, 0, 0, 2, 0, -1 + n8, 0, 0, 1, 0, 
      1, 1])/(112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 44*n3 - 
     16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((-10 + 3*d - 4*n2)*j[p4a, 0, 1 + n2, n3, 0, 0, 2, 0, -1 + n8, 0, 1, 1, 
      -1, 1, 1])/(112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 44*n3 - 
     16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((10 - 3*d + 4*n2)*j[p4a, 0, 1 + n2, n3, 0, 0, 2, 0, -1 + n8, 0, 1, 1, 0, 
      0, 1])/(112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 44*n3 - 
     16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((10 - 3*d + 4*n2)*j[p4a, 0, 1 + n2, n3, 0, 0, 2, 0, -1 + n8, 0, 1, 1, 0, 
      1, 0])/(112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 44*n3 - 
     16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((-10 + 3*d - 4*n2)*j[p4a, 0, 1 + n2, n3, 0, 0, 2, 0, n8, -1, 1, 1, 0, 0, 
      1])/(112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 44*n3 - 16*d*n3 + 
     12*n2*n3 + 4*n3^2) + ((-10 + 3*d - 4*n2)*j[p4a, 0, 1 + n2, n3, 0, 0, 2, 
      0, n8, -1, 1, 1, 0, 1, 0])/(112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 
     8*n2^2 + 44*n3 - 16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((10 - 3*d + 4*n2)*j[p4a, 0, 1 + n2, n3, 0, 0, 2, 0, n8, 0, 0, 1, -1, 1, 
      1])/(112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 44*n3 - 16*d*n3 + 
     12*n2*n3 + 4*n3^2) + (n3*(-60 + 67*d - 15*d^2 - 34*n2 + 22*d*n2 - 
      4*n2^2 - 50*n3 + 16*d*n3 - 20*n2*n3 - 48*n8 + 15*d*n8 - 18*n2*n8 - 
      2*n3*n8)*j[p4a, 0, 1 + n2, 1 + n3, 0, 0, 1, -1, -1 + n8, 0, 1, 1, 0, 1, 
      1])/((112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 44*n3 - 
      16*d*n3 + 12*n2*n3 + 4*n3^2)*(-1 + n8)) + 
   (n3*j[p4a, 0, 1 + n2, 1 + n3, 0, 0, 1, -1, n8, 0, 0, 1, 0, 1, 1])/
    (-14 + 5*d - 4*n2 - 2*n3) - 
   (n3*j[p4a, 0, 1 + n2, 1 + n3, 0, 0, 1, -1, n8, 0, 1, 0, 0, 1, 1])/
    (-14 + 5*d - 4*n2 - 2*n3) - 
   (3*n3*j[p4a, 0, 1 + n2, 1 + n3, 0, 0, 1, -1, n8, 0, 1, 1, 0, 0, 1])/
    (-14 + 5*d - 4*n2 - 2*n3) - 
   (n3*(-36 + 58*d - 15*d^2 - 28*n2 + 22*d*n2 - 4*n2^2 - 44*n3 + 16*d*n3 - 
      20*n2*n3 - 72*n8 + 24*d*n8 - 24*n2*n8 - 8*n3*n8)*
     j[p4a, 0, 1 + n2, 1 + n3, 0, 0, 1, 0, -1 + n8, 0, 1, 1, 0, 0, 1])/
    ((112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 44*n3 - 16*d*n3 + 
      12*n2*n3 + 4*n3^2)*(-1 + n8)) + 
   (2*n3*j[p4a, 0, 1 + n2, 1 + n3, 0, 0, 1, 0, n8, 0, 1, 1, -1, 0, 1])/
    (-14 + 5*d - 4*n2 - 2*n3) - 
   (n3*j[p4a, 0, 1 + n2, 1 + n3, 0, 0, 1, 0, n8, 0, 1, 1, 0, 0, 1])/
    (-14 + 5*d - 4*n2 - 2*n3) - 
   ((1 + n2)*(92 - 76*d + 15*d^2 + 48*n2 - 22*d*n2 + 4*n2^2 + 48*n3 - 
      16*d*n3 + 20*n2*n3 + 16*n8 - 6*d*n8 + 4*n2*n8 + 4*n3*n8)*
     j[p4a, 0, 2 + n2, -1 + n3, 0, 0, 1, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/
    ((112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 44*n3 - 16*d*n3 + 
      12*n2*n3 + 4*n3^2)*(-1 + n8)) + 
   (4*(1 + n2)*(1 + n2 - n3)*j[p4a, 0, 2 + n2, -1 + n3, 0, 0, 1, 0, n8, 0, 0, 
      1, 0, 1, 1])/(112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 44*n3 - 
     16*d*n3 + 12*n2*n3 + 4*n3^2) + 
   ((1 + n2)*(92 - 76*d + 15*d^2 + 48*n2 - 22*d*n2 + 4*n2^2 + 48*n3 - 
      16*d*n3 + 20*n2*n3 + 16*n8 - 6*d*n8 + 4*n2*n8 + 4*n3*n8)*
     j[p4a, 0, 2 + n2, n3, 0, 0, 1, -1, -1 + n8, 0, 1, 1, 0, 1, 1])/
    ((112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 44*n3 - 16*d*n3 + 
      12*n2*n3 + 4*n3^2)*(-1 + n8)) + 
   ((1 + n2)*j[p4a, 0, 2 + n2, n3, 0, 0, 1, -1, n8, 0, 0, 1, 0, 1, 1])/
    (14 - 5*d + 4*n2 + 2*n3) - (2*(1 + n2)*(12 - 3*d + 6*n2 - 2*n3)*
     j[p4a, 0, 2 + n2, n3, 0, 0, 1, -1, n8, 0, 1, 1, 0, 0, 1])/
    (112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 44*n3 - 16*d*n3 + 
     12*n2*n3 + 4*n3^2) + (4*(1 + n2)*(1 + n2 - n3)*
     j[p4a, 0, 2 + n2, n3, 0, 0, 1, -1, n8, 0, 1, 1, 0, 1, 1])/
    (112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 44*n3 - 16*d*n3 + 
     12*n2*n3 + 4*n3^2) + ((1 + n2)*(92 - 76*d + 15*d^2 + 48*n2 - 22*d*n2 + 
      4*n2^2 + 48*n3 - 16*d*n3 + 20*n2*n3 + 16*n8 - 6*d*n8 + 4*n2*n8 + 
      4*n3*n8)*j[p4a, 0, 2 + n2, n3, 0, 0, 1, 0, -2 + n8, 0, 1, 1, 0, 1, 1])/
    ((112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 44*n3 - 16*d*n3 + 
      12*n2*n3 + 4*n3^2)*(-1 + n8)) - 
   ((1 + n2)*(92 - 76*d + 15*d^2 + 48*n2 - 22*d*n2 + 4*n2^2 + 48*n3 - 
      16*d*n3 + 20*n2*n3 + 16*n8 - 6*d*n8 + 4*n2*n8 + 4*n3*n8)*
     j[p4a, 0, 2 + n2, n3, 0, 0, 1, 0, -1 + n8, 0, 1, 1, -1, 1, 1])/
    ((112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 44*n3 - 16*d*n3 + 
      12*n2*n3 + 4*n3^2)*(-1 + n8)) + 
   (2*(1 + n2)*(80 - 73*d + 15*d^2 + 42*n2 - 22*d*n2 + 4*n2^2 + 50*n3 - 
      16*d*n3 + 20*n2*n3 + 28*n8 - 9*d*n8 + 10*n2*n8 + 2*n3*n8)*
     j[p4a, 0, 2 + n2, n3, 0, 0, 1, 0, -1 + n8, 0, 1, 1, 0, 0, 1])/
    ((112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 44*n3 - 16*d*n3 + 
      12*n2*n3 + 4*n3^2)*(-1 + n8)) - 
   (4*(1 + n2)*(1 + n2 - n3)*j[p4a, 0, 2 + n2, n3, 0, 0, 1, 0, -1 + n8, 0, 1, 
      1, 0, 1, 1])/(112 - 82*d + 15*d^2 + 60*n2 - 22*d*n2 + 8*n2^2 + 44*n3 - 
     16*d*n3 + 12*n2*n3 + 4*n3^2), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && n4 == 0 && 
    n5 == 0 && n6 == 1 && n7 == 0 && n8 == 1 && n9 == 0 && n11 != 1 -> 
  (-2*n11*(-24 + 30*d - 9*d^2 - 6*n10 + 3*d*n10 - 6*n11 + 3*d*n11 - 12*n3 + 
      8*d*n3 - 2*n10*n3 - 2*n11*n3 - 2*n3^2)*j[p4a, -1, 0, n3, 0, 0, 0, 0, 1, 
      0, n10, 1 + n11, 0, 1, 1])/((4 - 3*d + n10 + n11 + 2*n3)*
     (6*d - 3*d^2 - 12*n11 + 6*d*n11 - 4*n3 + 4*d*n3 - 4*n11*n3)) + 
   ((-2 + d)*(-8 + 7*d - 2*n10 - 4*n11 - 2*n3)*j[p4a, -1, 0, n3, 0, 0, 0, 0, 
      2, 0, n10, n11, 0, 1, 1])/((-4 + 3*d - n10 - n11 - 2*n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) - 
   (2*n11*(-24 + 30*d - 9*d^2 - 6*n10 + 3*d*n10 - 6*n11 + 3*d*n11 - 12*n3 + 
      8*d*n3 - 2*n10*n3 - 2*n11*n3 - 2*n3^2)*j[p4a, -1, 0, n3, 0, 0, 1, 0, 0, 
      0, n10, 1 + n11, 0, 1, 1])/((4 - 3*d + n10 + n11 + 2*n3)*
     (6*d - 3*d^2 - 12*n11 + 6*d*n11 - 4*n3 + 4*d*n3 - 4*n11*n3)) - 
   (2*n10*(-8 + 14*d - 5*d^2 - 2*n10 + d*n10 - 10*n11 + 5*d*n11 - 4*n3 + 
      3*d*n3 - 2*n11*n3)*j[p4a, -1, 0, n3, 0, 0, 1, 0, 0, 0, 1 + n10, n11, 0, 
      1, 1])/((4 - 3*d + n10 + n11 + 2*n3)*(-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 
      4*n3 - 4*d*n3 + 4*n11*n3)) + 
   ((-32 + 38*d - 11*d^2 - 8*n10 + 4*d*n10 - 4*n11 + 2*d*n11 - 20*n3 + 
      14*d*n3 - 4*n10*n3 - 4*n11*n3 - 4*n3^2)*j[p4a, -1, 0, n3, 0, 0, 1, 0, 
      1, 0, n10, n11, 0, 2, 0])/((-4 + 3*d - n10 - n11 - 2*n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) - 
   (2*n10*(-8 + 14*d - 5*d^2 - 2*n10 + d*n10 - 10*n11 + 5*d*n11 - 4*n3 + 
      3*d*n3 - 2*n11*n3)*j[p4a, -1, 0, n3, 0, 0, 1, 0, 1, 0, 1 + n10, n11, 0, 
      0, 1])/((4 - 3*d + n10 + n11 + 2*n3)*(-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 
      4*n3 - 4*d*n3 + 4*n11*n3)) + 
   ((-16*n3 + 32*d*n3 - 20*d^2*n3 + 4*d^3*n3 - 4*n10*n3 + 6*d*n10*n3 - 
      2*d^2*n10*n3 - 12*n11*n3 + 10*d*n11*n3 - 2*d^2*n11*n3 - 4*n10*n11*n3 + 
      2*d*n10*n11*n3 + 4*n11^2*n3 - 2*d*n11^2*n3 - 8*n3^2 + 13*d*n3^2 - 
      5*d^2*n3^2 - 2*n10*n3^2 + 2*d*n10*n3^2 - 8*n11*n3^2 + 5*d*n11*n3^2 - 
      2*n10*n11*n3^2 - 2*n3^3 + 2*d*n3^3 - 2*n11*n3^3)*
     j[p4a, -1, 0, 1 + n3, 0, 0, 1, 0, 1, 0, n10, n11, 0, 0, 1])/
    ((-4 + 3*d - n10 - n11 - 2*n3)*(d - n10 - n11 - n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) + 
   ((-2 + d)*(-8*n3 + 7*d*n3 - 2*n10*n3 - 4*n11*n3 - 2*n3^2)*
     j[p4a, -1, 0, 1 + n3, 0, 0, 1, 0, 1, 0, n10, n11, 0, 1, 0])/
    ((-4 + 3*d - n10 - n11 - 2*n3)*(-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 
      4*d*n3 + 4*n11*n3)) - ((-2 + d)*n10*(-8 + 7*d - 2*n10 - 4*n11 - 2*n3)*
     j[p4a, 0, -1, n3, 0, 0, 0, 0, 1, 0, 1 + n10, n11, 0, 1, 1])/
    ((-4 + 3*d - n10 - n11 - 2*n3)*(-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 
      4*d*n3 + 4*n11*n3)) + (2*n11*(-24 + 30*d - 9*d^2 - 6*n10 + 3*d*n10 - 
      6*n11 + 3*d*n11 - 12*n3 + 8*d*n3 - 2*n10*n3 - 2*n11*n3 - 2*n3^2)*
     j[p4a, 0, -1, n3, 0, 0, 1, 0, 0, 0, n10, 1 + n11, 0, 1, 1])/
    ((4 - 3*d + n10 + n11 + 2*n3)*(6*d - 3*d^2 - 12*n11 + 6*d*n11 - 4*n3 + 
      4*d*n3 - 4*n11*n3)) + (2*n10*(-8 + 14*d - 5*d^2 - 2*n10 + d*n10 - 
      10*n11 + 5*d*n11 - 4*n3 + 3*d*n3 - 2*n11*n3)*j[p4a, 0, -1, n3, 0, 0, 1, 
      0, 0, 0, 1 + n10, n11, 0, 1, 1])/((4 - 3*d + n10 + n11 + 2*n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) + 
   ((32 - 48*d + 2*d^2 + 21*d^3 - 7*d^4 - 24*n10 + 62*d*n10 - 51*d^2*n10 + 
      13*d^3*n10 - 8*n10^2 + 12*d*n10^2 - 4*d^2*n10^2 - 8*n11 + 74*d*n11 - 
      79*d^2*n11 + 22*d^3*n11 - 36*n10*n11 + 56*d*n10*n11 - 19*d^2*n10*n11 - 
      8*n10^2*n11 + 4*d*n10^2*n11 - 44*n11^2 + 56*d*n11^2 - 17*d^2*n11^2 - 
      12*n10*n11^2 + 6*d*n10*n11^2 - 4*n11^3 + 2*d*n11^3 - 16*n3 + 56*d*n3 - 
      60*d^2*n3 + 20*d^3*n3 - 24*n10*n3 + 44*d*n10*n3 - 20*d^2*n10*n3 - 
      4*n10^2*n3 + 4*d*n10^2*n3 - 40*n11*n3 + 84*d*n11*n3 - 40*d^2*n11*n3 - 
      32*n10*n11*n3 + 28*d*n10*n11*n3 - 4*n10^2*n11*n3 - 28*n11^2*n3 + 
      24*d*n11^2*n3 - 8*n10*n11^2*n3 - 4*n11^3*n3 - 16*n3^2 + 32*d*n3^2 - 
      16*d^2*n3^2 - 8*n10*n3^2 + 8*d*n10*n3^2 - 24*n11*n3^2 + 24*d*n11*n3^2 - 
      8*n10*n11*n3^2 - 8*n11^2*n3^2 - 4*n3^3 + 4*d*n3^3 - 4*n11*n3^3)*
     j[p4a, 0, -1, n3, 0, 0, 1, 0, 1, 0, n10, n11, 0, 0, 2])/
    ((-2 + d)*(-4 + 3*d - n10 - n11 - 2*n3)*(d - n10 - n11 - n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) + 
   (2*n10*(-8 + 14*d - 5*d^2 - 2*n10 + d*n10 - 10*n11 + 5*d*n11 - 4*n3 + 
      3*d*n3 - 2*n11*n3)*j[p4a, 0, -1, n3, 0, 0, 1, 0, 1, 0, 1 + n10, n11, 0, 
      0, 1])/((4 - 3*d + n10 + n11 + 2*n3)*(-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 
      4*n3 - 4*d*n3 + 4*n11*n3)) + 
   ((-16 + 32*d - 20*d^2 + 4*d^3 - 4*n10 + 6*d*n10 - 2*d^2*n10 - 12*n11 + 
      10*d*n11 - 2*d^2*n11 - 4*n10*n11 + 2*d*n10*n11 + 4*n11^2 - 2*d*n11^2 - 
      8*n3 + 13*d*n3 - 5*d^2*n3 - 2*n10*n3 + 2*d*n10*n3 - 8*n11*n3 + 
      5*d*n11*n3 - 2*n10*n11*n3 - 2*n3^2 + 2*d*n3^2 - 2*n11*n3^2)*
     j[p4a, 0, -1, n3, 0, 0, 1, 0, 2, 0, n10, n11, 0, 0, 1])/
    ((-4 + 3*d - n10 - n11 - 2*n3)*(d - n10 - n11 - n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) + 
   ((32 - 84*d + 66*d^2 - 16*d^3 + 8*n10 - 14*d*n10 + 5*d^2*n10 + 64*n11 - 
      82*d*n11 + 25*d^2*n11 + 12*n10*n11 - 6*d*n10*n11 + 12*n11^2 - 
      6*d*n11^2 + 24*n3 - 42*d*n3 + 17*d^2*n3 + 4*n10*n3 - 4*d*n10*n3 + 
      32*n11*n3 - 22*d*n11*n3 + 4*n10*n11*n3 + 4*n11^2*n3 + 4*n3^2 - 
      4*d*n3^2 + 4*n11*n3^2)*j[p4a, 0, -1, n3, 0, 0, 2, 0, 0, 0, n10, n11, 0, 
      1, 1])/((-2 + d)*(-4 + 3*d - n10 - n11 - 2*n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) - 
   ((-1 + d - n11)*(32 - 38*d + 11*d^2 + 8*n10 - 4*d*n10 + 4*n11 - 2*d*n11 + 
      20*n3 - 14*d*n3 + 4*n10*n3 + 4*n11*n3 + 4*n3^2)*
     j[p4a, 0, -1, n3, 0, 0, 2, 0, 1, 0, n10, n11, 0, 0, 1])/
    ((-2 + d)*(-4 + 3*d - n10 - n11 - 2*n3)*(-6*d + 3*d^2 + 12*n11 - 
      6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) - 
   ((-1 + d - n11)*(32 - 38*d + 11*d^2 + 8*n10 - 4*d*n10 + 4*n11 - 2*d*n11 + 
      20*n3 - 14*d*n3 + 4*n10*n3 + 4*n11*n3 + 4*n3^2)*
     j[p4a, 0, -1, n3, 0, 0, 2, 0, 1, 0, n10, n11, 0, 1, 0])/
    ((-2 + d)*(-4 + 3*d - n10 - n11 - 2*n3)*(-6*d + 3*d^2 + 12*n11 - 
      6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) + 
   ((-16*n3 + 32*d*n3 - 20*d^2*n3 + 4*d^3*n3 - 4*n10*n3 + 6*d*n10*n3 - 
      2*d^2*n10*n3 - 12*n11*n3 + 10*d*n11*n3 - 2*d^2*n11*n3 - 4*n10*n11*n3 + 
      2*d*n10*n11*n3 + 4*n11^2*n3 - 2*d*n11^2*n3 - 8*n3^2 + 13*d*n3^2 - 
      5*d^2*n3^2 - 2*n10*n3^2 + 2*d*n10*n3^2 - 8*n11*n3^2 + 5*d*n11*n3^2 - 
      2*n10*n11*n3^2 - 2*n3^3 + 2*d*n3^3 - 2*n11*n3^3)*
     j[p4a, 0, -1, 1 + n3, 0, 0, 1, 0, 1, 0, n10, n11, 0, 0, 1])/
    ((-4 + 3*d - n10 - n11 - 2*n3)*(d - n10 - n11 - n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) + 
   ((-2 + d)*(-8*n3 + 7*d*n3 - 2*n10*n3 - 4*n11*n3 - 2*n3^2)*
     j[p4a, 0, -1, 1 + n3, 0, 0, 1, 0, 1, 0, n10, n11, 0, 1, 0])/
    ((-4 + 3*d - n10 - n11 - 2*n3)*(-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 
      4*d*n3 + 4*n11*n3)) + ((16 - 48*d + 55*d^2 - 19*d^3 + 20*n10 - 
      45*d*n10 + 20*d^2*n10 + 4*n10^2 - 3*d*n10^2 + 28*n11 - 79*d*n11 + 
      39*d^2*n11 + 42*n10*n11 - 29*d*n10*n11 + 2*n10^2*n11 + 30*n11^2 - 
      24*d*n11^2 + 6*n10*n11^2 + 4*n11^3 + 24*n3 - 58*d*n3 + 29*d^2*n3 + 
      16*n10*n3 - 14*d*n10*n3 + 52*n11*n3 - 44*d*n11*n3 + 12*n10*n11*n3 + 
      12*n11^2*n3 + 12*n3^2 - 11*d*n3^2 + 10*n11*n3^2)*
     j[p4a, 0, 0, -1 + n3, 0, 0, 0, 0, 1, 0, n10, n11, 0, 1, 2])/
    ((-4 + 3*d - n10 - n11 - 2*n3)*(d - n10 - n11 - n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) - 
   ((-2 + d)*n10*(-8 + 7*d - 2*n10 - 4*n11 - 2*n3)*j[p4a, 0, 0, -1 + n3, 0, 
      0, 0, 0, 1, 0, 1 + n10, n11, 0, 1, 1])/((-4 + 3*d - n10 - n11 - 2*n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) + 
   ((16 - 48*d + 55*d^2 - 19*d^3 + 20*n10 - 45*d*n10 + 20*d^2*n10 + 4*n10^2 - 
      3*d*n10^2 + 28*n11 - 79*d*n11 + 39*d^2*n11 + 42*n10*n11 - 
      29*d*n10*n11 + 2*n10^2*n11 + 30*n11^2 - 24*d*n11^2 + 6*n10*n11^2 + 
      4*n11^3 + 24*n3 - 58*d*n3 + 29*d^2*n3 + 16*n10*n3 - 14*d*n10*n3 + 
      52*n11*n3 - 44*d*n11*n3 + 12*n10*n11*n3 + 12*n11^2*n3 + 12*n3^2 - 
      11*d*n3^2 + 10*n11*n3^2)*j[p4a, 0, 0, -1 + n3, 0, 0, 1, 0, 0, 0, n10, 
      n11, 0, 1, 2])/((-4 + 3*d - n10 - n11 - 2*n3)*(d - n10 - n11 - n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) + 
   ((96 - 176*d + 110*d^2 - 23*d^3 + 56*n10 - 70*d*n10 + 21*d^2*n10 + 
      8*n10^2 - 4*d*n10^2 + 8*n11 - 18*d*n11 + 7*d^2*n11 + 12*n10*n11 - 
      6*d*n10*n11 + 4*n11^2 - 2*d*n11^2 + 80*n3 - 96*d*n3 + 26*d^2*n3 + 
      24*n10*n3 - 10*d*n10*n3 + 8*n11*n3 + 2*d*n11*n3 - 4*n10*n11*n3 - 
      4*n11^2*n3 + 16*n3^2 - 6*d*n3^2 - 4*n11*n3^2)*
     j[p4a, 0, 0, -1 + n3, 0, 0, 1, 0, 0, 0, n10, n11, 0, 2, 1])/
    (2*(-4 + 3*d - n10 - n11 - 2*n3)*(d - n10 - n11 - n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) + 
   ((64 - 156*d + 114*d^2 - 26*d^3 + 16*n10 - 22*d*n10 + 7*d^2*n10 + 
      104*n11 - 122*d*n11 + 35*d^2*n11 + 12*n10*n11 - 6*d*n10*n11 + 
      12*n11^2 - 6*d*n11^2 + 40*n3 - 62*d*n3 + 23*d^2*n3 + 4*n10*n3 - 
      4*d*n10*n3 + 40*n11*n3 - 26*d*n11*n3 + 4*n10*n11*n3 + 4*n11^2*n3 + 
      4*n3^2 - 4*d*n3^2 + 4*n11*n3^2)*j[p4a, 0, 0, -1 + n3, 0, 0, 1, 0, 1, 0, 
      n10, n11, 0, 0, 2])/((-2 + d)*(-4 + 3*d - n10 - n11 - 2*n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) + 
   ((128 - 224*d + 56*d^2 + 66*d^3 - 27*d^4 - 32*n10 + 240*d*n10 - 
      286*d^2*n10 + 87*d^3*n10 - 80*n10^2 + 156*d*n10^2 - 58*d^2*n10^2 - 
      16*n10^3 + 8*d*n10^3 - 32*n11 + 208*d*n11 - 222*d^2*n11 + 63*d^3*n11 - 
      224*n10*n11 + 352*d*n10*n11 - 120*d^2*n10*n11 - 104*n10^2*n11 + 
      52*d*n10^2*n11 - 48*n11^2 + 60*d*n11^2 - 18*d^2*n11^2 - 24*n10*n11^2 + 
      12*d*n10*n11^2 + 64*n3 + 48*d*n3 - 176*d^2*n3 + 72*d^3*n3 - 
      128*n10*n3 + 296*d*n10*n3 - 130*d^2*n10*n3 - 56*n10^2*n3 + 
      40*d*n10^2*n3 - 160*n11*n3 + 312*d*n11*n3 - 126*d^2*n11*n3 - 
      224*n10*n11*n3 + 144*d*n10*n11*n3 - 24*n10^2*n11*n3 - 40*n11^2*n3 + 
      24*d*n11^2*n3 - 8*n10*n11^2*n3 - 32*n3^2 + 112*d*n3^2 - 60*d^2*n3^2 - 
      56*n10*n3^2 + 48*d*n10*n3^2 - 104*n11*n3^2 + 80*d*n11*n3^2 - 
      40*n10*n11*n3^2 - 8*n11^2*n3^2 - 16*n3^3 + 16*d*n3^3 - 16*n11*n3^3)*
     j[p4a, 0, 0, -1 + n3, 0, 0, 1, 0, 1, 0, n10, n11, 0, 1, 1])/
    (2*(-4 + 3*d - n10 - n11 - 2*n3)*(d - n10 - n11 - n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) + 
   ((7*d - 5*d^2 + d*n10 - 14*n11 + 12*d*n11 - 2*n10*n11 - 4*n11^2 - 2*n3 + 
      3*d*n3 - 4*n11*n3)*j[p4a, 0, 0, -1 + n3, 0, 0, 2, 0, 0, 0, n10, n11, 0, 
      1, 1])/((-4 + 3*d - n10 - n11 - 2*n3)*(-6*d + 3*d^2 + 12*n11 - 
      6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) + 
   ((-16 + 48*d - 55*d^2 + 19*d^3 - 20*n10 + 45*d*n10 - 20*d^2*n10 - 
      4*n10^2 + 3*d*n10^2 - 28*n11 + 79*d*n11 - 39*d^2*n11 - 42*n10*n11 + 
      29*d*n10*n11 - 2*n10^2*n11 - 30*n11^2 + 24*d*n11^2 - 6*n10*n11^2 - 
      4*n11^3 - 24*n3 + 58*d*n3 - 29*d^2*n3 - 16*n10*n3 + 14*d*n10*n3 - 
      52*n11*n3 + 44*d*n11*n3 - 12*n10*n11*n3 - 12*n11^2*n3 - 12*n3^2 + 
      11*d*n3^2 - 10*n11*n3^2)*j[p4a, 0, 0, n3, -1, 0, 0, 0, 1, 0, n10, n11, 
      0, 1, 2])/((-4 + 3*d - n10 - n11 - 2*n3)*(d - n10 - n11 - n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) + 
   ((-16 + 48*d - 55*d^2 + 19*d^3 - 20*n10 + 45*d*n10 - 20*d^2*n10 - 
      4*n10^2 + 3*d*n10^2 - 28*n11 + 79*d*n11 - 39*d^2*n11 - 42*n10*n11 + 
      29*d*n10*n11 - 2*n10^2*n11 - 30*n11^2 + 24*d*n11^2 - 6*n10*n11^2 - 
      4*n11^3 - 24*n3 + 58*d*n3 - 29*d^2*n3 - 16*n10*n3 + 14*d*n10*n3 - 
      52*n11*n3 + 44*d*n11*n3 - 12*n10*n11*n3 - 12*n11^2*n3 - 12*n3^2 + 
      11*d*n3^2 - 10*n11*n3^2)*j[p4a, 0, 0, n3, -1, 0, 1, 0, 0, 0, n10, n11, 
      0, 1, 2])/((-4 + 3*d - n10 - n11 - 2*n3)*(d - n10 - n11 - n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) + 
   (2*n11*(-24 + 30*d - 9*d^2 - 6*n10 + 3*d*n10 - 6*n11 + 3*d*n11 - 12*n3 + 
      8*d*n3 - 2*n10*n3 - 2*n11*n3 - 2*n3^2)*j[p4a, 0, 0, n3, -1, 0, 1, 0, 0, 
      0, n10, 1 + n11, 0, 1, 1])/((4 - 3*d + n10 + n11 + 2*n3)*
     (6*d - 3*d^2 - 12*n11 + 6*d*n11 - 4*n3 + 4*d*n3 - 4*n11*n3)) + 
   ((-16 + 48*d - 55*d^2 + 19*d^3 - 20*n10 + 45*d*n10 - 20*d^2*n10 - 
      4*n10^2 + 3*d*n10^2 - 28*n11 + 79*d*n11 - 39*d^2*n11 - 42*n10*n11 + 
      29*d*n10*n11 - 2*n10^2*n11 - 30*n11^2 + 24*d*n11^2 - 6*n10*n11^2 - 
      4*n11^3 - 24*n3 + 58*d*n3 - 29*d^2*n3 - 16*n10*n3 + 14*d*n10*n3 - 
      52*n11*n3 + 44*d*n11*n3 - 12*n10*n11*n3 - 12*n11^2*n3 - 12*n3^2 + 
      11*d*n3^2 - 10*n11*n3^2)*j[p4a, 0, 0, n3, -1, 0, 1, 0, 1, 0, n10, n11, 
      0, 0, 2])/((-4 + 3*d - n10 - n11 - 2*n3)*(d - n10 - n11 - n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) - 
   ((-2 + d)*(-8 + 7*d - 2*n10 - 4*n11 - 2*n3)*j[p4a, 0, 0, n3, -1, 0, 1, 0, 
      2, 0, n10, n11, 0, 0, 1])/((-4 + 3*d - n10 - n11 - 2*n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) + 
   ((-7*d + 5*d^2 - d*n10 + 14*n11 - 12*d*n11 + 2*n10*n11 + 4*n11^2 + 2*n3 - 
      3*d*n3 + 4*n11*n3)*j[p4a, 0, 0, n3, -1, 0, 2, 0, 0, 0, n10, n11, 0, 1, 
      1])/((-4 + 3*d - n10 - n11 - 2*n3)*(-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 
      4*n3 - 4*d*n3 + 4*n11*n3)) + 
   ((-7*d + 5*d^2 - d*n10 + 14*n11 - 12*d*n11 + 2*n10*n11 + 4*n11^2 + 2*n3 - 
      3*d*n3 + 4*n11*n3)*j[p4a, 0, 0, n3, -1, 0, 2, 0, 1, 0, n10, n11, 0, 0, 
      1])/((-4 + 3*d - n10 - n11 - 2*n3)*(-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 
      4*n3 - 4*d*n3 + 4*n11*n3)) + 
   ((-7*d + 5*d^2 - d*n10 + 14*n11 - 12*d*n11 + 2*n10*n11 + 4*n11^2 + 2*n3 - 
      3*d*n3 + 4*n11*n3)*j[p4a, 0, 0, n3, -1, 0, 2, 0, 1, 0, n10, n11, 0, 1, 
      0])/((-4 + 3*d - n10 - n11 - 2*n3)*(-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 
      4*n3 - 4*d*n3 + 4*n11*n3)) + 
   ((-32 + 48*d - 2*d^2 - 21*d^3 + 7*d^4 + 24*n10 - 62*d*n10 + 51*d^2*n10 - 
      13*d^3*n10 + 8*n10^2 - 12*d*n10^2 + 4*d^2*n10^2 + 8*n11 - 74*d*n11 + 
      79*d^2*n11 - 22*d^3*n11 + 36*n10*n11 - 56*d*n10*n11 + 19*d^2*n10*n11 + 
      8*n10^2*n11 - 4*d*n10^2*n11 + 44*n11^2 - 56*d*n11^2 + 17*d^2*n11^2 + 
      12*n10*n11^2 - 6*d*n10*n11^2 + 4*n11^3 - 2*d*n11^3 + 16*n3 - 56*d*n3 + 
      60*d^2*n3 - 20*d^3*n3 + 24*n10*n3 - 44*d*n10*n3 + 20*d^2*n10*n3 + 
      4*n10^2*n3 - 4*d*n10^2*n3 + 40*n11*n3 - 84*d*n11*n3 + 40*d^2*n11*n3 + 
      32*n10*n11*n3 - 28*d*n10*n11*n3 + 4*n10^2*n11*n3 + 28*n11^2*n3 - 
      24*d*n11^2*n3 + 8*n10*n11^2*n3 + 4*n11^3*n3 + 16*n3^2 - 32*d*n3^2 + 
      16*d^2*n3^2 + 8*n10*n3^2 - 8*d*n10*n3^2 + 24*n11*n3^2 - 24*d*n11*n3^2 + 
      8*n10*n11*n3^2 + 8*n11^2*n3^2 + 4*n3^3 - 4*d*n3^3 + 4*n11*n3^3)*
     j[p4a, 0, 0, n3, 0, -1, 0, 0, 1, 0, n10, n11, 0, 1, 2])/
    ((-2 + d)*(-4 + 3*d - n10 - n11 - 2*n3)*(d - n10 - n11 - n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) + 
   ((-32 + 48*d - 2*d^2 - 21*d^3 + 7*d^4 + 24*n10 - 62*d*n10 + 51*d^2*n10 - 
      13*d^3*n10 + 8*n10^2 - 12*d*n10^2 + 4*d^2*n10^2 + 8*n11 - 74*d*n11 + 
      79*d^2*n11 - 22*d^3*n11 + 36*n10*n11 - 56*d*n10*n11 + 19*d^2*n10*n11 + 
      8*n10^2*n11 - 4*d*n10^2*n11 + 44*n11^2 - 56*d*n11^2 + 17*d^2*n11^2 + 
      12*n10*n11^2 - 6*d*n10*n11^2 + 4*n11^3 - 2*d*n11^3 + 16*n3 - 56*d*n3 + 
      60*d^2*n3 - 20*d^3*n3 + 24*n10*n3 - 44*d*n10*n3 + 20*d^2*n10*n3 + 
      4*n10^2*n3 - 4*d*n10^2*n3 + 40*n11*n3 - 84*d*n11*n3 + 40*d^2*n11*n3 + 
      32*n10*n11*n3 - 28*d*n10*n11*n3 + 4*n10^2*n11*n3 + 28*n11^2*n3 - 
      24*d*n11^2*n3 + 8*n10*n11^2*n3 + 4*n11^3*n3 + 16*n3^2 - 32*d*n3^2 + 
      16*d^2*n3^2 + 8*n10*n3^2 - 8*d*n10*n3^2 + 24*n11*n3^2 - 24*d*n11*n3^2 + 
      8*n10*n11*n3^2 + 8*n11^2*n3^2 + 4*n3^3 - 4*d*n3^3 + 4*n11*n3^3)*
     j[p4a, 0, 0, n3, 0, -1, 1, 0, 0, 0, n10, n11, 0, 1, 2])/
    ((-2 + d)*(-4 + 3*d - n10 - n11 - 2*n3)*(d - n10 - n11 - n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) + 
   (2*(8 - 8*d + 2*d^2 + 2*n10 - d*n10 - 2*n11 + d*n11 + 8*n3 - 6*d*n3 + 
      2*n10*n3 + 2*n11*n3 + 2*n3^2)*j[p4a, 0, 0, n3, 0, -1, 1, 0, 0, 0, n10, 
      n11, 0, 2, 1])/((-4 + 3*d - n10 - n11 - 2*n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) - 
   (2*n11*(-24 + 30*d - 9*d^2 - 6*n10 + 3*d*n10 - 6*n11 + 3*d*n11 - 12*n3 + 
      8*d*n3 - 2*n10*n3 - 2*n11*n3 - 2*n3^2)*j[p4a, 0, 0, n3, 0, -1, 1, 0, 0, 
      0, n10, 1 + n11, 0, 1, 1])/((4 - 3*d + n10 + n11 + 2*n3)*
     (6*d - 3*d^2 - 12*n11 + 6*d*n11 - 4*n3 + 4*d*n3 - 4*n11*n3)) + 
   ((-32 + 48*d - 2*d^2 - 21*d^3 + 7*d^4 + 24*n10 - 62*d*n10 + 51*d^2*n10 - 
      13*d^3*n10 + 8*n10^2 - 12*d*n10^2 + 4*d^2*n10^2 + 8*n11 - 74*d*n11 + 
      79*d^2*n11 - 22*d^3*n11 + 36*n10*n11 - 56*d*n10*n11 + 19*d^2*n10*n11 + 
      8*n10^2*n11 - 4*d*n10^2*n11 + 44*n11^2 - 56*d*n11^2 + 17*d^2*n11^2 + 
      12*n10*n11^2 - 6*d*n10*n11^2 + 4*n11^3 - 2*d*n11^3 + 16*n3 - 56*d*n3 + 
      60*d^2*n3 - 20*d^3*n3 + 24*n10*n3 - 44*d*n10*n3 + 20*d^2*n10*n3 + 
      4*n10^2*n3 - 4*d*n10^2*n3 + 40*n11*n3 - 84*d*n11*n3 + 40*d^2*n11*n3 + 
      32*n10*n11*n3 - 28*d*n10*n11*n3 + 4*n10^2*n11*n3 + 28*n11^2*n3 - 
      24*d*n11^2*n3 + 8*n10*n11^2*n3 + 4*n11^3*n3 + 16*n3^2 - 32*d*n3^2 + 
      16*d^2*n3^2 + 8*n10*n3^2 - 8*d*n10*n3^2 + 24*n11*n3^2 - 24*d*n11*n3^2 + 
      8*n10*n11*n3^2 + 8*n11^2*n3^2 + 4*n3^3 - 4*d*n3^3 + 4*n11*n3^3)*
     j[p4a, 0, 0, n3, 0, -1, 1, 0, 1, 0, n10, n11, 0, 0, 2])/
    ((-2 + d)*(-4 + 3*d - n10 - n11 - 2*n3)*(d - n10 - n11 - n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) + 
   ((-32 + 70*d - 49*d^2 + 11*d^3 - 8*n10 + 12*d*n10 - 4*d^2*n10 - 36*n11 + 
      44*d*n11 - 13*d^2*n11 - 8*n10*n11 + 4*d*n10*n11 - 4*n11^2 + 2*d*n11^2 - 
      20*n3 + 34*d*n3 - 14*d^2*n3 - 4*n10*n3 + 4*d*n10*n3 - 24*n11*n3 + 
      18*d*n11*n3 - 4*n10*n11*n3 - 4*n11^2*n3 - 4*n3^2 + 4*d*n3^2 - 
      4*n11*n3^2)*j[p4a, 0, 0, n3, 0, -1, 2, 0, 0, 0, n10, n11, 0, 1, 1])/
    ((-2 + d)*(-4 + 3*d - n10 - n11 - 2*n3)*(-6*d + 3*d^2 + 12*n11 - 
      6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) + 
   ((-32 + 70*d - 49*d^2 + 11*d^3 - 8*n10 + 12*d*n10 - 4*d^2*n10 - 36*n11 + 
      44*d*n11 - 13*d^2*n11 - 8*n10*n11 + 4*d*n10*n11 - 4*n11^2 + 2*d*n11^2 - 
      20*n3 + 34*d*n3 - 14*d^2*n3 - 4*n10*n3 + 4*d*n10*n3 - 24*n11*n3 + 
      18*d*n11*n3 - 4*n10*n11*n3 - 4*n11^2*n3 - 4*n3^2 + 4*d*n3^2 - 
      4*n11*n3^2)*j[p4a, 0, 0, n3, 0, -1, 2, 0, 1, 0, n10, n11, 0, 0, 1])/
    ((-2 + d)*(-4 + 3*d - n10 - n11 - 2*n3)*(-6*d + 3*d^2 + 12*n11 - 
      6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) + 
   ((-32 + 70*d - 49*d^2 + 11*d^3 - 8*n10 + 12*d*n10 - 4*d^2*n10 - 36*n11 + 
      44*d*n11 - 13*d^2*n11 - 8*n10*n11 + 4*d*n10*n11 - 4*n11^2 + 2*d*n11^2 - 
      20*n3 + 34*d*n3 - 14*d^2*n3 - 4*n10*n3 + 4*d*n10*n3 - 24*n11*n3 + 
      18*d*n11*n3 - 4*n10*n11*n3 - 4*n11^2*n3 - 4*n3^2 + 4*d*n3^2 - 
      4*n11*n3^2)*j[p4a, 0, 0, n3, 0, -1, 2, 0, 1, 0, n10, n11, 0, 1, 0])/
    ((-2 + d)*(-4 + 3*d - n10 - n11 - 2*n3)*(-6*d + 3*d^2 + 12*n11 - 
      6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) + 
   ((-2 + d)*n10*(-8 + 7*d - 2*n10 - 4*n11 - 2*n3)*j[p4a, 0, 0, n3, 0, 0, 0, 
      -1, 1, 0, 1 + n10, n11, 0, 1, 1])/((-4 + 3*d - n10 - n11 - 2*n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) + 
   ((64 - 156*d + 114*d^2 - 26*d^3 + 48*n10 - 82*d*n10 + 43*d^2*n10 - 
      7*d^3*n10 + 8*n10^2 - 8*d*n10^2 + 2*d^2*n10^2 + 136*n11 - 182*d*n11 + 
      71*d^2*n11 - 7*d^3*n11 + 36*n10*n11 - 30*d*n10*n11 + 6*d^2*n10*n11 + 
      28*n11^2 - 22*d*n11^2 + 4*d^2*n11^2 + 40*n3 - 62*d*n3 + 23*d^2*n3 + 
      12*n10*n3 - 12*d*n10*n3 + 2*d^2*n10*n3 + 48*n11*n3 - 34*d*n11*n3 + 
      2*d^2*n11*n3 + 4*n10*n11*n3 + 4*n11^2*n3 + 4*n3^2 - 4*d*n3^2 + 
      4*n11*n3^2)*j[p4a, 0, 0, n3, 0, 0, 0, 0, 1, 0, n10, n11, 0, 1, 1])/
    ((-2 + d)*(-4 + 3*d - n10 - n11 - 2*n3)*(-6*d + 3*d^2 + 12*n11 - 
      6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) - 
   (n11*(-32 + 38*d - 11*d^2 - 8*n10 + 4*d*n10 - 4*n11 + 2*d*n11 - 20*n3 + 
      14*d*n3 - 4*n10*n3 - 4*n11*n3 - 4*n3^2)*j[p4a, 0, 0, n3, 0, 0, 0, 0, 1, 
      0, n10, 1 + n11, -1, 1, 1])/((4 - 3*d + n10 + n11 + 2*n3)*
     (6*d - 3*d^2 - 12*n11 + 6*d*n11 - 4*n3 + 4*d*n3 - 4*n11*n3)) + 
   (n11*(-32 + 38*d - 11*d^2 - 8*n10 + 4*d*n10 - 4*n11 + 2*d*n11 - 20*n3 + 
      14*d*n3 - 4*n10*n3 - 4*n11*n3 - 4*n3^2)*j[p4a, 0, 0, n3, 0, 0, 0, 0, 1, 
      0, n10, 1 + n11, 0, 1, 1])/((4 - 3*d + n10 + n11 + 2*n3)*
     (6*d - 3*d^2 - 12*n11 + 6*d*n11 - 4*n3 + 4*d*n3 - 4*n11*n3)) - 
   ((-2 + d)*n10*(-8 + 7*d - 2*n10 - 4*n11 - 2*n3)*j[p4a, 0, 0, n3, 0, 0, 0, 
      0, 1, 0, 1 + n10, n11, -1, 1, 1])/((-4 + 3*d - n10 - n11 - 2*n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) + 
   ((-2 + d)*n10*(-8 + 7*d - 2*n10 - 4*n11 - 2*n3)*j[p4a, 0, 0, n3, 0, 0, 0, 
      0, 1, 0, 1 + n10, n11, 0, 1, 1])/((-4 + 3*d - n10 - n11 - 2*n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) - 
   ((-2 + d)*(-8 + 7*d - 2*n10 - 4*n11 - 2*n3)*j[p4a, 0, 0, n3, 0, 0, 0, 0, 
      2, 0, n10, -1 + n11, 0, 1, 1])/((-4 + 3*d - n10 - n11 - 2*n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) + 
   ((-2 + d)*(-8 + 7*d - 2*n10 - 4*n11 - 2*n3)*j[p4a, 0, 0, n3, 0, 0, 0, 0, 
      2, 0, n10, n11, -1, 1, 1])/((-4 + 3*d - n10 - n11 - 2*n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) + 
   ((-96 + 176*d - 110*d^2 + 23*d^3 - 56*n10 + 70*d*n10 - 21*d^2*n10 - 
      8*n10^2 + 4*d*n10^2 - 8*n11 + 18*d*n11 - 7*d^2*n11 - 12*n10*n11 + 
      6*d*n10*n11 - 4*n11^2 + 2*d*n11^2 - 80*n3 + 96*d*n3 - 26*d^2*n3 - 
      24*n10*n3 + 10*d*n10*n3 - 8*n11*n3 - 2*d*n11*n3 + 4*n10*n11*n3 + 
      4*n11^2*n3 - 16*n3^2 + 6*d*n3^2 + 4*n11*n3^2)*
     j[p4a, 0, 0, n3, 0, 0, 1, -1, 0, 0, n10, n11, 0, 2, 1])/
    (2*(-4 + 3*d - n10 - n11 - 2*n3)*(d - n10 - n11 - n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) - 
   (n11*(-32 + 80*d - 62*d^2 + 15*d^3 - 72*n10 + 86*d*n10 - 25*d^2*n10 - 
      16*n10^2 + 8*d*n10^2 + 8*n11 + 2*d*n11 - 3*d^2*n11 + 4*n10*n11 - 
      2*d*n10*n11 - 12*n11^2 + 6*d*n11^2 - 80*n3 + 108*d*n3 - 38*d^2*n3 - 
      56*n10*n3 + 38*d*n10*n3 - 8*n10^2*n3 + 6*d*n11*n3 - 4*n10*n11*n3 - 
      4*n11^2*n3 - 40*n3^2 + 30*d*n3^2 - 16*n10*n3^2 - 4*n11*n3^2 - 8*n3^3)*
     j[p4a, 0, 0, n3, 0, 0, 1, -1, 0, 0, n10, 1 + n11, 0, 1, 1])/
    (2*(-d + n10 + n11 + n3)*(4 - 3*d + n10 + n11 + 2*n3)*
     (6*d - 3*d^2 - 12*n11 + 6*d*n11 - 4*n3 + 4*d*n3 - 4*n11*n3)) - 
   (n10*(-16 + 48*d - 48*d^2 + 14*d^3 - 20*n10 + 38*d*n10 - 14*d^2*n10 - 
      4*n10^2 + 2*d*n10^2 - 28*n11 + 58*d*n11 - 22*d^2*n11 - 28*n10*n11 + 
      14*d*n10*n11 - 16*n11^2 + 8*d*n11^2 - 24*n3 + 49*d*n3 - 21*d^2*n3 - 
      14*n10*n3 + 10*d*n10*n3 - 36*n11*n3 + 25*d*n11*n3 - 6*n10*n11*n3 - 
      4*n11^2*n3 - 10*n3^2 + 8*d*n3^2 - 6*n11*n3^2)*
     j[p4a, 0, 0, n3, 0, 0, 1, -1, 0, 0, 1 + n10, n11, 0, 1, 1])/
    ((-d + n10 + n11 + n3)*(4 - 3*d + n10 + n11 + 2*n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) + 
   ((-32 + 48*d - 2*d^2 - 21*d^3 + 7*d^4 + 24*n10 - 62*d*n10 + 51*d^2*n10 - 
      13*d^3*n10 + 8*n10^2 - 12*d*n10^2 + 4*d^2*n10^2 + 8*n11 - 74*d*n11 + 
      79*d^2*n11 - 22*d^3*n11 + 36*n10*n11 - 56*d*n10*n11 + 19*d^2*n10*n11 + 
      8*n10^2*n11 - 4*d*n10^2*n11 + 44*n11^2 - 56*d*n11^2 + 17*d^2*n11^2 + 
      12*n10*n11^2 - 6*d*n10*n11^2 + 4*n11^3 - 2*d*n11^3 + 16*n3 - 56*d*n3 + 
      60*d^2*n3 - 20*d^3*n3 + 24*n10*n3 - 44*d*n10*n3 + 20*d^2*n10*n3 + 
      4*n10^2*n3 - 4*d*n10^2*n3 + 40*n11*n3 - 84*d*n11*n3 + 40*d^2*n11*n3 + 
      32*n10*n11*n3 - 28*d*n10*n11*n3 + 4*n10^2*n11*n3 + 28*n11^2*n3 - 
      24*d*n11^2*n3 + 8*n10*n11^2*n3 + 4*n11^3*n3 + 16*n3^2 - 32*d*n3^2 + 
      16*d^2*n3^2 + 8*n10*n3^2 - 8*d*n10*n3^2 + 24*n11*n3^2 - 24*d*n11*n3^2 + 
      8*n10*n11*n3^2 + 8*n11^2*n3^2 + 4*n3^3 - 4*d*n3^3 + 4*n11*n3^3)*
     j[p4a, 0, 0, n3, 0, 0, 1, -1, 1, 0, n10, n11, 0, 0, 2])/
    ((-2 + d)*(-4 + 3*d - n10 - n11 - 2*n3)*(d - n10 - n11 - n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) - 
   (n10*(-16 + 48*d - 48*d^2 + 14*d^3 - 20*n10 + 38*d*n10 - 14*d^2*n10 - 
      4*n10^2 + 2*d*n10^2 - 28*n11 + 58*d*n11 - 22*d^2*n11 - 28*n10*n11 + 
      14*d*n10*n11 - 16*n11^2 + 8*d*n11^2 - 24*n3 + 49*d*n3 - 21*d^2*n3 - 
      14*n10*n3 + 10*d*n10*n3 - 36*n11*n3 + 25*d*n11*n3 - 6*n10*n11*n3 - 
      4*n11^2*n3 - 10*n3^2 + 8*d*n3^2 - 6*n11*n3^2)*
     j[p4a, 0, 0, n3, 0, 0, 1, -1, 1, 0, 1 + n10, n11, 0, 0, 1])/
    ((-d + n10 + n11 + n3)*(4 - 3*d + n10 + n11 + 2*n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) - 
   ((-1 + d - n11)*(16 - 16*d + 4*d^2 + 4*n10 - 2*d*n10 - 4*n11 + 2*d*n11 + 
      8*n3 - 5*d*n3 + 2*n10*n3 + 2*n3^2)*j[p4a, 0, 0, n3, 0, 0, 1, -1, 2, 0, 
      n10, n11, 0, 0, 1])/((-4 + 3*d - n10 - n11 - 2*n3)*(d - n10 - n11 - n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) + 
   (2*n11*(-24 + 30*d - 9*d^2 - 6*n10 + 3*d*n10 - 6*n11 + 3*d*n11 - 12*n3 + 
      8*d*n3 - 2*n10*n3 - 2*n11*n3 - 2*n3^2)*j[p4a, 0, 0, n3, 0, 0, 1, 0, 0, 
      -1, n10, 1 + n11, 0, 1, 1])/((4 - 3*d + n10 + n11 + 2*n3)*
     (6*d - 3*d^2 - 12*n11 + 6*d*n11 - 4*n3 + 4*d*n3 - 4*n11*n3)) + 
   ((-2 + d)*n10*(-8 + 7*d - 2*n10 - 4*n11 - 2*n3)*j[p4a, 0, 0, n3, 0, 0, 1, 
      0, 0, -1, 1 + n10, n11, 0, 1, 1])/((-4 + 3*d - n10 - n11 - 2*n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) - 
   (n11*(32 + 16*d - 58*d^2 + 21*d^3 - 24*n10 + 58*d*n10 - 23*d^2*n10 - 
      8*n10^2 + 4*d*n10^2 - 104*n11 + 142*d*n11 - 45*d^2*n11 - 52*n10*n11 + 
      26*d*n10*n11 - 12*n11^2 + 6*d*n11^2 - 16*n3 + 60*d*n3 - 30*d^2*n3 - 
      16*n10*n3 + 14*d*n10*n3 - 72*n11*n3 + 46*d*n11*n3 - 12*n10*n11*n3 - 
      4*n11^2*n3 - 8*n3^2 + 10*d*n3^2 - 12*n11*n3^2)*
     j[p4a, 0, 0, n3, 0, 0, 1, 0, 0, 0, -1 + n10, 1 + n11, 0, 1, 1])/
    (2*(-d + n10 + n11 + n3)*(4 - 3*d + n10 + n11 + 2*n3)*
     (6*d - 3*d^2 - 12*n11 + 6*d*n11 - 4*n3 + 4*d*n3 - 4*n11*n3)) + 
   ((-192 + 624*d - 728*d^2 + 325*d^3 - 45*d^4 - 272*n10 + 556*d*n10 - 
      293*d^2*n10 + 39*d^3*n10 - 24*n10^2 - 2*d*n10^2 + 8*d^2*n10^2 + 
      8*n10^3 - 4*d*n10^3 - 336*n11 + 804*d*n11 - 487*d^2*n11 + 78*d^3*n11 - 
      344*n10*n11 + 254*d*n10*n11 - 33*d^2*n10*n11 + 12*n10^2*n11 - 
      8*d*n10^2*n11 - 208*n11^2 + 200*d*n11^2 - 39*d^2*n11^2 - 
      6*d*n10*n11^2 - 20*n11^3 + 6*d*n11^3 - 256*n3 + 540*d*n3 - 294*d^2*n3 + 
      42*d^3*n3 - 80*n10*n3 + 32*d*n10*n3 + 2*d^2*n10*n3 + 28*n10^2*n3 - 
      8*d*n10^2*n3 - 360*n11*n3 + 298*d*n11*n3 - 52*d^2*n11*n3 + 
      4*n10*n11*n3 - 4*d*n10*n11*n3 - 4*n10^2*n11*n3 - 28*n11^2*n3 + 
      14*d*n11^2*n3 - 4*n10*n11^2*n3 - 4*n11^3*n3 - 40*n3^2 - 2*d*n3^2 + 
      14*d^2*n3^2 + 48*n10*n3^2 - 20*d*n10*n3^2 + 16*n11*n3^2 - 
      24*d*n11*n3^2 + 8*n10*n11*n3^2 + 4*n11^2*n3^2 + 28*n3^3 - 16*d*n3^3 + 
      12*n11*n3^3)*j[p4a, 0, 0, n3, 0, 0, 1, 0, 0, 0, n10, n11, 0, 1, 1])/
    (2*(-4 + 3*d - n10 - n11 - 2*n3)*(d - n10 - n11 - n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) - 
   (n11*j[p4a, 0, 0, n3, 0, 0, 1, 0, 0, 0, n10, 1 + n11, -1, 1, 1])/
    (4 - 3*d + n10 + n11 + 2*n3) + 
   (n11*j[p4a, 0, 0, n3, 0, 0, 1, 0, 0, 0, n10, 1 + n11, 0, 1, 1])/
    (4 - 3*d + n10 + n11 + 2*n3) + 
   (n10*(-16 + 48*d - 48*d^2 + 14*d^3 - 20*n10 + 38*d*n10 - 14*d^2*n10 - 
      4*n10^2 + 2*d*n10^2 - 28*n11 + 58*d*n11 - 22*d^2*n11 - 28*n10*n11 + 
      14*d*n10*n11 - 16*n11^2 + 8*d*n11^2 - 24*n3 + 49*d*n3 - 21*d^2*n3 - 
      14*n10*n3 + 10*d*n10*n3 - 36*n11*n3 + 25*d*n11*n3 - 6*n10*n11*n3 - 
      4*n11^2*n3 - 10*n3^2 + 8*d*n3^2 - 6*n11*n3^2)*
     j[p4a, 0, 0, n3, 0, 0, 1, 0, 0, 0, 1 + n10, -1 + n11, 0, 1, 1])/
    ((-d + n10 + n11 + n3)*(4 - 3*d + n10 + n11 + 2*n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) + 
   ((-16 + 32*d - 20*d^2 + 4*d^3 - 4*n10 + 6*d*n10 - 2*d^2*n10 - 12*n11 + 
      10*d*n11 - 2*d^2*n11 - 4*n10*n11 + 2*d*n10*n11 + 4*n11^2 - 2*d*n11^2 - 
      8*n3 + 13*d*n3 - 5*d^2*n3 - 2*n10*n3 + 2*d*n10*n3 - 8*n11*n3 + 
      5*d*n11*n3 - 2*n10*n11*n3 - 2*n3^2 + 2*d*n3^2 - 2*n11*n3^2)*
     j[p4a, 0, 0, n3, 0, 0, 1, 0, 1, -1, n10, n11, 0, 0, 2])/
    ((-4 + 3*d - n10 - n11 - 2*n3)*(d - n10 - n11 - n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) + 
   ((-2 + d)*n10*(-8 + 7*d - 2*n10 - 4*n11 - 2*n3)*j[p4a, 0, 0, n3, 0, 0, 1, 
      0, 1, -1, 1 + n10, n11, 0, 0, 1])/((-4 + 3*d - n10 - n11 - 2*n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) + 
   ((-256 + 672*d - 624*d^2 + 242*d^3 - 33*d^4 - 192*n10 + 328*d*n10 - 
      166*d^2*n10 + 25*d^3*n10 - 32*n10^2 + 20*d*n10^2 - 2*d^2*n10^2 - 
      128*n11 + 152*d*n11 - 38*d^2*n11 - 3*d^3*n11 - 16*n10*n11 - 
      32*d*n10*n11 + 20*d^2*n10*n11 + 24*n10^2*n11 - 12*d*n10^2*n11 + 
      48*n11^2 - 60*d*n11^2 + 18*d^2*n11^2 + 24*n10*n11^2 - 12*d*n10*n11^2 - 
      320*n3 + 608*d*n3 - 356*d^2*n3 + 64*d^3*n3 - 144*n10*n3 + 
      144*d*n10*n3 - 30*d^2*n10*n3 - 8*n10^2*n3 - 112*n11*n3 + 64*d*n11*n3 + 
      2*d^2*n11*n3 + 16*n10*n11*n3 - 24*d*n10*n11*n3 + 8*n10^2*n11*n3 + 
      40*n11^2*n3 - 24*d*n11^2*n3 + 8*n10*n11^2*n3 - 128*n3^2 + 152*d*n3^2 - 
      40*d^2*n3^2 - 24*n10*n3^2 + 8*d*n10*n3^2 - 24*n11*n3^2 + 
      8*n10*n11*n3^2 + 8*n11^2*n3^2 - 16*n3^3 + 8*d*n3^3)*
     j[p4a, 0, 0, n3, 0, 0, 1, 0, 1, 0, -1 + n10, n11, 0, 1, 1])/
    (2*(-4 + 3*d - n10 - n11 - 2*n3)*(d - n10 - n11 - n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) + 
   ((128 - 224*d - 72*d^2 + 350*d^3 - 227*d^4 + 45*d^5 - 96*n10 + 400*d*n10 - 
      542*d^2*n10 + 293*d^3*n10 - 55*d^4*n10 - 32*n10^2 + 64*d*n10^2 - 
      40*d^2*n10^2 + 8*d^3*n10^2 - 96*n11 + 784*d*n11 - 1342*d^2*n11 + 
      823*d^3*n11 - 168*d^4*n11 - 352*n10*n11 + 840*d*n10*n11 - 
      594*d^2*n10*n11 + 131*d^3*n10*n11 - 32*n10^2*n11 + 32*d*n10^2*n11 - 
      8*d^2*n10^2*n11 - 416*n11^2 + 1088*d*n11^2 - 830*d^2*n11^2 + 
      195*d^3*n11^2 - 280*n10*n11^2 + 316*d*n10*n11^2 - 88*d^2*n10*n11^2 - 
      216*n11^3 + 276*d*n11^3 - 84*d^2*n11^3 - 24*n10*n11^3 + 
      12*d*n10*n11^3 - 24*n11^4 + 12*d*n11^4 + 304*d*n3 - 704*d^2*n3 + 
      526*d^3*n3 - 126*d^4*n3 - 144*n10*n3 + 404*d*n10*n3 - 356*d^2*n10*n3 + 
      96*d^3*n10*n3 - 16*n10^2*n3 + 24*d*n10^2*n3 - 8*d^2*n10^2*n3 - 
      464*n11*n3 + 1500*d*n11*n3 - 1392*d^2*n11*n3 + 386*d^3*n11*n3 - 
      344*n10*n11*n3 + 568*d*n10*n11*n3 - 204*d^2*n10*n11*n3 - 
      16*n10^2*n11*n3 + 8*d*n10^2*n11*n3 - 632*n11^2*n3 + 1000*d*n11^2*n3 - 
      360*d^2*n11^2*n3 - 208*n10*n11^2*n3 + 116*d*n10*n11^2*n3 - 
      176*n11^3*n3 + 108*d*n11^3*n3 - 8*n10*n11^3*n3 - 8*n11^4*n3 - 96*n3^2 + 
      336*d*n3^2 - 352*d^2*n3^2 + 112*d^3*n3^2 - 48*n10*n3^2 + 
      88*d*n10*n3^2 - 40*d^2*n10*n3^2 - 336*n11*n3^2 + 648*d*n11*n3^2 - 
      280*d^2*n11*n3^2 - 80*n10*n11*n3^2 + 72*d*n10*n11*n3^2 - 
      272*n11^2*n3^2 + 200*d*n11^2*n3^2 - 32*n10*n11^2*n3^2 - 32*n11^3*n3^2 - 
      32*n3^3 + 64*d*n3^3 - 32*d^2*n3^3 - 64*n11*n3^3 + 64*d*n11*n3^3 - 
      32*n11^2*n3^3)*j[p4a, 0, 0, n3, 0, 0, 1, 0, 1, 0, n10, -1 + n11, 0, 1, 
      1])/(2*(-1 + n11)*(-d + n10 + n11 + n3)*(4 - 3*d + n10 + n11 + 2*n3)*
     (6*d - 3*d^2 - 12*n11 + 6*d*n11 - 4*n3 + 4*d*n3 - 4*n11*n3)) + 
   ((32 - 48*d + 2*d^2 + 21*d^3 - 7*d^4 - 24*n10 + 62*d*n10 - 51*d^2*n10 + 
      13*d^3*n10 - 8*n10^2 + 12*d*n10^2 - 4*d^2*n10^2 - 8*n11 + 74*d*n11 - 
      79*d^2*n11 + 22*d^3*n11 - 36*n10*n11 + 56*d*n10*n11 - 19*d^2*n10*n11 - 
      8*n10^2*n11 + 4*d*n10^2*n11 - 44*n11^2 + 56*d*n11^2 - 17*d^2*n11^2 - 
      12*n10*n11^2 + 6*d*n10*n11^2 - 4*n11^3 + 2*d*n11^3 - 16*n3 + 56*d*n3 - 
      60*d^2*n3 + 20*d^3*n3 - 24*n10*n3 + 44*d*n10*n3 - 20*d^2*n10*n3 - 
      4*n10^2*n3 + 4*d*n10^2*n3 - 40*n11*n3 + 84*d*n11*n3 - 40*d^2*n11*n3 - 
      32*n10*n11*n3 + 28*d*n10*n11*n3 - 4*n10^2*n11*n3 - 28*n11^2*n3 + 
      24*d*n11^2*n3 - 8*n10*n11^2*n3 - 4*n11^3*n3 - 16*n3^2 + 32*d*n3^2 - 
      16*d^2*n3^2 - 8*n10*n3^2 + 8*d*n10*n3^2 - 24*n11*n3^2 + 24*d*n11*n3^2 - 
      8*n10*n11*n3^2 - 8*n11^2*n3^2 - 4*n3^3 + 4*d*n3^3 - 4*n11*n3^3)*
     j[p4a, 0, 0, n3, 0, 0, 1, 0, 1, 0, n10, n11, -1, 0, 2])/
    ((-2 + d)*(-4 + 3*d - n10 - n11 - 2*n3)*(d - n10 - n11 - n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) - 
   (2*(8 - 8*d + 2*d^2 + 2*n10 - d*n10 - 2*n11 + d*n11 + 8*n3 - 6*d*n3 + 
      2*n10*n3 + 2*n11*n3 + 2*n3^2)*j[p4a, 0, 0, n3, 0, 0, 1, 0, 1, 0, n10, 
      n11, -1, 2, 0])/((-4 + 3*d - n10 - n11 - 2*n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) + 
   ((32 - 176*d + 262*d^2 - 149*d^3 + 29*d^4 + 72*n10 - 118*d*n10 + 
      39*d^2*n10 + 17*d^3*n10 - 8*d^4*n10 - 16*n10^2 + 44*d*n10^2 - 
      34*d^2*n10^2 + 8*d^3*n10^2 - 8*n10^3 + 8*d*n10^3 - 2*d^2*n10^3 + 
      120*n11 - 290*d*n11 + 211*d^2*n11 - 48*d^3*n11 + 44*n10*n11 - 
      48*d*n10*n11 + 5*d^2*n10*n11 + 4*d^3*n10*n11 + 4*d*n10^2*n11 - 
      2*d^2*n10^2*n11 + 60*n11^2 - 72*d*n11^2 + 21*d^2*n11^2 + 28*n10*n11^2 - 
      22*d*n10*n11^2 + 4*d^2*n10*n11^2 + 4*n11^3 - 2*d*n11^3 + 80*n3 - 
      116*d*n3 - 22*d^2*n3 + 76*d^3*n3 - 24*d^4*n3 - 56*n10*n3 + 
      170*d*n10*n3 - 133*d^2*n10*n3 + 33*d^3*n10*n3 - 24*n10^2*n3 + 
      22*d*n10^2*n3 - 6*d^2*n10^2*n3 + 32*n11*n3 + 88*d*n11*n3 - 
      128*d^2*n11*n3 + 42*d^3*n11*n3 - 72*n10*n11*n3 + 70*d*n10*n11*n3 - 
      23*d^2*n10*n11*n3 + 8*n10^2*n11*n3 - 2*d*n10^2*n11*n3 - 44*n11^2*n3 + 
      48*d*n11^2*n3 - 18*d^2*n11^2*n3 + 16*n10*n11^2*n3 - 4*d*n10*n11^2*n3 + 
      4*n11^3*n3 - 40*n3^2 + 150*d*n3^2 - 135*d^2*n3^2 + 37*d^3*n3^2 - 
      48*n10*n3^2 + 56*d*n10*n3^2 - 18*d^2*n10*n3^2 - 96*n11*n3^2 + 
      126*d*n11*n3^2 - 45*d^2*n11*n3^2 - 8*n10*n11*n3^2 + 8*d*n10*n11*n3^2 - 
      8*n11^2*n3^2 + 8*d*n11^2*n3^2 - 32*n3^3 + 42*d*n3^3 - 14*d^2*n3^3 - 
      16*n11*n3^3 + 10*d*n11*n3^3)*j[p4a, 0, 0, n3, 0, 0, 1, 0, 1, 0, n10, 
      n11, 0, 0, 1])/((-2 + d)*(-4 + 3*d - n10 - n11 - 2*n3)*
     (d - n10 - n11 - n3)*(-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 
      4*n11*n3)) - ((-1 + d - n11)*(16 - 16*d + 4*d^2 + 4*n10 - 2*d*n10 - 
      4*n11 + 2*d*n11 + 8*n3 - 5*d*n3 + 2*n10*n3 + 2*n3^2)*
     j[p4a, 0, 0, n3, 0, 0, 1, 0, 1, 0, n10, n11, 0, 0, 2])/
    ((-4 + 3*d - n10 - n11 - 2*n3)*(d - n10 - n11 - n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) + 
   ((64 - 144*d + 102*d^2 - 23*d^3 + 16*n10 - 22*d*n10 + 7*d^2*n10 + 80*n11 - 
      98*d*n11 + 29*d^2*n11 + 12*n10*n11 - 6*d*n10*n11 + 12*n11^2 - 
      6*d*n11^2 + 10*d*n3 - 17*d^2*n3 + 7*d^3*n3 - 4*n10*n3 + 4*d*n10*n3 - 
      2*d^2*n10*n3 + 16*n11*n3 - 6*d*n11*n3 - 4*d^2*n11*n3 + 4*n10*n11*n3 + 
      4*n11^2*n3 - 4*n3^2 + 4*d*n3^2 - 2*d^2*n3^2 + 4*n11*n3^2)*
     j[p4a, 0, 0, n3, 0, 0, 1, 0, 1, 0, n10, n11, 0, 1, 0])/
    ((-2 + d)*(-4 + 3*d - n10 - n11 - 2*n3)*(-6*d + 3*d^2 + 12*n11 - 
      6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) + 
   ((32 - 38*d + 11*d^2 + 8*n10 - 4*d*n10 + 4*n11 - 2*d*n11 + 20*n3 - 
      14*d*n3 + 4*n10*n3 + 4*n11*n3 + 4*n3^2)*j[p4a, 0, 0, n3, 0, 0, 1, 0, 1, 
      0, n10, n11, 0, 2, 0])/((-4 + 3*d - n10 - n11 - 2*n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) + 
   (n10*(-16 + 48*d - 48*d^2 + 14*d^3 - 20*n10 + 38*d*n10 - 14*d^2*n10 - 
      4*n10^2 + 2*d*n10^2 - 28*n11 + 58*d*n11 - 22*d^2*n11 - 28*n10*n11 + 
      14*d*n10*n11 - 16*n11^2 + 8*d*n11^2 - 24*n3 + 49*d*n3 - 21*d^2*n3 - 
      14*n10*n3 + 10*d*n10*n3 - 36*n11*n3 + 25*d*n11*n3 - 6*n10*n11*n3 - 
      4*n11^2*n3 - 10*n3^2 + 8*d*n3^2 - 6*n11*n3^2)*
     j[p4a, 0, 0, n3, 0, 0, 1, 0, 1, 0, 1 + n10, -1 + n11, 0, 0, 1])/
    ((-d + n10 + n11 + n3)*(4 - 3*d + n10 + n11 + 2*n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) + 
   ((-7*d + 5*d^2 - d*n10 + 14*n11 - 12*d*n11 + 2*n10*n11 + 4*n11^2 + 2*n3 - 
      3*d*n3 + 4*n11*n3)*j[p4a, 0, 0, n3, 0, 0, 2, -1, 0, 0, n10, n11, 0, 1, 
      1])/((-4 + 3*d - n10 - n11 - 2*n3)*(-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 
      4*n3 - 4*d*n3 + 4*n11*n3)) + 
   ((16 - 48*d + 48*d^2 - 14*d^3 + 20*n10 - 38*d*n10 + 14*d^2*n10 + 4*n10^2 - 
      2*d*n10^2 + 28*n11 - 58*d*n11 + 22*d^2*n11 + 28*n10*n11 - 
      14*d*n10*n11 + 16*n11^2 - 8*d*n11^2 + 24*n3 - 49*d*n3 + 21*d^2*n3 + 
      14*n10*n3 - 10*d*n10*n3 + 36*n11*n3 - 25*d*n11*n3 + 6*n10*n11*n3 + 
      4*n11^2*n3 + 10*n3^2 - 8*d*n3^2 + 6*n11*n3^2)*
     j[p4a, 0, 0, n3, 0, 0, 2, 0, 0, -1, n10, n11, 0, 1, 1])/
    ((-4 + 3*d - n10 - n11 - 2*n3)*(d - n10 - n11 - n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) + 
   ((-16 + 48*d - 48*d^2 + 14*d^3 - 20*n10 + 38*d*n10 - 14*d^2*n10 - 
      4*n10^2 + 2*d*n10^2 - 28*n11 + 58*d*n11 - 22*d^2*n11 - 28*n10*n11 + 
      14*d*n10*n11 - 16*n11^2 + 8*d*n11^2 - 24*n3 + 49*d*n3 - 21*d^2*n3 - 
      14*n10*n3 + 10*d*n10*n3 - 36*n11*n3 + 25*d*n11*n3 - 6*n10*n11*n3 - 
      4*n11^2*n3 - 10*n3^2 + 8*d*n3^2 - 6*n11*n3^2)*
     j[p4a, 0, 0, n3, 0, 0, 2, 0, 0, 0, -1 + n10, n11, 0, 1, 1])/
    ((-4 + 3*d - n10 - n11 - 2*n3)*(d - n10 - n11 - n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) + 
   ((7*d - 5*d^2 + d*n10 - 14*n11 + 12*d*n11 - 2*n10*n11 - 4*n11^2 - 2*n3 + 
      3*d*n3 - 4*n11*n3)*j[p4a, 0, 0, n3, 0, 0, 2, 0, 0, 0, n10, n11, -1, 1, 
      1])/((-4 + 3*d - n10 - n11 - 2*n3)*(-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 
      4*n3 - 4*d*n3 + 4*n11*n3)) - 
   (3*(-2 + d)*(-8*n3 + 7*d*n3 - 2*n10*n3 - 4*n11*n3 - 2*n3^2)*
     j[p4a, 0, 0, 1 + n3, -1, 0, 1, 0, 0, 0, n10, n11, 0, 1, 1])/
    ((-4 + 3*d - n10 - n11 - 2*n3)*(-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 
      4*d*n3 + 4*n11*n3)) - (2*(-2 + d)*(-8*n3 + 7*d*n3 - 2*n10*n3 - 
      4*n11*n3 - 2*n3^2)*j[p4a, 0, 0, 1 + n3, -1, 0, 1, 0, 1, 0, n10, n11, 0, 
      0, 1])/((-4 + 3*d - n10 - n11 - 2*n3)*(-6*d + 3*d^2 + 12*n11 - 
      6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) - 
   (3*(-16*n3 + 32*d*n3 - 20*d^2*n3 + 4*d^3*n3 - 4*n10*n3 + 6*d*n10*n3 - 
      2*d^2*n10*n3 - 12*n11*n3 + 10*d*n11*n3 - 2*d^2*n11*n3 - 4*n10*n11*n3 + 
      2*d*n10*n11*n3 + 4*n11^2*n3 - 2*d*n11^2*n3 - 8*n3^2 + 13*d*n3^2 - 
      5*d^2*n3^2 - 2*n10*n3^2 + 2*d*n10*n3^2 - 8*n11*n3^2 + 5*d*n11*n3^2 - 
      2*n10*n11*n3^2 - 2*n3^3 + 2*d*n3^3 - 2*n11*n3^3)*
     j[p4a, 0, 0, 1 + n3, 0, 0, 1, -1, 0, 0, n10, n11, 0, 1, 1])/
    ((-4 + 3*d - n10 - n11 - 2*n3)*(d - n10 - n11 - n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) - 
   (3*(-16*n3 + 32*d*n3 - 20*d^2*n3 + 4*d^3*n3 - 4*n10*n3 + 6*d*n10*n3 - 
      2*d^2*n10*n3 - 12*n11*n3 + 10*d*n11*n3 - 2*d^2*n11*n3 - 4*n10*n11*n3 + 
      2*d*n10*n11*n3 + 4*n11^2*n3 - 2*d*n11^2*n3 - 8*n3^2 + 13*d*n3^2 - 
      5*d^2*n3^2 - 2*n10*n3^2 + 2*d*n10*n3^2 - 8*n11*n3^2 + 5*d*n11*n3^2 - 
      2*n10*n11*n3^2 - 2*n3^3 + 2*d*n3^3 - 2*n11*n3^3)*
     j[p4a, 0, 0, 1 + n3, 0, 0, 1, -1, 1, 0, n10, n11, 0, 0, 1])/
    ((-4 + 3*d - n10 - n11 - 2*n3)*(d - n10 - n11 - n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) - 
   ((-2 + d)*(-8*n3 + 7*d*n3 - 2*n10*n3 - 4*n11*n3 - 2*n3^2)*
     j[p4a, 0, 0, 1 + n3, 0, 0, 1, -1, 1, 0, n10, n11, 0, 1, 0])/
    ((-4 + 3*d - n10 - n11 - 2*n3)*(-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 
      4*d*n3 + 4*n11*n3)) + ((-16*n3 + 32*d*n3 - 20*d^2*n3 + 4*d^3*n3 - 
      4*n10*n3 + 6*d*n10*n3 - 2*d^2*n10*n3 - 12*n11*n3 + 10*d*n11*n3 - 
      2*d^2*n11*n3 - 4*n10*n11*n3 + 2*d*n10*n11*n3 + 4*n11^2*n3 - 
      2*d*n11^2*n3 - 8*n3^2 + 13*d*n3^2 - 5*d^2*n3^2 - 2*n10*n3^2 + 
      2*d*n10*n3^2 - 8*n11*n3^2 + 5*d*n11*n3^2 - 2*n10*n11*n3^2 - 2*n3^3 + 
      2*d*n3^3 - 2*n11*n3^3)*j[p4a, 0, 0, 1 + n3, 0, 0, 1, 0, 1, 0, -1 + n10, 
      n11, 0, 0, 1])/((-4 + 3*d - n10 - n11 - 2*n3)*(d - n10 - n11 - n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) + 
   ((16*n3 - 22*d*n3 + 7*d^2*n3 + 4*n10*n3 - 2*d*n10*n3 + 8*n11*n3 - 
      4*d*n11*n3 + 4*n3^2 - 2*d*n3^2)*j[p4a, 0, 0, 1 + n3, 0, 0, 1, 0, 1, 0, 
      -1 + n10, n11, 0, 1, 0])/((-4 + 3*d - n10 - n11 - 2*n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) + 
   ((16*n3 - 32*d*n3 + 20*d^2*n3 - 4*d^3*n3 + 4*n10*n3 - 6*d*n10*n3 + 
      2*d^2*n10*n3 + 12*n11*n3 - 10*d*n11*n3 + 2*d^2*n11*n3 + 4*n10*n11*n3 - 
      2*d*n10*n11*n3 - 4*n11^2*n3 + 2*d*n11^2*n3 + 8*n3^2 - 13*d*n3^2 + 
      5*d^2*n3^2 + 2*n10*n3^2 - 2*d*n10*n3^2 + 8*n11*n3^2 - 5*d*n11*n3^2 + 
      2*n10*n11*n3^2 + 2*n3^3 - 2*d*n3^3 + 2*n11*n3^3)*
     j[p4a, 0, 0, 1 + n3, 0, 0, 1, 0, 1, 0, n10, -1 + n11, 0, 0, 1])/
    ((-4 + 3*d - n10 - n11 - 2*n3)*(d - n10 - n11 - n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) + 
   ((-16*n3 + 22*d*n3 - 7*d^2*n3 - 4*n10*n3 + 2*d*n10*n3 - 8*n11*n3 + 
      4*d*n11*n3 - 4*n3^2 + 2*d*n3^2)*j[p4a, 0, 0, 1 + n3, 0, 0, 1, 0, 1, 0, 
      n10, -1 + n11, 0, 1, 0])/((-4 + 3*d - n10 - n11 - 2*n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) + 
   (2*(-16*n3 + 32*d*n3 - 20*d^2*n3 + 4*d^3*n3 - 4*n10*n3 + 6*d*n10*n3 - 
      2*d^2*n10*n3 - 12*n11*n3 + 10*d*n11*n3 - 2*d^2*n11*n3 - 4*n10*n11*n3 + 
      2*d*n10*n11*n3 + 4*n11^2*n3 - 2*d*n11^2*n3 - 8*n3^2 + 13*d*n3^2 - 
      5*d^2*n3^2 - 2*n10*n3^2 + 2*d*n10*n3^2 - 8*n11*n3^2 + 5*d*n11*n3^2 - 
      2*n10*n11*n3^2 - 2*n3^3 + 2*d*n3^3 - 2*n11*n3^3)*
     j[p4a, 0, 0, 1 + n3, 0, 0, 1, 0, 1, 0, n10, n11, -1, 0, 1])/
    ((-4 + 3*d - n10 - n11 - 2*n3)*(d - n10 - n11 - n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) + 
   (2*(-2 + d)*(-8*n3 + 7*d*n3 - 2*n10*n3 - 4*n11*n3 - 2*n3^2)*
     j[p4a, 0, 0, 1 + n3, 0, 0, 1, 0, 1, 0, n10, n11, -1, 1, 0])/
    ((-4 + 3*d - n10 - n11 - 2*n3)*(-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 
      4*d*n3 + 4*n11*n3)) + ((16*n3 - 32*d*n3 + 20*d^2*n3 - 4*d^3*n3 + 
      4*n10*n3 - 6*d*n10*n3 + 2*d^2*n10*n3 + 12*n11*n3 - 10*d*n11*n3 + 
      2*d^2*n11*n3 + 4*n10*n11*n3 - 2*d*n10*n11*n3 - 4*n11^2*n3 + 
      2*d*n11^2*n3 + 8*n3^2 - 13*d*n3^2 + 5*d^2*n3^2 + 2*n10*n3^2 - 
      2*d*n10*n3^2 + 8*n11*n3^2 - 5*d*n11*n3^2 + 2*n10*n11*n3^2 + 2*n3^3 - 
      2*d*n3^3 + 2*n11*n3^3)*j[p4a, 0, 0, 1 + n3, 0, 0, 1, 0, 1, 0, n10, n11, 
      0, 0, 1])/((-4 + 3*d - n10 - n11 - 2*n3)*(d - n10 - n11 - n3)*
     (-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 4*d*n3 + 4*n11*n3)) - 
   ((-2 + d)*(-8*n3 + 7*d*n3 - 2*n10*n3 - 4*n11*n3 - 2*n3^2)*
     j[p4a, 0, 0, 1 + n3, 0, 0, 1, 0, 1, 0, n10, n11, 0, 1, 0])/
    ((-4 + 3*d - n10 - n11 - 2*n3)*(-6*d + 3*d^2 + 12*n11 - 6*d*n11 + 4*n3 - 
      4*d*n3 + 4*n11*n3)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && n4 == 0 && 
    n5 == 0 && n6 == 1 && n7 == 0 && n8 == 1 && n9 == 0 && 
     !(n1 == 0 || n10 == 1) -> 
  (n3*j[p4a, n1, 0, 1 + n3, 0, 0, 1, 0, 1, 0, n10, 1, 0, 0, 1])/
    (2*(-1 + d - n10 - n3)) + j[p4a, 1 + n1, -1, n3, 0, 0, 1, 0, 1, 0, n10, 
     1, 0, 0, 2]/(2*(-1 + d - n10 - n3)) - 
   (n10*j[p4a, 1 + n1, -1, n3, 0, 0, 1, 0, 1, 0, 1 + n10, 0, 0, 1, 1])/
    (2*(1 - d + n10 + n3)) + j[p4a, 1 + n1, -1, n3, 0, 0, 1, 0, 2, 0, n10, 0, 
     0, 1, 1]/(2*(-1 + d - n10 - n3)) + 
   j[p4a, 1 + n1, -1, n3, 0, 0, 1, 0, 2, 0, n10, 1, 0, 0, 1]/
    (2*(-1 + d - n10 - n3)) + ((7 - 3*d + 2*n1 + n10 + 2*n3)*
     j[p4a, 1 + n1, -1, n3, 0, 0, 2, 0, 1, 0, -1 + n10, 1, 0, 1, 1])/
    (2*(-1 + n10)*(1 - d + n10 + n3)) + 
   (n3*j[p4a, 1 + n1, -1, 1 + n3, 0, 0, 1, 0, 1, 0, -1 + n10, 1, 0, 1, 1])/
    (-1 + n10) + (n3*j[p4a, 1 + n1, -1, 1 + n3, 0, 0, 1, 0, 1, 0, n10, 1, 0, 
      0, 1])/(2*(-1 + d - n10 - n3)) - 
   j[p4a, 1 + n1, 0, -1 + n3, 0, 0, 0, 0, 1, 0, n10, 1, 0, 1, 2]/
    (2*(-1 + d - n10 - n3)) - j[p4a, 1 + n1, 0, -1 + n3, 0, 0, 1, 0, 0, 0, 
     n10, 1, 0, 1, 2]/(2*(-1 + d - n10 - n3)) + 
   ((2 + n1 - n10)*j[p4a, 1 + n1, 0, -1 + n3, 0, 0, 1, 0, 1, 0, n10, 1, 0, 1, 
      1])/(1 - d + n10 + n3) - 
   (n10*j[p4a, 1 + n1, 0, -1 + n3, 0, 0, 1, 0, 1, 0, 1 + n10, 0, 0, 1, 1])/
    (2*(1 - d + n10 + n3)) - ((3 - 2*d + n10)*j[p4a, 1 + n1, 0, -1 + n3, 0, 
      0, 2, 0, 1, 0, -1 + n10, 1, 0, 1, 1])/(2*(-1 + n10)*
     (1 - d + n10 + n3)) + j[p4a, 1 + n1, 0, n3, -1, 0, 0, 0, 1, 0, n10, 1, 
     0, 1, 2]/(2*(-1 + d - n10 - n3)) + 
   j[p4a, 1 + n1, 0, n3, -1, 0, 1, 0, 0, 0, n10, 1, 0, 1, 2]/
    (2*(-1 + d - n10 - n3)) + j[p4a, 1 + n1, 0, n3, -1, 0, 1, 0, 1, 0, n10, 
     1, 0, 0, 2]/(2*(-1 + d - n10 - n3)) - 
   ((-4 + d - 2*n1)*j[p4a, 1 + n1, 0, n3, -1, 0, 2, 0, 1, 0, -1 + n10, 1, 0, 
      1, 1])/(2*(-1 + n10)*(1 - d + n10 + n3)) - 
   j[p4a, 1 + n1, 0, n3, 0, -1, 0, 0, 1, 0, n10, 1, 0, 1, 2]/
    (2*(-1 + d - n10 - n3)) - j[p4a, 1 + n1, 0, n3, 0, -1, 1, 0, 0, 0, n10, 
     1, 0, 1, 2]/(2*(-1 + d - n10 - n3)) - 
   j[p4a, 1 + n1, 0, n3, 0, -1, 1, 0, 1, 0, n10, 1, 0, 0, 2]/
    (2*(-1 + d - n10 - n3)) + ((-10 + 5*d - 2*n1 - 2*n10 - 2*n3)*
     j[p4a, 1 + n1, 0, n3, 0, -1, 2, 0, 1, 0, -1 + n10, 1, 0, 1, 1])/
    (2*(-1 + n10)*(1 - d + n10 + n3)) + 
   j[p4a, 1 + n1, 0, n3, 0, 0, 1, -1, 0, 0, n10, 2, 0, 1, 1]/
    (1 - d + n10 + n3) + (n10*j[p4a, 1 + n1, 0, n3, 0, 0, 1, -1, 0, 0, 
      1 + n10, 1, 0, 1, 1])/(2*(1 - d + n10 + n3)) - 
   j[p4a, 1 + n1, 0, n3, 0, 0, 1, -1, 1, 0, n10, 1, 0, 0, 2]/
    (2*(-1 + d - n10 - n3)) + (n10*j[p4a, 1 + n1, 0, n3, 0, 0, 1, -1, 1, 0, 
      1 + n10, 0, 0, 1, 1])/(2*(1 - d + n10 + n3)) + 
   (n10*j[p4a, 1 + n1, 0, n3, 0, 0, 1, -1, 1, 0, 1 + n10, 1, 0, 0, 1])/
    (2*(1 - d + n10 + n3)) - j[p4a, 1 + n1, 0, n3, 0, 0, 1, -1, 2, 0, n10, 0, 
     0, 1, 1]/(2*(-1 + d - n10 - n3)) - 
   j[p4a, 1 + n1, 0, n3, 0, 0, 1, -1, 2, 0, n10, 1, 0, 0, 1]/
    (2*(-1 + d - n10 - n3)) + j[p4a, 1 + n1, 0, n3, 0, 0, 1, 0, 0, 0, 
     -1 + n10, 2, 0, 1, 1]/(-1 + d - n10 - n3) + 
   ((2 + 2*d + n1 - n10 - 3*n3)*j[p4a, 1 + n1, 0, n3, 0, 0, 1, 0, 0, 0, n10, 
      1, 0, 1, 1])/(2*(-1 + d - n10 - n3)) + 
   j[p4a, 1 + n1, 0, n3, 0, 0, 1, 0, 1, -1, n10, 1, 0, 0, 2]/
    (2*(-1 + d - n10 - n3)) + ((-1 - 6*d + 3*d^2 - n1 - 2*d*n1 + 3*n10 - 
      4*d*n10 + n1*n10 + 2*n10^2 + 5*n3 - 3*d*n3 + 2*n1*n3 + n10*n3 + 2*n3^2)*
     j[p4a, 1 + n1, 0, n3, 0, 0, 1, 0, 1, 0, -1 + n10, 1, 0, 1, 1])/
    (2*(-1 + n10)*(1 - d + n10 + n3)) + 
   ((4 - d + n1 + n10 - n3)*j[p4a, 1 + n1, 0, n3, 0, 0, 1, 0, 1, 0, n10, 0, 
      0, 1, 1])/(2*(-1 + d - n10 - n3)) + 
   j[p4a, 1 + n1, 0, n3, 0, 0, 1, 0, 1, 0, n10, 1, -1, 0, 2]/
    (2*(-1 + d - n10 - n3)) + ((-3 + 2*d - n10 - n3)*
     j[p4a, 1 + n1, 0, n3, 0, 0, 1, 0, 1, 0, n10, 1, 0, 0, 1])/
    (2*(-1 + d - n10 - n3)) - j[p4a, 1 + n1, 0, n3, 0, 0, 1, 0, 1, 0, n10, 1, 
     0, 0, 2]/(2*(-1 + d - n10 - n3)) - 
   (n10*j[p4a, 1 + n1, 0, n3, 0, 0, 1, 0, 1, 0, 1 + n10, 0, -1, 1, 1])/
    (2*(1 - d + n10 + n3)) + (n10*j[p4a, 1 + n1, 0, n3, 0, 0, 1, 0, 1, 0, 
      1 + n10, 0, 0, 1, 1])/(2*(1 - d + n10 + n3)) - 
   j[p4a, 1 + n1, 0, n3, 0, 0, 1, 0, 2, 0, -1 + n10, 1, -1, 1, 1]/
    (2*(-1 + d - n10 - n3)) + j[p4a, 1 + n1, 0, n3, 0, 0, 1, 0, 2, 0, 
     -1 + n10, 1, 0, 0, 1]/(2*(-1 + d - n10 - n3)) - 
   ((-3 + 2*d - n10)*j[p4a, 1 + n1, 0, n3, 0, 0, 2, -1, 1, 0, -1 + n10, 1, 0, 
      1, 1])/(2*(-1 + n10)*(1 - d + n10 + n3)) - 
   j[p4a, 1 + n1, 0, n3, 0, 0, 2, 0, 0, -1, n10, 1, 0, 1, 1]/
    (2*(-1 + d - n10 - n3)) - ((d + 2*n1)*j[p4a, 1 + n1, 0, n3, 0, 0, 2, 0, 
      0, 0, -1 + n10, 1, 0, 1, 1])/(2*(-1 + n10)*(1 - d + n10 + n3)) - 
   ((3 - 2*d + n10)*j[p4a, 1 + n1, 0, n3, 0, 0, 2, 0, 1, 0, -1 + n10, 1, -1, 
      1, 1])/(2*(-1 + n10)*(1 - d + n10 + n3)) - 
   ((-3 + 2*d - n10)*j[p4a, 1 + n1, 0, n3, 0, 0, 2, 0, 1, 0, -1 + n10, 1, 0, 
      0, 1])/(2*(-1 + n10)*(1 - d + n10 + n3)) - 
   ((-3 + 2*d - n10)*j[p4a, 1 + n1, 0, n3, 0, 0, 2, 0, 1, 0, -1 + n10, 1, 0, 
      1, 0])/(2*(-1 + n10)*(1 - d + n10 + n3)) - 
   (3*n3*j[p4a, 1 + n1, 0, 1 + n3, 0, 0, 1, -1, 0, 0, n10, 1, 0, 1, 1])/
    (2*(-1 + d - n10 - n3)) + ((7*n3 - 3*d*n3 + 2*n1*n3 + n10*n3)*
     j[p4a, 1 + n1, 0, 1 + n3, 0, 0, 1, -1, 1, 0, -1 + n10, 1, 0, 1, 1])/
    (2*(-1 + n10)*(1 - d + n10 + n3)) - 
   (n3*j[p4a, 1 + n1, 0, 1 + n3, 0, 0, 1, -1, 1, 0, n10, 0, 0, 1, 1])/
    (2*(-1 + d - n10 - n3)) - (3*n3*j[p4a, 1 + n1, 0, 1 + n3, 0, 0, 1, -1, 1, 
      0, n10, 1, 0, 0, 1])/(2*(-1 + d - n10 - n3)) - 
   (2*n3*j[p4a, 1 + n1, 0, 1 + n3, 0, 0, 1, 0, 0, 0, -1 + n10, 1, 0, 1, 1])/
    (-1 + n10) + (n3*j[p4a, 1 + n1, 0, 1 + n3, 0, 0, 1, 0, 1, 0, -1 + n10, 1, 
      -1, 1, 1])/(-1 + n10) + 
   ((-10*n3 + 7*d*n3 - 2*n1*n3 - 6*n10*n3 - 4*n3^2)*
     j[p4a, 1 + n1, 0, 1 + n3, 0, 0, 1, 0, 1, 0, -1 + n10, 1, 0, 0, 1])/
    (2*(-1 + n10)*(1 - d + n10 + n3)) + 
   (n3*j[p4a, 1 + n1, 0, 1 + n3, 0, 0, 1, 0, 1, 0, n10, 1, -1, 0, 1])/
    (-1 + d - n10 - n3) - (n3*j[p4a, 1 + n1, 0, 1 + n3, 0, 0, 1, 0, 1, 0, 
      n10, 1, 0, 0, 1])/(2*(-1 + d - n10 - n3)) + 
   ((1 + n1)*j[p4a, 2 + n1, -1, n3, 0, 0, 1, 0, 1, 0, n10, 1, 0, 0, 1])/
    (2*(-1 + d - n10 - n3)) + ((-1 - n1)*j[p4a, 2 + n1, 0, n3, 0, 0, 1, 0, 0, 
      0, n10, 1, 0, 1, 1])/(2*(-1 + d - n10 - n3)) + 
   ((-1 - n1)*j[p4a, 2 + n1, 0, n3, 0, 0, 1, 0, 1, 0, -1 + n10, 1, 0, 1, 1])/
    (2*(-1 + d - n10 - n3)) + ((1 + n1)*j[p4a, 2 + n1, 0, n3, 0, 0, 1, 0, 1, 
      0, n10, 0, 0, 1, 1])/(2*(-1 + d - n10 - n3)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n4 == 0 && 
    n5 == 0 && n6 == 1 && n7 == 0 && n8 == 1 && n9 == 0 && 
     !(n11 == 1 || n2 == 0) -> 
  -((n11*j[p4a, -1, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 0, 1 + n11, 0, 1, 1])/
     (1 - d + n11 + n3)) + ((-2 + d - n11 - n2)*j[p4a, -1, 1 + n2, n3, 0, 0, 
      1, 0, 1, 0, 1, n11, 0, 1, 1])/(-1 + d - n11 - n3) + 
   (n3*j[p4a, -1, 1 + n2, 1 + n3, 0, 0, 1, 0, 1, 0, 1, n11, 0, 0, 1])/
    (2*(-1 + d - n11 - n3)) + ((-1 - n2)*j[p4a, -1, 2 + n2, -1 + n3, 0, 0, 1, 
      0, 1, 0, 1, n11, 0, 1, 1])/(-1 + d - n11 - n3) + 
   ((1 + n2)*j[p4a, -1, 2 + n2, n3, 0, 0, 1, 0, 0, 0, 1, n11, 0, 1, 1])/
    (2*(-1 + d - n11 - n3)) + j[p4a, 0, n2, n3, 0, 0, 1, 0, 1, 0, 1, n11, 0, 
     0, 2]/(2*(-1 + d - n11 - n3)) + j[p4a, 0, n2, n3, 0, 0, 1, 0, 1, 0, 2, 
     -1 + n11, 0, 1, 1]/(2*(-1 + d - n11 - n3)) + 
   ((-10 + 3*d - 4*n2)*j[p4a, 0, n2, n3, 0, 0, 1, 0, 2, 0, 1, -1 + n11, 0, 1, 
      1])/(2*(-1 + n11)*(1 - d + n11 + n3)) + 
   j[p4a, 0, n2, n3, 0, 0, 1, 0, 2, 0, 1, n11, 0, 0, 1]/
    (2*(-1 + d - n11 - n3)) + j[p4a, 0, n2, n3, 0, 0, 2, 0, 1, 0, 0, n11, 0, 
     1, 1]/(2*(-1 + d - n11 - n3)) + 
   ((5 - 2*d + n11 + 2*n2)*n3*j[p4a, 0, n2, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 
      -1 + n11, 0, 1, 1])/(2*(-1 + n11)*(1 - d + n11 + n3)) + 
   (n3*j[p4a, 0, n2, 1 + n3, 0, 0, 1, 0, 1, 0, 1, n11, 0, 0, 1])/
    (2*(-1 + d - n11 - n3)) - j[p4a, 0, 1 + n2, -1 + n3, 0, 0, 0, 0, 1, 0, 1, 
     n11, 0, 1, 2]/(2*(-1 + d - n11 - n3)) - 
   j[p4a, 0, 1 + n2, -1 + n3, 0, 0, 1, 0, 0, 0, 1, n11, 0, 1, 2]/
    (2*(-1 + d - n11 - n3)) + ((-2 + d - n11 - n2)*j[p4a, 0, 1 + n2, -1 + n3, 
      0, 0, 1, 0, 1, 0, 1, n11, 0, 1, 1])/(-1 + d - n11 - n3) + 
   j[p4a, 0, 1 + n2, -1 + n3, 0, 0, 1, 0, 1, 0, 2, -1 + n11, 0, 1, 1]/
    (2*(-1 + d - n11 - n3)) + j[p4a, 0, 1 + n2, n3, -1, 0, 0, 0, 1, 0, 1, 
     n11, 0, 1, 2]/(2*(-1 + d - n11 - n3)) + 
   j[p4a, 0, 1 + n2, n3, -1, 0, 1, 0, 0, 0, 1, n11, 0, 1, 2]/
    (2*(-1 + d - n11 - n3)) + j[p4a, 0, 1 + n2, n3, -1, 0, 1, 0, 1, 0, 1, 
     n11, 0, 0, 2]/(2*(-1 + d - n11 - n3)) + 
   j[p4a, 0, 1 + n2, n3, -1, 0, 2, 0, 1, 0, 0, n11, 0, 1, 1]/
    (2*(-1 + d - n11 - n3)) - j[p4a, 0, 1 + n2, n3, 0, -1, 0, 0, 1, 0, 1, 
     n11, 0, 1, 2]/(2*(-1 + d - n11 - n3)) - 
   j[p4a, 0, 1 + n2, n3, 0, -1, 1, 0, 0, 0, 1, n11, 0, 1, 2]/
    (2*(-1 + d - n11 - n3)) - j[p4a, 0, 1 + n2, n3, 0, -1, 1, 0, 1, 0, 1, 
     n11, 0, 0, 2]/(2*(-1 + d - n11 - n3)) - 
   j[p4a, 0, 1 + n2, n3, 0, -1, 2, 0, 1, 0, 0, n11, 0, 1, 1]/
    (2*(-1 + d - n11 - n3)) + (n11*j[p4a, 0, 1 + n2, n3, 0, 0, 1, -1, 0, 0, 
      1, 1 + n11, 0, 1, 1])/(1 - d + n11 + n3) - 
   j[p4a, 0, 1 + n2, n3, 0, 0, 1, -1, 0, 0, 2, n11, 0, 1, 1]/
    (2*(-1 + d - n11 - n3)) - j[p4a, 0, 1 + n2, n3, 0, 0, 1, -1, 1, 0, 1, 
     n11, 0, 0, 2]/(2*(-1 + d - n11 - n3)) - 
   j[p4a, 0, 1 + n2, n3, 0, 0, 1, -1, 1, 0, 2, -1 + n11, 0, 1, 1]/
    (2*(-1 + d - n11 - n3)) - j[p4a, 0, 1 + n2, n3, 0, 0, 1, -1, 1, 0, 2, 
     n11, 0, 0, 1]/(2*(-1 + d - n11 - n3)) + 
   ((10 - 3*d + 4*n2)*j[p4a, 0, 1 + n2, n3, 0, 0, 1, -1, 2, 0, 1, -1 + n11, 
      0, 1, 1])/(2*(-1 + n11)*(1 - d + n11 + n3)) - 
   j[p4a, 0, 1 + n2, n3, 0, 0, 1, -1, 2, 0, 1, n11, 0, 0, 1]/
    (2*(-1 + d - n11 - n3)) + ((6 + 2*n2 - 3*n3)*j[p4a, 0, 1 + n2, n3, 0, 0, 
      1, 0, 0, 0, 1, n11, 0, 1, 1])/(2*(-1 + d - n11 - n3)) + 
   j[p4a, 0, 1 + n2, n3, 0, 0, 1, 0, 1, -1, 1, n11, 0, 0, 2]/
    (2*(-1 + d - n11 - n3)) + ((9 - 3*d - n11 + 5*n2 + n3)*
     j[p4a, 0, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 0, n11, 0, 1, 1])/
    (2*(-1 + d - n11 - n3)) - (n11*j[p4a, 0, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 0, 
      1 + n11, -1, 1, 1])/(2*(1 - d + n11 + n3)) + 
   (n11*j[p4a, 0, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 0, 1 + n11, 0, 1, 1])/
    (2*(1 - d + n11 + n3)) + ((2 - 6*d + d^2 + 4*n11 + d*n11 - 2*n11^2 - 
      2*d*n2 + 2*n11*n2 + 15*n3 - 5*d*n3 + n11*n3 + 6*n2*n3)*
     j[p4a, 0, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 1, -1 + n11, 0, 1, 1])/
    (2*(-1 + n11)*(1 - d + n11 + n3)) + 
   j[p4a, 0, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 1, n11, -1, 0, 2]/
    (2*(-1 + d - n11 - n3)) + ((2 + 2*n2 - n3)*j[p4a, 0, 1 + n2, n3, 0, 0, 1, 
      0, 1, 0, 1, n11, 0, 0, 1])/(2*(-1 + d - n11 - n3)) - 
   j[p4a, 0, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 1, n11, 0, 0, 2]/
    (2*(-1 + d - n11 - n3)) + j[p4a, 0, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 2, 
     -1 + n11, -1, 1, 1]/(2*(-1 + d - n11 - n3)) - 
   j[p4a, 0, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 2, -1 + n11, 0, 1, 1]/
    (2*(-1 + d - n11 - n3)) + ((-5 + 2*d - n11 - 2*n2)*
     j[p4a, 0, 1 + n2, n3, 0, 0, 1, 0, 2, 0, 1, -1 + n11, -1, 1, 1])/
    (2*(-1 + n11)*(1 - d + n11 + n3)) + 
   ((5 - 2*d + n11 + 2*n2)*j[p4a, 0, 1 + n2, n3, 0, 0, 1, 0, 2, 0, 1, 
      -1 + n11, 0, 0, 1])/(2*(-1 + n11)*(1 - d + n11 + n3)) - 
   j[p4a, 0, 1 + n2, n3, 0, 0, 2, 0, 0, -1, 1, n11, 0, 1, 1]/
    (2*(-1 + d - n11 - n3)) - (3*n3*j[p4a, 0, 1 + n2, 1 + n3, 0, 0, 1, -1, 0, 
      0, 1, n11, 0, 1, 1])/(2*(-1 + d - n11 - n3)) + 
   (n3*j[p4a, 0, 1 + n2, 1 + n3, 0, 0, 1, -1, 1, 0, 0, n11, 0, 1, 1])/
    (2*(-1 + d - n11 - n3)) - ((-d + 2*n11)*n3*j[p4a, 0, 1 + n2, 1 + n3, 0, 
      0, 1, -1, 1, 0, 1, -1 + n11, 0, 1, 1])/
    (2*(-1 + n11)*(1 - d + n11 + n3)) - 
   (3*n3*j[p4a, 0, 1 + n2, 1 + n3, 0, 0, 1, -1, 1, 0, 1, n11, 0, 0, 1])/
    (2*(-1 + d - n11 - n3)) - ((5 - 2*d + n11 + 2*n2)*n3*
     j[p4a, 0, 1 + n2, 1 + n3, 0, 0, 1, 0, 0, 0, 1, -1 + n11, 0, 1, 1])/
    ((-1 + n11)*(1 - d + n11 + n3)) + 
   ((5 - 2*d + n11 + 2*n2)*n3*j[p4a, 0, 1 + n2, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 
      -1 + n11, -1, 1, 1])/(2*(-1 + n11)*(1 - d + n11 + n3)) + 
   ((-11 + 3*d + n11 - 4*n2)*n3*j[p4a, 0, 1 + n2, 1 + n3, 0, 0, 1, 0, 1, 0, 
      1, -1 + n11, 0, 0, 1])/(2*(-1 + n11)*(1 - d + n11 + n3)) + 
   (n3*j[p4a, 0, 1 + n2, 1 + n3, 0, 0, 1, 0, 1, 0, 1, n11, -1, 0, 1])/
    (-1 + d - n11 - n3) - (n3*j[p4a, 0, 1 + n2, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 
      n11, 0, 0, 1])/(2*(-1 + d - n11 - n3)) + 
   ((1 + n2)*j[p4a, 0, 2 + n2, -1 + n3, 0, 0, 1, 0, 0, 0, 1, n11, 0, 1, 1])/
    (2*(-1 + d - n11 - n3)) + ((1 + n2)*j[p4a, 0, 2 + n2, -1 + n3, 0, 0, 1, 
      0, 1, 0, 0, n11, 0, 1, 1])/(-1 + d - n11 - n3) + 
   ((-1 - n2)*j[p4a, 0, 2 + n2, n3, 0, 0, 1, -1, 0, 0, 1, n11, 0, 1, 1])/
    (-1 + d - n11 - n3) + ((-1 - n2)*j[p4a, 0, 2 + n2, n3, 0, 0, 1, -1, 1, 0, 
      0, n11, 0, 1, 1])/(2*(-1 + d - n11 - n3)) + 
   ((-1 - n2)*j[p4a, 0, 2 + n2, n3, 0, 0, 1, -1, 1, 0, 1, n11, 0, 0, 1])/
    (-1 + d - n11 - n3) + ((1 + n2)*j[p4a, 0, 2 + n2, n3, 0, 0, 1, -1, 1, 0, 
      1, n11, 0, 1, 1])/(-1 + d - n11 - n3) + 
   ((1 + n2)*j[p4a, 0, 2 + n2, n3, 0, 0, 1, 0, 0, 0, 1, n11, -1, 1, 1])/
    (2*(-1 + d - n11 - n3)) + ((-1 - n2)*j[p4a, 0, 2 + n2, n3, 0, 0, 1, 0, 0, 
      0, 1, n11, 0, 1, 1])/(-1 + d - n11 - n3), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n4 == 0 && 
    n5 == 0 && n6 == 1 && n7 == 0 && n8 == 1 && n9 == 0 && n2 != 0 -> 
  ((72 - 52*d + 9*d^2 + 24*n1 - 10*d*n1 + 40*n2 - 16*d*n2 + 4*n1*n2 + 
      4*n2^2 + 28*n3 - 8*d*n3 + 8*n1*n3 + 12*n2*n3)*
     j[p4a, -1 + n1, 1 + n2, n3, 0, 0, 1, 0, 0, 0, 2, 1, 0, 1, 1])/
    ((-14 + 5*d - 2*n1 - 4*n2 - 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   (2*j[p4a, -1 + n1, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 0, 2, 0, 1, 1])/
    (-14 + 5*d - 2*n1 - 4*n2 - 2*n3) + 
   ((-828 + 844*d - 279*d^2 + 30*d^3 - 168*n1 + 124*d*n1 - 22*d^2*n1 - 
      12*n1^2 + 4*d*n1^2 - 796*n2 + 572*d*n2 - 99*d^2*n2 - 88*n1*n2 + 
      36*d*n1*n2 - 4*n1^2*n2 - 224*n2^2 + 88*d*n2^2 - 8*n1*n2^2 - 16*n2^3 - 
      532*n3 + 334*d*n3 - 52*d^2*n3 - 92*n1*n3 + 32*d*n1*n3 - 396*n2*n3 + 
      126*d*n2*n3 - 28*n1*n2*n3 - 72*n2^2*n3 - 80*n3^2 + 24*d*n3^2 - 
      16*n1*n3^2 - 32*n2*n3^2)*j[p4a, -1 + n1, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 
      1, 1, 0, 1, 1])/((-14 + 5*d - 2*n1 - 4*n2 - 2*n3)*
     (72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 50*n3 - 20*d*n3 + 
      10*n2*n3 + 8*n3^2)) + ((72 - 52*d + 9*d^2 + 24*n1 - 10*d*n1 + 40*n2 - 
      16*d*n2 + 4*n1*n2 + 4*n2^2 + 28*n3 - 8*d*n3 + 8*n1*n3 + 12*n2*n3)*
     j[p4a, -1 + n1, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 2, 1, 0, 0, 1])/
    ((-14 + 5*d - 2*n1 - 4*n2 - 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   (2*n3*(-108 + 82*d - 15*d^2 - 12*n1 + 6*d*n1 - 52*n2 + 22*d*n2 - 4*n2^2 - 
      52*n3 + 16*d*n3 - 8*n1*n3 - 20*n2*n3)*j[p4a, -1 + n1, 1 + n2, 1 + n3, 
      0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/((14 - 5*d + 2*n1 + 4*n2 + 2*n3)*
     (72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 50*n3 - 20*d*n3 + 
      10*n2*n3 + 8*n3^2)) - (n3*(180 - 141*d + 27*d^2 + 12*n1 - 6*d*n1 + 
      78*n2 - 33*d*n2 + 6*n2^2 + 102*n3 - 36*d*n3 + 8*n1*n3 + 30*n2*n3 + 
      8*n3^2)*j[p4a, -1 + n1, 1 + n2, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 
      1])/((14 - 5*d + 2*n1 + 4*n2 + 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 
      11*d*n2 + 2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((1 + n2)*(288 - 230*d + 45*d^2 - 2*d*n1 + 116*n2 - 50*d*n2 - 4*n1*n2 + 
      8*n2^2 + 176*n3 - 64*d*n3 + 8*n1*n3 + 48*n2*n3 + 16*n3^2)*
     j[p4a, -1 + n1, 2 + n2, -1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((14 - 5*d + 2*n1 + 4*n2 + 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) - 
   (2*(1 + n2)*(108 - 82*d + 15*d^2 + 12*n1 - 6*d*n1 + 52*n2 - 22*d*n2 + 
      4*n2^2 + 52*n3 - 16*d*n3 + 8*n1*n3 + 20*n2*n3)*
     j[p4a, -1 + n1, 2 + n2, n3, 0, 0, 1, -1, 1, 0, 1, 1, 0, 1, 1])/
    ((14 - 5*d + 2*n1 + 4*n2 + 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) - 
   ((1 + n2)*(180 - 141*d + 27*d^2 + 12*n1 - 6*d*n1 + 78*n2 - 33*d*n2 + 
      6*n2^2 + 102*n3 - 36*d*n3 + 8*n1*n3 + 30*n2*n3 + 8*n3^2)*
     j[p4a, -1 + n1, 2 + n2, n3, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((14 - 5*d + 2*n1 + 4*n2 + 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   (2*(1 + n2)*(108 - 82*d + 15*d^2 + 12*n1 - 6*d*n1 + 52*n2 - 22*d*n2 + 
      4*n2^2 + 52*n3 - 16*d*n3 + 8*n1*n3 + 20*n2*n3)*
     j[p4a, -1 + n1, 2 + n2, n3, 0, 0, 1, 0, 1, 0, 1, 1, -1, 1, 1])/
    ((14 - 5*d + 2*n1 + 4*n2 + 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) - 
   (2*(1 + n2)*(108 - 82*d + 15*d^2 + 12*n1 - 6*d*n1 + 52*n2 - 22*d*n2 + 
      4*n2^2 + 52*n3 - 16*d*n3 + 8*n1*n3 + 20*n2*n3)*
     j[p4a, -1 + n1, 2 + n2, n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((14 - 5*d + 2*n1 + 4*n2 + 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((-72 + 52*d - 9*d^2 - 24*n1 + 10*d*n1 - 40*n2 + 16*d*n2 - 4*n1*n2 - 
      4*n2^2 - 28*n3 + 8*d*n3 - 8*n1*n3 - 12*n2*n3)*
     j[p4a, n1, n2, n3, 0, 0, 1, 0, 0, 0, 2, 1, 0, 1, 1])/
    ((-14 + 5*d - 2*n1 - 4*n2 - 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   j[p4a, n1, n2, n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 2]/
    (-14 + 5*d - 2*n1 - 4*n2 - 2*n3) + 
   ((-7*d + 3*d^2 - 24*n1 + 10*d*n1 - 14*n2 + 5*d*n2 - 4*n1*n2 - 2*n2^2 + 
      22*n3 - 12*d*n3 - 8*n1*n3 - 2*n2*n3 + 8*n3^2)*
     j[p4a, n1, n2, n3, 0, 0, 1, 0, 1, 0, 2, 0, 0, 1, 1])/
    ((-14 + 5*d - 2*n1 - 4*n2 - 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((-72 + 52*d - 9*d^2 - 24*n1 + 10*d*n1 - 40*n2 + 16*d*n2 - 4*n1*n2 - 
      4*n2^2 - 28*n3 + 8*d*n3 - 8*n1*n3 - 12*n2*n3)*
     j[p4a, n1, n2, n3, 0, 0, 1, 0, 1, 0, 2, 1, 0, 0, 1])/
    ((-14 + 5*d - 2*n1 - 4*n2 - 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   j[p4a, n1, n2, n3, 0, 0, 1, 0, 2, 0, 1, 0, 0, 1, 1]/
    (-14 + 5*d - 2*n1 - 4*n2 - 2*n3) + 
   j[p4a, n1, n2, n3, 0, 0, 1, 0, 2, 0, 1, 1, 0, 0, 1]/
    (-14 + 5*d - 2*n1 - 4*n2 - 2*n3) + 
   ((90 - 74*d + 15*d^2 - 6*n1 + 2*d*n1 + 32*n2 - 14*d*n2 - 2*n1*n2 + 
      2*n2^2 + 62*n3 - 24*d*n3 + 14*n2*n3 + 8*n3^2)*
     j[p4a, n1, n2, n3, 0, 0, 2, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((-14 + 5*d - 2*n1 - 4*n2 - 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) - 
   (n3*(-108 + 82*d - 15*d^2 - 12*n1 + 6*d*n1 - 52*n2 + 22*d*n2 - 4*n2^2 - 
      52*n3 + 16*d*n3 - 8*n1*n3 - 20*n2*n3)*j[p4a, n1, n2, 1 + n3, 0, 0, 1, 
      0, 0, 0, 1, 1, 0, 1, 1])/((14 - 5*d + 2*n1 + 4*n2 + 2*n3)*
     (72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 50*n3 - 20*d*n3 + 
      10*n2*n3 + 8*n3^2)) + (n3*(-108 + 82*d - 15*d^2 - 12*n1 + 6*d*n1 - 
      52*n2 + 22*d*n2 - 4*n2^2 - 52*n3 + 16*d*n3 - 8*n1*n3 - 20*n2*n3)*
     j[p4a, n1, n2, 1 + n3, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((14 - 5*d + 2*n1 + 4*n2 + 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) - 
   (n3*(-108 + 82*d - 15*d^2 - 12*n1 + 6*d*n1 - 52*n2 + 22*d*n2 - 4*n2^2 - 
      52*n3 + 16*d*n3 - 8*n1*n3 - 20*n2*n3)*j[p4a, n1, n2, 1 + n3, 0, 0, 1, 
      0, 1, 0, 1, 0, 0, 1, 1])/((14 - 5*d + 2*n1 + 4*n2 + 2*n3)*
     (72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 50*n3 - 20*d*n3 + 
      10*n2*n3 + 8*n3^2)) - (n3*(-36 + 23*d - 3*d^2 - 12*n1 + 6*d*n1 - 
      26*n2 + 11*d*n2 - 2*n2^2 - 2*n3 - 4*d*n3 - 8*n1*n3 - 10*n2*n3 + 8*n3^2)*
     j[p4a, n1, n2, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((14 - 5*d + 2*n1 + 4*n2 + 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((7*d - 3*d^2 + 24*n1 - 10*d*n1 + 14*n2 - 5*d*n2 + 4*n1*n2 + 2*n2^2 - 
      22*n3 + 12*d*n3 + 8*n1*n3 + 2*n2*n3 - 8*n3^2)*
     j[p4a, n1, 1 + n2, -1 + n3, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 2])/
    ((-14 + 5*d - 2*n1 - 4*n2 - 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((7*d - 3*d^2 + 24*n1 - 10*d*n1 + 14*n2 - 5*d*n2 + 4*n1*n2 + 2*n2^2 - 
      22*n3 + 12*d*n3 + 8*n1*n3 + 2*n2*n3 - 8*n3^2)*
     j[p4a, n1, 1 + n2, -1 + n3, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 2])/
    ((-14 + 5*d - 2*n1 - 4*n2 - 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((72 - 52*d + 9*d^2 + 24*n1 - 10*d*n1 + 40*n2 - 16*d*n2 + 4*n1*n2 + 
      4*n2^2 + 28*n3 - 8*d*n3 + 8*n1*n3 + 12*n2*n3)*
     j[p4a, n1, 1 + n2, -1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    ((-14 + 5*d - 2*n1 - 4*n2 - 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((36 - 27*d + 5*d^2 + 24*n1 - 10*d*n1 + 18*n2 - 7*d*n2 + 4*n1*n2 + 
      2*n2^2 + 12*n3 - 4*d*n3 + 8*n1*n3 + 4*n2*n3)*
     j[p4a, n1, 1 + n2, -1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-9 + 4*d - n2 - 4*n3)*(-14 + 5*d - 2*n1 - 4*n2 - 2*n3)) + 
   ((-7*d + 3*d^2 - 24*n1 + 10*d*n1 - 14*n2 + 5*d*n2 - 4*n1*n2 - 2*n2^2 + 
      22*n3 - 12*d*n3 - 8*n1*n3 - 2*n2*n3 + 8*n3^2)*
     j[p4a, n1, 1 + n2, -1 + n3, 0, 0, 1, 0, 1, 0, 2, 0, 0, 1, 1])/
    ((-14 + 5*d - 2*n1 - 4*n2 - 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((18 - 15*d + 3*d^2 - 6*n1 + 2*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 12*n3 - 
      4*d*n3 + 4*n2*n3)*j[p4a, n1, 1 + n2, -1 + n3, 0, 0, 2, 0, 1, 0, 0, 1, 
      0, 1, 1])/((-14 + 5*d - 2*n1 - 4*n2 - 2*n3)*(72 - 59*d + 12*d^2 + 
      26*n2 - 11*d*n2 + 2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((-7*d + 3*d^2 - 24*n1 + 10*d*n1 - 14*n2 + 5*d*n2 - 4*n1*n2 - 2*n2^2 + 
      22*n3 - 12*d*n3 - 8*n1*n3 - 2*n2*n3 + 8*n3^2)*
     j[p4a, n1, 1 + n2, n3, -1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 2])/
    ((-14 + 5*d - 2*n1 - 4*n2 - 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((-7*d + 3*d^2 - 24*n1 + 10*d*n1 - 14*n2 + 5*d*n2 - 4*n1*n2 - 2*n2^2 + 
      22*n3 - 12*d*n3 - 8*n1*n3 - 2*n2*n3 + 8*n3^2)*
     j[p4a, n1, 1 + n2, n3, -1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 2])/
    ((-14 + 5*d - 2*n1 - 4*n2 - 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((-7*d + 3*d^2 - 24*n1 + 10*d*n1 - 14*n2 + 5*d*n2 - 4*n1*n2 - 2*n2^2 + 
      22*n3 - 12*d*n3 - 8*n1*n3 - 2*n2*n3 + 8*n3^2)*
     j[p4a, n1, 1 + n2, n3, -1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    ((-14 + 5*d - 2*n1 - 4*n2 - 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((-7*d + 3*d^2 - 24*n1 + 10*d*n1 - 14*n2 + 5*d*n2 - 4*n1*n2 - 2*n2^2 + 
      22*n3 - 12*d*n3 - 8*n1*n3 - 2*n2*n3 + 8*n3^2)*
     j[p4a, n1, 1 + n2, n3, -1, 0, 2, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((-14 + 5*d - 2*n1 - 4*n2 - 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   j[p4a, n1, 1 + n2, n3, 0, -1, 0, 0, 1, 0, 1, 1, 0, 1, 2]/
    (14 - 5*d + 2*n1 + 4*n2 + 2*n3) + j[p4a, n1, 1 + n2, n3, 0, -1, 1, 0, 0, 
     0, 1, 1, 0, 1, 2]/(14 - 5*d + 2*n1 + 4*n2 + 2*n3) + 
   j[p4a, n1, 1 + n2, n3, 0, -1, 1, 0, 1, 0, 1, 1, 0, 0, 2]/
    (14 - 5*d + 2*n1 + 4*n2 + 2*n3) + j[p4a, n1, 1 + n2, n3, 0, -1, 2, 0, 1, 
     0, 0, 1, 0, 1, 1]/(14 - 5*d + 2*n1 + 4*n2 + 2*n3) + 
   ((-10 + 3*d - 2*n1 - 4*n2)*j[p4a, n1, 1 + n2, n3, 0, 0, 0, 0, 1, -1, 1, 1, 
      0, 1, 2])/((-14 + 5*d - 2*n1 - 4*n2 - 2*n3)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((-18 + 15*d - 3*d^2 + 6*n1 - 2*d*n1 - 6*n2 + 3*d*n2 + 2*n1*n2 - 12*n3 + 
      4*d*n3 - 4*n2*n3)*j[p4a, n1, 1 + n2, n3, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 
      1])/((-14 + 5*d - 2*n1 - 4*n2 - 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 
      11*d*n2 + 2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((10 - 3*d + 2*n1 + 4*n2)*j[p4a, n1, 1 + n2, n3, 0, 0, 0, 0, 1, 0, 1, 1, 
      0, 1, 2])/((-14 + 5*d - 2*n1 - 4*n2 - 2*n3)*(-8 + 3*d - 2*n2 - 2*n3)) - 
   (2*j[p4a, n1, 1 + n2, n3, 0, 0, 1, -1, 0, 0, 1, 2, 0, 1, 1])/
    (-14 + 5*d - 2*n1 - 4*n2 - 2*n3) + 
   ((7*d - 3*d^2 + 24*n1 - 10*d*n1 + 14*n2 - 5*d*n2 + 4*n1*n2 + 2*n2^2 - 
      22*n3 + 12*d*n3 + 8*n1*n3 + 2*n2*n3 - 8*n3^2)*
     j[p4a, n1, 1 + n2, n3, 0, 0, 1, -1, 0, 0, 2, 1, 0, 1, 1])/
    ((-14 + 5*d - 2*n1 - 4*n2 - 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   j[p4a, n1, 1 + n2, n3, 0, 0, 1, -1, 1, 0, 1, 1, 0, 0, 2]/
    (14 - 5*d + 2*n1 + 4*n2 + 2*n3) + 
   ((7*d - 3*d^2 + 24*n1 - 10*d*n1 + 14*n2 - 5*d*n2 + 4*n1*n2 + 2*n2^2 - 
      22*n3 + 12*d*n3 + 8*n1*n3 + 2*n2*n3 - 8*n3^2)*
     j[p4a, n1, 1 + n2, n3, 0, 0, 1, -1, 1, 0, 2, 0, 0, 1, 1])/
    ((-14 + 5*d - 2*n1 - 4*n2 - 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((7*d - 3*d^2 + 24*n1 - 10*d*n1 + 14*n2 - 5*d*n2 + 4*n1*n2 + 2*n2^2 - 
      22*n3 + 12*d*n3 + 8*n1*n3 + 2*n2*n3 - 8*n3^2)*
     j[p4a, n1, 1 + n2, n3, 0, 0, 1, -1, 1, 0, 2, 1, 0, 0, 1])/
    ((-14 + 5*d - 2*n1 - 4*n2 - 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   j[p4a, n1, 1 + n2, n3, 0, 0, 1, -1, 2, 0, 1, 0, 0, 1, 1]/
    (14 - 5*d + 2*n1 + 4*n2 + 2*n3) + j[p4a, n1, 1 + n2, n3, 0, 0, 1, -1, 2, 
     0, 1, 1, 0, 0, 1]/(14 - 5*d + 2*n1 + 4*n2 + 2*n3) + 
   ((-10 + 3*d - 2*n1 - 4*n2)*j[p4a, n1, 1 + n2, n3, 0, 0, 1, 0, 0, -1, 1, 1, 
      0, 1, 2])/((-14 + 5*d - 2*n1 - 4*n2 - 2*n3)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((216 - 198*d + 45*d^2 - 29*d*n1 + 12*d^2*n1 + 36*n2 - 32*d*n2 + 
      6*d^2*n2 - 34*n1*n2 + 9*d*n1*n2 - 28*n2^2 + 10*d*n2^2 - 6*n1*n2^2 - 
      4*n2^3 + 108*n3 + 7*d*n3 - 24*d^2*n3 + 86*n1*n3 - 44*d*n1*n3 + 
      58*n2*n3 - 17*d*n2*n3 + 6*n1*n2*n3 - 2*n2^2*n3 - 70*n3^2 + 52*d*n3^2 + 
      24*n1*n3^2 + 2*n2*n3^2 - 24*n3^3)*j[p4a, n1, 1 + n2, n3, 0, 0, 1, 0, 0, 
      0, 1, 1, 0, 1, 1])/((-14 + 5*d - 2*n1 - 4*n2 - 2*n3)*
     (72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 50*n3 - 20*d*n3 + 
      10*n2*n3 + 8*n3^2)) + ((10 - 3*d + 2*n1 + 4*n2)*
     j[p4a, n1, 1 + n2, n3, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 2])/
    ((-14 + 5*d - 2*n1 - 4*n2 - 2*n3)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   (2*(18 - 15*d + 3*d^2 - 6*n1 + 2*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 12*n3 - 
      4*d*n3 + 4*n2*n3)*j[p4a, n1, 1 + n2, n3, 0, 0, 1, 0, 0, 0, 1, 2, -1, 1, 
      1])/((-14 + 5*d - 2*n1 - 4*n2 - 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 
      11*d*n2 + 2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) - 
   (2*(18 - 15*d + 3*d^2 - 6*n1 + 2*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 12*n3 - 
      4*d*n3 + 4*n2*n3)*j[p4a, n1, 1 + n2, n3, 0, 0, 1, 0, 0, 0, 1, 2, 0, 1, 
      1])/((-14 + 5*d - 2*n1 - 4*n2 - 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 
      11*d*n2 + 2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   (2*(-9 + 3*d - n1 - 3*n2 - n3)*j[p4a, n1, 1 + n2, n3, 0, 0, 1, 0, 1, -1, 
      1, 1, 0, 0, 2])/((-14 + 5*d - 2*n1 - 4*n2 - 2*n3)*
     (-8 + 3*d - 2*n2 - 2*n3)) + 
   ((18 - d - 3*d^2 + 114*n1 - 77*d*n1 + 12*d^2*n1 + 214*n2 - 154*d*n2 + 
      27*d^2*n2 + 44*n1*n2 - 17*d*n1*n2 + 82*n2^2 - 33*d*n2^2 + 2*n1*n2^2 + 
      6*n2^3 + 76*n3 - 69*d*n3 + 18*d^2*n3 + 54*n1*n3 - 16*d*n1*n3 + 
      148*n2*n3 - 53*d*n2*n3 + 14*n1*n2*n3 + 32*n2^2*n3 + 58*n3^2 - 
      28*d*n3^2 + 8*n1*n3^2 + 26*n2*n3^2 + 8*n3^3)*j[p4a, n1, 1 + n2, n3, 0, 
      0, 1, 0, 1, 0, 0, 1, 0, 1, 1])/((-14 + 5*d - 2*n1 - 4*n2 - 2*n3)*
     (72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 50*n3 - 20*d*n3 + 
      10*n2*n3 + 8*n3^2)) + j[p4a, n1, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 0, 2, 
     -1, 1, 1]/(-14 + 5*d - 2*n1 - 4*n2 - 2*n3) + 
   j[p4a, n1, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 0, 2, 0, 1, 1]/
    (14 - 5*d + 2*n1 + 4*n2 + 2*n3) + 
   ((72 - 66*d + 15*d^2 - 96*n1 + 69*d*n1 - 12*d^2*n1 + 12*n2 - 6*d*n2 - 
      30*n1*n2 + 11*d*n1*n2 - 2*n1*n2^2 - 36*n3 + 57*d*n3 - 18*d^2*n3 - 
      46*n1*n3 + 16*d*n1*n3 - 30*n2*n3 + 17*d*n2*n3 - 6*n1*n2*n3 - 
      2*n2^2*n3 - 58*n3^2 + 28*d*n3^2 - 8*n1*n3^2 - 18*n2*n3^2 - 8*n3^3)*
     j[p4a, n1, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1])/
    ((-14 + 5*d - 2*n1 - 4*n2 - 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   j[p4a, n1, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 1, 1, -1, 0, 2]/
    (-14 + 5*d - 2*n1 - 4*n2 - 2*n3) + 
   ((36 - 44*d + 12*d^2 - 24*n1 - 6*d*n1 + 6*d^2*n1 - 12*n1^2 + 4*d*n1^2 - 
      16*n2 - 10*d*n2 + 6*d^2*n2 - 48*n1*n2 + 14*d*n1*n2 - 4*n1^2*n2 - 
      32*n2^2 + 10*d*n2^2 - 8*n1*n2^2 - 4*n2^3 + 32*n3 + 5*d*n3 - 9*d^2*n3 + 
      44*n1*n3 - 22*d*n1*n3 + 50*n2*n3 - 23*d*n2*n3 - 2*n2^2*n3 - 30*n3^2 + 
      20*d*n3^2 + 8*n1*n3^2 + 10*n2*n3^2 - 8*n3^3)*j[p4a, n1, 1 + n2, n3, 0, 
      0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/((-14 + 5*d - 2*n1 - 4*n2 - 2*n3)*
     (72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 50*n3 - 20*d*n3 + 
      10*n2*n3 + 8*n3^2)) - (2*(-9 + 3*d - n1 - 3*n2 - n3)*
     j[p4a, n1, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    ((-14 + 5*d - 2*n1 - 4*n2 - 2*n3)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((18 - 15*d + 3*d^2 - 6*n1 + 2*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 12*n3 - 
      4*d*n3 + 4*n2*n3)*j[p4a, n1, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 
      0])/((-14 + 5*d - 2*n1 - 4*n2 - 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 
      11*d*n2 + 2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((396 - 406*d + 136*d^2 - 15*d^3 + 24*n1 - 10*d*n1 + 12*n1^2 - 4*d*n1^2 + 
      376*n2 - 268*d*n2 + 46*d^2*n2 + 28*n1*n2 - 10*d*n1*n2 + 4*n1^2*n2 + 
      108*n2^2 - 42*d*n2^2 + 4*n1*n2^2 + 8*n2^3 + 220*n3 - 138*d*n3 + 
      22*d^2*n3 - 4*n1*n3 + 4*d*n1*n3 + 164*n2*n3 - 50*d*n2*n3 + 4*n1*n2*n3 + 
      32*n2^2*n3 + 24*n3^2 - 8*d*n3^2 + 8*n2*n3^2)*j[p4a, n1, 1 + n2, n3, 0, 
      0, 1, 0, 1, 0, 1, 1, 0, 1, 1])/((-14 + 5*d - 2*n1 - 4*n2 - 2*n3)*
     (72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 50*n3 - 20*d*n3 + 
      10*n2*n3 + 8*n3^2)) + ((-7*d + 3*d^2 - 24*n1 + 10*d*n1 - 14*n2 + 
      5*d*n2 - 4*n1*n2 - 2*n2^2 + 22*n3 - 12*d*n3 - 8*n1*n3 - 2*n2*n3 + 
      8*n3^2)*j[p4a, n1, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 2, 0, -1, 1, 1])/
    ((-14 + 5*d - 2*n1 - 4*n2 - 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((7*d - 3*d^2 + 24*n1 - 10*d*n1 + 14*n2 - 5*d*n2 + 4*n1*n2 + 2*n2^2 - 
      22*n3 + 12*d*n3 + 8*n1*n3 + 2*n2*n3 - 8*n3^2)*
     j[p4a, n1, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 2, 0, 0, 1, 1])/
    ((-14 + 5*d - 2*n1 - 4*n2 - 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((-18 + 15*d - 3*d^2 + 6*n1 - 2*d*n1 - 6*n2 + 3*d*n2 + 2*n1*n2 - 12*n3 + 
      4*d*n3 - 4*n2*n3)*j[p4a, n1, 1 + n2, n3, 0, 0, 2, -1, 1, 0, 0, 1, 0, 1, 
      1])/((-14 + 5*d - 2*n1 - 4*n2 - 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 
      11*d*n2 + 2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) - 
   (2*(9 - 11*d + 3*d^2 - 15*n1 + 6*d*n1 - 4*n2 + d*n2 - 3*n1*n2 - n2^2 + 
      17*n3 - 8*d*n3 - 4*n1*n3 + n2*n3 + 4*n3^2)*j[p4a, n1, 1 + n2, n3, 0, 0, 
      2, 0, 0, -1, 1, 1, 0, 1, 1])/((-14 + 5*d - 2*n1 - 4*n2 - 2*n3)*
     (72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 50*n3 - 20*d*n3 + 
      10*n2*n3 + 8*n3^2)) + ((-18 + 15*d - 3*d^2 + 6*n1 - 2*d*n1 - 6*n2 + 
      3*d*n2 + 2*n1*n2 - 12*n3 + 4*d*n3 - 4*n2*n3)*j[p4a, n1, 1 + n2, n3, 0, 
      0, 2, 0, 1, -1, 1, 1, 0, 0, 1])/((-14 + 5*d - 2*n1 - 4*n2 - 2*n3)*
     (72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 50*n3 - 20*d*n3 + 
      10*n2*n3 + 8*n3^2)) + ((-18 + 15*d - 3*d^2 + 6*n1 - 2*d*n1 - 6*n2 + 
      3*d*n2 + 2*n1*n2 - 12*n3 + 4*d*n3 - 4*n2*n3)*j[p4a, n1, 1 + n2, n3, 0, 
      0, 2, 0, 1, -1, 1, 1, 0, 1, 0])/((-14 + 5*d - 2*n1 - 4*n2 - 2*n3)*
     (72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 50*n3 - 20*d*n3 + 
      10*n2*n3 + 8*n3^2)) + ((18 - 15*d + 3*d^2 - 6*n1 + 2*d*n1 + 6*n2 - 
      3*d*n2 - 2*n1*n2 + 12*n3 - 4*d*n3 + 4*n2*n3)*j[p4a, n1, 1 + n2, n3, 0, 
      0, 2, 0, 1, 0, 0, 1, -1, 1, 1])/((-14 + 5*d - 2*n1 - 4*n2 - 2*n3)*
     (72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 50*n3 - 20*d*n3 + 
      10*n2*n3 + 8*n3^2)) + (n3*(108 - 95*d + 21*d^2 - 12*n1 + 6*d*n1 + 
      26*n2 - 11*d*n2 + 2*n2^2 + 98*n3 - 44*d*n3 - 8*n1*n3 + 10*n2*n3 + 
      24*n3^2)*j[p4a, n1, 1 + n2, 1 + n3, 0, 0, 1, -1, 0, 0, 1, 1, 0, 1, 1])/
    ((14 - 5*d + 2*n1 + 4*n2 + 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) - 
   (n3*(-36 + 23*d - 3*d^2 - 12*n1 + 6*d*n1 - 26*n2 + 11*d*n2 - 2*n2^2 - 
      2*n3 - 4*d*n3 - 8*n1*n3 - 10*n2*n3 + 8*n3^2)*j[p4a, n1, 1 + n2, 1 + n3, 
      0, 0, 1, -1, 1, 0, 0, 1, 0, 1, 1])/((14 - 5*d + 2*n1 + 4*n2 + 2*n3)*
     (72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 50*n3 - 20*d*n3 + 
      10*n2*n3 + 8*n3^2)) + (n3*(-36 + 23*d - 3*d^2 - 12*n1 + 6*d*n1 - 
      26*n2 + 11*d*n2 - 2*n2^2 - 2*n3 - 4*d*n3 - 8*n1*n3 - 10*n2*n3 + 8*n3^2)*
     j[p4a, n1, 1 + n2, 1 + n3, 0, 0, 1, -1, 1, 0, 1, 0, 0, 1, 1])/
    ((14 - 5*d + 2*n1 + 4*n2 + 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   (n3*(108 - 95*d + 21*d^2 - 12*n1 + 6*d*n1 + 26*n2 - 11*d*n2 + 2*n2^2 + 
      98*n3 - 44*d*n3 - 8*n1*n3 + 10*n2*n3 + 24*n3^2)*
     j[p4a, n1, 1 + n2, 1 + n3, 0, 0, 1, -1, 1, 0, 1, 1, 0, 0, 1])/
    ((14 - 5*d + 2*n1 + 4*n2 + 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   (n3*(-108 + 82*d - 15*d^2 - 12*n1 + 6*d*n1 - 52*n2 + 22*d*n2 - 4*n2^2 - 
      52*n3 + 16*d*n3 - 8*n1*n3 - 20*n2*n3)*j[p4a, n1, 1 + n2, 1 + n3, 0, 0, 
      1, 0, 0, 0, 1, 1, -1, 1, 1])/((14 - 5*d + 2*n1 + 4*n2 + 2*n3)*
     (72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 50*n3 - 20*d*n3 + 
      10*n2*n3 + 8*n3^2)) - (2*n3*(-108 + 82*d - 15*d^2 - 12*n1 + 6*d*n1 - 
      52*n2 + 22*d*n2 - 4*n2^2 - 52*n3 + 16*d*n3 - 8*n1*n3 - 20*n2*n3)*
     j[p4a, n1, 1 + n2, 1 + n3, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((14 - 5*d + 2*n1 + 4*n2 + 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   (n3*(-108 + 82*d - 15*d^2 - 12*n1 + 6*d*n1 - 52*n2 + 22*d*n2 - 4*n2^2 - 
      52*n3 + 16*d*n3 - 8*n1*n3 - 20*n2*n3)*j[p4a, n1, 1 + n2, 1 + n3, 0, 0, 
      1, 0, 1, 0, 0, 1, -1, 1, 1])/((14 - 5*d + 2*n1 + 4*n2 + 2*n3)*
     (72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 50*n3 - 20*d*n3 + 
      10*n2*n3 + 8*n3^2)) - (n3*(-108 + 82*d - 15*d^2 - 12*n1 + 6*d*n1 - 
      52*n2 + 22*d*n2 - 4*n2^2 - 52*n3 + 16*d*n3 - 8*n1*n3 - 20*n2*n3)*
     j[p4a, n1, 1 + n2, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 0, -1, 1, 1])/
    ((14 - 5*d + 2*n1 + 4*n2 + 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) - 
   (2*n3*j[p4a, n1, 1 + n2, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, -1, 0, 1])/
    (14 - 5*d + 2*n1 + 4*n2 + 2*n3) + 
   (n3*(180 - 141*d + 27*d^2 + 12*n1 - 6*d*n1 + 78*n2 - 33*d*n2 + 6*n2^2 + 
      102*n3 - 36*d*n3 + 8*n1*n3 + 30*n2*n3 + 8*n3^2)*
     j[p4a, n1, 1 + n2, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((14 - 5*d + 2*n1 + 4*n2 + 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((1 + n2)*(7*d - 3*d^2 + 24*n1 - 10*d*n1 + 14*n2 - 5*d*n2 + 4*n1*n2 + 
      2*n2^2 - 22*n3 + 12*d*n3 + 8*n1*n3 + 2*n2*n3 - 8*n3^2)*
     j[p4a, n1, 2 + n2, -1 + n3, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((14 - 5*d + 2*n1 + 4*n2 + 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) - 
   (2*(1 + n2)*(90 - 74*d + 15*d^2 - 6*n1 + 2*d*n1 + 32*n2 - 14*d*n2 - 
      2*n1*n2 + 2*n2^2 + 62*n3 - 24*d*n3 + 14*n2*n3 + 8*n3^2)*
     j[p4a, n1, 2 + n2, -1 + n3, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((14 - 5*d + 2*n1 + 4*n2 + 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) - 
   (2*(1 + n2)*(7*d - 3*d^2 + 24*n1 - 10*d*n1 + 14*n2 - 5*d*n2 + 4*n1*n2 + 
      2*n2^2 - 22*n3 + 12*d*n3 + 8*n1*n3 + 2*n2*n3 - 8*n3^2)*
     j[p4a, n1, 2 + n2, n3, 0, 0, 1, -1, 0, 0, 1, 1, 0, 1, 1])/
    ((14 - 5*d + 2*n1 + 4*n2 + 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((1 + n2)*(180 - 141*d + 27*d^2 + 12*n1 - 6*d*n1 + 78*n2 - 33*d*n2 + 
      6*n2^2 + 102*n3 - 36*d*n3 + 8*n1*n3 + 30*n2*n3 + 8*n3^2)*
     j[p4a, n1, 2 + n2, n3, 0, 0, 1, -1, 1, 0, 0, 1, 0, 1, 1])/
    ((14 - 5*d + 2*n1 + 4*n2 + 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) - 
   (2*(1 + n2)*(7*d - 3*d^2 + 24*n1 - 10*d*n1 + 14*n2 - 5*d*n2 + 4*n1*n2 + 
      2*n2^2 - 22*n3 + 12*d*n3 + 8*n1*n3 + 2*n2*n3 - 8*n3^2)*
     j[p4a, n1, 2 + n2, n3, 0, 0, 1, -1, 1, 0, 1, 1, 0, 0, 1])/
    ((14 - 5*d + 2*n1 + 4*n2 + 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((1 + n2)*(-72 + 66*d - 15*d^2 + 24*n1 - 10*d*n1 - 12*n2 + 6*d*n2 + 
      4*n1*n2 - 72*n3 + 32*d*n3 + 8*n1*n3 - 8*n2*n3 - 16*n3^2)*
     j[p4a, n1, 2 + n2, n3, 0, 0, 1, -1, 1, 0, 1, 1, 0, 1, 1])/
    ((14 - 5*d + 2*n1 + 4*n2 + 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((1 + n2)*(7*d - 3*d^2 + 24*n1 - 10*d*n1 + 14*n2 - 5*d*n2 + 4*n1*n2 + 
      2*n2^2 - 22*n3 + 12*d*n3 + 8*n1*n3 + 2*n2*n3 - 8*n3^2)*
     j[p4a, n1, 2 + n2, n3, 0, 0, 1, 0, 0, 0, 1, 1, -1, 1, 1])/
    ((14 - 5*d + 2*n1 + 4*n2 + 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) - 
   ((1 + n2)*(-72 + 66*d - 15*d^2 + 24*n1 - 10*d*n1 - 12*n2 + 6*d*n2 + 
      4*n1*n2 - 72*n3 + 32*d*n3 + 8*n1*n3 - 8*n2*n3 - 16*n3^2)*
     j[p4a, n1, 2 + n2, n3, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((14 - 5*d + 2*n1 + 4*n2 + 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) - 
   ((1 + n2)*(108 - 82*d + 15*d^2 + 12*n1 - 6*d*n1 + 52*n2 - 22*d*n2 + 
      4*n2^2 + 52*n3 - 16*d*n3 + 8*n1*n3 + 20*n2*n3)*
     j[p4a, n1, 2 + n2, n3, 0, 0, 1, 0, 1, 0, 0, 1, -1, 1, 1])/
    ((14 - 5*d + 2*n1 + 4*n2 + 2*n3)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) - 
   (n1*j[p4a, 1 + n1, n2, n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (14 - 5*d + 2*n1 + 4*n2 + 2*n3) + 
   (n1*j[p4a, 1 + n1, 1 + n2, n3, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (14 - 5*d + 2*n1 + 4*n2 + 2*n3) + 
   (n1*j[p4a, 1 + n1, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1])/
    (14 - 5*d + 2*n1 + 4*n2 + 2*n3) - 
   (n1*j[p4a, 1 + n1, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1])/
    (14 - 5*d + 2*n1 + 4*n2 + 2*n3), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n4 == 0 && n5 == 0 && n6 == 1 && n7 == 0 && n8 == n10 && n9 == 0 && 
    n10 != 1 -> ((-6 + 5*d - 4*n10 - 4*n3)*(80 - 496*d + 976*d^2 - 748*d^3 + 
      195*d^4 + 384*n10 - 1432*d*n10 + 1576*d^2*n10 - 526*d^3*n10 + 
      512*n10^2 - 1080*d*n10^2 + 516*d^2*n10^2 + 240*n10^3 - 216*d*n10^3 + 
      32*n10^4 + 336*n3 - 1184*d*n3 + 1220*d^2*n3 - 388*d^3*n3 + 832*n10*n3 - 
      1648*d*n10*n3 + 760*d^2*n10*n3 + 544*n10^2*n3 - 480*d*n10^2*n3 + 
      96*n10^3*n3 + 320*n3^2 - 568*d*n3^2 + 244*d^2*n3^2 + 368*n10*n3^2 - 
      312*d*n10*n3^2 + 96*n10^2*n3^2 + 64*n3^3 - 48*d*n3^3 + 32*n10*n3^3)*
     j[p4a, -1, 0, n3, 0, 0, 0, 0, n10, 0, -1 + n10, 2, 0, 1, 1])/
    (8*(-2 + d)*(-1 + n10)*(8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 38*n10 - 
      147*d*n10 + 177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 147*d*n10^2 + 
      80*d^2*n10^2 + 40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 147*d*n3 + 
      177*d^2*n3 - 66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 160*d^2*n10*n3 + 
      120*n10^2*n3 - 126*d*n10^2*n3 + 32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 
      80*d^2*n3^2 + 120*n10*n3^2 - 126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 
      42*d*n3^3 + 32*n10*n3^3 + 8*n3^4)) + 
   (2*(22 - 28*d + 9*d^2 + 12*n10 - 8*d*n10 + 2*n10^2 + 12*n3 - 8*d*n3 + 
      4*n10*n3 + 2*n3^2)*j[p4a, -1, 0, n3, 0, 0, 0, 0, n10, 0, n10, 2, 0, 1, 
      1])/((-2 + d)*(-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)) + 
   (n10*(6 - 5*d + 4*n10 + 4*n3)*(-24 + 44*d - 2*d^2 - 15*d^3 - 16*n10 - 
      32*d*n10 + 52*d^2*n10 + 24*n10^2 - 52*d*n10^2 + 16*n10^3 - 8*n3 - 
      32*d*n3 + 34*d^2*n3 + 40*n10*n3 - 68*d*n10*n3 + 32*n10^2*n3 + 16*n3^2 - 
      16*d*n3^2 + 16*n10*n3^2)*j[p4a, -1, 0, n3, 0, 0, 0, 0, 1 + n10, 0, 
      -1 + n10, 1, 0, 1, 1])/(8*(-1 + n10)*(8 - 44*d + 86*d^2 - 70*d^3 + 
      20*d^4 + 38*n10 - 147*d*n10 + 177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 
      147*d*n10^2 + 80*d^2*n10^2 + 40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 
      147*d*n3 + 177*d^2*n3 - 66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 
      160*d^2*n10*n3 + 120*n10^2*n3 - 126*d*n10^2*n3 + 32*n10^3*n3 + 
      62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 120*n10*n3^2 - 126*d*n10*n3^2 + 
      48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 32*n10*n3^3 + 8*n3^4)) + 
   ((-12*n10 + 7*d*n10 - 2*n10^2 - 2*n10*n3)*j[p4a, -1, 0, n3, 0, 0, 0, 0, 
      1 + n10, 0, n10, 1, 0, 1, 1])/((-2 + 3*d - 4*n10 - 4*n3)*
     (-4 + 3*d - 2*n10 - 2*n3)) - 
   ((-4 + 3*d - 2*n10)*(-6 + 5*d - 4*n10 - 4*n3)*(-2 + 3*d - 2*n10 - 2*n3)*
     j[p4a, -1, 0, n3, 0, 0, 1, 0, n10, 0, -1 + n10, 1, 0, 2, 0])/
    (4*(-2 + d)*(-1 + n10)*(1 - 3*d + 2*d^2 + 3*n10 - 4*d*n10 + 2*n10^2 + 
      3*n3 - 4*d*n3 + 4*n10*n3 + 2*n3^2)) + 
   ((-20 + 30*d - 11*d^2 - 20*n10 + 14*d*n10 - 4*n10^2 - 20*n3 + 14*d*n3 - 
      8*n10*n3 - 4*n3^2)*j[p4a, -1, 0, n3, 0, 0, 1, 0, n10, 0, n10, 1, 0, 2, 
      0])/((-2 + d)*(-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)) - 
   (2*(-7*n10 + 5*d*n10 - 3*n10^2 - 3*n10*n3)*j[p4a, -1, 0, n3, 0, 0, 1, 0, 
      n10, 0, 1 + n10, 1, 0, 0, 1])/((-2 + 3*d - 4*n10 - 4*n3)*
     (-4 + 3*d - 2*n10 - 2*n3)) + (n10*(6 - 5*d + 4*n10 + 4*n3)*
     (44 - 164*d + 197*d^2 - 75*d^3 + 124*n10 - 298*d*n10 + 170*d^2*n10 + 
      112*n10^2 - 128*d*n10^2 + 32*n10^3 + 104*n3 - 240*d*n3 + 128*d^2*n3 + 
      180*n10*n3 - 192*d*n10*n3 + 72*n10^2*n3 + 68*n3^2 - 64*d*n3^2 + 
      48*n10*n3^2 + 8*n3^3)*j[p4a, -1, 0, n3, 0, 0, 1, 0, 1 + n10, 0, 
      -1 + n10, 1, 0, 0, 1])/(4*(-1 + n10)*(8 - 44*d + 86*d^2 - 70*d^3 + 
      20*d^4 + 38*n10 - 147*d*n10 + 177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 
      147*d*n10^2 + 80*d^2*n10^2 + 40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 
      147*d*n3 + 177*d^2*n3 - 66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 
      160*d^2*n10*n3 + 120*n10^2*n3 - 126*d*n10^2*n3 + 32*n10^3*n3 + 
      62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 120*n10*n3^2 - 126*d*n10*n3^2 + 
      48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 32*n10*n3^3 + 8*n3^4)) + 
   ((6 - 5*d + 4*n10 + 4*n3)*(104*n3 - 348*d*n3 + 390*d^2*n3 - 145*d^3*n3 + 
      248*n10*n3 - 568*d*n10*n3 + 326*d^2*n10*n3 + 208*n10^2*n3 - 
      248*d*n10^2*n3 + 64*n10^3*n3 + 192*n3^2 - 416*d*n3^2 + 216*d^2*n3^2 + 
      304*n10*n3^2 - 328*d*n10*n3^2 + 128*n10^2*n3^2 + 96*n3^3 - 80*d*n3^3 + 
      64*n10*n3^3)*j[p4a, -1, 0, 1 + n3, 0, 0, 1, 0, n10, 0, -1 + n10, 1, 0, 
      0, 1])/(8*(-1 + n10)*(8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 38*n10 - 
      147*d*n10 + 177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 147*d*n10^2 + 
      80*d^2*n10^2 + 40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 147*d*n3 + 
      177*d^2*n3 - 66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 160*d^2*n10*n3 + 
      120*n10^2*n3 - 126*d*n10^2*n3 + 32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 
      80*d^2*n3^2 + 120*n10*n3^2 - 126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 
      42*d*n3^3 + 32*n10*n3^3 + 8*n3^4)) + 
   ((6 - 5*d + 4*n10 + 4*n3)*(-24*n3 + 44*d*n3 - 2*d^2*n3 - 15*d^3*n3 - 
      16*n10*n3 - 32*d*n10*n3 + 52*d^2*n10*n3 + 24*n10^2*n3 - 52*d*n10^2*n3 + 
      16*n10^3*n3 - 8*n3^2 - 32*d*n3^2 + 34*d^2*n3^2 + 40*n10*n3^2 - 
      68*d*n10*n3^2 + 32*n10^2*n3^2 + 16*n3^3 - 16*d*n3^3 + 16*n10*n3^3)*
     j[p4a, -1, 0, 1 + n3, 0, 0, 1, 0, n10, 0, -1 + n10, 1, 0, 1, 0])/
    (8*(-1 + n10)*(8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 38*n10 - 147*d*n10 + 
      177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 147*d*n10^2 + 80*d^2*n10^2 + 
      40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 147*d*n3 + 177*d^2*n3 - 
      66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 160*d^2*n10*n3 + 120*n10^2*n3 - 
      126*d*n10^2*n3 + 32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 
      120*n10*n3^2 - 126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 
      32*n10*n3^3 + 8*n3^4)) + 
   ((8*n3 - 11*d*n3 + 4*d^2*n3 + 6*n10*n3 - 5*d*n10*n3 + 2*n10^2*n3 + 
      6*n3^2 - 5*d*n3^2 + 4*n10*n3^2 + 2*n3^3)*j[p4a, -1, 0, 1 + n3, 0, 0, 1, 
      0, n10, 0, n10, 1, 0, 0, 1])/((-2 + 3*d - 4*n10 - 4*n3)*
     (-4 + 3*d - 2*n10 - 2*n3)*(-1 + d - n10 - n3)) + 
   ((-12*n3 + 7*d*n3 - 2*n10*n3 - 2*n3^2)*j[p4a, -1, 0, 1 + n3, 0, 0, 1, 0, 
      n10, 0, n10, 1, 0, 1, 0])/((-2 + 3*d - 4*n10 - 4*n3)*
     (-4 + 3*d - 2*n10 - 2*n3)) - ((-6 + 5*d - 4*n10 - 4*n3)*
     (24 - 44*d + 2*d^2 + 15*d^3 + 16*n10 + 32*d*n10 - 52*d^2*n10 - 
      24*n10^2 + 52*d*n10^2 - 16*n10^3 + 8*n3 + 32*d*n3 - 34*d^2*n3 - 
      40*n10*n3 + 68*d*n10*n3 - 32*n10^2*n3 - 16*n3^2 + 16*d*n3^2 - 
      16*n10*n3^2)*j[p4a, 0, -1, n3, 0, 0, 0, 0, n10, 0, n10, 1, 0, 1, 1])/
    (8*(8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 38*n10 - 147*d*n10 + 
      177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 147*d*n10^2 + 80*d^2*n10^2 + 
      40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 147*d*n3 + 177*d^2*n3 - 
      66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 160*d^2*n10*n3 + 120*n10^2*n3 - 
      126*d*n10^2*n3 + 32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 
      120*n10*n3^2 - 126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 
      32*n10*n3^3 + 8*n3^4)) + ((12*n10 - 7*d*n10 + 2*n10^2 + 2*n10*n3)*
     j[p4a, 0, -1, n3, 0, 0, 0, 0, n10, 0, 1 + n10, 1, 0, 1, 1])/
    ((-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)) - 
   ((-4 + 3*d - 2*n10)*(-6 + 5*d - 4*n10 - 4*n3)*(d - n10 - n3)*
     j[p4a, 0, -1, n3, 0, 0, 1, 0, n10, 0, -1 + n10, 1, 0, 0, 2])/
    (2*(-2 + d)*(-1 + n10)*(1 - 3*d + 2*d^2 + 3*n10 - 4*d*n10 + 2*n10^2 + 
      3*n3 - 4*d*n3 + 4*n10*n3 + 2*n3^2)) - 
   ((-6 + 5*d - 4*n10 - 4*n3)*(16 - 44*d + 4*d^2 + 15*d^3 + 24*n10 + 
      28*d*n10 - 52*d^2*n10 - 24*n10^2 + 52*d*n10^2 - 16*n10^3 + 8*n3 + 
      72*d*n3 - 66*d^2*n3 - 80*n10*n3 + 116*d*n10*n3 - 48*n10^2*n3 - 
      56*n3^2 + 64*d*n3^2 - 48*n10*n3^2 - 16*n3^3)*j[p4a, 0, -1, n3, 0, 0, 1, 
      0, n10, 0, n10, 0, 0, 1, 1])/(8*(8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 
      38*n10 - 147*d*n10 + 177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 
      147*d*n10^2 + 80*d^2*n10^2 + 40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 
      147*d*n3 + 177*d^2*n3 - 66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 
      160*d^2*n10*n3 + 120*n10^2*n3 - 126*d*n10^2*n3 + 32*n10^3*n3 + 
      62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 120*n10*n3^2 - 126*d*n10*n3^2 + 
      48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 32*n10*n3^3 + 8*n3^4)) + 
   ((4 - 20*d + 22*d^2 - 7*d^3 + 28*n10 - 48*d*n10 + 20*d^2*n10 + 20*n10^2 - 
      16*d*n10^2 + 4*n10^3 + 28*n3 - 48*d*n3 + 20*d^2*n3 + 40*n10*n3 - 
      32*d*n10*n3 + 12*n10^2*n3 + 20*n3^2 - 16*d*n3^2 + 12*n10*n3^2 + 4*n3^3)*
     j[p4a, 0, -1, n3, 0, 0, 1, 0, n10, 0, n10, 1, 0, 0, 2])/
    ((-2 + d)*(-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)*
     (-1 + d - n10 - n3)) + ((22*n10 - 35*d*n10 + 14*d^2*n10 + 26*n10^2 - 
      21*d*n10^2 + 8*n10^3 + 26*n10*n3 - 21*d*n10*n3 + 16*n10^2*n3 + 
      8*n10*n3^2)*j[p4a, 0, -1, n3, 0, 0, 1, 0, n10, 0, 1 + n10, 0, 0, 1, 1])/
    ((-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)*
     (-1 + d - n10 - n3)) + (2*(-7*n10 + 5*d*n10 - 3*n10^2 - 3*n10*n3)*
     j[p4a, 0, -1, n3, 0, 0, 1, 0, n10, 0, 1 + n10, 1, 0, 0, 1])/
    ((-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)) - 
   (n10*(6 - 5*d + 4*n10 + 4*n3)*(-24 + 44*d - 2*d^2 - 15*d^3 - 16*n10 - 
      32*d*n10 + 52*d^2*n10 + 24*n10^2 - 52*d*n10^2 + 16*n10^3 - 8*n3 - 
      32*d*n3 + 34*d^2*n3 + 40*n10*n3 - 68*d*n10*n3 + 32*n10^2*n3 + 16*n3^2 - 
      16*d*n3^2 + 16*n10*n3^2)*j[p4a, 0, -1, n3, 0, 0, 1, 0, 1 + n10, 0, 
      -1 + n10, 0, 0, 1, 1])/(8*(-1 + n10)*(8 - 44*d + 86*d^2 - 70*d^3 + 
      20*d^4 + 38*n10 - 147*d*n10 + 177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 
      147*d*n10^2 + 80*d^2*n10^2 + 40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 
      147*d*n3 + 177*d^2*n3 - 66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 
      160*d^2*n10*n3 + 120*n10^2*n3 - 126*d*n10^2*n3 + 32*n10^3*n3 + 
      62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 120*n10*n3^2 - 126*d*n10*n3^2 + 
      48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 32*n10*n3^3 + 8*n3^4)) - 
   (n10*(6 - 5*d + 4*n10 + 4*n3)*(-24 + 44*d - 2*d^2 - 15*d^3 - 16*n10 - 
      32*d*n10 + 52*d^2*n10 + 24*n10^2 - 52*d*n10^2 + 16*n10^3 - 8*n3 - 
      32*d*n3 + 34*d^2*n3 + 40*n10*n3 - 68*d*n10*n3 + 32*n10^2*n3 + 16*n3^2 - 
      16*d*n3^2 + 16*n10*n3^2)*j[p4a, 0, -1, n3, 0, 0, 1, 0, 1 + n10, 0, 
      -1 + n10, 1, 0, 0, 1])/(8*(-1 + n10)*(8 - 44*d + 86*d^2 - 70*d^3 + 
      20*d^4 + 38*n10 - 147*d*n10 + 177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 
      147*d*n10^2 + 80*d^2*n10^2 + 40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 
      147*d*n3 + 177*d^2*n3 - 66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 
      160*d^2*n10*n3 + 120*n10^2*n3 - 126*d*n10^2*n3 + 32*n10^3*n3 + 
      62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 120*n10*n3^2 - 126*d*n10*n3^2 + 
      48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 32*n10*n3^3 + 8*n3^4)) + 
   ((8*n10 - 11*d*n10 + 4*d^2*n10 + 6*n10^2 - 5*d*n10^2 + 2*n10^3 + 
      6*n10*n3 - 5*d*n10*n3 + 4*n10^2*n3 + 2*n10*n3^2)*
     j[p4a, 0, -1, n3, 0, 0, 1, 0, 1 + n10, 0, n10, 0, 0, 1, 1])/
    ((-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)*
     (-1 + d - n10 - n3)) + ((8*n10 - 11*d*n10 + 4*d^2*n10 + 6*n10^2 - 
      5*d*n10^2 + 2*n10^3 + 6*n10*n3 - 5*d*n10*n3 + 4*n10^2*n3 + 2*n10*n3^2)*
     j[p4a, 0, -1, n3, 0, 0, 1, 0, 1 + n10, 0, n10, 1, 0, 0, 1])/
    ((-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)*
     (-1 + d - n10 - n3)) - ((-6 + 5*d - 4*n10 - 4*n3)*
     (32 - 232*d + 468*d^2 - 374*d^3 + 105*d^4 + 176*n10 - 672*d*n10 + 
      804*d^2*n10 - 304*d^3*n10 + 240*n10^2 - 584*d*n10^2 + 336*d^2*n10^2 + 
      144*n10^3 - 168*d*n10^3 + 32*n10^4 + 144*n3 - 504*d*n3 + 572*d^2*n3 - 
      210*d^3*n3 + 352*n10*n3 - 840*d*n10*n3 + 476*d^2*n10*n3 + 
      320*n10^2*n3 - 368*d*n10^2*n3 + 96*n10^3*n3 + 112*n3^2 - 256*d*n3^2 + 
      140*d^2*n3^2 + 208*n10*n3^2 - 232*d*n10*n3^2 + 96*n10^2*n3^2 + 
      32*n3^3 - 32*d*n3^3 + 32*n10*n3^3)*j[p4a, 0, -1, n3, 0, 0, 2, 0, n10, 
      0, -1 + n10, 1, 0, 0, 1])/(8*(-2 + d)*(-1 + n10)*
     (8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 38*n10 - 147*d*n10 + 
      177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 147*d*n10^2 + 80*d^2*n10^2 + 
      40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 147*d*n3 + 177*d^2*n3 - 
      66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 160*d^2*n10*n3 + 120*n10^2*n3 - 
      126*d*n10^2*n3 + 32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 
      120*n10*n3^2 - 126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 
      32*n10*n3^3 + 8*n3^4)) - ((-6 + 5*d - 4*n10 - 4*n3)*
     (32 - 232*d + 468*d^2 - 374*d^3 + 105*d^4 + 176*n10 - 672*d*n10 + 
      804*d^2*n10 - 304*d^3*n10 + 240*n10^2 - 584*d*n10^2 + 336*d^2*n10^2 + 
      144*n10^3 - 168*d*n10^3 + 32*n10^4 + 144*n3 - 504*d*n3 + 572*d^2*n3 - 
      210*d^3*n3 + 352*n10*n3 - 840*d*n10*n3 + 476*d^2*n10*n3 + 
      320*n10^2*n3 - 368*d*n10^2*n3 + 96*n10^3*n3 + 112*n3^2 - 256*d*n3^2 + 
      140*d^2*n3^2 + 208*n10*n3^2 - 232*d*n10*n3^2 + 96*n10^2*n3^2 + 
      32*n3^3 - 32*d*n3^3 + 32*n10*n3^3)*j[p4a, 0, -1, n3, 0, 0, 2, 0, n10, 
      0, -1 + n10, 1, 0, 1, 0])/(8*(-2 + d)*(-1 + n10)*
     (8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 38*n10 - 147*d*n10 + 
      177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 147*d*n10^2 + 80*d^2*n10^2 + 
      40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 147*d*n3 + 177*d^2*n3 - 
      66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 160*d^2*n10*n3 + 120*n10^2*n3 - 
      126*d*n10^2*n3 + 32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 
      120*n10*n3^2 - 126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 
      32*n10*n3^3 + 8*n3^4)) + 
   ((-20 + 30*d - 11*d^2 - 20*n10 + 14*d*n10 - 4*n10^2 - 20*n3 + 14*d*n3 - 
      8*n10*n3 - 4*n3^2)*j[p4a, 0, -1, n3, 0, 0, 2, 0, n10, 0, n10, 1, 0, 0, 
      1])/((-2 + d)*(-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)) + 
   ((-20 + 30*d - 11*d^2 - 20*n10 + 14*d*n10 - 4*n10^2 - 20*n3 + 14*d*n3 - 
      8*n10*n3 - 4*n3^2)*j[p4a, 0, -1, n3, 0, 0, 2, 0, n10, 0, n10, 1, 0, 1, 
      0])/((-2 + d)*(-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)) - 
   ((6 - 5*d + 4*n10 + 4*n3)*(-4*n3 + 12*d*n3 - 3*d^2*n3 - 5*d^3*n3 - 
      8*n10*n3 - 2*d*n10*n3 + 19*d^2*n10*n3 + 4*n10^2*n3 - 22*d*n10^2*n3 + 
      8*n10^3*n3 - 12*n3^2 + 16*d*n3^2 - 3*d^2*n3^2 - 8*n10*n3^2 - 
      6*d*n10*n3^2 + 8*n10^2*n3^2 - 12*n3^3 + 16*d*n3^3 - 8*n10*n3^3 - 
      8*n3^4)*j[p4a, 0, -1, 1 + n3, 0, 0, 1, 0, n10, 0, -1 + n10, 0, 0, 1, 
      1])/(4*(-1 + n10)*(8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 38*n10 - 
      147*d*n10 + 177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 147*d*n10^2 + 
      80*d^2*n10^2 + 40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 147*d*n3 + 
      177*d^2*n3 - 66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 160*d^2*n10*n3 + 
      120*n10^2*n3 - 126*d*n10^2*n3 + 32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 
      80*d^2*n3^2 + 120*n10*n3^2 - 126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 
      42*d*n3^3 + 32*n10*n3^3 + 8*n3^4)) - 
   ((6 - 5*d + 4*n10 + 4*n3)*(-24*n3 + 68*d*n3 - 10*d^2*n3 - 25*d^3*n3 - 
      40*n10*n3 - 32*d*n10*n3 + 90*d^2*n10*n3 + 32*n10^2*n3 - 96*d*n10^2*n3 + 
      32*n10^3*n3 - 32*n3^2 - 40*d*n3^2 + 60*d^2*n3^2 + 64*n10*n3^2 - 
      128*d*n10*n3^2 + 64*n10^2*n3^2 + 32*n3^3 - 32*d*n3^3 + 32*n10*n3^3)*
     j[p4a, 0, -1, 1 + n3, 0, 0, 1, 0, n10, 0, -1 + n10, 1, 0, 0, 1])/
    (8*(-1 + n10)*(8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 38*n10 - 147*d*n10 + 
      177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 147*d*n10^2 + 80*d^2*n10^2 + 
      40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 147*d*n3 + 177*d^2*n3 - 
      66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 160*d^2*n10*n3 + 120*n10^2*n3 - 
      126*d*n10^2*n3 + 32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 
      120*n10*n3^2 - 126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 
      32*n10*n3^3 + 8*n3^4)) + ((6 - 5*d + 4*n10 + 4*n3)*
     (-24*n3 + 44*d*n3 - 2*d^2*n3 - 15*d^3*n3 - 16*n10*n3 - 32*d*n10*n3 + 
      52*d^2*n10*n3 + 24*n10^2*n3 - 52*d*n10^2*n3 + 16*n10^3*n3 - 8*n3^2 - 
      32*d*n3^2 + 34*d^2*n3^2 + 40*n10*n3^2 - 68*d*n10*n3^2 + 32*n10^2*n3^2 + 
      16*n3^3 - 16*d*n3^3 + 16*n10*n3^3)*j[p4a, 0, -1, 1 + n3, 0, 0, 1, 0, 
      n10, 0, -1 + n10, 1, 0, 1, 0])/(8*(-1 + n10)*(8 - 44*d + 86*d^2 - 
      70*d^3 + 20*d^4 + 38*n10 - 147*d*n10 + 177*d^2*n10 - 66*d^3*n10 + 
      62*n10^2 - 147*d*n10^2 + 80*d^2*n10^2 + 40*n10^3 - 42*d*n10^3 + 
      8*n10^4 + 38*n3 - 147*d*n3 + 177*d^2*n3 - 66*d^3*n3 + 124*n10*n3 - 
      294*d*n10*n3 + 160*d^2*n10*n3 + 120*n10^2*n3 - 126*d*n10^2*n3 + 
      32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 120*n10*n3^2 - 
      126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 32*n10*n3^3 + 
      8*n3^4)) + ((8*n3 - 11*d*n3 + 4*d^2*n3 + 6*n10*n3 - 5*d*n10*n3 + 
      2*n10^2*n3 + 6*n3^2 - 5*d*n3^2 + 4*n10*n3^2 + 2*n3^3)*
     j[p4a, 0, -1, 1 + n3, 0, 0, 1, 0, n10, 0, n10, 1, 0, 0, 1])/
    ((-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)*
     (-1 + d - n10 - n3)) + ((-12*n3 + 7*d*n3 - 2*n10*n3 - 2*n3^2)*
     j[p4a, 0, -1, 1 + n3, 0, 0, 1, 0, n10, 0, n10, 1, 0, 1, 0])/
    ((-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)) + 
   ((-d + n10 + n3)*(6 - 5*d + 4*n10 + 4*n3)*(-12 + 4*d + 5*d^2 + 4*n10 - 
      14*d*n10 + 8*n10^2 + 8*n3 - 8*d*n3 + 8*n10*n3)*
     j[p4a, 0, 0, -1 + n3, 0, 0, 0, 0, n10, 0, -1 + n10, 1, 0, 1, 2])/
    (8*(-1 + n10)*(8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 38*n10 - 147*d*n10 + 
      177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 147*d*n10^2 + 80*d^2*n10^2 + 
      40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 147*d*n3 + 177*d^2*n3 - 
      66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 160*d^2*n10*n3 + 120*n10^2*n3 - 
      126*d*n10^2*n3 + 32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 
      120*n10*n3^2 - 126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 
      32*n10*n3^3 + 8*n3^4)) - ((-6 + 5*d - 4*n10 - 4*n3)*
     (24 - 44*d + 2*d^2 + 15*d^3 + 16*n10 + 32*d*n10 - 52*d^2*n10 - 
      24*n10^2 + 52*d*n10^2 - 16*n10^3 + 8*n3 + 32*d*n3 - 34*d^2*n3 - 
      40*n10*n3 + 68*d*n10*n3 - 32*n10^2*n3 - 16*n3^2 + 16*d*n3^2 - 
      16*n10*n3^2)*j[p4a, 0, 0, -1 + n3, 0, 0, 0, 0, n10, 0, n10, 1, 0, 1, 
      1])/(8*(8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 38*n10 - 147*d*n10 + 
      177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 147*d*n10^2 + 80*d^2*n10^2 + 
      40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 147*d*n3 + 177*d^2*n3 - 
      66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 160*d^2*n10*n3 + 120*n10^2*n3 - 
      126*d*n10^2*n3 + 32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 
      120*n10*n3^2 - 126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 
      32*n10*n3^3 + 8*n3^4)) + 
   ((-29 + 47*d - 19*d^2 - 36*n10 + 29*d*n10 - 11*n10^2 - 36*n3 + 29*d*n3 - 
      22*n10*n3 - 11*n3^2)*j[p4a, 0, 0, -1 + n3, 0, 0, 0, 0, n10, 0, n10, 1, 
      0, 1, 2])/((-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)*
     (-1 + d - n10 - n3)) + ((12*n10 - 7*d*n10 + 2*n10^2 + 2*n10*n3)*
     j[p4a, 0, 0, -1 + n3, 0, 0, 0, 0, n10, 0, 1 + n10, 1, 0, 1, 1])/
    ((-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)) - 
   ((-6 + 5*d - 4*n10 - 4*n3)*(d - n10 - n3)*(-152 + 436*d - 394*d^2 + 
      115*d^3 - 280*n10 + 504*d*n10 - 222*d^2*n10 - 160*n10^2 + 144*d*n10^2 - 
      32*n10^3 - 208*n3 + 352*d*n3 - 148*d^2*n3 - 224*n10*n3 + 192*d*n10*n3 - 
      64*n10^2*n3 - 64*n3^2 + 48*d*n3^2 - 32*n10*n3^2)*
     j[p4a, 0, 0, -1 + n3, 0, 0, 1, 0, n10, 0, -1 + n10, 1, 0, 0, 2])/
    (8*(-2 + d)*(-1 + n10)*(8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 38*n10 - 
      147*d*n10 + 177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 147*d*n10^2 + 
      80*d^2*n10^2 + 40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 147*d*n3 + 
      177*d^2*n3 - 66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 160*d^2*n10*n3 + 
      120*n10^2*n3 - 126*d*n10^2*n3 + 32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 
      80*d^2*n3^2 + 120*n10*n3^2 - 126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 
      42*d*n3^3 + 32*n10*n3^3 + 8*n3^4)) + 
   ((-d + n10 + n3)*(6 - 5*d + 4*n10 + 4*n3)*(68 - 208*d + 199*d^2 - 60*d^3 + 
      140*n10 - 266*d*n10 + 118*d^2*n10 + 88*n10^2 - 76*d*n10^2 + 16*n10^3 + 
      112*n3 - 208*d*n3 + 94*d^2*n3 + 140*n10*n3 - 124*d*n10*n3 + 
      40*n10^2*n3 + 52*n3^2 - 48*d*n3^2 + 32*n10*n3^2 + 8*n3^3)*
     j[p4a, 0, 0, -1 + n3, 0, 0, 1, 0, n10, 0, -1 + n10, 1, 0, 1, 1])/
    (4*(-1 + n10)*(8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 38*n10 - 147*d*n10 + 
      177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 147*d*n10^2 + 80*d^2*n10^2 + 
      40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 147*d*n3 + 177*d^2*n3 - 
      66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 160*d^2*n10*n3 + 120*n10^2*n3 - 
      126*d*n10^2*n3 + 32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 
      120*n10*n3^2 - 126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 
      32*n10*n3^3 + 8*n3^4)) - ((-6 + 5*d - 4*n10 - 4*n3)*
     (16 - 44*d + 4*d^2 + 15*d^3 + 24*n10 + 28*d*n10 - 52*d^2*n10 - 
      24*n10^2 + 52*d*n10^2 - 16*n10^3 + 8*n3 + 72*d*n3 - 66*d^2*n3 - 
      80*n10*n3 + 116*d*n10*n3 - 48*n10^2*n3 - 56*n3^2 + 64*d*n3^2 - 
      48*n10*n3^2 - 16*n3^3)*j[p4a, 0, 0, -1 + n3, 0, 0, 1, 0, n10, 0, n10, 
      0, 0, 1, 1])/(8*(8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 38*n10 - 
      147*d*n10 + 177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 147*d*n10^2 + 
      80*d^2*n10^2 + 40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 147*d*n3 + 
      177*d^2*n3 - 66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 160*d^2*n10*n3 + 
      120*n10^2*n3 - 126*d*n10^2*n3 + 32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 
      80*d^2*n3^2 + 120*n10*n3^2 - 126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 
      42*d*n3^3 + 32*n10*n3^3 + 8*n3^4)) + 
   ((-62 + 81*d - 26*d^2 - 38*n10 + 23*d*n10 - 4*n10^2 - 38*n3 + 23*d*n3 - 
      8*n10*n3 - 4*n3^2)*j[p4a, 0, 0, -1 + n3, 0, 0, 1, 0, n10, 0, n10, 1, 0, 
      0, 2])/((-2 + d)*(-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)) + 
   j[p4a, 0, 0, -1 + n3, 0, 0, 1, 0, n10, 0, n10, 1, 0, 1, 1] + 
   ((22*n10 - 35*d*n10 + 14*d^2*n10 + 26*n10^2 - 21*d*n10^2 + 8*n10^3 + 
      26*n10*n3 - 21*d*n10*n3 + 16*n10^2*n3 + 8*n10*n3^2)*
     j[p4a, 0, 0, -1 + n3, 0, 0, 1, 0, n10, 0, 1 + n10, 0, 0, 1, 1])/
    ((-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)*
     (-1 + d - n10 - n3)) - ((-d + n10 + n3)*(6 - 5*d + 4*n10 + 4*n3)*
     (-12 + 4*d + 5*d^2 + 4*n10 - 14*d*n10 + 8*n10^2 + 8*n3 - 8*d*n3 + 
      8*n10*n3)*j[p4a, 0, 0, n3, -1, 0, 0, 0, n10, 0, -1 + n10, 1, 0, 1, 2])/
    (8*(-1 + n10)*(8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 38*n10 - 147*d*n10 + 
      177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 147*d*n10^2 + 80*d^2*n10^2 + 
      40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 147*d*n3 + 177*d^2*n3 - 
      66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 160*d^2*n10*n3 + 120*n10^2*n3 - 
      126*d*n10^2*n3 + 32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 
      120*n10*n3^2 - 126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 
      32*n10*n3^3 + 8*n3^4)) + 
   ((29 - 47*d + 19*d^2 + 36*n10 - 29*d*n10 + 11*n10^2 + 36*n3 - 29*d*n3 + 
      22*n10*n3 + 11*n3^2)*j[p4a, 0, 0, n3, -1, 0, 0, 0, n10, 0, n10, 1, 0, 
      1, 2])/((-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)*
     (-1 + d - n10 - n3)) - ((-d + n10 + n3)*(6 - 5*d + 4*n10 + 4*n3)*
     (-12 + 4*d + 5*d^2 + 4*n10 - 14*d*n10 + 8*n10^2 + 8*n3 - 8*d*n3 + 
      8*n10*n3)*j[p4a, 0, 0, n3, -1, 0, 1, 0, n10, 0, -1 + n10, 1, 0, 0, 2])/
    (8*(-1 + n10)*(8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 38*n10 - 147*d*n10 + 
      177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 147*d*n10^2 + 80*d^2*n10^2 + 
      40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 147*d*n3 + 177*d^2*n3 - 
      66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 160*d^2*n10*n3 + 120*n10^2*n3 - 
      126*d*n10^2*n3 + 32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 
      120*n10*n3^2 - 126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 
      32*n10*n3^3 + 8*n3^4)) + 
   ((29 - 47*d + 19*d^2 + 36*n10 - 29*d*n10 + 11*n10^2 + 36*n3 - 29*d*n3 + 
      22*n10*n3 + 11*n3^2)*j[p4a, 0, 0, n3, -1, 0, 1, 0, n10, 0, n10, 1, 0, 
      0, 2])/((-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)*
     (-1 + d - n10 - n3)) - (n10*(6 - 5*d + 4*n10 + 4*n3)*
     (-24 + 44*d - 2*d^2 - 15*d^3 - 16*n10 - 32*d*n10 + 52*d^2*n10 + 
      24*n10^2 - 52*d*n10^2 + 16*n10^3 - 8*n3 - 32*d*n3 + 34*d^2*n3 + 
      40*n10*n3 - 68*d*n10*n3 + 32*n10^2*n3 + 16*n3^2 - 16*d*n3^2 + 
      16*n10*n3^2)*j[p4a, 0, 0, n3, -1, 0, 1, 0, 1 + n10, 0, -1 + n10, 0, 0, 
      1, 1])/(8*(-1 + n10)*(8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 38*n10 - 
      147*d*n10 + 177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 147*d*n10^2 + 
      80*d^2*n10^2 + 40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 147*d*n3 + 
      177*d^2*n3 - 66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 160*d^2*n10*n3 + 
      120*n10^2*n3 - 126*d*n10^2*n3 + 32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 
      80*d^2*n3^2 + 120*n10*n3^2 - 126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 
      42*d*n3^3 + 32*n10*n3^3 + 8*n3^4)) - 
   (n10*(6 - 5*d + 4*n10 + 4*n3)*(-24 + 44*d - 2*d^2 - 15*d^3 - 16*n10 - 
      32*d*n10 + 52*d^2*n10 + 24*n10^2 - 52*d*n10^2 + 16*n10^3 - 8*n3 - 
      32*d*n3 + 34*d^2*n3 + 40*n10*n3 - 68*d*n10*n3 + 32*n10^2*n3 + 16*n3^2 - 
      16*d*n3^2 + 16*n10*n3^2)*j[p4a, 0, 0, n3, -1, 0, 1, 0, 1 + n10, 0, 
      -1 + n10, 1, 0, 0, 1])/(8*(-1 + n10)*(8 - 44*d + 86*d^2 - 70*d^3 + 
      20*d^4 + 38*n10 - 147*d*n10 + 177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 
      147*d*n10^2 + 80*d^2*n10^2 + 40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 
      147*d*n3 + 177*d^2*n3 - 66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 
      160*d^2*n10*n3 + 120*n10^2*n3 - 126*d*n10^2*n3 + 32*n10^3*n3 + 
      62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 120*n10*n3^2 - 126*d*n10*n3^2 + 
      48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 32*n10*n3^3 + 8*n3^4)) + 
   ((12*n10 - 7*d*n10 + 2*n10^2 + 2*n10*n3)*j[p4a, 0, 0, n3, -1, 0, 1, 0, 
      1 + n10, 0, n10, 0, 0, 1, 1])/((-2 + 3*d - 4*n10 - 4*n3)*
     (-4 + 3*d - 2*n10 - 2*n3)) + ((12*n10 - 7*d*n10 + 2*n10^2 + 2*n10*n3)*
     j[p4a, 0, 0, n3, -1, 0, 1, 0, 1 + n10, 0, n10, 1, 0, 0, 1])/
    ((-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)) + 
   ((-2 - d + 2*n10 + 4*n3)*(6 - 5*d + 4*n10 + 4*n3)*
     j[p4a, 0, 0, n3, -1, 0, 2, 0, n10, 0, -1 + n10, 1, 0, 0, 1])/
    (8*(-1 + n10)*(1 - 3*d + 2*d^2 + 3*n10 - 4*d*n10 + 2*n10^2 + 3*n3 - 
      4*d*n3 + 4*n10*n3 + 2*n3^2)) + 
   ((-2 - d + 2*n10 + 4*n3)*(6 - 5*d + 4*n10 + 4*n3)*
     j[p4a, 0, 0, n3, -1, 0, 2, 0, n10, 0, -1 + n10, 1, 0, 1, 0])/
    (8*(-1 + n10)*(1 - 3*d + 2*d^2 + 3*n10 - 4*d*n10 + 2*n10^2 + 3*n3 - 
      4*d*n3 + 4*n10*n3 + 2*n3^2)) + 
   ((-7 + 5*d - 3*n10 - 3*n3)*j[p4a, 0, 0, n3, -1, 0, 2, 0, n10, 0, n10, 1, 
      0, 0, 1])/((-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)) + 
   ((-7 + 5*d - 3*n10 - 3*n3)*j[p4a, 0, 0, n3, -1, 0, 2, 0, n10, 0, n10, 1, 
      0, 1, 0])/((-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)) + 
   ((-4 + 3*d - 2*n10)*(-6 + 5*d - 4*n10 - 4*n3)*(d - n10 - n3)*
     j[p4a, 0, 0, n3, 0, -1, 0, 0, n10, 0, -1 + n10, 1, 0, 1, 2])/
    (2*(-2 + d)*(-1 + n10)*(1 - 3*d + 2*d^2 + 3*n10 - 4*d*n10 + 2*n10^2 + 
      3*n3 - 4*d*n3 + 4*n10*n3 + 2*n3^2)) + 
   ((-4 + 20*d - 22*d^2 + 7*d^3 - 28*n10 + 48*d*n10 - 20*d^2*n10 - 20*n10^2 + 
      16*d*n10^2 - 4*n10^3 - 28*n3 + 48*d*n3 - 20*d^2*n3 - 40*n10*n3 + 
      32*d*n10*n3 - 12*n10^2*n3 - 20*n3^2 + 16*d*n3^2 - 12*n10*n3^2 - 4*n3^3)*
     j[p4a, 0, 0, n3, 0, -1, 0, 0, n10, 0, n10, 1, 0, 1, 2])/
    ((-2 + d)*(-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)*
     (-1 + d - n10 - n3)) + ((-4 + 3*d - 2*n10)*(-6 + 5*d - 4*n10 - 4*n3)*
     (d - n10 - n3)*j[p4a, 0, 0, n3, 0, -1, 1, 0, n10, 0, -1 + n10, 1, 0, 0, 
      2])/(2*(-2 + d)*(-1 + n10)*(1 - 3*d + 2*d^2 + 3*n10 - 4*d*n10 + 
      2*n10^2 + 3*n3 - 4*d*n3 + 4*n10*n3 + 2*n3^2)) + 
   ((-4 + 20*d - 22*d^2 + 7*d^3 - 28*n10 + 48*d*n10 - 20*d^2*n10 - 20*n10^2 + 
      16*d*n10^2 - 4*n10^3 - 28*n3 + 48*d*n3 - 20*d^2*n3 - 40*n10*n3 + 
      32*d*n10*n3 - 12*n10^2*n3 - 20*n3^2 + 16*d*n3^2 - 12*n10*n3^2 - 4*n3^3)*
     j[p4a, 0, 0, n3, 0, -1, 1, 0, n10, 0, n10, 1, 0, 0, 2])/
    ((-2 + d)*(-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)*
     (-1 + d - n10 - n3)) + ((-6 + 5*d - 4*n10 - 4*n3)*
     (32 - 232*d + 468*d^2 - 374*d^3 + 105*d^4 + 176*n10 - 672*d*n10 + 
      804*d^2*n10 - 304*d^3*n10 + 240*n10^2 - 584*d*n10^2 + 336*d^2*n10^2 + 
      144*n10^3 - 168*d*n10^3 + 32*n10^4 + 144*n3 - 504*d*n3 + 572*d^2*n3 - 
      210*d^3*n3 + 352*n10*n3 - 840*d*n10*n3 + 476*d^2*n10*n3 + 
      320*n10^2*n3 - 368*d*n10^2*n3 + 96*n10^3*n3 + 112*n3^2 - 256*d*n3^2 + 
      140*d^2*n3^2 + 208*n10*n3^2 - 232*d*n10*n3^2 + 96*n10^2*n3^2 + 
      32*n3^3 - 32*d*n3^3 + 32*n10*n3^3)*j[p4a, 0, 0, n3, 0, -1, 2, 0, n10, 
      0, -1 + n10, 1, 0, 0, 1])/(8*(-2 + d)*(-1 + n10)*
     (8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 38*n10 - 147*d*n10 + 
      177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 147*d*n10^2 + 80*d^2*n10^2 + 
      40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 147*d*n3 + 177*d^2*n3 - 
      66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 160*d^2*n10*n3 + 120*n10^2*n3 - 
      126*d*n10^2*n3 + 32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 
      120*n10*n3^2 - 126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 
      32*n10*n3^3 + 8*n3^4)) + ((-6 + 5*d - 4*n10 - 4*n3)*
     (32 - 232*d + 468*d^2 - 374*d^3 + 105*d^4 + 176*n10 - 672*d*n10 + 
      804*d^2*n10 - 304*d^3*n10 + 240*n10^2 - 584*d*n10^2 + 336*d^2*n10^2 + 
      144*n10^3 - 168*d*n10^3 + 32*n10^4 + 144*n3 - 504*d*n3 + 572*d^2*n3 - 
      210*d^3*n3 + 352*n10*n3 - 840*d*n10*n3 + 476*d^2*n10*n3 + 
      320*n10^2*n3 - 368*d*n10^2*n3 + 96*n10^3*n3 + 112*n3^2 - 256*d*n3^2 + 
      140*d^2*n3^2 + 208*n10*n3^2 - 232*d*n10*n3^2 + 96*n10^2*n3^2 + 
      32*n3^3 - 32*d*n3^3 + 32*n10*n3^3)*j[p4a, 0, 0, n3, 0, -1, 2, 0, n10, 
      0, -1 + n10, 1, 0, 1, 0])/(8*(-2 + d)*(-1 + n10)*
     (8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 38*n10 - 147*d*n10 + 
      177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 147*d*n10^2 + 80*d^2*n10^2 + 
      40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 147*d*n3 + 177*d^2*n3 - 
      66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 160*d^2*n10*n3 + 120*n10^2*n3 - 
      126*d*n10^2*n3 + 32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 
      120*n10*n3^2 - 126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 
      32*n10*n3^3 + 8*n3^4)) + 
   ((20 - 30*d + 11*d^2 + 20*n10 - 14*d*n10 + 4*n10^2 + 20*n3 - 14*d*n3 + 
      8*n10*n3 + 4*n3^2)*j[p4a, 0, 0, n3, 0, -1, 2, 0, n10, 0, n10, 1, 0, 0, 
      1])/((-2 + d)*(-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)) + 
   ((20 - 30*d + 11*d^2 + 20*n10 - 14*d*n10 + 4*n10^2 + 20*n3 - 14*d*n3 + 
      8*n10*n3 + 4*n3^2)*j[p4a, 0, 0, n3, 0, -1, 2, 0, n10, 0, n10, 1, 0, 1, 
      0])/((-2 + d)*(-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)) + 
   ((-6 + 5*d - 4*n10 - 4*n3)*(24 - 44*d + 2*d^2 + 15*d^3 + 16*n10 + 
      32*d*n10 - 52*d^2*n10 - 24*n10^2 + 52*d*n10^2 - 16*n10^3 + 8*n3 + 
      32*d*n3 - 34*d^2*n3 - 40*n10*n3 + 68*d*n10*n3 - 32*n10^2*n3 - 16*n3^2 + 
      16*d*n3^2 - 16*n10*n3^2)*j[p4a, 0, 0, n3, 0, 0, 0, -1, n10, 0, n10, 1, 
      0, 1, 1])/(8*(8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 38*n10 - 
      147*d*n10 + 177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 147*d*n10^2 + 
      80*d^2*n10^2 + 40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 147*d*n3 + 
      177*d^2*n3 - 66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 160*d^2*n10*n3 + 
      120*n10^2*n3 - 126*d*n10^2*n3 + 32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 
      80*d^2*n3^2 + 120*n10*n3^2 - 126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 
      42*d*n3^3 + 32*n10*n3^3 + 8*n3^4)) + 
   ((-12*n10 + 7*d*n10 - 2*n10^2 - 2*n10*n3)*j[p4a, 0, 0, n3, 0, 0, 0, -1, 
      n10, 0, 1 + n10, 1, 0, 1, 1])/((-2 + 3*d - 4*n10 - 4*n3)*
     (-4 + 3*d - 2*n10 - 2*n3)) - ((-6 + 5*d - 4*n10 - 4*n3)*
     (80 - 496*d + 976*d^2 - 748*d^3 + 195*d^4 + 384*n10 - 1432*d*n10 + 
      1576*d^2*n10 - 526*d^3*n10 + 512*n10^2 - 1080*d*n10^2 + 516*d^2*n10^2 + 
      240*n10^3 - 216*d*n10^3 + 32*n10^4 + 336*n3 - 1184*d*n3 + 1220*d^2*n3 - 
      388*d^3*n3 + 832*n10*n3 - 1648*d*n10*n3 + 760*d^2*n10*n3 + 
      544*n10^2*n3 - 480*d*n10^2*n3 + 96*n10^3*n3 + 320*n3^2 - 568*d*n3^2 + 
      244*d^2*n3^2 + 368*n10*n3^2 - 312*d*n10*n3^2 + 96*n10^2*n3^2 + 
      64*n3^3 - 48*d*n3^3 + 32*n10*n3^3)*j[p4a, 0, 0, n3, 0, 0, 0, 0, 
      -1 + n10, 0, -1 + n10, 2, 0, 1, 1])/(8*(-2 + d)*(-1 + n10)*
     (8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 38*n10 - 147*d*n10 + 
      177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 147*d*n10^2 + 80*d^2*n10^2 + 
      40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 147*d*n3 + 177*d^2*n3 - 
      66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 160*d^2*n10*n3 + 120*n10^2*n3 - 
      126*d*n10^2*n3 + 32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 
      120*n10*n3^2 - 126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 
      32*n10*n3^3 + 8*n3^4)) + ((-6 + 5*d - 4*n10 - 4*n3)*
     (24 - 44*d + 2*d^2 + 15*d^3 + 16*n10 + 32*d*n10 - 52*d^2*n10 - 
      24*n10^2 + 52*d*n10^2 - 16*n10^3 + 8*n3 + 32*d*n3 - 34*d^2*n3 - 
      40*n10*n3 + 68*d*n10*n3 - 32*n10^2*n3 - 16*n3^2 + 16*d*n3^2 - 
      16*n10*n3^2)*j[p4a, 0, 0, n3, 0, 0, 0, 0, -1 + n10, 0, n10, 1, 0, 1, 
      1])/(8*(8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 38*n10 - 147*d*n10 + 
      177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 147*d*n10^2 + 80*d^2*n10^2 + 
      40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 147*d*n3 + 177*d^2*n3 - 
      66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 160*d^2*n10*n3 + 120*n10^2*n3 - 
      126*d*n10^2*n3 + 32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 
      120*n10*n3^2 - 126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 
      32*n10*n3^3 + 8*n3^4)) - 
   (2*(22 - 28*d + 9*d^2 + 12*n10 - 8*d*n10 + 2*n10^2 + 12*n3 - 8*d*n3 + 
      4*n10*n3 + 2*n3^2)*j[p4a, 0, 0, n3, 0, 0, 0, 0, -1 + n10, 0, n10, 2, 0, 
      1, 1])/((-2 + d)*(-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)) + 
   ((-12*n10 + 7*d*n10 - 2*n10^2 - 2*n10*n3)*j[p4a, 0, 0, n3, 0, 0, 0, 0, 
      -1 + n10, 0, 1 + n10, 1, 0, 1, 1])/((-2 + 3*d - 4*n10 - 4*n3)*
     (-4 + 3*d - 2*n10 - 2*n3)) - ((6 - 5*d + 4*n10 + 4*n3)*
     (6 - 7*d + 6*n10 + 4*n3)*j[p4a, 0, 0, n3, 0, 0, 0, 0, n10, -1, -1 + n10, 
      1, 0, 1, 2])/(4*(-1 + n10)*(1 - 3*d + 2*d^2 + 3*n10 - 4*d*n10 + 
      2*n10^2 + 3*n3 - 4*d*n3 + 4*n10*n3 + 2*n3^2)) - 
   ((-6 + 5*d - 4*n10 - 4*n3)*(-96 + 424*d - 620*d^2 + 342*d^3 - 55*d^4 - 
      456*n10 + 1164*d*n10 - 714*d^2*n10 - 15*d^3*n10 + 45*d^4*n10 - 
      344*n10^2 + 88*d*n10^2 + 458*d^2*n10^2 - 156*d^3*n10^2 + 144*n10^3 - 
      480*d*n10^3 + 156*d^2*n10^3 + 128*n10^4 - 48*d*n10^4 - 280*n3 + 
      724*d*n3 - 490*d^2*n3 + 67*d^3*n3 - 472*n10*n3 + 224*d*n10*n3 + 
      354*d^2*n10*n3 - 102*d^3*n10*n3 + 240*n10^2*n3 - 736*d*n10^2*n3 + 
      204*d^2*n10^2*n3 + 288*n10^3*n3 - 96*d*n10^3*n3 - 176*n3^2 + 
      160*d*n3^2 + 4*d^2*n3^2 + 96*n10*n3^2 - 272*d*n10*n3^2 + 
      48*d^2*n10*n3^2 + 192*n10^2*n3^2 - 48*d*n10^2*n3^2 - 16*d*n3^3 + 
      32*n10*n3^3)*j[p4a, 0, 0, n3, 0, 0, 0, 0, n10, 0, -1 + n10, 1, 0, 1, 
      1])/(8*(-2 + d)*(-1 + n10)*(8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 
      38*n10 - 147*d*n10 + 177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 
      147*d*n10^2 + 80*d^2*n10^2 + 40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 
      147*d*n3 + 177*d^2*n3 - 66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 
      160*d^2*n10*n3 + 120*n10^2*n3 - 126*d*n10^2*n3 + 32*n10^3*n3 + 
      62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 120*n10*n3^2 - 126*d*n10*n3^2 + 
      48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 32*n10*n3^3 + 8*n3^4)) + 
   ((6 - 5*d + 4*n10 + 4*n3)*(6 - 7*d + 6*n10 + 4*n3)*
     j[p4a, 0, 0, n3, 0, 0, 0, 0, n10, 0, -1 + n10, 1, 0, 1, 2])/
    (4*(-1 + n10)*(1 - 3*d + 2*d^2 + 3*n10 - 4*d*n10 + 2*n10^2 + 3*n3 - 
      4*d*n3 + 4*n10*n3 + 2*n3^2)) + 
   ((-4 + 3*d - 2*n10)*(-6 + 5*d - 4*n10 - 4*n3)*(-2 + 3*d - 2*n10 - 2*n3)*
     j[p4a, 0, 0, n3, 0, 0, 0, 0, n10, 0, -1 + n10, 2, -1, 1, 1])/
    (4*(-2 + d)*(-1 + n10)*(1 - 3*d + 2*d^2 + 3*n10 - 4*d*n10 + 2*n10^2 + 
      3*n3 - 4*d*n3 + 4*n10*n3 + 2*n3^2)) - 
   ((-4 + 3*d - 2*n10)*(-6 + 5*d - 4*n10 - 4*n3)*(-2 + 3*d - 2*n10 - 2*n3)*
     j[p4a, 0, 0, n3, 0, 0, 0, 0, n10, 0, -1 + n10, 2, 0, 1, 1])/
    (4*(-2 + d)*(-1 + n10)*(1 - 3*d + 2*d^2 + 3*n10 - 4*d*n10 + 2*n10^2 + 
      3*n3 - 4*d*n3 + 4*n10*n3 + 2*n3^2)) - 
   ((-6 + 5*d - 4*n10 - 4*n3)*(24 - 44*d + 2*d^2 + 15*d^3 + 16*n10 + 
      32*d*n10 - 52*d^2*n10 - 24*n10^2 + 52*d*n10^2 - 16*n10^3 + 8*n3 + 
      32*d*n3 - 34*d^2*n3 - 40*n10*n3 + 68*d*n10*n3 - 32*n10^2*n3 - 16*n3^2 + 
      16*d*n3^2 - 16*n10*n3^2)*j[p4a, 0, 0, n3, 0, 0, 0, 0, n10, 0, n10, 1, 
      -1, 1, 1])/(8*(8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 38*n10 - 
      147*d*n10 + 177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 147*d*n10^2 + 
      80*d^2*n10^2 + 40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 147*d*n3 + 
      177*d^2*n3 - 66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 160*d^2*n10*n3 + 
      120*n10^2*n3 - 126*d*n10^2*n3 + 32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 
      80*d^2*n3^2 + 120*n10*n3^2 - 126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 
      42*d*n3^3 + 32*n10*n3^3 + 8*n3^4)) + 
   ((-128 + 4416*d - 20928*d^2 + 41760*d^3 - 42864*d^4 + 23532*d^5 - 
      6460*d^6 + 675*d^7 - 9504*n10 + 72160*d*n10 - 197704*d^2*n10 + 
      259952*d^3*n10 - 176304*d^4*n10 + 58968*d^5*n10 - 7590*d^6*n10 - 
      43392*n10^2 + 224608*d*n10^2 - 424192*d^2*n10^2 + 370008*d^3*n10^2 - 
      150088*d^4*n10^2 + 22620*d^5*n10^2 - 72800*n10^3 + 262144*d*n10^3 - 
      326968*d^2*n10^3 + 168600*d^3*n10^3 - 30184*d^4*n10^3 - 54272*n10^4 + 
      127296*d*n10^4 - 92352*d^2*n10^4 + 20400*d^3*n10^4 - 17536*n10^5 + 
      23360*d*n10^5 - 6816*d^2*n10^5 - 2048*n10^6 + 896*d*n10^6 - 5664*n3 + 
      44576*d*n3 - 121128*d^2*n3 + 154256*d^3*n3 - 99168*d^4*n3 + 
      30516*d^5*n3 - 3420*d^6*n3 - 65792*n10*n3 + 335712*d*n10*n3 - 
      620864*d^2*n10*n3 + 526632*d^3*n10*n3 - 205616*d^4*n10*n3 + 
      29304*d^5*n10*n3 - 177120*n10^2*n3 + 627808*d*n10^2*n3 - 
      768056*d^2*n10^2*n3 + 386112*d^3*n10^2*n3 - 66672*d^4*n10^2*n3 - 
      181696*n10^3*n3 + 419776*d*n10^3*n3 - 298512*d^2*n10^3*n3 + 
      64080*d^3*n10^3*n3 - 74624*n10^4*n3 + 97664*d*n10^4*n3 - 
      27776*d^2*n10^4*n3 - 10496*n10^5*n3 + 4480*d*n10^5*n3 - 22400*n3^2 + 
      111104*d*n3^2 - 196672*d^2*n3^2 + 156624*d^3*n3^2 - 55528*d^4*n3^2 + 
      6684*d^5*n3^2 - 135840*n10*n3^2 + 469184*d*n10*n3^2 - 
      555208*d^2*n10*n3^2 + 266424*d^3*n10*n3^2 - 42792*d^4*n10*n3^2 - 
      219456*n10^2*n3^2 + 495552*d*n10^2*n3^2 - 341424*d^2*n10^2*n3^2 + 
      69840*d^3*n10^2*n3^2 - 123136*n10^3*n3^2 + 157056*d*n10^3*n3^2 - 
      42944*d^2*n10^3*n3^2 - 21760*n10^4*n3^2 + 8960*d*n10^4*n3^2 - 
      31520*n3^3 + 103520*d*n3^3 - 114120*d^2*n3^3 + 48912*d^3*n3^3 - 
      6304*d^4*n3^3 - 110912*n10*n3^3 + 240960*d*n10*n3^3 - 
      156720*d^2*n10*n3^3 + 29040*d^3*n10*n3^3 - 97024*n10^2*n3^3 + 
      118784*d*n10^2*n3^3 - 30336*d^2*n10^2*n3^3 - 23040*n10^3*n3^3 + 
      8960*d*n10^3*n3^3 - 18880*n3^4 + 37888*d*n3^4 - 21456*d^2*n3^4 + 
      2880*d^3*n3^4 - 35456*n10*n3^4 + 40256*d*n10*n3^4 - 8864*d^2*n10*n3^4 - 
      12800*n10^2*n3^4 + 4480*d*n10^2*n3^4 - 4480*n3^5 + 4224*d*n3^5 - 
      512*d^2*n3^5 - 3328*n10*n3^5 + 896*d*n10*n3^5 - 256*n3^6)*
     j[p4a, 0, 0, n3, 0, 0, 0, 0, n10, 0, n10, 1, 0, 1, 1])/
    (8*(-2 + d)*(-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)*
     (8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 38*n10 - 147*d*n10 + 
      177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 147*d*n10^2 + 80*d^2*n10^2 + 
      40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 147*d*n3 + 177*d^2*n3 - 
      66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 160*d^2*n10*n3 + 120*n10^2*n3 - 
      126*d*n10^2*n3 + 32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 
      120*n10*n3^2 - 126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 
      32*n10*n3^3 + 8*n3^4)) + 
   ((20 - 30*d + 11*d^2 + 20*n10 - 14*d*n10 + 4*n10^2 + 20*n3 - 14*d*n3 + 
      8*n10*n3 + 4*n3^2)*j[p4a, 0, 0, n3, 0, 0, 0, 0, n10, 0, n10, 2, -1, 1, 
      1])/((-2 + d)*(-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)) + 
   ((-20 + 30*d - 11*d^2 - 20*n10 + 14*d*n10 - 4*n10^2 - 20*n3 + 14*d*n3 - 
      8*n10*n3 - 4*n3^2)*j[p4a, 0, 0, n3, 0, 0, 0, 0, n10, 0, n10, 2, 0, 1, 
      1])/((-2 + d)*(-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)) + 
   ((12*n10 - 7*d*n10 + 2*n10^2 + 2*n10*n3)*j[p4a, 0, 0, n3, 0, 0, 0, 0, n10, 
      0, 1 + n10, 1, -1, 1, 1])/((-2 + 3*d - 4*n10 - 4*n3)*
     (-4 + 3*d - 2*n10 - 2*n3)) + ((-12*n10 + 7*d*n10 - 2*n10^2 - 2*n10*n3)*
     j[p4a, 0, 0, n3, 0, 0, 0, 0, n10, 0, 1 + n10, 1, 0, 1, 1])/
    ((-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)) + 
   (n10*(6 - 5*d + 4*n10 + 4*n3)*(-24 + 44*d - 2*d^2 - 15*d^3 - 16*n10 - 
      32*d*n10 + 52*d^2*n10 + 24*n10^2 - 52*d*n10^2 + 16*n10^3 - 8*n3 - 
      32*d*n3 + 34*d^2*n3 + 40*n10*n3 - 68*d*n10*n3 + 32*n10^2*n3 + 16*n3^2 - 
      16*d*n3^2 + 16*n10*n3^2)*j[p4a, 0, 0, n3, 0, 0, 0, 0, 1 + n10, 0, 
      -1 + n10, 1, -1, 1, 1])/(8*(-1 + n10)*(8 - 44*d + 86*d^2 - 70*d^3 + 
      20*d^4 + 38*n10 - 147*d*n10 + 177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 
      147*d*n10^2 + 80*d^2*n10^2 + 40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 
      147*d*n3 + 177*d^2*n3 - 66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 
      160*d^2*n10*n3 + 120*n10^2*n3 - 126*d*n10^2*n3 + 32*n10^3*n3 + 
      62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 120*n10*n3^2 - 126*d*n10*n3^2 + 
      48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 32*n10*n3^3 + 8*n3^4)) + 
   ((-12*n10 + 7*d*n10 - 2*n10^2 - 2*n10*n3)*j[p4a, 0, 0, n3, 0, 0, 0, 0, 
      1 + n10, 0, n10, 1, -1, 1, 1])/((-2 + 3*d - 4*n10 - 4*n3)*
     (-4 + 3*d - 2*n10 - 2*n3)) + 
   ((-4 + 3*d - 2*n10)*(-6 + 5*d - 4*n10 - 4*n3)*(d - n10 - n3)*
     j[p4a, 0, 0, n3, 0, 0, 1, -1, n10, 0, -1 + n10, 1, 0, 0, 2])/
    (2*(-2 + d)*(-1 + n10)*(1 - 3*d + 2*d^2 + 3*n10 - 4*d*n10 + 2*n10^2 + 
      3*n3 - 4*d*n3 + 4*n10*n3 + 2*n3^2)) + 
   ((-6 + 5*d - 4*n10 - 4*n3)*(16 - 44*d + 4*d^2 + 15*d^3 + 24*n10 + 
      28*d*n10 - 52*d^2*n10 - 24*n10^2 + 52*d*n10^2 - 16*n10^3 + 8*n3 + 
      72*d*n3 - 66*d^2*n3 - 80*n10*n3 + 116*d*n10*n3 - 48*n10^2*n3 - 
      56*n3^2 + 64*d*n3^2 - 48*n10*n3^2 - 16*n3^3)*j[p4a, 0, 0, n3, 0, 0, 1, 
      -1, n10, 0, n10, 0, 0, 1, 1])/(8*(8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 
      38*n10 - 147*d*n10 + 177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 
      147*d*n10^2 + 80*d^2*n10^2 + 40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 
      147*d*n3 + 177*d^2*n3 - 66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 
      160*d^2*n10*n3 + 120*n10^2*n3 - 126*d*n10^2*n3 + 32*n10^3*n3 + 
      62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 120*n10*n3^2 - 126*d*n10*n3^2 + 
      48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 32*n10*n3^3 + 8*n3^4)) + 
   ((-6 + 5*d - 4*n10 - 4*n3)*(16 - 44*d + 4*d^2 + 15*d^3 + 24*n10 + 
      28*d*n10 - 52*d^2*n10 - 24*n10^2 + 52*d*n10^2 - 16*n10^3 + 8*n3 + 
      72*d*n3 - 66*d^2*n3 - 80*n10*n3 + 116*d*n10*n3 - 48*n10^2*n3 - 
      56*n3^2 + 64*d*n3^2 - 48*n10*n3^2 - 16*n3^3)*j[p4a, 0, 0, n3, 0, 0, 1, 
      -1, n10, 0, n10, 1, 0, 0, 1])/(8*(8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 
      38*n10 - 147*d*n10 + 177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 
      147*d*n10^2 + 80*d^2*n10^2 + 40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 
      147*d*n3 + 177*d^2*n3 - 66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 
      160*d^2*n10*n3 + 120*n10^2*n3 - 126*d*n10^2*n3 + 32*n10^3*n3 + 
      62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 120*n10*n3^2 - 126*d*n10*n3^2 + 
      48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 32*n10*n3^3 + 8*n3^4)) + 
   ((-4 + 20*d - 22*d^2 + 7*d^3 - 28*n10 + 48*d*n10 - 20*d^2*n10 - 20*n10^2 + 
      16*d*n10^2 - 4*n10^3 - 28*n3 + 48*d*n3 - 20*d^2*n3 - 40*n10*n3 + 
      32*d*n10*n3 - 12*n10^2*n3 - 20*n3^2 + 16*d*n3^2 - 12*n10*n3^2 - 4*n3^3)*
     j[p4a, 0, 0, n3, 0, 0, 1, -1, n10, 0, n10, 1, 0, 0, 2])/
    ((-2 + d)*(-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)*
     (-1 + d - n10 - n3)) + ((-22*n10 + 35*d*n10 - 14*d^2*n10 - 26*n10^2 + 
      21*d*n10^2 - 8*n10^3 - 26*n10*n3 + 21*d*n10*n3 - 16*n10^2*n3 - 
      8*n10*n3^2)*j[p4a, 0, 0, n3, 0, 0, 1, -1, n10, 0, 1 + n10, 0, 0, 1, 1])/
    ((-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)*
     (-1 + d - n10 - n3)) + ((-22*n10 + 35*d*n10 - 14*d^2*n10 - 26*n10^2 + 
      21*d*n10^2 - 8*n10^3 - 26*n10*n3 + 21*d*n10*n3 - 16*n10^2*n3 - 
      8*n10*n3^2)*j[p4a, 0, 0, n3, 0, 0, 1, -1, n10, 0, 1 + n10, 1, 0, 0, 1])/
    ((-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)*
     (-1 + d - n10 - n3)) + (n10*(6 - 5*d + 4*n10 + 4*n3)*
     (-24 + 44*d - 2*d^2 - 15*d^3 - 16*n10 - 32*d*n10 + 52*d^2*n10 + 
      24*n10^2 - 52*d*n10^2 + 16*n10^3 - 8*n3 - 32*d*n3 + 34*d^2*n3 + 
      40*n10*n3 - 68*d*n10*n3 + 32*n10^2*n3 + 16*n3^2 - 16*d*n3^2 + 
      16*n10*n3^2)*j[p4a, 0, 0, n3, 0, 0, 1, -1, 1 + n10, 0, -1 + n10, 0, 0, 
      1, 1])/(8*(-1 + n10)*(8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 38*n10 - 
      147*d*n10 + 177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 147*d*n10^2 + 
      80*d^2*n10^2 + 40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 147*d*n3 + 
      177*d^2*n3 - 66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 160*d^2*n10*n3 + 
      120*n10^2*n3 - 126*d*n10^2*n3 + 32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 
      80*d^2*n3^2 + 120*n10*n3^2 - 126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 
      42*d*n3^3 + 32*n10*n3^3 + 8*n3^4)) + 
   (n10*(6 - 5*d + 4*n10 + 4*n3)*(-24 + 44*d - 2*d^2 - 15*d^3 - 16*n10 - 
      32*d*n10 + 52*d^2*n10 + 24*n10^2 - 52*d*n10^2 + 16*n10^3 - 8*n3 - 
      32*d*n3 + 34*d^2*n3 + 40*n10*n3 - 68*d*n10*n3 + 32*n10^2*n3 + 16*n3^2 - 
      16*d*n3^2 + 16*n10*n3^2)*j[p4a, 0, 0, n3, 0, 0, 1, -1, 1 + n10, 0, 
      -1 + n10, 1, 0, 0, 1])/(8*(-1 + n10)*(8 - 44*d + 86*d^2 - 70*d^3 + 
      20*d^4 + 38*n10 - 147*d*n10 + 177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 
      147*d*n10^2 + 80*d^2*n10^2 + 40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 
      147*d*n3 + 177*d^2*n3 - 66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 
      160*d^2*n10*n3 + 120*n10^2*n3 - 126*d*n10^2*n3 + 32*n10^3*n3 + 
      62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 120*n10*n3^2 - 126*d*n10*n3^2 + 
      48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 32*n10*n3^3 + 8*n3^4)) + 
   ((-8*n10 + 11*d*n10 - 4*d^2*n10 - 6*n10^2 + 5*d*n10^2 - 2*n10^3 - 
      6*n10*n3 + 5*d*n10*n3 - 4*n10^2*n3 - 2*n10*n3^2)*
     j[p4a, 0, 0, n3, 0, 0, 1, -1, 1 + n10, 0, n10, 0, 0, 1, 1])/
    ((-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)*
     (-1 + d - n10 - n3)) + ((-8*n10 + 11*d*n10 - 4*d^2*n10 - 6*n10^2 + 
      5*d*n10^2 - 2*n10^3 - 6*n10*n3 + 5*d*n10*n3 - 4*n10^2*n3 - 2*n10*n3^2)*
     j[p4a, 0, 0, n3, 0, 0, 1, -1, 1 + n10, 0, n10, 1, 0, 0, 1])/
    ((-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)*
     (-1 + d - n10 - n3)) + ((-4 + 3*d - 2*n10)*(-6 + 5*d - 4*n10 - 4*n3)*
     (d - n10 - n3)*j[p4a, 0, 0, n3, 0, 0, 1, 0, -1 + n10, 0, -1 + n10, 1, 0, 
      0, 2])/(2*(-2 + d)*(-1 + n10)*(1 - 3*d + 2*d^2 + 3*n10 - 4*d*n10 + 
      2*n10^2 + 3*n3 - 4*d*n3 + 4*n10*n3 + 2*n3^2)) - 
   ((6 - 5*d + 4*n10 + 4*n3)*(48 - 304*d + 600*d^2 - 468*d^3 + 125*d^4 + 
      260*n10 - 976*d*n10 + 1097*d^2*n10 - 375*d^3*n10 + 388*n10^2 - 
      838*d*n10^2 + 410*d^2*n10^2 + 208*n10^3 - 192*d*n10^3 + 32*n10^4 + 
      244*n3 - 888*d*n3 + 981*d^2*n3 - 337*d^3*n3 + 700*n10*n3 - 
      1494*d*n10*n3 + 742*d^2*n10*n3 + 556*n10^2*n3 - 528*d*n10^2*n3 + 
      120*n10^3*n3 + 312*n3^2 - 656*d*n3^2 + 332*d^2*n3^2 + 488*n10*n3^2 - 
      480*d*n10*n3^2 + 168*n10^2*n3^2 + 140*n3^3 - 144*d*n3^3 + 
      104*n10*n3^3 + 24*n3^4)*j[p4a, 0, 0, n3, 0, 0, 1, 0, -1 + n10, 0, 
      -1 + n10, 1, 0, 1, 1])/(4*(-1 + n10)*(8 - 44*d + 86*d^2 - 70*d^3 + 
      20*d^4 + 38*n10 - 147*d*n10 + 177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 
      147*d*n10^2 + 80*d^2*n10^2 + 40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 
      147*d*n3 + 177*d^2*n3 - 66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 
      160*d^2*n10*n3 + 120*n10^2*n3 - 126*d*n10^2*n3 + 32*n10^3*n3 + 
      62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 120*n10*n3^2 - 126*d*n10*n3^2 + 
      48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 32*n10*n3^3 + 8*n3^4)) + 
   ((-6 + 5*d - 4*n10 - 4*n3)*(176 - 720*d + 1072*d^2 - 692*d^3 + 165*d^4 + 
      448*n10 - 1336*d*n10 + 1304*d^2*n10 - 422*d^3*n10 + 416*n10^2 - 
      824*d*n10^2 + 412*d^2*n10^2 + 176*n10^3 - 184*d*n10^3 + 32*n10^4 + 
      368*n3 - 1072*d*n3 + 1020*d^2*n3 - 320*d^3*n3 + 672*n10*n3 - 
      1296*d*n10*n3 + 624*d^2*n10*n3 + 416*n10^2*n3 - 416*d*n10^2*n3 + 
      96*n10^3*n3 + 256*n3^2 - 472*d*n3^2 + 212*d^2*n3^2 + 304*n10*n3^2 - 
      280*d*n10*n3^2 + 96*n10^2*n3^2 + 64*n3^3 - 48*d*n3^3 + 32*n10*n3^3)*
     j[p4a, 0, 0, n3, 0, 0, 1, 0, -1 + n10, 0, -1 + n10, 1, 0, 2, 0])/
    (8*(-2 + d)*(-1 + n10)*(8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 38*n10 - 
      147*d*n10 + 177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 147*d*n10^2 + 
      80*d^2*n10^2 + 40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 147*d*n3 + 
      177*d^2*n3 - 66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 160*d^2*n10*n3 + 
      120*n10^2*n3 - 126*d*n10^2*n3 + 32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 
      80*d^2*n3^2 + 120*n10*n3^2 - 126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 
      42*d*n3^3 + 32*n10*n3^3 + 8*n3^4)) + 
   ((-6 + 5*d - 4*n10 - 4*n3)*(16 - 44*d + 4*d^2 + 15*d^3 + 24*n10 + 
      28*d*n10 - 52*d^2*n10 - 24*n10^2 + 52*d*n10^2 - 16*n10^3 + 8*n3 + 
      72*d*n3 - 66*d^2*n3 - 80*n10*n3 + 116*d*n10*n3 - 48*n10^2*n3 - 
      56*n3^2 + 64*d*n3^2 - 48*n10*n3^2 - 16*n3^3)*j[p4a, 0, 0, n3, 0, 0, 1, 
      0, -1 + n10, 0, n10, 0, 0, 1, 1])/
    (8*(8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 38*n10 - 147*d*n10 + 
      177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 147*d*n10^2 + 80*d^2*n10^2 + 
      40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 147*d*n3 + 177*d^2*n3 - 
      66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 160*d^2*n10*n3 + 120*n10^2*n3 - 
      126*d*n10^2*n3 + 32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 
      120*n10*n3^2 - 126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 
      32*n10*n3^3 + 8*n3^4)) + 
   ((-4 + 20*d - 22*d^2 + 7*d^3 - 28*n10 + 48*d*n10 - 20*d^2*n10 - 20*n10^2 + 
      16*d*n10^2 - 4*n10^3 - 28*n3 + 48*d*n3 - 20*d^2*n3 - 40*n10*n3 + 
      32*d*n10*n3 - 12*n10^2*n3 - 20*n3^2 + 16*d*n3^2 - 12*n10*n3^2 - 4*n3^3)*
     j[p4a, 0, 0, n3, 0, 0, 1, 0, -1 + n10, 0, n10, 1, 0, 0, 2])/
    ((-2 + d)*(-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)*
     (-1 + d - n10 - n3)) + ((-16 + 13*d - 10*n10 - 10*n3)*
     j[p4a, 0, 0, n3, 0, 0, 1, 0, -1 + n10, 0, n10, 1, 0, 1, 1])/
    (-2 + 3*d - 4*n10 - 4*n3) + 
   (4*(-1 - d + d^2 + 4*n10 - 3*d*n10 + n10^2 + 4*n3 - 3*d*n3 + 2*n10*n3 + 
      n3^2)*j[p4a, 0, 0, n3, 0, 0, 1, 0, -1 + n10, 0, n10, 1, 0, 2, 0])/
    ((-2 + d)*(-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)) + 
   ((-22*n10 + 35*d*n10 - 14*d^2*n10 - 26*n10^2 + 21*d*n10^2 - 8*n10^3 - 
      26*n10*n3 + 21*d*n10*n3 - 16*n10^2*n3 - 8*n10*n3^2)*
     j[p4a, 0, 0, n3, 0, 0, 1, 0, -1 + n10, 0, 1 + n10, 0, 0, 1, 1])/
    ((-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)*
     (-1 + d - n10 - n3)) + ((6 - 5*d + 4*n10 + 4*n3)*
     (16 - 20*d - 4*d^2 + 5*d^3 + 28*d*n10 - 14*d^2*n10 - 16*n10^2 + 
      8*d*n10^2 - 16*n3 + 64*d*n3 - 40*d^2*n3 - 56*n10*n3 + 56*d*n10*n3 - 
      16*n10^2*n3 - 40*n3^2 + 48*d*n3^2 - 32*n10*n3^2 - 16*n3^3)*
     j[p4a, 0, 0, n3, 0, 0, 1, 0, n10, -1, -1 + n10, 1, 0, 0, 2])/
    (8*(-1 + n10)*(8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 38*n10 - 147*d*n10 + 
      177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 147*d*n10^2 + 80*d^2*n10^2 + 
      40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 147*d*n3 + 177*d^2*n3 - 
      66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 160*d^2*n10*n3 + 120*n10^2*n3 - 
      126*d*n10^2*n3 + 32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 
      120*n10*n3^2 - 126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 
      32*n10*n3^3 + 8*n3^4)) + ((-6 + 5*d - 4*n10 - 4*n3)*
     (24 - 44*d + 2*d^2 + 15*d^3 + 16*n10 + 32*d*n10 - 52*d^2*n10 - 
      24*n10^2 + 52*d*n10^2 - 16*n10^3 + 8*n3 + 32*d*n3 - 34*d^2*n3 - 
      40*n10*n3 + 68*d*n10*n3 - 32*n10^2*n3 - 16*n3^2 + 16*d*n3^2 - 
      16*n10*n3^2)*j[p4a, 0, 0, n3, 0, 0, 1, 0, n10, -1, n10, 1, 0, 0, 1])/
    (8*(8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 38*n10 - 147*d*n10 + 
      177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 147*d*n10^2 + 80*d^2*n10^2 + 
      40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 147*d*n3 + 177*d^2*n3 - 
      66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 160*d^2*n10*n3 + 120*n10^2*n3 - 
      126*d*n10^2*n3 + 32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 
      120*n10*n3^2 - 126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 
      32*n10*n3^3 + 8*n3^4)) + 
   ((8 - 11*d + 4*d^2 + 6*n10 - 5*d*n10 + 2*n10^2 + 6*n3 - 5*d*n3 + 
      4*n10*n3 + 2*n3^2)*j[p4a, 0, 0, n3, 0, 0, 1, 0, n10, -1, n10, 1, 0, 0, 
      2])/((-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)*
     (-1 + d - n10 - n3)) + ((-12*n10 + 7*d*n10 - 2*n10^2 - 2*n10*n3)*
     j[p4a, 0, 0, n3, 0, 0, 1, 0, n10, -1, 1 + n10, 1, 0, 0, 1])/
    ((-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)) - 
   ((-d + n10 + n3)*(6 - 5*d + 4*n10 + 4*n3)*(44 - 164*d + 197*d^2 - 75*d^3 + 
      124*n10 - 298*d*n10 + 170*d^2*n10 + 112*n10^2 - 128*d*n10^2 + 
      32*n10^3 + 104*n3 - 240*d*n3 + 128*d^2*n3 + 180*n10*n3 - 192*d*n10*n3 + 
      72*n10^2*n3 + 68*n3^2 - 64*d*n3^2 + 48*n10*n3^2 + 8*n3^3)*
     j[p4a, 0, 0, n3, 0, 0, 1, 0, n10, 0, -2 + n10, 1, 0, 1, 1])/
    (4*(-1 + n10)*(8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 38*n10 - 147*d*n10 + 
      177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 147*d*n10^2 + 80*d^2*n10^2 + 
      40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 147*d*n3 + 177*d^2*n3 - 
      66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 160*d^2*n10*n3 + 120*n10^2*n3 - 
      126*d*n10^2*n3 + 32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 
      120*n10*n3^2 - 126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 
      32*n10*n3^3 + 8*n3^4)) + ((6 - 5*d + 4*n10 + 4*n3)*
     (4 - 12*d + 3*d^2 + 5*d^3 + 48*n10 - 150*d*n10 + 175*d^2*n10 - 
      80*d^3*n10 + 112*n10^2 - 278*d*n10^2 + 189*d^2*n10^2 + 108*n10^3 - 
      150*d*n10^3 + 40*n10^4 + 12*n3 - 16*d*n3 + 3*d^2*n3 + 100*n10*n3 - 
      218*d*n10*n3 + 125*d^2*n10*n3 + 164*n10^2*n3 - 198*d*n10^2*n3 + 
      80*n10^3*n3 + 12*n3^2 - 16*d*n3^2 + 64*n10*n3^2 - 48*d*n10*n3^2 + 
      40*n10^2*n3^2 + 8*n3^3)*j[p4a, 0, 0, n3, 0, 0, 1, 0, n10, 0, -1 + n10, 
      0, 0, 1, 1])/(4*(-1 + n10)*(8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 
      38*n10 - 147*d*n10 + 177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 
      147*d*n10^2 + 80*d^2*n10^2 + 40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 
      147*d*n3 + 177*d^2*n3 - 66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 
      160*d^2*n10*n3 + 120*n10^2*n3 - 126*d*n10^2*n3 + 32*n10^3*n3 + 
      62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 120*n10*n3^2 - 126*d*n10*n3^2 + 
      48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 32*n10*n3^3 + 8*n3^4)) - 
   ((-4 + 3*d - 2*n10)*(-6 + 5*d - 4*n10 - 4*n3)*(d - n10 - n3)*
     j[p4a, 0, 0, n3, 0, 0, 1, 0, n10, 0, -1 + n10, 1, -1, 0, 2])/
    (2*(-2 + d)*(-1 + n10)*(1 - 3*d + 2*d^2 + 3*n10 - 4*d*n10 + 2*n10^2 + 
      3*n3 - 4*d*n3 + 4*n10*n3 + 2*n3^2)) - 
   ((-6 + 5*d - 4*n10 - 4*n3)*(176 - 720*d + 1072*d^2 - 692*d^3 + 165*d^4 + 
      448*n10 - 1336*d*n10 + 1304*d^2*n10 - 422*d^3*n10 + 416*n10^2 - 
      824*d*n10^2 + 412*d^2*n10^2 + 176*n10^3 - 184*d*n10^3 + 32*n10^4 + 
      368*n3 - 1072*d*n3 + 1020*d^2*n3 - 320*d^3*n3 + 672*n10*n3 - 
      1296*d*n10*n3 + 624*d^2*n10*n3 + 416*n10^2*n3 - 416*d*n10^2*n3 + 
      96*n10^3*n3 + 256*n3^2 - 472*d*n3^2 + 212*d^2*n3^2 + 304*n10*n3^2 - 
      280*d*n10*n3^2 + 96*n10^2*n3^2 + 64*n3^3 - 48*d*n3^3 + 32*n10*n3^3)*
     j[p4a, 0, 0, n3, 0, 0, 1, 0, n10, 0, -1 + n10, 1, -1, 2, 0])/
    (8*(-2 + d)*(-1 + n10)*(8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 38*n10 - 
      147*d*n10 + 177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 147*d*n10^2 + 
      80*d^2*n10^2 + 40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 147*d*n3 + 
      177*d^2*n3 - 66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 160*d^2*n10*n3 + 
      120*n10^2*n3 - 126*d*n10^2*n3 + 32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 
      80*d^2*n3^2 + 120*n10*n3^2 - 126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 
      42*d*n3^3 + 32*n10*n3^3 + 8*n3^4)) - 
   ((-6 + 5*d - 4*n10 - 4*n3)*(112*d - 248*d^2 + 188*d^3 - 50*d^4 - 16*n10 - 
      48*d*n10 + 204*d^2*n10 - 194*d^3*n10 + 65*d^4*n10 + 160*n10^2 - 
      476*d*n10^2 + 410*d^2*n10^2 - 132*d^3*n10^2 + 152*n10^3 - 196*d*n10^3 + 
      84*d^2*n10^3 + 16*n10^4 - 16*d*n10^4 - 104*n3 + 324*d*n3 - 330*d^2*n3 + 
      113*d^3*n3 + 40*n10*n3 - 192*d*n10*n3 + 250*d^2*n10*n3 - 
      118*d^3*n10*n3 + 208*n10^2*n3 - 312*d*n10^2*n3 + 156*d^2*n10^2*n3 + 
      48*n10^3*n3 - 48*d*n10^3*n3 - 80*n3^2 + 132*d*n3^2 - 34*d^2*n3^2 - 
      16*d^3*n3^2 + 64*n10*n3^2 - 160*d*n10*n3^2 + 96*d^2*n10*n3^2 + 
      64*n10^2*n3^2 - 56*d*n10^2*n3^2 + 8*n3^3 - 44*d*n3^3 + 24*d^2*n3^3 + 
      48*n10*n3^3 - 32*d*n10*n3^3 + 16*n3^4 - 8*d*n3^4)*
     j[p4a, 0, 0, n3, 0, 0, 1, 0, n10, 0, -1 + n10, 1, 0, 0, 1])/
    (4*(-2 + d)*(-1 + n10)*(8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 38*n10 - 
      147*d*n10 + 177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 147*d*n10^2 + 
      80*d^2*n10^2 + 40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 147*d*n3 + 
      177*d^2*n3 - 66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 160*d^2*n10*n3 + 
      120*n10^2*n3 - 126*d*n10^2*n3 + 32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 
      80*d^2*n3^2 + 120*n10*n3^2 - 126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 
      42*d*n3^3 + 32*n10*n3^3 + 8*n3^4)) - 
   ((6 - 5*d + 4*n10 + 4*n3)*(16 - 20*d - 4*d^2 + 5*d^3 + 28*d*n10 - 
      14*d^2*n10 - 16*n10^2 + 8*d*n10^2 - 16*n3 + 64*d*n3 - 40*d^2*n3 - 
      56*n10*n3 + 56*d*n10*n3 - 16*n10^2*n3 - 40*n3^2 + 48*d*n3^2 - 
      32*n10*n3^2 - 16*n3^3)*j[p4a, 0, 0, n3, 0, 0, 1, 0, n10, 0, -1 + n10, 
      1, 0, 0, 2])/(8*(-1 + n10)*(8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 
      38*n10 - 147*d*n10 + 177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 
      147*d*n10^2 + 80*d^2*n10^2 + 40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 
      147*d*n3 + 177*d^2*n3 - 66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 
      160*d^2*n10*n3 + 120*n10^2*n3 - 126*d*n10^2*n3 + 32*n10^3*n3 + 
      62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 120*n10*n3^2 - 126*d*n10*n3^2 + 
      48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 32*n10*n3^3 + 8*n3^4)) + 
   ((-6 + 5*d - 4*n10 - 4*n3)*(48 + 40*d - 388*d^2 + 422*d^3 - 130*d^4 - 
      120*n10 + 764*d*n10 - 1034*d^2*n10 + 389*d^3*n10 - 328*n10^2 + 
      792*d*n10^2 - 418*d^2*n10^2 - 192*n10^3 + 192*d*n10^3 - 32*n10^4 - 
      184*n3 + 812*d*n3 - 894*d^2*n3 + 269*d^3*n3 + 15*d^4*n3 - 600*n10*n3 + 
      1208*d*n10*n3 - 494*d^2*n10*n3 - 52*d^3*n10*n3 - 400*n10^2*n3 + 
      304*d*n10^2*n3 + 52*d^2*n10^2*n3 - 64*n10^3*n3 - 16*d*n10^3*n3 - 
      256*n3^2 + 408*d*n3^2 - 112*d^2*n3^2 - 34*d^3*n3^2 - 240*n10*n3^2 + 
      112*d*n10*n3^2 + 68*d^2*n10*n3^2 - 32*n10^2*n3^2 - 32*d*n10^2*n3^2 - 
      32*n3^3 + 16*d^2*n3^3 - 16*d*n10*n3^3)*j[p4a, 0, 0, n3, 0, 0, 1, 0, 
      n10, 0, -1 + n10, 1, 0, 1, 0])/(8*(-2 + d)*(-1 + n10)*
     (8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 38*n10 - 147*d*n10 + 
      177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 147*d*n10^2 + 80*d^2*n10^2 + 
      40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 147*d*n3 + 177*d^2*n3 - 
      66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 160*d^2*n10*n3 + 120*n10^2*n3 - 
      126*d*n10^2*n3 + 32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 
      120*n10*n3^2 - 126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 
      32*n10*n3^3 + 8*n3^4)) + 
   ((320 - 2304*d + 6576*d^2 - 9960*d^3 + 8788*d^4 - 4310*d^5 + 900*d^6 + 
      1680*n10 - 9784*d*n10 + 23028*d^2*n10 - 28548*d^3*n10 + 18373*d^4*n10 - 
      4750*d^5*n10 + 3744*n10^2 - 18512*d*n10^2 + 36388*d^2*n10^2 - 
      32438*d^3*n10^2 + 10654*d^4*n10^2 + 5216*n10^3 - 21464*d*n10^3 + 
      29308*d^2*n10^3 - 12844*d^3*n10^3 + 4880*n10^4 - 13368*d*n10^4 + 
      8680*d^2*n10^4 + 2432*n10^5 - 3088*d*n10^5 + 448*n10^6 + 2000*n3 - 
      11608*d*n3 + 26948*d^2*n3 - 32380*d^3*n3 + 19985*d^4*n3 - 4950*d^5*n3 + 
      8912*n10*n3 - 42912*d*n10*n3 + 80992*d^2*n10*n3 - 69054*d^3*n10*n3 + 
      21768*d^4*n10*n3 + 17792*n10^2*n3 - 70040*d*n10^2*n3 + 
      91668*d^2*n10^2*n3 - 38712*d^3*n10^2*n3 + 20752*n10^3*n3 - 
      54776*d*n10^3*n3 + 34432*d^2*n10^3*n3 + 12288*n10^4*n3 - 
      15168*d*n10^4*n3 + 2624*n10^5*n3 + 5168*n3^2 - 24400*d*n3^2 + 
      44604*d^2*n3^2 - 36616*d^3*n3^2 + 11114*d^4*n3^2 + 19936*n10*n3^2 - 
      75688*d*n10*n3^2 + 95412*d^2*n10*n3^2 - 38892*d^3*n10*n3^2 + 
      32976*n10^2*n3^2 - 84120*d*n10^2*n3^2 + 51216*d^2*n10^2*n3^2 + 
      24832*n10^3*n3^2 - 29792*d*n10^3*n3^2 + 6400*n10^4*n3^2 + 7360*n3^3 - 
      27112*d*n3^3 + 33052*d^2*n3^3 - 13024*d^3*n3^3 + 23216*n10*n3^3 - 
      57384*d*n10*n3^3 + 33856*d^2*n10*n3^3 + 25088*n10^2*n3^3 - 
      29248*d*n10^2*n3^3 + 8320*n10^3*n3^3 + 6112*n3^4 - 14672*d*n3^4 + 
      8392*d^2*n3^4 + 12672*n10*n3^4 - 14352*d*n10*n3^4 + 6080*n10^2*n3^4 + 
      2560*n3^5 - 2816*d*n3^5 + 2368*n10*n3^5 + 384*n3^6)*
     j[p4a, 0, 0, n3, 0, 0, 1, 0, n10, 0, -1 + n10, 1, 0, 1, 1])/
    (4*(-1 + n10)*(2 - 3*d + 4*n10 + 4*n3)*(8 - 44*d + 86*d^2 - 70*d^3 + 
      20*d^4 + 38*n10 - 147*d*n10 + 177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 
      147*d*n10^2 + 80*d^2*n10^2 + 40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 
      147*d*n3 + 177*d^2*n3 - 66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 
      160*d^2*n10*n3 + 120*n10^2*n3 - 126*d*n10^2*n3 + 32*n10^3*n3 + 
      62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 120*n10*n3^2 - 126*d*n10*n3^2 + 
      48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 32*n10*n3^3 + 8*n3^4)) + 
   ((-4 + 3*d - 2*n10)*(-6 + 5*d - 4*n10 - 4*n3)*(-2 + 3*d - 2*n10 - 2*n3)*
     j[p4a, 0, 0, n3, 0, 0, 1, 0, n10, 0, -1 + n10, 1, 0, 2, 0])/
    (4*(-2 + d)*(-1 + n10)*(1 - 3*d + 2*d^2 + 3*n10 - 4*d*n10 + 2*n10^2 + 
      3*n3 - 4*d*n3 + 4*n10*n3 + 2*n3^2)) - 
   ((-6 + 5*d - 4*n10 - 4*n3)*(16 - 44*d + 4*d^2 + 15*d^3 + 24*n10 + 
      28*d*n10 - 52*d^2*n10 - 24*n10^2 + 52*d*n10^2 - 16*n10^3 + 8*n3 + 
      72*d*n3 - 66*d^2*n3 - 80*n10*n3 + 116*d*n10*n3 - 48*n10^2*n3 - 
      56*n3^2 + 64*d*n3^2 - 48*n10*n3^2 - 16*n3^3)*j[p4a, 0, 0, n3, 0, 0, 1, 
      0, n10, 0, n10, 0, -1, 1, 1])/(8*(8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 
      38*n10 - 147*d*n10 + 177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 
      147*d*n10^2 + 80*d^2*n10^2 + 40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 
      147*d*n3 + 177*d^2*n3 - 66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 
      160*d^2*n10*n3 + 120*n10^2*n3 - 126*d*n10^2*n3 + 32*n10^3*n3 + 
      62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 120*n10*n3^2 - 126*d*n10*n3^2 + 
      48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 32*n10*n3^3 + 8*n3^4)) + 
   ((-456 + 1820*d - 2520*d^2 + 1478*d^3 - 315*d^4 - 1720*n10 + 4660*d*n10 - 
      4060*d^2*n10 + 1152*d^3*n10 - 2096*n10^2 + 3624*d*n10^2 - 
      1540*d^2*n10^2 - 1056*n10^3 + 896*d*n10^3 - 192*n10^4 - 1536*n3 + 
      4048*d*n3 - 3436*d^2*n3 + 950*d^3*n3 - 3608*n10*n3 + 6116*d*n10*n3 - 
      2548*d^2*n10*n3 - 2672*n10^2*n3 + 2232*d*n10^2*n3 - 640*n10^3*n3 - 
      1512*n3^2 + 2492*d*n3^2 - 1008*d^2*n3^2 - 2176*n10*n3^2 + 
      1776*d*n10*n3^2 - 768*n10^2*n3^2 - 560*n3^3 + 440*d*n3^3 - 
      384*n10*n3^3 - 64*n3^4)*j[p4a, 0, 0, n3, 0, 0, 1, 0, n10, 0, n10, 0, 0, 
      1, 1])/(4*(-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)*
     (1 - 3*d + 2*d^2 + 3*n10 - 4*d*n10 + 2*n10^2 + 3*n3 - 4*d*n3 + 
      4*n10*n3 + 2*n3^2)) + ((4 - 20*d + 22*d^2 - 7*d^3 + 28*n10 - 48*d*n10 + 
      20*d^2*n10 + 20*n10^2 - 16*d*n10^2 + 4*n10^3 + 28*n3 - 48*d*n3 + 
      20*d^2*n3 + 40*n10*n3 - 32*d*n10*n3 + 12*n10^2*n3 + 20*n3^2 - 
      16*d*n3^2 + 12*n10*n3^2 + 4*n3^3)*j[p4a, 0, 0, n3, 0, 0, 1, 0, n10, 0, 
      n10, 1, -1, 0, 2])/((-2 + d)*(-2 + 3*d - 4*n10 - 4*n3)*
     (-4 + 3*d - 2*n10 - 2*n3)*(-1 + d - n10 - n3)) - 
   (4*(-1 - d + d^2 + 4*n10 - 3*d*n10 + n10^2 + 4*n3 - 3*d*n3 + 2*n10*n3 + 
      n3^2)*j[p4a, 0, 0, n3, 0, 0, 1, 0, n10, 0, n10, 1, -1, 2, 0])/
    ((-2 + d)*(-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)) + 
   ((6656 - 46848*d + 128160*d^2 - 175856*d^3 + 129568*d^4 - 49656*d^5 + 
      8230*d^6 - 225*d^7 + 30976*n10 - 159808*d*n10 + 302896*d^2*n10 - 
      263736*d^3*n10 + 101224*d^4*n10 - 9124*d^5*n10 - 2260*d^6*n10 + 
      47616*n10^2 - 160640*d*n10^2 + 171792*d^2*n10^2 - 47992*d^3*n10^2 - 
      21104*d^4*n10^2 + 9892*d^5*n10^2 + 25024*n10^3 - 34208*d*n10^3 - 
      21056*d^2*n10^3 + 44432*d^3*n10^3 - 14832*d^4*n10^3 - 832*n10^4 + 
      20896*d*n10^4 - 30016*d^2*n10^4 + 10624*d^3*n10^4 - 3840*n10^5 + 
      8384*d*n10^5 - 3712*d^2*n10^5 - 768*n10^6 + 512*d*n10^6 + 33024*n3 - 
      171456*d*n3 + 329488*d^2*n3 - 294808*d^3*n3 + 120888*d^4*n3 - 
      15548*d^5*n3 - 1410*d^6*n3 + 103552*n10*n3 - 357344*d*n10*n3 + 
      403680*d^2*n10*n3 - 144392*d^3*n10*n3 - 23240*d^4*n10*n3 + 
      16884*d^5*n10*n3 + 86400*n10^2*n3 - 138560*d*n10^2*n3 - 
      21616*d^2*n10^2*n3 + 112376*d^3*n10^2*n3 - 40640*d^4*n10^2*n3 + 
      3264*n10^3*n3 + 68928*d*n10^3*n3 - 109296*d^2*n10^3*n3 + 
      39952*d^3*n10^3*n3 - 17408*n10^4*n3 + 39296*d*n10^4*n3 - 
      17696*d^2*n10^4*n3 - 4352*n10^5*n3 + 2944*d*n10^5*n3 + 55936*n3^2 - 
      196704*d*n3^2 + 231888*d^2*n3^2 - 96400*d^3*n3^2 - 2136*d^4*n3^2 + 
      6992*d^5*n3^2 + 97728*n10*n3^2 - 174496*d*n10*n3^2 + 
      19936*d^2*n10*n3^2 + 91456*d^3*n10*n3^2 - 36784*d^4*n10*n3^2 + 
      14784*n10^2*n3^2 + 81408*d*n10^2*n3^2 - 147792*d^2*n10^2*n3^2 + 
      56112*d^3*n10^2*n3^2 - 31232*n10^3*n3^2 + 73344*d*n10^3*n3^2 - 
      33664*d^2*n10^3*n3^2 - 10240*n10^4*n3^2 + 7040*d*n10^4*n3^2 + 
      36352*n3^3 - 70144*d*n3^3 + 20496*d^2*n3^3 + 23512*d^3*n3^3 - 
      10976*d^4*n3^3 + 16448*n10*n3^3 + 39616*d*n10*n3^3 - 
      87760*d^2*n10*n3^3 + 34864*d^3*n10*n3^3 - 27648*n10^2*n3^3 + 
      68096*d*n10^2*n3^3 - 31936*d^2*n10^2*n3^3 - 12800*n10^3*n3^3 + 
      8960*d*n10^3*n3^3 + 5760*n3^4 + 6240*d*n3^4 - 19248*d^2*n3^4 + 
      8080*d^3*n3^4 - 12032*n10*n3^4 + 31424*d*n10*n3^4 - 
      15104*d^2*n10*n3^4 - 8960*n10^2*n3^4 + 6400*d*n10^2*n3^4 - 2048*n3^5 + 
      5760*d*n3^5 - 2848*d^2*n3^5 - 3328*n10*n3^5 + 2432*d*n10*n3^5 - 
      512*n3^6 + 384*d*n3^6)*j[p4a, 0, 0, n3, 0, 0, 1, 0, n10, 0, n10, 1, 0, 
      0, 1])/(8*(-2 + d)*(-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)*
     (8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 38*n10 - 147*d*n10 + 
      177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 147*d*n10^2 + 80*d^2*n10^2 + 
      40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 147*d*n3 + 177*d^2*n3 - 
      66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 160*d^2*n10*n3 + 120*n10^2*n3 - 
      126*d*n10^2*n3 + 32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 
      120*n10*n3^2 - 126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 
      32*n10*n3^3 + 8*n3^4)) + 
   ((-8 + 11*d - 4*d^2 - 6*n10 + 5*d*n10 - 2*n10^2 - 6*n3 + 5*d*n3 - 
      4*n10*n3 - 2*n3^2)*j[p4a, 0, 0, n3, 0, 0, 1, 0, n10, 0, n10, 1, 0, 0, 
      2])/((-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)*
     (-1 + d - n10 - n3)) + ((-58 + 73*d - 23*d^2 - 30*n10 + 19*d*n10 - 
      4*n10^2 - 6*n3 - 7*d*n3 + 7*d^2*n3 - 4*n10*n3 - 2*d*n10*n3 - 2*d*n3^2)*
     j[p4a, 0, 0, n3, 0, 0, 1, 0, n10, 0, n10, 1, 0, 1, 0])/
    ((-2 + d)*(-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)) + 
   ((20 - 30*d + 11*d^2 + 20*n10 - 14*d*n10 + 4*n10^2 + 20*n3 - 14*d*n3 + 
      8*n10*n3 + 4*n3^2)*j[p4a, 0, 0, n3, 0, 0, 1, 0, n10, 0, n10, 1, 0, 2, 
      0])/((-2 + d)*(-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)) + 
   ((22*n10 - 35*d*n10 + 14*d^2*n10 + 26*n10^2 - 21*d*n10^2 + 8*n10^3 + 
      26*n10*n3 - 21*d*n10*n3 + 16*n10^2*n3 + 8*n10*n3^2)*
     j[p4a, 0, 0, n3, 0, 0, 1, 0, n10, 0, 1 + n10, 0, -1, 1, 1])/
    ((-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)*
     (-1 + d - n10 - n3)) + ((-22*n10 + 35*d*n10 - 14*d^2*n10 - 26*n10^2 + 
      21*d*n10^2 - 8*n10^3 - 26*n10*n3 + 21*d*n10*n3 - 16*n10^2*n3 - 
      8*n10*n3^2)*j[p4a, 0, 0, n3, 0, 0, 1, 0, n10, 0, 1 + n10, 0, 0, 1, 1])/
    ((-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)*
     (-1 + d - n10 - n3)) - (n10*(6 - 5*d + 4*n10 + 4*n3)*
     (44 - 164*d + 197*d^2 - 75*d^3 + 124*n10 - 298*d*n10 + 170*d^2*n10 + 
      112*n10^2 - 128*d*n10^2 + 32*n10^3 + 104*n3 - 240*d*n3 + 128*d^2*n3 + 
      180*n10*n3 - 192*d*n10*n3 + 72*n10^2*n3 + 68*n3^2 - 64*d*n3^2 + 
      48*n10*n3^2 + 8*n3^3)*j[p4a, 0, 0, n3, 0, 0, 1, 0, 1 + n10, 0, 
      -1 + n10, 0, -1, 1, 1])/(4*(-1 + n10)*(8 - 44*d + 86*d^2 - 70*d^3 + 
      20*d^4 + 38*n10 - 147*d*n10 + 177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 
      147*d*n10^2 + 80*d^2*n10^2 + 40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 
      147*d*n3 + 177*d^2*n3 - 66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 
      160*d^2*n10*n3 + 120*n10^2*n3 - 126*d*n10^2*n3 + 32*n10^3*n3 + 
      62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 120*n10*n3^2 - 126*d*n10*n3^2 + 
      48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 32*n10*n3^3 + 8*n3^4)) - 
   ((-2 - d + 2*n10 + 4*n3)*(6 - 5*d + 4*n10 + 4*n3)*
     j[p4a, 0, 0, n3, 0, 0, 2, 0, -1 + n10, 0, -1 + n10, 1, 0, 0, 1])/
    (8*(-1 + n10)*(1 - 3*d + 2*d^2 + 3*n10 - 4*d*n10 + 2*n10^2 + 3*n3 - 
      4*d*n3 + 4*n10*n3 + 2*n3^2)) - 
   ((-2 - d + 2*n10 + 4*n3)*(6 - 5*d + 4*n10 + 4*n3)*
     j[p4a, 0, 0, n3, 0, 0, 2, 0, -1 + n10, 0, -1 + n10, 1, 0, 1, 0])/
    (8*(-1 + n10)*(1 - 3*d + 2*d^2 + 3*n10 - 4*d*n10 + 2*n10^2 + 3*n3 - 
      4*d*n3 + 4*n10*n3 + 2*n3^2)) + 
   ((7 - 5*d + 3*n10 + 3*n3)*j[p4a, 0, 0, n3, 0, 0, 2, 0, -1 + n10, 0, n10, 
      1, 0, 0, 1])/((-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)) + 
   ((7 - 5*d + 3*n10 + 3*n3)*j[p4a, 0, 0, n3, 0, 0, 2, 0, -1 + n10, 0, n10, 
      1, 0, 1, 0])/((-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)) - 
   ((6 - 5*d + 4*n10 + 4*n3)*(-24*n3 + 44*d*n3 - 2*d^2*n3 - 15*d^3*n3 - 
      16*n10*n3 - 32*d*n10*n3 + 52*d^2*n10*n3 + 24*n10^2*n3 - 52*d*n10^2*n3 + 
      16*n10^3*n3 - 8*n3^2 - 32*d*n3^2 + 34*d^2*n3^2 + 40*n10*n3^2 - 
      68*d*n10*n3^2 + 32*n10^2*n3^2 + 16*n3^3 - 16*d*n3^3 + 16*n10*n3^3)*
     j[p4a, 0, 0, 1 + n3, -1, 0, 1, 0, n10, 0, -1 + n10, 0, 0, 1, 1])/
    (8*(-1 + n10)*(8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 38*n10 - 147*d*n10 + 
      177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 147*d*n10^2 + 80*d^2*n10^2 + 
      40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 147*d*n3 + 177*d^2*n3 - 
      66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 160*d^2*n10*n3 + 120*n10^2*n3 - 
      126*d*n10^2*n3 + 32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 
      120*n10*n3^2 - 126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 
      32*n10*n3^3 + 8*n3^4)) - ((6 - 5*d + 4*n10 + 4*n3)*
     (-24*n3 + 44*d*n3 - 2*d^2*n3 - 15*d^3*n3 - 16*n10*n3 - 32*d*n10*n3 + 
      52*d^2*n10*n3 + 24*n10^2*n3 - 52*d*n10^2*n3 + 16*n10^3*n3 - 8*n3^2 - 
      32*d*n3^2 + 34*d^2*n3^2 + 40*n10*n3^2 - 68*d*n10*n3^2 + 32*n10^2*n3^2 + 
      16*n3^3 - 16*d*n3^3 + 16*n10*n3^3)*j[p4a, 0, 0, 1 + n3, -1, 0, 1, 0, 
      n10, 0, -1 + n10, 1, 0, 0, 1])/(4*(-1 + n10)*(8 - 44*d + 86*d^2 - 
      70*d^3 + 20*d^4 + 38*n10 - 147*d*n10 + 177*d^2*n10 - 66*d^3*n10 + 
      62*n10^2 - 147*d*n10^2 + 80*d^2*n10^2 + 40*n10^3 - 42*d*n10^3 + 
      8*n10^4 + 38*n3 - 147*d*n3 + 177*d^2*n3 - 66*d^3*n3 + 124*n10*n3 - 
      294*d*n10*n3 + 160*d^2*n10*n3 + 120*n10^2*n3 - 126*d*n10^2*n3 + 
      32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 120*n10*n3^2 - 
      126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 32*n10*n3^3 + 
      8*n3^4)) + ((12*n3 - 7*d*n3 + 2*n10*n3 + 2*n3^2)*
     j[p4a, 0, 0, 1 + n3, -1, 0, 1, 0, n10, 0, n10, 0, 0, 1, 1])/
    ((-2 + 3*d - 4*n10 - 4*n3)*(-4 + 3*d - 2*n10 - 2*n3)) - 
   (2*(-12*n3 + 7*d*n3 - 2*n10*n3 - 2*n3^2)*j[p4a, 0, 0, 1 + n3, -1, 0, 1, 0, 
      n10, 0, n10, 1, 0, 0, 1])/((-2 + 3*d - 4*n10 - 4*n3)*
     (-4 + 3*d - 2*n10 - 2*n3)) - ((6 - 5*d + 4*n10 + 4*n3)*
     (120*n3 - 396*d*n3 + 402*d^2*n3 - 125*d^3*n3 + 280*n10*n3 - 
      560*d*n10*n3 + 250*d^2*n10*n3 + 192*n10^2*n3 - 160*d*n10^2*n3 + 
      32*n10^3*n3 + 240*n3^2 - 480*d*n3^2 + 228*d^2*n3^2 + 336*n10*n3^2 - 
      304*d*n10*n3^2 + 96*n10^2*n3^2 + 144*n3^3 - 144*d*n3^3 + 96*n10*n3^3 + 
      32*n3^4)*j[p4a, 0, 0, 1 + n3, 0, 0, 1, -1, n10, 0, -1 + n10, 0, 0, 1, 
      1])/(8*(-1 + n10)*(8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 38*n10 - 
      147*d*n10 + 177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 147*d*n10^2 + 
      80*d^2*n10^2 + 40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 147*d*n3 + 
      177*d^2*n3 - 66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 160*d^2*n10*n3 + 
      120*n10^2*n3 - 126*d*n10^2*n3 + 32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 
      80*d^2*n3^2 + 120*n10*n3^2 - 126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 
      42*d*n3^3 + 32*n10*n3^3 + 8*n3^4)) + 
   ((6 - 5*d + 4*n10 + 4*n3)*(-152*n3 + 484*d*n3 - 410*d^2*n3 + 95*d^3*n3 - 
      328*n10*n3 + 504*d*n10*n3 - 146*d^2*n10*n3 - 144*n10^2*n3 + 
      56*d*n10^2*n3 - 256*n3^2 + 336*d*n3^2 - 96*d^2*n3^2 - 176*n10*n3^2 + 
      72*d*n10*n3^2 - 32*n3^3 + 16*d*n3^3)*j[p4a, 0, 0, 1 + n3, 0, 0, 1, -1, 
      n10, 0, -1 + n10, 1, 0, 0, 1])/(8*(-1 + n10)*(8 - 44*d + 86*d^2 - 
      70*d^3 + 20*d^4 + 38*n10 - 147*d*n10 + 177*d^2*n10 - 66*d^3*n10 + 
      62*n10^2 - 147*d*n10^2 + 80*d^2*n10^2 + 40*n10^3 - 42*d*n10^3 + 
      8*n10^4 + 38*n3 - 147*d*n3 + 177*d^2*n3 - 66*d^3*n3 + 124*n10*n3 - 
      294*d*n10*n3 + 160*d^2*n10*n3 + 120*n10^2*n3 - 126*d*n10^2*n3 + 
      32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 120*n10*n3^2 - 
      126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 32*n10*n3^3 + 
      8*n3^4)) - ((6 - 5*d + 4*n10 + 4*n3)*(-24*n3 + 44*d*n3 - 2*d^2*n3 - 
      15*d^3*n3 - 16*n10*n3 - 32*d*n10*n3 + 52*d^2*n10*n3 + 24*n10^2*n3 - 
      52*d*n10^2*n3 + 16*n10^3*n3 - 8*n3^2 - 32*d*n3^2 + 34*d^2*n3^2 + 
      40*n10*n3^2 - 68*d*n10*n3^2 + 32*n10^2*n3^2 + 16*n3^3 - 16*d*n3^3 + 
      16*n10*n3^3)*j[p4a, 0, 0, 1 + n3, 0, 0, 1, -1, n10, 0, -1 + n10, 1, 0, 
      1, 0])/(8*(-1 + n10)*(8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 38*n10 - 
      147*d*n10 + 177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 147*d*n10^2 + 
      80*d^2*n10^2 + 40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 147*d*n3 + 
      177*d^2*n3 - 66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 160*d^2*n10*n3 + 
      120*n10^2*n3 - 126*d*n10^2*n3 + 32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 
      80*d^2*n3^2 + 120*n10*n3^2 - 126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 
      42*d*n3^3 + 32*n10*n3^3 + 8*n3^4)) + 
   ((-8*n3 + 11*d*n3 - 4*d^2*n3 - 6*n10*n3 + 5*d*n10*n3 - 2*n10^2*n3 - 
      6*n3^2 + 5*d*n3^2 - 4*n10*n3^2 - 2*n3^3)*j[p4a, 0, 0, 1 + n3, 0, 0, 1, 
      -1, n10, 0, n10, 0, 0, 1, 1])/((-2 + 3*d - 4*n10 - 4*n3)*
     (-4 + 3*d - 2*n10 - 2*n3)*(-1 + d - n10 - n3)) - 
   (3*(8*n3 - 11*d*n3 + 4*d^2*n3 + 6*n10*n3 - 5*d*n10*n3 + 2*n10^2*n3 + 
      6*n3^2 - 5*d*n3^2 + 4*n10*n3^2 + 2*n3^3)*j[p4a, 0, 0, 1 + n3, 0, 0, 1, 
      -1, n10, 0, n10, 1, 0, 0, 1])/((-2 + 3*d - 4*n10 - 4*n3)*
     (-4 + 3*d - 2*n10 - 2*n3)*(-1 + d - n10 - n3)) + 
   ((12*n3 - 7*d*n3 + 2*n10*n3 + 2*n3^2)*j[p4a, 0, 0, 1 + n3, 0, 0, 1, -1, 
      n10, 0, n10, 1, 0, 1, 0])/((-2 + 3*d - 4*n10 - 4*n3)*
     (-4 + 3*d - 2*n10 - 2*n3)) + ((6 - 5*d + 4*n10 + 4*n3)*
     (-4*n3 + 12*d*n3 - 3*d^2*n3 - 5*d^3*n3 - 8*n10*n3 - 2*d*n10*n3 + 
      19*d^2*n10*n3 + 4*n10^2*n3 - 22*d*n10^2*n3 + 8*n10^3*n3 - 12*n3^2 + 
      16*d*n3^2 - 3*d^2*n3^2 - 8*n10*n3^2 - 6*d*n10*n3^2 + 8*n10^2*n3^2 - 
      12*n3^3 + 16*d*n3^3 - 8*n10*n3^3 - 8*n3^4)*j[p4a, 0, 0, 1 + n3, 0, 0, 
      1, 0, -1 + n10, 0, -1 + n10, 0, 0, 1, 1])/
    (2*(-1 + n10)*(8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 38*n10 - 147*d*n10 + 
      177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 147*d*n10^2 + 80*d^2*n10^2 + 
      40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 147*d*n3 + 177*d^2*n3 - 
      66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 160*d^2*n10*n3 + 120*n10^2*n3 - 
      126*d*n10^2*n3 + 32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 
      120*n10*n3^2 - 126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 
      32*n10*n3^3 + 8*n3^4)) + ((6 - 5*d + 4*n10 + 4*n3)*
     (-152*n3 + 484*d*n3 - 410*d^2*n3 + 95*d^3*n3 - 328*n10*n3 + 
      504*d*n10*n3 - 146*d^2*n10*n3 - 144*n10^2*n3 + 56*d*n10^2*n3 - 
      256*n3^2 + 336*d*n3^2 - 96*d^2*n3^2 - 176*n10*n3^2 + 72*d*n10*n3^2 - 
      32*n3^3 + 16*d*n3^3)*j[p4a, 0, 0, 1 + n3, 0, 0, 1, 0, -1 + n10, 0, 
      -1 + n10, 1, 0, 0, 1])/(8*(-1 + n10)*(8 - 44*d + 86*d^2 - 70*d^3 + 
      20*d^4 + 38*n10 - 147*d*n10 + 177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 
      147*d*n10^2 + 80*d^2*n10^2 + 40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 
      147*d*n3 + 177*d^2*n3 - 66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 
      160*d^2*n10*n3 + 120*n10^2*n3 - 126*d*n10^2*n3 + 32*n10^3*n3 + 
      62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 120*n10*n3^2 - 126*d*n10*n3^2 + 
      48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 32*n10*n3^3 + 8*n3^4)) - 
   (3*(6 - 5*d + 4*n10 + 4*n3)*(-24*n3 + 44*d*n3 - 2*d^2*n3 - 15*d^3*n3 - 
      16*n10*n3 - 32*d*n10*n3 + 52*d^2*n10*n3 + 24*n10^2*n3 - 52*d*n10^2*n3 + 
      16*n10^3*n3 - 8*n3^2 - 32*d*n3^2 + 34*d^2*n3^2 + 40*n10*n3^2 - 
      68*d*n10*n3^2 + 32*n10^2*n3^2 + 16*n3^3 - 16*d*n3^3 + 16*n10*n3^3)*
     j[p4a, 0, 0, 1 + n3, 0, 0, 1, 0, -1 + n10, 0, -1 + n10, 1, 0, 1, 0])/
    (8*(-1 + n10)*(8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 38*n10 - 147*d*n10 + 
      177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 147*d*n10^2 + 80*d^2*n10^2 + 
      40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 147*d*n3 + 177*d^2*n3 - 
      66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 160*d^2*n10*n3 + 120*n10^2*n3 - 
      126*d*n10^2*n3 + 32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 
      120*n10*n3^2 - 126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 
      32*n10*n3^3 + 8*n3^4)) - 
   (3*(8*n3 - 11*d*n3 + 4*d^2*n3 + 6*n10*n3 - 5*d*n10*n3 + 2*n10^2*n3 + 
      6*n3^2 - 5*d*n3^2 + 4*n10*n3^2 + 2*n3^3)*j[p4a, 0, 0, 1 + n3, 0, 0, 1, 
      0, -1 + n10, 0, n10, 1, 0, 0, 1])/((-2 + 3*d - 4*n10 - 4*n3)*
     (-4 + 3*d - 2*n10 - 2*n3)*(-1 + d - n10 - n3)) - 
   (3*(-12*n3 + 7*d*n3 - 2*n10*n3 - 2*n3^2)*j[p4a, 0, 0, 1 + n3, 0, 0, 1, 0, 
      -1 + n10, 0, n10, 1, 0, 1, 0])/((-2 + 3*d - 4*n10 - 4*n3)*
     (-4 + 3*d - 2*n10 - 2*n3)) + ((6 - 5*d + 4*n10 + 4*n3)*
     (104*n3 - 348*d*n3 + 390*d^2*n3 - 145*d^3*n3 + 248*n10*n3 - 
      568*d*n10*n3 + 326*d^2*n10*n3 + 208*n10^2*n3 - 248*d*n10^2*n3 + 
      64*n10^3*n3 + 192*n3^2 - 416*d*n3^2 + 216*d^2*n3^2 + 304*n10*n3^2 - 
      328*d*n10*n3^2 + 128*n10^2*n3^2 + 96*n3^3 - 80*d*n3^3 + 64*n10*n3^3)*
     j[p4a, 0, 0, 1 + n3, 0, 0, 1, 0, n10, 0, -2 + n10, 1, 0, 0, 1])/
    (8*(-1 + n10)*(8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 38*n10 - 147*d*n10 + 
      177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 147*d*n10^2 + 80*d^2*n10^2 + 
      40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 147*d*n3 + 177*d^2*n3 - 
      66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 160*d^2*n10*n3 + 120*n10^2*n3 - 
      126*d*n10^2*n3 + 32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 
      120*n10*n3^2 - 126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 
      32*n10*n3^3 + 8*n3^4)) + ((6 - 5*d + 4*n10 + 4*n3)*
     (-24*n3 + 44*d*n3 - 2*d^2*n3 - 15*d^3*n3 - 16*n10*n3 - 32*d*n10*n3 + 
      52*d^2*n10*n3 + 24*n10^2*n3 - 52*d*n10^2*n3 + 16*n10^3*n3 - 8*n3^2 - 
      32*d*n3^2 + 34*d^2*n3^2 + 40*n10*n3^2 - 68*d*n10*n3^2 + 32*n10^2*n3^2 + 
      16*n3^3 - 16*d*n3^3 + 16*n10*n3^3)*j[p4a, 0, 0, 1 + n3, 0, 0, 1, 0, 
      n10, 0, -2 + n10, 1, 0, 1, 0])/(8*(-1 + n10)*(8 - 44*d + 86*d^2 - 
      70*d^3 + 20*d^4 + 38*n10 - 147*d*n10 + 177*d^2*n10 - 66*d^3*n10 + 
      62*n10^2 - 147*d*n10^2 + 80*d^2*n10^2 + 40*n10^3 - 42*d*n10^3 + 
      8*n10^4 + 38*n3 - 147*d*n3 + 177*d^2*n3 - 66*d^3*n3 + 124*n10*n3 - 
      294*d*n10*n3 + 160*d^2*n10*n3 + 120*n10^2*n3 - 126*d*n10^2*n3 + 
      32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 120*n10*n3^2 - 
      126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 32*n10*n3^3 + 
      8*n3^4)) - ((6 - 5*d + 4*n10 + 4*n3)*(-4*n3 + 12*d*n3 - 3*d^2*n3 - 
      5*d^3*n3 - 8*n10*n3 - 2*d*n10*n3 + 19*d^2*n10*n3 + 4*n10^2*n3 - 
      22*d*n10^2*n3 + 8*n10^3*n3 - 12*n3^2 + 16*d*n3^2 - 3*d^2*n3^2 - 
      8*n10*n3^2 - 6*d*n10*n3^2 + 8*n10^2*n3^2 - 12*n3^3 + 16*d*n3^3 - 
      8*n10*n3^3 - 8*n3^4)*j[p4a, 0, 0, 1 + n3, 0, 0, 1, 0, n10, 0, -1 + n10, 
      0, -1, 1, 1])/(4*(-1 + n10)*(8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 
      38*n10 - 147*d*n10 + 177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 
      147*d*n10^2 + 80*d^2*n10^2 + 40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 
      147*d*n3 + 177*d^2*n3 - 66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 
      160*d^2*n10*n3 + 120*n10^2*n3 - 126*d*n10^2*n3 + 32*n10^3*n3 + 
      62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 120*n10*n3^2 - 126*d*n10*n3^2 + 
      48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 32*n10*n3^3 + 8*n3^4)) + 
   ((6 - 5*d + 4*n10 + 4*n3)*(4*n3 - 3*d*n3 + 2*n10*n3)*
     j[p4a, 0, 0, 1 + n3, 0, 0, 1, 0, n10, 0, -1 + n10, 1, -1, 0, 1])/
    (2*(-1 + n10)*(1 - 3*d + 2*d^2 + 3*n10 - 4*d*n10 + 2*n10^2 + 3*n3 - 
      4*d*n3 + 4*n10*n3 + 2*n3^2)) + 
   ((6 - 5*d + 4*n10 + 4*n3)*(-24*n3 + 44*d*n3 - 2*d^2*n3 - 15*d^3*n3 - 
      16*n10*n3 - 32*d*n10*n3 + 52*d^2*n10*n3 + 24*n10^2*n3 - 52*d*n10^2*n3 + 
      16*n10^3*n3 - 8*n3^2 - 32*d*n3^2 + 34*d^2*n3^2 + 40*n10*n3^2 - 
      68*d*n10*n3^2 + 32*n10^2*n3^2 + 16*n3^3 - 16*d*n3^3 + 16*n10*n3^3)*
     j[p4a, 0, 0, 1 + n3, 0, 0, 1, 0, n10, 0, -1 + n10, 1, -1, 1, 0])/
    (4*(-1 + n10)*(8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 38*n10 - 147*d*n10 + 
      177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 147*d*n10^2 + 80*d^2*n10^2 + 
      40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 147*d*n3 + 177*d^2*n3 - 
      66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 160*d^2*n10*n3 + 120*n10^2*n3 - 
      126*d*n10^2*n3 + 32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 
      120*n10*n3^2 - 126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 
      32*n10*n3^3 + 8*n3^4)) + 
   ((-4480*n3 + 29088*d*n3 - 78576*d^2*n3 + 112640*d^3*n3 - 89920*d^4*n3 + 
      37790*d^5*n3 - 6525*d^6*n3 - 25920*n10*n3 + 139120*d*n10*n3 - 
      297000*d^2*n10*n3 + 313520*d^3*n10*n3 - 163332*d^4*n10*n3 + 
      33580*d^5*n10*n3 - 59680*n10^2*n3 + 253872*d*n10^2*n3 - 
      400000*d^2*n10^2*n3 + 276512*d^3*n10^2*n3 - 70748*d^4*n10^2*n3 - 
      70848*n10^3*n3 + 222768*d*n10^3*n3 - 230600*d^2*n10^3*n3 + 
      78528*d^3*n10^3*n3 - 45920*n10^4*n3 + 95184*d*n10^4*n3 - 
      48624*d^2*n10^4*n3 - 15616*n10^5*n3 + 15968*d*n10^5*n3 - 
      2176*n10^6*n3 - 22720*n3^2 + 120528*d*n3^2 - 254536*d^2*n3^2 + 
      266000*d^3*n3^2 - 137292*d^4*n3^2 + 27990*d^5*n3^2 - 103168*n10*n3^2 + 
      434448*d*n10*n3^2 - 677800*d^2*n10*n3^2 + 464240*d^3*n10*n3^2 - 
      117804*d^4*n10*n3^2 - 181664*n10^2*n3^2 + 565552*d*n10^2*n3^2 - 
      580064*d^2*n10^2*n3^2 + 195968*d^3*n10^2*n3^2 - 155296*n10^3*n3^2 + 
      318992*d*n10^3*n3^2 - 161744*d^2*n10^3*n3^2 - 65408*n10^4*n3^2 + 
      66432*d*n10^4*n3^2 - 10880*n10^5*n3^2 - 43488*n3^3 + 180576*d*n3^3 - 
      277800*d^2*n3^3 + 187728*d^3*n3^3 - 47056*d^4*n3^3 - 150784*n10*n3^3 + 
      462800*d*n10*n3^3 - 468328*d^2*n10*n3^3 + 156352*d^3*n10*n3^3 - 
      190368*n10^2*n3^3 + 385872*d*n10^2*n3^3 - 193488*d^2*n10^2*n3^3 - 
      105472*n10^3*n3^3 + 106048*d*n10^3*n3^3 - 21760*n10^4*n3^3 - 
      39968*n3^4 + 120016*d*n3^4 - 118864*d^2*n3^4 + 38912*d^3*n3^4 - 
      98528*n10*n3^4 + 195504*d*n10*n3^4 - 96240*d^2*n10*n3^4 - 
      80128*n10^2*n3^4 + 79232*d*n10^2*n3^4 - 21760*n10^3*n3^4 - 17536*n3^5 + 
      33440*d*n3^5 - 15872*d^2*n3^5 - 27392*n10*n3^5 + 26208*d*n10*n3^5 - 
      10880*n10^2*n3^5 - 2944*n3^6 + 2560*d*n3^6 - 2176*n10*n3^6)*
     j[p4a, 0, 0, 1 + n3, 0, 0, 1, 0, n10, 0, -1 + n10, 1, 0, 0, 1])/
    (8*(-1 + n10)*(4 - 3*d + 2*n10 + 2*n3)*(2 - 3*d + 4*n10 + 4*n3)*
     (8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 38*n10 - 147*d*n10 + 
      177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 147*d*n10^2 + 80*d^2*n10^2 + 
      40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 147*d*n3 + 177*d^2*n3 - 
      66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 160*d^2*n10*n3 + 120*n10^2*n3 - 
      126*d*n10^2*n3 + 32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 80*d^2*n3^2 + 
      120*n10*n3^2 - 126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 42*d*n3^3 + 
      32*n10*n3^3 + 8*n3^4)) + 
   ((1920*n3 - 10336*d*n3 + 20784*d^2*n3 - 18528*d^3*n3 + 5888*d^4*n3 + 
      950*d^5*n3 - 675*d^6*n3 + 7424*n10*n3 - 26512*d*n10*n3 + 
      26600*d^2*n10*n3 + 1928*d^3*n10*n3 - 14700*d^4*n10*n3 + 
      5350*d^5*n10*n3 + 7136*n10^2*n3 - 4880*d*n10^2*n3 - 
      28672*d^2*n10^2*n3 + 40688*d^3*n10^2*n3 - 14588*d^4*n10^2*n3 - 
      3328*n10^3*n3 + 29200*d*n10^3*n3 - 45176*d^2*n10^3*n3 + 
      19112*d^3*n10^3*n3 - 8416*n10^4*n3 + 22352*d*n10^4*n3 - 
      13136*d^2*n10^4*n3 - 4096*n10^5*n3 + 4576*d*n10^5*n3 - 640*n10^6*n3 + 
      7808*n3^2 - 30000*d*n3^2 + 37032*d^2*n3^2 - 11912*d^3*n3^2 - 
      6268*d^4*n3^2 + 3420*d^5*n3^2 + 17216*n10*n3^2 - 27376*d*n10*n3^2 - 
      22536*d^2*n10*n3^2 + 53424*d^3*n10*n3^2 - 21272*d^4*n10*n3^2 - 
      2464*n10^2*n3^2 + 58480*d*n10^2*n3^2 - 101088*d^2*n10^2*n3^2 + 
      44528*d^3*n10^2*n3^2 - 25632*n10^3*n3^2 + 70800*d*n10^3*n3^2 - 
      42288*d^2*n10^3*n3^2 - 16768*n10^4*n3^2 + 18816*d*n10^4*n3^2 - 
      3200*n10^5*n3^2 + 10080*n3^3 - 22496*d*n3^3 + 6136*d^2*n3^3 + 
      12736*d^3*n3^3 - 6684*d^4*n3^3 + 5056*n10*n3^3 + 29360*d*n10*n3^3 - 
      66648*d^2*n10*n3^3 + 31720*d^3*n10*n3^3 - 26400*n10^2*n3^3 + 
      78288*d*n10^2*n3^3 - 48048*d^2*n10^2*n3^3 - 26112*n10^3*n3^3 + 
      29504*d*n10^3*n3^3 - 6400*n10^4*n3^3 + 4192*n3^4 + 80*d*n3^4 - 
      10736*d^2*n3^4 + 6304*d^3*n3^4 - 9568*n10*n3^4 + 33584*d*n10*n3^4 - 
      21776*d^2*n10*n3^4 - 18688*n10^2*n3^4 + 21376*d*n10^2*n3^4 - 
      6400*n10^3*n3^4 - 384*n3^5 + 3744*d*n3^5 - 2880*d^2*n3^5 - 
      5632*n10*n3^5 + 6624*d*n10*n3^5 - 3200*n10^2*n3^5 - 384*n3^6 + 
      512*d*n3^6 - 640*n10*n3^6)*j[p4a, 0, 0, 1 + n3, 0, 0, 1, 0, n10, 0, 
      -1 + n10, 1, 0, 1, 0])/(8*(-1 + n10)*(4 - 3*d + 2*n10 + 2*n3)*
     (2 - 3*d + 4*n10 + 4*n3)*(8 - 44*d + 86*d^2 - 70*d^3 + 20*d^4 + 38*n10 - 
      147*d*n10 + 177*d^2*n10 - 66*d^3*n10 + 62*n10^2 - 147*d*n10^2 + 
      80*d^2*n10^2 + 40*n10^3 - 42*d*n10^3 + 8*n10^4 + 38*n3 - 147*d*n3 + 
      177*d^2*n3 - 66*d^3*n3 + 124*n10*n3 - 294*d*n10*n3 + 160*d^2*n10*n3 + 
      120*n10^2*n3 - 126*d*n10^2*n3 + 32*n10^3*n3 + 62*n3^2 - 147*d*n3^2 + 
      80*d^2*n3^2 + 120*n10*n3^2 - 126*d*n10*n3^2 + 48*n10^2*n3^2 + 40*n3^3 - 
      42*d*n3^3 + 32*n10*n3^3 + 8*n3^4)) + 
   (2*(8*n3 - 11*d*n3 + 4*d^2*n3 + 6*n10*n3 - 5*d*n10*n3 + 2*n10^2*n3 + 
      6*n3^2 - 5*d*n3^2 + 4*n10*n3^2 + 2*n3^3)*j[p4a, 0, 0, 1 + n3, 0, 0, 1, 
      0, n10, 0, n10, 1, -1, 0, 1])/((-2 + 3*d - 4*n10 - 4*n3)*
     (-4 + 3*d - 2*n10 - 2*n3)*(-1 + d - n10 - n3)) + 
   (2*(-12*n3 + 7*d*n3 - 2*n10*n3 - 2*n3^2)*j[p4a, 0, 0, 1 + n3, 0, 0, 1, 0, 
      n10, 0, n10, 1, -1, 1, 0])/((-2 + 3*d - 4*n10 - 4*n3)*
     (-4 + 3*d - 2*n10 - 2*n3)) + 
   ((-8*n3 + 11*d*n3 - 4*d^2*n3 - 6*n10*n3 + 5*d*n10*n3 - 2*n10^2*n3 - 
      6*n3^2 + 5*d*n3^2 - 4*n10*n3^2 - 2*n3^3)*j[p4a, 0, 0, 1 + n3, 0, 0, 1, 
      0, n10, 0, n10, 1, 0, 0, 1])/((-2 + 3*d - 4*n10 - 4*n3)*
     (-4 + 3*d - 2*n10 - 2*n3)*(-1 + d - n10 - n3)) + 
   ((12*n3 - 7*d*n3 + 2*n10*n3 + 2*n3^2)*j[p4a, 0, 0, 1 + n3, 0, 0, 1, 0, 
      n10, 0, n10, 1, 0, 1, 0])/((-2 + 3*d - 4*n10 - 4*n3)*
     (-4 + 3*d - 2*n10 - 2*n3)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n4 == 0 && n5 == 0 && n6 == 1 && n7 == 0 && n8 == 1 && n9 == 0 && 
    n1 != 0 -> (-4*(24 - 22*d + 5*d^2 + 4*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 
      2*n1*n3 + 2*n3^2)*j[p4a, n1, 0, n3, 0, 0, 0, 0, 1, 0, 1, 2, 0, 1, 1])/
    ((-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 
      35*d*n3 + 10*n1*n3 + 12*n3^2)) - 
   (2*(24 - 22*d + 5*d^2 + 4*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 2*n1*n3 + 2*n3^2)*
     j[p4a, n1, 0, n3, 0, 0, 0, 0, 2, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 
      35*d*n3 + 10*n1*n3 + 12*n3^2)) - 
   (4*(24 - 22*d + 5*d^2 + 4*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 2*n1*n3 + 2*n3^2)*
     j[p4a, n1, 0, n3, 0, 0, 1, 0, 0, 0, 1, 2, 0, 1, 1])/
    ((-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 
      35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   ((-4 - 5*d + 3*d^2 - 18*n1 + 7*d*n1 - 2*n1^2 + 16*n3 - 9*d*n3 - 2*n1*n3 + 
      4*n3^2)*j[p4a, n1, 0, n3, 0, 0, 1, 0, 0, 0, 2, 1, 0, 1, 1])/
    (2*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 
      80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) - 
   (4*(18 - 17*d + 4*d^2 + 2*n1 - d*n1 + 13*n3 - 6*d*n3 + n1*n3 + 2*n3^2)*
     j[p4a, n1, 0, n3, 0, 0, 1, 0, 1, 0, 0, 2, 0, 1, 1])/
    ((-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 
      35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   (2*(24 - 22*d + 5*d^2 + 4*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 2*n1*n3 + 2*n3^2)*
     j[p4a, n1, 0, n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 2, 0])/
    ((-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 
      35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   ((-4 - 5*d + 3*d^2 - 18*n1 + 7*d*n1 - 2*n1^2 + 16*n3 - 9*d*n3 - 2*n1*n3 + 
      4*n3^2)*j[p4a, n1, 0, n3, 0, 0, 1, 0, 1, 0, 2, 1, 0, 0, 1])/
    (2*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 
      80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   (n3*(36 - 27*d + 5*d^2 + 18*n1 - 7*d*n1 + 2*n1^2 + 16*n3 - 7*d*n3 + 
      2*n1*n3 + 4*n3^2)*j[p4a, n1, 0, 1 + n3, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 
      1])/((-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 
      80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   ((60*n3 - 47*d*n3 + 9*d^2*n3 + 26*n1*n3 - 11*d*n1*n3 + 2*n1^2*n3 + 
      28*n3^2 - 11*d*n3^2 + 6*n1*n3^2 + 4*n3^3)*j[p4a, n1, 0, 1 + n3, 0, 0, 
      1, 0, 1, 0, 1, 1, 0, 0, 1])/(2*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 
      34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) - 
   (2*(24*n3 - 22*d*n3 + 5*d^2*n3 + 4*n1*n3 - 2*d*n1*n3 + 16*n3^2 - 
      7*d*n3^2 + 2*n1*n3^2 + 2*n3^3)*j[p4a, n1, 0, 1 + n3, 0, 0, 1, 0, 1, 0, 
      1, 1, 0, 1, 0])/((-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 
      15*d*n1 + 2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   (2*(24 - 22*d + 5*d^2 + 4*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 2*n1*n3 + 2*n3^2)*
     j[p4a, 1 + n1, -1, n3, 0, 0, 0, 0, 1, 0, 2, 1, 0, 1, 1])/
    ((-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 
      35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   (4*(24 - 22*d + 5*d^2 + 4*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 2*n1*n3 + 2*n3^2)*
     j[p4a, 1 + n1, -1, n3, 0, 0, 1, 0, 0, 0, 1, 2, 0, 1, 1])/
    ((-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 
      35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   ((4 + 5*d - 3*d^2 + 18*n1 - 7*d*n1 + 2*n1^2 - 16*n3 + 9*d*n3 + 2*n1*n3 - 
      4*n3^2)*j[p4a, 1 + n1, -1, n3, 0, 0, 1, 0, 0, 0, 2, 1, 0, 1, 1])/
    (2*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 
      80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   (4*(14 - 13*d + 3*d^2 + 2*n1 - d*n1 + 9*n3 - 4*d*n3 + n1*n3 + n3^2)*
     j[p4a, 1 + n1, -1, n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    ((-2 + d)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 
      35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   ((28 - 15*d + d^2 + 26*n1 - 11*d*n1 + 2*n1^2 - 4*n3 + 5*d*n3 + 6*n1*n3 - 
      4*n3^2)*j[p4a, 1 + n1, -1, n3, 0, 0, 1, 0, 1, 0, 2, 0, 0, 1, 1])/
    (2*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 
      80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   ((4 + 5*d - 3*d^2 + 18*n1 - 7*d*n1 + 2*n1^2 - 16*n3 + 9*d*n3 + 2*n1*n3 - 
      4*n3^2)*j[p4a, 1 + n1, -1, n3, 0, 0, 1, 0, 1, 0, 2, 1, 0, 0, 1])/
    (2*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 
      80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   (2*(-2 + d - n3)*j[p4a, 1 + n1, -1, n3, 0, 0, 1, 0, 2, 0, 1, 0, 0, 1, 1])/
    (132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 35*d*n3 + 
     10*n1*n3 + 12*n3^2) + (2*(-2 + d - n3)*j[p4a, 1 + n1, -1, n3, 0, 0, 1, 
      0, 2, 0, 1, 1, 0, 0, 1])/(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 
     2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2) + 
   (2*(-120 + 158*d - 69*d^2 + 10*d^3 - 44*n1 + 40*d*n1 - 9*d^2*n1 - 4*n1^2 + 
      2*d*n1^2 - 104*n3 + 89*d*n3 - 19*d^2*n3 - 30*n1*n3 + 13*d*n1*n3 - 
      2*n1^2*n3 - 26*n3^2 + 11*d*n3^2 - 4*n1*n3^2 - 2*n3^3)*
     j[p4a, 1 + n1, -1, n3, 0, 0, 2, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-2 + d)*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 
      2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   ((-280 + 378*d - 169*d^2 + 25*d^3 - 84*n1 + 80*d*n1 - 19*d^2*n1 - 4*n1^2 + 
      2*d*n1^2 - 248*n3 + 226*d*n3 - 51*d^2*n3 - 44*n1*n3 + 22*d*n1*n3 - 
      80*n3^2 + 36*d*n3^2 - 8*n1*n3^2 - 8*n3^3)*j[p4a, 1 + n1, -1, n3, 0, 0, 
      2, 0, 1, 0, 0, 1, 0, 1, 1])/(2*(-2 + d)*(-3 + d - n1)*
     (132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 35*d*n3 + 
      10*n1*n3 + 12*n3^2)) + (2*(24 - 22*d + 5*d^2 + 4*n1 - 2*d*n1 + 16*n3 - 
      7*d*n3 + 2*n1*n3 + 2*n3^2)*j[p4a, 1 + n1, -1, n3, 0, 0, 2, 0, 1, 0, 1, 
      1, 0, 0, 1])/((-2 + d)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 
      2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   (2*(24 - 22*d + 5*d^2 + 4*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 2*n1*n3 + 2*n3^2)*
     j[p4a, 1 + n1, -1, n3, 0, 0, 2, 0, 1, 0, 1, 1, 0, 1, 0])/
    ((-2 + d)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 
      35*d*n3 + 10*n1*n3 + 12*n3^2)) - 
   (n3*(36 - 27*d + 5*d^2 + 18*n1 - 7*d*n1 + 2*n1^2 + 16*n3 - 7*d*n3 + 
      2*n1*n3 + 4*n3^2)*j[p4a, 1 + n1, -1, 1 + n3, 0, 0, 1, 0, 0, 0, 1, 1, 0, 
      1, 1])/(2*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 
      2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   (n3*(36 - 27*d + 5*d^2 + 18*n1 - 7*d*n1 + 2*n1^2 + 16*n3 - 7*d*n3 + 
      2*n1*n3 + 4*n3^2)*j[p4a, 1 + n1, -1, 1 + n3, 0, 0, 1, 0, 1, 0, 0, 1, 0, 
      1, 1])/(2*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 
      2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) - 
   (n3*(36 - 27*d + 5*d^2 + 18*n1 - 7*d*n1 + 2*n1^2 + 16*n3 - 7*d*n3 + 
      2*n1*n3 + 4*n3^2)*j[p4a, 1 + n1, -1, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 0, 0, 
      1, 1])/(2*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 
      2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   ((-12*n3 + 7*d*n3 - d^2*n3 - 10*n1*n3 + 3*d*n1*n3 - 2*n1^2*n3 - 4*n3^2 + 
      3*d*n3^2 + 2*n1*n3^2 - 4*n3^3)*j[p4a, 1 + n1, -1, 1 + n3, 0, 0, 1, 0, 
      1, 0, 1, 1, 0, 0, 1])/(2*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 
      15*d*n1 + 2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) - 
   (2*(24*n3 - 22*d*n3 + 5*d^2*n3 + 4*n1*n3 - 2*d*n1*n3 + 16*n3^2 - 
      7*d*n3^2 + 2*n1*n3^2 + 2*n3^3)*j[p4a, 1 + n1, -1, 1 + n3, 0, 0, 1, 0, 
      1, 0, 1, 1, 0, 1, 0])/((-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 
      15*d*n1 + 2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   ((-136 + 214*d - 111*d^2 + 19*d^3 + 20*n1 - 16*d*n1 + 3*d^2*n1 + 4*n1^2 - 
      2*d*n1^2 - 232*n3 + 222*d*n3 - 53*d^2*n3 - 20*n1*n3 + 10*d*n1*n3 - 
      88*n3^2 + 40*d*n3^2 - 8*n1*n3^2 - 8*n3^3)*j[p4a, 1 + n1, 0, -1 + n3, 0, 
      0, 0, 0, 1, 0, 1, 1, 0, 1, 2])/(2*(-2 + d)*(-3 + d - n1)*
     (132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 35*d*n3 + 
      10*n1*n3 + 12*n3^2)) + (2*(24 - 22*d + 5*d^2 + 4*n1 - 2*d*n1 + 16*n3 - 
      7*d*n3 + 2*n1*n3 + 2*n3^2)*j[p4a, 1 + n1, 0, -1 + n3, 0, 0, 0, 0, 1, 0, 
      2, 1, 0, 1, 1])/((-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 
      15*d*n1 + 2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   ((-136 + 214*d - 111*d^2 + 19*d^3 + 20*n1 - 16*d*n1 + 3*d^2*n1 + 4*n1^2 - 
      2*d*n1^2 - 232*n3 + 222*d*n3 - 53*d^2*n3 - 20*n1*n3 + 10*d*n1*n3 - 
      88*n3^2 + 40*d*n3^2 - 8*n1*n3^2 - 8*n3^3)*j[p4a, 1 + n1, 0, -1 + n3, 0, 
      0, 1, 0, 0, 0, 1, 1, 0, 1, 2])/(2*(-2 + d)*(-3 + d - n1)*
     (132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 35*d*n3 + 
      10*n1*n3 + 12*n3^2)) + ((-472 + 638*d - 287*d^2 + 43*d^3 - 140*n1 + 
      128*d*n1 - 29*d^2*n1 - 12*n1^2 + 6*d*n1^2 - 448*n3 + 390*d*n3 - 
      85*d^2*n3 - 116*n1*n3 + 50*d*n1*n3 - 8*n1^2*n3 - 112*n3^2 + 48*d*n3^2 - 
      16*n1*n3^2 - 8*n3^3)*j[p4a, 1 + n1, 0, -1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 
      0, 0, 2])/(2*(-2 + d)*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 
      15*d*n1 + 2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) - 
   ((-4 + d - 2*n1)*(-6 + 3*d - 2*n3)*j[p4a, 1 + n1, 0, -1 + n3, 0, 0, 1, 0, 
      1, 0, 1, 1, 0, 1, 1])/(2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((28 - 15*d + d^2 + 26*n1 - 11*d*n1 + 2*n1^2 - 4*n3 + 5*d*n3 + 6*n1*n3 - 
      4*n3^2)*j[p4a, 1 + n1, 0, -1 + n3, 0, 0, 1, 0, 1, 0, 2, 0, 0, 1, 1])/
    (2*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 
      80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   (2*(-48 + 68*d - 32*d^2 + 5*d^3 - 8*n1 + 8*d*n1 - 2*d^2*n1 - 56*n3 + 
      52*d*n3 - 12*d^2*n3 - 8*n1*n3 + 4*d*n1*n3 - 20*n3^2 + 9*d*n3^2 - 
      2*n1*n3^2 - 2*n3^3)*j[p4a, 1 + n1, 0, -1 + n3, 0, 0, 2, 0, 0, 0, 1, 1, 
      0, 1, 1])/((-2 + d)*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 
      15*d*n1 + 2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   ((-232 + 314*d - 141*d^2 + 21*d^3 - 68*n1 + 64*d*n1 - 15*d^2*n1 - 4*n1^2 + 
      2*d*n1^2 - 224*n3 + 206*d*n3 - 47*d^2*n3 - 36*n1*n3 + 18*d*n1*n3 - 
      80*n3^2 + 36*d*n3^2 - 8*n1*n3^2 - 8*n3^3)*j[p4a, 1 + n1, 0, -1 + n3, 0, 
      0, 2, 0, 1, 0, 0, 1, 0, 1, 1])/(2*(-2 + d)*(-3 + d - n1)*
     (132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 35*d*n3 + 
      10*n1*n3 + 12*n3^2)) + ((136 - 214*d + 111*d^2 - 19*d^3 - 20*n1 + 
      16*d*n1 - 3*d^2*n1 - 4*n1^2 + 2*d*n1^2 + 232*n3 - 222*d*n3 + 
      53*d^2*n3 + 20*n1*n3 - 10*d*n1*n3 + 88*n3^2 - 40*d*n3^2 + 8*n1*n3^2 + 
      8*n3^3)*j[p4a, 1 + n1, 0, n3, -1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 2])/
    (2*(-2 + d)*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 
      2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   ((136 - 214*d + 111*d^2 - 19*d^3 - 20*n1 + 16*d*n1 - 3*d^2*n1 - 4*n1^2 + 
      2*d*n1^2 + 232*n3 - 222*d*n3 + 53*d^2*n3 + 20*n1*n3 - 10*d*n1*n3 + 
      88*n3^2 - 40*d*n3^2 + 8*n1*n3^2 + 8*n3^3)*j[p4a, 1 + n1, 0, n3, -1, 0, 
      1, 0, 0, 0, 1, 1, 0, 1, 2])/(2*(-2 + d)*(-3 + d - n1)*
     (132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 35*d*n3 + 
      10*n1*n3 + 12*n3^2)) + (4*(24 - 22*d + 5*d^2 + 4*n1 - 2*d*n1 + 16*n3 - 
      7*d*n3 + 2*n1*n3 + 2*n3^2)*j[p4a, 1 + n1, 0, n3, -1, 0, 1, 0, 0, 0, 1, 
      2, 0, 1, 1])/((-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 
      2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   ((136 - 214*d + 111*d^2 - 19*d^3 - 20*n1 + 16*d*n1 - 3*d^2*n1 - 4*n1^2 + 
      2*d*n1^2 + 232*n3 - 222*d*n3 + 53*d^2*n3 + 20*n1*n3 - 10*d*n1*n3 + 
      88*n3^2 - 40*d*n3^2 + 8*n1*n3^2 + 8*n3^3)*j[p4a, 1 + n1, 0, n3, -1, 0, 
      1, 0, 1, 0, 1, 1, 0, 0, 2])/(2*(-2 + d)*(-3 + d - n1)*
     (132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 35*d*n3 + 
      10*n1*n3 + 12*n3^2)) + (2*(24 - 22*d + 5*d^2 + 4*n1 - 2*d*n1 + 16*n3 - 
      7*d*n3 + 2*n1*n3 + 2*n3^2)*j[p4a, 1 + n1, 0, n3, -1, 0, 1, 0, 2, 0, 1, 
      0, 0, 1, 1])/((-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 
      2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   (2*(24 - 22*d + 5*d^2 + 4*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 2*n1*n3 + 2*n3^2)*
     j[p4a, 1 + n1, 0, n3, -1, 0, 1, 0, 2, 0, 1, 1, 0, 0, 1])/
    ((-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 
      35*d*n3 + 10*n1*n3 + 12*n3^2)) - 
   (2*(-48 + 68*d - 32*d^2 + 5*d^3 - 8*n1 + 8*d*n1 - 2*d^2*n1 - 56*n3 + 
      52*d*n3 - 12*d^2*n3 - 8*n1*n3 + 4*d*n1*n3 - 20*n3^2 + 9*d*n3^2 - 
      2*n1*n3^2 - 2*n3^3)*j[p4a, 1 + n1, 0, n3, -1, 0, 2, 0, 0, 0, 1, 1, 0, 
      1, 1])/((-2 + d)*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 
      15*d*n1 + 2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   ((28 - 15*d + d^2 + 26*n1 - 11*d*n1 + 2*n1^2 - 4*n3 + 5*d*n3 + 6*n1*n3 - 
      4*n3^2)*j[p4a, 1 + n1, 0, n3, -1, 0, 2, 0, 1, 0, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 
      80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) - 
   (2*(-48 + 68*d - 32*d^2 + 5*d^3 - 8*n1 + 8*d*n1 - 2*d^2*n1 - 56*n3 + 
      52*d*n3 - 12*d^2*n3 - 8*n1*n3 + 4*d*n1*n3 - 20*n3^2 + 9*d*n3^2 - 
      2*n1*n3^2 - 2*n3^3)*j[p4a, 1 + n1, 0, n3, -1, 0, 2, 0, 1, 0, 1, 1, 0, 
      0, 1])/((-2 + d)*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 
      15*d*n1 + 2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) - 
   (2*(-48 + 68*d - 32*d^2 + 5*d^3 - 8*n1 + 8*d*n1 - 2*d^2*n1 - 56*n3 + 
      52*d*n3 - 12*d^2*n3 - 8*n1*n3 + 4*d*n1*n3 - 20*n3^2 + 9*d*n3^2 - 
      2*n1*n3^2 - 2*n3^3)*j[p4a, 1 + n1, 0, n3, -1, 0, 2, 0, 1, 0, 1, 1, 0, 
      1, 0])/((-2 + d)*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 
      15*d*n1 + 2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) - 
   (4*(14 - 13*d + 3*d^2 + 2*n1 - d*n1 + 9*n3 - 4*d*n3 + n1*n3 + n3^2)*
     j[p4a, 1 + n1, 0, n3, 0, -1, 0, 0, 1, 0, 1, 1, 0, 1, 2])/
    ((-2 + d)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 
      35*d*n3 + 10*n1*n3 + 12*n3^2)) - 
   (4*(14 - 13*d + 3*d^2 + 2*n1 - d*n1 + 9*n3 - 4*d*n3 + n1*n3 + n3^2)*
     j[p4a, 1 + n1, 0, n3, 0, -1, 1, 0, 0, 0, 1, 1, 0, 1, 2])/
    ((-2 + d)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 
      35*d*n3 + 10*n1*n3 + 12*n3^2)) - 
   (4*(24 - 22*d + 5*d^2 + 4*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 2*n1*n3 + 2*n3^2)*
     j[p4a, 1 + n1, 0, n3, 0, -1, 1, 0, 0, 0, 1, 2, 0, 1, 1])/
    ((-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 
      35*d*n3 + 10*n1*n3 + 12*n3^2)) - 
   (4*(14 - 13*d + 3*d^2 + 2*n1 - d*n1 + 9*n3 - 4*d*n3 + n1*n3 + n3^2)*
     j[p4a, 1 + n1, 0, n3, 0, -1, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    ((-2 + d)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 
      35*d*n3 + 10*n1*n3 + 12*n3^2)) - 
   (2*(24 - 22*d + 5*d^2 + 4*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 2*n1*n3 + 2*n3^2)*
     j[p4a, 1 + n1, 0, n3, 0, -1, 2, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-2 + d)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 
      35*d*n3 + 10*n1*n3 + 12*n3^2)) - 
   (2*(-2 + d - n3)*j[p4a, 1 + n1, 0, n3, 0, -1, 2, 0, 1, 0, 0, 1, 0, 1, 1])/
    (132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 35*d*n3 + 
     10*n1*n3 + 12*n3^2) - (2*(24 - 22*d + 5*d^2 + 4*n1 - 2*d*n1 + 16*n3 - 
      7*d*n3 + 2*n1*n3 + 2*n3^2)*j[p4a, 1 + n1, 0, n3, 0, -1, 2, 0, 1, 0, 1, 
      1, 0, 0, 1])/((-2 + d)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 
      2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) - 
   (2*(24 - 22*d + 5*d^2 + 4*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 2*n1*n3 + 2*n3^2)*
     j[p4a, 1 + n1, 0, n3, 0, -1, 2, 0, 1, 0, 1, 1, 0, 1, 0])/
    ((-2 + d)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 
      35*d*n3 + 10*n1*n3 + 12*n3^2)) - 
   (2*(24 - 22*d + 5*d^2 + 4*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 2*n1*n3 + 2*n3^2)*
     j[p4a, 1 + n1, 0, n3, 0, 0, 0, -1, 1, 0, 2, 1, 0, 1, 1])/
    ((-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 
      35*d*n3 + 10*n1*n3 + 12*n3^2)) - 
   (4*(-20 + 28*d - 13*d^2 + 2*d^3 - 4*n1 + 4*d*n1 - d^2*n1 - 24*n3 + 
      22*d*n3 - 5*d^2*n3 - 4*n1*n3 + 2*d*n1*n3 - 9*n3^2 + 4*d*n3^2 - 
      n1*n3^2 - n3^3)*j[p4a, 1 + n1, 0, n3, 0, 0, 0, 0, 1, -1, 1, 1, 0, 1, 
      2])/((-2 + d)*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 
      2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   ((-1016 + 1406*d - 647*d^2 + 99*d^3 - 236*n1 + 224*d*n1 - 53*d^2*n1 - 
      12*n1^2 + 6*d*n1^2 - 896*n3 + 806*d*n3 - 181*d^2*n3 - 180*n1*n3 + 
      82*d*n1*n3 - 8*n1^2*n3 - 216*n3^2 + 96*d*n3^2 - 24*n1*n3^2 - 16*n3^3)*
     j[p4a, 1 + n1, 0, n3, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-2 + d)*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 
      2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   (4*(-20 + 28*d - 13*d^2 + 2*d^3 - 4*n1 + 4*d*n1 - d^2*n1 - 24*n3 + 
      22*d*n3 - 5*d^2*n3 - 4*n1*n3 + 2*d*n1*n3 - 9*n3^2 + 4*d*n3^2 - 
      n1*n3^2 - n3^3)*j[p4a, 1 + n1, 0, n3, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 2])/
    ((-2 + d)*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 
      2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) - 
   (2*(24 - 22*d + 5*d^2 + 4*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 2*n1*n3 + 2*n3^2)*
     j[p4a, 1 + n1, 0, n3, 0, 0, 0, 0, 1, 0, 1, 2, -1, 1, 1])/
    ((-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 
      35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   (2*(24 - 22*d + 5*d^2 + 4*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 2*n1*n3 + 2*n3^2)*
     j[p4a, 1 + n1, 0, n3, 0, 0, 0, 0, 1, 0, 1, 2, 0, 1, 1])/
    ((-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 
      35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   (2*(24 - 22*d + 5*d^2 + 4*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 2*n1*n3 + 2*n3^2)*
     j[p4a, 1 + n1, 0, n3, 0, 0, 0, 0, 1, 0, 2, 1, -1, 1, 1])/
    ((-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 
      35*d*n3 + 10*n1*n3 + 12*n3^2)) - 
   (2*(24 - 22*d + 5*d^2 + 4*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 2*n1*n3 + 2*n3^2)*
     j[p4a, 1 + n1, 0, n3, 0, 0, 0, 0, 1, 0, 2, 1, 0, 1, 1])/
    ((-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 
      35*d*n3 + 10*n1*n3 + 12*n3^2)) - 
   (2*(24 - 22*d + 5*d^2 + 4*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 2*n1*n3 + 2*n3^2)*
     j[p4a, 1 + n1, 0, n3, 0, 0, 0, 0, 2, 0, 1, 1, -1, 1, 1])/
    ((-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 
      35*d*n3 + 10*n1*n3 + 12*n3^2)) - 
   (4*(-2 + d - n3)*j[p4a, 1 + n1, 0, n3, 0, 0, 1, -1, 0, 0, 1, 2, 0, 1, 1])/
    (132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 35*d*n3 + 
     10*n1*n3 + 12*n3^2) + ((-28 + 15*d - d^2 - 26*n1 + 11*d*n1 - 2*n1^2 + 
      4*n3 - 5*d*n3 - 6*n1*n3 + 4*n3^2)*j[p4a, 1 + n1, 0, n3, 0, 0, 1, -1, 0, 
      0, 2, 1, 0, 1, 1])/(2*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 
      15*d*n1 + 2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) - 
   (4*(14 - 13*d + 3*d^2 + 2*n1 - d*n1 + 9*n3 - 4*d*n3 + n1*n3 + n3^2)*
     j[p4a, 1 + n1, 0, n3, 0, 0, 1, -1, 1, 0, 1, 1, 0, 0, 2])/
    ((-2 + d)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 
      35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   ((-28 + 15*d - d^2 - 26*n1 + 11*d*n1 - 2*n1^2 + 4*n3 - 5*d*n3 - 6*n1*n3 + 
      4*n3^2)*j[p4a, 1 + n1, 0, n3, 0, 0, 1, -1, 1, 0, 2, 0, 0, 1, 1])/
    (2*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 
      80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   ((-28 + 15*d - d^2 - 26*n1 + 11*d*n1 - 2*n1^2 + 4*n3 - 5*d*n3 - 6*n1*n3 + 
      4*n3^2)*j[p4a, 1 + n1, 0, n3, 0, 0, 1, -1, 1, 0, 2, 1, 0, 0, 1])/
    (2*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 
      80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) - 
   (2*(-2 + d - n3)*j[p4a, 1 + n1, 0, n3, 0, 0, 1, -1, 2, 0, 1, 0, 0, 1, 1])/
    (132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 35*d*n3 + 
     10*n1*n3 + 12*n3^2) - (2*(-2 + d - n3)*j[p4a, 1 + n1, 0, n3, 0, 0, 1, 
      -1, 2, 0, 1, 1, 0, 0, 1])/(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 
     2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2) - 
   (4*(-20 + 28*d - 13*d^2 + 2*d^3 - 4*n1 + 4*d*n1 - d^2*n1 - 24*n3 + 
      22*d*n3 - 5*d^2*n3 - 4*n1*n3 + 2*d*n1*n3 - 9*n3^2 + 4*d*n3^2 - 
      n1*n3^2 - n3^3)*j[p4a, 1 + n1, 0, n3, 0, 0, 1, 0, 0, -1, 1, 1, 0, 1, 
      2])/((-2 + d)*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 
      2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   (4*(24 - 22*d + 5*d^2 + 4*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 2*n1*n3 + 2*n3^2)*
     j[p4a, 1 + n1, 0, n3, 0, 0, 1, 0, 0, -1, 1, 2, 0, 1, 1])/
    ((-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 
      35*d*n3 + 10*n1*n3 + 12*n3^2)) - 
   (2*(24 - 22*d + 5*d^2 + 4*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 2*n1*n3 + 2*n3^2)*
     j[p4a, 1 + n1, 0, n3, 0, 0, 1, 0, 0, -1, 2, 1, 0, 1, 1])/
    ((-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 
      35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   ((520 - 774*d + 383*d^2 - 63*d^3 + 156*n1 - 224*d*n1 + 105*d^2*n1 - 
      16*d^3*n1 + 12*n1^2 - 14*d*n1^2 + 4*d^2*n1^2 + 760*n3 - 766*d*n3 + 
      209*d^2*n3 - 8*d^3*n3 + 332*n1*n3 - 294*d*n1*n3 + 64*d^2*n1*n3 + 
      24*n1^2*n3 - 12*d*n1^2*n3 + 144*n3^2 - 52*d*n3^2 - 8*d^2*n3^2 + 
      64*n1*n3^2 - 28*d*n1*n3^2 - 8*n3^3 + 8*d*n3^3)*
     j[p4a, 1 + n1, 0, n3, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-2 + d)*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 
      2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   (4*(-20 + 28*d - 13*d^2 + 2*d^3 - 4*n1 + 4*d*n1 - d^2*n1 - 24*n3 + 
      22*d*n3 - 5*d^2*n3 - 4*n1*n3 + 2*d*n1*n3 - 9*n3^2 + 4*d*n3^2 - 
      n1*n3^2 - n3^3)*j[p4a, 1 + n1, 0, n3, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 2])/
    ((-2 + d)*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 
      2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   ((68 - 55*d + 11*d^2 + 26*n1 - 11*d*n1 + 2*n1^2 + 32*n3 - 13*d*n3 + 
      6*n1*n3 + 4*n3^2)*j[p4a, 1 + n1, 0, n3, 0, 0, 1, 0, 0, 0, 1, 2, -1, 1, 
      1])/((-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 
      80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   ((-68 + 55*d - 11*d^2 - 26*n1 + 11*d*n1 - 2*n1^2 - 32*n3 + 13*d*n3 - 
      6*n1*n3 - 4*n3^2)*j[p4a, 1 + n1, 0, n3, 0, 0, 1, 0, 0, 0, 1, 2, 0, 1, 
      1])/((-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 
      80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) - 
   (2*(-28 + 40*d - 19*d^2 + 3*d^3 - 4*n1 + 4*d*n1 - d^2*n1 - 42*n3 + 
      39*d*n3 - 9*d^2*n3 - 6*n1*n3 + 3*d*n1*n3 - 18*n3^2 + 8*d*n3^2 - 
      2*n1*n3^2 - 2*n3^3)*j[p4a, 1 + n1, 0, n3, 0, 0, 1, 0, 1, -1, 1, 1, 0, 
      0, 2])/((-2 + d)*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 
      15*d*n1 + 2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) - 
   (2*(24 - 22*d + 5*d^2 + 4*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 2*n1*n3 + 2*n3^2)*
     j[p4a, 1 + n1, 0, n3, 0, 0, 1, 0, 1, -1, 2, 1, 0, 0, 1])/
    ((-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 
      35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   ((168 - 218*d + 93*d^2 - 13*d^3 + 140*n1 - 168*d*n1 + 65*d^2*n1 - 
      8*d^3*n1 + 12*n1^2 - 10*d*n1^2 + 2*d^2*n1^2 + 56*n3 - 32*d*n3 - 
      4*d^2*n3 + 3*d^3*n3 + 36*n1*n3 - 24*d*n1*n3 + 3*d^2*n1*n3 + 24*n3^2 - 
      8*d*n3^2 - d^2*n3^2 + 4*n1*n3^2 + 4*n3^3)*j[p4a, 1 + n1, 0, n3, 0, 0, 
      1, 0, 1, 0, 0, 1, 0, 1, 1])/((-2 + d)*(-3 + d - n1)*
     (132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 35*d*n3 + 
      10*n1*n3 + 12*n3^2)) - (2*(18 - 17*d + 4*d^2 + 2*n1 - d*n1 + 13*n3 - 
      6*d*n3 + n1*n3 + 2*n3^2)*j[p4a, 1 + n1, 0, n3, 0, 0, 1, 0, 1, 0, 0, 2, 
      -1, 1, 1])/((-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 
      2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   (2*(18 - 17*d + 4*d^2 + 2*n1 - d*n1 + 13*n3 - 6*d*n3 + n1*n3 + 2*n3^2)*
     j[p4a, 1 + n1, 0, n3, 0, 0, 1, 0, 1, 0, 0, 2, 0, 1, 1])/
    ((-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 
      35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   ((28 - 15*d + d^2 + 98*n1 - 79*d*n1 + 16*d^2*n1 + 10*n1^2 - 4*d*n1^2 - 
      68*n3 + 47*d*n3 - 6*d^2*n3 + 14*n1*n3 - 6*d*n1*n3 - 16*n3^2 + 2*d*n3^2)*
     j[p4a, 1 + n1, 0, n3, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1])/
    (2*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 
      80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   (4*(14 - 13*d + 3*d^2 + 2*n1 - d*n1 + 9*n3 - 4*d*n3 + n1*n3 + n3^2)*
     j[p4a, 1 + n1, 0, n3, 0, 0, 1, 0, 1, 0, 1, 1, -1, 0, 2])/
    ((-2 + d)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 
      35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   ((-256 + 352*d - 160*d^2 + 24*d^3 - 528*n1 + 692*d*n1 - 298*d^2*n1 + 
      42*d^3*n1 - 136*n1^2 + 128*d*n1^2 - 30*d^2*n1^2 - 8*n1^3 + 4*d*n1^3 + 
      72*n3 - 58*d*n3 + 19*d^2*n3 - 3*d^3*n3 - 92*n1*n3 + 112*d*n1*n3 - 
      29*d^2*n1*n3 - 20*n1^2*n3 + 14*d*n1^2*n3 - 16*n3^2 + 26*d*n3^2 - 
      7*d^2*n3^2 - 4*n1*n3^2 + 6*d*n1*n3^2 - 8*n3^3 + 4*d*n3^3)*
     j[p4a, 1 + n1, 0, n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-2 + d)*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 
      2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   (2*(-28 + 40*d - 19*d^2 + 3*d^3 - 4*n1 + 4*d*n1 - d^2*n1 - 42*n3 + 
      39*d*n3 - 9*d^2*n3 - 6*n1*n3 + 3*d*n1*n3 - 18*n3^2 + 8*d*n3^2 - 
      2*n1*n3^2 - 2*n3^3)*j[p4a, 1 + n1, 0, n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 
      2])/((-2 + d)*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 
      2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   ((-904 + 1218*d - 545*d^2 + 81*d^3 - 276*n1 + 256*d*n1 - 59*d^2*n1 - 
      20*n1^2 + 10*d*n1^2 - 576*n3 + 410*d*n3 - 23*d^2*n3 - 20*d^3*n3 - 
      140*n1*n3 + 46*d*n1*n3 + 8*d^2*n1*n3 - 8*n1^2*n3 - 72*n3^2 - 
      32*d*n3^2 + 28*d^2*n3^2 - 8*n1*n3^2 - 8*d*n1*n3^2 - 8*d*n3^3)*
     j[p4a, 1 + n1, 0, n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0])/
    (2*(-2 + d)*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 
      2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   ((32 - 20*d + 3*d^2 + 24*n1 - 8*d*n1 + 4*n1^2 + 8*n3 - 2*d*n3 + 4*n1*n3)*
     j[p4a, 1 + n1, 0, n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) - 
   (2*(24 - 22*d + 5*d^2 + 4*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 2*n1*n3 + 2*n3^2)*
     j[p4a, 1 + n1, 0, n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 2, 0])/
    ((-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 
      35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   ((28 - 15*d + d^2 + 26*n1 - 11*d*n1 + 2*n1^2 - 4*n3 + 5*d*n3 + 6*n1*n3 - 
      4*n3^2)*j[p4a, 1 + n1, 0, n3, 0, 0, 1, 0, 1, 0, 2, 0, -1, 1, 1])/
    (2*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 
      80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   ((-28 + 15*d - d^2 - 26*n1 + 11*d*n1 - 2*n1^2 + 4*n3 - 5*d*n3 - 6*n1*n3 + 
      4*n3^2)*j[p4a, 1 + n1, 0, n3, 0, 0, 1, 0, 1, 0, 2, 0, 0, 1, 1])/
    (2*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 
      80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) - 
   (2*(-48 + 68*d - 32*d^2 + 5*d^3 - 8*n1 + 8*d*n1 - 2*d^2*n1 - 56*n3 + 
      52*d*n3 - 12*d^2*n3 - 8*n1*n3 + 4*d*n1*n3 - 20*n3^2 + 9*d*n3^2 - 
      2*n1*n3^2 - 2*n3^3)*j[p4a, 1 + n1, 0, n3, 0, 0, 2, -1, 0, 0, 1, 1, 0, 
      1, 1])/((-2 + d)*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 
      15*d*n1 + 2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   ((232 - 314*d + 141*d^2 - 21*d^3 + 68*n1 - 64*d*n1 + 15*d^2*n1 + 4*n1^2 - 
      2*d*n1^2 + 224*n3 - 206*d*n3 + 47*d^2*n3 + 36*n1*n3 - 18*d*n1*n3 + 
      80*n3^2 - 36*d*n3^2 + 8*n1*n3^2 + 8*n3^3)*j[p4a, 1 + n1, 0, n3, 0, 0, 
      2, -1, 1, 0, 0, 1, 0, 1, 1])/(2*(-2 + d)*(-3 + d - n1)*
     (132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 35*d*n3 + 
      10*n1*n3 + 12*n3^2)) + ((144 - 186*d + 79*d^2 - 11*d^3 + 60*n1 - 
      56*d*n1 + 13*d^2*n1 + 4*n1^2 - 2*d*n1^2 + 108*n3 - 96*d*n3 + 
      21*d^2*n3 + 24*n1*n3 - 12*d*n1*n3 + 36*n3^2 - 16*d*n3^2 + 4*n1*n3^2 + 
      4*n3^3)*j[p4a, 1 + n1, 0, n3, 0, 0, 2, 0, 0, -1, 1, 1, 0, 1, 1])/
    ((-2 + d)*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 
      2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   (2*(-48 + 68*d - 32*d^2 + 5*d^3 - 8*n1 + 8*d*n1 - 2*d^2*n1 - 56*n3 + 
      52*d*n3 - 12*d^2*n3 - 8*n1*n3 + 4*d*n1*n3 - 20*n3^2 + 9*d*n3^2 - 
      2*n1*n3^2 - 2*n3^3)*j[p4a, 1 + n1, 0, n3, 0, 0, 2, 0, 0, 0, 1, 1, -1, 
      1, 1])/((-2 + d)*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 
      15*d*n1 + 2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   ((232 - 314*d + 141*d^2 - 21*d^3 + 68*n1 - 64*d*n1 + 15*d^2*n1 + 4*n1^2 - 
      2*d*n1^2 + 224*n3 - 206*d*n3 + 47*d^2*n3 + 36*n1*n3 - 18*d*n1*n3 + 
      80*n3^2 - 36*d*n3^2 + 8*n1*n3^2 + 8*n3^3)*j[p4a, 1 + n1, 0, n3, 0, 0, 
      2, 0, 1, -1, 1, 1, 0, 0, 1])/(2*(-2 + d)*(-3 + d - n1)*
     (132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 35*d*n3 + 
      10*n1*n3 + 12*n3^2)) + ((232 - 314*d + 141*d^2 - 21*d^3 + 68*n1 - 
      64*d*n1 + 15*d^2*n1 + 4*n1^2 - 2*d*n1^2 + 224*n3 - 206*d*n3 + 
      47*d^2*n3 + 36*n1*n3 - 18*d*n1*n3 + 80*n3^2 - 36*d*n3^2 + 8*n1*n3^2 + 
      8*n3^3)*j[p4a, 1 + n1, 0, n3, 0, 0, 2, 0, 1, -1, 1, 1, 0, 1, 0])/
    (2*(-2 + d)*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 
      2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   ((-232 + 314*d - 141*d^2 + 21*d^3 - 68*n1 + 64*d*n1 - 15*d^2*n1 - 4*n1^2 + 
      2*d*n1^2 - 224*n3 + 206*d*n3 - 47*d^2*n3 - 36*n1*n3 + 18*d*n1*n3 - 
      80*n3^2 + 36*d*n3^2 - 8*n1*n3^2 - 8*n3^3)*j[p4a, 1 + n1, 0, n3, 0, 0, 
      2, 0, 1, 0, 0, 1, -1, 1, 1])/(2*(-2 + d)*(-3 + d - n1)*
     (132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 35*d*n3 + 
      10*n1*n3 + 12*n3^2)) + (6*(24*n3 - 22*d*n3 + 5*d^2*n3 + 4*n1*n3 - 
      2*d*n1*n3 + 16*n3^2 - 7*d*n3^2 + 2*n1*n3^2 + 2*n3^3)*
     j[p4a, 1 + n1, 0, 1 + n3, -1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 
      35*d*n3 + 10*n1*n3 + 12*n3^2)) - 
   (2*(24*n3 - 22*d*n3 + 5*d^2*n3 + 4*n1*n3 - 2*d*n1*n3 + 16*n3^2 - 
      7*d*n3^2 + 2*n1*n3^2 + 2*n3^3)*j[p4a, 1 + n1, 0, 1 + n3, -1, 0, 1, 0, 
      1, 0, 0, 1, 0, 1, 1])/((-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 
      15*d*n1 + 2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   (2*(24*n3 - 22*d*n3 + 5*d^2*n3 + 4*n1*n3 - 2*d*n1*n3 + 16*n3^2 - 
      7*d*n3^2 + 2*n1*n3^2 + 2*n3^3)*j[p4a, 1 + n1, 0, 1 + n3, -1, 0, 1, 0, 
      1, 0, 1, 0, 0, 1, 1])/((-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 
      15*d*n1 + 2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   (4*(24*n3 - 22*d*n3 + 5*d^2*n3 + 4*n1*n3 - 2*d*n1*n3 + 16*n3^2 - 
      7*d*n3^2 + 2*n1*n3^2 + 2*n3^3)*j[p4a, 1 + n1, 0, 1 + n3, -1, 0, 1, 0, 
      1, 0, 1, 1, 0, 0, 1])/((-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 
      15*d*n1 + 2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   ((-36*n3 + 33*d*n3 - 7*d^2*n3 - 6*n1*n3 + 5*d*n1*n3 + 2*n1^2*n3 - 
      20*n3^2 + 5*d*n3^2 - 10*n1*n3^2 + 4*n3^3)*j[p4a, 1 + n1, 0, 1 + n3, 0, 
      0, 1, -1, 0, 0, 1, 1, 0, 1, 1])/(2*(-3 + d - n1)*
     (132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 35*d*n3 + 
      10*n1*n3 + 12*n3^2)) + ((-12*n3 + 7*d*n3 - d^2*n3 - 10*n1*n3 + 
      3*d*n1*n3 - 2*n1^2*n3 - 4*n3^2 + 3*d*n3^2 + 2*n1*n3^2 - 4*n3^3)*
     j[p4a, 1 + n1, 0, 1 + n3, 0, 0, 1, -1, 1, 0, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 
      80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   ((12*n3 - 7*d*n3 + d^2*n3 + 10*n1*n3 - 3*d*n1*n3 + 2*n1^2*n3 + 4*n3^2 - 
      3*d*n3^2 - 2*n1*n3^2 + 4*n3^3)*j[p4a, 1 + n1, 0, 1 + n3, 0, 0, 1, -1, 
      1, 0, 1, 0, 0, 1, 1])/(2*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 
      15*d*n1 + 2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   ((-36*n3 + 33*d*n3 - 7*d^2*n3 - 6*n1*n3 + 5*d*n1*n3 + 2*n1^2*n3 - 
      20*n3^2 + 5*d*n3^2 - 10*n1*n3^2 + 4*n3^3)*j[p4a, 1 + n1, 0, 1 + n3, 0, 
      0, 1, -1, 1, 0, 1, 1, 0, 0, 1])/(2*(-3 + d - n1)*
     (132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 35*d*n3 + 
      10*n1*n3 + 12*n3^2)) + (2*(24*n3 - 22*d*n3 + 5*d^2*n3 + 4*n1*n3 - 
      2*d*n1*n3 + 16*n3^2 - 7*d*n3^2 + 2*n1*n3^2 + 2*n3^3)*
     j[p4a, 1 + n1, 0, 1 + n3, 0, 0, 1, -1, 1, 0, 1, 1, 0, 1, 0])/
    ((-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 
      35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   (n3*(36 - 27*d + 5*d^2 + 18*n1 - 7*d*n1 + 2*n1^2 + 16*n3 - 7*d*n3 + 
      2*n1*n3 + 4*n3^2)*j[p4a, 1 + n1, 0, 1 + n3, 0, 0, 1, 0, 0, 0, 1, 1, -1, 
      1, 1])/(2*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 
      2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) - 
   (n3*(36 - 27*d + 5*d^2 + 18*n1 - 7*d*n1 + 2*n1^2 + 16*n3 - 7*d*n3 + 
      2*n1*n3 + 4*n3^2)*j[p4a, 1 + n1, 0, 1 + n3, 0, 0, 1, 0, 0, 0, 1, 1, 0, 
      1, 1])/((-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 
      2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   (n3*(36 - 27*d + 5*d^2 + 18*n1 - 7*d*n1 + 2*n1^2 + 16*n3 - 7*d*n3 + 
      2*n1*n3 + 4*n3^2)*j[p4a, 1 + n1, 0, 1 + n3, 0, 0, 1, 0, 1, 0, 0, 1, -1, 
      1, 1])/(2*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 
      2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) - 
   (n3*(36 - 27*d + 5*d^2 + 18*n1 - 7*d*n1 + 2*n1^2 + 16*n3 - 7*d*n3 + 
      2*n1*n3 + 4*n3^2)*j[p4a, 1 + n1, 0, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 0, -1, 
      1, 1])/(2*(-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 
      2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) - 
   (4*(2*n3 - d*n3 + n3^2)*j[p4a, 1 + n1, 0, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 
      -1, 0, 1])/(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 
     35*d*n3 + 10*n1*n3 + 12*n3^2) - 
   (4*(24*n3 - 22*d*n3 + 5*d^2*n3 + 4*n1*n3 - 2*d*n1*n3 + 16*n3^2 - 
      7*d*n3^2 + 2*n1*n3^2 + 2*n3^3)*j[p4a, 1 + n1, 0, 1 + n3, 0, 0, 1, 0, 1, 
      0, 1, 1, -1, 1, 0])/((-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 
      15*d*n1 + 2*n1^2 + 80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   ((-60*n3 + 47*d*n3 - 9*d^2*n3 - 26*n1*n3 + 11*d*n1*n3 - 2*n1^2*n3 - 
      28*n3^2 + 11*d*n3^2 - 6*n1*n3^2 - 4*n3^3)*j[p4a, 1 + n1, 0, 1 + n3, 0, 
      0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/(2*(-3 + d - n1)*
     (132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 35*d*n3 + 
      10*n1*n3 + 12*n3^2)) + (2*(24*n3 - 22*d*n3 + 5*d^2*n3 + 4*n1*n3 - 
      2*d*n1*n3 + 16*n3^2 - 7*d*n3^2 + 2*n1*n3^2 + 2*n3^3)*
     j[p4a, 1 + n1, 0, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0])/
    ((-3 + d - n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 
      35*d*n3 + 10*n1*n3 + 12*n3^2)) - 
   (2*(1 + n1)*(-18 + 17*d - 4*d^2 - 2*n1 + d*n1 - 13*n3 + 6*d*n3 - n1*n3 - 
      2*n3^2)*j[p4a, 2 + n1, -1, n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((3 - d + n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 
      35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   (2*(1 + n1)*(-24 + 22*d - 5*d^2 - 4*n1 + 2*d*n1 - 16*n3 + 7*d*n3 - 
      2*n1*n3 - 2*n3^2)*j[p4a, 2 + n1, 0, n3, 0, -1, 1, 0, 1, 0, 1, 1, 0, 0, 
      1])/((3 - d + n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 
      80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   (2*(1 + n1)*(-18 + 17*d - 4*d^2 - 2*n1 + d*n1 - 13*n3 + 6*d*n3 - n1*n3 - 
      2*n3^2)*j[p4a, 2 + n1, 0, n3, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((3 - d + n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 
      35*d*n3 + 10*n1*n3 + 12*n3^2)) - 
   (2*(1 + n1)*(-24 + 22*d - 5*d^2 - 4*n1 + 2*d*n1 - 16*n3 + 7*d*n3 - 
      2*n1*n3 - 2*n3^2)*j[p4a, 2 + n1, 0, n3, 0, 0, 1, 0, 1, -1, 1, 1, 0, 0, 
      1])/((3 - d + n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 
      80*n3 - 35*d*n3 + 10*n1*n3 + 12*n3^2)) + 
   (2*(1 + n1)*(-18 + 17*d - 4*d^2 - 2*n1 + d*n1 - 13*n3 + 6*d*n3 - n1*n3 - 
      2*n3^2)*j[p4a, 2 + n1, 0, n3, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((3 - d + n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 
      35*d*n3 + 10*n1*n3 + 12*n3^2)) - 
   (2*(1 + n1)*(-18 + 17*d - 4*d^2 - 2*n1 + d*n1 - 13*n3 + 6*d*n3 - n1*n3 - 
      2*n3^2)*j[p4a, 2 + n1, 0, n3, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1])/
    ((3 - d + n1)*(132 - 115*d + 25*d^2 + 34*n1 - 15*d*n1 + 2*n1^2 + 80*n3 - 
      35*d*n3 + 10*n1*n3 + 12*n3^2)), 
 j[p4a, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n2 == 0 && n4 == 0 && n5 == 0 && n6 == 1 && n7 == 0 && n8 == 1 && 
    n9 == 0 && n3 != 1 -> 
  -((-10 + 5*d - 4*n3)*(800 - 2400*d + 2676*d^2 - 1238*d^3 + 122*d^4 + 
       45*d^5 + 1152*n3 - 2288*d*n3 + 932*d^2*n3 + 604*d^3*n3 - 374*d^4*n3 + 
       464*n3^2 + 280*d*n3^2 - 1588*d^2*n3^2 + 850*d^3*n3^2 - 272*n3^3 + 
       1248*d*n3^3 - 868*d^2*n3^3 - 336*n3^4 + 424*d*n3^4 - 80*n3^5)*
      j[p4a, -1, 0, -1 + n3, 0, 0, 0, 0, 1, 0, 1, 2, 0, 1, 1])/
    (4*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-10 + 5*d - 4*n3)*(576 - 1488*d + 1352*d^2 - 470*d^3 + 35*d^4 + 864*n3 - 
      1440*d*n3 + 556*d^2*n3 + 56*d^3*n3 + 352*n3^2 - 56*d*n3^2 - 
      264*d^2*n3^2 - 80*n3^3 + 256*d*n3^3 - 80*n3^4)*
     j[p4a, -1, 0, -1 + n3, 0, 0, 0, 0, 2, 0, 1, 1, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) - 
   ((-10 + 5*d - 4*n3)*(800 - 2400*d + 2676*d^2 - 1238*d^3 + 122*d^4 + 
      45*d^5 + 1152*n3 - 2288*d*n3 + 932*d^2*n3 + 604*d^3*n3 - 374*d^4*n3 + 
      464*n3^2 + 280*d*n3^2 - 1588*d^2*n3^2 + 850*d^3*n3^2 - 272*n3^3 + 
      1248*d*n3^3 - 868*d^2*n3^3 - 336*n3^4 + 424*d*n3^4 - 80*n3^5)*
     j[p4a, -1, 0, -1 + n3, 0, 0, 1, 0, 0, 0, 1, 2, 0, 1, 1])/
    (4*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) - 
   ((-10 + 5*d - 4*n3)*(272 - 688*d + 618*d^2 - 225*d^3 + 25*d^4 + 400*n3 - 
      696*d*n3 + 360*d^2*n3 - 45*d^3*n3 + 216*n3^2 - 228*d*n3^2 + 
      42*d^2*n3^2 + 64*n3^3 - 28*d*n3^3 + 8*n3^4)*j[p4a, -1, 0, -1 + n3, 0, 
      0, 1, 0, 0, 0, 2, 1, 0, 1, 1])/(4*(-2 + d - n3)^2*(-1 + n3)*
     (-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 126*d^2*n3 - 
      128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-10 + 5*d - 4*n3)*(-1376 + 4240*d - 5356*d^2 + 3500*d^3 - 1185*d^4 + 
      165*d^5 - 2144*n3 + 6176*d*n3 - 7016*d^2*n3 + 3638*d^3*n3 - 
      711*d^4*n3 - 2512*n3^2 + 6368*d*n3^2 - 5288*d^2*n3^2 + 1430*d^3*n3^2 - 
      2176*n3^3 + 3592*d*n3^3 - 1444*d^2*n3^3 - 880*n3^4 + 696*d*n3^4 - 
      128*n3^5)*j[p4a, -1, 0, -1 + n3, 0, 0, 1, 0, 1, 0, 0, 2, 0, 1, 1])/
    (8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-10 + 5*d - 4*n3)*(448 - 1248*d + 1160*d^2 - 184*d^3 - 296*d^4 + 
      125*d^5 + 576*n3 - 832*d*n3 - 688*d^2*n3 + 1652*d^3*n3 - 692*d^4*n3 + 
      224*n3^2 + 1024*d*n3^2 - 2704*d^2*n3^2 + 1436*d^3*n3^2 - 384*n3^3 + 
      1904*d*n3^3 - 1480*d^2*n3^3 - 512*n3^4 + 768*d*n3^4 - 160*n3^5)*
     j[p4a, -1, 0, -1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 2, 0])/
    (8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) - 
   ((-10 + 5*d - 4*n3)*(272 - 688*d + 618*d^2 - 225*d^3 + 25*d^4 + 400*n3 - 
      696*d*n3 + 360*d^2*n3 - 45*d^3*n3 + 216*n3^2 - 228*d*n3^2 + 
      42*d^2*n3^2 + 64*n3^3 - 28*d*n3^3 + 8*n3^4)*j[p4a, -1, 0, -1 + n3, 0, 
      0, 1, 0, 1, 0, 2, 1, 0, 0, 1])/(4*(-2 + d - n3)^2*(-1 + n3)*
     (-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 126*d^2*n3 - 
      128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-10 + 5*d - 4*n3)*j[p4a, -1, 0, -1 + n3, 0, 0, 2, 0, 0, 0, 1, 2, 0, 1, 
      1])/(2*(-2 + d - n3)^2*(-1 + n3)) + 
   ((-10 + 5*d - 4*n3)*j[p4a, -1, 0, -1 + n3, 0, 0, 2, 0, 1, 0, 0, 2, 0, 1, 
      1])/(2*(-2 + d - n3)^2*(-1 + n3)) + 
   (2*(36 - 36*d + 9*d^2 + 16*n3 - 8*d*n3 + 2*n3^2)*
     j[p4a, -1, 0, n3, 0, 0, 0, 0, 1, 0, 1, 2, 0, 1, 1])/
    ((-2 + d)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-14 + 7*d - 2*n3)*j[p4a, -1, 0, n3, 0, 0, 0, 0, 2, 0, 1, 1, 0, 1, 1])/
    (36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) + 
   (2*(36 - 36*d + 9*d^2 + 16*n3 - 8*d*n3 + 2*n3^2)*
     j[p4a, -1, 0, n3, 0, 0, 1, 0, 0, 0, 1, 2, 0, 1, 1])/
    ((-2 + d)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) - 
   (2*(-10 + 5*d - 3*n3)*j[p4a, -1, 0, n3, 0, 0, 1, 0, 0, 0, 2, 1, 0, 1, 1])/
    (36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) + 
   ((96 - 144*d + 72*d^2 - 12*d^3 + 192*n3 - 192*d*n3 + 48*d^2*n3 + 
      102*n3^2 - 51*d*n3^2 + 16*n3^3)*j[p4a, -1, 0, n3, 0, 0, 1, 0, 1, 0, 0, 
      2, 0, 1, 1])/((-2 + d)*(-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 
      18*d*n3 + 8*n3^2)) - ((-10 + 5*d - 4*n3)*(-256 + 304*d + 192*d^2 - 
      362*d^3 + 115*d^4 + 288*n3 - 1408*d*n3 + 1604*d^2*n3 - 520*d^3*n3 + 
      896*n3^2 - 1704*d*n3^2 + 736*d^2*n3^2 + 528*n3^3 - 416*d*n3^3 + 
      80*n3^4)*j[p4a, -1, 0, n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (8*(-2 + d - n3)^2*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 
      126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-10 + 5*d - 4*n3)*(576 - 1488*d + 1352*d^2 - 470*d^3 + 35*d^4 + 864*n3 - 
      1440*d*n3 + 556*d^2*n3 + 56*d^3*n3 + 352*n3^2 - 56*d*n3^2 - 
      264*d^2*n3^2 - 80*n3^3 + 256*d*n3^3 - 80*n3^4)*
     j[p4a, -1, 0, n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0])/
    (8*(-2 + d - n3)^2*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 
      126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-44 + 44*d - 11*d^2 - 28*n3 + 14*d*n3 - 4*n3^2)*
     j[p4a, -1, 0, n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 2, 0])/
    ((-2 + d)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) - 
   (2*(-10 + 5*d - 3*n3)*j[p4a, -1, 0, n3, 0, 0, 1, 0, 1, 0, 2, 1, 0, 0, 1])/
    (36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) + 
   ((-10 + 5*d - 4*n3)*j[p4a, -1, 0, n3, 0, 0, 2, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-2 + d - n3)^2) + (n3*(16 - 16*d + 4*d^2 + 10*n3 - 5*d*n3 + 2*n3^2)*
     j[p4a, -1, 0, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-14 + 7*d - 2*n3)*n3*j[p4a, -1, 0, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 
      0])/(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) - 
   ((-10 + 5*d - 4*n3)*(576 - 1488*d + 1352*d^2 - 470*d^3 + 35*d^4 + 864*n3 - 
      1440*d*n3 + 556*d^2*n3 + 56*d^3*n3 + 352*n3^2 - 56*d*n3^2 - 
      264*d^2*n3^2 - 80*n3^3 + 256*d*n3^3 - 80*n3^4)*
     j[p4a, 0, -1, -1 + n3, 0, 0, 0, 0, 1, 0, 2, 1, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-10 + 5*d - 4*n3)*(800 - 2400*d + 2676*d^2 - 1238*d^3 + 122*d^4 + 
      45*d^5 + 1152*n3 - 2288*d*n3 + 932*d^2*n3 + 604*d^3*n3 - 374*d^4*n3 + 
      464*n3^2 + 280*d*n3^2 - 1588*d^2*n3^2 + 850*d^3*n3^2 - 272*n3^3 + 
      1248*d*n3^3 - 868*d^2*n3^3 - 336*n3^4 + 424*d*n3^4 - 80*n3^5)*
     j[p4a, 0, -1, -1 + n3, 0, 0, 1, 0, 0, 0, 1, 2, 0, 1, 1])/
    (4*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-10 + 5*d - 4*n3)*(272 - 688*d + 618*d^2 - 225*d^3 + 25*d^4 + 400*n3 - 
      696*d*n3 + 360*d^2*n3 - 45*d^3*n3 + 216*n3^2 - 228*d*n3^2 + 
      42*d^2*n3^2 + 64*n3^3 - 28*d*n3^3 + 8*n3^4)*j[p4a, 0, -1, -1 + n3, 0, 
      0, 1, 0, 0, 0, 2, 1, 0, 1, 1])/(4*(-2 + d - n3)^2*(-1 + n3)*
     (-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 126*d^2*n3 - 
      128*n3^2 + 112*d*n3^2 - 32*n3^3)) - 
   ((-10 + 5*d - 4*n3)*(16 + 144*d - 482*d^2 + 493*d^3 - 191*d^4 + 20*d^5 - 
      384*n3 + 1480*d*n3 - 1774*d^2*n3 + 748*d^3*n3 - 65*d^4*n3 - 808*n3^2 + 
      1660*d*n3^2 - 826*d^2*n3^2 + 7*d^3*n3^2 - 424*n3^3 + 248*d*n3^3 + 
      138*d^2*n3^3 + 24*n3^4 - 140*d*n3^4 + 40*n3^5)*
     j[p4a, 0, -1, -1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    (2*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) - 
   ((-10 + 5*d - 4*n3)*(-800 + 1488*d - 452*d^2 - 488*d^3 + 245*d^4 - 
      128*n3 - 1808*d*n3 + 3156*d^2*n3 - 1294*d^3*n3 + 1680*n3^2 - 
      4000*d*n3^2 + 2108*d^2*n3^2 + 1424*n3^3 - 1384*d*n3^3 + 320*n3^4)*
     j[p4a, 0, -1, -1 + n3, 0, 0, 1, 0, 1, 0, 2, 0, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-10 + 5*d - 4*n3)*(272 - 688*d + 618*d^2 - 225*d^3 + 25*d^4 + 400*n3 - 
      696*d*n3 + 360*d^2*n3 - 45*d^3*n3 + 216*n3^2 - 228*d*n3^2 + 
      42*d^2*n3^2 + 64*n3^3 - 28*d*n3^3 + 8*n3^4)*j[p4a, 0, -1, -1 + n3, 0, 
      0, 1, 0, 1, 0, 2, 1, 0, 0, 1])/(4*(-2 + d - n3)^2*(-1 + n3)*
     (-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 126*d^2*n3 - 
      128*n3^2 + 112*d*n3^2 - 32*n3^3)) - 
   ((-10 + 5*d - 4*n3)*(-256 + 304*d + 192*d^2 - 362*d^3 + 115*d^4 + 288*n3 - 
      1408*d*n3 + 1604*d^2*n3 - 520*d^3*n3 + 896*n3^2 - 1704*d*n3^2 + 
      736*d^2*n3^2 + 528*n3^3 - 416*d*n3^3 + 80*n3^4)*
     j[p4a, 0, -1, -1 + n3, 0, 0, 1, 0, 2, 0, 1, 0, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) - 
   ((-10 + 5*d - 4*n3)*(-256 + 304*d + 192*d^2 - 362*d^3 + 115*d^4 + 288*n3 - 
      1408*d*n3 + 1604*d^2*n3 - 520*d^3*n3 + 896*n3^2 - 1704*d*n3^2 + 
      736*d^2*n3^2 + 528*n3^3 - 416*d*n3^3 + 80*n3^4)*
     j[p4a, 0, -1, -1 + n3, 0, 0, 1, 0, 2, 0, 1, 1, 0, 0, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) - 
   ((-10 + 5*d - 4*n3)*(-1760 + 6032*d - 7948*d^2 + 4868*d^3 - 1275*d^4 + 
      80*d^5 - 3808*n3 + 9536*d*n3 - 7832*d^2*n3 + 1934*d^3*n3 + 143*d^4*n3 - 
      2704*n3^2 + 3488*d*n3^2 + 88*d^2*n3^2 - 946*d^3*n3^2 - 256*n3^3 - 
      1272*d*n3^3 + 1324*d^2*n3^3 + 496*n3^4 - 760*d*n3^4 + 160*n3^5)*
     j[p4a, 0, -1, -1 + n3, 0, 0, 2, 0, 0, 0, 1, 1, 0, 1, 1])/
    (8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((10 - 5*d + 4*n3)*j[p4a, 0, -1, -1 + n3, 0, 0, 2, 0, 0, 0, 1, 2, 0, 1, 
      1])/(2*(-2 + d - n3)^2*(-1 + n3)) - 
   ((-10 + 5*d - 4*n3)*(-256 + 304*d + 192*d^2 - 362*d^3 + 115*d^4 + 288*n3 - 
      1408*d*n3 + 1604*d^2*n3 - 520*d^3*n3 + 896*n3^2 - 1704*d*n3^2 + 
      736*d^2*n3^2 + 528*n3^3 - 416*d*n3^3 + 80*n3^4)*
     j[p4a, 0, -1, -1 + n3, 0, 0, 2, 0, 1, 0, 0, 1, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-10 + 5*d - 4*n3)*(448 - 1056*d + 472*d^2 + 688*d^3 - 764*d^4 + 
      215*d^5 + 192*n3 + 1152*d*n3 - 3856*d^2*n3 + 3652*d^3*n3 - 
      1124*d^4*n3 - 992*n3^2 + 4384*d*n3^2 - 5536*d^2*n3^2 + 2164*d^3*n3^2 - 
      1408*n3^3 + 3440*d*n3^3 - 1992*d^2*n3^3 - 768*n3^4 + 896*d*n3^4 - 
      160*n3^5)*j[p4a, 0, -1, -1 + n3, 0, 0, 2, 0, 1, 0, 1, 1, 0, 0, 1])/
    (8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-10 + 5*d - 4*n3)*(448 - 1056*d + 472*d^2 + 688*d^3 - 764*d^4 + 
      215*d^5 + 192*n3 + 1152*d*n3 - 3856*d^2*n3 + 3652*d^3*n3 - 
      1124*d^4*n3 - 992*n3^2 + 4384*d*n3^2 - 5536*d^2*n3^2 + 2164*d^3*n3^2 - 
      1408*n3^3 + 3440*d*n3^3 - 1992*d^2*n3^3 - 768*n3^4 + 896*d*n3^4 - 
      160*n3^5)*j[p4a, 0, -1, -1 + n3, 0, 0, 2, 0, 1, 0, 1, 1, 0, 1, 0])/
    (8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((14 - 7*d + 2*n3)*j[p4a, 0, -1, n3, 0, 0, 0, 0, 1, 0, 2, 1, 0, 1, 1])/
    (36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) - 
   (2*(36 - 36*d + 9*d^2 + 16*n3 - 8*d*n3 + 2*n3^2)*
     j[p4a, 0, -1, n3, 0, 0, 1, 0, 0, 0, 1, 2, 0, 1, 1])/
    ((-2 + d)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   (2*(-10 + 5*d - 3*n3)*j[p4a, 0, -1, n3, 0, 0, 1, 0, 0, 0, 2, 1, 0, 1, 1])/
    (36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) - 
   ((-10 + 5*d - 4*n3)*(-256 + 112*d + 784*d^2 - 938*d^3 + 295*d^4 + 672*n3 - 
      3200*d*n3 + 3876*d^2*n3 - 1384*d^3*n3 + 2112*n3^2 - 4456*d*n3^2 + 
      2192*d^2*n3^2 + 1552*n3^3 - 1440*d*n3^3 + 336*n3^4)*
     j[p4a, 0, -1, n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (8*(-2 + d - n3)^2*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 
      126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((56 - 84*d + 42*d^2 - 7*d^3 + 80*n3 - 80*d*n3 + 20*d^2*n3 + 32*n3^2 - 
      16*d*n3^2 + 4*n3^3)*j[p4a, 0, -1, n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    ((-2 + d)*(-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-10 + 5*d - 4*n3)*(576 - 1488*d + 1352*d^2 - 470*d^3 + 35*d^4 + 864*n3 - 
      1440*d*n3 + 556*d^2*n3 + 56*d^3*n3 + 352*n3^2 - 56*d*n3^2 - 
      264*d^2*n3^2 - 80*n3^3 + 256*d*n3^3 - 80*n3^4)*
     j[p4a, 0, -1, n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0])/
    (8*(-2 + d - n3)^2*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 
      126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((56 - 56*d + 14*d^2 + 42*n3 - 21*d*n3 + 8*n3^2)*
     j[p4a, 0, -1, n3, 0, 0, 1, 0, 1, 0, 2, 0, 0, 1, 1])/
    ((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   (2*(-10 + 5*d - 3*n3)*j[p4a, 0, -1, n3, 0, 0, 1, 0, 1, 0, 2, 1, 0, 0, 1])/
    (36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) + 
   ((16 - 16*d + 4*d^2 + 10*n3 - 5*d*n3 + 2*n3^2)*j[p4a, 0, -1, n3, 0, 0, 1, 
      0, 2, 0, 1, 0, 0, 1, 1])/((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 
      18*d*n3 + 8*n3^2)) + ((16 - 16*d + 4*d^2 + 10*n3 - 5*d*n3 + 2*n3^2)*
     j[p4a, 0, -1, n3, 0, 0, 1, 0, 2, 0, 1, 1, 0, 0, 1])/
    ((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-64 + 64*d - 16*d^2 - 34*n3 + 17*d*n3 - 4*n3^2)*
     j[p4a, 0, -1, n3, 0, 0, 2, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-2 + d)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((16 - 16*d + 4*d^2 + 10*n3 - 5*d*n3 + 2*n3^2)*j[p4a, 0, -1, n3, 0, 0, 2, 
      0, 1, 0, 0, 1, 0, 1, 1])/((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 
      18*d*n3 + 8*n3^2)) + ((-44 + 44*d - 11*d^2 - 28*n3 + 14*d*n3 - 4*n3^2)*
     j[p4a, 0, -1, n3, 0, 0, 2, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((-2 + d)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((368 - 736*d + 552*d^2 - 184*d^3 + 23*d^4 + 432*n3 - 648*d*n3 + 
      324*d^2*n3 - 54*d^3*n3 + 104*n3^2 - 104*d*n3^2 + 26*d^2*n3^2 - 
      24*n3^3 + 12*d*n3^3 - 8*n3^4)*j[p4a, 0, -1, n3, 0, 0, 2, 0, 1, 0, 1, 1, 
      0, 1, 0])/(2*(-2 + d)*(-2 + d - n3)^2*(36 - 36*d + 9*d^2 + 36*n3 - 
      18*d*n3 + 8*n3^2)) + (n3*(16 - 16*d + 4*d^2 + 10*n3 - 5*d*n3 + 2*n3^2)*
     j[p4a, 0, -1, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-14 + 7*d - 2*n3)*n3*j[p4a, 0, -1, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 
      0])/(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) - 
   ((-10 + 5*d - 4*n3)*(1456 - 3648*d + 3110*d^2 - 961*d^3 + 50*d^4 + 
      1936*n3 - 2632*d*n3 + 468*d^2*n3 + 313*d^3*n3 + 168*n3^2 + 988*d*n3^2 - 
      890*d^2*n3^2 - 592*n3^3 + 716*d*n3^3 - 184*n3^4)*
     j[p4a, 0, 0, -2 + n3, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 2])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) - 
   ((-10 + 5*d - 4*n3)*(576 - 1488*d + 1352*d^2 - 470*d^3 + 35*d^4 + 864*n3 - 
      1440*d*n3 + 556*d^2*n3 + 56*d^3*n3 + 352*n3^2 - 56*d*n3^2 - 
      264*d^2*n3^2 - 80*n3^3 + 256*d*n3^3 - 80*n3^4)*
     j[p4a, 0, 0, -2 + n3, 0, 0, 0, 0, 1, 0, 2, 1, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) - 
   ((-10 + 5*d - 4*n3)*(1456 - 3648*d + 3110*d^2 - 961*d^3 + 50*d^4 + 
      1936*n3 - 2632*d*n3 + 468*d^2*n3 + 313*d^3*n3 + 168*n3^2 + 988*d*n3^2 - 
      890*d^2*n3^2 - 592*n3^3 + 716*d*n3^3 - 184*n3^4)*
     j[p4a, 0, 0, -2 + n3, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 2])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-10 + 5*d - 4*n3)*(1952 - 4592*d + 2868*d^2 + 748*d^3 - 1289*d^4 + 
      325*d^5 + 160*n3 + 4896*d*n3 - 11144*d^2*n3 + 8038*d^3*n3 - 
      1863*d^4*n3 - 4688*n3^2 + 14048*d*n3^2 - 12584*d^2*n3^2 + 
      3430*d^3*n3^2 - 4608*n3^3 + 7496*d*n3^3 - 2788*d^2*n3^3 - 1520*n3^4 + 
      1016*d*n3^4 - 128*n3^5)*j[p4a, 0, 0, -2 + n3, 0, 0, 1, 0, 0, 0, 1, 1, 
      0, 2, 1])/(8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*
     (-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 126*d^2*n3 - 
      128*n3^2 + 112*d*n3^2 - 32*n3^3)) - 
   ((-10 + 5*d - 4*n3)*(-2848 + 9328*d - 11796*d^2 + 7004*d^3 - 1825*d^4 + 
      130*d^5 - 5408*n3 + 13120*d*n3 - 10664*d^2*n3 + 2834*d^3*n3 + 
      53*d^4*n3 - 3568*n3^2 + 4832*d*n3^2 - 536*d^2*n3^2 - 862*d^3*n3^2 - 
      512*n3^3 - 1032*d*n3^3 + 1268*d^2*n3^3 + 464*n3^4 - 744*d*n3^4 + 
      160*n3^5)*j[p4a, 0, 0, -2 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    (8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) - 
   ((-10 + 5*d - 4*n3)*(-160 + 320*d - 210*d^2 + 45*d^3 - 192*n3 + 248*d*n3 - 
      78*d^2*n3 - 72*n3^2 + 44*d*n3^2 - 8*n3^3)*j[p4a, 0, 0, -2 + n3, 0, 0, 
      1, 0, 1, 0, 1, 1, 0, 1, 1])/(8*(-6 + 5*d - 4*n3)*(-2 + d - n3)^2*
     (-1 + n3)) - ((-10 + 5*d - 4*n3)*(-800 + 1488*d - 452*d^2 - 488*d^3 + 
      245*d^4 - 128*n3 - 1808*d*n3 + 3156*d^2*n3 - 1294*d^3*n3 + 1680*n3^2 - 
      4000*d*n3^2 + 2108*d^2*n3^2 + 1424*n3^3 - 1384*d*n3^3 + 320*n3^4)*
     j[p4a, 0, 0, -2 + n3, 0, 0, 1, 0, 1, 0, 2, 0, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) - 
   ((-10 + 5*d - 4*n3)*(656 - 2160*d + 2658*d^2 - 1449*d^3 + 295*d^4 + 
      1808*n3 - 4440*d*n3 + 3624*d^2*n3 - 981*d^3*n3 + 1848*n3^2 - 
      3012*d*n3^2 + 1218*d^2*n3^2 + 832*n3^3 - 668*d*n3^3 + 136*n3^4)*
     j[p4a, 0, 0, -2 + n3, 0, 0, 2, 0, 0, 0, 1, 1, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-10 + 5*d - 4*n3)*(1456 - 3648*d + 3110*d^2 - 961*d^3 + 50*d^4 + 
      1936*n3 - 2632*d*n3 + 468*d^2*n3 + 313*d^3*n3 + 168*n3^2 + 988*d*n3^2 - 
      890*d^2*n3^2 - 592*n3^3 + 716*d*n3^3 - 184*n3^4)*
     j[p4a, 0, 0, -1 + n3, -1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 2])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-10 + 5*d - 4*n3)*(1456 - 3648*d + 3110*d^2 - 961*d^3 + 50*d^4 + 
      1936*n3 - 2632*d*n3 + 468*d^2*n3 + 313*d^3*n3 + 168*n3^2 + 988*d*n3^2 - 
      890*d^2*n3^2 - 592*n3^3 + 716*d*n3^3 - 184*n3^4)*
     j[p4a, 0, 0, -1 + n3, -1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 2])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-10 + 5*d - 4*n3)*(800 - 2400*d + 2676*d^2 - 1238*d^3 + 122*d^4 + 
      45*d^5 + 1152*n3 - 2288*d*n3 + 932*d^2*n3 + 604*d^3*n3 - 374*d^4*n3 + 
      464*n3^2 + 280*d*n3^2 - 1588*d^2*n3^2 + 850*d^3*n3^2 - 272*n3^3 + 
      1248*d*n3^3 - 868*d^2*n3^3 - 336*n3^4 + 424*d*n3^4 - 80*n3^5)*
     j[p4a, 0, 0, -1 + n3, -1, 0, 1, 0, 0, 0, 1, 2, 0, 1, 1])/
    (4*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-10 + 5*d - 4*n3)*(1456 - 3648*d + 3110*d^2 - 961*d^3 + 50*d^4 + 
      1936*n3 - 2632*d*n3 + 468*d^2*n3 + 313*d^3*n3 + 168*n3^2 + 988*d*n3^2 - 
      890*d^2*n3^2 - 592*n3^3 + 716*d*n3^3 - 184*n3^4)*
     j[p4a, 0, 0, -1 + n3, -1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) - 
   ((-10 + 5*d - 4*n3)*(576 - 1488*d + 1352*d^2 - 470*d^3 + 35*d^4 + 864*n3 - 
      1440*d*n3 + 556*d^2*n3 + 56*d^3*n3 + 352*n3^2 - 56*d*n3^2 - 
      264*d^2*n3^2 - 80*n3^3 + 256*d*n3^3 - 80*n3^4)*
     j[p4a, 0, 0, -1 + n3, -1, 0, 1, 0, 2, 0, 1, 0, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) - 
   ((-10 + 5*d - 4*n3)*(576 - 1488*d + 1352*d^2 - 470*d^3 + 35*d^4 + 864*n3 - 
      1440*d*n3 + 556*d^2*n3 + 56*d^3*n3 + 352*n3^2 - 56*d*n3^2 - 
      264*d^2*n3^2 - 80*n3^3 + 256*d*n3^3 - 80*n3^4)*
     j[p4a, 0, 0, -1 + n3, -1, 0, 1, 0, 2, 0, 1, 1, 0, 0, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-10 + 5*d - 4*n3)*(656 - 2160*d + 2658*d^2 - 1449*d^3 + 295*d^4 + 
      1808*n3 - 4440*d*n3 + 3624*d^2*n3 - 981*d^3*n3 + 1848*n3^2 - 
      3012*d*n3^2 + 1218*d^2*n3^2 + 832*n3^3 - 668*d*n3^3 + 136*n3^4)*
     j[p4a, 0, 0, -1 + n3, -1, 0, 2, 0, 0, 0, 1, 1, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((10 - 5*d + 4*n3)*j[p4a, 0, 0, -1 + n3, -1, 0, 2, 0, 0, 0, 1, 2, 0, 1, 
      1])/(2*(-2 + d - n3)^2*(-1 + n3)) + 
   ((-10 + 5*d - 4*n3)*(1184 - 3056*d + 2788*d^2 - 1024*d^3 + 115*d^4 + 
      1728*n3 - 2832*d*n3 + 1244*d^2*n3 - 74*d^3*n3 + 560*n3^2 - 160*d*n3^2 - 
      204*d^2*n3^2 - 144*n3^3 + 232*d*n3^3 - 64*n3^4)*
     j[p4a, 0, 0, -1 + n3, -1, 0, 2, 0, 1, 0, 0, 1, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-10 + 5*d - 4*n3)*(656 - 2160*d + 2658*d^2 - 1449*d^3 + 295*d^4 + 
      1808*n3 - 4440*d*n3 + 3624*d^2*n3 - 981*d^3*n3 + 1848*n3^2 - 
      3012*d*n3^2 + 1218*d^2*n3^2 + 832*n3^3 - 668*d*n3^3 + 136*n3^4)*
     j[p4a, 0, 0, -1 + n3, -1, 0, 2, 0, 1, 0, 1, 1, 0, 0, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-10 + 5*d - 4*n3)*(656 - 2160*d + 2658*d^2 - 1449*d^3 + 295*d^4 + 
      1808*n3 - 4440*d*n3 + 3624*d^2*n3 - 981*d^3*n3 + 1848*n3^2 - 
      3012*d*n3^2 + 1218*d^2*n3^2 + 832*n3^3 - 668*d*n3^3 + 136*n3^4)*
     j[p4a, 0, 0, -1 + n3, -1, 0, 2, 0, 1, 0, 1, 1, 0, 1, 0])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((10 - 5*d + 4*n3)*j[p4a, 0, 0, -1 + n3, -1, 0, 2, 0, 2, 0, 1, 0, 0, 1, 
      1])/(2*(-2 + d - n3)^2*(-1 + n3)) + 
   ((-10 + 5*d - 4*n3)*(16 + 144*d - 482*d^2 + 493*d^3 - 191*d^4 + 20*d^5 - 
      384*n3 + 1480*d*n3 - 1774*d^2*n3 + 748*d^3*n3 - 65*d^4*n3 - 808*n3^2 + 
      1660*d*n3^2 - 826*d^2*n3^2 + 7*d^3*n3^2 - 424*n3^3 + 248*d*n3^3 + 
      138*d^2*n3^3 + 24*n3^4 - 140*d*n3^4 + 40*n3^5)*
     j[p4a, 0, 0, -1 + n3, 0, -1, 0, 0, 1, 0, 1, 1, 0, 1, 2])/
    (2*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-10 + 5*d - 4*n3)*(16 + 144*d - 482*d^2 + 493*d^3 - 191*d^4 + 20*d^5 - 
      384*n3 + 1480*d*n3 - 1774*d^2*n3 + 748*d^3*n3 - 65*d^4*n3 - 808*n3^2 + 
      1660*d*n3^2 - 826*d^2*n3^2 + 7*d^3*n3^2 - 424*n3^3 + 248*d*n3^3 + 
      138*d^2*n3^3 + 24*n3^4 - 140*d*n3^4 + 40*n3^5)*
     j[p4a, 0, 0, -1 + n3, 0, -1, 1, 0, 0, 0, 1, 1, 0, 1, 2])/
    (2*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) - 
   ((-10 + 5*d - 4*n3)*(-1 + d - n3)*(176 - 400*d + 358*d^2 - 169*d^3 + 
      40*d^4 + 112*n3 - 216*d*n3 + 236*d^2*n3 - 119*d^3*n3 + 8*n3^2 - 
      148*d*n3^2 + 174*d^2*n3^2 + 48*n3^3 - 132*d*n3^3 + 40*n3^4)*
     j[p4a, 0, 0, -1 + n3, 0, -1, 1, 0, 0, 0, 1, 1, 0, 2, 1])/
    (2*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) - 
   ((-10 + 5*d - 4*n3)*(800 - 2400*d + 2676*d^2 - 1238*d^3 + 122*d^4 + 
      45*d^5 + 1152*n3 - 2288*d*n3 + 932*d^2*n3 + 604*d^3*n3 - 374*d^4*n3 + 
      464*n3^2 + 280*d*n3^2 - 1588*d^2*n3^2 + 850*d^3*n3^2 - 272*n3^3 + 
      1248*d*n3^3 - 868*d^2*n3^3 - 336*n3^4 + 424*d*n3^4 - 80*n3^5)*
     j[p4a, 0, 0, -1 + n3, 0, -1, 1, 0, 0, 0, 1, 2, 0, 1, 1])/
    (4*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-10 + 5*d - 4*n3)*(16 + 144*d - 482*d^2 + 493*d^3 - 191*d^4 + 20*d^5 - 
      384*n3 + 1480*d*n3 - 1774*d^2*n3 + 748*d^3*n3 - 65*d^4*n3 - 808*n3^2 + 
      1660*d*n3^2 - 826*d^2*n3^2 + 7*d^3*n3^2 - 424*n3^3 + 248*d*n3^3 + 
      138*d^2*n3^3 + 24*n3^4 - 140*d*n3^4 + 40*n3^5)*
     j[p4a, 0, 0, -1 + n3, 0, -1, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    (2*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) - 
   ((-10 + 5*d - 4*n3)*(448 - 1056*d + 472*d^2 + 688*d^3 - 764*d^4 + 
      215*d^5 + 192*n3 + 1152*d*n3 - 3856*d^2*n3 + 3652*d^3*n3 - 
      1124*d^4*n3 - 992*n3^2 + 4384*d*n3^2 - 5536*d^2*n3^2 + 2164*d^3*n3^2 - 
      1408*n3^3 + 3440*d*n3^3 - 1992*d^2*n3^3 - 768*n3^4 + 896*d*n3^4 - 
      160*n3^5)*j[p4a, 0, 0, -1 + n3, 0, -1, 2, 0, 0, 0, 1, 1, 0, 1, 1])/
    (8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-10 + 5*d - 4*n3)*j[p4a, 0, 0, -1 + n3, 0, -1, 2, 0, 0, 0, 1, 2, 0, 1, 
      1])/(2*(-2 + d - n3)^2*(-1 + n3)) + 
   ((-10 + 5*d - 4*n3)*(-256 + 304*d + 192*d^2 - 362*d^3 + 115*d^4 + 288*n3 - 
      1408*d*n3 + 1604*d^2*n3 - 520*d^3*n3 + 896*n3^2 - 1704*d*n3^2 + 
      736*d^2*n3^2 + 528*n3^3 - 416*d*n3^3 + 80*n3^4)*
     j[p4a, 0, 0, -1 + n3, 0, -1, 2, 0, 1, 0, 0, 1, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) - 
   ((-10 + 5*d - 4*n3)*(448 - 1056*d + 472*d^2 + 688*d^3 - 764*d^4 + 
      215*d^5 + 192*n3 + 1152*d*n3 - 3856*d^2*n3 + 3652*d^3*n3 - 
      1124*d^4*n3 - 992*n3^2 + 4384*d*n3^2 - 5536*d^2*n3^2 + 2164*d^3*n3^2 - 
      1408*n3^3 + 3440*d*n3^3 - 1992*d^2*n3^3 - 768*n3^4 + 896*d*n3^4 - 
      160*n3^5)*j[p4a, 0, 0, -1 + n3, 0, -1, 2, 0, 1, 0, 1, 1, 0, 0, 1])/
    (8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) - 
   ((-10 + 5*d - 4*n3)*(448 - 1056*d + 472*d^2 + 688*d^3 - 764*d^4 + 
      215*d^5 + 192*n3 + 1152*d*n3 - 3856*d^2*n3 + 3652*d^3*n3 - 
      1124*d^4*n3 - 992*n3^2 + 4384*d*n3^2 - 5536*d^2*n3^2 + 2164*d^3*n3^2 - 
      1408*n3^3 + 3440*d*n3^3 - 1992*d^2*n3^3 - 768*n3^4 + 896*d*n3^4 - 
      160*n3^5)*j[p4a, 0, 0, -1 + n3, 0, -1, 2, 0, 1, 0, 1, 1, 0, 1, 0])/
    (8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-10 + 5*d - 4*n3)*(576 - 1488*d + 1352*d^2 - 470*d^3 + 35*d^4 + 864*n3 - 
      1440*d*n3 + 556*d^2*n3 + 56*d^3*n3 + 352*n3^2 - 56*d*n3^2 - 
      264*d^2*n3^2 - 80*n3^3 + 256*d*n3^3 - 80*n3^4)*
     j[p4a, 0, 0, -1 + n3, 0, 0, 0, -1, 1, 0, 2, 1, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) - 
   ((-10 + 5*d - 4*n3)*(-5152 + 16432*d - 20180*d^2 + 11588*d^3 - 2905*d^4 + 
      200*d^5 - 8864*n3 + 20608*d*n3 - 15768*d^2*n3 + 3722*d^3*n3 + 
      165*d^4*n3 - 4976*n3^2 + 5760*d*n3^2 + 408*d^2*n3^2 - 1390*d^3*n3^2 - 
      192*n3^3 - 2216*d*n3^3 + 1780*d^2*n3^3 + 784*n3^4 - 904*d*n3^4 + 
      160*n3^5)*j[p4a, 0, 0, -1 + n3, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1])/
    (8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-56 + 84*d - 42*d^2 + 7*d^3 - 120*n3 + 120*d*n3 - 30*d^2*n3 - 64*n3^2 + 
      32*d*n3^2 - 10*n3^3)*j[p4a, 0, 0, -1 + n3, 0, 0, 0, 0, 1, 0, 1, 1, 0, 
      1, 2])/(2*(-2 + d - n3)^2*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 
      8*n3^2)) - ((-10 + 5*d - 4*n3)*(448 - 1248*d + 1160*d^2 - 184*d^3 - 
      296*d^4 + 125*d^5 + 576*n3 - 832*d*n3 - 688*d^2*n3 + 1652*d^3*n3 - 
      692*d^4*n3 + 224*n3^2 + 1024*d*n3^2 - 2704*d^2*n3^2 + 1436*d^3*n3^2 - 
      384*n3^3 + 1904*d*n3^3 - 1480*d^2*n3^3 - 512*n3^4 + 768*d*n3^4 - 
      160*n3^5)*j[p4a, 0, 0, -1 + n3, 0, 0, 0, 0, 1, 0, 1, 2, -1, 1, 1])/
    (8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-10 + 5*d - 4*n3)*(448 - 1248*d + 1160*d^2 - 184*d^3 - 296*d^4 + 
      125*d^5 + 576*n3 - 832*d*n3 - 688*d^2*n3 + 1652*d^3*n3 - 692*d^4*n3 + 
      224*n3^2 + 1024*d*n3^2 - 2704*d^2*n3^2 + 1436*d^3*n3^2 - 384*n3^3 + 
      1904*d*n3^3 - 1480*d^2*n3^3 - 512*n3^4 + 768*d*n3^4 - 160*n3^5)*
     j[p4a, 0, 0, -1 + n3, 0, 0, 0, 0, 1, 0, 1, 2, 0, 1, 1])/
    (8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) - 
   ((-10 + 5*d - 4*n3)*(576 - 1488*d + 1352*d^2 - 470*d^3 + 35*d^4 + 864*n3 - 
      1440*d*n3 + 556*d^2*n3 + 56*d^3*n3 + 352*n3^2 - 56*d*n3^2 - 
      264*d^2*n3^2 - 80*n3^3 + 256*d*n3^3 - 80*n3^4)*
     j[p4a, 0, 0, -1 + n3, 0, 0, 0, 0, 1, 0, 2, 1, -1, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-185856 + 748160*d - 1265664*d^2 + 1157616*d^3 - 611488*d^4 + 
      183456*d^5 - 28080*d^6 + 1575*d^7 - 530176*n3 + 1795840*d*n3 - 
      2443744*d^2*n3 + 1679904*d^3*n3 - 596976*d^4*n3 + 97128*d^5*n3 - 
      4410*d^6*n3 - 640256*n3^2 + 1709568*d*n3^2 - 1681952*d^2*n3^2 + 
      715776*d^3*n3^2 - 106680*d^4*n3^2 - 2200*d^5*n3^2 - 396800*n3^3 + 
      715456*d*n3^3 - 359136*d^2*n3^3 + 3856*d^3*n3^3 + 23576*d^4*n3^3 - 
      103424*n3^4 + 43072*d*n3^4 + 78144*d^2*n3^4 - 39280*d^3*n3^4 + 
      13312*n3^5 - 57600*d*n3^5 + 31232*d^2*n3^5 + 13312*n3^6 - 
      12544*d*n3^6 + 2048*n3^7)*j[p4a, 0, 0, -1 + n3, 0, 0, 0, 0, 1, 0, 2, 1, 
      0, 1, 1])/(8*(-2 + d - n3)^2*(-1 + n3)*(36 - 36*d + 9*d^2 + 36*n3 - 
      18*d*n3 + 8*n3^2)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 
      126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-10 + 5*d - 4*n3)*(576 - 1488*d + 1352*d^2 - 470*d^3 + 35*d^4 + 864*n3 - 
      1440*d*n3 + 556*d^2*n3 + 56*d^3*n3 + 352*n3^2 - 56*d*n3^2 - 
      264*d^2*n3^2 - 80*n3^3 + 256*d*n3^3 - 80*n3^4)*
     j[p4a, 0, 0, -1 + n3, 0, 0, 0, 0, 2, 0, 1, 1, -1, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) - 
   ((-10 + 5*d - 4*n3)*(1952 - 4592*d + 2868*d^2 + 748*d^3 - 1289*d^4 + 
      325*d^5 + 160*n3 + 4896*d*n3 - 11144*d^2*n3 + 8038*d^3*n3 - 
      1863*d^4*n3 - 4688*n3^2 + 14048*d*n3^2 - 12584*d^2*n3^2 + 
      3430*d^3*n3^2 - 4608*n3^3 + 7496*d*n3^3 - 2788*d^2*n3^3 - 1520*n3^4 + 
      1016*d*n3^4 - 128*n3^5)*j[p4a, 0, 0, -1 + n3, 0, 0, 1, -1, 0, 0, 1, 1, 
      0, 2, 1])/(8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*
     (-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 126*d^2*n3 - 
      128*n3^2 + 112*d*n3^2 - 32*n3^3)) - 
   ((-10 + 5*d - 4*n3)*(-112 + 112*d + 170*d^2 - 257*d^3 + 85*d^4 + 144*n3 - 
      808*d*n3 + 1024*d^2*n3 - 373*d^3*n3 + 504*n3^2 - 1092*d*n3^2 + 
      546*d^2*n3^2 + 352*n3^3 - 332*d*n3^3 + 72*n3^4)*
     j[p4a, 0, 0, -1 + n3, 0, 0, 1, -1, 0, 0, 1, 2, 0, 1, 1])/
    (8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(24 - 38*d + 15*d^2 + 28*n3 - 
      22*d*n3 + 8*n3^2)) + ((-10 + 5*d - 4*n3)*(-800 + 1488*d - 452*d^2 - 
      488*d^3 + 245*d^4 - 128*n3 - 1808*d*n3 + 3156*d^2*n3 - 1294*d^3*n3 + 
      1680*n3^2 - 4000*d*n3^2 + 2108*d^2*n3^2 + 1424*n3^3 - 1384*d*n3^3 + 
      320*n3^4)*j[p4a, 0, 0, -1 + n3, 0, 0, 1, -1, 0, 0, 2, 1, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-10 + 5*d - 4*n3)*(16 + 144*d - 482*d^2 + 493*d^3 - 191*d^4 + 20*d^5 - 
      384*n3 + 1480*d*n3 - 1774*d^2*n3 + 748*d^3*n3 - 65*d^4*n3 - 808*n3^2 + 
      1660*d*n3^2 - 826*d^2*n3^2 + 7*d^3*n3^2 - 424*n3^3 + 248*d*n3^3 + 
      138*d^2*n3^3 + 24*n3^4 - 140*d*n3^4 + 40*n3^5)*
     j[p4a, 0, 0, -1 + n3, 0, 0, 1, -1, 1, 0, 1, 1, 0, 0, 2])/
    (2*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-10 + 5*d - 4*n3)*(-800 + 1488*d - 452*d^2 - 488*d^3 + 245*d^4 - 
      128*n3 - 1808*d*n3 + 3156*d^2*n3 - 1294*d^3*n3 + 1680*n3^2 - 
      4000*d*n3^2 + 2108*d^2*n3^2 + 1424*n3^3 - 1384*d*n3^3 + 320*n3^4)*
     j[p4a, 0, 0, -1 + n3, 0, 0, 1, -1, 1, 0, 2, 0, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-10 + 5*d - 4*n3)*(-800 + 1488*d - 452*d^2 - 488*d^3 + 245*d^4 - 
      128*n3 - 1808*d*n3 + 3156*d^2*n3 - 1294*d^3*n3 + 1680*n3^2 - 
      4000*d*n3^2 + 2108*d^2*n3^2 + 1424*n3^3 - 1384*d*n3^3 + 320*n3^4)*
     j[p4a, 0, 0, -1 + n3, 0, 0, 1, -1, 1, 0, 2, 1, 0, 0, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-10 + 5*d - 4*n3)*(-256 + 304*d + 192*d^2 - 362*d^3 + 115*d^4 + 288*n3 - 
      1408*d*n3 + 1604*d^2*n3 - 520*d^3*n3 + 896*n3^2 - 1704*d*n3^2 + 
      736*d^2*n3^2 + 528*n3^3 - 416*d*n3^3 + 80*n3^4)*
     j[p4a, 0, 0, -1 + n3, 0, 0, 1, -1, 2, 0, 1, 0, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-10 + 5*d - 4*n3)*(-256 + 304*d + 192*d^2 - 362*d^3 + 115*d^4 + 288*n3 - 
      1408*d*n3 + 1604*d^2*n3 - 520*d^3*n3 + 896*n3^2 - 1704*d*n3^2 + 
      736*d^2*n3^2 + 528*n3^3 - 416*d*n3^3 + 80*n3^4)*
     j[p4a, 0, 0, -1 + n3, 0, 0, 1, -1, 2, 0, 1, 1, 0, 0, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-10 + 5*d - 4*n3)*(800 - 2400*d + 2676*d^2 - 1238*d^3 + 122*d^4 + 
      45*d^5 + 1152*n3 - 2288*d*n3 + 932*d^2*n3 + 604*d^3*n3 - 374*d^4*n3 + 
      464*n3^2 + 280*d*n3^2 - 1588*d^2*n3^2 + 850*d^3*n3^2 - 272*n3^3 + 
      1248*d*n3^3 - 868*d^2*n3^3 - 336*n3^4 + 424*d*n3^4 - 80*n3^5)*
     j[p4a, 0, 0, -1 + n3, 0, 0, 1, 0, 0, -1, 1, 2, 0, 1, 1])/
    (4*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-10 + 5*d - 4*n3)*(576 - 1488*d + 1352*d^2 - 470*d^3 + 35*d^4 + 864*n3 - 
      1440*d*n3 + 556*d^2*n3 + 56*d^3*n3 + 352*n3^2 - 56*d*n3^2 - 
      264*d^2*n3^2 - 80*n3^3 + 256*d*n3^3 - 80*n3^4)*
     j[p4a, 0, 0, -1 + n3, 0, 0, 1, 0, 0, -1, 2, 1, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-10 + 5*d - 4*n3)*(-13792 + 39504*d - 42076*d^2 + 19868*d^3 - 3667*d^4 + 
      100*d^5 - 9120*n3 + 7936*d*n3 + 9248*d^2*n3 - 11342*d^3*n3 + 
      2801*d^4*n3 + 15*d^5*n3 + 7344*n3^2 - 21856*d*n3^2 + 15808*d^2*n3^2 - 
      1418*d^3*n3^2 - 786*d^4*n3^2 + 5088*n3^3 - 3272*d*n3^3 - 
      3276*d^2*n3^3 + 1508*d^3*n3^3 - 688*n3^4 + 2760*d*n3^4 - 952*d^2*n3^4 - 
      544*n3^5 + 192*d*n3^5)*j[p4a, 0, 0, -1 + n3, 0, 0, 1, 0, 0, 0, 1, 1, 0, 
      1, 1])/(8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 
      45*d^3 - 152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 
      32*n3^3)) + ((-56 + 84*d - 42*d^2 + 7*d^3 - 120*n3 + 120*d*n3 - 
      30*d^2*n3 - 64*n3^2 + 32*d*n3^2 - 10*n3^3)*j[p4a, 0, 0, -1 + n3, 0, 0, 
      1, 0, 0, 0, 1, 1, 0, 1, 2])/(2*(-2 + d - n3)^2*
     (36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((272 - 408*d + 204*d^2 - 34*d^3 + 304*n3 - 304*d*n3 + 76*d^2*n3 + 
      118*n3^2 - 59*d*n3^2 + 16*n3^3)*j[p4a, 0, 0, -1 + n3, 0, 0, 1, 0, 0, 0, 
      1, 1, 0, 2, 1])/((-2 + d)*(-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 
      18*d*n3 + 8*n3^2)) + ((-10 + 5*d - 4*n3)*(16 - 32*d + 10*d^2 + 5*d^3 + 
      40*d*n3 - 42*d^2*n3 - 40*n3^2 + 60*d*n3^2 - 24*n3^3)*
     j[p4a, 0, 0, -1 + n3, 0, 0, 1, 0, 0, 0, 1, 2, -1, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(24 - 38*d + 15*d^2 + 28*n3 - 22*d*n3 + 
      8*n3^2)) - ((-10 + 5*d - 4*n3)*(-80 + 120*d - 50*d^2 + 5*d^3 - 112*n3 + 
      128*d*n3 - 42*d^2*n3 - 72*n3^2 + 60*d*n3^2 - 24*n3^3)*
     j[p4a, 0, 0, -1 + n3, 0, 0, 1, 0, 0, 0, 1, 2, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(24 - 38*d + 15*d^2 + 28*n3 - 22*d*n3 + 
      8*n3^2)) - ((-10 + 5*d - 4*n3)*(-256 + 304*d + 192*d^2 - 362*d^3 + 
      115*d^4 + 288*n3 - 1408*d*n3 + 1604*d^2*n3 - 520*d^3*n3 + 896*n3^2 - 
      1704*d*n3^2 + 736*d^2*n3^2 + 528*n3^3 - 416*d*n3^3 + 80*n3^4)*
     j[p4a, 0, 0, -1 + n3, 0, 0, 1, 0, 1, -1, 1, 1, 0, 0, 2])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-10 + 5*d - 4*n3)*(576 - 1488*d + 1352*d^2 - 470*d^3 + 35*d^4 + 864*n3 - 
      1440*d*n3 + 556*d^2*n3 + 56*d^3*n3 + 352*n3^2 - 56*d*n3^2 - 
      264*d^2*n3^2 - 80*n3^3 + 256*d*n3^3 - 80*n3^4)*
     j[p4a, 0, 0, -1 + n3, 0, 0, 1, 0, 1, -1, 2, 1, 0, 0, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-10 + 5*d - 4*n3)*(-3456 + 8208*d - 6544*d^2 + 1794*d^3 - 35*d^4 - 
      2560*n3 + 1232*d*n3 + 2952*d^2*n3 - 1972*d^3*n3 + 115*d^4*n3 + 
      2048*n3^2 - 5864*d*n3^2 + 3388*d^2*n3^2 - 74*d^3*n3^2 + 1984*n3^3 - 
      1712*d*n3^3 - 204*d^2*n3^3 + 224*n3^4 + 232*d*n3^4 - 64*n3^5)*
     j[p4a, 0, 0, -1 + n3, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-10 + 5*d - 4*n3)*(288 - 176*d - 1244*d^2 + 2124*d^3 - 1237*d^4 + 
      245*d^5 - 992*n3 + 5536*d*n3 - 9080*d^2*n3 + 5838*d^3*n3 - 
      1287*d^4*n3 - 3600*n3^2 + 10208*d*n3^2 - 8936*d^2*n3^2 + 
      2430*d^3*n3^2 - 3392*n3^3 + 5544*d*n3^3 - 2116*d^2*n3^3 - 1200*n3^4 + 
      856*d*n3^4 - 128*n3^5)*j[p4a, 0, 0, -1 + n3, 0, 0, 1, 0, 1, 0, 0, 2, 
      -1, 1, 1])/(8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*
     (-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 126*d^2*n3 - 
      128*n3^2 + 112*d*n3^2 - 32*n3^3)) - 
   ((-10 + 5*d - 4*n3)*(288 - 176*d - 1244*d^2 + 2124*d^3 - 1237*d^4 + 
      245*d^5 - 992*n3 + 5536*d*n3 - 9080*d^2*n3 + 5838*d^3*n3 - 
      1287*d^4*n3 - 3600*n3^2 + 10208*d*n3^2 - 8936*d^2*n3^2 + 
      2430*d^3*n3^2 - 3392*n3^3 + 5544*d*n3^3 - 2116*d^2*n3^3 - 1200*n3^4 + 
      856*d*n3^4 - 128*n3^5)*j[p4a, 0, 0, -1 + n3, 0, 0, 1, 0, 1, 0, 0, 2, 0, 
      1, 1])/(8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 
      45*d^3 - 152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 
      32*n3^3)) - ((-10 + 5*d - 4*n3)*(-3200 + 7904*d - 6736*d^2 + 2156*d^3 - 
      150*d^4 - 2848*n3 + 2640*d*n3 + 1348*d^2*n3 - 1452*d^3*n3 + 
      115*d^4*n3 + 1152*n3^2 - 4160*d*n3^2 + 2652*d^2*n3^2 - 74*d^3*n3^2 + 
      1456*n3^3 - 1296*d*n3^3 - 204*d^2*n3^3 + 144*n3^4 + 232*d*n3^4 - 
      64*n3^5)*j[p4a, 0, 0, -1 + n3, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) - 
   ((-10 + 5*d - 4*n3)*(16 + 144*d - 482*d^2 + 493*d^3 - 191*d^4 + 20*d^5 - 
      384*n3 + 1480*d*n3 - 1774*d^2*n3 + 748*d^3*n3 - 65*d^4*n3 - 808*n3^2 + 
      1660*d*n3^2 - 826*d^2*n3^2 + 7*d^3*n3^2 - 424*n3^3 + 248*d*n3^3 + 
      138*d^2*n3^3 + 24*n3^4 - 140*d*n3^4 + 40*n3^5)*
     j[p4a, 0, 0, -1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, -1, 0, 2])/
    (2*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-10 + 5*d - 4*n3)*(-1 + d - n3)*(176 - 400*d + 358*d^2 - 169*d^3 + 
      40*d^4 + 112*n3 - 216*d*n3 + 236*d^2*n3 - 119*d^3*n3 + 8*n3^2 - 
      148*d*n3^2 + 174*d^2*n3^2 + 48*n3^3 - 132*d*n3^3 + 40*n3^4)*
     j[p4a, 0, 0, -1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, -1, 2, 0])/
    (2*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) - 
   ((-10 + 5*d - 4*n3)*(-1440 + 3536*d - 3108*d^2 + 1114*d^3 - 120*d^4 - 
      928*n3 + 864*d*n3 + 524*d^2*n3 - 674*d^3*n3 + 115*d^4*n3 + 336*n3^2 - 
      1480*d*n3^2 + 1392*d^2*n3^2 - 266*d^3*n3^2 + 592*n3^3 - 1048*d*n3^3 + 
      268*d^2*n3^3 + 288*n3^4 - 104*d*n3^4)*j[p4a, 0, 0, -1 + n3, 0, 0, 1, 0, 
      1, 0, 1, 1, 0, 0, 1])/(8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*
     (12 - 28*d + 15*d^2 + 32*n3 - 32*d*n3 + 16*n3^2)) + 
   ((-344064 + 1399552*d - 2279936*d^2 + 1810272*d^3 - 584144*d^4 - 
      116960*d^5 + 158328*d^6 - 48330*d^7 + 5175*d^8 - 627200*n3 + 
      1452544*d*n3 - 233664*d^2*n3 - 2324768*d^3*n3 + 2987968*d^4*n3 - 
      1652880*d^5*n3 + 443556*d^6*n3 - 47250*d^7*n3 + 284672*n3^2 - 
      2980736*d*n3^2 + 7515584*d^2*n3^2 - 8462624*d^3*n3^2 + 
      4886256*d^4*n3^2 - 1418976*d^5*n3^2 + 164728*d^6*n3^2 + 1553920*n3^3 - 
      6196032*d*n3^3 + 9226080*d^2*n3^3 - 6552048*d^3*n3^3 + 
      2246152*d^4*n3^3 - 299632*d^5*n3^3 + 1582208*n3^4 - 4409728*d*n3^4 + 
      4468672*d^2*n3^4 - 1962976*d^3*n3^4 + 316712*d^4*n3^4 + 770176*n3^5 - 
      1502912*d*n3^5 + 958304*d^2*n3^5 - 200208*d^3*n3^5 + 195840*n3^6 - 
      241920*d*n3^6 + 73536*d^2*n3^6 + 24064*n3^7 - 14080*d*n3^7 + 1024*n3^8)*
     j[p4a, 0, 0, -1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    (8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(36 - 36*d + 9*d^2 + 36*n3 - 
      18*d*n3 + 8*n3^2)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 
      126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-10 + 5*d - 4*n3)*(4064 - 13136*d + 16332*d^2 - 9452*d^3 + 2355*d^4 - 
      150*d^5 + 6112*n3 - 13472*d*n3 + 8744*d^2*n3 - 530*d^3*n3 - 
      795*d^4*n3 + 35*d^5*n3 + 2384*n3^2 - 672*d*n3^2 - 3584*d^2*n3^2 + 
      1918*d^3*n3^2 + 56*d^4*n3^2 - 768*n3^3 + 2920*d*n3^3 - 1364*d^2*n3^3 - 
      264*d^3*n3^3 - 656*n3^4 + 328*d*n3^4 + 256*d^2*n3^4 - 80*d*n3^5)*
     j[p4a, 0, 0, -1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0])/
    (8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-128 + 368*d - 372*d^2 + 160*d^3 - 25*d^4 - 320*n3 + 592*d*n3 - 
      356*d^2*n3 + 70*d^3*n3 - 192*n3^2 + 216*d*n3^2 - 60*d^2*n3^2 - 
      32*n3^3 + 16*d*n3^3)*j[p4a, 0, 0, -1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 
      1, 1])/(8*(-6 + 5*d - 4*n3)*(-2 + d - n3)^2*(-1 + n3)) - 
   ((-10 + 5*d - 4*n3)*(448 - 1248*d + 1160*d^2 - 184*d^3 - 296*d^4 + 
      125*d^5 + 576*n3 - 832*d*n3 - 688*d^2*n3 + 1652*d^3*n3 - 692*d^4*n3 + 
      224*n3^2 + 1024*d*n3^2 - 2704*d^2*n3^2 + 1436*d^3*n3^2 - 384*n3^3 + 
      1904*d*n3^3 - 1480*d^2*n3^3 - 512*n3^4 + 768*d*n3^4 - 160*n3^5)*
     j[p4a, 0, 0, -1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 2, 0])/
    (8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) - 
   ((-10 + 5*d - 4*n3)*(-800 + 1488*d - 452*d^2 - 488*d^3 + 245*d^4 - 
      128*n3 - 1808*d*n3 + 3156*d^2*n3 - 1294*d^3*n3 + 1680*n3^2 - 
      4000*d*n3^2 + 2108*d^2*n3^2 + 1424*n3^3 - 1384*d*n3^3 + 320*n3^4)*
     j[p4a, 0, 0, -1 + n3, 0, 0, 1, 0, 1, 0, 2, 0, -1, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((244992 - 770560*d + 822048*d^2 - 167472*d^3 - 336544*d^4 + 290088*d^5 - 
      93150*d^6 + 11025*d^7 + 302336*n3 - 93824*d*n3 - 1571008*d^2*n3 + 
      2772096*d^3*n3 - 1977648*d^4*n3 + 656712*d^5*n3 - 84060*d^6*n3 - 
      478336*n3^2 + 2932352*d*n3^2 - 5493440*d^2*n3^2 + 4558976*d^3*n3^2 - 
      1760040*d^4*n3^2 + 258632*d^5*n3^2 - 1243520*n3^3 + 4123392*d*n3^3 - 
      4797376*d^2*n3^3 + 2366784*d^3*n3^3 - 422392*d^4*n3^3 - 1064448*n3^4 + 
      2379008*d*n3^4 - 1712128*d^2*n3^4 + 399232*d^3*n3^4 - 452096*n3^5 + 
      637952*d*n3^5 - 219776*d^2*n3^5 - 96256*n3^6 + 65536*d*n3^6 - 
      8192*n3^7)*j[p4a, 0, 0, -1 + n3, 0, 0, 1, 0, 1, 0, 2, 0, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 
      8*n3^2)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 
      126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-10 + 5*d - 4*n3)*j[p4a, 0, 0, -1 + n3, 0, 0, 1, 0, 2, 0, 1, 0, 0, 1, 
      1])/(2*(-2 + d - n3)^2*(-1 + n3)) + 
   ((-10 + 5*d - 4*n3)*(656 - 2160*d + 2658*d^2 - 1449*d^3 + 295*d^4 + 
      1808*n3 - 4440*d*n3 + 3624*d^2*n3 - 981*d^3*n3 + 1848*n3^2 - 
      3012*d*n3^2 + 1218*d^2*n3^2 + 832*n3^3 - 668*d*n3^3 + 136*n3^4)*
     j[p4a, 0, 0, -1 + n3, 0, 0, 2, -1, 0, 0, 1, 1, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) - 
   ((-10 + 5*d - 4*n3)*(1184 - 3056*d + 2788*d^2 - 1024*d^3 + 115*d^4 + 
      1728*n3 - 2832*d*n3 + 1244*d^2*n3 - 74*d^3*n3 + 560*n3^2 - 160*d*n3^2 - 
      204*d^2*n3^2 - 144*n3^3 + 232*d*n3^3 - 64*n3^4)*
     j[p4a, 0, 0, -1 + n3, 0, 0, 2, 0, 0, -1, 1, 1, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((10 - 5*d + 4*n3)*j[p4a, 0, 0, -1 + n3, 0, 0, 2, 0, 0, -1, 1, 2, 0, 1, 
      1])/(2*(-2 + d - n3)^2*(-1 + n3)) - 
   ((-10 + 5*d - 4*n3)*(656 - 2160*d + 2658*d^2 - 1449*d^3 + 295*d^4 + 
      1808*n3 - 4440*d*n3 + 3624*d^2*n3 - 981*d^3*n3 + 1848*n3^2 - 
      3012*d*n3^2 + 1218*d^2*n3^2 + 832*n3^3 - 668*d*n3^3 + 136*n3^4)*
     j[p4a, 0, 0, -1 + n3, 0, 0, 2, 0, 0, 0, 1, 1, -1, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((640 - 1680*d + 1560*d^2 - 620*d^3 + 90*d^4 + 1344*n3 - 2572*d*n3 + 
      1564*d^2*n3 - 307*d^3*n3 + 1012*n3^2 - 1258*d*n3^2 + 376*d^2*n3^2 + 
      326*n3^3 - 198*d*n3^3 + 38*n3^4)*j[p4a, 0, 0, -1 + n3, 0, 0, 2, 0, 0, 
      0, 1, 1, 0, 1, 1])/(2*(-2 + d - n3)^2*(-1 + n3)*
     (36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-10 + 5*d - 4*n3)*j[p4a, 0, 0, -1 + n3, 0, 0, 2, 0, 1, 0, 0, 1, 0, 1, 
      1])/(2*(-2 + d - n3)*(-1 + n3)) + 
   ((-10 + 5*d - 4*n3)*j[p4a, 0, 0, -1 + n3, 0, 0, 2, 0, 1, 0, 1, 0, 0, 1, 
      1])/(2*(-2 + d - n3)^2*(-1 + n3)) + 
   ((56 - 84*d + 42*d^2 - 7*d^3 + 120*n3 - 120*d*n3 + 30*d^2*n3 + 64*n3^2 - 
      32*d*n3^2 + 10*n3^3)*j[p4a, 0, 0, n3, -1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 
      2])/(2*(-2 + d - n3)^2*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 
      8*n3^2)) - (3*(-10 + 5*d - 4*n3)*(576 - 1488*d + 1352*d^2 - 470*d^3 + 
      35*d^4 + 864*n3 - 1440*d*n3 + 556*d^2*n3 + 56*d^3*n3 + 352*n3^2 - 
      56*d*n3^2 - 264*d^2*n3^2 - 80*n3^3 + 256*d*n3^3 - 80*n3^4)*
     j[p4a, 0, 0, n3, -1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 
      126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((56 - 84*d + 42*d^2 - 7*d^3 + 120*n3 - 120*d*n3 + 30*d^2*n3 + 64*n3^2 - 
      32*d*n3^2 + 10*n3^3)*j[p4a, 0, 0, n3, -1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 
      2])/(2*(-2 + d - n3)^2*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 
      8*n3^2)) - (2*(36 - 36*d + 9*d^2 + 16*n3 - 8*d*n3 + 2*n3^2)*
     j[p4a, 0, 0, n3, -1, 0, 1, 0, 0, 0, 1, 2, 0, 1, 1])/
    ((-2 + d)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-10 + 5*d - 4*n3)*(576 - 1488*d + 1352*d^2 - 470*d^3 + 35*d^4 + 864*n3 - 
      1440*d*n3 + 556*d^2*n3 + 56*d^3*n3 + 352*n3^2 - 56*d*n3^2 - 
      264*d^2*n3^2 - 80*n3^3 + 256*d*n3^3 - 80*n3^4)*
     j[p4a, 0, 0, n3, -1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 
      126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) - 
   ((-10 + 5*d - 4*n3)*(576 - 1488*d + 1352*d^2 - 470*d^3 + 35*d^4 + 864*n3 - 
      1440*d*n3 + 556*d^2*n3 + 56*d^3*n3 + 352*n3^2 - 56*d*n3^2 - 
      264*d^2*n3^2 - 80*n3^3 + 256*d*n3^3 - 80*n3^4)*
     j[p4a, 0, 0, n3, -1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 
      126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) - 
   ((-10 + 5*d - 4*n3)*(576 - 1488*d + 1352*d^2 - 470*d^3 + 35*d^4 + 864*n3 - 
      1440*d*n3 + 556*d^2*n3 + 56*d^3*n3 + 352*n3^2 - 56*d*n3^2 - 
      264*d^2*n3^2 - 80*n3^3 + 256*d*n3^3 - 80*n3^4)*
     j[p4a, 0, 0, n3, -1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (4*(-2 + d - n3)^2*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 
      126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((76 - 76*d + 19*d^2 + 58*n3 - 29*d*n3 + 11*n3^2)*
     j[p4a, 0, 0, n3, -1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    ((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((14 - 7*d + 2*n3)*j[p4a, 0, 0, n3, -1, 0, 1, 0, 2, 0, 1, 0, 0, 1, 1])/
    (36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) + 
   ((14 - 7*d + 2*n3)*j[p4a, 0, 0, n3, -1, 0, 1, 0, 2, 0, 1, 1, 0, 0, 1])/
    (36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) + 
   ((320 - 480*d + 240*d^2 - 40*d^3 + 452*n3 - 452*d*n3 + 113*d^2*n3 + 
      202*n3^2 - 101*d*n3^2 + 29*n3^3)*j[p4a, 0, 0, n3, -1, 0, 2, 0, 0, 0, 1, 
      1, 0, 1, 1])/((-2 + d - n3)^2*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 
      8*n3^2)) + ((56 - 56*d + 14*d^2 + 42*n3 - 21*d*n3 + 8*n3^2)*
     j[p4a, 0, 0, n3, -1, 0, 2, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((10 - 5*d + 4*n3)*j[p4a, 0, 0, n3, -1, 0, 2, 0, 1, 0, 1, 0, 0, 1, 1])/
    (2*(-2 + d - n3)^2) + ((-10 + 5*d - 3*n3)*j[p4a, 0, 0, n3, -1, 0, 2, 0, 
      1, 0, 1, 1, 0, 0, 1])/(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) + 
   ((-440 + 660*d - 330*d^2 + 55*d^3 - 608*n3 + 608*d*n3 - 152*d^2*n3 - 
      268*n3^2 + 134*d*n3^2 - 38*n3^3)*j[p4a, 0, 0, n3, -1, 0, 2, 0, 1, 0, 1, 
      1, 0, 1, 0])/(2*(-2 + d - n3)^2*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 
      8*n3^2)) + ((-56 + 84*d - 42*d^2 + 7*d^3 - 80*n3 + 80*d*n3 - 
      20*d^2*n3 - 32*n3^2 + 16*d*n3^2 - 4*n3^3)*j[p4a, 0, 0, n3, 0, -1, 0, 0, 
      1, 0, 1, 1, 0, 1, 2])/((-2 + d)*(-2 + d - n3)*
     (36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-56 + 84*d - 42*d^2 + 7*d^3 - 80*n3 + 80*d*n3 - 20*d^2*n3 - 32*n3^2 + 
      16*d*n3^2 - 4*n3^3)*j[p4a, 0, 0, n3, 0, -1, 1, 0, 0, 0, 1, 1, 0, 1, 2])/
    ((-2 + d)*(-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   (4*(4 - 4*d + d^2 + 6*n3 - 3*d*n3 + n3^2)*j[p4a, 0, 0, n3, 0, -1, 1, 0, 0, 
      0, 1, 1, 0, 2, 1])/((-2 + d)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 
      8*n3^2)) + (2*(36 - 36*d + 9*d^2 + 16*n3 - 8*d*n3 + 2*n3^2)*
     j[p4a, 0, 0, n3, 0, -1, 1, 0, 0, 0, 1, 2, 0, 1, 1])/
    ((-2 + d)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-56 + 84*d - 42*d^2 + 7*d^3 - 80*n3 + 80*d*n3 - 20*d^2*n3 - 32*n3^2 + 
      16*d*n3^2 - 4*n3^3)*j[p4a, 0, 0, n3, 0, -1, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    ((-2 + d)*(-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((44 - 44*d + 11*d^2 + 28*n3 - 14*d*n3 + 4*n3^2)*
     j[p4a, 0, 0, n3, 0, -1, 2, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-2 + d)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-16 + 16*d - 4*d^2 - 10*n3 + 5*d*n3 - 2*n3^2)*j[p4a, 0, 0, n3, 0, -1, 2, 
      0, 1, 0, 0, 1, 0, 1, 1])/((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 
      18*d*n3 + 8*n3^2)) + ((44 - 44*d + 11*d^2 + 28*n3 - 14*d*n3 + 4*n3^2)*
     j[p4a, 0, 0, n3, 0, -1, 2, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((-2 + d)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-368 + 736*d - 552*d^2 + 184*d^3 - 23*d^4 - 432*n3 + 648*d*n3 - 
      324*d^2*n3 + 54*d^3*n3 - 104*n3^2 + 104*d*n3^2 - 26*d^2*n3^2 + 
      24*n3^3 - 12*d*n3^3 + 8*n3^4)*j[p4a, 0, 0, n3, 0, -1, 2, 0, 1, 0, 1, 1, 
      0, 1, 0])/(2*(-2 + d)*(-2 + d - n3)^2*(36 - 36*d + 9*d^2 + 36*n3 - 
      18*d*n3 + 8*n3^2)) + ((-14 + 7*d - 2*n3)*j[p4a, 0, 0, n3, 0, 0, 0, -1, 
      1, 0, 2, 1, 0, 1, 1])/(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) + 
   ((-560 + 1120*d - 840*d^2 + 280*d^3 - 35*d^4 - 704*n3 + 1056*d*n3 - 
      528*d^2*n3 + 88*d^3*n3 - 336*n3^2 + 336*d*n3^2 - 84*d^2*n3^2 - 
      76*n3^3 + 38*d*n3^3 - 8*n3^4)*j[p4a, 0, 0, n3, 0, 0, 0, 0, 1, 0, 1, 1, 
      0, 1, 1])/(2*(-2 + d)*(-2 + d - n3)^2*(36 - 36*d + 9*d^2 + 36*n3 - 
      18*d*n3 + 8*n3^2)) + ((44 - 44*d + 11*d^2 + 28*n3 - 14*d*n3 + 4*n3^2)*
     j[p4a, 0, 0, n3, 0, 0, 0, 0, 1, 0, 1, 2, -1, 1, 1])/
    ((-2 + d)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-44 + 44*d - 11*d^2 - 28*n3 + 14*d*n3 - 4*n3^2)*
     j[p4a, 0, 0, n3, 0, 0, 0, 0, 1, 0, 1, 2, 0, 1, 1])/
    ((-2 + d)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((14 - 7*d + 2*n3)*j[p4a, 0, 0, n3, 0, 0, 0, 0, 1, 0, 2, 1, -1, 1, 1])/
    (36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) + 
   ((-14 + 7*d - 2*n3)*j[p4a, 0, 0, n3, 0, 0, 0, 0, 1, 0, 2, 1, 0, 1, 1])/
    (36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) + 
   ((-14 + 7*d - 2*n3)*j[p4a, 0, 0, n3, 0, 0, 0, 0, 2, 0, 1, 1, -1, 1, 1])/
    (36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) + 
   ((-10 + 5*d - 4*n3)*(-768 + 528*d + 1760*d^2 - 2238*d^3 + 705*d^4 + 
      1632*n3 - 7808*d*n3 + 9356*d^2*n3 - 3288*d^3*n3 + 5120*n3^2 - 
      10616*d*n3^2 + 5120*d^2*n3^2 + 3632*n3^3 - 3296*d*n3^3 + 752*n3^4)*
     j[p4a, 0, 0, n3, 0, 0, 1, -1, 0, 0, 1, 1, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 
      126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-272 + 408*d - 204*d^2 + 34*d^3 - 304*n3 + 304*d*n3 - 76*d^2*n3 - 
      118*n3^2 + 59*d*n3^2 - 16*n3^3)*j[p4a, 0, 0, n3, 0, 0, 1, -1, 0, 0, 1, 
      1, 0, 2, 1])/((-2 + d)*(-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 
      18*d*n3 + 8*n3^2)) + ((40 - 40*d + 10*d^2 + 28*n3 - 14*d*n3 + 5*n3^2)*
     j[p4a, 0, 0, n3, 0, 0, 1, -1, 0, 0, 1, 2, 0, 1, 1])/
    ((-2 + d)*(-6 + 3*d - 2*n3)*(-2 + d - n3)) + 
   ((-56 + 56*d - 14*d^2 - 42*n3 + 21*d*n3 - 8*n3^2)*
     j[p4a, 0, 0, n3, 0, 0, 1, -1, 0, 0, 2, 1, 0, 1, 1])/
    ((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) - 
   ((-10 + 5*d - 4*n3)*(-256 + 304*d + 192*d^2 - 362*d^3 + 115*d^4 + 288*n3 - 
      1408*d*n3 + 1604*d^2*n3 - 520*d^3*n3 + 896*n3^2 - 1704*d*n3^2 + 
      736*d^2*n3^2 + 528*n3^3 - 416*d*n3^3 + 80*n3^4)*
     j[p4a, 0, 0, n3, 0, 0, 1, -1, 1, 0, 0, 1, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 
      126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-10 + 5*d - 4*n3)*(-256 + 304*d + 192*d^2 - 362*d^3 + 115*d^4 + 288*n3 - 
      1408*d*n3 + 1604*d^2*n3 - 520*d^3*n3 + 896*n3^2 - 1704*d*n3^2 + 
      736*d^2*n3^2 + 528*n3^3 - 416*d*n3^3 + 80*n3^4)*
     j[p4a, 0, 0, n3, 0, 0, 1, -1, 1, 0, 1, 0, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 
      126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-10 + 5*d - 4*n3)*(-768 + 528*d + 1760*d^2 - 2238*d^3 + 705*d^4 + 
      1632*n3 - 7808*d*n3 + 9356*d^2*n3 - 3288*d^3*n3 + 5120*n3^2 - 
      10616*d*n3^2 + 5120*d^2*n3^2 + 3632*n3^3 - 3296*d*n3^3 + 752*n3^4)*
     j[p4a, 0, 0, n3, 0, 0, 1, -1, 1, 0, 1, 1, 0, 0, 1])/
    (8*(-2 + d - n3)^2*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 
      126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-56 + 84*d - 42*d^2 + 7*d^3 - 80*n3 + 80*d*n3 - 20*d^2*n3 - 32*n3^2 + 
      16*d*n3^2 - 4*n3^3)*j[p4a, 0, 0, n3, 0, 0, 1, -1, 1, 0, 1, 1, 0, 0, 2])/
    ((-2 + d)*(-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) - 
   ((-10 + 5*d - 4*n3)*(576 - 1488*d + 1352*d^2 - 470*d^3 + 35*d^4 + 864*n3 - 
      1440*d*n3 + 556*d^2*n3 + 56*d^3*n3 + 352*n3^2 - 56*d*n3^2 - 
      264*d^2*n3^2 - 80*n3^3 + 256*d*n3^3 - 80*n3^4)*
     j[p4a, 0, 0, n3, 0, 0, 1, -1, 1, 0, 1, 1, 0, 1, 0])/
    (8*(-2 + d - n3)^2*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 
      126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-56 + 56*d - 14*d^2 - 42*n3 + 21*d*n3 - 8*n3^2)*
     j[p4a, 0, 0, n3, 0, 0, 1, -1, 1, 0, 2, 0, 0, 1, 1])/
    ((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-56 + 56*d - 14*d^2 - 42*n3 + 21*d*n3 - 8*n3^2)*
     j[p4a, 0, 0, n3, 0, 0, 1, -1, 1, 0, 2, 1, 0, 0, 1])/
    ((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-16 + 16*d - 4*d^2 - 10*n3 + 5*d*n3 - 2*n3^2)*j[p4a, 0, 0, n3, 0, 0, 1, 
      -1, 2, 0, 1, 0, 0, 1, 1])/((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 
      18*d*n3 + 8*n3^2)) + ((-16 + 16*d - 4*d^2 - 10*n3 + 5*d*n3 - 2*n3^2)*
     j[p4a, 0, 0, n3, 0, 0, 1, -1, 2, 0, 1, 1, 0, 0, 1])/
    ((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) - 
   (2*(36 - 36*d + 9*d^2 + 16*n3 - 8*d*n3 + 2*n3^2)*
     j[p4a, 0, 0, n3, 0, 0, 1, 0, 0, -1, 1, 2, 0, 1, 1])/
    ((-2 + d)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-14 + 7*d - 2*n3)*j[p4a, 0, 0, n3, 0, 0, 1, 0, 0, -1, 2, 1, 0, 1, 1])/
    (36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) + 
   ((2752 - 6224*d + 5568*d^2 - 2456*d^3 + 532*d^4 - 45*d^5 + 3504*n3 - 
      6312*d*n3 + 4212*d^2*n3 - 1230*d^3*n3 + 132*d^4*n3 + 1640*n3^2 - 
      2256*d*n3^2 + 1026*d^2*n3^2 - 154*d^3*n3^2 + 332*n3^3 - 330*d*n3^3 + 
      82*d^2*n3^3 + 24*n3^4 - 16*d*n3^4)*j[p4a, 0, 0, n3, 0, 0, 1, 0, 0, 0, 
      1, 1, 0, 1, 1])/(2*(-2 + d)*(-2 + d - n3)^2*(36 - 36*d + 9*d^2 + 
      36*n3 - 18*d*n3 + 8*n3^2)) + j[p4a, 0, 0, n3, 0, 0, 1, 0, 0, 0, 1, 2, 
     -1, 1, 1]/(-6 + 3*d - 2*n3) + j[p4a, 0, 0, n3, 0, 0, 1, 0, 0, 0, 1, 2, 
     0, 1, 1]/(6 - 3*d + 2*n3) + 
   ((16 - 16*d + 4*d^2 + 10*n3 - 5*d*n3 + 2*n3^2)*j[p4a, 0, 0, n3, 0, 0, 1, 
      0, 1, -1, 1, 1, 0, 0, 2])/((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 
      18*d*n3 + 8*n3^2)) + ((-14 + 7*d - 2*n3)*j[p4a, 0, 0, n3, 0, 0, 1, 0, 
      1, -1, 2, 1, 0, 0, 1])/(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) + 
   ((824 - 1596*d + 1158*d^2 - 373*d^3 + 45*d^4 + 1552*n3 - 2304*d*n3 + 
      1140*d^2*n3 - 188*d^3*n3 + 1168*n3^2 - 1172*d*n3^2 + 294*d^2*n3^2 + 
      392*n3^3 - 198*d*n3^3 + 48*n3^4)*j[p4a, 0, 0, n3, 0, 0, 1, 0, 1, 0, 0, 
      1, 0, 1, 1])/(2*(-2 + d - n3)^2*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 
      8*n3^2)) - ((-46 + 23*d - 16*n3)*(-2 + d - n3)*
     j[p4a, 0, 0, n3, 0, 0, 1, 0, 1, 0, 0, 2, -1, 1, 1])/
    ((-2 + d)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-46 + 23*d - 16*n3)*(-2 + d - n3)*j[p4a, 0, 0, n3, 0, 0, 1, 0, 1, 0, 0, 
      2, 0, 1, 1])/((-2 + d)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 
      8*n3^2)) + ((-760 + 1500*d - 1110*d^2 + 365*d^3 - 45*d^4 - 1480*n3 + 
      2232*d*n3 - 1122*d^2*n3 + 188*d^3*n3 - 1140*n3^2 + 1158*d*n3^2 - 
      294*d^2*n3^2 - 388*n3^3 + 198*d*n3^3 - 48*n3^4)*
     j[p4a, 0, 0, n3, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1])/
    (2*(-2 + d - n3)^2*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) - 
   ((-10 + 5*d - 4*n3)*(-256 + 208*d + 488*d^2 - 650*d^3 + 205*d^4 + 480*n3 - 
      2304*d*n3 + 2740*d^2*n3 - 952*d^3*n3 + 1504*n3^2 - 3080*d*n3^2 + 
      1464*d^2*n3^2 + 1040*n3^3 - 928*d*n3^3 + 208*n3^4)*
     j[p4a, 0, 0, n3, 0, 0, 1, 0, 1, 0, 1, 1, -1, 0, 1])/
    (4*(-2 + d - n3)^2*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 
      126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((56 - 84*d + 42*d^2 - 7*d^3 + 80*n3 - 80*d*n3 + 20*d^2*n3 + 32*n3^2 - 
      16*d*n3^2 + 4*n3^3)*j[p4a, 0, 0, n3, 0, 0, 1, 0, 1, 0, 1, 1, -1, 0, 2])/
    ((-2 + d)*(-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-10 + 5*d - 4*n3)*(576 - 1488*d + 1352*d^2 - 470*d^3 + 35*d^4 + 864*n3 - 
      1440*d*n3 + 556*d^2*n3 + 56*d^3*n3 + 352*n3^2 - 56*d*n3^2 - 
      264*d^2*n3^2 - 80*n3^3 + 256*d*n3^3 - 80*n3^4)*
     j[p4a, 0, 0, n3, 0, 0, 1, 0, 1, 0, 1, 1, -1, 1, 0])/
    (4*(-2 + d - n3)^2*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 
      126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) - 
   (4*(4 - 4*d + d^2 + 6*n3 - 3*d*n3 + n3^2)*j[p4a, 0, 0, n3, 0, 0, 1, 0, 1, 
      0, 1, 1, -1, 2, 0])/((-2 + d)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 
      8*n3^2)) + ((52224 - 181120*d + 234816*d^2 - 122544*d^3 - 4768*d^4 + 
      32976*d^5 - 13260*d^6 + 1725*d^7 + 66304*n3 - 66176*d*n3 - 
      203808*d^2*n3 + 433904*d^3*n3 - 326120*d^4*n3 + 110844*d^5*n3 - 
      14360*d^6*n3 - 93440*n3^2 + 535552*d*n3^2 - 971584*d^2*n3^2 + 
      787616*d^3*n3^2 - 297984*d^4*n3^2 + 42984*d^5*n3^2 - 223744*n3^3 + 
      700288*d*n3^3 - 776352*d^2*n3^3 + 366848*d^3*n3^3 - 62920*d^4*n3^3 - 
      159360*n3^4 + 331904*d*n3^4 - 223392*d^2*n3^4 + 48832*d^3*n3^4 - 
      49152*n3^5 + 62464*d*n3^5 - 19328*d^2*n3^5 - 5632*n3^6 + 3072*d*n3^6)*
     j[p4a, 0, 0, n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (8*(-2 + d)*(-6 + 3*d - 4*n3)*(-2 + d - n3)^2*(-48 + 148*d - 144*d^2 + 
      45*d^3 - 152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 
      32*n3^3)) + ((-16 + 16*d - 4*d^2 - 10*n3 + 5*d*n3 - 2*n3^2)*
     j[p4a, 0, 0, n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    ((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-135168 + 479744*d - 756352*d^2 + 727584*d^3 - 493168*d^4 + 245360*d^5 - 
      84384*d^6 + 17370*d^7 - 1575*d^8 + 32768*n3 - 333056*d*n3 + 
      702400*d^2*n3 - 592096*d^3*n3 + 184864*d^4*n3 + 23584*d^5*n3 - 
      26820*d^6*n3 + 4410*d^7*n3 + 608768*n3^2 - 2085376*d*n3^2 + 
      2777536*d^2*n3^2 - 1821536*d^3*n3^2 + 599632*d^4*n3^2 - 
      84712*d^5*n3^2 + 2200*d^6*n3^2 + 848128*n3^3 - 2300224*d*n3^3 + 
      2401056*d^2*n3^3 - 1195472*d^3*n3^3 + 279144*d^4*n3^3 - 
      23576*d^5*n3^3 + 574336*n3^4 - 1237568*d*n3^4 + 971232*d^2*n3^4 - 
      326704*d^3*n3^4 + 39280*d^4*n3^4 + 228096*n3^5 - 365568*d*n3^5 + 
      188992*d^2*n3^5 - 31232*d^3*n3^5 + 51712*n3^6 - 52480*d*n3^6 + 
      12544*d^2*n3^6 + 5120*n3^7 - 2048*d*n3^7)*j[p4a, 0, 0, n3, 0, 0, 1, 0, 
      1, 0, 1, 1, 0, 1, 0])/(8*(-2 + d)*(-2 + d - n3)^2*
     (36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)*
     (-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 126*d^2*n3 - 
      128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((44 - 44*d + 11*d^2 + 28*n3 - 14*d*n3 + 4*n3^2)*
     j[p4a, 0, 0, n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 2, 0])/
    ((-2 + d)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((56 - 56*d + 14*d^2 + 42*n3 - 21*d*n3 + 8*n3^2)*
     j[p4a, 0, 0, n3, 0, 0, 1, 0, 1, 0, 2, 0, -1, 1, 1])/
    ((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-56 + 56*d - 14*d^2 - 42*n3 + 21*d*n3 - 8*n3^2)*
     j[p4a, 0, 0, n3, 0, 0, 1, 0, 1, 0, 2, 0, 0, 1, 1])/
    ((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((280 - 420*d + 210*d^2 - 35*d^3 + 400*n3 - 400*d*n3 + 100*d^2*n3 + 
      180*n3^2 - 90*d*n3^2 + 26*n3^3)*j[p4a, 0, 0, n3, 0, 0, 2, -1, 0, 0, 1, 
      1, 0, 1, 1])/(2*(-2 + d - n3)^2*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 
      8*n3^2)) + ((-56 + 56*d - 14*d^2 - 42*n3 + 21*d*n3 - 8*n3^2)*
     j[p4a, 0, 0, n3, 0, 0, 2, 0, 0, -1, 1, 1, 0, 1, 1])/
    ((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-280 + 420*d - 210*d^2 + 35*d^3 - 400*n3 + 400*d*n3 - 100*d^2*n3 - 
      180*n3^2 + 90*d*n3^2 - 26*n3^3)*j[p4a, 0, 0, n3, 0, 0, 2, 0, 0, 0, 1, 
      1, -1, 1, 1])/(2*(-2 + d - n3)^2*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 
      8*n3^2)) + ((10 - 5*d + 4*n3)*j[p4a, 0, 0, n3, 0, 0, 2, 0, 0, 0, 1, 1, 
      0, 1, 1])/(2*(-2 + d - n3)^2) + 
   ((-10 + 5*d - 4*n3)*j[p4a, 0, 0, n3, 0, 0, 2, 0, 1, -1, 1, 1, 0, 1, 0])/
    (2*(-2 + d - n3)^2) - (3*(-14 + 7*d - 2*n3)*n3*j[p4a, 0, 0, 1 + n3, -1, 
      0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 
     8*n3^2) + ((-14 + 7*d - 2*n3)*n3*j[p4a, 0, 0, 1 + n3, -1, 0, 1, 0, 1, 0, 
      0, 1, 0, 1, 1])/(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) - 
   ((-14 + 7*d - 2*n3)*n3*j[p4a, 0, 0, 1 + n3, -1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 
      1])/(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) - 
   (2*(-14 + 7*d - 2*n3)*n3*j[p4a, 0, 0, 1 + n3, -1, 0, 1, 0, 1, 0, 1, 1, 0, 
      0, 1])/(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) - 
   (3*n3*(16 - 16*d + 4*d^2 + 10*n3 - 5*d*n3 + 2*n3^2)*
     j[p4a, 0, 0, 1 + n3, 0, 0, 1, -1, 0, 0, 1, 1, 0, 1, 1])/
    ((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   (n3*(16 - 16*d + 4*d^2 + 10*n3 - 5*d*n3 + 2*n3^2)*
     j[p4a, 0, 0, 1 + n3, 0, 0, 1, -1, 1, 0, 0, 1, 0, 1, 1])/
    ((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) - 
   (n3*(16 - 16*d + 4*d^2 + 10*n3 - 5*d*n3 + 2*n3^2)*
     j[p4a, 0, 0, 1 + n3, 0, 0, 1, -1, 1, 0, 1, 0, 0, 1, 1])/
    ((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) - 
   (3*n3*(16 - 16*d + 4*d^2 + 10*n3 - 5*d*n3 + 2*n3^2)*
     j[p4a, 0, 0, 1 + n3, 0, 0, 1, -1, 1, 0, 1, 1, 0, 0, 1])/
    ((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) - 
   ((-14 + 7*d - 2*n3)*n3*j[p4a, 0, 0, 1 + n3, 0, 0, 1, -1, 1, 0, 1, 1, 0, 1, 
      0])/(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) + 
   (2*n3*(16 - 16*d + 4*d^2 + 10*n3 - 5*d*n3 + 2*n3^2)*
     j[p4a, 0, 0, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, -1, 0, 1])/
    ((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   (2*(-14 + 7*d - 2*n3)*n3*j[p4a, 0, 0, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, -1, 
      1, 0])/(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) - 
   (n3*(16 - 16*d + 4*d^2 + 10*n3 - 5*d*n3 + 2*n3^2)*
     j[p4a, 0, 0, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) - 
   ((-14 + 7*d - 2*n3)*n3*j[p4a, 0, 0, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 
      0])/(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)}
