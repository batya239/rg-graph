{j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n1 == 0 || n13 == 1) -> 
  -((n8*j[p4, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
       -1 + n13, n14])/(-1 + n13)) - 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) - (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, 
      n10, n11, n12, -1 + n13, n14])/(-1 + n13) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) - (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, 
      n10, n11, n12, -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4, 1 + n1, -1 + n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n3*j[p4, 1 + n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4, 1 + n1, n2, -1 + n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + ((-2 - n1 + n13 - n2 + n3)*
     j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) + j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, 
    n11, n12, n13, n14] + (n8*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, 1 + n8, 
      n9, n10, -1 + n11, n12, -1 + n13, n14])/(-1 + n13) - 
   (n8*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, -1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n8*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) + 
   (n5*j[p4, 1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, -1 + n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n5*j[p4, 1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) - 
   (n5*j[p4, 1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n13) - 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, n8, -1 + n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, -1 + n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n13) - 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n2*j[p4, 1 + n1, 1 + n2, -1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4, 1 + n1, 1 + n2, n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4, 1 + n1, 1 + n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4, 1 + n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n2*j[p4, 1 + n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, -1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (2*n2*j[p4, 1 + n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) + 
   ((1 + n1)*j[p4, 2 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) + 
   ((-1 - n1)*j[p4, 2 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n1 == 0 || n8 == 1) -> 
  -((n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
       n13, n14])/(-1 + n8)) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, n13, 
      n14])/(-1 + n8) + (n4*j[p4, 1 + n1, -1 + n2, n3, 1 + n4, n5, n6, n7, 
      -1 + n8, n9, n10, n11, n12, n13, n14])/(-1 + n8) + 
   (n12*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n8) + ((-1 - d + 2*n11 + n12 + n4 + n7 + n8)*
     j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, n13, 
      n14])/(-1 + n8) - (n12*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, -1 + n8, 
      n9, n10, n11, 1 + n12, n13, n14])/(-1 + n8) + 
   j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, n12, n13, 
    n14] - (n7*j[p4, 1 + n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, n9, 
      -1 + n10, n11, n12, n13, n14])/(-1 + n8) + 
   (n7*j[p4, 1 + n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n8) - 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, -1 + n5, n6, n7, -1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n8) - 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, n5, -1 + n6, n7, -1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n8) + 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, -1 + n9, n10, n11, 
      n12, n13, n14])/(-1 + n8) - 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n8) + 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n8) + 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, -1 + n7, -1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n8) + 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, -2 + n8, n9, n10, n11, n12, 
      n13, n14])/(-1 + n8) - (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, 
      -1 + n8, n9, -1 + n10, n11, n12, n13, n14])/(-1 + n8) + 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n8) - 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n8) + 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      n13, n14])/(-1 + n8), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n6 == 1 || n9 == 0) -> 
  (n4*j[p4, -1 + n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 
      n12, n13, n14])/(-1 + n6) + 
   (n3*j[p4, -1 + n1, n2, 1 + n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 
      n12, n13, n14])/(-1 + n6) - 
   (n2*j[p4, -1 + n1, 1 + n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 
      n12, n13, n14])/(-1 + n6) - 
   (n4*j[p4, n1, -1 + n2, n3, 1 + n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 
      n12, n13, n14])/(-1 + n6) + ((-1 - d + 2*n10 + n2 + n3 + n6 + n7)*
     j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
      n14])/(-1 + n6) + (n7*j[p4, n1, n2, n3, n4, n5, -1 + n6, 1 + n7, n8, 
      1 + n9, -1 + n10, n11, n12, n13, n14])/(-1 + n6) - 
   (n7*j[p4, n1, n2, n3, n4, n5, -1 + n6, 1 + n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n6) + j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 
    1 + n9, -1 + n10, n11, n12, n13, n14] + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, -2 + n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, n14])/(-1 + n6) + (n4*j[p4, n1, n2, n3, 1 + n4, n5, -1 + n6, 
      -1 + n7, n8, 1 + n9, n10, n11, n12, n13, n14])/(-1 + n6) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, n9, n10, n11, n12, n13, 
      n14])/(-1 + n6) + (n4*j[p4, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, 
      1 + n9, -1 + n10, n11, n12, n13, n14])/(-1 + n6) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n6) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, -1 + n6, n7, -1 + n8, 1 + n9, n10, n11, 
      n12, n13, n14])/(-1 + n6) + 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, -1 + n6, n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n6) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n6) + 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n6) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n6) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, n14])/(-1 + n6) + (n2*j[p4, n1, 1 + n2, n3, n4, n5, -1 + n6, n7, 
      n8, 1 + n9, -1 + n10, n11, n12, n13, n14])/(-1 + n6), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n14 == 1 || n9 == 0) -> 
  (n5*j[p4, -1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n4*j[p4, -1 + n1, n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4, n1, -1 + n2, n3, n4, n5, 1 + n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4, n1, -1 + n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4, n1, n2, -1 + n3, n4, n5, 1 + n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   ((-2 + n14 - n9)*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) + j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 
    1 + n9, n10, n11, n12, n13, n14] + 
   ((1 + n9)*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 2 + n9, n10, n11, n12, 
      n13, -2 + n14])/(-1 + n14) + 
   ((-1 - n9)*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 2 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, -1 + n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, -1 + n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) + (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 
      1 + n9, -1 + n10, n11, n12, n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 1 + n9, n10, n11, -1 + n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 1 + n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14) - (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, 
      n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) - 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n14) + 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14) + (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, 
      n8, 1 + n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) + (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, 
      1 + n9, -1 + n10, n11, n12, n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n12 == 0 || n8 == 1) -> 
  (n4*j[p4, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) + ((-1 - d + n1 + 2*n13 + n3 + n5 + n8)*
     j[p4, n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, n13, 
      n14])/(-1 + n8) + j[p4, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 
    1 + n12, -1 + n13, n14] + 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n8) - 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n8) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, -1 + n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n8) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) + 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n8) - 
   (n2*j[p4, n1, 1 + n2, -1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) + 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, -1 + n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) + 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, -2 + n8, n9, n10, n11, 1 + n12, 
      n13, n14])/(-1 + n8) - (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, 
      -1 + n8, n9, n10, n11, n12, n13, n14])/(-1 + n8) + 
   (2*n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, -1 + n13, n14])/(-1 + n8) + 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n8) - 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      n13, n14])/(-1 + n8), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n1 == 0 || n11 == 1) -> 
  -((n7*j[p4, 1 + n1, -1 + n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 
       n12, n13, n14])/(-1 + n11)) - 
   (n3*j[p4, 1 + n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n12*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, 
    -1 + n8, n9, n10, n11, n12, n13, n14] + 
   ((-1 - d + n11 + n12 + n4 + n7 + 2*n8)*j[p4, 1 + n1, n2, n3, n4, n5, n6, 
      n7, n8, n9, n10, -1 + n11, n12, n13, n14])/(-1 + n11) - 
   (n12*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n11) + 
   (n7*j[p4, 1 + n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (2*n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, 
      -1 + n11, n12, n13, n14])/(-1 + n11) - 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      -1 + n12, n13, n14])/(-1 + n11) + 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, n12, 
      -1 + n13, n14])/(-1 + n11), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n10 == 1 || n2 == 0) -> j[p4, -1 + n1, 1 + n2, n3, n4, n5, n6, n7, n8, 
    n9, n10, n11, n12, n13, n14] - 
   (n7*j[p4, n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, -1 + n10, n11, n12, n13, 
      n14])/(-1 + n10) - (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, 
      -1 + n10, n11, n12, n13, n14])/(-1 + n10) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, n13, 
      n14])/(-1 + n10) + (n6*j[p4, n1, 1 + n2, n3, n4, -1 + n5, 1 + n6, n7, 
      n8, n9, -1 + n10, n11, n12, n13, n14])/(-1 + n10) + 
   ((-1 + d - n10 - 2*n2 - n3 - n6 - n7)*j[p4, n1, 1 + n2, n3, n4, n5, n6, 
      n7, n8, n9, -1 + n10, n11, n12, n13, n14])/(-1 + n10) + 
   (n7*j[p4, n1, 1 + n2, n3, n4, n5, n6, 1 + n7, -1 + n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n4*j[p4, n1, 1 + n2, n3, 1 + n4, -1 + n5, n6, n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n4*j[p4, n1, 1 + n2, n3, 1 + n4, n5, -1 + n6, n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n4*j[p4, n1, 1 + n2, n3, 1 + n4, n5, n6, -1 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n4*j[p4, n1, 1 + n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (2*n3*j[p4, n1, 1 + n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, -1 + n10, 
      n11, n12, n13, n14])/(-1 + n10) - 
   (n3*j[p4, n1, 1 + n2, 1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, 
      -1 + n12, n13, n14])/(-1 + n10) + 
   (2*n3*j[p4, n1, 1 + n2, 1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, 
      n12, -1 + n13, n14])/(-1 + n10), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n14 == 1 || n4 == 0) -> 
  (n9*j[p4, -1 + n1, n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4, n1, -1 + n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4, n1, -1 + n2, n3, 1 + n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + j[p4, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, 
    n8, n9, n10, n11, n12, n13, n14] - 
   (n6*j[p4, n1, n2, -1 + n3, 1 + n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   ((-1 - n4)*j[p4, n1, n2, -1 + n3, 2 + n4, n5, n6, n7, n8, n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) - (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 
      n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) - 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) + (n9*j[p4, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, 
      n8, 1 + n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) + 
   (n9*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   ((-2 + n14 - n4)*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) + 
   (n9*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, -1 + n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n9*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14) - (n9*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, 
      1 + n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4, n1, n2, n3, 1 + n4, n5, 1 + n6, -1 + n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (2*n6*j[p4, n1, n2, n3, 1 + n4, n5, 1 + n6, n7, -1 + n8, n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4, n1, n2, n3, 1 + n4, n5, 1 + n6, n7, n8, n9, n10, n11, -1 + n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4, n1, n2, n3, 1 + n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4, n1, n2, n3, 1 + n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14) + 
   (n5*j[p4, n1, n2, n3, 1 + n4, 1 + n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n5*j[p4, n1, n2, n3, 1 + n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n14) + 
   (n5*j[p4, n1, n2, n3, 1 + n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14) + ((1 + n4)*j[p4, n1, n2, n3, 2 + n4, n5, n6, n7, 
      n8, n9, n10, n11, n12, n13, -2 + n14])/(-1 + n14), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n13 == 1 || n7 == 0) -> 
  -((n8*j[p4, n1, -1 + n2, n3, n4, n5, n6, 1 + n7, 1 + n8, n9, n10, n11, n12, 
       -1 + n13, n14])/(-1 + n13)) + j[p4, n1, n2, -1 + n3, n4, n5, n6, 
    1 + n7, n8, n9, n10, n11, n12, n13, n14] + 
   (n5*j[p4, n1, n2, n3, -1 + n4, 1 + n5, n6, 1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n8*j[p4, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) + ((1 - n13 - n2 + n3 + n4 - n5 + n8)*
     j[p4, n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) - (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, 
      n10, n11, n12, -1 + n13, n14])/(-1 + n13) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, -1 + n5, n6, 1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) + (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, 
      n10, n11, n12, -1 + n13, n14])/(-1 + n13) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, 1 + n7, n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) + (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, 1 + n7, 
      -1 + n8, n9, n10, n11, n12, -1 + n13, n14])/(-1 + n13) - 
   (n1*j[p4, 1 + n1, -1 + n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, -1 + n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, n12, 
      -1 + n13, n14])/(-1 + n13), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n11 == 1 || n7 == 0) -> 
  (n12*j[p4, n1, -1 + n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   (n8*j[p4, n1, -1 + n2, n3, n4, n5, n6, 1 + n7, 1 + n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n12*j[p4, n1, n2, -1 + n3, n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) - 
   (2*n12*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 1 + n12, 
      n13, n14])/(-1 + n11) - (n8*j[p4, n1, n2, n3, n4, n5, n6, n7, 1 + n8, 
      n9, n10, -1 + n11, n12, n13, n14])/(-1 + n11) - 
   (n12*j[p4, n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + j[p4, n1, n2, n3, n4, n5, n6, 1 + n7, 
    n8, n9, -1 + n10, n11, n12, n13, n14] + 
   ((-1 + d - n11 - n3 - n4 - 2*n7 - n8)*j[p4, n1, n2, n3, n4, n5, n6, 
      1 + n7, n8, n9, n10, -1 + n11, n12, n13, n14])/(-1 + n11) - 
   (n12*j[p4, n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n11) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, -1 + n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, -1 + n11, n12, n13, 
      n14])/(-1 + n11) - (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, 
      n10, -1 + n11, n12, n13, n14])/(-1 + n11) + 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, n12, 
      -1 + n13, n14])/(-1 + n11), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n10 == 1 || n7 == 0) -> 
  -((n6*j[p4, n1, -1 + n2, n3, n4, n5, 1 + n6, 1 + n7, n8, n9, -1 + n10, n11, 
       n12, n13, n14])/(-1 + n10)) - 
   (n6*j[p4, n1, n2, n3, -1 + n4, n5, 1 + n6, 1 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n6*j[p4, n1, n2, n3, n4, -1 + n5, 1 + n6, 1 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + ((-1 + d - n10 - n2 - n3 - n4 - 2*n7)*
     j[p4, n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, -1 + n10, n11, n12, n13, 
      n14])/(-1 + n10) + j[p4, n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, 
    -1 + n11, n12, n13, n14] + 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, 1 + n7, -1 + n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, -1 + n5, n6, 1 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, n13, 
      n14])/(-1 + n10) - (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, 
      -1 + n10, n11, n12, n13, n14])/(-1 + n10) + 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, 1 + n7, n8, n9, -1 + n10, n11, n12, 
      -1 + n13, n14])/(-1 + n10) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, n13, 
      n14])/(-1 + n10) + (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, 1 + n7, 
      -1 + n8, n9, -1 + n10, n11, n12, n13, n14])/(-1 + n10), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n14 == 1 || n5 == 0) -> 
  (n9*j[p4, n1, -1 + n2, n3, n4, 1 + n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4, n1, -1 + n2, n3, n4, 1 + n5, 1 + n6, n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - j[p4, n1, n2, -1 + n3, n4, 1 + n5, n6, n7, 
    n8, n9, n10, n11, n12, n13, n14] + j[p4, n1, n2, n3, -1 + n4, 1 + n5, n6, 
    n7, n8, n9, n10, n11, n12, n13, n14] + 
   (n9*j[p4, n1, n2, n3, -1 + n4, 1 + n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4, n1, n2, n3, -1 + n4, 1 + n5, 1 + n6, n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   ((1 + n5)*j[p4, n1, n2, n3, -1 + n4, 2 + n5, n6, n7, n8, n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) - (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 
      n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4, n1, n2, n3, n4, 1 + n5, n6, -1 + n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, -1 + n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, 
    n9, n10, n11, n12, -1 + n13, n14] + 
   ((-1 + n4 - n5)*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, 1 + n9, -1 + n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n9*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, 1 + n9, n10, -1 + n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4, n1, n2, n3, n4, 1 + n5, 1 + n6, n7, -1 + n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   ((-1 - n5)*j[p4, n1, n2, n3, n4, 2 + n5, n6, -1 + n7, n8, n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, 1 + n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n12 == 0 || n13 == 1) -> 
  (n8*j[p4, n1, -1 + n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n5*j[p4, n1, -1 + n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n3*j[p4, n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) - j[p4, n1, n2, -1 + n3, n4, n5, n6, n7, n8, 
    n9, n10, n11, 1 + n12, n13, n14] - 
   (n4*j[p4, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + j[p4, n1, n2, n3, n4, n5, n6, -1 + n7, n8, 
    n9, n10, n11, 1 + n12, n13, n14] - 
   (n8*j[p4, n1, n2, n3, n4, n5, n6, -1 + n7, 1 + n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + j[p4, n1, n2, n3, n4, n5, n6, n7, -1 + n8, 
    n9, n10, n11, 1 + n12, n13, n14] + 
   ((2*n2 - 2*n3)*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 
      1 + n12, -1 + n13, n14])/(-1 + n13) + 
   (n8*j[p4, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) - (n8*j[p4, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, 
      n10, n11, 1 + n12, -2 + n13, n14])/(-1 + n13) - 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, -1 + n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -2 + n13, n14])/(-1 + n13) + 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, -1 + n14])/(-1 + n13) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, -1 + n14])/(-1 + n13) + 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (2*n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, -1 + n13, n14])/(-1 + n13) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) + (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, 
      n10, n11, 1 + n12, -2 + n13, n14])/(-1 + n13) + 
   (n2*j[p4, n1, 1 + n2, -1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) - (2*n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, 
      n10, n11, 1 + n12, -2 + n13, n14])/(-1 + n13) + 
   (n1*j[p4, 1 + n1, -1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -2 + n13, n14])/(-1 + n13) + 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n11 == 1 || n9 == 0) -> 
  -j[p4, n1, -1 + n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
     n14] - (n7*j[p4, n1, -1 + n2, n3, n4, n5, n6, 1 + n7, n8, 1 + n9, n10, 
      -1 + n11, n12, n13, n14])/(-1 + n11) - 
   (n3*j[p4, n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n12*j[p4, n1, n2, -1 + n3, n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) - 
   (n12*j[p4, n1, n2, n3, -1 + n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) - j[p4, n1, n2, n3, -1 + n4, n5, n6, n7, 
    n8, 1 + n9, n10, n11, n12, n13, n14] - 
   (n8*j[p4, n1, n2, n3, -1 + n4, n5, n6, n7, 1 + n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n7*j[p4, n1, n2, n3, -1 + n4, n5, n6, 1 + n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n12*j[p4, n1, n2, n3, n4, -1 + n5, n6, n7, n8, 1 + n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + j[p4, n1, n2, n3, n4, -1 + n5, n6, n7, 
    n8, 1 + n9, n10, n11, n12, n13, n14] + 
   (n7*j[p4, n1, n2, n3, n4, -1 + n5, n6, 1 + n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n12*j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, 
    n8, 1 + n9, n10, n11, n12, n13, n14] + 
   (n8*j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, 1 + n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n12*j[p4, n1, n2, n3, n4, n5, n6, -1 + n7, n8, 1 + n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + j[p4, n1, n2, n3, n4, n5, n6, n7, 
    -1 + n8, 1 + n9, n10, n11, n12, n13, n14] + j[p4, n1, n2, n3, n4, n5, n6, 
    n7, n8, 1 + n9, -1 + n10, n11, n12, n13, n14] + 
   ((n12 - n3 - n4 + n8)*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, 
      -1 + n11, n12, n13, n14])/(-1 + n11) - 
   (n12*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n11) - 
   (n12*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n11) + 
   (n7*j[p4, n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n3*j[p4, n1, n2, 1 + n3, -1 + n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (2*n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, 1 + n9, n10, 
      -1 + n11, n12, n13, n14])/(-1 + n11) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, 
      -1 + n12, n13, n14])/(-1 + n11) + 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, n12, 
      -1 + n13, n14])/(-1 + n11) + 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, n12, 
      n13, -1 + n14])/(-1 + n11), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n10 == 1 || n9 == 0) -> 
  (n7*j[p4, n1, -1 + n2, n3, n4, n5, n6, 1 + n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n3*j[p4, n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n7*j[p4, n1, n2, n3, -1 + n4, n5, n6, 1 + n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n7*j[p4, n1, n2, n3, n4, -1 + n5, n6, 1 + n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, n8, 
    1 + n9, n10, n11, n12, n13, n14] + 
   ((-1 - d + n10 + n2 + n3 + n4 + 2*n6)*j[p4, n1, n2, n3, n4, n5, n6, n7, 
      n8, 1 + n9, -1 + n10, n11, n12, n13, n14])/(-1 + n10) - 
   (n7*j[p4, n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n3*j[p4, n1, n2, 1 + n3, -1 + n4, n5, n6, n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (2*n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, 1 + n9, -1 + n10, 
      n11, n12, n13, n14])/(-1 + n10) + 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, -1 + n10, n11, 
      -1 + n12, n13, n14])/(-1 + n10) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, -1 + n10, n11, n12, 
      -1 + n13, n14])/(-1 + n10) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, -1 + n10, n11, n12, 
      n13, -1 + n14])/(-1 + n10) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, -1 + n5, n6, n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n12 == 0 || n14 == 1) -> 
  -j[p4, n1, -1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
     n14] + (n6*j[p4, n1, -1 + n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, 
      1 + n12, n13, -1 + n14])/(-1 + n14) - 
   (n5*j[p4, n1, -1 + n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) - j[p4, n1, n2, -1 + n3, n4, n5, n6, n7, n8, 
    n9, n10, n11, 1 + n12, n13, n14] + 
   (n6*j[p4, n1, n2, -1 + n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n4*j[p4, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) + j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, n8, 
    n9, n10, n11, 1 + n12, n13, n14] + 
   (n9*j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) + j[p4, n1, n2, n3, n4, n5, n6, -1 + n7, n8, 
    n9, n10, n11, 1 + n12, n13, n14] + j[p4, n1, n2, n3, n4, n5, n6, n7, 
    -1 + n8, n9, n10, n11, 1 + n12, n13, n14] + j[p4, n1, n2, n3, n4, n5, n6, 
    n7, n8, n9, n10, n11, 1 + n12, -1 + n13, n14] + 
   ((1 - n14 + n6)*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 
      1 + n12, n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, -1 + n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, n11, 1 + n12, n13, 
      -2 + n14])/(-1 + n14) + 
   (n9*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, n11, 1 + n12, n13, 
      -1 + n14])/(-1 + n14) - (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, -1 + n7, 
      n8, n9, n10, n11, 1 + n12, n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) - (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 
      n9, n10, n11, 1 + n12, -1 + n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
      -2 + n14])/(-1 + n14) + (n5*j[p4, n1, n2, n3, n4, 1 + n5, -1 + n6, n7, 
      n8, n9, n10, n11, 1 + n12, n13, -1 + n14])/(-1 + n14) + 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, -1 + n14])/(-1 + n14) - 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
      -2 + n14])/(-1 + n14) + (n4*j[p4, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, 
      n8, n9, n10, n11, 1 + n12, n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
      -2 + n14])/(-1 + n14), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n13 == 1 || n5 == 0) -> 
  -((n8*j[p4, n1, -1 + n2, n3, n4, 1 + n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
       -1 + n13, n14])/(-1 + n13)) + 
   (n4*j[p4, n1, n2, -1 + n3, 1 + n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n8*j[p4, n1, n2, n3, -1 + n4, 1 + n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n8*j[p4, n1, n2, n3, n4, 1 + n5, -1 + n6, n7, 1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n8*j[p4, n1, n2, n3, n4, 1 + n5, n6, -1 + n7, 1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + ((-2 + n13 - n2 + n3 - n4 - n5 + n8)*
     j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) + j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, 
    n11, n12, n13, -1 + n14] - 
   (n8*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, 1 + n8, n9, n10, n11, -1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n8*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) + 
   ((1 + n5)*j[p4, n1, n2, n3, n4, 2 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) + 
   ((-1 - n5)*j[p4, n1, n2, n3, n4, 2 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n13) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n13) - 
   (n3*j[p4, n1, n2, 1 + n3, -1 + n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n3*j[p4, n1, n2, 1 + n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n13) - 
   (n2*j[p4, n1, 1 + n2, -1 + n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) + (n2*j[p4, n1, 1 + n2, n3, n4, 1 + n5, -1 + n6, n7, 
      n8, n9, n10, n11, n12, -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4, n1, 1 + n2, n3, n4, 1 + n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4, n1, 1 + n2, n3, n4, 1 + n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, -1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (2*n2*j[p4, n1, 1 + n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) - 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) + (n1*j[p4, 1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, 
      -1 + n9, n10, n11, n12, -1 + n13, n14])/(-1 + n13) + 
   (n1*j[p4, 1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) - 
   (n1*j[p4, 1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n11 == 1 || n12 == 0) -> 
  ((-1 - n12)*j[p4, n1, -1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      2 + n12, n13, n14])/(-1 + n11) - j[p4, n1, -1 + n2, n3, n4, n5, n6, n7, 
    n8, n9, n10, n11, 1 + n12, n13, n14] - 
   (n8*j[p4, n1, -1 + n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   (n7*j[p4, n1, n2, -1 + n3, n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   (n4*j[p4, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   ((-1 - n12)*j[p4, n1, n2, n3, -1 + n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      2 + n12, n13, n14])/(-1 + n11) - j[p4, n1, n2, n3, -1 + n4, n5, n6, n7, 
    n8, n9, n10, n11, 1 + n12, n13, n14] - 
   (n8*j[p4, n1, n2, n3, -1 + n4, n5, n6, n7, 1 + n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) - 
   (n7*j[p4, n1, n2, n3, -1 + n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   ((1 + n12)*j[p4, n1, n2, n3, n4, -1 + n5, n6, n7, n8, n9, n10, -1 + n11, 
      2 + n12, n13, n14])/(-1 + n11) + j[p4, n1, n2, n3, n4, -1 + n5, n6, n7, 
    n8, n9, n10, n11, 1 + n12, n13, n14] + 
   (n7*j[p4, n1, n2, n3, n4, -1 + n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   ((1 + n12)*j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, n8, n9, n10, -1 + n11, 
      2 + n12, n13, n14])/(-1 + n11) + j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, 
    n8, n9, n10, n11, 1 + n12, n13, n14] + 
   (n8*j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, 1 + n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   ((1 + n12)*j[p4, n1, n2, n3, n4, n5, n6, -1 + n7, n8, n9, n10, -1 + n11, 
      2 + n12, n13, n14])/(-1 + n11) + j[p4, n1, n2, n3, n4, n5, n6, -1 + n7, 
    n8, n9, n10, n11, 1 + n12, n13, n14] + 
   (n8*j[p4, n1, n2, n3, n4, n5, n6, -1 + n7, 1 + n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   ((1 + n12)*j[p4, n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, -1 + n11, 
      2 + n12, n13, n14])/(-1 + n11) + j[p4, n1, n2, n3, n4, n5, n6, n7, 
    -1 + n8, n9, n10, n11, 1 + n12, n13, n14] - j[p4, n1, n2, n3, n4, n5, n6, 
    n7, n8, -1 + n9, n10, n11, 1 + n12, n13, n14] + 
   ((-1 - n12 + n3 - n4 + n8)*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, 
      -1 + n11, 1 + n12, n13, n14])/(-1 + n11) + 
   ((-1 - n12)*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      2 + n12, n13, -1 + n14])/(-1 + n11) + j[p4, n1, n2, n3, n4, n5, n6, n7, 
    n8, n9, n10, n11, 1 + n12, n13, n14] - 
   (n8*j[p4, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, -1 + n11, n12, n13, 
      n14])/(-1 + n11) + (n8*j[p4, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, 
      n10, -1 + n11, 1 + n12, -1 + n13, n14])/(-1 + n11) - 
   (n7*j[p4, n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n11) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, -1 + n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n11) - 
   (n3*j[p4, n1, n2, 1 + n3, -1 + n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n11), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n10 == 1 || n12 == 0) -> 
  -j[p4, n1, -1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
     n14] - (n6*j[p4, n1, -1 + n2, n3, n4, n5, 1 + n6, n7, n8, n9, -1 + n10, 
      n11, 1 + n12, n13, n14])/(-1 + n10) - j[p4, n1, n2, -1 + n3, n4, n5, 
    n6, n7, n8, n9, n10, n11, 1 + n12, n13, n14] - 
   (n7*j[p4, n1, n2, -1 + n3, n4, n5, n6, 1 + n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) - 
   (n6*j[p4, n1, n2, -1 + n3, n4, n5, 1 + n6, n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) - 
   (n4*j[p4, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) + 
   (n7*j[p4, n1, n2, n3, -1 + n4, n5, n6, 1 + n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) - 
   (n7*j[p4, n1, n2, n3, n4, -1 + n5, n6, 1 + n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) + j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, 
    n8, n9, n10, n11, 1 + n12, n13, n14] + j[p4, n1, n2, n3, n4, n5, n6, 
    -1 + n7, n8, n9, n10, n11, 1 + n12, n13, n14] + 
   j[p4, n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, n13, 
    n14] - j[p4, n1, n2, n3, n4, n5, n6, n7, n8, -1 + n9, n10, n11, 1 + n12, 
    n13, n14] + ((-n2 - n3 + n4 + n6)*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 
      n9, -1 + n10, n11, 1 + n12, n13, n14])/(-1 + n10) + 
   j[p4, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, -1 + n13, 
    n14] + j[p4, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
    n14] + (n7*j[p4, n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, -1 + n10, n11, 
      1 + n12, -1 + n13, n14])/(-1 + n10) + 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, -1 + n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) + 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, -1 + n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) - 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, -1 + n10, n11, n12, n13, 
      n14])/(-1 + n10) + (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, 
      -1 + n10, n11, 1 + n12, -1 + n13, n14])/(-1 + n10) + 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, -1 + n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n10) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, -1 + n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n10) + 
   (n3*j[p4, n1, n2, 1 + n3, -1 + n4, n5, n6, n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n10) - 
   (n2*j[p4, n1, 1 + n2, -1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, -1 + n5, n6, n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) + 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, -1 + n6, n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) + 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, -1 + n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) + 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, -1 + n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, n13, 
      n14])/(-1 + n10) + (2*n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, 
      -1 + n10, n11, 1 + n12, -1 + n13, n14])/(-1 + n10), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n12 == 0 || n6 == 1) -> 
  -j[p4, n1, -1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
     n14] - j[p4, n1, n2, -1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
    n13, n14] - (n4*j[p4, n1, n2, -1 + n3, 1 + n4, n5, -1 + n6, n7, n8, n9, 
      n10, n11, 1 + n12, n13, n14])/(-1 + n6) + 
   ((-1 - d + 2*n14 + n4 + n5 + n6 + n9)*j[p4, n1, n2, n3, n4, n5, -1 + n6, 
      n7, n8, n9, n10, n11, 1 + n12, n13, n14])/(-1 + n6) + 
   (n9*j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n6) - 
   (n9*j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 1 + n12, 
      n13, n14])/(-1 + n6) + j[p4, n1, n2, n3, n4, n5, n6, -1 + n7, n8, n9, 
    n10, n11, 1 + n12, n13, n14] + j[p4, n1, n2, n3, n4, n5, n6, n7, -1 + n8, 
    n9, n10, n11, 1 + n12, n13, n14] + j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 
    n9, n10, n11, 1 + n12, -1 + n13, n14] + j[p4, n1, n2, n3, n4, n5, n6, n7, 
    n8, n9, n10, n11, 1 + n12, n13, -1 + n14] - 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, -1 + n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n6) + 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, -1 + n6, n7, n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n6) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n6), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n13 == 1 && n14 == 1 && n6 == 1 && n8 == 1 && 
     !(n12 == -1 || n12 == 0 || n3 == 1) -> 
  -((n7*j[p4, -1 + n1, -1 + n2, -1 + n3, n4, n5, 1, 1 + n7, 1, n9, 1, 1, 
       2 + n12, 1, 1])/(-1 + n3)) - j[p4, -1 + n1, -1 + n2, n3, n4, n5, 1, 
    n7, 1, n9, 1, 1, 2 + n12, 1, 1] - 
   (n7*j[p4, -1 + n1, n2, -2 + n3, n4, n5, 1, 1 + n7, 1, n9, 1, 1, 2 + n12, 
      1, 1])/(-1 + n3) + ((8 - 2*d + n1 + 2*n12 + n4 + n5 + 2*n7)*
     j[p4, -1 + n1, n2, -1 + n3, n4, n5, 1, n7, 1, n9, 1, 1, 2 + n12, 1, 1])/
    (-1 + n3) + j[p4, -1 + n1, n2, -1 + n3, n4, n5, 1, n7, 1, n9, 1, 2, 
     2 + n12, 1, 1]/(1 - n3) + 
   (n7*j[p4, -1 + n1, n2, -1 + n3, n4, n5, 1, 1 + n7, 0, n9, 1, 1, 2 + n12, 
      1, 1])/(-1 + n3) + (n7*j[p4, -1 + n1, n2, -1 + n3, n4, n5, 1, 1 + n7, 
      1, n9, 1, 1, 2 + n12, 0, 1])/(-1 + n3) + 
   (n5*j[p4, -1 + n1, n2, -1 + n3, n4, 1 + n5, 1, n7, 1, n9, 1, 1, 2 + n12, 
      0, 1])/(-1 + n3) - (n5*j[p4, -1 + n1, n2, -1 + n3, n4, 1 + n5, 1, n7, 
      1, n9, 1, 1, 2 + n12, 1, 0])/(-1 + n3) - 
   (n4*j[p4, -1 + n1, n2, -1 + n3, 1 + n4, n5, 0, n7, 1, n9, 1, 1, 2 + n12, 
      1, 1])/(-1 + n3) + (n4*j[p4, -1 + n1, n2, -1 + n3, 1 + n4, n5, 1, n7, 
      0, n9, 1, 1, 2 + n12, 1, 1])/(-1 + n3) + j[p4, -1 + n1, n2, n3, n4, n5, 
    1, -1 + n7, 1, n9, 1, 1, 2 + n12, 1, 1] + 
   2*j[p4, -1 + n1, n2, n3, n4, n5, 1, n7, 0, n9, 1, 1, 2 + n12, 1, 1] - 
   j[p4, -1 + n1, n2, n3, n4, n5, 1, n7, 1, n9, 1, 1, 1 + n12, 1, 1] + 
   j[p4, -1 + n1, n2, n3, n4, n5, 1, n7, 1, n9, 1, 1, 2 + n12, 0, 1] - 
   (n2*j[p4, -1 + n1, 1 + n2, -2 + n3, n4, n5, 1, n7, 1, n9, 1, 1, 2 + n12, 
      1, 1])/(-1 + n3) + (n2*j[p4, -1 + n1, 1 + n2, -1 + n3, n4, n5, 1, 
      -1 + n7, 1, n9, 1, 1, 2 + n12, 1, 1])/(-1 + n3) + 
   (n2*j[p4, -1 + n1, 1 + n2, -1 + n3, n4, n5, 1, n7, 0, n9, 1, 1, 2 + n12, 
      1, 1])/(-1 + n3) - (n2*j[p4, -1 + n1, 1 + n2, -1 + n3, n4, n5, 1, n7, 
      1, n9, 1, 1, 1 + n12, 1, 1])/(-1 + n3) + 
   (2*n2*j[p4, -1 + n1, 1 + n2, -1 + n3, n4, n5, 1, n7, 1, n9, 1, 1, 2 + n12, 
      0, 1])/(-1 + n3) - (n7*j[p4, n1, -1 + n2, -1 + n3, n4, n5, 1, 1 + n7, 
      1, n9, 1, 1, 1 + n12, 1, 1])/(-1 + n3) - j[p4, n1, -1 + n2, n3, n4, n5, 
    1, n7, 1, n9, 1, 1, 1 + n12, 1, 1] + 
   ((1 + n12)*j[p4, n1, n2, -1 + n3, n4, n5, 1, n7, 0, n9, 1, 1, 2 + n12, 1, 
      1])/(-1 + n3) + j[p4, n1, n2, -1 + n3, n4, n5, 1, n7, 0, n9, 1, 2, 
     1 + n12, 1, 1]/(-1 + n3) + ((4 - d + n12 + n4 + n7)*
     j[p4, n1, n2, -1 + n3, n4, n5, 1, n7, 1, n9, 1, 1, 1 + n12, 1, 1])/
    (-1 + n3) + ((-2 + n1 - n12)*j[p4, n1, n2, -1 + n3, n4, n5, 1, n7, 1, n9, 
      1, 1, 2 + n12, 0, 1])/(-1 + n3) + 
   ((1 - n1)*j[p4, n1, n2, -1 + n3, n4, n5, 1, n7, 1, n9, 1, 1, 2 + n12, 1, 
      1])/(-1 + n3) + (n7*j[p4, n1, n2, -1 + n3, n4, n5, 1, 1 + n7, 0, n9, 1, 
      1, 1 + n12, 1, 1])/(-1 + n3) - 
   (n4*j[p4, n1, n2, -1 + n3, 1 + n4, n5, 0, n7, 1, n9, 1, 1, 1 + n12, 1, 1])/
    (-1 + n3) + (n4*j[p4, n1, n2, -1 + n3, 1 + n4, n5, 1, n7, 0, n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n3) + j[p4, n1, n2, n3, n4, n5, 1, -1 + n7, 1, 
    n9, 1, 1, 1 + n12, 1, 1] + 2*j[p4, n1, n2, n3, n4, n5, 1, n7, 0, n9, 1, 
     1, 1 + n12, 1, 1] + j[p4, n1, n2, n3, n4, n5, 1, n7, 1, n9, 1, 1, 
    1 + n12, 0, 1], j[p4, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?Positive, (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, 
    (n7_)?NonPositive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n12 == 0 && n2 == 0 && n4 == 0 && n5 == 0 && n7 == 0 && 
    n9 == 0 && n13 != 1 -> ((-2*n11 + d*n11 - 2*n11^2)*
    j[p4, 0, 0, n3, 0, 0, n6, 0, n8, 0, n10, 1 + n11, 0, -1 + n13, n14])/
   ((d - 2*n13)*(-1 + n13)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n12 == 0 && n14 == 1 && n2 == 0 && n5 == 0 && n7 == 0 && 
    n9 == 0 &&  !(n10 == 1 || n6 == 1) -> 
  -((n4*j[p4, 0, 0, -1 + n3, 1 + n4, 0, -1 + n6, 0, n8, 0, n10, n11, 0, n13, 
       1])/(-1 + n6)) + ((1 - d + n4 + n6)*j[p4, 0, 0, n3, n4, 0, -1 + n6, 0, 
      n8, 0, n10, n11, 0, n13, 1])/(-1 + n6) + 
   ((1 - 2*d + n10 + n3 + n4 + 2*n6)*j[p4, 0, 0, n3, n4, 0, n6, 0, n8, 0, 
      -1 + n10, n11, 0, n13, 1])/(-1 + n10) + j[p4, 0, 0, n3, n4, 0, n6, 0, 
    n8, 0, n10, n11, 0, n13, 0] + 
   ((-n4 - n3*n4 + n4*n6)*j[p4, 0, 0, n3, 1 + n4, 0, -1 + n6, 0, n8, 0, 
      -1 + n10, n11, 0, n13, 1])/((-1 + n10)*(-1 + n6)) + 
   (n4*j[p4, 0, 0, n3, 1 + n4, 0, -1 + n6, 0, n8, 0, n10, n11, 0, n13, 0])/
    (-1 + n6) - (n4*j[p4, 0, 0, n3, 1 + n4, 0, n6, 0, -1 + n8, 0, -1 + n10, 
      n11, 0, n13, 1])/(-1 + n10) + ((n3 - d*n3 + n3*n4 + n3*n6)*
     j[p4, 0, 0, 1 + n3, n4, 0, -1 + n6, 0, n8, 0, -1 + n10, n11, 0, n13, 1])/
    ((-1 + n10)*(-1 + n6)) - (n3*j[p4, 0, 0, 1 + n3, n4, 0, n6, 0, -1 + n8, 
      0, -1 + n10, n11, 0, n13, 1])/(-1 + n10) + 
   (n3*j[p4, 0, 0, 1 + n3, n4, 0, n6, 0, n8, 0, -1 + n10, n11, 0, n13, 0])/
    (-1 + n10) + (n3*n4*j[p4, 0, 0, 1 + n3, 1 + n4, 0, -1 + n6, 0, n8, 0, 
      -1 + n10, n11, 0, n13, 0])/((-1 + n10)*(-1 + n6)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && n7 == 0 && 
    n9 == 0 &&  !(n10 == 1 || n6 == 1) -> 
  -((n4*j[p4, 0, 0, -1 + n3, 1 + n4, n5, -1 + n6, 0, n8, 0, n10, n11, 0, 1, 
       1])/(-1 + n6)) + ((1 - d + n4 + n5 + n6)*j[p4, 0, 0, n3, n4, n5, 
      -1 + n6, 0, n8, 0, n10, n11, 0, 1, 1])/(-1 + n6) + 
   ((1 - 2*d + n10 + n3 + n4 + n5 + 2*n6)*j[p4, 0, 0, n3, n4, n5, n6, 0, n8, 
      0, -1 + n10, n11, 0, 1, 1])/(-1 + n10) + j[p4, 0, 0, n3, n4, n5, n6, 0, 
    n8, 0, n10, n11, 0, 1, 0] - 
   (n5*j[p4, 0, 0, n3, n4, 1 + n5, -1 + n6, 0, n8, 0, n10, n11, 0, 0, 1])/
    (-1 + n6) + (n5*j[p4, 0, 0, n3, n4, 1 + n5, -1 + n6, 0, n8, 0, n10, n11, 
      0, 1, 0])/(-1 + n6) - (n5*j[p4, 0, 0, n3, n4, 1 + n5, n6, 0, n8, 0, 
      -1 + n10, n11, 0, 0, 1])/(-1 + n10) + 
   (n5*j[p4, 0, 0, n3, n4, 1 + n5, n6, 0, n8, 0, -1 + n10, n11, 0, 1, 0])/
    (-1 + n10) + ((-n4 - n3*n4 + n4*n6)*j[p4, 0, 0, n3, 1 + n4, n5, -1 + n6, 
      0, n8, 0, -1 + n10, n11, 0, 1, 1])/((-1 + n10)*(-1 + n6)) + 
   (n4*j[p4, 0, 0, n3, 1 + n4, n5, -1 + n6, 0, n8, 0, n10, n11, 0, 1, 0])/
    (-1 + n6) - (n4*j[p4, 0, 0, n3, 1 + n4, n5, n6, 0, -1 + n8, 0, -1 + n10, 
      n11, 0, 1, 1])/(-1 + n10) + ((n3 - d*n3 + n3*n4 + n3*n5 + n3*n6)*
     j[p4, 0, 0, 1 + n3, n4, n5, -1 + n6, 0, n8, 0, -1 + n10, n11, 0, 1, 1])/
    ((-1 + n10)*(-1 + n6)) - (n3*j[p4, 0, 0, 1 + n3, n4, n5, n6, 0, -1 + n8, 
      0, -1 + n10, n11, 0, 1, 1])/(-1 + n10) + 
   (n3*j[p4, 0, 0, 1 + n3, n4, n5, n6, 0, n8, 0, -1 + n10, n11, 0, 1, 0])/
    (-1 + n10) - (n3*n5*j[p4, 0, 0, 1 + n3, n4, 1 + n5, -1 + n6, 0, n8, 0, 
      -1 + n10, n11, 0, 0, 1])/((-1 + n10)*(-1 + n6)) + 
   (n3*n5*j[p4, 0, 0, 1 + n3, n4, 1 + n5, -1 + n6, 0, n8, 0, -1 + n10, n11, 
      0, 1, 0])/((-1 + n10)*(-1 + n6)) + 
   (n3*n4*j[p4, 0, 0, 1 + n3, 1 + n4, n5, -1 + n6, 0, n8, 0, -1 + n10, n11, 
      0, 1, 0])/((-1 + n10)*(-1 + n6)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n4 == 0 && n5 == 0 && n7 == 0 && 
    n9 == 0 &&  !(n13 == 1 || n14 == 1 || n2 == 0) -> 
  -((n8*j[p4, 0, n2, n3, 0, 0, n6, 0, 1 + n8, 0, 1, n11, 0, -1 + n13, n14])/
     (-1 + n13)) + (n6*j[p4, 0, n2, n3, 0, 0, 1 + n6, 0, n8, 0, 1, n11, 0, 
      n13, -1 + n14])/(-1 + n14) + 
   (n3*j[p4, 0, n2, 1 + n3, 0, 0, n6, 0, n8, 0, 1, n11, 0, -1 + n13, n14])/
    (-1 + n13) + (n6*j[p4, 0, 1 + n2, -1 + n3, 0, 0, 1 + n6, 0, n8, 0, 1, 
      n11, 0, n13, -1 + n14])/(-1 + n14) + j[p4, 0, 1 + n2, n3, 0, 0, 
    -1 + n6, 0, n8, 0, 1, n11, 0, n13, n14] + 
   (n8*j[p4, 0, 1 + n2, n3, 0, 0, n6, -1, 1 + n8, 0, 1, n11, 0, -1 + n13, 
      n14])/(-1 + n13) + ((-3 + n13 - 2*n2 + 2*n3)*j[p4, 0, 1 + n2, n3, 0, 0, 
      n6, 0, n8, 0, 1, n11, 0, -1 + n13, n14])/(-1 + n13) + 
   ((1 - n14 + n6)*j[p4, 0, 1 + n2, n3, 0, 0, n6, 0, n8, 0, 1, n11, 0, n13, 
      -1 + n14])/(-1 + n14) - (n8*j[p4, 0, 1 + n2, n3, 0, 0, n6, 0, 1 + n8, 
      0, 1, n11, -1, -1 + n13, n14])/(-1 + n13) + 
   (n8*j[p4, 0, 1 + n2, n3, 0, 0, n6, 0, 1 + n8, 0, 1, n11, 0, -2 + n13, 
      n14])/(-1 + n13) - (n6*j[p4, 0, 1 + n2, n3, 0, 0, 1 + n6, -1, n8, 0, 1, 
      n11, 0, n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4, 0, 1 + n2, n3, 0, 0, 1 + n6, 0, -1 + n8, 0, 1, n11, 0, n13, 
      -1 + n14])/(-1 + n14) + (n6*j[p4, 0, 1 + n2, n3, 0, 0, 1 + n6, 0, n8, 
      0, 1, n11, -1, n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4, 0, 1 + n2, n3, 0, 0, 1 + n6, 0, n8, 0, 1, n11, 0, -1 + n13, 
      -1 + n14])/(-1 + n14) - (n6*j[p4, 0, 1 + n2, n3, 0, 0, 1 + n6, 0, n8, 
      0, 1, n11, 0, n13, -2 + n14])/(-1 + n14) - 
   (n3*j[p4, 0, 1 + n2, 1 + n3, 0, 0, n6, -1, n8, 0, 1, n11, 0, -1 + n13, 
      n14])/(-1 + n13) - (2*n3*j[p4, 0, 1 + n2, 1 + n3, 0, 0, n6, 0, -1 + n8, 
      0, 1, n11, 0, -1 + n13, n14])/(-1 + n13) + 
   (n3*j[p4, 0, 1 + n2, 1 + n3, 0, 0, n6, 0, n8, 0, 1, n11, -1, -1 + n13, 
      n14])/(-1 + n13) - (n3*j[p4, 0, 1 + n2, 1 + n3, 0, 0, n6, 0, n8, 0, 1, 
      n11, 0, -2 + n13, n14])/(-1 + n13) + 
   ((-1 - n2)*j[p4, 0, 2 + n2, -1 + n3, 0, 0, n6, 0, n8, 0, 1, n11, 0, 
      -1 + n13, n14])/(-1 + n13) + 
   ((1 + n2)*j[p4, 0, 2 + n2, n3, 0, 0, n6, -1, n8, 0, 1, n11, 0, -1 + n13, 
      n14])/(-1 + n13) + ((1 + n2)*j[p4, 0, 2 + n2, n3, 0, 0, n6, 0, -1 + n8, 
      0, 1, n11, 0, -1 + n13, n14])/(-1 + n13) + 
   ((-1 - n2)*j[p4, 0, 2 + n2, n3, 0, 0, n6, 0, n8, 0, 1, n11, -1, -1 + n13, 
      n14])/(-1 + n13) + ((2 + 2*n2)*j[p4, 0, 2 + n2, n3, 0, 0, n6, 0, n8, 0, 
      1, n11, 0, -2 + n13, n14])/(-1 + n13), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n14 == 1 && n5 == 0 && n7 == 0 && 
    n9 == 0 &&  !(n3 == 1 || n4 == 0 || n6 == 1) -> 
  ((1 + n4)*j[p4, -1, n2, -1 + n3, 2 + n4, 0, -1 + n6, 0, n8, 0, 2, n11, 0, 
      n13, 1])/(2*(-1 + n3)*(-1 + n6)) - 
   (n2*j[p4, -1, 1 + n2, -1 + n3, 1 + n4, 0, -1 + n6, 0, n8, 0, 2, n11, 0, 
      n13, 1])/(2*(-1 + n3)*(-1 + n6)) + 
   ((-1 - n4)*j[p4, 0, -1 + n2, -1 + n3, 2 + n4, 0, -1 + n6, 0, n8, 0, 2, 
      n11, 0, n13, 1])/(2*(-1 + n3)*(-1 + n6)) + 
   ((4 - d + n2)*j[p4, 0, n2, -1 + n3, 1 + n4, 0, -1 + n6, 0, n8, 0, 2, n11, 
      0, n13, 1])/(2*(-1 + n3)*(-1 + n6)) + 
   ((-1 + d - n2 - n4 - 2*n6)*j[p4, 0, n2, -1 + n3, 1 + n4, 0, n6, 0, n8, 0, 
      1, n11, 0, n13, 1])/(2*(-1 + n3)) + 
   ((1 + n4)*j[p4, 0, n2, -1 + n3, 2 + n4, 0, -2 + n6, 0, n8, 0, 2, n11, 0, 
      n13, 1])/(2*(-1 + n3)*(-1 + n6)) + 
   ((1 + n4)*j[p4, 0, n2, -1 + n3, 2 + n4, 0, -1 + n6, -1, n8, 0, 2, n11, 0, 
      n13, 1])/(2*(-1 + n3)*(-1 + n6)) + 
   ((-1 - n4)*j[p4, 0, n2, -1 + n3, 2 + n4, 0, -1 + n6, 0, n8, -1, 2, n11, 0, 
      n13, 1])/(2*(-1 + n3)*(-1 + n6)) + 
   ((1 + n3 + n4 + n3*n4 - n6 - n4*n6)*j[p4, 0, n2, -1 + n3, 2 + n4, 0, 
      -1 + n6, 0, n8, 0, 1, n11, 0, n13, 1])/(2*(-1 + n3)*(-1 + n6)) + 
   ((-1 - n4)*j[p4, 0, n2, -1 + n3, 2 + n4, 0, -1 + n6, 0, n8, 0, 2, 
      -1 + n11, 0, n13, 1])/(2*(-1 + n3)*(-1 + n6)) + 
   ((1 + n4)*j[p4, 0, n2, -1 + n3, 2 + n4, 0, n6, 0, -1 + n8, 0, 1, n11, 0, 
      n13, 1])/(2*(-1 + n3)) + ((-5 + 3*d - n2 - 2*n3 - 3*n4 - 2*n6)*
     j[p4, 0, n2, n3, 1 + n4, 0, -1 + n6, 0, n8, 0, 1, n11, 0, n13, 1])/
    (2*(-1 + n6)) + j[p4, 0, n2, n3, 1 + n4, 0, n6, 0, -1 + n8, 0, 1, n11, 0, 
    n13, 1] + ((-1 - n4)*j[p4, 0, n2, n3, 2 + n4, 0, -1 + n6, 0, n8, 0, 1, 
      n11, 0, n13, 0])/(2*(-1 + n6)) + 
   (n2*j[p4, 0, 1 + n2, -1 + n3, 1 + n4, -1, n6, 0, n8, 0, 1, n11, 0, n13, 
      1])/(2*(-1 + n3)) + ((3*n2 - n2*n3 - n2*n6)*j[p4, 0, 1 + n2, -1 + n3, 
      1 + n4, 0, -1 + n6, 0, n8, 0, 1, n11, 0, n13, 1])/
    (2*(-1 + n3)*(-1 + n6)) + (n2*j[p4, 0, 1 + n2, n3, 1 + n4, 0, -1 + n6, 0, 
      -1 + n8, 0, 1, n11, 0, n13, 1])/(-1 + n6) - 
   (n2*j[p4, 0, 1 + n2, n3, 1 + n4, 0, -1 + n6, 0, n8, 0, 1, n11, -1, n13, 
      1])/(2*(-1 + n6)) + (n2*j[p4, 0, 1 + n2, n3, 1 + n4, 0, -1 + n6, 0, n8, 
      0, 1, n11, 0, -1 + n13, 1])/(-1 + n6), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n7 == 0 && 
    n9 == 0 &&  !(n2 == 0 || n4 == 0 || n6 == 1) -> 
  j[p4, 0, 1 + n2, -1 + n3, 1 + n4, -1 + n5, -1 + n6, 0, n8, 0, 1, n11, 0, 1, 
     2]/(-1 + n6) + j[p4, 0, 1 + n2, n3, n4, n5, -1 + n6, 0, n8, 0, 1, n11, 
     0, 0, 2]/(1 - n6) + ((1 - d + n4 + n5 + n6)*j[p4, 0, 1 + n2, n3, n4, n5, 
      -1 + n6, 0, n8, 0, 1, n11, 0, 1, 1])/(-1 + n6) + 
   ((-1 + d - n4 - n5 - n6)*j[p4, 0, 1 + n2, n3, 1 + n4, -1 + n5, -1 + n6, 0, 
      n8, 0, 1, n11, 0, 1, 1])/(-1 + n6) + j[p4, 0, 1 + n2, n3, 1 + n4, 
    -1 + n5, n6, 0, -1 + n8, 0, 1, n11, 0, 1, 1] + 
   ((-1 - n4 + n5)*j[p4, 0, 1 + n2, n3, 1 + n4, n5, -1 + n6, -1, n8, 0, 1, 
      n11, 0, 1, 1])/(-1 + n6), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n9 == 0 &&  !(n7 == -1 || n7 == 0 || n8 == 1) -> 
  -j[p4, 0, -1 + n2, n3, n4, -1 + n5, n6, 2 + n7, n8, 0, 1, 1, 0, 1, 1] + 
   j[p4, 0, -1 + n2, n3, n4, n5, n6, 1 + n7, n8, 0, 1, 1, 0, 1, 1] + 
   j[p4, 0, n2, -1 + n3, n4, -1 + n5, n6, 2 + n7, -1 + n8, 0, 1, 1, 0, 2, 1]/
    (-1 + n8) + j[p4, 0, n2, n3, -1 + n4, n5, n6, 1 + n7, n8, 0, 1, 1, 0, 1, 
    1] + ((-1 + n5)*j[p4, 0, n2, n3, -1 + n4, n5, n6, 2 + n7, -1 + n8, 0, 1, 
      1, 0, 1, 1])/(-1 + n8) + j[p4, 0, n2, n3, n4, -1 + n5, n6, 1 + n7, n8, 
    0, 1, 1, 0, 1, 1] + ((-1 - n2 + n3 + n4 - n5 + n8)*
     j[p4, 0, n2, n3, n4, -1 + n5, n6, 2 + n7, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (-1 + n8) - j[p4, 0, n2, n3, n4, n5, -1 + n6, 1 + n7, n8, 0, 1, 1, 0, 1, 
    1] + ((2 - d + n2 + n4 + n5)*j[p4, 0, n2, n3, n4, n5, n6, 1 + n7, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) + 
   j[p4, 0, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, 0, 1, 1, 0, 2, 0]/(1 - n8) - 
   (n4*j[p4, 0, n2, n3, 1 + n4, -2 + n5, n6, 2 + n7, -1 + n8, 0, 1, 1, 0, 1, 
      1])/(-1 + n8) + (2*n4*j[p4, 0, n2, n3, 1 + n4, -1 + n5, n6, 1 + n7, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) - 
   (n4*j[p4, 0, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (-1 + n8) + (n3*j[p4, 0, n2, 1 + n3, -1 + n4, n5, n6, 1 + n7, -1 + n8, 0, 
      1, 1, 0, 1, 1])/(-1 + n8) + 
   (n3*j[p4, 0, n2, 1 + n3, n4, -1 + n5, n6, 1 + n7, -1 + n8, 0, 1, 1, 0, 1, 
      1])/(-1 + n8) - (n3*j[p4, 0, n2, 1 + n3, n4, -1 + n5, n6, 2 + n7, 
      -1 + n8, 0, 1, 1, 0, 0, 1])/(-1 + n8) - 
   (n3*j[p4, 0, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (-1 + n8) + (n3*j[p4, 0, n2, 1 + n3, n4, n5, n6, 1 + n7, -1 + n8, 0, 1, 
      1, 0, 0, 1])/(-1 + n8) - 
   (n3*j[p4, 0, n2, 1 + n3, n4, n5, n6, 1 + n7, -1 + n8, 0, 1, 1, 0, 1, 0])/
    (-1 + n8) + (n2*j[p4, 0, 1 + n2, n3, n4, -1 + n5, n6, 2 + n7, -2 + n8, 0, 
      1, 1, 0, 1, 1])/(-1 + n8) - 
   (n2*j[p4, 0, 1 + n2, n3, n4, n5, -1 + n6, 1 + n7, -1 + n8, 0, 1, 1, 0, 1, 
      1])/(-1 + n8), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?Positive, (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, 
    (n7_)?NonPositive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n8 == 1 && 
    n9 == 0 &&  !(n2 == 0 || n4 == 0 || n6 == 1) -> 
  j[p4, n1, 1 + n2, -1 + n3, 1 + n4, -1 + n5, -1 + n6, n7, 1, 0, 1, 1, 0, 1, 
     2]/(-1 + n6) + j[p4, n1, 1 + n2, n3, n4, n5, -1 + n6, n7, 1, 0, 1, 1, 0, 
     0, 2]/(1 - n6) + ((1 - d + n4 + n5 + n6)*j[p4, n1, 1 + n2, n3, n4, n5, 
      -1 + n6, n7, 1, 0, 1, 1, 0, 1, 1])/(-1 + n6) + 
   ((-1 + d - n4 - n5 - n6)*j[p4, n1, 1 + n2, n3, 1 + n4, -1 + n5, -1 + n6, 
      n7, 1, 0, 1, 1, 0, 1, 1])/(-1 + n6) + j[p4, n1, 1 + n2, n3, 1 + n4, 
    -1 + n5, n6, n7, 0, 0, 1, 1, 0, 1, 1] + 
   ((-1 - n4 + n5)*j[p4, n1, 1 + n2, n3, 1 + n4, n5, -1 + n6, -1 + n7, 1, 0, 
      1, 1, 0, 1, 1])/(-1 + n6), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n6 == 1 &&  !(n7 == -1 || n7 == 0 || n8 == 1) -> 
  -j[p4, 0, -1 + n2, n3, n4, -1 + n5, 1, 2 + n7, n8, n9, 1, 1, 0, 1, 1] + 
   j[p4, 0, -1 + n2, n3, n4, n5, 1, 1 + n7, n8, n9, 1, 1, 0, 1, 1] + 
   j[p4, 0, n2, -1 + n3, n4, -1 + n5, 1, 2 + n7, -1 + n8, n9, 1, 1, 0, 2, 1]/
    (-1 + n8) + j[p4, 0, n2, n3, -1 + n4, n5, 1, 1 + n7, n8, n9, 1, 1, 0, 1, 
    1] + ((-1 + n5)*j[p4, 0, n2, n3, -1 + n4, n5, 1, 2 + n7, -1 + n8, n9, 1, 
      1, 0, 1, 1])/(-1 + n8) + j[p4, 0, n2, n3, n4, -1 + n5, 1, 1 + n7, n8, 
    n9, 1, 1, 0, 1, 1] + ((-1 - n2 + n3 + n4 - n5 + n8)*
     j[p4, 0, n2, n3, n4, -1 + n5, 1, 2 + n7, -1 + n8, n9, 1, 1, 0, 1, 1])/
    (-1 + n8) - j[p4, 0, n2, n3, n4, n5, 0, 1 + n7, n8, n9, 1, 1, 0, 1, 1] + 
   ((2 - d + n2 + n4 + n5)*j[p4, 0, n2, n3, n4, n5, 1, 1 + n7, -1 + n8, n9, 
      1, 1, 0, 1, 1])/(-1 + n8) + j[p4, 0, n2, n3, n4, n5, 1, 1 + n7, 
     -1 + n8, n9, 1, 1, 0, 2, 0]/(1 - n8) - 
   (n4*j[p4, 0, n2, n3, 1 + n4, -2 + n5, 1, 2 + n7, -1 + n8, n9, 1, 1, 0, 1, 
      1])/(-1 + n8) + (2*n4*j[p4, 0, n2, n3, 1 + n4, -1 + n5, 1, 1 + n7, 
      -1 + n8, n9, 1, 1, 0, 1, 1])/(-1 + n8) - 
   (n4*j[p4, 0, n2, n3, 1 + n4, n5, 1, n7, -1 + n8, n9, 1, 1, 0, 1, 1])/
    (-1 + n8) + (n3*j[p4, 0, n2, 1 + n3, -1 + n4, n5, 1, 1 + n7, -1 + n8, n9, 
      1, 1, 0, 1, 1])/(-1 + n8) + 
   (n3*j[p4, 0, n2, 1 + n3, n4, -1 + n5, 1, 1 + n7, -1 + n8, n9, 1, 1, 0, 1, 
      1])/(-1 + n8) - (n3*j[p4, 0, n2, 1 + n3, n4, -1 + n5, 1, 2 + n7, 
      -1 + n8, n9, 1, 1, 0, 0, 1])/(-1 + n8) - 
   (n3*j[p4, 0, n2, 1 + n3, n4, n5, 1, n7, -1 + n8, n9, 1, 1, 0, 1, 1])/
    (-1 + n8) + (n3*j[p4, 0, n2, 1 + n3, n4, n5, 1, 1 + n7, -1 + n8, n9, 1, 
      1, 0, 0, 1])/(-1 + n8) - 
   (n3*j[p4, 0, n2, 1 + n3, n4, n5, 1, 1 + n7, -1 + n8, n9, 1, 1, 0, 1, 0])/
    (-1 + n8) + (n2*j[p4, 0, 1 + n2, n3, n4, -1 + n5, 1, 2 + n7, -2 + n8, n9, 
      1, 1, 0, 1, 1])/(-1 + n8) - 
   (n2*j[p4, 0, 1 + n2, n3, n4, n5, 0, 1 + n7, -1 + n8, n9, 1, 1, 0, 1, 1])/
    (-1 + n8), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == -1 && n13 == 1 && n14 == 1 && n6 == 1 && 
    n8 == 1 &&  !(n2 == 0 || n3 == 1) -> 
  -((n7*j[p4, -1 + n1, n2, -1 + n3, n4, n5, 1, 1 + n7, 1, n9, 1, 1, 0, 1, 1])/
     (-1 + n3)) - j[p4, -1 + n1, n2, n3, n4, n5, 1, n7, 1, n9, 1, 1, 0, 1, 
    1] - (n7*j[p4, -1 + n1, 1 + n2, -2 + n3, n4, n5, 1, 1 + n7, 1, n9, 1, 1, 
      0, 1, 1])/(-1 + n3) + (n4*j[p4, -1 + n1, 1 + n2, -2 + n3, 1 + n4, n5, 
      1, n7, 1, n9, 1, 1, 0, 1, 1])/(-1 + n3) + 
   ((5 - 3*d + 2*n1 + n3 + n4 + 2*n5 + 2*n7)*j[p4, -1 + n1, 1 + n2, -1 + n3, 
      n4, n5, 1, n7, 1, n9, 1, 1, 0, 1, 1])/(-1 + n3) + 
   j[p4, -1 + n1, 1 + n2, -1 + n3, n4, n5, 1, n7, 1, n9, 1, 2, 0, 1, 1]/
    (1 - n3) + j[p4, -1 + n1, 1 + n2, -1 + n3, n4, n5, 1, n7, 2, n9, 1, 1, 0, 
     0, 1]/(-1 + n3) + (n7*j[p4, -1 + n1, 1 + n2, -1 + n3, n4, n5, 1, 1 + n7, 
      0, n9, 1, 1, 0, 1, 1])/(-1 + n3) + 
   (n7*j[p4, -1 + n1, 1 + n2, -1 + n3, n4, n5, 1, 1 + n7, 1, n9, 1, 1, 0, 0, 
      1])/(-1 + n3) + (2*n5*j[p4, -1 + n1, 1 + n2, -1 + n3, n4, 1 + n5, 1, 
      n7, 1, n9, 1, 1, 0, 0, 1])/(-1 + n3) - 
   (2*n5*j[p4, -1 + n1, 1 + n2, -1 + n3, n4, 1 + n5, 1, n7, 1, n9, 1, 1, 0, 
      1, 0])/(-1 + n3) + (n4*j[p4, -1 + n1, 1 + n2, -1 + n3, 1 + n4, -1 + n5, 
      1, n7, 1, n9, 1, 1, 0, 1, 1])/(-1 + n3) - 
   (n4*j[p4, -1 + n1, 1 + n2, -1 + n3, 1 + n4, n5, 0, n7, 1, n9, 1, 1, 0, 1, 
      1])/(-1 + n3) - (n4*j[p4, -1 + n1, 1 + n2, -1 + n3, 1 + n4, n5, 1, 
      -1 + n7, 1, n9, 1, 1, 0, 1, 1])/(-1 + n3) + 
   (n4*j[p4, -1 + n1, 1 + n2, -1 + n3, 1 + n4, n5, 1, n7, 0, n9, 1, 1, 0, 1, 
      1])/(-1 + n3) + (n4*j[p4, -1 + n1, 1 + n2, -1 + n3, 1 + n4, n5, 1, n7, 
      1, n9, 1, 1, -1, 1, 1])/(-1 + n3) - 
   (n4*j[p4, -1 + n1, 1 + n2, -1 + n3, 1 + n4, n5, 1, n7, 1, n9, 1, 1, 0, 1, 
      0])/(-1 + n3) + 2*j[p4, -1 + n1, 1 + n2, n3, n4, n5, 1, n7, 0, n9, 1, 
     1, 0, 1, 1] + 2*j[p4, -1 + n1, 1 + n2, n3, n4, n5, 1, n7, 1, n9, 1, 1, 
     0, 0, 1] + ((-2 - 2*n2)*j[p4, -1 + n1, 2 + n2, -2 + n3, n4, n5, 1, n7, 
      1, n9, 1, 1, 0, 1, 1])/(-1 + n3) + 
   ((2 + 2*n2)*j[p4, -1 + n1, 2 + n2, -1 + n3, n4, n5, 1, -1 + n7, 1, n9, 1, 
      1, 0, 1, 1])/(-1 + n3) + 
   ((2 + 2*n2)*j[p4, -1 + n1, 2 + n2, -1 + n3, n4, n5, 1, n7, 0, n9, 1, 1, 0, 
      1, 1])/(-1 + n3) + ((-2 - 2*n2)*j[p4, -1 + n1, 2 + n2, -1 + n3, n4, n5, 
      1, n7, 1, n9, 1, 1, -1, 1, 1])/(-1 + n3) + 
   ((4 + 4*n2)*j[p4, -1 + n1, 2 + n2, -1 + n3, n4, n5, 1, n7, 1, n9, 1, 1, 0, 
      0, 1])/(-1 + n3) - (n7*j[p4, n1, n2, -1 + n3, n4, n5, 1, 1 + n7, 1, n9, 
      1, 1, -1, 1, 1])/(-1 + n3) - 
   (n4*j[p4, n1, n2, -1 + n3, 1 + n4, n5, 1, n7, 1, n9, 1, 1, -1, 1, 1])/
    (-1 + n3) + j[p4, n1, 1 + n2, -1 + n3, n4, n5, 1, n7, 0, n9, 1, 1, 0, 1, 
     1]/(1 - n3) + j[p4, n1, 1 + n2, -1 + n3, n4, n5, 1, n7, 0, n9, 1, 2, -1, 
     1, 1]/(-1 + n3) + j[p4, n1, 1 + n2, -1 + n3, n4, n5, 1, n7, 1, n9, 1, 0, 
     0, 1, 1]/(-1 + n3) + ((-1 + 2*n1)*j[p4, n1, 1 + n2, -1 + n3, n4, n5, 1, 
      n7, 1, n9, 1, 1, 0, 0, 1])/(-1 + n3) + 
   ((1 - 2*n1)*j[p4, n1, 1 + n2, -1 + n3, n4, n5, 1, n7, 1, n9, 1, 1, 0, 1, 
      1])/(-1 + n3) + j[p4, n1, 1 + n2, -1 + n3, n4, n5, 1, n7, 2, n9, 1, 0, 
     -1, 1, 1]/(1 - n3) + (n7*j[p4, n1, 1 + n2, -1 + n3, n4, n5, 1, 1 + n7, 
      0, n9, 1, 1, -1, 1, 1])/(-1 + n3) + 
   (n7*j[p4, n1, 1 + n2, -1 + n3, n4, n5, 1, 1 + n7, 1, n9, 0, 1, -1, 1, 1])/
    (-1 + n3) - (n7*j[p4, n1, 1 + n2, -1 + n3, n4, n5, 1, 1 + n7, 1, n9, 1, 
      0, -1, 1, 1])/(-1 + n3) + 
   (n4*j[p4, n1, 1 + n2, -1 + n3, 1 + n4, -1 + n5, 1, n7, 1, n9, 1, 1, -1, 1, 
      1])/(-1 + n3) + (n4*j[p4, n1, 1 + n2, -1 + n3, 1 + n4, n5, 1, n7, 0, 
      n9, 1, 1, -1, 1, 1])/(-1 + n3) - 
   (n4*j[p4, n1, 1 + n2, -1 + n3, 1 + n4, n5, 1, n7, 1, -1 + n9, 1, 1, -1, 1, 
      1])/(-1 + n3) + (n4*j[p4, n1, 1 + n2, -1 + n3, 1 + n4, n5, 1, n7, 1, 
      n9, 0, 1, -1, 1, 1])/(-1 + n3) - 
   (n4*j[p4, n1, 1 + n2, -1 + n3, 1 + n4, n5, 1, n7, 1, n9, 1, 0, -1, 1, 1])/
    (-1 + n3) + j[p4, n1, 1 + n2, n3, n4, n5, 1, n7, 0, n9, 1, 1, -1, 1, 1] + 
   j[p4, n1, 1 + n2, n3, n4, n5, 1, n7, 1, n9, 0, 1, -1, 1, 1] - 
   j[p4, n1, 1 + n2, n3, n4, n5, 1, n7, 1, n9, 1, 0, -1, 1, 1] + 
   j[p4, n1, 1 + n2, n3, n4, n5, 1, n7, 1, n9, 1, 1, -1, 0, 1] - 
   j[p4, n1, 1 + n2, n3, n4, n5, 1, n7, 1, n9, 1, 1, -1, 1, 1], 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n6 == 1 && 
    n8 == 1 &&  !(n7 == 0 || n9 == 0) -> 
  -j[p4, -1 + n1, n2, -1 + n3, n4, n5, 1, 1 + n7, 1, 1 + n9, 1, 1, 0, 1, 1] + 
   j[p4, -1 + n1, n2, n3, -1 + n4, n5, 1, 1 + n7, 1, 1 + n9, 1, 1, 0, 1, 1] + 
   j[p4, -1 + n1, n2, n3, n4, -1 + n5, 1, 1 + n7, 0, 1 + n9, 2, 1, 0, 1, 1]/
    (1 - n5) + ((8 - 4*d + n1 + 2*n2 + 3*n3 + 3*n4 + 2*n5 + 2*n7)*
     j[p4, -1 + n1, n2, n3, n4, -1 + n5, 1, 1 + n7, 1, 1 + n9, 1, 1, 0, 1, 
      1])/(-1 + n5) + j[p4, -1 + n1, n2, n3, n4, -1 + n5, 1, 1 + n7, 1, 
     1 + n9, 2, 1, 0, 0, 1]/(1 - n5) + 
   ((1 + n9)*j[p4, -1 + n1, n2, n3, n4, -1 + n5, 1, 1 + n7, 1, 2 + n9, 1, 1, 
      0, 1, 0])/(-1 + n5) - (n2*j[p4, -1 + n1, 1 + n2, -1 + n3, n4, -1 + n5, 
      1, 1 + n7, 1, 1 + n9, 1, 1, 0, 1, 1])/(-1 + n5) + 
   j[p4, n1, -1 + n2, n3, n4, -1 + n5, 1, 1 + n7, 0, 1 + n9, 2, 1, 0, 1, 1]/
    (-1 + n5) + ((-4 + 2*d - n2 - n3 - 3*n4 - n5 - n7)*
     j[p4, n1, -1 + n2, n3, n4, -1 + n5, 1, 1 + n7, 1, 1 + n9, 1, 1, 0, 1, 
      1])/(-1 + n5) + j[p4, n1, -1 + n2, n3, n4, -1 + n5, 1, 1 + n7, 1, 
     1 + n9, 2, 0, 0, 1, 1]/(-1 + n5) + 
   j[p4, n1, -1 + n2, n3, n4, -1 + n5, 1, 1 + n7, 1, 1 + n9, 2, 1, 0, 0, 1]/
    (-1 + n5) + ((-1 - n9)*j[p4, n1, -1 + n2, n3, n4, -1 + n5, 1, 1 + n7, 1, 
      2 + n9, 1, 1, 0, 1, 0])/(-1 + n5) + 
   ((1 + n7)*j[p4, n1, -1 + n2, n3, n4, -1 + n5, 1, 2 + n7, 1, 1 + n9, 1, 1, 
      0, 0, 1])/(-1 + n5) + j[p4, n1, -1 + n2, n3, n4, -1 + n5, 2, 1 + n7, 0, 
     1 + n9, 1, 1, 0, 1, 1]/(-1 + n5) + j[p4, n1, -1 + n2, n3, n4, n5, 1, 
    1 + n7, 1, 1 + n9, 1, 1, 0, 0, 1] - j[p4, n1, -1 + n2, n3, n4, n5, 1, 
    1 + n7, 1, 1 + n9, 1, 1, 0, 1, 0] + 
   ((6 - 2*d + n2 + n3 + n4 + n5 + n7 + 2*n9)*j[p4, n1, n2, -1 + n3, n4, 
      -1 + n5, 1, 1 + n7, 1, 1 + n9, 1, 1, 0, 1, 1])/(-1 + n5) + 
   j[p4, n1, n2, -1 + n3, n4, -1 + n5, 1, 1 + n7, 1, 1 + n9, 2, 0, 0, 1, 1]/
    (-1 + n5) + ((-1 - n7)*j[p4, n1, n2, -1 + n3, n4, -1 + n5, 1, 2 + n7, 0, 
      1 + n9, 1, 1, 0, 1, 1])/(-1 + n5) + 
   ((1 + n7)*j[p4, n1, n2, -1 + n3, n4, -1 + n5, 1, 2 + n7, 1, 1 + n9, 0, 1, 
      0, 1, 1])/(-1 + n5) + ((-1 - n7)*j[p4, n1, n2, -1 + n3, n4, -1 + n5, 1, 
      2 + n7, 1, 1 + n9, 1, 0, 0, 1, 1])/(-1 + n5) + 
   j[p4, n1, n2, -1 + n3, n4, -1 + n5, 2, 1 + n7, 0, 1 + n9, 1, 1, 0, 1, 1]/
    (-1 + n5) + j[p4, n1, n2, -1 + n3, n4, n5, 1, 1 + n7, 1, n9, 1, 1, 0, 1, 
    1] + (2*n4*j[p4, n1, n2, -1 + n3, 1 + n4, -1 + n5, 0, 1 + n7, 1, 1 + n9, 
      1, 1, 0, 1, 1])/(-1 + n5) - 
   (2*n4*j[p4, n1, n2, -1 + n3, 1 + n4, -1 + n5, 1, 1 + n7, 0, 1 + n9, 1, 1, 
      0, 1, 1])/(-1 + n5) + ((-4 + 2*d - 2*n4 - 2*n5 - 2*n9)*
     j[p4, n1, n2, n3, -1 + n4, -1 + n5, 1, 1 + n7, 1, 1 + n9, 1, 1, 0, 1, 
      1])/(-1 + n5) + ((-1 - n9)*j[p4, n1, n2, n3, -1 + n4, -1 + n5, 1, 
      1 + n7, 1, 2 + n9, 1, 1, 0, 1, 0])/(-1 + n5) + 
   j[p4, n1, n2, n3, -1 + n4, -1 + n5, 2, 1 + n7, 0, 1 + n9, 1, 1, 0, 1, 1]/
    (1 - n5) + j[p4, n1, n2, n3, -1 + n4, -1 + n5, 2, 1 + n7, 1, 1 + n9, 0, 
     1, 0, 1, 1]/(-1 + n5) + j[p4, n1, n2, n3, -1 + n4, -1 + n5, 2, 1 + n7, 
     1, 1 + n9, 1, 1, 0, 0, 1]/(1 - n5) + 
   j[p4, n1, n2, n3, -1 + n4, -1 + n5, 2, 1 + n7, 1, 1 + n9, 1, 1, 0, 1, 0]/
    (1 - n5) + j[p4, n1, n2, n3, -1 + n4, n5, 1, 1 + n7, 1, 1 + n9, 1, 1, 0, 
    0, 1] - j[p4, n1, n2, n3, -1 + n4, n5, 1, 1 + n7, 1, 1 + n9, 1, 1, 0, 1, 
    0] - j[p4, n1, n2, n3, -1 + n4, n5, 1, 1 + n7, 1, 1 + n9, 1, 1, 0, 1, 
    1] + j[p4, n1, n2, n3, n4, -1 + n5, 1, n7, 0, 1 + n9, 2, 1, 0, 1, 1]/
    (1 - n5) + ((4 - 2*d + n2 + n3 + 3*n4 + n5 + n7)*
     j[p4, n1, n2, n3, n4, -1 + n5, 1, n7, 1, 1 + n9, 1, 1, 0, 1, 1])/
    (-1 + n5) + j[p4, n1, n2, n3, n4, -1 + n5, 1, n7, 1, 1 + n9, 2, 0, 0, 1, 
     1]/(1 - n5) + j[p4, n1, n2, n3, n4, -1 + n5, 1, n7, 1, 1 + n9, 2, 1, 0, 
     0, 1]/(1 - n5) + ((1 + n9)*j[p4, n1, n2, n3, n4, -1 + n5, 1, n7, 1, 
      2 + n9, 1, 1, 0, 1, 0])/(-1 + n5) + 
   ((-1 + 2*n2 - 3*n3 + n4 - n9)*j[p4, n1, n2, n3, n4, -1 + n5, 1, 1 + n7, 0, 
      1 + n9, 1, 1, 0, 1, 1])/(-1 + n5) + 
   j[p4, n1, n2, n3, n4, -1 + n5, 1, 1 + n7, 0, 1 + n9, 1, 2, -1, 1, 1]/
    (-1 + n5) + j[p4, n1, n2, n3, n4, -1 + n5, 1, 1 + n7, 0, 1 + n9, 1, 2, 0, 
     1, 1]/(1 - n5) + ((1 + n9)*j[p4, n1, n2, n3, n4, -1 + n5, 1, 1 + n7, 0, 
      2 + n9, 1, 1, 0, 1, 1])/(-1 + n5) + 
   ((2 - d + n4 + n5 + n9)*j[p4, n1, n2, n3, n4, -1 + n5, 1, 1 + n7, 1, n9, 
      1, 1, 0, 1, 1])/(-1 + n5) + 
   ((-2 + n3 + n4 - n9)*j[p4, n1, n2, n3, n4, -1 + n5, 1, 1 + n7, 1, 1 + n9, 
      0, 1, 0, 1, 1])/(-1 + n5) + 
   ((2 - n3 - n4 + n9)*j[p4, n1, n2, n3, n4, -1 + n5, 1, 1 + n7, 1, 1 + n9, 
      1, 0, 0, 1, 1])/(-1 + n5) + 
   ((2 - d + 2*n3)*j[p4, n1, n2, n3, n4, -1 + n5, 1, 1 + n7, 1, 1 + n9, 1, 1, 
      -1, 1, 1])/(-1 + n5) + ((n1 + 2*n2 - 2*n3 - n7)*
     j[p4, n1, n2, n3, n4, -1 + n5, 1, 1 + n7, 1, 1 + n9, 1, 1, 0, 0, 1])/
    (-1 + n5) + ((1 - n4)*j[p4, n1, n2, n3, n4, -1 + n5, 1, 1 + n7, 1, 
      1 + n9, 1, 1, 0, 1, 0])/(-1 + n5) + 
   ((-4 + 2*d - n1 - n2 - n3 - 2*n4 - n5 - n9)*j[p4, n1, n2, n3, n4, -1 + n5, 
      1, 1 + n7, 1, 1 + n9, 1, 1, 0, 1, 1])/(-1 + n5) + 
   j[p4, n1, n2, n3, n4, -1 + n5, 1, 1 + n7, 1, 1 + n9, 2, 0, -1, 1, 1]/
    (-1 + n5) + j[p4, n1, n2, n3, n4, -1 + n5, 1, 1 + n7, 1, 1 + n9, 2, 0, 0, 
     1, 1]/(1 - n5) + ((1 + n9)*j[p4, n1, n2, n3, n4, -1 + n5, 1, 1 + n7, 1, 
      2 + n9, 0, 1, 0, 1, 1])/(-1 + n5) + 
   ((-1 - n9)*j[p4, n1, n2, n3, n4, -1 + n5, 1, 1 + n7, 1, 2 + n9, 1, 0, 0, 
      1, 1])/(-1 + n5) + j[p4, n1, n2, n3, n4, -1 + n5, 2, n7, 0, 1 + n9, 1, 
     1, 0, 1, 1]/(1 - n5) + j[p4, n1, n2, n3, n4, -1 + n5, 2, 1 + n7, 0, n9, 
     1, 1, 0, 1, 1]/(1 - n5) + j[p4, n1, n2, n3, n4, -1 + n5, 2, 1 + n7, 0, 
     1 + n9, 1, 1, -1, 1, 1]/(-1 + n5) - j[p4, n1, n2, n3, n4, n5, 1, n7, 1, 
    1 + n9, 1, 1, 0, 0, 1] + j[p4, n1, n2, n3, n4, n5, 1, n7, 1, 1 + n9, 1, 
    1, 0, 1, 0] + j[p4, n1, n2, n3, n4, n5, 1, n7, 1, 1 + n9, 1, 1, 0, 1, 
    1] + (n2*j[p4, n1, 1 + n2, -1 + n3, n4, -1 + n5, 1, 1 + n7, 0, 1 + n9, 1, 
      1, 0, 1, 1])/(-1 + n5) + 
   (n2*j[p4, n1, 1 + n2, -1 + n3, n4, -1 + n5, 1, 1 + n7, 1, 1 + n9, 0, 1, 0, 
      1, 1])/(-1 + n5) - (2*n2*j[p4, n1, 1 + n2, n3, n4, -1 + n5, 1, n7, 0, 
      1 + n9, 1, 1, 0, 1, 1])/(-1 + n5) - 
   (2*n2*j[p4, n1, 1 + n2, n3, n4, -1 + n5, 1, n7, 1, 1 + n9, 1, 1, 0, 0, 1])/
    (-1 + n5) + (n2*j[p4, n1, 1 + n2, n3, n4, -1 + n5, 1, n7, 1, 1 + n9, 1, 
      1, 0, 1, 1])/(-1 + n5) + 
   (n2*j[p4, n1, 1 + n2, n3, n4, -1 + n5, 1, 1 + n7, 0, 1 + n9, 1, 1, -1, 1, 
      1])/(-1 + n5) - (n2*j[p4, n1, 1 + n2, n3, n4, -1 + n5, 1, 1 + n7, 0, 
      1 + n9, 1, 1, 0, 1, 1])/(-1 + n5), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n13 == 1 && n14 == 1 && n3 == 1 && n6 == 1 && 
    n8 == 1 &&  !(n12 == 0 || n2 == 0) -> 
  ((1 + n12)*j[p4, -2 + n1, n2, 1, n4, n5, 1, n7, 1, n9, 1, 1, 2 + n12, 1, 
      1])/(-1 + n1) + j[p4, -2 + n1, 1 + n2, 0, n4, n5, 1, n7, 1, n9, 1, 1, 
     1 + n12, 2, 1]/(-1 + n1) + 
   ((1 + n12)*j[p4, -2 + n1, 1 + n2, 0, n4, n5, 1, n7, 1, n9, 1, 1, 2 + n12, 
      1, 1])/(-1 + n1) + (n5*j[p4, -2 + n1, 1 + n2, 1, -1 + n4, 1 + n5, 1, 
      n7, 1, n9, 1, 1, 1 + n12, 1, 1])/(-1 + n1) + 
   ((-2 - 2*n12)*j[p4, -2 + n1, 1 + n2, 1, n4, n5, 1, -1 + n7, 1, n9, 1, 1, 
      2 + n12, 1, 1])/(-1 + n1) + 
   ((-1 - n12)*j[p4, -2 + n1, 1 + n2, 1, n4, n5, 1, n7, 0, n9, 1, 1, 2 + n12, 
      1, 1])/(-1 + n1) + j[p4, -2 + n1, 1 + n2, 1, n4, n5, 1, n7, 1, n9, 0, 
     2, 1 + n12, 1, 1]/(-1 + n1) + ((-3 + d - n2 - n5 - 2*n7)*
     j[p4, -2 + n1, 1 + n2, 1, n4, n5, 1, n7, 1, n9, 1, 1, 1 + n12, 1, 1])/
    (-1 + n1) + ((-1 - n12)*j[p4, -2 + n1, 1 + n2, 1, n4, n5, 1, n7, 1, n9, 
      1, 1, 2 + n12, 0, 1])/(-1 + n1) + 
   ((1 + n2)*j[p4, -2 + n1, 2 + n2, 1, n4, n5, 1, n7, 0, n9, 1, 1, 1 + n12, 
      1, 1])/(-1 + n1) + ((2 - n1 + n12)*j[p4, -1 + n1, n2, 1, n4, n5, 1, n7, 
      1, n9, 1, 1, 1 + n12, 1, 1])/(-1 + n1) + 
   ((-1 - n12)*j[p4, -1 + n1, n2, 1, n4, n5, 1, n7, 1, n9, 1, 1, 2 + n12, 1, 
      1])/(-1 + n1) - (n5*j[p4, -1 + n1, n2, 1, n4, 1 + n5, 1, -1 + n7, 1, 
      n9, 1, 1, 1 + n12, 1, 1])/(-1 + n1) + 
   j[p4, -1 + n1, 1 + n2, 0, n4, n5, 1, n7, 1, n9, 1, 1, n12, 2, 1]/
    (-1 + n1) + ((1 + n12 - n7)*j[p4, -1 + n1, 1 + n2, 0, n4, n5, 1, n7, 1, 
      n9, 1, 1, 1 + n12, 1, 1])/(-1 + n1) + 
   j[p4, -1 + n1, 1 + n2, 0, n4, n5, 1, n7, 1, n9, 1, 1, 1 + n12, 2, 1]/
    (1 - n1) + ((-1 - n12)*j[p4, -1 + n1, 1 + n2, 0, n4, n5, 1, n7, 1, n9, 1, 
      1, 2 + n12, 1, 1])/(-1 + n1) - 
   (n5*j[p4, -1 + n1, 1 + n2, 1, -1 + n4, 1 + n5, 1, -1 + n7, 1, n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n1) + 
   (n5*j[p4, -1 + n1, 1 + n2, 1, -1 + n4, 1 + n5, 1, n7, 1, n9, 1, 1, n12, 1, 
      1])/(-1 + n1) - (n5*j[p4, -1 + n1, 1 + n2, 1, -1 + n4, 1 + n5, 1, n7, 
      1, n9, 1, 1, 1 + n12, 1, 1])/(-1 + n1) + 
   j[p4, -1 + n1, 1 + n2, 1, n4, n5, 1, -1 + n7, 0, n9, 1, 1, 1 + n12, 2, 1]/
    (1 - n1) + ((-1 - n12)*j[p4, -1 + n1, 1 + n2, 1, n4, n5, 1, -1 + n7, 0, 
      n9, 1, 1, 2 + n12, 1, 1])/(-1 + n1) + 
   j[p4, -1 + n1, 1 + n2, 1, n4, n5, 1, -1 + n7, 0, n9, 1, 2, 1 + n12, 1, 1]/
    (1 - n1) + ((1 + n12)*j[p4, -1 + n1, 1 + n2, 1, n4, n5, 1, -1 + n7, 1, 
      n9, 1, 0, 2 + n12, 1, 1])/(-1 + n1) + 
   ((2 - 2*d + 2*n1 + 2*n5 + 2*n7)*j[p4, -1 + n1, 1 + n2, 1, n4, n5, 1, 
      -1 + n7, 1, n9, 1, 1, 1 + n12, 1, 1])/(-1 + n1) + 
   ((1 + n12)*j[p4, -1 + n1, 1 + n2, 1, n4, n5, 1, -1 + n7, 1, n9, 1, 1, 
      2 + n12, 0, 1])/(-1 + n1) + 
   ((1 + n12)*j[p4, -1 + n1, 1 + n2, 1, n4, n5, 1, -1 + n7, 1, n9, 1, 1, 
      2 + n12, 1, 1])/(-1 + n1) + 
   ((-2 + n1 - n12)*j[p4, -1 + n1, 1 + n2, 1, n4, n5, 1, n7, 0, n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n1) + 
   ((1 + n12)*j[p4, -1 + n1, 1 + n2, 1, n4, n5, 1, n7, 0, n9, 1, 1, 2 + n12, 
      1, 1])/(-1 + n1) + ((-1 + n1 - n7)*j[p4, -1 + n1, 1 + n2, 1, n4, n5, 1, 
      n7, 1, n9, 0, 1, 1 + n12, 1, 1])/(-1 + n1) + 
   j[p4, -1 + n1, 1 + n2, 1, n4, n5, 1, n7, 1, n9, 0, 2, n12, 1, 1]/
    (-1 + n1) + j[p4, -1 + n1, 1 + n2, 1, n4, n5, 1, n7, 1, n9, 0, 2, 
     1 + n12, 1, 1]/(1 - n1) + 
   ((1 - n1 + n7)*j[p4, -1 + n1, 1 + n2, 1, n4, n5, 1, n7, 1, n9, 1, 0, 
      1 + n12, 1, 1])/(-1 + n1) + ((-3 + d - n2 - n5 - 2*n7)*
     j[p4, -1 + n1, 1 + n2, 1, n4, n5, 1, n7, 1, n9, 1, 1, n12, 1, 1])/
    (-1 + n1) + ((-1 - n12 + n7)*j[p4, -1 + n1, 1 + n2, 1, n4, n5, 1, n7, 1, 
      n9, 1, 1, 1 + n12, 0, 1])/(-1 + n1) + 
   ((3 - d + n2 + n5 + 2*n7)*j[p4, -1 + n1, 1 + n2, 1, n4, n5, 1, n7, 1, n9, 
      1, 1, 1 + n12, 1, 1])/(-1 + n1) + 
   ((1 + n12)*j[p4, -1 + n1, 1 + n2, 1, n4, n5, 1, n7, 1, n9, 1, 1, 2 + n12, 
      0, 1])/(-1 + n1) + (n5*j[p4, -1 + n1, 1 + n2, 1, n4, 1 + n5, 0, 
      -1 + n7, 1, n9, 1, 1, 1 + n12, 1, 1])/(-1 + n1) + 
   (n5*j[p4, -1 + n1, 1 + n2, 1, n4, 1 + n5, 1, -2 + n7, 1, n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n1) - 
   (n5*j[p4, -1 + n1, 1 + n2, 1, n4, 1 + n5, 1, -1 + n7, 1, -1 + n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n1) - 
   (n5*j[p4, -1 + n1, 1 + n2, 1, n4, 1 + n5, 1, -1 + n7, 1, n9, 1, 1, n12, 1, 
      1])/(-1 + n1) + (n5*j[p4, -1 + n1, 1 + n2, 1, n4, 1 + n5, 1, -1 + n7, 
      1, n9, 1, 1, 1 + n12, 0, 1])/(-1 + n1) - 
   (n5*j[p4, -1 + n1, 1 + n2, 1, n4, 1 + n5, 1, -1 + n7, 1, n9, 1, 1, 
      1 + n12, 1, 0])/(-1 + n1) + 
   (n5*j[p4, -1 + n1, 1 + n2, 1, n4, 1 + n5, 1, -1 + n7, 1, n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n1) + 
   ((-1 - n2)*j[p4, -1 + n1, 2 + n2, 0, n4, n5, 1, -1 + n7, 1, n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n1) + 
   ((2 + 2*n2)*j[p4, -1 + n1, 2 + n2, 1, n4, n5, 1, -2 + n7, 1, n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n1) + 
   ((-1 - n2)*j[p4, -1 + n1, 2 + n2, 1, n4, n5, 1, -1 + n7, 1, n9, 0, 1, 
      1 + n12, 1, 1])/(-1 + n1) + 
   ((-2 - 2*n2)*j[p4, -1 + n1, 2 + n2, 1, n4, n5, 1, -1 + n7, 1, n9, 1, 1, 
      n12, 1, 1])/(-1 + n1) + ((2 + 2*n2)*j[p4, -1 + n1, 2 + n2, 1, n4, n5, 
      1, -1 + n7, 1, n9, 1, 1, 1 + n12, 0, 1])/(-1 + n1) + 
   ((1 + n2)*j[p4, -1 + n1, 2 + n2, 1, n4, n5, 1, -1 + n7, 1, n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n1) + 
   ((1 + n2)*j[p4, -1 + n1, 2 + n2, 1, n4, n5, 1, n7, 0, n9, 1, 1, n12, 1, 
      1])/(-1 + n1) + ((-1 - n2)*j[p4, -1 + n1, 2 + n2, 1, n4, n5, 1, n7, 0, 
      n9, 1, 1, 1 + n12, 1, 1])/(-1 + n1) + j[p4, n1, n2, 1, n4, n5, 1, n7, 
    1, n9, 1, 1, 1 + n12, 1, 1] - j[p4, n1, 1 + n2, 1, n4, n5, 1, -1 + n7, 0, 
    n9, 1, 1, 1 + n12, 1, 1] + j[p4, n1, 1 + n2, 1, n4, n5, 1, -1 + n7, 1, 
    n9, 1, 0, 1 + n12, 1, 1] + j[p4, n1, 1 + n2, 1, n4, n5, 1, -1 + n7, 1, 
    n9, 1, 1, 1 + n12, 0, 1] - j[p4, n1, 1 + n2, 1, n4, n5, 1, -1 + n7, 1, 
    n9, 1, 1, 1 + n12, 1, 1] + j[p4, n1, 1 + n2, 1, n4, n5, 1, n7, 0, n9, 1, 
    1, n12, 1, 1] - j[p4, n1, 1 + n2, 1, n4, n5, 1, n7, 0, n9, 1, 1, 1 + n12, 
    1, 1] + j[p4, n1, 1 + n2, 1, n4, n5, 1, n7, 1, n9, 0, 1, n12, 1, 1] - 
   j[p4, n1, 1 + n2, 1, n4, n5, 1, n7, 1, n9, 0, 1, 1 + n12, 1, 1] - 
   j[p4, n1, 1 + n2, 1, n4, n5, 1, n7, 1, n9, 1, 0, n12, 1, 1] + 
   j[p4, n1, 1 + n2, 1, n4, n5, 1, n7, 1, n9, 1, 0, 1 + n12, 1, 1], 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n12 == 0 && n13 == 1 && n2 == 0 && n4 == 0 && n5 == 0 && 
    n7 == 0 && n9 == 0 &&  !(n10 == 1 || n6 == 1) -> 
  ((-1 - d + 2*n14 + n6)*j[p4, 0, 0, n3, 0, 0, -1 + n6, 0, n8, 0, n10, n11, 
      0, 1, n14])/(-1 + n6) + ((-1 - 2*d + n10 + 2*n14 + n3 + 2*n6)*
     j[p4, 0, 0, n3, 0, 0, n6, 0, n8, 0, -1 + n10, n11, 0, 1, n14])/
    (-1 + n10) + j[p4, 0, 0, n3, 0, 0, n6, 0, n8, 0, n10, n11, 0, 1, 
    -1 + n14] + ((-n3 - d*n3 + 2*n14*n3 + n3*n6)*j[p4, 0, 0, 1 + n3, 0, 0, 
      -1 + n6, 0, n8, 0, -1 + n10, n11, 0, 1, n14])/((-1 + n10)*(-1 + n6)) - 
   (n3*j[p4, 0, 0, 1 + n3, 0, 0, n6, 0, -1 + n8, 0, -1 + n10, n11, 0, 1, 
      n14])/(-1 + n10) + (n3*j[p4, 0, 0, 1 + n3, 0, 0, n6, 0, n8, 0, 
      -1 + n10, n11, 0, 1, -1 + n14])/(-1 + n10), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n14 == 1 && n4 == 0 && n5 == 0 && 
    n7 == 0 && n9 == 0 &&  !(n11 == 1 || n2 == 0 || n6 == 1) -> 
  (n8*j[p4, 0, n2, n3, 0, 0, n6, 0, 1 + n8, 0, 1, -1 + n11, 0, n13, 1])/
    (-1 + n11) - (n3*j[p4, 0, n2, 1 + n3, 0, 0, n6, 0, n8, 0, 1, -1 + n11, 0, 
      n13, 1])/(-1 + n11) - j[p4, 0, 1 + n2, -1 + n3, 0, 0, n6, 0, n8, 0, 1, 
    n11, 0, n13, 1] + ((1 - d + n6)*j[p4, 0, 1 + n2, n3, 0, 0, -1 + n6, 0, 
      n8, 0, 1, n11, 0, n13, 1])/(-1 + n6) - 
   (n8*j[p4, 0, 1 + n2, n3, 0, 0, n6, -1, 1 + n8, 0, 1, -1 + n11, 0, n13, 1])/
    (-1 + n11) + j[p4, 0, 1 + n2, n3, 0, 0, n6, 0, -1 + n8, 0, 1, n11, 0, 
    n13, 1] + j[p4, 0, 1 + n2, n3, 0, 0, n6, 0, n8, 0, 0, n11, 0, n13, 1] - 
   (2*n3*j[p4, 0, 1 + n2, n3, 0, 0, n6, 0, n8, 0, 1, -1 + n11, 0, n13, 1])/
    (-1 + n11) + j[p4, 0, 1 + n2, n3, 0, 0, n6, 0, n8, 0, 1, n11, 0, 
    -1 + n13, 1] + j[p4, 0, 1 + n2, n3, 0, 0, n6, 0, n8, 0, 1, n11, 0, n13, 
    0] - j[p4, 0, 1 + n2, n3, 0, 0, n6, 0, n8, 0, 1, n11, 0, n13, 1] + 
   (n8*j[p4, 0, 1 + n2, n3, 0, 0, n6, 0, 1 + n8, 0, 1, -1 + n11, -1, n13, 1])/
    (-1 + n11) - (n8*j[p4, 0, 1 + n2, n3, 0, 0, n6, 0, 1 + n8, 0, 1, 
      -1 + n11, 0, -1 + n13, 1])/(-1 + n11) + 
   (n3*j[p4, 0, 1 + n2, 1 + n3, 0, 0, n6, -1, n8, 0, 1, -1 + n11, 0, n13, 1])/
    (-1 + n11) + (2*n3*j[p4, 0, 1 + n2, 1 + n3, 0, 0, n6, 0, -1 + n8, 0, 1, 
      -1 + n11, 0, n13, 1])/(-1 + n11) - 
   (n3*j[p4, 0, 1 + n2, 1 + n3, 0, 0, n6, 0, n8, 0, 1, -1 + n11, -1, n13, 1])/
    (-1 + n11) + (n3*j[p4, 0, 1 + n2, 1 + n3, 0, 0, n6, 0, n8, 0, 1, 
      -1 + n11, 0, -1 + n13, 1])/(-1 + n11), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n13 == 1 && n4 == 0 && n5 == 0 && 
    n7 == 0 && n9 == 0 &&  !(n11 == 1 || n2 == 0 || n6 == 1) -> 
  (n8*j[p4, 0, n2, n3, 0, 0, n6, 0, 1 + n8, 0, 1, -1 + n11, 0, 1, n14])/
    (-1 + n11) - (n3*j[p4, 0, n2, 1 + n3, 0, 0, n6, 0, n8, 0, 1, -1 + n11, 0, 
      1, n14])/(-1 + n11) - j[p4, 0, 1 + n2, -1 + n3, 0, 0, n6, 0, n8, 0, 1, 
    n11, 0, 1, n14] + ((-1 - d + 2*n14 + n6)*j[p4, 0, 1 + n2, n3, 0, 0, 
      -1 + n6, 0, n8, 0, 1, n11, 0, 1, n14])/(-1 + n6) - 
   (n8*j[p4, 0, 1 + n2, n3, 0, 0, n6, -1, 1 + n8, 0, 1, -1 + n11, 0, 1, n14])/
    (-1 + n11) + j[p4, 0, 1 + n2, n3, 0, 0, n6, 0, -1 + n8, 0, 1, n11, 0, 1, 
    n14] + j[p4, 0, 1 + n2, n3, 0, 0, n6, 0, n8, 0, 0, n11, 0, 1, n14] - 
   (2*n3*j[p4, 0, 1 + n2, n3, 0, 0, n6, 0, n8, 0, 1, -1 + n11, 0, 1, n14])/
    (-1 + n11) + j[p4, 0, 1 + n2, n3, 0, 0, n6, 0, n8, 0, 1, n11, 0, 0, 
    n14] + j[p4, 0, 1 + n2, n3, 0, 0, n6, 0, n8, 0, 1, n11, 0, 1, -1 + n14] - 
   j[p4, 0, 1 + n2, n3, 0, 0, n6, 0, n8, 0, 1, n11, 0, 1, n14] + 
   (n8*j[p4, 0, 1 + n2, n3, 0, 0, n6, 0, 1 + n8, 0, 1, -1 + n11, -1, 1, n14])/
    (-1 + n11) - (n8*j[p4, 0, 1 + n2, n3, 0, 0, n6, 0, 1 + n8, 0, 1, 
      -1 + n11, 0, 0, n14])/(-1 + n11) + 
   (n3*j[p4, 0, 1 + n2, 1 + n3, 0, 0, n6, -1, n8, 0, 1, -1 + n11, 0, 1, n14])/
    (-1 + n11) + (2*n3*j[p4, 0, 1 + n2, 1 + n3, 0, 0, n6, 0, -1 + n8, 0, 1, 
      -1 + n11, 0, 1, n14])/(-1 + n11) - 
   (n3*j[p4, 0, 1 + n2, 1 + n3, 0, 0, n6, 0, n8, 0, 1, -1 + n11, -1, 1, n14])/
    (-1 + n11) + (n3*j[p4, 0, 1 + n2, 1 + n3, 0, 0, n6, 0, n8, 0, 1, 
      -1 + n11, 0, 0, n14])/(-1 + n11), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n4 == 0 && 
    n7 == 0 && n9 == 0 &&  !(n11 == 1 || n2 == 0 || n6 == 1) -> 
  (n8*j[p4, 0, n2, n3, 0, n5, n6, 0, 1 + n8, 0, 1, -1 + n11, 0, 1, 1])/
    (-1 + n11) - (n3*j[p4, 0, n2, 1 + n3, 0, n5, n6, 0, n8, 0, 1, -1 + n11, 
      0, 1, 1])/(-1 + n11) - j[p4, 0, 1 + n2, -1 + n3, 0, n5, n6, 0, n8, 0, 
    1, n11, 0, 1, 1] + ((1 - d + n5 + n6)*j[p4, 0, 1 + n2, n3, 0, n5, 
      -1 + n6, 0, n8, 0, 1, n11, 0, 1, 1])/(-1 + n6) - 
   (n8*j[p4, 0, 1 + n2, n3, 0, n5, n6, -1, 1 + n8, 0, 1, -1 + n11, 0, 1, 1])/
    (-1 + n11) + j[p4, 0, 1 + n2, n3, 0, n5, n6, 0, -1 + n8, 0, 1, n11, 0, 1, 
    1] + j[p4, 0, 1 + n2, n3, 0, n5, n6, 0, n8, 0, 0, n11, 0, 1, 1] - 
   (2*n3*j[p4, 0, 1 + n2, n3, 0, n5, n6, 0, n8, 0, 1, -1 + n11, 0, 1, 1])/
    (-1 + n11) + j[p4, 0, 1 + n2, n3, 0, n5, n6, 0, n8, 0, 1, n11, 0, 0, 1] + 
   j[p4, 0, 1 + n2, n3, 0, n5, n6, 0, n8, 0, 1, n11, 0, 1, 0] - 
   j[p4, 0, 1 + n2, n3, 0, n5, n6, 0, n8, 0, 1, n11, 0, 1, 1] + 
   (n8*j[p4, 0, 1 + n2, n3, 0, n5, n6, 0, 1 + n8, 0, 1, -1 + n11, -1, 1, 1])/
    (-1 + n11) - (n8*j[p4, 0, 1 + n2, n3, 0, n5, n6, 0, 1 + n8, 0, 1, 
      -1 + n11, 0, 0, 1])/(-1 + n11) - 
   (n5*j[p4, 0, 1 + n2, n3, 0, 1 + n5, -1 + n6, 0, n8, 0, 1, n11, 0, 0, 1])/
    (-1 + n6) + (n5*j[p4, 0, 1 + n2, n3, 0, 1 + n5, -1 + n6, 0, n8, 0, 1, 
      n11, 0, 1, 0])/(-1 + n6) + 
   (n3*j[p4, 0, 1 + n2, 1 + n3, 0, n5, n6, -1, n8, 0, 1, -1 + n11, 0, 1, 1])/
    (-1 + n11) + (2*n3*j[p4, 0, 1 + n2, 1 + n3, 0, n5, n6, 0, -1 + n8, 0, 1, 
      -1 + n11, 0, 1, 1])/(-1 + n11) - 
   (n3*j[p4, 0, 1 + n2, 1 + n3, 0, n5, n6, 0, n8, 0, 1, -1 + n11, -1, 1, 1])/
    (-1 + n11) + (n3*j[p4, 0, 1 + n2, 1 + n3, 0, n5, n6, 0, n8, 0, 1, 
      -1 + n11, 0, 0, 1])/(-1 + n11), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n7 == 0 && n9 == 0 &&  !(n3 == 1 || n4 == 0 || n6 == 1) -> 
  ((1 + n4)*j[p4, -1, 0, -1 + n3, 2 + n4, n5, -1 + n6, 0, n8, 0, 2, n11, 0, 
      1, 1])/(2*(-1 + n3)*(-1 + n6)) + 
   ((-1 - n4)*j[p4, 0, -1, -1 + n3, 2 + n4, n5, -1 + n6, 0, n8, 0, 2, n11, 0, 
      1, 1])/(2*(-1 + n3)*(-1 + n6)) + 
   ((4 - d)*j[p4, 0, 0, -1 + n3, 1 + n4, n5, -1 + n6, 0, n8, 0, 2, n11, 0, 1, 
      1])/(2*(-1 + n3)*(-1 + n6)) + 
   ((-1 + d - n4 - 2*n6)*j[p4, 0, 0, -1 + n3, 1 + n4, n5, n6, 0, n8, 0, 1, 
      n11, 0, 1, 1])/(2*(-1 + n3)) + 
   ((1 + n4)*j[p4, 0, 0, -1 + n3, 2 + n4, n5, -2 + n6, 0, n8, 0, 2, n11, 0, 
      1, 1])/(2*(-1 + n3)*(-1 + n6)) + 
   ((1 + n4)*j[p4, 0, 0, -1 + n3, 2 + n4, n5, -1 + n6, -1, n8, 0, 2, n11, 0, 
      1, 1])/(2*(-1 + n3)*(-1 + n6)) + 
   ((-1 - n4)*j[p4, 0, 0, -1 + n3, 2 + n4, n5, -1 + n6, 0, n8, -1, 2, n11, 0, 
      1, 1])/(2*(-1 + n3)*(-1 + n6)) + 
   ((1 + n3 + n4 + n3*n4 - n6 - n4*n6)*j[p4, 0, 0, -1 + n3, 2 + n4, n5, 
      -1 + n6, 0, n8, 0, 1, n11, 0, 1, 1])/(2*(-1 + n3)*(-1 + n6)) + 
   ((-1 - n4)*j[p4, 0, 0, -1 + n3, 2 + n4, n5, -1 + n6, 0, n8, 0, 2, 
      -1 + n11, 0, 1, 1])/(2*(-1 + n3)*(-1 + n6)) + 
   ((1 + n4)*j[p4, 0, 0, -1 + n3, 2 + n4, n5, n6, 0, -1 + n8, 0, 1, n11, 0, 
      1, 1])/(2*(-1 + n3)) + ((-5 + 3*d - 2*n3 - 3*n4 - 2*n5 - 2*n6)*
     j[p4, 0, 0, n3, 1 + n4, n5, -1 + n6, 0, n8, 0, 1, n11, 0, 1, 1])/
    (2*(-1 + n6)) + j[p4, 0, 0, n3, 1 + n4, n5, n6, 0, -1 + n8, 0, 1, n11, 0, 
    1, 1] + (n5*j[p4, 0, 0, n3, 1 + n4, 1 + n5, -1 + n6, 0, n8, 0, 1, n11, 0, 
      0, 1])/(-1 + n6) - (n5*j[p4, 0, 0, n3, 1 + n4, 1 + n5, -1 + n6, 0, n8, 
      0, 1, n11, 0, 1, 0])/(-1 + n6) + 
   ((-1 - n4)*j[p4, 0, 0, n3, 2 + n4, n5, -1 + n6, 0, n8, 0, 1, n11, 0, 1, 
      0])/(2*(-1 + n6)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n4 == 0 && 
    n5 == 0 && n9 == 0 &&  !(n6 == 1 || n7 == 0 || n8 == 1) -> 
  j[p4, 0, -1 + n2, n3, 0, 0, n6, 1 + n7, n8, 0, 1, 1, 0, 1, n14] + 
   j[p4, 0, n2, -1 + n3, 0, 0, n6, 1 + n7, n8, 0, 1, 1, 0, 1, n14] + 
   ((1 + d - 2*n14 - n6)*j[p4, 0, n2, n3, 0, 0, -1 + n6, 1 + n7, n8, 0, 1, 1, 
      0, 1, n14])/(-1 + n6) + 
   ((2 - d + n3)*j[p4, 0, n2, n3, 0, 0, n6, 1 + n7, -1 + n8, 0, 1, 1, 0, 1, 
      n14])/(-1 + n8) - j[p4, 0, n2, n3, 0, 0, n6, 1 + n7, n8, 0, 1, 1, 0, 1, 
    -1 + n14] - (n3*j[p4, 0, n2, 1 + n3, 0, 0, n6, n7, -1 + n8, 0, 1, 1, 0, 
      1, n14])/(-1 + n8) + (n3*j[p4, 0, n2, 1 + n3, 0, 0, n6, 1 + n7, 
      -1 + n8, 0, 1, 1, 0, 0, n14])/(-1 + n8) - 
   (n2*j[p4, 0, 1 + n2, -1 + n3, 0, 0, n6, 1 + n7, -1 + n8, 0, 1, 1, 0, 1, 
      n14])/(-1 + n8) + (n2*j[p4, 0, 1 + n2, n3, 0, 0, n6, n7, -1 + n8, 0, 1, 
      1, 0, 1, n14])/(-1 + n8) + 
   (n2*j[p4, 0, 1 + n2, n3, 0, 0, n6, 1 + n7, -2 + n8, 0, 1, 1, 0, 1, n14])/
    (-1 + n8) - (n2*j[p4, 0, 1 + n2, n3, 0, 0, n6, 1 + n7, -1 + n8, 0, 1, 1, 
      -1, 1, n14])/(-1 + n8) + 
   (2*n2*j[p4, 0, 1 + n2, n3, 0, 0, n6, 1 + n7, -1 + n8, 0, 1, 1, 0, 0, n14])/
    (-1 + n8), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n7 == -1 && n9 == 0 &&  !(n2 == 0 || n4 == 0 || n6 == 1) -> 
  j[p4, 0, 1 + n2, -1 + n3, 1 + n4, -1 + n5, -1 + n6, -1, n8, 0, 1, 1, 0, 1, 
     2]/(-1 + n6) + j[p4, 0, 1 + n2, n3, n4, n5, -1 + n6, -1, n8, 0, 1, 1, 0, 
     0, 2]/(1 - n6) + ((1 - d + n4 + n5 + n6)*j[p4, 0, 1 + n2, n3, n4, n5, 
      -1 + n6, -1, n8, 0, 1, 1, 0, 1, 1])/(-1 + n6) + 
   ((-1 + d - n4 - n5 - n6)*j[p4, 0, 1 + n2, n3, 1 + n4, -1 + n5, -1 + n6, 
      -1, n8, 0, 1, 1, 0, 1, 1])/(-1 + n6) + j[p4, 0, 1 + n2, n3, 1 + n4, 
    -1 + n5, n6, -1, -1 + n8, 0, 1, 1, 0, 1, 1] + 
   ((-1 - n4 + n5)*j[p4, 0, 1 + n2, n3, 1 + n4, n5, -1 + n6, -2, n8, 0, 1, 1, 
      0, 1, 1])/(-1 + n6), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && n7 == 0 && 
    n8 == 1 && n9 == 0 &&  !(n10 == 1 || n6 == 1) -> 
  -((n4*j[p4, n1, 0, -1 + n3, 1 + n4, n5, -1 + n6, 0, 1, 0, n10, 1, 0, 1, 1])/
     (-1 + n6)) + ((1 - d + n4 + n5 + n6)*j[p4, n1, 0, n3, n4, n5, -1 + n6, 
      0, 1, 0, n10, 1, 0, 1, 1])/(-1 + n6) + 
   ((1 - 2*d + n10 + n3 + n4 + n5 + 2*n6)*j[p4, n1, 0, n3, n4, n5, n6, 0, 1, 
      0, -1 + n10, 1, 0, 1, 1])/(-1 + n10) + j[p4, n1, 0, n3, n4, n5, n6, 0, 
    1, 0, n10, 1, 0, 1, 0] - (n5*j[p4, n1, 0, n3, n4, 1 + n5, -1 + n6, 0, 1, 
      0, n10, 1, 0, 0, 1])/(-1 + n6) + 
   (n5*j[p4, n1, 0, n3, n4, 1 + n5, -1 + n6, 0, 1, 0, n10, 1, 0, 1, 0])/
    (-1 + n6) - (n5*j[p4, n1, 0, n3, n4, 1 + n5, n6, 0, 1, 0, -1 + n10, 1, 0, 
      0, 1])/(-1 + n10) + (n5*j[p4, n1, 0, n3, n4, 1 + n5, n6, 0, 1, 0, 
      -1 + n10, 1, 0, 1, 0])/(-1 + n10) + 
   ((-n4 - n3*n4 + n4*n6)*j[p4, n1, 0, n3, 1 + n4, n5, -1 + n6, 0, 1, 0, 
      -1 + n10, 1, 0, 1, 1])/((-1 + n10)*(-1 + n6)) + 
   (n4*j[p4, n1, 0, n3, 1 + n4, n5, -1 + n6, 0, 1, 0, n10, 1, 0, 1, 0])/
    (-1 + n6) - (n4*j[p4, n1, 0, n3, 1 + n4, n5, n6, 0, 0, 0, -1 + n10, 1, 0, 
      1, 1])/(-1 + n10) + ((n3 - d*n3 + n3*n4 + n3*n5 + n3*n6)*
     j[p4, n1, 0, 1 + n3, n4, n5, -1 + n6, 0, 1, 0, -1 + n10, 1, 0, 1, 1])/
    ((-1 + n10)*(-1 + n6)) - (n3*j[p4, n1, 0, 1 + n3, n4, n5, n6, 0, 0, 0, 
      -1 + n10, 1, 0, 1, 1])/(-1 + n10) + 
   (n3*j[p4, n1, 0, 1 + n3, n4, n5, n6, 0, 1, 0, -1 + n10, 1, 0, 1, 0])/
    (-1 + n10) - (n3*n5*j[p4, n1, 0, 1 + n3, n4, 1 + n5, -1 + n6, 0, 1, 0, 
      -1 + n10, 1, 0, 0, 1])/((-1 + n10)*(-1 + n6)) + 
   (n3*n5*j[p4, n1, 0, 1 + n3, n4, 1 + n5, -1 + n6, 0, 1, 0, -1 + n10, 1, 0, 
      1, 0])/((-1 + n10)*(-1 + n6)) + 
   (n3*n4*j[p4, n1, 0, 1 + n3, 1 + n4, n5, -1 + n6, 0, 1, 0, -1 + n10, 1, 0, 
      1, 0])/((-1 + n10)*(-1 + n6)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n4 == 0 && n5 == 0 && 
    n8 == 1 && n9 == 0 && n14 != 1 -> 
  ((-2*n6 + d*n6 - 2*n6^2)*j[p4, n1, n2, n3, 0, 0, 1 + n6, n7, 1, 0, 1, 1, 0, 
     1, -1 + n14])/((d - 2*n14)*(-1 + n14)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n4 == 0 && 
    n8 == 1 && n9 == 0 &&  !(n5 == 0 || n6 == 1) -> 
  ((4 - d + 2*n5)*j[p4, n1, -1 + n2, n3, 0, 1 + n5, n6, n7, 1, 0, 1, 1, 0, 1, 
      1])/(2*(2 - d + n5 + n6)) + 
   ((-4 + d)*j[p4, n1, n2, n3, 0, 1 + n5, -1 + n6, n7, 1, 0, 1, 1, 0, 0, 2])/
    (2*(-2 + d - n5 - n6)*(-1 + n6)) + 
   ((-4 + d - 2*n5)*j[p4, n1, n2, n3, 0, 1 + n5, -1 + n6, n7, 1, 0, 1, 1, 0, 
      1, 1])/(2*(-1 + n6)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n8 == 1 && n9 == 0 &&  !(n3 == 1 || n4 == 0 || n6 == 1) -> 
  ((1 + n4)*j[p4, -1 + n1, 0, -1 + n3, 2 + n4, n5, -1 + n6, n7, 1, 0, 2, 1, 
      0, 1, 1])/(2*(-1 + n3)*(-1 + n6)) - 
   (n7*j[p4, n1, -1, -1 + n3, 1 + n4, n5, n6, 1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-1 + n3)) + ((-1 - n4)*j[p4, n1, -1, -1 + n3, 2 + n4, n5, -1 + n6, 
      n7, 1, 0, 2, 1, 0, 1, 1])/(2*(-1 + n3)*(-1 + n6)) - 
   (n7*j[p4, n1, 0, -1 + n3, n4, n5, n6, 1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-1 + n3)) + (n7*j[p4, n1, 0, -1 + n3, 1 + n4, -1 + n5, n6, 1 + n7, 1, 
      0, 1, 1, 0, 1, 1])/(2*(-1 + n3)) + 
   ((4 - d + n7)*j[p4, n1, 0, -1 + n3, 1 + n4, n5, -1 + n6, n7, 1, 0, 2, 1, 
      0, 1, 1])/(2*(-1 + n3)*(-1 + n6)) + 
   ((2*n7 - n3*n7)*j[p4, n1, 0, -1 + n3, 1 + n4, n5, -1 + n6, 1 + n7, 1, 0, 
      1, 1, 0, 1, 1])/(2*(-1 + n3)*(-1 + n6)) - 
   (n7*j[p4, n1, 0, -1 + n3, 1 + n4, n5, -1 + n6, 1 + n7, 1, 0, 2, 0, 0, 1, 
      1])/(2*(-1 + n3)*(-1 + n6)) + 
   ((-1 + d - n4 - 2*n6)*j[p4, n1, 0, -1 + n3, 1 + n4, n5, n6, n7, 1, 0, 1, 
      1, 0, 1, 1])/(2*(-1 + n3)) + 
   (n7*j[p4, n1, 0, -1 + n3, 1 + n4, n5, n6, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-1 + n3)) + ((1 + n4)*j[p4, n1, 0, -1 + n3, 2 + n4, n5, -2 + n6, n7, 
      1, 0, 2, 1, 0, 1, 1])/(2*(-1 + n3)*(-1 + n6)) + 
   ((1 + n4)*j[p4, n1, 0, -1 + n3, 2 + n4, n5, -1 + n6, -1 + n7, 1, 0, 2, 1, 
      0, 1, 1])/(2*(-1 + n3)*(-1 + n6)) + 
   ((-1 - n4)*j[p4, n1, 0, -1 + n3, 2 + n4, n5, -1 + n6, n7, 1, -1, 2, 1, 0, 
      1, 1])/(2*(-1 + n3)*(-1 + n6)) + 
   ((1 + n3 + n4 + n3*n4 - n6 - n4*n6)*j[p4, n1, 0, -1 + n3, 2 + n4, n5, 
      -1 + n6, n7, 1, 0, 1, 1, 0, 1, 1])/(2*(-1 + n3)*(-1 + n6)) + 
   ((-1 - n4)*j[p4, n1, 0, -1 + n3, 2 + n4, n5, -1 + n6, n7, 1, 0, 2, 0, 0, 
      1, 1])/(2*(-1 + n3)*(-1 + n6)) + 
   ((1 + n4)*j[p4, n1, 0, -1 + n3, 2 + n4, n5, n6, n7, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-1 + n3)) + ((-5 + 3*d - 2*n3 - 3*n4 - 2*n5 - 2*n6 - n7)*
     j[p4, n1, 0, n3, 1 + n4, n5, -1 + n6, n7, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-1 + n6)) + (n7*j[p4, n1, 0, n3, 1 + n4, n5, -1 + n6, 1 + n7, 1, 0, 
      1, 1, 0, 0, 1])/(2*(-1 + n6)) + j[p4, n1, 0, n3, 1 + n4, n5, n6, n7, 0, 
    0, 1, 1, 0, 1, 1] + (n5*j[p4, n1, 0, n3, 1 + n4, 1 + n5, -1 + n6, n7, 1, 
      0, 1, 1, 0, 0, 1])/(-1 + n6) - 
   (n5*j[p4, n1, 0, n3, 1 + n4, 1 + n5, -1 + n6, n7, 1, 0, 1, 1, 0, 1, 0])/
    (-1 + n6) + ((-1 - n4)*j[p4, n1, 0, n3, 2 + n4, n5, -1 + n6, n7, 1, 0, 1, 
      1, 0, 1, 0])/(2*(-1 + n6)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n12 == 0 && n14 == 1 && n2 == 0 && n5 == 0 && n6 == 1 && 
    n7 == 0 && n9 == 0 &&  !(n11 == 1 || n8 == 1) -> 
  -((n4*j[p4, -1, 0, n3, 1 + n4, 0, 1, 0, -1 + n8, 0, n10, n11, 0, n13, 1])/
     (-1 + n8)) + (n4*j[p4, 0, -1, n3, 1 + n4, 0, 1, 0, -1 + n8, 0, n10, n11, 
      0, n13, 1])/(-1 + n8) + 
   (n4*j[p4, 0, 0, -1 + n3, 1 + n4, 0, 1, 0, -1 + n8, 0, n10, n11, 0, n13, 
      1])/(-1 + n8) + ((-1 - 2*d + 2*n11 + 2*n13 + n3 + n4 + n8)*
     j[p4, 0, 0, n3, n4, 0, 1, 0, -1 + n8, 0, n10, n11, 0, n13, 1])/
    (-1 + n8) + ((-1 - d + n11 + 2*n13)*j[p4, 0, 0, n3, n4, 0, 1, 0, n8, 0, 
      n10, -1 + n11, 0, n13, 1])/(-1 + n11) + j[p4, 0, 0, n3, n4, 0, 1, 0, 
    n8, 0, n10, n11, 0, -1 + n13, 1] - 
   (n4*j[p4, 0, 0, n3, 1 + n4, 0, 0, 0, -1 + n8, 0, n10, n11, 0, n13, 1])/
    (-1 + n8) - (n4*j[p4, 0, 0, n3, 1 + n4, 0, 1, -1, -1 + n8, 0, n10, n11, 
      0, n13, 1])/(-1 + n8) + (n4*j[p4, 0, 0, n3, 1 + n4, 0, 1, 0, -1 + n8, 
      -1, n10, n11, 0, n13, 1])/(-1 + n8) - 
   (n4*j[p4, 0, 0, n3, 1 + n4, 0, 1, 0, -1 + n8, 0, -1 + n10, n11, 0, n13, 
      1])/(-1 + n8) + (n4*j[p4, 0, 0, n3, 1 + n4, 0, 1, 0, -1 + n8, 0, n10, 
      -1 + n11, 0, n13, 1])/(-1 + n8) - 
   (n4*j[p4, 0, 0, n3, 1 + n4, 0, 1, 0, -1 + n8, 0, n10, n11, 0, n13, 0])/
    (-1 + n8) - (n3*j[p4, 0, 0, 1 + n3, n4, 0, 1, 0, -1 + n8, 0, -1 + n10, 
      n11, 0, n13, 1])/(-1 + n8) + ((-n3 - d*n3 + n11*n3 + 2*n13*n3)*
     j[p4, 0, 0, 1 + n3, n4, 0, 1, 0, -1 + n8, 0, n10, -1 + n11, 0, n13, 1])/
    ((-1 + n11)*(-1 + n8)) + (n3*j[p4, 0, 0, 1 + n3, n4, 0, 1, 0, -1 + n8, 0, 
      n10, n11, 0, -1 + n13, 1])/(-1 + n8), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && n6 == 1 && 
    n7 == 0 && n9 == 0 &&  !(n10 == 1 || n11 == 1 || n5 == 0) -> 
  (n8*j[p4, 0, -1, n3, n4, 1 + n5, 1, 0, 1 + n8, 0, n10, -1 + n11, 0, 1, 1])/
    (-1 + n11) + j[p4, 0, -1, n3, n4, 1 + n5, 2, 0, n8, 0, -1 + n10, n11, 0, 
     1, 1]/(1 - n10) - j[p4, 0, 0, -1 + n3, n4, 1 + n5, 1, 0, n8, 0, n10, 
    n11, 0, 1, 1] + j[p4, 0, 0, -1 + n3, n4, 1 + n5, 2, 0, n8, 0, -1 + n10, 
     n11, 0, 1, 1]/(1 - n10) - 
   (n4*j[p4, 0, 0, -1 + n3, 1 + n4, 1 + n5, 1, 0, n8, 0, -1 + n10, n11, 0, 1, 
      1])/(-1 + n10) - (n4*j[p4, 0, 0, -1 + n3, 1 + n4, 1 + n5, 1, 0, n8, 0, 
      n10, -1 + n11, 0, 1, 1])/(-1 + n11) + j[p4, 0, 0, n3, -1 + n4, 1 + n5, 
    1, 0, n8, 0, n10, n11, 0, 1, 1] + 
   (n8*j[p4, 0, 0, n3, -1 + n4, 1 + n5, 1, 0, 1 + n8, 0, n10, -1 + n11, 0, 1, 
      1])/(-1 + n11) - (n8*j[p4, 0, 0, n3, n4, 1 + n5, 0, 0, 1 + n8, 0, n10, 
      -1 + n11, 0, 1, 1])/(-1 + n11) - 
   (n8*j[p4, 0, 0, n3, n4, 1 + n5, 1, -1, 1 + n8, 0, n10, -1 + n11, 0, 1, 1])/
    (-1 + n11) + ((1 - n3 + n4)*j[p4, 0, 0, n3, n4, 1 + n5, 1, 0, n8, 0, 
      -1 + n10, n11, 0, 1, 1])/(-1 + n10) + 
   ((-n3 + n4 - n8)*j[p4, 0, 0, n3, n4, 1 + n5, 1, 0, n8, 0, n10, -1 + n11, 
      0, 1, 1])/(-1 + n11) + j[p4, 0, 0, n3, n4, 1 + n5, 1, 0, n8, 0, n10, 
    n11, 0, 0, 1] + (n8*j[p4, 0, 0, n3, n4, 1 + n5, 1, 0, 1 + n8, 0, n10, 
      -1 + n11, -1, 1, 1])/(-1 + n11) - 
   (n8*j[p4, 0, 0, n3, n4, 1 + n5, 1, 0, 1 + n8, 0, n10, -1 + n11, 0, 0, 1])/
    (-1 + n11) + j[p4, 0, 0, n3, n4, 1 + n5, 2, -1, n8, 0, -1 + n10, n11, 0, 
     1, 1]/(-1 + n10) + j[p4, 0, 0, n3, n4, 1 + n5, 2, 0, -1 + n8, 0, 
     -1 + n10, n11, 0, 1, 1]/(-1 + n10) + 
   j[p4, 0, 0, n3, n4, 1 + n5, 2, 0, n8, 0, -1 + n10, n11, -1, 1, 1]/
    (1 - n10) + j[p4, 0, 0, n3, n4, 1 + n5, 2, 0, n8, 0, -1 + n10, n11, 0, 0, 
     1]/(-1 + n10) + j[p4, 0, 0, n3, n4, 1 + n5, 2, 0, n8, 0, -1 + n10, n11, 
     0, 1, 0]/(-1 + n10) + (n4*j[p4, 0, 0, n3, 1 + n4, 1 + n5, 1, 0, n8, 0, 
      -1 + n10, n11, 0, 1, 0])/(-1 + n10) + 
   (n4*j[p4, 0, 0, n3, 1 + n4, 1 + n5, 1, 0, n8, 0, n10, -1 + n11, 0, 1, 0])/
    (-1 + n11) + (n3*j[p4, 0, 0, 1 + n3, -1 + n4, 1 + n5, 1, 0, n8, 0, 
      -1 + n10, n11, 0, 1, 1])/(-1 + n10) + 
   (n3*j[p4, 0, 0, 1 + n3, -1 + n4, 1 + n5, 1, 0, n8, 0, n10, -1 + n11, 0, 1, 
      1])/(-1 + n11) - (n3*j[p4, 0, 0, 1 + n3, n4, 1 + n5, 1, 0, n8, 0, 
      -1 + n10, n11, 0, 1, 0])/(-1 + n10) - 
   (n3*j[p4, 0, 0, 1 + n3, n4, 1 + n5, 1, 0, n8, 0, n10, -1 + n11, 0, 1, 0])/
    (-1 + n11), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n14 == 1 && n5 == 0 && n6 == 1 && 
    n7 == 0 && n9 == 0 &&  !(n11 == 1 || n8 == 1) -> 
  -((n4*j[p4, -1, n2, n3, 1 + n4, 0, 1, 0, -1 + n8, 0, 1, n11, 0, n13, 1])/
     (-1 + n8)) + (n4*j[p4, 0, -1 + n2, n3, 1 + n4, 0, 1, 0, -1 + n8, 0, 1, 
      n11, 0, n13, 1])/(-1 + n8) + 
   (n4*j[p4, 0, n2, -1 + n3, 1 + n4, 0, 1, 0, -1 + n8, 0, 1, n11, 0, n13, 1])/
    (-1 + n8) + ((-1 - 2*d + 2*n11 + 2*n13 + n3 + n4 + n8)*
     j[p4, 0, n2, n3, n4, 0, 1, 0, -1 + n8, 0, 1, n11, 0, n13, 1])/
    (-1 + n8) + ((-1 - d + n11 + 2*n13)*j[p4, 0, n2, n3, n4, 0, 1, 0, n8, 0, 
      1, -1 + n11, 0, n13, 1])/(-1 + n11) + j[p4, 0, n2, n3, n4, 0, 1, 0, n8, 
    0, 1, n11, 0, -1 + n13, 1] - 
   (n4*j[p4, 0, n2, n3, 1 + n4, 0, 0, 0, -1 + n8, 0, 1, n11, 0, n13, 1])/
    (-1 + n8) - (n4*j[p4, 0, n2, n3, 1 + n4, 0, 1, -1, -1 + n8, 0, 1, n11, 0, 
      n13, 1])/(-1 + n8) + (n4*j[p4, 0, n2, n3, 1 + n4, 0, 1, 0, -1 + n8, -1, 
      1, n11, 0, n13, 1])/(-1 + n8) - 
   (n4*j[p4, 0, n2, n3, 1 + n4, 0, 1, 0, -1 + n8, 0, 0, n11, 0, n13, 1])/
    (-1 + n8) + (n4*j[p4, 0, n2, n3, 1 + n4, 0, 1, 0, -1 + n8, 0, 1, 
      -1 + n11, 0, n13, 1])/(-1 + n8) - 
   (n4*j[p4, 0, n2, n3, 1 + n4, 0, 1, 0, -1 + n8, 0, 1, n11, 0, n13, 0])/
    (-1 + n8) - (n3*j[p4, 0, n2, 1 + n3, n4, 0, 1, 0, -1 + n8, 0, 0, n11, 0, 
      n13, 1])/(-1 + n8) + ((-n3 - d*n3 + n11*n3 + 2*n13*n3)*
     j[p4, 0, n2, 1 + n3, n4, 0, 1, 0, -1 + n8, 0, 1, -1 + n11, 0, n13, 1])/
    ((-1 + n11)*(-1 + n8)) + (n3*j[p4, 0, n2, 1 + n3, n4, 0, 1, 0, -1 + n8, 
      0, 1, n11, 0, -1 + n13, 1])/(-1 + n8) - 
   (n2*j[p4, 0, 1 + n2, -1 + n3, n4, 0, 1, 0, -1 + n8, 0, 1, n11, 0, n13, 1])/
    (-1 + n8) - (n2*j[p4, 0, 1 + n2, -1 + n3, n4, 0, 1, 0, n8, 0, 1, 
      -1 + n11, 0, n13, 1])/(-1 + n11) + 
   (n2*j[p4, 0, 1 + n2, n3, n4, 0, 1, -1, -1 + n8, 0, 1, n11, 0, n13, 1])/
    (-1 + n8) + (n2*j[p4, 0, 1 + n2, n3, n4, 0, 1, -1, n8, 0, 1, -1 + n11, 0, 
      n13, 1])/(-1 + n11) + (n2*j[p4, 0, 1 + n2, n3, n4, 0, 1, 0, -2 + n8, 0, 
      1, n11, 0, n13, 1])/(-1 + n8) + 
   ((-n2 - n2*n3 + n2*n8)*j[p4, 0, 1 + n2, n3, n4, 0, 1, 0, -1 + n8, 0, 1, 
      -1 + n11, 0, n13, 1])/((-1 + n11)*(-1 + n8)) - 
   (n2*j[p4, 0, 1 + n2, n3, n4, 0, 1, 0, -1 + n8, 0, 1, n11, -1, n13, 1])/
    (-1 + n8) + (2*n2*j[p4, 0, 1 + n2, n3, n4, 0, 1, 0, -1 + n8, 0, 1, n11, 
      0, -1 + n13, 1])/(-1 + n8) - 
   (n2*j[p4, 0, 1 + n2, n3, n4, 0, 1, 0, n8, 0, 1, -1 + n11, -1, n13, 1])/
    (-1 + n11) + (2*n2*j[p4, 0, 1 + n2, n3, n4, 0, 1, 0, n8, 0, 1, -1 + n11, 
      0, -1 + n13, 1])/(-1 + n11) + 
   (n2*n3*j[p4, 0, 1 + n2, 1 + n3, n4, 0, 1, -1, -1 + n8, 0, 1, -1 + n11, 0, 
      n13, 1])/((-1 + n11)*(-1 + n8)) + 
   (n2*n3*j[p4, 0, 1 + n2, 1 + n3, n4, 0, 1, 0, -2 + n8, 0, 1, -1 + n11, 0, 
      n13, 1])/((-1 + n11)*(-1 + n8)) - 
   (n2*n3*j[p4, 0, 1 + n2, 1 + n3, n4, 0, 1, 0, -1 + n8, 0, 1, -1 + n11, -1, 
      n13, 1])/((-1 + n11)*(-1 + n8)) + 
   (2*n2*n3*j[p4, 0, 1 + n2, 1 + n3, n4, 0, 1, 0, -1 + n8, 0, 1, -1 + n11, 0, 
      -1 + n13, 1])/((-1 + n11)*(-1 + n8)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n6 == 1 && 
    n7 == 0 && n9 == 0 &&  !(n11 == 1 || n8 == 1) -> 
  -((n4*j[p4, -1, n2, n3, 1 + n4, n5, 1, 0, -1 + n8, 0, 1, n11, 0, 1, 1])/
     (-1 + n8)) + (n4*j[p4, 0, -1 + n2, n3, 1 + n4, n5, 1, 0, -1 + n8, 0, 1, 
      n11, 0, 1, 1])/(-1 + n8) + 
   (n4*j[p4, 0, n2, -1 + n3, 1 + n4, n5, 1, 0, -1 + n8, 0, 1, n11, 0, 1, 1])/
    (-1 + n8) + ((1 - 2*d + 2*n11 + n3 + n4 + n5 + n8)*
     j[p4, 0, n2, n3, n4, n5, 1, 0, -1 + n8, 0, 1, n11, 0, 1, 1])/(-1 + n8) + 
   ((1 - d + n11 + n5)*j[p4, 0, n2, n3, n4, n5, 1, 0, n8, 0, 1, -1 + n11, 0, 
      1, 1])/(-1 + n11) + j[p4, 0, n2, n3, n4, n5, 1, 0, n8, 0, 1, n11, 0, 0, 
    1] + (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, 0, -1 + n8, 0, 1, n11, 0, 0, 1])/
    (-1 + n8) - (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, 0, -1 + n8, 0, 1, n11, 0, 
      1, 0])/(-1 + n8) + (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, 0, n8, 0, 1, 
      -1 + n11, 0, 0, 1])/(-1 + n11) - 
   (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, 0, n8, 0, 1, -1 + n11, 0, 1, 0])/
    (-1 + n11) - (n4*j[p4, 0, n2, n3, 1 + n4, n5, 0, 0, -1 + n8, 0, 1, n11, 
      0, 1, 1])/(-1 + n8) - (n4*j[p4, 0, n2, n3, 1 + n4, n5, 1, -1, -1 + n8, 
      0, 1, n11, 0, 1, 1])/(-1 + n8) + 
   (n4*j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, -1 + n8, -1, 1, n11, 0, 1, 1])/
    (-1 + n8) - (n4*j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, -1 + n8, 0, 0, n11, 0, 
      1, 1])/(-1 + n8) + (n4*j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, -1 + n8, 0, 
      1, -1 + n11, 0, 1, 1])/(-1 + n8) - 
   (n4*j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, -1 + n8, 0, 1, n11, 0, 1, 0])/
    (-1 + n8) - (n3*j[p4, 0, n2, 1 + n3, n4, n5, 1, 0, -1 + n8, 0, 0, n11, 0, 
      1, 1])/(-1 + n8) + ((n3 - d*n3 + n11*n3 + n3*n5)*
     j[p4, 0, n2, 1 + n3, n4, n5, 1, 0, -1 + n8, 0, 1, -1 + n11, 0, 1, 1])/
    ((-1 + n11)*(-1 + n8)) + (n3*j[p4, 0, n2, 1 + n3, n4, n5, 1, 0, -1 + n8, 
      0, 1, n11, 0, 0, 1])/(-1 + n8) + 
   (n3*n5*j[p4, 0, n2, 1 + n3, n4, 1 + n5, 1, 0, -1 + n8, 0, 1, -1 + n11, 0, 
      0, 1])/((-1 + n11)*(-1 + n8)) - 
   (n3*n5*j[p4, 0, n2, 1 + n3, n4, 1 + n5, 1, 0, -1 + n8, 0, 1, -1 + n11, 0, 
      1, 0])/((-1 + n11)*(-1 + n8)) - 
   (n2*j[p4, 0, 1 + n2, -1 + n3, n4, n5, 1, 0, -1 + n8, 0, 1, n11, 0, 1, 1])/
    (-1 + n8) - (n2*j[p4, 0, 1 + n2, -1 + n3, n4, n5, 1, 0, n8, 0, 1, 
      -1 + n11, 0, 1, 1])/(-1 + n11) + 
   (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, -1, -1 + n8, 0, 1, n11, 0, 1, 1])/
    (-1 + n8) + (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, -1, n8, 0, 1, -1 + n11, 
      0, 1, 1])/(-1 + n11) + (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, 0, -2 + n8, 
      0, 1, n11, 0, 1, 1])/(-1 + n8) + 
   ((-n2 - n2*n3 + n2*n8)*j[p4, 0, 1 + n2, n3, n4, n5, 1, 0, -1 + n8, 0, 1, 
      -1 + n11, 0, 1, 1])/((-1 + n11)*(-1 + n8)) - 
   (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, 0, -1 + n8, 0, 1, n11, -1, 1, 1])/
    (-1 + n8) + (2*n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, 0, -1 + n8, 0, 1, n11, 
      0, 0, 1])/(-1 + n8) - (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, 0, n8, 0, 1, 
      -1 + n11, -1, 1, 1])/(-1 + n11) + 
   (2*n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, 0, n8, 0, 1, -1 + n11, 0, 0, 1])/
    (-1 + n11) + (n2*n3*j[p4, 0, 1 + n2, 1 + n3, n4, n5, 1, -1, -1 + n8, 0, 
      1, -1 + n11, 0, 1, 1])/((-1 + n11)*(-1 + n8)) + 
   (n2*n3*j[p4, 0, 1 + n2, 1 + n3, n4, n5, 1, 0, -2 + n8, 0, 1, -1 + n11, 0, 
      1, 1])/((-1 + n11)*(-1 + n8)) - 
   (n2*n3*j[p4, 0, 1 + n2, 1 + n3, n4, n5, 1, 0, -1 + n8, 0, 1, -1 + n11, -1, 
      1, 1])/((-1 + n11)*(-1 + n8)) + 
   (2*n2*n3*j[p4, 0, 1 + n2, 1 + n3, n4, n5, 1, 0, -1 + n8, 0, 1, -1 + n11, 
      0, 0, 1])/((-1 + n11)*(-1 + n8)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n14 == 1 && n5 == 0 && 
    n6 == 1 && n7 == 0 &&  !(n13 == 1 || n2 == 0 || n8 == 1) -> 
  j[p4, 0, n2, n3, n4, 0, 1, 0, n8, n9, 1, 2, 0, -1 + n13, 1]/(1 - n13) - 
   (n8*j[p4, 0, n2, n3, n4, 0, 1, 0, 1 + n8, n9, 1, 1, 0, -1 + n13, 1])/
    (-1 + n13) + (n3*j[p4, 0, n2, 1 + n3, n4, 0, 1, 0, -1 + n8, n9, 1, 1, 0, 
      n13, 1])/(-1 + n8) + (n3*j[p4, 0, n2, 1 + n3, n4, 0, 1, 0, -1 + n8, n9, 
      1, 2, 0, -1 + n13, 1])/((-1 + n13)*(-1 + n8)) + 
   (n3*j[p4, 0, n2, 1 + n3, n4, 0, 1, 0, n8, n9, 1, 1, 0, -1 + n13, 1])/
    (-1 + n13) + j[p4, 0, 1 + n2, -1 + n3, n4, 0, 1, 0, -1 + n8, n9, 1, 2, 0, 
     n13, 1]/(-1 + n8) + j[p4, 0, 1 + n2, -1 + n3, n4, 0, 1, 0, n8, n9, 1, 1, 
    0, n13, 1] + (n4*j[p4, 0, 1 + n2, -1 + n3, 1 + n4, 0, 1, 0, -1 + n8, n9, 
      1, 1, 0, n13, 1])/(-1 + n8) + 
   (n4*j[p4, 0, 1 + n2, -1 + n3, 1 + n4, 0, 1, 0, -1 + n8, n9, 1, 2, 0, 
      -1 + n13, 1])/((-1 + n13)*(-1 + n8)) + 
   (n4*j[p4, 0, 1 + n2, -1 + n3, 1 + n4, 0, 1, 0, n8, n9, 1, 1, 0, -1 + n13, 
      1])/(-1 + n13) + j[p4, 0, 1 + n2, n3, n4, 0, 1, -1, n8, n9, 1, 2, 0, 
     -1 + n13, 1]/(-1 + n13) + 
   (n8*j[p4, 0, 1 + n2, n3, n4, 0, 1, -1, 1 + n8, n9, 1, 1, 0, -1 + n13, 1])/
    (-1 + n13) + j[p4, 0, 1 + n2, n3, n4, 0, 1, 0, -2 + n8, n9, 1, 2, 0, n13, 
     1]/(1 - n8) + j[p4, 0, 1 + n2, n3, n4, 0, 1, 0, -1 + n8, n9, 0, 2, 0, 
     n13, 1]/(1 - n8) + ((1 + 2*n3 - n8)*j[p4, 0, 1 + n2, n3, n4, 0, 1, 0, 
      -1 + n8, n9, 1, 1, 0, n13, 1])/(-1 + n8) + 
   ((-2 - 2*n2 + 2*n3)*j[p4, 0, 1 + n2, n3, n4, 0, 1, 0, -1 + n8, n9, 1, 2, 
      0, -1 + n13, 1])/((-1 + n13)*(-1 + n8)) + 
   j[p4, 0, 1 + n2, n3, n4, 0, 1, 0, -1 + n8, n9, 1, 2, 0, n13, 1]/
    (-1 + n8) + ((-3 + n13 - 2*n2 + 2*n3)*j[p4, 0, 1 + n2, n3, n4, 0, 1, 0, 
      n8, n9, 1, 1, 0, -1 + n13, 1])/(-1 + n13) + 
   j[p4, 0, 1 + n2, n3, n4, 0, 1, 0, n8, n9, 1, 2, -1, -1 + n13, 1]/
    (1 - n13) + j[p4, 0, 1 + n2, n3, n4, 0, 1, 0, n8, n9, 1, 2, 0, -2 + n13, 
     1]/(-1 + n13) - (n8*j[p4, 0, 1 + n2, n3, n4, 0, 1, 0, 1 + n8, n9, 1, 1, 
      -1, -1 + n13, 1])/(-1 + n13) + 
   (n8*j[p4, 0, 1 + n2, n3, n4, 0, 1, 0, 1 + n8, n9, 1, 1, 0, -2 + n13, 1])/
    (-1 + n13) + (n4*j[p4, 0, 1 + n2, n3, 1 + n4, 0, 0, 0, -1 + n8, n9, 1, 1, 
      0, n13, 1])/(-1 + n8) + 
   (n4*j[p4, 0, 1 + n2, n3, 1 + n4, 0, 0, 0, -1 + n8, n9, 1, 2, 0, -1 + n13, 
      1])/((-1 + n13)*(-1 + n8)) + 
   (n4*j[p4, 0, 1 + n2, n3, 1 + n4, 0, 0, 0, n8, n9, 1, 1, 0, -1 + n13, 1])/
    (-1 + n13) - (n4*j[p4, 0, 1 + n2, n3, 1 + n4, 0, 1, 0, -2 + n8, n9, 1, 1, 
      0, n13, 1])/(-1 + n8) - 
   (n4*j[p4, 0, 1 + n2, n3, 1 + n4, 0, 1, 0, -2 + n8, n9, 1, 2, 0, -1 + n13, 
      1])/((-1 + n13)*(-1 + n8)) - 
   (n4*j[p4, 0, 1 + n2, n3, 1 + n4, 0, 1, 0, -1 + n8, n9, 1, 1, 0, -1 + n13, 
      1])/(-1 + n13) - (n4*j[p4, 0, 1 + n2, n3, 1 + n4, 0, 1, 0, -1 + n8, n9, 
      1, 1, 0, n13, 0])/(-1 + n8) - 
   (n4*j[p4, 0, 1 + n2, n3, 1 + n4, 0, 1, 0, -1 + n8, n9, 1, 2, 0, -1 + n13, 
      0])/((-1 + n13)*(-1 + n8)) - 
   (n4*j[p4, 0, 1 + n2, n3, 1 + n4, 0, 1, 0, n8, n9, 1, 1, 0, -1 + n13, 0])/
    (-1 + n13) - (n3*j[p4, 0, 1 + n2, 1 + n3, n4, 0, 1, -1, -1 + n8, n9, 1, 
      1, 0, n13, 1])/(-1 + n8) - 
   (n3*j[p4, 0, 1 + n2, 1 + n3, n4, 0, 1, -1, -1 + n8, n9, 1, 2, 0, -1 + n13, 
      1])/((-1 + n13)*(-1 + n8)) - 
   (n3*j[p4, 0, 1 + n2, 1 + n3, n4, 0, 1, -1, n8, n9, 1, 1, 0, -1 + n13, 1])/
    (-1 + n13) - (2*n3*j[p4, 0, 1 + n2, 1 + n3, n4, 0, 1, 0, -2 + n8, n9, 1, 
      1, 0, n13, 1])/(-1 + n8) - 
   (2*n3*j[p4, 0, 1 + n2, 1 + n3, n4, 0, 1, 0, -2 + n8, n9, 1, 2, 0, 
      -1 + n13, 1])/((-1 + n13)*(-1 + n8)) + 
   (n3*j[p4, 0, 1 + n2, 1 + n3, n4, 0, 1, 0, -1 + n8, n9, 1, 1, -1, n13, 1])/
    (-1 + n8) + ((3*n3 - n13*n3 - 2*n3*n8)*j[p4, 0, 1 + n2, 1 + n3, n4, 0, 1, 
      0, -1 + n8, n9, 1, 1, 0, -1 + n13, 1])/((-1 + n13)*(-1 + n8)) + 
   (n3*j[p4, 0, 1 + n2, 1 + n3, n4, 0, 1, 0, -1 + n8, n9, 1, 2, -1, -1 + n13, 
      1])/((-1 + n13)*(-1 + n8)) - 
   (n3*j[p4, 0, 1 + n2, 1 + n3, n4, 0, 1, 0, -1 + n8, n9, 1, 2, 0, -2 + n13, 
      1])/((-1 + n13)*(-1 + n8)) + 
   (n3*j[p4, 0, 1 + n2, 1 + n3, n4, 0, 1, 0, n8, n9, 1, 1, -1, -1 + n13, 1])/
    (-1 + n13) - (n3*j[p4, 0, 1 + n2, 1 + n3, n4, 0, 1, 0, n8, n9, 1, 1, 0, 
      -2 + n13, 1])/(-1 + n13) + 
   ((-1 - n2)*j[p4, 0, 2 + n2, -1 + n3, n4, 0, 1, 0, -1 + n8, n9, 1, 2, 0, 
      -1 + n13, 1])/((-1 + n13)*(-1 + n8)) + 
   ((-1 - n2)*j[p4, 0, 2 + n2, -1 + n3, n4, 0, 1, 0, n8, n9, 1, 1, 0, 
      -1 + n13, 1])/(-1 + n13) + 
   ((1 + n2)*j[p4, 0, 2 + n2, n3, n4, 0, 1, -1, -1 + n8, n9, 1, 2, 0, 
      -1 + n13, 1])/((-1 + n13)*(-1 + n8)) + 
   ((1 + n2)*j[p4, 0, 2 + n2, n3, n4, 0, 1, -1, n8, n9, 1, 1, 0, -1 + n13, 
      1])/(-1 + n13) + ((1 + n2)*j[p4, 0, 2 + n2, n3, n4, 0, 1, 0, -2 + n8, 
      n9, 1, 2, 0, -1 + n13, 1])/((-1 + n13)*(-1 + n8)) + 
   ((1 + n2)*j[p4, 0, 2 + n2, n3, n4, 0, 1, 0, -1 + n8, n9, 1, 1, 0, 
      -1 + n13, 1])/(-1 + n13) + 
   ((-1 - n2)*j[p4, 0, 2 + n2, n3, n4, 0, 1, 0, -1 + n8, n9, 1, 2, -1, 
      -1 + n13, 1])/((-1 + n13)*(-1 + n8)) + 
   ((2 + 2*n2)*j[p4, 0, 2 + n2, n3, n4, 0, 1, 0, -1 + n8, n9, 1, 2, 0, 
      -2 + n13, 1])/((-1 + n13)*(-1 + n8)) + 
   ((-1 - n2)*j[p4, 0, 2 + n2, n3, n4, 0, 1, 0, n8, n9, 1, 1, -1, -1 + n13, 
      1])/(-1 + n13) + ((2 + 2*n2)*j[p4, 0, 2 + n2, n3, n4, 0, 1, 0, n8, n9, 
      1, 1, 0, -2 + n13, 1])/(-1 + n13), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n6 == 1 && n7 == -1 && n9 != 0 -> 
  -(j[p4, -1, n2, n3, n4, n5, 1, -1, n8, 1 + n9, 0, 2, 0, 1, 1]/
     (-3 + d - n4 - n5 - n9)) + ((4 - 7*d + 4*n2 + 4*n3 + 4*n4 + 4*n5 + 4*n8)*
     j[p4, -1, n2, n3, n4, n5, 1, -1, n8, 1 + n9, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4, -1, n2, n3, n4, n5, 1, -1, n8, 
     1 + n9, 2, 1, 0, 0, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   ((-1 - n9)*j[p4, -1, n2, n3, n4, n5, 1, -1, n8, 2 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n8*j[p4, -1, n2, n3, n4, n5, 1, -1, 1 + n8, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5 - n9)) - 
   (n5*j[p4, -1, n2, n3, n4, 1 + n5, 1, -1, n8, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n5*j[p4, -1, n2, n3, n4, 1 + n5, 1, -1, n8, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n4*j[p4, -1, n2, n3, 1 + n4, n5, 1, -1, n8, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n2*j[p4, -1, 1 + n2, n3, n4, n5, 1, -1, n8, 1 + n9, 1, 1, 0, 0, 1])/
    (-3 + d - n4 - n5 - n9) + ((-6 + 5*d - 2*n2 - 4*n3 - 4*n4 - 2*n5)*
     j[p4, 0, -1 + n2, n3, n4, n5, 1, -1, n8, 1 + n9, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, 0, -1 + n2, n3, n4, n5, 1, -1, n8, 
     1 + n9, 2, 0, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4, 0, -1 + n2, n3, n4, n5, 1, -1, n8, 1 + n9, 2, 1, 0, 0, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + 
   ((1 + n9)*j[p4, 0, -1 + n2, n3, n4, n5, 1, -1, n8, 2 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (n8*j[p4, 0, -1 + n2, n3, n4, n5, 1, -1, 1 + n8, 1 + n9, 1, 0, 0, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) - 
   (n8*j[p4, 0, -1 + n2, n3, n4, n5, 1, -1, 1 + n8, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4, 0, -1 + n2, n3, n4, n5, 1, 0, n8, 
     1 + n9, 1, 1, 0, 0, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4, 0, -1 + n2, n3, n4, n5, 2, -1, -1 + n8, 1 + n9, 1, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4, 0, -1 + n2, n3, n4, n5, 2, -1, n8, 
     1 + n9, 0, 1, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   (n4*j[p4, 0, -1 + n2, n3, 1 + n4, n5, 1, -1, n8, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   ((4 - 3*d + 2*n2 + 2*n4 + 2*n5 + 2*n8 + 2*n9)*j[p4, 0, n2, -1 + n3, n4, 
      n5, 1, -1, n8, 1 + n9, 1, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4, 0, n2, -1 + n3, n4, n5, 1, -1, n8, 1 + n9, 2, 0, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, 0, n2, -1 + n3, n4, n5, 1, 0, n8, 
     1 + n9, 0, 1, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, 0, n2, -1 + n3, n4, n5, 1, 0, n8, 1 + n9, 1, 0, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, 0, n2, -1 + n3, n4, n5, 2, -1, 
     -1 + n8, 1 + n9, 1, 1, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, 0, n2, -1 + n3, n4, n5, 2, -1, n8, 1 + n9, 0, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) - 
   (n4*j[p4, 0, n2, -1 + n3, 1 + n4, n5, 1, -1, -1 + n8, 1 + n9, 1, 1, 0, 1, 
      1])/(2*(3 - d + n4 + n5 + n9)) + 
   (n4*j[p4, 0, n2, -1 + n3, 1 + n4, n5, 1, -1, n8, 1 + n9, 0, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (n4*j[p4, 0, n2, -1 + n3, 1 + n4, n5, 1, -1, n8, 1 + n9, 1, 0, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) + j[p4, 0, n2, n3, -1 + n4, n5, 1, -1, n8, 
    1 + n9, 1, 1, 0, 1, 1] + ((1 + n9)*j[p4, 0, n2, n3, -1 + n4, n5, 1, -1, 
      n8, 2 + n9, 1, 1, 0, 1, 0])/(2*(3 - d + n4 + n5 + n9)) + 
   j[p4, 0, n2, n3, -1 + n4, n5, 2, -1, n8, 1 + n9, 0, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4, 0, n2, n3, -1 + n4, n5, 2, -1, n8, 
     1 + n9, 1, 1, 0, 0, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, 0, n2, n3, -1 + n4, n5, 2, -1, n8, 1 + n9, 1, 1, 0, 1, 0]/
    (2*(-3 + d - n4 - n5 - n9)) - 
   (n5*j[p4, 0, n2, n3, -1 + n4, 1 + n5, 1, -1, n8, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n5*j[p4, 0, n2, n3, -1 + n4, 1 + n5, 1, -1, n8, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + ((4 - 3*d + 4*n3 + 4*n4)*
     j[p4, 0, n2, n3, n4, n5, 1, -2, n8, 1 + n9, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4, 0, n2, n3, n4, n5, 1, -2, n8, 1 + n9, 
     2, 0, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, 0, n2, n3, n4, n5, 1, -2, n8, 1 + n9, 2, 1, 0, 0, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + 
   ((-1 - n9)*j[p4, 0, n2, n3, n4, n5, 1, -2, n8, 2 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n8*j[p4, 0, n2, n3, n4, n5, 1, -2, 1 + n8, 1 + n9, 1, 0, 0, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) + 
   (n8*j[p4, 0, n2, n3, n4, n5, 1, -2, 1 + n8, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, 0, n2, n3, n4, n5, 1, -1, -1 + n8, 
     1 + n9, 0, 2, 0, 1, 1]/(-3 + d - n4 - n5 - n9) + 
   ((2*d - n4 + n5 - 2*n8 - n9)*j[p4, 0, n2, n3, n4, n5, 1, -1, -1 + n8, 
      1 + n9, 1, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, 0, n2, n3, n4, n5, 1, -1, -1 + n8, 1 + n9, 2, 0, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + 
   ((-1 - n9)*j[p4, 0, n2, n3, n4, n5, 1, -1, -1 + n8, 2 + n9, 1, 1, 0, 1, 
      1])/(2*(3 - d + n4 + n5 + n9)) + 
   ((1 + n2 - n4 + n9)*j[p4, 0, n2, n3, n4, n5, 1, -1, n8, 1 + n9, 0, 1, 0, 
      1, 1])/(2*(3 - d + n4 + n5 + n9)) - 
   j[p4, 0, n2, n3, n4, n5, 1, -1, n8, 1 + n9, 0, 2, -1, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, 0, n2, n3, n4, n5, 1, -1, n8, 1 + n9, 
     0, 2, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   ((-3 + n4 - n9)*j[p4, 0, n2, n3, n4, n5, 1, -1, n8, 1 + n9, 1, 0, 0, 1, 
      1])/(2*(3 - d + n4 + n5 + n9)) + 
   (n8*j[p4, 0, n2, n3, n4, n5, 1, -1, n8, 1 + n9, 1, 1, 0, 0, 1])/
    (-3 + d - n4 - n5 - n9) + ((-1 + n4 - n9)*j[p4, 0, n2, n3, n4, n5, 1, -1, 
      n8, 1 + n9, 1, 1, 0, 1, 0])/(2*(3 - d + n4 + n5 + n9)) + 
   ((-4 + 3*d - 2*n2 - 2*n4 - 2*n5 - 2*n8 - 2*n9)*j[p4, 0, n2, n3, n4, n5, 1, 
      -1, n8, 1 + n9, 1, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4, 0, n2, n3, n4, n5, 1, -1, n8, 1 + n9, 2, 0, -1, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4, 0, n2, n3, n4, n5, 1, -1, n8, 1 + n9, 
     2, 0, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   ((-1 - n9)*j[p4, 0, n2, n3, n4, n5, 1, -1, n8, 2 + n9, 0, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) + 
   ((1 + n9)*j[p4, 0, n2, n3, n4, n5, 1, -1, n8, 2 + n9, 1, 0, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (n8*j[p4, 0, n2, n3, n4, n5, 1, -1, 1 + n8, 1 + n9, 1, 0, -1, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, 0, n2, n3, n4, n5, 1, 0, -1 + n8, 
     1 + n9, 1, 1, 0, 0, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, 0, n2, n3, n4, n5, 2, -2, -1 + n8, 1 + n9, 1, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, 0, n2, n3, n4, n5, 2, -2, n8, 1 + n9, 
     0, 1, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, 0, n2, n3, n4, n5, 2, -1, -2 + n8, 1 + n9, 1, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, 0, n2, n3, n4, n5, 2, -1, -1 + n8, 
     1 + n9, 1, 1, -1, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4, 0, n2, n3, n4, n5, 2, -1, n8, n9, 1, 1, 0, 0, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, 0, n2, n3, n4, n5, 2, -1, n8, n9, 1, 
     1, 0, 1, 0]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, 0, n2, n3, n4, n5, 2, -1, n8, 1 + n9, 0, 1, -1, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + 
   (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, -2, n8, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, -2, n8, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, -1, -1 + n8, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, -1, -1 + n8, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, -1, n8, n9, 1, 1, 0, 0, 1])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, -1, n8, n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (2*n4*j[p4, 0, n2, n3, 1 + n4, -1 + n5, 1, -1, -1 + n8, 1 + n9, 1, 1, 0, 
      1, 1])/(3 - d + n4 + n5 + n9) + 
   (2*n4*j[p4, 0, n2, n3, 1 + n4, n5, 1, -2, -1 + n8, 1 + n9, 1, 1, 0, 1, 1])/
    (3 - d + n4 + n5 + n9) + (n4*j[p4, 0, n2, n3, 1 + n4, n5, 1, -2, n8, 
      1 + n9, 1, 1, 0, 1, 0])/(2*(3 - d + n4 + n5 + n9)) + 
   (n4*j[p4, 0, n2, n3, 1 + n4, n5, 1, -1, -1 + n8, 1 + n9, 1, 1, 0, 1, 0])/
    (3 - d + n4 + n5 + n9) - (n4*j[p4, 0, n2, n3, 1 + n4, n5, 1, -1, n8, n9, 
      1, 1, 0, 1, 0])/(2*(3 - d + n4 + n5 + n9)) - 
   (2*n3*j[p4, 0, n2, 1 + n3, n4, n5, 1, -2, -1 + n8, 1 + n9, 1, 1, 0, 1, 1])/
    (-3 + d - n4 - n5 - n9) + 
   (2*n3*j[p4, 0, n2, 1 + n3, n4, n5, 1, -1, -1 + n8, 1 + n9, 1, 1, 0, 0, 1])/
    (-3 + d - n4 - n5 - n9) - (n2*j[p4, 0, 1 + n2, -1 + n3, n4, n5, 1, -1, 
      n8, 1 + n9, 0, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5 - n9)) + 
   (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, -2, n8, 1 + n9, 0, 1, 0, 1, 1])/
    (-3 + d - n4 - n5 - n9) - (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, -2, n8, 
      1 + n9, 1, 1, 0, 0, 1])/(-3 + d - n4 - n5 - n9) + 
   (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, -1, -1 + n8, 1 + n9, 1, 1, 0, 0, 1])/
    (-3 + d - n4 - n5 - n9) - (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, -1, n8, 
      1 + n9, 0, 1, -1, 1, 1])/(2*(-3 + d - n4 - n5 - n9)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n6 == 1 && n7 == 0 && n9 != 0 -> 
  -(j[p4, -1, n2, n3, n4, n5, 1, 0, n8, 1 + n9, 0, 2, 0, 1, 1]/
     (-3 + d - n4 - n5 - n9)) + 
   ((10 - 7*d + 4*n2 + 4*n3 + 4*n4 + 4*n5 + 4*n8)*j[p4, -1, n2, n3, n4, n5, 
      1, 0, n8, 1 + n9, 1, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, -1, n2, n3, n4, n5, 1, 0, n8, 1 + n9, 2, 1, 0, 0, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + 
   ((-1 - n9)*j[p4, -1, n2, n3, n4, n5, 1, 0, n8, 2 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n8*j[p4, -1, n2, n3, n4, n5, 1, 0, 1 + n8, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5 - n9)) - 
   (n5*j[p4, -1, n2, n3, n4, 1 + n5, 1, 0, n8, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n5*j[p4, -1, n2, n3, n4, 1 + n5, 1, 0, n8, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n4*j[p4, -1, n2, n3, 1 + n4, n5, 1, 0, n8, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n2*j[p4, -1, 1 + n2, n3, n4, n5, 1, 0, n8, 1 + n9, 1, 1, 0, 0, 1])/
    (-3 + d - n4 - n5 - n9) + ((-10 + 5*d - 2*n2 - 4*n3 - 4*n4 - 2*n5)*
     j[p4, 0, -1 + n2, n3, n4, n5, 1, 0, n8, 1 + n9, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, 0, -1 + n2, n3, n4, n5, 1, 0, n8, 
     1 + n9, 2, 0, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4, 0, -1 + n2, n3, n4, n5, 1, 0, n8, 1 + n9, 2, 1, 0, 0, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + 
   ((1 + n9)*j[p4, 0, -1 + n2, n3, n4, n5, 1, 0, n8, 2 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (n8*j[p4, 0, -1 + n2, n3, n4, n5, 1, 0, 1 + n8, 1 + n9, 1, 0, 0, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) - 
   (n8*j[p4, 0, -1 + n2, n3, n4, n5, 1, 0, 1 + n8, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, 0, -1 + n2, n3, n4, n5, 2, 0, 
     -1 + n8, 1 + n9, 1, 1, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, 0, -1 + n2, n3, n4, n5, 2, 0, n8, 1 + n9, 0, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) - 
   (n4*j[p4, 0, -1 + n2, n3, 1 + n4, n5, 1, 0, n8, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   ((6 - 3*d + 2*n2 + 2*n4 + 2*n5 + 2*n8 + 2*n9)*j[p4, 0, n2, -1 + n3, n4, 
      n5, 1, 0, n8, 1 + n9, 1, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4, 0, n2, -1 + n3, n4, n5, 1, 0, n8, 1 + n9, 2, 0, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, 0, n2, -1 + n3, n4, n5, 2, 0, 
     -1 + n8, 1 + n9, 1, 1, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, 0, n2, -1 + n3, n4, n5, 2, 0, n8, 1 + n9, 0, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) - 
   (n4*j[p4, 0, n2, -1 + n3, 1 + n4, n5, 1, 0, -1 + n8, 1 + n9, 1, 1, 0, 1, 
      1])/(2*(3 - d + n4 + n5 + n9)) + 
   (n4*j[p4, 0, n2, -1 + n3, 1 + n4, n5, 1, 0, n8, 1 + n9, 0, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (n4*j[p4, 0, n2, -1 + n3, 1 + n4, n5, 1, 0, n8, 1 + n9, 1, 0, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) + j[p4, 0, n2, n3, -1 + n4, n5, 1, 0, n8, 
    1 + n9, 1, 1, 0, 1, 1] + ((1 + n9)*j[p4, 0, n2, n3, -1 + n4, n5, 1, 0, 
      n8, 2 + n9, 1, 1, 0, 1, 0])/(2*(3 - d + n4 + n5 + n9)) + 
   j[p4, 0, n2, n3, -1 + n4, n5, 2, 0, n8, 1 + n9, 0, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4, 0, n2, n3, -1 + n4, n5, 2, 0, n8, 
     1 + n9, 1, 1, 0, 0, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, 0, n2, n3, -1 + n4, n5, 2, 0, n8, 1 + n9, 1, 1, 0, 1, 0]/
    (2*(-3 + d - n4 - n5 - n9)) - 
   (n5*j[p4, 0, n2, n3, -1 + n4, 1 + n5, 1, 0, n8, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n5*j[p4, 0, n2, n3, -1 + n4, 1 + n5, 1, 0, n8, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + ((6 - 3*d + 4*n3 + 4*n4)*
     j[p4, 0, n2, n3, n4, n5, 1, -1, n8, 1 + n9, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4, 0, n2, n3, n4, n5, 1, -1, n8, 1 + n9, 
     2, 0, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, 0, n2, n3, n4, n5, 1, -1, n8, 1 + n9, 2, 1, 0, 0, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + 
   ((-1 - n9)*j[p4, 0, n2, n3, n4, n5, 1, -1, n8, 2 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n8*j[p4, 0, n2, n3, n4, n5, 1, -1, 1 + n8, 1 + n9, 1, 0, 0, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) + 
   (n8*j[p4, 0, n2, n3, n4, n5, 1, -1, 1 + n8, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, 0, n2, n3, n4, n5, 1, 0, -1 + n8, 
     1 + n9, 0, 2, 0, 1, 1]/(-3 + d - n4 - n5 - n9) + 
   ((-4 + 2*d - n4 + n5 - 2*n8 - n9)*j[p4, 0, n2, n3, n4, n5, 1, 0, -1 + n8, 
      1 + n9, 1, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, 0, n2, n3, n4, n5, 1, 0, -1 + n8, 1 + n9, 2, 0, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + 
   ((-1 - n9)*j[p4, 0, n2, n3, n4, n5, 1, 0, -1 + n8, 2 + n9, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) + 
   ((n2 - n4 + n9)*j[p4, 0, n2, n3, n4, n5, 1, 0, n8, 1 + n9, 0, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) - j[p4, 0, n2, n3, n4, n5, 1, 0, n8, 1 + n9, 
     0, 2, -1, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4, 0, n2, n3, n4, n5, 1, 0, n8, 1 + n9, 0, 2, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + 
   ((-2 + n4 - n9)*j[p4, 0, n2, n3, n4, n5, 1, 0, n8, 1 + n9, 1, 0, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) + 
   ((-1 + n8)*j[p4, 0, n2, n3, n4, n5, 1, 0, n8, 1 + n9, 1, 1, 0, 0, 1])/
    (-3 + d - n4 - n5 - n9) + ((-1 + n4 - n9)*j[p4, 0, n2, n3, n4, n5, 1, 0, 
      n8, 1 + n9, 1, 1, 0, 1, 0])/(2*(3 - d + n4 + n5 + n9)) + 
   ((-6 + 3*d - 2*n2 - 2*n4 - 2*n5 - 2*n8 - 2*n9)*j[p4, 0, n2, n3, n4, n5, 1, 
      0, n8, 1 + n9, 1, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4, 0, n2, n3, n4, n5, 1, 0, n8, 1 + n9, 2, 0, -1, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4, 0, n2, n3, n4, n5, 1, 0, n8, 1 + n9, 
     2, 0, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   ((-1 - n9)*j[p4, 0, n2, n3, n4, n5, 1, 0, n8, 2 + n9, 0, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) + 
   ((1 + n9)*j[p4, 0, n2, n3, n4, n5, 1, 0, n8, 2 + n9, 1, 0, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (n8*j[p4, 0, n2, n3, n4, n5, 1, 0, 1 + n8, 1 + n9, 1, 0, -1, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4, 0, n2, n3, n4, n5, 2, -1, -1 + n8, 
     1 + n9, 1, 1, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4, 0, n2, n3, n4, n5, 2, -1, n8, 1 + n9, 0, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4, 0, n2, n3, n4, n5, 2, 0, -2 + n8, 
     1 + n9, 1, 1, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4, 0, n2, n3, n4, n5, 2, 0, -1 + n8, 1 + n9, 1, 1, -1, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, 0, n2, n3, n4, n5, 2, 0, n8, n9, 1, 
     1, 0, 0, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4, 0, n2, n3, n4, n5, 2, 0, n8, n9, 1, 1, 0, 1, 0]/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4, 0, n2, n3, n4, n5, 2, 0, n8, 1 + n9, 
     0, 1, -1, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, -1, n8, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, -1, n8, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, 0, -1 + n8, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, 0, -1 + n8, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, 0, n8, n9, 1, 1, 0, 0, 1])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, 0, n8, n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (2*n4*j[p4, 0, n2, n3, 1 + n4, -1 + n5, 1, 0, -1 + n8, 1 + n9, 1, 1, 0, 1, 
      1])/(3 - d + n4 + n5 + n9) + 
   (2*n4*j[p4, 0, n2, n3, 1 + n4, n5, 1, -1, -1 + n8, 1 + n9, 1, 1, 0, 1, 1])/
    (3 - d + n4 + n5 + n9) + (n4*j[p4, 0, n2, n3, 1 + n4, n5, 1, -1, n8, 
      1 + n9, 1, 1, 0, 1, 0])/(2*(3 - d + n4 + n5 + n9)) + 
   (n4*j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, -1 + n8, 1 + n9, 1, 1, 0, 1, 0])/
    (3 - d + n4 + n5 + n9) - (n4*j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, n8, n9, 
      1, 1, 0, 1, 0])/(2*(3 - d + n4 + n5 + n9)) - 
   (2*n3*j[p4, 0, n2, 1 + n3, n4, n5, 1, -1, -1 + n8, 1 + n9, 1, 1, 0, 1, 1])/
    (-3 + d - n4 - n5 - n9) + 
   (2*n3*j[p4, 0, n2, 1 + n3, n4, n5, 1, 0, -1 + n8, 1 + n9, 1, 1, 0, 0, 1])/
    (-3 + d - n4 - n5 - n9) - (n2*j[p4, 0, 1 + n2, -1 + n3, n4, n5, 1, 0, n8, 
      1 + n9, 0, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5 - n9)) + 
   (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, -1, n8, 1 + n9, 0, 1, 0, 1, 1])/
    (-3 + d - n4 - n5 - n9) - (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, -1, n8, 
      1 + n9, 1, 1, 0, 0, 1])/(-3 + d - n4 - n5 - n9) + 
   (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, 0, -1 + n8, 1 + n9, 1, 1, 0, 0, 1])/
    (-3 + d - n4 - n5 - n9) - (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, 0, n8, 
      1 + n9, 0, 1, -1, 1, 1])/(2*(-3 + d - n4 - n5 - n9)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n6 == 1 && 
    n8 == 1 && n9 == 0 && n7 != 0 -> 
  ((8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4, -1 + n1, n2, n3, n4, n5, 
      1, 1 + n7, 0, 0, 1, 1, 0, 2, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((24 - 9*d + 2*n1 + 4*n2 + 4*n3 + 6*n4 + 6*n5 + 6*n7)*
     j[p4, -1 + n1, n2, n3, n4, n5, 1, 1 + n7, 0, 0, 2, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-192 + 144*d - 27*d^2 - 16*n1 + 6*d*n1 - 80*n2 + 30*d*n2 - 4*n1*n2 - 
      8*n2^2 - 80*n3 + 30*d*n3 - 4*n1*n3 - 16*n2*n3 - 8*n3^2 - 96*n4 + 
      36*d*n4 - 4*n1*n4 - 20*n2*n4 - 20*n3*n4 - 12*n4^2 - 96*n5 + 36*d*n5 - 
      4*n1*n5 - 20*n2*n5 - 20*n3*n5 - 24*n4*n5 - 12*n5^2 - 96*n7 + 36*d*n7 - 
      4*n1*n7 - 20*n2*n7 - 20*n3*n7 - 24*n4*n7 - 24*n5*n7 - 12*n7^2)*
     j[p4, -1 + n1, n2, n3, n4, n5, 1, 1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((24 - 9*d + 2*n1 + 4*n2 + 4*n3 + 6*n4 + 6*n5 + 6*n7)*
     j[p4, -1 + n1, n2, n3, n4, n5, 1, 1 + n7, 1, 0, 2, 1, 0, 0, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*j[p4, -1 + n1, n2, n3, n4, 
      n5, 1, 1 + n7, 2, 0, 1, 1, 0, 0, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8*n5 - 3*d*n5 + n2*n5 + 2*n3*n5 + 2*n4*n5 + 2*n5^2 + 2*n5*n7)*
     j[p4, -1 + n1, n2, n3, n4, 1 + n5, 0, 1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    (-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 28*n3 + 
     11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 2*n1*n4 - 
     4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 
     6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 8*n4*n7 - 
     2*n5*n7 - 2*n7^2) + ((-8*n5 + 3*d*n5 - 2*n1*n5 - 2*n2*n5 - 2*n4*n5 - 
      2*n5^2 - 2*n5*n7)*j[p4, -1 + n1, n2, n3, n4, 1 + n5, 1, 1 + n7, 1, 0, 
      1, 1, 0, 0, 1])/(2*(-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 
      3*d*n2 + 2*n1*n2 - 28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 
      34*n4 + 13*d*n4 + 2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 
      4*d*n5 + 4*n1*n5 - 6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 
      2*n2*n7 - 6*n3*n7 - 8*n4*n7 - 2*n5*n7 - 2*n7^2)) + 
   ((8*n5 - 3*d*n5 + 2*n1*n5 + 2*n2*n5 + 2*n4*n5 + 2*n5^2 + 2*n5*n7)*
     j[p4, -1 + n1, n2, n3, n4, 1 + n5, 1, 1 + n7, 1, 0, 1, 1, 0, 1, 0])/
    (2*(-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 
      28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 
      2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 
      6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 
      8*n4*n7 - 2*n5*n7 - 2*n7^2)) + 
   ((-8*n4 + 3*d*n4 - n2*n4 - 2*n3*n4 - 2*n4^2 - 2*n4*n5 - 2*n4*n7)*
     j[p4, -1 + n1, n2, n3, 1 + n4, n5, 0, 1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((8*n4 - 3*d*n4 + n2*n4 + 2*n3*n4 + 2*n4^2 + 
      2*n4*n5 + 2*n4*n7)*j[p4, -1 + n1, n2, n3, 1 + n4, n5, 1, 1 + n7, 0, 0, 
      1, 1, 0, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 
     2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 
     13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 
     4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 
     6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-8*n4 + 3*d*n4 - 2*n1*n4 - 2*n2*n4 - 2*n4^2 - 2*n4*n5 - 2*n4*n7)*
     j[p4, -1 + n1, n2, n3, 1 + n4, n5, 1, 1 + n7, 1, 0, 1, 1, 0, 1, 0])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((16*n3 - 6*d*n3 + 2*n2*n3 + 4*n3^2 + 4*n3*n4 + 4*n3*n5 + 4*n3*n7)*
     j[p4, -1 + n1, n2, 1 + n3, n4, n5, 1, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((24*n3 - 9*d*n3 + 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
      6*n3*n4 + 6*n3*n5 + 6*n3*n7)*j[p4, -1 + n1, n2, 1 + n3, n4, n5, 1, 
      1 + n7, 1, 0, 1, 1, 0, 0, 1])/(2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
      8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
      4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
      10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 
      2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-24*n2 + 9*d*n2 - 2*n1*n2 - 4*n2^2 - 4*n2*n3 - 6*n2*n4 - 6*n2*n5 - 
      6*n2*n7)*j[p4, -1 + n1, 1 + n2, n3, n4, n5, 1, 1 + n7, 0, 0, 1, 1, 0, 
      1, 1])/(2*(-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 
      2*n1*n2 - 28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 
      13*d*n4 + 2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 
      4*n1*n5 - 6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 
      6*n3*n7 - 8*n4*n7 - 2*n5*n7 - 2*n7^2)) + 
   ((-8*n2 + 3*d*n2 - 2*n1*n2 - 2*n2^2 - 2*n2*n4 - 2*n2*n5 - 2*n2*n7)*
     j[p4, -1 + n1, 1 + n2, n3, n4, n5, 1, 1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    (-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 28*n3 + 
     11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 2*n1*n4 - 
     4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 
     6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 8*n4*n7 - 
     2*n5*n7 - 2*n7^2) + ((-24 + 9*d - 2*n1 - 4*n2 - 4*n3 - 6*n4 - 6*n5 - 
      6*n7)*j[p4, n1, -1 + n2, n3, n4, n5, 1, 1 + n7, 0, 0, 2, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, -1 + n2, n3, n4, 
      n5, 1, 1 + n7, 1, 0, 1, 1, 0, 0, 2])/(40 - 31*d + 6*d^2 - 10*n1 + 
     4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
     4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
     10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 
     2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((80 - 62*d + 12*d^2 + 26*n2 - 10*d*n2 + 2*n2^2 + 36*n3 - 14*d*n3 + 
      6*n2*n3 + 4*n3^2 + 52*n4 - 20*d*n4 + 8*n2*n4 + 12*n3*n4 + 8*n4^2 + 
      36*n5 - 14*d*n5 + 6*n2*n5 + 8*n3*n5 + 12*n4*n5 + 4*n5^2 + 36*n7 - 
      14*d*n7 + 6*n2*n7 + 8*n3*n7 + 12*n4*n7 + 8*n5*n7 + 4*n7^2)*
     j[p4, n1, -1 + n2, n3, n4, n5, 1, 1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((-8 + 3*d - n2 - 2*n3 - 2*n4 - 2*n5 - 2*n7)*
     j[p4, n1, -1 + n2, n3, n4, n5, 1, 1 + n7, 1, 0, 2, 0, 0, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((-24 + 9*d - 2*n1 - 4*n2 - 4*n3 - 6*n4 - 6*n5 - 
      6*n7)*j[p4, n1, -1 + n2, n3, n4, n5, 1, 1 + n7, 1, 0, 2, 1, 0, 0, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 10*n7 - 3*d*n7 + n2*n7 + 2*n3*n7 + 
      2*n4*n7 + 2*n5*n7 + 2*n7^2)*j[p4, n1, -1 + n2, n3, n4, n5, 1, 2 + n7, 
      1, 0, 0, 1, 0, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 
     3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-8 + 3*d - n2 - 2*n3 - 2*n4 - 2*n5 - 10*n7 + 3*d*n7 - n2*n7 - 2*n3*n7 - 
      2*n4*n7 - 2*n5*n7 - 2*n7^2)*j[p4, n1, -1 + n2, n3, n4, n5, 1, 2 + n7, 
      1, 0, 1, 0, 0, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 
     3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-24 + 9*d - 2*n1 - 4*n2 - 4*n3 - 6*n4 - 6*n5 - 30*n7 + 9*d*n7 - 
      2*n1*n7 - 4*n2*n7 - 4*n3*n7 - 6*n4*n7 - 6*n5*n7 - 6*n7^2)*
     j[p4, n1, -1 + n2, n3, n4, n5, 1, 2 + n7, 1, 0, 1, 1, 0, 0, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8 + 3*d + 2*n1 - 4*n3 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, -1 + n2, n3, n4, 
      n5, 2, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, -1 + n2, n3, n4, 
      n5, 2, 1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, -1 + n2, n3, n4, 
      n5, 2, 1 + n7, 1, 0, 1, 1, 0, 1, 0])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((16*n5 - 6*d*n5 + 2*n1*n5 + 3*n2*n5 + 2*n3*n5 + 4*n4*n5 + 4*n5^2 + 
      4*n5*n7)*j[p4, n1, -1 + n2, n3, n4, 1 + n5, 1, 1 + n7, 1, 0, 1, 1, 0, 
      0, 1])/(-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 
     28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 
     2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 
     6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 
     8*n4*n7 - 2*n5*n7 - 2*n7^2) + 
   ((-16*n5 + 6*d*n5 - 2*n1*n5 - 3*n2*n5 - 2*n3*n5 - 4*n4*n5 - 4*n5^2 - 
      4*n5*n7)*j[p4, n1, -1 + n2, n3, n4, 1 + n5, 1, 1 + n7, 1, 0, 1, 1, 0, 
      1, 0])/(-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 
     28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 
     2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 
     6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 
     8*n4*n7 - 2*n5*n7 - 2*n7^2) + 
   ((8*n4 - 3*d*n4 + n2*n4 + 2*n3*n4 + 2*n4^2 + 2*n4*n5 + 2*n4*n7)*
     j[p4, n1, -1 + n2, n3, 1 + n4, n5, 0, 1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((-8*n4 + 3*d*n4 - n2*n4 - 2*n3*n4 - 2*n4^2 - 
      2*n4*n5 - 2*n4*n7)*j[p4, n1, -1 + n2, n3, 1 + n4, n5, 1, 1 + n7, 0, 0, 
      1, 1, 0, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 
     2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 
     13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 
     4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 
     6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((8*n4 - 3*d*n4 + 2*n1*n4 + 2*n2*n4 + 2*n4^2 + 2*n4*n5 + 2*n4*n7)*
     j[p4, n1, -1 + n2, n3, 1 + n4, n5, 1, 1 + n7, 1, 0, 1, 1, 0, 1, 0])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8*n3 + 3*d*n3 - n2*n3 - 2*n3^2 - 2*n3*n4 - 2*n3*n5 - 2*n3*n7)*
     j[p4, n1, -1 + n2, 1 + n3, n4, n5, 1, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((8*n3 - 3*d*n3 + n2*n3 + 2*n3^2 + 2*n3*n4 + 
      2*n3*n5 + 2*n3*n7)*j[p4, n1, -1 + n2, 1 + n3, n4, n5, 1, 1 + n7, 1, 0, 
      0, 1, 0, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 
     2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 
     13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 
     4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 
     6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-8*n3 + 3*d*n3 - n2*n3 - 2*n3^2 - 2*n3*n4 - 2*n3*n5 - 2*n3*n7)*
     j[p4, n1, -1 + n2, 1 + n3, n4, n5, 1, 1 + n7, 1, 0, 1, 0, 0, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((-8*n3 + 3*d*n3 + 2*n1*n3 - 4*n3^2 - 2*n3*n4 - 
      2*n3*n5 - 2*n3*n7)*j[p4, n1, -1 + n2, 1 + n3, n4, n5, 1, 1 + n7, 1, 0, 
      1, 1, 0, 0, 1])/(2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 
      3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
      34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
      2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, n2, -1 + n3, n4, 
      n5, 1, 1 + n7, 1, 0, 1, 1, 0, 0, 2])/(40 - 31*d + 6*d^2 - 10*n1 + 
     4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
     4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
     10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 
     2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-40 + 31*d - 6*d^2 - 10*n1 + 4*d*n1 - 18*n2 + 7*d*n2 - 2*n1*n2 - 
      2*n2^2 - 8*n3 + 3*d*n3 - 2*n1*n3 - 2*n2*n3 - 18*n4 + 7*d*n4 - 2*n1*n4 - 
      4*n2*n4 - 2*n3*n4 - 2*n4^2 - 26*n5 + 10*d*n5 - 4*n1*n5 - 6*n2*n5 - 
      2*n3*n5 - 6*n4*n5 - 4*n5^2 - 18*n7 + 7*d*n7 - 2*n1*n7 - 4*n2*n7 - 
      2*n3*n7 - 4*n4*n7 - 6*n5*n7 - 2*n7^2)*j[p4, n1, n2, -1 + n3, n4, n5, 1, 
      1 + n7, 1, 0, 1, 1, 0, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-8 + 3*d - n2 - 2*n3 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, -1 + n3, n4, 
      n5, 1, 1 + n7, 1, 0, 2, 0, 0, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 
     4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
     4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
     10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 
     2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((24 - 9*d + 2*n1 + 4*n2 + 4*n3 + 6*n4 + 6*n5 + 30*n7 - 9*d*n7 + 2*n1*n7 + 
      4*n2*n7 + 4*n3*n7 + 6*n4*n7 + 6*n5*n7 + 6*n7^2)*
     j[p4, n1, n2, -1 + n3, n4, n5, 1, 2 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 10*n7 + 3*d*n7 - 2*n1*n7 - 
      2*n2*n7 - 2*n4*n7 - 2*n5*n7 - 2*n7^2)*j[p4, n1, n2, -1 + n3, n4, n5, 1, 
      2 + n7, 1, 0, 0, 1, 0, 1, 1])/(2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
      8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
      4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
      10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 
      2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 10*n7 - 3*d*n7 + 2*n1*n7 + 
      2*n2*n7 + 2*n4*n7 + 2*n5*n7 + 2*n7^2)*j[p4, n1, n2, -1 + n3, n4, n5, 1, 
      2 + n7, 1, 0, 1, 0, 0, 1, 1])/(2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
      8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
      4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
      10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 
      2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8 + 3*d - n2 - 2*n3 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, -1 + n3, n4, 
      n5, 2, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 
     4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
     4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
     10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 
     2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, -1 + n3, n4, 
      n5, 2, 1 + n7, 1, 0, 0, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-16*n4 + 6*d*n4 - 2*n1*n4 - 3*n2*n4 - 2*n3*n4 - 4*n4^2 - 4*n4*n5 - 
      4*n4*n7)*j[p4, n1, n2, -1 + n3, 1 + n4, n5, 0, 1 + n7, 1, 0, 1, 1, 0, 
      1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
     28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
     2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
     6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
     8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((24*n4 - 9*d*n4 + 2*n1*n4 + 4*n2*n4 + 4*n3*n4 + 6*n4^2 + 6*n4*n5 + 
      6*n4*n7)*j[p4, n1, n2, -1 + n3, 1 + n4, n5, 1, 1 + n7, 0, 0, 1, 1, 0, 
      1, 1])/(2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 
      2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 
      13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 
      4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 
      6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8*n4 + 3*d*n4 - 2*n1*n4 - 2*n2*n4 - 2*n4^2 - 2*n4*n5 - 2*n4*n7)*
     j[p4, n1, n2, -1 + n3, 1 + n4, n5, 1, 1 + n7, 1, 0, 0, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8*n4 - 3*d*n4 + 2*n1*n4 + 2*n2*n4 + 2*n4^2 + 2*n4*n5 + 2*n4*n7)*
     j[p4, n1, n2, -1 + n3, 1 + n4, n5, 1, 1 + n7, 1, 0, 1, 0, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((32 - 28*d + 6*d^2 + 4*n2 - 2*d*n2 + 8*n3 - 4*d*n3 + 24*n4 - 10*d*n4 + 
      2*n2*n4 + 4*n3*n4 + 4*n4^2 + 24*n5 - 10*d*n5 + 2*n2*n5 + 4*n3*n5 + 
      8*n4*n5 + 4*n5^2 + 8*n7 - 4*d*n7 + 4*n4*n7 + 4*n5*n7)*
     j[p4, n1, n2, n3, -1 + n4, n5, 1, 1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*
     j[p4, n1, n2, n3, -1 + n4, n5, 2, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((-8 + 3*d - n2 - 2*n3 - 2*n4 - 2*n5 - 2*n7)*
     j[p4, n1, n2, n3, -1 + n4, n5, 2, 1 + n7, 1, 0, 0, 1, 0, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*
     j[p4, n1, n2, n3, -1 + n4, n5, 2, 1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*
     j[p4, n1, n2, n3, -1 + n4, n5, 2, 1 + n7, 1, 0, 1, 1, 0, 1, 0])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((8*n5 - 3*d*n5 + n2*n5 + 2*n3*n5 + 2*n4*n5 + 
      2*n5^2 + 2*n5*n7)*j[p4, n1, n2, n3, -1 + n4, 1 + n5, 1, 1 + n7, 1, 0, 
      1, 1, 0, 0, 1])/(-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 
     2*n1*n2 - 28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 
     13*d*n4 + 2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 
     4*n1*n5 - 6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 
     6*n3*n7 - 8*n4*n7 - 2*n5*n7 - 2*n7^2) + 
   ((-8*n5 + 3*d*n5 - n2*n5 - 2*n3*n5 - 2*n4*n5 - 2*n5^2 - 2*n5*n7)*
     j[p4, n1, n2, n3, -1 + n4, 1 + n5, 1, 1 + n7, 1, 0, 1, 1, 0, 1, 0])/
    (-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 28*n3 + 
     11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 2*n1*n4 - 
     4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 
     6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 8*n4*n7 - 
     2*n5*n7 - 2*n7^2) + ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*
     j[p4, n1, n2, n3, n4, -1 + n5, 0, 1 + n7, 1, 0, 1, 1, 0, 1, 2])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*
     j[p4, n1, n2, n3, n4, -1 + n5, 1, 1 + n7, 0, 0, 1, 1, 0, 1, 2])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*
     j[p4, n1, n2, n3, n4, -1 + n5, 1, 1 + n7, 1, 0, 1, 1, 0, 0, 2])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((-16 + 14*d - 3*d^2 - 4*n1 + 2*d*n1 - 4*n2 + 
      2*d*n2 - 12*n4 + 5*d*n4 - 2*n1*n4 - 2*n2*n4 - 2*n4^2 - 12*n5 + 5*d*n5 - 
      2*n1*n5 - 2*n2*n5 - 4*n4*n5 - 2*n5^2 - 4*n7 + 2*d*n7 - 2*n4*n7 - 
      2*n5*n7)*j[p4, n1, n2, n3, n4, -1 + n5, 1, 1 + n7, 1, 0, 1, 1, 0, 1, 
      1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
     28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
     2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
     6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
     8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, n3, n4, 
      -1 + n5, 2, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, n3, n4, 
      -1 + n5, 2, 1 + n7, 1, 0, 0, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, n3, n4, 
      -1 + n5, 2, 1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, n3, n4, 
      -1 + n5, 2, 1 + n7, 1, 0, 1, 1, 0, 1, 0])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, n2, n3, n4, n5, 0, 
      1 + n7, 1, -1, 1, 1, 0, 1, 2])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-2*n1 - n2 + 2*n3 + 8*n5 - 3*d*n5 + 2*n1*n5 + 2*n2*n5 + 2*n4*n5 + 
      2*n5^2 + 2*n5*n7)*j[p4, n1, n2, n3, n4, n5, 0, 1 + n7, 1, 0, 1, 1, 0, 
      1, 1])/(-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 
     28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 
     2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 
     6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 
     8*n4*n7 - 2*n5*n7 - 2*n7^2) + 
   ((-8 + 3*d - n2 - 2*n3 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, n3, n4, n5, 0, 
      1 + n7, 1, 0, 1, 1, 0, 1, 2])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, n2, n3, n4, n5, 1, 
      n7, 0, 0, 2, 1, 0, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 
     3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, n3, n4, n5, 
      1, n7, 1, 0, 1, 1, 0, 0, 2])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, n2, n3, n4, n5, 1, 
      n7, 1, 0, 2, 0, 0, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 
     3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, n2, n3, n4, n5, 1, 
      n7, 1, 0, 2, 1, 0, 0, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 
     3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, n2, n3, n4, n5, 1, 
      1 + n7, 0, -1, 1, 1, 0, 1, 2])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-8 + 3*d + 14*n1 - 6*d*n1 - 42*n2 + 15*d*n2 - 6*n2^2 + 56*n3 - 21*d*n3 + 
      10*n1*n3 + 2*n2*n3 + 8*n3^2 - 18*n4 + 6*d*n4 + 4*n1*n4 - 12*n2*n4 + 
      10*n3*n4 - 4*n4^2 - 2*n5 + 4*n1*n5 - 10*n2*n5 + 14*n3*n5 - 4*n4*n5 - 
      10*n7 + 3*d*n7 + 2*n1*n7 - 12*n2*n7 + 14*n3*n7 - 6*n4*n7 - 2*n5*n7 - 
      2*n7^2)*j[p4, n1, n2, n3, n4, n5, 1, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8 + 3*d - n2 - 2*n3 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, n3, n4, n5, 1, 
      1 + n7, 0, 0, 1, 1, 0, 1, 2])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-8 + 3*d - n2 - 2*n3 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, n3, n4, n5, 1, 
      1 + n7, 0, 0, 1, 1, 0, 2, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-24 + 9*d - 2*n1 - 4*n2 - 4*n3 - 6*n4 - 6*n5 - 6*n7)*
     j[p4, n1, n2, n3, n4, n5, 1, 1 + n7, 0, 0, 1, 2, -1, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((24 - 9*d + 2*n1 + 4*n2 + 4*n3 + 6*n4 + 6*n5 + 6*n7)*
     j[p4, n1, n2, n3, n4, n5, 1, 1 + n7, 0, 0, 1, 2, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((24 - 9*d + 2*n1 + 4*n2 + 4*n3 + 6*n4 + 6*n5 + 6*n7)*
     j[p4, n1, n2, n3, n4, n5, 1, 1 + n7, 1, -1, 1, 1, 0, 0, 2])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8 - 3*d + 2*n1 + 18*n2 - 6*d*n2 + 2*n2^2 - 8*n3 + 3*d*n3 - 2*n1*n3 + 
      2*n2*n3 - 14*n4 + 6*d*n4 + 2*n2*n4 - 6*n3*n4 - 4*n4^2 + 2*n5 + 
      4*n2*n5 - 2*n3*n5 - 4*n4*n5 - 6*n7 + 3*d*n7 + 2*n1*n7 + 4*n2*n7 - 
      6*n3*n7 - 6*n4*n7 - 2*n5*n7 - 2*n7^2)*j[p4, n1, n2, n3, n4, n5, 1, 
      1 + n7, 1, 0, 0, 1, 0, 1, 1])/(2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
      8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
      4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
      10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 
      2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-16*n1 + 6*d*n1 - 2*n1*n2 + 8*n3 - 3*d*n3 - 2*n1*n3 + 2*n2*n3 + 16*n4 - 
      6*d*n4 - 4*n1*n4 + 2*n2*n4 + 6*n3*n4 + 4*n4^2 - 4*n1*n5 + 2*n3*n5 + 
      4*n4*n5 + 8*n7 - 3*d*n7 - 6*n1*n7 + 6*n3*n7 + 6*n4*n7 + 2*n5*n7 + 
      2*n7^2)*j[p4, n1, n2, n3, n4, n5, 1, 1 + n7, 1, 0, 1, 0, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, n2, n3, n4, n5, 1, 
      1 + n7, 1, 0, 1, 1, -1, 0, 2])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-8 + 3*d - 22*n1 + 6*d*n1 - 52*n2 + 18*d*n2 - 6*n1*n2 - 8*n2^2 + 44*n3 - 
      15*d*n3 + 2*n1*n3 + 4*n3^2 - 2*n4 - 4*n1*n4 - 12*n2*n4 + 10*n3*n4 + 
      6*n5 - 3*d*n5 - 2*n1*n5 - 10*n2*n5 + 10*n3*n5 + 2*n4*n5 + 2*n5^2 + 
      14*n7 - 6*d*n7 - 4*n1*n7 - 10*n2*n7 + 14*n3*n7 + 4*n4*n7 + 6*n5*n7 + 
      4*n7^2)*j[p4, n1, n2, n3, n4, n5, 1, 1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-24 + 9*d - 2*n1 - 4*n2 - 4*n3 - 6*n4 - 6*n5 - 6*n7)*
     j[p4, n1, n2, n3, n4, n5, 1, 1 + n7, 1, 0, 1, 1, 0, 0, 2])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-16 + 6*d - 2*n2 - 4*n3 + 12*n4 - 6*d*n4 + 2*n2*n4 + 4*n3*n4 + 4*n4^2 - 
      12*n5 + 3*d*n5 - 2*n1*n5 - 2*n2*n5 + 2*n4*n5 - 2*n5^2 - 4*n7 + 
      4*n4*n7 - 2*n5*n7)*j[p4, n1, n2, n3, n4, n5, 1, 1 + n7, 1, 0, 1, 1, 0, 
      1, 0])/(2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 
      2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 
      13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 
      4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 
      6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((64 - 48*d + 9*d^2 + 16*n1 - 6*d*n1 + 32*n2 - 12*d*n2 + 4*n1*n2 + 
      4*n2^2 + 16*n3 - 6*d*n3 + 4*n1*n3 + 4*n2*n3 + 32*n4 - 12*d*n4 + 
      4*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 32*n5 - 12*d*n5 + 4*n1*n5 + 
      8*n2*n5 + 4*n3*n5 + 8*n4*n5 + 4*n5^2 + 32*n7 - 12*d*n7 + 4*n1*n7 + 
      8*n2*n7 + 4*n3*n7 + 8*n4*n7 + 8*n5*n7 + 4*n7^2)*
     j[p4, n1, n2, n3, n4, n5, 1, 1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8 + 3*d - n2 - 2*n3 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, n3, n4, n5, 1, 
      1 + n7, 1, 0, 2, 0, -1, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, n2, n3, n4, n5, 1, 
      1 + n7, 1, 0, 2, 0, 0, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, n3, n4, n5, 
      1, 1 + n7, 2, 0, 1, 0, -1, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, n2, n3, n4, n5, 2, 
      n7, 0, 0, 1, 1, 0, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 
     3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, n2, n3, n4, n5, 2, 
      n7, 1, 0, 0, 1, 0, 1, 1])/(2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
      8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
      4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
      10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 
      2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((24 - 9*d + 2*n1 + 4*n2 + 4*n3 + 6*n4 + 6*n5 + 6*n7)*
     j[p4, n1, n2, n3, n4, n5, 2, 1 + n7, 0, -1, 1, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8 + 3*d - n2 - 2*n3 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, n3, n4, n5, 2, 
      1 + n7, 0, 0, 1, 1, -1, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, n2, n3, n4, n5, 2, 
      1 + n7, 1, -1, 1, 1, 0, 0, 1])/(2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
      8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
      4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
      10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 
      2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, n2, n3, n4, n5, 2, 
      1 + n7, 1, -1, 1, 1, 0, 1, 0])/(2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
      8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
      4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
      10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 
      2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, n3, n4, n5, 
      2, 1 + n7, 1, 0, 0, 1, -1, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8*n5 + 3*d*n5 - n2*n5 - 2*n3*n5 - 2*n4*n5 - 2*n5^2 - 2*n5*n7)*
     j[p4, n1, n2, n3, n4, 1 + n5, 0, 1 + n7, 1, -1, 1, 1, 0, 1, 1])/
    (-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 28*n3 + 
     11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 2*n1*n4 - 
     4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 
     6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 8*n4*n7 - 
     2*n5*n7 - 2*n7^2) + ((-8*n5 + 3*d*n5 - n2*n5 - 2*n3*n5 - 2*n4*n5 - 
      2*n5^2 - 2*n5*n7)*j[p4, n1, n2, n3, n4, 1 + n5, 1, n7, 1, 0, 1, 1, 0, 
      0, 1])/(-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 
     28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 
     2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 
     6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 
     8*n4*n7 - 2*n5*n7 - 2*n7^2) + 
   ((8*n5 - 3*d*n5 + n2*n5 + 2*n3*n5 + 2*n4*n5 + 2*n5^2 + 2*n5*n7)*
     j[p4, n1, n2, n3, n4, 1 + n5, 1, n7, 1, 0, 1, 1, 0, 1, 0])/
    (-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 28*n3 + 
     11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 2*n1*n4 - 
     4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 
     6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 8*n4*n7 - 
     2*n5*n7 - 2*n7^2) + ((8*n5 - 3*d*n5 + 2*n1*n5 + 2*n2*n5 + 2*n4*n5 + 
      2*n5^2 + 2*n5*n7)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 1 + n7, 1, -1, 1, 1, 
      0, 0, 1])/(2*(-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 
      2*n1*n2 - 28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 
      13*d*n4 + 2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 
      4*n1*n5 - 6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 
      6*n3*n7 - 8*n4*n7 - 2*n5*n7 - 2*n7^2)) + 
   ((-8*n5 + 3*d*n5 - 2*n1*n5 - 2*n2*n5 - 2*n4*n5 - 2*n5^2 - 2*n5*n7)*
     j[p4, n1, n2, n3, n4, 1 + n5, 1, 1 + n7, 1, -1, 1, 1, 0, 1, 0])/
    (2*(-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 
      28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 
      2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 
      6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 
      8*n4*n7 - 2*n5*n7 - 2*n7^2)) + 
   ((-8*n4 + 3*d*n4 - 2*n1*n4 - 2*n2*n4 - 2*n4^2 - 2*n4*n5 - 2*n4*n7)*
     j[p4, n1, n2, n3, 1 + n4, -1 + n5, 0, 1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((8*n4 - 3*d*n4 + 2*n1*n4 + 2*n2*n4 + 2*n4^2 + 
      2*n4*n5 + 2*n4*n7)*j[p4, n1, n2, n3, 1 + n4, -1 + n5, 1, 1 + n7, 0, 0, 
      1, 1, 0, 1, 1])/(2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 
      3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
      34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
      2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8*n4 + 3*d*n4 - 2*n1*n4 - 2*n2*n4 - 2*n4^2 - 2*n4*n5 - 2*n4*n7)*
     j[p4, n1, n2, n3, 1 + n4, -1 + n5, 1, 1 + n7, 1, 0, 0, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8*n4 - 3*d*n4 + 2*n1*n4 + 2*n2*n4 + 2*n4^2 + 2*n4*n5 + 2*n4*n7)*
     j[p4, n1, n2, n3, 1 + n4, -1 + n5, 1, 1 + n7, 1, 0, 1, 0, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8*n4 + 3*d*n4 - 2*n1*n4 - 2*n2*n4 - 2*n4^2 - 2*n4*n5 - 2*n4*n7)*
     j[p4, n1, n2, n3, 1 + n4, -1 + n5, 1, 1 + n7, 1, 0, 1, 1, 0, 1, 0])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-2*n1*n4 - n2*n4 + 2*n3*n4)*j[p4, n1, n2, n3, 1 + n4, n5, 0, n7, 1, 0, 
      1, 1, 0, 1, 1])/(-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 
     2*n1*n2 - 28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 
     13*d*n4 + 2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 
     4*n1*n5 - 6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 
     6*n3*n7 - 8*n4*n7 - 2*n5*n7 - 2*n7^2) + 
   ((8*n4 - 3*d*n4 + n2*n4 + 2*n3*n4 + 2*n4^2 + 2*n4*n5 + 2*n4*n7)*
     j[p4, n1, n2, n3, 1 + n4, n5, 0, 1 + n7, 1, -1, 1, 1, 0, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((8*n4 - 3*d*n4 - 2*n1*n4 + 4*n3*n4 + 2*n4^2 + 
      2*n4*n5 + 2*n4*n7)*j[p4, n1, n2, n3, 1 + n4, n5, 1, n7, 0, 0, 1, 1, 0, 
      1, 1])/(2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 
      2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 
      13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 
      4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 
      6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8*n4 - 3*d*n4 + 2*n1*n4 + 2*n2*n4 + 2*n4^2 + 2*n4*n5 + 2*n4*n7)*
     j[p4, n1, n2, n3, 1 + n4, n5, 1, n7, 1, 0, 0, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8*n4 + 3*d*n4 - 2*n1*n4 - 2*n2*n4 - 2*n4^2 - 2*n4*n5 - 2*n4*n7)*
     j[p4, n1, n2, n3, 1 + n4, n5, 1, n7, 1, 0, 1, 0, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8*n4 + 3*d*n4 - n2*n4 - 2*n3*n4 - 2*n4^2 - 2*n4*n5 - 2*n4*n7)*
     j[p4, n1, n2, n3, 1 + n4, n5, 1, 1 + n7, 0, -1, 1, 1, 0, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((8*n4 - 3*d*n4 + 2*n1*n4 + 2*n2*n4 + 2*n4^2 + 
      2*n4*n5 + 2*n4*n7)*j[p4, n1, n2, n3, 1 + n4, n5, 1, 1 + n7, 1, -1, 1, 
      1, 0, 1, 0])/(2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 
      2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 
      13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 
      4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 
      6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8*n3 + 3*d*n3 - 6*n1*n3 - 4*n2*n3 + 4*n3^2 - 2*n3*n4 - 2*n3*n5 - 
      2*n3*n7)*j[p4, n1, n2, 1 + n3, n4, n5, 1, n7, 0, 0, 1, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8*n3 + 3*d*n3 + 2*n1*n3 - 4*n3^2 - 2*n3*n4 - 2*n3*n5 - 2*n3*n7)*
     j[p4, n1, n2, 1 + n3, n4, n5, 1, n7, 1, 0, 0, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8*n3 - 3*d*n3 - 2*n1*n3 + 4*n3^2 + 2*n3*n4 + 2*n3*n5 + 2*n3*n7)*
     j[p4, n1, n2, 1 + n3, n4, n5, 1, n7, 1, 0, 1, 0, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8*n3 + 3*d*n3 - 6*n1*n3 - 4*n2*n3 + 4*n3^2 - 2*n3*n4 - 2*n3*n5 - 
      2*n3*n7)*j[p4, n1, n2, 1 + n3, n4, n5, 1, n7, 1, 0, 1, 1, 0, 0, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8*n3 - 3*d*n3 + n2*n3 + 2*n3^2 + 2*n3*n4 + 2*n3*n5 + 2*n3*n7)*
     j[p4, n1, n2, 1 + n3, n4, n5, 1, 1 + n7, 0, 0, 1, 1, -1, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((-16*n3 + 6*d*n3 - 2*n2*n3 - 4*n3^2 - 4*n3*n4 - 
      4*n3*n5 - 4*n3*n7)*j[p4, n1, n2, 1 + n3, n4, n5, 1, 1 + n7, 0, 0, 1, 1, 
      0, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 
     2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 
     13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 
     4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 
     6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((8*n3 - 3*d*n3 + n2*n3 + 2*n3^2 + 2*n3*n4 + 2*n3*n5 + 2*n3*n7)*
     j[p4, n1, n2, 1 + n3, n4, n5, 1, 1 + n7, 1, 0, 0, 1, -1, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((-8*n3 + 3*d*n3 - n2*n3 - 2*n3^2 - 2*n3*n4 - 
      2*n3*n5 - 2*n3*n7)*j[p4, n1, n2, 1 + n3, n4, n5, 1, 1 + n7, 1, 0, 1, 0, 
      -1, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 
     2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 
     13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 
     4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 
     6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((8*n3 - 3*d*n3 + 2*n1*n3 + 2*n2*n3 + 2*n3*n4 + 2*n3*n5 + 2*n3*n7)*
     j[p4, n1, n2, 1 + n3, n4, n5, 1, 1 + n7, 1, 0, 1, 1, -1, 0, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((-24*n3 + 9*d*n3 - 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 
      6*n3*n4 - 6*n3*n5 - 6*n3*n7)*j[p4, n1, n2, 1 + n3, n4, n5, 1, 1 + n7, 
      1, 0, 1, 1, 0, 0, 1])/(2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 
      3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
      34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
      2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8*n2 - 3*d*n2 + n2^2 + 2*n2*n3 + 2*n2*n4 + 2*n2*n5 + 2*n2*n7)*
     j[p4, n1, 1 + n2, -1 + n3, n4, n5, 1, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 28*n3 + 
     11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 2*n1*n4 - 
     4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 
     6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 8*n4*n7 - 
     2*n5*n7 - 2*n7^2) + ((8*n2 - 3*d*n2 + 2*n1*n2 + 2*n2^2 + 2*n2*n4 + 
      2*n2*n5 + 2*n2*n7)*j[p4, n1, 1 + n2, -1 + n3, n4, n5, 1, 1 + n7, 1, 0, 
      0, 1, 0, 1, 1])/(2*(-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 
      3*d*n2 + 2*n1*n2 - 28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 
      34*n4 + 13*d*n4 + 2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 
      4*d*n5 + 4*n1*n5 - 6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 
      2*n2*n7 - 6*n3*n7 - 8*n4*n7 - 2*n5*n7 - 2*n7^2)) + 
   ((-16*n2 + 6*d*n2 - 2*n2^2 - 4*n2*n3 - 4*n2*n4 - 4*n2*n5 - 4*n2*n7)*
     j[p4, n1, 1 + n2, n3, n4, n5, 1, n7, 0, 0, 1, 1, 0, 1, 1])/
    (-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 28*n3 + 
     11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 2*n1*n4 - 
     4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 
     6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 8*n4*n7 - 
     2*n5*n7 - 2*n7^2) + ((8*n2 - 3*d*n2 - 2*n1*n2 + 4*n2*n3 + 2*n2*n4 + 
      2*n2*n5 + 2*n2*n7)*j[p4, n1, 1 + n2, n3, n4, n5, 1, n7, 1, 0, 0, 1, 0, 
      1, 1])/(2*(-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 
      2*n1*n2 - 28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 
      13*d*n4 + 2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 
      4*n1*n5 - 6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 
      6*n3*n7 - 8*n4*n7 - 2*n5*n7 - 2*n7^2)) + 
   ((-16*n2 + 6*d*n2 - 2*n2^2 - 4*n2*n3 - 4*n2*n4 - 4*n2*n5 - 4*n2*n7)*
     j[p4, n1, 1 + n2, n3, n4, n5, 1, n7, 1, 0, 1, 1, 0, 0, 1])/
    (-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 28*n3 + 
     11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 2*n1*n4 - 
     4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 
     6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 8*n4*n7 - 
     2*n5*n7 - 2*n7^2) + ((8*n2 - 3*d*n2 + n2^2 + 2*n2*n3 + 2*n2*n4 + 
      2*n2*n5 + 2*n2*n7)*j[p4, n1, 1 + n2, n3, n4, n5, 1, 1 + n7, 0, 0, 1, 1, 
      -1, 1, 1])/(-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 
     2*n1*n2 - 28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 
     13*d*n4 + 2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 
     4*n1*n5 - 6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 
     6*n3*n7 - 8*n4*n7 - 2*n5*n7 - 2*n7^2) + 
   ((8*n2 - 3*d*n2 + 2*n1*n2 + 2*n2^2 + 2*n2*n4 + 2*n2*n5 + 2*n2*n7)*
     j[p4, n1, 1 + n2, n3, n4, n5, 1, 1 + n7, 1, 0, 0, 1, -1, 1, 1])/
    (2*(-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 
      28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 
      2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 
      6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 
      8*n4*n7 - 2*n5*n7 - 2*n7^2)) + 
   ((-8*n1 + 3*d*n1 - n1*n2 - 2*n1*n3 - 2*n1*n4 - 2*n1*n5 - 2*n1*n7)*
     j[p4, 1 + n1, n2, n3, n4, n5, 1, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((8*n1 - 3*d*n1 + n1*n2 + 2*n1*n3 + 2*n1*n4 + 
      2*n1*n5 + 2*n1*n7)*j[p4, 1 + n1, n2, n3, n4, n5, 1, 1 + n7, 1, 0, 1, 0, 
      0, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 
     2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 
     13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 
     4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 
     6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n6 == 1 && 
    n7 == 0 && n8 == 1 && n9 != 0 -> 
  -j[p4, -1 + n1, n2, n3, n4, n5, 1, 0, 0, 1 + n9, 2, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4, -1 + n1, n2, n3, n4, n5, 1, 0, 1, 
     1 + n9, 0, 2, 0, 1, 1]/(-3 + d - n4 - n5 - n9) + 
   ((14 - 7*d + 2*n1 + 4*n2 + 4*n3 + 4*n4 + 4*n5)*j[p4, -1 + n1, n2, n3, n4, 
      n5, 1, 0, 1, 1 + n9, 1, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, -1 + n1, n2, n3, n4, n5, 1, 0, 1, 1 + n9, 2, 1, 0, 0, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + 
   ((-1 - n9)*j[p4, -1 + n1, n2, n3, n4, n5, 1, 0, 1, 2 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + j[p4, -1 + n1, n2, n3, n4, n5, 1, 0, 2, 
     1 + n9, 1, 1, 0, 0, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   (n5*j[p4, -1 + n1, n2, n3, n4, 1 + n5, 1, 0, 1, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n5*j[p4, -1 + n1, n2, n3, n4, 1 + n5, 1, 0, 1, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n4*j[p4, -1 + n1, n2, n3, 1 + n4, n5, 1, 0, 1, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n2*j[p4, -1 + n1, 1 + n2, n3, n4, n5, 1, 0, 1, 1 + n9, 1, 1, 0, 0, 1])/
    (-3 + d - n4 - n5 - n9) + j[p4, n1, -1 + n2, n3, n4, n5, 1, 0, 0, 1 + n9, 
     2, 1, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   ((-10 + 5*d - 2*n2 - 4*n3 - 4*n4 - 2*n5)*j[p4, n1, -1 + n2, n3, n4, n5, 1, 
      0, 1, 1 + n9, 1, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4, n1, -1 + n2, n3, n4, n5, 1, 0, 1, 1 + n9, 2, 0, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, n1, -1 + n2, n3, n4, n5, 1, 0, 1, 
     1 + n9, 2, 1, 0, 0, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   ((1 + n9)*j[p4, n1, -1 + n2, n3, n4, n5, 1, 0, 1, 2 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) - j[p4, n1, -1 + n2, n3, n4, n5, 1, 0, 2, 
     1 + n9, 1, 0, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, n1, -1 + n2, n3, n4, n5, 1, 0, 2, 1 + n9, 1, 1, 0, 0, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, n1, -1 + n2, n3, n4, n5, 2, 0, 0, 
     1 + n9, 1, 1, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, n1, -1 + n2, n3, n4, n5, 2, 0, 1, 1 + n9, 0, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) - 
   (n4*j[p4, n1, -1 + n2, n3, 1 + n4, n5, 1, 0, 1, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   ((8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n9)*j[p4, n1, n2, -1 + n3, n4, 
      n5, 1, 0, 1, 1 + n9, 1, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4, n1, n2, -1 + n3, n4, n5, 1, 0, 1, 1 + n9, 2, 0, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, n1, n2, -1 + n3, n4, n5, 2, 0, 0, 
     1 + n9, 1, 1, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, n1, n2, -1 + n3, n4, n5, 2, 0, 1, 1 + n9, 0, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + 
   (n4*j[p4, n1, n2, -1 + n3, 1 + n4, n5, 1, 0, 0, 1 + n9, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n4*j[p4, n1, n2, -1 + n3, 1 + n4, n5, 1, 0, 1, 1 + n9, 0, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (n4*j[p4, n1, n2, -1 + n3, 1 + n4, n5, 1, 0, 1, 1 + n9, 1, 0, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) + j[p4, n1, n2, n3, -1 + n4, n5, 1, 0, 1, 
    1 + n9, 1, 1, 0, 1, 1] + ((1 + n9)*j[p4, n1, n2, n3, -1 + n4, n5, 1, 0, 
      1, 2 + n9, 1, 1, 0, 1, 0])/(2*(3 - d + n4 + n5 + n9)) - 
   j[p4, n1, n2, n3, -1 + n4, n5, 2, 0, 0, 1 + n9, 1, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, n1, n2, n3, -1 + n4, n5, 2, 0, 1, 
     1 + n9, 0, 1, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, n1, n2, n3, -1 + n4, n5, 2, 0, 1, 1 + n9, 1, 1, 0, 0, 1]/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4, n1, n2, n3, -1 + n4, n5, 2, 0, 1, 
     1 + n9, 1, 1, 0, 1, 0]/(2*(-3 + d - n4 - n5 - n9)) - 
   (n5*j[p4, n1, n2, n3, -1 + n4, 1 + n5, 1, 0, 1, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n5*j[p4, n1, n2, n3, -1 + n4, 1 + n5, 1, 0, 1, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + j[p4, n1, n2, n3, n4, n5, 1, -1, 0, 1 + n9, 
     1, 2, 0, 1, 1]/(-3 + d - n4 - n5 - n9) - 
   j[p4, n1, n2, n3, n4, n5, 1, -1, 0, 1 + n9, 2, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + ((6 - 3*d - 2*n1 + 4*n3 + 4*n4)*
     j[p4, n1, n2, n3, n4, n5, 1, -1, 1, 1 + n9, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4, n1, n2, n3, n4, n5, 1, -1, 1, 1 + n9, 
     2, 0, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, n1, n2, n3, n4, n5, 1, -1, 1, 1 + n9, 2, 1, 0, 0, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + 
   ((-1 - n9)*j[p4, n1, n2, n3, n4, n5, 1, -1, 1, 2 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + j[p4, n1, n2, n3, n4, n5, 1, -1, 2, 1 + n9, 
     1, 0, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4, n1, n2, n3, n4, n5, 1, -1, 2, 1 + n9, 1, 1, 0, 0, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + 
   ((4 + n1 - n2 - n4 + n9)*j[p4, n1, n2, n3, n4, n5, 1, 0, 0, 1 + n9, 1, 1, 
      0, 1, 1])/(2*(3 - d + n4 + n5 + n9)) + 
   j[p4, n1, n2, n3, n4, n5, 1, 0, 0, 1 + n9, 1, 2, -1, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4, n1, n2, n3, n4, n5, 1, 0, 0, 1 + n9, 
     1, 2, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   ((-1 - n9)*j[p4, n1, n2, n3, n4, n5, 1, 0, 0, 2 + n9, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) + 
   ((n1 + n2 - n4 + n9)*j[p4, n1, n2, n3, n4, n5, 1, 0, 1, 1 + n9, 0, 1, 0, 
      1, 1])/(2*(3 - d + n4 + n5 + n9)) - 
   j[p4, n1, n2, n3, n4, n5, 1, 0, 1, 1 + n9, 0, 2, -1, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, n1, n2, n3, n4, n5, 1, 0, 1, 1 + n9, 
     0, 2, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   ((-2 - n1 + n4 - n9)*j[p4, n1, n2, n3, n4, n5, 1, 0, 1, 1 + n9, 1, 0, 0, 
      1, 1])/(2*(3 - d + n4 + n5 + n9)) + 
   (n1*j[p4, n1, n2, n3, n4, n5, 1, 0, 1, 1 + n9, 1, 1, 0, 0, 1])/
    (-3 + d - n4 - n5 - n9) + ((-1 + n4 - n9)*j[p4, n1, n2, n3, n4, n5, 1, 0, 
      1, 1 + n9, 1, 1, 0, 1, 0])/(2*(3 - d + n4 + n5 + n9)) + 
   ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n9)*j[p4, n1, n2, n3, n4, n5, 
      1, 0, 1, 1 + n9, 1, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4, n1, n2, n3, n4, n5, 1, 0, 1, 1 + n9, 2, 0, -1, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4, n1, n2, n3, n4, n5, 1, 0, 1, 1 + n9, 
     2, 0, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   ((-1 - n9)*j[p4, n1, n2, n3, n4, n5, 1, 0, 1, 2 + n9, 0, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) + 
   ((1 + n9)*j[p4, n1, n2, n3, n4, n5, 1, 0, 1, 2 + n9, 1, 0, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) - j[p4, n1, n2, n3, n4, n5, 1, 0, 2, 1 + n9, 
     1, 0, -1, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, n1, n2, n3, n4, n5, 2, -1, 0, 1 + n9, 1, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, n1, n2, n3, n4, n5, 2, -1, 1, 1 + n9, 
     0, 1, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4, n1, n2, n3, n4, n5, 2, 0, 0, 1 + n9, 1, 1, -1, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, n1, n2, n3, n4, n5, 2, 0, 1, n9, 1, 
     1, 0, 0, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4, n1, n2, n3, n4, n5, 2, 0, 1, n9, 1, 1, 0, 1, 0]/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4, n1, n2, n3, n4, n5, 2, 0, 1, 1 + n9, 
     0, 1, -1, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, 1, -1, 1, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, 1, -1, 1, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 1, n9, 1, 1, 0, 0, 1])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 1, n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, 1, -1, 1, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, 1, 0, 1, n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n2*j[p4, n1, 1 + n2, -1 + n3, n4, n5, 1, 0, 0, 1 + n9, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) - 
   (n2*j[p4, n1, 1 + n2, -1 + n3, n4, n5, 1, 0, 1, 1 + n9, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, 1, -1, 0, 1 + n9, 1, 1, 0, 1, 1])/
    (-3 + d - n4 - n5 - n9) + (n2*j[p4, n1, 1 + n2, n3, n4, n5, 1, -1, 1, 
      1 + n9, 0, 1, 0, 1, 1])/(-3 + d - n4 - n5 - n9) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, 1, -1, 1, 1 + n9, 1, 1, 0, 0, 1])/
    (-3 + d - n4 - n5 - n9) + (n2*j[p4, n1, 1 + n2, n3, n4, n5, 1, 0, 0, 
      1 + n9, 1, 1, -1, 1, 1])/(2*(-3 + d - n4 - n5 - n9)) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, 1, 0, 1, 1 + n9, 0, 1, -1, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) - 
   (n1*j[p4, 1 + n1, -1 + n2, n3, n4, n5, 1, 0, 1, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5 - n9)) + 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, 1, 0, 0, 1 + n9, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) + 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, 1, 0, 1, 1 + n9, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) - 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, 1, 0, 1, 1 + n9, 1, 0, 0, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == -1 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n6 == 1 && n8 == 1 && n3 != 1 -> 
  ((4*n7 - d*n7 + n1*n7 + 2*n7^2)*j[p4, n1, -1, -1 + n3, n4, n5, 1, 1 + n7, 
      1, n9, 1, 1, 0, 1, 1])/(2*(-1 + n3)*(-3 + d - n1 - n5 - n7)) + 
   ((4*n5 - d*n5 + n1*n5 + 2*n5^2)*j[p4, n1, -1, -1 + n3, n4, 1 + n5, 1, n7, 
      1, n9, 1, 1, 0, 1, 1])/(2*(-1 + n3)*(3 - d + n1 + n5 + n7)) - 
   j[p4, n1, -1, n3, n4, n5, 1, n7, 1, n9, 1, 1, 0, 1, 1] + 
   ((4*n7 - d*n7 + n1*n7 + 2*n7^2)*j[p4, n1, 0, -2 + n3, n4, n5, 1, 1 + n7, 
      1, n9, 1, 1, 0, 1, 1])/(2*(-1 + n3)*(-3 + d - n1 - n5 - n7)) + 
   ((4*n5 - d*n5 + n1*n5 + 2*n5^2)*j[p4, n1, 0, -1 + n3, -1 + n4, 1 + n5, 1, 
      n7, 1, n9, 1, 1, 0, 1, 1])/(2*(-1 + n3)*(3 - d + n1 + n5 + n7)) + 
   ((-4 + d - n1 - 2*n5)*j[p4, n1, 0, -1 + n3, n4, n5, 1, n7, 0, n9, 1, 1, 0, 
      2, 1])/(2*(-1 + n3)*(-3 + d - n1 - n5 - n7)) + 
   ((-24 + 17*d - 3*d^2 - 14*n1 + 5*d*n1 - 2*n1^2 - 6*n4 + 2*d*n4 - 2*n1*n4 - 
      8*n5 + 3*d*n5 - 3*n1*n5 - 2*n4*n5 - 18*n7 + 6*d*n7 - 4*n1*n7 - 
      2*n4*n7 - 2*n5*n7 - 4*n7^2)*j[p4, n1, 0, -1 + n3, n4, n5, 1, n7, 1, n9, 
      1, 1, 0, 1, 1])/(2*(-1 + n3)*(-3 + d - n1 - n5 - n7)) + 
   ((4 - d + n1 + 2*n7)*j[p4, n1, 0, -1 + n3, n4, n5, 1, n7, 1, n9, 1, 2, 0, 
      1, 1])/(2*(-1 + n3)*(-3 + d - n1 - n5 - n7)) + 
   ((-4*n7 + d*n7 - n1*n7 - 2*n7^2)*j[p4, n1, 0, -1 + n3, n4, n5, 1, 1 + n7, 
      0, n9, 1, 1, 0, 1, 1])/(2*(-1 + n3)*(-3 + d - n1 - n5 - n7)) + 
   (n7*j[p4, n1, 0, -1 + n3, n4, n5, 1, 1 + n7, 1, n9, 0, 2, -1, 1, 1])/
    ((-1 + n3)*(3 - d + n1 + n5 + n7)) + 
   ((4*n7 - d*n7 + 2*n7^2)*j[p4, n1, 0, -1 + n3, n4, n5, 1, 1 + n7, 1, n9, 1, 
      1, -1, 1, 1])/(2*(-1 + n3)*(-3 + d - n1 - n5 - n7)) + 
   ((-4*n7 + d*n7 - n1*n7 - 2*n7^2)*j[p4, n1, 0, -1 + n3, n4, n5, 1, 1 + n7, 
      1, n9, 1, 1, 0, 0, 1])/(2*(-1 + n3)*(-3 + d - n1 - n5 - n7)) + 
   ((-4*n5 + d*n5 - n1*n5 - 2*n5^2)*j[p4, n1, 0, -1 + n3, n4, 1 + n5, 0, n7, 
      1, n9, 1, 1, 0, 1, 1])/(2*(-1 + n3)*(3 - d + n1 + n5 + n7)) + 
   ((-4*n5 + d*n5 - n1*n5 - 2*n5^2)*j[p4, n1, 0, -1 + n3, n4, 1 + n5, 1, 
      -1 + n7, 1, n9, 1, 1, 0, 1, 1])/(2*(-1 + n3)*(3 - d + n1 + n5 + n7)) + 
   ((4*n5 - d*n5 + n1*n5 + 2*n5^2)*j[p4, n1, 0, -1 + n3, n4, 1 + n5, 1, n7, 
      1, n9, 1, 1, -1, 1, 1])/(2*(-1 + n3)*(3 - d + n1 + n5 + n7)) - 
   (n5*j[p4, n1, 0, -1 + n3, n4, 1 + n5, 1, n7, 1, n9, 1, 1, -1, 2, 0])/
    ((-1 + n3)*(3 - d + n1 + n5 + n7)) + 
   ((-2*n5 + d*n5 - n1*n5 - 2*n5*n7)*j[p4, n1, 0, -1 + n3, n4, 1 + n5, 1, n7, 
      1, n9, 1, 1, 0, 0, 1])/(2*(-1 + n3)*(-3 + d - n1 - n5 - n7)) + 
   ((2*n5 - d*n5 + n1*n5 + 2*n5*n7)*j[p4, n1, 0, -1 + n3, n4, 1 + n5, 1, n7, 
      1, n9, 1, 1, 0, 1, 0])/(2*(-1 + n3)*(-3 + d - n1 - n5 - n7)) - 
   (n4*j[p4, n1, 0, -1 + n3, 1 + n4, n5, 0, n7, 1, n9, 1, 1, 0, 1, 1])/
    (-1 + n3) + (n4*j[p4, n1, 0, -1 + n3, 1 + n4, n5, 1, n7, 0, n9, 1, 1, 0, 
      1, 1])/(-1 + n3) + j[p4, n1, 0, n3, n4, n5, 1, -1 + n7, 1, n9, 1, 1, 0, 
    1, 1] + 2*j[p4, n1, 0, n3, n4, n5, 1, n7, 0, n9, 1, 1, 0, 1, 1] + 
   j[p4, n1, 0, n3, n4, n5, 1, n7, 1, n9, 1, 1, 0, 0, 1] - 
   (n1*n7*j[p4, 1 + n1, -1, -1 + n3, n4, n5, 1, 1 + n7, 1, n9, 1, 1, -1, 1, 
      1])/(2*(-1 + n3)*(3 - d + n1 + n5 + n7)) + 
   ((3*n1 - d*n1 + n1^2 + 2*n1*n5)*j[p4, 1 + n1, 0, -1 + n3, n4, n5, 1, n7, 
      0, n9, 1, 1, 0, 1, 1])/(2*(-1 + n3)*(3 - d + n1 + n5 + n7)) + 
   (n1*j[p4, 1 + n1, 0, -1 + n3, n4, n5, 1, n7, 0, n9, 1, 2, -1, 1, 1])/
    (2*(-1 + n3)*(3 - d + n1 + n5 + n7)) + 
   ((-3*n1 + d*n1 - n1^2 - 2*n1*n5)*j[p4, 1 + n1, 0, -1 + n3, n4, n5, 1, n7, 
      1, n9, 1, 0, 0, 1, 1])/(2*(-1 + n3)*(3 - d + n1 + n5 + n7)) + 
   (n1*n5*j[p4, 1 + n1, 0, -1 + n3, n4, n5, 1, n7, 1, n9, 1, 1, -1, 1, 1])/
    (2*(-1 + n3)*(3 - d + n1 + n5 + n7)) - 
   (n1*j[p4, 1 + n1, 0, -1 + n3, n4, n5, 1, n7, 1, n9, 1, 1, -1, 2, 1])/
    (2*(-1 + n3)*(3 - d + n1 + n5 + n7)) + 
   ((3*n1 - d*n1 + n1^2 + 2*n1*n7)*j[p4, 1 + n1, 0, -1 + n3, n4, n5, 1, n7, 
      1, n9, 1, 1, 0, 0, 1])/(2*(-1 + n3)*(3 - d + n1 + n5 + n7)) + 
   ((-3*n1 + d*n1 - n1^2 - 2*n1*n7)*j[p4, 1 + n1, 0, -1 + n3, n4, n5, 1, n7, 
      1, n9, 1, 1, 0, 1, 1])/(2*(-1 + n3)*(3 - d + n1 + n5 + n7)) + 
   (n1*n7*j[p4, 1 + n1, 0, -1 + n3, n4, n5, 1, 1 + n7, 0, n9, 1, 1, -1, 1, 
      1])/(2*(-1 + n3)*(3 - d + n1 + n5 + n7)) + 
   (n1*n7*j[p4, 1 + n1, 0, -1 + n3, n4, n5, 1, 1 + n7, 1, n9, 0, 1, -1, 1, 
      1])/(2*(-1 + n3)*(3 - d + n1 + n5 + n7)) - 
   (n1*n7*j[p4, 1 + n1, 0, -1 + n3, n4, n5, 1, 1 + n7, 1, n9, 1, 0, -1, 1, 
      1])/(2*(-1 + n3)*(3 - d + n1 + n5 + n7)) - 
   (n1*n5*j[p4, 1 + n1, 0, -1 + n3, n4, 1 + n5, 1, n7, 1, -1 + n9, 1, 1, -1, 
      1, 1])/(2*(-1 + n3)*(3 - d + n1 + n5 + n7)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n14 == 1 && n3 == 1 && n5 == 0 && 
    n7 == 0 && n9 == 0 &&  !(n4 == 0 || n6 == 1 || n8 == 1) -> 
  ((1 + n4)*j[p4, -1, n2, 1, 2 + n4, 0, -1 + n6, 0, -1 + n8, 0, 2, n11, 0, 
      n13, 1])/((-1 + n6)*(-1 + n8)) + 
   j[p4, -1, n2, 2, 1 + n4, 0, -1 + n6, 0, -1 + n8, 0, 2, n11, 0, n13, 1]/
    ((-1 + n6)*(-1 + n8)) + ((-1 - n4)*j[p4, 0, -1 + n2, 1, 2 + n4, 0, 
      -1 + n6, 0, -1 + n8, 0, 2, n11, 0, n13, 1])/((-1 + n6)*(-1 + n8)) + 
   j[p4, 0, n2, 0, 1 + n4, 0, -1 + n6, 0, n8, 0, 2, n11, 0, n13, 1]/
    (1 - n6) + ((-1 - n4)*j[p4, 0, n2, 0, 2 + n4, 0, -1 + n6, 0, -1 + n8, 0, 
      2, n11, 0, n13, 1])/((-1 + n6)*(-1 + n8)) + 
   ((-1 + 2*d - 2*n11 - 2*n13 - n4 - n8)*j[p4, 0, n2, 1, 1 + n4, 0, -1 + n6, 
      0, -1 + n8, 0, 2, n11, 0, n13, 1])/((-1 + n6)*(-1 + n8)) + 
   ((-6 + 2*d - n2 - 2*n4 - n6)*j[p4, 0, n2, 1, 1 + n4, 0, -1 + n6, 0, n8, 0, 
      1, n11, 0, n13, 1])/(-1 + n6) + j[p4, 0, n2, 1, 1 + n4, 0, -1 + n6, 0, 
     n8, 0, 2, n11, 0, n13, 1]/(-1 + n6) + j[p4, 0, n2, 1, 1 + n4, 0, n6, 0, 
    -1 + n8, 0, 1, n11, 0, n13, 1] + 
   ((1 + n4)*j[p4, 0, n2, 1, 2 + n4, 0, -2 + n6, 0, -1 + n8, 0, 2, n11, 0, 
      n13, 1])/((-1 + n6)*(-1 + n8)) + 
   ((1 + n4)*j[p4, 0, n2, 1, 2 + n4, 0, -1 + n6, -1, -1 + n8, 0, 2, n11, 0, 
      n13, 1])/((-1 + n6)*(-1 + n8)) + 
   ((-1 - n4)*j[p4, 0, n2, 1, 2 + n4, 0, -1 + n6, 0, -1 + n8, -1, 2, n11, 0, 
      n13, 1])/((-1 + n6)*(-1 + n8)) + 
   ((1 + n4)*j[p4, 0, n2, 1, 2 + n4, 0, -1 + n6, 0, -1 + n8, 0, 1, n11, 0, 
      n13, 1])/((-1 + n6)*(-1 + n8)) + 
   ((-1 - n4)*j[p4, 0, n2, 1, 2 + n4, 0, -1 + n6, 0, -1 + n8, 0, 2, -1 + n11, 
      0, n13, 1])/((-1 + n6)*(-1 + n8)) + 
   ((1 + n4)*j[p4, 0, n2, 1, 2 + n4, 0, -1 + n6, 0, -1 + n8, 0, 2, n11, 0, 
      n13, 0])/((-1 + n6)*(-1 + n8)) - 
   j[p4, 0, n2, 2, 1 + n4, 0, -1 + n6, 0, -2 + n8, 0, 2, n11, 0, n13, 1]/
    ((-1 + n6)*(-1 + n8)) + j[p4, 0, n2, 2, 1 + n4, 0, -1 + n6, 0, -1 + n8, 
     0, 1, n11, 0, n13, 1]/((-1 + n6)*(-1 + n8)) - 
   j[p4, 0, n2, 2, 1 + n4, 0, -1 + n6, 0, -1 + n8, 0, 2, -1 + n11, 0, n13, 1]/
    ((-1 + n6)*(-1 + n8)) + j[p4, 0, n2, 2, 1 + n4, 0, -1 + n6, 0, -1 + n8, 
     0, 2, n11, -1, n13, 1]/((-1 + n6)*(-1 + n8)) - 
   j[p4, 0, n2, 2, 1 + n4, 0, -1 + n6, 0, -1 + n8, 0, 2, n11, 0, -1 + n13, 1]/
    ((-1 + n6)*(-1 + n8)) - j[p4, 0, n2, 2, 1 + n4, 0, -1 + n6, 0, -1 + n8, 
     0, 2, n11, 0, n13, 1]/((-1 + n6)*(-1 + n8)) + 
   (n2*j[p4, 0, 1 + n2, 0, 1 + n4, 0, -1 + n6, 0, -1 + n8, 0, 2, n11, 0, n13, 
      1])/((-1 + n6)*(-1 + n8)) - 
   (n2*j[p4, 0, 1 + n2, 0, 1 + n4, 0, -1 + n6, 0, n8, 0, 1, n11, 0, n13, 1])/
    (-1 + n6) - (n2*j[p4, 0, 1 + n2, 1, 1 + n4, 0, -1 + n6, -1, -1 + n8, 0, 
      2, n11, 0, n13, 1])/((-1 + n6)*(-1 + n8)) - 
   (n2*j[p4, 0, 1 + n2, 1, 1 + n4, 0, -1 + n6, 0, -2 + n8, 0, 2, n11, 0, n13, 
      1])/((-1 + n6)*(-1 + n8)) + 
   (2*n2*j[p4, 0, 1 + n2, 1, 1 + n4, 0, -1 + n6, 0, -1 + n8, 0, 1, n11, 0, 
      n13, 1])/(-1 + n6) + (n2*j[p4, 0, 1 + n2, 1, 1 + n4, 0, -1 + n6, 0, 
      -1 + n8, 0, 2, n11, -1, n13, 1])/((-1 + n6)*(-1 + n8)) - 
   (2*n2*j[p4, 0, 1 + n2, 1, 1 + n4, 0, -1 + n6, 0, -1 + n8, 0, 2, n11, 0, 
      -1 + n13, 1])/((-1 + n6)*(-1 + n8)) - 
   (n2*j[p4, 0, 1 + n2, 1, 1 + n4, 0, -1 + n6, 0, n8, 0, 1, n11, -1, n13, 1])/
    (-1 + n6) + (2*n2*j[p4, 0, 1 + n2, 1, 1 + n4, 0, -1 + n6, 0, n8, 0, 1, 
      n11, 0, -1 + n13, 1])/(-1 + n6), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n13 == 1 && n14 == 1 && n2 == 0 && n3 == 1 && 
    n6 == 1 && n8 == 1 &&  !(n12 == 0 || n7 == 0) -> 
  -((n9*j[p4, -1 + n1, -1, 1, n4, -1 + n5, 1, 1 + n7, 1, 1 + n9, 1, 1, 
       1 + n12, 1, 1])/(-1 + n5)) + 
   (n9*j[p4, -1 + n1, 0, 1, n4, -1 + n5, 1, n7, 1, 1 + n9, 1, 1, 1 + n12, 1, 
      1])/(-1 + n5) - (n9*j[p4, -1 + n1, 0, 1, n4, -1 + n5, 1, 1 + n7, 1, 
      1 + n9, 1, 1, n12, 1, 1])/(-1 + n5) + 
   (n9*j[p4, n1, -2, 1, n4, -1 + n5, 1, 1 + n7, 1, 1 + n9, 1, 1, 1 + n12, 1, 
      1])/(-1 + n5) + j[p4, n1, -1, 0, n4, -1 + n5, 1, 1 + n7, 1, n9, 1, 1, 
     1 + n12, 1, 2]/(1 - n5) + 
   (n9*j[p4, n1, -1, 1, -1 + n4, -1 + n5, 1, 1 + n7, 1, 1 + n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n5) - 
   (2*n9*j[p4, n1, -1, 1, n4, -1 + n5, 1, n7, 1, 1 + n9, 1, 1, 1 + n12, 1, 
      1])/(-1 + n5) - (n9*j[p4, n1, -1, 1, n4, -1 + n5, 1, 1 + n7, 0, 1 + n9, 
      1, 1, 1 + n12, 1, 1])/(-1 + n5) + 
   ((1 - d + 2*n4 + n5 + n9)*j[p4, n1, -1, 1, n4, -1 + n5, 1, 1 + n7, 1, n9, 
      1, 1, 1 + n12, 1, 1])/(-1 + n5) - 
   (n9*j[p4, n1, -1, 1, n4, -1 + n5, 1, 1 + n7, 1, 1 + n9, 0, 1, 1 + n12, 1, 
      1])/(-1 + n5) + (n9*j[p4, n1, -1, 1, n4, -1 + n5, 1, 1 + n7, 1, 1 + n9, 
      1, 0, 1 + n12, 1, 1])/(-1 + n5) + 
   (n9*j[p4, n1, -1, 1, n4, -1 + n5, 1, 1 + n7, 1, 1 + n9, 1, 1, n12, 1, 1])/
    (-1 + n5) + j[p4, n1, -1, 1, n4, -1 + n5, 2, 1 + n7, 0, n9, 1, 1, 
     1 + n12, 1, 1]/(1 - n5) - j[p4, n1, -1, 1, n4, n5, 1, n7, 1, n9, 1, 1, 
    1 + n12, 1, 1] + j[p4, n1, 0, 0, -1 + n4, -1 + n5, 1, 1 + n7, 1, n9, 1, 
     1, 1 + n12, 1, 2]/(1 - n5) + j[p4, n1, 0, 0, -1 + n4, -1 + n5, 2, 
     1 + n7, 1, n9, 1, 1, 1 + n12, 1, 1]/(1 - n5) + 
   j[p4, n1, 0, 0, n4, -1 + n5, 1, n7, 1, n9, 1, 1, 1 + n12, 1, 2]/
    (-1 + n5) + j[p4, n1, 0, 0, n4, -1 + n5, 1, 1 + n7, 1, n9, 1, 1, n12, 1, 
     2]/(1 - n5) + ((1 - n4)*j[p4, n1, 0, 0, n4, -1 + n5, 1, 1 + n7, 1, n9, 
      1, 1, 1 + n12, 1, 1])/(-1 + n5) + 
   j[p4, n1, 0, 1, -1 + n4, -1 + n5, 0, 1 + n7, 1, n9, 1, 1, 1 + n12, 1, 2]/
    (-1 + n5) + (n9*j[p4, n1, 0, 1, -1 + n4, -1 + n5, 0, 1 + n7, 1, 1 + n9, 
      1, 1, 1 + n12, 1, 1])/(-1 + n5) - 
   (n9*j[p4, n1, 0, 1, -1 + n4, -1 + n5, 1, n7, 1, 1 + n9, 1, 1, 1 + n12, 1, 
      1])/(-1 + n5) + j[p4, n1, 0, 1, -1 + n4, -1 + n5, 1, 1 + n7, 0, n9, 1, 
     1, 1 + n12, 1, 2]/(-1 + n5) + j[p4, n1, 0, 1, -1 + n4, -1 + n5, 1, 
     1 + n7, 1, n9, 1, 1, 1 + n12, 0, 2]/(-1 + n5) + 
   ((2 - 2*d + 2*n4 + 2*n5 + 2*n9)*j[p4, n1, 0, 1, -1 + n4, -1 + n5, 1, 
      1 + n7, 1, n9, 1, 1, 1 + n12, 1, 1])/(-1 + n5) - 
   (n9*j[p4, n1, 0, 1, -1 + n4, -1 + n5, 1, 1 + n7, 1, 1 + n9, 0, 1, 1 + n12, 
      1, 1])/(-1 + n5) + (n9*j[p4, n1, 0, 1, -1 + n4, -1 + n5, 1, 1 + n7, 1, 
      1 + n9, 1, 1, n12, 1, 1])/(-1 + n5) + 
   (n9*j[p4, n1, 0, 1, -1 + n4, -1 + n5, 1, 1 + n7, 1, 1 + n9, 1, 1, 1 + n12, 
      1, 0])/(-1 + n5) - (n9*j[p4, n1, 0, 1, -1 + n4, -1 + n5, 1, 1 + n7, 1, 
      1 + n9, 1, 1, 1 + n12, 1, 1])/(-1 + n5) + 
   j[p4, n1, 0, 1, -1 + n4, -1 + n5, 2, 1 + n7, 0, n9, 1, 1, 1 + n12, 1, 1]/
    (-1 + n5) + j[p4, n1, 0, 1, -1 + n4, -1 + n5, 2, 1 + n7, 1, n9, 1, 1, 
     1 + n12, 0, 1]/(-1 + n5) + j[p4, n1, 0, 1, -1 + n4, -1 + n5, 2, 1 + n7, 
     1, n9, 1, 1, 1 + n12, 1, 0]/(-1 + n5) + j[p4, n1, 0, 1, -1 + n4, n5, 0, 
    1 + n7, 1, n9, 1, 1, 1 + n12, 1, 1] - j[p4, n1, 0, 1, -1 + n4, n5, 1, n7, 
    1, n9, 1, 1, 1 + n12, 1, 1] + j[p4, n1, 0, 1, -1 + n4, n5, 1, 1 + n7, 1, 
    n9, 1, 1, n12, 1, 1] - j[p4, n1, 0, 1, -1 + n4, n5, 1, 1 + n7, 1, n9, 1, 
    1, 1 + n12, 0, 1] + j[p4, n1, 0, 1, -1 + n4, n5, 1, 1 + n7, 1, n9, 1, 1, 
    1 + n12, 1, 0] + ((-1 + n4)*j[p4, n1, 0, 1, n4, -1 + n5, 0, 1 + n7, 1, 
      n9, 1, 1, 1 + n12, 1, 1])/(-1 + n5) + 
   (n9*j[p4, n1, 0, 1, n4, -1 + n5, 1, -1 + n7, 1, 1 + n9, 1, 1, 1 + n12, 1, 
      1])/(-1 + n5) + (n9*j[p4, n1, 0, 1, n4, -1 + n5, 1, n7, 0, 1 + n9, 1, 
      1, 1 + n12, 1, 1])/(-1 + n5) + 
   ((-1 + d - 2*n4 - n5 - n9)*j[p4, n1, 0, 1, n4, -1 + n5, 1, n7, 1, n9, 1, 
      1, 1 + n12, 1, 1])/(-1 + n5) + 
   (n9*j[p4, n1, 0, 1, n4, -1 + n5, 1, n7, 1, 1 + n9, 0, 1, 1 + n12, 1, 1])/
    (-1 + n5) - (n9*j[p4, n1, 0, 1, n4, -1 + n5, 1, n7, 1, 1 + n9, 1, 0, 
      1 + n12, 1, 1])/(-1 + n5) - 
   (n9*j[p4, n1, 0, 1, n4, -1 + n5, 1, n7, 1, 1 + n9, 1, 1, n12, 1, 1])/
    (-1 + n5) + ((1 - n4)*j[p4, n1, 0, 1, n4, -1 + n5, 1, 1 + n7, 0, n9, 1, 
      1, 1 + n12, 1, 1])/(-1 + n5) - 
   (n9*j[p4, n1, 0, 1, n4, -1 + n5, 1, 1 + n7, 0, 1 + n9, 1, 1, n12, 1, 1])/
    (-1 + n5) + ((1 - d + 2*n4 + n5 + n9)*j[p4, n1, 0, 1, n4, -1 + n5, 1, 
      1 + n7, 1, n9, 1, 1, n12, 1, 1])/(-1 + n5) + 
   ((-1 + n4)*j[p4, n1, 0, 1, n4, -1 + n5, 1, 1 + n7, 1, n9, 1, 1, 1 + n12, 
      1, 0])/(-1 + n5) - (n9*j[p4, n1, 0, 1, n4, -1 + n5, 1, 1 + n7, 1, 
      1 + n9, 0, 1, n12, 1, 1])/(-1 + n5) + 
   (n9*j[p4, n1, 0, 1, n4, -1 + n5, 1, 1 + n7, 1, 1 + n9, 1, 0, n12, 1, 1])/
    (-1 + n5) + j[p4, n1, 0, 1, n4, -1 + n5, 2, n7, 0, n9, 1, 1, 1 + n12, 1, 
     1]/(-1 + n5) + j[p4, n1, 0, 1, n4, -1 + n5, 2, 1 + n7, 0, n9, 1, 1, n12, 
     1, 1]/(1 - n5) + j[p4, n1, 0, 1, n4, n5, 1, -1 + n7, 1, n9, 1, 1, 
    1 + n12, 1, 1], j[p4, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?Positive, (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, 
    (n7_)?NonPositive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n13 == 1 && n2 == 0 && n4 == 0 && 
    n5 == 0 && n7 == 0 && n9 == 0 &&  !(n11 == 1 || n8 == 1) -> 
  ((1 - 2*d + 2*n11 + n3 + n8)*j[p4, 0, 0, n3, 0, 0, n6, 0, -1 + n8, 0, 1, 
      n11, 0, 1, n14])/(-1 + n8) + 
   ((1 - d + n11)*j[p4, 0, 0, n3, 0, 0, n6, 0, n8, 0, 1, -1 + n11, 0, 1, 
      n14])/(-1 + n11) + j[p4, 0, 0, n3, 0, 0, n6, 0, n8, 0, 1, n11, 0, 0, 
    n14] - (n3*j[p4, 0, 0, 1 + n3, 0, 0, n6, 0, -1 + n8, 0, 0, n11, 0, 1, 
      n14])/(-1 + n8) + ((n3 - d*n3 + n11*n3)*j[p4, 0, 0, 1 + n3, 0, 0, n6, 
      0, -1 + n8, 0, 1, -1 + n11, 0, 1, n14])/((-1 + n11)*(-1 + n8)) + 
   (n3*j[p4, 0, 0, 1 + n3, 0, 0, n6, 0, -1 + n8, 0, 1, n11, 0, 0, n14])/
    (-1 + n8), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n4 == 0 && n7 == 0 && n9 == 0 &&  !(n11 == 1 || n5 == 0 || n6 == 1) -> 
  j[p4, 0, -1, n3, 0, 1 + n5, n6, 0, n8, 0, 1, n11, 0, 1, 1] - 
   (n8*j[p4, 0, -1, n3, 0, 1 + n5, n6, 0, 1 + n8, 0, 1, -1 + n11, 0, 1, 1])/
    (-1 + n11) - (n3*n8*j[p4, 0, -1, 1 + n3, 0, 1 + n5, -1 + n6, 0, 1 + n8, 
      0, 1, -1 + n11, 0, 1, 1])/((-1 + n11)*(-1 + n6)) - 
   (n8*j[p4, 0, 0, -1 + n3, 0, 1 + n5, -1 + n6, 0, 1 + n8, 0, 2, -1 + n11, 0, 
      1, 1])/((-1 + n11)*(-1 + n6)) - 
   (n8*j[p4, 0, 0, -1 + n3, 0, 1 + n5, n6, 0, 1 + n8, 0, 1, -1 + n11, 0, 1, 
      1])/(-1 + n11) + j[p4, 0, 0, n3, -1, 1 + n5, n6, 0, n8, 0, 1, n11, 0, 
    1, 1] + ((2 - d + n3)*j[p4, 0, 0, n3, 0, 1 + n5, -1 + n6, 0, n8, 0, 1, 
      n11, 0, 1, 1])/(-1 + n6) + ((-1 + 2*d - 2*n11 - 2*n3 - n5 - n8)*
     j[p4, 0, 0, n3, 0, 1 + n5, -1 + n6, 0, n8, 0, 2, -1 + n11, 0, 1, 1])/
    ((-1 + n11)*(-1 + n6)) + ((d*n8 - 2*n3*n8 - n6*n8)*
     j[p4, 0, 0, n3, 0, 1 + n5, -1 + n6, 0, 1 + n8, 0, 1, -1 + n11, 0, 1, 1])/
    ((-1 + n11)*(-1 + n6)) + (n8*j[p4, 0, 0, n3, 0, 1 + n5, -1 + n6, 0, 
      1 + n8, 0, 2, -1 + n11, 0, 1, 1])/((-1 + n11)*(-1 + n6)) + 
   (n8*j[p4, 0, 0, n3, 0, 1 + n5, n6, -1, 1 + n8, 0, 1, -1 + n11, 0, 1, 1])/
    (-1 + n11) - j[p4, 0, 0, n3, 0, 1 + n5, n6, 0, -1 + n8, 0, 1, n11, 0, 1, 
    1] + (n8*j[p4, 0, 0, n3, 0, 1 + n5, n6, 0, n8, 0, 1, -1 + n11, 0, 1, 1])/
    (-1 + n11) - (n8*j[p4, 0, 0, n3, 0, 1 + n5, n6, 0, 1 + n8, 0, 1, 
      -1 + n11, -1, 1, 1])/(-1 + n11) + 
   (n8*j[p4, 0, 0, n3, 0, 1 + n5, n6, 0, 1 + n8, 0, 1, -1 + n11, 0, 0, 1])/
    (-1 + n11) + (n8*j[p4, 0, 0, n3, 0, 1 + n5, n6, 0, 1 + n8, 0, 1, 
      -1 + n11, 0, 1, 0])/(-1 + n11) + 
   ((-1 - n5)*j[p4, 0, 0, n3, 0, 2 + n5, -1 + n6, 0, n8, 0, 2, -1 + n11, 0, 
      0, 1])/((-1 + n11)*(-1 + n6)) + 
   ((1 + n5)*j[p4, 0, 0, n3, 0, 2 + n5, -1 + n6, 0, n8, 0, 2, -1 + n11, 0, 1, 
      0])/((-1 + n11)*(-1 + n6)) + 
   (n3*j[p4, 0, 0, 1 + n3, 0, 1 + n5, -1 + n6, -1, n8, 0, 1, n11, 0, 1, 1])/
    (-1 + n6) + (n3*n8*j[p4, 0, 0, 1 + n3, 0, 1 + n5, -1 + n6, -1, 1 + n8, 0, 
      1, -1 + n11, 0, 1, 1])/((-1 + n11)*(-1 + n6)) + 
   (2*n3*n8*j[p4, 0, 0, 1 + n3, 0, 1 + n5, -1 + n6, 0, n8, 0, 1, -1 + n11, 0, 
      1, 1])/((-1 + n11)*(-1 + n6)) - 
   (n3*j[p4, 0, 0, 1 + n3, 0, 1 + n5, -1 + n6, 0, n8, 0, 1, n11, 0, 0, 1])/
    (-1 + n6) - (n3*n8*j[p4, 0, 0, 1 + n3, 0, 1 + n5, -1 + n6, 0, 1 + n8, 0, 
      1, -1 + n11, -1, 1, 1])/((-1 + n11)*(-1 + n6)) + 
   (n3*n8*j[p4, 0, 0, 1 + n3, 0, 1 + n5, -1 + n6, 0, 1 + n8, 0, 1, -1 + n11, 
      0, 0, 1])/((-1 + n11)*(-1 + n6)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n14 == 1 && n4 == 0 && 
    n5 == 0 && n7 == 0 && n9 == 0 &&  !(n13 == 1 || n2 == 0 || n6 == 1) -> 
  -((n8*j[p4, 0, n2, n3, 0, 0, n6, 0, 1 + n8, 0, 1, 1, 0, -1 + n13, 1])/
     (-1 + n13)) + (n3*j[p4, 0, n2, 1 + n3, 0, 0, n6, 0, n8, 0, 1, 1, 0, 
      -1 + n13, 1])/(-1 + n13) + 
   ((1 - d + n6)*j[p4, 0, 1 + n2, n3, 0, 0, -1 + n6, 0, n8, 0, 1, 1, 0, n13, 
      1])/(-1 + n6) + (n8*j[p4, 0, 1 + n2, n3, 0, 0, n6, -1, 1 + n8, 0, 1, 1, 
      0, -1 + n13, 1])/(-1 + n13) + 
   ((-3 + n13 - 2*n2 + 2*n3)*j[p4, 0, 1 + n2, n3, 0, 0, n6, 0, n8, 0, 1, 1, 
      0, -1 + n13, 1])/(-1 + n13) + j[p4, 0, 1 + n2, n3, 0, 0, n6, 0, n8, 0, 
    1, 1, 0, n13, 0] - (n8*j[p4, 0, 1 + n2, n3, 0, 0, n6, 0, 1 + n8, 0, 1, 1, 
      -1, -1 + n13, 1])/(-1 + n13) + 
   (n8*j[p4, 0, 1 + n2, n3, 0, 0, n6, 0, 1 + n8, 0, 1, 1, 0, -2 + n13, 1])/
    (-1 + n13) - (n3*j[p4, 0, 1 + n2, 1 + n3, 0, 0, n6, -1, n8, 0, 1, 1, 0, 
      -1 + n13, 1])/(-1 + n13) - 
   (2*n3*j[p4, 0, 1 + n2, 1 + n3, 0, 0, n6, 0, -1 + n8, 0, 1, 1, 0, -1 + n13, 
      1])/(-1 + n13) + (n3*j[p4, 0, 1 + n2, 1 + n3, 0, 0, n6, 0, n8, 0, 1, 1, 
      -1, -1 + n13, 1])/(-1 + n13) - 
   (n3*j[p4, 0, 1 + n2, 1 + n3, 0, 0, n6, 0, n8, 0, 1, 1, 0, -2 + n13, 1])/
    (-1 + n13) + ((-1 - n2)*j[p4, 0, 2 + n2, -1 + n3, 0, 0, n6, 0, n8, 0, 1, 
      1, 0, -1 + n13, 1])/(-1 + n13) + 
   ((1 + n2)*j[p4, 0, 2 + n2, n3, 0, 0, n6, -1, n8, 0, 1, 1, 0, -1 + n13, 1])/
    (-1 + n13) + ((1 + n2)*j[p4, 0, 2 + n2, n3, 0, 0, n6, 0, -1 + n8, 0, 1, 
      1, 0, -1 + n13, 1])/(-1 + n13) + 
   ((-1 - n2)*j[p4, 0, 2 + n2, n3, 0, 0, n6, 0, n8, 0, 1, 1, -1, -1 + n13, 
      1])/(-1 + n13) + ((2 + 2*n2)*j[p4, 0, 2 + n2, n3, 0, 0, n6, 0, n8, 0, 
      1, 1, 0, -2 + n13, 1])/(-1 + n13), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n4 == 0 && 
    n5 == 0 && n7 == 0 && n9 == 0 && n14 != 1 -> 
  ((-2*n6 + d*n6 - 2*n6^2)*j[p4, 0, n2, n3, 0, 0, 1 + n6, 0, n8, 0, 1, 1, 0, 
     1, -1 + n14])/((d - 2*n14)*(-1 + n14)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n4 == 0 && n7 == -1 && n9 == 0 &&  !(n5 == 0 || n6 == 1) -> 
  ((4 - d + 2*n5)*j[p4, 0, -1 + n2, n3, 0, 1 + n5, n6, -1, n8, 0, 1, 1, 0, 1, 
      1])/(2*(2 - d + n5 + n6)) + 
   ((-4 + d)*j[p4, 0, n2, n3, 0, 1 + n5, -1 + n6, -1, n8, 0, 1, 1, 0, 0, 2])/
    (2*(-2 + d - n5 - n6)*(-1 + n6)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, -1 + n6, -1, n8, 0, 1, 1, 0, 
      1, 1])/(2*(-1 + n6)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n4 == 0 && n7 == 0 && n9 == 0 &&  !(n5 == 0 || n6 == 1) -> 
  ((4 - d + 2*n5)*j[p4, 0, -1 + n2, n3, 0, 1 + n5, n6, 0, n8, 0, 1, 1, 0, 1, 
      1])/(2*(2 - d + n5 + n6)) + 
   ((-4 + d)*j[p4, 0, n2, n3, 0, 1 + n5, -1 + n6, 0, n8, 0, 1, 1, 0, 0, 2])/
    (2*(-2 + d - n5 - n6)*(-1 + n6)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, -1 + n6, 0, n8, 0, 1, 1, 0, 
      1, 1])/(2*(-1 + n6)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n2 == 0 && n7 == -1 && n9 == 0 &&  !(n3 == 1 || n4 == 0 || n6 == 1) -> 
  ((1 + n4)*j[p4, -1, 0, -1 + n3, 2 + n4, n5, -1 + n6, -1, n8, 0, 2, 1, 0, 1, 
      1])/(2*(-1 + n3)*(-1 + n6)) + j[p4, 0, -1, -1 + n3, 1 + n4, n5, n6, 0, 
     n8, 0, 1, 1, 0, 1, 1]/(2*(-1 + n3)) + 
   ((-1 - n4)*j[p4, 0, -1, -1 + n3, 2 + n4, n5, -1 + n6, -1, n8, 0, 2, 1, 0, 
      1, 1])/(2*(-1 + n3)*(-1 + n6)) + 
   j[p4, 0, 0, -1 + n3, n4, n5, n6, 0, n8, 0, 1, 1, 0, 1, 1]/(2*(-1 + n3)) - 
   j[p4, 0, 0, -1 + n3, 1 + n4, -1 + n5, n6, 0, n8, 0, 1, 1, 0, 1, 1]/
    (2*(-1 + n3)) + ((3 - d)*j[p4, 0, 0, -1 + n3, 1 + n4, n5, -1 + n6, -1, 
      n8, 0, 2, 1, 0, 1, 1])/(2*(-1 + n3)*(-1 + n6)) + 
   ((-2 + n3)*j[p4, 0, 0, -1 + n3, 1 + n4, n5, -1 + n6, 0, n8, 0, 1, 1, 0, 1, 
      1])/(2*(-1 + n3)*(-1 + n6)) + j[p4, 0, 0, -1 + n3, 1 + n4, n5, -1 + n6, 
     0, n8, 0, 2, 0, 0, 1, 1]/(2*(-1 + n3)*(-1 + n6)) + 
   ((-1 + d - n4 - 2*n6)*j[p4, 0, 0, -1 + n3, 1 + n4, n5, n6, -1, n8, 0, 1, 
      1, 0, 1, 1])/(2*(-1 + n3)) - j[p4, 0, 0, -1 + n3, 1 + n4, n5, n6, 0, 
     -1 + n8, 0, 1, 1, 0, 1, 1]/(2*(-1 + n3)) + 
   ((1 + n4)*j[p4, 0, 0, -1 + n3, 2 + n4, n5, -2 + n6, -1, n8, 0, 2, 1, 0, 1, 
      1])/(2*(-1 + n3)*(-1 + n6)) + 
   ((1 + n4)*j[p4, 0, 0, -1 + n3, 2 + n4, n5, -1 + n6, -2, n8, 0, 2, 1, 0, 1, 
      1])/(2*(-1 + n3)*(-1 + n6)) + 
   ((-1 - n4)*j[p4, 0, 0, -1 + n3, 2 + n4, n5, -1 + n6, -1, n8, -1, 2, 1, 0, 
      1, 1])/(2*(-1 + n3)*(-1 + n6)) + 
   ((1 + n3 + n4 + n3*n4 - n6 - n4*n6)*j[p4, 0, 0, -1 + n3, 2 + n4, n5, 
      -1 + n6, -1, n8, 0, 1, 1, 0, 1, 1])/(2*(-1 + n3)*(-1 + n6)) + 
   ((-1 - n4)*j[p4, 0, 0, -1 + n3, 2 + n4, n5, -1 + n6, -1, n8, 0, 2, 0, 0, 
      1, 1])/(2*(-1 + n3)*(-1 + n6)) + 
   ((1 + n4)*j[p4, 0, 0, -1 + n3, 2 + n4, n5, n6, -1, -1 + n8, 0, 1, 1, 0, 1, 
      1])/(2*(-1 + n3)) + ((-4 + 3*d - 2*n3 - 3*n4 - 2*n5 - 2*n6)*
     j[p4, 0, 0, n3, 1 + n4, n5, -1 + n6, -1, n8, 0, 1, 1, 0, 1, 1])/
    (2*(-1 + n6)) - j[p4, 0, 0, n3, 1 + n4, n5, -1 + n6, 0, n8, 0, 1, 1, 0, 
     0, 1]/(2*(-1 + n6)) + j[p4, 0, 0, n3, 1 + n4, n5, n6, -1, -1 + n8, 0, 1, 
    1, 0, 1, 1] + (n5*j[p4, 0, 0, n3, 1 + n4, 1 + n5, -1 + n6, -1, n8, 0, 1, 
      1, 0, 0, 1])/(-1 + n6) - 
   (n5*j[p4, 0, 0, n3, 1 + n4, 1 + n5, -1 + n6, -1, n8, 0, 1, 1, 0, 1, 0])/
    (-1 + n6) + ((-1 - n4)*j[p4, 0, 0, n3, 2 + n4, n5, -1 + n6, -1, n8, 0, 1, 
      1, 0, 1, 0])/(2*(-1 + n6)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n11 == 1 && n12 == 0 && n13 == 1 && n2 == 0 && n4 == 0 && n5 == 0 && 
    n7 == 0 && n8 == 1 && n9 == 0 &&  !(n10 == 1 || n6 == 1) -> 
  ((-1 - d + 2*n14 + n6)*j[p4, n1, 0, n3, 0, 0, -1 + n6, 0, 1, 0, n10, 1, 0, 
      1, n14])/(-1 + n6) + ((-1 - 2*d + n10 + 2*n14 + n3 + 2*n6)*
     j[p4, n1, 0, n3, 0, 0, n6, 0, 1, 0, -1 + n10, 1, 0, 1, n14])/
    (-1 + n10) + j[p4, n1, 0, n3, 0, 0, n6, 0, 1, 0, n10, 1, 0, 1, 
    -1 + n14] + ((-n3 - d*n3 + 2*n14*n3 + n3*n6)*j[p4, n1, 0, 1 + n3, 0, 0, 
      -1 + n6, 0, 1, 0, -1 + n10, 1, 0, 1, n14])/((-1 + n10)*(-1 + n6)) - 
   (n3*j[p4, n1, 0, 1 + n3, 0, 0, n6, 0, 0, 0, -1 + n10, 1, 0, 1, n14])/
    (-1 + n10) + (n3*j[p4, n1, 0, 1 + n3, 0, 0, n6, 0, 1, 0, -1 + n10, 1, 0, 
      1, -1 + n14])/(-1 + n10), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n4 == 0 && 
    n5 == 0 && n8 == 1 && n9 == 0 &&  !(n6 == 1 || n7 == 0) -> 
  (2*j[p4, -1 + n1, n2, n3, 0, 0, n6, 1 + n7, 1, 0, 0, 2, 0, 1, 1])/
    (2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) + 
   ((-8 + 2*d - 2*n2 - 4*n7)*j[p4, -1 + n1, n2, n3, 0, 0, n6, 1 + n7, 1, 0, 
      1, 1, 0, 1, 1])/(2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) + 
   (n3*j[p4, -1 + n1, n2, 1 + n3, 0, 0, n6, 1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    (2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) + 
   (2*n2*j[p4, -1 + n1, 1 + n2, -1 + n3, 0, 0, n6, 1 + n7, 1, 0, 1, 1, 0, 1, 
      1])/(-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) - 
   (n2*j[p4, -1 + n1, 1 + n2, n3, 0, 0, n6, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   ((12 - 3*d + 2*n2 + 2*n3 + 6*n7)*j[p4, n1, -1 + n2, n3, 0, 0, n6, 1 + n7, 
      1, 0, 1, 1, 0, 1, 1])/(2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) + 
   j[p4, n1, -1 + n2, n3, 0, 0, n6, 1 + n7, 1, 0, 2, 0, 0, 1, 1]/
    (2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) + 
   j[p4, n1, -1 + n2, n3, 0, 0, n6, 1 + n7, 2, 0, 1, 0, 0, 1, 1]/
    (2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) + 
   j[p4, n1, -1 + n2, n3, 0, 0, n6, 1 + n7, 2, 0, 1, 1, 0, 0, 1]/
    (2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) - 
   (n6*j[p4, n1, -1 + n2, n3, 0, 0, 1 + n6, 1 + n7, 1, 0, 0, 1, 0, 1, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   (n6*j[p4, n1, -1 + n2, n3, 0, 0, 1 + n6, 1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   (n6*j[p4, n1, -1 + n2, n3, 0, 0, 1 + n6, 1 + n7, 1, 0, 1, 1, 0, 1, 0])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   (n3*j[p4, n1, -1 + n2, 1 + n3, 0, 0, n6, 1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    (2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) + 
   ((2 - d - 2*n1 + 2*n6 + 2*n7)*j[p4, n1, n2, -1 + n3, 0, 0, n6, 1 + n7, 1, 
      0, 1, 1, 0, 1, 1])/(2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) + 
   j[p4, n1, n2, -1 + n3, 0, 0, n6, 1 + n7, 1, 0, 2, 0, 0, 1, 1]/
    (2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) + 
   ((2 + 2*n7)*j[p4, n1, n2, -1 + n3, 0, 0, n6, 2 + n7, 1, 0, 0, 1, 0, 1, 1])/
    (2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) + 
   ((-2 - 2*n7)*j[p4, n1, n2, -1 + n3, 0, 0, n6, 2 + n7, 1, 0, 1, 0, 0, 1, 
      1])/(2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) - 
   (n6*j[p4, n1, n2, -1 + n3, 0, 0, 1 + n6, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   ((-2 + 2*d - 2*n6)*j[p4, n1, n2, n3, -1, 0, n6, 1 + n7, 1, 0, 1, 1, 0, 1, 
      1])/(2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) + 
   (n6*j[p4, n1, n2, n3, -1, 0, 1 + n6, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) - 
   (n6*j[p4, n1, n2, n3, -1, 0, 1 + n6, 1 + n7, 1, 0, 0, 1, 0, 1, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   (n6*j[p4, n1, n2, n3, -1, 0, 1 + n6, 1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   (n6*j[p4, n1, n2, n3, -1, 0, 1 + n6, 1 + n7, 1, 0, 1, 1, 0, 1, 0])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   ((2 - 2*d + 2*n6)*j[p4, n1, n2, n3, 0, -1, n6, 1 + n7, 1, 0, 1, 1, 0, 1, 
      1])/(2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) - 
   (n6*j[p4, n1, n2, n3, 0, -1, 1 + n6, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   (n6*j[p4, n1, n2, n3, 0, -1, 1 + n6, 1 + n7, 1, 0, 0, 1, 0, 1, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) - 
   (n6*j[p4, n1, n2, n3, 0, -1, 1 + n6, 1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) - 
   (n6*j[p4, n1, n2, n3, 0, -1, 1 + n6, 1 + n7, 1, 0, 1, 1, 0, 1, 0])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   ((8 - 10*d + 2*d^2 + 2*n2 - 2*d*n2 + 8*n6 - 2*d*n6 + 2*n2*n6 + 4*n7 - 
      4*d*n7 + 4*n6*n7)*j[p4, n1, n2, n3, 0, 0, -1 + n6, 1 + n7, 1, 0, 1, 1, 
      0, 1, 1])/((-1 + n6)*(-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7)) - 
   (2*j[p4, n1, n2, n3, 0, 0, n6, n7, 0, 0, 1, 2, 0, 1, 1])/
    (2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) - 
   j[p4, n1, n2, n3, 0, 0, n6, n7, 0, 0, 2, 1, 0, 1, 1]/
    (2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) - 
   j[p4, n1, n2, n3, 0, 0, n6, n7, 1, 0, 2, 0, 0, 1, 1]/
    (2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) - 
   j[p4, n1, n2, n3, 0, 0, n6, n7, 1, 0, 2, 1, 0, 0, 1]/
    (2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) - 
   j[p4, n1, n2, n3, 0, 0, n6, n7, 2, 0, 1, 0, 0, 1, 1]/
    (2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) - 
   j[p4, n1, n2, n3, 0, 0, n6, n7, 2, 0, 1, 1, 0, 0, 1]/
    (2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) + 
   ((-7 + 2*d + n1 - 3*n3 - 6*n7)*j[p4, n1, n2, n3, 0, 0, n6, 1 + n7, 0, 0, 
      1, 1, 0, 1, 1])/(2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) + 
   j[p4, n1, n2, n3, 0, 0, n6, 1 + n7, 1, -1, 1, 1, 0, 0, 2]/
    (2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) + 
   ((3 - n1 - n2 - n3)*j[p4, n1, n2, n3, 0, 0, n6, 1 + n7, 1, 0, 0, 1, 0, 1, 
      1])/(-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   j[p4, n1, n2, n3, 0, 0, n6, 1 + n7, 1, 0, 0, 2, -1, 1, 1]/
    (2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) - 
   j[p4, n1, n2, n3, 0, 0, n6, 1 + n7, 1, 0, 0, 2, 0, 1, 1]/
    (2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) + 
   ((-2 + n1 + n3)*j[p4, n1, n2, n3, 0, 0, n6, 1 + n7, 1, 0, 1, 0, 0, 1, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   ((-7 + 2*d - n3 - 4*n7)*j[p4, n1, n2, n3, 0, 0, n6, 1 + n7, 1, 0, 1, 1, 0, 
      0, 1])/(2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) - 
   j[p4, n1, n2, n3, 0, 0, n6, 1 + n7, 1, 0, 1, 1, 0, 0, 2]/
    (2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) + 
   ((-8 + 2*d - 2*n2 - 4*n7)*j[p4, n1, n2, n3, 0, 0, n6, 1 + n7, 1, 0, 1, 1, 
      0, 1, 0])/(2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) + 
   ((8 - 2*d + 2*n2 + 4*n7)*j[p4, n1, n2, n3, 0, 0, n6, 1 + n7, 1, 0, 1, 1, 
      0, 1, 1])/(2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) + 
   j[p4, n1, n2, n3, 0, 0, n6, 1 + n7, 1, 0, 2, 0, -1, 1, 1]/
    (2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) - 
   j[p4, n1, n2, n3, 0, 0, n6, 1 + n7, 1, 0, 2, 0, 0, 1, 1]/
    (2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) + 
   (n6*j[p4, n1, n2, n3, 0, 0, 1 + n6, n7, 0, 0, 1, 1, 0, 1, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   (n6*j[p4, n1, n2, n3, 0, 0, 1 + n6, 1 + n7, 0, -1, 1, 1, 0, 1, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) - 
   (n6*j[p4, n1, n2, n3, 0, 0, 1 + n6, 1 + n7, 0, 0, 1, 1, -1, 1, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) - 
   (3*n3*j[p4, n1, n2, 1 + n3, 0, 0, n6, n7, 0, 0, 1, 1, 0, 1, 1])/
    (2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) + 
   (n3*j[p4, n1, n2, 1 + n3, 0, 0, n6, n7, 1, 0, 0, 1, 0, 1, 1])/
    (2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) - 
   (n3*j[p4, n1, n2, 1 + n3, 0, 0, n6, n7, 1, 0, 1, 0, 0, 1, 1])/
    (2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) - 
   (3*n3*j[p4, n1, n2, 1 + n3, 0, 0, n6, n7, 1, 0, 1, 1, 0, 0, 1])/
    (2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) + 
   (2*n3*j[p4, n1, n2, 1 + n3, 0, 0, n6, 1 + n7, 1, 0, 1, 1, -1, 0, 1])/
    (2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) - 
   (n3*j[p4, n1, n2, 1 + n3, 0, 0, n6, 1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    (2 + d - 2*n1 - 2*n2 - 2*n6 + 2*n7) - 
   (n2*j[p4, n1, 1 + n2, -1 + n3, 0, 0, n6, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) - 
   (2*n2*j[p4, n1, 1 + n2, -1 + n3, 0, 0, n6, 1 + n7, 1, 0, 0, 1, 0, 1, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   (2*n2*j[p4, n1, 1 + n2, n3, 0, 0, n6, n7, 0, 0, 1, 1, 0, 1, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   (n2*j[p4, n1, 1 + n2, n3, 0, 0, n6, n7, 1, 0, 0, 1, 0, 1, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   (2*n2*j[p4, n1, 1 + n2, n3, 0, 0, n6, n7, 1, 0, 1, 1, 0, 0, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) - 
   (2*n2*j[p4, n1, 1 + n2, n3, 0, 0, n6, n7, 1, 0, 1, 1, 0, 1, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) - 
   (n2*j[p4, n1, 1 + n2, n3, 0, 0, n6, 1 + n7, 0, 0, 1, 1, -1, 1, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   (2*n2*j[p4, n1, 1 + n2, n3, 0, 0, n6, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) - 
   (n1*j[p4, 1 + n1, -1 + n2, n3, 0, 0, n6, 1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   (n1*j[p4, 1 + n1, n2, n3, 0, 0, n6, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) + 
   (n1*j[p4, 1 + n1, n2, n3, 0, 0, n6, 1 + n7, 1, 0, 0, 1, 0, 1, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7) - 
   (n1*j[p4, 1 + n1, n2, n3, 0, 0, n6, 1 + n7, 1, 0, 1, 0, 0, 1, 1])/
    (-2 - d + 2*n1 + 2*n2 + 2*n6 - 2*n7), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n12 == 0 && n13 == 1 && n2 == 0 && n4 == 0 && n5 == 0 && 
    n6 == 1 && n7 == 0 && n9 == 0 &&  !(n11 == 1 || n8 == 1) -> 
  ((1 - 2*d + 2*n11 + n3 + n8)*j[p4, 0, 0, n3, 0, 0, 1, 0, -1 + n8, 0, n10, 
      n11, 0, 1, n14])/(-1 + n8) + 
   ((1 - d + n11)*j[p4, 0, 0, n3, 0, 0, 1, 0, n8, 0, n10, -1 + n11, 0, 1, 
      n14])/(-1 + n11) + j[p4, 0, 0, n3, 0, 0, 1, 0, n8, 0, n10, n11, 0, 0, 
    n14] - (n3*j[p4, 0, 0, 1 + n3, 0, 0, 1, 0, -1 + n8, 0, -1 + n10, n11, 0, 
      1, n14])/(-1 + n8) + ((n3 - d*n3 + n11*n3)*j[p4, 0, 0, 1 + n3, 0, 0, 1, 
      0, -1 + n8, 0, n10, -1 + n11, 0, 1, n14])/((-1 + n11)*(-1 + n8)) + 
   (n3*j[p4, 0, 0, 1 + n3, 0, 0, 1, 0, -1 + n8, 0, n10, n11, 0, 0, n14])/
    (-1 + n8), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n11 == 1 && n12 == 0 && n14 == 1 && n2 == 0 && n5 == 0 && 
    n6 == 1 && n7 == 0 && n9 == 0 && n13 != 1 -> 
  (n4*j[p4, -1, 0, n3, 1 + n4, 0, 1, 0, n8, 0, n10, 2, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n4*j[p4, 0, -1, n3, 1 + n4, 0, 1, 0, n8, 0, n10, 2, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   ((n4 + n4^2)*j[p4, 0, 0, -1 + n3, 2 + n4, 0, 1, 0, n8, 0, n10, 1, 0, 
      -1 + n13, 1])/((d - 2*n13)*(-1 + n13)) + 
   ((-4 + d - n4)*j[p4, 0, 0, n3, n4, 0, 1, 0, n8, 0, n10, 2, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) - 
   (n4*n8*j[p4, 0, 0, n3, n4, 0, 1, 0, 1 + n8, 0, n10, 1, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n4*j[p4, 0, 0, n3, 1 + n4, -1, 1, 0, n8, 0, n10, 2, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n4*j[p4, 0, 0, n3, 1 + n4, 0, 0, 0, n8, 0, n10, 2, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n4*n8*j[p4, 0, 0, n3, 1 + n4, 0, 0, 0, 1 + n8, 0, n10, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) - 
   (n4*j[p4, 0, 0, n3, 1 + n4, 0, 1, 0, n8, -1, n10, 2, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n4*j[p4, 0, 0, n3, 1 + n4, 0, 1, 0, n8, 0, -1 + n10, 2, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + ((-5*n4 + 2*n13*n4 - 2*n4^2)*
     j[p4, 0, 0, n3, 1 + n4, 0, 1, 0, n8, 0, n10, 1, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n4*n8*j[p4, 0, 0, n3, 1 + n4, 0, 1, 0, 1 + n8, 0, n10, 1, -1, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (n4*n8*j[p4, 0, 0, n3, 1 + n4, 0, 1, 0, 1 + n8, 0, n10, 1, 0, -2 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((n4 + n4^2)*j[p4, 0, 0, n3, 2 + n4, -1, 1, 0, n8, 0, n10, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((-n4 - n4^2)*j[p4, 0, 0, n3, 2 + n4, 0, 1, -1, n8, 0, n10, 1, 0, 
      -1 + n13, 1])/((d - 2*n13)*(-1 + n13)) + 
   ((-n4 - n4^2)*j[p4, 0, 0, n3, 2 + n4, 0, 1, 0, n8, 0, n10, 1, 0, -1 + n13, 
      0])/((d - 2*n13)*(-1 + n13)) - 
   (n3*n4*j[p4, 0, 0, 1 + n3, n4, 0, 1, 0, n8, 0, n10, 1, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n3*n4*j[p4, 0, 0, 1 + n3, 1 + n4, 0, 1, -1, n8, 0, n10, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (n3*n4*j[p4, 0, 0, 1 + n3, 1 + n4, 0, 1, 0, n8, 0, n10, 1, 0, -2 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (n3*n4*j[p4, 0, 0, 1 + n3, 1 + n4, 0, 1, 0, n8, 0, n10, 1, 0, -1 + n13, 
      0])/((d - 2*n13)*(-1 + n13)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n6 == 1 && n7 == 0 && n9 == 0 &&  !(n10 == 1 || n4 == 0) -> 
  ((-3 + 2*d - n3 - n4 - n5 - 2*n8)*j[p4, -1, 0, n3, 1 + n4, n5, 1, 0, n8, 0, 
      n10, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5)) - 
   (n8*j[p4, -1, 0, n3, 1 + n4, n5, 1, 0, 1 + n8, 0, n10, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5)) - (n5*j[p4, -1, 0, n3, 1 + n4, 1 + n5, 1, 0, n8, 
      0, n10, 1, 0, 0, 1])/(2*(-3 + d - n4 - n5)) + 
   (n5*j[p4, -1, 0, n3, 1 + n4, 1 + n5, 1, 0, n8, 0, n10, 1, 0, 1, 0])/
    (2*(-3 + d - n4 - n5)) + ((-1 - n4)*j[p4, -1, 0, n3, 2 + n4, n5, 1, 0, 
      n8, 0, n10, 1, 0, 1, 0])/(2*(3 - d + n4 + n5)) + 
   ((3 - d + n3 + n4)*j[p4, 0, -1, n3, 1 + n4, n5, 1, 0, n8, 0, n10, 1, 0, 1, 
      1])/(2*(-3 + d - n4 - n5)) + 
   (n8*j[p4, 0, -1, n3, 1 + n4, n5, 1, 0, 1 + n8, 0, n10, 0, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)) + (n8*j[p4, 0, -1, n3, 1 + n4, n5, 1, 0, 1 + n8, 
      0, n10, 1, 0, 0, 1])/(2*(-3 + d - n4 - n5)) - 
   j[p4, 0, -1, n3, 1 + n4, n5, 2, 0, -1 + n8, 0, n10, 1, 0, 1, 1]/
    (-3 + d - n4 - n5) + ((-4 + 2*d - n10 - n3 - n4 - 2*n5)*
     j[p4, 0, -1, n3, 1 + n4, n5, 2, 0, n8, 0, -1 + n10, 1, 0, 1, 1])/
    (2*(-1 + n10)*(-3 + d - n4 - n5)) + 
   (n5*j[p4, 0, -1, n3, 1 + n4, 1 + n5, 1, 0, n8, 0, n10, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5)) - (n5*j[p4, 0, -1, n3, 1 + n4, 1 + n5, 1, 0, n8, 
      0, n10, 1, 0, 1, 0])/(2*(-3 + d - n4 - n5)) + 
   ((1 + n4)*j[p4, 0, -1, n3, 2 + n4, n5, 1, 0, n8, 0, n10, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5)) + ((-8*n3 + 4*d*n3 - 3*n10*n3 - 2*n3^2 - 3*n3*n4 - 
      3*n3*n5)*j[p4, 0, -1, 1 + n3, 1 + n4, n5, 1, 0, n8, 0, -1 + n10, 1, 0, 
      1, 1])/(2*(-1 + n10)*(-3 + d - n4 - n5)) - 
   j[p4, 0, 0, -1 + n3, 1 + n4, n5, 0, 0, n8, 0, n10, 1, 0, 1, 2]/
    (2*(-3 + d - n4 - n5)) - j[p4, 0, 0, -1 + n3, 1 + n4, n5, 1, 0, n8, 0, 
     n10, 1, 0, 0, 2]/(2*(-3 + d - n4 - n5)) + 
   ((-7 + 3*d - n3 - 3*n4 - 2*n5 - 2*n8)*j[p4, 0, 0, -1 + n3, 1 + n4, n5, 1, 
      0, n8, 0, n10, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5)) - 
   j[p4, 0, 0, -1 + n3, 1 + n4, n5, 2, 0, -1 + n8, 0, n10, 1, 0, 1, 1]/
    (-3 + d - n4 - n5) + ((-7 + 3*d - n10 - 2*n3 - 2*n4 - 2*n5)*
     j[p4, 0, 0, -1 + n3, 1 + n4, n5, 2, 0, n8, 0, -1 + n10, 1, 0, 1, 1])/
    (2*(-1 + n10)*(-3 + d - n4 - n5)) + 
   ((-1 - n4)*j[p4, 0, 0, -1 + n3, 2 + n4, n5, 0, 0, n8, 0, n10, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5)) + ((1 + n4)*j[p4, 0, 0, -1 + n3, 2 + n4, n5, 1, 0, 
      -1 + n8, 0, n10, 1, 0, 1, 1])/(2*(3 - d + n4 + n5)) + 
   ((-7 + 3*d - n10 - 2*n3 - 9*n4 + 3*d*n4 - n10*n4 - 2*n3*n4 - 2*n4^2 - 
      2*n5 - 2*n4*n5)*j[p4, 0, 0, -1 + n3, 2 + n4, n5, 1, 0, n8, 0, -1 + n10, 
      1, 0, 1, 1])/(2*(-1 + n10)*(-3 + d - n4 - n5)) + 
   ((1 + n4)*j[p4, 0, 0, -1 + n3, 2 + n4, n5, 1, 0, n8, 0, n10, 0, 0, 1, 1])/
    (2*(3 - d + n4 + n5)) + j[p4, 0, 0, n3, n4, n5, 0, 0, n8, 0, n10, 1, 0, 
     1, 2]/(2*(-3 + d - n4 - n5)) + j[p4, 0, 0, n3, n4, n5, 1, 0, n8, 0, n10, 
     1, 0, 0, 2]/(2*(-3 + d - n4 - n5)) + 
   ((3 - d + n3 + n4)*j[p4, 0, 0, n3, n4, n5, 2, 0, n8, 0, -1 + n10, 1, 0, 1, 
      1])/(2*(-1 + n10)*(-3 + d - n4 - n5)) + 
   j[p4, 0, 0, n3, n4, n5, 2, 0, n8, 0, n10, 1, 0, 0, 1]/
    (2*(-3 + d - n4 - n5)) + j[p4, 0, 0, n3, n4, n5, 2, 0, n8, 0, n10, 1, 0, 
     1, 0]/(2*(-3 + d - n4 - n5)) + 
   (n5*j[p4, 0, 0, n3, n4, 1 + n5, 0, 0, n8, 0, n10, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)) - (n5*j[p4, 0, 0, n3, n4, 1 + n5, 1, 0, n8, 0, 
      n10, 1, 0, 0, 1])/(2*(-3 + d - n4 - n5)) + 
   (n5*j[p4, 0, 0, n3, n4, 1 + n5, 1, 0, n8, 0, n10, 1, 0, 1, 0])/
    (2*(-3 + d - n4 - n5)) + ((-3 + d - n3 - n4)*j[p4, 0, 0, n3, 1 + n4, 
      -1 + n5, 2, 0, n8, 0, -1 + n10, 1, 0, 1, 1])/
    (2*(-1 + n10)*(-3 + d - n4 - n5)) + 
   ((-3 + d - n5)*j[p4, 0, 0, n3, 1 + n4, n5, 0, 0, n8, 0, n10, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)) - (n8*j[p4, 0, 0, n3, 1 + n4, n5, 1, -1, 1 + n8, 
      0, n10, 0, 0, 1, 1])/(2*(-3 + d - n4 - n5)) - 
   (n8*j[p4, 0, 0, n3, 1 + n4, n5, 1, -1, 1 + n8, 0, n10, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5)) + ((9 - 4*d + 2*n10 + n3 + 2*n4 + n5 + 2*n8)*
     j[p4, 0, 0, n3, 1 + n4, n5, 1, 0, -1 + n8, 0, n10, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)) + ((-6 + 9*d - 3*d^2 - 6*n10 + 4*d*n10 - 2*n10^2 - 
      13*n3 + 7*d*n3 - 4*n10*n3 - 3*n3^2 - 3*n4 + 2*d*n4 - n10*n4 - 3*n3*n4 - 
      2*n5 + 3*d*n5 - 3*n10*n5 - 5*n3*n5 - n4*n5 - 2*n8 + 2*n10*n8)*
     j[p4, 0, 0, n3, 1 + n4, n5, 1, 0, n8, 0, -1 + n10, 1, 0, 1, 1])/
    (2*(-1 + n10)*(-3 + d - n4 - n5)) + 
   ((-3 + d - 2*n3 - n4)*j[p4, 0, 0, n3, 1 + n4, n5, 1, 0, n8, 0, n10, 0, 0, 
      1, 1])/(2*(-3 + d - n4 - n5)) + 
   ((7 - 3*d + 2*n10 + 2*n4 + 2*n5)*j[p4, 0, 0, n3, 1 + n4, n5, 1, 0, n8, 0, 
      n10, 1, 0, 0, 1])/(2*(-3 + d - n4 - n5)) + 
   ((-1 - n4)*j[p4, 0, 0, n3, 1 + n4, n5, 1, 0, n8, 0, n10, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5)) + ((6 - 3*d + 2*n10 + n3 + 2*n4 + 2*n5)*
     j[p4, 0, 0, n3, 1 + n4, n5, 1, 0, n8, 0, n10, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)) + (n8*j[p4, 0, 0, n3, 1 + n4, n5, 1, 0, 1 + n8, 0, 
      n10, 0, -1, 1, 1])/(2*(-3 + d - n4 - n5)) + 
   j[p4, 0, 0, n3, 1 + n4, n5, 2, -1, -1 + n8, 0, n10, 1, 0, 1, 1]/
    (-3 + d - n4 - n5) + ((7 - 3*d + n10 + 2*n3 + 2*n4 + 2*n5)*
     j[p4, 0, 0, n3, 1 + n4, n5, 2, -1, n8, 0, -1 + n10, 1, 0, 1, 1])/
    (2*(-1 + n10)*(-3 + d - n4 - n5)) + 
   j[p4, 0, 0, n3, 1 + n4, n5, 2, 0, -2 + n8, 0, n10, 1, 0, 1, 1]/
    (-3 + d - n4 - n5) - j[p4, 0, 0, n3, 1 + n4, n5, 2, 0, -1 + n8, -1, n10, 
     1, 0, 1, 1]/(2*(-3 + d - n4 - n5)) + 
   ((3 - 2*d + 2*n10 + n3 + n4 + 2*n5)*j[p4, 0, 0, n3, 1 + n4, n5, 2, 0, 
      -1 + n8, 0, -1 + n10, 1, 0, 1, 1])/(2*(-1 + n10)*(-3 + d - n4 - n5)) - 
   j[p4, 0, 0, n3, 1 + n4, n5, 2, 0, -1 + n8, 0, n10, 1, -1, 1, 1]/
    (-3 + d - n4 - n5) + j[p4, 0, 0, n3, 1 + n4, n5, 2, 0, -1 + n8, 0, n10, 
     1, 0, 0, 1]/(2*(-3 + d - n4 - n5)) + 
   j[p4, 0, 0, n3, 1 + n4, n5, 2, 0, -1 + n8, 0, n10, 1, 0, 1, 0]/
    (2*(-3 + d - n4 - n5)) - j[p4, 0, 0, n3, 1 + n4, n5, 2, 0, n8, -1, n10, 
     1, 0, 0, 1]/(2*(-3 + d - n4 - n5)) - 
   j[p4, 0, 0, n3, 1 + n4, n5, 2, 0, n8, -1, n10, 1, 0, 1, 0]/
    (2*(-3 + d - n4 - n5)) + ((-7 + 3*d - n10 - 2*n3 - 2*n4 - 2*n5)*
     j[p4, 0, 0, n3, 1 + n4, n5, 2, 0, n8, 0, -1 + n10, 1, -1, 1, 1])/
    (2*(-1 + n10)*(-3 + d - n4 - n5)) + 
   ((6 - 3*d + 2*n10 + 2*n3 + 2*n4 + 2*n5)*j[p4, 0, 0, n3, 1 + n4, n5, 2, 0, 
      n8, 0, -1 + n10, 1, 0, 0, 1])/(2*(-1 + n10)*(-3 + d - n4 - n5)) + 
   ((6 - 3*d + 2*n10 + 2*n3 + 2*n4 + 2*n5)*j[p4, 0, 0, n3, 1 + n4, n5, 2, 0, 
      n8, 0, -1 + n10, 1, 0, 1, 0])/(2*(-1 + n10)*(-3 + d - n4 - n5)) - 
   (n5*j[p4, 0, 0, n3, 1 + n4, 1 + n5, 0, -1, n8, 0, n10, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)) - (n5*j[p4, 0, 0, n3, 1 + n4, 1 + n5, 1, -1, n8, 
      0, n10, 1, 0, 0, 1])/(2*(-3 + d - n4 - n5)) + 
   (n5*j[p4, 0, 0, n3, 1 + n4, 1 + n5, 1, -1, n8, 0, n10, 1, 0, 1, 0])/
    (2*(-3 + d - n4 - n5)) - (n5*j[p4, 0, 0, n3, 1 + n4, 1 + n5, 1, 0, 
      -1 + n8, 0, n10, 1, 0, 0, 1])/(2*(-3 + d - n4 - n5)) + 
   (n5*j[p4, 0, 0, n3, 1 + n4, 1 + n5, 1, 0, -1 + n8, 0, n10, 1, 0, 1, 0])/
    (2*(-3 + d - n4 - n5)) + (n5*j[p4, 0, 0, n3, 1 + n4, 1 + n5, 1, 0, n8, 
      -1, n10, 1, 0, 0, 1])/(2*(-3 + d - n4 - n5)) - 
   (n5*j[p4, 0, 0, n3, 1 + n4, 1 + n5, 1, 0, n8, -1, n10, 1, 0, 1, 0])/
    (2*(-3 + d - n4 - n5)) + ((1 + n4)*j[p4, 0, 0, n3, 2 + n4, -1 + n5, 1, 0, 
      -1 + n8, 0, n10, 1, 0, 1, 1])/(3 - d + n4 + n5) + 
   ((3 - d + n3 + 4*n4 - d*n4 + n3*n4 + n4^2)*j[p4, 0, 0, n3, 2 + n4, 
      -1 + n5, 1, 0, n8, 0, -1 + n10, 1, 0, 1, 1])/
    (2*(-1 + n10)*(3 - d + n4 + n5)) + 
   ((-8 + 4*d - 3*n10 - 2*n3 - 11*n4 + 4*d*n4 - 3*n10*n4 - 2*n3*n4 - 3*n4^2 - 
      3*n5 - 3*n4*n5)*j[p4, 0, 0, n3, 2 + n4, n5, 0, 0, n8, 0, -1 + n10, 1, 
      0, 1, 1])/(2*(-1 + n10)*(-3 + d - n4 - n5)) + 
   ((-1 - n4)*j[p4, 0, 0, n3, 2 + n4, n5, 1, -1, -1 + n8, 0, n10, 1, 0, 1, 
      1])/(3 - d + n4 + n5) + ((-3 + d - n3 - 4*n4 + d*n4 - n3*n4 - n4^2)*
     j[p4, 0, 0, n3, 2 + n4, n5, 1, -1, n8, 0, -1 + n10, 1, 0, 1, 1])/
    (2*(-1 + n10)*(3 - d + n4 + n5)) + 
   ((-1 - n4)*j[p4, 0, 0, n3, 2 + n4, n5, 1, -1, n8, 0, n10, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5)) + ((8 - 4*d + 3*n10 + 2*n3 + 11*n4 - 4*d*n4 + 
      3*n10*n4 + 2*n3*n4 + 3*n4^2 + 3*n5 + 3*n4*n5)*
     j[p4, 0, 0, n3, 2 + n4, n5, 1, 0, -1 + n8, 0, -1 + n10, 1, 0, 1, 1])/
    (2*(-1 + n10)*(-3 + d - n4 - n5)) + 
   ((-1 - n4)*j[p4, 0, 0, n3, 2 + n4, n5, 1, 0, -1 + n8, 0, n10, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5)) + ((1 + n4)*j[p4, 0, 0, n3, 2 + n4, n5, 1, 0, n8, 
      -1, n10, 1, 0, 1, 0])/(2*(3 - d + n4 + n5)) + 
   ((6 - 3*d + 2*n10 + 2*n3 + 8*n4 - 3*d*n4 + 2*n10*n4 + 2*n3*n4 + 2*n4^2 + 
      2*n5 + 2*n4*n5)*j[p4, 0, 0, n3, 2 + n4, n5, 1, 0, n8, 0, -1 + n10, 1, 
      0, 1, 0])/(2*(-1 + n10)*(-3 + d - n4 - n5)) + 
   (n3*j[p4, 0, 0, 1 + n3, n4, n5, 1, 0, n8, 0, -1 + n10, 1, 0, 1, 1])/
    (2*(-1 + n10)) + (n3*j[p4, 0, 0, 1 + n3, 1 + n4, n5, 1, -1, -1 + n8, 0, 
      n10, 1, 0, 1, 1])/(-3 + d - n4 - n5) + 
   ((11*n3 - 5*d*n3 + 3*n10*n3 + 3*n3^2 + 4*n3*n4 + 3*n3*n5)*
     j[p4, 0, 0, 1 + n3, 1 + n4, n5, 1, -1, n8, 0, -1 + n10, 1, 0, 1, 1])/
    (2*(-1 + n10)*(-3 + d - n4 - n5)) + 
   ((8*n3 - 4*d*n3 + 3*n10*n3 + 2*n3^2 + 3*n3*n4 + 3*n3*n5)*
     j[p4, 0, 0, 1 + n3, 1 + n4, n5, 1, 0, -1 + n8, 0, -1 + n10, 1, 0, 1, 1])/
    ((-1 + n10)*(-3 + d - n4 - n5)) - 
   (n3*j[p4, 0, 0, 1 + n3, 1 + n4, n5, 1, 0, -1 + n8, 0, n10, 1, 0, 0, 1])/
    (-3 + d - n4 - n5) + ((-8*n3 + 4*d*n3 - 3*n10*n3 - 2*n3^2 - 3*n3*n4 - 
      3*n3*n5)*j[p4, 0, 0, 1 + n3, 1 + n4, n5, 1, 0, n8, 0, -1 + n10, 1, -1, 
      1, 1])/(2*(-1 + n10)*(-3 + d - n4 - n5)) + 
   ((5*n3 - 3*d*n3 + 3*n10*n3 + n3^2 + 2*n3*n4 + 3*n3*n5)*
     j[p4, 0, 0, 1 + n3, 1 + n4, n5, 1, 0, n8, 0, -1 + n10, 1, 0, 0, 1])/
    (2*(-1 + n10)*(-3 + d - n4 - n5)) - 
   (n3*j[p4, 0, 0, 1 + n3, 1 + n4, n5, 1, 0, n8, 0, -1 + n10, 1, 0, 1, 0])/
    (2*(-1 + n10)), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?Positive, (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, 
    (n7_)?NonPositive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n13 == 1 && n4 == 0 && n5 == 0 && 
    n6 == 1 && n7 == 0 && n9 == 0 &&  !(n11 == 1 || n8 == 1) -> 
  ((1 - 2*d + 2*n11 + n3 + n8)*j[p4, 0, n2, n3, 0, 0, 1, 0, -1 + n8, 0, 1, 
      n11, 0, 1, n14])/(-1 + n8) + 
   ((1 - d + n11)*j[p4, 0, n2, n3, 0, 0, 1, 0, n8, 0, 1, -1 + n11, 0, 1, 
      n14])/(-1 + n11) + j[p4, 0, n2, n3, 0, 0, 1, 0, n8, 0, 1, n11, 0, 0, 
    n14] - (n3*j[p4, 0, n2, 1 + n3, 0, 0, 1, 0, -1 + n8, 0, 0, n11, 0, 1, 
      n14])/(-1 + n8) + ((n3 - d*n3 + n11*n3)*j[p4, 0, n2, 1 + n3, 0, 0, 1, 
      0, -1 + n8, 0, 1, -1 + n11, 0, 1, n14])/((-1 + n11)*(-1 + n8)) + 
   (n3*j[p4, 0, n2, 1 + n3, 0, 0, 1, 0, -1 + n8, 0, 1, n11, 0, 0, n14])/
    (-1 + n8) - (n2*j[p4, 0, 1 + n2, -1 + n3, 0, 0, 1, 0, -1 + n8, 0, 1, n11, 
      0, 1, n14])/(-1 + n8) - (n2*j[p4, 0, 1 + n2, -1 + n3, 0, 0, 1, 0, n8, 
      0, 1, -1 + n11, 0, 1, n14])/(-1 + n11) + 
   (n2*j[p4, 0, 1 + n2, n3, 0, 0, 1, -1, -1 + n8, 0, 1, n11, 0, 1, n14])/
    (-1 + n8) + (n2*j[p4, 0, 1 + n2, n3, 0, 0, 1, -1, n8, 0, 1, -1 + n11, 0, 
      1, n14])/(-1 + n11) + (n2*j[p4, 0, 1 + n2, n3, 0, 0, 1, 0, -2 + n8, 0, 
      1, n11, 0, 1, n14])/(-1 + n8) + 
   ((-n2 - n2*n3 + n2*n8)*j[p4, 0, 1 + n2, n3, 0, 0, 1, 0, -1 + n8, 0, 1, 
      -1 + n11, 0, 1, n14])/((-1 + n11)*(-1 + n8)) - 
   (n2*j[p4, 0, 1 + n2, n3, 0, 0, 1, 0, -1 + n8, 0, 1, n11, -1, 1, n14])/
    (-1 + n8) + (2*n2*j[p4, 0, 1 + n2, n3, 0, 0, 1, 0, -1 + n8, 0, 1, n11, 0, 
      0, n14])/(-1 + n8) - (n2*j[p4, 0, 1 + n2, n3, 0, 0, 1, 0, n8, 0, 1, 
      -1 + n11, -1, 1, n14])/(-1 + n11) + 
   (2*n2*j[p4, 0, 1 + n2, n3, 0, 0, 1, 0, n8, 0, 1, -1 + n11, 0, 0, n14])/
    (-1 + n11) + (n2*n3*j[p4, 0, 1 + n2, 1 + n3, 0, 0, 1, -1, -1 + n8, 0, 1, 
      -1 + n11, 0, 1, n14])/((-1 + n11)*(-1 + n8)) + 
   (n2*n3*j[p4, 0, 1 + n2, 1 + n3, 0, 0, 1, 0, -2 + n8, 0, 1, -1 + n11, 0, 1, 
      n14])/((-1 + n11)*(-1 + n8)) - 
   (n2*n3*j[p4, 0, 1 + n2, 1 + n3, 0, 0, 1, 0, -1 + n8, 0, 1, -1 + n11, -1, 
      1, n14])/((-1 + n11)*(-1 + n8)) + 
   (2*n2*n3*j[p4, 0, 1 + n2, 1 + n3, 0, 0, 1, 0, -1 + n8, 0, 1, -1 + n11, 0, 
      0, n14])/((-1 + n11)*(-1 + n8)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n14 == 1 && n2 == 0 && 
    n5 == 0 && n6 == 1 && n7 == 0 && n13 != 1 -> 
  (n4*j[p4, -1, 0, n3, 1 + n4, 0, 1, 0, n8, n9, 1, 2, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n4*j[p4, 0, -1, n3, 1 + n4, 0, 1, 0, n8, n9, 1, 2, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   ((n4 + n4^2)*j[p4, 0, 0, -1 + n3, 2 + n4, 0, 1, 0, n8, n9, 1, 1, 0, 
      -1 + n13, 1])/((d - 2*n13)*(-1 + n13)) + 
   ((-4 + d - n4)*j[p4, 0, 0, n3, n4, 0, 1, 0, n8, n9, 1, 2, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n4*n8*j[p4, 0, 0, n3, n4, 0, 1, 0, 1 + n8, n9, 1, 1, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n4*j[p4, 0, 0, n3, 1 + n4, -1, 1, 0, n8, n9, 1, 2, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n4*j[p4, 0, 0, n3, 1 + n4, 0, 0, 0, n8, n9, 1, 2, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n4*n8*j[p4, 0, 0, n3, 1 + n4, 0, 0, 0, 1 + n8, n9, 1, 1, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n4*j[p4, 0, 0, n3, 1 + n4, 0, 1, 0, n8, -1 + n9, 1, 2, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n4*j[p4, 0, 0, n3, 1 + n4, 0, 1, 0, n8, n9, 0, 2, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + ((-5*n4 + 2*n13*n4 - 2*n4^2)*
     j[p4, 0, 0, n3, 1 + n4, 0, 1, 0, n8, n9, 1, 1, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n4*n8*j[p4, 0, 0, n3, 1 + n4, 0, 1, 0, 1 + n8, n9, 1, 1, -1, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (n4*n8*j[p4, 0, 0, n3, 1 + n4, 0, 1, 0, 1 + n8, n9, 1, 1, 0, -2 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   ((n4 + n4^2)*j[p4, 0, 0, n3, 2 + n4, -1, 1, 0, n8, n9, 1, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((-n4 - n4^2)*j[p4, 0, 0, n3, 2 + n4, 0, 1, -1, n8, n9, 1, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((-n4 - n4^2)*j[p4, 0, 0, n3, 2 + n4, 0, 1, 0, n8, n9, 1, 1, 0, -1 + n13, 
      0])/((d - 2*n13)*(-1 + n13)) - 
   (n3*n4*j[p4, 0, 0, 1 + n3, n4, 0, 1, 0, n8, n9, 1, 1, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n3*n4*j[p4, 0, 0, 1 + n3, 1 + n4, 0, 1, -1, n8, n9, 1, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (n3*n4*j[p4, 0, 0, 1 + n3, 1 + n4, 0, 1, 0, n8, n9, 1, 1, 0, -2 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n3*n4*j[p4, 0, 0, 1 + n3, 1 + n4, 0, 1, 0, n8, n9, 1, 1, 0, -1 + n13, 0])/
    ((d - 2*n13)*(-1 + n13)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n4 == 0 && 
    n5 == 0 && n6 == 1 && n9 == 0 &&  !(n3 == 1 || n7 == 0 || n8 == 1) -> 
  ((1 + n7)*j[p4, 0, -1 + n2, -1 + n3, 0, 0, 1, 2 + n7, n8, 0, 1, 1, 0, 1, 
      n14])/(2*(-1 + n3)) + j[p4, 0, -1 + n2, n3, 0, 0, 1, 1 + n7, n8, 0, 1, 
    1, 0, 1, n14] + ((1 + n7)*j[p4, 0, n2, -2 + n3, 0, 0, 1, 2 + n7, n8, 0, 
      1, 1, 0, 1, n14])/(2*(-1 + n3)) + 
   ((d - n3 - n8)*j[p4, 0, n2, -1 + n3, 0, 0, 1, 1 + n7, -1 + n8, 0, 1, 2, 0, 
      1, n14])/(2*(-1 + n3)*(-1 + n8)) + 
   ((-5 + 2*d - 2*n7 - 2*n8)*j[p4, 0, n2, -1 + n3, 0, 0, 1, 1 + n7, n8, 0, 1, 
      1, 0, 1, n14])/(2*(-1 + n3)) - j[p4, 0, n2, -1 + n3, 0, 0, 1, 1 + n7, 
     n8, 0, 1, 2, 0, 0, n14]/(2*(-1 + n3)) + 
   j[p4, 0, n2, -1 + n3, 0, 0, 1, 1 + n7, n8, 0, 1, 2, 0, 1, n14]/
    (2*(-1 + n3)) + ((-1 - n7)*j[p4, 0, n2, -1 + n3, 0, 0, 1, 2 + n7, 
      -1 + n8, 0, 1, 1, 0, 1, n14])/(2*(-1 + n3)) + 
   ((-1 - n7)*j[p4, 0, n2, -1 + n3, 0, 0, 1, 2 + n7, n8, 0, 1, 1, 0, 0, n14])/
    (2*(-1 + n3)) + j[p4, 0, n2, n3, 0, 0, 1, 1 + n7, -1 + n8, 0, 0, 2, 0, 1, 
     n14]/(2*(-1 + n8)) + ((1 - 2*n7 - 2*n8)*j[p4, 0, n2, n3, 0, 0, 1, 
      1 + n7, -1 + n8, 0, 1, 1, 0, 1, n14])/(2*(-1 + n8)) - 
   j[p4, 0, n2, n3, 0, 0, 1, 1 + n7, -1 + n8, 0, 1, 2, 0, 0, n14]/
    (2*(-1 + n8)) - (n3*j[p4, 0, n2, 1 + n3, 0, 0, 1, n7, -1 + n8, 0, 1, 1, 
      0, 1, n14])/(-1 + n8) + 
   (n3*j[p4, 0, n2, 1 + n3, 0, 0, 1, 1 + n7, -1 + n8, 0, 1, 1, 0, 0, n14])/
    (-1 + n8) + (n2*j[p4, 0, 1 + n2, -2 + n3, 0, 0, 1, 1 + n7, -1 + n8, 0, 1, 
      2, 0, 1, n14])/(2*(-1 + n3)*(-1 + n8)) + 
   (n2*j[p4, 0, 1 + n2, -2 + n3, 0, 0, 1, 1 + n7, n8, 0, 1, 1, 0, 1, n14])/
    (2*(-1 + n3)) - (n2*j[p4, 0, 1 + n2, -1 + n3, 0, 0, 1, n7, -1 + n8, 0, 1, 
      2, 0, 1, n14])/(2*(-1 + n3)*(-1 + n8)) - 
   (n2*j[p4, 0, 1 + n2, -1 + n3, 0, 0, 1, n7, n8, 0, 1, 1, 0, 1, n14])/
    (2*(-1 + n3)) - (n2*j[p4, 0, 1 + n2, -1 + n3, 0, 0, 1, 1 + n7, -2 + n8, 
      0, 1, 2, 0, 1, n14])/(2*(-1 + n3)*(-1 + n8)) + 
   ((2*n2 - n2*n3 - n2*n8)*j[p4, 0, 1 + n2, -1 + n3, 0, 0, 1, 1 + n7, 
      -1 + n8, 0, 1, 1, 0, 1, n14])/(2*(-1 + n3)*(-1 + n8)) + 
   (n2*j[p4, 0, 1 + n2, -1 + n3, 0, 0, 1, 1 + n7, -1 + n8, 0, 1, 2, -1, 1, 
      n14])/(2*(-1 + n3)*(-1 + n8)) - 
   (n2*j[p4, 0, 1 + n2, -1 + n3, 0, 0, 1, 1 + n7, -1 + n8, 0, 1, 2, 0, 0, 
      n14])/((-1 + n3)*(-1 + n8)) + 
   (n2*j[p4, 0, 1 + n2, -1 + n3, 0, 0, 1, 1 + n7, n8, 0, 1, 1, -1, 1, n14])/
    (2*(-1 + n3)) - (n2*j[p4, 0, 1 + n2, -1 + n3, 0, 0, 1, 1 + n7, n8, 0, 1, 
      1, 0, 0, n14])/(-1 + n3) + 
   (n2*j[p4, 0, 1 + n2, n3, 0, 0, 1, n7, -1 + n8, 0, 1, 1, 0, 1, n14])/
    (2*(-1 + n8)) + (n2*j[p4, 0, 1 + n2, n3, 0, 0, 1, 1 + n7, -2 + n8, 0, 1, 
      1, 0, 1, n14])/(2*(-1 + n8)) - 
   (n2*j[p4, 0, 1 + n2, n3, 0, 0, 1, 1 + n7, -1 + n8, 0, 1, 1, -1, 1, n14])/
    (2*(-1 + n8)) + (n2*j[p4, 0, 1 + n2, n3, 0, 0, 1, 1 + n7, -1 + n8, 0, 1, 
      1, 0, 0, n14])/(-1 + n8), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n6 == 1 && n7 == -1 && n9 == 0 &&  !(n4 == 0 || n8 == 1) -> 
  j[p4, -1, n2, -1 + n3, 1 + n4, n5, 1, -1, -1 + n8, 0, 1, 1, 0, 2, 1]/
    (-1 + n8) + (n5*j[p4, -1, n2, n3, n4, 1 + n5, 1, -1, -1 + n8, 0, 1, 1, 0, 
      1, 1])/(-1 + n8) + j[p4, -1, n2, n3, 1 + n4, n5, 1, -1, -1 + n8, 0, 0, 
     2, 0, 1, 1]/(-1 + n8) + ((d - n2 - n5)*j[p4, -1, n2, n3, 1 + n4, n5, 1, 
      -1, -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) + 
   (n2*j[p4, -1, 1 + n2, n3, 1 + n4, n5, 1, -1, -2 + n8, 0, 1, 1, 0, 1, 1])/
    (-1 + n8) + j[p4, 0, -1 + n2, -1 + n3, 1 + n4, n5, 1, 0, -1 + n8, 0, 1, 
     1, 0, 1, 1]/(1 - n8) + j[p4, 0, -1 + n2, n3, 1 + n4, n5, 0, -1, -1 + n8, 
     0, 2, 1, 0, 1, 1]/(1 - n8) + ((-4 + 3*d - n2 - n3 - 2*n4 - 2*n5 - 2*n8)*
     j[p4, 0, -1 + n2, n3, 1 + n4, n5, 1, -1, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (-1 + n8) + j[p4, 0, -1 + n2, n3, 1 + n4, n5, 1, 0, -1 + n8, 0, 1, 1, 0, 
     0, 1]/(-1 + n8) - (n5*j[p4, 0, -1 + n2, n3, 1 + n4, 1 + n5, 1, -1, 
      -1 + n8, 0, 1, 1, 0, 0, 1])/(-1 + n8) + 
   (n5*j[p4, 0, -1 + n2, n3, 1 + n4, 1 + n5, 1, -1, -1 + n8, 0, 1, 1, 0, 1, 
      0])/(-1 + n8) + (n3*j[p4, 0, -1 + n2, 1 + n3, 1 + n4, n5, 1, -1, 
      -1 + n8, 0, 1, 1, 0, 1, 0])/(-1 + n8) + 
   j[p4, 0, n2, -1 + n3, n4, n5, 1, 0, -1 + n8, 0, 1, 1, 0, 1, 1]/(1 - n8) + 
   j[p4, 0, n2, -1 + n3, 1 + n4, -1 + n5, 1, 0, -1 + n8, 0, 1, 1, 0, 1, 1]/
    (-1 + n8) + j[p4, 0, n2, -1 + n3, 1 + n4, n5, 1, -1, -1 + n8, -1, 2, 1, 
     0, 1, 1]/(1 - n8) + ((1 + n2)*j[p4, 0, n2, -1 + n3, 1 + n4, n5, 1, -1, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) + 
   j[p4, 0, n2, -1 + n3, 1 + n4, n5, 1, -1, -1 + n8, 0, 1, 1, 0, 2, 1]/
    (1 - n8) + ((-1 + 2*d - n4 - 2*n5 - 2*n8)*j[p4, 0, n2, n3, n4, n5, 1, -1, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) + 
   j[p4, 0, n2, n3, n4, n5, 1, 0, -2 + n8, 0, 1, 1, 0, 1, 1]/(-1 + n8) + 
   j[p4, 0, n2, n3, n4, n5, 1, 0, -1 + n8, 0, 1, 1, 0, 0, 1]/(-1 + n8) - 
   (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, -1, -1 + n8, 0, 1, 1, 0, 0, 1])/
    (-1 + n8) + (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, -1, -1 + n8, 0, 1, 1, 0, 
      1, 0])/(-1 + n8) - (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, -1, -1 + n8, 0, 
      1, 1, 0, 1, 1])/(-1 + n8) + j[p4, 0, n2, n3, 1 + n4, -1 + n5, 1, -1, 
     -2 + n8, 0, 1, 1, 0, 2, 1]/(1 - n8) + 
   ((1 - d + n5)*j[p4, 0, n2, n3, 1 + n4, -1 + n5, 1, -1, -1 + n8, 0, 1, 1, 
      0, 1, 1])/(-1 + n8) + j[p4, 0, n2, n3, 1 + n4, -1 + n5, 1, 0, -2 + n8, 
     0, 1, 1, 0, 1, 1]/(1 - n8) + j[p4, 0, n2, n3, 1 + n4, -1 + n5, 1, 0, 
     -1 + n8, 0, 1, 1, 0, 0, 1]/(1 - n8) + 
   j[p4, 0, n2, n3, 1 + n4, n5, 0, -2, -1 + n8, 0, 2, 1, 0, 1, 1]/(-1 + n8) + 
   ((1 - n2 + n4 + n5)*j[p4, 0, n2, n3, 1 + n4, n5, 0, -1, -1 + n8, 0, 1, 1, 
      0, 1, 1])/(-1 + n8) + j[p4, 0, n2, n3, 1 + n4, n5, 0, -1, -1 + n8, 0, 
     1, 2, -1, 1, 1]/(1 - n8) + j[p4, 0, n2, n3, 1 + n4, n5, 0, -1, -1 + n8, 
     0, 1, 2, 0, 1, 1]/(-1 + n8) + j[p4, 0, n2, n3, 1 + n4, n5, 0, -1, 
     -1 + n8, 0, 2, 1, -1, 1, 1]/(1 - n8) + 
   j[p4, 0, n2, n3, 1 + n4, n5, 0, -1, -1 + n8, 0, 2, 1, 0, 1, 1]/(-1 + n8) + 
   j[p4, 0, n2, n3, 1 + n4, n5, 0, -1, n8, 0, 1, 1, 0, 1, 1] + 
   j[p4, 0, n2, n3, 1 + n4, n5, 1, -2, -2 + n8, 0, 1, 2, 0, 1, 1]/(1 - n8) + 
   ((5 - 4*d + n2 + n3 + 2*n4 + 3*n5 + 2*n8)*j[p4, 0, n2, n3, 1 + n4, n5, 1, 
      -2, -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) + 
   j[p4, 0, n2, n3, 1 + n4, n5, 1, -1, -2 + n8, -1, 2, 1, 0, 1, 1]/
    (-1 + n8) + ((3 - n2 - n4)*j[p4, 0, n2, n3, 1 + n4, n5, 1, -1, -2 + n8, 
      0, 1, 1, 0, 1, 1])/(-1 + n8) + j[p4, 0, n2, n3, 1 + n4, n5, 1, -1, 
     -2 + n8, 0, 1, 2, -1, 1, 1]/(1 - n8) + 
   j[p4, 0, n2, n3, 1 + n4, n5, 1, -1, -2 + n8, 0, 1, 2, 0, 1, 1]/(-1 + n8) + 
   ((-5 + 4*d - 2*n2 - 2*n3 - 2*n4 - 2*n5 - 2*n8)*j[p4, 0, n2, n3, 1 + n4, 
      n5, 1, -1, -1 + n8, -1, 1, 1, 0, 1, 1])/(-1 + n8) + 
   j[p4, 0, n2, n3, 1 + n4, n5, 1, -1, -1 + n8, -1, 2, 1, 0, 0, 1]/
    (-1 + n8) + j[p4, 0, n2, n3, 1 + n4, n5, 1, -1, -1 + n8, 0, 0, 1, 0, 1, 
     1]/(-1 + n8) + j[p4, 0, n2, n3, 1 + n4, n5, 1, -1, -1 + n8, 0, 1, 0, 0, 
     1, 1]/(1 - n8) + ((-3 + 3*d - n2 - n3 - 2*n4 - 2*n5 - 2*n8)*
     j[p4, 0, n2, n3, 1 + n4, n5, 1, -1, -1 + n8, 0, 1, 1, -1, 1, 1])/
    (-1 + n8) + j[p4, 0, n2, n3, 1 + n4, n5, 1, -1, -1 + n8, 0, 1, 1, -1, 2, 
     0]/(-1 + n8) + ((-1 - 2*n2 + n5)*j[p4, 0, n2, n3, 1 + n4, n5, 1, -1, 
      -1 + n8, 0, 1, 1, 0, 0, 1])/(-1 + n8) + 
   ((1 - n5)*j[p4, 0, n2, n3, 1 + n4, n5, 1, -1, -1 + n8, 0, 1, 1, 0, 1, 0])/
    (-1 + n8) + ((1 - 2*d + 2*n2 + n5 + n8)*j[p4, 0, n2, n3, 1 + n4, n5, 1, 
      -1, -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) - 
   (n5*j[p4, 0, n2, n3, 1 + n4, 1 + n5, 1, -2, -1 + n8, -1, 1, 1, 0, 1, 1])/
    (-1 + n8) + (n5*j[p4, 0, n2, n3, 1 + n4, 1 + n5, 1, -2, -1 + n8, 0, 1, 1, 
      0, 0, 1])/(-1 + n8) - (n5*j[p4, 0, n2, n3, 1 + n4, 1 + n5, 1, -2, 
      -1 + n8, 0, 1, 1, 0, 1, 0])/(-1 + n8) + 
   (n5*j[p4, 0, n2, n3, 1 + n4, 1 + n5, 1, -2, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (-1 + n8) - (2*n3*j[p4, 0, n2, 1 + n3, n4, n5, 1, -1, -2 + n8, 0, 1, 1, 
      0, 1, 1])/(-1 + n8) - (n3*j[p4, 0, n2, 1 + n3, n4, n5, 1, -1, -1 + n8, 
      0, 1, 1, 0, 0, 1])/(-1 + n8) - 
   (n3*j[p4, 0, n2, 1 + n3, 1 + n4, n5, 1, -2, -1 + n8, 0, 1, 1, 0, 1, 0])/
    (-1 + n8) + (n3*j[p4, 0, n2, 1 + n3, 1 + n4, n5, 1, -1, -1 + n8, 0, 1, 1, 
      -1, 1, 0])/(-1 + n8) + (n2*j[p4, 0, 1 + n2, -1 + n3, n4, n5, 1, -1, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) - 
   (n2*j[p4, 0, 1 + n2, -1 + n3, 1 + n4, -1 + n5, 1, -1, -1 + n8, 0, 1, 1, 0, 
      1, 1])/(-1 + n8) - (n2*j[p4, 0, 1 + n2, -1 + n3, 1 + n4, n5, 1, -2, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) - 
   (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, -2, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (-1 + n8) - (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, -1, -2 + n8, 0, 1, 1, 0, 
      1, 1])/(-1 + n8) + (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, -1, -1 + n8, 0, 
      1, 1, -1, 1, 1])/(-1 + n8) - 
   (2*n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, -1, -1 + n8, 0, 1, 1, 0, 0, 1])/
    (-1 + n8) + (n2*j[p4, 0, 1 + n2, n3, 1 + n4, -1 + n5, 1, -2, -1 + n8, 0, 
      1, 1, 0, 1, 1])/(-1 + n8) - 
   (n2*j[p4, 0, 1 + n2, n3, 1 + n4, -1 + n5, 1, -1, -1 + n8, 0, 1, 1, -1, 1, 
      1])/(-1 + n8) + (2*n2*j[p4, 0, 1 + n2, n3, 1 + n4, -1 + n5, 1, -1, 
      -1 + n8, 0, 1, 1, 0, 0, 1])/(-1 + n8) - 
   (n2*j[p4, 0, 1 + n2, n3, 1 + n4, -1 + n5, 1, -1, -1 + n8, 0, 1, 1, 0, 1, 
      1])/(-1 + n8) + (n2*j[p4, 0, 1 + n2, n3, 1 + n4, n5, 0, -2, -1 + n8, 0, 
      1, 1, 0, 1, 1])/(-1 + n8) + 
   (n2*j[p4, 0, 1 + n2, n3, 1 + n4, n5, 0, -1, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (-1 + n8) + (n2*j[p4, 0, 1 + n2, n3, 1 + n4, n5, 1, -3, -1 + n8, 0, 1, 1, 
      0, 1, 1])/(-1 + n8) + (n2*j[p4, 0, 1 + n2, n3, 1 + n4, n5, 1, -2, 
      -2 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) - 
   (n2*j[p4, 0, 1 + n2, n3, 1 + n4, n5, 1, -2, -1 + n8, 0, 0, 1, 0, 1, 1])/
    (-1 + n8) - (n2*j[p4, 0, 1 + n2, n3, 1 + n4, n5, 1, -2, -1 + n8, 0, 1, 1, 
      -1, 1, 1])/(-1 + n8) + (2*n2*j[p4, 0, 1 + n2, n3, 1 + n4, n5, 1, -2, 
      -1 + n8, 0, 1, 1, 0, 0, 1])/(-1 + n8) + 
   (n2*j[p4, 0, 1 + n2, n3, 1 + n4, n5, 1, -2, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (-1 + n8) - (n2*j[p4, 0, 1 + n2, n3, 1 + n4, n5, 1, -1, -2 + n8, 0, 1, 1, 
      0, 1, 1])/(-1 + n8), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n6 == 1 && n7 == 0 && n9 == 0 &&  !(n4 == 0 || n8 == 1) -> 
  j[p4, -1, n2, -1 + n3, 1 + n4, n5, 1, 0, -1 + n8, 0, 1, 1, 0, 2, 1]/
    (-1 + n8) + (n5*j[p4, -1, n2, n3, n4, 1 + n5, 1, 0, -1 + n8, 0, 1, 1, 0, 
      1, 1])/(-1 + n8) + j[p4, -1, n2, n3, 1 + n4, n5, 1, 0, -1 + n8, 0, 0, 
     2, 0, 1, 1]/(-1 + n8) + ((-2 + d - n2 - n5)*j[p4, -1, n2, n3, 1 + n4, 
      n5, 1, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) + 
   (n2*j[p4, -1, 1 + n2, n3, 1 + n4, n5, 1, 0, -2 + n8, 0, 1, 1, 0, 1, 1])/
    (-1 + n8) + j[p4, 0, -1 + n2, n3, 1 + n4, n5, 0, 0, -1 + n8, 0, 2, 1, 0, 
     1, 1]/(1 - n8) + ((-5 + 3*d - n2 - n3 - 2*n4 - 2*n5 - 2*n8)*
     j[p4, 0, -1 + n2, n3, 1 + n4, n5, 1, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (-1 + n8) - (n5*j[p4, 0, -1 + n2, n3, 1 + n4, 1 + n5, 1, 0, -1 + n8, 0, 
      1, 1, 0, 0, 1])/(-1 + n8) + 
   (n5*j[p4, 0, -1 + n2, n3, 1 + n4, 1 + n5, 1, 0, -1 + n8, 0, 1, 1, 0, 1, 
      0])/(-1 + n8) + (n3*j[p4, 0, -1 + n2, 1 + n3, 1 + n4, n5, 1, 0, 
      -1 + n8, 0, 1, 1, 0, 1, 0])/(-1 + n8) + 
   j[p4, 0, n2, -1 + n3, 1 + n4, n5, 1, 0, -1 + n8, -1, 2, 1, 0, 1, 1]/
    (1 - n8) + (n2*j[p4, 0, n2, -1 + n3, 1 + n4, n5, 1, 0, -1 + n8, 0, 1, 1, 
      0, 1, 1])/(-1 + n8) + j[p4, 0, n2, -1 + n3, 1 + n4, n5, 1, 0, -1 + n8, 
     0, 1, 1, 0, 2, 1]/(1 - n8) + ((-2 + 2*d - n4 - 2*n5 - 2*n8)*
     j[p4, 0, n2, n3, n4, n5, 1, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) - 
   (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, 0, -1 + n8, 0, 1, 1, 0, 0, 1])/
    (-1 + n8) + (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, 0, -1 + n8, 0, 1, 1, 0, 
      1, 0])/(-1 + n8) - (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, 0, -1 + n8, 0, 
      1, 1, 0, 1, 1])/(-1 + n8) + j[p4, 0, n2, n3, 1 + n4, -1 + n5, 1, 0, 
     -2 + n8, 0, 1, 1, 0, 2, 1]/(1 - n8) + 
   ((2 - d + n5)*j[p4, 0, n2, n3, 1 + n4, -1 + n5, 1, 0, -1 + n8, 0, 1, 1, 0, 
      1, 1])/(-1 + n8) + j[p4, 0, n2, n3, 1 + n4, n5, 0, -1, -1 + n8, 0, 2, 
     1, 0, 1, 1]/(-1 + n8) + ((1 - n2 + n4 + n5)*j[p4, 0, n2, n3, 1 + n4, n5, 
      0, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) + 
   j[p4, 0, n2, n3, 1 + n4, n5, 0, 0, -1 + n8, 0, 1, 2, -1, 1, 1]/(1 - n8) + 
   j[p4, 0, n2, n3, 1 + n4, n5, 0, 0, -1 + n8, 0, 1, 2, 0, 1, 1]/(-1 + n8) + 
   j[p4, 0, n2, n3, 1 + n4, n5, 0, 0, -1 + n8, 0, 2, 1, -1, 1, 1]/(1 - n8) + 
   j[p4, 0, n2, n3, 1 + n4, n5, 0, 0, -1 + n8, 0, 2, 1, 0, 1, 1]/(-1 + n8) + 
   j[p4, 0, n2, n3, 1 + n4, n5, 0, 0, n8, 0, 1, 1, 0, 1, 1] + 
   j[p4, 0, n2, n3, 1 + n4, n5, 1, -1, -2 + n8, 0, 1, 2, 0, 1, 1]/(1 - n8) + 
   ((7 - 4*d + n2 + n3 + 2*n4 + 3*n5 + 2*n8)*j[p4, 0, n2, n3, 1 + n4, n5, 1, 
      -1, -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) + 
   j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, -2 + n8, -1, 2, 1, 0, 1, 1]/(-1 + n8) + 
   ((2 - n2 - n4)*j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, -2 + n8, 0, 1, 1, 0, 1, 
      1])/(-1 + n8) + j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, -2 + n8, 0, 1, 2, 
     -1, 1, 1]/(1 - n8) + j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, -2 + n8, 0, 1, 
     2, 0, 1, 1]/(-1 + n8) + ((-7 + 4*d - 2*n2 - 2*n3 - 2*n4 - 2*n5 - 2*n8)*
     j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, -1 + n8, -1, 1, 1, 0, 1, 1])/
    (-1 + n8) + j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, -1 + n8, -1, 2, 1, 0, 0, 
     1]/(-1 + n8) + ((-5 + 3*d - n2 - n3 - 2*n4 - 2*n5 - 2*n8)*
     j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, -1 + n8, 0, 1, 1, -1, 1, 1])/
    (-1 + n8) + j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, -1 + n8, 0, 1, 1, -1, 2, 
     0]/(-1 + n8) + ((-2*n2 + n5)*j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, -1 + n8, 
      0, 1, 1, 0, 0, 1])/(-1 + n8) + 
   ((1 - n5)*j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, -1 + n8, 0, 1, 1, 0, 1, 0])/
    (-1 + n8) + ((3 - 2*d + 2*n2 + n5 + n8)*j[p4, 0, n2, n3, 1 + n4, n5, 1, 
      0, -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) - 
   (n5*j[p4, 0, n2, n3, 1 + n4, 1 + n5, 1, -1, -1 + n8, -1, 1, 1, 0, 1, 1])/
    (-1 + n8) + (n5*j[p4, 0, n2, n3, 1 + n4, 1 + n5, 1, -1, -1 + n8, 0, 1, 1, 
      0, 0, 1])/(-1 + n8) - (n5*j[p4, 0, n2, n3, 1 + n4, 1 + n5, 1, -1, 
      -1 + n8, 0, 1, 1, 0, 1, 0])/(-1 + n8) + 
   (n5*j[p4, 0, n2, n3, 1 + n4, 1 + n5, 1, -1, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (-1 + n8) - (2*n3*j[p4, 0, n2, 1 + n3, n4, n5, 1, 0, -2 + n8, 0, 1, 1, 0, 
      1, 1])/(-1 + n8) - (n3*j[p4, 0, n2, 1 + n3, n4, n5, 1, 0, -1 + n8, 0, 
      1, 1, 0, 0, 1])/(-1 + n8) - 
   (n3*j[p4, 0, n2, 1 + n3, 1 + n4, n5, 1, -1, -1 + n8, 0, 1, 1, 0, 1, 0])/
    (-1 + n8) + (n3*j[p4, 0, n2, 1 + n3, 1 + n4, n5, 1, 0, -1 + n8, 0, 1, 1, 
      -1, 1, 0])/(-1 + n8) + (n2*j[p4, 0, 1 + n2, -1 + n3, n4, n5, 1, 0, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) - 
   (n2*j[p4, 0, 1 + n2, -1 + n3, 1 + n4, -1 + n5, 1, 0, -1 + n8, 0, 1, 1, 0, 
      1, 1])/(-1 + n8) - (n2*j[p4, 0, 1 + n2, -1 + n3, 1 + n4, n5, 1, -1, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) - 
   (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, -1, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (-1 + n8) - (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, 0, -2 + n8, 0, 1, 1, 0, 
      1, 1])/(-1 + n8) + (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, 0, -1 + n8, 0, 
      1, 1, -1, 1, 1])/(-1 + n8) - 
   (2*n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, 0, -1 + n8, 0, 1, 1, 0, 0, 1])/
    (-1 + n8) + (n2*j[p4, 0, 1 + n2, n3, 1 + n4, -1 + n5, 1, -1, -1 + n8, 0, 
      1, 1, 0, 1, 1])/(-1 + n8) - 
   (n2*j[p4, 0, 1 + n2, n3, 1 + n4, -1 + n5, 1, 0, -1 + n8, 0, 1, 1, -1, 1, 
      1])/(-1 + n8) + (2*n2*j[p4, 0, 1 + n2, n3, 1 + n4, -1 + n5, 1, 0, 
      -1 + n8, 0, 1, 1, 0, 0, 1])/(-1 + n8) - 
   (n2*j[p4, 0, 1 + n2, n3, 1 + n4, -1 + n5, 1, 0, -1 + n8, 0, 1, 1, 0, 1, 
      1])/(-1 + n8) + (n2*j[p4, 0, 1 + n2, n3, 1 + n4, n5, 0, -1, -1 + n8, 0, 
      1, 1, 0, 1, 1])/(-1 + n8) + 
   (n2*j[p4, 0, 1 + n2, n3, 1 + n4, n5, 0, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (-1 + n8) + (n2*j[p4, 0, 1 + n2, n3, 1 + n4, n5, 1, -2, -1 + n8, 0, 1, 1, 
      0, 1, 1])/(-1 + n8) + (n2*j[p4, 0, 1 + n2, n3, 1 + n4, n5, 1, -1, 
      -2 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) - 
   (n2*j[p4, 0, 1 + n2, n3, 1 + n4, n5, 1, -1, -1 + n8, 0, 0, 1, 0, 1, 1])/
    (-1 + n8) - (n2*j[p4, 0, 1 + n2, n3, 1 + n4, n5, 1, -1, -1 + n8, 0, 1, 1, 
      -1, 1, 1])/(-1 + n8) + (2*n2*j[p4, 0, 1 + n2, n3, 1 + n4, n5, 1, -1, 
      -1 + n8, 0, 1, 1, 0, 0, 1])/(-1 + n8) + 
   (n2*j[p4, 0, 1 + n2, n3, 1 + n4, n5, 1, -1, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (-1 + n8) - (n2*j[p4, 0, 1 + n2, n3, 1 + n4, n5, 1, 0, -2 + n8, 0, 1, 1, 
      0, 1, 1])/(-1 + n8), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n12 == 0 && n14 == 1 && n2 == 0 && n5 == 0 && n6 == 1 && 
    n7 == 0 && n8 == 1 && n9 == 0 && n13 != 1 -> 
  (n11*n4*j[p4, -1, 0, n3, 1 + n4, 0, 1, 0, 1, 0, n10, 1 + n11, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) - 
   (n11*n4*j[p4, 0, -1, n3, 1 + n4, 0, 1, 0, 1, 0, n10, 1 + n11, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((n4 + n4^2)*j[p4, 0, 0, -1 + n3, 2 + n4, 0, 1, 0, 1, 0, n10, n11, 0, 
      -1 + n13, 1])/((d - 2*n13)*(-1 + n13)) + 
   ((-2*n11 + d*n11 - 2*n11^2 - n11*n4)*j[p4, 0, 0, n3, n4, 0, 1, 0, 1, 0, 
      n10, 1 + n11, 0, -1 + n13, 1])/((d - 2*n13)*(-1 + n13)) - 
   (n4*j[p4, 0, 0, n3, n4, 0, 1, 0, 2, 0, n10, n11, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n11*n4*j[p4, 0, 0, n3, 1 + n4, -1, 1, 0, 1, 0, n10, 1 + n11, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (n11*n4*j[p4, 0, 0, n3, 1 + n4, 0, 0, 0, 1, 0, n10, 1 + n11, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (n4*j[p4, 0, 0, n3, 1 + n4, 0, 0, 0, 2, 0, n10, n11, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n11*n4*j[p4, 0, 0, n3, 1 + n4, 0, 1, 0, 1, -1, n10, 1 + n11, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (n11*n4*j[p4, 0, 0, n3, 1 + n4, 0, 1, 0, 1, 0, -1 + n10, 1 + n11, 0, 
      -1 + n13, 1])/((d - 2*n13)*(-1 + n13)) + 
   ((-4*n4 - n11*n4 + 2*n13*n4 - 2*n4^2)*j[p4, 0, 0, n3, 1 + n4, 0, 1, 0, 1, 
      0, n10, n11, 0, -1 + n13, 1])/((d - 2*n13)*(-1 + n13)) - 
   (n4*j[p4, 0, 0, n3, 1 + n4, 0, 1, 0, 2, 0, n10, n11, -1, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n4*j[p4, 0, 0, n3, 1 + n4, 0, 1, 0, 2, 0, n10, n11, 0, -2 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   ((n4 + n4^2)*j[p4, 0, 0, n3, 2 + n4, -1, 1, 0, 1, 0, n10, n11, 0, 
      -1 + n13, 1])/((d - 2*n13)*(-1 + n13)) + 
   ((-n4 - n4^2)*j[p4, 0, 0, n3, 2 + n4, 0, 1, -1, 1, 0, n10, n11, 0, 
      -1 + n13, 1])/((d - 2*n13)*(-1 + n13)) + 
   ((-n4 - n4^2)*j[p4, 0, 0, n3, 2 + n4, 0, 1, 0, 1, 0, n10, n11, 0, 
      -1 + n13, 0])/((d - 2*n13)*(-1 + n13)) - 
   (n3*n4*j[p4, 0, 0, 1 + n3, n4, 0, 1, 0, 1, 0, n10, n11, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n3*n4*j[p4, 0, 0, 1 + n3, 1 + n4, 0, 1, -1, 1, 0, n10, n11, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (n3*n4*j[p4, 0, 0, 1 + n3, 1 + n4, 0, 1, 0, 1, 0, n10, n11, 0, -2 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (n3*n4*j[p4, 0, 0, 1 + n3, 1 + n4, 0, 1, 0, 1, 0, n10, n11, 0, -1 + n13, 
      0])/((d - 2*n13)*(-1 + n13)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && n6 == 1 && 
    n7 == 0 && n8 == 1 && n9 == 0 &&  !(n10 == 1 || n4 == 0) -> 
  (n10*j[p4, -1 + n1, 0, n3, 1 + n4, n5, 1, 0, 0, 0, 1 + n10, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)) + ((-17 + 7*d - 2*n1 - n10 - 4*n3 - 4*n4 - 4*n5)*
     j[p4, -1 + n1, 0, n3, 1 + n4, n5, 1, 0, 1, 0, n10, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)) + (n10*j[p4, -1 + n1, 0, n3, 1 + n4, n5, 1, 0, 1, 
      0, 1 + n10, 1, 0, 0, 1])/(2*(-3 + d - n4 - n5)) - 
   j[p4, -1 + n1, 0, n3, 1 + n4, n5, 1, 0, 2, 0, n10, 1, 0, 0, 1]/
    (2*(-3 + d - n4 - n5)) - (n5*j[p4, -1 + n1, 0, n3, 1 + n4, 1 + n5, 1, 0, 
      1, 0, n10, 1, 0, 0, 1])/(2*(-3 + d - n4 - n5)) + 
   (n5*j[p4, -1 + n1, 0, n3, 1 + n4, 1 + n5, 1, 0, 1, 0, n10, 1, 0, 1, 0])/
    (2*(-3 + d - n4 - n5)) + ((-1 - n4)*j[p4, -1 + n1, 0, n3, 2 + n4, n5, 1, 
      0, 1, 0, n10, 1, 0, 1, 0])/(2*(3 - d + n4 + n5)) - 
   (n10*j[p4, n1, -1, n3, 1 + n4, n5, 1, 0, 0, 0, 1 + n10, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)) + ((13 - 5*d + n10 + 4*n3 + 4*n4 + 2*n5)*
     j[p4, n1, -1, n3, 1 + n4, n5, 1, 0, 1, 0, n10, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)) - (n10*j[p4, n1, -1, n3, 1 + n4, n5, 1, 0, 1, 0, 
      1 + n10, 0, 0, 1, 1])/(2*(-3 + d - n4 - n5)) - 
   (n10*j[p4, n1, -1, n3, 1 + n4, n5, 1, 0, 1, 0, 1 + n10, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5)) + j[p4, n1, -1, n3, 1 + n4, n5, 1, 0, 2, 0, n10, 
     0, 0, 1, 1]/(2*(-3 + d - n4 - n5)) + 
   j[p4, n1, -1, n3, 1 + n4, n5, 1, 0, 2, 0, n10, 1, 0, 0, 1]/
    (2*(-3 + d - n4 - n5)) - j[p4, n1, -1, n3, 1 + n4, n5, 2, 0, 0, 0, n10, 
     1, 0, 1, 1]/(2*(-3 + d - n4 - n5)) + 
   ((10 - 3*d - 2*n1 + 4*n3 + 4*n4)*j[p4, n1, -1, n3, 1 + n4, n5, 2, 0, 1, 0, 
      -1 + n10, 1, 0, 1, 1])/(2*(-1 + n10)*(-3 + d - n4 - n5)) + 
   ((1 + n4)*j[p4, n1, -1, n3, 2 + n4, n5, 1, 0, 1, 0, n10, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5)) + ((-3*n3 + 2*d*n3 - 3*n10*n3 - 2*n3*n4 - 2*n3*n5)*
     j[p4, n1, -1, 1 + n3, 1 + n4, n5, 1, 0, 1, 0, -1 + n10, 1, 0, 1, 1])/
    (2*(-1 + n10)*(-3 + d - n4 - n5)) + 
   ((-6 + 3*d - 2*n1 - 2*n10 - 2*n4 - 2*n5)*j[p4, n1, 0, -1 + n3, 1 + n4, n5, 
      1, 0, 1, 0, n10, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5)) - 
   (n10*j[p4, n1, 0, -1 + n3, 1 + n4, n5, 1, 0, 1, 0, 1 + n10, 0, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)) - j[p4, n1, 0, -1 + n3, 1 + n4, n5, 2, 0, 0, 0, 
     n10, 1, 0, 1, 1]/(2*(-3 + d - n4 - n5)) - 
   j[p4, n1, 0, -1 + n3, 1 + n4, n5, 2, 0, 1, 0, -1 + n10, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5)) + ((-1 - n4)*j[p4, n1, 0, -1 + n3, 2 + n4, n5, 1, 
      0, 0, 0, n10, 1, 0, 1, 1])/(2*(3 - d + n4 + n5)) + 
   ((1 + n4)*j[p4, n1, 0, -1 + n3, 2 + n4, n5, 1, 0, 1, 0, n10, 0, 0, 1, 1])/
    (2*(3 - d + n4 + n5)) + j[p4, n1, 0, n3, n4, n5, 2, 0, 0, 0, n10, 1, 0, 
     1, 1]/(2*(-3 + d - n4 - n5)) + ((10 - 3*d - 2*n1 + 4*n3 + 4*n4)*
     j[p4, n1, 0, n3, n4, n5, 2, 0, 1, 0, -1 + n10, 1, 0, 1, 1])/
    (2*(-1 + n10)*(-3 + d - n4 - n5)) + 
   j[p4, n1, 0, n3, n4, n5, 2, 0, 1, 0, n10, 1, 0, 0, 1]/
    (2*(-3 + d - n4 - n5)) + j[p4, n1, 0, n3, n4, n5, 2, 0, 1, 0, n10, 1, 0, 
     1, 0]/(2*(-3 + d - n4 - n5)) - 
   (n5*j[p4, n1, 0, n3, n4, 1 + n5, 1, 0, 1, 0, n10, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5)) + (n5*j[p4, n1, 0, n3, n4, 1 + n5, 1, 0, 1, 0, 
      n10, 1, 0, 1, 0])/(2*(-3 + d - n4 - n5)) + 
   ((-9 + 3*d + 2*n1 - n10 - 4*n3 - 4*n4)*j[p4, n1, 0, n3, 1 + n4, -1 + n5, 
      2, 0, 1, 0, -1 + n10, 1, 0, 1, 1])/(2*(-1 + n10)*(-3 + d - n4 - n5)) + 
   j[p4, n1, 0, n3, 1 + n4, n5, 0, 0, 1, 0, n10, 1, 0, 1, 1] - 
   j[p4, n1, 0, n3, 1 + n4, n5, 1, -1, 0, 0, n10, 2, 0, 1, 1]/
    (-3 + d - n4 - n5) + (n10*j[p4, n1, 0, n3, 1 + n4, n5, 1, -1, 0, 0, 
      1 + n10, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5)) + 
   (n10*j[p4, n1, 0, n3, 1 + n4, n5, 1, -1, 1, 0, 1 + n10, 0, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)) + (n10*j[p4, n1, 0, n3, 1 + n4, n5, 1, -1, 1, 0, 
      1 + n10, 1, 0, 0, 1])/(2*(-3 + d - n4 - n5)) - 
   j[p4, n1, 0, n3, 1 + n4, n5, 1, -1, 2, 0, n10, 0, 0, 1, 1]/
    (2*(-3 + d - n4 - n5)) - j[p4, n1, 0, n3, 1 + n4, n5, 1, -1, 2, 0, n10, 
     1, 0, 0, 1]/(2*(-3 + d - n4 - n5)) + 
   j[p4, n1, 0, n3, 1 + n4, n5, 1, 0, 0, 0, -1 + n10, 2, 0, 1, 1]/
    (-3 + d - n4 - n5) + ((-n1 - 2*n10 + n4)*j[p4, n1, 0, n3, 1 + n4, n5, 1, 
      0, 0, 0, n10, 1, 0, 1, 1])/(2*(3 - d + n4 + n5)) - 
   j[p4, n1, 0, n3, 1 + n4, n5, 1, 0, 0, 0, n10, 2, -1, 1, 1]/
    (2*(-3 + d - n4 - n5)) + j[p4, n1, 0, n3, 1 + n4, n5, 1, 0, 0, 0, n10, 2, 
     0, 1, 1]/(2*(-3 + d - n4 - n5)) + 
   ((-15 + d^2 - n1 + 2*d*n1 + 8*n10 - d*n10 - n1*n10 - n10^2 + 6*n3 - 
      5*d*n3 - 2*n1*n3 + 2*n10*n3 + 4*n3^2 - n4 - 3*d*n4 - 2*n1*n4 + 
      3*n10*n4 + 6*n3*n4 + 2*n4^2 - 4*n5 + 2*d*n5 - 2*n10*n5 - 2*n3*n5 - 
      2*n4*n5)*j[p4, n1, 0, n3, 1 + n4, n5, 1, 0, 1, 0, -1 + n10, 1, 0, 1, 
      1])/(2*(-1 + n10)*(-3 + d - n4 - n5)) + 
   ((-9 + 3*d + n1 - n10 - 4*n3 - 3*n4)*j[p4, n1, 0, n3, 1 + n4, n5, 1, 0, 1, 
      0, n10, 0, 0, 1, 1])/(2*(-3 + d - n4 - n5)) + 
   ((-1 - n1 + n10)*j[p4, n1, 0, n3, 1 + n4, n5, 1, 0, 1, 0, n10, 1, 0, 0, 
      1])/(-3 + d - n4 - n5) + 
   ((-1 - n4)*j[p4, n1, 0, n3, 1 + n4, n5, 1, 0, 1, 0, n10, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5)) + ((6 - 3*d + 2*n1 + 2*n10 + 2*n4 + 2*n5)*
     j[p4, n1, 0, n3, 1 + n4, n5, 1, 0, 1, 0, n10, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)) - (n10*j[p4, n1, 0, n3, 1 + n4, n5, 1, 0, 1, 0, 
      1 + n10, 0, -1, 1, 1])/(2*(-3 + d - n4 - n5)) + 
   (n10*j[p4, n1, 0, n3, 1 + n4, n5, 1, 0, 1, 0, 1 + n10, 0, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)) - j[p4, n1, 0, n3, 1 + n4, n5, 1, 0, 2, 0, 
     -1 + n10, 1, -1, 1, 1]/(2*(-3 + d - n4 - n5)) + 
   j[p4, n1, 0, n3, 1 + n4, n5, 1, 0, 2, 0, -1 + n10, 1, 0, 0, 1]/
    (2*(-3 + d - n4 - n5)) + j[p4, n1, 0, n3, 1 + n4, n5, 1, 0, 2, 0, n10, 0, 
     -1, 1, 1]/(2*(-3 + d - n4 - n5)) + 
   j[p4, n1, 0, n3, 1 + n4, n5, 2, -1, 0, 0, n10, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5)) + j[p4, n1, 0, n3, 1 + n4, n5, 2, -1, 1, 0, 
     -1 + n10, 1, 0, 1, 1]/(2*(-3 + d - n4 - n5)) + 
   ((-11 + 3*d + 2*n1 + n10 - 4*n3 - 4*n4)*j[p4, n1, 0, n3, 1 + n4, n5, 2, 0, 
      0, 0, -1 + n10, 1, 0, 1, 1])/(2*(-1 + n10)*(-3 + d - n4 - n5)) - 
   j[p4, n1, 0, n3, 1 + n4, n5, 2, 0, 0, 0, n10, 1, -1, 1, 1]/
    (2*(-3 + d - n4 - n5)) - j[p4, n1, 0, n3, 1 + n4, n5, 2, 0, 1, -1, n10, 
     1, 0, 0, 1]/(2*(-3 + d - n4 - n5)) - 
   j[p4, n1, 0, n3, 1 + n4, n5, 2, 0, 1, -1, n10, 1, 0, 1, 0]/
    (2*(-3 + d - n4 - n5)) - j[p4, n1, 0, n3, 1 + n4, n5, 2, 0, 1, 0, 
     -1 + n10, 1, -1, 1, 1]/(2*(-3 + d - n4 - n5)) + 
   j[p4, n1, 0, n3, 1 + n4, n5, 2, 0, 1, 0, -1 + n10, 1, 0, 0, 1]/
    (-3 + d - n4 - n5) + j[p4, n1, 0, n3, 1 + n4, n5, 2, 0, 1, 0, -1 + n10, 
     1, 0, 1, 0]/(-3 + d - n4 - n5) + 
   (n5*j[p4, n1, 0, n3, 1 + n4, 1 + n5, 1, -1, 1, 0, n10, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5)) - (n5*j[p4, n1, 0, n3, 1 + n4, 1 + n5, 1, -1, 1, 
      0, n10, 1, 0, 1, 0])/(2*(-3 + d - n4 - n5)) + 
   (n5*j[p4, n1, 0, n3, 1 + n4, 1 + n5, 1, 0, 1, -1, n10, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5)) - (n5*j[p4, n1, 0, n3, 1 + n4, 1 + n5, 1, 0, 1, 
      -1, n10, 1, 0, 1, 0])/(2*(-3 + d - n4 - n5)) + 
   ((10 - 3*d - 2*n1 + 4*n3 + 14*n4 - 3*d*n4 - 2*n1*n4 + 4*n3*n4 + 4*n4^2)*
     j[p4, n1, 0, n3, 2 + n4, -1 + n5, 1, 0, 1, 0, -1 + n10, 1, 0, 1, 1])/
    (2*(-1 + n10)*(3 - d + n4 + n5)) + 
   ((-3 + 2*d - 3*n10 - 5*n4 + 2*d*n4 - 3*n10*n4 - 2*n4^2 - 2*n5 - 2*n4*n5)*
     j[p4, n1, 0, n3, 2 + n4, n5, 0, 0, 1, 0, -1 + n10, 1, 0, 1, 1])/
    (2*(-1 + n10)*(-3 + d - n4 - n5)) + 
   ((-10 + 3*d + 2*n1 - 4*n3 - 14*n4 + 3*d*n4 + 2*n1*n4 - 4*n3*n4 - 4*n4^2)*
     j[p4, n1, 0, n3, 2 + n4, n5, 1, -1, 1, 0, -1 + n10, 1, 0, 1, 1])/
    (2*(-1 + n10)*(3 - d + n4 + n5)) + 
   ((-1 - n4)*j[p4, n1, 0, n3, 2 + n4, n5, 1, -1, 1, 0, n10, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5)) + ((3 - 2*d + 3*n10 + 5*n4 - 2*d*n4 + 3*n10*n4 + 
      2*n4^2 + 2*n5 + 2*n4*n5)*j[p4, n1, 0, n3, 2 + n4, n5, 1, 0, 0, 0, 
      -1 + n10, 1, 0, 1, 1])/(2*(-1 + n10)*(-3 + d - n4 - n5)) + 
   ((1 + n4)*j[p4, n1, 0, n3, 2 + n4, n5, 1, 0, 1, -1, n10, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5)) + ((-1 - n4)*j[p4, n1, 0, n3, 2 + n4, n5, 1, 0, 1, 
      0, -1 + n10, 1, 0, 1, 0])/(2*(3 - d + n4 + n5)) + 
   (n3*j[p4, n1, 0, 1 + n3, n4, n5, 1, 0, 1, 0, -1 + n10, 1, 0, 1, 1])/
    (-1 + n10) + ((13*n3 - 5*d*n3 - 2*n1*n3 + 3*n10*n3 + 4*n3^2 + 6*n3*n4 + 
      2*n3*n5)*j[p4, n1, 0, 1 + n3, 1 + n4, n5, 1, -1, 1, 0, -1 + n10, 1, 0, 
      1, 1])/(2*(-1 + n10)*(-3 + d - n4 - n5)) + 
   ((3*n3 - 2*d*n3 + 3*n10*n3 + 2*n3*n4 + 2*n3*n5)*j[p4, n1, 0, 1 + n3, 
      1 + n4, n5, 1, 0, 0, 0, -1 + n10, 1, 0, 1, 1])/
    ((-1 + n10)*(-3 + d - n4 - n5)) + 
   ((-3*n3 + 2*d*n3 - 3*n10*n3 - 2*n3*n4 - 2*n3*n5)*
     j[p4, n1, 0, 1 + n3, 1 + n4, n5, 1, 0, 1, 0, -1 + n10, 1, -1, 1, 1])/
    (2*(-1 + n10)*(-3 + d - n4 - n5)) + 
   ((-7*n3 + d*n3 + 2*n1*n3 + 3*n10*n3 - 4*n3^2 - 2*n3*n4 + 2*n3*n5)*
     j[p4, n1, 0, 1 + n3, 1 + n4, n5, 1, 0, 1, 0, -1 + n10, 1, 0, 0, 1])/
    (2*(-1 + n10)*(-3 + d - n4 - n5)) - 
   (n3*j[p4, n1, 0, 1 + n3, 1 + n4, n5, 1, 0, 1, 0, -1 + n10, 1, 0, 1, 0])/
    (-1 + n10) + (n1*j[p4, 1 + n1, -1, n3, 1 + n4, n5, 1, 0, 1, 0, n10, 1, 0, 
      0, 1])/(2*(-3 + d - n4 - n5)) - 
   (n1*j[p4, 1 + n1, 0, n3, 1 + n4, n5, 1, 0, 0, 0, n10, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)) - (n1*j[p4, 1 + n1, 0, n3, 1 + n4, n5, 1, 0, 1, 0, 
      -1 + n10, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5)) + 
   (n1*j[p4, 1 + n1, 0, n3, 1 + n4, n5, 1, 0, 1, 0, n10, 0, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n14 == 1 && n5 == 0 && n6 == 1 && 
    n7 == 0 && n8 == 1 && n9 == 0 &&  !(n13 == 1 || n2 == 0 || n3 == 1) -> 
  -((n11*j[p4, 0, n2, n3, n4, 0, 1, 0, 1, 0, 1, 1 + n11, 0, -1 + n13, 1])/
     (-1 + n13)) - (2*j[p4, 0, n2, n3, n4, 0, 1, 0, 2, 0, 1, n11, 0, 
      -1 + n13, 1])/(-1 + n13) + 
   (n3*j[p4, 0, n2, 1 + n3, n4, 0, 1, 0, 1, 0, 1, n11, 0, -1 + n13, 1])/
    (-1 + n13) - (n4*j[p4, 0, 1 + n2, -2 + n3, 1 + n4, 0, 1, 0, 1, 0, 1, n11, 
      0, n13, 1])/(-1 + n3) - (n11*n4*j[p4, 0, 1 + n2, -2 + n3, 1 + n4, 0, 1, 
      0, 1, 0, 1, 1 + n11, 0, -1 + n13, 1])/((-1 + n13)*(-1 + n3)) + 
   (n11*j[p4, 0, 1 + n2, -1 + n3, n4, 0, 1, 0, 0, 0, 1, 1 + n11, 0, n13, 1])/
    (-1 + n3) + ((1 - d + n11 + n3 + n4)*j[p4, 0, 1 + n2, -1 + n3, n4, 0, 1, 
      0, 1, 0, 1, n11, 0, n13, 1])/(-1 + n3) + 
   ((4*n11 - n11*n13 + n11*n2 - n11*n3 + n11*n4)*j[p4, 0, 1 + n2, -1 + n3, 
      n4, 0, 1, 0, 1, 0, 1, 1 + n11, 0, -1 + n13, 1])/
    ((-1 + n13)*(-1 + n3)) - (n11*j[p4, 0, 1 + n2, -1 + n3, n4, 0, 1, 0, 1, 
      0, 1, 1 + n11, 0, n13, 1])/(-1 + n3) + 
   ((3 + d - n11 - 2*n13 + n2)*j[p4, 0, 1 + n2, -1 + n3, n4, 0, 1, 0, 2, 0, 
      1, n11, 0, -1 + n13, 1])/((-1 + n13)*(-1 + n3)) - 
   (n11*j[p4, 0, 1 + n2, -1 + n3, n4, 0, 1, 0, 2, 0, 1, 1 + n11, 0, -2 + n13, 
      1])/((-1 + n13)*(-1 + n3)) + 
   (n11*j[p4, 0, 1 + n2, -1 + n3, n4, 0, 1, 0, 2, 0, 1, 1 + n11, 0, -1 + n13, 
      1])/((-1 + n13)*(-1 + n3)) - 
   (n4*j[p4, 0, 1 + n2, -1 + n3, 1 + n4, -1, 1, 0, 1, 0, 1, n11, 0, n13, 1])/
    (-1 + n3) - (n11*n4*j[p4, 0, 1 + n2, -1 + n3, 1 + n4, -1, 1, 0, 1, 0, 1, 
      1 + n11, 0, -1 + n13, 1])/((-1 + n13)*(-1 + n3)) - 
   (n4*j[p4, 0, 1 + n2, -1 + n3, 1 + n4, 0, 0, 0, 1, 0, 1, n11, 0, n13, 1])/
    (-1 + n3) - (n11*n4*j[p4, 0, 1 + n2, -1 + n3, 1 + n4, 0, 0, 0, 1, 0, 1, 
      1 + n11, 0, -1 + n13, 1])/((-1 + n13)*(-1 + n3)) + 
   (n4*j[p4, 0, 1 + n2, -1 + n3, 1 + n4, 0, 1, -1, 1, 0, 1, n11, 0, n13, 1])/
    (-1 + n3) + (n11*n4*j[p4, 0, 1 + n2, -1 + n3, 1 + n4, 0, 1, -1, 1, 0, 1, 
      1 + n11, 0, -1 + n13, 1])/((-1 + n13)*(-1 + n3)) + 
   (n4*j[p4, 0, 1 + n2, -1 + n3, 1 + n4, 0, 1, 0, 0, 0, 1, n11, 0, n13, 1])/
    (-1 + n3) + (n11*n4*j[p4, 0, 1 + n2, -1 + n3, 1 + n4, 0, 1, 0, 0, 0, 1, 
      1 + n11, 0, -1 + n13, 1])/((-1 + n13)*(-1 + n3)) + 
   (n4*j[p4, 0, 1 + n2, -1 + n3, 1 + n4, 0, 1, 0, 1, 0, 1, n11, 0, -1 + n13, 
      1])/(-1 + n13) + (n4*j[p4, 0, 1 + n2, -1 + n3, 1 + n4, 0, 1, 0, 1, 0, 
      1, n11, 0, n13, 0])/(-1 + n3) + 
   (n11*n4*j[p4, 0, 1 + n2, -1 + n3, 1 + n4, 0, 1, 0, 1, 0, 1, 1 + n11, 0, 
      -1 + n13, 0])/((-1 + n13)*(-1 + n3)) + 
   (2*n11*j[p4, 0, 1 + n2, n3, n4, 0, 1, -1, 1, 0, 1, 1 + n11, 0, -1 + n13, 
      1])/(-1 + n13) + (2*j[p4, 0, 1 + n2, n3, n4, 0, 1, -1, 2, 0, 1, n11, 0, 
      -1 + n13, 1])/(-1 + n13) + j[p4, 0, 1 + n2, n3, n4, 0, 1, 0, 0, 0, 1, 
    n11, 0, n13, 1] + (2*n11*j[p4, 0, 1 + n2, n3, n4, 0, 1, 0, 0, 0, 1, 
      1 + n11, 0, -1 + n13, 1])/(-1 + n13) + 
   ((-1 - n13 - 3*n2 + 3*n3 + n4)*j[p4, 0, 1 + n2, n3, n4, 0, 1, 0, 1, 0, 1, 
      n11, 0, -1 + n13, 1])/(-1 + n13) - 
   (n11*j[p4, 0, 1 + n2, n3, n4, 0, 1, 0, 1, 0, 1, 1 + n11, -1, -1 + n13, 1])/
    (-1 + n13) + j[p4, 0, 1 + n2, n3, n4, 0, 1, 0, 2, 0, 1, n11, -1, 
     -1 + n13, 1]/(1 - n13) + j[p4, 0, 1 + n2, n3, n4, 0, 1, 0, 2, 0, 1, n11, 
     0, -2 + n13, 1]/(-1 + n13) - 
   (n4*j[p4, 0, 1 + n2, n3, 1 + n4, -1, 1, 0, 1, 0, 1, n11, 0, -1 + n13, 1])/
    (-1 + n13) + (n4*j[p4, 0, 1 + n2, n3, 1 + n4, 0, 0, 0, 1, 0, 1, n11, 0, 
      -1 + n13, 1])/(-1 + n13) + 
   (n4*j[p4, 0, 1 + n2, n3, 1 + n4, 0, 1, -1, 1, 0, 1, n11, 0, -1 + n13, 1])/
    (-1 + n13) - (n4*j[p4, 0, 1 + n2, n3, 1 + n4, 0, 1, 0, 0, 0, 1, n11, 0, 
      -1 + n13, 1])/(-1 + n13) - 
   (n4*j[p4, 0, 1 + n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, n11, 0, -1 + n13, 0])/
    (-1 + n13) - (2*n3*j[p4, 0, 1 + n2, 1 + n3, n4, 0, 1, 0, 0, 0, 1, n11, 0, 
      -1 + n13, 1])/(-1 + n13) + 
   (n3*j[p4, 0, 1 + n2, 1 + n3, n4, 0, 1, 0, 1, 0, 1, n11, -1, -1 + n13, 1])/
    (-1 + n13) - (2*n3*j[p4, 0, 1 + n2, 1 + n3, n4, 0, 1, 0, 1, 0, 1, n11, 0, 
      -2 + n13, 1])/(-1 + n13) + 
   ((n11 + n11*n2)*j[p4, 0, 2 + n2, -2 + n3, n4, 0, 1, 0, 1, 0, 1, 1 + n11, 
      0, -1 + n13, 1])/((-1 + n13)*(-1 + n3)) + 
   ((1 + n2)*j[p4, 0, 2 + n2, -2 + n3, n4, 0, 1, 0, 2, 0, 1, n11, 0, 
      -1 + n13, 1])/((-1 + n13)*(-1 + n3)) + 
   ((-2*n11 - 2*n11*n2)*j[p4, 0, 2 + n2, -1 + n3, n4, 0, 1, -1, 1, 0, 1, 
      1 + n11, 0, -1 + n13, 1])/((-1 + n13)*(-1 + n3)) + 
   ((-2 - 2*n2)*j[p4, 0, 2 + n2, -1 + n3, n4, 0, 1, -1, 2, 0, 1, n11, 0, 
      -1 + n13, 1])/((-1 + n13)*(-1 + n3)) + 
   ((-1 - n2)*j[p4, 0, 2 + n2, -1 + n3, n4, 0, 1, 0, 1, 0, 1, n11, 0, 
      -1 + n13, 1])/(-1 + n13) + 
   ((n11 + n11*n2)*j[p4, 0, 2 + n2, -1 + n3, n4, 0, 1, 0, 1, 0, 1, 1 + n11, 
      -1, -1 + n13, 1])/((-1 + n13)*(-1 + n3)) + 
   ((-2*n11 - 2*n11*n2)*j[p4, 0, 2 + n2, -1 + n3, n4, 0, 1, 0, 1, 0, 1, 
      1 + n11, 0, -2 + n13, 1])/((-1 + n13)*(-1 + n3)) + 
   ((1 + n2)*j[p4, 0, 2 + n2, -1 + n3, n4, 0, 1, 0, 2, 0, 1, n11, -1, 
      -1 + n13, 1])/((-1 + n13)*(-1 + n3)) + 
   ((-2 - 2*n2)*j[p4, 0, 2 + n2, -1 + n3, n4, 0, 1, 0, 2, 0, 1, n11, 0, 
      -2 + n13, 1])/((-1 + n13)*(-1 + n3)) + 
   ((2 + 2*n2)*j[p4, 0, 2 + n2, n3, n4, 0, 1, 0, 0, 0, 1, n11, 0, -1 + n13, 
      1])/(-1 + n13) + ((-1 - n2)*j[p4, 0, 2 + n2, n3, n4, 0, 1, 0, 1, 0, 1, 
      n11, -1, -1 + n13, 1])/(-1 + n13) + 
   ((2 + 2*n2)*j[p4, 0, 2 + n2, n3, n4, 0, 1, 0, 1, 0, 1, n11, 0, -2 + n13, 
      1])/(-1 + n13), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?Positive, (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, 
    (n7_)?NonPositive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n6 == 1 && 
    n7 == 0 && n8 == 1 && n9 == 0 &&  !(n11 == 1 || n5 == 0) -> 
  (n4*j[p4, -1, n2, n3, 1 + n4, n5, 1, 0, 1, 0, 1, n11, 0, 1, 1])/
    (-d + 2*n11) + ((-4 + d - 2*n5)*j[p4, 0, -1 + n2, n3, n4, 1 + n5, 1, 0, 
      2, 0, 1, -1 + n11, 0, 1, 1])/((-1 + n11)*(-d + 2*n11)) + 
   (n3*n4*j[p4, 0, -1 + n2, 1 + n3, 1 + n4, n5, 1, 0, 1, 0, 1, -1 + n11, 0, 
      1, 1])/((-1 + n11)*(-d + 2*n11)) + 
   ((4*n4 - d*n4 + n4*n5)*j[p4, 0, n2, -1 + n3, 1 + n4, 1 + n5, 1, 0, 1, 0, 
      1, -1 + n11, 0, 1, 1])/((-1 + n11)*(-d + 2*n11)) + 
   ((n4 + n4^2)*j[p4, 0, n2, -1 + n3, 2 + n4, n5, 1, 0, 1, 0, 1, -1 + n11, 0, 
      1, 1])/((-1 + n11)*(-d + 2*n11)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, n3, -1 + n4, 1 + n5, 1, 0, 2, 0, 1, 
      -1 + n11, 0, 1, 1])/((-1 + n11)*(-d + 2*n11)) - 
   (2*n2*j[p4, 0, n2, n3, n4, n5, 1, 0, 2, 0, 1, -1 + n11, 0, 1, 1])/
    ((-1 + n11)*(-d + 2*n11)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, n4, 1 + n5, 0, 0, 2, 0, 1, -1 + n11, 0, 
      1, 1])/((-1 + n11)*(-d + 2*n11)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, n4, 1 + n5, 1, -1, 2, 0, 1, -1 + n11, 0, 
      1, 1])/((-1 + n11)*(-d + 2*n11)) + 
   ((4 - d - 4*n2 + d*n2 + 4*n3 - d*n3 - 4*n4 + d*n4 - 2*n5 + d*n5 - 
      2*n2*n5 + n3*n5 - 2*n4*n5 - n5^2)*j[p4, 0, n2, n3, n4, 1 + n5, 1, 0, 1, 
      0, 1, -1 + n11, 0, 1, 1])/((-1 + n11)*(-d + 2*n11)) + 
   ((-4 + d)*j[p4, 0, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, -1 + n11, 0, 2, 0])/
    ((d - 2*n11)*(-1 + n11)) + 
   ((-4 + d - n5)*j[p4, 0, n2, n3, n4, 1 + n5, 1, 0, 2, 0, 1, -1 + n11, -1, 
      1, 1])/((-1 + n11)*(-d + 2*n11)) + 
   ((4 - d + n5)*j[p4, 0, n2, n3, n4, 1 + n5, 1, 0, 2, 0, 1, -1 + n11, 0, 0, 
      1])/((-1 + n11)*(-d + 2*n11)) + 
   ((4 - d + 5*n5 - d*n5 + n5^2)*j[p4, 0, n2, n3, n4, 2 + n5, 1, 0, 1, 0, 1, 
      -1 + n11, 0, 0, 1])/((-1 + n11)*(-d + 2*n11)) + 
   ((-4 + d - 5*n5 + d*n5 - n5^2)*j[p4, 0, n2, n3, n4, 2 + n5, 1, 0, 1, 0, 1, 
      -1 + n11, 0, 1, 0])/((-1 + n11)*(-d + 2*n11)) - 
   (n4*j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, 0, 0, 1, n11, 0, 1, 1])/
    (-d + 2*n11) + ((n4 - n11*n4 + n3*n4 - n4^2)*j[p4, 0, n2, n3, 1 + n4, n5, 
      1, 0, 1, 0, 1, -1 + n11, 0, 1, 1])/((-1 + n11)*(-d + 2*n11)) - 
   (n4*j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, 2, 0, 1, -1 + n11, -1, 1, 1])/
    ((-1 + n11)*(-d + 2*n11)) + 
   (n4*j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, 2, 0, 1, -1 + n11, 0, 0, 1])/
    ((-1 + n11)*(-d + 2*n11)) + 
   (n4*n5*j[p4, 0, n2, n3, 1 + n4, 1 + n5, 1, -1, 1, 0, 1, -1 + n11, 0, 1, 
      1])/((-1 + n11)*(-d + 2*n11)) + 
   (n4*n5*j[p4, 0, n2, n3, 1 + n4, 1 + n5, 1, 0, 1, 0, 1, -1 + n11, 0, 0, 1])/
    ((-1 + n11)*(-d + 2*n11)) + ((-4*n4 + d*n4 - 2*n4*n5)*
     j[p4, 0, n2, n3, 1 + n4, 1 + n5, 1, 0, 1, 0, 1, -1 + n11, 0, 1, 0])/
    ((-1 + n11)*(-d + 2*n11)) + 
   ((n4 + n4^2)*j[p4, 0, n2, n3, 2 + n4, -1 + n5, 1, 0, 1, 0, 1, -1 + n11, 0, 
      1, 1])/((-1 + n11)*(-d + 2*n11)) + 
   ((n4 + n4^2)*j[p4, 0, n2, n3, 2 + n4, n5, 0, 0, 1, 0, 1, -1 + n11, 0, 1, 
      1])/((-1 + n11)*(-d + 2*n11)) + 
   ((-n4 - n4^2)*j[p4, 0, n2, n3, 2 + n4, n5, 1, -1, 1, 0, 1, -1 + n11, 0, 1, 
      1])/((-1 + n11)*(-d + 2*n11)) + 
   ((-n4 - n4^2)*j[p4, 0, n2, n3, 2 + n4, n5, 1, 0, 0, 0, 1, -1 + n11, 0, 1, 
      1])/((-1 + n11)*(-d + 2*n11)) + 
   ((-n4 - n4^2)*j[p4, 0, n2, n3, 2 + n4, n5, 1, 0, 1, 0, 1, -1 + n11, 0, 1, 
      0])/((-1 + n11)*(-d + 2*n11)) + 
   ((-4*n3 + d*n3 - 2*n3*n5)*j[p4, 0, n2, 1 + n3, -1 + n4, 1 + n5, 1, 0, 1, 
      0, 1, -1 + n11, 0, 1, 1])/((-1 + n11)*(-d + 2*n11)) + 
   (2*n2*n3*j[p4, 0, n2, 1 + n3, n4, n5, 1, 0, 1, 0, 1, -1 + n11, 0, 1, 1])/
    ((-1 + n11)*(-d + 2*n11)) + 
   (n3*n5*j[p4, 0, n2, 1 + n3, n4, 1 + n5, 1, -1, 1, 0, 1, -1 + n11, 0, 1, 
      1])/((-1 + n11)*(-d + 2*n11)) - 
   (n3*n5*j[p4, 0, n2, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, -1 + n11, 0, 0, 1])/
    ((-1 + n11)*(-d + 2*n11)) + ((4*n3 - d*n3 + 2*n3*n5)*
     j[p4, 0, n2, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, -1 + n11, 0, 1, 0])/
    ((-1 + n11)*(-d + 2*n11)) - 
   (2*n3*n4*j[p4, 0, n2, 1 + n3, 1 + n4, n5, 1, -1, 1, 0, 1, -1 + n11, 0, 1, 
      1])/((-1 + n11)*(-d + 2*n11)) - 
   (2*n3*n4*j[p4, 0, n2, 1 + n3, 1 + n4, n5, 1, 0, 0, 0, 1, -1 + n11, 0, 1, 
      1])/((-1 + n11)*(-d + 2*n11)) + 
   (n3*n4*j[p4, 0, n2, 1 + n3, 1 + n4, n5, 1, 0, 1, 0, 1, -1 + n11, -1, 1, 
      1])/((-1 + n11)*(-d + 2*n11)) + 
   ((-4*n2 + d*n2 - n2*n5)*j[p4, 0, 1 + n2, -1 + n3, n4, 1 + n5, 1, 0, 1, 0, 
      1, -1 + n11, 0, 1, 1])/((-1 + n11)*(-d + 2*n11)) + 
   (2*n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, -1, 2, 0, 1, -1 + n11, 0, 1, 1])/
    ((-1 + n11)*(-d + 2*n11)) + ((-5*n2 + d*n2 - 2*n2^2 + 3*n2*n3 - n2*n5)*
     j[p4, 0, 1 + n2, n3, n4, n5, 1, 0, 1, 0, 1, -1 + n11, 0, 1, 1])/
    ((-1 + n11)*(-d + 2*n11)) - 
   (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, 0, 2, 0, 1, -1 + n11, -1, 1, 1])/
    ((-1 + n11)*(-d + 2*n11)) + 
   (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, 0, 2, 0, 1, -1 + n11, 0, 0, 1])/
    ((-1 + n11)*(-d + 2*n11)) + ((4*n2 - d*n2 + 2*n2*n5)*
     j[p4, 0, 1 + n2, n3, n4, 1 + n5, 0, 0, 1, 0, 1, -1 + n11, 0, 1, 1])/
    ((-1 + n11)*(-d + 2*n11)) + ((4*n2 - d*n2 + n2*n5)*
     j[p4, 0, 1 + n2, n3, n4, 1 + n5, 1, -1, 1, 0, 1, -1 + n11, 0, 1, 1])/
    ((-1 + n11)*(-d + 2*n11)) + ((4*n2 - d*n2 + n2*n5)*
     j[p4, 0, 1 + n2, n3, n4, 1 + n5, 1, 0, 0, 0, 1, -1 + n11, 0, 1, 1])/
    ((-1 + n11)*(-d + 2*n11)) + ((-4*n2 + d*n2 - n2*n5)*
     j[p4, 0, 1 + n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, -1 + n11, -1, 1, 1])/
    ((-1 + n11)*(-d + 2*n11)) + ((8*n2 - 2*d*n2 + 3*n2*n5)*
     j[p4, 0, 1 + n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, -1 + n11, 0, 0, 1])/
    ((-1 + n11)*(-d + 2*n11)) - 
   (n2*n5*j[p4, 0, 1 + n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, -1 + n11, 0, 1, 0])/
    ((-1 + n11)*(-d + 2*n11)) - 
   (n2*n4*j[p4, 0, 1 + n2, n3, 1 + n4, -1 + n5, 1, 0, 1, 0, 1, -1 + n11, 0, 
      1, 1])/((-1 + n11)*(-d + 2*n11)) + 
   (2*n2*n4*j[p4, 0, 1 + n2, n3, 1 + n4, n5, 0, 0, 1, 0, 1, -1 + n11, 0, 1, 
      1])/((-1 + n11)*(-d + 2*n11)) + 
   (2*n2*n4*j[p4, 0, 1 + n2, n3, 1 + n4, n5, 1, -1, 1, 0, 1, -1 + n11, 0, 1, 
      1])/((-1 + n11)*(-d + 2*n11)) - 
   (n2*n4*j[p4, 0, 1 + n2, n3, 1 + n4, n5, 1, 0, 0, 0, 1, -1 + n11, 0, 1, 1])/
    ((-1 + n11)*(-d + 2*n11)) - 
   (n2*n4*j[p4, 0, 1 + n2, n3, 1 + n4, n5, 1, 0, 1, 0, 1, -1 + n11, -1, 1, 
      1])/((-1 + n11)*(-d + 2*n11)) + 
   (2*n2*n4*j[p4, 0, 1 + n2, n3, 1 + n4, n5, 1, 0, 1, 0, 1, -1 + n11, 0, 0, 
      1])/((-1 + n11)*(-d + 2*n11)) - 
   (n2*n4*j[p4, 0, 1 + n2, n3, 1 + n4, n5, 1, 0, 1, 0, 1, -1 + n11, 0, 1, 0])/
    ((-1 + n11)*(-d + 2*n11)) - 
   (n2*n3*j[p4, 0, 1 + n2, 1 + n3, n4, n5, 1, -1, 1, 0, 1, -1 + n11, 0, 1, 
      1])/((-1 + n11)*(-d + 2*n11)) - 
   (4*n2*n3*j[p4, 0, 1 + n2, 1 + n3, n4, n5, 1, 0, 0, 0, 1, -1 + n11, 0, 1, 
      1])/((-1 + n11)*(-d + 2*n11)) + 
   (2*n2*n3*j[p4, 0, 1 + n2, 1 + n3, n4, n5, 1, 0, 1, 0, 1, -1 + n11, -1, 1, 
      1])/((-1 + n11)*(-d + 2*n11)) - 
   (3*n2*n3*j[p4, 0, 1 + n2, 1 + n3, n4, n5, 1, 0, 1, 0, 1, -1 + n11, 0, 0, 
      1])/((-1 + n11)*(-d + 2*n11)) + 
   ((-n2 - n2^2)*j[p4, 0, 2 + n2, -1 + n3, n4, n5, 1, 0, 1, 0, 1, -1 + n11, 
      0, 1, 1])/((-1 + n11)*(-d + 2*n11)) + 
   ((n2 + n2^2)*j[p4, 0, 2 + n2, n3, n4, n5, 1, -1, 1, 0, 1, -1 + n11, 0, 1, 
      1])/((-1 + n11)*(-d + 2*n11)) + 
   ((n2 + n2^2)*j[p4, 0, 2 + n2, n3, n4, n5, 1, 0, 0, 0, 1, -1 + n11, 0, 1, 
      1])/((-1 + n11)*(-d + 2*n11)) + 
   ((-n2 - n2^2)*j[p4, 0, 2 + n2, n3, n4, n5, 1, 0, 1, 0, 1, -1 + n11, -1, 1, 
      1])/((-1 + n11)*(-d + 2*n11)) + 
   ((2*n2 + 2*n2^2)*j[p4, 0, 2 + n2, n3, n4, n5, 1, 0, 1, 0, 1, -1 + n11, 0, 
      0, 1])/((-1 + n11)*(-d + 2*n11)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n14 == 1 && n5 == 0 && 
    n6 == 1 && n7 == 0 && n8 == 1 &&  !(n13 == 1 || n2 == 0 || n3 == 1) -> 
  j[p4, 0, n2, n3, n4, 0, 1, 0, 1, n9, 1, 2, 0, -1 + n13, 1]/(1 - n13) - 
   (2*j[p4, 0, n2, n3, n4, 0, 1, 0, 2, n9, 1, 1, 0, -1 + n13, 1])/
    (-1 + n13) + (n3*j[p4, 0, n2, 1 + n3, n4, 0, 1, 0, 1, n9, 1, 1, 0, 
      -1 + n13, 1])/(-1 + n13) - 
   (n4*j[p4, 0, 1 + n2, -2 + n3, 1 + n4, 0, 1, 0, 1, n9, 1, 1, 0, n13, 1])/
    (-1 + n3) - (n4*j[p4, 0, 1 + n2, -2 + n3, 1 + n4, 0, 1, 0, 1, n9, 1, 2, 
      0, -1 + n13, 1])/((-1 + n13)*(-1 + n3)) + 
   j[p4, 0, 1 + n2, -1 + n3, n4, 0, 1, 0, 0, n9, 1, 2, 0, n13, 1]/(-1 + n3) + 
   ((2 - d + n3 + n4)*j[p4, 0, 1 + n2, -1 + n3, n4, 0, 1, 0, 1, n9, 1, 1, 0, 
      n13, 1])/(-1 + n3) + ((4 - n13 + n2 - n3 + n4)*
     j[p4, 0, 1 + n2, -1 + n3, n4, 0, 1, 0, 1, n9, 1, 2, 0, -1 + n13, 1])/
    ((-1 + n13)*(-1 + n3)) + j[p4, 0, 1 + n2, -1 + n3, n4, 0, 1, 0, 1, n9, 1, 
     2, 0, n13, 1]/(1 - n3) + ((2 + d - 2*n13 + n2)*
     j[p4, 0, 1 + n2, -1 + n3, n4, 0, 1, 0, 2, n9, 1, 1, 0, -1 + n13, 1])/
    ((-1 + n13)*(-1 + n3)) - j[p4, 0, 1 + n2, -1 + n3, n4, 0, 1, 0, 2, n9, 1, 
     2, 0, -2 + n13, 1]/((-1 + n13)*(-1 + n3)) + 
   j[p4, 0, 1 + n2, -1 + n3, n4, 0, 1, 0, 2, n9, 1, 2, 0, -1 + n13, 1]/
    ((-1 + n13)*(-1 + n3)) - (n4*j[p4, 0, 1 + n2, -1 + n3, 1 + n4, -1, 1, 0, 
      1, n9, 1, 1, 0, n13, 1])/(-1 + n3) - 
   (n4*j[p4, 0, 1 + n2, -1 + n3, 1 + n4, -1, 1, 0, 1, n9, 1, 2, 0, -1 + n13, 
      1])/((-1 + n13)*(-1 + n3)) - 
   (n4*j[p4, 0, 1 + n2, -1 + n3, 1 + n4, 0, 0, 0, 1, n9, 1, 1, 0, n13, 1])/
    (-1 + n3) - (n4*j[p4, 0, 1 + n2, -1 + n3, 1 + n4, 0, 0, 0, 1, n9, 1, 2, 
      0, -1 + n13, 1])/((-1 + n13)*(-1 + n3)) + 
   (n4*j[p4, 0, 1 + n2, -1 + n3, 1 + n4, 0, 1, -1, 1, n9, 1, 1, 0, n13, 1])/
    (-1 + n3) + (n4*j[p4, 0, 1 + n2, -1 + n3, 1 + n4, 0, 1, -1, 1, n9, 1, 2, 
      0, -1 + n13, 1])/((-1 + n13)*(-1 + n3)) + 
   (n4*j[p4, 0, 1 + n2, -1 + n3, 1 + n4, 0, 1, 0, 0, n9, 1, 1, 0, n13, 1])/
    (-1 + n3) + (n4*j[p4, 0, 1 + n2, -1 + n3, 1 + n4, 0, 1, 0, 0, n9, 1, 2, 
      0, -1 + n13, 1])/((-1 + n13)*(-1 + n3)) + 
   (n4*j[p4, 0, 1 + n2, -1 + n3, 1 + n4, 0, 1, 0, 1, n9, 1, 1, 0, -1 + n13, 
      1])/(-1 + n13) + (n4*j[p4, 0, 1 + n2, -1 + n3, 1 + n4, 0, 1, 0, 1, n9, 
      1, 1, 0, n13, 0])/(-1 + n3) + 
   (n4*j[p4, 0, 1 + n2, -1 + n3, 1 + n4, 0, 1, 0, 1, n9, 1, 2, 0, -1 + n13, 
      0])/((-1 + n13)*(-1 + n3)) + 
   (2*j[p4, 0, 1 + n2, n3, n4, 0, 1, -1, 1, n9, 1, 2, 0, -1 + n13, 1])/
    (-1 + n13) + (2*j[p4, 0, 1 + n2, n3, n4, 0, 1, -1, 2, n9, 1, 1, 0, 
      -1 + n13, 1])/(-1 + n13) + j[p4, 0, 1 + n2, n3, n4, 0, 1, 0, 0, n9, 1, 
    1, 0, n13, 1] + (2*j[p4, 0, 1 + n2, n3, n4, 0, 1, 0, 0, n9, 1, 2, 0, 
      -1 + n13, 1])/(-1 + n13) + ((-1 - n13 - 3*n2 + 3*n3 + n4)*
     j[p4, 0, 1 + n2, n3, n4, 0, 1, 0, 1, n9, 1, 1, 0, -1 + n13, 1])/
    (-1 + n13) + j[p4, 0, 1 + n2, n3, n4, 0, 1, 0, 1, n9, 1, 2, -1, -1 + n13, 
     1]/(1 - n13) + j[p4, 0, 1 + n2, n3, n4, 0, 1, 0, 2, n9, 1, 1, -1, 
     -1 + n13, 1]/(1 - n13) + j[p4, 0, 1 + n2, n3, n4, 0, 1, 0, 2, n9, 1, 1, 
     0, -2 + n13, 1]/(-1 + n13) - 
   (n4*j[p4, 0, 1 + n2, n3, 1 + n4, -1, 1, 0, 1, n9, 1, 1, 0, -1 + n13, 1])/
    (-1 + n13) + (n4*j[p4, 0, 1 + n2, n3, 1 + n4, 0, 0, 0, 1, n9, 1, 1, 0, 
      -1 + n13, 1])/(-1 + n13) + 
   (n4*j[p4, 0, 1 + n2, n3, 1 + n4, 0, 1, -1, 1, n9, 1, 1, 0, -1 + n13, 1])/
    (-1 + n13) - (n4*j[p4, 0, 1 + n2, n3, 1 + n4, 0, 1, 0, 0, n9, 1, 1, 0, 
      -1 + n13, 1])/(-1 + n13) - 
   (n4*j[p4, 0, 1 + n2, n3, 1 + n4, 0, 1, 0, 1, n9, 1, 1, 0, -1 + n13, 0])/
    (-1 + n13) - (2*n3*j[p4, 0, 1 + n2, 1 + n3, n4, 0, 1, 0, 0, n9, 1, 1, 0, 
      -1 + n13, 1])/(-1 + n13) + 
   (n3*j[p4, 0, 1 + n2, 1 + n3, n4, 0, 1, 0, 1, n9, 1, 1, -1, -1 + n13, 1])/
    (-1 + n13) - (2*n3*j[p4, 0, 1 + n2, 1 + n3, n4, 0, 1, 0, 1, n9, 1, 1, 0, 
      -2 + n13, 1])/(-1 + n13) + 
   ((1 + n2)*j[p4, 0, 2 + n2, -2 + n3, n4, 0, 1, 0, 1, n9, 1, 2, 0, -1 + n13, 
      1])/((-1 + n13)*(-1 + n3)) + 
   ((1 + n2)*j[p4, 0, 2 + n2, -2 + n3, n4, 0, 1, 0, 2, n9, 1, 1, 0, -1 + n13, 
      1])/((-1 + n13)*(-1 + n3)) + 
   ((-2 - 2*n2)*j[p4, 0, 2 + n2, -1 + n3, n4, 0, 1, -1, 1, n9, 1, 2, 0, 
      -1 + n13, 1])/((-1 + n13)*(-1 + n3)) + 
   ((-2 - 2*n2)*j[p4, 0, 2 + n2, -1 + n3, n4, 0, 1, -1, 2, n9, 1, 1, 0, 
      -1 + n13, 1])/((-1 + n13)*(-1 + n3)) + 
   ((-1 - n2)*j[p4, 0, 2 + n2, -1 + n3, n4, 0, 1, 0, 1, n9, 1, 1, 0, 
      -1 + n13, 1])/(-1 + n13) + 
   ((1 + n2)*j[p4, 0, 2 + n2, -1 + n3, n4, 0, 1, 0, 1, n9, 1, 2, -1, 
      -1 + n13, 1])/((-1 + n13)*(-1 + n3)) + 
   ((-2 - 2*n2)*j[p4, 0, 2 + n2, -1 + n3, n4, 0, 1, 0, 1, n9, 1, 2, 0, 
      -2 + n13, 1])/((-1 + n13)*(-1 + n3)) + 
   ((1 + n2)*j[p4, 0, 2 + n2, -1 + n3, n4, 0, 1, 0, 2, n9, 1, 1, -1, 
      -1 + n13, 1])/((-1 + n13)*(-1 + n3)) + 
   ((-2 - 2*n2)*j[p4, 0, 2 + n2, -1 + n3, n4, 0, 1, 0, 2, n9, 1, 1, 0, 
      -2 + n13, 1])/((-1 + n13)*(-1 + n3)) + 
   ((2 + 2*n2)*j[p4, 0, 2 + n2, n3, n4, 0, 1, 0, 0, n9, 1, 1, 0, -1 + n13, 
      1])/(-1 + n13) + ((-1 - n2)*j[p4, 0, 2 + n2, n3, n4, 0, 1, 0, 1, n9, 1, 
      1, -1, -1 + n13, 1])/(-1 + n13) + 
   ((2 + 2*n2)*j[p4, 0, 2 + n2, n3, n4, 0, 1, 0, 1, n9, 1, 1, 0, -2 + n13, 
      1])/(-1 + n13), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?Positive, (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, 
    (n7_)?NonPositive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n6 == 1 && 
    n7 == 0 && n8 == 1 && n9 == 0 &&  !(n2 == 0 || n5 == 0) -> 
  ((-58 + 43*d - 8*d^2 - 16*n2 + 6*d*n2 - n2^2 - 27*n3 + 10*d*n3 - 4*n2*n3 - 
      3*n3^2 - 29*n4 + 11*d*n4 - 4*n2*n4 - 7*n3*n4 - 4*n4^2 - 24*n5 + 
      9*d*n5 - 3*n2*n5 - 6*n3*n5 - 6*n4*n5 - 2*n5^2)*
     j[p4, -1 + n1, n2, n3, n4, 1 + n5, 1, 0, 0, 0, 1, 1, 0, 2, 1])/
    ((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-122 + 83*d - 14*d^2 - 34*n1 + 12*d*n1 - 44*n2 + 15*d*n2 - 6*n1*n2 - 
      4*n2^2 - 22*n3 + 7*d*n3 - 6*n1*n3 - 4*n2*n3 - 32*n4 + 10*d*n4 - 
      8*n1*n4 - 6*n2*n4 - 56*n5 + 19*d*n5 - 10*n1*n5 - 10*n2*n5 - 4*n3*n5 - 
      6*n4*n5 - 6*n5^2)*j[p4, -1 + n1, n2, n3, n4, 1 + n5, 1, 0, 0, 0, 2, 1, 
      0, 1, 1])/(2*(-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-56 + 37*d - 6*d^2 - 12*n1 + 4*d*n1 - 32*n2 + 11*d*n2 - 2*n1*n2 - 
      4*n2^2 - 10*n3 + 3*d*n3 - 2*n1*n3 - 4*n2*n3 - 14*n4 + 4*d*n4 - 
      2*n1*n4 - 6*n2*n4 - 38*n5 + 13*d*n5 - 4*n1*n5 - 10*n2*n5 - 4*n3*n5 - 
      6*n4*n5 - 6*n5^2)*j[p4, -1 + n1, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 
      0, 1, 1])/(2*(-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-122 + 83*d - 14*d^2 - 34*n1 + 12*d*n1 - 44*n2 + 15*d*n2 - 6*n1*n2 - 
      4*n2^2 - 22*n3 + 7*d*n3 - 6*n1*n3 - 4*n2*n3 - 32*n4 + 10*d*n4 - 
      8*n1*n4 - 6*n2*n4 - 56*n5 + 19*d*n5 - 10*n1*n5 - 10*n2*n5 - 4*n3*n5 - 
      6*n4*n5 - 6*n5^2)*j[p4, -1 + n1, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 2, 1, 
      0, 0, 1])/(2*(-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) - 
   j[p4, -1 + n1, n2, n3, n4, 1 + n5, 1, 0, 2, 0, 1, 1, 0, 0, 1]/
    (2*(-3 + d - n4 - n5)) + ((58 - 43*d + 8*d^2 + 16*n2 - 6*d*n2 + n2^2 + 
      27*n3 - 10*d*n3 + 4*n2*n3 + 3*n3^2 + 29*n4 - 11*d*n4 + 4*n2*n4 + 
      7*n3*n4 + 4*n4^2 + 82*n5 - 52*d*n5 + 8*d^2*n5 + 19*n2*n5 - 6*d*n2*n5 + 
      n2^2*n5 + 33*n3*n5 - 10*d*n3*n5 + 4*n2*n3*n5 + 3*n3^2*n5 + 35*n4*n5 - 
      11*d*n4*n5 + 4*n2*n4*n5 + 7*n3*n4*n5 + 4*n4^2*n5 + 26*n5^2 - 9*d*n5^2 + 
      3*n2*n5^2 + 6*n3*n5^2 + 6*n4*n5^2 + 2*n5^3)*j[p4, -1 + n1, n2, n3, n4, 
      2 + n5, 0, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-1 - n5)*j[p4, -1 + n1, n2, n3, n4, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5)) + ((1 + n5)*j[p4, -1 + n1, n2, n3, n4, 2 + n5, 1, 
      0, 1, 0, 1, 1, 0, 1, 0])/(2*(-3 + d - n4 - n5)) + 
   ((58*n4 - 43*d*n4 + 8*d^2*n4 + 16*n2*n4 - 6*d*n2*n4 + n2^2*n4 + 27*n3*n4 - 
      10*d*n3*n4 + 4*n2*n3*n4 + 3*n3^2*n4 + 29*n4^2 - 11*d*n4^2 + 4*n2*n4^2 + 
      7*n3*n4^2 + 4*n4^3 + 24*n4*n5 - 9*d*n4*n5 + 3*n2*n4*n5 + 6*n3*n4*n5 + 
      6*n4^2*n5 + 2*n4*n5^2)*j[p4, -1 + n1, n2, n3, 1 + n4, 1 + n5, 0, 0, 1, 
      0, 1, 1, 0, 1, 1])/((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-58*n4 + 43*d*n4 - 8*d^2*n4 - 16*n2*n4 + 6*d*n2*n4 - n2^2*n4 - 
      27*n3*n4 + 10*d*n3*n4 - 4*n2*n3*n4 - 3*n3^2*n4 - 29*n4^2 + 11*d*n4^2 - 
      4*n2*n4^2 - 7*n3*n4^2 - 4*n4^3 - 24*n4*n5 + 9*d*n4*n5 - 3*n2*n4*n5 - 
      6*n3*n4*n5 - 6*n4^2*n5 - 2*n4*n5^2)*j[p4, -1 + n1, n2, n3, 1 + n4, 
      1 + n5, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   (n4*j[p4, -1 + n1, n2, n3, 1 + n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 0])/
    (2*(-3 + d - n4 - n5)) + ((-116*n3 + 86*d*n3 - 16*d^2*n3 - 32*n2*n3 + 
      12*d*n2*n3 - 2*n2^2*n3 - 54*n3^2 + 20*d*n3^2 - 8*n2*n3^2 - 6*n3^3 - 
      58*n3*n4 + 22*d*n3*n4 - 8*n2*n3*n4 - 14*n3^2*n4 - 8*n3*n4^2 - 
      48*n3*n5 + 18*d*n3*n5 - 6*n2*n3*n5 - 12*n3^2*n5 - 12*n3*n4*n5 - 
      4*n3*n5^2)*j[p4, -1 + n1, n2, 1 + n3, n4, 1 + n5, 1, 0, 0, 0, 1, 1, 0, 
      1, 1])/((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-186*n3 + 139*d*n3 - 26*d^2*n3 - 10*n1*n3 + 4*d*n1*n3 - 56*n2*n3 + 
      21*d*n2*n3 - 2*n1*n2*n3 - 4*n2^2*n3 - 78*n3^2 + 29*d*n3^2 - 2*n1*n3^2 - 
      12*n2*n3^2 - 8*n3^3 - 96*n3*n4 + 36*d*n3*n4 - 4*n1*n3*n4 - 
      14*n2*n3*n4 - 20*n3^2*n4 - 12*n3*n4^2 - 72*n3*n5 + 27*d*n3*n5 - 
      2*n1*n3*n5 - 10*n2*n3*n5 - 16*n3^2*n5 - 18*n3*n4*n5 - 6*n3*n5^2)*
     j[p4, -1 + n1, n2, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-186*n2 + 139*d*n2 - 26*d^2*n2 - 10*n1*n2 + 4*d*n1*n2 - 56*n2^2 + 
      21*d*n2^2 - 2*n1*n2^2 - 4*n2^3 - 78*n2*n3 + 29*d*n2*n3 - 2*n1*n2*n3 - 
      12*n2^2*n3 - 8*n2*n3^2 - 96*n2*n4 + 36*d*n2*n4 - 4*n1*n2*n4 - 
      14*n2^2*n4 - 20*n2*n3*n4 - 12*n2*n4^2 - 72*n2*n5 + 27*d*n2*n5 - 
      2*n1*n2*n5 - 10*n2^2*n5 - 16*n2*n3*n5 - 18*n2*n4*n5 - 6*n2*n5^2)*
     j[p4, -1 + n1, 1 + n2, n3, n4, 1 + n5, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)*(5 - 2*d + n2 + n3 + 2*n4 + n5)*
     (14 - 5*d + 2*n1 + 2*n2 + 2*n3 + 2*n4 + 2*n5)) - 
   (n2*j[p4, -1 + n1, 1 + n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (-3 + d - n4 - n5) + ((122 - 83*d + 14*d^2 + 34*n1 - 12*d*n1 + 44*n2 - 
      15*d*n2 + 6*n1*n2 + 4*n2^2 + 22*n3 - 7*d*n3 + 6*n1*n3 + 4*n2*n3 + 
      32*n4 - 10*d*n4 + 8*n1*n4 + 6*n2*n4 + 56*n5 - 19*d*n5 + 10*n1*n5 + 
      10*n2*n5 + 4*n3*n5 + 6*n4*n5 + 6*n5^2)*j[p4, n1, -1 + n2, n3, n4, 
      1 + n5, 1, 0, 0, 0, 2, 1, 0, 1, 1])/
    (2*(-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) - 
   j[p4, n1, -1 + n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 2]/
    (-3 + d - n4 - n5) + ((-6 + 2*d - n2 - n3 - n4 - 2*n5)*
     j[p4, n1, -1 + n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (-3 + d - n4 - n5) + ((26 - 15*d + 2*d^2 + 12*n1 - 4*d*n1 + 10*n2 - 
      3*d*n2 + 2*n1*n2 + n2^2 - n3 + d*n3 + 2*n1*n3 - n3^2 - 3*n4 + 2*d*n4 + 
      2*n1*n4 - 3*n3*n4 - 2*n4^2 + 16*n5 - 5*d*n5 + 4*n1*n5 + 3*n2*n5 + 
      2*n5^2)*j[p4, n1, -1 + n2, n3, n4, 1 + n5, 1, 0, 1, 0, 2, 0, 0, 1, 1])/
    ((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((122 - 83*d + 14*d^2 + 34*n1 - 12*d*n1 + 44*n2 - 15*d*n2 + 6*n1*n2 + 
      4*n2^2 + 22*n3 - 7*d*n3 + 6*n1*n3 + 4*n2*n3 + 32*n4 - 10*d*n4 + 
      8*n1*n4 + 6*n2*n4 + 56*n5 - 19*d*n5 + 10*n1*n5 + 10*n2*n5 + 4*n3*n5 + 
      6*n4*n5 + 6*n5^2)*j[p4, n1, -1 + n2, n3, n4, 1 + n5, 1, 0, 1, 0, 2, 1, 
      0, 0, 1])/(2*(-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-18 + 23*d - 6*d^2 + 14*n1 - 4*d*n1 - 4*n2 + 3*d*n2 + 2*n1*n2 - 26*n3 + 
      11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 44*n4 + 18*d*n4 - 6*n2*n4 - 
      12*n3*n4 - 8*n4^2 + 8*n5 - d*n5 + 6*n1*n5 + 2*n2*n5 - 4*n3*n5 - 
      6*n4*n5 + 2*n5^2)*j[p4, n1, -1 + n2, n3, n4, 1 + n5, 2, 0, 0, 0, 1, 1, 
      0, 1, 1])/(2*(-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) - 
   j[p4, n1, -1 + n2, n3, n4, 1 + n5, 2, 0, 1, 0, 1, 1, 0, 0, 1]/
    (2*(-3 + d - n4 - n5)) - j[p4, n1, -1 + n2, n3, n4, 1 + n5, 2, 0, 1, 0, 
     1, 1, 0, 1, 0]/(2*(-3 + d - n4 - n5)) + 
   ((-96 + 68*d - 12*d^2 - 22*n1 + 8*d*n1 - 34*n2 + 12*d*n2 - 4*n1*n2 - 
      3*n2^2 - 23*n3 + 8*d*n3 - 4*n1*n3 - 4*n2*n3 - n3^2 - 35*n4 + 12*d*n4 - 
      6*n1*n4 - 6*n2*n4 - 3*n3*n4 - 2*n4^2 - 136*n5 + 82*d*n5 - 12*d^2*n5 - 
      28*n1*n5 + 8*d*n1*n5 - 41*n2*n5 + 12*d*n2*n5 - 4*n1*n2*n5 - 3*n2^2*n5 - 
      27*n3*n5 + 8*d*n3*n5 - 4*n1*n3*n5 - 4*n2*n3*n5 - n3^2*n5 - 41*n4*n5 + 
      12*d*n4*n5 - 6*n1*n4*n5 - 6*n2*n4*n5 - 3*n3*n4*n5 - 2*n4^2*n5 - 
      44*n5^2 + 14*d*n5^2 - 6*n1*n5^2 - 7*n2*n5^2 - 4*n3*n5^2 - 6*n4*n5^2 - 
      4*n5^3)*j[p4, n1, -1 + n2, n3, n4, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((3 - d + n4 + n5)*(5 - 2*d + n2 + n3 + 2*n4 + n5)*
     (14 - 5*d + 2*n1 + 2*n2 + 2*n3 + 2*n4 + 2*n5)) + 
   ((-96 + 68*d - 12*d^2 - 22*n1 + 8*d*n1 - 34*n2 + 12*d*n2 - 4*n1*n2 - 
      3*n2^2 - 23*n3 + 8*d*n3 - 4*n1*n3 - 4*n2*n3 - n3^2 - 35*n4 + 12*d*n4 - 
      6*n1*n4 - 6*n2*n4 - 3*n3*n4 - 2*n4^2 - 136*n5 + 82*d*n5 - 12*d^2*n5 - 
      28*n1*n5 + 8*d*n1*n5 - 41*n2*n5 + 12*d*n2*n5 - 4*n1*n2*n5 - 3*n2^2*n5 - 
      27*n3*n5 + 8*d*n3*n5 - 4*n1*n3*n5 - 4*n2*n3*n5 - n3^2*n5 - 41*n4*n5 + 
      12*d*n4*n5 - 6*n1*n4*n5 - 6*n2*n4*n5 - 3*n3*n4*n5 - 2*n4^2*n5 - 
      44*n5^2 + 14*d*n5^2 - 6*n1*n5^2 - 7*n2*n5^2 - 4*n3*n5^2 - 6*n4*n5^2 - 
      4*n5^3)*j[p4, n1, -1 + n2, n3, n4, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 0])/
    ((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-58*n4 + 43*d*n4 - 8*d^2*n4 - 16*n2*n4 + 6*d*n2*n4 - n2^2*n4 - 
      27*n3*n4 + 10*d*n3*n4 - 4*n2*n3*n4 - 3*n3^2*n4 - 29*n4^2 + 11*d*n4^2 - 
      4*n2*n4^2 - 7*n3*n4^2 - 4*n4^3 - 24*n4*n5 + 9*d*n4*n5 - 3*n2*n4*n5 - 
      6*n3*n4*n5 - 6*n4^2*n5 - 2*n4*n5^2)*j[p4, n1, -1 + n2, n3, 1 + n4, 
      1 + n5, 0, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((58*n4 - 43*d*n4 + 8*d^2*n4 + 16*n2*n4 - 6*d*n2*n4 + n2^2*n4 + 27*n3*n4 - 
      10*d*n3*n4 + 4*n2*n3*n4 + 3*n3^2*n4 + 29*n4^2 - 11*d*n4^2 + 4*n2*n4^2 + 
      7*n3*n4^2 + 4*n4^3 + 24*n4*n5 - 9*d*n4*n5 + 3*n2*n4*n5 + 6*n3*n4*n5 + 
      6*n4^2*n5 + 2*n4*n5^2)*j[p4, n1, -1 + n2, n3, 1 + n4, 1 + n5, 1, 0, 0, 
      0, 1, 1, 0, 1, 1])/((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) - 
   (n4*j[p4, n1, -1 + n2, n3, 1 + n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 0])/
    (2*(-3 + d - n4 - n5)) + ((58*n3 - 43*d*n3 + 8*d^2*n3 + 16*n2*n3 - 
      6*d*n2*n3 + n2^2*n3 + 27*n3^2 - 10*d*n3^2 + 4*n2*n3^2 + 3*n3^3 + 
      29*n3*n4 - 11*d*n3*n4 + 4*n2*n3*n4 + 7*n3^2*n4 + 4*n3*n4^2 + 24*n3*n5 - 
      9*d*n3*n5 + 3*n2*n3*n5 + 6*n3^2*n5 + 6*n3*n4*n5 + 2*n3*n5^2)*
     j[p4, n1, -1 + n2, 1 + n3, n4, 1 + n5, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-58*n3 + 43*d*n3 - 8*d^2*n3 - 16*n2*n3 + 6*d*n2*n3 - n2^2*n3 - 27*n3^2 + 
      10*d*n3^2 - 4*n2*n3^2 - 3*n3^3 - 29*n3*n4 + 11*d*n3*n4 - 4*n2*n3*n4 - 
      7*n3^2*n4 - 4*n3*n4^2 - 24*n3*n5 + 9*d*n3*n5 - 3*n2*n3*n5 - 6*n3^2*n5 - 
      6*n3*n4*n5 - 2*n3*n5^2)*j[p4, n1, -1 + n2, 1 + n3, n4, 1 + n5, 1, 0, 1, 
      0, 0, 1, 0, 1, 1])/((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((58*n3 - 43*d*n3 + 8*d^2*n3 + 16*n2*n3 - 6*d*n2*n3 + n2^2*n3 + 27*n3^2 - 
      10*d*n3^2 + 4*n2*n3^2 + 3*n3^3 + 29*n3*n4 - 11*d*n3*n4 + 4*n2*n3*n4 + 
      7*n3^2*n4 + 4*n3*n4^2 + 24*n3*n5 - 9*d*n3*n5 + 3*n2*n3*n5 + 6*n3^2*n5 + 
      6*n3*n4*n5 + 2*n3*n5^2)*j[p4, n1, -1 + n2, 1 + n3, n4, 1 + n5, 1, 0, 1, 
      0, 1, 0, 0, 1, 1])/((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((46*n3 - 33*d*n3 + 6*d^2*n3 - 10*n1*n3 + 4*d*n1*n3 + 8*n2*n3 - 
      3*d*n2*n3 - 2*n1*n2*n3 + 30*n3^2 - 11*d*n3^2 - 2*n1*n3^2 + 4*n2*n3^2 + 
      4*n3^3 + 20*n3*n4 - 8*d*n3*n4 - 4*n1*n3*n4 + 2*n2*n3*n4 + 8*n3^2*n4 + 
      4*n3*n4^2 + 24*n3*n5 - 9*d*n3*n5 - 2*n1*n3*n5 + 2*n2*n3*n5 + 
      8*n3^2*n5 + 6*n3*n4*n5 + 2*n3*n5^2)*j[p4, n1, -1 + n2, 1 + n3, n4, 
      1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) - 
   j[p4, n1, n2, -1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 2]/
    (-3 + d - n4 - n5) + ((6 - 2*d + n2 + n3 + n4 + 2*n5)*
     j[p4, n1, n2, -1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (-3 + d - n4 - n5) + ((26 - 15*d + 2*d^2 + 12*n1 - 4*d*n1 + 10*n2 - 
      3*d*n2 + 2*n1*n2 + n2^2 - n3 + d*n3 + 2*n1*n3 - n3^2 - 3*n4 + 2*d*n4 + 
      2*n1*n4 - 3*n3*n4 - 2*n4^2 + 16*n5 - 5*d*n5 + 4*n1*n5 + 3*n2*n5 + 
      2*n5^2)*j[p4, n1, n2, -1 + n3, n4, 1 + n5, 1, 0, 1, 0, 2, 0, 0, 1, 1])/
    ((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((26 - 15*d + 2*d^2 + 12*n1 - 4*d*n1 + 10*n2 - 3*d*n2 + 2*n1*n2 + n2^2 - 
      n3 + d*n3 + 2*n1*n3 - n3^2 - 3*n4 + 2*d*n4 + 2*n1*n4 - 3*n3*n4 - 
      2*n4^2 + 16*n5 - 5*d*n5 + 4*n1*n5 + 3*n2*n5 + 2*n5^2)*
     j[p4, n1, n2, -1 + n3, n4, 1 + n5, 2, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   j[p4, n1, n2, -1 + n3, n4, 1 + n5, 2, 0, 1, 0, 0, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5)) + ((96*n4 - 68*d*n4 + 12*d^2*n4 + 22*n1*n4 - 
      8*d*n1*n4 + 34*n2*n4 - 12*d*n2*n4 + 4*n1*n2*n4 + 3*n2^2*n4 + 23*n3*n4 - 
      8*d*n3*n4 + 4*n1*n3*n4 + 4*n2*n3*n4 + n3^2*n4 + 35*n4^2 - 12*d*n4^2 + 
      6*n1*n4^2 + 6*n2*n4^2 + 3*n3*n4^2 + 2*n4^3 + 40*n4*n5 - 14*d*n4*n5 + 
      6*n1*n4*n5 + 7*n2*n4*n5 + 4*n3*n4*n5 + 6*n4^2*n5 + 4*n4*n5^2)*
     j[p4, n1, n2, -1 + n3, 1 + n4, 1 + n5, 0, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-122*n4 + 83*d*n4 - 14*d^2*n4 - 34*n1*n4 + 12*d*n1*n4 - 44*n2*n4 + 
      15*d*n2*n4 - 6*n1*n2*n4 - 4*n2^2*n4 - 22*n3*n4 + 7*d*n3*n4 - 
      6*n1*n3*n4 - 4*n2*n3*n4 - 32*n4^2 + 10*d*n4^2 - 8*n1*n4^2 - 6*n2*n4^2 - 
      56*n4*n5 + 19*d*n4*n5 - 10*n1*n4*n5 - 10*n2*n4*n5 - 4*n3*n4*n5 - 
      6*n4^2*n5 - 6*n4*n5^2)*j[p4, n1, n2, -1 + n3, 1 + n4, 1 + n5, 1, 0, 0, 
      0, 1, 1, 0, 1, 1])/(2*(-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   (n4*j[p4, n1, n2, -1 + n3, 1 + n4, 1 + n5, 1, 0, 1, 0, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)) - (n4*j[p4, n1, n2, -1 + n3, 1 + n4, 1 + n5, 1, 0, 
      1, 0, 1, 0, 0, 1, 1])/(2*(-3 + d - n4 - n5)) + 
   ((-6 + 2*d - n2 - n3 - n4 - 2*n5)*j[p4, n1, n2, n3, -1 + n4, 1 + n5, 1, 0, 
      1, 0, 1, 1, 0, 1, 1])/(-5 + 2*d - n2 - n3 - 2*n4 - n5) + 
   ((-26 + 15*d - 2*d^2 - 12*n1 + 4*d*n1 - 10*n2 + 3*d*n2 - 2*n1*n2 - n2^2 + 
      n3 - d*n3 - 2*n1*n3 + n3^2 + 3*n4 - 2*d*n4 - 2*n1*n4 + 3*n3*n4 + 
      2*n4^2 - 16*n5 + 5*d*n5 - 4*n1*n5 - 3*n2*n5 - 2*n5^2)*
     j[p4, n1, n2, n3, -1 + n4, 1 + n5, 2, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((58 - 43*d + 8*d^2 + 16*n2 - 6*d*n2 + n2^2 + 27*n3 - 10*d*n3 + 4*n2*n3 + 
      3*n3^2 + 29*n4 - 11*d*n4 + 4*n2*n4 + 7*n3*n4 + 4*n4^2 + 24*n5 - 
      9*d*n5 + 3*n2*n5 + 6*n3*n5 + 6*n4*n5 + 2*n5^2)*
     j[p4, n1, n2, n3, -1 + n4, 1 + n5, 2, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-26 + 15*d - 2*d^2 - 12*n1 + 4*d*n1 - 10*n2 + 3*d*n2 - 2*n1*n2 - n2^2 + 
      n3 - d*n3 - 2*n1*n3 + n3^2 + 3*n4 - 2*d*n4 - 2*n1*n4 + 3*n3*n4 + 
      2*n4^2 - 16*n5 + 5*d*n5 - 4*n1*n5 - 3*n2*n5 - 2*n5^2)*
     j[p4, n1, n2, n3, -1 + n4, 1 + n5, 2, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-26 + 15*d - 2*d^2 - 12*n1 + 4*d*n1 - 10*n2 + 3*d*n2 - 2*n1*n2 - n2^2 + 
      n3 - d*n3 - 2*n1*n3 + n3^2 + 3*n4 - 2*d*n4 - 2*n1*n4 + 3*n3*n4 + 
      2*n4^2 - 16*n5 + 5*d*n5 - 4*n1*n5 - 3*n2*n5 - 2*n5^2)*
     j[p4, n1, n2, n3, -1 + n4, 1 + n5, 2, 0, 1, 0, 1, 1, 0, 1, 0])/
    ((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-26 + 15*d - 2*d^2 - 12*n1 + 4*d*n1 - 10*n2 + 3*d*n2 - 2*n1*n2 - n2^2 + 
      n3 - d*n3 - 2*n1*n3 + n3^2 + 3*n4 - 2*d*n4 - 2*n1*n4 + 3*n3*n4 + 
      2*n4^2 - 42*n5 + 20*d*n5 - 2*d^2*n5 - 16*n1*n5 + 4*d*n1*n5 - 13*n2*n5 + 
      3*d*n2*n5 - 2*n1*n2*n5 - n2^2*n5 + n3*n5 - d*n3*n5 - 2*n1*n3*n5 + 
      n3^2*n5 + 3*n4*n5 - 2*d*n4*n5 - 2*n1*n4*n5 + 3*n3*n4*n5 + 2*n4^2*n5 - 
      18*n5^2 + 5*d*n5^2 - 4*n1*n5^2 - 3*n2*n5^2 - 2*n5^3)*
     j[p4, n1, n2, n3, -1 + n4, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((3 - d + n4 + n5)*(5 - 2*d + n2 + n3 + 2*n4 + n5)*
     (14 - 5*d + 2*n1 + 2*n2 + 2*n3 + 2*n4 + 2*n5)) + 
   ((26 - 15*d + 2*d^2 + 12*n1 - 4*d*n1 + 10*n2 - 3*d*n2 + 2*n1*n2 + n2^2 - 
      n3 + d*n3 + 2*n1*n3 - n3^2 - 3*n4 + 2*d*n4 + 2*n1*n4 - 3*n3*n4 - 
      2*n4^2 + 42*n5 - 20*d*n5 + 2*d^2*n5 + 16*n1*n5 - 4*d*n1*n5 + 13*n2*n5 - 
      3*d*n2*n5 + 2*n1*n2*n5 + n2^2*n5 - n3*n5 + d*n3*n5 + 2*n1*n3*n5 - 
      n3^2*n5 - 3*n4*n5 + 2*d*n4*n5 + 2*n1*n4*n5 - 3*n3*n4*n5 - 2*n4^2*n5 + 
      18*n5^2 - 5*d*n5^2 + 4*n1*n5^2 + 3*n2*n5^2 + 2*n5^3)*
     j[p4, n1, n2, n3, -1 + n4, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 0])/
    ((3 - d + n4 + n5)*(5 - 2*d + n2 + n3 + 2*n4 + n5)*
     (14 - 5*d + 2*n1 + 2*n2 + 2*n3 + 2*n4 + 2*n5)) + 
   j[p4, n1, n2, n3, n4, n5, 0, 0, 1, 0, 1, 1, 0, 1, 2]/(-3 + d - n4 - n5) + 
   j[p4, n1, n2, n3, n4, n5, 1, 0, 0, 0, 1, 1, 0, 1, 2]/(-3 + d - n4 - n5) + 
   j[p4, n1, n2, n3, n4, n5, 1, 0, 1, 0, 1, 1, 0, 0, 2]/(-3 + d - n4 - n5) + 
   j[p4, n1, n2, n3, n4, n5, 2, 0, 0, 0, 1, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5)) + j[p4, n1, n2, n3, n4, n5, 2, 0, 1, 0, 0, 1, 0, 
     1, 1]/(2*(-3 + d - n4 - n5)) + j[p4, n1, n2, n3, n4, n5, 2, 0, 1, 0, 1, 
     1, 0, 0, 1]/(2*(-3 + d - n4 - n5)) + 
   j[p4, n1, n2, n3, n4, n5, 2, 0, 1, 0, 1, 1, 0, 1, 0]/
    (2*(-3 + d - n4 - n5)) + ((-58 + 43*d - 8*d^2 - 16*n2 + 6*d*n2 - n2^2 - 
      27*n3 + 10*d*n3 - 4*n2*n3 - 3*n3^2 - 29*n4 + 11*d*n4 - 4*n2*n4 - 
      7*n3*n4 - 4*n4^2 - 24*n5 + 9*d*n5 - 3*n2*n5 - 6*n3*n5 - 6*n4*n5 - 
      2*n5^2)*j[p4, n1, n2, n3, n4, 1 + n5, 0, 0, 1, -1, 1, 1, 0, 1, 2])/
    ((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((58 - 43*d + 8*d^2 + 16*n2 - 6*d*n2 + n2^2 + 27*n3 - 10*d*n3 + 4*n2*n3 + 
      3*n3^2 + 29*n4 - 11*d*n4 + 4*n2*n4 + 7*n3*n4 + 4*n4^2 + 94*n5 - 
      62*d*n5 + 10*d^2*n5 + 10*n1*n5 - 4*d*n1*n5 + 27*n2*n5 - 9*d*n2*n5 + 
      2*n1*n2*n5 + 2*n2^2*n5 + 30*n3*n5 - 9*d*n3*n5 + 2*n1*n3*n5 + 
      4*n2*n3*n5 + 2*n3^2*n5 + 44*n4*n5 - 14*d*n4*n5 + 4*n1*n4*n5 + 
      6*n2*n4*n5 + 6*n3*n4*n5 + 4*n4^2*n5 + 26*n5^2 - 9*d*n5^2 + 2*n1*n5^2 + 
      4*n2*n5^2 + 4*n3*n5^2 + 6*n4*n5^2 + 2*n5^3)*j[p4, n1, n2, n3, n4, 
      1 + n5, 0, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((58 - 43*d + 8*d^2 + 16*n2 - 6*d*n2 + n2^2 + 27*n3 - 10*d*n3 + 4*n2*n3 + 
      3*n3^2 + 29*n4 - 11*d*n4 + 4*n2*n4 + 7*n3*n4 + 4*n4^2 + 24*n5 - 
      9*d*n5 + 3*n2*n5 + 6*n3*n5 + 6*n4*n5 + 2*n5^2)*
     j[p4, n1, n2, n3, n4, 1 + n5, 0, 0, 1, 0, 1, 1, 0, 1, 2])/
    ((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-26 + 15*d - 2*d^2 - 12*n1 + 4*d*n1 - 10*n2 + 3*d*n2 - 2*n1*n2 - n2^2 + 
      n3 - d*n3 - 2*n1*n3 + n3^2 + 3*n4 - 2*d*n4 - 2*n1*n4 + 3*n3*n4 + 
      2*n4^2 - 16*n5 + 5*d*n5 - 4*n1*n5 - 3*n2*n5 - 2*n5^2)*
     j[p4, n1, n2, n3, n4, 1 + n5, 1, -1, 0, 0, 2, 1, 0, 1, 1])/
    ((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   j[p4, n1, n2, n3, n4, 1 + n5, 1, -1, 1, 0, 1, 1, 0, 0, 2]/
    (-3 + d - n4 - n5) + ((-26 + 15*d - 2*d^2 - 12*n1 + 4*d*n1 - 10*n2 + 
      3*d*n2 - 2*n1*n2 - n2^2 + n3 - d*n3 - 2*n1*n3 + n3^2 + 3*n4 - 2*d*n4 - 
      2*n1*n4 + 3*n3*n4 + 2*n4^2 - 16*n5 + 5*d*n5 - 4*n1*n5 - 3*n2*n5 - 
      2*n5^2)*j[p4, n1, n2, n3, n4, 1 + n5, 1, -1, 1, 0, 2, 0, 0, 1, 1])/
    ((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-26 + 15*d - 2*d^2 - 12*n1 + 4*d*n1 - 10*n2 + 3*d*n2 - 2*n1*n2 - n2^2 + 
      n3 - d*n3 - 2*n1*n3 + n3^2 + 3*n4 - 2*d*n4 - 2*n1*n4 + 3*n3*n4 + 
      2*n4^2 - 16*n5 + 5*d*n5 - 4*n1*n5 - 3*n2*n5 - 2*n5^2)*
     j[p4, n1, n2, n3, n4, 1 + n5, 1, -1, 1, 0, 2, 1, 0, 0, 1])/
    ((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-58 + 43*d - 8*d^2 - 16*n2 + 6*d*n2 - n2^2 - 27*n3 + 10*d*n3 - 4*n2*n3 - 
      3*n3^2 - 29*n4 + 11*d*n4 - 4*n2*n4 - 7*n3*n4 - 4*n4^2 - 24*n5 + 
      9*d*n5 - 3*n2*n5 - 6*n3*n5 - 6*n4*n5 - 2*n5^2)*
     j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 0, -1, 1, 1, 0, 1, 2])/
    ((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((64 - 56*d + 12*d^2 - 140*n1 + 94*d*n1 - 16*d^2*n1 + 186*n2 - 119*d*n2 + 
      18*d^2*n2 + 22*n1*n2 - 8*d*n1*n2 + 64*n2^2 - 21*d*n2^2 + 8*n1*n2^2 + 
      6*n2^3 - 258*n3 + 197*d*n3 - 38*d^2*n3 - 136*n1*n3 + 48*d*n1*n3 - 
      84*n2*n3 + 34*d*n2*n3 - 12*n1*n2*n3 - 6*n2^2*n3 - 60*n3^2 + 23*d*n3^2 - 
      20*n1*n3^2 - 14*n2*n3^2 - 2*n3^3 + 180*n4 - 112*d*n4 + 16*d^2*n4 - 
      62*n1*n4 + 22*d*n1*n4 + 66*n2*n4 - 18*d*n2*n4 + 4*n1*n2*n4 + 
      8*n2^2*n4 - 28*n3*n4 + 14*d*n3*n4 - 34*n1*n3*n4 - 16*n2*n3*n4 + 
      70*n4^2 - 22*d*n4^2 - 8*n1*n4^2 + 4*n2*n4^2 + 10*n3*n4^2 + 8*n4^3 + 
      16*n5 - 8*d*n5 - 56*n1*n5 + 18*d*n1*n5 + 88*n2*n5 - 29*d*n2*n5 + 
      12*n1*n2*n5 + 16*n2^2*n5 - 124*n3*n5 + 47*d*n3*n5 - 34*n1*n3*n5 - 
      20*n2*n3*n5 - 12*n3^2*n5 + 60*n4*n5 - 18*d*n4*n5 - 12*n1*n4*n5 + 
      12*n2*n4*n5 - 6*n3*n4*n5 + 12*n4^2*n5 - 4*n1*n5^2 + 10*n2*n5^2 - 
      14*n3*n5^2 + 4*n4*n5^2)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 0, 0, 1, 1, 
      0, 1, 1])/(2*(-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((58 - 43*d + 8*d^2 + 16*n2 - 6*d*n2 + n2^2 + 27*n3 - 10*d*n3 + 4*n2*n3 + 
      3*n3^2 + 29*n4 - 11*d*n4 + 4*n2*n4 + 7*n3*n4 + 4*n4^2 + 24*n5 - 
      9*d*n5 + 3*n2*n5 + 6*n3*n5 + 6*n4*n5 + 2*n5^2)*
     j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 0, 0, 1, 1, 0, 1, 2])/
    ((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((58 - 43*d + 8*d^2 + 16*n2 - 6*d*n2 + n2^2 + 27*n3 - 10*d*n3 + 4*n2*n3 + 
      3*n3^2 + 29*n4 - 11*d*n4 + 4*n2*n4 + 7*n3*n4 + 4*n4^2 + 24*n5 - 
      9*d*n5 + 3*n2*n5 + 6*n3*n5 + 6*n4*n5 + 2*n5^2)*
     j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 0, 0, 1, 1, 0, 2, 1])/
    ((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((122 - 83*d + 14*d^2 + 34*n1 - 12*d*n1 + 44*n2 - 15*d*n2 + 6*n1*n2 + 
      4*n2^2 + 22*n3 - 7*d*n3 + 6*n1*n3 + 4*n2*n3 + 32*n4 - 10*d*n4 + 
      8*n1*n4 + 6*n2*n4 + 56*n5 - 19*d*n5 + 10*n1*n5 + 10*n2*n5 + 4*n3*n5 + 
      6*n4*n5 + 6*n5^2)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 0, 0, 1, 2, -1, 
      1, 1])/(2*(-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-122 + 83*d - 14*d^2 - 34*n1 + 12*d*n1 - 44*n2 + 15*d*n2 - 6*n1*n2 - 
      4*n2^2 - 22*n3 + 7*d*n3 - 6*n1*n3 - 4*n2*n3 - 32*n4 + 10*d*n4 - 
      8*n1*n4 - 6*n2*n4 - 56*n5 + 19*d*n5 - 10*n1*n5 - 10*n2*n5 - 4*n3*n5 - 
      6*n4*n5 - 6*n5^2)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 0, 0, 1, 2, 0, 1, 
      1])/(2*(-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-186 + 139*d - 26*d^2 - 10*n1 + 4*d*n1 - 56*n2 + 21*d*n2 - 2*n1*n2 - 
      4*n2^2 - 78*n3 + 29*d*n3 - 2*n1*n3 - 12*n2*n3 - 8*n3^2 - 96*n4 + 
      36*d*n4 - 4*n1*n4 - 14*n2*n4 - 20*n3*n4 - 12*n4^2 - 72*n5 + 27*d*n5 - 
      2*n1*n5 - 10*n2*n5 - 16*n3*n5 - 18*n4*n5 - 6*n5^2)*
     j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 1, -1, 1, 1, 0, 0, 2])/
    (2*(-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-116 + 86*d - 16*d^2 - 148*n2 + 98*d*n2 - 16*d^2*n2 - 34*n2^2 + 
      12*d*n2^2 - 2*n2^3 + 16*n3 - 33*d*n3 + 10*d^2*n3 + 10*n1*n3 - 
      4*d*n1*n3 - 38*n2*n3 + 11*d*n2*n3 + 2*n1*n2*n3 - 6*n2^2*n3 + 18*n3^2 - 
      9*d*n3^2 + 2*n1*n3^2 - 2*n2*n3^2 + 2*n3^3 + 58*n4 - 64*d*n4 + 
      16*d^2*n4 - 34*n2*n4 + 10*d*n2*n4 - 6*n2^2*n4 + 78*n3*n4 - 34*d*n3*n4 + 
      4*n1*n3*n4 + 12*n3^2*n4 + 50*n4^2 - 22*d*n4^2 + 18*n3*n4^2 + 8*n4^3 - 
      48*n5 + 18*d*n5 - 54*n2*n5 + 18*d*n2*n5 - 6*n2^2*n5 + 12*n3*n5 - 
      9*d*n3*n5 + 2*n1*n3*n5 - 8*n2*n3*n5 + 4*n3^2*n5 + 36*n4*n5 - 
      18*d*n4*n5 - 6*n2*n4*n5 + 18*n3*n4*n5 + 12*n4^2*n5 - 4*n5^2 - 
      4*n2*n5^2 + 2*n3*n5^2 + 4*n4*n5^2)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 
      1, 0, 0, 1, 0, 1, 1])/(2*(-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((46 - 33*d + 6*d^2 + 106*n1 - 82*d*n1 + 16*d^2*n1 + 8*n2 - 3*d*n2 + 
      30*n1*n2 - 12*d*n1*n2 + 2*n1*n2^2 - 40*n3 + 42*d*n3 - 10*d^2*n3 + 
      42*n1*n3 - 16*d*n1*n3 - 20*n2*n3 + 9*d*n2*n3 + 6*n1*n2*n3 - 2*n2^2*n3 - 
      20*n3^2 + 9*d*n3^2 + 4*n1*n3^2 - 4*n2*n3^2 - 2*n3^3 - 96*n4 + 78*d*n4 - 
      16*d^2*n4 + 54*n1*n4 - 22*d*n1*n4 - 30*n2*n4 + 12*d*n2*n4 + 
      8*n1*n2*n4 - 2*n2^2*n4 - 84*n3*n4 + 34*d*n3*n4 + 10*n1*n3*n4 - 
      14*n2*n3*n4 - 12*n3^2*n4 - 54*n4^2 + 22*d*n4^2 + 8*n1*n4^2 - 
      8*n2*n4^2 - 18*n3*n4^2 - 8*n4^3 + 24*n5 - 9*d*n5 + 46*n1*n5 - 
      18*d*n1*n5 + 2*n2*n5 + 6*n1*n2*n5 - 16*n3*n5 + 9*d*n3*n5 + 
      10*n1*n3*n5 - 4*n2*n3*n5 - 4*n3^2*n5 - 42*n4*n5 + 18*d*n4*n5 + 
      12*n1*n4*n5 - 6*n2*n4*n5 - 18*n3*n4*n5 - 12*n4^2*n5 + 2*n5^2 + 
      4*n1*n5^2 - 2*n3*n5^2 - 4*n4*n5^2)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 
      1, 0, 1, 0, 0, 1, 1])/(2*(-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) - 
   j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, -1, 0, 2]/
    (-3 + d - n4 - n5) + ((140 - 106*d + 20*d^2 + 72*n1 - 38*d*n1 + 
      4*d^2*n1 + 24*n1^2 - 8*d*n1^2 + 292*n2 - 184*d*n2 + 28*d^2*n2 + 
      92*n1*n2 - 30*d*n1*n2 + 4*n1^2*n2 + 92*n2^2 - 30*d*n2^2 + 14*n1*n2^2 + 
      8*n2^3 - 214*n3 + 171*d*n3 - 34*d^2*n3 - 52*n1*n3 + 22*d*n1*n3 + 
      4*n1^2*n3 - 40*n2*n3 + 19*d*n2*n3 + 2*n1*n2*n3 - 66*n3^2 + 25*d*n3^2 - 
      12*n1*n3^2 - 12*n2*n3^2 - 4*n3^3 + 76*n4 - 28*d*n4 + 2*n1*n4 + 
      4*d*n1*n4 + 4*n1^2*n4 + 76*n2*n4 - 20*d*n2*n4 + 16*n1*n2*n4 + 
      12*n2^2*n4 - 96*n3*n4 + 38*d*n3*n4 - 22*n1*n3*n4 - 18*n2*n3*n4 - 
      12*n3^2*n4 + 8*n4^2 - 4*n1*n4^2 - 8*n3*n4^2 - 22*n5 + 35*d*n5 - 
      10*d^2*n5 + 26*n1*n5 - 6*d*n1*n5 + 8*n1^2*n5 + 96*n2*n5 - 29*d*n2*n5 + 
      24*n1*n2*n5 + 18*n2^2*n5 - 120*n3*n5 + 46*d*n3*n5 - 16*n1*n3*n5 - 
      14*n2*n3*n5 - 14*n3^2*n5 - 26*n4*n5 + 14*d*n4*n5 - 4*n1*n4*n5 + 
      6*n2*n4*n5 - 24*n3*n4*n5 - 4*n4^2*n5 - 20*n5^2 + 9*d*n5^2 + 2*n1*n5^2 + 
      8*n2*n5^2 - 14*n3*n5^2 - 6*n4*n5^2 - 2*n5^3)*j[p4, n1, n2, n3, n4, 
      1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((186 - 139*d + 26*d^2 + 10*n1 - 4*d*n1 + 56*n2 - 21*d*n2 + 2*n1*n2 + 
      4*n2^2 + 78*n3 - 29*d*n3 + 2*n1*n3 + 12*n2*n3 + 8*n3^2 + 96*n4 - 
      36*d*n4 + 4*n1*n4 + 14*n2*n4 + 20*n3*n4 + 12*n4^2 + 72*n5 - 27*d*n5 + 
      2*n1*n5 + 10*n2*n5 + 16*n3*n5 + 18*n4*n5 + 6*n5^2)*
     j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    (2*(-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((122 - 83*d + 14*d^2 + 34*n1 - 12*d*n1 + 44*n2 - 15*d*n2 + 6*n1*n2 + 
      4*n2^2 + 22*n3 - 7*d*n3 + 6*n1*n3 + 4*n2*n3 - 20*n4 + 20*d*n4 - 
      4*d^2*n4 - 16*n1*n4 + 8*d*n1*n4 - 14*n2*n4 + 6*d*n2*n4 - 4*n1*n2*n4 - 
      2*n2^2*n4 + 2*n3*n4 - 2*d*n3*n4 - 4*n1*n3*n4 + 2*n3^2*n4 + 6*n4^2 - 
      4*d*n4^2 - 4*n1*n4^2 + 6*n3*n4^2 + 4*n4^3 + 126*n5 - 72*d*n5 + 
      10*d^2*n5 + 20*n1*n5 - 4*d*n1*n5 + 34*n2*n5 - 9*d*n2*n5 + 2*n1*n2*n5 + 
      2*n2^2*n5 + 28*n3*n5 - 9*d*n3*n5 + 2*n1*n3*n5 + 4*n2*n3*n5 + 
      2*n3^2*n5 + 12*n4*n5 - 4*d*n4*n5 - 4*n1*n4*n5 + 6*n3*n4*n5 + 
      4*n4^2*n5 + 30*n5^2 - 9*d*n5^2 + 2*n1*n5^2 + 4*n2*n5^2 + 4*n3*n5^2 + 
      2*n4*n5^2 + 2*n5^3)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 
      1, 0])/(2*(-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-368 + 402*d - 147*d^2 + 18*d^3 - 88*n1 + 54*d*n1 - 8*d^2*n1 - 24*n1^2 + 
      8*d*n1^2 - 232*n2 + 164*d*n2 - 29*d^2*n2 - 60*n1*n2 + 20*d*n1*n2 - 
      4*n1^2*n2 - 52*n2^2 + 18*d*n2^2 - 8*n1*n2^2 - 4*n2^3 - 164*n3 + 
      128*d*n3 - 25*d^2*n3 + 8*n1*n3 - 4*d*n1*n3 - 4*n1^2*n3 - 48*n2*n3 + 
      18*d*n2*n3 - 4*n1*n2*n3 - 4*n2^2*n3 - 40*n3^2 + 16*d*n3^2 + 4*n1*n3^2 - 
      4*n2*n3^2 - 4*n3^3 - 252*n4 + 190*d*n4 - 36*d^2*n4 - 2*d*n1*n4 - 
      4*n1^2*n4 - 84*n2*n4 + 30*d*n2*n4 - 8*n1*n2*n4 - 8*n2^2*n4 - 
      112*n3*n4 + 44*d*n3*n4 + 8*n1*n3*n4 - 12*n2*n3*n4 - 16*n3^2*n4 - 
      72*n4^2 + 28*d*n4^2 + 4*n1*n4^2 - 8*n2*n4^2 - 20*n3*n4^2 - 8*n4^3 - 
      284*n5 + 210*d*n5 - 39*d^2*n5 - 44*n1*n5 + 14*d*n1*n5 - 8*n1^2*n5 - 
      112*n2*n5 + 40*d*n2*n5 - 16*n1*n2*n5 - 12*n2^2*n5 - 92*n3*n5 + 
      36*d*n3*n5 + 4*n1*n3*n5 - 12*n2*n3*n5 - 12*n3^2*n5 - 136*n4*n5 + 
      52*d*n4*n5 - 20*n2*n4*n5 - 32*n3*n4*n5 - 20*n4^2*n5 - 64*n5^2 + 
      24*d*n5^2 - 4*n1*n5^2 - 12*n2*n5^2 - 12*n3*n5^2 - 16*n4*n5^2 - 4*n5^3)*
     j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((26 - 15*d + 2*d^2 + 12*n1 - 4*d*n1 + 10*n2 - 3*d*n2 + 2*n1*n2 + n2^2 - 
      n3 + d*n3 + 2*n1*n3 - n3^2 - 3*n4 + 2*d*n4 + 2*n1*n4 - 3*n3*n4 - 
      2*n4^2 + 16*n5 - 5*d*n5 + 4*n1*n5 + 3*n2*n5 + 2*n5^2)*
     j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 2, 0, -1, 1, 1])/
    ((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-26 + 15*d - 2*d^2 - 12*n1 + 4*d*n1 - 10*n2 + 3*d*n2 - 2*n1*n2 - n2^2 + 
      n3 - d*n3 - 2*n1*n3 + n3^2 + 3*n4 - 2*d*n4 - 2*n1*n4 + 3*n3*n4 + 
      2*n4^2 - 16*n5 + 5*d*n5 - 4*n1*n5 - 3*n2*n5 - 2*n5^2)*
     j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 2, 0, 0, 1, 1])/
    ((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 2, 0, 1, 0, -1, 1, 1]/
    (2*(-3 + d - n4 - n5)) + ((-26 + 15*d - 2*d^2 - 12*n1 + 4*d*n1 - 10*n2 + 
      3*d*n2 - 2*n1*n2 - n2^2 + n3 - d*n3 - 2*n1*n3 + n3^2 + 3*n4 - 2*d*n4 - 
      2*n1*n4 + 3*n3*n4 + 2*n4^2 - 16*n5 + 5*d*n5 - 4*n1*n5 - 3*n2*n5 - 
      2*n5^2)*j[p4, n1, n2, n3, n4, 1 + n5, 2, -1, 0, 0, 1, 1, 0, 1, 1])/
    ((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) - 
   j[p4, n1, n2, n3, n4, 1 + n5, 2, -1, 1, 0, 0, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5)) + ((-186 + 139*d - 26*d^2 - 10*n1 + 4*d*n1 - 
      56*n2 + 21*d*n2 - 2*n1*n2 - 4*n2^2 - 78*n3 + 29*d*n3 - 2*n1*n3 - 
      12*n2*n3 - 8*n3^2 - 96*n4 + 36*d*n4 - 4*n1*n4 - 14*n2*n4 - 20*n3*n4 - 
      12*n4^2 - 72*n5 + 27*d*n5 - 2*n1*n5 - 10*n2*n5 - 16*n3*n5 - 18*n4*n5 - 
      6*n5^2)*j[p4, n1, n2, n3, n4, 1 + n5, 2, 0, 0, -1, 1, 1, 0, 1, 1])/
    (2*(-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((26 - 15*d + 2*d^2 + 12*n1 - 4*d*n1 + 10*n2 - 3*d*n2 + 2*n1*n2 + n2^2 - 
      n3 + d*n3 + 2*n1*n3 - n3^2 - 3*n4 + 2*d*n4 + 2*n1*n4 - 3*n3*n4 - 
      2*n4^2 + 16*n5 - 5*d*n5 + 4*n1*n5 + 3*n2*n5 + 2*n5^2)*
     j[p4, n1, n2, n3, n4, 1 + n5, 2, 0, 0, 0, 1, 1, -1, 1, 1])/
    ((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((32 - 28*d + 6*d^2 - 12*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
      11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 32*n4 - 13*d*n4 - 2*n1*n4 + 
      4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
      6*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 2, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) - 
   j[p4, n1, n2, n3, n4, 1 + n5, 2, 0, 1, -1, 1, 1, 0, 0, 1]/
    (2*(-3 + d - n4 - n5)) - j[p4, n1, n2, n3, n4, 1 + n5, 2, 0, 1, -1, 1, 1, 
     0, 1, 0]/(2*(-3 + d - n4 - n5)) + 
   j[p4, n1, n2, n3, n4, 1 + n5, 2, 0, 1, 0, 0, 1, -1, 1, 1]/
    (2*(-3 + d - n4 - n5)) + ((-58 + 43*d - 8*d^2 - 16*n2 + 6*d*n2 - n2^2 - 
      27*n3 + 10*d*n3 - 4*n2*n3 - 3*n3^2 - 29*n4 + 11*d*n4 - 4*n2*n4 - 
      7*n3*n4 - 4*n4^2 - 82*n5 + 52*d*n5 - 8*d^2*n5 - 19*n2*n5 + 6*d*n2*n5 - 
      n2^2*n5 - 33*n3*n5 + 10*d*n3*n5 - 4*n2*n3*n5 - 3*n3^2*n5 - 35*n4*n5 + 
      11*d*n4*n5 - 4*n2*n4*n5 - 7*n3*n4*n5 - 4*n4^2*n5 - 26*n5^2 + 9*d*n5^2 - 
      3*n2*n5^2 - 6*n3*n5^2 - 6*n4*n5^2 - 2*n5^3)*j[p4, n1, n2, n3, n4, 
      2 + n5, 0, 0, 1, -1, 1, 1, 0, 1, 1])/
    ((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((26 - 15*d + 2*d^2 + 12*n1 - 4*d*n1 + 10*n2 - 3*d*n2 + 2*n1*n2 + n2^2 - 
      n3 + d*n3 + 2*n1*n3 - n3^2 - 3*n4 + 2*d*n4 + 2*n1*n4 - 3*n3*n4 - 
      2*n4^2 + 42*n5 - 20*d*n5 + 2*d^2*n5 + 16*n1*n5 - 4*d*n1*n5 + 13*n2*n5 - 
      3*d*n2*n5 + 2*n1*n2*n5 + n2^2*n5 - n3*n5 + d*n3*n5 + 2*n1*n3*n5 - 
      n3^2*n5 - 3*n4*n5 + 2*d*n4*n5 + 2*n1*n4*n5 - 3*n3*n4*n5 - 2*n4^2*n5 + 
      18*n5^2 - 5*d*n5^2 + 4*n1*n5^2 + 3*n2*n5^2 + 2*n5^3)*
     j[p4, n1, n2, n3, n4, 2 + n5, 1, -1, 1, 0, 1, 1, 0, 0, 1])/
    ((3 - d + n4 + n5)*(5 - 2*d + n2 + n3 + 2*n4 + n5)*
     (14 - 5*d + 2*n1 + 2*n2 + 2*n3 + 2*n4 + 2*n5)) + 
   ((-26 + 15*d - 2*d^2 - 12*n1 + 4*d*n1 - 10*n2 + 3*d*n2 - 2*n1*n2 - n2^2 + 
      n3 - d*n3 - 2*n1*n3 + n3^2 + 3*n4 - 2*d*n4 - 2*n1*n4 + 3*n3*n4 + 
      2*n4^2 - 42*n5 + 20*d*n5 - 2*d^2*n5 - 16*n1*n5 + 4*d*n1*n5 - 13*n2*n5 + 
      3*d*n2*n5 - 2*n1*n2*n5 - n2^2*n5 + n3*n5 - d*n3*n5 - 2*n1*n3*n5 + 
      n3^2*n5 + 3*n4*n5 - 2*d*n4*n5 - 2*n1*n4*n5 + 3*n3*n4*n5 + 2*n4^2*n5 - 
      18*n5^2 + 5*d*n5^2 - 4*n1*n5^2 - 3*n2*n5^2 - 2*n5^3)*
     j[p4, n1, n2, n3, n4, 2 + n5, 1, -1, 1, 0, 1, 1, 0, 1, 0])/
    ((3 - d + n4 + n5)*(5 - 2*d + n2 + n3 + 2*n4 + n5)*
     (14 - 5*d + 2*n1 + 2*n2 + 2*n3 + 2*n4 + 2*n5)) + 
   ((1 + n5)*j[p4, n1, n2, n3, n4, 2 + n5, 1, 0, 1, -1, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5)) + ((-1 - n5)*j[p4, n1, n2, n3, n4, 2 + n5, 1, 0, 
      1, -1, 1, 1, 0, 1, 0])/(2*(-3 + d - n4 - n5)) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, 0, 0, 1, 0, 1, 1, 0, 1, 1])/
    (-3 + d - n4 - n5) - (n4*j[p4, n1, n2, n3, 1 + n4, n5, 1, 0, 0, 0, 1, 1, 
      0, 1, 1])/(2*(-3 + d - n4 - n5)) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, 1, 0, 1, 0, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)) - (n4*j[p4, n1, n2, n3, 1 + n4, n5, 1, 0, 1, 0, 1, 
      0, 0, 1, 1])/(2*(-3 + d - n4 - n5)) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, 1, 0, 1, 0, 1, 1, 0, 1, 0])/
    (2*(-3 + d - n4 - n5)) + ((-12*n4 + 10*d*n4 - 2*d^2*n4 - 10*n1*n4 + 
      4*d*n1*n4 - 8*n2*n4 + 3*d*n2*n4 - 2*n1*n2*n4 - n2^2*n4 + 3*n3*n4 - 
      d*n3*n4 - 2*n1*n3*n4 + n3^2*n4 - 9*n4^2 + 3*d*n4^2 - 4*n1*n4^2 - 
      2*n2*n4^2 + n3*n4^2 - 2*n1*n4*n5 - n2*n4*n5 + 2*n3*n4*n5)*
     j[p4, n1, n2, n3, 1 + n4, 1 + n5, 0, -1, 1, 0, 1, 1, 0, 1, 1])/
    ((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-58*n4 + 43*d*n4 - 8*d^2*n4 - 16*n2*n4 + 6*d*n2*n4 - n2^2*n4 - 
      27*n3*n4 + 10*d*n3*n4 - 4*n2*n3*n4 - 3*n3^2*n4 - 29*n4^2 + 11*d*n4^2 - 
      4*n2*n4^2 - 7*n3*n4^2 - 4*n4^3 - 24*n4*n5 + 9*d*n4*n5 - 3*n2*n4*n5 - 
      6*n3*n4*n5 - 6*n4^2*n5 - 2*n4*n5^2)*j[p4, n1, n2, n3, 1 + n4, 1 + n5, 
      0, 0, 1, -1, 1, 1, 0, 1, 1])/((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 
      2*n5)*(-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-46*n4 + 33*d*n4 - 6*d^2*n4 + 10*n1*n4 - 4*d*n1*n4 - 8*n2*n4 + 
      3*d*n2*n4 + 2*n1*n2*n4 - 30*n3*n4 + 11*d*n3*n4 + 2*n1*n3*n4 - 
      4*n2*n3*n4 - 4*n3^2*n4 - 20*n4^2 + 8*d*n4^2 + 4*n1*n4^2 - 2*n2*n4^2 - 
      8*n3*n4^2 - 4*n4^3 - 24*n4*n5 + 9*d*n4*n5 + 2*n1*n4*n5 - 2*n2*n4*n5 - 
      8*n3*n4*n5 - 6*n4^2*n5 - 2*n4*n5^2)*j[p4, n1, n2, n3, 1 + n4, 1 + n5, 
      1, -1, 0, 0, 1, 1, 0, 1, 1])/(2*(-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 
      2*n4 - 2*n5)*(-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, 1 + n5, 1, -1, 1, 0, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)) + (n4*j[p4, n1, n2, n3, 1 + n4, 1 + n5, 1, -1, 1, 
      0, 1, 0, 0, 1, 1])/(2*(-3 + d - n4 - n5)) + 
   ((58*n4 - 43*d*n4 + 8*d^2*n4 + 16*n2*n4 - 6*d*n2*n4 + n2^2*n4 + 27*n3*n4 - 
      10*d*n3*n4 + 4*n2*n3*n4 + 3*n3^2*n4 + 29*n4^2 - 11*d*n4^2 + 4*n2*n4^2 + 
      7*n3*n4^2 + 4*n4^3 + 24*n4*n5 - 9*d*n4*n5 + 3*n2*n4*n5 + 6*n3*n4*n5 + 
      6*n4^2*n5 + 2*n4*n5^2)*j[p4, n1, n2, n3, 1 + n4, 1 + n5, 1, 0, 0, -1, 
      1, 1, 0, 1, 1])/((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, 1 + n5, 1, 0, 1, -1, 1, 1, 0, 1, 0])/
    (2*(-3 + d - n4 - n5)) + ((94*n3 - 73*d*n3 + 14*d^2*n3 + 30*n1*n3 - 
      12*d*n1*n3 + 40*n2*n3 - 15*d*n2*n3 + 6*n1*n2*n3 + 4*n2^2*n3 + 18*n3^2 - 
      7*d*n3^2 + 6*n1*n3^2 + 4*n2*n3^2 + 56*n3*n4 - 20*d*n3*n4 + 
      12*n1*n3*n4 + 10*n2*n3*n4 + 4*n3^2*n4 + 4*n3*n4^2 + 24*n3*n5 - 
      9*d*n3*n5 + 6*n1*n3*n5 + 6*n2*n3*n5 + 6*n3*n4*n5 + 2*n3*n5^2)*
     j[p4, n1, n2, 1 + n3, n4, 1 + n5, 1, -1, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((46*n3 - 33*d*n3 + 6*d^2*n3 - 10*n1*n3 + 4*d*n1*n3 + 8*n2*n3 - 
      3*d*n2*n3 - 2*n1*n2*n3 + 30*n3^2 - 11*d*n3^2 - 2*n1*n3^2 + 4*n2*n3^2 + 
      4*n3^3 + 20*n3*n4 - 8*d*n3*n4 - 4*n1*n3*n4 + 2*n2*n3*n4 + 8*n3^2*n4 + 
      4*n3*n4^2 + 24*n3*n5 - 9*d*n3*n5 - 2*n1*n3*n5 + 2*n2*n3*n5 + 
      8*n3^2*n5 + 6*n3*n4*n5 + 2*n3*n5^2)*j[p4, n1, n2, 1 + n3, n4, 1 + n5, 
      1, -1, 1, 0, 0, 1, 0, 1, 1])/(2*(-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 
      2*n4 - 2*n5)*(-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-46*n3 + 33*d*n3 - 6*d^2*n3 + 10*n1*n3 - 4*d*n1*n3 - 8*n2*n3 + 
      3*d*n2*n3 + 2*n1*n2*n3 - 30*n3^2 + 11*d*n3^2 + 2*n1*n3^2 - 4*n2*n3^2 - 
      4*n3^3 - 20*n3*n4 + 8*d*n3*n4 + 4*n1*n3*n4 - 2*n2*n3*n4 - 8*n3^2*n4 - 
      4*n3*n4^2 - 24*n3*n5 + 9*d*n3*n5 + 2*n1*n3*n5 - 2*n2*n3*n5 - 
      8*n3^2*n5 - 6*n3*n4*n5 - 2*n3*n5^2)*j[p4, n1, n2, 1 + n3, n4, 1 + n5, 
      1, -1, 1, 0, 1, 0, 0, 1, 1])/(2*(-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 
      2*n4 - 2*n5)*(-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((94*n3 - 73*d*n3 + 14*d^2*n3 + 30*n1*n3 - 12*d*n1*n3 + 40*n2*n3 - 
      15*d*n2*n3 + 6*n1*n2*n3 + 4*n2^2*n3 + 18*n3^2 - 7*d*n3^2 + 6*n1*n3^2 + 
      4*n2*n3^2 + 56*n3*n4 - 20*d*n3*n4 + 12*n1*n3*n4 + 10*n2*n3*n4 + 
      4*n3^2*n4 + 4*n3*n4^2 + 24*n3*n5 - 9*d*n3*n5 + 6*n1*n3*n5 + 
      6*n2*n3*n5 + 6*n3*n4*n5 + 2*n3*n5^2)*j[p4, n1, n2, 1 + n3, n4, 1 + n5, 
      1, -1, 1, 0, 1, 1, 0, 0, 1])/(2*(-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 
      2*n4 - 2*n5)*(-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-58*n3 + 43*d*n3 - 8*d^2*n3 - 16*n2*n3 + 6*d*n2*n3 - n2^2*n3 - 27*n3^2 + 
      10*d*n3^2 - 4*n2*n3^2 - 3*n3^3 - 29*n3*n4 + 11*d*n3*n4 - 4*n2*n3*n4 - 
      7*n3^2*n4 - 4*n3*n4^2 - 24*n3*n5 + 9*d*n3*n5 - 3*n2*n3*n5 - 6*n3^2*n5 - 
      6*n3*n4*n5 - 2*n3*n5^2)*j[p4, n1, n2, 1 + n3, n4, 1 + n5, 1, 0, 0, 0, 
      1, 1, -1, 1, 1])/((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((116*n3 - 86*d*n3 + 16*d^2*n3 + 32*n2*n3 - 12*d*n2*n3 + 2*n2^2*n3 + 
      54*n3^2 - 20*d*n3^2 + 8*n2*n3^2 + 6*n3^3 + 58*n3*n4 - 22*d*n3*n4 + 
      8*n2*n3*n4 + 14*n3^2*n4 + 8*n3*n4^2 + 48*n3*n5 - 18*d*n3*n5 + 
      6*n2*n3*n5 + 12*n3^2*n5 + 12*n3*n4*n5 + 4*n3*n5^2)*
     j[p4, n1, n2, 1 + n3, n4, 1 + n5, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-58*n3 + 43*d*n3 - 8*d^2*n3 - 16*n2*n3 + 6*d*n2*n3 - n2^2*n3 - 27*n3^2 + 
      10*d*n3^2 - 4*n2*n3^2 - 3*n3^3 - 29*n3*n4 + 11*d*n3*n4 - 4*n2*n3*n4 - 
      7*n3^2*n4 - 4*n3*n4^2 - 24*n3*n5 + 9*d*n3*n5 - 3*n2*n3*n5 - 6*n3^2*n5 - 
      6*n3*n4*n5 - 2*n3*n5^2)*j[p4, n1, n2, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 
      0, 1, -1, 1, 1])/((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((58*n3 - 43*d*n3 + 8*d^2*n3 + 16*n2*n3 - 6*d*n2*n3 + n2^2*n3 + 27*n3^2 - 
      10*d*n3^2 + 4*n2*n3^2 + 3*n3^3 + 29*n3*n4 - 11*d*n3*n4 + 4*n2*n3*n4 + 
      7*n3^2*n4 + 4*n3*n4^2 + 24*n3*n5 - 9*d*n3*n5 + 3*n2*n3*n5 + 6*n3^2*n5 + 
      6*n3*n4*n5 + 2*n3*n5^2)*j[p4, n1, n2, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 
      1, 0, -1, 1, 1])/((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, -1, 0, 1])/
    (-3 + d - n4 - n5) + ((186*n3 - 139*d*n3 + 26*d^2*n3 + 10*n1*n3 - 
      4*d*n1*n3 + 56*n2*n3 - 21*d*n2*n3 + 2*n1*n2*n3 + 4*n2^2*n3 + 78*n3^2 - 
      29*d*n3^2 + 2*n1*n3^2 + 12*n2*n3^2 + 8*n3^3 + 96*n3*n4 - 36*d*n3*n4 + 
      4*n1*n3*n4 + 14*n2*n3*n4 + 20*n3^2*n4 + 12*n3*n4^2 + 72*n3*n5 - 
      27*d*n3*n5 + 2*n1*n3*n5 + 10*n2*n3*n5 + 16*n3^2*n5 + 18*n3*n4*n5 + 
      6*n3*n5^2)*j[p4, n1, n2, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 
      1])/(2*(-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-32 + 28*d - 6*d^2 + 12*n1 - 4*d*n1 - 6*n2 + 3*d*n2 + 2*n1*n2 - 28*n3 + 
      11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 32*n4 + 13*d*n4 + 2*n1*n4 - 
      4*n2*n4 - 10*n3*n4 - 6*n4^2 - 8*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 
      6*n4*n5)*j[p4, n1, 1 + n2, -1 + n3, n4, n5, 1, 0, 1, 0, 1, 1, 0, 1, 2])/
    ((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((26*n2 - 15*d*n2 + 2*d^2*n2 + 12*n1*n2 - 4*d*n1*n2 + 10*n2^2 - 3*d*n2^2 + 
      2*n1*n2^2 + n2^3 - n2*n3 + d*n2*n3 + 2*n1*n2*n3 - n2*n3^2 - 3*n2*n4 + 
      2*d*n2*n4 + 2*n1*n2*n4 - 3*n2*n3*n4 - 2*n2*n4^2 + 16*n2*n5 - 
      5*d*n2*n5 + 4*n1*n2*n5 + 3*n2^2*n5 + 2*n2*n5^2)*
     j[p4, n1, 1 + n2, -1 + n3, n4, 1 + n5, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(5 - 2*d + n2 + n3 + 2*n4 + n5)*
     (14 - 5*d + 2*n1 + 2*n2 + 2*n3 + 2*n4 + 2*n5)) + 
   (n2*j[p4, n1, 1 + n2, -1 + n3, n4, 1 + n5, 1, 0, 1, 0, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)) + ((32 - 28*d + 6*d^2 - 12*n1 + 4*d*n1 + 6*n2 - 
      3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
      32*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5)*j[p4, n1, 1 + n2, n3, -1 + n4, 
      1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    ((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((32 - 28*d + 6*d^2 - 12*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
      11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 32*n4 - 13*d*n4 - 2*n1*n4 + 
      4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
      6*n4*n5)*j[p4, n1, 1 + n2, n3, -1 + n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 
      1])/((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)) + 
   ((-32 + 28*d - 6*d^2 + 12*n1 - 4*d*n1 - 6*n2 + 3*d*n2 + 2*n1*n2 - 28*n3 + 
      11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 32*n4 + 13*d*n4 + 2*n1*n4 - 
      4*n2*n4 - 10*n3*n4 - 6*n4^2 - 8*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 
      6*n4*n5)*j[p4, n1, 1 + n2, n3, n4, n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)) + 
   ((-32 + 28*d - 6*d^2 + 12*n1 - 4*d*n1 - 6*n2 + 3*d*n2 + 2*n1*n2 - 28*n3 + 
      11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 32*n4 + 13*d*n4 + 2*n1*n4 - 
      4*n2*n4 - 10*n3*n4 - 6*n4^2 - 8*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 
      6*n4*n5)*j[p4, n1, 1 + n2, n3, n4, n5, 2, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-52*n2 + 30*d*n2 - 4*d^2*n2 - 24*n1*n2 + 8*d*n1*n2 - 20*n2^2 + 
      6*d*n2^2 - 4*n1*n2^2 - 2*n2^3 + 2*n2*n3 - 2*d*n2*n3 - 4*n1*n2*n3 + 
      2*n2*n3^2 + 6*n2*n4 - 4*d*n2*n4 - 4*n1*n2*n4 + 6*n2*n3*n4 + 4*n2*n4^2 - 
      32*n2*n5 + 10*d*n2*n5 - 8*n1*n2*n5 - 6*n2^2*n5 - 4*n2*n5^2)*
     j[p4, n1, 1 + n2, n3, n4, 1 + n5, 1, -1, 0, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(5 - 2*d + n2 + n3 + 2*n4 + n5)*
     (14 - 5*d + 2*n1 + 2*n2 + 2*n3 + 2*n4 + 2*n5)) + 
   ((46*n2 - 33*d*n2 + 6*d^2*n2 - 10*n1*n2 + 4*d*n1*n2 + 8*n2^2 - 3*d*n2^2 - 
      2*n1*n2^2 + 30*n2*n3 - 11*d*n2*n3 - 2*n1*n2*n3 + 4*n2^2*n3 + 
      4*n2*n3^2 + 20*n2*n4 - 8*d*n2*n4 - 4*n1*n2*n4 + 2*n2^2*n4 + 
      8*n2*n3*n4 + 4*n2*n4^2 + 24*n2*n5 - 9*d*n2*n5 - 2*n1*n2*n5 + 
      2*n2^2*n5 + 8*n2*n3*n5 + 6*n2*n4*n5 + 2*n2*n5^2)*
     j[p4, n1, 1 + n2, n3, n4, 1 + n5, 1, -1, 1, 0, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)*(5 - 2*d + n2 + n3 + 2*n4 + n5)*
     (14 - 5*d + 2*n1 + 2*n2 + 2*n3 + 2*n4 + 2*n5)) + 
   ((-52*n2 + 30*d*n2 - 4*d^2*n2 - 24*n1*n2 + 8*d*n1*n2 - 20*n2^2 + 
      6*d*n2^2 - 4*n1*n2^2 - 2*n2^3 + 2*n2*n3 - 2*d*n2*n3 - 4*n1*n2*n3 + 
      2*n2*n3^2 + 6*n2*n4 - 4*d*n2*n4 - 4*n1*n2*n4 + 6*n2*n3*n4 + 4*n2*n4^2 - 
      32*n2*n5 + 10*d*n2*n5 - 8*n1*n2*n5 - 6*n2^2*n5 - 4*n2*n5^2)*
     j[p4, n1, 1 + n2, n3, n4, 1 + n5, 1, -1, 1, 0, 1, 1, 0, 0, 1])/
    ((-3 + d - n4 - n5)*(5 - 2*d + n2 + n3 + 2*n4 + n5)*
     (14 - 5*d + 2*n1 + 2*n2 + 2*n3 + 2*n4 + 2*n5)) + 
   ((32 - 28*d + 6*d^2 - 12*n1 + 4*d*n1 + 38*n2 - 31*d*n2 + 6*d^2*n2 - 
      14*n1*n2 + 4*d*n1*n2 + 6*n2^2 - 3*d*n2^2 - 2*n1*n2^2 + 28*n3 - 
      11*d*n3 - 2*n1*n3 + 32*n2*n3 - 11*d*n2*n3 - 2*n1*n2*n3 + 4*n2^2*n3 + 
      4*n3^2 + 4*n2*n3^2 + 15*d*n4 - 6*d^2*n4 + 10*n1*n4 - 4*d*n1*n4 + 
      30*n2*n4 - 10*d*n2*n4 + 4*n2^2*n4 - 18*n3*n4 + 11*d*n3*n4 + 
      2*n1*n3*n4 + 6*n2*n3*n4 - 4*n3^2*n4 - 26*n4^2 + 13*d*n4^2 + 2*n1*n4^2 + 
      2*n2*n4^2 - 10*n3*n4^2 - 6*n4^3 + 40*n5 - 32*d*n5 + 6*d^2*n5 - 
      16*n1*n5 + 4*d*n1*n5 + 14*n2*n5 - 7*d*n2*n5 - 6*n1*n2*n5 + 34*n3*n5 - 
      11*d*n3*n5 - 2*n1*n3*n5 + 10*n2*n3*n5 + 4*n3^2*n5 + 30*n4*n5 - 
      9*d*n4*n5 + 2*n1*n4*n5 + 10*n2*n4*n5 + 4*n3*n4*n5 + 8*n5^2 - 4*d*n5^2 - 
      4*n1*n5^2 + 6*n3*n5^2 + 6*n4*n5^2)*j[p4, n1, 1 + n2, n3, n4, 1 + n5, 1, 
      -1, 1, 0, 1, 1, 0, 1, 1])/((3 - d + n4 + n5)*(5 - 2*d + n2 + n3 + 
      2*n4 + n5)*(14 - 5*d + 2*n1 + 2*n2 + 2*n3 + 2*n4 + 2*n5)) + 
   ((26*n2 - 15*d*n2 + 2*d^2*n2 + 12*n1*n2 - 4*d*n1*n2 + 10*n2^2 - 3*d*n2^2 + 
      2*n1*n2^2 + n2^3 - n2*n3 + d*n2*n3 + 2*n1*n2*n3 - n2*n3^2 - 3*n2*n4 + 
      2*d*n2*n4 + 2*n1*n2*n4 - 3*n2*n3*n4 - 2*n2*n4^2 + 16*n2*n5 - 
      5*d*n2*n5 + 4*n1*n2*n5 + 3*n2^2*n5 + 2*n2*n5^2)*
     j[p4, n1, 1 + n2, n3, n4, 1 + n5, 1, 0, 0, 0, 1, 1, -1, 1, 1])/
    ((-3 + d - n4 - n5)*(5 - 2*d + n2 + n3 + 2*n4 + n5)*
     (14 - 5*d + 2*n1 + 2*n2 + 2*n3 + 2*n4 + 2*n5)) + 
   ((32*n2 - 28*d*n2 + 6*d^2*n2 - 12*n1*n2 + 4*d*n1*n2 + 6*n2^2 - 3*d*n2^2 - 
      2*n1*n2^2 + 28*n2*n3 - 11*d*n2*n3 - 2*n1*n2*n3 + 4*n2^2*n3 + 
      4*n2*n3^2 + 32*n2*n4 - 13*d*n2*n4 - 2*n1*n2*n4 + 4*n2^2*n4 + 
      10*n2*n3*n4 + 6*n2*n4^2 + 8*n2*n5 - 4*d*n2*n5 - 4*n1*n2*n5 + 
      6*n2*n3*n5 + 6*n2*n4*n5)*j[p4, n1, 1 + n2, n3, n4, 1 + n5, 1, 0, 0, 0, 
      1, 1, 0, 1, 1])/((-3 + d - n4 - n5)*(5 - 2*d + n2 + n3 + 2*n4 + n5)*
     (14 - 5*d + 2*n1 + 2*n2 + 2*n3 + 2*n4 + 2*n5)) + 
   (n2*j[p4, n1, 1 + n2, n3, n4, 1 + n5, 1, 0, 1, 0, 0, 1, -1, 1, 1])/
    (2*(-3 + d - n4 - n5)) + ((58*n1 - 43*d*n1 + 8*d^2*n1 + 16*n1*n2 - 
      6*d*n1*n2 + n1*n2^2 + 27*n1*n3 - 10*d*n1*n3 + 4*n1*n2*n3 + 3*n1*n3^2 + 
      29*n1*n4 - 11*d*n1*n4 + 4*n1*n2*n4 + 7*n1*n3*n4 + 4*n1*n4^2 + 
      24*n1*n5 - 9*d*n1*n5 + 3*n1*n2*n5 + 6*n1*n3*n5 + 6*n1*n4*n5 + 
      2*n1*n5^2)*j[p4, 1 + n1, n2, n3, n4, 1 + n5, 1, 0, 0, 0, 1, 1, 0, 1, 
      1])/((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-58*n1 + 43*d*n1 - 8*d^2*n1 - 16*n1*n2 + 6*d*n1*n2 - n1*n2^2 - 
      27*n1*n3 + 10*d*n1*n3 - 4*n1*n2*n3 - 3*n1*n3^2 - 29*n1*n4 + 
      11*d*n1*n4 - 4*n1*n2*n4 - 7*n1*n3*n4 - 4*n1*n4^2 - 24*n1*n5 + 
      9*d*n1*n5 - 3*n1*n2*n5 - 6*n1*n3*n5 - 6*n1*n4*n5 - 2*n1*n5^2)*
     j[p4, 1 + n1, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 0, 0, 1, 1])/
    ((-14 + 5*d - 2*n1 - 2*n2 - 2*n3 - 2*n4 - 2*n5)*
     (-5 + 2*d - n2 - n3 - 2*n4 - n5)*(-3 + d - n4 - n5)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n3 == 1 && n7 == 0 && n9 == 0 &&  !(n4 == 0 || n6 == 1 || n8 == 1) -> 
  ((1 + n4)*j[p4, -1, 0, 1, 2 + n4, n5, -1 + n6, 0, -1 + n8, 0, 2, n11, 0, 1, 
      1])/((-1 + n6)*(-1 + n8)) + j[p4, -1, 0, 2, 1 + n4, n5, -1 + n6, 0, 
     -1 + n8, 0, 2, n11, 0, 1, 1]/((-1 + n6)*(-1 + n8)) + 
   ((-1 - n4)*j[p4, 0, -1, 1, 2 + n4, n5, -1 + n6, 0, -1 + n8, 0, 2, n11, 0, 
      1, 1])/((-1 + n6)*(-1 + n8)) + j[p4, 0, 0, 0, 1 + n4, n5, -1 + n6, 0, 
     n8, 0, 2, n11, 0, 1, 1]/(1 - n6) + 
   ((-1 - n4)*j[p4, 0, 0, 0, 2 + n4, n5, -1 + n6, 0, -1 + n8, 0, 2, n11, 0, 
      1, 1])/((-1 + n6)*(-1 + n8)) + ((-3 + 2*d - 2*n11 - n4 - n5 - n8)*
     j[p4, 0, 0, 1, 1 + n4, n5, -1 + n6, 0, -1 + n8, 0, 2, n11, 0, 1, 1])/
    ((-1 + n6)*(-1 + n8)) + ((-6 + 2*d - 2*n4 - n5 - n6)*
     j[p4, 0, 0, 1, 1 + n4, n5, -1 + n6, 0, n8, 0, 1, n11, 0, 1, 1])/
    (-1 + n6) + j[p4, 0, 0, 1, 1 + n4, n5, -1 + n6, 0, n8, 0, 2, n11, 0, 1, 
     1]/(-1 + n6) + j[p4, 0, 0, 1, 1 + n4, n5, n6, 0, -1 + n8, 0, 1, n11, 0, 
    1, 1] - (n5*j[p4, 0, 0, 1, 1 + n4, 1 + n5, -1 + n6, 0, -1 + n8, 0, 2, 
      n11, 0, 0, 1])/((-1 + n6)*(-1 + n8)) + 
   (n5*j[p4, 0, 0, 1, 1 + n4, 1 + n5, -1 + n6, 0, -1 + n8, 0, 2, n11, 0, 1, 
      0])/((-1 + n6)*(-1 + n8)) + 
   (n5*j[p4, 0, 0, 1, 1 + n4, 1 + n5, -1 + n6, 0, n8, 0, 1, n11, 0, 0, 1])/
    (-1 + n6) - (n5*j[p4, 0, 0, 1, 1 + n4, 1 + n5, -1 + n6, 0, n8, 0, 1, n11, 
      0, 1, 0])/(-1 + n6) + ((1 + n4)*j[p4, 0, 0, 1, 2 + n4, n5, -2 + n6, 0, 
      -1 + n8, 0, 2, n11, 0, 1, 1])/((-1 + n6)*(-1 + n8)) + 
   ((1 + n4)*j[p4, 0, 0, 1, 2 + n4, n5, -1 + n6, -1, -1 + n8, 0, 2, n11, 0, 
      1, 1])/((-1 + n6)*(-1 + n8)) + 
   ((-1 - n4)*j[p4, 0, 0, 1, 2 + n4, n5, -1 + n6, 0, -1 + n8, -1, 2, n11, 0, 
      1, 1])/((-1 + n6)*(-1 + n8)) + 
   ((1 + n4)*j[p4, 0, 0, 1, 2 + n4, n5, -1 + n6, 0, -1 + n8, 0, 1, n11, 0, 1, 
      1])/((-1 + n6)*(-1 + n8)) + 
   ((-1 - n4)*j[p4, 0, 0, 1, 2 + n4, n5, -1 + n6, 0, -1 + n8, 0, 2, -1 + n11, 
      0, 1, 1])/((-1 + n6)*(-1 + n8)) + 
   ((1 + n4)*j[p4, 0, 0, 1, 2 + n4, n5, -1 + n6, 0, -1 + n8, 0, 2, n11, 0, 1, 
      0])/((-1 + n6)*(-1 + n8)) - j[p4, 0, 0, 2, 1 + n4, n5, -1 + n6, 0, 
     -2 + n8, 0, 2, n11, 0, 1, 1]/((-1 + n6)*(-1 + n8)) + 
   j[p4, 0, 0, 2, 1 + n4, n5, -1 + n6, 0, -1 + n8, 0, 1, n11, 0, 1, 1]/
    ((-1 + n6)*(-1 + n8)) - j[p4, 0, 0, 2, 1 + n4, n5, -1 + n6, 0, -1 + n8, 
     0, 2, -1 + n11, 0, 1, 1]/((-1 + n6)*(-1 + n8)) + 
   j[p4, 0, 0, 2, 1 + n4, n5, -1 + n6, 0, -1 + n8, 0, 2, n11, -1, 1, 1]/
    ((-1 + n6)*(-1 + n8)) - j[p4, 0, 0, 2, 1 + n4, n5, -1 + n6, 0, -1 + n8, 
     0, 2, n11, 0, 0, 1]/((-1 + n6)*(-1 + n8)) - 
   j[p4, 0, 0, 2, 1 + n4, n5, -1 + n6, 0, -1 + n8, 0, 2, n11, 0, 1, 1]/
    ((-1 + n6)*(-1 + n8)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n14 == 1 && n3 == 1 && n5 == 0 && 
    n7 == 0 && n8 == 1 && n9 == 0 &&  !(n11 == 1 || n2 == 0 || n6 == 1) -> 
  j[p4, 0, n2, 1, n4, 0, n6, 0, 2, 0, 1, -1 + n11, 0, n13, 1]/(-1 + n11) + 
   j[p4, 0, n2, 2, n4, 0, n6, 0, 1, 0, 1, -1 + n11, 0, n13, 1]/(1 - n11) - 
   j[p4, 0, 1 + n2, 0, n4, 0, n6, 0, 1, 0, 1, n11, 0, n13, 1] - 
   (n4*j[p4, 0, 1 + n2, 0, 1 + n4, 0, -1 + n6, 0, 1, 0, 1, n11, 0, n13, 1])/
    (-1 + n6) - (n4*j[p4, 0, 1 + n2, 0, 1 + n4, 0, n6, 0, 1, 0, 1, -1 + n11, 
      0, n13, 1])/(-1 + n11) + 
   ((1 - d + n4 + n6)*j[p4, 0, 1 + n2, 1, n4, 0, -1 + n6, 0, 1, 0, 1, n11, 0, 
      n13, 1])/(-1 + n6) + j[p4, 0, 1 + n2, 1, n4, 0, n6, -1, 2, 0, 1, 
     -1 + n11, 0, n13, 1]/(1 - n11) + j[p4, 0, 1 + n2, 1, n4, 0, n6, 0, 0, 0, 
    1, n11, 0, n13, 1] + j[p4, 0, 1 + n2, 1, n4, 0, n6, 0, 1, 0, 0, n11, 0, 
    n13, 1] - (2*j[p4, 0, 1 + n2, 1, n4, 0, n6, 0, 1, 0, 1, -1 + n11, 0, n13, 
      1])/(-1 + n11) + j[p4, 0, 1 + n2, 1, n4, 0, n6, 0, 1, 0, 1, n11, 0, 
    -1 + n13, 1] + j[p4, 0, 1 + n2, 1, n4, 0, n6, 0, 1, 0, 1, n11, 0, n13, 
    0] - j[p4, 0, 1 + n2, 1, n4, 0, n6, 0, 1, 0, 1, n11, 0, n13, 1] + 
   j[p4, 0, 1 + n2, 1, n4, 0, n6, 0, 2, 0, 1, -1 + n11, -1, n13, 1]/
    (-1 + n11) + j[p4, 0, 1 + n2, 1, n4, 0, n6, 0, 2, 0, 1, -1 + n11, 0, 
     -1 + n13, 1]/(1 - n11) - (n4*j[p4, 0, 1 + n2, 1, 1 + n4, 0, -1 + n6, 0, 
      1, 0, 1, -1 + n11, 0, n13, 1])/(-1 + n11) + 
   (n4*j[p4, 0, 1 + n2, 1, 1 + n4, 0, -1 + n6, 0, 1, 0, 1, n11, 0, n13, 0])/
    (-1 + n6) + (n4*j[p4, 0, 1 + n2, 1, 1 + n4, 0, n6, 0, 0, 0, 1, -1 + n11, 
      0, n13, 1])/(-1 + n11) + 
   (n4*j[p4, 0, 1 + n2, 1, 1 + n4, 0, n6, 0, 1, 0, 1, -1 + n11, 0, n13, 0])/
    (-1 + n11) + j[p4, 0, 1 + n2, 2, n4, 0, n6, -1, 1, 0, 1, -1 + n11, 0, 
     n13, 1]/(-1 + n11) + (2*j[p4, 0, 1 + n2, 2, n4, 0, n6, 0, 0, 0, 1, 
      -1 + n11, 0, n13, 1])/(-1 + n11) + 
   j[p4, 0, 1 + n2, 2, n4, 0, n6, 0, 1, 0, 1, -1 + n11, -1, n13, 1]/
    (1 - n11) + j[p4, 0, 1 + n2, 2, n4, 0, n6, 0, 1, 0, 1, -1 + n11, 0, 
     -1 + n13, 1]/(-1 + n11), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n3 == 1 && n8 == 1 && n9 == 0 &&  !(n5 == 0 || n6 == 1) -> 
  ((4 - d + n4 + 2*n5)*j[p4, n1, -1, 1, n4, 1 + n5, n6, n7, 1, 0, 1, 1, 0, 1, 
      1])/(2*(2 - d + n4 + n5 + n6)) - 
   (n4*j[p4, n1, 0, 0, 1 + n4, n5, -1 + n6, n7, 1, 0, 1, 1, 0, 1, 2])/
    (2*(-1 + n6)*(2 - d + n4 + n5 + n6)) + 
   ((-4 + d - n4)*j[p4, n1, 0, 1, n4, 1 + n5, -1 + n6, n7, 1, 0, 1, 1, 0, 0, 
      2])/(2*(-2 + d - n4 - n5 - n6)*(-1 + n6)) + 
   ((-4 + d - n4 - 2*n5)*j[p4, n1, 0, 1, n4, 1 + n5, -1 + n6, n7, 1, 0, 1, 1, 
      0, 1, 1])/(2*(-1 + n6)) - 
   (n4*j[p4, n1, 0, 1, 1 + n4, n5, -1 + n6, n7, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-1 + n6)) + (n4*j[p4, n1, 0, 1, 1 + n4, n5, n6, n7, 0, 0, 1, 1, 0, 1, 
      1])/(2*(2 - d + n4 + n5 + n6)) + 
   ((4*n4 - d*n4 + n4^2 + n4*n5)*j[p4, n1, 0, 1, 1 + n4, 1 + n5, -1 + n6, 
      -1 + n7, 1, 0, 1, 1, 0, 1, 1])/(2*(-1 + n6)*(2 - d + n4 + n5 + n6)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n13 == 1 && n14 == 1 && n2 == 0 && n3 == 1 && 
    n6 == 1 && n7 == 0 && n8 == 1 &&  !(n12 == 0 || n9 == 0) -> 
  (n5*j[p4, -1 + n1, -1, 1, -1 + n4, 1 + n5, 1, 0, 1, 1 + n9, 1, 1, 1 + n12, 
      1, 1])/(-1 + n4) + j[p4, -1 + n1, -1, 1, n4, n5, 1, 0, 1, 1 + n9, 1, 1, 
    1 + n12, 1, 1] - (n5*j[p4, -1 + n1, 0, 1, -1 + n4, 1 + n5, 1, -1, 1, 
      1 + n9, 1, 1, 1 + n12, 1, 1])/(-1 + n4) + 
   (n5*j[p4, -1 + n1, 0, 1, -1 + n4, 1 + n5, 1, 0, 1, 1 + n9, 1, 1, n12, 1, 
      1])/(-1 + n4) - j[p4, -1 + n1, 0, 1, n4, n5, 1, -1, 1, 1 + n9, 1, 1, 
    1 + n12, 1, 1] + j[p4, -1 + n1, 0, 1, n4, n5, 1, 0, 1, 1 + n9, 1, 1, n12, 
    1, 1] - j[p4, n1, -2, 1, n4, n5, 1, 0, 1, 1 + n9, 1, 1, 1 + n12, 1, 1] + 
   ((-3 + d - n4 - n5 - 2*n9)*j[p4, n1, -1, 1, -1 + n4, n5, 1, 0, 1, 1 + n9, 
      1, 1, 1 + n12, 1, 1])/(-1 + n4) + 
   j[p4, n1, -1, 1, -1 + n4, n5, 2, 0, 1, 1 + n9, 0, 1, 1 + n12, 1, 1]/
    (-1 + n4) - (n5*j[p4, n1, -1, 1, -1 + n4, 1 + n5, 1, 0, 1, 1 + n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n4) + 2*j[p4, n1, -1, 1, n4, n5, 1, -1, 1, 
     1 + n9, 1, 1, 1 + n12, 1, 1] + j[p4, n1, -1, 1, n4, n5, 1, 0, 0, 1 + n9, 
    1, 1, 1 + n12, 1, 1] - j[p4, n1, -1, 1, n4, n5, 1, 0, 1, n9, 1, 1, 
    1 + n12, 1, 1] + j[p4, n1, -1, 1, n4, n5, 1, 0, 1, 1 + n9, 0, 1, 1 + n12, 
    1, 1] - j[p4, n1, -1, 1, n4, n5, 1, 0, 1, 1 + n9, 1, 0, 1 + n12, 1, 1] - 
   j[p4, n1, -1, 1, n4, n5, 1, 0, 1, 1 + n9, 1, 1, n12, 1, 1] + 
   j[p4, n1, 0, 0, -1 + n4, n5, 1, 0, 1, n9, 1, 1, 1 + n12, 1, 2]/(-1 + n4) + 
   j[p4, n1, 0, 0, -1 + n4, n5, 1, 0, 1, 1 + n9, 1, 1, 1 + n12, 1, 2]/
    (1 - n4) + j[p4, n1, 0, 0, -1 + n4, n5, 2, 0, 1, n9, 1, 1, 1 + n12, 1, 1]/
    (-1 + n4) + j[p4, n1, 0, 0, n4, n5, 1, 0, 1, n9, 1, 1, 1 + n12, 1, 1] + 
   j[p4, n1, 0, 1, -1 + n4, n5, 0, 0, 1, n9, 1, 1, 1 + n12, 1, 2]/(1 - n4) - 
   (n9*j[p4, n1, 0, 1, -1 + n4, n5, 0, 0, 1, 1 + n9, 1, 1, 1 + n12, 1, 1])/
    (-1 + n4) + j[p4, n1, 0, 1, -1 + n4, n5, 0, 0, 1, 1 + n9, 1, 1, 1 + n12, 
     1, 2]/(-1 + n4) + ((1 + n9)*j[p4, n1, 0, 1, -1 + n4, n5, 0, 0, 1, 
      2 + n9, 1, 1, 1 + n12, 1, 1])/(-1 + n4) + 
   ((3 - d + n4 + n5 + 2*n9)*j[p4, n1, 0, 1, -1 + n4, n5, 1, -1, 1, 1 + n9, 
      1, 1, 1 + n12, 1, 1])/(-1 + n4) + 
   j[p4, n1, 0, 1, -1 + n4, n5, 1, 0, 0, n9, 1, 1, 1 + n12, 1, 2]/(1 - n4) + 
   j[p4, n1, 0, 1, -1 + n4, n5, 1, 0, 0, 1 + n9, 1, 1, 1 + n12, 1, 2]/
    (-1 + n4) + j[p4, n1, 0, 1, -1 + n4, n5, 1, 0, 1, n9, 1, 1, 1 + n12, 0, 
     2]/(1 - n4) + ((-4 + 2*d - 2*n4 - 2*n5 - 2*n9)*
     j[p4, n1, 0, 1, -1 + n4, n5, 1, 0, 1, n9, 1, 1, 1 + n12, 1, 1])/
    (-1 + n4) + (n9*j[p4, n1, 0, 1, -1 + n4, n5, 1, 0, 1, 1 + n9, 0, 1, 
      1 + n12, 1, 1])/(-1 + n4) + ((-3 + d - n4 - n5 - 2*n9)*
     j[p4, n1, 0, 1, -1 + n4, n5, 1, 0, 1, 1 + n9, 1, 1, n12, 1, 1])/
    (-1 + n4) + j[p4, n1, 0, 1, -1 + n4, n5, 1, 0, 1, 1 + n9, 1, 1, 1 + n12, 
     0, 2]/(-1 + n4) - (n9*j[p4, n1, 0, 1, -1 + n4, n5, 1, 0, 1, 1 + n9, 1, 
      1, 1 + n12, 1, 0])/(-1 + n4) + 
   ((3 - d + n4 + n5 + 2*n9)*j[p4, n1, 0, 1, -1 + n4, n5, 1, 0, 1, 1 + n9, 1, 
      1, 1 + n12, 1, 1])/(-1 + n4) + 
   ((-1 - n9)*j[p4, n1, 0, 1, -1 + n4, n5, 1, 0, 1, 2 + n9, 0, 1, 1 + n12, 1, 
      1])/(-1 + n4) + j[p4, n1, 0, 1, -1 + n4, n5, 2, -1, 1, 1 + n9, 0, 1, 
     1 + n12, 1, 1]/(1 - n4) + j[p4, n1, 0, 1, -1 + n4, n5, 2, 0, 0, n9, 1, 
     1, 1 + n12, 1, 1]/(1 - n4) + j[p4, n1, 0, 1, -1 + n4, n5, 2, 0, 1, n9, 
     1, 1, 1 + n12, 0, 1]/(1 - n4) + j[p4, n1, 0, 1, -1 + n4, n5, 2, 0, 1, 
     n9, 1, 1, 1 + n12, 1, 0]/(1 - n4) + 
   j[p4, n1, 0, 1, -1 + n4, n5, 2, 0, 1, 1 + n9, 0, 1, n12, 1, 1]/(-1 + n4) - 
   (n5*j[p4, n1, 0, 1, -1 + n4, 1 + n5, 0, 0, 1, n9, 1, 1, 1 + n12, 1, 1])/
    (-1 + n4) + (n5*j[p4, n1, 0, 1, -1 + n4, 1 + n5, 0, 0, 1, 1 + n9, 1, 1, 
      1 + n12, 1, 1])/(-1 + n4) + 
   (n5*j[p4, n1, 0, 1, -1 + n4, 1 + n5, 1, -1, 1, n9, 1, 1, 1 + n12, 1, 1])/
    (-1 + n4) - (n5*j[p4, n1, 0, 1, -1 + n4, 1 + n5, 1, 0, 1, n9, 1, 1, n12, 
      1, 1])/(-1 + n4) + (n5*j[p4, n1, 0, 1, -1 + n4, 1 + n5, 1, 0, 1, n9, 1, 
      1, 1 + n12, 0, 1])/(-1 + n4) - 
   (n5*j[p4, n1, 0, 1, -1 + n4, 1 + n5, 1, 0, 1, n9, 1, 1, 1 + n12, 1, 0])/
    (-1 + n4) - j[p4, n1, 0, 1, n4, n5, 0, 0, 1, n9, 1, 1, 1 + n12, 1, 1] + 
   j[p4, n1, 0, 1, n4, n5, 0, 0, 1, 1 + n9, 1, 1, 1 + n12, 1, 1] - 
   j[p4, n1, 0, 1, n4, n5, 1, -2, 1, 1 + n9, 1, 1, 1 + n12, 1, 1] - 
   j[p4, n1, 0, 1, n4, n5, 1, -1, 0, 1 + n9, 1, 1, 1 + n12, 1, 1] + 
   j[p4, n1, 0, 1, n4, n5, 1, -1, 1, n9, 1, 1, 1 + n12, 1, 1] - 
   j[p4, n1, 0, 1, n4, n5, 1, -1, 1, 1 + n9, 0, 1, 1 + n12, 1, 1] + 
   j[p4, n1, 0, 1, n4, n5, 1, -1, 1, 1 + n9, 1, 0, 1 + n12, 1, 1] + 
   j[p4, n1, 0, 1, n4, n5, 1, -1, 1, 1 + n9, 1, 1, n12, 1, 1] + 
   j[p4, n1, 0, 1, n4, n5, 1, 0, 0, n9, 1, 1, 1 + n12, 1, 1] + 
   j[p4, n1, 0, 1, n4, n5, 1, 0, 0, 1 + n9, 1, 1, n12, 1, 1] - 
   j[p4, n1, 0, 1, n4, n5, 1, 0, 0, 1 + n9, 1, 1, 1 + n12, 1, 1] - 
   j[p4, n1, 0, 1, n4, n5, 1, 0, 1, n9, 1, 1, 1 + n12, 1, 0] + 
   j[p4, n1, 0, 1, n4, n5, 1, 0, 1, 1 + n9, 0, 1, n12, 1, 1] - 
   j[p4, n1, 0, 1, n4, n5, 1, 0, 1, 1 + n9, 1, 0, n12, 1, 1], 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n4 == 0 && n5 == 0 && n7 == 0 && n9 == 0 && 
     !(n2 == 0 || n6 == 1 || n8 == 1) -> 
  (2*j[p4, -1, 1 + n2, n3, 0, 0, n6, 0, n8, 0, 0, 2, 0, 1, 1])/
    (-12 + 5*d - 4*n2 - 2*n3 - 2*n6) + 
   ((-5 + 2*d - 2*n2 - n8)*j[p4, -1, 1 + n2, n3, 0, 0, n6, 0, n8, 0, 1, 1, 0, 
      1, 1])/(-12 + 5*d - 4*n2 - 2*n3 - 2*n6) - 
   (n3*j[p4, -1, 1 + n2, 1 + n3, 0, 0, n6, 0, n8, 0, 1, 1, 0, 0, 1])/
    (12 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   ((2 + 2*n2)*j[p4, -1, 2 + n2, -1 + n3, 0, 0, n6, 0, n8, 0, 1, 1, 0, 1, 1])/
    (12 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   ((-1 - n2)*j[p4, -1, 2 + n2, n3, 0, 0, n6, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (12 - 5*d + 4*n2 + 2*n3 + 2*n6) + j[p4, 0, n2, n3, 0, 0, n6, 0, n8, 0, 1, 
     1, 0, 0, 2]/(-12 + 5*d - 4*n2 - 2*n3 - 2*n6) + 
   j[p4, 0, n2, n3, 0, 0, n6, 0, n8, 0, 2, 0, 0, 1, 1]/
    (-12 + 5*d - 4*n2 - 2*n3 - 2*n6) + 
   (n8*j[p4, 0, n2, n3, 0, 0, n6, 0, 1 + n8, 0, 1, 0, 0, 1, 1])/
    (-12 + 5*d - 4*n2 - 2*n3 - 2*n6) + 
   (n8*j[p4, 0, n2, n3, 0, 0, n6, 0, 1 + n8, 0, 1, 1, 0, 0, 1])/
    (-12 + 5*d - 4*n2 - 2*n3 - 2*n6) - 
   (n6*j[p4, 0, n2, n3, 0, 0, 1 + n6, 0, n8, 0, 0, 1, 0, 1, 1])/
    (12 - 5*d + 4*n2 + 2*n3 + 2*n6) - 
   (n3*j[p4, 0, n2, 1 + n3, 0, 0, n6, 0, n8, 0, 1, 1, 0, 0, 1])/
    (12 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   ((4 - d + 2*n2 + 2*n6 - 2*n8)*j[p4, 0, 1 + n2, -1 + n3, 0, 0, n6, 0, n8, 
      0, 1, 1, 0, 1, 1])/(-12 + 5*d - 4*n2 - 2*n3 - 2*n6) + 
   j[p4, 0, 1 + n2, -1 + n3, 0, 0, n6, 0, n8, 0, 2, 0, 0, 1, 1]/
    (-12 + 5*d - 4*n2 - 2*n3 - 2*n6) + 
   j[p4, 0, 1 + n2, n3, -1, 0, n6, 0, n8, 0, 1, 1, 0, 0, 2]/
    (-12 + 5*d - 4*n2 - 2*n3 - 2*n6) - 
   (n6*j[p4, 0, 1 + n2, n3, -1, 0, 1 + n6, 0, n8, 0, 0, 1, 0, 1, 1])/
    (12 - 5*d + 4*n2 + 2*n3 + 2*n6) - j[p4, 0, 1 + n2, n3, 0, -1, n6, 0, n8, 
     0, 1, 1, 0, 0, 2]/(-12 + 5*d - 4*n2 - 2*n3 - 2*n6) + 
   (n6*j[p4, 0, 1 + n2, n3, 0, -1, 1 + n6, 0, n8, 0, 0, 1, 0, 1, 1])/
    (12 - 5*d + 4*n2 + 2*n3 + 2*n6) - j[p4, 0, 1 + n2, n3, 0, 0, -1 + n6, 0, 
     n8, 0, 1, 1, 0, 0, 2]/(-12 + 5*d - 4*n2 - 2*n3 - 2*n6) + 
   ((8 - 11*d + 3*d^2 + 4*n2 - 4*d*n2 + 10*n6 - 5*d*n6 + 4*n2*n6 + 2*n6^2)*
     j[p4, 0, 1 + n2, n3, 0, 0, -1 + n6, 0, n8, 0, 1, 1, 0, 1, 1])/
    ((-1 + n6)*(12 - 5*d + 4*n2 + 2*n3 + 2*n6)) - 
   j[p4, 0, 1 + n2, n3, 0, 0, n6, -1, n8, 0, 1, 1, 0, 0, 2]/
    (-12 + 5*d - 4*n2 - 2*n3 - 2*n6) - 
   j[p4, 0, 1 + n2, n3, 0, 0, n6, -1, n8, 0, 2, 0, 0, 1, 1]/
    (-12 + 5*d - 4*n2 - 2*n3 - 2*n6) - 
   j[p4, 0, 1 + n2, n3, 0, 0, n6, -1, n8, 0, 2, 1, 0, 0, 1]/
    (-12 + 5*d - 4*n2 - 2*n3 - 2*n6) - 
   (n8*j[p4, 0, 1 + n2, n3, 0, 0, n6, -1, 1 + n8, 0, 1, 0, 0, 1, 1])/
    (-12 + 5*d - 4*n2 - 2*n3 - 2*n6) - 
   (n8*j[p4, 0, 1 + n2, n3, 0, 0, n6, -1, 1 + n8, 0, 1, 1, 0, 0, 1])/
    (-12 + 5*d - 4*n2 - 2*n3 - 2*n6) - 
   (2*j[p4, 0, 1 + n2, n3, 0, 0, n6, 0, -1 + n8, 0, 0, 2, 0, 1, 1])/
    (-12 + 5*d - 4*n2 - 2*n3 - 2*n6) - 
   j[p4, 0, 1 + n2, n3, 0, 0, n6, 0, -1 + n8, 0, 1, 1, 0, 0, 2]/
    (-12 + 5*d - 4*n2 - 2*n3 - 2*n6) + 
   ((4 - 4*d + d^2 + 3*n2 - 2*d*n2 + 3*n3 - d*n3 + 2*n2*n3 + 3*n6 - 2*d*n6 + 
      2*n3*n6 - n8 + n2*n8 - n3*n8 + n6*n8 + n8^2)*j[p4, 0, 1 + n2, n3, 0, 0, 
      n6, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/((-12 + 5*d - 4*n2 - 2*n3 - 2*n6)*
     (-1 + n8)) - j[p4, 0, 1 + n2, n3, 0, 0, n6, 0, -1 + n8, 0, 2, 0, 0, 1, 
     1]/(-12 + 5*d - 4*n2 - 2*n3 - 2*n6) + 
   j[p4, 0, 1 + n2, n3, 0, 0, n6, 0, n8, -1, 1, 1, 0, 0, 2]/
    (-12 + 5*d - 4*n2 - 2*n3 - 2*n6) + 
   ((2 - n2 - n3)*j[p4, 0, 1 + n2, n3, 0, 0, n6, 0, n8, 0, 0, 1, 0, 1, 1])/
    (12 - 5*d + 4*n2 + 2*n3 + 2*n6) + j[p4, 0, 1 + n2, n3, 0, 0, n6, 0, n8, 
     0, 0, 2, -1, 1, 1]/(-12 + 5*d - 4*n2 - 2*n3 - 2*n6) - 
   j[p4, 0, 1 + n2, n3, 0, 0, n6, 0, n8, 0, 0, 2, 0, 1, 1]/
    (-12 + 5*d - 4*n2 - 2*n3 - 2*n6) + 
   ((-2 + n3)*j[p4, 0, 1 + n2, n3, 0, 0, n6, 0, n8, 0, 1, 0, 0, 1, 1])/
    (12 - 5*d + 4*n2 + 2*n3 + 2*n6) + j[p4, 0, 1 + n2, n3, 0, 0, n6, 0, n8, 
     0, 1, 1, -1, 0, 2]/(-12 + 5*d - 4*n2 - 2*n3 - 2*n6) + 
   ((-3 + 2*d - n3 - n8)*j[p4, 0, 1 + n2, n3, 0, 0, n6, 0, n8, 0, 1, 1, 0, 0, 
      1])/(-12 + 5*d - 4*n2 - 2*n3 - 2*n6) - 
   j[p4, 0, 1 + n2, n3, 0, 0, n6, 0, n8, 0, 1, 1, 0, 0, 2]/
    (-12 + 5*d - 4*n2 - 2*n3 - 2*n6) + 
   ((-8 + 3*d - 4*n2 - 2*n6)*j[p4, 0, 1 + n2, n3, 0, 0, n6, 0, n8, 0, 1, 1, 
      0, 1, 0])/(-12 + 5*d - 4*n2 - 2*n3 - 2*n6) + 
   ((6 - 2*d + 2*n2)*j[p4, 0, 1 + n2, n3, 0, 0, n6, 0, n8, 0, 1, 1, 0, 1, 1])/
    (-12 + 5*d - 4*n2 - 2*n3 - 2*n6) + 
   j[p4, 0, 1 + n2, n3, 0, 0, n6, 0, n8, 0, 2, 0, -1, 1, 1]/
    (-12 + 5*d - 4*n2 - 2*n3 - 2*n6) - 
   j[p4, 0, 1 + n2, n3, 0, 0, n6, 0, n8, 0, 2, 0, 0, 1, 1]/
    (-12 + 5*d - 4*n2 - 2*n3 - 2*n6) + 
   (n6*j[p4, 0, 1 + n2, n3, 0, 0, 1 + n6, 0, -1 + n8, -1, 1, 1, 0, 1, 1])/
    (12 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   ((-3*n3 + d*n3 - 2*n2*n3 - 2*n3*n6 + n3*n8)*j[p4, 0, 1 + n2, 1 + n3, 0, 0, 
      n6, -1, -1 + n8, 0, 1, 1, 0, 1, 1])/((-12 + 5*d - 4*n2 - 2*n3 - 2*n6)*
     (-1 + n8)) - (n3*j[p4, 0, 1 + n2, 1 + n3, 0, 0, n6, -1, n8, 0, 0, 1, 0, 
      1, 1])/(12 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   (n3*j[p4, 0, 1 + n2, 1 + n3, 0, 0, n6, -1, n8, 0, 1, 0, 0, 1, 1])/
    (12 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   (3*n3*j[p4, 0, 1 + n2, 1 + n3, 0, 0, n6, -1, n8, 0, 1, 1, 0, 0, 1])/
    (12 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   ((6*n3 - d*n3 + 2*n2*n3 + 2*n3*n6 - 4*n3*n8)*j[p4, 0, 1 + n2, 1 + n3, 0, 
      0, n6, 0, -1 + n8, 0, 1, 1, 0, 0, 1])/((-12 + 5*d - 4*n2 - 2*n3 - 2*n6)*
     (-1 + n8)) - (2*n3*j[p4, 0, 1 + n2, 1 + n3, 0, 0, n6, 0, n8, 0, 1, 1, 
      -1, 0, 1])/(12 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   (n3*j[p4, 0, 1 + n2, 1 + n3, 0, 0, n6, 0, n8, 0, 1, 1, 0, 0, 1])/
    (12 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   ((-4 + d - 6*n2 + d*n2 - 2*n2^2 - 2*n6 - 2*n2*n6 + 2*n8 + 2*n2*n8)*
     j[p4, 0, 2 + n2, -1 + n3, 0, 0, n6, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/
    ((-12 + 5*d - 4*n2 - 2*n3 - 2*n6)*(-1 + n8)) + 
   ((-2 - 2*n2)*j[p4, 0, 2 + n2, -1 + n3, 0, 0, n6, 0, n8, 0, 0, 1, 0, 1, 1])/
    (12 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   ((4 - d + 6*n2 - d*n2 + 2*n2^2 + 2*n6 + 2*n2*n6 - 2*n8 - 2*n2*n8)*
     j[p4, 0, 2 + n2, n3, 0, 0, n6, -1, -1 + n8, 0, 1, 1, 0, 1, 1])/
    ((-12 + 5*d - 4*n2 - 2*n3 - 2*n6)*(-1 + n8)) + 
   ((1 + n2)*j[p4, 0, 2 + n2, n3, 0, 0, n6, -1, n8, 0, 0, 1, 0, 1, 1])/
    (12 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   ((2 + 2*n2)*j[p4, 0, 2 + n2, n3, 0, 0, n6, -1, n8, 0, 1, 1, 0, 0, 1])/
    (12 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   ((-2 - 2*n2)*j[p4, 0, 2 + n2, n3, 0, 0, n6, -1, n8, 0, 1, 1, 0, 1, 1])/
    (12 - 5*d + 4*n2 + 2*n3 + 2*n6) + 
   ((4 - d + 6*n2 - d*n2 + 2*n2^2 + 2*n6 + 2*n2*n6 - 2*n8 - 2*n2*n8)*
     j[p4, 0, 2 + n2, n3, 0, 0, n6, 0, -2 + n8, 0, 1, 1, 0, 1, 1])/
    ((-12 + 5*d - 4*n2 - 2*n3 - 2*n6)*(-1 + n8)) + 
   ((-4 + d - 6*n2 + d*n2 - 2*n2^2 - 2*n6 - 2*n2*n6 + 2*n8 + 2*n2*n8)*
     j[p4, 0, 2 + n2, n3, 0, 0, n6, 0, -1 + n8, 0, 1, 1, -1, 1, 1])/
    ((-12 + 5*d - 4*n2 - 2*n3 - 2*n6)*(-1 + n8)) + 
   ((6 - 2*d + 10*n2 - 2*d*n2 + 4*n2^2 + 4*n6 + 4*n2*n6 - 2*n8 - 2*n2*n8)*
     j[p4, 0, 2 + n2, n3, 0, 0, n6, 0, -1 + n8, 0, 1, 1, 0, 0, 1])/
    ((-12 + 5*d - 4*n2 - 2*n3 - 2*n6)*(-1 + n8)) + 
   ((2 + 2*n2)*j[p4, 0, 2 + n2, n3, 0, 0, n6, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (12 - 5*d + 4*n2 + 2*n3 + 2*n6), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n13 == 1 && n2 == 0 && n4 == 0 && 
    n5 == 0 && n7 == 0 && n8 == 1 && n9 == 0 && n14 != 1 -> 
  ((-2*n6 + d*n6 - 2*n6^2)*j[p4, 0, 0, n3, 0, 0, 1 + n6, 0, 1, 0, 1, n11, 0, 
     1, -1 + n14])/((d - 2*n14)*(-1 + n14)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n4 == 0 && 
    n5 == 0 && n7 == 0 && n8 == 1 && n9 == 0 &&  !(n2 == 0 || n6 == 1) -> 
  ((-2 + d - 2*n1 - 2*n2 - 2*n6)*j[p4, -1 + n1, 1 + n2, n3, 0, 0, n6, 0, 0, 
      0, 2, 1, 0, 1, 1])/((-5 + 3*d - n2 - 3*n3 - 2*n6)*
     (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6)) + 
   (2*j[p4, -1 + n1, 1 + n2, n3, 0, 0, n6, 0, 1, 0, 0, 2, 0, 1, 1])/
    (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6) + 
   ((46 - 44*d + 10*d^2 + 18*n1 - 9*d*n1 + 2*n1^2 + 36*n2 - 18*d*n2 + 
      6*n1*n2 + 6*n2^2 + 24*n3 - 9*d*n3 + 6*n1*n3 + 12*n2*n3 + 32*n6 - 
      14*d*n6 + 6*n1*n6 + 12*n2*n6 + 6*n3*n6 + 4*n6^2)*
     j[p4, -1 + n1, 1 + n2, n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-5 + 3*d - n2 - 3*n3 - 2*n6)*(-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6)) + 
   ((-2 + d - 2*n1 - 2*n2 - 2*n6)*j[p4, -1 + n1, 1 + n2, n3, 0, 0, n6, 0, 1, 
      0, 2, 1, 0, 0, 1])/((-5 + 3*d - n2 - 3*n3 - 2*n6)*
     (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6)) + 
   ((2*n3 - 3*d*n3 + d^2*n3 + 2*n1*n3 - 2*d*n1*n3 + 2*n2*n3 - 2*d*n2*n3 + 
      4*n3*n6 - 3*d*n3*n6 + 2*n1*n3*n6 + 2*n2*n3*n6 + 2*n3*n6^2)*
     j[p4, -1 + n1, 1 + n2, 1 + n3, 0, 0, -1 + n6, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-1 + n6)*(12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6)*
     (5 - 3*d + n2 + 3*n3 + 2*n6)) + 
   (n3*j[p4, -1 + n1, 1 + n2, 1 + n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 0, 1])/
    (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6) + 
   ((8 - 5*d - 2*n1 + 8*n2 - 5*d*n2 - 2*n1*n2 + 6*n3 + 6*n2*n3 + 2*n6 + 
      2*n2*n6)*j[p4, -1 + n1, 2 + n2, -1 + n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 1, 
      1])/((12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6)*(5 - 3*d + n2 + 3*n3 + 
      2*n6)) + ((-2 + 3*d - d^2 - 2*n1 + 2*d*n1 - 4*n2 + 5*d*n2 - d^2*n2 - 
      2*n1*n2 + 2*d*n1*n2 - 2*n2^2 + 2*d*n2^2 - 4*n6 + 3*d*n6 - 2*n1*n6 - 
      6*n2*n6 + 3*d*n2*n6 - 2*n1*n2*n6 - 2*n2^2*n6 - 2*n6^2 - 2*n2*n6^2)*
     j[p4, -1 + n1, 2 + n2, n3, 0, 0, -1 + n6, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-1 + n6)*(12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6)*
     (5 - 3*d + n2 + 3*n3 + 2*n6)) + 
   ((-1 - n2)*j[p4, -1 + n1, 2 + n2, n3, 0, 0, n6, 0, 0, 0, 1, 1, 0, 1, 1])/
    (12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6) + 
   ((2 - d + 2*n1 + 2*n2 + 2*n6)*j[p4, n1, n2, n3, 0, 0, n6, 0, 0, 0, 2, 1, 
      0, 1, 1])/((-5 + 3*d - n2 - 3*n3 - 2*n6)*(-12 + 5*d - 2*n1 - 4*n2 - 
      2*n3 - 2*n6)) + j[p4, n1, n2, n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 0, 2]/
    (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6) + 
   ((-3 + 2*d + 2*n1 + n2 - 3*n3)*j[p4, n1, n2, n3, 0, 0, n6, 0, 1, 0, 2, 0, 
      0, 1, 1])/((-5 + 3*d - n2 - 3*n3 - 2*n6)*(-12 + 5*d - 2*n1 - 4*n2 - 
      2*n3 - 2*n6)) + ((2 - d + 2*n1 + 2*n2 + 2*n6)*
     j[p4, n1, n2, n3, 0, 0, n6, 0, 1, 0, 2, 1, 0, 0, 1])/
    ((-5 + 3*d - n2 - 3*n3 - 2*n6)*(-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6)) + 
   j[p4, n1, n2, n3, 0, 0, n6, 0, 2, 0, 1, 0, 0, 1, 1]/
    (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6) + 
   j[p4, n1, n2, n3, 0, 0, n6, 0, 2, 0, 1, 1, 0, 0, 1]/
    (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6) - 
   (n6*j[p4, n1, n2, n3, 0, 0, 1 + n6, 0, 1, 0, 0, 1, 0, 1, 1])/
    (12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6) + 
   (n3*j[p4, n1, n2, 1 + n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 0, 1])/
    (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6) + 
   ((3 - 2*d - 2*n1 - n2 + 3*n3)*j[p4, n1, 1 + n2, -1 + n3, 0, 0, n6, 0, 0, 
      0, 1, 1, 0, 1, 2])/((-5 + 3*d - n2 - 3*n3 - 2*n6)*
     (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6)) + 
   ((-2 + d - 2*n1 - 2*n2 - 2*n6)*j[p4, n1, 1 + n2, -1 + n3, 0, 0, n6, 0, 1, 
      0, 1, 1, 0, 0, 2])/((-5 + 3*d - n2 - 3*n3 - 2*n6)*
     (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6)) + 
   ((2 - d + 12*n1 - 6*d*n1 + 4*n2 - d*n2 + 4*n1*n2 + 2*n2^2 - 2*n3 + d*n3 + 
      4*n1*n3 - 2*n2*n3 + 2*n6 + 4*n1*n6 + 2*n2*n6 - 2*n3*n6)*
     j[p4, n1, 1 + n2, -1 + n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-5 + 3*d - n2 - 3*n3 - 2*n6)*(-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6)) + 
   ((-3 + 2*d + 2*n1 + n2 - 3*n3)*j[p4, n1, 1 + n2, -1 + n3, 0, 0, n6, 0, 1, 
      0, 2, 0, 0, 1, 1])/((-5 + 3*d - n2 - 3*n3 - 2*n6)*
     (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6)) + 
   ((-3 + 2*d + 2*n1 + n2 - 3*n3)*j[p4, n1, 1 + n2, n3, -1, 0, n6, 0, 0, 0, 
      1, 1, 0, 1, 2])/((-5 + 3*d - n2 - 3*n3 - 2*n6)*
     (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6)) + 
   ((-3 + 2*d + 2*n1 + n2 - 3*n3)*j[p4, n1, 1 + n2, n3, -1, 0, n6, 0, 1, 0, 
      1, 1, 0, 0, 2])/((-5 + 3*d - n2 - 3*n3 - 2*n6)*
     (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6)) + 
   ((-3*n6 + 2*d*n6 + 2*n1*n6 + n2*n6 - 3*n3*n6)*j[p4, n1, 1 + n2, n3, -1, 0, 
      1 + n6, 0, 1, 0, 0, 1, 0, 1, 1])/((12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 
      2*n6)*(5 - 3*d + n2 + 3*n3 + 2*n6)) - 
   j[p4, n1, 1 + n2, n3, 0, -1, n6, 0, 0, 0, 1, 1, 0, 1, 2]/
    (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6) - 
   j[p4, n1, 1 + n2, n3, 0, -1, n6, 0, 1, 0, 1, 1, 0, 0, 2]/
    (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6) + 
   (n6*j[p4, n1, 1 + n2, n3, 0, -1, 1 + n6, 0, 1, 0, 0, 1, 0, 1, 1])/
    (12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6) - 
   j[p4, n1, 1 + n2, n3, 0, 0, -1 + n6, 0, 1, 0, 1, 1, 0, 0, 2]/
    (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6) + 
   ((8 - 11*d + 3*d^2 + 2*n1 - 2*d*n1 + 4*n2 - 4*d*n2 + 10*n6 - 5*d*n6 + 
      2*n1*n6 + 4*n2*n6 + 2*n6^2)*j[p4, n1, 1 + n2, n3, 0, 0, -1 + n6, 0, 1, 
      0, 1, 1, 0, 1, 1])/((-1 + n6)*(12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6)) - 
   (2*j[p4, n1, 1 + n2, n3, 0, 0, n6, -1, 0, 0, 1, 2, 0, 1, 1])/
    (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6) + 
   ((3 - 2*d - 2*n1 - n2 + 3*n3)*j[p4, n1, 1 + n2, n3, 0, 0, n6, -1, 0, 0, 2, 
      1, 0, 1, 1])/((-5 + 3*d - n2 - 3*n3 - 2*n6)*(-12 + 5*d - 2*n1 - 4*n2 - 
      2*n3 - 2*n6)) - j[p4, n1, 1 + n2, n3, 0, 0, n6, -1, 1, 0, 1, 1, 0, 0, 
     2]/(-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6) + 
   ((3 - 2*d - 2*n1 - n2 + 3*n3)*j[p4, n1, 1 + n2, n3, 0, 0, n6, -1, 1, 0, 2, 
      0, 0, 1, 1])/((-5 + 3*d - n2 - 3*n3 - 2*n6)*(-12 + 5*d - 2*n1 - 4*n2 - 
      2*n3 - 2*n6)) + ((3 - 2*d - 2*n1 - n2 + 3*n3)*
     j[p4, n1, 1 + n2, n3, 0, 0, n6, -1, 1, 0, 2, 1, 0, 0, 1])/
    ((-5 + 3*d - n2 - 3*n3 - 2*n6)*(-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6)) - 
   j[p4, n1, 1 + n2, n3, 0, 0, n6, -1, 2, 0, 1, 0, 0, 1, 1]/
    (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6) - 
   j[p4, n1, 1 + n2, n3, 0, 0, n6, -1, 2, 0, 1, 1, 0, 0, 1]/
    (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6) + 
   ((13 - 21*d + 8*d^2 + 3*n1 - d*n1 + 13*n2 - 8*d*n2 + 3*n1*n2 + 4*n2^2 + 
      16*n3 - 14*d*n3 - 5*n1*n3 + n2*n3 + 9*n3^2 + 11*n6 - 8*d*n6 + 4*n1*n6 + 
      9*n2*n6 + n3*n6 + 4*n6^2)*j[p4, n1, 1 + n2, n3, 0, 0, n6, 0, 0, 0, 1, 
      1, 0, 1, 1])/((-5 + 3*d - n2 - 3*n3 - 2*n6)*(-12 + 5*d - 2*n1 - 4*n2 - 
      2*n3 - 2*n6)) + ((2 - d + 2*n1 + 2*n2 + 2*n6)*
     j[p4, n1, 1 + n2, n3, 0, 0, n6, 0, 0, 0, 1, 2, -1, 1, 1])/
    ((-5 + 3*d - n2 - 3*n3 - 2*n6)*(-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6)) + 
   ((-2 + d - 2*n1 - 2*n2 - 2*n6)*j[p4, n1, 1 + n2, n3, 0, 0, n6, 0, 0, 0, 1, 
      2, 0, 1, 1])/((-5 + 3*d - n2 - 3*n3 - 2*n6)*(-12 + 5*d - 2*n1 - 4*n2 - 
      2*n3 - 2*n6)) + j[p4, n1, 1 + n2, n3, 0, 0, n6, 0, 1, -1, 1, 1, 0, 0, 
     2]/(-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6) + 
   ((10 - 8*d + d^2 - 5*n1 + d*n1 - 3*n2 + d*n2 - n1*n2 - n2^2 + 3*n3 + 
      2*d*n3 - n1*n3 - 2*n2*n3 - 3*n3^2 + 6*n6 - 3*d*n6 + 2*n6^2)*
     j[p4, n1, 1 + n2, n3, 0, 0, n6, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((-5 + 3*d - n2 - 3*n3 - 2*n6)*(-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6)) + 
   j[p4, n1, 1 + n2, n3, 0, 0, n6, 0, 1, 0, 0, 2, -1, 1, 1]/
    (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6) - 
   j[p4, n1, 1 + n2, n3, 0, 0, n6, 0, 1, 0, 0, 2, 0, 1, 1]/
    (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6) + 
   ((-8 + 5*d + 7*n1 - 3*d*n1 + n1*n2 - 3*n3 - 2*d*n3 + n1*n3 - n2*n3 + 
      3*n3^2 - 2*n6 + 2*n1*n6)*j[p4, n1, 1 + n2, n3, 0, 0, n6, 0, 1, 0, 1, 0, 
      0, 1, 1])/((-5 + 3*d - n2 - 3*n3 - 2*n6)*(-12 + 5*d - 2*n1 - 4*n2 - 
      2*n3 - 2*n6)) + j[p4, n1, 1 + n2, n3, 0, 0, n6, 0, 1, 0, 1, 1, -1, 0, 
     2]/(-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6) + 
   ((30 - 31*d + 8*d^2 + 12*n1 - 5*d*n1 + 2*n1^2 + 18*n2 - 8*d*n2 + 6*n1*n2 + 
      4*n2^2 + 17*n3 - 9*d*n3 + n2*n3 + 3*n3^2 + 22*n6 - 10*d*n6 + 6*n1*n6 + 
      8*n2*n6 + 2*n3*n6 + 4*n6^2)*j[p4, n1, 1 + n2, n3, 0, 0, n6, 0, 1, 0, 1, 
      1, 0, 0, 1])/((-5 + 3*d - n2 - 3*n3 - 2*n6)*(-12 + 5*d - 2*n1 - 4*n2 - 
      2*n3 - 2*n6)) - j[p4, n1, 1 + n2, n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 0, 2]/
    (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6) + 
   ((34 - 34*d + 8*d^2 + 4*n1 - 4*d*n1 + 20*n2 - 12*d*n2 + 2*n2^2 + 22*n3 - 
      8*d*n3 + 4*n1*n3 + 10*n2*n3 + 20*n6 - 10*d*n6 + 4*n1*n6 + 8*n2*n6 + 
      4*n3*n6 + 4*n6^2)*j[p4, n1, 1 + n2, n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 1, 
      0])/((-5 + 3*d - n2 - 3*n3 - 2*n6)*(-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 
      2*n6)) + ((-36 + 35*d - 8*d^2 - 8*n1 + 5*d*n1 - 2*n1^2 - 24*n2 + 
      13*d*n2 - 4*n1*n2 - 4*n2^2 - 20*n3 + 7*d*n3 - 2*n1*n3 - 8*n2*n3 - 
      22*n6 + 10*d*n6 - 6*n1*n6 - 10*n2*n6 - 2*n3*n6 - 4*n6^2)*
     j[p4, n1, 1 + n2, n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-5 + 3*d - n2 - 3*n3 - 2*n6)*(-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6)) + 
   ((-3 + 2*d + 2*n1 + n2 - 3*n3)*j[p4, n1, 1 + n2, n3, 0, 0, n6, 0, 1, 0, 2, 
      0, -1, 1, 1])/((-5 + 3*d - n2 - 3*n3 - 2*n6)*(-12 + 5*d - 2*n1 - 4*n2 - 
      2*n3 - 2*n6)) + ((3 - 2*d - 2*n1 - n2 + 3*n3)*
     j[p4, n1, 1 + n2, n3, 0, 0, n6, 0, 1, 0, 2, 0, 0, 1, 1])/
    ((-5 + 3*d - n2 - 3*n3 - 2*n6)*(-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6)) + 
   ((3*n6 - 2*d*n6 - 2*n1*n6 - n2*n6 + 3*n3*n6)*j[p4, n1, 1 + n2, n3, 0, 0, 
      1 + n6, 0, 0, -1, 1, 1, 0, 1, 1])/
    ((12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6)*(5 - 3*d + n2 + 3*n3 + 2*n6)) + 
   ((-2*n3 + 3*d*n3 - d^2*n3 - 2*n1*n3 + 2*d*n1*n3 - 2*n2*n3 + 2*d*n2*n3 - 
      4*n3*n6 + 3*d*n3*n6 - 2*n1*n3*n6 - 2*n2*n3*n6 - 2*n3*n6^2)*
     j[p4, n1, 1 + n2, 1 + n3, 0, 0, -1 + n6, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-1 + n6)*(12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6)*
     (5 - 3*d + n2 + 3*n3 + 2*n6)) + 
   ((2*n3 - 3*d*n3 + d^2*n3 + 2*n1*n3 - 2*d*n1*n3 + 2*n2*n3 - 2*d*n2*n3 + 
      4*n3*n6 - 3*d*n3*n6 + 2*n1*n3*n6 + 2*n2*n3*n6 + 2*n3*n6^2)*
     j[p4, n1, 1 + n2, 1 + n3, 0, 0, -1 + n6, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((-1 + n6)*(12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6)*
     (5 - 3*d + n2 + 3*n3 + 2*n6)) + 
   ((-2*n3 + 3*d*n3 - d^2*n3 - 2*n1*n3 + 2*d*n1*n3 - 2*n2*n3 + 2*d*n2*n3 - 
      4*n3*n6 + 3*d*n3*n6 - 2*n1*n3*n6 - 2*n2*n3*n6 - 2*n3*n6^2)*
     j[p4, n1, 1 + n2, 1 + n3, 0, 0, -1 + n6, 0, 1, 0, 1, 0, 0, 1, 1])/
    ((-1 + n6)*(12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6)*
     (5 - 3*d + n2 + 3*n3 + 2*n6)) + 
   ((2*n3 - 3*d*n3 + d^2*n3 + 2*n1*n3 - 2*d*n1*n3 + 2*n2*n3 - 2*d*n2*n3 + 
      4*n3*n6 - 3*d*n3*n6 + 2*n1*n3*n6 + 2*n2*n3*n6 + 2*n3*n6^2)*
     j[p4, n1, 1 + n2, 1 + n3, 0, 0, -1 + n6, 0, 1, 0, 1, 1, -1, 1, 1])/
    ((-1 + n6)*(12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6)*
     (5 - 3*d + n2 + 3*n3 + 2*n6)) + 
   ((-2*n3 + 3*d*n3 - d^2*n3 - 2*n1*n3 + 2*d*n1*n3 - 2*n2*n3 + 2*d*n2*n3 - 
      4*n3*n6 + 3*d*n3*n6 - 2*n1*n3*n6 - 2*n2*n3*n6 - 2*n3*n6^2)*
     j[p4, n1, 1 + n2, 1 + n3, 0, 0, -1 + n6, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((-1 + n6)*(12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6)*
     (5 - 3*d + n2 + 3*n3 + 2*n6)) + 
   ((-2*n3 + 3*d*n3 - d^2*n3 - 2*n1*n3 + 2*d*n1*n3 - 2*n2*n3 + 2*d*n2*n3 - 
      4*n3*n6 + 3*d*n3*n6 - 2*n1*n3*n6 - 2*n2*n3*n6 - 2*n3*n6^2)*
     j[p4, n1, 1 + n2, 1 + n3, 0, 0, -1 + n6, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-1 + n6)*(12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6)*
     (5 - 3*d + n2 + 3*n3 + 2*n6)) - 
   (3*n3*j[p4, n1, 1 + n2, 1 + n3, 0, 0, n6, -1, 0, 0, 1, 1, 0, 1, 1])/
    (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6) + 
   (n3*j[p4, n1, 1 + n2, 1 + n3, 0, 0, n6, -1, 1, 0, 0, 1, 0, 1, 1])/
    (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6) - 
   (n3*j[p4, n1, 1 + n2, 1 + n3, 0, 0, n6, -1, 1, 0, 1, 0, 0, 1, 1])/
    (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6) - 
   (3*n3*j[p4, n1, 1 + n2, 1 + n3, 0, 0, n6, -1, 1, 0, 1, 1, 0, 0, 1])/
    (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6) + 
   (2*n3*j[p4, n1, 1 + n2, 1 + n3, 0, 0, n6, 0, 1, 0, 1, 1, -1, 0, 1])/
    (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6) - 
   (n3*j[p4, n1, 1 + n2, 1 + n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 0, 1])/
    (-12 + 5*d - 2*n1 - 4*n2 - 2*n3 - 2*n6) + 
   ((-3 + 2*d + 2*n1 - 2*n2 + 2*d*n2 + 2*n1*n2 + n2^2 - 3*n3 - 3*n2*n3)*
     j[p4, n1, 2 + n2, -1 + n3, 0, 0, n6, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6)*(5 - 3*d + n2 + 3*n3 + 2*n6)) + 
   ((-8 + 5*d + 2*n1 - 8*n2 + 5*d*n2 + 2*n1*n2 - 6*n3 - 6*n2*n3 - 2*n6 - 
      2*n2*n6)*j[p4, n1, 2 + n2, -1 + n3, 0, 0, n6, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6)*(5 - 3*d + n2 + 3*n3 + 2*n6)) + 
   ((2 - 3*d + d^2 + 2*n1 - 2*d*n1 + 4*n2 - 5*d*n2 + d^2*n2 + 2*n1*n2 - 
      2*d*n1*n2 + 2*n2^2 - 2*d*n2^2 + 4*n6 - 3*d*n6 + 2*n1*n6 + 6*n2*n6 - 
      3*d*n2*n6 + 2*n1*n2*n6 + 2*n2^2*n6 + 2*n6^2 + 2*n2*n6^2)*
     j[p4, n1, 2 + n2, n3, 0, 0, -1 + n6, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((-1 + n6)*(12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6)*
     (5 - 3*d + n2 + 3*n3 + 2*n6)) + 
   ((6 - 4*d - 4*n1 + 4*n2 - 4*d*n2 - 4*n1*n2 - 2*n2^2 + 6*n3 + 6*n2*n3)*
     j[p4, n1, 2 + n2, n3, 0, 0, n6, -1, 0, 0, 1, 1, 0, 1, 1])/
    ((12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6)*(5 - 3*d + n2 + 3*n3 + 2*n6)) + 
   ((1 + n2)*j[p4, n1, 2 + n2, n3, 0, 0, n6, -1, 1, 0, 0, 1, 0, 1, 1])/
    (12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6) + 
   ((6 - 4*d - 4*n1 + 4*n2 - 4*d*n2 - 4*n1*n2 - 2*n2^2 + 6*n3 + 6*n2*n3)*
     j[p4, n1, 2 + n2, n3, 0, 0, n6, -1, 1, 0, 1, 1, 0, 0, 1])/
    ((12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6)*(5 - 3*d + n2 + 3*n3 + 2*n6)) + 
   ((-8 + 5*d + 2*n1 - 8*n2 + 5*d*n2 + 2*n1*n2 - 6*n3 - 6*n2*n3 - 2*n6 - 
      2*n2*n6)*j[p4, n1, 2 + n2, n3, 0, 0, n6, -1, 1, 0, 1, 1, 0, 1, 1])/
    ((12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6)*(5 - 3*d + n2 + 3*n3 + 2*n6)) + 
   ((-3 + 2*d + 2*n1 - 2*n2 + 2*d*n2 + 2*n1*n2 + n2^2 - 3*n3 - 3*n2*n3)*
     j[p4, n1, 2 + n2, n3, 0, 0, n6, 0, 0, 0, 1, 1, -1, 1, 1])/
    ((12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6)*(5 - 3*d + n2 + 3*n3 + 2*n6)) + 
   ((8 - 5*d - 2*n1 + 8*n2 - 5*d*n2 - 2*n1*n2 + 6*n3 + 6*n2*n3 + 2*n6 + 
      2*n2*n6)*j[p4, n1, 2 + n2, n3, 0, 0, n6, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6)*(5 - 3*d + n2 + 3*n3 + 2*n6)) - 
   (n1*j[p4, 1 + n1, n2, n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 0, 1])/
    (12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6) + 
   (n1*j[p4, 1 + n1, 1 + n2, n3, 0, 0, n6, 0, 0, 0, 1, 1, 0, 1, 1])/
    (12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6) + 
   (n1*j[p4, 1 + n1, 1 + n2, n3, 0, 0, n6, 0, 1, 0, 0, 1, 0, 1, 1])/
    (12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6) - 
   (n1*j[p4, 1 + n1, 1 + n2, n3, 0, 0, n6, 0, 1, 0, 1, 0, 0, 1, 1])/
    (12 - 5*d + 2*n1 + 4*n2 + 2*n3 + 2*n6), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n2 == 0 && n4 == 0 && 
    n5 == 0 && n6 == 1 && n7 == 0 && n9 == 0 && n14 != 1 -> 
  ((-4 + d)*j[p4, 0, 0, n3, 0, 0, 2, 0, n8, 0, n10, 1, 0, 1, -1 + n14])/
   ((d - 2*n14)*(-1 + n14)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n4 == 0 && n6 == 1 && n7 == 0 && n9 == 0 &&  !(n10 == 1 || n5 == 0) -> 
  -j[p4, 0, -1, n3, 0, 1 + n5, 1, 0, n8, 0, n10, 1, 0, 0, 2]/
    (2*(-3 + d - n5)) + ((-4 + d - 2*n5)*j[p4, 0, -1, n3, 0, 1 + n5, 1, 0, 
      n8, 0, n10, 1, 0, 1, 1])/(2*(-3 + d - n5)) - 
   j[p4, 0, -1, n3, 0, 1 + n5, 2, 0, -1 + n8, 0, n10, 1, 0, 1, 1]/
    (2*(-3 + d - n5)) + ((-4 + d - 2*n5)*j[p4, 0, -1, n3, 0, 1 + n5, 2, 0, 
      n8, 0, -1 + n10, 1, 0, 1, 1])/(2*(-1 + n10)*(-3 + d - n5)) - 
   j[p4, 0, -1, n3, 0, 1 + n5, 2, 0, n8, 0, n10, 1, 0, 0, 1]/
    (2*(-3 + d - n5)) - j[p4, 0, -1, n3, 0, 1 + n5, 2, 0, n8, 0, n10, 1, 0, 
     1, 0]/(2*(-3 + d - n5)) + 
   ((-1 - n5)*j[p4, 0, -1, n3, 0, 2 + n5, 1, 0, n8, 0, n10, 1, 0, 0, 1])/
    (2*(3 - d + n5)) + ((1 + n5)*j[p4, 0, -1, n3, 0, 2 + n5, 1, 0, n8, 0, 
      n10, 1, 0, 1, 0])/(2*(3 - d + n5)) + 
   ((-4*n3 + d*n3 - 2*n3*n5)*j[p4, 0, -1, 1 + n3, 0, 1 + n5, 1, 0, n8, 0, 
      -1 + n10, 1, 0, 1, 1])/(2*(-1 + n10)*(-3 + d - n5)) - 
   j[p4, 0, 0, -1 + n3, 0, 1 + n5, 1, 0, n8, 0, n10, 1, 0, 0, 2]/
    (2*(-3 + d - n5)) - j[p4, 0, 0, -1 + n3, 0, 1 + n5, 2, 0, -1 + n8, 0, 
     n10, 1, 0, 1, 1]/(2*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, 0, -1 + n3, 0, 1 + n5, 2, 0, n8, 0, -1 + n10, 1, 
      0, 1, 1])/(2*(-1 + n10)*(-3 + d - n5)) + 
   j[p4, 0, 0, n3, 0, n5, 0, 0, n8, 0, n10, 1, 0, 1, 2]/(2*(-3 + d - n5)) + 
   j[p4, 0, 0, n3, 0, n5, 1, 0, n8, 0, n10, 1, 0, 0, 2]/(2*(-3 + d - n5)) + 
   j[p4, 0, 0, n3, 0, n5, 2, 0, n8, 0, n10, 1, 0, 0, 1]/(2*(-3 + d - n5)) + 
   j[p4, 0, 0, n3, 0, n5, 2, 0, n8, 0, n10, 1, 0, 1, 0]/(2*(-3 + d - n5)) - 
   (n5*j[p4, 0, 0, n3, 0, 1 + n5, 0, 0, n8, 0, n10, 1, 0, 1, 1])/
    (2*(3 - d + n5)) + j[p4, 0, 0, n3, 0, 1 + n5, 1, -1, n8, 0, n10, 1, 0, 0, 
     2]/(2*(-3 + d - n5)) + j[p4, 0, 0, n3, 0, 1 + n5, 1, 0, -1 + n8, 0, n10, 
     1, 0, 0, 2]/(2*(-3 + d - n5)) + 
   ((4 - d + n5)*j[p4, 0, 0, n3, 0, 1 + n5, 1, 0, -1 + n8, 0, n10, 1, 0, 1, 
      1])/(2*(-3 + d - n5)) + ((4*d - d^2 - 4*n10 + d*n10 - 8*n3 + 2*d*n3 + 
      2*d*n5 - 2*n10*n5 - 4*n3*n5)*j[p4, 0, 0, n3, 0, 1 + n5, 1, 0, n8, 0, 
      -1 + n10, 1, 0, 1, 1])/(2*(-1 + n10)*(-3 + d - n5)) - 
   j[p4, 0, 0, n3, 0, 1 + n5, 1, 0, n8, 0, n10, 1, -1, 0, 2]/
    (2*(-3 + d - n5)) + ((4 - d + n5)*j[p4, 0, 0, n3, 0, 1 + n5, 1, 0, n8, 0, 
      n10, 1, 0, 0, 1])/(2*(-3 + d - n5)) - 
   (n5*j[p4, 0, 0, n3, 0, 1 + n5, 1, 0, n8, 0, n10, 1, 0, 1, 0])/
    (2*(3 - d + n5)) + ((4 - d + 2*n5)*j[p4, 0, 0, n3, 0, 1 + n5, 1, 0, n8, 
      0, n10, 1, 0, 1, 1])/(2*(-3 + d - n5)) + 
   j[p4, 0, 0, n3, 0, 1 + n5, 2, -1, -1 + n8, 0, n10, 1, 0, 1, 1]/
    (2*(-3 + d - n5)) + ((4 - d + 2*n5)*j[p4, 0, 0, n3, 0, 1 + n5, 2, -1, n8, 
      0, -1 + n10, 1, 0, 1, 1])/(2*(-1 + n10)*(-3 + d - n5)) + 
   j[p4, 0, 0, n3, 0, 1 + n5, 2, 0, -2 + n8, 0, n10, 1, 0, 1, 1]/
    (2*(-3 + d - n5)) + ((4 - d + 2*n5)*j[p4, 0, 0, n3, 0, 1 + n5, 2, 0, 
      -1 + n8, 0, -1 + n10, 1, 0, 1, 1])/(2*(-1 + n10)*(-3 + d - n5)) - 
   j[p4, 0, 0, n3, 0, 1 + n5, 2, 0, -1 + n8, 0, n10, 1, -1, 1, 1]/
    (2*(-3 + d - n5)) + j[p4, 0, 0, n3, 0, 1 + n5, 2, 0, -1 + n8, 0, n10, 1, 
     0, 0, 1]/(2*(-3 + d - n5)) + j[p4, 0, 0, n3, 0, 1 + n5, 2, 0, -1 + n8, 
     0, n10, 1, 0, 1, 0]/(2*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, 0, n3, 0, 1 + n5, 2, 0, n8, 0, -1 + n10, 1, -1, 
      1, 1])/(2*(-1 + n10)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, 0, n3, 0, 1 + n5, 2, 0, n8, 0, -1 + n10, 1, 0, 0, 
      1])/(2*(-1 + n10)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, 0, n3, 0, 1 + n5, 2, 0, n8, 0, -1 + n10, 1, 0, 1, 
      0])/(2*(-1 + n10)*(-3 + d - n5)) + 
   ((1 + n5)*j[p4, 0, 0, n3, 0, 2 + n5, 1, 0, -1 + n8, 0, n10, 1, 0, 0, 1])/
    (2*(3 - d + n5)) + ((-1 - n5)*j[p4, 0, 0, n3, 0, 2 + n5, 1, 0, -1 + n8, 
      0, n10, 1, 0, 1, 0])/(2*(3 - d + n5)) + 
   ((4*n3 - d*n3 + 2*n3*n5)*j[p4, 0, 0, 1 + n3, 0, 1 + n5, 1, -1, n8, 0, 
      -1 + n10, 1, 0, 1, 1])/(2*(-1 + n10)*(-3 + d - n5)) + 
   ((4*n3 - d*n3 + 2*n3*n5)*j[p4, 0, 0, 1 + n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 
      -1 + n10, 1, 0, 1, 1])/((-1 + n10)*(-3 + d - n5)) + 
   ((-4*n3 + d*n3 - 2*n3*n5)*j[p4, 0, 0, 1 + n3, 0, 1 + n5, 1, 0, n8, 0, 
      -1 + n10, 1, -1, 1, 1])/(2*(-1 + n10)*(-3 + d - n5)) + 
   ((4*n3 - d*n3 + 2*n3*n5)*j[p4, 0, 0, 1 + n3, 0, 1 + n5, 1, 0, n8, 0, 
      -1 + n10, 1, 0, 0, 1])/(2*(-1 + n10)*(-3 + d - n5)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n4 == 0 && n6 == 1 && n7 == -1 && n9 == 0 &&  !(n5 == 0 || n8 == 1) -> 
  ((-4 + d - 2*n5)*j[p4, -1, -1 + n2, n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, 0, 1, 
      1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, -1, n2, -1 + n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, 0, 
      1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, -1, n2, n3, 0, 1 + n5, 1, -1, n8, 0, 0, 2, 0, 1, 1])/
    ((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-40 + 54*d - 11*d^2 - 8*n2 + 2*d*n2 - 24*n3 + 6*d*n3 - 44*n5 + 28*d*n5 - 
      4*n2*n5 - 12*n3*n5 - 12*n5^2 - 32*n8 + 8*d*n8 - 16*n5*n8)*
     j[p4, -1, n2, n3, 0, 1 + n5, 1, -1, n8, 0, 1, 1, 0, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, -1, n2, n3, 0, 1 + n5, 1, -1, n8, 0, 2, 1, 0, 0, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4*n8 + d*n8 - 2*n5*n8)*j[p4, -1, n2, n3, 0, 1 + n5, 1, -1, 1 + n8, 0, 
      1, 1, 0, 0, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, -1, n2, n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 1, 1, 0, 1, 
      1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, -1, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, 0, 0, 1])/
    ((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-12 + 3*d - 18*n5 + 3*d*n5 - 6*n5^2)*j[p4, -1, n2, n3, 0, 2 + n5, 1, -1, 
      n8, 0, 1, 1, 0, 0, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((12 - 3*d + 18*n5 - 3*d*n5 + 6*n5^2)*j[p4, -1, n2, n3, 0, 2 + n5, 1, -1, 
      n8, 0, 1, 1, 0, 1, 0])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-8*n3 + 2*d*n3 - 4*n3*n5)*j[p4, -1, n2, 1 + n3, 0, 1 + n5, 1, -1, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4*n3 + d*n3 - 2*n3*n5)*j[p4, -1, n2, 1 + n3, 0, 1 + n5, 1, -1, n8, 0, 
      1, 1, 0, 0, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((8*n2 - 2*d*n2 + 4*n2*n5)*j[p4, -1, 1 + n2, -1 + n3, 0, 1 + n5, 1, -1, 
      n8, 0, 1, 1, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-8*n2 + 2*d*n2 - 4*n2*n5)*j[p4, -1, 1 + n2, n3, 0, 1 + n5, 1, -2, n8, 0, 
      1, 1, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4*n2 + d*n2 - 2*n2*n5)*j[p4, -1, 1 + n2, n3, 0, 1 + n5, 1, -1, -1 + n8, 
      0, 1, 1, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((8*n2 - 2*d*n2 + 4*n2*n5)*j[p4, -1, 1 + n2, n3, 0, 1 + n5, 1, -1, n8, 0, 
      1, 1, -1, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-12*n2 + 3*d*n2 - 6*n2*n5)*j[p4, -1, 1 + n2, n3, 0, 1 + n5, 1, -1, n8, 
      0, 1, 1, 0, 0, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) - 
   j[p4, 0, -1 + n2, n3, 0, 1 + n5, 1, -1, n8, 0, 1, 1, 0, 0, 2]/
    (2*(-3 + d - n5)) + ((24 - 18*d + 3*d^2 + 8*n3 - 2*d*n3 + 20*n5 - 
      8*d*n5 + 4*n3*n5 + 4*n5^2)*j[p4, 0, -1 + n2, n3, 0, 1 + n5, 1, -1, n8, 
      0, 1, 1, 0, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, -1 + n2, n3, 0, 1 + n5, 1, -1, n8, 0, 2, 0, 0, 
      1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, -1 + n2, n3, 0, 1 + n5, 1, -1, n8, 0, 2, 1, 0, 
      0, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4*n8 - d*n8 + 2*n5*n8)*j[p4, 0, -1 + n2, n3, 0, 1 + n5, 1, -1, 1 + n8, 
      0, 1, 0, 0, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4*n8 - d*n8 + 2*n5*n8)*j[p4, 0, -1 + n2, n3, 0, 1 + n5, 1, -1, 1 + n8, 
      0, 1, 1, 0, 0, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, -1 + n2, n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 1, 1, 
      0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, -1 + n2, n3, 0, 1 + n5, 1, 0, n8, 0, 0, 1, 0, 1, 
      1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, -1 + n2, n3, 0, 1 + n5, 1, 0, n8, 0, 1, 0, 0, 1, 
      1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, -1 + n2, n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, -1, 
      1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, -1 + n2, n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, 0, 0, 
      1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, -1 + n2, n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, 0, 1, 
      1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-1 - n2 + n3 - n5)*j[p4, 0, -1 + n2, n3, 0, 1 + n5, 2, -1, -1 + n8, 0, 
      1, 1, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, -1 + n2, n3, 0, 1 + n5, 2, -1, n8, 0, 0, 1, 0, 
      1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) - 
   j[p4, 0, -1 + n2, n3, 0, 1 + n5, 2, -1, n8, 0, 1, 1, 0, 0, 1]/
    (2*(-3 + d - n5)) - j[p4, 0, -1 + n2, n3, 0, 1 + n5, 2, -1, n8, 0, 1, 1, 
     0, 1, 0]/(2*(-3 + d - n5)) + 
   ((-1 - n5)*j[p4, 0, -1 + n2, n3, 0, 2 + n5, 1, -1, n8, 0, 1, 1, 0, 0, 1])/
    (2*(3 - d + n5)) + ((1 + n5)*j[p4, 0, -1 + n2, n3, 0, 2 + n5, 1, -1, n8, 
      0, 1, 1, 0, 1, 0])/(2*(3 - d + n5)) + 
   ((-4*n3 + d*n3 - 2*n3*n5)*j[p4, 0, -1 + n2, 1 + n3, 0, 1 + n5, 1, -1, n8, 
      0, 0, 1, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4*n3 - d*n3 + 2*n3*n5)*j[p4, 0, -1 + n2, 1 + n3, 0, 1 + n5, 1, -1, n8, 
      0, 1, 0, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4*n3 - d*n3 + 2*n3*n5)*j[p4, 0, -1 + n2, 1 + n3, 0, 1 + n5, 1, -1, n8, 
      0, 1, 1, 0, 0, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) - 
   j[p4, 0, n2, -1 + n3, 0, 1 + n5, 1, -1, n8, 0, 1, 1, 0, 0, 2]/
    (2*(-3 + d - n5)) + ((-16 + 16*d - 3*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 - 
      12*n5 + 7*d*n5 - 2*n2*n5 - 4*n3*n5 - 2*n5^2 - 4*n8 + d*n8 - 2*n5*n8)*
     j[p4, 0, n2, -1 + n3, 0, 1 + n5, 1, -1, n8, 0, 1, 1, 0, 1, 1])/
    ((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, -1 + n3, 0, 1 + n5, 1, -1, n8, 0, 2, 0, 0, 
      1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, -1 + n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 1, 1, 
      0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, -1 + n3, 0, 1 + n5, 1, 0, n8, 0, 0, 1, 0, 1, 
      1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, -1 + n3, 0, 1 + n5, 1, 0, n8, 0, 1, 0, 0, 1, 
      1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-1 - n2 + n3 - n5)*j[p4, 0, n2, -1 + n3, 0, 1 + n5, 2, -1, -1 + n8, 0, 
      1, 1, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, -1 + n3, 0, 1 + n5, 2, -1, n8, 0, 0, 1, 0, 
      1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, n3, -1, 1 + n5, 1, -1, n8, 0, 1, 1, 0, 1, 
      1])/(-2 + d + 2*n2 - 2*n3) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, n3, -1, 1 + n5, 2, -1, n8, 0, 0, 1, 0, 1, 
      1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, -1, 1 + n5, 2, -1, n8, 0, 1, 1, 0, 0, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, -1, 1 + n5, 2, -1, n8, 0, 1, 1, 0, 1, 0])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 6*n5 + d*n5 - 2*n5^2)*j[p4, 0, n2, n3, -1, 2 + n5, 1, -1, n8, 
      0, 1, 1, 0, 0, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 6*n5 - d*n5 + 2*n5^2)*j[p4, 0, n2, n3, -1, 2 + n5, 1, -1, n8, 0, 
      1, 1, 0, 1, 0])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   j[p4, 0, n2, n3, 0, n5, 0, -1, n8, 0, 1, 1, 0, 1, 2]/(2*(-3 + d - n5)) + 
   j[p4, 0, n2, n3, 0, n5, 1, -1, n8, 0, 1, 1, 0, 0, 2]/(2*(-3 + d - n5)) + 
   j[p4, 0, n2, n3, 0, n5, 2, -1, n8, 0, 1, 1, 0, 0, 1]/(2*(-3 + d - n5)) + 
   j[p4, 0, n2, n3, 0, n5, 2, -1, n8, 0, 1, 1, 0, 1, 0]/(2*(-3 + d - n5)) - 
   (n5*j[p4, 0, n2, n3, 0, 1 + n5, 0, -1, n8, 0, 1, 1, 0, 1, 1])/
    (2*(3 - d + n5)) + j[p4, 0, n2, n3, 0, 1 + n5, 1, -2, n8, 0, 1, 1, 0, 0, 
     2]/(2*(-3 + d - n5)) + ((4 - d + 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, 
      -2, n8, 0, 2, 0, 0, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, -2, n8, 0, 2, 1, 0, 0, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4*n8 + d*n8 - 2*n5*n8)*j[p4, 0, n2, n3, 0, 1 + n5, 1, -2, 1 + n8, 0, 1, 
      0, 0, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4*n8 + d*n8 - 2*n5*n8)*j[p4, 0, n2, n3, 0, 1 + n5, 1, -2, 1 + n8, 0, 1, 
      1, 0, 0, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, -1, -1 + n8, 0, 0, 2, 0, 
      1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   j[p4, 0, n2, n3, 0, 1 + n5, 1, -1, -1 + n8, 0, 1, 1, 0, 0, 2]/
    (2*(-3 + d - n5)) + ((-8 + 74*d - 38*d^2 + 5*d^3 - 64*n3 + 60*d*n3 - 
      11*d^2*n3 - 24*n3^2 + 6*d*n3^2 - 18*n5 + 60*d*n5 - 15*d^2*n5 + 
      2*n2*n5 - 58*n3*n5 + 28*d*n3*n5 - 12*n3^2*n5 - 6*n5^2 + 10*d*n5^2 - 
      12*n3*n5^2 - 72*n8 + 30*d*n8 - 3*d^2*n8 - 32*n3*n8 + 8*d*n3*n8 - 
      46*n5*n8 + 8*d*n5*n8 - 2*n2*n5*n8 - 14*n3*n5*n8 - 6*n5^2*n8 + 8*n8^2 - 
      2*d*n8^2 + 4*n5*n8^2)*j[p4, 0, n2, n3, 0, 1 + n5, 1, -1, -1 + n8, 0, 1, 
      1, 0, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)*(-1 + n8)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, -1, -1 + n8, 0, 2, 0, 0, 1, 
      1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4*n2 + d*n2 - 8*n3 + 2*d*n3 - 2*n2*n5 - 4*n3*n5)*
     j[p4, 0, n2, n3, 0, 1 + n5, 1, -1, n8, 0, 0, 1, 0, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, -1, n8, 0, 0, 2, -1, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, -1, n8, 0, 0, 2, 0, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4*n3 - d*n3 + 2*n3*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, -1, n8, 0, 1, 0, 
      0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) - 
   j[p4, 0, n2, n3, 0, 1 + n5, 1, -1, n8, 0, 1, 1, -1, 0, 2]/
    (2*(-3 + d - n5)) + ((-16 + 24*d - 5*d^2 - 16*n3 + 4*d*n3 - 6*n5 + 
      9*d*n5 - 2*n2*n5 - 6*n3*n5 - 24*n8 + 6*d*n8 - 12*n5*n8)*
     j[p4, 0, n2, n3, 0, 1 + n5, 1, -1, n8, 0, 1, 1, 0, 0, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-8 + 2*d - 6*n5 + d*n5 + 2*n2*n5 - 2*n3*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 
      1, -1, n8, 0, 1, 1, 0, 1, 0])/(2*(-2 + d + 2*n2 - 2*n3)*
     (-3 + d - n5)) + ((8 - 22*d + 5*d^2 + 8*n2 - 2*d*n2 + 8*n3 - 2*d*n3 + 
      12*n5 - 12*d*n5 + 4*n2*n5 + 4*n3*n5 + 4*n5^2 + 24*n8 - 6*d*n8 + 
      12*n5*n8)*j[p4, 0, n2, n3, 0, 1 + n5, 1, -1, n8, 0, 1, 1, 0, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, -1, n8, 0, 2, 0, -1, 1, 
      1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, -1, n8, 0, 2, 0, 0, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4*n8 - d*n8 + 2*n5*n8)*j[p4, 0, n2, n3, 0, 1 + n5, 1, -1, 1 + n8, 0, 1, 
      0, -1, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, 0, -2 + n8, 0, 1, 1, 0, 1, 
      1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 1, 1, -1, 1, 
      1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-12 + 3*d - 6*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 1, 1, 0, 
      0, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 1, 1, 0, 1, 
      1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 0, 1, -1, 1, 1])/
    ((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 1, 0, -1, 1, 1])/
    ((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((1 + n2 - n3 + n5)*j[p4, 0, n2, n3, 0, 1 + n5, 2, -2, -1 + n8, 0, 1, 1, 
      0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 2, -2, n8, 0, 0, 1, 0, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((1 + n2 - n3 + n5)*j[p4, 0, n2, n3, 0, 1 + n5, 2, -1, -2 + n8, 0, 1, 1, 
      0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 2, -1, -1 + n8, -1, 1, 1, 0, 
      1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-1 - n2 + n3 - n5)*j[p4, 0, n2, n3, 0, 1 + n5, 2, -1, -1 + n8, 0, 1, 1, 
      -1, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   j[p4, 0, n2, n3, 0, 1 + n5, 2, -1, -1 + n8, 0, 1, 1, 0, 0, 1]/
    (2*(-3 + d - n5)) + j[p4, 0, n2, n3, 0, 1 + n5, 2, -1, -1 + n8, 0, 1, 1, 
     0, 1, 0]/(2*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 2, -1, n8, -1, 1, 1, 0, 0, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 2, -1, n8, -1, 1, 1, 0, 1, 0])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 2, -1, n8, 0, 0, 1, -1, 1, 
      1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 6*n5 - d*n5 + 2*n5^2)*j[p4, 0, n2, n3, 0, 2 + n5, 1, -2, n8, 0, 
      1, 1, 0, 0, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 6*n5 + d*n5 - 2*n5^2)*j[p4, 0, n2, n3, 0, 2 + n5, 1, -2, n8, 0, 
      1, 1, 0, 1, 0])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-14 + 24*d - 5*d^2 + 2*n2 - 26*n3 + 6*d*n3 - 20*n5 + 34*d*n5 - 
      5*d^2*n5 + 2*n2*n5 - 38*n3*n5 + 6*d*n3*n5 - 6*n5^2 + 10*d*n5^2 - 
      12*n3*n5^2 - 10*n8 + 2*d*n8 - 2*n2*n8 + 2*n3*n8 - 16*n5*n8 + 
      2*d*n5*n8 - 2*n2*n5*n8 + 2*n3*n5*n8 - 6*n5^2*n8)*
     j[p4, 0, n2, n3, 0, 2 + n5, 1, -1, -1 + n8, 0, 1, 1, 0, 0, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)*(-1 + n8)) + 
   ((14 - 24*d + 5*d^2 - 2*n2 + 26*n3 - 6*d*n3 + 20*n5 - 34*d*n5 + 5*d^2*n5 - 
      2*n2*n5 + 38*n3*n5 - 6*d*n3*n5 + 6*n5^2 - 10*d*n5^2 + 12*n3*n5^2 + 
      10*n8 - 2*d*n8 + 2*n2*n8 - 2*n3*n8 + 16*n5*n8 - 2*d*n5*n8 + 
      2*n2*n5*n8 - 2*n3*n5*n8 + 6*n5^2*n8)*j[p4, 0, n2, n3, 0, 2 + n5, 1, -1, 
      -1 + n8, 0, 1, 1, 0, 1, 0])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)*
     (-1 + n8)) + ((-4 + d - 6*n5 + d*n5 - 2*n5^2)*
     j[p4, 0, n2, n3, 0, 2 + n5, 1, -1, n8, -1, 1, 1, 0, 0, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 6*n5 - d*n5 + 2*n5^2)*j[p4, 0, n2, n3, 0, 2 + n5, 1, -1, n8, -1, 
      1, 1, 0, 1, 0])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-8*n3 - 18*d*n3 + 5*d^2*n3 + 24*n3^2 - 6*d*n3^2 - 4*n3*n5 - 10*d*n3*n5 + 
      12*n3^2*n5 + 32*n3*n8 - 8*d*n3*n8 + 16*n3*n5*n8)*
     j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, -2, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)*(-1 + n8)) + 
   ((4*n3 - d*n3 + 2*n3*n5)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, -2, n8, 0, 0, 
      1, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4*n3 + d*n3 - 2*n3*n5)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, -2, n8, 0, 1, 
      0, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4*n3 + d*n3 - 2*n3*n5)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, -2, n8, 0, 1, 
      1, 0, 0, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((8*n3 - 2*d*n3 + 4*n3*n5)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, -1, -2 + n8, 
      0, 1, 1, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-8*n3 + 2*d*n3 - 4*n3*n5)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, -1, 
      -1 + n8, 0, 1, 1, -1, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((20*d*n3 - 5*d^2*n3 - 24*n3^2 + 6*d*n3^2 + 10*d*n3*n5 - 12*n3^2*n5 - 
      24*n3*n8 + 6*d*n3*n8 - 12*n3*n5*n8)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, 
      -1, -1 + n8, 0, 1, 1, 0, 0, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)*
     (-1 + n8)) + ((8*n3 - 2*d*n3 + 4*n3*n5)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 
      1, -1, -1 + n8, 0, 1, 1, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*
     (-3 + d - n5)) + ((-4*n3 + d*n3 - 2*n3*n5)*j[p4, 0, n2, 1 + n3, 0, 
      1 + n5, 1, -1, n8, 0, 0, 1, -1, 1, 1])/((-2 + d + 2*n2 - 2*n3)*
     (-3 + d - n5)) + ((4*n3 - d*n3 + 2*n3*n5)*j[p4, 0, n2, 1 + n3, 0, 
      1 + n5, 1, -1, n8, 0, 1, 0, -1, 1, 1])/((-2 + d + 2*n2 - 2*n3)*
     (-3 + d - n5)) + ((4*n3 - d*n3 + 2*n3*n5)*j[p4, 0, n2, 1 + n3, 0, 
      1 + n5, 1, -1, n8, 0, 1, 1, 0, 0, 1])/((-2 + d + 2*n2 - 2*n3)*
     (-3 + d - n5)) + ((16*n2 - 24*d*n2 + 5*d^2*n2 + 24*n2*n3 - 6*d*n2*n3 + 
      8*n2*n5 - 10*d*n2*n5 + 12*n2*n3*n5 + 8*n2*n8 - 2*d*n2*n8 + 4*n2*n5*n8)*
     j[p4, 0, 1 + n2, -1 + n3, 0, 1 + n5, 1, -1, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)*(-1 + n8)) + 
   ((-4*n2 + d*n2 - 2*n2*n5)*j[p4, 0, 1 + n2, -1 + n3, 0, 1 + n5, 1, -1, n8, 
      0, 0, 1, 0, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-16*n2 + 24*d*n2 - 5*d^2*n2 - 24*n2*n3 + 6*d*n2*n3 - 8*n2*n5 + 
      10*d*n2*n5 - 12*n2*n3*n5 - 8*n2*n8 + 2*d*n2*n8 - 4*n2*n5*n8)*
     j[p4, 0, 1 + n2, n3, 0, 1 + n5, 1, -2, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)*(-1 + n8)) + 
   ((4*n2 - d*n2 + 2*n2*n5)*j[p4, 0, 1 + n2, n3, 0, 1 + n5, 1, -2, n8, 0, 1, 
      1, 0, 0, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-16*n2 + 24*d*n2 - 5*d^2*n2 - 24*n2*n3 + 6*d*n2*n3 - 8*n2*n5 + 
      10*d*n2*n5 - 12*n2*n3*n5 - 8*n2*n8 + 2*d*n2*n8 - 4*n2*n5*n8)*
     j[p4, 0, 1 + n2, n3, 0, 1 + n5, 1, -1, -2 + n8, 0, 1, 1, 0, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)*(-1 + n8)) + 
   ((16*n2 - 24*d*n2 + 5*d^2*n2 + 24*n2*n3 - 6*d*n2*n3 + 8*n2*n5 - 
      10*d*n2*n5 + 12*n2*n3*n5 + 8*n2*n8 - 2*d*n2*n8 + 4*n2*n5*n8)*
     j[p4, 0, 1 + n2, n3, 0, 1 + n5, 1, -1, -1 + n8, 0, 1, 1, -1, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)*(-1 + n8)) + 
   ((-12*n2 + 23*d*n2 - 5*d^2*n2 - 24*n2*n3 + 6*d*n2*n3 - 6*n2*n5 + 
      10*d*n2*n5 - 12*n2*n3*n5 - 12*n2*n8 + 3*d*n2*n8 - 6*n2*n5*n8)*
     j[p4, 0, 1 + n2, n3, 0, 1 + n5, 1, -1, -1 + n8, 0, 1, 1, 0, 0, 1])/
    ((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)*(-1 + n8)) + 
   ((-4*n2 + d*n2 - 2*n2*n5)*j[p4, 0, 1 + n2, n3, 0, 1 + n5, 1, -1, n8, 0, 0, 
      1, -1, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n4 == 0 && n6 == 1 && n7 == 0 && n9 == 0 &&  !(n5 == 0 || n8 == 1) -> 
  ((4 - d + 2*n5)*j[p4, -1, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 0, 2, 0, 1, 1])/
    ((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-80 + 64*d - 11*d^2 - 8*n2 + 2*d*n2 - 24*n3 + 6*d*n3 - 64*n5 + 28*d*n5 - 
      4*n2*n5 - 12*n3*n5 - 12*n5^2 - 32*n8 + 8*d*n8 - 16*n5*n8)*
     j[p4, -1, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, 0, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, -1, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 2, 1, 0, 0, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4*n8 + d*n8 - 2*n5*n8)*j[p4, -1, n2, n3, 0, 1 + n5, 1, 0, 1 + n8, 0, 1, 
      1, 0, 0, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-12 + 3*d - 18*n5 + 3*d*n5 - 6*n5^2)*j[p4, -1, n2, n3, 0, 2 + n5, 1, 0, 
      n8, 0, 1, 1, 0, 0, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((12 - 3*d + 18*n5 - 3*d*n5 + 6*n5^2)*j[p4, -1, n2, n3, 0, 2 + n5, 1, 0, 
      n8, 0, 1, 1, 0, 1, 0])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-8*n3 + 2*d*n3 - 4*n3*n5)*j[p4, -1, n2, 1 + n3, 0, 1 + n5, 1, 0, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4*n3 + d*n3 - 2*n3*n5)*j[p4, -1, n2, 1 + n3, 0, 1 + n5, 1, 0, n8, 0, 1, 
      1, 0, 0, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((8*n2 - 2*d*n2 + 4*n2*n5)*j[p4, -1, 1 + n2, -1 + n3, 0, 1 + n5, 1, 0, n8, 
      0, 1, 1, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-8*n2 + 2*d*n2 - 4*n2*n5)*j[p4, -1, 1 + n2, n3, 0, 1 + n5, 1, -1, n8, 0, 
      1, 1, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4*n2 + d*n2 - 2*n2*n5)*j[p4, -1, 1 + n2, n3, 0, 1 + n5, 1, 0, -1 + n8, 
      0, 1, 1, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((8*n2 - 2*d*n2 + 4*n2*n5)*j[p4, -1, 1 + n2, n3, 0, 1 + n5, 1, 0, n8, 0, 
      1, 1, -1, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-12*n2 + 3*d*n2 - 6*n2*n5)*j[p4, -1, 1 + n2, n3, 0, 1 + n5, 1, 0, n8, 0, 
      1, 1, 0, 0, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) - 
   j[p4, 0, -1 + n2, n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, 0, 0, 2]/
    (2*(-3 + d - n5)) + ((32 - 20*d + 3*d^2 + 8*n3 - 2*d*n3 + 24*n5 - 
      8*d*n5 + 4*n3*n5 + 4*n5^2)*j[p4, 0, -1 + n2, n3, 0, 1 + n5, 1, 0, n8, 
      0, 1, 1, 0, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, -1 + n2, n3, 0, 1 + n5, 1, 0, n8, 0, 2, 0, 0, 1, 
      1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, -1 + n2, n3, 0, 1 + n5, 1, 0, n8, 0, 2, 1, 0, 0, 
      1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4*n8 - d*n8 + 2*n5*n8)*j[p4, 0, -1 + n2, n3, 0, 1 + n5, 1, 0, 1 + n8, 0, 
      1, 0, 0, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4*n8 - d*n8 + 2*n5*n8)*j[p4, 0, -1 + n2, n3, 0, 1 + n5, 1, 0, 1 + n8, 0, 
      1, 1, 0, 0, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-1 - n2 + n3 - n5)*j[p4, 0, -1 + n2, n3, 0, 1 + n5, 2, 0, -1 + n8, 0, 1, 
      1, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, -1 + n2, n3, 0, 1 + n5, 2, 0, n8, 0, 0, 1, 0, 1, 
      1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) - 
   j[p4, 0, -1 + n2, n3, 0, 1 + n5, 2, 0, n8, 0, 1, 1, 0, 0, 1]/
    (2*(-3 + d - n5)) - j[p4, 0, -1 + n2, n3, 0, 1 + n5, 2, 0, n8, 0, 1, 1, 
     0, 1, 0]/(2*(-3 + d - n5)) + 
   ((-1 - n5)*j[p4, 0, -1 + n2, n3, 0, 2 + n5, 1, 0, n8, 0, 1, 1, 0, 0, 1])/
    (2*(3 - d + n5)) + ((1 + n5)*j[p4, 0, -1 + n2, n3, 0, 2 + n5, 1, 0, n8, 
      0, 1, 1, 0, 1, 0])/(2*(3 - d + n5)) + 
   ((-4*n3 + d*n3 - 2*n3*n5)*j[p4, 0, -1 + n2, 1 + n3, 0, 1 + n5, 1, 0, n8, 
      0, 0, 1, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4*n3 - d*n3 + 2*n3*n5)*j[p4, 0, -1 + n2, 1 + n3, 0, 1 + n5, 1, 0, n8, 0, 
      1, 0, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4*n3 - d*n3 + 2*n3*n5)*j[p4, 0, -1 + n2, 1 + n3, 0, 1 + n5, 1, 0, n8, 0, 
      1, 1, 0, 0, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) - 
   j[p4, 0, n2, -1 + n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, 0, 0, 2]/
    (2*(-3 + d - n5)) + ((-24 + 18*d - 3*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 - 
      16*n5 + 7*d*n5 - 2*n2*n5 - 4*n3*n5 - 2*n5^2 - 4*n8 + d*n8 - 2*n5*n8)*
     j[p4, 0, n2, -1 + n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, 0, 1, 1])/
    ((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, -1 + n3, 0, 1 + n5, 1, 0, n8, 0, 2, 0, 0, 1, 
      1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-1 - n2 + n3 - n5)*j[p4, 0, n2, -1 + n3, 0, 1 + n5, 2, 0, -1 + n8, 0, 1, 
      1, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, -1 + n3, 0, 1 + n5, 2, 0, n8, 0, 0, 1, 0, 1, 
      1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, n3, -1, 1 + n5, 1, 0, n8, 0, 1, 1, 0, 1, 1])/
    (-2 + d + 2*n2 - 2*n3) + ((-4 + d - 2*n5)*j[p4, 0, n2, n3, -1, 1 + n5, 2, 
      0, n8, 0, 0, 1, 0, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, -1, 1 + n5, 2, 0, n8, 0, 1, 1, 0, 0, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, -1, 1 + n5, 2, 0, n8, 0, 1, 1, 0, 1, 0])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 6*n5 + d*n5 - 2*n5^2)*j[p4, 0, n2, n3, -1, 2 + n5, 1, 0, n8, 0, 
      1, 1, 0, 0, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 6*n5 - d*n5 + 2*n5^2)*j[p4, 0, n2, n3, -1, 2 + n5, 1, 0, n8, 0, 
      1, 1, 0, 1, 0])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   j[p4, 0, n2, n3, 0, n5, 0, 0, n8, 0, 1, 1, 0, 1, 2]/(2*(-3 + d - n5)) + 
   j[p4, 0, n2, n3, 0, n5, 1, 0, n8, 0, 1, 1, 0, 0, 2]/(2*(-3 + d - n5)) + 
   j[p4, 0, n2, n3, 0, n5, 2, 0, n8, 0, 1, 1, 0, 0, 1]/(2*(-3 + d - n5)) + 
   j[p4, 0, n2, n3, 0, n5, 2, 0, n8, 0, 1, 1, 0, 1, 0]/(2*(-3 + d - n5)) - 
   (n5*j[p4, 0, n2, n3, 0, 1 + n5, 0, 0, n8, 0, 1, 1, 0, 1, 1])/
    (2*(3 - d + n5)) + j[p4, 0, n2, n3, 0, 1 + n5, 1, -1, n8, 0, 1, 1, 0, 0, 
     2]/(2*(-3 + d - n5)) + ((4 - d + 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, 
      -1, n8, 0, 2, 0, 0, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, -1, n8, 0, 2, 1, 0, 0, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4*n8 + d*n8 - 2*n5*n8)*j[p4, 0, n2, n3, 0, 1 + n5, 1, -1, 1 + n8, 0, 1, 
      0, 0, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4*n8 + d*n8 - 2*n5*n8)*j[p4, 0, n2, n3, 0, 1 + n5, 1, -1, 1 + n8, 0, 1, 
      1, 0, 0, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 0, 2, 0, 1, 
      1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   j[p4, 0, n2, n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 1, 1, 0, 0, 2]/
    (2*(-3 + d - n5)) + ((-72 + 106*d - 42*d^2 + 5*d^3 - 80*n3 + 64*d*n3 - 
      11*d^2*n3 - 24*n3^2 + 6*d*n3^2 - 66*n5 + 72*d*n5 - 15*d^2*n5 + 
      2*n2*n5 - 66*n3*n5 + 28*d*n3*n5 - 12*n3^2*n5 - 14*n5^2 + 10*d*n5^2 - 
      12*n3*n5^2 - 56*n8 + 26*d*n8 - 3*d^2*n8 - 32*n3*n8 + 8*d*n3*n8 - 
      38*n5*n8 + 8*d*n5*n8 - 2*n2*n5*n8 - 14*n3*n5*n8 - 6*n5^2*n8 + 8*n8^2 - 
      2*d*n8^2 + 4*n5*n8^2)*j[p4, 0, n2, n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 1, 
      1, 0, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)*(-1 + n8)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 2, 0, 0, 1, 
      1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d - 4*n2 + d*n2 - 8*n3 + 2*d*n3 + 2*n5 - 2*n2*n5 - 4*n3*n5)*
     j[p4, 0, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 0, 1, 0, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 0, 2, -1, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 0, 2, 0, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d + 8*n3 - 2*d*n3 - 2*n5 + 4*n3*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, 
      0, n8, 0, 1, 0, 0, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) - 
   j[p4, 0, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, -1, 0, 2]/
    (2*(-3 + d - n5)) + ((-24 + 26*d - 5*d^2 - 16*n3 + 4*d*n3 - 10*n5 + 
      9*d*n5 - 2*n2*n5 - 6*n3*n5 - 24*n8 + 6*d*n8 - 12*n5*n8)*
     j[p4, 0, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, 0, 0, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-8 + 2*d - 6*n5 + d*n5 + 2*n2*n5 - 2*n3*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 
      1, 0, n8, 0, 1, 1, 0, 1, 0])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((24 - 26*d + 5*d^2 + 8*n2 - 2*d*n2 + 8*n3 - 2*d*n3 + 20*n5 - 12*d*n5 + 
      4*n2*n5 + 4*n3*n5 + 4*n5^2 + 24*n8 - 6*d*n8 + 12*n5*n8)*
     j[p4, 0, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, 0, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 2, 0, -1, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 2, 0, 0, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4*n8 - d*n8 + 2*n5*n8)*j[p4, 0, n2, n3, 0, 1 + n5, 1, 0, 1 + n8, 0, 1, 
      0, -1, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((1 + n2 - n3 + n5)*j[p4, 0, n2, n3, 0, 1 + n5, 2, -1, -1 + n8, 0, 1, 1, 
      0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 2, -1, n8, 0, 0, 1, 0, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((1 + n2 - n3 + n5)*j[p4, 0, n2, n3, 0, 1 + n5, 2, 0, -2 + n8, 0, 1, 1, 0, 
      1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 2, 0, -1 + n8, -1, 1, 1, 0, 1, 
      1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-1 - n2 + n3 - n5)*j[p4, 0, n2, n3, 0, 1 + n5, 2, 0, -1 + n8, 0, 1, 1, 
      -1, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   j[p4, 0, n2, n3, 0, 1 + n5, 2, 0, -1 + n8, 0, 1, 1, 0, 0, 1]/
    (2*(-3 + d - n5)) + j[p4, 0, n2, n3, 0, 1 + n5, 2, 0, -1 + n8, 0, 1, 1, 
     0, 1, 0]/(2*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 2, 0, n8, -1, 1, 1, 0, 0, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 2, 0, n8, -1, 1, 1, 0, 1, 0])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 2, 0, n8, 0, 0, 1, -1, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 6*n5 - d*n5 + 2*n5^2)*j[p4, 0, n2, n3, 0, 2 + n5, 1, -1, n8, 0, 
      1, 1, 0, 0, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 6*n5 + d*n5 - 2*n5^2)*j[p4, 0, n2, n3, 0, 2 + n5, 1, -1, n8, 0, 
      1, 1, 0, 1, 0])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-30 + 28*d - 5*d^2 + 2*n2 - 26*n3 + 6*d*n3 - 44*n5 + 38*d*n5 - 
      5*d^2*n5 + 2*n2*n5 - 38*n3*n5 + 6*d*n3*n5 - 14*n5^2 + 10*d*n5^2 - 
      12*n3*n5^2 - 10*n8 + 2*d*n8 - 2*n2*n8 + 2*n3*n8 - 16*n5*n8 + 
      2*d*n5*n8 - 2*n2*n5*n8 + 2*n3*n5*n8 - 6*n5^2*n8)*
     j[p4, 0, n2, n3, 0, 2 + n5, 1, 0, -1 + n8, 0, 1, 1, 0, 0, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)*(-1 + n8)) + 
   ((30 - 28*d + 5*d^2 - 2*n2 + 26*n3 - 6*d*n3 + 44*n5 - 38*d*n5 + 5*d^2*n5 - 
      2*n2*n5 + 38*n3*n5 - 6*d*n3*n5 + 14*n5^2 - 10*d*n5^2 + 12*n3*n5^2 + 
      10*n8 - 2*d*n8 + 2*n2*n8 - 2*n3*n8 + 16*n5*n8 - 2*d*n5*n8 + 
      2*n2*n5*n8 - 2*n3*n5*n8 + 6*n5^2*n8)*j[p4, 0, n2, n3, 0, 2 + n5, 1, 0, 
      -1 + n8, 0, 1, 1, 0, 1, 0])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)*
     (-1 + n8)) + ((-4 + d - 6*n5 + d*n5 - 2*n5^2)*
     j[p4, 0, n2, n3, 0, 2 + n5, 1, 0, n8, -1, 1, 1, 0, 0, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 6*n5 - d*n5 + 2*n5^2)*j[p4, 0, n2, n3, 0, 2 + n5, 1, 0, n8, -1, 
      1, 1, 0, 1, 0])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((8*n3 - 22*d*n3 + 5*d^2*n3 + 24*n3^2 - 6*d*n3^2 + 4*n3*n5 - 10*d*n3*n5 + 
      12*n3^2*n5 + 32*n3*n8 - 8*d*n3*n8 + 16*n3*n5*n8)*
     j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, -1, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)*(-1 + n8)) + 
   ((4*n3 - d*n3 + 2*n3*n5)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, -1, n8, 0, 0, 
      1, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4*n3 + d*n3 - 2*n3*n5)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, -1, n8, 0, 1, 
      0, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4*n3 + d*n3 - 2*n3*n5)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, -1, n8, 0, 1, 
      1, 0, 0, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((8*n3 - 2*d*n3 + 4*n3*n5)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, 0, -2 + n8, 
      0, 1, 1, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-8*n3 + 2*d*n3 - 4*n3*n5)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, 0, -1 + n8, 
      0, 1, 1, -1, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-16*n3 + 24*d*n3 - 5*d^2*n3 - 24*n3^2 + 6*d*n3^2 - 8*n3*n5 + 
      10*d*n3*n5 - 12*n3^2*n5 - 24*n3*n8 + 6*d*n3*n8 - 12*n3*n5*n8)*
     j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 1, 1, 0, 0, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)*(-1 + n8)) + 
   ((8*n3 - 2*d*n3 + 4*n3*n5)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, 0, -1 + n8, 
      0, 1, 1, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4*n3 + d*n3 - 2*n3*n5)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, 0, n8, 0, 0, 
      1, -1, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4*n3 - d*n3 + 2*n3*n5)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, 0, n8, 0, 1, 
      0, -1, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4*n3 - d*n3 + 2*n3*n5)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, 0, n8, 0, 1, 
      1, 0, 0, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((32*n2 - 28*d*n2 + 5*d^2*n2 + 24*n2*n3 - 6*d*n2*n3 + 16*n2*n5 - 
      10*d*n2*n5 + 12*n2*n3*n5 + 8*n2*n8 - 2*d*n2*n8 + 4*n2*n5*n8)*
     j[p4, 0, 1 + n2, -1 + n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)*(-1 + n8)) + 
   ((-4*n2 + d*n2 - 2*n2*n5)*j[p4, 0, 1 + n2, -1 + n3, 0, 1 + n5, 1, 0, n8, 
      0, 0, 1, 0, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-32*n2 + 28*d*n2 - 5*d^2*n2 - 24*n2*n3 + 6*d*n2*n3 - 16*n2*n5 + 
      10*d*n2*n5 - 12*n2*n3*n5 - 8*n2*n8 + 2*d*n2*n8 - 4*n2*n5*n8)*
     j[p4, 0, 1 + n2, n3, 0, 1 + n5, 1, -1, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)*(-1 + n8)) + 
   ((4*n2 - d*n2 + 2*n2*n5)*j[p4, 0, 1 + n2, n3, 0, 1 + n5, 1, -1, n8, 0, 1, 
      1, 0, 0, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-32*n2 + 28*d*n2 - 5*d^2*n2 - 24*n2*n3 + 6*d*n2*n3 - 16*n2*n5 + 
      10*d*n2*n5 - 12*n2*n3*n5 - 8*n2*n8 + 2*d*n2*n8 - 4*n2*n5*n8)*
     j[p4, 0, 1 + n2, n3, 0, 1 + n5, 1, 0, -2 + n8, 0, 1, 1, 0, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)*(-1 + n8)) + 
   ((32*n2 - 28*d*n2 + 5*d^2*n2 + 24*n2*n3 - 6*d*n2*n3 + 16*n2*n5 - 
      10*d*n2*n5 + 12*n2*n3*n5 + 8*n2*n8 - 2*d*n2*n8 + 4*n2*n5*n8)*
     j[p4, 0, 1 + n2, n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 1, 1, -1, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)*(-1 + n8)) + 
   ((-28*n2 + 27*d*n2 - 5*d^2*n2 - 24*n2*n3 + 6*d*n2*n3 - 14*n2*n5 + 
      10*d*n2*n5 - 12*n2*n3*n5 - 12*n2*n8 + 3*d*n2*n8 - 6*n2*n5*n8)*
     j[p4, 0, 1 + n2, n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 1, 1, 0, 0, 1])/
    ((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)*(-1 + n8)) + 
   ((-4*n2 + d*n2 - 2*n2*n5)*j[p4, 0, 1 + n2, n3, 0, 1 + n5, 1, 0, n8, 0, 0, 
      1, -1, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n12 == 0 && n13 == 1 && n2 == 0 && n4 == 0 && n5 == 0 && 
    n6 == 1 && n7 == 0 && n8 == 1 && n9 == 0 && n14 != 1 -> 
  ((-4 + d)*j[p4, 0, 0, n3, 0, 0, 2, 0, 1, 0, n10, n11, 0, 1, -1 + n14])/
   ((d - 2*n14)*(-1 + n14)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && n5 == 0 && 
    n6 == 1 && n7 == 0 && n8 == 1 && n9 == 0 &&  !(n11 == 1 || n4 == 0) -> 
  ((4 - d + 2*n4)*j[p4, 0, -1, n3, 1 + n4, 0, 1, 0, 1, 0, n10, n11, 0, 1, 1])/
    (2*(-3 + d - n4)) + ((-4 + d - 2*n4)*j[p4, 0, -1, n3, 1 + n4, 0, 1, 0, 2, 
      0, n10, -1 + n11, 0, 1, 1])/(2*(-1 + n11)*(-3 + d - n4)) - 
   j[p4, 0, -1, n3, 1 + n4, 0, 2, 0, 0, 0, n10, n11, 0, 1, 1]/
    (2*(-3 + d - n4)) + ((4*n3 - d*n3 + 2*n3*n4)*j[p4, 0, -1, 1 + n3, 1 + n4, 
      0, 1, 0, 1, 0, n10, -1 + n11, 0, 1, 1])/(2*(-1 + n11)*(-3 + d - n4)) - 
   j[p4, 0, 0, -1 + n3, 1 + n4, 0, 0, 0, 1, 0, n10, n11, 0, 1, 2]/
    (2*(-3 + d - n4)) - j[p4, 0, 0, -1 + n3, 1 + n4, 0, 1, 0, 0, 0, n10, n11, 
     0, 1, 2]/(2*(-3 + d - n4)) - j[p4, 0, 0, -1 + n3, 1 + n4, 0, 1, 0, 1, 0, 
     n10, n11, 0, 0, 2]/(2*(-3 + d - n4)) - 
   j[p4, 0, 0, -1 + n3, 1 + n4, 0, 2, 0, 0, 0, n10, n11, 0, 1, 1]/
    (2*(-3 + d - n4)) + ((1 + n4)*j[p4, 0, 0, -1 + n3, 2 + n4, 0, 0, 0, 1, 0, 
      n10, n11, 0, 1, 1])/(2*(3 - d + n4)) + 
   ((-1 - n4)*j[p4, 0, 0, -1 + n3, 2 + n4, 0, 1, 0, 0, 0, n10, n11, 0, 1, 1])/
    (2*(3 - d + n4)) + ((4 - d + 6*n4 - d*n4 + 2*n4^2)*
     j[p4, 0, 0, -1 + n3, 2 + n4, 0, 1, 0, 1, 0, n10, -1 + n11, 0, 1, 1])/
    (2*(-1 + n11)*(-3 + d - n4)) + j[p4, 0, 0, n3, n4, 0, 0, 0, 1, 0, n10, 
     n11, 0, 1, 2]/(2*(-3 + d - n4)) + 
   j[p4, 0, 0, n3, n4, 0, 1, 0, 0, 0, n10, n11, 0, 1, 2]/(2*(-3 + d - n4)) + 
   j[p4, 0, 0, n3, n4, 0, 1, 0, 1, 0, n10, n11, 0, 0, 2]/(2*(-3 + d - n4)) + 
   j[p4, 0, 0, n3, n4, 0, 2, 0, 0, 0, n10, n11, 0, 1, 1]/(2*(-3 + d - n4)) + 
   j[p4, 0, 0, n3, n4, 0, 2, 0, 1, 0, n10, n11, 0, 0, 1]/(2*(-3 + d - n4)) + 
   j[p4, 0, 0, n3, n4, 0, 2, 0, 1, 0, n10, n11, 0, 1, 0]/(2*(-3 + d - n4)) - 
   (n4*j[p4, 0, 0, n3, 1 + n4, 0, 0, 0, 1, 0, n10, n11, 0, 1, 1])/
    (2*(3 - d + n4)) + ((4 - d + 2*n4)*j[p4, 0, 0, n3, 1 + n4, 0, 1, -1, 2, 
      0, n10, -1 + n11, 0, 1, 1])/(2*(-1 + n11)*(-3 + d - n4)) + 
   (n4*j[p4, 0, 0, n3, 1 + n4, 0, 1, 0, 0, 0, n10, n11, 0, 1, 1])/
    (2*(3 - d + n4)) + ((-4 + d - 2*n4)*j[p4, 0, 0, n3, 1 + n4, 0, 1, 0, 1, 
      0, -1 + n10, n11, 0, 1, 1])/(2*(-3 + d - n4)) + 
   ((4*n3 - d*n3 + 2*n3*n4)*j[p4, 0, 0, n3, 1 + n4, 0, 1, 0, 1, 0, n10, 
      -1 + n11, 0, 1, 1])/((-1 + n11)*(-3 + d - n4)) - 
   (n4*j[p4, 0, 0, n3, 1 + n4, 0, 1, 0, 1, 0, n10, n11, 0, 1, 0])/
    (2*(3 - d + n4)) + ((4 - d + 2*n4)*j[p4, 0, 0, n3, 1 + n4, 0, 1, 0, 1, 0, 
      n10, n11, 0, 1, 1])/(2*(-3 + d - n4)) + 
   ((-4 + d - 2*n4)*j[p4, 0, 0, n3, 1 + n4, 0, 1, 0, 2, 0, n10, -1 + n11, -1, 
      1, 1])/(2*(-1 + n11)*(-3 + d - n4)) + 
   ((4 - d + 2*n4)*j[p4, 0, 0, n3, 1 + n4, 0, 1, 0, 2, 0, n10, -1 + n11, 0, 
      0, 1])/(2*(-1 + n11)*(-3 + d - n4)) + 
   j[p4, 0, 0, n3, 1 + n4, 0, 2, -1, 0, 0, n10, n11, 0, 1, 1]/
    (2*(-3 + d - n4)) - j[p4, 0, 0, n3, 1 + n4, 0, 2, 0, 0, 0, n10, n11, -1, 
     1, 1]/(2*(-3 + d - n4)) + ((4 - d + 6*n4 - d*n4 + 2*n4^2)*
     j[p4, 0, 0, n3, 2 + n4, 0, 0, 0, 1, 0, n10, -1 + n11, 0, 1, 1])/
    (2*(-1 + n11)*(-3 + d - n4)) + ((-4 + d - 6*n4 + d*n4 - 2*n4^2)*
     j[p4, 0, 0, n3, 2 + n4, 0, 1, 0, 0, 0, n10, -1 + n11, 0, 1, 1])/
    (2*(-1 + n11)*(-3 + d - n4)) + ((-4 + d - 6*n4 + d*n4 - 2*n4^2)*
     j[p4, 0, 0, n3, 2 + n4, 0, 1, 0, 1, 0, n10, -1 + n11, 0, 1, 0])/
    (2*(-1 + n11)*(-3 + d - n4)) + 
   ((-4*n3 + d*n3 - 2*n3*n4)*j[p4, 0, 0, 1 + n3, 1 + n4, 0, 1, -1, 1, 0, n10, 
      -1 + n11, 0, 1, 1])/(2*(-1 + n11)*(-3 + d - n4)) + 
   ((-4*n3 + d*n3 - 2*n3*n4)*j[p4, 0, 0, 1 + n3, 1 + n4, 0, 1, 0, 0, 0, n10, 
      -1 + n11, 0, 1, 1])/((-1 + n11)*(-3 + d - n4)) + 
   ((4*n3 - d*n3 + 2*n3*n4)*j[p4, 0, 0, 1 + n3, 1 + n4, 0, 1, 0, 1, 0, n10, 
      -1 + n11, -1, 1, 1])/(2*(-1 + n11)*(-3 + d - n4)) + 
   ((-4*n3 + d*n3 - 2*n3*n4)*j[p4, 0, 0, 1 + n3, 1 + n4, 0, 1, 0, 1, 0, n10, 
      -1 + n11, 0, 0, 1])/(2*(-1 + n11)*(-3 + d - n4)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n11 == 1 && n12 == 0 && n13 == 1 && n2 == 0 && n4 == 0 && n5 == 0 && 
    n6 == 1 && n7 == 0 && n8 == 1 && n9 == 0 && n14 != 1 -> 
  ((-4 + d)*j[p4, n1, 0, n3, 0, 0, 2, 0, 1, 0, n10, 1, 0, 1, -1 + n14])/
   ((d - 2*n14)*(-1 + n14)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && n4 == 0 && 
    n6 == 1 && n7 == 0 && n8 == 1 && n9 == 0 &&  !(n1 == 0 || n10 == 1) -> 
  (n5*j[p4, n1, 0, n3, 0, 1 + n5, 1, 0, 1, 0, n10, 1, 0, 0, 1])/
    (-3 + d - n1 - n5) - (n5*j[p4, n1, 0, n3, 0, 1 + n5, 1, 0, 1, 0, n10, 1, 
      0, 1, 0])/(-3 + d - n1 - n5) + 
   (2*n3*j[p4, n1, 0, 1 + n3, 0, n5, 1, 0, 0, 0, n10, 1, 0, 1, 1])/
    (-3 + d - n1 - n5) + (n3*j[p4, n1, 0, 1 + n3, 0, n5, 1, 0, 1, 0, n10, 1, 
      0, 0, 1])/(-3 + d - n1 - n5) + 
   ((-3 + 2*d - n10 - 2*n3)*j[p4, 1 + n1, -1, n3, 0, n5, 2, 0, 1, 0, 
      -1 + n10, 1, 0, 1, 1])/((-1 + n10)*(-3 + d - n1 - n5)) - 
   (n3*j[p4, 1 + n1, -1, 1 + n3, 0, n5, 1, 0, 0, 0, n10, 1, 0, 1, 1])/
    (-3 + d - n1 - n5) + ((-3*n3 + 2*d*n3 - n10*n3 - n3^2 - n3*n5)*
     j[p4, 1 + n1, -1, 1 + n3, 0, n5, 1, 0, 1, 0, -1 + n10, 1, 0, 1, 1])/
    ((-1 + n10)*(-3 + d - n1 - n5)) - 
   (n3*j[p4, 1 + n1, -1, 1 + n3, 0, n5, 1, 0, 1, 0, n10, 0, 0, 1, 1])/
    (-3 + d - n1 - n5) - (n3*j[p4, 1 + n1, -1, 1 + n3, 0, n5, 1, 0, 1, 0, 
      n10, 1, 0, 0, 1])/(-3 + d - n1 - n5) + 
   ((-2 + d - n3)*j[p4, 1 + n1, 0, -1 + n3, 0, n5, 1, 0, 1, 0, n10, 1, 0, 1, 
      1])/(-3 + d - n1 - n5) + ((-3 + 2*d - n10 - 2*n3)*
     j[p4, 1 + n1, 0, -1 + n3, 0, n5, 2, 0, 1, 0, -1 + n10, 1, 0, 1, 1])/
    ((-1 + n10)*(-3 + d - n1 - n5)) + 
   ((-2 + d - n3)*j[p4, 1 + n1, 0, n3, -1, n5, 2, 0, 1, 0, -1 + n10, 1, 0, 1, 
      1])/((-1 + n10)*(-3 + d - n1 - n5)) + 
   ((-2 + d - n5)*j[p4, 1 + n1, 0, n3, 0, n5, 0, 0, 1, 0, n10, 1, 0, 1, 1])/
    (-3 + d - n1 - n5) + ((2 - 2*d + 2*n10 + n3)*j[p4, 1 + n1, 0, n3, 0, n5, 
      1, 0, 0, 0, n10, 1, 0, 1, 1])/(-3 + d - n1 - n5) + 
   j[p4, 1 + n1, 0, n3, 0, n5, 1, 0, 0, 0, n10, 2, -1, 1, 1]/
    (-3 + d - n1 - n5) + j[p4, 1 + n1, 0, n3, 0, n5, 1, 0, 0, 0, n10, 2, 0, 
     1, 1]/(3 - d + n1 + n5) + 
   ((1 + 4*d - 3*d^2 - 5*n10 + 5*d*n10 - 2*n10^2 - 6*n3 + 7*d*n3 - 5*n10*n3 - 
      4*n3^2 - n5 + d*n5 - n10*n5 - n3*n5)*j[p4, 1 + n1, 0, n3, 0, n5, 1, 0, 
      1, 0, -1 + n10, 1, 0, 1, 1])/((-1 + n10)*(-3 + d - n1 - n5)) + 
   ((2 - d)*j[p4, 1 + n1, 0, n3, 0, n5, 1, 0, 1, 0, n10, 0, 0, 1, 1])/
    (-3 + d - n1 - n5) + ((4 - 2*d + n1 + 2*n10 + n3)*
     j[p4, 1 + n1, 0, n3, 0, n5, 1, 0, 1, 0, n10, 1, 0, 0, 1])/
    (-3 + d - n1 - n5) + j[p4, 1 + n1, 0, n3, 0, n5, 1, 0, 1, 0, n10, 1, 0, 
     1, 0]/(-3 + d - n1 - n5) + ((-1 - d - n1 + 2*n10 + n3)*
     j[p4, 1 + n1, 0, n3, 0, n5, 1, 0, 1, 0, n10, 1, 0, 1, 1])/
    (-3 + d - n1 - n5) + ((3 - 2*d + n10 + 2*n3)*j[p4, 1 + n1, 0, n3, 0, n5, 
      2, -1, 1, 0, -1 + n10, 1, 0, 1, 1])/((-1 + n10)*(-3 + d - n1 - n5)) + 
   j[p4, 1 + n1, 0, n3, 0, n5, 2, 0, 0, -1, n10, 1, 0, 1, 1]/
    (3 - d + n1 + n5) + ((4 - 3*d + 2*n10 + 3*n3)*j[p4, 1 + n1, 0, n3, 0, n5, 
      2, 0, 0, 0, -1 + n10, 1, 0, 1, 1])/((-1 + n10)*(-3 + d - n1 - n5)) + 
   j[p4, 1 + n1, 0, n3, 0, n5, 2, 0, 1, -1, n10, 1, 0, 0, 1]/
    (3 - d + n1 + n5) + j[p4, 1 + n1, 0, n3, 0, n5, 2, 0, 1, -1, n10, 1, 0, 
     1, 0]/(3 - d + n1 + n5) + ((-3 + 2*d - n10 - 2*n3)*
     j[p4, 1 + n1, 0, n3, 0, n5, 2, 0, 1, 0, -1 + n10, 1, -1, 1, 1])/
    ((-1 + n10)*(-3 + d - n1 - n5)) + 
   ((2 - 2*d + 2*n10 + 2*n3)*j[p4, 1 + n1, 0, n3, 0, n5, 2, 0, 1, 0, 
      -1 + n10, 1, 0, 0, 1])/((-1 + n10)*(-3 + d - n1 - n5)) + 
   ((2 - 2*d + 2*n10 + 2*n3)*j[p4, 1 + n1, 0, n3, 0, n5, 2, 0, 1, 0, 
      -1 + n10, 1, 0, 1, 0])/((-1 + n10)*(-3 + d - n1 - n5)) + 
   (n5*j[p4, 1 + n1, 0, n3, 0, 1 + n5, 1, 0, 1, -1, n10, 1, 0, 0, 1])/
    (-3 + d - n1 - n5) - (n5*j[p4, 1 + n1, 0, n3, 0, 1 + n5, 1, 0, 1, -1, 
      n10, 1, 0, 1, 0])/(-3 + d - n1 - n5) + 
   ((-2*n3 + d*n3 - n3*n5)*j[p4, 1 + n1, 0, 1 + n3, -1, n5, 1, 0, 1, 0, 
      -1 + n10, 1, 0, 1, 1])/((-1 + n10)*(-3 + d - n1 - n5)) + 
   (n3*j[p4, 1 + n1, 0, 1 + n3, 0, n5, 1, -1, 0, 0, n10, 1, 0, 1, 1])/
    (-3 + d - n1 - n5) + ((3*n3 - 2*d*n3 + n10*n3 + n3^2 + n3*n5)*
     j[p4, 1 + n1, 0, 1 + n3, 0, n5, 1, -1, 1, 0, -1 + n10, 1, 0, 1, 1])/
    ((-1 + n10)*(-3 + d - n1 - n5)) + 
   (n3*j[p4, 1 + n1, 0, 1 + n3, 0, n5, 1, -1, 1, 0, n10, 0, 0, 1, 1])/
    (-3 + d - n1 - n5) + (n3*j[p4, 1 + n1, 0, 1 + n3, 0, n5, 1, -1, 1, 0, 
      n10, 1, 0, 0, 1])/(-3 + d - n1 - n5) + 
   ((4*n3 - 4*d*n3 + 4*n10*n3 + 2*n3^2 + 2*n3*n5)*j[p4, 1 + n1, 0, 1 + n3, 0, 
      n5, 1, 0, 0, 0, -1 + n10, 1, 0, 1, 1])/
    ((-1 + n10)*(-3 + d - n1 - n5)) + 
   (n3*j[p4, 1 + n1, 0, 1 + n3, 0, n5, 1, 0, 0, 0, n10, 1, -1, 1, 1])/
    (-3 + d - n1 - n5) - (2*n3*j[p4, 1 + n1, 0, 1 + n3, 0, n5, 1, 0, 0, 0, 
      n10, 1, 0, 1, 1])/(-3 + d - n1 - n5) + 
   ((-3*n3 + 2*d*n3 - n10*n3 - n3^2 - n3*n5)*j[p4, 1 + n1, 0, 1 + n3, 0, n5, 
      1, 0, 1, 0, -1 + n10, 1, -1, 1, 1])/((-1 + n10)*(-3 + d - n1 - n5)) + 
   ((2*n3 - 2*d*n3 + 2*n10*n3 + n3^2 + n3*n5)*j[p4, 1 + n1, 0, 1 + n3, 0, n5, 
      1, 0, 1, 0, -1 + n10, 1, 0, 0, 1])/((-1 + n10)*(-3 + d - n1 - n5)) + 
   ((2*n3 - d*n3 + n3*n5)*j[p4, 1 + n1, 0, 1 + n3, 0, n5, 1, 0, 1, 0, 
      -1 + n10, 1, 0, 1, 0])/((-1 + n10)*(-3 + d - n1 - n5)) - 
   (n3*j[p4, 1 + n1, 0, 1 + n3, 0, n5, 1, 0, 1, 0, n10, 0, -1, 1, 1])/
    (-3 + d - n1 - n5) - (n3*j[p4, 1 + n1, 0, 1 + n3, 0, n5, 1, 0, 1, 0, n10, 
      1, 0, 0, 1])/(-3 + d - n1 - n5), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n13 == 1 && n4 == 0 && n5 == 0 && 
    n6 == 1 && n7 == 0 && n8 == 1 && n9 == 0 && n14 != 1 -> 
  ((-4 + d)*j[p4, 0, n2, n3, 0, 0, 2, 0, 1, 0, 1, n11, 0, 1, -1 + n14])/
   ((d - 2*n14)*(-1 + n14)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n5 == 0 && 
    n6 == 1 && n7 == 0 && n8 == 1 && n9 == 0 &&  !(n11 == 1 || n4 == 0) -> 
  ((4 - d + 2*n4)*j[p4, 0, -1 + n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, n11, 0, 1, 
      1])/(2*(-3 + d - n4)) + ((-4 + d - 2*n4)*j[p4, 0, -1 + n2, n3, 1 + n4, 
      0, 1, 0, 2, 0, 1, -1 + n11, 0, 1, 1])/(2*(-1 + n11)*(-3 + d - n4)) - 
   j[p4, 0, -1 + n2, n3, 1 + n4, 0, 2, 0, 0, 0, 1, n11, 0, 1, 1]/
    (2*(-3 + d - n4)) + ((4*n3 - d*n3 + 2*n3*n4)*j[p4, 0, -1 + n2, 1 + n3, 
      1 + n4, 0, 1, 0, 1, 0, 1, -1 + n11, 0, 1, 1])/
    (2*(-1 + n11)*(-3 + d - n4)) - j[p4, 0, n2, -1 + n3, 1 + n4, 0, 0, 0, 1, 
     0, 1, n11, 0, 1, 2]/(2*(-3 + d - n4)) - 
   j[p4, 0, n2, -1 + n3, 1 + n4, 0, 1, 0, 0, 0, 1, n11, 0, 1, 2]/
    (2*(-3 + d - n4)) - j[p4, 0, n2, -1 + n3, 1 + n4, 0, 1, 0, 1, 0, 1, n11, 
     0, 0, 2]/(2*(-3 + d - n4)) - j[p4, 0, n2, -1 + n3, 1 + n4, 0, 2, 0, 0, 
     0, 1, n11, 0, 1, 1]/(2*(-3 + d - n4)) + 
   ((1 + n4)*j[p4, 0, n2, -1 + n3, 2 + n4, 0, 0, 0, 1, 0, 1, n11, 0, 1, 1])/
    (2*(3 - d + n4)) + ((-1 - n4)*j[p4, 0, n2, -1 + n3, 2 + n4, 0, 1, 0, 0, 
      0, 1, n11, 0, 1, 1])/(2*(3 - d + n4)) + 
   ((4 - d + 6*n4 - d*n4 + 2*n4^2)*j[p4, 0, n2, -1 + n3, 2 + n4, 0, 1, 0, 1, 
      0, 1, -1 + n11, 0, 1, 1])/(2*(-1 + n11)*(-3 + d - n4)) + 
   j[p4, 0, n2, n3, n4, 0, 0, 0, 1, 0, 1, n11, 0, 1, 2]/(2*(-3 + d - n4)) + 
   j[p4, 0, n2, n3, n4, 0, 1, 0, 0, 0, 1, n11, 0, 1, 2]/(2*(-3 + d - n4)) + 
   j[p4, 0, n2, n3, n4, 0, 1, 0, 1, 0, 1, n11, 0, 0, 2]/(2*(-3 + d - n4)) + 
   j[p4, 0, n2, n3, n4, 0, 2, 0, 0, 0, 1, n11, 0, 1, 1]/(2*(-3 + d - n4)) + 
   j[p4, 0, n2, n3, n4, 0, 2, 0, 1, 0, 1, n11, 0, 0, 1]/(2*(-3 + d - n4)) + 
   j[p4, 0, n2, n3, n4, 0, 2, 0, 1, 0, 1, n11, 0, 1, 0]/(2*(-3 + d - n4)) - 
   (n4*j[p4, 0, n2, n3, 1 + n4, 0, 0, 0, 1, 0, 1, n11, 0, 1, 1])/
    (2*(3 - d + n4)) + ((4 - d + 2*n4)*j[p4, 0, n2, n3, 1 + n4, 0, 1, -1, 2, 
      0, 1, -1 + n11, 0, 1, 1])/(2*(-1 + n11)*(-3 + d - n4)) + 
   (n4*j[p4, 0, n2, n3, 1 + n4, 0, 1, 0, 0, 0, 1, n11, 0, 1, 1])/
    (2*(3 - d + n4)) + ((-4 + d - 2*n4)*j[p4, 0, n2, n3, 1 + n4, 0, 1, 0, 1, 
      0, 0, n11, 0, 1, 1])/(2*(-3 + d - n4)) + 
   ((4*n3 - d*n3 + 2*n3*n4)*j[p4, 0, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, 
      -1 + n11, 0, 1, 1])/((-1 + n11)*(-3 + d - n4)) - 
   (n4*j[p4, 0, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, n11, 0, 1, 0])/
    (2*(3 - d + n4)) + ((4 - d + 2*n4)*j[p4, 0, n2, n3, 1 + n4, 0, 1, 0, 1, 
      0, 1, n11, 0, 1, 1])/(2*(-3 + d - n4)) + 
   ((-4 + d - 2*n4)*j[p4, 0, n2, n3, 1 + n4, 0, 1, 0, 2, 0, 1, -1 + n11, -1, 
      1, 1])/(2*(-1 + n11)*(-3 + d - n4)) + 
   ((4 - d + 2*n4)*j[p4, 0, n2, n3, 1 + n4, 0, 1, 0, 2, 0, 1, -1 + n11, 0, 0, 
      1])/(2*(-1 + n11)*(-3 + d - n4)) + 
   j[p4, 0, n2, n3, 1 + n4, 0, 2, -1, 0, 0, 1, n11, 0, 1, 1]/
    (2*(-3 + d - n4)) - j[p4, 0, n2, n3, 1 + n4, 0, 2, 0, 0, 0, 1, n11, -1, 
     1, 1]/(2*(-3 + d - n4)) + ((4 - d + 6*n4 - d*n4 + 2*n4^2)*
     j[p4, 0, n2, n3, 2 + n4, 0, 0, 0, 1, 0, 1, -1 + n11, 0, 1, 1])/
    (2*(-1 + n11)*(-3 + d - n4)) + ((-4 + d - 6*n4 + d*n4 - 2*n4^2)*
     j[p4, 0, n2, n3, 2 + n4, 0, 1, 0, 0, 0, 1, -1 + n11, 0, 1, 1])/
    (2*(-1 + n11)*(-3 + d - n4)) + ((-4 + d - 6*n4 + d*n4 - 2*n4^2)*
     j[p4, 0, n2, n3, 2 + n4, 0, 1, 0, 1, 0, 1, -1 + n11, 0, 1, 0])/
    (2*(-1 + n11)*(-3 + d - n4)) + 
   ((-4*n3 + d*n3 - 2*n3*n4)*j[p4, 0, n2, 1 + n3, 1 + n4, 0, 1, -1, 1, 0, 1, 
      -1 + n11, 0, 1, 1])/(2*(-1 + n11)*(-3 + d - n4)) + 
   ((-4*n3 + d*n3 - 2*n3*n4)*j[p4, 0, n2, 1 + n3, 1 + n4, 0, 1, 0, 0, 0, 1, 
      -1 + n11, 0, 1, 1])/((-1 + n11)*(-3 + d - n4)) + 
   ((4*n3 - d*n3 + 2*n3*n4)*j[p4, 0, n2, 1 + n3, 1 + n4, 0, 1, 0, 1, 0, 1, 
      -1 + n11, -1, 1, 1])/(2*(-1 + n11)*(-3 + d - n4)) + 
   ((-4*n3 + d*n3 - 2*n3*n4)*j[p4, 0, n2, 1 + n3, 1 + n4, 0, 1, 0, 1, 0, 1, 
      -1 + n11, 0, 0, 1])/(2*(-1 + n11)*(-3 + d - n4)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n5 == 0 && 
    n6 == 1 && n7 == 0 && n8 == 1 && n9 == 0 && n4 != 0 -> 
  ((-8 + 6*d - d^2 - 8*n1 + 2*d*n1 - 4*n2 + d*n2 - 4*n4 + 2*d*n4 - 4*n1*n4 - 
      2*n2*n4)*j[p4, -1 + n1, n2, n3, 1 + n4, 0, 1, 0, 0, 0, 2, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 - 20*n4 + 6*d*n4 - 
      2*n2*n4 - 4*n3*n4 - 4*n4^2)*j[p4, -1 + n1, n2, n3, 1 + n4, 0, 1, 0, 1, 
      0, 0, 2, 0, 1, 1])/((-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((48 - 52*d + 18*d^2 - 2*d^3 + 24*n1 - 14*d*n1 + 2*d^2*n1 + 64*n2 - 
      40*d*n2 + 6*d^2*n2 + 12*n1*n2 - 3*d*n1*n2 + 12*n2^2 - 3*d*n2^2 + 
      16*n3 - 12*d*n3 + 2*d^2*n3 + 8*n1*n3 - 2*d*n1*n3 + 16*n2*n3 - 
      4*d*n2*n3 + 40*n4 - 32*d*n4 + 6*d^2*n4 + 20*n1*n4 - 6*d*n1*n4 + 
      48*n2*n4 - 16*d*n2*n4 + 6*n1*n2*n4 + 6*n2^2*n4 + 8*n3*n4 - 4*d*n3*n4 + 
      4*n1*n3*n4 + 8*n2*n3*n4 + 8*n4^2 - 4*d*n4^2 + 4*n1*n4^2 + 8*n2*n4^2)*
     j[p4, -1 + n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-8 + 6*d - d^2 - 8*n1 + 2*d*n1 - 4*n2 + d*n2 - 4*n4 + 2*d*n4 - 4*n1*n4 - 
      2*n2*n4)*j[p4, -1 + n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 2, 1, 0, 0, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((24 - 14*d + 2*d^2 + 4*n2 - d*n2 + 8*n3 - 2*d*n3 + 20*n4 - 6*d*n4 + 
      2*n2*n4 + 4*n3*n4 + 4*n4^2)*j[p4, -1 + n1, n2, n3, 1 + n4, 0, 1, 0, 2, 
      0, 1, 1, 0, 0, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((32 - 20*d + 3*d^2 + 8*n1 - 2*d*n1 + 8*n2 - 2*d*n2 + 8*n3 - 2*d*n3 + 
      56*n4 - 28*d*n4 + 3*d^2*n4 + 12*n1*n4 - 2*d*n1*n4 + 12*n2*n4 - 
      2*d*n2*n4 + 12*n3*n4 - 2*d*n3*n4 + 28*n4^2 - 8*d*n4^2 + 4*n1*n4^2 + 
      4*n2*n4^2 + 4*n3*n4^2 + 4*n4^3)*j[p4, -1 + n1, n2, n3, 2 + n4, 0, 0, 0, 
      1, 0, 1, 1, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-32 + 20*d - 3*d^2 - 8*n1 + 2*d*n1 - 8*n2 + 2*d*n2 - 8*n3 + 2*d*n3 - 
      56*n4 + 28*d*n4 - 3*d^2*n4 - 12*n1*n4 + 2*d*n1*n4 - 12*n2*n4 + 
      2*d*n2*n4 - 12*n3*n4 + 2*d*n3*n4 - 28*n4^2 + 8*d*n4^2 - 4*n1*n4^2 - 
      4*n2*n4^2 - 4*n3*n4^2 - 4*n4^3)*j[p4, -1 + n1, n2, n3, 2 + n4, 0, 1, 0, 
      0, 0, 1, 1, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((24 - 14*d + 2*d^2 + 4*n2 - d*n2 + 8*n3 - 2*d*n3 + 44*n4 - 20*d*n4 + 
      2*d^2*n4 + 6*n2*n4 - d*n2*n4 + 12*n3*n4 - 2*d*n3*n4 + 24*n4^2 - 
      6*d*n4^2 + 2*n2*n4^2 + 4*n3*n4^2 + 4*n4^3)*j[p4, -1 + n1, n2, n3, 
      2 + n4, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0])/(2*(3 - d + n4)*
     (64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((-32*n3 + 20*d*n3 - 3*d^2*n3 - 8*n1*n3 + 
      2*d*n1*n3 - 8*n2*n3 + 2*d*n2*n3 - 8*n3^2 + 2*d*n3^2 - 24*n3*n4 + 
      8*d*n3*n4 - 4*n1*n3*n4 - 4*n2*n3*n4 - 4*n3^2*n4 - 4*n3*n4^2)*
     j[p4, -1 + n1, n2, 1 + n3, 1 + n4, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-32*n3 + 20*d*n3 - 3*d^2*n3 - 8*n1*n3 + 2*d*n1*n3 - 8*n2*n3 + 
      2*d*n2*n3 - 8*n3^2 + 2*d*n3^2 - 24*n3*n4 + 8*d*n3*n4 - 4*n1*n3*n4 - 
      4*n2*n3*n4 - 4*n3^2*n4 - 4*n3*n4^2)*j[p4, -1 + n1, n2, 1 + n3, 1 + n4, 
      0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/(2*(-3 + d - n4)*
     (64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((80*n2 - 48*d*n2 + 7*d^2*n2 + 8*n1*n2 - 
      2*d*n1*n2 + 16*n2^2 - 4*d*n2^2 + 24*n2*n3 - 6*d*n2*n3 + 64*n2*n4 - 
      20*d*n2*n4 + 4*n1*n2*n4 + 8*n2^2*n4 + 12*n2*n3*n4 + 12*n2*n4^2)*
     j[p4, -1 + n1, 1 + n2, -1 + n3, 1 + n4, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-32*n2 + 20*d*n2 - 3*d^2*n2 - 8*n1*n2 + 2*d*n1*n2 - 8*n2^2 + 2*d*n2^2 - 
      8*n2*n3 + 2*d*n2*n3 - 24*n2*n4 + 8*d*n2*n4 - 4*n1*n2*n4 - 4*n2^2*n4 - 
      4*n2*n3*n4 - 4*n2*n4^2)*j[p4, -1 + n1, 1 + n2, n3, 1 + n4, 0, 1, -1, 1, 
      0, 1, 1, 0, 1, 1])/((-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-32*n2 + 20*d*n2 - 3*d^2*n2 - 8*n1*n2 + 2*d*n1*n2 - 8*n2^2 + 2*d*n2^2 - 
      8*n2*n3 + 2*d*n2*n3 - 24*n2*n4 + 8*d*n2*n4 - 4*n1*n2*n4 - 4*n2^2*n4 - 
      4*n2*n3*n4 - 4*n2*n4^2)*j[p4, -1 + n1, 1 + n2, n3, 1 + n4, 0, 1, 0, 0, 
      0, 1, 1, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((32*n2 - 20*d*n2 + 3*d^2*n2 + 8*n1*n2 - 2*d*n1*n2 + 8*n2^2 - 2*d*n2^2 + 
      8*n2*n3 - 2*d*n2*n3 + 24*n2*n4 - 8*d*n2*n4 + 4*n1*n2*n4 + 4*n2^2*n4 + 
      4*n2*n3*n4 + 4*n2*n4^2)*j[p4, -1 + n1, 1 + n2, n3, 1 + n4, 0, 1, 0, 1, 
      0, 1, 1, -1, 1, 1])/((-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-8*n2 + 6*d*n2 - d^2*n2 - 8*n1*n2 + 2*d*n1*n2 - 4*n2^2 + d*n2^2 - 
      4*n2*n4 + 2*d*n2*n4 - 4*n1*n2*n4 - 2*n2^2*n4)*
     j[p4, -1 + n1, 1 + n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((8 - 6*d + d^2 + 8*n1 - 2*d*n1 + 4*n2 - d*n2 + 4*n4 - 2*d*n4 + 4*n1*n4 + 
      2*n2*n4)*j[p4, n1, -1 + n2, n3, 1 + n4, 0, 1, 0, 0, 0, 2, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-48 + 52*d - 18*d^2 + 2*d^3 - 24*n1 + 14*d*n1 - 2*d^2*n1 - 32*n2 + 
      20*d*n2 - 3*d^2*n2 - 4*n1*n2 + d*n1*n2 - 4*n2^2 + d*n2^2 - 16*n3 + 
      12*d*n3 - 2*d^2*n3 - 8*n1*n3 + 2*d*n1*n3 - 8*n2*n3 + 2*d*n2*n3 - 
      40*n4 + 32*d*n4 - 6*d^2*n4 - 20*n1*n4 + 6*d*n1*n4 - 24*n2*n4 + 
      8*d*n2*n4 - 2*n1*n2*n4 - 2*n2^2*n4 - 8*n3*n4 + 4*d*n3*n4 - 4*n1*n3*n4 - 
      4*n2*n3*n4 - 8*n4^2 + 4*d*n4^2 - 4*n1*n4^2 - 4*n2*n4^2)*
     j[p4, n1, -1 + n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((8 - 6*d + d^2 + 8*n1 - 2*d*n1 + 4*n2 - d*n2 + 4*n4 - 2*d*n4 + 4*n1*n4 + 
      2*n2*n4)*j[p4, n1, -1 + n2, n3, 1 + n4, 0, 1, 0, 1, 0, 2, 0, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((8 - 6*d + d^2 + 8*n1 - 2*d*n1 + 4*n2 - d*n2 + 4*n4 - 2*d*n4 + 4*n1*n4 + 
      2*n2*n4)*j[p4, n1, -1 + n2, n3, 1 + n4, 0, 1, 0, 1, 0, 2, 1, 0, 0, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 - 20*n4 + 6*d*n4 - 
      2*n2*n4 - 4*n3*n4 - 4*n4^2)*j[p4, n1, -1 + n2, n3, 1 + n4, 0, 1, 0, 2, 
      0, 1, 0, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 - 20*n4 + 6*d*n4 - 
      2*n2*n4 - 4*n3*n4 - 4*n4^2)*j[p4, n1, -1 + n2, n3, 1 + n4, 0, 1, 0, 2, 
      0, 1, 1, 0, 0, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   j[p4, n1, -1 + n2, n3, 1 + n4, 0, 2, 0, 0, 0, 1, 1, 0, 1, 1]/
    (2*(-3 + d - n4)) + ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 - 
      20*n4 + 6*d*n4 - 2*n2*n4 - 4*n3*n4 - 4*n4^2)*j[p4, n1, -1 + n2, n3, 
      1 + n4, 0, 2, 0, 1, 0, 0, 1, 0, 1, 1])/(2*(-3 + d - n4)*
     (64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((-32 + 20*d - 3*d^2 - 8*n1 + 2*d*n1 - 8*n2 + 
      2*d*n2 - 8*n3 + 2*d*n3 - 56*n4 + 28*d*n4 - 3*d^2*n4 - 12*n1*n4 + 
      2*d*n1*n4 - 12*n2*n4 + 2*d*n2*n4 - 12*n3*n4 + 2*d*n3*n4 - 28*n4^2 + 
      8*d*n4^2 - 4*n1*n4^2 - 4*n2*n4^2 - 4*n3*n4^2 - 4*n4^3)*
     j[p4, n1, -1 + n2, n3, 2 + n4, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((32 - 20*d + 3*d^2 + 8*n1 - 2*d*n1 + 8*n2 - 2*d*n2 + 8*n3 - 2*d*n3 + 
      56*n4 - 28*d*n4 + 3*d^2*n4 + 12*n1*n4 - 2*d*n1*n4 + 12*n2*n4 - 
      2*d*n2*n4 + 12*n3*n4 - 2*d*n3*n4 + 28*n4^2 - 8*d*n4^2 + 4*n1*n4^2 + 
      4*n2*n4^2 + 4*n3*n4^2 + 4*n4^3)*j[p4, n1, -1 + n2, n3, 2 + n4, 0, 1, 0, 
      0, 0, 1, 1, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 - 44*n4 + 20*d*n4 - 
      2*d^2*n4 - 6*n2*n4 + d*n2*n4 - 12*n3*n4 + 2*d*n3*n4 - 24*n4^2 + 
      6*d*n4^2 - 2*n2*n4^2 - 4*n3*n4^2 - 4*n4^3)*j[p4, n1, -1 + n2, n3, 
      2 + n4, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0])/(2*(3 - d + n4)*
     (64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((32*n3 - 20*d*n3 + 3*d^2*n3 + 8*n1*n3 - 
      2*d*n1*n3 + 8*n2*n3 - 2*d*n2*n3 + 8*n3^2 - 2*d*n3^2 + 24*n3*n4 - 
      8*d*n3*n4 + 4*n1*n3*n4 + 4*n2*n3*n4 + 4*n3^2*n4 + 4*n3*n4^2)*
     j[p4, n1, -1 + n2, 1 + n3, 1 + n4, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-32*n3 + 20*d*n3 - 3*d^2*n3 - 8*n1*n3 + 2*d*n1*n3 - 8*n2*n3 + 
      2*d*n2*n3 - 8*n3^2 + 2*d*n3^2 - 24*n3*n4 + 8*d*n3*n4 - 4*n1*n3*n4 - 
      4*n2*n3*n4 - 4*n3^2*n4 - 4*n3*n4^2)*j[p4, n1, -1 + n2, 1 + n3, 1 + n4, 
      0, 1, 0, 1, 0, 0, 1, 0, 1, 1])/(2*(-3 + d - n4)*
     (64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((32*n3 - 20*d*n3 + 3*d^2*n3 + 8*n1*n3 - 
      2*d*n1*n3 + 8*n2*n3 - 2*d*n2*n3 + 8*n3^2 - 2*d*n3^2 + 24*n3*n4 - 
      8*d*n3*n4 + 4*n1*n3*n4 + 4*n2*n3*n4 + 4*n3^2*n4 + 4*n3*n4^2)*
     j[p4, n1, -1 + n2, 1 + n3, 1 + n4, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((32*n3 - 20*d*n3 + 3*d^2*n3 + 8*n1*n3 - 2*d*n1*n3 + 8*n2*n3 - 2*d*n2*n3 + 
      8*n3^2 - 2*d*n3^2 + 24*n3*n4 - 8*d*n3*n4 + 4*n1*n3*n4 + 4*n2*n3*n4 + 
      4*n3^2*n4 + 4*n3*n4^2)*j[p4, n1, -1 + n2, 1 + n3, 1 + n4, 0, 1, 0, 1, 
      0, 1, 1, 0, 0, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-72 + 54*d - 10*d^2 - 12*n1 + 4*d*n1 - 24*n2 + 9*d*n2 - 2*n1*n2 - 
      2*n2^2 - 44*n3 + 16*d*n3 - 6*n2*n3 - 8*n3^2 - 36*n4 + 14*d*n4 - 
      4*n1*n4 - 6*n2*n4 - 12*n3*n4 - 4*n4^2)*j[p4, n1, n2, -1 + n3, 1 + n4, 
      0, 0, 0, 1, 0, 1, 1, 0, 1, 2])/(2*(-3 + d - n4)*
     (64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((-72 + 54*d - 10*d^2 - 12*n1 + 4*d*n1 - 24*n2 + 
      9*d*n2 - 2*n1*n2 - 2*n2^2 - 44*n3 + 16*d*n3 - 6*n2*n3 - 8*n3^2 - 
      36*n4 + 14*d*n4 - 4*n1*n4 - 6*n2*n4 - 12*n3*n4 - 4*n4^2)*
     j[p4, n1, n2, -1 + n3, 1 + n4, 0, 1, 0, 0, 0, 1, 1, 0, 1, 2])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-72 + 54*d - 10*d^2 - 12*n1 + 4*d*n1 - 24*n2 + 9*d*n2 - 2*n1*n2 - 
      2*n2^2 - 44*n3 + 16*d*n3 - 6*n2*n3 - 8*n3^2 - 36*n4 + 14*d*n4 - 
      4*n1*n4 - 6*n2*n4 - 12*n3*n4 - 4*n4^2)*j[p4, n1, n2, -1 + n3, 1 + n4, 
      0, 1, 0, 1, 0, 1, 1, 0, 0, 2])/(2*(-3 + d - n4)*
     (64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((-48 + 52*d - 18*d^2 + 2*d^3 + 48*n1 - 28*d*n1 + 
      4*d^2*n1 - 8*n2 + 6*d*n2 - d^2*n2 + 8*n1*n2 - 2*d*n1*n2 - 64*n3 + 
      40*d*n3 - 6*d^2*n3 + 16*n1*n3 - 4*d*n1*n3 - 8*n2*n3 + 2*d*n2*n3 - 
      16*n3^2 + 4*d*n3^2 - 40*n4 + 32*d*n4 - 6*d^2*n4 + 40*n1*n4 - 
      12*d*n1*n4 - 4*n2*n4 + 2*d*n2*n4 + 4*n1*n2*n4 - 48*n3*n4 + 16*d*n3*n4 + 
      8*n1*n3*n4 - 4*n2*n3*n4 - 8*n3^2*n4 - 8*n4^2 + 4*d*n4^2 + 8*n1*n4^2 - 
      8*n3*n4^2)*j[p4, n1, n2, -1 + n3, 1 + n4, 0, 1, 0, 1, 0, 1, 1, 0, 1, 
      1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 
      8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 
      32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((8 - 6*d + d^2 + 8*n1 - 2*d*n1 + 4*n2 - d*n2 + 4*n4 - 2*d*n4 + 4*n1*n4 + 
      2*n2*n4)*j[p4, n1, n2, -1 + n3, 1 + n4, 0, 1, 0, 1, 0, 2, 0, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   j[p4, n1, n2, -1 + n3, 1 + n4, 0, 2, 0, 0, 0, 1, 1, 0, 1, 1]/
    (2*(-3 + d - n4)) + ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 - 
      20*n4 + 6*d*n4 - 2*n2*n4 - 4*n3*n4 - 4*n4^2)*j[p4, n1, n2, -1 + n3, 
      1 + n4, 0, 2, 0, 1, 0, 0, 1, 0, 1, 1])/(2*(-3 + d - n4)*
     (64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((-136 + 90*d - 15*d^2 - 4*n1 + 2*d*n1 - 32*n2 + 
      11*d*n2 - 2*n1*n2 - 2*n2^2 - 68*n3 + 22*d*n3 - 6*n2*n3 - 8*n3^2 - 
      228*n4 + 120*d*n4 - 15*d^2*n4 - 4*n1*n4 + 2*d*n1*n4 - 42*n2*n4 + 
      11*d*n2*n4 - 2*n1*n2*n4 - 2*n2^2*n4 - 92*n3*n4 + 22*d*n3*n4 - 
      6*n2*n3*n4 - 8*n3^2*n4 - 108*n4^2 + 30*d*n4^2 - 10*n2*n4^2 - 
      24*n3*n4^2 - 16*n4^3)*j[p4, n1, n2, -1 + n3, 2 + n4, 0, 0, 0, 1, 0, 1, 
      1, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((112 - 76*d + 13*d^2 + 4*n1 - 2*d*n1 + 28*n2 - 10*d*n2 + 2*n1*n2 + 
      2*n2^2 + 60*n3 - 20*d*n3 + 6*n2*n3 + 8*n3^2 + 184*n4 - 100*d*n4 + 
      13*d^2*n4 + 4*n1*n4 - 2*d*n1*n4 + 36*n2*n4 - 10*d*n2*n4 + 2*n1*n2*n4 + 
      2*n2^2*n4 + 80*n3*n4 - 20*d*n3*n4 + 6*n2*n3*n4 + 8*n3^2*n4 + 84*n4^2 - 
      24*d*n4^2 + 8*n2*n4^2 + 20*n3*n4^2 + 12*n4^3)*
     j[p4, n1, n2, -1 + n3, 2 + n4, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((24 - 14*d + 2*d^2 + 4*n2 - d*n2 + 8*n3 - 2*d*n3 + 44*n4 - 20*d*n4 + 
      2*d^2*n4 + 6*n2*n4 - d*n2*n4 + 12*n3*n4 - 2*d*n3*n4 + 24*n4^2 - 
      6*d*n4^2 + 2*n2*n4^2 + 4*n3*n4^2 + 4*n4^3)*j[p4, n1, n2, -1 + n3, 
      2 + n4, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1])/(2*(3 - d + n4)*
     (64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 
      2*d*n3 - 44*n4 + 20*d*n4 - 2*d^2*n4 - 6*n2*n4 + d*n2*n4 - 12*n3*n4 + 
      2*d*n3*n4 - 24*n4^2 + 6*d*n4^2 - 2*n2*n4^2 - 4*n3*n4^2 - 4*n4^3)*
     j[p4, n1, n2, -1 + n3, 2 + n4, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1])/
    (2*(3 - d + n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((72 - 54*d + 10*d^2 + 12*n1 - 4*d*n1 + 24*n2 - 9*d*n2 + 2*n1*n2 + 
      2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 36*n4 - 14*d*n4 + 
      4*n1*n4 + 6*n2*n4 + 12*n3*n4 + 4*n4^2)*j[p4, n1, n2, n3, n4, 0, 0, 0, 
      1, 0, 1, 1, 0, 1, 2])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((72 - 54*d + 10*d^2 + 12*n1 - 4*d*n1 + 24*n2 - 9*d*n2 + 2*n1*n2 + 
      2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 36*n4 - 14*d*n4 + 
      4*n1*n4 + 6*n2*n4 + 12*n3*n4 + 4*n4^2)*j[p4, n1, n2, n3, n4, 0, 1, 0, 
      0, 0, 1, 1, 0, 1, 2])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((72 - 54*d + 10*d^2 + 12*n1 - 4*d*n1 + 24*n2 - 9*d*n2 + 2*n1*n2 + 
      2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 36*n4 - 14*d*n4 + 
      4*n1*n4 + 6*n2*n4 + 12*n3*n4 + 4*n4^2)*j[p4, n1, n2, n3, n4, 0, 1, 0, 
      1, 0, 1, 1, 0, 0, 2])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   j[p4, n1, n2, n3, n4, 0, 2, 0, 0, 0, 1, 1, 0, 1, 1]/(2*(-3 + d - n4)) + 
   ((8 - 6*d + d^2 + 8*n1 - 2*d*n1 + 4*n2 - d*n2 + 4*n4 - 2*d*n4 + 4*n1*n4 + 
      2*n2*n4)*j[p4, n1, n2, n3, n4, 0, 2, 0, 1, 0, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   j[p4, n1, n2, n3, n4, 0, 2, 0, 1, 0, 1, 1, 0, 0, 1]/(2*(-3 + d - n4)) + 
   j[p4, n1, n2, n3, n4, 0, 2, 0, 1, 0, 1, 1, 0, 1, 0]/(2*(-3 + d - n4)) + 
   ((-32 + 20*d - 3*d^2 - 8*n1 + 2*d*n1 - 8*n2 + 2*d*n2 - 8*n3 + 2*d*n3 - 
      24*n4 + 8*d*n4 - 4*n1*n4 - 4*n2*n4 - 4*n3*n4 - 4*n4^2)*
     j[p4, n1, n2, n3, 1 + n4, 0, 0, 0, 1, -1, 1, 1, 0, 1, 2])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((32 - 20*d + 3*d^2 + 8*n1 - 2*d*n1 + 8*n2 - 2*d*n2 + 8*n3 - 2*d*n3 + 
      96*n4 - 62*d*n4 + 10*d^2*n4 + 16*n1*n4 - 4*d*n1*n4 + 28*n2*n4 - 
      9*d*n2*n4 + 2*n1*n2*n4 + 2*n2^2*n4 + 48*n3*n4 - 16*d*n3*n4 + 
      6*n2*n3*n4 + 8*n3^2*n4 + 40*n4^2 - 14*d*n4^2 + 4*n1*n4^2 + 6*n2*n4^2 + 
      12*n3*n4^2 + 4*n4^3)*j[p4, n1, n2, n3, 1 + n4, 0, 0, 0, 1, 0, 1, 1, 0, 
      1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 
      8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 
      32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((32 - 20*d + 3*d^2 + 8*n1 - 2*d*n1 + 8*n2 - 2*d*n2 + 8*n3 - 2*d*n3 + 
      24*n4 - 8*d*n4 + 4*n1*n4 + 4*n2*n4 + 4*n3*n4 + 4*n4^2)*
     j[p4, n1, n2, n3, 1 + n4, 0, 0, 0, 1, 0, 1, 1, 0, 1, 2])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((24 - 14*d + 2*d^2 + 4*n2 - d*n2 + 8*n3 - 2*d*n3 + 20*n4 - 6*d*n4 + 
      2*n2*n4 + 4*n3*n4 + 4*n4^2)*j[p4, n1, n2, n3, 1 + n4, 0, 1, -1, 0, 0, 
      1, 2, 0, 1, 1])/((-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-8 + 6*d - d^2 - 8*n1 + 2*d*n1 - 4*n2 + d*n2 - 4*n4 + 2*d*n4 - 4*n1*n4 - 
      2*n2*n4)*j[p4, n1, n2, n3, 1 + n4, 0, 1, -1, 0, 0, 2, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-8 + 6*d - d^2 - 8*n1 + 2*d*n1 - 4*n2 + d*n2 - 4*n4 + 2*d*n4 - 4*n1*n4 - 
      2*n2*n4)*j[p4, n1, n2, n3, 1 + n4, 0, 1, -1, 1, 0, 2, 0, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-8 + 6*d - d^2 - 8*n1 + 2*d*n1 - 4*n2 + d*n2 - 4*n4 + 2*d*n4 - 4*n1*n4 - 
      2*n2*n4)*j[p4, n1, n2, n3, 1 + n4, 0, 1, -1, 1, 0, 2, 1, 0, 0, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((24 - 14*d + 2*d^2 + 4*n2 - d*n2 + 8*n3 - 2*d*n3 + 20*n4 - 6*d*n4 + 
      2*n2*n4 + 4*n3*n4 + 4*n4^2)*j[p4, n1, n2, n3, 1 + n4, 0, 1, -1, 2, 0, 
      1, 0, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((24 - 14*d + 2*d^2 + 4*n2 - d*n2 + 8*n3 - 2*d*n3 + 20*n4 - 6*d*n4 + 
      2*n2*n4 + 4*n3*n4 + 4*n4^2)*j[p4, n1, n2, n3, 1 + n4, 0, 1, -1, 2, 0, 
      1, 1, 0, 0, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-32 + 20*d - 3*d^2 - 8*n1 + 2*d*n1 - 8*n2 + 2*d*n2 - 8*n3 + 2*d*n3 - 
      24*n4 + 8*d*n4 - 4*n1*n4 - 4*n2*n4 - 4*n3*n4 - 4*n4^2)*
     j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 0, -1, 1, 1, 0, 1, 2])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-64 + 36*d - 5*d^2 - 16*n1 + 12*d*n1 - 2*d^2*n1 - 16*n2 + 4*d*n2 + 
      12*n1*n2 - 3*d*n1*n2 + 4*n2^2 - d*n2^2 + 56*n3 - 38*d*n3 + 6*d^2*n3 - 
      24*n1*n3 + 6*d*n1*n3 + 32*n3^2 - 8*d*n3^2 - 120*n4 + 64*d*n4 - 
      9*d^2*n4 - 20*n1*n4 + 8*d*n1*n4 - 36*n2*n4 + 10*d*n2*n4 + 4*n1*n2*n4 + 
      16*n3*n4 - 4*d*n3*n4 - 12*n1*n3*n4 - 6*n2*n3*n4 + 8*n3^2*n4 - 44*n4^2 + 
      12*d*n4^2 - 4*n1*n4^2 - 8*n2*n4^2 + 4*n3*n4^2 - 4*n4^3)*
     j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((32 - 20*d + 3*d^2 + 8*n1 - 2*d*n1 + 8*n2 - 2*d*n2 + 8*n3 - 2*d*n3 + 
      24*n4 - 8*d*n4 + 4*n1*n4 + 4*n2*n4 + 4*n3*n4 + 4*n4^2)*
     j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 0, 0, 1, 1, 0, 1, 2])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 - 20*n4 + 6*d*n4 - 
      2*n2*n4 - 4*n3*n4 - 4*n4^2)*j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 0, 0, 1, 
      2, -1, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((24 - 14*d + 2*d^2 + 4*n2 - d*n2 + 8*n3 - 2*d*n3 + 20*n4 - 6*d*n4 + 
      2*n2*n4 + 4*n3*n4 + 4*n4^2)*j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 0, 0, 1, 
      2, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-32 + 20*d - 3*d^2 - 8*n1 + 2*d*n1 - 8*n2 + 2*d*n2 - 8*n3 + 2*d*n3 - 
      24*n4 + 8*d*n4 - 4*n1*n4 - 4*n2*n4 - 4*n3*n4 - 4*n4^2)*
     j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 1, -1, 1, 1, 0, 0, 2])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((48 - 28*d + 4*d^2 - 24*n1 + 14*d*n1 - 2*d^2*n1 - 48*n2 + 32*d*n2 - 
      5*d^2*n2 - 12*n1*n2 + 3*d*n1*n2 - 12*n2^2 + 3*d*n2^2 - 32*n3 + 
      24*d*n3 - 4*d^2*n3 - 8*n1*n3 + 2*d*n1*n3 - 24*n2*n3 + 6*d*n2*n3 - 
      16*n3^2 + 4*d*n3^2 + 48*n4 - 18*d*n4 + d^2*n4 - 12*n1*n4 + 4*d*n1*n4 - 
      36*n2*n4 + 13*d*n2*n4 - 6*n1*n2*n4 - 6*n2^2*n4 - 32*n3*n4 + 
      12*d*n3*n4 - 4*n1*n3*n4 - 12*n2*n3*n4 - 8*n3^2*n4 + 12*n4^2 - 
      2*d*n4^2 - 6*n2*n4^2 - 8*n3*n4^2)*j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 1, 
      0, 0, 1, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 - 20*n4 + 6*d*n4 - 
      2*n2*n4 - 4*n3*n4 - 4*n4^2)*j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 0, 
      2, -1, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((24 - 14*d + 2*d^2 + 4*n2 - d*n2 + 8*n3 - 2*d*n3 + 20*n4 - 6*d*n4 + 
      2*n2*n4 + 4*n3*n4 + 4*n4^2)*j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 0, 
      2, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((24*n1 - 14*d*n1 + 2*d^2*n1 + 4*n1*n2 - d*n1*n2 + 48*n3 - 28*d*n3 + 
      4*d^2*n3 + 8*n1*n3 - 2*d*n1*n3 + 8*n2*n3 - 2*d*n2*n3 + 16*n3^2 - 
      4*d*n3^2 - 8*n4 + 6*d*n4 - d^2*n4 + 12*n1*n4 - 4*d*n1*n4 - 4*n2*n4 + 
      d*n2*n4 + 2*n1*n2*n4 + 40*n3*n4 - 12*d*n3*n4 + 4*n1*n3*n4 + 
      4*n2*n3*n4 + 8*n3^2*n4 - 4*n4^2 + 2*d*n4^2 - 2*n2*n4^2 + 8*n3*n4^2)*
     j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-48 + 28*d - 4*d^2 - 40*n2 + 18*d*n2 - 2*d^2*n2 + 16*n1*n2 - 4*d*n1*n2 + 
      48*n3 - 32*d*n3 + 5*d^2*n3 - 8*n1*n3 + 2*d*n1*n3 - 8*n2*n3 + 
      2*d*n2*n3 + 24*n3^2 - 6*d*n3^2 - 40*n4 + 12*d*n4 - 36*n2*n4 + 
      8*d*n2*n4 + 8*n1*n2*n4 + 48*n3*n4 - 16*d*n3*n4 - 4*n1*n3*n4 - 
      4*n2*n3*n4 + 12*n3^2*n4 - 8*n4^2 - 8*n2*n4^2 + 12*n3*n4^2)*
     j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((32 - 20*d + 3*d^2 + 8*n1 - 2*d*n1 + 8*n2 - 2*d*n2 + 8*n3 - 2*d*n3 + 
      24*n4 - 8*d*n4 + 4*n1*n4 + 4*n2*n4 + 4*n3*n4 + 4*n4^2)*
     j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 + 44*n4 - 42*d*n4 + 
      9*d^2*n4 + 4*n1*n4 - 2*d*n1*n4 + 18*n2*n4 - 8*d*n2*n4 + 2*n1*n2*n4 + 
      2*n2^2*n4 + 40*n3*n4 - 16*d*n3*n4 + 6*n2*n3*n4 + 8*n3^2*n4 + 28*n4^2 - 
      12*d*n4^2 + 4*n2*n4^2 + 12*n3*n4^2 + 4*n4^3)*j[p4, n1, n2, n3, 1 + n4, 
      0, 1, 0, 1, 0, 1, 1, 0, 1, 0])/(2*(-3 + d - n4)*
     (64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((48 - 40*d + 11*d^2 - d^3 - 8*n2 + 6*d*n2 - 
      d^2*n2 - 4*n1*n2 + d*n1*n2 - 4*n2^2 + d*n2^2 + 40*n3 - 22*d*n3 + 
      3*d^2*n3 + 8*n3^2 - 2*d*n3^2 + 64*n4 - 36*d*n4 + 5*d^2*n4 - 4*n2*n4 + 
      2*d*n2*n4 - 2*n1*n2*n4 - 2*n2^2*n4 + 36*n3*n4 - 10*d*n3*n4 + 
      4*n3^2*n4 + 28*n4^2 - 8*d*n4^2 + 8*n3*n4^2 + 4*n4^3)*
     j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((8 - 6*d + d^2 + 8*n1 - 2*d*n1 + 4*n2 - d*n2 + 4*n4 - 2*d*n4 + 4*n1*n4 + 
      2*n2*n4)*j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 2, 0, -1, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-8 + 6*d - d^2 - 8*n1 + 2*d*n1 - 4*n2 + d*n2 - 4*n4 + 2*d*n4 - 4*n1*n4 - 
      2*n2*n4)*j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 2, 0, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 - 20*n4 + 6*d*n4 - 
      2*n2*n4 - 4*n3*n4 - 4*n4^2)*j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 2, 0, 1, 
      0, -1, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   j[p4, n1, n2, n3, 1 + n4, 0, 2, -1, 0, 0, 1, 1, 0, 1, 1]/
    (2*(-3 + d - n4)) + ((24 - 14*d + 2*d^2 + 4*n2 - d*n2 + 8*n3 - 2*d*n3 + 
      20*n4 - 6*d*n4 + 2*n2*n4 + 4*n3*n4 + 4*n4^2)*j[p4, n1, n2, n3, 1 + n4, 
      0, 2, -1, 1, 0, 0, 1, 0, 1, 1])/(2*(-3 + d - n4)*
     (64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((16 - 8*d + d^2 - 8*n1 + 2*d*n1 + 8*n3 - 
      2*d*n3 + 16*n4 - 4*d*n4 - 4*n1*n4 + 4*n3*n4 + 4*n4^2)*
     j[p4, n1, n2, n3, 1 + n4, 0, 2, 0, 0, -1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   j[p4, n1, n2, n3, 1 + n4, 0, 2, 0, 0, 0, 1, 1, -1, 1, 1]/
    (2*(-3 + d - n4)) + ((24 - 14*d + 2*d^2 + 4*n2 - d*n2 + 8*n3 - 2*d*n3 + 
      20*n4 - 6*d*n4 + 2*n2*n4 + 4*n3*n4 + 4*n4^2)*j[p4, n1, n2, n3, 1 + n4, 
      0, 2, 0, 1, -1, 1, 1, 0, 0, 1])/(2*(-3 + d - n4)*
     (64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((24 - 14*d + 2*d^2 + 4*n2 - d*n2 + 8*n3 - 
      2*d*n3 + 20*n4 - 6*d*n4 + 2*n2*n4 + 4*n3*n4 + 4*n4^2)*
     j[p4, n1, n2, n3, 1 + n4, 0, 2, 0, 1, -1, 1, 1, 0, 1, 0])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 - 20*n4 + 6*d*n4 - 
      2*n2*n4 - 4*n3*n4 - 4*n4^2)*j[p4, n1, n2, n3, 1 + n4, 0, 2, 0, 1, 0, 0, 
      1, -1, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((32 - 20*d + 3*d^2 + 8*n1 - 2*d*n1 + 8*n2 - 2*d*n2 + 8*n3 - 2*d*n3 + 
      56*n4 - 28*d*n4 + 3*d^2*n4 + 12*n1*n4 - 2*d*n1*n4 + 12*n2*n4 - 
      2*d*n2*n4 + 12*n3*n4 - 2*d*n3*n4 + 28*n4^2 - 8*d*n4^2 + 4*n1*n4^2 + 
      4*n2*n4^2 + 4*n3*n4^2 + 4*n4^3)*j[p4, n1, n2, n3, 2 + n4, 0, 0, -1, 1, 
      0, 1, 1, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-32 + 20*d - 3*d^2 - 8*n1 + 2*d*n1 - 8*n2 + 2*d*n2 - 8*n3 + 2*d*n3 - 
      56*n4 + 28*d*n4 - 3*d^2*n4 - 12*n1*n4 + 2*d*n1*n4 - 12*n2*n4 + 
      2*d*n2*n4 - 12*n3*n4 + 2*d*n3*n4 - 28*n4^2 + 8*d*n4^2 - 4*n1*n4^2 - 
      4*n2*n4^2 - 4*n3*n4^2 - 4*n4^3)*j[p4, n1, n2, n3, 2 + n4, 0, 0, 0, 1, 
      -1, 1, 1, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-32 + 20*d - 3*d^2 - 8*n1 + 2*d*n1 - 8*n2 + 2*d*n2 - 8*n3 + 2*d*n3 - 
      56*n4 + 28*d*n4 - 3*d^2*n4 - 12*n1*n4 + 2*d*n1*n4 - 12*n2*n4 + 
      2*d*n2*n4 - 12*n3*n4 + 2*d*n3*n4 - 28*n4^2 + 8*d*n4^2 - 4*n1*n4^2 - 
      4*n2*n4^2 - 4*n3*n4^2 - 4*n4^3)*j[p4, n1, n2, n3, 2 + n4, 0, 1, -1, 0, 
      0, 1, 1, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((24 - 14*d + 2*d^2 + 4*n2 - d*n2 + 8*n3 - 2*d*n3 + 44*n4 - 20*d*n4 + 
      2*d^2*n4 + 6*n2*n4 - d*n2*n4 + 12*n3*n4 - 2*d*n3*n4 + 24*n4^2 - 
      6*d*n4^2 + 2*n2*n4^2 + 4*n3*n4^2 + 4*n4^3)*j[p4, n1, n2, n3, 2 + n4, 0, 
      1, -1, 1, 0, 1, 1, 0, 1, 0])/(2*(3 - d + n4)*(64 - 48*d + 9*d^2 + 
      4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((32 - 20*d + 3*d^2 + 8*n1 - 2*d*n1 + 8*n2 - 2*d*n2 + 8*n3 - 2*d*n3 + 
      56*n4 - 28*d*n4 + 3*d^2*n4 + 12*n1*n4 - 2*d*n1*n4 + 12*n2*n4 - 
      2*d*n2*n4 + 12*n3*n4 - 2*d*n3*n4 + 28*n4^2 - 8*d*n4^2 + 4*n1*n4^2 + 
      4*n2*n4^2 + 4*n3*n4^2 + 4*n4^3)*j[p4, n1, n2, n3, 2 + n4, 0, 1, 0, 0, 
      -1, 1, 1, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 - 44*n4 + 20*d*n4 - 
      2*d^2*n4 - 6*n2*n4 + d*n2*n4 - 12*n3*n4 + 2*d*n3*n4 - 24*n4^2 + 
      6*d*n4^2 - 2*n2*n4^2 - 4*n3*n4^2 - 4*n4^3)*j[p4, n1, n2, n3, 2 + n4, 0, 
      1, 0, 1, -1, 1, 1, 0, 1, 0])/(2*(3 - d + n4)*(64 - 48*d + 9*d^2 + 
      4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-32*n3 + 20*d*n3 - 3*d^2*n3 - 8*n1*n3 + 2*d*n1*n3 - 8*n2*n3 + 
      2*d*n2*n3 - 8*n3^2 + 2*d*n3^2 - 24*n3*n4 + 8*d*n3*n4 - 4*n1*n3*n4 - 
      4*n2*n3*n4 - 4*n3^2*n4 - 4*n3*n4^2)*j[p4, n1, n2, 1 + n3, 1 + n4, 0, 1, 
      -1, 0, 0, 1, 1, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((32*n3 - 20*d*n3 + 3*d^2*n3 + 8*n1*n3 - 2*d*n1*n3 + 8*n2*n3 - 2*d*n2*n3 + 
      8*n3^2 - 2*d*n3^2 + 24*n3*n4 - 8*d*n3*n4 + 4*n1*n3*n4 + 4*n2*n3*n4 + 
      4*n3^2*n4 + 4*n3*n4^2)*j[p4, n1, n2, 1 + n3, 1 + n4, 0, 1, -1, 1, 0, 0, 
      1, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-32*n3 + 20*d*n3 - 3*d^2*n3 - 8*n1*n3 + 2*d*n1*n3 - 8*n2*n3 + 
      2*d*n2*n3 - 8*n3^2 + 2*d*n3^2 - 24*n3*n4 + 8*d*n3*n4 - 4*n1*n3*n4 - 
      4*n2*n3*n4 - 4*n3^2*n4 - 4*n3*n4^2)*j[p4, n1, n2, 1 + n3, 1 + n4, 0, 1, 
      -1, 1, 0, 1, 0, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-32*n3 + 20*d*n3 - 3*d^2*n3 - 8*n1*n3 + 2*d*n1*n3 - 8*n2*n3 + 
      2*d*n2*n3 - 8*n3^2 + 2*d*n3^2 - 24*n3*n4 + 8*d*n3*n4 - 4*n1*n3*n4 - 
      4*n2*n3*n4 - 4*n3^2*n4 - 4*n3*n4^2)*j[p4, n1, n2, 1 + n3, 1 + n4, 0, 1, 
      -1, 1, 0, 1, 1, 0, 0, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-32*n3 + 20*d*n3 - 3*d^2*n3 - 8*n1*n3 + 2*d*n1*n3 - 8*n2*n3 + 
      2*d*n2*n3 - 8*n3^2 + 2*d*n3^2 - 24*n3*n4 + 8*d*n3*n4 - 4*n1*n3*n4 - 
      4*n2*n3*n4 - 4*n3^2*n4 - 4*n3*n4^2)*j[p4, n1, n2, 1 + n3, 1 + n4, 0, 1, 
      0, 0, 0, 1, 1, -1, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((32*n3 - 20*d*n3 + 3*d^2*n3 + 8*n1*n3 - 2*d*n1*n3 + 8*n2*n3 - 2*d*n2*n3 + 
      8*n3^2 - 2*d*n3^2 + 24*n3*n4 - 8*d*n3*n4 + 4*n1*n3*n4 + 4*n2*n3*n4 + 
      4*n3^2*n4 + 4*n3*n4^2)*j[p4, n1, n2, 1 + n3, 1 + n4, 0, 1, 0, 0, 0, 1, 
      1, 0, 1, 1])/((-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-32*n3 + 20*d*n3 - 3*d^2*n3 - 8*n1*n3 + 2*d*n1*n3 - 8*n2*n3 + 
      2*d*n2*n3 - 8*n3^2 + 2*d*n3^2 - 24*n3*n4 + 8*d*n3*n4 - 4*n1*n3*n4 - 
      4*n2*n3*n4 - 4*n3^2*n4 - 4*n3*n4^2)*j[p4, n1, n2, 1 + n3, 1 + n4, 0, 1, 
      0, 1, 0, 0, 1, -1, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((32*n3 - 20*d*n3 + 3*d^2*n3 + 8*n1*n3 - 2*d*n1*n3 + 8*n2*n3 - 2*d*n2*n3 + 
      8*n3^2 - 2*d*n3^2 + 24*n3*n4 - 8*d*n3*n4 + 4*n1*n3*n4 + 4*n2*n3*n4 + 
      4*n3^2*n4 + 4*n3*n4^2)*j[p4, n1, n2, 1 + n3, 1 + n4, 0, 1, 0, 1, 0, 1, 
      0, -1, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((32*n3 - 20*d*n3 + 3*d^2*n3 + 8*n1*n3 - 2*d*n1*n3 + 8*n2*n3 - 2*d*n2*n3 + 
      8*n3^2 - 2*d*n3^2 + 24*n3*n4 - 8*d*n3*n4 + 4*n1*n3*n4 + 4*n2*n3*n4 + 
      4*n3^2*n4 + 4*n3*n4^2)*j[p4, n1, n2, 1 + n3, 1 + n4, 0, 1, 0, 1, 0, 1, 
      1, 0, 0, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((8*n2 - 6*d*n2 + d^2*n2 + 8*n1*n2 - 2*d*n1*n2 + 4*n2^2 - d*n2^2 + 
      4*n2*n4 - 2*d*n2*n4 + 4*n1*n2*n4 + 2*n2^2*n4)*
     j[p4, n1, 1 + n2, -1 + n3, 1 + n4, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-72*n2 + 42*d*n2 - 6*d^2*n2 - 12*n2^2 + 3*d*n2^2 - 24*n2*n3 + 
      6*d*n2*n3 - 60*n2*n4 + 18*d*n2*n4 - 6*n2^2*n4 - 12*n2*n3*n4 - 
      12*n2*n4^2)*j[p4, n1, 1 + n2, -1 + n3, 1 + n4, 0, 1, 0, 1, 0, 0, 1, 0, 
      1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 
      8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 
      32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-8*n2 + 6*d*n2 - d^2*n2 - 8*n1*n2 + 2*d*n1*n2 - 4*n2^2 + d*n2^2 - 
      4*n2*n4 + 2*d*n2*n4 - 4*n1*n2*n4 - 2*n2^2*n4)*
     j[p4, n1, 1 + n2, n3, 1 + n4, 0, 1, -1, 0, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((80*n2 - 48*d*n2 + 7*d^2*n2 + 8*n1*n2 - 2*d*n1*n2 + 16*n2^2 - 4*d*n2^2 + 
      24*n2*n3 - 6*d*n2*n3 + 64*n2*n4 - 20*d*n2*n4 + 4*n1*n2*n4 + 8*n2^2*n4 + 
      12*n2*n3*n4 + 12*n2*n4^2)*j[p4, n1, 1 + n2, n3, 1 + n4, 0, 1, -1, 1, 0, 
      0, 1, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-8*n2 + 6*d*n2 - d^2*n2 - 8*n1*n2 + 2*d*n1*n2 - 4*n2^2 + d*n2^2 - 
      4*n2*n4 + 2*d*n2*n4 - 4*n1*n2*n4 - 2*n2^2*n4)*
     j[p4, n1, 1 + n2, n3, 1 + n4, 0, 1, -1, 1, 0, 1, 1, 0, 0, 1])/
    ((-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-16*n2 + 8*d*n2 - d^2*n2 + 8*n1*n2 - 2*d*n1*n2 - 8*n2*n3 + 2*d*n2*n3 - 
      16*n2*n4 + 4*d*n2*n4 + 4*n1*n2*n4 - 4*n2*n3*n4 - 4*n2*n4^2)*
     j[p4, n1, 1 + n2, n3, 1 + n4, 0, 1, -1, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((8*n2 - 6*d*n2 + d^2*n2 + 8*n1*n2 - 2*d*n1*n2 + 4*n2^2 - d*n2^2 + 
      4*n2*n4 - 2*d*n2*n4 + 4*n1*n2*n4 + 2*n2^2*n4)*
     j[p4, n1, 1 + n2, n3, 1 + n4, 0, 1, 0, 0, 0, 1, 1, -1, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((16*n2 - 8*d*n2 + d^2*n2 - 8*n1*n2 + 2*d*n1*n2 + 8*n2*n3 - 2*d*n2*n3 + 
      16*n2*n4 - 4*d*n2*n4 - 4*n1*n2*n4 + 4*n2*n3*n4 + 4*n2*n4^2)*
     j[p4, n1, 1 + n2, n3, 1 + n4, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-56*n2 + 34*d*n2 - 5*d^2*n2 - 8*n1*n2 + 2*d*n1*n2 - 12*n2^2 + 3*d*n2^2 - 
      16*n2*n3 + 4*d*n2*n3 - 44*n2*n4 + 14*d*n2*n4 - 4*n1*n2*n4 - 6*n2^2*n4 - 
      8*n2*n3*n4 - 8*n2*n4^2)*j[p4, n1, 1 + n2, n3, 1 + n4, 0, 1, 0, 1, 0, 0, 
      1, -1, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((24*n1 - 14*d*n1 + 2*d^2*n1 + 4*n1*n2 - d*n1*n2 + 8*n1*n3 - 2*d*n1*n3 + 
      20*n1*n4 - 6*d*n1*n4 + 2*n1*n2*n4 + 4*n1*n3*n4 + 4*n1*n4^2)*
     j[p4, 1 + n1, -1 + n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4)*(-64 + 48*d - 9*d^2 - 4*n1 + 2*d*n1 - 20*n2 + 8*d*n2 - 
      2*n1*n2 - 2*n2^2 - 44*n3 + 16*d*n3 - 6*n2*n3 - 8*n3^2 - 32*n4 + 
      12*d*n4 - 4*n2*n4 - 12*n3*n4 - 4*n4^2)) + 
   ((-24*n1 + 14*d*n1 - 2*d^2*n1 - 4*n1*n2 + d*n1*n2 - 8*n1*n3 + 2*d*n1*n3 - 
      20*n1*n4 + 6*d*n1*n4 - 2*n1*n2*n4 - 4*n1*n3*n4 - 4*n1*n4^2)*
     j[p4, 1 + n1, n2, n3, 1 + n4, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(-64 + 48*d - 9*d^2 - 4*n1 + 2*d*n1 - 20*n2 + 8*d*n2 - 
      2*n1*n2 - 2*n2^2 - 44*n3 + 16*d*n3 - 6*n2*n3 - 8*n3^2 - 32*n4 + 
      12*d*n4 - 4*n2*n4 - 12*n3*n4 - 4*n4^2)) + 
   ((-24*n1 + 14*d*n1 - 2*d^2*n1 - 4*n1*n2 + d*n1*n2 - 8*n1*n3 + 2*d*n1*n3 - 
      20*n1*n4 + 6*d*n1*n4 - 2*n1*n2*n4 - 4*n1*n3*n4 - 4*n1*n4^2)*
     j[p4, 1 + n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(-64 + 48*d - 9*d^2 - 4*n1 + 2*d*n1 - 20*n2 + 8*d*n2 - 
      2*n1*n2 - 2*n2^2 - 44*n3 + 16*d*n3 - 6*n2*n3 - 8*n3^2 - 32*n4 + 
      12*d*n4 - 4*n2*n4 - 12*n3*n4 - 4*n4^2)) + 
   ((24*n1 - 14*d*n1 + 2*d^2*n1 + 4*n1*n2 - d*n1*n2 + 8*n1*n3 - 2*d*n1*n3 + 
      20*n1*n4 - 6*d*n1*n4 + 2*n1*n2*n4 + 4*n1*n3*n4 + 4*n1*n4^2)*
     j[p4, 1 + n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1])/
    (2*(-3 + d - n4)*(-64 + 48*d - 9*d^2 - 4*n1 + 2*d*n1 - 20*n2 + 8*d*n2 - 
      2*n1*n2 - 2*n2^2 - 44*n3 + 16*d*n3 - 6*n2*n3 - 8*n3^2 - 32*n4 + 
      12*d*n4 - 4*n2*n4 - 12*n3*n4 - 4*n4^2)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n6 == 1 && n7 == 0 && n8 == 1 && n9 == 0 && n5 != 0 -> 
  ((-128 + 112*d - 24*d^2 + 48*n1 - 16*d*n1 - 112*n3 + 44*d*n3 + 8*n1*n3 - 
      16*n3^2 - 128*n4 + 52*d*n4 + 8*n1*n4 - 40*n3*n4 - 24*n4^2 - 32*n5 + 
      16*d*n5 + 16*n1*n5 - 24*n3*n5 - 24*n4*n5)*j[p4, -1 + n1, 0, n3, n4, 
      1 + n5, 0, 0, 1, 0, 1, 2, 0, 1, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 
     80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-64 + 56*d - 12*d^2 + 24*n1 - 8*d*n1 - 56*n3 + 22*d*n3 + 4*n1*n3 - 
      8*n3^2 - 64*n4 + 26*d*n4 + 4*n1*n4 - 20*n3*n4 - 12*n4^2 - 16*n5 + 
      8*d*n5 + 8*n1*n5 - 12*n3*n5 - 12*n4*n5)*j[p4, -1 + n1, 0, n3, n4, 
      1 + n5, 0, 0, 2, 0, 1, 1, 0, 1, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 
     80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((96 - 176*d + 98*d^2 - 17*d^3 + 16*d*n1 - 6*d^2*n1 + 192*n3 - 208*d*n3 + 
      52*d^2*n3 - 32*n1*n3 + 16*d*n1*n3 + 112*n3^2 - 52*d*n3^2 - 8*n1*n3^2 + 
      16*n3^3 + 224*n4 - 240*d*n4 + 60*d^2*n4 - 32*n1*n4 + 16*d*n1*n4 + 
      256*n3*n4 - 120*d*n3*n4 - 16*n1*n3*n4 + 56*n3^2*n4 + 144*n4^2 - 
      68*d*n4^2 - 8*n1*n4^2 + 64*n3*n4^2 + 24*n4^3 - 64*n5 + 40*d*n5 - 
      4*d^2*n5 + 32*n1*n5 - 8*d*n1*n5 - 32*n3*n5 + 8*n3^2*n5 - 32*n4*n5 + 
      16*n3*n4*n5 + 8*n4^2*n5 - 24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 
      16*n3*n5^2 - 16*n4*n5^2)*j[p4, -1 + n1, 0, n3, n4, 1 + n5, 1, 0, 0, 0, 
      1, 1, 0, 2, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-128 + 112*d - 24*d^2 + 48*n1 - 16*d*n1 - 112*n3 + 44*d*n3 + 8*n1*n3 - 
      16*n3^2 - 128*n4 + 52*d*n4 + 8*n1*n4 - 40*n3*n4 - 24*n4^2 - 32*n5 + 
      16*d*n5 + 16*n1*n5 - 24*n3*n5 - 24*n4*n5)*j[p4, -1 + n1, 0, n3, n4, 
      1 + n5, 1, 0, 0, 0, 1, 2, 0, 1, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 
     80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((96 - 208*d + 126*d^2 - 23*d^3 + 96*n1 - 68*d*n1 + 12*d^2*n1 + 4*d*n1^2 + 
      208*n3 - 244*d*n3 + 64*d^2*n3 + 24*n1*n3 - 12*d*n1*n3 - 8*n1^2*n3 + 
      128*n3^2 - 60*d*n3^2 + 8*n1*n3^2 + 16*n3^3 + 240*n4 - 280*d*n4 + 
      74*d^2*n4 + 56*n1*n4 - 24*d*n1*n4 - 8*n1^2*n4 + 280*n3*n4 - 
      136*d*n3*n4 + 24*n1*n3*n4 + 56*n3^2*n4 + 152*n4^2 - 76*d*n4^2 + 
      16*n1*n4^2 + 64*n3*n4^2 + 24*n4^3 - 128*n5 + 88*d*n5 - 12*d^2*n5 + 
      56*n1*n5 - 20*d*n1*n5 + 8*n1^2*n5 - 72*n3*n5 + 12*d*n3*n5 + 8*n3^2*n5 - 
      80*n4*n5 + 16*d*n4*n5 + 8*n1*n4*n5 + 8*n3*n4*n5 - 40*n5^2 + 20*d*n5^2 + 
      8*n1*n5^2 - 24*n3*n5^2 - 24*n4*n5^2)*j[p4, -1 + n1, 0, n3, n4, 1 + n5, 
      1, 0, 0, 0, 2, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5)*
     (-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 
      48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 
      60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 
      260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 16*n1^2*n4 - 
      128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 28*d*n4^2 - 
      48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 
      8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 16*n3^2*n5 - 
      88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 8*n4^2*n5 - 
      8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((64*d - 56*d^2 + 12*d^3 - 24*d*n1 + 8*d^2*n1 - 128*n3 + 168*d*n3 - 
      46*d^2*n3 + 48*n1*n3 - 20*d*n1*n3 - 112*n3^2 + 52*d*n3^2 + 8*n1*n3^2 - 
      16*n3^3 - 128*n4 + 176*d*n4 - 50*d^2*n4 + 48*n1*n4 - 20*d*n1*n4 - 
      240*n3*n4 + 116*d*n3*n4 + 16*n1*n3*n4 - 56*n3^2*n4 - 128*n4^2 + 
      64*d*n4^2 + 8*n1*n4^2 - 64*n3*n4^2 - 24*n4^3 + 128*n5 - 96*d*n5 + 
      16*d^2*n5 - 48*n1*n5 + 8*d*n1*n5 + 80*n3*n5 - 16*d*n3*n5 + 8*n1*n3*n5 - 
      8*n3^2*n5 + 96*n4*n5 - 24*d*n4*n5 + 8*n1*n4*n5 - 8*n3*n4*n5 + 32*n5^2 - 
      16*d*n5^2 - 16*n1*n5^2 + 24*n3*n5^2 + 24*n4*n5^2)*
     j[p4, -1 + n1, 0, n3, n4, 1 + n5, 1, 0, 1, 0, 0, 2, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-768 + 1312*d - 816*d^2 + 218*d^3 - 21*d^4 - 768*n1 + 944*d*n1 - 
      364*d^2*n1 + 44*d^3*n1 + 16*d*n1^2 - 4*d^2*n1^2 - 576*n3 + 672*d*n3 - 
      252*d^2*n3 + 30*d^3*n3 - 608*n1*n3 + 408*d*n1*n3 - 64*d^2*n1*n3 - 
      32*n1^2*n3 + 8*d*n1^2*n3 - 64*n3^2 + 48*d*n3^2 - 8*d^2*n3^2 - 
      64*n1*n3^2 + 16*d*n1*n3^2 - 832*n4 + 976*d*n4 - 368*d^2*n4 + 
      44*d^3*n4 - 864*n1*n4 + 584*d*n1*n4 - 92*d^2*n1*n4 - 32*n1^2*n4 + 
      8*d*n1^2*n4 - 224*n3*n4 + 168*d*n3*n4 - 28*d^2*n3*n4 - 224*n1*n3*n4 + 
      56*d*n1*n3*n4 - 160*n4^2 + 120*d*n4^2 - 20*d^2*n4^2 - 160*n1*n4^2 + 
      40*d*n1*n4^2 - 448*n5 + 672*d*n5 - 324*d^2*n5 + 50*d^3*n5 - 416*n1*n5 + 
      432*d*n1*n5 - 100*d^2*n1*n5 + 32*n1^2*n5 - 384*n3*n5 + 336*d*n3*n5 - 
      72*d^2*n3*n5 - 400*n1*n3*n5 + 152*d*n1*n3*n5 - 16*n1^2*n3*n5 - 
      32*n3^2*n5 + 16*d*n3^2*n5 - 32*n1*n3^2*n5 - 544*n4*n5 + 480*d*n4*n5 - 
      104*d^2*n4*n5 - 560*n1*n4*n5 + 216*d*n1*n4*n5 - 16*n1^2*n4*n5 - 
      112*n3*n4*n5 + 56*d*n3*n4*n5 - 112*n1*n3*n4*n5 - 80*n4^2*n5 + 
      40*d*n4^2*n5 - 80*n1*n4^2*n5 + 24*d*n5^2 - 12*d^2*n5^2 + 16*n1*n5^2 + 
      16*d*n1*n5^2 + 16*n1^2*n5^2 - 48*n3*n5^2 + 24*d*n3*n5^2 - 
      48*n1*n3*n5^2 - 64*n4*n5^2 + 32*d*n4*n5^2 - 64*n1*n4*n5^2 + 16*n5^3 - 
      8*d*n5^3 + 16*n1*n5^3)*j[p4, -1 + n1, 0, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 
      1, 0, 1, 1])/(2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((64 - 56*d + 12*d^2 - 24*n1 + 8*d*n1 + 56*n3 - 22*d*n3 - 4*n1*n3 + 
      8*n3^2 + 64*n4 - 26*d*n4 - 4*n1*n4 + 20*n3*n4 + 12*n4^2 + 16*n5 - 
      8*d*n5 - 8*n1*n5 + 12*n3*n5 + 12*n4*n5)*j[p4, -1 + n1, 0, n3, n4, 
      1 + n5, 1, 0, 1, 0, 1, 1, 0, 2, 0])/(-288 + 384*d - 170*d^2 + 25*d^3 - 
     80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((96 - 208*d + 126*d^2 - 23*d^3 + 96*n1 - 68*d*n1 + 12*d^2*n1 + 4*d*n1^2 + 
      208*n3 - 244*d*n3 + 64*d^2*n3 + 24*n1*n3 - 12*d*n1*n3 - 8*n1^2*n3 + 
      128*n3^2 - 60*d*n3^2 + 8*n1*n3^2 + 16*n3^3 + 240*n4 - 280*d*n4 + 
      74*d^2*n4 + 56*n1*n4 - 24*d*n1*n4 - 8*n1^2*n4 + 280*n3*n4 - 
      136*d*n3*n4 + 24*n1*n3*n4 + 56*n3^2*n4 + 152*n4^2 - 76*d*n4^2 + 
      16*n1*n4^2 + 64*n3*n4^2 + 24*n4^3 - 128*n5 + 88*d*n5 - 12*d^2*n5 + 
      56*n1*n5 - 20*d*n1*n5 + 8*n1^2*n5 - 72*n3*n5 + 12*d*n3*n5 + 8*n3^2*n5 - 
      80*n4*n5 + 16*d*n4*n5 + 8*n1*n4*n5 + 8*n3*n4*n5 - 40*n5^2 + 20*d*n5^2 + 
      8*n1*n5^2 - 24*n3*n5^2 - 24*n4*n5^2)*j[p4, -1 + n1, 0, n3, n4, 1 + n5, 
      1, 0, 1, 0, 2, 1, 0, 0, 1])/(2*(-3 + d - n4 - n5)*
     (-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 
      48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 
      60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 
      260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 16*n1^2*n4 - 
      128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 28*d*n4^2 - 
      48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 
      8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 16*n3^2*n5 - 
      88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 8*n4^2*n5 - 
      8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((288 - 448*d + 226*d^2 - 37*d^3 - 48*n1 + 44*d*n1 - 8*d^2*n1 + 4*d*n1^2 + 
      416*n3 - 408*d*n3 + 96*d^2*n3 - 32*n1*n3 + 4*d*n1*n3 - 8*n1^2*n3 + 
      176*n3^2 - 76*d*n3^2 + 8*n1*n3^2 + 16*n3^3 + 560*n4 - 548*d*n4 + 
      130*d^2*n4 - 48*n1*n4 + 8*d*n1*n4 - 8*n1^2*n4 + 480*n3*n4 - 
      212*d*n3*n4 + 16*n1*n3*n4 + 72*n3^2*n4 + 320*n4^2 - 144*d*n4^2 + 
      8*n1*n4^2 + 104*n3*n4^2 + 48*n4^3 - 32*n5 + 8*d*n5 + 4*d^2*n5 - 
      8*n1*n5 + 12*d*n1*n5 + 8*n1^2*n5 + 16*n3*n5 - 24*d*n3*n5 - 
      24*n1*n3*n5 + 24*n3^2*n5 + 24*n4*n5 - 28*d*n4*n5 - 32*n1*n4*n5 + 
      56*n3*n4*n5 + 32*n4^2*n5 - 24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 
      16*n3*n5^2 - 16*n4*n5^2)*j[p4, -1 + n1, 0, n3, n4, 1 + n5, 1, 0, 2, 0, 
      1, 1, 0, 0, 1])/(2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-96 + 176*d - 98*d^2 + 17*d^3 - 16*d*n1 + 6*d^2*n1 - 192*n3 + 208*d*n3 - 
      52*d^2*n3 + 32*n1*n3 - 16*d*n1*n3 - 112*n3^2 + 52*d*n3^2 + 8*n1*n3^2 - 
      16*n3^3 - 224*n4 + 240*d*n4 - 60*d^2*n4 + 32*n1*n4 - 16*d*n1*n4 - 
      256*n3*n4 + 120*d*n3*n4 + 16*n1*n3*n4 - 56*n3^2*n4 - 144*n4^2 + 
      68*d*n4^2 + 8*n1*n4^2 - 64*n3*n4^2 - 24*n4^3 - 32*n5 + 136*d*n5 - 
      94*d^2*n5 + 17*d^3*n5 - 32*n1*n5 - 8*d*n1*n5 + 6*d^2*n1*n5 - 
      160*n3*n5 + 208*d*n3*n5 - 52*d^2*n3*n5 + 32*n1*n3*n5 - 16*d*n1*n3*n5 - 
      120*n3^2*n5 + 52*d*n3^2*n5 + 8*n1*n3^2*n5 - 16*n3^3*n5 - 192*n4*n5 + 
      240*d*n4*n5 - 60*d^2*n4*n5 + 32*n1*n4*n5 - 16*d*n1*n4*n5 - 
      272*n3*n4*n5 + 120*d*n3*n4*n5 + 16*n1*n3*n4*n5 - 56*n3^2*n4*n5 - 
      152*n4^2*n5 + 68*d*n4^2*n5 + 8*n1*n4^2*n5 - 64*n3*n4^2*n5 - 
      24*n4^3*n5 + 88*n5^2 - 52*d*n5^2 + 4*d^2*n5^2 - 40*n1*n5^2 + 
      8*d*n1*n5^2 + 48*n3*n5^2 - 8*n3^2*n5^2 + 48*n4*n5^2 - 16*n3*n4*n5^2 - 
      8*n4^2*n5^2 + 24*n5^3 - 12*d*n5^3 - 8*n1*n5^3 + 16*n3*n5^3 + 
      16*n4*n5^3)*j[p4, -1 + n1, 0, n3, n4, 2 + n5, 0, 0, 1, 0, 1, 1, 0, 1, 
      1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
      92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-480 + 480*d - 142*d^2 + 11*d^3 + 240*n1 - 148*d*n1 + 24*d^2*n1 + 
      4*d*n1^2 - 256*n3 + 80*d*n3 + 8*d^2*n3 + 16*n1*n3 - 12*d*n1*n3 - 
      8*n1^2*n3 + 80*n3^2 - 44*d*n3^2 + 8*n1*n3^2 + 16*n3^3 - 464*n4 + 
      244*d*n4 - 22*d^2*n4 + 96*n1*n4 - 40*d*n1*n4 - 8*n1^2*n4 + 16*n3*n4 - 
      44*d*n3*n4 + 32*n1*n3*n4 + 40*n3^2*n4 - 80*n4^2 + 8*d*n4^2 + 
      24*n1*n4^2 + 24*n3*n4^2 - 960*n5 + 872*d*n5 - 218*d^2*n5 + 11*d^3*n5 + 
      424*n1*n5 - 200*d*n1*n5 + 24*d^2*n1*n5 + 8*n1^2*n5 + 4*d*n1^2*n5 - 
      608*n3*n5 + 192*d*n3*n5 + 8*d^2*n3*n5 + 8*n1*n3*n5 - 12*d*n1*n3*n5 - 
      8*n1^2*n3*n5 + 72*n3^2*n5 - 44*d*n3^2*n5 + 8*n1*n3^2*n5 + 16*n3^3*n5 - 
      904*n4*n5 + 400*d*n4*n5 - 22*d^2*n4*n5 + 112*n1*n4*n5 - 40*d*n1*n4*n5 - 
      8*n1^2*n4*n5 - 56*n3*n4*n5 - 44*d*n3*n4*n5 + 32*n1*n3*n4*n5 + 
      40*n3^2*n4*n5 - 144*n4^2*n5 + 8*d*n4^2*n5 + 24*n1*n4^2*n5 + 
      24*n3*n4^2*n5 - 568*n5^2 + 436*d*n5^2 - 76*d^2*n5^2 + 224*n1*n5^2 - 
      52*d*n1*n5^2 + 8*n1^2*n5^2 - 416*n3*n5^2 + 112*d*n3*n5^2 - 
      8*n1*n3*n5^2 - 8*n3^2*n5^2 - 504*n4*n5^2 + 156*d*n4*n5^2 + 
      16*n1*n4*n5^2 - 72*n3*n4*n5^2 - 64*n4^2*n5^2 - 88*n5^3 + 44*d*n5^3 + 
      40*n1*n5^3 - 64*n3*n5^3 - 64*n4*n5^3)*j[p4, -1 + n1, 0, n3, n4, 2 + n5, 
      1, 0, 1, 0, 1, 1, 0, 0, 1])/(2*(-3 + d - n4 - n5)*
     (-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 
      48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 
      60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 
      260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 16*n1^2*n4 - 
      128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 28*d*n4^2 - 
      48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 
      8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 16*n3^2*n5 - 
      88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 8*n4^2*n5 - 
      8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((480 - 480*d + 142*d^2 - 11*d^3 - 240*n1 + 148*d*n1 - 24*d^2*n1 - 
      4*d*n1^2 + 256*n3 - 80*d*n3 - 8*d^2*n3 - 16*n1*n3 + 12*d*n1*n3 + 
      8*n1^2*n3 - 80*n3^2 + 44*d*n3^2 - 8*n1*n3^2 - 16*n3^3 + 464*n4 - 
      244*d*n4 + 22*d^2*n4 - 96*n1*n4 + 40*d*n1*n4 + 8*n1^2*n4 - 16*n3*n4 + 
      44*d*n3*n4 - 32*n1*n3*n4 - 40*n3^2*n4 + 80*n4^2 - 8*d*n4^2 - 
      24*n1*n4^2 - 24*n3*n4^2 + 960*n5 - 872*d*n5 + 218*d^2*n5 - 11*d^3*n5 - 
      424*n1*n5 + 200*d*n1*n5 - 24*d^2*n1*n5 - 8*n1^2*n5 - 4*d*n1^2*n5 + 
      608*n3*n5 - 192*d*n3*n5 - 8*d^2*n3*n5 - 8*n1*n3*n5 + 12*d*n1*n3*n5 + 
      8*n1^2*n3*n5 - 72*n3^2*n5 + 44*d*n3^2*n5 - 8*n1*n3^2*n5 - 16*n3^3*n5 + 
      904*n4*n5 - 400*d*n4*n5 + 22*d^2*n4*n5 - 112*n1*n4*n5 + 40*d*n1*n4*n5 + 
      8*n1^2*n4*n5 + 56*n3*n4*n5 + 44*d*n3*n4*n5 - 32*n1*n3*n4*n5 - 
      40*n3^2*n4*n5 + 144*n4^2*n5 - 8*d*n4^2*n5 - 24*n1*n4^2*n5 - 
      24*n3*n4^2*n5 + 568*n5^2 - 436*d*n5^2 + 76*d^2*n5^2 - 224*n1*n5^2 + 
      52*d*n1*n5^2 - 8*n1^2*n5^2 + 416*n3*n5^2 - 112*d*n3*n5^2 + 
      8*n1*n3*n5^2 + 8*n3^2*n5^2 + 504*n4*n5^2 - 156*d*n4*n5^2 - 
      16*n1*n4*n5^2 + 72*n3*n4*n5^2 + 64*n4^2*n5^2 + 88*n5^3 - 44*d*n5^3 - 
      40*n1*n5^3 + 64*n3*n5^3 + 64*n4*n5^3)*j[p4, -1 + n1, 0, n3, n4, 2 + n5, 
      1, 0, 1, 0, 1, 1, 0, 1, 0])/(2*(-3 + d - n4 - n5)*
     (-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 
      48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 
      60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 
      260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 16*n1^2*n4 - 
      128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 28*d*n4^2 - 
      48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 
      8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 16*n3^2*n5 - 
      88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 8*n4^2*n5 - 
      8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-96*n4 + 176*d*n4 - 98*d^2*n4 + 17*d^3*n4 - 16*d*n1*n4 + 6*d^2*n1*n4 - 
      192*n3*n4 + 208*d*n3*n4 - 52*d^2*n3*n4 + 32*n1*n3*n4 - 16*d*n1*n3*n4 - 
      112*n3^2*n4 + 52*d*n3^2*n4 + 8*n1*n3^2*n4 - 16*n3^3*n4 - 224*n4^2 + 
      240*d*n4^2 - 60*d^2*n4^2 + 32*n1*n4^2 - 16*d*n1*n4^2 - 256*n3*n4^2 + 
      120*d*n3*n4^2 + 16*n1*n3*n4^2 - 56*n3^2*n4^2 - 144*n4^3 + 68*d*n4^3 + 
      8*n1*n4^3 - 64*n3*n4^3 - 24*n4^4 + 64*n4*n5 - 40*d*n4*n5 + 
      4*d^2*n4*n5 - 32*n1*n4*n5 + 8*d*n1*n4*n5 + 32*n3*n4*n5 - 8*n3^2*n4*n5 + 
      32*n4^2*n5 - 16*n3*n4^2*n5 - 8*n4^3*n5 + 24*n4*n5^2 - 12*d*n4*n5^2 - 
      8*n1*n4*n5^2 + 16*n3*n4*n5^2 + 16*n4^2*n5^2)*j[p4, -1 + n1, 0, n3, 
      1 + n4, 1 + n5, 0, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96*n4 - 176*d*n4 + 98*d^2*n4 - 17*d^3*n4 + 16*d*n1*n4 - 6*d^2*n1*n4 + 
      192*n3*n4 - 208*d*n3*n4 + 52*d^2*n3*n4 - 32*n1*n3*n4 + 16*d*n1*n3*n4 + 
      112*n3^2*n4 - 52*d*n3^2*n4 - 8*n1*n3^2*n4 + 16*n3^3*n4 + 224*n4^2 - 
      240*d*n4^2 + 60*d^2*n4^2 - 32*n1*n4^2 + 16*d*n1*n4^2 + 256*n3*n4^2 - 
      120*d*n3*n4^2 - 16*n1*n3*n4^2 + 56*n3^2*n4^2 + 144*n4^3 - 68*d*n4^3 - 
      8*n1*n4^3 + 64*n3*n4^3 + 24*n4^4 - 64*n4*n5 + 40*d*n4*n5 - 
      4*d^2*n4*n5 + 32*n1*n4*n5 - 8*d*n1*n4*n5 - 32*n3*n4*n5 + 8*n3^2*n4*n5 - 
      32*n4^2*n5 + 16*n3*n4^2*n5 + 8*n4^3*n5 - 24*n4*n5^2 + 12*d*n4*n5^2 + 
      8*n1*n4*n5^2 - 16*n3*n4*n5^2 - 16*n4^2*n5^2)*j[p4, -1 + n1, 0, n3, 
      1 + n4, 1 + n5, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-288*n4 + 448*d*n4 - 226*d^2*n4 + 37*d^3*n4 + 48*n1*n4 - 44*d*n1*n4 + 
      8*d^2*n1*n4 - 4*d*n1^2*n4 - 416*n3*n4 + 408*d*n3*n4 - 96*d^2*n3*n4 + 
      32*n1*n3*n4 - 4*d*n1*n3*n4 + 8*n1^2*n3*n4 - 176*n3^2*n4 + 
      76*d*n3^2*n4 - 8*n1*n3^2*n4 - 16*n3^3*n4 - 560*n4^2 + 548*d*n4^2 - 
      130*d^2*n4^2 + 48*n1*n4^2 - 8*d*n1*n4^2 + 8*n1^2*n4^2 - 480*n3*n4^2 + 
      212*d*n3*n4^2 - 16*n1*n3*n4^2 - 72*n3^2*n4^2 - 320*n4^3 + 144*d*n4^3 - 
      8*n1*n4^3 - 104*n3*n4^3 - 48*n4^4 + 32*n4*n5 - 8*d*n4*n5 - 
      4*d^2*n4*n5 + 8*n1*n4*n5 - 12*d*n1*n4*n5 - 8*n1^2*n4*n5 - 16*n3*n4*n5 + 
      24*d*n3*n4*n5 + 24*n1*n3*n4*n5 - 24*n3^2*n4*n5 - 24*n4^2*n5 + 
      28*d*n4^2*n5 + 32*n1*n4^2*n5 - 56*n3*n4^2*n5 - 32*n4^3*n5 + 
      24*n4*n5^2 - 12*d*n4*n5^2 - 8*n1*n4*n5^2 + 16*n3*n4*n5^2 + 
      16*n4^2*n5^2)*j[p4, -1 + n1, 0, n3, 1 + n4, 1 + n5, 1, 0, 1, 0, 1, 1, 
      0, 1, 0])/(2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((192*n3 - 352*d*n3 + 196*d^2*n3 - 34*d^3*n3 + 32*d*n1*n3 - 12*d^2*n1*n3 + 
      384*n3^2 - 416*d*n3^2 + 104*d^2*n3^2 - 64*n1*n3^2 + 32*d*n1*n3^2 + 
      224*n3^3 - 104*d*n3^3 - 16*n1*n3^3 + 32*n3^4 + 448*n3*n4 - 
      480*d*n3*n4 + 120*d^2*n3*n4 - 64*n1*n3*n4 + 32*d*n1*n3*n4 + 
      512*n3^2*n4 - 240*d*n3^2*n4 - 32*n1*n3^2*n4 + 112*n3^3*n4 + 
      288*n3*n4^2 - 136*d*n3*n4^2 - 16*n1*n3*n4^2 + 128*n3^2*n4^2 + 
      48*n3*n4^3 - 128*n3*n5 + 80*d*n3*n5 - 8*d^2*n3*n5 + 64*n1*n3*n5 - 
      16*d*n1*n3*n5 - 64*n3^2*n5 + 16*n3^3*n5 - 64*n3*n4*n5 + 32*n3^2*n4*n5 + 
      16*n3*n4^2*n5 - 48*n3*n5^2 + 24*d*n3*n5^2 + 16*n1*n3*n5^2 - 
      32*n3^2*n5^2 - 32*n3*n4*n5^2)*j[p4, -1 + n1, 0, 1 + n3, n4, 1 + n5, 1, 
      0, 0, 0, 1, 1, 0, 1, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96*n3 - 272*d*n3 + 182*d^2*n3 - 35*d^3*n3 + 96*n1*n3 - 44*d*n1*n3 + 
      4*d^2*n1*n3 + 4*d*n1^2*n3 + 336*n3^2 - 412*d*n3^2 + 110*d^2*n3^2 - 
      24*n1*n3^2 + 8*d*n1*n3^2 - 8*n1^2*n3^2 + 240*n3^3 - 112*d*n3^3 + 
      32*n3^4 + 368*n3*n4 - 456*d*n3*n4 + 124*d^2*n3*n4 + 8*n1*n3*n4 - 
      4*d*n1*n3*n4 - 8*n1^2*n3*n4 + 520*n3^2*n4 - 252*d*n3^2*n4 + 
      8*n1*n3^2*n4 + 112*n3^3*n4 + 280*n3*n4^2 - 140*d*n3*n4^2 + 
      8*n1*n3*n4^2 + 128*n3^2*n4^2 + 48*n3*n4^3 - 256*n3*n5 + 184*d*n3*n5 - 
      28*d^2*n3*n5 + 104*n1*n3*n5 - 28*d*n1*n3*n5 + 8*n1^2*n3*n5 - 
      152*n3^2*n5 + 28*d*n3^2*n5 - 8*n1*n3^2*n5 + 16*n3^3*n5 - 176*n3*n4*n5 + 
      40*d*n3*n4*n5 + 16*n3^2*n4*n5 - 72*n3*n5^2 + 36*d*n3*n5^2 + 
      24*n1*n3*n5^2 - 48*n3^2*n5^2 - 48*n3*n4*n5^2)*
     j[p4, -1 + n1, 0, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
      92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-64*n3 + 56*d*n3 - 12*d^2*n3 + 24*n1*n3 - 8*d*n1*n3 - 56*n3^2 + 
      22*d*n3^2 + 4*n1*n3^2 - 8*n3^3 - 64*n3*n4 + 26*d*n3*n4 + 4*n1*n3*n4 - 
      20*n3^2*n4 - 12*n3*n4^2 - 16*n3*n5 + 8*d*n3*n5 + 8*n1*n3*n5 - 
      12*n3^2*n5 - 12*n3*n4*n5)*j[p4, -1 + n1, 0, 1 + n3, n4, 1 + n5, 1, 0, 
      1, 0, 1, 1, 0, 1, 0])/(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
     92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((64 - 56*d + 12*d^2 - 24*n1 + 8*d*n1 + 56*n3 - 22*d*n3 - 4*n1*n3 + 
      8*n3^2 + 64*n4 - 26*d*n4 - 4*n1*n4 + 20*n3*n4 + 12*n4^2 + 16*n5 - 
      8*d*n5 - 8*n1*n5 + 12*n3*n5 + 12*n4*n5)*j[p4, n1, -1, n3, n4, 1 + n5, 
      0, 0, 1, 0, 2, 1, 0, 1, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
     92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((128 - 112*d + 24*d^2 - 48*n1 + 16*d*n1 + 112*n3 - 44*d*n3 - 8*n1*n3 + 
      16*n3^2 + 128*n4 - 52*d*n4 - 8*n1*n4 + 40*n3*n4 + 24*n4^2 + 32*n5 - 
      16*d*n5 - 16*n1*n5 + 24*n3*n5 + 24*n4*n5)*j[p4, n1, -1, n3, n4, 1 + n5, 
      1, 0, 0, 0, 1, 2, 0, 1, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
     92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-96 + 208*d - 126*d^2 + 23*d^3 - 96*n1 + 68*d*n1 - 12*d^2*n1 - 
      4*d*n1^2 - 208*n3 + 244*d*n3 - 64*d^2*n3 - 24*n1*n3 + 12*d*n1*n3 + 
      8*n1^2*n3 - 128*n3^2 + 60*d*n3^2 - 8*n1*n3^2 - 16*n3^3 - 240*n4 + 
      280*d*n4 - 74*d^2*n4 - 56*n1*n4 + 24*d*n1*n4 + 8*n1^2*n4 - 280*n3*n4 + 
      136*d*n3*n4 - 24*n1*n3*n4 - 56*n3^2*n4 - 152*n4^2 + 76*d*n4^2 - 
      16*n1*n4^2 - 64*n3*n4^2 - 24*n4^3 + 128*n5 - 88*d*n5 + 12*d^2*n5 - 
      56*n1*n5 + 20*d*n1*n5 - 8*n1^2*n5 + 72*n3*n5 - 12*d*n3*n5 - 8*n3^2*n5 + 
      80*n4*n5 - 16*d*n4*n5 - 8*n1*n4*n5 - 8*n3*n4*n5 + 40*n5^2 - 20*d*n5^2 - 
      8*n1*n5^2 + 24*n3*n5^2 + 24*n4*n5^2)*j[p4, n1, -1, n3, n4, 1 + n5, 1, 
      0, 0, 0, 2, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5)*
     (-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 
      48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 
      60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 
      260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 16*n1^2*n4 - 
      128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 28*d*n4^2 - 
      48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 
      8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 16*n3^2*n5 - 
      88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 8*n4^2*n5 - 
      8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-96 + 80*d - 14*d^2 - d^3 + 96*n1 - 76*d*n1 + 16*d^2*n1 + 4*d*n1^2 - 
      48*n3 + 4*d*n3 + 6*d^2*n3 + 40*n1*n3 - 24*d*n1*n3 - 8*n1^2*n3 + 
      16*n3^2 - 8*d*n3^2 + 16*n1*n3^2 - 80*n4 + 24*d*n4 + 4*d^2*n4 + 
      72*n1*n4 - 36*d*n1*n4 - 8*n1^2*n4 + 8*n3*n4 - 12*d*n3*n4 + 
      40*n1*n3*n4 - 8*n4^2 - 4*d*n4^2 + 24*n1*n4^2 - 128*n5 + 104*d*n5 - 
      20*d^2*n5 + 40*n1*n5 - 12*d*n1*n5 + 8*n1^2*n5 - 88*n3*n5 + 28*d*n3*n5 - 
      8*n1*n3*n5 - 112*n4*n5 + 40*d*n4*n5 - 16*n3*n4*n5 - 16*n4^2*n5 - 
      24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 16*n3*n5^2 - 16*n4*n5^2)*
     j[p4, n1, -1, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    ((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-576 + 864*d - 476*d^2 + 114*d^3 - 10*d^4 + 576*n1 - 656*d*n1 + 
      240*d^2*n1 - 28*d^3*n1 - 768*n3 + 832*d*n3 - 292*d^2*n3 + 33*d^3*n3 + 
      352*n1*n3 - 240*d*n1*n3 + 38*d^2*n1*n3 - 288*n3^2 + 192*d*n3^2 - 
      30*d^2*n3^2 + 48*n1*n3^2 - 12*d*n1*n3^2 - 32*n3^3 + 8*d*n3^3 - 960*n4 + 
      1040*d*n4 - 364*d^2*n4 + 41*d^3*n4 + 544*n1*n4 - 368*d*n1*n4 + 
      58*d^2*n1*n4 - 800*n3*n4 + 528*d*n3*n4 - 82*d^2*n3*n4 + 160*n1*n3*n4 - 
      40*d*n1*n3*n4 - 144*n3^2*n4 + 36*d*n3^2*n4 - 512*n4^2 + 336*d*n4^2 - 
      52*d^2*n4^2 + 112*n1*n4^2 - 28*d*n1*n4^2 - 192*n3*n4^2 + 48*d*n3*n4^2 - 
      80*n4^3 + 20*d*n4^3 - 576*n5 + 688*d*n5 - 268*d^2*n5 + 34*d^3*n5 + 
      416*n1*n5 - 352*d*n1*n5 + 72*d^2*n1*n5 - 640*n3*n5 + 496*d*n3*n5 - 
      94*d^2*n3*n5 + 224*n1*n3*n5 - 88*d*n1*n3*n5 - 192*n3^2*n5 + 
      72*d*n3^2*n5 + 24*n1*n3^2*n5 - 16*n3^3*n5 - 800*n4*n5 + 624*d*n4*n5 - 
      118*d^2*n4*n5 + 352*n1*n4*n5 - 136*d*n1*n4*n5 - 544*n3*n4*n5 + 
      200*d*n3*n4*n5 + 80*n1*n3*n4*n5 - 72*n3^2*n4*n5 - 352*n4^2*n5 + 
      128*d*n4^2*n5 + 56*n1*n4^2*n5 - 96*n3*n4^2*n5 - 40*n4^3*n5 - 176*n5^2 + 
      152*d*n5^2 - 32*d^2*n5^2 + 64*n1*n5^2 - 32*d*n1*n5^2 - 144*n3*n5^2 + 
      60*d*n3*n5^2 + 24*n1*n3*n5^2 - 24*n3^2*n5^2 - 176*n4*n5^2 + 
      76*d*n4*n5^2 + 40*n1*n4*n5^2 - 72*n3*n4*n5^2 - 48*n4^2*n5^2 - 16*n5^3 + 
      8*d*n5^3 - 8*n3*n5^3 - 8*n4*n5^3)*j[p4, n1, -1, n3, n4, 1 + n5, 1, 0, 
      1, 0, 1, 1, 0, 1, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-96 + 144*d - 70*d^2 + 11*d^3 - 4*d*n1 + 2*d^2*n1 - 128*n3 + 124*d*n3 - 
      29*d^2*n3 + 8*n1*n3 - 6*d*n1*n3 - 56*n3^2 + 26*d*n3^2 + 4*n1*n3^2 - 
      8*n3^3 - 160*n4 + 152*d*n4 - 35*d^2*n4 + 8*n1*n4 - 6*d*n1*n4 - 
      136*n3*n4 + 62*d*n3*n4 + 8*n1*n3*n4 - 28*n3^2*n4 - 80*n4^2 + 
      36*d*n4^2 + 4*n1*n4^2 - 32*n3*n4^2 - 12*n4^3 + 8*d*n5 - 4*d^2*n5 - 
      8*n1*n5 + 4*d*n1*n5 - 8*n3*n5 + 8*d*n3*n5 - 4*n1*n3*n5 - 4*n3^2*n5 - 
      16*n4*n5 + 12*d*n4*n5 - 4*n1*n4*n5 - 12*n3*n4*n5 - 8*n4^2*n5 + 8*n5^2 - 
      4*d*n5^2 + 4*n3*n5^2 + 4*n4*n5^2)*j[p4, n1, -1, n3, n4, 1 + n5, 1, 0, 
      1, 0, 2, 0, 0, 1, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-96 + 208*d - 126*d^2 + 23*d^3 - 96*n1 + 68*d*n1 - 12*d^2*n1 - 
      4*d*n1^2 - 208*n3 + 244*d*n3 - 64*d^2*n3 - 24*n1*n3 + 12*d*n1*n3 + 
      8*n1^2*n3 - 128*n3^2 + 60*d*n3^2 - 8*n1*n3^2 - 16*n3^3 - 240*n4 + 
      280*d*n4 - 74*d^2*n4 - 56*n1*n4 + 24*d*n1*n4 + 8*n1^2*n4 - 280*n3*n4 + 
      136*d*n3*n4 - 24*n1*n3*n4 - 56*n3^2*n4 - 152*n4^2 + 76*d*n4^2 - 
      16*n1*n4^2 - 64*n3*n4^2 - 24*n4^3 + 128*n5 - 88*d*n5 + 12*d^2*n5 - 
      56*n1*n5 + 20*d*n1*n5 - 8*n1^2*n5 + 72*n3*n5 - 12*d*n3*n5 - 8*n3^2*n5 + 
      80*n4*n5 - 16*d*n4*n5 - 8*n1*n4*n5 - 8*n3*n4*n5 + 40*n5^2 - 20*d*n5^2 - 
      8*n1*n5^2 + 24*n3*n5^2 + 24*n4*n5^2)*j[p4, n1, -1, n3, n4, 1 + n5, 1, 
      0, 1, 0, 2, 1, 0, 0, 1])/(2*(-3 + d - n4 - n5)*
     (-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 
      48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 
      60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 
      260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 16*n1^2*n4 - 
      128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 28*d*n4^2 - 
      48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 
      8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 16*n3^2*n5 - 
      88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 8*n4^2*n5 - 
      8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-192 + 264*d - 120*d^2 + 18*d^3 + 72*n1 - 60*d*n1 + 12*d^2*n1 - 232*n3 + 
      206*d*n3 - 45*d^2*n3 + 36*n1*n3 - 14*d*n1*n3 - 80*n3^2 + 34*d*n3^2 + 
      4*n1*n3^2 - 8*n3^3 - 320*n4 + 286*d*n4 - 63*d^2*n4 + 60*n1*n4 - 
      22*d*n1*n4 - 236*n3*n4 + 100*d*n3*n4 + 12*n1*n3*n4 - 36*n3^2*n4 - 
      164*n4^2 + 70*d*n4^2 + 8*n1*n4^2 - 52*n3*n4^2 - 24*n4^3 - 48*n5 + 
      48*d*n5 - 12*d^2*n5 + 24*n1*n5 - 12*d*n1*n5 - 52*n3*n5 + 26*d*n3*n5 + 
      8*n1*n3*n5 - 12*n3^2*n5 - 68*n4*n5 + 34*d*n4*n5 + 16*n1*n4*n5 - 
      36*n3*n4*n5 - 24*n4^2*n5)*j[p4, n1, -1, n3, n4, 1 + n5, 1, 0, 2, 0, 1, 
      0, 0, 1, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-192 + 264*d - 120*d^2 + 18*d^3 + 72*n1 - 60*d*n1 + 12*d^2*n1 - 232*n3 + 
      206*d*n3 - 45*d^2*n3 + 36*n1*n3 - 14*d*n1*n3 - 80*n3^2 + 34*d*n3^2 + 
      4*n1*n3^2 - 8*n3^3 - 320*n4 + 286*d*n4 - 63*d^2*n4 + 60*n1*n4 - 
      22*d*n1*n4 - 236*n3*n4 + 100*d*n3*n4 + 12*n1*n3*n4 - 36*n3^2*n4 - 
      164*n4^2 + 70*d*n4^2 + 8*n1*n4^2 - 52*n3*n4^2 - 24*n4^3 - 48*n5 + 
      48*d*n5 - 12*d^2*n5 + 24*n1*n5 - 12*d*n1*n5 - 52*n3*n5 + 26*d*n3*n5 + 
      8*n1*n3*n5 - 12*n3^2*n5 - 68*n4*n5 + 34*d*n4*n5 + 16*n1*n4*n5 - 
      36*n3*n4*n5 - 24*n4^2*n5)*j[p4, n1, -1, n3, n4, 1 + n5, 1, 0, 2, 0, 1, 
      1, 0, 0, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-288 + 368*d - 154*d^2 + 21*d^3 + 96*n1 - 84*d*n1 + 20*d^2*n1 + 
      4*d*n1^2 - 304*n3 + 252*d*n3 - 52*d^2*n3 + 56*n1*n3 - 36*d*n1*n3 - 
      8*n1^2*n3 - 96*n3^2 + 44*d*n3^2 + 24*n1*n3^2 - 16*n3^3 - 400*n4 + 
      328*d*n4 - 66*d^2*n4 + 88*n1*n4 - 48*d*n1*n4 - 8*n1^2*n4 - 264*n3*n4 + 
      112*d*n3*n4 + 56*n1*n3*n4 - 56*n3^2*n4 - 168*n4^2 + 68*d*n4^2 + 
      32*n1*n4^2 - 64*n3*n4^2 - 24*n4^3 - 128*n5 + 120*d*n5 - 28*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 104*n3*n5 + 44*d*n3*n5 - 
      16*n1*n3*n5 - 8*n3^2*n5 - 144*n4*n5 + 64*d*n4*n5 - 8*n1*n4*n5 - 
      40*n3*n4*n5 - 32*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)*j[p4, n1, -1, n3, n4, 1 + n5, 2, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
      92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-192 + 264*d - 120*d^2 + 18*d^3 + 72*n1 - 60*d*n1 + 12*d^2*n1 - 232*n3 + 
      206*d*n3 - 45*d^2*n3 + 36*n1*n3 - 14*d*n1*n3 - 80*n3^2 + 34*d*n3^2 + 
      4*n1*n3^2 - 8*n3^3 - 320*n4 + 286*d*n4 - 63*d^2*n4 + 60*n1*n4 - 
      22*d*n1*n4 - 236*n3*n4 + 100*d*n3*n4 + 12*n1*n3*n4 - 36*n3^2*n4 - 
      164*n4^2 + 70*d*n4^2 + 8*n1*n4^2 - 52*n3*n4^2 - 24*n4^3 - 48*n5 + 
      48*d*n5 - 12*d^2*n5 + 24*n1*n5 - 12*d*n1*n5 - 52*n3*n5 + 26*d*n3*n5 + 
      8*n1*n3*n5 - 12*n3^2*n5 - 68*n4*n5 + 34*d*n4*n5 + 16*n1*n4*n5 - 
      36*n3*n4*n5 - 24*n4^2*n5)*j[p4, n1, -1, n3, n4, 1 + n5, 2, 0, 1, 0, 0, 
      1, 0, 1, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-96 + 80*d - 14*d^2 - d^3 + 96*n1 - 76*d*n1 + 16*d^2*n1 + 4*d*n1^2 - 
      48*n3 + 4*d*n3 + 6*d^2*n3 + 40*n1*n3 - 24*d*n1*n3 - 8*n1^2*n3 + 
      16*n3^2 - 8*d*n3^2 + 16*n1*n3^2 - 80*n4 + 24*d*n4 + 4*d^2*n4 + 
      72*n1*n4 - 36*d*n1*n4 - 8*n1^2*n4 + 8*n3*n4 - 12*d*n3*n4 + 
      40*n1*n3*n4 - 8*n4^2 - 4*d*n4^2 + 24*n1*n4^2 - 128*n5 + 104*d*n5 - 
      20*d^2*n5 + 40*n1*n5 - 12*d*n1*n5 + 8*n1^2*n5 - 88*n3*n5 + 28*d*n3*n5 - 
      8*n1*n3*n5 - 112*n4*n5 + 40*d*n4*n5 - 16*n3*n4*n5 - 16*n4^2*n5 - 
      24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 16*n3*n5^2 - 16*n4*n5^2)*
     j[p4, n1, -1, n3, n4, 1 + n5, 2, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
      92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-96 + 80*d - 14*d^2 - d^3 + 96*n1 - 76*d*n1 + 16*d^2*n1 + 4*d*n1^2 - 
      48*n3 + 4*d*n3 + 6*d^2*n3 + 40*n1*n3 - 24*d*n1*n3 - 8*n1^2*n3 + 
      16*n3^2 - 8*d*n3^2 + 16*n1*n3^2 - 80*n4 + 24*d*n4 + 4*d^2*n4 + 
      72*n1*n4 - 36*d*n1*n4 - 8*n1^2*n4 + 8*n3*n4 - 12*d*n3*n4 + 
      40*n1*n3*n4 - 8*n4^2 - 4*d*n4^2 + 24*n1*n4^2 - 128*n5 + 104*d*n5 - 
      20*d^2*n5 + 40*n1*n5 - 12*d*n1*n5 + 8*n1^2*n5 - 88*n3*n5 + 28*d*n3*n5 - 
      8*n1*n3*n5 - 112*n4*n5 + 40*d*n4*n5 - 16*n3*n4*n5 - 16*n4^2*n5 - 
      24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 16*n3*n5^2 - 16*n4*n5^2)*
     j[p4, n1, -1, n3, n4, 1 + n5, 2, 0, 1, 0, 1, 1, 0, 1, 0])/
    (2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
      92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96*d - 84*d^2 + 18*d^3 - 96*n1 + 60*d*n1 - 10*d^2*n1 - 4*d*n1^2 - 
      144*n3 + 204*d*n3 - 58*d^2*n3 - 8*n1*n3 + 8*d*n1*n3 + 8*n1^2*n3 - 
      128*n3^2 + 60*d*n3^2 - 8*n1*n3^2 - 16*n3^3 - 144*n4 + 216*d*n4 - 
      64*d^2*n4 - 40*n1*n4 + 20*d*n1*n4 + 8*n1^2*n4 - 264*n3*n4 + 
      132*d*n3*n4 - 24*n1*n3*n4 - 56*n3^2*n4 - 136*n4^2 + 72*d*n4^2 - 
      16*n1*n4^2 - 64*n3*n4^2 - 24*n4^3 + 192*n5 - 48*d*n5 - 60*d^2*n5 + 
      18*d^3*n5 - 168*n1*n5 + 80*d*n1*n5 - 10*d^2*n1*n5 - 8*n1^2*n5 - 
      4*d*n1^2*n5 - 24*n3*n5 + 176*d*n3*n5 - 58*d^2*n3*n5 + 8*d*n1*n3*n5 + 
      8*n1^2*n3*n5 - 136*n3^2*n5 + 60*d*n3^2*n5 - 8*n1*n3^2*n5 - 16*n3^3*n5 + 
      176*d*n4*n5 - 64*d^2*n4*n5 - 40*n1*n4*n5 + 20*d*n1*n4*n5 + 
      8*n1^2*n4*n5 - 264*n3*n4*n5 + 132*d*n3*n4*n5 - 24*n1*n3*n4*n5 - 
      56*n3^2*n4*n5 - 128*n4^2*n5 + 72*d*n4^2*n5 - 16*n1*n4^2*n5 - 
      64*n3*n4^2*n5 - 24*n4^3*n5 + 240*n5^2 - 168*d*n5^2 + 24*d^2*n5^2 - 
      88*n1*n5^2 + 20*d*n1*n5^2 - 8*n1^2*n5^2 + 152*n3*n5^2 - 28*d*n3*n5^2 + 
      8*n1*n3*n5^2 - 8*n3^2*n5^2 + 176*n4*n5^2 - 40*d*n4*n5^2 + 8*n4^2*n5^2 + 
      48*n5^3 - 24*d*n5^3 - 16*n1*n5^3 + 32*n3*n5^3 + 32*n4*n5^3)*
     j[p4, n1, -1, n3, n4, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-96*d + 84*d^2 - 18*d^3 + 96*n1 - 60*d*n1 + 10*d^2*n1 + 4*d*n1^2 + 
      144*n3 - 204*d*n3 + 58*d^2*n3 + 8*n1*n3 - 8*d*n1*n3 - 8*n1^2*n3 + 
      128*n3^2 - 60*d*n3^2 + 8*n1*n3^2 + 16*n3^3 + 144*n4 - 216*d*n4 + 
      64*d^2*n4 + 40*n1*n4 - 20*d*n1*n4 - 8*n1^2*n4 + 264*n3*n4 - 
      132*d*n3*n4 + 24*n1*n3*n4 + 56*n3^2*n4 + 136*n4^2 - 72*d*n4^2 + 
      16*n1*n4^2 + 64*n3*n4^2 + 24*n4^3 - 192*n5 + 48*d*n5 + 60*d^2*n5 - 
      18*d^3*n5 + 168*n1*n5 - 80*d*n1*n5 + 10*d^2*n1*n5 + 8*n1^2*n5 + 
      4*d*n1^2*n5 + 24*n3*n5 - 176*d*n3*n5 + 58*d^2*n3*n5 - 8*d*n1*n3*n5 - 
      8*n1^2*n3*n5 + 136*n3^2*n5 - 60*d*n3^2*n5 + 8*n1*n3^2*n5 + 16*n3^3*n5 - 
      176*d*n4*n5 + 64*d^2*n4*n5 + 40*n1*n4*n5 - 20*d*n1*n4*n5 - 
      8*n1^2*n4*n5 + 264*n3*n4*n5 - 132*d*n3*n4*n5 + 24*n1*n3*n4*n5 + 
      56*n3^2*n4*n5 + 128*n4^2*n5 - 72*d*n4^2*n5 + 16*n1*n4^2*n5 + 
      64*n3*n4^2*n5 + 24*n4^3*n5 - 240*n5^2 + 168*d*n5^2 - 24*d^2*n5^2 + 
      88*n1*n5^2 - 20*d*n1*n5^2 + 8*n1^2*n5^2 - 152*n3*n5^2 + 28*d*n3*n5^2 - 
      8*n1*n3*n5^2 + 8*n3^2*n5^2 - 176*n4*n5^2 + 40*d*n4*n5^2 - 8*n4^2*n5^2 - 
      48*n5^3 + 24*d*n5^3 + 16*n1*n5^3 - 32*n3*n5^3 - 32*n4*n5^3)*
     j[p4, n1, -1, n3, n4, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 0])/
    ((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96*n4 - 176*d*n4 + 98*d^2*n4 - 17*d^3*n4 + 16*d*n1*n4 - 6*d^2*n1*n4 + 
      192*n3*n4 - 208*d*n3*n4 + 52*d^2*n3*n4 - 32*n1*n3*n4 + 16*d*n1*n3*n4 + 
      112*n3^2*n4 - 52*d*n3^2*n4 - 8*n1*n3^2*n4 + 16*n3^3*n4 + 224*n4^2 - 
      240*d*n4^2 + 60*d^2*n4^2 - 32*n1*n4^2 + 16*d*n1*n4^2 + 256*n3*n4^2 - 
      120*d*n3*n4^2 - 16*n1*n3*n4^2 + 56*n3^2*n4^2 + 144*n4^3 - 68*d*n4^3 - 
      8*n1*n4^3 + 64*n3*n4^3 + 24*n4^4 - 64*n4*n5 + 40*d*n4*n5 - 
      4*d^2*n4*n5 + 32*n1*n4*n5 - 8*d*n1*n4*n5 - 32*n3*n4*n5 + 8*n3^2*n4*n5 - 
      32*n4^2*n5 + 16*n3*n4^2*n5 + 8*n4^3*n5 - 24*n4*n5^2 + 12*d*n4*n5^2 + 
      8*n1*n4*n5^2 - 16*n3*n4*n5^2 - 16*n4^2*n5^2)*j[p4, n1, -1, n3, 1 + n4, 
      1 + n5, 0, 0, 1, 0, 1, 1, 0, 1, 1])/((-3 + d - n4 - n5)*
     (-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 
      48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 
      60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 
      260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 16*n1^2*n4 - 
      128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 28*d*n4^2 - 
      48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 
      8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 16*n3^2*n5 - 
      88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 8*n4^2*n5 - 
      8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-96*n4 + 176*d*n4 - 98*d^2*n4 + 17*d^3*n4 - 16*d*n1*n4 + 6*d^2*n1*n4 - 
      192*n3*n4 + 208*d*n3*n4 - 52*d^2*n3*n4 + 32*n1*n3*n4 - 16*d*n1*n3*n4 - 
      112*n3^2*n4 + 52*d*n3^2*n4 + 8*n1*n3^2*n4 - 16*n3^3*n4 - 224*n4^2 + 
      240*d*n4^2 - 60*d^2*n4^2 + 32*n1*n4^2 - 16*d*n1*n4^2 - 256*n3*n4^2 + 
      120*d*n3*n4^2 + 16*n1*n3*n4^2 - 56*n3^2*n4^2 - 144*n4^3 + 68*d*n4^3 + 
      8*n1*n4^3 - 64*n3*n4^3 - 24*n4^4 + 64*n4*n5 - 40*d*n4*n5 + 
      4*d^2*n4*n5 - 32*n1*n4*n5 + 8*d*n1*n4*n5 + 32*n3*n4*n5 - 8*n3^2*n4*n5 + 
      32*n4^2*n5 - 16*n3*n4^2*n5 - 8*n4^3*n5 + 24*n4*n5^2 - 12*d*n4*n5^2 - 
      8*n1*n4*n5^2 + 16*n3*n4*n5^2 + 16*n4^2*n5^2)*j[p4, n1, -1, n3, 1 + n4, 
      1 + n5, 1, 0, 0, 0, 1, 1, 0, 1, 1])/((-3 + d - n4 - n5)*
     (-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 
      48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 
      60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 
      260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 16*n1^2*n4 - 
      128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 28*d*n4^2 - 
      48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 
      8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 16*n3^2*n5 - 
      88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 8*n4^2*n5 - 
      8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((288*n4 - 448*d*n4 + 226*d^2*n4 - 37*d^3*n4 - 48*n1*n4 + 44*d*n1*n4 - 
      8*d^2*n1*n4 + 4*d*n1^2*n4 + 416*n3*n4 - 408*d*n3*n4 + 96*d^2*n3*n4 - 
      32*n1*n3*n4 + 4*d*n1*n3*n4 - 8*n1^2*n3*n4 + 176*n3^2*n4 - 
      76*d*n3^2*n4 + 8*n1*n3^2*n4 + 16*n3^3*n4 + 560*n4^2 - 548*d*n4^2 + 
      130*d^2*n4^2 - 48*n1*n4^2 + 8*d*n1*n4^2 - 8*n1^2*n4^2 + 480*n3*n4^2 - 
      212*d*n3*n4^2 + 16*n1*n3*n4^2 + 72*n3^2*n4^2 + 320*n4^3 - 144*d*n4^3 + 
      8*n1*n4^3 + 104*n3*n4^3 + 48*n4^4 - 32*n4*n5 + 8*d*n4*n5 + 
      4*d^2*n4*n5 - 8*n1*n4*n5 + 12*d*n1*n4*n5 + 8*n1^2*n4*n5 + 16*n3*n4*n5 - 
      24*d*n3*n4*n5 - 24*n1*n3*n4*n5 + 24*n3^2*n4*n5 + 24*n4^2*n5 - 
      28*d*n4^2*n5 - 32*n1*n4^2*n5 + 56*n3*n4^2*n5 + 32*n4^3*n5 - 
      24*n4*n5^2 + 12*d*n4*n5^2 + 8*n1*n4*n5^2 - 16*n3*n4*n5^2 - 
      16*n4^2*n5^2)*j[p4, n1, -1, n3, 1 + n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 
      0])/(2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
      92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-96*n3 + 176*d*n3 - 98*d^2*n3 + 17*d^3*n3 - 16*d*n1*n3 + 6*d^2*n1*n3 - 
      192*n3^2 + 208*d*n3^2 - 52*d^2*n3^2 + 32*n1*n3^2 - 16*d*n1*n3^2 - 
      112*n3^3 + 52*d*n3^3 + 8*n1*n3^3 - 16*n3^4 - 224*n3*n4 + 240*d*n3*n4 - 
      60*d^2*n3*n4 + 32*n1*n3*n4 - 16*d*n1*n3*n4 - 256*n3^2*n4 + 
      120*d*n3^2*n4 + 16*n1*n3^2*n4 - 56*n3^3*n4 - 144*n3*n4^2 + 
      68*d*n3*n4^2 + 8*n1*n3*n4^2 - 64*n3^2*n4^2 - 24*n3*n4^3 + 64*n3*n5 - 
      40*d*n3*n5 + 4*d^2*n3*n5 - 32*n1*n3*n5 + 8*d*n1*n3*n5 + 32*n3^2*n5 - 
      8*n3^3*n5 + 32*n3*n4*n5 - 16*n3^2*n4*n5 - 8*n3*n4^2*n5 + 24*n3*n5^2 - 
      12*d*n3*n5^2 - 8*n1*n3*n5^2 + 16*n3^2*n5^2 + 16*n3*n4*n5^2)*
     j[p4, n1, -1, 1 + n3, n4, 1 + n5, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96*n3 - 176*d*n3 + 98*d^2*n3 - 17*d^3*n3 + 16*d*n1*n3 - 6*d^2*n1*n3 + 
      192*n3^2 - 208*d*n3^2 + 52*d^2*n3^2 - 32*n1*n3^2 + 16*d*n1*n3^2 + 
      112*n3^3 - 52*d*n3^3 - 8*n1*n3^3 + 16*n3^4 + 224*n3*n4 - 240*d*n3*n4 + 
      60*d^2*n3*n4 - 32*n1*n3*n4 + 16*d*n1*n3*n4 + 256*n3^2*n4 - 
      120*d*n3^2*n4 - 16*n1*n3^2*n4 + 56*n3^3*n4 + 144*n3*n4^2 - 
      68*d*n3*n4^2 - 8*n1*n3*n4^2 + 64*n3^2*n4^2 + 24*n3*n4^3 - 64*n3*n5 + 
      40*d*n3*n5 - 4*d^2*n3*n5 + 32*n1*n3*n5 - 8*d*n1*n3*n5 - 32*n3^2*n5 + 
      8*n3^3*n5 - 32*n3*n4*n5 + 16*n3^2*n4*n5 + 8*n3*n4^2*n5 - 24*n3*n5^2 + 
      12*d*n3*n5^2 + 8*n1*n3*n5^2 - 16*n3^2*n5^2 - 16*n3*n4*n5^2)*
     j[p4, n1, -1, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-96*n3 + 176*d*n3 - 98*d^2*n3 + 17*d^3*n3 - 16*d*n1*n3 + 6*d^2*n1*n3 - 
      192*n3^2 + 208*d*n3^2 - 52*d^2*n3^2 + 32*n1*n3^2 - 16*d*n1*n3^2 - 
      112*n3^3 + 52*d*n3^3 + 8*n1*n3^3 - 16*n3^4 - 224*n3*n4 + 240*d*n3*n4 - 
      60*d^2*n3*n4 + 32*n1*n3*n4 - 16*d*n1*n3*n4 - 256*n3^2*n4 + 
      120*d*n3^2*n4 + 16*n1*n3^2*n4 - 56*n3^3*n4 - 144*n3*n4^2 + 
      68*d*n3*n4^2 + 8*n1*n3*n4^2 - 64*n3^2*n4^2 - 24*n3*n4^3 + 64*n3*n5 - 
      40*d*n3*n5 + 4*d^2*n3*n5 - 32*n1*n3*n5 + 8*d*n1*n3*n5 + 32*n3^2*n5 - 
      8*n3^3*n5 + 32*n3*n4*n5 - 16*n3^2*n4*n5 - 8*n3*n4^2*n5 + 24*n3*n5^2 - 
      12*d*n3*n5^2 - 8*n1*n3*n5^2 + 16*n3^2*n5^2 + 16*n3*n4*n5^2)*
     j[p4, n1, -1, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 0, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-288*n3 + 432*d*n3 - 210*d^2*n3 + 33*d^3*n3 + 96*n1*n3 - 108*d*n1*n3 + 
      28*d^2*n1*n3 + 4*d*n1^2*n3 - 432*n3^2 + 420*d*n3^2 - 98*d^2*n3^2 + 
      104*n1*n3^2 - 56*d*n1*n3^2 - 8*n1^2*n3^2 - 208*n3^3 + 96*d*n3^3 + 
      32*n1*n3^3 - 32*n3^4 - 528*n3*n4 + 504*d*n3*n4 - 116*d^2*n3*n4 + 
      136*n1*n3*n4 - 68*d*n1*n3*n4 - 8*n1^2*n3*n4 - 504*n3^2*n4 + 
      228*d*n3^2*n4 + 72*n1*n3^2*n4 - 112*n3^3*n4 - 296*n3*n4^2 + 
      132*d*n3*n4^2 + 40*n1*n3*n4^2 - 128*n3^2*n4^2 - 48*n3*n4^3 + 
      24*d*n3*n5 - 12*d^2*n3*n5 - 24*n1*n3*n5 + 4*d*n1*n3*n5 + 8*n1^2*n3*n5 - 
      24*n3^2*n5 + 28*d*n3^2*n5 - 8*n1*n3^2*n5 - 16*n3^3*n5 - 48*n3*n4*n5 + 
      40*d*n3*n4*n5 - 48*n3^2*n4*n5 - 32*n3*n4^2*n5 + 24*n3*n5^2 - 
      12*d*n3*n5^2 - 8*n1*n3*n5^2 + 16*n3^2*n5^2 + 16*n3*n4*n5^2)*
     j[p4, n1, -1, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
      92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-64*n3 + 56*d*n3 - 12*d^2*n3 + 24*n1*n3 - 8*d*n1*n3 - 56*n3^2 + 
      22*d*n3^2 + 4*n1*n3^2 - 8*n3^3 - 64*n3*n4 + 26*d*n3*n4 + 4*n1*n3*n4 - 
      20*n3^2*n4 - 12*n3*n4^2 - 16*n3*n5 + 8*d*n3*n5 + 8*n1*n3*n5 - 
      12*n3^2*n5 - 12*n3*n4*n5)*j[p4, n1, -1, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 
      1, 1, 0, 1, 0])/(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
     24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
     128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 32*n1*n3^2 - 
     304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 16*n1^2*n4 - 
     128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 28*d*n4^2 - 
     48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 
     8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 16*n3^2*n5 - 88*n4*n5 + 
     36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 
     8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((64 - 56*d + 12*d^2 - 24*n1 + 8*d*n1 + 56*n3 - 22*d*n3 - 4*n1*n3 + 
      8*n3^2 + 64*n4 - 26*d*n4 - 4*n1*n4 + 20*n3*n4 + 12*n4^2 + 16*n5 - 
      8*d*n5 - 8*n1*n5 + 12*n3*n5 + 12*n4*n5)*j[p4, n1, 0, -1 + n3, n4, 
      1 + n5, 0, 0, 1, 0, 2, 1, 0, 1, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 
     80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-96 + 80*d - 14*d^2 - d^3 + 96*n1 - 76*d*n1 + 16*d^2*n1 + 4*d*n1^2 - 
      48*n3 + 4*d*n3 + 6*d^2*n3 + 40*n1*n3 - 24*d*n1*n3 - 8*n1^2*n3 + 
      16*n3^2 - 8*d*n3^2 + 16*n1*n3^2 - 80*n4 + 24*d*n4 + 4*d^2*n4 + 
      72*n1*n4 - 36*d*n1*n4 - 8*n1^2*n4 + 8*n3*n4 - 12*d*n3*n4 + 
      40*n1*n3*n4 - 8*n4^2 - 4*d*n4^2 + 24*n1*n4^2 - 128*n5 + 104*d*n5 - 
      20*d^2*n5 + 40*n1*n5 - 12*d*n1*n5 + 8*n1^2*n5 - 88*n3*n5 + 28*d*n3*n5 - 
      8*n1*n3*n5 - 112*n4*n5 + 40*d*n4*n5 - 16*n3*n4*n5 - 16*n4^2*n5 - 
      24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 16*n3*n5^2 - 16*n4*n5^2)*
     j[p4, n1, 0, -1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    ((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-192 + 384*d - 268*d^2 + 78*d^3 - 8*d^4 - 288*n1 + 344*d*n1 - 
      132*d^2*n1 + 16*d^3*n1 - 160*n3 + 224*d*n3 - 94*d^2*n3 + 12*d^3*n3 - 
      208*n1*n3 + 148*d*n1*n3 - 24*d^2*n1*n3 - 32*n3^2 + 24*d*n3^2 - 
      4*d^2*n3^2 - 32*n1*n3^2 + 8*d*n1*n3^2 - 320*n4 + 424*d*n4 - 
      174*d^2*n4 + 22*d^3*n4 - 304*n1*n4 + 220*d*n1*n4 - 36*d^2*n1*n4 - 
      144*n3*n4 + 108*d*n3*n4 - 18*d^2*n3*n4 - 112*n1*n3*n4 + 28*d*n1*n3*n4 - 
      144*n4^2 + 108*d*n4^2 - 18*d^2*n4^2 - 80*n1*n4^2 + 20*d*n1*n4^2 - 
      16*n3*n4^2 + 4*d*n3*n4^2 - 16*n4^3 + 4*d*n4^3 + 80*d*n5 - 68*d^2*n5 + 
      14*d^3*n5 - 176*n1*n5 + 160*d*n1*n5 - 36*d^2*n1*n5 - 32*n3*n5 + 
      72*d*n3*n5 - 22*d^2*n3*n5 - 120*n1*n3*n5 + 52*d*n1*n3*n5 - 16*n3^2*n5 + 
      8*d*n3^2*n5 - 16*n1*n3^2*n5 - 112*n4*n5 + 152*d*n4*n5 - 42*d^2*n4*n5 - 
      168*n1*n4*n5 + 76*d*n1*n4*n5 - 72*n3*n4*n5 + 36*d*n3*n4*n5 - 
      56*n1*n3*n4*n5 - 72*n4^2*n5 + 36*d*n4^2*n5 - 40*n1*n4^2*n5 - 
      8*n3*n4^2*n5 - 8*n4^3*n5 + 80*n5^2 - 56*d*n5^2 + 8*d^2*n5^2 - 
      16*n1*n5^2 + 8*d*n1*n5^2 + 40*n3*n5^2 - 8*d*n3*n5^2 - 8*n1*n3*n5^2 + 
      40*n4*n5^2 - 8*d*n4*n5^2 - 8*n1*n4*n5^2 + 16*n5^3 - 8*d*n5^3 + 
      8*n3*n5^3 + 8*n4*n5^3)*j[p4, n1, 0, -1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 
      1, 0, 1, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-96 + 144*d - 70*d^2 + 11*d^3 - 4*d*n1 + 2*d^2*n1 - 128*n3 + 124*d*n3 - 
      29*d^2*n3 + 8*n1*n3 - 6*d*n1*n3 - 56*n3^2 + 26*d*n3^2 + 4*n1*n3^2 - 
      8*n3^3 - 160*n4 + 152*d*n4 - 35*d^2*n4 + 8*n1*n4 - 6*d*n1*n4 - 
      136*n3*n4 + 62*d*n3*n4 + 8*n1*n3*n4 - 28*n3^2*n4 - 80*n4^2 + 
      36*d*n4^2 + 4*n1*n4^2 - 32*n3*n4^2 - 12*n4^3 + 8*d*n5 - 4*d^2*n5 - 
      8*n1*n5 + 4*d*n1*n5 - 8*n3*n5 + 8*d*n3*n5 - 4*n1*n3*n5 - 4*n3^2*n5 - 
      16*n4*n5 + 12*d*n4*n5 - 4*n1*n4*n5 - 12*n3*n4*n5 - 8*n4^2*n5 + 8*n5^2 - 
      4*d*n5^2 + 4*n3*n5^2 + 4*n4*n5^2)*j[p4, n1, 0, -1 + n3, n4, 1 + n5, 1, 
      0, 1, 0, 2, 0, 0, 1, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-96 + 144*d - 70*d^2 + 11*d^3 - 4*d*n1 + 2*d^2*n1 - 128*n3 + 124*d*n3 - 
      29*d^2*n3 + 8*n1*n3 - 6*d*n1*n3 - 56*n3^2 + 26*d*n3^2 + 4*n1*n3^2 - 
      8*n3^3 - 160*n4 + 152*d*n4 - 35*d^2*n4 + 8*n1*n4 - 6*d*n1*n4 - 
      136*n3*n4 + 62*d*n3*n4 + 8*n1*n3*n4 - 28*n3^2*n4 - 80*n4^2 + 
      36*d*n4^2 + 4*n1*n4^2 - 32*n3*n4^2 - 12*n4^3 + 8*d*n5 - 4*d^2*n5 - 
      8*n1*n5 + 4*d*n1*n5 - 8*n3*n5 + 8*d*n3*n5 - 4*n1*n3*n5 - 4*n3^2*n5 - 
      16*n4*n5 + 12*d*n4*n5 - 4*n1*n4*n5 - 12*n3*n4*n5 - 8*n4^2*n5 + 8*n5^2 - 
      4*d*n5^2 + 4*n3*n5^2 + 4*n4*n5^2)*j[p4, n1, 0, -1 + n3, n4, 1 + n5, 2, 
      0, 0, 0, 1, 1, 0, 1, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-288 + 448*d - 226*d^2 + 37*d^3 + 48*n1 - 44*d*n1 + 8*d^2*n1 - 
      4*d*n1^2 - 416*n3 + 408*d*n3 - 96*d^2*n3 + 32*n1*n3 - 4*d*n1*n3 + 
      8*n1^2*n3 - 176*n3^2 + 76*d*n3^2 - 8*n1*n3^2 - 16*n3^3 - 560*n4 + 
      548*d*n4 - 130*d^2*n4 + 48*n1*n4 - 8*d*n1*n4 + 8*n1^2*n4 - 480*n3*n4 + 
      212*d*n3*n4 - 16*n1*n3*n4 - 72*n3^2*n4 - 320*n4^2 + 144*d*n4^2 - 
      8*n1*n4^2 - 104*n3*n4^2 - 48*n4^3 + 32*n5 - 8*d*n5 - 4*d^2*n5 + 
      8*n1*n5 - 12*d*n1*n5 - 8*n1^2*n5 - 16*n3*n5 + 24*d*n3*n5 + 
      24*n1*n3*n5 - 24*n3^2*n5 - 24*n4*n5 + 28*d*n4*n5 + 32*n1*n4*n5 - 
      56*n3*n4*n5 - 32*n4^2*n5 + 24*n5^2 - 12*d*n5^2 - 8*n1*n5^2 + 
      16*n3*n5^2 + 16*n4*n5^2)*j[p4, n1, 0, -1 + n3, n4, 1 + n5, 2, 0, 1, 0, 
      0, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-384*n4 + 560*d*n4 - 268*d^2*n4 + 42*d^3*n4 + 48*n1*n4 - 36*d*n1*n4 + 
      6*d^2*n1*n4 - 4*d*n1^2*n4 - 480*n3*n4 + 448*d*n3*n4 - 102*d^2*n3*n4 + 
      16*n1*n3*n4 + 8*n1^2*n3*n4 - 176*n3^2*n4 + 76*d*n3^2*n4 - 
      8*n1*n3^2*n4 - 16*n3^3*n4 - 656*n4^2 + 612*d*n4^2 - 140*d^2*n4^2 + 
      32*n1*n4^2 - 4*d*n1*n4^2 + 8*n1^2*n4^2 - 496*n3*n4^2 + 216*d*n3*n4^2 - 
      16*n1*n3*n4^2 - 72*n3^2*n4^2 - 336*n4^3 + 148*d*n4^3 - 8*n1*n4^3 - 
      104*n3*n4^3 - 48*n4^4 - 32*n4*n5 + 48*d*n4*n5 - 16*d^2*n4*n5 + 
      24*n1*n4*n5 - 12*d*n1*n4*n5 - 8*n1^2*n4*n5 - 64*n3*n4*n5 + 
      40*d*n3*n4*n5 + 16*n1*n3*n4*n5 - 24*n3^2*n4*n5 - 88*n4^2*n5 + 
      52*d*n4^2*n5 + 24*n1*n4^2*n5 - 64*n3*n4^2*n5 - 40*n4^3*n5 + 
      16*n4*n5^2 - 8*d*n4*n5^2 + 8*n3*n4*n5^2 + 8*n4^2*n5^2)*
     j[p4, n1, 0, -1 + n3, 1 + n4, 1 + n5, 0, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((480*n4 - 672*d*n4 + 310*d^2*n4 - 47*d^3*n4 - 48*n1*n4 + 28*d*n1*n4 - 
      4*d^2*n1*n4 + 4*d*n1^2*n4 + 544*n3*n4 - 488*d*n3*n4 + 108*d^2*n3*n4 - 
      4*d*n1*n3*n4 - 8*n1^2*n3*n4 + 176*n3^2*n4 - 76*d*n3^2*n4 + 
      8*n1*n3^2*n4 + 16*n3^3*n4 + 752*n4^2 - 676*d*n4^2 + 150*d^2*n4^2 - 
      16*n1*n4^2 - 8*n1^2*n4^2 + 512*n3*n4^2 - 220*d*n3*n4^2 + 
      16*n1*n3*n4^2 + 72*n3^2*n4^2 + 352*n4^3 - 152*d*n4^3 + 8*n1*n4^3 + 
      104*n3*n4^3 + 48*n4^4 + 96*n4*n5 - 104*d*n4*n5 + 28*d^2*n4*n5 - 
      40*n1*n4*n5 + 12*d*n1*n4*n5 + 8*n1^2*n4*n5 + 112*n3*n4*n5 - 
      56*d*n3*n4*n5 - 8*n1*n3*n4*n5 + 24*n3^2*n4*n5 + 152*n4^2*n5 - 
      76*d*n4^2*n5 - 16*n1*n4^2*n5 + 72*n3*n4^2*n5 + 48*n4^3*n5 - 8*n4*n5^2 + 
      4*d*n4*n5^2 - 8*n1*n4*n5^2)*j[p4, n1, 0, -1 + n3, 1 + n4, 1 + n5, 1, 0, 
      0, 0, 1, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-288*n4 + 448*d*n4 - 226*d^2*n4 + 37*d^3*n4 + 48*n1*n4 - 44*d*n1*n4 + 
      8*d^2*n1*n4 - 4*d*n1^2*n4 - 416*n3*n4 + 408*d*n3*n4 - 96*d^2*n3*n4 + 
      32*n1*n3*n4 - 4*d*n1*n3*n4 + 8*n1^2*n3*n4 - 176*n3^2*n4 + 
      76*d*n3^2*n4 - 8*n1*n3^2*n4 - 16*n3^3*n4 - 560*n4^2 + 548*d*n4^2 - 
      130*d^2*n4^2 + 48*n1*n4^2 - 8*d*n1*n4^2 + 8*n1^2*n4^2 - 480*n3*n4^2 + 
      212*d*n3*n4^2 - 16*n1*n3*n4^2 - 72*n3^2*n4^2 - 320*n4^3 + 144*d*n4^3 - 
      8*n1*n4^3 - 104*n3*n4^3 - 48*n4^4 + 32*n4*n5 - 8*d*n4*n5 - 
      4*d^2*n4*n5 + 8*n1*n4*n5 - 12*d*n1*n4*n5 - 8*n1^2*n4*n5 - 16*n3*n4*n5 + 
      24*d*n3*n4*n5 + 24*n1*n3*n4*n5 - 24*n3^2*n4*n5 - 24*n4^2*n5 + 
      28*d*n4^2*n5 + 32*n1*n4^2*n5 - 56*n3*n4^2*n5 - 32*n4^3*n5 + 
      24*n4*n5^2 - 12*d*n4*n5^2 - 8*n1*n4*n5^2 + 16*n3*n4*n5^2 + 
      16*n4^2*n5^2)*j[p4, n1, 0, -1 + n3, 1 + n4, 1 + n5, 1, 0, 1, 0, 0, 1, 
      0, 1, 1])/(2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((288*n4 - 448*d*n4 + 226*d^2*n4 - 37*d^3*n4 - 48*n1*n4 + 44*d*n1*n4 - 
      8*d^2*n1*n4 + 4*d*n1^2*n4 + 416*n3*n4 - 408*d*n3*n4 + 96*d^2*n3*n4 - 
      32*n1*n3*n4 + 4*d*n1*n3*n4 - 8*n1^2*n3*n4 + 176*n3^2*n4 - 
      76*d*n3^2*n4 + 8*n1*n3^2*n4 + 16*n3^3*n4 + 560*n4^2 - 548*d*n4^2 + 
      130*d^2*n4^2 - 48*n1*n4^2 + 8*d*n1*n4^2 - 8*n1^2*n4^2 + 480*n3*n4^2 - 
      212*d*n3*n4^2 + 16*n1*n3*n4^2 + 72*n3^2*n4^2 + 320*n4^3 - 144*d*n4^3 + 
      8*n1*n4^3 + 104*n3*n4^3 + 48*n4^4 - 32*n4*n5 + 8*d*n4*n5 + 
      4*d^2*n4*n5 - 8*n1*n4*n5 + 12*d*n1*n4*n5 + 8*n1^2*n4*n5 + 16*n3*n4*n5 - 
      24*d*n3*n4*n5 - 24*n1*n3*n4*n5 + 24*n3^2*n4*n5 + 24*n4^2*n5 - 
      28*d*n4^2*n5 - 32*n1*n4^2*n5 + 56*n3*n4^2*n5 + 32*n4^3*n5 - 
      24*n4*n5^2 + 12*d*n4*n5^2 + 8*n1*n4*n5^2 - 16*n3*n4*n5^2 - 
      16*n4^2*n5^2)*j[p4, n1, 0, -1 + n3, 1 + n4, 1 + n5, 1, 0, 1, 0, 1, 0, 
      0, 1, 1])/(2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((128 - 112*d + 24*d^2 - 48*n1 + 16*d*n1 + 112*n3 - 44*d*n3 - 8*n1*n3 + 
      16*n3^2 + 128*n4 - 52*d*n4 - 8*n1*n4 + 40*n3*n4 + 24*n4^2 + 32*n5 - 
      16*d*n5 - 16*n1*n5 + 24*n3*n5 + 24*n4*n5)*j[p4, n1, 0, n3, -1 + n4, 
      1 + n5, 1, 0, 0, 0, 1, 2, 0, 1, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 
     80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((64 - 64*d + 20*d^2 - 2*d^3 - 96*n1 + 72*d*n1 - 12*d^2*n1 + 96*n3 - 
      64*d*n3 + 10*d^2*n3 - 48*n1*n3 + 12*d*n1*n3 + 32*n3^2 - 8*d*n3^2 + 
      64*n4 - 40*d*n4 + 6*d^2*n4 - 48*n1*n4 + 12*d*n1*n4 + 48*n3*n4 - 
      12*d*n3*n4 + 16*n4^2 - 4*d*n4^2 + 64*n5 - 48*d*n5 + 8*d^2*n5 - 
      48*n1*n5 + 24*d*n1*n5 + 64*n3*n5 - 24*d*n3*n5 - 24*n1*n3*n5 + 
      16*n3^2*n5 + 48*n4*n5 - 16*d*n4*n5 - 24*n1*n4*n5 + 24*n3*n4*n5 + 
      8*n4^2*n5 + 16*n5^2 - 8*d*n5^2 + 8*n3*n5^2 + 8*n4*n5^2)*
     j[p4, n1, 0, n3, -1 + n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 
     48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 
     60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 
     260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 
     52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 
     88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 
     40*d*n3*n5 - 8*n1*n3*n5 - 16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 
     16*n1*n4*n5 - 24*n3*n4*n5 - 8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 
     8*n3*n5^2 - 8*n4*n5^2) + ((64 - 56*d + 12*d^2 - 24*n1 + 8*d*n1 + 56*n3 - 
      22*d*n3 - 4*n1*n3 + 8*n3^2 + 64*n4 - 26*d*n4 - 4*n1*n4 + 20*n3*n4 + 
      12*n4^2 + 16*n5 - 8*d*n5 - 8*n1*n5 + 12*n3*n5 + 12*n4*n5)*
     j[p4, n1, 0, n3, -1 + n4, 1 + n5, 1, 0, 2, 0, 1, 0, 0, 1, 1])/
    (-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 
     48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 
     60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 
     260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 
     52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 
     88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 
     40*d*n3*n5 - 8*n1*n3*n5 - 16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 
     16*n1*n4*n5 - 24*n3*n4*n5 - 8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 
     8*n3*n5^2 - 8*n4*n5^2) + ((64 - 56*d + 12*d^2 - 24*n1 + 8*d*n1 + 56*n3 - 
      22*d*n3 - 4*n1*n3 + 8*n3^2 + 64*n4 - 26*d*n4 - 4*n1*n4 + 20*n3*n4 + 
      12*n4^2 + 16*n5 - 8*d*n5 - 8*n1*n5 + 12*n3*n5 + 12*n4*n5)*
     j[p4, n1, 0, n3, -1 + n4, 1 + n5, 1, 0, 2, 0, 1, 1, 0, 0, 1])/
    (-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 
     48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 
     60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 
     260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 
     52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 
     88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 
     40*d*n3*n5 - 8*n1*n3*n5 - 16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 
     16*n1*n4*n5 - 24*n3*n4*n5 - 8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 
     8*n3*n5^2 - 8*n4*n5^2) + 
   ((96 - 144*d + 70*d^2 - 11*d^3 + 4*d*n1 - 2*d^2*n1 + 128*n3 - 124*d*n3 + 
      29*d^2*n3 - 8*n1*n3 + 6*d*n1*n3 + 56*n3^2 - 26*d*n3^2 - 4*n1*n3^2 + 
      8*n3^3 + 160*n4 - 152*d*n4 + 35*d^2*n4 - 8*n1*n4 + 6*d*n1*n4 + 
      136*n3*n4 - 62*d*n3*n4 - 8*n1*n3*n4 + 28*n3^2*n4 + 80*n4^2 - 
      36*d*n4^2 - 4*n1*n4^2 + 32*n3*n4^2 + 12*n4^3 - 8*d*n5 + 4*d^2*n5 + 
      8*n1*n5 - 4*d*n1*n5 + 8*n3*n5 - 8*d*n3*n5 + 4*n1*n3*n5 + 4*n3^2*n5 + 
      16*n4*n5 - 12*d*n4*n5 + 4*n1*n4*n5 + 12*n3*n4*n5 + 8*n4^2*n5 - 8*n5^2 + 
      4*d*n5^2 - 4*n3*n5^2 - 4*n4*n5^2)*j[p4, n1, 0, n3, -1 + n4, 1 + n5, 2, 
      0, 0, 0, 1, 1, 0, 1, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-96 + 144*d - 70*d^2 + 11*d^3 - 4*d*n1 + 2*d^2*n1 - 128*n3 + 124*d*n3 - 
      29*d^2*n3 + 8*n1*n3 - 6*d*n1*n3 - 56*n3^2 + 26*d*n3^2 + 4*n1*n3^2 - 
      8*n3^3 - 160*n4 + 152*d*n4 - 35*d^2*n4 + 8*n1*n4 - 6*d*n1*n4 - 
      136*n3*n4 + 62*d*n3*n4 + 8*n1*n3*n4 - 28*n3^2*n4 - 80*n4^2 + 
      36*d*n4^2 + 4*n1*n4^2 - 32*n3*n4^2 - 12*n4^3 + 8*d*n5 - 4*d^2*n5 - 
      8*n1*n5 + 4*d*n1*n5 - 8*n3*n5 + 8*d*n3*n5 - 4*n1*n3*n5 - 4*n3^2*n5 - 
      16*n4*n5 + 12*d*n4*n5 - 4*n1*n4*n5 - 12*n3*n4*n5 - 8*n4^2*n5 + 8*n5^2 - 
      4*d*n5^2 + 4*n3*n5^2 + 4*n4*n5^2)*j[p4, n1, 0, n3, -1 + n4, 1 + n5, 2, 
      0, 1, 0, 0, 1, 0, 1, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96 - 144*d + 70*d^2 - 11*d^3 + 4*d*n1 - 2*d^2*n1 + 128*n3 - 124*d*n3 + 
      29*d^2*n3 - 8*n1*n3 + 6*d*n1*n3 + 56*n3^2 - 26*d*n3^2 - 4*n1*n3^2 + 
      8*n3^3 + 160*n4 - 152*d*n4 + 35*d^2*n4 - 8*n1*n4 + 6*d*n1*n4 + 
      136*n3*n4 - 62*d*n3*n4 - 8*n1*n3*n4 + 28*n3^2*n4 + 80*n4^2 - 
      36*d*n4^2 - 4*n1*n4^2 + 32*n3*n4^2 + 12*n4^3 - 8*d*n5 + 4*d^2*n5 + 
      8*n1*n5 - 4*d*n1*n5 + 8*n3*n5 - 8*d*n3*n5 + 4*n1*n3*n5 + 4*n3^2*n5 + 
      16*n4*n5 - 12*d*n4*n5 + 4*n1*n4*n5 + 12*n3*n4*n5 + 8*n4^2*n5 - 8*n5^2 + 
      4*d*n5^2 - 4*n3*n5^2 - 4*n4*n5^2)*j[p4, n1, 0, n3, -1 + n4, 1 + n5, 2, 
      0, 1, 0, 1, 1, 0, 0, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96 - 144*d + 70*d^2 - 11*d^3 + 4*d*n1 - 2*d^2*n1 + 128*n3 - 124*d*n3 + 
      29*d^2*n3 - 8*n1*n3 + 6*d*n1*n3 + 56*n3^2 - 26*d*n3^2 - 4*n1*n3^2 + 
      8*n3^3 + 160*n4 - 152*d*n4 + 35*d^2*n4 - 8*n1*n4 + 6*d*n1*n4 + 
      136*n3*n4 - 62*d*n3*n4 - 8*n1*n3*n4 + 28*n3^2*n4 + 80*n4^2 - 
      36*d*n4^2 - 4*n1*n4^2 + 32*n3*n4^2 + 12*n4^3 - 8*d*n5 + 4*d^2*n5 + 
      8*n1*n5 - 4*d*n1*n5 + 8*n3*n5 - 8*d*n3*n5 + 4*n1*n3*n5 + 4*n3^2*n5 + 
      16*n4*n5 - 12*d*n4*n5 + 4*n1*n4*n5 + 12*n3*n4*n5 + 8*n4^2*n5 - 8*n5^2 + 
      4*d*n5^2 - 4*n3*n5^2 - 4*n4*n5^2)*j[p4, n1, 0, n3, -1 + n4, 1 + n5, 2, 
      0, 1, 0, 1, 1, 0, 1, 0])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-96 + 144*d - 70*d^2 + 11*d^3 - 4*d*n1 + 2*d^2*n1 - 128*n3 + 124*d*n3 - 
      29*d^2*n3 + 8*n1*n3 - 6*d*n1*n3 - 56*n3^2 + 26*d*n3^2 + 4*n1*n3^2 - 
      8*n3^3 - 160*n4 + 152*d*n4 - 35*d^2*n4 + 8*n1*n4 - 6*d*n1*n4 - 
      136*n3*n4 + 62*d*n3*n4 + 8*n1*n3*n4 - 28*n3^2*n4 - 80*n4^2 + 
      36*d*n4^2 + 4*n1*n4^2 - 32*n3*n4^2 - 12*n4^3 - 96*n5 + 152*d*n5 - 
      74*d^2*n5 + 11*d^3*n5 - 8*n1*n5 + 2*d^2*n1*n5 - 136*n3*n5 + 
      132*d*n3*n5 - 29*d^2*n3*n5 + 4*n1*n3*n5 - 6*d*n1*n3*n5 - 60*n3^2*n5 + 
      26*d*n3^2*n5 + 4*n1*n3^2*n5 - 8*n3^3*n5 - 176*n4*n5 + 164*d*n4*n5 - 
      35*d^2*n4*n5 + 4*n1*n4*n5 - 6*d*n1*n4*n5 - 148*n3*n4*n5 + 
      62*d*n3*n4*n5 + 8*n1*n3*n4*n5 - 28*n3^2*n4*n5 - 88*n4^2*n5 + 
      36*d*n4^2*n5 + 4*n1*n4^2*n5 - 32*n3*n4^2*n5 - 12*n4^3*n5 + 8*n5^2 + 
      4*d*n5^2 - 4*d^2*n5^2 - 8*n1*n5^2 + 4*d*n1*n5^2 - 4*n3*n5^2 + 
      8*d*n3*n5^2 - 4*n1*n3*n5^2 - 4*n3^2*n5^2 - 12*n4*n5^2 + 12*d*n4*n5^2 - 
      4*n1*n4*n5^2 - 12*n3*n4*n5^2 - 8*n4^2*n5^2 + 8*n5^3 - 4*d*n5^3 + 
      4*n3*n5^3 + 4*n4*n5^3)*j[p4, n1, 0, n3, -1 + n4, 2 + n5, 1, 0, 1, 0, 1, 
      1, 0, 0, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96 - 144*d + 70*d^2 - 11*d^3 + 4*d*n1 - 2*d^2*n1 + 128*n3 - 124*d*n3 + 
      29*d^2*n3 - 8*n1*n3 + 6*d*n1*n3 + 56*n3^2 - 26*d*n3^2 - 4*n1*n3^2 + 
      8*n3^3 + 160*n4 - 152*d*n4 + 35*d^2*n4 - 8*n1*n4 + 6*d*n1*n4 + 
      136*n3*n4 - 62*d*n3*n4 - 8*n1*n3*n4 + 28*n3^2*n4 + 80*n4^2 - 
      36*d*n4^2 - 4*n1*n4^2 + 32*n3*n4^2 + 12*n4^3 + 96*n5 - 152*d*n5 + 
      74*d^2*n5 - 11*d^3*n5 + 8*n1*n5 - 2*d^2*n1*n5 + 136*n3*n5 - 
      132*d*n3*n5 + 29*d^2*n3*n5 - 4*n1*n3*n5 + 6*d*n1*n3*n5 + 60*n3^2*n5 - 
      26*d*n3^2*n5 - 4*n1*n3^2*n5 + 8*n3^3*n5 + 176*n4*n5 - 164*d*n4*n5 + 
      35*d^2*n4*n5 - 4*n1*n4*n5 + 6*d*n1*n4*n5 + 148*n3*n4*n5 - 
      62*d*n3*n4*n5 - 8*n1*n3*n4*n5 + 28*n3^2*n4*n5 + 88*n4^2*n5 - 
      36*d*n4^2*n5 - 4*n1*n4^2*n5 + 32*n3*n4^2*n5 + 12*n4^3*n5 - 8*n5^2 - 
      4*d*n5^2 + 4*d^2*n5^2 + 8*n1*n5^2 - 4*d*n1*n5^2 + 4*n3*n5^2 - 
      8*d*n3*n5^2 + 4*n1*n3*n5^2 + 4*n3^2*n5^2 + 12*n4*n5^2 - 12*d*n4*n5^2 + 
      4*n1*n4*n5^2 + 12*n3*n4*n5^2 + 8*n4^2*n5^2 - 8*n5^3 + 4*d*n5^3 - 
      4*n3*n5^3 - 4*n4*n5^3)*j[p4, n1, 0, n3, -1 + n4, 2 + n5, 1, 0, 1, 0, 1, 
      1, 0, 1, 0])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96 - 80*d + 14*d^2 + d^3 - 96*n1 + 76*d*n1 - 16*d^2*n1 - 4*d*n1^2 + 
      48*n3 - 4*d*n3 - 6*d^2*n3 - 40*n1*n3 + 24*d*n1*n3 + 8*n1^2*n3 - 
      16*n3^2 + 8*d*n3^2 - 16*n1*n3^2 + 80*n4 - 24*d*n4 - 4*d^2*n4 - 
      72*n1*n4 + 36*d*n1*n4 + 8*n1^2*n4 - 8*n3*n4 + 12*d*n3*n4 - 
      40*n1*n3*n4 + 8*n4^2 + 4*d*n4^2 - 24*n1*n4^2 + 128*n5 - 104*d*n5 + 
      20*d^2*n5 - 40*n1*n5 + 12*d*n1*n5 - 8*n1^2*n5 + 88*n3*n5 - 28*d*n3*n5 + 
      8*n1*n3*n5 + 112*n4*n5 - 40*d*n4*n5 + 16*n3*n4*n5 + 16*n4^2*n5 + 
      24*n5^2 - 12*d*n5^2 - 8*n1*n5^2 + 16*n3*n5^2 + 16*n4*n5^2)*
     j[p4, n1, 0, n3, n4, n5, 0, 0, 1, 0, 1, 1, 0, 1, 2])/
    ((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96 - 80*d + 14*d^2 + d^3 - 96*n1 + 76*d*n1 - 16*d^2*n1 - 4*d*n1^2 + 
      48*n3 - 4*d*n3 - 6*d^2*n3 - 40*n1*n3 + 24*d*n1*n3 + 8*n1^2*n3 - 
      16*n3^2 + 8*d*n3^2 - 16*n1*n3^2 + 80*n4 - 24*d*n4 - 4*d^2*n4 - 
      72*n1*n4 + 36*d*n1*n4 + 8*n1^2*n4 - 8*n3*n4 + 12*d*n3*n4 - 
      40*n1*n3*n4 + 8*n4^2 + 4*d*n4^2 - 24*n1*n4^2 + 128*n5 - 104*d*n5 + 
      20*d^2*n5 - 40*n1*n5 + 12*d*n1*n5 - 8*n1^2*n5 + 88*n3*n5 - 28*d*n3*n5 + 
      8*n1*n3*n5 + 112*n4*n5 - 40*d*n4*n5 + 16*n3*n4*n5 + 16*n4^2*n5 + 
      24*n5^2 - 12*d*n5^2 - 8*n1*n5^2 + 16*n3*n5^2 + 16*n4*n5^2)*
     j[p4, n1, 0, n3, n4, n5, 1, 0, 0, 0, 1, 1, 0, 1, 2])/
    ((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-128 + 112*d - 24*d^2 + 48*n1 - 16*d*n1 - 112*n3 + 44*d*n3 + 8*n1*n3 - 
      16*n3^2 - 128*n4 + 52*d*n4 + 8*n1*n4 - 40*n3*n4 - 24*n4^2 - 32*n5 + 
      16*d*n5 + 16*n1*n5 - 24*n3*n5 - 24*n4*n5)*j[p4, n1, 0, n3, n4, n5, 1, 
      0, 0, 0, 1, 2, 0, 1, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
     92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((96 - 80*d + 14*d^2 + d^3 - 96*n1 + 76*d*n1 - 16*d^2*n1 - 4*d*n1^2 + 
      48*n3 - 4*d*n3 - 6*d^2*n3 - 40*n1*n3 + 24*d*n1*n3 + 8*n1^2*n3 - 
      16*n3^2 + 8*d*n3^2 - 16*n1*n3^2 + 80*n4 - 24*d*n4 - 4*d^2*n4 - 
      72*n1*n4 + 36*d*n1*n4 + 8*n1^2*n4 - 8*n3*n4 + 12*d*n3*n4 - 
      40*n1*n3*n4 + 8*n4^2 + 4*d*n4^2 - 24*n1*n4^2 + 128*n5 - 104*d*n5 + 
      20*d^2*n5 - 40*n1*n5 + 12*d*n1*n5 - 8*n1^2*n5 + 88*n3*n5 - 28*d*n3*n5 + 
      8*n1*n3*n5 + 112*n4*n5 - 40*d*n4*n5 + 16*n3*n4*n5 + 16*n4^2*n5 + 
      24*n5^2 - 12*d*n5^2 - 8*n1*n5^2 + 16*n3*n5^2 + 16*n4*n5^2)*
     j[p4, n1, 0, n3, n4, n5, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    ((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96 - 80*d + 14*d^2 + d^3 - 96*n1 + 76*d*n1 - 16*d^2*n1 - 4*d*n1^2 + 
      48*n3 - 4*d*n3 - 6*d^2*n3 - 40*n1*n3 + 24*d*n1*n3 + 8*n1^2*n3 - 
      16*n3^2 + 8*d*n3^2 - 16*n1*n3^2 + 80*n4 - 24*d*n4 - 4*d^2*n4 - 
      72*n1*n4 + 36*d*n1*n4 + 8*n1^2*n4 - 8*n3*n4 + 12*d*n3*n4 - 
      40*n1*n3*n4 + 8*n4^2 + 4*d*n4^2 - 24*n1*n4^2 + 128*n5 - 104*d*n5 + 
      20*d^2*n5 - 40*n1*n5 + 12*d*n1*n5 - 8*n1^2*n5 + 88*n3*n5 - 28*d*n3*n5 + 
      8*n1*n3*n5 + 112*n4*n5 - 40*d*n4*n5 + 16*n3*n4*n5 + 16*n4^2*n5 + 
      24*n5^2 - 12*d*n5^2 - 8*n1*n5^2 + 16*n3*n5^2 + 16*n4*n5^2)*
     j[p4, n1, 0, n3, n4, n5, 2, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
      92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96 - 80*d + 14*d^2 + d^3 - 96*n1 + 76*d*n1 - 16*d^2*n1 - 4*d*n1^2 + 
      48*n3 - 4*d*n3 - 6*d^2*n3 - 40*n1*n3 + 24*d*n1*n3 + 8*n1^2*n3 - 
      16*n3^2 + 8*d*n3^2 - 16*n1*n3^2 + 80*n4 - 24*d*n4 - 4*d^2*n4 - 
      72*n1*n4 + 36*d*n1*n4 + 8*n1^2*n4 - 8*n3*n4 + 12*d*n3*n4 - 
      40*n1*n3*n4 + 8*n4^2 + 4*d*n4^2 - 24*n1*n4^2 + 128*n5 - 104*d*n5 + 
      20*d^2*n5 - 40*n1*n5 + 12*d*n1*n5 - 8*n1^2*n5 + 88*n3*n5 - 28*d*n3*n5 + 
      8*n1*n3*n5 + 112*n4*n5 - 40*d*n4*n5 + 16*n3*n4*n5 + 16*n4^2*n5 + 
      24*n5^2 - 12*d*n5^2 - 8*n1*n5^2 + 16*n3*n5^2 + 16*n4*n5^2)*
     j[p4, n1, 0, n3, n4, n5, 2, 0, 1, 0, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
      92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96 - 80*d + 14*d^2 + d^3 - 96*n1 + 76*d*n1 - 16*d^2*n1 - 4*d*n1^2 + 
      48*n3 - 4*d*n3 - 6*d^2*n3 - 40*n1*n3 + 24*d*n1*n3 + 8*n1^2*n3 - 
      16*n3^2 + 8*d*n3^2 - 16*n1*n3^2 + 80*n4 - 24*d*n4 - 4*d^2*n4 - 
      72*n1*n4 + 36*d*n1*n4 + 8*n1^2*n4 - 8*n3*n4 + 12*d*n3*n4 - 
      40*n1*n3*n4 + 8*n4^2 + 4*d*n4^2 - 24*n1*n4^2 + 128*n5 - 104*d*n5 + 
      20*d^2*n5 - 40*n1*n5 + 12*d*n1*n5 - 8*n1^2*n5 + 88*n3*n5 - 28*d*n3*n5 + 
      8*n1*n3*n5 + 112*n4*n5 - 40*d*n4*n5 + 16*n3*n4*n5 + 16*n4^2*n5 + 
      24*n5^2 - 12*d*n5^2 - 8*n1*n5^2 + 16*n3*n5^2 + 16*n4*n5^2)*
     j[p4, n1, 0, n3, n4, n5, 2, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
      92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96 - 80*d + 14*d^2 + d^3 - 96*n1 + 76*d*n1 - 16*d^2*n1 - 4*d*n1^2 + 
      48*n3 - 4*d*n3 - 6*d^2*n3 - 40*n1*n3 + 24*d*n1*n3 + 8*n1^2*n3 - 
      16*n3^2 + 8*d*n3^2 - 16*n1*n3^2 + 80*n4 - 24*d*n4 - 4*d^2*n4 - 
      72*n1*n4 + 36*d*n1*n4 + 8*n1^2*n4 - 8*n3*n4 + 12*d*n3*n4 - 
      40*n1*n3*n4 + 8*n4^2 + 4*d*n4^2 - 24*n1*n4^2 + 128*n5 - 104*d*n5 + 
      20*d^2*n5 - 40*n1*n5 + 12*d*n1*n5 - 8*n1^2*n5 + 88*n3*n5 - 28*d*n3*n5 + 
      8*n1*n3*n5 + 112*n4*n5 - 40*d*n4*n5 + 16*n3*n4*n5 + 16*n4^2*n5 + 
      24*n5^2 - 12*d*n5^2 - 8*n1*n5^2 + 16*n3*n5^2 + 16*n4*n5^2)*
     j[p4, n1, 0, n3, n4, n5, 2, 0, 1, 0, 1, 1, 0, 1, 0])/
    (2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
      92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-64 + 56*d - 12*d^2 + 24*n1 - 8*d*n1 - 56*n3 + 22*d*n3 + 4*n1*n3 - 
      8*n3^2 - 64*n4 + 26*d*n4 + 4*n1*n4 - 20*n3*n4 - 12*n4^2 - 16*n5 + 
      8*d*n5 + 8*n1*n5 - 12*n3*n5 - 12*n4*n5)*j[p4, n1, 0, n3, n4, 1 + n5, 0, 
      -1, 1, 0, 2, 1, 0, 1, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
     92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((96 - 176*d + 98*d^2 - 17*d^3 + 16*d*n1 - 6*d^2*n1 + 192*n3 - 208*d*n3 + 
      52*d^2*n3 - 32*n1*n3 + 16*d*n1*n3 + 112*n3^2 - 52*d*n3^2 - 8*n1*n3^2 + 
      16*n3^3 + 224*n4 - 240*d*n4 + 60*d^2*n4 - 32*n1*n4 + 16*d*n1*n4 + 
      256*n3*n4 - 120*d*n3*n4 - 16*n1*n3*n4 + 56*n3^2*n4 + 144*n4^2 - 
      68*d*n4^2 - 8*n1*n4^2 + 64*n3*n4^2 + 24*n4^3 - 64*n5 + 40*d*n5 - 
      4*d^2*n5 + 32*n1*n5 - 8*d*n1*n5 - 32*n3*n5 + 8*n3^2*n5 - 32*n4*n5 + 
      16*n3*n4*n5 + 8*n4^2*n5 - 24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 
      16*n3*n5^2 - 16*n4*n5^2)*j[p4, n1, 0, n3, n4, 1 + n5, 0, 0, 1, -1, 1, 
      1, 0, 1, 2])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-480 + 640*d - 282*d^2 + 41*d^3 + 144*n1 - 112*d*n1 + 22*d^2*n1 - 
      528*n3 + 452*d*n3 - 96*d^2*n3 + 56*n1*n3 - 24*d*n1*n3 - 160*n3^2 + 
      68*d*n3^2 + 8*n1*n3^2 - 16*n3^3 - 352*n4 + 172*d*n4 + 48*d^2*n4 - 
      24*d^3*n4 - 40*n1*n4 + 56*d*n1*n4 - 16*d^2*n1*n4 - 152*n3*n4 - 
      40*d*n3*n4 + 44*d^2*n3*n4 + 8*d*n1*n3*n4 - 24*n3^2*n4 - 16*d*n3^2*n4 + 
      168*n4^2 - 252*d*n4^2 + 76*d^2*n4^2 - 56*n1*n4^2 + 24*d*n1*n4^2 + 
      128*n3*n4^2 - 84*d*n3*n4^2 - 8*n1*n3*n4^2 + 16*n3^2*n4^2 + 152*n4^3 - 
      76*d*n4^3 - 8*n1*n4^3 + 40*n3*n4^3 + 24*n4^4 - 64*n5 + 72*d*n5 - 
      22*d^2*n5 + d^3*n5 - 32*n1*n5 + 52*d*n1*n5 - 16*d^2*n1*n5 - 
      4*d*n1^2*n5 - 104*n3*n5 + 64*d*n3*n5 - 6*d^2*n3*n5 - 32*n1*n3*n5 + 
      24*d*n1*n3*n5 + 8*n1^2*n3*n5 - 40*n3^2*n5 + 8*d*n3^2*n5 - 
      16*n1*n3^2*n5 + 104*n4*n5 - 124*d*n4*n5 + 36*d^2*n4*n5 - 144*n1*n4*n5 + 
      68*d*n1*n4*n5 + 8*n1^2*n4*n5 + 96*n3*n4*n5 - 56*d*n3*n4*n5 - 
      48*n1*n3*n4*n5 + 16*n3^2*n4*n5 + 184*n4^2*n5 - 88*d*n4^2*n5 - 
      48*n1*n4^2*n5 + 64*n3*n4^2*n5 + 48*n4^3*n5 + 120*n5^2 - 100*d*n5^2 + 
      20*d^2*n5^2 - 32*n1*n5^2 + 12*d*n1*n5^2 - 8*n1^2*n5^2 + 80*n3*n5^2 - 
      28*d*n3*n5^2 + 8*n1*n3*n5^2 + 136*n4*n5^2 - 56*d*n4*n5^2 - 
      16*n1*n4*n5^2 + 40*n3*n4*n5^2 + 40*n4^2*n5^2 + 24*n5^3 - 12*d*n5^3 - 
      8*n1*n5^3 + 16*n3*n5^3 + 16*n4*n5^3)*j[p4, n1, 0, n3, n4, 1 + n5, 0, 0, 
      1, 0, 1, 1, 0, 1, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-96 + 176*d - 98*d^2 + 17*d^3 - 16*d*n1 + 6*d^2*n1 - 192*n3 + 208*d*n3 - 
      52*d^2*n3 + 32*n1*n3 - 16*d*n1*n3 - 112*n3^2 + 52*d*n3^2 + 8*n1*n3^2 - 
      16*n3^3 - 224*n4 + 240*d*n4 - 60*d^2*n4 + 32*n1*n4 - 16*d*n1*n4 - 
      256*n3*n4 + 120*d*n3*n4 + 16*n1*n3*n4 - 56*n3^2*n4 - 144*n4^2 + 
      68*d*n4^2 + 8*n1*n4^2 - 64*n3*n4^2 - 24*n4^3 + 64*n5 - 40*d*n5 + 
      4*d^2*n5 - 32*n1*n5 + 8*d*n1*n5 + 32*n3*n5 - 8*n3^2*n5 + 32*n4*n5 - 
      16*n3*n4*n5 - 8*n4^2*n5 + 24*n5^2 - 12*d*n5^2 - 8*n1*n5^2 + 
      16*n3*n5^2 + 16*n4*n5^2)*j[p4, n1, 0, n3, n4, 1 + n5, 0, 0, 1, 0, 1, 1, 
      0, 1, 2])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-64 + 56*d - 12*d^2 + 24*n1 - 8*d*n1 - 56*n3 + 22*d*n3 + 4*n1*n3 - 
      8*n3^2 - 64*n4 + 26*d*n4 + 4*n1*n4 - 20*n3*n4 - 12*n4^2 - 16*n5 + 
      8*d*n5 + 8*n1*n5 - 12*n3*n5 - 12*n4*n5)*j[p4, n1, 0, n3, n4, 1 + n5, 0, 
      0, 1, 0, 1, 2, -1, 1, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
     92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((64 - 56*d + 12*d^2 - 24*n1 + 8*d*n1 + 56*n3 - 22*d*n3 - 4*n1*n3 + 
      8*n3^2 + 64*n4 - 26*d*n4 - 4*n1*n4 + 20*n3*n4 + 12*n4^2 + 16*n5 - 
      8*d*n5 - 8*n1*n5 + 12*n3*n5 + 12*n4*n5)*j[p4, n1, 0, n3, n4, 1 + n5, 0, 
      0, 1, 0, 1, 2, 0, 1, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
     92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((64 - 56*d + 12*d^2 - 24*n1 + 8*d*n1 + 56*n3 - 22*d*n3 - 4*n1*n3 + 
      8*n3^2 + 64*n4 - 26*d*n4 - 4*n1*n4 + 20*n3*n4 + 12*n4^2 + 16*n5 - 
      8*d*n5 - 8*n1*n5 + 12*n3*n5 + 12*n4*n5)*j[p4, n1, 0, n3, n4, 1 + n5, 0, 
      0, 1, 0, 2, 1, -1, 1, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
     92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-64 + 56*d - 12*d^2 + 24*n1 - 8*d*n1 - 56*n3 + 22*d*n3 + 4*n1*n3 - 
      8*n3^2 - 64*n4 + 26*d*n4 + 4*n1*n4 - 20*n3*n4 - 12*n4^2 - 16*n5 + 
      8*d*n5 + 8*n1*n5 - 12*n3*n5 - 12*n4*n5)*j[p4, n1, 0, n3, n4, 1 + n5, 0, 
      0, 1, 0, 2, 1, 0, 1, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
     92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-64 + 56*d - 12*d^2 + 24*n1 - 8*d*n1 - 56*n3 + 22*d*n3 + 4*n1*n3 - 
      8*n3^2 - 64*n4 + 26*d*n4 + 4*n1*n4 - 20*n3*n4 - 12*n4^2 - 16*n5 + 
      8*d*n5 + 8*n1*n5 - 12*n3*n5 - 12*n4*n5)*j[p4, n1, 0, n3, n4, 1 + n5, 0, 
      0, 2, 0, 1, 1, -1, 1, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
     92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((384 - 528*d + 240*d^2 - 36*d^3 - 144*n1 + 120*d*n1 - 24*d^2*n1 + 
      464*n3 - 412*d*n3 + 90*d^2*n3 - 72*n1*n3 + 28*d*n1*n3 + 160*n3^2 - 
      68*d*n3^2 - 8*n1*n3^2 + 16*n3^3 + 640*n4 - 572*d*n4 + 126*d^2*n4 - 
      120*n1*n4 + 44*d*n1*n4 + 472*n3*n4 - 200*d*n3*n4 - 24*n1*n3*n4 + 
      72*n3^2*n4 + 328*n4^2 - 140*d*n4^2 - 16*n1*n4^2 + 104*n3*n4^2 + 
      48*n4^3 + 96*n5 - 96*d*n5 + 24*d^2*n5 - 48*n1*n5 + 24*d*n1*n5 + 
      104*n3*n5 - 52*d*n3*n5 - 16*n1*n3*n5 + 24*n3^2*n5 + 136*n4*n5 - 
      68*d*n4*n5 - 32*n1*n4*n5 + 72*n3*n4*n5 + 48*n4^2*n5)*
     j[p4, n1, 0, n3, n4, 1 + n5, 1, -1, 0, 0, 1, 2, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96 - 144*d + 70*d^2 - 11*d^3 + 4*d*n1 - 2*d^2*n1 + 128*n3 - 124*d*n3 + 
      29*d^2*n3 - 8*n1*n3 + 6*d*n1*n3 + 56*n3^2 - 26*d*n3^2 - 4*n1*n3^2 + 
      8*n3^3 + 160*n4 - 152*d*n4 + 35*d^2*n4 - 8*n1*n4 + 6*d*n1*n4 + 
      136*n3*n4 - 62*d*n3*n4 - 8*n1*n3*n4 + 28*n3^2*n4 + 80*n4^2 - 
      36*d*n4^2 - 4*n1*n4^2 + 32*n3*n4^2 + 12*n4^3 - 8*d*n5 + 4*d^2*n5 + 
      8*n1*n5 - 4*d*n1*n5 + 8*n3*n5 - 8*d*n3*n5 + 4*n1*n3*n5 + 4*n3^2*n5 + 
      16*n4*n5 - 12*d*n4*n5 + 4*n1*n4*n5 + 12*n3*n4*n5 + 8*n4^2*n5 - 8*n5^2 + 
      4*d*n5^2 - 4*n3*n5^2 - 4*n4*n5^2)*j[p4, n1, 0, n3, n4, 1 + n5, 1, -1, 
      0, 0, 2, 1, 0, 1, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96 - 80*d + 14*d^2 + d^3 - 96*n1 + 76*d*n1 - 16*d^2*n1 - 4*d*n1^2 + 
      48*n3 - 4*d*n3 - 6*d^2*n3 - 40*n1*n3 + 24*d*n1*n3 + 8*n1^2*n3 - 
      16*n3^2 + 8*d*n3^2 - 16*n1*n3^2 + 80*n4 - 24*d*n4 - 4*d^2*n4 - 
      72*n1*n4 + 36*d*n1*n4 + 8*n1^2*n4 - 8*n3*n4 + 12*d*n3*n4 - 
      40*n1*n3*n4 + 8*n4^2 + 4*d*n4^2 - 24*n1*n4^2 + 128*n5 - 104*d*n5 + 
      20*d^2*n5 - 40*n1*n5 + 12*d*n1*n5 - 8*n1^2*n5 + 88*n3*n5 - 28*d*n3*n5 + 
      8*n1*n3*n5 + 112*n4*n5 - 40*d*n4*n5 + 16*n3*n4*n5 + 16*n4^2*n5 + 
      24*n5^2 - 12*d*n5^2 - 8*n1*n5^2 + 16*n3*n5^2 + 16*n4*n5^2)*
     j[p4, n1, 0, n3, n4, 1 + n5, 1, -1, 1, 0, 1, 1, 0, 0, 2])/
    ((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96 - 144*d + 70*d^2 - 11*d^3 + 4*d*n1 - 2*d^2*n1 + 128*n3 - 124*d*n3 + 
      29*d^2*n3 - 8*n1*n3 + 6*d*n1*n3 + 56*n3^2 - 26*d*n3^2 - 4*n1*n3^2 + 
      8*n3^3 + 160*n4 - 152*d*n4 + 35*d^2*n4 - 8*n1*n4 + 6*d*n1*n4 + 
      136*n3*n4 - 62*d*n3*n4 - 8*n1*n3*n4 + 28*n3^2*n4 + 80*n4^2 - 
      36*d*n4^2 - 4*n1*n4^2 + 32*n3*n4^2 + 12*n4^3 - 8*d*n5 + 4*d^2*n5 + 
      8*n1*n5 - 4*d*n1*n5 + 8*n3*n5 - 8*d*n3*n5 + 4*n1*n3*n5 + 4*n3^2*n5 + 
      16*n4*n5 - 12*d*n4*n5 + 4*n1*n4*n5 + 12*n3*n4*n5 + 8*n4^2*n5 - 8*n5^2 + 
      4*d*n5^2 - 4*n3*n5^2 - 4*n4*n5^2)*j[p4, n1, 0, n3, n4, 1 + n5, 1, -1, 
      1, 0, 2, 0, 0, 1, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96 - 144*d + 70*d^2 - 11*d^3 + 4*d*n1 - 2*d^2*n1 + 128*n3 - 124*d*n3 + 
      29*d^2*n3 - 8*n1*n3 + 6*d*n1*n3 + 56*n3^2 - 26*d*n3^2 - 4*n1*n3^2 + 
      8*n3^3 + 160*n4 - 152*d*n4 + 35*d^2*n4 - 8*n1*n4 + 6*d*n1*n4 + 
      136*n3*n4 - 62*d*n3*n4 - 8*n1*n3*n4 + 28*n3^2*n4 + 80*n4^2 - 
      36*d*n4^2 - 4*n1*n4^2 + 32*n3*n4^2 + 12*n4^3 - 8*d*n5 + 4*d^2*n5 + 
      8*n1*n5 - 4*d*n1*n5 + 8*n3*n5 - 8*d*n3*n5 + 4*n1*n3*n5 + 4*n3^2*n5 + 
      16*n4*n5 - 12*d*n4*n5 + 4*n1*n4*n5 + 12*n3*n4*n5 + 8*n4^2*n5 - 8*n5^2 + 
      4*d*n5^2 - 4*n3*n5^2 - 4*n4*n5^2)*j[p4, n1, 0, n3, n4, 1 + n5, 1, -1, 
      1, 0, 2, 1, 0, 0, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((192 - 264*d + 120*d^2 - 18*d^3 - 72*n1 + 60*d*n1 - 12*d^2*n1 + 232*n3 - 
      206*d*n3 + 45*d^2*n3 - 36*n1*n3 + 14*d*n1*n3 + 80*n3^2 - 34*d*n3^2 - 
      4*n1*n3^2 + 8*n3^3 + 320*n4 - 286*d*n4 + 63*d^2*n4 - 60*n1*n4 + 
      22*d*n1*n4 + 236*n3*n4 - 100*d*n3*n4 - 12*n1*n3*n4 + 36*n3^2*n4 + 
      164*n4^2 - 70*d*n4^2 - 8*n1*n4^2 + 52*n3*n4^2 + 24*n4^3 + 48*n5 - 
      48*d*n5 + 12*d^2*n5 - 24*n1*n5 + 12*d*n1*n5 + 52*n3*n5 - 26*d*n3*n5 - 
      8*n1*n3*n5 + 12*n3^2*n5 + 68*n4*n5 - 34*d*n4*n5 - 16*n1*n4*n5 + 
      36*n3*n4*n5 + 24*n4^2*n5)*j[p4, n1, 0, n3, n4, 1 + n5, 1, -1, 2, 0, 1, 
      0, 0, 1, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((192 - 264*d + 120*d^2 - 18*d^3 - 72*n1 + 60*d*n1 - 12*d^2*n1 + 232*n3 - 
      206*d*n3 + 45*d^2*n3 - 36*n1*n3 + 14*d*n1*n3 + 80*n3^2 - 34*d*n3^2 - 
      4*n1*n3^2 + 8*n3^3 + 320*n4 - 286*d*n4 + 63*d^2*n4 - 60*n1*n4 + 
      22*d*n1*n4 + 236*n3*n4 - 100*d*n3*n4 - 12*n1*n3*n4 + 36*n3^2*n4 + 
      164*n4^2 - 70*d*n4^2 - 8*n1*n4^2 + 52*n3*n4^2 + 24*n4^3 + 48*n5 - 
      48*d*n5 + 12*d^2*n5 - 24*n1*n5 + 12*d*n1*n5 + 52*n3*n5 - 26*d*n3*n5 - 
      8*n1*n3*n5 + 12*n3^2*n5 + 68*n4*n5 - 34*d*n4*n5 - 16*n1*n4*n5 + 
      36*n3*n4*n5 + 24*n4^2*n5)*j[p4, n1, 0, n3, n4, 1 + n5, 1, -1, 2, 0, 1, 
      1, 0, 0, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96 - 176*d + 98*d^2 - 17*d^3 + 16*d*n1 - 6*d^2*n1 + 192*n3 - 208*d*n3 + 
      52*d^2*n3 - 32*n1*n3 + 16*d*n1*n3 + 112*n3^2 - 52*d*n3^2 - 8*n1*n3^2 + 
      16*n3^3 + 224*n4 - 240*d*n4 + 60*d^2*n4 - 32*n1*n4 + 16*d*n1*n4 + 
      256*n3*n4 - 120*d*n3*n4 - 16*n1*n3*n4 + 56*n3^2*n4 + 144*n4^2 - 
      68*d*n4^2 - 8*n1*n4^2 + 64*n3*n4^2 + 24*n4^3 - 64*n5 + 40*d*n5 - 
      4*d^2*n5 + 32*n1*n5 - 8*d*n1*n5 - 32*n3*n5 + 8*n3^2*n5 - 32*n4*n5 + 
      16*n3*n4*n5 + 8*n4^2*n5 - 24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 
      16*n3*n5^2 - 16*n4*n5^2)*j[p4, n1, 0, n3, n4, 1 + n5, 1, 0, 0, -1, 1, 
      1, 0, 1, 2])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((128 - 112*d + 24*d^2 - 48*n1 + 16*d*n1 + 112*n3 - 44*d*n3 - 8*n1*n3 + 
      16*n3^2 + 128*n4 - 52*d*n4 - 8*n1*n4 + 40*n3*n4 + 24*n4^2 + 32*n5 - 
      16*d*n5 - 16*n1*n5 + 24*n3*n5 + 24*n4*n5)*j[p4, n1, 0, n3, n4, 1 + n5, 
      1, 0, 0, -1, 1, 2, 0, 1, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
     92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-64 + 56*d - 12*d^2 + 24*n1 - 8*d*n1 - 56*n3 + 22*d*n3 + 4*n1*n3 - 
      8*n3^2 - 64*n4 + 26*d*n4 + 4*n1*n4 - 20*n3*n4 - 12*n4^2 - 16*n5 + 
      8*d*n5 + 8*n1*n5 - 12*n3*n5 - 12*n4*n5)*j[p4, n1, 0, n3, n4, 1 + n5, 1, 
      0, 0, -1, 2, 1, 0, 1, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
     92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-384 + 656*d - 352*d^2 + 60*d^3 + 336*n1 - 456*d*n1 + 180*d^2*n1 - 
      22*d^3*n1 + 8*d*n1^2 - 4*d^2*n1^2 + 528*n3 - 1108*d*n3 + 720*d^2*n3 - 
      143*d^3*n3 + 280*n1*n3 - 192*d*n1*n3 + 34*d^2*n1*n3 - 16*n1^2*n3 + 
      24*d*n1^2*n3 + 1248*n3^2 - 1380*d*n3^2 + 358*d^2*n3^2 + 56*n1*n3^2 - 
      36*d*n1*n3^2 - 32*n1^2*n3^2 + 592*n3^3 - 280*d*n3^3 + 32*n1*n3^3 + 
      64*n3^4 - 1472*n4 + 1676*d*n4 - 550*d^2*n4 + 46*d^3*n4 + 680*n1*n4 - 
      492*d*n1*n4 + 90*d^2*n1*n4 - 16*n1^2*n4 + 12*d*n1^2*n4 + 648*n3*n4 - 
      1152*d*n3*n4 + 378*d^2*n3*n4 + 240*n1*n3*n4 - 116*d*n1*n3*n4 - 
      40*n1^2*n3*n4 + 1400*n3^2*n4 - 700*d*n3^2*n4 + 96*n1*n3^2*n4 + 
      256*n3^3*n4 - 1416*n4^2 + 968*d*n4^2 - 146*d^2*n4^2 + 280*n1*n4^2 - 
      108*d*n1*n4^2 - 8*n1^2*n4^2 + 416*n3*n4^2 - 304*d*n3*n4^2 + 
      104*n1*n3*n4^2 + 304*n3^2*n4^2 - 456*n4^3 + 148*d*n4^3 + 40*n1*n4^3 + 
      64*n3*n4^3 - 48*n4^4 + 160*n5 - 96*d*n5 + 8*d^2*n5 - 48*n1*n5 - 
      24*d*n1*n5 + 8*d^2*n1*n5 + 16*n1^2*n5 - 8*d*n1^2*n5 + 88*n3*n5 - 
      84*d*n3*n5 + 44*d^2*n3*n5 + 8*n1*n3*n5 + 12*d*n1*n3*n5 + 
      32*n1^2*n3*n5 + 120*n3^2*n5 - 120*d*n3^2*n5 - 40*n1*n3^2*n5 + 
      80*n3^3*n5 - 168*n4*n5 + 228*d*n4*n5 - 48*d^2*n4*n5 + 160*n1*n4*n5 - 
      48*d*n1*n4*n5 + 8*n1^2*n4*n5 - 56*n3*n4*n5 - 72*d*n3*n4*n5 - 
      48*n1*n3*n4*n5 + 184*n3^2*n4*n5 - 312*n4^2*n5 + 116*d*n4^2*n5 + 
      32*n1*n4^2*n5 + 40*n3*n4^2*n5 - 64*n4^3*n5 + 64*n5^2 - 32*d*n5^2 - 
      48*n1*n5^2 + 8*d*n1*n5^2 - 24*n3*n5^2 + 36*d*n3*n5^2 - 40*n3^2*n5^2 + 
      32*n4*n5^2 + 8*d*n4*n5^2 + 8*n1*n4*n5^2 - 56*n3*n4*n5^2 - 16*n4^2*n5^2)*
     j[p4, n1, 0, n3, n4, 1 + n5, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
      92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-96 + 176*d - 98*d^2 + 17*d^3 - 16*d*n1 + 6*d^2*n1 - 192*n3 + 208*d*n3 - 
      52*d^2*n3 + 32*n1*n3 - 16*d*n1*n3 - 112*n3^2 + 52*d*n3^2 + 8*n1*n3^2 - 
      16*n3^3 - 224*n4 + 240*d*n4 - 60*d^2*n4 + 32*n1*n4 - 16*d*n1*n4 - 
      256*n3*n4 + 120*d*n3*n4 + 16*n1*n3*n4 - 56*n3^2*n4 - 144*n4^2 + 
      68*d*n4^2 + 8*n1*n4^2 - 64*n3*n4^2 - 24*n4^3 + 64*n5 - 40*d*n5 + 
      4*d^2*n5 - 32*n1*n5 + 8*d*n1*n5 + 32*n3*n5 - 8*n3^2*n5 + 32*n4*n5 - 
      16*n3*n4*n5 - 8*n4^2*n5 + 24*n5^2 - 12*d*n5^2 - 8*n1*n5^2 + 
      16*n3*n5^2 + 16*n4*n5^2)*j[p4, n1, 0, n3, n4, 1 + n5, 1, 0, 0, 0, 1, 1, 
      0, 1, 2])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-96 + 176*d - 98*d^2 + 17*d^3 - 16*d*n1 + 6*d^2*n1 - 192*n3 + 208*d*n3 - 
      52*d^2*n3 + 32*n1*n3 - 16*d*n1*n3 - 112*n3^2 + 52*d*n3^2 + 8*n1*n3^2 - 
      16*n3^3 - 224*n4 + 240*d*n4 - 60*d^2*n4 + 32*n1*n4 - 16*d*n1*n4 - 
      256*n3*n4 + 120*d*n3*n4 + 16*n1*n3*n4 - 56*n3^2*n4 - 144*n4^2 + 
      68*d*n4^2 + 8*n1*n4^2 - 64*n3*n4^2 - 24*n4^3 + 64*n5 - 40*d*n5 + 
      4*d^2*n5 - 32*n1*n5 + 8*d*n1*n5 + 32*n3*n5 - 8*n3^2*n5 + 32*n4*n5 - 
      16*n3*n4*n5 - 8*n4^2*n5 + 24*n5^2 - 12*d*n5^2 - 8*n1*n5^2 + 
      16*n3*n5^2 + 16*n4*n5^2)*j[p4, n1, 0, n3, n4, 1 + n5, 1, 0, 0, 0, 1, 1, 
      0, 2, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-480 + 672*d - 310*d^2 + 47*d^3 + 48*n1 - 28*d*n1 + 4*d^2*n1 - 
      4*d*n1^2 - 544*n3 + 488*d*n3 - 108*d^2*n3 + 4*d*n1*n3 + 8*n1^2*n3 - 
      176*n3^2 + 76*d*n3^2 - 8*n1*n3^2 - 16*n3^3 - 752*n4 + 676*d*n4 - 
      150*d^2*n4 + 16*n1*n4 + 8*n1^2*n4 - 512*n3*n4 + 220*d*n3*n4 - 
      16*n1*n3*n4 - 72*n3^2*n4 - 352*n4^2 + 152*d*n4^2 - 8*n1*n4^2 - 
      104*n3*n4^2 - 48*n4^3 - 96*n5 + 104*d*n5 - 28*d^2*n5 + 40*n1*n5 - 
      12*d*n1*n5 - 8*n1^2*n5 - 112*n3*n5 + 56*d*n3*n5 + 8*n1*n3*n5 - 
      24*n3^2*n5 - 152*n4*n5 + 76*d*n4*n5 + 16*n1*n4*n5 - 72*n3*n4*n5 - 
      48*n4^2*n5 + 8*n5^2 - 4*d*n5^2 + 8*n1*n5^2)*j[p4, n1, 0, n3, n4, 
      1 + n5, 1, 0, 0, 0, 1, 2, -1, 1, 1])/(2*(-3 + d - n4 - n5)*
     (-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 
      48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 
      60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 
      260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 16*n1^2*n4 - 
      128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 28*d*n4^2 - 
      48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 
      8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 16*n3^2*n5 - 
      88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 8*n4^2*n5 - 
      8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((480 - 672*d + 310*d^2 - 47*d^3 - 48*n1 + 28*d*n1 - 4*d^2*n1 + 4*d*n1^2 + 
      544*n3 - 488*d*n3 + 108*d^2*n3 - 4*d*n1*n3 - 8*n1^2*n3 + 176*n3^2 - 
      76*d*n3^2 + 8*n1*n3^2 + 16*n3^3 + 752*n4 - 676*d*n4 + 150*d^2*n4 - 
      16*n1*n4 - 8*n1^2*n4 + 512*n3*n4 - 220*d*n3*n4 + 16*n1*n3*n4 + 
      72*n3^2*n4 + 352*n4^2 - 152*d*n4^2 + 8*n1*n4^2 + 104*n3*n4^2 + 
      48*n4^3 + 96*n5 - 104*d*n5 + 28*d^2*n5 - 40*n1*n5 + 12*d*n1*n5 + 
      8*n1^2*n5 + 112*n3*n5 - 56*d*n3*n5 - 8*n1*n3*n5 + 24*n3^2*n5 + 
      152*n4*n5 - 76*d*n4*n5 - 16*n1*n4*n5 + 72*n3*n4*n5 + 48*n4^2*n5 - 
      8*n5^2 + 4*d*n5^2 - 8*n1*n5^2)*j[p4, n1, 0, n3, n4, 1 + n5, 1, 0, 0, 0, 
      1, 2, 0, 1, 1])/(2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96 - 272*d + 182*d^2 - 35*d^3 + 96*n1 - 44*d*n1 + 4*d^2*n1 + 4*d*n1^2 + 
      336*n3 - 412*d*n3 + 110*d^2*n3 - 24*n1*n3 + 8*d*n1*n3 - 8*n1^2*n3 + 
      240*n3^2 - 112*d*n3^2 + 32*n3^3 + 368*n4 - 456*d*n4 + 124*d^2*n4 + 
      8*n1*n4 - 4*d*n1*n4 - 8*n1^2*n4 + 520*n3*n4 - 252*d*n3*n4 + 
      8*n1*n3*n4 + 112*n3^2*n4 + 280*n4^2 - 140*d*n4^2 + 8*n1*n4^2 + 
      128*n3*n4^2 + 48*n4^3 - 256*n5 + 184*d*n5 - 28*d^2*n5 + 104*n1*n5 - 
      28*d*n1*n5 + 8*n1^2*n5 - 152*n3*n5 + 28*d*n3*n5 - 8*n1*n3*n5 + 
      16*n3^2*n5 - 176*n4*n5 + 40*d*n4*n5 + 16*n3*n4*n5 - 72*n5^2 + 
      36*d*n5^2 + 24*n1*n5^2 - 48*n3*n5^2 - 48*n4*n5^2)*
     j[p4, n1, 0, n3, n4, 1 + n5, 1, 0, 1, -1, 1, 1, 0, 0, 2])/
    (2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
      92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-64 + 56*d - 12*d^2 + 24*n1 - 8*d*n1 - 56*n3 + 22*d*n3 + 4*n1*n3 - 
      8*n3^2 - 64*n4 + 26*d*n4 + 4*n1*n4 - 20*n3*n4 - 12*n4^2 - 16*n5 + 
      8*d*n5 + 8*n1*n5 - 12*n3*n5 - 12*n4*n5)*j[p4, n1, 0, n3, n4, 1 + n5, 1, 
      0, 1, -1, 2, 1, 0, 0, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
     92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((576 - 880*d + 436*d^2 - 70*d^3 - 144*n1 + 216*d*n1 - 92*d^2*n1 + 
      12*d^3*n1 - 24*d*n1^2 + 8*d^2*n1^2 + 560*n3 - 444*d*n3 + 24*d^2*n3 + 
      25*d^3*n3 - 216*n1*n3 + 208*d*n1*n3 - 46*d^2*n1*n3 + 48*n1^2*n3 - 
      24*d*n1^2*n3 + 96*n3^2 + 68*d*n3^2 - 50*d^2*n3^2 - 152*n1*n3^2 + 
      68*d*n1*n3^2 + 16*n1^2*n3^2 - 16*n3^3 + 24*d*n3^3 - 32*n1*n3^3 + 
      1280*n4 - 1228*d*n4 + 290*d^2*n4 - 2*d^3*n4 - 456*n1*n4 + 340*d*n1*n4 - 
      62*d^2*n1*n4 + 48*n1^2*n4 - 20*d*n1^2*n4 + 632*n3*n4 - 64*d*n3*n4 - 
      94*d^2*n3*n4 - 304*n1*n3*n4 + 124*d*n1*n3*n4 + 24*n1^2*n3*n4 - 
      120*n3^2*n4 + 132*d*n3^2*n4 - 80*n1*n3^2*n4 - 32*n3^3*n4 + 808*n4^2 - 
      368*d*n4^2 + 6*d^2*n4^2 - 216*n1*n4^2 + 76*d*n1*n4^2 + 8*n1^2*n4^2 + 
      120*d*n3*n4^2 - 72*n1*n3*n4^2 - 80*n3^2*n4^2 + 136*n4^3 - 4*d*n4^3 - 
      24*n1*n4^3 - 48*n3*n4^3 - 32*n5 - 16*d*n5 + 16*d^2*n5 + 144*n1*n5 - 
      88*d*n1*n5 + 16*d^2*n1*n5 - 48*n1^2*n5 + 8*d*n1^2*n5 - 56*n3*n5 + 
      36*d*n3*n5 - 20*d^2*n3*n5 + 120*n1*n3*n5 - 36*d*n1*n3*n5 - 56*n3^2*n5 + 
      40*d*n3^2*n5 + 8*n1*n3^2*n5 - 16*n3^3*n5 + 296*n4*n5 - 244*d*n4*n5 + 
      32*d^2*n4*n5 - 48*n1*n4*n5 + 16*d*n1*n4*n5 + 8*n1^2*n4*n5 + 
      152*n3*n4*n5 - 40*n3^2*n4*n5 + 264*n4^2*n5 - 68*d*n4^2*n5 - 
      32*n1*n4^2*n5 + 8*n3*n4^2*n5 + 32*n4^3*n5 - 48*n5^2 + 24*d*n5^2 + 
      48*n1*n5^2 - 16*d*n1*n5^2 - 16*n1^2*n5^2 - 40*n3*n5^2 + 4*d*n3*n5^2 + 
      32*n1*n3*n5^2 - 8*n3^2*n5^2 + 16*n4*n5^2 - 24*d*n4*n5^2 + 
      8*n1*n4*n5^2 + 24*n3*n4*n5^2 + 32*n4^2*n5^2)*j[p4, n1, 0, n3, n4, 
      1 + n5, 1, 0, 1, 0, 0, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5)*
     (-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 
      48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 
      60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 
      260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 16*n1^2*n4 - 
      128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 28*d*n4^2 - 
      48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 
      8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 16*n3^2*n5 - 
      88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 8*n4^2*n5 - 
      8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((32*d - 28*d^2 + 6*d^3 - 12*d*n1 + 4*d^2*n1 - 64*n3 + 84*d*n3 - 
      23*d^2*n3 + 24*n1*n3 - 10*d*n1*n3 - 56*n3^2 + 26*d*n3^2 + 4*n1*n3^2 - 
      8*n3^3 - 64*n4 + 88*d*n4 - 25*d^2*n4 + 24*n1*n4 - 10*d*n1*n4 - 
      120*n3*n4 + 58*d*n3*n4 + 8*n1*n3*n4 - 28*n3^2*n4 - 64*n4^2 + 
      32*d*n4^2 + 4*n1*n4^2 - 32*n3*n4^2 - 12*n4^3 + 64*n5 - 48*d*n5 + 
      8*d^2*n5 - 24*n1*n5 + 4*d*n1*n5 + 40*n3*n5 - 8*d*n3*n5 + 4*n1*n3*n5 - 
      4*n3^2*n5 + 48*n4*n5 - 12*d*n4*n5 + 4*n1*n4*n5 - 4*n3*n4*n5 + 16*n5^2 - 
      8*d*n5^2 - 8*n1*n5^2 + 12*n3*n5^2 + 12*n4*n5^2)*
     j[p4, n1, 0, n3, n4, 1 + n5, 1, 0, 1, 0, 0, 2, -1, 1, 1])/
    ((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-32*d + 28*d^2 - 6*d^3 + 12*d*n1 - 4*d^2*n1 + 64*n3 - 84*d*n3 + 
      23*d^2*n3 - 24*n1*n3 + 10*d*n1*n3 + 56*n3^2 - 26*d*n3^2 - 4*n1*n3^2 + 
      8*n3^3 + 64*n4 - 88*d*n4 + 25*d^2*n4 - 24*n1*n4 + 10*d*n1*n4 + 
      120*n3*n4 - 58*d*n3*n4 - 8*n1*n3*n4 + 28*n3^2*n4 + 64*n4^2 - 
      32*d*n4^2 - 4*n1*n4^2 + 32*n3*n4^2 + 12*n4^3 - 64*n5 + 48*d*n5 - 
      8*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 - 40*n3*n5 + 8*d*n3*n5 - 4*n1*n3*n5 + 
      4*n3^2*n5 - 48*n4*n5 + 12*d*n4*n5 - 4*n1*n4*n5 + 4*n3*n4*n5 - 16*n5^2 + 
      8*d*n5^2 + 8*n1*n5^2 - 12*n3*n5^2 - 12*n4*n5^2)*
     j[p4, n1, 0, n3, n4, 1 + n5, 1, 0, 1, 0, 0, 2, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96 - 96*d + 30*d^2 - 3*d^3 - 240*n1 + 300*d*n1 - 136*d^2*n1 + 
      22*d^3*n1 - 4*d*n1^2 + 4*d^2*n1^2 + 320*n3 - 376*d*n3 + 162*d^2*n3 - 
      25*d^3*n3 - 272*n1*n3 + 240*d*n1*n3 - 58*d^2*n1*n3 + 8*n1^2*n3 - 
      8*d*n1^2*n3 + 240*n3^2 - 212*d*n3^2 + 50*d^2*n3^2 - 72*n1*n3^2 + 
      36*d*n1*n3^2 + 48*n3^3 - 24*d*n3^3 - 80*n4 + 108*d*n4 - 34*d^2*n4 + 
      2*d^3*n4 - 160*n1*n4 + 192*d*n1*n4 - 58*d^2*n1*n4 + 8*n1^2*n4 - 
      12*d*n1^2*n4 + 320*n3*n4 - 348*d*n3*n4 + 94*d^2*n3*n4 - 216*n1*n3*n4 + 
      116*d*n1*n3*n4 + 8*n1^2*n3*n4 + 264*n3^2*n4 - 132*d*n3^2*n4 - 
      32*n1*n3^2*n4 + 32*n3^3*n4 - 160*n4^2 + 84*d*n4^2 - 6*d^2*n4^2 - 
      80*n1*n4^2 + 60*d*n1*n4^2 + 8*n1^2*n4^2 + 208*n3*n4^2 - 120*d*n3*n4^2 - 
      56*n1*n3*n4^2 + 80*n3^2*n4^2 - 40*n4^3 + 4*d*n4^3 - 24*n1*n4^3 + 
      48*n3*n4^3 + 96*n5 - 72*d*n5 + 12*d^2*n5 - 72*n1*n5 + 44*d*n1*n5 - 
      8*d^2*n1*n5 - 8*n1^2*n5 + 8*d*n1^2*n5 + 176*n3*n5 - 112*d*n3*n5 + 
      20*d^2*n3*n5 - 96*n1*n3*n5 + 36*d*n1*n3*n5 + 104*n3^2*n5 - 
      40*d*n3^2*n5 - 24*n1*n3^2*n5 + 16*n3^3*n5 - 136*n4*n5 + 148*d*n4*n5 - 
      32*d^2*n4*n5 + 48*n1*n4*n5 - 16*d*n1*n4*n5 - 8*n1^2*n4*n5 - 
      24*n3*n4*n5 - 32*n1*n3*n4*n5 + 40*n3^2*n4*n5 - 184*n4^2*n5 + 
      68*d*n4^2*n5 + 16*n1*n4^2*n5 - 8*n3*n4^2*n5 - 32*n4^3*n5 + 24*n5^2 - 
      12*d*n5^2 + 8*n1*n5^2 - 8*d*n1*n5^2 + 24*n3*n5^2 - 4*d*n3*n5^2 + 
      8*n3^2*n5^2 - 32*n4*n5^2 + 24*d*n4*n5^2 + 24*n1*n4*n5^2 - 
      24*n3*n4*n5^2 - 32*n4^2*n5^2)*j[p4, n1, 0, n3, n4, 1 + n5, 1, 0, 1, 0, 
      1, 0, 0, 1, 1])/(2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-96 + 80*d - 14*d^2 - d^3 + 96*n1 - 76*d*n1 + 16*d^2*n1 + 4*d*n1^2 - 
      48*n3 + 4*d*n3 + 6*d^2*n3 + 40*n1*n3 - 24*d*n1*n3 - 8*n1^2*n3 + 
      16*n3^2 - 8*d*n3^2 + 16*n1*n3^2 - 80*n4 + 24*d*n4 + 4*d^2*n4 + 
      72*n1*n4 - 36*d*n1*n4 - 8*n1^2*n4 + 8*n3*n4 - 12*d*n3*n4 + 
      40*n1*n3*n4 - 8*n4^2 - 4*d*n4^2 + 24*n1*n4^2 - 128*n5 + 104*d*n5 - 
      20*d^2*n5 + 40*n1*n5 - 12*d*n1*n5 + 8*n1^2*n5 - 88*n3*n5 + 28*d*n3*n5 - 
      8*n1*n3*n5 - 112*n4*n5 + 40*d*n4*n5 - 16*n3*n4*n5 - 16*n4^2*n5 - 
      24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 16*n3*n5^2 - 16*n4*n5^2)*
     j[p4, n1, 0, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, -1, 0, 2])/
    ((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-576 + 768*d - 340*d^2 + 50*d^3 - 480*n1 + 648*d*n1 - 268*d^2*n1 + 
      34*d^3*n1 + 144*n1^2 - 88*d*n1^2 + 12*d^2*n1^2 + 96*n3 - 560*d*n3 + 
      422*d^2*n3 - 85*d^3*n3 - 496*n1*n3 + 352*d*n1*n3 - 52*d^2*n1*n3 + 
      8*n1^2*n3 + 12*d*n1^2*n3 + 784*n3^2 - 844*d*n3^2 + 210*d^2*n3^2 - 
      72*n1*n3^2 - 8*d*n1*n3^2 - 24*n1^2*n3^2 + 368*n3^3 - 160*d*n3^3 + 
      32*n1*n3^3 + 32*n3^4 - 864*n4 + 744*d*n4 - 160*d^2*n4 - 704*n1*n4 + 
      548*d*n1*n4 - 96*d^2*n1*n4 + 56*n1^2*n4 - 16*d*n1^2*n4 + 752*n3*n4 - 
      1008*d*n3*n4 + 284*d^2*n3*n4 - 320*n1*n3*n4 + 64*d*n1*n3*n4 - 
      16*n1^2*n3*n4 + 968*n3^2*n4 - 444*d*n3^2*n4 + 56*n1*n3^2*n4 + 
      144*n3^3*n4 - 384*n4^2 + 160*d*n4^2 - 264*n1*n4^2 + 84*d*n1*n4^2 + 
      8*n1^2*n4^2 + 584*n3*n4^2 - 300*d*n3*n4^2 + 208*n3^2*n4^2 - 48*n4^3 - 
      24*n1*n4^3 + 96*n3*n4^3 - 672*n5 + 720*d*n5 - 238*d^2*n5 + 23*d^3*n5 + 
      92*d*n1*n5 - 32*d^2*n1*n5 + 112*n1^2*n5 - 28*d*n1^2*n5 - 640*n3*n5 + 
      336*d*n3*n5 - 26*d^2*n3*n5 - 192*n1*n3*n5 + 80*d*n1*n3*n5 + 
      8*n1^2*n3*n5 - 24*n3^2*n5 - 44*d*n3^2*n5 - 40*n1*n3^2*n5 + 48*n3^3*n5 - 
      832*n4*n5 + 524*d*n4*n5 - 72*d^2*n4*n5 - 168*n1*n4*n5 + 80*d*n1*n4*n5 - 
      256*n3*n4*n5 + 8*d*n3*n4*n5 - 80*n1*n3*n4*n5 + 96*n3^2*n4*n5 - 
      272*n4^2*n5 + 72*d*n4^2*n5 - 32*n1*n4^2*n5 + 24*n3*n4^2*n5 - 
      24*n4^3*n5 - 368*n5^2 + 304*d*n5^2 - 60*d^2*n5^2 + 104*n1*n5^2 - 
      20*d*n1*n5^2 + 40*n1^2*n5^2 - 344*n3*n5^2 + 124*d*n3*n5^2 - 
      32*n1*n3*n5^2 - 48*n3^2*n5^2 - 360*n4*n5^2 + 132*d*n4*n5^2 - 
      16*n1*n4*n5^2 - 112*n3*n4*n5^2 - 64*n4^2*n5^2 - 56*n5^3 + 28*d*n5^3 + 
      24*n1*n5^3 - 40*n3*n5^3 - 40*n4*n5^3)*j[p4, n1, 0, n3, n4, 1 + n5, 1, 
      0, 1, 0, 1, 1, 0, 0, 1])/(2*(-3 + d - n4 - n5)*
     (-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 
      48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 
      60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 
      260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 16*n1^2*n4 - 
      128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 28*d*n4^2 - 
      48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 
      8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 16*n3^2*n5 - 
      88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 8*n4^2*n5 - 
      8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-96 + 272*d - 182*d^2 + 35*d^3 - 96*n1 + 44*d*n1 - 4*d^2*n1 - 4*d*n1^2 - 
      336*n3 + 412*d*n3 - 110*d^2*n3 + 24*n1*n3 - 8*d*n1*n3 + 8*n1^2*n3 - 
      240*n3^2 + 112*d*n3^2 - 32*n3^3 - 368*n4 + 456*d*n4 - 124*d^2*n4 - 
      8*n1*n4 + 4*d*n1*n4 + 8*n1^2*n4 - 520*n3*n4 + 252*d*n3*n4 - 
      8*n1*n3*n4 - 112*n3^2*n4 - 280*n4^2 + 140*d*n4^2 - 8*n1*n4^2 - 
      128*n3*n4^2 - 48*n4^3 + 256*n5 - 184*d*n5 + 28*d^2*n5 - 104*n1*n5 + 
      28*d*n1*n5 - 8*n1^2*n5 + 152*n3*n5 - 28*d*n3*n5 + 8*n1*n3*n5 - 
      16*n3^2*n5 + 176*n4*n5 - 40*d*n4*n5 - 16*n3*n4*n5 + 72*n5^2 - 
      36*d*n5^2 - 24*n1*n5^2 + 48*n3*n5^2 + 48*n4*n5^2)*
     j[p4, n1, 0, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    (2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
      92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-480 + 736*d - 366*d^2 + 59*d^3 + 48*n1 - 52*d*n1 + 12*d^2*n1 - 
      4*d*n1^2 - 288*n3 + 192*d*n3 + 30*d^2*n3 - 24*d^3*n3 - 96*n1*n3 + 
      80*d*n1*n3 - 16*d^2*n1*n3 + 8*n1^2*n3 + 48*n3^2 - 116*d*n3^2 + 
      44*d^2*n3^2 - 24*n1*n3^2 + 8*d*n1*n3^2 + 16*n3^3 - 16*d*n3^3 - 304*n4 + 
      100*d*n4 + 124*d^2*n4 - 46*d^3*n4 - 80*n1*n4 + 84*d*n1*n4 - 
      20*d^2*n1*n4 + 8*n1^2*n4 + 352*n3*n4 - 552*d*n3*n4 + 178*d^2*n3*n4 - 
      112*n1*n3*n4 + 44*d*n1*n3*n4 + 264*n3^2*n4 - 152*d*n3^2*n4 - 
      16*n1*n3^2*n4 + 32*n3^3*n4 + 352*n4^2 - 484*d*n4^2 + 146*d^2*n4^2 - 
      88*n1*n4^2 + 36*d*n1*n4^2 + 536*n3*n4^2 - 284*d*n3*n4^2 - 
      32*n1*n3*n4^2 + 112*n3^2*n4^2 + 288*n4^3 - 148*d*n4^3 - 16*n1*n4^3 + 
      128*n3*n4^3 + 48*n4^4 + 512*n5 - 536*d*n5 + 186*d^2*n5 - 23*d^3*n5 - 
      248*n1*n5 + 168*d*n1*n5 - 32*d^2*n1*n5 - 8*n1^2*n5 - 4*d*n1^2*n5 + 
      576*n3*n5 - 400*d*n3*n5 + 78*d^2*n3*n5 - 144*n1*n3*n5 + 64*d*n1*n3*n5 + 
      8*n1^2*n3*n5 + 184*n3^2*n5 - 76*d*n3^2*n5 - 24*n1*n3^2*n5 + 
      16*n3^3*n5 + 760*n4*n5 - 576*d*n4*n5 + 120*d^2*n4*n5 - 200*n1*n4*n5 + 
      84*d*n1*n4*n5 + 8*n1^2*n4*n5 + 576*n3*n4*n5 - 248*d*n3*n4*n5 - 
      72*n1*n3*n4*n5 + 104*n3^2*n4*n5 + 424*n4^2*n5 - 188*d*n4^2*n5 - 
      48*n1*n4^2*n5 + 176*n3*n4^2*n5 + 88*n4^3*n5 + 392*n5^2 - 316*d*n5^2 + 
      60*d^2*n5^2 - 144*n1*n5^2 + 44*d*n1*n5^2 - 8*n1^2*n5^2 + 328*n3*n5^2 - 
      112*d*n3*n5^2 - 16*n1*n3*n5^2 + 40*n3^2*n5^2 + 384*n4*n5^2 - 
      140*d*n4*n5^2 - 40*n1*n4*n5^2 + 120*n3*n4*n5^2 + 80*n4^2*n5^2 + 
      56*n5^3 - 28*d*n5^3 - 24*n1*n5^3 + 40*n3*n5^3 + 40*n4*n5^3)*
     j[p4, n1, 0, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 0])/
    (2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
      92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-768 + 1056*d - 528*d^2 + 114*d^3 - 9*d^4 + 768*n1 - 816*d*n1 + 
      284*d^2*n1 - 32*d^3*n1 - 16*d*n1^2 + 4*d^2*n1^2 - 832*n3 + 800*d*n3 - 
      252*d^2*n3 + 26*d^3*n3 + 352*n1*n3 - 216*d*n1*n3 + 32*d^2*n1*n3 + 
      32*n1^2*n3 - 8*d*n1^2*n3 - 192*n3^2 + 112*d*n3^2 - 16*d^2*n3^2 - 
      1088*n4 + 1072*d*n4 - 344*d^2*n4 + 36*d^3*n4 + 608*n1*n4 - 
      392*d*n1*n4 + 60*d^2*n1*n4 + 32*n1^2*n4 - 8*d*n1^2*n4 - 672*n3*n4 + 
      408*d*n3*n4 - 60*d^2*n3*n4 + 96*n1*n3*n4 - 24*d*n1*n3*n4 - 64*n3^2*n4 + 
      16*d*n3^2*n4 - 480*n4^2 + 296*d*n4^2 - 44*d^2*n4^2 + 96*n1*n4^2 - 
      24*d*n1*n4^2 - 128*n3*n4^2 + 32*d*n3*n4^2 - 64*n4^3 + 16*d*n4^3 - 
      960*n5 + 1056*d*n5 - 372*d^2*n5 + 42*d^3*n5 + 672*n1*n5 - 496*d*n1*n5 + 
      92*d^2*n1*n5 - 32*n1^2*n5 - 896*n3*n5 + 592*d*n3*n5 - 96*d^2*n3*n5 + 
      272*n1*n3*n5 - 88*d*n1*n3*n5 + 16*n1^2*n3*n5 - 160*n3^2*n5 + 
      48*d*n3^2*n5 - 1120*n4*n5 + 768*d*n4*n5 - 128*d^2*n4*n5 + 
      432*n1*n4*n5 - 152*d*n1*n4*n5 + 16*n1^2*n4*n5 - 528*n3*n4*n5 + 
      168*d*n3*n4*n5 + 48*n1*n3*n4*n5 - 32*n3^2*n4*n5 - 368*n4^2*n5 + 
      120*d*n4^2*n5 + 48*n1*n4^2*n5 - 64*n3*n4^2*n5 - 32*n4^3*n5 - 384*n5^2 + 
      312*d*n5^2 - 60*d^2*n5^2 + 176*n1*n5^2 - 64*d*n1*n5^2 - 16*n1^2*n5^2 - 
      304*n3*n5^2 + 104*d*n3*n5^2 + 48*n1*n3*n5^2 - 32*n3^2*n5^2 - 
      352*n4*n5^2 + 128*d*n4*n5^2 + 64*n1*n4*n5^2 - 96*n3*n4*n5^2 - 
      64*n4^2*n5^2 - 48*n5^3 + 24*d*n5^3 + 16*n1*n5^3 - 32*n3*n5^3 - 
      32*n4*n5^3)*j[p4, n1, 0, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
      92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-64 + 56*d - 12*d^2 + 24*n1 - 8*d*n1 - 56*n3 + 22*d*n3 + 4*n1*n3 - 
      8*n3^2 - 64*n4 + 26*d*n4 + 4*n1*n4 - 20*n3*n4 - 12*n4^2 - 16*n5 + 
      8*d*n5 + 8*n1*n5 - 12*n3*n5 - 12*n4*n5)*j[p4, n1, 0, n3, n4, 1 + n5, 1, 
      0, 1, 0, 1, 1, 0, 2, 0])/(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
     92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-96 + 144*d - 70*d^2 + 11*d^3 - 4*d*n1 + 2*d^2*n1 - 128*n3 + 124*d*n3 - 
      29*d^2*n3 + 8*n1*n3 - 6*d*n1*n3 - 56*n3^2 + 26*d*n3^2 + 4*n1*n3^2 - 
      8*n3^3 - 160*n4 + 152*d*n4 - 35*d^2*n4 + 8*n1*n4 - 6*d*n1*n4 - 
      136*n3*n4 + 62*d*n3*n4 + 8*n1*n3*n4 - 28*n3^2*n4 - 80*n4^2 + 
      36*d*n4^2 + 4*n1*n4^2 - 32*n3*n4^2 - 12*n4^3 + 8*d*n5 - 4*d^2*n5 - 
      8*n1*n5 + 4*d*n1*n5 - 8*n3*n5 + 8*d*n3*n5 - 4*n1*n3*n5 - 4*n3^2*n5 - 
      16*n4*n5 + 12*d*n4*n5 - 4*n1*n4*n5 - 12*n3*n4*n5 - 8*n4^2*n5 + 8*n5^2 - 
      4*d*n5^2 + 4*n3*n5^2 + 4*n4*n5^2)*j[p4, n1, 0, n3, n4, 1 + n5, 1, 0, 1, 
      0, 2, 0, -1, 1, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96 - 144*d + 70*d^2 - 11*d^3 + 4*d*n1 - 2*d^2*n1 + 128*n3 - 124*d*n3 + 
      29*d^2*n3 - 8*n1*n3 + 6*d*n1*n3 + 56*n3^2 - 26*d*n3^2 - 4*n1*n3^2 + 
      8*n3^3 + 160*n4 - 152*d*n4 + 35*d^2*n4 - 8*n1*n4 + 6*d*n1*n4 + 
      136*n3*n4 - 62*d*n3*n4 - 8*n1*n3*n4 + 28*n3^2*n4 + 80*n4^2 - 
      36*d*n4^2 - 4*n1*n4^2 + 32*n3*n4^2 + 12*n4^3 - 8*d*n5 + 4*d^2*n5 + 
      8*n1*n5 - 4*d*n1*n5 + 8*n3*n5 - 8*d*n3*n5 + 4*n1*n3*n5 + 4*n3^2*n5 + 
      16*n4*n5 - 12*d*n4*n5 + 4*n1*n4*n5 + 12*n3*n4*n5 + 8*n4^2*n5 - 8*n5^2 + 
      4*d*n5^2 - 4*n3*n5^2 - 4*n4*n5^2)*j[p4, n1, 0, n3, n4, 1 + n5, 1, 0, 1, 
      0, 2, 0, 0, 1, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-288 + 448*d - 226*d^2 + 37*d^3 + 48*n1 - 44*d*n1 + 8*d^2*n1 - 
      4*d*n1^2 - 416*n3 + 408*d*n3 - 96*d^2*n3 + 32*n1*n3 - 4*d*n1*n3 + 
      8*n1^2*n3 - 176*n3^2 + 76*d*n3^2 - 8*n1*n3^2 - 16*n3^3 - 560*n4 + 
      548*d*n4 - 130*d^2*n4 + 48*n1*n4 - 8*d*n1*n4 + 8*n1^2*n4 - 480*n3*n4 + 
      212*d*n3*n4 - 16*n1*n3*n4 - 72*n3^2*n4 - 320*n4^2 + 144*d*n4^2 - 
      8*n1*n4^2 - 104*n3*n4^2 - 48*n4^3 + 32*n5 - 8*d*n5 - 4*d^2*n5 + 
      8*n1*n5 - 12*d*n1*n5 - 8*n1^2*n5 - 16*n3*n5 + 24*d*n3*n5 + 
      24*n1*n3*n5 - 24*n3^2*n5 - 24*n4*n5 + 28*d*n4*n5 + 32*n1*n4*n5 - 
      56*n3*n4*n5 - 32*n4^2*n5 + 24*n5^2 - 12*d*n5^2 - 8*n1*n5^2 + 
      16*n3*n5^2 + 16*n4*n5^2)*j[p4, n1, 0, n3, n4, 1 + n5, 1, 0, 2, 0, 1, 0, 
      -1, 1, 1])/(2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96 - 144*d + 70*d^2 - 11*d^3 + 4*d*n1 - 2*d^2*n1 + 128*n3 - 124*d*n3 + 
      29*d^2*n3 - 8*n1*n3 + 6*d*n1*n3 + 56*n3^2 - 26*d*n3^2 - 4*n1*n3^2 + 
      8*n3^3 + 160*n4 - 152*d*n4 + 35*d^2*n4 - 8*n1*n4 + 6*d*n1*n4 + 
      136*n3*n4 - 62*d*n3*n4 - 8*n1*n3*n4 + 28*n3^2*n4 + 80*n4^2 - 
      36*d*n4^2 - 4*n1*n4^2 + 32*n3*n4^2 + 12*n4^3 - 8*d*n5 + 4*d^2*n5 + 
      8*n1*n5 - 4*d*n1*n5 + 8*n3*n5 - 8*d*n3*n5 + 4*n1*n3*n5 + 4*n3^2*n5 + 
      16*n4*n5 - 12*d*n4*n5 + 4*n1*n4*n5 + 12*n3*n4*n5 + 8*n4^2*n5 - 8*n5^2 + 
      4*d*n5^2 - 4*n3*n5^2 - 4*n4*n5^2)*j[p4, n1, 0, n3, n4, 1 + n5, 2, -1, 
      0, 0, 1, 1, 0, 1, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((288 - 448*d + 226*d^2 - 37*d^3 - 48*n1 + 44*d*n1 - 8*d^2*n1 + 4*d*n1^2 + 
      416*n3 - 408*d*n3 + 96*d^2*n3 - 32*n1*n3 + 4*d*n1*n3 - 8*n1^2*n3 + 
      176*n3^2 - 76*d*n3^2 + 8*n1*n3^2 + 16*n3^3 + 560*n4 - 548*d*n4 + 
      130*d^2*n4 - 48*n1*n4 + 8*d*n1*n4 - 8*n1^2*n4 + 480*n3*n4 - 
      212*d*n3*n4 + 16*n1*n3*n4 + 72*n3^2*n4 + 320*n4^2 - 144*d*n4^2 + 
      8*n1*n4^2 + 104*n3*n4^2 + 48*n4^3 - 32*n5 + 8*d*n5 + 4*d^2*n5 - 
      8*n1*n5 + 12*d*n1*n5 + 8*n1^2*n5 + 16*n3*n5 - 24*d*n3*n5 - 
      24*n1*n3*n5 + 24*n3^2*n5 + 24*n4*n5 - 28*d*n4*n5 - 32*n1*n4*n5 + 
      56*n3*n4*n5 + 32*n4^2*n5 - 24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 
      16*n3*n5^2 - 16*n4*n5^2)*j[p4, n1, 0, n3, n4, 1 + n5, 2, -1, 1, 0, 0, 
      1, 0, 1, 1])/(2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((480 - 736*d + 366*d^2 - 59*d^3 - 48*n1 + 52*d*n1 - 12*d^2*n1 + 
      4*d*n1^2 + 672*n3 - 656*d*n3 + 154*d^2*n3 - 48*n1*n3 + 16*d*n1*n3 - 
      8*n1^2*n3 + 288*n3^2 - 128*d*n3^2 + 32*n3^3 + 880*n4 - 852*d*n4 + 
      200*d^2*n4 - 64*n1*n4 + 20*d*n1*n4 - 8*n1^2*n4 + 752*n3*n4 - 
      336*d*n3*n4 + 128*n3^2*n4 + 480*n4^2 - 216*d*n4^2 + 168*n3*n4^2 + 
      72*n4^3 - 32*n5 - 8*d*n5 + 12*d^2*n5 + 8*n1*n5 + 4*d*n1*n5 + 
      8*n1^2*n5 + 32*n3*n5 - 40*d*n3*n5 - 16*n1*n3*n5 + 32*n3^2*n5 + 
      56*n4*n5 - 52*d*n4*n5 - 24*n1*n4*n5 + 80*n3*n4*n5 + 48*n4^2*n5 - 
      40*n5^2 + 20*d*n5^2 + 8*n1*n5^2 - 24*n3*n5^2 - 24*n4*n5^2)*
     j[p4, n1, 0, n3, n4, 1 + n5, 2, 0, 0, -1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
      92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-96 + 144*d - 70*d^2 + 11*d^3 - 4*d*n1 + 2*d^2*n1 - 128*n3 + 124*d*n3 - 
      29*d^2*n3 + 8*n1*n3 - 6*d*n1*n3 - 56*n3^2 + 26*d*n3^2 + 4*n1*n3^2 - 
      8*n3^3 - 160*n4 + 152*d*n4 - 35*d^2*n4 + 8*n1*n4 - 6*d*n1*n4 - 
      136*n3*n4 + 62*d*n3*n4 + 8*n1*n3*n4 - 28*n3^2*n4 - 80*n4^2 + 
      36*d*n4^2 + 4*n1*n4^2 - 32*n3*n4^2 - 12*n4^3 + 8*d*n5 - 4*d^2*n5 - 
      8*n1*n5 + 4*d*n1*n5 - 8*n3*n5 + 8*d*n3*n5 - 4*n1*n3*n5 - 4*n3^2*n5 - 
      16*n4*n5 + 12*d*n4*n5 - 4*n1*n4*n5 - 12*n3*n4*n5 - 8*n4^2*n5 + 8*n5^2 - 
      4*d*n5^2 + 4*n3*n5^2 + 4*n4*n5^2)*j[p4, n1, 0, n3, n4, 1 + n5, 2, 0, 0, 
      0, 1, 1, -1, 1, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((288 - 448*d + 226*d^2 - 37*d^3 - 48*n1 + 44*d*n1 - 8*d^2*n1 + 4*d*n1^2 + 
      416*n3 - 408*d*n3 + 96*d^2*n3 - 32*n1*n3 + 4*d*n1*n3 - 8*n1^2*n3 + 
      176*n3^2 - 76*d*n3^2 + 8*n1*n3^2 + 16*n3^3 + 560*n4 - 548*d*n4 + 
      130*d^2*n4 - 48*n1*n4 + 8*d*n1*n4 - 8*n1^2*n4 + 480*n3*n4 - 
      212*d*n3*n4 + 16*n1*n3*n4 + 72*n3^2*n4 + 320*n4^2 - 144*d*n4^2 + 
      8*n1*n4^2 + 104*n3*n4^2 + 48*n4^3 - 32*n5 + 8*d*n5 + 4*d^2*n5 - 
      8*n1*n5 + 12*d*n1*n5 + 8*n1^2*n5 + 16*n3*n5 - 24*d*n3*n5 - 
      24*n1*n3*n5 + 24*n3^2*n5 + 24*n4*n5 - 28*d*n4*n5 - 32*n1*n4*n5 + 
      56*n3*n4*n5 + 32*n4^2*n5 - 24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 
      16*n3*n5^2 - 16*n4*n5^2)*j[p4, n1, 0, n3, n4, 1 + n5, 2, 0, 1, -1, 1, 
      1, 0, 0, 1])/(2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((288 - 448*d + 226*d^2 - 37*d^3 - 48*n1 + 44*d*n1 - 8*d^2*n1 + 4*d*n1^2 + 
      416*n3 - 408*d*n3 + 96*d^2*n3 - 32*n1*n3 + 4*d*n1*n3 - 8*n1^2*n3 + 
      176*n3^2 - 76*d*n3^2 + 8*n1*n3^2 + 16*n3^3 + 560*n4 - 548*d*n4 + 
      130*d^2*n4 - 48*n1*n4 + 8*d*n1*n4 - 8*n1^2*n4 + 480*n3*n4 - 
      212*d*n3*n4 + 16*n1*n3*n4 + 72*n3^2*n4 + 320*n4^2 - 144*d*n4^2 + 
      8*n1*n4^2 + 104*n3*n4^2 + 48*n4^3 - 32*n5 + 8*d*n5 + 4*d^2*n5 - 
      8*n1*n5 + 12*d*n1*n5 + 8*n1^2*n5 + 16*n3*n5 - 24*d*n3*n5 - 
      24*n1*n3*n5 + 24*n3^2*n5 + 24*n4*n5 - 28*d*n4*n5 - 32*n1*n4*n5 + 
      56*n3*n4*n5 + 32*n4^2*n5 - 24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 
      16*n3*n5^2 - 16*n4*n5^2)*j[p4, n1, 0, n3, n4, 1 + n5, 2, 0, 1, -1, 1, 
      1, 0, 1, 0])/(2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-288 + 448*d - 226*d^2 + 37*d^3 + 48*n1 - 44*d*n1 + 8*d^2*n1 - 
      4*d*n1^2 - 416*n3 + 408*d*n3 - 96*d^2*n3 + 32*n1*n3 - 4*d*n1*n3 + 
      8*n1^2*n3 - 176*n3^2 + 76*d*n3^2 - 8*n1*n3^2 - 16*n3^3 - 560*n4 + 
      548*d*n4 - 130*d^2*n4 + 48*n1*n4 - 8*d*n1*n4 + 8*n1^2*n4 - 480*n3*n4 + 
      212*d*n3*n4 - 16*n1*n3*n4 - 72*n3^2*n4 - 320*n4^2 + 144*d*n4^2 - 
      8*n1*n4^2 - 104*n3*n4^2 - 48*n4^3 + 32*n5 - 8*d*n5 - 4*d^2*n5 + 
      8*n1*n5 - 12*d*n1*n5 - 8*n1^2*n5 - 16*n3*n5 + 24*d*n3*n5 + 
      24*n1*n3*n5 - 24*n3^2*n5 - 24*n4*n5 + 28*d*n4*n5 + 32*n1*n4*n5 - 
      56*n3*n4*n5 - 32*n4^2*n5 + 24*n5^2 - 12*d*n5^2 - 8*n1*n5^2 + 
      16*n3*n5^2 + 16*n4*n5^2)*j[p4, n1, 0, n3, n4, 1 + n5, 2, 0, 1, 0, 0, 1, 
      -1, 1, 1])/(2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96 - 176*d + 98*d^2 - 17*d^3 + 16*d*n1 - 6*d^2*n1 + 192*n3 - 208*d*n3 + 
      52*d^2*n3 - 32*n1*n3 + 16*d*n1*n3 + 112*n3^2 - 52*d*n3^2 - 8*n1*n3^2 + 
      16*n3^3 + 224*n4 - 240*d*n4 + 60*d^2*n4 - 32*n1*n4 + 16*d*n1*n4 + 
      256*n3*n4 - 120*d*n3*n4 - 16*n1*n3*n4 + 56*n3^2*n4 + 144*n4^2 - 
      68*d*n4^2 - 8*n1*n4^2 + 64*n3*n4^2 + 24*n4^3 + 32*n5 - 136*d*n5 + 
      94*d^2*n5 - 17*d^3*n5 + 32*n1*n5 + 8*d*n1*n5 - 6*d^2*n1*n5 + 
      160*n3*n5 - 208*d*n3*n5 + 52*d^2*n3*n5 - 32*n1*n3*n5 + 16*d*n1*n3*n5 + 
      120*n3^2*n5 - 52*d*n3^2*n5 - 8*n1*n3^2*n5 + 16*n3^3*n5 + 192*n4*n5 - 
      240*d*n4*n5 + 60*d^2*n4*n5 - 32*n1*n4*n5 + 16*d*n1*n4*n5 + 
      272*n3*n4*n5 - 120*d*n3*n4*n5 - 16*n1*n3*n4*n5 + 56*n3^2*n4*n5 + 
      152*n4^2*n5 - 68*d*n4^2*n5 - 8*n1*n4^2*n5 + 64*n3*n4^2*n5 + 
      24*n4^3*n5 - 88*n5^2 + 52*d*n5^2 - 4*d^2*n5^2 + 40*n1*n5^2 - 
      8*d*n1*n5^2 - 48*n3*n5^2 + 8*n3^2*n5^2 - 48*n4*n5^2 + 16*n3*n4*n5^2 + 
      8*n4^2*n5^2 - 24*n5^3 + 12*d*n5^3 + 8*n1*n5^3 - 16*n3*n5^3 - 
      16*n4*n5^3)*j[p4, n1, 0, n3, n4, 2 + n5, 0, 0, 1, -1, 1, 1, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96 - 144*d + 70*d^2 - 11*d^3 + 4*d*n1 - 2*d^2*n1 + 128*n3 - 124*d*n3 + 
      29*d^2*n3 - 8*n1*n3 + 6*d*n1*n3 + 56*n3^2 - 26*d*n3^2 - 4*n1*n3^2 + 
      8*n3^3 + 160*n4 - 152*d*n4 + 35*d^2*n4 - 8*n1*n4 + 6*d*n1*n4 + 
      136*n3*n4 - 62*d*n3*n4 - 8*n1*n3*n4 + 28*n3^2*n4 + 80*n4^2 - 
      36*d*n4^2 - 4*n1*n4^2 + 32*n3*n4^2 + 12*n4^3 + 96*n5 - 152*d*n5 + 
      74*d^2*n5 - 11*d^3*n5 + 8*n1*n5 - 2*d^2*n1*n5 + 136*n3*n5 - 
      132*d*n3*n5 + 29*d^2*n3*n5 - 4*n1*n3*n5 + 6*d*n1*n3*n5 + 60*n3^2*n5 - 
      26*d*n3^2*n5 - 4*n1*n3^2*n5 + 8*n3^3*n5 + 176*n4*n5 - 164*d*n4*n5 + 
      35*d^2*n4*n5 - 4*n1*n4*n5 + 6*d*n1*n4*n5 + 148*n3*n4*n5 - 
      62*d*n3*n4*n5 - 8*n1*n3*n4*n5 + 28*n3^2*n4*n5 + 88*n4^2*n5 - 
      36*d*n4^2*n5 - 4*n1*n4^2*n5 + 32*n3*n4^2*n5 + 12*n4^3*n5 - 8*n5^2 - 
      4*d*n5^2 + 4*d^2*n5^2 + 8*n1*n5^2 - 4*d*n1*n5^2 + 4*n3*n5^2 - 
      8*d*n3*n5^2 + 4*n1*n3*n5^2 + 4*n3^2*n5^2 + 12*n4*n5^2 - 12*d*n4*n5^2 + 
      4*n1*n4*n5^2 + 12*n3*n4*n5^2 + 8*n4^2*n5^2 - 8*n5^3 + 4*d*n5^3 - 
      4*n3*n5^3 - 4*n4*n5^3)*j[p4, n1, 0, n3, n4, 2 + n5, 1, -1, 1, 0, 1, 1, 
      0, 0, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-96 + 144*d - 70*d^2 + 11*d^3 - 4*d*n1 + 2*d^2*n1 - 128*n3 + 124*d*n3 - 
      29*d^2*n3 + 8*n1*n3 - 6*d*n1*n3 - 56*n3^2 + 26*d*n3^2 + 4*n1*n3^2 - 
      8*n3^3 - 160*n4 + 152*d*n4 - 35*d^2*n4 + 8*n1*n4 - 6*d*n1*n4 - 
      136*n3*n4 + 62*d*n3*n4 + 8*n1*n3*n4 - 28*n3^2*n4 - 80*n4^2 + 
      36*d*n4^2 + 4*n1*n4^2 - 32*n3*n4^2 - 12*n4^3 - 96*n5 + 152*d*n5 - 
      74*d^2*n5 + 11*d^3*n5 - 8*n1*n5 + 2*d^2*n1*n5 - 136*n3*n5 + 
      132*d*n3*n5 - 29*d^2*n3*n5 + 4*n1*n3*n5 - 6*d*n1*n3*n5 - 60*n3^2*n5 + 
      26*d*n3^2*n5 + 4*n1*n3^2*n5 - 8*n3^3*n5 - 176*n4*n5 + 164*d*n4*n5 - 
      35*d^2*n4*n5 + 4*n1*n4*n5 - 6*d*n1*n4*n5 - 148*n3*n4*n5 + 
      62*d*n3*n4*n5 + 8*n1*n3*n4*n5 - 28*n3^2*n4*n5 - 88*n4^2*n5 + 
      36*d*n4^2*n5 + 4*n1*n4^2*n5 - 32*n3*n4^2*n5 - 12*n4^3*n5 + 8*n5^2 + 
      4*d*n5^2 - 4*d^2*n5^2 - 8*n1*n5^2 + 4*d*n1*n5^2 - 4*n3*n5^2 + 
      8*d*n3*n5^2 - 4*n1*n3*n5^2 - 4*n3^2*n5^2 - 12*n4*n5^2 + 12*d*n4*n5^2 - 
      4*n1*n4*n5^2 - 12*n3*n4*n5^2 - 8*n4^2*n5^2 + 8*n5^3 - 4*d*n5^3 + 
      4*n3*n5^3 + 4*n4*n5^3)*j[p4, n1, 0, n3, n4, 2 + n5, 1, -1, 1, 0, 1, 1, 
      0, 1, 0])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 
      80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((480 - 480*d + 142*d^2 - 11*d^3 - 240*n1 + 148*d*n1 - 24*d^2*n1 - 
      4*d*n1^2 + 256*n3 - 80*d*n3 - 8*d^2*n3 - 16*n1*n3 + 12*d*n1*n3 + 
      8*n1^2*n3 - 80*n3^2 + 44*d*n3^2 - 8*n1*n3^2 - 16*n3^3 + 464*n4 - 
      244*d*n4 + 22*d^2*n4 - 96*n1*n4 + 40*d*n1*n4 + 8*n1^2*n4 - 16*n3*n4 + 
      44*d*n3*n4 - 32*n1*n3*n4 - 40*n3^2*n4 + 80*n4^2 - 8*d*n4^2 - 
      24*n1*n4^2 - 24*n3*n4^2 + 960*n5 - 872*d*n5 + 218*d^2*n5 - 11*d^3*n5 - 
      424*n1*n5 + 200*d*n1*n5 - 24*d^2*n1*n5 - 8*n1^2*n5 - 4*d*n1^2*n5 + 
      608*n3*n5 - 192*d*n3*n5 - 8*d^2*n3*n5 - 8*n1*n3*n5 + 12*d*n1*n3*n5 + 
      8*n1^2*n3*n5 - 72*n3^2*n5 + 44*d*n3^2*n5 - 8*n1*n3^2*n5 - 16*n3^3*n5 + 
      904*n4*n5 - 400*d*n4*n5 + 22*d^2*n4*n5 - 112*n1*n4*n5 + 40*d*n1*n4*n5 + 
      8*n1^2*n4*n5 + 56*n3*n4*n5 + 44*d*n3*n4*n5 - 32*n1*n3*n4*n5 - 
      40*n3^2*n4*n5 + 144*n4^2*n5 - 8*d*n4^2*n5 - 24*n1*n4^2*n5 - 
      24*n3*n4^2*n5 + 568*n5^2 - 436*d*n5^2 + 76*d^2*n5^2 - 224*n1*n5^2 + 
      52*d*n1*n5^2 - 8*n1^2*n5^2 + 416*n3*n5^2 - 112*d*n3*n5^2 + 
      8*n1*n3*n5^2 + 8*n3^2*n5^2 + 504*n4*n5^2 - 156*d*n4*n5^2 - 
      16*n1*n4*n5^2 + 72*n3*n4*n5^2 + 64*n4^2*n5^2 + 88*n5^3 - 44*d*n5^3 - 
      40*n1*n5^3 + 64*n3*n5^3 + 64*n4*n5^3)*j[p4, n1, 0, n3, n4, 2 + n5, 1, 
      0, 1, -1, 1, 1, 0, 0, 1])/(2*(-3 + d - n4 - n5)*
     (-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 
      48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 
      60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 
      260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 16*n1^2*n4 - 
      128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 28*d*n4^2 - 
      48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 
      8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 16*n3^2*n5 - 
      88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 8*n4^2*n5 - 
      8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-480 + 480*d - 142*d^2 + 11*d^3 + 240*n1 - 148*d*n1 + 24*d^2*n1 + 
      4*d*n1^2 - 256*n3 + 80*d*n3 + 8*d^2*n3 + 16*n1*n3 - 12*d*n1*n3 - 
      8*n1^2*n3 + 80*n3^2 - 44*d*n3^2 + 8*n1*n3^2 + 16*n3^3 - 464*n4 + 
      244*d*n4 - 22*d^2*n4 + 96*n1*n4 - 40*d*n1*n4 - 8*n1^2*n4 + 16*n3*n4 - 
      44*d*n3*n4 + 32*n1*n3*n4 + 40*n3^2*n4 - 80*n4^2 + 8*d*n4^2 + 
      24*n1*n4^2 + 24*n3*n4^2 - 960*n5 + 872*d*n5 - 218*d^2*n5 + 11*d^3*n5 + 
      424*n1*n5 - 200*d*n1*n5 + 24*d^2*n1*n5 + 8*n1^2*n5 + 4*d*n1^2*n5 - 
      608*n3*n5 + 192*d*n3*n5 + 8*d^2*n3*n5 + 8*n1*n3*n5 - 12*d*n1*n3*n5 - 
      8*n1^2*n3*n5 + 72*n3^2*n5 - 44*d*n3^2*n5 + 8*n1*n3^2*n5 + 16*n3^3*n5 - 
      904*n4*n5 + 400*d*n4*n5 - 22*d^2*n4*n5 + 112*n1*n4*n5 - 40*d*n1*n4*n5 - 
      8*n1^2*n4*n5 - 56*n3*n4*n5 - 44*d*n3*n4*n5 + 32*n1*n3*n4*n5 + 
      40*n3^2*n4*n5 - 144*n4^2*n5 + 8*d*n4^2*n5 + 24*n1*n4^2*n5 + 
      24*n3*n4^2*n5 - 568*n5^2 + 436*d*n5^2 - 76*d^2*n5^2 + 224*n1*n5^2 - 
      52*d*n1*n5^2 + 8*n1^2*n5^2 - 416*n3*n5^2 + 112*d*n3*n5^2 - 
      8*n1*n3*n5^2 - 8*n3^2*n5^2 - 504*n4*n5^2 + 156*d*n4*n5^2 + 
      16*n1*n4*n5^2 - 72*n3*n4*n5^2 - 64*n4^2*n5^2 - 88*n5^3 + 44*d*n5^3 + 
      40*n1*n5^3 - 64*n3*n5^3 - 64*n4*n5^3)*j[p4, n1, 0, n3, n4, 2 + n5, 1, 
      0, 1, -1, 1, 1, 0, 1, 0])/(2*(-3 + d - n4 - n5)*
     (-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 
      48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 
      60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 
      260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 16*n1^2*n4 - 
      128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 28*d*n4^2 - 
      48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 
      8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 16*n3^2*n5 - 
      88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 8*n4^2*n5 - 
      8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96*n4 - 80*d*n4 + 14*d^2*n4 + d^3*n4 - 96*n1*n4 + 76*d*n1*n4 - 
      16*d^2*n1*n4 - 4*d*n1^2*n4 + 48*n3*n4 - 4*d*n3*n4 - 6*d^2*n3*n4 - 
      40*n1*n3*n4 + 24*d*n1*n3*n4 + 8*n1^2*n3*n4 - 16*n3^2*n4 + 8*d*n3^2*n4 - 
      16*n1*n3^2*n4 + 80*n4^2 - 24*d*n4^2 - 4*d^2*n4^2 - 72*n1*n4^2 + 
      36*d*n1*n4^2 + 8*n1^2*n4^2 - 8*n3*n4^2 + 12*d*n3*n4^2 - 40*n1*n3*n4^2 + 
      8*n4^3 + 4*d*n4^3 - 24*n1*n4^3 + 128*n4*n5 - 104*d*n4*n5 + 
      20*d^2*n4*n5 - 40*n1*n4*n5 + 12*d*n1*n4*n5 - 8*n1^2*n4*n5 + 
      88*n3*n4*n5 - 28*d*n3*n4*n5 + 8*n1*n3*n4*n5 + 112*n4^2*n5 - 
      40*d*n4^2*n5 + 16*n3*n4^2*n5 + 16*n4^3*n5 + 24*n4*n5^2 - 12*d*n4*n5^2 - 
      8*n1*n4*n5^2 + 16*n3*n4*n5^2 + 16*n4^2*n5^2)*j[p4, n1, 0, n3, 1 + n4, 
      n5, 0, 0, 1, 0, 1, 1, 0, 1, 1])/((-3 + d - n4 - n5)*
     (-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 
      48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 
      60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 
      260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 16*n1^2*n4 - 
      128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 28*d*n4^2 - 
      48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 
      8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 16*n3^2*n5 - 
      88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 8*n4^2*n5 - 
      8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-96*n4 + 80*d*n4 - 14*d^2*n4 - d^3*n4 + 96*n1*n4 - 76*d*n1*n4 + 
      16*d^2*n1*n4 + 4*d*n1^2*n4 - 48*n3*n4 + 4*d*n3*n4 + 6*d^2*n3*n4 + 
      40*n1*n3*n4 - 24*d*n1*n3*n4 - 8*n1^2*n3*n4 + 16*n3^2*n4 - 8*d*n3^2*n4 + 
      16*n1*n3^2*n4 - 80*n4^2 + 24*d*n4^2 + 4*d^2*n4^2 + 72*n1*n4^2 - 
      36*d*n1*n4^2 - 8*n1^2*n4^2 + 8*n3*n4^2 - 12*d*n3*n4^2 + 40*n1*n3*n4^2 - 
      8*n4^3 - 4*d*n4^3 + 24*n1*n4^3 - 128*n4*n5 + 104*d*n4*n5 - 
      20*d^2*n4*n5 + 40*n1*n4*n5 - 12*d*n1*n4*n5 + 8*n1^2*n4*n5 - 
      88*n3*n4*n5 + 28*d*n3*n4*n5 - 8*n1*n3*n4*n5 - 112*n4^2*n5 + 
      40*d*n4^2*n5 - 16*n3*n4^2*n5 - 16*n4^3*n5 - 24*n4*n5^2 + 12*d*n4*n5^2 + 
      8*n1*n4*n5^2 - 16*n3*n4*n5^2 - 16*n4^2*n5^2)*j[p4, n1, 0, n3, 1 + n4, 
      n5, 1, 0, 0, 0, 1, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5)*
     (-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 
      48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 
      60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 
      260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 16*n1^2*n4 - 
      128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 28*d*n4^2 - 
      48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 
      8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 16*n3^2*n5 - 
      88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 8*n4^2*n5 - 
      8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96*n4 - 80*d*n4 + 14*d^2*n4 + d^3*n4 - 96*n1*n4 + 76*d*n1*n4 - 
      16*d^2*n1*n4 - 4*d*n1^2*n4 + 48*n3*n4 - 4*d*n3*n4 - 6*d^2*n3*n4 - 
      40*n1*n3*n4 + 24*d*n1*n3*n4 + 8*n1^2*n3*n4 - 16*n3^2*n4 + 8*d*n3^2*n4 - 
      16*n1*n3^2*n4 + 80*n4^2 - 24*d*n4^2 - 4*d^2*n4^2 - 72*n1*n4^2 + 
      36*d*n1*n4^2 + 8*n1^2*n4^2 - 8*n3*n4^2 + 12*d*n3*n4^2 - 40*n1*n3*n4^2 + 
      8*n4^3 + 4*d*n4^3 - 24*n1*n4^3 + 128*n4*n5 - 104*d*n4*n5 + 
      20*d^2*n4*n5 - 40*n1*n4*n5 + 12*d*n1*n4*n5 - 8*n1^2*n4*n5 + 
      88*n3*n4*n5 - 28*d*n3*n4*n5 + 8*n1*n3*n4*n5 + 112*n4^2*n5 - 
      40*d*n4^2*n5 + 16*n3*n4^2*n5 + 16*n4^3*n5 + 24*n4*n5^2 - 12*d*n4*n5^2 - 
      8*n1*n4*n5^2 + 16*n3*n4*n5^2 + 16*n4^2*n5^2)*j[p4, n1, 0, n3, 1 + n4, 
      n5, 1, 0, 1, 0, 0, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5)*
     (-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 
      48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 
      60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 
      260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 16*n1^2*n4 - 
      128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 28*d*n4^2 - 
      48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 
      8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 16*n3^2*n5 - 
      88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 8*n4^2*n5 - 
      8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-96*n4 + 80*d*n4 - 14*d^2*n4 - d^3*n4 + 96*n1*n4 - 76*d*n1*n4 + 
      16*d^2*n1*n4 + 4*d*n1^2*n4 - 48*n3*n4 + 4*d*n3*n4 + 6*d^2*n3*n4 + 
      40*n1*n3*n4 - 24*d*n1*n3*n4 - 8*n1^2*n3*n4 + 16*n3^2*n4 - 8*d*n3^2*n4 + 
      16*n1*n3^2*n4 - 80*n4^2 + 24*d*n4^2 + 4*d^2*n4^2 + 72*n1*n4^2 - 
      36*d*n1*n4^2 - 8*n1^2*n4^2 + 8*n3*n4^2 - 12*d*n3*n4^2 + 40*n1*n3*n4^2 - 
      8*n4^3 - 4*d*n4^3 + 24*n1*n4^3 - 128*n4*n5 + 104*d*n4*n5 - 
      20*d^2*n4*n5 + 40*n1*n4*n5 - 12*d*n1*n4*n5 + 8*n1^2*n4*n5 - 
      88*n3*n4*n5 + 28*d*n3*n4*n5 - 8*n1*n3*n4*n5 - 112*n4^2*n5 + 
      40*d*n4^2*n5 - 16*n3*n4^2*n5 - 16*n4^3*n5 - 24*n4*n5^2 + 12*d*n4*n5^2 + 
      8*n1*n4*n5^2 - 16*n3*n4*n5^2 - 16*n4^2*n5^2)*j[p4, n1, 0, n3, 1 + n4, 
      n5, 1, 0, 1, 0, 1, 0, 0, 1, 1])/(2*(-3 + d - n4 - n5)*
     (-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 
      48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 
      60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 
      260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 16*n1^2*n4 - 
      128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 28*d*n4^2 - 
      48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 
      8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 16*n3^2*n5 - 
      88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 8*n4^2*n5 - 
      8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96*n4 - 80*d*n4 + 14*d^2*n4 + d^3*n4 - 96*n1*n4 + 76*d*n1*n4 - 
      16*d^2*n1*n4 - 4*d*n1^2*n4 + 48*n3*n4 - 4*d*n3*n4 - 6*d^2*n3*n4 - 
      40*n1*n3*n4 + 24*d*n1*n3*n4 + 8*n1^2*n3*n4 - 16*n3^2*n4 + 8*d*n3^2*n4 - 
      16*n1*n3^2*n4 + 80*n4^2 - 24*d*n4^2 - 4*d^2*n4^2 - 72*n1*n4^2 + 
      36*d*n1*n4^2 + 8*n1^2*n4^2 - 8*n3*n4^2 + 12*d*n3*n4^2 - 40*n1*n3*n4^2 + 
      8*n4^3 + 4*d*n4^3 - 24*n1*n4^3 + 128*n4*n5 - 104*d*n4*n5 + 
      20*d^2*n4*n5 - 40*n1*n4*n5 + 12*d*n1*n4*n5 - 8*n1^2*n4*n5 + 
      88*n3*n4*n5 - 28*d*n3*n4*n5 + 8*n1*n3*n4*n5 + 112*n4^2*n5 - 
      40*d*n4^2*n5 + 16*n3*n4^2*n5 + 16*n4^3*n5 + 24*n4*n5^2 - 12*d*n4*n5^2 - 
      8*n1*n4*n5^2 + 16*n3*n4*n5^2 + 16*n4^2*n5^2)*j[p4, n1, 0, n3, 1 + n4, 
      n5, 1, 0, 1, 0, 1, 1, 0, 1, 0])/(2*(-3 + d - n4 - n5)*
     (-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 
      48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 
      60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 
      260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 16*n1^2*n4 - 
      128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 28*d*n4^2 - 
      48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 
      8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 16*n3^2*n5 - 
      88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 8*n4^2*n5 - 
      8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-192*n4 + 256*d*n4 - 112*d^2*n4 + 16*d^3*n4 + 96*n1*n4 - 92*d*n1*n4 + 
      22*d^2*n1*n4 + 4*d*n1^2*n4 - 240*n3*n4 + 212*d*n3*n4 - 46*d^2*n3*n4 + 
      72*n1*n3*n4 - 40*d*n1*n3*n4 - 8*n1^2*n3*n4 - 96*n3^2*n4 + 
      44*d*n3^2*n4 + 24*n1*n3^2*n4 - 16*n3^3*n4 - 304*n4^2 + 264*d*n4^2 - 
      56*d^2*n4^2 + 104*n1*n4^2 - 52*d*n1*n4^2 - 8*n1^2*n4^2 - 248*n3*n4^2 + 
      108*d*n3*n4^2 + 56*n1*n3*n4^2 - 56*n3^2*n4^2 - 152*n4^3 + 64*d*n4^3 + 
      32*n1*n4^3 - 64*n3*n4^3 - 24*n4^4 - 64*n4*n5 + 64*d*n4*n5 - 
      16*d^2*n4*n5 + 8*n1*n4*n5 - 4*d*n1*n4*n5 + 8*n1^2*n4*n5 - 56*n3*n4*n5 + 
      28*d*n3*n4*n5 - 8*n1*n3*n4*n5 - 8*n3^2*n4*n5 - 80*n4^2*n5 + 
      40*d*n4^2*n5 - 32*n3*n4^2*n5 - 24*n4^3*n5)*j[p4, n1, 0, n3, 1 + n4, 
      1 + n5, 0, -1, 1, 0, 1, 1, 0, 1, 1])/((-3 + d - n4 - n5)*
     (-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 
      48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 
      60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 
      260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 16*n1^2*n4 - 
      128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 28*d*n4^2 - 
      48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 
      8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 16*n3^2*n5 - 
      88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 8*n4^2*n5 - 
      8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96*n4 - 176*d*n4 + 98*d^2*n4 - 17*d^3*n4 + 16*d*n1*n4 - 6*d^2*n1*n4 + 
      192*n3*n4 - 208*d*n3*n4 + 52*d^2*n3*n4 - 32*n1*n3*n4 + 16*d*n1*n3*n4 + 
      112*n3^2*n4 - 52*d*n3^2*n4 - 8*n1*n3^2*n4 + 16*n3^3*n4 + 224*n4^2 - 
      240*d*n4^2 + 60*d^2*n4^2 - 32*n1*n4^2 + 16*d*n1*n4^2 + 256*n3*n4^2 - 
      120*d*n3*n4^2 - 16*n1*n3*n4^2 + 56*n3^2*n4^2 + 144*n4^3 - 68*d*n4^3 - 
      8*n1*n4^3 + 64*n3*n4^3 + 24*n4^4 - 64*n4*n5 + 40*d*n4*n5 - 
      4*d^2*n4*n5 + 32*n1*n4*n5 - 8*d*n1*n4*n5 - 32*n3*n4*n5 + 8*n3^2*n4*n5 - 
      32*n4^2*n5 + 16*n3*n4^2*n5 + 8*n4^3*n5 - 24*n4*n5^2 + 12*d*n4*n5^2 + 
      8*n1*n4*n5^2 - 16*n3*n4*n5^2 - 16*n4^2*n5^2)*j[p4, n1, 0, n3, 1 + n4, 
      1 + n5, 0, 0, 1, -1, 1, 1, 0, 1, 1])/((-3 + d - n4 - n5)*
     (-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 
      48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 
      60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 
      260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 16*n1^2*n4 - 
      128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 28*d*n4^2 - 
      48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 
      8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 16*n3^2*n5 - 
      88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 8*n4^2*n5 - 
      8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((288*n4 - 432*d*n4 + 210*d^2*n4 - 33*d^3*n4 - 96*n1*n4 + 108*d*n1*n4 - 
      28*d^2*n1*n4 - 4*d*n1^2*n4 + 432*n3*n4 - 420*d*n3*n4 + 98*d^2*n3*n4 - 
      104*n1*n3*n4 + 56*d*n1*n3*n4 + 8*n1^2*n3*n4 + 208*n3^2*n4 - 
      96*d*n3^2*n4 - 32*n1*n3^2*n4 + 32*n3^3*n4 + 528*n4^2 - 504*d*n4^2 + 
      116*d^2*n4^2 - 136*n1*n4^2 + 68*d*n1*n4^2 + 8*n1^2*n4^2 + 504*n3*n4^2 - 
      228*d*n3*n4^2 - 72*n1*n3*n4^2 + 112*n3^2*n4^2 + 296*n4^3 - 132*d*n4^3 - 
      40*n1*n4^3 + 128*n3*n4^3 + 48*n4^4 - 24*d*n4*n5 + 12*d^2*n4*n5 + 
      24*n1*n4*n5 - 4*d*n1*n4*n5 - 8*n1^2*n4*n5 + 24*n3*n4*n5 - 
      28*d*n3*n4*n5 + 8*n1*n3*n4*n5 + 16*n3^2*n4*n5 + 48*n4^2*n5 - 
      40*d*n4^2*n5 + 48*n3*n4^2*n5 + 32*n4^3*n5 - 24*n4*n5^2 + 12*d*n4*n5^2 + 
      8*n1*n4*n5^2 - 16*n3*n4*n5^2 - 16*n4^2*n5^2)*j[p4, n1, 0, n3, 1 + n4, 
      1 + n5, 1, -1, 0, 0, 1, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5)*
     (-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 
      48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 
      60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 
      260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 16*n1^2*n4 - 
      128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 28*d*n4^2 - 
      48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 
      8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 16*n3^2*n5 - 
      88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 8*n4^2*n5 - 
      8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-96*n4 + 80*d*n4 - 14*d^2*n4 - d^3*n4 + 96*n1*n4 - 76*d*n1*n4 + 
      16*d^2*n1*n4 + 4*d*n1^2*n4 - 48*n3*n4 + 4*d*n3*n4 + 6*d^2*n3*n4 + 
      40*n1*n3*n4 - 24*d*n1*n3*n4 - 8*n1^2*n3*n4 + 16*n3^2*n4 - 8*d*n3^2*n4 + 
      16*n1*n3^2*n4 - 80*n4^2 + 24*d*n4^2 + 4*d^2*n4^2 + 72*n1*n4^2 - 
      36*d*n1*n4^2 - 8*n1^2*n4^2 + 8*n3*n4^2 - 12*d*n3*n4^2 + 40*n1*n3*n4^2 - 
      8*n4^3 - 4*d*n4^3 + 24*n1*n4^3 - 128*n4*n5 + 104*d*n4*n5 - 
      20*d^2*n4*n5 + 40*n1*n4*n5 - 12*d*n1*n4*n5 + 8*n1^2*n4*n5 - 
      88*n3*n4*n5 + 28*d*n3*n4*n5 - 8*n1*n3*n4*n5 - 112*n4^2*n5 + 
      40*d*n4^2*n5 - 16*n3*n4^2*n5 - 16*n4^3*n5 - 24*n4*n5^2 + 12*d*n4*n5^2 + 
      8*n1*n4*n5^2 - 16*n3*n4*n5^2 - 16*n4^2*n5^2)*j[p4, n1, 0, n3, 1 + n4, 
      1 + n5, 1, -1, 1, 0, 0, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5)*
     (-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 
      48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 
      60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 
      260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 16*n1^2*n4 - 
      128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 28*d*n4^2 - 
      48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 
      8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 16*n3^2*n5 - 
      88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 8*n4^2*n5 - 
      8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96*n4 - 80*d*n4 + 14*d^2*n4 + d^3*n4 - 96*n1*n4 + 76*d*n1*n4 - 
      16*d^2*n1*n4 - 4*d*n1^2*n4 + 48*n3*n4 - 4*d*n3*n4 - 6*d^2*n3*n4 - 
      40*n1*n3*n4 + 24*d*n1*n3*n4 + 8*n1^2*n3*n4 - 16*n3^2*n4 + 8*d*n3^2*n4 - 
      16*n1*n3^2*n4 + 80*n4^2 - 24*d*n4^2 - 4*d^2*n4^2 - 72*n1*n4^2 + 
      36*d*n1*n4^2 + 8*n1^2*n4^2 - 8*n3*n4^2 + 12*d*n3*n4^2 - 40*n1*n3*n4^2 + 
      8*n4^3 + 4*d*n4^3 - 24*n1*n4^3 + 128*n4*n5 - 104*d*n4*n5 + 
      20*d^2*n4*n5 - 40*n1*n4*n5 + 12*d*n1*n4*n5 - 8*n1^2*n4*n5 + 
      88*n3*n4*n5 - 28*d*n3*n4*n5 + 8*n1*n3*n4*n5 + 112*n4^2*n5 - 
      40*d*n4^2*n5 + 16*n3*n4^2*n5 + 16*n4^3*n5 + 24*n4*n5^2 - 12*d*n4*n5^2 - 
      8*n1*n4*n5^2 + 16*n3*n4*n5^2 + 16*n4^2*n5^2)*j[p4, n1, 0, n3, 1 + n4, 
      1 + n5, 1, -1, 1, 0, 1, 0, 0, 1, 1])/(2*(-3 + d - n4 - n5)*
     (-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 
      48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 
      60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 
      260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 16*n1^2*n4 - 
      128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 28*d*n4^2 - 
      48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 
      8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 16*n3^2*n5 - 
      88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 8*n4^2*n5 - 
      8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((192*n4 - 264*d*n4 + 120*d^2*n4 - 18*d^3*n4 - 72*n1*n4 + 60*d*n1*n4 - 
      12*d^2*n1*n4 + 232*n3*n4 - 206*d*n3*n4 + 45*d^2*n3*n4 - 36*n1*n3*n4 + 
      14*d*n1*n3*n4 + 80*n3^2*n4 - 34*d*n3^2*n4 - 4*n1*n3^2*n4 + 8*n3^3*n4 + 
      320*n4^2 - 286*d*n4^2 + 63*d^2*n4^2 - 60*n1*n4^2 + 22*d*n1*n4^2 + 
      236*n3*n4^2 - 100*d*n3*n4^2 - 12*n1*n3*n4^2 + 36*n3^2*n4^2 + 164*n4^3 - 
      70*d*n4^3 - 8*n1*n4^3 + 52*n3*n4^3 + 24*n4^4 + 48*n4*n5 - 48*d*n4*n5 + 
      12*d^2*n4*n5 - 24*n1*n4*n5 + 12*d*n1*n4*n5 + 52*n3*n4*n5 - 
      26*d*n3*n4*n5 - 8*n1*n3*n4*n5 + 12*n3^2*n4*n5 + 68*n4^2*n5 - 
      34*d*n4^2*n5 - 16*n1*n4^2*n5 + 36*n3*n4^2*n5 + 24*n4^3*n5)*
     j[p4, n1, 0, n3, 1 + n4, 1 + n5, 1, -1, 1, 0, 1, 1, 0, 1, 0])/
    ((3 - d + n4 + n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-96*n4 + 176*d*n4 - 98*d^2*n4 + 17*d^3*n4 - 16*d*n1*n4 + 6*d^2*n1*n4 - 
      192*n3*n4 + 208*d*n3*n4 - 52*d^2*n3*n4 + 32*n1*n3*n4 - 16*d*n1*n3*n4 - 
      112*n3^2*n4 + 52*d*n3^2*n4 + 8*n1*n3^2*n4 - 16*n3^3*n4 - 224*n4^2 + 
      240*d*n4^2 - 60*d^2*n4^2 + 32*n1*n4^2 - 16*d*n1*n4^2 - 256*n3*n4^2 + 
      120*d*n3*n4^2 + 16*n1*n3*n4^2 - 56*n3^2*n4^2 - 144*n4^3 + 68*d*n4^3 + 
      8*n1*n4^3 - 64*n3*n4^3 - 24*n4^4 + 64*n4*n5 - 40*d*n4*n5 + 
      4*d^2*n4*n5 - 32*n1*n4*n5 + 8*d*n1*n4*n5 + 32*n3*n4*n5 - 8*n3^2*n4*n5 + 
      32*n4^2*n5 - 16*n3*n4^2*n5 - 8*n4^3*n5 + 24*n4*n5^2 - 12*d*n4*n5^2 - 
      8*n1*n4*n5^2 + 16*n3*n4*n5^2 + 16*n4^2*n5^2)*j[p4, n1, 0, n3, 1 + n4, 
      1 + n5, 1, 0, 0, -1, 1, 1, 0, 1, 1])/((-3 + d - n4 - n5)*
     (-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 
      48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 
      60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 
      260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 16*n1^2*n4 - 
      128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 28*d*n4^2 - 
      48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 
      8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 16*n3^2*n5 - 
      88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 8*n4^2*n5 - 
      8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((288*n4 - 448*d*n4 + 226*d^2*n4 - 37*d^3*n4 - 48*n1*n4 + 44*d*n1*n4 - 
      8*d^2*n1*n4 + 4*d*n1^2*n4 + 416*n3*n4 - 408*d*n3*n4 + 96*d^2*n3*n4 - 
      32*n1*n3*n4 + 4*d*n1*n3*n4 - 8*n1^2*n3*n4 + 176*n3^2*n4 - 
      76*d*n3^2*n4 + 8*n1*n3^2*n4 + 16*n3^3*n4 + 560*n4^2 - 548*d*n4^2 + 
      130*d^2*n4^2 - 48*n1*n4^2 + 8*d*n1*n4^2 - 8*n1^2*n4^2 + 480*n3*n4^2 - 
      212*d*n3*n4^2 + 16*n1*n3*n4^2 + 72*n3^2*n4^2 + 320*n4^3 - 144*d*n4^3 + 
      8*n1*n4^3 + 104*n3*n4^3 + 48*n4^4 - 32*n4*n5 + 8*d*n4*n5 + 
      4*d^2*n4*n5 - 8*n1*n4*n5 + 12*d*n1*n4*n5 + 8*n1^2*n4*n5 + 16*n3*n4*n5 - 
      24*d*n3*n4*n5 - 24*n1*n3*n4*n5 + 24*n3^2*n4*n5 + 24*n4^2*n5 - 
      28*d*n4^2*n5 - 32*n1*n4^2*n5 + 56*n3*n4^2*n5 + 32*n4^3*n5 - 
      24*n4*n5^2 + 12*d*n4*n5^2 + 8*n1*n4*n5^2 - 16*n3*n4*n5^2 - 
      16*n4^2*n5^2)*j[p4, n1, 0, n3, 1 + n4, 1 + n5, 1, 0, 1, -1, 1, 1, 0, 1, 
      0])/(2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
      92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((192*n3 - 168*d*n3 + 36*d^2*n3 - 72*n1*n3 + 24*d*n1*n3 + 168*n3^2 - 
      66*d*n3^2 - 12*n1*n3^2 + 24*n3^3 + 192*n3*n4 - 78*d*n3*n4 - 
      12*n1*n3*n4 + 60*n3^2*n4 + 36*n3*n4^2 + 48*n3*n5 - 24*d*n3*n5 - 
      24*n1*n3*n5 + 36*n3^2*n5 + 36*n3*n4*n5)*j[p4, n1, 0, 1 + n3, -1 + n4, 
      1 + n5, 1, 0, 0, 0, 1, 1, 0, 1, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 
     80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-64*n3 + 56*d*n3 - 12*d^2*n3 + 24*n1*n3 - 8*d*n1*n3 - 56*n3^2 + 
      22*d*n3^2 + 4*n1*n3^2 - 8*n3^3 - 64*n3*n4 + 26*d*n3*n4 + 4*n1*n3*n4 - 
      20*n3^2*n4 - 12*n3*n4^2 - 16*n3*n5 + 8*d*n3*n5 + 8*n1*n3*n5 - 
      12*n3^2*n5 - 12*n3*n4*n5)*j[p4, n1, 0, 1 + n3, -1 + n4, 1 + n5, 1, 0, 
      1, 0, 0, 1, 0, 1, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
     92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((64*n3 - 56*d*n3 + 12*d^2*n3 - 24*n1*n3 + 8*d*n1*n3 + 56*n3^2 - 
      22*d*n3^2 - 4*n1*n3^2 + 8*n3^3 + 64*n3*n4 - 26*d*n3*n4 - 4*n1*n3*n4 + 
      20*n3^2*n4 + 12*n3*n4^2 + 16*n3*n5 - 8*d*n3*n5 - 8*n1*n3*n5 + 
      12*n3^2*n5 + 12*n3*n4*n5)*j[p4, n1, 0, 1 + n3, -1 + n4, 1 + n5, 1, 0, 
      1, 0, 1, 0, 0, 1, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
     92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((128*n3 - 112*d*n3 + 24*d^2*n3 - 48*n1*n3 + 16*d*n1*n3 + 112*n3^2 - 
      44*d*n3^2 - 8*n1*n3^2 + 16*n3^3 + 128*n3*n4 - 52*d*n3*n4 - 8*n1*n3*n4 + 
      40*n3^2*n4 + 24*n3*n4^2 + 32*n3*n5 - 16*d*n3*n5 - 16*n1*n3*n5 + 
      24*n3^2*n5 + 24*n3*n4*n5)*j[p4, n1, 0, 1 + n3, -1 + n4, 1 + n5, 1, 0, 
      1, 0, 1, 1, 0, 0, 1])/(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
     92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
     50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
     32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
     16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
     28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
     4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
     16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
     8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((480*n3 - 592*d*n3 + 238*d^2*n3 - 31*d^3*n3 - 288*n1*n3 + 260*d*n1*n3 - 
      60*d^2*n1*n3 - 12*d*n1^2*n3 + 528*n3^2 - 428*d*n3^2 + 86*d^2*n3^2 - 
      184*n1*n3^2 + 104*d*n1*n3^2 + 24*n1^2*n3^2 + 176*n3^3 - 80*d*n3^3 - 
      64*n1*n3^3 + 32*n3^4 + 688*n3*n4 - 552*d*n3*n4 + 108*d^2*n3*n4 - 
      280*n1*n3*n4 + 140*d*n1*n3*n4 + 24*n1^2*n3*n4 + 488*n3^2*n4 - 
      204*d*n3^2*n4 - 152*n1*n3^2*n4 + 112*n3^3*n4 + 312*n3*n4^2 - 
      124*d*n3*n4^2 - 88*n1*n3*n4^2 + 128*n3^2*n4^2 + 48*n3*n4^3 + 
      256*n3*n5 - 232*d*n3*n5 + 52*d^2*n3*n5 - 56*n1*n3*n5 + 20*d*n1*n3*n5 - 
      24*n1^2*n3*n5 + 200*n3^2*n5 - 84*d*n3^2*n5 + 24*n1*n3^2*n5 + 
      16*n3^3*n5 + 272*n3*n4*n5 - 120*d*n3*n4*n5 + 80*n3^2*n4*n5 + 
      64*n3*n4^2*n5 + 24*n3*n5^2 - 12*d*n3*n5^2 - 8*n1*n3*n5^2 + 
      16*n3^2*n5^2 + 16*n3*n4*n5^2)*j[p4, n1, 0, 1 + n3, n4, 1 + n5, 1, -1, 
      0, 0, 1, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-288*n3 + 432*d*n3 - 210*d^2*n3 + 33*d^3*n3 + 96*n1*n3 - 108*d*n1*n3 + 
      28*d^2*n1*n3 + 4*d*n1^2*n3 - 432*n3^2 + 420*d*n3^2 - 98*d^2*n3^2 + 
      104*n1*n3^2 - 56*d*n1*n3^2 - 8*n1^2*n3^2 - 208*n3^3 + 96*d*n3^3 + 
      32*n1*n3^3 - 32*n3^4 - 528*n3*n4 + 504*d*n3*n4 - 116*d^2*n3*n4 + 
      136*n1*n3*n4 - 68*d*n1*n3*n4 - 8*n1^2*n3*n4 - 504*n3^2*n4 + 
      228*d*n3^2*n4 + 72*n1*n3^2*n4 - 112*n3^3*n4 - 296*n3*n4^2 + 
      132*d*n3*n4^2 + 40*n1*n3*n4^2 - 128*n3^2*n4^2 - 48*n3*n4^3 + 
      24*d*n3*n5 - 12*d^2*n3*n5 - 24*n1*n3*n5 + 4*d*n1*n3*n5 + 8*n1^2*n3*n5 - 
      24*n3^2*n5 + 28*d*n3^2*n5 - 8*n1*n3^2*n5 - 16*n3^3*n5 - 48*n3*n4*n5 + 
      40*d*n3*n4*n5 - 48*n3^2*n4*n5 - 32*n3*n4^2*n5 + 24*n3*n5^2 - 
      12*d*n3*n5^2 - 8*n1*n3*n5^2 + 16*n3^2*n5^2 + 16*n3*n4*n5^2)*
     j[p4, n1, 0, 1 + n3, n4, 1 + n5, 1, -1, 1, 0, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
      92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((288*n3 - 432*d*n3 + 210*d^2*n3 - 33*d^3*n3 - 96*n1*n3 + 108*d*n1*n3 - 
      28*d^2*n1*n3 - 4*d*n1^2*n3 + 432*n3^2 - 420*d*n3^2 + 98*d^2*n3^2 - 
      104*n1*n3^2 + 56*d*n1*n3^2 + 8*n1^2*n3^2 + 208*n3^3 - 96*d*n3^3 - 
      32*n1*n3^3 + 32*n3^4 + 528*n3*n4 - 504*d*n3*n4 + 116*d^2*n3*n4 - 
      136*n1*n3*n4 + 68*d*n1*n3*n4 + 8*n1^2*n3*n4 + 504*n3^2*n4 - 
      228*d*n3^2*n4 - 72*n1*n3^2*n4 + 112*n3^3*n4 + 296*n3*n4^2 - 
      132*d*n3*n4^2 - 40*n1*n3*n4^2 + 128*n3^2*n4^2 + 48*n3*n4^3 - 
      24*d*n3*n5 + 12*d^2*n3*n5 + 24*n1*n3*n5 - 4*d*n1*n3*n5 - 8*n1^2*n3*n5 + 
      24*n3^2*n5 - 28*d*n3^2*n5 + 8*n1*n3^2*n5 + 16*n3^3*n5 + 48*n3*n4*n5 - 
      40*d*n3*n4*n5 + 48*n3^2*n4*n5 + 32*n3*n4^2*n5 - 24*n3*n5^2 + 
      12*d*n3*n5^2 + 8*n1*n3*n5^2 - 16*n3^2*n5^2 - 16*n3*n4*n5^2)*
     j[p4, n1, 0, 1 + n3, n4, 1 + n5, 1, -1, 1, 0, 1, 0, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
      92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((480*n3 - 592*d*n3 + 238*d^2*n3 - 31*d^3*n3 - 288*n1*n3 + 260*d*n1*n3 - 
      60*d^2*n1*n3 - 12*d*n1^2*n3 + 528*n3^2 - 428*d*n3^2 + 86*d^2*n3^2 - 
      184*n1*n3^2 + 104*d*n1*n3^2 + 24*n1^2*n3^2 + 176*n3^3 - 80*d*n3^3 - 
      64*n1*n3^3 + 32*n3^4 + 688*n3*n4 - 552*d*n3*n4 + 108*d^2*n3*n4 - 
      280*n1*n3*n4 + 140*d*n1*n3*n4 + 24*n1^2*n3*n4 + 488*n3^2*n4 - 
      204*d*n3^2*n4 - 152*n1*n3^2*n4 + 112*n3^3*n4 + 312*n3*n4^2 - 
      124*d*n3*n4^2 - 88*n1*n3*n4^2 + 128*n3^2*n4^2 + 48*n3*n4^3 + 
      256*n3*n5 - 232*d*n3*n5 + 52*d^2*n3*n5 - 56*n1*n3*n5 + 20*d*n1*n3*n5 - 
      24*n1^2*n3*n5 + 200*n3^2*n5 - 84*d*n3^2*n5 + 24*n1*n3^2*n5 + 
      16*n3^3*n5 + 272*n3*n4*n5 - 120*d*n3*n4*n5 + 80*n3^2*n4*n5 + 
      64*n3*n4^2*n5 + 24*n3*n5^2 - 12*d*n3*n5^2 - 8*n1*n3*n5^2 + 
      16*n3^2*n5^2 + 16*n3*n4*n5^2)*j[p4, n1, 0, 1 + n3, n4, 1 + n5, 1, -1, 
      1, 0, 1, 1, 0, 0, 1])/(2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((64*n3 - 56*d*n3 + 12*d^2*n3 - 24*n1*n3 + 8*d*n1*n3 + 56*n3^2 - 
      22*d*n3^2 - 4*n1*n3^2 + 8*n3^3 + 64*n3*n4 - 26*d*n3*n4 - 4*n1*n3*n4 + 
      20*n3^2*n4 + 12*n3*n4^2 + 16*n3*n5 - 8*d*n3*n5 - 8*n1*n3*n5 + 
      12*n3^2*n5 + 12*n3*n4*n5)*j[p4, n1, 0, 1 + n3, n4, 1 + n5, 1, -1, 1, 0, 
      1, 1, 0, 1, 0])/(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
     24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
     128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 32*n1*n3^2 - 
     304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 16*n1^2*n4 - 
     128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 28*d*n4^2 - 
     48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 
     8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 16*n3^2*n5 - 88*n4*n5 + 
     36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 
     8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((96*n3 - 176*d*n3 + 98*d^2*n3 - 17*d^3*n3 + 16*d*n1*n3 - 6*d^2*n1*n3 + 
      192*n3^2 - 208*d*n3^2 + 52*d^2*n3^2 - 32*n1*n3^2 + 16*d*n1*n3^2 + 
      112*n3^3 - 52*d*n3^3 - 8*n1*n3^3 + 16*n3^4 + 224*n3*n4 - 240*d*n3*n4 + 
      60*d^2*n3*n4 - 32*n1*n3*n4 + 16*d*n1*n3*n4 + 256*n3^2*n4 - 
      120*d*n3^2*n4 - 16*n1*n3^2*n4 + 56*n3^3*n4 + 144*n3*n4^2 - 
      68*d*n3*n4^2 - 8*n1*n3*n4^2 + 64*n3^2*n4^2 + 24*n3*n4^3 - 64*n3*n5 + 
      40*d*n3*n5 - 4*d^2*n3*n5 + 32*n1*n3*n5 - 8*d*n1*n3*n5 - 32*n3^2*n5 + 
      8*n3^3*n5 - 32*n3*n4*n5 + 16*n3^2*n4*n5 + 8*n3*n4^2*n5 - 24*n3*n5^2 + 
      12*d*n3*n5^2 + 8*n1*n3*n5^2 - 16*n3^2*n5^2 - 16*n3*n4*n5^2)*
     j[p4, n1, 0, 1 + n3, n4, 1 + n5, 1, 0, 0, 0, 1, 1, -1, 1, 1])/
    ((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-192*n3 + 352*d*n3 - 196*d^2*n3 + 34*d^3*n3 - 32*d*n1*n3 + 
      12*d^2*n1*n3 - 384*n3^2 + 416*d*n3^2 - 104*d^2*n3^2 + 64*n1*n3^2 - 
      32*d*n1*n3^2 - 224*n3^3 + 104*d*n3^3 + 16*n1*n3^3 - 32*n3^4 - 
      448*n3*n4 + 480*d*n3*n4 - 120*d^2*n3*n4 + 64*n1*n3*n4 - 32*d*n1*n3*n4 - 
      512*n3^2*n4 + 240*d*n3^2*n4 + 32*n1*n3^2*n4 - 112*n3^3*n4 - 
      288*n3*n4^2 + 136*d*n3*n4^2 + 16*n1*n3*n4^2 - 128*n3^2*n4^2 - 
      48*n3*n4^3 + 128*n3*n5 - 80*d*n3*n5 + 8*d^2*n3*n5 - 64*n1*n3*n5 + 
      16*d*n1*n3*n5 + 64*n3^2*n5 - 16*n3^3*n5 + 64*n3*n4*n5 - 32*n3^2*n4*n5 - 
      16*n3*n4^2*n5 + 48*n3*n5^2 - 24*d*n3*n5^2 - 16*n1*n3*n5^2 + 
      32*n3^2*n5^2 + 32*n3*n4*n5^2)*j[p4, n1, 0, 1 + n3, n4, 1 + n5, 1, 0, 0, 
      0, 1, 1, 0, 1, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 
      25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 
      240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 
      24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 
      80*d*n1*n4 + 16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 
      64*n4^2 + 28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 
      24*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96*n3 - 176*d*n3 + 98*d^2*n3 - 17*d^3*n3 + 16*d*n1*n3 - 6*d^2*n1*n3 + 
      192*n3^2 - 208*d*n3^2 + 52*d^2*n3^2 - 32*n1*n3^2 + 16*d*n1*n3^2 + 
      112*n3^3 - 52*d*n3^3 - 8*n1*n3^3 + 16*n3^4 + 224*n3*n4 - 240*d*n3*n4 + 
      60*d^2*n3*n4 - 32*n1*n3*n4 + 16*d*n1*n3*n4 + 256*n3^2*n4 - 
      120*d*n3^2*n4 - 16*n1*n3^2*n4 + 56*n3^3*n4 + 144*n3*n4^2 - 
      68*d*n3*n4^2 - 8*n1*n3*n4^2 + 64*n3^2*n4^2 + 24*n3*n4^3 - 64*n3*n5 + 
      40*d*n3*n5 - 4*d^2*n3*n5 + 32*n1*n3*n5 - 8*d*n1*n3*n5 - 32*n3^2*n5 + 
      8*n3^3*n5 - 32*n3*n4*n5 + 16*n3^2*n4*n5 + 8*n3*n4^2*n5 - 24*n3*n5^2 + 
      12*d*n3*n5^2 + 8*n1*n3*n5^2 - 16*n3^2*n5^2 - 16*n3*n4*n5^2)*
     j[p4, n1, 0, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 0, 1, -1, 1, 1])/
    ((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-96*n3 + 176*d*n3 - 98*d^2*n3 + 17*d^3*n3 - 16*d*n1*n3 + 6*d^2*n1*n3 - 
      192*n3^2 + 208*d*n3^2 - 52*d^2*n3^2 + 32*n1*n3^2 - 16*d*n1*n3^2 - 
      112*n3^3 + 52*d*n3^3 + 8*n1*n3^3 - 16*n3^4 - 224*n3*n4 + 240*d*n3*n4 - 
      60*d^2*n3*n4 + 32*n1*n3*n4 - 16*d*n1*n3*n4 - 256*n3^2*n4 + 
      120*d*n3^2*n4 + 16*n1*n3^2*n4 - 56*n3^3*n4 - 144*n3*n4^2 + 
      68*d*n3*n4^2 + 8*n1*n3*n4^2 - 64*n3^2*n4^2 - 24*n3*n4^3 + 64*n3*n5 - 
      40*d*n3*n5 + 4*d^2*n3*n5 - 32*n1*n3*n5 + 8*d*n1*n3*n5 + 32*n3^2*n5 - 
      8*n3^3*n5 + 32*n3*n4*n5 - 16*n3^2*n4*n5 - 8*n3*n4^2*n5 + 24*n3*n5^2 - 
      12*d*n3*n5^2 - 8*n1*n3*n5^2 + 16*n3^2*n5^2 + 16*n3*n4*n5^2)*
     j[p4, n1, 0, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 0, -1, 1, 1])/
    ((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-96*n3 + 80*d*n3 - 14*d^2*n3 - d^3*n3 + 96*n1*n3 - 76*d*n1*n3 + 
      16*d^2*n1*n3 + 4*d*n1^2*n3 - 48*n3^2 + 4*d*n3^2 + 6*d^2*n3^2 + 
      40*n1*n3^2 - 24*d*n1*n3^2 - 8*n1^2*n3^2 + 16*n3^3 - 8*d*n3^3 + 
      16*n1*n3^3 - 80*n3*n4 + 24*d*n3*n4 + 4*d^2*n3*n4 + 72*n1*n3*n4 - 
      36*d*n1*n3*n4 - 8*n1^2*n3*n4 + 8*n3^2*n4 - 12*d*n3^2*n4 + 
      40*n1*n3^2*n4 - 8*n3*n4^2 - 4*d*n3*n4^2 + 24*n1*n3*n4^2 - 128*n3*n5 + 
      104*d*n3*n5 - 20*d^2*n3*n5 + 40*n1*n3*n5 - 12*d*n1*n3*n5 + 
      8*n1^2*n3*n5 - 88*n3^2*n5 + 28*d*n3^2*n5 - 8*n1*n3^2*n5 - 
      112*n3*n4*n5 + 40*d*n3*n4*n5 - 16*n3^2*n4*n5 - 16*n3*n4^2*n5 - 
      24*n3*n5^2 + 12*d*n3*n5^2 + 8*n1*n3*n5^2 - 16*n3^2*n5^2 - 
      16*n3*n4*n5^2)*j[p4, n1, 0, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, -1, 
      0, 1])/((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
      92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-128*n3 + 112*d*n3 - 24*d^2*n3 + 48*n1*n3 - 16*d*n1*n3 - 112*n3^2 + 
      44*d*n3^2 + 8*n1*n3^2 - 16*n3^3 - 128*n3*n4 + 52*d*n3*n4 + 8*n1*n3*n4 - 
      40*n3^2*n4 - 24*n3*n4^2 - 32*n3*n5 + 16*d*n3*n5 + 16*n1*n3*n5 - 
      24*n3^2*n5 - 24*n3*n4*n5)*j[p4, n1, 0, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 
      1, 1, -1, 1, 0])/(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
     24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
     128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 32*n1*n3^2 - 
     304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 16*n1^2*n4 - 
     128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 28*d*n4^2 - 
     48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 
     8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 16*n3^2*n5 - 88*n4*n5 + 
     36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 
     8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-96*n3 + 272*d*n3 - 182*d^2*n3 + 35*d^3*n3 - 96*n1*n3 + 44*d*n1*n3 - 
      4*d^2*n1*n3 - 4*d*n1^2*n3 - 336*n3^2 + 412*d*n3^2 - 110*d^2*n3^2 + 
      24*n1*n3^2 - 8*d*n1*n3^2 + 8*n1^2*n3^2 - 240*n3^3 + 112*d*n3^3 - 
      32*n3^4 - 368*n3*n4 + 456*d*n3*n4 - 124*d^2*n3*n4 - 8*n1*n3*n4 + 
      4*d*n1*n3*n4 + 8*n1^2*n3*n4 - 520*n3^2*n4 + 252*d*n3^2*n4 - 
      8*n1*n3^2*n4 - 112*n3^3*n4 - 280*n3*n4^2 + 140*d*n3*n4^2 - 
      8*n1*n3*n4^2 - 128*n3^2*n4^2 - 48*n3*n4^3 + 256*n3*n5 - 184*d*n3*n5 + 
      28*d^2*n3*n5 - 104*n1*n3*n5 + 28*d*n1*n3*n5 - 8*n1^2*n3*n5 + 
      152*n3^2*n5 - 28*d*n3^2*n5 + 8*n1*n3^2*n5 - 16*n3^3*n5 + 176*n3*n4*n5 - 
      40*d*n3*n4*n5 - 16*n3^2*n4*n5 + 72*n3*n5^2 - 36*d*n3*n5^2 - 
      24*n1*n3*n5^2 + 48*n3^2*n5^2 + 48*n3*n4*n5^2)*
     j[p4, n1, 0, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 
      92*d*n1 - 24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 
      50*d^2*n3 - 128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((64*n3 - 56*d*n3 + 12*d^2*n3 - 24*n1*n3 + 8*d*n1*n3 + 56*n3^2 - 
      22*d*n3^2 - 4*n1*n3^2 + 8*n3^3 + 64*n3*n4 - 26*d*n3*n4 - 4*n1*n3*n4 + 
      20*n3^2*n4 + 12*n3*n4^2 + 16*n3*n5 - 8*d*n3*n5 - 8*n1*n3*n5 + 
      12*n3^2*n5 + 12*n3*n4*n5)*j[p4, n1, 0, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 
      1, 1, 0, 1, 0])/(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
     24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
     128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 32*n1*n3^2 - 
     304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 16*n1^2*n4 - 
     128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 28*d*n4^2 - 
     48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 
     8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 16*n3^2*n5 - 88*n4*n5 + 
     36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 
     8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((32*d*n1 - 28*d^2*n1 + 6*d^3*n1 - 12*d*n1^2 + 4*d^2*n1^2 - 64*n1*n3 + 
      84*d*n1*n3 - 23*d^2*n1*n3 + 24*n1^2*n3 - 10*d*n1^2*n3 - 56*n1*n3^2 + 
      26*d*n1*n3^2 + 4*n1^2*n3^2 - 8*n1*n3^3 - 64*n1*n4 + 88*d*n1*n4 - 
      25*d^2*n1*n4 + 24*n1^2*n4 - 10*d*n1^2*n4 - 120*n1*n3*n4 + 
      58*d*n1*n3*n4 + 8*n1^2*n3*n4 - 28*n1*n3^2*n4 - 64*n1*n4^2 + 
      32*d*n1*n4^2 + 4*n1^2*n4^2 - 32*n1*n3*n4^2 - 12*n1*n4^3 + 64*n1*n5 - 
      48*d*n1*n5 + 8*d^2*n1*n5 - 24*n1^2*n5 + 4*d*n1^2*n5 + 40*n1*n3*n5 - 
      8*d*n1*n3*n5 + 4*n1^2*n3*n5 - 4*n1*n3^2*n5 + 48*n1*n4*n5 - 
      12*d*n1*n4*n5 + 4*n1^2*n4*n5 - 4*n1*n3*n4*n5 + 16*n1*n5^2 - 
      8*d*n1*n5^2 - 8*n1^2*n5^2 + 12*n1*n3*n5^2 + 12*n1*n4*n5^2)*
     j[p4, 1 + n1, -1, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-64*n1 + 56*d*n1 - 12*d^2*n1 + 24*n1^2 - 8*d*n1^2 - 56*n1*n3 + 
      22*d*n1*n3 + 4*n1^2*n3 - 8*n1*n3^2 - 64*n1*n4 + 26*d*n1*n4 + 
      4*n1^2*n4 - 20*n1*n3*n4 - 12*n1*n4^2 - 16*n1*n5 + 8*d*n1*n5 + 
      8*n1^2*n5 - 12*n1*n3*n5 - 12*n1*n4*n5)*j[p4, 1 + n1, 0, n3, n4, n5, 1, 
      0, 1, 0, 1, 1, 0, 0, 1])/(288 - 384*d + 170*d^2 - 25*d^3 + 80*n1 - 
     92*d*n1 + 24*d^2*n1 - 48*n1^2 + 20*d*n1^2 + 288*n3 - 240*d*n3 + 
     50*d^2*n3 + 128*n1*n3 - 60*d*n1*n3 - 16*n1^2*n3 + 64*n3^2 - 24*d*n3^2 + 
     32*n1*n3^2 + 304*n4 - 260*d*n4 + 56*d^2*n4 + 176*n1*n4 - 80*d*n1*n4 - 
     16*n1^2*n4 + 128*n3*n4 - 52*d*n3*n4 + 80*n1*n3*n4 + 64*n4^2 - 
     28*d*n4^2 + 48*n1*n4^2 + 96*n5 - 88*d*n5 + 20*d^2*n5 - 24*n1*n5 + 
     4*d*n1*n5 - 8*n1^2*n5 + 96*n3*n5 - 40*d*n3*n5 + 8*n1*n3*n5 + 
     16*n3^2*n5 + 88*n4*n5 - 36*d*n4*n5 + 16*n1*n4*n5 + 24*n3*n4*n5 + 
     8*n4^2*n5 + 8*n5^2 - 4*d*n5^2 - 8*n1*n5^2 + 8*n3*n5^2 + 8*n4*n5^2) + 
   ((-96*n1 + 144*d*n1 - 70*d^2*n1 + 11*d^3*n1 - 4*d*n1^2 + 2*d^2*n1^2 - 
      128*n1*n3 + 124*d*n1*n3 - 29*d^2*n1*n3 + 8*n1^2*n3 - 6*d*n1^2*n3 - 
      56*n1*n3^2 + 26*d*n1*n3^2 + 4*n1^2*n3^2 - 8*n1*n3^3 - 160*n1*n4 + 
      152*d*n1*n4 - 35*d^2*n1*n4 + 8*n1^2*n4 - 6*d*n1^2*n4 - 136*n1*n3*n4 + 
      62*d*n1*n3*n4 + 8*n1^2*n3*n4 - 28*n1*n3^2*n4 - 80*n1*n4^2 + 
      36*d*n1*n4^2 + 4*n1^2*n4^2 - 32*n1*n3*n4^2 - 12*n1*n4^3 + 8*d*n1*n5 - 
      4*d^2*n1*n5 - 8*n1^2*n5 + 4*d*n1^2*n5 - 8*n1*n3*n5 + 8*d*n1*n3*n5 - 
      4*n1^2*n3*n5 - 4*n1*n3^2*n5 - 16*n1*n4*n5 + 12*d*n1*n4*n5 - 
      4*n1^2*n4*n5 - 12*n1*n3*n4*n5 - 8*n1*n4^2*n5 + 8*n1*n5^2 - 
      4*d*n1*n5^2 + 4*n1*n3*n5^2 + 4*n1*n4*n5^2)*j[p4, 1 + n1, 0, n3, n4, 
      1 + n5, 1, 0, 0, 0, 1, 1, 0, 1, 1])/((-3 + d - n4 - n5)*
     (-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 
      48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 
      60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 
      260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 16*n1^2*n4 - 
      128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 28*d*n4^2 - 
      48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 
      8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 16*n3^2*n5 - 
      88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 8*n4^2*n5 - 
      8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((64*n1 - 56*d*n1 + 12*d^2*n1 - 24*n1^2 + 8*d*n1^2 + 56*n1*n3 - 
      22*d*n1*n3 - 4*n1^2*n3 + 8*n1*n3^2 + 64*n1*n4 - 26*d*n1*n4 - 
      4*n1^2*n4 + 20*n1*n3*n4 + 12*n1*n4^2 + 16*n1*n5 - 8*d*n1*n5 - 
      8*n1^2*n5 + 12*n1*n3*n5 + 12*n1*n4*n5)*j[p4, 1 + n1, 0, n3, n4, 1 + n5, 
      1, 0, 1, -1, 1, 1, 0, 0, 1])/(288 - 384*d + 170*d^2 - 25*d^3 + 80*n1 - 
     92*d*n1 + 24*d^2*n1 - 48*n1^2 + 20*d*n1^2 + 288*n3 - 240*d*n3 + 
     50*d^2*n3 + 128*n1*n3 - 60*d*n1*n3 - 16*n1^2*n3 + 64*n3^2 - 24*d*n3^2 + 
     32*n1*n3^2 + 304*n4 - 260*d*n4 + 56*d^2*n4 + 176*n1*n4 - 80*d*n1*n4 - 
     16*n1^2*n4 + 128*n3*n4 - 52*d*n3*n4 + 80*n1*n3*n4 + 64*n4^2 - 
     28*d*n4^2 + 48*n1*n4^2 + 96*n5 - 88*d*n5 + 20*d^2*n5 - 24*n1*n5 + 
     4*d*n1*n5 - 8*n1^2*n5 + 96*n3*n5 - 40*d*n3*n5 + 8*n1*n3*n5 + 
     16*n3^2*n5 + 88*n4*n5 - 36*d*n4*n5 + 16*n1*n4*n5 + 24*n3*n4*n5 + 
     8*n4^2*n5 + 8*n5^2 - 4*d*n5^2 - 8*n1*n5^2 + 8*n3*n5^2 + 8*n4*n5^2) + 
   ((-32*d*n1 + 28*d^2*n1 - 6*d^3*n1 + 12*d*n1^2 - 4*d^2*n1^2 + 64*n1*n3 - 
      84*d*n1*n3 + 23*d^2*n1*n3 - 24*n1^2*n3 + 10*d*n1^2*n3 + 56*n1*n3^2 - 
      26*d*n1*n3^2 - 4*n1^2*n3^2 + 8*n1*n3^3 + 64*n1*n4 - 88*d*n1*n4 + 
      25*d^2*n1*n4 - 24*n1^2*n4 + 10*d*n1^2*n4 + 120*n1*n3*n4 - 
      58*d*n1*n3*n4 - 8*n1^2*n3*n4 + 28*n1*n3^2*n4 + 64*n1*n4^2 - 
      32*d*n1*n4^2 - 4*n1^2*n4^2 + 32*n1*n3*n4^2 + 12*n1*n4^3 - 64*n1*n5 + 
      48*d*n1*n5 - 8*d^2*n1*n5 + 24*n1^2*n5 - 4*d*n1^2*n5 - 40*n1*n3*n5 + 
      8*d*n1*n3*n5 - 4*n1^2*n3*n5 + 4*n1*n3^2*n5 - 48*n1*n4*n5 + 
      12*d*n1*n4*n5 - 4*n1^2*n4*n5 + 4*n1*n3*n4*n5 - 16*n1*n5^2 + 
      8*d*n1*n5^2 + 8*n1^2*n5^2 - 12*n1*n3*n5^2 - 12*n1*n4*n5^2)*
     j[p4, 1 + n1, 0, n3, n4, 1 + n5, 1, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 
      24*d^2*n1 + 48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 
      128*n1*n3 + 60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 
      32*n1*n3^2 - 304*n4 + 260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 
      16*n1^2*n4 - 128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 
      28*d*n4^2 - 48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 
      4*d*n1*n5 + 8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 
      16*n3^2*n5 - 88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 
      8*n4^2*n5 - 8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((96*n1 - 144*d*n1 + 70*d^2*n1 - 11*d^3*n1 + 4*d*n1^2 - 2*d^2*n1^2 + 
      128*n1*n3 - 124*d*n1*n3 + 29*d^2*n1*n3 - 8*n1^2*n3 + 6*d*n1^2*n3 + 
      56*n1*n3^2 - 26*d*n1*n3^2 - 4*n1^2*n3^2 + 8*n1*n3^3 + 160*n1*n4 - 
      152*d*n1*n4 + 35*d^2*n1*n4 - 8*n1^2*n4 + 6*d*n1^2*n4 + 136*n1*n3*n4 - 
      62*d*n1*n3*n4 - 8*n1^2*n3*n4 + 28*n1*n3^2*n4 + 80*n1*n4^2 - 
      36*d*n1*n4^2 - 4*n1^2*n4^2 + 32*n1*n3*n4^2 + 12*n1*n4^3 - 8*d*n1*n5 + 
      4*d^2*n1*n5 + 8*n1^2*n5 - 4*d*n1^2*n5 + 8*n1*n3*n5 - 8*d*n1*n3*n5 + 
      4*n1^2*n3*n5 + 4*n1*n3^2*n5 + 16*n1*n4*n5 - 12*d*n1*n4*n5 + 
      4*n1^2*n4*n5 + 12*n1*n3*n4*n5 + 8*n1*n4^2*n5 - 8*n1*n5^2 + 
      4*d*n1*n5^2 - 4*n1*n3*n5^2 - 4*n1*n4*n5^2)*j[p4, 1 + n1, 0, n3, n4, 
      1 + n5, 1, 0, 1, 0, 1, 0, 0, 1, 1])/((-3 + d - n4 - n5)*
     (-288 + 384*d - 170*d^2 + 25*d^3 - 80*n1 + 92*d*n1 - 24*d^2*n1 + 
      48*n1^2 - 20*d*n1^2 - 288*n3 + 240*d*n3 - 50*d^2*n3 - 128*n1*n3 + 
      60*d*n1*n3 + 16*n1^2*n3 - 64*n3^2 + 24*d*n3^2 - 32*n1*n3^2 - 304*n4 + 
      260*d*n4 - 56*d^2*n4 - 176*n1*n4 + 80*d*n1*n4 + 16*n1^2*n4 - 
      128*n3*n4 + 52*d*n3*n4 - 80*n1*n3*n4 - 64*n4^2 + 28*d*n4^2 - 
      48*n1*n4^2 - 96*n5 + 88*d*n5 - 20*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 
      8*n1^2*n5 - 96*n3*n5 + 40*d*n3*n5 - 8*n1*n3*n5 - 16*n3^2*n5 - 
      88*n4*n5 + 36*d*n4*n5 - 16*n1*n4*n5 - 24*n3*n4*n5 - 8*n4^2*n5 - 
      8*n5^2 + 4*d*n5^2 + 8*n1*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n2 == 0 && n3 == 1 && n7 == -1 && n9 == 0 && 
     !(n4 == 0 || n6 == 1 || n8 == 1) -> 
  ((1 + n4)*j[p4, -1, 0, 1, 2 + n4, n5, -1 + n6, -1, -1 + n8, 0, 2, 1, 0, 1, 
      1])/((-1 + n6)*(-1 + n8)) + j[p4, -1, 0, 2, 1 + n4, n5, -1 + n6, -1, 
     -1 + n8, 0, 2, 1, 0, 1, 1]/((-1 + n6)*(-1 + n8)) + 
   ((-1 - n4)*j[p4, 0, -1, 1, 2 + n4, n5, -1 + n6, -1, -1 + n8, 0, 2, 1, 0, 
      1, 1])/((-1 + n6)*(-1 + n8)) + j[p4, 0, 0, 0, 1 + n4, n5, -1 + n6, -1, 
     n8, 0, 2, 1, 0, 1, 1]/(1 - n6) + j[p4, 0, 0, 0, 1 + n4, n5, -1 + n6, 0, 
     n8, 0, 1, 1, 0, 1, 1]/(-1 + n6) + 
   ((-1 - n4)*j[p4, 0, 0, 0, 2 + n4, n5, -1 + n6, -1, -1 + n8, 0, 2, 1, 0, 1, 
      1])/((-1 + n6)*(-1 + n8)) + ((-4 + 2*d - n4 - n5 - n8)*
     j[p4, 0, 0, 1, 1 + n4, n5, -1 + n6, -1, -1 + n8, 0, 2, 1, 0, 1, 1])/
    ((-1 + n6)*(-1 + n8)) + ((-5 + 2*d - 2*n4 - n5 - n6)*
     j[p4, 0, 0, 1, 1 + n4, n5, -1 + n6, -1, n8, 0, 1, 1, 0, 1, 1])/
    (-1 + n6) + j[p4, 0, 0, 1, 1 + n4, n5, -1 + n6, -1, n8, 0, 2, 1, 0, 1, 1]/
    (-1 + n6) - j[p4, 0, 0, 1, 1 + n4, n5, -1 + n6, 0, -1 + n8, 0, 1, 1, 0, 
     1, 1]/((-1 + n6)*(-1 + n8)) + j[p4, 0, 0, 1, 1 + n4, n5, -1 + n6, 0, 
     -1 + n8, 0, 2, 0, 0, 1, 1]/((-1 + n6)*(-1 + n8)) + 
   j[p4, 0, 0, 1, 1 + n4, n5, -1 + n6, 0, n8, 0, 1, 1, 0, 0, 1]/(1 - n6) + 
   j[p4, 0, 0, 1, 1 + n4, n5, n6, -1, -1 + n8, 0, 1, 1, 0, 1, 1] - 
   (n5*j[p4, 0, 0, 1, 1 + n4, 1 + n5, -1 + n6, -1, -1 + n8, 0, 2, 1, 0, 0, 
      1])/((-1 + n6)*(-1 + n8)) + 
   (n5*j[p4, 0, 0, 1, 1 + n4, 1 + n5, -1 + n6, -1, -1 + n8, 0, 2, 1, 0, 1, 
      0])/((-1 + n6)*(-1 + n8)) + 
   (n5*j[p4, 0, 0, 1, 1 + n4, 1 + n5, -1 + n6, -1, n8, 0, 1, 1, 0, 0, 1])/
    (-1 + n6) - (n5*j[p4, 0, 0, 1, 1 + n4, 1 + n5, -1 + n6, -1, n8, 0, 1, 1, 
      0, 1, 0])/(-1 + n6) + ((1 + n4)*j[p4, 0, 0, 1, 2 + n4, n5, -2 + n6, -1, 
      -1 + n8, 0, 2, 1, 0, 1, 1])/((-1 + n6)*(-1 + n8)) + 
   ((1 + n4)*j[p4, 0, 0, 1, 2 + n4, n5, -1 + n6, -2, -1 + n8, 0, 2, 1, 0, 1, 
      1])/((-1 + n6)*(-1 + n8)) + 
   ((-1 - n4)*j[p4, 0, 0, 1, 2 + n4, n5, -1 + n6, -1, -1 + n8, -1, 2, 1, 0, 
      1, 1])/((-1 + n6)*(-1 + n8)) + 
   ((1 + n4)*j[p4, 0, 0, 1, 2 + n4, n5, -1 + n6, -1, -1 + n8, 0, 1, 1, 0, 1, 
      1])/((-1 + n6)*(-1 + n8)) + 
   ((-1 - n4)*j[p4, 0, 0, 1, 2 + n4, n5, -1 + n6, -1, -1 + n8, 0, 2, 0, 0, 1, 
      1])/((-1 + n6)*(-1 + n8)) + 
   ((1 + n4)*j[p4, 0, 0, 1, 2 + n4, n5, -1 + n6, -1, -1 + n8, 0, 2, 1, 0, 1, 
      0])/((-1 + n6)*(-1 + n8)) - j[p4, 0, 0, 2, 1 + n4, n5, -1 + n6, -1, 
     -2 + n8, 0, 2, 1, 0, 1, 1]/((-1 + n6)*(-1 + n8)) + 
   j[p4, 0, 0, 2, 1 + n4, n5, -1 + n6, -1, -1 + n8, 0, 1, 1, 0, 1, 1]/
    ((-1 + n6)*(-1 + n8)) - j[p4, 0, 0, 2, 1 + n4, n5, -1 + n6, -1, -1 + n8, 
     0, 2, 0, 0, 1, 1]/((-1 + n6)*(-1 + n8)) + 
   j[p4, 0, 0, 2, 1 + n4, n5, -1 + n6, -1, -1 + n8, 0, 2, 1, -1, 1, 1]/
    ((-1 + n6)*(-1 + n8)) - j[p4, 0, 0, 2, 1 + n4, n5, -1 + n6, -1, -1 + n8, 
     0, 2, 1, 0, 0, 1]/((-1 + n6)*(-1 + n8)) - 
   j[p4, 0, 0, 2, 1 + n4, n5, -1 + n6, -1, -1 + n8, 0, 2, 1, 0, 1, 1]/
    ((-1 + n6)*(-1 + n8)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n14 == 1 && n2 == 0 && n3 == 1 && 
    n5 == 0 && n7 == 0 && n8 == 1 && n9 == 0 && 
     !(n11 == 1 || n4 == 0 || n6 == 1) -> 
  -j[p4, 0, -1, 1, 1 + n4, 0, n6, 0, 1, 0, 1, n11, 0, n13, 1] + 
   j[p4, 0, -1, 1, 1 + n4, 0, n6, 0, 2, 0, 1, -1 + n11, 0, n13, 1]/
    (-1 + n11) + j[p4, 0, -1, 2, 1 + n4, 0, n6, 0, 1, 0, 1, -1 + n11, 0, n13, 
     1]/(1 - n11) + j[p4, 0, 0, 0, 1 + n4, 0, -1 + n6, 0, 1, 0, 2, n11, 0, 
     n13, 1]/(1 - n6) - j[p4, 0, 0, 0, 1 + n4, 0, n6, 0, 1, 0, 1, n11, 0, 
    n13, 1] + ((-1 - n4)*j[p4, 0, 0, 0, 2 + n4, 0, -1 + n6, 0, 1, 0, 1, n11, 
      0, n13, 1])/(-1 + n6) + ((-1 - n4)*j[p4, 0, 0, 0, 2 + n4, 0, n6, 0, 1, 
      0, 1, -1 + n11, 0, n13, 1])/(-1 + n11) + 
   ((-4 + d - n4)*j[p4, 0, 0, 1, 1 + n4, 0, -1 + n6, 0, 1, 0, 1, n11, 0, n13, 
      1])/(-1 + n6) + ((-1 - d + n11 + 2*n13)*j[p4, 0, 0, 1, 1 + n4, 0, 
      -1 + n6, 0, 1, 0, 2, -1 + n11, 0, n13, 1])/((-1 + n11)*(-1 + n6)) + 
   j[p4, 0, 0, 1, 1 + n4, 0, -1 + n6, 0, 1, 0, 2, n11, 0, -1 + n13, 1]/
    (-1 + n6) + j[p4, 0, 0, 1, 1 + n4, 0, n6, -1, 2, 0, 1, -1 + n11, 0, n13, 
     1]/(1 - n11) + 2*j[p4, 0, 0, 1, 1 + n4, 0, n6, 0, 0, 0, 1, n11, 0, n13, 
     1] + j[p4, 0, 0, 1, 1 + n4, 0, n6, 0, 1, 0, 0, n11, 0, n13, 1] - 
   (2*j[p4, 0, 0, 1, 1 + n4, 0, n6, 0, 1, 0, 1, -1 + n11, 0, n13, 1])/
    (-1 + n11) + j[p4, 0, 0, 1, 1 + n4, 0, n6, 0, 1, 0, 1, n11, 0, -1 + n13, 
    1] + j[p4, 0, 0, 1, 1 + n4, 0, n6, 0, 1, 0, 1, n11, 0, n13, 0] - 
   j[p4, 0, 0, 1, 1 + n4, 0, n6, 0, 1, 0, 1, n11, 0, n13, 1] + 
   j[p4, 0, 0, 1, 1 + n4, 0, n6, 0, 2, 0, 1, -1 + n11, -1, n13, 1]/
    (-1 + n11) + j[p4, 0, 0, 1, 1 + n4, 0, n6, 0, 2, 0, 1, -1 + n11, 0, 
     -1 + n13, 1]/(1 - n11) + ((-1 - n4)*j[p4, 0, 0, 1, 2 + n4, 0, -1 + n6, 
      0, 1, 0, 1, -1 + n11, 0, n13, 1])/(-1 + n11) + 
   ((1 + n4)*j[p4, 0, 0, 1, 2 + n4, 0, -1 + n6, 0, 1, 0, 1, n11, 0, n13, 0])/
    (-1 + n6) + ((1 + n4)*j[p4, 0, 0, 1, 2 + n4, 0, n6, 0, 0, 0, 1, -1 + n11, 
      0, n13, 1])/(-1 + n11) + 
   ((1 + n4)*j[p4, 0, 0, 1, 2 + n4, 0, n6, 0, 1, 0, 1, -1 + n11, 0, n13, 0])/
    (-1 + n11) + j[p4, 0, 0, 2, 1 + n4, 0, n6, -1, 1, 0, 1, -1 + n11, 0, n13, 
     1]/(-1 + n11) + (2*j[p4, 0, 0, 2, 1 + n4, 0, n6, 0, 0, 0, 1, -1 + n11, 
      0, n13, 1])/(-1 + n11) + j[p4, 0, 0, 2, 1 + n4, 0, n6, 0, 1, 0, 1, 
     -1 + n11, -1, n13, 1]/(1 - n11) + 
   j[p4, 0, 0, 2, 1 + n4, 0, n6, 0, 1, 0, 1, -1 + n11, 0, -1 + n13, 1]/
    (-1 + n11), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n3 == 1 && n7 == 0 && n8 == 1 && n9 == 0 && 
     !(n11 == 1 || n5 == 0 || n6 == 1) -> 
  j[p4, 0, -1, 1, n4, 1 + n5, n6, 0, 1, 0, 1, n11, 0, 1, 1] + 
   j[p4, 0, -1, 1, n4, 1 + n5, n6, 0, 2, 0, 1, -1 + n11, 0, 1, 1]/(1 - n11) - 
   j[p4, 0, -1, 2, n4, 1 + n5, -1 + n6, 0, 2, 0, 1, -1 + n11, 0, 1, 1]/
    ((-1 + n11)*(-1 + n6)) - j[p4, 0, 0, 0, n4, 1 + n5, -1 + n6, 0, 2, 0, 2, 
     -1 + n11, 0, 1, 1]/((-1 + n11)*(-1 + n6)) + 
   j[p4, 0, 0, 0, n4, 1 + n5, n6, 0, 2, 0, 1, -1 + n11, 0, 1, 1]/(1 - n11) - 
   (n4*j[p4, 0, 0, 0, 1 + n4, 1 + n5, -1 + n6, 0, 1, 0, 2, -1 + n11, 0, 1, 
      1])/((-1 + n11)*(-1 + n6)) - 
   (n4*j[p4, 0, 0, 0, 1 + n4, 1 + n5, -1 + n6, 0, 2, 0, 1, -1 + n11, 0, 1, 
      1])/((-1 + n11)*(-1 + n6)) + j[p4, 0, 0, 1, -1 + n4, 1 + n5, n6, 0, 1, 
    0, 1, n11, 0, 1, 1] + ((3 - d + n4)*j[p4, 0, 0, 1, n4, 1 + n5, -1 + n6, 
      0, 1, 0, 1, n11, 0, 1, 1])/(-1 + n6) + 
   ((-4 + 2*d - 2*n11 - n4 - n5)*j[p4, 0, 0, 1, n4, 1 + n5, -1 + n6, 0, 1, 0, 
      2, -1 + n11, 0, 1, 1])/((-1 + n11)*(-1 + n6)) + 
   ((-2 + d - n6)*j[p4, 0, 0, 1, n4, 1 + n5, -1 + n6, 0, 2, 0, 1, -1 + n11, 
      0, 1, 1])/((-1 + n11)*(-1 + n6)) + 
   j[p4, 0, 0, 1, n4, 1 + n5, -1 + n6, 0, 2, 0, 2, -1 + n11, 0, 1, 1]/
    ((-1 + n11)*(-1 + n6)) + j[p4, 0, 0, 1, n4, 1 + n5, n6, -1, 2, 0, 1, 
     -1 + n11, 0, 1, 1]/(-1 + n11) - j[p4, 0, 0, 1, n4, 1 + n5, n6, 0, 0, 0, 
    1, n11, 0, 1, 1] + j[p4, 0, 0, 1, n4, 1 + n5, n6, 0, 1, 0, 1, -1 + n11, 
     0, 1, 1]/(-1 + n11) + j[p4, 0, 0, 1, n4, 1 + n5, n6, 0, 2, 0, 1, 
     -1 + n11, -1, 1, 1]/(1 - n11) + j[p4, 0, 0, 1, n4, 1 + n5, n6, 0, 2, 0, 
     1, -1 + n11, 0, 0, 1]/(-1 + n11) + 
   j[p4, 0, 0, 1, n4, 1 + n5, n6, 0, 2, 0, 1, -1 + n11, 0, 1, 0]/(-1 + n11) + 
   ((-1 - n5)*j[p4, 0, 0, 1, n4, 2 + n5, -1 + n6, 0, 1, 0, 2, -1 + n11, 0, 0, 
      1])/((-1 + n11)*(-1 + n6)) + 
   ((1 + n5)*j[p4, 0, 0, 1, n4, 2 + n5, -1 + n6, 0, 1, 0, 2, -1 + n11, 0, 1, 
      0])/((-1 + n11)*(-1 + n6)) - 
   (n4*j[p4, 0, 0, 1, 1 + n4, n5, -1 + n6, 0, 1, 0, 1, n11, 0, 1, 1])/
    (-1 + n6) - (n4*j[p4, 0, 0, 1, 1 + n4, 1 + n5, -2 + n6, 0, 2, 0, 1, 
      -1 + n11, 0, 1, 1])/((-1 + n11)*(-1 + n6)) + 
   (n4*j[p4, 0, 0, 1, 1 + n4, 1 + n5, -1 + n6, -1, 1, 0, 1, n11, 0, 1, 1])/
    (-1 + n6) + (n4*j[p4, 0, 0, 1, 1 + n4, 1 + n5, -1 + n6, 0, 1, 0, 1, 
      -1 + n11, 0, 1, 1])/((-1 + n11)*(-1 + n6)) + 
   (n4*j[p4, 0, 0, 1, 1 + n4, 1 + n5, -1 + n6, 0, 1, 0, 2, -1 + n11, 0, 1, 
      0])/((-1 + n11)*(-1 + n6)) + 
   (n4*j[p4, 0, 0, 1, 1 + n4, 1 + n5, -1 + n6, 0, 2, 0, 1, -1 + n11, 0, 1, 
      0])/((-1 + n11)*(-1 + n6)) + j[p4, 0, 0, 2, n4, 1 + n5, -1 + n6, -1, 1, 
     0, 1, n11, 0, 1, 1]/(-1 + n6) + j[p4, 0, 0, 2, n4, 1 + n5, -1 + n6, -1, 
     2, 0, 1, -1 + n11, 0, 1, 1]/((-1 + n11)*(-1 + n6)) + 
   (2*j[p4, 0, 0, 2, n4, 1 + n5, -1 + n6, 0, 1, 0, 1, -1 + n11, 0, 1, 1])/
    ((-1 + n11)*(-1 + n6)) + j[p4, 0, 0, 2, n4, 1 + n5, -1 + n6, 0, 1, 0, 1, 
     n11, 0, 0, 1]/(1 - n6) - j[p4, 0, 0, 2, n4, 1 + n5, -1 + n6, 0, 2, 0, 1, 
     -1 + n11, -1, 1, 1]/((-1 + n11)*(-1 + n6)) + 
   j[p4, 0, 0, 2, n4, 1 + n5, -1 + n6, 0, 2, 0, 1, -1 + n11, 0, 0, 1]/
    ((-1 + n11)*(-1 + n6)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n14 == 1 && n3 == 1 && 
    n5 == 0 && n7 == 0 && n8 == 1 && n9 == 0 && 
     !(n13 == 1 || n2 == 0 || n6 == 1) -> 
  j[p4, 0, n2, 1, n4, 0, n6, 0, 2, 0, 1, 1, 0, -1 + n13, 1]/(1 - n13) + 
   j[p4, 0, n2, 2, n4, 0, n6, 0, 1, 0, 1, 1, 0, -1 + n13, 1]/(-1 + n13) - 
   (n4*j[p4, 0, 1 + n2, 0, 1 + n4, 0, -1 + n6, 0, 1, 0, 1, 1, 0, n13, 1])/
    (-1 + n6) + (n4*j[p4, 0, 1 + n2, 0, 1 + n4, 0, n6, 0, 1, 0, 1, 1, 0, 
      -1 + n13, 1])/(-1 + n13) + 
   ((1 - d + n4 + n6)*j[p4, 0, 1 + n2, 1, n4, 0, -1 + n6, 0, 1, 0, 1, 1, 0, 
      n13, 1])/(-1 + n6) + j[p4, 0, 1 + n2, 1, n4, 0, n6, -1, 2, 0, 1, 1, 0, 
     -1 + n13, 1]/(-1 + n13) + 
   ((-1 + n13 - 2*n2)*j[p4, 0, 1 + n2, 1, n4, 0, n6, 0, 1, 0, 1, 1, 0, 
      -1 + n13, 1])/(-1 + n13) + j[p4, 0, 1 + n2, 1, n4, 0, n6, 0, 1, 0, 1, 
    1, 0, n13, 0] + j[p4, 0, 1 + n2, 1, n4, 0, n6, 0, 2, 0, 1, 1, -1, 
     -1 + n13, 1]/(1 - n13) + j[p4, 0, 1 + n2, 1, n4, 0, n6, 0, 2, 0, 1, 1, 
     0, -2 + n13, 1]/(-1 + n13) + 
   (n4*j[p4, 0, 1 + n2, 1, 1 + n4, 0, -1 + n6, 0, 1, 0, 1, 1, 0, -1 + n13, 
      1])/(-1 + n13) + (n4*j[p4, 0, 1 + n2, 1, 1 + n4, 0, -1 + n6, 0, 1, 0, 
      1, 1, 0, n13, 0])/(-1 + n6) - 
   (n4*j[p4, 0, 1 + n2, 1, 1 + n4, 0, n6, 0, 0, 0, 1, 1, 0, -1 + n13, 1])/
    (-1 + n13) - (n4*j[p4, 0, 1 + n2, 1, 1 + n4, 0, n6, 0, 1, 0, 1, 1, 0, 
      -1 + n13, 0])/(-1 + n13) + j[p4, 0, 1 + n2, 2, n4, 0, n6, -1, 1, 0, 1, 
     1, 0, -1 + n13, 1]/(1 - n13) - 
   (2*j[p4, 0, 1 + n2, 2, n4, 0, n6, 0, 0, 0, 1, 1, 0, -1 + n13, 1])/
    (-1 + n13) + j[p4, 0, 1 + n2, 2, n4, 0, n6, 0, 1, 0, 1, 1, -1, -1 + n13, 
     1]/(-1 + n13) + j[p4, 0, 1 + n2, 2, n4, 0, n6, 0, 1, 0, 1, 1, 0, 
     -2 + n13, 1]/(1 - n13) + ((-1 - n2)*j[p4, 0, 2 + n2, 0, n4, 0, n6, 0, 1, 
      0, 1, 1, 0, -1 + n13, 1])/(-1 + n13) + 
   ((1 + n2)*j[p4, 0, 2 + n2, 1, n4, 0, n6, -1, 1, 0, 1, 1, 0, -1 + n13, 1])/
    (-1 + n13) + ((1 + n2)*j[p4, 0, 2 + n2, 1, n4, 0, n6, 0, 0, 0, 1, 1, 0, 
      -1 + n13, 1])/(-1 + n13) + 
   ((-1 - n2)*j[p4, 0, 2 + n2, 1, n4, 0, n6, 0, 1, 0, 1, 1, -1, -1 + n13, 1])/
    (-1 + n13) + ((2 + 2*n2)*j[p4, 0, 2 + n2, 1, n4, 0, n6, 0, 1, 0, 1, 1, 0, 
      -2 + n13, 1])/(-1 + n13), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n3 == 1 && n5 == 0 && n8 == 1 && n9 == 0 &&  !(n4 == 0 || n6 == 1) -> 
  ((-4 + d)*j[p4, n1, 0, 0, 1 + n4, 0, -1 + n6, n7, 1, 0, 1, 1, 0, 1, 2])/
    (2*(-2 + d - n4 - n6)*(-1 + n6)) + 
   ((-4 + d - 2*n4)*j[p4, n1, 0, 1, 1 + n4, 0, -1 + n6, n7, 1, 0, 1, 1, 0, 1, 
      1])/(2*(-1 + n6)) + ((4 - d + 2*n4)*j[p4, n1, 0, 1, 1 + n4, 0, n6, n7, 
      0, 0, 1, 1, 0, 1, 1])/(2*(2 - d + n4 + n6)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n3 == 1 && 
    n4 == 0 && n5 == 0 && n6 == 1 && n9 == 0 && 
     !(n7 == -1 || n7 == 0 || n8 == 1) -> 
  ((5 - d + n7)*j[p4, 0, -2 + n2, 1, 0, 0, 1, 2 + n7, n8, 0, 1, 1, 0, 1, 
      n14])/(-1 + n2) + ((-4 + d)*j[p4, 0, -1 + n2, 0, 0, 0, 1, 2 + n7, 
      -1 + n8, 0, 1, 1, 0, 2, n14])/(2*(-1 + n2)*(-1 + n8)) + 
   ((-6 + d + n2 - n7)*j[p4, 0, -1 + n2, 1, 0, 0, 1, 1 + n7, n8, 0, 1, 1, 0, 
      1, n14])/(-1 + n2) + ((4 - d)*j[p4, 0, -1 + n2, 1, 0, 0, 1, 2 + n7, 
      -1 + n8, 0, 0, 2, 0, 1, n14])/(2*(-1 + n2)*(-1 + n8)) + 
   ((-24 + 10*d - d^2 + 4*n2 - d*n2 - 14*n7 + 3*d*n7 - 2*n7^2 - 10*n8 + 
      2*d*n8 - 2*n7*n8)*j[p4, 0, -1 + n2, 1, 0, 0, 1, 2 + n7, -1 + n8, 0, 1, 
      1, 0, 1, n14])/(2*(-1 + n2)*(-1 + n8)) + 
   ((-4 + d - n2 - n7)*j[p4, 0, -1 + n2, 2, 0, 0, 1, 1 + n7, -1 + n8, 0, 1, 
      1, 0, 1, n14])/((-1 + n2)*(-1 + n8)) + 
   ((5 - d + n7)*j[p4, 0, -1 + n2, 2, 0, 0, 1, 2 + n7, -1 + n8, 0, 1, 1, 0, 
      0, n14])/((-1 + n2)*(-1 + n8)) + 
   ((-d + n2 + n8)*j[p4, 0, n2, 1, 0, 0, 1, 1 + n7, -1 + n8, 0, 1, 1, 0, 1, 
      n14])/(-1 + n8) + ((-4 + d)*j[p4, 0, n2, 1, 0, 0, 1, 2 + n7, -2 + n8, 
      0, 1, 1, 0, 1, n14])/(2*(-1 + n8)) + 
   (2*j[p4, 0, n2, 2, 0, 0, 1, 1 + n7, -2 + n8, 0, 1, 1, 0, 1, n14])/
    (-1 + n8) + j[p4, 0, n2, 2, 0, 0, 1, 1 + n7, -1 + n8, 0, 1, 1, -1, 1, 
     n14]/(1 - n8) + (2*j[p4, 0, n2, 2, 0, 0, 1, 1 + n7, -1 + n8, 0, 1, 1, 0, 
      0, n14])/(-1 + n8), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n14 == 1 && n3 == 1 && n5 == 0 && 
    n6 == 1 && n7 == 0 && n8 == 1 && n9 == 0 && n13 != 1 -> 
  (n11*n4*j[p4, -1, n2, 1, 1 + n4, 0, 1, 0, 1, 0, 1, 1 + n11, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) - 
   (n11*n4*j[p4, 0, -1 + n2, 1, 1 + n4, 0, 1, 0, 1, 0, 1, 1 + n11, 0, 
      -1 + n13, 1])/((d - 2*n13)*(-1 + n13)) + 
   ((n4 + n4^2)*j[p4, 0, n2, 0, 2 + n4, 0, 1, 0, 1, 0, 1, n11, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + ((-2*n11 + d*n11 - 2*n11^2 - n11*n4)*
     j[p4, 0, n2, 1, n4, 0, 1, 0, 1, 0, 1, 1 + n11, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   ((-2*n2 - n4)*j[p4, 0, n2, 1, n4, 0, 1, 0, 2, 0, 1, n11, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n11*n4*j[p4, 0, n2, 1, 1 + n4, -1, 1, 0, 1, 0, 1, 1 + n11, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (n11*n4*j[p4, 0, n2, 1, 1 + n4, 0, 0, 0, 1, 0, 1, 1 + n11, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (n4*j[p4, 0, n2, 1, 1 + n4, 0, 0, 0, 2, 0, 1, n11, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n11*n4*j[p4, 0, n2, 1, 1 + n4, 0, 1, 0, 1, -1, 1, 1 + n11, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (n11*n4*j[p4, 0, n2, 1, 1 + n4, 0, 1, 0, 1, 0, 0, 1 + n11, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + ((-4*n4 - n11*n4 + 2*n13*n4 - 2*n4^2)*
     j[p4, 0, n2, 1, 1 + n4, 0, 1, 0, 1, 0, 1, n11, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n4*j[p4, 0, n2, 1, 1 + n4, 0, 1, 0, 2, 0, 1, n11, -1, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n4*j[p4, 0, n2, 1, 1 + n4, 0, 1, 0, 2, 0, 1, n11, 0, -2 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   ((n4 + n4^2)*j[p4, 0, n2, 1, 2 + n4, -1, 1, 0, 1, 0, 1, n11, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((-n4 - n4^2)*j[p4, 0, n2, 1, 2 + n4, 0, 1, -1, 1, 0, 1, n11, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((-n4 - n4^2)*j[p4, 0, n2, 1, 2 + n4, 0, 1, 0, 1, 0, 1, n11, 0, -1 + n13, 
      0])/((d - 2*n13)*(-1 + n13)) + 
   ((2*n2 - n4)*j[p4, 0, n2, 2, n4, 0, 1, 0, 1, 0, 1, n11, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n4*j[p4, 0, n2, 2, 1 + n4, 0, 1, -1, 1, 0, 1, n11, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n4*j[p4, 0, n2, 2, 1 + n4, 0, 1, 0, 1, 0, 1, n11, 0, -2 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n4*j[p4, 0, n2, 2, 1 + n4, 0, 1, 0, 1, 0, 1, n11, 0, -1 + n13, 0])/
    ((d - 2*n13)*(-1 + n13)) + 
   (2*n2*j[p4, 0, 1 + n2, 1, n4, 0, 1, -1, 2, 0, 1, n11, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + ((-2*n2 + 2*n13*n2 - 2*n2^2)*
     j[p4, 0, 1 + n2, 1, n4, 0, 1, 0, 1, 0, 1, n11, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n2*j[p4, 0, 1 + n2, 1, n4, 0, 1, 0, 2, 0, 1, n11, -1, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n2*j[p4, 0, 1 + n2, 1, n4, 0, 1, 0, 2, 0, 1, n11, 0, -2 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n2*n4*j[p4, 0, 1 + n2, 1, 1 + n4, -1, 1, 0, 1, 0, 1, n11, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (2*n2*n4*j[p4, 0, 1 + n2, 1, 1 + n4, 0, 0, 0, 1, 0, 1, n11, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (2*n2*n4*j[p4, 0, 1 + n2, 1, 1 + n4, 0, 1, -1, 1, 0, 1, n11, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) - 
   (n2*n4*j[p4, 0, 1 + n2, 1, 1 + n4, 0, 1, 0, 0, 0, 1, n11, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n2*n4*j[p4, 0, 1 + n2, 1, 1 + n4, 0, 1, 0, 1, 0, 1, n11, -1, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (2*n2*n4*j[p4, 0, 1 + n2, 1, 1 + n4, 0, 1, 0, 1, 0, 1, n11, 0, -2 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) - 
   (n2*n4*j[p4, 0, 1 + n2, 1, 1 + n4, 0, 1, 0, 1, 0, 1, n11, 0, -1 + n13, 0])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n2*j[p4, 0, 1 + n2, 2, n4, 0, 1, -1, 1, 0, 1, n11, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (4*n2*j[p4, 0, 1 + n2, 2, n4, 0, 1, 0, 0, 0, 1, n11, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (2*n2*j[p4, 0, 1 + n2, 2, n4, 0, 1, 0, 1, 0, 1, n11, -1, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (3*n2*j[p4, 0, 1 + n2, 2, n4, 0, 1, 0, 1, 0, 1, n11, 0, -2 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   ((-n2 - n2^2)*j[p4, 0, 2 + n2, 0, n4, 0, 1, 0, 1, 0, 1, n11, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((n2 + n2^2)*j[p4, 0, 2 + n2, 1, n4, 0, 1, -1, 1, 0, 1, n11, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((n2 + n2^2)*j[p4, 0, 2 + n2, 1, n4, 0, 1, 0, 0, 0, 1, n11, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((-n2 - n2^2)*j[p4, 0, 2 + n2, 1, n4, 0, 1, 0, 1, 0, 1, n11, -1, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((2*n2 + 2*n2^2)*j[p4, 0, 2 + n2, 1, n4, 0, 1, 0, 1, 0, 1, n11, 0, 
      -2 + n13, 1])/((d - 2*n13)*(-1 + n13)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n14 == 1 && n3 == 1 && 
    n5 == 0 && n6 == 1 && n7 == 0 && n8 == 1 && n13 != 1 -> 
  (n4*j[p4, -1, n2, 1, 1 + n4, 0, 1, 0, 1, n9, 1, 2, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n4*j[p4, 0, -1 + n2, 1, 1 + n4, 0, 1, 0, 1, n9, 1, 2, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   ((n4 + n4^2)*j[p4, 0, n2, 0, 2 + n4, 0, 1, 0, 1, n9, 1, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((-4 + d - n4)*j[p4, 0, n2, 1, n4, 0, 1, 0, 1, n9, 1, 2, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   ((-2*n2 - n4)*j[p4, 0, n2, 1, n4, 0, 1, 0, 2, n9, 1, 1, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n4*j[p4, 0, n2, 1, 1 + n4, -1, 1, 0, 1, n9, 1, 2, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n4*j[p4, 0, n2, 1, 1 + n4, 0, 0, 0, 1, n9, 1, 2, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n4*j[p4, 0, n2, 1, 1 + n4, 0, 0, 0, 2, n9, 1, 1, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n4*j[p4, 0, n2, 1, 1 + n4, 0, 1, 0, 1, -1 + n9, 1, 2, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n4*j[p4, 0, n2, 1, 1 + n4, 0, 1, 0, 1, n9, 0, 2, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + ((-5*n4 + 2*n13*n4 - 2*n4^2)*
     j[p4, 0, n2, 1, 1 + n4, 0, 1, 0, 1, n9, 1, 1, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n4*j[p4, 0, n2, 1, 1 + n4, 0, 1, 0, 2, n9, 1, 1, -1, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n4*j[p4, 0, n2, 1, 1 + n4, 0, 1, 0, 2, n9, 1, 1, 0, -2 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   ((n4 + n4^2)*j[p4, 0, n2, 1, 2 + n4, -1, 1, 0, 1, n9, 1, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((-n4 - n4^2)*j[p4, 0, n2, 1, 2 + n4, 0, 1, -1, 1, n9, 1, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((-n4 - n4^2)*j[p4, 0, n2, 1, 2 + n4, 0, 1, 0, 1, n9, 1, 1, 0, -1 + n13, 
      0])/((d - 2*n13)*(-1 + n13)) + 
   ((2*n2 - n4)*j[p4, 0, n2, 2, n4, 0, 1, 0, 1, n9, 1, 1, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n4*j[p4, 0, n2, 2, 1 + n4, 0, 1, -1, 1, n9, 1, 1, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n4*j[p4, 0, n2, 2, 1 + n4, 0, 1, 0, 1, n9, 1, 1, 0, -2 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n4*j[p4, 0, n2, 2, 1 + n4, 0, 1, 0, 1, n9, 1, 1, 0, -1 + n13, 0])/
    ((d - 2*n13)*(-1 + n13)) + 
   (2*n2*j[p4, 0, 1 + n2, 1, n4, 0, 1, -1, 2, n9, 1, 1, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + ((-2*n2 + 2*n13*n2 - 2*n2^2)*
     j[p4, 0, 1 + n2, 1, n4, 0, 1, 0, 1, n9, 1, 1, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n2*j[p4, 0, 1 + n2, 1, n4, 0, 1, 0, 2, n9, 1, 1, -1, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n2*j[p4, 0, 1 + n2, 1, n4, 0, 1, 0, 2, n9, 1, 1, 0, -2 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n2*n4*j[p4, 0, 1 + n2, 1, 1 + n4, -1, 1, 0, 1, n9, 1, 1, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (2*n2*n4*j[p4, 0, 1 + n2, 1, 1 + n4, 0, 0, 0, 1, n9, 1, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (2*n2*n4*j[p4, 0, 1 + n2, 1, 1 + n4, 0, 1, -1, 1, n9, 1, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) - 
   (n2*n4*j[p4, 0, 1 + n2, 1, 1 + n4, 0, 1, 0, 0, n9, 1, 1, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n2*n4*j[p4, 0, 1 + n2, 1, 1 + n4, 0, 1, 0, 1, n9, 1, 1, -1, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (2*n2*n4*j[p4, 0, 1 + n2, 1, 1 + n4, 0, 1, 0, 1, n9, 1, 1, 0, -2 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) - 
   (n2*n4*j[p4, 0, 1 + n2, 1, 1 + n4, 0, 1, 0, 1, n9, 1, 1, 0, -1 + n13, 0])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n2*j[p4, 0, 1 + n2, 2, n4, 0, 1, -1, 1, n9, 1, 1, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (4*n2*j[p4, 0, 1 + n2, 2, n4, 0, 1, 0, 0, n9, 1, 1, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (2*n2*j[p4, 0, 1 + n2, 2, n4, 0, 1, 0, 1, n9, 1, 1, -1, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (3*n2*j[p4, 0, 1 + n2, 2, n4, 0, 1, 0, 1, n9, 1, 1, 0, -2 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   ((-n2 - n2^2)*j[p4, 0, 2 + n2, 0, n4, 0, 1, 0, 1, n9, 1, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((n2 + n2^2)*j[p4, 0, 2 + n2, 1, n4, 0, 1, -1, 1, n9, 1, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((n2 + n2^2)*j[p4, 0, 2 + n2, 1, n4, 0, 1, 0, 0, n9, 1, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((-n2 - n2^2)*j[p4, 0, 2 + n2, 1, n4, 0, 1, 0, 1, n9, 1, 1, -1, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((2*n2 + 2*n2^2)*j[p4, 0, 2 + n2, 1, n4, 0, 1, 0, 1, n9, 1, 1, 0, 
      -2 + n13, 1])/((d - 2*n13)*(-1 + n13)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n13 == 1 && n14 == 1 && n2 == 0 && n3 == 1 && 
    n6 == 1 && n7 == 0 && n8 == 1 && n9 == 0 && n12 != 0 -> 
  ((-2 - 2*n12)*j[p4, -1 + n1, -1, 1, n4, n5, 1, 0, 1, 0, 1, 1, 2 + n12, 1, 
      1])/(-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + 
   j[p4, -1 + n1, 0, 0, n4, n5, 1, 0, 1, 0, 1, 1, 1 + n12, 2, 1]/
    (6 - 3*d + 2*n1 + 2*n4 + 2*n5) + 
   ((-2 - 2*n12)*j[p4, -1 + n1, 0, 0, n4, n5, 1, 0, 1, 0, 1, 1, 2 + n12, 1, 
      1])/(-6 + 3*d - 2*n1 - 2*n4 - 2*n5) - 
   (n4*j[p4, -1 + n1, 0, 0, 1 + n4, n5, 1, 0, 1, 0, 1, 1, 1 + n12, 1, 1])/
    (6 - 3*d + 2*n1 + 2*n4 + 2*n5) + 
   ((4 + 4*n12)*j[p4, -1 + n1, 0, 1, n4, n5, 1, -1, 1, 0, 1, 1, 2 + n12, 1, 
      1])/(-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + 
   j[p4, -1 + n1, 0, 1, n4, n5, 1, 0, 0, 0, 1, 1, 1 + n12, 2, 1]/
    (-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + 
   ((2 + 2*n12)*j[p4, -1 + n1, 0, 1, n4, n5, 1, 0, 0, 0, 1, 1, 2 + n12, 1, 
      1])/(-6 + 3*d - 2*n1 - 2*n4 - 2*n5) - 
   (2*j[p4, -1 + n1, 0, 1, n4, n5, 1, 0, 1, 0, 0, 2, 1 + n12, 1, 1])/
    (-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + 
   ((10 - 4*d + 2*n1 + 2*n4 + 2*n5)*j[p4, -1 + n1, 0, 1, n4, n5, 1, 0, 1, 0, 
      1, 1, 1 + n12, 1, 1])/(-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + 
   ((2 + 2*n12)*j[p4, -1 + n1, 0, 1, n4, n5, 1, 0, 1, 0, 1, 1, 2 + n12, 0, 
      1])/(-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + 
   j[p4, -1 + n1, 0, 1, n4, n5, 1, 0, 2, 0, 1, 1, 1 + n12, 0, 1]/
    (-6 + 3*d - 2*n1 - 2*n4 - 2*n5) - 
   (n5*j[p4, -1 + n1, 0, 1, n4, 1 + n5, 0, 0, 1, 0, 1, 1, 1 + n12, 1, 1])/
    (-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + 
   (n5*j[p4, -1 + n1, 0, 1, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 1 + n12, 0, 1])/
    (-6 + 3*d - 2*n1 - 2*n4 - 2*n5) - 
   (n5*j[p4, -1 + n1, 0, 1, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 1 + n12, 1, 0])/
    (-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + 
   (n4*j[p4, -1 + n1, 0, 1, 1 + n4, n5, 0, 0, 1, 0, 1, 1, 1 + n12, 1, 1])/
    (6 - 3*d + 2*n1 + 2*n4 + 2*n5) - 
   (n4*j[p4, -1 + n1, 0, 1, 1 + n4, n5, 1, 0, 0, 0, 1, 1, 1 + n12, 1, 1])/
    (6 - 3*d + 2*n1 + 2*n4 + 2*n5) + 
   (n4*j[p4, -1 + n1, 0, 1, 1 + n4, n5, 1, 0, 1, 0, 1, 1, 1 + n12, 1, 0])/
    (6 - 3*d + 2*n1 + 2*n4 + 2*n5) + 
   (2*j[p4, -1 + n1, 0, 2, n4, n5, 1, 0, 0, 0, 1, 1, 1 + n12, 1, 1])/
    (-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + j[p4, -1 + n1, 0, 2, n4, n5, 1, 0, 1, 
     0, 1, 1, 1 + n12, 0, 1]/(-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + 
   (n4*j[p4, n1, -1, 0, 1 + n4, n5, 1, 0, 1, 0, 1, 1, 1 + n12, 1, 1])/
    (6 - 3*d + 2*n1 + 2*n4 + 2*n5) + 
   ((-1 - n12)*j[p4, n1, -1, 1, n4, n5, 1, 0, 1, 0, 1, 0, 2 + n12, 1, 1])/
    (-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + 
   ((-6 + d - 2*n12)*j[p4, n1, -1, 1, n4, n5, 1, 0, 1, 0, 1, 1, 1 + n12, 1, 
      1])/(-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + 
   ((2 + 2*n12)*j[p4, n1, -1, 1, n4, n5, 1, 0, 1, 0, 1, 1, 2 + n12, 1, 1])/
    (-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + j[p4, n1, -1, 1, n4, n5, 1, 0, 2, 0, 1, 
     0, 1 + n12, 1, 1]/(6 - 3*d + 2*n1 + 2*n4 + 2*n5) + 
   j[p4, n1, -1, 1, n4, n5, 1, 0, 2, 0, 1, 1, 1 + n12, 0, 1]/
    (6 - 3*d + 2*n1 + 2*n4 + 2*n5) + j[p4, n1, -1, 1, n4, n5, 2, 0, 1, 0, 0, 
     1, 1 + n12, 1, 1]/(6 - 3*d + 2*n1 + 2*n4 + 2*n5) - 
   (n5*j[p4, n1, -1, 1, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 1 + n12, 0, 1])/
    (-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + 
   (n5*j[p4, n1, -1, 1, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 1 + n12, 1, 0])/
    (-6 + 3*d - 2*n1 - 2*n4 - 2*n5) - 
   (n4*j[p4, n1, -1, 1, 1 + n4, n5, 0, 0, 1, 0, 1, 1, 1 + n12, 1, 1])/
    (6 - 3*d + 2*n1 + 2*n4 + 2*n5) + 
   (n4*j[p4, n1, -1, 1, 1 + n4, n5, 1, 0, 0, 0, 1, 1, 1 + n12, 1, 1])/
    (6 - 3*d + 2*n1 + 2*n4 + 2*n5) - 
   (n4*j[p4, n1, -1, 1, 1 + n4, n5, 1, 0, 1, 0, 1, 1, 1 + n12, 1, 0])/
    (6 - 3*d + 2*n1 + 2*n4 + 2*n5) + j[p4, n1, -1, 2, n4, n5, 1, 0, 0, 0, 1, 
     1, 1 + n12, 1, 1]/(6 - 3*d + 2*n1 + 2*n4 + 2*n5) + 
   j[p4, n1, -1, 2, n4, n5, 1, 0, 1, 0, 0, 1, 1 + n12, 1, 1]/
    (-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + j[p4, n1, -1, 2, n4, n5, 1, 0, 1, 0, 1, 
     0, 1 + n12, 1, 1]/(6 - 3*d + 2*n1 + 2*n4 + 2*n5) + 
   j[p4, n1, -1, 2, n4, n5, 1, 0, 1, 0, 1, 1, 1 + n12, 0, 1]/
    (6 - 3*d + 2*n1 + 2*n4 + 2*n5) + j[p4, n1, 0, 0, n4, n5, 1, 0, 1, -1, 1, 
     1, 1 + n12, 1, 2]/(6 - 3*d + 2*n1 + 2*n4 + 2*n5) + 
   ((-2 - n12)*j[p4, n1, 0, 0, n4, n5, 1, 0, 1, 0, 1, 1, 1 + n12, 1, 1])/
    (-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + j[p4, n1, 0, 0, n4, n5, 1, 0, 1, 0, 1, 
     1, 1 + n12, 1, 2]/(-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + 
   j[p4, n1, 0, 0, n4, n5, 1, 0, 1, 0, 1, 1, 1 + n12, 2, 1]/
    (-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + 
   ((1 + n12)*j[p4, n1, 0, 0, n4, n5, 1, 0, 1, 0, 1, 1, 2 + n12, 1, 1])/
    (-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + j[p4, n1, 0, 0, n4, n5, 2, 0, 1, -1, 1, 
     1, 1 + n12, 1, 1]/(6 - 3*d + 2*n1 + 2*n4 + 2*n5) - 
   (n4*j[p4, n1, 0, 0, 1 + n4, n5, 1, -1, 1, 0, 1, 1, 1 + n12, 1, 1])/
    (6 - 3*d + 2*n1 + 2*n4 + 2*n5) + 
   (n4*j[p4, n1, 0, 0, 1 + n4, n5, 1, 0, 1, -1, 1, 1, 1 + n12, 1, 1])/
    (6 - 3*d + 2*n1 + 2*n4 + 2*n5) + j[p4, n1, 0, 1, n4, n5, 0, 0, 1, -1, 1, 
     1, 1 + n12, 1, 2]/(-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + 
   j[p4, n1, 0, 1, n4, n5, 0, 0, 1, 0, 1, 1, 1 + n12, 1, 1]/
    (6 - 3*d + 2*n1 + 2*n4 + 2*n5) + j[p4, n1, 0, 1, n4, n5, 0, 0, 1, 0, 1, 
     1, 1 + n12, 1, 2]/(6 - 3*d + 2*n1 + 2*n4 + 2*n5) + 
   ((2 + 2*n12)*j[p4, n1, 0, 1, n4, n5, 1, -1, 0, 0, 1, 1, 2 + n12, 1, 1])/
    (-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + 
   (2*j[p4, n1, 0, 1, n4, n5, 1, -1, 0, 0, 1, 2, 1 + n12, 1, 1])/
    (-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + 
   ((2 + d - 2*n1 + 2*n12 - 2*n5)*j[p4, n1, 0, 1, n4, n5, 1, -1, 1, 0, 1, 1, 
      1 + n12, 1, 1])/(-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + 
   ((-2 - 2*n12)*j[p4, n1, 0, 1, n4, n5, 1, -1, 1, 0, 1, 1, 2 + n12, 0, 1])/
    (-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + 
   ((-2 - 2*n12)*j[p4, n1, 0, 1, n4, n5, 1, -1, 1, 0, 1, 1, 2 + n12, 1, 1])/
    (-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + j[p4, n1, 0, 1, n4, n5, 1, -1, 2, 0, 1, 
     0, 1 + n12, 1, 1]/(-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + 
   j[p4, n1, 0, 1, n4, n5, 1, -1, 2, 0, 1, 1, 1 + n12, 0, 1]/
    (-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + j[p4, n1, 0, 1, n4, n5, 1, 0, 0, -1, 1, 
     1, 1 + n12, 1, 2]/(-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + 
   (n12*j[p4, n1, 0, 1, n4, n5, 1, 0, 0, 0, 1, 1, 1 + n12, 1, 1])/
    (-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + j[p4, n1, 0, 1, n4, n5, 1, 0, 0, 0, 1, 
     1, 1 + n12, 1, 2]/(6 - 3*d + 2*n1 + 2*n4 + 2*n5) + 
   j[p4, n1, 0, 1, n4, n5, 1, 0, 0, 0, 1, 1, 1 + n12, 2, 1]/
    (6 - 3*d + 2*n1 + 2*n4 + 2*n5) + 
   ((-1 - n12)*j[p4, n1, 0, 1, n4, n5, 1, 0, 0, 0, 1, 1, 2 + n12, 1, 1])/
    (-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + j[p4, n1, 0, 1, n4, n5, 1, 0, 1, -1, 1, 
     1, 1 + n12, 0, 2]/(-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + 
   ((4 - 2*d + 2*n4 + 2*n5)*j[p4, n1, 0, 1, n4, n5, 1, 0, 1, -1, 1, 1, 
      1 + n12, 1, 1])/(-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + 
   ((-2 + n1)*j[p4, n1, 0, 1, n4, n5, 1, 0, 1, 0, 0, 1, 1 + n12, 1, 1])/
    (6 - 3*d + 2*n1 + 2*n4 + 2*n5) + j[p4, n1, 0, 1, n4, n5, 1, 0, 1, 0, 0, 
     2, n12, 1, 1]/(6 - 3*d + 2*n1 + 2*n4 + 2*n5) + 
   j[p4, n1, 0, 1, n4, n5, 1, 0, 1, 0, 0, 2, 1 + n12, 1, 1]/
    (-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + 
   ((-2 - n1 - n12)*j[p4, n1, 0, 1, n4, n5, 1, 0, 1, 0, 1, 1, 1 + n12, 0, 1])/
    (6 - 3*d + 2*n1 + 2*n4 + 2*n5) + j[p4, n1, 0, 1, n4, n5, 1, 0, 1, 0, 1, 
     1, 1 + n12, 0, 2]/(6 - 3*d + 2*n1 + 2*n4 + 2*n5) + 
   j[p4, n1, 0, 1, n4, n5, 1, 0, 1, 0, 1, 1, 1 + n12, 1, 0]/
    (6 - 3*d + 2*n1 + 2*n4 + 2*n5) + j[p4, n1, 0, 1, n4, n5, 1, 0, 1, 0, 1, 
    1, 1 + n12, 1, 1] + ((-1 - n12)*j[p4, n1, 0, 1, n4, n5, 1, 0, 1, 0, 1, 1, 
      2 + n12, 0, 1])/(-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + 
   j[p4, n1, 0, 1, n4, n5, 1, 0, 2, 0, 1, 0, n12, 1, 1]/
    (6 - 3*d + 2*n1 + 2*n4 + 2*n5) + j[p4, n1, 0, 1, n4, n5, 2, -1, 1, 0, 0, 
     1, 1 + n12, 1, 1]/(-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + 
   j[p4, n1, 0, 1, n4, n5, 2, 0, 0, -1, 1, 1, 1 + n12, 1, 1]/
    (-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + j[p4, n1, 0, 1, n4, n5, 2, 0, 1, -1, 1, 
     1, 1 + n12, 0, 1]/(-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + 
   j[p4, n1, 0, 1, n4, n5, 2, 0, 1, -1, 1, 1, 1 + n12, 1, 0]/
    (-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + j[p4, n1, 0, 1, n4, n5, 2, 0, 1, 0, 0, 
     1, n12, 1, 1]/(6 - 3*d + 2*n1 + 2*n4 + 2*n5) + 
   (n5*j[p4, n1, 0, 1, n4, 1 + n5, 0, 0, 1, -1, 1, 1, 1 + n12, 1, 1])/
    (-6 + 3*d - 2*n1 - 2*n4 - 2*n5) - 
   (n5*j[p4, n1, 0, 1, n4, 1 + n5, 1, 0, 1, -1, 1, 1, 1 + n12, 0, 1])/
    (-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + 
   (n5*j[p4, n1, 0, 1, n4, 1 + n5, 1, 0, 1, -1, 1, 1, 1 + n12, 1, 0])/
    (-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + 
   (n4*j[p4, n1, 0, 1, 1 + n4, n5, 0, -1, 1, 0, 1, 1, 1 + n12, 1, 1])/
    (6 - 3*d + 2*n1 + 2*n4 + 2*n5) - 
   (n4*j[p4, n1, 0, 1, 1 + n4, n5, 0, 0, 1, -1, 1, 1, 1 + n12, 1, 1])/
    (6 - 3*d + 2*n1 + 2*n4 + 2*n5) - 
   (n4*j[p4, n1, 0, 1, 1 + n4, n5, 1, -1, 0, 0, 1, 1, 1 + n12, 1, 1])/
    (6 - 3*d + 2*n1 + 2*n4 + 2*n5) + 
   (n4*j[p4, n1, 0, 1, 1 + n4, n5, 1, -1, 1, 0, 1, 1, 1 + n12, 1, 0])/
    (6 - 3*d + 2*n1 + 2*n4 + 2*n5) + 
   (n4*j[p4, n1, 0, 1, 1 + n4, n5, 1, 0, 0, -1, 1, 1, 1 + n12, 1, 1])/
    (6 - 3*d + 2*n1 + 2*n4 + 2*n5) - 
   (n4*j[p4, n1, 0, 1, 1 + n4, n5, 1, 0, 1, -1, 1, 1, 1 + n12, 1, 0])/
    (6 - 3*d + 2*n1 + 2*n4 + 2*n5) + j[p4, n1, 0, 2, n4, n5, 1, -1, 0, 0, 1, 
     1, 1 + n12, 1, 1]/(-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + 
   j[p4, n1, 0, 2, n4, n5, 1, -1, 1, 0, 0, 1, 1 + n12, 1, 1]/
    (6 - 3*d + 2*n1 + 2*n4 + 2*n5) + j[p4, n1, 0, 2, n4, n5, 1, -1, 1, 0, 1, 
     0, 1 + n12, 1, 1]/(-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + 
   j[p4, n1, 0, 2, n4, n5, 1, -1, 1, 0, 1, 1, 1 + n12, 0, 1]/
    (-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + j[p4, n1, 0, 2, n4, n5, 1, 0, 0, 0, 1, 
     1, n12, 1, 1]/(-6 + 3*d - 2*n1 - 2*n4 - 2*n5) - 
   (2*j[p4, n1, 0, 2, n4, n5, 1, 0, 0, 0, 1, 1, 1 + n12, 1, 1])/
    (-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + j[p4, n1, 0, 2, n4, n5, 1, 0, 1, 0, 0, 
     1, n12, 1, 1]/(-6 + 3*d - 2*n1 - 2*n4 - 2*n5) + 
   j[p4, n1, 0, 2, n4, n5, 1, 0, 1, 0, 1, 0, n12, 1, 1]/
    (6 - 3*d + 2*n1 + 2*n4 + 2*n5) + j[p4, n1, 0, 2, n4, n5, 1, 0, 1, 0, 1, 
     1, 1 + n12, 0, 1]/(6 - 3*d + 2*n1 + 2*n4 + 2*n5) + 
   (n1*j[p4, 1 + n1, -1, 1, n4, n5, 1, 0, 1, 0, 1, 1, 1 + n12, 0, 1])/
    (6 - 3*d + 2*n1 + 2*n4 + 2*n5) - 
   (n1*j[p4, 1 + n1, 0, 1, n4, n5, 1, 0, 1, 0, 0, 1, 1 + n12, 1, 1])/
    (6 - 3*d + 2*n1 + 2*n4 + 2*n5), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n2 == 0 && n4 == 0 && n5 == 0 && n7 == 0 && n9 == 0 && n6 != 1 -> 
  ((16 - 56*d + 55*d^2 - 12*d^3 + 32*n3 - 62*d*n3 + 18*d^2*n3 + 16*n3^2 - 
      7*d*n3^2 + 36*n6 - 55*d*n6 + 4*d^2*n6 + 32*n3*n6 - 2*n3^2*n6 + 6*n6^2 + 
      16*d*n6^2 - 12*n3*n6^2 - 8*n6^3 + 28*n8 - 53*d*n8 + 13*d^2*n8 + 
      28*n3*n8 - 10*d*n3*n8 + 26*n6*n8 + 7*d*n6*n8 - 8*n3*n6*n8 - 
      14*n6^2*n8 + 12*n8^2 - 3*d*n8^2 - 6*n6*n8^2)*j[p4, -1, 0, n3, 0, 0, n6, 
      0, n8, 0, 0, 2, 0, 1, 1])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 
      6*d*n6 + 4*n3*n6)*(-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 
      4*d*n6 + 3*n3*n6 + n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((-32 + 86*d - 73*d^2 + 19*d^3 - 36*n3 + 66*d*n3 - 30*d^2*n3 - 12*n3^2 + 
      12*d*n3^2 - 52*n6 + 84*d*n6 - 29*d^2*n6 - 48*n3*n6 + 42*d*n3*n6 - 
      12*n3^2*n6 - 20*n6^2 + 10*d*n6^2 - 12*n3*n6^2 - 24*n8 + 36*d*n8 - 
      12*d^2*n8 - 12*n3*n8 + 12*d*n3*n8 - 24*n6*n8 + 12*d*n6*n8 - 
      12*n3*n6*n8)*j[p4, -1, 0, n3, 0, 0, n6, 0, n8, 0, 1, 1, 0, 2, 0])/
    ((-2 + d)*(-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((-16 + 40*d - 26*d^2 + 5*d^3 - 16*n3 + 19*d*n3 - 6*d^2*n3 - 2*n3^2 + 
      2*d*n3^2 - 20*n6 + 12*d*n6 - d^2*n6 - 4*n3*n6 + 3*d*n3*n6 - 2*n3^2*n6 + 
      8*n6^2 - 4*d*n6^2 - 12*n8 + 12*d*n8 - 3*d^2*n8 - 2*n3*n8 + 2*d*n3*n8 - 
      2*n3*n6*n8)*j[p4, -1, 0, n3, 0, 0, n6, 0, n8, 0, 2, 1, 0, 0, 1])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((-16*n3 + 30*d*n3 - 11*d^2*n3 - 12*n3^2 + 6*d*n3^2 - 16*n3*n6 + 
      8*d*n3*n6 - 12*n3*n8 + 6*d*n3*n8)*j[p4, -1, 0, 1 + n3, 0, 0, n6, 0, n8, 
      0, 1, 1, 0, 0, 1])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 
      4*n3*n6)*(-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((16*n3 - 40*d*n3 + 32*d^2*n3 - 8*d^3*n3 + 16*n3^2 - 29*d*n3^2 + 
      13*d^2*n3^2 + 6*n3^3 - 6*d*n3^3 + 20*n3*n6 - 30*d*n3*n6 + 
      10*d^2*n3*n6 + 20*n3^2*n6 - 17*d*n3^2*n6 + 6*n3^3*n6 + 4*n3*n6^2 - 
      2*d*n3*n6^2 + 4*n3^2*n6^2 + 12*n3*n8 - 18*d*n3*n8 + 6*d^2*n3*n8 + 
      6*n3^2*n8 - 6*d*n3^2*n8 + 12*n3*n6*n8 - 6*d*n3*n6*n8 + 6*n3^2*n6*n8)*
     j[p4, -1, 0, 1 + n3, 0, 0, n6, 0, n8, 0, 1, 1, 0, 1, 0])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((16 - 24*d + 8*d^2 + 24*n3 - 24*d*n3 + 12*n3^2 + 4*n6 - 2*d*n6 + 
      12*n3*n6 + 12*n8 - 6*d*n8 + 12*n3*n8)*j[p4, 0, -1, n3, 0, 0, n6, 0, n8, 
      0, 1, 1, 0, 0, 2])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 
      4*n3*n6)*(-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((16 - 56*d + 56*d^2 - 16*d^3 + 32*n3 - 61*d*n3 + 23*d^2*n3 + 14*n3^2 - 
      8*d*n3^2 + 36*n6 - 58*d*n6 + 20*d^2*n6 + 32*n3*n6 - 17*d*n3*n6 + 
      2*n3^2*n6 + 8*n6^2 - 4*d*n6^2 + 28*n8 - 54*d*n8 + 20*d^2*n8 + 
      26*n3*n8 - 14*d*n3*n8 + 28*n6*n8 - 14*d*n6*n8 + 2*n3*n6*n8 + 12*n8^2 - 
      6*d*n8^2)*j[p4, 0, -1, n3, 0, 0, n6, 0, n8, 0, 2, 0, 0, 1, 1])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((16 - 40*d + 26*d^2 - 5*d^3 + 16*n3 - 19*d*n3 + 6*d^2*n3 + 2*n3^2 - 
      2*d*n3^2 + 20*n6 - 12*d*n6 + d^2*n6 + 4*n3*n6 - 3*d*n3*n6 + 2*n3^2*n6 - 
      8*n6^2 + 4*d*n6^2 + 12*n8 - 12*d*n8 + 3*d^2*n8 + 2*n3*n8 - 2*d*n3*n8 + 
      2*n3*n6*n8)*j[p4, 0, -1, n3, 0, 0, n6, 0, n8, 0, 2, 1, 0, 0, 1])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((-16*n8 + 30*d*n8 - 11*d^2*n8 - 12*n3*n8 + 6*d*n3*n8 - 16*n6*n8 + 
      8*d*n6*n8 - 12*n8^2 + 6*d*n8^2)*j[p4, 0, -1, n3, 0, 0, n6, 0, 1 + n8, 
      0, 1, 0, 0, 1, 1])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 
      4*n3*n6)*(-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((-16*n8 + 30*d*n8 - 11*d^2*n8 - 12*n3*n8 + 6*d*n3*n8 - 16*n6*n8 + 
      8*d*n6*n8 - 12*n8^2 + 6*d*n8^2)*j[p4, 0, -1, n3, 0, 0, n6, 0, 1 + n8, 
      0, 1, 1, 0, 0, 1])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 
      4*n3*n6)*(-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((-16*n6 + 30*d*n6 - 11*d^2*n6 - 12*n3*n6 + 6*d*n3*n6 - 16*n6^2 + 
      8*d*n6^2 - 12*n6*n8 + 6*d*n6*n8)*j[p4, 0, -1, n3, 0, 0, 1 + n6, 0, n8, 
      0, 0, 1, 0, 1, 1])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 
      4*n3*n6)*(-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((32*n6 - 54*d*n6 + 19*d^2*n6 + 36*n3*n6 - 30*d*n3*n6 + 12*n3^2*n6 + 
      20*n6^2 - 10*d*n6^2 + 12*n3*n6^2 + 24*n6*n8 - 12*d*n6*n8 + 12*n3*n6*n8)*
     j[p4, 0, -1, n3, 0, 0, 1 + n6, 0, n8, 0, 1, 1, 0, 0, 1])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((32*n6 - 54*d*n6 + 19*d^2*n6 + 36*n3*n6 - 30*d*n3*n6 + 12*n3^2*n6 + 
      20*n6^2 - 10*d*n6^2 + 12*n3*n6^2 + 24*n6*n8 - 12*d*n6*n8 + 12*n3*n6*n8)*
     j[p4, 0, -1, n3, 0, 0, 1 + n6, 0, n8, 0, 1, 1, 0, 1, 0])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((-16*n3 + 30*d*n3 - 11*d^2*n3 - 12*n3^2 + 6*d*n3^2 - 16*n3*n6 + 
      8*d*n3*n6 - 12*n3*n8 + 6*d*n3*n8)*j[p4, 0, -1, 1 + n3, 0, 0, n6, 0, n8, 
      0, 1, 1, 0, 0, 1])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 
      4*n3*n6)*(-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((16*n3 - 40*d*n3 + 32*d^2*n3 - 8*d^3*n3 + 16*n3^2 - 29*d*n3^2 + 
      13*d^2*n3^2 + 6*n3^3 - 6*d*n3^3 + 20*n3*n6 - 30*d*n3*n6 + 
      10*d^2*n3*n6 + 20*n3^2*n6 - 17*d*n3^2*n6 + 6*n3^3*n6 + 4*n3*n6^2 - 
      2*d*n3*n6^2 + 4*n3^2*n6^2 + 12*n3*n8 - 18*d*n3*n8 + 6*d^2*n3*n8 + 
      6*n3^2*n8 - 6*d*n3^2*n8 + 12*n3*n6*n8 - 6*d*n3*n6*n8 + 6*n3^2*n6*n8)*
     j[p4, 0, -1, 1 + n3, 0, 0, n6, 0, n8, 0, 1, 1, 0, 1, 0])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((-96 + 256*d - 210*d^2 + 53*d^3 - 160*n3 + 276*d*n3 - 116*d^2*n3 - 
      96*n3^2 + 90*d*n3^2 - 24*n3^3 - 88*n6 + 118*d*n6 - 37*d^2*n6 - 
      88*n3*n6 + 74*d*n3*n6 - 36*n3^2*n6 - 4*n6^2 + 2*d*n6^2 - 12*n3*n6^2 - 
      136*n8 + 210*d*n8 - 71*d^2*n8 - 144*n3*n8 + 114*d*n3*n8 - 48*n3^2*n8 - 
      52*n6*n8 + 26*d*n6*n8 - 36*n3*n6*n8 - 48*n8^2 + 24*d*n8^2 - 24*n3*n8^2)*
     j[p4, 0, 0, -1 + n3, 0, 0, n6, 0, n8, 0, 1, 1, 0, 0, 2])/
    (2*(-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((128 - 288*d + 136*d^2 + 42*d^3 - 27*d^4 + 128*n3 - 64*d*n3 - 
      136*d^2*n3 + 72*d^3*n3 + 96*d*n3^2 - 60*d^2*n3^2 - 16*n3^3 + 
      16*d*n3^3 + 32*n6 + 128*d*n6 - 198*d^2*n6 + 63*d^3*n6 - 128*n3*n6 + 
      296*d*n3*n6 - 126*d^2*n3*n6 - 104*n3^2*n6 + 80*d*n3^2*n6 - 16*n3^3*n6 - 
      48*n6^2 + 60*d*n6^2 - 18*d^2*n6^2 - 40*n3*n6^2 + 24*d*n3*n6^2 - 
      8*n3^2*n6^2 + 32*n8 + 192*d*n8 - 326*d^2*n8 + 111*d^3*n8 - 128*n3*n8 + 
      376*d*n3*n8 - 170*d^2*n3*n8 - 88*n3^2*n8 + 64*d*n3^2*n8 - 256*n6*n8 + 
      416*d*n6*n8 - 144*d^2*n6*n8 - 256*n3*n6*n8 + 160*d*n3*n6*n8 - 
      40*n3^2*n6*n8 - 24*n6^2*n8 + 12*d*n6^2*n8 - 8*n3*n6^2*n8 - 112*n8^2 + 
      252*d*n8^2 - 98*d^2*n8^2 - 120*n3*n8^2 + 72*d*n3*n8^2 - 136*n6*n8^2 + 
      68*d*n6*n8^2 - 24*n3*n6*n8^2 - 48*n8^3 + 24*d*n8^3)*
     j[p4, 0, 0, -1 + n3, 0, 0, n6, 0, n8, 0, 1, 1, 0, 1, 1])/
    (2*(-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((16 - 56*d + 56*d^2 - 16*d^3 + 32*n3 - 61*d*n3 + 23*d^2*n3 + 14*n3^2 - 
      8*d*n3^2 + 36*n6 - 58*d*n6 + 20*d^2*n6 + 32*n3*n6 - 17*d*n3*n6 + 
      2*n3^2*n6 + 8*n6^2 - 4*d*n6^2 + 28*n8 - 54*d*n8 + 20*d^2*n8 + 
      26*n3*n8 - 14*d*n3*n8 + 28*n6*n8 - 14*d*n6*n8 + 2*n3*n6*n8 + 12*n8^2 - 
      6*d*n8^2)*j[p4, 0, 0, -1 + n3, 0, 0, n6, 0, n8, 0, 2, 0, 0, 1, 1])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((96 - 224*d + 162*d^2 - 37*d^3 + 128*n3 - 180*d*n3 + 52*d^2*n3 + 
      48*n3^2 - 18*d*n3^2 + 56*n6 - 62*d*n6 + 17*d^2*n6 + 32*n3*n6 + 
      2*d*n3*n6 - 12*n3^2*n6 - 4*n6^2 + 2*d*n6^2 - 12*n3*n6^2 + 104*n8 - 
      138*d*n8 + 43*d^2*n8 + 72*n3*n8 - 30*d*n3*n8 + 20*n6*n8 - 10*d*n6*n8 - 
      12*n3*n6*n8 + 24*n8^2 - 12*d*n8^2)*j[p4, 0, 0, n3, -1, 0, n6, 0, n8, 0, 
      1, 1, 0, 0, 2])/(2*(-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 
      4*n3*n6)*(-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 
      3*n3*n6 + n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((-16*n8 + 40*d*n8 - 32*d^2*n8 + 8*d^3*n8 - 16*n3*n8 + 29*d*n3*n8 - 
      13*d^2*n3*n8 - 6*n3^2*n8 + 6*d*n3^2*n8 - 20*n6*n8 + 30*d*n6*n8 - 
      10*d^2*n6*n8 - 20*n3*n6*n8 + 17*d*n3*n6*n8 - 6*n3^2*n6*n8 - 4*n6^2*n8 + 
      2*d*n6^2*n8 - 4*n3*n6^2*n8 - 12*n8^2 + 18*d*n8^2 - 6*d^2*n8^2 - 
      6*n3*n8^2 + 6*d*n3*n8^2 - 12*n6*n8^2 + 6*d*n6*n8^2 - 6*n3*n6*n8^2)*
     j[p4, 0, 0, n3, -1, 0, n6, 0, 1 + n8, 0, 1, 0, 0, 1, 1])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((-16*n8 + 40*d*n8 - 32*d^2*n8 + 8*d^3*n8 - 16*n3*n8 + 29*d*n3*n8 - 
      13*d^2*n3*n8 - 6*n3^2*n8 + 6*d*n3^2*n8 - 20*n6*n8 + 30*d*n6*n8 - 
      10*d^2*n6*n8 - 20*n3*n6*n8 + 17*d*n3*n6*n8 - 6*n3^2*n6*n8 - 4*n6^2*n8 + 
      2*d*n6^2*n8 - 4*n3*n6^2*n8 - 12*n8^2 + 18*d*n8^2 - 6*d^2*n8^2 - 
      6*n3*n8^2 + 6*d*n3*n8^2 - 12*n6*n8^2 + 6*d*n6*n8^2 - 6*n3*n6*n8^2)*
     j[p4, 0, 0, n3, -1, 0, n6, 0, 1 + n8, 0, 1, 1, 0, 0, 1])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((16*n6 - 56*d*n6 + 56*d^2*n6 - 16*d^3*n6 + 32*n3*n6 - 61*d*n3*n6 + 
      23*d^2*n3*n6 + 14*n3^2*n6 - 8*d*n3^2*n6 + 36*n6^2 - 58*d*n6^2 + 
      20*d^2*n6^2 + 32*n3*n6^2 - 17*d*n3*n6^2 + 2*n3^2*n6^2 + 8*n6^3 - 
      4*d*n6^3 + 28*n6*n8 - 54*d*n6*n8 + 20*d^2*n6*n8 + 26*n3*n6*n8 - 
      14*d*n3*n6*n8 + 28*n6^2*n8 - 14*d*n6^2*n8 + 2*n3*n6^2*n8 + 12*n6*n8^2 - 
      6*d*n6*n8^2)*j[p4, 0, 0, n3, -1, 0, 1 + n6, 0, n8, 0, 0, 1, 0, 1, 1])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((64*n6 - 112*d*n6 + 50*d^2*n6 - 5*d^3*n6 + 64*n3*n6 - 58*d*n3*n6 + 
      6*d^2*n3*n6 + 20*n3^2*n6 - 2*d*n3^2*n6 - 16*n6^2 + 54*d*n6^2 - 
      23*d^2*n6^2 - 32*n3*n6^2 + 36*d*n3*n6^2 - 16*n3^2*n6^2 - 20*n6^3 + 
      10*d*n6^3 - 12*n3*n6^3 + 48*n6*n8 - 30*d*n6*n8 + 3*d^2*n6*n8 + 
      20*n3*n6*n8 - 2*d*n3*n6*n8 - 36*n6^2*n8 + 18*d*n6^2*n8 - 16*n3*n6^2*n8)*
     j[p4, 0, 0, n3, -1, 0, 1 + n6, 0, n8, 0, 1, 1, 0, 0, 1])/
    (2*(-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((64*n6 - 112*d*n6 + 50*d^2*n6 - 5*d^3*n6 + 64*n3*n6 - 58*d*n3*n6 + 
      6*d^2*n3*n6 + 20*n3^2*n6 - 2*d*n3^2*n6 - 16*n6^2 + 54*d*n6^2 - 
      23*d^2*n6^2 - 32*n3*n6^2 + 36*d*n3*n6^2 - 16*n3^2*n6^2 - 20*n6^3 + 
      10*d*n6^3 - 12*n3*n6^3 + 48*n6*n8 - 30*d*n6*n8 + 3*d^2*n6*n8 + 
      20*n3*n6*n8 - 2*d*n3*n6*n8 - 36*n6^2*n8 + 18*d*n6^2*n8 - 16*n3*n6^2*n8)*
     j[p4, 0, 0, n3, -1, 0, 1 + n6, 0, n8, 0, 1, 1, 0, 1, 0])/
    (2*(-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((-16 + 24*d - 8*d^2 - 24*n3 + 24*d*n3 - 12*n3^2 - 4*n6 + 2*d*n6 - 
      12*n3*n6 - 12*n8 + 6*d*n8 - 12*n3*n8)*j[p4, 0, 0, n3, 0, -1, n6, 0, n8, 
      0, 1, 1, 0, 0, 2])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 
      4*n3*n6)*(-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((16*n6 - 30*d*n6 + 11*d^2*n6 + 12*n3*n6 - 6*d*n3*n6 + 16*n6^2 - 
      8*d*n6^2 + 12*n6*n8 - 6*d*n6*n8)*j[p4, 0, 0, n3, 0, -1, 1 + n6, 0, n8, 
      0, 0, 1, 0, 1, 1])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 
      4*n3*n6)*(-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((-32*n6 + 54*d*n6 - 19*d^2*n6 - 36*n3*n6 + 30*d*n3*n6 - 12*n3^2*n6 - 
      20*n6^2 + 10*d*n6^2 - 12*n3*n6^2 - 24*n6*n8 + 12*d*n6*n8 - 12*n3*n6*n8)*
     j[p4, 0, 0, n3, 0, -1, 1 + n6, 0, n8, 0, 1, 1, 0, 0, 1])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((-32*n6 + 54*d*n6 - 19*d^2*n6 - 36*n3*n6 + 30*d*n3*n6 - 12*n3^2*n6 - 
      20*n6^2 + 10*d*n6^2 - 12*n3*n6^2 - 24*n6*n8 + 12*d*n6*n8 - 12*n3*n6*n8)*
     j[p4, 0, 0, n3, 0, -1, 1 + n6, 0, n8, 0, 1, 1, 0, 1, 0])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((-16 + 24*d - 8*d^2 - 24*n3 + 24*d*n3 - 12*n3^2 - 4*n6 + 2*d*n6 - 
      12*n3*n6 - 12*n8 + 6*d*n8 - 12*n3*n8)*j[p4, 0, 0, n3, 0, 0, -1 + n6, 0, 
      n8, 0, 1, 1, 0, 0, 2])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 
      6*d*n6 + 4*n3*n6)*(-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((128 - 288*d + 56*d^2 + 270*d^3 - 211*d^4 + 45*d^5 + 64*n3 + 144*d*n3 - 
      576*d^2*n3 + 494*d^3*n3 - 126*d^4*n3 - 64*n3^2 + 288*d*n3^2 - 
      336*d^2*n3^2 + 112*d^3*n3^2 - 32*n3^3 + 64*d*n3^3 - 32*d^2*n3^3 - 
      32*n6 + 592*d*n6 - 1198*d^2*n6 + 791*d^3*n6 - 168*d^4*n6 - 368*n3*n6 + 
      1356*d*n3*n6 - 1344*d^2*n3*n6 + 386*d^3*n3*n6 - 304*n3^2*n6 + 
      632*d*n3^2*n6 - 280*d^2*n3^2*n6 - 64*n3^3*n6 + 64*d*n3^3*n6 - 
      352*n6^2 + 1024*d*n6^2 - 814*d^2*n6^2 + 195*d^3*n6^2 - 600*n3*n6^2 + 
      984*d*n3*n6^2 - 360*d^2*n3*n6^2 - 272*n3^2*n6^2 + 200*d*n3^2*n6^2 - 
      32*n3^3*n6^2 - 216*n6^3 + 276*d*n6^3 - 84*d^2*n6^3 - 176*n3*n6^3 + 
      108*d*n3*n6^3 - 32*n3^2*n6^3 - 24*n6^4 + 12*d*n6^4 - 8*n3*n6^4 - 
      32*n8 + 336*d*n8 - 590*d^2*n8 + 357*d^3*n8 - 71*d^4*n8 - 176*n3*n8 + 
      516*d*n3*n8 - 468*d^2*n3*n8 + 128*d^3*n3*n8 - 80*n3^2*n8 + 
      136*d*n3^2*n8 - 56*d^2*n3^2*n8 - 352*n6*n8 + 968*d*n6*n8 - 
      722*d^2*n6*n8 + 163*d^3*n6*n8 - 408*n3*n6*n8 + 696*d*n3*n6*n8 - 
      252*d^2*n3*n6*n8 - 112*n3^2*n6*n8 + 88*d*n3^2*n6*n8 - 344*n6^2*n8 + 
      380*d*n6^2*n8 - 104*d^2*n6^2*n8 - 240*n3*n6^2*n8 + 132*d*n3*n6^2*n8 - 
      32*n3^2*n6^2*n8 - 24*n6^3*n8 + 12*d*n6^3*n8 - 8*n3*n6^3*n8 - 96*n8^2 + 
      192*d*n8^2 - 120*d^2*n8^2 + 24*d^3*n8^2 - 48*n3*n8^2 + 72*d*n3*n8^2 - 
      24*d^2*n3*n8^2 - 96*n6*n8^2 + 96*d*n6*n8^2 - 24*d^2*n6*n8^2 - 
      48*n3*n6*n8^2 + 24*d*n3*n6*n8^2)*j[p4, 0, 0, n3, 0, 0, -1 + n6, 0, n8, 
      0, 1, 1, 0, 1, 1])/(2*(-1 + n6)*(6*d - 3*d^2 - 4*n3 + 4*d*n3 - 12*n6 + 
      6*d*n6 - 4*n3*n6)*(-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 
      4*d*n6 + 3*n3*n6 + n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((-16 + 40*d - 32*d^2 + 8*d^3 - 16*n3 + 29*d*n3 - 13*d^2*n3 - 6*n3^2 + 
      6*d*n3^2 - 20*n6 + 30*d*n6 - 10*d^2*n6 - 20*n3*n6 + 17*d*n3*n6 - 
      6*n3^2*n6 - 4*n6^2 + 2*d*n6^2 - 4*n3*n6^2 - 12*n8 + 18*d*n8 - 
      6*d^2*n8 - 6*n3*n8 + 6*d*n3*n8 - 12*n6*n8 + 6*d*n6*n8 - 6*n3*n6*n8)*
     j[p4, 0, 0, n3, 0, 0, -1 + n6, 0, n8, 0, 2, 1, 0, 0, 1])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((16*n8 - 40*d*n8 + 32*d^2*n8 - 8*d^3*n8 + 16*n3*n8 - 29*d*n3*n8 + 
      13*d^2*n3*n8 + 6*n3^2*n8 - 6*d*n3^2*n8 + 20*n6*n8 - 30*d*n6*n8 + 
      10*d^2*n6*n8 + 20*n3*n6*n8 - 17*d*n3*n6*n8 + 6*n3^2*n6*n8 + 4*n6^2*n8 - 
      2*d*n6^2*n8 + 4*n3*n6^2*n8 + 12*n8^2 - 18*d*n8^2 + 6*d^2*n8^2 + 
      6*n3*n8^2 - 6*d*n3*n8^2 + 12*n6*n8^2 - 6*d*n6*n8^2 + 6*n3*n6*n8^2)*
     j[p4, 0, 0, n3, 0, 0, -1 + n6, 0, 1 + n8, 0, 1, 0, 0, 1, 1])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((16*n8 - 40*d*n8 + 32*d^2*n8 - 8*d^3*n8 + 16*n3*n8 - 29*d*n3*n8 + 
      13*d^2*n3*n8 + 6*n3^2*n8 - 6*d*n3^2*n8 + 20*n6*n8 - 30*d*n6*n8 + 
      10*d^2*n6*n8 + 20*n3*n6*n8 - 17*d*n3*n6*n8 + 6*n3^2*n6*n8 + 4*n6^2*n8 - 
      2*d*n6^2*n8 + 4*n3*n6^2*n8 + 12*n8^2 - 18*d*n8^2 + 6*d^2*n8^2 + 
      6*n3*n8^2 - 6*d*n3*n8^2 + 12*n6*n8^2 - 6*d*n6*n8^2 + 6*n3*n6*n8^2)*
     j[p4, 0, 0, n3, 0, 0, -1 + n6, 0, 1 + n8, 0, 1, 1, 0, 0, 1])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((-16 + 24*d - 8*d^2 - 24*n3 + 24*d*n3 - 12*n3^2 - 4*n6 + 2*d*n6 - 
      12*n3*n6 - 12*n8 + 6*d*n8 - 12*n3*n8)*j[p4, 0, 0, n3, 0, 0, n6, -1, n8, 
      0, 1, 1, 0, 0, 2])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 
      4*n3*n6)*(-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((-16 + 56*d - 56*d^2 + 16*d^3 - 32*n3 + 61*d*n3 - 23*d^2*n3 - 14*n3^2 + 
      8*d*n3^2 - 36*n6 + 58*d*n6 - 20*d^2*n6 - 32*n3*n6 + 17*d*n3*n6 - 
      2*n3^2*n6 - 8*n6^2 + 4*d*n6^2 - 28*n8 + 54*d*n8 - 20*d^2*n8 - 
      26*n3*n8 + 14*d*n3*n8 - 28*n6*n8 + 14*d*n6*n8 - 2*n3*n6*n8 - 12*n8^2 + 
      6*d*n8^2)*j[p4, 0, 0, n3, 0, 0, n6, -1, n8, 0, 2, 0, 0, 1, 1])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((-16 + 56*d - 56*d^2 + 16*d^3 - 32*n3 + 61*d*n3 - 23*d^2*n3 - 14*n3^2 + 
      8*d*n3^2 - 36*n6 + 58*d*n6 - 20*d^2*n6 - 32*n3*n6 + 17*d*n3*n6 - 
      2*n3^2*n6 - 8*n6^2 + 4*d*n6^2 - 28*n8 + 54*d*n8 - 20*d^2*n8 - 
      26*n3*n8 + 14*d*n3*n8 - 28*n6*n8 + 14*d*n6*n8 - 2*n3*n6*n8 - 12*n8^2 + 
      6*d*n8^2)*j[p4, 0, 0, n3, 0, 0, n6, -1, n8, 0, 2, 1, 0, 0, 1])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((16*n8 - 30*d*n8 + 11*d^2*n8 + 12*n3*n8 - 6*d*n3*n8 + 16*n6*n8 - 
      8*d*n6*n8 + 12*n8^2 - 6*d*n8^2)*j[p4, 0, 0, n3, 0, 0, n6, -1, 1 + n8, 
      0, 1, 0, 0, 1, 1])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 
      4*n3*n6)*(-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((16*n8 - 30*d*n8 + 11*d^2*n8 + 12*n3*n8 - 6*d*n3*n8 + 16*n6*n8 - 
      8*d*n6*n8 + 12*n8^2 - 6*d*n8^2)*j[p4, 0, 0, n3, 0, 0, n6, -1, 1 + n8, 
      0, 1, 1, 0, 0, 1])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 
      4*n3*n6)*(-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((-16 + 56*d - 55*d^2 + 12*d^3 - 32*n3 + 62*d*n3 - 18*d^2*n3 - 16*n3^2 + 
      7*d*n3^2 - 36*n6 + 55*d*n6 - 4*d^2*n6 - 32*n3*n6 + 2*n3^2*n6 - 6*n6^2 - 
      16*d*n6^2 + 12*n3*n6^2 + 8*n6^3 - 28*n8 + 53*d*n8 - 13*d^2*n8 - 
      28*n3*n8 + 10*d*n3*n8 - 26*n6*n8 - 7*d*n6*n8 + 8*n3*n6*n8 + 
      14*n6^2*n8 - 12*n8^2 + 3*d*n8^2 + 6*n6*n8^2)*j[p4, 0, 0, n3, 0, 0, n6, 
      0, -1 + n8, 0, 0, 2, 0, 1, 1])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 
      6*d*n6 + 4*n3*n6)*(-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 
      4*d*n6 + 3*n3*n6 + n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((-16 + 24*d - 8*d^2 - 24*n3 + 24*d*n3 - 12*n3^2 - 4*n6 + 2*d*n6 - 
      12*n3*n6 - 12*n8 + 6*d*n8 - 12*n3*n8)*j[p4, 0, 0, n3, 0, 0, n6, 0, 
      -1 + n8, 0, 1, 1, 0, 0, 2])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 
      6*d*n6 + 4*n3*n6)*(-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((-256 + 800*d - 848*d^2 + 370*d^3 - 57*d^4 - 448*n3 + 960*d*n3 - 
      628*d^2*n3 + 128*d^3*n3 - 256*n3^2 + 328*d*n3^2 - 96*d^2*n3^2 - 
      48*n3^3 + 24*d*n3^3 - 256*n6 + 376*d*n6 - 166*d^2*n6 + 21*d^3*n6 - 
      240*n3*n6 + 208*d*n3*n6 - 38*d^2*n3*n6 - 56*n3^2*n6 + 16*d*n3^2*n6 + 
      48*n6^2 - 60*d*n6^2 + 18*d^2*n6^2 + 40*n3*n6^2 - 24*d*n3*n6^2 + 
      8*n3^2*n6^2 - 320*n8 + 616*d*n8 - 358*d^2*n8 + 65*d^3*n8 - 336*n3*n8 + 
      384*d*n3*n8 - 102*d^2*n3*n8 - 88*n3^2*n8 + 40*d*n3^2*n8 - 80*n6*n8 + 
      32*d*n6*n8 + 4*d^2*n6*n8 - 16*n3*n6*n8 - 8*d*n3*n6*n8 + 8*n3^2*n6*n8 + 
      24*n6^2*n8 - 12*d*n6^2*n8 + 8*n3*n6^2*n8 - 96*n8^2 + 84*d*n8^2 - 
      18*d^2*n8^2 - 40*n3*n8^2 + 16*d*n3*n8^2 + 24*n6*n8^2 - 12*d*n6*n8^2 + 
      8*n3*n6*n8^2)*j[p4, 0, 0, n3, 0, 0, n6, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (2*(-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((32 - 64*d + 18*d^2 + 25*d^3 - 11*d^4 + 48*d*n3 - 84*d^2*n3 + 36*d^3*n3 - 
      24*n3^2 + 60*d*n3^2 - 36*d^2*n3^2 - 12*n3^3 + 12*d*n3^3 + 8*n6 + 
      58*d*n6 - 107*d^2*n6 + 38*d^3*n6 - 48*n3*n6 + 144*d*n3*n6 - 
      84*d^2*n3*n6 - 48*n3^2*n6 + 60*d*n3^2*n6 - 12*n3^3*n6 - 44*n6^2 + 
      96*d*n6^2 - 37*d^2*n6^2 - 60*n3*n6^2 + 60*d*n3*n6^2 - 24*n3^2*n6^2 - 
      20*n6^3 + 10*d*n6^3 - 12*n3*n6^3 - 8*n8 + 62*d*n8 - 79*d^2*n8 + 
      25*d^3*n8 - 48*n3*n8 + 96*d*n3*n8 - 48*d^2*n3*n8 - 24*n3^2*n8 + 
      24*d*n3^2*n8 - 52*n6*n8 + 120*d*n6*n8 - 47*d^2*n6*n8 - 72*n3*n6*n8 + 
      72*d*n3*n6*n8 - 24*n3^2*n6*n8 - 44*n6^2*n8 + 22*d*n6^2*n8 - 
      24*n3*n6^2*n8 - 24*n8^2 + 36*d*n8^2 - 12*d^2*n8^2 - 12*n3*n8^2 + 
      12*d*n3*n8^2 - 24*n6*n8^2 + 12*d*n6*n8^2 - 12*n3*n6*n8^2)*
     j[p4, 0, 0, n3, 0, 0, n6, 0, -1 + n8, 0, 1, 1, 0, 2, 0])/
    ((-2 + d)*(-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((-16 + 56*d - 56*d^2 + 16*d^3 - 32*n3 + 61*d*n3 - 23*d^2*n3 - 14*n3^2 + 
      8*d*n3^2 - 36*n6 + 58*d*n6 - 20*d^2*n6 - 32*n3*n6 + 17*d*n3*n6 - 
      2*n3^2*n6 - 8*n6^2 + 4*d*n6^2 - 28*n8 + 54*d*n8 - 20*d^2*n8 - 
      26*n3*n8 + 14*d*n3*n8 - 28*n6*n8 + 14*d*n6*n8 - 2*n3*n6*n8 - 12*n8^2 + 
      6*d*n8^2)*j[p4, 0, 0, n3, 0, 0, n6, 0, -1 + n8, 0, 2, 0, 0, 1, 1])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((-16 + 30*d - 11*d^2 - 12*n3 + 6*d*n3 - 16*n6 + 8*d*n6 - 12*n8 + 6*d*n8)*
     j[p4, 0, 0, n3, 0, 0, n6, 0, n8, -1, 1, 1, 0, 0, 2])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((16 - 40*d + 32*d^2 - 8*d^3 + 16*n3 - 29*d*n3 + 13*d^2*n3 + 6*n3^2 - 
      6*d*n3^2 + 20*n6 - 30*d*n6 + 10*d^2*n6 + 20*n3*n6 - 17*d*n3*n6 + 
      6*n3^2*n6 + 4*n6^2 - 2*d*n6^2 + 4*n3*n6^2 + 12*n8 - 18*d*n8 + 
      6*d^2*n8 + 6*n3*n8 - 6*d*n3*n8 + 12*n6*n8 - 6*d*n6*n8 + 6*n3*n6*n8)*
     j[p4, 0, 0, n3, 0, 0, n6, 0, n8, -1, 2, 1, 0, 0, 1])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((-48 + 168*d - 180*d^2 + 54*d^3 - 80*n3 + 147*d*n3 - 27*d^2*n3 - 
      16*d^3*n3 - 18*n3^2 - 29*d*n3^2 + 23*d^2*n3^2 + 14*n3^3 - 8*d*n3^3 - 
      92*n6 + 170*d*n6 - 46*d^2*n6 - 8*d^3*n6 - 76*n3*n6 - 8*d*n3*n6 + 
      33*d^2*n3*n6 + 24*n3^2*n6 - 23*d*n3^2*n6 + 2*n3^3*n6 - 28*n6^2 - 
      6*d*n6^2 + 10*d^2*n6^2 + 20*n3*n6^2 - 21*d*n3*n6^2 + 6*n3^2*n6^2 + 
      4*n6^3 - 2*d*n6^3 + 4*n3*n6^3 - 84*n8 + 174*d*n8 - 66*d^2*n8 - 
      58*n3*n8 - 4*d*n3*n8 + 20*d^2*n3*n8 + 26*n3^2*n8 - 14*d*n3^2*n8 - 
      96*n6*n8 + 36*d*n6*n8 + 6*d^2*n6*n8 + 20*n3*n6*n8 - 20*d*n3*n6*n8 + 
      2*n3^2*n6*n8 + 12*n6^2*n8 - 6*d*n6^2*n8 + 6*n3*n6^2*n8 - 36*n8^2 + 
      18*d*n8^2 + 12*n3*n8^2 - 6*d*n3*n8^2)*j[p4, 0, 0, n3, 0, 0, n6, 0, n8, 
      0, 0, 1, 0, 1, 1])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 
      4*n3*n6)*(-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 
      3*n3*n6 + n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((-7*d + 7*d^2 + 2*n3 - 5*d*n3 + 14*n6 - 18*d*n6 + 8*n3*n6 + 8*n6^2 - 
      3*d*n8 + 6*n6*n8)*j[p4, 0, 0, n3, 0, 0, n6, 0, n8, 0, 0, 2, -1, 1, 1])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((7*d - 7*d^2 - 2*n3 + 5*d*n3 - 14*n6 + 18*d*n6 - 8*n3*n6 - 8*n6^2 + 
      3*d*n8 - 6*n6*n8)*j[p4, 0, 0, n3, 0, 0, n6, 0, n8, 0, 0, 2, 0, 1, 1])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((48 - 168*d + 174*d^2 - 51*d^3 + 80*n3 - 137*d*n3 + 20*d^2*n3 + 
      16*d^3*n3 + 14*n3^2 + 33*d*n3^2 - 23*d^2*n3^2 - 14*n3^3 + 8*d*n3^3 + 
      108*n6 - 192*d*n6 + 69*d^2*n6 + 76*n3*n6 - 7*d*n3*n6 - 20*d^2*n3*n6 - 
      22*n3^2*n6 + 17*d*n3^2*n6 - 2*n3^3*n6 + 36*n6^2 - 18*d*n6^2 - 
      4*n3*n6^2 + 4*d*n3*n6^2 + 68*n8 - 112*d*n8 + 7*d^2*n8 + 16*d^3*n8 + 
      22*n3*n8 + 69*d*n3*n8 - 43*d^2*n3*n8 - 40*n3^2*n8 + 22*d*n3^2*n8 + 
      60*n6*n8 + 10*d*n6*n8 - 20*d^2*n6*n8 - 50*n3*n6*n8 + 31*d*n3*n6*n8 - 
      4*n3^2*n6*n8 - 8*n6^2*n8 + 4*d*n6^2*n8 + 8*n8^2 + 36*d*n8^2 - 
      20*d^2*n8^2 - 38*n3*n8^2 + 20*d*n3*n8^2 - 28*n6*n8^2 + 14*d*n6*n8^2 - 
      2*n3*n6*n8^2 - 12*n8^3 + 6*d*n8^3)*j[p4, 0, 0, n3, 0, 0, n6, 0, n8, 0, 
      1, 0, 0, 1, 1])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 
      4*n3*n6)*(-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 
      3*n3*n6 + n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((16 - 24*d + 8*d^2 + 24*n3 - 24*d*n3 + 12*n3^2 + 4*n6 - 2*d*n6 + 
      12*n3*n6 + 12*n8 - 6*d*n8 + 12*n3*n8)*j[p4, 0, 0, n3, 0, 0, n6, 0, n8, 
      0, 1, 1, -1, 0, 2])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 
      4*n3*n6)*(-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((-32 + 64*d - 18*d^2 - 25*d^3 + 11*d^4 - 48*d*n3 + 84*d^2*n3 - 
      36*d^3*n3 + 24*n3^2 - 60*d*n3^2 + 36*d^2*n3^2 + 12*n3^3 - 12*d*n3^3 - 
      8*n6 - 58*d*n6 + 107*d^2*n6 - 38*d^3*n6 + 48*n3*n6 - 144*d*n3*n6 + 
      84*d^2*n3*n6 + 48*n3^2*n6 - 60*d*n3^2*n6 + 12*n3^3*n6 + 44*n6^2 - 
      96*d*n6^2 + 37*d^2*n6^2 + 60*n3*n6^2 - 60*d*n3*n6^2 + 24*n3^2*n6^2 + 
      20*n6^3 - 10*d*n6^3 + 12*n3*n6^3 + 8*n8 - 62*d*n8 + 79*d^2*n8 - 
      25*d^3*n8 + 48*n3*n8 - 96*d*n3*n8 + 48*d^2*n3*n8 + 24*n3^2*n8 - 
      24*d*n3^2*n8 + 52*n6*n8 - 120*d*n6*n8 + 47*d^2*n6*n8 + 72*n3*n6*n8 - 
      72*d*n3*n6*n8 + 24*n3^2*n6*n8 + 44*n6^2*n8 - 22*d*n6^2*n8 + 
      24*n3*n6^2*n8 + 24*n8^2 - 36*d*n8^2 + 12*d^2*n8^2 + 12*n3*n8^2 - 
      12*d*n3*n8^2 + 24*n6*n8^2 - 12*d*n6*n8^2 + 12*n3*n6*n8^2)*
     j[p4, 0, 0, n3, 0, 0, n6, 0, n8, 0, 1, 1, -1, 2, 0])/
    ((-2 + d)*(-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((64 - 304*d + 458*d^2 - 251*d^3 + 45*d^4 + 160*n3 - 466*d*n3 + 
      366*d^2*n3 - 84*d^3*n3 + 116*n3^2 - 170*d*n3^2 + 54*d^2*n3^2 + 
      24*n3^3 - 12*d*n3^3 + 208*n6 - 626*d*n6 + 497*d^2*n6 - 118*d^3*n6 + 
      360*n3*n6 - 574*d*n3*n6 + 212*d^2*n3*n6 + 164*n3^2*n6 - 126*d*n3^2*n6 + 
      24*n3^3*n6 + 212*n6^2 - 296*d*n6^2 + 95*d^2*n6^2 + 196*n3*n6^2 - 
      136*d*n3*n6^2 + 48*n3^2*n6^2 + 44*n6^3 - 22*d*n6^3 + 20*n3*n6^3 + 
      176*n8 - 438*d*n8 + 253*d^2*n8 - 39*d^3*n8 + 188*n3*n8 - 176*d*n3*n8 + 
      36*d^2*n3*n8 + 20*n3^2*n8 - 8*d*n3^2*n8 + 308*n6*n8 - 316*d*n6*n8 + 
      81*d^2*n6*n8 + 156*n3*n6*n8 - 112*d*n3*n6*n8 + 44*n3^2*n6*n8 + 
      60*n6^2*n8 - 30*d*n6^2*n8 + 40*n3*n6^2*n8 + 64*n8^2 - 16*d^2*n8^2 - 
      28*n3*n8^2 + 16*d*n3*n8^2 - 8*n6*n8^2 + 4*d*n6*n8^2 + 20*n3*n6*n8^2 - 
      24*n8^3 + 12*d*n8^3)*j[p4, 0, 0, n3, 0, 0, n6, 0, n8, 0, 1, 1, 0, 0, 
      1])/(2*(-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((16 - 30*d + 11*d^2 + 12*n3 - 6*d*n3 + 16*n6 - 8*d*n6 + 12*n8 - 6*d*n8)*
     j[p4, 0, 0, n3, 0, 0, n6, 0, n8, 0, 1, 1, 0, 0, 2])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((-96 + 208*d - 36*d^2 - 112*d^3 + 45*d^4 - 64*n3 - 102*d*n3 + 
      308*d^2*n3 - 142*d^3*n3 + 36*n3^2 - 186*d*n3^2 + 138*d^2*n3^2 + 
      20*n3^3 - 44*d*n3^3 - 56*n6 - 184*d*n6 + 342*d^2*n6 - 118*d^3*n6 + 
      208*n3*n6 - 528*d*n3*n6 + 274*d^2*n3*n6 + 176*n3^2*n6 - 200*d*n3^2*n6 + 
      44*n3^3*n6 + 144*n6^2 - 262*d*n6^2 + 95*d^2*n6^2 + 160*n3*n6^2 - 
      140*d*n3*n6^2 + 56*n3^2*n6^2 + 44*n6^3 - 22*d*n6^3 + 20*n3*n6^3 - 
      72*n8 - 40*d*n8 + 180*d^2*n8 - 71*d^3*n8 + 28*n3*n8 - 204*d*n3*n8 + 
      140*d^2*n3*n8 + 20*n3^2*n8 - 68*d*n3^2*n8 + 160*n6*n8 - 322*d*n6*n8 + 
      121*d^2*n6*n8 + 200*n3*n6*n8 - 186*d*n3*n6*n8 + 68*n3^2*n6*n8 + 
      76*n6^2*n8 - 38*d*n6^2*n8 + 40*n3*n6^2*n8 - 48*d*n8^2 + 24*d^2*n8^2 - 
      24*d*n3*n8^2 + 48*n6*n8^2 - 24*d*n6*n8^2 + 24*n3*n6*n8^2)*
     j[p4, 0, 0, n3, 0, 0, n6, 0, n8, 0, 1, 1, 0, 1, 0])/
    (2*(-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((32 - 86*d + 73*d^2 - 19*d^3 + 36*n3 - 66*d*n3 + 30*d^2*n3 + 12*n3^2 - 
      12*d*n3^2 + 52*n6 - 84*d*n6 + 29*d^2*n6 + 48*n3*n6 - 42*d*n3*n6 + 
      12*n3^2*n6 + 20*n6^2 - 10*d*n6^2 + 12*n3*n6^2 + 24*n8 - 36*d*n8 + 
      12*d^2*n8 + 12*n3*n8 - 12*d*n3*n8 + 24*n6*n8 - 12*d*n6*n8 + 
      12*n3*n6*n8)*j[p4, 0, 0, n3, 0, 0, n6, 0, n8, 0, 1, 1, 0, 2, 0])/
    ((-2 + d)*(-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((16 - 56*d + 56*d^2 - 16*d^3 + 32*n3 - 61*d*n3 + 23*d^2*n3 + 14*n3^2 - 
      8*d*n3^2 + 36*n6 - 58*d*n6 + 20*d^2*n6 + 32*n3*n6 - 17*d*n3*n6 + 
      2*n3^2*n6 + 8*n6^2 - 4*d*n6^2 + 28*n8 - 54*d*n8 + 20*d^2*n8 + 
      26*n3*n8 - 14*d*n3*n8 + 28*n6*n8 - 14*d*n6*n8 + 2*n3*n6*n8 + 12*n8^2 - 
      6*d*n8^2)*j[p4, 0, 0, n3, 0, 0, n6, 0, n8, 0, 2, 0, -1, 1, 1])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((-16 + 56*d - 56*d^2 + 16*d^3 - 32*n3 + 61*d*n3 - 23*d^2*n3 - 14*n3^2 + 
      8*d*n3^2 - 36*n6 + 58*d*n6 - 20*d^2*n6 - 32*n3*n6 + 17*d*n3*n6 - 
      2*n3^2*n6 - 8*n6^2 + 4*d*n6^2 - 28*n8 + 54*d*n8 - 20*d^2*n8 - 
      26*n3*n8 + 14*d*n3*n8 - 28*n6*n8 + 14*d*n6*n8 - 2*n3*n6*n8 - 12*n8^2 + 
      6*d*n8^2)*j[p4, 0, 0, n3, 0, 0, n6, 0, n8, 0, 2, 0, 0, 1, 1])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((16*n6 - 56*d*n6 + 56*d^2*n6 - 16*d^3*n6 + 32*n3*n6 - 61*d*n3*n6 + 
      23*d^2*n3*n6 + 14*n3^2*n6 - 8*d*n3^2*n6 + 36*n6^2 - 58*d*n6^2 + 
      20*d^2*n6^2 + 32*n3*n6^2 - 17*d*n3*n6^2 + 2*n3^2*n6^2 + 8*n6^3 - 
      4*d*n6^3 + 28*n6*n8 - 54*d*n6*n8 + 20*d^2*n6*n8 + 26*n3*n6*n8 - 
      14*d*n3*n6*n8 + 28*n6^2*n8 - 14*d*n6^2*n8 + 2*n3*n6^2*n8 + 12*n6*n8^2 - 
      6*d*n6*n8^2)*j[p4, 0, 0, n3, 0, 0, 1 + n6, 0, -1 + n8, 0, 0, 1, 0, 1, 
      1])/((6*d - 3*d^2 - 4*n3 + 4*d*n3 - 12*n6 + 6*d*n6 - 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((-64*n6 + 112*d*n6 - 50*d^2*n6 + 5*d^3*n6 - 64*n3*n6 + 58*d*n3*n6 - 
      6*d^2*n3*n6 - 20*n3^2*n6 + 2*d*n3^2*n6 + 16*n6^2 - 54*d*n6^2 + 
      23*d^2*n6^2 + 32*n3*n6^2 - 36*d*n3*n6^2 + 16*n3^2*n6^2 + 20*n6^3 - 
      10*d*n6^3 + 12*n3*n6^3 - 48*n6*n8 + 30*d*n6*n8 - 3*d^2*n6*n8 - 
      20*n3*n6*n8 + 2*d*n3*n6*n8 + 36*n6^2*n8 - 18*d*n6^2*n8 + 16*n3*n6^2*n8)*
     j[p4, 0, 0, n3, 0, 0, 1 + n6, 0, -1 + n8, 0, 1, 1, 0, 0, 1])/
    (2*(-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((-64*n6 + 112*d*n6 - 50*d^2*n6 + 5*d^3*n6 - 64*n3*n6 + 58*d*n3*n6 - 
      6*d^2*n3*n6 - 20*n3^2*n6 + 2*d*n3^2*n6 + 16*n6^2 - 54*d*n6^2 + 
      23*d^2*n6^2 + 32*n3*n6^2 - 36*d*n3*n6^2 + 16*n3^2*n6^2 + 20*n6^3 - 
      10*d*n6^3 + 12*n3*n6^3 - 48*n6*n8 + 30*d*n6*n8 - 3*d^2*n6*n8 - 
      20*n3*n6*n8 + 2*d*n3*n6*n8 + 36*n6^2*n8 - 18*d*n6^2*n8 + 16*n3*n6^2*n8)*
     j[p4, 0, 0, n3, 0, 0, 1 + n6, 0, -1 + n8, 0, 1, 1, 0, 1, 0])/
    (2*(-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((16*n3 - 40*d*n3 + 32*d^2*n3 - 8*d^3*n3 + 16*n3^2 - 29*d*n3^2 + 
      13*d^2*n3^2 + 6*n3^3 - 6*d*n3^3 + 20*n3*n6 - 30*d*n3*n6 + 
      10*d^2*n3*n6 + 20*n3^2*n6 - 17*d*n3^2*n6 + 6*n3^3*n6 + 4*n3*n6^2 - 
      2*d*n3*n6^2 + 4*n3^2*n6^2 + 12*n3*n8 - 18*d*n3*n8 + 6*d^2*n3*n8 + 
      6*n3^2*n8 - 6*d*n3^2*n8 + 12*n3*n6*n8 - 6*d*n3*n6*n8 + 6*n3^2*n6*n8)*
     j[p4, 0, 0, 1 + n3, -1, 0, n6, 0, n8, 0, 0, 1, 0, 1, 1])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((-16*n3 + 40*d*n3 - 32*d^2*n3 + 8*d^3*n3 - 16*n3^2 + 29*d*n3^2 - 
      13*d^2*n3^2 - 6*n3^3 + 6*d*n3^3 - 20*n3*n6 + 30*d*n3*n6 - 
      10*d^2*n3*n6 - 20*n3^2*n6 + 17*d*n3^2*n6 - 6*n3^3*n6 - 4*n3*n6^2 + 
      2*d*n3*n6^2 - 4*n3^2*n6^2 - 12*n3*n8 + 18*d*n3*n8 - 6*d^2*n3*n8 - 
      6*n3^2*n8 + 6*d*n3^2*n8 - 12*n3*n6*n8 + 6*d*n3*n6*n8 - 6*n3^2*n6*n8)*
     j[p4, 0, 0, 1 + n3, -1, 0, n6, 0, n8, 0, 1, 0, 0, 1, 1])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((-32*n3 + 80*d*n3 - 64*d^2*n3 + 16*d^3*n3 - 32*n3^2 + 58*d*n3^2 - 
      26*d^2*n3^2 - 12*n3^3 + 12*d*n3^3 - 40*n3*n6 + 60*d*n3*n6 - 
      20*d^2*n3*n6 - 40*n3^2*n6 + 34*d*n3^2*n6 - 12*n3^3*n6 - 8*n3*n6^2 + 
      4*d*n3*n6^2 - 8*n3^2*n6^2 - 24*n3*n8 + 36*d*n3*n8 - 12*d^2*n3*n8 - 
      12*n3^2*n8 + 12*d*n3^2*n8 - 24*n3*n6*n8 + 12*d*n3*n6*n8 - 
      12*n3^2*n6*n8)*j[p4, 0, 0, 1 + n3, -1, 0, n6, 0, n8, 0, 1, 1, 0, 0, 1])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((-16*n3 + 30*d*n3 - 11*d^2*n3 - 12*n3^2 + 6*d*n3^2 - 16*n3*n6 + 
      8*d*n3*n6 - 12*n3*n8 + 6*d*n3*n8)*j[p4, 0, 0, 1 + n3, 0, 0, n6, -1, n8, 
      0, 0, 1, 0, 1, 1])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 
      4*n3*n6)*(-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((16*n3 - 30*d*n3 + 11*d^2*n3 + 12*n3^2 - 6*d*n3^2 + 16*n3*n6 - 
      8*d*n3*n6 + 12*n3*n8 - 6*d*n3*n8)*j[p4, 0, 0, 1 + n3, 0, 0, n6, -1, n8, 
      0, 1, 0, 0, 1, 1])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 
      4*n3*n6)*(-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((48*n3 - 90*d*n3 + 33*d^2*n3 + 36*n3^2 - 18*d*n3^2 + 48*n3*n6 - 
      24*d*n3*n6 + 36*n3*n8 - 18*d*n3*n8)*j[p4, 0, 0, 1 + n3, 0, 0, n6, -1, 
      n8, 0, 1, 1, 0, 0, 1])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 
      6*d*n6 + 4*n3*n6)*(-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((-16*n3 + 40*d*n3 - 32*d^2*n3 + 8*d^3*n3 - 16*n3^2 + 29*d*n3^2 - 
      13*d^2*n3^2 - 6*n3^3 + 6*d*n3^3 - 20*n3*n6 + 30*d*n3*n6 - 
      10*d^2*n3*n6 - 20*n3^2*n6 + 17*d*n3^2*n6 - 6*n3^3*n6 - 4*n3*n6^2 + 
      2*d*n3*n6^2 - 4*n3^2*n6^2 - 12*n3*n8 + 18*d*n3*n8 - 6*d^2*n3*n8 - 
      6*n3^2*n8 + 6*d*n3^2*n8 - 12*n3*n6*n8 + 6*d*n3*n6*n8 - 6*n3^2*n6*n8)*
     j[p4, 0, 0, 1 + n3, 0, 0, n6, -1, n8, 0, 1, 1, 0, 1, 0])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((48*n3 - 90*d*n3 + 33*d^2*n3 + 36*n3^2 - 18*d*n3^2 + 48*n3*n6 - 
      24*d*n3*n6 + 36*n3*n8 - 18*d*n3*n8)*j[p4, 0, 0, 1 + n3, 0, 0, n6, 0, 
      -1 + n8, 0, 1, 1, 0, 0, 1])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 
      6*d*n6 + 4*n3*n6)*(-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((-48*n3 + 120*d*n3 - 96*d^2*n3 + 24*d^3*n3 - 48*n3^2 + 87*d*n3^2 - 
      39*d^2*n3^2 - 18*n3^3 + 18*d*n3^3 - 60*n3*n6 + 90*d*n3*n6 - 
      30*d^2*n3*n6 - 60*n3^2*n6 + 51*d*n3^2*n6 - 18*n3^3*n6 - 12*n3*n6^2 + 
      6*d*n3*n6^2 - 12*n3^2*n6^2 - 36*n3*n8 + 54*d*n3*n8 - 18*d^2*n3*n8 - 
      18*n3^2*n8 + 18*d*n3^2*n8 - 36*n3*n6*n8 + 18*d*n3*n6*n8 - 
      18*n3^2*n6*n8)*j[p4, 0, 0, 1 + n3, 0, 0, n6, 0, -1 + n8, 0, 1, 1, 0, 1, 
      0])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((-32*n3 + 60*d*n3 - 22*d^2*n3 - 24*n3^2 + 12*d*n3^2 - 32*n3*n6 + 
      16*d*n3*n6 - 24*n3*n8 + 12*d*n3*n8)*j[p4, 0, 0, 1 + n3, 0, 0, n6, 0, 
      n8, 0, 1, 1, -1, 0, 1])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 
      6*d*n6 + 4*n3*n6)*(-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((32*n3 - 80*d*n3 + 64*d^2*n3 - 16*d^3*n3 + 32*n3^2 - 58*d*n3^2 + 
      26*d^2*n3^2 + 12*n3^3 - 12*d*n3^3 + 40*n3*n6 - 60*d*n3*n6 + 
      20*d^2*n3*n6 + 40*n3^2*n6 - 34*d*n3^2*n6 + 12*n3^3*n6 + 8*n3*n6^2 - 
      4*d*n3*n6^2 + 8*n3^2*n6^2 + 24*n3*n8 - 36*d*n3*n8 + 12*d^2*n3*n8 + 
      12*n3^2*n8 - 12*d*n3^2*n8 + 24*n3*n6*n8 - 12*d*n3*n6*n8 + 
      12*n3^2*n6*n8)*j[p4, 0, 0, 1 + n3, 0, 0, n6, 0, n8, 0, 1, 1, -1, 1, 0])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)) + 
   ((16*n3 - 30*d*n3 + 11*d^2*n3 + 12*n3^2 - 6*d*n3^2 + 16*n3*n6 - 
      8*d*n3*n6 + 12*n3*n8 - 6*d*n3*n8)*j[p4, 0, 0, 1 + n3, 0, 0, n6, 0, n8, 
      0, 1, 1, 0, 0, 1])/((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 
      4*n3*n6)*(-4 + 3*d - 2*n3 - n6 - n8)) + 
   ((-16*n3 + 40*d*n3 - 32*d^2*n3 + 8*d^3*n3 - 16*n3^2 + 29*d*n3^2 - 
      13*d^2*n3^2 - 6*n3^3 + 6*d*n3^3 - 20*n3*n6 + 30*d*n3*n6 - 
      10*d^2*n3*n6 - 20*n3^2*n6 + 17*d*n3^2*n6 - 6*n3^3*n6 - 4*n3*n6^2 + 
      2*d*n3*n6^2 - 4*n3^2*n6^2 - 12*n3*n8 + 18*d*n3*n8 - 6*d^2*n3*n8 - 
      6*n3^2*n8 + 6*d*n3^2*n8 - 12*n3*n6*n8 + 6*d*n3*n6*n8 - 6*n3^2*n6*n8)*
     j[p4, 0, 0, 1 + n3, 0, 0, n6, 0, n8, 0, 1, 1, 0, 1, 0])/
    ((-6*d + 3*d^2 + 4*n3 - 4*d*n3 + 12*n6 - 6*d*n6 + 4*n3*n6)*
     (-4*d + 3*d^2 + 4*n3 - 5*d*n3 + 2*n3^2 + 4*n6 - 4*d*n6 + 3*n3*n6 + 
      n6^2 + 4*n8 - 4*d*n8 + 3*n3*n8 + 2*n6*n8 + n8^2)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n4 == 0 && n5 == 0 && n7 == 0 && n8 == 1 && n9 == 0 && 
     !(n11 == 1 || n6 == 1) -> 
  ((-2*n11 + 2*d*n11 - 2*n11*n6)*j[p4, -1, 0, n3, 0, 0, n6, 0, 0, 0, 1, 
      1 + n11, 0, 1, 1])/((4 - 3*d + n11 + 2*n3 + n6)*(-d + 2*n3 + 2*n6)) + 
   ((1 - 2*d + 2*n3 + 3*n6)*j[p4, -1, 0, n3, 0, 0, n6, 0, 0, 0, 2, n11, 0, 1, 
      1])/((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((2*n11 - 6*d*n11 + 3*d^2*n11 + 6*n11^2 - 3*d*n11^2 + 4*n11*n3 - 
      4*d*n11*n3 - 2*n11^2*n3 + 2*n11*n3^2 + 2*n11*n6 - 3*d*n11*n6 + 
      6*n11*n3*n6 + 2*n11*n6^2)*j[p4, -1, 0, n3, 0, 0, n6, 0, 1, 0, 0, 
      1 + n11, 0, 1, 1])/(2*(-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*
     (-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((1 - d + n6)*j[p4, -1, 0, n3, 0, 0, n6, 0, 1, 0, 1, n11, 0, 2, 0])/
    ((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((1 - 2*d + 2*n3 + 3*n6)*j[p4, -1, 0, n3, 0, 0, n6, 0, 1, 0, 2, n11, 0, 0, 
      1])/((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((n3 - d*n3 + n11*n3 - n3^2 + d*n3^2 - n11*n3^2 - n3*n6 + d*n3*n6 - 
      n11*n3*n6)*j[p4, -1, 0, 1 + n3, 0, 0, n6, 0, 1, 0, 1, n11, 0, 0, 1])/
    ((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-n3 + d*n3 - n3*n6)*j[p4, -1, 0, 1 + n3, 0, 0, n6, 0, 1, 0, 1, n11, 0, 
      1, 0])/((4 - 3*d + n11 + 2*n3 + n6)*(-d + 2*n3 + 2*n6)) + 
   ((2*n11 - 2*d*n11 + 2*n11*n6)*j[p4, 0, -1, n3, 0, 0, n6, 0, 0, 0, 1, 
      1 + n11, 0, 1, 1])/((4 - 3*d + n11 + 2*n3 + n6)*(-d + 2*n3 + 2*n6)) + 
   ((-1 + 2*d - 2*n3 - 3*n6)*j[p4, 0, -1, n3, 0, 0, n6, 0, 0, 0, 2, n11, 0, 
      1, 1])/((4 - 3*d + n11 + 2*n3 + n6)*(-d + 2*n3 + 2*n6)) + 
   ((d - d^2 - n11 + 2*d*n11 - n11^2 - 2*n3 + 2*d*n3 - 2*n11*n3 - n6 + d*n6 - 
      n11*n6)*j[p4, 0, -1, n3, 0, 0, n6, 0, 1, 0, 1, n11, 0, 0, 2])/
    ((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-1 + 2*d - 2*n3 - 3*n6)*j[p4, 0, -1, n3, 0, 0, n6, 0, 1, 0, 2, n11, 0, 
      0, 1])/((4 - 3*d + n11 + 2*n3 + n6)*(-d + 2*n3 + 2*n6)) + 
   ((1 - d + n11 - n3 + d*n3 - n11*n3 - n6 + d*n6 - n11*n6)*
     j[p4, 0, -1, n3, 0, 0, n6, 0, 2, 0, 1, n11, 0, 0, 1])/
    ((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((2*n6 - 2*d*n6 + 2*n11*n6 + n3*n6)*j[p4, 0, -1, n3, 0, 0, 1 + n6, 0, 0, 
      0, 1, n11, 0, 1, 1])/((4 - 3*d + n11 + 2*n3 + n6)*(-d + 2*n3 + 2*n6)) + 
   ((n6 - d*n6 + n11*n6 - n3*n6 + d*n3*n6 - n11*n3*n6 - n6^2 + d*n6^2 - 
      n11*n6^2)*j[p4, 0, -1, n3, 0, 0, 1 + n6, 0, 1, 0, 0, n11, 0, 1, 1])/
    ((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((n6 - d*n6 + n11*n6)*j[p4, 0, -1, n3, 0, 0, 1 + n6, 0, 1, 0, 1, n11, 0, 
      0, 1])/((4 - 3*d + n11 + 2*n3 + n6)*(-d + 2*n3 + 2*n6)) + 
   ((n6 - d*n6 + n11*n6)*j[p4, 0, -1, n3, 0, 0, 1 + n6, 0, 1, 0, 1, n11, 0, 
      1, 0])/((4 - 3*d + n11 + 2*n3 + n6)*(-d + 2*n3 + 2*n6)) + 
   ((n3 - d*n3 + n11*n3 - n3^2 + d*n3^2 - n11*n3^2 - n3*n6 + d*n3*n6 - 
      n11*n3*n6)*j[p4, 0, -1, 1 + n3, 0, 0, n6, 0, 1, 0, 1, n11, 0, 0, 1])/
    ((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-n3 + d*n3 - n3*n6)*j[p4, 0, -1, 1 + n3, 0, 0, n6, 0, 1, 0, 1, n11, 0, 
      1, 0])/((4 - 3*d + n11 + 2*n3 + n6)*(-d + 2*n3 + 2*n6)) + 
   ((-3 + 6*d - 3*d^2 - 4*n11 + 4*d*n11 - n11^2 - 4*n3 + 5*d*n3 - 3*n11*n3 - 
      3*n3^2 - 2*n6 + 2*d*n6 - 2*n11*n6 - 3*n3*n6)*j[p4, 0, 0, -1 + n3, 0, 0, 
      n6, 0, 0, 0, 1, n11, 0, 1, 2])/((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*
     (-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-6 + 6*d - d^2 - 2*n11 + d*n11 + 4*n3 - 4*d*n3 + 2*n11*n3 + 2*n3^2 + 
      2*n6 - 3*d*n6 + 2*n3*n6 + 2*n6^2)*j[p4, 0, 0, -1 + n3, 0, 0, n6, 0, 0, 
      0, 1, n11, 0, 2, 1])/(2*(-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*
     (-4 + 3*d - n11 - 2*n3 - n6)) + ((3 - 4*d + 2*n11 + 3*n3 + 3*n6)*
     j[p4, 0, 0, -1 + n3, 0, 0, n6, 0, 1, 0, 1, n11, 0, 0, 2])/
    ((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-16*d + 24*d^2 - 9*d^3 + 4*n11 - 12*d*n11 + 7*d^2*n11 - 4*n11^2 + 
      2*d*n11^2 + 32*n3 - 64*d*n3 + 30*d^2*n3 + 24*n11*n3 - 20*d*n11*n3 + 
      4*n11^2*n3 + 32*n3^2 - 28*d*n3^2 + 8*n11*n3^2 + 8*n3^3 + 28*n6 - 
      52*d*n6 + 23*d^2*n6 + 24*n11*n6 - 20*d*n11*n6 + 40*n3*n6 - 36*d*n3*n6 + 
      8*n11*n3*n6 + 16*n3^2*n6 + 12*n6^2 - 10*d*n6^2 + 8*n11*n6^2 + 
      12*n3*n6^2)*j[p4, 0, 0, -1 + n3, 0, 0, n6, 0, 1, 0, 1, n11, 0, 1, 1])/
    (2*(-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((n6 - d*n6 + n11*n6 + n3*n6)*j[p4, 0, 0, -1 + n3, 0, 0, 1 + n6, 0, 0, 0, 
      1, n11, 0, 1, 1])/((4 - 3*d + n11 + 2*n3 + n6)*(-d + 2*n3 + 2*n6)) + 
   ((3 - 6*d + 3*d^2 + 4*n11 - 4*d*n11 + n11^2 + 4*n3 - 5*d*n3 + 3*n11*n3 + 
      3*n3^2 + 2*n6 - 2*d*n6 + 2*n11*n6 + 3*n3*n6)*j[p4, 0, 0, n3, -1, 0, n6, 
      0, 0, 0, 1, n11, 0, 1, 2])/((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*
     (-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((2*n11 - 2*d*n11 + 2*n11*n6)*j[p4, 0, 0, n3, -1, 0, n6, 0, 0, 0, 1, 
      1 + n11, 0, 1, 1])/((4 - 3*d + n11 + 2*n3 + n6)*(-d + 2*n3 + 2*n6)) + 
   ((3 - 6*d + 3*d^2 + 4*n11 - 4*d*n11 + n11^2 + 4*n3 - 5*d*n3 + 3*n11*n3 + 
      3*n3^2 + 2*n6 - 2*d*n6 + 2*n11*n6 + 3*n3*n6)*j[p4, 0, 0, n3, -1, 0, n6, 
      0, 1, 0, 1, n11, 0, 0, 2])/((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*
     (-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((1 - d + n6)*j[p4, 0, 0, n3, -1, 0, n6, 0, 2, 0, 1, n11, 0, 0, 1])/
    ((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-n6 + d*n6 - n11*n6 - n3*n6)*j[p4, 0, 0, n3, -1, 0, 1 + n6, 0, 0, 0, 1, 
      n11, 0, 1, 1])/((4 - 3*d + n11 + 2*n3 + n6)*(-d + 2*n3 + 2*n6)) + 
   ((2*n6 - 4*d*n6 + 2*d^2*n6 + 2*n11*n6 - 2*d*n11*n6 + 2*n3*n6 - 3*d*n3*n6 + 
      n11*n3*n6 + 2*n3^2*n6 + 2*n6^2 - 2*d*n6^2 + 2*n11*n6^2 + 3*n3*n6^2)*
     j[p4, 0, 0, n3, -1, 0, 1 + n6, 0, 1, 0, 0, n11, 0, 1, 1])/
    ((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-n6 + d*n6 - n11*n6 - n3*n6)*j[p4, 0, 0, n3, -1, 0, 1 + n6, 0, 1, 0, 1, 
      n11, 0, 0, 1])/((4 - 3*d + n11 + 2*n3 + n6)*(-d + 2*n3 + 2*n6)) + 
   ((-n6 + d*n6 - n11*n6 - n3*n6)*j[p4, 0, 0, n3, -1, 0, 1 + n6, 0, 1, 0, 1, 
      n11, 0, 1, 0])/((4 - 3*d + n11 + 2*n3 + n6)*(-d + 2*n3 + 2*n6)) + 
   ((-d + d^2 + n11 - 2*d*n11 + n11^2 + 2*n3 - 2*d*n3 + 2*n11*n3 + n6 - 
      d*n6 + n11*n6)*j[p4, 0, 0, n3, 0, -1, n6, 0, 0, 0, 1, n11, 0, 1, 2])/
    ((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-2*n11 + 2*d*n11 - 2*n11*n6)*j[p4, 0, 0, n3, 0, -1, n6, 0, 0, 0, 1, 
      1 + n11, 0, 1, 1])/((4 - 3*d + n11 + 2*n3 + n6)*(-d + 2*n3 + 2*n6)) + 
   ((-d + d^2 + n11 - 2*d*n11 + n11^2 + 2*n3 - 2*d*n3 + 2*n11*n3 + n6 - 
      d*n6 + n11*n6)*j[p4, 0, 0, n3, 0, -1, n6, 0, 1, 0, 1, n11, 0, 0, 2])/
    ((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-n6 + d*n6 - n11*n6)*j[p4, 0, 0, n3, 0, -1, 1 + n6, 0, 0, 0, 1, n11, 0, 
      1, 1])/((4 - 3*d + n11 + 2*n3 + n6)*(-d + 2*n3 + 2*n6)) + 
   ((-n6 + d*n6 - n11*n6 + n3*n6 - d*n3*n6 + n11*n3*n6 + n6^2 - d*n6^2 + 
      n11*n6^2)*j[p4, 0, 0, n3, 0, -1, 1 + n6, 0, 1, 0, 0, n11, 0, 1, 1])/
    ((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-n6 + d*n6 - n11*n6)*j[p4, 0, 0, n3, 0, -1, 1 + n6, 0, 1, 0, 1, n11, 0, 
      0, 1])/((4 - 3*d + n11 + 2*n3 + n6)*(-d + 2*n3 + 2*n6)) + 
   ((-n6 + d*n6 - n11*n6)*j[p4, 0, 0, n3, 0, -1, 1 + n6, 0, 1, 0, 1, n11, 0, 
      1, 0])/((4 - 3*d + n11 + 2*n3 + n6)*(-d + 2*n3 + 2*n6)) + 
   ((-2*n11 + 2*d*n11 - 2*n11*n6)*j[p4, 0, 0, n3, 0, 0, -1 + n6, 0, 0, 0, 1, 
      1 + n11, 0, 1, 1])/((4 - 3*d + n11 + 2*n3 + n6)*(-d + 2*n3 + 2*n6)) + 
   ((1 - d + n6)*j[p4, 0, 0, n3, 0, 0, -1 + n6, 0, 0, 0, 2, n11, 0, 1, 1])/
    ((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-d + d^2 + n11 - 2*d*n11 + n11^2 + 2*n3 - 2*d*n3 + 2*n11*n3 + n6 - 
      d*n6 + n11*n6)*j[p4, 0, 0, n3, 0, 0, -1 + n6, 0, 1, 0, 1, n11, 0, 0, 
      2])/((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - 
      n6)) + ((2 - 6*d + 6*d^2 - 2*d^3 - 2*n11 + 3*d*n11 - d^2*n11 + 8*n3 - 
      14*d*n3 + 6*d^2*n3 + 2*n11*n3 - 2*d*n11*n3 + 2*n3^2 - 2*d*n3^2 + 8*n6 - 
      15*d*n6 + 7*d^2*n6 - 2*n11*n6 + d*n11*n6 + 10*n3*n6 - 8*d*n3*n6 + 
      2*n11*n3*n6 + 2*n3^2*n6 + 8*n6^2 - 7*d*n6^2 + 2*n3*n6^2 + 2*n6^3)*
     j[p4, 0, 0, n3, 0, 0, -1 + n6, 0, 1, 0, 1, n11, 0, 1, 1])/
    ((-1 + n6)*(4 - 3*d + n11 + 2*n3 + n6)*(-d + 2*n3 + 2*n6)) + 
   ((1 - d + n6)*j[p4, 0, 0, n3, 0, 0, -1 + n6, 0, 1, 0, 2, n11, 0, 0, 1])/
    ((d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-1 + d - n6)*j[p4, 0, 0, n3, 0, 0, -1 + n6, 0, 2, 0, 1, n11, 0, 0, 1])/
    ((4 - 3*d + n11 + 2*n3 + n6)*(-d + 2*n3 + 2*n6)) + 
   ((6 - 6*d + d^2 + 2*n11 - d*n11 - 4*n3 + 4*d*n3 - 2*n11*n3 - 2*n3^2 - 
      2*n6 + 3*d*n6 - 2*n3*n6 - 2*n6^2)*j[p4, 0, 0, n3, 0, 0, n6, -1, 0, 0, 
      1, n11, 0, 2, 1])/(2*(-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*
     (-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((2*n11 - 2*d*n11 + d^2*n11 - 2*n11^2 - d*n11^2 + 2*n11^2*n3 - 
      2*n11*n3^2 + 2*n11*n6 - d*n11*n6 + 4*n11^2*n6 - 2*n11*n3*n6 - 
      2*n11*n6^2)*j[p4, 0, 0, n3, 0, 0, n6, -1, 0, 0, 1, 1 + n11, 0, 1, 1])/
    (2*(-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-2 + 4*d - 2*d^2 - 2*n11 + 2*d*n11 - 2*n3 + 3*d*n3 - n11*n3 - 2*n3^2 - 
      2*n6 + 2*d*n6 - 2*n11*n6 - 3*n3*n6)*j[p4, 0, 0, n3, 0, 0, n6, -1, 0, 0, 
      2, n11, 0, 1, 1])/((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*
     (-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-d + d^2 + n11 - 2*d*n11 + n11^2 + 2*n3 - 2*d*n3 + 2*n11*n3 + n6 - 
      d*n6 + n11*n6)*j[p4, 0, 0, n3, 0, 0, n6, -1, 1, 0, 1, n11, 0, 0, 2])/
    ((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-2 + 4*d - 2*d^2 - 2*n11 + 2*d*n11 - 2*n3 + 3*d*n3 - n11*n3 - 2*n3^2 - 
      2*n6 + 2*d*n6 - 2*n11*n6 - 3*n3*n6)*j[p4, 0, 0, n3, 0, 0, n6, -1, 1, 0, 
      2, n11, 0, 0, 1])/((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*
     (-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-1 + d - n11 + n3 - d*n3 + n11*n3 + n6 - d*n6 + n11*n6)*
     j[p4, 0, 0, n3, 0, 0, n6, -1, 2, 0, 1, n11, 0, 0, 1])/
    ((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((2*n11 - 2*d*n11 + 2*n11*n6)*j[p4, 0, 0, n3, 0, 0, n6, 0, 0, -1, 1, 
      1 + n11, 0, 1, 1])/((4 - 3*d + n11 + 2*n3 + n6)*(-d + 2*n3 + 2*n6)) + 
   ((-1 + d - n6)*j[p4, 0, 0, n3, 0, 0, n6, 0, 0, -1, 2, n11, 0, 1, 1])/
    ((4 - 3*d + n11 + 2*n3 + n6)*(-d + 2*n3 + 2*n6)) + 
   ((16 - 32*d + 23*d^2 - 7*d^3 + 14*n11 - 15*d*n11 + 8*d^2*n11 - 2*n11^2 - 
      d*n11^2 - 8*d*n3 + 8*d^2*n3 - 6*n11*n3 - 4*d*n11*n3 + 2*n11^2*n3 + 
      4*n3^2 - 2*d*n3^2 - 4*n3^3 + 18*n6 - 39*d*n6 + 21*d^2*n6 + 24*n11*n6 - 
      27*d*n11*n6 + 6*n11^2*n6 + 28*n3*n6 - 28*d*n3*n6 + 10*n11*n3*n6 + 
      6*n3^2*n6 + 10*n6^2 - 10*d*n6^2 + 10*n11*n6^2 + 14*n3*n6^2)*
     j[p4, 0, 0, n3, 0, 0, n6, 0, 0, 0, 1, n11, 0, 1, 1])/
    (2*(-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) - 
   (n11*j[p4, 0, 0, n3, 0, 0, n6, 0, 0, 0, 1, 1 + n11, -1, 1, 1])/
    (4 - 3*d + n11 + 2*n3 + n6) + 
   (n11*j[p4, 0, 0, n3, 0, 0, n6, 0, 0, 0, 1, 1 + n11, 0, 1, 1])/
    (4 - 3*d + n11 + 2*n3 + n6) + 
   ((2 - 4*d + 2*d^2 + 2*n11 - 2*d*n11 + 2*n3 - 3*d*n3 + n11*n3 + 2*n3^2 + 
      2*n6 - 2*d*n6 + 2*n11*n6 + 3*n3*n6)*j[p4, 0, 0, n3, 0, 0, n6, 0, 0, 0, 
      2, -1 + n11, 0, 1, 1])/((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*
     (-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((1 - d + n11 - n3 + d*n3 - n11*n3 - n6 + d*n6 - n11*n6)*
     j[p4, 0, 0, n3, 0, 0, n6, 0, 1, -1, 1, n11, 0, 0, 2])/
    ((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-1 + d - n6)*j[p4, 0, 0, n3, 0, 0, n6, 0, 1, -1, 2, n11, 0, 0, 1])/
    ((4 - 3*d + n11 + 2*n3 + n6)*(-d + 2*n3 + 2*n6)) + 
   ((-4 + 7*d - 3*d^2 - 6*n11 + 6*d*n11 - d^2*n11 - 2*n11^2 + d*n11^2 - 
      d*n3 + 2*d^2*n3 + 2*n11*n3 - 2*d*n11*n3 + n11^2*n3 - 3*d*n3^2 + 
      n11*n3^2 + 2*n3^3 - n6 + d^2*n6 - n11*n6 - d*n11*n6 - n3*n6 - 
      3*d*n3*n6 + n11*n3*n6 + 3*n3^2*n6 + n6^2 - d*n6^2 + n11*n6^2 + n3*n6^2)*
     j[p4, 0, 0, n3, 0, 0, n6, 0, 1, 0, 0, n11, 0, 1, 1])/
    ((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-2*n11 + d^2*n11 + 2*n11^2 - d*n11^2 + 4*n11*n3 - 4*d*n11*n3 + 
      2*n11*n3^2 + 2*n11*n6 - 3*d*n11*n6 + 4*n11*n3*n6 + 2*n11*n6^2)*
     j[p4, 0, 0, n3, 0, 0, n6, 0, 1, 0, 0, 1 + n11, -1, 1, 1])/
    (2*(-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((2*n11 - d^2*n11 - 2*n11^2 + d*n11^2 - 4*n11*n3 + 4*d*n11*n3 - 
      2*n11*n3^2 - 2*n11*n6 + 3*d*n11*n6 - 4*n11*n3*n6 - 2*n11*n6^2)*
     j[p4, 0, 0, n3, 0, 0, n6, 0, 1, 0, 0, 1 + n11, 0, 1, 1])/
    (2*(-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((4 + 8*d - 38*d^2 + 37*d^3 - 11*d^4 + 36*d*n11 - 59*d^2*n11 + 
      24*d^3*n11 - 4*n11^2 + 22*d*n11^2 - 15*d^2*n11^2 + 2*d*n11^3 - 28*n3 + 
      96*d*n3 - 104*d^2*n3 + 36*d^3*n3 - 56*n11*n3 + 124*d*n11*n3 - 
      64*d^2*n11*n3 - 32*n11^2*n3 + 32*d*n11^2*n3 - 4*n11^3*n3 - 36*n3^2 + 
      72*d*n3^2 - 36*d^2*n3^2 - 48*n11*n3^2 + 48*d*n11*n3^2 - 12*n11^2*n3^2 - 
      12*n3^3 + 12*d*n3^3 - 12*n11*n3^3 - 32*n6 + 92*d*n6 - 87*d^2*n6 + 
      27*d^3*n6 - 64*n11*n6 + 120*d*n11*n6 - 55*d^2*n11*n6 - 36*n11^2*n6 + 
      32*d*n11^2*n6 - 4*n11^3*n6 - 52*n3*n6 + 100*d*n3*n6 - 48*d^2*n3*n6 - 
      72*n11*n3*n6 + 68*d*n11*n3*n6 - 20*n11^2*n3*n6 - 24*n3^2*n6 + 
      24*d*n3^2*n6 - 24*n11*n3^2*n6 - 12*n6^2 + 22*d*n6^2 - 10*d^2*n6^2 - 
      20*n11*n6^2 + 18*d*n11*n6^2 - 8*n11^2*n6^2 - 12*n3*n6^2 + 
      12*d*n3*n6^2 - 12*n11*n3*n6^2)*j[p4, 0, 0, n3, 0, 0, n6, 0, 1, 0, 1, 
      -1 + n11, 0, 1, 1])/(2*(-1 + n11)*(1 - d + n11 + n3)*(d - 2*n3 - 2*n6)*
     (4 - 3*d + n11 + 2*n3 + n6)) + 
   ((d - d^2 - n11 + 2*d*n11 - n11^2 - 2*n3 + 2*d*n3 - 2*n11*n3 - n6 + d*n6 - 
      n11*n6)*j[p4, 0, 0, n3, 0, 0, n6, 0, 1, 0, 1, n11, -1, 0, 2])/
    ((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((2 - 2*d - 2*d^2 + 2*d^3 + 5*n11 - 4*d*n11 - d^2*n11 + 3*n11^2 - 
      d*n11^2 - 6*n3 + 18*d*n3 - 12*d^2*n3 - 7*n11*n3 + 11*d*n11*n3 - 
      2*n11^2*n3 - 12*n3^2 + 15*d*n3^2 - 7*n11*n3^2 - 6*n3^3 - 5*n6 + 
      11*d*n6 - 6*d^2*n6 - 5*n11*n6 + 6*d*n11*n6 - 13*n3*n6 + 14*d*n3*n6 - 
      8*n11*n3*n6 - 9*n3^2*n6 - 2*n6^2 + 2*d*n6^2 - 2*n11*n6^2 - 2*n3*n6^2)*
     j[p4, 0, 0, n3, 0, 0, n6, 0, 1, 0, 1, n11, 0, 0, 1])/
    ((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-1 + d - n11 + n3 - d*n3 + n11*n3 + n6 - d*n6 + n11*n6)*
     j[p4, 0, 0, n3, 0, 0, n6, 0, 1, 0, 1, n11, 0, 0, 2])/
    ((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((3 - 6*d + 2*d^2 + d*n11 + 7*n3 - 5*d*n3 + 2*n11*n3 + 2*n3^2 + 9*n6 - 
      6*d*n6 + 2*n3*n6 + 2*n6^2)*j[p4, 0, 0, n3, 0, 0, n6, 0, 1, 0, 1, n11, 
      0, 1, 0])/((4 - 3*d + n11 + 2*n3 + n6)*(-d + 2*n3 + 2*n6)) + 
   ((-1 + d - n6)*j[p4, 0, 0, n3, 0, 0, n6, 0, 1, 0, 1, n11, 0, 2, 0])/
    ((4 - 3*d + n11 + 2*n3 + n6)*(-d + 2*n3 + 2*n6)) + 
   ((2 - 4*d + 2*d^2 + 2*n11 - 2*d*n11 + 2*n3 - 3*d*n3 + n11*n3 + 2*n3^2 + 
      2*n6 - 2*d*n6 + 2*n11*n6 + 3*n3*n6)*j[p4, 0, 0, n3, 0, 0, n6, 0, 1, 0, 
      2, -1 + n11, 0, 0, 1])/((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*
     (-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-n6 + d*n6 - n11*n6 - n3*n6)*j[p4, 0, 0, n3, 0, 0, 1 + n6, -1, 0, 0, 1, 
      n11, 0, 1, 1])/((4 - 3*d + n11 + 2*n3 + n6)*(-d + 2*n3 + 2*n6)) + 
   ((-2*n6 + 4*d*n6 - 2*d^2*n6 - 2*n11*n6 + 2*d*n11*n6 - 2*n3*n6 + 
      3*d*n3*n6 - n11*n3*n6 - 2*n3^2*n6 - 2*n6^2 + 2*d*n6^2 - 2*n11*n6^2 - 
      3*n3*n6^2)*j[p4, 0, 0, n3, 0, 0, 1 + n6, 0, 0, -1, 1, n11, 0, 1, 1])/
    ((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((n6 - d*n6 + n11*n6 + n3*n6)*j[p4, 0, 0, n3, 0, 0, 1 + n6, 0, 0, 0, 1, 
      n11, -1, 1, 1])/((4 - 3*d + n11 + 2*n3 + n6)*(-d + 2*n3 + 2*n6)) + 
   ((3*n3 - 3*d*n3 + 3*n3*n6)*j[p4, 0, 0, 1 + n3, -1, 0, n6, 0, 0, 0, 1, n11, 
      0, 1, 1])/((4 - 3*d + n11 + 2*n3 + n6)*(-d + 2*n3 + 2*n6)) + 
   ((-n3 + d*n3 - n3*n6)*j[p4, 0, 0, 1 + n3, -1, 0, n6, 0, 1, 0, 0, n11, 0, 
      1, 1])/((4 - 3*d + n11 + 2*n3 + n6)*(-d + 2*n3 + 2*n6)) + 
   ((2*n3 - 2*d*n3 + 2*n3*n6)*j[p4, 0, 0, 1 + n3, -1, 0, n6, 0, 1, 0, 1, n11, 
      0, 0, 1])/((4 - 3*d + n11 + 2*n3 + n6)*(-d + 2*n3 + 2*n6)) + 
   ((-3*n3 + 3*d*n3 - 3*n11*n3 + 3*n3^2 - 3*d*n3^2 + 3*n11*n3^2 + 3*n3*n6 - 
      3*d*n3*n6 + 3*n11*n3*n6)*j[p4, 0, 0, 1 + n3, 0, 0, n6, -1, 0, 0, 1, 
      n11, 0, 1, 1])/((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*
     (-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((n3 - d*n3 + n11*n3 - n3^2 + d*n3^2 - n11*n3^2 - n3*n6 + d*n3*n6 - 
      n11*n3*n6)*j[p4, 0, 0, 1 + n3, 0, 0, n6, -1, 1, 0, 0, n11, 0, 1, 1])/
    ((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-3*n3 + 3*d*n3 - 3*n11*n3 + 3*n3^2 - 3*d*n3^2 + 3*n11*n3^2 + 3*n3*n6 - 
      3*d*n3*n6 + 3*n11*n3*n6)*j[p4, 0, 0, 1 + n3, 0, 0, n6, -1, 1, 0, 1, 
      n11, 0, 0, 1])/((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*
     (-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((n3 - d*n3 + n3*n6)*j[p4, 0, 0, 1 + n3, 0, 0, n6, -1, 1, 0, 1, n11, 0, 1, 
      0])/((4 - 3*d + n11 + 2*n3 + n6)*(-d + 2*n3 + 2*n6)) + 
   ((-n3 + d*n3 - n11*n3 + n3^2 - d*n3^2 + n11*n3^2 + n3*n6 - d*n3*n6 + 
      n11*n3*n6)*j[p4, 0, 0, 1 + n3, 0, 0, n6, 0, 1, 0, 1, -1 + n11, 0, 0, 
      1])/((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - 
      n6)) + ((n3 - d*n3 + n3*n6)*j[p4, 0, 0, 1 + n3, 0, 0, n6, 0, 1, 0, 1, 
      -1 + n11, 0, 1, 0])/((4 - 3*d + n11 + 2*n3 + n6)*(-d + 2*n3 + 2*n6)) + 
   ((2*n3 - 2*d*n3 + 2*n11*n3 - 2*n3^2 + 2*d*n3^2 - 2*n11*n3^2 - 2*n3*n6 + 
      2*d*n3*n6 - 2*n11*n3*n6)*j[p4, 0, 0, 1 + n3, 0, 0, n6, 0, 1, 0, 1, n11, 
      -1, 0, 1])/((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*
     (-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((-2*n3 + 2*d*n3 - 2*n3*n6)*j[p4, 0, 0, 1 + n3, 0, 0, n6, 0, 1, 0, 1, n11, 
      -1, 1, 0])/((4 - 3*d + n11 + 2*n3 + n6)*(-d + 2*n3 + 2*n6)) + 
   ((-n3 + d*n3 - n11*n3 + n3^2 - d*n3^2 + n11*n3^2 + n3*n6 - d*n3*n6 + 
      n11*n3*n6)*j[p4, 0, 0, 1 + n3, 0, 0, n6, 0, 1, 0, 1, n11, 0, 0, 1])/
    ((-1 + d - n11 - n3)*(d - 2*n3 - 2*n6)*(-4 + 3*d - n11 - 2*n3 - n6)) + 
   ((n3 - d*n3 + n3*n6)*j[p4, 0, 0, 1 + n3, 0, 0, n6, 0, 1, 0, 1, n11, 0, 1, 
      0])/((4 - 3*d + n11 + 2*n3 + n6)*(-d + 2*n3 + 2*n6)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n4 == 0 && n5 == 0 && n7 == 0 && n8 == 1 && n9 == 0 && 
     !(n1 == 0 || n6 == 1) -> 
  ((80 - 180*d + 130*d^2 - 30*d^3 + 16*n1 - 28*d*n1 + 12*d^2*n1 + 76*n3 - 
      118*d*n3 + 42*d^2*n3 + 12*n1*n3 - 12*d*n1*n3 + 12*n3^2 - 12*d*n3^2 + 
      136*n6 - 188*d*n6 + 62*d^2*n6 + 24*n1*n6 - 20*d*n1*n6 + 96*n3*n6 - 
      62*d*n3*n6 + 12*n1*n3*n6 + 12*n3^2*n6 + 64*n6^2 - 40*d*n6^2 + 
      8*n1*n6^2 + 20*n3*n6^2 + 8*n6^3)*j[p4, n1, 0, n3, 0, 0, n6, 0, 0, 0, 1, 
      2, 0, 1, 1])/((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 
      60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 
      49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 
      200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((20 - 24*d + 5*d^2 + d^3 + 24*n1 - 26*d*n1 + 
      7*d^2*n1 + 4*n1^2 - 2*d*n1^2 - 6*n3 + 11*d*n3 - 5*d^2*n3 + 2*n1*n3 - 
      2*d*n1*n3 - 2*n3^2 + 2*d*n3^2 + 12*n6 + 2*d*n6 - 4*d^2*n6 + 12*n1*n6 - 
      6*d*n1*n6 - 8*n3*n6 + 7*d*n3*n6 + 2*n1*n3*n6 - 2*n3^2*n6 - 8*n6^2 + 
      4*d*n6^2 - 2*n3*n6^2)*j[p4, n1, 0, n3, 0, 0, n6, 0, 0, 0, 2, 1, 0, 1, 
      1])/((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((80 - 156*d + 104*d^2 - 24*d^3 + 16*n1 - 20*d*n1 + 6*d^2*n1 + 76*n3 - 
      100*d*n3 + 36*d^2*n3 + 12*n1*n3 - 6*d*n1*n3 + 12*n3^2 - 12*d*n3^2 + 
      88*n6 - 124*d*n6 + 46*d^2*n6 + 8*n1*n6 - 4*d*n1*n6 + 60*n3*n6 - 
      50*d*n3*n6 + 12*n3^2*n6 + 40*n6^2 - 32*d*n6^2 + 20*n3*n6^2 + 8*n6^3)*
     j[p4, n1, 0, n3, 0, 0, n6, 0, 1, 0, 0, 2, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((-40 + 90*d - 65*d^2 + 15*d^3 - 8*n1 + 14*d*n1 - 6*d^2*n1 - 38*n3 + 
      59*d*n3 - 21*d^2*n3 - 6*n1*n3 + 6*d*n1*n3 - 6*n3^2 + 6*d*n3^2 - 68*n6 + 
      94*d*n6 - 31*d^2*n6 - 12*n1*n6 + 10*d*n1*n6 - 48*n3*n6 + 31*d*n3*n6 - 
      6*n1*n3*n6 - 6*n3^2*n6 - 32*n6^2 + 20*d*n6^2 - 4*n1*n6^2 - 10*n3*n6^2 - 
      4*n6^3)*j[p4, n1, 0, n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 2, 0])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((20 - 24*d + 5*d^2 + d^3 + 24*n1 - 26*d*n1 + 
      7*d^2*n1 + 4*n1^2 - 2*d*n1^2 - 6*n3 + 11*d*n3 - 5*d^2*n3 + 2*n1*n3 - 
      2*d*n1*n3 - 2*n3^2 + 2*d*n3^2 + 12*n6 + 2*d*n6 - 4*d^2*n6 + 12*n1*n6 - 
      6*d*n1*n6 - 8*n3*n6 + 7*d*n3*n6 + 2*n1*n3*n6 - 2*n3^2*n6 - 8*n6^2 + 
      4*d*n6^2 - 2*n3*n6^2)*j[p4, n1, 0, n3, 0, 0, n6, 0, 1, 0, 2, 1, 0, 0, 
      1])/((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((60*n3 - 214*d*n3 + 274*d^2*n3 - 149*d^3*n3 + 
      29*d^4*n3 + 32*n1*n3 - 80*d*n1*n3 + 67*d^2*n1*n3 - 19*d^3*n1*n3 + 
      4*n1^2*n3 - 6*d*n1^2*n3 + 2*d^2*n1^2*n3 + 112*n3^2 - 298*d*n3^2 + 
      253*d^2*n3^2 - 67*d^3*n3^2 + 24*n1*n3^2 - 50*d*n1*n3^2 + 
      26*d^2*n1*n3^2 + 80*n3^3 - 132*d*n3^3 + 52*d^2*n3^3 + 12*n1*n3^3 - 
      12*d*n1*n3^3 + 12*n3^4 - 12*d*n3^4 + 220*n3*n6 - 534*d*n3*n6 + 
      413*d^2*n3*n6 - 102*d^3*n3*n6 + 72*n1*n3*n6 - 120*d*n1*n3*n6 + 
      51*d^2*n1*n3*n6 + 4*n1^2*n3*n6 - 2*d*n1^2*n3*n6 + 284*n3^2*n6 - 
      466*d*n3^2*n6 + 175*d^2*n3^2*n6 + 52*n1*n3^2*n6 - 54*d*n1*n3^2*n6 + 
      116*n3^3*n6 - 88*d*n3^3*n6 + 12*n1*n3^3*n6 + 12*n3^4*n6 + 240*n3*n6^2 - 
      352*d*n3*n6^2 + 125*d^2*n3*n6^2 + 52*n1*n3*n6^2 - 44*d*n1*n3*n6^2 + 
      208*n3^2*n6^2 - 144*d*n3^2*n6^2 + 28*n1*n3^2*n6^2 + 36*n3^3*n6^2 + 
      92*n3*n6^3 - 64*d*n3*n6^3 + 12*n1*n3*n6^3 + 36*n3^2*n6^3 + 12*n3*n6^4)*
     j[p4, n1, 0, 1 + n3, 0, 0, -1 + n6, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n1)*(-1 + n6)*(140 - 270*d + 170*d^2 - 35*d^3 + 48*n1 - 
      60*d*n1 + 19*d^2*n1 + 4*n1^2 - 2*d*n1^2 + 108*n3 - 148*d*n3 + 
      49*d^2*n3 + 20*n1*n3 - 14*d*n1*n3 + 16*n3^2 - 16*d*n3^2 + 168*n6 - 
      200*d*n6 + 59*d^2*n6 + 32*n1*n6 - 20*d*n1*n6 + 100*n3*n6 - 62*d*n3*n6 + 
      8*n1*n3*n6 + 16*n3^2*n6 + 48*n6^2 - 28*d*n6^2 + 4*n1*n6^2 + 
      16*n3*n6^2 + 4*n6^3)) + ((-4*d*n3 + 3*d^2*n3 - 3*d*n3^2 + 8*n3*n6 - 
      8*d*n3*n6 + 6*n3^2*n6 + 4*n3*n6^2)*j[p4, n1, 0, 1 + n3, 0, 0, n6, 0, 1, 
      0, 1, 1, 0, 0, 1])/(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
     19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
     20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
     59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
     8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 
     4*n6^3) + ((40*n3 - 90*d*n3 + 65*d^2*n3 - 15*d^3*n3 + 8*n1*n3 - 
      14*d*n1*n3 + 6*d^2*n1*n3 + 38*n3^2 - 59*d*n3^2 + 21*d^2*n3^2 + 
      6*n1*n3^2 - 6*d*n1*n3^2 + 6*n3^3 - 6*d*n3^3 + 68*n3*n6 - 94*d*n3*n6 + 
      31*d^2*n3*n6 + 12*n1*n3*n6 - 10*d*n1*n3*n6 + 48*n3^2*n6 - 
      31*d*n3^2*n6 + 6*n1*n3^2*n6 + 6*n3^3*n6 + 32*n3*n6^2 - 20*d*n3*n6^2 + 
      4*n1*n3*n6^2 + 10*n3^2*n6^2 + 4*n3*n6^3)*j[p4, n1, 0, 1 + n3, 0, 0, n6, 
      0, 1, 0, 1, 1, 0, 1, 0])/((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 
      35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 
      148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 
      168*n6 + 200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 
      62*d*n3*n6 - 8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 
      4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3)) + 
   ((-80 + 180*d - 130*d^2 + 30*d^3 - 16*n1 + 28*d*n1 - 12*d^2*n1 - 76*n3 + 
      118*d*n3 - 42*d^2*n3 - 12*n1*n3 + 12*d*n1*n3 - 12*n3^2 + 12*d*n3^2 - 
      136*n6 + 188*d*n6 - 62*d^2*n6 - 24*n1*n6 + 20*d*n1*n6 - 96*n3*n6 + 
      62*d*n3*n6 - 12*n1*n3*n6 - 12*n3^2*n6 - 64*n6^2 + 40*d*n6^2 - 
      8*n1*n6^2 - 20*n3*n6^2 - 8*n6^3)*j[p4, 1 + n1, -1, n3, 0, 0, n6, 0, 0, 
      0, 1, 2, 0, 1, 1])/((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 
      48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 
      49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 
      200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((-20 + 24*d - 5*d^2 - d^3 - 24*n1 + 26*d*n1 - 
      7*d^2*n1 - 4*n1^2 + 2*d*n1^2 + 6*n3 - 11*d*n3 + 5*d^2*n3 - 2*n1*n3 + 
      2*d*n1*n3 + 2*n3^2 - 2*d*n3^2 - 12*n6 - 2*d*n6 + 4*d^2*n6 - 12*n1*n6 + 
      6*d*n1*n6 + 8*n3*n6 - 7*d*n3*n6 - 2*n1*n3*n6 + 2*n3^2*n6 + 8*n6^2 - 
      4*d*n6^2 + 2*n3*n6^2)*j[p4, 1 + n1, -1, n3, 0, 0, n6, 0, 0, 0, 2, 1, 0, 
      1, 1])/((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 
      60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 
      49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 
      200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((40 - 54*d + 18*d^2 + 8*n1 - 6*d*n1 + 38*n3 - 
      24*d*n3 + 6*n1*n3 + 6*n3^2 + 36*n6 - 24*d*n6 + 4*n1*n6 + 16*n3*n6 + 
      8*n6^2)*j[p4, 1 + n1, -1, n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 0, 2])/
    (-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 
     2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 
     16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 
     20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 8*n1*n3*n6 - 16*n3^2*n6 - 
     48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3) + 
   ((-20 + 36*d - 18*d^2 + 2*d^3 - 24*n1 + 30*d*n1 - 10*d^2*n1 - 4*n1^2 + 
      2*d*n1^2 + 6*n3 - 2*d*n3 + 2*d^2*n3 - 2*n1*n3 + 5*d*n1*n3 + 2*n3^2 - 
      2*d*n3^2 - 36*n6 + 30*d*n6 - 4*d^2*n6 - 20*n1*n6 + 14*d*n1*n6 - 
      10*n3*n6 - d*n3*n6 - 8*n1*n3*n6 + 2*n3^2*n6 - 4*n6^2 - 4*n1*n6^2 + 
      2*n3*n6^2)*j[p4, 1 + n1, -1, n3, 0, 0, n6, 0, 1, 0, 2, 0, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((-20 + 24*d - 5*d^2 - d^3 - 24*n1 + 26*d*n1 - 
      7*d^2*n1 - 4*n1^2 + 2*d*n1^2 + 6*n3 - 11*d*n3 + 5*d^2*n3 - 2*n1*n3 + 
      2*d*n1*n3 + 2*n3^2 - 2*d*n3^2 - 12*n6 - 2*d*n6 + 4*d^2*n6 - 12*n1*n6 + 
      6*d*n1*n6 + 8*n3*n6 - 7*d*n3*n6 - 2*n1*n3*n6 + 2*n3^2*n6 + 8*n6^2 - 
      4*d*n6^2 + 2*n3*n6^2)*j[p4, 1 + n1, -1, n3, 0, 0, n6, 0, 1, 0, 2, 1, 0, 
      0, 1])/((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 
      60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 
      49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 
      200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((-4*d + 3*d^2 - 3*d*n3 + 8*n6 - 8*d*n6 + 6*n3*n6 + 4*n6^2)*
     j[p4, 1 + n1, -1, n3, 0, 0, n6, 0, 2, 0, 1, 0, 0, 1, 1])/
    (-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 
     2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 
     16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 
     20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 8*n1*n3*n6 - 16*n3^2*n6 - 
     48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3) + 
   ((-4*d + 3*d^2 - 3*d*n3 + 8*n6 - 8*d*n6 + 6*n3*n6 + 4*n6^2)*
     j[p4, 1 + n1, -1, n3, 0, 0, n6, 0, 2, 0, 1, 1, 0, 0, 1])/
    (-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 
     2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 
     16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 
     20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 8*n1*n3*n6 - 16*n3^2*n6 - 
     48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3) + 
   ((-200*n6 + 330*d*n6 - 175*d^2*n6 + 30*d^3*n6 - 80*n1*n6 + 96*d*n1*n6 - 
      27*d^2*n1*n6 - 8*n1^2*n6 + 6*d*n1^2*n6 - 230*n3*n6 + 231*d*n3*n6 - 
      57*d^2*n3*n6 - 76*n1*n3*n6 + 39*d*n1*n3*n6 - 6*n1^2*n3*n6 - 
      68*n3^2*n6 + 33*d*n3^2*n6 - 12*n1*n3^2*n6 - 6*n3^3*n6 - 140*n6^2 + 
      136*d*n6^2 - 32*d^2*n6^2 - 48*n1*n6^2 + 24*d*n1*n6^2 - 4*n1^2*n6^2 - 
      78*n3*n6^2 + 36*d*n3*n6^2 - 14*n1*n3*n6^2 - 10*n3^2*n6^2 - 20*n6^3 + 
      8*d*n6^3 - 4*n1*n6^3 - 4*n3*n6^3)*j[p4, 1 + n1, -1, n3, 0, 0, 1 + n6, 
      0, 0, 0, 1, 1, 0, 1, 1])/((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 
      35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 
      148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 
      168*n6 + 200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 
      62*d*n3*n6 - 8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 
      4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3)) + 
   ((-4*d*n6 + 3*d^2*n6 - 3*d*n3*n6 + 8*n6^2 - 8*d*n6^2 + 6*n3*n6^2 + 4*n6^3)*
     j[p4, 1 + n1, -1, n3, 0, 0, 1 + n6, 0, 1, 0, 0, 1, 0, 1, 1])/
    (-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 
     2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 
     16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 
     20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 8*n1*n3*n6 - 16*n3^2*n6 - 
     48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3) + 
   ((40*n6 - 50*d*n6 + 15*d^2*n6 + 8*n1*n6 - 6*d*n1*n6 + 38*n3*n6 - 
      21*d*n3*n6 + 6*n1*n3*n6 + 6*n3^2*n6 + 28*n6^2 - 16*d*n6^2 + 4*n1*n6^2 + 
      10*n3*n6^2 + 4*n6^3)*j[p4, 1 + n1, -1, n3, 0, 0, 1 + n6, 0, 1, 0, 1, 1, 
      0, 0, 1])/(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
     19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
     20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
     59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
     8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 
     4*n6^3) + ((40*n6 - 50*d*n6 + 15*d^2*n6 + 8*n1*n6 - 6*d*n1*n6 + 
      38*n3*n6 - 21*d*n3*n6 + 6*n1*n3*n6 + 6*n3^2*n6 + 28*n6^2 - 16*d*n6^2 + 
      4*n1*n6^2 + 10*n3*n6^2 + 4*n6^3)*j[p4, 1 + n1, -1, n3, 0, 0, 1 + n6, 0, 
      1, 0, 1, 1, 0, 1, 0])/(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 
     60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 
     49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 
     200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
     8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 
     4*n6^3) + ((-4*d*n3 + 3*d^2*n3 - 3*d*n3^2 + 8*n3*n6 - 8*d*n3*n6 + 
      6*n3^2*n6 + 4*n3*n6^2)*j[p4, 1 + n1, -1, 1 + n3, 0, 0, n6, 0, 1, 0, 1, 
      1, 0, 0, 1])/(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
     19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
     20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
     59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
     8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 
     4*n6^3) + ((40*n3 - 90*d*n3 + 65*d^2*n3 - 15*d^3*n3 + 8*n1*n3 - 
      14*d*n1*n3 + 6*d^2*n1*n3 + 38*n3^2 - 59*d*n3^2 + 21*d^2*n3^2 + 
      6*n1*n3^2 - 6*d*n1*n3^2 + 6*n3^3 - 6*d*n3^3 + 68*n3*n6 - 94*d*n3*n6 + 
      31*d^2*n3*n6 + 12*n1*n3*n6 - 10*d*n1*n3*n6 + 48*n3^2*n6 - 
      31*d*n3^2*n6 + 6*n1*n3^2*n6 + 6*n3^3*n6 + 32*n3*n6^2 - 20*d*n3*n6^2 + 
      4*n1*n3*n6^2 + 10*n3^2*n6^2 + 4*n3*n6^3)*j[p4, 1 + n1, -1, 1 + n3, 0, 
      0, n6, 0, 1, 0, 1, 1, 0, 1, 0])/((-3 + d - n1)*
     (-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 
      4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 
      14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 59*d^2*n6 - 
      32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 8*n1*n3*n6 - 
      16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3)) + 
   ((-60 + 104*d - 62*d^2 + 13*d^3 + 8*n1 - 10*d*n1 + 4*d^2*n1 + 4*n1^2 - 
      2*d*n1^2 - 122*n3 + 132*d*n3 - 38*d^2*n3 - 18*n1*n3 + 7*d*n1*n3 - 
      52*n3^2 + 29*d*n3^2 - 6*n1*n3^2 - 6*n3^3 - 20*n6 + 30*d*n6 - 
      12*d^2*n6 + 12*n1*n6 - 10*d*n1*n6 - 38*n3*n6 + 27*d*n3*n6 + 
      4*n1*n3*n6 - 12*n3^2*n6 - 4*n6^2 + 4*d*n6^2 + 4*n1*n6^2 - 6*n3*n6^2)*
     j[p4, 1 + n1, 0, -1 + n3, 0, 0, n6, 0, 0, 0, 1, 1, 0, 1, 2])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((-180 + 306*d - 170*d^2 + 31*d^3 - 56*n1 + 
      70*d*n1 - 20*d^2*n1 - 4*n1^2 + 4*d*n1^2 - 236*n3 + 242*d*n3 - 
      62*d^2*n3 - 74*n1*n3 + 37*d*n1*n3 - 6*n1^2*n3 - 70*n3^2 + 35*d*n3^2 - 
      12*n1*n3^2 - 6*n3^3 - 128*n6 + 138*d*n6 - 36*d^2*n6 - 36*n1*n6 + 
      18*d*n1*n6 - 4*n1^2*n6 - 86*n3*n6 + 43*d*n3*n6 - 12*n1*n3*n6 - 
      12*n3^2*n6 - 28*n6^2 + 12*d*n6^2 - 4*n1*n6^2 - 6*n3*n6^2)*
     j[p4, 1 + n1, 0, -1 + n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 0, 2])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((-80 + 236*d - 244*d^2 + 104*d^3 - 15*d^4 - 
      96*n1 + 192*d*n1 - 130*d^2*n1 + 30*d^3*n1 - 16*n1^2 + 20*d*n1^2 - 
      6*d^2*n1^2 - 16*n3 + 102*d*n3 - 96*d^2*n3 + 22*d^3*n3 - 56*n1*n3 + 
      86*d*n1*n3 - 35*d^2*n1*n3 - 8*n1^2*n3 + 4*d*n1^2*n3 + 20*n3^2 + 
      14*d*n3^2 - 11*d^2*n3^2 - 4*n1*n3^2 + 10*d*n1*n3^2 + 4*n3^3 + 
      2*d*n3^3 - 248*n6 + 460*d*n6 - 266*d^2*n6 + 46*d^3*n6 - 128*n1*n6 + 
      176*d*n1*n6 - 62*d^2*n1*n6 - 8*n1^2*n6 + 4*d*n1^2*n6 - 212*n3*n6 + 
      266*d*n3*n6 - 71*d^2*n3*n6 - 76*n1*n3*n6 + 62*d*n1*n3*n6 - 72*n3^2*n6 + 
      40*d*n3^2*n6 - 16*n1*n3^2*n6 - 8*n3^3*n6 - 152*n6^2 + 160*d*n6^2 - 
      36*d^2*n6^2 - 56*n1*n6^2 + 40*d*n1*n6^2 - 92*n3*n6^2 + 40*d*n3*n6^2 - 
      24*n1*n3*n6^2 - 12*n3^2*n6^2 - 24*n6^3 + 8*d*n6^3 - 8*n1*n6^3 - 
      4*n3*n6^3)*j[p4, 1 + n1, 0, -1 + n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((-20 + 36*d - 18*d^2 + 2*d^3 - 24*n1 + 30*d*n1 - 10*d^2*n1 - 4*n1^2 + 
      2*d*n1^2 + 6*n3 - 2*d*n3 + 2*d^2*n3 - 2*n1*n3 + 5*d*n1*n3 + 2*n3^2 - 
      2*d*n3^2 - 36*n6 + 30*d*n6 - 4*d^2*n6 - 20*n1*n6 + 14*d*n1*n6 - 
      10*n3*n6 - d*n3*n6 - 8*n1*n3*n6 + 2*n3^2*n6 - 4*n6^2 - 4*n1*n6^2 + 
      2*n3*n6^2)*j[p4, 1 + n1, 0, -1 + n3, 0, 0, n6, 0, 1, 0, 2, 0, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((-80*n6 + 140*d*n6 - 80*d^2*n6 + 15*d^3*n6 - 
      16*n1*n6 + 20*d*n1*n6 - 6*d^2*n1*n6 - 116*n3*n6 + 130*d*n3*n6 - 
      36*d^2*n3*n6 - 20*n1*n3*n6 + 12*d*n1*n3*n6 - 50*n3^2*n6 + 
      27*d*n3^2*n6 - 6*n1*n3^2*n6 - 6*n3^3*n6 - 56*n6^2 + 60*d*n6^2 - 
      16*d^2*n6^2 - 8*n1*n6^2 + 4*d*n1*n6^2 - 48*n3*n6^2 + 26*d*n3*n6^2 - 
      4*n1*n3*n6^2 - 10*n3^2*n6^2 - 8*n6^3 + 4*d*n6^3 - 4*n3*n6^3)*
     j[p4, 1 + n1, 0, -1 + n3, 0, 0, 1 + n6, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((60 - 104*d + 62*d^2 - 13*d^3 - 8*n1 + 10*d*n1 - 4*d^2*n1 - 4*n1^2 + 
      2*d*n1^2 + 122*n3 - 132*d*n3 + 38*d^2*n3 + 18*n1*n3 - 7*d*n1*n3 + 
      52*n3^2 - 29*d*n3^2 + 6*n1*n3^2 + 6*n3^3 + 20*n6 - 30*d*n6 + 
      12*d^2*n6 - 12*n1*n6 + 10*d*n1*n6 + 38*n3*n6 - 27*d*n3*n6 - 
      4*n1*n3*n6 + 12*n3^2*n6 + 4*n6^2 - 4*d*n6^2 - 4*n1*n6^2 + 6*n3*n6^2)*
     j[p4, 1 + n1, 0, n3, -1, 0, n6, 0, 0, 0, 1, 1, 0, 1, 2])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((-80 + 180*d - 130*d^2 + 30*d^3 - 16*n1 + 
      28*d*n1 - 12*d^2*n1 - 76*n3 + 118*d*n3 - 42*d^2*n3 - 12*n1*n3 + 
      12*d*n1*n3 - 12*n3^2 + 12*d*n3^2 - 136*n6 + 188*d*n6 - 62*d^2*n6 - 
      24*n1*n6 + 20*d*n1*n6 - 96*n3*n6 + 62*d*n3*n6 - 12*n1*n3*n6 - 
      12*n3^2*n6 - 64*n6^2 + 40*d*n6^2 - 8*n1*n6^2 - 20*n3*n6^2 - 8*n6^3)*
     j[p4, 1 + n1, 0, n3, -1, 0, n6, 0, 0, 0, 1, 2, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((60 - 104*d + 62*d^2 - 13*d^3 - 8*n1 + 10*d*n1 - 4*d^2*n1 - 4*n1^2 + 
      2*d*n1^2 + 122*n3 - 132*d*n3 + 38*d^2*n3 + 18*n1*n3 - 7*d*n1*n3 + 
      52*n3^2 - 29*d*n3^2 + 6*n1*n3^2 + 6*n3^3 + 20*n6 - 30*d*n6 + 
      12*d^2*n6 - 12*n1*n6 + 10*d*n1*n6 + 38*n3*n6 - 27*d*n3*n6 - 
      4*n1*n3*n6 + 12*n3^2*n6 + 4*n6^2 - 4*d*n6^2 - 4*n1*n6^2 + 6*n3*n6^2)*
     j[p4, 1 + n1, 0, n3, -1, 0, n6, 0, 1, 0, 1, 1, 0, 0, 2])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((-40 + 90*d - 65*d^2 + 15*d^3 - 8*n1 + 14*d*n1 - 6*d^2*n1 - 38*n3 + 
      59*d*n3 - 21*d^2*n3 - 6*n1*n3 + 6*d*n1*n3 - 6*n3^2 + 6*d*n3^2 - 68*n6 + 
      94*d*n6 - 31*d^2*n6 - 12*n1*n6 + 10*d*n1*n6 - 48*n3*n6 + 31*d*n3*n6 - 
      6*n1*n3*n6 - 6*n3^2*n6 - 32*n6^2 + 20*d*n6^2 - 4*n1*n6^2 - 10*n3*n6^2 - 
      4*n6^3)*j[p4, 1 + n1, 0, n3, -1, 0, n6, 0, 2, 0, 1, 0, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((-40 + 90*d - 65*d^2 + 15*d^3 - 8*n1 + 14*d*n1 - 6*d^2*n1 - 38*n3 + 
      59*d*n3 - 21*d^2*n3 - 6*n1*n3 + 6*d*n1*n3 - 6*n3^2 + 6*d*n3^2 - 68*n6 + 
      94*d*n6 - 31*d^2*n6 - 12*n1*n6 + 10*d*n1*n6 - 48*n3*n6 + 31*d*n3*n6 - 
      6*n1*n3*n6 - 6*n3^2*n6 - 32*n6^2 + 20*d*n6^2 - 4*n1*n6^2 - 10*n3*n6^2 - 
      4*n6^3)*j[p4, 1 + n1, 0, n3, -1, 0, n6, 0, 2, 0, 1, 1, 0, 0, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((80*n6 - 140*d*n6 + 80*d^2*n6 - 15*d^3*n6 + 
      16*n1*n6 - 20*d*n1*n6 + 6*d^2*n1*n6 + 116*n3*n6 - 130*d*n3*n6 + 
      36*d^2*n3*n6 + 20*n1*n3*n6 - 12*d*n1*n3*n6 + 50*n3^2*n6 - 
      27*d*n3^2*n6 + 6*n1*n3^2*n6 + 6*n3^3*n6 + 56*n6^2 - 60*d*n6^2 + 
      16*d^2*n6^2 + 8*n1*n6^2 - 4*d*n1*n6^2 + 48*n3*n6^2 - 26*d*n3*n6^2 + 
      4*n1*n3*n6^2 + 10*n3^2*n6^2 + 8*n6^3 - 4*d*n6^3 + 4*n3*n6^3)*
     j[p4, 1 + n1, 0, n3, -1, 0, 1 + n6, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((-20*n6 + 36*d*n6 - 18*d^2*n6 + 2*d^3*n6 - 
      24*n1*n6 + 30*d*n1*n6 - 10*d^2*n1*n6 - 4*n1^2*n6 + 2*d*n1^2*n6 + 
      6*n3*n6 - 2*d*n3*n6 + 2*d^2*n3*n6 - 2*n1*n3*n6 + 5*d*n1*n3*n6 + 
      2*n3^2*n6 - 2*d*n3^2*n6 - 36*n6^2 + 30*d*n6^2 - 4*d^2*n6^2 - 
      20*n1*n6^2 + 14*d*n1*n6^2 - 10*n3*n6^2 - d*n3*n6^2 - 8*n1*n3*n6^2 + 
      2*n3^2*n6^2 - 4*n6^3 - 4*n1*n6^3 + 2*n3*n6^3)*
     j[p4, 1 + n1, 0, n3, -1, 0, 1 + n6, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((80*n6 - 140*d*n6 + 80*d^2*n6 - 15*d^3*n6 + 
      16*n1*n6 - 20*d*n1*n6 + 6*d^2*n1*n6 + 116*n3*n6 - 130*d*n3*n6 + 
      36*d^2*n3*n6 + 20*n1*n3*n6 - 12*d*n1*n3*n6 + 50*n3^2*n6 - 
      27*d*n3^2*n6 + 6*n1*n3^2*n6 + 6*n3^3*n6 + 56*n6^2 - 60*d*n6^2 + 
      16*d^2*n6^2 + 8*n1*n6^2 - 4*d*n1*n6^2 + 48*n3*n6^2 - 26*d*n3*n6^2 + 
      4*n1*n3*n6^2 + 10*n3^2*n6^2 + 8*n6^3 - 4*d*n6^3 + 4*n3*n6^3)*
     j[p4, 1 + n1, 0, n3, -1, 0, 1 + n6, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((80*n6 - 140*d*n6 + 80*d^2*n6 - 15*d^3*n6 + 
      16*n1*n6 - 20*d*n1*n6 + 6*d^2*n1*n6 + 116*n3*n6 - 130*d*n3*n6 + 
      36*d^2*n3*n6 + 20*n1*n3*n6 - 12*d*n1*n3*n6 + 50*n3^2*n6 - 
      27*d*n3^2*n6 + 6*n1*n3^2*n6 + 6*n3^3*n6 + 56*n6^2 - 60*d*n6^2 + 
      16*d^2*n6^2 + 8*n1*n6^2 - 4*d*n1*n6^2 + 48*n3*n6^2 - 26*d*n3*n6^2 + 
      4*n1*n3*n6^2 + 10*n3^2*n6^2 + 8*n6^3 - 4*d*n6^3 + 4*n3*n6^3)*
     j[p4, 1 + n1, 0, n3, -1, 0, 1 + n6, 0, 1, 0, 1, 1, 0, 1, 0])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((-40 + 54*d - 18*d^2 - 8*n1 + 6*d*n1 - 38*n3 + 
      24*d*n3 - 6*n1*n3 - 6*n3^2 - 36*n6 + 24*d*n6 - 4*n1*n6 - 16*n3*n6 - 
      8*n6^2)*j[p4, 1 + n1, 0, n3, 0, -1, n6, 0, 0, 0, 1, 1, 0, 1, 2])/
    (-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 
     2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 
     16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 
     20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 8*n1*n3*n6 - 16*n3^2*n6 - 
     48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3) + 
   ((80 - 180*d + 130*d^2 - 30*d^3 + 16*n1 - 28*d*n1 + 12*d^2*n1 + 76*n3 - 
      118*d*n3 + 42*d^2*n3 + 12*n1*n3 - 12*d*n1*n3 + 12*n3^2 - 12*d*n3^2 + 
      136*n6 - 188*d*n6 + 62*d^2*n6 + 24*n1*n6 - 20*d*n1*n6 + 96*n3*n6 - 
      62*d*n3*n6 + 12*n1*n3*n6 + 12*n3^2*n6 + 64*n6^2 - 40*d*n6^2 + 
      8*n1*n6^2 + 20*n3*n6^2 + 8*n6^3)*j[p4, 1 + n1, 0, n3, 0, -1, n6, 0, 0, 
      0, 1, 2, 0, 1, 1])/((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 
      48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 
      49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 
      200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((-40 + 54*d - 18*d^2 - 8*n1 + 6*d*n1 - 38*n3 + 
      24*d*n3 - 6*n1*n3 - 6*n3^2 - 36*n6 + 24*d*n6 - 4*n1*n6 - 16*n3*n6 - 
      8*n6^2)*j[p4, 1 + n1, 0, n3, 0, -1, n6, 0, 1, 0, 1, 1, 0, 0, 2])/
    (-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 
     2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 
     16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 
     20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 8*n1*n3*n6 - 16*n3^2*n6 - 
     48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3) + 
   ((-40*n6 + 50*d*n6 - 15*d^2*n6 - 8*n1*n6 + 6*d*n1*n6 - 38*n3*n6 + 
      21*d*n3*n6 - 6*n1*n3*n6 - 6*n3^2*n6 - 28*n6^2 + 16*d*n6^2 - 4*n1*n6^2 - 
      10*n3*n6^2 - 4*n6^3)*j[p4, 1 + n1, 0, n3, 0, -1, 1 + n6, 0, 0, 0, 1, 1, 
      0, 1, 1])/(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
     19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
     20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
     59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
     8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 
     4*n6^3) + ((4*d*n6 - 3*d^2*n6 + 3*d*n3*n6 - 8*n6^2 + 8*d*n6^2 - 
      6*n3*n6^2 - 4*n6^3)*j[p4, 1 + n1, 0, n3, 0, -1, 1 + n6, 0, 1, 0, 0, 1, 
      0, 1, 1])/(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
     19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
     20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
     59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
     8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 
     4*n6^3) + ((-40*n6 + 50*d*n6 - 15*d^2*n6 - 8*n1*n6 + 6*d*n1*n6 - 
      38*n3*n6 + 21*d*n3*n6 - 6*n1*n3*n6 - 6*n3^2*n6 - 28*n6^2 + 16*d*n6^2 - 
      4*n1*n6^2 - 10*n3*n6^2 - 4*n6^3)*j[p4, 1 + n1, 0, n3, 0, -1, 1 + n6, 0, 
      1, 0, 1, 1, 0, 0, 1])/(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 
     60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 
     49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 
     200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
     8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 
     4*n6^3) + ((-40*n6 + 50*d*n6 - 15*d^2*n6 - 8*n1*n6 + 6*d*n1*n6 - 
      38*n3*n6 + 21*d*n3*n6 - 6*n1*n3*n6 - 6*n3^2*n6 - 28*n6^2 + 16*d*n6^2 - 
      4*n1*n6^2 - 10*n3*n6^2 - 4*n6^3)*j[p4, 1 + n1, 0, n3, 0, -1, 1 + n6, 0, 
      1, 0, 1, 1, 0, 1, 0])/(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 
     60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 
     49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 
     200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
     8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 
     4*n6^3) + ((80 - 180*d + 130*d^2 - 30*d^3 + 16*n1 - 28*d*n1 + 
      12*d^2*n1 + 76*n3 - 118*d*n3 + 42*d^2*n3 + 12*n1*n3 - 12*d*n1*n3 + 
      12*n3^2 - 12*d*n3^2 + 136*n6 - 188*d*n6 + 62*d^2*n6 + 24*n1*n6 - 
      20*d*n1*n6 + 96*n3*n6 - 62*d*n3*n6 + 12*n1*n3*n6 + 12*n3^2*n6 + 
      64*n6^2 - 40*d*n6^2 + 8*n1*n6^2 + 20*n3*n6^2 + 8*n6^3)*
     j[p4, 1 + n1, 0, n3, 0, 0, -1 + n6, 0, 0, 0, 1, 2, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((-40 + 90*d - 65*d^2 + 15*d^3 - 8*n1 + 14*d*n1 - 6*d^2*n1 - 38*n3 + 
      59*d*n3 - 21*d^2*n3 - 6*n1*n3 + 6*d*n1*n3 - 6*n3^2 + 6*d*n3^2 - 68*n6 + 
      94*d*n6 - 31*d^2*n6 - 12*n1*n6 + 10*d*n1*n6 - 48*n3*n6 + 31*d*n3*n6 - 
      6*n1*n3*n6 - 6*n3^2*n6 - 32*n6^2 + 20*d*n6^2 - 4*n1*n6^2 - 10*n3*n6^2 - 
      4*n6^3)*j[p4, 1 + n1, 0, n3, 0, 0, -1 + n6, 0, 0, 0, 2, 1, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((-40 + 54*d - 18*d^2 - 8*n1 + 6*d*n1 - 38*n3 + 
      24*d*n3 - 6*n1*n3 - 6*n3^2 - 36*n6 + 24*d*n6 - 4*n1*n6 - 16*n3*n6 - 
      8*n6^2)*j[p4, 1 + n1, 0, n3, 0, 0, -1 + n6, 0, 1, 0, 1, 1, 0, 0, 2])/
    (-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 
     2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 
     16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 
     20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 8*n1*n3*n6 - 16*n3^2*n6 - 
     48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3) + 
   ((160 - 608*d + 914*d^2 - 679*d^3 + 249*d^4 - 36*d^5 + 32*n1 - 112*d*n1 + 
      146*d^2*n1 - 84*d^3*n1 + 18*d^4*n1 + 392*n3 - 1186*d*n3 + 1321*d^2*n3 - 
      641*d^3*n3 + 114*d^4*n3 + 72*n1*n3 - 190*d*n1*n3 + 166*d^2*n1*n3 - 
      48*d^3*n1*n3 + 332*n3^2 - 758*d*n3^2 + 558*d^2*n3^2 - 132*d^3*n3^2 + 
      52*n1*n3^2 - 94*d*n1*n3^2 + 42*d^2*n1*n3^2 + 112*n3^3 - 178*d*n3^3 + 
      66*d^2*n3^3 + 12*n1*n3^3 - 12*d*n1*n3^3 + 12*n3^4 - 12*d*n3^4 + 
      448*n6 - 1336*d*n6 + 1478*d^2*n6 - 718*d^3*n6 + 129*d^4*n6 + 96*n1*n6 - 
      248*d*n1*n6 + 212*d^2*n1*n6 - 60*d^3*n1*n6 + 876*n3*n6 - 1916*d*n3*n6 + 
      1370*d^2*n3*n6 - 319*d^3*n3*n6 + 164*n1*n3*n6 - 284*d*n1*n3*n6 + 
      122*d^2*n1*n3*n6 + 572*n3^2*n6 - 810*d*n3^2*n6 + 276*d^2*n3^2*n6 + 
      84*n1*n3^2*n6 - 74*d*n1*n3^2*n6 + 144*n3^3*n6 - 98*d*n3^3*n6 + 
      12*n1*n3^3*n6 + 12*n3^4*n6 + 488*n6^2 - 1076*d*n6^2 + 782*d^2*n6^2 - 
      187*d^3*n6^2 + 104*n1*n6^2 - 176*d*n1*n6^2 + 74*d^2*n1*n6^2 + 
      684*n3*n6^2 - 966*d*n3*n6^2 + 333*d^2*n3*n6^2 + 120*n1*n3*n6^2 - 
      102*d*n1*n3*n6^2 + 280*n3^2*n6^2 - 184*d*n3^2*n6^2 + 32*n1*n3^2*n6^2 + 
      32*n3^3*n6^2 + 264*n6^3 - 384*d*n6^3 + 138*d^2*n6^3 + 48*n1*n6^3 - 
      40*d*n1*n6^3 + 228*n3*n6^3 - 156*d*n3*n6^3 + 28*n1*n3*n6^3 + 
      40*n3^2*n6^3 + 72*n6^4 - 52*d*n6^4 + 8*n1*n6^4 + 28*n3*n6^4 + 8*n6^5)*
     j[p4, 1 + n1, 0, n3, 0, 0, -1 + n6, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n1)*(-1 + n6)*(140 - 270*d + 170*d^2 - 35*d^3 + 48*n1 - 
      60*d*n1 + 19*d^2*n1 + 4*n1^2 - 2*d*n1^2 + 108*n3 - 148*d*n3 + 
      49*d^2*n3 + 20*n1*n3 - 14*d*n1*n3 + 16*n3^2 - 16*d*n3^2 + 168*n6 - 
      200*d*n6 + 59*d^2*n6 + 32*n1*n6 - 20*d*n1*n6 + 100*n3*n6 - 62*d*n3*n6 + 
      8*n1*n3*n6 + 16*n3^2*n6 + 48*n6^2 - 28*d*n6^2 + 4*n1*n6^2 + 
      16*n3*n6^2 + 4*n6^3)) + 
   ((-40 + 90*d - 65*d^2 + 15*d^3 - 8*n1 + 14*d*n1 - 6*d^2*n1 - 38*n3 + 
      59*d*n3 - 21*d^2*n3 - 6*n1*n3 + 6*d*n1*n3 - 6*n3^2 + 6*d*n3^2 - 68*n6 + 
      94*d*n6 - 31*d^2*n6 - 12*n1*n6 + 10*d*n1*n6 - 48*n3*n6 + 31*d*n3*n6 - 
      6*n1*n3*n6 - 6*n3^2*n6 - 32*n6^2 + 20*d*n6^2 - 4*n1*n6^2 - 10*n3*n6^2 - 
      4*n6^3)*j[p4, 1 + n1, 0, n3, 0, 0, -1 + n6, 0, 1, 0, 2, 1, 0, 0, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((40 - 90*d + 65*d^2 - 15*d^3 + 8*n1 - 14*d*n1 + 6*d^2*n1 + 38*n3 - 
      59*d*n3 + 21*d^2*n3 + 6*n1*n3 - 6*d*n1*n3 + 6*n3^2 - 6*d*n3^2 + 68*n6 - 
      94*d*n6 + 31*d^2*n6 + 12*n1*n6 - 10*d*n1*n6 + 48*n3*n6 - 31*d*n3*n6 + 
      6*n1*n3*n6 + 6*n3^2*n6 + 32*n6^2 - 20*d*n6^2 + 4*n1*n6^2 + 10*n3*n6^2 + 
      4*n6^3)*j[p4, 1 + n1, 0, n3, 0, 0, -1 + n6, 0, 2, 0, 1, 0, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((40 - 90*d + 65*d^2 - 15*d^3 + 8*n1 - 14*d*n1 + 6*d^2*n1 + 38*n3 - 
      59*d*n3 + 21*d^2*n3 + 6*n1*n3 - 6*d*n1*n3 + 6*n3^2 - 6*d*n3^2 + 68*n6 - 
      94*d*n6 + 31*d^2*n6 + 12*n1*n6 - 10*d*n1*n6 + 48*n3*n6 - 31*d*n3*n6 + 
      6*n1*n3*n6 + 6*n3^2*n6 + 32*n6^2 - 20*d*n6^2 + 4*n1*n6^2 + 10*n3*n6^2 + 
      4*n6^3)*j[p4, 1 + n1, 0, n3, 0, 0, -1 + n6, 0, 2, 0, 1, 1, 0, 0, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((8*d - 6*d^2 + 6*d*n3 - 16*n6 + 16*d*n6 - 
      12*n3*n6 - 8*n6^2)*j[p4, 1 + n1, 0, n3, 0, 0, n6, -1, 0, 0, 1, 2, 0, 1, 
      1])/(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 
     4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 
     14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 59*d^2*n6 - 
     32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 8*n1*n3*n6 - 
     16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3) + 
   ((20 - 36*d + 18*d^2 - 2*d^3 + 24*n1 - 30*d*n1 + 10*d^2*n1 + 4*n1^2 - 
      2*d*n1^2 - 6*n3 + 2*d*n3 - 2*d^2*n3 + 2*n1*n3 - 5*d*n1*n3 - 2*n3^2 + 
      2*d*n3^2 + 36*n6 - 30*d*n6 + 4*d^2*n6 + 20*n1*n6 - 14*d*n1*n6 + 
      10*n3*n6 + d*n3*n6 + 8*n1*n3*n6 - 2*n3^2*n6 + 4*n6^2 + 4*n1*n6^2 - 
      2*n3*n6^2)*j[p4, 1 + n1, 0, n3, 0, 0, n6, -1, 0, 0, 2, 1, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((-40 + 54*d - 18*d^2 - 8*n1 + 6*d*n1 - 38*n3 + 
      24*d*n3 - 6*n1*n3 - 6*n3^2 - 36*n6 + 24*d*n6 - 4*n1*n6 - 16*n3*n6 - 
      8*n6^2)*j[p4, 1 + n1, 0, n3, 0, 0, n6, -1, 1, 0, 1, 1, 0, 0, 2])/
    (-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 
     2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 
     16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 
     20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 8*n1*n3*n6 - 16*n3^2*n6 - 
     48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3) + 
   ((20 - 36*d + 18*d^2 - 2*d^3 + 24*n1 - 30*d*n1 + 10*d^2*n1 + 4*n1^2 - 
      2*d*n1^2 - 6*n3 + 2*d*n3 - 2*d^2*n3 + 2*n1*n3 - 5*d*n1*n3 - 2*n3^2 + 
      2*d*n3^2 + 36*n6 - 30*d*n6 + 4*d^2*n6 + 20*n1*n6 - 14*d*n1*n6 + 
      10*n3*n6 + d*n3*n6 + 8*n1*n3*n6 - 2*n3^2*n6 + 4*n6^2 + 4*n1*n6^2 - 
      2*n3*n6^2)*j[p4, 1 + n1, 0, n3, 0, 0, n6, -1, 1, 0, 2, 0, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((20 - 36*d + 18*d^2 - 2*d^3 + 24*n1 - 30*d*n1 + 10*d^2*n1 + 4*n1^2 - 
      2*d*n1^2 - 6*n3 + 2*d*n3 - 2*d^2*n3 + 2*n1*n3 - 5*d*n1*n3 - 2*n3^2 + 
      2*d*n3^2 + 36*n6 - 30*d*n6 + 4*d^2*n6 + 20*n1*n6 - 14*d*n1*n6 + 
      10*n3*n6 + d*n3*n6 + 8*n1*n3*n6 - 2*n3^2*n6 + 4*n6^2 + 4*n1*n6^2 - 
      2*n3*n6^2)*j[p4, 1 + n1, 0, n3, 0, 0, n6, -1, 1, 0, 2, 1, 0, 0, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((4*d - 3*d^2 + 3*d*n3 - 8*n6 + 8*d*n6 - 6*n3*n6 - 4*n6^2)*
     j[p4, 1 + n1, 0, n3, 0, 0, n6, -1, 2, 0, 1, 0, 0, 1, 1])/
    (-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 
     2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 
     16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 
     20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 8*n1*n3*n6 - 16*n3^2*n6 - 
     48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3) + 
   ((4*d - 3*d^2 + 3*d*n3 - 8*n6 + 8*d*n6 - 6*n3*n6 - 4*n6^2)*
     j[p4, 1 + n1, 0, n3, 0, 0, n6, -1, 2, 0, 1, 1, 0, 0, 1])/
    (-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 
     2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 
     16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 
     20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 8*n1*n3*n6 - 16*n3^2*n6 - 
     48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3) + 
   ((-80 + 180*d - 130*d^2 + 30*d^3 - 16*n1 + 28*d*n1 - 12*d^2*n1 - 76*n3 + 
      118*d*n3 - 42*d^2*n3 - 12*n1*n3 + 12*d*n1*n3 - 12*n3^2 + 12*d*n3^2 - 
      136*n6 + 188*d*n6 - 62*d^2*n6 - 24*n1*n6 + 20*d*n1*n6 - 96*n3*n6 + 
      62*d*n3*n6 - 12*n1*n3*n6 - 12*n3^2*n6 - 64*n6^2 + 40*d*n6^2 - 
      8*n1*n6^2 - 20*n3*n6^2 - 8*n6^3)*j[p4, 1 + n1, 0, n3, 0, 0, n6, 0, 0, 
      -1, 1, 2, 0, 1, 1])/((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 
      48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 
      49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 
      200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((40 - 90*d + 65*d^2 - 15*d^3 + 8*n1 - 14*d*n1 + 6*d^2*n1 + 38*n3 - 
      59*d*n3 + 21*d^2*n3 + 6*n1*n3 - 6*d*n1*n3 + 6*n3^2 - 6*d*n3^2 + 68*n6 - 
      94*d*n6 + 31*d^2*n6 + 12*n1*n6 - 10*d*n1*n6 + 48*n3*n6 - 31*d*n3*n6 + 
      6*n1*n3*n6 + 6*n3^2*n6 + 32*n6^2 - 20*d*n6^2 + 4*n1*n6^2 + 10*n3*n6^2 + 
      4*n6^3)*j[p4, 1 + n1, 0, n3, 0, 0, n6, 0, 0, -1, 2, 1, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((120 - 232*d + 136*d^2 - 13*d^3 - 7*d^4 + 
      64*n1 - 116*d*n1 + 69*d^2*n1 - 13*d^3*n1 + 8*n1^2 - 12*d*n1^2 + 
      5*d^2*n1^2 + 144*n3 - 202*d*n3 + 54*d^2*n3 + 12*d^3*n3 + 112*n1*n3 - 
      143*d*n1*n3 + 45*d^2*n1*n3 + 16*n1^2*n3 - 11*d*n1^2*n3 - 16*n3^2 + 
      17*d*n3^2 - 19*d^2*n3^2 + 8*n1*n3^2 - 17*d*n1*n3^2 - 8*n3^3 + 
      8*d*n3^3 + 188*n6 - 212*d*n6 + 28*d^2*n6 + 22*d^3*n6 + 64*n1*n6 - 
      74*d*n1*n6 + 18*d^2*n1*n6 + 4*n1^2*n6 - 6*d*n1^2*n6 + 282*n3*n6 - 
      178*d*n3*n6 - 10*d^2*n3*n6 + 124*n1*n3*n6 - 69*d*n1*n3*n6 + 
      6*n1^2*n3*n6 + 70*n3^2*n6 + d*n3^2*n6 + 32*n1*n3^2*n6 - 2*n3^3*n6 + 
      4*n6^2 + 58*d*n6^2 - 46*d^2*n6^2 + 8*n1*n6^2 + 2*d*n1*n6^2 + 
      4*n1^2*n6^2 - 2*n3*n6^2 + 39*d*n3*n6^2 + 8*n1*n3*n6^2 - 8*n3^2*n6^2 - 
      28*n6^3 + 32*d*n6^3 - 4*n1*n6^3 - 14*n3*n6^3 - 8*n6^4)*
     j[p4, 1 + n1, 0, n3, 0, 0, n6, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((-60 + 114*d - 70*d^2 + 14*d^3 - 32*n1 + 40*d*n1 - 13*d^2*n1 - 4*n1^2 + 
      2*d*n1^2 - 32*n3 + 48*d*n3 - 16*d^2*n3 - 8*n1*n3 + 8*d*n1*n3 - 4*n3^2 + 
      4*d*n3^2 - 80*n6 + 92*d*n6 - 27*d^2*n6 - 24*n1*n6 + 16*d*n1*n6 - 
      40*n3*n6 + 24*d*n3*n6 - 8*n1*n3*n6 - 4*n3^2*n6 - 24*n6^2 + 16*d*n6^2 - 
      4*n1*n6^2 - 8*n3*n6^2 - 4*n6^3)*j[p4, 1 + n1, 0, n3, 0, 0, n6, 0, 0, 0, 
      1, 2, -1, 1, 1])/((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 
      48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 
      49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 
      200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((60 - 114*d + 70*d^2 - 14*d^3 + 32*n1 - 40*d*n1 + 13*d^2*n1 + 4*n1^2 - 
      2*d*n1^2 + 32*n3 - 48*d*n3 + 16*d^2*n3 + 8*n1*n3 - 8*d*n1*n3 + 4*n3^2 - 
      4*d*n3^2 + 80*n6 - 92*d*n6 + 27*d^2*n6 + 24*n1*n6 - 16*d*n1*n6 + 
      40*n3*n6 - 24*d*n3*n6 + 8*n1*n3*n6 + 4*n3^2*n6 + 24*n6^2 - 16*d*n6^2 + 
      4*n1*n6^2 + 8*n3*n6^2 + 4*n6^3)*j[p4, 1 + n1, 0, n3, 0, 0, n6, 0, 0, 0, 
      1, 2, 0, 1, 1])/((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 
      48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 
      49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 
      200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((-4*d + 3*d^2 - 3*d*n3 + 8*n6 - 8*d*n6 + 6*n3*n6 + 4*n6^2)*
     j[p4, 1 + n1, 0, n3, 0, 0, n6, 0, 1, -1, 1, 1, 0, 0, 2])/
    (-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 
     2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 
     16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 
     20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 8*n1*n3*n6 - 16*n3^2*n6 - 
     48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3) + 
   ((40 - 90*d + 65*d^2 - 15*d^3 + 8*n1 - 14*d*n1 + 6*d^2*n1 + 38*n3 - 
      59*d*n3 + 21*d^2*n3 + 6*n1*n3 - 6*d*n1*n3 + 6*n3^2 - 6*d*n3^2 + 68*n6 - 
      94*d*n6 + 31*d^2*n6 + 12*n1*n6 - 10*d*n1*n6 + 48*n3*n6 - 31*d*n3*n6 + 
      6*n1*n3*n6 + 6*n3^2*n6 + 32*n6^2 - 20*d*n6^2 + 4*n1*n6^2 + 10*n3*n6^2 + 
      4*n6^3)*j[p4, 1 + n1, 0, n3, 0, 0, n6, 0, 1, -1, 2, 1, 0, 0, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((-80 + 256*d - 308*d^2 + 159*d^3 - 29*d^4 + 
      24*n1 - 18*d*n1 - 8*d^2*n1 + 7*d^3*n1 + 8*n1^2 - 6*d*n1^2 + d^2*n1^2 - 
      176*n3 + 386*d*n3 - 291*d^2*n3 + 69*d^3*n3 - 14*n1*n3 + 28*d*n1*n3 - 
      18*d^2*n1*n3 + 2*n1^2*n3 - d*n1^2*n3 - 82*n3^2 + 138*d*n3^2 - 
      50*d^2*n3^2 - 8*n1*n3^2 + 11*d*n1*n3^2 - 10*n3^3 + 10*d*n3^3 - 188*n6 + 
      476*d*n6 - 367*d^2*n6 + 87*d^3*n6 - 4*n1*n6 + 32*d*n1*n6 - 
      22*d^2*n1*n6 - 302*n3*n6 + 463*d*n3*n6 - 158*d^2*n3*n6 - 28*n1*n3*n6 + 
      37*d*n1*n3*n6 - 128*n3^2*n6 + 81*d*n3^2*n6 - 14*n1*n3^2*n6 - 
      10*n3^3*n6 - 188*n6^2 + 274*d*n6^2 - 94*d^2*n6^2 - 16*n1*n6^2 + 
      18*d*n1*n6^2 - 176*n3*n6^2 + 113*d*n3*n6^2 - 16*n1*n3*n6^2 - 
      28*n3^2*n6^2 - 64*n6^3 + 44*d*n6^3 - 4*n1*n6^3 - 26*n3*n6^3 - 8*n6^4)*
     j[p4, 1 + n1, 0, n3, 0, 0, n6, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((40 - 78*d + 52*d^2 - 12*d^3 + 8*n1 - 10*d*n1 + 3*d^2*n1 + 38*n3 - 
      50*d*n3 + 18*d^2*n3 + 6*n1*n3 - 3*d*n1*n3 + 6*n3^2 - 6*d*n3^2 + 44*n6 - 
      62*d*n6 + 23*d^2*n6 + 4*n1*n6 - 2*d*n1*n6 + 30*n3*n6 - 25*d*n3*n6 + 
      6*n3^2*n6 + 20*n6^2 - 16*d*n6^2 + 10*n3*n6^2 + 4*n6^3)*
     j[p4, 1 + n1, 0, n3, 0, 0, n6, 0, 1, 0, 0, 2, -1, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((-40 + 78*d - 52*d^2 + 12*d^3 - 8*n1 + 10*d*n1 - 3*d^2*n1 - 38*n3 + 
      50*d*n3 - 18*d^2*n3 - 6*n1*n3 + 3*d*n1*n3 - 6*n3^2 + 6*d*n3^2 - 44*n6 + 
      62*d*n6 - 23*d^2*n6 - 4*n1*n6 + 2*d*n1*n6 - 30*n3*n6 + 25*d*n3*n6 - 
      6*n3^2*n6 - 20*n6^2 + 16*d*n6^2 - 10*n3*n6^2 - 4*n6^3)*
     j[p4, 1 + n1, 0, n3, 0, 0, n6, 0, 1, 0, 0, 2, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((-20 + 36*d - 18*d^2 + 2*d^3 - 64*n1 + 108*d*n1 - 62*d^2*n1 + 12*d^3*n1 - 
      12*n1^2 + 12*d*n1^2 - 3*d^2*n1^2 + 26*n3 - 38*d*n3 + 20*d^2*n3 - 
      2*d^3*n3 - 16*n1*n3 + 25*d*n1*n3 - 8*d^2*n1*n3 - 2*n1^2*n3 + 
      d*n1^2*n3 - 4*n3^2 - 2*d^2*n3^2 - 4*n1*n3^2 + d*n1*n3^2 - 2*n3^3 + 
      2*d*n3^3 - 36*n6 + 30*d*n6 - 4*d^2*n6 - 64*n1*n6 + 76*d*n1*n6 - 
      23*d^2*n1*n6 - 4*n1^2*n6 + 2*d*n1^2*n6 + 26*n3*n6 - 31*d*n3*n6 + 
      4*d^2*n3*n6 - 18*n1*n3*n6 + 11*d*n1*n3*n6 + 12*n3^2*n6 + d*n3^2*n6 + 
      2*n1*n3^2*n6 - 2*n3^3*n6 - 4*n6^2 - 24*n1*n6^2 + 16*d*n1*n6^2 + 
      6*n3*n6^2 - 6*n1*n3*n6^2 - 2*n3^2*n6^2 - 4*n1*n6^3)*
     j[p4, 1 + n1, 0, n3, 0, 0, n6, 0, 1, 0, 1, 0, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((40 - 54*d + 18*d^2 + 8*n1 - 6*d*n1 + 38*n3 - 
      24*d*n3 + 6*n1*n3 + 6*n3^2 + 36*n6 - 24*d*n6 + 4*n1*n6 + 16*n3*n6 + 
      8*n6^2)*j[p4, 1 + n1, 0, n3, 0, 0, n6, 0, 1, 0, 1, 1, -1, 0, 2])/
    (-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 
     2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 
     16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 
     20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 8*n1*n3*n6 - 16*n3^2*n6 - 
     48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3) + 
   ((28*d - 52*d^2 + 33*d^3 - 7*d^4 - 100*n1 + 196*d*n1 - 129*d^2*n1 + 
      28*d^3*n1 - 40*n1^2 + 50*d*n1^2 - 17*d^2*n1^2 - 4*n1^3 + 2*d*n1^3 + 
      60*n3 - 18*d*n3 - 39*d^2*n3 + 17*d^3*n3 + 2*n1*n3 + 43*d*n1*n3 - 
      23*d^2*n1*n3 - 2*n1^2*n3 + 8*d*n1^2*n3 - 18*n3^2 + 44*d*n3^2 - 
      20*d^2*n3^2 - 4*n1*n3^2 + 7*d*n1*n3^2 - 6*n3^3 + 6*d*n3^3 - 56*n6 + 
      154*d*n6 - 133*d^2*n6 + 35*d^3*n6 - 132*n1*n6 + 174*d*n1*n6 - 
      59*d^2*n1*n6 - 28*n1^2*n6 + 20*d*n1^2*n6 - 22*n3*n6 + 123*d*n3*n6 - 
      60*d^2*n3*n6 - 40*n1*n3*n6 + 40*d*n1*n3*n6 - 8*n1^2*n3*n6 - 
      36*n3^2*n6 + 35*d*n3^2*n6 - 4*n1*n3^2*n6 - 6*n3^3*n6 - 100*n6^2 + 
      160*d*n6^2 - 58*d^2*n6^2 - 56*n1*n6^2 + 44*d*n1*n6^2 - 4*n1^2*n6^2 - 
      102*n3*n6^2 + 70*d*n3*n6^2 - 24*n1*n3*n6^2 - 18*n3^2*n6^2 - 52*n6^3 + 
      36*d*n6^3 - 12*n1*n6^3 - 20*n3*n6^3 - 8*n6^4)*
     j[p4, 1 + n1, 0, n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((4*d - 3*d^2 + 3*d*n3 - 8*n6 + 8*d*n6 - 6*n3*n6 - 4*n6^2)*
     j[p4, 1 + n1, 0, n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 0, 2])/
    (-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 
     2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 
     16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 
     20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 8*n1*n3*n6 - 16*n3^2*n6 - 
     48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3) + 
   ((-240 + 410*d - 247*d^2 + 65*d^3 - 7*d^4 - 88*n1 + 98*d*n1 - 22*d^2*n1 - 
      d^3*n1 - 8*n1^2 + 4*d*n1^2 + 2*d^2*n1^2 - 258*n3 + 247*d*n3 - 
      64*d^2*n3 + 3*d^3*n3 - 90*n1*n3 + 34*d*n1*n3 + 3*d^2*n1*n3 - 
      8*n1^2*n3 - 2*d*n1^2*n3 - 52*n3^2 + 9*d*n3^2 + 8*d^2*n3^2 - 
      10*n1*n3^2 - 2*d*n1*n3^2 - 2*n3^3 - 4*d*n3^3 - 188*n6 + 276*d*n6 - 
      158*d^2*n6 + 35*d^3*n6 - 36*n1*n6 + 10*d*n1*n6 - d^2*n1*n6 - 
      6*d*n1^2*n6 - 78*n3*n6 + 86*d*n3*n6 - 29*d^2*n3*n6 + 14*n1*n3*n6 - 
      5*d*n1*n3*n6 + 6*n1^2*n3*n6 + 2*n3^2*n6 - 4*d*n3^2*n6 + 2*n1*n3^2*n6 + 
      4*n3^3*n6 - 116*n6^2 + 160*d*n6^2 - 58*d^2*n6^2 - 4*n1*n6^2 + 
      8*d*n1*n6^2 + 4*n1^2*n6^2 - 64*n3*n6^2 + 46*d*n3*n6^2 - 6*n1*n3*n6^2 - 
      4*n3^2*n6^2 - 48*n6^3 + 36*d*n6^3 - 4*n1*n6^3 - 16*n3*n6^3 - 8*n6^4)*
     j[p4, 1 + n1, 0, n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 1, 0])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((180 - 414*d + 362*d^2 - 144*d^3 + 22*d^4 + 
      156*n1 - 282*d*n1 + 169*d^2*n1 - 34*d^3*n1 + 44*n1^2 - 54*d*n1^2 + 
      17*d^2*n1^2 + 4*n1^3 - 2*d*n1^3 + 156*n3 - 286*d*n3 + 184*d^2*n3 - 
      40*d^3*n3 + 88*n1*n3 - 116*d*n1*n3 + 39*d^2*n1*n3 + 12*n1^2*n3 - 
      10*d*n1^2*n3 + 44*n3^2 - 68*d*n3^2 + 24*d^2*n3^2 + 12*n1*n3^2 - 
      12*d*n1*n3^2 + 4*n3^3 - 4*d*n3^3 + 264*n6 - 488*d*n6 + 309*d^2*n6 - 
      66*d^3*n6 + 184*n1*n6 - 220*d*n1*n6 + 69*d^2*n1*n6 + 32*n1^2*n6 - 
      20*d*n1^2*n6 + 192*n3*n6 - 280*d*n3*n6 + 95*d^2*n3*n6 + 80*n1*n3*n6 - 
      60*d*n1*n3*n6 + 8*n1^2*n3*n6 + 60*n3^2*n6 - 40*d*n3^2*n6 + 
      12*n1*n3^2*n6 + 4*n3^3*n6 + 184*n6^2 - 240*d*n6^2 + 78*d^2*n6^2 + 
      68*n1*n6^2 - 48*d*n1*n6^2 + 4*n1^2*n6^2 + 128*n3*n6^2 - 80*d*n3*n6^2 + 
      28*n1*n3*n6^2 + 16*n3^2*n6^2 + 60*n6^3 - 40*d*n6^3 + 12*n1*n6^3 + 
      20*n3*n6^3 + 8*n6^4)*j[p4, 1 + n1, 0, n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 
      1, 1])/((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 
      60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 
      49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 
      200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((40 - 90*d + 65*d^2 - 15*d^3 + 8*n1 - 14*d*n1 + 6*d^2*n1 + 38*n3 - 
      59*d*n3 + 21*d^2*n3 + 6*n1*n3 - 6*d*n1*n3 + 6*n3^2 - 6*d*n3^2 + 68*n6 - 
      94*d*n6 + 31*d^2*n6 + 12*n1*n6 - 10*d*n1*n6 + 48*n3*n6 - 31*d*n3*n6 + 
      6*n1*n3*n6 + 6*n3^2*n6 + 32*n6^2 - 20*d*n6^2 + 4*n1*n6^2 + 10*n3*n6^2 + 
      4*n6^3)*j[p4, 1 + n1, 0, n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 2, 0])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((-20 + 36*d - 18*d^2 + 2*d^3 - 24*n1 + 30*d*n1 - 10*d^2*n1 - 4*n1^2 + 
      2*d*n1^2 + 6*n3 - 2*d*n3 + 2*d^2*n3 - 2*n1*n3 + 5*d*n1*n3 + 2*n3^2 - 
      2*d*n3^2 - 36*n6 + 30*d*n6 - 4*d^2*n6 - 20*n1*n6 + 14*d*n1*n6 - 
      10*n3*n6 - d*n3*n6 - 8*n1*n3*n6 + 2*n3^2*n6 - 4*n6^2 - 4*n1*n6^2 + 
      2*n3*n6^2)*j[p4, 1 + n1, 0, n3, 0, 0, n6, 0, 1, 0, 2, 0, -1, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((20 - 36*d + 18*d^2 - 2*d^3 + 24*n1 - 30*d*n1 + 10*d^2*n1 + 4*n1^2 - 
      2*d*n1^2 - 6*n3 + 2*d*n3 - 2*d^2*n3 + 2*n1*n3 - 5*d*n1*n3 - 2*n3^2 + 
      2*d*n3^2 + 36*n6 - 30*d*n6 + 4*d^2*n6 + 20*n1*n6 - 14*d*n1*n6 + 
      10*n3*n6 + d*n3*n6 + 8*n1*n3*n6 - 2*n3^2*n6 + 4*n6^2 + 4*n1*n6^2 - 
      2*n3*n6^2)*j[p4, 1 + n1, 0, n3, 0, 0, n6, 0, 1, 0, 2, 0, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((80*n6 - 140*d*n6 + 80*d^2*n6 - 15*d^3*n6 + 
      16*n1*n6 - 20*d*n1*n6 + 6*d^2*n1*n6 + 116*n3*n6 - 130*d*n3*n6 + 
      36*d^2*n3*n6 + 20*n1*n3*n6 - 12*d*n1*n3*n6 + 50*n3^2*n6 - 
      27*d*n3^2*n6 + 6*n1*n3^2*n6 + 6*n3^3*n6 + 56*n6^2 - 60*d*n6^2 + 
      16*d^2*n6^2 + 8*n1*n6^2 - 4*d*n1*n6^2 + 48*n3*n6^2 - 26*d*n3*n6^2 + 
      4*n1*n3*n6^2 + 10*n3^2*n6^2 + 8*n6^3 - 4*d*n6^3 + 4*n3*n6^3)*
     j[p4, 1 + n1, 0, n3, 0, 0, 1 + n6, -1, 0, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((20*n6 - 36*d*n6 + 18*d^2*n6 - 2*d^3*n6 + 
      24*n1*n6 - 30*d*n1*n6 + 10*d^2*n1*n6 + 4*n1^2*n6 - 2*d*n1^2*n6 - 
      6*n3*n6 + 2*d*n3*n6 - 2*d^2*n3*n6 + 2*n1*n3*n6 - 5*d*n1*n3*n6 - 
      2*n3^2*n6 + 2*d*n3^2*n6 + 36*n6^2 - 30*d*n6^2 + 4*d^2*n6^2 + 
      20*n1*n6^2 - 14*d*n1*n6^2 + 10*n3*n6^2 + d*n3*n6^2 + 8*n1*n3*n6^2 - 
      2*n3^2*n6^2 + 4*n6^3 + 4*n1*n6^3 - 2*n3*n6^3)*
     j[p4, 1 + n1, 0, n3, 0, 0, 1 + n6, 0, 0, -1, 1, 1, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((-80*n6 + 140*d*n6 - 80*d^2*n6 + 15*d^3*n6 - 
      16*n1*n6 + 20*d*n1*n6 - 6*d^2*n1*n6 - 116*n3*n6 + 130*d*n3*n6 - 
      36*d^2*n3*n6 - 20*n1*n3*n6 + 12*d*n1*n3*n6 - 50*n3^2*n6 + 
      27*d*n3^2*n6 - 6*n1*n3^2*n6 - 6*n3^3*n6 - 56*n6^2 + 60*d*n6^2 - 
      16*d^2*n6^2 - 8*n1*n6^2 + 4*d*n1*n6^2 - 48*n3*n6^2 + 26*d*n3*n6^2 - 
      4*n1*n3*n6^2 - 10*n3^2*n6^2 - 8*n6^3 + 4*d*n6^3 - 4*n3*n6^3)*
     j[p4, 1 + n1, 0, n3, 0, 0, 1 + n6, 0, 0, 0, 1, 1, -1, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((-120*n3 + 270*d*n3 - 195*d^2*n3 + 45*d^3*n3 - 
      24*n1*n3 + 42*d*n1*n3 - 18*d^2*n1*n3 - 114*n3^2 + 177*d*n3^2 - 
      63*d^2*n3^2 - 18*n1*n3^2 + 18*d*n1*n3^2 - 18*n3^3 + 18*d*n3^3 - 
      204*n3*n6 + 282*d*n3*n6 - 93*d^2*n3*n6 - 36*n1*n3*n6 + 30*d*n1*n3*n6 - 
      144*n3^2*n6 + 93*d*n3^2*n6 - 18*n1*n3^2*n6 - 18*n3^3*n6 - 96*n3*n6^2 + 
      60*d*n3*n6^2 - 12*n1*n3*n6^2 - 30*n3^2*n6^2 - 12*n3*n6^3)*
     j[p4, 1 + n1, 0, 1 + n3, -1, 0, n6, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + ((40*n3 - 90*d*n3 + 65*d^2*n3 - 15*d^3*n3 + 
      8*n1*n3 - 14*d*n1*n3 + 6*d^2*n1*n3 + 38*n3^2 - 59*d*n3^2 + 
      21*d^2*n3^2 + 6*n1*n3^2 - 6*d*n1*n3^2 + 6*n3^3 - 6*d*n3^3 + 68*n3*n6 - 
      94*d*n3*n6 + 31*d^2*n3*n6 + 12*n1*n3*n6 - 10*d*n1*n3*n6 + 48*n3^2*n6 - 
      31*d*n3^2*n6 + 6*n1*n3^2*n6 + 6*n3^3*n6 + 32*n3*n6^2 - 20*d*n3*n6^2 + 
      4*n1*n3*n6^2 + 10*n3^2*n6^2 + 4*n3*n6^3)*j[p4, 1 + n1, 0, 1 + n3, -1, 
      0, n6, 0, 1, 0, 0, 1, 0, 1, 1])/((-3 + d - n1)*
     (-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 
      4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 
      14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 59*d^2*n6 - 
      32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 8*n1*n3*n6 - 
      16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3)) + 
   ((-40*n3 + 90*d*n3 - 65*d^2*n3 + 15*d^3*n3 - 8*n1*n3 + 14*d*n1*n3 - 
      6*d^2*n1*n3 - 38*n3^2 + 59*d*n3^2 - 21*d^2*n3^2 - 6*n1*n3^2 + 
      6*d*n1*n3^2 - 6*n3^3 + 6*d*n3^3 - 68*n3*n6 + 94*d*n3*n6 - 
      31*d^2*n3*n6 - 12*n1*n3*n6 + 10*d*n1*n3*n6 - 48*n3^2*n6 + 
      31*d*n3^2*n6 - 6*n1*n3^2*n6 - 6*n3^3*n6 - 32*n3*n6^2 + 20*d*n3*n6^2 - 
      4*n1*n3*n6^2 - 10*n3^2*n6^2 - 4*n3*n6^3)*j[p4, 1 + n1, 0, 1 + n3, -1, 
      0, n6, 0, 1, 0, 1, 0, 0, 1, 1])/((-3 + d - n1)*
     (-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 
      4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 
      14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 59*d^2*n6 - 
      32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 8*n1*n3*n6 - 
      16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3)) + 
   ((-80*n3 + 180*d*n3 - 130*d^2*n3 + 30*d^3*n3 - 16*n1*n3 + 28*d*n1*n3 - 
      12*d^2*n1*n3 - 76*n3^2 + 118*d*n3^2 - 42*d^2*n3^2 - 12*n1*n3^2 + 
      12*d*n1*n3^2 - 12*n3^3 + 12*d*n3^3 - 136*n3*n6 + 188*d*n3*n6 - 
      62*d^2*n3*n6 - 24*n1*n3*n6 + 20*d*n1*n3*n6 - 96*n3^2*n6 + 
      62*d*n3^2*n6 - 12*n1*n3^2*n6 - 12*n3^3*n6 - 64*n3*n6^2 + 40*d*n3*n6^2 - 
      8*n1*n3*n6^2 - 20*n3^2*n6^2 - 8*n3*n6^3)*j[p4, 1 + n1, 0, 1 + n3, -1, 
      0, n6, 0, 1, 0, 1, 1, 0, 0, 1])/((-3 + d - n1)*
     (-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 
      4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 
      14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 59*d^2*n6 - 
      32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 8*n1*n3*n6 - 
      16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3)) + 
   ((-60*n3 + 214*d*n3 - 274*d^2*n3 + 149*d^3*n3 - 29*d^4*n3 - 32*n1*n3 + 
      80*d*n1*n3 - 67*d^2*n1*n3 + 19*d^3*n1*n3 - 4*n1^2*n3 + 6*d*n1^2*n3 - 
      2*d^2*n1^2*n3 - 112*n3^2 + 298*d*n3^2 - 253*d^2*n3^2 + 67*d^3*n3^2 - 
      24*n1*n3^2 + 50*d*n1*n3^2 - 26*d^2*n1*n3^2 - 80*n3^3 + 132*d*n3^3 - 
      52*d^2*n3^3 - 12*n1*n3^3 + 12*d*n1*n3^3 - 12*n3^4 + 12*d*n3^4 - 
      220*n3*n6 + 534*d*n3*n6 - 413*d^2*n3*n6 + 102*d^3*n3*n6 - 72*n1*n3*n6 + 
      120*d*n1*n3*n6 - 51*d^2*n1*n3*n6 - 4*n1^2*n3*n6 + 2*d*n1^2*n3*n6 - 
      284*n3^2*n6 + 466*d*n3^2*n6 - 175*d^2*n3^2*n6 - 52*n1*n3^2*n6 + 
      54*d*n1*n3^2*n6 - 116*n3^3*n6 + 88*d*n3^3*n6 - 12*n1*n3^3*n6 - 
      12*n3^4*n6 - 240*n3*n6^2 + 352*d*n3*n6^2 - 125*d^2*n3*n6^2 - 
      52*n1*n3*n6^2 + 44*d*n1*n3*n6^2 - 208*n3^2*n6^2 + 144*d*n3^2*n6^2 - 
      28*n1*n3^2*n6^2 - 36*n3^3*n6^2 - 92*n3*n6^3 + 64*d*n3*n6^3 - 
      12*n1*n3*n6^3 - 36*n3^2*n6^3 - 12*n3*n6^4)*j[p4, 1 + n1, 0, 1 + n3, 0, 
      0, -1 + n6, 0, 0, 0, 1, 1, 0, 1, 1])/((-3 + d - n1)*(-1 + n6)*
     (140 - 270*d + 170*d^2 - 35*d^3 + 48*n1 - 60*d*n1 + 19*d^2*n1 + 4*n1^2 - 
      2*d*n1^2 + 108*n3 - 148*d*n3 + 49*d^2*n3 + 20*n1*n3 - 14*d*n1*n3 + 
      16*n3^2 - 16*d*n3^2 + 168*n6 - 200*d*n6 + 59*d^2*n6 + 32*n1*n6 - 
      20*d*n1*n6 + 100*n3*n6 - 62*d*n3*n6 + 8*n1*n3*n6 + 16*n3^2*n6 + 
      48*n6^2 - 28*d*n6^2 + 4*n1*n6^2 + 16*n3*n6^2 + 4*n6^3)) + 
   ((60*n3 - 214*d*n3 + 274*d^2*n3 - 149*d^3*n3 + 29*d^4*n3 + 32*n1*n3 - 
      80*d*n1*n3 + 67*d^2*n1*n3 - 19*d^3*n1*n3 + 4*n1^2*n3 - 6*d*n1^2*n3 + 
      2*d^2*n1^2*n3 + 112*n3^2 - 298*d*n3^2 + 253*d^2*n3^2 - 67*d^3*n3^2 + 
      24*n1*n3^2 - 50*d*n1*n3^2 + 26*d^2*n1*n3^2 + 80*n3^3 - 132*d*n3^3 + 
      52*d^2*n3^3 + 12*n1*n3^3 - 12*d*n1*n3^3 + 12*n3^4 - 12*d*n3^4 + 
      220*n3*n6 - 534*d*n3*n6 + 413*d^2*n3*n6 - 102*d^3*n3*n6 + 72*n1*n3*n6 - 
      120*d*n1*n3*n6 + 51*d^2*n1*n3*n6 + 4*n1^2*n3*n6 - 2*d*n1^2*n3*n6 + 
      284*n3^2*n6 - 466*d*n3^2*n6 + 175*d^2*n3^2*n6 + 52*n1*n3^2*n6 - 
      54*d*n1*n3^2*n6 + 116*n3^3*n6 - 88*d*n3^3*n6 + 12*n1*n3^3*n6 + 
      12*n3^4*n6 + 240*n3*n6^2 - 352*d*n3*n6^2 + 125*d^2*n3*n6^2 + 
      52*n1*n3*n6^2 - 44*d*n1*n3*n6^2 + 208*n3^2*n6^2 - 144*d*n3^2*n6^2 + 
      28*n1*n3^2*n6^2 + 36*n3^3*n6^2 + 92*n3*n6^3 - 64*d*n3*n6^3 + 
      12*n1*n3*n6^3 + 36*n3^2*n6^3 + 12*n3*n6^4)*j[p4, 1 + n1, 0, 1 + n3, 0, 
      0, -1 + n6, 0, 1, 0, 0, 1, 0, 1, 1])/((-3 + d - n1)*(-1 + n6)*
     (140 - 270*d + 170*d^2 - 35*d^3 + 48*n1 - 60*d*n1 + 19*d^2*n1 + 4*n1^2 - 
      2*d*n1^2 + 108*n3 - 148*d*n3 + 49*d^2*n3 + 20*n1*n3 - 14*d*n1*n3 + 
      16*n3^2 - 16*d*n3^2 + 168*n6 - 200*d*n6 + 59*d^2*n6 + 32*n1*n6 - 
      20*d*n1*n6 + 100*n3*n6 - 62*d*n3*n6 + 8*n1*n3*n6 + 16*n3^2*n6 + 
      48*n6^2 - 28*d*n6^2 + 4*n1*n6^2 + 16*n3*n6^2 + 4*n6^3)) + 
   ((-60*n3 + 214*d*n3 - 274*d^2*n3 + 149*d^3*n3 - 29*d^4*n3 - 32*n1*n3 + 
      80*d*n1*n3 - 67*d^2*n1*n3 + 19*d^3*n1*n3 - 4*n1^2*n3 + 6*d*n1^2*n3 - 
      2*d^2*n1^2*n3 - 112*n3^2 + 298*d*n3^2 - 253*d^2*n3^2 + 67*d^3*n3^2 - 
      24*n1*n3^2 + 50*d*n1*n3^2 - 26*d^2*n1*n3^2 - 80*n3^3 + 132*d*n3^3 - 
      52*d^2*n3^3 - 12*n1*n3^3 + 12*d*n1*n3^3 - 12*n3^4 + 12*d*n3^4 - 
      220*n3*n6 + 534*d*n3*n6 - 413*d^2*n3*n6 + 102*d^3*n3*n6 - 72*n1*n3*n6 + 
      120*d*n1*n3*n6 - 51*d^2*n1*n3*n6 - 4*n1^2*n3*n6 + 2*d*n1^2*n3*n6 - 
      284*n3^2*n6 + 466*d*n3^2*n6 - 175*d^2*n3^2*n6 - 52*n1*n3^2*n6 + 
      54*d*n1*n3^2*n6 - 116*n3^3*n6 + 88*d*n3^3*n6 - 12*n1*n3^3*n6 - 
      12*n3^4*n6 - 240*n3*n6^2 + 352*d*n3*n6^2 - 125*d^2*n3*n6^2 - 
      52*n1*n3*n6^2 + 44*d*n1*n3*n6^2 - 208*n3^2*n6^2 + 144*d*n3^2*n6^2 - 
      28*n1*n3^2*n6^2 - 36*n3^3*n6^2 - 92*n3*n6^3 + 64*d*n3*n6^3 - 
      12*n1*n3*n6^3 - 36*n3^2*n6^3 - 12*n3*n6^4)*j[p4, 1 + n1, 0, 1 + n3, 0, 
      0, -1 + n6, 0, 1, 0, 1, 0, 0, 1, 1])/((-3 + d - n1)*(-1 + n6)*
     (140 - 270*d + 170*d^2 - 35*d^3 + 48*n1 - 60*d*n1 + 19*d^2*n1 + 4*n1^2 - 
      2*d*n1^2 + 108*n3 - 148*d*n3 + 49*d^2*n3 + 20*n1*n3 - 14*d*n1*n3 + 
      16*n3^2 - 16*d*n3^2 + 168*n6 - 200*d*n6 + 59*d^2*n6 + 32*n1*n6 - 
      20*d*n1*n6 + 100*n3*n6 - 62*d*n3*n6 + 8*n1*n3*n6 + 16*n3^2*n6 + 
      48*n6^2 - 28*d*n6^2 + 4*n1*n6^2 + 16*n3*n6^2 + 4*n6^3)) + 
   ((60*n3 - 214*d*n3 + 274*d^2*n3 - 149*d^3*n3 + 29*d^4*n3 + 32*n1*n3 - 
      80*d*n1*n3 + 67*d^2*n1*n3 - 19*d^3*n1*n3 + 4*n1^2*n3 - 6*d*n1^2*n3 + 
      2*d^2*n1^2*n3 + 112*n3^2 - 298*d*n3^2 + 253*d^2*n3^2 - 67*d^3*n3^2 + 
      24*n1*n3^2 - 50*d*n1*n3^2 + 26*d^2*n1*n3^2 + 80*n3^3 - 132*d*n3^3 + 
      52*d^2*n3^3 + 12*n1*n3^3 - 12*d*n1*n3^3 + 12*n3^4 - 12*d*n3^4 + 
      220*n3*n6 - 534*d*n3*n6 + 413*d^2*n3*n6 - 102*d^3*n3*n6 + 72*n1*n3*n6 - 
      120*d*n1*n3*n6 + 51*d^2*n1*n3*n6 + 4*n1^2*n3*n6 - 2*d*n1^2*n3*n6 + 
      284*n3^2*n6 - 466*d*n3^2*n6 + 175*d^2*n3^2*n6 + 52*n1*n3^2*n6 - 
      54*d*n1*n3^2*n6 + 116*n3^3*n6 - 88*d*n3^3*n6 + 12*n1*n3^3*n6 + 
      12*n3^4*n6 + 240*n3*n6^2 - 352*d*n3*n6^2 + 125*d^2*n3*n6^2 + 
      52*n1*n3*n6^2 - 44*d*n1*n3*n6^2 + 208*n3^2*n6^2 - 144*d*n3^2*n6^2 + 
      28*n1*n3^2*n6^2 + 36*n3^3*n6^2 + 92*n3*n6^3 - 64*d*n3*n6^3 + 
      12*n1*n3*n6^3 + 36*n3^2*n6^3 + 12*n3*n6^4)*j[p4, 1 + n1, 0, 1 + n3, 0, 
      0, -1 + n6, 0, 1, 0, 1, 1, -1, 1, 1])/((-3 + d - n1)*(-1 + n6)*
     (140 - 270*d + 170*d^2 - 35*d^3 + 48*n1 - 60*d*n1 + 19*d^2*n1 + 4*n1^2 - 
      2*d*n1^2 + 108*n3 - 148*d*n3 + 49*d^2*n3 + 20*n1*n3 - 14*d*n1*n3 + 
      16*n3^2 - 16*d*n3^2 + 168*n6 - 200*d*n6 + 59*d^2*n6 + 32*n1*n6 - 
      20*d*n1*n6 + 100*n3*n6 - 62*d*n3*n6 + 8*n1*n3*n6 + 16*n3^2*n6 + 
      48*n6^2 - 28*d*n6^2 + 4*n1*n6^2 + 16*n3*n6^2 + 4*n6^3)) + 
   ((-60*n3 + 214*d*n3 - 274*d^2*n3 + 149*d^3*n3 - 29*d^4*n3 - 32*n1*n3 + 
      80*d*n1*n3 - 67*d^2*n1*n3 + 19*d^3*n1*n3 - 4*n1^2*n3 + 6*d*n1^2*n3 - 
      2*d^2*n1^2*n3 - 112*n3^2 + 298*d*n3^2 - 253*d^2*n3^2 + 67*d^3*n3^2 - 
      24*n1*n3^2 + 50*d*n1*n3^2 - 26*d^2*n1*n3^2 - 80*n3^3 + 132*d*n3^3 - 
      52*d^2*n3^3 - 12*n1*n3^3 + 12*d*n1*n3^3 - 12*n3^4 + 12*d*n3^4 - 
      220*n3*n6 + 534*d*n3*n6 - 413*d^2*n3*n6 + 102*d^3*n3*n6 - 72*n1*n3*n6 + 
      120*d*n1*n3*n6 - 51*d^2*n1*n3*n6 - 4*n1^2*n3*n6 + 2*d*n1^2*n3*n6 - 
      284*n3^2*n6 + 466*d*n3^2*n6 - 175*d^2*n3^2*n6 - 52*n1*n3^2*n6 + 
      54*d*n1*n3^2*n6 - 116*n3^3*n6 + 88*d*n3^3*n6 - 12*n1*n3^3*n6 - 
      12*n3^4*n6 - 240*n3*n6^2 + 352*d*n3*n6^2 - 125*d^2*n3*n6^2 - 
      52*n1*n3*n6^2 + 44*d*n1*n3*n6^2 - 208*n3^2*n6^2 + 144*d*n3^2*n6^2 - 
      28*n1*n3^2*n6^2 - 36*n3^3*n6^2 - 92*n3*n6^3 + 64*d*n3*n6^3 - 
      12*n1*n3*n6^3 - 36*n3^2*n6^3 - 12*n3*n6^4)*j[p4, 1 + n1, 0, 1 + n3, 0, 
      0, -1 + n6, 0, 1, 0, 1, 1, 0, 0, 1])/((-3 + d - n1)*(-1 + n6)*
     (140 - 270*d + 170*d^2 - 35*d^3 + 48*n1 - 60*d*n1 + 19*d^2*n1 + 4*n1^2 - 
      2*d*n1^2 + 108*n3 - 148*d*n3 + 49*d^2*n3 + 20*n1*n3 - 14*d*n1*n3 + 
      16*n3^2 - 16*d*n3^2 + 168*n6 - 200*d*n6 + 59*d^2*n6 + 32*n1*n6 - 
      20*d*n1*n6 + 100*n3*n6 - 62*d*n3*n6 + 8*n1*n3*n6 + 16*n3^2*n6 + 
      48*n6^2 - 28*d*n6^2 + 4*n1*n6^2 + 16*n3*n6^2 + 4*n6^3)) + 
   ((-60*n3 + 214*d*n3 - 274*d^2*n3 + 149*d^3*n3 - 29*d^4*n3 - 32*n1*n3 + 
      80*d*n1*n3 - 67*d^2*n1*n3 + 19*d^3*n1*n3 - 4*n1^2*n3 + 6*d*n1^2*n3 - 
      2*d^2*n1^2*n3 - 112*n3^2 + 298*d*n3^2 - 253*d^2*n3^2 + 67*d^3*n3^2 - 
      24*n1*n3^2 + 50*d*n1*n3^2 - 26*d^2*n1*n3^2 - 80*n3^3 + 132*d*n3^3 - 
      52*d^2*n3^3 - 12*n1*n3^3 + 12*d*n1*n3^3 - 12*n3^4 + 12*d*n3^4 - 
      220*n3*n6 + 534*d*n3*n6 - 413*d^2*n3*n6 + 102*d^3*n3*n6 - 72*n1*n3*n6 + 
      120*d*n1*n3*n6 - 51*d^2*n1*n3*n6 - 4*n1^2*n3*n6 + 2*d*n1^2*n3*n6 - 
      284*n3^2*n6 + 466*d*n3^2*n6 - 175*d^2*n3^2*n6 - 52*n1*n3^2*n6 + 
      54*d*n1*n3^2*n6 - 116*n3^3*n6 + 88*d*n3^3*n6 - 12*n1*n3^3*n6 - 
      12*n3^4*n6 - 240*n3*n6^2 + 352*d*n3*n6^2 - 125*d^2*n3*n6^2 - 
      52*n1*n3*n6^2 + 44*d*n1*n3*n6^2 - 208*n3^2*n6^2 + 144*d*n3^2*n6^2 - 
      28*n1*n3^2*n6^2 - 36*n3^3*n6^2 - 92*n3*n6^3 + 64*d*n3*n6^3 - 
      12*n1*n3*n6^3 - 36*n3^2*n6^3 - 12*n3*n6^4)*j[p4, 1 + n1, 0, 1 + n3, 0, 
      0, -1 + n6, 0, 1, 0, 1, 1, 0, 1, 1])/((-3 + d - n1)*(-1 + n6)*
     (140 - 270*d + 170*d^2 - 35*d^3 + 48*n1 - 60*d*n1 + 19*d^2*n1 + 4*n1^2 - 
      2*d*n1^2 + 108*n3 - 148*d*n3 + 49*d^2*n3 + 20*n1*n3 - 14*d*n1*n3 + 
      16*n3^2 - 16*d*n3^2 + 168*n6 - 200*d*n6 + 59*d^2*n6 + 32*n1*n6 - 
      20*d*n1*n6 + 100*n3*n6 - 62*d*n3*n6 + 8*n1*n3*n6 + 16*n3^2*n6 + 
      48*n6^2 - 28*d*n6^2 + 4*n1*n6^2 + 16*n3*n6^2 + 4*n6^3)) + 
   ((12*d*n3 - 9*d^2*n3 + 9*d*n3^2 - 24*n3*n6 + 24*d*n3*n6 - 18*n3^2*n6 - 
      12*n3*n6^2)*j[p4, 1 + n1, 0, 1 + n3, 0, 0, n6, -1, 0, 0, 1, 1, 0, 1, 
      1])/(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 
     4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 
     14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 59*d^2*n6 - 
     32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 8*n1*n3*n6 - 
     16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3) + 
   ((-4*d*n3 + 3*d^2*n3 - 3*d*n3^2 + 8*n3*n6 - 8*d*n3*n6 + 6*n3^2*n6 + 
      4*n3*n6^2)*j[p4, 1 + n1, 0, 1 + n3, 0, 0, n6, -1, 1, 0, 0, 1, 0, 1, 1])/
    (-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 
     2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 
     16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 
     20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 8*n1*n3*n6 - 16*n3^2*n6 - 
     48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3) + 
   ((4*d*n3 - 3*d^2*n3 + 3*d*n3^2 - 8*n3*n6 + 8*d*n3*n6 - 6*n3^2*n6 - 
      4*n3*n6^2)*j[p4, 1 + n1, 0, 1 + n3, 0, 0, n6, -1, 1, 0, 1, 0, 0, 1, 1])/
    (-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 
     2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 
     16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 
     20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 8*n1*n3*n6 - 16*n3^2*n6 - 
     48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3) + 
   ((12*d*n3 - 9*d^2*n3 + 9*d*n3^2 - 24*n3*n6 + 24*d*n3*n6 - 18*n3^2*n6 - 
      12*n3*n6^2)*j[p4, 1 + n1, 0, 1 + n3, 0, 0, n6, -1, 1, 0, 1, 1, 0, 0, 
      1])/(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 
     4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 
     14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 59*d^2*n6 - 
     32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 8*n1*n3*n6 - 
     16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3) + 
   ((-40*n3 + 90*d*n3 - 65*d^2*n3 + 15*d^3*n3 - 8*n1*n3 + 14*d*n1*n3 - 
      6*d^2*n1*n3 - 38*n3^2 + 59*d*n3^2 - 21*d^2*n3^2 - 6*n1*n3^2 + 
      6*d*n1*n3^2 - 6*n3^3 + 6*d*n3^3 - 68*n3*n6 + 94*d*n3*n6 - 
      31*d^2*n3*n6 - 12*n1*n3*n6 + 10*d*n1*n3*n6 - 48*n3^2*n6 + 
      31*d*n3^2*n6 - 6*n1*n3^2*n6 - 6*n3^3*n6 - 32*n3*n6^2 + 20*d*n3*n6^2 - 
      4*n1*n3*n6^2 - 10*n3^2*n6^2 - 4*n3*n6^3)*j[p4, 1 + n1, 0, 1 + n3, 0, 0, 
      n6, -1, 1, 0, 1, 1, 0, 1, 0])/((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 
      35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 
      148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 
      168*n6 + 200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 
      62*d*n3*n6 - 8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 
      4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3)) + 
   ((-8*d*n3 + 6*d^2*n3 - 6*d*n3^2 + 16*n3*n6 - 16*d*n3*n6 + 12*n3^2*n6 + 
      8*n3*n6^2)*j[p4, 1 + n1, 0, 1 + n3, 0, 0, n6, 0, 1, 0, 1, 1, -1, 0, 1])/
    (-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 
     2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 
     16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 
     20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 8*n1*n3*n6 - 16*n3^2*n6 - 
     48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3) + 
   ((80*n3 - 180*d*n3 + 130*d^2*n3 - 30*d^3*n3 + 16*n1*n3 - 28*d*n1*n3 + 
      12*d^2*n1*n3 + 76*n3^2 - 118*d*n3^2 + 42*d^2*n3^2 + 12*n1*n3^2 - 
      12*d*n1*n3^2 + 12*n3^3 - 12*d*n3^3 + 136*n3*n6 - 188*d*n3*n6 + 
      62*d^2*n3*n6 + 24*n1*n3*n6 - 20*d*n1*n3*n6 + 96*n3^2*n6 - 
      62*d*n3^2*n6 + 12*n1*n3^2*n6 + 12*n3^3*n6 + 64*n3*n6^2 - 40*d*n3*n6^2 + 
      8*n1*n3*n6^2 + 20*n3^2*n6^2 + 8*n3*n6^3)*j[p4, 1 + n1, 0, 1 + n3, 0, 0, 
      n6, 0, 1, 0, 1, 1, -1, 1, 0])/((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 
      35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 
      148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 
      168*n6 + 200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 
      62*d*n3*n6 - 8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 
      4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3)) + 
   ((4*d*n3 - 3*d^2*n3 + 3*d*n3^2 - 8*n3*n6 + 8*d*n3*n6 - 6*n3^2*n6 - 
      4*n3*n6^2)*j[p4, 1 + n1, 0, 1 + n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 0, 1])/
    (-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 
     2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 
     16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 
     20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 8*n1*n3*n6 - 16*n3^2*n6 - 
     48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3) + 
   ((-40*n3 + 90*d*n3 - 65*d^2*n3 + 15*d^3*n3 - 8*n1*n3 + 14*d*n1*n3 - 
      6*d^2*n1*n3 - 38*n3^2 + 59*d*n3^2 - 21*d^2*n3^2 - 6*n1*n3^2 + 
      6*d*n1*n3^2 - 6*n3^3 + 6*d*n3^3 - 68*n3*n6 + 94*d*n3*n6 - 
      31*d^2*n3*n6 - 12*n1*n3*n6 + 10*d*n1*n3*n6 - 48*n3^2*n6 + 
      31*d*n3^2*n6 - 6*n1*n3^2*n6 - 6*n3^3*n6 - 32*n3*n6^2 + 20*d*n3*n6^2 - 
      4*n1*n3*n6^2 - 10*n3^2*n6^2 - 4*n3*n6^3)*j[p4, 1 + n1, 0, 1 + n3, 0, 0, 
      n6, 0, 1, 0, 1, 1, 0, 1, 0])/((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 
      35*d^3 - 48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 
      148*d*n3 - 49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 
      168*n6 + 200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 
      62*d*n3*n6 - 8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 
      4*n1*n6^2 - 16*n3*n6^2 - 4*n6^3)) + 
   ((40 - 78*d + 52*d^2 - 12*d^3 + 48*n1 - 88*d*n1 + 55*d^2*n1 - 12*d^3*n1 + 
      8*n1^2 - 10*d*n1^2 + 3*d^2*n1^2 + 38*n3 - 50*d*n3 + 18*d^2*n3 + 
      44*n1*n3 - 53*d*n1*n3 + 18*d^2*n1*n3 + 6*n1^2*n3 - 3*d*n1^2*n3 + 
      6*n3^2 - 6*d*n3^2 + 6*n1*n3^2 - 6*d*n1*n3^2 + 44*n6 - 62*d*n6 + 
      23*d^2*n6 + 48*n1*n6 - 64*d*n1*n6 + 23*d^2*n1*n6 + 4*n1^2*n6 - 
      2*d*n1^2*n6 + 30*n3*n6 - 25*d*n3*n6 + 30*n1*n3*n6 - 25*d*n1*n3*n6 + 
      6*n3^2*n6 + 6*n1*n3^2*n6 + 20*n6^2 - 16*d*n6^2 + 20*n1*n6^2 - 
      16*d*n1*n6^2 + 10*n3*n6^2 + 10*n1*n3*n6^2 + 4*n6^3 + 4*n1*n6^3)*
     j[p4, 2 + n1, -1, n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((-40 + 90*d - 65*d^2 + 15*d^3 - 48*n1 + 104*d*n1 - 71*d^2*n1 + 
      15*d^3*n1 - 8*n1^2 + 14*d*n1^2 - 6*d^2*n1^2 - 38*n3 + 59*d*n3 - 
      21*d^2*n3 - 44*n1*n3 + 65*d*n1*n3 - 21*d^2*n1*n3 - 6*n1^2*n3 + 
      6*d*n1^2*n3 - 6*n3^2 + 6*d*n3^2 - 6*n1*n3^2 + 6*d*n1*n3^2 - 68*n6 + 
      94*d*n6 - 31*d^2*n6 - 80*n1*n6 + 104*d*n1*n6 - 31*d^2*n1*n6 - 
      12*n1^2*n6 + 10*d*n1^2*n6 - 48*n3*n6 + 31*d*n3*n6 - 54*n1*n3*n6 + 
      31*d*n1*n3*n6 - 6*n1^2*n3*n6 - 6*n3^2*n6 - 6*n1*n3^2*n6 - 32*n6^2 + 
      20*d*n6^2 - 36*n1*n6^2 + 20*d*n1*n6^2 - 4*n1^2*n6^2 - 10*n3*n6^2 - 
      10*n1*n3*n6^2 - 4*n6^3 - 4*n1*n6^3)*j[p4, 2 + n1, 0, n3, 0, -1, n6, 0, 
      1, 0, 1, 1, 0, 0, 1])/((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 
      48*n1 + 60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 
      49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 
      200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((-40 + 78*d - 52*d^2 + 12*d^3 - 48*n1 + 88*d*n1 - 55*d^2*n1 + 12*d^3*n1 - 
      8*n1^2 + 10*d*n1^2 - 3*d^2*n1^2 - 38*n3 + 50*d*n3 - 18*d^2*n3 - 
      44*n1*n3 + 53*d*n1*n3 - 18*d^2*n1*n3 - 6*n1^2*n3 + 3*d*n1^2*n3 - 
      6*n3^2 + 6*d*n3^2 - 6*n1*n3^2 + 6*d*n1*n3^2 - 44*n6 + 62*d*n6 - 
      23*d^2*n6 - 48*n1*n6 + 64*d*n1*n6 - 23*d^2*n1*n6 - 4*n1^2*n6 + 
      2*d*n1^2*n6 - 30*n3*n6 + 25*d*n3*n6 - 30*n1*n3*n6 + 25*d*n1*n3*n6 - 
      6*n3^2*n6 - 6*n1*n3^2*n6 - 20*n6^2 + 16*d*n6^2 - 20*n1*n6^2 + 
      16*d*n1*n6^2 - 10*n3*n6^2 - 10*n1*n3*n6^2 - 4*n6^3 - 4*n1*n6^3)*
     j[p4, 2 + n1, 0, n3, 0, 0, n6, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((40 - 90*d + 65*d^2 - 15*d^3 + 48*n1 - 104*d*n1 + 71*d^2*n1 - 15*d^3*n1 + 
      8*n1^2 - 14*d*n1^2 + 6*d^2*n1^2 + 38*n3 - 59*d*n3 + 21*d^2*n3 + 
      44*n1*n3 - 65*d*n1*n3 + 21*d^2*n1*n3 + 6*n1^2*n3 - 6*d*n1^2*n3 + 
      6*n3^2 - 6*d*n3^2 + 6*n1*n3^2 - 6*d*n1*n3^2 + 68*n6 - 94*d*n6 + 
      31*d^2*n6 + 80*n1*n6 - 104*d*n1*n6 + 31*d^2*n1*n6 + 12*n1^2*n6 - 
      10*d*n1^2*n6 + 48*n3*n6 - 31*d*n3*n6 + 54*n1*n3*n6 - 31*d*n1*n3*n6 + 
      6*n1^2*n3*n6 + 6*n3^2*n6 + 6*n1*n3^2*n6 + 32*n6^2 - 20*d*n6^2 + 
      36*n1*n6^2 - 20*d*n1*n6^2 + 4*n1^2*n6^2 + 10*n3*n6^2 + 10*n1*n3*n6^2 + 
      4*n6^3 + 4*n1*n6^3)*j[p4, 2 + n1, 0, n3, 0, 0, n6, 0, 1, -1, 1, 1, 0, 
      0, 1])/((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 
      60*d*n1 - 19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 
      49*d^2*n3 - 20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 
      200*d*n6 - 59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((-40 + 78*d - 52*d^2 + 12*d^3 - 48*n1 + 88*d*n1 - 55*d^2*n1 + 12*d^3*n1 - 
      8*n1^2 + 10*d*n1^2 - 3*d^2*n1^2 - 38*n3 + 50*d*n3 - 18*d^2*n3 - 
      44*n1*n3 + 53*d*n1*n3 - 18*d^2*n1*n3 - 6*n1^2*n3 + 3*d*n1^2*n3 - 
      6*n3^2 + 6*d*n3^2 - 6*n1*n3^2 + 6*d*n1*n3^2 - 44*n6 + 62*d*n6 - 
      23*d^2*n6 - 48*n1*n6 + 64*d*n1*n6 - 23*d^2*n1*n6 - 4*n1^2*n6 + 
      2*d*n1^2*n6 - 30*n3*n6 + 25*d*n3*n6 - 30*n1*n3*n6 + 25*d*n1*n3*n6 - 
      6*n3^2*n6 - 6*n1*n3^2*n6 - 20*n6^2 + 16*d*n6^2 - 20*n1*n6^2 + 
      16*d*n1*n6^2 - 10*n3*n6^2 - 10*n1*n3*n6^2 - 4*n6^3 - 4*n1*n6^3)*
     j[p4, 2 + n1, 0, n3, 0, 0, n6, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)) + 
   ((40 - 78*d + 52*d^2 - 12*d^3 + 48*n1 - 88*d*n1 + 55*d^2*n1 - 12*d^3*n1 + 
      8*n1^2 - 10*d*n1^2 + 3*d^2*n1^2 + 38*n3 - 50*d*n3 + 18*d^2*n3 + 
      44*n1*n3 - 53*d*n1*n3 + 18*d^2*n1*n3 + 6*n1^2*n3 - 3*d*n1^2*n3 + 
      6*n3^2 - 6*d*n3^2 + 6*n1*n3^2 - 6*d*n1*n3^2 + 44*n6 - 62*d*n6 + 
      23*d^2*n6 + 48*n1*n6 - 64*d*n1*n6 + 23*d^2*n1*n6 + 4*n1^2*n6 - 
      2*d*n1^2*n6 + 30*n3*n6 - 25*d*n3*n6 + 30*n1*n3*n6 - 25*d*n1*n3*n6 + 
      6*n3^2*n6 + 6*n1*n3^2*n6 + 20*n6^2 - 16*d*n6^2 + 20*n1*n6^2 - 
      16*d*n1*n6^2 + 10*n3*n6^2 + 10*n1*n3*n6^2 + 4*n6^3 + 4*n1*n6^3)*
     j[p4, 2 + n1, 0, n3, 0, 0, n6, 0, 1, 0, 1, 0, 0, 1, 1])/
    ((-3 + d - n1)*(-140 + 270*d - 170*d^2 + 35*d^3 - 48*n1 + 60*d*n1 - 
      19*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 108*n3 + 148*d*n3 - 49*d^2*n3 - 
      20*n1*n3 + 14*d*n1*n3 - 16*n3^2 + 16*d*n3^2 - 168*n6 + 200*d*n6 - 
      59*d^2*n6 - 32*n1*n6 + 20*d*n1*n6 - 100*n3*n6 + 62*d*n3*n6 - 
      8*n1*n3*n6 - 16*n3^2*n6 - 48*n6^2 + 28*d*n6^2 - 4*n1*n6^2 - 
      16*n3*n6^2 - 4*n6^3)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n4 == 0 && n5 == 0 && n6 == 1 && n7 == 0 && n9 == 0 && 
     !(n8 == n10 || n8 == n10) -> 
  ((24*n10 - 38*d*n10 + 15*d^2*n10 + 16*n10^2 - 12*d*n10^2 + 28*n10*n3 - 
      22*d*n10*n3 + 8*n10^2*n3 + 8*n10*n3^2 + 12*n10*n8 - 10*d*n10*n8 + 
      8*n10^2*n8 + 8*n10*n3*n8)*j[p4, -1, 0, n3, 0, 0, 1, 0, n8, 0, 1 + n10, 
      1, 0, 0, 1])/(16*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((24*n8 - 38*d*n8 + 15*d^2*n8 + 12*n10*n8 - 10*d*n10*n8 + 28*n3*n8 - 
      22*d*n3*n8 + 8*n10*n3*n8 + 8*n3^2*n8 + 16*n8^2 - 12*d*n8^2 + 
      8*n10*n8^2 + 8*n3*n8^2)*j[p4, -1, 0, n3, 0, 0, 1, 0, 1 + n8, 0, n10, 1, 
      0, 0, 1])/(16*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((12*n3 - 22*d*n3 + 10*d^2*n3 + 10*n10*n3 - 9*d*n10*n3 + 20*n3^2 - 
      18*d*n3^2 + 8*n10*n3^2 + 8*n3^3 + 10*n3*n8 - 9*d*n3*n8 + 8*n10*n3*n8 + 
      8*n3^2*n8)*j[p4, -1, 0, 1 + n3, 0, 0, 1, 0, n8, 0, n10, 1, 0, 0, 1])/
    (8*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((-24*n10 + 38*d*n10 - 15*d^2*n10 - 16*n10^2 + 12*d*n10^2 - 28*n10*n3 + 
      22*d*n10*n3 - 8*n10^2*n3 - 8*n10*n3^2 - 12*n10*n8 + 10*d*n10*n8 - 
      8*n10^2*n8 - 8*n10*n3*n8)*j[p4, 0, -1, n3, 0, 0, 1, 0, n8, 0, 1 + n10, 
      0, 0, 1, 1])/(16*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((-24*n10 + 38*d*n10 - 15*d^2*n10 - 16*n10^2 + 12*d*n10^2 - 28*n10*n3 + 
      22*d*n10*n3 - 8*n10^2*n3 - 8*n10*n3^2 - 12*n10*n8 + 10*d*n10*n8 - 
      8*n10^2*n8 - 8*n10*n3*n8)*j[p4, 0, -1, n3, 0, 0, 1, 0, n8, 0, 1 + n10, 
      1, 0, 0, 1])/(16*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((-24*n8 + 38*d*n8 - 15*d^2*n8 - 12*n10*n8 + 10*d*n10*n8 - 28*n3*n8 + 
      22*d*n3*n8 - 8*n10*n3*n8 - 8*n3^2*n8 - 16*n8^2 + 12*d*n8^2 - 
      8*n10*n8^2 - 8*n3*n8^2)*j[p4, 0, -1, n3, 0, 0, 1, 0, 1 + n8, 0, n10, 0, 
      0, 1, 1])/(16*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((-24*n8 + 38*d*n8 - 15*d^2*n8 - 12*n10*n8 + 10*d*n10*n8 - 28*n3*n8 + 
      22*d*n3*n8 - 8*n10*n3*n8 - 8*n3^2*n8 - 16*n8^2 + 12*d*n8^2 - 
      8*n10*n8^2 - 8*n3*n8^2)*j[p4, 0, -1, n3, 0, 0, 1, 0, 1 + n8, 0, n10, 1, 
      0, 0, 1])/(16*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((-12*n3 + 22*d*n3 - 10*d^2*n3 - 10*n10*n3 + 9*d*n10*n3 - 20*n3^2 + 
      18*d*n3^2 - 8*n10*n3^2 - 8*n3^3 - 10*n3*n8 + 9*d*n3*n8 - 8*n10*n3*n8 - 
      8*n3^2*n8)*j[p4, 0, -1, 1 + n3, 0, 0, 1, 0, n8, 0, n10, 0, 0, 1, 1])/
    (8*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((-12*n3 + 22*d*n3 - 10*d^2*n3 - 10*n10*n3 + 9*d*n10*n3 - 20*n3^2 + 
      18*d*n3^2 - 8*n10*n3^2 - 8*n3^3 - 10*n3*n8 + 9*d*n3*n8 - 8*n10*n3*n8 - 
      8*n3^2*n8)*j[p4, 0, -1, 1 + n3, 0, 0, 1, 0, n8, 0, n10, 1, 0, 0, 1])/
    (8*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((24 - 38*d + 15*d^2 + 16*n10 - 12*d*n10 + 28*n3 - 22*d*n3 + 8*n10*n3 + 
      8*n3^2 + 12*n8 - 10*d*n8 + 8*n10*n8 + 8*n3*n8)*
     j[p4, 0, 0, -1 + n3, 0, 0, 0, 0, n8, 0, n10, 1, 0, 1, 2])/
    (16*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((24 - 38*d + 15*d^2 + 16*n10 - 12*d*n10 + 28*n3 - 22*d*n3 + 8*n10*n3 + 
      8*n3^2 + 12*n8 - 10*d*n8 + 8*n10*n8 + 8*n3*n8)*
     j[p4, 0, 0, -1 + n3, 0, 0, 1, 0, n8, 0, n10, 1, 0, 0, 2])/
    (16*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((16 - 24*d + 9*d^2 + 8*n10 - 6*d*n10 + 16*n3 - 12*d*n3 + 4*n10*n3 + 
      4*n3^2 + 8*n8 - 6*d*n8 + 4*n10*n8 + 4*n3*n8)*j[p4, 0, 0, -1 + n3, 0, 0, 
      1, 0, n8, 0, n10, 1, 0, 1, 1])/(4*(-1 + d - n10 - n3)*
     (-1 + d - n3 - n8)) + ((-24*n10 + 38*d*n10 - 15*d^2*n10 - 16*n10^2 + 
      12*d*n10^2 - 28*n10*n3 + 22*d*n10*n3 - 8*n10^2*n3 - 8*n10*n3^2 - 
      12*n10*n8 + 10*d*n10*n8 - 8*n10^2*n8 - 8*n10*n3*n8)*
     j[p4, 0, 0, -1 + n3, 0, 0, 1, 0, n8, 0, 1 + n10, 0, 0, 1, 1])/
    (16*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((-24 + 38*d - 15*d^2 - 16*n10 + 12*d*n10 - 28*n3 + 22*d*n3 - 8*n10*n3 - 
      8*n3^2 - 12*n8 + 10*d*n8 - 8*n10*n8 - 8*n3*n8)*
     j[p4, 0, 0, n3, -1, 0, 0, 0, n8, 0, n10, 1, 0, 1, 2])/
    (16*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((-24 + 38*d - 15*d^2 - 16*n10 + 12*d*n10 - 28*n3 + 22*d*n3 - 8*n10*n3 - 
      8*n3^2 - 12*n8 + 10*d*n8 - 8*n10*n8 - 8*n3*n8)*
     j[p4, 0, 0, n3, -1, 0, 1, 0, n8, 0, n10, 1, 0, 0, 2])/
    (16*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((-6 + 5*d - 4*n3 - 4*n8)*j[p4, 0, 0, n3, 0, 0, 0, 0, n8, -1, n10, 1, 0, 
      1, 2])/(8*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((12 - 16*d + 5*d^2 + 4*n10 - 2*d*n10 + 8*n3 - 4*d*n3 + 4*n8 - 2*d*n8)*
     j[p4, 0, 0, n3, 0, 0, 0, 0, n8, 0, n10, 1, 0, 1, 1])/
    (16*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((6 - 5*d + 4*n3 + 4*n8)*j[p4, 0, 0, n3, 0, 0, 0, 0, n8, 0, n10, 1, 0, 1, 
      2])/(8*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((24*n10 - 38*d*n10 + 15*d^2*n10 + 16*n10^2 - 12*d*n10^2 + 28*n10*n3 - 
      22*d*n10*n3 + 8*n10^2*n3 + 8*n10*n3^2 + 12*n10*n8 - 10*d*n10*n8 + 
      8*n10^2*n8 + 8*n10*n3*n8)*j[p4, 0, 0, n3, 0, 0, 1, -1, n8, 0, 1 + n10, 
      0, 0, 1, 1])/(16*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((24*n10 - 38*d*n10 + 15*d^2*n10 + 16*n10^2 - 12*d*n10^2 + 28*n10*n3 - 
      22*d*n10*n3 + 8*n10^2*n3 + 8*n10*n3^2 + 12*n10*n8 - 10*d*n10*n8 + 
      8*n10^2*n8 + 8*n10*n3*n8)*j[p4, 0, 0, n3, 0, 0, 1, -1, n8, 0, 1 + n10, 
      1, 0, 0, 1])/(16*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((24*n8 - 38*d*n8 + 15*d^2*n8 + 12*n10*n8 - 10*d*n10*n8 + 28*n3*n8 - 
      22*d*n3*n8 + 8*n10*n3*n8 + 8*n3^2*n8 + 16*n8^2 - 12*d*n8^2 + 
      8*n10*n8^2 + 8*n3*n8^2)*j[p4, 0, 0, n3, 0, 0, 1, -1, 1 + n8, 0, n10, 0, 
      0, 1, 1])/(16*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((24*n8 - 38*d*n8 + 15*d^2*n8 + 12*n10*n8 - 10*d*n10*n8 + 28*n3*n8 - 
      22*d*n3*n8 + 8*n10*n3*n8 + 8*n3^2*n8 + 16*n8^2 - 12*d*n8^2 + 
      8*n10*n8^2 + 8*n3*n8^2)*j[p4, 0, 0, n3, 0, 0, 1, -1, 1 + n8, 0, n10, 1, 
      0, 0, 1])/(16*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((-24 + 38*d - 15*d^2 - 8*n10 + 6*d*n10 - 28*n3 + 22*d*n3 - 4*n10*n3 - 
      8*n3^2 - 20*n8 + 16*d*n8 - 4*n10*n8 - 12*n3*n8 - 4*n8^2)*
     j[p4, 0, 0, n3, 0, 0, 1, 0, -1 + n8, 0, n10, 1, 0, 1, 1])/
    (4*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((24*n10 - 38*d*n10 + 15*d^2*n10 + 16*n10^2 - 12*d*n10^2 + 28*n10*n3 - 
      22*d*n10*n3 + 8*n10^2*n3 + 8*n10*n3^2 + 12*n10*n8 - 10*d*n10*n8 + 
      8*n10^2*n8 + 8*n10*n3*n8)*j[p4, 0, 0, n3, 0, 0, 1, 0, -1 + n8, 0, 
      1 + n10, 0, 0, 1, 1])/(16*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*
     (-n10 + n8)) + ((-6 + 5*d - 4*n3 - 4*n8)*j[p4, 0, 0, n3, 0, 0, 1, 0, n8, 
      -1, n10, 1, 0, 0, 2])/(8*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((24 - 38*d + 15*d^2 + 20*n10 - 16*d*n10 + 4*n10^2 + 28*n3 - 22*d*n3 + 
      12*n10*n3 + 8*n3^2 + 8*n8 - 6*d*n8 + 4*n10*n8 + 4*n3*n8)*
     j[p4, 0, 0, n3, 0, 0, 1, 0, n8, 0, -1 + n10, 1, 0, 1, 1])/
    (4*(1 - d + n10 + n3)*(n10 - n8)) + 
   ((-72 + 120*d - 50*d^2 - 72*n10 + 78*d*n10 - 15*d^2*n10 - 16*n10^2 + 
      12*d*n10^2 - 72*n3 + 48*d*n3 + 10*d^2*n3 - 52*n10*n3 + 18*d*n10*n3 - 
      8*n10^2*n3 - 16*n3^2 - 8*d*n3^2 - 8*n10*n3^2 + 24*n8 - 80*d*n8 + 
      50*d^2*n8 + 4*n10*n8 - 30*d*n10*n8 - 8*n10^2*n8 + 72*n3*n8 - 
      84*d*n3*n8 + 24*n10*n3*n8 + 32*n3^2*n8 + 48*n8^2 - 40*d*n8^2 + 
      32*n10*n8^2 + 32*n3*n8^2)*j[p4, 0, 0, n3, 0, 0, 1, 0, n8, 0, n10, 0, 0, 
      1, 1])/(16*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((-36 + 60*d - 25*d^2 - 12*n10 - 2*d*n10 + 10*d^2*n10 + 8*n10^2 - 
      8*d*n10^2 - 12*n3 - 14*d*n3 + 20*d^2*n3 + 22*n10*n3 - 31*d*n10*n3 + 
      8*n10^2*n3 + 20*n3^2 - 26*d*n3^2 + 16*n10*n3^2 + 8*n3^3 - 12*n8 - 
      2*d*n8 + 10*d^2*n8 + 8*n10*n8 - 20*d*n10*n8 + 8*n10^2*n8 + 22*n3*n8 - 
      31*d*n3*n8 + 24*n10*n3*n8 + 16*n3^2*n8 + 8*n8^2 - 8*d*n8^2 + 
      8*n10*n8^2 + 8*n3*n8^2)*j[p4, 0, 0, n3, 0, 0, 1, 0, n8, 0, n10, 1, 0, 
      0, 1])/(8*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((6 - 5*d + 4*n3 + 4*n8)*j[p4, 0, 0, n3, 0, 0, 1, 0, n8, 0, n10, 1, 0, 0, 
      2])/(8*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((-12 + 16*d - 5*d^2 - 4*n10 + 2*d*n10 - 8*n3 + 4*d*n3 - 4*n8 + 2*d*n8)*
     j[p4, 0, 0, n3, 0, 0, 1, 0, n8, 0, n10, 1, 0, 1, 0])/
    (16*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((-24*n10 + 38*d*n10 - 15*d^2*n10 - 16*n10^2 + 12*d*n10^2 - 28*n10*n3 + 
      22*d*n10*n3 - 8*n10^2*n3 - 8*n10*n3^2 - 12*n10*n8 + 10*d*n10*n8 - 
      8*n10^2*n8 - 8*n10*n3*n8)*j[p4, 0, 0, n3, 0, 0, 1, 0, n8, 0, 1 + n10, 
      0, -1, 1, 1])/(16*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((24*n10 - 38*d*n10 + 15*d^2*n10 + 16*n10^2 - 12*d*n10^2 + 28*n10*n3 - 
      22*d*n10*n3 + 8*n10^2*n3 + 8*n10*n3^2 + 12*n10*n8 - 10*d*n10*n8 + 
      8*n10^2*n8 + 8*n10*n3*n8)*j[p4, 0, 0, n3, 0, 0, 1, 0, n8, 0, 1 + n10, 
      0, 0, 1, 1])/(16*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((-24*n8 + 38*d*n8 - 15*d^2*n8 - 12*n10*n8 + 10*d*n10*n8 - 28*n3*n8 + 
      22*d*n3*n8 - 8*n10*n3*n8 - 8*n3^2*n8 - 16*n8^2 + 12*d*n8^2 - 
      8*n10*n8^2 - 8*n3*n8^2)*j[p4, 0, 0, n3, 0, 0, 1, 0, 1 + n8, 0, n10, 0, 
      -1, 1, 1])/(16*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((12 - 16*d + 5*d^2 + 4*n10 - 2*d*n10 + 8*n3 - 4*d*n3 + 4*n8 - 2*d*n8)*
     j[p4, 0, 0, n3, 0, 0, 2, 0, n8, -1, n10, 1, 0, 0, 1])/
    (16*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((12 - 16*d + 5*d^2 + 4*n10 - 2*d*n10 + 8*n3 - 4*d*n3 + 4*n8 - 2*d*n8)*
     j[p4, 0, 0, n3, 0, 0, 2, 0, n8, -1, n10, 1, 0, 1, 0])/
    (16*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((-12 + 16*d - 5*d^2 - 4*n10 + 2*d*n10 - 8*n3 + 4*d*n3 - 4*n8 + 2*d*n8)*
     j[p4, 0, 0, n3, 0, 0, 2, 0, n8, 0, -1 + n10, 1, 0, 0, 1])/
    (16*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((-12 + 16*d - 5*d^2 - 4*n10 + 2*d*n10 - 8*n3 + 4*d*n3 - 4*n8 + 2*d*n8)*
     j[p4, 0, 0, n3, 0, 0, 2, 0, n8, 0, -1 + n10, 1, 0, 1, 0])/
    (16*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((12*n3 - 22*d*n3 + 10*d^2*n3 + 10*n10*n3 - 9*d*n10*n3 + 20*n3^2 - 
      18*d*n3^2 + 8*n10*n3^2 + 8*n3^3 + 10*n3*n8 - 9*d*n3*n8 + 8*n10*n3*n8 + 
      8*n3^2*n8)*j[p4, 0, 0, 1 + n3, 0, 0, 1, -1, n8, 0, n10, 0, 0, 1, 1])/
    (8*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((12*n3 - 22*d*n3 + 10*d^2*n3 + 10*n10*n3 - 9*d*n10*n3 + 20*n3^2 - 
      18*d*n3^2 + 8*n10*n3^2 + 8*n3^3 + 10*n3*n8 - 9*d*n3*n8 + 8*n10*n3*n8 + 
      8*n3^2*n8)*j[p4, 0, 0, 1 + n3, 0, 0, 1, -1, n8, 0, n10, 1, 0, 0, 1])/
    (8*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((12*n3 - 22*d*n3 + 10*d^2*n3 + 10*n10*n3 - 9*d*n10*n3 + 20*n3^2 - 
      18*d*n3^2 + 8*n10*n3^2 + 8*n3^3 + 10*n3*n8 - 9*d*n3*n8 + 8*n10*n3*n8 + 
      8*n3^2*n8)*j[p4, 0, 0, 1 + n3, 0, 0, 1, 0, -1 + n8, 0, n10, 0, 0, 1, 
      1])/(4*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((12*n3 - 22*d*n3 + 10*d^2*n3 + 10*n10*n3 - 9*d*n10*n3 + 20*n3^2 - 
      18*d*n3^2 + 8*n10*n3^2 + 8*n3^3 + 10*n3*n8 - 9*d*n3*n8 + 8*n10*n3*n8 + 
      8*n3^2*n8)*j[p4, 0, 0, 1 + n3, 0, 0, 1, 0, -1 + n8, 0, n10, 1, 0, 0, 
      1])/(8*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((12*n3 - 22*d*n3 + 10*d^2*n3 + 10*n10*n3 - 9*d*n10*n3 + 20*n3^2 - 
      18*d*n3^2 + 8*n10*n3^2 + 8*n3^3 + 10*n3*n8 - 9*d*n3*n8 + 8*n10*n3*n8 + 
      8*n3^2*n8)*j[p4, 0, 0, 1 + n3, 0, 0, 1, 0, n8, 0, -1 + n10, 1, 0, 0, 
      1])/(8*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((-12*n3 + 22*d*n3 - 10*d^2*n3 - 10*n10*n3 + 9*d*n10*n3 - 20*n3^2 + 
      18*d*n3^2 - 8*n10*n3^2 - 8*n3^3 - 10*n3*n8 + 9*d*n3*n8 - 8*n10*n3*n8 - 
      8*n3^2*n8)*j[p4, 0, 0, 1 + n3, 0, 0, 1, 0, n8, 0, n10, 0, -1, 1, 1])/
    (8*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)) + 
   ((-12*n3 + 22*d*n3 - 10*d^2*n3 - 10*n10*n3 + 9*d*n10*n3 - 20*n3^2 + 
      18*d*n3^2 - 8*n10*n3^2 - 8*n3^3 - 10*n3*n8 + 9*d*n3*n8 - 8*n10*n3*n8 - 
      8*n3^2*n8)*j[p4, 0, 0, 1 + n3, 0, 0, 1, 0, n8, 0, n10, 1, 0, 0, 1])/
    (8*(-1 + d - n10 - n3)*(-1 + d - n3 - n8)*(-n10 + n8)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n4 == 0 && n5 == 0 && n6 == 1 && n7 == 0 && n9 == 0 && 
     !(n2 == 0 || n8 == 1) -> 
  j[p4, -1, 1 + n2, n3, 0, 0, 1, 0, n8, 0, 0, 2, 0, 1, 1]/(-3 + d - n2) + 
   ((88 - 77*d + 15*d^2 + 62*n2 - 29*d*n2 + 10*n2^2 + 10*n3 + 10*n2*n3 - 
      8*n3^2 + 40*n8 - 12*d*n8 + 16*n2*n8)*j[p4, -1, 1 + n2, n3, 0, 0, 1, 0, 
      n8, 0, 1, 1, 0, 1, 1])/(2*(-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((-2 - 2*n2 + 2*n3)*j[p4, -1, 1 + n2, n3, 0, 0, 1, 0, n8, 0, 2, 1, 0, 0, 
      1])/((-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) - 
   (n8*j[p4, -1, 1 + n2, n3, 0, 0, 1, 0, 1 + n8, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n2)) - (n3*j[p4, -1, 1 + n2, 1 + n3, 0, 0, 1, 0, -1 + n8, 0, 
      1, 1, 0, 1, 1])/(-3 + d - n2) - 
   (n3*j[p4, -1, 1 + n2, 1 + n3, 0, 0, 1, 0, n8, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n2)) + ((-12 + 3*d - 18*n2 + 3*d*n2 - 6*n2^2 + 2*n3 + 
      2*n2*n3)*j[p4, -1, 2 + n2, -1 + n3, 0, 0, 1, 0, n8, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((1 + n2)*j[p4, -1, 2 + n2, n3, 0, 0, 1, -1, n8, 0, 1, 1, 0, 1, 1])/
    (3 - d + n2) + ((1 + n2)*j[p4, -1, 2 + n2, n3, 0, 0, 1, 0, -1 + n8, 0, 1, 
      1, 0, 1, 1])/(2*(3 - d + n2)) + 
   ((-1 - n2)*j[p4, -1, 2 + n2, n3, 0, 0, 1, 0, n8, 0, 1, 1, -1, 1, 1])/
    (3 - d + n2) + ((2 + 2*n2)*j[p4, -1, 2 + n2, n3, 0, 0, 1, 0, n8, 0, 1, 1, 
      0, 0, 1])/(3 - d + n2) + 
   ((2 + 2*n2 - 2*n3)*j[p4, 0, n2, n3, 0, 0, 1, 0, n8, 0, 2, 0, 0, 1, 1])/
    ((-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((2 + 2*n2 - 2*n3)*j[p4, 0, n2, n3, 0, 0, 1, 0, n8, 0, 2, 1, 0, 0, 1])/
    ((-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   (n8*j[p4, 0, n2, n3, 0, 0, 1, 0, 1 + n8, 0, 1, 0, 0, 1, 1])/
    (2*(-3 + d - n2)) + (n8*j[p4, 0, n2, n3, 0, 0, 1, 0, 1 + n8, 0, 1, 1, 0, 
      0, 1])/(2*(-3 + d - n2)) + 
   ((-1 - n2 + n3)*j[p4, 0, n2, n3, 0, 0, 2, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((1 + n2 - n3)*j[p4, 0, n2, n3, 0, 0, 2, 0, n8, 0, 0, 1, 0, 1, 1])/
    ((-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) - 
   (n3*j[p4, 0, n2, 1 + n3, 0, 0, 1, 0, n8, 0, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n2)) + (n3*j[p4, 0, n2, 1 + n3, 0, 0, 1, 0, n8, 0, 1, 0, 0, 
      1, 1])/(2*(-3 + d - n2)) + 
   (n3*j[p4, 0, n2, 1 + n3, 0, 0, 1, 0, n8, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n2)) + ((-2 - 2*n2 + 2*n3)*j[p4, 0, 1 + n2, -1 + n3, 0, 0, 
      0, 0, n8, 0, 1, 1, 0, 1, 2])/((-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((-2 - 2*n2 + 2*n3)*j[p4, 0, 1 + n2, -1 + n3, 0, 0, 1, 0, n8, 0, 1, 1, 0, 
      0, 2])/((-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((-3 + d - 2*n2 + n3 - n8)*j[p4, 0, 1 + n2, -1 + n3, 0, 0, 1, 0, n8, 0, 1, 
      1, 0, 1, 1])/(-3 + d - n2) + 
   ((2 + 2*n2 - 2*n3)*j[p4, 0, 1 + n2, -1 + n3, 0, 0, 1, 0, n8, 0, 2, 0, 0, 
      1, 1])/((-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((-1 - n2 + n3)*j[p4, 0, 1 + n2, -1 + n3, 0, 0, 2, 0, -1 + n8, 0, 1, 1, 0, 
      1, 1])/((-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((1 + n2 - n3)*j[p4, 0, 1 + n2, -1 + n3, 0, 0, 2, 0, n8, 0, 0, 1, 0, 1, 
      1])/((-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((2 + 2*n2 - 2*n3)*j[p4, 0, 1 + n2, n3, -1, 0, 0, 0, n8, 0, 1, 1, 0, 1, 
      2])/((-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((2 + 2*n2 - 2*n3)*j[p4, 0, 1 + n2, n3, -1, 0, 1, 0, n8, 0, 1, 1, 0, 0, 
      2])/((-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((2 + 2*n2 - 2*n3)*j[p4, 0, 1 + n2, n3, -1, 0, 2, 0, n8, 0, 0, 1, 0, 1, 
      1])/((-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((-1 - n2 + n3)*j[p4, 0, 1 + n2, n3, 0, 0, 0, 0, n8, -1, 1, 1, 0, 1, 2])/
    ((-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((-1 - n2 + n3)*j[p4, 0, 1 + n2, n3, 0, 0, 0, 0, n8, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((1 + n2 - n3)*j[p4, 0, 1 + n2, n3, 0, 0, 0, 0, n8, 0, 1, 1, 0, 1, 2])/
    ((-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((-2 - 2*n2 + 2*n3)*j[p4, 0, 1 + n2, n3, 0, 0, 1, -1, n8, 0, 2, 0, 0, 1, 
      1])/((-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((-2 - 2*n2 + 2*n3)*j[p4, 0, 1 + n2, n3, 0, 0, 1, -1, n8, 0, 2, 1, 0, 0, 
      1])/((-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) - 
   (n8*j[p4, 0, 1 + n2, n3, 0, 0, 1, -1, 1 + n8, 0, 1, 0, 0, 1, 1])/
    (2*(-3 + d - n2)) - (n8*j[p4, 0, 1 + n2, n3, 0, 0, 1, -1, 1 + n8, 0, 1, 
      1, 0, 0, 1])/(2*(-3 + d - n2)) - 
   j[p4, 0, 1 + n2, n3, 0, 0, 1, 0, -1 + n8, 0, 0, 2, 0, 1, 1]/
    (-3 + d - n2) + ((50 - 84*d + 32*d^2 - 3*d^3 + 26*n2 - 44*d*n2 + 
      11*d^2*n2 - 2*d*n2^2 + 42*n3 - 19*d*n3 - d^2*n3 + 42*n2*n3 - 
      21*d*n2*n3 + 2*n2^2*n3 - 14*n3^2 + 12*d*n3^2 + 10*n2*n3^2 - 8*n3^3 + 
      38*n8 - 4*d*n8 - 3*d^2*n8 + 30*n2*n8 - 4*d*n2*n8 + 4*n2^2*n8 + 
      2*n3*n8 + 2*d*n3*n8 + 4*n2*n3*n8 - 16*n8^2 + 6*d*n8^2 - 4*n2*n8^2 - 
      4*n3*n8^2)*j[p4, 0, 1 + n2, n3, 0, 0, 1, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)*(-1 + n8)) + 
   ((-2 - 2*n2 + 2*n3)*j[p4, 0, 1 + n2, n3, 0, 0, 1, 0, -1 + n8, 0, 2, 0, 0, 
      1, 1])/((-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((-1 - n2 + n3)*j[p4, 0, 1 + n2, n3, 0, 0, 1, 0, n8, -1, 1, 1, 0, 0, 2])/
    ((-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((2 - 3*d - 4*n2 + 12*n3 + 4*n2*n3 - 4*n3^2)*j[p4, 0, 1 + n2, n3, 0, 0, 1, 
      0, n8, 0, 0, 1, 0, 1, 1])/(2*(-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   j[p4, 0, 1 + n2, n3, 0, 0, 1, 0, n8, 0, 0, 2, -1, 1, 1]/
    (2*(-3 + d - n2)) - j[p4, 0, 1 + n2, n3, 0, 0, 1, 0, n8, 0, 0, 2, 0, 1, 
     1]/(2*(-3 + d - n2)) + ((2 + 2*n2 - 4*n3 - 2*n2*n3 + 2*n3^2)*
     j[p4, 0, 1 + n2, n3, 0, 0, 1, 0, n8, 0, 1, 0, 0, 1, 1])/
    ((-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((8 - 11*d + 3*d^2 + 14*n2 - 5*d*n2 + 6*n2^2 - 10*n3 + d*n3 - 8*n2*n3 + 
      2*n3^2 + 24*n8 - 6*d*n8 + 12*n2*n8 - 4*n3*n8)*
     j[p4, 0, 1 + n2, n3, 0, 0, 1, 0, n8, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((1 + n2 - n3)*j[p4, 0, 1 + n2, n3, 0, 0, 1, 0, n8, 0, 1, 1, 0, 0, 2])/
    ((-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((1 + n2 - n3)*j[p4, 0, 1 + n2, n3, 0, 0, 1, 0, n8, 0, 1, 1, 0, 1, 0])/
    ((-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((-32 + 31*d - 6*d^2 - 26*n2 + 13*d*n2 - 6*n2^2 - 2*n3 - 2*d*n3 - 
      2*n2*n3 + 4*n3^2 - 24*n8 + 6*d*n8 - 12*n2*n8 + 4*n3*n8)*
     j[p4, 0, 1 + n2, n3, 0, 0, 1, 0, n8, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((2 + 2*n2 - 2*n3)*j[p4, 0, 1 + n2, n3, 0, 0, 1, 0, n8, 0, 2, 0, -1, 1, 
      1])/((-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((-2 - 2*n2 + 2*n3)*j[p4, 0, 1 + n2, n3, 0, 0, 1, 0, n8, 0, 2, 0, 0, 1, 
      1])/((-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   (n8*j[p4, 0, 1 + n2, n3, 0, 0, 1, 0, 1 + n8, 0, 1, 0, -1, 1, 1])/
    (2*(-3 + d - n2)) + ((1 + n2 - n3)*j[p4, 0, 1 + n2, n3, 0, 0, 2, -1, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/((-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((-1 - n2 + n3)*j[p4, 0, 1 + n2, n3, 0, 0, 2, -1, n8, 0, 0, 1, 0, 1, 1])/
    ((-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((1 + n2 - n3)*j[p4, 0, 1 + n2, n3, 0, 0, 2, 0, -2 + n8, 0, 1, 1, 0, 1, 
      1])/((-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((-2 - 2*n2 + 2*n3)*j[p4, 0, 1 + n2, n3, 0, 0, 2, 0, -1 + n8, -1, 1, 1, 0, 
      1, 1])/((-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((-1 - n2 + n3)*j[p4, 0, 1 + n2, n3, 0, 0, 2, 0, -1 + n8, 0, 0, 1, 0, 1, 
      1])/((-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((-1 - n2 + n3)*j[p4, 0, 1 + n2, n3, 0, 0, 2, 0, -1 + n8, 0, 1, 1, -1, 1, 
      1])/((-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((1 + n2 - n3)*j[p4, 0, 1 + n2, n3, 0, 0, 2, 0, -1 + n8, 0, 1, 1, 0, 0, 
      1])/((-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((1 + n2 - n3)*j[p4, 0, 1 + n2, n3, 0, 0, 2, 0, -1 + n8, 0, 1, 1, 0, 1, 
      0])/((-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((-1 - n2 + n3)*j[p4, 0, 1 + n2, n3, 0, 0, 2, 0, n8, -1, 1, 1, 0, 0, 1])/
    ((-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((-1 - n2 + n3)*j[p4, 0, 1 + n2, n3, 0, 0, 2, 0, n8, -1, 1, 1, 0, 1, 0])/
    ((-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((1 + n2 - n3)*j[p4, 0, 1 + n2, n3, 0, 0, 2, 0, n8, 0, 0, 1, -1, 1, 1])/
    ((-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((4*n3 + 11*d*n3 - 3*d^2*n3 - 10*n2*n3 + 11*d*n2*n3 - 2*n2^2*n3 - 2*n3^2 - 
      4*d*n3^2 - 10*n2*n3^2 + 8*n3^3 - 40*n3*n8 + 12*d*n3*n8 - 16*n2*n3*n8)*
     j[p4, 0, 1 + n2, 1 + n3, 0, 0, 1, -1, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)*(-1 + n8)) + 
   (n3*j[p4, 0, 1 + n2, 1 + n3, 0, 0, 1, -1, n8, 0, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n2)) - (n3*j[p4, 0, 1 + n2, 1 + n3, 0, 0, 1, -1, n8, 0, 1, 
      0, 0, 1, 1])/(2*(-3 + d - n2)) - 
   (n3*j[p4, 0, 1 + n2, 1 + n3, 0, 0, 1, -1, n8, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n2)) + (n3*j[p4, 0, 1 + n2, 1 + n3, 0, 0, 1, 0, -2 + n8, 0, 
      1, 1, 0, 1, 1])/(-3 + d - n2) - 
   (n3*j[p4, 0, 1 + n2, 1 + n3, 0, 0, 1, 0, -1 + n8, 0, 1, 1, -1, 1, 1])/
    (-3 + d - n2) + ((4*n3 - 14*d*n3 + 3*d^2*n3 + 12*n2*n3 - 11*d*n2*n3 + 
      2*n2^2*n3 + 4*n3^2 + 4*d*n3^2 + 10*n2*n3^2 - 8*n3^3 + 32*n3*n8 - 
      9*d*n3*n8 + 14*n2*n3*n8 - 2*n3^2*n8)*j[p4, 0, 1 + n2, 1 + n3, 0, 0, 1, 
      0, -1 + n8, 0, 1, 1, 0, 0, 1])/(2*(-3 + d - n2)*
     (-8 + 3*d - 2*n2 - 2*n3)*(-1 + n8)) + 
   (n3*j[p4, 0, 1 + n2, 1 + n3, 0, 0, 1, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (-3 + d - n2) - (n3*j[p4, 0, 1 + n2, 1 + n3, 0, 0, 1, 0, n8, 0, 0, 1, -1, 
      1, 1])/(2*(-3 + d - n2)) + 
   (n3*j[p4, 0, 1 + n2, 1 + n3, 0, 0, 1, 0, n8, 0, 1, 0, -1, 1, 1])/
    (2*(-3 + d - n2)) + (n3*j[p4, 0, 1 + n2, 1 + n3, 0, 0, 1, 0, n8, 0, 1, 1, 
      0, 0, 1])/(2*(-3 + d - n2)) + 
   ((-28 + 20*d - 3*d^2 - 52*n2 + 31*d*n2 - 3*d^2*n2 - 26*n2^2 + 11*d*n2^2 - 
      2*n2^3 - 4*d*n3 - 10*n2*n3 - 4*d*n2*n3 - 10*n2^2*n3 + 8*n3^2 + 
      8*n2*n3^2 - 8*n8 + 3*d*n8 - 10*n2*n8 + 3*d*n2*n8 - 2*n2^2*n8 - 
      2*n3*n8 - 2*n2*n3*n8)*j[p4, 0, 2 + n2, -1 + n3, 0, 0, 1, 0, -1 + n8, 0, 
      1, 1, 0, 1, 1])/(2*(-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)*(-1 + n8)) + 
   ((-4 + 3*d - 2*n2 + 3*d*n2 + 2*n2^2 - 6*n3 - 6*n2*n3)*
     j[p4, 0, 2 + n2, -1 + n3, 0, 0, 1, 0, n8, 0, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((28 - 20*d + 3*d^2 + 52*n2 - 31*d*n2 + 3*d^2*n2 + 26*n2^2 - 11*d*n2^2 + 
      2*n2^3 + 4*d*n3 + 10*n2*n3 + 4*d*n2*n3 + 10*n2^2*n3 - 8*n3^2 - 
      8*n2*n3^2 + 8*n8 - 3*d*n8 + 10*n2*n8 - 3*d*n2*n8 + 2*n2^2*n8 + 
      2*n3*n8 + 2*n2*n3*n8)*j[p4, 0, 2 + n2, n3, 0, 0, 1, -1, -1 + n8, 0, 1, 
      1, 0, 1, 1])/(2*(-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)*(-1 + n8)) + 
   ((1 + n2)*j[p4, 0, 2 + n2, n3, 0, 0, 1, -1, n8, 0, 0, 1, 0, 1, 1])/
    (2*(3 - d + n2)) + ((-4 - 8*n2 - 4*n2^2 + 4*n3 + 4*n2*n3)*
     j[p4, 0, 2 + n2, n3, 0, 0, 1, -1, n8, 0, 1, 1, 0, 0, 1])/
    ((-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((-4 + 3*d - 2*n2 + 3*d*n2 + 2*n2^2 - 6*n3 - 6*n2*n3)*
     j[p4, 0, 2 + n2, n3, 0, 0, 1, -1, n8, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((28 - 20*d + 3*d^2 + 52*n2 - 31*d*n2 + 3*d^2*n2 + 26*n2^2 - 11*d*n2^2 + 
      2*n2^3 + 4*d*n3 + 10*n2*n3 + 4*d*n2*n3 + 10*n2^2*n3 - 8*n3^2 - 
      8*n2*n3^2 + 8*n8 - 3*d*n8 + 10*n2*n8 - 3*d*n2*n8 + 2*n2^2*n8 + 
      2*n3*n8 + 2*n2*n3*n8)*j[p4, 0, 2 + n2, n3, 0, 0, 1, 0, -2 + n8, 0, 1, 
      1, 0, 1, 1])/(2*(-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)*(-1 + n8)) + 
   ((-28 + 20*d - 3*d^2 - 52*n2 + 31*d*n2 - 3*d^2*n2 - 26*n2^2 + 11*d*n2^2 - 
      2*n2^3 - 4*d*n3 - 10*n2*n3 - 4*d*n2*n3 - 10*n2^2*n3 + 8*n3^2 + 
      8*n2*n3^2 - 8*n8 + 3*d*n8 - 10*n2*n8 + 3*d*n2*n8 - 2*n2^2*n8 - 
      2*n3*n8 - 2*n2*n3*n8)*j[p4, 0, 2 + n2, n3, 0, 0, 1, 0, -1 + n8, 0, 1, 
      1, -1, 1, 1])/(2*(-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)*(-1 + n8)) + 
   ((24 - 20*d + 3*d^2 + 44*n2 - 31*d*n2 + 3*d^2*n2 + 22*n2^2 - 11*d*n2^2 + 
      2*n2^3 + 4*n3 + 4*d*n3 + 14*n2*n3 + 4*d*n2*n3 + 10*n2^2*n3 - 8*n3^2 - 
      8*n2*n3^2 + 12*n8 - 3*d*n8 + 18*n2*n8 - 3*d*n2*n8 + 6*n2^2*n8 - 
      2*n3*n8 - 2*n2*n3*n8)*j[p4, 0, 2 + n2, n3, 0, 0, 1, 0, -1 + n8, 0, 1, 
      1, 0, 0, 1])/((-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)*(-1 + n8)) + 
   ((4 - 3*d + 2*n2 - 3*d*n2 - 2*n2^2 + 6*n3 + 6*n2*n3)*
     j[p4, 0, 2 + n2, n3, 0, 0, 1, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n2)*(-8 + 3*d - 2*n2 - 2*n3)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && n4 == 0 && 
    n5 == 0 && n6 == 1 && n7 == 0 && n8 == 1 && n9 == 0 && n11 != 1 -> 
  ((-4*n10 + 5*d*n10 - 4*n10^2 - 2*n10*n11 - 4*n10*n3)*
     j[p4, -1, 0, n3, 0, 0, 1, 0, 0, 0, 1 + n10, n11, 0, 1, 1])/
    (4*(-2 + d - n3)*(-d + n10 + n11 + n3)) + 
   ((-4*n10 + 5*d*n10 - 4*n10^2 - 2*n10*n11 - 4*n10*n3)*
     j[p4, -1, 0, n3, 0, 0, 1, 0, 1, 0, 1 + n10, n11, 0, 0, 1])/
    (4*(-2 + d - n3)*(-d + n10 + n11 + n3)) + 
   ((4 - 3*d + 2*n10 + 2*n3)*j[p4, -1, 0, n3, 0, 0, 1, 0, 2, 0, n10, n11, 0, 
      0, 1])/(4*(-2 + d - n3)*(d - n10 - n11 - n3)) - 
   (n3*j[p4, -1, 0, 1 + n3, 0, 0, 1, 0, 0, 0, n10, n11, 0, 1, 1])/
    (-2 + d - n3) - (n3*j[p4, -1, 0, 1 + n3, 0, 0, 1, 0, 1, 0, n10, n11, 0, 
      0, 1])/(2*(-2 + d - n3)) + 
   ((4*n10 - 5*d*n10 + 4*n10^2 + 2*n10*n11 + 4*n10*n3)*
     j[p4, 0, -1, n3, 0, 0, 1, 0, 0, 0, 1 + n10, n11, 0, 1, 1])/
    (4*(-2 + d - n3)*(-d + n10 + n11 + n3)) + 
   ((4*n10 - 5*d*n10 + 4*n10^2 + 2*n10*n11 + 4*n10*n3)*
     j[p4, 0, -1, n3, 0, 0, 1, 0, 1, 0, 1 + n10, n11, 0, 0, 1])/
    (4*(-2 + d - n3)*(-d + n10 + n11 + n3)) + 
   ((-4 + 3*d - 2*n10 - 2*n3)*j[p4, 0, -1, n3, 0, 0, 1, 0, 2, 0, n10, n11, 0, 
      0, 1])/(4*(-2 + d - n3)*(d - n10 - n11 - n3)) + 
   (n3*j[p4, 0, -1, 1 + n3, 0, 0, 1, 0, 0, 0, n10, n11, 0, 1, 1])/
    (2*(-2 + d - n3)) + (n3*j[p4, 0, -1, 1 + n3, 0, 0, 1, 0, 1, 0, n10, n11, 
      0, 0, 1])/(2*(-2 + d - n3)) + ((4 - 5*d + 4*n10 + 2*n11 + 4*n3)*
     j[p4, 0, 0, -1 + n3, 0, 0, 0, 0, 1, 0, n10, n11, 0, 1, 2])/
    (4*(-2 + d - n3)*(d - n10 - n11 - n3)) + 
   ((4 - 5*d + 4*n10 + 2*n11 + 4*n3)*j[p4, 0, 0, -1 + n3, 0, 0, 1, 0, 0, 0, 
      n10, n11, 0, 1, 2])/(4*(-2 + d - n3)*(d - n10 - n11 - n3)) + 
   ((4 - 3*d + 2*n10 + 2*n3)*j[p4, 0, 0, -1 + n3, 0, 0, 1, 0, 0, 0, n10, n11, 
      0, 2, 1])/(4*(-2 + d - n3)*(d - n10 - n11 - n3)) + 
   ((4 - 5*d + 4*n10 + 2*n11 + 4*n3)*j[p4, 0, 0, -1 + n3, 0, 0, 1, 0, 1, 0, 
      n10, n11, 0, 0, 2])/(4*(-2 + d - n3)*(d - n10 - n11 - n3)) + 
   ((4*d - 3*d^2 - 8*n10 + 8*d*n10 - 4*n10^2 - 4*n3 + 5*d*n3 - 6*n10*n3 - 
      2*n3^2)*j[p4, 0, 0, -1 + n3, 0, 0, 1, 0, 1, 0, n10, n11, 0, 1, 1])/
    (2*(-2 + d - n3)*(d - n10 - n11 - n3)) + 
   ((-4 + 5*d - 4*n10 - 2*n11 - 4*n3)*j[p4, 0, 0, n3, -1, 0, 0, 0, 1, 0, n10, 
      n11, 0, 1, 2])/(4*(-2 + d - n3)*(d - n10 - n11 - n3)) + 
   ((-4 + 5*d - 4*n10 - 2*n11 - 4*n3)*j[p4, 0, 0, n3, -1, 0, 1, 0, 0, 0, n10, 
      n11, 0, 1, 2])/(4*(-2 + d - n3)*(d - n10 - n11 - n3)) + 
   ((-4 + 5*d - 4*n10 - 2*n11 - 4*n3)*j[p4, 0, 0, n3, -1, 0, 1, 0, 1, 0, n10, 
      n11, 0, 0, 2])/(4*(-2 + d - n3)*(d - n10 - n11 - n3)) - 
   j[p4, 0, 0, n3, 0, 0, 0, 0, 1, -1, n10, n11, 0, 1, 2]/(2*(-2 + d - n3)) + 
   ((4 - 3*d + 2*n10 + 2*n3)*j[p4, 0, 0, n3, 0, 0, 0, 0, 1, 0, n10, n11, 0, 
      1, 1])/(4*(-2 + d - n3)*(d - n10 - n11 - n3)) + 
   j[p4, 0, 0, n3, 0, 0, 0, 0, 1, 0, n10, n11, 0, 1, 2]/(2*(-2 + d - n3)) + 
   ((-4 + 3*d - 2*n10 - 2*n3)*j[p4, 0, 0, n3, 0, 0, 1, -1, 0, 0, n10, n11, 0, 
      2, 1])/(4*(-2 + d - n3)*(d - n10 - n11 - n3)) + 
   ((-4*n11 + 3*d*n11 - 2*n10*n11 - 2*n11*n3)*j[p4, 0, 0, n3, 0, 0, 1, -1, 0, 
      0, n10, 1 + n11, 0, 1, 1])/(4*(-2 + d - n3)*(-d + n10 + n11 + n3)) + 
   ((-4*n10 + 5*d*n10 - 4*n10^2 - 2*n10*n11 - 4*n10*n3)*
     j[p4, 0, 0, n3, 0, 0, 1, -1, 0, 0, 1 + n10, n11, 0, 1, 1])/
    (4*(-2 + d - n3)*(-d + n10 + n11 + n3)) + 
   ((-4*n10 + 5*d*n10 - 4*n10^2 - 2*n10*n11 - 4*n10*n3)*
     j[p4, 0, 0, n3, 0, 0, 1, -1, 1, 0, 1 + n10, n11, 0, 0, 1])/
    (4*(-2 + d - n3)*(-d + n10 + n11 + n3)) + 
   ((4 - 3*d + 2*n10 + 2*n3)*j[p4, 0, 0, n3, 0, 0, 1, -1, 2, 0, n10, n11, 0, 
      0, 1])/(4*(-2 + d - n3)*(d - n10 - n11 - n3)) - 
   j[p4, 0, 0, n3, 0, 0, 1, 0, 0, -1, n10, n11, 0, 1, 2]/(2*(-2 + d - n3)) + 
   ((4*n11 - 3*d*n11 + 2*n10*n11 + 2*n11*n3)*j[p4, 0, 0, n3, 0, 0, 1, 0, 0, 
      0, -1 + n10, 1 + n11, 0, 1, 1])/(4*(-2 + d - n3)*
     (-d + n10 + n11 + n3)) + 
   ((-16 + 21*d - 5*d^2 - 13*n10 + 4*d*n10 - 5*n11 + 2*d*n11 - 5*n3 - 
      2*d*n3 + 4*n10*n3 + 4*n3^2)*j[p4, 0, 0, n3, 0, 0, 1, 0, 0, 0, n10, n11, 
      0, 1, 1])/(2*(-2 + d - n3)*(d - n10 - n11 - n3)) + 
   j[p4, 0, 0, n3, 0, 0, 1, 0, 0, 0, n10, n11, 0, 1, 2]/(2*(-2 + d - n3)) + 
   ((4*n11 - 3*d*n11 + 2*n10*n11 + 2*n11*n3)*j[p4, 0, 0, n3, 0, 0, 1, 0, 0, 
      0, n10, 1 + n11, -1, 1, 1])/(4*(-2 + d - n3)*(-d + n10 + n11 + n3)) + 
   ((-4*n11 + 3*d*n11 - 2*n10*n11 - 2*n11*n3)*j[p4, 0, 0, n3, 0, 0, 1, 0, 0, 
      0, n10, 1 + n11, 0, 1, 1])/(4*(-2 + d - n3)*(-d + n10 + n11 + n3)) + 
   ((4*n10 - 5*d*n10 + 4*n10^2 + 2*n10*n11 + 4*n10*n3)*
     j[p4, 0, 0, n3, 0, 0, 1, 0, 0, 0, 1 + n10, -1 + n11, 0, 1, 1])/
    (4*(-2 + d - n3)*(-d + n10 + n11 + n3)) - 
   j[p4, 0, 0, n3, 0, 0, 1, 0, 1, -1, n10, n11, 0, 0, 2]/(2*(-2 + d - n3)) + 
   ((4 - 3*d + 2*n10 + 2*n3)*j[p4, 0, 0, n3, 0, 0, 1, 0, 1, 0, -1 + n10, n11, 
      0, 1, 1])/(2*(d - n10 - n11 - n3)) + 
   ((4 - 9*d + 5*d^2 + 4*n10 - 4*d*n10 + 6*n11 - 7*d*n11 + 4*n10*n11 + 
      2*n11^2 + 4*n3 - 4*d*n3 + 4*n11*n3)*j[p4, 0, 0, n3, 0, 0, 1, 0, 1, 0, 
      n10, -1 + n11, 0, 1, 1])/(2*(-1 + n11)*(-d + n10 + n11 + n3)) + 
   ((-4 + 3*d - 2*n10 + 6*n3 - 7*d*n3 + 5*n10*n3 + n11*n3 + 5*n3^2)*
     j[p4, 0, 0, n3, 0, 0, 1, 0, 1, 0, n10, n11, 0, 0, 1])/
    (2*(-2 + d - n3)*(d - n10 - n11 - n3)) + 
   j[p4, 0, 0, n3, 0, 0, 1, 0, 1, 0, n10, n11, 0, 0, 2]/(2*(-2 + d - n3)) + 
   ((-4 + 3*d - 2*n10 - 2*n3)*j[p4, 0, 0, n3, 0, 0, 1, 0, 1, 0, n10, n11, 0, 
      1, 0])/(4*(-2 + d - n3)*(d - n10 - n11 - n3)) + 
   ((4*n10 - 5*d*n10 + 4*n10^2 + 2*n10*n11 + 4*n10*n3)*
     j[p4, 0, 0, n3, 0, 0, 1, 0, 1, 0, 1 + n10, -1 + n11, 0, 0, 1])/
    (4*(-2 + d - n3)*(-d + n10 + n11 + n3)) + 
   ((-4 + 3*d - 2*n10 - 2*n3)*j[p4, 0, 0, n3, 0, 0, 1, 0, 2, 0, n10, 
      -1 + n11, 0, 0, 1])/(4*(-2 + d - n3)*(d - n10 - n11 - n3)) + 
   ((4 - 4*d + 3*n10 + n11 + 3*n3)*j[p4, 0, 0, n3, 0, 0, 2, 0, 0, -1, n10, 
      n11, 0, 1, 1])/(2*(-2 + d - n3)*(d - n10 - n11 - n3)) + 
   ((-4 + 4*d - 3*n10 - n11 - 3*n3)*j[p4, 0, 0, n3, 0, 0, 2, 0, 0, 0, 
      -1 + n10, n11, 0, 1, 1])/(2*(-2 + d - n3)*(d - n10 - n11 - n3)) + 
   ((4 - 3*d + 2*n10 + 2*n3)*j[p4, 0, 0, n3, 0, 0, 2, 0, 1, -1, n10, n11, 0, 
      0, 1])/(4*(-2 + d - n3)*(d - n10 - n11 - n3)) + 
   ((4 - 3*d + 2*n10 + 2*n3)*j[p4, 0, 0, n3, 0, 0, 2, 0, 1, -1, n10, n11, 0, 
      1, 0])/(4*(-2 + d - n3)*(d - n10 - n11 - n3)) + 
   ((-4 + 3*d - 2*n10 - 2*n3)*j[p4, 0, 0, n3, 0, 0, 2, 0, 1, 0, -1 + n10, 
      n11, 0, 0, 1])/(4*(-2 + d - n3)*(d - n10 - n11 - n3)) + 
   ((-4 + 3*d - 2*n10 - 2*n3)*j[p4, 0, 0, n3, 0, 0, 2, 0, 1, 0, -1 + n10, 
      n11, 0, 1, 0])/(4*(-2 + d - n3)*(d - n10 - n11 - n3)) - 
   (n3*j[p4, 0, 0, 1 + n3, 0, 0, 1, -1, 0, 0, n10, n11, 0, 1, 1])/
    (2*(-2 + d - n3)) - (n3*j[p4, 0, 0, 1 + n3, 0, 0, 1, -1, 1, 0, n10, n11, 
      0, 0, 1])/(2*(-2 + d - n3)) - 
   (n3*j[p4, 0, 0, 1 + n3, 0, 0, 1, 0, 0, 0, -1 + n10, n11, 0, 1, 1])/
    (-2 + d - n3) + (n3*j[p4, 0, 0, 1 + n3, 0, 0, 1, 0, 0, 0, n10, -1 + n11, 
      0, 1, 1])/(-2 + d - n3) - 
   (n3*j[p4, 0, 0, 1 + n3, 0, 0, 1, 0, 0, 0, n10, n11, -1, 1, 1])/
    (2*(-2 + d - n3)) + (n3*j[p4, 0, 0, 1 + n3, 0, 0, 1, 0, 0, 0, n10, n11, 
      0, 1, 1])/(-2 + d - n3) - 
   (n3*j[p4, 0, 0, 1 + n3, 0, 0, 1, 0, 1, 0, -1 + n10, n11, 0, 0, 1])/
    (2*(-2 + d - n3)) + (n3*j[p4, 0, 0, 1 + n3, 0, 0, 1, 0, 1, 0, n10, 
      -1 + n11, 0, 0, 1])/(2*(-2 + d - n3)) + 
   (n3*j[p4, 0, 0, 1 + n3, 0, 0, 1, 0, 1, 0, n10, n11, 0, 0, 1])/
    (2*(-2 + d - n3)), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?Positive, (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, 
    (n7_)?NonPositive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n4 == 0 && 
    n5 == 0 && n6 == 1 && n7 == 0 && n8 == 1 && n9 == 0 && 
     !(n11 == 1 || n2 == 0) -> 
  (2*j[p4, -1, 1 + n2, n3, 0, 0, 1, 0, 0, 0, 2, n11, 0, 1, 1])/
    (-8 + 3*d - 2*n2 - 2*n3) + ((-18 + 8*d - 2*n11 - 4*n2 - 6*n3)*
     j[p4, -1, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 1, n11, 0, 1, 1])/
    (-8 + 3*d - 2*n2 - 2*n3) + 
   (2*j[p4, -1, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 2, n11, 0, 0, 1])/
    (-8 + 3*d - 2*n2 - 2*n3) + 
   ((-2 - 2*n2)*j[p4, -1, 2 + n2, -1 + n3, 0, 0, 1, 0, 1, 0, 1, n11, 0, 1, 
      1])/(8 - 3*d + 2*n2 + 2*n3) - 
   (2*j[p4, 0, n2, n3, 0, 0, 1, 0, 0, 0, 2, n11, 0, 1, 1])/
    (-8 + 3*d - 2*n2 - 2*n3) - 
   (2*j[p4, 0, n2, n3, 0, 0, 1, 0, 1, 0, 2, -1 + n11, 0, 1, 1])/
    (-8 + 3*d - 2*n2 - 2*n3) - 
   (2*j[p4, 0, n2, n3, 0, 0, 1, 0, 1, 0, 2, n11, 0, 0, 1])/
    (-8 + 3*d - 2*n2 - 2*n3) + j[p4, 0, n2, n3, 0, 0, 1, 0, 2, 0, 1, 
     -1 + n11, 0, 1, 1]/(-1 + n11) - j[p4, 0, n2, n3, 0, 0, 2, 0, 1, 0, 0, 
     n11, 0, 1, 1]/(-8 + 3*d - 2*n2 - 2*n3) + 
   ((-4*n3 + 3*d*n3 - 2*n11*n3 - 4*n3^2)*j[p4, 0, n2, 1 + n3, 0, 0, 1, 0, 1, 
      0, 1, -1 + n11, 0, 1, 1])/((-1 + n11)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   (2*j[p4, 0, 1 + n2, -1 + n3, 0, 0, 0, 0, 1, 0, 1, n11, 0, 1, 2])/
    (-8 + 3*d - 2*n2 - 2*n3) + 
   (2*j[p4, 0, 1 + n2, -1 + n3, 0, 0, 1, 0, 0, 0, 1, n11, 0, 1, 2])/
    (-8 + 3*d - 2*n2 - 2*n3) + 
   (2*j[p4, 0, 1 + n2, -1 + n3, 0, 0, 1, 0, 1, 0, 1, n11, 0, 0, 2])/
    (-8 + 3*d - 2*n2 - 2*n3) + j[p4, 0, 1 + n2, -1 + n3, 0, 0, 1, 0, 1, 0, 1, 
    n11, 0, 1, 1] - (2*j[p4, 0, 1 + n2, -1 + n3, 0, 0, 1, 0, 1, 0, 2, 
      -1 + n11, 0, 1, 1])/(-8 + 3*d - 2*n2 - 2*n3) - 
   j[p4, 0, 1 + n2, -1 + n3, 0, 0, 2, 0, 1, 0, 0, n11, 0, 1, 1]/
    (-8 + 3*d - 2*n2 - 2*n3) - 
   (2*j[p4, 0, 1 + n2, n3, -1, 0, 0, 0, 1, 0, 1, n11, 0, 1, 2])/
    (-8 + 3*d - 2*n2 - 2*n3) - 
   (2*j[p4, 0, 1 + n2, n3, -1, 0, 1, 0, 0, 0, 1, n11, 0, 1, 2])/
    (-8 + 3*d - 2*n2 - 2*n3) - 
   (2*j[p4, 0, 1 + n2, n3, -1, 0, 1, 0, 1, 0, 1, n11, 0, 0, 2])/
    (-8 + 3*d - 2*n2 - 2*n3) - 
   (2*j[p4, 0, 1 + n2, n3, -1, 0, 2, 0, 1, 0, 0, n11, 0, 1, 1])/
    (-8 + 3*d - 2*n2 - 2*n3) + j[p4, 0, 1 + n2, n3, 0, 0, 0, 0, 1, -1, 1, 
     n11, 0, 1, 2]/(-8 + 3*d - 2*n2 - 2*n3) + 
   j[p4, 0, 1 + n2, n3, 0, 0, 0, 0, 1, 0, 1, n11, 0, 1, 1]/
    (-8 + 3*d - 2*n2 - 2*n3) - j[p4, 0, 1 + n2, n3, 0, 0, 0, 0, 1, 0, 1, n11, 
     0, 1, 2]/(-8 + 3*d - 2*n2 - 2*n3) + 
   (2*j[p4, 0, 1 + n2, n3, 0, 0, 1, -1, 0, 0, 2, n11, 0, 1, 1])/
    (-8 + 3*d - 2*n2 - 2*n3) + 
   (2*j[p4, 0, 1 + n2, n3, 0, 0, 1, -1, 1, 0, 2, -1 + n11, 0, 1, 1])/
    (-8 + 3*d - 2*n2 - 2*n3) + 
   (2*j[p4, 0, 1 + n2, n3, 0, 0, 1, -1, 1, 0, 2, n11, 0, 0, 1])/
    (-8 + 3*d - 2*n2 - 2*n3) + j[p4, 0, 1 + n2, n3, 0, 0, 1, -1, 2, 0, 1, 
     -1 + n11, 0, 1, 1]/(1 - n11) + j[p4, 0, 1 + n2, n3, 0, 0, 1, 0, 0, -1, 
     1, n11, 0, 1, 2]/(-8 + 3*d - 2*n2 - 2*n3) + 
   ((6 + 4*n2 - 6*n3)*j[p4, 0, 1 + n2, n3, 0, 0, 1, 0, 0, 0, 1, n11, 0, 1, 
      1])/(8 - 3*d + 2*n2 + 2*n3) - j[p4, 0, 1 + n2, n3, 0, 0, 1, 0, 0, 0, 1, 
     n11, 0, 1, 2]/(-8 + 3*d - 2*n2 - 2*n3) - 
   (2*n11*j[p4, 0, 1 + n2, n3, 0, 0, 1, 0, 0, 0, 1, 1 + n11, -1, 1, 1])/
    (-8 + 3*d - 2*n2 - 2*n3) + 
   (2*n11*j[p4, 0, 1 + n2, n3, 0, 0, 1, 0, 0, 0, 1, 1 + n11, 0, 1, 1])/
    (-8 + 3*d - 2*n2 - 2*n3) + j[p4, 0, 1 + n2, n3, 0, 0, 1, 0, 1, -1, 1, 
     n11, 0, 0, 2]/(-8 + 3*d - 2*n2 - 2*n3) + 
   ((-5 + 3*d - 2*n2 - 4*n3)*j[p4, 0, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 0, n11, 
      0, 1, 1])/(-8 + 3*d - 2*n2 - 2*n3) + 
   ((2 - 12*d + 6*d^2 + 10*n11 - 8*d*n11 + 2*n11^2 - 2*d*n2 + 2*n11*n2 + 
      2*n3 - 6*d*n3 + 6*n11*n3 + 2*n2*n3 - 2*n3^2)*j[p4, 0, 1 + n2, n3, 0, 0, 
      1, 0, 1, 0, 1, -1 + n11, 0, 1, 1])/
    ((-1 + n11)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((6 + 4*n2 - 4*n3)*j[p4, 0, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 1, n11, 0, 0, 
      1])/(8 - 3*d + 2*n2 + 2*n3) - j[p4, 0, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 1, 
     n11, 0, 0, 2]/(-8 + 3*d - 2*n2 - 2*n3) - 
   j[p4, 0, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 1, n11, 0, 1, 0]/
    (-8 + 3*d - 2*n2 - 2*n3) + 
   ((2 + 2*n2 - 2*n3)*j[p4, 0, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 1, n11, 0, 1, 
      1])/(-8 + 3*d - 2*n2 - 2*n3) - 
   (2*j[p4, 0, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 2, -1 + n11, -1, 1, 1])/
    (-8 + 3*d - 2*n2 - 2*n3) + 
   (2*j[p4, 0, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 2, -1 + n11, 0, 1, 1])/
    (-8 + 3*d - 2*n2 - 2*n3) + ((4 - 3*d + 2*n11 + 4*n3)*
     j[p4, 0, 1 + n2, n3, 0, 0, 1, 0, 2, 0, 1, -1 + n11, -1, 1, 1])/
    ((-1 + n11)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((-4 + 3*d - 2*n11 - 4*n3)*j[p4, 0, 1 + n2, n3, 0, 0, 1, 0, 2, 0, 1, 
      -1 + n11, 0, 0, 1])/((-1 + n11)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   j[p4, 0, 1 + n2, n3, 0, 0, 2, -1, 1, 0, 0, n11, 0, 1, 1]/
    (-8 + 3*d - 2*n2 - 2*n3) + 
   (3*j[p4, 0, 1 + n2, n3, 0, 0, 2, 0, 0, -1, 1, n11, 0, 1, 1])/
    (-8 + 3*d - 2*n2 - 2*n3) + j[p4, 0, 1 + n2, n3, 0, 0, 2, 0, 1, -1, 1, 
     n11, 0, 0, 1]/(-8 + 3*d - 2*n2 - 2*n3) + 
   j[p4, 0, 1 + n2, n3, 0, 0, 2, 0, 1, -1, 1, n11, 0, 1, 0]/
    (-8 + 3*d - 2*n2 - 2*n3) - j[p4, 0, 1 + n2, n3, 0, 0, 2, 0, 1, 0, 0, n11, 
     -1, 1, 1]/(-8 + 3*d - 2*n2 - 2*n3) + 
   ((16*n3 - 9*d*n3 + 4*n11*n3 + 2*n2*n3 + 10*n3^2)*
     j[p4, 0, 1 + n2, 1 + n3, 0, 0, 1, -1, 1, 0, 1, -1 + n11, 0, 1, 1])/
    ((-1 + n11)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((8*n3 - 6*d*n3 + 4*n11*n3 + 8*n3^2)*j[p4, 0, 1 + n2, 1 + n3, 0, 0, 1, 0, 
      0, 0, 1, -1 + n11, 0, 1, 1])/((-1 + n11)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((-4*n3 + 3*d*n3 - 2*n11*n3 - 4*n3^2)*j[p4, 0, 1 + n2, 1 + n3, 0, 0, 1, 0, 
      1, 0, 1, -1 + n11, -1, 1, 1])/((-1 + n11)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   (n3*j[p4, 0, 1 + n2, 1 + n3, 0, 0, 1, 0, 1, 0, 1, -1 + n11, 0, 0, 1])/
    (-1 + n11) + ((2 + 2*n2)*j[p4, 0, 2 + n2, -1 + n3, 0, 0, 1, 0, 0, 0, 1, 
      n11, 0, 1, 1])/(8 - 3*d + 2*n2 + 2*n3) + 
   ((2 + 2*n2)*j[p4, 0, 2 + n2, -1 + n3, 0, 0, 1, 0, 1, 0, 0, n11, 0, 1, 1])/
    (8 - 3*d + 2*n2 + 2*n3) + ((-4 - 4*n2)*j[p4, 0, 2 + n2, n3, 0, 0, 1, -1, 
      0, 0, 1, n11, 0, 1, 1])/(8 - 3*d + 2*n2 + 2*n3) + 
   ((-4 - 4*n2)*j[p4, 0, 2 + n2, n3, 0, 0, 1, -1, 1, 0, 1, n11, 0, 0, 1])/
    (8 - 3*d + 2*n2 + 2*n3) + ((2 + 2*n2)*j[p4, 0, 2 + n2, n3, 0, 0, 1, -1, 
      1, 0, 1, n11, 0, 1, 1])/(8 - 3*d + 2*n2 + 2*n3) + 
   ((2 + 2*n2)*j[p4, 0, 2 + n2, n3, 0, 0, 1, 0, 0, 0, 1, n11, -1, 1, 1])/
    (8 - 3*d + 2*n2 + 2*n3) + ((-2 - 2*n2)*j[p4, 0, 2 + n2, n3, 0, 0, 1, 0, 
      0, 0, 1, n11, 0, 1, 1])/(8 - 3*d + 2*n2 + 2*n3), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n4 == 0 && 
    n5 == 0 && n6 == 1 && n7 == 0 && n8 == 1 && n9 == 0 && n2 != 0 -> 
  ((7*d - 3*d^2 + 24*n1 - 10*d*n1 + 14*n2 - 5*d*n2 + 4*n1*n2 + 2*n2^2 - 
      22*n3 + 12*d*n3 + 8*n1*n3 + 2*n2*n3 - 8*n3^2)*
     j[p4, -1 + n1, 1 + n2, n3, 0, 0, 1, 0, 0, 0, 2, 1, 0, 1, 1])/
    (2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 
      50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   j[p4, -1 + n1, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 0, 2, 0, 1, 1]/
    (-3 + d - n1 - n2) + ((-342 + 399*d - 157*d^2 + 21*d^3 - 156*n1 + 
      121*d*n1 - 23*d^2*n1 - 6*n1^2 + 2*d*n1^2 - 228*n2 + 170*d*n2 - 
      31*d^2*n2 - 70*n1*n2 + 29*d*n1*n2 - 2*n1^2*n2 - 58*n2^2 + 23*d*n2^2 - 
      6*n1*n2^2 - 4*n2^3 - 216*n3 + 172*d*n3 - 36*d^2*n3 - 96*n1*n3 + 
      36*d*n1*n3 - 88*n2*n3 + 28*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      32*n3^2 + 16*d*n3^2 - 16*n1*n3^2)*j[p4, -1 + n1, 1 + n2, n3, 0, 0, 1, 
      0, 1, 0, 1, 1, 0, 1, 1])/((-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 
      26*n2 - 11*d*n2 + 2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((7*d - 3*d^2 + 24*n1 - 10*d*n1 + 14*n2 - 5*d*n2 + 4*n1*n2 + 2*n2^2 - 
      22*n3 + 12*d*n3 + 8*n1*n3 + 2*n2*n3 - 8*n3^2)*
     j[p4, -1 + n1, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 2, 1, 0, 0, 1])/
    (2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 
      50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) - 
   j[p4, -1 + n1, 1 + n2, n3, 0, 0, 1, 0, 2, 0, 1, 1, 0, 0, 1]/
    (2*(-3 + d - n1 - n2)) + ((-36*n3 + 36*d*n3 - 9*d^2*n3 + 12*n1*n3 - 
      6*d*n1*n3 - 48*n3^2 + 24*d*n3^2 + 8*n1*n3^2 - 16*n3^3)*
     j[p4, -1 + n1, 1 + n2, 1 + n3, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 
      50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((-36*n3 + 36*d*n3 - 9*d^2*n3 + 12*n1*n3 - 6*d*n1*n3 - 48*n3^2 + 
      24*d*n3^2 + 8*n1*n3^2 - 16*n3^3)*j[p4, -1 + n1, 1 + n2, 1 + n3, 0, 0, 
      1, 0, 1, 0, 1, 1, 0, 0, 1])/(2*(-3 + d - n1 - n2)*
     (72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 50*n3 - 20*d*n3 + 
      10*n2*n3 + 8*n3^2)) + ((-6*d + 3*d^2 + 2*d*n1 - 12*n2 + 3*d^2*n2 + 
      4*n1*n2 + 2*d*n1*n2 - 12*n2^2 + 6*d*n2^2 + 4*n1*n2^2 + 24*n3 - 
      16*d*n3 - 8*n1*n3 + 16*n2*n3 - 16*d*n2*n3 - 8*n1*n2*n3 - 8*n2^2*n3 + 
      16*n3^2 + 16*n2*n3^2)*j[p4, -1 + n1, 2 + n2, -1 + n3, 0, 0, 1, 0, 1, 0, 
      1, 1, 0, 1, 1])/(2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 
      11*d*n2 + 2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((-36 + 36*d - 9*d^2 + 12*n1 - 6*d*n1 - 36*n2 + 36*d*n2 - 9*d^2*n2 + 
      12*n1*n2 - 6*d*n1*n2 - 48*n3 + 24*d*n3 + 8*n1*n3 - 48*n2*n3 + 
      24*d*n2*n3 + 8*n1*n2*n3 - 16*n3^2 - 16*n2*n3^2)*
     j[p4, -1 + n1, 2 + n2, n3, 0, 0, 1, -1, 1, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 
      50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((-36 + 36*d - 9*d^2 + 12*n1 - 6*d*n1 - 36*n2 + 36*d*n2 - 9*d^2*n2 + 
      12*n1*n2 - 6*d*n1*n2 - 48*n3 + 24*d*n3 + 8*n1*n3 - 48*n2*n3 + 
      24*d*n2*n3 + 8*n1*n2*n3 - 16*n3^2 - 16*n2*n3^2)*
     j[p4, -1 + n1, 2 + n2, n3, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 
      50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((36 - 36*d + 9*d^2 - 12*n1 + 6*d*n1 + 36*n2 - 36*d*n2 + 9*d^2*n2 - 
      12*n1*n2 + 6*d*n1*n2 + 48*n3 - 24*d*n3 - 8*n1*n3 + 48*n2*n3 - 
      24*d*n2*n3 - 8*n1*n2*n3 + 16*n3^2 + 16*n2*n3^2)*
     j[p4, -1 + n1, 2 + n2, n3, 0, 0, 1, 0, 1, 0, 1, 1, -1, 1, 1])/
    ((-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 
      50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((-108 + 95*d - 21*d^2 + 12*n1 - 6*d*n1 - 134*n2 + 106*d*n2 - 21*d^2*n2 + 
      12*n1*n2 - 6*d*n1*n2 - 28*n2^2 + 11*d*n2^2 - 2*n2^3 - 98*n3 + 44*d*n3 + 
      8*n1*n3 - 108*n2*n3 + 44*d*n2*n3 + 8*n1*n2*n3 - 10*n2^2*n3 - 24*n3^2 - 
      24*n2*n3^2)*j[p4, -1 + n1, 2 + n2, n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 
      1])/((-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((-7*d + 3*d^2 - 24*n1 + 10*d*n1 - 14*n2 + 5*d*n2 - 4*n1*n2 - 2*n2^2 + 
      22*n3 - 12*d*n3 - 8*n1*n3 - 2*n2*n3 + 8*n3^2)*
     j[p4, n1, n2, n3, 0, 0, 1, 0, 0, 0, 2, 1, 0, 1, 1])/
    (2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 
      50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((-7*d + 3*d^2 - 24*n1 + 10*d*n1 - 14*n2 + 5*d*n2 - 4*n1*n2 - 2*n2^2 + 
      22*n3 - 12*d*n3 - 8*n1*n3 - 2*n2*n3 + 8*n3^2)*
     j[p4, n1, n2, n3, 0, 0, 1, 0, 1, 0, 2, 0, 0, 1, 1])/
    (2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 
      50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((-7*d + 3*d^2 - 24*n1 + 10*d*n1 - 14*n2 + 5*d*n2 - 4*n1*n2 - 2*n2^2 + 
      22*n3 - 12*d*n3 - 8*n1*n3 - 2*n2*n3 + 8*n3^2)*
     j[p4, n1, n2, n3, 0, 0, 1, 0, 1, 0, 2, 1, 0, 0, 1])/
    (2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 
      50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   j[p4, n1, n2, n3, 0, 0, 1, 0, 2, 0, 1, 0, 0, 1, 1]/
    (2*(-3 + d - n1 - n2)) + j[p4, n1, n2, n3, 0, 0, 1, 0, 2, 0, 1, 1, 0, 0, 
     1]/(2*(-3 + d - n1 - n2)) + 
   ((18 - 15*d + 3*d^2 - 6*n1 + 2*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 12*n3 - 
      4*d*n3 + 4*n2*n3)*j[p4, n1, n2, n3, 0, 0, 2, 0, 1, 0, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 
      50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((36*n3 - 36*d*n3 + 9*d^2*n3 - 12*n1*n3 + 6*d*n1*n3 + 48*n3^2 - 
      24*d*n3^2 - 8*n1*n3^2 + 16*n3^3)*j[p4, n1, n2, 1 + n3, 0, 0, 1, 0, 0, 
      0, 1, 1, 0, 1, 1])/(2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 
      11*d*n2 + 2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((-36*n3 + 36*d*n3 - 9*d^2*n3 + 12*n1*n3 - 6*d*n1*n3 - 48*n3^2 + 
      24*d*n3^2 + 8*n1*n3^2 - 16*n3^3)*j[p4, n1, n2, 1 + n3, 0, 0, 1, 0, 1, 
      0, 0, 1, 0, 1, 1])/(2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 
      11*d*n2 + 2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((36*n3 - 36*d*n3 + 9*d^2*n3 - 12*n1*n3 + 6*d*n1*n3 + 48*n3^2 - 
      24*d*n3^2 - 8*n1*n3^2 + 16*n3^3)*j[p4, n1, n2, 1 + n3, 0, 0, 1, 0, 1, 
      0, 1, 0, 0, 1, 1])/(2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 
      11*d*n2 + 2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((36*n3 - 36*d*n3 + 9*d^2*n3 - 12*n1*n3 + 6*d*n1*n3 + 48*n3^2 - 
      24*d*n3^2 - 8*n1*n3^2 + 16*n3^3)*j[p4, n1, n2, 1 + n3, 0, 0, 1, 0, 1, 
      0, 1, 1, 0, 0, 1])/(2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 
      11*d*n2 + 2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((7*d - 3*d^2 + 24*n1 - 10*d*n1 + 14*n2 - 5*d*n2 + 4*n1*n2 + 2*n2^2 - 
      22*n3 + 12*d*n3 + 8*n1*n3 + 2*n2*n3 - 8*n3^2)*
     j[p4, n1, 1 + n2, -1 + n3, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 2])/
    (2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 
      50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((7*d - 3*d^2 + 24*n1 - 10*d*n1 + 14*n2 - 5*d*n2 + 4*n1*n2 + 2*n2^2 - 
      22*n3 + 12*d*n3 + 8*n1*n3 + 2*n2*n3 - 8*n3^2)*
     j[p4, n1, 1 + n2, -1 + n3, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 2])/
    (2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 
      50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((7*d - 3*d^2 + 24*n1 - 10*d*n1 + 14*n2 - 5*d*n2 + 4*n1*n2 + 2*n2^2 - 
      22*n3 + 12*d*n3 + 8*n1*n3 + 2*n2*n3 - 8*n3^2)*
     j[p4, n1, 1 + n2, -1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    (2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 
      50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((36 - 27*d + 5*d^2 + 24*n1 - 10*d*n1 + 18*n2 - 7*d*n2 + 4*n1*n2 + 
      2*n2^2 + 12*n3 - 4*d*n3 + 8*n1*n3 + 4*n2*n3)*j[p4, n1, 1 + n2, -1 + n3, 
      0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1])/(2*(-3 + d - n1 - n2)*
     (-9 + 4*d - n2 - 4*n3)) + 
   ((-7*d + 3*d^2 - 24*n1 + 10*d*n1 - 14*n2 + 5*d*n2 - 4*n1*n2 - 2*n2^2 + 
      22*n3 - 12*d*n3 - 8*n1*n3 - 2*n2*n3 + 8*n3^2)*
     j[p4, n1, 1 + n2, -1 + n3, 0, 0, 1, 0, 1, 0, 2, 0, 0, 1, 1])/
    (2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 
      50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((18 - 15*d + 3*d^2 - 6*n1 + 2*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 12*n3 - 
      4*d*n3 + 4*n2*n3)*j[p4, n1, 1 + n2, -1 + n3, 0, 0, 2, 0, 1, 0, 0, 1, 0, 
      1, 1])/(2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((-7*d + 3*d^2 - 24*n1 + 10*d*n1 - 14*n2 + 5*d*n2 - 4*n1*n2 - 2*n2^2 + 
      22*n3 - 12*d*n3 - 8*n1*n3 - 2*n2*n3 + 8*n3^2)*
     j[p4, n1, 1 + n2, n3, -1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 2])/
    (2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 
      50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((-7*d + 3*d^2 - 24*n1 + 10*d*n1 - 14*n2 + 5*d*n2 - 4*n1*n2 - 2*n2^2 + 
      22*n3 - 12*d*n3 - 8*n1*n3 - 2*n2*n3 + 8*n3^2)*
     j[p4, n1, 1 + n2, n3, -1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 2])/
    (2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 
      50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((-7*d + 3*d^2 - 24*n1 + 10*d*n1 - 14*n2 + 5*d*n2 - 4*n1*n2 - 2*n2^2 + 
      22*n3 - 12*d*n3 - 8*n1*n3 - 2*n2*n3 + 8*n3^2)*
     j[p4, n1, 1 + n2, n3, -1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    (2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 
      50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((-7*d + 3*d^2 - 24*n1 + 10*d*n1 - 14*n2 + 5*d*n2 - 4*n1*n2 - 2*n2^2 + 
      22*n3 - 12*d*n3 - 8*n1*n3 - 2*n2*n3 + 8*n3^2)*
     j[p4, n1, 1 + n2, n3, -1, 0, 2, 0, 1, 0, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 
      50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((-1 - n1 - n2 + n3)*j[p4, n1, 1 + n2, n3, 0, 0, 0, 0, 1, -1, 1, 1, 0, 1, 
      2])/((-3 + d - n1 - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((-18 + 15*d - 3*d^2 + 6*n1 - 2*d*n1 - 6*n2 + 3*d*n2 + 2*n1*n2 - 12*n3 + 
      4*d*n3 - 4*n2*n3)*j[p4, n1, 1 + n2, n3, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 
      1])/(2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((1 + n1 + n2 - n3)*j[p4, n1, 1 + n2, n3, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 
      2])/((-3 + d - n1 - n2)*(-8 + 3*d - 2*n2 - 2*n3)) - 
   j[p4, n1, 1 + n2, n3, 0, 0, 1, -1, 0, 0, 1, 2, 0, 1, 1]/
    (-3 + d - n1 - n2) + ((7*d - 3*d^2 + 24*n1 - 10*d*n1 + 14*n2 - 5*d*n2 + 
      4*n1*n2 + 2*n2^2 - 22*n3 + 12*d*n3 + 8*n1*n3 + 2*n2*n3 - 8*n3^2)*
     j[p4, n1, 1 + n2, n3, 0, 0, 1, -1, 0, 0, 2, 1, 0, 1, 1])/
    (2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 
      50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((7*d - 3*d^2 + 24*n1 - 10*d*n1 + 14*n2 - 5*d*n2 + 4*n1*n2 + 2*n2^2 - 
      22*n3 + 12*d*n3 + 8*n1*n3 + 2*n2*n3 - 8*n3^2)*
     j[p4, n1, 1 + n2, n3, 0, 0, 1, -1, 1, 0, 2, 0, 0, 1, 1])/
    (2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 
      50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((7*d - 3*d^2 + 24*n1 - 10*d*n1 + 14*n2 - 5*d*n2 + 4*n1*n2 + 2*n2^2 - 
      22*n3 + 12*d*n3 + 8*n1*n3 + 2*n2*n3 - 8*n3^2)*
     j[p4, n1, 1 + n2, n3, 0, 0, 1, -1, 1, 0, 2, 1, 0, 0, 1])/
    (2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 
      50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) - 
   j[p4, n1, 1 + n2, n3, 0, 0, 1, -1, 2, 0, 1, 0, 0, 1, 1]/
    (2*(-3 + d - n1 - n2)) - j[p4, n1, 1 + n2, n3, 0, 0, 1, -1, 2, 0, 1, 1, 
     0, 0, 1]/(2*(-3 + d - n1 - n2)) + 
   ((-1 - n1 - n2 + n3)*j[p4, n1, 1 + n2, n3, 0, 0, 1, 0, 0, -1, 1, 1, 0, 1, 
      2])/((-3 + d - n1 - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((288 - 257*d + 57*d^2 - 29*d*n1 + 12*d^2*n1 + 134*n2 - 102*d*n2 + 
      18*d^2*n2 - 34*n1*n2 + 9*d*n1*n2 - d*n2^2 - 6*n1*n2^2 - 2*n2^3 + 
      86*n3 + 46*d*n3 - 36*d^2*n3 + 86*n1*n3 - 44*d*n1*n3 + 92*n2*n3 - 
      26*d*n2*n3 + 6*n1*n2*n3 + 6*n2^2*n3 - 112*n3^2 + 72*d*n3^2 + 
      24*n1*n3^2 - 32*n3^3)*j[p4, n1, 1 + n2, n3, 0, 0, 1, 0, 0, 0, 1, 1, 0, 
      1, 1])/(2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((1 + n1 + n2 - n3)*j[p4, n1, 1 + n2, n3, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 
      2])/((-3 + d - n1 - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((-36 + 29*d - 6*d^2 - 12*n1 + 4*d*n1 - 14*n2 + 5*d*n2 - 4*n1*n2 - 
      2*n2^2 - 26*n3 + 12*d*n3 - 2*n2*n3 - 8*n3^2)*j[p4, n1, 1 + n2, n3, 0, 
      0, 1, 0, 0, 0, 1, 2, -1, 1, 1])/(2*(-3 + d - n1 - n2)*
     (72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 50*n3 - 20*d*n3 + 
      10*n2*n3 + 8*n3^2)) + ((36 - 29*d + 6*d^2 + 12*n1 - 4*d*n1 + 14*n2 - 
      5*d*n2 + 4*n1*n2 + 2*n2^2 + 26*n3 - 12*d*n3 + 2*n2*n3 + 8*n3^2)*
     j[p4, n1, 1 + n2, n3, 0, 0, 1, 0, 0, 0, 1, 2, 0, 1, 1])/
    (2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 
      50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((-1 - n1 - n2 + n3)*j[p4, n1, 1 + n2, n3, 0, 0, 1, 0, 1, -1, 1, 1, 0, 0, 
      2])/((-3 + d - n1 - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((-54 + 58*d - 15*d^2 + 114*n1 - 77*d*n1 + 12*d^2*n1 + 44*n2 - 25*d*n2 + 
      3*d^2*n2 + 44*n1*n2 - 17*d*n1*n2 + 28*n2^2 - 11*d*n2^2 + 2*n1*n2^2 + 
      2*n2^3 - 46*n3 + 10*d*n3 + 6*d^2*n3 + 54*n1*n3 - 16*d*n1*n3 + 
      12*n2*n3 - 2*d*n2*n3 + 14*n1*n2*n3 + 10*n2^2*n3 - 8*d*n3^2 + 8*n1*n3^2)*
     j[p4, n1, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 
      50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   j[p4, n1, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 0, 2, -1, 1, 1]/
    (2*(-3 + d - n1 - n2)) - j[p4, n1, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 0, 2, 0, 
     1, 1]/(2*(-3 + d - n1 - n2)) + 
   ((-7*d + 3*d^2 - 96*n1 + 69*d*n1 - 12*d^2*n1 - 14*n2 + 5*d*n2 - 30*n1*n2 + 
      11*d*n1*n2 - 2*n2^2 - 2*n1*n2^2 - 14*n3 + 18*d*n3 - 6*d^2*n3 - 
      46*n1*n3 + 16*d*n1*n3 - 14*n2*n3 + 6*d*n2*n3 - 6*n1*n2*n3 - 16*n3^2 + 
      8*d*n3^2 - 8*n1*n3^2 - 8*n2*n3^2)*j[p4, n1, 1 + n2, n3, 0, 0, 1, 0, 1, 
      0, 1, 0, 0, 1, 1])/(2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 
      11*d*n2 + 2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((180 - 162*d + 36*d^2 - 168*n1 + 112*d*n1 - 18*d^2*n1 - 12*n1^2 + 
      4*d*n1^2 + 180*n2 - 150*d*n2 + 30*d^2*n2 - 100*n1*n2 + 36*d*n1*n2 - 
      4*n1^2*n2 + 24*n2^2 - 12*d*n2^2 - 12*n1*n2^2 + 60*n3 + 24*d*n3 - 
      21*d^2*n3 - 56*n1*n3 + 18*d*n1*n3 + 144*n2*n3 - 52*d*n2*n3 - 
      20*n1*n2*n3 + 16*n2^2*n3 - 64*n3^2 + 40*d*n3^2 - 8*n1*n3^2 + 
      16*n2*n3^2 - 16*n3^3)*j[p4, n1, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 
      0, 1])/(2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((1 + n1 + n2 - n3)*j[p4, n1, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 
      2])/((-3 + d - n1 - n2)*(-8 + 3*d - 2*n2 - 2*n3)) + 
   ((18 - 15*d + 3*d^2 - 6*n1 + 2*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 12*n3 - 
      4*d*n3 + 4*n2*n3)*j[p4, n1, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 
      0])/(2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((252 - 288*d + 112*d^2 - 15*d^3 + 168*n1 - 128*d*n1 + 24*d^2*n1 + 
      12*n1^2 - 4*d*n1^2 + 180*n2 - 128*d*n2 + 22*d^2*n2 + 80*n1*n2 - 
      32*d*n1*n2 + 4*n1^2*n2 + 52*n2^2 - 20*d*n2^2 + 8*n1*n2^2 + 4*n2^3 + 
      120*n3 - 98*d*n3 + 22*d^2*n3 + 96*n1*n3 - 36*d*n1*n3 + 44*n2*n3 - 
      10*d*n2*n3 + 24*n1*n2*n3 + 12*n2^2*n3 + 8*n3^2 - 8*d*n3^2 + 
      16*n1*n3^2 - 8*n2*n3^2)*j[p4, n1, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 1, 1, 
      0, 1, 1])/(2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((-7*d + 3*d^2 - 24*n1 + 10*d*n1 - 14*n2 + 5*d*n2 - 4*n1*n2 - 2*n2^2 + 
      22*n3 - 12*d*n3 - 8*n1*n3 - 2*n2*n3 + 8*n3^2)*
     j[p4, n1, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 2, 0, -1, 1, 1])/
    (2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 
      50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((7*d - 3*d^2 + 24*n1 - 10*d*n1 + 14*n2 - 5*d*n2 + 4*n1*n2 + 2*n2^2 - 
      22*n3 + 12*d*n3 + 8*n1*n3 + 2*n2*n3 - 8*n3^2)*
     j[p4, n1, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 2, 0, 0, 1, 1])/
    (2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 
      50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   j[p4, n1, 1 + n2, n3, 0, 0, 1, 0, 2, 0, 1, 0, -1, 1, 1]/
    (2*(-3 + d - n1 - n2)) + ((-18 + 15*d - 3*d^2 + 6*n1 - 2*d*n1 - 6*n2 + 
      3*d*n2 + 2*n1*n2 - 12*n3 + 4*d*n3 - 4*n2*n3)*j[p4, n1, 1 + n2, n3, 0, 
      0, 2, -1, 1, 0, 0, 1, 0, 1, 1])/(2*(-3 + d - n1 - n2)*
     (72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 50*n3 - 20*d*n3 + 
      10*n2*n3 + 8*n3^2)) + ((-9 + 11*d - 3*d^2 + 15*n1 - 6*d*n1 + 4*n2 - 
      d*n2 + 3*n1*n2 + n2^2 - 17*n3 + 8*d*n3 + 4*n1*n3 - n2*n3 - 4*n3^2)*
     j[p4, n1, 1 + n2, n3, 0, 0, 2, 0, 0, -1, 1, 1, 0, 1, 1])/
    ((-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 
      50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((-18 + 15*d - 3*d^2 + 6*n1 - 2*d*n1 - 6*n2 + 3*d*n2 + 2*n1*n2 - 12*n3 + 
      4*d*n3 - 4*n2*n3)*j[p4, n1, 1 + n2, n3, 0, 0, 2, 0, 1, -1, 1, 1, 0, 0, 
      1])/(2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((-18 + 15*d - 3*d^2 + 6*n1 - 2*d*n1 - 6*n2 + 3*d*n2 + 2*n1*n2 - 12*n3 + 
      4*d*n3 - 4*n2*n3)*j[p4, n1, 1 + n2, n3, 0, 0, 2, 0, 1, -1, 1, 1, 0, 1, 
      0])/(2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((18 - 15*d + 3*d^2 - 6*n1 + 2*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 12*n3 - 
      4*d*n3 + 4*n2*n3)*j[p4, n1, 1 + n2, n3, 0, 0, 2, 0, 1, 0, 0, 1, -1, 1, 
      1])/(2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((-36*n3 + 36*d*n3 - 9*d^2*n3 + 12*n1*n3 - 6*d*n1*n3 - 48*n3^2 + 
      24*d*n3^2 + 8*n1*n3^2 - 16*n3^3)*j[p4, n1, 1 + n2, 1 + n3, 0, 0, 1, -1, 
      0, 0, 1, 1, 0, 1, 1])/(2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 
      26*n2 - 11*d*n2 + 2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((36*n3 - 36*d*n3 + 9*d^2*n3 - 12*n1*n3 + 6*d*n1*n3 + 48*n3^2 - 
      24*d*n3^2 - 8*n1*n3^2 + 16*n3^3)*j[p4, n1, 1 + n2, 1 + n3, 0, 0, 1, -1, 
      1, 0, 0, 1, 0, 1, 1])/(2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 
      26*n2 - 11*d*n2 + 2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((-36*n3 + 36*d*n3 - 9*d^2*n3 + 12*n1*n3 - 6*d*n1*n3 - 48*n3^2 + 
      24*d*n3^2 + 8*n1*n3^2 - 16*n3^3)*j[p4, n1, 1 + n2, 1 + n3, 0, 0, 1, -1, 
      1, 0, 1, 0, 0, 1, 1])/(2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 
      26*n2 - 11*d*n2 + 2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((-36*n3 + 36*d*n3 - 9*d^2*n3 + 12*n1*n3 - 6*d*n1*n3 - 48*n3^2 + 
      24*d*n3^2 + 8*n1*n3^2 - 16*n3^3)*j[p4, n1, 1 + n2, 1 + n3, 0, 0, 1, -1, 
      1, 0, 1, 1, 0, 0, 1])/(2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 
      26*n2 - 11*d*n2 + 2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((-36*n3 + 36*d*n3 - 9*d^2*n3 + 12*n1*n3 - 6*d*n1*n3 - 48*n3^2 + 
      24*d*n3^2 + 8*n1*n3^2 - 16*n3^3)*j[p4, n1, 1 + n2, 1 + n3, 0, 0, 1, 0, 
      0, 0, 1, 1, -1, 1, 1])/(2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 
      26*n2 - 11*d*n2 + 2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((36*n3 - 36*d*n3 + 9*d^2*n3 - 12*n1*n3 + 6*d*n1*n3 + 48*n3^2 - 
      24*d*n3^2 - 8*n1*n3^2 + 16*n3^3)*j[p4, n1, 1 + n2, 1 + n3, 0, 0, 1, 0, 
      0, 0, 1, 1, 0, 1, 1])/((-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 
      11*d*n2 + 2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((-36*n3 + 36*d*n3 - 9*d^2*n3 + 12*n1*n3 - 6*d*n1*n3 - 48*n3^2 + 
      24*d*n3^2 + 8*n1*n3^2 - 16*n3^3)*j[p4, n1, 1 + n2, 1 + n3, 0, 0, 1, 0, 
      1, 0, 0, 1, -1, 1, 1])/(2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 
      26*n2 - 11*d*n2 + 2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((36*n3 - 36*d*n3 + 9*d^2*n3 - 12*n1*n3 + 6*d*n1*n3 + 48*n3^2 - 
      24*d*n3^2 - 8*n1*n3^2 + 16*n3^3)*j[p4, n1, 1 + n2, 1 + n3, 0, 0, 1, 0, 
      1, 0, 1, 0, -1, 1, 1])/(2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 
      26*n2 - 11*d*n2 + 2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((36*n3 - 36*d*n3 + 9*d^2*n3 - 12*n1*n3 + 6*d*n1*n3 + 48*n3^2 - 
      24*d*n3^2 - 8*n1*n3^2 + 16*n3^3)*j[p4, n1, 1 + n2, 1 + n3, 0, 0, 1, 0, 
      1, 0, 1, 1, 0, 0, 1])/(2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 
      26*n2 - 11*d*n2 + 2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((-7*d + 3*d^2 - 24*n1 + 10*d*n1 - 14*n2 - 2*d*n2 + 3*d^2*n2 - 28*n1*n2 + 
      10*d*n1*n2 - 16*n2^2 + 5*d*n2^2 - 4*n1*n2^2 - 2*n2^3 + 22*n3 - 
      12*d*n3 - 8*n1*n3 + 20*n2*n3 - 12*d*n2*n3 - 8*n1*n2*n3 - 2*n2^2*n3 + 
      8*n3^2 + 8*n2*n3^2)*j[p4, n1, 2 + n2, -1 + n3, 0, 0, 1, 0, 0, 0, 1, 1, 
      0, 1, 1])/(2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((108 - 89*d + 18*d^2 - 12*n1 + 4*d*n1 + 146*n2 - 106*d*n2 + 18*d^2*n2 - 
      16*n1*n2 + 4*d*n1*n2 + 40*n2^2 - 17*d*n2^2 - 4*n1*n2^2 + 2*n2^3 + 
      74*n3 - 28*d*n3 + 92*n2*n3 - 28*d*n2*n3 + 18*n2^2*n3 + 8*n3^2 + 
      8*n2*n3^2)*j[p4, n1, 2 + n2, -1 + n3, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 
      50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((7*d - 3*d^2 + 24*n1 - 10*d*n1 + 14*n2 + 2*d*n2 - 3*d^2*n2 + 28*n1*n2 - 
      10*d*n1*n2 + 16*n2^2 - 5*d*n2^2 + 4*n1*n2^2 + 2*n2^3 - 22*n3 + 
      12*d*n3 + 8*n1*n3 - 20*n2*n3 + 12*d*n2*n3 + 8*n1*n2*n3 + 2*n2^2*n3 - 
      8*n3^2 - 8*n2*n3^2)*j[p4, n1, 2 + n2, n3, 0, 0, 1, -1, 0, 0, 1, 1, 0, 
      1, 1])/((-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((-108 + 82*d - 15*d^2 - 12*n1 + 6*d*n1 - 160*n2 + 104*d*n2 - 15*d^2*n2 - 
      12*n1*n2 + 6*d*n1*n2 - 56*n2^2 + 22*d*n2^2 - 4*n2^3 - 52*n3 + 16*d*n3 - 
      8*n1*n3 - 72*n2*n3 + 16*d*n2*n3 - 8*n1*n2*n3 - 20*n2^2*n3)*
     j[p4, n1, 2 + n2, n3, 0, 0, 1, -1, 1, 0, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 
      50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((7*d - 3*d^2 + 24*n1 - 10*d*n1 + 14*n2 + 2*d*n2 - 3*d^2*n2 + 28*n1*n2 - 
      10*d*n1*n2 + 16*n2^2 - 5*d*n2^2 + 4*n1*n2^2 + 2*n2^3 - 22*n3 + 
      12*d*n3 + 8*n1*n3 - 20*n2*n3 + 12*d*n2*n3 + 8*n1*n2*n3 + 2*n2^2*n3 - 
      8*n3^2 - 8*n2*n3^2)*j[p4, n1, 2 + n2, n3, 0, 0, 1, -1, 1, 0, 1, 1, 0, 
      0, 1])/((-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((72 - 66*d + 15*d^2 - 24*n1 + 10*d*n1 + 84*n2 - 72*d*n2 + 15*d^2*n2 - 
      28*n1*n2 + 10*d*n1*n2 + 12*n2^2 - 6*d*n2^2 - 4*n1*n2^2 + 72*n3 - 
      32*d*n3 - 8*n1*n3 + 80*n2*n3 - 32*d*n2*n3 - 8*n1*n2*n3 + 8*n2^2*n3 + 
      16*n3^2 + 16*n2*n3^2)*j[p4, n1, 2 + n2, n3, 0, 0, 1, -1, 1, 0, 1, 1, 0, 
      1, 1])/(2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((-7*d + 3*d^2 - 24*n1 + 10*d*n1 - 14*n2 - 2*d*n2 + 3*d^2*n2 - 28*n1*n2 + 
      10*d*n1*n2 - 16*n2^2 + 5*d*n2^2 - 4*n1*n2^2 - 2*n2^3 + 22*n3 - 
      12*d*n3 - 8*n1*n3 + 20*n2*n3 - 12*d*n2*n3 - 8*n1*n2*n3 - 2*n2^2*n3 + 
      8*n3^2 + 8*n2*n3^2)*j[p4, n1, 2 + n2, n3, 0, 0, 1, 0, 0, 0, 1, 1, -1, 
      1, 1])/(2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((-72 + 66*d - 15*d^2 + 24*n1 - 10*d*n1 - 84*n2 + 72*d*n2 - 15*d^2*n2 + 
      28*n1*n2 - 10*d*n1*n2 - 12*n2^2 + 6*d*n2^2 + 4*n1*n2^2 - 72*n3 + 
      32*d*n3 + 8*n1*n3 - 80*n2*n3 + 32*d*n2*n3 + 8*n1*n2*n3 - 8*n2^2*n3 - 
      16*n3^2 - 16*n2*n3^2)*j[p4, n1, 2 + n2, n3, 0, 0, 1, 0, 0, 0, 1, 1, 0, 
      1, 1])/(2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 
      2*n2^2 + 50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) + 
   ((36 - 23*d + 3*d^2 + 12*n1 - 6*d*n1 + 62*n2 - 34*d*n2 + 3*d^2*n2 + 
      12*n1*n2 - 6*d*n1*n2 + 28*n2^2 - 11*d*n2^2 + 2*n2^3 + 2*n3 + 4*d*n3 + 
      8*n1*n3 + 12*n2*n3 + 4*d*n2*n3 + 8*n1*n2*n3 + 10*n2^2*n3 - 8*n3^2 - 
      8*n2*n3^2)*j[p4, n1, 2 + n2, n3, 0, 0, 1, 0, 1, 0, 0, 1, -1, 1, 1])/
    (2*(-3 + d - n1 - n2)*(72 - 59*d + 12*d^2 + 26*n2 - 11*d*n2 + 2*n2^2 + 
      50*n3 - 20*d*n3 + 10*n2*n3 + 8*n3^2)) - 
   (n1*j[p4, 1 + n1, n2, n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(3 - d + n1 + n2)) + (n1*j[p4, 1 + n1, 1 + n2, n3, 0, 0, 1, 0, 0, 0, 
      1, 1, 0, 1, 1])/(2*(3 - d + n1 + n2)) + 
   (n1*j[p4, 1 + n1, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1])/
    (2*(3 - d + n1 + n2)) - (n1*j[p4, 1 + n1, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 
      1, 0, 0, 1, 1])/(2*(3 - d + n1 + n2)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n14 == 1 && n2 == 0 && 
    n3 == 1 && n5 == 0 && n7 == 0 && n8 == 1 && n9 == 0 && 
     !(n13 == 1 || n4 == 0 || n6 == 1) -> 
  -j[p4, 0, -1, 1, 1 + n4, 0, n6, 0, 1, 0, 1, 1, 0, n13, 1] - 
   (2*j[p4, 0, -1, 1, 1 + n4, 0, n6, 0, 2, 0, 1, 1, 0, -1 + n13, 1])/
    (-1 + n13) - j[p4, 0, -1, 2, 1 + n4, 0, -1 + n6, 0, 2, 0, 1, 1, 0, 
     -1 + n13, 1]/((-1 + n13)*(-1 + n6)) + 
   j[p4, 0, 0, 0, 1 + n4, 0, -1 + n6, 0, 1, 0, 2, 1, 0, n13, 1]/(1 - n6) - 
   j[p4, 0, 0, 0, 1 + n4, 0, -1 + n6, 0, 2, 0, 2, 1, 0, -1 + n13, 1]/
    ((-1 + n13)*(-1 + n6)) + j[p4, 0, 0, 0, 1 + n4, 0, n6, 0, 2, 0, 1, 1, 0, 
     -1 + n13, 1]/(1 - n13) + ((-1 - n4)*j[p4, 0, 0, 0, 2 + n4, 0, -1 + n6, 
      0, 1, 0, 2, 1, 0, -1 + n13, 1])/((-1 + n13)*(-1 + n6)) + 
   ((-1 - n4)*j[p4, 0, 0, 0, 2 + n4, 0, -1 + n6, 0, 2, 0, 1, 1, 0, -1 + n13, 
      1])/((-1 + n13)*(-1 + n6)) + 
   ((1 + n4)*j[p4, 0, 0, 0, 2 + n4, 0, n6, 0, 1, 0, 1, 1, 0, -1 + n13, 1])/
    (-1 + n13) + j[p4, 0, 0, 1, n4, 0, n6, 0, 2, 0, 1, 1, 0, -1 + n13, 1]/
    (1 - n13) + ((-3 + d - n4)*j[p4, 0, 0, 1, 1 + n4, 0, -1 + n6, 0, 1, 0, 1, 
      1, 0, n13, 1])/(-1 + n6) + j[p4, 0, 0, 1, 1 + n4, 0, -1 + n6, 0, 1, 0, 
     2, 0, 0, n13, 1]/(-1 + n6) + 
   ((-3 + d - n13 - n4)*j[p4, 0, 0, 1, 1 + n4, 0, -1 + n6, 0, 1, 0, 2, 1, 0, 
      -1 + n13, 1])/((-1 + n13)*(-1 + n6)) + 
   ((-3 + d)*j[p4, 0, 0, 1, 1 + n4, 0, -1 + n6, 0, 2, 0, 1, 1, 0, -1 + n13, 
      1])/((-1 + n13)*(-1 + n6)) + j[p4, 0, 0, 1, 1 + n4, 0, -1 + n6, 0, 2, 
     0, 2, 1, 0, -1 + n13, 1]/((-1 + n13)*(-1 + n6)) + 
   (2*j[p4, 0, 0, 1, 1 + n4, 0, n6, -1, 2, 0, 1, 1, 0, -1 + n13, 1])/
    (-1 + n13) + j[p4, 0, 0, 1, 1 + n4, 0, n6, 0, 0, 0, 1, 1, 0, n13, 1] + 
   ((1 + n13 - n4)*j[p4, 0, 0, 1, 1 + n4, 0, n6, 0, 1, 0, 1, 1, 0, -1 + n13, 
      1])/(-1 + n13) + j[p4, 0, 0, 1, 1 + n4, 0, n6, 0, 1, 0, 1, 1, 0, n13, 
    0] - (2*j[p4, 0, 0, 1, 1 + n4, 0, n6, 0, 2, 0, 1, 1, -1, -1 + n13, 1])/
    (-1 + n13) + (2*j[p4, 0, 0, 1, 1 + n4, 0, n6, 0, 2, 0, 1, 1, 0, -2 + n13, 
      1])/(-1 + n13) + j[p4, 0, 0, 1, 1 + n4, 0, n6, 0, 2, 0, 1, 1, 0, 
     -1 + n13, 0]/(-1 + n13) + 
   ((1 + n4)*j[p4, 0, 0, 1, 2 + n4, -1, -1 + n6, 0, 1, 0, 1, 1, 0, n13, 1])/
    (-1 + n6) + ((-1 - n4)*j[p4, 0, 0, 1, 2 + n4, 0, -2 + n6, 0, 2, 0, 1, 1, 
      0, -1 + n13, 1])/((-1 + n13)*(-1 + n6)) + 
   ((-1 - n4)*j[p4, 0, 0, 1, 2 + n4, 0, -1 + n6, -1, 1, 0, 1, 1, 0, n13, 1])/
    (-1 + n6) + ((1 + n4)*j[p4, 0, 0, 1, 2 + n4, 0, -1 + n6, 0, 1, 0, 1, 1, 
      0, -1 + n13, 1])/((-1 + n13)*(-1 + n6)) + 
   ((1 + n4)*j[p4, 0, 0, 1, 2 + n4, 0, -1 + n6, 0, 1, 0, 2, 1, 0, -1 + n13, 
      0])/((-1 + n13)*(-1 + n6)) + 
   ((1 + n4)*j[p4, 0, 0, 1, 2 + n4, 0, -1 + n6, 0, 2, 0, 1, 1, 0, -1 + n13, 
      0])/((-1 + n13)*(-1 + n6)) + 
   ((-1 - n4)*j[p4, 0, 0, 1, 2 + n4, 0, n6, 0, 1, 0, 1, 1, 0, -1 + n13, 0])/
    (-1 + n13) + j[p4, 0, 0, 2, n4, 0, n6, 0, 1, 0, 1, 1, 0, -1 + n13, 1]/
    (1 - n13) + j[p4, 0, 0, 2, 1 + n4, 0, -1 + n6, -1, 1, 0, 1, 1, 0, n13, 1]/
    (1 - n6) + j[p4, 0, 0, 2, 1 + n4, 0, -1 + n6, -1, 2, 0, 1, 1, 0, 
     -1 + n13, 1]/((-1 + n13)*(-1 + n6)) + 
   ((1 + n13)*j[p4, 0, 0, 2, 1 + n4, 0, -1 + n6, 0, 1, 0, 1, 1, 0, -1 + n13, 
      1])/((-1 + n13)*(-1 + n6)) - j[p4, 0, 0, 2, 1 + n4, 0, -1 + n6, 0, 2, 
     0, 1, 1, -1, -1 + n13, 1]/((-1 + n13)*(-1 + n6)) + 
   j[p4, 0, 0, 2, 1 + n4, 0, -1 + n6, 0, 2, 0, 1, 1, 0, -2 + n13, 1]/
    ((-1 + n13)*(-1 + n6)) + j[p4, 0, 0, 2, 1 + n4, 0, n6, 0, 1, 0, 1, 1, 0, 
     -1 + n13, 0]/(-1 + n13), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n3 == 1 && 
    n4 == 0 && n5 == 0 && n6 == 1 && n7 == -1 && n9 == 0 && n14 != 1 -> 
  ((-4 + d)*j[p4, 0, n2, 1, 0, 0, 2, -1, n8, 0, 1, 1, 0, 1, -1 + n14])/
   ((d - 2*n14)*(-1 + n14)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n4 == 0 && n5 == 0 && n6 == 1 && n7 == 0 && n8 == n10 && n9 == 0 && 
     !(n10 == 1 || n3 == 1) -> 
  ((-4*n10 + 8*d*n10 - 3*d^2*n10 - 8*n10^2 + 8*d*n10^2 - 4*n10^3 - 4*n10*n3 + 
      2*d*n10*n3 - 4*n10^2*n3)*j[p4, -1, 0, -1 + n3, 0, 0, 1, 0, n10, 0, 
      1 + n10, 1, 0, 0, 1])/(8*(-1 + d - n10 - n3)*(d - n10 - n3)*
     (-1 + n3)) + ((8*n10 - 20*d*n10 + 38*d^2*n10 - 15*d^3*n10 + 16*n10^2 - 
      64*d*n10^2 + 52*d^2*n10^2 + 24*n10^3 - 52*d*n10^3 + 16*n10^4 + 
      8*n10*n3 - 56*d*n10*n3 + 26*d^2*n10*n3 + 48*n10^2*n3 - 72*d*n10^2*n3 + 
      40*n10^3*n3 + 24*n10*n3^2 - 12*d*n10*n3^2 + 24*n10^2*n3^2)*
     j[p4, -1, 0, -1 + n3, 0, 0, 1, 0, 1 + n10, 0, n10, 1, 0, 0, 1])/
    (8*(-2 + 5*d - 4*n10 - 4*n3)*(-1 + d - n10 - n3)*(d - n10 - n3)*
     (-1 + n3)) + ((-8 + 14*d - 5*d^2 - 16*n10 + 14*d*n10 - 8*n10^2 - 6*n3 + 
      3*d*n3 - 6*n10*n3)*j[p4, -1, 0, n3, 0, 0, 1, 0, n10, 0, n10, 1, 0, 0, 
      1])/(2*(-2 + 5*d - 4*n10 - 4*n3)*(-1 + d - n10 - n3)) + 
   ((4*n10 - 8*d*n10 + 3*d^2*n10 + 8*n10^2 - 8*d*n10^2 + 4*n10^3 + 4*n10*n3 - 
      2*d*n10*n3 + 4*n10^2*n3)*j[p4, 0, -1, -1 + n3, 0, 0, 1, 0, n10, 0, 
      1 + n10, 0, 0, 1, 1])/(8*(-1 + d - n10 - n3)*(d - n10 - n3)*
     (-1 + n3)) + ((4*n10 - 8*d*n10 + 3*d^2*n10 + 8*n10^2 - 8*d*n10^2 + 
      4*n10^3 + 4*n10*n3 - 2*d*n10*n3 + 4*n10^2*n3)*
     j[p4, 0, -1, -1 + n3, 0, 0, 1, 0, n10, 0, 1 + n10, 1, 0, 0, 1])/
    (8*(-1 + d - n10 - n3)*(d - n10 - n3)*(-1 + n3)) + 
   ((-8*n10 + 20*d*n10 - 38*d^2*n10 + 15*d^3*n10 - 16*n10^2 + 64*d*n10^2 - 
      52*d^2*n10^2 - 24*n10^3 + 52*d*n10^3 - 16*n10^4 - 8*n10*n3 + 
      56*d*n10*n3 - 26*d^2*n10*n3 - 48*n10^2*n3 + 72*d*n10^2*n3 - 
      40*n10^3*n3 - 24*n10*n3^2 + 12*d*n10*n3^2 - 24*n10^2*n3^2)*
     j[p4, 0, -1, -1 + n3, 0, 0, 1, 0, 1 + n10, 0, n10, 0, 0, 1, 1])/
    (8*(-2 + 5*d - 4*n10 - 4*n3)*(-1 + d - n10 - n3)*(d - n10 - n3)*
     (-1 + n3)) + ((-8*n10 + 20*d*n10 - 38*d^2*n10 + 15*d^3*n10 - 16*n10^2 + 
      64*d*n10^2 - 52*d^2*n10^2 - 24*n10^3 + 52*d*n10^3 - 16*n10^4 - 
      8*n10*n3 + 56*d*n10*n3 - 26*d^2*n10*n3 - 48*n10^2*n3 + 72*d*n10^2*n3 - 
      40*n10^3*n3 - 24*n10*n3^2 + 12*d*n10*n3^2 - 24*n10^2*n3^2)*
     j[p4, 0, -1, -1 + n3, 0, 0, 1, 0, 1 + n10, 0, n10, 1, 0, 0, 1])/
    (8*(-2 + 5*d - 4*n10 - 4*n3)*(-1 + d - n10 - n3)*(d - n10 - n3)*
     (-1 + n3)) + ((8 - 14*d + 5*d^2 + 16*n10 - 14*d*n10 + 8*n10^2 + 6*n3 - 
      3*d*n3 + 6*n10*n3)*j[p4, 0, -1, n3, 0, 0, 1, 0, n10, 0, n10, 0, 0, 1, 
      1])/(2*(-2 + 5*d - 4*n10 - 4*n3)*(-1 + d - n10 - n3)) + 
   ((8 - 14*d + 5*d^2 + 16*n10 - 14*d*n10 + 8*n10^2 + 6*n3 - 3*d*n3 + 
      6*n10*n3)*j[p4, 0, -1, n3, 0, 0, 1, 0, n10, 0, n10, 1, 0, 0, 1])/
    (2*(-2 + 5*d - 4*n10 - 4*n3)*(-1 + d - n10 - n3)) + 
   ((-4 + 8*d - 3*d^2 - 8*n10 + 8*d*n10 - 4*n10^2 - 4*n3 + 2*d*n3 - 4*n10*n3)*
     j[p4, 0, 0, -2 + n3, 0, 0, 0, 0, n10, 0, n10, 1, 0, 1, 2])/
    (8*(-1 + d - n10 - n3)*(d - n10 - n3)*(-1 + n3)) + 
   ((-4 + 8*d - 3*d^2 - 8*n10 + 8*d*n10 - 4*n10^2 - 4*n3 + 2*d*n3 - 4*n10*n3)*
     j[p4, 0, 0, -2 + n3, 0, 0, 1, 0, n10, 0, n10, 1, 0, 0, 2])/
    (8*(-1 + d - n10 - n3)*(d - n10 - n3)*(-1 + n3)) + 
   ((24 - 68*d + 58*d^2 - 15*d^3 + 64*n10 - 120*d*n10 + 52*d^2*n10 + 
      56*n10^2 - 52*d*n10^2 + 16*n10^3 + 32*n3 - 48*d*n3 + 16*d^2*n3 + 
      56*n10*n3 - 44*d*n10*n3 + 24*n10^2*n3 + 8*n3^2 - 4*d*n3^2 + 8*n10*n3^2)*
     j[p4, 0, 0, -2 + n3, 0, 0, 1, 0, n10, 0, n10, 1, 0, 1, 1])/
    (4*(-2 + 5*d - 4*n10 - 4*n3)*(-1 + d - n10 - n3)*(-1 + n3)) + 
   ((4*n10 - 8*d*n10 + 3*d^2*n10 + 8*n10^2 - 8*d*n10^2 + 4*n10^3 + 4*n10*n3 - 
      2*d*n10*n3 + 4*n10^2*n3)*j[p4, 0, 0, -2 + n3, 0, 0, 1, 0, n10, 0, 
      1 + n10, 0, 0, 1, 1])/(8*(-1 + d - n10 - n3)*(d - n10 - n3)*
     (-1 + n3)) + ((2*n10 - d*n10 + 2*n10^2)*j[p4, 0, 0, -2 + n3, 0, 0, 1, 0, 
      1 + n10, 0, n10, 1, 0, 1, 1])/(2*(-1 + n3)*(1 - d + n10 + n3)) + 
   ((4 - 8*d + 3*d^2 + 8*n10 - 8*d*n10 + 4*n10^2 + 4*n3 - 2*d*n3 + 4*n10*n3)*
     j[p4, 0, 0, -1 + n3, -1, 0, 0, 0, n10, 0, n10, 1, 0, 1, 2])/
    (8*(-1 + d - n10 - n3)*(d - n10 - n3)*(-1 + n3)) + 
   ((4 - 8*d + 3*d^2 + 8*n10 - 8*d*n10 + 4*n10^2 + 4*n3 - 2*d*n3 + 4*n10*n3)*
     j[p4, 0, 0, -1 + n3, -1, 0, 1, 0, n10, 0, n10, 1, 0, 0, 2])/
    (8*(-1 + d - n10 - n3)*(d - n10 - n3)*(-1 + n3)) + 
   ((-12 + 16*d - 5*d^2 - 20*n10 + 14*d*n10 - 8*n10^2 - 4*n3 + 2*d*n3 - 
      4*n10*n3)*j[p4, 0, 0, -1 + n3, 0, 0, 0, 0, n10, -1, n10, 1, 0, 1, 2])/
    (4*(-2 + 5*d - 4*n10 - 4*n3)*(-1 + d - n10 - n3)*(-1 + n3)) + 
   ((8 - 12*d + 14*d^2 - 5*d^3 + 8*n10 - 16*d*n10 + 14*d^2*n10 - 8*d*n10^2 - 
      16*d*n3 + 8*d^2*n3 + 8*n10*n3 - 20*d*n10*n3 + 8*n10^2*n3 + 8*n3^2 - 
      4*d*n3^2 + 8*n10*n3^2)*j[p4, 0, 0, -1 + n3, 0, 0, 0, 0, n10, 0, n10, 1, 
      0, 1, 1])/(8*(-2 + 5*d - 4*n10 - 4*n3)*(-1 + d - n10 - n3)*
     (d - n10 - n3)*(-1 + n3)) + 
   ((12 - 16*d + 5*d^2 + 20*n10 - 14*d*n10 + 8*n10^2 + 4*n3 - 2*d*n3 + 
      4*n10*n3)*j[p4, 0, 0, -1 + n3, 0, 0, 0, 0, n10, 0, n10, 1, 0, 1, 2])/
    (4*(-2 + 5*d - 4*n10 - 4*n3)*(-1 + d - n10 - n3)*(-1 + n3)) + 
   ((-4*n10 + 8*d*n10 - 3*d^2*n10 - 8*n10^2 + 8*d*n10^2 - 4*n10^3 - 
      4*n10*n3 + 2*d*n10*n3 - 4*n10^2*n3)*j[p4, 0, 0, -1 + n3, 0, 0, 1, -1, 
      n10, 0, 1 + n10, 0, 0, 1, 1])/(8*(-1 + d - n10 - n3)*(d - n10 - n3)*
     (-1 + n3)) + ((-4*n10 + 8*d*n10 - 3*d^2*n10 - 8*n10^2 + 8*d*n10^2 - 
      4*n10^3 - 4*n10*n3 + 2*d*n10*n3 - 4*n10^2*n3)*
     j[p4, 0, 0, -1 + n3, 0, 0, 1, -1, n10, 0, 1 + n10, 1, 0, 0, 1])/
    (8*(-1 + d - n10 - n3)*(d - n10 - n3)*(-1 + n3)) + 
   ((8*n10 - 20*d*n10 + 38*d^2*n10 - 15*d^3*n10 + 16*n10^2 - 64*d*n10^2 + 
      52*d^2*n10^2 + 24*n10^3 - 52*d*n10^3 + 16*n10^4 + 8*n10*n3 - 
      56*d*n10*n3 + 26*d^2*n10*n3 + 48*n10^2*n3 - 72*d*n10^2*n3 + 
      40*n10^3*n3 + 24*n10*n3^2 - 12*d*n10*n3^2 + 24*n10^2*n3^2)*
     j[p4, 0, 0, -1 + n3, 0, 0, 1, -1, 1 + n10, 0, n10, 0, 0, 1, 1])/
    (8*(-2 + 5*d - 4*n10 - 4*n3)*(-1 + d - n10 - n3)*(d - n10 - n3)*
     (-1 + n3)) + ((8*n10 - 20*d*n10 + 38*d^2*n10 - 15*d^3*n10 + 16*n10^2 - 
      64*d*n10^2 + 52*d^2*n10^2 + 24*n10^3 - 52*d*n10^3 + 16*n10^4 + 
      8*n10*n3 - 56*d*n10*n3 + 26*d^2*n10*n3 + 48*n10^2*n3 - 72*d*n10^2*n3 + 
      40*n10^3*n3 + 24*n10*n3^2 - 12*d*n10*n3^2 + 24*n10^2*n3^2)*
     j[p4, 0, 0, -1 + n3, 0, 0, 1, -1, 1 + n10, 0, n10, 1, 0, 0, 1])/
    (8*(-2 + 5*d - 4*n10 - 4*n3)*(-1 + d - n10 - n3)*(d - n10 - n3)*
     (-1 + n3)) + ((-40 + 140*d - 150*d^2 + 45*d^3 - 128*n10 + 296*d*n10 - 
      156*d^2*n10 - 136*n10^2 + 156*d*n10^2 - 48*n10^3 - 80*n3 + 160*d*n3 - 
      60*d^2*n3 - 168*n10*n3 + 164*d*n10*n3 - 88*n10^2*n3 - 40*n3^2 + 
      20*d*n3^2 - 40*n10*n3^2)*j[p4, 0, 0, -1 + n3, 0, 0, 1, 0, -1 + n10, 0, 
      n10, 1, 0, 1, 1])/(4*(-2 + 5*d - 4*n10 - 4*n3)*(-1 + d - n10 - n3)*
     (-1 + n3)) + ((-12 + 11*d - 2*d^2 - 4*n10 + d*n10 - 8*n3 + 2*d*n3)*
     j[p4, 0, 0, -1 + n3, 0, 0, 1, 0, -1 + n10, 0, n10, 2, 0, 1, 1])/
    (2*(-1 + n10)*(-1 + n3)*(1 - d + n10 + n3)) + 
   ((-4*n10 + 8*d*n10 - 3*d^2*n10 - 8*n10^2 + 8*d*n10^2 - 4*n10^3 - 
      4*n10*n3 + 2*d*n10*n3 - 4*n10^2*n3)*j[p4, 0, 0, -1 + n3, 0, 0, 1, 0, 
      -1 + n10, 0, 1 + n10, 0, 0, 1, 1])/(8*(-1 + d - n10 - n3)*
     (d - n10 - n3)*(-1 + n3)) + 
   ((-12 + 16*d - 5*d^2 - 20*n10 + 14*d*n10 - 8*n10^2 - 4*n3 + 2*d*n3 - 
      4*n10*n3)*j[p4, 0, 0, -1 + n3, 0, 0, 1, 0, n10, -1, n10, 1, 0, 0, 2])/
    (4*(-2 + 5*d - 4*n10 - 4*n3)*(-1 + d - n10 - n3)*(-1 + n3)) + 
   ((-8 + 44*d - 30*d^2 + 5*d^3 - 48*n10 + 88*d*n10 - 24*d^2*n10 - 56*n10^2 + 
      36*d*n10^2 - 16*n10^3 - 32*n3 + 16*d*n3 - 40*n10*n3 + 4*d*n10*n3 - 
      8*n10^2*n3 + 8*n3^2 - 4*d*n3^2 + 8*n10*n3^2)*j[p4, 0, 0, -1 + n3, 0, 0, 
      1, 0, n10, 0, -1 + n10, 1, 0, 1, 1])/(4*(-2 + 5*d - 4*n10 - 4*n3)*
     (-1 + d - n10 - n3)*(-1 + n3)) + 
   ((-8 + 6*d - d^2 - 8*n10 + 2*d*n10)*j[p4, 0, 0, -1 + n3, 0, 0, 1, 0, n10, 
      0, -1 + n10, 2, 0, 1, 1])/(4*(-1 + n10)*(-1 + n3)*(1 - d + n10 + n3)) + 
   ((-32 + 112*d - 168*d^2 + 60*d^3 - 88*n10 + 252*d*n10 - 114*d^2*n10 - 
      35*d^3*n10 - 80*n10^2 + 24*d*n10^2 + 128*d^2*n10^2 + 24*n10^3 - 
      140*d*n10^3 + 48*n10^4 - 48*n3 + 200*d*n3 - 68*d^2*n3 - 10*d^3*n3 - 
      152*n10*n3 + 96*d*n10*n3 + 86*d^2*n10*n3 - 8*n10^2*n3 - 
      180*d*n10^2*n3 + 96*n10^3*n3 - 80*n3^2 + 8*d*n3^2 + 16*d^2*n3^2 - 
      16*n10*n3^2 - 64*d*n10*n3^2 + 64*n10^2*n3^2 + 16*n3^3 - 8*d*n3^3 + 
      16*n10*n3^3)*j[p4, 0, 0, -1 + n3, 0, 0, 1, 0, n10, 0, n10, 0, 0, 1, 1])/
    (8*(-2 + 5*d - 4*n10 - 4*n3)*(-1 + d - n10 - n3)*(d - n10 - n3)*
     (-1 + n3)) + ((-24 + 68*d - 78*d^2 + 25*d^3 - 56*n10 + 100*d*n10 - 
      24*d^2*n10 - 20*d^3*n10 - 16*n10^2 - 52*d*n10^2 + 76*d^2*n10^2 + 
      48*n10^3 - 88*d*n10^3 + 32*n10^4 - 16*n3 + 56*d*n3 - 4*d^2*n3 - 
      10*d^3*n3 - 20*n10*n3 - 30*d*n10*n3 + 60*d^2*n10*n3 + 52*n10^2*n3 - 
      108*d*n10^2*n3 + 56*n10^3*n3 - 20*n3^2 - 18*d*n3^2 + 14*d^2*n3^2 + 
      16*n10*n3^2 - 46*d*n10*n3^2 + 36*n10^2*n3^2 + 12*n3^3 - 6*d*n3^3 + 
      12*n10*n3^3)*j[p4, 0, 0, -1 + n3, 0, 0, 1, 0, n10, 0, n10, 1, 0, 0, 1])/
    (4*(-2 + 5*d - 4*n10 - 4*n3)*(-1 + d - n10 - n3)*(d - n10 - n3)*
     (-1 + n3)) + ((12 - 16*d + 5*d^2 + 20*n10 - 14*d*n10 + 8*n10^2 + 4*n3 - 
      2*d*n3 + 4*n10*n3)*j[p4, 0, 0, -1 + n3, 0, 0, 1, 0, n10, 0, n10, 1, 0, 
      0, 2])/(4*(-2 + 5*d - 4*n10 - 4*n3)*(-1 + d - n10 - n3)*(-1 + n3)) + 
   ((-8 + 12*d - 14*d^2 + 5*d^3 - 8*n10 + 16*d*n10 - 14*d^2*n10 + 8*d*n10^2 + 
      16*d*n3 - 8*d^2*n3 - 8*n10*n3 + 20*d*n10*n3 - 8*n10^2*n3 - 8*n3^2 + 
      4*d*n3^2 - 8*n10*n3^2)*j[p4, 0, 0, -1 + n3, 0, 0, 1, 0, n10, 0, n10, 1, 
      0, 1, 0])/(8*(-2 + 5*d - 4*n10 - 4*n3)*(-1 + d - n10 - n3)*
     (d - n10 - n3)*(-1 + n3)) + 
   ((-32 + 76*d - 20*d^2 - 5*d^3 - 40*n10 - 40*d*n10 + 54*d^2*n10 + 
      48*n10^2 - 80*d*n10^2 + 32*n10^3 - 56*n3 + 44*d*n3 + 24*n10*n3 - 
      68*d*n10*n3 + 56*n10^2*n3 - 24*n3^2 + 4*d*n3^2 + 24*n10*n3^2)*
     j[p4, 0, 0, -1 + n3, 0, 0, 1, 0, n10, 0, n10, 1, 0, 1, 1])/
    (4*(-2 + 5*d - 4*n10 - 4*n3)*(-1 + d - n10 - n3)*(-1 + n3)) + 
   ((4 - d)*j[p4, 0, 0, -1 + n3, 0, 0, 1, 0, n10, 0, n10, 2, 0, 0, 1])/
    (2*(-1 + d - n10 - n3)*(-1 + n3)) + 
   ((4*n10 - 8*d*n10 + 3*d^2*n10 + 8*n10^2 - 8*d*n10^2 + 4*n10^3 + 4*n10*n3 - 
      2*d*n10*n3 + 4*n10^2*n3)*j[p4, 0, 0, -1 + n3, 0, 0, 1, 0, n10, 0, 
      1 + n10, 0, -1, 1, 1])/(8*(-1 + d - n10 - n3)*(d - n10 - n3)*
     (-1 + n3)) + ((-4*n10 + 8*d*n10 - 3*d^2*n10 - 8*n10^2 + 8*d*n10^2 - 
      4*n10^3 - 4*n10*n3 + 2*d*n10*n3 - 4*n10^2*n3)*
     j[p4, 0, 0, -1 + n3, 0, 0, 1, 0, n10, 0, 1 + n10, 0, 0, 1, 1])/
    (8*(-1 + d - n10 - n3)*(d - n10 - n3)*(-1 + n3)) + 
   ((8*n10 - 14*d*n10 + 5*d^2*n10 + 16*n10^2 - 14*d*n10^2 + 8*n10^3 + 
      8*n10*n3 - 4*d*n10*n3 + 8*n10^2*n3)*j[p4, 0, 0, -1 + n3, 0, 0, 1, 0, 
      1 + n10, 0, -1 + n10, 1, 0, 1, 1])/(4*(-1 + n10)*(-1 + n3)*
     (1 - d + n10 + n3)) + ((-8*n10 + 20*d*n10 - 38*d^2*n10 + 15*d^3*n10 - 
      16*n10^2 + 64*d*n10^2 - 52*d^2*n10^2 - 24*n10^3 + 52*d*n10^3 - 
      16*n10^4 - 8*n10*n3 + 56*d*n10*n3 - 26*d^2*n10*n3 - 48*n10^2*n3 + 
      72*d*n10^2*n3 - 40*n10^3*n3 - 24*n10*n3^2 + 12*d*n10*n3^2 - 
      24*n10^2*n3^2)*j[p4, 0, 0, -1 + n3, 0, 0, 1, 0, 1 + n10, 0, n10, 0, -1, 
      1, 1])/(8*(-2 + 5*d - 4*n10 - 4*n3)*(-1 + d - n10 - n3)*(d - n10 - n3)*
     (-1 + n3)) + ((8 - 12*d + 14*d^2 - 5*d^3 + 8*n10 - 16*d*n10 + 
      14*d^2*n10 - 8*d*n10^2 - 16*d*n3 + 8*d^2*n3 + 8*n10*n3 - 20*d*n10*n3 + 
      8*n10^2*n3 + 8*n3^2 - 4*d*n3^2 + 8*n10*n3^2)*j[p4, 0, 0, -1 + n3, 0, 0, 
      2, 0, n10, -1, n10, 1, 0, 0, 1])/(8*(-2 + 5*d - 4*n10 - 4*n3)*
     (-1 + d - n10 - n3)*(d - n10 - n3)*(-1 + n3)) + 
   ((8 - 12*d + 14*d^2 - 5*d^3 + 8*n10 - 16*d*n10 + 14*d^2*n10 - 8*d*n10^2 - 
      16*d*n3 + 8*d^2*n3 + 8*n10*n3 - 20*d*n10*n3 + 8*n10^2*n3 + 8*n3^2 - 
      4*d*n3^2 + 8*n10*n3^2)*j[p4, 0, 0, -1 + n3, 0, 0, 2, 0, n10, -1, n10, 
      1, 0, 1, 0])/(8*(-2 + 5*d - 4*n10 - 4*n3)*(-1 + d - n10 - n3)*
     (d - n10 - n3)*(-1 + n3)) + 
   ((-8 + 12*d - 14*d^2 + 5*d^3 - 8*n10 + 16*d*n10 - 14*d^2*n10 + 8*d*n10^2 + 
      16*d*n3 - 8*d^2*n3 - 8*n10*n3 + 20*d*n10*n3 - 8*n10^2*n3 - 8*n3^2 + 
      4*d*n3^2 - 8*n10*n3^2)*j[p4, 0, 0, -1 + n3, 0, 0, 2, 0, n10, 0, 
      -1 + n10, 1, 0, 0, 1])/(8*(-2 + 5*d - 4*n10 - 4*n3)*(-1 + d - n10 - n3)*
     (d - n10 - n3)*(-1 + n3)) + 
   ((-8 + 12*d - 14*d^2 + 5*d^3 - 8*n10 + 16*d*n10 - 14*d^2*n10 + 8*d*n10^2 + 
      16*d*n3 - 8*d^2*n3 - 8*n10*n3 + 20*d*n10*n3 - 8*n10^2*n3 - 8*n3^2 + 
      4*d*n3^2 - 8*n10*n3^2)*j[p4, 0, 0, -1 + n3, 0, 0, 2, 0, n10, 0, 
      -1 + n10, 1, 0, 1, 0])/(8*(-2 + 5*d - 4*n10 - 4*n3)*(-1 + d - n10 - n3)*
     (d - n10 - n3)*(-1 + n3)) + 
   ((-8 + 14*d - 5*d^2 - 16*n10 + 14*d*n10 - 8*n10^2 - 6*n3 + 3*d*n3 - 
      6*n10*n3)*j[p4, 0, 0, n3, 0, 0, 1, -1, n10, 0, n10, 0, 0, 1, 1])/
    (2*(-2 + 5*d - 4*n10 - 4*n3)*(-1 + d - n10 - n3)) + 
   ((-8 + 14*d - 5*d^2 - 16*n10 + 14*d*n10 - 8*n10^2 - 6*n3 + 3*d*n3 - 
      6*n10*n3)*j[p4, 0, 0, n3, 0, 0, 1, -1, n10, 0, n10, 1, 0, 0, 1])/
    (2*(-2 + 5*d - 4*n10 - 4*n3)*(-1 + d - n10 - n3)) + 
   ((4 - d)*j[p4, 0, 0, n3, 0, 0, 1, 0, -1 + n10, 0, -1 + n10, 2, 0, 1, 1])/
    (2*(-1 + n10)*(1 - d + n10 + n3)) + 
   ((-8 + 14*d - 5*d^2 - 16*n10 + 14*d*n10 - 8*n10^2 - 6*n3 + 3*d*n3 - 
      6*n10*n3)*j[p4, 0, 0, n3, 0, 0, 1, 0, -1 + n10, 0, n10, 0, 0, 1, 1])/
    ((-2 + 5*d - 4*n10 - 4*n3)*(-1 + d - n10 - n3)) + 
   ((-8 + 14*d - 5*d^2 - 16*n10 + 14*d*n10 - 8*n10^2 - 6*n3 + 3*d*n3 - 
      6*n10*n3)*j[p4, 0, 0, n3, 0, 0, 1, 0, -1 + n10, 0, n10, 1, 0, 0, 1])/
    (2*(-2 + 5*d - 4*n10 - 4*n3)*(-1 + d - n10 - n3)) + 
   ((-14 + 11*d - d^2 - 3*d*n10 + 2*n10^2 - 6*n3 - d*n3 + 4*n10*n3 + 2*n3^2)*
     j[p4, 0, 0, n3, 0, 0, 1, 0, -1 + n10, 0, n10, 1, 0, 1, 1])/
    (2*(-1 + n10)*(1 - d + n10 + n3)) + 
   ((-4 + d)*j[p4, 0, 0, n3, 0, 0, 1, 0, -1 + n10, 0, n10, 2, 0, 0, 1])/
    (2*(-1 + n10)*(1 - d + n10 + n3)) + 
   ((-8 + 14*d - 5*d^2 - 16*n10 + 14*d*n10 - 8*n10^2 - 6*n3 + 3*d*n3 - 
      6*n10*n3)*j[p4, 0, 0, n3, 0, 0, 1, 0, n10, 0, -1 + n10, 1, 0, 0, 1])/
    (2*(-2 + 5*d - 4*n10 - 4*n3)*(-1 + d - n10 - n3)) + 
   ((-20 + 12*d + d^2 + 8*n10 - 16*d*n10 + 12*n10^2 - 4*n3 - 2*d*n3 + 
      12*n10*n3)*j[p4, 0, 0, n3, 0, 0, 1, 0, n10, 0, -1 + n10, 1, 0, 1, 1])/
    (4*(-1 + n10)*(1 - d + n10 + n3)) + 
   ((8 - 14*d + 5*d^2 + 16*n10 - 14*d*n10 + 8*n10^2 + 6*n3 - 3*d*n3 + 
      6*n10*n3)*j[p4, 0, 0, n3, 0, 0, 1, 0, n10, 0, n10, 0, -1, 1, 1])/
    (2*(-2 + 5*d - 4*n10 - 4*n3)*(-1 + d - n10 - n3)) + 
   ((8 - 14*d + 5*d^2 + 16*n10 - 14*d*n10 + 8*n10^2 + 6*n3 - 3*d*n3 + 
      6*n10*n3)*j[p4, 0, 0, n3, 0, 0, 1, 0, n10, 0, n10, 1, 0, 0, 1])/
    (2*(-2 + 5*d - 4*n10 - 4*n3)*(-1 + d - n10 - n3)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n4 == 0 && n5 == 0 && n6 == 1 && n7 == 0 && n8 == 1 && n9 == 0 && 
    n1 != 0 -> ((4 - 2*d + 2*n3)*j[p4, n1, 0, n3, 0, 0, 1, 0, 0, 0, 1, 1, 0, 
      2, 1])/((-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((4 - d + 2*n1)*j[p4, n1, 0, n3, 0, 0, 1, 0, 0, 0, 2, 1, 0, 1, 1])/
    (2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((4 - d + 2*n1)*j[p4, n1, 0, n3, 0, 0, 1, 0, 1, 0, 2, 1, 0, 0, 1])/
    (2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((-4*n3 + d*n3 - 2*n1*n3)*j[p4, n1, 0, 1 + n3, 0, 0, 1, 0, 0, 0, 1, 1, 0, 
      1, 1])/((-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((-4*n3 + d*n3 - 2*n1*n3)*j[p4, n1, 0, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 
      0, 1])/(2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((-4 + d - 2*n1)*j[p4, 1 + n1, -1, n3, 0, 0, 1, 0, 0, 0, 2, 1, 0, 1, 1])/
    (2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((-4 + d - 2*n1)*j[p4, 1 + n1, -1, n3, 0, 0, 1, 0, 1, 0, 2, 0, 0, 1, 1])/
    (2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((-4 + d - 2*n1)*j[p4, 1 + n1, -1, n3, 0, 0, 1, 0, 1, 0, 2, 1, 0, 0, 1])/
    (2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((-4 + d - 2*n1)*j[p4, 1 + n1, -1, n3, 0, 0, 2, 0, 1, 0, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((4*n3 - d*n3 + 2*n1*n3)*j[p4, 1 + n1, -1, 1 + n3, 0, 0, 1, 0, 0, 0, 1, 1, 
      0, 1, 1])/(2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((-4*n3 + d*n3 - 2*n1*n3)*j[p4, 1 + n1, -1, 1 + n3, 0, 0, 1, 0, 1, 0, 0, 
      1, 0, 1, 1])/(2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((4*n3 - d*n3 + 2*n1*n3)*j[p4, 1 + n1, -1, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 0, 
      0, 1, 1])/(2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((4*n3 - d*n3 + 2*n1*n3)*j[p4, 1 + n1, -1, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 
      0, 0, 1])/(2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((4 - d + 2*n1)*j[p4, 1 + n1, 0, -1 + n3, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 
      2])/(2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((4 - d + 2*n1)*j[p4, 1 + n1, 0, -1 + n3, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 
      2])/(2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((4 - d + 2*n1)*j[p4, 1 + n1, 0, -1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 
      2])/(2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((-24 + 18*d - 3*d^2 - 12*n1 + 6*d*n1 - 8*n3 + 2*d*n3 - 4*n1*n3)*
     j[p4, 1 + n1, 0, -1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((-4 + d - 2*n1)*j[p4, 1 + n1, 0, -1 + n3, 0, 0, 1, 0, 1, 0, 2, 0, 0, 1, 
      1])/(2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((-4 + d - 2*n1)*j[p4, 1 + n1, 0, -1 + n3, 0, 0, 2, 0, 1, 0, 0, 1, 0, 1, 
      1])/(2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((-4 + d - 2*n1)*j[p4, 1 + n1, 0, n3, -1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 2])/
    (2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((-4 + d - 2*n1)*j[p4, 1 + n1, 0, n3, -1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 2])/
    (2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((-4 + d - 2*n1)*j[p4, 1 + n1, 0, n3, -1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    (2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((-4 + d - 2*n1)*j[p4, 1 + n1, 0, n3, -1, 0, 2, 0, 1, 0, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((4 - d + 2*n1)*j[p4, 1 + n1, 0, n3, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((4 - d + 2*n1)*j[p4, 1 + n1, 0, n3, 0, 0, 1, -1, 0, 0, 2, 1, 0, 1, 1])/
    (2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((4 - d + 2*n1)*j[p4, 1 + n1, 0, n3, 0, 0, 1, -1, 1, 0, 2, 0, 0, 1, 1])/
    (2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((4 - d + 2*n1)*j[p4, 1 + n1, 0, n3, 0, 0, 1, -1, 1, 0, 2, 1, 0, 0, 1])/
    (2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((4 - 3*d + 6*n1 - 4*d*n1 + 20*n3 - 4*d*n3 + 12*n1*n3)*
     j[p4, 1 + n1, 0, n3, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((-4 + 2*d - 2*n3)*j[p4, 1 + n1, 0, n3, 0, 0, 1, 0, 0, 0, 1, 1, 0, 2, 1])/
    ((-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((-8 + 3*d - 2*n1 - 2*n3)*j[p4, 1 + n1, 0, n3, 0, 0, 1, 0, 0, 0, 1, 2, -1, 
      1, 1])/((-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((8 - 3*d + 2*n1 + 2*n3)*j[p4, 1 + n1, 0, n3, 0, 0, 1, 0, 0, 0, 1, 2, 0, 
      1, 1])/((-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((4 - d + 2*n1 - 4*n3 + d*n3 - 2*n1*n3)*j[p4, 1 + n1, 0, n3, 0, 0, 1, 0, 
      1, 0, 0, 1, 0, 1, 1])/((-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((-12 + 5*d - 10*n1 + 4*d*n1 + 4*n3 - 2*d*n3)*j[p4, 1 + n1, 0, n3, 0, 0, 
      1, 0, 1, 0, 1, 0, 0, 1, 1])/(2*(-3 + d - n1)*
     (-12 + 5*d - 2*n1 - 4*n3)) + 
   ((-24 + 8*d - 24*n1 + 6*d*n1 - 4*n1^2 + 8*n3 - 3*d*n3 + 2*n1*n3)*
     j[p4, 1 + n1, 0, n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((-4 + d - 2*n1)*j[p4, 1 + n1, 0, n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0])/
    (2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((32 - 20*d + 3*d^2 + 24*n1 - 8*d*n1 + 4*n1^2 + 8*n3 - 2*d*n3 + 4*n1*n3)*
     j[p4, 1 + n1, 0, n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((-4 + d - 2*n1)*j[p4, 1 + n1, 0, n3, 0, 0, 1, 0, 1, 0, 2, 0, -1, 1, 1])/
    (2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((4 - d + 2*n1)*j[p4, 1 + n1, 0, n3, 0, 0, 1, 0, 1, 0, 2, 0, 0, 1, 1])/
    (2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((4 - d + 2*n1)*j[p4, 1 + n1, 0, n3, 0, 0, 2, -1, 1, 0, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((4 - d + 2*n1)*j[p4, 1 + n1, 0, n3, 0, 0, 2, 0, 0, -1, 1, 1, 0, 1, 1])/
    ((-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((4 - d + 2*n1)*j[p4, 1 + n1, 0, n3, 0, 0, 2, 0, 1, -1, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((4 - d + 2*n1)*j[p4, 1 + n1, 0, n3, 0, 0, 2, 0, 1, -1, 1, 1, 0, 1, 0])/
    (2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((-4 + d - 2*n1)*j[p4, 1 + n1, 0, n3, 0, 0, 2, 0, 1, 0, 0, 1, -1, 1, 1])/
    (2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((-4*n3 + d*n3 - 2*n1*n3)*j[p4, 1 + n1, 0, 1 + n3, 0, 0, 1, -1, 0, 0, 1, 
      1, 0, 1, 1])/(2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((4*n3 - d*n3 + 2*n1*n3)*j[p4, 1 + n1, 0, 1 + n3, 0, 0, 1, -1, 1, 0, 0, 1, 
      0, 1, 1])/(2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((-4*n3 + d*n3 - 2*n1*n3)*j[p4, 1 + n1, 0, 1 + n3, 0, 0, 1, -1, 1, 0, 1, 
      0, 0, 1, 1])/(2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((-4*n3 + d*n3 - 2*n1*n3)*j[p4, 1 + n1, 0, 1 + n3, 0, 0, 1, -1, 1, 0, 1, 
      1, 0, 0, 1])/(2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((-4*n3 + d*n3 - 2*n1*n3)*j[p4, 1 + n1, 0, 1 + n3, 0, 0, 1, 0, 0, 0, 1, 1, 
      -1, 1, 1])/(2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((4*n3 - d*n3 + 2*n1*n3)*j[p4, 1 + n1, 0, 1 + n3, 0, 0, 1, 0, 0, 0, 1, 1, 
      0, 1, 1])/((-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((-4*n3 + d*n3 - 2*n1*n3)*j[p4, 1 + n1, 0, 1 + n3, 0, 0, 1, 0, 1, 0, 0, 1, 
      -1, 1, 1])/(2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((4*n3 - d*n3 + 2*n1*n3)*j[p4, 1 + n1, 0, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 0, 
      -1, 1, 1])/(2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((4*n3 - d*n3 + 2*n1*n3)*j[p4, 1 + n1, 0, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 
      0, 0, 1])/(2*(-3 + d - n1)*(-12 + 5*d - 2*n1 - 4*n3)) + 
   ((-4 + 2*d - 4*n1 + 2*d*n1 - 2*n3 - 2*n1*n3)*j[p4, 2 + n1, 0, n3, 0, 0, 1, 
      0, 0, 0, 1, 1, 0, 1, 1])/((3 - d + n1)*(12 - 5*d + 2*n1 + 4*n3)) + 
   ((4 - 2*d + 4*n1 - 2*d*n1 + 2*n3 + 2*n1*n3)*j[p4, 2 + n1, 0, n3, 0, 0, 1, 
      0, 1, 0, 1, 0, 0, 1, 1])/((3 - d + n1)*(12 - 5*d + 2*n1 + 4*n3)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n3 == 1 && n4 == 0 && n5 == 0 && n6 == 1 && n7 == -1 && n9 == 0 && 
     !(n2 == 0 || n8 == 1) -> 
  j[p4, -1, 1 + n2, 0, 0, 0, 1, -1, n8, 0, 1, 1, 0, 2, 1]/(2*(-2 + d - n2)) + 
   ((-8 + 3*d + 2*n2)*j[p4, -1, 1 + n2, 0, 0, 0, 1, -1, n8, 0, 2, 1, 0, 1, 
      1])/(2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   j[p4, -1, 1 + n2, 1, 0, 0, 1, -1, n8, 0, 0, 2, 0, 1, 1]/(-2 + d - n2) + 
   ((-48 + 26*d - 3*d^2 + 24*n2 - 14*d*n2 + 8*n2^2 + 8*n2*n8)*
     j[p4, -1, 1 + n2, 1, 0, 0, 1, -1, n8, 0, 1, 1, 0, 1, 1])/
    (2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   ((8 - 3*d - 2*n2)*j[p4, -1, 1 + n2, 1, 0, 0, 1, -1, n8, 0, 2, 1, 0, 0, 1])/
    (2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) - 
   (n8*j[p4, -1, 1 + n2, 1, 0, 0, 1, -1, 1 + n8, 0, 1, 1, 0, 0, 1])/
    (2*(-2 + d - n2)) + ((-1 - n2)*j[p4, -1, 2 + n2, 0, 0, 0, 1, -1, n8, 0, 
      1, 1, 0, 1, 1])/(2*(2 - d + n2)) + 
   ((1 + n2)*j[p4, -1, 2 + n2, 1, 0, 0, 1, -1, n8, 0, 1, 1, 0, 0, 1])/
    (2 - d + n2) + ((8 - 3*d - 2*n2)*j[p4, 0, n2, 0, 0, 0, 1, -1, n8, 0, 1, 
      1, 0, 1, 2])/(2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   ((8 - 3*d - 2*n2)*j[p4, 0, n2, 0, 0, 0, 1, -1, n8, 0, 2, 1, 0, 1, 1])/
    (2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   ((-8 + 3*d + 2*n2)*j[p4, 0, n2, 0, 0, 0, 1, 0, n8, 0, 1, 1, 0, 1, 1])/
    (2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   ((-8 + 3*d + 2*n2)*j[p4, 0, n2, 1, 0, 0, 1, -1, n8, 0, 2, 0, 0, 1, 1])/
    (2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   ((-8 + 3*d + 2*n2)*j[p4, 0, n2, 1, 0, 0, 1, -1, n8, 0, 2, 1, 0, 0, 1])/
    (2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   (n8*j[p4, 0, n2, 1, 0, 0, 1, -1, 1 + n8, 0, 1, 0, 0, 1, 1])/
    (2*(-2 + d - n2)) + (n8*j[p4, 0, n2, 1, 0, 0, 1, -1, 1 + n8, 0, 1, 1, 0, 
      0, 1])/(2*(-2 + d - n2)) + 
   ((8 - 3*d - 2*n2)*j[p4, 0, n2, 1, 0, 0, 1, 0, n8, 0, 1, 1, 0, 0, 1])/
    (2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   ((8 - 3*d)*j[p4, 0, n2, 1, 0, 0, 2, -1, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   ((-8 + 3*d)*j[p4, 0, n2, 1, 0, 0, 2, -1, n8, 0, 0, 1, 0, 1, 1])/
    (2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   ((8 - 3*d - 2*n2)*j[p4, 0, 1 + n2, 0, -1, 0, 1, -1, n8, 0, 1, 1, 0, 1, 2])/
    (2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   ((-8 + 3*d + 2*n2)*j[p4, 0, 1 + n2, 0, 0, 0, 1, -2, n8, 0, 1, 1, 0, 1, 2])/
    (2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   ((-8 + 3*d + 2*n2)*j[p4, 0, 1 + n2, 0, 0, 0, 1, -2, n8, 0, 2, 1, 0, 1, 1])/
    (2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   ((-8 + 3*d + 2*n2)*j[p4, 0, 1 + n2, 0, 0, 0, 1, -1, -1 + n8, 0, 1, 1, 0, 
      1, 2])/(2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   ((8 - 3*d)*j[p4, 0, 1 + n2, 0, 0, 0, 1, -1, n8, -1, 1, 1, 0, 1, 2])/
    (2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   ((8 - 3*d - 2*n2)*j[p4, 0, 1 + n2, 0, 0, 0, 1, -1, n8, 0, 1, 1, -1, 1, 2])/
    (2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   ((8 - 3*d + 10*n2 - 6*d*n2)*j[p4, 0, 1 + n2, 0, 0, 0, 1, -1, n8, 0, 1, 1, 
      0, 1, 1])/(2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   ((-8 + 3*d)*j[p4, 0, 1 + n2, 0, 0, 0, 1, -1, n8, 0, 1, 1, 0, 1, 2])/
    (2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) - 
   j[p4, 0, 1 + n2, 0, 0, 0, 1, -1, n8, 0, 1, 1, 0, 2, 1]/(2*(-2 + d - n2)) + 
   ((8 - 3*d - 2*n2)*j[p4, 0, 1 + n2, 0, 0, 0, 1, 0, -1 + n8, 0, 1, 1, 0, 1, 
      1])/(2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   ((8 - 3*d)*j[p4, 0, 1 + n2, 0, 0, 0, 2, -1, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   ((-8 + 3*d)*j[p4, 0, 1 + n2, 0, 0, 0, 2, -1, n8, -1, 1, 1, 0, 1, 1])/
    (2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   ((-8 + 3*d + 2*n2)*j[p4, 0, 1 + n2, 1, -1, 0, 0, -1, n8, 0, 1, 1, 0, 1, 
      2])/(2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   ((-8 + 3*d + 2*n2)*j[p4, 0, 1 + n2, 1, -1, 0, 1, -1, n8, 0, 1, 1, 0, 0, 
      2])/(2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   ((-8 + 3*d + 2*n2)*j[p4, 0, 1 + n2, 1, -1, 0, 2, -1, n8, 0, 0, 1, 0, 1, 
      1])/(2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) - 
   (n2*j[p4, 0, 1 + n2, 1, 0, 0, 0, -1, n8, -1, 1, 1, 0, 1, 2])/
    ((2 - d + n2)*(8 - 3*d + 2*n2)) + 
   ((8 - 3*d)*j[p4, 0, 1 + n2, 1, 0, 0, 0, -1, n8, 0, 1, 1, 0, 1, 1])/
    (2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   (n2*j[p4, 0, 1 + n2, 1, 0, 0, 0, -1, n8, 0, 1, 1, 0, 1, 2])/
    ((-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   ((8 - 3*d - 2*n2)*j[p4, 0, 1 + n2, 1, 0, 0, 1, -2, n8, 0, 2, 0, 0, 1, 1])/
    (2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   ((8 - 3*d - 2*n2)*j[p4, 0, 1 + n2, 1, 0, 0, 1, -2, n8, 0, 2, 1, 0, 0, 1])/
    (2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) - 
   (n8*j[p4, 0, 1 + n2, 1, 0, 0, 1, -2, 1 + n8, 0, 1, 0, 0, 1, 1])/
    (2*(-2 + d - n2)) - (n8*j[p4, 0, 1 + n2, 1, 0, 0, 1, -2, 1 + n8, 0, 1, 1, 
      0, 0, 1])/(2*(-2 + d - n2)) - j[p4, 0, 1 + n2, 1, 0, 0, 1, -1, -1 + n8, 
     0, 0, 2, 0, 1, 1]/(-2 + d - n2) + 
   ((-136 + 163*d - 66*d^2 + 9*d^3 + 12*n2 - 10*d*n2 - 88*n8 + 73*d*n8 - 
      15*d^2*n8 - 8*n2*n8 + 10*d*n2*n8 - 16*n8^2 + 6*d*n8^2 - 4*n2*n8^2)*
     j[p4, 0, 1 + n2, 1, 0, 0, 1, -1, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (2*(-8 + 3*d - 2*n2)*(-2 + d - n2)*(-1 + n8)) + 
   ((8 - 3*d - 2*n2)*j[p4, 0, 1 + n2, 1, 0, 0, 1, -1, -1 + n8, 0, 2, 0, 0, 1, 
      1])/(2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) - 
   (n2*j[p4, 0, 1 + n2, 1, 0, 0, 1, -1, n8, -1, 1, 1, 0, 0, 2])/
    ((2 - d + n2)*(8 - 3*d + 2*n2)) + ((-8 + 3*d - 12*n2 + 3*d*n2 - 2*n2^2)*
     j[p4, 0, 1 + n2, 1, 0, 0, 1, -1, n8, 0, 0, 1, 0, 1, 1])/
    (2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   j[p4, 0, 1 + n2, 1, 0, 0, 1, -1, n8, 0, 0, 2, -1, 1, 1]/
    (2*(-2 + d - n2)) - j[p4, 0, 1 + n2, 1, 0, 0, 1, -1, n8, 0, 0, 2, 0, 1, 
     1]/(2*(-2 + d - n2)) - j[p4, 0, 1 + n2, 1, 0, 0, 1, -1, n8, 0, 1, 0, 0, 
     1, 1]/(-2 + d - n2) + ((-80 + 54*d - 9*d^2 - 32*n2 + 12*d*n2 - 16*n8 + 
      6*d*n8 + 4*n2*n8)*j[p4, 0, 1 + n2, 1, 0, 0, 1, -1, n8, 0, 1, 1, 0, 0, 
      1])/(2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   (n2*j[p4, 0, 1 + n2, 1, 0, 0, 1, -1, n8, 0, 1, 1, 0, 0, 2])/
    ((-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   ((-8 + 3*d)*j[p4, 0, 1 + n2, 1, 0, 0, 1, -1, n8, 0, 1, 1, 0, 1, 0])/
    (2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   ((32 - 20*d + 3*d^2 - 4*n2 + 4*d*n2 - 4*n2^2 + 16*n8 - 6*d*n8 - 4*n2*n8)*
     j[p4, 0, 1 + n2, 1, 0, 0, 1, -1, n8, 0, 1, 1, 0, 1, 1])/
    (2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   ((-8 + 3*d + 2*n2)*j[p4, 0, 1 + n2, 1, 0, 0, 1, -1, n8, 0, 2, 0, -1, 1, 
      1])/(2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   ((8 - 3*d - 2*n2)*j[p4, 0, 1 + n2, 1, 0, 0, 1, -1, n8, 0, 2, 0, 0, 1, 1])/
    (2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   (n8*j[p4, 0, 1 + n2, 1, 0, 0, 1, -1, 1 + n8, 0, 1, 0, -1, 1, 1])/
    (2*(-2 + d - n2)) + ((-8 + 3*d + 2*n2)*j[p4, 0, 1 + n2, 1, 0, 0, 1, 0, 
      -1 + n8, 0, 1, 1, 0, 0, 1])/(2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   ((-8 + 3*d)*j[p4, 0, 1 + n2, 1, 0, 0, 2, -2, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   ((8 - 3*d)*j[p4, 0, 1 + n2, 1, 0, 0, 2, -2, n8, 0, 0, 1, 0, 1, 1])/
    (2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   ((-8 + 3*d)*j[p4, 0, 1 + n2, 1, 0, 0, 2, -1, -2 + n8, 0, 1, 1, 0, 1, 1])/
    (2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   ((8 - 3*d)*j[p4, 0, 1 + n2, 1, 0, 0, 2, -1, -1 + n8, -1, 1, 1, 0, 1, 1])/
    ((-8 + 3*d - 2*n2)*(-2 + d - n2)) - 
   (n2*j[p4, 0, 1 + n2, 1, 0, 0, 2, -1, -1 + n8, 0, 0, 1, 0, 1, 1])/
    ((2 - d + n2)*(8 - 3*d + 2*n2)) + 
   ((8 - 3*d)*j[p4, 0, 1 + n2, 1, 0, 0, 2, -1, -1 + n8, 0, 1, 1, -1, 1, 1])/
    (2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   ((-8 + 3*d)*j[p4, 0, 1 + n2, 1, 0, 0, 2, -1, -1 + n8, 0, 1, 1, 0, 0, 1])/
    (2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   ((-8 + 3*d)*j[p4, 0, 1 + n2, 1, 0, 0, 2, -1, -1 + n8, 0, 1, 1, 0, 1, 0])/
    (2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   ((8 - 3*d)*j[p4, 0, 1 + n2, 1, 0, 0, 2, -1, n8, -1, 1, 1, 0, 0, 1])/
    (2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   ((8 - 3*d)*j[p4, 0, 1 + n2, 1, 0, 0, 2, -1, n8, -1, 1, 1, 0, 1, 0])/
    (2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   ((-8 + 3*d)*j[p4, 0, 1 + n2, 1, 0, 0, 2, -1, n8, 0, 0, 1, -1, 1, 1])/
    (2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   ((80 - 54*d + 9*d^2 + 8*n2 - 8*n2*n8)*j[p4, 0, 1 + n2, 2, 0, 0, 1, -2, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/(2*(-8 + 3*d - 2*n2)*(-2 + d - n2)*
     (-1 + n8)) + ((-80 + 54*d - 9*d^2 - 8*n2 + 8*n2*n8)*
     j[p4, 0, 1 + n2, 2, 0, 0, 1, -1, -1 + n8, 0, 1, 1, 0, 0, 1])/
    (2*(-8 + 3*d - 2*n2)*(-2 + d - n2)*(-1 + n8)) + 
   ((-8 + 3*d - 6*n2 + 3*d*n2 + 2*n2^2)*j[p4, 0, 2 + n2, 0, 0, 0, 1, -2, n8, 
      0, 1, 1, 0, 1, 1])/(2*(-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   ((72 - 51*d + 9*d^2 + 74*n2 - 51*d*n2 + 9*d^2*n2 + 2*n2^2 + 8*n8 - 
      3*d*n8 + 6*n2*n8 - 3*d*n2*n8 - 2*n2^2*n8)*j[p4, 0, 2 + n2, 0, 0, 0, 1, 
      -1, -1 + n8, 0, 1, 1, 0, 1, 1])/(2*(-8 + 3*d - 2*n2)*(-2 + d - n2)*
     (-1 + n8)) + ((-80 + 54*d - 9*d^2 - 80*n2 + 54*d*n2 - 9*d^2*n2)*
     j[p4, 0, 2 + n2, 1, 0, 0, 1, -2, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (2*(-8 + 3*d - 2*n2)*(-2 + d - n2)*(-1 + n8)) + 
   ((1 + n2)*j[p4, 0, 2 + n2, 1, 0, 0, 1, -2, n8, 0, 0, 1, 0, 1, 1])/
    (2 - d + n2) + ((8 - 3*d + 6*n2 - 3*d*n2 - 2*n2^2)*
     j[p4, 0, 2 + n2, 1, 0, 0, 1, -2, n8, 0, 1, 1, 0, 0, 1])/
    ((-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   ((-8 + 3*d - 8*n2 + 3*d*n2)*j[p4, 0, 2 + n2, 1, 0, 0, 1, -2, n8, 0, 1, 1, 
      0, 1, 1])/((-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   ((-80 + 54*d - 9*d^2 - 80*n2 + 54*d*n2 - 9*d^2*n2)*
     j[p4, 0, 2 + n2, 1, 0, 0, 1, -1, -2 + n8, 0, 1, 1, 0, 1, 1])/
    (2*(-8 + 3*d - 2*n2)*(-2 + d - n2)*(-1 + n8)) + 
   ((80 - 54*d + 9*d^2 + 80*n2 - 54*d*n2 + 9*d^2*n2)*
     j[p4, 0, 2 + n2, 1, 0, 0, 1, -1, -1 + n8, 0, 1, 1, -1, 1, 1])/
    (2*(-8 + 3*d - 2*n2)*(-2 + d - n2)*(-1 + n8)) + 
   ((-72 + 51*d - 9*d^2 - 74*n2 + 51*d*n2 - 9*d^2*n2 - 2*n2^2 - 8*n8 + 
      3*d*n8 - 6*n2*n8 + 3*d*n2*n8 + 2*n2^2*n8)*j[p4, 0, 2 + n2, 1, 0, 0, 1, 
      -1, -1 + n8, 0, 1, 1, 0, 0, 1])/((-8 + 3*d - 2*n2)*(-2 + d - n2)*
     (-1 + n8)) + ((8 - 3*d + 8*n2 - 3*d*n2)*j[p4, 0, 2 + n2, 1, 0, 0, 1, -1, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/((-8 + 3*d - 2*n2)*(-2 + d - n2)) + 
   ((-1 - n2)*j[p4, 0, 2 + n2, 1, 0, 0, 1, -1, n8, 0, 0, 1, -1, 1, 1])/
    (2*(2 - d + n2)), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?Positive, (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, 
    (n7_)?NonPositive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n3 == 1 && n4 == 0 && n5 == 0 && n6 == 1 && n7 == 0 && n8 == n10 && 
    n9 == 0 && n10 != 1 -> 
  ((45280 - 176080*d + 282120*d^2 - 238560*d^3 + 112360*d^4 - 27965*d^5 + 
      2875*d^6 + 149952*n10 - 481536*d*n10 + 612320*d^2*n10 - 
      385724*d^3*n10 + 120452*d^4*n10 - 14925*d^5*n10 + 204576*n10^2 - 
      520896*d*n10^2 + 493216*d^2*n10^2 - 205944*d^3*n10^2 + 
      32010*d^4*n10^2 + 146496*n10^3 - 277792*d*n10^3 + 174384*d^2*n10^3 - 
      36248*d^3*n10^3 + 57984*n10^4 - 72960*d*n10^4 + 22816*d^2*n10^4 + 
      12032*n10^5 - 7552*d*n10^5 + 1024*n10^6)*j[p4, -1, 0, 0, 0, 0, 1, 0, 
      n10, 0, -1 + n10, 1, 0, 2, 1])/(4*(-2 + d)*(-1 + n10)*
     (-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 
      14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-2960 + 10840*d - 15280*d^2 + 10430*d^3 - 3465*d^4 + 450*d^5 - 
      7504*n10 + 21744*d*n10 - 22740*d^2*n10 + 10262*d^3*n10 - 1695*d^4*n10 - 
      8608*n10^2 + 18136*d*n10^2 - 12372*d^2*n10^2 + 2748*d^3*n10^2 - 
      5232*n10^3 + 7104*d*n10^3 - 2364*d^2*n10^3 - 1600*n10^4 + 
      1056*d*n10^4 - 192*n10^5)*j[p4, -1, 0, 0, 0, 0, 1, 0, n10, 0, n10, 1, 
      0, 1, 1])/(2*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 
      155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 
      704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 6356*d^2*n10^2 + 
      1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 1032*d^2*n10^3 - 
      704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-14720 + 46640*d - 58280*d^2 + 35960*d^3 - 10970*d^4 + 1325*d^5 - 
      35648*n10 + 90032*d*n10 - 84336*d^2*n10 + 34756*d^3*n10 - 
      5320*d^4*n10 - 35904*n10^2 + 67936*d*n10^2 - 42464*d^2*n10^2 + 
      8768*d^3*n10^2 - 18560*n10^3 + 23424*d*n10^3 - 7328*d^2*n10^3 - 
      4864*n10^4 + 3072*d*n10^4 - 512*n10^5)*j[p4, -1, 0, 0, 0, 0, 1, 0, n10, 
      0, n10, 1, 0, 2, 1])/(4*(-2 + d)*(-2320 + 6912*d - 8128*d^2 + 
      4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 
      12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-10*n10 + 5*d*n10 - 4*n10^2)*j[p4, -1, 0, 0, 0, 0, 1, 0, n10, 0, 
      1 + n10, 1, 0, 1, 1])/(4*(-2 + d - n10)^2) + 
   ((-43680 + 138480*d - 172880*d^2 + 106360*d^3 - 32290*d^4 + 3875*d^5 - 
      103072*n10 + 255856*d*n10 - 234584*d^2*n10 + 94312*d^3*n10 - 
      14050*d^4*n10 - 95840*n10^2 + 174400*d*n10^2 - 104304*d^2*n10^2 + 
      20540*d^3*n10^2 - 44000*n10^3 + 52096*d*n10^3 - 15224*d^2*n10^3 - 
      9984*n10^4 + 5760*d*n10^4 - 896*n10^5)*j[p4, -1, 0, 1, 0, 0, 0, 0, n10, 
      0, -1 + n10, 2, 0, 1, 1])/(4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 
      4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 
      12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-19200*n10 + 59680*d*n10 - 73200*d^2*n10 + 44340*d^3*n10 - 
      13280*d^4*n10 + 1575*d^5*n10 - 39360*n10^2 + 95152*d*n10^2 - 
      85264*d^2*n10^2 + 33604*d^3*n10^2 - 4920*d^4*n10^2 - 29472*n10^3 + 
      51792*d*n10^3 - 30024*d^2*n10^3 + 5748*d^3*n10^3 - 9600*n10^4 + 
      10752*d*n10^4 - 2976*d^2*n10^4 - 1152*n10^5 + 576*d*n10^5)*
     j[p4, -1, 0, 1, 0, 0, 0, 0, 1 + n10, 0, -1 + n10, 1, 0, 1, 1])/
    (4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 
      155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 
      704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 6356*d^2*n10^2 + 
      1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 1032*d^2*n10^3 - 
      704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((12240 - 39400*d + 49840*d^2 - 31010*d^3 + 9505*d^4 - 1150*d^5 + 
      31856*n10 - 80352*d*n10 + 74660*d^2*n10 - 30354*d^3*n10 + 
      4565*d^4*n10 + 33184*n10^2 - 61304*d*n10^2 + 37140*d^2*n10^2 - 
      7396*d^3*n10^2 + 17200*n10^3 - 20672*d*n10^3 + 6124*d^2*n10^3 + 
      4416*n10^4 - 2592*d*n10^4 + 448*n10^5)*j[p4, -1, 0, 1, 0, 0, 1, 0, n10, 
      0, -1 + n10, 1, 0, 2, 0])/(2*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 
      4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 
      12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((2960 - 10840*d + 15280*d^2 - 10430*d^3 + 3465*d^4 - 450*d^5 + 7504*n10 - 
      21744*d*n10 + 22740*d^2*n10 - 10262*d^3*n10 + 1695*d^4*n10 + 
      8608*n10^2 - 18136*d*n10^2 + 12372*d^2*n10^2 - 2748*d^3*n10^2 + 
      5232*n10^3 - 7104*d*n10^3 + 2364*d^2*n10^3 + 1600*n10^4 - 
      1056*d*n10^4 + 192*n10^5)*j[p4, -1, 0, 1, 0, 0, 1, 0, n10, 0, n10, 1, 
      0, 0, 1])/(2*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 
      155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 
      704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 6356*d^2*n10^2 + 
      1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 1032*d^2*n10^3 - 
      704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((10*n10 - 5*d*n10 + 4*n10^2)*j[p4, -1, 0, 1, 0, 0, 1, 0, n10, 0, 1 + n10, 
      1, 0, 0, 1])/(4*(-2 + d - n10)^2) + 
   ((-4680*n10 + 14020*d*n10 - 16590*d^2*n10 + 9715*d^3*n10 - 2820*d^4*n10 + 
      325*d^5*n10 - 8912*n10^2 + 20772*d*n10^2 - 18050*d^2*n10^2 + 
      6936*d^3*n10^2 - 995*d^4*n10^2 - 5896*n10^3 + 10072*d*n10^3 - 
      5744*d^2*n10^3 + 1093*d^3*n10^3 - 1432*n10^4 + 1600*d*n10^4 - 
      454*d^2*n10^4 + 32*n10^6)*j[p4, -1, 0, 1, 0, 0, 1, 0, 1 + n10, 0, 
      -1 + n10, 1, 0, 0, 1])/((-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 
      4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 
      12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((6*n10 - 3*d*n10 + 2*n10^2)*j[p4, -1, 0, 1, 0, 0, 1, 0, 1 + n10, 0, n10, 
      1, 0, 0, 1])/(4*(-2 + d - n10)^2) + 
   ((-4320 + 11920*d - 12800*d^2 + 6720*d^3 - 1730*d^4 + 175*d^5 + 2272*n10 - 
      8656*d*n10 + 10232*d^2*n10 - 4876*d^3*n10 + 820*d^4*n10 + 14240*n10^2 - 
      27664*d*n10^2 + 17368*d^2*n10^2 - 3548*d^3*n10^2 + 12416*n10^3 - 
      15168*d*n10^3 + 4544*d^2*n10^3 + 4224*n10^4 - 2496*d*n10^4 + 512*n10^5)*
     j[p4, -1, 0, 2, 0, 0, 1, 0, n10, 0, -1 + n10, 1, 0, 0, 1])/
    (4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 
      155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 
      704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 6356*d^2*n10^2 + 
      1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 1032*d^2*n10^3 - 
      704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-19200 + 59680*d - 73200*d^2 + 44340*d^3 - 13280*d^4 + 1575*d^5 - 
      39360*n10 + 95152*d*n10 - 85264*d^2*n10 + 33604*d^3*n10 - 
      4920*d^4*n10 - 29472*n10^2 + 51792*d*n10^2 - 30024*d^2*n10^2 + 
      5748*d^3*n10^2 - 9600*n10^3 + 10752*d*n10^3 - 2976*d^2*n10^3 - 
      1152*n10^4 + 576*d*n10^4)*j[p4, -1, 0, 2, 0, 0, 1, 0, n10, 0, -1 + n10, 
      1, 0, 1, 0])/(4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 
      1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 
      4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 
      6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 
      1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) - 
   j[p4, -1, 0, 2, 0, 0, 1, 0, n10, 0, n10, 1, 0, 0, 1]/(2*(-2 + d - n10)) + 
   ((16320 - 48320*d + 56540*d^2 - 32760*d^3 + 9415*d^4 - 1075*d^5 + 
      25328*n10 - 56344*d*n10 + 46704*d^2*n10 - 17122*d^3*n10 + 
      2345*d^4*n10 + 8080*n10^2 - 10632*d*n10^2 + 4372*d^2*n10^2 - 
      538*d^3*n10^2 - 4736*n10^3 + 6720*d*n10^3 - 2240*d^2*n10^3 - 
      3264*n10^4 + 2016*d*n10^4 - 512*n10^5)*j[p4, 0, -1, 0, 0, 0, 1, 0, n10, 
      0, -1 + n10, 1, 0, 1, 2])/(4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 
      4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 
      12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((2960 - 10840*d + 15280*d^2 - 10430*d^3 + 3465*d^4 - 450*d^5 + 7504*n10 - 
      21744*d*n10 + 22740*d^2*n10 - 10262*d^3*n10 + 1695*d^4*n10 + 
      8608*n10^2 - 18136*d*n10^2 + 12372*d^2*n10^2 - 2748*d^3*n10^2 + 
      5232*n10^3 - 7104*d*n10^3 + 2364*d^2*n10^3 + 1600*n10^4 - 
      1056*d*n10^4 + 192*n10^5)*j[p4, 0, -1, 0, 0, 0, 1, 0, n10, 0, n10, 1, 
      0, 1, 1])/(2*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 
      155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 
      704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 6356*d^2*n10^2 + 
      1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 1032*d^2*n10^3 - 
      704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((10 - 5*d + 4*n10)*j[p4, 0, -1, 0, 0, 0, 1, 0, n10, 0, n10, 1, 0, 1, 2])/
    (4*(-2 + d - n10)^2) + ((10*n10 - 5*d*n10 + 4*n10^2)*
     j[p4, 0, -1, 0, 0, 0, 1, 0, n10, 0, 1 + n10, 1, 0, 1, 1])/
    (4*(-2 + d - n10)^2) + ((-9760 + 32160*d - 41400*d^2 + 26060*d^3 - 
      8040*d^4 + 975*d^5 - 28064*n10 + 70672*d*n10 - 64984*d^2*n10 + 
      25952*d^3*n10 - 3810*d^4*n10 - 30464*n10^2 + 54672*d*n10^2 - 
      31816*d^2*n10^2 + 6024*d^3*n10^2 - 15840*n10^3 + 17920*d*n10^3 - 
      4920*d^2*n10^3 - 3968*n10^4 + 2112*d*n10^4 - 384*n10^5)*
     j[p4, 0, -1, 0, 0, 0, 2, 0, n10, 0, -1 + n10, 1, 0, 1, 1])/
    (4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 
      155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 
      704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 6356*d^2*n10^2 + 
      1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 1032*d^2*n10^3 - 
      704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((19200 - 59680*d + 73200*d^2 - 44340*d^3 + 13280*d^4 - 1575*d^5 + 
      39360*n10 - 95152*d*n10 + 85264*d^2*n10 - 33604*d^3*n10 + 
      4920*d^4*n10 + 29472*n10^2 - 51792*d*n10^2 + 30024*d^2*n10^2 - 
      5748*d^3*n10^2 + 9600*n10^3 - 10752*d*n10^3 + 2976*d^2*n10^3 + 
      1152*n10^4 - 576*d*n10^4)*j[p4, 0, -1, 1, 0, 0, 0, 0, n10, 0, n10, 1, 
      0, 1, 1])/(4*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 
      155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 
      704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 6356*d^2*n10^2 + 
      1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 1032*d^2*n10^3 - 
      704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((17440 - 56760*d + 72580*d^2 - 45630*d^3 + 14125*d^4 - 1725*d^5 + 
      50816*n10 - 129696*d*n10 + 121944*d^2*n10 - 50170*d^3*n10 + 
      7635*d^4*n10 + 58256*n10^2 - 109104*d*n10^2 + 67056*d^2*n10^2 - 
      13554*d^3*n10^2 + 32688*n10^3 - 39968*d*n10^3 + 12060*d^2*n10^3 + 
      8960*n10^4 - 5376*d*n10^4 + 960*n10^5)*j[p4, 0, -1, 1, 0, 0, 1, 0, n10, 
      0, -1 + n10, 1, 0, 0, 2])/(2*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 
      4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 
      12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((19200 - 59680*d + 73200*d^2 - 44340*d^3 + 13280*d^4 - 1575*d^5 + 
      58560*n10 - 145232*d*n10 + 133424*d^2*n10 - 53864*d^3*n10 + 
      8070*d^4*n10 + 68832*n10^2 - 127264*d*n10^2 + 77552*d^2*n10^2 - 
      15588*d^3*n10^2 + 39072*n10^3 - 47808*d*n10^3 + 14472*d^2*n10^3 + 
      10752*n10^4 - 6528*d*n10^4 + 1152*n10^5)*j[p4, 0, -1, 1, 0, 0, 1, 0, 
      n10, 0, n10, 0, 0, 1, 1])/(4*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 
      1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 
      4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 
      6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 
      1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-2960 + 10840*d - 15280*d^2 + 10430*d^3 - 3465*d^4 + 450*d^5 - 
      7504*n10 + 21744*d*n10 - 22740*d^2*n10 + 10262*d^3*n10 - 1695*d^4*n10 - 
      8608*n10^2 + 18136*d*n10^2 - 12372*d^2*n10^2 + 2748*d^3*n10^2 - 
      5232*n10^3 + 7104*d*n10^3 - 2364*d^2*n10^3 - 1600*n10^4 + 
      1056*d*n10^4 - 192*n10^5)*j[p4, 0, -1, 1, 0, 0, 1, 0, n10, 0, n10, 1, 
      0, 0, 1])/(2*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 
      155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 
      704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 6356*d^2*n10^2 + 
      1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 1032*d^2*n10^3 - 
      704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-10*n10 + 5*d*n10 - 4*n10^2)*j[p4, 0, -1, 1, 0, 0, 1, 0, n10, 0, 
      1 + n10, 0, 0, 1, 1])/(4*(-2 + d - n10)^2) + 
   ((-10*n10 + 5*d*n10 - 4*n10^2)*j[p4, 0, -1, 1, 0, 0, 1, 0, n10, 0, 
      1 + n10, 1, 0, 0, 1])/(4*(-2 + d - n10)^2) + 
   ((14400*n10 - 44160*d*n10 + 53560*d^2*n10 - 32140*d^3*n10 + 9550*d^4*n10 - 
      1125*d^5*n10 + 37920*n10^2 - 91744*d*n10^2 + 82432*d^2*n10^2 - 
      32620*d^3*n10^2 + 4800*d^4*n10^2 + 37824*n10^3 - 67952*d*n10^3 + 
      40344*d^2*n10^3 - 7920*d^3*n10^3 + 18144*n10^4 - 21568*d*n10^4 + 
      6360*d^2*n10^4 + 4224*n10^5 - 2496*d*n10^5 + 384*n10^6)*
     j[p4, 0, -1, 1, 0, 0, 1, 0, 1 + n10, 0, -1 + n10, 0, 0, 1, 1])/
    (4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 
      155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 
      704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 6356*d^2*n10^2 + 
      1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 1032*d^2*n10^3 - 
      704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((14400*n10 - 44160*d*n10 + 53560*d^2*n10 - 32140*d^3*n10 + 9550*d^4*n10 - 
      1125*d^5*n10 + 37920*n10^2 - 91744*d*n10^2 + 82432*d^2*n10^2 - 
      32620*d^3*n10^2 + 4800*d^4*n10^2 + 37824*n10^3 - 67952*d*n10^3 + 
      40344*d^2*n10^3 - 7920*d^3*n10^3 + 18144*n10^4 - 21568*d*n10^4 + 
      6360*d^2*n10^4 + 4224*n10^5 - 2496*d*n10^5 + 384*n10^6)*
     j[p4, 0, -1, 1, 0, 0, 1, 0, 1 + n10, 0, -1 + n10, 1, 0, 0, 1])/
    (4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 
      155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 
      704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 6356*d^2*n10^2 + 
      1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 1032*d^2*n10^3 - 
      704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-6*n10 + 3*d*n10 - 2*n10^2)*j[p4, 0, -1, 1, 0, 0, 1, 0, 1 + n10, 0, n10, 
      0, 0, 1, 1])/(4*(-2 + d - n10)^2) + 
   ((-6*n10 + 3*d*n10 - 2*n10^2)*j[p4, 0, -1, 1, 0, 0, 1, 0, 1 + n10, 0, n10, 
      1, 0, 0, 1])/(4*(-2 + d - n10)^2) + 
   ((9760 - 32160*d + 41400*d^2 - 26060*d^3 + 8040*d^4 - 975*d^5 + 
      28064*n10 - 70672*d*n10 + 64984*d^2*n10 - 25952*d^3*n10 + 
      3810*d^4*n10 + 30464*n10^2 - 54672*d*n10^2 + 31816*d^2*n10^2 - 
      6024*d^3*n10^2 + 15840*n10^3 - 17920*d*n10^3 + 4920*d^2*n10^3 + 
      3968*n10^4 - 2112*d*n10^4 + 384*n10^5)*j[p4, 0, -1, 1, 0, 0, 2, 0, n10, 
      0, -1 + n10, 1, 0, 0, 1])/(4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 
      4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 
      12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((9760 - 32160*d + 41400*d^2 - 26060*d^3 + 8040*d^4 - 975*d^5 + 
      28064*n10 - 70672*d*n10 + 64984*d^2*n10 - 25952*d^3*n10 + 
      3810*d^4*n10 + 30464*n10^2 - 54672*d*n10^2 + 31816*d^2*n10^2 - 
      6024*d^3*n10^2 + 15840*n10^3 - 17920*d*n10^3 + 4920*d^2*n10^3 + 
      3968*n10^4 - 2112*d*n10^4 + 384*n10^5)*j[p4, 0, -1, 1, 0, 0, 2, 0, n10, 
      0, -1 + n10, 1, 0, 1, 0])/(4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 
      4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 
      12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((25120 - 81360*d + 103760*d^2 - 65200*d^3 + 20210*d^4 - 2475*d^5 + 
      73568*n10 - 188720*d*n10 + 178904*d^2*n10 - 74388*d^3*n10 + 
      11460*d^4*n10 + 86048*n10^2 - 163536*d*n10^2 + 102296*d^2*n10^2 - 
      21084*d^3*n10^2 + 49536*n10^3 - 62016*d*n10^3 + 19200*d^2*n10^3 + 
      13952*n10^4 - 8640*d*n10^4 + 1536*n10^5)*j[p4, 0, -1, 2, 0, 0, 1, 0, 
      n10, 0, -1 + n10, 1, 0, 0, 1])/(4*(-1 + n10)*
     (-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 
      14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-19200 + 59680*d - 73200*d^2 + 44340*d^3 - 13280*d^4 + 1575*d^5 - 
      39360*n10 + 95152*d*n10 - 85264*d^2*n10 + 33604*d^3*n10 - 
      4920*d^4*n10 - 29472*n10^2 + 51792*d*n10^2 - 30024*d^2*n10^2 + 
      5748*d^3*n10^2 - 9600*n10^3 + 10752*d*n10^3 - 2976*d^2*n10^3 - 
      1152*n10^4 + 576*d*n10^4)*j[p4, 0, -1, 2, 0, 0, 1, 0, n10, 0, -1 + n10, 
      1, 0, 1, 0])/(4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 
      1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 
      4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 
      6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 
      1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   j[p4, 0, -1, 2, 0, 0, 1, 0, n10, 0, n10, 0, 0, 1, 1]/(2*(-2 + d - n10)) + 
   j[p4, 0, -1, 2, 0, 0, 1, 0, n10, 0, n10, 1, 0, 0, 1]/(2*(-2 + d - n10)) + 
   ((16320 - 48320*d + 56540*d^2 - 32760*d^3 + 9415*d^4 - 1075*d^5 + 
      25328*n10 - 56344*d*n10 + 46704*d^2*n10 - 17122*d^3*n10 + 
      2345*d^4*n10 + 8080*n10^2 - 10632*d*n10^2 + 4372*d^2*n10^2 - 
      538*d^3*n10^2 - 4736*n10^3 + 6720*d*n10^3 - 2240*d^2*n10^3 - 
      3264*n10^4 + 2016*d*n10^4 - 512*n10^5)*j[p4, 0, 0, 0, -1, 0, 1, 0, n10, 
      0, -1 + n10, 1, 0, 1, 2])/(4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 
      4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 
      12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((10 - 5*d + 4*n10)*j[p4, 0, 0, 0, -1, 0, 1, 0, n10, 0, n10, 1, 0, 1, 2])/
    (4*(-2 + d - n10)^2) + ((35520 - 108000*d + 129740*d^2 - 77100*d^3 + 
      22695*d^4 - 2650*d^5 + 83888*n10 - 201576*d*n10 + 180128*d^2*n10 - 
      70986*d^3*n10 + 10415*d^4*n10 + 76912*n10^2 - 137896*d*n10^2 + 
      81924*d^2*n10^2 - 16126*d^3*n10^2 + 34336*n10^3 - 41088*d*n10^3 + 
      12232*d^2*n10^3 + 7488*n10^4 - 4512*d*n10^4 + 640*n10^5)*
     j[p4, 0, 0, 0, -1, 0, 2, 0, n10, 0, -1 + n10, 1, 0, 1, 1])/
    (4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 
      155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 
      704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 6356*d^2*n10^2 + 
      1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 1032*d^2*n10^3 - 
      704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((17440 - 56760*d + 72580*d^2 - 45630*d^3 + 14125*d^4 - 1725*d^5 + 
      50816*n10 - 129696*d*n10 + 121944*d^2*n10 - 50170*d^3*n10 + 
      7635*d^4*n10 + 58256*n10^2 - 109104*d*n10^2 + 67056*d^2*n10^2 - 
      13554*d^3*n10^2 + 32688*n10^3 - 39968*d*n10^3 + 12060*d^2*n10^3 + 
      8960*n10^4 - 5376*d*n10^4 + 960*n10^5)*j[p4, 0, 0, 0, 0, -1, 1, 0, n10, 
      0, -1 + n10, 1, 0, 1, 2])/(2*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 
      4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 
      12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((9760 - 32160*d + 41400*d^2 - 26060*d^3 + 8040*d^4 - 975*d^5 + 
      28064*n10 - 70672*d*n10 + 64984*d^2*n10 - 25952*d^3*n10 + 
      3810*d^4*n10 + 30464*n10^2 - 54672*d*n10^2 + 31816*d^2*n10^2 - 
      6024*d^3*n10^2 + 15840*n10^3 - 17920*d*n10^3 + 4920*d^2*n10^3 + 
      3968*n10^4 - 2112*d*n10^4 + 384*n10^5)*j[p4, 0, 0, 0, 0, -1, 2, 0, n10, 
      0, -1 + n10, 1, 0, 1, 1])/(4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 
      4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 
      12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-16320 + 48320*d - 56540*d^2 + 32760*d^3 - 9415*d^4 + 1075*d^5 - 
      25328*n10 + 56344*d*n10 - 46704*d^2*n10 + 17122*d^3*n10 - 
      2345*d^4*n10 - 8080*n10^2 + 10632*d*n10^2 - 4372*d^2*n10^2 + 
      538*d^3*n10^2 + 4736*n10^3 - 6720*d*n10^3 + 2240*d^2*n10^3 + 
      3264*n10^4 - 2016*d*n10^4 + 512*n10^5)*j[p4, 0, 0, 0, 0, 0, 1, -1, n10, 
      0, -1 + n10, 1, 0, 1, 2])/(4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 
      4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 
      12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((19200 - 59680*d + 73200*d^2 - 44340*d^3 + 13280*d^4 - 1575*d^5 + 
      58560*n10 - 145232*d*n10 + 133424*d^2*n10 - 53864*d^3*n10 + 
      8070*d^4*n10 + 68832*n10^2 - 127264*d*n10^2 + 77552*d^2*n10^2 - 
      15588*d^3*n10^2 + 39072*n10^3 - 47808*d*n10^3 + 14472*d^2*n10^3 + 
      10752*n10^4 - 6528*d*n10^4 + 1152*n10^5)*j[p4, 0, 0, 0, 0, 0, 1, -1, 
      n10, 0, n10, 1, 0, 1, 1])/(4*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 
      1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 
      4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 
      6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 
      1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-10 + 5*d - 4*n10)*j[p4, 0, 0, 0, 0, 0, 1, -1, n10, 0, n10, 1, 0, 1, 2])/
    (4*(-2 + d - n10)^2) + ((-10*n10 + 5*d*n10 - 4*n10^2)*
     j[p4, 0, 0, 0, 0, 0, 1, -1, n10, 0, 1 + n10, 1, 0, 1, 1])/
    (4*(-2 + d - n10)^2) + ((-16320 + 48320*d - 56540*d^2 + 32760*d^3 - 
      9415*d^4 + 1075*d^5 - 25328*n10 + 56344*d*n10 - 46704*d^2*n10 + 
      17122*d^3*n10 - 2345*d^4*n10 - 8080*n10^2 + 10632*d*n10^2 - 
      4372*d^2*n10^2 + 538*d^3*n10^2 + 4736*n10^3 - 6720*d*n10^3 + 
      2240*d^2*n10^3 + 3264*n10^4 - 2016*d*n10^4 + 512*n10^5)*
     j[p4, 0, 0, 0, 0, 0, 1, 0, -1 + n10, 0, -1 + n10, 1, 0, 1, 2])/
    (4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 
      155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 
      704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 6356*d^2*n10^2 + 
      1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 1032*d^2*n10^3 - 
      704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-35680 + 140240*d - 227320*d^2 + 194520*d^3 - 92700*d^4 + 23335*d^5 - 
      2425*d^6 - 147072*n10 + 473280*d*n10 - 603248*d^2*n10 + 
      380924*d^3*n10 - 119228*d^4*n10 + 14805*d^5*n10 - 221280*n10^2 + 
      561568*d*n10^2 - 530016*d^2*n10^2 + 220608*d^3*n10^2 - 
      34182*d^4*n10^2 - 163584*n10^3 + 307968*d*n10^3 - 191968*d^2*n10^3 + 
      39632*d^3*n10^3 - 64128*n10^4 + 79872*d*n10^4 - 24736*d^2*n10^4 - 
      12800*n10^5 + 7936*d*n10^5 - 1024*n10^6)*j[p4, 0, 0, 0, 0, 0, 1, 0, 
      -1 + n10, 0, -1 + n10, 1, 0, 2, 1])/(4*(-2 + d)*(-1 + n10)*
     (-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 
      14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-10 + 5*d - 4*n10)*j[p4, 0, 0, 0, 0, 0, 1, 0, -1 + n10, 0, n10, 1, 0, 1, 
      2])/(4*(-2 + d - n10)^2) + 
   ((-15520 + 59568*d - 93696*d^2 + 77472*d^3 - 35574*d^4 + 8613*d^5 - 
      860*d^6 - 51808*n10 + 164576*d*n10 - 205976*d^2*n10 + 127200*d^3*n10 - 
      38816*d^4*n10 + 4688*d^5*n10 - 75520*n10^2 + 189696*d*n10^2 - 
      176488*d^2*n10^2 + 72160*d^3*n10^2 - 10950*d^4*n10^2 - 58752*n10^3 + 
      109536*d*n10^3 - 67376*d^2*n10^3 + 13680*d^3*n10^3 - 25216*n10^4 + 
      31104*d*n10^4 - 9504*d^2*n10^4 - 5632*n10^5 + 3456*d*n10^5 - 512*n10^6)*
     j[p4, 0, 0, 0, 0, 0, 1, 0, -1 + n10, 0, n10, 1, 0, 2, 1])/
    (4*(-2 + d)*(-2 + d - n10)^2*(1160 - 2876*d + 2626*d^2 - 1049*d^3 + 
      155*d^4 + 2464*n10 - 4532*d*n10 + 2748*d^2*n10 - 549*d^3*n10 + 
      1840*n10^2 - 2248*d*n10^2 + 680*d^2*n10^2 + 576*n10^3 - 352*d*n10^3 + 
      64*n10^4)) + ((4680 - 14020*d + 16590*d^2 - 9715*d^3 + 2820*d^4 - 
      325*d^5 + 8912*n10 - 20772*d*n10 + 18050*d^2*n10 - 6936*d^3*n10 + 
      995*d^4*n10 + 5896*n10^2 - 10072*d*n10^2 + 5744*d^2*n10^2 - 
      1093*d^3*n10^2 + 1432*n10^3 - 1600*d*n10^3 + 454*d^2*n10^3 - 32*n10^5)*
     j[p4, 0, 0, 0, 0, 0, 1, 0, n10, -1, -1 + n10, 1, 0, 1, 2])/
    ((-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 155*d^5 - 
      6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 
      6144*n10^2 + 10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 
      2992*n10^3 + 3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 
      64*n10^5)) + ((19200 - 59680*d + 73200*d^2 - 44340*d^3 + 13280*d^4 - 
      1575*d^5 + 39360*n10 - 95152*d*n10 + 85264*d^2*n10 - 33604*d^3*n10 + 
      4920*d^4*n10 + 29472*n10^2 - 51792*d*n10^2 + 30024*d^2*n10^2 - 
      5748*d^3*n10^2 + 9600*n10^3 - 10752*d*n10^3 + 2976*d^2*n10^3 + 
      1152*n10^4 - 576*d*n10^4)*j[p4, 0, 0, 0, 0, 0, 1, 0, n10, -1, n10, 1, 
      0, 1, 1])/(4*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 
      155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 
      704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 6356*d^2*n10^2 + 
      1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 1032*d^2*n10^3 - 
      704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((6 - 3*d + 2*n10)*j[p4, 0, 0, 0, 0, 0, 1, 0, n10, -1, n10, 1, 0, 1, 2])/
    (4*(-2 + d - n10)^2) + ((16320 - 48320*d + 56540*d^2 - 32760*d^3 + 
      9415*d^4 - 1075*d^5 + 25328*n10 - 56344*d*n10 + 46704*d^2*n10 - 
      17122*d^3*n10 + 2345*d^4*n10 + 8080*n10^2 - 10632*d*n10^2 + 
      4372*d^2*n10^2 - 538*d^3*n10^2 - 4736*n10^3 + 6720*d*n10^3 - 
      2240*d^2*n10^3 - 3264*n10^4 + 2016*d*n10^4 - 512*n10^5)*
     j[p4, 0, 0, 0, 0, 0, 1, 0, n10, 0, -1 + n10, 1, -1, 1, 2])/
    (4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 
      155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 
      704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 6356*d^2*n10^2 + 
      1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 1032*d^2*n10^3 - 
      704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((35680 - 140240*d + 227320*d^2 - 194520*d^3 + 92700*d^4 - 23335*d^5 + 
      2425*d^6 + 147072*n10 - 473280*d*n10 + 603248*d^2*n10 - 
      380924*d^3*n10 + 119228*d^4*n10 - 14805*d^5*n10 + 221280*n10^2 - 
      561568*d*n10^2 + 530016*d^2*n10^2 - 220608*d^3*n10^2 + 
      34182*d^4*n10^2 + 163584*n10^3 - 307968*d*n10^3 + 191968*d^2*n10^3 - 
      39632*d^3*n10^3 + 64128*n10^4 - 79872*d*n10^4 + 24736*d^2*n10^4 + 
      12800*n10^5 - 7936*d*n10^5 + 1024*n10^6)*j[p4, 0, 0, 0, 0, 0, 1, 0, 
      n10, 0, -1 + n10, 1, -1, 2, 1])/(4*(-2 + d)*(-1 + n10)*
     (-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 
      14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-46240 + 142800*d - 174580*d^2 + 105700*d^3 - 31715*d^4 + 3775*d^5 - 
      162736*n10 + 411112*d*n10 - 389816*d^2*n10 + 166822*d^3*n10 - 
      28975*d^4*n10 + 900*d^5*n10 - 190896*n10^2 + 356728*d*n10^2 - 
      220844*d^2*n10^2 + 45694*d^3*n10^2 - 240*d^4*n10^2 - 92800*n10^3 + 
      103232*d*n10^3 - 20944*d^2*n10^3 - 4344*d^3*n10^3 - 13568*n10^4 - 
      2720*d*n10^4 + 6768*d^2*n10^4 + 2816*n10^5 - 3840*d*n10^5 + 768*n10^6)*
     j[p4, 0, 0, 0, 0, 0, 1, 0, n10, 0, -1 + n10, 1, 0, 1, 1])/
    (4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 
      155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 
      704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 6356*d^2*n10^2 + 
      1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 1032*d^2*n10^3 - 
      704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-4680 + 14020*d - 16590*d^2 + 9715*d^3 - 2820*d^4 + 325*d^5 - 8912*n10 + 
      20772*d*n10 - 18050*d^2*n10 + 6936*d^3*n10 - 995*d^4*n10 - 5896*n10^2 + 
      10072*d*n10^2 - 5744*d^2*n10^2 + 1093*d^3*n10^2 - 1432*n10^3 + 
      1600*d*n10^3 - 454*d^2*n10^3 + 32*n10^5)*j[p4, 0, 0, 0, 0, 0, 1, 0, 
      n10, 0, -1 + n10, 1, 0, 1, 2])/((-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 
      4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 
      12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-45280 + 176080*d - 282120*d^2 + 238560*d^3 - 112360*d^4 + 27965*d^5 - 
      2875*d^6 - 149952*n10 + 481536*d*n10 - 612320*d^2*n10 + 
      385724*d^3*n10 - 120452*d^4*n10 + 14925*d^5*n10 - 204576*n10^2 + 
      520896*d*n10^2 - 493216*d^2*n10^2 + 205944*d^3*n10^2 - 
      32010*d^4*n10^2 - 146496*n10^3 + 277792*d*n10^3 - 174384*d^2*n10^3 + 
      36248*d^3*n10^3 - 57984*n10^4 + 72960*d*n10^4 - 22816*d^2*n10^4 - 
      12032*n10^5 + 7552*d*n10^5 - 1024*n10^6)*j[p4, 0, 0, 0, 0, 0, 1, 0, 
      n10, 0, -1 + n10, 1, 0, 2, 1])/(4*(-2 + d)*(-1 + n10)*
     (-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 
      14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((10 - 5*d + 4*n10)*j[p4, 0, 0, 0, 0, 0, 1, 0, n10, 0, n10, 1, -1, 1, 2])/
    (4*(-2 + d - n10)^2) + ((15520 - 59568*d + 93696*d^2 - 77472*d^3 + 
      35574*d^4 - 8613*d^5 + 860*d^6 + 51808*n10 - 164576*d*n10 + 
      205976*d^2*n10 - 127200*d^3*n10 + 38816*d^4*n10 - 4688*d^5*n10 + 
      75520*n10^2 - 189696*d*n10^2 + 176488*d^2*n10^2 - 72160*d^3*n10^2 + 
      10950*d^4*n10^2 + 58752*n10^3 - 109536*d*n10^3 + 67376*d^2*n10^3 - 
      13680*d^3*n10^3 + 25216*n10^4 - 31104*d*n10^4 + 9504*d^2*n10^4 + 
      5632*n10^5 - 3456*d*n10^5 + 512*n10^6)*j[p4, 0, 0, 0, 0, 0, 1, 0, n10, 
      0, n10, 1, -1, 2, 1])/(4*(-2 + d)*(-2 + d - n10)^2*
     (1160 - 2876*d + 2626*d^2 - 1049*d^3 + 155*d^4 + 2464*n10 - 4532*d*n10 + 
      2748*d^2*n10 - 549*d^3*n10 + 1840*n10^2 - 2248*d*n10^2 + 
      680*d^2*n10^2 + 576*n10^3 - 352*d*n10^3 + 64*n10^4)) + 
   ((10000 - 32704*d + 44096*d^2 - 31388*d^3 + 12443*d^4 - 2605*d^5 + 
      225*d^6 + 37200*n10 - 101568*d*n10 + 109824*d^2*n10 - 58788*d^3*n10 + 
      15579*d^4*n10 - 1635*d^5*n10 + 48160*n10^2 - 104152*d*n10^2 + 
      83512*d^2*n10^2 - 29406*d^3*n10^2 + 3834*d^4*n10^2 + 28832*n10^3 - 
      45744*d*n10^3 + 23808*d^2*n10^3 - 4056*d^3*n10^3 + 8192*n10^4 - 
      8256*d*n10^4 + 2016*d^2*n10^4 + 896*n10^5 - 384*d*n10^5)*
     j[p4, 0, 0, 0, 0, 0, 1, 0, n10, 0, n10, 1, 0, 1, 1])/
    (4*(-2 + d - n10)^2*(1160 - 2876*d + 2626*d^2 - 1049*d^3 + 155*d^4 + 
      2464*n10 - 4532*d*n10 + 2748*d^2*n10 - 549*d^3*n10 + 1840*n10^2 - 
      2248*d*n10^2 + 680*d^2*n10^2 + 576*n10^3 - 352*d*n10^3 + 64*n10^4)) + 
   ((-6 + 3*d - 2*n10)*j[p4, 0, 0, 0, 0, 0, 1, 0, n10, 0, n10, 1, 0, 1, 2])/
    (4*(-2 + d - n10)^2) + ((14720 - 46640*d + 58280*d^2 - 35960*d^3 + 
      10970*d^4 - 1325*d^5 + 35648*n10 - 90032*d*n10 + 84336*d^2*n10 - 
      34756*d^3*n10 + 5320*d^4*n10 + 35904*n10^2 - 67936*d*n10^2 + 
      42464*d^2*n10^2 - 8768*d^3*n10^2 + 18560*n10^3 - 23424*d*n10^3 + 
      7328*d^2*n10^3 + 4864*n10^4 - 3072*d*n10^4 + 512*n10^5)*
     j[p4, 0, 0, 0, 0, 0, 1, 0, n10, 0, n10, 1, 0, 2, 1])/
    (4*(-2 + d)*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 155*d^5 - 
      6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 
      6144*n10^2 + 10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 
      2992*n10^3 + 3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 
      64*n10^5)) + ((-35520 + 108000*d - 129740*d^2 + 77100*d^3 - 22695*d^4 + 
      2650*d^5 - 83888*n10 + 201576*d*n10 - 180128*d^2*n10 + 70986*d^3*n10 - 
      10415*d^4*n10 - 76912*n10^2 + 137896*d*n10^2 - 81924*d^2*n10^2 + 
      16126*d^3*n10^2 - 34336*n10^3 + 41088*d*n10^3 - 12232*d^2*n10^3 - 
      7488*n10^4 + 4512*d*n10^4 - 640*n10^5)*j[p4, 0, 0, 0, 0, 0, 2, 0, 
      -1 + n10, 0, -1 + n10, 1, 0, 1, 1])/(4*(-1 + n10)*
     (-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 
      14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((4680 - 14020*d + 16590*d^2 - 9715*d^3 + 2820*d^4 - 325*d^5 + 8912*n10 - 
      20772*d*n10 + 18050*d^2*n10 - 6936*d^3*n10 + 995*d^4*n10 + 5896*n10^2 - 
      10072*d*n10^2 + 5744*d^2*n10^2 - 1093*d^3*n10^2 + 1432*n10^3 - 
      1600*d*n10^3 + 454*d^2*n10^3 - 32*n10^5)*j[p4, 0, 0, 0, 0, 0, 2, 0, 
      n10, -1, -1 + n10, 1, 0, 1, 1])/((-1 + n10)*
     (-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 
      14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-6 + 3*d - 2*n10)*j[p4, 0, 0, 0, 0, 0, 2, 0, n10, -1, n10, 1, 0, 1, 1])/
    (4*(-2 + d - n10)^2) + ((-4680 + 14020*d - 16590*d^2 + 9715*d^3 - 
      2820*d^4 + 325*d^5 - 8912*n10 + 20772*d*n10 - 18050*d^2*n10 + 
      6936*d^3*n10 - 995*d^4*n10 - 5896*n10^2 + 10072*d*n10^2 - 
      5744*d^2*n10^2 + 1093*d^3*n10^2 - 1432*n10^3 + 1600*d*n10^3 - 
      454*d^2*n10^3 + 32*n10^5)*j[p4, 0, 0, 0, 0, 0, 2, 0, n10, 0, -2 + n10, 
      1, 0, 1, 1])/((-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 
      1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 
      4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 
      6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 
      1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((6 - 3*d + 2*n10)*j[p4, 0, 0, 0, 0, 0, 2, 0, n10, 0, -1 + n10, 1, 0, 1, 
      1])/(4*(-2 + d - n10)^2) + 
   ((-16320 + 48320*d - 56540*d^2 + 32760*d^3 - 9415*d^4 + 1075*d^5 - 
      25328*n10 + 56344*d*n10 - 46704*d^2*n10 + 17122*d^3*n10 - 
      2345*d^4*n10 - 8080*n10^2 + 10632*d*n10^2 - 4372*d^2*n10^2 + 
      538*d^3*n10^2 + 4736*n10^3 - 6720*d*n10^3 + 2240*d^2*n10^3 + 
      3264*n10^4 - 2016*d*n10^4 + 512*n10^5)*j[p4, 0, 0, 1, -1, 0, 0, 0, n10, 
      0, -1 + n10, 1, 0, 1, 2])/(4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 
      4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 
      12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-10 + 5*d - 4*n10)*j[p4, 0, 0, 1, -1, 0, 0, 0, n10, 0, n10, 1, 0, 1, 2])/
    (4*(-2 + d - n10)^2) + ((-16320 + 48320*d - 56540*d^2 + 32760*d^3 - 
      9415*d^4 + 1075*d^5 - 25328*n10 + 56344*d*n10 - 46704*d^2*n10 + 
      17122*d^3*n10 - 2345*d^4*n10 - 8080*n10^2 + 10632*d*n10^2 - 
      4372*d^2*n10^2 + 538*d^3*n10^2 + 4736*n10^3 - 6720*d*n10^3 + 
      2240*d^2*n10^3 + 3264*n10^4 - 2016*d*n10^4 + 512*n10^5)*
     j[p4, 0, 0, 1, -1, 0, 1, 0, n10, 0, -1 + n10, 1, 0, 0, 2])/
    (4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 
      155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 
      704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 6356*d^2*n10^2 + 
      1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 1032*d^2*n10^3 - 
      704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-10 + 5*d - 4*n10)*j[p4, 0, 0, 1, -1, 0, 1, 0, n10, 0, n10, 1, 0, 0, 2])/
    (4*(-2 + d - n10)^2) + ((19200*n10 - 59680*d*n10 + 73200*d^2*n10 - 
      44340*d^3*n10 + 13280*d^4*n10 - 1575*d^5*n10 + 39360*n10^2 - 
      95152*d*n10^2 + 85264*d^2*n10^2 - 33604*d^3*n10^2 + 4920*d^4*n10^2 + 
      29472*n10^3 - 51792*d*n10^3 + 30024*d^2*n10^3 - 5748*d^3*n10^3 + 
      9600*n10^4 - 10752*d*n10^4 + 2976*d^2*n10^4 + 1152*n10^5 - 576*d*n10^5)*
     j[p4, 0, 0, 1, -1, 0, 1, 0, 1 + n10, 0, -1 + n10, 0, 0, 1, 1])/
    (4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 
      155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 
      704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 6356*d^2*n10^2 + 
      1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 1032*d^2*n10^3 - 
      704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((19200*n10 - 59680*d*n10 + 73200*d^2*n10 - 44340*d^3*n10 + 
      13280*d^4*n10 - 1575*d^5*n10 + 39360*n10^2 - 95152*d*n10^2 + 
      85264*d^2*n10^2 - 33604*d^3*n10^2 + 4920*d^4*n10^2 + 29472*n10^3 - 
      51792*d*n10^3 + 30024*d^2*n10^3 - 5748*d^3*n10^3 + 9600*n10^4 - 
      10752*d*n10^4 + 2976*d^2*n10^4 + 1152*n10^5 - 576*d*n10^5)*
     j[p4, 0, 0, 1, -1, 0, 1, 0, 1 + n10, 0, -1 + n10, 1, 0, 0, 1])/
    (4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 
      155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 
      704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 6356*d^2*n10^2 + 
      1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 1032*d^2*n10^3 - 
      704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-35520 + 108000*d - 129740*d^2 + 77100*d^3 - 22695*d^4 + 2650*d^5 - 
      83888*n10 + 201576*d*n10 - 180128*d^2*n10 + 70986*d^3*n10 - 
      10415*d^4*n10 - 76912*n10^2 + 137896*d*n10^2 - 81924*d^2*n10^2 + 
      16126*d^3*n10^2 - 34336*n10^3 + 41088*d*n10^3 - 12232*d^2*n10^3 - 
      7488*n10^4 + 4512*d*n10^4 - 640*n10^5)*j[p4, 0, 0, 1, -1, 0, 2, 0, n10, 
      0, -1 + n10, 1, 0, 0, 1])/(4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 
      4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 
      12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-35520 + 108000*d - 129740*d^2 + 77100*d^3 - 22695*d^4 + 2650*d^5 - 
      83888*n10 + 201576*d*n10 - 180128*d^2*n10 + 70986*d^3*n10 - 
      10415*d^4*n10 - 76912*n10^2 + 137896*d*n10^2 - 81924*d^2*n10^2 + 
      16126*d^3*n10^2 - 34336*n10^3 + 41088*d*n10^3 - 12232*d^2*n10^3 - 
      7488*n10^4 + 4512*d*n10^4 - 640*n10^5)*j[p4, 0, 0, 1, -1, 0, 2, 0, n10, 
      0, -1 + n10, 1, 0, 1, 0])/(4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 
      4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 
      12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-17440 + 56760*d - 72580*d^2 + 45630*d^3 - 14125*d^4 + 1725*d^5 - 
      50816*n10 + 129696*d*n10 - 121944*d^2*n10 + 50170*d^3*n10 - 
      7635*d^4*n10 - 58256*n10^2 + 109104*d*n10^2 - 67056*d^2*n10^2 + 
      13554*d^3*n10^2 - 32688*n10^3 + 39968*d*n10^3 - 12060*d^2*n10^3 - 
      8960*n10^4 + 5376*d*n10^4 - 960*n10^5)*j[p4, 0, 0, 1, 0, -1, 0, 0, n10, 
      0, -1 + n10, 1, 0, 1, 2])/(2*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 
      4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 
      12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-17440 + 56760*d - 72580*d^2 + 45630*d^3 - 14125*d^4 + 1725*d^5 - 
      50816*n10 + 129696*d*n10 - 121944*d^2*n10 + 50170*d^3*n10 - 
      7635*d^4*n10 - 58256*n10^2 + 109104*d*n10^2 - 67056*d^2*n10^2 + 
      13554*d^3*n10^2 - 32688*n10^3 + 39968*d*n10^3 - 12060*d^2*n10^3 - 
      8960*n10^4 + 5376*d*n10^4 - 960*n10^5)*j[p4, 0, 0, 1, 0, -1, 1, 0, n10, 
      0, -1 + n10, 1, 0, 0, 2])/(2*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 
      4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 
      12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-9760 + 32160*d - 41400*d^2 + 26060*d^3 - 8040*d^4 + 975*d^5 - 
      28064*n10 + 70672*d*n10 - 64984*d^2*n10 + 25952*d^3*n10 - 
      3810*d^4*n10 - 30464*n10^2 + 54672*d*n10^2 - 31816*d^2*n10^2 + 
      6024*d^3*n10^2 - 15840*n10^3 + 17920*d*n10^3 - 4920*d^2*n10^3 - 
      3968*n10^4 + 2112*d*n10^4 - 384*n10^5)*j[p4, 0, 0, 1, 0, -1, 2, 0, n10, 
      0, -1 + n10, 1, 0, 0, 1])/(4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 
      4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 
      12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-9760 + 32160*d - 41400*d^2 + 26060*d^3 - 8040*d^4 + 975*d^5 - 
      28064*n10 + 70672*d*n10 - 64984*d^2*n10 + 25952*d^3*n10 - 
      3810*d^4*n10 - 30464*n10^2 + 54672*d*n10^2 - 31816*d^2*n10^2 + 
      6024*d^3*n10^2 - 15840*n10^3 + 17920*d*n10^3 - 4920*d^2*n10^3 - 
      3968*n10^4 + 2112*d*n10^4 - 384*n10^5)*j[p4, 0, 0, 1, 0, -1, 2, 0, n10, 
      0, -1 + n10, 1, 0, 1, 0])/(4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 
      4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 
      12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-19200 + 59680*d - 73200*d^2 + 44340*d^3 - 13280*d^4 + 1575*d^5 - 
      39360*n10 + 95152*d*n10 - 85264*d^2*n10 + 33604*d^3*n10 - 
      4920*d^4*n10 - 29472*n10^2 + 51792*d*n10^2 - 30024*d^2*n10^2 + 
      5748*d^3*n10^2 - 9600*n10^3 + 10752*d*n10^3 - 2976*d^2*n10^3 - 
      1152*n10^4 + 576*d*n10^4)*j[p4, 0, 0, 1, 0, 0, 0, -1, n10, 0, n10, 1, 
      0, 1, 1])/(4*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 
      155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 
      704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 6356*d^2*n10^2 + 
      1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 1032*d^2*n10^3 - 
      704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((43680 - 138480*d + 172880*d^2 - 106360*d^3 + 32290*d^4 - 3875*d^5 + 
      103072*n10 - 255856*d*n10 + 234584*d^2*n10 - 94312*d^3*n10 + 
      14050*d^4*n10 + 95840*n10^2 - 174400*d*n10^2 + 104304*d^2*n10^2 - 
      20540*d^3*n10^2 + 44000*n10^3 - 52096*d*n10^3 + 15224*d^2*n10^3 + 
      9984*n10^4 - 5760*d*n10^4 + 896*n10^5)*j[p4, 0, 0, 1, 0, 0, 0, 0, 
      -1 + n10, 0, -1 + n10, 2, 0, 1, 1])/(4*(-1 + n10)*
     (-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 
      14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-19200 + 59680*d - 73200*d^2 + 44340*d^3 - 13280*d^4 + 1575*d^5 - 
      39360*n10 + 95152*d*n10 - 85264*d^2*n10 + 33604*d^3*n10 - 
      4920*d^4*n10 - 29472*n10^2 + 51792*d*n10^2 - 30024*d^2*n10^2 + 
      5748*d^3*n10^2 - 9600*n10^3 + 10752*d*n10^3 - 2976*d^2*n10^3 - 
      1152*n10^4 + 576*d*n10^4)*j[p4, 0, 0, 1, 0, 0, 0, 0, -1 + n10, 0, n10, 
      1, 0, 1, 1])/(4*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 
      155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 
      704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 6356*d^2*n10^2 + 
      1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 1032*d^2*n10^3 - 
      704*n10^4 + 416*d*n10^4 - 64*n10^5)) - 
   j[p4, 0, 0, 1, 0, 0, 0, 0, n10, -1, n10, 1, 0, 1, 2]/(2*(-2 + d - n10)) + 
   ((12800 - 42480*d + 55300*d^2 - 35340*d^3 + 11105*d^4 - 1375*d^5 + 
      105840*n10 - 304472*d*n10 + 339664*d^2*n10 - 183274*d^3*n10 + 
      47615*d^4*n10 - 4725*d^5*n10 + 183728*n10^2 - 410712*d*n10^2 + 
      334228*d^2*n10^2 - 116962*d^3*n10^2 + 14760*d^4*n10^2 + 129856*n10^3 - 
      207088*d*n10^3 + 106000*d^2*n10^3 - 17244*d^3*n10^3 + 41152*n10^4 - 
      39840*d*n10^4 + 8928*d^2*n10^4 + 4864*n10^5 - 1728*d*n10^5)*
     j[p4, 0, 0, 1, 0, 0, 0, 0, n10, 0, -1 + n10, 1, 0, 1, 1])/
    (4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 
      155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 
      704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 6356*d^2*n10^2 + 
      1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 1032*d^2*n10^3 - 
      704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-12240 + 39400*d - 49840*d^2 + 31010*d^3 - 9505*d^4 + 1150*d^5 - 
      31856*n10 + 80352*d*n10 - 74660*d^2*n10 + 30354*d^3*n10 - 
      4565*d^4*n10 - 33184*n10^2 + 61304*d*n10^2 - 37140*d^2*n10^2 + 
      7396*d^3*n10^2 - 17200*n10^3 + 20672*d*n10^3 - 6124*d^2*n10^3 - 
      4416*n10^4 + 2592*d*n10^4 - 448*n10^5)*j[p4, 0, 0, 1, 0, 0, 0, 0, n10, 
      0, -1 + n10, 2, -1, 1, 1])/(2*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 
      4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 
      12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((12240 - 39400*d + 49840*d^2 - 31010*d^3 + 9505*d^4 - 1150*d^5 + 
      31856*n10 - 80352*d*n10 + 74660*d^2*n10 - 30354*d^3*n10 + 
      4565*d^4*n10 + 33184*n10^2 - 61304*d*n10^2 + 37140*d^2*n10^2 - 
      7396*d^3*n10^2 + 17200*n10^3 - 20672*d*n10^3 + 6124*d^2*n10^3 + 
      4416*n10^4 - 2592*d*n10^4 + 448*n10^5)*j[p4, 0, 0, 1, 0, 0, 0, 0, n10, 
      0, -1 + n10, 2, 0, 1, 1])/(2*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 
      4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 
      12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((19200 - 59680*d + 73200*d^2 - 44340*d^3 + 13280*d^4 - 1575*d^5 + 
      39360*n10 - 95152*d*n10 + 85264*d^2*n10 - 33604*d^3*n10 + 
      4920*d^4*n10 + 29472*n10^2 - 51792*d*n10^2 + 30024*d^2*n10^2 - 
      5748*d^3*n10^2 + 9600*n10^3 - 10752*d*n10^3 + 2976*d^2*n10^3 + 
      1152*n10^4 - 576*d*n10^4)*j[p4, 0, 0, 1, 0, 0, 0, 0, n10, 0, n10, 1, 
      -1, 1, 1])/(4*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 
      155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 
      704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 6356*d^2*n10^2 + 
      1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 1032*d^2*n10^3 - 
      704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((45360 - 159296*d + 230464*d^2 - 176052*d^3 + 74977*d^4 - 16895*d^5 + 
      1575*d^6 + 115024*n10 - 329680*d*n10 + 374216*d^2*n10 - 
      210448*d^3*n10 + 58681*d^4*n10 - 6495*d^5*n10 + 114272*n10^2 - 
      256280*d*n10^2 + 213424*d^2*n10^2 - 78262*d^3*n10^2 + 10668*d^4*n10^2 + 
      55808*n10^3 - 91232*d*n10^3 + 49144*d^2*n10^3 - 8724*d^3*n10^3 + 
      13440*n10^4 - 13952*d*n10^4 + 3552*d^2*n10^4 + 1280*n10^5 - 
      576*d*n10^5)*j[p4, 0, 0, 1, 0, 0, 0, 0, n10, 0, n10, 1, 0, 1, 1])/
    (4*(-2 + d - n10)^2*(1160 - 2876*d + 2626*d^2 - 1049*d^3 + 155*d^4 + 
      2464*n10 - 4532*d*n10 + 2748*d^2*n10 - 549*d^3*n10 + 1840*n10^2 - 
      2248*d*n10^2 + 680*d^2*n10^2 + 576*n10^3 - 352*d*n10^3 + 64*n10^4)) + 
   j[p4, 0, 0, 1, 0, 0, 0, 0, n10, 0, n10, 1, 0, 1, 2]/(2*(-2 + d - n10)) + 
   ((-19200*n10 + 59680*d*n10 - 73200*d^2*n10 + 44340*d^3*n10 - 
      13280*d^4*n10 + 1575*d^5*n10 - 39360*n10^2 + 95152*d*n10^2 - 
      85264*d^2*n10^2 + 33604*d^3*n10^2 - 4920*d^4*n10^2 - 29472*n10^3 + 
      51792*d*n10^3 - 30024*d^2*n10^3 + 5748*d^3*n10^3 - 9600*n10^4 + 
      10752*d*n10^4 - 2976*d^2*n10^4 - 1152*n10^5 + 576*d*n10^5)*
     j[p4, 0, 0, 1, 0, 0, 0, 0, 1 + n10, 0, -1 + n10, 1, -1, 1, 1])/
    (4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 
      155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 
      704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 6356*d^2*n10^2 + 
      1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 1032*d^2*n10^3 - 
      704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-17440 + 56760*d - 72580*d^2 + 45630*d^3 - 14125*d^4 + 1725*d^5 - 
      50816*n10 + 129696*d*n10 - 121944*d^2*n10 + 50170*d^3*n10 - 
      7635*d^4*n10 - 58256*n10^2 + 109104*d*n10^2 - 67056*d^2*n10^2 + 
      13554*d^3*n10^2 - 32688*n10^3 + 39968*d*n10^3 - 12060*d^2*n10^3 - 
      8960*n10^4 + 5376*d*n10^4 - 960*n10^5)*j[p4, 0, 0, 1, 0, 0, 1, -1, n10, 
      0, -1 + n10, 1, 0, 0, 2])/(2*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 
      4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 
      12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-19200 + 59680*d - 73200*d^2 + 44340*d^3 - 13280*d^4 + 1575*d^5 - 
      58560*n10 + 145232*d*n10 - 133424*d^2*n10 + 53864*d^3*n10 - 
      8070*d^4*n10 - 68832*n10^2 + 127264*d*n10^2 - 77552*d^2*n10^2 + 
      15588*d^3*n10^2 - 39072*n10^3 + 47808*d*n10^3 - 14472*d^2*n10^3 - 
      10752*n10^4 + 6528*d*n10^4 - 1152*n10^5)*j[p4, 0, 0, 1, 0, 0, 1, -1, 
      n10, 0, n10, 0, 0, 1, 1])/(4*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 
      1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 
      4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 
      6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 
      1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-19200 + 59680*d - 73200*d^2 + 44340*d^3 - 13280*d^4 + 1575*d^5 - 
      58560*n10 + 145232*d*n10 - 133424*d^2*n10 + 53864*d^3*n10 - 
      8070*d^4*n10 - 68832*n10^2 + 127264*d*n10^2 - 77552*d^2*n10^2 + 
      15588*d^3*n10^2 - 39072*n10^3 + 47808*d*n10^3 - 14472*d^2*n10^3 - 
      10752*n10^4 + 6528*d*n10^4 - 1152*n10^5)*j[p4, 0, 0, 1, 0, 0, 1, -1, 
      n10, 0, n10, 1, 0, 0, 1])/(4*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 
      1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 
      4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 
      6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 
      1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((10*n10 - 5*d*n10 + 4*n10^2)*j[p4, 0, 0, 1, 0, 0, 1, -1, n10, 0, 1 + n10, 
      0, 0, 1, 1])/(4*(-2 + d - n10)^2) + 
   ((10*n10 - 5*d*n10 + 4*n10^2)*j[p4, 0, 0, 1, 0, 0, 1, -1, n10, 0, 1 + n10, 
      1, 0, 0, 1])/(4*(-2 + d - n10)^2) + 
   ((-14400*n10 + 44160*d*n10 - 53560*d^2*n10 + 32140*d^3*n10 - 
      9550*d^4*n10 + 1125*d^5*n10 - 37920*n10^2 + 91744*d*n10^2 - 
      82432*d^2*n10^2 + 32620*d^3*n10^2 - 4800*d^4*n10^2 - 37824*n10^3 + 
      67952*d*n10^3 - 40344*d^2*n10^3 + 7920*d^3*n10^3 - 18144*n10^4 + 
      21568*d*n10^4 - 6360*d^2*n10^4 - 4224*n10^5 + 2496*d*n10^5 - 384*n10^6)*
     j[p4, 0, 0, 1, 0, 0, 1, -1, 1 + n10, 0, -1 + n10, 0, 0, 1, 1])/
    (4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 
      155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 
      704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 6356*d^2*n10^2 + 
      1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 1032*d^2*n10^3 - 
      704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-14400*n10 + 44160*d*n10 - 53560*d^2*n10 + 32140*d^3*n10 - 
      9550*d^4*n10 + 1125*d^5*n10 - 37920*n10^2 + 91744*d*n10^2 - 
      82432*d^2*n10^2 + 32620*d^3*n10^2 - 4800*d^4*n10^2 - 37824*n10^3 + 
      67952*d*n10^3 - 40344*d^2*n10^3 + 7920*d^3*n10^3 - 18144*n10^4 + 
      21568*d*n10^4 - 6360*d^2*n10^4 - 4224*n10^5 + 2496*d*n10^5 - 384*n10^6)*
     j[p4, 0, 0, 1, 0, 0, 1, -1, 1 + n10, 0, -1 + n10, 1, 0, 0, 1])/
    (4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 
      155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 
      704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 6356*d^2*n10^2 + 
      1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 1032*d^2*n10^3 - 
      704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((6*n10 - 3*d*n10 + 2*n10^2)*j[p4, 0, 0, 1, 0, 0, 1, -1, 1 + n10, 0, n10, 
      0, 0, 1, 1])/(4*(-2 + d - n10)^2) + 
   ((6*n10 - 3*d*n10 + 2*n10^2)*j[p4, 0, 0, 1, 0, 0, 1, -1, 1 + n10, 0, n10, 
      1, 0, 0, 1])/(4*(-2 + d - n10)^2) + 
   ((-17440 + 56760*d - 72580*d^2 + 45630*d^3 - 14125*d^4 + 1725*d^5 - 
      50816*n10 + 129696*d*n10 - 121944*d^2*n10 + 50170*d^3*n10 - 
      7635*d^4*n10 - 58256*n10^2 + 109104*d*n10^2 - 67056*d^2*n10^2 + 
      13554*d^3*n10^2 - 32688*n10^3 + 39968*d*n10^3 - 12060*d^2*n10^3 - 
      8960*n10^4 + 5376*d*n10^4 - 960*n10^5)*j[p4, 0, 0, 1, 0, 0, 1, 0, 
      -1 + n10, 0, -1 + n10, 1, 0, 0, 2])/(2*(-1 + n10)*
     (-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 
      14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((88320 - 321760*d + 485480*d^2 - 388500*d^3 + 173970*d^4 - 41345*d^5 + 
      4075*d^6 + 238848*n10 - 713520*d*n10 + 849112*d^2*n10 - 
      503304*d^3*n10 + 148626*d^4*n10 - 17495*d^5*n10 + 249408*n10^2 - 
      588448*d*n10^2 + 519512*d^2*n10^2 - 203440*d^3*n10^2 + 
      29818*d^4*n10^2 + 126720*n10^3 - 221984*d*n10^3 + 129680*d^2*n10^3 - 
      25264*d^3*n10^3 + 31488*n10^4 - 36544*d*n10^4 + 10656*d^2*n10^4 + 
      3072*n10^5 - 1792*d*n10^5)*j[p4, 0, 0, 1, 0, 0, 1, 0, -1 + n10, 0, 
      -1 + n10, 1, 0, 1, 1])/(4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 
      4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 
      12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-5280 + 19120*d - 26480*d^2 + 17680*d^3 - 5730*d^4 + 725*d^5 - 
      24352*n10 + 65552*d*n10 - 64056*d^2*n10 + 27104*d^3*n10 - 
      4210*d^4*n10 - 36896*n10^2 + 70816*d*n10^2 - 44256*d^2*n10^2 + 
      9044*d^3*n10^2 - 24800*n10^3 + 30592*d*n10^3 - 9272*d^2*n10^3 - 
      7680*n10^4 + 4608*d*n10^4 - 896*n10^5)*j[p4, 0, 0, 1, 0, 0, 1, 0, 
      -1 + n10, 0, -1 + n10, 1, 0, 2, 0])/(4*(-1 + n10)*
     (-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 
      14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-19200 + 59680*d - 73200*d^2 + 44340*d^3 - 13280*d^4 + 1575*d^5 - 
      58560*n10 + 145232*d*n10 - 133424*d^2*n10 + 53864*d^3*n10 - 
      8070*d^4*n10 - 68832*n10^2 + 127264*d*n10^2 - 77552*d^2*n10^2 + 
      15588*d^3*n10^2 - 39072*n10^3 + 47808*d*n10^3 - 14472*d^2*n10^3 - 
      10752*n10^4 + 6528*d*n10^4 - 1152*n10^5)*j[p4, 0, 0, 1, 0, 0, 1, 0, 
      -1 + n10, 0, n10, 0, 0, 1, 1])/(4*(-2320 + 6912*d - 8128*d^2 + 
      4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 
      12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-8 + 4*d - 3*n10)*j[p4, 0, 0, 1, 0, 0, 1, 0, -1 + n10, 0, n10, 1, 0, 1, 
      1])/(-2 + d - n10) + ((10*n10 - 5*d*n10 + 4*n10^2)*
     j[p4, 0, 0, 1, 0, 0, 1, 0, -1 + n10, 0, 1 + n10, 0, 0, 1, 1])/
    (4*(-2 + d - n10)^2) + ((-4320 + 11920*d - 12800*d^2 + 6720*d^3 - 
      1730*d^4 + 175*d^5 + 2272*n10 - 8656*d*n10 + 10232*d^2*n10 - 
      4876*d^3*n10 + 820*d^4*n10 + 14240*n10^2 - 27664*d*n10^2 + 
      17368*d^2*n10^2 - 3548*d^3*n10^2 + 12416*n10^3 - 15168*d*n10^3 + 
      4544*d^2*n10^3 + 4224*n10^4 - 2496*d*n10^4 + 512*n10^5)*
     j[p4, 0, 0, 1, 0, 0, 1, 0, n10, -1, -1 + n10, 1, 0, 0, 2])/
    (4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 
      155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 
      704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 6356*d^2*n10^2 + 
      1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 1032*d^2*n10^3 - 
      704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-19200 + 59680*d - 73200*d^2 + 44340*d^3 - 13280*d^4 + 1575*d^5 - 
      39360*n10 + 95152*d*n10 - 85264*d^2*n10 + 33604*d^3*n10 - 
      4920*d^4*n10 - 29472*n10^2 + 51792*d*n10^2 - 30024*d^2*n10^2 + 
      5748*d^3*n10^2 - 9600*n10^3 + 10752*d*n10^3 - 2976*d^2*n10^3 - 
      1152*n10^4 + 576*d*n10^4)*j[p4, 0, 0, 1, 0, 0, 1, 0, n10, -1, n10, 1, 
      0, 0, 1])/(4*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 
      155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 
      704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 6356*d^2*n10^2 + 
      1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 1032*d^2*n10^3 - 
      704*n10^4 + 416*d*n10^4 - 64*n10^5)) - 
   j[p4, 0, 0, 1, 0, 0, 1, 0, n10, -1, n10, 1, 0, 0, 2]/(2*(-2 + d - n10)) + 
   ((67840 - 253920*d + 393800*d^2 - 323900*d^3 + 149010*d^4 - 36355*d^5 + 
      3675*d^6 + 251136*n10 - 782000*d*n10 + 969080*d^2*n10 - 
      597400*d^3*n10 + 183194*d^4*n10 - 22355*d^5*n10 + 365120*n10^2 - 
      908320*d*n10^2 + 843304*d^2*n10^2 - 346288*d^3*n10^2 + 
      53062*d^4*n10^2 + 272128*n10^3 - 507104*d*n10^3 + 313520*d^2*n10^3 - 
      64304*d^3*n10^3 + 110848*n10^4 - 137536*d*n10^4 + 42464*d^2*n10^4 + 
      23552*n10^5 - 14592*d*n10^5 + 2048*n10^6)*j[p4, 0, 0, 1, 0, 0, 1, 0, 
      n10, 0, -2 + n10, 1, 0, 1, 1])/(4*(-1 + n10)*
     (-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 
      14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-2400 + 7760*d - 9820*d^2 + 6100*d^3 - 1865*d^4 + 225*d^5 - 10080*n10 + 
      29744*d*n10 - 34596*d^2*n10 + 19922*d^3*n10 - 5700*d^4*n10 + 
      650*d^5*n10 - 13648*n10^2 + 33464*d*n10^2 - 30940*d^2*n10^2 + 
      12786*d^3*n10^2 - 1990*d^4*n10^2 - 7520*n10^3 + 14736*d*n10^3 - 
      9796*d^2*n10^3 + 2186*d^3*n10^3 - 1328*n10^4 + 2240*d*n10^4 - 
      908*d^2*n10^4 + 192*n10^5 + 64*n10^6)*j[p4, 0, 0, 1, 0, 0, 1, 0, n10, 
      0, -1 + n10, 0, 0, 1, 1])/(2*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 
      4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 
      12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((17440 - 56760*d + 72580*d^2 - 45630*d^3 + 14125*d^4 - 1725*d^5 + 
      50816*n10 - 129696*d*n10 + 121944*d^2*n10 - 50170*d^3*n10 + 
      7635*d^4*n10 + 58256*n10^2 - 109104*d*n10^2 + 67056*d^2*n10^2 - 
      13554*d^3*n10^2 + 32688*n10^3 - 39968*d*n10^3 + 12060*d^2*n10^3 + 
      8960*n10^4 - 5376*d*n10^4 + 960*n10^5)*j[p4, 0, 0, 1, 0, 0, 1, 0, n10, 
      0, -1 + n10, 1, -1, 0, 2])/(2*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 
      4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 
      12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((5280 - 19120*d + 26480*d^2 - 17680*d^3 + 5730*d^4 - 725*d^5 + 
      24352*n10 - 65552*d*n10 + 64056*d^2*n10 - 27104*d^3*n10 + 
      4210*d^4*n10 + 36896*n10^2 - 70816*d*n10^2 + 44256*d^2*n10^2 - 
      9044*d^3*n10^2 + 24800*n10^3 - 30592*d*n10^3 + 9272*d^2*n10^3 + 
      7680*n10^4 - 4608*d*n10^4 + 896*n10^5)*j[p4, 0, 0, 1, 0, 0, 1, 0, n10, 
      0, -1 + n10, 1, -1, 2, 0])/(4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 
      4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 
      12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-8000 + 21160*d - 21280*d^2 + 10010*d^3 - 2130*d^4 + 150*d^5 + 
      16080*n10 - 55656*d*n10 + 67560*d^2*n10 - 35876*d^3*n10 + 
      7850*d^4*n10 - 425*d^5*n10 + 40832*n10^2 - 81192*d*n10^2 + 
      49580*d^2*n10^2 - 7256*d^3*n10^2 - 1220*d^4*n10^2 + 16048*n10^3 - 
      5632*d*n10^3 - 13476*d^2*n10^3 + 6568*d^3*n10^3 - 8000*n10^4 + 
      19104*d*n10^4 - 8896*d^2*n10^4 - 6208*n10^5 + 4992*d*n10^5 - 
      1024*n10^6)*j[p4, 0, 0, 1, 0, 0, 1, 0, n10, 0, -1 + n10, 1, 0, 0, 1])/
    (2*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 
      155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 
      704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 6356*d^2*n10^2 + 
      1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 1032*d^2*n10^3 - 
      704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((4320 - 11920*d + 12800*d^2 - 6720*d^3 + 1730*d^4 - 175*d^5 - 2272*n10 + 
      8656*d*n10 - 10232*d^2*n10 + 4876*d^3*n10 - 820*d^4*n10 - 14240*n10^2 + 
      27664*d*n10^2 - 17368*d^2*n10^2 + 3548*d^3*n10^2 - 12416*n10^3 + 
      15168*d*n10^3 - 4544*d^2*n10^3 - 4224*n10^4 + 2496*d*n10^4 - 512*n10^5)*
     j[p4, 0, 0, 1, 0, 0, 1, 0, n10, 0, -1 + n10, 1, 0, 0, 2])/
    (4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 
      155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 
      704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 6356*d^2*n10^2 + 
      1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 1032*d^2*n10^3 - 
      704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((64000 - 196240*d + 237500*d^2 - 142020*d^3 + 42015*d^4 - 4925*d^5 + 
      147600*n10 - 355336*d*n10 + 317312*d^2*n10 - 124682*d^3*n10 + 
      18205*d^4*n10 + 130960*n10^2 - 232856*d*n10^2 + 136716*d^2*n10^2 - 
      26522*d^3*n10^2 + 55904*n10^3 - 65408*d*n10^3 + 18968*d^2*n10^3 + 
      11456*n10^4 - 6624*d*n10^4 + 896*n10^5)*j[p4, 0, 0, 1, 0, 0, 1, 0, n10, 
      0, -1 + n10, 1, 0, 1, 0])/(4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 
      4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 
      12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-51840 + 185952*d - 277288*d^2 + 220284*d^3 - 98394*d^4 + 23435*d^5 - 
      2325*d^6 - 152416*n10 + 458528*d*n10 - 553008*d^2*n10 + 
      334212*d^3*n10 - 101174*d^4*n10 + 12265*d^5*n10 - 184352*n10^2 + 
      451008*d*n10^2 - 415520*d^2*n10^2 + 170672*d^3*n10^2 - 
      26334*d^4*n10^2 - 119552*n10^3 + 224432*d*n10^3 - 140944*d^2*n10^3 + 
      29548*d^3*n10^3 - 44352*n10^4 + 56928*d*n10^4 - 18272*d^2*n10^4 - 
      8960*n10^5 + 5888*d*n10^5 - 768*n10^6)*j[p4, 0, 0, 1, 0, 0, 1, 0, n10, 
      0, -1 + n10, 1, 0, 1, 1])/(4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 
      4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 
      12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-12240 + 39400*d - 49840*d^2 + 31010*d^3 - 9505*d^4 + 1150*d^5 - 
      31856*n10 + 80352*d*n10 - 74660*d^2*n10 + 30354*d^3*n10 - 
      4565*d^4*n10 - 33184*n10^2 + 61304*d*n10^2 - 37140*d^2*n10^2 + 
      7396*d^3*n10^2 - 17200*n10^3 + 20672*d*n10^3 - 6124*d^2*n10^3 - 
      4416*n10^4 + 2592*d*n10^4 - 448*n10^5)*j[p4, 0, 0, 1, 0, 0, 1, 0, n10, 
      0, -1 + n10, 1, 0, 2, 0])/(2*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 
      4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 
      12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((19200 - 59680*d + 73200*d^2 - 44340*d^3 + 13280*d^4 - 1575*d^5 + 
      58560*n10 - 145232*d*n10 + 133424*d^2*n10 - 53864*d^3*n10 + 
      8070*d^4*n10 + 68832*n10^2 - 127264*d*n10^2 + 77552*d^2*n10^2 - 
      15588*d^3*n10^2 + 39072*n10^3 - 47808*d*n10^3 + 14472*d^2*n10^3 + 
      10752*n10^4 - 6528*d*n10^4 + 1152*n10^5)*j[p4, 0, 0, 1, 0, 0, 1, 0, 
      n10, 0, n10, 0, -1, 1, 1])/(4*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 
      1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 
      4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 
      6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 
      1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-46720 + 158528*d - 221312*d^2 + 162976*d^3 - 66856*d^4 + 14500*d^5 - 
      1300*d^6 - 102768*n10 + 280960*d*n10 - 303824*d^2*n10 + 
      162508*d^3*n10 - 43005*d^4*n10 + 4505*d^5*n10 - 78112*n10^2 + 
      161576*d*n10^2 - 123220*d^2*n10^2 + 40954*d^3*n10^2 - 4987*d^4*n10^2 - 
      18752*n10^3 + 23120*d*n10^3 - 8104*d^2*n10^3 + 592*d^3*n10^3 + 
      4576*n10^4 - 7328*d*n10^4 + 2664*d^2*n10^4 + 2944*n10^5 - 
      1856*d*n10^5 + 384*n10^6)*j[p4, 0, 0, 1, 0, 0, 1, 0, n10, 0, n10, 0, 0, 
      1, 1])/(4*(-2 + d - n10)^2*(1160 - 2876*d + 2626*d^2 - 1049*d^3 + 
      155*d^4 + 2464*n10 - 4532*d*n10 + 2748*d^2*n10 - 549*d^3*n10 + 
      1840*n10^2 - 2248*d*n10^2 + 680*d^2*n10^2 + 576*n10^3 - 352*d*n10^3 + 
      64*n10^4)) + ((-7680 + 25792*d - 35968*d^2 + 26664*d^3 - 11084*d^4 + 
      2450*d^5 - 225*d^6 - 22992*n10 + 62392*d*n10 - 67284*d^2*n10 + 
      36046*d^3*n10 - 9594*d^4*n10 + 1015*d^5*n10 - 20128*n10^2 + 
      40200*d*n10^2 - 29288*d^2*n10^2 + 9146*d^3*n10^2 - 1018*d^4*n10^2 - 
      3104*n10^3 + 992*d*n10^3 + 1968*d^2*n10^3 - 860*d^3*n10^3 + 
      3904*n10^4 - 5920*d*n10^4 + 2112*d^2*n10^4 + 1920*n10^5 - 
      1280*d*n10^5 + 256*n10^6)*j[p4, 0, 0, 1, 0, 0, 1, 0, n10, 0, n10, 1, 0, 
      0, 1])/(4*(-2 + d - n10)^2*(1160 - 2876*d + 2626*d^2 - 1049*d^3 + 
      155*d^4 + 2464*n10 - 4532*d*n10 + 2748*d^2*n10 - 549*d^3*n10 + 
      1840*n10^2 - 2248*d*n10^2 + 680*d^2*n10^2 + 576*n10^3 - 352*d*n10^3 + 
      64*n10^4)) + j[p4, 0, 0, 1, 0, 0, 1, 0, n10, 0, n10, 1, 0, 0, 2]/
    (2*(-2 + d - n10)) + ((-6 + 3*d - 2*n10)*j[p4, 0, 0, 1, 0, 0, 1, 0, n10, 
      0, n10, 1, 0, 1, 0])/(4*(-2 + d - n10)^2) + 
   ((-10*n10 + 5*d*n10 - 4*n10^2)*j[p4, 0, 0, 1, 0, 0, 1, 0, n10, 0, 1 + n10, 
      0, -1, 1, 1])/(4*(-2 + d - n10)^2) + 
   ((10*n10 - 5*d*n10 + 4*n10^2)*j[p4, 0, 0, 1, 0, 0, 1, 0, n10, 0, 1 + n10, 
      0, 0, 1, 1])/(4*(-2 + d - n10)^2) + 
   ((4680*n10 - 14020*d*n10 + 16590*d^2*n10 - 9715*d^3*n10 + 2820*d^4*n10 - 
      325*d^5*n10 + 8912*n10^2 - 20772*d*n10^2 + 18050*d^2*n10^2 - 
      6936*d^3*n10^2 + 995*d^4*n10^2 + 5896*n10^3 - 10072*d*n10^3 + 
      5744*d^2*n10^3 - 1093*d^3*n10^3 + 1432*n10^4 - 1600*d*n10^4 + 
      454*d^2*n10^4 - 32*n10^6)*j[p4, 0, 0, 1, 0, 0, 1, 0, 1 + n10, 0, 
      -1 + n10, 0, -1, 1, 1])/((-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 
      4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 
      12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-6*n10 + 3*d*n10 - 2*n10^2)*j[p4, 0, 0, 1, 0, 0, 1, 0, 1 + n10, 0, n10, 
      0, -1, 1, 1])/(4*(-2 + d - n10)^2) + 
   ((35520 - 108000*d + 129740*d^2 - 77100*d^3 + 22695*d^4 - 2650*d^5 + 
      83888*n10 - 201576*d*n10 + 180128*d^2*n10 - 70986*d^3*n10 + 
      10415*d^4*n10 + 76912*n10^2 - 137896*d*n10^2 + 81924*d^2*n10^2 - 
      16126*d^3*n10^2 + 34336*n10^3 - 41088*d*n10^3 + 12232*d^2*n10^3 + 
      7488*n10^4 - 4512*d*n10^4 + 640*n10^5)*j[p4, 0, 0, 1, 0, 0, 2, 0, 
      -1 + n10, 0, -1 + n10, 1, 0, 0, 1])/(4*(-1 + n10)*
     (-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 
      14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((35520 - 108000*d + 129740*d^2 - 77100*d^3 + 22695*d^4 - 2650*d^5 + 
      83888*n10 - 201576*d*n10 + 180128*d^2*n10 - 70986*d^3*n10 + 
      10415*d^4*n10 + 76912*n10^2 - 137896*d*n10^2 + 81924*d^2*n10^2 - 
      16126*d^3*n10^2 + 34336*n10^3 - 41088*d*n10^3 + 12232*d^2*n10^3 + 
      7488*n10^4 - 4512*d*n10^4 + 640*n10^5)*j[p4, 0, 0, 1, 0, 0, 2, 0, 
      -1 + n10, 0, -1 + n10, 1, 0, 1, 0])/(4*(-1 + n10)*
     (-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 
      14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-4680 + 14020*d - 16590*d^2 + 9715*d^3 - 2820*d^4 + 325*d^5 - 8912*n10 + 
      20772*d*n10 - 18050*d^2*n10 + 6936*d^3*n10 - 995*d^4*n10 - 5896*n10^2 + 
      10072*d*n10^2 - 5744*d^2*n10^2 + 1093*d^3*n10^2 - 1432*n10^3 + 
      1600*d*n10^3 - 454*d^2*n10^3 + 32*n10^5)*j[p4, 0, 0, 1, 0, 0, 2, 0, 
      n10, -1, -1 + n10, 1, 0, 0, 1])/((-1 + n10)*
     (-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 
      14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-4680 + 14020*d - 16590*d^2 + 9715*d^3 - 2820*d^4 + 325*d^5 - 8912*n10 + 
      20772*d*n10 - 18050*d^2*n10 + 6936*d^3*n10 - 995*d^4*n10 - 5896*n10^2 + 
      10072*d*n10^2 - 5744*d^2*n10^2 + 1093*d^3*n10^2 - 1432*n10^3 + 
      1600*d*n10^3 - 454*d^2*n10^3 + 32*n10^5)*j[p4, 0, 0, 1, 0, 0, 2, 0, 
      n10, -1, -1 + n10, 1, 0, 1, 0])/((-1 + n10)*
     (-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 
      14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((6 - 3*d + 2*n10)*j[p4, 0, 0, 1, 0, 0, 2, 0, n10, -1, n10, 1, 0, 0, 1])/
    (4*(-2 + d - n10)^2) + ((6 - 3*d + 2*n10)*j[p4, 0, 0, 1, 0, 0, 2, 0, n10, 
      -1, n10, 1, 0, 1, 0])/(4*(-2 + d - n10)^2) + 
   ((4680 - 14020*d + 16590*d^2 - 9715*d^3 + 2820*d^4 - 325*d^5 + 8912*n10 - 
      20772*d*n10 + 18050*d^2*n10 - 6936*d^3*n10 + 995*d^4*n10 + 5896*n10^2 - 
      10072*d*n10^2 + 5744*d^2*n10^2 - 1093*d^3*n10^2 + 1432*n10^3 - 
      1600*d*n10^3 + 454*d^2*n10^3 - 32*n10^5)*j[p4, 0, 0, 1, 0, 0, 2, 0, 
      n10, 0, -2 + n10, 1, 0, 0, 1])/((-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 
      4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 
      12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((4680 - 14020*d + 16590*d^2 - 9715*d^3 + 2820*d^4 - 325*d^5 + 8912*n10 - 
      20772*d*n10 + 18050*d^2*n10 - 6936*d^3*n10 + 995*d^4*n10 + 5896*n10^2 - 
      10072*d*n10^2 + 5744*d^2*n10^2 - 1093*d^3*n10^2 + 1432*n10^3 - 
      1600*d*n10^3 + 454*d^2*n10^3 - 32*n10^5)*j[p4, 0, 0, 1, 0, 0, 2, 0, 
      n10, 0, -2 + n10, 1, 0, 1, 0])/((-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 
      4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 
      12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-6 + 3*d - 2*n10)*j[p4, 0, 0, 1, 0, 0, 2, 0, n10, 0, -1 + n10, 1, 0, 0, 
      1])/(4*(-2 + d - n10)^2) + 
   ((-6 + 3*d - 2*n10)*j[p4, 0, 0, 1, 0, 0, 2, 0, n10, 0, -1 + n10, 1, 0, 1, 
      0])/(4*(-2 + d - n10)^2) + 
   ((19200 - 59680*d + 73200*d^2 - 44340*d^3 + 13280*d^4 - 1575*d^5 + 
      39360*n10 - 95152*d*n10 + 85264*d^2*n10 - 33604*d^3*n10 + 
      4920*d^4*n10 + 29472*n10^2 - 51792*d*n10^2 + 30024*d^2*n10^2 - 
      5748*d^3*n10^2 + 9600*n10^3 - 10752*d*n10^3 + 2976*d^2*n10^3 + 
      1152*n10^4 - 576*d*n10^4)*j[p4, 0, 0, 2, -1, 0, 1, 0, n10, 0, -1 + n10, 
      0, 0, 1, 1])/(4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 
      1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 
      4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 
      6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 
      1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((19200 - 59680*d + 73200*d^2 - 44340*d^3 + 13280*d^4 - 1575*d^5 + 
      39360*n10 - 95152*d*n10 + 85264*d^2*n10 - 33604*d^3*n10 + 
      4920*d^4*n10 + 29472*n10^2 - 51792*d*n10^2 + 30024*d^2*n10^2 - 
      5748*d^3*n10^2 + 9600*n10^3 - 10752*d*n10^3 + 2976*d^2*n10^3 + 
      1152*n10^4 - 576*d*n10^4)*j[p4, 0, 0, 2, -1, 0, 1, 0, n10, 0, -1 + n10, 
      1, 0, 0, 1])/(2*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 
      1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 
      4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 
      6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 
      1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((4320 - 11920*d + 12800*d^2 - 6720*d^3 + 1730*d^4 - 175*d^5 - 2272*n10 + 
      8656*d*n10 - 10232*d^2*n10 + 4876*d^3*n10 - 820*d^4*n10 - 14240*n10^2 + 
      27664*d*n10^2 - 17368*d^2*n10^2 + 3548*d^3*n10^2 - 12416*n10^3 + 
      15168*d*n10^3 - 4544*d^2*n10^3 - 4224*n10^4 + 2496*d*n10^4 - 512*n10^5)*
     j[p4, 0, 0, 2, 0, 0, 1, -1, n10, 0, -1 + n10, 0, 0, 1, 1])/
    (4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 
      155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 
      704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 6356*d^2*n10^2 + 
      1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 1032*d^2*n10^3 - 
      704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-45920 + 150800*d - 194720*d^2 + 123680*d^3 - 38690*d^4 + 4775*d^5 - 
      149408*n10 + 386096*d*n10 - 368040*d^2*n10 + 153652*d^3*n10 - 
      23740*d^4*n10 - 186336*n10^2 + 354736*d*n10^2 - 221960*d^2*n10^2 + 
      45716*d^3*n10^2 - 111488*n10^3 + 139200*d*n10^3 - 42944*d^2*n10^3 - 
      32128*n10^4 + 19776*d*n10^4 - 3584*n10^5)*j[p4, 0, 0, 2, 0, 0, 1, -1, 
      n10, 0, -1 + n10, 1, 0, 0, 1])/(4*(-1 + n10)*
     (-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 
      14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((19200 - 59680*d + 73200*d^2 - 44340*d^3 + 13280*d^4 - 1575*d^5 + 
      39360*n10 - 95152*d*n10 + 85264*d^2*n10 - 33604*d^3*n10 + 
      4920*d^4*n10 + 29472*n10^2 - 51792*d*n10^2 + 30024*d^2*n10^2 - 
      5748*d^3*n10^2 + 9600*n10^3 - 10752*d*n10^3 + 2976*d^2*n10^3 + 
      1152*n10^4 - 576*d*n10^4)*j[p4, 0, 0, 2, 0, 0, 1, -1, n10, 0, -1 + n10, 
      1, 0, 1, 0])/(4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 
      1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 
      4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 
      6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 
      1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) - 
   j[p4, 0, 0, 2, 0, 0, 1, -1, n10, 0, n10, 0, 0, 1, 1]/(2*(-2 + d - n10)) - 
   j[p4, 0, 0, 2, 0, 0, 1, -1, n10, 0, n10, 1, 0, 0, 1]/(2*(-2 + d - n10)) + 
   ((-45920 + 150800*d - 194720*d^2 + 123680*d^3 - 38690*d^4 + 4775*d^5 - 
      149408*n10 + 386096*d*n10 - 368040*d^2*n10 + 153652*d^3*n10 - 
      23740*d^4*n10 - 186336*n10^2 + 354736*d*n10^2 - 221960*d^2*n10^2 + 
      45716*d^3*n10^2 - 111488*n10^3 + 139200*d*n10^3 - 42944*d^2*n10^3 - 
      32128*n10^4 + 19776*d*n10^4 - 3584*n10^5)*j[p4, 0, 0, 2, 0, 0, 1, 0, 
      -1 + n10, 0, -1 + n10, 1, 0, 0, 1])/(4*(-1 + n10)*
     (-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 
      14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((57600 - 179040*d + 219600*d^2 - 133020*d^3 + 39840*d^4 - 4725*d^5 + 
      118080*n10 - 285456*d*n10 + 255792*d^2*n10 - 100812*d^3*n10 + 
      14760*d^4*n10 + 88416*n10^2 - 155376*d*n10^2 + 90072*d^2*n10^2 - 
      17244*d^3*n10^2 + 28800*n10^3 - 32256*d*n10^3 + 8928*d^2*n10^3 + 
      3456*n10^4 - 1728*d*n10^4)*j[p4, 0, 0, 2, 0, 0, 1, 0, -1 + n10, 0, 
      -1 + n10, 1, 0, 1, 0])/(4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 
      4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 
      12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) - 
   j[p4, 0, 0, 2, 0, 0, 1, 0, -1 + n10, 0, n10, 0, 0, 1, 1]/(-2 + d - n10) - 
   j[p4, 0, 0, 2, 0, 0, 1, 0, -1 + n10, 0, n10, 1, 0, 0, 1]/
    (2*(-2 + d - n10)) + ((-4320 + 11920*d - 12800*d^2 + 6720*d^3 - 
      1730*d^4 + 175*d^5 + 2272*n10 - 8656*d*n10 + 10232*d^2*n10 - 
      4876*d^3*n10 + 820*d^4*n10 + 14240*n10^2 - 27664*d*n10^2 + 
      17368*d^2*n10^2 - 3548*d^3*n10^2 + 12416*n10^3 - 15168*d*n10^3 + 
      4544*d^2*n10^3 + 4224*n10^4 - 2496*d*n10^4 + 512*n10^5)*
     j[p4, 0, 0, 2, 0, 0, 1, 0, n10, 0, -2 + n10, 1, 0, 0, 1])/
    (4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 
      155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 
      704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 6356*d^2*n10^2 + 
      1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 1032*d^2*n10^3 - 
      704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-19200 + 59680*d - 73200*d^2 + 44340*d^3 - 13280*d^4 + 1575*d^5 - 
      39360*n10 + 95152*d*n10 - 85264*d^2*n10 + 33604*d^3*n10 - 
      4920*d^4*n10 - 29472*n10^2 + 51792*d*n10^2 - 30024*d^2*n10^2 + 
      5748*d^3*n10^2 - 9600*n10^3 + 10752*d*n10^3 - 2976*d^2*n10^3 - 
      1152*n10^4 + 576*d*n10^4)*j[p4, 0, 0, 2, 0, 0, 1, 0, n10, 0, -2 + n10, 
      1, 0, 1, 0])/(4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 
      1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 
      4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 
      6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 
      1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((5200 - 17360*d + 22740*d^2 - 14620*d^3 + 4620*d^4 - 575*d^5 + 
      18960*n10 - 49344*d*n10 + 47284*d^2*n10 - 19816*d^3*n10 + 
      3070*d^4*n10 + 25072*n10^2 - 47800*d*n10^2 + 29916*d^2*n10^2 - 
      6158*d^3*n10^2 + 15488*n10^3 - 19296*d*n10^3 + 5936*d^2*n10^3 + 
      4544*n10^4 - 2784*d*n10^4 + 512*n10^5)*j[p4, 0, 0, 2, 0, 0, 1, 0, n10, 
      0, -1 + n10, 1, -1, 0, 1])/((-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 
      4724*d^3 - 1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 
      12654*d^2*n10 + 4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 
      10868*d*n10^2 - 6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 
      3528*d*n10^3 - 1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((-19200 + 59680*d - 73200*d^2 + 44340*d^3 - 13280*d^4 + 1575*d^5 - 
      39360*n10 + 95152*d*n10 - 85264*d^2*n10 + 33604*d^3*n10 - 
      4920*d^4*n10 - 29472*n10^2 + 51792*d*n10^2 - 30024*d^2*n10^2 + 
      5748*d^3*n10^2 - 9600*n10^3 + 10752*d*n10^3 - 2976*d^2*n10^3 - 
      1152*n10^4 + 576*d*n10^4)*j[p4, 0, 0, 2, 0, 0, 1, 0, n10, 0, -1 + n10, 
      1, -1, 1, 0])/(2*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 
      1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 
      4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 
      6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 
      1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((6640 - 17672*d + 18052*d^2 - 8818*d^3 + 2040*d^4 - 175*d^5 + 336*n10 + 
      5344*d*n10 - 9988*d^2*n10 + 5876*d^3*n10 - 1130*d^4*n10 - 15488*n10^2 + 
      32232*d*n10^2 - 21504*d^2*n10^2 + 4646*d^3*n10^2 - 14944*n10^3 + 
      18960*d*n10^3 - 5904*d^2*n10^3 - 5248*n10^4 + 3200*d*n10^4 - 640*n10^5)*
     j[p4, 0, 0, 2, 0, 0, 1, 0, n10, 0, -1 + n10, 1, 0, 0, 1])/
    (4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 1359*d^4 + 
      155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 4895*d^3*n10 - 
      704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 6356*d^2*n10^2 + 
      1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 1032*d^2*n10^3 - 
      704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   ((19200 - 59680*d + 73200*d^2 - 44340*d^3 + 13280*d^4 - 1575*d^5 + 
      39360*n10 - 95152*d*n10 + 85264*d^2*n10 - 33604*d^3*n10 + 
      4920*d^4*n10 + 29472*n10^2 - 51792*d*n10^2 + 30024*d^2*n10^2 - 
      5748*d^3*n10^2 + 9600*n10^3 - 10752*d*n10^3 + 2976*d^2*n10^3 + 
      1152*n10^4 - 576*d*n10^4)*j[p4, 0, 0, 2, 0, 0, 1, 0, n10, 0, -1 + n10, 
      1, 0, 1, 0])/(4*(-1 + n10)*(-2320 + 6912*d - 8128*d^2 + 4724*d^3 - 
      1359*d^4 + 155*d^5 - 6088*n10 + 14404*d*n10 - 12654*d^2*n10 + 
      4895*d^3*n10 - 704*d^4*n10 - 6144*n10^2 + 10868*d*n10^2 - 
      6356*d^2*n10^2 + 1229*d^3*n10^2 - 2992*n10^3 + 3528*d*n10^3 - 
      1032*d^2*n10^3 - 704*n10^4 + 416*d*n10^4 - 64*n10^5)) + 
   j[p4, 0, 0, 2, 0, 0, 1, 0, n10, 0, n10, 0, -1, 1, 1]/(2*(-2 + d - n10)) + 
   j[p4, 0, 0, 2, 0, 0, 1, 0, n10, 0, n10, 1, 0, 0, 1]/(2*(-2 + d - n10)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n2 == 0 && n4 == 0 && n5 == 0 && n6 == 1 && n7 == 0 && n8 == 1 && 
    n9 == 0 && n3 != 1 -> 
  ((8000 - 28000*d + 38760*d^2 - 25760*d^3 + 7410*d^4 - 160*d^5 - 225*d^6 + 
      14720*n3 - 38240*d*n3 + 31464*d^2*n3 - 3572*d^3*n3 - 6272*d^4*n3 + 
      2050*d^5*n3 + 9248*n3^2 - 8672*d*n3^2 - 13552*d^2*n3^2 + 
      18856*d^3*n3^2 - 5746*d^4*n3^2 - 864*n3^3 + 14960*d*n3^3 - 
      21272*d^2*n3^3 + 7740*d^3*n3^3 - 4448*n3^4 + 10912*d*n3^4 - 
      5592*d^2*n3^4 - 2144*n3^5 + 2096*d*n3^5 - 320*n3^6)*
     j[p4, -1, 0, -1 + n3, 0, 0, 0, 0, 1, 0, 1, 2, 0, 1, 1])/
    (4*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-5760 + 17760*d - 20960*d^2 + 11460*d^3 - 2700*d^4 + 175*d^5 - 
      10944*n3 + 24672*d*n3 - 18168*d^2*n3 + 4100*d^3*n3 + 140*d^4*n3 - 
      6976*n3^2 + 8080*d*n3^2 + 136*d^2*n3^2 - 1544*d^3*n3^2 - 608*n3^3 - 
      2736*d*n3^3 + 2336*d^2*n3^3 + 1120*n3^4 - 1424*d*n3^4 + 320*n3^5)*
     j[p4, -1, 0, -1 + n3, 0, 0, 0, 0, 2, 0, 1, 1, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((8000 - 28000*d + 38760*d^2 - 25760*d^3 + 7410*d^4 - 160*d^5 - 225*d^6 + 
      14720*n3 - 38240*d*n3 + 31464*d^2*n3 - 3572*d^3*n3 - 6272*d^4*n3 + 
      2050*d^5*n3 + 9248*n3^2 - 8672*d*n3^2 - 13552*d^2*n3^2 + 
      18856*d^3*n3^2 - 5746*d^4*n3^2 - 864*n3^3 + 14960*d*n3^3 - 
      21272*d^2*n3^3 + 7740*d^3*n3^3 - 4448*n3^4 + 10912*d*n3^4 - 
      5592*d^2*n3^4 - 2144*n3^5 + 2096*d*n3^5 - 320*n3^6)*
     j[p4, -1, 0, -1 + n3, 0, 0, 1, 0, 0, 0, 1, 2, 0, 1, 1])/
    (4*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((2720 - 8240*d + 9620*d^2 - 5340*d^3 + 1375*d^4 - 125*d^5 + 5088*n3 - 
      11712*d*n3 + 9552*d^2*n3 - 3150*d^3*n3 + 325*d^4*n3 + 3760*n3^2 - 
      6144*d*n3^2 + 3000*d^2*n3^2 - 390*d^3*n3^2 + 1504*n3^3 - 1512*d*n3^3 + 
      308*d^2*n3^3 + 336*n3^4 - 152*d*n3^4 + 32*n3^5)*
     j[p4, -1, 0, -1 + n3, 0, 0, 1, 0, 0, 0, 2, 1, 0, 1, 1])/
    (4*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((13760 - 49280*d + 74760*d^2 - 61780*d^3 + 29350*d^4 - 7575*d^5 + 
      825*d^6 + 26944*n3 - 89440*d*n3 + 122464*d^2*n3 - 85460*d^3*n3 + 
      30040*d^4*n3 - 4215*d^5*n3 + 33696*n3^2 - 100944*d*n3^2 + 
      112784*d^2*n3^2 - 55292*d^3*n3^2 + 9994*d^4*n3^2 + 31808*n3^3 - 
      72272*d*n3^3 + 53552*d^2*n3^3 - 12940*d^3*n3^3 + 17504*n3^4 - 
      25728*d*n3^4 + 9256*d^2*n3^4 + 4800*n3^5 - 3424*d*n3^5 + 512*n3^6)*
     j[p4, -1, 0, -1 + n3, 0, 0, 1, 0, 1, 0, 0, 2, 0, 1, 1])/
    (8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-4480 + 14720*d - 17840*d^2 + 7640*d^3 + 2040*d^4 - 2730*d^5 + 625*d^6 - 
      7552*n3 + 16192*d*n3 - 1920*d^2*n3 - 19224*d^3*n3 + 16364*d^4*n3 - 
      3960*d^5*n3 - 4544*n3^2 - 5792*d*n3^2 + 34912*d^2*n3^2 - 
      34488*d^3*n3^2 + 9948*d^4*n3^2 + 2944*n3^3 - 25056*d*n3^3 + 
      35136*d^2*n3^3 - 13144*d^3*n3^3 + 6656*n3^4 - 17856*d*n3^4 + 
      9760*d^2*n3^4 + 3648*n3^5 - 3872*d*n3^5 + 640*n3^6)*
     j[p4, -1, 0, -1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 2, 0])/
    (8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((2720 - 8240*d + 9620*d^2 - 5340*d^3 + 1375*d^4 - 125*d^5 + 5088*n3 - 
      11712*d*n3 + 9552*d^2*n3 - 3150*d^3*n3 + 325*d^4*n3 + 3760*n3^2 - 
      6144*d*n3^2 + 3000*d^2*n3^2 - 390*d^3*n3^2 + 1504*n3^3 - 1512*d*n3^3 + 
      308*d^2*n3^3 + 336*n3^4 - 152*d*n3^4 + 32*n3^5)*
     j[p4, -1, 0, -1 + n3, 0, 0, 1, 0, 1, 0, 2, 1, 0, 0, 1])/
    (4*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-10 + 5*d - 4*n3)*j[p4, -1, 0, -1 + n3, 0, 0, 2, 0, 0, 0, 1, 2, 0, 1, 
      1])/(2*(-2 + d - n3)^2*(-1 + n3)) + 
   ((-10 + 5*d - 4*n3)*j[p4, -1, 0, -1 + n3, 0, 0, 2, 0, 1, 0, 0, 2, 0, 1, 
      1])/(2*(-2 + d - n3)^2*(-1 + n3)) + 
   ((72 - 72*d + 18*d^2 + 32*n3 - 16*d*n3 + 4*n3^2)*
     j[p4, -1, 0, n3, 0, 0, 0, 0, 1, 0, 1, 2, 0, 1, 1])/
    ((-2 + d)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-14 + 7*d - 2*n3)*j[p4, -1, 0, n3, 0, 0, 0, 0, 2, 0, 1, 1, 0, 1, 1])/
    (36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) + 
   ((72 - 72*d + 18*d^2 + 32*n3 - 16*d*n3 + 4*n3^2)*
     j[p4, -1, 0, n3, 0, 0, 1, 0, 0, 0, 1, 2, 0, 1, 1])/
    ((-2 + d)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((20 - 10*d + 6*n3)*j[p4, -1, 0, n3, 0, 0, 1, 0, 0, 0, 2, 1, 0, 1, 1])/
    (36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) + 
   ((96 - 144*d + 72*d^2 - 12*d^3 + 192*n3 - 192*d*n3 + 48*d^2*n3 + 
      102*n3^2 - 51*d*n3^2 + 16*n3^3)*j[p4, -1, 0, n3, 0, 0, 1, 0, 1, 0, 0, 
      2, 0, 1, 1])/((-2 + d)*(-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 
      18*d*n3 + 8*n3^2)) + ((-2560 + 4320*d + 400*d^2 - 4580*d^3 + 2960*d^4 - 
      575*d^5 + 1856*n3 - 14304*d*n3 + 23848*d^2*n3 - 14668*d^3*n3 + 
      3060*d^4*n3 + 10112*n3^2 - 27152*d*n3^2 + 22296*d^2*n3^2 - 
      5760*d^3*n3^2 + 8864*n3^3 - 13616*d*n3^3 + 5024*d^2*n3^3 + 2912*n3^4 - 
      2064*d*n3^4 + 320*n3^5)*j[p4, -1, 0, n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 
      1])/(8*(-2 + d - n3)^2*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-5760 + 17760*d - 20960*d^2 + 11460*d^3 - 2700*d^4 + 175*d^5 - 
      10944*n3 + 24672*d*n3 - 18168*d^2*n3 + 4100*d^3*n3 + 140*d^4*n3 - 
      6976*n3^2 + 8080*d*n3^2 + 136*d^2*n3^2 - 1544*d^3*n3^2 - 608*n3^3 - 
      2736*d*n3^3 + 2336*d^2*n3^3 + 1120*n3^4 - 1424*d*n3^4 + 320*n3^5)*
     j[p4, -1, 0, n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0])/
    (8*(-2 + d - n3)^2*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 
      126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-44 + 44*d - 11*d^2 - 28*n3 + 14*d*n3 - 4*n3^2)*
     j[p4, -1, 0, n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 2, 0])/
    ((-2 + d)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((20 - 10*d + 6*n3)*j[p4, -1, 0, n3, 0, 0, 1, 0, 1, 0, 2, 1, 0, 0, 1])/
    (36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) + 
   ((-10 + 5*d - 4*n3)*j[p4, -1, 0, n3, 0, 0, 2, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-2 + d - n3)^2) + ((16*n3 - 16*d*n3 + 4*d^2*n3 + 10*n3^2 - 5*d*n3^2 + 
      2*n3^3)*j[p4, -1, 0, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-14*n3 + 7*d*n3 - 2*n3^2)*j[p4, -1, 0, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 
      0, 1, 0])/(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) + 
   ((5760 - 17760*d + 20960*d^2 - 11460*d^3 + 2700*d^4 - 175*d^5 + 10944*n3 - 
      24672*d*n3 + 18168*d^2*n3 - 4100*d^3*n3 - 140*d^4*n3 + 6976*n3^2 - 
      8080*d*n3^2 - 136*d^2*n3^2 + 1544*d^3*n3^2 + 608*n3^3 + 2736*d*n3^3 - 
      2336*d^2*n3^3 - 1120*n3^4 + 1424*d*n3^4 - 320*n3^5)*
     j[p4, 0, -1, -1 + n3, 0, 0, 0, 0, 1, 0, 2, 1, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-8000 + 28000*d - 38760*d^2 + 25760*d^3 - 7410*d^4 + 160*d^5 + 225*d^6 - 
      14720*n3 + 38240*d*n3 - 31464*d^2*n3 + 3572*d^3*n3 + 6272*d^4*n3 - 
      2050*d^5*n3 - 9248*n3^2 + 8672*d*n3^2 + 13552*d^2*n3^2 - 
      18856*d^3*n3^2 + 5746*d^4*n3^2 + 864*n3^3 - 14960*d*n3^3 + 
      21272*d^2*n3^3 - 7740*d^3*n3^3 + 4448*n3^4 - 10912*d*n3^4 + 
      5592*d^2*n3^4 + 2144*n3^5 - 2096*d*n3^5 + 320*n3^6)*
     j[p4, 0, -1, -1 + n3, 0, 0, 1, 0, 0, 0, 1, 2, 0, 1, 1])/
    (4*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-2720 + 8240*d - 9620*d^2 + 5340*d^3 - 1375*d^4 + 125*d^5 - 5088*n3 + 
      11712*d*n3 - 9552*d^2*n3 + 3150*d^3*n3 - 325*d^4*n3 - 3760*n3^2 + 
      6144*d*n3^2 - 3000*d^2*n3^2 + 390*d^3*n3^2 - 1504*n3^3 + 1512*d*n3^3 - 
      308*d^2*n3^3 - 336*n3^4 + 152*d*n3^4 - 32*n3^5)*
     j[p4, 0, -1, -1 + n3, 0, 0, 1, 0, 0, 0, 2, 1, 0, 1, 1])/
    (4*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((160 + 1360*d - 5540*d^2 + 7340*d^3 - 4375*d^4 + 1155*d^5 - 100*d^6 - 
      3776*n3 + 17296*d*n3 - 27068*d^2*n3 + 18322*d^3*n3 - 5154*d^4*n3 + 
      405*d^5*n3 - 9616*n3^2 + 26560*d*n3^2 - 23656*d^2*n3^2 + 
      7192*d^3*n3^2 - 295*d^4*n3^2 - 7472*n3^3 + 11240*d*n3^3 - 
      3164*d^2*n3^3 - 662*d^3*n3^3 - 1456*n3^4 - 528*d*n3^4 + 1252*d^2*n3^4 + 
      496*n3^5 - 760*d*n3^5 + 160*n3^6)*j[p4, 0, -1, -1 + n3, 0, 0, 1, 0, 1, 
      0, 1, 1, 0, 0, 2])/(2*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*
     (-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 126*d^2*n3 - 
      128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-8000 + 18880*d - 11960*d^2 - 2620*d^3 + 4890*d^4 - 1225*d^5 - 4480*n3 - 
      11488*d*n3 + 38792*d^2*n3 - 30672*d^3*n3 + 7450*d^4*n3 + 16288*n3^2 - 
      55632*d*n3^2 + 53704*d^2*n3^2 - 15716*d^3*n3^2 + 20960*n3^3 - 
      36960*d*n3^3 + 15352*d^2*n3^3 + 8896*n3^4 - 7136*d*n3^4 + 1280*n3^5)*
     j[p4, 0, -1, -1 + n3, 0, 0, 1, 0, 1, 0, 2, 0, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-2720 + 8240*d - 9620*d^2 + 5340*d^3 - 1375*d^4 + 125*d^5 - 5088*n3 + 
      11712*d*n3 - 9552*d^2*n3 + 3150*d^3*n3 - 325*d^4*n3 - 3760*n3^2 + 
      6144*d*n3^2 - 3000*d^2*n3^2 + 390*d^3*n3^2 - 1504*n3^3 + 1512*d*n3^3 - 
      308*d^2*n3^3 - 336*n3^4 + 152*d*n3^4 - 32*n3^5)*
     j[p4, 0, -1, -1 + n3, 0, 0, 1, 0, 1, 0, 2, 1, 0, 0, 1])/
    (4*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-2560 + 4320*d + 400*d^2 - 4580*d^3 + 2960*d^4 - 575*d^5 + 1856*n3 - 
      14304*d*n3 + 23848*d^2*n3 - 14668*d^3*n3 + 3060*d^4*n3 + 10112*n3^2 - 
      27152*d*n3^2 + 22296*d^2*n3^2 - 5760*d^3*n3^2 + 8864*n3^3 - 
      13616*d*n3^3 + 5024*d^2*n3^3 + 2912*n3^4 - 2064*d*n3^4 + 320*n3^5)*
     j[p4, 0, -1, -1 + n3, 0, 0, 1, 0, 2, 0, 1, 0, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-2560 + 4320*d + 400*d^2 - 4580*d^3 + 2960*d^4 - 575*d^5 + 1856*n3 - 
      14304*d*n3 + 23848*d^2*n3 - 14668*d^3*n3 + 3060*d^4*n3 + 10112*n3^2 - 
      27152*d*n3^2 + 22296*d^2*n3^2 - 5760*d^3*n3^2 + 8864*n3^3 - 
      13616*d*n3^3 + 5024*d^2*n3^3 + 2912*n3^4 - 2064*d*n3^4 + 320*n3^5)*
     j[p4, 0, -1, -1 + n3, 0, 0, 1, 0, 2, 0, 1, 1, 0, 0, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-17600 + 69120*d - 109640*d^2 + 88420*d^3 - 37090*d^4 + 7175*d^5 - 
      400*d^6 - 45120*n3 + 138528*d*n3 - 157792*d^2*n3 + 77972*d^3*n3 - 
      13340*d^4*n3 - 395*d^5*n3 - 42272*n3^2 + 86544*d*n3^2 - 
      47888*d^2*n3^2 - 2164*d^3*n3^2 + 5302*d^4*n3^2 - 13376*n3^3 + 
      2512*d*n3^3 + 19952*d^2*n3^3 - 10404*d^3*n3^3 + 3936*n3^4 - 
      15168*d*n3^4 + 9096*d^2*n3^4 + 3584*n3^5 - 3840*d*n3^5 + 640*n3^6)*
     j[p4, 0, -1, -1 + n3, 0, 0, 2, 0, 0, 0, 1, 1, 0, 1, 1])/
    (8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((10 - 5*d + 4*n3)*j[p4, 0, -1, -1 + n3, 0, 0, 2, 0, 0, 0, 1, 2, 0, 1, 1])/
    (2*(-2 + d - n3)^2*(-1 + n3)) + 
   ((-2560 + 4320*d + 400*d^2 - 4580*d^3 + 2960*d^4 - 575*d^5 + 1856*n3 - 
      14304*d*n3 + 23848*d^2*n3 - 14668*d^3*n3 + 3060*d^4*n3 + 10112*n3^2 - 
      27152*d*n3^2 + 22296*d^2*n3^2 - 5760*d^3*n3^2 + 8864*n3^3 - 
      13616*d*n3^3 + 5024*d^2*n3^3 + 2912*n3^4 - 2064*d*n3^4 + 320*n3^5)*
     j[p4, 0, -1, -1 + n3, 0, 0, 2, 0, 1, 0, 0, 1, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-4480 + 12800*d - 10000*d^2 - 4520*d^3 + 11080*d^4 - 5970*d^5 + 
      1075*d^6 - 3712*n3 - 6336*d*n3 + 42432*d^2*n3 - 58552*d^3*n3 + 
      32556*d^4*n3 - 6480*d^5*n3 + 9152*n3^2 - 53408*d*n3^2 + 
      92704*d^2*n3^2 - 63928*d^3*n3^2 + 15316*d^4*n3^2 + 18048*n3^3 - 
      58976*d*n3^3 + 59264*d^2*n3^3 - 18616*d^3*n3^3 + 13312*n3^4 - 
      26560*d*n3^4 + 12448*d^2*n3^4 + 4672*n3^5 - 4384*d*n3^5 + 640*n3^6)*
     j[p4, 0, -1, -1 + n3, 0, 0, 2, 0, 1, 0, 1, 1, 0, 0, 1])/
    (8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-4480 + 12800*d - 10000*d^2 - 4520*d^3 + 11080*d^4 - 5970*d^5 + 
      1075*d^6 - 3712*n3 - 6336*d*n3 + 42432*d^2*n3 - 58552*d^3*n3 + 
      32556*d^4*n3 - 6480*d^5*n3 + 9152*n3^2 - 53408*d*n3^2 + 
      92704*d^2*n3^2 - 63928*d^3*n3^2 + 15316*d^4*n3^2 + 18048*n3^3 - 
      58976*d*n3^3 + 59264*d^2*n3^3 - 18616*d^3*n3^3 + 13312*n3^4 - 
      26560*d*n3^4 + 12448*d^2*n3^4 + 4672*n3^5 - 4384*d*n3^5 + 640*n3^6)*
     j[p4, 0, -1, -1 + n3, 0, 0, 2, 0, 1, 0, 1, 1, 0, 1, 0])/
    (8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((14 - 7*d + 2*n3)*j[p4, 0, -1, n3, 0, 0, 0, 0, 1, 0, 2, 1, 0, 1, 1])/
    (36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) + 
   ((-72 + 72*d - 18*d^2 - 32*n3 + 16*d*n3 - 4*n3^2)*
     j[p4, 0, -1, n3, 0, 0, 1, 0, 0, 0, 1, 2, 0, 1, 1])/
    ((-2 + d)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-20 + 10*d - 6*n3)*j[p4, 0, -1, n3, 0, 0, 1, 0, 0, 0, 2, 1, 0, 1, 1])/
    (36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) + 
   ((-2560 + 2400*d + 7280*d^2 - 13300*d^3 + 7640*d^4 - 1475*d^5 + 5696*n3 - 
      34912*d*n3 + 57896*d^2*n3 - 36972*d^3*n3 + 8100*d^4*n3 + 23808*n3^2 - 
      67920*d*n3^2 + 59704*d^2*n3^2 - 16496*d^3*n3^2 + 23968*n3^3 - 
      39984*d*n3^3 + 15968*d^2*n3^3 + 9568*n3^4 - 7440*d*n3^4 + 1344*n3^5)*
     j[p4, 0, -1, n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (8*(-2 + d - n3)^2*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 
      126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((56 - 84*d + 42*d^2 - 7*d^3 + 80*n3 - 80*d*n3 + 20*d^2*n3 + 32*n3^2 - 
      16*d*n3^2 + 4*n3^3)*j[p4, 0, -1, n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    ((-2 + d)*(-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-5760 + 17760*d - 20960*d^2 + 11460*d^3 - 2700*d^4 + 175*d^5 - 
      10944*n3 + 24672*d*n3 - 18168*d^2*n3 + 4100*d^3*n3 + 140*d^4*n3 - 
      6976*n3^2 + 8080*d*n3^2 + 136*d^2*n3^2 - 1544*d^3*n3^2 - 608*n3^3 - 
      2736*d*n3^3 + 2336*d^2*n3^3 + 1120*n3^4 - 1424*d*n3^4 + 320*n3^5)*
     j[p4, 0, -1, n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0])/
    (8*(-2 + d - n3)^2*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 
      126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((56 - 56*d + 14*d^2 + 42*n3 - 21*d*n3 + 8*n3^2)*
     j[p4, 0, -1, n3, 0, 0, 1, 0, 1, 0, 2, 0, 0, 1, 1])/
    ((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-20 + 10*d - 6*n3)*j[p4, 0, -1, n3, 0, 0, 1, 0, 1, 0, 2, 1, 0, 0, 1])/
    (36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) + 
   ((16 - 16*d + 4*d^2 + 10*n3 - 5*d*n3 + 2*n3^2)*j[p4, 0, -1, n3, 0, 0, 1, 
      0, 2, 0, 1, 0, 0, 1, 1])/((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 
      18*d*n3 + 8*n3^2)) + ((16 - 16*d + 4*d^2 + 10*n3 - 5*d*n3 + 2*n3^2)*
     j[p4, 0, -1, n3, 0, 0, 1, 0, 2, 0, 1, 1, 0, 0, 1])/
    ((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-64 + 64*d - 16*d^2 - 34*n3 + 17*d*n3 - 4*n3^2)*
     j[p4, 0, -1, n3, 0, 0, 2, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-2 + d)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((16 - 16*d + 4*d^2 + 10*n3 - 5*d*n3 + 2*n3^2)*j[p4, 0, -1, n3, 0, 0, 2, 
      0, 1, 0, 0, 1, 0, 1, 1])/((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 
      18*d*n3 + 8*n3^2)) + ((-44 + 44*d - 11*d^2 - 28*n3 + 14*d*n3 - 4*n3^2)*
     j[p4, 0, -1, n3, 0, 0, 2, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((-2 + d)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((368 - 736*d + 552*d^2 - 184*d^3 + 23*d^4 + 432*n3 - 648*d*n3 + 
      324*d^2*n3 - 54*d^3*n3 + 104*n3^2 - 104*d*n3^2 + 26*d^2*n3^2 - 
      24*n3^3 + 12*d*n3^3 - 8*n3^4)*j[p4, 0, -1, n3, 0, 0, 2, 0, 1, 0, 1, 1, 
      0, 1, 0])/(2*(-2 + d)*(-2 + d - n3)^2*(36 - 36*d + 9*d^2 + 36*n3 - 
      18*d*n3 + 8*n3^2)) + ((16*n3 - 16*d*n3 + 4*d^2*n3 + 10*n3^2 - 
      5*d*n3^2 + 2*n3^3)*j[p4, 0, -1, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 
      1])/((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-14*n3 + 7*d*n3 - 2*n3^2)*j[p4, 0, -1, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 
      0, 1, 0])/(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) + 
   ((14560 - 43760*d + 49340*d^2 - 25160*d^3 + 5305*d^4 - 250*d^5 + 
      25184*n3 - 50592*d*n3 + 30280*d^2*n3 - 3054*d^3*n3 - 1365*d^4*n3 + 
      9424*n3^2 - 1488*d*n3^2 - 11968*d^2*n3^2 + 5702*d^3*n3^2 - 5248*n3^3 + 
      14072*d*n3^3 - 7140*d^2*n3^3 - 4208*n3^4 + 3784*d*n3^4 - 736*n3^5)*
     j[p4, 0, 0, -2 + n3, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 2])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((5760 - 17760*d + 20960*d^2 - 11460*d^3 + 2700*d^4 - 175*d^5 + 10944*n3 - 
      24672*d*n3 + 18168*d^2*n3 - 4100*d^3*n3 - 140*d^4*n3 + 6976*n3^2 - 
      8080*d*n3^2 - 136*d^2*n3^2 + 1544*d^3*n3^2 + 608*n3^3 + 2736*d*n3^3 - 
      2336*d^2*n3^3 - 1120*n3^4 + 1424*d*n3^4 - 320*n3^5)*
     j[p4, 0, 0, -2 + n3, 0, 0, 0, 0, 1, 0, 2, 1, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((14560 - 43760*d + 49340*d^2 - 25160*d^3 + 5305*d^4 - 250*d^5 + 
      25184*n3 - 50592*d*n3 + 30280*d^2*n3 - 3054*d^3*n3 - 1365*d^4*n3 + 
      9424*n3^2 - 1488*d*n3^2 - 11968*d^2*n3^2 + 5702*d^3*n3^2 - 5248*n3^3 + 
      14072*d*n3^3 - 7140*d^2*n3^3 - 4208*n3^4 + 3784*d*n3^4 - 736*n3^5)*
     j[p4, 0, 0, -2 + n3, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 2])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-19520 + 55680*d - 51640*d^2 + 6860*d^3 + 16630*d^4 - 9695*d^5 + 
      1625*d^6 - 9408*n3 - 29792*d*n3 + 124448*d^2*n3 - 139092*d^3*n3 + 
      63976*d^4*n3 - 10615*d^5*n3 + 46240*n3^2 - 183504*d*n3^2 + 
      240656*d^2*n3^2 - 129372*d^3*n3^2 + 24602*d^4*n3^2 + 64832*n3^3 - 
      154192*d*n3^3 + 115696*d^2*n3^3 - 27660*d^3*n3^3 + 33632*n3^4 - 
      47744*d*n3^4 + 16232*d^2*n3^4 + 7360*n3^5 - 4704*d*n3^5 + 512*n3^6)*
     j[p4, 0, 0, -2 + n3, 0, 0, 1, 0, 0, 0, 1, 1, 0, 2, 1])/
    (8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-28480 + 107520*d - 164600*d^2 + 129020*d^3 - 53270*d^4 + 10425*d^5 - 
      650*d^6 - 65472*n3 + 195552*d*n3 - 219424*d^2*n3 + 109676*d^3*n3 - 
      20940*d^4*n3 + 255*d^5*n3 - 57312*n3^2 + 118640*d*n3^2 - 
      72176*d^2*n3^2 + 5396*d^3*n3^2 + 4522*d^4*n3^2 - 19392*n3^3 + 
      11568*d*n3^3 + 15696*d^2*n3^3 - 9788*d^3*n3^3 + 2592*n3^4 - 
      13888*d*n3^4 + 8792*d^2*n3^4 + 3456*n3^5 - 3776*d*n3^5 + 640*n3^6)*
     j[p4, 0, 0, -2 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    (8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-1600 + 4000*d - 3700*d^2 + 1500*d^3 - 225*d^4 - 2560*n3 + 4720*d*n3 - 
      2860*d^2*n3 + 570*d^3*n3 - 1488*n3^2 + 1792*d*n3^2 - 532*d^2*n3^2 - 
      368*n3^3 + 216*d*n3^3 - 32*n3^4)*j[p4, 0, 0, -2 + n3, 0, 0, 1, 0, 1, 0, 
      1, 1, 0, 1, 1])/(8*(-6 + 5*d - 4*n3)*(-2 + d - n3)^2*(-1 + n3)) + 
   ((-8000 + 18880*d - 11960*d^2 - 2620*d^3 + 4890*d^4 - 1225*d^5 - 4480*n3 - 
      11488*d*n3 + 38792*d^2*n3 - 30672*d^3*n3 + 7450*d^4*n3 + 16288*n3^2 - 
      55632*d*n3^2 + 53704*d^2*n3^2 - 15716*d^3*n3^2 + 20960*n3^3 - 
      36960*d*n3^3 + 15352*d^2*n3^3 + 8896*n3^4 - 7136*d*n3^4 + 1280*n3^5)*
     j[p4, 0, 0, -2 + n3, 0, 0, 1, 0, 1, 0, 2, 0, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((6560 - 24880*d + 37380*d^2 - 27780*d^3 + 10195*d^4 - 1475*d^5 + 
      20704*n3 - 62080*d*n3 + 69072*d^2*n3 - 33726*d^3*n3 + 6085*d^4*n3 + 
      25712*n3^2 - 57120*d*n3^2 + 41736*d^2*n3^2 - 10014*d^3*n3^2 + 
      15712*n3^3 - 22888*d*n3^3 + 8212*d^2*n3^3 + 4688*n3^4 - 3352*d*n3^4 + 
      544*n3^5)*j[p4, 0, 0, -2 + n3, 0, 0, 2, 0, 0, 0, 1, 1, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-14560 + 43760*d - 49340*d^2 + 25160*d^3 - 5305*d^4 + 250*d^5 - 
      25184*n3 + 50592*d*n3 - 30280*d^2*n3 + 3054*d^3*n3 + 1365*d^4*n3 - 
      9424*n3^2 + 1488*d*n3^2 + 11968*d^2*n3^2 - 5702*d^3*n3^2 + 5248*n3^3 - 
      14072*d*n3^3 + 7140*d^2*n3^3 + 4208*n3^4 - 3784*d*n3^4 + 736*n3^5)*
     j[p4, 0, 0, -1 + n3, -1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 2])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-14560 + 43760*d - 49340*d^2 + 25160*d^3 - 5305*d^4 + 250*d^5 - 
      25184*n3 + 50592*d*n3 - 30280*d^2*n3 + 3054*d^3*n3 + 1365*d^4*n3 - 
      9424*n3^2 + 1488*d*n3^2 + 11968*d^2*n3^2 - 5702*d^3*n3^2 + 5248*n3^3 - 
      14072*d*n3^3 + 7140*d^2*n3^3 + 4208*n3^4 - 3784*d*n3^4 + 736*n3^5)*
     j[p4, 0, 0, -1 + n3, -1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 2])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-8000 + 28000*d - 38760*d^2 + 25760*d^3 - 7410*d^4 + 160*d^5 + 225*d^6 - 
      14720*n3 + 38240*d*n3 - 31464*d^2*n3 + 3572*d^3*n3 + 6272*d^4*n3 - 
      2050*d^5*n3 - 9248*n3^2 + 8672*d*n3^2 + 13552*d^2*n3^2 - 
      18856*d^3*n3^2 + 5746*d^4*n3^2 + 864*n3^3 - 14960*d*n3^3 + 
      21272*d^2*n3^3 - 7740*d^3*n3^3 + 4448*n3^4 - 10912*d*n3^4 + 
      5592*d^2*n3^4 + 2144*n3^5 - 2096*d*n3^5 + 320*n3^6)*
     j[p4, 0, 0, -1 + n3, -1, 0, 1, 0, 0, 0, 1, 2, 0, 1, 1])/
    (4*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-14560 + 43760*d - 49340*d^2 + 25160*d^3 - 5305*d^4 + 250*d^5 - 
      25184*n3 + 50592*d*n3 - 30280*d^2*n3 + 3054*d^3*n3 + 1365*d^4*n3 - 
      9424*n3^2 + 1488*d*n3^2 + 11968*d^2*n3^2 - 5702*d^3*n3^2 + 5248*n3^3 - 
      14072*d*n3^3 + 7140*d^2*n3^3 + 4208*n3^4 - 3784*d*n3^4 + 736*n3^5)*
     j[p4, 0, 0, -1 + n3, -1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((5760 - 17760*d + 20960*d^2 - 11460*d^3 + 2700*d^4 - 175*d^5 + 10944*n3 - 
      24672*d*n3 + 18168*d^2*n3 - 4100*d^3*n3 - 140*d^4*n3 + 6976*n3^2 - 
      8080*d*n3^2 - 136*d^2*n3^2 + 1544*d^3*n3^2 + 608*n3^3 + 2736*d*n3^3 - 
      2336*d^2*n3^3 - 1120*n3^4 + 1424*d*n3^4 - 320*n3^5)*
     j[p4, 0, 0, -1 + n3, -1, 0, 1, 0, 2, 0, 1, 0, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((5760 - 17760*d + 20960*d^2 - 11460*d^3 + 2700*d^4 - 175*d^5 + 10944*n3 - 
      24672*d*n3 + 18168*d^2*n3 - 4100*d^3*n3 - 140*d^4*n3 + 6976*n3^2 - 
      8080*d*n3^2 - 136*d^2*n3^2 + 1544*d^3*n3^2 + 608*n3^3 + 2736*d*n3^3 - 
      2336*d^2*n3^3 - 1120*n3^4 + 1424*d*n3^4 - 320*n3^5)*
     j[p4, 0, 0, -1 + n3, -1, 0, 1, 0, 2, 0, 1, 1, 0, 0, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-6560 + 24880*d - 37380*d^2 + 27780*d^3 - 10195*d^4 + 1475*d^5 - 
      20704*n3 + 62080*d*n3 - 69072*d^2*n3 + 33726*d^3*n3 - 6085*d^4*n3 - 
      25712*n3^2 + 57120*d*n3^2 - 41736*d^2*n3^2 + 10014*d^3*n3^2 - 
      15712*n3^3 + 22888*d*n3^3 - 8212*d^2*n3^3 - 4688*n3^4 + 3352*d*n3^4 - 
      544*n3^5)*j[p4, 0, 0, -1 + n3, -1, 0, 2, 0, 0, 0, 1, 1, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((10 - 5*d + 4*n3)*j[p4, 0, 0, -1 + n3, -1, 0, 2, 0, 0, 0, 1, 2, 0, 1, 1])/
    (2*(-2 + d - n3)^2*(-1 + n3)) + 
   ((-11840 + 36480*d - 43160*d^2 + 24180*d^3 - 6270*d^4 + 575*d^5 - 
      22016*n3 + 49184*d*n3 - 37752*d^2*n3 + 11056*d^3*n3 - 830*d^4*n3 - 
      12512*n3^2 + 15728*d*n3^2 - 3736*d^2*n3^2 - 724*d^3*n3^2 - 800*n3^3 - 
      2400*d*n3^3 + 1976*d^2*n3^3 + 1216*n3^4 - 1248*d*n3^4 + 256*n3^5)*
     j[p4, 0, 0, -1 + n3, -1, 0, 2, 0, 1, 0, 0, 1, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-6560 + 24880*d - 37380*d^2 + 27780*d^3 - 10195*d^4 + 1475*d^5 - 
      20704*n3 + 62080*d*n3 - 69072*d^2*n3 + 33726*d^3*n3 - 6085*d^4*n3 - 
      25712*n3^2 + 57120*d*n3^2 - 41736*d^2*n3^2 + 10014*d^3*n3^2 - 
      15712*n3^3 + 22888*d*n3^3 - 8212*d^2*n3^3 - 4688*n3^4 + 3352*d*n3^4 - 
      544*n3^5)*j[p4, 0, 0, -1 + n3, -1, 0, 2, 0, 1, 0, 1, 1, 0, 0, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-6560 + 24880*d - 37380*d^2 + 27780*d^3 - 10195*d^4 + 1475*d^5 - 
      20704*n3 + 62080*d*n3 - 69072*d^2*n3 + 33726*d^3*n3 - 6085*d^4*n3 - 
      25712*n3^2 + 57120*d*n3^2 - 41736*d^2*n3^2 + 10014*d^3*n3^2 - 
      15712*n3^3 + 22888*d*n3^3 - 8212*d^2*n3^3 - 4688*n3^4 + 3352*d*n3^4 - 
      544*n3^5)*j[p4, 0, 0, -1 + n3, -1, 0, 2, 0, 1, 0, 1, 1, 0, 1, 0])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((10 - 5*d + 4*n3)*j[p4, 0, 0, -1 + n3, -1, 0, 2, 0, 2, 0, 1, 0, 0, 1, 1])/
    (2*(-2 + d - n3)^2*(-1 + n3)) + 
   ((-160 - 1360*d + 5540*d^2 - 7340*d^3 + 4375*d^4 - 1155*d^5 + 100*d^6 + 
      3776*n3 - 17296*d*n3 + 27068*d^2*n3 - 18322*d^3*n3 + 5154*d^4*n3 - 
      405*d^5*n3 + 9616*n3^2 - 26560*d*n3^2 + 23656*d^2*n3^2 - 
      7192*d^3*n3^2 + 295*d^4*n3^2 + 7472*n3^3 - 11240*d*n3^3 + 
      3164*d^2*n3^3 + 662*d^3*n3^3 + 1456*n3^4 + 528*d*n3^4 - 1252*d^2*n3^4 - 
      496*n3^5 + 760*d*n3^5 - 160*n3^6)*j[p4, 0, 0, -1 + n3, 0, -1, 0, 0, 1, 
      0, 1, 1, 0, 1, 2])/(2*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*
     (-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 126*d^2*n3 - 
      128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-160 - 1360*d + 5540*d^2 - 7340*d^3 + 4375*d^4 - 1155*d^5 + 100*d^6 + 
      3776*n3 - 17296*d*n3 + 27068*d^2*n3 - 18322*d^3*n3 + 5154*d^4*n3 - 
      405*d^5*n3 + 9616*n3^2 - 26560*d*n3^2 + 23656*d^2*n3^2 - 
      7192*d^3*n3^2 + 295*d^4*n3^2 + 7472*n3^3 - 11240*d*n3^3 + 
      3164*d^2*n3^3 + 662*d^3*n3^3 + 1456*n3^4 + 528*d*n3^4 - 1252*d^2*n3^4 - 
      496*n3^5 + 760*d*n3^5 - 160*n3^6)*j[p4, 0, 0, -1 + n3, 0, -1, 1, 0, 0, 
      0, 1, 1, 0, 1, 2])/(2*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*
     (-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 126*d^2*n3 - 
      128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-1760 + 6640*d - 10460*d^2 + 9060*d^3 - 4725*d^4 + 1445*d^5 - 200*d^6 - 
      3584*n3 + 11024*d*n3 - 14772*d^2*n3 + 11398*d^3*n3 - 5046*d^4*n3 + 
      955*d^5*n3 - 2352*n3^2 + 7232*d*n3^2 - 10680*d^2*n3^2 + 7816*d^3*n3^2 - 
      2101*d^4*n3^2 - 1040*n3^3 + 5048*d*n3^3 - 6932*d^2*n3^3 + 
      2702*d^3*n3^3 - 1104*n3^4 + 3472*d*n3^4 - 2084*d^2*n3^4 - 752*n3^5 + 
      888*d*n3^5 - 160*n3^6)*j[p4, 0, 0, -1 + n3, 0, -1, 1, 0, 0, 0, 1, 1, 0, 
      2, 1])/(2*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 
      45*d^3 - 152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 
      32*n3^3)) + ((8000 - 28000*d + 38760*d^2 - 25760*d^3 + 7410*d^4 - 
      160*d^5 - 225*d^6 + 14720*n3 - 38240*d*n3 + 31464*d^2*n3 - 
      3572*d^3*n3 - 6272*d^4*n3 + 2050*d^5*n3 + 9248*n3^2 - 8672*d*n3^2 - 
      13552*d^2*n3^2 + 18856*d^3*n3^2 - 5746*d^4*n3^2 - 864*n3^3 + 
      14960*d*n3^3 - 21272*d^2*n3^3 + 7740*d^3*n3^3 - 4448*n3^4 + 
      10912*d*n3^4 - 5592*d^2*n3^4 - 2144*n3^5 + 2096*d*n3^5 - 320*n3^6)*
     j[p4, 0, 0, -1 + n3, 0, -1, 1, 0, 0, 0, 1, 2, 0, 1, 1])/
    (4*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-160 - 1360*d + 5540*d^2 - 7340*d^3 + 4375*d^4 - 1155*d^5 + 100*d^6 + 
      3776*n3 - 17296*d*n3 + 27068*d^2*n3 - 18322*d^3*n3 + 5154*d^4*n3 - 
      405*d^5*n3 + 9616*n3^2 - 26560*d*n3^2 + 23656*d^2*n3^2 - 
      7192*d^3*n3^2 + 295*d^4*n3^2 + 7472*n3^3 - 11240*d*n3^3 + 
      3164*d^2*n3^3 + 662*d^3*n3^3 + 1456*n3^4 + 528*d*n3^4 - 1252*d^2*n3^4 - 
      496*n3^5 + 760*d*n3^5 - 160*n3^6)*j[p4, 0, 0, -1 + n3, 0, -1, 1, 0, 1, 
      0, 1, 1, 0, 0, 2])/(2*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*
     (-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 126*d^2*n3 - 
      128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((4480 - 12800*d + 10000*d^2 + 4520*d^3 - 11080*d^4 + 5970*d^5 - 
      1075*d^6 + 3712*n3 + 6336*d*n3 - 42432*d^2*n3 + 58552*d^3*n3 - 
      32556*d^4*n3 + 6480*d^5*n3 - 9152*n3^2 + 53408*d*n3^2 - 
      92704*d^2*n3^2 + 63928*d^3*n3^2 - 15316*d^4*n3^2 - 18048*n3^3 + 
      58976*d*n3^3 - 59264*d^2*n3^3 + 18616*d^3*n3^3 - 13312*n3^4 + 
      26560*d*n3^4 - 12448*d^2*n3^4 - 4672*n3^5 + 4384*d*n3^5 - 640*n3^6)*
     j[p4, 0, 0, -1 + n3, 0, -1, 2, 0, 0, 0, 1, 1, 0, 1, 1])/
    (8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-10 + 5*d - 4*n3)*j[p4, 0, 0, -1 + n3, 0, -1, 2, 0, 0, 0, 1, 2, 0, 1, 
      1])/(2*(-2 + d - n3)^2*(-1 + n3)) + 
   ((2560 - 4320*d - 400*d^2 + 4580*d^3 - 2960*d^4 + 575*d^5 - 1856*n3 + 
      14304*d*n3 - 23848*d^2*n3 + 14668*d^3*n3 - 3060*d^4*n3 - 10112*n3^2 + 
      27152*d*n3^2 - 22296*d^2*n3^2 + 5760*d^3*n3^2 - 8864*n3^3 + 
      13616*d*n3^3 - 5024*d^2*n3^3 - 2912*n3^4 + 2064*d*n3^4 - 320*n3^5)*
     j[p4, 0, 0, -1 + n3, 0, -1, 2, 0, 1, 0, 0, 1, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((4480 - 12800*d + 10000*d^2 + 4520*d^3 - 11080*d^4 + 5970*d^5 - 
      1075*d^6 + 3712*n3 + 6336*d*n3 - 42432*d^2*n3 + 58552*d^3*n3 - 
      32556*d^4*n3 + 6480*d^5*n3 - 9152*n3^2 + 53408*d*n3^2 - 
      92704*d^2*n3^2 + 63928*d^3*n3^2 - 15316*d^4*n3^2 - 18048*n3^3 + 
      58976*d*n3^3 - 59264*d^2*n3^3 + 18616*d^3*n3^3 - 13312*n3^4 + 
      26560*d*n3^4 - 12448*d^2*n3^4 - 4672*n3^5 + 4384*d*n3^5 - 640*n3^6)*
     j[p4, 0, 0, -1 + n3, 0, -1, 2, 0, 1, 0, 1, 1, 0, 0, 1])/
    (8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((4480 - 12800*d + 10000*d^2 + 4520*d^3 - 11080*d^4 + 5970*d^5 - 
      1075*d^6 + 3712*n3 + 6336*d*n3 - 42432*d^2*n3 + 58552*d^3*n3 - 
      32556*d^4*n3 + 6480*d^5*n3 - 9152*n3^2 + 53408*d*n3^2 - 
      92704*d^2*n3^2 + 63928*d^3*n3^2 - 15316*d^4*n3^2 - 18048*n3^3 + 
      58976*d*n3^3 - 59264*d^2*n3^3 + 18616*d^3*n3^3 - 13312*n3^4 + 
      26560*d*n3^4 - 12448*d^2*n3^4 - 4672*n3^5 + 4384*d*n3^5 - 640*n3^6)*
     j[p4, 0, 0, -1 + n3, 0, -1, 2, 0, 1, 0, 1, 1, 0, 1, 0])/
    (8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-5760 + 17760*d - 20960*d^2 + 11460*d^3 - 2700*d^4 + 175*d^5 - 
      10944*n3 + 24672*d*n3 - 18168*d^2*n3 + 4100*d^3*n3 + 140*d^4*n3 - 
      6976*n3^2 + 8080*d*n3^2 + 136*d^2*n3^2 - 1544*d^3*n3^2 - 608*n3^3 - 
      2736*d*n3^3 + 2336*d^2*n3^3 + 1120*n3^4 - 1424*d*n3^4 + 320*n3^5)*
     j[p4, 0, 0, -1 + n3, 0, 0, 0, -1, 1, 0, 2, 1, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-51520 + 190080*d - 283960*d^2 + 216780*d^3 - 86990*d^4 + 16525*d^5 - 
      1000*d^6 - 109248*n3 + 316128*d*n3 - 341440*d^2*n3 + 162412*d^3*n3 - 
      28580*d^4*n3 - 25*d^5*n3 - 85216*n3^2 + 164912*d*n3^2 - 
      87792*d^2*n3^2 - 1052*d^3*n3^2 + 7610*d^4*n3^2 - 21824*n3^3 + 
      1840*d*n3^3 + 30512*d^2*n3^3 - 14460*d^3*n3^3 + 7072*n3^4 - 
      21824*d*n3^4 + 11640*d^2*n3^4 + 4736*n3^5 - 4416*d*n3^5 + 640*n3^6)*
     j[p4, 0, 0, -1 + n3, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1])/
    (8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-56 + 84*d - 42*d^2 + 7*d^3 - 120*n3 + 120*d*n3 - 30*d^2*n3 - 64*n3^2 + 
      32*d*n3^2 - 10*n3^3)*j[p4, 0, 0, -1 + n3, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 
      2])/(2*(-2 + d - n3)^2*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 
      8*n3^2)) + ((4480 - 14720*d + 17840*d^2 - 7640*d^3 - 2040*d^4 + 
      2730*d^5 - 625*d^6 + 7552*n3 - 16192*d*n3 + 1920*d^2*n3 + 
      19224*d^3*n3 - 16364*d^4*n3 + 3960*d^5*n3 + 4544*n3^2 + 5792*d*n3^2 - 
      34912*d^2*n3^2 + 34488*d^3*n3^2 - 9948*d^4*n3^2 - 2944*n3^3 + 
      25056*d*n3^3 - 35136*d^2*n3^3 + 13144*d^3*n3^3 - 6656*n3^4 + 
      17856*d*n3^4 - 9760*d^2*n3^4 - 3648*n3^5 + 3872*d*n3^5 - 640*n3^6)*
     j[p4, 0, 0, -1 + n3, 0, 0, 0, 0, 1, 0, 1, 2, -1, 1, 1])/
    (8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-4480 + 14720*d - 17840*d^2 + 7640*d^3 + 2040*d^4 - 2730*d^5 + 625*d^6 - 
      7552*n3 + 16192*d*n3 - 1920*d^2*n3 - 19224*d^3*n3 + 16364*d^4*n3 - 
      3960*d^5*n3 - 4544*n3^2 - 5792*d*n3^2 + 34912*d^2*n3^2 - 
      34488*d^3*n3^2 + 9948*d^4*n3^2 + 2944*n3^3 - 25056*d*n3^3 + 
      35136*d^2*n3^3 - 13144*d^3*n3^3 + 6656*n3^4 - 17856*d*n3^4 + 
      9760*d^2*n3^4 + 3648*n3^5 - 3872*d*n3^5 + 640*n3^6)*
     j[p4, 0, 0, -1 + n3, 0, 0, 0, 0, 1, 0, 1, 2, 0, 1, 1])/
    (8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((5760 - 17760*d + 20960*d^2 - 11460*d^3 + 2700*d^4 - 175*d^5 + 10944*n3 - 
      24672*d*n3 + 18168*d^2*n3 - 4100*d^3*n3 - 140*d^4*n3 + 6976*n3^2 - 
      8080*d*n3^2 - 136*d^2*n3^2 + 1544*d^3*n3^2 + 608*n3^3 + 2736*d*n3^3 - 
      2336*d^2*n3^3 - 1120*n3^4 + 1424*d*n3^4 - 320*n3^5)*
     j[p4, 0, 0, -1 + n3, 0, 0, 0, 0, 1, 0, 2, 1, -1, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-185856 + 748160*d - 1265664*d^2 + 1157616*d^3 - 611488*d^4 + 
      183456*d^5 - 28080*d^6 + 1575*d^7 - 530176*n3 + 1795840*d*n3 - 
      2443744*d^2*n3 + 1679904*d^3*n3 - 596976*d^4*n3 + 97128*d^5*n3 - 
      4410*d^6*n3 - 640256*n3^2 + 1709568*d*n3^2 - 1681952*d^2*n3^2 + 
      715776*d^3*n3^2 - 106680*d^4*n3^2 - 2200*d^5*n3^2 - 396800*n3^3 + 
      715456*d*n3^3 - 359136*d^2*n3^3 + 3856*d^3*n3^3 + 23576*d^4*n3^3 - 
      103424*n3^4 + 43072*d*n3^4 + 78144*d^2*n3^4 - 39280*d^3*n3^4 + 
      13312*n3^5 - 57600*d*n3^5 + 31232*d^2*n3^5 + 13312*n3^6 - 
      12544*d*n3^6 + 2048*n3^7)*j[p4, 0, 0, -1 + n3, 0, 0, 0, 0, 1, 0, 2, 1, 
      0, 1, 1])/(8*(-2 + d - n3)^2*(-1 + n3)*(36 - 36*d + 9*d^2 + 36*n3 - 
      18*d*n3 + 8*n3^2)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 
      126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-5760 + 17760*d - 20960*d^2 + 11460*d^3 - 2700*d^4 + 175*d^5 - 
      10944*n3 + 24672*d*n3 - 18168*d^2*n3 + 4100*d^3*n3 + 140*d^4*n3 - 
      6976*n3^2 + 8080*d*n3^2 + 136*d^2*n3^2 - 1544*d^3*n3^2 - 608*n3^3 - 
      2736*d*n3^3 + 2336*d^2*n3^3 + 1120*n3^4 - 1424*d*n3^4 + 320*n3^5)*
     j[p4, 0, 0, -1 + n3, 0, 0, 0, 0, 2, 0, 1, 1, -1, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((19520 - 55680*d + 51640*d^2 - 6860*d^3 - 16630*d^4 + 9695*d^5 - 
      1625*d^6 + 9408*n3 + 29792*d*n3 - 124448*d^2*n3 + 139092*d^3*n3 - 
      63976*d^4*n3 + 10615*d^5*n3 - 46240*n3^2 + 183504*d*n3^2 - 
      240656*d^2*n3^2 + 129372*d^3*n3^2 - 24602*d^4*n3^2 - 64832*n3^3 + 
      154192*d*n3^3 - 115696*d^2*n3^3 + 27660*d^3*n3^3 - 33632*n3^4 + 
      47744*d*n3^4 - 16232*d^2*n3^4 - 7360*n3^5 + 4704*d*n3^5 - 512*n3^6)*
     j[p4, 0, 0, -1 + n3, 0, 0, 1, -1, 0, 0, 1, 1, 0, 2, 1])/
    (8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-1120 + 1680*d + 1140*d^2 - 3420*d^3 + 2135*d^4 - 425*d^5 + 992*n3 - 
      8352*d*n3 + 14960*d^2*n3 - 9878*d^3*n3 + 2205*d^4*n3 + 5616*n3^2 - 
      16672*d*n3^2 + 15016*d^2*n3^2 - 4222*d^3*n3^2 + 5536*n3^3 - 
      9448*d*n3^3 + 3844*d^2*n3^3 + 2128*n3^4 - 1688*d*n3^4 + 288*n3^5)*
     j[p4, 0, 0, -1 + n3, 0, 0, 1, -1, 0, 0, 1, 2, 0, 1, 1])/
    (8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(24 - 38*d + 15*d^2 + 28*n3 - 
      22*d*n3 + 8*n3^2)) + ((8000 - 18880*d + 11960*d^2 + 2620*d^3 - 
      4890*d^4 + 1225*d^5 + 4480*n3 + 11488*d*n3 - 38792*d^2*n3 + 
      30672*d^3*n3 - 7450*d^4*n3 - 16288*n3^2 + 55632*d*n3^2 - 
      53704*d^2*n3^2 + 15716*d^3*n3^2 - 20960*n3^3 + 36960*d*n3^3 - 
      15352*d^2*n3^3 - 8896*n3^4 + 7136*d*n3^4 - 1280*n3^5)*
     j[p4, 0, 0, -1 + n3, 0, 0, 1, -1, 0, 0, 2, 1, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-160 - 1360*d + 5540*d^2 - 7340*d^3 + 4375*d^4 - 1155*d^5 + 100*d^6 + 
      3776*n3 - 17296*d*n3 + 27068*d^2*n3 - 18322*d^3*n3 + 5154*d^4*n3 - 
      405*d^5*n3 + 9616*n3^2 - 26560*d*n3^2 + 23656*d^2*n3^2 - 
      7192*d^3*n3^2 + 295*d^4*n3^2 + 7472*n3^3 - 11240*d*n3^3 + 
      3164*d^2*n3^3 + 662*d^3*n3^3 + 1456*n3^4 + 528*d*n3^4 - 1252*d^2*n3^4 - 
      496*n3^5 + 760*d*n3^5 - 160*n3^6)*j[p4, 0, 0, -1 + n3, 0, 0, 1, -1, 1, 
      0, 1, 1, 0, 0, 2])/(2*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*
     (-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 126*d^2*n3 - 
      128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((8000 - 18880*d + 11960*d^2 + 2620*d^3 - 4890*d^4 + 1225*d^5 + 4480*n3 + 
      11488*d*n3 - 38792*d^2*n3 + 30672*d^3*n3 - 7450*d^4*n3 - 16288*n3^2 + 
      55632*d*n3^2 - 53704*d^2*n3^2 + 15716*d^3*n3^2 - 20960*n3^3 + 
      36960*d*n3^3 - 15352*d^2*n3^3 - 8896*n3^4 + 7136*d*n3^4 - 1280*n3^5)*
     j[p4, 0, 0, -1 + n3, 0, 0, 1, -1, 1, 0, 2, 0, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((8000 - 18880*d + 11960*d^2 + 2620*d^3 - 4890*d^4 + 1225*d^5 + 4480*n3 + 
      11488*d*n3 - 38792*d^2*n3 + 30672*d^3*n3 - 7450*d^4*n3 - 16288*n3^2 + 
      55632*d*n3^2 - 53704*d^2*n3^2 + 15716*d^3*n3^2 - 20960*n3^3 + 
      36960*d*n3^3 - 15352*d^2*n3^3 - 8896*n3^4 + 7136*d*n3^4 - 1280*n3^5)*
     j[p4, 0, 0, -1 + n3, 0, 0, 1, -1, 1, 0, 2, 1, 0, 0, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((2560 - 4320*d - 400*d^2 + 4580*d^3 - 2960*d^4 + 575*d^5 - 1856*n3 + 
      14304*d*n3 - 23848*d^2*n3 + 14668*d^3*n3 - 3060*d^4*n3 - 10112*n3^2 + 
      27152*d*n3^2 - 22296*d^2*n3^2 + 5760*d^3*n3^2 - 8864*n3^3 + 
      13616*d*n3^3 - 5024*d^2*n3^3 - 2912*n3^4 + 2064*d*n3^4 - 320*n3^5)*
     j[p4, 0, 0, -1 + n3, 0, 0, 1, -1, 2, 0, 1, 0, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((2560 - 4320*d - 400*d^2 + 4580*d^3 - 2960*d^4 + 575*d^5 - 1856*n3 + 
      14304*d*n3 - 23848*d^2*n3 + 14668*d^3*n3 - 3060*d^4*n3 - 10112*n3^2 + 
      27152*d*n3^2 - 22296*d^2*n3^2 + 5760*d^3*n3^2 - 8864*n3^3 + 
      13616*d*n3^3 - 5024*d^2*n3^3 - 2912*n3^4 + 2064*d*n3^4 - 320*n3^5)*
     j[p4, 0, 0, -1 + n3, 0, 0, 1, -1, 2, 0, 1, 1, 0, 0, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-8000 + 28000*d - 38760*d^2 + 25760*d^3 - 7410*d^4 + 160*d^5 + 225*d^6 - 
      14720*n3 + 38240*d*n3 - 31464*d^2*n3 + 3572*d^3*n3 + 6272*d^4*n3 - 
      2050*d^5*n3 - 9248*n3^2 + 8672*d*n3^2 + 13552*d^2*n3^2 - 
      18856*d^3*n3^2 + 5746*d^4*n3^2 + 864*n3^3 - 14960*d*n3^3 + 
      21272*d^2*n3^3 - 7740*d^3*n3^3 + 4448*n3^4 - 10912*d*n3^4 + 
      5592*d^2*n3^4 + 2144*n3^5 - 2096*d*n3^5 + 320*n3^6)*
     j[p4, 0, 0, -1 + n3, 0, 0, 1, 0, 0, -1, 1, 2, 0, 1, 1])/
    (4*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-5760 + 17760*d - 20960*d^2 + 11460*d^3 - 2700*d^4 + 175*d^5 - 
      10944*n3 + 24672*d*n3 - 18168*d^2*n3 + 4100*d^3*n3 + 140*d^4*n3 - 
      6976*n3^2 + 8080*d*n3^2 + 136*d^2*n3^2 - 1544*d^3*n3^2 - 608*n3^3 - 
      2736*d*n3^3 + 2336*d^2*n3^3 + 1120*n3^4 - 1424*d*n3^4 + 320*n3^5)*
     j[p4, 0, 0, -1 + n3, 0, 0, 1, 0, 0, -1, 2, 1, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((137920 - 464000*d + 618280*d^2 - 409060*d^3 + 136010*d^4 - 19335*d^5 + 
      500*d^6 + 146368*n3 - 282976*d*n3 + 115504*d^2*n3 + 80188*d^3*n3 - 
      70052*d^4*n3 + 13455*d^5*n3 + 75*d^6*n3 - 36960*n3^2 + 223536*d*n3^2 - 
      304352*d^2*n3^2 + 138588*d^3*n3^2 - 10434*d^4*n3^2 - 3990*d^5*n3^2 - 
      80256*n3^3 + 145584*d*n3^3 - 46832*d^2*n3^3 - 25788*d^3*n3^3 + 
      10684*d^4*n3^3 - 13472*n3^4 - 17952*d*n3^4 + 36424*d^2*n3^4 - 
      10792*d^3*n3^4 + 8192*n3^5 - 15680*d*n3^5 + 4768*d^2*n3^5 + 2176*n3^6 - 
      768*d*n3^6)*j[p4, 0, 0, -1 + n3, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-56 + 84*d - 42*d^2 + 7*d^3 - 120*n3 + 120*d*n3 - 30*d^2*n3 - 64*n3^2 + 
      32*d*n3^2 - 10*n3^3)*j[p4, 0, 0, -1 + n3, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 
      2])/(2*(-2 + d - n3)^2*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 
      8*n3^2)) + ((272 - 408*d + 204*d^2 - 34*d^3 + 304*n3 - 304*d*n3 + 
      76*d^2*n3 + 118*n3^2 - 59*d*n3^2 + 16*n3^3)*j[p4, 0, 0, -1 + n3, 0, 0, 
      1, 0, 0, 0, 1, 1, 0, 2, 1])/((-2 + d)*(-2 + d - n3)*
     (36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-160 + 400*d - 260*d^2 + 25*d^4 - 64*n3 - 272*d*n3 + 580*d^2*n3 - 
      230*d^3*n3 + 400*n3^2 - 960*d*n3^2 + 468*d^2*n3^2 + 400*n3^3 - 
      360*d*n3^3 + 96*n3^4)*j[p4, 0, 0, -1 + n3, 0, 0, 1, 0, 0, 0, 1, 2, -1, 
      1, 1])/(8*(-2 + d - n3)^2*(-1 + n3)*(24 - 38*d + 15*d^2 + 28*n3 - 
      22*d*n3 + 8*n3^2)) + ((-800 + 1600*d - 1100*d^2 + 300*d^3 - 25*d^4 - 
      1440*n3 + 2320*d*n3 - 1260*d^2*n3 + 230*d^3*n3 - 1168*n3^2 + 
      1472*d*n3^2 - 468*d^2*n3^2 - 528*n3^3 + 360*d*n3^3 - 96*n3^4)*
     j[p4, 0, 0, -1 + n3, 0, 0, 1, 0, 0, 0, 1, 2, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(24 - 38*d + 15*d^2 + 28*n3 - 22*d*n3 + 
      8*n3^2)) + ((-2560 + 4320*d + 400*d^2 - 4580*d^3 + 2960*d^4 - 575*d^5 + 
      1856*n3 - 14304*d*n3 + 23848*d^2*n3 - 14668*d^3*n3 + 3060*d^4*n3 + 
      10112*n3^2 - 27152*d*n3^2 + 22296*d^2*n3^2 - 5760*d^3*n3^2 + 
      8864*n3^3 - 13616*d*n3^3 + 5024*d^2*n3^3 + 2912*n3^4 - 2064*d*n3^4 + 
      320*n3^5)*j[p4, 0, 0, -1 + n3, 0, 0, 1, 0, 1, -1, 1, 1, 0, 0, 2])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-5760 + 17760*d - 20960*d^2 + 11460*d^3 - 2700*d^4 + 175*d^5 - 
      10944*n3 + 24672*d*n3 - 18168*d^2*n3 + 4100*d^3*n3 + 140*d^4*n3 - 
      6976*n3^2 + 8080*d*n3^2 + 136*d^2*n3^2 - 1544*d^3*n3^2 - 608*n3^3 - 
      2736*d*n3^3 + 2336*d^2*n3^3 + 1120*n3^4 - 1424*d*n3^4 + 320*n3^5)*
     j[p4, 0, 0, -1 + n3, 0, 0, 1, 0, 1, -1, 2, 1, 0, 0, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((34560 - 99360*d + 106480*d^2 - 50660*d^3 + 9320*d^4 - 175*d^5 + 
      39424*n3 - 57952*d*n3 + 2816*d^2*n3 + 27304*d^3*n3 - 10870*d^4*n3 + 
      575*d^5*n3 - 10240*n3^2 + 63952*d*n3^2 - 75008*d^2*n3^2 + 
      25568*d^3*n3^2 - 830*d^4*n3^2 - 28032*n3^3 + 50496*d*n3^3 - 
      20072*d^2*n3^3 - 724*d^3*n3^3 - 10176*n3^4 + 5648*d*n3^4 + 
      1976*d^2*n3^4 - 256*n3^5 - 1248*d*n3^5 + 256*n3^6)*
     j[p4, 0, 0, -1 + n3, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-2880 + 3200*d + 11560*d^2 - 27460*d^3 + 22990*d^4 - 8635*d^5 + 
      1225*d^6 + 8768*n3 - 59616*d*n3 + 123456*d^2*n3 - 112276*d^3*n3 + 
      47008*d^4*n3 - 7415*d^5*n3 + 39968*n3^2 - 142224*d*n3^2 + 
      176720*d^2*n3^2 - 92332*d^3*n3^2 + 17298*d^4*n3^2 + 48320*n3^3 - 
      113232*d*n3^3 + 84624*d^2*n3^3 - 20300*d^3*n3^3 + 25568*n3^4 - 
      36736*d*n3^4 + 12744*d^2*n3^4 + 6080*n3^5 - 4064*d*n3^5 + 512*n3^6)*
     j[p4, 0, 0, -1 + n3, 0, 0, 1, 0, 1, 0, 0, 2, -1, 1, 1])/
    (8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((2880 - 3200*d - 11560*d^2 + 27460*d^3 - 22990*d^4 + 8635*d^5 - 
      1225*d^6 - 8768*n3 + 59616*d*n3 - 123456*d^2*n3 + 112276*d^3*n3 - 
      47008*d^4*n3 + 7415*d^5*n3 - 39968*n3^2 + 142224*d*n3^2 - 
      176720*d^2*n3^2 + 92332*d^3*n3^2 - 17298*d^4*n3^2 - 48320*n3^3 + 
      113232*d*n3^3 - 84624*d^2*n3^3 + 20300*d^3*n3^3 - 25568*n3^4 + 
      36736*d*n3^4 - 12744*d^2*n3^4 - 6080*n3^5 + 4064*d*n3^5 - 512*n3^6)*
     j[p4, 0, 0, -1 + n3, 0, 0, 1, 0, 1, 0, 0, 2, 0, 1, 1])/
    (8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-32000 + 95040*d - 106880*d^2 + 55240*d^3 - 12280*d^4 + 750*d^5 - 
      41280*n3 + 72256*d*n3 - 26664*d^2*n3 - 12636*d^3*n3 + 7810*d^4*n3 - 
      575*d^5*n3 + 128*n3^2 - 36800*d*n3^2 + 52712*d^2*n3^2 - 
      19808*d^3*n3^2 + 830*d^4*n3^2 + 19168*n3^3 - 36880*d*n3^3 + 
      15048*d^2*n3^3 + 724*d^3*n3^3 + 7264*n3^4 - 3584*d*n3^4 - 
      1976*d^2*n3^4 - 64*n3^5 + 1248*d*n3^5 - 256*n3^6)*
     j[p4, 0, 0, -1 + n3, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((160 + 1360*d - 5540*d^2 + 7340*d^3 - 4375*d^4 + 1155*d^5 - 100*d^6 - 
      3776*n3 + 17296*d*n3 - 27068*d^2*n3 + 18322*d^3*n3 - 5154*d^4*n3 + 
      405*d^5*n3 - 9616*n3^2 + 26560*d*n3^2 - 23656*d^2*n3^2 + 
      7192*d^3*n3^2 - 295*d^4*n3^2 - 7472*n3^3 + 11240*d*n3^3 - 
      3164*d^2*n3^3 - 662*d^3*n3^3 - 1456*n3^4 - 528*d*n3^4 + 1252*d^2*n3^4 + 
      496*n3^5 - 760*d*n3^5 + 160*n3^6)*j[p4, 0, 0, -1 + n3, 0, 0, 1, 0, 1, 
      0, 1, 1, -1, 0, 2])/(2*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*
     (-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 126*d^2*n3 - 
      128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((1760 - 6640*d + 10460*d^2 - 9060*d^3 + 4725*d^4 - 1445*d^5 + 200*d^6 + 
      3584*n3 - 11024*d*n3 + 14772*d^2*n3 - 11398*d^3*n3 + 5046*d^4*n3 - 
      955*d^5*n3 + 2352*n3^2 - 7232*d*n3^2 + 10680*d^2*n3^2 - 7816*d^3*n3^2 + 
      2101*d^4*n3^2 + 1040*n3^3 - 5048*d*n3^3 + 6932*d^2*n3^3 - 
      2702*d^3*n3^3 + 1104*n3^4 - 3472*d*n3^4 + 2084*d^2*n3^4 + 752*n3^5 - 
      888*d*n3^5 + 160*n3^6)*j[p4, 0, 0, -1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, -1, 
      2, 0])/(2*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 
      45*d^3 - 152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 
      32*n3^3)) + ((-14400 + 42560*d - 48760*d^2 + 26680*d^3 - 6770*d^4 + 
      600*d^5 - 15040*n3 + 27424*d*n3 - 11512*d^2*n3 - 4904*d^3*n3 + 
      4040*d^4*n3 - 575*d^5*n3 - 352*n3^2 - 13024*d*n3^2 + 23416*d^2*n3^2 - 
      12316*d^3*n3^2 + 1790*d^4*n3^2 + 7264*n3^3 - 19360*d*n3^3 + 
      13488*d^2*n3^3 - 2404*d^3*n3^3 + 5248*n3^4 - 6672*d*n3^4 + 
      1592*d^2*n3^4 + 1152*n3^5 - 416*d*n3^5)*j[p4, 0, 0, -1 + n3, 0, 0, 1, 
      0, 1, 0, 1, 1, 0, 0, 1])/(8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*
     (12 - 28*d + 15*d^2 + 32*n3 - 32*d*n3 + 16*n3^2)) + 
   ((-344064 + 1399552*d - 2279936*d^2 + 1810272*d^3 - 584144*d^4 - 
      116960*d^5 + 158328*d^6 - 48330*d^7 + 5175*d^8 - 627200*n3 + 
      1452544*d*n3 - 233664*d^2*n3 - 2324768*d^3*n3 + 2987968*d^4*n3 - 
      1652880*d^5*n3 + 443556*d^6*n3 - 47250*d^7*n3 + 284672*n3^2 - 
      2980736*d*n3^2 + 7515584*d^2*n3^2 - 8462624*d^3*n3^2 + 
      4886256*d^4*n3^2 - 1418976*d^5*n3^2 + 164728*d^6*n3^2 + 1553920*n3^3 - 
      6196032*d*n3^3 + 9226080*d^2*n3^3 - 6552048*d^3*n3^3 + 
      2246152*d^4*n3^3 - 299632*d^5*n3^3 + 1582208*n3^4 - 4409728*d*n3^4 + 
      4468672*d^2*n3^4 - 1962976*d^3*n3^4 + 316712*d^4*n3^4 + 770176*n3^5 - 
      1502912*d*n3^5 + 958304*d^2*n3^5 - 200208*d^3*n3^5 + 195840*n3^6 - 
      241920*d*n3^6 + 73536*d^2*n3^6 + 24064*n3^7 - 14080*d*n3^7 + 1024*n3^8)*
     j[p4, 0, 0, -1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    (8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(36 - 36*d + 9*d^2 + 36*n3 - 
      18*d*n3 + 8*n3^2)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 
      126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-40640 + 151680*d - 229000*d^2 + 176180*d^3 - 70810*d^4 + 13275*d^5 - 
      750*d^6 - 77376*n3 + 217824*d*n3 - 220128*d^2*n3 + 86828*d^3*n3 - 
      4120*d^4*n3 - 3725*d^5*n3 + 175*d^6*n3 - 48288*n3^2 + 72528*d*n3^2 - 
      2496*d^2*n3^2 - 34980*d^3*n3^2 + 12210*d^4*n3^2 + 140*d^5*n3^2 - 
      1856*n3^3 - 30352*d*n3^3 + 42576*d^2*n3^3 - 11852*d^3*n3^3 - 
      1544*d^4*n3^3 + 9632*n3^4 - 18240*d*n3^4 + 4536*d^2*n3^4 + 
      2336*d^3*n3^4 + 2624*n3^5 - 512*d*n3^5 - 1424*d^2*n3^5 + 320*d*n3^6)*
     j[p4, 0, 0, -1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0])/
    (8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-128 + 368*d - 372*d^2 + 160*d^3 - 25*d^4 - 320*n3 + 592*d*n3 - 
      356*d^2*n3 + 70*d^3*n3 - 192*n3^2 + 216*d*n3^2 - 60*d^2*n3^2 - 
      32*n3^3 + 16*d*n3^3)*j[p4, 0, 0, -1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 
      1])/(8*(-6 + 5*d - 4*n3)*(-2 + d - n3)^2*(-1 + n3)) + 
   ((4480 - 14720*d + 17840*d^2 - 7640*d^3 - 2040*d^4 + 2730*d^5 - 625*d^6 + 
      7552*n3 - 16192*d*n3 + 1920*d^2*n3 + 19224*d^3*n3 - 16364*d^4*n3 + 
      3960*d^5*n3 + 4544*n3^2 + 5792*d*n3^2 - 34912*d^2*n3^2 + 
      34488*d^3*n3^2 - 9948*d^4*n3^2 - 2944*n3^3 + 25056*d*n3^3 - 
      35136*d^2*n3^3 + 13144*d^3*n3^3 - 6656*n3^4 + 17856*d*n3^4 - 
      9760*d^2*n3^4 - 3648*n3^5 + 3872*d*n3^5 - 640*n3^6)*
     j[p4, 0, 0, -1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 2, 0])/
    (8*(-2 + d)*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-8000 + 18880*d - 11960*d^2 - 2620*d^3 + 4890*d^4 - 1225*d^5 - 4480*n3 - 
      11488*d*n3 + 38792*d^2*n3 - 30672*d^3*n3 + 7450*d^4*n3 + 16288*n3^2 - 
      55632*d*n3^2 + 53704*d^2*n3^2 - 15716*d^3*n3^2 + 20960*n3^3 - 
      36960*d*n3^3 + 15352*d^2*n3^3 + 8896*n3^4 - 7136*d*n3^4 + 1280*n3^5)*
     j[p4, 0, 0, -1 + n3, 0, 0, 1, 0, 1, 0, 2, 0, -1, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((244992 - 770560*d + 822048*d^2 - 167472*d^3 - 336544*d^4 + 290088*d^5 - 
      93150*d^6 + 11025*d^7 + 302336*n3 - 93824*d*n3 - 1571008*d^2*n3 + 
      2772096*d^3*n3 - 1977648*d^4*n3 + 656712*d^5*n3 - 84060*d^6*n3 - 
      478336*n3^2 + 2932352*d*n3^2 - 5493440*d^2*n3^2 + 4558976*d^3*n3^2 - 
      1760040*d^4*n3^2 + 258632*d^5*n3^2 - 1243520*n3^3 + 4123392*d*n3^3 - 
      4797376*d^2*n3^3 + 2366784*d^3*n3^3 - 422392*d^4*n3^3 - 1064448*n3^4 + 
      2379008*d*n3^4 - 1712128*d^2*n3^4 + 399232*d^3*n3^4 - 452096*n3^5 + 
      637952*d*n3^5 - 219776*d^2*n3^5 - 96256*n3^6 + 65536*d*n3^6 - 
      8192*n3^7)*j[p4, 0, 0, -1 + n3, 0, 0, 1, 0, 1, 0, 2, 0, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 
      8*n3^2)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 
      126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-10 + 5*d - 4*n3)*j[p4, 0, 0, -1 + n3, 0, 0, 1, 0, 2, 0, 1, 0, 0, 1, 1])/
    (2*(-2 + d - n3)^2*(-1 + n3)) + 
   ((-6560 + 24880*d - 37380*d^2 + 27780*d^3 - 10195*d^4 + 1475*d^5 - 
      20704*n3 + 62080*d*n3 - 69072*d^2*n3 + 33726*d^3*n3 - 6085*d^4*n3 - 
      25712*n3^2 + 57120*d*n3^2 - 41736*d^2*n3^2 + 10014*d^3*n3^2 - 
      15712*n3^3 + 22888*d*n3^3 - 8212*d^2*n3^3 - 4688*n3^4 + 3352*d*n3^4 - 
      544*n3^5)*j[p4, 0, 0, -1 + n3, 0, 0, 2, -1, 0, 0, 1, 1, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((11840 - 36480*d + 43160*d^2 - 24180*d^3 + 6270*d^4 - 575*d^5 + 
      22016*n3 - 49184*d*n3 + 37752*d^2*n3 - 11056*d^3*n3 + 830*d^4*n3 + 
      12512*n3^2 - 15728*d*n3^2 + 3736*d^2*n3^2 + 724*d^3*n3^2 + 800*n3^3 + 
      2400*d*n3^3 - 1976*d^2*n3^3 - 1216*n3^4 + 1248*d*n3^4 - 256*n3^5)*
     j[p4, 0, 0, -1 + n3, 0, 0, 2, 0, 0, -1, 1, 1, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((10 - 5*d + 4*n3)*j[p4, 0, 0, -1 + n3, 0, 0, 2, 0, 0, -1, 1, 2, 0, 1, 1])/
    (2*(-2 + d - n3)^2*(-1 + n3)) + 
   ((6560 - 24880*d + 37380*d^2 - 27780*d^3 + 10195*d^4 - 1475*d^5 + 
      20704*n3 - 62080*d*n3 + 69072*d^2*n3 - 33726*d^3*n3 + 6085*d^4*n3 + 
      25712*n3^2 - 57120*d*n3^2 + 41736*d^2*n3^2 - 10014*d^3*n3^2 + 
      15712*n3^3 - 22888*d*n3^3 + 8212*d^2*n3^3 + 4688*n3^4 - 3352*d*n3^4 + 
      544*n3^5)*j[p4, 0, 0, -1 + n3, 0, 0, 2, 0, 0, 0, 1, 1, -1, 1, 1])/
    (8*(-2 + d - n3)^2*(-1 + n3)*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((640 - 1680*d + 1560*d^2 - 620*d^3 + 90*d^4 + 1344*n3 - 2572*d*n3 + 
      1564*d^2*n3 - 307*d^3*n3 + 1012*n3^2 - 1258*d*n3^2 + 376*d^2*n3^2 + 
      326*n3^3 - 198*d*n3^3 + 38*n3^4)*j[p4, 0, 0, -1 + n3, 0, 0, 2, 0, 0, 0, 
      1, 1, 0, 1, 1])/(2*(-2 + d - n3)^2*(-1 + n3)*(36 - 36*d + 9*d^2 + 
      36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-10 + 5*d - 4*n3)*j[p4, 0, 0, -1 + n3, 0, 0, 2, 0, 1, 0, 0, 1, 0, 1, 1])/
    (2*(-2 + d - n3)*(-1 + n3)) + 
   ((-10 + 5*d - 4*n3)*j[p4, 0, 0, -1 + n3, 0, 0, 2, 0, 1, 0, 1, 0, 0, 1, 1])/
    (2*(-2 + d - n3)^2*(-1 + n3)) + 
   ((56 - 84*d + 42*d^2 - 7*d^3 + 120*n3 - 120*d*n3 + 30*d^2*n3 + 64*n3^2 - 
      32*d*n3^2 + 10*n3^3)*j[p4, 0, 0, n3, -1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 2])/
    (2*(-2 + d - n3)^2*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((17280 - 53280*d + 62880*d^2 - 34380*d^3 + 8100*d^4 - 525*d^5 + 
      32832*n3 - 74016*d*n3 + 54504*d^2*n3 - 12300*d^3*n3 - 420*d^4*n3 + 
      20928*n3^2 - 24240*d*n3^2 - 408*d^2*n3^2 + 4632*d^3*n3^2 + 1824*n3^3 + 
      8208*d*n3^3 - 7008*d^2*n3^3 - 3360*n3^4 + 4272*d*n3^4 - 960*n3^5)*
     j[p4, 0, 0, n3, -1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 
      126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((56 - 84*d + 42*d^2 - 7*d^3 + 120*n3 - 120*d*n3 + 30*d^2*n3 + 64*n3^2 - 
      32*d*n3^2 + 10*n3^3)*j[p4, 0, 0, n3, -1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 2])/
    (2*(-2 + d - n3)^2*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-72 + 72*d - 18*d^2 - 32*n3 + 16*d*n3 - 4*n3^2)*
     j[p4, 0, 0, n3, -1, 0, 1, 0, 0, 0, 1, 2, 0, 1, 1])/
    ((-2 + d)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-5760 + 17760*d - 20960*d^2 + 11460*d^3 - 2700*d^4 + 175*d^5 - 
      10944*n3 + 24672*d*n3 - 18168*d^2*n3 + 4100*d^3*n3 + 140*d^4*n3 - 
      6976*n3^2 + 8080*d*n3^2 + 136*d^2*n3^2 - 1544*d^3*n3^2 - 608*n3^3 - 
      2736*d*n3^3 + 2336*d^2*n3^3 + 1120*n3^4 - 1424*d*n3^4 + 320*n3^5)*
     j[p4, 0, 0, n3, -1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 
      126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((5760 - 17760*d + 20960*d^2 - 11460*d^3 + 2700*d^4 - 175*d^5 + 10944*n3 - 
      24672*d*n3 + 18168*d^2*n3 - 4100*d^3*n3 - 140*d^4*n3 + 6976*n3^2 - 
      8080*d*n3^2 - 136*d^2*n3^2 + 1544*d^3*n3^2 + 608*n3^3 + 2736*d*n3^3 - 
      2336*d^2*n3^3 - 1120*n3^4 + 1424*d*n3^4 - 320*n3^5)*
     j[p4, 0, 0, n3, -1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 
      126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((5760 - 17760*d + 20960*d^2 - 11460*d^3 + 2700*d^4 - 175*d^5 + 10944*n3 - 
      24672*d*n3 + 18168*d^2*n3 - 4100*d^3*n3 - 140*d^4*n3 + 6976*n3^2 - 
      8080*d*n3^2 - 136*d^2*n3^2 + 1544*d^3*n3^2 + 608*n3^3 + 2736*d*n3^3 - 
      2336*d^2*n3^3 - 1120*n3^4 + 1424*d*n3^4 - 320*n3^5)*
     j[p4, 0, 0, n3, -1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (4*(-2 + d - n3)^2*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 
      126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((76 - 76*d + 19*d^2 + 58*n3 - 29*d*n3 + 11*n3^2)*
     j[p4, 0, 0, n3, -1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    ((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((14 - 7*d + 2*n3)*j[p4, 0, 0, n3, -1, 0, 1, 0, 2, 0, 1, 0, 0, 1, 1])/
    (36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) + 
   ((14 - 7*d + 2*n3)*j[p4, 0, 0, n3, -1, 0, 1, 0, 2, 0, 1, 1, 0, 0, 1])/
    (36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) + 
   ((320 - 480*d + 240*d^2 - 40*d^3 + 452*n3 - 452*d*n3 + 113*d^2*n3 + 
      202*n3^2 - 101*d*n3^2 + 29*n3^3)*j[p4, 0, 0, n3, -1, 0, 2, 0, 0, 0, 1, 
      1, 0, 1, 1])/((-2 + d - n3)^2*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 
      8*n3^2)) + ((56 - 56*d + 14*d^2 + 42*n3 - 21*d*n3 + 8*n3^2)*
     j[p4, 0, 0, n3, -1, 0, 2, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((10 - 5*d + 4*n3)*j[p4, 0, 0, n3, -1, 0, 2, 0, 1, 0, 1, 0, 0, 1, 1])/
    (2*(-2 + d - n3)^2) + ((-10 + 5*d - 3*n3)*j[p4, 0, 0, n3, -1, 0, 2, 0, 1, 
      0, 1, 1, 0, 0, 1])/(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) + 
   ((-440 + 660*d - 330*d^2 + 55*d^3 - 608*n3 + 608*d*n3 - 152*d^2*n3 - 
      268*n3^2 + 134*d*n3^2 - 38*n3^3)*j[p4, 0, 0, n3, -1, 0, 2, 0, 1, 0, 1, 
      1, 0, 1, 0])/(2*(-2 + d - n3)^2*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 
      8*n3^2)) + ((-56 + 84*d - 42*d^2 + 7*d^3 - 80*n3 + 80*d*n3 - 
      20*d^2*n3 - 32*n3^2 + 16*d*n3^2 - 4*n3^3)*j[p4, 0, 0, n3, 0, -1, 0, 0, 
      1, 0, 1, 1, 0, 1, 2])/((-2 + d)*(-2 + d - n3)*
     (36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-56 + 84*d - 42*d^2 + 7*d^3 - 80*n3 + 80*d*n3 - 20*d^2*n3 - 32*n3^2 + 
      16*d*n3^2 - 4*n3^3)*j[p4, 0, 0, n3, 0, -1, 1, 0, 0, 0, 1, 1, 0, 1, 2])/
    ((-2 + d)*(-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((16 - 16*d + 4*d^2 + 24*n3 - 12*d*n3 + 4*n3^2)*j[p4, 0, 0, n3, 0, -1, 1, 
      0, 0, 0, 1, 1, 0, 2, 1])/((-2 + d)*(36 - 36*d + 9*d^2 + 36*n3 - 
      18*d*n3 + 8*n3^2)) + ((72 - 72*d + 18*d^2 + 32*n3 - 16*d*n3 + 4*n3^2)*
     j[p4, 0, 0, n3, 0, -1, 1, 0, 0, 0, 1, 2, 0, 1, 1])/
    ((-2 + d)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-56 + 84*d - 42*d^2 + 7*d^3 - 80*n3 + 80*d*n3 - 20*d^2*n3 - 32*n3^2 + 
      16*d*n3^2 - 4*n3^3)*j[p4, 0, 0, n3, 0, -1, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    ((-2 + d)*(-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((44 - 44*d + 11*d^2 + 28*n3 - 14*d*n3 + 4*n3^2)*
     j[p4, 0, 0, n3, 0, -1, 2, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-2 + d)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-16 + 16*d - 4*d^2 - 10*n3 + 5*d*n3 - 2*n3^2)*j[p4, 0, 0, n3, 0, -1, 2, 
      0, 1, 0, 0, 1, 0, 1, 1])/((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 
      18*d*n3 + 8*n3^2)) + ((44 - 44*d + 11*d^2 + 28*n3 - 14*d*n3 + 4*n3^2)*
     j[p4, 0, 0, n3, 0, -1, 2, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((-2 + d)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-368 + 736*d - 552*d^2 + 184*d^3 - 23*d^4 - 432*n3 + 648*d*n3 - 
      324*d^2*n3 + 54*d^3*n3 - 104*n3^2 + 104*d*n3^2 - 26*d^2*n3^2 + 
      24*n3^3 - 12*d*n3^3 + 8*n3^4)*j[p4, 0, 0, n3, 0, -1, 2, 0, 1, 0, 1, 1, 
      0, 1, 0])/(2*(-2 + d)*(-2 + d - n3)^2*(36 - 36*d + 9*d^2 + 36*n3 - 
      18*d*n3 + 8*n3^2)) + ((-14 + 7*d - 2*n3)*j[p4, 0, 0, n3, 0, 0, 0, -1, 
      1, 0, 2, 1, 0, 1, 1])/(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) + 
   ((-560 + 1120*d - 840*d^2 + 280*d^3 - 35*d^4 - 704*n3 + 1056*d*n3 - 
      528*d^2*n3 + 88*d^3*n3 - 336*n3^2 + 336*d*n3^2 - 84*d^2*n3^2 - 
      76*n3^3 + 38*d*n3^3 - 8*n3^4)*j[p4, 0, 0, n3, 0, 0, 0, 0, 1, 0, 1, 1, 
      0, 1, 1])/(2*(-2 + d)*(-2 + d - n3)^2*(36 - 36*d + 9*d^2 + 36*n3 - 
      18*d*n3 + 8*n3^2)) + ((44 - 44*d + 11*d^2 + 28*n3 - 14*d*n3 + 4*n3^2)*
     j[p4, 0, 0, n3, 0, 0, 0, 0, 1, 0, 1, 2, -1, 1, 1])/
    ((-2 + d)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-44 + 44*d - 11*d^2 - 28*n3 + 14*d*n3 - 4*n3^2)*
     j[p4, 0, 0, n3, 0, 0, 0, 0, 1, 0, 1, 2, 0, 1, 1])/
    ((-2 + d)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((14 - 7*d + 2*n3)*j[p4, 0, 0, n3, 0, 0, 0, 0, 1, 0, 2, 1, -1, 1, 1])/
    (36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) + 
   ((-14 + 7*d - 2*n3)*j[p4, 0, 0, n3, 0, 0, 0, 0, 1, 0, 2, 1, 0, 1, 1])/
    (36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) + 
   ((-14 + 7*d - 2*n3)*j[p4, 0, 0, n3, 0, 0, 0, 0, 2, 0, 1, 1, -1, 1, 1])/
    (36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) + 
   ((7680 - 9120*d - 14960*d^2 + 31180*d^3 - 18240*d^4 + 3525*d^5 - 
      13248*n3 + 84128*d*n3 - 139640*d^2*n3 + 88612*d^3*n3 - 19260*d^4*n3 - 
      57728*n3^2 + 162992*d*n3^2 - 141704*d^2*n3^2 + 38752*d^3*n3^2 - 
      56800*n3^3 + 93584*d*n3^3 - 36960*d^2*n3^3 - 22048*n3^4 + 
      16944*d*n3^4 - 3008*n3^5)*j[p4, 0, 0, n3, 0, 0, 1, -1, 0, 0, 1, 1, 0, 
      1, 1])/(8*(-2 + d - n3)^2*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-272 + 408*d - 204*d^2 + 34*d^3 - 304*n3 + 304*d*n3 - 76*d^2*n3 - 
      118*n3^2 + 59*d*n3^2 - 16*n3^3)*j[p4, 0, 0, n3, 0, 0, 1, -1, 0, 0, 1, 
      1, 0, 2, 1])/((-2 + d)*(-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 
      18*d*n3 + 8*n3^2)) + ((40 - 40*d + 10*d^2 + 28*n3 - 14*d*n3 + 5*n3^2)*
     j[p4, 0, 0, n3, 0, 0, 1, -1, 0, 0, 1, 2, 0, 1, 1])/
    ((-2 + d)*(-6 + 3*d - 2*n3)*(-2 + d - n3)) + 
   ((-56 + 56*d - 14*d^2 - 42*n3 + 21*d*n3 - 8*n3^2)*
     j[p4, 0, 0, n3, 0, 0, 1, -1, 0, 0, 2, 1, 0, 1, 1])/
    ((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-2560 + 4320*d + 400*d^2 - 4580*d^3 + 2960*d^4 - 575*d^5 + 1856*n3 - 
      14304*d*n3 + 23848*d^2*n3 - 14668*d^3*n3 + 3060*d^4*n3 + 10112*n3^2 - 
      27152*d*n3^2 + 22296*d^2*n3^2 - 5760*d^3*n3^2 + 8864*n3^3 - 
      13616*d*n3^3 + 5024*d^2*n3^3 + 2912*n3^4 - 2064*d*n3^4 + 320*n3^5)*
     j[p4, 0, 0, n3, 0, 0, 1, -1, 1, 0, 0, 1, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 
      126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((2560 - 4320*d - 400*d^2 + 4580*d^3 - 2960*d^4 + 575*d^5 - 1856*n3 + 
      14304*d*n3 - 23848*d^2*n3 + 14668*d^3*n3 - 3060*d^4*n3 - 10112*n3^2 + 
      27152*d*n3^2 - 22296*d^2*n3^2 + 5760*d^3*n3^2 - 8864*n3^3 + 
      13616*d*n3^3 - 5024*d^2*n3^3 - 2912*n3^4 + 2064*d*n3^4 - 320*n3^5)*
     j[p4, 0, 0, n3, 0, 0, 1, -1, 1, 0, 1, 0, 0, 1, 1])/
    (8*(-2 + d - n3)^2*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 
      126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((7680 - 9120*d - 14960*d^2 + 31180*d^3 - 18240*d^4 + 3525*d^5 - 
      13248*n3 + 84128*d*n3 - 139640*d^2*n3 + 88612*d^3*n3 - 19260*d^4*n3 - 
      57728*n3^2 + 162992*d*n3^2 - 141704*d^2*n3^2 + 38752*d^3*n3^2 - 
      56800*n3^3 + 93584*d*n3^3 - 36960*d^2*n3^3 - 22048*n3^4 + 
      16944*d*n3^4 - 3008*n3^5)*j[p4, 0, 0, n3, 0, 0, 1, -1, 1, 0, 1, 1, 0, 
      0, 1])/(8*(-2 + d - n3)^2*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 
      280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-56 + 84*d - 42*d^2 + 7*d^3 - 80*n3 + 80*d*n3 - 20*d^2*n3 - 32*n3^2 + 
      16*d*n3^2 - 4*n3^3)*j[p4, 0, 0, n3, 0, 0, 1, -1, 1, 0, 1, 1, 0, 0, 2])/
    ((-2 + d)*(-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((5760 - 17760*d + 20960*d^2 - 11460*d^3 + 2700*d^4 - 175*d^5 + 10944*n3 - 
      24672*d*n3 + 18168*d^2*n3 - 4100*d^3*n3 - 140*d^4*n3 + 6976*n3^2 - 
      8080*d*n3^2 - 136*d^2*n3^2 + 1544*d^3*n3^2 + 608*n3^3 + 2736*d*n3^3 - 
      2336*d^2*n3^3 - 1120*n3^4 + 1424*d*n3^4 - 320*n3^5)*
     j[p4, 0, 0, n3, 0, 0, 1, -1, 1, 0, 1, 1, 0, 1, 0])/
    (8*(-2 + d - n3)^2*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 
      126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-56 + 56*d - 14*d^2 - 42*n3 + 21*d*n3 - 8*n3^2)*
     j[p4, 0, 0, n3, 0, 0, 1, -1, 1, 0, 2, 0, 0, 1, 1])/
    ((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-56 + 56*d - 14*d^2 - 42*n3 + 21*d*n3 - 8*n3^2)*
     j[p4, 0, 0, n3, 0, 0, 1, -1, 1, 0, 2, 1, 0, 0, 1])/
    ((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-16 + 16*d - 4*d^2 - 10*n3 + 5*d*n3 - 2*n3^2)*j[p4, 0, 0, n3, 0, 0, 1, 
      -1, 2, 0, 1, 0, 0, 1, 1])/((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 
      18*d*n3 + 8*n3^2)) + ((-16 + 16*d - 4*d^2 - 10*n3 + 5*d*n3 - 2*n3^2)*
     j[p4, 0, 0, n3, 0, 0, 1, -1, 2, 0, 1, 1, 0, 0, 1])/
    ((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-72 + 72*d - 18*d^2 - 32*n3 + 16*d*n3 - 4*n3^2)*
     j[p4, 0, 0, n3, 0, 0, 1, 0, 0, -1, 1, 2, 0, 1, 1])/
    ((-2 + d)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-14 + 7*d - 2*n3)*j[p4, 0, 0, n3, 0, 0, 1, 0, 0, -1, 2, 1, 0, 1, 1])/
    (36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) + 
   ((2752 - 6224*d + 5568*d^2 - 2456*d^3 + 532*d^4 - 45*d^5 + 3504*n3 - 
      6312*d*n3 + 4212*d^2*n3 - 1230*d^3*n3 + 132*d^4*n3 + 1640*n3^2 - 
      2256*d*n3^2 + 1026*d^2*n3^2 - 154*d^3*n3^2 + 332*n3^3 - 330*d*n3^3 + 
      82*d^2*n3^3 + 24*n3^4 - 16*d*n3^4)*j[p4, 0, 0, n3, 0, 0, 1, 0, 0, 0, 1, 
      1, 0, 1, 1])/(2*(-2 + d)*(-2 + d - n3)^2*(36 - 36*d + 9*d^2 + 36*n3 - 
      18*d*n3 + 8*n3^2)) + j[p4, 0, 0, n3, 0, 0, 1, 0, 0, 0, 1, 2, -1, 1, 1]/
    (-6 + 3*d - 2*n3) - j[p4, 0, 0, n3, 0, 0, 1, 0, 0, 0, 1, 2, 0, 1, 1]/
    (-6 + 3*d - 2*n3) + ((16 - 16*d + 4*d^2 + 10*n3 - 5*d*n3 + 2*n3^2)*
     j[p4, 0, 0, n3, 0, 0, 1, 0, 1, -1, 1, 1, 0, 0, 2])/
    ((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-14 + 7*d - 2*n3)*j[p4, 0, 0, n3, 0, 0, 1, 0, 1, -1, 2, 1, 0, 0, 1])/
    (36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) + 
   ((824 - 1596*d + 1158*d^2 - 373*d^3 + 45*d^4 + 1552*n3 - 2304*d*n3 + 
      1140*d^2*n3 - 188*d^3*n3 + 1168*n3^2 - 1172*d*n3^2 + 294*d^2*n3^2 + 
      392*n3^3 - 198*d*n3^3 + 48*n3^4)*j[p4, 0, 0, n3, 0, 0, 1, 0, 1, 0, 0, 
      1, 0, 1, 1])/(2*(-2 + d - n3)^2*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 
      8*n3^2)) + ((-92 + 92*d - 23*d^2 - 78*n3 + 39*d*n3 - 16*n3^2)*
     j[p4, 0, 0, n3, 0, 0, 1, 0, 1, 0, 0, 2, -1, 1, 1])/
    ((-2 + d)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((92 - 92*d + 23*d^2 + 78*n3 - 39*d*n3 + 16*n3^2)*
     j[p4, 0, 0, n3, 0, 0, 1, 0, 1, 0, 0, 2, 0, 1, 1])/
    ((-2 + d)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-760 + 1500*d - 1110*d^2 + 365*d^3 - 45*d^4 - 1480*n3 + 2232*d*n3 - 
      1122*d^2*n3 + 188*d^3*n3 - 1140*n3^2 + 1158*d*n3^2 - 294*d^2*n3^2 - 
      388*n3^3 + 198*d*n3^3 - 48*n3^4)*j[p4, 0, 0, n3, 0, 0, 1, 0, 1, 0, 1, 
      0, 0, 1, 1])/(2*(-2 + d - n3)^2*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 
      8*n3^2)) + ((-2560 + 3360*d + 3840*d^2 - 8940*d^3 + 5300*d^4 - 
      1025*d^5 + 3776*n3 - 24608*d*n3 + 40872*d^2*n3 - 25820*d^3*n3 + 
      5580*d^4*n3 + 16960*n3^2 - 47536*d*n3^2 + 41000*d^2*n3^2 - 
      11128*d^3*n3^2 + 16416*n3^3 - 26800*d*n3^3 + 10496*d^2*n3^3 + 
      6240*n3^4 - 4752*d*n3^4 + 832*n3^5)*j[p4, 0, 0, n3, 0, 0, 1, 0, 1, 0, 
      1, 1, -1, 0, 1])/(4*(-2 + d - n3)^2*(-48 + 148*d - 144*d^2 + 45*d^3 - 
      152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((56 - 84*d + 42*d^2 - 7*d^3 + 80*n3 - 80*d*n3 + 20*d^2*n3 + 32*n3^2 - 
      16*d*n3^2 + 4*n3^3)*j[p4, 0, 0, n3, 0, 0, 1, 0, 1, 0, 1, 1, -1, 0, 2])/
    ((-2 + d)*(-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-5760 + 17760*d - 20960*d^2 + 11460*d^3 - 2700*d^4 + 175*d^5 - 
      10944*n3 + 24672*d*n3 - 18168*d^2*n3 + 4100*d^3*n3 + 140*d^4*n3 - 
      6976*n3^2 + 8080*d*n3^2 + 136*d^2*n3^2 - 1544*d^3*n3^2 - 608*n3^3 - 
      2736*d*n3^3 + 2336*d^2*n3^3 + 1120*n3^4 - 1424*d*n3^4 + 320*n3^5)*
     j[p4, 0, 0, n3, 0, 0, 1, 0, 1, 0, 1, 1, -1, 1, 0])/
    (4*(-2 + d - n3)^2*(-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 
      126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((-16 + 16*d - 4*d^2 - 24*n3 + 12*d*n3 - 4*n3^2)*
     j[p4, 0, 0, n3, 0, 0, 1, 0, 1, 0, 1, 1, -1, 2, 0])/
    ((-2 + d)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((52224 - 181120*d + 234816*d^2 - 122544*d^3 - 4768*d^4 + 32976*d^5 - 
      13260*d^6 + 1725*d^7 + 66304*n3 - 66176*d*n3 - 203808*d^2*n3 + 
      433904*d^3*n3 - 326120*d^4*n3 + 110844*d^5*n3 - 14360*d^6*n3 - 
      93440*n3^2 + 535552*d*n3^2 - 971584*d^2*n3^2 + 787616*d^3*n3^2 - 
      297984*d^4*n3^2 + 42984*d^5*n3^2 - 223744*n3^3 + 700288*d*n3^3 - 
      776352*d^2*n3^3 + 366848*d^3*n3^3 - 62920*d^4*n3^3 - 159360*n3^4 + 
      331904*d*n3^4 - 223392*d^2*n3^4 + 48832*d^3*n3^4 - 49152*n3^5 + 
      62464*d*n3^5 - 19328*d^2*n3^5 - 5632*n3^6 + 3072*d*n3^6)*
     j[p4, 0, 0, n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (8*(-2 + d)*(-6 + 3*d - 4*n3)*(-2 + d - n3)^2*(-48 + 148*d - 144*d^2 + 
      45*d^3 - 152*n3 + 280*d*n3 - 126*d^2*n3 - 128*n3^2 + 112*d*n3^2 - 
      32*n3^3)) + ((-16 + 16*d - 4*d^2 - 10*n3 + 5*d*n3 - 2*n3^2)*
     j[p4, 0, 0, n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    ((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-135168 + 479744*d - 756352*d^2 + 727584*d^3 - 493168*d^4 + 245360*d^5 - 
      84384*d^6 + 17370*d^7 - 1575*d^8 + 32768*n3 - 333056*d*n3 + 
      702400*d^2*n3 - 592096*d^3*n3 + 184864*d^4*n3 + 23584*d^5*n3 - 
      26820*d^6*n3 + 4410*d^7*n3 + 608768*n3^2 - 2085376*d*n3^2 + 
      2777536*d^2*n3^2 - 1821536*d^3*n3^2 + 599632*d^4*n3^2 - 
      84712*d^5*n3^2 + 2200*d^6*n3^2 + 848128*n3^3 - 2300224*d*n3^3 + 
      2401056*d^2*n3^3 - 1195472*d^3*n3^3 + 279144*d^4*n3^3 - 
      23576*d^5*n3^3 + 574336*n3^4 - 1237568*d*n3^4 + 971232*d^2*n3^4 - 
      326704*d^3*n3^4 + 39280*d^4*n3^4 + 228096*n3^5 - 365568*d*n3^5 + 
      188992*d^2*n3^5 - 31232*d^3*n3^5 + 51712*n3^6 - 52480*d*n3^6 + 
      12544*d^2*n3^6 + 5120*n3^7 - 2048*d*n3^7)*j[p4, 0, 0, n3, 0, 0, 1, 0, 
      1, 0, 1, 1, 0, 1, 0])/(8*(-2 + d)*(-2 + d - n3)^2*
     (36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)*
     (-48 + 148*d - 144*d^2 + 45*d^3 - 152*n3 + 280*d*n3 - 126*d^2*n3 - 
      128*n3^2 + 112*d*n3^2 - 32*n3^3)) + 
   ((44 - 44*d + 11*d^2 + 28*n3 - 14*d*n3 + 4*n3^2)*
     j[p4, 0, 0, n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 2, 0])/
    ((-2 + d)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((56 - 56*d + 14*d^2 + 42*n3 - 21*d*n3 + 8*n3^2)*
     j[p4, 0, 0, n3, 0, 0, 1, 0, 1, 0, 2, 0, -1, 1, 1])/
    ((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-56 + 56*d - 14*d^2 - 42*n3 + 21*d*n3 - 8*n3^2)*
     j[p4, 0, 0, n3, 0, 0, 1, 0, 1, 0, 2, 0, 0, 1, 1])/
    ((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((280 - 420*d + 210*d^2 - 35*d^3 + 400*n3 - 400*d*n3 + 100*d^2*n3 + 
      180*n3^2 - 90*d*n3^2 + 26*n3^3)*j[p4, 0, 0, n3, 0, 0, 2, -1, 0, 0, 1, 
      1, 0, 1, 1])/(2*(-2 + d - n3)^2*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 
      8*n3^2)) + ((-56 + 56*d - 14*d^2 - 42*n3 + 21*d*n3 - 8*n3^2)*
     j[p4, 0, 0, n3, 0, 0, 2, 0, 0, -1, 1, 1, 0, 1, 1])/
    ((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-280 + 420*d - 210*d^2 + 35*d^3 - 400*n3 + 400*d*n3 - 100*d^2*n3 - 
      180*n3^2 + 90*d*n3^2 - 26*n3^3)*j[p4, 0, 0, n3, 0, 0, 2, 0, 0, 0, 1, 1, 
      -1, 1, 1])/(2*(-2 + d - n3)^2*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 
      8*n3^2)) + ((10 - 5*d + 4*n3)*j[p4, 0, 0, n3, 0, 0, 2, 0, 0, 0, 1, 1, 
      0, 1, 1])/(2*(-2 + d - n3)^2) + 
   ((-10 + 5*d - 4*n3)*j[p4, 0, 0, n3, 0, 0, 2, 0, 1, -1, 1, 1, 0, 1, 0])/
    (2*(-2 + d - n3)^2) + ((42*n3 - 21*d*n3 + 6*n3^2)*
     j[p4, 0, 0, 1 + n3, -1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) + 
   ((-14*n3 + 7*d*n3 - 2*n3^2)*j[p4, 0, 0, 1 + n3, -1, 0, 1, 0, 1, 0, 0, 1, 
      0, 1, 1])/(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) + 
   ((14*n3 - 7*d*n3 + 2*n3^2)*j[p4, 0, 0, 1 + n3, -1, 0, 1, 0, 1, 0, 1, 0, 0, 
      1, 1])/(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) + 
   ((28*n3 - 14*d*n3 + 4*n3^2)*j[p4, 0, 0, 1 + n3, -1, 0, 1, 0, 1, 0, 1, 1, 
      0, 0, 1])/(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) + 
   ((-48*n3 + 48*d*n3 - 12*d^2*n3 - 30*n3^2 + 15*d*n3^2 - 6*n3^3)*
     j[p4, 0, 0, 1 + n3, 0, 0, 1, -1, 0, 0, 1, 1, 0, 1, 1])/
    ((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((16*n3 - 16*d*n3 + 4*d^2*n3 + 10*n3^2 - 5*d*n3^2 + 2*n3^3)*
     j[p4, 0, 0, 1 + n3, 0, 0, 1, -1, 1, 0, 0, 1, 0, 1, 1])/
    ((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-16*n3 + 16*d*n3 - 4*d^2*n3 - 10*n3^2 + 5*d*n3^2 - 2*n3^3)*
     j[p4, 0, 0, 1 + n3, 0, 0, 1, -1, 1, 0, 1, 0, 0, 1, 1])/
    ((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-48*n3 + 48*d*n3 - 12*d^2*n3 - 30*n3^2 + 15*d*n3^2 - 6*n3^3)*
     j[p4, 0, 0, 1 + n3, 0, 0, 1, -1, 1, 0, 1, 1, 0, 0, 1])/
    ((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((14*n3 - 7*d*n3 + 2*n3^2)*j[p4, 0, 0, 1 + n3, 0, 0, 1, -1, 1, 0, 1, 1, 0, 
      1, 0])/(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) + 
   ((32*n3 - 32*d*n3 + 8*d^2*n3 + 20*n3^2 - 10*d*n3^2 + 4*n3^3)*
     j[p4, 0, 0, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, -1, 0, 1])/
    ((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((-28*n3 + 14*d*n3 - 4*n3^2)*j[p4, 0, 0, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 
      -1, 1, 0])/(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2) + 
   ((-16*n3 + 16*d*n3 - 4*d^2*n3 - 10*n3^2 + 5*d*n3^2 - 2*n3^3)*
     j[p4, 0, 0, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((-2 + d - n3)*(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2)) + 
   ((14*n3 - 7*d*n3 + 2*n3^2)*j[p4, 0, 0, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 
      1, 0])/(36 - 36*d + 9*d^2 + 36*n3 - 18*d*n3 + 8*n3^2), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?Positive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n2 == 0 && n3 == 1 && n4 == 0 && n5 == 0 && n6 == 1 && n7 == -1 && 
    n9 == 0 && n8 != 1 -> j[p4, 0, -1, 1, 0, 0, 1, 0, n8, 0, 1, 1, 0, 1, 1] + 
   ((4 - d)*j[p4, 0, 0, 0, 0, 0, 1, 0, -1 + n8, 0, 1, 1, 0, 2, 1])/
    (2*(-3 + d)*(-1 + n8)) + ((-4 + d)*j[p4, 0, 0, 1, 0, 0, 1, 0, -1 + n8, 0, 
      0, 2, 0, 1, 1])/(2*(-3 + d)*(-1 + n8)) + 
   ((d - 2*n8)*j[p4, 0, 0, 1, 0, 0, 1, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (2*(-1 + n8)) - j[p4, 0, 0, 2, 0, 0, 1, -1, -1 + n8, 0, 1, 1, 0, 1, 1]/
    (-1 + n8) + j[p4, 0, 0, 2, 0, 0, 1, 0, -1 + n8, 0, 1, 1, 0, 0, 1]/
    (-1 + n8)}
