{j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, (n8_)?Positive, 
    (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n13 != 1 -> 
  j[p4a, -1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14] + 
   (n8*j[p4a, -1 + n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n5*j[p4a, -1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4a, -1 + n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n3*j[p4a, -1 + n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4a, -1 + n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n4*j[p4a, n1, -1 + n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n3*j[p4a, n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + ((-1 - d + 2*n1 + n13 + n2 + n5 + n8)*
     j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) - (n8*j[p4a, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, 
      n10, -1 + n11, n12, -1 + n13, n14])/(-1 + n13) - 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, -1 + n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, -1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, -1 + n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, -1 + n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, (n8_)?Positive, 
    (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n8 != 1 -> 
  -((n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
       n13, n14])/(-1 + n8)) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      n13, n14])/(-1 + n8) + (n4*j[p4a, 1 + n1, -1 + n2, n3, 1 + n4, n5, n6, 
      n7, -1 + n8, n9, n10, n11, n12, n13, n14])/(-1 + n8) + 
   (n12*j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n8) + ((-1 - d + 2*n11 + n12 + n4 + n7 + n8)*
     j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, n13, 
      n14])/(-1 + n8) - (n12*j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, -1 + n8, 
      n9, n10, n11, 1 + n12, n13, n14])/(-1 + n8) + 
   j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, n12, n13, 
    n14] - (n7*j[p4a, 1 + n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, n9, 
      -1 + n10, n11, n12, n13, n14])/(-1 + n8) + 
   (n7*j[p4a, 1 + n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n8) - 
   (n4*j[p4a, 1 + n1, n2, n3, 1 + n4, -1 + n5, n6, n7, -1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n8) - 
   (n4*j[p4a, 1 + n1, n2, n3, 1 + n4, n5, -1 + n6, n7, -1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n8) + 
   (n4*j[p4a, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, -1 + n9, n10, n11, 
      n12, n13, n14])/(-1 + n8) - 
   (n4*j[p4a, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n8) + 
   (n4*j[p4a, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n8) + 
   (n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, -1 + n7, -1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n8) + 
   (n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, -2 + n8, n9, n10, n11, n12, 
      n13, n14])/(-1 + n8) - (n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, 
      -1 + n8, n9, -1 + n10, n11, n12, n13, n14])/(-1 + n8) + 
   (n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n8) - 
   (n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n8) + 
   (n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      n13, n14])/(-1 + n8), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, (n8_)?Positive, 
    (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n2 != 1 -> 
  (n4*j[p4a, n1, -1 + n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, 
      n14])/(-1 + n2) + (n3*j[p4a, n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, 
      n9, n10, n11, n12, n13, n14])/(-1 + n2) - 
   (n4*j[p4a, 1 + n1, -2 + n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      n13, n14])/(-1 + n2) + ((-1 - d + 2*n10 + n2 + n3 + n6 + n7)*
     j[p4a, 1 + n1, -1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, 
      n14])/(-1 + n2) + (n7*j[p4a, 1 + n1, -1 + n2, n3, n4, n5, n6, 1 + n7, 
      n8, n9, -1 + n10, n11, n12, n13, n14])/(-1 + n2) - 
   (n7*j[p4a, 1 + n1, -1 + n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n2) - 
   (n6*j[p4a, 1 + n1, -1 + n2, n3, n4, n5, 1 + n6, n7, n8, -1 + n9, n10, n11, 
      n12, n13, n14])/(-1 + n2) + 
   (n6*j[p4a, 1 + n1, -1 + n2, n3, n4, n5, 1 + n6, n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n2) + 
   (n4*j[p4a, 1 + n1, -1 + n2, n3, 1 + n4, n5, -1 + n6, n7, n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n2) + 
   (n4*j[p4a, 1 + n1, -1 + n2, n3, 1 + n4, n5, n6, -1 + n7, n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n2) - 
   (n4*j[p4a, 1 + n1, -1 + n2, n3, 1 + n4, n5, n6, n7, n8, -1 + n9, n10, n11, 
      n12, n13, n14])/(-1 + n2) + 
   (n4*j[p4a, 1 + n1, -1 + n2, n3, 1 + n4, n5, n6, n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n2) - 
   (n4*j[p4a, 1 + n1, -1 + n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n2) - 
   (n3*j[p4a, 1 + n1, -1 + n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n2) + 
   (n3*j[p4a, 1 + n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n2) - 
   (n3*j[p4a, 1 + n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n2) + 
   (n3*j[p4a, 1 + n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n2) - 
   (n3*j[p4a, 1 + n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n2) - 
   (n3*j[p4a, 1 + n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      n13, n14])/(-1 + n2) + j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, 
    -1 + n10, n11, n12, n13, n14], 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, (n8_)?Positive, 
    (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n14 != 1 -> 
  -((n5*j[p4a, -1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
       n13, -1 + n14])/(-1 + n14)) - 
   (n4*j[p4a, -1 + n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4a, n1, -1 + n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n4*j[p4a, n1, -1 + n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4a, n1, n2, -1 + n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 
    -1 + n9, n10, n11, n12, n13, n14] + 
   ((1 - n14 + n9)*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14) + (n9*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 
      1 + n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, -1 + n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, -1 + n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, -1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, -1 + n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, -1 + n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14) + (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, 
      -1 + n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) + 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n14) - 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14) - (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, 
      n8, n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, -1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, -1 + n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, (n8_)?Positive, 
    (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /;  !(n12 == 0 || n8 == 1) -> 
  (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) + ((-1 - d + n1 + 2*n13 + n3 + n5 + n8)*
     j[p4a, n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, n13, 
      n14])/(-1 + n8) + j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 
    1 + n12, -1 + n13, n14] + (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, 
      -1 + n8, n9, n10, n11, 1 + n12, -1 + n13, n14])/(-1 + n8) - 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n8) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, -1 + n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n8) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n8) - 
   (n2*j[p4a, n1, 1 + n2, -1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) + 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, -1 + n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) + 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, -2 + n8, n9, n10, n11, 1 + n12, 
      n13, n14])/(-1 + n8) - (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, 
      -1 + n8, n9, n10, n11, n12, n13, n14])/(-1 + n8) + 
   (2*n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, -1 + n13, n14])/(-1 + n8) + 
   (n1*j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n8) - 
   (n1*j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      n13, n14])/(-1 + n8), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, (n8_)?Positive, 
    (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n11 != 1 -> 
  -((n7*j[p4a, 1 + n1, -1 + n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, 
       -1 + n11, n12, n13, n14])/(-1 + n11)) - 
   (n3*j[p4a, 1 + n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n12*j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, 
    -1 + n8, n9, n10, n11, n12, n13, n14] + 
   ((-1 - d + n11 + n12 + n4 + n7 + 2*n8)*j[p4a, 1 + n1, n2, n3, n4, n5, n6, 
      n7, n8, n9, n10, -1 + n11, n12, n13, n14])/(-1 + n11) - 
   (n12*j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      1 + n12, -1 + n13, n14])/(-1 + n11) + 
   (n7*j[p4a, 1 + n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n4*j[p4a, 1 + n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n4*j[p4a, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (2*n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, 
      -1 + n11, n12, n13, n14])/(-1 + n11) - 
   (n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      -1 + n12, n13, n14])/(-1 + n11) + 
   (n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, n12, 
      -1 + n13, n14])/(-1 + n11), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, (n8_)?Positive, 
    (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n10 != 1 -> 
  j[p4a, 1 + n1, -1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, 
    n14] + (n7*j[p4a, 1 + n1, -1 + n2, n3, n4, n5, n6, 1 + n7, n8, n9, 
      -1 + n10, n11, n12, n13, n14])/(-1 + n10) + 
   (n6*j[p4a, 1 + n1, -1 + n2, n3, n4, n5, 1 + n6, n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n3*j[p4a, 1 + n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n6*j[p4a, 1 + n1, n2, n3, n4, -1 + n5, 1 + n6, n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + ((-1 - d + n10 + 2*n2 + n3 + n6 + n7)*
     j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, n13, 
      n14])/(-1 + n10) - (n7*j[p4a, 1 + n1, n2, n3, n4, n5, n6, 1 + n7, 
      -1 + n8, n9, -1 + n10, n11, n12, n13, n14])/(-1 + n10) - 
   (n4*j[p4a, 1 + n1, n2, n3, 1 + n4, -1 + n5, n6, n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n4*j[p4a, 1 + n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n4*j[p4a, 1 + n1, n2, n3, 1 + n4, n5, n6, -1 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n4*j[p4a, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (2*n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, -1 + n10, 
      n11, n12, n13, n14])/(-1 + n10) + 
   (n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, 
      -1 + n12, n13, n14])/(-1 + n10) - 
   (2*n3*j[p4a, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, 
      n12, -1 + n13, n14])/(-1 + n10), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, (n8_)?Positive, 
    (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /;  !(n14 == 1 || n4 == 0) -> 
  (n9*j[p4a, -1 + n1, n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4a, n1, -1 + n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, n1, -1 + n2, n3, 1 + n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + j[p4a, n1, n2, -1 + n3, 1 + n4, n5, n6, 
    n7, n8, n9, n10, n11, n12, n13, n14] - 
   (n6*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   ((-1 - n4)*j[p4a, n1, n2, -1 + n3, 2 + n4, n5, n6, n7, n8, n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) - (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 
      n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) - 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) + (n9*j[p4a, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, 
      n8, 1 + n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) + 
   (n9*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   ((-2 + n14 - n4)*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) + 
   (n9*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, -1 + n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n9*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14) - (n9*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, 
      1 + n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4a, n1, n2, n3, 1 + n4, n5, 1 + n6, -1 + n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (2*n6*j[p4a, n1, n2, n3, 1 + n4, n5, 1 + n6, n7, -1 + n8, n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, n1, n2, n3, 1 + n4, n5, 1 + n6, n7, n8, n9, n10, n11, -1 + n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4a, n1, n2, n3, 1 + n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4a, n1, n2, n3, 1 + n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14) + (n5*j[p4a, n1, n2, n3, 1 + n4, 1 + n5, n6, 
      -1 + n7, n8, n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) - 
   (n5*j[p4a, n1, n2, n3, 1 + n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n14) + 
   (n5*j[p4a, n1, n2, n3, 1 + n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14) + ((1 + n4)*j[p4a, n1, n2, n3, 2 + n4, n5, n6, 
      n7, n8, n9, n10, n11, n12, n13, -2 + n14])/(-1 + n14), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, (n8_)?Positive, 
    (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /;  !(n13 == 1 || n7 == 0) -> 
  -((n8*j[p4a, n1, -1 + n2, n3, n4, n5, n6, 1 + n7, 1 + n8, n9, n10, n11, 
       n12, -1 + n13, n14])/(-1 + n13)) + j[p4a, n1, n2, -1 + n3, n4, n5, n6, 
    1 + n7, n8, n9, n10, n11, n12, n13, n14] + 
   (n5*j[p4a, n1, n2, n3, -1 + n4, 1 + n5, n6, 1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n8*j[p4a, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + ((1 - n13 - n2 + n3 + n4 - n5 + n8)*
     j[p4a, n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) - (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, 
      n10, n11, n12, -1 + n13, n14])/(-1 + n13) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, -1 + n5, n6, 1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, 1 + n7, n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) - 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, 1 + n7, -1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n1*j[p4a, 1 + n1, -1 + n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n1*j[p4a, 1 + n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n1*j[p4a, 1 + n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, -1 + n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n1*j[p4a, 1 + n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, n12, 
      -1 + n13, n14])/(-1 + n13), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, (n8_)?Positive, 
    (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /;  !(n11 == 1 || n7 == 0) -> 
  (n12*j[p4a, n1, -1 + n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + j[p4a, n1, -1 + n2, n3, n4, n5, n6, 
    1 + n7, n8, n9, n10, n11, n12, n13, n14] + 
   (n8*j[p4a, n1, -1 + n2, n3, n4, n5, n6, 1 + n7, 1 + n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   ((1 + n7)*j[p4a, n1, -1 + n2, n3, n4, n5, n6, 2 + n7, n8, n9, n10, 
      -1 + n11, n12, n13, n14])/(-1 + n11) + 
   (n3*j[p4a, n1, -1 + n2, 1 + n3, n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n12*j[p4a, n1, n2, n3, -1 + n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + j[p4a, n1, n2, n3, -1 + n4, n5, n6, 
    1 + n7, n8, n9, n10, n11, n12, n13, n14] + 
   (n8*j[p4a, n1, n2, n3, -1 + n4, n5, n6, 1 + n7, 1 + n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   ((1 + n7)*j[p4a, n1, n2, n3, -1 + n4, n5, n6, 2 + n7, n8, n9, n10, 
      -1 + n11, n12, n13, n14])/(-1 + n11) - 
   (n12*j[p4a, n1, n2, n3, n4, -1 + n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) - j[p4a, n1, n2, n3, n4, -1 + n5, n6, 
    1 + n7, n8, n9, n10, n11, n12, n13, n14] + 
   ((-1 - n7)*j[p4a, n1, n2, n3, n4, -1 + n5, n6, 2 + n7, n8, n9, n10, 
      -1 + n11, n12, n13, n14])/(-1 + n11) - 
   (n12*j[p4a, n1, n2, n3, n4, n5, -1 + n6, 1 + n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) - j[p4a, n1, n2, n3, n4, n5, -1 + n6, 
    1 + n7, n8, n9, n10, n11, n12, n13, n14] - 
   (n8*j[p4a, n1, n2, n3, n4, n5, -1 + n6, 1 + n7, 1 + n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n12*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 1 + n12, 
      n13, n14])/(-1 + n11) - (n8*j[p4a, n1, n2, n3, n4, n5, n6, n7, 1 + n8, 
      n9, n10, -1 + n11, n12, n13, n14])/(-1 + n11) - 
   (n12*j[p4a, n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) - j[p4a, n1, n2, n3, n4, n5, n6, 1 + n7, 
    -1 + n8, n9, n10, n11, n12, n13, n14] + j[p4a, n1, n2, n3, n4, n5, n6, 
    1 + n7, n8, -1 + n9, n10, n11, n12, n13, n14] + 
   ((-1 + d - n11 - n12 - 2*n7 - 2*n8)*j[p4a, n1, n2, n3, n4, n5, n6, 1 + n7, 
      n8, n9, n10, -1 + n11, n12, n13, n14])/(-1 + n11) + 
   (n12*j[p4a, n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, -1 + n14])/(-1 + n11) + 
   ((-1 - n7)*j[p4a, n1, n2, n3, n4, n5, n6, 2 + n7, -1 + n8, n9, n10, 
      -1 + n11, n12, n13, n14])/(-1 + n11) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, -1 + n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, -1 + n6, 1 + n7, n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, -1 + n11, n12, 
      n13, n14])/(-1 + n11) - (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, 1 + n7, 
      -1 + n8, n9, n10, -1 + n11, n12, n13, n14])/(-1 + n11) + 
   (n3*j[p4a, n1, n2, 1 + n3, -1 + n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (2*n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, n12, 
      n13, n14])/(-1 + n11) - 
   (2*n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, 1 + n7, -1 + n8, n9, n10, 
      -1 + n11, n12, n13, n14])/(-1 + n11) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 
      -1 + n12, n13, n14])/(-1 + n11) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, n12, 
      n13, -1 + n14])/(-1 + n11), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, (n8_)?Positive, 
    (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /;  !(n10 == 1 || n7 == 0) -> 
  ((1 + n7)*j[p4a, n1, -1 + n2, n3, n4, n5, n6, 2 + n7, n8, n9, -1 + n10, 
      n11, n12, n13, n14])/(-1 + n10) - 
   (n6*j[p4a, n1, -1 + n2, n3, n4, n5, 1 + n6, 1 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n3*j[p4a, n1, -1 + n2, 1 + n3, n4, n5, n6, 1 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   ((1 + n7)*j[p4a, n1, n2, n3, -1 + n4, n5, n6, 2 + n7, n8, n9, -1 + n10, 
      n11, n12, n13, n14])/(-1 + n10) - 
   (n6*j[p4a, n1, n2, n3, -1 + n4, n5, 1 + n6, 1 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   ((-1 - n7)*j[p4a, n1, n2, n3, n4, -1 + n5, n6, 2 + n7, n8, n9, -1 + n10, 
      n11, n12, n13, n14])/(-1 + n10) + 
   (n6*j[p4a, n1, n2, n3, n4, -1 + n5, 1 + n6, 1 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + j[p4a, n1, n2, n3, n4, n5, -1 + n6, 
    1 + n7, n8, n9, n10, n11, n12, n13, n14] - j[p4a, n1, n2, n3, n4, n5, n6, 
    1 + n7, n8, -1 + n9, n10, n11, n12, n13, n14] + 
   (2*(-1 + n6 - n7)*j[p4a, n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, -1 + n10, 
      n11, n12, n13, n14])/(-1 + n10) + j[p4a, n1, n2, n3, n4, n5, n6, 
    1 + n7, n8, n9, n10, -1 + n11, n12, n13, n14] + 
   ((-1 - n7)*j[p4a, n1, n2, n3, n4, n5, n6, 2 + n7, -1 + n8, n9, -1 + n10, 
      n11, n12, n13, n14])/(-1 + n10) + 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, 1 + n7, -1 + n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, -1 + n5, n6, 1 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, -1 + n6, 1 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, 
      n13, n14])/(-1 + n10) - (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, 1 + n7, 
      -1 + n8, n9, -1 + n10, n11, n12, n13, n14])/(-1 + n10) + 
   (n3*j[p4a, n1, n2, 1 + n3, -1 + n4, n5, n6, 1 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (2*n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, 
      n13, n14])/(-1 + n10) - 
   (2*n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, 1 + n7, -1 + n8, n9, -1 + n10, 
      n11, n12, n13, n14])/(-1 + n10) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, 1 + n7, n8, n9, -1 + n10, n11, 
      -1 + n12, n13, n14])/(-1 + n10) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, 1 + n7, n8, n9, -1 + n10, n11, n12, 
      n13, -1 + n14])/(-1 + n10) - 
   (n2*j[p4a, n1, 1 + n2, n3, n4, -1 + n5, n6, 1 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, -1 + n6, 1 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, 
      n13, n14])/(-1 + n10) + (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, 1 + n7, 
      -1 + n8, n9, -1 + n10, n11, n12, n13, n14])/(-1 + n10), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, (n8_)?Positive, 
    (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /;  !(n14 == 1 || n5 == 0) -> 
  (n9*j[p4a, n1, -1 + n2, n3, n4, 1 + n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4a, n1, -1 + n2, n3, n4, 1 + n5, 1 + n6, n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - j[p4a, n1, n2, -1 + n3, n4, 1 + n5, n6, 
    n7, n8, n9, n10, n11, n12, n13, n14] + j[p4a, n1, n2, n3, -1 + n4, 
    1 + n5, n6, n7, n8, n9, n10, n11, n12, n13, n14] + 
   (n9*j[p4a, n1, n2, n3, -1 + n4, 1 + n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4a, n1, n2, n3, -1 + n4, 1 + n5, 1 + n6, n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   ((1 + n5)*j[p4a, n1, n2, n3, -1 + n4, 2 + n5, n6, n7, n8, n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) - (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 
      n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4a, n1, n2, n3, n4, 1 + n5, n6, -1 + n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, -1 + n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, 
    n9, n10, n11, n12, -1 + n13, n14] + 
   ((-1 + n4 - n5)*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, 1 + n9, -1 + n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n9*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, 1 + n9, n10, -1 + n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, n1, n2, n3, n4, 1 + n5, 1 + n6, n7, -1 + n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   ((-1 - n5)*j[p4a, n1, n2, n3, n4, 2 + n5, n6, -1 + n7, n8, n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) + (n4*j[p4a, n1, n2, n3, 1 + n4, 1 + n5, n6, 
      -1 + n7, n8, n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, (n8_)?Positive, 
    (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /;  !(n12 == 0 || n13 == 1) -> 
  (n8*j[p4a, n1, -1 + n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n5*j[p4a, n1, -1 + n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n3*j[p4a, n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) - j[p4a, n1, n2, -1 + n3, n4, n5, n6, n7, 
    n8, n9, n10, n11, 1 + n12, n13, n14] - 
   (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + j[p4a, n1, n2, n3, n4, n5, n6, -1 + n7, 
    n8, n9, n10, n11, 1 + n12, n13, n14] - 
   (n8*j[p4a, n1, n2, n3, n4, n5, n6, -1 + n7, 1 + n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + j[p4a, n1, n2, n3, n4, n5, n6, n7, 
    -1 + n8, n9, n10, n11, 1 + n12, n13, n14] + 
   (2*(n2 - n3)*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n8*j[p4a, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n8*j[p4a, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, 1 + n12, 
      -2 + n13, n14])/(-1 + n13) - 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, -1 + n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -2 + n13, n14])/(-1 + n13) + 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, -1 + n14])/(-1 + n13) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, -1 + n14])/(-1 + n13) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (2*n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, -1 + n13, n14])/(-1 + n13) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -2 + n13, n14])/(-1 + n13) + 
   (n2*j[p4a, n1, 1 + n2, -1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (2*n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -2 + n13, n14])/(-1 + n13) + 
   (n1*j[p4a, 1 + n1, -1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n1*j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n1*j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -2 + n13, n14])/(-1 + n13) + 
   (n1*j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, (n8_)?Positive, 
    (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /;  !(n11 == 1 || n6 == 0) -> 
  j[p4a, n1, -1 + n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, n13, 
    n14] + (n7*j[p4a, n1, -1 + n2, n3, n4, n5, 1 + n6, 1 + n7, n8, n9, n10, 
      -1 + n11, n12, n13, n14])/(-1 + n11) + 
   (n3*j[p4a, n1, -1 + n2, 1 + n3, n4, n5, 1 + n6, n7, n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n12*j[p4a, n1, n2, -1 + n3, n4, n5, 1 + n6, n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   (n12*j[p4a, n1, n2, n3, -1 + n4, n5, 1 + n6, n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + j[p4a, n1, n2, n3, -1 + n4, n5, 
    1 + n6, n7, n8, n9, n10, n11, n12, n13, n14] + 
   (n8*j[p4a, n1, n2, n3, -1 + n4, n5, 1 + n6, n7, 1 + n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n7*j[p4a, n1, n2, n3, -1 + n4, n5, 1 + n6, 1 + n7, n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n12*j[p4a, n1, n2, n3, n4, -1 + n5, 1 + n6, n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) - j[p4a, n1, n2, n3, n4, -1 + n5, 
    1 + n6, n7, n8, n9, n10, n11, n12, n13, n14] - 
   (n7*j[p4a, n1, n2, n3, n4, -1 + n5, 1 + n6, 1 + n7, n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n12*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 1 + n12, 
      n13, n14])/(-1 + n11) - (n8*j[p4a, n1, n2, n3, n4, n5, n6, n7, 1 + n8, 
      n9, n10, -1 + n11, n12, n13, n14])/(-1 + n11) + 
   (n12*j[p4a, n1, n2, n3, n4, n5, 1 + n6, -1 + n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) - j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, 
    -1 + n8, n9, n10, n11, n12, n13, n14] + j[p4a, n1, n2, n3, n4, n5, 
    1 + n6, n7, n8, -1 + n9, n10, n11, n12, n13, n14] - 
   j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, -1 + n10, n11, n12, n13, 
    n14] + ((-n12 + n3 + n4 - n8)*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 
      n9, n10, -1 + n11, n12, n13, n14])/(-1 + n11) + 
   (n12*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, -1 + n11, 
      1 + n12, -1 + n13, n14])/(-1 + n11) + 
   (n12*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, -1 + n14])/(-1 + n11) - 
   (n7*j[p4a, n1, n2, n3, n4, n5, 1 + n6, 1 + n7, -1 + n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, -1 + n11, n12, 
      n13, n14])/(-1 + n11) - (n4*j[p4a, n1, n2, n3, 1 + n4, n5, 1 + n6, n7, 
      -1 + n8, n9, n10, -1 + n11, n12, n13, n14])/(-1 + n11) + 
   (n3*j[p4a, n1, n2, 1 + n3, -1 + n4, n5, 1 + n6, n7, n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, 1 + n6, -1 + n7, n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (2*n3*j[p4a, n1, n2, 1 + n3, n4, n5, 1 + n6, n7, -1 + n8, n9, n10, 
      -1 + n11, n12, n13, n14])/(-1 + n11) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, 1 + n6, n7, n8, n9, n10, -1 + n11, 
      -1 + n12, n13, n14])/(-1 + n11) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, 1 + n6, n7, n8, n9, n10, -1 + n11, n12, 
      -1 + n13, n14])/(-1 + n11) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, 1 + n6, n7, n8, n9, n10, -1 + n11, n12, 
      n13, -1 + n14])/(-1 + n11), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, (n8_)?Positive, 
    (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /;  !(n10 == 1 || n6 == 0) -> 
  -((n7*j[p4a, n1, -1 + n2, n3, n4, n5, 1 + n6, 1 + n7, n8, n9, -1 + n10, 
       n11, n12, n13, n14])/(-1 + n10)) - 
   (n3*j[p4a, n1, -1 + n2, 1 + n3, n4, n5, 1 + n6, n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n7*j[p4a, n1, n2, n3, -1 + n4, n5, 1 + n6, 1 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n7*j[p4a, n1, n2, n3, n4, -1 + n5, 1 + n6, 1 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 
    -1 + n9, n10, n11, n12, n13, n14] + 
   ((-1 + d - n10 - n2 - n3 - n4 - 2*n6)*j[p4a, n1, n2, n3, n4, n5, 1 + n6, 
      n7, n8, n9, -1 + n10, n11, n12, n13, n14])/(-1 + n10) + 
   (n7*j[p4a, n1, n2, n3, n4, n5, 1 + n6, 1 + n7, -1 + n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, 
      n13, n14])/(-1 + n10) + (n4*j[p4a, n1, n2, n3, 1 + n4, n5, 1 + n6, n7, 
      -1 + n8, n9, -1 + n10, n11, n12, n13, n14])/(-1 + n10) - 
   (n3*j[p4a, n1, n2, 1 + n3, -1 + n4, n5, 1 + n6, n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, 1 + n6, -1 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (2*n3*j[p4a, n1, n2, 1 + n3, n4, n5, 1 + n6, n7, -1 + n8, n9, -1 + n10, 
      n11, n12, n13, n14])/(-1 + n10) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, 1 + n6, n7, n8, n9, -1 + n10, n11, 
      -1 + n12, n13, n14])/(-1 + n10) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, 1 + n6, n7, n8, n9, -1 + n10, n11, n12, 
      -1 + n13, n14])/(-1 + n10) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, 1 + n6, n7, n8, n9, -1 + n10, n11, n12, 
      n13, -1 + n14])/(-1 + n10) + 
   (n2*j[p4a, n1, 1 + n2, n3, n4, -1 + n5, 1 + n6, n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, 
      n13, n14])/(-1 + n10), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, (n8_)?Positive, 
    (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /;  !(n12 == 0 || n14 == 1) -> 
  -j[p4a, n1, -1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
     n14] + (n6*j[p4a, n1, -1 + n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, 
      1 + n12, n13, -1 + n14])/(-1 + n14) - 
   (n5*j[p4a, n1, -1 + n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) - j[p4a, n1, n2, -1 + n3, n4, n5, n6, n7, 
    n8, n9, n10, n11, 1 + n12, n13, n14] + 
   (n6*j[p4a, n1, n2, -1 + n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) + j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, 
    n8, n9, n10, n11, 1 + n12, n13, n14] + 
   (n9*j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) + j[p4a, n1, n2, n3, n4, n5, n6, -1 + n7, 
    n8, n9, n10, n11, 1 + n12, n13, n14] + j[p4a, n1, n2, n3, n4, n5, n6, n7, 
    -1 + n8, n9, n10, n11, 1 + n12, n13, n14] + j[p4a, n1, n2, n3, n4, n5, 
    n6, n7, n8, n9, n10, n11, 1 + n12, -1 + n13, n14] + 
   ((1 - n14 + n6)*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 
      1 + n12, n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, -1 + n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, n11, 1 + n12, n13, 
      -2 + n14])/(-1 + n14) + (n9*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 
      1 + n9, n10, n11, 1 + n12, n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, -1 + n7, n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) - (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 
      n9, n10, n11, 1 + n12, -1 + n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
      -2 + n14])/(-1 + n14) + (n5*j[p4a, n1, n2, n3, n4, 1 + n5, -1 + n6, n7, 
      n8, n9, n10, n11, 1 + n12, n13, -1 + n14])/(-1 + n14) + 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, -1 + n14])/(-1 + n14) - 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
      -2 + n14])/(-1 + n14) + (n4*j[p4a, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, 
      n8, n9, n10, n11, 1 + n12, n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
      -2 + n14])/(-1 + n14), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, (n8_)?Positive, 
    (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /;  !(n13 == 1 || n5 == 0) -> 
  -((n8*j[p4a, n1, -1 + n2, n3, n4, 1 + n5, n6, n7, 1 + n8, n9, n10, n11, 
       n12, -1 + n13, n14])/(-1 + n13)) + 
   (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n8*j[p4a, n1, n2, n3, -1 + n4, 1 + n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n8*j[p4a, n1, n2, n3, n4, 1 + n5, -1 + n6, n7, 1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n8*j[p4a, n1, n2, n3, n4, 1 + n5, n6, -1 + n7, 1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + ((-2 + n13 - n2 + n3 - n4 - n5 + n8)*
     j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) + j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, 
    n11, n12, n13, -1 + n14] - 
   (n8*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, 1 + n8, n9, n10, n11, -1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n8*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) + 
   ((1 + n5)*j[p4a, n1, n2, n3, n4, 2 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) + 
   ((-1 - n5)*j[p4a, n1, n2, n3, n4, 2 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n13) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n13) - 
   (n3*j[p4a, n1, n2, 1 + n3, -1 + n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n13) - 
   (n2*j[p4a, n1, 1 + n2, -1 + n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4a, n1, 1 + n2, n3, n4, 1 + n5, -1 + n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4a, n1, 1 + n2, n3, n4, 1 + n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4a, n1, 1 + n2, n3, n4, 1 + n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n2*j[p4a, n1, 1 + n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, -1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (2*n2*j[p4a, n1, 1 + n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) - 
   (n1*j[p4a, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n1*j[p4a, 1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, -1 + n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n1*j[p4a, 1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) - 
   (n1*j[p4a, 1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, (n8_)?Positive, 
    (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /;  !(n11 == 1 || n12 == 0) -> 
  ((-1 - n12)*j[p4a, n1, -1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      2 + n12, n13, n14])/(-1 + n11) - j[p4a, n1, -1 + n2, n3, n4, n5, n6, 
    n7, n8, n9, n10, n11, 1 + n12, n13, n14] - 
   (n8*j[p4a, n1, -1 + n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   (n7*j[p4a, n1, n2, -1 + n3, n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   ((-1 - n12)*j[p4a, n1, n2, n3, -1 + n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      2 + n12, n13, n14])/(-1 + n11) - j[p4a, n1, n2, n3, -1 + n4, n5, n6, 
    n7, n8, n9, n10, n11, 1 + n12, n13, n14] - 
   (n8*j[p4a, n1, n2, n3, -1 + n4, n5, n6, n7, 1 + n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) - 
   (n7*j[p4a, n1, n2, n3, -1 + n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   ((1 + n12)*j[p4a, n1, n2, n3, n4, -1 + n5, n6, n7, n8, n9, n10, -1 + n11, 
      2 + n12, n13, n14])/(-1 + n11) + j[p4a, n1, n2, n3, n4, -1 + n5, n6, 
    n7, n8, n9, n10, n11, 1 + n12, n13, n14] + 
   (n7*j[p4a, n1, n2, n3, n4, -1 + n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   ((1 + n12)*j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, n8, n9, n10, -1 + n11, 
      2 + n12, n13, n14])/(-1 + n11) + j[p4a, n1, n2, n3, n4, n5, -1 + n6, 
    n7, n8, n9, n10, n11, 1 + n12, n13, n14] + 
   (n8*j[p4a, n1, n2, n3, n4, n5, -1 + n6, n7, 1 + n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   ((1 + n12)*j[p4a, n1, n2, n3, n4, n5, n6, -1 + n7, n8, n9, n10, -1 + n11, 
      2 + n12, n13, n14])/(-1 + n11) + j[p4a, n1, n2, n3, n4, n5, n6, 
    -1 + n7, n8, n9, n10, n11, 1 + n12, n13, n14] + 
   (n8*j[p4a, n1, n2, n3, n4, n5, n6, -1 + n7, 1 + n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   ((1 + n12)*j[p4a, n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, -1 + n11, 
      2 + n12, n13, n14])/(-1 + n11) + j[p4a, n1, n2, n3, n4, n5, n6, n7, 
    -1 + n8, n9, n10, n11, 1 + n12, n13, n14] - j[p4a, n1, n2, n3, n4, n5, 
    n6, n7, n8, -1 + n9, n10, n11, 1 + n12, n13, n14] + 
   ((-1 - n12 + n3 - n4 + n8)*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, 
      -1 + n11, 1 + n12, n13, n14])/(-1 + n11) + 
   ((-1 - n12)*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      2 + n12, n13, -1 + n14])/(-1 + n11) + j[p4a, n1, n2, n3, n4, n5, n6, 
    n7, n8, n9, n10, n11, 1 + n12, n13, n14] - 
   (n8*j[p4a, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, -1 + n11, n12, 
      n13, n14])/(-1 + n11) + (n8*j[p4a, n1, n2, n3, n4, n5, n6, n7, 1 + n8, 
      n9, n10, -1 + n11, 1 + n12, -1 + n13, n14])/(-1 + n11) - 
   (n7*j[p4a, n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n11) - 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, -1 + n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n11) - 
   (n3*j[p4a, n1, n2, 1 + n3, -1 + n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n11), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, (n8_)?Positive, 
    (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /;  !(n10 == 1 || n12 == 0) -> 
  -j[p4a, n1, -1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
     n14] - (n6*j[p4a, n1, -1 + n2, n3, n4, n5, 1 + n6, n7, n8, n9, -1 + n10, 
      n11, 1 + n12, n13, n14])/(-1 + n10) - j[p4a, n1, n2, -1 + n3, n4, n5, 
    n6, n7, n8, n9, n10, n11, 1 + n12, n13, n14] - 
   (n7*j[p4a, n1, n2, -1 + n3, n4, n5, n6, 1 + n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) - 
   (n6*j[p4a, n1, n2, -1 + n3, n4, n5, 1 + n6, n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) - 
   (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) + 
   (n7*j[p4a, n1, n2, n3, -1 + n4, n5, n6, 1 + n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) - 
   (n7*j[p4a, n1, n2, n3, n4, -1 + n5, n6, 1 + n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) + j[p4a, n1, n2, n3, n4, n5, -1 + n6, 
    n7, n8, n9, n10, n11, 1 + n12, n13, n14] + j[p4a, n1, n2, n3, n4, n5, n6, 
    -1 + n7, n8, n9, n10, n11, 1 + n12, n13, n14] + 
   j[p4a, n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, n13, 
    n14] - j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, -1 + n9, n10, n11, 1 + n12, 
    n13, n14] + ((-n2 - n3 + n4 + n6)*j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, 
      n9, -1 + n10, n11, 1 + n12, n13, n14])/(-1 + n10) + 
   j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, -1 + n13, 
    n14] + j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
    n14] + (n7*j[p4a, n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, -1 + n10, n11, 
      1 + n12, -1 + n13, n14])/(-1 + n10) + 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, -1 + n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) + 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, -1 + n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) - 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, -1 + n10, n11, n12, 
      n13, n14])/(-1 + n10) + (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 
      n9, -1 + n10, n11, 1 + n12, -1 + n13, n14])/(-1 + n10) + 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, -1 + n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n10) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, -1 + n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n10) + 
   (n3*j[p4a, n1, n2, 1 + n3, -1 + n4, n5, n6, n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) - 
   (n3*j[p4a, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n10) - 
   (n2*j[p4a, n1, 1 + n2, -1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) - 
   (n2*j[p4a, n1, 1 + n2, n3, n4, -1 + n5, n6, n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) + 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, -1 + n6, n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) + 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, -1 + n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) + 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, -1 + n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) - 
   (n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, 
      n13, n14])/(-1 + n10) + (2*n2*j[p4a, n1, 1 + n2, n3, n4, n5, n6, n7, 
      n8, n9, -1 + n10, n11, 1 + n12, -1 + n13, n14])/(-1 + n10), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, (n8_)?Positive, 
    (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n9 != 1 -> 
  -((n6*j[p4a, n1, -1 + n2, n3, n4, n5, 1 + n6, n7, n8, -1 + n9, n10, n11, 
       n12, n13, n14])/(-1 + n9)) - 
   (n6*j[p4a, n1, n2, -1 + n3, n4, n5, 1 + n6, n7, n8, -1 + n9, n10, n11, 
      n12, n13, n14])/(-1 + n9) - 
   (n4*j[p4a, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, n8, -1 + n9, n10, n11, 
      n12, n13, n14])/(-1 + n9) + ((-1 - d + 2*n14 + n4 + n5 + n6 + n9)*
     j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, -1 + n9, n10, n11, n12, n13, 
      n14])/(-1 + n9) + j[p4a, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 
    n12, n13, -1 + n14] + (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, -1 + n7, n8, 
      -1 + n9, n10, n11, n12, n13, n14])/(-1 + n9) + 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, -1 + n8, -1 + n9, n10, n11, 
      n12, n13, n14])/(-1 + n9) - 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, -1 + n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n9) + 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, -1 + n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n9) + 
   (n6*j[p4a, n1, n2, n3, n4, n5, 1 + n6, n7, n8, -1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n9) - 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, -1 + n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n9) + 
   (n5*j[p4a, n1, n2, n3, n4, 1 + n5, n6, n7, n8, -1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n9) + 
   (n4*j[p4a, n1, n2, n3, 1 + n4, n5, n6, n7, n8, -1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n9), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, (n8_)?Positive, 
    (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n10 == 1 && n11 == 1 && n13 == 1 && 
    n14 == 1 && n2 == 1 && n8 == 1 && n9 == 1 &&  !(n5 == 0 || n7 == 0) -> 
  -((n5*j[p4a, -1 + n1, 1, n3, -1 + n4, 1 + n5, n6, 1 + n7, 1, 1, 1, 1, n12, 
       1, 1])/(-1 + n4)) + j[p4a, -1 + n1, 1, n3, -1 + n4, 1 + n5, n6, 
     1 + n7, 1, 2, 1, 1, n12, 1, 1]/(1 - n4) - j[p4a, -1 + n1, 1, n3, n4, n5, 
    n6, 1 + n7, 1, 1, 1, 1, n12, 1, 1] - 
   (n6*j[p4a, n1, 0, n3, -1 + n4, n5, 1 + n6, 1 + n7, 1, 1, 1, 1, n12, 1, 1])/
    (-1 + n4) + j[p4a, n1, 0, n3, n4, n5, n6, 1 + n7, 1, 1, 1, 1, n12, 1, 
    1] - (n6*j[p4a, n1, 1, -1 + n3, -1 + n4, n5, 1 + n6, 1 + n7, 1, 1, 1, 1, 
      n12, 1, 1])/(-1 + n4) + (n6*j[p4a, n1, 1, -1 + n3, -1 + n4, 1 + n5, 
      1 + n6, 1 + n7, 1, 1, 1, 1, n12, 1, 1])/(-1 + n4) - 
   j[p4a, n1, 1, -1 + n3, n4, n5, n6, 1 + n7, 1, 1, 1, 1, n12, 1, 1] + 
   j[p4a, n1, 1, -1 + n3, n4, 1 + n5, n6, 1 + n7, 1, 1, 1, 1, n12, 1, 1] + 
   j[p4a, n1, 1, n3, -1 + n4, n5, n6, 1 + n7, 1, 0, 1, 1, n12, 1, 2]/
    (-1 + n4) + (2*(2 - d + n4 + n5 + n6)*j[p4a, n1, 1, n3, -1 + n4, n5, n6, 
      1 + n7, 1, 1, 1, 1, n12, 1, 1])/(-1 + n4) + 
   j[p4a, n1, 1, n3, -1 + n4, n5, n6, 1 + n7, 1, 2, 1, 1, n12, 1, 0]/
    (-1 + n4) + (n6*j[p4a, n1, 1, n3, -1 + n4, n5, 1 + n6, n7, 1, 1, 1, 1, 
      n12, 1, 1])/(-1 + n4) + (n6*j[p4a, n1, 1, n3, -1 + n4, n5, 1 + n6, 
      1 + n7, 0, 1, 1, 1, n12, 1, 1])/(-1 + n4) + 
   (n6*j[p4a, n1, 1, n3, -1 + n4, n5, 1 + n6, 1 + n7, 1, 0, 1, 1, n12, 1, 1])/
    (-1 + n4) - (n6*j[p4a, n1, 1, n3, -1 + n4, n5, 1 + n6, 1 + n7, 1, 1, 0, 
      1, n12, 1, 1])/(-1 + n4) - 
   (n6*j[p4a, n1, 1, n3, -1 + n4, n5, 1 + n6, 1 + n7, 1, 1, 1, 1, -1 + n12, 
      1, 1])/(-1 + n4) + (n6*j[p4a, n1, 1, n3, -1 + n4, n5, 1 + n6, 1 + n7, 
      1, 1, 1, 1, n12, 0, 1])/(-1 + n4) + 
   (n6*j[p4a, n1, 1, n3, -1 + n4, n5, 1 + n6, 1 + n7, 1, 1, 1, 1, n12, 1, 0])/
    (-1 + n4) + (n6*j[p4a, n1, 1, n3, -1 + n4, n5, 1 + n6, 1 + n7, 1, 1, 1, 
      1, n12, 1, 1])/(-1 + n4) + 
   (n5*j[p4a, n1, 1, n3, -1 + n4, 1 + n5, n6, 1 + n7, 1, 0, 1, 1, n12, 1, 1])/
    (-1 + n4) - (n5*j[p4a, n1, 1, n3, -1 + n4, 1 + n5, n6, 1 + n7, 1, 1, 1, 
      1, n12, 0, 1])/(-1 + n4) + j[p4a, n1, 1, n3, -1 + n4, 1 + n5, n6, 
     1 + n7, 1, 1, 1, 1, n12, 0, 2]/(1 - n4) + 
   (n5*j[p4a, n1, 1, n3, -1 + n4, 1 + n5, n6, 1 + n7, 1, 1, 1, 1, n12, 1, 0])/
    (-1 + n4) + (n5*j[p4a, n1, 1, n3, -1 + n4, 1 + n5, n6, 1 + n7, 1, 1, 1, 
      1, n12, 1, 1])/(-1 + n4) + j[p4a, n1, 1, n3, -1 + n4, 1 + n5, n6, 
     1 + n7, 1, 2, 1, 1, n12, 1, 0]/(1 - n4) + 
   j[p4a, n1, 1, n3, -1 + n4, 1 + n5, n6, 1 + n7, 1, 2, 1, 1, n12, 1, 1]/
    (-1 + n4) - (n6*j[p4a, n1, 1, n3, -1 + n4, 1 + n5, 1 + n6, n7, 1, 1, 1, 
      1, n12, 1, 1])/(-1 + n4) - 
   (n6*j[p4a, n1, 1, n3, -1 + n4, 1 + n5, 1 + n6, 1 + n7, 0, 1, 1, 1, n12, 1, 
      1])/(-1 + n4) + (n6*j[p4a, n1, 1, n3, -1 + n4, 1 + n5, 1 + n6, 1 + n7, 
      1, 1, 1, 1, -1 + n12, 1, 1])/(-1 + n4) - 
   (n6*j[p4a, n1, 1, n3, -1 + n4, 1 + n5, 1 + n6, 1 + n7, 1, 1, 1, 1, n12, 0, 
      1])/(-1 + n4) - (n6*j[p4a, n1, 1, n3, -1 + n4, 1 + n5, 1 + n6, 1 + n7, 
      1, 1, 1, 1, n12, 1, 0])/(-1 + n4) + 
   ((1 + n5)*j[p4a, n1, 1, n3, -1 + n4, 2 + n5, n6, 1 + n7, 1, 1, 1, 1, n12, 
      0, 1])/(-1 + n4) + ((-1 - n5)*j[p4a, n1, 1, n3, -1 + n4, 2 + n5, n6, 
      1 + n7, 1, 1, 1, 1, n12, 1, 0])/(-1 + n4) - 
   j[p4a, n1, 1, n3, n4, n5, n6, 1 + n7, 0, 1, 1, 1, n12, 1, 1] + 
   j[p4a, n1, 1, n3, n4, n5, n6, 1 + n7, 1, 0, 1, 1, n12, 1, 1] - 
   j[p4a, n1, 1, n3, n4, n5, n6, 1 + n7, 1, 1, 0, 1, n12, 1, 1] + 
   j[p4a, n1, 1, n3, n4, n5, n6, 1 + n7, 1, 1, 1, 0, n12, 1, 1] + 
   j[p4a, n1, 1, n3, n4, n5, n6, 1 + n7, 1, 1, 1, 1, n12, 1, 0] + 
   j[p4a, n1, 1, n3, n4, n5, n6, 1 + n7, 1, 1, 1, 1, n12, 1, 1] - 
   j[p4a, n1, 1, n3, n4, 1 + n5, n6, n7, 1, 1, 1, 1, n12, 1, 1] - 
   j[p4a, n1, 1, n3, n4, 1 + n5, n6, 1 + n7, 1, 1, 1, 1, n12, 1, 0], 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, (n8_)?Positive, 
    (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n10 == 1 && n11 == 1 && n13 == 1 && 
    n14 == 1 && n2 == 1 && n7 == 0 && n8 == 1 && n9 == 1 && 
     !(n12 == -1 || n12 == 0) -> 
  -j[p4a, -1 + n1, 0, n3, n4, n5, n6, 0, 1, 1, 1, 1, 2 + n12, 1, 1]/2 - 
   (n4*j[p4a, -1 + n1, 1, -2 + n3, 1 + n4, n5, n6, 0, 1, 1, 1, 1, 2 + n12, 1, 
      1])/(2*(-1 + n3)) + ((7 - d + 2*n12 - n3 + n4)*
     j[p4a, -1 + n1, 1, -1 + n3, n4, n5, n6, 0, 1, 1, 1, 1, 2 + n12, 1, 1])/
    (2*(-1 + n3)) - j[p4a, -1 + n1, 1, -1 + n3, n4, n5, n6, 0, 1, 1, 1, 2, 
     2 + n12, 1, 1]/(2*(-1 + n3)) - j[p4a, -1 + n1, 1, -1 + n3, n4, n5, n6, 
     0, 2, 1, 1, 1, 2 + n12, 0, 1]/(2*(-1 + n3)) - 
   (n4*j[p4a, -1 + n1, 1, -1 + n3, 1 + n4, -1 + n5, n6, 0, 1, 1, 1, 1, 
      2 + n12, 1, 1])/(2*(-1 + n3)) - 
   (n4*j[p4a, -1 + n1, 1, -1 + n3, 1 + n4, n5, -1 + n6, 0, 1, 1, 1, 1, 
      2 + n12, 1, 1])/(2*(-1 + n3)) + 
   (n4*j[p4a, -1 + n1, 1, -1 + n3, 1 + n4, n5, n6, -1, 1, 1, 1, 1, 2 + n12, 
      1, 1])/(2*(-1 + n3)) + (n4*j[p4a, -1 + n1, 1, -1 + n3, 1 + n4, n5, n6, 
      0, 0, 1, 1, 1, 2 + n12, 1, 1])/(2*(-1 + n3)) - 
   (n4*j[p4a, -1 + n1, 1, -1 + n3, 1 + n4, n5, n6, 0, 1, 1, 1, 1, 1 + n12, 1, 
      1])/(2*(-1 + n3)) + (n4*j[p4a, -1 + n1, 1, -1 + n3, 1 + n4, n5, n6, 0, 
      1, 1, 1, 1, 2 + n12, 1, 0])/(2*(-1 + n3)) + 
   j[p4a, -1 + n1, 1, n3, n4, n5, n6, -1, 1, 1, 1, 1, 2 + n12, 1, 1] + 
   j[p4a, -1 + n1, 1, n3, n4, n5, n6, 0, 0, 1, 1, 1, 2 + n12, 1, 1] - 
   j[p4a, -1 + n1, 1, n3, n4, n5, n6, 0, 1, 1, 1, 1, 1 + n12, 1, 1] + 
   (n4*j[p4a, n1, 0, -1 + n3, 1 + n4, n5, n6, 0, 1, 1, 1, 1, 1 + n12, 1, 1])/
    (2*(-1 + n3)) - j[p4a, n1, 0, n3, n4, n5, n6, 0, 1, 1, 1, 1, 1 + n12, 1, 
     1]/2 + ((1 + n12)*j[p4a, n1, 1, -1 + n3, n4, n5, n6, 0, 0, 1, 1, 1, 
      2 + n12, 1, 1])/(2*(-1 + n3)) + j[p4a, n1, 1, -1 + n3, n4, n5, n6, 0, 
     0, 1, 1, 2, 1 + n12, 1, 1]/(2*(-1 + n3)) + 
   ((1 + n12)*j[p4a, n1, 1, -1 + n3, n4, n5, n6, 0, 1, 1, 1, 0, 2 + n12, 1, 
      1])/(2*(-1 + n3)) + ((4 - d + n12 + n4)*j[p4a, n1, 1, -1 + n3, n4, n5, 
      n6, 0, 1, 1, 1, 1, 1 + n12, 1, 1])/(-1 + n3) + 
   ((-1 - n12)*j[p4a, n1, 1, -1 + n3, n4, n5, n6, 0, 1, 1, 1, 1, 2 + n12, 0, 
      1])/(2*(-1 + n3)) + ((-1 - n12)*j[p4a, n1, 1, -1 + n3, n4, n5, n6, 0, 
      1, 1, 1, 1, 2 + n12, 1, 1])/(2*(-1 + n3)) + 
   j[p4a, n1, 1, -1 + n3, n4, n5, n6, 0, 2, 1, 1, 0, 1 + n12, 1, 1]/
    (2*(-1 + n3)) - (n4*j[p4a, n1, 1, -1 + n3, 1 + n4, -1 + n5, n6, 0, 1, 1, 
      1, 1, 1 + n12, 1, 1])/(2*(-1 + n3)) - 
   (n4*j[p4a, n1, 1, -1 + n3, 1 + n4, n5, -1 + n6, 0, 1, 1, 1, 1, 1 + n12, 1, 
      1])/(-1 + n3) + (n4*j[p4a, n1, 1, -1 + n3, 1 + n4, n5, n6, 0, 0, 1, 1, 
      1, 1 + n12, 1, 1])/(2*(-1 + n3)) + 
   (n4*j[p4a, n1, 1, -1 + n3, 1 + n4, n5, n6, 0, 1, 0, 1, 1, 1 + n12, 1, 1])/
    (2*(-1 + n3)) - (n4*j[p4a, n1, 1, -1 + n3, 1 + n4, n5, n6, 0, 1, 1, 0, 1, 
      1 + n12, 1, 1])/(2*(-1 + n3)) + 
   (n4*j[p4a, n1, 1, -1 + n3, 1 + n4, n5, n6, 0, 1, 1, 1, 0, 1 + n12, 1, 1])/
    (2*(-1 + n3)) + j[p4a, n1, 1, n3, n4, n5, n6, -1, 1, 1, 1, 1, 1 + n12, 1, 
    1] + (3*j[p4a, n1, 1, n3, n4, n5, n6, 0, 0, 1, 1, 1, 1 + n12, 1, 1])/2 - 
   j[p4a, n1, 1, n3, n4, n5, n6, 0, 1, 1, 0, 1, 1 + n12, 1, 1]/2 + 
   j[p4a, n1, 1, n3, n4, n5, n6, 0, 1, 1, 1, 0, 1 + n12, 1, 1]/2 + 
   j[p4a, n1, 1, n3, n4, n5, n6, 0, 1, 1, 1, 1, 1 + n12, 0, 1]/2 + 
   j[p4a, n1, 1, n3, n4, n5, n6, 0, 1, 1, 1, 1, 1 + n12, 1, 1]/2, 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, (n8_)?Positive, 
    (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n10 == 1 && n11 == 1 && n13 == 1 && 
    n14 == 1 && n2 == 1 && n5 == 0 && n8 == 1 && n9 == 1 && 
     !(n12 == 0 || n7 == 0) -> 
  -(n6*j[p4a, -1 + n1, 0, -1 + n3, n4, 0, 1 + n6, 1 + n7, 1, 1, 1, 1, 
       1 + n12, 1, 1])/(2*(-1 + n3)) - 
   (n6*j[p4a, -1 + n1, 1, -1 + n3, -1 + n4, 0, 1 + n6, 1 + n7, 1, 1, 1, 1, 
      1 + n12, 1, 1])/(2*(-1 + n3)) + 
   (n6*j[p4a, -1 + n1, 1, -1 + n3, n4, -1, 1 + n6, 1 + n7, 1, 1, 1, 1, 
      1 + n12, 1, 1])/(2*(-1 + n3)) + 
   ((-3 + d - n3 - n4 - 2*n7)*j[p4a, -1 + n1, 1, -1 + n3, n4, 0, n6, 1 + n7, 
      1, 1, 1, 1, 1 + n12, 1, 1])/(2*(-1 + n3)) + 
   j[p4a, -1 + n1, 1, -1 + n3, n4, 0, n6, 1 + n7, 1, 1, 2, 0, 1 + n12, 1, 1]/
    (2*(-1 + n3)) + (n6*j[p4a, -1 + n1, 1, -1 + n3, n4, 0, 1 + n6, 1 + n7, 0, 
      1, 1, 1, 1 + n12, 1, 1])/(2*(-1 + n3)) + 
   (n4*j[p4a, -1 + n1, 1, -1 + n3, 1 + n4, -1, n6, 1 + n7, 1, 1, 1, 1, 
      1 + n12, 1, 1])/(2*(-1 + n3)) - 
   (n4*j[p4a, -1 + n1, 1, -1 + n3, 1 + n4, 0, n6, n7, 1, 1, 1, 1, 1 + n12, 1, 
      1])/(-1 + n3) - j[p4a, -1 + n1, 1, n3, n4, 0, n6, n7, 1, 1, 1, 1, 
    1 + n12, 1, 1] + j[p4a, -1 + n1, 1, n3, n4, 0, n6, 1 + n7, 1, 1, 1, 1, 
     1 + n12, 0, 1]/2 + j[p4a, -1 + n1, 2, -1 + n3, n4, 0, n6, 1 + n7, 0, 1, 
     1, 1, 1 + n12, 1, 1]/(2*(-1 + n3)) - 
   j[p4a, n1, 0, -1 + n3, n4, 0, n6, n7, 1, 1, 2, 1, 1 + n12, 1, 1]/
    (2*(-1 + n3)) - (n7*j[p4a, n1, 0, -1 + n3, n4, 0, n6, 1 + n7, 1, 1, 1, 1, 
      1 + n12, 1, 1])/(2*(-1 + n3)) - 
   (n6*j[p4a, n1, 0, -1 + n3, n4, 0, 1 + n6, n7, 1, 1, 1, 1, 1 + n12, 1, 1])/
    (2*(-1 + n3)) + (n4*j[p4a, n1, 0, -1 + n3, 1 + n4, 0, n6, n7, 1, 1, 1, 1, 
      1 + n12, 1, 1])/(2*(-1 + n3)) - j[p4a, n1, 0, n3, n4, 0, n6, n7, 1, 1, 
     1, 1, 1 + n12, 1, 1]/2 + (n6*j[p4a, n1, 1, -1 + n3, n4, -1, 1 + n6, n7, 
      1, 1, 1, 1, 1 + n12, 1, 1])/(2*(-1 + n3)) + 
   ((-2 + d - n3 - n6 - n7)*j[p4a, n1, 1, -1 + n3, n4, 0, n6, n7, 1, 1, 1, 1, 
      1 + n12, 1, 1])/(-1 + n3) + 
   (n7*j[p4a, n1, 1, -1 + n3, n4, 0, n6, 1 + n7, 0, 1, 1, 1, 1 + n12, 1, 1])/
    (2*(-1 + n3)) - (n7*j[p4a, n1, 1, -1 + n3, n4, 0, n6, 1 + n7, 1, 1, 0, 1, 
      1 + n12, 1, 1])/(2*(-1 + n3)) + 
   (n7*j[p4a, n1, 1, -1 + n3, n4, 0, n6, 1 + n7, 1, 1, 1, 0, 1 + n12, 1, 1])/
    (2*(-1 + n3)) + (n6*j[p4a, n1, 1, -1 + n3, n4, 0, 1 + n6, n7, 1, 0, 1, 1, 
      1 + n12, 1, 1])/(2*(-1 + n3)) - 
   (n6*j[p4a, n1, 1, -1 + n3, n4, 0, 1 + n6, n7, 1, 1, 0, 1, 1 + n12, 1, 1])/
    (2*(-1 + n3)) + (n4*j[p4a, n1, 1, -1 + n3, 1 + n4, -1, n6, n7, 1, 1, 1, 
      1, 1 + n12, 1, 1])/(2*(-1 + n3)) - 
   (n4*j[p4a, n1, 1, -1 + n3, 1 + n4, 0, -1 + n6, n7, 1, 1, 1, 1, 1 + n12, 1, 
      1])/(-1 + n3) - (n4*j[p4a, n1, 1, -1 + n3, 1 + n4, 0, n6, -1 + n7, 1, 
      1, 1, 1, 1 + n12, 1, 1])/(-1 + n3) + 
   (n4*j[p4a, n1, 1, -1 + n3, 1 + n4, 0, n6, n7, 0, 1, 1, 1, 1 + n12, 1, 1])/
    (2*(-1 + n3)) + (n4*j[p4a, n1, 1, -1 + n3, 1 + n4, 0, n6, n7, 1, 0, 1, 1, 
      1 + n12, 1, 1])/(2*(-1 + n3)) - 
   (n4*j[p4a, n1, 1, -1 + n3, 1 + n4, 0, n6, n7, 1, 1, 0, 1, 1 + n12, 1, 1])/
    (2*(-1 + n3)) + (n4*j[p4a, n1, 1, -1 + n3, 1 + n4, 0, n6, n7, 1, 1, 1, 0, 
      1 + n12, 1, 1])/(2*(-1 + n3)) + 
   (3*j[p4a, n1, 1, n3, n4, 0, n6, n7, 0, 1, 1, 1, 1 + n12, 1, 1])/2 - 
   j[p4a, n1, 1, n3, n4, 0, n6, n7, 1, 1, 0, 1, 1 + n12, 1, 1]/2 + 
   j[p4a, n1, 1, n3, n4, 0, n6, n7, 1, 1, 1, 0, 1 + n12, 1, 1]/2 + 
   (3*j[p4a, n1, 1, n3, n4, 0, n6, n7, 1, 1, 1, 1, 1 + n12, 0, 1])/2 + 
   j[p4a, n1, 1, n3, n4, 0, n6, n7, 1, 1, 1, 1, 1 + n12, 1, 1]/2 - 
   j[p4a, n1, 2, -1 + n3, n4, 0, n6, n7, 1, 1, 0, 1, 1 + n12, 1, 1]/
    (2*(-1 + n3)), j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?NonPositive, 
    (n7_)?NonPositive, (n8_)?Positive, (n9_)?Positive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == -1 && n13 == 1 && n14 == 1 && n2 == 1 && 
    n7 == 0 && n8 == 1 && n9 == 1 && n6 != 0 -> 
  ((-28 + 24*d - 5*d^2 + 24*n1 - 8*d*n1 + 4*n1^2 - 32*n3 + 12*d*n3 - 4*n3^2 - 
      32*n4 + 12*d*n4 - 8*n3*n4 - 4*n4^2 - 4*n5 + 2*d*n5 + 4*n1*n5 - 
      4*n3*n5 - 4*n4*n5 - 36*n6 + 14*d*n6 + 4*n1*n6 - 12*n3*n6 - 12*n4*n6 - 
      4*n5*n6 - 8*n6^2)*j[p4a, -1 + n1, 0, n3, n4, n5, 1 + n6, 0, 1, 1, 1, 1, 
      0, 1, 1])/(2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + ((-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*
     j[p4a, -1 + n1, 0, n3, n4, n5, 1 + n6, 0, 1, 1, 2, 1, -1, 1, 1])/
    (2*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((34 - 33*d + 7*d^2 - 18*n1 + 4*d*n1 - 4*n1^2 + 36*n3 - 12*d*n3 + 
      4*n1*n3 + 2*n3^2 + 40*n4 - 15*d*n4 + 2*n1*n4 + 8*n3*n4 + 6*n4^2 + 
      6*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 32*n6 - 13*d*n6 - 
      2*n1*n6 + 10*n3*n6 + 12*n4*n6 + 4*n5*n6 + 6*n6^2)*
     j[p4a, -1 + n1, 0, n3, n4, n5, 1 + n6, 0, 2, 1, 1, 1, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + ((-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*
     (1 + n6)*j[p4a, -1 + n1, 0, n3, n4, n5, 2 + n6, 0, 1, 1, 1, 1, -1, 1, 
      1])/(2*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   (n5*j[p4a, -1 + n1, 0, n3, n4, 1 + n5, 1 + n6, 0, 1, 1, 1, 1, -1, 1, 1])/
    (2*(3 - d + n4 + n5 + n6)) + 
   (n3*j[p4a, -1 + n1, 0, 1 + n3, n4, n5, 1 + n6, 0, 1, 1, 1, 1, -1, 1, 1])/
    (2*(-3 + d - n4 - n5 - n6)) + 
   ((-28 + 24*d - 5*d^2 + 24*n1 - 8*d*n1 + 4*n1^2 - 32*n3 + 12*d*n3 - 
      4*n3^2 - 32*n4 + 12*d*n4 - 8*n3*n4 - 4*n4^2 - 4*n5 + 2*d*n5 + 4*n1*n5 - 
      4*n3*n5 - 4*n4*n5 - 36*n6 + 14*d*n6 + 4*n1*n6 - 12*n3*n6 - 12*n4*n6 - 
      4*n5*n6 - 8*n6^2)*j[p4a, -1 + n1, 1, -1 + n3, n4, n5, 1 + n6, 0, 1, 1, 
      1, 1, 0, 1, 1])/(2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*(1 + n6)*
     j[p4a, -1 + n1, 1, -1 + n3, n4, n5, 2 + n6, 0, 1, 1, 1, 1, -1, 1, 1])/
    (2*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   (n4*(10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*j[p4a, -1 + n1, 1, -1 + n3, 
      1 + n4, n5, 1 + n6, 0, 1, 1, 1, 1, -1, 1, 1])/
    (2*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((28 - 24*d + 5*d^2 - 24*n1 + 8*d*n1 - 4*n1^2 + 32*n3 - 12*d*n3 + 4*n3^2 + 
      32*n4 - 12*d*n4 + 8*n3*n4 + 4*n4^2 + 4*n5 - 2*d*n5 - 4*n1*n5 + 
      4*n3*n5 + 4*n4*n5 + 36*n6 - 14*d*n6 - 4*n1*n6 + 12*n3*n6 + 12*n4*n6 + 
      4*n5*n6 + 8*n6^2)*j[p4a, -1 + n1, 1, n3, n4, n5, 1 + n6, -1, 1, 1, 1, 
      1, 0, 1, 1])/((-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - j[p4a, -1 + n1, 1, n3, n4, n5, 1 + n6, 0, 0, 
     1, 1, 1, -1, 2, 1]/(2*(-3 + d - n4 - n5 - n6)) + 
   ((28 - 24*d + 5*d^2 - 24*n1 + 8*d*n1 - 4*n1^2 + 32*n3 - 12*d*n3 + 4*n3^2 + 
      32*n4 - 12*d*n4 + 8*n3*n4 + 4*n4^2 + 4*n5 - 2*d*n5 - 4*n1*n5 + 
      4*n3*n5 + 4*n4*n5 + 36*n6 - 14*d*n6 - 4*n1*n6 + 12*n3*n6 + 12*n4*n6 + 
      4*n5*n6 + 8*n6^2)*j[p4a, -1 + n1, 1, n3, n4, n5, 1 + n6, 0, 0, 1, 1, 1, 
      0, 1, 1])/(2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + ((10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*
     j[p4a, -1 + n1, 1, n3, n4, n5, 1 + n6, 0, 0, 1, 2, 1, -1, 1, 1])/
    (2*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((28 - 24*d + 5*d^2 - 24*n1 + 8*d*n1 - 4*n1^2 + 32*n3 - 12*d*n3 + 4*n3^2 + 
      32*n4 - 12*d*n4 + 8*n3*n4 + 4*n4^2 + 4*n5 - 2*d*n5 - 4*n1*n5 + 
      4*n3*n5 + 4*n4*n5 + 36*n6 - 14*d*n6 - 4*n1*n6 + 12*n3*n6 + 12*n4*n6 + 
      4*n5*n6 + 8*n6^2)*j[p4a, -1 + n1, 1, n3, n4, n5, 1 + n6, 0, 1, 1, 0, 2, 
      -1, 1, 1])/(2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((148 - 224*d + 107*d^2 - 16*d^3 + 8*n1 - 42*d*n1 + 15*d^2*n1 - 24*n1^2 + 
      4*d*n1^2 - 4*n1^3 + 164*n3 - 128*d*n3 + 23*d^2*n3 + 80*n1*n3 - 
      34*d*n1*n3 + 8*n1^2*n3 + 12*n3^2 + 8*n1*n3^2 - 4*n3^3 + 204*n4 - 
      178*d*n4 + 38*d^2*n4 + 68*n1*n4 - 30*d*n1*n4 + 4*n1^2*n4 + 80*n3*n4 - 
      32*d*n3*n4 + 16*n1*n3*n4 + 4*n3^2*n4 + 60*n4^2 - 26*d*n4^2 + 
      12*n1*n4^2 + 12*n3*n4^2 + 4*n4^3 + 56*n5 - 72*d*n5 + 20*d^2*n5 - 
      6*d*n1*n5 - 4*n1^2*n5 + 64*n3*n5 - 30*d*n3*n5 + 12*n1*n3*n5 + 
      8*n3^2*n5 + 64*n4*n5 - 30*d*n4*n5 + 12*n1*n4*n5 + 16*n3*n4*n5 + 
      8*n4^2*n5 + 4*n5^2 - 4*d*n5^2 + 4*n3*n5^2 + 4*n4*n5^2 + 108*n6 - 
      92*d*n6 + 21*d^2*n6 + 20*n1*n6 - 10*d*n1*n6 + 48*n3*n6 - 22*d*n3*n6 + 
      8*n1*n3*n6 + 4*n3^2*n6 + 68*n4*n6 - 32*d*n4*n6 + 12*n1*n4*n6 + 
      16*n3*n4*n6 + 8*n4^2*n6 + 20*n5*n6 - 12*d*n5*n6 + 4*n1*n5*n6 + 
      8*n3*n5*n6 + 8*n4*n5*n6 + 28*n6^2 - 12*d*n6^2 + 8*n3*n6^2 + 8*n4*n6^2 + 
      4*n6^3)*j[p4a, -1 + n1, 1, n3, n4, n5, 1 + n6, 0, 1, 1, 1, 1, -1, 1, 
      1])/(2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((28 - 24*d + 5*d^2 - 24*n1 + 8*d*n1 - 4*n1^2 + 32*n3 - 12*d*n3 + 4*n3^2 + 
      32*n4 - 12*d*n4 + 8*n3*n4 + 4*n4^2 + 4*n5 - 2*d*n5 - 4*n1*n5 + 
      4*n3*n5 + 4*n4*n5 + 36*n6 - 14*d*n6 - 4*n1*n6 + 12*n3*n6 + 12*n4*n6 + 
      4*n5*n6 + 8*n6^2)*j[p4a, -1 + n1, 1, n3, n4, n5, 1 + n6, 0, 1, 1, 1, 1, 
      0, 0, 1])/(2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + ((10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*
     j[p4a, -1 + n1, 1, n3, n4, n5, 1 + n6, 0, 1, 1, 1, 2, -1, 1, 1])/
    (2*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*j[p4a, -1 + n1, 1, n3, n4, n5, 
      1 + n6, 0, 1, 1, 2, 1, -1, 0, 1])/(2*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + ((10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*
     j[p4a, -1 + n1, 1, n3, n4, n5, 1 + n6, 0, 1, 1, 2, 1, -1, 1, 1])/
    (2*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((-12 + 4*d + d^2 + 16*n1 - 4*d*n1 + 4*n1^2 - 8*n3 - 2*d*n3 - 4*n1*n3 + 
      4*n3^2 - 16*n4 + 4*d*n4 - 4*n4^2 - 4*n5 + 2*d*n5 + 4*n1*n5 - 4*n3*n5 - 
      4*n4*n5 - 20*n6 + 4*d*n6 - 4*n4*n6 - 4*n5*n6 - 4*n6^2)*
     j[p4a, -1 + n1, 1, n3, n4, n5, 1 + n6, 0, 1, 2, 1, 1, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - j[p4a, -1 + n1, 1, n3, n4, n5, 1 + n6, 0, 2, 
     1, 1, 1, -1, 0, 1]/(2*(-3 + d - n4 - n5 - n6)) - 
   ((-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*(1 + n6)*
     j[p4a, -1 + n1, 1, n3, n4, n5, 2 + n6, -1, 1, 1, 1, 1, -1, 1, 1])/
    (2*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   ((-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*(1 + n6)*
     j[p4a, -1 + n1, 1, n3, n4, n5, 2 + n6, 0, 0, 1, 1, 1, -1, 1, 1])/
    (2*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*(1 + n6)*
     j[p4a, -1 + n1, 1, n3, n4, n5, 2 + n6, 0, 1, 1, 1, 1, -2, 1, 1])/
    (2*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   ((-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*(1 + n6)*
     j[p4a, -1 + n1, 1, n3, n4, n5, 2 + n6, 0, 1, 1, 1, 1, -1, 0, 1])/
    (2*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   ((-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*(1 + n6)*
     j[p4a, -1 + n1, 1, n3, n4, n5, 2 + n6, 0, 1, 1, 1, 1, -1, 1, 0])/
    (2*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   (n5*(8 - 2*d + 2*n1 - n3 + 2*n4 + 2*n5 + n6)*j[p4a, -1 + n1, 1, n3, n4, 
      1 + n5, 1 + n6, 0, 1, 1, 1, 1, -1, 0, 1])/(2*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + (n5*(8 - 2*d + 2*n1 - n3 + 2*n4 + 2*n5 + n6)*
     j[p4a, -1 + n1, 1, n3, n4, 1 + n5, 1 + n6, 0, 1, 1, 1, 1, -1, 1, 0])/
    (2*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   (n4*j[p4a, -1 + n1, 1, n3, 1 + n4, n5, 1 + n6, 0, 0, 1, 1, 1, -1, 1, 1])/
    (2*(3 - d + n4 + n5 + n6)) + (n4*(8 - 2*d + 2*n1 - n3 + 2*n4 + 2*n5 + n6)*
     j[p4a, -1 + n1, 1, n3, 1 + n4, n5, 1 + n6, 0, 1, 1, 1, 1, -1, 1, 0])/
    (2*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   (n3*j[p4a, -1 + n1, 1, 1 + n3, n4, n5, 1 + n6, 0, 0, 1, 1, 1, -1, 1, 1])/
    (-3 + d - n4 - n5 - n6) - 
   (n3*(-18 + 13*d - d^2 + 10*n1 + 4*n1^2 - 12*n3 - 2*d*n3 - 8*n1*n3 + 
      6*n3^2 - 24*n4 + 7*d*n4 - 2*n1*n4 - 6*n4^2 - 6*n5 + 4*d*n5 + 4*n1*n5 - 
      6*n3*n5 - 6*n4*n5 - 16*n6 + 3*d*n6 - 2*n1*n6 + 2*n3*n6 - 4*n4*n6 - 
      4*n5*n6 - 2*n6^2)*j[p4a, -1 + n1, 1, 1 + n3, n4, n5, 1 + n6, 0, 1, 1, 
      1, 1, -1, 0, 1])/(2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((-22 + 29*d - 8*d^2 + 2*n1 - 28*n3 + 14*d*n3 - 6*n3^2 - 24*n4 + 11*d*n4 - 
      2*n1*n4 - 8*n3*n4 - 2*n4^2 - 2*n5 + 2*d*n5 - 2*n3*n5 - 2*n4*n5 - 
      12*n6 + 9*d*n6 + 2*n1*n6 - 10*n3*n6 - 8*n4*n6 - 2*n6^2)*
     j[p4a, -1 + n1, 2, n3, n4, n5, 1 + n6, 0, 0, 1, 1, 1, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + j[p4a, -1 + n1, 2, n3, n4, n5, 1 + n6, 0, 1, 
     1, 1, 1, -1, 0, 1]/(3 - d + n4 + n5 + n6) + 
   ((-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*j[p4a, n1, 0, -1 + n3, n4, n5, 
      1 + n6, 0, 1, 1, 2, 1, -1, 1, 1])/(2*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((1 + n6)*(26 - 23*d + 4*d^2 - 14*n1 + 2*d*n1 - 4*n1^2 + 24*n3 - 5*d*n3 + 
      6*n1*n3 - 2*n3^2 + 32*n4 - 11*d*n4 + 2*n1*n4 + 4*n3*n4 + 6*n4^2 + 
      6*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 24*n6 - 8*d*n6 + 
      4*n3*n6 + 8*n4*n6 + 4*n5*n6 + 4*n6^2)*j[p4a, n1, 0, -1 + n3, n4, n5, 
      2 + n6, 0, 1, 1, 1, 1, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + (n5*(10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*
     j[p4a, n1, 0, -1 + n3, n4, 1 + n5, 1 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (4*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   (n4*j[p4a, n1, 0, -1 + n3, 1 + n4, n5, 1 + n6, 0, 1, 1, 1, 1, -1, 1, 1])/
    (2*(3 - d + n4 + n5 + n6)) + 
   ((1 + n6)*(14 - 19*d + 5*d^2 + 2*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 2*n1*n3 + 
      2*n3^2 + 16*n4 - 7*d*n4 + 2*n1*n4 + 4*n3*n4 + 2*n4^2 + 2*n5 - 2*d*n5 + 
      2*n3*n5 + 2*n4*n5 + 4*n6 - 4*d*n6 + 4*n3*n6 + 4*n4*n6)*
     j[p4a, n1, 0, n3, -1 + n4, n5, 2 + n6, 0, 1, 1, 1, 1, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - 
   ((1 + n6)*(26 - 23*d + 4*d^2 - 14*n1 + 2*d*n1 - 4*n1^2 + 24*n3 - 5*d*n3 + 
      6*n1*n3 - 2*n3^2 + 32*n4 - 11*d*n4 + 2*n1*n4 + 4*n3*n4 + 6*n4^2 + 
      6*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 24*n6 - 8*d*n6 + 
      4*n3*n6 + 8*n4*n6 + 4*n5*n6 + 4*n6^2)*j[p4a, n1, 0, n3, n4, -1 + n5, 
      2 + n6, 0, 1, 1, 1, 1, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((-26 + 23*d - 4*d^2 + 14*n1 - 2*d*n1 + 4*n1^2 - 24*n3 + 5*d*n3 - 
      6*n1*n3 + 2*n3^2 - 32*n4 + 11*d*n4 - 2*n1*n4 - 4*n3*n4 - 6*n4^2 - 
      6*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 6*n4*n5 - 24*n6 + 8*d*n6 - 
      4*n3*n6 - 8*n4*n6 - 4*n5*n6 - 4*n6^2)*j[p4a, n1, 0, n3, n4, n5, 1 + n6, 
      -1, 1, 1, 2, 1, -1, 1, 1])/(2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((-62 + 57*d - 12*d^2 + 48*n1 - 21*d*n1 + 2*d^2*n1 + 14*n1^2 - 4*d*n1^2 - 
      34*n3 - 9*d*n3 + 7*d^2*n3 - 18*n1*n3 + 4*d*n1*n3 + 30*n3^2 - 
      12*d*n3^2 + 2*n1*n3^2 + 2*n3^3 - 86*n4 + 46*d*n4 - 5*d^2*n4 + 4*n1*n4 - 
      d*n1*n4 + 2*n1^2*n4 + 8*n3*n4 - 8*d*n3*n4 + 6*n3^2*n4 - 26*n4^2 + 
      7*d*n4^2 + 2*n3*n4^2 - 2*n4^3 - 10*n5 + 6*d*n5 + 10*n1*n5 - 2*d*n1*n5 - 
      4*n3*n5 - 4*d*n3*n5 - 2*n1*n3*n5 + 6*n3^2*n5 - 12*n4*n5 + 2*d*n4*n5 + 
      2*n1*n4*n5 + 4*n3*n4*n5 - 2*n4^2*n5 - 76*n6 + 37*d*n6 - 3*d^2*n6 + 
      6*n1*n6 - d*n1*n6 + 2*n1^2*n6 - 2*n3*n6 - 6*d*n3*n6 - 2*n1*n3*n6 + 
      6*n3^2*n6 - 36*n4*n6 + 8*d*n4*n6 + 4*n3*n4*n6 - 4*n4^2*n6 - 8*n5*n6 + 
      4*n3*n5*n6 - 22*n6^2 + 5*d*n6^2 - 4*n4*n6^2 - 2*n6^3)*
     j[p4a, n1, 0, n3, n4, n5, 1 + n6, 0, 1, 1, 1, 1, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - j[p4a, n1, 0, n3, n4, n5, 1 + n6, 0, 1, 1, 1, 
     1, -1, 1, 2]/(2*(-3 + d - n4 - n5 - n6)) + 
   ((28 - 24*d + 5*d^2 - 24*n1 + 8*d*n1 - 4*n1^2 + 72*n3 - 54*d*n3 + 
      9*d^2*n3 - 12*n1*n3 - 4*n1^2*n3 + 44*n3^2 - 12*d*n3^2 + 8*n1*n3^2 + 
      32*n4 - 12*d*n4 + 56*n3*n4 - 18*d*n3*n4 + 4*n1*n3*n4 + 8*n3^2*n4 + 
      4*n4^2 + 8*n3*n4^2 + 4*n5 - 2*d*n5 - 4*n1*n5 + 12*n3*n5 - 6*d*n3*n5 - 
      4*n1*n3*n5 + 8*n3^2*n5 + 4*n4*n5 + 8*n3*n4*n5 + 36*n6 - 14*d*n6 - 
      4*n1*n6 + 40*n3*n6 - 12*d*n3*n6 + 8*n3^2*n6 + 12*n4*n6 + 12*n3*n4*n6 + 
      4*n5*n6 + 4*n3*n5*n6 + 8*n6^2 + 4*n3*n6^2)*j[p4a, n1, 0, n3, n4, n5, 
      1 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/(4*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 
      2*n6)*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*j[p4a, n1, 0, n3, n4, n5, 1 + n6, 
      0, 1, 1, 2, 1, -2, 1, 1])/(2*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((-14 + 19*d - 5*d^2 - 2*n1 + 2*d*n1 - 16*n3 + 7*d*n3 - 2*n1*n3 - 2*n3^2 - 
      16*n4 + 7*d*n4 - 2*n1*n4 - 4*n3*n4 - 2*n4^2 - 2*n5 + 2*d*n5 - 2*n3*n5 - 
      2*n4*n5 - 4*n6 + 4*d*n6 - 4*n3*n6 - 4*n4*n6)*j[p4a, n1, 0, n3, n4, n5, 
      1 + n6, 0, 1, 2, 1, 1, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((34 - 33*d + 7*d^2 - 18*n1 + 4*d*n1 - 4*n1^2 + 36*n3 - 12*d*n3 + 
      4*n1*n3 + 2*n3^2 + 40*n4 - 15*d*n4 + 2*n1*n4 + 8*n3*n4 + 6*n4^2 + 
      6*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 32*n6 - 13*d*n6 - 
      2*n1*n6 + 10*n3*n6 + 12*n4*n6 + 4*n5*n6 + 6*n6^2)*
     j[p4a, n1, 0, n3, n4, n5, 1 + n6, 0, 2, 1, 1, 1, -2, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + ((10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*
     j[p4a, n1, 0, n3, n4, n5, 1 + n6, 0, 2, 1, 1, 1, -1, 1, 1])/
    (4*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   ((1 + n6)*(26 - 23*d + 4*d^2 - 14*n1 + 2*d*n1 - 4*n1^2 + 24*n3 - 5*d*n3 + 
      6*n1*n3 - 2*n3^2 + 32*n4 - 11*d*n4 + 2*n1*n4 + 4*n3*n4 + 6*n4^2 + 
      6*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 24*n6 - 8*d*n6 + 
      4*n3*n6 + 8*n4*n6 + 4*n5*n6 + 4*n6^2)*j[p4a, n1, 0, n3, n4, n5, 2 + n6, 
      -1, 1, 1, 1, 1, -1, 1, 1])/(2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((1 + n6)*(26 - 23*d + 4*d^2 - 14*n1 + 2*d*n1 - 4*n1^2 + 24*n3 - 5*d*n3 + 
      6*n1*n3 - 2*n3^2 + 32*n4 - 11*d*n4 + 2*n1*n4 + 4*n3*n4 + 6*n4^2 + 
      6*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 24*n6 - 8*d*n6 + 
      4*n3*n6 + 8*n4*n6 + 4*n5*n6 + 4*n6^2)*j[p4a, n1, 0, n3, n4, n5, 2 + n6, 
      0, 1, 1, 1, 1, -2, 1, 1])/(2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((1 + n6)*j[p4a, n1, 0, n3, n4, n5, 2 + n6, 0, 1, 1, 1, 1, -1, 1, 1])/
    (2*(-3 + d - n4 - n5 - n6)) - (n5*(10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*
     j[p4a, n1, 0, n3, n4, 1 + n5, 1 + n6, -1, 1, 1, 1, 1, 0, 1, 1])/
    (4*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   (n4*(26 - 23*d + 4*d^2 - 14*n1 + 2*d*n1 - 4*n1^2 + 24*n3 - 5*d*n3 + 
      6*n1*n3 - 2*n3^2 + 32*n4 - 11*d*n4 + 2*n1*n4 + 4*n3*n4 + 6*n4^2 + 
      6*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 24*n6 - 8*d*n6 + 
      4*n3*n6 + 8*n4*n6 + 4*n5*n6 + 4*n6^2)*j[p4a, n1, 0, n3, 1 + n4, 
      -1 + n5, 1 + n6, 0, 1, 1, 1, 1, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - 
   (n4*j[p4a, n1, 0, n3, 1 + n4, n5, n6, 0, 1, 1, 1, 1, -1, 1, 1])/
    (2*(3 - d + n4 + n5 + n6)) - 
   (n4*(26 - 23*d + 4*d^2 - 14*n1 + 2*d*n1 - 4*n1^2 + 24*n3 - 5*d*n3 + 
      6*n1*n3 - 2*n3^2 + 32*n4 - 11*d*n4 + 2*n1*n4 + 4*n3*n4 + 6*n4^2 + 
      6*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 24*n6 - 8*d*n6 + 
      4*n3*n6 + 8*n4*n6 + 4*n5*n6 + 4*n6^2)*j[p4a, n1, 0, n3, 1 + n4, n5, 
      1 + n6, -1, 1, 1, 1, 1, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   (n3*(-26 + 23*d - 4*d^2 + 14*n1 - 2*d*n1 + 4*n1^2 - 24*n3 + 5*d*n3 - 
      6*n1*n3 + 2*n3^2 - 32*n4 + 11*d*n4 - 2*n1*n4 - 4*n3*n4 - 6*n4^2 - 
      6*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 6*n4*n5 - 24*n6 + 8*d*n6 - 
      4*n3*n6 - 8*n4*n6 - 4*n5*n6 - 4*n6^2)*j[p4a, n1, 0, 1 + n3, n4, n5, 
      1 + n6, -1, 1, 1, 1, 1, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - (n3*(-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*
     j[p4a, n1, 0, 1 + n3, n4, n5, 1 + n6, -1, 1, 1, 1, 1, 0, 1, 1])/
    (4*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   (n3*j[p4a, n1, 0, 1 + n3, n4, n5, 1 + n6, 0, 1, 1, 1, 1, -2, 1, 1])/
    (2*(-3 + d - n4 - n5 - n6)) - 
   (n3*j[p4a, n1, 0, 1 + n3, n4, n5, 1 + n6, 0, 1, 1, 1, 1, -1, 1, 1])/
    (2*(-3 + d - n4 - n5 - n6)) + (n5*(10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*
     j[p4a, n1, 1, -1 + n3, -1 + n4, 1 + n5, 1 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (4*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   ((1 + n6)*(26 - 23*d + 4*d^2 - 14*n1 + 2*d*n1 - 4*n1^2 + 24*n3 - 5*d*n3 + 
      6*n1*n3 - 2*n3^2 + 32*n4 - 11*d*n4 + 2*n1*n4 + 4*n3*n4 + 6*n4^2 + 
      6*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 24*n6 - 8*d*n6 + 
      4*n3*n6 + 8*n4*n6 + 4*n5*n6 + 4*n6^2)*j[p4a, n1, 1, -1 + n3, n4, 
      -1 + n5, 2 + n6, 0, 1, 1, 1, 1, -1, 1, 1])/
    ((-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + ((10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*
     j[p4a, n1, 1, -1 + n3, n4, n5, 1 + n6, 0, 0, 1, 1, 1, 0, 2, 1])/
    (4*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((6 - 9*d + 2*d^2 + 6*n1 - 4*d*n1 + 4*n3 + 4*n1*n3 - 2*n3^2 + 8*n4 - 
      3*d*n4 + 2*n1*n4 + 2*n4^2 + 2*n5 - 2*d*n5 + 2*n3*n5 + 2*n4*n5 - 4*n6 + 
      d*n6 + 2*n1*n6 - 2*n3*n6 - 2*n6^2)*j[p4a, n1, 1, -1 + n3, n4, n5, 
      1 + n6, 0, 1, 0, 1, 1, -1, 1, 2])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((-6 + 9*d - 2*d^2 - 6*n1 + 4*d*n1 - 4*n3 - 4*n1*n3 + 2*n3^2 - 8*n4 + 
      3*d*n4 - 2*n1*n4 - 2*n4^2 - 2*n5 + 2*d*n5 - 2*n3*n5 - 2*n4*n5 + 4*n6 - 
      d*n6 - 2*n1*n6 + 2*n3*n6 + 2*n6^2)*j[p4a, n1, 1, -1 + n3, n4, n5, 
      1 + n6, 0, 1, 1, 1, 0, 0, 1, 1])/(2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 
      2*n6)*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   ((-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*(14 - 19*d + 5*d^2 + 2*n1 - 
      2*d*n1 + 16*n3 - 7*d*n3 + 2*n1*n3 + 2*n3^2 + 16*n4 - 7*d*n4 + 2*n1*n4 + 
      4*n3*n4 + 2*n4^2 + 2*n5 - 2*d*n5 + 2*n3*n5 + 2*n4*n5 + 4*n6 - 4*d*n6 + 
      4*n3*n6 + 4*n4*n6)*j[p4a, n1, 1, -1 + n3, n4, n5, 1 + n6, 0, 1, 1, 1, 
      1, -1, 1, 1])/(2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((-2 + d - n1 - n4)*(-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*
     j[p4a, n1, 1, -1 + n3, n4, n5, 1 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (4*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((14 - 19*d + 5*d^2 + 2*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 2*n1*n3 + 2*n3^2 + 
      16*n4 - 7*d*n4 + 2*n1*n4 + 4*n3*n4 + 2*n4^2 + 2*n5 - 2*d*n5 + 2*n3*n5 + 
      2*n4*n5 + 4*n6 - 4*d*n6 + 4*n3*n6 + 4*n4*n6)*j[p4a, n1, 1, -1 + n3, n4, 
      n5, 1 + n6, 0, 1, 1, 2, 0, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((1 + n6)*(14 - 19*d + 5*d^2 + 2*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 2*n1*n3 + 
      2*n3^2 + 16*n4 - 7*d*n4 + 2*n1*n4 + 4*n3*n4 + 2*n4^2 + 2*n5 - 2*d*n5 + 
      2*n3*n5 + 2*n4*n5 + 4*n6 - 4*d*n6 + 4*n3*n6 + 4*n4*n6)*
     j[p4a, n1, 1, -1 + n3, n4, n5, 2 + n6, 0, 0, 1, 1, 1, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((1 + n6)*j[p4a, n1, 1, -1 + n3, n4, n5, 2 + n6, 0, 1, 0, 1, 1, -1, 1, 1])/
    (2*(3 - d + n4 + n5 + n6)) + 
   ((1 + n6)*j[p4a, n1, 1, -1 + n3, n4, n5, 2 + n6, 0, 1, 1, 0, 1, -1, 1, 1])/
    (2*(-3 + d - n4 - n5 - n6)) + 
   ((1 + n6)*(20 - 14*d + 2*d^2 - 20*n1 + 6*d*n1 - 4*n1^2 + 20*n3 - 5*d*n3 + 
      2*n1*n3 + 24*n4 - 8*d*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 2*d*n5 - 4*n1*n5 + 
      4*n3*n5 + 4*n4*n5 + 28*n6 - 9*d*n6 - 2*n1*n6 + 6*n3*n6 + 8*n4*n6 + 
      4*n5*n6 + 6*n6^2)*j[p4a, n1, 1, -1 + n3, n4, n5, 2 + n6, 0, 1, 1, 1, 1, 
      -1, 1, 1])/(2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - (n5*(10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*
     j[p4a, n1, 1, -1 + n3, n4, 1 + n5, n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (4*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   (n5*(10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*j[p4a, n1, 1, -1 + n3, n4, 
      1 + n5, 1 + n6, -1, 1, 1, 1, 1, 0, 1, 1])/(4*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - 
   (n4*(26 - 23*d + 4*d^2 - 14*n1 + 2*d*n1 - 4*n1^2 + 24*n3 - 5*d*n3 + 
      6*n1*n3 - 2*n3^2 + 32*n4 - 11*d*n4 + 2*n1*n4 + 4*n3*n4 + 6*n4^2 + 
      6*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 24*n6 - 8*d*n6 + 
      4*n3*n6 + 8*n4*n6 + 4*n5*n6 + 4*n6^2)*j[p4a, n1, 1, -1 + n3, 1 + n4, 
      -1 + n5, 1 + n6, 0, 1, 1, 1, 1, -1, 1, 1])/
    ((-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - (n4*(10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*
     j[p4a, n1, 1, -1 + n3, 1 + n4, n5, n6, 0, 1, 1, 1, 1, -1, 1, 1])/
    (2*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   (n4*(10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*j[p4a, n1, 1, -1 + n3, 1 + n4, 
      n5, n6, 0, 1, 1, 1, 1, 0, 1, 1])/(4*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - (n4*(10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*
     j[p4a, n1, 1, -1 + n3, 1 + n4, n5, 1 + n6, -1, 1, 1, 1, 1, 0, 1, 1])/
    (4*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   (n4*(10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*j[p4a, n1, 1, -1 + n3, 1 + n4, 
      n5, 1 + n6, 0, 0, 1, 1, 1, -1, 1, 1])/(2*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + (n4*(10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*
     j[p4a, n1, 1, -1 + n3, 1 + n4, n5, 1 + n6, 0, 0, 1, 1, 1, 0, 1, 1])/
    (4*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   (n4*j[p4a, n1, 1, -1 + n3, 1 + n4, n5, 1 + n6, 0, 1, 0, 1, 1, -1, 1, 1])/
    (2*(3 - d + n4 + n5 + n6)) - 
   (n4*j[p4a, n1, 1, -1 + n3, 1 + n4, n5, 1 + n6, 0, 1, 1, 0, 1, -1, 1, 1])/
    (2*(3 - d + n4 + n5 + n6)) + 
   (n4*j[p4a, n1, 1, -1 + n3, 1 + n4, n5, 1 + n6, 0, 1, 1, 1, 0, -1, 1, 1])/
    (2*(3 - d + n4 + n5 + n6)) + 
   (n4*(20 - 14*d + 2*d^2 - 20*n1 + 6*d*n1 - 4*n1^2 + 20*n3 - 5*d*n3 + 
      2*n1*n3 + 24*n4 - 8*d*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 2*d*n5 - 4*n1*n5 + 
      4*n3*n5 + 4*n4*n5 + 28*n6 - 9*d*n6 - 2*n1*n6 + 6*n3*n6 + 8*n4*n6 + 
      4*n5*n6 + 6*n6^2)*j[p4a, n1, 1, -1 + n3, 1 + n4, n5, 1 + n6, 0, 1, 1, 
      1, 1, -1, 1, 1])/(2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((-14 + 19*d - 5*d^2 - 2*n1 + 2*d*n1 - 16*n3 + 7*d*n3 - 2*n1*n3 - 2*n3^2 - 
      16*n4 + 7*d*n4 - 2*n1*n4 - 4*n3*n4 - 2*n4^2 - 2*n5 + 2*d*n5 - 2*n3*n5 - 
      2*n4*n5 - 4*n6 + 4*d*n6 - 4*n3*n6 - 4*n4*n6)*j[p4a, n1, 1, n3, -1 + n4, 
      n5, 1 + n6, 0, 1, 0, 1, 1, -1, 1, 2])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((14 - 19*d + 5*d^2 + 2*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 2*n1*n3 + 2*n3^2 + 
      16*n4 - 7*d*n4 + 2*n1*n4 + 4*n3*n4 + 2*n4^2 + 2*n5 - 2*d*n5 + 2*n3*n5 + 
      2*n4*n5 + 4*n6 - 4*d*n6 + 4*n3*n6 + 4*n4*n6)*j[p4a, n1, 1, n3, -1 + n4, 
      n5, 1 + n6, 0, 1, 1, 1, 1, -1, 1, 1])/
    ((-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)) + 
   ((-14 + 19*d - 5*d^2 - 2*n1 + 2*d*n1 - 16*n3 + 7*d*n3 - 2*n1*n3 - 2*n3^2 - 
      16*n4 + 7*d*n4 - 2*n1*n4 - 4*n3*n4 - 2*n4^2 - 2*n5 + 2*d*n5 - 2*n3*n5 - 
      2*n4*n5 - 4*n6 + 4*d*n6 - 4*n3*n6 - 4*n4*n6)*j[p4a, n1, 1, n3, -1 + n4, 
      n5, 1 + n6, 0, 1, 2, 1, 1, -1, 1, 0])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - 
   ((1 + n6)*(14 - 19*d + 5*d^2 + 2*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 2*n1*n3 + 
      2*n3^2 + 16*n4 - 7*d*n4 + 2*n1*n4 + 4*n3*n4 + 2*n4^2 + 2*n5 - 2*d*n5 + 
      2*n3*n5 + 2*n4*n5 + 4*n6 - 4*d*n6 + 4*n3*n6 + 4*n4*n6)*
     j[p4a, n1, 1, n3, -1 + n4, n5, 2 + n6, 0, 0, 1, 1, 1, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - 
   ((1 + n6)*(14 - 19*d + 5*d^2 + 2*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 2*n1*n3 + 
      2*n3^2 + 16*n4 - 7*d*n4 + 2*n1*n4 + 4*n3*n4 + 2*n4^2 + 2*n5 - 2*d*n5 + 
      2*n3*n5 + 2*n4*n5 + 4*n6 - 4*d*n6 + 4*n3*n6 + 4*n4*n6)*
     j[p4a, n1, 1, n3, -1 + n4, n5, 2 + n6, 0, 1, 0, 1, 1, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((1 + n6)*(14 - 19*d + 5*d^2 + 2*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 2*n1*n3 + 
      2*n3^2 + 16*n4 - 7*d*n4 + 2*n1*n4 + 4*n3*n4 + 2*n4^2 + 2*n5 - 2*d*n5 + 
      2*n3*n5 + 2*n4*n5 + 4*n6 - 4*d*n6 + 4*n3*n6 + 4*n4*n6)*
     j[p4a, n1, 1, n3, -1 + n4, n5, 2 + n6, 0, 1, 1, 0, 1, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - 
   ((1 + n6)*(14 - 19*d + 5*d^2 + 2*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 2*n1*n3 + 
      2*n3^2 + 16*n4 - 7*d*n4 + 2*n1*n4 + 4*n3*n4 + 2*n4^2 + 2*n5 - 2*d*n5 + 
      2*n3*n5 + 2*n4*n5 + 4*n6 - 4*d*n6 + 4*n3*n6 + 4*n4*n6)*
     j[p4a, n1, 1, n3, -1 + n4, n5, 2 + n6, 0, 1, 1, 1, 1, -1, 0, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - 
   ((1 + n6)*(14 - 19*d + 5*d^2 + 2*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 2*n1*n3 + 
      2*n3^2 + 16*n4 - 7*d*n4 + 2*n1*n4 + 4*n3*n4 + 2*n4^2 + 2*n5 - 2*d*n5 + 
      2*n3*n5 + 2*n4*n5 + 4*n6 - 4*d*n6 + 4*n3*n6 + 4*n4*n6)*
     j[p4a, n1, 1, n3, -1 + n4, n5, 2 + n6, 0, 1, 1, 1, 1, -1, 1, 0])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - (n5*(10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*
     j[p4a, n1, 1, n3, -1 + n4, 1 + n5, 1 + n6, -1, 1, 1, 1, 1, 0, 1, 1])/
    (4*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   (n5*(-14 + 19*d - 5*d^2 - 2*n1 + 2*d*n1 - 16*n3 + 7*d*n3 - 2*n1*n3 - 
      2*n3^2 - 16*n4 + 7*d*n4 - 2*n1*n4 - 4*n3*n4 - 2*n4^2 - 2*n5 + 2*d*n5 - 
      2*n3*n5 - 2*n4*n5 - 4*n6 + 4*d*n6 - 4*n3*n6 - 4*n4*n6)*
     j[p4a, n1, 1, n3, -1 + n4, 1 + n5, 1 + n6, 0, 1, 0, 1, 1, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - 
   (n5*(-14 + 19*d - 5*d^2 - 2*n1 + 2*d*n1 - 16*n3 + 7*d*n3 - 2*n1*n3 - 
      2*n3^2 - 16*n4 + 7*d*n4 - 2*n1*n4 - 4*n3*n4 - 2*n4^2 - 2*n5 + 2*d*n5 - 
      2*n3*n5 - 2*n4*n5 - 4*n6 + 4*d*n6 - 4*n3*n6 - 4*n4*n6)*
     j[p4a, n1, 1, n3, -1 + n4, 1 + n5, 1 + n6, 0, 1, 1, 1, 1, -1, 0, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   (n5*(-14 + 19*d - 5*d^2 - 2*n1 + 2*d*n1 - 16*n3 + 7*d*n3 - 2*n1*n3 - 
      2*n3^2 - 16*n4 + 7*d*n4 - 2*n1*n4 - 4*n3*n4 - 2*n4^2 - 2*n5 + 2*d*n5 - 
      2*n3*n5 - 2*n4*n5 - 4*n6 + 4*d*n6 - 4*n3*n6 - 4*n4*n6)*
     j[p4a, n1, 1, n3, -1 + n4, 1 + n5, 1 + n6, 0, 1, 1, 1, 1, -1, 1, 0])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + (n5*(10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*
     j[p4a, n1, 1, n3, -1 + n4, 1 + n5, 1 + n6, 0, 1, 1, 1, 1, -1, 1, 1])/
    (4*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((26 - 23*d + 4*d^2 - 14*n1 + 2*d*n1 - 4*n1^2 + 24*n3 - 5*d*n3 + 6*n1*n3 - 
      2*n3^2 + 32*n4 - 11*d*n4 + 2*n1*n4 + 4*n3*n4 + 6*n4^2 + 6*n5 - 4*d*n5 - 
      4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 24*n6 - 8*d*n6 + 4*n3*n6 + 8*n4*n6 + 
      4*n5*n6 + 4*n6^2)*j[p4a, n1, 1, n3, n4, -1 + n5, 1 + n6, 0, 1, 0, 1, 1, 
      -1, 1, 2])/(2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((-26 + 23*d - 4*d^2 + 14*n1 - 2*d*n1 + 4*n1^2 - 24*n3 + 5*d*n3 - 
      6*n1*n3 + 2*n3^2 - 32*n4 + 11*d*n4 - 2*n1*n4 - 4*n3*n4 - 6*n4^2 - 
      6*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 6*n4*n5 - 24*n6 + 8*d*n6 - 
      4*n3*n6 - 8*n4*n6 - 4*n5*n6 - 4*n6^2)*j[p4a, n1, 1, n3, n4, -1 + n5, 
      1 + n6, 0, 1, 1, 1, 1, -1, 1, 1])/
    ((-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)) + 
   ((26 - 23*d + 4*d^2 - 14*n1 + 2*d*n1 - 4*n1^2 + 24*n3 - 5*d*n3 + 6*n1*n3 - 
      2*n3^2 + 32*n4 - 11*d*n4 + 2*n1*n4 + 4*n3*n4 + 6*n4^2 + 6*n5 - 4*d*n5 - 
      4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 24*n6 - 8*d*n6 + 4*n3*n6 + 8*n4*n6 + 
      4*n5*n6 + 4*n6^2)*j[p4a, n1, 1, n3, n4, -1 + n5, 1 + n6, 0, 1, 2, 1, 1, 
      -1, 1, 0])/(2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((1 + n6)*(26 - 23*d + 4*d^2 - 14*n1 + 2*d*n1 - 4*n1^2 + 24*n3 - 5*d*n3 + 
      6*n1*n3 - 2*n3^2 + 32*n4 - 11*d*n4 + 2*n1*n4 + 4*n3*n4 + 6*n4^2 + 
      6*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 24*n6 - 8*d*n6 + 
      4*n3*n6 + 8*n4*n6 + 4*n5*n6 + 4*n6^2)*j[p4a, n1, 1, n3, n4, -1 + n5, 
      2 + n6, -1, 1, 1, 1, 1, -1, 1, 1])/
    ((-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((1 + n6)*(26 - 23*d + 4*d^2 - 14*n1 + 2*d*n1 - 4*n1^2 + 24*n3 - 5*d*n3 + 
      6*n1*n3 - 2*n3^2 + 32*n4 - 11*d*n4 + 2*n1*n4 + 4*n3*n4 + 6*n4^2 + 
      6*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 24*n6 - 8*d*n6 + 
      4*n3*n6 + 8*n4*n6 + 4*n5*n6 + 4*n6^2)*j[p4a, n1, 1, n3, n4, -1 + n5, 
      2 + n6, 0, 0, 1, 1, 1, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((1 + n6)*(26 - 23*d + 4*d^2 - 14*n1 + 2*d*n1 - 4*n1^2 + 24*n3 - 5*d*n3 + 
      6*n1*n3 - 2*n3^2 + 32*n4 - 11*d*n4 + 2*n1*n4 + 4*n3*n4 + 6*n4^2 + 
      6*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 24*n6 - 8*d*n6 + 
      4*n3*n6 + 8*n4*n6 + 4*n5*n6 + 4*n6^2)*j[p4a, n1, 1, n3, n4, -1 + n5, 
      2 + n6, 0, 1, 0, 1, 1, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - 
   ((1 + n6)*(26 - 23*d + 4*d^2 - 14*n1 + 2*d*n1 - 4*n1^2 + 24*n3 - 5*d*n3 + 
      6*n1*n3 - 2*n3^2 + 32*n4 - 11*d*n4 + 2*n1*n4 + 4*n3*n4 + 6*n4^2 + 
      6*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 24*n6 - 8*d*n6 + 
      4*n3*n6 + 8*n4*n6 + 4*n5*n6 + 4*n6^2)*j[p4a, n1, 1, n3, n4, -1 + n5, 
      2 + n6, 0, 1, 1, 0, 1, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - 
   ((1 + n6)*(26 - 23*d + 4*d^2 - 14*n1 + 2*d*n1 - 4*n1^2 + 24*n3 - 5*d*n3 + 
      6*n1*n3 - 2*n3^2 + 32*n4 - 11*d*n4 + 2*n1*n4 + 4*n3*n4 + 6*n4^2 + 
      6*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 24*n6 - 8*d*n6 + 
      4*n3*n6 + 8*n4*n6 + 4*n5*n6 + 4*n6^2)*j[p4a, n1, 1, n3, n4, -1 + n5, 
      2 + n6, 0, 1, 1, 1, 1, -2, 1, 1])/
    ((-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((1 + n6)*(26 - 23*d + 4*d^2 - 14*n1 + 2*d*n1 - 4*n1^2 + 24*n3 - 5*d*n3 + 
      6*n1*n3 - 2*n3^2 + 32*n4 - 11*d*n4 + 2*n1*n4 + 4*n3*n4 + 6*n4^2 + 
      6*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 24*n6 - 8*d*n6 + 
      4*n3*n6 + 8*n4*n6 + 4*n5*n6 + 4*n6^2)*j[p4a, n1, 1, n3, n4, -1 + n5, 
      2 + n6, 0, 1, 1, 1, 1, -1, 0, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((1 + n6)*(26 - 23*d + 4*d^2 - 14*n1 + 2*d*n1 - 4*n1^2 + 24*n3 - 5*d*n3 + 
      6*n1*n3 - 2*n3^2 + 32*n4 - 11*d*n4 + 2*n1*n4 + 4*n3*n4 + 6*n4^2 + 
      6*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 24*n6 - 8*d*n6 + 
      4*n3*n6 + 8*n4*n6 + 4*n5*n6 + 4*n6^2)*j[p4a, n1, 1, n3, n4, -1 + n5, 
      2 + n6, 0, 1, 1, 1, 1, -1, 1, 0])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - 
   ((1 + n6)*(-12 + 4*d + d^2 + 16*n1 - 4*d*n1 + 4*n1^2 - 8*n3 - 2*d*n3 - 
      4*n1*n3 + 4*n3^2 - 16*n4 + 4*d*n4 - 4*n4^2 - 4*n5 + 2*d*n5 + 4*n1*n5 - 
      4*n3*n5 - 4*n4*n5 - 20*n6 + 4*d*n6 - 4*n4*n6 - 4*n5*n6 - 4*n6^2)*
     j[p4a, n1, 1, n3, n4, -1 + n5, 2 + n6, 0, 1, 1, 1, 1, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + j[p4a, n1, 1, n3, n4, n5, n6, 0, 1, 0, 1, 1, 
     -1, 1, 2]/(2*(-3 + d - n4 - n5 - n6)) + 
   j[p4a, n1, 1, n3, n4, n5, n6, 0, 1, 2, 1, 1, -1, 1, 0]/
    (2*(-3 + d - n4 - n5 - n6)) + 
   ((28 - 24*d + 5*d^2 - 24*n1 + 8*d*n1 - 4*n1^2 + 32*n3 - 12*d*n3 + 4*n3^2 + 
      32*n4 - 12*d*n4 + 8*n3*n4 + 4*n4^2 + 4*n5 - 2*d*n5 - 4*n1*n5 + 
      4*n3*n5 + 4*n4*n5 + 36*n6 - 14*d*n6 - 4*n1*n6 + 12*n3*n6 + 12*n4*n6 + 
      4*n5*n6 + 8*n6^2)*j[p4a, n1, 1, n3, n4, n5, 1 + n6, -1, 0, 1, 1, 1, 0, 
      1, 1])/(2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + ((-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*
     j[p4a, n1, 1, n3, n4, n5, 1 + n6, -1, 0, 1, 1, 1, 0, 2, 1])/
    (4*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((-28 + 24*d - 5*d^2 + 24*n1 - 8*d*n1 + 4*n1^2 - 32*n3 + 12*d*n3 - 
      4*n3^2 - 32*n4 + 12*d*n4 - 8*n3*n4 - 4*n4^2 - 4*n5 + 2*d*n5 + 4*n1*n5 - 
      4*n3*n5 - 4*n4*n5 - 36*n6 + 14*d*n6 + 4*n1*n6 - 12*n3*n6 - 12*n4*n6 - 
      4*n5*n6 - 8*n6^2)*j[p4a, n1, 1, n3, n4, n5, 1 + n6, -1, 0, 1, 1, 2, -1, 
      1, 1])/(2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((-14 + 19*d - 5*d^2 - 2*n1 + 2*d*n1 - 16*n3 + 7*d*n3 - 2*n1*n3 - 2*n3^2 - 
      16*n4 + 7*d*n4 - 2*n1*n4 - 4*n3*n4 - 2*n4^2 - 2*n5 + 2*d*n5 - 2*n3*n5 - 
      2*n4*n5 - 4*n6 + 4*d*n6 - 4*n3*n6 - 4*n4*n6)*j[p4a, n1, 1, n3, n4, n5, 
      1 + n6, -1, 0, 1, 2, 1, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + j[p4a, n1, 1, n3, n4, n5, 1 + n6, -1, 1, 0, 
     1, 1, -1, 1, 2]/(2*(-3 + d - n4 - n5 - n6)) + 
   ((-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*j[p4a, n1, 1, n3, n4, n5, 1 + n6, 
      -1, 1, 1, 1, 0, 0, 1, 1])/(2*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((-28 + 24*d - 5*d^2 + 24*n1 - 8*d*n1 + 4*n1^2 - 32*n3 + 12*d*n3 - 
      4*n3^2 - 32*n4 + 12*d*n4 - 8*n3*n4 - 4*n4^2 - 4*n5 + 2*d*n5 + 4*n1*n5 - 
      4*n3*n5 - 4*n4*n5 - 36*n6 + 14*d*n6 + 4*n1*n6 - 12*n3*n6 - 12*n4*n6 - 
      4*n5*n6 - 8*n6^2)*j[p4a, n1, 1, n3, n4, n5, 1 + n6, -1, 1, 1, 1, 1, 0, 
      0, 1])/(2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((104 - 200*d + 110*d^2 - 18*d^3 + 80*n1 - 76*d*n1 + 18*d^2*n1 - 32*n1^2 + 
      8*d*n1^2 - 8*n1^3 + 96*n3 - 104*d*n3 + 24*d^2*n3 + 112*n1*n3 - 
      40*d*n1*n3 + 16*n1^2*n3 - 8*n3^2 + 168*n4 - 186*d*n4 + 45*d^2*n4 + 
      100*n1*n4 - 44*d*n1*n4 + 4*n1^2*n4 + 56*n3*n4 - 28*d*n3*n4 + 
      24*n1*n3*n4 + 72*n4^2 - 34*d*n4^2 + 20*n1*n4^2 + 8*n3*n4^2 + 8*n4^3 + 
      64*n5 - 78*d*n5 + 21*d^2*n5 - 4*n1*n5 - 4*d*n1*n5 - 12*n1^2*n5 + 
      64*n3*n5 - 28*d*n3*n5 + 24*n1*n3*n5 + 80*n4*n5 - 40*d*n4*n5 + 
      16*n1*n4*n5 + 16*n3*n4*n5 + 16*n4^2*n5 + 8*n5^2 - 6*d*n5^2 - 
      4*n1*n5^2 + 8*n3*n5^2 + 8*n4*n5^2 + 40*n6 - 76*d*n6 + 24*d^2*n6 + 
      64*n1*n6 - 24*d*n1*n6 + 8*n3*n6 - 16*d*n3*n6 + 16*n1*n3*n6 + 52*n4*n6 - 
      36*d*n4*n6 + 24*n1*n4*n6 + 8*n3*n4*n6 + 12*n4^2*n6 + 36*n5*n6 - 
      20*d*n5*n6 + 8*n1*n5*n6 + 8*n3*n5*n6 + 16*n4*n5*n6 + 4*n5^2*n6 - 
      8*d*n6^2 + 8*n1*n6^2 + 4*n4*n6^2 + 4*n5*n6^2)*
     j[p4a, n1, 1, n3, n4, n5, 1 + n6, -1, 1, 1, 1, 1, 0, 1, 1])/
    (4*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((-14 + 19*d - 5*d^2 - 2*n1 + 2*d*n1 - 16*n3 + 7*d*n3 - 2*n1*n3 - 2*n3^2 - 
      16*n4 + 7*d*n4 - 2*n1*n4 - 4*n3*n4 - 2*n4^2 - 2*n5 + 2*d*n5 - 2*n3*n5 - 
      2*n4*n5 - 4*n6 + 4*d*n6 - 4*n3*n6 - 4*n4*n6)*j[p4a, n1, 1, n3, n4, n5, 
      1 + n6, -1, 1, 1, 2, 0, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((-14 + 19*d - 5*d^2 - 2*n1 + 2*d*n1 - 16*n3 + 7*d*n3 - 2*n1*n3 - 2*n3^2 - 
      16*n4 + 7*d*n4 - 2*n1*n4 - 4*n3*n4 - 2*n4^2 - 2*n5 + 2*d*n5 - 2*n3*n5 - 
      2*n4*n5 - 4*n6 + 4*d*n6 - 4*n3*n6 - 4*n4*n6)*j[p4a, n1, 1, n3, n4, n5, 
      1 + n6, -1, 1, 1, 2, 1, -1, 0, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((14 - 19*d + 5*d^2 + 2*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 2*n1*n3 + 2*n3^2 + 
      16*n4 - 7*d*n4 + 2*n1*n4 + 4*n3*n4 + 2*n4^2 + 2*n5 - 2*d*n5 + 2*n3*n5 + 
      2*n4*n5 + 4*n6 - 4*d*n6 + 4*n3*n6 + 4*n4*n6)*j[p4a, n1, 1, n3, n4, n5, 
      1 + n6, -1, 1, 2, 1, 1, -1, 1, 0])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((-34 + 33*d - 7*d^2 + 18*n1 - 4*d*n1 + 4*n1^2 - 36*n3 + 12*d*n3 - 
      4*n1*n3 - 2*n3^2 - 40*n4 + 15*d*n4 - 2*n1*n4 - 8*n3*n4 - 6*n4^2 - 
      6*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 6*n4*n5 - 32*n6 + 13*d*n6 + 
      2*n1*n6 - 10*n3*n6 - 12*n4*n6 - 4*n5*n6 - 6*n6^2)*
     j[p4a, n1, 1, n3, n4, n5, 1 + n6, -1, 2, 1, 1, 0, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((-34 + 33*d - 7*d^2 + 18*n1 - 4*d*n1 + 4*n1^2 - 36*n3 + 12*d*n3 - 
      4*n1*n3 - 2*n3^2 - 40*n4 + 15*d*n4 - 2*n1*n4 - 8*n3*n4 - 6*n4^2 - 
      6*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 6*n4*n5 - 32*n6 + 13*d*n6 + 
      2*n1*n6 - 10*n3*n6 - 12*n4*n6 - 4*n5*n6 - 6*n6^2)*
     j[p4a, n1, 1, n3, n4, n5, 1 + n6, -1, 2, 1, 1, 1, -1, 0, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + ((-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*
     j[p4a, n1, 1, n3, n4, n5, 1 + n6, -1, 2, 1, 1, 1, 0, 0, 1])/
    (4*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((38 - 35*d + 9*d^2 - 52*n1 + 35*d*n1 - 5*d^2*n1 - 6*n1^2 + 2*d*n1^2 - 
      30*n3 + 59*d*n3 - 19*d^2*n3 + 10*n1*n3 + d*n1*n3 + 6*n1^2*n3 - 
      74*n3^2 + 31*d*n3^2 - 12*n1*n3^2 - 6*n3^3 + 54*n4 - 36*d*n4 + 
      5*d^2*n4 - 16*n1*n4 + 5*d*n1*n4 - 2*n1^2*n4 - 64*n3*n4 + 30*d*n3*n4 - 
      8*n1*n3*n4 - 18*n3^2*n4 + 18*n4^2 - 7*d*n4^2 - 10*n3*n4^2 + 2*n4^3 + 
      2*n5 - 6*n1*n5 + 2*d*n1*n5 - 12*n3*n5 + 10*d*n3*n5 + 6*n1*n3*n5 - 
      14*n3^2*n5 + 4*n4*n5 - 2*d*n4*n5 - 2*n1*n4*n5 - 12*n3*n4*n5 + 
      2*n4^2*n5 + 64*n6 - 35*d*n6 + 3*d^2*n6 - 18*n1*n6 + 6*d*n1*n6 - 
      30*n3*n6 + 23*d*n3*n6 - 2*n1*n3*n6 - 20*n3^2*n6 + 32*n4*n6 - 
      8*d*n4*n6 - 4*n1*n4*n6 - 20*n3*n4*n6 + 4*n4^2*n6 + 4*n5*n6 - 
      8*n3*n5*n6 + 22*n6^2 - 5*d*n6^2 - 2*n1*n6^2 - 6*n3*n6^2 + 4*n4*n6^2 + 
      2*n6^3)*j[p4a, n1, 1, n3, n4, n5, 1 + n6, 0, 0, 1, 1, 1, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + j[p4a, n1, 1, n3, n4, n5, 1 + n6, 0, 0, 1, 1, 
     1, -1, 1, 2]/(2*(-3 + d - n4 - n5 - n6)) + 
   j[p4a, n1, 1, n3, n4, n5, 1 + n6, 0, 0, 1, 1, 1, -1, 2, 1]/
    (2*(-3 + d - n4 - n5 - n6)) + 
   ((6 - 9*d + 2*d^2 + 6*n1 - 4*d*n1 - 36*n3 + 42*d*n3 - 9*d^2*n3 + 
      16*n1*n3 + 4*n1^2*n3 - 42*n3^2 + 12*d*n3^2 - 8*n1*n3^2 + 8*n4 - 
      3*d*n4 + 2*n1*n4 - 48*n3*n4 + 18*d*n3*n4 - 4*n1*n3*n4 - 8*n3^2*n4 + 
      2*n4^2 - 8*n3*n4^2 + 2*n5 - 2*d*n5 - 6*n3*n5 + 6*d*n3*n5 + 4*n1*n3*n5 - 
      8*n3^2*n5 + 2*n4*n5 - 8*n3*n4*n5 - 4*n6 + d*n6 + 2*n1*n6 - 30*n3*n6 + 
      12*d*n3*n6 - 8*n3^2*n6 - 12*n3*n4*n6 - 4*n3*n5*n6 - 2*n6^2 - 4*n3*n6^2)*
     j[p4a, n1, 1, n3, n4, n5, 1 + n6, 0, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + ((-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*
     j[p4a, n1, 1, n3, n4, n5, 1 + n6, 0, 0, 1, 1, 2, -2, 1, 1])/
    (2*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((14 - 19*d + 5*d^2 + 2*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 2*n1*n3 + 2*n3^2 + 
      16*n4 - 7*d*n4 + 2*n1*n4 + 4*n3*n4 + 2*n4^2 + 2*n5 - 2*d*n5 + 2*n3*n5 + 
      2*n4*n5 + 4*n6 - 4*d*n6 + 4*n3*n6 + 4*n4*n6)*j[p4a, n1, 1, n3, n4, n5, 
      1 + n6, 0, 0, 2, 1, 1, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - j[p4a, n1, 1, n3, n4, n5, 1 + n6, 0, 1, 0, 1, 
     1, -2, 1, 2]/(2*(-3 + d - n4 - n5 - n6)) + 
   ((-12 + 4*d + d^2 + 16*n1 - 4*d*n1 + 4*n1^2 - 8*n3 - 2*d*n3 - 4*n1*n3 + 
      4*n3^2 - 30*n4 + 23*d*n4 - 5*d^2*n4 - 2*n1*n4 + 2*d*n1*n4 - 16*n3*n4 + 
      7*d*n3*n4 - 2*n1*n3*n4 - 2*n3^2*n4 - 20*n4^2 + 7*d*n4^2 - 2*n1*n4^2 - 
      4*n3*n4^2 - 2*n4^3 + 22*n5 - 21*d*n5 + 4*d^2*n5 - 10*n1*n5 + 
      2*d*n1*n5 - 4*n1^2*n5 + 20*n3*n5 - 5*d*n3*n5 + 6*n1*n3*n5 - 2*n3^2*n5 + 
      26*n4*n5 - 9*d*n4*n5 + 2*n1*n4*n5 + 2*n3*n4*n5 + 4*n4^2*n5 + 6*n5^2 - 
      4*d*n5^2 - 4*n1*n5^2 + 6*n3*n5^2 + 6*n4*n5^2 - 12*n6 - 6*d*n6 + 
      3*d^2*n6 - 4*n1*n6 + 2*d*n1*n6 + 12*n3*n6 - 7*d*n3*n6 - 2*n1*n3*n6 + 
      4*n3^2*n6 - 4*n4^2*n6 + 20*n5*n6 - 8*d*n5*n6 + 4*n3*n5*n6 + 
      8*n4*n5*n6 + 4*n5^2*n6 + 4*n6^2 - 5*d*n6^2 - 2*n1*n6^2 + 6*n3*n6^2 + 
      4*n4*n6^2 + 4*n5*n6^2 + 2*n6^3)*j[p4a, n1, 1, n3, n4, n5, 1 + n6, 0, 1, 
      0, 1, 1, -1, 1, 1])/(2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((-62 + 71*d - 17*d^2 + 8*n1 + 9*d*n1 - 2*d^2*n1 - 2*n1^2 + 4*d*n1^2 - 
      54*n3 + 7*d*n3 + 5*d^2*n3 - 10*n1*n3 - 2*d*n1*n3 - 4*n1^2*n3 + 
      10*n3^2 - 7*d*n3^2 + 4*n1*n3^2 + 2*n3^3 - 58*n4 + 10*d*n4 + 5*d^2*n4 - 
      12*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 16*n3*n4 - 14*d*n3*n4 + 4*n1*n3*n4 + 
      6*n3^2*n4 + 6*n4^2 - 7*d*n4^2 + 6*n3*n4^2 + 2*n4^3 - 10*n5 + 8*d*n5 + 
      2*n1*n5 + 2*d*n1*n5 - 8*n3*n5 - 2*d*n3*n5 - 2*n1*n3*n5 + 2*n3^2*n5 - 
      8*n4*n5 - 2*d*n4*n5 - 2*n1*n4*n5 + 4*n3*n4*n5 + 2*n4^2*n5 - 48*n6 + 
      31*d*n6 - 3*d^2*n6 + 10*n1*n6 - 3*d*n1*n6 - 2*n1^2*n6 - 26*n3*n6 + 
      3*d*n3*n6 + 4*n1*n3*n6 - 24*n4*n6 + 4*n3*n4*n6 + 4*n4^2*n6 - 4*n5*n6 - 
      14*n6^2 + 5*d*n6^2 + 4*n1*n6^2 - 6*n3*n6^2 - 4*n4*n6^2 - 2*n6^3)*
     j[p4a, n1, 1, n3, n4, n5, 1 + n6, 0, 1, 1, 0, 1, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((34 - 33*d + 7*d^2 - 18*n1 + 4*d*n1 - 4*n1^2 + 36*n3 - 12*d*n3 + 
      4*n1*n3 + 2*n3^2 + 40*n4 - 15*d*n4 + 2*n1*n4 + 8*n3*n4 + 6*n4^2 + 
      6*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 32*n6 - 13*d*n6 - 
      2*n1*n6 + 10*n3*n6 + 12*n4*n6 + 4*n5*n6 + 6*n6^2)*
     j[p4a, n1, 1, n3, n4, n5, 1 + n6, 0, 1, 1, 0, 2, -2, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((-34 + 33*d - 7*d^2 + 18*n1 - 4*d*n1 + 4*n1^2 - 36*n3 + 12*d*n3 - 
      4*n1*n3 - 2*n3^2 - 40*n4 + 15*d*n4 - 2*n1*n4 - 8*n3*n4 - 6*n4^2 - 
      6*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 6*n4*n5 - 32*n6 + 13*d*n6 + 
      2*n1*n6 - 10*n3*n6 - 12*n4*n6 - 4*n5*n6 - 6*n6^2)*
     j[p4a, n1, 1, n3, n4, n5, 1 + n6, 0, 1, 1, 0, 2, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((54 - 61*d + 14*d^2 + 4*n1 - 21*d*n1 + 5*d^2*n1 - 2*n1^2 - 2*d*n1^2 + 
      42*n3 - 5*d^2*n3 + 24*n1*n3 - 5*d*n1*n3 + 2*n1^2*n3 - 14*n3^2 + 
      7*d*n3^2 - 2*n3^3 + 50*n4 - 6*d*n4 - 5*d^2*n4 + 20*n1*n4 - 5*d*n1*n4 + 
      2*n1^2*n4 - 20*n3*n4 + 14*d*n3*n4 - 6*n3^2*n4 - 6*n4^2 + 7*d*n4^2 - 
      6*n3*n4^2 - 2*n4^3 + 10*n5 - 8*d*n5 - 2*n1*n5 - 2*d*n1*n5 + 8*n3*n5 + 
      2*d*n3*n5 + 2*n1*n3*n5 - 2*n3^2*n5 + 8*n4*n5 + 2*d*n4*n5 + 2*n1*n4*n5 - 
      4*n3*n4*n5 - 2*n4^2*n5 + 32*n6 - 16*d*n6 + 4*n1*n6 - 4*d*n1*n6 + 
      8*n3*n6 + 4*d*n3*n6 + 4*n1*n3*n6 - 4*n3^2*n6 + 12*n4*n6 + 4*d*n4*n6 + 
      4*n1*n4*n6 - 8*n3*n4*n6 - 4*n4^2*n6 + 4*n5*n6 + 4*n6^2)*
     j[p4a, n1, 1, n3, n4, n5, 1 + n6, 0, 1, 1, 1, 0, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((196 - 202*d + 44*d^2 - 44*n1 - 22*d*n1 + 6*d^2*n1 - 28*n1^2 - 2*d*n1^2 - 
      4*n1^3 + 130*n3 + 8*d*n3 - 16*d^2*n3 + 88*n1*n3 - 9*d*n1*n3 + 
      18*n1^2*n3 - 68*n3^2 + 24*d*n3^2 - 16*n1*n3^2 - 2*n3^3 + 232*n4 - 
      88*d*n4 + 56*n1*n4 - 14*d*n1*n4 + 4*n1^2*n4 - 44*n3*n4 + 33*d*n3*n4 - 
      2*n1*n3*n4 - 16*n3^2*n4 + 36*n4^2 + 8*n1*n4^2 - 14*n3*n4^2 + 10*n5 - 
      3*d*n5 - 4*d^2*n5 + 2*n1*n5 - 8*d*n1*n5 - 2*n3*n5 + 15*d*n3*n5 + 
      10*n1*n3*n5 - 12*n3^2*n5 + 4*n4*n5 + 11*d*n4*n5 + 6*n1*n4*n5 - 
      18*n3*n4*n5 - 6*n4^2*n5 - 6*n5^2 + 4*d*n5^2 + 4*n1*n5^2 - 6*n3*n5^2 - 
      6*n4*n5^2 + 164*n6 - 77*d*n6 + 3*d^2*n6 + 10*n1*n6 - 5*d*n1*n6 + 
      2*n1^2*n6 + 2*n3*n6 + 18*d*n3*n6 + 2*n1*n3*n6 - 14*n3^2*n6 + 72*n4*n6 - 
      4*d*n4*n6 + 8*n1*n4*n6 - 20*n3*n4*n6 - 4*n5*n6 + 8*d*n5*n6 + 
      4*n1*n5*n6 - 12*n3*n5*n6 - 8*n4*n5*n6 - 4*n5^2*n6 + 34*n6^2 - 
      5*d*n6^2 - 4*n3*n6^2 + 4*n4*n6^2 - 4*n5*n6^2 + 2*n6^3)*
     j[p4a, n1, 1, n3, n4, n5, 1 + n6, 0, 1, 1, 1, 1, -1, 0, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((-18 + 13*d - d^2 + 10*n1 + 4*n1^2 - 12*n3 - 2*d*n3 - 8*n1*n3 + 6*n3^2 - 
      24*n4 + 7*d*n4 - 2*n1*n4 - 6*n4^2 - 6*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 
      6*n4*n5 - 16*n6 + 3*d*n6 - 2*n1*n6 + 2*n3*n6 - 4*n4*n6 - 4*n5*n6 - 
      2*n6^2)*j[p4a, n1, 1, n3, n4, n5, 1 + n6, 0, 1, 1, 1, 1, -1, 0, 2])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((-12 + 4*d + d^2 + 16*n1 - 4*d*n1 + 4*n1^2 - 8*n3 - 2*d*n3 - 4*n1*n3 + 
      4*n3^2 - 30*n4 + 23*d*n4 - 5*d^2*n4 - 2*n1*n4 + 2*d*n1*n4 - 16*n3*n4 + 
      7*d*n3*n4 - 2*n1*n3*n4 - 2*n3^2*n4 - 20*n4^2 + 7*d*n4^2 - 2*n1*n4^2 - 
      4*n3*n4^2 - 2*n4^3 + 22*n5 - 21*d*n5 + 4*d^2*n5 - 10*n1*n5 + 
      2*d*n1*n5 - 4*n1^2*n5 + 20*n3*n5 - 5*d*n3*n5 + 6*n1*n3*n5 - 2*n3^2*n5 + 
      26*n4*n5 - 9*d*n4*n5 + 2*n1*n4*n5 + 2*n3*n4*n5 + 4*n4^2*n5 + 6*n5^2 - 
      4*d*n5^2 - 4*n1*n5^2 + 6*n3*n5^2 + 6*n4*n5^2 - 12*n6 - 6*d*n6 + 
      3*d^2*n6 - 4*n1*n6 + 2*d*n1*n6 + 12*n3*n6 - 7*d*n3*n6 - 2*n1*n3*n6 + 
      4*n3^2*n6 - 4*n4^2*n6 + 20*n5*n6 - 8*d*n5*n6 + 4*n3*n5*n6 + 
      8*n4*n5*n6 + 4*n5^2*n6 + 4*n6^2 - 5*d*n6^2 - 2*n1*n6^2 + 6*n3*n6^2 + 
      4*n4*n6^2 + 4*n5*n6^2 + 2*n6^3)*j[p4a, n1, 1, n3, n4, n5, 1 + n6, 0, 1, 
      1, 1, 1, -1, 1, 0])/(2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((312 - 476*d + 216*d^2 - 30*d^3 - 136*n1 + 100*d*n1 - 14*d^2*n1 - 
      8*n1^2 + 16*d*n1^2 + 8*n1^3 + 448*n3 - 372*d*n3 + 70*d^2*n3 - 
      40*n1*n3 - 12*d*n1*n3 - 32*n1^2*n3 + 136*n3^2 - 40*d*n3^2 + 
      32*n1*n3^2 + 408*n4 - 338*d*n4 + 67*d^2*n4 - 60*n1*n4 + 16*d*n1*n4 - 
      12*n1^2*n4 + 256*n3*n4 - 94*d*n3*n4 + 12*n1*n3*n4 + 24*n3^2*n4 + 
      104*n4^2 - 42*d*n4^2 - 12*n1*n4^2 + 32*n3*n4^2 + 8*n4^3 + 120*n5 - 
      118*d*n5 + 25*d^2*n5 - 84*n1*n5 + 32*d*n1*n5 - 4*n1^2*n5 + 136*n3*n5 - 
      50*d*n3*n5 - 12*n1*n3*n5 + 16*n3^2*n5 + 144*n4*n5 - 56*d*n4*n5 - 
      16*n1*n4*n5 + 40*n3*n4*n5 + 24*n4^2*n5 + 16*n5^2 - 10*d*n5^2 - 
      12*n1*n5^2 + 16*n3*n5^2 + 16*n4*n5^2 + 240*n6 - 232*d*n6 + 50*d^2*n6 - 
      56*n1*n6 + 16*d*n1*n6 - 8*n1^2*n6 + 200*n3*n6 - 78*d*n3*n6 + 
      4*n1*n3*n6 + 24*n3^2*n6 + 172*n4*n6 - 70*d*n4*n6 - 12*n1*n4*n6 + 
      52*n3*n4*n6 + 20*n4^2*n6 + 100*n5*n6 - 38*d*n5*n6 - 12*n1*n5*n6 + 
      28*n3*n5*n6 + 32*n4*n5*n6 + 12*n5^2*n6 + 56*n6^2 - 26*d*n6^2 - 
      4*n1*n6^2 + 20*n3*n6^2 + 16*n4*n6^2 + 16*n5*n6^2 + 4*n6^3)*
     j[p4a, n1, 1, n3, n4, n5, 1 + n6, 0, 1, 1, 1, 1, -1, 1, 1])/
    (4*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((-28 + 24*d - 5*d^2 + 24*n1 - 8*d*n1 + 4*n1^2 - 72*n3 + 54*d*n3 - 
      9*d^2*n3 + 12*n1*n3 + 4*n1^2*n3 - 44*n3^2 + 12*d*n3^2 - 8*n1*n3^2 - 
      32*n4 + 12*d*n4 - 56*n3*n4 + 18*d*n3*n4 - 4*n1*n3*n4 - 8*n3^2*n4 - 
      4*n4^2 - 8*n3*n4^2 - 4*n5 + 2*d*n5 + 4*n1*n5 - 12*n3*n5 + 6*d*n3*n5 + 
      4*n1*n3*n5 - 8*n3^2*n5 - 4*n4*n5 - 8*n3*n4*n5 - 36*n6 + 14*d*n6 + 
      4*n1*n6 - 40*n3*n6 + 12*d*n3*n6 - 8*n3^2*n6 - 12*n4*n6 - 12*n3*n4*n6 - 
      4*n5*n6 - 4*n3*n5*n6 - 8*n6^2 - 4*n3*n6^2)*j[p4a, n1, 1, n3, n4, n5, 
      1 + n6, 0, 1, 1, 1, 1, 0, 0, 1])/(4*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 
      2*n6)*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((14 - 19*d + 5*d^2 + 2*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 2*n1*n3 + 2*n3^2 + 
      16*n4 - 7*d*n4 + 2*n1*n4 + 4*n3*n4 + 2*n4^2 + 2*n5 - 2*d*n5 + 2*n3*n5 + 
      2*n4*n5 + 4*n6 - 4*d*n6 + 4*n3*n6 + 4*n4*n6)*j[p4a, n1, 1, n3, n4, n5, 
      1 + n6, 0, 1, 1, 2, 0, -2, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((-14 + 19*d - 5*d^2 - 2*n1 + 2*d*n1 - 16*n3 + 7*d*n3 - 2*n1*n3 - 2*n3^2 - 
      16*n4 + 7*d*n4 - 2*n1*n4 - 4*n3*n4 - 2*n4^2 - 2*n5 + 2*d*n5 - 2*n3*n5 - 
      2*n4*n5 - 4*n6 + 4*d*n6 - 4*n3*n6 - 4*n4*n6)*j[p4a, n1, 1, n3, n4, n5, 
      1 + n6, 0, 1, 1, 2, 0, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((6 - 9*d + 2*d^2 + 6*n1 - 4*d*n1 + 4*n3 + 4*n1*n3 - 2*n3^2 + 8*n4 - 
      3*d*n4 + 2*n1*n4 + 2*n4^2 + 2*n5 - 2*d*n5 + 2*n3*n5 + 2*n4*n5 - 4*n6 + 
      d*n6 + 2*n1*n6 - 2*n3*n6 - 2*n6^2)*j[p4a, n1, 1, n3, n4, n5, 1 + n6, 0, 
      1, 2, 0, 1, -1, 1, 1])/(2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((-14 + 19*d - 5*d^2 - 2*n1 + 2*d*n1 - 16*n3 + 7*d*n3 - 2*n1*n3 - 2*n3^2 - 
      16*n4 + 7*d*n4 - 2*n1*n4 - 4*n3*n4 - 2*n4^2 - 2*n5 + 2*d*n5 - 2*n3*n5 - 
      2*n4*n5 - 4*n6 + 4*d*n6 - 4*n3*n6 - 4*n4*n6)*j[p4a, n1, 1, n3, n4, n5, 
      1 + n6, 0, 1, 2, 1, 0, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((-20 + 14*d - 2*d^2 + 20*n1 - 6*d*n1 + 4*n1^2 - 20*n3 + 5*d*n3 - 
      2*n1*n3 - 24*n4 + 8*d*n4 - 4*n3*n4 - 4*n4^2 - 4*n5 + 2*d*n5 + 4*n1*n5 - 
      4*n3*n5 - 4*n4*n5 - 28*n6 + 9*d*n6 + 2*n1*n6 - 6*n3*n6 - 8*n4*n6 - 
      4*n5*n6 - 6*n6^2)*j[p4a, n1, 1, n3, n4, n5, 1 + n6, 0, 1, 2, 1, 1, -1, 
      1, 0])/(2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((20 - 14*d + 2*d^2 - 20*n1 + 6*d*n1 - 4*n1^2 + 20*n3 - 5*d*n3 + 2*n1*n3 + 
      24*n4 - 8*d*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 2*d*n5 - 4*n1*n5 + 4*n3*n5 + 
      4*n4*n5 + 28*n6 - 9*d*n6 - 2*n1*n6 + 6*n3*n6 + 8*n4*n6 + 4*n5*n6 + 
      6*n6^2)*j[p4a, n1, 1, n3, n4, n5, 1 + n6, 0, 1, 2, 1, 1, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + j[p4a, n1, 1, n3, n4, n5, 1 + n6, 0, 2, 1, 1, 
     0, -2, 1, 1]/(2*(-3 + d - n4 - n5 - n6)) - 
   ((1 + n6)*(14 - 19*d + 5*d^2 + 2*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 2*n1*n3 + 
      2*n3^2 + 16*n4 - 7*d*n4 + 2*n1*n4 + 4*n3*n4 + 2*n4^2 + 2*n5 - 2*d*n5 + 
      2*n3*n5 + 2*n4*n5 + 4*n6 - 4*d*n6 + 4*n3*n6 + 4*n4*n6)*
     j[p4a, n1, 1, n3, n4, n5, 2 + n6, -1, 0, 1, 1, 1, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((1 + n6)*j[p4a, n1, 1, n3, n4, n5, 2 + n6, -1, 1, 0, 1, 1, -1, 1, 1])/
    (2*(-3 + d - n4 - n5 - n6)) + 
   ((1 + n6)*j[p4a, n1, 1, n3, n4, n5, 2 + n6, -1, 1, 1, 0, 1, -1, 1, 1])/
    (2*(3 - d + n4 + n5 + n6)) - 
   ((1 + n6)*(20 - 14*d + 2*d^2 - 20*n1 + 6*d*n1 - 4*n1^2 + 20*n3 - 5*d*n3 + 
      2*n1*n3 + 24*n4 - 8*d*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 2*d*n5 - 4*n1*n5 + 
      4*n3*n5 + 4*n4*n5 + 28*n6 - 9*d*n6 - 2*n1*n6 + 6*n3*n6 + 8*n4*n6 + 
      4*n5*n6 + 6*n6^2)*j[p4a, n1, 1, n3, n4, n5, 2 + n6, -1, 1, 1, 1, 1, -1, 
      1, 1])/(2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((1 + n6)*(14 - 19*d + 5*d^2 + 2*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 2*n1*n3 + 
      2*n3^2 + 16*n4 - 7*d*n4 + 2*n1*n4 + 4*n3*n4 + 2*n4^2 + 2*n5 - 2*d*n5 + 
      2*n3*n5 + 2*n4*n5 + 4*n6 - 4*d*n6 + 4*n3*n6 + 4*n4*n6)*
     j[p4a, n1, 1, n3, n4, n5, 2 + n6, 0, 0, 1, 1, 1, -2, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - 
   ((1 + n6)*(20 - 14*d + 2*d^2 - 20*n1 + 6*d*n1 - 4*n1^2 + 20*n3 - 5*d*n3 + 
      2*n1*n3 + 24*n4 - 8*d*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 2*d*n5 - 4*n1*n5 + 
      4*n3*n5 + 4*n4*n5 + 28*n6 - 9*d*n6 - 2*n1*n6 + 6*n3*n6 + 8*n4*n6 + 
      4*n5*n6 + 6*n6^2)*j[p4a, n1, 1, n3, n4, n5, 2 + n6, 0, 0, 1, 1, 1, -1, 
      1, 1])/(2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((1 + n6)*j[p4a, n1, 1, n3, n4, n5, 2 + n6, 0, 1, 0, 1, 1, -2, 1, 1])/
    (2*(3 - d + n4 + n5 + n6)) + 
   ((1 + n6)*j[p4a, n1, 1, n3, n4, n5, 2 + n6, 0, 1, 1, 0, 1, -2, 1, 1])/
    (2*(-3 + d - n4 - n5 - n6)) + 
   ((1 + n6)*(20 - 14*d + 2*d^2 - 20*n1 + 6*d*n1 - 4*n1^2 + 20*n3 - 5*d*n3 + 
      2*n1*n3 + 24*n4 - 8*d*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 2*d*n5 - 4*n1*n5 + 
      4*n3*n5 + 4*n4*n5 + 28*n6 - 9*d*n6 - 2*n1*n6 + 6*n3*n6 + 8*n4*n6 + 
      4*n5*n6 + 6*n6^2)*j[p4a, n1, 1, n3, n4, n5, 2 + n6, 0, 1, 1, 1, 1, -2, 
      1, 1])/(2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - 
   ((1 + n6)*(20 - 14*d + 2*d^2 - 20*n1 + 6*d*n1 - 4*n1^2 + 20*n3 - 5*d*n3 + 
      2*n1*n3 + 24*n4 - 8*d*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 2*d*n5 - 4*n1*n5 + 
      4*n3*n5 + 4*n4*n5 + 28*n6 - 9*d*n6 - 2*n1*n6 + 6*n3*n6 + 8*n4*n6 + 
      4*n5*n6 + 6*n6^2)*j[p4a, n1, 1, n3, n4, n5, 2 + n6, 0, 1, 1, 1, 1, -1, 
      0, 1])/(2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - 
   ((1 + n6)*(20 - 14*d + 2*d^2 - 20*n1 + 6*d*n1 - 4*n1^2 + 20*n3 - 5*d*n3 + 
      2*n1*n3 + 24*n4 - 8*d*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 2*d*n5 - 4*n1*n5 + 
      4*n3*n5 + 4*n4*n5 + 28*n6 - 9*d*n6 - 2*n1*n6 + 6*n3*n6 + 8*n4*n6 + 
      4*n5*n6 + 6*n6^2)*j[p4a, n1, 1, n3, n4, n5, 2 + n6, 0, 1, 1, 1, 1, -1, 
      1, 0])/(2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + (n5*(10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*
     j[p4a, n1, 1, n3, n4, 1 + n5, n6, -1, 1, 1, 1, 1, 0, 1, 1])/
    (4*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   (n5*j[p4a, n1, 1, n3, n4, 1 + n5, n6, 0, 1, 0, 1, 1, -1, 1, 1])/
    (2*(3 - d + n4 + n5 + n6)) + 
   (n5*j[p4a, n1, 1, n3, n4, 1 + n5, n6, 0, 1, 1, 1, 1, -1, 0, 1])/
    (2*(3 - d + n4 + n5 + n6)) - 
   (n5*j[p4a, n1, 1, n3, n4, 1 + n5, n6, 0, 1, 1, 1, 1, -1, 1, 0])/
    (2*(3 - d + n4 + n5 + n6)) + (n5*(10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*
     j[p4a, n1, 1, n3, n4, 1 + n5, 1 + n6, -2, 1, 1, 1, 1, 0, 1, 1])/
    (4*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   (n5*(-14 + 19*d - 5*d^2 - 2*n1 + 2*d*n1 - 16*n3 + 7*d*n3 - 2*n1*n3 - 
      2*n3^2 - 16*n4 + 7*d*n4 - 2*n1*n4 - 4*n3*n4 - 2*n4^2 - 2*n5 + 2*d*n5 - 
      2*n3*n5 - 2*n4*n5 - 4*n6 + 4*d*n6 - 4*n3*n6 - 4*n4*n6)*
     j[p4a, n1, 1, n3, n4, 1 + n5, 1 + n6, -1, 1, 0, 1, 1, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   (n5*(-14 + 19*d - 5*d^2 - 2*n1 + 2*d*n1 - 16*n3 + 7*d*n3 - 2*n1*n3 - 
      2*n3^2 - 16*n4 + 7*d*n4 - 2*n1*n4 - 4*n3*n4 - 2*n4^2 - 2*n5 + 2*d*n5 - 
      2*n3*n5 - 2*n4*n5 - 4*n6 + 4*d*n6 - 4*n3*n6 - 4*n4*n6)*
     j[p4a, n1, 1, n3, n4, 1 + n5, 1 + n6, -1, 1, 1, 1, 1, -1, 0, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - 
   (n5*(-14 + 19*d - 5*d^2 - 2*n1 + 2*d*n1 - 16*n3 + 7*d*n3 - 2*n1*n3 - 
      2*n3^2 - 16*n4 + 7*d*n4 - 2*n1*n4 - 4*n3*n4 - 2*n4^2 - 2*n5 + 2*d*n5 - 
      2*n3*n5 - 2*n4*n5 - 4*n6 + 4*d*n6 - 4*n3*n6 - 4*n4*n6)*
     j[p4a, n1, 1, n3, n4, 1 + n5, 1 + n6, -1, 1, 1, 1, 1, -1, 1, 0])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - (n5*(10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*
     j[p4a, n1, 1, n3, n4, 1 + n5, 1 + n6, -1, 1, 1, 1, 1, -1, 1, 1])/
    (4*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   (n5*(10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*j[p4a, n1, 1, n3, n4, 1 + n5, 
      1 + n6, -1, 1, 1, 1, 1, 0, 0, 1])/(4*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + (n5*(10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*
     j[p4a, n1, 1, n3, n4, 1 + n5, 1 + n6, -1, 1, 1, 1, 1, 0, 1, 0])/
    (4*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   (n5*(-20 + 14*d - 2*d^2 + 20*n1 - 6*d*n1 + 4*n1^2 - 20*n3 + 5*d*n3 - 
      2*n1*n3 - 24*n4 + 8*d*n4 - 4*n3*n4 - 4*n4^2 - 4*n5 + 2*d*n5 + 4*n1*n5 - 
      4*n3*n5 - 4*n4*n5 - 28*n6 + 9*d*n6 + 2*n1*n6 - 6*n3*n6 - 8*n4*n6 - 
      4*n5*n6 - 6*n6^2)*j[p4a, n1, 1, n3, n4, 1 + n5, 1 + n6, 0, 1, 1, 1, 1, 
      -1, 0, 1])/(2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   (n5*(-20 + 14*d - 2*d^2 + 20*n1 - 6*d*n1 + 4*n1^2 - 20*n3 + 5*d*n3 - 
      2*n1*n3 - 24*n4 + 8*d*n4 - 4*n3*n4 - 4*n4^2 - 4*n5 + 2*d*n5 + 4*n1*n5 - 
      4*n3*n5 - 4*n4*n5 - 28*n6 + 9*d*n6 + 2*n1*n6 - 6*n3*n6 - 8*n4*n6 - 
      4*n5*n6 - 6*n6^2)*j[p4a, n1, 1, n3, n4, 1 + n5, 1 + n6, 0, 1, 1, 1, 1, 
      -1, 1, 0])/(2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - (n4*(10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*
     j[p4a, n1, 1, n3, 1 + n4, -1 + n5, 1 + n6, -1, 1, 1, 1, 1, 0, 1, 1])/
    (4*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   (n4*(26 - 23*d + 4*d^2 - 14*n1 + 2*d*n1 - 4*n1^2 + 24*n3 - 5*d*n3 + 
      6*n1*n3 - 2*n3^2 + 32*n4 - 11*d*n4 + 2*n1*n4 + 4*n3*n4 + 6*n4^2 + 
      6*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 24*n6 - 8*d*n6 + 
      4*n3*n6 + 8*n4*n6 + 4*n5*n6 + 4*n6^2)*j[p4a, n1, 1, n3, 1 + n4, 
      -1 + n5, 1 + n6, 0, 0, 1, 1, 1, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   (n4*(26 - 23*d + 4*d^2 - 14*n1 + 2*d*n1 - 4*n1^2 + 24*n3 - 5*d*n3 + 
      6*n1*n3 - 2*n3^2 + 32*n4 - 11*d*n4 + 2*n1*n4 + 4*n3*n4 + 6*n4^2 + 
      6*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 24*n6 - 8*d*n6 + 
      4*n3*n6 + 8*n4*n6 + 4*n5*n6 + 4*n6^2)*j[p4a, n1, 1, n3, 1 + n4, 
      -1 + n5, 1 + n6, 0, 1, 0, 1, 1, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - 
   (n4*(26 - 23*d + 4*d^2 - 14*n1 + 2*d*n1 - 4*n1^2 + 24*n3 - 5*d*n3 + 
      6*n1*n3 - 2*n3^2 + 32*n4 - 11*d*n4 + 2*n1*n4 + 4*n3*n4 + 6*n4^2 + 
      6*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 24*n6 - 8*d*n6 + 
      4*n3*n6 + 8*n4*n6 + 4*n5*n6 + 4*n6^2)*j[p4a, n1, 1, n3, 1 + n4, 
      -1 + n5, 1 + n6, 0, 1, 1, 0, 1, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   (n4*(26 - 23*d + 4*d^2 - 14*n1 + 2*d*n1 - 4*n1^2 + 24*n3 - 5*d*n3 + 
      6*n1*n3 - 2*n3^2 + 32*n4 - 11*d*n4 + 2*n1*n4 + 4*n3*n4 + 6*n4^2 + 
      6*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 24*n6 - 8*d*n6 + 
      4*n3*n6 + 8*n4*n6 + 4*n5*n6 + 4*n6^2)*j[p4a, n1, 1, n3, 1 + n4, 
      -1 + n5, 1 + n6, 0, 1, 1, 1, 0, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   (n4*(26 - 23*d + 4*d^2 - 14*n1 + 2*d*n1 - 4*n1^2 + 24*n3 - 5*d*n3 + 
      6*n1*n3 - 2*n3^2 + 32*n4 - 11*d*n4 + 2*n1*n4 + 4*n3*n4 + 6*n4^2 + 
      6*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 24*n6 - 8*d*n6 + 
      4*n3*n6 + 8*n4*n6 + 4*n5*n6 + 4*n6^2)*j[p4a, n1, 1, n3, 1 + n4, 
      -1 + n5, 1 + n6, 0, 1, 1, 1, 1, -1, 1, 0])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   (n4*(-16 + 34*d - 11*d^2 - 20*n1 + 8*d*n1 - 4*n1^2 - 24*n3 + 16*d*n3 - 
      8*n3^2 - 16*n4 + 10*d*n4 - 4*n1*n4 - 8*n3*n4 + 2*d*n5 - 4*n1*n5 + 
      12*n6 + 4*d*n6 - 8*n3*n6 - 4*n4*n6 + 4*n5*n6 + 4*n6^2)*
     j[p4a, n1, 1, n3, 1 + n4, -1 + n5, 1 + n6, 0, 1, 1, 1, 1, -1, 1, 1])/
    (4*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + (n4*(10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*
     j[p4a, n1, 1, n3, 1 + n4, n5, n6, -1, 1, 1, 1, 1, 0, 1, 1])/
    (4*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   (n4*j[p4a, n1, 1, n3, 1 + n4, n5, n6, 0, 0, 1, 1, 1, -1, 1, 1])/
    (2*(3 - d + n4 + n5 + n6)) - 
   (n4*j[p4a, n1, 1, n3, 1 + n4, n5, n6, 0, 1, 0, 1, 1, -1, 1, 1])/
    (2*(3 - d + n4 + n5 + n6)) + 
   (n4*j[p4a, n1, 1, n3, 1 + n4, n5, n6, 0, 1, 1, 0, 1, -1, 1, 1])/
    (2*(3 - d + n4 + n5 + n6)) - 
   (n4*j[p4a, n1, 1, n3, 1 + n4, n5, n6, 0, 1, 1, 1, 0, -1, 1, 1])/
    (2*(3 - d + n4 + n5 + n6)) - 
   (n4*j[p4a, n1, 1, n3, 1 + n4, n5, n6, 0, 1, 1, 1, 1, -1, 1, 0])/
    (2*(3 - d + n4 + n5 + n6)) + (n4*(10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*
     j[p4a, n1, 1, n3, 1 + n4, n5, 1 + n6, -2, 1, 1, 1, 1, 0, 1, 1])/
    (4*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   (n4*(18 - 13*d + d^2 - 10*n1 - 4*n1^2 + 12*n3 + 2*d*n3 + 8*n1*n3 - 
      6*n3^2 + 24*n4 - 7*d*n4 + 2*n1*n4 + 6*n4^2 + 6*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 16*n6 - 3*d*n6 + 2*n1*n6 - 2*n3*n6 + 4*n4*n6 + 
      4*n5*n6 + 2*n6^2)*j[p4a, n1, 1, n3, 1 + n4, n5, 1 + n6, -1, 0, 1, 1, 1, 
      -1, 1, 1])/(2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - (n4*(10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*
     j[p4a, n1, 1, n3, 1 + n4, n5, 1 + n6, -1, 0, 1, 1, 1, 0, 1, 1])/
    (4*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   (n4*(26 - 23*d + 4*d^2 - 14*n1 + 2*d*n1 - 4*n1^2 + 24*n3 - 5*d*n3 + 
      6*n1*n3 - 2*n3^2 + 32*n4 - 11*d*n4 + 2*n1*n4 + 4*n3*n4 + 6*n4^2 + 
      6*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 24*n6 - 8*d*n6 + 
      4*n3*n6 + 8*n4*n6 + 4*n5*n6 + 4*n6^2)*j[p4a, n1, 1, n3, 1 + n4, n5, 
      1 + n6, -1, 1, 0, 1, 1, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   (n4*(26 - 23*d + 4*d^2 - 14*n1 + 2*d*n1 - 4*n1^2 + 24*n3 - 5*d*n3 + 
      6*n1*n3 - 2*n3^2 + 32*n4 - 11*d*n4 + 2*n1*n4 + 4*n3*n4 + 6*n4^2 + 
      6*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 24*n6 - 8*d*n6 + 
      4*n3*n6 + 8*n4*n6 + 4*n5*n6 + 4*n6^2)*j[p4a, n1, 1, n3, 1 + n4, n5, 
      1 + n6, -1, 1, 1, 0, 1, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - 
   (n4*(26 - 23*d + 4*d^2 - 14*n1 + 2*d*n1 - 4*n1^2 + 24*n3 - 5*d*n3 + 
      6*n1*n3 - 2*n3^2 + 32*n4 - 11*d*n4 + 2*n1*n4 + 4*n3*n4 + 6*n4^2 + 
      6*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 24*n6 - 8*d*n6 + 
      4*n3*n6 + 8*n4*n6 + 4*n5*n6 + 4*n6^2)*j[p4a, n1, 1, n3, 1 + n4, n5, 
      1 + n6, -1, 1, 1, 1, 0, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   (n4*(34 - 33*d + 7*d^2 - 18*n1 + 4*d*n1 - 4*n1^2 + 36*n3 - 12*d*n3 + 
      4*n1*n3 + 2*n3^2 + 40*n4 - 15*d*n4 + 2*n1*n4 + 8*n3*n4 + 6*n4^2 + 
      6*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 32*n6 - 13*d*n6 - 
      2*n1*n6 + 10*n3*n6 + 12*n4*n6 + 4*n5*n6 + 6*n6^2)*
     j[p4a, n1, 1, n3, 1 + n4, n5, 1 + n6, -1, 1, 1, 1, 1, -1, 1, 0])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - 
   (n4*(-16 + 34*d - 11*d^2 - 20*n1 + 8*d*n1 - 4*n1^2 - 24*n3 + 16*d*n3 - 
      8*n3^2 - 16*n4 + 10*d*n4 - 4*n1*n4 - 8*n3*n4 + 2*d*n5 - 4*n1*n5 + 
      12*n6 + 4*d*n6 - 8*n3*n6 - 4*n4*n6 + 4*n5*n6 + 4*n6^2)*
     j[p4a, n1, 1, n3, 1 + n4, n5, 1 + n6, -1, 1, 1, 1, 1, -1, 1, 1])/
    (4*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + (n4*(10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*
     j[p4a, n1, 1, n3, 1 + n4, n5, 1 + n6, -1, 1, 1, 1, 1, 0, 1, 0])/
    (4*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   (n4*(20 - 14*d + 2*d^2 - 20*n1 + 6*d*n1 - 4*n1^2 + 20*n3 - 5*d*n3 + 
      2*n1*n3 + 24*n4 - 8*d*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 2*d*n5 - 4*n1*n5 + 
      4*n3*n5 + 4*n4*n5 + 28*n6 - 9*d*n6 - 2*n1*n6 + 6*n3*n6 + 8*n4*n6 + 
      4*n5*n6 + 6*n6^2)*j[p4a, n1, 1, n3, 1 + n4, n5, 1 + n6, 0, 1, 1, 1, 1, 
      -1, 1, 0])/(2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - 
   (n3*(-18 + 13*d - d^2 + 10*n1 + 4*n1^2 - 12*n3 - 2*d*n3 - 8*n1*n3 + 
      6*n3^2 - 24*n4 + 7*d*n4 - 2*n1*n4 - 6*n4^2 - 6*n5 + 4*d*n5 + 4*n1*n5 - 
      6*n3*n5 - 6*n4*n5 - 16*n6 + 3*d*n6 - 2*n1*n6 + 2*n3*n6 - 4*n4*n6 - 
      4*n5*n6 - 2*n6^2)*j[p4a, n1, 1, 1 + n3, n4, n5, 1 + n6, -1, 0, 1, 1, 1, 
      -1, 1, 1])/(2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + (n3*(-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*
     j[p4a, n1, 1, 1 + n3, n4, n5, 1 + n6, -1, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   (n3*(34 - 33*d + 7*d^2 - 18*n1 + 4*d*n1 - 4*n1^2 + 36*n3 - 12*d*n3 + 
      4*n1*n3 + 2*n3^2 + 40*n4 - 15*d*n4 + 2*n1*n4 + 8*n3*n4 + 6*n4^2 + 
      6*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 32*n6 - 13*d*n6 - 
      2*n1*n6 + 10*n3*n6 + 12*n4*n6 + 4*n5*n6 + 6*n6^2)*
     j[p4a, n1, 1, 1 + n3, n4, n5, 1 + n6, -1, 1, 1, 0, 1, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - 
   (n3*(34 - 33*d + 7*d^2 - 18*n1 + 4*d*n1 - 4*n1^2 + 36*n3 - 12*d*n3 + 
      4*n1*n3 + 2*n3^2 + 40*n4 - 15*d*n4 + 2*n1*n4 + 8*n3*n4 + 6*n4^2 + 
      6*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 32*n6 - 13*d*n6 - 
      2*n1*n6 + 10*n3*n6 + 12*n4*n6 + 4*n5*n6 + 6*n6^2)*
     j[p4a, n1, 1, 1 + n3, n4, n5, 1 + n6, -1, 1, 1, 1, 0, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - 
   (n3*(-18 + 13*d - d^2 + 10*n1 + 4*n1^2 - 12*n3 - 2*d*n3 - 8*n1*n3 + 
      6*n3^2 - 24*n4 + 7*d*n4 - 2*n1*n4 - 6*n4^2 - 6*n5 + 4*d*n5 + 4*n1*n5 - 
      6*n3*n5 - 6*n4*n5 - 16*n6 + 3*d*n6 - 2*n1*n6 + 2*n3*n6 - 4*n4*n6 - 
      4*n5*n6 - 2*n6^2)*j[p4a, n1, 1, 1 + n3, n4, n5, 1 + n6, -1, 1, 1, 1, 1, 
      -1, 0, 1])/(2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   (n3*(-12 + 4*d + d^2 + 16*n1 - 4*d*n1 + 4*n1^2 - 8*n3 - 2*d*n3 - 4*n1*n3 + 
      4*n3^2 - 16*n4 + 4*d*n4 - 4*n4^2 - 4*n5 + 2*d*n5 + 4*n1*n5 - 4*n3*n5 - 
      4*n4*n5 - 20*n6 + 4*d*n6 - 4*n4*n6 - 4*n5*n6 - 4*n6^2)*
     j[p4a, n1, 1, 1 + n3, n4, n5, 1 + n6, -1, 1, 1, 1, 1, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + (n3*(-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*
     j[p4a, n1, 1, 1 + n3, n4, n5, 1 + n6, -1, 1, 1, 1, 1, 0, 0, 1])/
    (2*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   (n3*j[p4a, n1, 1, 1 + n3, n4, n5, 1 + n6, 0, 0, 1, 1, 1, -2, 1, 1])/
    (2*(-3 + d - n4 - n5 - n6)) + 
   (n3*j[p4a, n1, 1, 1 + n3, n4, n5, 1 + n6, 0, 0, 1, 1, 1, -1, 1, 1])/
    (-3 + d - n4 - n5 - n6) - (n3*j[p4a, n1, 1, 1 + n3, n4, n5, 1 + n6, 0, 1, 
      1, 0, 1, -2, 1, 1])/(2*(-3 + d - n4 - n5 - n6)) + 
   (n3*j[p4a, n1, 1, 1 + n3, n4, n5, 1 + n6, 0, 1, 1, 1, 0, -2, 1, 1])/
    (2*(-3 + d - n4 - n5 - n6)) + 
   (n3*(-52 + 60*d - 13*d^2 + 8*d*n1 + 4*n1^2 - 48*n3 + 12*d*n3 - 16*n1*n3 + 
      4*n3^2 - 64*n4 + 24*d*n4 - 8*n1*n4 - 8*n3*n4 - 12*n4^2 - 12*n5 + 
      10*d*n5 + 4*n1*n5 - 12*n3*n5 - 12*n4*n5 - 20*n6 + 10*d*n6 - 4*n1*n6 - 
      4*n3*n6 - 12*n4*n6 - 4*n5*n6)*j[p4a, n1, 1, 1 + n3, n4, n5, 1 + n6, 0, 
      1, 1, 1, 1, -1, 0, 1])/(4*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((14 - 19*d + 5*d^2 + 2*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 2*n1*n3 + 2*n3^2 + 
      16*n4 - 7*d*n4 + 2*n1*n4 + 4*n3*n4 + 2*n4^2 + 2*n5 - 2*d*n5 + 2*n3*n5 + 
      2*n4*n5 + 4*n6 - 4*d*n6 + 4*n3*n6 + 4*n4*n6)*j[p4a, n1, 2, -1 + n3, n4, 
      n5, 1 + n6, 0, 0, 1, 1, 1, -1, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + ((10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*
     j[p4a, n1, 2, -1 + n3, n4, n5, 1 + n6, 0, 0, 1, 1, 1, 0, 1, 1])/
    (4*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   j[p4a, n1, 2, -1 + n3, n4, n5, 1 + n6, 0, 1, 1, 0, 1, -1, 1, 1]/
    (2*(-3 + d - n4 - n5 - n6)) + 
   ((-14 + 19*d - 5*d^2 - 2*n1 + 2*d*n1 - 16*n3 + 7*d*n3 - 2*n1*n3 - 2*n3^2 - 
      16*n4 + 7*d*n4 - 2*n1*n4 - 4*n3*n4 - 2*n4^2 - 2*n5 + 2*d*n5 - 2*n3*n5 - 
      2*n4*n5 - 4*n6 + 4*d*n6 - 4*n3*n6 - 4*n4*n6)*j[p4a, n1, 2, n3, n4, n5, 
      1 + n6, -1, 0, 1, 1, 1, -1, 1, 1])/
    ((-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + ((-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*
     j[p4a, n1, 2, n3, n4, n5, 1 + n6, -1, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((6 - 9*d + 2*d^2 + 6*n1 - 4*d*n1 + 4*n3 + 4*n1*n3 - 2*n3^2 + 8*n4 - 
      3*d*n4 + 2*n1*n4 + 2*n4^2 + 2*n5 - 2*d*n5 + 2*n3*n5 + 2*n4*n5 - 4*n6 + 
      d*n6 + 2*n1*n6 - 2*n3*n6 - 2*n6^2)*j[p4a, n1, 2, n3, n4, n5, 1 + n6, 
      -1, 1, 1, 0, 1, -1, 1, 1])/(2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((-14 + 19*d - 5*d^2 - 2*n1 + 2*d*n1 - 16*n3 + 7*d*n3 - 2*n1*n3 - 2*n3^2 - 
      16*n4 + 7*d*n4 - 2*n1*n4 - 4*n3*n4 - 2*n4^2 - 2*n5 + 2*d*n5 - 2*n3*n5 - 
      2*n4*n5 - 4*n6 + 4*d*n6 - 4*n3*n6 - 4*n4*n6)*j[p4a, n1, 2, n3, n4, n5, 
      1 + n6, -1, 1, 1, 1, 1, -1, 0, 1])/
    ((-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + ((-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*
     j[p4a, n1, 2, n3, n4, n5, 1 + n6, -1, 1, 1, 1, 1, 0, 0, 1])/
    (2*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((14 - 19*d + 5*d^2 + 2*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 2*n1*n3 + 2*n3^2 + 
      16*n4 - 7*d*n4 + 2*n1*n4 + 4*n3*n4 + 2*n4^2 + 2*n5 - 2*d*n5 + 2*n3*n5 + 
      2*n4*n5 + 4*n6 - 4*d*n6 + 4*n3*n6 + 4*n4*n6)*j[p4a, n1, 2, n3, n4, n5, 
      1 + n6, 0, 0, 1, 1, 1, -2, 1, 1])/
    (2*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + ((10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*
     j[p4a, n1, 2, n3, n4, n5, 1 + n6, 0, 0, 1, 1, 1, -1, 1, 1])/
    (4*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   j[p4a, n1, 2, n3, n4, n5, 1 + n6, 0, 1, 1, 0, 1, -2, 1, 1]/
    (2*(-3 + d - n4 - n5 - n6)) - 
   (n1*(-28 + 24*d - 5*d^2 + 24*n1 - 8*d*n1 + 4*n1^2 - 32*n3 + 12*d*n3 - 
      4*n3^2 - 32*n4 + 12*d*n4 - 8*n3*n4 - 4*n4^2 - 4*n5 + 2*d*n5 + 4*n1*n5 - 
      4*n3*n5 - 4*n4*n5 - 36*n6 + 14*d*n6 + 4*n1*n6 - 12*n3*n6 - 12*n4*n6 - 
      4*n5*n6 - 8*n6^2)*j[p4a, 1 + n1, 0, n3, n4, n5, 1 + n6, 0, 1, 1, 1, 1, 
      -1, 1, 1])/(4*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + (n1*(10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*
     j[p4a, 1 + n1, 1, -1 + n3, n4, n5, 1 + n6, 0, 0, 1, 1, 1, 0, 1, 1])/
    (4*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   (n1*(10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*j[p4a, 1 + n1, 1, -1 + n3, n4, 
      n5, 1 + n6, 0, 1, 1, 1, 0, 0, 1, 1])/(4*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - (n1*(10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*
     j[p4a, 1 + n1, 1, n3, n4, n5, 1 + n6, -1, 0, 1, 1, 1, 0, 1, 1])/
    (4*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   (n1*(10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*j[p4a, 1 + n1, 1, n3, n4, n5, 
      1 + n6, -1, 1, 1, 1, 0, 0, 1, 1])/(4*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - (n1*(10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*
     j[p4a, 1 + n1, 1, n3, n4, n5, 1 + n6, -1, 1, 1, 1, 1, 0, 0, 1])/
    (4*(-2 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   (n1*(10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*j[p4a, 1 + n1, 1, n3, n4, n5, 
      1 + n6, -1, 1, 1, 1, 1, 0, 1, 1])/(4*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   (n1*(-12 + 4*d + d^2 + 16*n1 - 4*d*n1 + 4*n1^2 - 8*n3 - 2*d*n3 - 4*n1*n3 + 
      4*n3^2 - 16*n4 + 4*d*n4 - 4*n4^2 - 4*n5 + 2*d*n5 + 4*n1*n5 - 4*n3*n5 - 
      4*n4*n5 - 20*n6 + 4*d*n6 - 4*n4*n6 - 4*n5*n6 - 4*n6^2)*
     j[p4a, 1 + n1, 1, n3, n4, n5, 1 + n6, 0, 0, 1, 1, 1, -1, 1, 1])/
    (4*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   (n1*(-28 + 24*d - 5*d^2 + 24*n1 - 8*d*n1 + 4*n1^2 - 32*n3 + 12*d*n3 - 
      4*n3^2 - 32*n4 + 12*d*n4 - 8*n3*n4 - 4*n4^2 - 4*n5 + 2*d*n5 + 4*n1*n5 - 
      4*n3*n5 - 4*n4*n5 - 36*n6 + 14*d*n6 + 4*n1*n6 - 12*n3*n6 - 12*n4*n6 - 
      4*n5*n6 - 8*n6^2)*j[p4a, 1 + n1, 1, n3, n4, n5, 1 + n6, 0, 1, 1, 0, 1, 
      -1, 1, 1])/(4*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - 
   (n1*(-12 + 4*d + d^2 + 16*n1 - 4*d*n1 + 4*n1^2 - 8*n3 - 2*d*n3 - 4*n1*n3 + 
      4*n3^2 - 16*n4 + 4*d*n4 - 4*n4^2 - 4*n5 + 2*d*n5 + 4*n1*n5 - 4*n3*n5 - 
      4*n4*n5 - 20*n6 + 4*d*n6 - 4*n4*n6 - 4*n5*n6 - 4*n6^2)*
     j[p4a, 1 + n1, 1, n3, n4, n5, 1 + n6, 0, 1, 1, 1, 0, -1, 1, 1])/
    (4*(-4 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-2 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, (n8_)?Positive, 
    (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n10 == 1 && n11 == 1 && n12 == 0 && 
    n13 == 1 && n14 == 1 && n2 == 1 && n7 == 0 && n8 == 1 && n9 == 1 && 
     !(n5 == 0 || n6 == 0) -> 
  ((-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*j[p4a, -1 + n1, 0, n3, n4, n5, 
      1 + n6, 0, 1, 1, 2, 1, 0, 1, 1])/(2*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((86 - 59*d + 10*d^2 + 10*n1 - 4*d*n1 + 28*n3 - 9*d*n3 + 2*n1*n3 + 
      2*n3^2 + 52*n4 - 17*d*n4 + 6*n1*n4 + 6*n3*n4 + 6*n4^2 + 26*n5 - 
      9*d*n5 + 2*n1*n5 + 4*n3*n5 + 8*n4*n5 + 2*n5^2 + 44*n6 - 15*d*n6 + 
      2*n1*n6 + 8*n3*n6 + 12*n4*n6 + 6*n5*n6 + 6*n6^2)*
     j[p4a, -1 + n1, 0, n3, n4, n5, 1 + n6, 0, 2, 1, 1, 1, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + ((-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*
     (1 + n6)*j[p4a, -1 + n1, 0, n3, n4, n5, 2 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   (n5*j[p4a, -1 + n1, 0, n3, n4, 1 + n5, 1 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n6)) + 
   (n3*j[p4a, -1 + n1, 0, 1 + n3, n4, n5, 1 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5 - n6)) + ((-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*
     (1 + n6)*j[p4a, -1 + n1, 1, -1 + n3, n4, n5, 2 + n6, 0, 1, 1, 1, 1, 0, 
      1, 1])/(2*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   (n5*(10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*j[p4a, -1 + n1, 1, -1 + n3, n4, 
      1 + n5, 1 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/(2*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - (n5*(10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*
     j[p4a, -1 + n1, 1, n3, -1 + n4, 1 + n5, 1 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   j[p4a, -1 + n1, 1, n3, n4, n5, 1 + n6, 0, 0, 1, 1, 1, 0, 2, 1]/
    (2*(-3 + d - n4 - n5 - n6)) + ((10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*
     j[p4a, -1 + n1, 1, n3, n4, n5, 1 + n6, 0, 0, 1, 2, 1, 0, 1, 1])/
    (2*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((86 - 59*d + 10*d^2 + 10*n1 - 4*d*n1 + 28*n3 - 9*d*n3 + 2*n1*n3 + 
      2*n3^2 + 52*n4 - 17*d*n4 + 6*n1*n4 + 6*n3*n4 + 6*n4^2 + 26*n5 - 
      9*d*n5 + 2*n1*n5 + 4*n3*n5 + 8*n4*n5 + 2*n5^2 + 44*n6 - 15*d*n6 + 
      2*n1*n6 + 8*n3*n6 + 12*n4*n6 + 6*n5*n6 + 6*n6^2)*
     j[p4a, -1 + n1, 1, n3, n4, n5, 1 + n6, 0, 1, 1, 0, 2, 0, 1, 1])/
    ((-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((104 - 70*d + 15*d^2 - d^3 - 4*n1 + 6*d*n1 - d^2*n1 - 24*n1^2 + 
      8*d*n1^2 - 4*n1^3 + 28*n3 - 16*d*n3 + 2*d^2*n3 + 36*n1*n3 - 
      14*d*n1*n3 + 4*n1^2*n3 - 12*n3^2 + 6*d*n3^2 + 4*n1*n3^2 - 4*n3^3 + 
      112*n4 - 66*d*n4 + 10*d^2*n4 + 8*n1*n4 - 2*d*n1*n4 - 4*n1^2*n4 + 
      36*n3*n4 - 12*d*n3*n4 + 8*n1*n3*n4 + 44*n4^2 - 14*d*n4^2 + 4*n1*n4^2 + 
      8*n3*n4^2 + 4*n4^3 - 80*n5 + 62*d*n5 - 11*d^2*n5 - 48*n1*n5 + 
      18*d*n1*n5 - 8*n1^2*n5 + 4*n3*n5 - 4*d*n3*n5 + 4*n3^2*n5 - 40*n4*n5 + 
      14*d*n4*n5 - 12*n1*n4*n5 + 4*n3*n4*n5 - 4*n4^2*n5 - 44*n5^2 + 
      16*d*n5^2 - 8*n1*n5^2 - 4*n3*n5^2 - 12*n4*n5^2 - 4*n5^3 + 100*n6 - 
      46*d*n6 + 5*d^2*n6 + 12*n1*n6 - 2*d*n1*n6 + 8*n3*n6 - 2*d*n3*n6 + 
      56*n4*n6 - 16*d*n4*n6 + 4*n1*n4*n6 + 8*n3*n4*n6 + 8*n4^2*n6 - 
      28*n5*n6 + 12*d*n5*n6 - 4*n1*n5*n6 - 4*n3*n5*n6 - 8*n4*n5*n6 - 
      8*n5^2*n6 + 32*n6^2 - 8*d*n6^2 + 4*n3*n6^2 + 8*n4*n6^2 - 4*n5*n6^2 + 
      4*n6^3)*j[p4a, -1 + n1, 1, n3, n4, n5, 1 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + ((10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*
     j[p4a, -1 + n1, 1, n3, n4, n5, 1 + n6, 0, 1, 1, 1, 2, 0, 1, 1])/
    (2*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*j[p4a, -1 + n1, 1, n3, n4, n5, 
      1 + n6, 0, 1, 1, 2, 1, 0, 0, 1])/(2*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + ((10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*
     j[p4a, -1 + n1, 1, n3, n4, n5, 1 + n6, 0, 1, 1, 2, 1, 0, 1, 1])/
    (2*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((-76 + 40*d - 5*d^2 - 40*n1 + 12*d*n1 - 4*n1^2 + 20*n3 - 8*d*n3 + 
      4*n3^2 - 28*n4 + 8*d*n4 - 8*n1*n4 + 4*n3*n4 - 4*n4^2 - 40*n5 + 
      12*d*n5 - 8*n1*n5 - 8*n4*n5 - 4*n5^2 - 32*n6 + 8*d*n6 - 8*n1*n6 + 
      4*n3*n6 - 4*n4*n6 - 8*n5*n6 - 4*n6^2)*j[p4a, -1 + n1, 1, n3, n4, n5, 
      1 + n6, 0, 1, 2, 1, 1, 0, 1, 1])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 
      2*n6)*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   j[p4a, -1 + n1, 1, n3, n4, n5, 1 + n6, 0, 2, 1, 1, 1, 0, 0, 1]/
    (2*(-3 + d - n4 - n5 - n6)) - ((-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*
     (1 + n6)*j[p4a, -1 + n1, 1, n3, n4, n5, 2 + n6, -1, 1, 1, 1, 1, 0, 1, 
      1])/(2*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   ((-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*(1 + n6)*
     j[p4a, -1 + n1, 1, n3, n4, n5, 2 + n6, 0, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*(1 + n6)*
     j[p4a, -1 + n1, 1, n3, n4, n5, 2 + n6, 0, 1, 1, 1, 1, -1, 1, 1])/
    (2*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   ((-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*(1 + n6)*
     j[p4a, -1 + n1, 1, n3, n4, n5, 2 + n6, 0, 1, 1, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   ((-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*(1 + n6)*
     j[p4a, -1 + n1, 1, n3, n4, n5, 2 + n6, 0, 1, 1, 1, 1, 0, 1, 0])/
    (2*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   (n5*(7 - 2*d + 2*n1 - n3 + 2*n4 + 2*n5 + n6)*j[p4a, -1 + n1, 1, n3, n4, 
      1 + n5, 1 + n6, 0, 1, 1, 1, 1, 0, 0, 1])/(2*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + (n5*(7 - 2*d + 2*n1 - n3 + 2*n4 + 2*n5 + n6)*
     j[p4a, -1 + n1, 1, n3, n4, 1 + n5, 1 + n6, 0, 1, 1, 1, 1, 0, 1, 0])/
    (2*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   (n4*j[p4a, -1 + n1, 1, n3, 1 + n4, n5, 1 + n6, 0, 0, 1, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n6)) + (n4*(7 - 2*d + 2*n1 - n3 + 2*n4 + 2*n5 + n6)*
     j[p4a, -1 + n1, 1, n3, 1 + n4, n5, 1 + n6, 0, 1, 1, 1, 1, 0, 1, 0])/
    (2*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   (n3*j[p4a, -1 + n1, 1, 1 + n3, n4, n5, 1 + n6, 0, 0, 1, 1, 1, 0, 1, 1])/
    (-3 + d - n4 - n5 - n6) - (n3*(-50 + 29*d - 4*d^2 - 22*n1 + 8*d*n1 + 
      8*n3 - 5*d*n3 - 6*n1*n3 + 6*n3^2 - 28*n4 + 9*d*n4 - 6*n1*n4 + 2*n3*n4 - 
      6*n4^2 - 26*n5 + 9*d*n5 - 2*n1*n5 - 4*n3*n5 - 8*n4*n5 - 2*n5^2 - 
      20*n6 + 5*d*n6 - 6*n1*n6 + 4*n3*n6 - 4*n4*n6 - 6*n5*n6 - 2*n6^2)*
     j[p4a, -1 + n1, 1, 1 + n3, n4, n5, 1 + n6, 0, 1, 1, 1, 1, 0, 0, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((50 - 29*d + 4*d^2 + 22*n1 - 8*d*n1 - 8*n3 + 5*d*n3 + 6*n1*n3 - 6*n3^2 + 
      28*n4 - 9*d*n4 + 6*n1*n4 - 2*n3*n4 + 6*n4^2 + 26*n5 - 9*d*n5 + 
      2*n1*n5 + 4*n3*n5 + 8*n4*n5 + 2*n5^2 + 20*n6 - 5*d*n6 + 6*n1*n6 - 
      4*n3*n6 + 4*n4*n6 + 6*n5*n6 + 2*n6^2)*j[p4a, -1 + n1, 2, n3, n4, n5, 
      1 + n6, 0, 0, 1, 1, 1, 0, 1, 1])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 
      2*n6)*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   j[p4a, -1 + n1, 2, n3, n4, n5, 1 + n6, 0, 1, 1, 1, 1, 0, 0, 1]/
    (3 - d + n4 + n5 + n6) + ((-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*
     j[p4a, n1, 0, -1 + n3, n4, n5, 1 + n6, 0, 1, 1, 2, 1, 0, 1, 1])/
    (2*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((1 + n6)*(68 - 44*d + 7*d^2 + 16*n1 - 6*d*n1 + 10*n3 - 2*d*n3 + 4*n1*n3 - 
      2*n3^2 + 40*n4 - 13*d*n4 + 6*n1*n4 + 2*n3*n4 + 6*n4^2 + 26*n5 - 
      9*d*n5 + 2*n1*n5 + 4*n3*n5 + 8*n4*n5 + 2*n5^2 + 32*n6 - 10*d*n6 + 
      4*n1*n6 + 2*n3*n6 + 8*n4*n6 + 6*n5*n6 + 4*n6^2)*
     j[p4a, n1, 0, -1 + n3, n4, n5, 2 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - (n4*(7 - 2*d + 2*n1 - n3 + 2*n4 + 2*n5 + n6)*
     j[p4a, n1, 0, -1 + n3, 1 + n4, n5, 1 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((1 + n6)*(-8 - 4*d + 2*d^2 - 24*n1 + 6*d*n1 - 4*n1^2 + 30*n3 - 10*d*n3 + 
      4*n1*n3 + 2*n3^2 + 12*n4 - 5*d*n4 - 2*n1*n4 + 6*n3*n4 + 2*n4^2 - 
      14*n5 + 3*d*n5 - 6*n1*n5 + 4*n3*n5 - 2*n5^2 - 2*d*n6 - 4*n1*n6 + 
      6*n3*n6 + 4*n4*n6 - 2*n5*n6)*j[p4a, n1, 0, n3, -1 + n4, n5, 2 + n6, 0, 
      1, 1, 1, 1, 0, 1, 1])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   ((1 + n6)*(68 - 44*d + 7*d^2 + 16*n1 - 6*d*n1 + 10*n3 - 2*d*n3 + 4*n1*n3 - 
      2*n3^2 + 40*n4 - 13*d*n4 + 6*n1*n4 + 2*n3*n4 + 6*n4^2 + 26*n5 - 
      9*d*n5 + 2*n1*n5 + 4*n3*n5 + 8*n4*n5 + 2*n5^2 + 32*n6 - 10*d*n6 + 
      4*n1*n6 + 2*n3*n6 + 8*n4*n6 + 6*n5*n6 + 4*n6^2)*
     j[p4a, n1, 0, n3, n4, -1 + n5, 2 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((-68 + 44*d - 7*d^2 - 16*n1 + 6*d*n1 - 10*n3 + 2*d*n3 - 4*n1*n3 + 
      2*n3^2 - 40*n4 + 13*d*n4 - 6*n1*n4 - 2*n3*n4 - 6*n4^2 - 26*n5 + 
      9*d*n5 - 2*n1*n5 - 4*n3*n5 - 8*n4*n5 - 2*n5^2 - 32*n6 + 10*d*n6 - 
      4*n1*n6 - 2*n3*n6 - 8*n4*n6 - 6*n5*n6 - 4*n6^2)*
     j[p4a, n1, 0, n3, n4, n5, 1 + n6, -1, 1, 1, 2, 1, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((-172 + 118*d - 20*d^2 - 106*n1 + 67*d*n1 - 10*d^2*n1 - 10*n1^2 + 
      4*d*n1^2 + 90*n3 - 89*d*n3 + 19*d^2*n3 - 30*n1*n3 + 5*d*n1*n3 - 
      6*n1^2*n3 + 64*n3^2 - 21*d*n3^2 + 8*n1*n3^2 + 2*n3^3 - 96*n4 + 
      38*d*n4 - 2*d^2*n4 - 40*n1*n4 + 11*d*n1*n4 - 2*n1^2*n4 + 62*n3*n4 - 
      25*d*n3*n4 + 12*n3^2*n4 - 24*n4^2 + 5*d*n4^2 - 4*n1*n4^2 + 8*n3*n4^2 - 
      2*n4^3 - 52*n5 + 18*d*n5 - 30*n1*n5 + 9*d*n1*n5 - 2*n1^2*n5 + 
      30*n3*n5 - 15*d*n3*n5 - 6*n1*n3*n5 + 12*n3^2*n5 - 2*n4*n5 - 3*d*n4*n5 - 
      2*n1*n4*n5 + 12*n3*n4*n5 - 4*n5^2 - 2*n1*n5^2 + 2*n3*n5^2 + 2*n4*n5^2 - 
      106*n6 + 45*d*n6 - 3*d^2*n6 - 42*n1*n6 + 13*d*n1*n6 - 2*n1^2*n6 + 
      42*n3*n6 - 20*d*n3*n6 - 4*n1*n3*n6 + 12*n3^2*n6 - 36*n4*n6 + 
      6*d*n4*n6 - 8*n1*n4*n6 + 14*n3*n4*n6 - 4*n4^2*n6 - 12*n5*n6 - 
      6*n1*n5*n6 + 10*n3*n5*n6 + 2*n4*n5*n6 - 24*n6^2 + 5*d*n6^2 - 
      4*n1*n6^2 + 4*n3*n6^2 - 4*n4*n6^2 - 2*n6^3)*j[p4a, n1, 0, n3, n4, n5, 
      1 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 
      2*n6)*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   j[p4a, n1, 0, n3, n4, n5, 1 + n6, 0, 1, 1, 1, 1, 0, 1, 2]/
    (2*(-3 + d - n4 - n5 - n6)) + ((-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*
     j[p4a, n1, 0, n3, n4, n5, 1 + n6, 0, 1, 1, 2, 1, -1, 1, 1])/
    (2*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((8 + 4*d - 2*d^2 + 24*n1 - 6*d*n1 + 4*n1^2 - 30*n3 + 10*d*n3 - 4*n1*n3 - 
      2*n3^2 - 12*n4 + 5*d*n4 + 2*n1*n4 - 6*n3*n4 - 2*n4^2 + 14*n5 - 3*d*n5 + 
      6*n1*n5 - 4*n3*n5 + 2*n5^2 + 2*d*n6 + 4*n1*n6 - 6*n3*n6 - 4*n4*n6 + 
      2*n5*n6)*j[p4a, n1, 0, n3, n4, n5, 1 + n6, 0, 1, 2, 1, 1, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((86 - 59*d + 10*d^2 + 10*n1 - 4*d*n1 + 28*n3 - 9*d*n3 + 2*n1*n3 + 
      2*n3^2 + 52*n4 - 17*d*n4 + 6*n1*n4 + 6*n3*n4 + 6*n4^2 + 26*n5 - 
      9*d*n5 + 2*n1*n5 + 4*n3*n5 + 8*n4*n5 + 2*n5^2 + 44*n6 - 15*d*n6 + 
      2*n1*n6 + 8*n3*n6 + 12*n4*n6 + 6*n5*n6 + 6*n6^2)*
     j[p4a, n1, 0, n3, n4, n5, 1 + n6, 0, 2, 1, 1, 1, -1, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - 
   ((1 + n6)*(68 - 44*d + 7*d^2 + 16*n1 - 6*d*n1 + 10*n3 - 2*d*n3 + 4*n1*n3 - 
      2*n3^2 + 40*n4 - 13*d*n4 + 6*n1*n4 + 2*n3*n4 + 6*n4^2 + 26*n5 - 
      9*d*n5 + 2*n1*n5 + 4*n3*n5 + 8*n4*n5 + 2*n5^2 + 32*n6 - 10*d*n6 + 
      4*n1*n6 + 2*n3*n6 + 8*n4*n6 + 6*n5*n6 + 4*n6^2)*
     j[p4a, n1, 0, n3, n4, n5, 2 + n6, -1, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((1 + n6)*(68 - 44*d + 7*d^2 + 16*n1 - 6*d*n1 + 10*n3 - 2*d*n3 + 4*n1*n3 - 
      2*n3^2 + 40*n4 - 13*d*n4 + 6*n1*n4 + 2*n3*n4 + 6*n4^2 + 26*n5 - 
      9*d*n5 + 2*n1*n5 + 4*n3*n5 + 8*n4*n5 + 2*n5^2 + 32*n6 - 10*d*n6 + 
      4*n1*n6 + 2*n3*n6 + 8*n4*n6 + 6*n5*n6 + 4*n6^2)*
     j[p4a, n1, 0, n3, n4, n5, 2 + n6, 0, 1, 1, 1, 1, -1, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((1 + n6)*j[p4a, n1, 0, n3, n4, n5, 2 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5 - n6)) - ((-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*
     (1 + n6)*j[p4a, n1, 0, n3, n4, 1 + n5, 1 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   (n4*(68 - 44*d + 7*d^2 + 16*n1 - 6*d*n1 + 10*n3 - 2*d*n3 + 4*n1*n3 - 
      2*n3^2 + 40*n4 - 13*d*n4 + 6*n1*n4 + 2*n3*n4 + 6*n4^2 + 26*n5 - 
      9*d*n5 + 2*n1*n5 + 4*n3*n5 + 8*n4*n5 + 2*n5^2 + 32*n6 - 10*d*n6 + 
      4*n1*n6 + 2*n3*n6 + 8*n4*n6 + 6*n5*n6 + 4*n6^2)*
     j[p4a, n1, 0, n3, 1 + n4, -1 + n5, 1 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - 
   (n4*j[p4a, n1, 0, n3, 1 + n4, n5, n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n6)) - 
   (n4*(68 - 44*d + 7*d^2 + 16*n1 - 6*d*n1 + 10*n3 - 2*d*n3 + 4*n1*n3 - 
      2*n3^2 + 40*n4 - 13*d*n4 + 6*n1*n4 + 2*n3*n4 + 6*n4^2 + 26*n5 - 
      9*d*n5 + 2*n1*n5 + 4*n3*n5 + 8*n4*n5 + 2*n5^2 + 32*n6 - 10*d*n6 + 
      4*n1*n6 + 2*n3*n6 + 8*n4*n6 + 6*n5*n6 + 4*n6^2)*
     j[p4a, n1, 0, n3, 1 + n4, n5, 1 + n6, -1, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   (n3*(-68 + 44*d - 7*d^2 - 16*n1 + 6*d*n1 - 10*n3 + 2*d*n3 - 4*n1*n3 + 
      2*n3^2 - 40*n4 + 13*d*n4 - 6*n1*n4 - 2*n3*n4 - 6*n4^2 - 26*n5 + 
      9*d*n5 - 2*n1*n5 - 4*n3*n5 - 8*n4*n5 - 2*n5^2 - 32*n6 + 10*d*n6 - 
      4*n1*n6 - 2*n3*n6 - 8*n4*n6 - 6*n5*n6 - 4*n6^2)*
     j[p4a, n1, 0, 1 + n3, n4, n5, 1 + n6, -1, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   (n3*j[p4a, n1, 0, 1 + n3, n4, n5, 1 + n6, 0, 1, 1, 1, 1, -1, 1, 1])/
    (2*(-3 + d - n4 - n5 - n6)) - 
   (n3*j[p4a, n1, 0, 1 + n3, n4, n5, 1 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5 - n6)) + (n3*(-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*
     j[p4a, n1, 0, 1 + n3, n4, 1 + n5, 1 + n6, -1, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   ((1 + n6)*(68 - 44*d + 7*d^2 + 16*n1 - 6*d*n1 + 10*n3 - 2*d*n3 + 4*n1*n3 - 
      2*n3^2 + 40*n4 - 13*d*n4 + 6*n1*n4 + 2*n3*n4 + 6*n4^2 + 26*n5 - 
      9*d*n5 + 2*n1*n5 + 4*n3*n5 + 8*n4*n5 + 2*n5^2 + 32*n6 - 10*d*n6 + 
      4*n1*n6 + 2*n3*n6 + 8*n4*n6 + 6*n5*n6 + 4*n6^2)*
     j[p4a, n1, 1, -1 + n3, n4, -1 + n5, 2 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    ((-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((-26 + 11*d - d^2 - 18*n1 + 4*d*n1 - 4*n1^2 + 12*n3 - 3*d*n3 + 6*n1*n3 - 
      2*n3^2 - d*n4 - 2*n1*n4 + 2*n3*n4 + 2*n4^2 - 14*n5 + 3*d*n5 - 6*n1*n5 + 
      4*n3*n5 - 2*n5^2 - 12*n6 + 3*d*n6 - 2*n1*n6 - 2*n5*n6 - 2*n6^2)*
     j[p4a, n1, 1, -1 + n3, n4, n5, 1 + n6, 0, 1, 0, 1, 1, 0, 1, 2])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + ((-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*
     (62 - 41*d + 7*d^2 + 18*n1 - 6*d*n1 + 12*n3 - 5*d*n3 + 2*n1*n3 + 
      2*n3^2 + 30*n4 - 10*d*n4 + 8*n1*n4 + 2*n3*n4 + 2*n4^2 + 20*n5 - 
      6*d*n5 + 4*n1*n5 + 4*n4*n5 + 2*n5^2 + 24*n6 - 7*d*n6 + 6*n1*n6 + 
      2*n4*n6 + 4*n5*n6 + 2*n6^2)*j[p4a, n1, 1, -1 + n3, n4, n5, 1 + n6, 0, 
      1, 1, 1, 1, 0, 1, 1])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((-8 - 4*d + 2*d^2 - 24*n1 + 6*d*n1 - 4*n1^2 + 30*n3 - 10*d*n3 + 4*n1*n3 + 
      2*n3^2 + 12*n4 - 5*d*n4 - 2*n1*n4 + 6*n3*n4 + 2*n4^2 - 14*n5 + 3*d*n5 - 
      6*n1*n5 + 4*n3*n5 - 2*n5^2 - 2*d*n6 - 4*n1*n6 + 6*n3*n6 + 4*n4*n6 - 
      2*n5*n6)*j[p4a, n1, 1, -1 + n3, n4, n5, 1 + n6, 0, 1, 1, 2, 0, 0, 1, 
      1])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((1 + n6)*(-8 - 4*d + 2*d^2 - 24*n1 + 6*d*n1 - 4*n1^2 + 30*n3 - 10*d*n3 + 
      4*n1*n3 + 2*n3^2 + 12*n4 - 5*d*n4 - 2*n1*n4 + 6*n3*n4 + 2*n4^2 - 
      14*n5 + 3*d*n5 - 6*n1*n5 + 4*n3*n5 - 2*n5^2 - 2*d*n6 - 4*n1*n6 + 
      6*n3*n6 + 4*n4*n6 - 2*n5*n6)*j[p4a, n1, 1, -1 + n3, n4, n5, 2 + n6, 0, 
      0, 1, 1, 1, 0, 1, 1])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((-7 + 2*d - 2*n1 + n3 - 2*n4 - 2*n5 - n6)*(1 + n6)*
     j[p4a, n1, 1, -1 + n3, n4, n5, 2 + n6, 0, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   ((-7 + 2*d - 2*n1 + n3 - 2*n4 - 2*n5 - n6)*(1 + n6)*
     j[p4a, n1, 1, -1 + n3, n4, n5, 2 + n6, 0, 1, 1, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((1 + n6)*(94 - 55*d + 8*d^2 + 34*n1 - 10*d*n1 + 4*n1^2 - 2*n3 + d*n3 - 
      2*n1*n3 + 40*n4 - 12*d*n4 + 8*n1*n4 + 4*n4^2 + 40*n5 - 12*d*n5 + 
      8*n1*n5 + 8*n4*n5 + 4*n5^2 + 44*n6 - 13*d*n6 + 6*n1*n6 + 2*n3*n6 + 
      8*n4*n6 + 8*n5*n6 + 6*n6^2)*j[p4a, n1, 1, -1 + n3, n4, n5, 2 + n6, 0, 
      1, 1, 1, 1, 0, 1, 1])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   (n5*(10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*j[p4a, n1, 1, -1 + n3, n4, 
      1 + n5, 1 + n6, 0, 1, 0, 1, 1, 0, 1, 1])/(2*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - 
   (n4*(68 - 44*d + 7*d^2 + 16*n1 - 6*d*n1 + 10*n3 - 2*d*n3 + 4*n1*n3 - 
      2*n3^2 + 40*n4 - 13*d*n4 + 6*n1*n4 + 2*n3*n4 + 6*n4^2 + 26*n5 - 
      9*d*n5 + 2*n1*n5 + 4*n3*n5 + 8*n4*n5 + 2*n5^2 + 32*n6 - 10*d*n6 + 
      4*n1*n6 + 2*n3*n6 + 8*n4*n6 + 6*n5*n6 + 4*n6^2)*
     j[p4a, n1, 1, -1 + n3, 1 + n4, -1 + n5, 1 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    ((-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - (n4*(10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*
     j[p4a, n1, 1, -1 + n3, 1 + n4, n5, n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   (n4*(10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*j[p4a, n1, 1, -1 + n3, 1 + n4, 
      n5, 1 + n6, -1, 1, 1, 1, 1, 0, 1, 1])/(2*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + (n4*(10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*
     j[p4a, n1, 1, -1 + n3, 1 + n4, n5, 1 + n6, 0, 0, 1, 1, 1, 0, 1, 1])/
    ((-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   (n4*(7 - 2*d + 2*n1 - n3 + 2*n4 + 2*n5 + n6)*j[p4a, n1, 1, -1 + n3, 
      1 + n4, n5, 1 + n6, 0, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   (n4*(7 - 2*d + 2*n1 - n3 + 2*n4 + 2*n5 + n6)*j[p4a, n1, 1, -1 + n3, 
      1 + n4, n5, 1 + n6, 0, 1, 1, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   (n4*(7 - 2*d + 2*n1 - n3 + 2*n4 + 2*n5 + n6)*j[p4a, n1, 1, -1 + n3, 
      1 + n4, n5, 1 + n6, 0, 1, 1, 1, 0, 0, 1, 1])/
    (2*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   (n4*(94 - 55*d + 8*d^2 + 34*n1 - 10*d*n1 + 4*n1^2 - 2*n3 + d*n3 - 
      2*n1*n3 + 40*n4 - 12*d*n4 + 8*n1*n4 + 4*n4^2 + 40*n5 - 12*d*n5 + 
      8*n1*n5 + 8*n4*n5 + 4*n5^2 + 44*n6 - 13*d*n6 + 6*n1*n6 + 2*n3*n6 + 
      8*n4*n6 + 8*n5*n6 + 6*n6^2)*j[p4a, n1, 1, -1 + n3, 1 + n4, n5, 1 + n6, 
      0, 1, 1, 1, 1, 0, 1, 1])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((8 + 4*d - 2*d^2 + 24*n1 - 6*d*n1 + 4*n1^2 - 30*n3 + 10*d*n3 - 4*n1*n3 - 
      2*n3^2 - 12*n4 + 5*d*n4 + 2*n1*n4 - 6*n3*n4 - 2*n4^2 + 14*n5 - 3*d*n5 + 
      6*n1*n5 - 4*n3*n5 + 2*n5^2 + 2*d*n6 + 4*n1*n6 - 6*n3*n6 - 4*n4*n6 + 
      2*n5*n6)*j[p4a, n1, 1, n3, -1 + n4, n5, 1 + n6, 0, 1, 0, 1, 1, 0, 1, 
      2])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((-8 - 4*d + 2*d^2 - 24*n1 + 6*d*n1 - 4*n1^2 + 30*n3 - 10*d*n3 + 4*n1*n3 + 
      2*n3^2 + 12*n4 - 5*d*n4 - 2*n1*n4 + 6*n3*n4 + 2*n4^2 - 14*n5 + 3*d*n5 - 
      6*n1*n5 + 4*n3*n5 - 2*n5^2 - 2*d*n6 - 4*n1*n6 + 6*n3*n6 + 4*n4*n6 - 
      2*n5*n6)*j[p4a, n1, 1, n3, -1 + n4, n5, 1 + n6, 0, 1, 1, 1, 1, 0, 1, 
      1])/((-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)) + 
   ((8 + 4*d - 2*d^2 + 24*n1 - 6*d*n1 + 4*n1^2 - 30*n3 + 10*d*n3 - 4*n1*n3 - 
      2*n3^2 - 12*n4 + 5*d*n4 + 2*n1*n4 - 6*n3*n4 - 2*n4^2 + 14*n5 - 3*d*n5 + 
      6*n1*n5 - 4*n3*n5 + 2*n5^2 + 2*d*n6 + 4*n1*n6 - 6*n3*n6 - 4*n4*n6 + 
      2*n5*n6)*j[p4a, n1, 1, n3, -1 + n4, n5, 1 + n6, 0, 1, 2, 1, 1, 0, 1, 
      0])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - 
   ((1 + n6)*(-8 - 4*d + 2*d^2 - 24*n1 + 6*d*n1 - 4*n1^2 + 30*n3 - 10*d*n3 + 
      4*n1*n3 + 2*n3^2 + 12*n4 - 5*d*n4 - 2*n1*n4 + 6*n3*n4 + 2*n4^2 - 
      14*n5 + 3*d*n5 - 6*n1*n5 + 4*n3*n5 - 2*n5^2 - 2*d*n6 - 4*n1*n6 + 
      6*n3*n6 + 4*n4*n6 - 2*n5*n6)*j[p4a, n1, 1, n3, -1 + n4, n5, 2 + n6, 0, 
      0, 1, 1, 1, 0, 1, 1])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   ((1 + n6)*(-8 - 4*d + 2*d^2 - 24*n1 + 6*d*n1 - 4*n1^2 + 30*n3 - 10*d*n3 + 
      4*n1*n3 + 2*n3^2 + 12*n4 - 5*d*n4 - 2*n1*n4 + 6*n3*n4 + 2*n4^2 - 
      14*n5 + 3*d*n5 - 6*n1*n5 + 4*n3*n5 - 2*n5^2 - 2*d*n6 - 4*n1*n6 + 
      6*n3*n6 + 4*n4*n6 - 2*n5*n6)*j[p4a, n1, 1, n3, -1 + n4, n5, 2 + n6, 0, 
      1, 0, 1, 1, 0, 1, 1])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((1 + n6)*(-8 - 4*d + 2*d^2 - 24*n1 + 6*d*n1 - 4*n1^2 + 30*n3 - 10*d*n3 + 
      4*n1*n3 + 2*n3^2 + 12*n4 - 5*d*n4 - 2*n1*n4 + 6*n3*n4 + 2*n4^2 - 
      14*n5 + 3*d*n5 - 6*n1*n5 + 4*n3*n5 - 2*n5^2 - 2*d*n6 - 4*n1*n6 + 
      6*n3*n6 + 4*n4*n6 - 2*n5*n6)*j[p4a, n1, 1, n3, -1 + n4, n5, 2 + n6, 0, 
      1, 1, 0, 1, 0, 1, 1])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   ((1 + n6)*(-8 - 4*d + 2*d^2 - 24*n1 + 6*d*n1 - 4*n1^2 + 30*n3 - 10*d*n3 + 
      4*n1*n3 + 2*n3^2 + 12*n4 - 5*d*n4 - 2*n1*n4 + 6*n3*n4 + 2*n4^2 - 
      14*n5 + 3*d*n5 - 6*n1*n5 + 4*n3*n5 - 2*n5^2 - 2*d*n6 - 4*n1*n6 + 
      6*n3*n6 + 4*n4*n6 - 2*n5*n6)*j[p4a, n1, 1, n3, -1 + n4, n5, 2 + n6, 0, 
      1, 1, 1, 1, 0, 0, 1])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   ((1 + n6)*(-8 - 4*d + 2*d^2 - 24*n1 + 6*d*n1 - 4*n1^2 + 30*n3 - 10*d*n3 + 
      4*n1*n3 + 2*n3^2 + 12*n4 - 5*d*n4 - 2*n1*n4 + 6*n3*n4 + 2*n4^2 - 
      14*n5 + 3*d*n5 - 6*n1*n5 + 4*n3*n5 - 2*n5^2 - 2*d*n6 - 4*n1*n6 + 
      6*n3*n6 + 4*n4*n6 - 2*n5*n6)*j[p4a, n1, 1, n3, -1 + n4, n5, 2 + n6, 0, 
      1, 1, 1, 1, 0, 1, 0])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   (n5*(8 + 4*d - 2*d^2 + 24*n1 - 6*d*n1 + 4*n1^2 - 30*n3 + 10*d*n3 - 
      4*n1*n3 - 2*n3^2 - 12*n4 + 5*d*n4 + 2*n1*n4 - 6*n3*n4 - 2*n4^2 + 
      14*n5 - 3*d*n5 + 6*n1*n5 - 4*n3*n5 + 2*n5^2 + 2*d*n6 + 4*n1*n6 - 
      6*n3*n6 - 4*n4*n6 + 2*n5*n6)*j[p4a, n1, 1, n3, -1 + n4, 1 + n5, 1 + n6, 
      0, 1, 0, 1, 1, 0, 1, 1])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   (n5*(8 + 4*d - 2*d^2 + 24*n1 - 6*d*n1 + 4*n1^2 - 30*n3 + 10*d*n3 - 
      4*n1*n3 - 2*n3^2 - 12*n4 + 5*d*n4 + 2*n1*n4 - 6*n3*n4 - 2*n4^2 + 
      14*n5 - 3*d*n5 + 6*n1*n5 - 4*n3*n5 + 2*n5^2 + 2*d*n6 + 4*n1*n6 - 
      6*n3*n6 - 4*n4*n6 + 2*n5*n6)*j[p4a, n1, 1, n3, -1 + n4, 1 + n5, 1 + n6, 
      0, 1, 1, 1, 1, 0, 0, 1])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   (n5*(8 + 4*d - 2*d^2 + 24*n1 - 6*d*n1 + 4*n1^2 - 30*n3 + 10*d*n3 - 
      4*n1*n3 - 2*n3^2 - 12*n4 + 5*d*n4 + 2*n1*n4 - 6*n3*n4 - 2*n4^2 + 
      14*n5 - 3*d*n5 + 6*n1*n5 - 4*n3*n5 + 2*n5^2 + 2*d*n6 + 4*n1*n6 - 
      6*n3*n6 - 4*n4*n6 + 2*n5*n6)*j[p4a, n1, 1, n3, -1 + n4, 1 + n5, 1 + n6, 
      0, 1, 1, 1, 1, 0, 1, 0])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   ((-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*(1 + n5 + n6)*
     j[p4a, n1, 1, n3, -1 + n4, 1 + n5, 1 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((68 - 44*d + 7*d^2 + 16*n1 - 6*d*n1 + 10*n3 - 2*d*n3 + 4*n1*n3 - 2*n3^2 + 
      40*n4 - 13*d*n4 + 6*n1*n4 + 2*n3*n4 + 6*n4^2 + 26*n5 - 9*d*n5 + 
      2*n1*n5 + 4*n3*n5 + 8*n4*n5 + 2*n5^2 + 32*n6 - 10*d*n6 + 4*n1*n6 + 
      2*n3*n6 + 8*n4*n6 + 6*n5*n6 + 4*n6^2)*j[p4a, n1, 1, n3, n4, -1 + n5, 
      1 + n6, 0, 1, 0, 1, 1, 0, 1, 2])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 
      2*n6)*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((-68 + 44*d - 7*d^2 - 16*n1 + 6*d*n1 - 10*n3 + 2*d*n3 - 4*n1*n3 + 
      2*n3^2 - 40*n4 + 13*d*n4 - 6*n1*n4 - 2*n3*n4 - 6*n4^2 - 26*n5 + 
      9*d*n5 - 2*n1*n5 - 4*n3*n5 - 8*n4*n5 - 2*n5^2 - 32*n6 + 10*d*n6 - 
      4*n1*n6 - 2*n3*n6 - 8*n4*n6 - 6*n5*n6 - 4*n6^2)*
     j[p4a, n1, 1, n3, n4, -1 + n5, 1 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    ((-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)) + 
   ((68 - 44*d + 7*d^2 + 16*n1 - 6*d*n1 + 10*n3 - 2*d*n3 + 4*n1*n3 - 2*n3^2 + 
      40*n4 - 13*d*n4 + 6*n1*n4 + 2*n3*n4 + 6*n4^2 + 26*n5 - 9*d*n5 + 
      2*n1*n5 + 4*n3*n5 + 8*n4*n5 + 2*n5^2 + 32*n6 - 10*d*n6 + 4*n1*n6 + 
      2*n3*n6 + 8*n4*n6 + 6*n5*n6 + 4*n6^2)*j[p4a, n1, 1, n3, n4, -1 + n5, 
      1 + n6, 0, 1, 2, 1, 1, 0, 1, 0])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 
      2*n6)*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((1 + n6)*(68 - 44*d + 7*d^2 + 16*n1 - 6*d*n1 + 10*n3 - 2*d*n3 + 4*n1*n3 - 
      2*n3^2 + 40*n4 - 13*d*n4 + 6*n1*n4 + 2*n3*n4 + 6*n4^2 + 26*n5 - 
      9*d*n5 + 2*n1*n5 + 4*n3*n5 + 8*n4*n5 + 2*n5^2 + 32*n6 - 10*d*n6 + 
      4*n1*n6 + 2*n3*n6 + 8*n4*n6 + 6*n5*n6 + 4*n6^2)*
     j[p4a, n1, 1, n3, n4, -1 + n5, 2 + n6, -1, 1, 1, 1, 1, 0, 1, 1])/
    ((-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((1 + n6)*(68 - 44*d + 7*d^2 + 16*n1 - 6*d*n1 + 10*n3 - 2*d*n3 + 4*n1*n3 - 
      2*n3^2 + 40*n4 - 13*d*n4 + 6*n1*n4 + 2*n3*n4 + 6*n4^2 + 26*n5 - 
      9*d*n5 + 2*n1*n5 + 4*n3*n5 + 8*n4*n5 + 2*n5^2 + 32*n6 - 10*d*n6 + 
      4*n1*n6 + 2*n3*n6 + 8*n4*n6 + 6*n5*n6 + 4*n6^2)*
     j[p4a, n1, 1, n3, n4, -1 + n5, 2 + n6, 0, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((1 + n6)*(68 - 44*d + 7*d^2 + 16*n1 - 6*d*n1 + 10*n3 - 2*d*n3 + 4*n1*n3 - 
      2*n3^2 + 40*n4 - 13*d*n4 + 6*n1*n4 + 2*n3*n4 + 6*n4^2 + 26*n5 - 
      9*d*n5 + 2*n1*n5 + 4*n3*n5 + 8*n4*n5 + 2*n5^2 + 32*n6 - 10*d*n6 + 
      4*n1*n6 + 2*n3*n6 + 8*n4*n6 + 6*n5*n6 + 4*n6^2)*
     j[p4a, n1, 1, n3, n4, -1 + n5, 2 + n6, 0, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - 
   ((1 + n6)*(68 - 44*d + 7*d^2 + 16*n1 - 6*d*n1 + 10*n3 - 2*d*n3 + 4*n1*n3 - 
      2*n3^2 + 40*n4 - 13*d*n4 + 6*n1*n4 + 2*n3*n4 + 6*n4^2 + 26*n5 - 
      9*d*n5 + 2*n1*n5 + 4*n3*n5 + 8*n4*n5 + 2*n5^2 + 32*n6 - 10*d*n6 + 
      4*n1*n6 + 2*n3*n6 + 8*n4*n6 + 6*n5*n6 + 4*n6^2)*
     j[p4a, n1, 1, n3, n4, -1 + n5, 2 + n6, 0, 1, 1, 0, 1, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - 
   ((1 + n6)*(68 - 44*d + 7*d^2 + 16*n1 - 6*d*n1 + 10*n3 - 2*d*n3 + 4*n1*n3 - 
      2*n3^2 + 40*n4 - 13*d*n4 + 6*n1*n4 + 2*n3*n4 + 6*n4^2 + 26*n5 - 
      9*d*n5 + 2*n1*n5 + 4*n3*n5 + 8*n4*n5 + 2*n5^2 + 32*n6 - 10*d*n6 + 
      4*n1*n6 + 2*n3*n6 + 8*n4*n6 + 6*n5*n6 + 4*n6^2)*
     j[p4a, n1, 1, n3, n4, -1 + n5, 2 + n6, 0, 1, 1, 1, 1, -1, 1, 1])/
    ((-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((1 + n6)*(68 - 44*d + 7*d^2 + 16*n1 - 6*d*n1 + 10*n3 - 2*d*n3 + 4*n1*n3 - 
      2*n3^2 + 40*n4 - 13*d*n4 + 6*n1*n4 + 2*n3*n4 + 6*n4^2 + 26*n5 - 
      9*d*n5 + 2*n1*n5 + 4*n3*n5 + 8*n4*n5 + 2*n5^2 + 32*n6 - 10*d*n6 + 
      4*n1*n6 + 2*n3*n6 + 8*n4*n6 + 6*n5*n6 + 4*n6^2)*
     j[p4a, n1, 1, n3, n4, -1 + n5, 2 + n6, 0, 1, 1, 1, 1, 0, 0, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((1 + n6)*(68 - 44*d + 7*d^2 + 16*n1 - 6*d*n1 + 10*n3 - 2*d*n3 + 4*n1*n3 - 
      2*n3^2 + 40*n4 - 13*d*n4 + 6*n1*n4 + 2*n3*n4 + 6*n4^2 + 26*n5 - 
      9*d*n5 + 2*n1*n5 + 4*n3*n5 + 8*n4*n5 + 2*n5^2 + 32*n6 - 10*d*n6 + 
      4*n1*n6 + 2*n3*n6 + 8*n4*n6 + 6*n5*n6 + 4*n6^2)*
     j[p4a, n1, 1, n3, n4, -1 + n5, 2 + n6, 0, 1, 1, 1, 1, 0, 1, 0])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((1 + n6)*(76 - 40*d + 5*d^2 + 40*n1 - 12*d*n1 + 4*n1^2 - 20*n3 + 8*d*n3 - 
      4*n3^2 + 28*n4 - 8*d*n4 + 8*n1*n4 - 4*n3*n4 + 4*n4^2 + 40*n5 - 
      12*d*n5 + 8*n1*n5 + 8*n4*n5 + 4*n5^2 + 32*n6 - 8*d*n6 + 8*n1*n6 - 
      4*n3*n6 + 4*n4*n6 + 8*n5*n6 + 4*n6^2)*j[p4a, n1, 1, n3, n4, -1 + n5, 
      2 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 
      2*n6)*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   j[p4a, n1, 1, n3, n4, n5, n6, 0, 1, 0, 1, 1, 0, 1, 2]/
    (2*(-3 + d - n4 - n5 - n6)) + j[p4a, n1, 1, n3, n4, n5, n6, 0, 1, 2, 1, 
     1, 0, 1, 0]/(2*(-3 + d - n4 - n5 - n6)) + 
   ((-86 + 59*d - 10*d^2 - 10*n1 + 4*d*n1 - 28*n3 + 9*d*n3 - 2*n1*n3 - 
      2*n3^2 - 52*n4 + 17*d*n4 - 6*n1*n4 - 6*n3*n4 - 6*n4^2 - 26*n5 + 
      9*d*n5 - 2*n1*n5 - 4*n3*n5 - 8*n4*n5 - 2*n5^2 - 44*n6 + 15*d*n6 - 
      2*n1*n6 - 8*n3*n6 - 12*n4*n6 - 6*n5*n6 - 6*n6^2)*
     j[p4a, n1, 1, n3, n4, n5, 1 + n6, -1, 0, 1, 1, 2, 0, 1, 1])/
    ((-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((8 + 4*d - 2*d^2 + 24*n1 - 6*d*n1 + 4*n1^2 - 30*n3 + 10*d*n3 - 4*n1*n3 - 
      2*n3^2 - 12*n4 + 5*d*n4 + 2*n1*n4 - 6*n3*n4 - 2*n4^2 + 14*n5 - 3*d*n5 + 
      6*n1*n5 - 4*n3*n5 + 2*n5^2 + 2*d*n6 + 4*n1*n6 - 6*n3*n6 - 4*n4*n6 + 
      2*n5*n6)*j[p4a, n1, 1, n3, n4, n5, 1 + n6, -1, 0, 1, 2, 1, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + j[p4a, n1, 1, n3, n4, n5, 1 + n6, -1, 1, 0, 
     1, 1, 0, 1, 2]/(2*(-3 + d - n4 - n5 - n6)) + 
   ((8 + 4*d - 2*d^2 + 24*n1 - 6*d*n1 + 4*n1^2 - 30*n3 + 10*d*n3 - 4*n1*n3 - 
      2*n3^2 - 12*n4 + 5*d*n4 + 2*n1*n4 - 6*n3*n4 - 2*n4^2 + 14*n5 - 3*d*n5 + 
      6*n1*n5 - 4*n3*n5 + 2*n5^2 + 2*d*n6 + 4*n1*n6 - 6*n3*n6 - 4*n4*n6 + 
      2*n5*n6)*j[p4a, n1, 1, n3, n4, n5, 1 + n6, -1, 1, 1, 2, 0, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((8 + 4*d - 2*d^2 + 24*n1 - 6*d*n1 + 4*n1^2 - 30*n3 + 10*d*n3 - 4*n1*n3 - 
      2*n3^2 - 12*n4 + 5*d*n4 + 2*n1*n4 - 6*n3*n4 - 2*n4^2 + 14*n5 - 3*d*n5 + 
      6*n1*n5 - 4*n3*n5 + 2*n5^2 + 2*d*n6 + 4*n1*n6 - 6*n3*n6 - 4*n4*n6 + 
      2*n5*n6)*j[p4a, n1, 1, n3, n4, n5, 1 + n6, -1, 1, 1, 2, 1, 0, 0, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((-8 - 4*d + 2*d^2 - 24*n1 + 6*d*n1 - 4*n1^2 + 30*n3 - 10*d*n3 + 4*n1*n3 + 
      2*n3^2 + 12*n4 - 5*d*n4 - 2*n1*n4 + 6*n3*n4 + 2*n4^2 - 14*n5 + 3*d*n5 - 
      6*n1*n5 + 4*n3*n5 - 2*n5^2 - 2*d*n6 - 4*n1*n6 + 6*n3*n6 + 4*n4*n6 - 
      2*n5*n6)*j[p4a, n1, 1, n3, n4, n5, 1 + n6, -1, 1, 2, 1, 1, 0, 1, 0])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((-86 + 59*d - 10*d^2 - 10*n1 + 4*d*n1 - 28*n3 + 9*d*n3 - 2*n1*n3 - 
      2*n3^2 - 52*n4 + 17*d*n4 - 6*n1*n4 - 6*n3*n4 - 6*n4^2 - 26*n5 + 
      9*d*n5 - 2*n1*n5 - 4*n3*n5 - 8*n4*n5 - 2*n5^2 - 44*n6 + 15*d*n6 - 
      2*n1*n6 - 8*n3*n6 - 12*n4*n6 - 6*n5*n6 - 6*n6^2)*
     j[p4a, n1, 1, n3, n4, n5, 1 + n6, -1, 2, 1, 1, 0, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((-86 + 59*d - 10*d^2 - 10*n1 + 4*d*n1 - 28*n3 + 9*d*n3 - 2*n1*n3 - 
      2*n3^2 - 52*n4 + 17*d*n4 - 6*n1*n4 - 6*n3*n4 - 6*n4^2 - 26*n5 + 
      9*d*n5 - 2*n1*n5 - 4*n3*n5 - 8*n4*n5 - 2*n5^2 - 44*n6 + 15*d*n6 - 
      2*n1*n6 - 8*n3*n6 - 12*n4*n6 - 6*n5*n6 - 6*n6^2)*
     j[p4a, n1, 1, n3, n4, n5, 1 + n6, -1, 2, 1, 1, 1, 0, 0, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((208 - 148*d + 26*d^2 + 76*n1 - 48*d*n1 + 7*d^2*n1 + 16*n1^2 - 6*d*n1^2 - 
      132*n3 + 138*d*n3 - 31*d^2*n3 + 22*n1*n3 + 12*n1^2*n3 - 114*n3^2 + 
      40*d*n3^2 - 18*n1*n3^2 - 6*n3^3 + 120*n4 - 46*d*n4 + 2*d^2*n4 + 
      28*n1*n4 - 7*d*n1*n4 + 2*n1^2*n4 - 118*n3*n4 + 47*d*n3*n4 - 
      8*n1*n3*n4 - 24*n3^2*n4 + 24*n4^2 - 5*d*n4^2 + 4*n1*n4^2 - 16*n3*n4^2 + 
      2*n4^3 + 52*n5 - 18*d*n5 + 30*n1*n5 - 9*d*n1*n5 + 2*n1^2*n5 - 
      42*n3*n5 + 21*d*n3*n5 + 10*n1*n3*n5 - 20*n3^2*n5 + 2*n4*n5 + 
      3*d*n4*n5 + 2*n1*n4*n5 - 20*n3*n4*n5 + 4*n5^2 + 2*n1*n5^2 - 2*n3*n5^2 - 
      2*n4*n5^2 + 130*n6 - 55*d*n6 + 3*d^2*n6 + 26*n1*n6 - 8*d*n1*n6 + 
      4*n1^2*n6 - 74*n3*n6 + 37*d*n3*n6 - 26*n3^2*n6 + 44*n4*n6 - 6*d*n4*n6 + 
      4*n1*n4*n6 - 30*n3*n4*n6 + 4*n4^2*n6 + 12*n5*n6 + 6*n1*n5*n6 - 
      14*n3*n5*n6 - 2*n4*n5*n6 + 28*n6^2 - 5*d*n6^2 + 2*n1*n6^2 - 
      10*n3*n6^2 + 4*n4*n6^2 + 2*n6^3)*j[p4a, n1, 1, n3, n4, n5, 1 + n6, 0, 
      0, 1, 1, 1, 0, 1, 1])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   j[p4a, n1, 1, n3, n4, n5, 1 + n6, 0, 0, 1, 1, 1, 0, 1, 2]/
    (2*(-3 + d - n4 - n5 - n6)) + j[p4a, n1, 1, n3, n4, n5, 1 + n6, 0, 0, 1, 
     1, 1, 0, 2, 1]/(2*(-3 + d - n4 - n5 - n6)) + 
   ((-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*j[p4a, n1, 1, n3, n4, n5, 1 + n6, 
      0, 0, 1, 1, 2, -1, 1, 1])/(2*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((-8 - 4*d + 2*d^2 - 24*n1 + 6*d*n1 - 4*n1^2 + 30*n3 - 10*d*n3 + 4*n1*n3 + 
      2*n3^2 + 12*n4 - 5*d*n4 - 2*n1*n4 + 6*n3*n4 + 2*n4^2 - 14*n5 + 3*d*n5 - 
      6*n1*n5 + 4*n3*n5 - 2*n5^2 - 2*d*n6 - 4*n1*n6 + 6*n3*n6 + 4*n4*n6 - 
      2*n5*n6)*j[p4a, n1, 1, n3, n4, n5, 1 + n6, 0, 0, 2, 1, 1, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - j[p4a, n1, 1, n3, n4, n5, 1 + n6, 0, 1, 0, 1, 
     1, -1, 1, 2]/(2*(-3 + d - n4 - n5 - n6)) + 
   ((-76 + 40*d - 5*d^2 - 40*n1 + 12*d*n1 - 4*n1^2 + 20*n3 - 8*d*n3 + 
      4*n3^2 - 20*n4 + 12*d*n4 - 2*d^2*n4 + 16*n1*n4 - 6*d*n1*n4 + 
      4*n1^2*n4 - 26*n3*n4 + 10*d*n3*n4 - 4*n1*n3*n4 - 2*n3^2*n4 - 16*n4^2 + 
      5*d*n4^2 + 2*n1*n4^2 - 6*n3*n4^2 - 2*n4^3 + 28*n5 - 32*d*n5 + 
      7*d^2*n5 + 8*n1*n5 - 6*d*n1*n5 + 10*n3*n5 - 2*d*n3*n5 + 4*n1*n3*n5 - 
      2*n3^2*n5 + 46*n4*n5 - 16*d*n4*n5 + 12*n1*n4*n5 - 2*n3*n4*n5 + 
      6*n4^2*n5 + 22*n5^2 - 9*d*n5^2 + 2*n1*n5^2 + 4*n3*n5^2 + 10*n4*n5^2 + 
      2*n5^3 - 14*n6 - 7*d*n6 + 3*d^2*n6 - 14*n1*n6 + 2*d*n1*n6 + 22*n3*n6 - 
      7*d*n3*n6 - 2*n1*n3*n6 + 4*n3^2*n6 + 8*n4*n6 - 2*d*n4*n6 + 4*n1*n4*n6 - 
      2*n3*n4*n6 - 4*n4^2*n6 + 24*n5*n6 - 10*d*n5*n6 + 4*n1*n5*n6 + 
      2*n3*n5*n6 + 10*n4*n5*n6 + 6*n5^2*n6 + 8*n6^2 - 5*d*n6^2 - 2*n1*n6^2 + 
      6*n3*n6^2 + 4*n4*n6^2 + 4*n5*n6^2 + 2*n6^3)*j[p4a, n1, 1, n3, n4, n5, 
      1 + n6, 0, 1, 0, 1, 1, 0, 1, 1])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 
      2*n6)*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((-10 + 19*d - 5*d^2 + 116*n1 - 67*d*n1 + 10*d^2*n1 + 14*n1^2 - 4*d*n1^2 - 
      116*n3 + 61*d*n3 - 7*d^2*n3 + 10*n1*n3 - 3*d*n1*n3 + 2*n1^2*n3 - 
      16*n3^2 + 2*d*n3^2 - 2*n1*n3^2 + 2*n3^3 - 32*n4 + 5*d*n4 + 2*d^2*n4 + 
      30*n1*n4 - 11*d*n1*n4 + 2*n1^2*n4 - 20*n3*n4 + 3*d*n3*n4 + 4*n1*n3*n4 + 
      10*n4^2 - 5*d*n4^2 + 4*n1*n4^2 + 2*n4^3 + 14*n5 - 3*d*n5 + 32*n1*n5 - 
      9*d*n1*n5 + 2*n1^2*n5 - 30*n3*n5 + 9*d*n3*n5 + 2*n1*n3*n5 - 4*n3^2*n5 - 
      14*n4*n5 + 3*d*n4*n5 + 2*n1*n4*n5 - 4*n3*n4*n5 + 2*n5^2 + 2*n1*n5^2 - 
      2*n3*n5^2 - 2*n4*n5^2 - 30*n6 + 22*d*n6 - 3*d^2*n6 + 56*n1*n6 - 
      17*d*n1*n6 + 2*n1^2*n6 - 62*n3*n6 + 17*d*n3*n6 + 6*n1*n3*n6 - 
      6*n3^2*n6 - 20*n4*n6 + 2*d*n4*n6 + 8*n1*n4*n6 - 6*n3*n4*n6 + 
      4*n4^2*n6 + 2*n5*n6 + 6*n1*n5*n6 - 6*n3*n5*n6 - 2*n4*n5*n6 - 14*n6^2 + 
      5*d*n6^2 + 8*n1*n6^2 - 10*n3*n6^2 - 4*n4*n6^2 - 2*n6^3)*
     j[p4a, n1, 1, n3, n4, n5, 1 + n6, 0, 1, 1, 0, 1, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((86 - 59*d + 10*d^2 + 10*n1 - 4*d*n1 + 28*n3 - 9*d*n3 + 2*n1*n3 + 
      2*n3^2 + 52*n4 - 17*d*n4 + 6*n1*n4 + 6*n3*n4 + 6*n4^2 + 26*n5 - 
      9*d*n5 + 2*n1*n5 + 4*n3*n5 + 8*n4*n5 + 2*n5^2 + 44*n6 - 15*d*n6 + 
      2*n1*n6 + 8*n3*n6 + 12*n4*n6 + 6*n5*n6 + 6*n6^2)*
     j[p4a, n1, 1, n3, n4, n5, 1 + n6, 0, 1, 1, 0, 2, -1, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((-86 + 59*d - 10*d^2 - 10*n1 + 4*d*n1 - 28*n3 + 9*d*n3 - 2*n1*n3 - 
      2*n3^2 - 52*n4 + 17*d*n4 - 6*n1*n4 - 6*n3*n4 - 6*n4^2 - 26*n5 + 
      9*d*n5 - 2*n1*n5 - 4*n3*n5 - 8*n4*n5 - 2*n5^2 - 44*n6 + 15*d*n6 - 
      2*n1*n6 - 8*n3*n6 - 12*n4*n6 - 6*n5*n6 - 6*n6^2)*
     j[p4a, n1, 1, n3, n4, n5, 1 + n6, 0, 1, 1, 0, 2, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((-8 - 4*d + 2*d^2 - 92*n1 + 50*d*n1 - 7*d^2*n1 - 20*n1^2 + 6*d*n1^2 + 
      98*n3 - 54*d*n3 + 7*d^2*n3 + 10*n1*n3 - 4*d*n1*n3 - 4*n1^2*n3 + 
      12*n3^2 - 2*d*n3^2 + 6*n1*n3^2 - 2*n3^3 + 20*n4 - d*n4 - 2*d^2*n4 - 
      18*n1*n4 + 7*d*n1*n4 - 2*n1^2*n4 + 16*n3*n4 - 3*d*n3*n4 - 10*n4^2 + 
      5*d*n4^2 - 4*n1*n4^2 - 2*n4^3 - 14*n5 + 3*d*n5 - 32*n1*n5 + 9*d*n1*n5 - 
      2*n1^2*n5 + 30*n3*n5 - 9*d*n3*n5 - 2*n1*n3*n5 + 4*n3^2*n5 + 14*n4*n5 - 
      3*d*n4*n5 - 2*n1*n4*n5 + 4*n3*n4*n5 - 2*n5^2 - 2*n1*n5^2 + 2*n3*n5^2 + 
      2*n4*n5^2 - 2*d*n6 - 36*n1*n6 + 10*d*n1*n6 - 4*n1^2*n6 + 38*n3*n6 - 
      10*d*n3*n6 + 2*n1*n3*n6 + 2*n3^2*n6 + 4*n4*n6 + 2*d*n4*n6 - 
      4*n1*n4*n6 + 2*n3*n4*n6 - 4*n4^2*n6 - 2*n5*n6 - 6*n1*n5*n6 + 
      6*n3*n5*n6 + 2*n4*n5*n6 - 4*n1*n6^2 + 4*n3*n6^2)*
     j[p4a, n1, 1, n3, n4, n5, 1 + n6, 0, 1, 1, 1, 0, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((224 - 170*d + 31*d^2 + 30*n1 - 35*d*n1 + 6*d^2*n1 - 10*n1^2 - 2*d*n1^2 - 
      4*n1^3 - 20*n3 + 67*d*n3 - 19*d^2*n3 + 36*n1*n3 - d*n1*n3 + 
      14*n1^2*n3 - 62*n3^2 + 21*d*n3^2 - 14*n1*n3^2 - 2*n3^3 + 168*n4 - 
      57*d*n4 + 54*n1*n4 - 14*d*n1*n4 + 4*n1^2*n4 - 78*n3*n4 + 35*d*n3*n4 - 
      6*n1*n3*n4 - 14*n3^2*n4 + 22*n4^2 + 8*n1*n4^2 - 14*n3*n4^2 - 18*n5 + 
      23*d*n5 - 7*d^2*n5 - 10*n1*n5 - 4*n1^2*n5 - 28*n3*n5 + 17*d*n3*n5 + 
      6*n1*n3*n5 - 10*n3^2*n5 - 16*n4*n5 + 13*d*n4*n5 + 2*n1*n4*n5 - 
      18*n3*n4*n5 - 6*n4^2*n5 - 24*n5^2 + 9*d*n5^2 - 2*n1*n5^2 - 6*n3*n5^2 - 
      8*n4*n5^2 - 2*n5^3 + 138*n6 - 59*d*n6 + 3*d^2*n6 + 14*n1*n6 - 
      5*d*n1*n6 + 2*n1^2*n6 - 28*n3*n6 + 20*d*n3*n6 - 2*n1*n3*n6 - 
      12*n3^2*n6 + 52*n4*n6 - 4*d*n4*n6 + 8*n1*n4*n6 - 20*n3*n4*n6 - 
      18*n5*n6 + 10*d*n5*n6 - 12*n3*n5*n6 - 8*n4*n5*n6 - 6*n5^2*n6 + 
      28*n6^2 - 5*d*n6^2 - 4*n3*n6^2 + 4*n4*n6^2 - 4*n5*n6^2 + 2*n6^3)*
     j[p4a, n1, 1, n3, n4, n5, 1 + n6, 0, 1, 1, 1, 1, 0, 0, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((-50 + 29*d - 4*d^2 - 22*n1 + 8*d*n1 + 8*n3 - 5*d*n3 - 6*n1*n3 + 6*n3^2 - 
      28*n4 + 9*d*n4 - 6*n1*n4 + 2*n3*n4 - 6*n4^2 - 26*n5 + 9*d*n5 - 
      2*n1*n5 - 4*n3*n5 - 8*n4*n5 - 2*n5^2 - 20*n6 + 5*d*n6 - 6*n1*n6 + 
      4*n3*n6 - 4*n4*n6 - 6*n5*n6 - 2*n6^2)*j[p4a, n1, 1, n3, n4, n5, 1 + n6, 
      0, 1, 1, 1, 1, 0, 0, 2])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((-76 + 40*d - 5*d^2 - 40*n1 + 12*d*n1 - 4*n1^2 + 20*n3 - 8*d*n3 + 
      4*n3^2 - 20*n4 + 12*d*n4 - 2*d^2*n4 + 16*n1*n4 - 6*d*n1*n4 + 
      4*n1^2*n4 - 26*n3*n4 + 10*d*n3*n4 - 4*n1*n3*n4 - 2*n3^2*n4 - 16*n4^2 + 
      5*d*n4^2 + 2*n1*n4^2 - 6*n3*n4^2 - 2*n4^3 + 28*n5 - 32*d*n5 + 
      7*d^2*n5 + 8*n1*n5 - 6*d*n1*n5 + 10*n3*n5 - 2*d*n3*n5 + 4*n1*n3*n5 - 
      2*n3^2*n5 + 46*n4*n5 - 16*d*n4*n5 + 12*n1*n4*n5 - 2*n3*n4*n5 + 
      6*n4^2*n5 + 22*n5^2 - 9*d*n5^2 + 2*n1*n5^2 + 4*n3*n5^2 + 10*n4*n5^2 + 
      2*n5^3 - 14*n6 - 7*d*n6 + 3*d^2*n6 - 14*n1*n6 + 2*d*n1*n6 + 22*n3*n6 - 
      7*d*n3*n6 - 2*n1*n3*n6 + 4*n3^2*n6 + 8*n4*n6 - 2*d*n4*n6 + 4*n1*n4*n6 - 
      2*n3*n4*n6 - 4*n4^2*n6 + 24*n5*n6 - 10*d*n5*n6 + 4*n1*n5*n6 + 
      2*n3*n5*n6 + 10*n4*n5*n6 + 6*n5^2*n6 + 8*n6^2 - 5*d*n6^2 - 2*n1*n6^2 + 
      6*n3*n6^2 + 4*n4*n6^2 + 4*n5*n6^2 + 2*n6^3)*j[p4a, n1, 1, n3, n4, n5, 
      1 + n6, 0, 1, 1, 1, 1, 0, 1, 0])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 
      2*n6)*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((272 - 338*d + 127*d^2 - 15*d^3 - 132*n1 + 62*d*n1 - 7*d^2*n1 - 24*n1^2 + 
      8*d*n1^2 + 4*n1^3 + 348*n3 - 222*d*n3 + 35*d^2*n3 + 8*n1*n3 - 
      6*d*n1*n3 - 16*n1^2*n3 + 68*n3^2 - 20*d*n3^2 + 16*n1*n3^2 + 270*n4 - 
      179*d*n4 + 29*d^2*n4 - 26*n1*n4 + 8*d*n1*n4 - 4*n1^2*n4 + 130*n3*n4 - 
      41*d*n3*n4 + 2*n1*n3*n4 + 12*n3^2*n4 + 40*n4^2 - 12*d*n4^2 - 
      8*n1*n4^2 + 12*n3*n4^2 + 162*n5 - 127*d*n5 + 23*d^2*n5 - 10*n1*n5 + 
      4*n1^2*n5 + 82*n3*n5 - 25*d*n3*n5 - 6*n1*n3*n5 + 8*n3^2*n5 + 
      116*n4*n5 - 38*d*n4*n5 + 4*n1*n4*n5 + 16*n3*n4*n5 + 12*n4^2*n5 + 
      48*n5^2 - 18*d*n5^2 + 4*n1*n5^2 + 8*n3*n5^2 + 16*n4*n5^2 + 4*n5^3 + 
      246*n6 - 189*d*n6 + 34*d^2*n6 - 42*n1*n6 + 8*d*n1*n6 - 8*n1^2*n6 + 
      162*n3*n6 - 51*d*n3*n6 + 10*n1*n3*n6 + 12*n3^2*n6 + 144*n4*n6 - 
      47*d*n4*n6 - 2*n1*n4*n6 + 30*n3*n4*n6 + 12*n4^2*n6 + 96*n5*n6 - 
      35*d*n5*n6 - 2*n1*n5*n6 + 22*n3*n5*n6 + 28*n4*n5*n6 + 12*n5^2*n6 + 
      68*n6^2 - 25*d*n6^2 - 2*n1*n6^2 + 18*n3*n6^2 + 18*n4*n6^2 + 
      14*n5*n6^2 + 6*n6^3)*j[p4a, n1, 1, n3, n4, n5, 1 + n6, 0, 1, 1, 1, 1, 
      0, 1, 1])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((-8 - 4*d + 2*d^2 - 24*n1 + 6*d*n1 - 4*n1^2 + 30*n3 - 10*d*n3 + 4*n1*n3 + 
      2*n3^2 + 12*n4 - 5*d*n4 - 2*n1*n4 + 6*n3*n4 + 2*n4^2 - 14*n5 + 3*d*n5 - 
      6*n1*n5 + 4*n3*n5 - 2*n5^2 - 2*d*n6 - 4*n1*n6 + 6*n3*n6 + 4*n4*n6 - 
      2*n5*n6)*j[p4a, n1, 1, n3, n4, n5, 1 + n6, 0, 1, 1, 2, 0, -1, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((8 + 4*d - 2*d^2 + 24*n1 - 6*d*n1 + 4*n1^2 - 30*n3 + 10*d*n3 - 4*n1*n3 - 
      2*n3^2 - 12*n4 + 5*d*n4 + 2*n1*n4 - 6*n3*n4 - 2*n4^2 + 14*n5 - 3*d*n5 + 
      6*n1*n5 - 4*n3*n5 + 2*n5^2 + 2*d*n6 + 4*n1*n6 - 6*n3*n6 - 4*n4*n6 + 
      2*n5*n6)*j[p4a, n1, 1, n3, n4, n5, 1 + n6, 0, 1, 1, 2, 0, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((-26 + 11*d - d^2 - 18*n1 + 4*d*n1 - 4*n1^2 + 12*n3 - 3*d*n3 + 6*n1*n3 - 
      2*n3^2 - d*n4 - 2*n1*n4 + 2*n3*n4 + 2*n4^2 - 14*n5 + 3*d*n5 - 6*n1*n5 + 
      4*n3*n5 - 2*n5^2 - 12*n6 + 3*d*n6 - 2*n1*n6 - 2*n5*n6 - 2*n6^2)*
     j[p4a, n1, 1, n3, n4, n5, 1 + n6, 0, 1, 2, 0, 1, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((8 + 4*d - 2*d^2 + 24*n1 - 6*d*n1 + 4*n1^2 - 30*n3 + 10*d*n3 - 4*n1*n3 - 
      2*n3^2 - 12*n4 + 5*d*n4 + 2*n1*n4 - 6*n3*n4 - 2*n4^2 + 14*n5 - 3*d*n5 + 
      6*n1*n5 - 4*n3*n5 + 2*n5^2 + 2*d*n6 + 4*n1*n6 - 6*n3*n6 - 4*n4*n6 + 
      2*n5*n6)*j[p4a, n1, 1, n3, n4, n5, 1 + n6, 0, 1, 2, 1, 0, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((-94 + 55*d - 8*d^2 - 34*n1 + 10*d*n1 - 4*n1^2 + 2*n3 - d*n3 + 2*n1*n3 - 
      40*n4 + 12*d*n4 - 8*n1*n4 - 4*n4^2 - 40*n5 + 12*d*n5 - 8*n1*n5 - 
      8*n4*n5 - 4*n5^2 - 44*n6 + 13*d*n6 - 6*n1*n6 - 2*n3*n6 - 8*n4*n6 - 
      8*n5*n6 - 6*n6^2)*j[p4a, n1, 1, n3, n4, n5, 1 + n6, 0, 1, 2, 1, 1, 0, 
      1, 0])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((94 - 55*d + 8*d^2 + 34*n1 - 10*d*n1 + 4*n1^2 - 2*n3 + d*n3 - 2*n1*n3 + 
      40*n4 - 12*d*n4 + 8*n1*n4 + 4*n4^2 + 40*n5 - 12*d*n5 + 8*n1*n5 + 
      8*n4*n5 + 4*n5^2 + 44*n6 - 13*d*n6 + 6*n1*n6 + 2*n3*n6 + 8*n4*n6 + 
      8*n5*n6 + 6*n6^2)*j[p4a, n1, 1, n3, n4, n5, 1 + n6, 0, 1, 2, 1, 1, 0, 
      1, 1])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + j[p4a, n1, 1, n3, n4, n5, 1 + n6, 0, 2, 1, 1, 
     0, -1, 1, 1]/(2*(-3 + d - n4 - n5 - n6)) - 
   ((1 + n6)*(-8 - 4*d + 2*d^2 - 24*n1 + 6*d*n1 - 4*n1^2 + 30*n3 - 10*d*n3 + 
      4*n1*n3 + 2*n3^2 + 12*n4 - 5*d*n4 - 2*n1*n4 + 6*n3*n4 + 2*n4^2 - 
      14*n5 + 3*d*n5 - 6*n1*n5 + 4*n3*n5 - 2*n5^2 - 2*d*n6 - 4*n1*n6 + 
      6*n3*n6 + 4*n4*n6 - 2*n5*n6)*j[p4a, n1, 1, n3, n4, n5, 2 + n6, -1, 0, 
      1, 1, 1, 0, 1, 1])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((1 + n6)*j[p4a, n1, 1, n3, n4, n5, 2 + n6, -1, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5 - n6)) + 
   ((1 + n6)*j[p4a, n1, 1, n3, n4, n5, 2 + n6, -1, 1, 1, 0, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n6)) - 
   ((1 + n6)*(94 - 55*d + 8*d^2 + 34*n1 - 10*d*n1 + 4*n1^2 - 2*n3 + d*n3 - 
      2*n1*n3 + 40*n4 - 12*d*n4 + 8*n1*n4 + 4*n4^2 + 40*n5 - 12*d*n5 + 
      8*n1*n5 + 8*n4*n5 + 4*n5^2 + 44*n6 - 13*d*n6 + 6*n1*n6 + 2*n3*n6 + 
      8*n4*n6 + 8*n5*n6 + 6*n6^2)*j[p4a, n1, 1, n3, n4, n5, 2 + n6, -1, 1, 1, 
      1, 1, 0, 1, 1])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((1 + n6)*(-8 - 4*d + 2*d^2 - 24*n1 + 6*d*n1 - 4*n1^2 + 30*n3 - 10*d*n3 + 
      4*n1*n3 + 2*n3^2 + 12*n4 - 5*d*n4 - 2*n1*n4 + 6*n3*n4 + 2*n4^2 - 
      14*n5 + 3*d*n5 - 6*n1*n5 + 4*n3*n5 - 2*n5^2 - 2*d*n6 - 4*n1*n6 + 
      6*n3*n6 + 4*n4*n6 - 2*n5*n6)*j[p4a, n1, 1, n3, n4, n5, 2 + n6, 0, 0, 1, 
      1, 1, -1, 1, 1])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   ((1 + n6)*(94 - 55*d + 8*d^2 + 34*n1 - 10*d*n1 + 4*n1^2 - 2*n3 + d*n3 - 
      2*n1*n3 + 40*n4 - 12*d*n4 + 8*n1*n4 + 4*n4^2 + 40*n5 - 12*d*n5 + 
      8*n1*n5 + 8*n4*n5 + 4*n5^2 + 44*n6 - 13*d*n6 + 6*n1*n6 + 2*n3*n6 + 
      8*n4*n6 + 8*n5*n6 + 6*n6^2)*j[p4a, n1, 1, n3, n4, n5, 2 + n6, 0, 0, 1, 
      1, 1, 0, 1, 1])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((1 + n6)*j[p4a, n1, 1, n3, n4, n5, 2 + n6, 0, 1, 0, 1, 1, -1, 1, 1])/
    (2*(3 - d + n4 + n5 + n6)) + 
   ((1 + n6)*j[p4a, n1, 1, n3, n4, n5, 2 + n6, 0, 1, 1, 0, 1, -1, 1, 1])/
    (2*(-3 + d - n4 - n5 - n6)) + 
   ((1 + n6)*(94 - 55*d + 8*d^2 + 34*n1 - 10*d*n1 + 4*n1^2 - 2*n3 + d*n3 - 
      2*n1*n3 + 40*n4 - 12*d*n4 + 8*n1*n4 + 4*n4^2 + 40*n5 - 12*d*n5 + 
      8*n1*n5 + 8*n4*n5 + 4*n5^2 + 44*n6 - 13*d*n6 + 6*n1*n6 + 2*n3*n6 + 
      8*n4*n6 + 8*n5*n6 + 6*n6^2)*j[p4a, n1, 1, n3, n4, n5, 2 + n6, 0, 1, 1, 
      1, 1, -1, 1, 1])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   ((1 + n6)*(94 - 55*d + 8*d^2 + 34*n1 - 10*d*n1 + 4*n1^2 - 2*n3 + d*n3 - 
      2*n1*n3 + 40*n4 - 12*d*n4 + 8*n1*n4 + 4*n4^2 + 40*n5 - 12*d*n5 + 
      8*n1*n5 + 8*n4*n5 + 4*n5^2 + 44*n6 - 13*d*n6 + 6*n1*n6 + 2*n3*n6 + 
      8*n4*n6 + 8*n5*n6 + 6*n6^2)*j[p4a, n1, 1, n3, n4, n5, 2 + n6, 0, 1, 1, 
      1, 1, 0, 0, 1])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   ((1 + n6)*(94 - 55*d + 8*d^2 + 34*n1 - 10*d*n1 + 4*n1^2 - 2*n3 + d*n3 - 
      2*n1*n3 + 40*n4 - 12*d*n4 + 8*n1*n4 + 4*n4^2 + 40*n5 - 12*d*n5 + 
      8*n1*n5 + 8*n4*n5 + 4*n5^2 + 44*n6 - 13*d*n6 + 6*n1*n6 + 2*n3*n6 + 
      8*n4*n6 + 8*n5*n6 + 6*n6^2)*j[p4a, n1, 1, n3, n4, n5, 2 + n6, 0, 1, 1, 
      1, 1, 0, 1, 0])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   (n5*j[p4a, n1, 1, n3, n4, 1 + n5, n6, 0, 1, 0, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n6)) + 
   (n5*j[p4a, n1, 1, n3, n4, 1 + n5, n6, 0, 1, 1, 1, 1, 0, 0, 1])/
    (2*(3 - d + n4 + n5 + n6)) - 
   (n5*j[p4a, n1, 1, n3, n4, 1 + n5, n6, 0, 1, 1, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n6)) + 
   ((-2 + d - n3 - n4)*(-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*
     j[p4a, n1, 1, n3, n4, 1 + n5, n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*j[p4a, n1, 1, n3, n4, 1 + n5, n6, 
      0, 1, 1, 2, 0, 0, 1, 1])/(2*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - 
   (n5*(68 - 44*d + 7*d^2 + 16*n1 - 6*d*n1 + 10*n3 - 2*d*n3 + 4*n1*n3 - 
      2*n3^2 + 40*n4 - 13*d*n4 + 6*n1*n4 + 2*n3*n4 + 6*n4^2 + 26*n5 - 
      9*d*n5 + 2*n1*n5 + 4*n3*n5 + 8*n4*n5 + 2*n5^2 + 32*n6 - 10*d*n6 + 
      4*n1*n6 + 2*n3*n6 + 8*n4*n6 + 6*n5*n6 + 4*n6^2)*
     j[p4a, n1, 1, n3, n4, 1 + n5, 1 + n6, -1, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + ((10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*
     j[p4a, n1, 1, n3, n4, 1 + n5, 1 + n6, -1, 1, 0, 2, 1, 0, 1, 1])/
    (2*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   (n5*(8 + 4*d - 2*d^2 + 24*n1 - 6*d*n1 + 4*n1^2 - 30*n3 + 10*d*n3 - 
      4*n1*n3 - 2*n3^2 - 12*n4 + 5*d*n4 + 2*n1*n4 - 6*n3*n4 - 2*n4^2 + 
      14*n5 - 3*d*n5 + 6*n1*n5 - 4*n3*n5 + 2*n5^2 + 2*d*n6 + 4*n1*n6 - 
      6*n3*n6 - 4*n4*n6 + 2*n5*n6)*j[p4a, n1, 1, n3, n4, 1 + n5, 1 + n6, -1, 
      1, 1, 1, 1, 0, 0, 1])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   (n5*(8 + 4*d - 2*d^2 + 24*n1 - 6*d*n1 + 4*n1^2 - 30*n3 + 10*d*n3 - 
      4*n1*n3 - 2*n3^2 - 12*n4 + 5*d*n4 + 2*n1*n4 - 6*n3*n4 - 2*n4^2 + 
      14*n5 - 3*d*n5 + 6*n1*n5 - 4*n3*n5 + 2*n5^2 + 2*d*n6 + 4*n1*n6 - 
      6*n3*n6 - 4*n4*n6 + 2*n5*n6)*j[p4a, n1, 1, n3, n4, 1 + n5, 1 + n6, -1, 
      1, 1, 1, 1, 0, 1, 0])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   ((-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*(-4 + d - n3 - n4 - n5 - 2*n6)*
     j[p4a, n1, 1, n3, n4, 1 + n5, 1 + n6, -1, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*(1 + n6)*
     j[p4a, n1, 1, n3, n4, 1 + n5, 1 + n6, 0, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   (n5*(94 - 55*d + 8*d^2 + 34*n1 - 10*d*n1 + 4*n1^2 - 2*n3 + d*n3 - 
      2*n1*n3 + 40*n4 - 12*d*n4 + 8*n1*n4 + 4*n4^2 + 40*n5 - 12*d*n5 + 
      8*n1*n5 + 8*n4*n5 + 4*n5^2 + 44*n6 - 13*d*n6 + 6*n1*n6 + 2*n3*n6 + 
      8*n4*n6 + 8*n5*n6 + 6*n6^2)*j[p4a, n1, 1, n3, n4, 1 + n5, 1 + n6, 0, 1, 
      1, 1, 1, 0, 0, 1])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   (n5*(94 - 55*d + 8*d^2 + 34*n1 - 10*d*n1 + 4*n1^2 - 2*n3 + d*n3 - 
      2*n1*n3 + 40*n4 - 12*d*n4 + 8*n1*n4 + 4*n4^2 + 40*n5 - 12*d*n5 + 
      8*n1*n5 + 8*n4*n5 + 4*n5^2 + 44*n6 - 13*d*n6 + 6*n1*n6 + 2*n3*n6 + 
      8*n4*n6 + 8*n5*n6 + 6*n6^2)*j[p4a, n1, 1, n3, n4, 1 + n5, 1 + n6, 0, 1, 
      1, 1, 1, 0, 1, 0])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   (n4*(68 - 44*d + 7*d^2 + 16*n1 - 6*d*n1 + 10*n3 - 2*d*n3 + 4*n1*n3 - 
      2*n3^2 + 40*n4 - 13*d*n4 + 6*n1*n4 + 2*n3*n4 + 6*n4^2 + 26*n5 - 
      9*d*n5 + 2*n1*n5 + 4*n3*n5 + 8*n4*n5 + 2*n5^2 + 32*n6 - 10*d*n6 + 
      4*n1*n6 + 2*n3*n6 + 8*n4*n6 + 6*n5*n6 + 4*n6^2)*
     j[p4a, n1, 1, n3, 1 + n4, -1 + n5, 1 + n6, 0, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   (n4*(68 - 44*d + 7*d^2 + 16*n1 - 6*d*n1 + 10*n3 - 2*d*n3 + 4*n1*n3 - 
      2*n3^2 + 40*n4 - 13*d*n4 + 6*n1*n4 + 2*n3*n4 + 6*n4^2 + 26*n5 - 
      9*d*n5 + 2*n1*n5 + 4*n3*n5 + 8*n4*n5 + 2*n5^2 + 32*n6 - 10*d*n6 + 
      4*n1*n6 + 2*n3*n6 + 8*n4*n6 + 6*n5*n6 + 4*n6^2)*
     j[p4a, n1, 1, n3, 1 + n4, -1 + n5, 1 + n6, 0, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - 
   (n4*(68 - 44*d + 7*d^2 + 16*n1 - 6*d*n1 + 10*n3 - 2*d*n3 + 4*n1*n3 - 
      2*n3^2 + 40*n4 - 13*d*n4 + 6*n1*n4 + 2*n3*n4 + 6*n4^2 + 26*n5 - 
      9*d*n5 + 2*n1*n5 + 4*n3*n5 + 8*n4*n5 + 2*n5^2 + 32*n6 - 10*d*n6 + 
      4*n1*n6 + 2*n3*n6 + 8*n4*n6 + 6*n5*n6 + 4*n6^2)*
     j[p4a, n1, 1, n3, 1 + n4, -1 + n5, 1 + n6, 0, 1, 1, 0, 1, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   (n4*(68 - 44*d + 7*d^2 + 16*n1 - 6*d*n1 + 10*n3 - 2*d*n3 + 4*n1*n3 - 
      2*n3^2 + 40*n4 - 13*d*n4 + 6*n1*n4 + 2*n3*n4 + 6*n4^2 + 26*n5 - 
      9*d*n5 + 2*n1*n5 + 4*n3*n5 + 8*n4*n5 + 2*n5^2 + 32*n6 - 10*d*n6 + 
      4*n1*n6 + 2*n3*n6 + 8*n4*n6 + 6*n5*n6 + 4*n6^2)*
     j[p4a, n1, 1, n3, 1 + n4, -1 + n5, 1 + n6, 0, 1, 1, 1, 0, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   (n4*(68 - 44*d + 7*d^2 + 16*n1 - 6*d*n1 + 10*n3 - 2*d*n3 + 4*n1*n3 - 
      2*n3^2 + 40*n4 - 13*d*n4 + 6*n1*n4 + 2*n3*n4 + 6*n4^2 + 26*n5 - 
      9*d*n5 + 2*n1*n5 + 4*n3*n5 + 8*n4*n5 + 2*n5^2 + 32*n6 - 10*d*n6 + 
      4*n1*n6 + 2*n3*n6 + 8*n4*n6 + 6*n5*n6 + 4*n6^2)*
     j[p4a, n1, 1, n3, 1 + n4, -1 + n5, 1 + n6, 0, 1, 1, 1, 1, 0, 1, 0])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   (n4*(76 - 40*d + 5*d^2 + 40*n1 - 12*d*n1 + 4*n1^2 - 20*n3 + 8*d*n3 - 
      4*n3^2 + 28*n4 - 8*d*n4 + 8*n1*n4 - 4*n3*n4 + 4*n4^2 + 40*n5 - 
      12*d*n5 + 8*n1*n5 + 8*n4*n5 + 4*n5^2 + 32*n6 - 8*d*n6 + 8*n1*n6 - 
      4*n3*n6 + 4*n4*n6 + 8*n5*n6 + 4*n6^2)*j[p4a, n1, 1, n3, 1 + n4, 
      -1 + n5, 1 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   (n4*j[p4a, n1, 1, n3, 1 + n4, n5, n6, 0, 0, 1, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n6)) - 
   (n4*j[p4a, n1, 1, n3, 1 + n4, n5, n6, 0, 1, 0, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n6)) + 
   (n4*j[p4a, n1, 1, n3, 1 + n4, n5, n6, 0, 1, 1, 0, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n6)) - 
   (n4*j[p4a, n1, 1, n3, 1 + n4, n5, n6, 0, 1, 1, 1, 0, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n6)) - 
   (n4*j[p4a, n1, 1, n3, 1 + n4, n5, n6, 0, 1, 1, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n6)) - (n4*(10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*
     j[p4a, n1, 1, n3, 1 + n4, n5, n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   (n4*(50 - 29*d + 4*d^2 + 22*n1 - 8*d*n1 - 8*n3 + 5*d*n3 + 6*n1*n3 - 
      6*n3^2 + 28*n4 - 9*d*n4 + 6*n1*n4 - 2*n3*n4 + 6*n4^2 + 26*n5 - 9*d*n5 + 
      2*n1*n5 + 4*n3*n5 + 8*n4*n5 + 2*n5^2 + 20*n6 - 5*d*n6 + 6*n1*n6 - 
      4*n3*n6 + 4*n4*n6 + 6*n5*n6 + 2*n6^2)*j[p4a, n1, 1, n3, 1 + n4, n5, 
      1 + n6, -1, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - 
   (n4*(68 - 44*d + 7*d^2 + 16*n1 - 6*d*n1 + 10*n3 - 2*d*n3 + 4*n1*n3 - 
      2*n3^2 + 40*n4 - 13*d*n4 + 6*n1*n4 + 2*n3*n4 + 6*n4^2 + 26*n5 - 
      9*d*n5 + 2*n1*n5 + 4*n3*n5 + 8*n4*n5 + 2*n5^2 + 32*n6 - 10*d*n6 + 
      4*n1*n6 + 2*n3*n6 + 8*n4*n6 + 6*n5*n6 + 4*n6^2)*
     j[p4a, n1, 1, n3, 1 + n4, n5, 1 + n6, -1, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   (n4*(68 - 44*d + 7*d^2 + 16*n1 - 6*d*n1 + 10*n3 - 2*d*n3 + 4*n1*n3 - 
      2*n3^2 + 40*n4 - 13*d*n4 + 6*n1*n4 + 2*n3*n4 + 6*n4^2 + 26*n5 - 
      9*d*n5 + 2*n1*n5 + 4*n3*n5 + 8*n4*n5 + 2*n5^2 + 32*n6 - 10*d*n6 + 
      4*n1*n6 + 2*n3*n6 + 8*n4*n6 + 6*n5*n6 + 4*n6^2)*
     j[p4a, n1, 1, n3, 1 + n4, n5, 1 + n6, -1, 1, 1, 0, 1, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - 
   (n4*(68 - 44*d + 7*d^2 + 16*n1 - 6*d*n1 + 10*n3 - 2*d*n3 + 4*n1*n3 - 
      2*n3^2 + 40*n4 - 13*d*n4 + 6*n1*n4 + 2*n3*n4 + 6*n4^2 + 26*n5 - 
      9*d*n5 + 2*n1*n5 + 4*n3*n5 + 8*n4*n5 + 2*n5^2 + 32*n6 - 10*d*n6 + 
      4*n1*n6 + 2*n3*n6 + 8*n4*n6 + 6*n5*n6 + 4*n6^2)*
     j[p4a, n1, 1, n3, 1 + n4, n5, 1 + n6, -1, 1, 1, 1, 0, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   (n4*(86 - 59*d + 10*d^2 + 10*n1 - 4*d*n1 + 28*n3 - 9*d*n3 + 2*n1*n3 + 
      2*n3^2 + 52*n4 - 17*d*n4 + 6*n1*n4 + 6*n3*n4 + 6*n4^2 + 26*n5 - 
      9*d*n5 + 2*n1*n5 + 4*n3*n5 + 8*n4*n5 + 2*n5^2 + 44*n6 - 15*d*n6 + 
      2*n1*n6 + 8*n3*n6 + 12*n4*n6 + 6*n5*n6 + 6*n6^2)*
     j[p4a, n1, 1, n3, 1 + n4, n5, 1 + n6, -1, 1, 1, 1, 1, 0, 1, 0])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - 
   (n4*(76 - 40*d + 5*d^2 + 40*n1 - 12*d*n1 + 4*n1^2 - 20*n3 + 8*d*n3 - 
      4*n3^2 + 28*n4 - 8*d*n4 + 8*n1*n4 - 4*n3*n4 + 4*n4^2 + 40*n5 - 
      12*d*n5 + 8*n1*n5 + 8*n4*n5 + 4*n5^2 + 32*n6 - 8*d*n6 + 8*n1*n6 - 
      4*n3*n6 + 4*n4*n6 + 8*n5*n6 + 4*n6^2)*j[p4a, n1, 1, n3, 1 + n4, n5, 
      1 + n6, -1, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - 
   (n4*(94 - 55*d + 8*d^2 + 34*n1 - 10*d*n1 + 4*n1^2 - 2*n3 + d*n3 - 
      2*n1*n3 + 40*n4 - 12*d*n4 + 8*n1*n4 + 4*n4^2 + 40*n5 - 12*d*n5 + 
      8*n1*n5 + 8*n4*n5 + 4*n5^2 + 44*n6 - 13*d*n6 + 6*n1*n6 + 2*n3*n6 + 
      8*n4*n6 + 8*n5*n6 + 6*n6^2)*j[p4a, n1, 1, n3, 1 + n4, n5, 1 + n6, 0, 1, 
      1, 1, 1, 0, 1, 0])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   (n4*(10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*j[p4a, n1, 1, n3, 1 + n4, 
      1 + n5, 1 + n6, -1, 0, 1, 1, 1, 0, 1, 1])/(2*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + (n3*(-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*
     j[p4a, n1, 1, 1 + n3, -1 + n4, 1 + n5, 1 + n6, -1, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   (n3*(-50 + 29*d - 4*d^2 - 22*n1 + 8*d*n1 + 8*n3 - 5*d*n3 - 6*n1*n3 + 
      6*n3^2 - 28*n4 + 9*d*n4 - 6*n1*n4 + 2*n3*n4 - 6*n4^2 - 26*n5 + 9*d*n5 - 
      2*n1*n5 - 4*n3*n5 - 8*n4*n5 - 2*n5^2 - 20*n6 + 5*d*n6 - 6*n1*n6 + 
      4*n3*n6 - 4*n4*n6 - 6*n5*n6 - 2*n6^2)*j[p4a, n1, 1, 1 + n3, n4, n5, 
      1 + n6, -1, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   (n3*(86 - 59*d + 10*d^2 + 10*n1 - 4*d*n1 + 28*n3 - 9*d*n3 + 2*n1*n3 + 
      2*n3^2 + 52*n4 - 17*d*n4 + 6*n1*n4 + 6*n3*n4 + 6*n4^2 + 26*n5 - 
      9*d*n5 + 2*n1*n5 + 4*n3*n5 + 8*n4*n5 + 2*n5^2 + 44*n6 - 15*d*n6 + 
      2*n1*n6 + 8*n3*n6 + 12*n4*n6 + 6*n5*n6 + 6*n6^2)*
     j[p4a, n1, 1, 1 + n3, n4, n5, 1 + n6, -1, 1, 1, 0, 1, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - 
   (n3*(86 - 59*d + 10*d^2 + 10*n1 - 4*d*n1 + 28*n3 - 9*d*n3 + 2*n1*n3 + 
      2*n3^2 + 52*n4 - 17*d*n4 + 6*n1*n4 + 6*n3*n4 + 6*n4^2 + 26*n5 - 
      9*d*n5 + 2*n1*n5 + 4*n3*n5 + 8*n4*n5 + 2*n5^2 + 44*n6 - 15*d*n6 + 
      2*n1*n6 + 8*n3*n6 + 12*n4*n6 + 6*n5*n6 + 6*n6^2)*
     j[p4a, n1, 1, 1 + n3, n4, n5, 1 + n6, -1, 1, 1, 1, 0, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - 
   (n3*(-50 + 29*d - 4*d^2 - 22*n1 + 8*d*n1 + 8*n3 - 5*d*n3 - 6*n1*n3 + 
      6*n3^2 - 28*n4 + 9*d*n4 - 6*n1*n4 + 2*n3*n4 - 6*n4^2 - 26*n5 + 9*d*n5 - 
      2*n1*n5 - 4*n3*n5 - 8*n4*n5 - 2*n5^2 - 20*n6 + 5*d*n6 - 6*n1*n6 + 
      4*n3*n6 - 4*n4*n6 - 6*n5*n6 - 2*n6^2)*j[p4a, n1, 1, 1 + n3, n4, n5, 
      1 + n6, -1, 1, 1, 1, 1, 0, 0, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   (n3*(-76 + 40*d - 5*d^2 - 40*n1 + 12*d*n1 - 4*n1^2 + 20*n3 - 8*d*n3 + 
      4*n3^2 - 28*n4 + 8*d*n4 - 8*n1*n4 + 4*n3*n4 - 4*n4^2 - 40*n5 + 
      12*d*n5 - 8*n1*n5 - 8*n4*n5 - 4*n5^2 - 32*n6 + 8*d*n6 - 8*n1*n6 + 
      4*n3*n6 - 4*n4*n6 - 8*n5*n6 - 4*n6^2)*j[p4a, n1, 1, 1 + n3, n4, n5, 
      1 + n6, -1, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - 
   (n3*j[p4a, n1, 1, 1 + n3, n4, n5, 1 + n6, 0, 0, 1, 1, 1, -1, 1, 1])/
    (2*(-3 + d - n4 - n5 - n6)) + 
   (n3*j[p4a, n1, 1, 1 + n3, n4, n5, 1 + n6, 0, 0, 1, 1, 1, 0, 1, 1])/
    (-3 + d - n4 - n5 - n6) - (n3*j[p4a, n1, 1, 1 + n3, n4, n5, 1 + n6, 0, 1, 
      1, 0, 1, -1, 1, 1])/(2*(-3 + d - n4 - n5 - n6)) + 
   (n3*j[p4a, n1, 1, 1 + n3, n4, n5, 1 + n6, 0, 1, 1, 1, 0, -1, 1, 1])/
    (2*(-3 + d - n4 - n5 - n6)) + 
   (n3*(26 - 11*d + d^2 + 18*n1 - 4*d*n1 + 4*n1^2 - 12*n3 + 3*d*n3 - 
      6*n1*n3 + 2*n3^2 + d*n4 + 2*n1*n4 - 2*n3*n4 - 2*n4^2 + 14*n5 - 3*d*n5 + 
      6*n1*n5 - 4*n3*n5 + 2*n5^2 + 12*n6 - 3*d*n6 + 2*n1*n6 + 2*n5*n6 + 
      2*n6^2)*j[p4a, n1, 1, 1 + n3, n4, n5, 1 + n6, 0, 1, 1, 1, 1, 0, 0, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - (n3*(-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*
     j[p4a, n1, 1, 1 + n3, n4, 1 + n5, n6, -1, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   (n3*(-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*j[p4a, n1, 1, 1 + n3, n4, 
      1 + n5, n6, 0, 1, 1, 1, 1, 0, 0, 1])/(2*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - (n3*(-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*
     j[p4a, n1, 1, 1 + n3, n4, 1 + n5, 1 + n6, -2, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   (n3*(-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*j[p4a, n1, 1, 1 + n3, n4, 
      1 + n5, 1 + n6, -1, 0, 1, 1, 1, 0, 1, 1])/((-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + (n3*(-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*
     j[p4a, n1, 1, 1 + n3, n4, 1 + n5, 1 + n6, -1, 1, 1, 1, 1, -1, 1, 1])/
    (2*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   (n3*(-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*j[p4a, n1, 1, 1 + n3, n4, 
      1 + n5, 1 + n6, -1, 1, 1, 1, 1, 0, 0, 1])/(2*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - (n3*(-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*
     j[p4a, n1, 1, 1 + n3, n4, 1 + n5, 1 + n6, -1, 1, 1, 1, 1, 0, 1, 0])/
    (2*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   ((-8 - 4*d + 2*d^2 - 24*n1 + 6*d*n1 - 4*n1^2 + 30*n3 - 10*d*n3 + 4*n1*n3 + 
      2*n3^2 + 12*n4 - 5*d*n4 - 2*n1*n4 + 6*n3*n4 + 2*n4^2 - 14*n5 + 3*d*n5 - 
      6*n1*n5 + 4*n3*n5 - 2*n5^2 - 2*d*n6 - 4*n1*n6 + 6*n3*n6 + 4*n4*n6 - 
      2*n5*n6)*j[p4a, n1, 2, -1 + n3, n4, n5, 1 + n6, 0, 0, 1, 1, 1, 0, 1, 
      1])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + j[p4a, n1, 2, -1 + n3, n4, n5, 1 + n6, 0, 1, 
     1, 0, 1, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n6)) + 
   ((8 + 4*d - 2*d^2 + 24*n1 - 6*d*n1 + 4*n1^2 - 30*n3 + 10*d*n3 - 4*n1*n3 - 
      2*n3^2 - 12*n4 + 5*d*n4 + 2*n1*n4 - 6*n3*n4 - 2*n4^2 + 14*n5 - 3*d*n5 + 
      6*n1*n5 - 4*n3*n5 + 2*n5^2 + 2*d*n6 + 4*n1*n6 - 6*n3*n6 - 4*n4*n6 + 
      2*n5*n6)*j[p4a, n1, 2, n3, n4, n5, 1 + n6, -1, 0, 1, 1, 1, 0, 1, 1])/
    ((-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((-86 + 59*d - 10*d^2 - 10*n1 + 4*d*n1 - 28*n3 + 9*d*n3 - 2*n1*n3 - 
      2*n3^2 - 52*n4 + 17*d*n4 - 6*n1*n4 - 6*n3*n4 - 6*n4^2 - 26*n5 + 
      9*d*n5 - 2*n1*n5 - 4*n3*n5 - 8*n4*n5 - 2*n5^2 - 44*n6 + 15*d*n6 - 
      2*n1*n6 - 8*n3*n6 - 12*n4*n6 - 6*n5*n6 - 6*n6^2)*
     j[p4a, n1, 2, n3, n4, n5, 1 + n6, -1, 1, 1, 0, 1, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((8 + 4*d - 2*d^2 + 24*n1 - 6*d*n1 + 4*n1^2 - 30*n3 + 10*d*n3 - 4*n1*n3 - 
      2*n3^2 - 12*n4 + 5*d*n4 + 2*n1*n4 - 6*n3*n4 - 2*n4^2 + 14*n5 - 3*d*n5 + 
      6*n1*n5 - 4*n3*n5 + 2*n5^2 + 2*d*n6 + 4*n1*n6 - 6*n3*n6 - 4*n4*n6 + 
      2*n5*n6)*j[p4a, n1, 2, n3, n4, n5, 1 + n6, -1, 1, 1, 1, 1, 0, 0, 1])/
    ((-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   ((-8 - 4*d + 2*d^2 - 24*n1 + 6*d*n1 - 4*n1^2 + 30*n3 - 10*d*n3 + 4*n1*n3 + 
      2*n3^2 + 12*n4 - 5*d*n4 - 2*n1*n4 + 6*n3*n4 + 2*n4^2 - 14*n5 + 3*d*n5 - 
      6*n1*n5 + 4*n3*n5 - 2*n5^2 - 2*d*n6 - 4*n1*n6 + 6*n3*n6 + 4*n4*n6 - 
      2*n5*n6)*j[p4a, n1, 2, n3, n4, n5, 1 + n6, 0, 0, 1, 1, 1, -1, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + ((10 - 3*d + 2*n1 + 2*n4 + 2*n5 + 2*n6)*
     j[p4a, n1, 2, n3, n4, n5, 1 + n6, 0, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) + 
   j[p4a, n1, 2, n3, n4, n5, 1 + n6, 0, 1, 1, 0, 1, -1, 1, 1]/
    (2*(-3 + d - n4 - n5 - n6)) + ((-10 + 3*d - 2*n1 - 2*n4 - 2*n5 - 2*n6)*
     j[p4a, n1, 2, n3, n4, 1 + n5, n6, 0, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n3 - n6)*(-3 + d - n4 - n5 - n6)) - 
   (n1*(-86 + 59*d - 10*d^2 - 10*n1 + 4*d*n1 - 28*n3 + 9*d*n3 - 2*n1*n3 - 
      2*n3^2 - 52*n4 + 17*d*n4 - 6*n1*n4 - 6*n3*n4 - 6*n4^2 - 26*n5 + 
      9*d*n5 - 2*n1*n5 - 4*n3*n5 - 8*n4*n5 - 2*n5^2 - 44*n6 + 15*d*n6 - 
      2*n1*n6 - 8*n3*n6 - 12*n4*n6 - 6*n5*n6 - 6*n6^2)*
     j[p4a, 1 + n1, 0, n3, n4, n5, 1 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   (n1*(-68 + 44*d - 7*d^2 - 16*n1 + 6*d*n1 - 10*n3 + 2*d*n3 - 4*n1*n3 + 
      2*n3^2 - 40*n4 + 13*d*n4 - 6*n1*n4 - 2*n3*n4 - 6*n4^2 - 26*n5 + 
      9*d*n5 - 2*n1*n5 - 4*n3*n5 - 8*n4*n5 - 2*n5^2 - 32*n6 + 10*d*n6 - 
      4*n1*n6 - 2*n3*n6 - 8*n4*n6 - 6*n5*n6 - 4*n6^2)*
     j[p4a, 1 + n1, 1, n3, n4, n5, 1 + n6, 0, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) + 
   (n1*(-86 + 59*d - 10*d^2 - 10*n1 + 4*d*n1 - 28*n3 + 9*d*n3 - 2*n1*n3 - 
      2*n3^2 - 52*n4 + 17*d*n4 - 6*n1*n4 - 6*n3*n4 - 6*n4^2 - 26*n5 + 
      9*d*n5 - 2*n1*n5 - 4*n3*n5 - 8*n4*n5 - 2*n5^2 - 44*n6 + 15*d*n6 - 
      2*n1*n6 - 8*n3*n6 - 12*n4*n6 - 6*n5*n6 - 6*n6^2)*
     j[p4a, 1 + n1, 1, n3, n4, n5, 1 + n6, 0, 1, 1, 0, 1, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)) - 
   (n1*(-68 + 44*d - 7*d^2 - 16*n1 + 6*d*n1 - 10*n3 + 2*d*n3 - 4*n1*n3 + 
      2*n3^2 - 40*n4 + 13*d*n4 - 6*n1*n4 - 2*n3*n4 - 6*n4^2 - 26*n5 + 
      9*d*n5 - 2*n1*n5 - 4*n3*n5 - 8*n4*n5 - 2*n5^2 - 32*n6 + 10*d*n6 - 
      4*n1*n6 - 2*n3*n6 - 8*n4*n6 - 6*n5*n6 - 4*n6^2)*
     j[p4a, 1 + n1, 1, n3, n4, n5, 1 + n6, 0, 1, 1, 1, 0, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n3 - n6)*
     (-3 + d - n4 - n5 - n6)), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, (n8_)?Positive, 
    (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n10 == 1 && n11 == 1 && n12 == 0 && 
    n13 == 1 && n14 == 1 && n2 == 1 && n5 == 0 && n8 == 1 && n9 == 1 && 
     !(n7 == -1 || n7 == 0) -> 
  j[p4a, -1 + n1, 0, -1 + n3, n4, 0, n6, 2 + n7, 2, 1, 1, 1, 0, 1, 1]/
    (2*(-1 + n3)) - (n6*j[p4a, -1 + n1, 0, -1 + n3, n4, 0, 1 + n6, 2 + n7, 1, 
      1, 1, 1, 0, 1, 1])/(2*(-1 + n3)) - 
   (n6*j[p4a, -1 + n1, 1, -1 + n3, -1 + n4, 0, 1 + n6, 2 + n7, 1, 1, 1, 1, 0, 
      1, 1])/(2*(-1 + n3)) + (n6*j[p4a, -1 + n1, 1, -1 + n3, n4, -1, 1 + n6, 
      2 + n7, 1, 1, 1, 1, 0, 1, 1])/(2*(-1 + n3)) + 
   j[p4a, -1 + n1, 1, -1 + n3, n4, 0, n6, 2 + n7, 1, 1, 0, 2, 0, 1, 1]/
    (2*(-1 + n3)) + ((-5 + d - n3 - n4 - 2*n7)*j[p4a, -1 + n1, 1, -1 + n3, 
      n4, 0, n6, 2 + n7, 1, 1, 1, 1, 0, 1, 1])/(-1 + n3) + 
   j[p4a, -1 + n1, 1, -1 + n3, n4, 0, n6, 2 + n7, 1, 1, 2, 0, 0, 1, 1]/
    (2*(-1 + n3)) + (n6*j[p4a, -1 + n1, 1, -1 + n3, n4, 0, 1 + n6, 2 + n7, 0, 
      1, 1, 1, 0, 1, 1])/(2*(-1 + n3)) + 
   (n4*j[p4a, -1 + n1, 1, -1 + n3, 1 + n4, -1, n6, 2 + n7, 1, 1, 1, 1, 0, 1, 
      1])/(-1 + n3) - (n4*j[p4a, -1 + n1, 1, -1 + n3, 1 + n4, 0, n6, 1 + n7, 
      1, 1, 1, 1, 0, 1, 1])/(-1 + n3) - j[p4a, -1 + n1, 1, n3, n4, 0, n6, 
    1 + n7, 1, 1, 1, 1, 0, 1, 1] + j[p4a, -1 + n1, 1, n3, n4, 0, n6, 2 + n7, 
    1, 1, 1, 1, 0, 0, 1] + j[p4a, -1 + n1, 2, -1 + n3, n4, 0, n6, 2 + n7, 0, 
     1, 1, 1, 0, 1, 1]/(2*(-1 + n3)) - 
   j[p4a, n1, 0, -1 + n3, n4, 0, n6, 1 + n7, 1, 1, 2, 1, 0, 1, 1]/
    (2*(-1 + n3)) - (n6*j[p4a, n1, 0, -1 + n3, n4, 0, 1 + n6, 1 + n7, 1, 1, 
      1, 1, 0, 1, 1])/(2*(-1 + n3)) + 
   (n6*j[p4a, n1, 1, -1 + n3, n4, -1, 1 + n6, 1 + n7, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-1 + n3)) - j[p4a, n1, 1, -1 + n3, n4, 0, n6, 1 + n7, 0, 1, 1, 2, 0, 
     1, 1]/(2*(-1 + n3)) + ((-7 + 2*d - n3 - n4 - n6 - 2*n7)*
     j[p4a, n1, 1, -1 + n3, n4, 0, n6, 1 + n7, 1, 1, 1, 1, 0, 1, 1])/
    (-1 + n3) - j[p4a, n1, 1, -1 + n3, n4, 0, n6, 1 + n7, 2, 1, 1, 0, 0, 1, 
     1]/(2*(-1 + n3)) + (n6*j[p4a, n1, 1, -1 + n3, n4, 0, 1 + n6, 1 + n7, 1, 
      0, 1, 1, 0, 1, 1])/(2*(-1 + n3)) - 
   (n6*j[p4a, n1, 1, -1 + n3, n4, 0, 1 + n6, 1 + n7, 1, 1, 0, 1, 0, 1, 1])/
    (2*(-1 + n3)) + (n4*j[p4a, n1, 1, -1 + n3, 1 + n4, -1, n6, 1 + n7, 1, 1, 
      1, 1, 0, 1, 1])/(-1 + n3) - 
   (n4*j[p4a, n1, 1, -1 + n3, 1 + n4, 0, n6, n7, 1, 1, 1, 1, 0, 1, 1])/
    (-1 + n3) + j[p4a, n1, 1, n3, n4, 0, n6, 1 + n7, 1, 1, 1, 1, 0, 0, 1] - 
   j[p4a, n1, 2, -1 + n3, n4, 0, n6, 1 + n7, 1, 1, 0, 1, 0, 1, 1]/
    (2*(-1 + n3)), j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?NonPositive, 
    (n7_)?NonPositive, (n8_)?Positive, (n9_)?Positive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == -1 && n13 == 1 && n14 == 1 && n2 == 1 && 
    n6 == 0 && n7 == 0 && n8 == 1 && n9 == 1 && n5 != 0 -> 
  j[p4a, -1 + n1, 0, n3, n4, 1 + n5, 0, 0, 1, 1, 1, 1, 0, 1, 1]/
    (3 - d + n4 + n5) + j[p4a, -1 + n1, 0, n3, n4, 1 + n5, 0, 0, 2, 1, 1, 1, 
     -1, 1, 1]/(2*(-3 + d - n4 - n5)) + 
   j[p4a, -1 + n1, 1, -1 + n3, n4, 1 + n5, 0, 0, 1, 1, 1, 1, 0, 1, 1]/
    (3 - d + n4 + n5) - ((-2 + 3*d + 2*n1 - 4*n3 - 4*n4)*(1 + n5)*
     j[p4a, -1 + n1, 1, -1 + n3, n4, 2 + n5, 0, 0, 1, 1, 1, 1, -1, 1, 1])/
    (2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   (n4*(2 - 3*d - 2*n1 + 4*n3 + 4*n4)*j[p4a, -1 + n1, 1, -1 + n3, 1 + n4, 
      1 + n5, 0, 0, 1, 1, 1, 1, -1, 1, 1])/(2*(3 - d + n4 + n5)*
     (3 - d + 2*n4 + n5)) + ((-2 + 3*d + 2*n1 - 4*n3 - 4*n4)*(1 + n5)*
     j[p4a, -1 + n1, 1, n3, -1 + n4, 2 + n5, 0, 0, 1, 1, 1, 1, -1, 1, 1])/
    (2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   (2*j[p4a, -1 + n1, 1, n3, n4, 1 + n5, 0, -1, 1, 1, 1, 1, 0, 1, 1])/
    (-3 + d - n4 - n5) + j[p4a, -1 + n1, 1, n3, n4, 1 + n5, 0, 0, 0, 1, 1, 1, 
     0, 1, 1]/(-3 + d - n4 - n5) + j[p4a, -1 + n1, 1, n3, n4, 1 + n5, 0, 0, 
     1, 1, 0, 2, -1, 1, 1]/(-3 + d - n4 - n5) + 
   ((14 - 13*d + 2*d^2 - 2*n1 + 10*n3 - 2*d*n3 + 16*n4 - 3*d*n4 + 2*n1*n4 + 
      10*n5 - 4*d*n5 + 2*n3*n5 + 6*n4*n5 + 2*n5^2)*j[p4a, -1 + n1, 1, n3, n4, 
      1 + n5, 0, 0, 1, 1, 1, 1, -1, 1, 1])/(2*(-3 + d - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + j[p4a, -1 + n1, 1, n3, n4, 1 + n5, 0, 0, 1, 1, 1, 
     1, 0, 0, 1]/(-3 + d - n4 - n5) + 
   ((4 + d + 2*n1 - 4*n3 + 2*n5)*j[p4a, -1 + n1, 1, n3, n4, 1 + n5, 0, 0, 1, 
      2, 1, 1, -1, 1, 1])/(2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   (n3*j[p4a, -1 + n1, 1, 1 + n3, n4, 1 + n5, 0, 0, 1, 1, 1, 1, -1, 0, 1])/
    (2*(-3 + d - n4 - n5)) + j[p4a, -1 + n1, 2, n3, n4, 1 + n5, 0, 0, 0, 1, 
     1, 1, -1, 1, 1]/(2*(-3 + d - n4 - n5)) - 
   (n4*(2 - 3*d - 2*n1 + 4*n3 + 4*n4)*j[p4a, n1, 0, -1 + n3, 1 + n4, 1 + n5, 
      0, 0, 1, 1, 1, 1, -1, 1, 1])/(2*(3 - d + n4 + n5)*
     (3 - d + 2*n4 + n5)) - j[p4a, n1, 0, n3, n4, 1 + n5, 0, -1, 1, 1, 2, 1, 
     -1, 1, 1]/(2*(-3 + d - n4 - n5)) + 
   ((7 + 5*n1 - d*n1 - 7*n3 + d*n3 + n4 - 2*d*n4 + 2*n3*n4 + 2*n4^2 + 3*n5 + 
      n1*n5 - n3*n5 - n4*n5)*j[p4a, n1, 0, n3, n4, 1 + n5, 0, 0, 1, 1, 1, 1, 
      -1, 1, 1])/(2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   j[p4a, n1, 0, n3, n4, 1 + n5, 0, 0, 1, 1, 1, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5)) + ((-1 - 2*d - 2*n1 + 4*n3 + 2*n4 - n5)*
     j[p4a, n1, 0, n3, n4, 1 + n5, 0, 0, 1, 2, 1, 1, -1, 1, 1])/
    (2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   j[p4a, n1, 0, n3, n4, 1 + n5, 0, 0, 2, 1, 1, 1, -2, 1, 1]/
    (2*(-3 + d - n4 - n5)) - (n4*j[p4a, n1, 0, n3, 1 + n4, n5, 0, 0, 1, 1, 1, 
      1, -1, 1, 1])/(2*(3 - d + n4 + n5)) + 
   (n4*j[p4a, n1, 0, n3, 1 + n4, 1 + n5, 0, -1, 1, 1, 1, 1, -1, 1, 1])/
    (2*(3 - d + n4 + n5)) - (n3*j[p4a, n1, 0, 1 + n3, n4, 1 + n5, 0, -1, 1, 
      1, 1, 1, -1, 1, 1])/(2*(-3 + d - n4 - n5)) + 
   ((1 + 2*d + 2*n1 - 4*n3 - 2*n4 + n5)*j[p4a, n1, 1, -1 + n3, n4, 1 + n5, 0, 
      0, 1, 0, 1, 1, -1, 1, 2])/(2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   j[p4a, n1, 1, -1 + n3, n4, 1 + n5, 0, 0, 1, 1, 1, 0, 0, 1, 1]/
    (2*(-3 + d - n4 - n5)) + ((-4 - 2*n1 + 2*n3 + n4 - n5)*
     j[p4a, n1, 1, -1 + n3, n4, 1 + n5, 0, 0, 1, 1, 1, 1, -1, 1, 1])/
    (-3 + d - n4 - n5) - j[p4a, n1, 1, -1 + n3, n4, 1 + n5, 0, 0, 1, 1, 2, 0, 
     -1, 1, 1]/(2*(-3 + d - n4 - n5)) + 
   ((-2 + 3*d + 2*n1 - 4*n3 - 4*n4)*(1 + n5)*j[p4a, n1, 1, -1 + n3, n4, 
      2 + n5, 0, 0, 1, 0, 1, 1, -1, 1, 1])/(2*(-3 + d - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + (n4*j[p4a, n1, 1, -1 + n3, 1 + n4, n5, 0, 0, 1, 1, 
      1, 1, -1, 1, 1])/(3 - d + n4 + n5) + 
   (n4*(2 - 3*d - 2*n1 + 4*n3 + 4*n4)*j[p4a, n1, 1, -1 + n3, 1 + n4, 1 + n5, 
      0, -1, 1, 1, 1, 1, -1, 1, 1])/((3 - d + n4 + n5)*(3 - d + 2*n4 + n5)) + 
   (n4*(2 - 3*d - 2*n1 + 4*n3 + 4*n4)*j[p4a, n1, 1, -1 + n3, 1 + n4, 1 + n5, 
      0, 0, 0, 1, 1, 1, -1, 1, 1])/(2*(3 - d + n4 + n5)*
     (3 - d + 2*n4 + n5)) - (n4*(2 - 3*d - 2*n1 + 4*n3 + 4*n4)*
     j[p4a, n1, 1, -1 + n3, 1 + n4, 1 + n5, 0, 0, 1, 0, 1, 1, -1, 1, 1])/
    (2*(3 - d + n4 + n5)*(3 - d + 2*n4 + n5)) + 
   (n4*(2 - 3*d - 2*n1 + 4*n3 + 4*n4)*j[p4a, n1, 1, -1 + n3, 1 + n4, 1 + n5, 
      0, 0, 1, 1, 0, 1, -1, 1, 1])/(2*(3 - d + n4 + n5)*
     (3 - d + 2*n4 + n5)) - (n4*(2 - 3*d - 2*n1 + 4*n3 + 4*n4)*
     j[p4a, n1, 1, -1 + n3, 1 + n4, 1 + n5, 0, 0, 1, 1, 1, 0, -1, 1, 1])/
    (2*(3 - d + n4 + n5)*(3 - d + 2*n4 + n5)) - 
   (n4*(4 + d + 2*n1 - 4*n3 + 2*n5)*j[p4a, n1, 1, -1 + n3, 1 + n4, 1 + n5, 0, 
      0, 1, 1, 1, 1, -1, 1, 1])/(2*(3 - d + n4 + n5)*(3 - d + 2*n4 + n5)) + 
   ((-1 - 2*d - 2*n1 + 4*n3 + 2*n4 - n5)*j[p4a, n1, 1, n3, -1 + n4, 1 + n5, 
      0, 0, 1, 0, 1, 1, -1, 1, 2])/(2*(-3 + d - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + ((1 + 2*d + 2*n1 - 4*n3 - 2*n4 + n5)*
     j[p4a, n1, 1, n3, -1 + n4, 1 + n5, 0, 0, 1, 1, 1, 1, -1, 1, 1])/
    (-3 + d - 2*n4 - n5) + ((-1 - 2*d - 2*n1 + 4*n3 + 2*n4 - n5)*
     j[p4a, n1, 1, n3, -1 + n4, 1 + n5, 0, 0, 1, 2, 1, 1, -1, 1, 0])/
    (2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) - 
   ((1 + n5)*(1 + 2*d + 2*n1 - 4*n3 - 2*n4 + n5)*j[p4a, n1, 1, n3, -1 + n4, 
      2 + n5, 0, 0, 1, 0, 1, 1, -1, 1, 1])/(2*(-3 + d - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + ((1 + n5)*(1 + 2*d + 2*n1 - 4*n3 - 2*n4 + n5)*
     j[p4a, n1, 1, n3, -1 + n4, 2 + n5, 0, 0, 1, 1, 1, 1, -1, 0, 1])/
    (2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) - 
   ((1 + n5)*(1 + 2*d + 2*n1 - 4*n3 - 2*n4 + n5)*j[p4a, n1, 1, n3, -1 + n4, 
      2 + n5, 0, 0, 1, 1, 1, 1, -1, 1, 0])/(2*(-3 + d - 2*n4 - n5)*
     (-3 + d - n4 - n5)) - ((-2 + 3*d + 2*n1 - 4*n3 - 4*n4)*(1 + n5)*
     j[p4a, n1, 1, n3, -1 + n4, 2 + n5, 0, 0, 1, 1, 1, 1, -1, 1, 1])/
    (2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   j[p4a, n1, 1, n3, n4, n5, 0, 0, 1, 0, 1, 1, -1, 1, 2]/
    (2*(-3 + d - n4 - n5)) + j[p4a, n1, 1, n3, n4, n5, 0, 0, 1, 2, 1, 1, -1, 
     1, 0]/(2*(-3 + d - n4 - n5)) + j[p4a, n1, 1, n3, n4, 1 + n5, 0, -1, 0, 
     1, 1, 1, 0, 1, 1]/(-3 + d - n4 - n5) + 
   j[p4a, n1, 1, n3, n4, 1 + n5, 0, -1, 0, 1, 1, 2, -1, 1, 1]/
    (3 - d + n4 + n5) + j[p4a, n1, 1, n3, n4, 1 + n5, 0, -1, 0, 1, 2, 1, -1, 
     1, 1]/(2*(-3 + d - n4 - n5)) + j[p4a, n1, 1, n3, n4, 1 + n5, 0, -1, 1, 
     1, 1, 1, 0, 0, 1]/(3 - d + n4 + n5) + 
   j[p4a, n1, 1, n3, n4, 1 + n5, 0, -1, 1, 1, 1, 1, 0, 1, 1]/
    (3 - d + n4 + n5) + j[p4a, n1, 1, n3, n4, 1 + n5, 0, -1, 1, 1, 2, 0, -1, 
     1, 1]/(2*(-3 + d - n4 - n5)) + j[p4a, n1, 1, n3, n4, 1 + n5, 0, -1, 1, 
     1, 2, 1, -1, 0, 1]/(2*(-3 + d - n4 - n5)) + 
   ((1 + 2*d + 2*n1 - 4*n3 - 2*n4 + n5)*j[p4a, n1, 1, n3, n4, 1 + n5, 0, -1, 
      1, 2, 1, 1, -1, 1, 0])/(2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) - 
   j[p4a, n1, 1, n3, n4, 1 + n5, 0, -1, 2, 1, 1, 0, -1, 1, 1]/
    (2*(-3 + d - n4 - n5)) - j[p4a, n1, 1, n3, n4, 1 + n5, 0, -1, 2, 1, 1, 1, 
     -1, 0, 1]/(2*(-3 + d - n4 - n5)) + 
   ((-7 - 5*n1 + d*n1 + 7*n3 - d*n3 - n4 + 2*d*n4 - 2*n3*n4 - 2*n4^2 - 3*n5 - 
      n1*n5 + n3*n5 + n4*n5)*j[p4a, n1, 1, n3, n4, 1 + n5, 0, 0, 0, 1, 1, 1, 
      -1, 1, 1])/(2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) - 
   j[p4a, n1, 1, n3, n4, 1 + n5, 0, 0, 0, 1, 1, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5)) + ((1 + 2*d + 2*n1 - 4*n3 - 2*n4 + n5)*
     j[p4a, n1, 1, n3, n4, 1 + n5, 0, 0, 0, 2, 1, 1, -1, 1, 1])/
    (2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((1 + 2*d + 2*n1 - 4*n3 - 3*n4 - 2*d*n4 - 2*n1*n4 + 4*n3*n4 + 2*n4^2 - 
      2*n5 + d*n5 - 3*n4*n5 - n5^2)*j[p4a, n1, 1, n3, n4, 1 + n5, 0, 0, 1, 0, 
      1, 1, -1, 1, 1])/(2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-1 - 2*d - 5*n1 + d*n1 + 7*n3 - d*n3 + 3*n4 + 2*d*n4 - 2*n3*n4 - 
      2*n4^2 - n5 - n1*n5 + n3*n5 + n4*n5)*j[p4a, n1, 1, n3, n4, 1 + n5, 0, 
      0, 1, 1, 0, 1, -1, 1, 1])/(2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   j[p4a, n1, 1, n3, n4, 1 + n5, 0, 0, 1, 1, 0, 2, -2, 1, 1]/
    (2*(-3 + d - n4 - n5)) - j[p4a, n1, 1, n3, n4, 1 + n5, 0, 0, 1, 1, 0, 2, 
     -1, 1, 1]/(2*(-3 + d - n4 - n5)) + 
   ((1 + 2*d + 5*n1 - d*n1 - 7*n3 + d*n3 - 3*n4 - 2*d*n4 + 2*n3*n4 + 2*n4^2 + 
      n5 + n1*n5 - n3*n5 - n4*n5)*j[p4a, n1, 1, n3, n4, 1 + n5, 0, 0, 1, 1, 
      1, 0, -1, 1, 1])/(2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-1 + n3 + n5)*j[p4a, n1, 1, n3, n4, 1 + n5, 0, 0, 1, 1, 1, 1, -1, 0, 1])/
    (2*(3 - d + n4 + n5)) - j[p4a, n1, 1, n3, n4, 1 + n5, 0, 0, 1, 1, 1, 1, 
     -1, 0, 2]/(2*(-3 + d - n4 - n5)) + 
   ((1 + 2*d + 2*n1 - 4*n3 - 3*n4 - 2*d*n4 - 2*n1*n4 + 4*n3*n4 + 2*n4^2 - 
      2*n5 + d*n5 - 3*n4*n5 - n5^2)*j[p4a, n1, 1, n3, n4, 1 + n5, 0, 0, 1, 1, 
      1, 1, -1, 1, 0])/(2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-2 + 3*d + 2*n1 - 4*n3 - 2*n4 - 3*d*n4 - 2*n1*n4 + 4*n3*n4 + 4*n4^2 - 
      6*n5 + 2*d*n5 - 4*n4*n5 - 2*n5^2)*j[p4a, n1, 1, n3, n4, 1 + n5, 0, 0, 
      1, 1, 1, 1, -1, 1, 1])/(2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) - 
   j[p4a, n1, 1, n3, n4, 1 + n5, 0, 0, 1, 1, 1, 1, 0, 0, 1]/
    (2*(-3 + d - n4 - n5)) - j[p4a, n1, 1, n3, n4, 1 + n5, 0, 0, 1, 1, 2, 0, 
     -2, 1, 1]/(2*(-3 + d - n4 - n5)) + 
   j[p4a, n1, 1, n3, n4, 1 + n5, 0, 0, 1, 1, 2, 0, -1, 1, 1]/
    (2*(-3 + d - n4 - n5)) + ((1 + 2*d + 2*n1 - 4*n3 - 2*n4 + n5)*
     j[p4a, n1, 1, n3, n4, 1 + n5, 0, 0, 1, 2, 0, 1, -1, 1, 1])/
    (2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-1 - 2*d - 2*n1 + 4*n3 + 2*n4 - n5)*j[p4a, n1, 1, n3, n4, 1 + n5, 0, 0, 
      1, 2, 1, 0, -1, 1, 1])/(2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((4 + d + 2*n1 - 4*n3 + 2*n5)*j[p4a, n1, 1, n3, n4, 1 + n5, 0, 0, 1, 2, 1, 
      1, -1, 1, 0])/(2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-4 - d - 2*n1 + 4*n3 - 2*n5)*j[p4a, n1, 1, n3, n4, 1 + n5, 0, 0, 1, 2, 
      1, 1, -1, 1, 1])/(2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((1 + n5)*j[p4a, n1, 1, n3, n4, 2 + n5, 0, -1, 1, 0, 1, 1, -1, 1, 1])/
    (2*(3 - d + n4 + n5)) - ((1 + n5)*(1 + 2*d + 2*n1 - 4*n3 - 2*n4 + n5)*
     j[p4a, n1, 1, n3, n4, 2 + n5, 0, -1, 1, 1, 1, 1, -1, 0, 1])/
    (2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((1 + n5)*(1 + 2*d + 2*n1 - 4*n3 - 2*n4 + n5)*j[p4a, n1, 1, n3, n4, 
      2 + n5, 0, -1, 1, 1, 1, 1, -1, 1, 0])/(2*(-3 + d - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + ((-2 + 3*d + 2*n1 - 4*n3 - 4*n4)*(1 + n5)*
     j[p4a, n1, 1, n3, n4, 2 + n5, 0, -1, 1, 1, 1, 1, -1, 1, 1])/
    (2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) - 
   ((1 + n5)*(4 + d + 2*n1 - 4*n3 + 2*n5)*j[p4a, n1, 1, n3, n4, 2 + n5, 0, 0, 
      1, 1, 1, 1, -1, 0, 1])/(2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((1 + n5)*(4 + d + 2*n1 - 4*n3 + 2*n5)*j[p4a, n1, 1, n3, n4, 2 + n5, 0, 0, 
      1, 1, 1, 1, -1, 1, 0])/(2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   (n4*j[p4a, n1, 1, n3, 1 + n4, n5, 0, 0, 0, 1, 1, 1, -1, 1, 1])/
    (2*(3 - d + n4 + n5)) - (n4*j[p4a, n1, 1, n3, 1 + n4, n5, 0, 0, 1, 0, 1, 
      1, -1, 1, 1])/(2*(3 - d + n4 + n5)) + 
   (n4*j[p4a, n1, 1, n3, 1 + n4, n5, 0, 0, 1, 1, 0, 1, -1, 1, 1])/
    (2*(3 - d + n4 + n5)) - (n4*j[p4a, n1, 1, n3, 1 + n4, n5, 0, 0, 1, 1, 1, 
      0, -1, 1, 1])/(2*(3 - d + n4 + n5)) - 
   (n4*j[p4a, n1, 1, n3, 1 + n4, n5, 0, 0, 1, 1, 1, 1, -1, 1, 0])/
    (2*(3 - d + n4 + n5)) - (n4*j[p4a, n1, 1, n3, 1 + n4, n5, 0, 0, 1, 1, 1, 
      1, -1, 1, 1])/(3 - d + n4 + n5) - 
   (n4*j[p4a, n1, 1, n3, 1 + n4, 1 + n5, 0, -1, 0, 1, 1, 1, -1, 1, 1])/
    (2*(3 - d + n4 + n5)) + (n4*j[p4a, n1, 1, n3, 1 + n4, 1 + n5, 0, -1, 1, 
      0, 1, 1, -1, 1, 1])/(2*(3 - d + n4 + n5)) - 
   (n4*j[p4a, n1, 1, n3, 1 + n4, 1 + n5, 0, -1, 1, 1, 0, 1, -1, 1, 1])/
    (2*(3 - d + n4 + n5)) + (n4*j[p4a, n1, 1, n3, 1 + n4, 1 + n5, 0, -1, 1, 
      1, 1, 0, -1, 1, 1])/(2*(3 - d + n4 + n5)) - 
   (n4*(5 - 4*d - 2*n1 + 4*n3 + 6*n4 + n5)*j[p4a, n1, 1, n3, 1 + n4, 1 + n5, 
      0, -1, 1, 1, 1, 1, -1, 1, 0])/(2*(3 - d + n4 + n5)*
     (3 - d + 2*n4 + n5)) + (n4*j[p4a, n1, 1, n3, 1 + n4, 1 + n5, 0, -1, 1, 
      1, 1, 1, -1, 1, 1])/(3 - d + n4 + n5) + 
   (n4*(4 + d + 2*n1 - 4*n3 + 2*n5)*j[p4a, n1, 1, n3, 1 + n4, 1 + n5, 0, 0, 
      1, 1, 1, 1, -1, 1, 0])/(2*(3 - d + n4 + n5)*(3 - d + 2*n4 + n5)) + 
   (n3*j[p4a, n1, 1, 1 + n3, n4, 1 + n5, 0, -1, 0, 1, 1, 1, -1, 1, 1])/
    (2*(-3 + d - n4 - n5)) + (n3*j[p4a, n1, 1, 1 + n3, n4, 1 + n5, 0, -1, 1, 
      1, 0, 1, -1, 1, 1])/(2*(-3 + d - n4 - n5)) - 
   (n3*j[p4a, n1, 1, 1 + n3, n4, 1 + n5, 0, -1, 1, 1, 1, 0, -1, 1, 1])/
    (2*(-3 + d - n4 - n5)) + (n3*j[p4a, n1, 1, 1 + n3, n4, 1 + n5, 0, -1, 1, 
      1, 1, 1, -1, 0, 1])/(2*(-3 + d - n4 - n5)) - 
   (n3*j[p4a, n1, 1, 1 + n3, n4, 1 + n5, 0, -1, 1, 1, 1, 1, -1, 1, 1])/
    (-3 + d - n4 - n5) + (n3*j[p4a, n1, 1, 1 + n3, n4, 1 + n5, 0, 0, 1, 1, 1, 
      1, -1, 0, 1])/(2*(-3 + d - n4 - n5)) - 
   j[p4a, n1, 2, -1 + n3, n4, 1 + n5, 0, 0, 0, 1, 1, 1, -1, 1, 1]/
    (2*(-3 + d - n4 - n5)) + j[p4a, n1, 2, n3, n4, 1 + n5, 0, -1, 0, 1, 1, 1, 
     -1, 1, 1]/(-3 + d - n4 - n5) - j[p4a, n1, 2, n3, n4, 1 + n5, 0, -1, 1, 
     1, 0, 1, -1, 1, 1]/(2*(-3 + d - n4 - n5)) + 
   j[p4a, n1, 2, n3, n4, 1 + n5, 0, -1, 1, 1, 1, 1, -1, 0, 1]/
    (-3 + d - n4 - n5) - j[p4a, n1, 2, n3, n4, 1 + n5, 0, 0, 0, 1, 1, 1, -2, 
     1, 1]/(2*(-3 + d - n4 - n5)) + 
   (n1*j[p4a, 1 + n1, 0, n3, n4, 1 + n5, 0, 0, 1, 1, 1, 1, -1, 1, 1])/
    (2*(-3 + d - n4 - n5)) - (n1*j[p4a, 1 + n1, 1, n3, n4, 1 + n5, 0, 0, 0, 
      1, 1, 1, -1, 1, 1])/(2*(-3 + d - n4 - n5)) - 
   (n1*j[p4a, 1 + n1, 1, n3, n4, 1 + n5, 0, 0, 1, 1, 0, 1, -1, 1, 1])/
    (2*(-3 + d - n4 - n5)) + (n1*j[p4a, 1 + n1, 1, n3, n4, 1 + n5, 0, 0, 1, 
      1, 1, 0, -1, 1, 1])/(2*(-3 + d - n4 - n5)), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, (n8_)?Positive, 
    (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n10 == 1 && n11 == 1 && n12 == 0 && 
    n13 == 1 && n14 == 1 && n2 == 1 && n6 == 0 && n7 == 0 && n8 == 1 && 
    n9 == 1 && n5 != 0 -> j[p4a, -1 + n1, 0, n3, n4, 1 + n5, 0, 0, 2, 1, 1, 
     1, 0, 1, 1]/(2*(-3 + d - n4 - n5)) - 
   ((-4 + 3*d + 2*n1 - 4*n3 - 4*n4)*(1 + n5)*j[p4a, -1 + n1, 1, -1 + n3, n4, 
      2 + n5, 0, 0, 1, 1, 1, 1, 0, 1, 1])/(2*(-3 + d - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + (n4*(4 - 3*d - 2*n1 + 4*n3 + 4*n4)*
     j[p4a, -1 + n1, 1, -1 + n3, 1 + n4, 1 + n5, 0, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5)*(3 - d + 2*n4 + n5)) + 
   ((-4 + 3*d + 2*n1 - 4*n3 - 4*n4)*(1 + n5)*j[p4a, -1 + n1, 1, n3, -1 + n4, 
      2 + n5, 0, 0, 1, 1, 1, 1, 0, 1, 1])/(2*(-3 + d - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + j[p4a, -1 + n1, 1, n3, n4, 1 + n5, 0, 0, 1, 1, 0, 
     2, 0, 1, 1]/(-3 + d - n4 - n5) + 
   ((16 - 13*d + 2*d^2 - 2*n1 + 10*n3 - 2*d*n3 + 14*n4 - 3*d*n4 + 2*n1*n4 + 
      10*n5 - 4*d*n5 + 2*n3*n5 + 6*n4*n5 + 2*n5^2)*j[p4a, -1 + n1, 1, n3, n4, 
      1 + n5, 0, 0, 1, 1, 1, 1, 0, 1, 1])/(2*(-3 + d - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + ((2 + d + 2*n1 - 4*n3 + 2*n5)*
     j[p4a, -1 + n1, 1, n3, n4, 1 + n5, 0, 0, 1, 2, 1, 1, 0, 1, 1])/
    (2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   (n3*j[p4a, -1 + n1, 1, 1 + n3, n4, 1 + n5, 0, 0, 1, 1, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5)) + j[p4a, -1 + n1, 2, n3, n4, 1 + n5, 0, 0, 0, 1, 
     1, 1, 0, 1, 1]/(2*(-3 + d - n4 - n5)) - 
   (n4*(4 - 3*d - 2*n1 + 4*n3 + 4*n4)*j[p4a, n1, 0, -1 + n3, 1 + n4, 1 + n5, 
      0, 0, 1, 1, 1, 1, 0, 1, 1])/(2*(3 - d + n4 + n5)*(3 - d + 2*n4 + n5)) - 
   j[p4a, n1, 0, n3, n4, 1 + n5, 0, -1, 1, 1, 2, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5)) + ((2 + d + 5*n1 - d*n1 - 7*n3 + d*n3 + n4 - 
      2*d*n4 + 2*n3*n4 + 2*n4^2 + 2*n5 + n1*n5 - n3*n5 - n4*n5)*
     j[p4a, n1, 0, n3, n4, 1 + n5, 0, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((1 - 2*d - 2*n1 + 4*n3 + 2*n4 - n5)*j[p4a, n1, 0, n3, n4, 1 + n5, 0, 0, 
      1, 2, 1, 1, 0, 1, 1])/(2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   j[p4a, n1, 0, n3, n4, 1 + n5, 0, 0, 2, 1, 1, 1, -1, 1, 1]/
    (2*(-3 + d - n4 - n5)) - (n4*j[p4a, n1, 0, n3, 1 + n4, n5, 0, 0, 1, 1, 1, 
      1, 0, 1, 1])/(2*(3 - d + n4 + n5)) + 
   (n4*j[p4a, n1, 0, n3, 1 + n4, 1 + n5, 0, -1, 1, 1, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5)) - (n3*j[p4a, n1, 0, 1 + n3, n4, 1 + n5, 0, -1, 1, 
      1, 1, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5)) + 
   ((-1 + 2*d + 2*n1 - 4*n3 - 2*n4 + n5)*j[p4a, n1, 1, -1 + n3, n4, 1 + n5, 
      0, 0, 1, 0, 1, 1, 0, 1, 2])/(2*(-3 + d - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + ((-3 - 2*n1 + 2*n3 + n4 - n5)*
     j[p4a, n1, 1, -1 + n3, n4, 1 + n5, 0, 0, 1, 1, 1, 1, 0, 1, 1])/
    (-3 + d - n4 - n5) - j[p4a, n1, 1, -1 + n3, n4, 1 + n5, 0, 0, 1, 1, 2, 0, 
     0, 1, 1]/(2*(-3 + d - n4 - n5)) + 
   ((-4 + 3*d + 2*n1 - 4*n3 - 4*n4)*(1 + n5)*j[p4a, n1, 1, -1 + n3, n4, 
      2 + n5, 0, 0, 1, 0, 1, 1, 0, 1, 1])/(2*(-3 + d - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + (n4*j[p4a, n1, 1, -1 + n3, 1 + n4, n5, 0, 0, 1, 1, 
      1, 1, 0, 1, 1])/(3 - d + n4 + n5) + 
   (n4*(4 - 3*d - 2*n1 + 4*n3 + 4*n4)*j[p4a, n1, 1, -1 + n3, 1 + n4, 1 + n5, 
      0, -1, 1, 1, 1, 1, 0, 1, 1])/((3 - d + n4 + n5)*(3 - d + 2*n4 + n5)) + 
   (n4*(4 - 3*d - 2*n1 + 4*n3 + 4*n4)*j[p4a, n1, 1, -1 + n3, 1 + n4, 1 + n5, 
      0, 0, 0, 1, 1, 1, 0, 1, 1])/(2*(3 - d + n4 + n5)*(3 - d + 2*n4 + n5)) - 
   (n4*(4 - 3*d - 2*n1 + 4*n3 + 4*n4)*j[p4a, n1, 1, -1 + n3, 1 + n4, 1 + n5, 
      0, 0, 1, 0, 1, 1, 0, 1, 1])/(2*(3 - d + n4 + n5)*(3 - d + 2*n4 + n5)) + 
   (n4*(4 - 3*d - 2*n1 + 4*n3 + 4*n4)*j[p4a, n1, 1, -1 + n3, 1 + n4, 1 + n5, 
      0, 0, 1, 1, 0, 1, 0, 1, 1])/(2*(3 - d + n4 + n5)*(3 - d + 2*n4 + n5)) - 
   (n4*(4 - 3*d - 2*n1 + 4*n3 + 4*n4)*j[p4a, n1, 1, -1 + n3, 1 + n4, 1 + n5, 
      0, 0, 1, 1, 1, 0, 0, 1, 1])/(2*(3 - d + n4 + n5)*(3 - d + 2*n4 + n5)) - 
   (n4*(2 + d + 2*n1 - 4*n3 + 2*n5)*j[p4a, n1, 1, -1 + n3, 1 + n4, 1 + n5, 0, 
      0, 1, 1, 1, 1, 0, 1, 1])/(2*(3 - d + n4 + n5)*(3 - d + 2*n4 + n5)) + 
   ((1 - 2*d - 2*n1 + 4*n3 + 2*n4 - n5)*j[p4a, n1, 1, n3, -1 + n4, 1 + n5, 0, 
      0, 1, 0, 1, 1, 0, 1, 2])/(2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-1 + 2*d + 2*n1 - 4*n3 - 2*n4 + n5)*j[p4a, n1, 1, n3, -1 + n4, 1 + n5, 
      0, 0, 1, 1, 1, 1, 0, 1, 1])/(-3 + d - 2*n4 - n5) + 
   ((1 - 2*d - 2*n1 + 4*n3 + 2*n4 - n5)*j[p4a, n1, 1, n3, -1 + n4, 1 + n5, 0, 
      0, 1, 2, 1, 1, 0, 1, 0])/(2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) - 
   ((1 + n5)*(-1 + 2*d + 2*n1 - 4*n3 - 2*n4 + n5)*j[p4a, n1, 1, n3, -1 + n4, 
      2 + n5, 0, 0, 1, 0, 1, 1, 0, 1, 1])/(2*(-3 + d - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + ((1 + n5)*(-1 + 2*d + 2*n1 - 4*n3 - 2*n4 + n5)*
     j[p4a, n1, 1, n3, -1 + n4, 2 + n5, 0, 0, 1, 1, 1, 1, 0, 0, 1])/
    (2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) - 
   ((1 + n5)*(-1 + 2*d + 2*n1 - 4*n3 - 2*n4 + n5)*j[p4a, n1, 1, n3, -1 + n4, 
      2 + n5, 0, 0, 1, 1, 1, 1, 0, 1, 0])/(2*(-3 + d - 2*n4 - n5)*
     (-3 + d - n4 - n5)) - ((-4 + 3*d + 2*n1 - 4*n3 - 4*n4)*(1 + n5)*
     j[p4a, n1, 1, n3, -1 + n4, 2 + n5, 0, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   j[p4a, n1, 1, n3, n4, n5, 0, 0, 1, 0, 1, 1, 0, 1, 2]/
    (2*(-3 + d - n4 - n5)) + j[p4a, n1, 1, n3, n4, n5, 0, 0, 1, 2, 1, 1, 0, 
     1, 0]/(2*(-3 + d - n4 - n5)) + j[p4a, n1, 1, n3, n4, 1 + n5, 0, -1, 0, 
     1, 1, 2, 0, 1, 1]/(3 - d + n4 + n5) + 
   j[p4a, n1, 1, n3, n4, 1 + n5, 0, -1, 0, 1, 2, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5)) + j[p4a, n1, 1, n3, n4, 1 + n5, 0, -1, 1, 1, 2, 0, 
     0, 1, 1]/(2*(-3 + d - n4 - n5)) + 
   j[p4a, n1, 1, n3, n4, 1 + n5, 0, -1, 1, 1, 2, 1, 0, 0, 1]/
    (2*(-3 + d - n4 - n5)) + ((-1 + 2*d + 2*n1 - 4*n3 - 2*n4 + n5)*
     j[p4a, n1, 1, n3, n4, 1 + n5, 0, -1, 1, 2, 1, 1, 0, 1, 0])/
    (2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) - 
   j[p4a, n1, 1, n3, n4, 1 + n5, 0, -1, 2, 1, 1, 0, 0, 1, 1]/
    (2*(-3 + d - n4 - n5)) - j[p4a, n1, 1, n3, n4, 1 + n5, 0, -1, 2, 1, 1, 1, 
     0, 0, 1]/(2*(-3 + d - n4 - n5)) + 
   ((-2 - d - 5*n1 + d*n1 + 7*n3 - d*n3 - n4 + 2*d*n4 - 2*n3*n4 - 2*n4^2 - 
      2*n5 - n1*n5 + n3*n5 + n4*n5)*j[p4a, n1, 1, n3, n4, 1 + n5, 0, 0, 0, 1, 
      1, 1, 0, 1, 1])/(2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-1 + 2*d + 2*n1 - 4*n3 - 2*n4 + n5)*j[p4a, n1, 1, n3, n4, 1 + n5, 0, 0, 
      0, 2, 1, 1, 0, 1, 1])/(2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-1 + 2*d + 2*n1 - 4*n3 - n4 - 2*d*n4 - 2*n1*n4 + 4*n3*n4 + 2*n4^2 - 
      2*n5 + d*n5 - 3*n4*n5 - n5^2)*j[p4a, n1, 1, n3, n4, 1 + n5, 0, 0, 1, 0, 
      1, 1, 0, 1, 1])/(2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((1 - 2*d - 5*n1 + d*n1 + 7*n3 - d*n3 + n4 + 2*d*n4 - 2*n3*n4 - 2*n4^2 - 
      n5 - n1*n5 + n3*n5 + n4*n5)*j[p4a, n1, 1, n3, n4, 1 + n5, 0, 0, 1, 1, 
      0, 1, 0, 1, 1])/(2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   j[p4a, n1, 1, n3, n4, 1 + n5, 0, 0, 1, 1, 0, 2, -1, 1, 1]/
    (2*(-3 + d - n4 - n5)) - j[p4a, n1, 1, n3, n4, 1 + n5, 0, 0, 1, 1, 0, 2, 
     0, 1, 1]/(2*(-3 + d - n4 - n5)) + 
   ((-1 + 2*d + 5*n1 - d*n1 - 7*n3 + d*n3 - n4 - 2*d*n4 + 2*n3*n4 + 2*n4^2 + 
      n5 + n1*n5 - n3*n5 - n4*n5)*j[p4a, n1, 1, n3, n4, 1 + n5, 0, 0, 1, 1, 
      1, 0, 0, 1, 1])/(2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((n3 + n5)*j[p4a, n1, 1, n3, n4, 1 + n5, 0, 0, 1, 1, 1, 1, 0, 0, 1])/
    (2*(3 - d + n4 + n5)) - j[p4a, n1, 1, n3, n4, 1 + n5, 0, 0, 1, 1, 1, 1, 
     0, 0, 2]/(2*(-3 + d - n4 - n5)) + 
   ((-1 + 2*d + 2*n1 - 4*n3 - n4 - 2*d*n4 - 2*n1*n4 + 4*n3*n4 + 2*n4^2 - 
      2*n5 + d*n5 - 3*n4*n5 - n5^2)*j[p4a, n1, 1, n3, n4, 1 + n5, 0, 0, 1, 1, 
      1, 1, 0, 1, 0])/(2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-4 + 3*d + 2*n1 - 4*n3 - 3*d*n4 - 2*n1*n4 + 4*n3*n4 + 4*n4^2 - 6*n5 + 
      2*d*n5 - 4*n4*n5 - 2*n5^2)*j[p4a, n1, 1, n3, n4, 1 + n5, 0, 0, 1, 1, 1, 
      1, 0, 1, 1])/(2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) - 
   j[p4a, n1, 1, n3, n4, 1 + n5, 0, 0, 1, 1, 2, 0, -1, 1, 1]/
    (2*(-3 + d - n4 - n5)) + j[p4a, n1, 1, n3, n4, 1 + n5, 0, 0, 1, 1, 2, 0, 
     0, 1, 1]/(2*(-3 + d - n4 - n5)) + 
   ((-1 + 2*d + 2*n1 - 4*n3 - 2*n4 + n5)*j[p4a, n1, 1, n3, n4, 1 + n5, 0, 0, 
      1, 2, 0, 1, 0, 1, 1])/(2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((1 - 2*d - 2*n1 + 4*n3 + 2*n4 - n5)*j[p4a, n1, 1, n3, n4, 1 + n5, 0, 0, 
      1, 2, 1, 0, 0, 1, 1])/(2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((2 + d + 2*n1 - 4*n3 + 2*n5)*j[p4a, n1, 1, n3, n4, 1 + n5, 0, 0, 1, 2, 1, 
      1, 0, 1, 0])/(2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-2 - d - 2*n1 + 4*n3 - 2*n5)*j[p4a, n1, 1, n3, n4, 1 + n5, 0, 0, 1, 2, 
      1, 1, 0, 1, 1])/(2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((1 + n5)*j[p4a, n1, 1, n3, n4, 2 + n5, 0, -1, 1, 0, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5)) - ((1 + n5)*(-1 + 2*d + 2*n1 - 4*n3 - 2*n4 + n5)*
     j[p4a, n1, 1, n3, n4, 2 + n5, 0, -1, 1, 1, 1, 1, 0, 0, 1])/
    (2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((1 + n5)*(-1 + 2*d + 2*n1 - 4*n3 - 2*n4 + n5)*j[p4a, n1, 1, n3, n4, 
      2 + n5, 0, -1, 1, 1, 1, 1, 0, 1, 0])/(2*(-3 + d - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + ((-4 + 3*d + 2*n1 - 4*n3 - 4*n4)*(1 + n5)*
     j[p4a, n1, 1, n3, n4, 2 + n5, 0, -1, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) - 
   ((1 + n5)*(2 + d + 2*n1 - 4*n3 + 2*n5)*j[p4a, n1, 1, n3, n4, 2 + n5, 0, 0, 
      1, 1, 1, 1, 0, 0, 1])/(2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((1 + n5)*(2 + d + 2*n1 - 4*n3 + 2*n5)*j[p4a, n1, 1, n3, n4, 2 + n5, 0, 0, 
      1, 1, 1, 1, 0, 1, 0])/(2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   (n4*j[p4a, n1, 1, n3, 1 + n4, n5, 0, 0, 0, 1, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5)) - (n4*j[p4a, n1, 1, n3, 1 + n4, n5, 0, 0, 1, 0, 1, 
      1, 0, 1, 1])/(2*(3 - d + n4 + n5)) + 
   (n4*j[p4a, n1, 1, n3, 1 + n4, n5, 0, 0, 1, 1, 0, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5)) - (n4*j[p4a, n1, 1, n3, 1 + n4, n5, 0, 0, 1, 1, 1, 
      0, 0, 1, 1])/(2*(3 - d + n4 + n5)) - 
   (n4*j[p4a, n1, 1, n3, 1 + n4, n5, 0, 0, 1, 1, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5)) - (n4*j[p4a, n1, 1, n3, 1 + n4, n5, 0, 0, 1, 1, 1, 
      1, 0, 1, 1])/(3 - d + n4 + n5) - 
   (n4*j[p4a, n1, 1, n3, 1 + n4, 1 + n5, 0, -1, 0, 1, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5)) + (n4*j[p4a, n1, 1, n3, 1 + n4, 1 + n5, 0, -1, 1, 
      0, 1, 1, 0, 1, 1])/(2*(3 - d + n4 + n5)) - 
   (n4*j[p4a, n1, 1, n3, 1 + n4, 1 + n5, 0, -1, 1, 1, 0, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5)) + (n4*j[p4a, n1, 1, n3, 1 + n4, 1 + n5, 0, -1, 1, 
      1, 1, 0, 0, 1, 1])/(2*(3 - d + n4 + n5)) - 
   (n4*(7 - 4*d - 2*n1 + 4*n3 + 6*n4 + n5)*j[p4a, n1, 1, n3, 1 + n4, 1 + n5, 
      0, -1, 1, 1, 1, 1, 0, 1, 0])/(2*(3 - d + n4 + n5)*
     (3 - d + 2*n4 + n5)) + (n4*j[p4a, n1, 1, n3, 1 + n4, 1 + n5, 0, -1, 1, 
      1, 1, 1, 0, 1, 1])/(3 - d + n4 + n5) + 
   (n4*(2 + d + 2*n1 - 4*n3 + 2*n5)*j[p4a, n1, 1, n3, 1 + n4, 1 + n5, 0, 0, 
      1, 1, 1, 1, 0, 1, 0])/(2*(3 - d + n4 + n5)*(3 - d + 2*n4 + n5)) + 
   (n3*j[p4a, n1, 1, 1 + n3, n4, 1 + n5, 0, -1, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)) + (n3*j[p4a, n1, 1, 1 + n3, n4, 1 + n5, 0, -1, 1, 
      1, 0, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5)) - 
   (n3*j[p4a, n1, 1, 1 + n3, n4, 1 + n5, 0, -1, 1, 1, 1, 0, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)) + (n3*j[p4a, n1, 1, 1 + n3, n4, 1 + n5, 0, -1, 1, 
      1, 1, 1, 0, 0, 1])/(2*(-3 + d - n4 - n5)) - 
   (n3*j[p4a, n1, 1, 1 + n3, n4, 1 + n5, 0, -1, 1, 1, 1, 1, 0, 1, 1])/
    (-3 + d - n4 - n5) + (n3*j[p4a, n1, 1, 1 + n3, n4, 1 + n5, 0, 0, 1, 1, 1, 
      1, 0, 0, 1])/(2*(-3 + d - n4 - n5)) - 
   j[p4a, n1, 2, -1 + n3, n4, 1 + n5, 0, 0, 0, 1, 1, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5)) + j[p4a, n1, 2, n3, n4, 1 + n5, 0, -1, 0, 1, 1, 1, 
     0, 1, 1]/(-3 + d - n4 - n5) - j[p4a, n1, 2, n3, n4, 1 + n5, 0, -1, 1, 1, 
     0, 1, 0, 1, 1]/(2*(-3 + d - n4 - n5)) + 
   j[p4a, n1, 2, n3, n4, 1 + n5, 0, -1, 1, 1, 1, 1, 0, 0, 1]/
    (-3 + d - n4 - n5) - j[p4a, n1, 2, n3, n4, 1 + n5, 0, 0, 0, 1, 1, 1, -1, 
     1, 1]/(2*(-3 + d - n4 - n5)) + 
   (n1*j[p4a, 1 + n1, 0, n3, n4, 1 + n5, 0, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)) - (n1*j[p4a, 1 + n1, 1, n3, n4, 1 + n5, 0, 0, 0, 
      1, 1, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5)) - 
   (n1*j[p4a, 1 + n1, 1, n3, n4, 1 + n5, 0, 0, 1, 1, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)) + (n1*j[p4a, 1 + n1, 1, n3, n4, 1 + n5, 0, 0, 1, 
      1, 1, 0, 0, 1, 1])/(2*(-3 + d - n4 - n5)), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, (n8_)?Positive, 
    (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n10 == 1 && n11 == 1 && n12 == 0 && 
    n13 == 1 && n14 == 1 && n2 == 1 && n5 == 0 && n7 == -1 && n8 == 1 && 
    n9 == 1 && n6 != 0 -> j[p4a, -1 + n1, 0, -1 + n3, n4, 0, 1 + n6, 0, 1, 1, 
     1, 2, 0, 1, 1]/(2*(-1 + n3)) - j[p4a, -1 + n1, 1, -1 + n3, n4, 0, 
     1 + n6, 0, 0, 1, 1, 2, 0, 1, 1]/(2*(-1 + n3)) + 
   j[p4a, -1 + n1, 1, -1 + n3, n4, 0, 1 + n6, 0, 1, 0, 1, 2, 0, 1, 1]/
    (2*(-1 + n3)) + j[p4a, -1 + n1, 1, -1 + n3, n4, 0, 1 + n6, 0, 1, 0, 2, 1, 
     0, 1, 1]/(2*(-1 + n3)) - j[p4a, -1 + n1, 1, -1 + n3, n4, 0, 1 + n6, 0, 
     1, 1, 0, 2, 0, 1, 1]/(2*(-1 + n3)) + 
   ((-4 + d - n4 - 2*n6)*j[p4a, -1 + n1, 1, -1 + n3, n4, 0, 1 + n6, 0, 1, 1, 
      1, 1, 0, 1, 1])/(2*(-1 + n3)) + 
   (n4*j[p4a, -1 + n1, 1, -1 + n3, 1 + n4, -1, 1 + n6, 0, 1, 1, 1, 1, 0, 1, 
      1])/(2*(-1 + n3)) - j[p4a, -1 + n1, 1, n3, -1 + n4, 0, 1 + n6, 0, 1, 1, 
     1, 1, 0, 1, 1]/2 + j[p4a, -1 + n1, 1, n3, n4, -1, 1 + n6, 0, 1, 1, 1, 1, 
     0, 1, 1]/2 - j[p4a, n1, 0, -1 + n3, n4, 0, n6, 0, 1, 1, 2, 1, 0, 1, 1]/
    (2*(-1 + n3)) + ((-1 + n4 - n6)*j[p4a, n1, 0, -1 + n3, n4, 0, 1 + n6, 0, 
      1, 1, 1, 1, 0, 1, 1])/(2*(-1 + n3)) - 
   (n4*j[p4a, n1, 0, -1 + n3, 1 + n4, -1, 1 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-1 + n3)) - j[p4a, n1, 0, n3, -1 + n4, 0, 1 + n6, 0, 1, 1, 1, 1, 0, 
     1, 1]/2 + j[p4a, n1, 0, n3, n4, -1, 1 + n6, 0, 1, 1, 1, 1, 0, 1, 1]/2 + 
   j[p4a, n1, 1, -1 + n3, -1 + n4, 0, 1 + n6, 0, 0, 1, 1, 2, 0, 1, 1]/
    (2*(-1 + n3)) + ((2 - d + n4)*j[p4a, n1, 1, -1 + n3, -1 + n4, 0, 1 + n6, 
      0, 1, 1, 1, 1, 0, 1, 1])/(-1 + n3) + 
   j[p4a, n1, 1, -1 + n3, -1 + n4, 0, 1 + n6, 0, 2, 1, 1, 0, 0, 1, 1]/
    (2*(-1 + n3)) - j[p4a, n1, 1, -1 + n3, n4, -1, 1 + n6, 0, 0, 1, 1, 2, 0, 
     1, 1]/(2*(-1 + n3)) + ((1 + n3 - 2*n4 + 2*n6)*j[p4a, n1, 1, -1 + n3, n4, 
      -1, 1 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/(2*(-1 + n3)) + 
   ((-1 - n6)*j[p4a, n1, 1, -1 + n3, n4, -1, 2 + n6, 0, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-1 + n3)) + ((1 + n6)*j[p4a, n1, 1, -1 + n3, n4, -1, 2 + n6, 0, 1, 1, 
      0, 1, 0, 1, 1])/(2*(-1 + n3)) - j[p4a, n1, 1, -1 + n3, n4, 0, n6, 0, 0, 
     1, 1, 2, 0, 1, 1]/(2*(-1 + n3)) + 
   ((-4 + 2*d - n3 - 2*n4 - n6)*j[p4a, n1, 1, -1 + n3, n4, 0, n6, 0, 1, 1, 1, 
      1, 0, 1, 1])/(-1 + n3) - j[p4a, n1, 1, -1 + n3, n4, 0, n6, 0, 2, 1, 1, 
     0, 0, 1, 1]/(2*(-1 + n3)) + 
   ((-1 + n4)*j[p4a, n1, 1, -1 + n3, n4, 0, 1 + n6, 0, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-1 + n3)) + ((-1 + n4 + n6)*j[p4a, n1, 1, -1 + n3, n4, 0, 1 + n6, 0, 
      1, 0, 1, 1, 0, 1, 1])/(2*(-1 + n3)) + 
   ((1 - n4 - n6)*j[p4a, n1, 1, -1 + n3, n4, 0, 1 + n6, 0, 1, 1, 0, 1, 0, 1, 
      1])/(2*(-1 + n3)) + ((-1 + n4)*j[p4a, n1, 1, -1 + n3, n4, 0, 1 + n6, 0, 
      1, 1, 1, 0, 0, 1, 1])/(2*(-1 + n3)) + 
   (2*n4*j[p4a, n1, 1, -1 + n3, 1 + n4, -1, n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (-1 + n3) + (n4*j[p4a, n1, 1, -1 + n3, 1 + n4, -1, 1 + n6, -1, 1, 1, 1, 
      1, 0, 1, 1])/(2*(-1 + n3)) - 
   (n4*j[p4a, n1, 1, -1 + n3, 1 + n4, -1, 1 + n6, 0, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-1 + n3)) - (n4*j[p4a, n1, 1, -1 + n3, 1 + n4, -1, 1 + n6, 0, 1, 0, 
      1, 1, 0, 1, 1])/(2*(-1 + n3)) + 
   (n4*j[p4a, n1, 1, -1 + n3, 1 + n4, -1, 1 + n6, 0, 1, 1, 0, 1, 0, 1, 1])/
    (2*(-1 + n3)) - (n4*j[p4a, n1, 1, -1 + n3, 1 + n4, -1, 1 + n6, 0, 1, 1, 
      1, 0, 0, 1, 1])/(2*(-1 + n3)) - 
   (n4*j[p4a, n1, 1, -1 + n3, 1 + n4, 0, n6, -1, 1, 1, 1, 1, 0, 1, 1])/
    (-1 + n3) + j[p4a, n1, 1, n3, -1 + n4, 0, 1 + n6, -1, 1, 1, 1, 1, 0, 1, 
    1] + (3*j[p4a, n1, 1, n3, -1 + n4, 0, 1 + n6, 0, 0, 1, 1, 1, 0, 1, 1])/
    2 - j[p4a, n1, 1, n3, -1 + n4, 0, 1 + n6, 0, 1, 1, 0, 1, 0, 1, 1]/2 + 
   j[p4a, n1, 1, n3, -1 + n4, 0, 1 + n6, 0, 1, 1, 1, 0, 0, 1, 1]/2 - 
   j[p4a, n1, 1, n3, -1 + n4, 0, 1 + n6, 0, 1, 1, 1, 1, -1, 1, 1] + 
   j[p4a, n1, 1, n3, -1 + n4, 0, 1 + n6, 0, 1, 1, 1, 1, 0, 0, 1]/2 + 
   j[p4a, n1, 1, n3, -1 + n4, 0, 1 + n6, 0, 1, 1, 1, 1, 0, 1, 1]/2 - 
   j[p4a, n1, 1, n3, n4, -1, 1 + n6, -1, 1, 1, 1, 1, 0, 1, 1]/2 - 
   (3*j[p4a, n1, 1, n3, n4, -1, 1 + n6, 0, 0, 1, 1, 1, 0, 1, 1])/2 + 
   j[p4a, n1, 1, n3, n4, -1, 1 + n6, 0, 1, 1, 0, 1, 0, 1, 1]/2 - 
   j[p4a, n1, 1, n3, n4, -1, 1 + n6, 0, 1, 1, 1, 0, 0, 1, 1]/2 + 
   j[p4a, n1, 1, n3, n4, -1, 1 + n6, 0, 1, 1, 1, 1, -1, 1, 1] - 
   j[p4a, n1, 1, n3, n4, -1, 1 + n6, 0, 1, 1, 1, 1, 0, 0, 1] - 
   j[p4a, n1, 1, n3, n4, -1, 1 + n6, 0, 1, 1, 1, 1, 0, 1, 1]/2 + 
   j[p4a, n1, 1, n3, n4, 0, n6, 0, 1, 1, 1, 1, 0, 0, 1] + 
   j[p4a, n1, 2, -1 + n3, n4, -1, 1 + n6, 0, 1, 1, 0, 1, 0, 1, 1]/
    (2*(-1 + n3)) - j[p4a, n1, 2, -1 + n3, n4, 0, n6, 0, 1, 1, 0, 1, 0, 1, 1]/
    (2*(-1 + n3)), j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?NonPositive, 
    (n7_)?NonPositive, (n8_)?Positive, (n9_)?Positive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 1 && 
    n5 == 0 && n7 == 0 && n8 == 1 && n9 == 1 &&  !(n4 == 0 && n6 == 0) -> 
  ((416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 8*d^2*n1 - 48*n1^2 + 
      12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 112*n1*n3 - 28*d*n1*n3 - 
      32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 62*d^2*n4 + 48*n1*n4 - 
      20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 48*d*n3*n4 + 32*n1*n3*n4 + 
      240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 32*n3*n4^2 + 32*n4^3 + 144*n6 - 
      80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 24*d*n1*n6 - 8*n1^2*n6 - 32*n3*n6 + 
      16*d*n3*n6 + 24*n1*n3*n6 - 16*n3^2*n6 + 128*n4*n6 - 40*d*n4*n6 + 
      24*n1*n4*n6 + 32*n4^2*n6 - 24*n6^2 + 12*d*n6^2 + 16*n1*n6^2 - 
      24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*j[p4a, -1 + n1, 0, n3, n4, 0, n6, 0, 
      1, 1, 2, 1, 0, 2, 1])/(4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   ((416*n6 - 432*d*n6 + 142*d^2*n6 - 15*d^3*n6 + 16*n1*n6 - 36*d*n1*n6 + 
      8*d^2*n1*n6 - 48*n1^2*n6 + 12*d*n1^2*n6 + 224*n3*n6 - 112*d*n3*n6 + 
      14*d^2*n3*n6 + 112*n1*n3*n6 - 28*d*n1*n3*n6 - 32*n3^2*n6 + 
      8*d*n3^2*n6 + 560*n4*n6 - 376*d*n4*n6 + 62*d^2*n4*n6 + 48*n1*n4*n6 - 
      20*d*n1*n4*n6 - 16*n1^2*n4*n6 + 160*n3*n4*n6 - 48*d*n3*n4*n6 + 
      32*n1*n3*n4*n6 + 240*n4^2*n6 - 80*d*n4^2*n6 + 16*n1*n4^2*n6 + 
      32*n3*n4^2*n6 + 32*n4^3*n6 + 144*n6^2 - 80*d*n6^2 + 10*d^2*n6^2 + 
      72*n1*n6^2 - 24*d*n1*n6^2 - 8*n1^2*n6^2 - 32*n3*n6^2 + 16*d*n3*n6^2 + 
      24*n1*n3*n6^2 - 16*n3^2*n6^2 + 128*n4*n6^2 - 40*d*n4*n6^2 + 
      24*n1*n4*n6^2 + 32*n4^2*n6^2 - 24*n6^3 + 12*d*n6^3 + 16*n1*n6^3 - 
      24*n3*n6^3 - 8*n4*n6^3 - 8*n6^4)*j[p4a, -1 + n1, 0, n3, n4, 0, 1 + n6, 
      0, 1, 1, 1, 1, 0, 2, 1])/(4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   ((-4 + d - 2*n4)*(-10 + 3*d - 2*n1 - 2*n4 - 2*n6)*n6*
     j[p4a, -1 + n1, 0, n3, n4, 0, 1 + n6, 0, 1, 1, 1, 2, 0, 1, 1])/
    (2*(-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   ((32*n6 - 20*d*n6 + 3*d^2*n6 - 8*n1*n6 + 2*d*n1*n6 + 16*n3*n6 - 
      4*d*n3*n6 + 16*n4*n6 - 4*d*n4*n6 + 24*n6^2 - 8*d*n6^2 - 4*n1*n6^2 + 
      8*n3*n6^2 + 8*n4*n6^2 + 4*n6^3)*j[p4a, -1 + n1, 0, n3, n4, 0, 1 + n6, 
      0, 1, 1, 2, 1, 0, 1, 1])/(4*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((-64*n6 + 72*d*n6 - 26*d^2*n6 + 3*d^3*n6 + 80*n1*n6 - 52*d*n1*n6 + 
      8*d^2*n1*n6 - 16*n1^2*n6 + 4*d*n1^2*n6 - 96*n3*n6 + 64*d*n3*n6 - 
      10*d^2*n3*n6 + 48*n1*n3*n6 - 12*d*n1*n3*n6 - 32*n3^2*n6 + 8*d*n3^2*n6 - 
      96*n4*n6 + 64*d*n4*n6 - 10*d^2*n4*n6 + 48*n1*n4*n6 - 12*d*n1*n4*n6 - 
      64*n3*n4*n6 + 16*d*n3*n4*n6 - 32*n4^2*n6 + 8*d*n4^2*n6 - 112*n6^2 + 
      80*d*n6^2 - 14*d^2*n6^2 + 72*n1*n6^2 - 24*d*n1*n6^2 - 8*n1^2*n6^2 - 
      96*n3*n6^2 + 32*d*n3*n6^2 + 24*n1*n3*n6^2 - 16*n3^2*n6^2 - 96*n4*n6^2 + 
      32*d*n4*n6^2 + 24*n1*n4*n6^2 - 32*n3*n4*n6^2 - 16*n4^2*n6^2 - 56*n6^3 + 
      20*d*n6^3 + 16*n1*n6^3 - 24*n3*n6^3 - 24*n4*n6^3 - 8*n6^4)*
     j[p4a, -1 + n1, 0, n3, n4, 0, 1 + n6, 0, 2, 1, 1, 1, 0, 1, 1])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   ((1 + n6)*(32*n6 - 20*d*n6 + 3*d^2*n6 - 8*n1*n6 + 2*d*n1*n6 + 16*n3*n6 - 
      4*d*n3*n6 + 16*n4*n6 - 4*d*n4*n6 + 24*n6^2 - 8*d*n6^2 - 4*n1*n6^2 + 
      8*n3*n6^2 + 8*n4*n6^2 + 4*n6^3)*j[p4a, -1 + n1, 0, n3, n4, 0, 2 + n6, 
      0, 1, 1, 1, 1, 0, 1, 1])/(4*(3 - d + n4 + n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, -1 + n1, 0, n3, 1 + n4, 0, n6, 0, 1, 1, 1, 2, 0, 1, 1])/
    (2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, -1 + n1, 0, n3, 1 + n4, 0, n6, 0, 1, 1, 2, 1, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, -1 + n1, 0, n3, 1 + n4, 0, n6, 0, 2, 1, 1, 1, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(4 - d + 2*n4)*n6*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, -1 + n1, 0, n3, 1 + n4, 0, 1 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n3*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 8*d^2*n1 - 
      48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 112*n1*n3 - 
      28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 62*d^2*n4 + 
      48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 48*d*n3*n4 + 
      32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 32*n3*n4^2 + 
      32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 24*d*n1*n6 - 
      8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 16*n3^2*n6 + 
      128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 24*n6^2 + 
      12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, -1 + n1, 0, 1 + n3, n4, 0, n6, 0, 1, 1, 1, 2, 0, 1, 1])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n3*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 8*d^2*n1 - 
      48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 112*n1*n3 - 
      28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 62*d^2*n4 + 
      48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 48*d*n3*n4 + 
      32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 32*n3*n4^2 + 
      32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 24*d*n1*n6 - 
      8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 16*n3^2*n6 + 
      128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 24*n6^2 + 
      12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, -1 + n1, 0, 1 + n3, n4, 0, n6, 0, 1, 1, 2, 1, 0, 1, 1])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n3*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 8*d^2*n1 - 
      48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 112*n1*n3 - 
      28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 62*d^2*n4 + 
      48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 48*d*n3*n4 + 
      32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 32*n3*n4^2 + 
      32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 24*d*n1*n6 - 
      8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 16*n3^2*n6 + 
      128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 24*n6^2 + 
      12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, -1 + n1, 0, 1 + n3, n4, 0, n6, 0, 2, 1, 1, 1, 0, 1, 1])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n3*(-32*n6 + 20*d*n6 - 3*d^2*n6 + 8*n1*n6 - 2*d*n1*n6 - 16*n3*n6 + 
      4*d*n3*n6 - 16*n4*n6 + 4*d*n4*n6 - 24*n6^2 + 8*d*n6^2 + 4*n1*n6^2 - 
      8*n3*n6^2 - 8*n4*n6^2 - 4*n6^3)*j[p4a, -1 + n1, 0, 1 + n3, n4, 0, 
      1 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/(4*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n3*n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, -1 + n1, 0, 1 + n3, 1 + n4, 0, n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   ((1 + n6)*(32*n6 - 20*d*n6 + 3*d^2*n6 - 8*n1*n6 + 2*d*n1*n6 + 16*n3*n6 - 
      4*d*n3*n6 + 16*n4*n6 - 4*d*n4*n6 + 24*n6^2 - 8*d*n6^2 - 4*n1*n6^2 + 
      8*n3*n6^2 + 8*n4*n6^2 + 4*n6^3)*j[p4a, -1 + n1, 1, -1 + n3, n4, 0, 
      2 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/(4*(3 - d + n4 + n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(-32*n6 + 20*d*n6 - 3*d^2*n6 + 8*n1*n6 - 2*d*n1*n6 - 16*n3*n6 + 
      4*d*n3*n6 - 16*n4*n6 + 4*d*n4*n6 - 24*n6^2 + 8*d*n6^2 + 4*n1*n6^2 - 
      8*n3*n6^2 - 8*n4*n6^2 - 4*n6^3)*j[p4a, -1 + n1, 1, -1 + n3, 1 + n4, 0, 
      1 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/(4*(3 - d + n4 + n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - (n4*(1 + n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     (8 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*j[p4a, -1 + n1, 1, -1 + n3, 
      2 + n4, 0, n6, 0, 1, 1, 1, 1, 0, 1, 1])/(2*(3 - d + n4 + n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 8*d^2*n1 - 48*n1^2 + 
      12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 112*n1*n3 - 28*d*n1*n3 - 
      32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 62*d^2*n4 + 48*n1*n4 - 
      20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 48*d*n3*n4 + 32*n1*n3*n4 + 
      240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 32*n3*n4^2 + 32*n4^3 + 144*n6 - 
      80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 24*d*n1*n6 - 8*n1^2*n6 - 32*n3*n6 + 
      16*d*n3*n6 + 24*n1*n3*n6 - 16*n3^2*n6 + 128*n4*n6 - 40*d*n4*n6 + 
      24*n1*n4*n6 + 32*n4^2*n6 - 24*n6^2 + 12*d*n6^2 + 16*n1*n6^2 - 
      24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*j[p4a, -1 + n1, 1, n3, n4, 0, n6, 0, 
      0, 1, 1, 2, 0, 2, 1])/(4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   ((-4 + d - 2*n4)*(-10 + 3*d - 2*n1 - 2*n4 - 2*n6)*
     j[p4a, -1 + n1, 1, n3, n4, 0, n6, 0, 1, 0, 1, 2, 0, 1, 2])/
    (2*(-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   ((-4 + d - 2*n4)*(-10 + 3*d - 2*n1 - 2*n4 - 2*n6)*
     j[p4a, -1 + n1, 1, n3, n4, 0, n6, 0, 1, 2, 1, 2, 0, 1, 0])/
    (2*(-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   ((-32*n6 + 20*d*n6 - 3*d^2*n6 + 8*n1*n6 - 2*d*n1*n6 - 16*n3*n6 + 
      4*d*n3*n6 - 16*n4*n6 + 4*d*n4*n6 - 24*n6^2 + 8*d*n6^2 + 4*n1*n6^2 - 
      8*n3*n6^2 - 8*n4*n6^2 - 4*n6^3)*j[p4a, -1 + n1, 1, n3, n4, 0, 1 + n6, 
      0, 0, 1, 1, 1, 0, 2, 1])/(4*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   ((-4 + d - 2*n4)*(-10 + 3*d - 2*n1 - 2*n4 - 2*n6)*n6*
     j[p4a, -1 + n1, 1, n3, n4, 0, 1 + n6, 0, 0, 1, 1, 2, 0, 1, 1])/
    (2*(-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   ((-32*n6 + 20*d*n6 - 3*d^2*n6 + 8*n1*n6 - 2*d*n1*n6 - 16*n3*n6 + 
      4*d*n3*n6 - 16*n4*n6 + 4*d*n4*n6 - 24*n6^2 + 8*d*n6^2 + 4*n1*n6^2 - 
      8*n3*n6^2 - 8*n4*n6^2 - 4*n6^3)*j[p4a, -1 + n1, 1, n3, n4, 0, 1 + n6, 
      0, 0, 1, 2, 1, 0, 1, 1])/(4*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((-64*n6 + 72*d*n6 - 26*d^2*n6 + 3*d^3*n6 + 80*n1*n6 - 52*d*n1*n6 + 
      8*d^2*n1*n6 - 16*n1^2*n6 + 4*d*n1^2*n6 - 96*n3*n6 + 64*d*n3*n6 - 
      10*d^2*n3*n6 + 48*n1*n3*n6 - 12*d*n1*n3*n6 - 32*n3^2*n6 + 8*d*n3^2*n6 - 
      96*n4*n6 + 64*d*n4*n6 - 10*d^2*n4*n6 + 48*n1*n4*n6 - 12*d*n1*n4*n6 - 
      64*n3*n4*n6 + 16*d*n3*n4*n6 - 32*n4^2*n6 + 8*d*n4^2*n6 - 112*n6^2 + 
      80*d*n6^2 - 14*d^2*n6^2 + 72*n1*n6^2 - 24*d*n1*n6^2 - 8*n1^2*n6^2 - 
      96*n3*n6^2 + 32*d*n3*n6^2 + 24*n1*n3*n6^2 - 16*n3^2*n6^2 - 96*n4*n6^2 + 
      32*d*n4*n6^2 + 24*n1*n4*n6^2 - 32*n3*n4*n6^2 - 16*n4^2*n6^2 - 56*n6^3 + 
      20*d*n6^3 + 16*n1*n6^3 - 24*n3*n6^3 - 24*n4*n6^3 - 8*n6^4)*
     j[p4a, -1 + n1, 1, n3, n4, 0, 1 + n6, 0, 1, 0, 1, 2, 0, 1, 1])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((-64*n6 + 72*d*n6 - 26*d^2*n6 + 3*d^3*n6 + 80*n1*n6 - 52*d*n1*n6 + 
      8*d^2*n1*n6 - 16*n1^2*n6 + 4*d*n1^2*n6 - 96*n3*n6 + 64*d*n3*n6 - 
      10*d^2*n3*n6 + 48*n1*n3*n6 - 12*d*n1*n3*n6 - 32*n3^2*n6 + 8*d*n3^2*n6 - 
      96*n4*n6 + 64*d*n4*n6 - 10*d^2*n4*n6 + 48*n1*n4*n6 - 12*d*n1*n4*n6 - 
      64*n3*n4*n6 + 16*d*n3*n4*n6 - 32*n4^2*n6 + 8*d*n4^2*n6 - 112*n6^2 + 
      80*d*n6^2 - 14*d^2*n6^2 + 72*n1*n6^2 - 24*d*n1*n6^2 - 8*n1^2*n6^2 - 
      96*n3*n6^2 + 32*d*n3*n6^2 + 24*n1*n3*n6^2 - 16*n3^2*n6^2 - 96*n4*n6^2 + 
      32*d*n4*n6^2 + 24*n1*n4*n6^2 - 32*n3*n4*n6^2 - 16*n4^2*n6^2 - 56*n6^3 + 
      20*d*n6^3 + 16*n1*n6^3 - 24*n3*n6^3 - 24*n4*n6^3 - 8*n6^4)*
     j[p4a, -1 + n1, 1, n3, n4, 0, 1 + n6, 0, 1, 1, 0, 2, 0, 1, 1])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((-640*n6 + 976*d*n6 - 548*d^2*n6 + 134*d^3*n6 - 12*d^4*n6 + 288*n1*n6 - 
      264*d*n1*n6 + 80*d^2*n1*n6 - 8*d^3*n1*n6 - 32*n1^2*n6 + 8*d*n1^2*n6 - 
      960*n3*n6 + 1024*d*n3*n6 - 356*d^2*n3*n6 + 40*d^3*n3*n6 + 
      224*n1*n3*n6 - 120*d*n1*n3*n6 + 16*d^2*n1*n3*n6 - 448*n3^2*n6 + 
      288*d*n3^2*n6 - 44*d^2*n3^2*n6 + 32*n1*n3^2*n6 - 8*d*n1*n3^2*n6 - 
      64*n3^3*n6 + 16*d*n3^3*n6 - 768*n4*n6 + 808*d*n4*n6 - 278*d^2*n4*n6 + 
      31*d^3*n4*n6 + 112*n1*n4*n6 - 44*d*n1*n4*n6 + 4*d^2*n1*n4*n6 + 
      16*n1^2*n4*n6 - 4*d*n1^2*n4*n6 - 672*n3*n4*n6 + 424*d*n3*n4*n6 - 
      64*d^2*n3*n4*n6 - 128*n3^2*n4*n6 + 32*d*n3^2*n4*n6 - 224*n4^2*n6 + 
      136*d*n4^2*n6 - 20*d^2*n4^2*n6 - 32*n1*n4^2*n6 + 8*d*n1*n4^2*n6 - 
      64*n3*n4^2*n6 + 16*d*n3*n4^2*n6 - 800*n6^2 + 888*d*n6^2 - 
      330*d^2*n6^2 + 41*d^3*n6^2 + 320*n1*n6^2 - 188*d*n1*n6^2 + 
      28*d^2*n1*n6^2 - 32*n1^2*n6^2 + 4*d*n1^2*n6^2 - 928*n3*n6^2 + 
      664*d*n3*n6^2 - 120*d^2*n3*n6^2 + 176*n1*n3*n6^2 - 48*d*n1*n3*n6^2 - 
      320*n3^2*n6^2 + 112*d*n3^2*n6^2 + 16*n1*n3^2*n6^2 - 32*n3^3*n6^2 - 
      720*n4*n6^2 + 504*d*n4*n6^2 - 90*d^2*n4*n6^2 + 88*n1*n4*n6^2 - 
      16*d*n1*n4*n6^2 + 8*n1^2*n4*n6^2 - 464*n3*n4*n6^2 + 160*d*n3*n4*n6^2 - 
      64*n3^2*n4*n6^2 - 144*n4^2*n6^2 + 48*d*n4^2*n6^2 - 16*n1*n4^2*n6^2 - 
      32*n3*n4^2*n6^2 - 384*n6^3 + 264*d*n6^3 - 46*d^2*n6^3 + 120*n1*n6^3 - 
      32*d*n1*n6^3 - 8*n1^2*n6^3 - 288*n3*n6^3 + 96*d*n3*n6^3 + 
      32*n1*n3*n6^3 - 48*n3^2*n6^3 - 216*n4*n6^3 + 68*d*n4*n6^3 + 
      16*n1*n4*n6^3 - 64*n3*n4*n6^3 - 16*n4^2*n6^3 - 88*n6^4 + 28*d*n6^4 + 
      16*n1*n6^4 - 32*n3*n6^4 - 24*n4*n6^4 - 8*n6^5)*
     j[p4a, -1 + n1, 1, n3, n4, 0, 1 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   ((-4 + d - 2*n4)*(-10 + 3*d - 2*n1 - 2*n4 - 2*n6)*n6*
     j[p4a, -1 + n1, 1, n3, n4, 0, 1 + n6, 0, 1, 1, 1, 2, 0, 0, 1])/
    (2*(-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   ((-4 + d - 2*n4)*(-10 + 3*d - 2*n1 - 2*n4 - 2*n6)*n6*
     j[p4a, -1 + n1, 1, n3, n4, 0, 1 + n6, 0, 1, 1, 1, 2, 0, 1, 0])/
    (2*(-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   ((-32*n6 + 20*d*n6 - 3*d^2*n6 + 8*n1*n6 - 2*d*n1*n6 - 16*n3*n6 + 
      4*d*n3*n6 - 16*n4*n6 + 4*d*n4*n6 - 24*n6^2 + 8*d*n6^2 + 4*n1*n6^2 - 
      8*n3*n6^2 - 8*n4*n6^2 - 4*n6^3)*j[p4a, -1 + n1, 1, n3, n4, 0, 1 + n6, 
      0, 1, 1, 1, 2, 0, 1, 1])/(4*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((-32*n6 + 20*d*n6 - 3*d^2*n6 + 8*n1*n6 - 2*d*n1*n6 - 16*n3*n6 + 
      4*d*n3*n6 - 16*n4*n6 + 4*d*n4*n6 - 24*n6^2 + 8*d*n6^2 + 4*n1*n6^2 - 
      8*n3*n6^2 - 8*n4*n6^2 - 4*n6^3)*j[p4a, -1 + n1, 1, n3, n4, 0, 1 + n6, 
      0, 1, 1, 2, 1, 0, 0, 1])/(4*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((-32*n6 + 20*d*n6 - 3*d^2*n6 + 8*n1*n6 - 2*d*n1*n6 - 16*n3*n6 + 
      4*d*n3*n6 - 16*n4*n6 + 4*d*n4*n6 - 24*n6^2 + 8*d*n6^2 + 4*n1*n6^2 - 
      8*n3*n6^2 - 8*n4*n6^2 - 4*n6^3)*j[p4a, -1 + n1, 1, n3, n4, 0, 1 + n6, 
      0, 1, 1, 2, 1, 0, 1, 1])/(4*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((-64*n6 + 72*d*n6 - 26*d^2*n6 + 3*d^3*n6 - 48*n1*n6 + 28*d*n1*n6 - 
      4*d^2*n1*n6 + 16*n1^2*n6 - 4*d*n1^2*n6 - 32*n3*n6 + 24*d*n3*n6 - 
      4*d^2*n3*n6 - 32*n1*n3*n6 + 8*d*n1*n3*n6 - 32*n4*n6 + 24*d*n4*n6 - 
      4*d^2*n4*n6 - 32*n1*n4*n6 + 8*d*n1*n4*n6 + 16*n6^2 - 2*d^2*n6^2 - 
      56*n1*n6^2 + 16*d*n1*n6^2 + 8*n1^2*n6^2 + 16*n3*n6^2 - 16*n1*n3*n6^2 + 
      16*n4*n6^2 - 16*n1*n4*n6^2 + 40*n6^3 - 12*d*n6^3 - 16*n1*n6^3 + 
      16*n3*n6^3 + 16*n4*n6^3 + 8*n6^4)*j[p4a, -1 + n1, 1, n3, n4, 0, 1 + n6, 
      0, 1, 2, 1, 1, 0, 1, 1])/(4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   ((1 + n6)*(32*n6 - 20*d*n6 + 3*d^2*n6 - 8*n1*n6 + 2*d*n1*n6 + 16*n3*n6 - 
      4*d*n3*n6 + 16*n4*n6 - 4*d*n4*n6 + 24*n6^2 - 8*d*n6^2 - 4*n1*n6^2 + 
      8*n3*n6^2 + 8*n4*n6^2 + 4*n6^3)*j[p4a, -1 + n1, 1, n3, n4, 0, 2 + n6, 
      -1, 1, 1, 1, 1, 0, 1, 1])/(4*(3 - d + n4 + n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((1 + n6)*(32*n6 - 20*d*n6 + 3*d^2*n6 - 8*n1*n6 + 2*d*n1*n6 + 16*n3*n6 - 
      4*d*n3*n6 + 16*n4*n6 - 4*d*n4*n6 + 24*n6^2 - 8*d*n6^2 - 4*n1*n6^2 + 
      8*n3*n6^2 + 8*n4*n6^2 + 4*n6^3)*j[p4a, -1 + n1, 1, n3, n4, 0, 2 + n6, 
      0, 0, 1, 1, 1, 0, 1, 1])/(4*(3 - d + n4 + n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   ((1 + n6)*(32*n6 - 20*d*n6 + 3*d^2*n6 - 8*n1*n6 + 2*d*n1*n6 + 16*n3*n6 - 
      4*d*n3*n6 + 16*n4*n6 - 4*d*n4*n6 + 24*n6^2 - 8*d*n6^2 - 4*n1*n6^2 + 
      8*n3*n6^2 + 8*n4*n6^2 + 4*n6^3)*j[p4a, -1 + n1, 1, n3, n4, 0, 2 + n6, 
      0, 1, 1, 1, 1, -1, 1, 1])/(4*(3 - d + n4 + n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((1 + n6)*(32*n6 - 20*d*n6 + 3*d^2*n6 - 8*n1*n6 + 2*d*n1*n6 + 16*n3*n6 - 
      4*d*n3*n6 + 16*n4*n6 - 4*d*n4*n6 + 24*n6^2 - 8*d*n6^2 - 4*n1*n6^2 + 
      8*n3*n6^2 + 8*n4*n6^2 + 4*n6^3)*j[p4a, -1 + n1, 1, n3, n4, 0, 2 + n6, 
      0, 1, 1, 1, 1, 0, 0, 1])/(4*(3 - d + n4 + n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((1 + n6)*(32*n6 - 20*d*n6 + 3*d^2*n6 - 8*n1*n6 + 2*d*n1*n6 + 16*n3*n6 - 
      4*d*n3*n6 + 16*n4*n6 - 4*d*n4*n6 + 24*n6^2 - 8*d*n6^2 - 4*n1*n6^2 + 
      8*n3*n6^2 + 8*n4*n6^2 + 4*n6^3)*j[p4a, -1 + n1, 1, n3, n4, 0, 2 + n6, 
      0, 1, 1, 1, 1, 0, 1, 0])/(4*(3 - d + n4 + n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(1376 - 1440*d + 478*d^2 - 51*d^3 - 112*n1 - 4*d*n1 + 8*d^2*n1 - 
      112*n1^2 + 28*d*n1^2 + 864*n3 - 464*d*n3 + 62*d^2*n3 + 240*n1*n3 - 
      60*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 1872*n4 - 1256*d*n4 + 206*d^2*n4 + 
      48*n1*n4 - 36*d*n1*n4 - 48*n1^2*n4 + 608*n3*n4 - 176*d*n3*n4 + 
      96*n1*n3*n4 + 784*n4^2 - 256*d*n4^2 + 48*n1*n4^2 + 96*n3*n4^2 + 
      96*n4^3 + 656*n6 - 400*d*n6 + 58*d^2*n6 + 72*n1*n6 - 24*d*n1*n6 - 
      8*n1^2*n6 + 96*n3*n6 - 16*d*n3*n6 + 24*n1*n3*n6 - 16*n3^2*n6 + 
      576*n4*n6 - 184*d*n4*n6 + 24*n1*n4*n6 + 64*n3*n4*n6 + 128*n4^2*n6 + 
      40*n6^2 - 4*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 + 24*n4*n6^2 - 8*n6^3)*
     j[p4a, -1 + n1, 1, n3, 1 + n4, 0, n6, 0, 0, 1, 1, 2, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(328 - 342*d + 113*d^2 - 12*d^3 - 8*n1 - 14*d*n1 + 4*d^2*n1 - 
      32*n1^2 + 8*d*n1^2 + 192*n3 - 100*d*n3 + 13*d^2*n3 + 72*n1*n3 - 
      18*d*n1*n3 - 16*n3^2 + 4*d*n3^2 + 444*n4 - 298*d*n4 + 49*d^2*n4 + 
      24*n1*n4 - 12*d*n1*n4 - 12*n1^2*n4 + 136*n3*n4 - 40*d*n3*n4 + 
      24*n1*n3*n4 + 188*n4^2 - 62*d*n4^2 + 12*n1*n4^2 + 24*n3*n4^2 + 
      24*n4^3 + 136*n6 - 80*d*n6 + 11*d^2*n6 + 36*n1*n6 - 12*d*n1*n6 - 
      4*n1^2*n6 + 4*d*n3*n6 + 12*n1*n3*n6 - 8*n3^2*n6 + 120*n4*n6 - 
      38*d*n4*n6 + 12*n1*n4*n6 + 8*n3*n4*n6 + 28*n4^2*n6 - 4*n6^2 + 
      4*d*n6^2 + 8*n1*n6^2 - 12*n3*n6^2 - 4*n6^3)*j[p4a, -1 + n1, 1, n3, 
      1 + n4, 0, n6, 0, 0, 1, 2, 1, 0, 1, 1])/(2*(3 - d + n4 + n6)*
     (6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 
      6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 
      14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 
      2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 
      6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, -1 + n1, 1, n3, 1 + n4, 0, n6, 0, 1, 0, 1, 2, 0, 1, 1])/
    (2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, -1 + n1, 1, n3, 1 + n4, 0, n6, 0, 1, 1, 0, 2, 0, 1, 1])/
    ((3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   ((-3 + d - n1)*(-4 + d - 2*n4)*n4*(-10 + 3*d - 2*n1 - 2*n4 - 2*n6)*
     j[p4a, -1 + n1, 1, n3, 1 + n4, 0, n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    ((-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, -1 + n1, 1, n3, 1 + n4, 0, n6, 0, 1, 1, 1, 2, 0, 1, 0])/
    (2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(328 - 342*d + 113*d^2 - 12*d^3 - 8*n1 - 14*d*n1 + 4*d^2*n1 - 
      32*n1^2 + 8*d*n1^2 + 192*n3 - 100*d*n3 + 13*d^2*n3 + 72*n1*n3 - 
      18*d*n1*n3 - 16*n3^2 + 4*d*n3^2 + 444*n4 - 298*d*n4 + 49*d^2*n4 + 
      24*n1*n4 - 12*d*n1*n4 - 12*n1^2*n4 + 136*n3*n4 - 40*d*n3*n4 + 
      24*n1*n3*n4 + 188*n4^2 - 62*d*n4^2 + 12*n1*n4^2 + 24*n3*n4^2 + 
      24*n4^3 + 136*n6 - 80*d*n6 + 11*d^2*n6 + 36*n1*n6 - 12*d*n1*n6 - 
      4*n1^2*n6 + 4*d*n3*n6 + 12*n1*n3*n6 - 8*n3^2*n6 + 120*n4*n6 - 
      38*d*n4*n6 + 12*n1*n4*n6 + 8*n3*n4*n6 + 28*n4^2*n6 - 4*n6^2 + 
      4*d*n6^2 + 8*n1*n6^2 - 12*n3*n6^2 - 4*n6^3)*j[p4a, -1 + n1, 1, n3, 
      1 + n4, 0, n6, 0, 1, 1, 1, 2, 0, 1, 1])/(2*(3 - d + n4 + n6)*
     (6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 
      6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 
      14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 
      2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 
      6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, -1 + n1, 1, n3, 1 + n4, 0, n6, 0, 1, 1, 2, 1, 0, 0, 1])/
    (4*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(328 - 342*d + 113*d^2 - 12*d^3 - 8*n1 - 14*d*n1 + 4*d^2*n1 - 
      32*n1^2 + 8*d*n1^2 + 192*n3 - 100*d*n3 + 13*d^2*n3 + 72*n1*n3 - 
      18*d*n1*n3 - 16*n3^2 + 4*d*n3^2 + 444*n4 - 298*d*n4 + 49*d^2*n4 + 
      24*n1*n4 - 12*d*n1*n4 - 12*n1^2*n4 + 136*n3*n4 - 40*d*n3*n4 + 
      24*n1*n3*n4 + 188*n4^2 - 62*d*n4^2 + 12*n1*n4^2 + 24*n3*n4^2 + 
      24*n4^3 + 136*n6 - 80*d*n6 + 11*d^2*n6 + 36*n1*n6 - 12*d*n1*n6 - 
      4*n1^2*n6 + 4*d*n3*n6 + 12*n1*n3*n6 - 8*n3^2*n6 + 120*n4*n6 - 
      38*d*n4*n6 + 12*n1*n4*n6 + 8*n3*n4*n6 + 28*n4^2*n6 - 4*n6^2 + 
      4*d*n6^2 + 8*n1*n6^2 - 12*n3*n6^2 - 4*n6^3)*j[p4a, -1 + n1, 1, n3, 
      1 + n4, 0, n6, 0, 1, 1, 2, 1, 0, 1, 1])/(2*(3 - d + n4 + n6)*
     (6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 
      6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 
      14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 
      2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 
      6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, -1 + n1, 1, n3, 1 + n4, 0, n6, 0, 2, 1, 1, 1, 0, 0, 1])/
    (4*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(36*n6 - 21*d*n6 + 3*d^2*n6 + 8*n3*n6 - 2*d*n3*n6 + 22*n4*n6 - 
      6*d*n4*n6 + 2*n1*n4*n6 + 2*n4^2*n6 + 16*n6^2 - 5*d*n6^2 - 2*n1*n6^2 + 
      4*n3*n6^2 + 6*n4*n6^2 + 2*n6^3)*j[p4a, -1 + n1, 1, n3, 1 + n4, 0, 
      1 + n6, 0, 0, 1, 1, 1, 0, 1, 1])/(2*(3 - d + n4 + n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(4 - d + 2*n4)*n6*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, -1 + n1, 1, n3, 1 + n4, 0, 1 + n6, 0, 1, 1, 1, 1, 0, 0, 1])/
    (4*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(36*n6 - 21*d*n6 + 3*d^2*n6 + 8*n3*n6 - 2*d*n3*n6 + 22*n4*n6 - 
      6*d*n4*n6 + 2*n1*n4*n6 + 2*n4^2*n6 + 16*n6^2 - 5*d*n6^2 - 2*n1*n6^2 + 
      4*n3*n6^2 + 6*n4*n6^2 + 2*n6^3)*j[p4a, -1 + n1, 1, n3, 1 + n4, 0, 
      1 + n6, 0, 1, 1, 1, 1, 0, 1, 0])/(2*(3 - d + n4 + n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + (n4*(1 + n4)*(4 - d + 2*n4)*
     (10 - 3*d + 2*n1 + 2*n4 + 2*n6)*j[p4a, -1 + n1, 1, n3, 2 + n4, 0, n6, 0, 
      0, 1, 1, 1, 0, 1, 1])/(2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 
      3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 
      4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 24*n6 + 
      17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + (n4*(1 + n4)*(4 - d + 2*n4)*
     (10 - 3*d + 2*n1 + 2*n4 + 2*n6)*j[p4a, -1 + n1, 1, n3, 2 + n4, 0, n6, 0, 
      1, 1, 1, 1, 0, 1, 0])/(2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 
      3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 
      4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 24*n6 + 
      17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   (n3*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 8*d^2*n1 - 
      48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 112*n1*n3 - 
      28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 62*d^2*n4 + 
      48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 48*d*n3*n4 + 
      32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 32*n3*n4^2 + 
      32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 24*d*n1*n6 - 
      8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 16*n3^2*n6 + 
      128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 24*n6^2 + 
      12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, -1 + n1, 1, 1 + n3, n4, 0, n6, 0, 0, 1, 1, 2, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   (n3*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 8*d^2*n1 - 
      48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 112*n1*n3 - 
      28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 62*d^2*n4 + 
      48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 48*d*n3*n4 + 
      32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 32*n3*n4^2 + 
      32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 24*d*n1*n6 - 
      8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 16*n3^2*n6 + 
      128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 24*n6^2 + 
      12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, -1 + n1, 1, 1 + n3, n4, 0, n6, 0, 0, 1, 2, 1, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   (n3*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 8*d^2*n1 - 
      48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 112*n1*n3 - 
      28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 62*d^2*n4 + 
      48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 48*d*n3*n4 + 
      32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 32*n3*n4^2 + 
      32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 24*d*n1*n6 - 
      8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 16*n3^2*n6 + 
      128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 24*n6^2 + 
      12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, -1 + n1, 1, 1 + n3, n4, 0, n6, 0, 1, 1, 1, 2, 0, 0, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   (n3*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 8*d^2*n1 - 
      48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 112*n1*n3 - 
      28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 62*d^2*n4 + 
      48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 48*d*n3*n4 + 
      32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 32*n3*n4^2 + 
      32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 24*d*n1*n6 - 
      8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 16*n3^2*n6 + 
      128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 24*n6^2 + 
      12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, -1 + n1, 1, 1 + n3, n4, 0, n6, 0, 1, 1, 1, 2, 0, 1, 1])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   (n3*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 8*d^2*n1 - 
      48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 112*n1*n3 - 
      28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 62*d^2*n4 + 
      48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 48*d*n3*n4 + 
      32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 32*n3*n4^2 + 
      32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 24*d*n1*n6 - 
      8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 16*n3^2*n6 + 
      128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 24*n6^2 + 
      12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, -1 + n1, 1, 1 + n3, n4, 0, n6, 0, 1, 1, 2, 1, 0, 0, 1])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   (n3*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 8*d^2*n1 - 
      48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 112*n1*n3 - 
      28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 62*d^2*n4 + 
      48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 48*d*n3*n4 + 
      32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 32*n3*n4^2 + 
      32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 24*d*n1*n6 - 
      8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 16*n3^2*n6 + 
      128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 24*n6^2 + 
      12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, -1 + n1, 1, 1 + n3, n4, 0, n6, 0, 1, 1, 2, 1, 0, 1, 1])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   (n3*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 8*d^2*n1 - 
      48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 112*n1*n3 - 
      28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 62*d^2*n4 + 
      48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 48*d*n3*n4 + 
      32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 32*n3*n4^2 + 
      32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 24*d*n1*n6 - 
      8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 16*n3^2*n6 + 
      128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 24*n6^2 + 
      12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, -1 + n1, 1, 1 + n3, n4, 0, n6, 0, 2, 1, 1, 1, 0, 0, 1])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   (n3*(-32*n6 + 20*d*n6 - 3*d^2*n6 + 8*n1*n6 - 2*d*n1*n6 - 16*n3*n6 + 
      4*d*n3*n6 - 16*n4*n6 + 4*d*n4*n6 - 24*n6^2 + 8*d*n6^2 + 4*n1*n6^2 - 
      8*n3*n6^2 - 8*n4*n6^2 - 4*n6^3)*j[p4a, -1 + n1, 1, 1 + n3, n4, 0, 
      1 + n6, 0, 0, 1, 1, 1, 0, 1, 1])/(2*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n3*(-64*n6 + 72*d*n6 - 26*d^2*n6 + 3*d^3*n6 + 16*n1*n6 - 12*d*n1*n6 + 
      2*d^2*n1*n6 - 64*n3*n6 + 44*d*n3*n6 - 7*d^2*n3*n6 + 8*n1*n3*n6 - 
      2*d*n1*n3*n6 - 16*n3^2*n6 + 4*d*n3^2*n6 - 64*n4*n6 + 44*d*n4*n6 - 
      7*d^2*n4*n6 + 8*n1*n4*n6 - 2*d*n1*n4*n6 - 32*n3*n4*n6 + 8*d*n3*n4*n6 - 
      16*n4^2*n6 + 4*d*n4^2*n6 - 48*n6^2 + 40*d*n6^2 - 8*d^2*n6^2 + 
      8*n1*n6^2 - 4*d*n1*n6^2 - 40*n3*n6^2 + 16*d*n3*n6^2 + 4*n1*n3*n6^2 - 
      8*n3^2*n6^2 - 40*n4*n6^2 + 16*d*n4*n6^2 + 4*n1*n4*n6^2 - 
      16*n3*n4*n6^2 - 8*n4^2*n6^2 - 8*n6^3 + 4*d*n6^3 - 4*n3*n6^3 - 
      4*n4*n6^3)*j[p4a, -1 + n1, 1, 1 + n3, n4, 0, 1 + n6, 0, 1, 1, 1, 1, 0, 
      0, 1])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   (n3*n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, -1 + n1, 1, 1 + n3, 1 + n4, 0, n6, 0, 0, 1, 1, 1, 0, 1, 1])/
    ((3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n3*n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, -1 + n1, 1, 1 + n3, 1 + n4, 0, n6, 0, 1, 1, 1, 1, 0, 0, 1])/
    (2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   ((416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 8*d^2*n1 - 48*n1^2 + 
      12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 112*n1*n3 - 28*d*n1*n3 - 
      32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 62*d^2*n4 + 48*n1*n4 - 
      20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 48*d*n3*n4 + 32*n1*n3*n4 + 
      240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 32*n3*n4^2 + 32*n4^3 + 144*n6 - 
      80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 24*d*n1*n6 - 8*n1^2*n6 - 32*n3*n6 + 
      16*d*n3*n6 + 24*n1*n3*n6 - 16*n3^2*n6 + 128*n4*n6 - 40*d*n4*n6 + 
      24*n1*n4*n6 + 32*n4^2*n6 - 24*n6^2 + 12*d*n6^2 + 16*n1*n6^2 - 
      24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*j[p4a, -1 + n1, 2, n3, n4, 0, n6, 0, 
      0, 1, 1, 2, 0, 1, 1])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   ((-416 + 432*d - 142*d^2 + 15*d^3 - 16*n1 + 36*d*n1 - 8*d^2*n1 + 48*n1^2 - 
      12*d*n1^2 - 224*n3 + 112*d*n3 - 14*d^2*n3 - 112*n1*n3 + 28*d*n1*n3 + 
      32*n3^2 - 8*d*n3^2 - 560*n4 + 376*d*n4 - 62*d^2*n4 - 48*n1*n4 + 
      20*d*n1*n4 + 16*n1^2*n4 - 160*n3*n4 + 48*d*n3*n4 - 32*n1*n3*n4 - 
      240*n4^2 + 80*d*n4^2 - 16*n1*n4^2 - 32*n3*n4^2 - 32*n4^3 - 144*n6 + 
      80*d*n6 - 10*d^2*n6 - 72*n1*n6 + 24*d*n1*n6 + 8*n1^2*n6 + 32*n3*n6 - 
      16*d*n3*n6 - 24*n1*n3*n6 + 16*n3^2*n6 - 128*n4*n6 + 40*d*n4*n6 - 
      24*n1*n4*n6 - 32*n4^2*n6 + 24*n6^2 - 12*d*n6^2 - 16*n1*n6^2 + 
      24*n3*n6^2 + 8*n4*n6^2 + 8*n6^3)*j[p4a, -1 + n1, 2, n3, n4, 0, n6, 0, 
      1, 1, 0, 2, 0, 1, 1])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   ((64*n6 - 72*d*n6 + 26*d^2*n6 - 3*d^3*n6 - 16*n1*n6 + 12*d*n1*n6 - 
      2*d^2*n1*n6 + 64*n3*n6 - 44*d*n3*n6 + 7*d^2*n3*n6 - 8*n1*n3*n6 + 
      2*d*n1*n3*n6 + 16*n3^2*n6 - 4*d*n3^2*n6 + 64*n4*n6 - 44*d*n4*n6 + 
      7*d^2*n4*n6 - 8*n1*n4*n6 + 2*d*n1*n4*n6 + 32*n3*n4*n6 - 8*d*n3*n4*n6 + 
      16*n4^2*n6 - 4*d*n4^2*n6 + 48*n6^2 - 40*d*n6^2 + 8*d^2*n6^2 - 
      8*n1*n6^2 + 4*d*n1*n6^2 + 40*n3*n6^2 - 16*d*n3*n6^2 - 4*n1*n3*n6^2 + 
      8*n3^2*n6^2 + 40*n4*n6^2 - 16*d*n4*n6^2 - 4*n1*n4*n6^2 + 
      16*n3*n4*n6^2 + 8*n4^2*n6^2 + 8*n6^3 - 4*d*n6^3 + 4*n3*n6^3 + 
      4*n4*n6^3)*j[p4a, -1 + n1, 2, n3, n4, 0, 1 + n6, 0, 0, 1, 1, 1, 0, 1, 
      1])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 8*d^2*n1 - 
      48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 112*n1*n3 - 
      28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 62*d^2*n4 + 
      48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 48*d*n3*n4 + 
      32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 32*n3*n4^2 + 
      32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 24*d*n1*n6 - 
      8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 16*n3^2*n6 + 
      128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 24*n6^2 + 
      12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, -1 + n1, 2, n3, 1 + n4, 0, n6, 0, 0, 1, 1, 1, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, -1 + n1, 2, n3, 1 + n4, 0, n6, 0, 1, 1, 1, 1, 0, 0, 1])/
    (2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n3*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 8*d^2*n1 - 
      48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 112*n1*n3 - 
      28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 62*d^2*n4 + 
      48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 48*d*n3*n4 + 
      32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 32*n3*n4^2 + 
      32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 24*d*n1*n6 - 
      8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 16*n3^2*n6 + 
      128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 24*n6^2 + 
      12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, -1 + n1, 2, 1 + n3, n4, 0, n6, 0, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((32*n6 - 20*d*n6 + 3*d^2*n6 - 8*n1*n6 + 2*d*n1*n6 + 16*n3*n6 - 
      4*d*n3*n6 + 16*n4*n6 - 4*d*n4*n6 + 24*n6^2 - 8*d*n6^2 - 4*n1*n6^2 + 
      8*n3*n6^2 + 8*n4*n6^2 + 4*n6^3)*j[p4a, n1, 0, -1 + n3, n4, 0, 1 + n6, 
      0, 1, 1, 2, 1, 0, 1, 1])/(4*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   ((1 + n6)*(64*n6 - 72*d*n6 + 26*d^2*n6 - 3*d^3*n6 - 80*n1*n6 + 
      52*d*n1*n6 - 8*d^2*n1*n6 + 16*n1^2*n6 - 4*d*n1^2*n6 + 96*n3*n6 - 
      64*d*n3*n6 + 10*d^2*n3*n6 - 48*n1*n3*n6 + 12*d*n1*n3*n6 + 32*n3^2*n6 - 
      8*d*n3^2*n6 + 96*n4*n6 - 64*d*n4*n6 + 10*d^2*n4*n6 - 48*n1*n4*n6 + 
      12*d*n1*n4*n6 + 64*n3*n4*n6 - 16*d*n3*n4*n6 + 32*n4^2*n6 - 
      8*d*n4^2*n6 + 112*n6^2 - 80*d*n6^2 + 14*d^2*n6^2 - 72*n1*n6^2 + 
      24*d*n1*n6^2 + 8*n1^2*n6^2 + 96*n3*n6^2 - 32*d*n3*n6^2 - 
      24*n1*n3*n6^2 + 16*n3^2*n6^2 + 96*n4*n6^2 - 32*d*n4*n6^2 - 
      24*n1*n4*n6^2 + 32*n3*n4*n6^2 + 16*n4^2*n6^2 + 56*n6^3 - 20*d*n6^3 - 
      16*n1*n6^3 + 24*n3*n6^3 + 24*n4*n6^3 + 8*n6^4)*
     j[p4a, n1, 0, -1 + n3, n4, 0, 2 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 0, -1 + n3, 1 + n4, 0, n6, 0, 1, 1, 2, 1, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(4 - d + 2*n4)*n6*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 0, -1 + n3, 1 + n4, 0, 1 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(1 + n4)*(2 - d - n1 + 2*n3 + n4 + n6)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 0, -1 + n3, 2 + n4, 0, n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    ((3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   ((1 + n6)*(-64*n6 + 72*d*n6 - 26*d^2*n6 + 3*d^3*n6 + 16*n1*n6 - 
      12*d*n1*n6 + 2*d^2*n1*n6 - 64*n3*n6 + 44*d*n3*n6 - 7*d^2*n3*n6 + 
      8*n1*n3*n6 - 2*d*n1*n3*n6 - 16*n3^2*n6 + 4*d*n3^2*n6 - 64*n4*n6 + 
      44*d*n4*n6 - 7*d^2*n4*n6 + 8*n1*n4*n6 - 2*d*n1*n4*n6 - 32*n3*n4*n6 + 
      8*d*n3*n4*n6 - 16*n4^2*n6 + 4*d*n4^2*n6 - 48*n6^2 + 40*d*n6^2 - 
      8*d^2*n6^2 + 8*n1*n6^2 - 4*d*n1*n6^2 - 40*n3*n6^2 + 16*d*n3*n6^2 + 
      4*n1*n3*n6^2 - 8*n3^2*n6^2 - 40*n4*n6^2 + 16*d*n4*n6^2 + 4*n1*n4*n6^2 - 
      16*n3*n4*n6^2 - 8*n4^2*n6^2 - 8*n6^3 + 4*d*n6^3 - 4*n3*n6^3 - 
      4*n4*n6^3)*j[p4a, n1, 0, n3, -1 + n4, 0, 2 + n6, 0, 1, 1, 1, 1, 0, 1, 
      1])/(2*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((1 + n6)*(64*n6 - 72*d*n6 + 26*d^2*n6 - 3*d^3*n6 - 80*n1*n6 + 
      52*d*n1*n6 - 8*d^2*n1*n6 + 16*n1^2*n6 - 4*d*n1^2*n6 + 96*n3*n6 - 
      64*d*n3*n6 + 10*d^2*n3*n6 - 48*n1*n3*n6 + 12*d*n1*n3*n6 + 32*n3^2*n6 - 
      8*d*n3^2*n6 + 96*n4*n6 - 64*d*n4*n6 + 10*d^2*n4*n6 - 48*n1*n4*n6 + 
      12*d*n1*n4*n6 + 64*n3*n4*n6 - 16*d*n3*n4*n6 + 32*n4^2*n6 - 
      8*d*n4^2*n6 + 112*n6^2 - 80*d*n6^2 + 14*d^2*n6^2 - 72*n1*n6^2 + 
      24*d*n1*n6^2 + 8*n1^2*n6^2 + 96*n3*n6^2 - 32*d*n3*n6^2 - 
      24*n1*n3*n6^2 + 16*n3^2*n6^2 + 96*n4*n6^2 - 32*d*n4*n6^2 - 
      24*n1*n4*n6^2 + 32*n3*n4*n6^2 + 16*n4^2*n6^2 + 56*n6^3 - 20*d*n6^3 - 
      16*n1*n6^3 + 24*n3*n6^3 + 24*n4*n6^3 + 8*n6^4)*
     j[p4a, n1, 0, n3, n4, -1, 2 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + ((-5 + 2*d - 2*n1 - n4)*
     (-416 + 432*d - 142*d^2 + 15*d^3 - 16*n1 + 36*d*n1 - 8*d^2*n1 + 
      48*n1^2 - 12*d*n1^2 - 224*n3 + 112*d*n3 - 14*d^2*n3 - 112*n1*n3 + 
      28*d*n1*n3 + 32*n3^2 - 8*d*n3^2 - 560*n4 + 376*d*n4 - 62*d^2*n4 - 
      48*n1*n4 + 20*d*n1*n4 + 16*n1^2*n4 - 160*n3*n4 + 48*d*n3*n4 - 
      32*n1*n3*n4 - 240*n4^2 + 80*d*n4^2 - 16*n1*n4^2 - 32*n3*n4^2 - 
      32*n4^3 - 144*n6 + 80*d*n6 - 10*d^2*n6 - 72*n1*n6 + 24*d*n1*n6 + 
      8*n1^2*n6 + 32*n3*n6 - 16*d*n3*n6 - 24*n1*n3*n6 + 16*n3^2*n6 - 
      128*n4*n6 + 40*d*n4*n6 - 24*n1*n4*n6 - 32*n4^2*n6 + 24*n6^2 - 
      12*d*n6^2 - 16*n1*n6^2 + 24*n3*n6^2 + 8*n4*n6^2 + 8*n6^3)*
     j[p4a, n1, 0, n3, n4, 0, n6, 0, 1, 1, 2, 1, 0, 1, 1])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((-416 + 432*d - 142*d^2 + 15*d^3 - 16*n1 + 36*d*n1 - 8*d^2*n1 + 48*n1^2 - 
      12*d*n1^2 - 224*n3 + 112*d*n3 - 14*d^2*n3 - 112*n1*n3 + 28*d*n1*n3 + 
      32*n3^2 - 8*d*n3^2 - 560*n4 + 376*d*n4 - 62*d^2*n4 - 48*n1*n4 + 
      20*d*n1*n4 + 16*n1^2*n4 - 160*n3*n4 + 48*d*n3*n4 - 32*n1*n3*n4 - 
      240*n4^2 + 80*d*n4^2 - 16*n1*n4^2 - 32*n3*n4^2 - 32*n4^3 - 144*n6 + 
      80*d*n6 - 10*d^2*n6 - 72*n1*n6 + 24*d*n1*n6 + 8*n1^2*n6 + 32*n3*n6 - 
      16*d*n3*n6 - 24*n1*n3*n6 + 16*n3^2*n6 - 128*n4*n6 + 40*d*n4*n6 - 
      24*n1*n4*n6 - 32*n4^2*n6 + 24*n6^2 - 12*d*n6^2 - 16*n1*n6^2 + 
      24*n3*n6^2 + 8*n4*n6^2 + 8*n6^3)*j[p4a, n1, 0, n3, n4, 0, n6, 0, 1, 1, 
      2, 1, 0, 2, 1])/(4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   ((64*n6 - 72*d*n6 + 26*d^2*n6 - 3*d^3*n6 - 80*n1*n6 + 52*d*n1*n6 - 
      8*d^2*n1*n6 + 16*n1^2*n6 - 4*d*n1^2*n6 + 96*n3*n6 - 64*d*n3*n6 + 
      10*d^2*n3*n6 - 48*n1*n3*n6 + 12*d*n1*n3*n6 + 32*n3^2*n6 - 8*d*n3^2*n6 + 
      96*n4*n6 - 64*d*n4*n6 + 10*d^2*n4*n6 - 48*n1*n4*n6 + 12*d*n1*n4*n6 + 
      64*n3*n4*n6 - 16*d*n3*n4*n6 + 32*n4^2*n6 - 8*d*n4^2*n6 + 112*n6^2 - 
      80*d*n6^2 + 14*d^2*n6^2 - 72*n1*n6^2 + 24*d*n1*n6^2 + 8*n1^2*n6^2 + 
      96*n3*n6^2 - 32*d*n3*n6^2 - 24*n1*n3*n6^2 + 16*n3^2*n6^2 + 96*n4*n6^2 - 
      32*d*n4*n6^2 - 24*n1*n4*n6^2 + 32*n3*n4*n6^2 + 16*n4^2*n6^2 + 56*n6^3 - 
      20*d*n6^3 - 16*n1*n6^3 + 24*n3*n6^3 + 24*n4*n6^3 + 8*n6^4)*
     j[p4a, n1, 0, n3, n4, 0, 1 + n6, -1, 1, 1, 2, 1, 0, 1, 1])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((2688*n6 - 3640*d*n6 + 1794*d^2*n6 - 383*d^3*n6 + 30*d^4*n6 + 
      1232*n1*n6 - 1532*d*n1*n6 + 574*d^2*n1*n6 - 67*d^3*n1*n6 - 
      352*n1^2*n6 + 152*d*n1^2*n6 - 16*d^2*n1^2*n6 - 112*n1^3*n6 + 
      28*d*n1^3*n6 + 896*n3*n6 - 520*d*n3*n6 + 66*d^2*n3*n6 + 2*d^3*n3*n6 + 
      1648*n1*n3*n6 - 964*d*n1*n3*n6 + 138*d^2*n1*n3*n6 + 240*n1^2*n3*n6 - 
      60*d*n1^2*n3*n6 - 736*n3^2*n6 + 480*d*n3^2*n6 - 74*d^2*n3^2*n6 + 
      16*n1*n3^2*n6 - 4*d*n1*n3^2*n6 - 96*n3^3*n6 + 24*d*n3^3*n6 + 
      4672*n4*n6 - 4768*d*n4*n6 + 1612*d^2*n4*n6 - 181*d^3*n4*n6 + 
      1696*n1*n4*n6 - 1224*d*n1*n4*n6 + 214*d^2*n1*n4*n6 - 96*n1^2*n4*n6 + 
      24*d*n1^2*n4*n6 - 32*n1^3*n4*n6 + 1328*n3*n4*n6 - 840*d*n3*n4*n6 + 
      138*d^2*n3*n4*n6 + 848*n1*n3*n4*n6 - 268*d*n1*n3*n4*n6 + 
      48*n1^2*n3*n4*n6 - 96*n3^2*n4*n6 + 16*d*n3^2*n4*n6 + 32*n1*n3^2*n4*n6 + 
      2880*n4^2*n6 - 1992*d*n4^2*n6 + 344*d^2*n4^2*n6 + 704*n1*n4^2*n6 - 
      248*d*n1*n4^2*n6 + 688*n3*n4^2*n6 - 240*d*n3*n4^2*n6 + 
      144*n1*n3*n4^2*n6 + 32*n3^2*n4^2*n6 + 736*n4^3*n6 - 256*d*n4^3*n6 + 
      96*n1*n4^3*n6 + 96*n3*n4^3*n6 + 64*n4^4*n6 + 192*n6^2 + 156*d*n6^2 - 
      176*d^2*n6^2 + 34*d^3*n6^2 + 1160*n1*n6^2 - 788*d*n1*n6^2 + 
      130*d^2*n1*n6^2 + 112*n1^2*n6^2 - 40*d*n1^2*n6^2 - 24*n1^3*n6^2 - 
      1536*n3*n6^2 + 1216*d*n3*n6^2 - 232*d^2*n3*n6^2 + 328*n1*n3*n6^2 - 
      96*d*n1*n3*n6^2 + 72*n1^2*n3*n6^2 - 640*n3^2*n6^2 + 224*d*n3^2*n6^2 - 
      24*n1*n3^2*n6^2 - 48*n3^3*n6^2 + 376*n4*n6^2 - 116*d*n4*n6^2 - 
      2*d^2*n4*n6^2 + 688*n1*n4*n6^2 - 228*d*n1*n4*n6^2 + 56*n1^2*n4*n6^2 - 
      720*n3*n4*n6^2 + 264*d*n3*n4*n6^2 + 56*n1*n3*n4*n6^2 - 
      128*n3^2*n4*n6^2 + 264*n4^2*n6^2 - 84*d*n4^2*n6^2 + 104*n1*n4^2*n6^2 - 
      48*n3*n4^2*n6^2 + 48*n4^3*n6^2 - 648*n6^3 + 556*d*n6^3 - 114*d^2*n6^3 + 
      160*n1*n6^3 - 52*d*n1*n6^3 + 40*n1^2*n6^3 - 632*n3*n6^3 + 
      240*d*n3*n6^3 - 24*n1*n3*n6^3 - 88*n3^2*n6^3 - 416*n4*n6^3 + 
      168*d*n4*n6^3 + 24*n1*n4*n6^3 - 168*n3*n4*n6^3 - 56*n4^2*n6^3 - 
      160*n6^4 + 64*d*n6^4 - 8*n1*n6^4 - 48*n3*n6^4 - 48*n4*n6^4 - 8*n6^5)*
     j[p4a, n1, 0, n3, n4, 0, 1 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((4*n6 - d*n6 + 8*n1*n6 - 2*d*n1*n6 - 8*n3*n6 + 2*d*n3*n6 + 6*n4*n6 - 
      2*d*n4*n6 + 2*n1*n4*n6 + 2*n4^2*n6 - 8*n6^2 + 3*d*n6^2 + 2*n1*n6^2 - 
      4*n3*n6^2 - 2*n4*n6^2 - 2*n6^3)*j[p4a, n1, 0, n3, n4, 0, 1 + n6, 0, 1, 
      1, 1, 1, 0, 1, 2])/(2*(-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 
      6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 
      14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 
      2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 
      6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   ((-416*n6 + 432*d*n6 - 142*d^2*n6 + 15*d^3*n6 - 16*n1*n6 + 36*d*n1*n6 - 
      8*d^2*n1*n6 + 48*n1^2*n6 - 12*d*n1^2*n6 - 224*n3*n6 + 112*d*n3*n6 - 
      14*d^2*n3*n6 - 112*n1*n3*n6 + 28*d*n1*n3*n6 + 32*n3^2*n6 - 
      8*d*n3^2*n6 - 560*n4*n6 + 376*d*n4*n6 - 62*d^2*n4*n6 - 48*n1*n4*n6 + 
      20*d*n1*n4*n6 + 16*n1^2*n4*n6 - 160*n3*n4*n6 + 48*d*n3*n4*n6 - 
      32*n1*n3*n4*n6 - 240*n4^2*n6 + 80*d*n4^2*n6 - 16*n1*n4^2*n6 - 
      32*n3*n4^2*n6 - 32*n4^3*n6 - 144*n6^2 + 80*d*n6^2 - 10*d^2*n6^2 - 
      72*n1*n6^2 + 24*d*n1*n6^2 + 8*n1^2*n6^2 + 32*n3*n6^2 - 16*d*n3*n6^2 - 
      24*n1*n3*n6^2 + 16*n3^2*n6^2 - 128*n4*n6^2 + 40*d*n4*n6^2 - 
      24*n1*n4*n6^2 - 32*n4^2*n6^2 + 24*n6^3 - 12*d*n6^3 - 16*n1*n6^3 + 
      24*n3*n6^3 + 8*n4*n6^3 + 8*n6^4)*j[p4a, n1, 0, n3, n4, 0, 1 + n6, 0, 1, 
      1, 1, 1, 0, 2, 1])/(4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   ((32*n6 - 20*d*n6 + 3*d^2*n6 - 8*n1*n6 + 2*d*n1*n6 + 16*n3*n6 - 
      4*d*n3*n6 + 16*n4*n6 - 4*d*n4*n6 + 24*n6^2 - 8*d*n6^2 - 4*n1*n6^2 + 
      8*n3*n6^2 + 8*n4*n6^2 + 4*n6^3)*j[p4a, n1, 0, n3, n4, 0, 1 + n6, 0, 1, 
      1, 2, 1, -1, 1, 1])/(4*(-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 
      6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 
      14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 
      2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 
      6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   ((64*n6 - 72*d*n6 + 26*d^2*n6 - 3*d^3*n6 - 16*n1*n6 + 12*d*n1*n6 - 
      2*d^2*n1*n6 + 64*n3*n6 - 44*d*n3*n6 + 7*d^2*n3*n6 - 8*n1*n3*n6 + 
      2*d*n1*n3*n6 + 16*n3^2*n6 - 4*d*n3^2*n6 + 64*n4*n6 - 44*d*n4*n6 + 
      7*d^2*n4*n6 - 8*n1*n4*n6 + 2*d*n1*n4*n6 + 32*n3*n4*n6 - 8*d*n3*n4*n6 + 
      16*n4^2*n6 - 4*d*n4^2*n6 + 48*n6^2 - 40*d*n6^2 + 8*d^2*n6^2 - 
      8*n1*n6^2 + 4*d*n1*n6^2 + 40*n3*n6^2 - 16*d*n3*n6^2 - 4*n1*n3*n6^2 + 
      8*n3^2*n6^2 + 40*n4*n6^2 - 16*d*n4*n6^2 - 4*n1*n4*n6^2 + 
      16*n3*n4*n6^2 + 8*n4^2*n6^2 + 8*n6^3 - 4*d*n6^3 + 4*n3*n6^3 + 
      4*n4*n6^3)*j[p4a, n1, 0, n3, n4, 0, 1 + n6, 0, 1, 2, 1, 1, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((-64*n6 + 72*d*n6 - 26*d^2*n6 + 3*d^3*n6 + 80*n1*n6 - 52*d*n1*n6 + 
      8*d^2*n1*n6 - 16*n1^2*n6 + 4*d*n1^2*n6 - 96*n3*n6 + 64*d*n3*n6 - 
      10*d^2*n3*n6 + 48*n1*n3*n6 - 12*d*n1*n3*n6 - 32*n3^2*n6 + 8*d*n3^2*n6 - 
      96*n4*n6 + 64*d*n4*n6 - 10*d^2*n4*n6 + 48*n1*n4*n6 - 12*d*n1*n4*n6 - 
      64*n3*n4*n6 + 16*d*n3*n4*n6 - 32*n4^2*n6 + 8*d*n4^2*n6 - 112*n6^2 + 
      80*d*n6^2 - 14*d^2*n6^2 + 72*n1*n6^2 - 24*d*n1*n6^2 - 8*n1^2*n6^2 - 
      96*n3*n6^2 + 32*d*n3*n6^2 + 24*n1*n3*n6^2 - 16*n3^2*n6^2 - 96*n4*n6^2 + 
      32*d*n4*n6^2 + 24*n1*n4*n6^2 - 32*n3*n4*n6^2 - 16*n4^2*n6^2 - 56*n6^3 + 
      20*d*n6^3 + 16*n1*n6^3 - 24*n3*n6^3 - 24*n4*n6^3 - 8*n6^4)*
     j[p4a, n1, 0, n3, n4, 0, 1 + n6, 0, 2, 1, 1, 1, -1, 1, 1])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((1 + n6)*(64*n6 - 72*d*n6 + 26*d^2*n6 - 3*d^3*n6 - 80*n1*n6 + 
      52*d*n1*n6 - 8*d^2*n1*n6 + 16*n1^2*n6 - 4*d*n1^2*n6 + 96*n3*n6 - 
      64*d*n3*n6 + 10*d^2*n3*n6 - 48*n1*n3*n6 + 12*d*n1*n3*n6 + 32*n3^2*n6 - 
      8*d*n3^2*n6 + 96*n4*n6 - 64*d*n4*n6 + 10*d^2*n4*n6 - 48*n1*n4*n6 + 
      12*d*n1*n4*n6 + 64*n3*n4*n6 - 16*d*n3*n4*n6 + 32*n4^2*n6 - 
      8*d*n4^2*n6 + 112*n6^2 - 80*d*n6^2 + 14*d^2*n6^2 - 72*n1*n6^2 + 
      24*d*n1*n6^2 + 8*n1^2*n6^2 + 96*n3*n6^2 - 32*d*n3*n6^2 - 
      24*n1*n3*n6^2 + 16*n3^2*n6^2 + 96*n4*n6^2 - 32*d*n4*n6^2 - 
      24*n1*n4*n6^2 + 32*n3*n4*n6^2 + 16*n4^2*n6^2 + 56*n6^3 - 20*d*n6^3 - 
      16*n1*n6^3 + 24*n3*n6^3 + 24*n4*n6^3 + 8*n6^4)*
     j[p4a, n1, 0, n3, n4, 0, 2 + n6, -1, 1, 1, 1, 1, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   ((1 + n6)*(64*n6 - 72*d*n6 + 26*d^2*n6 - 3*d^3*n6 - 80*n1*n6 + 
      52*d*n1*n6 - 8*d^2*n1*n6 + 16*n1^2*n6 - 4*d*n1^2*n6 + 96*n3*n6 - 
      64*d*n3*n6 + 10*d^2*n3*n6 - 48*n1*n3*n6 + 12*d*n1*n3*n6 + 32*n3^2*n6 - 
      8*d*n3^2*n6 + 96*n4*n6 - 64*d*n4*n6 + 10*d^2*n4*n6 - 48*n1*n4*n6 + 
      12*d*n1*n4*n6 + 64*n3*n4*n6 - 16*d*n3*n4*n6 + 32*n4^2*n6 - 
      8*d*n4^2*n6 + 112*n6^2 - 80*d*n6^2 + 14*d^2*n6^2 - 72*n1*n6^2 + 
      24*d*n1*n6^2 + 8*n1^2*n6^2 + 96*n3*n6^2 - 32*d*n3*n6^2 - 
      24*n1*n3*n6^2 + 16*n3^2*n6^2 + 96*n4*n6^2 - 32*d*n4*n6^2 - 
      24*n1*n4*n6^2 + 32*n3*n4*n6^2 + 16*n4^2*n6^2 + 56*n6^3 - 20*d*n6^3 - 
      16*n1*n6^3 + 24*n3*n6^3 + 24*n4*n6^3 + 8*n6^4)*
     j[p4a, n1, 0, n3, n4, 0, 2 + n6, 0, 1, 1, 1, 1, -1, 1, 1])/
    (4*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   ((1 + n6)*(-24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 
      12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 20*n4*n6 + 7*d*n4*n6 - 2*n1*n4*n6 - 
      4*n3*n4*n6 - 4*n4^2*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2 - 2*n4*n6^2)*
     j[p4a, n1, 0, n3, n4, 0, 2 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(-64*n6 + 72*d*n6 - 26*d^2*n6 + 3*d^3*n6 + 80*n1*n6 - 52*d*n1*n6 + 
      8*d^2*n1*n6 - 16*n1^2*n6 + 4*d*n1^2*n6 - 96*n3*n6 + 64*d*n3*n6 - 
      10*d^2*n3*n6 + 48*n1*n3*n6 - 12*d*n1*n3*n6 - 32*n3^2*n6 + 8*d*n3^2*n6 - 
      96*n4*n6 + 64*d*n4*n6 - 10*d^2*n4*n6 + 48*n1*n4*n6 - 12*d*n1*n4*n6 - 
      64*n3*n4*n6 + 16*d*n3*n4*n6 - 32*n4^2*n6 + 8*d*n4^2*n6 - 112*n6^2 + 
      80*d*n6^2 - 14*d^2*n6^2 + 72*n1*n6^2 - 24*d*n1*n6^2 - 8*n1^2*n6^2 - 
      96*n3*n6^2 + 32*d*n3*n6^2 + 24*n1*n3*n6^2 - 16*n3^2*n6^2 - 96*n4*n6^2 + 
      32*d*n4*n6^2 + 24*n1*n4*n6^2 - 32*n3*n4*n6^2 - 16*n4^2*n6^2 - 56*n6^3 + 
      20*d*n6^3 + 16*n1*n6^3 - 24*n3*n6^3 - 24*n4*n6^3 - 8*n6^4)*
     j[p4a, n1, 0, n3, 1 + n4, -1, 1 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 8*d^2*n1 - 
      48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 112*n1*n3 - 
      28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 62*d^2*n4 + 
      48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 48*d*n3*n4 + 
      32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 32*n3*n4^2 + 
      32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 24*d*n1*n6 - 
      8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 16*n3^2*n6 + 
      128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 24*n6^2 + 
      12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, n1, 0, n3, 1 + n4, 0, -1 + n6, 0, 1, 1, 2, 1, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(720 - 756*d + 252*d^2 - 27*d^3 + 144*n1 - 228*d*n1 + 84*d^2*n1 - 
      9*d^3*n1 - 80*n1^2 + 20*d*n1^2 - 16*n1^3 + 4*d*n1^3 + 240*d*n3 - 
      132*d^2*n3 + 18*d^3*n3 + 320*n1*n3 - 128*d*n1*n3 + 12*d^2*n1*n3 + 
      64*n1^2*n3 - 16*d*n1^2*n3 - 320*n3^2 + 176*d*n3^2 - 24*d^2*n3^2 - 
      64*n1*n3^2 + 16*d*n1*n3^2 + 984*n4 - 660*d*n4 + 108*d^2*n4 + 
      328*n1*n4 - 232*d*n1*n4 + 36*d^2*n1*n4 - 24*n1^2*n4 - 4*d*n1^2*n4 - 
      8*n1^3*n4 - 320*n3*n4 + 344*d*n3*n4 - 72*d^2*n3*n4 + 160*n1*n3*n4 - 
      24*d*n1*n3*n4 + 32*n1^2*n3*n4 - 224*n3^2*n4 + 64*d*n3^2*n4 - 
      32*n1*n3^2*n4 + 408*n4^2 - 132*d*n4^2 + 160*n1*n4^2 - 44*d*n1*n4^2 + 
      8*n1^2*n4^2 - 224*n3*n4^2 + 88*d*n3*n4^2 - 32*n3^2*n4^2 + 48*n4^3 + 
      16*n1*n4^3 - 32*n3*n4^3 - 944*n6 + 1164*d*n6 - 436*d^2*n6 + 51*d^3*n6 + 
      320*n1*n6 - 144*d*n1*n6 + 16*d^2*n1*n6 + 80*n1^2*n6 - 20*d*n1^2*n6 - 
      1088*n3*n6 + 664*d*n3*n6 - 98*d^2*n3*n6 - 112*n1*n3*n6 + 
      28*d*n1*n3*n6 - 96*n3^2*n6 + 24*d*n3^2*n6 - 1432*n4*n6 + 1080*d*n4*n6 - 
      194*d^2*n4*n6 + 128*n1*n4*n6 - 20*d*n1*n4*n6 + 40*n1^2*n4*n6 - 
      800*n3*n4*n6 + 248*d*n3*n4*n6 - 64*n1*n3*n4*n6 - 32*n3^2*n4*n6 - 
      640*n4^2*n6 + 228*d*n4^2*n6 - 16*n1*n4^2*n6 - 128*n3*n4^2*n6 - 
      80*n4^3*n6 - 688*n6^2 + 468*d*n6^2 - 76*d^2*n6^2 + 32*n1*n6^2 - 
      12*d*n1*n6^2 - 272*n3*n6^2 + 80*d*n3*n6^2 + 8*n1*n3*n6^2 - 
      16*n3^2*n6^2 - 616*n4*n6^2 + 212*d*n4*n6^2 + 16*n1*n4*n6^2 - 
      128*n3*n4*n6^2 - 136*n4^2*n6^2 - 96*n6^3 + 28*d*n6^3 - 8*n3*n6^3 - 
      48*n4*n6^3)*j[p4a, n1, 0, n3, 1 + n4, 0, n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 0, n3, 1 + n4, 0, n6, 0, 1, 1, 2, 1, -1, 1, 1])/
    (4*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 8*d^2*n1 - 
      48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 112*n1*n3 - 
      28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 62*d^2*n4 + 
      48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 48*d*n3*n4 + 
      32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 32*n3*n4^2 + 
      32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 24*d*n1*n6 - 
      8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 16*n3^2*n6 + 
      128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 24*n6^2 + 
      12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, n1, 0, n3, 1 + n4, 0, n6, 0, 1, 1, 2, 1, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 0, n3, 1 + n4, 0, n6, 0, 2, 1, 1, 1, -1, 1, 1])/
    (4*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(-64*n6 + 72*d*n6 - 26*d^2*n6 + 3*d^3*n6 + 80*n1*n6 - 52*d*n1*n6 + 
      8*d^2*n1*n6 - 16*n1^2*n6 + 4*d*n1^2*n6 - 96*n3*n6 + 64*d*n3*n6 - 
      10*d^2*n3*n6 + 48*n1*n3*n6 - 12*d*n1*n3*n6 - 32*n3^2*n6 + 8*d*n3^2*n6 - 
      96*n4*n6 + 64*d*n4*n6 - 10*d^2*n4*n6 + 48*n1*n4*n6 - 12*d*n1*n4*n6 - 
      64*n3*n4*n6 + 16*d*n3*n4*n6 - 32*n4^2*n6 + 8*d*n4^2*n6 - 112*n6^2 + 
      80*d*n6^2 - 14*d^2*n6^2 + 72*n1*n6^2 - 24*d*n1*n6^2 - 8*n1^2*n6^2 - 
      96*n3*n6^2 + 32*d*n3*n6^2 + 24*n1*n3*n6^2 - 16*n3^2*n6^2 - 96*n4*n6^2 + 
      32*d*n4*n6^2 + 24*n1*n4*n6^2 - 32*n3*n4*n6^2 - 16*n4^2*n6^2 - 56*n6^3 + 
      20*d*n6^3 + 16*n1*n6^3 - 24*n3*n6^3 - 24*n4*n6^3 - 8*n6^4)*
     j[p4a, n1, 0, n3, 1 + n4, 0, 1 + n6, -1, 1, 1, 1, 1, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(4 - d + 2*n4)*n6*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 0, n3, 1 + n4, 0, 1 + n6, 0, 1, 1, 1, 1, -1, 1, 1])/
    (4*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(448*n6 - 498*d*n6 + 179*d^2*n6 - 21*d^3*n6 - 84*n1*n6 + 42*d*n1*n6 - 
      5*d^2*n1*n6 - 32*n1^2*n6 + 12*d*n1^2*n6 + 4*n1^3*n6 + 392*n3*n6 - 
      260*d*n3*n6 + 43*d^2*n3*n6 + 32*n1*n3*n6 - 14*d*n1*n3*n6 - 
      16*n1^2*n3*n6 + 64*n3^2*n6 - 20*d*n3^2*n6 + 16*n1*n3^2*n6 + 608*n4*n6 - 
      434*d*n4*n6 + 76*d^2*n4*n6 - 28*n1*n4*n6 + 2*d*n1*n4*n6 - 
      20*n1^2*n4*n6 + 296*n3*n4*n6 - 96*d*n3*n4*n6 + 32*n1*n3*n4*n6 + 
      16*n3^2*n4*n6 + 256*n4^2*n6 - 88*d*n4^2*n6 + 8*n1*n4^2*n6 + 
      48*n3*n4^2*n6 + 32*n4^3*n6 + 260*n6^2 - 184*d*n6^2 + 32*d^2*n6^2 - 
      4*n1*n6^2 - 8*n1^2*n6^2 + 120*n3*n6^2 - 40*d*n3*n6^2 + 12*n1*n3*n6^2 + 
      8*n3^2*n6^2 + 228*n4*n6^2 - 80*d*n4*n6^2 + 4*n1*n4*n6^2 + 
      48*n3*n4*n6^2 + 48*n4^2*n6^2 + 36*n6^3 - 12*d*n6^3 + 4*n1*n6^3 + 
      4*n3*n6^3 + 16*n4*n6^3)*j[p4a, n1, 0, n3, 1 + n4, 0, 1 + n6, 0, 1, 1, 
      1, 1, 0, 1, 1])/(2*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 
      2*n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 
      20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 
      2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 
      12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 
      6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(1 + n4)*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 0, n3, 2 + n4, 0, -1 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n3*(416*n6 - 432*d*n6 + 142*d^2*n6 - 15*d^3*n6 + 16*n1*n6 - 36*d*n1*n6 + 
      8*d^2*n1*n6 - 48*n1^2*n6 + 12*d*n1^2*n6 + 224*n3*n6 - 112*d*n3*n6 + 
      14*d^2*n3*n6 + 112*n1*n3*n6 - 28*d*n1*n3*n6 - 32*n3^2*n6 + 
      8*d*n3^2*n6 + 560*n4*n6 - 376*d*n4*n6 + 62*d^2*n4*n6 + 48*n1*n4*n6 - 
      20*d*n1*n4*n6 - 16*n1^2*n4*n6 + 160*n3*n4*n6 - 48*d*n3*n4*n6 + 
      32*n1*n3*n4*n6 + 240*n4^2*n6 - 80*d*n4^2*n6 + 16*n1*n4^2*n6 + 
      32*n3*n4^2*n6 + 32*n4^3*n6 + 144*n6^2 - 80*d*n6^2 + 10*d^2*n6^2 + 
      72*n1*n6^2 - 24*d*n1*n6^2 - 8*n1^2*n6^2 - 32*n3*n6^2 + 16*d*n3*n6^2 + 
      24*n1*n3*n6^2 - 16*n3^2*n6^2 + 128*n4*n6^2 - 40*d*n4*n6^2 + 
      24*n1*n4*n6^2 + 32*n4^2*n6^2 - 24*n6^3 + 12*d*n6^3 + 16*n1*n6^3 - 
      24*n3*n6^3 - 8*n4*n6^3 - 8*n6^4)*j[p4a, n1, 0, 1 + n3, n4, -1, 1 + n6, 
      0, 1, 1, 1, 1, 0, 1, 1])/(4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n3*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 8*d^2*n1 - 
      48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 112*n1*n3 - 
      28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 62*d^2*n4 + 
      48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 48*d*n3*n4 + 
      32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 32*n3*n4^2 + 
      32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 24*d*n1*n6 - 
      8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 16*n3^2*n6 + 
      128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 24*n6^2 + 
      12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, n1, 0, 1 + n3, n4, 0, n6, -1, 1, 1, 2, 1, 0, 1, 1])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((-11*n3 + 4*d*n3 - 2*n3^2 - 2*n3*n4 - 2*n3*n6)*(-416 + 432*d - 142*d^2 + 
      15*d^3 - 16*n1 + 36*d*n1 - 8*d^2*n1 + 48*n1^2 - 12*d*n1^2 - 224*n3 + 
      112*d*n3 - 14*d^2*n3 - 112*n1*n3 + 28*d*n1*n3 + 32*n3^2 - 8*d*n3^2 - 
      560*n4 + 376*d*n4 - 62*d^2*n4 - 48*n1*n4 + 20*d*n1*n4 + 16*n1^2*n4 - 
      160*n3*n4 + 48*d*n3*n4 - 32*n1*n3*n4 - 240*n4^2 + 80*d*n4^2 - 
      16*n1*n4^2 - 32*n3*n4^2 - 32*n4^3 - 144*n6 + 80*d*n6 - 10*d^2*n6 - 
      72*n1*n6 + 24*d*n1*n6 + 8*n1^2*n6 + 32*n3*n6 - 16*d*n3*n6 - 
      24*n1*n3*n6 + 16*n3^2*n6 - 128*n4*n6 + 40*d*n4*n6 - 24*n1*n4*n6 - 
      32*n4^2*n6 + 24*n6^2 - 12*d*n6^2 - 16*n1*n6^2 + 24*n3*n6^2 + 
      8*n4*n6^2 + 8*n6^3)*j[p4a, n1, 0, 1 + n3, n4, 0, n6, 0, 1, 1, 1, 1, 0, 
      1, 1])/(4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   (n3*(-4 + d - 2*n4)*(-10 + 3*d - 2*n1 - 2*n4 - 2*n6)*
     j[p4a, n1, 0, 1 + n3, n4, 0, n6, 0, 1, 1, 1, 1, 0, 1, 2])/
    (2*(-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n3*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 8*d^2*n1 - 
      48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 112*n1*n3 - 
      28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 62*d^2*n4 + 
      48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 48*d*n3*n4 + 
      32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 32*n3*n4^2 + 
      32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 24*d*n1*n6 - 
      8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 16*n3^2*n6 + 
      128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 24*n6^2 + 
      12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, n1, 0, 1 + n3, n4, 0, n6, 0, 1, 1, 2, 1, -1, 1, 1])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n3*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 8*d^2*n1 - 
      48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 112*n1*n3 - 
      28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 62*d^2*n4 + 
      48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 48*d*n3*n4 + 
      32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 32*n3*n4^2 + 
      32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 24*d*n1*n6 - 
      8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 16*n3^2*n6 + 
      128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 24*n6^2 + 
      12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, n1, 0, 1 + n3, n4, 0, n6, 0, 1, 1, 2, 1, 0, 1, 1])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n3*(-4 + d - 2*n4)*(-10 + 3*d - 2*n1 - 2*n4 - 2*n6)*
     j[p4a, n1, 0, 1 + n3, n4, 0, n6, 0, 1, 2, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n3*(-4 + d - 2*n4)*(-10 + 3*d - 2*n1 - 2*n4 - 2*n6)*n6*
     j[p4a, n1, 0, 1 + n3, n4, 0, 1 + n6, -1, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n3*(-304*n6 + 324*d*n6 - 110*d^2*n6 + 12*d^3*n6 + 48*n1*n6 - 20*d*n1*n6 + 
      2*d^2*n1*n6 + 16*n1^2*n6 - 4*d*n1^2*n6 - 224*n3*n6 + 132*d*n3*n6 - 
      19*d^2*n3*n6 - 24*n1*n3*n6 + 6*d*n1*n3*n6 - 16*n3^2*n6 + 4*d*n3^2*n6 - 
      392*n4*n6 + 264*d*n4*n6 - 43*d^2*n4*n6 + 8*n1*n4*n6 + 2*d*n1*n4*n6 + 
      8*n1^2*n4*n6 - 144*n3*n4*n6 + 40*d*n3*n4*n6 - 16*n1*n3*n4*n6 - 
      152*n4^2*n6 + 48*d*n4^2*n6 - 8*n1*n4^2*n6 - 16*n3*n4^2*n6 - 
      16*n4^3*n6 - 176*n6^2 + 120*d*n6^2 - 20*d^2*n6^2 + 8*n1*n6^2 - 
      4*d*n1*n6^2 - 72*n3*n6^2 + 24*d*n3*n6^2 + 4*n1*n3*n6^2 - 8*n3^2*n6^2 - 
      152*n4*n6^2 + 52*d*n4*n6^2 + 4*n1*n4*n6^2 - 32*n3*n4*n6^2 - 
      32*n4^2*n6^2 - 24*n6^3 + 8*d*n6^3 - 4*n3*n6^3 - 12*n4*n6^3)*
     j[p4a, n1, 0, 1 + n3, n4, 0, 1 + n6, 0, 1, 1, 1, 1, -1, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n3*(112*n6 - 108*d*n6 + 32*d^2*n6 - 3*d^3*n6 + 64*n1*n6 - 56*d*n1*n6 + 
      10*d^2*n1*n6 - 32*n1^2*n6 + 8*d*n1^2*n6 + 20*d*n3*n6 - 5*d^2*n3*n6 + 
      88*n1*n3*n6 - 22*d*n1*n3*n6 - 48*n3^2*n6 + 12*d*n3^2*n6 + 168*n4*n6 - 
      112*d*n4*n6 + 19*d^2*n4*n6 + 56*n1*n4*n6 - 18*d*n1*n4*n6 - 
      8*n1^2*n4*n6 + 16*n3*n4*n6 - 8*d*n3*n4*n6 + 16*n1*n3*n4*n6 + 
      88*n4^2*n6 - 32*d*n4^2*n6 + 8*n1*n4^2*n6 + 16*n3*n4^2*n6 + 16*n4^3*n6 - 
      32*n6^2 + 40*d*n6^2 - 10*d^2*n6^2 + 80*n1*n6^2 - 28*d*n1*n6^2 - 
      8*n1^2*n6^2 - 104*n3*n6^2 + 40*d*n3*n6^2 + 28*n1*n3*n6^2 - 
      24*n3^2*n6^2 - 24*n4*n6^2 + 12*d*n4*n6^2 + 28*n1*n4*n6^2 - 
      32*n3*n4*n6^2 - 48*n6^3 + 20*d*n6^3 + 16*n1*n6^3 - 28*n3*n6^3 - 
      20*n4*n6^3 - 8*n6^4)*j[p4a, n1, 0, 1 + n3, n4, 0, 1 + n6, 0, 1, 1, 1, 
      1, 0, 1, 1])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n3*n4*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 8*d^2*n1 - 
      48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 112*n1*n3 - 
      28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 62*d^2*n4 + 
      48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 48*d*n3*n4 + 
      32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 32*n3*n4^2 + 
      32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 24*d*n1*n6 - 
      8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 16*n3^2*n6 + 
      128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 24*n6^2 + 
      12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, n1, 0, 1 + n3, 1 + n4, -1, n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   (n3*n4*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 8*d^2*n1 - 
      48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 112*n1*n3 - 
      28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 62*d^2*n4 + 
      48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 48*d*n3*n4 + 
      32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 32*n3*n4^2 + 
      32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 24*d*n1*n6 - 
      8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 16*n3^2*n6 + 
      128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 24*n6^2 + 
      12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, n1, 0, 1 + n3, 1 + n4, 0, n6, -1, 1, 1, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n3*n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 0, 1 + n3, 1 + n4, 0, n6, 0, 1, 1, 1, 1, -1, 1, 1])/
    (2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   ((n3 + n3^2)*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 
      8*d^2*n1 - 48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 
      112*n1*n3 - 28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 
      62*d^2*n4 + 48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 
      48*d*n3*n4 + 32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 
      32*n3*n4^2 + 32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 
      24*d*n1*n6 - 8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 
      16*n3^2*n6 + 128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 
      24*n6^2 + 12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, n1, 0, 2 + n3, n4, 0, n6, -1, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((1 + n6)*(64*n6 - 72*d*n6 + 26*d^2*n6 - 3*d^3*n6 - 80*n1*n6 + 
      52*d*n1*n6 - 8*d^2*n1*n6 + 16*n1^2*n6 - 4*d*n1^2*n6 + 96*n3*n6 - 
      64*d*n3*n6 + 10*d^2*n3*n6 - 48*n1*n3*n6 + 12*d*n1*n3*n6 + 32*n3^2*n6 - 
      8*d*n3^2*n6 + 96*n4*n6 - 64*d*n4*n6 + 10*d^2*n4*n6 - 48*n1*n4*n6 + 
      12*d*n1*n4*n6 + 64*n3*n4*n6 - 16*d*n3*n4*n6 + 32*n4^2*n6 - 
      8*d*n4^2*n6 + 112*n6^2 - 80*d*n6^2 + 14*d^2*n6^2 - 72*n1*n6^2 + 
      24*d*n1*n6^2 + 8*n1^2*n6^2 + 96*n3*n6^2 - 32*d*n3*n6^2 - 
      24*n1*n3*n6^2 + 16*n3^2*n6^2 + 96*n4*n6^2 - 32*d*n4*n6^2 - 
      24*n1*n4*n6^2 + 32*n3*n4*n6^2 + 16*n4^2*n6^2 + 56*n6^3 - 20*d*n6^3 - 
      16*n1*n6^3 + 24*n3*n6^3 + 24*n4*n6^3 + 8*n6^4)*
     j[p4a, n1, 1, -1 + n3, n4, -1, 2 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((-4 + d - 2*n4)*(-10 + 3*d - 2*n1 - 2*n4 - 2*n6)*n6*
     j[p4a, n1, 1, -1 + n3, n4, 0, 1 + n6, 0, 0, 1, 1, 2, 0, 1, 1])/
    (2*(-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   ((-88*n6 + 90*d*n6 - 29*d^2*n6 + 3*d^3*n6 - 24*n1*n6 + 22*d*n1*n6 - 
      4*d^2*n1*n6 + 16*n1^2*n6 - 4*d*n1^2*n6 - 32*n3*n6 + 12*d*n3*n6 - 
      d^2*n3*n6 - 40*n1*n3*n6 + 10*d*n1*n3*n6 + 16*n3^2*n6 - 4*d*n3^2*n6 - 
      116*n4*n6 + 78*d*n4*n6 - 13*d^2*n4*n6 - 24*n1*n4*n6 + 8*d*n1*n4*n6 + 
      4*n1^2*n4*n6 - 24*n3*n4*n6 + 8*d*n3*n4*n6 - 8*n1*n3*n4*n6 - 
      52*n4^2*n6 + 18*d*n4^2*n6 - 4*n1*n4^2*n6 - 8*n3*n4^2*n6 - 8*n4^3*n6 - 
      8*n6^2 + d^2*n6^2 - 36*n1*n6^2 + 12*d*n1*n6^2 + 4*n1^2*n6^2 + 
      32*n3*n6^2 - 12*d*n3*n6^2 - 12*n1*n3*n6^2 + 8*n3^2*n6^2 - 8*n4*n6^2 + 
      2*d*n4*n6^2 - 12*n1*n4*n6^2 + 8*n3*n4*n6^2 - 4*n4^2*n6^2 + 20*n6^3 - 
      8*d*n6^3 - 8*n1*n6^3 + 12*n3*n6^3 + 8*n4*n6^3 + 4*n6^4)*
     j[p4a, n1, 1, -1 + n3, n4, 0, 1 + n6, 0, 1, 0, 1, 1, 0, 1, 2])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - ((-10 + 3*d - 2*n1 - 2*n4 - 2*n6)*
     (-64*n6 + 72*d*n6 - 26*d^2*n6 + 3*d^3*n6 + 16*n1*n6 - 12*d*n1*n6 + 
      2*d^2*n1*n6 - 64*n3*n6 + 44*d*n3*n6 - 7*d^2*n3*n6 + 8*n1*n3*n6 - 
      2*d*n1*n3*n6 - 16*n3^2*n6 + 4*d*n3^2*n6 - 64*n4*n6 + 44*d*n4*n6 - 
      7*d^2*n4*n6 + 8*n1*n4*n6 - 2*d*n1*n4*n6 - 32*n3*n4*n6 + 8*d*n3*n4*n6 - 
      16*n4^2*n6 + 4*d*n4^2*n6 - 48*n6^2 + 40*d*n6^2 - 8*d^2*n6^2 + 
      8*n1*n6^2 - 4*d*n1*n6^2 - 40*n3*n6^2 + 16*d*n3*n6^2 + 4*n1*n3*n6^2 - 
      8*n3^2*n6^2 - 40*n4*n6^2 + 16*d*n4*n6^2 + 4*n1*n4*n6^2 - 
      16*n3*n4*n6^2 - 8*n4^2*n6^2 - 8*n6^3 + 4*d*n6^3 - 4*n3*n6^3 - 
      4*n4*n6^3)*j[p4a, n1, 1, -1 + n3, n4, 0, 1 + n6, 0, 1, 1, 1, 1, 0, 1, 
      1])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((-64*n6 + 72*d*n6 - 26*d^2*n6 + 3*d^3*n6 + 16*n1*n6 - 12*d*n1*n6 + 
      2*d^2*n1*n6 - 64*n3*n6 + 44*d*n3*n6 - 7*d^2*n3*n6 + 8*n1*n3*n6 - 
      2*d*n1*n3*n6 - 16*n3^2*n6 + 4*d*n3^2*n6 - 64*n4*n6 + 44*d*n4*n6 - 
      7*d^2*n4*n6 + 8*n1*n4*n6 - 2*d*n1*n4*n6 - 32*n3*n4*n6 + 8*d*n3*n4*n6 - 
      16*n4^2*n6 + 4*d*n4^2*n6 - 48*n6^2 + 40*d*n6^2 - 8*d^2*n6^2 + 
      8*n1*n6^2 - 4*d*n1*n6^2 - 40*n3*n6^2 + 16*d*n3*n6^2 + 4*n1*n3*n6^2 - 
      8*n3^2*n6^2 - 40*n4*n6^2 + 16*d*n4*n6^2 + 4*n1*n4*n6^2 - 
      16*n3*n4*n6^2 - 8*n4^2*n6^2 - 8*n6^3 + 4*d*n6^3 - 4*n3*n6^3 - 
      4*n4*n6^3)*j[p4a, n1, 1, -1 + n3, n4, 0, 1 + n6, 0, 1, 1, 2, 0, 0, 1, 
      1])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((1 + n6)*(-64*n6 + 72*d*n6 - 26*d^2*n6 + 3*d^3*n6 + 16*n1*n6 - 
      12*d*n1*n6 + 2*d^2*n1*n6 - 64*n3*n6 + 44*d*n3*n6 - 7*d^2*n3*n6 + 
      8*n1*n3*n6 - 2*d*n1*n3*n6 - 16*n3^2*n6 + 4*d*n3^2*n6 - 64*n4*n6 + 
      44*d*n4*n6 - 7*d^2*n4*n6 + 8*n1*n4*n6 - 2*d*n1*n4*n6 - 32*n3*n4*n6 + 
      8*d*n3*n4*n6 - 16*n4^2*n6 + 4*d*n4^2*n6 - 48*n6^2 + 40*d*n6^2 - 
      8*d^2*n6^2 + 8*n1*n6^2 - 4*d*n1*n6^2 - 40*n3*n6^2 + 16*d*n3*n6^2 + 
      4*n1*n3*n6^2 - 8*n3^2*n6^2 - 40*n4*n6^2 + 16*d*n4*n6^2 + 4*n1*n4*n6^2 - 
      16*n3*n4*n6^2 - 8*n4^2*n6^2 - 8*n6^3 + 4*d*n6^3 - 4*n3*n6^3 - 
      4*n4*n6^3)*j[p4a, n1, 1, -1 + n3, n4, 0, 2 + n6, 0, 0, 1, 1, 1, 0, 1, 
      1])/(2*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((-4 + d - 2*n4)*(-10 + 3*d - 2*n1 - 2*n4 - 2*n6)*(n6 + n6^2)*
     j[p4a, n1, 1, -1 + n3, n4, 0, 2 + n6, 0, 1, 0, 1, 1, 0, 1, 1])/
    (4*(-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   ((-4 + d - 2*n4)*(-10 + 3*d - 2*n1 - 2*n4 - 2*n6)*n6*(1 + n6)*
     j[p4a, n1, 1, -1 + n3, n4, 0, 2 + n6, 0, 1, 1, 0, 1, 0, 1, 1])/
    (4*(-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   ((1 + n6)*(-352*n6 + 420*d*n6 - 164*d^2*n6 + 21*d^3*n6 + 24*n1*n6 - 
      16*d*n1*n6 + 2*d^2*n1*n6 + 48*n1^2*n6 - 20*d*n1^2*n6 - 8*n1^3*n6 - 
      368*n3*n6 + 280*d*n3*n6 - 52*d^2*n3*n6 - 48*n1*n3*n6 + 24*d*n1*n3*n6 + 
      32*n1^2*n3*n6 - 96*n3^2*n6 + 32*d*n3^2*n6 - 32*n1*n3^2*n6 - 464*n4*n6 + 
      364*d*n4*n6 - 70*d^2*n4*n6 + 8*n1*n4*n6 + 24*n1^2*n4*n6 - 
      304*n3*n4*n6 + 112*d*n3*n4*n6 - 32*n1*n3*n4*n6 - 32*n3^2*n4*n6 - 
      208*n4^2*n6 + 80*d*n4^2*n6 - 64*n3*n4^2*n6 - 32*n4^3*n6 - 152*n6^2 + 
      128*d*n6^2 - 26*d^2*n6^2 - 64*n1*n6^2 + 24*d*n1*n6^2 + 24*n1^2*n6^2 - 
      80*n3*n6^2 + 32*d*n3*n6^2 - 48*n1*n3*n6^2 - 136*n4*n6^2 + 
      56*d*n4*n6^2 - 32*n1*n4*n6^2 - 32*n3*n4*n6^2 - 32*n4^2*n6^2 + 16*n6^3 - 
      4*d*n6^3 - 24*n1*n6^3 + 16*n3*n6^3 + 8*n4*n6^3 + 8*n6^4)*
     j[p4a, n1, 1, -1 + n3, n4, 0, 2 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(-64*n6 + 72*d*n6 - 26*d^2*n6 + 3*d^3*n6 + 80*n1*n6 - 52*d*n1*n6 + 
      8*d^2*n1*n6 - 16*n1^2*n6 + 4*d*n1^2*n6 - 96*n3*n6 + 64*d*n3*n6 - 
      10*d^2*n3*n6 + 48*n1*n3*n6 - 12*d*n1*n3*n6 - 32*n3^2*n6 + 8*d*n3^2*n6 - 
      96*n4*n6 + 64*d*n4*n6 - 10*d^2*n4*n6 + 48*n1*n4*n6 - 12*d*n1*n4*n6 - 
      64*n3*n4*n6 + 16*d*n3*n4*n6 - 32*n4^2*n6 + 8*d*n4^2*n6 - 112*n6^2 + 
      80*d*n6^2 - 14*d^2*n6^2 + 72*n1*n6^2 - 24*d*n1*n6^2 - 8*n1^2*n6^2 - 
      96*n3*n6^2 + 32*d*n3*n6^2 + 24*n1*n3*n6^2 - 16*n3^2*n6^2 - 96*n4*n6^2 + 
      32*d*n4*n6^2 + 24*n1*n4*n6^2 - 32*n3*n4*n6^2 - 16*n4^2*n6^2 - 56*n6^3 + 
      20*d*n6^3 + 16*n1*n6^3 - 24*n3*n6^3 - 24*n4*n6^3 - 8*n6^4)*
     j[p4a, n1, 1, -1 + n3, 1 + n4, -1, 1 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, -1 + n3, 1 + n4, 0, n6, 0, 0, 1, 1, 2, 0, 1, 1])/
    (2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(2 - d - n1 + 2*n3 + n4 + n6)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, -1 + n3, 1 + n4, 0, n6, 0, 1, 0, 1, 1, 0, 1, 2])/
    ((3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   ((1 + 2*n1 - 2*n3 - n4)*n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, -1 + n3, 1 + n4, 0, n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, -1 + n3, 1 + n4, 0, n6, 0, 1, 1, 2, 0, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(48*n6 - 24*d*n6 + 3*d^2*n6 + 24*n1*n6 - 6*d*n1*n6 - 16*n3*n6 + 
      4*d*n3*n6 + 40*n4*n6 - 12*d*n4*n6 + 8*n1*n4*n6 + 8*n4^2*n6 - 8*n6^2 + 
      4*d*n6^2 + 4*n1*n6^2 - 8*n3*n6^2 - 4*n6^3)*j[p4a, n1, 1, -1 + n3, 
      1 + n4, 0, 1 + n6, 0, 0, 1, 1, 1, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*(4*n6 - 3*d*n6 - 4*n1*n6 + 8*n3*n6 + 
      2*n4*n6 + 4*n6^2)*j[p4a, n1, 1, -1 + n3, 1 + n4, 0, 1 + n6, 0, 1, 0, 1, 
      1, 0, 1, 1])/(4*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 
      6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 
      14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 
      2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 
      6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*(4*n6 - 3*d*n6 - 4*n1*n6 + 8*n3*n6 + 
      2*n4*n6 + 4*n6^2)*j[p4a, n1, 1, -1 + n3, 1 + n4, 0, 1 + n6, 0, 1, 1, 0, 
      1, 0, 1, 1])/(4*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 
      6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 
      14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 
      2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 
      6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(4 - d + 2*n4)*n6*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, -1 + n3, 1 + n4, 0, 1 + n6, 0, 1, 1, 1, 0, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(112*n6 - 108*d*n6 + 32*d^2*n6 - 3*d^3*n6 + 128*n1*n6 - 96*d*n1*n6 + 
      16*d^2*n1*n6 - 48*n1^2*n6 + 12*d*n1^2*n6 - 32*n3*n6 + 40*d*n3*n6 - 
      8*d^2*n3*n6 + 128*n1*n3*n6 - 32*d*n1*n3*n6 - 64*n3^2*n6 + 
      16*d*n3^2*n6 + 136*n4*n6 - 92*d*n4*n6 + 16*d^2*n4*n6 + 96*n1*n4*n6 - 
      28*d*n1*n4*n6 - 8*n1^2*n4*n6 - 16*n3*n4*n6 + 16*n1*n3*n4*n6 + 
      72*n4^2*n6 - 28*d*n4^2*n6 + 8*n1*n4^2*n6 + 16*n3*n4^2*n6 + 16*n4^3*n6 - 
      96*n6^2 + 80*d*n6^2 - 16*d^2*n6^2 + 144*n1*n6^2 - 48*d*n1*n6^2 - 
      16*n1^2*n6^2 - 160*n3*n6^2 + 56*d*n3*n6^2 + 48*n1*n3*n6^2 - 
      32*n3^2*n6^2 - 80*n4*n6^2 + 28*d*n4*n6^2 + 48*n1*n4*n6^2 - 
      48*n3*n4*n6^2 - 8*n4^2*n6^2 - 96*n6^3 + 36*d*n6^3 + 32*n1*n6^3 - 
      48*n3*n6^3 - 40*n4*n6^3 - 16*n6^4)*j[p4a, n1, 1, -1 + n3, 1 + n4, 0, 
      1 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/(4*(3 - d + n4 + n6)*
     (6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 
      6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 
      14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 
      2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 
      6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(1 + n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*(8 - 3*d - 2*n1 + 4*n3 + 
      4*n4 + 2*n6)*j[p4a, n1, 1, -1 + n3, 2 + n4, 0, n6, -1, 1, 1, 1, 1, 0, 
      1, 1])/(2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + 
      d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 
      5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + 
      d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 
      2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(1 + n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*(8 - 3*d - 2*n1 + 4*n3 + 
      4*n4 + 2*n6)*j[p4a, n1, 1, -1 + n3, 2 + n4, 0, n6, 0, 0, 1, 1, 1, 0, 1, 
      1])/(2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + 
      d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 
      5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + 
      d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 
      2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(1 + n4)*(2 - d - n1 + 2*n3 + n4 + n6)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, -1 + n3, 2 + n4, 0, n6, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(1 + n4)*(2 - d - n1 + 2*n3 + n4 + n6)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, -1 + n3, 2 + n4, 0, n6, 0, 1, 1, 0, 1, 0, 1, 1])/
    ((3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(1 + n4)*(2 - d - n1 + 2*n3 + n4 + n6)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, -1 + n3, 2 + n4, 0, n6, 0, 1, 1, 1, 0, 0, 1, 1])/
    ((3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(1 + n4)*(2 - d - n1 + 2*n3 + n4 + n6)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, -1 + n3, 2 + n4, 0, n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   ((64*n6 - 72*d*n6 + 26*d^2*n6 - 3*d^3*n6 - 16*n1*n6 + 12*d*n1*n6 - 
      2*d^2*n1*n6 + 64*n3*n6 - 44*d*n3*n6 + 7*d^2*n3*n6 - 8*n1*n3*n6 + 
      2*d*n1*n3*n6 + 16*n3^2*n6 - 4*d*n3^2*n6 + 64*n4*n6 - 44*d*n4*n6 + 
      7*d^2*n4*n6 - 8*n1*n4*n6 + 2*d*n1*n4*n6 + 32*n3*n4*n6 - 8*d*n3*n4*n6 + 
      16*n4^2*n6 - 4*d*n4^2*n6 + 48*n6^2 - 40*d*n6^2 + 8*d^2*n6^2 - 
      8*n1*n6^2 + 4*d*n1*n6^2 + 40*n3*n6^2 - 16*d*n3*n6^2 - 4*n1*n3*n6^2 + 
      8*n3^2*n6^2 + 40*n4*n6^2 - 16*d*n4*n6^2 - 4*n1*n4*n6^2 + 
      16*n3*n4*n6^2 + 8*n4^2*n6^2 + 8*n6^3 - 4*d*n6^3 + 4*n3*n6^3 + 
      4*n4*n6^3)*j[p4a, n1, 1, n3, -1 + n4, 0, 1 + n6, 0, 1, 0, 1, 1, 0, 1, 
      2])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((-64*n6 + 72*d*n6 - 26*d^2*n6 + 3*d^3*n6 + 16*n1*n6 - 12*d*n1*n6 + 
      2*d^2*n1*n6 - 64*n3*n6 + 44*d*n3*n6 - 7*d^2*n3*n6 + 8*n1*n3*n6 - 
      2*d*n1*n3*n6 - 16*n3^2*n6 + 4*d*n3^2*n6 - 64*n4*n6 + 44*d*n4*n6 - 
      7*d^2*n4*n6 + 8*n1*n4*n6 - 2*d*n1*n4*n6 - 32*n3*n4*n6 + 8*d*n3*n4*n6 - 
      16*n4^2*n6 + 4*d*n4^2*n6 - 48*n6^2 + 40*d*n6^2 - 8*d^2*n6^2 + 
      8*n1*n6^2 - 4*d*n1*n6^2 - 40*n3*n6^2 + 16*d*n3*n6^2 + 4*n1*n3*n6^2 - 
      8*n3^2*n6^2 - 40*n4*n6^2 + 16*d*n4*n6^2 + 4*n1*n4*n6^2 - 
      16*n3*n4*n6^2 - 8*n4^2*n6^2 - 8*n6^3 + 4*d*n6^3 - 4*n3*n6^3 - 
      4*n4*n6^3)*j[p4a, n1, 1, n3, -1 + n4, 0, 1 + n6, 0, 1, 1, 1, 1, 0, 1, 
      1])/((-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(20*n4 - 16*d*n4 + 
      3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 
      4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 24*n6 + 
      17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((64*n6 - 72*d*n6 + 26*d^2*n6 - 3*d^3*n6 - 16*n1*n6 + 12*d*n1*n6 - 
      2*d^2*n1*n6 + 64*n3*n6 - 44*d*n3*n6 + 7*d^2*n3*n6 - 8*n1*n3*n6 + 
      2*d*n1*n3*n6 + 16*n3^2*n6 - 4*d*n3^2*n6 + 64*n4*n6 - 44*d*n4*n6 + 
      7*d^2*n4*n6 - 8*n1*n4*n6 + 2*d*n1*n4*n6 + 32*n3*n4*n6 - 8*d*n3*n4*n6 + 
      16*n4^2*n6 - 4*d*n4^2*n6 + 48*n6^2 - 40*d*n6^2 + 8*d^2*n6^2 - 
      8*n1*n6^2 + 4*d*n1*n6^2 + 40*n3*n6^2 - 16*d*n3*n6^2 - 4*n1*n3*n6^2 + 
      8*n3^2*n6^2 + 40*n4*n6^2 - 16*d*n4*n6^2 - 4*n1*n4*n6^2 + 
      16*n3*n4*n6^2 + 8*n4^2*n6^2 + 8*n6^3 - 4*d*n6^3 + 4*n3*n6^3 + 
      4*n4*n6^3)*j[p4a, n1, 1, n3, -1 + n4, 0, 1 + n6, 0, 1, 2, 1, 1, 0, 1, 
      0])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   ((1 + n6)*(-64*n6 + 72*d*n6 - 26*d^2*n6 + 3*d^3*n6 + 16*n1*n6 - 
      12*d*n1*n6 + 2*d^2*n1*n6 - 64*n3*n6 + 44*d*n3*n6 - 7*d^2*n3*n6 + 
      8*n1*n3*n6 - 2*d*n1*n3*n6 - 16*n3^2*n6 + 4*d*n3^2*n6 - 64*n4*n6 + 
      44*d*n4*n6 - 7*d^2*n4*n6 + 8*n1*n4*n6 - 2*d*n1*n4*n6 - 32*n3*n4*n6 + 
      8*d*n3*n4*n6 - 16*n4^2*n6 + 4*d*n4^2*n6 - 48*n6^2 + 40*d*n6^2 - 
      8*d^2*n6^2 + 8*n1*n6^2 - 4*d*n1*n6^2 - 40*n3*n6^2 + 16*d*n3*n6^2 + 
      4*n1*n3*n6^2 - 8*n3^2*n6^2 - 40*n4*n6^2 + 16*d*n4*n6^2 + 4*n1*n4*n6^2 - 
      16*n3*n4*n6^2 - 8*n4^2*n6^2 - 8*n6^3 + 4*d*n6^3 - 4*n3*n6^3 - 
      4*n4*n6^3)*j[p4a, n1, 1, n3, -1 + n4, 0, 2 + n6, 0, 0, 1, 1, 1, 0, 1, 
      1])/(2*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   ((1 + n6)*(-64*n6 + 72*d*n6 - 26*d^2*n6 + 3*d^3*n6 + 16*n1*n6 - 
      12*d*n1*n6 + 2*d^2*n1*n6 - 64*n3*n6 + 44*d*n3*n6 - 7*d^2*n3*n6 + 
      8*n1*n3*n6 - 2*d*n1*n3*n6 - 16*n3^2*n6 + 4*d*n3^2*n6 - 64*n4*n6 + 
      44*d*n4*n6 - 7*d^2*n4*n6 + 8*n1*n4*n6 - 2*d*n1*n4*n6 - 32*n3*n4*n6 + 
      8*d*n3*n4*n6 - 16*n4^2*n6 + 4*d*n4^2*n6 - 48*n6^2 + 40*d*n6^2 - 
      8*d^2*n6^2 + 8*n1*n6^2 - 4*d*n1*n6^2 - 40*n3*n6^2 + 16*d*n3*n6^2 + 
      4*n1*n3*n6^2 - 8*n3^2*n6^2 - 40*n4*n6^2 + 16*d*n4*n6^2 + 4*n1*n4*n6^2 - 
      16*n3*n4*n6^2 - 8*n4^2*n6^2 - 8*n6^3 + 4*d*n6^3 - 4*n3*n6^3 - 
      4*n4*n6^3)*j[p4a, n1, 1, n3, -1 + n4, 0, 2 + n6, 0, 1, 0, 1, 1, 0, 1, 
      1])/(2*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((1 + n6)*(-64*n6 + 72*d*n6 - 26*d^2*n6 + 3*d^3*n6 + 16*n1*n6 - 
      12*d*n1*n6 + 2*d^2*n1*n6 - 64*n3*n6 + 44*d*n3*n6 - 7*d^2*n3*n6 + 
      8*n1*n3*n6 - 2*d*n1*n3*n6 - 16*n3^2*n6 + 4*d*n3^2*n6 - 64*n4*n6 + 
      44*d*n4*n6 - 7*d^2*n4*n6 + 8*n1*n4*n6 - 2*d*n1*n4*n6 - 32*n3*n4*n6 + 
      8*d*n3*n4*n6 - 16*n4^2*n6 + 4*d*n4^2*n6 - 48*n6^2 + 40*d*n6^2 - 
      8*d^2*n6^2 + 8*n1*n6^2 - 4*d*n1*n6^2 - 40*n3*n6^2 + 16*d*n3*n6^2 + 
      4*n1*n3*n6^2 - 8*n3^2*n6^2 - 40*n4*n6^2 + 16*d*n4*n6^2 + 4*n1*n4*n6^2 - 
      16*n3*n4*n6^2 - 8*n4^2*n6^2 - 8*n6^3 + 4*d*n6^3 - 4*n3*n6^3 - 
      4*n4*n6^3)*j[p4a, n1, 1, n3, -1 + n4, 0, 2 + n6, 0, 1, 1, 0, 1, 0, 1, 
      1])/(2*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   ((1 + n6)*(-64*n6 + 72*d*n6 - 26*d^2*n6 + 3*d^3*n6 + 16*n1*n6 - 
      12*d*n1*n6 + 2*d^2*n1*n6 - 64*n3*n6 + 44*d*n3*n6 - 7*d^2*n3*n6 + 
      8*n1*n3*n6 - 2*d*n1*n3*n6 - 16*n3^2*n6 + 4*d*n3^2*n6 - 64*n4*n6 + 
      44*d*n4*n6 - 7*d^2*n4*n6 + 8*n1*n4*n6 - 2*d*n1*n4*n6 - 32*n3*n4*n6 + 
      8*d*n3*n4*n6 - 16*n4^2*n6 + 4*d*n4^2*n6 - 48*n6^2 + 40*d*n6^2 - 
      8*d^2*n6^2 + 8*n1*n6^2 - 4*d*n1*n6^2 - 40*n3*n6^2 + 16*d*n3*n6^2 + 
      4*n1*n3*n6^2 - 8*n3^2*n6^2 - 40*n4*n6^2 + 16*d*n4*n6^2 + 4*n1*n4*n6^2 - 
      16*n3*n4*n6^2 - 8*n4^2*n6^2 - 8*n6^3 + 4*d*n6^3 - 4*n3*n6^3 - 
      4*n4*n6^3)*j[p4a, n1, 1, n3, -1 + n4, 0, 2 + n6, 0, 1, 1, 1, 1, 0, 0, 
      1])/(2*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   ((1 + n6)*(-64*n6 + 72*d*n6 - 26*d^2*n6 + 3*d^3*n6 + 16*n1*n6 - 
      12*d*n1*n6 + 2*d^2*n1*n6 - 64*n3*n6 + 44*d*n3*n6 - 7*d^2*n3*n6 + 
      8*n1*n3*n6 - 2*d*n1*n3*n6 - 16*n3^2*n6 + 4*d*n3^2*n6 - 64*n4*n6 + 
      44*d*n4*n6 - 7*d^2*n4*n6 + 8*n1*n4*n6 - 2*d*n1*n4*n6 - 32*n3*n4*n6 + 
      8*d*n3*n4*n6 - 16*n4^2*n6 + 4*d*n4^2*n6 - 48*n6^2 + 40*d*n6^2 - 
      8*d^2*n6^2 + 8*n1*n6^2 - 4*d*n1*n6^2 - 40*n3*n6^2 + 16*d*n3*n6^2 + 
      4*n1*n3*n6^2 - 8*n3^2*n6^2 - 40*n4*n6^2 + 16*d*n4*n6^2 + 4*n1*n4*n6^2 - 
      16*n3*n4*n6^2 - 8*n4^2*n6^2 - 8*n6^3 + 4*d*n6^3 - 4*n3*n6^3 - 
      4*n4*n6^3)*j[p4a, n1, 1, n3, -1 + n4, 0, 2 + n6, 0, 1, 1, 1, 1, 0, 1, 
      0])/(2*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((-64*n6 + 72*d*n6 - 26*d^2*n6 + 3*d^3*n6 + 80*n1*n6 - 52*d*n1*n6 + 
      8*d^2*n1*n6 - 16*n1^2*n6 + 4*d*n1^2*n6 - 96*n3*n6 + 64*d*n3*n6 - 
      10*d^2*n3*n6 + 48*n1*n3*n6 - 12*d*n1*n3*n6 - 32*n3^2*n6 + 8*d*n3^2*n6 - 
      96*n4*n6 + 64*d*n4*n6 - 10*d^2*n4*n6 + 48*n1*n4*n6 - 12*d*n1*n4*n6 - 
      64*n3*n4*n6 + 16*d*n3*n4*n6 - 32*n4^2*n6 + 8*d*n4^2*n6 - 112*n6^2 + 
      80*d*n6^2 - 14*d^2*n6^2 + 72*n1*n6^2 - 24*d*n1*n6^2 - 8*n1^2*n6^2 - 
      96*n3*n6^2 + 32*d*n3*n6^2 + 24*n1*n3*n6^2 - 16*n3^2*n6^2 - 96*n4*n6^2 + 
      32*d*n4*n6^2 + 24*n1*n4*n6^2 - 32*n3*n4*n6^2 - 16*n4^2*n6^2 - 56*n6^3 + 
      20*d*n6^3 + 16*n1*n6^3 - 24*n3*n6^3 - 24*n4*n6^3 - 8*n6^4)*
     j[p4a, n1, 1, n3, n4, -1, 1 + n6, 0, 1, 0, 1, 1, 0, 1, 2])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((64*n6 - 72*d*n6 + 26*d^2*n6 - 3*d^3*n6 - 80*n1*n6 + 52*d*n1*n6 - 
      8*d^2*n1*n6 + 16*n1^2*n6 - 4*d*n1^2*n6 + 96*n3*n6 - 64*d*n3*n6 + 
      10*d^2*n3*n6 - 48*n1*n3*n6 + 12*d*n1*n3*n6 + 32*n3^2*n6 - 8*d*n3^2*n6 + 
      96*n4*n6 - 64*d*n4*n6 + 10*d^2*n4*n6 - 48*n1*n4*n6 + 12*d*n1*n4*n6 + 
      64*n3*n4*n6 - 16*d*n3*n4*n6 + 32*n4^2*n6 - 8*d*n4^2*n6 + 112*n6^2 - 
      80*d*n6^2 + 14*d^2*n6^2 - 72*n1*n6^2 + 24*d*n1*n6^2 + 8*n1^2*n6^2 + 
      96*n3*n6^2 - 32*d*n3*n6^2 - 24*n1*n3*n6^2 + 16*n3^2*n6^2 + 96*n4*n6^2 - 
      32*d*n4*n6^2 - 24*n1*n4*n6^2 + 32*n3*n4*n6^2 + 16*n4^2*n6^2 + 56*n6^3 - 
      20*d*n6^3 - 16*n1*n6^3 + 24*n3*n6^3 + 24*n4*n6^3 + 8*n6^4)*
     j[p4a, n1, 1, n3, n4, -1, 1 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 
      6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 
      14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 
      2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 
      6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   ((-64*n6 + 72*d*n6 - 26*d^2*n6 + 3*d^3*n6 + 80*n1*n6 - 52*d*n1*n6 + 
      8*d^2*n1*n6 - 16*n1^2*n6 + 4*d*n1^2*n6 - 96*n3*n6 + 64*d*n3*n6 - 
      10*d^2*n3*n6 + 48*n1*n3*n6 - 12*d*n1*n3*n6 - 32*n3^2*n6 + 8*d*n3^2*n6 - 
      96*n4*n6 + 64*d*n4*n6 - 10*d^2*n4*n6 + 48*n1*n4*n6 - 12*d*n1*n4*n6 - 
      64*n3*n4*n6 + 16*d*n3*n4*n6 - 32*n4^2*n6 + 8*d*n4^2*n6 - 112*n6^2 + 
      80*d*n6^2 - 14*d^2*n6^2 + 72*n1*n6^2 - 24*d*n1*n6^2 - 8*n1^2*n6^2 - 
      96*n3*n6^2 + 32*d*n3*n6^2 + 24*n1*n3*n6^2 - 16*n3^2*n6^2 - 96*n4*n6^2 + 
      32*d*n4*n6^2 + 24*n1*n4*n6^2 - 32*n3*n4*n6^2 - 16*n4^2*n6^2 - 56*n6^3 + 
      20*d*n6^3 + 16*n1*n6^3 - 24*n3*n6^3 - 24*n4*n6^3 - 8*n6^4)*
     j[p4a, n1, 1, n3, n4, -1, 1 + n6, 0, 1, 2, 1, 1, 0, 1, 0])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   ((1 + n6)*(64*n6 - 72*d*n6 + 26*d^2*n6 - 3*d^3*n6 - 80*n1*n6 + 
      52*d*n1*n6 - 8*d^2*n1*n6 + 16*n1^2*n6 - 4*d*n1^2*n6 + 96*n3*n6 - 
      64*d*n3*n6 + 10*d^2*n3*n6 - 48*n1*n3*n6 + 12*d*n1*n3*n6 + 32*n3^2*n6 - 
      8*d*n3^2*n6 + 96*n4*n6 - 64*d*n4*n6 + 10*d^2*n4*n6 - 48*n1*n4*n6 + 
      12*d*n1*n4*n6 + 64*n3*n4*n6 - 16*d*n3*n4*n6 + 32*n4^2*n6 - 
      8*d*n4^2*n6 + 112*n6^2 - 80*d*n6^2 + 14*d^2*n6^2 - 72*n1*n6^2 + 
      24*d*n1*n6^2 + 8*n1^2*n6^2 + 96*n3*n6^2 - 32*d*n3*n6^2 - 
      24*n1*n3*n6^2 + 16*n3^2*n6^2 + 96*n4*n6^2 - 32*d*n4*n6^2 - 
      24*n1*n4*n6^2 + 32*n3*n4*n6^2 + 16*n4^2*n6^2 + 56*n6^3 - 20*d*n6^3 - 
      16*n1*n6^3 + 24*n3*n6^3 + 24*n4*n6^3 + 8*n6^4)*
     j[p4a, n1, 1, n3, n4, -1, 2 + n6, -1, 1, 1, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   ((1 + n6)*(64*n6 - 72*d*n6 + 26*d^2*n6 - 3*d^3*n6 - 80*n1*n6 + 
      52*d*n1*n6 - 8*d^2*n1*n6 + 16*n1^2*n6 - 4*d*n1^2*n6 + 96*n3*n6 - 
      64*d*n3*n6 + 10*d^2*n3*n6 - 48*n1*n3*n6 + 12*d*n1*n3*n6 + 32*n3^2*n6 - 
      8*d*n3^2*n6 + 96*n4*n6 - 64*d*n4*n6 + 10*d^2*n4*n6 - 48*n1*n4*n6 + 
      12*d*n1*n4*n6 + 64*n3*n4*n6 - 16*d*n3*n4*n6 + 32*n4^2*n6 - 
      8*d*n4^2*n6 + 112*n6^2 - 80*d*n6^2 + 14*d^2*n6^2 - 72*n1*n6^2 + 
      24*d*n1*n6^2 + 8*n1^2*n6^2 + 96*n3*n6^2 - 32*d*n3*n6^2 - 
      24*n1*n3*n6^2 + 16*n3^2*n6^2 + 96*n4*n6^2 - 32*d*n4*n6^2 - 
      24*n1*n4*n6^2 + 32*n3*n4*n6^2 + 16*n4^2*n6^2 + 56*n6^3 - 20*d*n6^3 - 
      16*n1*n6^3 + 24*n3*n6^3 + 24*n4*n6^3 + 8*n6^4)*
     j[p4a, n1, 1, n3, n4, -1, 2 + n6, 0, 0, 1, 1, 1, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   ((1 + n6)*(64*n6 - 72*d*n6 + 26*d^2*n6 - 3*d^3*n6 - 80*n1*n6 + 
      52*d*n1*n6 - 8*d^2*n1*n6 + 16*n1^2*n6 - 4*d*n1^2*n6 + 96*n3*n6 - 
      64*d*n3*n6 + 10*d^2*n3*n6 - 48*n1*n3*n6 + 12*d*n1*n3*n6 + 32*n3^2*n6 - 
      8*d*n3^2*n6 + 96*n4*n6 - 64*d*n4*n6 + 10*d^2*n4*n6 - 48*n1*n4*n6 + 
      12*d*n1*n4*n6 + 64*n3*n4*n6 - 16*d*n3*n4*n6 + 32*n4^2*n6 - 
      8*d*n4^2*n6 + 112*n6^2 - 80*d*n6^2 + 14*d^2*n6^2 - 72*n1*n6^2 + 
      24*d*n1*n6^2 + 8*n1^2*n6^2 + 96*n3*n6^2 - 32*d*n3*n6^2 - 
      24*n1*n3*n6^2 + 16*n3^2*n6^2 + 96*n4*n6^2 - 32*d*n4*n6^2 - 
      24*n1*n4*n6^2 + 32*n3*n4*n6^2 + 16*n4^2*n6^2 + 56*n6^3 - 20*d*n6^3 - 
      16*n1*n6^3 + 24*n3*n6^3 + 24*n4*n6^3 + 8*n6^4)*
     j[p4a, n1, 1, n3, n4, -1, 2 + n6, 0, 1, 0, 1, 1, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((1 + n6)*(64*n6 - 72*d*n6 + 26*d^2*n6 - 3*d^3*n6 - 80*n1*n6 + 
      52*d*n1*n6 - 8*d^2*n1*n6 + 16*n1^2*n6 - 4*d*n1^2*n6 + 96*n3*n6 - 
      64*d*n3*n6 + 10*d^2*n3*n6 - 48*n1*n3*n6 + 12*d*n1*n3*n6 + 32*n3^2*n6 - 
      8*d*n3^2*n6 + 96*n4*n6 - 64*d*n4*n6 + 10*d^2*n4*n6 - 48*n1*n4*n6 + 
      12*d*n1*n4*n6 + 64*n3*n4*n6 - 16*d*n3*n4*n6 + 32*n4^2*n6 - 
      8*d*n4^2*n6 + 112*n6^2 - 80*d*n6^2 + 14*d^2*n6^2 - 72*n1*n6^2 + 
      24*d*n1*n6^2 + 8*n1^2*n6^2 + 96*n3*n6^2 - 32*d*n3*n6^2 - 
      24*n1*n3*n6^2 + 16*n3^2*n6^2 + 96*n4*n6^2 - 32*d*n4*n6^2 - 
      24*n1*n4*n6^2 + 32*n3*n4*n6^2 + 16*n4^2*n6^2 + 56*n6^3 - 20*d*n6^3 - 
      16*n1*n6^3 + 24*n3*n6^3 + 24*n4*n6^3 + 8*n6^4)*
     j[p4a, n1, 1, n3, n4, -1, 2 + n6, 0, 1, 1, 0, 1, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((1 + n6)*(64*n6 - 72*d*n6 + 26*d^2*n6 - 3*d^3*n6 - 80*n1*n6 + 
      52*d*n1*n6 - 8*d^2*n1*n6 + 16*n1^2*n6 - 4*d*n1^2*n6 + 96*n3*n6 - 
      64*d*n3*n6 + 10*d^2*n3*n6 - 48*n1*n3*n6 + 12*d*n1*n3*n6 + 32*n3^2*n6 - 
      8*d*n3^2*n6 + 96*n4*n6 - 64*d*n4*n6 + 10*d^2*n4*n6 - 48*n1*n4*n6 + 
      12*d*n1*n4*n6 + 64*n3*n4*n6 - 16*d*n3*n4*n6 + 32*n4^2*n6 - 
      8*d*n4^2*n6 + 112*n6^2 - 80*d*n6^2 + 14*d^2*n6^2 - 72*n1*n6^2 + 
      24*d*n1*n6^2 + 8*n1^2*n6^2 + 96*n3*n6^2 - 32*d*n3*n6^2 - 
      24*n1*n3*n6^2 + 16*n3^2*n6^2 + 96*n4*n6^2 - 32*d*n4*n6^2 - 
      24*n1*n4*n6^2 + 32*n3*n4*n6^2 + 16*n4^2*n6^2 + 56*n6^3 - 20*d*n6^3 - 
      16*n1*n6^3 + 24*n3*n6^3 + 24*n4*n6^3 + 8*n6^4)*
     j[p4a, n1, 1, n3, n4, -1, 2 + n6, 0, 1, 1, 1, 1, -1, 1, 1])/
    (2*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   ((1 + n6)*(64*n6 - 72*d*n6 + 26*d^2*n6 - 3*d^3*n6 - 80*n1*n6 + 
      52*d*n1*n6 - 8*d^2*n1*n6 + 16*n1^2*n6 - 4*d*n1^2*n6 + 96*n3*n6 - 
      64*d*n3*n6 + 10*d^2*n3*n6 - 48*n1*n3*n6 + 12*d*n1*n3*n6 + 32*n3^2*n6 - 
      8*d*n3^2*n6 + 96*n4*n6 - 64*d*n4*n6 + 10*d^2*n4*n6 - 48*n1*n4*n6 + 
      12*d*n1*n4*n6 + 64*n3*n4*n6 - 16*d*n3*n4*n6 + 32*n4^2*n6 - 
      8*d*n4^2*n6 + 112*n6^2 - 80*d*n6^2 + 14*d^2*n6^2 - 72*n1*n6^2 + 
      24*d*n1*n6^2 + 8*n1^2*n6^2 + 96*n3*n6^2 - 32*d*n3*n6^2 - 
      24*n1*n3*n6^2 + 16*n3^2*n6^2 + 96*n4*n6^2 - 32*d*n4*n6^2 - 
      24*n1*n4*n6^2 + 32*n3*n4*n6^2 + 16*n4^2*n6^2 + 56*n6^3 - 20*d*n6^3 - 
      16*n1*n6^3 + 24*n3*n6^3 + 24*n4*n6^3 + 8*n6^4)*
     j[p4a, n1, 1, n3, n4, -1, 2 + n6, 0, 1, 1, 1, 1, 0, 0, 1])/
    (4*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   ((1 + n6)*(64*n6 - 72*d*n6 + 26*d^2*n6 - 3*d^3*n6 - 80*n1*n6 + 
      52*d*n1*n6 - 8*d^2*n1*n6 + 16*n1^2*n6 - 4*d*n1^2*n6 + 96*n3*n6 - 
      64*d*n3*n6 + 10*d^2*n3*n6 - 48*n1*n3*n6 + 12*d*n1*n3*n6 + 32*n3^2*n6 - 
      8*d*n3^2*n6 + 96*n4*n6 - 64*d*n4*n6 + 10*d^2*n4*n6 - 48*n1*n4*n6 + 
      12*d*n1*n4*n6 + 64*n3*n4*n6 - 16*d*n3*n4*n6 + 32*n4^2*n6 - 
      8*d*n4^2*n6 + 112*n6^2 - 80*d*n6^2 + 14*d^2*n6^2 - 72*n1*n6^2 + 
      24*d*n1*n6^2 + 8*n1^2*n6^2 + 96*n3*n6^2 - 32*d*n3*n6^2 - 
      24*n1*n3*n6^2 + 16*n3^2*n6^2 + 96*n4*n6^2 - 32*d*n4*n6^2 - 
      24*n1*n4*n6^2 + 32*n3*n4*n6^2 + 16*n4^2*n6^2 + 56*n6^3 - 20*d*n6^3 - 
      16*n1*n6^3 + 24*n3*n6^3 + 24*n4*n6^3 + 8*n6^4)*
     j[p4a, n1, 1, n3, n4, -1, 2 + n6, 0, 1, 1, 1, 1, 0, 1, 0])/
    (4*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   ((1 + n6)*(-64*n6 + 72*d*n6 - 26*d^2*n6 + 3*d^3*n6 - 48*n1*n6 + 
      28*d*n1*n6 - 4*d^2*n1*n6 + 16*n1^2*n6 - 4*d*n1^2*n6 - 32*n3*n6 + 
      24*d*n3*n6 - 4*d^2*n3*n6 - 32*n1*n3*n6 + 8*d*n1*n3*n6 - 32*n4*n6 + 
      24*d*n4*n6 - 4*d^2*n4*n6 - 32*n1*n4*n6 + 8*d*n1*n4*n6 + 16*n6^2 - 
      2*d^2*n6^2 - 56*n1*n6^2 + 16*d*n1*n6^2 + 8*n1^2*n6^2 + 16*n3*n6^2 - 
      16*n1*n3*n6^2 + 16*n4*n6^2 - 16*n1*n4*n6^2 + 40*n6^3 - 12*d*n6^3 - 
      16*n1*n6^3 + 16*n3*n6^3 + 16*n4*n6^3 + 8*n6^4)*
     j[p4a, n1, 1, n3, n4, -1, 2 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - ((-1 + 2*n1 - n3 - n6)*
     (-416 + 432*d - 142*d^2 + 15*d^3 - 16*n1 + 36*d*n1 - 8*d^2*n1 + 
      48*n1^2 - 12*d*n1^2 - 224*n3 + 112*d*n3 - 14*d^2*n3 - 112*n1*n3 + 
      28*d*n1*n3 + 32*n3^2 - 8*d*n3^2 - 560*n4 + 376*d*n4 - 62*d^2*n4 - 
      48*n1*n4 + 20*d*n1*n4 + 16*n1^2*n4 - 160*n3*n4 + 48*d*n3*n4 - 
      32*n1*n3*n4 - 240*n4^2 + 80*d*n4^2 - 16*n1*n4^2 - 32*n3*n4^2 - 
      32*n4^3 - 144*n6 + 80*d*n6 - 10*d^2*n6 - 72*n1*n6 + 24*d*n1*n6 + 
      8*n1^2*n6 + 32*n3*n6 - 16*d*n3*n6 - 24*n1*n3*n6 + 16*n3^2*n6 - 
      128*n4*n6 + 40*d*n4*n6 - 24*n1*n4*n6 - 32*n4^2*n6 + 24*n6^2 - 
      12*d*n6^2 - 16*n1*n6^2 + 24*n3*n6^2 + 8*n4*n6^2 + 8*n6^3)*
     j[p4a, n1, 1, n3, n4, 0, n6, 0, 0, 1, 1, 2, 0, 1, 1])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   ((-4 + d - 2*n4)*(-10 + 3*d - 2*n1 - 2*n4 - 2*n6)*
     j[p4a, n1, 1, n3, n4, 0, n6, 0, 0, 1, 1, 2, 0, 1, 2])/
    (2*(-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   ((-416 + 432*d - 142*d^2 + 15*d^3 - 16*n1 + 36*d*n1 - 8*d^2*n1 + 48*n1^2 - 
      12*d*n1^2 - 224*n3 + 112*d*n3 - 14*d^2*n3 - 112*n1*n3 + 28*d*n1*n3 + 
      32*n3^2 - 8*d*n3^2 - 560*n4 + 376*d*n4 - 62*d^2*n4 - 48*n1*n4 + 
      20*d*n1*n4 + 16*n1^2*n4 - 160*n3*n4 + 48*d*n3*n4 - 32*n1*n3*n4 - 
      240*n4^2 + 80*d*n4^2 - 16*n1*n4^2 - 32*n3*n4^2 - 32*n4^3 - 144*n6 + 
      80*d*n6 - 10*d^2*n6 - 72*n1*n6 + 24*d*n1*n6 + 8*n1^2*n6 + 32*n3*n6 - 
      16*d*n3*n6 - 24*n1*n3*n6 + 16*n3^2*n6 - 128*n4*n6 + 40*d*n4*n6 - 
      24*n1*n4*n6 - 32*n4^2*n6 + 24*n6^2 - 12*d*n6^2 - 16*n1*n6^2 + 
      24*n3*n6^2 + 8*n4*n6^2 + 8*n6^3)*j[p4a, n1, 1, n3, n4, 0, n6, 0, 0, 1, 
      1, 2, 0, 2, 1])/(4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   ((-4 + d - 2*n4)*(-10 + 3*d - 2*n1 - 2*n4 - 2*n6)*
     j[p4a, n1, 1, n3, n4, 0, n6, 0, 0, 2, 1, 2, 0, 1, 1])/
    (2*(-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   ((-40 + 22*d - 3*d^2 - 48*n1 + 24*d*n1 - 3*d^2*n1 - 8*n1^2 + 2*d*n1^2 + 
      80*n3 - 44*d*n3 + 6*d^2*n3 + 16*n1*n3 - 4*d*n1*n3 - 28*n4 + 8*d*n4 - 
      32*n1*n4 + 8*d*n1*n4 - 4*n1^2*n4 + 56*n3*n4 - 16*d*n3*n4 + 8*n1*n3*n4 - 
      4*n4^2 - 4*n1*n4^2 + 8*n3*n4^2 + 28*n6 - 19*d*n6 + 3*d^2*n6 - 8*n1*n6 + 
      2*d*n1*n6 + 24*n3*n6 - 6*d*n3*n6 + 18*n4*n6 - 6*d*n4*n6 - 2*n1*n4*n6 + 
      8*n3*n4*n6 + 2*n4^2*n6 + 16*n6^2 - 5*d*n6^2 - 2*n1*n6^2 + 4*n3*n6^2 + 
      6*n4*n6^2 + 2*n6^3)*j[p4a, n1, 1, n3, n4, 0, n6, 0, 1, 0, 1, 1, 0, 1, 
      2])/(2*(-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + 
      d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 
      5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + 
      d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 
      2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   ((40 - 22*d + 3*d^2 + 48*n1 - 24*d*n1 + 3*d^2*n1 + 8*n1^2 - 2*d*n1^2 - 
      80*n3 + 44*d*n3 - 6*d^2*n3 - 16*n1*n3 + 4*d*n1*n3 + 68*n4 - 40*d*n4 + 
      6*d^2*n4 + 20*n1*n4 - 6*d*n1*n4 - 16*n3*n4 + 4*d*n3*n4 + 32*n4^2 - 
      10*d*n4^2 + 4*n1*n4^2 + 4*n4^3 - 76*n6 + 53*d*n6 - 9*d^2*n6 + 4*n1*n6 + 
      4*n1^2*n6 - 48*n3*n6 + 14*d*n3*n6 - 8*n1*n3*n6 - 30*n4*n6 + 
      10*d*n4*n6 - 2*n1*n4*n6 - 8*n3*n4*n6 - 2*n4^2*n6 - 28*n6^2 + 9*d*n6^2 - 
      2*n1*n6^2 - 4*n3*n6^2 - 6*n4*n6^2 - 2*n6^3)*j[p4a, n1, 1, n3, n4, 0, 
      n6, 0, 1, 2, 1, 1, 0, 1, 0])/(2*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((-4 + d - n4)*(-416 + 432*d - 142*d^2 + 15*d^3 - 16*n1 + 36*d*n1 - 
      8*d^2*n1 + 48*n1^2 - 12*d*n1^2 - 224*n3 + 112*d*n3 - 14*d^2*n3 - 
      112*n1*n3 + 28*d*n1*n3 + 32*n3^2 - 8*d*n3^2 - 560*n4 + 376*d*n4 - 
      62*d^2*n4 - 48*n1*n4 + 20*d*n1*n4 + 16*n1^2*n4 - 160*n3*n4 + 
      48*d*n3*n4 - 32*n1*n3*n4 - 240*n4^2 + 80*d*n4^2 - 16*n1*n4^2 - 
      32*n3*n4^2 - 32*n4^3 - 144*n6 + 80*d*n6 - 10*d^2*n6 - 72*n1*n6 + 
      24*d*n1*n6 + 8*n1^2*n6 + 32*n3*n6 - 16*d*n3*n6 - 24*n1*n3*n6 + 
      16*n3^2*n6 - 128*n4*n6 + 40*d*n4*n6 - 24*n1*n4*n6 - 32*n4^2*n6 + 
      24*n6^2 - 12*d*n6^2 - 16*n1*n6^2 + 24*n3*n6^2 + 8*n4*n6^2 + 8*n6^3)*
     j[p4a, n1, 1, n3, n4, 0, n6, 0, 2, 1, 1, 0, 0, 1, 1])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((152*n6 - 162*d*n6 + 55*d^2*n6 - 6*d^3*n6 - 56*n1*n6 + 30*d*n1*n6 - 
      4*d^2*n1*n6 + 128*n3*n6 - 76*d*n3*n6 + 11*d^2*n3*n6 - 8*n1*n3*n6 + 
      2*d*n1*n3*n6 + 16*n3^2*n6 - 4*d*n3^2*n6 + 212*n4*n6 - 142*d*n4*n6 + 
      23*d^2*n4*n6 - 24*n1*n4*n6 + 4*d*n1*n4*n6 - 4*n1^2*n4*n6 + 
      88*n3*n4*n6 - 24*d*n3*n4*n6 + 8*n1*n3*n4*n6 + 84*n4^2*n6 - 
      26*d*n4^2*n6 + 4*n1*n4^2*n6 + 8*n3*n4^2*n6 + 8*n4^3*n6 + 120*n6^2 - 
      80*d*n6^2 + 13*d^2*n6^2 - 36*n1*n6^2 + 12*d*n1*n6^2 + 4*n1^2*n6^2 + 
      64*n3*n6^2 - 20*d*n3*n6^2 - 12*n1*n3*n6^2 + 8*n3^2*n6^2 + 104*n4*n6^2 - 
      34*d*n4*n6^2 - 12*n1*n4*n6^2 + 24*n3*n4*n6^2 + 20*n4^2*n6^2 + 36*n6^3 - 
      12*d*n6^3 - 8*n1*n6^3 + 12*n3*n6^3 + 16*n4*n6^3 + 4*n6^4)*
     j[p4a, n1, 1, n3, n4, 0, 1 + n6, -1, 0, 1, 1, 2, 0, 1, 1])/
    ((-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((64*n6 - 72*d*n6 + 26*d^2*n6 - 3*d^3*n6 - 16*n1*n6 + 12*d*n1*n6 - 
      2*d^2*n1*n6 + 64*n3*n6 - 44*d*n3*n6 + 7*d^2*n3*n6 - 8*n1*n3*n6 + 
      2*d*n1*n3*n6 + 16*n3^2*n6 - 4*d*n3^2*n6 + 64*n4*n6 - 44*d*n4*n6 + 
      7*d^2*n4*n6 - 8*n1*n4*n6 + 2*d*n1*n4*n6 + 32*n3*n4*n6 - 8*d*n3*n4*n6 + 
      16*n4^2*n6 - 4*d*n4^2*n6 + 48*n6^2 - 40*d*n6^2 + 8*d^2*n6^2 - 
      8*n1*n6^2 + 4*d*n1*n6^2 + 40*n3*n6^2 - 16*d*n3*n6^2 - 4*n1*n3*n6^2 + 
      8*n3^2*n6^2 + 40*n4*n6^2 - 16*d*n4*n6^2 - 4*n1*n4*n6^2 + 
      16*n3*n4*n6^2 + 8*n4^2*n6^2 + 8*n6^3 - 4*d*n6^3 + 4*n3*n6^3 + 
      4*n4*n6^3)*j[p4a, n1, 1, n3, n4, 0, 1 + n6, -1, 0, 1, 2, 1, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((-4*n6 + d*n6 - 8*n1*n6 + 2*d*n1*n6 + 8*n3*n6 - 2*d*n3*n6 - 6*n4*n6 + 
      2*d*n4*n6 - 2*n1*n4*n6 - 2*n4^2*n6 + 8*n6^2 - 3*d*n6^2 - 2*n1*n6^2 + 
      4*n3*n6^2 + 2*n4*n6^2 + 2*n6^3)*j[p4a, n1, 1, n3, n4, 0, 1 + n6, -1, 1, 
      0, 1, 1, 0, 1, 2])/(2*(-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 
      6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 
      14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 
      2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 
      6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   ((64*n6 - 72*d*n6 + 26*d^2*n6 - 3*d^3*n6 - 16*n1*n6 + 12*d*n1*n6 - 
      2*d^2*n1*n6 + 64*n3*n6 - 44*d*n3*n6 + 7*d^2*n3*n6 - 8*n1*n3*n6 + 
      2*d*n1*n3*n6 + 16*n3^2*n6 - 4*d*n3^2*n6 + 64*n4*n6 - 44*d*n4*n6 + 
      7*d^2*n4*n6 - 8*n1*n4*n6 + 2*d*n1*n4*n6 + 32*n3*n4*n6 - 8*d*n3*n4*n6 + 
      16*n4^2*n6 - 4*d*n4^2*n6 + 48*n6^2 - 40*d*n6^2 + 8*d^2*n6^2 - 
      8*n1*n6^2 + 4*d*n1*n6^2 + 40*n3*n6^2 - 16*d*n3*n6^2 - 4*n1*n3*n6^2 + 
      8*n3^2*n6^2 + 40*n4*n6^2 - 16*d*n4*n6^2 - 4*n1*n4*n6^2 + 
      16*n3*n4*n6^2 + 8*n4^2*n6^2 + 8*n6^3 - 4*d*n6^3 + 4*n3*n6^3 + 
      4*n4*n6^3)*j[p4a, n1, 1, n3, n4, 0, 1 + n6, -1, 1, 1, 2, 0, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((64*n6 - 72*d*n6 + 26*d^2*n6 - 3*d^3*n6 - 16*n1*n6 + 12*d*n1*n6 - 
      2*d^2*n1*n6 + 64*n3*n6 - 44*d*n3*n6 + 7*d^2*n3*n6 - 8*n1*n3*n6 + 
      2*d*n1*n3*n6 + 16*n3^2*n6 - 4*d*n3^2*n6 + 64*n4*n6 - 44*d*n4*n6 + 
      7*d^2*n4*n6 - 8*n1*n4*n6 + 2*d*n1*n4*n6 + 32*n3*n4*n6 - 8*d*n3*n4*n6 + 
      16*n4^2*n6 - 4*d*n4^2*n6 + 48*n6^2 - 40*d*n6^2 + 8*d^2*n6^2 - 
      8*n1*n6^2 + 4*d*n1*n6^2 + 40*n3*n6^2 - 16*d*n3*n6^2 - 4*n1*n3*n6^2 + 
      8*n3^2*n6^2 + 40*n4*n6^2 - 16*d*n4*n6^2 - 4*n1*n4*n6^2 + 
      16*n3*n4*n6^2 + 8*n4^2*n6^2 + 8*n6^3 - 4*d*n6^3 + 4*n3*n6^3 + 
      4*n4*n6^3)*j[p4a, n1, 1, n3, n4, 0, 1 + n6, -1, 1, 1, 2, 1, 0, 0, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((-64*n6 + 72*d*n6 - 26*d^2*n6 + 3*d^3*n6 + 16*n1*n6 - 12*d*n1*n6 + 
      2*d^2*n1*n6 - 64*n3*n6 + 44*d*n3*n6 - 7*d^2*n3*n6 + 8*n1*n3*n6 - 
      2*d*n1*n3*n6 - 16*n3^2*n6 + 4*d*n3^2*n6 - 64*n4*n6 + 44*d*n4*n6 - 
      7*d^2*n4*n6 + 8*n1*n4*n6 - 2*d*n1*n4*n6 - 32*n3*n4*n6 + 8*d*n3*n4*n6 - 
      16*n4^2*n6 + 4*d*n4^2*n6 - 48*n6^2 + 40*d*n6^2 - 8*d^2*n6^2 + 
      8*n1*n6^2 - 4*d*n1*n6^2 - 40*n3*n6^2 + 16*d*n3*n6^2 + 4*n1*n3*n6^2 - 
      8*n3^2*n6^2 - 40*n4*n6^2 + 16*d*n4*n6^2 + 4*n1*n4*n6^2 - 
      16*n3*n4*n6^2 - 8*n4^2*n6^2 - 8*n6^3 + 4*d*n6^3 - 4*n3*n6^3 - 
      4*n4*n6^3)*j[p4a, n1, 1, n3, n4, 0, 1 + n6, -1, 1, 2, 1, 1, 0, 1, 0])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((64*n6 - 72*d*n6 + 26*d^2*n6 - 3*d^3*n6 - 80*n1*n6 + 52*d*n1*n6 - 
      8*d^2*n1*n6 + 16*n1^2*n6 - 4*d*n1^2*n6 + 96*n3*n6 - 64*d*n3*n6 + 
      10*d^2*n3*n6 - 48*n1*n3*n6 + 12*d*n1*n3*n6 + 32*n3^2*n6 - 8*d*n3^2*n6 + 
      96*n4*n6 - 64*d*n4*n6 + 10*d^2*n4*n6 - 48*n1*n4*n6 + 12*d*n1*n4*n6 + 
      64*n3*n4*n6 - 16*d*n3*n4*n6 + 32*n4^2*n6 - 8*d*n4^2*n6 + 112*n6^2 - 
      80*d*n6^2 + 14*d^2*n6^2 - 72*n1*n6^2 + 24*d*n1*n6^2 + 8*n1^2*n6^2 + 
      96*n3*n6^2 - 32*d*n3*n6^2 - 24*n1*n3*n6^2 + 16*n3^2*n6^2 + 96*n4*n6^2 - 
      32*d*n4*n6^2 - 24*n1*n4*n6^2 + 32*n3*n4*n6^2 + 16*n4^2*n6^2 + 56*n6^3 - 
      20*d*n6^3 - 16*n1*n6^3 + 24*n3*n6^3 + 24*n4*n6^3 + 8*n6^4)*
     j[p4a, n1, 1, n3, n4, 0, 1 + n6, -1, 2, 1, 1, 0, 0, 1, 1])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((64*n6 - 72*d*n6 + 26*d^2*n6 - 3*d^3*n6 - 80*n1*n6 + 52*d*n1*n6 - 
      8*d^2*n1*n6 + 16*n1^2*n6 - 4*d*n1^2*n6 + 96*n3*n6 - 64*d*n3*n6 + 
      10*d^2*n3*n6 - 48*n1*n3*n6 + 12*d*n1*n3*n6 + 32*n3^2*n6 - 8*d*n3^2*n6 + 
      96*n4*n6 - 64*d*n4*n6 + 10*d^2*n4*n6 - 48*n1*n4*n6 + 12*d*n1*n4*n6 + 
      64*n3*n4*n6 - 16*d*n3*n4*n6 + 32*n4^2*n6 - 8*d*n4^2*n6 + 112*n6^2 - 
      80*d*n6^2 + 14*d^2*n6^2 - 72*n1*n6^2 + 24*d*n1*n6^2 + 8*n1^2*n6^2 + 
      96*n3*n6^2 - 32*d*n3*n6^2 - 24*n1*n3*n6^2 + 16*n3^2*n6^2 + 96*n4*n6^2 - 
      32*d*n4*n6^2 - 24*n1*n4*n6^2 + 32*n3*n4*n6^2 + 16*n4^2*n6^2 + 56*n6^3 - 
      20*d*n6^3 - 16*n1*n6^3 + 24*n3*n6^3 + 24*n4*n6^3 + 8*n6^4)*
     j[p4a, n1, 1, n3, n4, 0, 1 + n6, -1, 2, 1, 1, 1, 0, 0, 1])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((160*n6 - 144*d*n6 + 38*d^2*n6 - 3*d^3*n6 - 144*n1*n6 + 196*d*n1*n6 - 
      88*d^2*n1*n6 + 12*d^3*n1*n6 - 48*n1^2*n6 + 28*d*n1^2*n6 - 
      4*d^2*n1^2*n6 + 32*n1^3*n6 - 8*d*n1^3*n6 + 352*n3*n6 - 400*d*n3*n6 + 
      162*d^2*n3*n6 - 21*d^3*n3*n6 - 272*n1*n3*n6 + 236*d*n1*n3*n6 - 
      42*d^2*n1*n3*n6 - 32*n1^2*n3*n6 + 8*d*n1^2*n3*n6 + 416*n3^2*n6 - 
      336*d*n3^2*n6 + 58*d^2*n3^2*n6 - 144*n1*n3^2*n6 + 36*d*n1*n3^2*n6 + 
      160*n3^3*n6 - 40*d*n3^3*n6 - 368*n4*n6 + 608*d*n4*n6 - 288*d^2*n4*n6 + 
      42*d^3*n4*n6 - 32*n1*n4*n6 + 56*d*n1*n4*n6 - 18*d^2*n1*n4*n6 - 
      32*n1^2*n4*n6 - 4*d*n1^2*n4*n6 - 416*n3*n4*n6 + 360*d*n3*n4*n6 - 
      76*d^2*n3*n4*n6 - 128*n1*n3*n4*n6 + 72*d*n1*n3*n4*n6 + 
      32*n1^2*n3*n4*n6 - 32*n3^2*n4*n6 + 24*d*n3^2*n4*n6 - 64*n1*n3^2*n4*n6 - 
      640*n4^2*n6 + 576*d*n4^2*n6 - 122*d^2*n4^2*n6 + 20*d*n1*n4^2*n6 + 
      16*n1^2*n4^2*n6 - 512*n3*n4^2*n6 + 200*d*n3*n4^2*n6 - 
      64*n1*n3*n4^2*n6 - 64*n3^2*n4^2*n6 - 272*n4^3*n6 + 112*d*n4^3*n6 - 
      16*n1*n4^3*n6 - 96*n3*n4^3*n6 - 32*n4^4*n6 + 832*n6^2 - 1004*d*n6^2 + 
      404*d^2*n6^2 - 54*d^3*n6^2 - 216*n1*n6^2 + 172*d*n1*n6^2 - 
      32*d^2*n1*n6^2 - 104*n1^2*n6^2 + 40*d*n1^2*n6^2 + 16*n1^3*n6^2 + 
      1280*n3*n6^2 - 1040*d*n3*n6^2 + 206*d^2*n3*n6^2 - 152*n1*n3*n6^2 + 
      48*d*n1*n3*n6^2 - 48*n1^2*n3*n6^2 + 640*n3^2*n6^2 - 240*d*n3^2*n6^2 - 
      8*n1*n3^2*n6^2 + 80*n3^3*n6^2 + 680*n4*n6^2 - 500*d*n4*n6^2 + 
      92*d^2*n4*n6^2 - 32*n1*n4*n6^2 + 12*d*n1*n4*n6^2 - 48*n1^2*n4*n6^2 + 
      640*n3*n4*n6^2 - 240*d*n3*n4*n6^2 + 144*n3^2*n4*n6^2 + 88*n4^2*n6^2 - 
      20*d*n4^2*n6^2 + 16*n1*n4^2*n6^2 + 32*n3*n4^2*n6^2 - 16*n4^3*n6^2 + 
      520*n6^3 - 436*d*n6^3 + 90*d^2*n6^3 - 40*n1*n6^3 + 16*d*n1*n6^3 - 
      24*n1^2*n6^3 + 520*n3*n6^3 - 212*d*n3*n6^3 - 8*n1*n3*n6^3 + 
      120*n3^2*n6^3 + 352*n4*n6^3 - 140*d*n4*n6^3 + 8*n1*n4*n6^3 + 
      160*n3*n4*n6^3 + 48*n4^2*n6^3 + 112*n6^4 - 48*d*n6^4 + 56*n3*n6^4 + 
      40*n4*n6^4 + 8*n6^5)*j[p4a, n1, 1, n3, n4, 0, 1 + n6, 0, 0, 1, 1, 1, 0, 
      1, 1])/(4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((-4*n6 + d*n6 - 8*n1*n6 + 2*d*n1*n6 + 8*n3*n6 - 2*d*n3*n6 - 6*n4*n6 + 
      2*d*n4*n6 - 2*n1*n4*n6 - 2*n4^2*n6 + 8*n6^2 - 3*d*n6^2 - 2*n1*n6^2 + 
      4*n3*n6^2 + 2*n4*n6^2 + 2*n6^3)*j[p4a, n1, 1, n3, n4, 0, 1 + n6, 0, 0, 
      1, 1, 1, 0, 1, 2])/(2*(-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 
      6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 
      14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 
      2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 
      6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   ((32*n6 - 20*d*n6 + 3*d^2*n6 - 8*n1*n6 + 2*d*n1*n6 + 16*n3*n6 - 
      4*d*n3*n6 + 16*n4*n6 - 4*d*n4*n6 + 24*n6^2 - 8*d*n6^2 - 4*n1*n6^2 + 
      8*n3*n6^2 + 8*n4*n6^2 + 4*n6^3)*j[p4a, n1, 1, n3, n4, 0, 1 + n6, 0, 0, 
      1, 1, 1, 0, 2, 1])/(4*(-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 
      6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 
      14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 
      2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 
      6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   ((112*n6 - 64*d*n6 + 9*d^2*n6 + 8*n1*n6 - 2*d*n1*n6 + 16*n3*n6 - 
      4*d*n3*n6 + 72*n4*n6 - 20*d*n4*n6 + 8*n1*n4*n6 + 8*n4^2*n6 + 40*n6^2 - 
      12*d*n6^2 - 4*n1*n6^2 + 8*n3*n6^2 + 16*n4*n6^2 + 4*n6^3)*
     j[p4a, n1, 1, n3, n4, 0, 1 + n6, 0, 0, 1, 1, 2, -1, 1, 1])/
    (4*(-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   ((-64*n6 + 72*d*n6 - 26*d^2*n6 + 3*d^3*n6 + 16*n1*n6 - 12*d*n1*n6 + 
      2*d^2*n1*n6 - 64*n3*n6 + 44*d*n3*n6 - 7*d^2*n3*n6 + 8*n1*n3*n6 - 
      2*d*n1*n3*n6 - 16*n3^2*n6 + 4*d*n3^2*n6 - 64*n4*n6 + 44*d*n4*n6 - 
      7*d^2*n4*n6 + 8*n1*n4*n6 - 2*d*n1*n4*n6 - 32*n3*n4*n6 + 8*d*n3*n4*n6 - 
      16*n4^2*n6 + 4*d*n4^2*n6 - 48*n6^2 + 40*d*n6^2 - 8*d^2*n6^2 + 
      8*n1*n6^2 - 4*d*n1*n6^2 - 40*n3*n6^2 + 16*d*n3*n6^2 + 4*n1*n3*n6^2 - 
      8*n3^2*n6^2 - 40*n4*n6^2 + 16*d*n4*n6^2 + 4*n1*n4*n6^2 - 
      16*n3*n4*n6^2 - 8*n4^2*n6^2 - 8*n6^3 + 4*d*n6^3 - 4*n3*n6^3 - 
      4*n4*n6^3)*j[p4a, n1, 1, n3, n4, 0, 1 + n6, 0, 0, 2, 1, 1, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((4*n6 - d*n6 + 8*n1*n6 - 2*d*n1*n6 - 8*n3*n6 + 2*d*n3*n6 + 6*n4*n6 - 
      2*d*n4*n6 + 2*n1*n4*n6 + 2*n4^2*n6 - 8*n6^2 + 3*d*n6^2 + 2*n1*n6^2 - 
      4*n3*n6^2 - 2*n4*n6^2 - 2*n6^3)*j[p4a, n1, 1, n3, n4, 0, 1 + n6, 0, 1, 
      0, 1, 1, -1, 1, 2])/(2*(-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 
      6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 
      14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 
      2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 
      6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   ((-832*n6 + 1280*d*n6 - 716*d^2*n6 + 172*d^3*n6 - 15*d^4*n6 + 320*n1*n6 - 
      336*d*n1*n6 + 104*d^2*n1*n6 - 10*d^3*n1*n6 + 64*n1^2*n6 - 
      64*d*n1^2*n6 + 12*d^2*n1^2*n6 - 32*n1^3*n6 + 8*d*n1^3*n6 - 1344*n3*n6 + 
      1416*d*n3*n6 - 470*d^2*n3*n6 + 50*d^3*n3*n6 + 144*n1*n3*n6 - 
      20*d*n1*n3*n6 - 4*d^2*n1*n3*n6 + 128*n1^2*n3*n6 - 32*d*n1^2*n3*n6 - 
      544*n3^2*n6 + 296*d*n3^2*n6 - 40*d^2*n3^2*n6 - 128*n1*n3^2*n6 + 
      32*d*n1*n3^2*n6 - 1344*n4*n6 + 1560*d*n4*n6 - 584*d^2*n4*n6 + 
      71*d^3*n4*n6 + 432*n1*n4*n6 - 272*d*n1*n4*n6 + 40*d^2*n1*n4*n6 + 
      80*n1^2*n4*n6 - 36*d*n1^2*n4*n6 - 16*n1^3*n4*n6 - 1664*n3*n4*n6 + 
      1144*d*n3*n4*n6 - 192*d^2*n3*n4*n6 + 32*n1*n3*n4*n6 + 
      16*d*n1*n3*n4*n6 + 64*n1^2*n3*n4*n6 - 384*n3^2*n4*n6 + 
      112*d*n3^2*n4*n6 - 64*n1*n3^2*n4*n6 - 880*n4^2*n6 + 680*d*n4^2*n6 - 
      128*d^2*n4^2*n6 + 176*n1*n4^2*n6 - 48*d*n1*n4^2*n6 + 32*n1^2*n4^2*n6 - 
      704*n3*n4^2*n6 + 240*d*n3*n4^2*n6 - 32*n1*n3*n4^2*n6 - 
      64*n3^2*n4^2*n6 - 272*n4^3*n6 + 104*d*n4^3*n6 + 16*n1*n4^3*n6 - 
      96*n3*n4^3*n6 - 32*n4^4*n6 - 592*n6^2 + 692*d*n6^2 - 250*d^2*n6^2 + 
      28*d^3*n6^2 + 128*n1*n6^2 - 84*d*n1*n6^2 + 12*d^2*n1*n6^2 + 
      32*n1^2*n6^2 - 8*d*n1^2*n6^2 - 720*n3*n6^2 + 464*d*n3*n6^2 - 
      68*d^2*n3*n6^2 + 8*n1*n3*n6^2 - 144*n3^2*n6^2 + 32*d*n3^2*n6^2 - 
      744*n4*n6^2 + 548*d*n4*n6^2 - 94*d^2*n4*n6^2 + 112*n1*n4*n6^2 - 
      28*d*n1*n4*n6^2 + 16*n1^2*n4*n6^2 - 544*n3*n4*n6^2 + 160*d*n3*n4*n6^2 - 
      16*n1*n3*n4*n6^2 - 32*n3^2*n4*n6^2 - 296*n4^2*n6^2 + 100*d*n4^2*n6^2 + 
      8*n1*n4^2*n6^2 - 80*n3*n4^2*n6^2 - 32*n4^3*n6^2 - 192*n6^3 + 
      160*d*n6^3 - 30*d^2*n6^3 + 56*n1*n6^3 - 24*d*n1*n6^3 - 8*n1^2*n6^3 - 
      184*n3*n6^3 + 64*d*n3*n6^3 + 32*n1*n3*n6^3 - 32*n3^2*n6^3 - 
      192*n4*n6^3 + 72*d*n4*n6^3 + 32*n1*n4*n6^3 - 80*n3*n4*n6^3 - 
      40*n4^2*n6^3 - 56*n6^4 + 24*d*n6^4 + 16*n1*n6^4 - 32*n3*n6^4 - 
      32*n4*n6^4 - 8*n6^5)*j[p4a, n1, 1, n3, n4, 0, 1 + n6, 0, 1, 0, 1, 1, 0, 
      1, 1])/(4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((1504*n6 - 2000*d*n6 + 962*d^2*n6 - 199*d^3*n6 + 15*d^4*n6 - 560*n1*n6 + 
      500*d*n1*n6 - 142*d^2*n1*n6 + 13*d^3*n1*n6 + 16*d*n1^2*n6 - 
      4*d^2*n1^2*n6 + 16*n1^3*n6 - 4*d*n1^3*n6 + 1952*n3*n6 - 1816*d*n3*n6 + 
      544*d^2*n3*n6 - 53*d^3*n3*n6 - 320*n1*n3*n6 + 136*d*n1*n3*n6 - 
      14*d^2*n1*n3*n6 - 64*n1^2*n3*n6 + 16*d*n1^2*n3*n6 + 704*n3^2*n6 - 
      376*d*n3^2*n6 + 50*d^2*n3^2*n6 + 48*n1*n3^2*n6 - 12*d*n1*n3^2*n6 + 
      32*n3^3*n6 - 8*d*n3^3*n6 + 2224*n4*n6 - 2152*d*n4*n6 + 680*d^2*n4*n6 - 
      71*d^3*n4*n6 - 592*n1*n4*n6 + 344*d*n1*n4*n6 - 50*d^2*n1*n4*n6 - 
      48*n1^2*n4*n6 + 24*d*n1^2*n4*n6 + 16*n1^3*n4*n6 + 2112*n3*n4*n6 - 
      1304*d*n3*n4*n6 + 202*d^2*n3*n4*n6 - 112*n1*n3*n4*n6 + 
      12*d*n1*n3*n4*n6 - 64*n1^2*n3*n4*n6 + 448*n3^2*n4*n6 - 
      128*d*n3^2*n4*n6 + 64*n1*n3^2*n4*n6 + 1216*n4^2*n6 - 784*d*n4^2*n6 + 
      128*d^2*n4^2*n6 - 192*n1*n4^2*n6 + 56*d*n1*n4^2*n6 - 32*n1^2*n4^2*n6 + 
      768*n3*n4^2*n6 - 248*d*n3*n4^2*n6 + 32*n1*n3*n4^2*n6 + 
      64*n3^2*n4^2*n6 + 304*n4^3*n6 - 104*d*n4^3*n6 - 16*n1*n4^3*n6 + 
      96*n3*n4^3*n6 + 32*n4^4*n6 + 1056*n6^2 - 1012*d*n6^2 + 304*d^2*n6^2 - 
      28*d^3*n6^2 - 328*n1*n6^2 + 196*d*n1*n6^2 - 26*d^2*n1*n6^2 + 
      48*n1^2*n6^2 - 16*d*n1^2*n6^2 - 8*n1^3*n6^2 + 1072*n3*n6^2 - 
      624*d*n3*n6^2 + 82*d^2*n3*n6^2 - 208*n1*n3*n6^2 + 56*d*n1*n3*n6^2 + 
      32*n1^2*n3*n6^2 + 272*n3^2*n6^2 - 64*d*n3^2*n6^2 - 40*n1*n3^2*n6^2 + 
      16*n3^3*n6^2 + 1144*n4*n6^2 - 684*d*n4*n6^2 + 94*d^2*n4*n6^2 - 
      240*n1*n4*n6^2 + 60*d*n1*n4*n6^2 + 8*n1^2*n4*n6^2 + 736*n3*n4*n6^2 - 
      192*d*n3*n4*n6^2 - 40*n1*n3*n4*n6^2 + 64*n3^2*n4*n6^2 + 376*n4^2*n6^2 - 
      100*d*n4^2*n6^2 - 24*n1*n4^2*n6^2 + 96*n3*n4^2*n6^2 + 32*n4^3*n6^2 + 
      296*n6^3 - 196*d*n6^3 + 30*d^2*n6^3 - 128*n1*n6^3 + 44*d*n1*n6^3 + 
      24*n1^2*n6^3 + 272*n3*n6^3 - 84*d*n3*n6^3 - 72*n1*n3*n6^3 + 
      56*n3^2*n6^3 + 240*n4*n6^3 - 72*d*n4*n6^3 - 56*n1*n4*n6^3 + 
      104*n3*n4*n6^3 + 40*n4^2*n6^3 + 64*n6^4 - 24*d*n6^4 - 24*n1*n6^4 + 
      40*n3*n6^4 + 32*n4*n6^4 + 8*n6^5)*j[p4a, n1, 1, n3, n4, 0, 1 + n6, 0, 
      1, 1, 0, 1, 0, 1, 1])/(4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   ((-64*n6 + 72*d*n6 - 26*d^2*n6 + 3*d^3*n6 + 80*n1*n6 - 52*d*n1*n6 + 
      8*d^2*n1*n6 - 16*n1^2*n6 + 4*d*n1^2*n6 - 96*n3*n6 + 64*d*n3*n6 - 
      10*d^2*n3*n6 + 48*n1*n3*n6 - 12*d*n1*n3*n6 - 32*n3^2*n6 + 8*d*n3^2*n6 - 
      96*n4*n6 + 64*d*n4*n6 - 10*d^2*n4*n6 + 48*n1*n4*n6 - 12*d*n1*n4*n6 - 
      64*n3*n4*n6 + 16*d*n3*n4*n6 - 32*n4^2*n6 + 8*d*n4^2*n6 - 112*n6^2 + 
      80*d*n6^2 - 14*d^2*n6^2 + 72*n1*n6^2 - 24*d*n1*n6^2 - 8*n1^2*n6^2 - 
      96*n3*n6^2 + 32*d*n3*n6^2 + 24*n1*n3*n6^2 - 16*n3^2*n6^2 - 96*n4*n6^2 + 
      32*d*n4*n6^2 + 24*n1*n4*n6^2 - 32*n3*n4*n6^2 - 16*n4^2*n6^2 - 56*n6^3 + 
      20*d*n6^3 + 16*n1*n6^3 - 24*n3*n6^3 - 24*n4*n6^3 - 8*n6^4)*
     j[p4a, n1, 1, n3, n4, 0, 1 + n6, 0, 1, 1, 0, 2, -1, 1, 1])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((64*n6 - 72*d*n6 + 26*d^2*n6 - 3*d^3*n6 - 80*n1*n6 + 52*d*n1*n6 - 
      8*d^2*n1*n6 + 16*n1^2*n6 - 4*d*n1^2*n6 + 96*n3*n6 - 64*d*n3*n6 + 
      10*d^2*n3*n6 - 48*n1*n3*n6 + 12*d*n1*n3*n6 + 32*n3^2*n6 - 8*d*n3^2*n6 + 
      96*n4*n6 - 64*d*n4*n6 + 10*d^2*n4*n6 - 48*n1*n4*n6 + 12*d*n1*n4*n6 + 
      64*n3*n4*n6 - 16*d*n3*n4*n6 + 32*n4^2*n6 - 8*d*n4^2*n6 + 112*n6^2 - 
      80*d*n6^2 + 14*d^2*n6^2 - 72*n1*n6^2 + 24*d*n1*n6^2 + 8*n1^2*n6^2 + 
      96*n3*n6^2 - 32*d*n3*n6^2 - 24*n1*n3*n6^2 + 16*n3^2*n6^2 + 96*n4*n6^2 - 
      32*d*n4*n6^2 - 24*n1*n4*n6^2 + 32*n3*n4*n6^2 + 16*n4^2*n6^2 + 56*n6^3 - 
      20*d*n6^3 - 16*n1*n6^3 + 24*n3*n6^3 + 24*n4*n6^3 + 8*n6^4)*
     j[p4a, n1, 1, n3, n4, 0, 1 + n6, 0, 1, 1, 0, 2, 0, 1, 1])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((-320*n6 + 360*d*n6 - 130*d^2*n6 + 15*d^3*n6 + 16*n1*n6 + 44*d*n1*n6 - 
      36*d^2*n1*n6 + 6*d^3*n1*n6 + 16*n1^2*n6 - 20*d*n1^2*n6 + 
      4*d^2*n1^2*n6 - 416*n3*n6 + 312*d*n3*n6 - 64*d^2*n3*n6 + 3*d^3*n3*n6 + 
      32*n1*n3*n6 + 16*d*n1*n3*n6 - 6*d^2*n1*n3*n6 - 192*n3^2*n6 + 
      88*d*n3^2*n6 - 10*d^2*n3^2*n6 + 16*n1*n3^2*n6 - 4*d*n1*n3^2*n6 - 
      32*n3^3*n6 + 8*d*n3^3*n6 - 224*n4*n6 + 96*d*n4*n6 + 14*d^2*n4*n6 - 
      6*d^3*n4*n6 - 80*n1*n4*n6 + 92*d*n1*n4*n6 - 18*d^2*n1*n4*n6 + 
      16*n1^2*n4*n6 - 4*d*n1^2*n4*n6 - 160*n3*n4*n6 + 24*d*n3*n4*n6 + 
      4*d^2*n3*n4*n6 - 32*n1*n3*n4*n6 + 8*d*n1*n3*n4*n6 - 32*n3^2*n4*n6 + 
      8*d*n3^2*n4*n6 + 32*n4^2*n6 - 64*d*n4^2*n6 + 14*d^2*n4^2*n6 - 
      48*n1*n4^2*n6 + 12*d*n1*n4^2*n6 + 32*n3*n4^2*n6 - 8*d*n3*n4^2*n6 + 
      32*n4^3*n6 - 8*d*n4^3*n6 - 304*n6^2 + 240*d*n6^2 - 46*d^2*n6^2 + 
      8*n1*n6^2 + 40*d*n1*n6^2 - 16*d^2*n1*n6^2 + 8*n1^2*n6^2 - 
      8*d*n1^2*n6^2 - 368*n3*n6^2 + 176*d*n3*n6^2 - 14*d^2*n3*n6^2 + 
      32*n1*n3*n6^2 + 8*d*n1*n3*n6^2 - 144*n3^2*n6^2 + 32*d*n3^2*n6^2 + 
      8*n1*n3^2*n6^2 - 16*n3^3*n6^2 - 160*n4*n6^2 + 16*d*n4*n6^2 + 
      16*d^2*n4*n6^2 - 56*n1*n4*n6^2 + 40*d*n1*n4*n6^2 + 8*n1^2*n4*n6^2 - 
      112*n3*n4*n6^2 - 16*n1*n3*n4*n6^2 - 16*n3^2*n4*n6^2 + 32*n4^2*n6^2 - 
      32*d*n4^2*n6^2 - 24*n1*n4^2*n6^2 + 16*n3*n4^2*n6^2 + 16*n4^3*n6^2 - 
      88*n6^3 + 36*d*n6^3 + 8*d*n1*n6^3 - 96*n3*n6^3 + 20*d*n3*n6^3 + 
      8*n1*n3*n6^3 - 24*n3^2*n6^3 - 24*n4*n6^3 - 8*d*n4*n6^3 - 8*n1*n4*n6^3 - 
      16*n3*n4*n6^3 + 8*n4^2*n6^3 - 8*n6^4 - 8*n3*n6^4)*
     j[p4a, n1, 1, n3, n4, 0, 1 + n6, 0, 1, 1, 1, 0, 0, 1, 1])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((-928*n6 + 1008*d*n6 - 350*d^2*n6 + 39*d^3*n6 - 304*n1*n6 + 500*d*n1*n6 - 
      214*d^2*n1*n6 + 27*d^3*n1*n6 + 160*n1^2*n6 - 88*d*n1^2*n6 + 
      12*d^2*n1^2*n6 + 16*n1^3*n6 - 4*d*n1^3*n6 - 128*n3*n6 - 248*d*n3*n6 + 
      190*d^2*n3*n6 - 30*d^3*n3*n6 - 688*n1*n3*n6 + 444*d*n1*n3*n6 - 
      68*d^2*n1*n3*n6 + 480*n3^2*n6 - 352*d*n3^2*n6 + 58*d^2*n3^2*n6 - 
      112*n1*n3^2*n6 + 28*d*n1*n3^2*n6 + 96*n3^3*n6 - 24*d*n3^3*n6 - 
      1680*n4*n6 + 1432*d*n4*n6 - 394*d^2*n4*n6 + 36*d^3*n4*n6 - 
      400*n1*n4*n6 + 332*d*n1*n4*n6 - 60*d^2*n1*n4*n6 + 80*n1^2*n4*n6 - 
      24*d*n1^2*n4*n6 - 368*n3*n4*n6 + 128*d*n3*n4*n6 - 14*d^2*n3*n4*n6 - 
      336*n1*n3*n4*n6 + 100*d*n1*n3*n4*n6 + 16*n1^2*n3*n4*n6 + 
      96*n3^2*n4*n6 - 16*d*n3^2*n4*n6 - 32*n1*n3^2*n4*n6 - 1088*n4^2*n6 + 
      672*d*n4^2*n6 - 108*d^2*n4^2*n6 - 144*n1*n4^2*n6 + 48*d*n1*n4^2*n6 + 
      16*n1^2*n4^2*n6 - 304*n3*n4^2*n6 + 112*d*n3*n4^2*n6 - 
      48*n1*n3*n4^2*n6 - 32*n3^2*n4^2*n6 - 304*n4^3*n6 + 104*d*n4^3*n6 - 
      16*n1*n4^3*n6 - 64*n3*n4^3*n6 - 32*n4^4*n6 + 224*n6^2 - 604*d*n6^2 + 
      340*d^2*n6^2 - 54*d^3*n6^2 - 504*n1*n6^2 + 404*d*n1*n6^2 - 
      78*d^2*n1*n6^2 + 8*n1^3*n6^2 + 1120*n3*n6^2 - 976*d*n3*n6^2 + 
      200*d^2*n3*n6^2 - 312*n1*n3*n6^2 + 112*d*n1*n3*n6^2 - 16*n1^2*n3*n6^2 + 
      512*n3^2*n6^2 - 192*d*n3^2*n6^2 - 24*n1*n3^2*n6^2 + 48*n3^3*n6^2 + 
      248*n4*n6^2 - 404*d*n4*n6^2 + 108*d^2*n4*n6^2 - 296*n1*n4*n6^2 + 
      116*d*n1*n4*n6^2 - 8*n1^2*n4*n6^2 + 672*n3*n4*n6^2 - 280*d*n3*n4*n6^2 - 
      72*n1*n3*n4*n6^2 + 128*n3^2*n4*n6^2 + 56*n4^2*n6^2 - 52*d*n4^2*n6^2 - 
      40*n1*n4^2*n6^2 + 80*n3*n4^2*n6^2 + 440*n6^3 - 412*d*n6^3 + 
      90*d^2*n6^3 - 128*n1*n6^3 + 52*d*n1*n6^3 - 8*n1^2*n6^3 + 472*n3*n6^3 - 
      192*d*n3*n6^3 - 32*n1*n3*n6^3 + 88*n3^2*n6^3 + 328*n4*n6^3 - 
      148*d*n4*n6^3 - 32*n1*n4*n6^3 + 152*n3*n4*n6^3 + 56*n4^2*n6^3 + 
      112*n6^4 - 48*d*n6^4 - 8*n1*n6^4 + 48*n3*n6^4 + 40*n4*n6^4 + 8*n6^5)*
     j[p4a, n1, 1, n3, n4, 0, 1 + n6, 0, 1, 1, 1, 1, 0, 0, 1])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((112*n6 - 108*d*n6 + 32*d^2*n6 - 3*d^3*n6 - 16*d*n1*n6 + 4*d^2*n1*n6 - 
      16*n1^2*n6 + 4*d*n1^2*n6 + 32*n3*n6 - 2*d^2*n3*n6 + 48*n1*n3*n6 - 
      12*d*n1*n3*n6 - 32*n3^2*n6 + 8*d*n3^2*n6 + 200*n4*n6 - 132*d*n4*n6 + 
      22*d^2*n4*n6 + 16*n1*n4*n6 - 8*d*n1*n4*n6 - 8*n1^2*n4*n6 + 
      48*n3*n4*n6 - 16*d*n3*n4*n6 + 16*n1*n3*n4*n6 + 104*n4^2*n6 - 
      36*d*n4^2*n6 + 8*n1*n4^2*n6 + 16*n3*n4^2*n6 + 16*n4^3*n6 + 32*n6^2 - 
      4*d^2*n6^2 + 16*n1*n6^2 - 8*d*n1*n6^2 - 48*n3*n6^2 + 24*d*n3*n6^2 + 
      8*n1*n3*n6^2 - 16*n3^2*n6^2 + 32*n4*n6^2 - 4*d*n4*n6^2 + 8*n1*n4*n6^2 - 
      16*n3*n4*n6^2 + 8*n4^2*n6^2 + 4*d*n6^3 - 8*n3*n6^3)*
     j[p4a, n1, 1, n3, n4, 0, 1 + n6, 0, 1, 1, 1, 1, 0, 0, 2])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((-544*n6 + 576*d*n6 - 194*d^2*n6 + 21*d^3*n6 - 464*n1*n6 + 516*d*n1*n6 - 
      172*d^2*n1*n6 + 18*d^3*n1*n6 + 112*n1^2*n6 - 28*d*n1^2*n6 + 
      32*n1^3*n6 - 8*d*n1^3*n6 + 608*n3*n6 - 808*d*n3*n6 + 308*d^2*n3*n6 - 
      36*d^3*n3*n6 - 544*n1*n3*n6 + 232*d*n1*n3*n6 - 24*d^2*n1*n3*n6 - 
      128*n1^2*n3*n6 + 32*d*n1^2*n3*n6 + 640*n3^2*n6 - 352*d*n3^2*n6 + 
      48*d^2*n3^2*n6 + 128*n1*n3^2*n6 - 32*d*n1*n3^2*n6 - 1040*n4*n6 + 
      944*d*n4*n6 - 288*d^2*n4*n6 + 30*d^3*n4*n6 - 416*n1*n4*n6 + 
      256*d*n1*n4*n6 - 40*d^2*n1*n4*n6 + 16*n1^2*n4*n6 - 8*d*n1^2*n4*n6 + 
      416*n3*n4*n6 - 264*d*n3*n4*n6 + 38*d^2*n3*n4*n6 - 112*n1*n3*n4*n6 + 
      36*d*n1*n3*n4*n6 + 160*n3^2*n4*n6 - 40*d*n3^2*n4*n6 - 800*n4^2*n6 + 
      544*d*n4^2*n6 - 94*d^2*n4^2*n6 - 96*n1*n4^2*n6 + 36*d*n1*n4^2*n6 + 
      16*n1^2*n4^2*n6 - 64*n3*n4^2*n6 + 32*d*n3*n4^2*n6 - 32*n1*n3*n4^2*n6 - 
      272*n4^3*n6 + 96*d*n4^3*n6 - 16*n1*n4^3*n6 - 32*n3*n4^3*n6 - 
      32*n4^4*n6 + 768*n6^2 - 1004*d*n6^2 + 412*d^2*n6^2 - 54*d^3*n6^2 - 
      600*n1*n6^2 + 348*d*n1*n6^2 - 48*d^2*n1*n6^2 - 56*n1^2*n6^2 + 
      32*d*n1^2*n6^2 + 16*n1^3*n6^2 + 1520*n3*n6^2 - 1056*d*n3*n6^2 + 
      180*d^2*n3*n6^2 - 80*n1*n3*n6^2 - 8*d*n1*n3*n6^2 - 64*n1^2*n3*n6^2 + 
      384*n3^2*n6^2 - 112*d*n3^2*n6^2 + 64*n1*n3^2*n6^2 + 808*n4*n6^2 - 
      644*d*n4*n6^2 + 124*d^2*n4*n6^2 - 240*n1*n4*n6^2 + 60*d*n1*n4*n6^2 - 
      40*n1^2*n4*n6^2 + 864*n3*n4*n6^2 - 288*d*n3*n4*n6^2 + 
      40*n1*n3*n4*n6^2 + 80*n3^2*n4*n6^2 + 216*n4^2*n6^2 - 84*d*n4^2*n6^2 - 
      16*n1*n4^2*n6^2 + 112*n3*n4^2*n6^2 + 16*n4^3*n6^2 + 680*n6^3 - 
      500*d*n6^3 + 90*d^2*n6^3 - 120*n1*n6^3 + 24*d*n1*n6^3 - 24*n1^2*n6^3 + 
      480*n3*n6^3 - 152*d*n3*n6^3 + 32*n1*n3*n6^3 + 32*n3^2*n6^3 + 
      448*n4*n6^3 - 156*d*n4*n6^3 + 120*n3*n4*n6^3 + 64*n4^2*n6^3 + 
      144*n6^4 - 48*d*n6^4 + 32*n3*n6^4 + 40*n4*n6^4 + 8*n6^5)*
     j[p4a, n1, 1, n3, n4, 0, 1 + n6, 0, 1, 1, 1, 1, 0, 1, 0])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((-1216*n6 + 1752*d*n6 - 926*d^2*n6 + 213*d^3*n6 - 18*d^4*n6 + 624*n1*n6 - 
      652*d*n1*n6 + 220*d^2*n1*n6 - 24*d^3*n1*n6 - 80*n1^2*n6 + 
      52*d*n1^2*n6 - 8*d^2*n1^2*n6 - 1568*n3*n6 + 1600*d*n3*n6 - 
      530*d^2*n3*n6 + 57*d^3*n3*n6 + 464*n1*n3*n6 - 292*d*n1*n3*n6 + 
      44*d^2*n1*n3*n6 - 16*n1^2*n3*n6 + 4*d*n1^2*n3*n6 - 608*n3^2*n6 + 
      376*d*n3^2*n6 - 56*d^2*n3^2*n6 + 64*n1*n3^2*n6 - 16*d*n1*n3^2*n6 - 
      64*n3^3*n6 + 16*d*n3^3*n6 - 2048*n4*n6 + 2164*d*n4*n6 - 746*d^2*n4*n6 + 
      84*d^3*n4*n6 + 648*n1*n4*n6 - 412*d*n1*n4*n6 + 62*d^2*n1*n4*n6 - 
      8*d*n1^2*n4*n6 - 8*n1^3*n4*n6 - 1776*n3*n4*n6 + 1160*d*n3*n4*n6 - 
      184*d^2*n3*n4*n6 + 176*n1*n3*n4*n6 - 32*d*n1*n3*n4*n6 + 
      32*n1^2*n3*n4*n6 - 352*n3^2*n4*n6 + 96*d*n3^2*n4*n6 - 
      32*n1*n3^2*n4*n6 - 1264*n4^2*n6 + 868*d*n4^2*n6 - 146*d^2*n4^2*n6 + 
      168*n1*n4^2*n6 - 40*d*n1*n4^2*n6 + 24*n1^2*n4^2*n6 - 624*n3*n4^2*n6 + 
      192*d*n3*n4^2*n6 - 32*n1*n3*n4^2*n6 - 32*n3^2*n4^2*n6 - 336*n4^3*n6 + 
      112*d*n4^3*n6 - 64*n3*n4^3*n6 - 32*n4^4*n6 - 944*n6^2 + 1028*d*n6^2 - 
      364*d^2*n6^2 + 42*d^3*n6^2 + 400*n1*n6^2 - 308*d*n1*n6^2 + 
      58*d^2*n1*n6^2 - 72*n1^2*n6^2 + 32*d*n1^2*n6^2 + 8*n1^3*n6^2 - 
      912*n3*n6^2 + 640*d*n3*n6^2 - 110*d^2*n3*n6^2 + 280*n1*n3*n6^2 - 
      112*d*n1*n3*n6^2 - 40*n1^2*n3*n6^2 - 272*n3^2*n6^2 + 96*d*n3^2*n6^2 + 
      64*n1*n3^2*n6^2 - 32*n3^3*n6^2 - 1192*n4*n6^2 + 844*d*n4*n6^2 - 
      146*d^2*n4*n6^2 + 304*n1*n4*n6^2 - 112*d*n1*n4*n6^2 - 24*n1^2*n4*n6^2 - 
      704*n3*n4*n6^2 + 240*d*n3*n4*n6^2 + 96*n1*n3*n4*n6^2 - 
      96*n3^2*n4*n6^2 - 488*n4^2*n6^2 + 168*d*n4^2*n6^2 + 48*n1*n4^2*n6^2 - 
      128*n3*n4^2*n6^2 - 64*n4^3*n6^2 - 224*n6^3 + 172*d*n6^3 - 32*d^2*n6^3 + 
      88*n1*n6^3 - 40*d*n1*n6^3 - 16*n1^2*n6^3 - 152*n3*n6^3 + 60*d*n3*n6^3 + 
      48*n1*n3*n6^3 - 32*n3^2*n6^3 - 192*n4*n6^3 + 72*d*n4*n6^3 + 
      40*n1*n4*n6^3 - 64*n3*n4*n6^3 - 40*n4^2*n6^3 - 16*n6^4 + 8*d*n6^4 + 
      8*n1*n6^4 - 8*n3*n6^4 - 8*n4*n6^4)*j[p4a, n1, 1, n3, n4, 0, 1 + n6, 0, 
      1, 1, 1, 1, 0, 1, 1])/(4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   ((-64*n6 + 72*d*n6 - 26*d^2*n6 + 3*d^3*n6 + 16*n1*n6 - 12*d*n1*n6 + 
      2*d^2*n1*n6 - 64*n3*n6 + 44*d*n3*n6 - 7*d^2*n3*n6 + 8*n1*n3*n6 - 
      2*d*n1*n3*n6 - 16*n3^2*n6 + 4*d*n3^2*n6 - 64*n4*n6 + 44*d*n4*n6 - 
      7*d^2*n4*n6 + 8*n1*n4*n6 - 2*d*n1*n4*n6 - 32*n3*n4*n6 + 8*d*n3*n4*n6 - 
      16*n4^2*n6 + 4*d*n4^2*n6 - 48*n6^2 + 40*d*n6^2 - 8*d^2*n6^2 + 
      8*n1*n6^2 - 4*d*n1*n6^2 - 40*n3*n6^2 + 16*d*n3*n6^2 + 4*n1*n3*n6^2 - 
      8*n3^2*n6^2 - 40*n4*n6^2 + 16*d*n4*n6^2 + 4*n1*n4*n6^2 - 
      16*n3*n4*n6^2 - 8*n4^2*n6^2 - 8*n6^3 + 4*d*n6^3 - 4*n3*n6^3 - 
      4*n4*n6^3)*j[p4a, n1, 1, n3, n4, 0, 1 + n6, 0, 1, 1, 2, 0, -1, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((64*n6 - 72*d*n6 + 26*d^2*n6 - 3*d^3*n6 - 16*n1*n6 + 12*d*n1*n6 - 
      2*d^2*n1*n6 + 64*n3*n6 - 44*d*n3*n6 + 7*d^2*n3*n6 - 8*n1*n3*n6 + 
      2*d*n1*n3*n6 + 16*n3^2*n6 - 4*d*n3^2*n6 + 64*n4*n6 - 44*d*n4*n6 + 
      7*d^2*n4*n6 - 8*n1*n4*n6 + 2*d*n1*n4*n6 + 32*n3*n4*n6 - 8*d*n3*n4*n6 + 
      16*n4^2*n6 - 4*d*n4^2*n6 + 48*n6^2 - 40*d*n6^2 + 8*d^2*n6^2 - 
      8*n1*n6^2 + 4*d*n1*n6^2 + 40*n3*n6^2 - 16*d*n3*n6^2 - 4*n1*n3*n6^2 + 
      8*n3^2*n6^2 + 40*n4*n6^2 - 16*d*n4*n6^2 - 4*n1*n4*n6^2 + 
      16*n3*n4*n6^2 + 8*n4^2*n6^2 + 8*n6^3 - 4*d*n6^3 + 4*n3*n6^3 + 
      4*n4*n6^3)*j[p4a, n1, 1, n3, n4, 0, 1 + n6, 0, 1, 1, 2, 0, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((-328*n6 + 402*d*n6 - 161*d^2*n6 + 21*d^3*n6 + 128*n1*n6 - 90*d*n1*n6 + 
      14*d^2*n1*n6 + 16*n1^2*n6 - 12*d*n1^2*n6 - 8*n1^3*n6 - 432*n3*n6 + 
      332*d*n3*n6 - 61*d^2*n3*n6 + 40*n1*n3*n6 + 2*d*n1*n3*n6 + 
      32*n1^2*n3*n6 - 144*n3^2*n6 + 44*d*n3^2*n6 - 32*n1*n3^2*n6 - 
      444*n4*n6 + 350*d*n4*n6 - 67*d^2*n4*n6 + 80*n1*n4*n6 - 20*d*n1*n4*n6 + 
      20*n1^2*n4*n6 - 344*n3*n4*n6 + 120*d*n3*n4*n6 - 24*n1*n3*n4*n6 - 
      32*n3^2*n4*n6 - 188*n4^2*n6 + 70*d*n4^2*n6 + 4*n1*n4^2*n6 - 
      56*n3*n4^2*n6 - 24*n4^3*n6 - 256*n6^2 + 208*d*n6^2 - 41*d^2*n6^2 + 
      44*n1*n6^2 - 12*d*n1*n6^2 + 12*n1^2*n6^2 - 208*n3*n6^2 + 76*d*n3*n6^2 - 
      12*n1*n3*n6^2 - 24*n3^2*n6^2 - 224*n4*n6^2 + 86*d*n4*n6^2 + 
      4*n1*n4*n6^2 - 72*n3*n4*n6^2 - 44*n4^2*n6^2 - 60*n6^3 + 24*d*n6^3 - 
      20*n3*n6^3 - 24*n4*n6^3 - 4*n6^4)*j[p4a, n1, 1, n3, n4, 0, 1 + n6, 0, 
      1, 2, 0, 1, 0, 1, 1])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   ((64*n6 - 72*d*n6 + 26*d^2*n6 - 3*d^3*n6 - 16*n1*n6 + 12*d*n1*n6 - 
      2*d^2*n1*n6 + 64*n3*n6 - 44*d*n3*n6 + 7*d^2*n3*n6 - 8*n1*n3*n6 + 
      2*d*n1*n3*n6 + 16*n3^2*n6 - 4*d*n3^2*n6 + 64*n4*n6 - 44*d*n4*n6 + 
      7*d^2*n4*n6 - 8*n1*n4*n6 + 2*d*n1*n4*n6 + 32*n3*n4*n6 - 8*d*n3*n4*n6 + 
      16*n4^2*n6 - 4*d*n4^2*n6 + 48*n6^2 - 40*d*n6^2 + 8*d^2*n6^2 - 
      8*n1*n6^2 + 4*d*n1*n6^2 + 40*n3*n6^2 - 16*d*n3*n6^2 - 4*n1*n3*n6^2 + 
      8*n3^2*n6^2 + 40*n4*n6^2 - 16*d*n4*n6^2 - 4*n1*n4*n6^2 + 
      16*n3*n4*n6^2 + 8*n4^2*n6^2 + 8*n6^3 - 4*d*n6^3 + 4*n3*n6^3 + 
      4*n4*n6^3)*j[p4a, n1, 1, n3, n4, 0, 1 + n6, 0, 1, 2, 1, 0, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((-352*n6 + 420*d*n6 - 164*d^2*n6 + 21*d^3*n6 + 24*n1*n6 - 16*d*n1*n6 + 
      2*d^2*n1*n6 + 48*n1^2*n6 - 20*d*n1^2*n6 - 8*n1^3*n6 - 368*n3*n6 + 
      280*d*n3*n6 - 52*d^2*n3*n6 - 48*n1*n3*n6 + 24*d*n1*n3*n6 + 
      32*n1^2*n3*n6 - 96*n3^2*n6 + 32*d*n3^2*n6 - 32*n1*n3^2*n6 - 464*n4*n6 + 
      364*d*n4*n6 - 70*d^2*n4*n6 + 8*n1*n4*n6 + 24*n1^2*n4*n6 - 
      304*n3*n4*n6 + 112*d*n3*n4*n6 - 32*n1*n3*n4*n6 - 32*n3^2*n4*n6 - 
      208*n4^2*n6 + 80*d*n4^2*n6 - 64*n3*n4^2*n6 - 32*n4^3*n6 - 152*n6^2 + 
      128*d*n6^2 - 26*d^2*n6^2 - 64*n1*n6^2 + 24*d*n1*n6^2 + 24*n1^2*n6^2 - 
      80*n3*n6^2 + 32*d*n3*n6^2 - 48*n1*n3*n6^2 - 136*n4*n6^2 + 
      56*d*n4*n6^2 - 32*n1*n4*n6^2 - 32*n3*n4*n6^2 - 32*n4^2*n6^2 + 16*n6^3 - 
      4*d*n6^3 - 24*n1*n6^3 + 16*n3*n6^3 + 8*n4*n6^3 + 8*n6^4)*
     j[p4a, n1, 1, n3, n4, 0, 1 + n6, 0, 1, 2, 1, 1, 0, 1, 0])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((352*n6 - 420*d*n6 + 164*d^2*n6 - 21*d^3*n6 - 24*n1*n6 + 16*d*n1*n6 - 
      2*d^2*n1*n6 - 48*n1^2*n6 + 20*d*n1^2*n6 + 8*n1^3*n6 + 368*n3*n6 - 
      280*d*n3*n6 + 52*d^2*n3*n6 + 48*n1*n3*n6 - 24*d*n1*n3*n6 - 
      32*n1^2*n3*n6 + 96*n3^2*n6 - 32*d*n3^2*n6 + 32*n1*n3^2*n6 + 464*n4*n6 - 
      364*d*n4*n6 + 70*d^2*n4*n6 - 8*n1*n4*n6 - 24*n1^2*n4*n6 + 
      304*n3*n4*n6 - 112*d*n3*n4*n6 + 32*n1*n3*n4*n6 + 32*n3^2*n4*n6 + 
      208*n4^2*n6 - 80*d*n4^2*n6 + 64*n3*n4^2*n6 + 32*n4^3*n6 + 152*n6^2 - 
      128*d*n6^2 + 26*d^2*n6^2 + 64*n1*n6^2 - 24*d*n1*n6^2 - 24*n1^2*n6^2 + 
      80*n3*n6^2 - 32*d*n3*n6^2 + 48*n1*n3*n6^2 + 136*n4*n6^2 - 
      56*d*n4*n6^2 + 32*n1*n4*n6^2 + 32*n3*n4*n6^2 + 32*n4^2*n6^2 - 16*n6^3 + 
      4*d*n6^3 + 24*n1*n6^3 - 16*n3*n6^3 - 8*n4*n6^3 - 8*n6^4)*
     j[p4a, n1, 1, n3, n4, 0, 1 + n6, 0, 1, 2, 1, 1, 0, 1, 1])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   ((1 + n6)*(-64*n6 + 72*d*n6 - 26*d^2*n6 + 3*d^3*n6 + 16*n1*n6 - 
      12*d*n1*n6 + 2*d^2*n1*n6 - 64*n3*n6 + 44*d*n3*n6 - 7*d^2*n3*n6 + 
      8*n1*n3*n6 - 2*d*n1*n3*n6 - 16*n3^2*n6 + 4*d*n3^2*n6 - 64*n4*n6 + 
      44*d*n4*n6 - 7*d^2*n4*n6 + 8*n1*n4*n6 - 2*d*n1*n4*n6 - 32*n3*n4*n6 + 
      8*d*n3*n4*n6 - 16*n4^2*n6 + 4*d*n4^2*n6 - 48*n6^2 + 40*d*n6^2 - 
      8*d^2*n6^2 + 8*n1*n6^2 - 4*d*n1*n6^2 - 40*n3*n6^2 + 16*d*n3*n6^2 + 
      4*n1*n3*n6^2 - 8*n3^2*n6^2 - 40*n4*n6^2 + 16*d*n4*n6^2 + 4*n1*n4*n6^2 - 
      16*n3*n4*n6^2 - 8*n4^2*n6^2 - 8*n6^3 + 4*d*n6^3 - 4*n3*n6^3 - 
      4*n4*n6^3)*j[p4a, n1, 1, n3, n4, 0, 2 + n6, -1, 0, 1, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   ((-4 + d - 2*n4)*(-10 + 3*d - 2*n1 - 2*n4 - 2*n6)*n6*(1 + n6)*
     j[p4a, n1, 1, n3, n4, 0, 2 + n6, -1, 1, 0, 1, 1, 0, 1, 1])/
    (4*(-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   ((-4 + d - 2*n4)*(-10 + 3*d - 2*n1 - 2*n4 - 2*n6)*n6*(1 + n6)*
     j[p4a, n1, 1, n3, n4, 0, 2 + n6, -1, 1, 1, 0, 1, 0, 1, 1])/
    (4*(-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   ((-352*n6 + 420*d*n6 - 164*d^2*n6 + 21*d^3*n6 + 24*n1*n6 - 16*d*n1*n6 + 
      2*d^2*n1*n6 + 48*n1^2*n6 - 20*d*n1^2*n6 - 8*n1^3*n6 - 368*n3*n6 + 
      280*d*n3*n6 - 52*d^2*n3*n6 - 48*n1*n3*n6 + 24*d*n1*n3*n6 + 
      32*n1^2*n3*n6 - 96*n3^2*n6 + 32*d*n3^2*n6 - 32*n1*n3^2*n6 - 464*n4*n6 + 
      364*d*n4*n6 - 70*d^2*n4*n6 + 8*n1*n4*n6 + 24*n1^2*n4*n6 - 
      304*n3*n4*n6 + 112*d*n3*n4*n6 - 32*n1*n3*n4*n6 - 32*n3^2*n4*n6 - 
      208*n4^2*n6 + 80*d*n4^2*n6 - 64*n3*n4^2*n6 - 32*n4^3*n6 - 504*n6^2 + 
      548*d*n6^2 - 190*d^2*n6^2 + 21*d^3*n6^2 - 40*n1*n6^2 + 8*d*n1*n6^2 + 
      2*d^2*n1*n6^2 + 72*n1^2*n6^2 - 20*d*n1^2*n6^2 - 8*n1^3*n6^2 - 
      448*n3*n6^2 + 312*d*n3*n6^2 - 52*d^2*n3*n6^2 - 96*n1*n3*n6^2 + 
      24*d*n1*n3*n6^2 + 32*n1^2*n3*n6^2 - 96*n3^2*n6^2 + 32*d*n3^2*n6^2 - 
      32*n1*n3^2*n6^2 - 600*n4*n6^2 + 420*d*n4*n6^2 - 70*d^2*n4*n6^2 - 
      24*n1*n4*n6^2 + 24*n1^2*n4*n6^2 - 336*n3*n4*n6^2 + 112*d*n3*n4*n6^2 - 
      32*n1*n3*n4*n6^2 - 32*n3^2*n4*n6^2 - 240*n4^2*n6^2 + 80*d*n4^2*n6^2 - 
      64*n3*n4^2*n6^2 - 32*n4^3*n6^2 - 136*n6^3 + 124*d*n6^3 - 26*d^2*n6^3 - 
      88*n1*n6^3 + 24*d*n1*n6^3 + 24*n1^2*n6^3 - 64*n3*n6^3 + 32*d*n3*n6^3 - 
      48*n1*n3*n6^3 - 128*n4*n6^3 + 56*d*n4*n6^3 - 32*n1*n4*n6^3 - 
      32*n3*n4*n6^3 - 32*n4^2*n6^3 + 24*n6^4 - 4*d*n6^4 - 24*n1*n6^4 + 
      16*n3*n6^4 + 8*n4*n6^4 + 8*n6^5)*j[p4a, n1, 1, n3, n4, 0, 2 + n6, -1, 
      1, 1, 1, 1, 0, 1, 1])/(4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   ((1 + n6)*(-64*n6 + 72*d*n6 - 26*d^2*n6 + 3*d^3*n6 + 16*n1*n6 - 
      12*d*n1*n6 + 2*d^2*n1*n6 - 64*n3*n6 + 44*d*n3*n6 - 7*d^2*n3*n6 + 
      8*n1*n3*n6 - 2*d*n1*n3*n6 - 16*n3^2*n6 + 4*d*n3^2*n6 - 64*n4*n6 + 
      44*d*n4*n6 - 7*d^2*n4*n6 + 8*n1*n4*n6 - 2*d*n1*n4*n6 - 32*n3*n4*n6 + 
      8*d*n3*n4*n6 - 16*n4^2*n6 + 4*d*n4^2*n6 - 48*n6^2 + 40*d*n6^2 - 
      8*d^2*n6^2 + 8*n1*n6^2 - 4*d*n1*n6^2 - 40*n3*n6^2 + 16*d*n3*n6^2 + 
      4*n1*n3*n6^2 - 8*n3^2*n6^2 - 40*n4*n6^2 + 16*d*n4*n6^2 + 4*n1*n4*n6^2 - 
      16*n3*n4*n6^2 - 8*n4^2*n6^2 - 8*n6^3 + 4*d*n6^3 - 4*n3*n6^3 - 
      4*n4*n6^3)*j[p4a, n1, 1, n3, n4, 0, 2 + n6, 0, 0, 1, 1, 1, -1, 1, 1])/
    (2*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((1 + n6)*(-352*n6 + 420*d*n6 - 164*d^2*n6 + 21*d^3*n6 + 24*n1*n6 - 
      16*d*n1*n6 + 2*d^2*n1*n6 + 48*n1^2*n6 - 20*d*n1^2*n6 - 8*n1^3*n6 - 
      368*n3*n6 + 280*d*n3*n6 - 52*d^2*n3*n6 - 48*n1*n3*n6 + 24*d*n1*n3*n6 + 
      32*n1^2*n3*n6 - 96*n3^2*n6 + 32*d*n3^2*n6 - 32*n1*n3^2*n6 - 464*n4*n6 + 
      364*d*n4*n6 - 70*d^2*n4*n6 + 8*n1*n4*n6 + 24*n1^2*n4*n6 - 
      304*n3*n4*n6 + 112*d*n3*n4*n6 - 32*n1*n3*n4*n6 - 32*n3^2*n4*n6 - 
      208*n4^2*n6 + 80*d*n4^2*n6 - 64*n3*n4^2*n6 - 32*n4^3*n6 - 152*n6^2 + 
      128*d*n6^2 - 26*d^2*n6^2 - 64*n1*n6^2 + 24*d*n1*n6^2 + 24*n1^2*n6^2 - 
      80*n3*n6^2 + 32*d*n3*n6^2 - 48*n1*n3*n6^2 - 136*n4*n6^2 + 
      56*d*n4*n6^2 - 32*n1*n4*n6^2 - 32*n3*n4*n6^2 - 32*n4^2*n6^2 + 16*n6^3 - 
      4*d*n6^3 - 24*n1*n6^3 + 16*n3*n6^3 + 8*n4*n6^3 + 8*n6^4)*
     j[p4a, n1, 1, n3, n4, 0, 2 + n6, 0, 0, 1, 1, 1, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((-4 + d - 2*n4)*(-10 + 3*d - 2*n1 - 2*n4 - 2*n6)*n6*(1 + n6)*
     j[p4a, n1, 1, n3, n4, 0, 2 + n6, 0, 1, 0, 1, 1, -1, 1, 1])/
    (4*(-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   ((-4 + d - 2*n4)*(-10 + 3*d - 2*n1 - 2*n4 - 2*n6)*n6*(1 + n6)*
     j[p4a, n1, 1, n3, n4, 0, 2 + n6, 0, 1, 1, 0, 1, -1, 1, 1])/
    (4*(-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   ((1 + n6)*(-352*n6 + 420*d*n6 - 164*d^2*n6 + 21*d^3*n6 + 24*n1*n6 - 
      16*d*n1*n6 + 2*d^2*n1*n6 + 48*n1^2*n6 - 20*d*n1^2*n6 - 8*n1^3*n6 - 
      368*n3*n6 + 280*d*n3*n6 - 52*d^2*n3*n6 - 48*n1*n3*n6 + 24*d*n1*n3*n6 + 
      32*n1^2*n3*n6 - 96*n3^2*n6 + 32*d*n3^2*n6 - 32*n1*n3^2*n6 - 464*n4*n6 + 
      364*d*n4*n6 - 70*d^2*n4*n6 + 8*n1*n4*n6 + 24*n1^2*n4*n6 - 
      304*n3*n4*n6 + 112*d*n3*n4*n6 - 32*n1*n3*n4*n6 - 32*n3^2*n4*n6 - 
      208*n4^2*n6 + 80*d*n4^2*n6 - 64*n3*n4^2*n6 - 32*n4^3*n6 - 152*n6^2 + 
      128*d*n6^2 - 26*d^2*n6^2 - 64*n1*n6^2 + 24*d*n1*n6^2 + 24*n1^2*n6^2 - 
      80*n3*n6^2 + 32*d*n3*n6^2 - 48*n1*n3*n6^2 - 136*n4*n6^2 + 
      56*d*n4*n6^2 - 32*n1*n4*n6^2 - 32*n3*n4*n6^2 - 32*n4^2*n6^2 + 16*n6^3 - 
      4*d*n6^3 - 24*n1*n6^3 + 16*n3*n6^3 + 8*n4*n6^3 + 8*n6^4)*
     j[p4a, n1, 1, n3, n4, 0, 2 + n6, 0, 1, 1, 1, 1, -1, 1, 1])/
    (4*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((-352*n6 + 420*d*n6 - 164*d^2*n6 + 21*d^3*n6 + 24*n1*n6 - 16*d*n1*n6 + 
      2*d^2*n1*n6 + 48*n1^2*n6 - 20*d*n1^2*n6 - 8*n1^3*n6 - 368*n3*n6 + 
      280*d*n3*n6 - 52*d^2*n3*n6 - 48*n1*n3*n6 + 24*d*n1*n3*n6 + 
      32*n1^2*n3*n6 - 96*n3^2*n6 + 32*d*n3^2*n6 - 32*n1*n3^2*n6 - 464*n4*n6 + 
      364*d*n4*n6 - 70*d^2*n4*n6 + 8*n1*n4*n6 + 24*n1^2*n4*n6 - 
      304*n3*n4*n6 + 112*d*n3*n4*n6 - 32*n1*n3*n4*n6 - 32*n3^2*n4*n6 - 
      208*n4^2*n6 + 80*d*n4^2*n6 - 64*n3*n4^2*n6 - 32*n4^3*n6 - 504*n6^2 + 
      548*d*n6^2 - 190*d^2*n6^2 + 21*d^3*n6^2 - 40*n1*n6^2 + 8*d*n1*n6^2 + 
      2*d^2*n1*n6^2 + 72*n1^2*n6^2 - 20*d*n1^2*n6^2 - 8*n1^3*n6^2 - 
      448*n3*n6^2 + 312*d*n3*n6^2 - 52*d^2*n3*n6^2 - 96*n1*n3*n6^2 + 
      24*d*n1*n3*n6^2 + 32*n1^2*n3*n6^2 - 96*n3^2*n6^2 + 32*d*n3^2*n6^2 - 
      32*n1*n3^2*n6^2 - 600*n4*n6^2 + 420*d*n4*n6^2 - 70*d^2*n4*n6^2 - 
      24*n1*n4*n6^2 + 24*n1^2*n4*n6^2 - 336*n3*n4*n6^2 + 112*d*n3*n4*n6^2 - 
      32*n1*n3*n4*n6^2 - 32*n3^2*n4*n6^2 - 240*n4^2*n6^2 + 80*d*n4^2*n6^2 - 
      64*n3*n4^2*n6^2 - 32*n4^3*n6^2 - 136*n6^3 + 124*d*n6^3 - 26*d^2*n6^3 - 
      88*n1*n6^3 + 24*d*n1*n6^3 + 24*n1^2*n6^3 - 64*n3*n6^3 + 32*d*n3*n6^3 - 
      48*n1*n3*n6^3 - 128*n4*n6^3 + 56*d*n4*n6^3 - 32*n1*n4*n6^3 - 
      32*n3*n4*n6^3 - 32*n4^2*n6^3 + 24*n6^4 - 4*d*n6^4 - 24*n1*n6^4 + 
      16*n3*n6^4 + 8*n4*n6^4 + 8*n6^5)*j[p4a, n1, 1, n3, n4, 0, 2 + n6, 0, 1, 
      1, 1, 1, 0, 0, 1])/(4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   ((-352*n6 + 420*d*n6 - 164*d^2*n6 + 21*d^3*n6 + 24*n1*n6 - 16*d*n1*n6 + 
      2*d^2*n1*n6 + 48*n1^2*n6 - 20*d*n1^2*n6 - 8*n1^3*n6 - 368*n3*n6 + 
      280*d*n3*n6 - 52*d^2*n3*n6 - 48*n1*n3*n6 + 24*d*n1*n3*n6 + 
      32*n1^2*n3*n6 - 96*n3^2*n6 + 32*d*n3^2*n6 - 32*n1*n3^2*n6 - 464*n4*n6 + 
      364*d*n4*n6 - 70*d^2*n4*n6 + 8*n1*n4*n6 + 24*n1^2*n4*n6 - 
      304*n3*n4*n6 + 112*d*n3*n4*n6 - 32*n1*n3*n4*n6 - 32*n3^2*n4*n6 - 
      208*n4^2*n6 + 80*d*n4^2*n6 - 64*n3*n4^2*n6 - 32*n4^3*n6 - 504*n6^2 + 
      548*d*n6^2 - 190*d^2*n6^2 + 21*d^3*n6^2 - 40*n1*n6^2 + 8*d*n1*n6^2 + 
      2*d^2*n1*n6^2 + 72*n1^2*n6^2 - 20*d*n1^2*n6^2 - 8*n1^3*n6^2 - 
      448*n3*n6^2 + 312*d*n3*n6^2 - 52*d^2*n3*n6^2 - 96*n1*n3*n6^2 + 
      24*d*n1*n3*n6^2 + 32*n1^2*n3*n6^2 - 96*n3^2*n6^2 + 32*d*n3^2*n6^2 - 
      32*n1*n3^2*n6^2 - 600*n4*n6^2 + 420*d*n4*n6^2 - 70*d^2*n4*n6^2 - 
      24*n1*n4*n6^2 + 24*n1^2*n4*n6^2 - 336*n3*n4*n6^2 + 112*d*n3*n4*n6^2 - 
      32*n1*n3*n4*n6^2 - 32*n3^2*n4*n6^2 - 240*n4^2*n6^2 + 80*d*n4^2*n6^2 - 
      64*n3*n4^2*n6^2 - 32*n4^3*n6^2 - 136*n6^3 + 124*d*n6^3 - 26*d^2*n6^3 - 
      88*n1*n6^3 + 24*d*n1*n6^3 + 24*n1^2*n6^3 - 64*n3*n6^3 + 32*d*n3*n6^3 - 
      48*n1*n3*n6^3 - 128*n4*n6^3 + 56*d*n4*n6^3 - 32*n1*n4*n6^3 - 
      32*n3*n4*n6^3 - 32*n4^2*n6^3 + 24*n6^4 - 4*d*n6^4 - 24*n1*n6^4 + 
      16*n3*n6^4 + 8*n4*n6^4 + 8*n6^5)*j[p4a, n1, 1, n3, n4, 0, 2 + n6, 0, 1, 
      1, 1, 1, 0, 1, 0])/(4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 8*d^2*n1 - 
      48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 112*n1*n3 - 
      28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 62*d^2*n4 + 
      48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 48*d*n3*n4 + 
      32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 32*n3*n4^2 + 
      32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 24*d*n1*n6 - 
      8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 16*n3^2*n6 + 
      128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 24*n6^2 + 
      12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, n1, 1, n3, 1 + n4, -1, n6, 0, 0, 1, 1, 2, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(4 - d + 2*n4)*n6*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, n3, 1 + n4, -1, 1 + n6, 0, 0, 1, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(-64*n6 + 72*d*n6 - 26*d^2*n6 + 3*d^3*n6 + 80*n1*n6 - 52*d*n1*n6 + 
      8*d^2*n1*n6 - 16*n1^2*n6 + 4*d*n1^2*n6 - 96*n3*n6 + 64*d*n3*n6 - 
      10*d^2*n3*n6 + 48*n1*n3*n6 - 12*d*n1*n3*n6 - 32*n3^2*n6 + 8*d*n3^2*n6 - 
      96*n4*n6 + 64*d*n4*n6 - 10*d^2*n4*n6 + 48*n1*n4*n6 - 12*d*n1*n4*n6 - 
      64*n3*n4*n6 + 16*d*n3*n4*n6 - 32*n4^2*n6 + 8*d*n4^2*n6 - 112*n6^2 + 
      80*d*n6^2 - 14*d^2*n6^2 + 72*n1*n6^2 - 24*d*n1*n6^2 - 8*n1^2*n6^2 - 
      96*n3*n6^2 + 32*d*n3*n6^2 + 24*n1*n3*n6^2 - 16*n3^2*n6^2 - 96*n4*n6^2 + 
      32*d*n4*n6^2 + 24*n1*n4*n6^2 - 32*n3*n4*n6^2 - 16*n4^2*n6^2 - 56*n6^3 + 
      20*d*n6^3 + 16*n1*n6^3 - 24*n3*n6^3 - 24*n4*n6^3 - 8*n6^4)*
     j[p4a, n1, 1, n3, 1 + n4, -1, 1 + n6, 0, 1, 0, 1, 1, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(-64*n6 + 72*d*n6 - 26*d^2*n6 + 3*d^3*n6 + 80*n1*n6 - 52*d*n1*n6 + 
      8*d^2*n1*n6 - 16*n1^2*n6 + 4*d*n1^2*n6 - 96*n3*n6 + 64*d*n3*n6 - 
      10*d^2*n3*n6 + 48*n1*n3*n6 - 12*d*n1*n3*n6 - 32*n3^2*n6 + 8*d*n3^2*n6 - 
      96*n4*n6 + 64*d*n4*n6 - 10*d^2*n4*n6 + 48*n1*n4*n6 - 12*d*n1*n4*n6 - 
      64*n3*n4*n6 + 16*d*n3*n4*n6 - 32*n4^2*n6 + 8*d*n4^2*n6 - 112*n6^2 + 
      80*d*n6^2 - 14*d^2*n6^2 + 72*n1*n6^2 - 24*d*n1*n6^2 - 8*n1^2*n6^2 - 
      96*n3*n6^2 + 32*d*n3*n6^2 + 24*n1*n3*n6^2 - 16*n3^2*n6^2 - 96*n4*n6^2 + 
      32*d*n4*n6^2 + 24*n1*n4*n6^2 - 32*n3*n4*n6^2 - 16*n4^2*n6^2 - 56*n6^3 + 
      20*d*n6^3 + 16*n1*n6^3 - 24*n3*n6^3 - 24*n4*n6^3 - 8*n6^4)*
     j[p4a, n1, 1, n3, 1 + n4, -1, 1 + n6, 0, 1, 1, 0, 1, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(-64*n6 + 72*d*n6 - 26*d^2*n6 + 3*d^3*n6 + 80*n1*n6 - 52*d*n1*n6 + 
      8*d^2*n1*n6 - 16*n1^2*n6 + 4*d*n1^2*n6 - 96*n3*n6 + 64*d*n3*n6 - 
      10*d^2*n3*n6 + 48*n1*n3*n6 - 12*d*n1*n3*n6 - 32*n3^2*n6 + 8*d*n3^2*n6 - 
      96*n4*n6 + 64*d*n4*n6 - 10*d^2*n4*n6 + 48*n1*n4*n6 - 12*d*n1*n4*n6 - 
      64*n3*n4*n6 + 16*d*n3*n4*n6 - 32*n4^2*n6 + 8*d*n4^2*n6 - 112*n6^2 + 
      80*d*n6^2 - 14*d^2*n6^2 + 72*n1*n6^2 - 24*d*n1*n6^2 - 8*n1^2*n6^2 - 
      96*n3*n6^2 + 32*d*n3*n6^2 + 24*n1*n3*n6^2 - 16*n3^2*n6^2 - 96*n4*n6^2 + 
      32*d*n4*n6^2 + 24*n1*n4*n6^2 - 32*n3*n4*n6^2 - 16*n4^2*n6^2 - 56*n6^3 + 
      20*d*n6^3 + 16*n1*n6^3 - 24*n3*n6^3 - 24*n4*n6^3 - 8*n6^4)*
     j[p4a, n1, 1, n3, 1 + n4, -1, 1 + n6, 0, 1, 1, 1, 0, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(-64*n6 + 72*d*n6 - 26*d^2*n6 + 3*d^3*n6 + 80*n1*n6 - 52*d*n1*n6 + 
      8*d^2*n1*n6 - 16*n1^2*n6 + 4*d*n1^2*n6 - 96*n3*n6 + 64*d*n3*n6 - 
      10*d^2*n3*n6 + 48*n1*n3*n6 - 12*d*n1*n3*n6 - 32*n3^2*n6 + 8*d*n3^2*n6 - 
      96*n4*n6 + 64*d*n4*n6 - 10*d^2*n4*n6 + 48*n1*n4*n6 - 12*d*n1*n4*n6 - 
      64*n3*n4*n6 + 16*d*n3*n4*n6 - 32*n4^2*n6 + 8*d*n4^2*n6 - 112*n6^2 + 
      80*d*n6^2 - 14*d^2*n6^2 + 72*n1*n6^2 - 24*d*n1*n6^2 - 8*n1^2*n6^2 - 
      96*n3*n6^2 + 32*d*n3*n6^2 + 24*n1*n3*n6^2 - 16*n3^2*n6^2 - 96*n4*n6^2 + 
      32*d*n4*n6^2 + 24*n1*n4*n6^2 - 32*n3*n4*n6^2 - 16*n4^2*n6^2 - 56*n6^3 + 
      20*d*n6^3 + 16*n1*n6^3 - 24*n3*n6^3 - 24*n4*n6^3 - 8*n6^4)*
     j[p4a, n1, 1, n3, 1 + n4, -1, 1 + n6, 0, 1, 1, 1, 1, 0, 1, 0])/
    (4*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(720*n6 - 756*d*n6 + 252*d^2*n6 - 27*d^3*n6 + 32*n1*n6 - 56*d*n1*n6 + 
      12*d^2*n1*n6 - 80*n1^2*n6 + 20*d*n1^2*n6 + 416*n3*n6 - 224*d*n3*n6 + 
      30*d^2*n3*n6 + 176*n1*n3*n6 - 44*d*n1*n3*n6 - 32*n3^2*n6 + 
      8*d*n3^2*n6 + 920*n4*n6 - 620*d*n4*n6 + 102*d^2*n4*n6 + 80*n1*n4*n6 - 
      32*d*n1*n4*n6 - 24*n1^2*n4*n6 + 272*n3*n4*n6 - 80*d*n3*n4*n6 + 
      48*n1*n3*n4*n6 + 376*n4^2*n6 - 124*d*n4^2*n6 + 24*n1*n4^2*n6 + 
      48*n3*n4^2*n6 + 48*n4^3*n6 + 256*n6^2 - 160*d*n6^2 + 24*d^2*n6^2 + 
      128*n1*n6^2 - 40*d*n1*n6^2 - 16*n1^2*n6^2 - 16*n3*n6^2 + 8*d*n3*n6^2 + 
      40*n1*n3*n6^2 - 16*n3^2*n6^2 + 224*n4*n6^2 - 76*d*n4*n6^2 + 
      40*n1*n4*n6^2 + 16*n3*n4*n6^2 + 56*n4^2*n6^2 - 48*n6^3 + 20*d*n6^3 + 
      32*n1*n6^3 - 40*n3*n6^3 - 16*n4*n6^3 - 16*n6^4)*
     j[p4a, n1, 1, n3, 1 + n4, -1, 1 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 8*d^2*n1 - 
      48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 112*n1*n3 - 
      28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 62*d^2*n4 + 
      48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 48*d*n3*n4 + 
      32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 32*n3*n4^2 + 
      32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 24*d*n1*n6 - 
      8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 16*n3^2*n6 + 
      128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 24*n6^2 + 
      12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, n1, 1, n3, 1 + n4, 0, -1 + n6, 0, 0, 1, 1, 2, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, n3, 1 + n4, 0, -1 + n6, 0, 1, 0, 1, 1, 0, 1, 2])/
    (2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, n3, 1 + n4, 0, -1 + n6, 0, 1, 2, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 8*d^2*n1 - 
      48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 112*n1*n3 - 
      28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 62*d^2*n4 + 
      48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 48*d*n3*n4 + 
      32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 32*n3*n4^2 + 
      32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 24*d*n1*n6 - 
      8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 16*n3^2*n6 + 
      128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 24*n6^2 + 
      12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, n1, 1, n3, 1 + n4, 0, -1 + n6, 0, 2, 1, 1, 0, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 8*d^2*n1 - 
      48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 112*n1*n3 - 
      28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 62*d^2*n4 + 
      48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 48*d*n3*n4 + 
      32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 32*n3*n4^2 + 
      32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 24*d*n1*n6 - 
      8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 16*n3^2*n6 + 
      128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 24*n6^2 + 
      12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, n1, 1, n3, 1 + n4, 0, n6, -1, 0, 1, 1, 2, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, n3, 1 + n4, 0, n6, -1, 0, 1, 2, 1, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, n3, 1 + n4, 0, n6, -1, 1, 1, 2, 0, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, n3, 1 + n4, 0, n6, -1, 1, 1, 2, 1, 0, 0, 1])/
    (4*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, n3, 1 + n4, 0, n6, -1, 2, 1, 1, 0, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, n3, 1 + n4, 0, n6, -1, 2, 1, 1, 1, 0, 0, 1])/
    (4*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(4576 - 6416*d + 3290*d^2 - 733*d^3 + 60*d^4 + 416*n1 - 712*d*n1 + 
      316*d^2*n1 - 41*d^3*n1 - 560*n1^2 + 332*d*n1^2 - 48*d^2*n1^2 - 
      16*n1^3 + 4*d*n1^3 + 3296*n3 - 2992*d*n3 + 886*d^2*n3 - 86*d^3*n3 + 
      1424*n1*n3 - 916*d*n1*n3 + 140*d^2*n1*n3 - 64*n1^2*n3 + 16*d*n1^2*n3 + 
      96*n3^2 - 8*d*n3^2 - 4*d^2*n3^2 + 224*n1*n3^2 - 56*d*n1*n3^2 - 
      64*n3^3 + 16*d*n3^3 + 6992*n4 - 7240*d*n4 + 2470*d^2*n4 - 278*d^3*n4 + 
      888*n1*n4 - 704*d*n1*n4 + 132*d^2*n1*n4 - 272*n1^2*n4 + 84*d*n1^2*n4 - 
      8*n1^3*n4 + 3328*n3*n4 - 2144*d*n3*n4 + 344*d^2*n3*n4 + 784*n1*n3*n4 - 
      256*d*n1*n3*n4 - 16*n1^2*n3*n4 + 256*n3^2*n4 - 80*d*n3^2*n4 + 
      64*n1*n3^2*n4 + 3760*n4^2 - 2592*d*n4^2 + 444*d^2*n4^2 + 408*n1*n4^2 - 
      148*d*n1*n4^2 - 24*n1^2*n4^2 + 1152*n3*n4^2 - 384*d*n3*n4^2 + 
      112*n1*n3*n4^2 + 64*n3^2*n4^2 + 832*n4^3 - 288*d*n4^3 + 48*n1*n4^3 + 
      128*n3*n4^3 + 64*n4^4 + 1504*n6 - 1348*d*n6 + 384*d^2*n6 - 34*d^3*n6 + 
      1160*n1*n6 - 804*d*n1*n6 + 136*d^2*n1*n6 - 152*n1^2*n6 + 48*d*n1^2*n6 - 
      320*n3*n6 + 336*d*n3*n6 - 76*d^2*n3*n6 + 632*n1*n3*n6 - 
      200*d*n1*n3*n6 - 16*n1^2*n3*n6 - 368*n3^2*n6 + 128*d*n3^2*n6 + 
      48*n1*n3^2*n6 - 32*n3^3*n6 + 1608*n4*n6 - 1052*d*n4*n6 + 
      172*d^2*n4*n6 + 680*n1*n4*n6 - 224*d*n1*n4*n6 - 24*n1^2*n4*n6 + 
      48*n3*n4*n6 - 16*d*n3*n4*n6 + 128*n1*n3*n4*n6 - 32*n3^2*n4*n6 + 
      616*n4^2*n6 - 220*d*n4^2*n6 + 80*n1*n4^2*n6 + 80*n3*n4^2*n6 + 
      80*n4^3*n6 - 568*n6^2 + 468*d*n6^2 - 94*d^2*n6^2 + 424*n1*n6^2 - 
      148*d*n1*n6^2 - 24*n1^2*n6^2 - 648*n3*n6^2 + 240*d*n3*n6^2 + 
      112*n1*n3*n6^2 - 112*n3^2*n6^2 - 392*n4*n6^2 + 148*d*n4*n6^2 + 
      120*n1*n4*n6^2 - 176*n3*n4*n6^2 - 56*n4^2*n6^2 - 256*n6^3 + 96*d*n6^3 + 
      48*n1*n6^3 - 96*n3*n6^3 - 88*n4*n6^3 - 24*n6^4)*
     j[p4a, n1, 1, n3, 1 + n4, 0, n6, 0, 0, 1, 1, 1, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, n3, 1 + n4, 0, n6, 0, 0, 1, 1, 1, 0, 1, 2])/
    (2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, n3, 1 + n4, 0, n6, 0, 0, 1, 1, 2, -1, 1, 1])/
    (4*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 8*d^2*n1 - 
      48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 112*n1*n3 - 
      28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 62*d^2*n4 + 
      48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 48*d*n3*n4 + 
      32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 32*n3*n4^2 + 
      32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 24*d*n1*n6 - 
      8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 16*n3^2*n6 + 
      128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 24*n6^2 + 
      12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, n1, 1, n3, 1 + n4, 0, n6, 0, 0, 1, 1, 2, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, n3, 1 + n4, 0, n6, 0, 0, 2, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(960 - 1008*d + 336*d^2 - 36*d^3 + 352*n1 - 472*d*n1 + 168*d^2*n1 - 
      18*d^3*n1 - 128*n1^2 + 32*d*n1^2 - 32*n1^3 + 8*d*n1^3 - 320*n3 + 
      656*d*n3 - 288*d^2*n3 + 36*d^3*n3 + 576*n1*n3 - 240*d*n1*n3 + 
      24*d^2*n1*n3 + 128*n1^2*n3 - 32*d*n1^2*n3 - 640*n3^2 + 352*d*n3^2 - 
      48*d^2*n3^2 - 128*n1*n3^2 + 32*d*n1*n3^2 + 1312*n4 - 880*d*n4 + 
      144*d^2*n4 + 656*n1*n4 - 456*d*n1*n4 + 72*d^2*n1*n4 - 32*n1^2*n4 - 
      8*d*n1^2*n4 - 16*n1^3*n4 - 864*n3*n4 + 752*d*n3*n4 - 144*d^2*n3*n4 + 
      288*n1*n3*n4 - 48*d*n1*n3*n4 + 64*n1^2*n3*n4 - 448*n3^2*n4 + 
      128*d*n3^2*n4 - 64*n1*n3^2*n4 + 544*n4^2 - 176*d*n4^2 + 304*n1*n4^2 - 
      88*d*n1*n4^2 + 16*n1^2*n4^2 - 480*n3*n4^2 + 176*d*n3*n4^2 - 
      64*n3^2*n4^2 + 64*n4^3 + 32*n1*n4^3 - 64*n3*n4^3 + 16*n6 + 220*d*n6 - 
      140*d^2*n6 + 21*d^3*n6 + 480*n1*n6 - 296*d*n1*n6 + 44*d^2*n1*n6 - 
      16*n1^2*n6 + 4*d*n1^2*n6 - 864*n3*n6 + 592*d*n3*n6 - 94*d^2*n3*n6 + 
      144*n1*n3*n6 - 36*d*n1*n3*n6 - 224*n3^2*n6 + 56*d*n3^2*n6 - 200*n4*n6 + 
      292*d*n4*n6 - 70*d^2*n4*n6 + 336*n1*n4*n6 - 96*d*n1*n4*n6 + 
      8*n1^2*n4*n6 - 688*n3*n4*n6 + 224*d*n3*n4*n6 + 16*n1*n3*n4*n6 - 
      64*n3^2*n4*n6 - 136*n4^2*n6 + 68*d*n4^2*n6 + 40*n1*n4^2*n6 - 
      112*n3*n4^2*n6 - 16*n4^3*n6 - 384*n6^2 + 304*d*n6^2 - 56*d^2*n6^2 + 
      192*n1*n6^2 - 64*d*n1*n6^2 - 16*n1^2*n6^2 - 368*n3*n6^2 + 
      120*d*n3*n6^2 + 56*n1*n3*n6^2 - 48*n3^2*n6^2 - 352*n4*n6^2 + 
      132*d*n4*n6^2 + 72*n1*n4*n6^2 - 144*n3*n4*n6^2 - 72*n4^2*n6^2 - 
      144*n6^3 + 52*d*n6^3 + 32*n1*n6^3 - 56*n3*n6^3 - 64*n4*n6^3 - 16*n6^4)*
     j[p4a, n1, 1, n3, 1 + n4, 0, n6, 0, 1, 0, 1, 1, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(960 - 1008*d + 336*d^2 - 36*d^3 + 112*n1 - 220*d*n1 + 84*d^2*n1 - 
      9*d^3*n1 - 96*n1^2 + 24*d*n1^2 - 16*n1^3 + 4*d*n1^3 - 320*n3 + 
      656*d*n3 - 288*d^2*n3 + 36*d^3*n3 + 416*n1*n3 - 152*d*n1*n3 + 
      12*d^2*n1*n3 + 96*n1^2*n3 - 24*d*n1^2*n3 - 640*n3^2 + 352*d*n3^2 - 
      48*d^2*n3^2 - 128*n1*n3^2 + 32*d*n1*n3^2 + 1312*n4 - 880*d*n4 + 
      144*d^2*n4 + 328*n1*n4 - 236*d*n1*n4 + 36*d^2*n1*n4 - 32*n1^2*n4 - 
      4*d*n1^2*n4 - 8*n1^3*n4 - 864*n3*n4 + 752*d*n3*n4 - 144*d^2*n3*n4 + 
      176*n1*n3*n4 - 16*d*n1*n3*n4 + 48*n1^2*n3*n4 - 448*n3^2*n4 + 
      128*d*n3^2*n4 - 64*n1*n3^2*n4 + 544*n4^2 - 176*d*n4^2 + 168*n1*n4^2 - 
      44*d*n1*n4^2 + 8*n1^2*n4^2 - 480*n3*n4^2 + 176*d*n3*n4^2 - 
      16*n1*n3*n4^2 - 64*n3^2*n4^2 + 64*n4^3 + 16*n1*n4^3 - 64*n3*n4^3 + 
      16*n6 + 220*d*n6 - 140*d^2*n6 + 21*d^3*n6 + 352*n1*n6 - 216*d*n1*n6 + 
      32*d^2*n1*n6 - 16*n1^2*n6 + 4*d*n1^2*n6 - 864*n3*n6 + 592*d*n3*n6 - 
      94*d^2*n3*n6 + 112*n1*n3*n6 - 28*d*n1*n3*n6 - 224*n3^2*n6 + 
      56*d*n3^2*n6 - 200*n4*n6 + 292*d*n4*n6 - 70*d^2*n4*n6 + 224*n1*n4*n6 - 
      60*d*n1*n4*n6 + 8*n1^2*n4*n6 - 688*n3*n4*n6 + 224*d*n3*n4*n6 - 
      64*n3^2*n4*n6 - 136*n4^2*n6 + 68*d*n4^2*n6 + 16*n1*n4^2*n6 - 
      112*n3*n4^2*n6 - 16*n4^3*n6 - 384*n6^2 + 304*d*n6^2 - 56*d^2*n6^2 + 
      176*n1*n6^2 - 60*d*n1*n6^2 - 16*n1^2*n6^2 - 368*n3*n6^2 + 
      120*d*n3*n6^2 + 56*n1*n3*n6^2 - 48*n3^2*n6^2 - 352*n4*n6^2 + 
      132*d*n4*n6^2 + 64*n1*n4*n6^2 - 144*n3*n4*n6^2 - 72*n4^2*n6^2 - 
      144*n6^3 + 52*d*n6^3 + 32*n1*n6^3 - 56*n3*n6^3 - 64*n4*n6^3 - 16*n6^4)*
     j[p4a, n1, 1, n3, 1 + n4, 0, n6, 0, 1, 1, 0, 1, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, n3, 1 + n4, 0, n6, 0, 1, 1, 0, 2, -1, 1, 1])/
    (4*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, n3, 1 + n4, 0, n6, 0, 1, 1, 0, 2, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(656 - 684*d + 226*d^2 - 24*d^3 + 224*n1 - 280*d*n1 + 92*d^2*n1 - 
      9*d^3*n1 - 96*n1^2 + 24*d*n1^2 - 16*n1^3 + 4*d*n1^3 - 576*n3 + 
      808*d*n3 - 310*d^2*n3 + 36*d^3*n3 + 432*n1*n3 - 156*d*n1*n3 + 
      12*d^2*n1*n3 + 96*n1^2*n3 - 24*d*n1^2*n3 - 672*n3^2 + 360*d*n3^2 - 
      48*d^2*n3^2 - 128*n1*n3^2 + 32*d*n1*n3^2 + 888*n4 - 596*d*n4 + 
      98*d^2*n4 + 376*n1*n4 - 244*d*n1*n4 + 36*d^2*n1*n4 - 24*n1^2*n4 - 
      4*d*n1^2*n4 - 8*n1^3*n4 - 1040*n3*n4 + 800*d*n3*n4 - 144*d^2*n3*n4 + 
      160*n1*n3*n4 - 16*d*n1*n3*n4 + 48*n1^2*n3*n4 - 448*n3^2*n4 + 
      128*d*n3^2*n4 - 64*n1*n3^2*n4 + 376*n4^2 - 124*d*n4^2 + 160*n1*n4^2 - 
      44*d*n1*n4^2 + 8*n1^2*n4^2 - 496*n3*n4^2 + 176*d*n3*n4^2 - 
      16*n1*n3*n4^2 - 64*n3^2*n4^2 + 48*n4^3 + 16*n1*n4^3 - 64*n3*n4^3 - 
      160*n6 + 308*d*n6 - 140*d^2*n6 + 18*d^3*n6 + 344*n1*n6 - 188*d*n1*n6 + 
      24*d^2*n1*n6 - 8*n1^2*n6 - 896*n3*n6 + 568*d*n3*n6 - 84*d^2*n3*n6 + 
      88*n1*n3*n6 - 16*d*n1*n3*n6 - 208*n3^2*n6 + 48*d*n3^2*n6 - 312*n4*n6 + 
      296*d*n4*n6 - 60*d^2*n4*n6 + 200*n1*n4*n6 - 48*d*n1*n4*n6 + 
      8*n1^2*n4*n6 - 672*n3*n4*n6 + 208*d*n3*n4*n6 - 64*n3^2*n4*n6 - 
      144*n4^2*n6 + 60*d*n4^2*n6 + 16*n1*n4^2*n6 - 112*n3*n4^2*n6 - 
      16*n4^3*n6 - 344*n6^2 + 248*d*n6^2 - 42*d^2*n6^2 + 120*n1*n6^2 - 
      36*d*n1*n6^2 - 8*n1^2*n6^2 - 296*n3*n6^2 + 88*d*n3*n6^2 + 
      32*n1*n3*n6^2 - 32*n3^2*n6^2 - 288*n4*n6^2 + 100*d*n4*n6^2 + 
      40*n1*n4*n6^2 - 112*n3*n4*n6^2 - 56*n4^2*n6^2 - 96*n6^3 + 32*d*n6^3 + 
      16*n1*n6^3 - 32*n3*n6^3 - 40*n4*n6^3 - 8*n6^4)*
     j[p4a, n1, 1, n3, 1 + n4, 0, n6, 0, 1, 1, 1, 0, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - (n4*(4 - d + 2*n4)*(n1 + n3 - n6)*
     (10 - 3*d + 2*n1 + 2*n4 + 2*n6)*j[p4a, n1, 1, n3, 1 + n4, 0, n6, 0, 1, 
      1, 1, 1, 0, 0, 1])/(2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 
      6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 
      14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 
      2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 
      6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(80 - 44*d + 6*d^2 + 56*n1 - 26*d*n1 + 3*d^2*n1 + 8*n1^2 - 2*d*n1^2 - 
      80*n3 + 44*d*n3 - 6*d^2*n3 - 16*n1*n3 + 4*d*n1*n3 + 96*n4 - 48*d*n4 + 
      6*d^2*n4 + 24*n1*n4 - 6*d*n1*n4 - 16*n3*n4 + 4*d*n3*n4 + 36*n4^2 - 
      10*d*n4^2 + 4*n1*n4^2 + 4*n4^3 - 108*n6 + 73*d*n6 - 12*d^2*n6 - 
      4*n1*n6 + 2*d*n1*n6 + 4*n1^2*n6 - 48*n3*n6 + 14*d*n3*n6 - 8*n1*n3*n6 - 
      54*n4*n6 + 18*d*n4*n6 - 6*n1*n4*n6 - 8*n3*n4*n6 - 6*n4^2*n6 - 36*n6^2 + 
      11*d*n6^2 - 2*n1*n6^2 - 4*n3*n6^2 - 10*n4*n6^2 - 2*n6^3)*
     j[p4a, n1, 1, n3, 1 + n4, 0, n6, 0, 1, 1, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(1576 - 2054*d + 971*d^2 - 199*d^3 + 15*d^4 - 200*n1 + 114*d*n1 - 
      20*d^2*n1 + d^3*n1 - 144*n1^2 + 84*d*n1^2 - 12*d^2*n1^2 + 16*n1^3 - 
      4*d*n1^3 + 1192*n3 - 1002*d*n3 + 280*d^2*n3 - 26*d^3*n3 + 240*n1*n3 - 
      140*d*n1*n3 + 20*d^2*n1*n3 - 64*n1^2*n3 + 16*d*n1^2*n3 + 80*n3^2 - 
      40*d*n3^2 + 5*d^2*n3^2 + 72*n1*n3^2 - 18*d*n1*n3^2 - 16*n3^3 + 
      4*d*n3^3 + 2572*n4 - 2484*d*n4 + 790*d^2*n4 - 83*d^3*n4 - 244*n1*n4 + 
      142*d*n1*n4 - 21*d^2*n1*n4 - 92*n1^2*n4 + 32*d*n1^2*n4 + 12*n1^3*n4 + 
      1452*n3*n4 - 902*d*n3*n4 + 140*d^2*n3*n4 + 64*n1*n3*n4 - 
      26*d*n1*n3*n4 - 44*n1^2*n3*n4 + 200*n3^2*n4 - 60*d*n3^2*n4 + 
      40*n1*n3^2*n4 + 1516*n4^2 - 976*d*n4^2 + 156*d^2*n4^2 - 104*n1*n4^2 + 
      30*d*n1*n4^2 - 28*n1^2*n4^2 + 604*n3*n4^2 - 190*d*n3*n4^2 + 
      28*n1*n3*n4^2 + 40*n3^2*n4^2 + 376*n4^3 - 120*d*n4^3 - 8*n1*n4^3 + 
      72*n3*n4^3 + 32*n4^4 + 536*n6 - 398*d*n6 + 84*d^2*n6 - 4*d^3*n6 + 
      224*n1*n6 - 154*d*n1*n6 + 25*d^2*n1*n6 - 44*n1^2*n6 + 8*d*n1^2*n6 - 
      4*n1^3*n6 - 128*n3*n6 + 152*d*n3*n6 - 34*d^2*n3*n6 + 168*n1*n3*n6 - 
      42*d*n1*n3*n6 + 12*n1^2*n3*n6 - 152*n3^2*n6 + 48*d*n3^2*n6 - 
      4*n1*n3^2*n6 - 8*n3^3*n6 + 716*n4*n6 - 412*d*n4*n6 + 58*d^2*n4*n6 + 
      44*n1*n4*n6 - 10*d*n1*n4*n6 - 4*n1^2*n4*n6 + 112*n3*n4*n6 - 
      30*d*n3*n4*n6 + 8*n1*n3*n4*n6 + 336*n4^2*n6 - 104*d*n4^2*n6 - 
      12*n1*n4^2*n6 + 60*n3*n4^2*n6 + 48*n4^3*n6 - 192*n6^2 + 168*d*n6^2 - 
      34*d^2*n6^2 + 116*n1*n6^2 - 36*d*n1*n6^2 - 240*n3*n6^2 + 84*d*n3*n6^2 + 
      20*n1*n3*n6^2 - 36*n3^2*n6^2 - 88*n4*n6^2 + 36*d*n4*n6^2 + 
      16*n1*n4*n6^2 - 44*n3*n4*n6^2 - 88*n6^3 + 32*d*n6^3 + 12*n1*n6^3 - 
      32*n3*n6^3 - 24*n4*n6^3 - 8*n6^4)*j[p4a, n1, 1, n3, 1 + n4, 0, n6, 0, 
      1, 1, 1, 1, 0, 1, 1])/(2*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 
      4*n4 + 2*n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, n3, 1 + n4, 0, n6, 0, 1, 1, 2, 0, -1, 1, 1])/
    (4*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, n3, 1 + n4, 0, n6, 0, 1, 1, 2, 0, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(2 - d - n1 + 2*n3 + n4 + n6)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, n3, 1 + n4, 0, n6, 0, 1, 2, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(2 - d - n1 + 2*n3 + n4 + n6)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, n3, 1 + n4, 0, n6, 0, 1, 2, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, n3, 1 + n4, 0, n6, 0, 2, 1, 1, 0, -1, 1, 1])/
    (4*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(848*n6 - 900*d*n6 + 304*d^2*n6 - 33*d^3*n6 - 128*n1*n6 + 48*d*n1*n6 - 
      4*d^2*n1*n6 - 48*n1^2*n6 + 12*d*n1^2*n6 + 608*n3*n6 - 352*d*n3*n6 + 
      50*d^2*n3*n6 + 80*n1*n3*n6 - 20*d*n1*n3*n6 + 32*n3^2*n6 - 8*d*n3^2*n6 + 
      1112*n4*n6 - 748*d*n4*n6 + 122*d^2*n4*n6 - 16*n1*n4*n6 - 8*d*n1*n4*n6 - 
      24*n1^2*n4*n6 + 400*n3*n4*n6 - 112*d*n3*n4*n6 + 48*n1*n3*n4*n6 + 
      440*n4^2*n6 - 140*d*n4^2*n6 + 24*n1*n4^2*n6 + 48*n3*n4^2*n6 + 
      48*n4^3*n6 + 480*n6^2 - 320*d*n6^2 + 52*d^2*n6^2 - 16*n1*n6^2 + 
      8*d*n1*n6^2 + 176*n3*n6^2 - 56*d*n3*n6^2 - 8*n1*n3*n6^2 + 
      16*n3^2*n6^2 + 416*n4*n6^2 - 140*d*n4*n6^2 - 8*n1*n4*n6^2 + 
      80*n3*n4*n6^2 + 88*n4^2*n6^2 + 64*n6^3 - 20*d*n6^3 + 8*n3*n6^3 + 
      32*n4*n6^3)*j[p4a, n1, 1, n3, 1 + n4, 0, 1 + n6, -1, 0, 1, 1, 1, 0, 1, 
      1])/(4*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(544*n6 - 576*d*n6 + 194*d^2*n6 - 21*d^3*n6 - 144*n1*n6 + 68*d*n1*n6 - 
      8*d^2*n1*n6 - 16*n1^2*n6 + 4*d*n1^2*n6 + 416*n3*n6 - 240*d*n3*n6 + 
      34*d^2*n3*n6 + 16*n1*n3*n6 - 4*d*n1*n3*n6 + 32*n3^2*n6 - 8*d*n3^2*n6 + 
      752*n4*n6 - 504*d*n4*n6 + 82*d^2*n4*n6 - 48*n1*n4*n6 + 4*d*n1*n4*n6 - 
      16*n1^2*n4*n6 + 288*n3*n4*n6 - 80*d*n3*n4*n6 + 32*n1*n3*n4*n6 + 
      304*n4^2*n6 - 96*d*n4^2*n6 + 16*n1*n4^2*n6 + 32*n3*n4^2*n6 + 
      32*n4^3*n6 + 368*n6^2 - 240*d*n6^2 + 38*d^2*n6^2 - 72*n1*n6^2 + 
      24*d*n1*n6^2 + 8*n1^2*n6^2 + 160*n3*n6^2 - 48*d*n3*n6^2 - 
      24*n1*n3*n6^2 + 16*n3^2*n6^2 + 320*n4*n6^2 - 104*d*n4*n6^2 - 
      24*n1*n4*n6^2 + 64*n3*n4*n6^2 + 64*n4^2*n6^2 + 88*n6^3 - 28*d*n6^3 - 
      16*n1*n6^3 + 24*n3*n6^3 + 40*n4*n6^3 + 8*n6^4)*
     j[p4a, n1, 1, n3, 1 + n4, 0, 1 + n6, -1, 1, 0, 1, 1, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(544*n6 - 576*d*n6 + 194*d^2*n6 - 21*d^3*n6 - 144*n1*n6 + 68*d*n1*n6 - 
      8*d^2*n1*n6 - 16*n1^2*n6 + 4*d*n1^2*n6 + 416*n3*n6 - 240*d*n3*n6 + 
      34*d^2*n3*n6 + 16*n1*n3*n6 - 4*d*n1*n3*n6 + 32*n3^2*n6 - 8*d*n3^2*n6 + 
      752*n4*n6 - 504*d*n4*n6 + 82*d^2*n4*n6 - 48*n1*n4*n6 + 4*d*n1*n4*n6 - 
      16*n1^2*n4*n6 + 288*n3*n4*n6 - 80*d*n3*n4*n6 + 32*n1*n3*n4*n6 + 
      304*n4^2*n6 - 96*d*n4^2*n6 + 16*n1*n4^2*n6 + 32*n3*n4^2*n6 + 
      32*n4^3*n6 + 368*n6^2 - 240*d*n6^2 + 38*d^2*n6^2 - 72*n1*n6^2 + 
      24*d*n1*n6^2 + 8*n1^2*n6^2 + 160*n3*n6^2 - 48*d*n3*n6^2 - 
      24*n1*n3*n6^2 + 16*n3^2*n6^2 + 320*n4*n6^2 - 104*d*n4*n6^2 - 
      24*n1*n4*n6^2 + 64*n3*n4*n6^2 + 64*n4^2*n6^2 + 88*n6^3 - 28*d*n6^3 - 
      16*n1*n6^3 + 24*n3*n6^3 + 40*n4*n6^3 + 8*n6^4)*
     j[p4a, n1, 1, n3, 1 + n4, 0, 1 + n6, -1, 1, 1, 0, 1, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(152*n6 - 162*d*n6 + 55*d^2*n6 - 6*d^3*n6 - 56*n1*n6 + 30*d*n1*n6 - 
      4*d^2*n1*n6 + 128*n3*n6 - 76*d*n3*n6 + 11*d^2*n3*n6 - 8*n1*n3*n6 + 
      2*d*n1*n3*n6 + 16*n3^2*n6 - 4*d*n3^2*n6 + 212*n4*n6 - 142*d*n4*n6 + 
      23*d^2*n4*n6 - 24*n1*n4*n6 + 4*d*n1*n4*n6 - 4*n1^2*n4*n6 + 
      88*n3*n4*n6 - 24*d*n3*n4*n6 + 8*n1*n3*n4*n6 + 84*n4^2*n6 - 
      26*d*n4^2*n6 + 4*n1*n4^2*n6 + 8*n3*n4^2*n6 + 8*n4^3*n6 + 120*n6^2 - 
      80*d*n6^2 + 13*d^2*n6^2 - 36*n1*n6^2 + 12*d*n1*n6^2 + 4*n1^2*n6^2 + 
      64*n3*n6^2 - 20*d*n3*n6^2 - 12*n1*n3*n6^2 + 8*n3^2*n6^2 + 104*n4*n6^2 - 
      34*d*n4*n6^2 - 12*n1*n4*n6^2 + 24*n3*n4*n6^2 + 20*n4^2*n6^2 + 36*n6^3 - 
      12*d*n6^3 - 8*n1*n6^3 + 12*n3*n6^3 + 16*n4*n6^3 + 4*n6^4)*
     j[p4a, n1, 1, n3, 1 + n4, 0, 1 + n6, -1, 1, 1, 1, 0, 0, 1, 1])/
    (2*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(4 - d + 2*n4)*n6*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, n3, 1 + n4, 0, 1 + n6, -1, 1, 1, 1, 1, 0, 0, 1])/
    (4*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(88*n6 - 90*d*n6 + 29*d^2*n6 - 3*d^3*n6 + 24*n1*n6 - 22*d*n1*n6 + 
      4*d^2*n1*n6 - 16*n1^2*n6 + 4*d*n1^2*n6 + 32*n3*n6 - 12*d*n3*n6 + 
      d^2*n3*n6 + 40*n1*n3*n6 - 10*d*n1*n3*n6 - 16*n3^2*n6 + 4*d*n3^2*n6 + 
      116*n4*n6 - 78*d*n4*n6 + 13*d^2*n4*n6 + 24*n1*n4*n6 - 8*d*n1*n4*n6 - 
      4*n1^2*n4*n6 + 24*n3*n4*n6 - 8*d*n3*n4*n6 + 8*n1*n3*n4*n6 + 
      52*n4^2*n6 - 18*d*n4^2*n6 + 4*n1*n4^2*n6 + 8*n3*n4^2*n6 + 8*n4^3*n6 + 
      8*n6^2 - d^2*n6^2 + 36*n1*n6^2 - 12*d*n1*n6^2 - 4*n1^2*n6^2 - 
      32*n3*n6^2 + 12*d*n3*n6^2 + 12*n1*n3*n6^2 - 8*n3^2*n6^2 + 8*n4*n6^2 - 
      2*d*n4*n6^2 + 12*n1*n4*n6^2 - 8*n3*n4*n6^2 + 4*n4^2*n6^2 - 20*n6^3 + 
      8*d*n6^3 + 8*n1*n6^3 - 12*n3*n6^3 - 8*n4*n6^3 - 4*n6^4)*
     j[p4a, n1, 1, n3, 1 + n4, 0, 1 + n6, -1, 1, 1, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(176*n6 - 240*d*n6 + 106*d^2*n6 - 15*d^3*n6 - 200*n1*n6 + 
      140*d*n1*n6 - 22*d^2*n1*n6 + 16*n1^2*n6 + 4*d*n1^2*n6 + 8*n1^3*n6 + 
      368*n3*n6 - 296*d*n3*n6 + 56*d^2*n3*n6 - 112*n1*n3*n6 + 16*d*n1*n3*n6 - 
      32*n1^2*n3*n6 + 160*n3^2*n6 - 48*d*n3^2*n6 + 32*n1*n3^2*n6 + 
      296*n4*n6 - 248*d*n4*n6 + 50*d^2*n4*n6 - 136*n1*n4*n6 + 36*d*n1*n4*n6 - 
      16*n1^2*n4*n6 + 320*n3*n4*n6 - 112*d*n3*n4*n6 + 16*n1*n3*n4*n6 + 
      32*n3^2*n4*n6 + 136*n4^2*n6 - 52*d*n4^2*n6 - 8*n1*n4^2*n6 + 
      48*n3*n4^2*n6 + 16*n4^3*n6 + 264*n6^2 - 208*d*n6^2 + 40*d^2*n6^2 - 
      136*n1*n6^2 + 40*d*n1*n6^2 + 256*n3*n6^2 - 88*d*n3*n6^2 - 
      16*n1*n3*n6^2 + 32*n3^2*n6^2 + 232*n4*n6^2 - 84*d*n4*n6^2 - 
      32*n1*n4*n6^2 + 80*n3*n4*n6^2 + 40*n4^2*n6^2 + 120*n6^3 - 44*d*n6^3 - 
      24*n1*n6^3 + 48*n3*n6^3 + 48*n4*n6^3 + 16*n6^4)*
     j[p4a, n1, 1, n3, 1 + n4, 0, 1 + n6, -1, 1, 1, 1, 1, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(4 - d + 2*n4)*n6*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, n3, 1 + n4, 0, 1 + n6, 0, 0, 1, 1, 1, -1, 1, 1])/
    (2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*(2*n6 - d*n6 - n1*n6 + 2*n3*n6 + 
      n4*n6 + n6^2)*j[p4a, n1, 1, n3, 1 + n4, 0, 1 + n6, 0, 0, 1, 1, 1, 0, 1, 
      1])/(2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + 
      d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 
      5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + 
      d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 
      2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(4 - d + 2*n4)*n6*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, n3, 1 + n4, 0, 1 + n6, 0, 1, 0, 1, 1, -1, 1, 1])/
    (2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(4 - d + 2*n4)*n6*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, n3, 1 + n4, 0, 1 + n6, 0, 1, 1, 0, 1, -1, 1, 1])/
    (2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(4 - d + 2*n4)*n6*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, n3, 1 + n4, 0, 1 + n6, 0, 1, 1, 1, 0, -1, 1, 1])/
    (4*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*(2*n6 - d*n6 - n1*n6 + 2*n3*n6 + 
      n4*n6 + n6^2)*j[p4a, n1, 1, n3, 1 + n4, 0, 1 + n6, 0, 1, 1, 1, 1, -1, 
      1, 1])/(2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + 
      d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 
      5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + 
      d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 
      2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*(2*n6 - d*n6 - n1*n6 + 2*n3*n6 + 
      n4*n6 + n6^2)*j[p4a, n1, 1, n3, 1 + n4, 0, 1 + n6, 0, 1, 1, 1, 1, 0, 0, 
      1])/(2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + 
      d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 
      5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + 
      d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 
      2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(112*n6 - 108*d*n6 + 32*d^2*n6 - 3*d^3*n6 + 128*n1*n6 - 96*d*n1*n6 + 
      16*d^2*n1*n6 - 48*n1^2*n6 + 12*d*n1^2*n6 - 32*n3*n6 + 40*d*n3*n6 - 
      8*d^2*n3*n6 + 128*n1*n3*n6 - 32*d*n1*n3*n6 - 64*n3^2*n6 + 
      16*d*n3^2*n6 + 136*n4*n6 - 92*d*n4*n6 + 16*d^2*n4*n6 + 96*n1*n4*n6 - 
      28*d*n1*n4*n6 - 8*n1^2*n4*n6 - 16*n3*n4*n6 + 16*n1*n3*n4*n6 + 
      72*n4^2*n6 - 28*d*n4^2*n6 + 8*n1*n4^2*n6 + 16*n3*n4^2*n6 + 16*n4^3*n6 - 
      96*n6^2 + 80*d*n6^2 - 16*d^2*n6^2 + 144*n1*n6^2 - 48*d*n1*n6^2 - 
      16*n1^2*n6^2 - 160*n3*n6^2 + 56*d*n3*n6^2 + 48*n1*n3*n6^2 - 
      32*n3^2*n6^2 - 80*n4*n6^2 + 28*d*n4*n6^2 + 48*n1*n4*n6^2 - 
      48*n3*n4*n6^2 - 8*n4^2*n6^2 - 96*n6^3 + 36*d*n6^3 + 32*n1*n6^3 - 
      48*n3*n6^3 - 40*n4*n6^3 - 16*n6^4)*j[p4a, n1, 1, n3, 1 + n4, 0, 1 + n6, 
      0, 1, 1, 1, 1, 0, 1, 0])/(4*(3 - d + n4 + n6)*
     (6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 
      6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 
      14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 
      2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 
      6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(1 + n4)*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 
      8*d^2*n1 - 48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 
      112*n1*n3 - 28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 
      62*d^2*n4 + 48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 
      48*d*n3*n4 + 32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 
      32*n3*n4^2 + 32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 
      24*d*n1*n6 - 8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 
      16*n3^2*n6 + 128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 
      24*n6^2 + 12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, n1, 1, n3, 2 + n4, -1, n6, 0, 0, 1, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(1 + n4)*(328 - 342*d + 113*d^2 - 12*d^3 - 8*n1 - 14*d*n1 + 4*d^2*n1 - 
      32*n1^2 + 8*d*n1^2 + 192*n3 - 100*d*n3 + 13*d^2*n3 + 72*n1*n3 - 
      18*d*n1*n3 - 16*n3^2 + 4*d*n3^2 + 444*n4 - 298*d*n4 + 49*d^2*n4 + 
      24*n1*n4 - 12*d*n1*n4 - 12*n1^2*n4 + 136*n3*n4 - 40*d*n3*n4 + 
      24*n1*n3*n4 + 188*n4^2 - 62*d*n4^2 + 12*n1*n4^2 + 24*n3*n4^2 + 
      24*n4^3 + 136*n6 - 80*d*n6 + 11*d^2*n6 + 36*n1*n6 - 12*d*n1*n6 - 
      4*n1^2*n6 + 4*d*n3*n6 + 12*n1*n3*n6 - 8*n3^2*n6 + 120*n4*n6 - 
      38*d*n4*n6 + 12*n1*n4*n6 + 8*n3*n4*n6 + 28*n4^2*n6 - 4*n6^2 + 
      4*d*n6^2 + 8*n1*n6^2 - 12*n3*n6^2 - 4*n6^3)*j[p4a, n1, 1, n3, 2 + n4, 
      -1, n6, 0, 1, 1, 1, 1, 0, 1, 1])/(2*(3 - d + n4 + n6)*
     (6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 
      6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 
      14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 
      2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 
      6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(1 + n4)*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, n3, 2 + n4, 0, -1 + n6, 0, 0, 1, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(1 + n4)*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, n3, 2 + n4, 0, -1 + n6, 0, 1, 0, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(1 + n4)*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, n3, 2 + n4, 0, -1 + n6, 0, 1, 1, 0, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(1 + n4)*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, n3, 2 + n4, 0, -1 + n6, 0, 1, 1, 1, 0, 0, 1, 1])/
    (2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(1 + n4)*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, n3, 2 + n4, 0, -1 + n6, 0, 1, 1, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(1 + n4)*(88 - 90*d + 29*d^2 - 3*d^3 + 24*n1 - 22*d*n1 + 4*d^2*n1 - 
      16*n1^2 + 4*d*n1^2 + 32*n3 - 12*d*n3 + d^2*n3 + 40*n1*n3 - 10*d*n1*n3 - 
      16*n3^2 + 4*d*n3^2 + 116*n4 - 78*d*n4 + 13*d^2*n4 + 24*n1*n4 - 
      8*d*n1*n4 - 4*n1^2*n4 + 24*n3*n4 - 8*d*n3*n4 + 8*n1*n3*n4 + 52*n4^2 - 
      18*d*n4^2 + 4*n1*n4^2 + 8*n3*n4^2 + 8*n4^3 + 8*n6 - d^2*n6 + 36*n1*n6 - 
      12*d*n1*n6 - 4*n1^2*n6 - 32*n3*n6 + 12*d*n3*n6 + 12*n1*n3*n6 - 
      8*n3^2*n6 + 8*n4*n6 - 2*d*n4*n6 + 12*n1*n4*n6 - 8*n3*n4*n6 + 
      4*n4^2*n6 - 20*n6^2 + 8*d*n6^2 + 8*n1*n6^2 - 12*n3*n6^2 - 8*n4*n6^2 - 
      4*n6^3)*j[p4a, n1, 1, n3, 2 + n4, 0, n6, -1, 0, 1, 1, 1, 0, 1, 1])/
    ((3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + (n4*(1 + n4)*(4 - d + 2*n4)*
     (10 - 3*d + 2*n1 + 2*n4 + 2*n6)*j[p4a, n1, 1, n3, 2 + n4, 0, n6, -1, 1, 
      1, 1, 1, 0, 1, 0])/(2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 
      6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 
      14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 
      2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 
      6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(1 + n4)*(328 - 342*d + 113*d^2 - 12*d^3 - 8*n1 - 14*d*n1 + 4*d^2*n1 - 
      32*n1^2 + 8*d*n1^2 + 192*n3 - 100*d*n3 + 13*d^2*n3 + 72*n1*n3 - 
      18*d*n1*n3 - 16*n3^2 + 4*d*n3^2 + 444*n4 - 298*d*n4 + 49*d^2*n4 + 
      24*n1*n4 - 12*d*n1*n4 - 12*n1^2*n4 + 136*n3*n4 - 40*d*n3*n4 + 
      24*n1*n3*n4 + 188*n4^2 - 62*d*n4^2 + 12*n1*n4^2 + 24*n3*n4^2 + 
      24*n4^3 + 136*n6 - 80*d*n6 + 11*d^2*n6 + 36*n1*n6 - 12*d*n1*n6 - 
      4*n1^2*n6 + 4*d*n3*n6 + 12*n1*n3*n6 - 8*n3^2*n6 + 120*n4*n6 - 
      38*d*n4*n6 + 12*n1*n4*n6 + 8*n3*n4*n6 + 28*n4^2*n6 - 4*n6^2 + 
      4*d*n6^2 + 8*n1*n6^2 - 12*n3*n6^2 - 4*n6^3)*j[p4a, n1, 1, n3, 2 + n4, 
      0, n6, -1, 1, 1, 1, 1, 0, 1, 1])/(2*(3 - d + n4 + n6)*
     (6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 
      6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 
      14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 
      2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 
      6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(1 + n4)*(2 - d - n1 + 2*n3 + n4 + n6)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, n3, 2 + n4, 0, n6, 0, 1, 1, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n3*(416*n6 - 432*d*n6 + 142*d^2*n6 - 15*d^3*n6 + 16*n1*n6 - 36*d*n1*n6 + 
      8*d^2*n1*n6 - 48*n1^2*n6 + 12*d*n1^2*n6 + 224*n3*n6 - 112*d*n3*n6 + 
      14*d^2*n3*n6 + 112*n1*n3*n6 - 28*d*n1*n3*n6 - 32*n3^2*n6 + 
      8*d*n3^2*n6 + 560*n4*n6 - 376*d*n4*n6 + 62*d^2*n4*n6 + 48*n1*n4*n6 - 
      20*d*n1*n4*n6 - 16*n1^2*n4*n6 + 160*n3*n4*n6 - 48*d*n3*n4*n6 + 
      32*n1*n3*n4*n6 + 240*n4^2*n6 - 80*d*n4^2*n6 + 16*n1*n4^2*n6 + 
      32*n3*n4^2*n6 + 32*n4^3*n6 + 144*n6^2 - 80*d*n6^2 + 10*d^2*n6^2 + 
      72*n1*n6^2 - 24*d*n1*n6^2 - 8*n1^2*n6^2 - 32*n3*n6^2 + 16*d*n3*n6^2 + 
      24*n1*n3*n6^2 - 16*n3^2*n6^2 + 128*n4*n6^2 - 40*d*n4*n6^2 + 
      24*n1*n4*n6^2 + 32*n4^2*n6^2 - 24*n6^3 + 12*d*n6^3 + 16*n1*n6^3 - 
      24*n3*n6^3 - 8*n4*n6^3 - 8*n6^4)*j[p4a, n1, 1, 1 + n3, n4, -1, 1 + n6, 
      0, 0, 1, 1, 1, 0, 1, 1])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n3*(416*n6 - 432*d*n6 + 142*d^2*n6 - 15*d^3*n6 + 16*n1*n6 - 36*d*n1*n6 + 
      8*d^2*n1*n6 - 48*n1^2*n6 + 12*d*n1^2*n6 + 224*n3*n6 - 112*d*n3*n6 + 
      14*d^2*n3*n6 + 112*n1*n3*n6 - 28*d*n1*n3*n6 - 32*n3^2*n6 + 
      8*d*n3^2*n6 + 560*n4*n6 - 376*d*n4*n6 + 62*d^2*n4*n6 + 48*n1*n4*n6 - 
      20*d*n1*n4*n6 - 16*n1^2*n4*n6 + 160*n3*n4*n6 - 48*d*n3*n4*n6 + 
      32*n1*n3*n4*n6 + 240*n4^2*n6 - 80*d*n4^2*n6 + 16*n1*n4^2*n6 + 
      32*n3*n4^2*n6 + 32*n4^3*n6 + 144*n6^2 - 80*d*n6^2 + 10*d^2*n6^2 + 
      72*n1*n6^2 - 24*d*n1*n6^2 - 8*n1^2*n6^2 - 32*n3*n6^2 + 16*d*n3*n6^2 + 
      24*n1*n3*n6^2 - 16*n3^2*n6^2 + 128*n4*n6^2 - 40*d*n4*n6^2 + 
      24*n1*n4*n6^2 + 32*n4^2*n6^2 - 24*n6^3 + 12*d*n6^3 + 16*n1*n6^3 - 
      24*n3*n6^3 - 8*n4*n6^3 - 8*n6^4)*j[p4a, n1, 1, 1 + n3, n4, -1, 1 + n6, 
      0, 1, 1, 1, 1, 0, 0, 1])/(4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n3*(416*n6 - 432*d*n6 + 142*d^2*n6 - 15*d^3*n6 + 16*n1*n6 - 36*d*n1*n6 + 
      8*d^2*n1*n6 - 48*n1^2*n6 + 12*d*n1^2*n6 + 224*n3*n6 - 112*d*n3*n6 + 
      14*d^2*n3*n6 + 112*n1*n3*n6 - 28*d*n1*n3*n6 - 32*n3^2*n6 + 
      8*d*n3^2*n6 + 560*n4*n6 - 376*d*n4*n6 + 62*d^2*n4*n6 + 48*n1*n4*n6 - 
      20*d*n1*n4*n6 - 16*n1^2*n4*n6 + 160*n3*n4*n6 - 48*d*n3*n4*n6 + 
      32*n1*n3*n4*n6 + 240*n4^2*n6 - 80*d*n4^2*n6 + 16*n1*n4^2*n6 + 
      32*n3*n4^2*n6 + 32*n4^3*n6 + 144*n6^2 - 80*d*n6^2 + 10*d^2*n6^2 + 
      72*n1*n6^2 - 24*d*n1*n6^2 - 8*n1^2*n6^2 - 32*n3*n6^2 + 16*d*n3*n6^2 + 
      24*n1*n3*n6^2 - 16*n3^2*n6^2 + 128*n4*n6^2 - 40*d*n4*n6^2 + 
      24*n1*n4*n6^2 + 32*n4^2*n6^2 - 24*n6^3 + 12*d*n6^3 + 16*n1*n6^3 - 
      24*n3*n6^3 - 8*n4*n6^3 - 8*n6^4)*j[p4a, n1, 1, 1 + n3, n4, -1, 1 + n6, 
      0, 1, 1, 1, 1, 0, 1, 1])/(4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n3*(-4 + d - 2*n4)*(-10 + 3*d - 2*n1 - 2*n4 - 2*n6)*
     j[p4a, n1, 1, 1 + n3, n4, 0, n6, -1, 1, 0, 1, 1, 0, 1, 2])/
    (2*(-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n3*(-4 + d - 2*n4)*(-10 + 3*d - 2*n1 - 2*n4 - 2*n6)*
     j[p4a, n1, 1, 1 + n3, n4, 0, n6, -1, 1, 2, 1, 1, 0, 1, 0])/
    (2*(-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n3*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 8*d^2*n1 - 
      48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 112*n1*n3 - 
      28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 62*d^2*n4 + 
      48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 48*d*n3*n4 + 
      32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 32*n3*n4^2 + 
      32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 24*d*n1*n6 - 
      8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 16*n3^2*n6 + 
      128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 24*n6^2 + 
      12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, n1, 1, 1 + n3, n4, 0, n6, -1, 2, 1, 1, 0, 0, 1, 1])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   ((-11*n3 + 4*d*n3 - 2*n3^2 - 2*n3*n4 - 2*n3*n6)*(-416 + 432*d - 142*d^2 + 
      15*d^3 - 16*n1 + 36*d*n1 - 8*d^2*n1 + 48*n1^2 - 12*d*n1^2 - 224*n3 + 
      112*d*n3 - 14*d^2*n3 - 112*n1*n3 + 28*d*n1*n3 + 32*n3^2 - 8*d*n3^2 - 
      560*n4 + 376*d*n4 - 62*d^2*n4 - 48*n1*n4 + 20*d*n1*n4 + 16*n1^2*n4 - 
      160*n3*n4 + 48*d*n3*n4 - 32*n1*n3*n4 - 240*n4^2 + 80*d*n4^2 - 
      16*n1*n4^2 - 32*n3*n4^2 - 32*n4^3 - 144*n6 + 80*d*n6 - 10*d^2*n6 - 
      72*n1*n6 + 24*d*n1*n6 + 8*n1^2*n6 + 32*n3*n6 - 16*d*n3*n6 - 
      24*n1*n3*n6 + 16*n3^2*n6 - 128*n4*n6 + 40*d*n4*n6 - 24*n1*n4*n6 - 
      32*n4^2*n6 + 24*n6^2 - 12*d*n6^2 - 16*n1*n6^2 + 24*n3*n6^2 + 
      8*n4*n6^2 + 8*n6^3)*j[p4a, n1, 1, 1 + n3, n4, 0, n6, 0, 0, 1, 1, 1, 0, 
      1, 1])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n3*(-4 + d - 2*n4)*(-10 + 3*d - 2*n1 - 2*n4 - 2*n6)*
     j[p4a, n1, 1, 1 + n3, n4, 0, n6, 0, 0, 1, 1, 1, 0, 1, 2])/
    ((-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n3*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 8*d^2*n1 - 
      48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 112*n1*n3 - 
      28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 62*d^2*n4 + 
      48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 48*d*n3*n4 + 
      32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 32*n3*n4^2 + 
      32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 24*d*n1*n6 - 
      8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 16*n3^2*n6 + 
      128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 24*n6^2 + 
      12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, n1, 1, 1 + n3, n4, 0, n6, 0, 0, 1, 1, 2, -1, 1, 1])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n3*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 8*d^2*n1 - 
      48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 112*n1*n3 - 
      28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 62*d^2*n4 + 
      48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 48*d*n3*n4 + 
      32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 32*n3*n4^2 + 
      32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 24*d*n1*n6 - 
      8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 16*n3^2*n6 + 
      128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 24*n6^2 + 
      12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, n1, 1, 1 + n3, n4, 0, n6, 0, 0, 1, 1, 2, 0, 1, 1])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   (n3*(-4 + d - 2*n4)*(-10 + 3*d - 2*n1 - 2*n4 - 2*n6)*
     j[p4a, n1, 1, 1 + n3, n4, 0, n6, 0, 0, 2, 1, 1, 0, 1, 1])/
    ((-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n3*(-4 + d - 2*n4)*(-10 + 3*d - 2*n1 - 2*n4 - 2*n6)*
     j[p4a, n1, 1, 1 + n3, n4, 0, n6, 0, 1, 0, 1, 1, -1, 1, 2])/
    (2*(-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n3*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 8*d^2*n1 - 
      48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 112*n1*n3 - 
      28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 62*d^2*n4 + 
      48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 48*d*n3*n4 + 
      32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 32*n3*n4^2 + 
      32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 24*d*n1*n6 - 
      8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 16*n3^2*n6 + 
      128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 24*n6^2 + 
      12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, n1, 1, 1 + n3, n4, 0, n6, 0, 1, 1, 0, 1, 0, 1, 1])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   (n3*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 8*d^2*n1 - 
      48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 112*n1*n3 - 
      28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 62*d^2*n4 + 
      48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 48*d*n3*n4 + 
      32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 32*n3*n4^2 + 
      32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 24*d*n1*n6 - 
      8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 16*n3^2*n6 + 
      128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 24*n6^2 + 
      12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, n1, 1, 1 + n3, n4, 0, n6, 0, 1, 1, 1, 0, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   ((-22*n3 + 7*d*n3 - 2*n1*n3 - 2*n3^2 - 4*n3*n4 - 2*n3*n6)*
     (-416 + 432*d - 142*d^2 + 15*d^3 - 16*n1 + 36*d*n1 - 8*d^2*n1 + 
      48*n1^2 - 12*d*n1^2 - 224*n3 + 112*d*n3 - 14*d^2*n3 - 112*n1*n3 + 
      28*d*n1*n3 + 32*n3^2 - 8*d*n3^2 - 560*n4 + 376*d*n4 - 62*d^2*n4 - 
      48*n1*n4 + 20*d*n1*n4 + 16*n1^2*n4 - 160*n3*n4 + 48*d*n3*n4 - 
      32*n1*n3*n4 - 240*n4^2 + 80*d*n4^2 - 16*n1*n4^2 - 32*n3*n4^2 - 
      32*n4^3 - 144*n6 + 80*d*n6 - 10*d^2*n6 - 72*n1*n6 + 24*d*n1*n6 + 
      8*n1^2*n6 + 32*n3*n6 - 16*d*n3*n6 - 24*n1*n3*n6 + 16*n3^2*n6 - 
      128*n4*n6 + 40*d*n4*n6 - 24*n1*n4*n6 - 32*n4^2*n6 + 24*n6^2 - 
      12*d*n6^2 - 16*n1*n6^2 + 24*n3*n6^2 + 8*n4*n6^2 + 8*n6^3)*
     j[p4a, n1, 1, 1 + n3, n4, 0, n6, 0, 1, 1, 1, 1, 0, 0, 1])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n3*(-4 + d - 2*n4)*(-10 + 3*d - 2*n1 - 2*n4 - 2*n6)*
     j[p4a, n1, 1, 1 + n3, n4, 0, n6, 0, 1, 1, 1, 1, 0, 0, 2])/
    (2*(-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   ((-7*n3 + 2*d*n3 - n3^2 - n3*n4 - n3*n6)*(-416 + 432*d - 142*d^2 + 
      15*d^3 - 16*n1 + 36*d*n1 - 8*d^2*n1 + 48*n1^2 - 12*d*n1^2 - 224*n3 + 
      112*d*n3 - 14*d^2*n3 - 112*n1*n3 + 28*d*n1*n3 + 32*n3^2 - 8*d*n3^2 - 
      560*n4 + 376*d*n4 - 62*d^2*n4 - 48*n1*n4 + 20*d*n1*n4 + 16*n1^2*n4 - 
      160*n3*n4 + 48*d*n3*n4 - 32*n1*n3*n4 - 240*n4^2 + 80*d*n4^2 - 
      16*n1*n4^2 - 32*n3*n4^2 - 32*n4^3 - 144*n6 + 80*d*n6 - 10*d^2*n6 - 
      72*n1*n6 + 24*d*n1*n6 + 8*n1^2*n6 + 32*n3*n6 - 16*d*n3*n6 - 
      24*n1*n3*n6 + 16*n3^2*n6 - 128*n4*n6 + 40*d*n4*n6 - 24*n1*n4*n6 - 
      32*n4^2*n6 + 24*n6^2 - 12*d*n6^2 - 16*n1*n6^2 + 24*n3*n6^2 + 
      8*n4*n6^2 + 8*n6^3)*j[p4a, n1, 1, 1 + n3, n4, 0, n6, 0, 1, 1, 1, 1, 0, 
      1, 1])/(4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n3*(-4 + d - 2*n4)*(-10 + 3*d - 2*n1 - 2*n4 - 2*n6)*
     j[p4a, n1, 1, 1 + n3, n4, 0, n6, 0, 1, 2, 1, 1, -1, 1, 0])/
    (2*(-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n3*(-4 + d - 2*n4)*(-10 + 3*d - 2*n1 - 2*n4 - 2*n6)*
     j[p4a, n1, 1, 1 + n3, n4, 0, n6, 0, 1, 2, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n3*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 8*d^2*n1 - 
      48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 112*n1*n3 - 
      28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 62*d^2*n4 + 
      48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 48*d*n3*n4 + 
      32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 32*n3*n4^2 + 
      32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 24*d*n1*n6 - 
      8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 16*n3^2*n6 + 
      128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 24*n6^2 + 
      12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, n1, 1, 1 + n3, n4, 0, n6, 0, 2, 1, 1, 0, -1, 1, 1])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n3*(-304*n6 + 324*d*n6 - 110*d^2*n6 + 12*d^3*n6 + 48*n1*n6 - 20*d*n1*n6 + 
      2*d^2*n1*n6 + 16*n1^2*n6 - 4*d*n1^2*n6 - 224*n3*n6 + 132*d*n3*n6 - 
      19*d^2*n3*n6 - 24*n1*n3*n6 + 6*d*n1*n3*n6 - 16*n3^2*n6 + 4*d*n3^2*n6 - 
      392*n4*n6 + 264*d*n4*n6 - 43*d^2*n4*n6 + 8*n1*n4*n6 + 2*d*n1*n4*n6 + 
      8*n1^2*n4*n6 - 144*n3*n4*n6 + 40*d*n3*n4*n6 - 16*n1*n3*n4*n6 - 
      152*n4^2*n6 + 48*d*n4^2*n6 - 8*n1*n4^2*n6 - 16*n3*n4^2*n6 - 
      16*n4^3*n6 - 176*n6^2 + 120*d*n6^2 - 20*d^2*n6^2 + 8*n1*n6^2 - 
      4*d*n1*n6^2 - 72*n3*n6^2 + 24*d*n3*n6^2 + 4*n1*n3*n6^2 - 8*n3^2*n6^2 - 
      152*n4*n6^2 + 52*d*n4*n6^2 + 4*n1*n4*n6^2 - 32*n3*n4*n6^2 - 
      32*n4^2*n6^2 - 24*n6^3 + 8*d*n6^3 - 4*n3*n6^3 - 12*n4*n6^3)*
     j[p4a, n1, 1, 1 + n3, n4, 0, 1 + n6, -1, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n3*(-64*n6 + 72*d*n6 - 26*d^2*n6 + 3*d^3*n6 + 80*n1*n6 - 52*d*n1*n6 + 
      8*d^2*n1*n6 - 16*n1^2*n6 + 4*d*n1^2*n6 - 96*n3*n6 + 64*d*n3*n6 - 
      10*d^2*n3*n6 + 48*n1*n3*n6 - 12*d*n1*n3*n6 - 32*n3^2*n6 + 8*d*n3^2*n6 - 
      96*n4*n6 + 64*d*n4*n6 - 10*d^2*n4*n6 + 48*n1*n4*n6 - 12*d*n1*n4*n6 - 
      64*n3*n4*n6 + 16*d*n3*n4*n6 - 32*n4^2*n6 + 8*d*n4^2*n6 - 112*n6^2 + 
      80*d*n6^2 - 14*d^2*n6^2 + 72*n1*n6^2 - 24*d*n1*n6^2 - 8*n1^2*n6^2 - 
      96*n3*n6^2 + 32*d*n3*n6^2 + 24*n1*n3*n6^2 - 16*n3^2*n6^2 - 96*n4*n6^2 + 
      32*d*n4*n6^2 + 24*n1*n4*n6^2 - 32*n3*n4*n6^2 - 16*n4^2*n6^2 - 56*n6^3 + 
      20*d*n6^3 + 16*n1*n6^3 - 24*n3*n6^3 - 24*n4*n6^3 - 8*n6^4)*
     j[p4a, n1, 1, 1 + n3, n4, 0, 1 + n6, -1, 1, 0, 1, 1, 0, 1, 1])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   (n3*(-320*n6 + 360*d*n6 - 130*d^2*n6 + 15*d^3*n6 + 272*n1*n6 - 
      180*d*n1*n6 + 28*d^2*n1*n6 - 48*n1^2*n6 + 12*d*n1^2*n6 - 416*n3*n6 + 
      280*d*n3*n6 - 44*d^2*n3*n6 + 160*n1*n3*n6 - 40*d*n1*n3*n6 - 
      128*n3^2*n6 + 32*d*n3^2*n6 - 416*n4*n6 + 280*d*n4*n6 - 44*d^2*n4*n6 + 
      160*n1*n4*n6 - 40*d*n1*n4*n6 - 256*n3*n4*n6 + 64*d*n3*n4*n6 - 
      128*n4^2*n6 + 32*d*n4^2*n6 - 432*n6^2 + 320*d*n6^2 - 58*d^2*n6^2 + 
      232*n1*n6^2 - 80*d*n1*n6^2 - 24*n1^2*n6^2 - 368*n3*n6^2 + 
      128*d*n3*n6^2 + 80*n1*n3*n6^2 - 64*n3^2*n6^2 - 368*n4*n6^2 + 
      128*d*n4*n6^2 + 80*n1*n4*n6^2 - 128*n3*n4*n6^2 - 64*n4^2*n6^2 - 
      184*n6^3 + 68*d*n6^3 + 48*n1*n6^3 - 80*n3*n6^3 - 80*n4*n6^3 - 24*n6^4)*
     j[p4a, n1, 1, 1 + n3, n4, 0, 1 + n6, -1, 1, 1, 0, 1, 0, 1, 1])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n3*(-128*n6 + 144*d*n6 - 52*d^2*n6 + 6*d^3*n6 + 96*n1*n6 - 64*d*n1*n6 + 
      10*d^2*n1*n6 - 16*n1^2*n6 + 4*d*n1^2*n6 - 160*n3*n6 + 108*d*n3*n6 - 
      17*d^2*n3*n6 + 56*n1*n3*n6 - 14*d*n1*n3*n6 - 48*n3^2*n6 + 
      12*d*n3^2*n6 - 160*n4*n6 + 108*d*n4*n6 - 17*d^2*n4*n6 + 56*n1*n4*n6 - 
      14*d*n1*n4*n6 - 96*n3*n4*n6 + 24*d*n3*n4*n6 - 48*n4^2*n6 + 
      12*d*n4^2*n6 - 160*n6^2 + 120*d*n6^2 - 22*d^2*n6^2 + 80*n1*n6^2 - 
      28*d*n1*n6^2 - 8*n1^2*n6^2 - 136*n3*n6^2 + 48*d*n3*n6^2 + 
      28*n1*n3*n6^2 - 24*n3^2*n6^2 - 136*n4*n6^2 + 48*d*n4*n6^2 + 
      28*n1*n4*n6^2 - 48*n3*n4*n6^2 - 24*n4^2*n6^2 - 64*n6^3 + 24*d*n6^3 + 
      16*n1*n6^3 - 28*n3*n6^3 - 28*n4*n6^3 - 8*n6^4)*
     j[p4a, n1, 1, 1 + n3, n4, 0, 1 + n6, -1, 1, 1, 1, 0, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n3*(-64*n6 + 72*d*n6 - 26*d^2*n6 + 3*d^3*n6 + 16*n1*n6 - 12*d*n1*n6 + 
      2*d^2*n1*n6 - 64*n3*n6 + 44*d*n3*n6 - 7*d^2*n3*n6 + 8*n1*n3*n6 - 
      2*d*n1*n3*n6 - 16*n3^2*n6 + 4*d*n3^2*n6 - 64*n4*n6 + 44*d*n4*n6 - 
      7*d^2*n4*n6 + 8*n1*n4*n6 - 2*d*n1*n4*n6 - 32*n3*n4*n6 + 8*d*n3*n4*n6 - 
      16*n4^2*n6 + 4*d*n4^2*n6 - 48*n6^2 + 40*d*n6^2 - 8*d^2*n6^2 + 
      8*n1*n6^2 - 4*d*n1*n6^2 - 40*n3*n6^2 + 16*d*n3*n6^2 + 4*n1*n3*n6^2 - 
      8*n3^2*n6^2 - 40*n4*n6^2 + 16*d*n4*n6^2 + 4*n1*n4*n6^2 - 
      16*n3*n4*n6^2 - 8*n4^2*n6^2 - 8*n6^3 + 4*d*n6^3 - 4*n3*n6^3 - 
      4*n4*n6^3)*j[p4a, n1, 1, 1 + n3, n4, 0, 1 + n6, -1, 1, 1, 1, 1, 0, 0, 
      1])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   (n3*(-4 + d - 2*n4)*(-10 + 3*d - 2*n1 - 2*n4 - 2*n6)*n6*
     j[p4a, n1, 1, 1 + n3, n4, 0, 1 + n6, -1, 1, 1, 1, 1, 0, 1, 0])/
    (2*(-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n3*(64*n6 - 72*d*n6 + 26*d^2*n6 - 3*d^3*n6 + 48*n1*n6 - 28*d*n1*n6 + 
      4*d^2*n1*n6 - 16*n1^2*n6 + 4*d*n1^2*n6 + 32*n3*n6 - 24*d*n3*n6 + 
      4*d^2*n3*n6 + 32*n1*n3*n6 - 8*d*n1*n3*n6 + 32*n4*n6 - 24*d*n4*n6 + 
      4*d^2*n4*n6 + 32*n1*n4*n6 - 8*d*n1*n4*n6 - 16*n6^2 + 2*d^2*n6^2 + 
      56*n1*n6^2 - 16*d*n1*n6^2 - 8*n1^2*n6^2 - 16*n3*n6^2 + 16*n1*n3*n6^2 - 
      16*n4*n6^2 + 16*n1*n4*n6^2 - 40*n6^3 + 12*d*n6^3 + 16*n1*n6^3 - 
      16*n3*n6^3 - 16*n4*n6^3 - 8*n6^4)*j[p4a, n1, 1, 1 + n3, n4, 0, 1 + n6, 
      -1, 1, 1, 1, 1, 0, 1, 1])/(4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n3*(48*n6 - 24*d*n6 + 3*d^2*n6 + 24*n1*n6 - 6*d*n1*n6 - 16*n3*n6 + 
      4*d*n3*n6 + 40*n4*n6 - 12*d*n4*n6 + 8*n1*n4*n6 + 8*n4^2*n6 - 8*n6^2 + 
      4*d*n6^2 + 4*n1*n6^2 - 8*n3*n6^2 - 4*n6^3)*j[p4a, n1, 1, 1 + n3, n4, 0, 
      1 + n6, 0, 0, 1, 1, 1, -1, 1, 1])/(4*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n3*(-32*n6 + 20*d*n6 - 3*d^2*n6 + 8*n1*n6 - 2*d*n1*n6 - 16*n3*n6 + 
      4*d*n3*n6 - 16*n4*n6 + 4*d*n4*n6 - 24*n6^2 + 8*d*n6^2 + 4*n1*n6^2 - 
      8*n3*n6^2 - 8*n4*n6^2 - 4*n6^3)*j[p4a, n1, 1, 1 + n3, n4, 0, 1 + n6, 0, 
      0, 1, 1, 1, 0, 1, 1])/(2*(-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 
      3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 
      4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 24*n6 + 
      17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   (n3*(-64*n6 + 72*d*n6 - 26*d^2*n6 + 3*d^3*n6 + 80*n1*n6 - 52*d*n1*n6 + 
      8*d^2*n1*n6 - 16*n1^2*n6 + 4*d*n1^2*n6 - 96*n3*n6 + 64*d*n3*n6 - 
      10*d^2*n3*n6 + 48*n1*n3*n6 - 12*d*n1*n3*n6 - 32*n3^2*n6 + 8*d*n3^2*n6 - 
      96*n4*n6 + 64*d*n4*n6 - 10*d^2*n4*n6 + 48*n1*n4*n6 - 12*d*n1*n4*n6 - 
      64*n3*n4*n6 + 16*d*n3*n4*n6 - 32*n4^2*n6 + 8*d*n4^2*n6 - 112*n6^2 + 
      80*d*n6^2 - 14*d^2*n6^2 + 72*n1*n6^2 - 24*d*n1*n6^2 - 8*n1^2*n6^2 - 
      96*n3*n6^2 + 32*d*n3*n6^2 + 24*n1*n3*n6^2 - 16*n3^2*n6^2 - 96*n4*n6^2 + 
      32*d*n4*n6^2 + 24*n1*n4*n6^2 - 32*n3*n4*n6^2 - 16*n4^2*n6^2 - 56*n6^3 + 
      20*d*n6^3 + 16*n1*n6^3 - 24*n3*n6^3 - 24*n4*n6^3 - 8*n6^4)*
     j[p4a, n1, 1, 1 + n3, n4, 0, 1 + n6, 0, 1, 0, 1, 1, -1, 1, 1])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n3*(-128*n6 + 144*d*n6 - 52*d^2*n6 + 6*d^3*n6 + 96*n1*n6 - 64*d*n1*n6 + 
      10*d^2*n1*n6 - 16*n1^2*n6 + 4*d*n1^2*n6 - 160*n3*n6 + 108*d*n3*n6 - 
      17*d^2*n3*n6 + 56*n1*n3*n6 - 14*d*n1*n3*n6 - 48*n3^2*n6 + 
      12*d*n3^2*n6 - 160*n4*n6 + 108*d*n4*n6 - 17*d^2*n4*n6 + 56*n1*n4*n6 - 
      14*d*n1*n4*n6 - 96*n3*n4*n6 + 24*d*n3*n4*n6 - 48*n4^2*n6 + 
      12*d*n4^2*n6 - 160*n6^2 + 120*d*n6^2 - 22*d^2*n6^2 + 80*n1*n6^2 - 
      28*d*n1*n6^2 - 8*n1^2*n6^2 - 136*n3*n6^2 + 48*d*n3*n6^2 + 
      28*n1*n3*n6^2 - 24*n3^2*n6^2 - 136*n4*n6^2 + 48*d*n4*n6^2 + 
      28*n1*n4*n6^2 - 48*n3*n4*n6^2 - 24*n4^2*n6^2 - 64*n6^3 + 24*d*n6^3 + 
      16*n1*n6^3 - 28*n3*n6^3 - 28*n4*n6^3 - 8*n6^4)*
     j[p4a, n1, 1, 1 + n3, n4, 0, 1 + n6, 0, 1, 1, 0, 1, -1, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n3*(-32*n6 + 20*d*n6 - 3*d^2*n6 + 8*n1*n6 - 2*d*n1*n6 - 16*n3*n6 + 
      4*d*n3*n6 - 16*n4*n6 + 4*d*n4*n6 - 24*n6^2 + 8*d*n6^2 + 4*n1*n6^2 - 
      8*n3*n6^2 - 8*n4*n6^2 - 4*n6^3)*j[p4a, n1, 1, 1 + n3, n4, 0, 1 + n6, 0, 
      1, 1, 1, 0, -1, 1, 1])/(4*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n3*(-4 + d - 2*n4)*(-10 + 3*d - 2*n1 - 2*n4 - 2*n6)*n6*
     j[p4a, n1, 1, 1 + n3, n4, 0, 1 + n6, 0, 1, 1, 1, 1, -1, 1, 0])/
    (2*(-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n3*(-64*n6 + 72*d*n6 - 26*d^2*n6 + 3*d^3*n6 + 80*n1*n6 - 52*d*n1*n6 + 
      8*d^2*n1*n6 - 16*n1^2*n6 + 4*d*n1^2*n6 - 96*n3*n6 + 64*d*n3*n6 - 
      10*d^2*n3*n6 + 48*n1*n3*n6 - 12*d*n1*n3*n6 - 32*n3^2*n6 + 8*d*n3^2*n6 - 
      96*n4*n6 + 64*d*n4*n6 - 10*d^2*n4*n6 + 48*n1*n4*n6 - 12*d*n1*n4*n6 - 
      64*n3*n4*n6 + 16*d*n3*n4*n6 - 32*n4^2*n6 + 8*d*n4^2*n6 - 112*n6^2 + 
      80*d*n6^2 - 14*d^2*n6^2 + 72*n1*n6^2 - 24*d*n1*n6^2 - 8*n1^2*n6^2 - 
      96*n3*n6^2 + 32*d*n3*n6^2 + 24*n1*n3*n6^2 - 16*n3^2*n6^2 - 96*n4*n6^2 + 
      32*d*n4*n6^2 + 24*n1*n4*n6^2 - 32*n3*n4*n6^2 - 16*n4^2*n6^2 - 56*n6^3 + 
      20*d*n6^3 + 16*n1*n6^3 - 24*n3*n6^3 - 24*n4*n6^3 - 8*n6^4)*
     j[p4a, n1, 1, 1 + n3, n4, 0, 1 + n6, 0, 1, 1, 1, 1, 0, 0, 1])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   (n3*n4*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 8*d^2*n1 - 
      48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 112*n1*n3 - 
      28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 62*d^2*n4 + 
      48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 48*d*n3*n4 + 
      32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 32*n3*n4^2 + 
      32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 24*d*n1*n6 - 
      8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 16*n3^2*n6 + 
      128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 24*n6^2 + 
      12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, n1, 1, 1 + n3, 1 + n4, -1, n6, 0, 0, 1, 1, 1, 0, 1, 1])/
    ((3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   (n3*n4*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 8*d^2*n1 - 
      48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 112*n1*n3 - 
      28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 62*d^2*n4 + 
      48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 48*d*n3*n4 + 
      32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 32*n3*n4^2 + 
      32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 24*d*n1*n6 - 
      8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 16*n3^2*n6 + 
      128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 24*n6^2 + 
      12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, n1, 1, 1 + n3, 1 + n4, -1, n6, 0, 1, 1, 1, 1, 0, 0, 1])/
    (2*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   (n3*n4*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 8*d^2*n1 - 
      48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 112*n1*n3 - 
      28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 62*d^2*n4 + 
      48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 48*d*n3*n4 + 
      32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 32*n3*n4^2 + 
      32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 24*d*n1*n6 - 
      8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 16*n3^2*n6 + 
      128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 24*n6^2 + 
      12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, n1, 1, 1 + n3, 1 + n4, -1, n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   (n3*n4*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 8*d^2*n1 - 
      48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 112*n1*n3 - 
      28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 62*d^2*n4 + 
      48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 48*d*n3*n4 + 
      32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 32*n3*n4^2 + 
      32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 24*d*n1*n6 - 
      8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 16*n3^2*n6 + 
      128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 24*n6^2 + 
      12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, n1, 1, 1 + n3, 1 + n4, 0, -1 + n6, 0, 1, 1, 1, 1, 0, 0, 1])/
    (2*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n3*n4*(504 - 522*d + 171*d^2 - 18*d^3 + 40*n1 - 58*d*n1 + 12*d^2*n1 - 
      64*n1^2 + 16*d*n1^2 + 256*n3 - 124*d*n3 + 15*d^2*n3 + 152*n1*n3 - 
      38*d*n1*n3 - 48*n3^2 + 12*d*n3^2 + 676*n4 - 454*d*n4 + 75*d^2*n4 + 
      72*n1*n4 - 28*d*n1*n4 - 20*n1^2*n4 + 184*n3*n4 - 56*d*n3*n4 + 
      40*n1*n3*n4 + 292*n4^2 - 98*d*n4^2 + 20*n1*n4^2 + 40*n3*n4^2 + 
      40*n4^3 + 152*n6 - 80*d*n6 + 9*d^2*n6 + 108*n1*n6 - 36*d*n1*n6 - 
      12*n1^2*n6 - 64*n3*n6 + 28*d*n3*n6 + 36*n1*n3*n6 - 24*n3^2*n6 + 
      136*n4*n6 - 42*d*n4*n6 + 36*n1*n4*n6 - 8*n3*n4*n6 + 36*n4^2*n6 - 
      44*n6^2 + 20*d*n6^2 + 24*n1*n6^2 - 36*n3*n6^2 - 16*n4*n6^2 - 12*n6^3)*
     j[p4a, n1, 1, 1 + n3, 1 + n4, 0, n6, -1, 0, 1, 1, 1, 0, 1, 1])/
    ((3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   (n3*n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, 1 + n3, 1 + n4, 0, n6, -1, 1, 0, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n3*n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, 1 + n3, 1 + n4, 0, n6, -1, 1, 1, 0, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n3*n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, 1 + n3, 1 + n4, 0, n6, -1, 1, 1, 1, 0, 0, 1, 1])/
    (2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n3*n4*(88 - 90*d + 29*d^2 - 3*d^3 + 24*n1 - 22*d*n1 + 4*d^2*n1 - 
      16*n1^2 + 4*d*n1^2 + 32*n3 - 12*d*n3 + d^2*n3 + 40*n1*n3 - 10*d*n1*n3 - 
      16*n3^2 + 4*d*n3^2 + 116*n4 - 78*d*n4 + 13*d^2*n4 + 24*n1*n4 - 
      8*d*n1*n4 - 4*n1^2*n4 + 24*n3*n4 - 8*d*n3*n4 + 8*n1*n3*n4 + 52*n4^2 - 
      18*d*n4^2 + 4*n1*n4^2 + 8*n3*n4^2 + 8*n4^3 + 8*n6 - d^2*n6 + 36*n1*n6 - 
      12*d*n1*n6 - 4*n1^2*n6 - 32*n3*n6 + 12*d*n3*n6 + 12*n1*n3*n6 - 
      8*n3^2*n6 + 8*n4*n6 - 2*d*n4*n6 + 12*n1*n4*n6 - 8*n3*n4*n6 + 
      4*n4^2*n6 - 20*n6^2 + 8*d*n6^2 + 8*n1*n6^2 - 12*n3*n6^2 - 8*n4*n6^2 - 
      4*n6^3)*j[p4a, n1, 1, 1 + n3, 1 + n4, 0, n6, -1, 1, 1, 1, 1, 0, 0, 1])/
    ((3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n3*n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, 1 + n3, 1 + n4, 0, n6, -1, 1, 1, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n3*n4*(1072 - 1116*d + 368*d^2 - 39*d^3 - 64*d*n1 + 16*d^2*n1 - 
      112*n1^2 + 28*d*n1^2 + 608*n3 - 312*d*n3 + 40*d^2*n3 + 256*n1*n3 - 
      64*d*n1*n3 - 64*n3^2 + 16*d*n3^2 + 1448*n4 - 972*d*n4 + 160*d^2*n4 + 
      96*n1*n4 - 44*d*n1*n4 - 40*n1^2*n4 + 432*n3*n4 - 128*d*n3*n4 + 
      80*n1*n3*n4 + 616*n4^2 - 204*d*n4^2 + 40*n1*n4^2 + 80*n3*n4^2 + 
      80*n4^3 + 416*n6 - 240*d*n6 + 32*d^2*n6 + 144*n1*n6 - 48*d*n1*n6 - 
      16*n1^2*n6 - 32*n3*n6 + 24*d*n3*n6 + 48*n1*n3*n6 - 32*n3^2*n6 + 
      368*n4*n6 - 116*d*n4*n6 + 48*n1*n4*n6 + 16*n3*n4*n6 + 88*n4^2*n6 - 
      32*n6^2 + 20*d*n6^2 + 32*n1*n6^2 - 48*n3*n6^2 - 8*n4*n6^2 - 16*n6^3)*
     j[p4a, n1, 1, 1 + n3, 1 + n4, 0, n6, -1, 1, 1, 1, 1, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   (n3*n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, 1 + n3, 1 + n4, 0, n6, 0, 0, 1, 1, 1, -1, 1, 1])/
    (2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n3*n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, 1 + n3, 1 + n4, 0, n6, 0, 1, 0, 1, 1, -1, 1, 1])/
    (2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n3*n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, 1 + n3, 1 + n4, 0, n6, 0, 1, 1, 0, 1, -1, 1, 1])/
    (2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n3*n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, 1 + n3, 1 + n4, 0, n6, 0, 1, 1, 1, 0, -1, 1, 1])/
    (2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n3*n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 1, 1 + n3, 1 + n4, 0, n6, 0, 1, 1, 1, 1, -1, 1, 0])/
    (2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n3*n4*(328 - 342*d + 113*d^2 - 12*d^3 - 8*n1 - 14*d*n1 + 4*d^2*n1 - 
      32*n1^2 + 8*d*n1^2 + 192*n3 - 100*d*n3 + 13*d^2*n3 + 72*n1*n3 - 
      18*d*n1*n3 - 16*n3^2 + 4*d*n3^2 + 444*n4 - 298*d*n4 + 49*d^2*n4 + 
      24*n1*n4 - 12*d*n1*n4 - 12*n1^2*n4 + 136*n3*n4 - 40*d*n3*n4 + 
      24*n1*n3*n4 + 188*n4^2 - 62*d*n4^2 + 12*n1*n4^2 + 24*n3*n4^2 + 
      24*n4^3 + 136*n6 - 80*d*n6 + 11*d^2*n6 + 36*n1*n6 - 12*d*n1*n6 - 
      4*n1^2*n6 + 4*d*n3*n6 + 12*n1*n3*n6 - 8*n3^2*n6 + 120*n4*n6 - 
      38*d*n4*n6 + 12*n1*n4*n6 + 8*n3*n4*n6 + 28*n4^2*n6 - 4*n6^2 + 
      4*d*n6^2 + 8*n1*n6^2 - 12*n3*n6^2 - 4*n6^3)*j[p4a, n1, 1, 1 + n3, 
      1 + n4, 0, n6, 0, 1, 1, 1, 1, 0, 0, 1])/(2*(3 - d + n4 + n6)*
     (6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 
      6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 
      14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 
      2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 
      6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   ((n3 + n3^2)*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 
      8*d^2*n1 - 48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 
      112*n1*n3 - 28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 
      62*d^2*n4 + 48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 
      48*d*n3*n4 + 32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 
      32*n3*n4^2 + 32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 
      24*d*n1*n6 - 8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 
      16*n3^2*n6 + 128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 
      24*n6^2 + 12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, n1, 1, 2 + n3, n4, 0, n6, -1, 0, 1, 1, 1, 0, 1, 1])/
    ((-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   ((n3 + n3^2)*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 
      8*d^2*n1 - 48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 
      112*n1*n3 - 28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 
      62*d^2*n4 + 48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 
      48*d*n3*n4 + 32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 
      32*n3*n4^2 + 32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 
      24*d*n1*n6 - 8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 
      16*n3^2*n6 + 128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 
      24*n6^2 + 12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, n1, 1, 2 + n3, n4, 0, n6, -1, 1, 1, 1, 1, 0, 0, 1])/
    ((-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   ((n3 + n3^2)*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 
      8*d^2*n1 - 48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 
      112*n1*n3 - 28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 
      62*d^2*n4 + 48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 
      48*d*n3*n4 + 32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 
      32*n3*n4^2 + 32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 
      24*d*n1*n6 - 8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 
      16*n3^2*n6 + 128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 
      24*n6^2 + 12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, n1, 1, 2 + n3, n4, 0, n6, -1, 1, 1, 1, 1, 0, 1, 1])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((n3 + n3^2)*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 
      8*d^2*n1 - 48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 
      112*n1*n3 - 28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 
      62*d^2*n4 + 48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 
      48*d*n3*n4 + 32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 
      32*n3*n4^2 + 32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 
      24*d*n1*n6 - 8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 
      16*n3^2*n6 + 128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 
      24*n6^2 + 12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, n1, 1, 2 + n3, n4, 0, n6, 0, 1, 1, 1, 1, -1, 0, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((n3 + n3^2)*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 
      8*d^2*n1 - 48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 
      112*n1*n3 - 28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 
      62*d^2*n4 + 48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 
      48*d*n3*n4 + 32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 
      32*n3*n4^2 + 32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 
      24*d*n1*n6 - 8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 
      16*n3^2*n6 + 128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 
      24*n6^2 + 12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, n1, 1, 2 + n3, n4, 0, n6, 0, 1, 1, 1, 1, 0, 0, 1])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((-64*n6 + 72*d*n6 - 26*d^2*n6 + 3*d^3*n6 + 16*n1*n6 - 12*d*n1*n6 + 
      2*d^2*n1*n6 - 64*n3*n6 + 44*d*n3*n6 - 7*d^2*n3*n6 + 8*n1*n3*n6 - 
      2*d*n1*n3*n6 - 16*n3^2*n6 + 4*d*n3^2*n6 - 64*n4*n6 + 44*d*n4*n6 - 
      7*d^2*n4*n6 + 8*n1*n4*n6 - 2*d*n1*n4*n6 - 32*n3*n4*n6 + 8*d*n3*n4*n6 - 
      16*n4^2*n6 + 4*d*n4^2*n6 - 48*n6^2 + 40*d*n6^2 - 8*d^2*n6^2 + 
      8*n1*n6^2 - 4*d*n1*n6^2 - 40*n3*n6^2 + 16*d*n3*n6^2 + 4*n1*n3*n6^2 - 
      8*n3^2*n6^2 - 40*n4*n6^2 + 16*d*n4*n6^2 + 4*n1*n4*n6^2 - 
      16*n3*n4*n6^2 - 8*n4^2*n6^2 - 8*n6^3 + 4*d*n6^3 - 4*n3*n6^3 - 
      4*n4*n6^3)*j[p4a, n1, 2, -1 + n3, n4, 0, 1 + n6, 0, 0, 1, 1, 1, 0, 1, 
      1])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 2, -1 + n3, 1 + n4, 0, n6, 0, 0, 1, 1, 1, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 2, -1 + n3, 1 + n4, 0, n6, 0, 1, 1, 0, 1, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   ((-416*n6 + 432*d*n6 - 142*d^2*n6 + 15*d^3*n6 - 16*n1*n6 + 36*d*n1*n6 - 
      8*d^2*n1*n6 + 48*n1^2*n6 - 12*d*n1^2*n6 - 224*n3*n6 + 112*d*n3*n6 - 
      14*d^2*n3*n6 - 112*n1*n3*n6 + 28*d*n1*n3*n6 + 32*n3^2*n6 - 
      8*d*n3^2*n6 - 560*n4*n6 + 376*d*n4*n6 - 62*d^2*n4*n6 - 48*n1*n4*n6 + 
      20*d*n1*n4*n6 + 16*n1^2*n4*n6 - 160*n3*n4*n6 + 48*d*n3*n4*n6 - 
      32*n1*n3*n4*n6 - 240*n4^2*n6 + 80*d*n4^2*n6 - 16*n1*n4^2*n6 - 
      32*n3*n4^2*n6 - 32*n4^3*n6 - 144*n6^2 + 80*d*n6^2 - 10*d^2*n6^2 - 
      72*n1*n6^2 + 24*d*n1*n6^2 + 8*n1^2*n6^2 + 32*n3*n6^2 - 16*d*n3*n6^2 - 
      24*n1*n3*n6^2 + 16*n3^2*n6^2 - 128*n4*n6^2 + 40*d*n4*n6^2 - 
      24*n1*n4*n6^2 - 32*n4^2*n6^2 + 24*n6^3 - 12*d*n6^3 - 16*n1*n6^3 + 
      24*n3*n6^3 + 8*n4*n6^3 + 8*n6^4)*j[p4a, n1, 2, n3, n4, -1, 1 + n6, 0, 
      1, 1, 0, 1, 0, 1, 1])/(4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*
     (-3 + d - n4 - n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   ((-10 + 3*d - n3 - 2*n4 - n6)*(-416 + 432*d - 142*d^2 + 15*d^3 - 16*n1 + 
      36*d*n1 - 8*d^2*n1 + 48*n1^2 - 12*d*n1^2 - 224*n3 + 112*d*n3 - 
      14*d^2*n3 - 112*n1*n3 + 28*d*n1*n3 + 32*n3^2 - 8*d*n3^2 - 560*n4 + 
      376*d*n4 - 62*d^2*n4 - 48*n1*n4 + 20*d*n1*n4 + 16*n1^2*n4 - 160*n3*n4 + 
      48*d*n3*n4 - 32*n1*n3*n4 - 240*n4^2 + 80*d*n4^2 - 16*n1*n4^2 - 
      32*n3*n4^2 - 32*n4^3 - 144*n6 + 80*d*n6 - 10*d^2*n6 - 72*n1*n6 + 
      24*d*n1*n6 + 8*n1^2*n6 + 32*n3*n6 - 16*d*n3*n6 - 24*n1*n3*n6 + 
      16*n3^2*n6 - 128*n4*n6 + 40*d*n4*n6 - 24*n1*n4*n6 - 32*n4^2*n6 + 
      24*n6^2 - 12*d*n6^2 - 16*n1*n6^2 + 24*n3*n6^2 + 8*n4*n6^2 + 8*n6^3)*
     j[p4a, n1, 2, n3, n4, 0, n6, 0, 1, 1, 0, 1, 0, 1, 1])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((64*n6 - 72*d*n6 + 26*d^2*n6 - 3*d^3*n6 - 16*n1*n6 + 12*d*n1*n6 - 
      2*d^2*n1*n6 + 64*n3*n6 - 44*d*n3*n6 + 7*d^2*n3*n6 - 8*n1*n3*n6 + 
      2*d*n1*n3*n6 + 16*n3^2*n6 - 4*d*n3^2*n6 + 64*n4*n6 - 44*d*n4*n6 + 
      7*d^2*n4*n6 - 8*n1*n4*n6 + 2*d*n1*n4*n6 + 32*n3*n4*n6 - 8*d*n3*n4*n6 + 
      16*n4^2*n6 - 4*d*n4^2*n6 + 48*n6^2 - 40*d*n6^2 + 8*d^2*n6^2 - 
      8*n1*n6^2 + 4*d*n1*n6^2 + 40*n3*n6^2 - 16*d*n3*n6^2 - 4*n1*n3*n6^2 + 
      8*n3^2*n6^2 + 40*n4*n6^2 - 16*d*n4*n6^2 - 4*n1*n4*n6^2 + 
      16*n3*n4*n6^2 + 8*n4^2*n6^2 + 8*n6^3 - 4*d*n6^3 + 4*n3*n6^3 + 
      4*n4*n6^3)*j[p4a, n1, 2, n3, n4, 0, 1 + n6, -1, 0, 1, 1, 1, 0, 1, 1])/
    ((-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((-64*n6 + 72*d*n6 - 26*d^2*n6 + 3*d^3*n6 + 16*n1*n6 - 12*d*n1*n6 + 
      2*d^2*n1*n6 - 64*n3*n6 + 44*d*n3*n6 - 7*d^2*n3*n6 + 8*n1*n3*n6 - 
      2*d*n1*n3*n6 - 16*n3^2*n6 + 4*d*n3^2*n6 - 64*n4*n6 + 44*d*n4*n6 - 
      7*d^2*n4*n6 + 8*n1*n4*n6 - 2*d*n1*n4*n6 - 32*n3*n4*n6 + 8*d*n3*n4*n6 - 
      16*n4^2*n6 + 4*d*n4^2*n6 - 48*n6^2 + 40*d*n6^2 - 8*d^2*n6^2 + 
      8*n1*n6^2 - 4*d*n1*n6^2 - 40*n3*n6^2 + 16*d*n3*n6^2 + 4*n1*n3*n6^2 - 
      8*n3^2*n6^2 - 40*n4*n6^2 + 16*d*n4*n6^2 + 4*n1*n4*n6^2 - 
      16*n3*n4*n6^2 - 8*n4^2*n6^2 - 8*n6^3 + 4*d*n6^3 - 4*n3*n6^3 - 
      4*n4*n6^3)*j[p4a, n1, 2, n3, n4, 0, 1 + n6, -1, 1, 1, 0, 1, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((64*n6 - 72*d*n6 + 26*d^2*n6 - 3*d^3*n6 - 16*n1*n6 + 12*d*n1*n6 - 
      2*d^2*n1*n6 + 64*n3*n6 - 44*d*n3*n6 + 7*d^2*n3*n6 - 8*n1*n3*n6 + 
      2*d*n1*n3*n6 + 16*n3^2*n6 - 4*d*n3^2*n6 + 64*n4*n6 - 44*d*n4*n6 + 
      7*d^2*n4*n6 - 8*n1*n4*n6 + 2*d*n1*n4*n6 + 32*n3*n4*n6 - 8*d*n3*n4*n6 + 
      16*n4^2*n6 - 4*d*n4^2*n6 + 48*n6^2 - 40*d*n6^2 + 8*d^2*n6^2 - 
      8*n1*n6^2 + 4*d*n1*n6^2 + 40*n3*n6^2 - 16*d*n3*n6^2 - 4*n1*n3*n6^2 + 
      8*n3^2*n6^2 + 40*n4*n6^2 - 16*d*n4*n6^2 - 4*n1*n4*n6^2 + 
      16*n3*n4*n6^2 + 8*n4^2*n6^2 + 8*n6^3 - 4*d*n6^3 + 4*n3*n6^3 + 
      4*n4*n6^3)*j[p4a, n1, 2, n3, n4, 0, 1 + n6, -1, 1, 1, 1, 1, 0, 0, 1])/
    ((-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   ((-64*n6 + 72*d*n6 - 26*d^2*n6 + 3*d^3*n6 + 16*n1*n6 - 12*d*n1*n6 + 
      2*d^2*n1*n6 - 64*n3*n6 + 44*d*n3*n6 - 7*d^2*n3*n6 + 8*n1*n3*n6 - 
      2*d*n1*n3*n6 - 16*n3^2*n6 + 4*d*n3^2*n6 - 64*n4*n6 + 44*d*n4*n6 - 
      7*d^2*n4*n6 + 8*n1*n4*n6 - 2*d*n1*n4*n6 - 32*n3*n4*n6 + 8*d*n3*n4*n6 - 
      16*n4^2*n6 + 4*d*n4^2*n6 - 48*n6^2 + 40*d*n6^2 - 8*d^2*n6^2 + 
      8*n1*n6^2 - 4*d*n1*n6^2 - 40*n3*n6^2 + 16*d*n3*n6^2 + 4*n1*n3*n6^2 - 
      8*n3^2*n6^2 - 40*n4*n6^2 + 16*d*n4*n6^2 + 4*n1*n4*n6^2 - 
      16*n3*n4*n6^2 - 8*n4^2*n6^2 - 8*n6^3 + 4*d*n6^3 - 4*n3*n6^3 - 
      4*n4*n6^3)*j[p4a, n1, 2, n3, n4, 0, 1 + n6, 0, 0, 1, 1, 1, -1, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 8*d^2*n1 - 
      48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 112*n1*n3 - 
      28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 62*d^2*n4 + 
      48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 48*d*n3*n4 + 
      32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 32*n3*n4^2 + 
      32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 24*d*n1*n6 - 
      8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 16*n3^2*n6 + 
      128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 24*n6^2 + 
      12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, n1, 2, n3, 1 + n4, -1, n6, 0, 1, 1, 0, 1, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 8*d^2*n1 - 
      48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 112*n1*n3 - 
      28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 62*d^2*n4 + 
      48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 48*d*n3*n4 + 
      32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 32*n3*n4^2 + 
      32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 24*d*n1*n6 - 
      8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 16*n3^2*n6 + 
      128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 24*n6^2 + 
      12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, n1, 2, n3, 1 + n4, 0, -1 + n6, 0, 1, 1, 0, 1, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 2, n3, 1 + n4, 0, n6, -1, 0, 1, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(-64 + 72*d - 26*d^2 + 3*d^3 + 80*n1 - 52*d*n1 + 8*d^2*n1 - 16*n1^2 + 
      4*d*n1^2 - 96*n3 + 64*d*n3 - 10*d^2*n3 + 48*n1*n3 - 12*d*n1*n3 - 
      32*n3^2 + 8*d*n3^2 - 96*n4 + 64*d*n4 - 10*d^2*n4 + 48*n1*n4 - 
      12*d*n1*n4 - 64*n3*n4 + 16*d*n3*n4 - 32*n4^2 + 8*d*n4^2 - 112*n6 + 
      80*d*n6 - 14*d^2*n6 + 72*n1*n6 - 24*d*n1*n6 - 8*n1^2*n6 - 96*n3*n6 + 
      32*d*n3*n6 + 24*n1*n3*n6 - 16*n3^2*n6 - 96*n4*n6 + 32*d*n4*n6 + 
      24*n1*n4*n6 - 32*n3*n4*n6 - 16*n4^2*n6 - 56*n6^2 + 20*d*n6^2 + 
      16*n1*n6^2 - 24*n3*n6^2 - 24*n4*n6^2 - 8*n6^3)*
     j[p4a, n1, 2, n3, 1 + n4, 0, n6, -1, 1, 1, 0, 1, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(6 - 3*d - 2*n1 + 4*n3 + 4*n4 + 2*n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 2, n3, 1 + n4, 0, n6, -1, 1, 1, 1, 1, 0, 0, 1])/
    (2*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 2, n3, 1 + n4, 0, n6, 0, 0, 1, 1, 1, -1, 1, 1])/
    (4*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, n1, 2, n3, 1 + n4, 0, n6, 0, 1, 1, 0, 1, -1, 1, 1])/
    (4*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n3*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 8*d^2*n1 - 
      48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 112*n1*n3 - 
      28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 62*d^2*n4 + 
      48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 48*d*n3*n4 + 
      32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 32*n3*n4^2 + 
      32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 24*d*n1*n6 - 
      8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 16*n3^2*n6 + 
      128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 24*n6^2 + 
      12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, n1, 2, 1 + n3, n4, 0, n6, -1, 1, 1, 0, 1, 0, 1, 1])/
    (2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n3*(416 - 432*d + 142*d^2 - 15*d^3 + 16*n1 - 36*d*n1 + 8*d^2*n1 - 
      48*n1^2 + 12*d*n1^2 + 224*n3 - 112*d*n3 + 14*d^2*n3 + 112*n1*n3 - 
      28*d*n1*n3 - 32*n3^2 + 8*d*n3^2 + 560*n4 - 376*d*n4 + 62*d^2*n4 + 
      48*n1*n4 - 20*d*n1*n4 - 16*n1^2*n4 + 160*n3*n4 - 48*d*n3*n4 + 
      32*n1*n3*n4 + 240*n4^2 - 80*d*n4^2 + 16*n1*n4^2 + 32*n3*n4^2 + 
      32*n4^3 + 144*n6 - 80*d*n6 + 10*d^2*n6 + 72*n1*n6 - 24*d*n1*n6 - 
      8*n1^2*n6 - 32*n3*n6 + 16*d*n3*n6 + 24*n1*n3*n6 - 16*n3^2*n6 + 
      128*n4*n6 - 40*d*n4*n6 + 24*n1*n4*n6 + 32*n4^2*n6 - 24*n6^2 + 
      12*d*n6^2 + 16*n1*n6^2 - 24*n3*n6^2 - 8*n4*n6^2 - 8*n6^3)*
     j[p4a, n1, 2, 1 + n3, n4, 0, n6, 0, 1, 1, 0, 1, -1, 1, 1])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 2*n1^2*n4 + 20*n3*n4 - 
      6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 4*n3*n4^2 + 2*n4^3 - 
      24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 2*n1^2*n6 - 12*n3*n6 + 
      4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 2*n1*n4*n6 - 6*n6^2 + 
      2*d*n6^2 - 2*n1*n6^2)) - 
   (n1*(-64*n6 + 72*d*n6 - 26*d^2*n6 + 3*d^3*n6 + 80*n1*n6 - 52*d*n1*n6 + 
      8*d^2*n1*n6 - 16*n1^2*n6 + 4*d*n1^2*n6 - 96*n3*n6 + 64*d*n3*n6 - 
      10*d^2*n3*n6 + 48*n1*n3*n6 - 12*d*n1*n3*n6 - 32*n3^2*n6 + 8*d*n3^2*n6 - 
      96*n4*n6 + 64*d*n4*n6 - 10*d^2*n4*n6 + 48*n1*n4*n6 - 12*d*n1*n4*n6 - 
      64*n3*n4*n6 + 16*d*n3*n4*n6 - 32*n4^2*n6 + 8*d*n4^2*n6 - 112*n6^2 + 
      80*d*n6^2 - 14*d^2*n6^2 + 72*n1*n6^2 - 24*d*n1*n6^2 - 8*n1^2*n6^2 - 
      96*n3*n6^2 + 32*d*n3*n6^2 + 24*n1*n3*n6^2 - 16*n3^2*n6^2 - 96*n4*n6^2 + 
      32*d*n4*n6^2 + 24*n1*n4*n6^2 - 32*n3*n4*n6^2 - 16*n4^2*n6^2 - 56*n6^3 + 
      20*d*n6^3 + 16*n1*n6^3 - 24*n3*n6^3 - 24*n4*n6^3 - 8*n6^4)*
     j[p4a, 1 + n1, 0, n3, n4, 0, 1 + n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (-20*n4 + 16*d*n4 - 3*d^2*n4 + 6*n1*n4 - d*n1*n4 + 2*n1^2*n4 - 
      20*n3*n4 + 6*d*n3*n4 - 4*n1*n3*n4 - 14*n4^2 + 5*d*n4^2 - 4*n3*n4^2 - 
      2*n4^3 + 24*n6 - 17*d*n6 + 3*d^2*n6 + 2*n1*n6 - d*n1*n6 - 2*n1^2*n6 + 
      12*n3*n6 - 4*d*n3*n6 + 4*n1*n3*n6 + 6*n4*n6 - 2*d*n4*n6 + 2*n1*n4*n6 + 
      6*n6^2 - 2*d*n6^2 + 2*n1*n6^2)) + 
   (n1*n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, 1 + n1, 0, n3, 1 + n4, 0, n6, 0, 1, 1, 1, 1, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n1*(-64*n6 + 72*d*n6 - 26*d^2*n6 + 3*d^3*n6 + 16*n1*n6 - 12*d*n1*n6 + 
      2*d^2*n1*n6 - 64*n3*n6 + 44*d*n3*n6 - 7*d^2*n3*n6 + 8*n1*n3*n6 - 
      2*d*n1*n3*n6 - 16*n3^2*n6 + 4*d*n3^2*n6 - 64*n4*n6 + 44*d*n4*n6 - 
      7*d^2*n4*n6 + 8*n1*n4*n6 - 2*d*n1*n4*n6 - 32*n3*n4*n6 + 8*d*n3*n4*n6 - 
      16*n4^2*n6 + 4*d*n4^2*n6 - 48*n6^2 + 40*d*n6^2 - 8*d^2*n6^2 + 
      8*n1*n6^2 - 4*d*n1*n6^2 - 40*n3*n6^2 + 16*d*n3*n6^2 + 4*n1*n3*n6^2 - 
      8*n3^2*n6^2 - 40*n4*n6^2 + 16*d*n4*n6^2 + 4*n1*n4*n6^2 - 
      16*n3*n4*n6^2 - 8*n4^2*n6^2 - 8*n6^3 + 4*d*n6^3 - 4*n3*n6^3 - 
      4*n4*n6^3)*j[p4a, 1 + n1, 1, n3, n4, 0, 1 + n6, 0, 0, 1, 1, 1, 0, 1, 
      1])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (-20*n4 + 16*d*n4 - 3*d^2*n4 + 6*n1*n4 - d*n1*n4 + 2*n1^2*n4 - 
      20*n3*n4 + 6*d*n3*n4 - 4*n1*n3*n4 - 14*n4^2 + 5*d*n4^2 - 4*n3*n4^2 - 
      2*n4^3 + 24*n6 - 17*d*n6 + 3*d^2*n6 + 2*n1*n6 - d*n1*n6 - 2*n1^2*n6 + 
      12*n3*n6 - 4*d*n3*n6 + 4*n1*n3*n6 + 6*n4*n6 - 2*d*n4*n6 + 2*n1*n4*n6 + 
      6*n6^2 - 2*d*n6^2 + 2*n1*n6^2)) + 
   (n1*(-64*n6 + 72*d*n6 - 26*d^2*n6 + 3*d^3*n6 + 80*n1*n6 - 52*d*n1*n6 + 
      8*d^2*n1*n6 - 16*n1^2*n6 + 4*d*n1^2*n6 - 96*n3*n6 + 64*d*n3*n6 - 
      10*d^2*n3*n6 + 48*n1*n3*n6 - 12*d*n1*n3*n6 - 32*n3^2*n6 + 8*d*n3^2*n6 - 
      96*n4*n6 + 64*d*n4*n6 - 10*d^2*n4*n6 + 48*n1*n4*n6 - 12*d*n1*n4*n6 - 
      64*n3*n4*n6 + 16*d*n3*n4*n6 - 32*n4^2*n6 + 8*d*n4^2*n6 - 112*n6^2 + 
      80*d*n6^2 - 14*d^2*n6^2 + 72*n1*n6^2 - 24*d*n1*n6^2 - 8*n1^2*n6^2 - 
      96*n3*n6^2 + 32*d*n3*n6^2 + 24*n1*n3*n6^2 - 16*n3^2*n6^2 - 96*n4*n6^2 + 
      32*d*n4*n6^2 + 24*n1*n4*n6^2 - 32*n3*n4*n6^2 - 16*n4^2*n6^2 - 56*n6^3 + 
      20*d*n6^3 + 16*n1*n6^3 - 24*n3*n6^3 - 24*n4*n6^3 - 8*n6^4)*
     j[p4a, 1 + n1, 1, n3, n4, 0, 1 + n6, 0, 1, 1, 0, 1, 0, 1, 1])/
    (4*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (-20*n4 + 16*d*n4 - 3*d^2*n4 + 6*n1*n4 - d*n1*n4 + 2*n1^2*n4 - 
      20*n3*n4 + 6*d*n3*n4 - 4*n1*n3*n4 - 14*n4^2 + 5*d*n4^2 - 4*n3*n4^2 - 
      2*n4^3 + 24*n6 - 17*d*n6 + 3*d^2*n6 + 2*n1*n6 - d*n1*n6 - 2*n1^2*n6 + 
      12*n3*n6 - 4*d*n3*n6 + 4*n1*n3*n6 + 6*n4*n6 - 2*d*n4*n6 + 2*n1*n4*n6 + 
      6*n6^2 - 2*d*n6^2 + 2*n1*n6^2)) + 
   (n1*(-64*n6 + 72*d*n6 - 26*d^2*n6 + 3*d^3*n6 + 16*n1*n6 - 12*d*n1*n6 + 
      2*d^2*n1*n6 - 64*n3*n6 + 44*d*n3*n6 - 7*d^2*n3*n6 + 8*n1*n3*n6 - 
      2*d*n1*n3*n6 - 16*n3^2*n6 + 4*d*n3^2*n6 - 64*n4*n6 + 44*d*n4*n6 - 
      7*d^2*n4*n6 + 8*n1*n4*n6 - 2*d*n1*n4*n6 - 32*n3*n4*n6 + 8*d*n3*n4*n6 - 
      16*n4^2*n6 + 4*d*n4^2*n6 - 48*n6^2 + 40*d*n6^2 - 8*d^2*n6^2 + 
      8*n1*n6^2 - 4*d*n1*n6^2 - 40*n3*n6^2 + 16*d*n3*n6^2 + 4*n1*n3*n6^2 - 
      8*n3^2*n6^2 - 40*n4*n6^2 + 16*d*n4*n6^2 + 4*n1*n4*n6^2 - 
      16*n3*n4*n6^2 - 8*n4^2*n6^2 - 8*n6^3 + 4*d*n6^3 - 4*n3*n6^3 - 
      4*n4*n6^3)*j[p4a, 1 + n1, 1, n3, n4, 0, 1 + n6, 0, 1, 1, 1, 0, 0, 1, 
      1])/(2*(-6 + 3*d + 2*n1 - 4*n3 - 4*n4 - 2*n6)*(-3 + d - n4 - n6)*
     (-20*n4 + 16*d*n4 - 3*d^2*n4 + 6*n1*n4 - d*n1*n4 + 2*n1^2*n4 - 
      20*n3*n4 + 6*d*n3*n4 - 4*n1*n3*n4 - 14*n4^2 + 5*d*n4^2 - 4*n3*n4^2 - 
      2*n4^3 + 24*n6 - 17*d*n6 + 3*d^2*n6 + 2*n1*n6 - d*n1*n6 - 2*n1^2*n6 + 
      12*n3*n6 - 4*d*n3*n6 + 4*n1*n3*n6 + 6*n4*n6 - 2*d*n4*n6 + 2*n1*n4*n6 + 
      6*n6^2 - 2*d*n6^2 + 2*n1*n6^2)) - 
   (n1*n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, 1 + n1, 1, n3, 1 + n4, 0, n6, 0, 0, 1, 1, 1, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) - 
   (n1*n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, 1 + n1, 1, n3, 1 + n4, 0, n6, 0, 1, 1, 0, 1, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)) + 
   (n1*n4*(4 - d + 2*n4)*(10 - 3*d + 2*n1 + 2*n4 + 2*n6)*
     j[p4a, 1 + n1, 1, n3, 1 + n4, 0, n6, 0, 1, 1, 1, 0, 0, 1, 1])/
    (4*(3 - d + n4 + n6)*(20*n4 - 16*d*n4 + 3*d^2*n4 - 6*n1*n4 + d*n1*n4 - 
      2*n1^2*n4 + 20*n3*n4 - 6*d*n3*n4 + 4*n1*n3*n4 + 14*n4^2 - 5*d*n4^2 + 
      4*n3*n4^2 + 2*n4^3 - 24*n6 + 17*d*n6 - 3*d^2*n6 - 2*n1*n6 + d*n1*n6 + 
      2*n1^2*n6 - 12*n3*n6 + 4*d*n3*n6 - 4*n1*n3*n6 - 6*n4*n6 + 2*d*n4*n6 - 
      2*n1*n4*n6 - 6*n6^2 + 2*d*n6^2 - 2*n1*n6^2)), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, (n8_)?Positive, 
    (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n10 == 1 && n11 == 1 && n12 == -1 && 
    n13 == 1 && n14 == 1 && n2 == 1 && n5 == 0 && n6 == 0 && n7 == 0 && 
    n8 == 1 && n9 == 1 && n4 != 0 -> 
  ((-4 + d - 2*n4)*j[p4a, -1 + n1, 0, n3, 1 + n4, 0, 0, 0, 1, 1, 1, 1, 0, 1, 
      1])/(2*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((-4 + d - 2*n4)*j[p4a, -1 + n1, 0, n3, 1 + n4, 0, 0, 0, 1, 1, 2, 1, -1, 
      1, 1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((4 - d + 2*n4)*j[p4a, -1 + n1, 0, n3, 1 + n4, 0, 0, 0, 2, 1, 1, 1, -1, 1, 
      1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((-4 + d - 2*n4)*j[p4a, -1 + n1, 1, -1 + n3, 1 + n4, 0, 0, 0, 1, 1, 1, 1, 
      0, 1, 1])/(2*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((-5 + 2*d + n1 - 2*n3 - 3*n4)*(1 + n4)*j[p4a, -1 + n1, 1, -1 + n3, 
      2 + n4, 0, 0, 0, 1, 1, 1, 1, -1, 1, 1])/(2*(-3 + d - n4)*
     (-1 + d + n1 - 2*n3 - n4)) + 
   ((4 - d + 2*n4)*j[p4a, -1 + n1, 1, n3, 1 + n4, 0, 0, -1, 1, 1, 1, 1, 0, 1, 
      1])/((-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((4 - d + 2*n4)*j[p4a, -1 + n1, 1, n3, 1 + n4, 0, 0, 0, 0, 1, 1, 1, 0, 1, 
      1])/(2*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((4 - d + 2*n4)*j[p4a, -1 + n1, 1, n3, 1 + n4, 0, 0, 0, 0, 1, 2, 1, -1, 1, 
      1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((4 - d + 2*n4)*j[p4a, -1 + n1, 1, n3, 1 + n4, 0, 0, 0, 1, 1, 0, 2, -1, 1, 
      1])/(2*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((-28 + 19*d - 3*d^2 - 4*n1 + d*n1 - 8*n3 + 2*d*n3 - 17*n4 + 6*d*n4 - 
      3*n1*n4 - 2*n3*n4 - n4^2)*j[p4a, -1 + n1, 1, n3, 1 + n4, 0, 0, 0, 1, 1, 
      1, 1, -1, 1, 1])/(2*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((4 - d + 2*n4)*j[p4a, -1 + n1, 1, n3, 1 + n4, 0, 0, 0, 1, 1, 1, 1, 0, 0, 
      1])/(2*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((4 - d + 2*n4)*j[p4a, -1 + n1, 1, n3, 1 + n4, 0, 0, 0, 1, 1, 1, 2, -1, 1, 
      1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((4 - d + 2*n4)*j[p4a, -1 + n1, 1, n3, 1 + n4, 0, 0, 0, 1, 1, 2, 1, -1, 0, 
      1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((4 - d + 2*n4)*j[p4a, -1 + n1, 1, n3, 1 + n4, 0, 0, 0, 1, 1, 2, 1, -1, 1, 
      1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) - 
   j[p4a, -1 + n1, 1, n3, 1 + n4, 0, 0, 0, 1, 2, 1, 1, -1, 1, 1]/
    (2*(-3 + d - n4)) + ((-4 + d - 2*n4)*j[p4a, -1 + n1, 1, n3, 1 + n4, 0, 0, 
      0, 2, 1, 1, 1, -1, 0, 1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) - 
   ((-4 + d - 2*n4)*(1 + n4)*j[p4a, -1 + n1, 1, n3, 2 + n4, 0, 0, 0, 1, 1, 1, 
      1, -1, 1, 0])/(2*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((-4 + d - 2*n4)*j[p4a, -1 + n1, 2, n3, 1 + n4, 0, 0, 0, 1, 1, 1, 1, -1, 
      0, 1])/(2*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((-4 + d - 2*n4)*j[p4a, n1, 0, -1 + n3, 1 + n4, 0, 0, 0, 1, 1, 2, 1, -1, 
      1, 1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((1 + n4)*j[p4a, n1, 0, -1 + n3, 2 + n4, 0, 0, 0, 1, 1, 1, 1, -1, 1, 1])/
    (2*(3 - d + n4)) + ((-8 + 2*d - 4*n1 + d*n1 - 6*n4 + 2*d*n4 - 4*n3*n4 - 
      2*n4^2)*j[p4a, n1, 0, n3, 1 + n4, 0, 0, 0, 1, 1, 1, 1, -1, 1, 1])/
    (4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((4 - d + 2*n4)*j[p4a, n1, 0, n3, 1 + n4, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1])/
    (4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((-4 + d - 2*n4)*j[p4a, n1, 0, n3, 1 + n4, 0, 0, 0, 1, 1, 2, 1, -2, 1, 1])/
    (4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   j[p4a, n1, 0, n3, 1 + n4, 0, 0, 0, 1, 2, 1, 1, -1, 1, 1]/
    (2*(-3 + d - n4)) + ((4 - d + 2*n4)*j[p4a, n1, 0, n3, 1 + n4, 0, 0, 0, 2, 
      1, 1, 1, -2, 1, 1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) - 
   j[p4a, n1, 1, -1 + n3, 1 + n4, 0, 0, 0, 1, 0, 1, 1, -1, 1, 2]/
    (2*(-3 + d - n4)) + ((4 - d + 2*n4)*j[p4a, n1, 1, -1 + n3, 1 + n4, 0, 0, 
      0, 1, 1, 1, 0, 0, 1, 1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) - 
   ((-4 + d - 2*n4)*(-2 - 2*n1 + 2*n3 + n4)*j[p4a, n1, 1, -1 + n3, 1 + n4, 0, 
      0, 0, 1, 1, 1, 1, -1, 1, 1])/(2*(-3 + d - n4)*
     (-1 + d + n1 - 2*n3 - n4)) + 
   ((-4 + d - 2*n4)*j[p4a, n1, 1, -1 + n3, 1 + n4, 0, 0, 0, 1, 1, 2, 0, -1, 
      1, 1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((-6 + 3*d + 2*n1 - 4*n3 - 4*n4)*(1 + n4)*j[p4a, n1, 1, -1 + n3, 2 + n4, 
      0, 0, -1, 1, 1, 1, 1, -1, 1, 1])/(2*(-3 + d - n4)*
     (-1 + d + n1 - 2*n3 - n4)) + 
   ((1 + n4)*j[p4a, n1, 1, -1 + n3, 2 + n4, 0, 0, 0, 0, 1, 1, 1, -1, 1, 1])/
    (2*(-3 + d - n4)) + ((1 + n4)*j[p4a, n1, 1, -1 + n3, 2 + n4, 0, 0, 0, 1, 
      0, 1, 1, -1, 1, 1])/(2*(3 - d + n4)) + 
   ((1 + n4)*j[p4a, n1, 1, -1 + n3, 2 + n4, 0, 0, 0, 1, 1, 0, 1, -1, 1, 1])/
    (2*(-3 + d - n4)) + ((1 + n4)*j[p4a, n1, 1, -1 + n3, 2 + n4, 0, 0, 0, 1, 
      1, 1, 0, -1, 1, 1])/(2*(3 - d + n4)) + 
   ((1 + n4)*j[p4a, n1, 1, -1 + n3, 2 + n4, 0, 0, 0, 1, 1, 1, 1, -1, 1, 1])/
    (2*(-3 + d - n4)) + j[p4a, n1, 1, n3, n4, 0, 0, 0, 1, 0, 1, 1, -1, 1, 2]/
    (2*(-3 + d - n4)) + j[p4a, n1, 1, n3, n4, 0, 0, 0, 1, 2, 1, 1, -1, 1, 0]/
    (2*(-3 + d - n4)) + ((4 - d + 2*n4)*j[p4a, n1, 1, n3, 1 + n4, 0, 0, -1, 
      0, 1, 1, 1, 0, 1, 1])/(2*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((-4 + d - 2*n4)*j[p4a, n1, 1, n3, 1 + n4, 0, 0, -1, 0, 1, 1, 2, -1, 1, 
      1])/(2*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((4 - d + 2*n4)*j[p4a, n1, 1, n3, 1 + n4, 0, 0, -1, 0, 1, 2, 1, -1, 1, 1])/
    (4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((-4 + d - 2*n4)*j[p4a, n1, 1, n3, 1 + n4, 0, 0, -1, 1, 1, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((-4 + d - 2*n4)*j[p4a, n1, 1, n3, 1 + n4, 0, 0, -1, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((4 - d + 2*n4)*j[p4a, n1, 1, n3, 1 + n4, 0, 0, -1, 1, 1, 2, 0, -1, 1, 1])/
    (4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((4 - d + 2*n4)*j[p4a, n1, 1, n3, 1 + n4, 0, 0, -1, 1, 1, 2, 1, -1, 0, 1])/
    (4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) - 
   j[p4a, n1, 1, n3, 1 + n4, 0, 0, -1, 1, 2, 1, 1, -1, 1, 0]/
    (2*(-3 + d - n4)) + ((-4 + d - 2*n4)*j[p4a, n1, 1, n3, 1 + n4, 0, 0, -1, 
      2, 1, 1, 0, -1, 1, 1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((-4 + d - 2*n4)*j[p4a, n1, 1, n3, 1 + n4, 0, 0, -1, 2, 1, 1, 1, -1, 0, 
      1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((16 - 4*d + 4*n1 - d*n1 + 10*n4 - 2*d*n4 + 4*n3*n4 + 2*n4^2)*
     j[p4a, n1, 1, n3, 1 + n4, 0, 0, 0, 0, 1, 1, 1, -1, 1, 1])/
    (4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((-4 + d - 2*n4)*j[p4a, n1, 1, n3, 1 + n4, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1])/
    (4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((-4 + d - 2*n4)*j[p4a, n1, 1, n3, 1 + n4, 0, 0, 0, 0, 1, 1, 2, -2, 1, 1])/
    (4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) - 
   j[p4a, n1, 1, n3, 1 + n4, 0, 0, 0, 0, 2, 1, 1, -1, 1, 1]/
    (2*(-3 + d - n4)) + (n4*j[p4a, n1, 1, n3, 1 + n4, 0, 0, 0, 1, 0, 1, 1, 
      -1, 1, 1])/(2*(-3 + d - n4)) + 
   ((4*n1 - d*n1 + 2*n4 - 2*d*n4 + 4*n3*n4 + 2*n4^2)*
     j[p4a, n1, 1, n3, 1 + n4, 0, 0, 0, 1, 1, 0, 1, -1, 1, 1])/
    (4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((4 - d + 2*n4)*j[p4a, n1, 1, n3, 1 + n4, 0, 0, 0, 1, 1, 0, 2, -2, 1, 1])/
    (4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((-4 + d - 2*n4)*j[p4a, n1, 1, n3, 1 + n4, 0, 0, 0, 1, 1, 0, 2, -1, 1, 1])/
    (4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((-8 + 2*d - 4*n1 + d*n1 - 6*n4 + 2*d*n4 - 4*n3*n4 - 2*n4^2)*
     j[p4a, n1, 1, n3, 1 + n4, 0, 0, 0, 1, 1, 1, 0, -1, 1, 1])/
    (4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   (n1*(-4 + d - 2*n4)*j[p4a, n1, 1, n3, 1 + n4, 0, 0, 0, 1, 1, 1, 1, -1, 0, 
      1])/(2*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   (n4*j[p4a, n1, 1, n3, 1 + n4, 0, 0, 0, 1, 1, 1, 1, -1, 1, 0])/
    (2*(-3 + d - n4)) + ((8*n1 - 2*d*n1 - 4*n3 + d*n3 - 6*n4 + 3*d*n4 + 
      6*n1*n4 - 6*n3*n4 - 4*n4^2)*j[p4a, n1, 1, n3, 1 + n4, 0, 0, 0, 1, 1, 1, 
      1, -1, 1, 1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((-4 + d - 2*n4)*j[p4a, n1, 1, n3, 1 + n4, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1])/
    (4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((-4 + d - 2*n4)*j[p4a, n1, 1, n3, 1 + n4, 0, 0, 0, 1, 1, 2, 0, -2, 1, 1])/
    (4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((4 - d + 2*n4)*j[p4a, n1, 1, n3, 1 + n4, 0, 0, 0, 1, 1, 2, 0, -1, 1, 1])/
    (4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) - 
   j[p4a, n1, 1, n3, 1 + n4, 0, 0, 0, 1, 2, 0, 1, -1, 1, 1]/
    (2*(-3 + d - n4)) + j[p4a, n1, 1, n3, 1 + n4, 0, 0, 0, 1, 2, 1, 0, -1, 1, 
     1]/(2*(-3 + d - n4)) - j[p4a, n1, 1, n3, 1 + n4, 0, 0, 0, 1, 2, 1, 1, 
     -1, 1, 0]/(2*(-3 + d - n4)) + j[p4a, n1, 1, n3, 1 + n4, 0, 0, 0, 1, 2, 
     1, 1, -1, 1, 1]/(2*(-3 + d - n4)) + 
   ((4 - d + 2*n4)*j[p4a, n1, 1, n3, 1 + n4, 0, 0, 0, 2, 1, 1, 0, -2, 1, 1])/
    (4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) - 
   ((-4 + d - 2*n4)*(1 + n4)*j[p4a, n1, 1, n3, 2 + n4, -1, 0, 0, 1, 1, 1, 1, 
      -1, 1, 1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) - 
   ((-5 + 2*d + n1 - 2*n3 - 3*n4)*(1 + n4)*j[p4a, n1, 1, n3, 2 + n4, 0, 0, 
      -1, 1, 1, 1, 1, -1, 1, 0])/(2*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - 
      n4)) + ((-4 + d - 2*n4)*(1 + n4)*j[p4a, n1, 1, n3, 2 + n4, 0, 0, -1, 1, 
      1, 1, 1, -1, 1, 1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((1 + n4)*j[p4a, n1, 1, n3, 2 + n4, 0, 0, 0, 1, 1, 1, 1, -1, 1, 0])/
    (2*(3 - d + n4)) + (n3*(-4 + d - 2*n4)*j[p4a, n1, 1, 1 + n3, 1 + n4, 0, 
      0, -1, 1, 1, 1, 1, -1, 1, 1])/(4*(-3 + d - n4)*
     (-1 + d + n1 - 2*n3 - n4)) - 
   (n3*(-4 + d - 2*n4)*j[p4a, n1, 1, 1 + n3, 1 + n4, 0, 0, 0, 1, 1, 1, 1, -1, 
      0, 1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((-4 + d - 2*n4)*j[p4a, n1, 2, -1 + n3, 1 + n4, 0, 0, 0, 0, 1, 1, 1, -1, 
      1, 1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((4 - d + 2*n4)*j[p4a, n1, 2, -1 + n3, 1 + n4, 0, 0, 0, 1, 1, 0, 1, -1, 1, 
      1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((4 - d + 2*n4)*j[p4a, n1, 2, n3, 1 + n4, 0, 0, -1, 0, 1, 1, 1, -1, 1, 1])/
    (2*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((-4 + d - 2*n4)*j[p4a, n1, 2, n3, 1 + n4, 0, 0, -1, 1, 1, 0, 1, -1, 1, 
      1])/(2*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((4 - d + 2*n4)*j[p4a, n1, 2, n3, 1 + n4, 0, 0, -1, 1, 1, 1, 1, -1, 0, 1])/
    (2*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((-4 + d - 2*n4)*j[p4a, n1, 2, n3, 1 + n4, 0, 0, 0, 0, 1, 1, 1, -2, 1, 1])/
    (4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((4 - d + 2*n4)*j[p4a, n1, 2, n3, 1 + n4, 0, 0, 0, 1, 1, 0, 1, -2, 1, 1])/
    (4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) - 
   (n1*(-4 + d - 2*n4)*j[p4a, 1 + n1, 0, n3, 1 + n4, 0, 0, 0, 1, 1, 1, 1, -1, 
      1, 1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   (n1*(-4 + d - 2*n4)*j[p4a, 1 + n1, 1, n3, 1 + n4, 0, 0, 0, 0, 1, 1, 1, -1, 
      1, 1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   (n1*(-4 + d - 2*n4)*j[p4a, 1 + n1, 1, n3, 1 + n4, 0, 0, 0, 1, 1, 0, 1, -1, 
      1, 1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) - 
   (n1*(-4 + d - 2*n4)*j[p4a, 1 + n1, 1, n3, 1 + n4, 0, 0, 0, 1, 1, 1, 0, -1, 
      1, 1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, (n8_)?Positive, 
    (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n10 == 1 && n11 == 1 && n12 == 0 && 
    n13 == 1 && n14 == 1 && n2 == 1 && n5 == 0 && n6 == 0 && n7 == -1 && 
    n8 == 1 && n9 == 1 && n4 != 0 -> 
  ((-4 + d - 2*n4)*j[p4a, -1 + n1, 0, n3, 1 + n4, 0, 0, -1, 1, 1, 2, 1, 0, 1, 
      1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((4 - d + 2*n4)*j[p4a, -1 + n1, 0, n3, 1 + n4, 0, 0, -1, 2, 1, 1, 1, 0, 1, 
      1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((-5 + 2*d + n1 - 2*n3 - 3*n4)*(1 + n4)*j[p4a, -1 + n1, 1, -1 + n3, 
      2 + n4, 0, 0, -1, 1, 1, 1, 1, 0, 1, 1])/(2*(-3 + d - n4)*
     (-1 + d + n1 - 2*n3 - n4)) + 
   ((4 - d + 2*n4)*j[p4a, -1 + n1, 1, n3, 1 + n4, 0, 0, -1, 0, 1, 2, 1, 0, 1, 
      1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((4 - d + 2*n4)*j[p4a, -1 + n1, 1, n3, 1 + n4, 0, 0, -1, 1, 1, 0, 2, 0, 1, 
      1])/(2*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((-20 + 17*d - 3*d^2 - 4*n1 + d*n1 - 8*n3 + 2*d*n3 - 13*n4 + 6*d*n4 - 
      3*n1*n4 - 2*n3*n4 - n4^2)*j[p4a, -1 + n1, 1, n3, 1 + n4, 0, 0, -1, 1, 
      1, 1, 1, 0, 1, 1])/(2*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((4 - d + 2*n4)*j[p4a, -1 + n1, 1, n3, 1 + n4, 0, 0, -1, 1, 1, 1, 2, 0, 1, 
      1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((4 - d + 2*n4)*j[p4a, -1 + n1, 1, n3, 1 + n4, 0, 0, -1, 1, 1, 2, 1, 0, 0, 
      1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((4 - d + 2*n4)*j[p4a, -1 + n1, 1, n3, 1 + n4, 0, 0, -1, 1, 1, 2, 1, 0, 1, 
      1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) - 
   j[p4a, -1 + n1, 1, n3, 1 + n4, 0, 0, -1, 1, 2, 1, 1, 0, 1, 1]/
    (2*(-3 + d - n4)) + ((-4 + d - 2*n4)*j[p4a, -1 + n1, 1, n3, 1 + n4, 0, 0, 
      -1, 2, 1, 1, 1, 0, 0, 1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) - 
   ((-4 + d - 2*n4)*(1 + n4)*j[p4a, -1 + n1, 1, n3, 2 + n4, 0, 0, -1, 1, 1, 
      1, 1, 0, 1, 0])/(2*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((-4 + d - 2*n4)*j[p4a, -1 + n1, 2, n3, 1 + n4, 0, 0, -1, 1, 1, 1, 1, 0, 
      0, 1])/(2*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((-4 + d - 2*n4)*j[p4a, n1, 0, -1 + n3, 1 + n4, 0, 0, -1, 1, 1, 2, 1, 0, 
      1, 1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((4 - d + 2*n4)*j[p4a, n1, 0, -1 + n3, 1 + n4, 0, 0, 0, 1, 1, 1, 1, 0, 1, 
      1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((1 + n4)*j[p4a, n1, 0, -1 + n3, 2 + n4, 0, 0, -1, 1, 1, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4)) + ((-8 + 2*d - 4*n1 + d*n1 - 6*n4 + 2*d*n4 - 4*n3*n4 - 
      2*n4^2)*j[p4a, n1, 0, n3, 1 + n4, 0, 0, -1, 1, 1, 1, 1, 0, 1, 1])/
    (4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((-4 + d - 2*n4)*j[p4a, n1, 0, n3, 1 + n4, 0, 0, -1, 1, 1, 2, 1, -1, 1, 
      1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   j[p4a, n1, 0, n3, 1 + n4, 0, 0, -1, 1, 2, 1, 1, 0, 1, 1]/
    (2*(-3 + d - n4)) + ((4 - d + 2*n4)*j[p4a, n1, 0, n3, 1 + n4, 0, 0, -1, 
      2, 1, 1, 1, -1, 1, 1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) - 
   j[p4a, n1, 1, -1 + n3, 1 + n4, 0, 0, -1, 1, 0, 1, 1, 0, 1, 2]/
    (2*(-3 + d - n4)) - ((-4 + d - 2*n4)*(-1 - 2*n1 + 2*n3 + n4)*
     j[p4a, n1, 1, -1 + n3, 1 + n4, 0, 0, -1, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((-4 + d - 2*n4)*j[p4a, n1, 1, -1 + n3, 1 + n4, 0, 0, -1, 1, 1, 2, 0, 0, 
      1, 1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((-4 + d - 2*n4)*j[p4a, n1, 1, -1 + n3, 1 + n4, 0, 0, 0, 0, 1, 1, 1, 0, 1, 
      1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((-4 + d - 2*n4)*j[p4a, n1, 1, -1 + n3, 1 + n4, 0, 0, 0, 1, 1, 0, 1, 0, 1, 
      1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((4 - d + 2*n4)*j[p4a, n1, 1, -1 + n3, 1 + n4, 0, 0, 0, 1, 1, 1, 0, 0, 1, 
      1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((-6 + 3*d + 2*n1 - 4*n3 - 4*n4)*(1 + n4)*j[p4a, n1, 1, -1 + n3, 2 + n4, 
      0, 0, -2, 1, 1, 1, 1, 0, 1, 1])/(2*(-3 + d - n4)*
     (-1 + d + n1 - 2*n3 - n4)) + 
   ((1 + n4)*j[p4a, n1, 1, -1 + n3, 2 + n4, 0, 0, -1, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4)) + ((1 + n4)*j[p4a, n1, 1, -1 + n3, 2 + n4, 0, 0, -1, 1, 
      0, 1, 1, 0, 1, 1])/(2*(3 - d + n4)) + 
   ((1 + n4)*j[p4a, n1, 1, -1 + n3, 2 + n4, 0, 0, -1, 1, 1, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n4)) + ((1 + n4)*j[p4a, n1, 1, -1 + n3, 2 + n4, 0, 0, -1, 1, 
      1, 1, 0, 0, 1, 1])/(2*(3 - d + n4)) + 
   ((1 + n4)*j[p4a, n1, 1, -1 + n3, 2 + n4, 0, 0, -1, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4)) + j[p4a, n1, 1, n3, n4, 0, 0, -1, 1, 0, 1, 1, 0, 1, 2]/
    (2*(-3 + d - n4)) + j[p4a, n1, 1, n3, n4, 0, 0, -1, 1, 2, 1, 1, 0, 1, 0]/
    (2*(-3 + d - n4)) + ((-4 + d - 2*n4)*j[p4a, n1, 1, n3, 1 + n4, 0, 0, -2, 
      0, 1, 1, 2, 0, 1, 1])/(2*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((4 - d + 2*n4)*j[p4a, n1, 1, n3, 1 + n4, 0, 0, -2, 0, 1, 2, 1, 0, 1, 1])/
    (4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((4 - d + 2*n4)*j[p4a, n1, 1, n3, 1 + n4, 0, 0, -2, 1, 1, 2, 0, 0, 1, 1])/
    (4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((4 - d + 2*n4)*j[p4a, n1, 1, n3, 1 + n4, 0, 0, -2, 1, 1, 2, 1, 0, 0, 1])/
    (4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) - 
   j[p4a, n1, 1, n3, 1 + n4, 0, 0, -2, 1, 2, 1, 1, 0, 1, 0]/
    (2*(-3 + d - n4)) + ((-4 + d - 2*n4)*j[p4a, n1, 1, n3, 1 + n4, 0, 0, -2, 
      2, 1, 1, 0, 0, 1, 1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((-4 + d - 2*n4)*j[p4a, n1, 1, n3, 1 + n4, 0, 0, -2, 2, 1, 1, 1, 0, 0, 1])/
    (4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((12 - 3*d + 4*n1 - d*n1 + 8*n4 - 2*d*n4 + 4*n3*n4 + 2*n4^2)*
     j[p4a, n1, 1, n3, 1 + n4, 0, 0, -1, 0, 1, 1, 1, 0, 1, 1])/
    (4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((-4 + d - 2*n4)*j[p4a, n1, 1, n3, 1 + n4, 0, 0, -1, 0, 1, 1, 2, -1, 1, 
      1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) - 
   j[p4a, n1, 1, n3, 1 + n4, 0, 0, -1, 0, 2, 1, 1, 0, 1, 1]/
    (2*(-3 + d - n4)) + (n4*j[p4a, n1, 1, n3, 1 + n4, 0, 0, -1, 1, 0, 1, 1, 
      0, 1, 1])/(2*(-3 + d - n4)) + 
   ((4 - d + 4*n1 - d*n1 + 4*n4 - 2*d*n4 + 4*n3*n4 + 2*n4^2)*
     j[p4a, n1, 1, n3, 1 + n4, 0, 0, -1, 1, 1, 0, 1, 0, 1, 1])/
    (4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((4 - d + 2*n4)*j[p4a, n1, 1, n3, 1 + n4, 0, 0, -1, 1, 1, 0, 2, -1, 1, 1])/
    (4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((-4 + d - 2*n4)*j[p4a, n1, 1, n3, 1 + n4, 0, 0, -1, 1, 1, 0, 2, 0, 1, 1])/
    (4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((-8 + 2*d - 4*n1 + d*n1 - 6*n4 + 2*d*n4 - 4*n3*n4 - 2*n4^2)*
     j[p4a, n1, 1, n3, 1 + n4, 0, 0, -1, 1, 1, 1, 0, 0, 1, 1])/
    (4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((1 + n1)*(-4 + d - 2*n4)*j[p4a, n1, 1, n3, 1 + n4, 0, 0, -1, 1, 1, 1, 1, 
      0, 0, 1])/(2*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   (n4*j[p4a, n1, 1, n3, 1 + n4, 0, 0, -1, 1, 1, 1, 1, 0, 1, 0])/
    (2*(-3 + d - n4)) + ((-4 + d + 8*n1 - 2*d*n1 - 4*n3 + d*n3 - 8*n4 + 
      3*d*n4 + 6*n1*n4 - 6*n3*n4 - 4*n4^2)*j[p4a, n1, 1, n3, 1 + n4, 0, 0, 
      -1, 1, 1, 1, 1, 0, 1, 1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((-4 + d - 2*n4)*j[p4a, n1, 1, n3, 1 + n4, 0, 0, -1, 1, 1, 2, 0, -1, 1, 
      1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((4 - d + 2*n4)*j[p4a, n1, 1, n3, 1 + n4, 0, 0, -1, 1, 1, 2, 0, 0, 1, 1])/
    (4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) - 
   j[p4a, n1, 1, n3, 1 + n4, 0, 0, -1, 1, 2, 0, 1, 0, 1, 1]/
    (2*(-3 + d - n4)) + j[p4a, n1, 1, n3, 1 + n4, 0, 0, -1, 1, 2, 1, 0, 0, 1, 
     1]/(2*(-3 + d - n4)) - j[p4a, n1, 1, n3, 1 + n4, 0, 0, -1, 1, 2, 1, 1, 
     0, 1, 0]/(2*(-3 + d - n4)) + j[p4a, n1, 1, n3, 1 + n4, 0, 0, -1, 1, 2, 
     1, 1, 0, 1, 1]/(2*(-3 + d - n4)) + 
   ((4 - d + 2*n4)*j[p4a, n1, 1, n3, 1 + n4, 0, 0, -1, 2, 1, 1, 0, -1, 1, 1])/
    (4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) - 
   ((-4 + d - 2*n4)*(1 + n4)*j[p4a, n1, 1, n3, 2 + n4, -1, 0, -1, 1, 1, 1, 1, 
      0, 1, 1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) - 
   ((-5 + 2*d + n1 - 2*n3 - 3*n4)*(1 + n4)*j[p4a, n1, 1, n3, 2 + n4, 0, 0, 
      -2, 1, 1, 1, 1, 0, 1, 0])/(2*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((-4 + d - 2*n4)*(1 + n4)*j[p4a, n1, 1, n3, 2 + n4, 0, 0, -2, 1, 1, 1, 1, 
      0, 1, 1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((1 + n4)*j[p4a, n1, 1, n3, 2 + n4, 0, 0, -1, 1, 1, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4)) + (n3*(-4 + d - 2*n4)*j[p4a, n1, 1, 1 + n3, 1 + n4, 0, 
      0, -2, 1, 1, 1, 1, 0, 1, 1])/(4*(-3 + d - n4)*
     (-1 + d + n1 - 2*n3 - n4)) - 
   (n3*(-4 + d - 2*n4)*j[p4a, n1, 1, 1 + n3, 1 + n4, 0, 0, -1, 1, 1, 1, 1, 0, 
      0, 1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((-4 + d - 2*n4)*j[p4a, n1, 2, -1 + n3, 1 + n4, 0, 0, -1, 0, 1, 1, 1, 0, 
      1, 1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((4 - d + 2*n4)*j[p4a, n1, 2, -1 + n3, 1 + n4, 0, 0, -1, 1, 1, 0, 1, 0, 1, 
      1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((4 - d + 2*n4)*j[p4a, n1, 2, n3, 1 + n4, 0, 0, -2, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((-4 + d - 2*n4)*j[p4a, n1, 2, n3, 1 + n4, 0, 0, -2, 1, 1, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((4 - d + 2*n4)*j[p4a, n1, 2, n3, 1 + n4, 0, 0, -2, 1, 1, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((-4 + d - 2*n4)*j[p4a, n1, 2, n3, 1 + n4, 0, 0, -1, 0, 1, 1, 1, -1, 1, 
      1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   ((4 - d + 2*n4)*j[p4a, n1, 2, n3, 1 + n4, 0, 0, -1, 1, 1, 0, 1, -1, 1, 1])/
    (4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) - 
   (n1*(-4 + d - 2*n4)*j[p4a, 1 + n1, 0, n3, 1 + n4, 0, 0, -1, 1, 1, 1, 1, 0, 
      1, 1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   (n1*(-4 + d - 2*n4)*j[p4a, 1 + n1, 1, n3, 1 + n4, 0, 0, -1, 0, 1, 1, 1, 0, 
      1, 1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) + 
   (n1*(-4 + d - 2*n4)*j[p4a, 1 + n1, 1, n3, 1 + n4, 0, 0, -1, 1, 1, 0, 1, 0, 
      1, 1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)) - 
   (n1*(-4 + d - 2*n4)*j[p4a, 1 + n1, 1, n3, 1 + n4, 0, 0, -1, 1, 1, 1, 0, 0, 
      1, 1])/(4*(-3 + d - n4)*(-1 + d + n1 - 2*n3 - n4)), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, (n8_)?Positive, 
    (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n10 == 1 && n11 == 1 && n12 == -1 && 
    n13 == 1 && n14 == 1 && n2 == 1 && n4 == 0 && n5 == 0 && n6 == 0 && 
    n7 == 0 && n8 == 1 && n9 == 1 -> 
  ((-2 + d - n3)*j[p4a, -1 + n1, 0, n3, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1])/
    (-3 + d - n1) + ((4 - 2*d + n1 + n3)*j[p4a, -1 + n1, 0, n3, 0, 0, 0, 0, 
      1, 1, 2, 1, -1, 1, 1])/(2*(-3 + d - n1)) + 
   ((2 - d + n3)*j[p4a, -1 + n1, 0, n3, 0, 0, 0, 0, 2, 1, 1, 1, -1, 1, 1])/
    (2*(-3 + d - n1)) - ((-3 + 2*d - 2*n3)*n3*j[p4a, -1 + n1, 0, 1 + n3, 0, 
      0, 0, 0, 1, 1, 1, 1, -1, 1, 1])/(2*(-3 + d - n1)) + 
   ((-2 + d - n3)*j[p4a, -1 + n1, 1, -1 + n3, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 
      1])/(-3 + d - n1) - (2*(-2 + d - n3)*j[p4a, -1 + n1, 1, n3, 0, 0, 0, 
      -1, 1, 1, 1, 1, 0, 1, 1])/(-3 + d - n1) + 
   ((-3 + 2*d - 2*n3)*j[p4a, -1 + n1, 1, n3, 0, 0, 0, 0, 0, 1, 1, 1, -1, 2, 
      1])/(2*(-3 + d - n1)) + ((2 - d + n3)*j[p4a, -1 + n1, 1, n3, 0, 0, 0, 
      0, 0, 1, 1, 1, 0, 1, 1])/(-3 + d - n1) + 
   ((-4 + 2*d - n1 - n3)*j[p4a, -1 + n1, 1, n3, 0, 0, 0, 0, 0, 1, 2, 1, -1, 
      1, 1])/(2*(-3 + d - n1)) + 
   ((2 - d + n3)*j[p4a, -1 + n1, 1, n3, 0, 0, 0, 0, 1, 1, 0, 2, -1, 1, 1])/
    (-3 + d - n1) + ((-6 + 3*d - n1 - 2*n3)*j[p4a, -1 + n1, 1, n3, 0, 0, 0, 
      0, 1, 1, 1, 1, -1, 1, 1])/(-3 + d - n1) + 
   ((2 - d + n3)*j[p4a, -1 + n1, 1, n3, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1])/
    (-3 + d - n1) + ((-4 + 2*d - n1 - n3)*j[p4a, -1 + n1, 1, n3, 0, 0, 0, 0, 
      1, 1, 2, 1, -1, 0, 1])/(2*(-3 + d - n1)) + 
   ((-5 + 2*d - n1 - n3)*j[p4a, -1 + n1, 1, n3, 0, 0, 0, 0, 2, 1, 1, 1, -1, 
      0, 1])/(2*(-3 + d - n1)) + 
   ((-3 + 2*d - 2*n3)*n3*j[p4a, -1 + n1, 1, 1 + n3, 0, 0, 0, 0, 0, 1, 1, 1, 
      -1, 1, 1])/(-3 + d - n1) + ((-6*n3 + 3*d*n3 - n1*n3 - 2*n3^2)*
     j[p4a, -1 + n1, 1, 1 + n3, 0, 0, 0, 0, 1, 1, 1, 1, -1, 0, 1])/
    (2*(-3 + d - n1)) + ((-6 + 3*d - n1 - 2*n3)*j[p4a, -1 + n1, 2, n3, 0, 0, 
      0, 0, 0, 1, 1, 1, -1, 1, 1])/(2*(-3 + d - n1)) + 
   ((-5 + 2*d - n1 - n3)*j[p4a, -1 + n1, 2, n3, 0, 0, 0, 0, 1, 1, 1, 1, -1, 
      0, 1])/(-3 + d - n1) + ((4 - 2*d + n1 + n3)*j[p4a, n1, 0, -1 + n3, 0, 
      0, 0, 0, 1, 1, 2, 1, -1, 1, 1])/(2*(-3 + d - n1)) + 
   j[p4a, n1, 0, n3, 0, 0, 0, -1, 1, 1, 2, 1, -1, 1, 1]/2 + 
   ((-7 + 4*d - 2*n1 + d*n1 + 2*n3 - 3*d*n3 + 2*n3^2)*
     j[p4a, n1, 0, n3, 0, 0, 0, 0, 1, 1, 1, 1, -1, 1, 1])/(2*(-3 + d - n1)) + 
   ((2 - d + n3)*j[p4a, n1, 0, n3, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n1)) + ((4 - 2*d + n1 + n3)*j[p4a, n1, 0, n3, 0, 0, 0, 0, 1, 
      1, 2, 1, -2, 1, 1])/(2*(-3 + d - n1)) + 
   ((-4 + 2*d - n1 - n3)*j[p4a, n1, 0, n3, 0, 0, 0, 0, 1, 1, 2, 1, -1, 1, 1])/
    (2*(-3 + d - n1)) + ((2 - d + n3)*j[p4a, n1, 0, n3, 0, 0, 0, 0, 2, 1, 1, 
      1, -2, 1, 1])/(2*(-3 + d - n1)) + 
   (n3*j[p4a, n1, 0, 1 + n3, 0, 0, 0, -1, 1, 1, 1, 1, -1, 1, 1])/2 - 
   ((-3 + 2*d - 2*n3)*n3*j[p4a, n1, 0, 1 + n3, 0, 0, 0, 0, 1, 1, 1, 1, -2, 1, 
      1])/(2*(-3 + d - n1)) + ((-3 + 2*d - 2*n3)*n3*
     j[p4a, n1, 0, 1 + n3, 0, 0, 0, 0, 1, 1, 1, 1, -1, 1, 1])/
    (2*(-3 + d - n1)) + ((2 - d + n3)*j[p4a, n1, 1, -1 + n3, 0, 0, 0, 0, 1, 
      1, 1, 0, 0, 1, 1])/(2*(-3 + d - n1)) + 
   ((1 - d + n3)*j[p4a, n1, 1, -1 + n3, 0, 0, 0, 0, 1, 1, 2, 0, -1, 1, 1])/
    (2*(-3 + d - n1)) + ((2 - d + n3)*j[p4a, n1, 1, n3, 0, 0, 0, -1, 0, 1, 1, 
      1, 0, 1, 1])/(-3 + d - n1) + 
   ((-2 + d - n3)*j[p4a, n1, 1, n3, 0, 0, 0, -1, 0, 1, 1, 2, -1, 1, 1])/
    (-3 + d - n1) + ((-1 + d - n3)*j[p4a, n1, 1, n3, 0, 0, 0, -1, 0, 1, 2, 1, 
      -1, 1, 1])/(2*(-3 + d - n1)) + 
   ((-2 + d - n3)*j[p4a, n1, 1, n3, 0, 0, 0, -1, 1, 1, 1, 1, 0, 0, 1])/
    (-3 + d - n1) + ((-2 + d - n3)*j[p4a, n1, 1, n3, 0, 0, 0, -1, 1, 1, 1, 1, 
      0, 1, 1])/(-3 + d - n1) + 
   ((-1 + d - n3)*j[p4a, n1, 1, n3, 0, 0, 0, -1, 1, 1, 2, 0, -1, 1, 1])/
    (2*(-3 + d - n1)) + ((-1 + d - n3)*j[p4a, n1, 1, n3, 0, 0, 0, -1, 1, 1, 
      2, 1, -1, 0, 1])/(2*(-3 + d - n1)) + 
   ((-2 + d - n3)*j[p4a, n1, 1, n3, 0, 0, 0, -1, 2, 1, 1, 0, -1, 1, 1])/
    (2*(-3 + d - n1)) + ((-2 + d - n3)*j[p4a, n1, 1, n3, 0, 0, 0, -1, 2, 1, 
      1, 1, -1, 0, 1])/(2*(-3 + d - n1)) + 
   ((11 - 6*d - n1 + d*n1 - 9*n3 + 7*d*n3 - 4*n1*n3 - 4*n3^2)*
     j[p4a, n1, 1, n3, 0, 0, 0, 0, 0, 1, 1, 1, -1, 1, 1])/(2*(-3 + d - n1)) + 
   ((3 - 2*d + 2*n3)*j[p4a, n1, 1, n3, 0, 0, 0, 0, 0, 1, 1, 1, -1, 2, 1])/
    (2*(-3 + d - n1)) + ((2 - d + n1)*j[p4a, n1, 1, n3, 0, 0, 0, 0, 0, 1, 1, 
      1, 0, 1, 1])/(2*(-3 + d - n1)) + 
   ((4 - 2*d + n1 + n3)*j[p4a, n1, 1, n3, 0, 0, 0, 0, 0, 1, 1, 2, -2, 1, 1])/
    (2*(-3 + d - n1)) + ((-4 + 2*d - n1 - n3)*j[p4a, n1, 1, n3, 0, 0, 0, 0, 
      0, 1, 1, 2, -1, 1, 1])/(2*(-3 + d - n1)) + 
   ((-3 + 2*d + 2*n1 - d*n1 + n3 - d*n3 + 2*n1*n3)*j[p4a, n1, 1, n3, 0, 0, 0, 
      0, 1, 1, 0, 1, -1, 1, 1])/(2*(-3 + d - n1)) + 
   ((2 - d + n3)*j[p4a, n1, 1, n3, 0, 0, 0, 0, 1, 1, 0, 2, -2, 1, 1])/
    (2*(-3 + d - n1)) + ((-2 + d - n3)*j[p4a, n1, 1, n3, 0, 0, 0, 0, 1, 1, 0, 
      2, -1, 1, 1])/(2*(-3 + d - n1)) + 
   ((-4 - n1 - d*n1 - n3 + d*n3)*j[p4a, n1, 1, n3, 0, 0, 0, 0, 1, 1, 1, 0, 
      -1, 1, 1])/(2*(-3 + d - n1)) + 
   ((24 - 11*d + 4*n1 - 6*n3 + 5*d*n3 - 3*n1*n3 - 2*n3^2)*
     j[p4a, n1, 1, n3, 0, 0, 0, 0, 1, 1, 1, 1, -1, 0, 1])/(2*(-3 + d - n1)) + 
   ((-6 + 3*d - n1 - 2*n3)*j[p4a, n1, 1, n3, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 
      1])/(2*(-3 + d - n1)) + ((1 - d + n3)*j[p4a, n1, 1, n3, 0, 0, 0, 0, 1, 
      1, 2, 0, -2, 1, 1])/(2*(-3 + d - n1)) + 
   ((-1 + d - n3)*j[p4a, n1, 1, n3, 0, 0, 0, 0, 1, 1, 2, 0, -1, 1, 1])/
    (2*(-3 + d - n1)) + ((5 - 2*d + n1 + n3)*j[p4a, n1, 1, n3, 0, 0, 0, 0, 2, 
      1, 1, 0, -2, 1, 1])/(2*(-3 + d - n1)) + 
   ((6*n3 - d*n3 + 3*n1*n3 - 2*n3^2)*j[p4a, n1, 1, 1 + n3, 0, 0, 0, -1, 0, 1, 
      1, 1, -1, 1, 1])/(2*(-3 + d - n1)) + 
   ((-(d*n3) - n1*n3 + 2*n3^2)*j[p4a, n1, 1, 1 + n3, 0, 0, 0, -1, 1, 1, 0, 1, 
      -1, 1, 1])/(2*(-3 + d - n1)) + 
   ((d*n3 + n1*n3 - 2*n3^2)*j[p4a, n1, 1, 1 + n3, 0, 0, 0, -1, 1, 1, 1, 0, 
      -1, 1, 1])/(2*(-3 + d - n1)) + ((6*n3 - d*n3 + 3*n1*n3 - 2*n3^2)*
     j[p4a, n1, 1, 1 + n3, 0, 0, 0, -1, 1, 1, 1, 1, -1, 0, 1])/
    (2*(-3 + d - n1)) + ((-3 + 2*d - 2*n3)*n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, 
      0, 0, 1, 1, 1, -2, 1, 1])/(2*(-3 + d - n1)) - 
   ((-3 + 2*d - 2*n3)*n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, 0, 0, 1, 1, 1, -1, 1, 
      1])/(-3 + d - n1) + ((-3 + 2*d - 2*n3)*n3*j[p4a, n1, 1, 1 + n3, 0, 0, 
      0, 0, 1, 1, 0, 1, -2, 1, 1])/(2*(-3 + d - n1)) - 
   ((-3 + 2*d - 2*n3)*n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, 0, 1, 1, 1, 0, -2, 1, 
      1])/(2*(-3 + d - n1)) + n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, 0, 1, 1, 1, 
     1, -2, 0, 1] + ((6*n3 - 3*d*n3 + n1*n3 + 2*n3^2)*
     j[p4a, n1, 1, 1 + n3, 0, 0, 0, 0, 1, 1, 1, 1, -1, 0, 1])/
    (2*(-3 + d - n1)) + ((1 - d + n3)*j[p4a, n1, 2, -1 + n3, 0, 0, 0, 0, 0, 
      1, 1, 1, -1, 1, 1])/(2*(-3 + d - n1)) + 
   ((5 - 2*d + n1 + n3)*j[p4a, n1, 2, -1 + n3, 0, 0, 0, 0, 1, 1, 0, 1, -1, 1, 
      1])/(2*(-3 + d - n1)) + ((-1 + d - n3)*j[p4a, n1, 2, n3, 0, 0, 0, -1, 
      0, 1, 1, 1, -1, 1, 1])/(-3 + d - n1) + 
   ((-4 + d - n1)*j[p4a, n1, 2, n3, 0, 0, 0, -1, 1, 1, 0, 1, -1, 1, 1])/
    (2*(-3 + d - n1)) + ((-1 + d - n3)*j[p4a, n1, 2, n3, 0, 0, 0, -1, 1, 1, 
      1, 1, -1, 0, 1])/(-3 + d - n1) + 
   ((1 - d + n3)*j[p4a, n1, 2, n3, 0, 0, 0, 0, 0, 1, 1, 1, -2, 1, 1])/
    (2*(-3 + d - n1)) + ((5 - 2*d + n1 + n3)*j[p4a, n1, 2, n3, 0, 0, 0, 0, 1, 
      1, 0, 1, -2, 1, 1])/(2*(-3 + d - n1)) - 
   (n1*(-2 + d - n3)*j[p4a, 1 + n1, 0, n3, 0, 0, 0, 0, 1, 1, 1, 1, -1, 1, 1])/
    (2*(-3 + d - n1)) - (n1*(-1 + d - n3)*j[p4a, 1 + n1, 1, n3, 0, 0, 0, 0, 
      0, 1, 1, 1, -1, 1, 1])/(2*(-3 + d - n1)) + 
   (n1*(-2 + d - n3)*j[p4a, 1 + n1, 1, n3, 0, 0, 0, 0, 1, 1, 0, 1, -1, 1, 1])/
    (2*(-3 + d - n1)) + (n1*(-1 + d - n3)*j[p4a, 1 + n1, 1, n3, 0, 0, 0, 0, 
      1, 1, 1, 0, -1, 1, 1])/(2*(-3 + d - n1)), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, (n8_)?Positive, 
    (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n10 == 1 && n11 == 1 && n12 == 0 && 
    n13 == 1 && n14 == 1 && n2 == 1 && n4 == 0 && n5 == 0 && n6 == 0 && 
    n7 == -1 && n8 == 1 && n9 == 1 -> 
  j[p4a, -2 + n1, 1, n3, 0, 0, 0, -1, 1, 1, 1, 1, 0, 2, 1]/
    (-5 + 2*d - n1 - n3) + j[p4a, -2 + n1, 1, n3, 0, 0, 0, -1, 2, 1, 1, 1, 0, 
     1, 1]/(-5 + 2*d - n1 - n3) + 
   (n3*j[p4a, -2 + n1, 1, 1 + n3, 0, 0, 0, -1, 1, 1, 1, 1, 0, 1, 1])/
    (-5 + 2*d - n1 - n3) + j[p4a, -2 + n1, 2, n3, 0, 0, 0, -1, 1, 1, 1, 1, 0, 
     1, 1]/(-5 + 2*d - n1 - n3) + j[p4a, -1 + n1, 0, n3, 0, 0, 0, -1, 1, 1, 
     2, 1, 0, 1, 1]/(2*(-5 + 2*d - n1 - n3)) - 
   (n3*j[p4a, -1 + n1, 0, 1 + n3, 0, 0, 0, -1, 1, 1, 1, 1, 0, 1, 1])/
    (-5 + 2*d - n1 - n3) - j[p4a, -1 + n1, 1, n3, 0, 0, 0, -1, 0, 1, 2, 1, 0, 
     1, 1]/(2*(-5 + 2*d - n1 - n3)) + 
   ((5 - 3*d + 3*n1 + n3)*j[p4a, -1 + n1, 1, n3, 0, 0, 0, -1, 1, 1, 1, 1, 0, 
      1, 1])/(-5 + 2*d - n1 - n3) - j[p4a, -1 + n1, 1, n3, 0, 0, 0, -1, 1, 1, 
     2, 1, 0, 0, 1]/(2*(-5 + 2*d - n1 - n3)) + 
   j[p4a, -1 + n1, 1, n3, 0, 0, 0, -1, 2, 1, 1, 0, 0, 1, 1]/
    (5 - 2*d + n1 + n3) + j[p4a, -1 + n1, 1, n3, 0, 0, 0, -1, 2, 1, 1, 1, 0, 
     0, 1]/(2*(-5 + 2*d - n1 - n3)) - j[p4a, -1 + n1, 1, n3, 0, 0, 0, 0, 1, 
     1, 1, 2, 0, 2, 1]/(2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) - 
   j[p4a, -1 + n1, 1, n3, 0, 0, 0, 0, 2, 1, 1, 2, 0, 1, 1]/
    (2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) + 
   (n3*j[p4a, -1 + n1, 1, 1 + n3, 0, 0, 0, -1, 0, 1, 1, 1, 0, 1, 1])/
    (-5 + 2*d - n1 - n3) + (n3*j[p4a, -1 + n1, 1, 1 + n3, 0, 0, 0, -1, 1, 1, 
      0, 1, 0, 1, 1])/(-5 + 2*d - n1 - n3) - 
   (n3*j[p4a, -1 + n1, 1, 1 + n3, 0, 0, 0, -1, 1, 1, 1, 0, 0, 1, 1])/
    (-5 + 2*d - n1 - n3) - (3*n3*j[p4a, -1 + n1, 1, 1 + n3, 0, 0, 0, -1, 1, 
      1, 1, 1, 0, 0, 1])/(2*(5 - 2*d + n1 + n3)) + 
   (n3*j[p4a, -1 + n1, 1, 1 + n3, 0, 0, 0, -1, 1, 1, 1, 1, 0, 2, 1])/
    (2*(2 - d + n3)*(5 - 2*d + n1 + n3)) + 
   (n3*j[p4a, -1 + n1, 1, 1 + n3, 0, 0, 0, -1, 1, 1, 1, 2, 0, 1, 1])/
    ((2 - d + n3)*(5 - 2*d + n1 + n3)) + 
   (n3*j[p4a, -1 + n1, 1, 1 + n3, 0, 0, 0, -1, 1, 1, 2, 1, 0, 1, 1])/
    ((2 - d + n3)*(5 - 2*d + n1 + n3)) - 
   (n3*j[p4a, -1 + n1, 1, 1 + n3, 0, 0, 0, 0, 1, 1, 1, 2, 0, 1, 1])/
    (2*(2 - d + n3)*(5 - 2*d + n1 + n3)) + 
   j[p4a, -1 + n1, 2, n3, 0, 0, 0, -1, 0, 1, 1, 1, 0, 1, 1]/
    (2*(-5 + 2*d - n1 - n3)) + j[p4a, -1 + n1, 2, n3, 0, 0, 0, -1, 1, 1, 0, 
     1, 0, 1, 1]/(5 - 2*d + n1 + n3) + 
   j[p4a, -1 + n1, 2, n3, 0, 0, 0, -1, 1, 1, 1, 1, 0, 0, 1]/
    (-5 + 2*d - n1 - n3) - j[p4a, -1 + n1, 2, n3, 0, 0, 0, 0, 1, 1, 1, 2, 0, 
     1, 1]/(2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) + 
   (n3*j[p4a, -1 + n1, 2, 1 + n3, 0, 0, 0, -1, 1, 1, 1, 1, 0, 1, 1])/
    (2*(2 - d + n3)*(5 - 2*d + n1 + n3)) + 
   j[p4a, n1, 0, -1 + n3, 0, 0, 0, -1, 1, 1, 2, 1, 0, 1, 1]/
    (2*(-5 + 2*d - n1 - n3)) - j[p4a, n1, 0, -1 + n3, 0, 0, 0, 0, 1, 1, 1, 1, 
     0, 1, 1]/(2*(-5 + 2*d - n1 - n3)) - 
   j[p4a, n1, 0, n3, 0, 0, 0, -2, 1, 1, 2, 1, 0, 1, 1]/
    (2*(-5 + 2*d - n1 - n3)) + 
   ((-1 - n3)*j[p4a, n1, 0, n3, 0, 0, 0, -1, 1, 1, 1, 1, 0, 1, 1])/
    (2*(5 - 2*d + n1 + n3)) + j[p4a, n1, 0, n3, 0, 0, 0, -1, 1, 1, 2, 1, -1, 
     1, 1]/(2*(-5 + 2*d - n1 - n3)) - j[p4a, n1, 0, n3, 0, 0, 0, -1, 1, 1, 2, 
     1, 0, 1, 1]/(2*(-5 + 2*d - n1 - n3)) + 
   j[p4a, n1, 0, n3, 0, 0, 0, -1, 2, 1, 2, 1, 0, 1, 1]/
    ((-2 + d - n3)*(-5 + 2*d - n1 - n3)) - 
   j[p4a, n1, 0, n3, 0, 0, 0, 0, 1, 1, 1, 1, 0, 2, 1]/
    (2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) + 
   ((-6 + d - 2*n1 + n3)*j[p4a, n1, 0, n3, 0, 0, 0, 0, 2, 1, 1, 1, 0, 1, 1])/
    (2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) + 
   j[p4a, n1, 0, n3, 0, 0, 0, 0, 2, 1, 1, 1, 0, 2, 1]/
    (2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) + 
   (n3*j[p4a, n1, 0, 1 + n3, 0, 0, 0, -2, 1, 1, 1, 1, 0, 1, 1])/
    (2*(5 - 2*d + n1 + n3)) + (n3*j[p4a, n1, 0, 1 + n3, 0, 0, 0, -1, 1, 1, 1, 
      1, 0, 1, 1])/(5 - 2*d + n1 + n3) + 
   (n3*j[p4a, n1, 0, 1 + n3, 0, 0, 0, -1, 1, 1, 1, 1, 0, 2, 1])/
    (2*(2 - d + n3)*(5 - 2*d + n1 + n3)) + 
   (n3*j[p4a, n1, 0, 1 + n3, 0, 0, 0, -1, 1, 1, 1, 2, 0, 1, 1])/
    (2*(2 - d + n3)*(5 - 2*d + n1 + n3)) - 
   (n3*j[p4a, n1, 0, 1 + n3, 0, 0, 0, -1, 1, 1, 2, 1, 0, 1, 1])/
    ((2 - d + n3)*(5 - 2*d + n1 + n3)) + 
   (n3*j[p4a, n1, 0, 1 + n3, 0, 0, 0, -1, 2, 1, 1, 1, 0, 1, 1])/
    ((2 - d + n3)*(5 - 2*d + n1 + n3)) - 
   (n3*j[p4a, n1, 0, 1 + n3, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(2 - d + n3)*(5 - 2*d + n1 + n3)) - 
   (n3*j[p4a, n1, 0, 1 + n3, 0, 0, 0, 0, 1, 1, 1, 1, 0, 2, 1])/
    (2*(2 - d + n3)*(5 - 2*d + n1 + n3)) - 
   (n3*j[p4a, n1, 0, 1 + n3, 0, 0, 0, 0, 2, 1, 1, 1, 0, 1, 1])/
    (2*(2 - d + n3)*(5 - 2*d + n1 + n3)) + 
   ((-n3 - n3^2)*j[p4a, n1, 0, 2 + n3, 0, 0, 0, -1, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) + 
   j[p4a, n1, 1, -1 + n3, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1]/
    (2*(-5 + 2*d - n1 - n3)) + j[p4a, n1, 1, -1 + n3, 0, 0, 0, 0, 1, 1, 0, 1, 
     0, 1, 1]/(2*(-5 + 2*d - n1 - n3)) - 
   j[p4a, n1, 1, -1 + n3, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1]/
    (2*(-5 + 2*d - n1 - n3)) + 
   ((2 + n3)*j[p4a, n1, 1, n3, 0, 0, 0, -1, 0, 1, 1, 1, 0, 1, 1])/
    (2*(5 - 2*d + n1 + n3)) + j[p4a, n1, 1, n3, 0, 0, 0, -1, 0, 1, 1, 2, -1, 
     1, 1]/(2*(-5 + 2*d - n1 - n3)) - j[p4a, n1, 1, n3, 0, 0, 0, -1, 0, 1, 1, 
     2, 0, 1, 1]/(2*(-5 + 2*d - n1 - n3)) - 
   j[p4a, n1, 1, n3, 0, 0, 0, -1, 0, 1, 1, 2, 0, 2, 1]/
    (2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) + 
   ((1 + n3)*j[p4a, n1, 1, n3, 0, 0, 0, -1, 1, 1, 0, 1, 0, 1, 1])/
    (2*(5 - 2*d + n1 + n3)) + ((-2 - n3)*j[p4a, n1, 1, n3, 0, 0, 0, -1, 1, 1, 
      1, 0, 0, 1, 1])/(2*(5 - 2*d + n1 + n3)) + 
   ((-2*n1 + n3)*j[p4a, n1, 1, n3, 0, 0, 0, -1, 1, 1, 1, 1, 0, 0, 1])/
    (2*(5 - 2*d + n1 + n3)) - j[p4a, n1, 1, n3, 0, 0, 0, -1, 2, 1, 1, 0, -1, 
     1, 1]/(2*(-5 + 2*d - n1 - n3)) - j[p4a, n1, 1, n3, 0, 0, 0, -1, 2, 1, 1, 
     0, 0, 2, 1]/(2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) - 
   j[p4a, n1, 1, n3, 0, 0, 0, -1, 2, 1, 2, 0, 0, 1, 1]/
    ((-2 + d - n3)*(-5 + 2*d - n1 - n3)) + 
   j[p4a, n1, 1, n3, 0, 0, 0, 0, 0, 1, 1, 1, 0, 2, 1]/
    (2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) + 
   j[p4a, n1, 1, n3, 0, 0, 0, 0, 0, 1, 1, 2, 0, 2, 1]/
    (2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) - 
   j[p4a, n1, 1, n3, 0, 0, 0, 0, 1, 1, 0, 1, 0, 2, 1]/
    (2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) + 
   ((-7 + d - 2*n1 + n3)*j[p4a, n1, 1, n3, 0, 0, 0, 0, 1, 1, 0, 2, 0, 1, 1])/
    (2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) + 
   j[p4a, n1, 1, n3, 0, 0, 0, 0, 1, 1, 0, 2, 0, 2, 1]/
    (2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) + 
   j[p4a, n1, 1, n3, 0, 0, 0, 0, 1, 1, 1, 0, 0, 2, 1]/
    (2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) + 
   ((-9 + 3*d - 2*n1 - n3)*j[p4a, n1, 1, n3, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 
      1])/(2*(-5 + 2*d - n1 - n3)) + 
   ((1 - 2*n3)*j[p4a, n1, 1, n3, 0, 0, 0, 0, 1, 1, 1, 1, 0, 2, 1])/
    (2*(2 - d + n3)*(5 - 2*d + n1 + n3)) - 
   ((-1 + n1)*j[p4a, n1, 1, n3, 0, 0, 0, 0, 1, 1, 1, 2, 0, 1, 1])/
    (2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) + 
   ((-1 + d - n3)*j[p4a, n1, 1, n3, 0, 0, 0, 0, 1, 1, 2, 0, 0, 1, 1])/
    ((-2 + d - n3)*(-5 + 2*d - n1 - n3)) - 
   j[p4a, n1, 1, n3, 0, 0, 0, 0, 2, 1, 0, 1, 0, 1, 1]/
    (2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) + 
   j[p4a, n1, 1, n3, 0, 0, 0, 0, 2, 1, 1, 0, 0, 1, 1]/
    (2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) + 
   ((5 - d + n1)*j[p4a, n1, 1, n3, 0, 0, 0, 0, 2, 1, 1, 1, 0, 1, 1])/
    (2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) - 
   (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, -2, 0, 1, 1, 1, 0, 1, 1])/
    (2*(5 - 2*d + n1 + n3)) - (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, -2, 1, 1, 0, 
      1, 0, 1, 1])/(2*(5 - 2*d + n1 + n3)) + 
   (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, -2, 1, 1, 1, 0, 0, 1, 1])/
    (2*(5 - 2*d + n1 + n3)) - (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, -2, 1, 1, 1, 
      1, 0, 0, 1])/(2*(5 - 2*d + n1 + n3)) - 
   (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, -1, 0, 1, 1, 1, 0, 1, 1])/
    (5 - 2*d + n1 + n3) - (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, -1, 0, 1, 1, 1, 
      0, 2, 1])/(2*(2 - d + n3)*(5 - 2*d + n1 + n3)) - 
   (2*n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, -1, 0, 1, 1, 2, 0, 1, 1])/
    ((2 - d + n3)*(5 - 2*d + n1 + n3)) - 
   (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, -1, 1, 1, 0, 1, 0, 1, 1])/
    (5 - 2*d + n1 + n3) + (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, -1, 1, 1, 0, 1, 
      0, 2, 1])/(2*(2 - d + n3)*(5 - 2*d + n1 + n3)) - 
   (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, -1, 1, 1, 0, 2, 0, 1, 1])/
    (2*(2 - d + n3)*(5 - 2*d + n1 + n3)) + 
   (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, -1, 1, 1, 1, 0, 0, 1, 1])/
    (5 - 2*d + n1 + n3) - (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, -1, 1, 1, 1, 0, 
      0, 2, 1])/(2*(2 - d + n3)*(5 - 2*d + n1 + n3)) - 
   (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, -1, 1, 1, 1, 1, 0, 0, 1])/
    (2*(5 - 2*d + n1 + n3)) + ((5*n3 - 2*d*n3 + 4*n1*n3)*
     j[p4a, n1, 1, 1 + n3, 0, 0, 0, -1, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) - 
   (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, -1, 1, 1, 1, 2, 0, 0, 1])/
    (2*(2 - d + n3)*(5 - 2*d + n1 + n3)) + 
   (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, -1, 1, 1, 1, 2, 0, 1, 1])/
    ((2 - d + n3)*(5 - 2*d + n1 + n3)) - 
   (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, -1, 1, 1, 2, 0, 0, 1, 1])/
    ((2 - d + n3)*(5 - 2*d + n1 + n3)) + 
   (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, -1, 1, 1, 2, 1, 0, 0, 1])/
    ((2 - d + n3)*(5 - 2*d + n1 + n3)) - 
   (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, -1, 2, 1, 1, 1, 0, 0, 1])/
    ((2 - d + n3)*(5 - 2*d + n1 + n3)) + 
   (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, -1, 2, 1, 1, 1, 0, 1, 1])/
    (2*(2 - d + n3)*(5 - 2*d + n1 + n3)) + 
   (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1])/
    (2*(2 - d + n3)*(5 - 2*d + n1 + n3)) + 
   (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, 0, 0, 1, 1, 1, 0, 2, 1])/
    ((2 - d + n3)*(5 - 2*d + n1 + n3)) + 
   (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, 0, 0, 1, 1, 2, 0, 1, 1])/
    (2*(2 - d + n3)*(5 - 2*d + n1 + n3)) - 
   (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, 0, 1, 1, 0, 2, 0, 1, 1])/
    (2*(2 - d + n3)*(5 - 2*d + n1 + n3)) - 
   (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, 0, 1, 1, 1, 1, -1, 2, 1])/
    (2*(2 - d + n3)*(5 - 2*d + n1 + n3)) + 
   ((-9*n3 + 3*d*n3 - 2*n1*n3 - n3^2)*j[p4a, n1, 1, 1 + n3, 0, 0, 0, 0, 1, 1, 
      1, 1, 0, 0, 1])/(2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) + 
   (2*n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1])/
    ((2 - d + n3)*(5 - 2*d + n1 + n3)) - 
   (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, 0, 1, 1, 1, 2, -1, 1, 1])/
    (2*(2 - d + n3)*(5 - 2*d + n1 + n3)) + 
   (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, 0, 1, 1, 1, 2, 0, 1, 1])/
    (2*(2 - d + n3)*(5 - 2*d + n1 + n3)) - 
   (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, 0, 2, 1, 1, 1, -1, 1, 1])/
    (2*(2 - d + n3)*(5 - 2*d + n1 + n3)) + 
   (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, 0, 2, 1, 1, 1, 0, 0, 1])/
    (2*(2 - d + n3)*(5 - 2*d + n1 + n3)) + 
   ((-n3 - n3^2)*j[p4a, n1, 1, 2 + n3, 0, 0, 0, -2, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) + 
   (n3*(1 + n3)*j[p4a, n1, 1, 2 + n3, 0, 0, 0, -1, 0, 1, 1, 1, 0, 1, 1])/
    ((2 - d + n3)*(5 - 2*d + n1 + n3)) + 
   ((-n3 - n3^2)*j[p4a, n1, 1, 2 + n3, 0, 0, 0, -1, 1, 1, 1, 1, -1, 1, 1])/
    (2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) + 
   (3*n3*(1 + n3)*j[p4a, n1, 1, 2 + n3, 0, 0, 0, -1, 1, 1, 1, 1, 0, 0, 1])/
    (2*(2 - d + n3)*(5 - 2*d + n1 + n3)) - 
   j[p4a, n1, 2, -1 + n3, 0, 0, 0, -1, 1, 1, 0, 1, 0, 1, 1]/
    (2*(-5 + 2*d - n1 - n3)) + j[p4a, n1, 2, n3, 0, 0, 0, -2, 1, 1, 0, 1, 0, 
     1, 1]/(2*(-5 + 2*d - n1 - n3)) - j[p4a, n1, 2, n3, 0, 0, 0, -1, 0, 1, 1, 
     2, 0, 1, 1]/(2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) - 
   j[p4a, n1, 2, n3, 0, 0, 0, -1, 1, 1, 0, 1, -1, 1, 1]/
    (2*(-5 + 2*d - n1 - n3)) + j[p4a, n1, 2, n3, 0, 0, 0, -1, 1, 1, 0, 2, 0, 
     1, 1]/(2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) + 
   j[p4a, n1, 2, n3, 0, 0, 0, -1, 2, 1, 0, 1, 0, 1, 1]/
    (2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) - 
   j[p4a, n1, 2, n3, 0, 0, 0, -1, 2, 1, 1, 0, 0, 1, 1]/
    (2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) + 
   ((-3 + 2*d - 2*n3)*j[p4a, n1, 2, n3, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) + 
   j[p4a, n1, 2, n3, 0, 0, 0, 0, 0, 1, 1, 2, 0, 1, 1]/
    (2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) - 
   j[p4a, n1, 2, n3, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1]/
    (2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) + 
   j[p4a, n1, 2, n3, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1]/
    (2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) + 
   ((3 - d + n3)*j[p4a, n1, 2, n3, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) - 
   (n3*j[p4a, n1, 2, 1 + n3, 0, 0, 0, -1, 0, 1, 1, 1, 0, 1, 1])/
    (2*(2 - d + n3)*(5 - 2*d + n1 + n3)) + 
   (n3*j[p4a, n1, 2, 1 + n3, 0, 0, 0, -1, 1, 1, 0, 1, 0, 1, 1])/
    (2*(2 - d + n3)*(5 - 2*d + n1 + n3)) - 
   (n3*j[p4a, n1, 2, 1 + n3, 0, 0, 0, -1, 1, 1, 1, 0, 0, 1, 1])/
    (2*(2 - d + n3)*(5 - 2*d + n1 + n3)) + 
   (3*n3*j[p4a, n1, 2, 1 + n3, 0, 0, 0, -1, 1, 1, 1, 1, 0, 0, 1])/
    (2*(2 - d + n3)*(5 - 2*d + n1 + n3)) - 
   (n3*j[p4a, n1, 2, 1 + n3, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1])/
    (2*(2 - d + n3)*(5 - 2*d + n1 + n3)) + 
   ((-5 + 2*d - n3)*j[p4a, 1 + n1, 0, n3, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) + 
   ((5*n3 - 2*d*n3 + 2*n1*n3 + n3^2)*j[p4a, 1 + n1, 0, 1 + n3, 0, 0, 0, -1, 
      1, 1, 1, 1, 0, 1, 1])/(2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) + 
   ((-5 + 2*d - n3)*j[p4a, 1 + n1, 1, n3, 0, 0, 0, -1, 0, 1, 1, 2, 0, 1, 1])/
    (2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) + 
   ((5 - 2*d + n3)*j[p4a, 1 + n1, 1, n3, 0, 0, 0, -1, 2, 1, 1, 0, 0, 1, 1])/
    (2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) + 
   ((5 - 2*d + n3)*j[p4a, 1 + n1, 1, n3, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) + 
   (n1*j[p4a, 1 + n1, 1, n3, 0, 0, 0, 0, 0, 1, 1, 2, 0, 1, 1])/
    (2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) + 
   ((5 - 2*d + n3)*j[p4a, 1 + n1, 1, n3, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1])/
    (2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) + 
   ((-5 + 2*d - n3)*j[p4a, 1 + n1, 1, n3, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1])/
    (2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) - 
   (n1*j[p4a, 1 + n1, 1, n3, 0, 0, 0, 0, 2, 1, 1, 0, 0, 1, 1])/
    (2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) + 
   ((-5*n3 + 2*d*n3 - n3^2)*j[p4a, 1 + n1, 1, 1 + n3, 0, 0, 0, -1, 0, 1, 1, 
      1, 0, 1, 1])/(2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) + 
   ((-5*n3 + 2*d*n3 - 2*n1*n3 - n3^2)*j[p4a, 1 + n1, 1, 1 + n3, 0, 0, 0, -1, 
      1, 1, 0, 1, 0, 1, 1])/(2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) + 
   ((5*n3 - 2*d*n3 + n3^2)*j[p4a, 1 + n1, 1, 1 + n3, 0, 0, 0, -1, 1, 1, 1, 0, 
      0, 1, 1])/(2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) + 
   ((-5*n3 + 2*d*n3 - n3^2)*j[p4a, 1 + n1, 1, 1 + n3, 0, 0, 0, -1, 1, 1, 1, 
      1, 0, 0, 1])/(2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)) + 
   ((5*n3 - 2*d*n3 + n3^2)*j[p4a, 1 + n1, 1, 1 + n3, 0, 0, 0, -1, 1, 1, 1, 1, 
      0, 1, 1])/(2*(-2 + d - n3)*(-5 + 2*d - n1 - n3)), 
 j[p4a, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?NonPositive, 
    (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, (n8_)?Positive, 
    (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, (n12_)?NonPositive, 
    (n13_)?Positive, (n14_)?Positive] /; n10 == 1 && n11 == 1 && n12 == 0 && 
    n13 == 1 && n14 == 1 && n2 == 1 && n4 == 0 && n5 == 0 && n6 == 0 && 
    n7 == 0 && n8 == 1 && n9 == 1 -> 
  -j[p4a, -1 + n1, 0, n3, 0, 0, 0, 0, 1, 1, 2, 1, 0, 1, 1]/
    (2*(-3 + d - n1 - n3)) + j[p4a, -1 + n1, 0, n3, 0, 0, 0, 0, 1, 1, 2, 1, 
     0, 2, 1]/(2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 
      2*n1*n3 + n3^2)) + (n3*j[p4a, -1 + n1, 0, 1 + n3, 0, 0, 0, 0, 1, 1, 1, 
      1, 0, 2, 1])/(2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 
      3*d*n3 + 2*n1*n3 + n3^2)) + 
   (n3*(1 + n3)*j[p4a, -1 + n1, 0, 2 + n3, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
      n3^2)) + j[p4a, -1 + n1, 1, n3, 0, 0, 0, 0, 0, 1, 2, 1, 0, 1, 1]/
    (2*(-3 + d - n1 - n3)) + ((-5 + 2*d - n1 - n3)*j[p4a, -1 + n1, 1, n3, 0, 
      0, 0, 0, 1, 1, 1, 1, 0, 1, 1])/(-3 + d - n1 - n3) + 
   j[p4a, -1 + n1, 1, n3, 0, 0, 0, 0, 1, 1, 2, 1, 0, 0, 1]/
    (2*(-3 + d - n1 - n3)) - j[p4a, -1 + n1, 1, n3, 0, 0, 0, 0, 2, 1, 1, 1, 
     0, 0, 1]/(2*(-3 + d - n1 - n3)) - 
   (n3*j[p4a, -1 + n1, 1, 1 + n3, 0, 0, 0, 0, 0, 1, 1, 1, 0, 2, 1])/
    (18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
     n3^2) + (n3*j[p4a, -1 + n1, 1, 1 + n3, 0, 0, 0, 0, 0, 1, 2, 1, 0, 1, 1])/
    (2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
      n3^2)) - (n3*j[p4a, -1 + n1, 1, 1 + n3, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 
      1])/(2*(-3 + d - n1 - n3)) - 
   (n3*j[p4a, -1 + n1, 1, 1 + n3, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n1 - n3)) + (n3*j[p4a, -1 + n1, 1, 1 + n3, 0, 0, 0, 0, 1, 1, 
      1, 2, 0, 0, 1])/(2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 
      3*d*n3 + 2*n1*n3 + n3^2)) + 
   (n3*j[p4a, -1 + n1, 1, 1 + n3, 0, 0, 0, 0, 1, 1, 1, 2, 0, 1, 1])/
    (4*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
      n3^2)) + (n3*j[p4a, -1 + n1, 1, 1 + n3, 0, 0, 0, 0, 1, 1, 2, 1, 0, 1, 
      1])/(4*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 
      2*n1*n3 + n3^2)) + (n3*j[p4a, -1 + n1, 1, 1 + n3, 0, 0, 0, 0, 2, 1, 1, 
      1, 0, 1, 1])/(2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 
      3*d*n3 + 2*n1*n3 + n3^2)) - 
   (n3*(1 + n3)*j[p4a, -1 + n1, 1, 2 + n3, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1])/
    (18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
     n3^2) - (n3*(1 + n3)*j[p4a, -1 + n1, 1, 2 + n3, 0, 0, 0, 0, 1, 1, 1, 1, 
      0, 0, 1])/(2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 
      3*d*n3 + 2*n1*n3 + n3^2)) - j[p4a, -1 + n1, 2, n3, 0, 0, 0, 0, 0, 1, 1, 
     1, 0, 1, 1]/(2*(-3 + d - n1 - n3)) + 
   j[p4a, -1 + n1, 2, n3, 0, 0, 0, 0, 0, 1, 1, 2, 0, 1, 1]/
    (2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
      n3^2)) - j[p4a, -1 + n1, 2, n3, 0, 0, 0, 0, 1, 1, 0, 2, 0, 1, 1]/
    (2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
      n3^2)) + j[p4a, -1 + n1, 2, n3, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1]/
    (3 - d + n1 + n3) + (n3*j[p4a, -1 + n1, 2, 1 + n3, 0, 0, 0, 0, 0, 1, 1, 
      1, 0, 1, 1])/(2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 
      3*d*n3 + 2*n1*n3 + n3^2)) - 
   (n3*j[p4a, -1 + n1, 2, 1 + n3, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1])/
    (2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
      n3^2)) + (n3*j[p4a, -1 + n1, 2, 1 + n3, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 
      1])/(2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 
      2*n1*n3 + n3^2)) - j[p4a, n1, 0, -1 + n3, 0, 0, 0, 0, 1, 1, 2, 1, 0, 1, 
     1]/(2*(-3 + d - n1 - n3)) + j[p4a, n1, 0, n3, 0, 0, 0, -1, 1, 1, 2, 1, 
     0, 1, 1]/(2*(-3 + d - n1 - n3)) - 
   (n3*j[p4a, n1, 0, n3, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n1 - n3)) - j[p4a, n1, 0, n3, 0, 0, 0, 0, 1, 1, 2, 1, -1, 1, 
     1]/(2*(-3 + d - n1 - n3)) + 
   ((-1 + n1)*j[p4a, n1, 0, n3, 0, 0, 0, 0, 1, 1, 2, 1, 0, 1, 1])/
    (2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
      n3^2)) - j[p4a, n1, 0, n3, 0, 0, 0, 0, 1, 1, 2, 1, 0, 2, 1]/
    (2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
      n3^2)) - j[p4a, n1, 0, n3, 0, 0, 0, 0, 2, 1, 2, 1, 0, 1, 1]/
    (2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
      n3^2)) - (n3*j[p4a, n1, 0, 1 + n3, 0, 0, 0, -1, 1, 1, 1, 1, 0, 1, 1])/
    (2*(3 - d + n1 + n3)) + (n3*j[p4a, n1, 0, 1 + n3, 0, 0, 0, -1, 1, 1, 2, 
      1, 0, 1, 1])/(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 
     3*d*n3 + 2*n1*n3 + n3^2) - ((-9 + 4*d - n1 - 4*n3)*n3*
     j[p4a, n1, 0, 1 + n3, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
      n3^2)) - (n3*j[p4a, n1, 0, 1 + n3, 0, 0, 0, 0, 1, 1, 1, 1, 0, 2, 1])/
    (2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
      n3^2)) - (3*n3*j[p4a, n1, 0, 1 + n3, 0, 0, 0, 0, 1, 1, 2, 1, 0, 1, 1])/
    (4*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
      n3^2)) - (n3*j[p4a, n1, 0, 1 + n3, 0, 0, 0, 0, 2, 1, 1, 1, 0, 1, 1])/
    (2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
      n3^2)) + (n3*(1 + n3)*j[p4a, n1, 0, 2 + n3, 0, 0, 0, -1, 1, 1, 1, 1, 0, 
      1, 1])/(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 
     2*n1*n3 + n3^2) + (n3*(1 + n3)*j[p4a, n1, 0, 2 + n3, 0, 0, 0, 0, 1, 1, 
      1, 1, -1, 1, 1])/(2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 
      3*d*n3 + 2*n1*n3 + n3^2)) - 
   (n3*(1 + n3)*j[p4a, n1, 0, 2 + n3, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
      n3^2)) + ((-1 - n3)*j[p4a, n1, 1, n3, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1])/
    (2*(3 - d + n1 + n3)) - j[p4a, n1, 1, n3, 0, 0, 0, 0, 0, 1, 1, 2, -1, 1, 
     1]/(2*(-3 + d - n1 - n3)) + 
   ((-9 + 3*d - n1 - 2*n3)*j[p4a, n1, 1, n3, 0, 0, 0, 0, 0, 1, 1, 2, 0, 1, 
      1])/(2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 
      2*n1*n3 + n3^2)) - (n3*j[p4a, n1, 1, n3, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 
      1])/(2*(3 - d + n1 + n3)) + 
   ((1 + n3)*j[p4a, n1, 1, n3, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1])/
    (2*(3 - d + n1 + n3)) + ((-2*n1 + n3)*j[p4a, n1, 1, n3, 0, 0, 0, 0, 1, 1, 
      1, 1, 0, 0, 1])/(2*(-3 + d - n1 - n3)) + 
   (n3*j[p4a, n1, 1, n3, 0, 0, 0, 0, 1, 1, 2, 0, 0, 1, 1])/
    (18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
     n3^2) + j[p4a, n1, 1, n3, 0, 0, 0, 0, 2, 1, 1, 0, -1, 1, 1]/
    (2*(-3 + d - n1 - n3)) + j[p4a, n1, 1, n3, 0, 0, 0, 0, 2, 1, 2, 0, 0, 1, 
     1]/(2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 
      2*n1*n3 + n3^2)) - (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, -1, 0, 1, 1, 1, 
      0, 1, 1])/(2*(-3 + d - n1 - n3)) - 
   (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, -1, 0, 1, 1, 2, 0, 1, 1])/
    (2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
      n3^2)) - (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, -1, 0, 1, 2, 1, 0, 1, 1])/
    (18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
     n3^2) - (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, -1, 1, 1, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n1 - n3)) - (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, -1, 1, 1, 1, 
      0, 0, 1, 1])/(2*(3 - d + n1 + n3)) - 
   (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, -1, 1, 1, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n1 - n3)) - (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, -1, 1, 1, 2, 
      0, 0, 1, 1])/(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 
     3*d*n3 + 2*n1*n3 + n3^2) - 
   (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, -1, 1, 1, 2, 1, 0, 0, 1])/
    (18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
     n3^2) - (n3*(24 - 9*d + 3*n1 + 7*n3)*j[p4a, n1, 1, 1 + n3, 0, 0, 0, 0, 
      0, 1, 1, 1, 0, 1, 1])/(2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 
      9*n3 - 3*d*n3 + 2*n1*n3 + n3^2)) + 
   (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, 0, 0, 1, 1, 1, 0, 2, 1])/
    (18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
     n3^2) - (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, 0, 0, 1, 1, 2, 0, 1, 1])/
    (4*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
      n3^2)) - (n3*(-3 + d - n1 + n3)*j[p4a, n1, 1, 1 + n3, 0, 0, 0, 0, 1, 1, 
      0, 1, 0, 1, 1])/(2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 
      3*d*n3 + 2*n1*n3 + n3^2)) + 
   (n3*(-2 + d - n1 + n3)*j[p4a, n1, 1, 1 + n3, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 
      1])/(2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 
      2*n1*n3 + n3^2)) - (n3*(13 - 5*d + 2*n1 + n3)*
     j[p4a, n1, 1, 1 + n3, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1])/
    (2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
      n3^2)) - (n3*(41 - 12*d + 4*n1 + 5*n3)*j[p4a, n1, 1, 1 + n3, 0, 0, 0, 
      0, 1, 1, 1, 1, 0, 1, 1])/(4*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 
      9*n3 - 3*d*n3 + 2*n1*n3 + n3^2)) + 
   (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, 0, 1, 1, 2, 0, -1, 1, 1])/
    (18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
     n3^2) - (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, 0, 1, 1, 2, 0, 0, 1, 1])/
    (2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
      n3^2)) - (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, 0, 1, 1, 2, 1, 0, 0, 1])/
    (2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
      n3^2)) + (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, 0, 2, 1, 0, 1, 0, 1, 1])/
    (2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
      n3^2)) - (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, 0, 2, 1, 1, 0, 0, 1, 1])/
    (2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
      n3^2)) + (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, 0, 2, 1, 1, 1, 0, 0, 1])/
    (2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
      n3^2)) - (n3*j[p4a, n1, 1, 1 + n3, 0, 0, 0, 0, 2, 1, 1, 1, 0, 1, 1])/
    (2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
      n3^2)) - (5*n3*(1 + n3)*j[p4a, n1, 1, 2 + n3, 0, 0, 0, -1, 0, 1, 1, 1, 
      0, 1, 1])/(2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 
      3*d*n3 + 2*n1*n3 + n3^2)) + 
   (n3*(1 + n3)*j[p4a, n1, 1, 2 + n3, 0, 0, 0, -1, 1, 1, 0, 1, 0, 1, 1])/
    (2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
      n3^2)) - (n3*(1 + n3)*j[p4a, n1, 1, 2 + n3, 0, 0, 0, -1, 1, 1, 1, 0, 0, 
      1, 1])/(2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 
      2*n1*n3 + n3^2)) - (5*n3*(1 + n3)*j[p4a, n1, 1, 2 + n3, 0, 0, 0, -1, 1, 
      1, 1, 1, 0, 0, 1])/(2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 
      9*n3 - 3*d*n3 + 2*n1*n3 + n3^2)) - 
   (n3*(1 + n3)*j[p4a, n1, 1, 2 + n3, 0, 0, 0, -1, 1, 1, 1, 1, 0, 1, 1])/
    (4*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
      n3^2)) - (n3*(1 + n3)*j[p4a, n1, 1, 2 + n3, 0, 0, 0, 0, 0, 1, 1, 1, -1, 
      1, 1])/(2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 
      2*n1*n3 + n3^2)) + (n3*(1 + n3)*j[p4a, n1, 1, 2 + n3, 0, 0, 0, 0, 0, 1, 
      1, 1, 0, 1, 1])/(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 
     3*d*n3 + 2*n1*n3 + n3^2) - 
   (n3*(1 + n3)*j[p4a, n1, 1, 2 + n3, 0, 0, 0, 0, 1, 1, 0, 1, -1, 1, 1])/
    (2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
      n3^2)) + (n3*(1 + n3)*j[p4a, n1, 1, 2 + n3, 0, 0, 0, 0, 1, 1, 1, 0, -1, 
      1, 1])/(2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 
      2*n1*n3 + n3^2)) + (n3*(1 + n3)*j[p4a, n1, 1, 2 + n3, 0, 0, 0, 0, 1, 1, 
      1, 1, -1, 0, 1])/(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 
     3*d*n3 + 2*n1*n3 + n3^2) + 
   (3*n3*(1 + n3)*j[p4a, n1, 1, 2 + n3, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1])/
    (4*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
      n3^2)) + j[p4a, n1, 2, -1 + n3, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1]/
    (2*(-3 + d - n1 - n3)) - j[p4a, n1, 2, n3, 0, 0, 0, -1, 1, 1, 0, 1, 0, 1, 
     1]/(2*(-3 + d - n1 - n3)) + 
   (n3*j[p4a, n1, 2, n3, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1])/
    (18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
     n3^2) + j[p4a, n1, 2, n3, 0, 0, 0, 0, 1, 1, 0, 1, -1, 1, 1]/
    (2*(-3 + d - n1 - n3)) + ((7 - 2*d + n3)*j[p4a, n1, 2, n3, 0, 0, 0, 0, 1, 
      1, 0, 1, 0, 1, 1])/(2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 
      9*n3 - 3*d*n3 + 2*n1*n3 + n3^2)) + 
   j[p4a, n1, 2, n3, 0, 0, 0, 0, 2, 1, 0, 1, 0, 1, 1]/
    (2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
      n3^2)) - j[p4a, n1, 2, n3, 0, 0, 0, 0, 2, 1, 1, 0, 0, 1, 1]/
    (2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
      n3^2)) - (2*n3*j[p4a, n1, 2, 1 + n3, 0, 0, 0, -1, 0, 1, 1, 1, 0, 1, 1])/
    (18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
     n3^2) - (2*n3*j[p4a, n1, 2, 1 + n3, 0, 0, 0, -1, 1, 1, 1, 1, 0, 0, 1])/
    (18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
     n3^2) + (n3*j[p4a, n1, 2, 1 + n3, 0, 0, 0, 0, 0, 1, 1, 1, -1, 1, 1])/
    (18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
     n3^2) + (n3*j[p4a, n1, 2, 1 + n3, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1])/
    (2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
      n3^2)) - (n3*j[p4a, n1, 2, 1 + n3, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1])/
    (2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
      n3^2)) + (n3*j[p4a, n1, 2, 1 + n3, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1])/
    (18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
     n3^2) - (n3*j[p4a, n1, 2, 1 + n3, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
      n3^2)) + ((18 - 5*d + 2*n3)*j[p4a, 1 + n1, 0, n3, 0, 0, 0, 0, 1, 1, 2, 
      1, 0, 1, 1])/(4*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 
      3*d*n3 + 2*n1*n3 + n3^2)) - ((-11 + 3*d - n1 - n3)*n3*
     j[p4a, 1 + n1, 0, 1 + n3, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1])/
    (2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
      n3^2)) + ((-4 + d)*j[p4a, 1 + n1, 1, n3, 0, 0, 0, 0, 0, 1, 1, 2, 0, 1, 
      1])/(4*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 
      2*n1*n3 + n3^2)) + ((4 - d)*j[p4a, 1 + n1, 1, n3, 0, 0, 0, 0, 2, 1, 1, 
      0, 0, 1, 1])/(4*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 
      3*d*n3 + 2*n1*n3 + n3^2)) - 
   (n3*(11 - 3*d + n1 + n3)*j[p4a, 1 + n1, 1, 1 + n3, 0, 0, 0, 0, 0, 1, 1, 1, 
      0, 1, 1])/(2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 
      3*d*n3 + 2*n1*n3 + n3^2)) - 
   (n3*(11 - 3*d + n1 + n3)*j[p4a, 1 + n1, 1, 1 + n3, 0, 0, 0, 0, 1, 1, 0, 1, 
      0, 1, 1])/(2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 
      3*d*n3 + 2*n1*n3 + n3^2)) - ((-11 + 3*d - n1 - n3)*n3*
     j[p4a, 1 + n1, 1, 1 + n3, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1])/
    (2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 2*n1*n3 + 
      n3^2)) - (n3*(11 - 3*d + n1 + n3)*j[p4a, 1 + n1, 1, 1 + n3, 0, 0, 0, 0, 
      1, 1, 1, 1, 0, 0, 1])/(2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 
      9*n3 - 3*d*n3 + 2*n1*n3 + n3^2)) - 
   ((-11 + 3*d - n1 - n3)*n3*j[p4a, 1 + n1, 1, 1 + n3, 0, 0, 0, 0, 1, 1, 1, 
      1, 0, 1, 1])/(2*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 
      3*d*n3 + 2*n1*n3 + n3^2)) + 
   ((-18 + 5*d - 2*n3)*j[p4a, 1 + n1, 2, n3, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 
      1])/(4*(18 - 12*d + 2*d^2 + 9*n1 - 3*d*n1 + n1^2 + 9*n3 - 3*d*n3 + 
      2*n1*n3 + n3^2))}
