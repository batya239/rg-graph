{j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n1 == 0 || n13 == 1) -> 
  -((n8*j[p4, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
       -1 + n13, n14])/(-1 + n13)) - 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) - (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, 
      n10, n11, n12, -1 + n13, n14])/(-1 + n13) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) - (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, 
      n10, n11, n12, -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4, 1 + n1, -1 + n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n3*j[p4, 1 + n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4, 1 + n1, n2, -1 + n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + ((-2 - n1 + n13 - n2 + n3)*
     j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) + j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, 
    n11, n12, n13, n14] + (n8*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, 1 + n8, 
      n9, n10, -1 + n11, n12, -1 + n13, n14])/(-1 + n13) - 
   (n8*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, -1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n8*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) + 
   (n5*j[p4, 1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, -1 + n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n5*j[p4, 1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) - 
   (n5*j[p4, 1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n13) - 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, n8, -1 + n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, -1 + n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n13) - 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n2*j[p4, 1 + n1, 1 + n2, -1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4, 1 + n1, 1 + n2, n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4, 1 + n1, 1 + n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4, 1 + n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n2*j[p4, 1 + n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, -1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (2*n2*j[p4, 1 + n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) + 
   ((1 + n1)*j[p4, 2 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) + 
   ((-1 - n1)*j[p4, 2 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n1 == 0 || n8 == 1) -> 
  -((n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
       n13, n14])/(-1 + n8)) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, n13, 
      n14])/(-1 + n8) + (n4*j[p4, 1 + n1, -1 + n2, n3, 1 + n4, n5, n6, n7, 
      -1 + n8, n9, n10, n11, n12, n13, n14])/(-1 + n8) + 
   (n12*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n8) + ((-1 - d + 2*n11 + n12 + n4 + n7 + n8)*
     j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, n13, 
      n14])/(-1 + n8) - (n12*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, -1 + n8, 
      n9, n10, n11, 1 + n12, n13, n14])/(-1 + n8) + 
   j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, n12, n13, 
    n14] - (n7*j[p4, 1 + n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, n9, 
      -1 + n10, n11, n12, n13, n14])/(-1 + n8) + 
   (n7*j[p4, 1 + n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n8) - 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, -1 + n5, n6, n7, -1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n8) - 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, n5, -1 + n6, n7, -1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n8) + 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, -1 + n9, n10, n11, 
      n12, n13, n14])/(-1 + n8) - 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n8) + 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n8) + 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, -1 + n7, -1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n8) + 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, -2 + n8, n9, n10, n11, n12, 
      n13, n14])/(-1 + n8) - (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, 
      -1 + n8, n9, -1 + n10, n11, n12, n13, n14])/(-1 + n8) + 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n8) - 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n8) + 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      n13, n14])/(-1 + n8), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n10 == 0 || n7 == 1) -> 
  -((n4*j[p4, -1 + n1, n2, n3, 1 + n4, n5, n6, -1 + n7, n8, n9, 1 + n10, n11, 
       n12, n13, n14])/(-1 + n7)) - 
   (n3*j[p4, -1 + n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, 1 + n10, n11, 
      n12, n13, n14])/(-1 + n7) + 
   (n2*j[p4, -1 + n1, 1 + n2, n3, n4, n5, n6, -1 + n7, n8, n9, 1 + n10, n11, 
      n12, n13, n14])/(-1 + n7) + 
   ((1 + n10)*j[p4, n1, -1 + n2, n3, n4, n5, n6, -1 + n7, n8, n9, 2 + n10, 
      n11, n12, n13, n14])/(-1 + n7) + j[p4, n1, -1 + n2, n3, n4, n5, n6, n7, 
    n8, n9, 1 + n10, n11, n12, n13, n14] + 
   (n6*j[p4, n1, -1 + n2, n3, n4, n5, 1 + n6, -1 + n7, n8, n9, 1 + n10, n11, 
      n12, n13, n14])/(-1 + n7) + 
   (n4*j[p4, n1, -1 + n2, n3, 1 + n4, n5, n6, -1 + n7, n8, n9, 1 + n10, n11, 
      n12, n13, n14])/(-1 + n7) + 
   (n3*j[p4, n1, -1 + n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, 1 + n10, n11, 
      n12, n13, n14])/(-1 + n7) + 
   ((1 + n10)*j[p4, n1, n2, -1 + n3, n4, n5, n6, -1 + n7, n8, n9, 2 + n10, 
      n11, n12, n13, n14])/(-1 + n7) + j[p4, n1, n2, -1 + n3, n4, n5, n6, n7, 
    n8, n9, 1 + n10, n11, n12, n13, n14] + 
   (n6*j[p4, n1, n2, -1 + n3, n4, n5, 1 + n6, -1 + n7, n8, n9, 1 + n10, n11, 
      n12, n13, n14])/(-1 + n7) + 
   (n4*j[p4, n1, n2, -1 + n3, 1 + n4, n5, n6, -1 + n7, n8, n9, 1 + n10, n11, 
      n12, n13, n14])/(-1 + n7) + 
   ((-1 - n10)*j[p4, n1, n2, n3, n4, n5, n6, -2 + n7, n8, n9, 2 + n10, n11, 
      n12, n13, n14])/(-1 + n7) + 
   ((-1 - n10)*j[p4, n1, n2, n3, n4, n5, n6, -1 + n7, -1 + n8, n9, 2 + n10, 
      n11, n12, n13, n14])/(-1 + n7) + 
   ((-n10 + n2 + n3 - n7)*j[p4, n1, n2, n3, n4, n5, n6, -1 + n7, n8, n9, 
      1 + n10, n11, n12, n13, n14])/(-1 + n7) + 
   ((1 + n10)*j[p4, n1, n2, n3, n4, n5, n6, -1 + n7, n8, n9, 2 + n10, n11, 
      -1 + n12, n13, n14])/(-1 + n7) + 
   ((-1 - n10)*j[p4, n1, n2, n3, n4, n5, n6, -1 + n7, n8, n9, 2 + n10, n11, 
      n12, -1 + n13, n14])/(-1 + n7) + 
   ((-1 - n10)*j[p4, n1, n2, n3, n4, n5, n6, -1 + n7, n8, n9, 2 + n10, n11, 
      n12, n13, n14])/(-1 + n7) - j[p4, n1, n2, n3, n4, n5, n6, n7, -1 + n8, 
    n9, 1 + n10, n11, n12, n13, n14] + j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 
    n9, 1 + n10, -1 + n11, n12, n13, n14] - j[p4, n1, n2, n3, n4, n5, n6, n7, 
    n8, n9, 1 + n10, n11, n12, -1 + n13, n14] - 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, -2 + n7, n8, n9, 1 + n10, n11, n12, 
      n13, n14])/(-1 + n7) - (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, -1 + n7, 
      -1 + n8, n9, 1 + n10, n11, n12, n13, n14])/(-1 + n7) + 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, -1 + n7, n8, -1 + n9, 1 + n10, n11, 
      n12, n13, n14])/(-1 + n7) - 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, -1 + n7, n8, n9, n10, n11, n12, n13, 
      n14])/(-1 + n7) + (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, -1 + n7, n8, 
      n9, 1 + n10, n11, -1 + n12, n13, n14])/(-1 + n7) - 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, -1 + n7, n8, n9, 1 + n10, n11, n12, 
      -1 + n13, n14])/(-1 + n7) - 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, -1 + n7, n8, n9, 1 + n10, n11, n12, 
      n13, -1 + n14])/(-1 + n7) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, -2 + n7, n8, n9, 1 + n10, n11, n12, 
      n13, n14])/(-1 + n7) - (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, 
      -1 + n8, n9, 1 + n10, n11, n12, n13, n14])/(-1 + n7) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, n8, -1 + n9, 1 + n10, n11, 
      n12, n13, n14])/(-1 + n7) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, n8, n9, n10, n11, n12, n13, 
      n14])/(-1 + n7) + (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, n8, 
      n9, 1 + n10, -1 + n11, n12, n13, n14])/(-1 + n7) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, n8, n9, 1 + n10, n11, n12, 
      n13, -1 + n14])/(-1 + n7) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, -2 + n7, n8, n9, 1 + n10, n11, n12, 
      n13, n14])/(-1 + n7) - (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, 
      -1 + n8, n9, 1 + n10, n11, n12, n13, n14])/(-1 + n7) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, n12, n13, 
      n14])/(-1 + n7) + (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, 
      n9, 1 + n10, -1 + n11, n12, n13, n14])/(-1 + n7) + 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, 1 + n10, n11, n12, 
      n13, n14])/(-1 + n7) + (n2*j[p4, n1, 1 + n2, -1 + n3, n4, n5, n6, 
      -1 + n7, n8, n9, 1 + n10, n11, n12, n13, n14])/(-1 + n7) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, -2 + n7, n8, n9, 1 + n10, n11, n12, 
      n13, n14])/(-1 + n7) - (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, -1 + n7, 
      -1 + n8, n9, 1 + n10, n11, n12, n13, n14])/(-1 + n7) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, n12, n13, 
      n14])/(-1 + n7) + (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, -1 + n7, n8, 
      n9, 1 + n10, n11, -1 + n12, n13, n14])/(-1 + n7) - 
   (2*n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, -1 + n7, n8, n9, 1 + n10, n11, 
      n12, -1 + n13, n14])/(-1 + n7), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n14 == 1 || n9 == 0) -> 
  (n5*j[p4, -1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n4*j[p4, -1 + n1, n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4, n1, -1 + n2, n3, n4, n5, 1 + n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4, n1, -1 + n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4, n1, n2, -1 + n3, n4, n5, 1 + n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   ((-2 + n14 - n9)*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) + j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 
    1 + n9, n10, n11, n12, n13, n14] + 
   ((1 + n9)*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 2 + n9, n10, n11, n12, 
      n13, -2 + n14])/(-1 + n14) + 
   ((-1 - n9)*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 2 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, -1 + n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, -1 + n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) + (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 
      1 + n9, -1 + n10, n11, n12, n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 1 + n9, n10, n11, -1 + n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 1 + n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14) - (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, 
      n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) - 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n14) + 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14) + (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, 
      n8, 1 + n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) + (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, 
      1 + n9, -1 + n10, n11, n12, n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n4 == 0 || n8 == 1) -> 
  -j[p4, n1, -1 + n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, 
     n14] - (n13*j[p4, n1, n2, n3, 1 + n4, -1 + n5, n6, n7, -1 + n8, n9, n10, 
      n11, n12, 1 + n13, n14])/(-1 + n8) + j[p4, n1, n2, n3, 1 + n4, n5, 
    -1 + n6, n7, n8, n9, n10, n11, n12, n13, n14] + 
   j[p4, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, n8, n9, n10, n11, n12, n13, 
    n14] + ((-1 + d - n1 - n13 - n2 - n4 - 2*n5)*j[p4, n1, n2, n3, 1 + n4, 
      n5, n6, n7, -1 + n8, n9, n10, n11, n12, n13, n14])/(-1 + n8) + 
   (n13*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      1 + n13, -1 + n14])/(-1 + n8) + 
   ((-1 - n4)*j[p4, n1, n2, n3, 2 + n4, -1 + n5, n6, n7, -1 + n8, n9, n10, 
      n11, n12, n13, n14])/(-1 + n8) + 
   ((1 + n4)*j[p4, n1, n2, n3, 2 + n4, n5, n6, -1 + n7, -1 + n8, n9, n10, 
      n11, n12, n13, n14])/(-1 + n8) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, n13, 
      n14])/(-1 + n8) + (n3*j[p4, n1, n2, 1 + n3, 1 + n4, n5, n6, -1 + n7, 
      -1 + n8, n9, n10, n11, n12, n13, n14])/(-1 + n8) - 
   (n3*j[p4, n1, n2, 1 + n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n8) + 
   (n3*j[p4, n1, n2, 1 + n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n8) - 
   (n2*j[p4, n1, 1 + n2, n3, 1 + n4, -1 + n5, n6, n7, -1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n8) + 
   (n2*j[p4, n1, 1 + n2, n3, 1 + n4, n5, -1 + n6, n7, -1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n8) - 
   (n1*j[p4, 1 + n1, n2, n3, 1 + n4, -1 + n5, n6, n7, -1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n8) + 
   (n1*j[p4, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, -1 + n9, n10, n11, 
      n12, n13, n14])/(-1 + n8), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n1 == 0 || n11 == 1) -> 
  -((n7*j[p4, 1 + n1, -1 + n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 
       n12, n13, n14])/(-1 + n11)) - 
   (n3*j[p4, 1 + n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n12*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, 
    -1 + n8, n9, n10, n11, n12, n13, n14] + 
   ((-1 - d + n11 + n12 + n4 + n7 + 2*n8)*j[p4, 1 + n1, n2, n3, n4, n5, n6, 
      n7, n8, n9, n10, -1 + n11, n12, n13, n14])/(-1 + n11) - 
   (n12*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n11) + 
   (n7*j[p4, 1 + n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (2*n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, 
      -1 + n11, n12, n13, n14])/(-1 + n11) - 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      -1 + n12, n13, n14])/(-1 + n11) + 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, n12, 
      -1 + n13, n14])/(-1 + n11), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n2 == 0 || n7 == 1) -> 
  (n10*j[p4, -1 + n1, 1 + n2, n3, n4, n5, n6, -1 + n7, n8, n9, 1 + n10, n11, 
      n12, n13, n14])/(-1 + n7) - 
   (n10*j[p4, n1, n2, n3, n4, n5, n6, -1 + n7, n8, n9, 1 + n10, n11, n12, 
      n13, n14])/(-1 + n7) - (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, -1 + n7, 
      n8, n9, n10, n11, n12, n13, n14])/(-1 + n7) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, n12, n13, 
      n14])/(-1 + n7) + (n6*j[p4, n1, 1 + n2, n3, n4, -1 + n5, 1 + n6, 
      -1 + n7, n8, n9, n10, n11, n12, n13, n14])/(-1 + n7) + 
   ((-1 + d - n10 - 2*n2 - n3 - n6 - n7)*j[p4, n1, 1 + n2, n3, n4, n5, n6, 
      -1 + n7, n8, n9, n10, n11, n12, n13, n14])/(-1 + n7) + 
   j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, n13, 
    n14] + (n4*j[p4, n1, 1 + n2, n3, 1 + n4, -1 + n5, n6, -1 + n7, n8, n9, 
      n10, n11, n12, n13, n14])/(-1 + n7) - 
   (n4*j[p4, n1, 1 + n2, n3, 1 + n4, n5, -1 + n6, -1 + n7, n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n7) - 
   (n4*j[p4, n1, 1 + n2, n3, 1 + n4, n5, n6, -2 + n7, n8, n9, n10, n11, n12, 
      n13, n14])/(-1 + n7) + (n4*j[p4, n1, 1 + n2, n3, 1 + n4, n5, n6, 
      -1 + n7, -1 + n8, n9, n10, n11, n12, n13, n14])/(-1 + n7) + 
   (2*n3*j[p4, n1, 1 + n2, 1 + n3, n4, n5, n6, -1 + n7, -1 + n8, n9, n10, 
      n11, n12, n13, n14])/(-1 + n7) - 
   (n3*j[p4, n1, 1 + n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n7) + 
   (2*n3*j[p4, n1, 1 + n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, 
      n12, -1 + n13, n14])/(-1 + n7), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n2 == 0 || n6 == 1) -> 
  -((n9*j[p4, -1 + n1, 1 + n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 
       n12, n13, n14])/(-1 + n6)) + 
   (n14*j[p4, n1, 1 + n2, n3, n4, -1 + n5, -1 + n6, n7, n8, n9, n10, n11, 
      n12, n13, 1 + n14])/(-1 + n6) + 
   (n9*j[p4, n1, 1 + n2, n3, n4, -1 + n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 
      n12, n13, n14])/(-1 + n6) + j[p4, n1, 1 + n2, n3, n4, -1 + n5, n6, n7, 
    n8, n9, n10, n11, n12, n13, n14] - 
   (n14*j[p4, n1, 1 + n2, n3, n4, n5, -1 + n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, 1 + n14])/(-1 + n6) + ((-1 - d + n14 + n4 + 2*n5 + n6 + n9)*
     j[p4, n1, 1 + n2, n3, n4, n5, -1 + n6, n7, n8, n9, n10, n11, n12, n13, 
      n14])/(-1 + n6) + (n4*j[p4, n1, 1 + n2, n3, 1 + n4, -1 + n5, -1 + n6, 
      n7, n8, n9, n10, n11, n12, n13, n14])/(-1 + n6) - 
   (n4*j[p4, n1, 1 + n2, n3, 1 + n4, n5, -1 + n6, -1 + n7, n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n6), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n13 == 1 || n3 == 0) -> 
  (n8*j[p4, n1, -1 + n2, 1 + n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n5*j[p4, n1, n2, 1 + n3, -1 + n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + j[p4, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, 
    n8, n9, n10, n11, n12, n13, n14] - 
   (n8*j[p4, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, 1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + ((-2 + n13 + n2 - n3 - n4 + n5 - n8)*
     j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) + (n5*j[p4, n1, n2, 1 + n3, n4, 1 + n5, n6, -1 + n7, 
      n8, n9, n10, n11, n12, -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4, n1, n2, 1 + n3, 1 + n4, -1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n4*j[p4, n1, n2, 1 + n3, 1 + n4, n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   ((-1 - n3)*j[p4, n1, n2, 2 + n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, 
      n12, -1 + n13, n14])/(-1 + n13) + 
   ((1 + n3)*j[p4, n1, n2, 2 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) + 
   (n2*j[p4, n1, 1 + n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n2*j[p4, n1, 1 + n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n1*j[p4, 1 + n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n1*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n1*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n1*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, n12, 
      -1 + n13, n14])/(-1 + n13), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n11 == 1 || n9 == 0) -> 
  -((n12*j[p4, n1, -1 + n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, 
       1 + n12, n13, n14])/(-1 + n11)) - j[p4, n1, -1 + n2, n3, n4, n5, n6, 
    n7, n8, 1 + n9, n10, n11, n12, n13, n14] - 
   (n8*j[p4, n1, -1 + n2, n3, n4, n5, n6, n7, 1 + n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n7*j[p4, n1, -1 + n2, n3, n4, n5, n6, 1 + n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n3*j[p4, n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n12*j[p4, n1, n2, n3, -1 + n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) - j[p4, n1, n2, n3, -1 + n4, n5, n6, n7, 
    n8, 1 + n9, n10, n11, n12, n13, n14] - 
   (n8*j[p4, n1, n2, n3, -1 + n4, n5, n6, n7, 1 + n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n7*j[p4, n1, n2, n3, -1 + n4, n5, n6, 1 + n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n12*j[p4, n1, n2, n3, n4, -1 + n5, n6, n7, n8, 1 + n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + j[p4, n1, n2, n3, n4, -1 + n5, n6, n7, 
    n8, 1 + n9, n10, n11, n12, n13, n14] + 
   (n7*j[p4, n1, n2, n3, n4, -1 + n5, n6, 1 + n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n12*j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, 
    n8, 1 + n9, n10, n11, n12, n13, n14] + 
   (n8*j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, 1 + n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n12*j[p4, n1, n2, n3, n4, n5, n6, -1 + n7, n8, 1 + n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + j[p4, n1, n2, n3, n4, n5, n6, -1 + n7, 
    n8, 1 + n9, n10, n11, n12, n13, n14] + 
   (n8*j[p4, n1, n2, n3, n4, n5, n6, -1 + n7, 1 + n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n12*j[p4, n1, n2, n3, n4, n5, n6, n7, -1 + n8, 1 + n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + j[p4, n1, n2, n3, n4, n5, n6, n7, 
    -1 + n8, 1 + n9, n10, n11, n12, n13, n14] + 
   ((-1 - d + n11 + n12 + 2*n7 + 2*n8)*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 
      1 + n9, n10, -1 + n11, n12, n13, n14])/(-1 + n11) - 
   (n12*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n11) + 
   (n7*j[p4, n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, -1 + n5, n6, n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n3*j[p4, n1, n2, 1 + n3, -1 + n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (2*n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, 1 + n9, n10, 
      -1 + n11, n12, n13, n14])/(-1 + n11) + 
   (2*n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, 1 + n9, n10, 
      -1 + n11, n12, n13, n14])/(-1 + n11) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, 
      -1 + n12, n13, n14])/(-1 + n11) + 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, n12, 
      n13, -1 + n14])/(-1 + n11), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n4 == 0 || n6 == 1) -> 
  -j[p4, n1, -1 + n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, 
     n14] + j[p4, n1, n2, n3, 1 + n4, -1 + n5, n6, n7, n8, n9, n10, n11, n12, 
    n13, n14] - (n10*j[p4, n1, n2, n3, 1 + n4, n5, -1 + n6, -1 + n7, n8, n9, 
      1 + n10, n11, n12, n13, n14])/(-1 + n6) + 
   ((-1 + d - n10 - n2 - n3 - n4 - 2*n7)*j[p4, n1, n2, n3, 1 + n4, n5, 
      -1 + n6, n7, n8, n9, n10, n11, n12, n13, n14])/(-1 + n6) + 
   (n10*j[p4, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, n9, 1 + n10, -1 + n11, 
      n12, n13, n14])/(-1 + n6) + j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, 
    -1 + n8, n9, n10, n11, n12, n13, n14] + 
   ((1 + n4)*j[p4, n1, n2, n3, 2 + n4, -1 + n5, -1 + n6, n7, n8, n9, n10, 
      n11, n12, n13, n14])/(-1 + n6) + 
   ((-1 - n4)*j[p4, n1, n2, n3, 2 + n4, n5, -1 + n6, -1 + n7, n8, n9, n10, 
      n11, n12, n13, n14])/(-1 + n6) - 
   (n3*j[p4, n1, n2, 1 + n3, 1 + n4, n5, -1 + n6, -1 + n7, n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n6) + 
   (n3*j[p4, n1, n2, 1 + n3, 1 + n4, n5, -1 + n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n6) - 
   (n2*j[p4, n1, 1 + n2, n3, 1 + n4, n5, -1 + n6, -1 + n7, n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n6) + 
   (n2*j[p4, n1, 1 + n2, n3, 1 + n4, n5, -1 + n6, n7, -1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n6), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n14 == 1 || n4 == 0) -> 
  -((n9*j[p4, n1, -1 + n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
       n13, -1 + n14])/(-1 + n14)) - 
   (n6*j[p4, n1, -1 + n2, n3, 1 + n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + j[p4, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, 
    n8, n9, n10, n11, n12, n13, n14] - 
   (n9*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) - (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 
      n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) - 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) + j[p4, n1, n2, n3, 1 + n4, -1 + n5, n6, n7, n8, 
    n9, n10, n11, n12, n13, n14] + 
   (n9*j[p4, n1, n2, n3, 1 + n4, -1 + n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4, n1, n2, n3, 1 + n4, -1 + n5, 1 + n6, n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n9*j[p4, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n9*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, 
    n9, n10, n11, n12, -1 + n13, n14] + 
   ((-1 - n4 + n5)*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) + 
   (n9*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, -1 + n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4, n1, n2, n3, 1 + n4, n5, 1 + n6, n7, -1 + n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n5*j[p4, n1, n2, n3, 1 + n4, 1 + n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   ((1 + n4)*j[p4, n1, n2, n3, 2 + n4, -1 + n5, n6, n7, n8, n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) + 
   ((-1 - n4)*j[p4, n1, n2, n3, 2 + n4, n5, n6, -1 + n7, n8, n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n12 == 0 || n13 == 1) -> 
  (n8*j[p4, n1, -1 + n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n5*j[p4, n1, -1 + n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n3*j[p4, n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) - j[p4, n1, n2, -1 + n3, n4, n5, n6, n7, n8, 
    n9, n10, n11, 1 + n12, n13, n14] - 
   (n4*j[p4, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + j[p4, n1, n2, n3, n4, n5, n6, -1 + n7, n8, 
    n9, n10, n11, 1 + n12, n13, n14] - 
   (n8*j[p4, n1, n2, n3, n4, n5, n6, -1 + n7, 1 + n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + j[p4, n1, n2, n3, n4, n5, n6, n7, -1 + n8, 
    n9, n10, n11, 1 + n12, n13, n14] + 
   ((2*n2 - 2*n3)*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 
      1 + n12, -1 + n13, n14])/(-1 + n13) + 
   (n8*j[p4, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) - (n8*j[p4, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, 
      n10, n11, 1 + n12, -2 + n13, n14])/(-1 + n13) - 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, -1 + n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -2 + n13, n14])/(-1 + n13) + 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, -1 + n14])/(-1 + n13) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, -1 + n14])/(-1 + n13) + 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (2*n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, -1 + n13, n14])/(-1 + n13) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) + (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, 
      n10, n11, 1 + n12, -2 + n13, n14])/(-1 + n13) + 
   (n2*j[p4, n1, 1 + n2, -1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) - (2*n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, 
      n10, n11, 1 + n12, -2 + n13, n14])/(-1 + n13) + 
   (n1*j[p4, 1 + n1, -1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -2 + n13, n14])/(-1 + n13) + 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n10 == 0 || n11 == 1) -> j[p4, n1, -1 + n2, n3, n4, n5, n6, n7, n8, n9, 
    1 + n10, n11, n12, n13, n14] + 
   (n7*j[p4, n1, -1 + n2, n3, n4, n5, n6, 1 + n7, n8, n9, 1 + n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n3*j[p4, n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, n9, 1 + n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n12*j[p4, n1, n2, -1 + n3, n4, n5, n6, n7, n8, n9, 1 + n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   (n12*j[p4, n1, n2, n3, -1 + n4, n5, n6, n7, n8, n9, 1 + n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + j[p4, n1, n2, n3, -1 + n4, n5, n6, n7, 
    n8, n9, 1 + n10, n11, n12, n13, n14] + 
   (n8*j[p4, n1, n2, n3, -1 + n4, n5, n6, n7, 1 + n8, n9, 1 + n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n7*j[p4, n1, n2, n3, -1 + n4, n5, n6, 1 + n7, n8, n9, 1 + n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n12*j[p4, n1, n2, n3, n4, -1 + n5, n6, n7, n8, n9, 1 + n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) - j[p4, n1, n2, n3, n4, -1 + n5, n6, n7, 
    n8, n9, 1 + n10, n11, n12, n13, n14] - 
   (n7*j[p4, n1, n2, n3, n4, -1 + n5, n6, 1 + n7, n8, n9, 1 + n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n12*j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, n8, n9, 1 + n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) - j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, 
    n8, n9, 1 + n10, n11, n12, n13, n14] - 
   (n8*j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, 1 + n8, n9, 1 + n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n12*j[p4, n1, n2, n3, n4, n5, n6, -1 + n7, n8, n9, 1 + n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) - j[p4, n1, n2, n3, n4, n5, n6, n7, 
    -1 + n8, n9, 1 + n10, n11, n12, n13, n14] + j[p4, n1, n2, n3, n4, n5, n6, 
    n7, n8, -1 + n9, 1 + n10, n11, n12, n13, n14] + 
   ((-n12 + n3 + n4 - n8)*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, n9, 1 + n10, 
      -1 + n11, n12, n13, n14])/(-1 + n11) + 
   (n12*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, n9, 1 + n10, -1 + n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n11) + 
   (n12*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, n9, 1 + n10, -1 + n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n11) - 
   (n7*j[p4, n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, n9, 1 + n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, n9, 1 + n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, 1 + n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n3*j[p4, n1, n2, 1 + n3, -1 + n4, n5, n6, n7, n8, n9, 1 + n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, 1 + n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (2*n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, 1 + n10, 
      -1 + n11, n12, n13, n14])/(-1 + n11) + 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, 1 + n10, -1 + n11, 
      -1 + n12, n13, n14])/(-1 + n11) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, 1 + n10, -1 + n11, n12, 
      -1 + n13, n14])/(-1 + n11) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, 1 + n10, -1 + n11, n12, 
      n13, -1 + n14])/(-1 + n11), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n3 == 0 || n7 == 1) -> 
  -((n10*j[p4, n1, -1 + n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, 1 + n10, 
       n11, n12, n13, n14])/(-1 + n7)) - j[p4, n1, -1 + n2, 1 + n3, n4, n5, 
    n6, n7, n8, n9, n10, n11, n12, n13, n14] - 
   (n6*j[p4, n1, -1 + n2, 1 + n3, n4, n5, 1 + n6, -1 + n7, n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n7) + 
   ((-1 - n3)*j[p4, n1, -1 + n2, 2 + n3, n4, n5, n6, -1 + n7, n8, n9, n10, 
      n11, n12, n13, n14])/(-1 + n7) - 
   (n10*j[p4, n1, n2, n3, n4, n5, n6, -1 + n7, n8, n9, 1 + n10, n11, n12, 
      n13, n14])/(-1 + n7) - (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, -1 + n7, 
      n8, n9, n10, n11, n12, n13, n14])/(-1 + n7) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, n8, n9, n10, n11, n12, n13, 
      n14])/(-1 + n7) + (n10*j[p4, n1, n2, 1 + n3, n4, n5, n6, -2 + n7, n8, 
      n9, 1 + n10, n11, n12, n13, n14])/(-1 + n7) + 
   (n10*j[p4, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, -1 + n8, n9, 1 + n10, n11, 
      n12, n13, n14])/(-1 + n7) + ((-2 + d - n10 - 2*n2 - 2*n3 - n6)*
     j[p4, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, n12, n13, 
      n14])/(-1 + n7) - (n10*j[p4, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, 
      n9, 1 + n10, n11, -1 + n12, n13, n14])/(-1 + n7) + 
   (n10*j[p4, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, 1 + n10, n11, n12, 
      -1 + n13, n14])/(-1 + n7) + 
   (n10*j[p4, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, 1 + n10, n11, n12, 
      n13, n14])/(-1 + n7) + j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, 
    n9, n10, n11, n12, n13, n14] + j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, 
    n9, n10, n11, n12, -1 + n13, n14] + 
   (n6*j[p4, n1, n2, 1 + n3, n4, n5, 1 + n6, -2 + n7, n8, n9, n10, n11, n12, 
      n13, n14])/(-1 + n7) + (n6*j[p4, n1, n2, 1 + n3, n4, n5, 1 + n6, 
      -1 + n7, -1 + n8, n9, n10, n11, n12, n13, n14])/(-1 + n7) - 
   (n6*j[p4, n1, n2, 1 + n3, n4, n5, 1 + n6, -1 + n7, n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n7) + 
   (n6*j[p4, n1, n2, 1 + n3, n4, n5, 1 + n6, -1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n7) + 
   (n6*j[p4, n1, n2, 1 + n3, n4, n5, 1 + n6, -1 + n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n7) - 
   (n4*j[p4, n1, n2, 1 + n3, 1 + n4, n5, -1 + n6, -1 + n7, n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n7) + 
   (n4*j[p4, n1, n2, 1 + n3, 1 + n4, n5, n6, -1 + n7, -1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n7) + 
   (n4*j[p4, n1, n2, 1 + n3, 1 + n4, n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n7) + 
   ((1 + n3)*j[p4, n1, n2, 2 + n3, n4, n5, n6, -2 + n7, n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n7) + 
   ((2 + 2*n3)*j[p4, n1, n2, 2 + n3, n4, n5, n6, -1 + n7, -1 + n8, n9, n10, 
      n11, n12, n13, n14])/(-1 + n7) + 
   ((-1 - n3)*j[p4, n1, n2, 2 + n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n7) + 
   ((1 + n3)*j[p4, n1, n2, 2 + n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, 
      n12, -1 + n13, n14])/(-1 + n7) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, n12, n13, 
      n14])/(-1 + n7) + (n2*j[p4, n1, 1 + n2, 1 + n3, n4, n5, n6, -2 + n7, 
      n8, n9, n10, n11, n12, n13, n14])/(-1 + n7) + 
   (n2*j[p4, n1, 1 + n2, 1 + n3, n4, n5, n6, -1 + n7, -1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n7) - 
   (n2*j[p4, n1, 1 + n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n7) + 
   (2*n2*j[p4, n1, 1 + n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, 
      n12, -1 + n13, n14])/(-1 + n7), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n12 == 0 || n14 == 1) -> 
  -j[p4, n1, -1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
     n14] + (n6*j[p4, n1, -1 + n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, 
      1 + n12, n13, -1 + n14])/(-1 + n14) - 
   (n5*j[p4, n1, -1 + n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) - j[p4, n1, n2, -1 + n3, n4, n5, n6, n7, n8, 
    n9, n10, n11, 1 + n12, n13, n14] + 
   (n6*j[p4, n1, n2, -1 + n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n4*j[p4, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) + j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, n8, 
    n9, n10, n11, 1 + n12, n13, n14] + 
   (n9*j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) + j[p4, n1, n2, n3, n4, n5, n6, -1 + n7, n8, 
    n9, n10, n11, 1 + n12, n13, n14] + j[p4, n1, n2, n3, n4, n5, n6, n7, 
    -1 + n8, n9, n10, n11, 1 + n12, n13, n14] + j[p4, n1, n2, n3, n4, n5, n6, 
    n7, n8, n9, n10, n11, 1 + n12, -1 + n13, n14] + 
   ((1 - n14 + n6)*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 
      1 + n12, n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, -1 + n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, n11, 1 + n12, n13, 
      -2 + n14])/(-1 + n14) + 
   (n9*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, n11, 1 + n12, n13, 
      -1 + n14])/(-1 + n14) - (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, -1 + n7, 
      n8, n9, n10, n11, 1 + n12, n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) - (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 
      n9, n10, n11, 1 + n12, -1 + n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
      -2 + n14])/(-1 + n14) + (n5*j[p4, n1, n2, n3, n4, 1 + n5, -1 + n6, n7, 
      n8, n9, n10, n11, 1 + n12, n13, -1 + n14])/(-1 + n14) + 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, -1 + n14])/(-1 + n14) - 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
      -2 + n14])/(-1 + n14) + (n4*j[p4, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, 
      n8, n9, n10, n11, 1 + n12, n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
      -2 + n14])/(-1 + n14), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n12 == 0 || n8 == 1) -> 
  -j[p4, n1, -1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
     n14] + (n4*j[p4, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, 
      n11, 1 + n12, n13, n14])/(-1 + n8) - j[p4, n1, n2, n3, -1 + n4, n5, n6, 
    n7, n8, n9, n10, n11, 1 + n12, n13, n14] - 
   (n13*j[p4, n1, n2, n3, n4, -1 + n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, 1 + n13, n14])/(-1 + n8) + j[p4, n1, n2, n3, n4, n5, -1 + n6, 
    n7, n8, n9, n10, n11, 1 + n12, n13, n14] + j[p4, n1, n2, n3, n4, n5, n6, 
    -1 + n7, n8, n9, n10, n11, 1 + n12, n13, n14] + 
   ((-1 + n13 - n2 + n3 - n4 - n5 + n8)*j[p4, n1, n2, n3, n4, n5, n6, n7, 
      -1 + n8, n9, n10, n11, 1 + n12, n13, n14])/(-1 + n8) + 
   (n13*j[p4, n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      1 + n13, -1 + n14])/(-1 + n8) + j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 
    n9, n10, n11, 1 + n12, -1 + n13, n14] + 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n8) - 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n8) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n8) - 
   (n3*j[p4, n1, n2, 1 + n3, -1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) + 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n8) - 
   (n2*j[p4, n1, 1 + n2, -1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, -1 + n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) + 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, -1 + n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) + 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, -1 + n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) + 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, -2 + n8, n9, n10, n11, 1 + n12, 
      n13, n14])/(-1 + n8) - (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, 
      -1 + n8, n9, n10, n11, n12, n13, n14])/(-1 + n8) + 
   (2*n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, -1 + n13, n14])/(-1 + n8) - 
   (n1*j[p4, 1 + n1, n2, n3, n4, -1 + n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) + 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, -1 + n8, -1 + n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) + 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n8) - 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      n13, n14])/(-1 + n8), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n11 == 1 || n12 == 0) -> 
  ((-1 - n12)*j[p4, n1, -1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      2 + n12, n13, n14])/(-1 + n11) - j[p4, n1, -1 + n2, n3, n4, n5, n6, n7, 
    n8, n9, n10, n11, 1 + n12, n13, n14] - 
   (n8*j[p4, n1, -1 + n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   (n7*j[p4, n1, n2, -1 + n3, n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   (n4*j[p4, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   ((-1 - n12)*j[p4, n1, n2, n3, -1 + n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      2 + n12, n13, n14])/(-1 + n11) - j[p4, n1, n2, n3, -1 + n4, n5, n6, n7, 
    n8, n9, n10, n11, 1 + n12, n13, n14] - 
   (n8*j[p4, n1, n2, n3, -1 + n4, n5, n6, n7, 1 + n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) - 
   (n7*j[p4, n1, n2, n3, -1 + n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   ((1 + n12)*j[p4, n1, n2, n3, n4, -1 + n5, n6, n7, n8, n9, n10, -1 + n11, 
      2 + n12, n13, n14])/(-1 + n11) + j[p4, n1, n2, n3, n4, -1 + n5, n6, n7, 
    n8, n9, n10, n11, 1 + n12, n13, n14] + 
   (n7*j[p4, n1, n2, n3, n4, -1 + n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   ((1 + n12)*j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, n8, n9, n10, -1 + n11, 
      2 + n12, n13, n14])/(-1 + n11) + j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, 
    n8, n9, n10, n11, 1 + n12, n13, n14] + 
   (n8*j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, 1 + n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   ((1 + n12)*j[p4, n1, n2, n3, n4, n5, n6, -1 + n7, n8, n9, n10, -1 + n11, 
      2 + n12, n13, n14])/(-1 + n11) + j[p4, n1, n2, n3, n4, n5, n6, -1 + n7, 
    n8, n9, n10, n11, 1 + n12, n13, n14] + 
   (n8*j[p4, n1, n2, n3, n4, n5, n6, -1 + n7, 1 + n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   ((1 + n12)*j[p4, n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, -1 + n11, 
      2 + n12, n13, n14])/(-1 + n11) + j[p4, n1, n2, n3, n4, n5, n6, n7, 
    -1 + n8, n9, n10, n11, 1 + n12, n13, n14] - j[p4, n1, n2, n3, n4, n5, n6, 
    n7, n8, -1 + n9, n10, n11, 1 + n12, n13, n14] + 
   ((-1 - n12 + n3 - n4 + n8)*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, 
      -1 + n11, 1 + n12, n13, n14])/(-1 + n11) + 
   ((-1 - n12)*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      2 + n12, n13, -1 + n14])/(-1 + n11) + j[p4, n1, n2, n3, n4, n5, n6, n7, 
    n8, n9, n10, n11, 1 + n12, n13, n14] - 
   (n8*j[p4, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, -1 + n11, n12, n13, 
      n14])/(-1 + n11) + (n8*j[p4, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, 
      n10, -1 + n11, 1 + n12, -1 + n13, n14])/(-1 + n11) - 
   (n7*j[p4, n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n11) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, -1 + n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n11) - 
   (n3*j[p4, n1, n2, 1 + n3, -1 + n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n11), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n4 == 0 || n7 == 1) -> 
  (n10*j[p4, n1, -1 + n2, n3, 1 + n4, n5, n6, -1 + n7, n8, n9, 1 + n10, n11, 
      n12, n13, n14])/(-1 + n7) + 
   (n6*j[p4, n1, -1 + n2, n3, 1 + n4, n5, 1 + n6, -1 + n7, n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n7) + 
   (n10*j[p4, n1, n2, -1 + n3, 1 + n4, n5, n6, -1 + n7, n8, n9, 1 + n10, n11, 
      n12, n13, n14])/(-1 + n7) + j[p4, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, 
    n8, n9, n10, n11, n12, n13, n14] + 
   (n6*j[p4, n1, n2, -1 + n3, 1 + n4, n5, 1 + n6, -1 + n7, n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n7) + 
   ((1 + n4)*j[p4, n1, n2, -1 + n3, 2 + n4, n5, n6, -1 + n7, n8, n9, n10, 
      n11, n12, n13, n14])/(-1 + n7) + j[p4, n1, n2, n3, 1 + n4, -1 + n5, n6, 
    n7, n8, n9, n10, n11, n12, n13, n14] - 
   (n10*j[p4, n1, n2, n3, 1 + n4, n5, -1 + n6, -1 + n7, n8, n9, 1 + n10, n11, 
      n12, n13, n14])/(-1 + n7) - 
   (n10*j[p4, n1, n2, n3, 1 + n4, n5, n6, -2 + n7, n8, n9, 1 + n10, n11, n12, 
      n13, n14])/(-1 + n7) - (n10*j[p4, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, 
      -1 + n8, n9, 1 + n10, n11, n12, n13, n14])/(-1 + n7) + 
   (n10*j[p4, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, n8, -1 + n9, 1 + n10, n11, 
      n12, n13, n14])/(-1 + n7) + ((-1 + n2 + n3 - n4 - n6)*
     j[p4, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, n8, n9, n10, n11, n12, n13, 
      n14])/(-1 + n7) + (n10*j[p4, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, n8, 
      n9, 1 + n10, n11, -1 + n12, n13, n14])/(-1 + n7) - 
   (n10*j[p4, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, n8, n9, 1 + n10, n11, n12, 
      -1 + n13, n14])/(-1 + n7) - 
   (n10*j[p4, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, n8, n9, 1 + n10, n11, n12, 
      n13, n14])/(-1 + n7) - j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, 
    n10, n11, n12, -1 + n13, n14] - 
   (n6*j[p4, n1, n2, n3, 1 + n4, n5, 1 + n6, -2 + n7, n8, n9, n10, n11, n12, 
      n13, n14])/(-1 + n7) - (n6*j[p4, n1, n2, n3, 1 + n4, n5, 1 + n6, 
      -1 + n7, -1 + n8, n9, n10, n11, n12, n13, n14])/(-1 + n7) + 
   (n6*j[p4, n1, n2, n3, 1 + n4, n5, 1 + n6, -1 + n7, n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n7) - 
   (n6*j[p4, n1, n2, n3, 1 + n4, n5, 1 + n6, -1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n7) - 
   (n6*j[p4, n1, n2, n3, 1 + n4, n5, 1 + n6, -1 + n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n7) + 
   ((-1 - n4)*j[p4, n1, n2, n3, 2 + n4, n5, n6, -1 + n7, n8, n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n7) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, n12, n13, 
      n14])/(-1 + n7) + (n3*j[p4, n1, n2, 1 + n3, 1 + n4, n5, n6, -1 + n7, 
      n8, n9, n10, n11, n12, n13, -1 + n14])/(-1 + n7) + 
   (n2*j[p4, n1, 1 + n2, -1 + n3, 1 + n4, n5, n6, -1 + n7, n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n7) + 
   (n2*j[p4, n1, 1 + n2, n3, 1 + n4, -1 + n5, n6, -1 + n7, n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n7) - 
   (n2*j[p4, n1, 1 + n2, n3, 1 + n4, n5, -1 + n6, -1 + n7, n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n7) - 
   (n2*j[p4, n1, 1 + n2, n3, 1 + n4, n5, n6, -2 + n7, n8, n9, n10, n11, n12, 
      n13, n14])/(-1 + n7) - (n2*j[p4, n1, 1 + n2, n3, 1 + n4, n5, n6, 
      -1 + n7, -1 + n8, n9, n10, n11, n12, n13, n14])/(-1 + n7) + 
   (n2*j[p4, n1, 1 + n2, n3, 1 + n4, n5, n6, -1 + n7, n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n7) - 
   (2*n2*j[p4, n1, 1 + n2, n3, 1 + n4, n5, n6, -1 + n7, n8, n9, n10, n11, 
      n12, -1 + n13, n14])/(-1 + n7), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n12 == 0 || n6 == 1) -> 
  -j[p4, n1, -1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
     n14] - j[p4, n1, n2, -1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
    n13, n14] - (n4*j[p4, n1, n2, -1 + n3, 1 + n4, n5, -1 + n6, n7, n8, n9, 
      n10, n11, 1 + n12, n13, n14])/(-1 + n6) + 
   ((-1 - d + 2*n14 + n4 + n5 + n6 + n9)*j[p4, n1, n2, n3, n4, n5, -1 + n6, 
      n7, n8, n9, n10, n11, 1 + n12, n13, n14])/(-1 + n6) + 
   (n9*j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n6) - 
   (n9*j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 1 + n12, 
      n13, n14])/(-1 + n6) + j[p4, n1, n2, n3, n4, n5, n6, -1 + n7, n8, n9, 
    n10, n11, 1 + n12, n13, n14] + j[p4, n1, n2, n3, n4, n5, n6, n7, -1 + n8, 
    n9, n10, n11, 1 + n12, n13, n14] + j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 
    n9, n10, n11, 1 + n12, -1 + n13, n14] + j[p4, n1, n2, n3, n4, n5, n6, n7, 
    n8, n9, n10, n11, 1 + n12, n13, -1 + n14] - 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, -1 + n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n6) + 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, -1 + n6, n7, n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n6) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n6), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n11 == 1 && n13 == 1 && n14 == 1 && n6 == 1 && n7 == 1 && n8 == 1 && 
     !(n12 == 0 || n5 == 1 || n9 == 0) -> 
  j[p4, -1 + n1, -1 + n2, n3, n4, n5, 1, 1, 1, 1 + n9, n10, 1, 1 + n12, 1, 
    1] - (n3*j[p4, -1 + n1, -1 + n2, 1 + n3, n4, -1 + n5, 1, 1, 1, 1 + n9, 
      n10, 1, 1 + n12, 1, 1])/(-1 + n5) + 
   (n4*j[p4, -1 + n1, n2, -1 + n3, 1 + n4, -1 + n5, 1, 1, 1, 1 + n9, n10, 1, 
      1 + n12, 1, 1])/(-1 + n5) + j[p4, -1 + n1, n2, n3, -1 + n4, n5, 1, 1, 
    1, 1 + n9, n10, 1, 1 + n12, 1, 1] + 
   j[p4, -1 + n1, n2, n3, n4, -1 + n5, 1, 1, 0, 1 + n9, n10, 1, 1 + n12, 2, 
     1]/(-1 + n5) + ((3 - 2*d + 2*n1 + n2 + n3 + n4 + n5)*
     j[p4, -1 + n1, n2, n3, n4, -1 + n5, 1, 1, 1, 1 + n9, n10, 1, 1 + n12, 1, 
      1])/(-1 + n5) + j[p4, -1 + n1, n2, n3, n4, -1 + n5, 1, 1, 2, 1 + n9, 
     n10, 1, 1 + n12, 0, 1]/(-1 + n5) - j[p4, -1 + n1, n2, n3, n4, n5, 0, 1, 
    1, 1 + n9, n10, 1, 1 + n12, 1, 1] - j[p4, -1 + n1, n2, n3, n4, n5, 1, 0, 
    1, 1 + n9, n10, 1, 1 + n12, 1, 1] + j[p4, -1 + n1, n2, n3, n4, n5, 1, 1, 
    1, 1 + n9, n10, 1, n12, 1, 1] + j[p4, -1 + n1, n2, n3, n4, n5, 1, 1, 1, 
    1 + n9, n10, 1, 1 + n12, 0, 1] - j[p4, -1 + n1, n2, n3, n4, n5, 1, 1, 1, 
    1 + n9, n10, 1, 1 + n12, 1, 0] + 
   (n4*j[p4, -1 + n1, n2, n3, 1 + n4, -2 + n5, 1, 1, 1, 1 + n9, n10, 1, 
      1 + n12, 1, 1])/(-1 + n5) - 
   (n4*j[p4, -1 + n1, n2, n3, 1 + n4, -1 + n5, 0, 1, 1, 1 + n9, n10, 1, 
      1 + n12, 1, 1])/(-1 + n5) - 
   (n4*j[p4, -1 + n1, n2, n3, 1 + n4, -1 + n5, 1, 0, 1, 1 + n9, n10, 1, 
      1 + n12, 1, 1])/(-1 + n5) + 
   (n4*j[p4, -1 + n1, n2, n3, 1 + n4, -1 + n5, 1, 1, 0, 1 + n9, n10, 1, 
      1 + n12, 1, 1])/(-1 + n5) + 
   (n4*j[p4, -1 + n1, n2, n3, 1 + n4, -1 + n5, 1, 1, 1, 1 + n9, n10, 1, n12, 
      1, 1])/(-1 + n5) - (n4*j[p4, -1 + n1, n2, n3, 1 + n4, -1 + n5, 1, 1, 1, 
      1 + n9, n10, 1, 1 + n12, 1, 0])/(-1 + n5) + 
   (2*n3*j[p4, -1 + n1, n2, 1 + n3, n4, -1 + n5, 1, 1, 0, 1 + n9, n10, 1, 
      1 + n12, 1, 1])/(-1 + n5) + 
   (2*n3*j[p4, -1 + n1, n2, 1 + n3, n4, -1 + n5, 1, 1, 1, 1 + n9, n10, 1, 
      1 + n12, 0, 1])/(-1 + n5) - 
   (n2*j[p4, -1 + n1, 1 + n2, -1 + n3, n4, -1 + n5, 1, 1, 1, 1 + n9, n10, 1, 
      1 + n12, 1, 1])/(-1 + n5) + 
   (2*n2*j[p4, -1 + n1, 1 + n2, n3, n4, -1 + n5, 1, 1, 0, 1 + n9, n10, 1, 
      1 + n12, 1, 1])/(-1 + n5) + 
   (2*n2*j[p4, -1 + n1, 1 + n2, n3, n4, -1 + n5, 1, 1, 1, 1 + n9, n10, 1, 
      1 + n12, 0, 1])/(-1 + n5) - 
   (n4*j[p4, n1, -1 + n2, n3, 1 + n4, -1 + n5, 1, 1, 1, 1 + n9, n10, 1, n12, 
      1, 1])/(-1 + n5) - (n3*j[p4, n1, -1 + n2, 1 + n3, n4, -1 + n5, 1, 1, 1, 
      1 + n9, n10, 1, n12, 1, 1])/(-1 + n5) + 
   ((-1 + n1)*j[p4, n1, n2, n3, n4, -1 + n5, 1, 1, 0, 1 + n9, n10, 1, 
      1 + n12, 1, 1])/(-1 + n5) + 
   ((1 - n1)*j[p4, n1, n2, n3, n4, -1 + n5, 1, 1, 1, 1 + n9, n10, 0, 1 + n12, 
      1, 1])/(-1 + n5) + ((1 - d + 2*n1 + n2 + n5)*j[p4, n1, n2, n3, n4, 
      -1 + n5, 1, 1, 1, 1 + n9, n10, 1, n12, 1, 1])/(-1 + n5) + 
   j[p4, n1, n2, n3, n4, -1 + n5, 1, 1, 1, 1 + n9, n10, 1, n12, 2, 1]/
    (1 - n5) + ((-1 + n1)*j[p4, n1, n2, n3, n4, -1 + n5, 1, 1, 1, 1 + n9, 
      n10, 1, 1 + n12, 0, 1])/(-1 + n5) + 
   ((1 - n1)*j[p4, n1, n2, n3, n4, -1 + n5, 1, 1, 1, 1 + n9, n10, 1, 1 + n12, 
      1, 1])/(-1 + n5) + j[p4, n1, n2, n3, n4, -1 + n5, 1, 1, 2, 1 + n9, n10, 
     0, n12, 1, 1]/(1 - n5) + (n4*j[p4, n1, n2, n3, 1 + n4, -2 + n5, 1, 1, 1, 
      1 + n9, n10, 1, n12, 1, 1])/(-1 + n5) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, -1 + n5, 1, 1, 0, 1 + n9, n10, 1, n12, 1, 
      1])/(-1 + n5) - (n4*j[p4, n1, n2, n3, 1 + n4, -1 + n5, 1, 1, 1, n9, 
      n10, 1, n12, 1, 1])/(-1 + n5) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, -1 + n5, 1, 1, 1, 1 + n9, -1 + n10, 1, n12, 
      1, 1])/(-1 + n5) - (n4*j[p4, n1, n2, n3, 1 + n4, -1 + n5, 1, 1, 1, 
      1 + n9, n10, 0, n12, 1, 1])/(-1 + n5) + 
   (n3*j[p4, n1, n2, 1 + n3, n4, -1 + n5, 1, 1, 0, 1 + n9, n10, 1, n12, 1, 
      1])/(-1 + n5) + (n3*j[p4, n1, n2, 1 + n3, n4, -1 + n5, 1, 1, 1, 1 + n9, 
      -1 + n10, 1, n12, 1, 1])/(-1 + n5) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, -1 + n5, 1, 1, 1, 1 + n9, n10, 0, n12, 1, 
      1])/(-1 + n5) + (n3*j[p4, n1, n2, 1 + n3, n4, -1 + n5, 1, 1, 1, 1 + n9, 
      n10, 1, n12, 0, 1])/(-1 + n5) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, -1 + n5, 1, 1, 1, 1 + n9, n10, 1, n12, 1, 
      1])/(-1 + n5) - (n2*j[p4, n1, 1 + n2, n3, n4, -1 + n5, 1, 1, 1, 1 + n9, 
      -1 + n10, 1, n12, 1, 1])/(-1 + n5), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 0 && n12 == 0 && n2 == 0 && n3 == 0 && n4 == 0 && 
    n9 == 0 &&  !(n11 == 1 || n8 == 1) -> 
  ((-1 - d + 2*n13 + n5 + n8)*j[p4, 0, 0, 0, 0, n5, n6, n7, -1 + n8, 0, 0, 
      n11, 0, n13, n14])/(-1 + n8) + 
   ((-1 - 4*d + n11 + 2*n13 + 2*n14 + 2*n5 + 2*n6 + 2*n7 + 2*n8)*
     j[p4, 0, 0, 0, 0, n5, n6, n7, n8, 0, 0, -1 + n11, 0, n13, n14])/
    (-1 + n11) + j[p4, 0, 0, 0, 0, n5, n6, n7, n8, 0, 0, n11, 0, -1 + n13, 
    n14] + (n5*j[p4, 0, 0, 0, 0, 1 + n5, n6, n7, -1 + n8, 0, 0, n11, 0, 
      -1 + n13, n14])/(-1 + n8) - 
   (n5*j[p4, 0, 0, 0, 0, 1 + n5, n6, n7, -1 + n8, 0, 0, n11, 0, n13, 
      -1 + n14])/(-1 + n8), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n6 == 1 && n7 == 1 && 
    n8 == 1 &&  !(n3 == 0 || n5 == 1 || n9 == 0) -> 
  j[p4, -1 + n1, n2, n3, n4, n5, 1, 1, 1, 1 + n9, n10, 1, 0, 1, 1] - 
   j[p4, -1 + n1, n2, 1 + n3, -1 + n4, n5, 1, 1, 1, 1 + n9, n10, 1, 0, 1, 
    1] + j[p4, -1 + n1, n2, 1 + n3, n4, -2 + n5, 1, 1, 1, 1 + n9, n10, 1, 0, 
     2, 1]/(1 - n5) + j[p4, -1 + n1, n2, 1 + n3, n4, -1 + n5, 0, 1, 2, 
     1 + n9, n10, 1, 0, 1, 1]/(-1 + n5) + 
   j[p4, -1 + n1, n2, 1 + n3, n4, -1 + n5, 1, 0, 1, 1 + n9, n10, 1, 0, 2, 1]/
    (-1 + n5) + ((-1 + d - n1 - n3 - n4 - n5)*j[p4, -1 + n1, n2, 1 + n3, n4, 
      -1 + n5, 1, 1, 1, 1 + n9, n10, 1, 0, 1, 1])/(-1 + n5) + 
   j[p4, -1 + n1, n2, 1 + n3, n4, -1 + n5, 1, 1, 1, 1 + n9, n10, 1, 0, 2, 0]/
    (-1 + n5) + j[p4, -1 + n1, n2, 1 + n3, n4, n5, 1, 0, 1, 1 + n9, n10, 1, 
    0, 1, 1] + ((1 + n3)*j[p4, -1 + n1, n2, 2 + n3, n4, -1 + n5, 1, 1, 1, 
      1 + n9, n10, 1, 0, 1, 0])/(-1 + n5) + 
   (n2*j[p4, -1 + n1, 1 + n2, n3, n4, -1 + n5, 1, 1, 1, 1 + n9, n10, 1, 0, 1, 
      1])/(-1 + n5) - (n2*j[p4, -1 + n1, 1 + n2, 1 + n3, n4, -2 + n5, 1, 1, 
      1, 1 + n9, n10, 1, 0, 1, 1])/(-1 + n5) + 
   (n2*j[p4, -1 + n1, 1 + n2, 1 + n3, n4, -1 + n5, 0, 1, 1, 1 + n9, n10, 1, 
      0, 1, 1])/(-1 + n5) + (n2*j[p4, -1 + n1, 1 + n2, 1 + n3, n4, -1 + n5, 
      1, 0, 1, 1 + n9, n10, 1, 0, 1, 1])/(-1 + n5) - 
   (n2*j[p4, -1 + n1, 1 + n2, 1 + n3, n4, -1 + n5, 1, 1, 0, 1 + n9, n10, 1, 
      0, 1, 1])/(-1 + n5) + ((-1 + n1 + n10 - n3 - n4)*
     j[p4, n1, -1 + n2, 1 + n3, n4, -1 + n5, 1, 1, 1, 1 + n9, n10, 1, 0, 1, 
      1])/(-1 + n5) + ((4 - 2*d + 2*n1 + n10 + n2 + n4 + n5)*
     j[p4, n1, n2, n3, n4, -1 + n5, 1, 1, 1, 1 + n9, n10, 1, 0, 1, 1])/
    (-1 + n5) + j[p4, n1, n2, n3, n4, -1 + n5, 1, 1, 1, 1 + n9, n10, 1, 0, 2, 
     1]/(1 - n5) + j[p4, n1, n2, n3, n4, -1 + n5, 1, 2, 1, 1 + n9, n10, 0, 0, 
     1, 1]/(-1 + n5) - (n4*j[p4, n1, n2, n3, 1 + n4, -1 + n5, 0, 1, 1, 
      1 + n9, n10, 1, 0, 1, 1])/(-1 + n5) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, -1 + n5, 1, 1, 0, 1 + n9, n10, 1, 0, 1, 1])/
    (-1 + n5) + ((-3 + d - n4)*j[p4, n1, n2, 1 + n3, -1 + n4, -1 + n5, 1, 1, 
      1, 1 + n9, n10, 1, 0, 1, 1])/(-1 + n5) + 
   j[p4, n1, n2, 1 + n3, -1 + n4, -1 + n5, 1, 1, 2, 1 + n9, n10, 0, 0, 1, 1]/
    (1 - n5) + j[p4, n1, n2, 1 + n3, -1 + n4, -1 + n5, 1, 2, 1, 1 + n9, n10, 
     0, 0, 1, 1]/(1 - n5) + ((-n1 + n4)*j[p4, n1, n2, 1 + n3, n4, -2 + n5, 1, 
      1, 1, 1 + n9, n10, 1, 0, 1, 1])/(-1 + n5) + 
   j[p4, n1, n2, 1 + n3, n4, -2 + n5, 1, 2, 1, 1 + n9, -1 + n10, 1, 0, 1, 1]/
    (-1 + n5) + ((-n10 + n4)*j[p4, n1, n2, 1 + n3, n4, -1 + n5, 0, 1, 1, 
      1 + n9, n10, 1, 0, 1, 1])/(-1 + n5) + 
   ((1 - n10 + n3)*j[p4, n1, n2, 1 + n3, n4, -1 + n5, 1, 0, 1, 1 + n9, n10, 
      1, 0, 1, 1])/(-1 + n5) + ((2 - n1 - n10 + 2*n3)*
     j[p4, n1, n2, 1 + n3, n4, -1 + n5, 1, 1, 0, 1 + n9, n10, 1, 0, 1, 1])/
    (-1 + n5) + ((-1 + n1 + n10 - n4)*j[p4, n1, n2, 1 + n3, n4, -1 + n5, 1, 
      1, 1, n9, n10, 1, 0, 1, 1])/(-1 + n5) + 
   ((3 - d - n1 + n2 + n3 + n4 + n5 + n9)*j[p4, n1, n2, 1 + n3, n4, -1 + n5, 
      1, 1, 1, 1 + n9, -1 + n10, 1, 0, 1, 1])/(-1 + n5) + 
   ((n1 - n4)*j[p4, n1, n2, 1 + n3, n4, -1 + n5, 1, 1, 1, 1 + n9, n10, 0, 0, 
      1, 1])/(-1 + n5) + ((-1 + n10 - n3)*j[p4, n1, n2, 1 + n3, n4, -1 + n5, 
      1, 1, 1, 1 + n9, n10, 1, -1, 1, 1])/(-1 + n5) + 
   ((1 - n10 + n3)*j[p4, n1, n2, 1 + n3, n4, -1 + n5, 1, 1, 1, 1 + n9, n10, 
      1, 0, 0, 1])/(-1 + n5) + 
   ((1 - n10)*j[p4, n1, n2, 1 + n3, n4, -1 + n5, 1, 1, 1, 1 + n9, n10, 1, 0, 
      1, 1])/(-1 + n5) + ((1 + n9)*j[p4, n1, n2, 1 + n3, n4, -1 + n5, 1, 1, 
      1, 2 + n9, -1 + n10, 1, 0, 1, 0])/(-1 + n5) + 
   ((-1 - n9)*j[p4, n1, n2, 1 + n3, n4, -1 + n5, 1, 1, 1, 2 + n9, -1 + n10, 
      1, 0, 1, 1])/(-1 + n5) + j[p4, n1, n2, 1 + n3, n4, -1 + n5, 1, 2, 1, 
     1 + n9, -1 + n10, 1, 0, 0, 1]/(1 - n5) - j[p4, n1, n2, 1 + n3, n4, n5, 
    1, 1, 1, 1 + n9, -1 + n10, 1, 0, 0, 1] + j[p4, n1, n2, 1 + n3, n4, n5, 1, 
    1, 1, 1 + n9, -1 + n10, 1, 0, 1, 0] + 
   ((-1 - n3)*j[p4, n1, n2, 2 + n3, -1 + n4, -1 + n5, 1, 0, 1, 1 + n9, n10, 
      1, 0, 1, 1])/(-1 + n5) + 
   ((-1 - n3)*j[p4, n1, n2, 2 + n3, -1 + n4, -1 + n5, 1, 1, 0, 1 + n9, n10, 
      1, 0, 1, 1])/(-1 + n5) + 
   ((-1 - n3)*j[p4, n1, n2, 2 + n3, -1 + n4, -1 + n5, 1, 1, 1, 1 + n9, n10, 
      0, 0, 1, 1])/(-1 + n5) + 
   ((1 + n3)*j[p4, n1, n2, 2 + n3, -1 + n4, -1 + n5, 1, 1, 1, 1 + n9, n10, 1, 
      -1, 1, 1])/(-1 + n5) + ((-1 - n3)*j[p4, n1, n2, 2 + n3, -1 + n4, 
      -1 + n5, 1, 1, 1, 1 + n9, n10, 1, 0, 1, 1])/(-1 + n5) + 
   ((1 + n3)*j[p4, n1, n2, 2 + n3, n4, -1 + n5, 1, 1, 1, 1 + n9, -1 + n10, 1, 
      0, 1, 0])/(-1 + n5) + (n2*j[p4, n1, 1 + n2, 1 + n3, n4, -2 + n5, 1, 1, 
      1, 1 + n9, -1 + n10, 1, 0, 1, 1])/(-1 + n5) - 
   (n2*j[p4, n1, 1 + n2, 1 + n3, n4, -1 + n5, 0, 1, 1, 1 + n9, -1 + n10, 1, 
      0, 1, 1])/(-1 + n5) - (n2*j[p4, n1, 1 + n2, 1 + n3, n4, -1 + n5, 1, 0, 
      1, 1 + n9, -1 + n10, 1, 0, 1, 1])/(-1 + n5) - 
   (n2*j[p4, n1, 1 + n2, 1 + n3, n4, -1 + n5, 1, 1, 0, 1 + n9, -1 + n10, 1, 
      0, 1, 1])/(-1 + n5) + (n2*j[p4, n1, 1 + n2, 1 + n3, n4, -1 + n5, 1, 1, 
      1, 1 + n9, -1 + n10, 1, -1, 1, 1])/(-1 + n5) - 
   (2*n2*j[p4, n1, 1 + n2, 1 + n3, n4, -1 + n5, 1, 1, 1, 1 + n9, -1 + n10, 1, 
      0, 0, 1])/(-1 + n5), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n11 == 1 && n13 == 1 && n14 == 1 && n6 == 1 && n7 == 1 && n8 == 1 && 
    n9 == 0 &&  !(n12 == 0 || n4 == 0 || n5 == 1) -> 
  ((d - 2*n3 - 2*n5)*j[p4, n1, -1 + n2, -1 + n3, 1 + n4, n5, 1, 1, 1, 0, n10, 
      1, 1 + n12, 1, 1])/(2*(-1 + n3)) + 
   ((-d + 2*n3 + 2*n5)*j[p4, n1, -1 + n2, n3, 1 + n4, -1 + n5, 1, 1, 1, 0, 
      n10, 1, 1 + n12, 1, 1])/(2*(-1 + n5)) + 
   ((6 - d + 2*n1 + 2*n2 + 8*n4 - d*n4 + 2*n1*n4 + 2*n2*n4 + 2*n4^2)*
     j[p4, n1, n2, -2 + n3, 2 + n4, -1 + n5, 1, 1, 1, 0, n10, 1, 1 + n12, 1, 
      1])/(2*(-1 + n3)*(-1 + n5)) + 
   ((d - 2*n3 - 2*n5)*j[p4, n1, n2, -1 + n3, n4, n5, 1, 1, 1, 0, n10, 1, 
      1 + n12, 1, 1])/(2*(-1 + n3)) + 
   ((d - 2*n3 - 2*n5)*j[p4, n1, n2, -1 + n3, 1 + n4, -1 + n5, 1, 1, 0, 0, 
      n10, 1, 1 + n12, 2, 1])/(2*(-1 + n3)*(-1 + n5)) + 
   ((6 - 3*d + 8*n1 - 2*d*n1 + 2*n1^2 + 2*n2 - d*n2 + 2*n1*n2 - 2*n3 + d*n3 + 
      2*n4 - d*n4 + 2*n1*n4 - 2*n5 + d*n5)*j[p4, n1, n2, -1 + n3, 1 + n4, 
      -1 + n5, 1, 1, 1, 0, n10, 1, 1 + n12, 1, 1])/(2*(-1 + n3)*(-1 + n5)) + 
   ((6 - d + 2*n1 + 2*n2 + 2*n4)*j[p4, n1, n2, -1 + n3, 1 + n4, -1 + n5, 1, 
      1, 2, 0, n10, 1, 1 + n12, 0, 1])/(2*(-1 + n3)*(-1 + n5)) + 
   ((-d + 2*n3 + 2*n5)*j[p4, n1, n2, -1 + n3, 1 + n4, n5, 0, 1, 1, 0, n10, 1, 
      1 + n12, 1, 1])/(2*(-1 + n3)) + 
   ((-d + 2*n3 + 2*n5)*j[p4, n1, n2, -1 + n3, 1 + n4, n5, 1, 0, 1, 0, n10, 1, 
      1 + n12, 1, 1])/(2*(-1 + n3)) + 
   ((-2 + d - 2*n5)*j[p4, n1, n2, -1 + n3, 1 + n4, n5, 1, 1, 1, 0, n10, 1, 
      n12, 1, 1])/(2*(-1 + n3)) + j[p4, n1, n2, -1 + n3, 1 + n4, n5, 1, 1, 1, 
     0, n10, 1, n12, 2, 0]/(-1 + n3) + 
   ((6 - d + 2*n1 + 2*n2 + 2*n4)*j[p4, n1, n2, -1 + n3, 1 + n4, n5, 1, 1, 1, 
      0, n10, 1, 1 + n12, 0, 1])/(2*(-1 + n3)) + 
   ((-6 + d - 2*n1 - 2*n2 - 2*n4)*j[p4, n1, n2, -1 + n3, 1 + n4, n5, 1, 1, 1, 
      0, n10, 1, 1 + n12, 1, 0])/(2*(-1 + n3)) + 
   ((6 - d + 2*n1 + 2*n2 + 8*n4 - d*n4 + 2*n1*n4 + 2*n2*n4 + 2*n4^2)*
     j[p4, n1, n2, -1 + n3, 2 + n4, -2 + n5, 1, 1, 1, 0, n10, 1, 1 + n12, 1, 
      1])/(2*(-1 + n3)*(-1 + n5)) + 
   ((-d + 2*n3 - d*n4 + 2*n3*n4 + 2*n5 + 2*n4*n5)*j[p4, n1, n2, -1 + n3, 
      2 + n4, -1 + n5, 0, 1, 1, 0, n10, 1, 1 + n12, 1, 1])/
    (2*(-1 + n3)*(-1 + n5)) + 
   ((-1 - n4)*j[p4, n1, n2, -1 + n3, 2 + n4, -1 + n5, 0, 1, 2, 0, n10, 1, 
      n12, 1, 1])/((-1 + n3)*(-1 + n5)) + 
   ((-6 + d - 2*n1 - 2*n2 - 8*n4 + d*n4 - 2*n1*n4 - 2*n2*n4 - 2*n4^2)*
     j[p4, n1, n2, -1 + n3, 2 + n4, -1 + n5, 1, 0, 1, 0, n10, 1, 1 + n12, 1, 
      1])/(2*(-1 + n3)*(-1 + n5)) + 
   ((d - 2*n3 + d*n4 - 2*n3*n4 - 2*n5 - 2*n4*n5)*j[p4, n1, n2, -1 + n3, 
      2 + n4, -1 + n5, 1, 1, 0, 0, n10, 1, 1 + n12, 1, 1])/
    (2*(-1 + n3)*(-1 + n5)) + 
   ((6 - d + 2*n1 + 8*n4 - d*n4 + 2*n1*n4 + 2*n4^2)*
     j[p4, n1, n2, -1 + n3, 2 + n4, -1 + n5, 1, 1, 1, 0, n10, 1, n12, 1, 1])/
    (2*(-1 + n3)*(-1 + n5)) + 
   ((-6 + d - 2*n1 - 2*n2 - 8*n4 + d*n4 - 2*n1*n4 - 2*n2*n4 - 2*n4^2)*
     j[p4, n1, n2, -1 + n3, 2 + n4, -1 + n5, 1, 1, 1, 0, n10, 1, 1 + n12, 1, 
      0])/(2*(-1 + n3)*(-1 + n5)) + j[p4, n1, n2, n3, 1 + n4, -1 + n5, 1, 0, 
     1, 0, n10, 1, n12, 2, 1]/(-1 + n5) + 
   ((-3 + d - n1 - n2 - n3 - n4 - n5)*j[p4, n1, n2, n3, 1 + n4, -1 + n5, 1, 
      0, 1, 0, n10, 1, 1 + n12, 1, 1])/(-1 + n5) + 
   ((d - 2*n3 - 2*n5)*j[p4, n1, n2, n3, 1 + n4, -1 + n5, 1, 1, 0, 0, n10, 1, 
      1 + n12, 1, 1])/(-1 + n5) + j[p4, n1, n2, n3, 1 + n4, -1 + n5, 1, 1, 1, 
    0, n10, 1, n12, 1, 1] + ((3 + n1 + n2 - n3 + n4 - n5)*
     j[p4, n1, n2, n3, 1 + n4, -1 + n5, 1, 1, 1, 0, n10, 1, 1 + n12, 0, 1])/
    (-1 + n5) + j[p4, n1, n2, n3, 1 + n4, n5, 1, 0, 1, 0, n10, 1, n12, 1, 
    1] - j[p4, n1, n2, n3, 1 + n4, n5, 1, 1, 1, 0, n10, 1, n12, 0, 1] + 
   j[p4, n1, n2, n3, 1 + n4, n5, 1, 1, 1, 0, n10, 1, n12, 1, 0] + 
   ((-6*n2 + d*n2 - 2*n1*n2 - 2*n2^2 - 2*n2*n4)*j[p4, n1, 1 + n2, -2 + n3, 
      1 + n4, -1 + n5, 1, 1, 1, 0, n10, 1, 1 + n12, 1, 1])/
    (2*(-1 + n3)*(-1 + n5)) + ((3*n2 - d*n2 + n1*n2 + n2^2 + n2*n3 + n2*n4 + 
      n2*n5)*j[p4, n1, 1 + n2, -1 + n3, 1 + n4, -1 + n5, 1, 0, 1, 0, n10, 1, 
      1 + n12, 1, 1])/((-1 + n3)*(-1 + n5)) - 
   (n2*j[p4, n1, 1 + n2, -1 + n3, 1 + n4, -1 + n5, 1, 0, 2, 0, n10, 1, n12, 
      1, 1])/((-1 + n3)*(-1 + n5)) + 
   ((3*n2 + n1*n2 + n2^2 - n2*n3 + n2*n4 - n2*n5)*j[p4, n1, 1 + n2, -1 + n3, 
      1 + n4, -1 + n5, 1, 1, 0, 0, n10, 1, 1 + n12, 1, 1])/
    ((-1 + n3)*(-1 + n5)) + ((-n2 - n2*n4)*j[p4, n1, 1 + n2, -1 + n3, 1 + n4, 
      -1 + n5, 1, 1, 1, 0, n10, 1, n12, 1, 1])/((-1 + n3)*(-1 + n5)) + 
   ((6*n2 - d*n2 + 2*n1*n2 + 2*n2^2 + 2*n2*n4)*j[p4, n1, 1 + n2, -1 + n3, 
      1 + n4, -1 + n5, 1, 1, 1, 0, n10, 1, 1 + n12, 0, 1])/
    ((-1 + n3)*(-1 + n5)) + ((n2 + n2*n4)*j[p4, n1, 1 + n2, -1 + n3, 2 + n4, 
      -2 + n5, 1, 1, 1, 0, n10, 1, n12, 1, 1])/((-1 + n3)*(-1 + n5)) + 
   ((-n2 - n2*n4)*j[p4, n1, 1 + n2, -1 + n3, 2 + n4, -1 + n5, 0, 1, 1, 0, 
      n10, 1, n12, 1, 1])/((-1 + n3)*(-1 + n5)) + 
   ((-n2 - n2*n4)*j[p4, n1, 1 + n2, -1 + n3, 2 + n4, -1 + n5, 1, 0, 1, 0, 
      n10, 1, n12, 1, 1])/((-1 + n3)*(-1 + n5)) + 
   ((n2 + n2*n4)*j[p4, n1, 1 + n2, -1 + n3, 2 + n4, -1 + n5, 1, 1, 0, 0, n10, 
      1, n12, 1, 1])/((-1 + n3)*(-1 + n5)) + 
   ((-n1 - n1*n4)*j[p4, 1 + n1, -1 + n2, -1 + n3, 2 + n4, -1 + n5, 1, 1, 1, 
      0, n10, 1, n12, 1, 1])/((-1 + n3)*(-1 + n5)) + 
   ((d*n1 - 2*n1*n3 - 2*n1*n5)*j[p4, 1 + n1, n2, -1 + n3, 1 + n4, -1 + n5, 1, 
      1, 0, 0, n10, 1, 1 + n12, 1, 1])/(2*(-1 + n3)*(-1 + n5)) + 
   ((-(d*n1) + 2*n1*n3 + 2*n1*n5)*j[p4, 1 + n1, n2, -1 + n3, 1 + n4, -1 + n5, 
      1, 1, 1, 0, n10, 0, 1 + n12, 1, 1])/(2*(-1 + n3)*(-1 + n5)) + 
   ((4*n1 - d*n1 + 2*n1^2 + 2*n1*n2)*j[p4, 1 + n1, n2, -1 + n3, 1 + n4, 
      -1 + n5, 1, 1, 1, 0, n10, 1, n12, 1, 1])/(2*(-1 + n3)*(-1 + n5)) + 
   ((6*n1 - d*n1 + 2*n1^2 + 2*n1*n2 + 2*n1*n4)*j[p4, 1 + n1, n2, -1 + n3, 
      1 + n4, -1 + n5, 1, 1, 1, 0, n10, 1, 1 + n12, 0, 1])/
    (2*(-1 + n3)*(-1 + n5)) + ((-6*n1 + d*n1 - 2*n1^2 - 2*n1*n2 - 2*n1*n4)*
     j[p4, 1 + n1, n2, -1 + n3, 1 + n4, -1 + n5, 1, 1, 1, 0, n10, 1, 1 + n12, 
      1, 1])/(2*(-1 + n3)*(-1 + n5)) - 
   (n1*j[p4, 1 + n1, n2, -1 + n3, 1 + n4, -1 + n5, 1, 1, 2, 0, n10, 0, n12, 
      1, 1])/((-1 + n3)*(-1 + n5)) + 
   ((n1 + n1*n4)*j[p4, 1 + n1, n2, -1 + n3, 2 + n4, -2 + n5, 1, 1, 1, 0, n10, 
      1, n12, 1, 1])/((-1 + n3)*(-1 + n5)) + 
   ((n1 + n1*n4)*j[p4, 1 + n1, n2, -1 + n3, 2 + n4, -1 + n5, 1, 1, 0, 0, n10, 
      1, n12, 1, 1])/((-1 + n3)*(-1 + n5)) + 
   ((-n1 - n1*n4)*j[p4, 1 + n1, n2, -1 + n3, 2 + n4, -1 + n5, 1, 1, 1, -1, 
      n10, 1, n12, 1, 1])/((-1 + n3)*(-1 + n5)) + 
   ((n1 + n1*n4)*j[p4, 1 + n1, n2, -1 + n3, 2 + n4, -1 + n5, 1, 1, 1, 0, 
      -1 + n10, 1, n12, 1, 1])/((-1 + n3)*(-1 + n5)) + 
   ((-n1 - n1*n4)*j[p4, 1 + n1, n2, -1 + n3, 2 + n4, -1 + n5, 1, 1, 1, 0, 
      n10, 0, n12, 1, 1])/((-1 + n3)*(-1 + n5)) - 
   (n1*n2*j[p4, 1 + n1, 1 + n2, -1 + n3, 1 + n4, -1 + n5, 1, 1, 1, 0, 
      -1 + n10, 1, n12, 1, 1])/((-1 + n3)*(-1 + n5)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n11 == 1 && n13 == 1 && n14 == 1 && n5 == 1 && n6 == 1 && n7 == 1 && 
    n8 == 1 &&  !(n12 == 0 || n4 == 0) -> 
  (n10*j[p4, -1 + n1, -1 + n2, -1 + n3, 1 + n4, 1, 1, 1, 1, n9, 1 + n10, 1, 
      1 + n12, 1, 1])/(-1 + n2) + 
   (n9*j[p4, -1 + n1, -1 + n2, -1 + n3, 1 + n4, 1, 1, 1, 1, 1 + n9, n10, 1, 
      1 + n12, 1, 1])/(-1 + n2) - 
   (n10*j[p4, -1 + n1, -1 + n2, n3, n4, 1, 1, 1, 1, n9, 1 + n10, 1, 1 + n12, 
      1, 1])/(-1 + n2) - (n9*j[p4, -1 + n1, -1 + n2, n3, n4, 1, 1, 1, 1, 
      1 + n9, n10, 1, 1 + n12, 1, 1])/(-1 + n2) - 
   (n10*j[p4, n1, -2 + n2, -1 + n3, 1 + n4, 1, 1, 1, 1, n9, 1 + n10, 1, 
      1 + n12, 1, 1])/(-1 + n2) - 
   (n10*j[p4, n1, -1 + n2, -1 + n3, n4, 1, 1, 1, 1, n9, 1 + n10, 1, 1 + n12, 
      1, 1])/(-1 + n2) + j[p4, n1, -1 + n2, -1 + n3, 1 + n4, 0, 1, 1, 1, n9, 
     n10, 1, 1 + n12, 1, 2]/(1 - n2) - 
   (n9*j[p4, n1, -1 + n2, -1 + n3, 1 + n4, 0, 1, 1, 1, 1 + n9, n10, 1, 
      1 + n12, 1, 1])/(-1 + n2) + j[p4, n1, -1 + n2, -1 + n3, 1 + n4, 0, 1, 
     2, 1, n9, n10, 1, 1 + n12, 1, 1]/(1 - n2) + 
   (n10*j[p4, n1, -1 + n2, -1 + n3, 1 + n4, 1, 0, 1, 1, n9, 1 + n10, 1, 
      1 + n12, 1, 1])/(-1 + n2) - 
   (n10*j[p4, n1, -1 + n2, -1 + n3, 1 + n4, 1, 1, 1, 1, -1 + n9, 1 + n10, 1, 
      1 + n12, 1, 1])/(-1 + n2) + j[p4, n1, -1 + n2, -1 + n3, 1 + n4, 1, 1, 
     1, 1, n9, n10, 1, 1 + n12, 0, 2]/(-1 + n2) + 
   ((-3 + d - n2 - n9)*j[p4, n1, -1 + n2, -1 + n3, 1 + n4, 1, 1, 1, 1, n9, 
      n10, 1, 1 + n12, 1, 1])/(-1 + n2) + 
   j[p4, n1, -1 + n2, n3, n4, 0, 1, 1, 1, n9, n10, 1, 1 + n12, 1, 2]/
    (-1 + n2) + (n9*j[p4, n1, -1 + n2, n3, n4, 0, 1, 1, 1, 1 + n9, n10, 1, 
      1 + n12, 1, 1])/(-1 + n2) + 
   (n10*j[p4, n1, -1 + n2, n3, n4, 1, 1, 0, 1, n9, 1 + n10, 1, 1 + n12, 1, 
      1])/(-1 + n2) + (n10*j[p4, n1, -1 + n2, n3, n4, 1, 1, 1, 0, n9, 
      1 + n10, 1, 1 + n12, 1, 1])/(-1 + n2) + 
   j[p4, n1, -1 + n2, n3, n4, 1, 1, 1, 1, n9, n10, 1, 1 + n12, 0, 2]/
    (1 - n2) - (n10*j[p4, n1, -1 + n2, n3, n4, 1, 1, 1, 1, n9, 1 + n10, 1, 
      n12, 1, 1])/(-1 + n2) + (n10*j[p4, n1, -1 + n2, n3, n4, 1, 1, 1, 1, n9, 
      1 + n10, 1, 1 + n12, 0, 1])/(-1 + n2) + 
   (n10*j[p4, n1, -1 + n2, n3, n4, 1, 1, 1, 1, n9, 1 + n10, 1, 1 + n12, 1, 
      1])/(-1 + n2) - (n9*j[p4, n1, -1 + n2, n3, n4, 1, 1, 1, 1, 1 + n9, n10, 
      1, 1 + n12, 1, 0])/(-1 + n2) + 
   (n9*j[p4, n1, -1 + n2, n3, n4, 1, 1, 1, 1, 1 + n9, n10, 1, 1 + n12, 1, 1])/
    (-1 + n2) + j[p4, n1, -1 + n2, n3, n4, 1, 1, 2, 1, n9, n10, 1, 1 + n12, 
     0, 1]/(-1 + n2) + j[p4, n1, -1 + n2, n3, n4, 2, 1, 1, 1, n9, n10, 1, 
     1 + n12, 0, 1]/(-1 + n2) + j[p4, n1, -1 + n2, n3, n4, 2, 1, 1, 1, n9, 
     n10, 1, 1 + n12, 1, 0]/(1 - n2) + 
   ((1 - n3)*j[p4, n1, -1 + n2, n3, 1 + n4, 1, 1, 0, 1, n9, n10, 1, 1 + n12, 
      1, 1])/(-1 + n2) + ((-1 + n3)*j[p4, n1, -1 + n2, n3, 1 + n4, 1, 1, 1, 
      1, n9, n10, 1, 1 + n12, 0, 1])/(-1 + n2) + 
   ((1 - n3)*j[p4, n1, -1 + n2, n3, 1 + n4, 1, 1, 1, 1, n9, n10, 1, 1 + n12, 
      1, 0])/(-1 + n2) + (n3*j[p4, n1, -1 + n2, 1 + n3, n4, 1, 1, 0, 1, n9, 
      n10, 1, 1 + n12, 1, 1])/(-1 + n2) - 
   (n3*j[p4, n1, -1 + n2, 1 + n3, n4, 1, 1, 1, 1, n9, n10, 1, 1 + n12, 0, 1])/
    (-1 + n2) - j[p4, n1, n2, -1 + n3, n4, 1, 1, 1, 1, n9, n10, 1, 1 + n12, 
    1, 1] - j[p4, n1, n2, -1 + n3, 1 + n4, 0, 1, 1, 1, n9, n10, 1, 1 + n12, 
    1, 1] + j[p4, n1, n2, -1 + n3, 1 + n4, 1, 0, 1, 1, n9, n10, 1, 1 + n12, 
    1, 1] + j[p4, n1, n2, n3, n4, 1, 1, 0, 1, n9, n10, 1, 1 + n12, 1, 1] + 
   j[p4, n1, n2, n3, n4, 1, 1, 1, 0, n9, n10, 1, 1 + n12, 1, 1] + 
   2*j[p4, n1, n2, n3, n4, 1, 1, 1, 1, n9, n10, 1, 1 + n12, 0, 1], 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 0 && n11 == 1 && n12 == 0 && n2 == 0 && n3 == 0 && 
    n4 == 0 && n9 == 0 &&  !(n13 == 1 || n7 == 1) -> 
  -((n8*j[p4, 0, 0, 0, 0, n5, n6, n7, 1 + n8, 0, 0, 1, 0, -1 + n13, n14])/
     (-1 + n13)) + (n8*j[p4, 0, 0, 0, 0, 1 + n5, -1 + n6, n7, 1 + n8, 0, 0, 
      1, 0, -1 + n13, n14])/(-1 + n13) + 
   ((-n8 - d*n8 + 2*n6*n8 + n7*n8)*j[p4, 0, 0, 0, 0, 1 + n5, n6, -1 + n7, 
      1 + n8, 0, 0, 1, 0, -1 + n13, n14])/((-1 + n13)*(-1 + n7)) + 
   ((-1 + d - n13 - 2*n5 - n8)*j[p4, 0, 0, 0, 0, 1 + n5, n6, n7, n8, 0, 0, 1, 
      0, -1 + n13, n14])/(-1 + n13) + j[p4, 0, 0, 0, 0, 1 + n5, n6, n7, n8, 
    0, 0, 1, 0, n13, -1 + n14], 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 0 && n11 == 1 && n12 == 0 && n14 == 1 && n2 == 0 && 
    n3 == 0 && n4 == 0 && n7 != 1 -> 
  ((-2*n6 + d*n6 - 2*n6^2)*j[p4, 0, 0, 0, 0, n5, 1 + n6, -1 + n7, n8, n9, 0, 
     1, 0, n13, 1])/((d - 2*n7)*(-1 + n7)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 0 && n12 == 0 && n2 == 0 && n3 == 0 && n4 == 0 && 
    n8 == 1 && n9 == 0 &&  !(n11 == 1 || n6 == 1 || n7 == 1) -> 
  ((-1 - d + 2*n14 + n5 + n6)*j[p4, 0, 0, 0, 0, n5, -1 + n6, n7, 1, 0, 0, 
      n11, 0, n13, n14])/(-1 + n6) + ((-1 - 2*d + 2*n14 + n5 + 2*n6 + n7)*
     j[p4, 0, 0, 0, 0, n5, n6, -1 + n7, 1, 0, 0, n11, 0, n13, n14])/
    (-1 + n7) + ((1 - 4*d + n11 + 2*n13 + 2*n14 + 2*n5 + 2*n6 + 2*n7)*
     j[p4, 0, 0, 0, 0, n5, n6, n7, 1, 0, 0, -1 + n11, 0, n13, n14])/
    (-1 + n11) + j[p4, 0, 0, 0, 0, n5, n6, n7, 1, 0, 0, n11, 0, n13, 
    -1 + n14] - (n5*j[p4, 0, 0, 0, 0, 1 + n5, -1 + n6, n7, 1, 0, 0, n11, 0, 
      -1 + n13, n14])/(-1 + n6) + 
   (n5*j[p4, 0, 0, 0, 0, 1 + n5, -1 + n6, n7, 1, 0, 0, n11, 0, n13, 
      -1 + n14])/(-1 + n6) - (n5*j[p4, 0, 0, 0, 0, 1 + n5, n6, -1 + n7, 1, 0, 
      0, n11, 0, -1 + n13, n14])/(-1 + n7) + 
   (n5*j[p4, 0, 0, 0, 0, 1 + n5, n6, -1 + n7, 1, 0, 0, n11, 0, n13, 
      -1 + n14])/(-1 + n7), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 0 && n12 == 0 && n13 == 1 && n2 == 0 && n4 == 0 && 
    n7 == 1 && n9 == 0 &&  !(n3 == 0 || n6 == 1) -> 
  ((4 - d + 2*n3)*j[p4, 0, -1, 1 + n3, 0, n5, n6, 1, n8, 0, 0, n11, 0, 1, 
      n14])/(-d + 2*n6) + ((-4 + d - 2*n3)*j[p4, 0, 0, 1 + n3, 0, -1 + n5, 
      n6, 1, n8, 0, 0, n11, 0, 1, n14])/(-d + 2*n6) + 
   ((-4 - 3*d + d^2 + 8*n14 - 2*d*n14 - 2*n3 - 2*d*n3 + 4*n14*n3 + 4*n5 - 
      d*n5 + 2*n3*n5 + 4*n6 - d*n6 + 2*n3*n6)*j[p4, 0, 0, 1 + n3, 0, n5, 
      -1 + n6, 1, n8, 0, 0, n11, 0, 1, n14])/((d - 2*n6)*(-1 + n6)) + 
   ((-4 + d)*j[p4, 0, 0, 1 + n3, 0, n5, -1 + n6, 2, n8, 0, 0, n11, 0, 0, 
      n14])/((d - 2*n6)*(-1 + n6)) + 
   ((-4*n5 + d*n5 - 2*n3*n5)*j[p4, 0, 0, 1 + n3, 0, 1 + n5, -1 + n6, 1, n8, 
      0, 0, n11, 0, 0, n14])/((d - 2*n6)*(-1 + n6)) + 
   ((4*n5 - d*n5 + 2*n3*n5)*j[p4, 0, 0, 1 + n3, 0, 1 + n5, -1 + n6, 1, n8, 0, 
      0, n11, 0, 1, -1 + n14])/((d - 2*n6)*(-1 + n6)) + 
   ((-4 + d - 6*n3 + d*n3 - 2*n3^2)*j[p4, 0, 0, 2 + n3, 0, n5, -1 + n6, 0, 
      n8, 0, 0, n11, 0, 1, n14])/((d - 2*n6)*(-1 + n6)) + 
   ((4 - d + 6*n3 - d*n3 + 2*n3^2)*j[p4, 0, 0, 2 + n3, 0, n5, -1 + n6, 1, n8, 
      0, 0, n11, 0, 0, n14])/((d - 2*n6)*(-1 + n6)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n11 == 1 && n12 == 0 && n2 == 0 && n3 == 0 && n4 == 0 && 
    n7 == 1 && n9 == 0 &&  !(n10 == 0 || n13 == 1 || n6 == 1) -> 
  -((n5*n8*j[p4, -1, 0, 0, 0, 1 + n5, -1 + n6, 1, 1 + n8, 0, 1 + n10, 1, 0, 
       -1 + n13, n14])/((-1 + n13)*(-1 + n6))) + 
   ((-5 + 2*d - 2*n10 - n6 - n8)*j[p4, 0, 0, 0, 0, n5, -1 + n6, 1, n8, 0, 
      1 + n10, 1, 0, n13, n14])/(-1 + n6) - 
   (n8*j[p4, 0, 0, 0, 0, n5, -1 + n6, 1, 1 + n8, 0, 1 + n10, 0, 0, n13, n14])/
    (-1 + n6) + ((-6*n8 + 3*d*n8 - 2*n10*n8 - n13*n8 - n5*n8 - n6*n8 - 
      2*n8^2)*j[p4, 0, 0, 0, 0, n5, -1 + n6, 1, 1 + n8, 0, 1 + n10, 1, 0, 
      -1 + n13, n14])/((-1 + n13)*(-1 + n6)) + 
   (n8*j[p4, 0, 0, 0, 0, n5, -1 + n6, 1, 1 + n8, 0, 1 + n10, 1, 0, n13, n14])/
    (-1 + n6) + j[p4, 0, 0, 0, 0, n5, n6, 1, n8, -1, 1 + n10, 1, 0, n13, 
    n14] + (n8*j[p4, 0, 0, 0, 0, n5, n6, 1, 1 + n8, -1, 1 + n10, 1, 0, 
      -1 + n13, n14])/(-1 + n13) - 
   (n8*j[p4, 0, 0, 0, 0, n5, n6, 1, 1 + n8, 0, n10, 1, 0, -1 + n13, n14])/
    (-1 + n13) + (n5*n8*j[p4, 0, 0, 0, 0, 1 + n5, -1 + n6, 1, 1 + n8, -1, 
      1 + n10, 1, 0, -1 + n13, n14])/((-1 + n13)*(-1 + n6)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n11 == 1 && n12 == 0 && n14 == 1 && n2 == 0 && n3 == 0 && 
    n4 == 0 && n7 == 1 &&  !(n10 == 0 || n6 == 1) -> 
  ((-4 + d - 2*n10)*j[p4, 0, 0, 0, 0, n5, -1 + n6, 1, n8, n9, 1 + n10, 1, 0, 
      n13, 1])/(2*(-1 + n6)) + 
   ((-4 + d)*j[p4, 0, 0, 0, 0, n5, -1 + n6, 2, n8, n9, 1 + n10, 0, 0, n13, 
      1])/(2*(-2 + d - n10 - n6)*(-1 + n6)) + 
   ((4 - d + 2*n10)*j[p4, 0, 0, 0, 0, n5, n6, 1, n8, -1 + n9, 1 + n10, 1, 0, 
      n13, 1])/(2*(2 - d + n10 + n6)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n2 == 0 && n4 == 0 && 
    n7 == 1 && n9 == 0 &&  !(n10 == 0 || n3 == 0 || n6 == 1) -> 
  ((n10 - n3)*j[p4, -1, 0, 1 + n3, 0, n5, -1 + n6, 1, n8, 0, 1 + n10, 1, 0, 
      1, n14])/(-1 + n6) - j[p4, 0, -1, 1 + n3, 0, n5, n6, 1, n8, 0, n10, 1, 
    0, 1, n14] + ((-2 + d - n10 - n3 - n6)*j[p4, 0, 0, n3, 0, n5, -1 + n6, 1, 
      n8, 0, 1 + n10, 1, 0, 1, n14])/(-1 + n6) + 
   j[p4, 0, 0, n3, 0, n5, -1 + n6, 2, n8, 0, 1 + n10, 0, 0, 1, n14]/
    (-1 + n6) + j[p4, 0, 0, n3, 0, n5, n6, 1, n8, -1, 1 + n10, 1, 0, 1, 
    n14] + j[p4, 0, 0, 1 + n3, 0, -1 + n5, n6, 1, n8, 0, n10, 1, 0, 1, n14] - 
   (n10*j[p4, 0, 0, 1 + n3, 0, n5, -1 + n6, 0, n8, 0, 1 + n10, 1, 0, 1, n14])/
    (-1 + n6) + ((-n10 + n3)*j[p4, 0, 0, 1 + n3, 0, n5, -1 + n6, 1, -1 + n8, 
      0, 1 + n10, 1, 0, 1, n14])/(-1 + n6) + 
   ((-1 - d + 2*n14 + n5 + n6)*j[p4, 0, 0, 1 + n3, 0, n5, -1 + n6, 1, n8, 0, 
      n10, 1, 0, 1, n14])/(-1 + n6) + 
   (n3*j[p4, 0, 0, 1 + n3, 0, n5, -1 + n6, 1, n8, 0, 1 + n10, 0, 0, 1, n14])/
    (-1 + n6) + ((n10 - n3)*j[p4, 0, 0, 1 + n3, 0, n5, -1 + n6, 1, n8, 0, 
      1 + n10, 1, -1, 1, n14])/(-1 + n6) + 
   ((-n10 + n3)*j[p4, 0, 0, 1 + n3, 0, n5, -1 + n6, 1, n8, 0, 1 + n10, 1, 0, 
      0, n14])/(-1 + n6) + ((-n10 + n3)*j[p4, 0, 0, 1 + n3, 0, n5, -1 + n6, 
      1, n8, 0, 1 + n10, 1, 0, 1, n14])/(-1 + n6) + 
   j[p4, 0, 0, 1 + n3, 0, n5, -1 + n6, 2, n8, 0, n10, 1, 0, 0, n14]/
    (1 - n6) - (n5*j[p4, 0, 0, 1 + n3, 0, 1 + n5, -1 + n6, 1, n8, 0, n10, 1, 
      0, 0, n14])/(-1 + n6) + (n5*j[p4, 0, 0, 1 + n3, 0, 1 + n5, -1 + n6, 1, 
      n8, 0, n10, 1, 0, 1, -1 + n14])/(-1 + n6) + 
   ((-1 - n3)*j[p4, 0, 0, 2 + n3, 0, n5, -1 + n6, 0, n8, 0, n10, 1, 0, 1, 
      n14])/(-1 + n6) + ((1 + n3)*j[p4, 0, 0, 2 + n3, 0, n5, -1 + n6, 1, n8, 
      0, n10, 1, 0, 0, n14])/(-1 + n6), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n4 == 0 && n7 == 1 &&  !(n10 == 0 || n3 == 0 || n6 == 1) -> 
  ((n10 - n3)*j[p4, -1, 0, 1 + n3, 0, n5, -1 + n6, 1, n8, n9, 1 + n10, 1, 0, 
      1, 1])/(-1 + n6) - j[p4, 0, -1, 1 + n3, 0, n5, n6, 1, n8, n9, n10, 1, 
    0, 1, 1] + ((-2 + d - n10 - n3 - n6)*j[p4, 0, 0, n3, 0, n5, -1 + n6, 1, 
      n8, n9, 1 + n10, 1, 0, 1, 1])/(-1 + n6) + 
   j[p4, 0, 0, n3, 0, n5, -1 + n6, 2, n8, n9, 1 + n10, 0, 0, 1, 1]/
    (-1 + n6) + j[p4, 0, 0, n3, 0, n5, n6, 1, n8, -1 + n9, 1 + n10, 1, 0, 1, 
    1] + j[p4, 0, 0, 1 + n3, 0, -1 + n5, n6, 1, n8, n9, n10, 1, 0, 1, 1] - 
   (n10*j[p4, 0, 0, 1 + n3, 0, n5, -1 + n6, 0, n8, n9, 1 + n10, 1, 0, 1, 1])/
    (-1 + n6) + ((-n10 + n3)*j[p4, 0, 0, 1 + n3, 0, n5, -1 + n6, 1, -1 + n8, 
      n9, 1 + n10, 1, 0, 1, 1])/(-1 + n6) + 
   ((1 - d + n5 + n6 + n9)*j[p4, 0, 0, 1 + n3, 0, n5, -1 + n6, 1, n8, n9, 
      n10, 1, 0, 1, 1])/(-1 + n6) + 
   (n3*j[p4, 0, 0, 1 + n3, 0, n5, -1 + n6, 1, n8, n9, 1 + n10, 0, 0, 1, 1])/
    (-1 + n6) + ((n10 - n3)*j[p4, 0, 0, 1 + n3, 0, n5, -1 + n6, 1, n8, n9, 
      1 + n10, 1, -1, 1, 1])/(-1 + n6) + 
   ((-n10 + n3)*j[p4, 0, 0, 1 + n3, 0, n5, -1 + n6, 1, n8, n9, 1 + n10, 1, 0, 
      0, 1])/(-1 + n6) + ((-n10 + n3)*j[p4, 0, 0, 1 + n3, 0, n5, -1 + n6, 1, 
      n8, n9, 1 + n10, 1, 0, 1, 1])/(-1 + n6) + 
   (n9*j[p4, 0, 0, 1 + n3, 0, n5, -1 + n6, 1, n8, 1 + n9, n10, 1, 0, 1, 0])/
    (-1 + n6) - (n9*j[p4, 0, 0, 1 + n3, 0, n5, -1 + n6, 1, n8, 1 + n9, n10, 
      1, 0, 1, 1])/(-1 + n6) + j[p4, 0, 0, 1 + n3, 0, n5, -1 + n6, 2, n8, n9, 
     n10, 1, 0, 0, 1]/(1 - n6) - 
   (n5*j[p4, 0, 0, 1 + n3, 0, 1 + n5, -1 + n6, 1, n8, n9, n10, 1, 0, 0, 1])/
    (-1 + n6) + (n5*j[p4, 0, 0, 1 + n3, 0, 1 + n5, -1 + n6, 1, n8, n9, n10, 
      1, 0, 1, 0])/(-1 + n6) + 
   ((-1 - n3)*j[p4, 0, 0, 2 + n3, 0, n5, -1 + n6, 0, n8, n9, n10, 1, 0, 1, 
      1])/(-1 + n6) + ((1 + n3)*j[p4, 0, 0, 2 + n3, 0, n5, -1 + n6, 1, n8, 
      n9, n10, 1, 0, 0, 1])/(-1 + n6), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n11 == 1 && n12 == 0 && n13 == 1 && n2 == 0 && n4 == 0 && n7 == 1 && 
    n8 == 1 && n9 == 0 &&  !(n10 == 0 || n3 == 0 || n6 == 1) -> 
  ((n10 - n3)*j[p4, -1 + n1, 0, 1 + n3, 0, n5, -1 + n6, 1, 1, 0, 1 + n10, 1, 
      0, 1, n14])/(-1 + n6) - j[p4, n1, -1, 1 + n3, 0, n5, n6, 1, 1, 0, n10, 
    1, 0, 1, n14] + ((-2 + d - n10 - n3 - n6)*j[p4, n1, 0, n3, 0, n5, 
      -1 + n6, 1, 1, 0, 1 + n10, 1, 0, 1, n14])/(-1 + n6) + 
   j[p4, n1, 0, n3, 0, n5, -1 + n6, 2, 1, 0, 1 + n10, 0, 0, 1, n14]/
    (-1 + n6) + j[p4, n1, 0, n3, 0, n5, n6, 1, 1, -1, 1 + n10, 1, 0, 1, 
    n14] + j[p4, n1, 0, 1 + n3, 0, -1 + n5, n6, 1, 1, 0, n10, 1, 0, 1, n14] - 
   (n10*j[p4, n1, 0, 1 + n3, 0, n5, -1 + n6, 0, 1, 0, 1 + n10, 1, 0, 1, n14])/
    (-1 + n6) + ((-n10 + n3)*j[p4, n1, 0, 1 + n3, 0, n5, -1 + n6, 1, 0, 0, 
      1 + n10, 1, 0, 1, n14])/(-1 + n6) + 
   ((-1 - d + 2*n14 + n5 + n6)*j[p4, n1, 0, 1 + n3, 0, n5, -1 + n6, 1, 1, 0, 
      n10, 1, 0, 1, n14])/(-1 + n6) + 
   (n3*j[p4, n1, 0, 1 + n3, 0, n5, -1 + n6, 1, 1, 0, 1 + n10, 0, 0, 1, n14])/
    (-1 + n6) + ((n10 - n3)*j[p4, n1, 0, 1 + n3, 0, n5, -1 + n6, 1, 1, 0, 
      1 + n10, 1, -1, 1, n14])/(-1 + n6) + 
   ((-n10 + n3)*j[p4, n1, 0, 1 + n3, 0, n5, -1 + n6, 1, 1, 0, 1 + n10, 1, 0, 
      0, n14])/(-1 + n6) + ((-n10 + n3)*j[p4, n1, 0, 1 + n3, 0, n5, -1 + n6, 
      1, 1, 0, 1 + n10, 1, 0, 1, n14])/(-1 + n6) + 
   j[p4, n1, 0, 1 + n3, 0, n5, -1 + n6, 2, 1, 0, n10, 1, 0, 0, n14]/
    (1 - n6) - (n5*j[p4, n1, 0, 1 + n3, 0, 1 + n5, -1 + n6, 1, 1, 0, n10, 1, 
      0, 0, n14])/(-1 + n6) + (n5*j[p4, n1, 0, 1 + n3, 0, 1 + n5, -1 + n6, 1, 
      1, 0, n10, 1, 0, 1, -1 + n14])/(-1 + n6) + 
   ((-1 - n3)*j[p4, n1, 0, 2 + n3, 0, n5, -1 + n6, 0, 1, 0, n10, 1, 0, 1, 
      n14])/(-1 + n6) + ((1 + n3)*j[p4, n1, 0, 2 + n3, 0, n5, -1 + n6, 1, 1, 
      0, n10, 1, 0, 0, n14])/(-1 + n6), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && n4 == 0 && 
    n7 == 1 && n8 == 1 &&  !(n10 == 0 || n3 == 0 || n6 == 1) -> 
  ((n10 - n3)*j[p4, -1 + n1, 0, 1 + n3, 0, n5, -1 + n6, 1, 1, n9, 1 + n10, 1, 
      0, 1, 1])/(-1 + n6) - j[p4, n1, -1, 1 + n3, 0, n5, n6, 1, 1, n9, n10, 
    1, 0, 1, 1] + ((-2 + d - n10 - n3 - n6)*j[p4, n1, 0, n3, 0, n5, -1 + n6, 
      1, 1, n9, 1 + n10, 1, 0, 1, 1])/(-1 + n6) + 
   j[p4, n1, 0, n3, 0, n5, -1 + n6, 2, 1, n9, 1 + n10, 0, 0, 1, 1]/
    (-1 + n6) + j[p4, n1, 0, n3, 0, n5, n6, 1, 1, -1 + n9, 1 + n10, 1, 0, 1, 
    1] + j[p4, n1, 0, 1 + n3, 0, -1 + n5, n6, 1, 1, n9, n10, 1, 0, 1, 1] - 
   (n10*j[p4, n1, 0, 1 + n3, 0, n5, -1 + n6, 0, 1, n9, 1 + n10, 1, 0, 1, 1])/
    (-1 + n6) + ((-n10 + n3)*j[p4, n1, 0, 1 + n3, 0, n5, -1 + n6, 1, 0, n9, 
      1 + n10, 1, 0, 1, 1])/(-1 + n6) + 
   ((1 - d + n5 + n6 + n9)*j[p4, n1, 0, 1 + n3, 0, n5, -1 + n6, 1, 1, n9, 
      n10, 1, 0, 1, 1])/(-1 + n6) + 
   (n3*j[p4, n1, 0, 1 + n3, 0, n5, -1 + n6, 1, 1, n9, 1 + n10, 0, 0, 1, 1])/
    (-1 + n6) + ((n10 - n3)*j[p4, n1, 0, 1 + n3, 0, n5, -1 + n6, 1, 1, n9, 
      1 + n10, 1, -1, 1, 1])/(-1 + n6) + 
   ((-n10 + n3)*j[p4, n1, 0, 1 + n3, 0, n5, -1 + n6, 1, 1, n9, 1 + n10, 1, 0, 
      0, 1])/(-1 + n6) + ((-n10 + n3)*j[p4, n1, 0, 1 + n3, 0, n5, -1 + n6, 1, 
      1, n9, 1 + n10, 1, 0, 1, 1])/(-1 + n6) + 
   (n9*j[p4, n1, 0, 1 + n3, 0, n5, -1 + n6, 1, 1, 1 + n9, n10, 1, 0, 1, 0])/
    (-1 + n6) - (n9*j[p4, n1, 0, 1 + n3, 0, n5, -1 + n6, 1, 1, 1 + n9, n10, 
      1, 0, 1, 1])/(-1 + n6) + j[p4, n1, 0, 1 + n3, 0, n5, -1 + n6, 2, 1, n9, 
     n10, 1, 0, 0, 1]/(1 - n6) - 
   (n5*j[p4, n1, 0, 1 + n3, 0, 1 + n5, -1 + n6, 1, 1, n9, n10, 1, 0, 0, 1])/
    (-1 + n6) + (n5*j[p4, n1, 0, 1 + n3, 0, 1 + n5, -1 + n6, 1, 1, n9, n10, 
      1, 0, 1, 0])/(-1 + n6) + 
   ((-1 - n3)*j[p4, n1, 0, 2 + n3, 0, n5, -1 + n6, 0, 1, n9, n10, 1, 0, 1, 
      1])/(-1 + n6) + ((1 + n3)*j[p4, n1, 0, 2 + n3, 0, n5, -1 + n6, 1, 1, 
      n9, n10, 1, 0, 0, 1])/(-1 + n6), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 0 && n12 == 0 && n3 == 0 && n4 == 0 && n6 == 1 && 
    n7 == 1 && n9 == 0 &&  !(n13 == 1 || n14 == 1 || n2 == 0) -> 
  -((n8*j[p4, 0, n2, 0, 0, n5, 1, 1, 1 + n8, 0, 0, n11, 0, -1 + n13, n14])/
     (-1 + n13)) + j[p4, 0, n2, 0, 0, n5, 2, 1, n8, 0, 0, n11, 0, n13, 
     -1 + n14]/(-1 + n14) - (n5*j[p4, 0, n2, 0, 0, 1 + n5, 1, 1, n8, 0, 0, 
      n11, 0, -1 + n13, n14])/(-1 + n13) - 
   (n5*j[p4, 0, n2, 0, 0, 1 + n5, 1, 1, n8, 0, 0, n11, 0, n13, -1 + n14])/
    (-1 + n14) + j[p4, 0, 1 + n2, -1, 0, n5, 2, 1, n8, 0, 0, n11, 0, n13, 
     -1 + n14]/(-1 + n14) + j[p4, 0, 1 + n2, 0, 0, n5, 0, 1, n8, 0, 0, n11, 
    0, n13, n14] + (n8*j[p4, 0, 1 + n2, 0, 0, n5, 1, 0, 1 + n8, 0, 0, n11, 0, 
      -1 + n13, n14])/(-1 + n13) + 
   ((-3 + n13 - 2*n2)*j[p4, 0, 1 + n2, 0, 0, n5, 1, 1, n8, 0, 0, n11, 0, 
      -1 + n13, n14])/(-1 + n13) + 
   ((2 - n14)*j[p4, 0, 1 + n2, 0, 0, n5, 1, 1, n8, 0, 0, n11, 0, n13, 
      -1 + n14])/(-1 + n14) - (n8*j[p4, 0, 1 + n2, 0, 0, n5, 1, 1, 1 + n8, 0, 
      0, n11, -1, -1 + n13, n14])/(-1 + n13) + 
   (n8*j[p4, 0, 1 + n2, 0, 0, n5, 1, 1, 1 + n8, 0, 0, n11, 0, -2 + n13, n14])/
    (-1 + n13) + j[p4, 0, 1 + n2, 0, 0, n5, 2, 0, n8, 0, 0, n11, 0, n13, 
     -1 + n14]/(1 - n14) + j[p4, 0, 1 + n2, 0, 0, n5, 2, 1, -1 + n8, 0, 0, 
     n11, 0, n13, -1 + n14]/(1 - n14) + 
   j[p4, 0, 1 + n2, 0, 0, n5, 2, 1, n8, 0, 0, n11, -1, n13, -1 + n14]/
    (-1 + n14) + j[p4, 0, 1 + n2, 0, 0, n5, 2, 1, n8, 0, 0, n11, 0, -1 + n13, 
     -1 + n14]/(1 - n14) + j[p4, 0, 1 + n2, 0, 0, n5, 2, 1, n8, 0, 0, n11, 0, 
     n13, -2 + n14]/(1 - n14) + 
   (n5*j[p4, 0, 1 + n2, 0, 0, 1 + n5, 0, 1, n8, 0, 0, n11, 0, -1 + n13, n14])/
    (-1 + n13) + (n5*j[p4, 0, 1 + n2, 0, 0, 1 + n5, 0, 1, n8, 0, 0, n11, 0, 
      n13, -1 + n14])/(-1 + n14) + 
   (n5*j[p4, 0, 1 + n2, 0, 0, 1 + n5, 1, 1, n8, 0, 0, n11, 0, -2 + n13, n14])/
    (-1 + n13) + ((n13*n5 - n14*n5)*j[p4, 0, 1 + n2, 0, 0, 1 + n5, 1, 1, n8, 
      0, 0, n11, 0, -1 + n13, -1 + n14])/((-1 + n13)*(-1 + n14)) - 
   (n5*j[p4, 0, 1 + n2, 0, 0, 1 + n5, 1, 1, n8, 0, 0, n11, 0, n13, -2 + n14])/
    (-1 + n14) + ((-1 - n2)*j[p4, 0, 2 + n2, -1, 0, n5, 1, 1, n8, 0, 0, n11, 
      0, -1 + n13, n14])/(-1 + n13) + 
   ((1 + n2)*j[p4, 0, 2 + n2, 0, 0, n5, 1, 0, n8, 0, 0, n11, 0, -1 + n13, 
      n14])/(-1 + n13) + ((1 + n2)*j[p4, 0, 2 + n2, 0, 0, n5, 1, 1, -1 + n8, 
      0, 0, n11, 0, -1 + n13, n14])/(-1 + n13) + 
   ((-1 - n2)*j[p4, 0, 2 + n2, 0, 0, n5, 1, 1, n8, 0, 0, n11, -1, -1 + n13, 
      n14])/(-1 + n13) + ((2 + 2*n2)*j[p4, 0, 2 + n2, 0, 0, n5, 1, 1, n8, 0, 
      0, n11, 0, -2 + n13, n14])/(-1 + n13), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 0 && n12 == 0 && n13 == 1 && n4 == 0 && n6 == 1 && 
    n7 == 1 && n9 == 0 &&  !(n14 == 1 || n3 == 0) -> 
  -j[p4, 0, -1 + n2, 1 + n3, 0, n5, 1, 1, n8, 0, 0, n11, 0, 1, n14] + 
   j[p4, 0, -1 + n2, 1 + n3, 0, 1 + n5, 1, 1, n8, 0, 0, n11, 0, 0, n14] + 
   ((-2 + n14 - n5)*j[p4, 0, -1 + n2, 1 + n3, 0, 1 + n5, 1, 1, n8, 0, 0, n11, 
      0, 1, -1 + n14])/(-1 + n14) + j[p4, 0, -1 + n2, 1 + n3, 0, 1 + n5, 1, 
     2, n8, 0, 0, n11, 0, 0, -1 + n14]/(1 - n14) + 
   ((-1 - n5)*j[p4, 0, -1 + n2, 1 + n3, 0, 2 + n5, 1, 1, n8, 0, 0, n11, 0, 0, 
      -1 + n14])/(-1 + n14) + ((1 + n5)*j[p4, 0, -1 + n2, 1 + n3, 0, 2 + n5, 
      1, 1, n8, 0, 0, n11, 0, 1, -2 + n14])/(-1 + n14) + 
   ((-1 - n3)*j[p4, 0, -1 + n2, 2 + n3, 0, 1 + n5, 1, 0, n8, 0, 0, n11, 0, 1, 
      -1 + n14])/(-1 + n14) + ((1 + n3)*j[p4, 0, -1 + n2, 2 + n3, 0, 1 + n5, 
      1, 1, n8, 0, 0, n11, 0, 0, -1 + n14])/(-1 + n14) + 
   j[p4, 0, n2, n3, 0, 1 + n5, 1, 1, n8, 0, 0, n11, 0, 0, n14] + 
   ((-5 + 2*d - n14 - n2 - n3 - 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, 1, n8, 
      0, 0, n11, 0, 1, -1 + n14])/(-1 + n14) + 
   j[p4, 0, n2, n3, 0, 1 + n5, 1, 2, -1 + n8, 0, 0, n11, 0, 1, -1 + n14]/
    (-1 + n14) + ((1 - n2)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, 0, n8, 0, 0, 
      n11, 0, 1, -1 + n14])/(-1 + n14) + 
   ((1 - n2 + 2*n3)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, 1, -1 + n8, 0, 0, n11, 
      0, 1, -1 + n14])/(-1 + n14) + 
   ((-1 + n2 - n3)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, 1, n8, 0, 0, n11, -1, 
      1, -1 + n14])/(-1 + n14) + 
   ((2 - 2*n2 + 2*n3)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, 1, n8, 0, 0, n11, 0, 
      0, -1 + n14])/(-1 + n14), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n11 == 1 && n12 == 0 && n3 == 0 && n4 == 0 && n6 == 1 && 
    n7 == 1 && n9 == 0 &&  !(n13 == 1 || n14 == 1 || n2 == 0) -> 
  -((n8*j[p4, 0, n2, 0, 0, n5, 1, 1, 1 + n8, 0, n10, 1, 0, -1 + n13, n14])/
     (-1 + n13)) + j[p4, 0, n2, 0, 0, n5, 2, 1, n8, 0, n10, 1, 0, n13, 
     -1 + n14]/(-1 + n14) - (n5*j[p4, 0, n2, 0, 0, 1 + n5, 1, 1, n8, 0, n10, 
      1, 0, -1 + n13, n14])/(-1 + n13) - 
   (n5*j[p4, 0, n2, 0, 0, 1 + n5, 1, 1, n8, 0, n10, 1, 0, n13, -1 + n14])/
    (-1 + n14) + j[p4, 0, 1 + n2, -1, 0, n5, 2, 1, n8, 0, n10, 1, 0, n13, 
     -1 + n14]/(-1 + n14) + j[p4, 0, 1 + n2, 0, 0, n5, 0, 1, n8, 0, n10, 1, 
    0, n13, n14] + (n8*j[p4, 0, 1 + n2, 0, 0, n5, 1, 0, 1 + n8, 0, n10, 1, 0, 
      -1 + n13, n14])/(-1 + n13) + 
   ((-3 + n13 - 2*n2)*j[p4, 0, 1 + n2, 0, 0, n5, 1, 1, n8, 0, n10, 1, 0, 
      -1 + n13, n14])/(-1 + n13) + 
   ((2 - n14)*j[p4, 0, 1 + n2, 0, 0, n5, 1, 1, n8, 0, n10, 1, 0, n13, 
      -1 + n14])/(-1 + n14) - (n8*j[p4, 0, 1 + n2, 0, 0, n5, 1, 1, 1 + n8, 0, 
      n10, 1, -1, -1 + n13, n14])/(-1 + n13) + 
   (n8*j[p4, 0, 1 + n2, 0, 0, n5, 1, 1, 1 + n8, 0, n10, 1, 0, -2 + n13, n14])/
    (-1 + n13) + j[p4, 0, 1 + n2, 0, 0, n5, 2, 0, n8, 0, n10, 1, 0, n13, 
     -1 + n14]/(1 - n14) + j[p4, 0, 1 + n2, 0, 0, n5, 2, 1, -1 + n8, 0, n10, 
     1, 0, n13, -1 + n14]/(1 - n14) + j[p4, 0, 1 + n2, 0, 0, n5, 2, 1, n8, 0, 
     n10, 1, -1, n13, -1 + n14]/(-1 + n14) + 
   j[p4, 0, 1 + n2, 0, 0, n5, 2, 1, n8, 0, n10, 1, 0, -1 + n13, -1 + n14]/
    (1 - n14) + j[p4, 0, 1 + n2, 0, 0, n5, 2, 1, n8, 0, n10, 1, 0, n13, 
     -2 + n14]/(1 - n14) + (n5*j[p4, 0, 1 + n2, 0, 0, 1 + n5, 0, 1, n8, 0, 
      n10, 1, 0, -1 + n13, n14])/(-1 + n13) + 
   (n5*j[p4, 0, 1 + n2, 0, 0, 1 + n5, 0, 1, n8, 0, n10, 1, 0, n13, -1 + n14])/
    (-1 + n14) + (n5*j[p4, 0, 1 + n2, 0, 0, 1 + n5, 1, 1, n8, 0, n10, 1, 0, 
      -2 + n13, n14])/(-1 + n13) + 
   ((n13*n5 - n14*n5)*j[p4, 0, 1 + n2, 0, 0, 1 + n5, 1, 1, n8, 0, n10, 1, 0, 
      -1 + n13, -1 + n14])/((-1 + n13)*(-1 + n14)) - 
   (n5*j[p4, 0, 1 + n2, 0, 0, 1 + n5, 1, 1, n8, 0, n10, 1, 0, n13, -2 + n14])/
    (-1 + n14) + ((-1 - n2)*j[p4, 0, 2 + n2, -1, 0, n5, 1, 1, n8, 0, n10, 1, 
      0, -1 + n13, n14])/(-1 + n13) + 
   ((1 + n2)*j[p4, 0, 2 + n2, 0, 0, n5, 1, 0, n8, 0, n10, 1, 0, -1 + n13, 
      n14])/(-1 + n13) + ((1 + n2)*j[p4, 0, 2 + n2, 0, 0, n5, 1, 1, -1 + n8, 
      0, n10, 1, 0, -1 + n13, n14])/(-1 + n13) + 
   ((-1 - n2)*j[p4, 0, 2 + n2, 0, 0, n5, 1, 1, n8, 0, n10, 1, -1, -1 + n13, 
      n14])/(-1 + n13) + ((2 + 2*n2)*j[p4, 0, 2 + n2, 0, 0, n5, 1, 1, n8, 0, 
      n10, 1, 0, -2 + n13, n14])/(-1 + n13), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n11 == 1 && n12 == 0 && n14 == 1 && n3 == 0 && n4 == 0 && 
    n6 == 1 && n7 == 1 && n13 != 1 -> 
  ((2*n8 - d*n8 + 2*n2*n8 + 2*n8^2)*j[p4, 0, n2, 0, 0, n5, 1, 1, 1 + n8, n9, 
      n10, 1, 0, -1 + n13, 1])/((-1 + n13)*(-d + 2*n13 + 2*n5)) - 
   (n5*j[p4, 0, n2, 0, 0, 1 + n5, 1, 1, n8, n9, n10, 1, 0, -1 + n13, 1])/
    (-1 + n13) - (2*n5*j[p4, 0, n2, 0, 0, 1 + n5, 1, 1, n8, n9, n10, 1, 0, 
      n13, 0])/(d - 2*n13 - 2*n5) - 
   (2*n2*n8*j[p4, 0, 1 + n2, 0, 0, n5, 1, 0, 1 + n8, n9, n10, 1, 0, -1 + n13, 
      1])/((-1 + n13)*(-d + 2*n13 + 2*n5)) + 
   ((4*n2 - 2*n13*n2 + 2*n2^2 - n2*n5 + n2*n8)*j[p4, 0, 1 + n2, 0, 0, n5, 1, 
      1, n8, n9, n10, 1, 0, -1 + n13, 1])/((-1 + n13)*(-d + 2*n13 + 2*n5)) + 
   (n2*n8*j[p4, 0, 1 + n2, 0, 0, n5, 1, 1, 1 + n8, n9, n10, 1, -1, -1 + n13, 
      1])/((-1 + n13)*(-d + 2*n13 + 2*n5)) - 
   (n2*n8*j[p4, 0, 1 + n2, 0, 0, n5, 1, 1, 1 + n8, n9, n10, 1, 0, -2 + n13, 
      1])/((-1 + n13)*(-d + 2*n13 + 2*n5)) - 
   (n2*n5*j[p4, 0, 1 + n2, 0, 0, 1 + n5, 1, 1, n8, n9, n10, 1, 0, -2 + n13, 
      1])/((-1 + n13)*(-d + 2*n13 + 2*n5)) + 
   (n2*n5*j[p4, 0, 1 + n2, 0, 0, 1 + n5, 1, 1, n8, n9, n10, 1, 0, -1 + n13, 
      0])/((-1 + n13)*(-d + 2*n13 + 2*n5)) + 
   ((n2 + n2^2)*j[p4, 0, 2 + n2, -1, 0, n5, 1, 1, n8, n9, n10, 1, 0, 
      -1 + n13, 1])/((-1 + n13)*(-d + 2*n13 + 2*n5)) + 
   ((-n2 - n2^2)*j[p4, 0, 2 + n2, 0, 0, n5, 1, 0, n8, n9, n10, 1, 0, 
      -1 + n13, 1])/((-1 + n13)*(-d + 2*n13 + 2*n5)) + 
   ((-n2 - n2^2)*j[p4, 0, 2 + n2, 0, 0, n5, 1, 1, -1 + n8, n9, n10, 1, 0, 
      -1 + n13, 1])/((-1 + n13)*(-d + 2*n13 + 2*n5)) + 
   ((n2 + n2^2)*j[p4, 0, 2 + n2, 0, 0, n5, 1, 1, n8, n9, n10, 1, -1, 
      -1 + n13, 1])/((-1 + n13)*(-d + 2*n13 + 2*n5)) + 
   ((-2*n2 - 2*n2^2)*j[p4, 0, 2 + n2, 0, 0, n5, 1, 1, n8, n9, n10, 1, 0, 
      -2 + n13, 1])/((-1 + n13)*(-d + 2*n13 + 2*n5)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n4 == 0 && n6 == 1 && 
    n7 == 1 && n9 == 0 &&  !(n14 == 1 || n3 == 0) -> 
  (n10*j[p4, -1, -1 + n2, 1 + n3, 0, 1 + n5, 1, 1, n8, 0, 1 + n10, 1, 0, 1, 
      -1 + n14])/(-1 + n14) + (n10*j[p4, -1, n2, n3, 0, 1 + n5, 1, 1, n8, 0, 
      1 + n10, 1, 0, 1, -1 + n14])/(-1 + n14) - j[p4, 0, -1 + n2, 1 + n3, 0, 
    n5, 1, 1, n8, 0, n10, 1, 0, 1, n14] - 
   (n10*j[p4, 0, -1 + n2, 1 + n3, 0, 1 + n5, 1, 0, n8, 0, 1 + n10, 1, 0, 1, 
      -1 + n14])/(-1 + n14) - (n10*j[p4, 0, -1 + n2, 1 + n3, 0, 1 + n5, 1, 1, 
      -1 + n8, 0, 1 + n10, 1, 0, 1, -1 + n14])/(-1 + n14) + 
   j[p4, 0, -1 + n2, 1 + n3, 0, 1 + n5, 1, 1, n8, 0, n10, 1, 0, 0, n14] + 
   ((-2 + n14 - n5)*j[p4, 0, -1 + n2, 1 + n3, 0, 1 + n5, 1, 1, n8, 0, n10, 1, 
      0, 1, -1 + n14])/(-1 + n14) + 
   (n10*j[p4, 0, -1 + n2, 1 + n3, 0, 1 + n5, 1, 1, n8, 0, 1 + n10, 1, -1, 1, 
      -1 + n14])/(-1 + n14) - (n10*j[p4, 0, -1 + n2, 1 + n3, 0, 1 + n5, 1, 1, 
      n8, 0, 1 + n10, 1, 0, 0, -1 + n14])/(-1 + n14) - 
   (n10*j[p4, 0, -1 + n2, 1 + n3, 0, 1 + n5, 1, 1, n8, 0, 1 + n10, 1, 0, 1, 
      -1 + n14])/(-1 + n14) + j[p4, 0, -1 + n2, 1 + n3, 0, 1 + n5, 1, 2, n8, 
     0, n10, 1, 0, 0, -1 + n14]/(1 - n14) + 
   ((-1 - n5)*j[p4, 0, -1 + n2, 1 + n3, 0, 2 + n5, 1, 1, n8, 0, n10, 1, 0, 0, 
      -1 + n14])/(-1 + n14) + ((1 + n5)*j[p4, 0, -1 + n2, 1 + n3, 0, 2 + n5, 
      1, 1, n8, 0, n10, 1, 0, 1, -2 + n14])/(-1 + n14) + 
   ((-1 - n3)*j[p4, 0, -1 + n2, 2 + n3, 0, 1 + n5, 1, 0, n8, 0, n10, 1, 0, 1, 
      -1 + n14])/(-1 + n14) + ((1 + n3)*j[p4, 0, -1 + n2, 2 + n3, 0, 1 + n5, 
      1, 1, n8, 0, n10, 1, 0, 0, -1 + n14])/(-1 + n14) + 
   j[p4, 0, n2, n3, 0, 1 + n5, 1, 1, n8, 0, n10, 1, 0, 0, n14] + 
   ((-5 + 2*d - n10 - n14 - n2 - n3 - 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, 1, 
      n8, 0, n10, 1, 0, 1, -1 + n14])/(-1 + n14) + 
   j[p4, 0, n2, n3, 0, 1 + n5, 1, 2, -1 + n8, 0, n10, 1, 0, 1, -1 + n14]/
    (-1 + n14) + ((1 - n2)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, 0, n8, 0, n10, 
      1, 0, 1, -1 + n14])/(-1 + n14) + 
   ((1 - n2 + 2*n3)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, 1, -1 + n8, 0, n10, 1, 
      0, 1, -1 + n14])/(-1 + n14) + 
   ((-1 + n2 - n3)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, 1, n8, 0, n10, 1, -1, 
      1, -1 + n14])/(-1 + n14) + 
   ((2 - 2*n2 + 2*n3)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, 1, n8, 0, n10, 1, 0, 
      0, -1 + n14])/(-1 + n14), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n4 == 0 && 
    n6 == 1 && n7 == 1 &&  !(n3 == 0 || n8 == 1) -> 
  ((4 - d + 2*n3 + 2*n5)*j[p4, 0, -1 + n2, 1 + n3, 0, n5, 1, 1, n8, n9, n10, 
      1, 0, 1, 1])/(-d + 2*n2 + 2*n8) + 
   ((-4*n5 + d*n5 - 2*n5^2)*j[p4, 0, n2, n3, 0, 1 + n5, 1, 1, -1 + n8, n9, 
      n10, 1, 0, 1, 1])/((d - 2*n2 - 2*n8)*(-1 + n8)) - 
   (2*n5*j[p4, 0, n2, n3, 0, 1 + n5, 1, 1, -1 + n8, n9, n10, 1, 0, 2, 0])/
    ((-1 + n8)*(-d + 2*n2 + 2*n8)) + 
   ((4*n5 - d*n5 + 2*n5^2)*j[p4, 0, n2, 1 + n3, -1, 1 + n5, 1, 1, -1 + n8, 
      n9, n10, 1, 0, 1, 1])/((d - 2*n2 - 2*n8)*(-1 + n8)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, 1 + n3, 0, n5, 1, 0, -1 + n8, n9, n10, 1, 0, 
      2, 1])/((d - 2*n2 - 2*n8)*(-1 + n8)) + 
   ((-4 + d - 2*n3 - 2*n5)*j[p4, 0, n2, 1 + n3, 0, n5, 1, 0, n8, n9, n10, 1, 
      0, 1, 1])/(-d + 2*n2 + 2*n8) + 
   ((4 - d + 4*n2 - d*n2 + 2*n3 + 2*n2*n3 + 6*n5 - d*n5 + 2*n2*n5 + 2*n5^2 - 
      4*n8 + d*n8 - 2*n3*n8 - 2*n5*n8)*j[p4, 0, n2, 1 + n3, 0, n5, 1, 1, 
      -1 + n8, n9, n10, 1, 0, 1, 1])/((-1 + n8)*(-d + 2*n2 + 2*n8)) + 
   ((-4*n5 + d*n5 - 2*n5^2)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, 0, -1 + n8, 
      n9, n10, 1, 0, 1, 1])/((d - 2*n2 - 2*n8)*(-1 + n8)) + 
   (2*n3*n5*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, 1, -1 + n8, n9, n10, 1, 0, 0, 
      1])/((-1 + n8)*(-d + 2*n2 + 2*n8)) - 
   (2*n3*n5*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, 1, -1 + n8, n9, n10, 1, 0, 1, 
      0])/((-1 + n8)*(-d + 2*n2 + 2*n8)) + 
   ((4 - d + 6*n3 - d*n3 + 2*n3^2 + 2*n5 + 2*n3*n5)*
     j[p4, 0, n2, 2 + n3, 0, n5, 1, 0, -1 + n8, n9, n10, 1, 0, 1, 1])/
    ((d - 2*n2 - 2*n8)*(-1 + n8)) + 
   ((-4 + d - 6*n3 + d*n3 - 2*n3^2 - 2*n5 - 2*n3*n5)*
     j[p4, 0, n2, 2 + n3, 0, n5, 1, 1, -1 + n8, n9, n10, 1, 0, 0, 1])/
    ((d - 2*n2 - 2*n8)*(-1 + n8)) + 
   (2*n2*j[p4, 0, 1 + n2, n3, 0, n5, 1, 0, n8, n9, n10, 1, 0, 1, 1])/
    (-d + 2*n2 + 2*n8) - (n2*j[p4, 0, 1 + n2, n3, 0, n5, 1, 1, -1 + n8, n9, 
      n10, 1, 0, 1, 1])/(-1 + n8) + ((4*n2 - d*n2 + 2*n2*n3 + 2*n2*n5)*
     j[p4, 0, 1 + n2, 1 + n3, 0, n5, 1, 0, -1 + n8, n9, n10, 1, 0, 1, 1])/
    ((-1 + n8)*(-d + 2*n2 + 2*n8)) + ((-4*n2 + d*n2 - 2*n2*n3 - 2*n2*n5)*
     j[p4, 0, 1 + n2, 1 + n3, 0, n5, 1, 1, -2 + n8, n9, n10, 1, 0, 1, 1])/
    ((-1 + n8)*(-d + 2*n2 + 2*n8)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n11 == 1 && n12 == 0 && n14 == 1 && n3 == 0 && n6 == 1 && 
    n7 == 1 && n8 == 1 && n13 != 1 -> 
  (n4*j[p4, 0, n2, -1, 1 + n4, n5, 1, 1, 1, n9, n10, 1, 0, n13, 1])/
    (d - 2*n13 - 2*n5) + ((4 - d + 2*n2 + n4)*j[p4, 0, n2, 0, n4, n5, 1, 1, 
      2, n9, n10, 1, 0, -1 + n13, 1])/((-1 + n13)*(-d + 2*n13 + 2*n5)) + 
   ((d*n5 - 2*n13*n5 - n4*n5 - 2*n5^2)*j[p4, 0, n2, 0, n4, 1 + n5, 1, 1, 1, 
      n9, n10, 1, 0, -1 + n13, 1])/((-1 + n13)*(-d + 2*n13 + 2*n5)) - 
   (2*n5*j[p4, 0, n2, 0, n4, 1 + n5, 1, 1, 1, n9, n10, 1, 0, n13, 0])/
    (d - 2*n13 - 2*n5) + (n4*j[p4, 0, n2, 0, 1 + n4, -1 + n5, 1, 1, 1, n9, 
      n10, 1, 0, n13, 1])/(d - 2*n13 - 2*n5) - 
   (n4*j[p4, 0, n2, 0, 1 + n4, n5, 0, 1, 2, n9, n10, 1, 0, -1 + n13, 1])/
    ((-1 + n13)*(-d + 2*n13 + 2*n5)) - 
   (n4*j[p4, 0, n2, 0, 1 + n4, n5, 1, 0, 1, n9, n10, 1, 0, n13, 1])/
    (d - 2*n13 - 2*n5) + ((n4 - n4*n5)*j[p4, 0, n2, 0, 1 + n4, n5, 1, 1, 1, 
      n9, n10, 1, 0, -1 + n13, 1])/((-1 + n13)*(-d + 2*n13 + 2*n5)) - 
   (n4*j[p4, 0, n2, 0, 1 + n4, n5, 1, 1, 1, n9, n10, 1, 0, n13, 0])/
    (d - 2*n13 - 2*n5) + (n4*n5*j[p4, 0, n2, 0, 1 + n4, 1 + n5, 1, 0, 1, n9, 
      n10, 1, 0, -1 + n13, 1])/((-1 + n13)*(-d + 2*n13 + 2*n5)) - 
   (n2*n4*j[p4, 0, 1 + n2, -1, 1 + n4, n5, 1, 1, 1, n9, n10, 1, 0, -1 + n13, 
      1])/((-1 + n13)*(-d + 2*n13 + 2*n5)) - 
   (2*n2*j[p4, 0, 1 + n2, 0, n4, n5, 1, 0, 2, n9, n10, 1, 0, -1 + n13, 1])/
    ((-1 + n13)*(-d + 2*n13 + 2*n5)) + 
   ((5*n2 - 2*n13*n2 + 2*n2^2 - n2*n5)*j[p4, 0, 1 + n2, 0, n4, n5, 1, 1, 1, 
      n9, n10, 1, 0, -1 + n13, 1])/((-1 + n13)*(-d + 2*n13 + 2*n5)) + 
   (n2*j[p4, 0, 1 + n2, 0, n4, n5, 1, 1, 2, n9, n10, 1, -1, -1 + n13, 1])/
    ((-1 + n13)*(-d + 2*n13 + 2*n5)) - 
   (n2*j[p4, 0, 1 + n2, 0, n4, n5, 1, 1, 2, n9, n10, 1, 0, -2 + n13, 1])/
    ((-1 + n13)*(-d + 2*n13 + 2*n5)) - 
   (n2*n5*j[p4, 0, 1 + n2, 0, n4, 1 + n5, 1, 1, 1, n9, n10, 1, 0, -2 + n13, 
      1])/((-1 + n13)*(-d + 2*n13 + 2*n5)) + 
   (n2*n5*j[p4, 0, 1 + n2, 0, n4, 1 + n5, 1, 1, 1, n9, n10, 1, 0, -1 + n13, 
      0])/((-1 + n13)*(-d + 2*n13 + 2*n5)) - 
   (n2*n4*j[p4, 0, 1 + n2, 0, 1 + n4, n5, 0, 1, 1, n9, n10, 1, 0, -1 + n13, 
      1])/((-1 + n13)*(-d + 2*n13 + 2*n5)) + 
   (n2*n4*j[p4, 0, 1 + n2, 0, 1 + n4, n5, 1, 1, 0, n9, n10, 1, 0, -1 + n13, 
      1])/((-1 + n13)*(-d + 2*n13 + 2*n5)) + 
   (n2*n4*j[p4, 0, 1 + n2, 0, 1 + n4, n5, 1, 1, 1, n9, n10, 1, 0, -1 + n13, 
      0])/((-1 + n13)*(-d + 2*n13 + 2*n5)) + 
   ((n2 + n2^2)*j[p4, 0, 2 + n2, -1, n4, n5, 1, 1, 1, n9, n10, 1, 0, 
      -1 + n13, 1])/((-1 + n13)*(-d + 2*n13 + 2*n5)) + 
   ((-n2 - n2^2)*j[p4, 0, 2 + n2, 0, n4, n5, 1, 0, 1, n9, n10, 1, 0, 
      -1 + n13, 1])/((-1 + n13)*(-d + 2*n13 + 2*n5)) + 
   ((-n2 - n2^2)*j[p4, 0, 2 + n2, 0, n4, n5, 1, 1, 0, n9, n10, 1, 0, 
      -1 + n13, 1])/((-1 + n13)*(-d + 2*n13 + 2*n5)) + 
   ((n2 + n2^2)*j[p4, 0, 2 + n2, 0, n4, n5, 1, 1, 1, n9, n10, 1, -1, 
      -1 + n13, 1])/((-1 + n13)*(-d + 2*n13 + 2*n5)) + 
   ((-2*n2 - 2*n2^2)*j[p4, 0, 2 + n2, 0, n4, n5, 1, 1, 1, n9, n10, 1, 0, 
      -2 + n13, 1])/((-1 + n13)*(-d + 2*n13 + 2*n5)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n11 == 1 && n12 == 0 && n13 == 1 && n4 == 0 && n6 == 1 && n7 == 1 && 
    n8 == 1 && n9 == 0 &&  !(n14 == 1 || n3 == 0) -> 
  (n10*j[p4, -1 + n1, -1 + n2, 1 + n3, 0, 1 + n5, 1, 1, 1, 0, 1 + n10, 1, 0, 
      1, -1 + n14])/(-1 + n14) + 
   (n10*j[p4, -1 + n1, n2, n3, 0, 1 + n5, 1, 1, 1, 0, 1 + n10, 1, 0, 1, 
      -1 + n14])/(-1 + n14) - j[p4, n1, -1 + n2, 1 + n3, 0, n5, 1, 1, 1, 0, 
    n10, 1, 0, 1, n14] - (n10*j[p4, n1, -1 + n2, 1 + n3, 0, 1 + n5, 1, 0, 1, 
      0, 1 + n10, 1, 0, 1, -1 + n14])/(-1 + n14) - 
   (n10*j[p4, n1, -1 + n2, 1 + n3, 0, 1 + n5, 1, 1, 0, 0, 1 + n10, 1, 0, 1, 
      -1 + n14])/(-1 + n14) + j[p4, n1, -1 + n2, 1 + n3, 0, 1 + n5, 1, 1, 1, 
    0, n10, 1, 0, 0, n14] + ((-2 + n14 - n5)*j[p4, n1, -1 + n2, 1 + n3, 0, 
      1 + n5, 1, 1, 1, 0, n10, 1, 0, 1, -1 + n14])/(-1 + n14) + 
   (n10*j[p4, n1, -1 + n2, 1 + n3, 0, 1 + n5, 1, 1, 1, 0, 1 + n10, 1, -1, 1, 
      -1 + n14])/(-1 + n14) - (n10*j[p4, n1, -1 + n2, 1 + n3, 0, 1 + n5, 1, 
      1, 1, 0, 1 + n10, 1, 0, 0, -1 + n14])/(-1 + n14) - 
   (n10*j[p4, n1, -1 + n2, 1 + n3, 0, 1 + n5, 1, 1, 1, 0, 1 + n10, 1, 0, 1, 
      -1 + n14])/(-1 + n14) + j[p4, n1, -1 + n2, 1 + n3, 0, 1 + n5, 1, 2, 1, 
     0, n10, 1, 0, 0, -1 + n14]/(1 - n14) + 
   ((-1 - n5)*j[p4, n1, -1 + n2, 1 + n3, 0, 2 + n5, 1, 1, 1, 0, n10, 1, 0, 0, 
      -1 + n14])/(-1 + n14) + ((1 + n5)*j[p4, n1, -1 + n2, 1 + n3, 0, 2 + n5, 
      1, 1, 1, 0, n10, 1, 0, 1, -2 + n14])/(-1 + n14) + 
   ((-1 - n3)*j[p4, n1, -1 + n2, 2 + n3, 0, 1 + n5, 1, 0, 1, 0, n10, 1, 0, 1, 
      -1 + n14])/(-1 + n14) + ((1 + n3)*j[p4, n1, -1 + n2, 2 + n3, 0, 1 + n5, 
      1, 1, 1, 0, n10, 1, 0, 0, -1 + n14])/(-1 + n14) + 
   j[p4, n1, n2, n3, 0, 1 + n5, 1, 1, 1, 0, n10, 1, 0, 0, n14] + 
   ((-5 + 2*d - n10 - n14 - n2 - n3 - 2*n5)*j[p4, n1, n2, n3, 0, 1 + n5, 1, 
      1, 1, 0, n10, 1, 0, 1, -1 + n14])/(-1 + n14) + 
   j[p4, n1, n2, n3, 0, 1 + n5, 1, 2, 0, 0, n10, 1, 0, 1, -1 + n14]/
    (-1 + n14) + ((1 - n2)*j[p4, n1, n2, 1 + n3, 0, 1 + n5, 1, 0, 1, 0, n10, 
      1, 0, 1, -1 + n14])/(-1 + n14) + 
   ((1 - n2 + 2*n3)*j[p4, n1, n2, 1 + n3, 0, 1 + n5, 1, 1, 0, 0, n10, 1, 0, 
      1, -1 + n14])/(-1 + n14) + 
   ((-1 + n2 - n3)*j[p4, n1, n2, 1 + n3, 0, 1 + n5, 1, 1, 1, 0, n10, 1, -1, 
      1, -1 + n14])/(-1 + n14) + 
   ((2 - 2*n2 + 2*n3)*j[p4, n1, n2, 1 + n3, 0, 1 + n5, 1, 1, 1, 0, n10, 1, 0, 
      0, -1 + n14])/(-1 + n14), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n6 == 1 && n7 == 1 && 
    n8 == 1 && n9 == 0 && n10 != 0 -> 
  j[p4, -1 + n1, n2, n3, n4, n5, 1, 0, 1, 0, 1 + n10, 1, 0, 2, 1]/
    (-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5) + 
   ((-9 + 3*d - 11*n10 + 3*d*n10 - 2*n10^2 - 2*n2 - 2*n10*n2 - 3*n3 - 
      3*n10*n3 - 2*n4 - 2*n10*n4)*j[p4, -1 + n1, n2, n3, n4, n5, 1, 0, 1, 0, 
      2 + n10, 1, 0, 1, 1])/((-3 + d - n3)*(-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 
      2*n5)) + j[p4, -1 + n1, n2, n3, n4, n5, 1, 0, 2, 0, 1 + n10, 1, 0, 1, 
     1]/(8 - 3*d + 2*n2 + 2*n3 + 2*n4 + 2*n5) + 
   ((-9 + 3*d - 11*n10 + 3*d*n10 - 2*n10^2 - 2*n2 - 2*n10*n2 - 3*n3 - 
      3*n10*n3 - 2*n4 - 2*n10*n4)*j[p4, -1 + n1, n2, n3, n4, n5, 1, 1, 0, 0, 
      2 + n10, 1, 0, 1, 1])/((-3 + d - n3)*(-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 
      2*n5)) + ((108 - 75*d + 13*d^2 + 12*n1 - 4*d*n1 + 34*n10 - 12*d*n10 + 
      2*n1*n10 + 2*n10^2 + 40*n2 - 14*d*n2 + 2*n1*n2 + 6*n10*n2 + 4*n2^2 + 
      54*n3 - 19*d*n3 + 4*n1*n3 + 8*n10*n3 + 10*n2*n3 + 6*n3^2 + 40*n4 - 
      14*d*n4 + 2*n1*n4 + 6*n10*n4 + 8*n2*n4 + 10*n3*n4 + 4*n4^2 + 18*n5 - 
      6*d*n5 + 4*n10*n5 + 4*n2*n5 + 6*n3*n5 + 4*n4*n5)*
     j[p4, -1 + n1, n2, n3, n4, n5, 1, 1, 1, 0, 1 + n10, 1, 0, 1, 1])/
    ((-3 + d - n3)*(-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5)) + 
   ((-9 + 3*d - 11*n10 + 3*d*n10 - 2*n10^2 - 2*n2 - 2*n10*n2 - 3*n3 - 
      3*n10*n3 - 2*n4 - 2*n10*n4)*j[p4, -1 + n1, n2, n3, n4, n5, 1, 1, 1, 0, 
      2 + n10, 1, 0, 0, 1])/((-3 + d - n3)*(-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 
      2*n5)) + j[p4, -1 + n1, n2, n3, n4, n5, 1, 1, 2, 0, 1 + n10, 1, 0, 0, 
     1]/(8 - 3*d + 2*n2 + 2*n3 + 2*n4 + 2*n5) + 
   (n5*j[p4, -1 + n1, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1 + n10, 1, 0, 1, 1])/
    (-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5) - 
   (n5*j[p4, -1 + n1, n2, n3, n4, 1 + n5, 1, 1, 1, 0, 1 + n10, 1, 0, 0, 1])/
    (-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5) + 
   (n5*j[p4, -1 + n1, n2, n3, n4, 1 + n5, 1, 1, 1, 0, 1 + n10, 1, 0, 1, 0])/
    (-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5) - 
   (n4*j[p4, -1 + n1, n2, n3, 1 + n4, n5, 1, 1, 1, 0, 1 + n10, 1, 0, 1, 0])/
    (8 - 3*d + 2*n2 + 2*n3 + 2*n4 + 2*n5) + 
   (2*n2*j[p4, -1 + n1, 1 + n2, n3, n4, n5, 1, 1, 0, 0, 1 + n10, 1, 0, 1, 1])/
    (8 - 3*d + 2*n2 + 2*n3 + 2*n4 + 2*n5) + 
   (2*n2*j[p4, -1 + n1, 1 + n2, n3, n4, n5, 1, 1, 1, 0, 1 + n10, 1, 0, 0, 1])/
    (8 - 3*d + 2*n2 + 2*n3 + 2*n4 + 2*n5) + 
   (2*n4*j[p4, n1, -1 + n2, -1 + n3, 1 + n4, n5, 1, 1, 1, 0, 1 + n10, 1, 0, 
      1, 1])/(8 - 3*d + 2*n2 + 2*n3 + 2*n4 + 2*n5) + 
   ((9 - 3*d + 11*n10 - 3*d*n10 + 2*n10^2 + 2*n2 + 2*n10*n2 + 3*n3 + 
      3*n10*n3 + 2*n4 + 2*n10*n4)*j[p4, n1, -1 + n2, n3, n4, n5, 1, 1, 0, 0, 
      2 + n10, 1, 0, 1, 1])/((-3 + d - n3)*(-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 
      2*n5)) + ((-60 + 41*d - 7*d^2 - 28*n10 + 10*d*n10 - 2*n10^2 - 22*n2 + 
      8*d*n2 - 4*n10*n2 - 2*n2^2 - 26*n3 + 9*d*n3 - 8*n10*n3 - 6*n2*n3 - 
      2*n3^2 - 28*n4 + 10*d*n4 - 6*n10*n4 - 6*n2*n4 - 8*n3*n4 - 4*n4^2 - 
      6*n5 + 2*d*n5 - 2*n10*n5 - 2*n2*n5 - 2*n3*n5 - 2*n4*n5)*
     j[p4, n1, -1 + n2, n3, n4, n5, 1, 1, 1, 0, 1 + n10, 1, 0, 1, 1])/
    ((-3 + d - n3)*(-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5)) + 
   ((9 - 3*d + 11*n10 - 3*d*n10 + 2*n10^2 + 2*n2 + 2*n10*n2 + 3*n3 + 
      3*n10*n3 + 2*n4 + 2*n10*n4)*j[p4, n1, -1 + n2, n3, n4, n5, 1, 1, 1, 0, 
      2 + n10, 0, 0, 1, 1])/((-3 + d - n3)*(-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 
      2*n5)) + ((9 - 3*d + 11*n10 - 3*d*n10 + 2*n10^2 + 2*n2 + 2*n10*n2 + 
      3*n3 + 3*n10*n3 + 2*n4 + 2*n10*n4)*j[p4, n1, -1 + n2, n3, n4, n5, 1, 1, 
      1, 0, 2 + n10, 1, 0, 0, 1])/((-3 + d - n3)*(-8 + 3*d - 2*n2 - 2*n3 - 
      2*n4 - 2*n5)) + j[p4, n1, -1 + n2, n3, n4, n5, 1, 1, 2, 0, 1 + n10, 0, 
     0, 1, 1]/(-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5) + 
   j[p4, n1, -1 + n2, n3, n4, n5, 1, 1, 2, 0, 1 + n10, 1, 0, 0, 1]/
    (8 - 3*d + 2*n2 + 2*n3 + 2*n4 + 2*n5) + 
   ((9 - 3*d + 2*n10 + 2*n2 + 3*n3 + 2*n4)*j[p4, n1, -1 + n2, n3, n4, n5, 1, 
      2, 1, 0, 1 + n10, 1, 0, 0, 1])/((-3 + d - n3)*
     (-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5)) + 
   ((9 - 3*d + 2*n10 + 2*n2 + 3*n3 + 2*n4)*j[p4, n1, -1 + n2, n3, n4, n5, 2, 
      1, 0, 0, 1 + n10, 1, 0, 1, 1])/((-3 + d - n3)*
     (-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5)) + 
   ((12*n5 - 4*d*n5 + 2*n10*n5 + 2*n2*n5 + 4*n3*n5 + 2*n4*n5)*
     j[p4, n1, -1 + n2, n3, n4, 1 + n5, 1, 1, 1, 0, 1 + n10, 1, 0, 0, 1])/
    ((-3 + d - n3)*(-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5)) + 
   ((-12*n5 + 4*d*n5 - 2*n10*n5 - 2*n2*n5 - 4*n3*n5 - 2*n4*n5)*
     j[p4, n1, -1 + n2, n3, n4, 1 + n5, 1, 1, 1, 0, 1 + n10, 1, 0, 1, 0])/
    ((-3 + d - n3)*(-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5)) + 
   (2*n4*j[p4, n1, -1 + n2, n3, 1 + n4, -1 + n5, 1, 1, 1, 0, 1 + n10, 1, 0, 
      1, 1])/(8 - 3*d + 2*n2 + 2*n3 + 2*n4 + 2*n5) - 
   (2*n4*j[p4, n1, -1 + n2, n3, 1 + n4, n5, 1, 0, 1, 0, 1 + n10, 1, 0, 1, 1])/
    (8 - 3*d + 2*n2 + 2*n3 + 2*n4 + 2*n5) - 
   (n4*j[p4, n1, -1 + n2, n3, 1 + n4, n5, 1, 1, 1, 0, 1 + n10, 1, 0, 1, 0])/
    (8 - 3*d + 2*n2 + 2*n3 + 2*n4 + 2*n5) - 
   (2*n3*j[p4, n1, -1 + n2, 1 + n3, n4, n5, 1, 0, 1, 0, 1 + n10, 1, 0, 1, 1])/
    (8 - 3*d + 2*n2 + 2*n3 + 2*n4 + 2*n5) + 
   (2*n3*j[p4, n1, -1 + n2, 1 + n3, n4, n5, 1, 1, 1, 0, 1 + n10, 1, 0, 0, 1])/
    (8 - 3*d + 2*n2 + 2*n3 + 2*n4 + 2*n5) + 
   ((-9 + 3*d - 11*n10 + 3*d*n10 - 2*n10^2 - 2*n2 - 2*n10*n2 - 3*n3 - 
      3*n10*n3 - 2*n4 - 2*n10*n4)*j[p4, n1, n2, -1 + n3, n4, n5, 1, 0, 1, 0, 
      2 + n10, 1, 0, 1, 1])/((-3 + d - n3)*(-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 
      2*n5)) + ((14 - 5*d + 2*n1 + 4*n10 + 4*n2 + 2*n3 + 2*n4 + 2*n5)*
     j[p4, n1, n2, -1 + n3, n4, n5, 1, 1, 1, 0, 1 + n10, 1, 0, 1, 1])/
    (-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5) + 
   ((9 - 3*d + 11*n10 - 3*d*n10 + 2*n10^2 + 2*n2 + 2*n10*n2 + 3*n3 + 
      3*n10*n3 + 2*n4 + 2*n10*n4)*j[p4, n1, n2, -1 + n3, n4, n5, 1, 1, 1, 0, 
      2 + n10, 0, 0, 1, 1])/((-3 + d - n3)*(-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 
      2*n5)) + ((-9 + 3*d - 2*n10 - 2*n2 - 3*n3 - 2*n4)*
     j[p4, n1, n2, -1 + n3, n4, n5, 1, 2, 0, 0, 1 + n10, 1, 0, 1, 1])/
    ((-3 + d - n3)*(-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5)) + 
   j[p4, n1, n2, -1 + n3, n4, n5, 1, 2, 1, 0, 1 + n10, 0, 0, 1, 1]/
    (8 - 3*d + 2*n2 + 2*n3 + 2*n4 + 2*n5) + 
   ((9 - 3*d + 2*n10 + 2*n2 + 3*n3 + 2*n4)*j[p4, n1, n2, -1 + n3, n4, n5, 2, 
      1, 0, 0, 1 + n10, 1, 0, 1, 1])/((-3 + d - n3)*
     (-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5)) + 
   ((6*n4 - 2*d*n4 + 2*n10*n4 + 2*n2*n4 + 2*n3*n4 + 2*n4^2)*
     j[p4, n1, n2, -1 + n3, 1 + n4, n5, 0, 1, 1, 0, 1 + n10, 1, 0, 1, 1])/
    ((-3 + d - n3)*(-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5)) - 
   (n4*j[p4, n1, n2, -1 + n3, 1 + n4, n5, 1, 0, 1, 0, 1 + n10, 1, 0, 1, 1])/
    (8 - 3*d + 2*n2 + 2*n3 + 2*n4 + 2*n5) + 
   ((-9*n4 + 3*d*n4 - 2*n10*n4 - 2*n2*n4 - 3*n3*n4 - 2*n4^2)*
     j[p4, n1, n2, -1 + n3, 1 + n4, n5, 1, 1, 0, 0, 1 + n10, 1, 0, 1, 1])/
    ((-3 + d - n3)*(-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5)) + 
   (n4*j[p4, n1, n2, -1 + n3, 1 + n4, n5, 1, 1, 1, 0, 1 + n10, 0, 0, 1, 1])/
    (8 - 3*d + 2*n2 + 2*n3 + 2*n4 + 2*n5) + 
   ((-12 + 10*d - 2*d^2 - 4*n10 + 2*d*n10 - 4*n2 + 2*d*n2 - 4*n3 + 2*d*n3 - 
      10*n4 + 4*d*n4 - 2*n10*n4 - 2*n2*n4 - 2*n3*n4 - 2*n4^2 - 6*n5 + 
      2*d*n5 - 2*n10*n5 - 2*n2*n5 - 2*n3*n5 - 2*n4*n5)*
     j[p4, n1, n2, n3, -1 + n4, n5, 1, 1, 1, 0, 1 + n10, 1, 0, 1, 1])/
    ((-3 + d - n3)*(-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5)) + 
   ((-9 + 3*d - 2*n10 - 2*n2 - 3*n3 - 2*n4)*j[p4, n1, n2, n3, -1 + n4, n5, 2, 
      0, 1, 0, 1 + n10, 1, 0, 1, 1])/((-3 + d - n3)*
     (-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5)) + 
   ((-9 + 3*d - 2*n10 - 2*n2 - 3*n3 - 2*n4)*j[p4, n1, n2, n3, -1 + n4, n5, 2, 
      1, 0, 0, 1 + n10, 1, 0, 1, 1])/((-3 + d - n3)*
     (-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5)) + 
   ((-9 + 3*d - 2*n10 - 2*n2 - 3*n3 - 2*n4)*j[p4, n1, n2, n3, -1 + n4, n5, 2, 
      1, 1, 0, 1 + n10, 1, 0, 0, 1])/((-3 + d - n3)*
     (-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5)) + 
   ((-9 + 3*d - 2*n10 - 2*n2 - 3*n3 - 2*n4)*j[p4, n1, n2, n3, -1 + n4, n5, 2, 
      1, 1, 0, 1 + n10, 1, 0, 1, 0])/((-3 + d - n3)*
     (-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5)) + 
   ((9*n5 - 3*d*n5 + 2*n10*n5 + 2*n2*n5 + 3*n3*n5 + 2*n4*n5)*
     j[p4, n1, n2, n3, -1 + n4, 1 + n5, 1, 1, 1, 0, 1 + n10, 1, 0, 0, 1])/
    ((-3 + d - n3)*(-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5)) + 
   ((-9*n5 + 3*d*n5 - 2*n10*n5 - 2*n2*n5 - 3*n3*n5 - 2*n4*n5)*
     j[p4, n1, n2, n3, -1 + n4, 1 + n5, 1, 1, 1, 0, 1 + n10, 1, 0, 1, 0])/
    ((-3 + d - n3)*(-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5)) + 
   ((-12 + 4*d - 2*n10 - 2*n2 - 4*n3 - 2*n4)*j[p4, n1, n2, n3, n4, -1 + n5, 
      1, 1, 1, 0, 1 + n10, 1, 0, 1, 2])/((-3 + d - n3)*
     (-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5)) + 
   ((15 - 5*d + 5*n10 - d*n10 + 5*n2 - d*n2 - 7*n3 + 4*d*n3 - n10*n3 - 
      n2*n3 - 4*n3^2 - n4 + d*n4 - 3*n3*n4)*j[p4, n1, n2, n3, n4, n5, 1, 0, 
      1, 0, 1 + n10, 1, 0, 1, 1])/((-3 + d - n3)*(-8 + 3*d - 2*n2 - 2*n3 - 
      2*n4 - 2*n5)) + j[p4, n1, n2, n3, n4, n5, 1, 0, 1, 0, 1 + n10, 1, 0, 2, 
     1]/(8 - 3*d + 2*n2 + 2*n3 + 2*n4 + 2*n5) + 
   j[p4, n1, n2, n3, n4, n5, 1, 0, 1, 0, 1 + n10, 2, -1, 1, 1]/
    (-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5) + 
   j[p4, n1, n2, n3, n4, n5, 1, 0, 1, 0, 1 + n10, 2, 0, 1, 1]/
    (8 - 3*d + 2*n2 + 2*n3 + 2*n4 + 2*n5) + 
   ((-9 + 3*d - 11*n10 + 3*d*n10 - 2*n10^2 - 2*n2 - 2*n10*n2 - 3*n3 - 
      3*n10*n3 - 2*n4 - 2*n10*n4)*j[p4, n1, n2, n3, n4, n5, 1, 0, 1, 0, 
      2 + n10, 1, -1, 1, 1])/((-3 + d - n3)*(-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 
      2*n5)) + ((1 + n10)*j[p4, n1, n2, n3, n4, n5, 1, 0, 1, 0, 2 + n10, 1, 
      0, 1, 1])/(-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5) + 
   j[p4, n1, n2, n3, n4, n5, 1, 0, 2, 0, 1 + n10, 1, -1, 1, 1]/
    (-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5) + 
   ((-12 + 4*d + 3*n1 - d*n1 - 2*n10 + 19*n2 - 7*d*n2 + 4*n10*n2 + 4*n2^2 - 
      22*n3 + 6*d*n3 + n1*n3 - 4*n10*n3 + 3*n2*n3 - 6*n3^2 - 5*n4 + d*n4 + 
      4*n2*n4 - 5*n3*n4)*j[p4, n1, n2, n3, n4, n5, 1, 1, 0, 0, 1 + n10, 1, 0, 
      1, 1])/((-3 + d - n3)*(-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5)) + 
   ((9 - 3*d + 2*n10 + 2*n2 + 3*n3 + 2*n4)*j[p4, n1, n2, n3, n4, n5, 1, 1, 0, 
      0, 1 + n10, 2, -1, 1, 1])/((-3 + d - n3)*(-8 + 3*d - 2*n2 - 2*n3 - 
      2*n4 - 2*n5)) + ((-9 + 3*d - 2*n10 - 2*n2 - 3*n3 - 2*n4)*
     j[p4, n1, n2, n3, n4, n5, 1, 1, 0, 0, 1 + n10, 2, 0, 1, 1])/
    ((-3 + d - n3)*(-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5)) + 
   ((-n1 - n10 + 2*n3 + n4)*j[p4, n1, n2, n3, n4, n5, 1, 1, 1, 0, 1 + n10, 0, 
      0, 1, 1])/(8 - 3*d + 2*n2 + 2*n3 + 2*n4 + 2*n5) + 
   ((-18 + 6*d + 12*n1 - 4*d*n1 - 2*n10 + 2*n1*n10 + 22*n2 - 8*d*n2 + 
      2*n1*n2 + 4*n10*n2 + 4*n2^2 - 12*n3 + 2*d*n3 + 4*n1*n3 - 2*n10*n3 + 
      6*n2*n3 - 2*n3^2 - 2*n4 + 2*n1*n4 + 4*n2*n4 - 2*n3*n4)*
     j[p4, n1, n2, n3, n4, n5, 1, 1, 1, 0, 1 + n10, 1, 0, 0, 1])/
    ((-3 + d - n3)*(-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5)) + 
   ((12 - 4*d + 2*n10 + 2*n2 + 4*n3 + 2*n4)*j[p4, n1, n2, n3, n4, n5, 1, 1, 
      1, 0, 1 + n10, 1, 0, 0, 2])/((-3 + d - n3)*(-8 + 3*d - 2*n2 - 2*n3 - 
      2*n4 - 2*n5)) + ((6 - 2*d + 2*n10 + 2*n2 + 2*n3 - 7*n4 + 3*d*n4 - 
      2*n10*n4 - 2*n2*n4 - 3*n3*n4 - 2*n4^2)*j[p4, n1, n2, n3, n4, n5, 1, 1, 
      1, 0, 1 + n10, 1, 0, 1, 0])/((-3 + d - n3)*(-8 + 3*d - 2*n2 - 2*n3 - 
      2*n4 - 2*n5)) + ((-72 + 51*d - 9*d^2 - 12*n1 + 4*d*n1 - 28*n10 + 
      10*d*n10 - 2*n1*n10 - 2*n10^2 - 34*n2 + 12*d*n2 - 2*n1*n2 - 6*n10*n2 - 
      4*n2^2 - 30*n3 + 11*d*n3 - 4*n1*n3 - 6*n10*n3 - 8*n2*n3 - 2*n3^2 - 
      34*n4 + 12*d*n4 - 2*n1*n4 - 6*n10*n4 - 8*n2*n4 - 8*n3*n4 - 4*n4^2 - 
      18*n5 + 6*d*n5 - 4*n10*n5 - 4*n2*n5 - 6*n3*n5 - 4*n4*n5)*
     j[p4, n1, n2, n3, n4, n5, 1, 1, 1, 0, 1 + n10, 1, 0, 1, 1])/
    ((-3 + d - n3)*(-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5)) + 
   ((9 - 3*d + 11*n10 - 3*d*n10 + 2*n10^2 + 2*n2 + 2*n10*n2 + 3*n3 + 
      3*n10*n3 + 2*n4 + 2*n10*n4)*j[p4, n1, n2, n3, n4, n5, 1, 1, 1, 0, 
      2 + n10, 0, -1, 1, 1])/((-3 + d - n3)*(-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 
      2*n5)) + ((-1 - n10)*j[p4, n1, n2, n3, n4, n5, 1, 1, 1, 0, 2 + n10, 0, 
      0, 1, 1])/(-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5) + 
   j[p4, n1, n2, n3, n4, n5, 1, 1, 2, 0, 1 + n10, 0, -1, 1, 1]/
    (-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5) + 
   j[p4, n1, n2, n3, n4, n5, 1, 2, 1, 0, n10, 1, 0, 0, 1]/
    (-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5) + 
   j[p4, n1, n2, n3, n4, n5, 2, 0, 1, -1, 1 + n10, 1, 0, 1, 1]/
    (8 - 3*d + 2*n2 + 2*n3 + 2*n4 + 2*n5) + 
   j[p4, n1, n2, n3, n4, n5, 2, 0, 1, 0, n10, 1, 0, 1, 1]/
    (-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5) - 
   (2*j[p4, n1, n2, n3, n4, n5, 2, 1, 0, -1, 1 + n10, 1, 0, 1, 1])/
    (-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5) + 
   (2*j[p4, n1, n2, n3, n4, n5, 2, 1, 0, 0, n10, 1, 0, 1, 1])/
    (-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5) + 
   ((9 - 3*d + 2*n10 + 2*n2 + 3*n3 + 2*n4)*j[p4, n1, n2, n3, n4, n5, 2, 1, 0, 
      0, 1 + n10, 1, -1, 1, 1])/((-3 + d - n3)*(-8 + 3*d - 2*n2 - 2*n3 - 
      2*n4 - 2*n5)) + j[p4, n1, n2, n3, n4, n5, 2, 1, 1, -1, 1 + n10, 1, 0, 
     0, 1]/(8 - 3*d + 2*n2 + 2*n3 + 2*n4 + 2*n5) + 
   j[p4, n1, n2, n3, n4, n5, 2, 1, 1, -1, 1 + n10, 1, 0, 1, 0]/
    (8 - 3*d + 2*n2 + 2*n3 + 2*n4 + 2*n5) + 
   j[p4, n1, n2, n3, n4, n5, 2, 1, 1, 0, n10, 1, 0, 0, 1]/
    (-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5) + 
   j[p4, n1, n2, n3, n4, n5, 2, 1, 1, 0, n10, 1, 0, 1, 0]/
    (-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5) - 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 1, -1, 1 + n10, 1, 0, 1, 1])/
    (-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5) + 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, 1, 1, 1, -1, 1 + n10, 1, 0, 0, 1])/
    (-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5) - 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, 1, 1, 1, -1, 1 + n10, 1, 0, 1, 0])/
    (-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5) + 
   (2*n4*j[p4, n1, n2, n3, 1 + n4, -1 + n5, 1, 1, 1, 0, 1 + n10, 1, -1, 1, 
      1])/(8 - 3*d + 2*n2 + 2*n3 + 2*n4 + 2*n5) - 
   (2*n4*j[p4, n1, n2, n3, 1 + n4, n5, 1, 0, 1, 0, 1 + n10, 1, -1, 1, 1])/
    (8 - 3*d + 2*n2 + 2*n3 + 2*n4 + 2*n5) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, 1, 1, 1, -1, 1 + n10, 1, 0, 1, 0])/
    (8 - 3*d + 2*n2 + 2*n3 + 2*n4 + 2*n5) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, 1, 1, 1, 0, n10, 1, 0, 1, 0])/
    (8 - 3*d + 2*n2 + 2*n3 + 2*n4 + 2*n5) - 
   (2*n3*j[p4, n1, n2, 1 + n3, n4, n5, 1, 0, 1, 0, 1 + n10, 1, -1, 1, 1])/
    (8 - 3*d + 2*n2 + 2*n3 + 2*n4 + 2*n5) + 
   ((-12*n3 + 4*d*n3 - 2*n10*n3 - 2*n2*n3 - 4*n3^2 - 2*n3*n4)*
     j[p4, n1, n2, 1 + n3, n4, n5, 1, 0, 1, 0, 1 + n10, 1, 0, 1, 1])/
    ((-3 + d - n3)*(-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5)) + 
   (2*n3*j[p4, n1, n2, 1 + n3, n4, n5, 1, 1, 1, 0, 1 + n10, 1, -1, 0, 1])/
    (8 - 3*d + 2*n2 + 2*n3 + 2*n4 + 2*n5) + 
   ((12*n3 - 4*d*n3 + 2*n10*n3 + 2*n2*n3 + 4*n3^2 + 2*n3*n4)*
     j[p4, n1, n2, 1 + n3, n4, n5, 1, 1, 1, 0, 1 + n10, 1, 0, 0, 1])/
    ((-3 + d - n3)*(-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5)) + 
   ((-9*n2 + 3*d*n2 - 2*n10*n2 - 2*n2^2 - 3*n2*n3 - 2*n2*n4)*
     j[p4, n1, 1 + n2, -1 + n3, n4, n5, 1, 0, 1, 0, 1 + n10, 1, 0, 1, 1])/
    ((-3 + d - n3)*(-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5)) + 
   ((9*n2 - 3*d*n2 + 2*n10*n2 + 2*n2^2 + 3*n2*n3 + 2*n2*n4)*
     j[p4, n1, 1 + n2, -1 + n3, n4, n5, 1, 1, 0, 0, 1 + n10, 1, 0, 1, 1])/
    ((-3 + d - n3)*(-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5)) + 
   ((-9*n2 + 3*d*n2 - 2*n10*n2 - 2*n2^2 - 3*n2*n3 - 2*n2*n4)*
     j[p4, n1, 1 + n2, n3, n4, n5, 1, 0, 1, 0, 1 + n10, 1, -1, 1, 1])/
    ((-3 + d - n3)*(-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5)) - 
   (2*n2*j[p4, n1, 1 + n2, n3, n4, n5, 1, 1, 0, 0, n10, 1, 0, 1, 1])/
    (8 - 3*d + 2*n2 + 2*n3 + 2*n4 + 2*n5) + 
   ((9*n2 - 3*d*n2 + 2*n10*n2 + 2*n2^2 + 3*n2*n3 + 2*n2*n4)*
     j[p4, n1, 1 + n2, n3, n4, n5, 1, 1, 0, 0, 1 + n10, 1, -1, 1, 1])/
    ((-3 + d - n3)*(-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5)) - 
   (2*n2*j[p4, n1, 1 + n2, n3, n4, n5, 1, 1, 1, 0, n10, 1, 0, 0, 1])/
    (8 - 3*d + 2*n2 + 2*n3 + 2*n4 + 2*n5) - 
   (n1*j[p4, 1 + n1, -1 + n2, n3, n4, n5, 1, 1, 1, 0, 1 + n10, 1, 0, 0, 1])/
    (-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5) + 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, 1, 1, 0, 0, 1 + n10, 1, 0, 1, 1])/
    (-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5) + 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, 1, 1, 1, 0, n10, 1, 0, 0, 1])/
    (-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5) - 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, 1, 1, 1, 0, 1 + n10, 0, 0, 1, 1])/
    (-8 + 3*d - 2*n2 - 2*n3 - 2*n4 - 2*n5), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n11 == 1 && n13 == 1 && n14 == 1 && n4 == 0 && n6 == 1 && n7 == 1 && 
    n8 == 1 && n9 == 0 &&  !(n10 == 0 || n12 == 0) -> 
  ((3 - 2*d + n1 + 2*n3 + 2*n5)*j[p4, -1 + n1, -1 + n2, n3, 0, n5, 1, 1, 1, 
      0, 1 + n10, 1, 1 + n12, 1, 1])/(-1 + n1) + 
   j[p4, -1 + n1, -1 + n2, n3, 0, n5, 1, 1, 2, 0, 1 + n10, 1, 1 + n12, 0, 1]/
    (-1 + n1) + j[p4, -1 + n1, -1 + n2, n3, 0, n5, 2, 1, 0, 0, 1 + n10, 1, 
     1 + n12, 1, 1]/(1 - n1) - 
   (n5*j[p4, -1 + n1, -1 + n2, n3, 0, 1 + n5, 1, 0, 1, 0, 1 + n10, 1, 
      1 + n12, 1, 1])/(-1 + n1) + 
   (n5*j[p4, -1 + n1, -1 + n2, n3, 0, 1 + n5, 1, 1, 1, 0, 1 + n10, 1, 
      1 + n12, 0, 1])/(-1 + n1) - 
   (n5*j[p4, -1 + n1, -1 + n2, n3, 0, 1 + n5, 1, 1, 1, 0, 1 + n10, 1, 
      1 + n12, 1, 0])/(-1 + n1) - 
   (n3*j[p4, -1 + n1, -1 + n2, 1 + n3, 0, n5, 1, 0, 1, 0, 1 + n10, 1, 
      1 + n12, 1, 1])/(-1 + n1) + 
   (n3*j[p4, -1 + n1, -1 + n2, 1 + n3, 0, n5, 1, 1, 1, 0, 1 + n10, 1, 
      1 + n12, 0, 1])/(-1 + n1) + j[p4, -1 + n1, n2, -1 + n3, 0, n5, 0, 1, 1, 
     0, 1 + n10, 1, 1 + n12, 1, 2]/(1 - n1) + 
   j[p4, -1 + n1, n2, -1 + n3, 0, n5, 1, 0, 1, 0, 1 + n10, 1, 1 + n12, 1, 2]/
    (1 - n1) + j[p4, -1 + n1, n2, -1 + n3, 0, n5, 1, 1, 0, 0, 1 + n10, 1, 
     1 + n12, 1, 2]/(1 - n1) + j[p4, -1 + n1, n2, -1 + n3, 0, n5, 1, 1, 0, 0, 
     1 + n10, 1, 1 + n12, 2, 1]/(1 - n1) + 
   j[p4, -1 + n1, n2, -1 + n3, 0, n5, 1, 1, 1, 0, 1 + n10, 1, 1 + n12, 0, 2]/
    (1 - n1) + ((-1 + d - n1 - 2*n2)*j[p4, -1 + n1, n2, -1 + n3, 0, n5, 1, 1, 
      1, 0, 1 + n10, 1, 1 + n12, 1, 1])/(-1 + n1) + 
   j[p4, -1 + n1, n2, -1 + n3, 0, n5, 2, 1, 0, 0, 1 + n10, 1, 1 + n12, 1, 1]/
    (1 - n1) + j[p4, -1 + n1, n2, n3, -1, n5, 0, 1, 1, 0, 1 + n10, 1, 
     1 + n12, 1, 2]/(-1 + n1) + j[p4, -1 + n1, n2, n3, -1, n5, 1, 0, 1, 0, 
     1 + n10, 1, 1 + n12, 1, 2]/(-1 + n1) + 
   j[p4, -1 + n1, n2, n3, -1, n5, 1, 1, 0, 0, 1 + n10, 1, 1 + n12, 1, 2]/
    (-1 + n1) + j[p4, -1 + n1, n2, n3, -1, n5, 1, 1, 1, 0, 1 + n10, 1, 
     1 + n12, 0, 2]/(-1 + n1) + 
   ((4 - 2*d + 2*n5)*j[p4, -1 + n1, n2, n3, -1, n5, 1, 1, 1, 0, 1 + n10, 1, 
      1 + n12, 1, 1])/(-1 + n1) + j[p4, -1 + n1, n2, n3, -1, n5, 2, 0, 1, 0, 
     1 + n10, 1, 1 + n12, 1, 1]/(-1 + n1) + 
   j[p4, -1 + n1, n2, n3, -1, n5, 2, 1, 0, 0, 1 + n10, 1, 1 + n12, 1, 1]/
    (-1 + n1) + j[p4, -1 + n1, n2, n3, -1, n5, 2, 1, 1, 0, 1 + n10, 1, 
     1 + n12, 0, 1]/(-1 + n1) + j[p4, -1 + n1, n2, n3, -1, n5, 2, 1, 1, 0, 
     1 + n10, 1, 1 + n12, 1, 0]/(-1 + n1) + 
   (n5*j[p4, -1 + n1, n2, n3, -1, 1 + n5, 0, 1, 1, 0, 1 + n10, 1, 1 + n12, 1, 
      1])/(-1 + n1) - (n5*j[p4, -1 + n1, n2, n3, -1, 1 + n5, 1, 1, 1, 0, 
      1 + n10, 1, 1 + n12, 0, 1])/(-1 + n1) + 
   (n5*j[p4, -1 + n1, n2, n3, -1, 1 + n5, 1, 1, 1, 0, 1 + n10, 1, 1 + n12, 1, 
      0])/(-1 + n1) + j[p4, -1 + n1, n2, n3, 0, n5, 0, 1, 1, 0, 1 + n10, 1, 
     1 + n12, 1, 1]/(1 - n1) + j[p4, -1 + n1, n2, n3, 0, n5, 1, 0, 1, 0, 
     1 + n10, 1, n12, 2, 1]/(-1 + n1) + 
   ((n2 - n3)*j[p4, -1 + n1, n2, n3, 0, n5, 1, 0, 1, 0, 1 + n10, 1, 1 + n12, 
      1, 1])/(-1 + n1) + j[p4, -1 + n1, n2, n3, 0, n5, 1, 0, 2, 0, 1 + n10, 
     1, n12, 1, 1]/(1 - n1) + ((2 + n2 - 2*n3)*j[p4, -1 + n1, n2, n3, 0, n5, 
      1, 1, 0, 0, 1 + n10, 1, 1 + n12, 1, 1])/(-1 + n1) + 
   ((2 - d + 2*n5)*j[p4, -1 + n1, n2, n3, 0, n5, 1, 1, 1, 0, 1 + n10, 1, n12, 
      1, 1])/(-1 + n1) + ((-1 + 2*n2 - n3)*j[p4, -1 + n1, n2, n3, 0, n5, 1, 
      1, 1, 0, 1 + n10, 1, 1 + n12, 0, 1])/(-1 + n1) + 
   j[p4, -1 + n1, n2, n3, 0, n5, 1, 1, 1, 0, 1 + n10, 1, 1 + n12, 1, 0]/
    (1 - n1) + j[p4, -1 + n1, n2, n3, 0, n5, 2, 1, 0, 0, 1 + n10, 1, n12, 1, 
     1]/(1 - n1) - (n3*j[p4, -1 + n1, n2, 1 + n3, 0, n5, 1, 0, 1, 0, 1 + n10, 
      1, n12, 1, 1])/(-1 + n1) + 
   (n3*j[p4, -1 + n1, n2, 1 + n3, 0, n5, 1, 1, 1, 0, 1 + n10, 1, n12, 0, 1])/
    (-1 + n1) + (n2*j[p4, -1 + n1, 1 + n2, -1 + n3, 0, n5, 1, 0, 1, 0, 
      1 + n10, 1, 1 + n12, 1, 1])/(-1 + n1) - 
   (n2*j[p4, -1 + n1, 1 + n2, -1 + n3, 0, n5, 1, 1, 0, 0, 1 + n10, 1, 
      1 + n12, 1, 1])/(-1 + n1) + 
   (n2*j[p4, -1 + n1, 1 + n2, n3, 0, n5, 1, 0, 1, 0, 1 + n10, 1, n12, 1, 1])/
    (-1 + n1) - (n2*j[p4, -1 + n1, 1 + n2, n3, 0, n5, 1, 1, 0, 0, 1 + n10, 1, 
      n12, 1, 1])/(-1 + n1) + j[p4, n1, -1 + n2, n3, 0, n5, 1, 1, 1, 0, 
    1 + n10, 1, n12, 1, 1] + j[p4, n1, -1 + n2, n3, 0, n5, 1, 1, 1, 0, 
    1 + n10, 1, 1 + n12, 0, 1] - j[p4, n1, -1 + n2, n3, 0, n5, 1, 1, 1, 0, 
    1 + n10, 1, 1 + n12, 1, 1] - j[p4, n1, n2, -1 + n3, 0, n5, 1, 1, 0, 0, 
    1 + n10, 1, 1 + n12, 1, 1] + j[p4, n1, n2, -1 + n3, 0, n5, 1, 1, 1, 0, 
    1 + n10, 0, 1 + n12, 1, 1] - j[p4, n1, n2, n3, 0, n5, 1, 1, 0, 0, 
    1 + n10, 1, n12, 1, 1] + j[p4, n1, n2, n3, 0, n5, 1, 1, 1, 0, 1 + n10, 0, 
    n12, 1, 1], j[p4, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?NonPositive, (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, 
    (n7_)?Positive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n3 == 0 && n6 == 1 && 
    n7 == 1 && n8 == 1 && n10 != 0 -> 
  (n4*j[p4, -1 + n1, -1 + n2, 0, 1 + n4, n5, 1, 1, 1, n9, 1 + n10, 1, 0, 1, 
      1])/(11 - 4*d + n10 + 3*n2 + 2*n4 + 2*n5) + 
   j[p4, -1 + n1, n2, 0, n4, n5, 1, 0, 1, n9, 1 + n10, 1, 0, 2, 1]/
    (-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5) + 
   ((3 - d + 4*n10 - d*n10 + n10^2 + n2 + n10*n2 + n4 + n10*n4)*
     j[p4, -1 + n1, n2, 0, n4, n5, 1, 0, 1, n9, 2 + n10, 1, 0, 1, 1])/
    ((-3 + d)*(11 - 4*d + n10 + 3*n2 + 2*n4 + 2*n5)) - 
   j[p4, -1 + n1, n2, 0, n4, n5, 1, 0, 2, n9, 1 + n10, 1, 0, 1, 1]/
    (-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5) + 
   ((3 - d + 4*n10 - d*n10 + n10^2 + n2 + n10*n2 + n4 + n10*n4)*
     j[p4, -1 + n1, n2, 0, n4, n5, 1, 1, 0, n9, 2 + n10, 1, 0, 1, 1])/
    ((-3 + d)*(11 - 4*d + n10 + 3*n2 + 2*n4 + 2*n5)) + 
   ((36 - 24*d + 4*d^2 + 3*n1 - d*n1 + 17*n10 - 6*d*n10 + n1*n10 + n10^2 + 
      14*n2 - 5*d*n2 + n1*n2 + 3*n10*n2 + 2*n2^2 + 17*n4 - 6*d*n4 + n1*n4 + 
      3*n10*n4 + 4*n2*n4 + 2*n4^2 + 3*n5 - d*n5 + 2*n10*n5 + 2*n2*n5 + 
      2*n4*n5 + 6*n9 - 2*d*n9 + n10*n9 + n2*n9 + n4*n9)*
     j[p4, -1 + n1, n2, 0, n4, n5, 1, 1, 1, n9, 1 + n10, 1, 0, 1, 1])/
    ((-3 + d)*(-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5)) + 
   ((3 - d + 4*n10 - d*n10 + n10^2 + n2 + n10*n2 + n4 + n10*n4)*
     j[p4, -1 + n1, n2, 0, n4, n5, 1, 1, 1, n9, 2 + n10, 1, 0, 0, 1])/
    ((-3 + d)*(11 - 4*d + n10 + 3*n2 + 2*n4 + 2*n5)) + 
   ((3*n9 - d*n9 + n10*n9 + n2*n9 + n4*n9)*j[p4, -1 + n1, n2, 0, n4, n5, 1, 
      1, 1, 1 + n9, 1 + n10, 1, 0, 1, 0])/
    ((-3 + d)*(-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5)) + 
   (n5*j[p4, -1 + n1, n2, 0, n4, 1 + n5, 1, 0, 1, n9, 1 + n10, 1, 0, 1, 1])/
    (-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5) - 
   (n4*j[p4, -1 + n1, n2, 0, 1 + n4, -1 + n5, 1, 1, 1, n9, 1 + n10, 1, 0, 1, 
      1])/(11 - 4*d + n10 + 3*n2 + 2*n4 + 2*n5) + 
   (n4*j[p4, -1 + n1, n2, 0, 1 + n4, n5, 1, 0, 1, n9, 1 + n10, 1, 0, 1, 1])/
    (11 - 4*d + n10 + 3*n2 + 2*n4 + 2*n5) - 
   (n2*j[p4, -1 + n1, 1 + n2, 0, n4, n5, 1, 0, 1, n9, 1 + n10, 1, 0, 1, 1])/
    (11 - 4*d + n10 + 3*n2 + 2*n4 + 2*n5) + 
   (n2*j[p4, -1 + n1, 1 + n2, 0, n4, n5, 1, 1, 0, n9, 1 + n10, 1, 0, 1, 1])/
    (11 - 4*d + n10 + 3*n2 + 2*n4 + 2*n5) - 
   (n4*j[p4, n1, -2 + n2, 0, 1 + n4, n5, 1, 1, 1, n9, 1 + n10, 1, 0, 1, 1])/
    (11 - 4*d + n10 + 3*n2 + 2*n4 + 2*n5) + 
   (n4*j[p4, n1, -1 + n2, -1, 1 + n4, n5, 1, 1, 1, n9, 1 + n10, 1, 0, 1, 1])/
    (11 - 4*d + n10 + 3*n2 + 2*n4 + 2*n5) + 
   ((-3 + d - 4*n10 + d*n10 - n10^2 - n2 - n10*n2 - n4 - n10*n4)*
     j[p4, n1, -1 + n2, 0, n4, n5, 1, 1, 0, n9, 2 + n10, 1, 0, 1, 1])/
    ((-3 + d)*(11 - 4*d + n10 + 3*n2 + 2*n4 + 2*n5)) + 
   ((-21 + 13*d - 2*d^2 - 14*n10 + 5*d*n10 - n10^2 - 8*n2 + 3*d*n2 - 
      2*n10*n2 - n2^2 - 11*n4 + 4*d*n4 - 3*n10*n4 - 3*n2*n4 - 2*n4^2 - 
      n10*n5 - n2*n5 - n4*n5 - 6*n9 + 2*d*n9 - n10*n9 - n2*n9 - n4*n9)*
     j[p4, n1, -1 + n2, 0, n4, n5, 1, 1, 1, n9, 1 + n10, 1, 0, 1, 1])/
    ((-3 + d)*(-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5)) + 
   ((-3 + d - 4*n10 + d*n10 - n10^2 - n2 - n10*n2 - n4 - n10*n4)*
     j[p4, n1, -1 + n2, 0, n4, n5, 1, 1, 1, n9, 2 + n10, 0, 0, 1, 1])/
    ((-3 + d)*(11 - 4*d + n10 + 3*n2 + 2*n4 + 2*n5)) + 
   ((-3 + d - 4*n10 + d*n10 - n10^2 - n2 - n10*n2 - n4 - n10*n4)*
     j[p4, n1, -1 + n2, 0, n4, n5, 1, 1, 1, n9, 2 + n10, 1, 0, 0, 1])/
    ((-3 + d)*(11 - 4*d + n10 + 3*n2 + 2*n4 + 2*n5)) + 
   ((-3*n9 + d*n9 - n10*n9 - n2*n9 - n4*n9)*j[p4, n1, -1 + n2, 0, n4, n5, 1, 
      1, 1, 1 + n9, 1 + n10, 1, 0, 1, 0])/
    ((-3 + d)*(-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5)) + 
   ((6*n9 - 2*d*n9 + n10*n9 + n2*n9 + n4*n9)*j[p4, n1, -1 + n2, 0, n4, n5, 1, 
      1, 1, 1 + n9, 1 + n10, 1, 0, 1, 1])/
    ((-3 + d)*(-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5)) + 
   j[p4, n1, -1 + n2, 0, n4, n5, 1, 1, 2, n9, 1 + n10, 0, 0, 1, 1]/
    (-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5) - 
   j[p4, n1, -1 + n2, 0, n4, n5, 1, 1, 2, n9, 1 + n10, 1, 0, 0, 1]/
    (-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5) + 
   j[p4, n1, -1 + n2, 0, n4, n5, 1, 2, 1, n9, 1 + n10, 0, 0, 1, 1]/
    (-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5) + 
   ((3 - d + n10 + n2 + n4)*j[p4, n1, -1 + n2, 0, n4, n5, 1, 2, 1, n9, 
      1 + n10, 1, 0, 0, 1])/((-3 + d)*(-11 + 4*d - n10 - 3*n2 - 2*n4 - 
      2*n5)) + ((3 - d + n10 + n2 + n4)*j[p4, n1, -1 + n2, 0, n4, n5, 2, 1, 
      0, n9, 1 + n10, 1, 0, 1, 1])/((-3 + d)*(-11 + 4*d - n10 - 3*n2 - 2*n4 - 
      2*n5)) + ((6*n5 - 2*d*n5 + n10*n5 + n2*n5 + n4*n5)*
     j[p4, n1, -1 + n2, 0, n4, 1 + n5, 1, 1, 1, n9, 1 + n10, 1, 0, 0, 1])/
    ((-3 + d)*(-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5)) + 
   ((-6*n5 + 2*d*n5 - n10*n5 - n2*n5 - n4*n5)*j[p4, n1, -1 + n2, 0, n4, 
      1 + n5, 1, 1, 1, n9, 1 + n10, 1, 0, 1, 0])/
    ((-3 + d)*(-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5)) + 
   (2*n4*j[p4, n1, -1 + n2, 0, 1 + n4, -1 + n5, 1, 1, 1, n9, 1 + n10, 1, 0, 
      1, 1])/(11 - 4*d + n10 + 3*n2 + 2*n4 + 2*n5) + 
   (n4*j[p4, n1, -1 + n2, 0, 1 + n4, n5, 0, 1, 1, n9, 1 + n10, 1, 0, 1, 1])/
    (11 - 4*d + n10 + 3*n2 + 2*n4 + 2*n5) - 
   (n4*j[p4, n1, -1 + n2, 0, 1 + n4, n5, 1, 0, 1, n9, 1 + n10, 1, 0, 1, 1])/
    (11 - 4*d + n10 + 3*n2 + 2*n4 + 2*n5) - 
   (n4*j[p4, n1, -1 + n2, 0, 1 + n4, n5, 1, 1, 1, -1 + n9, 1 + n10, 1, 0, 1, 
      1])/(11 - 4*d + n10 + 3*n2 + 2*n4 + 2*n5) + 
   (n4*j[p4, n1, -1 + n2, 0, 1 + n4, n5, 1, 1, 1, n9, n10, 1, 0, 1, 1])/
    (11 - 4*d + n10 + 3*n2 + 2*n4 + 2*n5) - 
   (n4*j[p4, n1, -1 + n2, 0, 1 + n4, n5, 1, 1, 1, n9, 1 + n10, 0, 0, 1, 1])/
    (11 - 4*d + n10 + 3*n2 + 2*n4 + 2*n5) - 
   (n4*j[p4, n1, -1 + n2, 0, 1 + n4, n5, 1, 1, 1, n9, 1 + n10, 1, 0, 1, 0])/
    (11 - 4*d + n10 + 3*n2 + 2*n4 + 2*n5) + 
   ((3 - d + 4*n10 - d*n10 + n10^2 + n2 + n10*n2 + n4 + n10*n4)*
     j[p4, n1, n2, -1, n4, n5, 1, 0, 1, n9, 2 + n10, 1, 0, 1, 1])/
    ((-3 + d)*(11 - 4*d + n10 + 3*n2 + 2*n4 + 2*n5)) + 
   ((11 - 4*d + 2*n1 + 3*n10 + 3*n2 + 2*n4 + 2*n5 + 2*n9)*
     j[p4, n1, n2, -1, n4, n5, 1, 1, 1, n9, 1 + n10, 1, 0, 1, 1])/
    (-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5) + 
   ((-3 + d - 4*n10 + d*n10 - n10^2 - n2 - n10*n2 - n4 - n10*n4)*
     j[p4, n1, n2, -1, n4, n5, 1, 1, 1, n9, 2 + n10, 0, 0, 1, 1])/
    ((-3 + d)*(11 - 4*d + n10 + 3*n2 + 2*n4 + 2*n5)) + 
   ((-3 + d - n10 - n2 - n4)*j[p4, n1, n2, -1, n4, n5, 1, 2, 0, n9, 1 + n10, 
      1, 0, 1, 1])/((-3 + d)*(-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5)) + 
   ((3 - d + n10 + n2 + n4)*j[p4, n1, n2, -1, n4, n5, 2, 1, 0, n9, 1 + n10, 
      1, 0, 1, 1])/((-3 + d)*(-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5)) + 
   ((-3*n4 + d*n4 - n10*n4 - n2*n4 - n4^2)*j[p4, n1, n2, -1, 1 + n4, n5, 0, 
      1, 1, n9, 1 + n10, 1, 0, 1, 1])/((-3 + d)*(11 - 4*d + n10 + 3*n2 + 
      2*n4 + 2*n5)) + ((3*n4 - d*n4 + n10*n4 + n2*n4 + n4^2)*
     j[p4, n1, n2, -1, 1 + n4, n5, 1, 1, 0, n9, 1 + n10, 1, 0, 1, 1])/
    ((-3 + d)*(11 - 4*d + n10 + 3*n2 + 2*n4 + 2*n5)) + 
   ((-2*n10 + d*n10 - 2*n2 + d*n2 - 2*n4 + d*n4 - n10*n4 - n2*n4 - n4^2 - 
      n10*n5 - n2*n5 - n4*n5 - n10*n9 - n2*n9 - n4*n9)*
     j[p4, n1, n2, 0, -1 + n4, n5, 1, 1, 1, n9, 1 + n10, 1, 0, 1, 1])/
    ((-3 + d)*(-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5)) + 
   ((-3*n9 + d*n9 - n10*n9 - n2*n9 - n4*n9)*j[p4, n1, n2, 0, -1 + n4, n5, 1, 
      1, 1, 1 + n9, 1 + n10, 1, 0, 1, 0])/
    ((-3 + d)*(-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5)) + 
   ((6*n9 - 2*d*n9 + n10*n9 + n2*n9 + n4*n9)*j[p4, n1, n2, 0, -1 + n4, n5, 1, 
      1, 1, 1 + n9, 1 + n10, 1, 0, 1, 1])/
    ((-3 + d)*(-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5)) + 
   ((-3 + d - n10 - n2 - n4)*j[p4, n1, n2, 0, -1 + n4, n5, 2, 0, 1, n9, 
      1 + n10, 1, 0, 1, 1])/((-3 + d)*(-11 + 4*d - n10 - 3*n2 - 2*n4 - 
      2*n5)) + ((-3 + d - n10 - n2 - n4)*j[p4, n1, n2, 0, -1 + n4, n5, 2, 1, 
      0, n9, 1 + n10, 1, 0, 1, 1])/((-3 + d)*(-11 + 4*d - n10 - 3*n2 - 2*n4 - 
      2*n5)) + ((-3 + d - n10 - n2 - n4)*j[p4, n1, n2, 0, -1 + n4, n5, 2, 1, 
      1, n9, 1 + n10, 1, 0, 0, 1])/((-3 + d)*(-11 + 4*d - n10 - 3*n2 - 2*n4 - 
      2*n5)) + ((-3 + d - n10 - n2 - n4)*j[p4, n1, n2, 0, -1 + n4, n5, 2, 1, 
      1, n9, 1 + n10, 1, 0, 1, 0])/((-3 + d)*(-11 + 4*d - n10 - 3*n2 - 2*n4 - 
      2*n5)) + ((3*n5 - d*n5 + n10*n5 + n2*n5 + n4*n5)*
     j[p4, n1, n2, 0, -1 + n4, 1 + n5, 1, 1, 1, n9, 1 + n10, 1, 0, 0, 1])/
    ((-3 + d)*(-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5)) + 
   ((-3*n5 + d*n5 - n10*n5 - n2*n5 - n4*n5)*j[p4, n1, n2, 0, -1 + n4, 1 + n5, 
      1, 1, 1, n9, 1 + n10, 1, 0, 1, 0])/
    ((-3 + d)*(-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5)) + 
   ((-6 + 2*d - n10 - n2 - n4)*j[p4, n1, n2, 0, n4, -1 + n5, 1, 1, 1, n9, 
      1 + n10, 1, 0, 1, 2])/((-3 + d)*(-11 + 4*d - n10 - 3*n2 - 2*n4 - 
      2*n5)) + ((-6*n9 + 2*d*n9 - n10*n9 - n2*n9 - n4*n9)*
     j[p4, n1, n2, 0, n4, -1 + n5, 1, 1, 1, 1 + n9, 1 + n10, 1, 0, 1, 1])/
    ((-3 + d)*(-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5)) + 
   ((9 - 3*d + 7*n10 - 2*d*n10 + 4*n2 - d*n2 - 2*n4 + d*n4 + 3*n9 - d*n9)*
     j[p4, n1, n2, 0, n4, n5, 1, 0, 1, n9, 1 + n10, 1, 0, 1, 1])/
    ((-3 + d)*(-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5)) - 
   j[p4, n1, n2, 0, n4, n5, 1, 0, 1, n9, 1 + n10, 1, 0, 2, 1]/
    (-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5) + 
   j[p4, n1, n2, 0, n4, n5, 1, 0, 1, n9, 1 + n10, 2, -1, 1, 1]/
    (-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5) - 
   j[p4, n1, n2, 0, n4, n5, 1, 0, 1, n9, 1 + n10, 2, 0, 1, 1]/
    (-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5) + 
   ((3 - d + 4*n10 - d*n10 + n10^2 + n2 + n10*n2 + n4 + n10*n4)*
     j[p4, n1, n2, 0, n4, n5, 1, 0, 1, n9, 2 + n10, 1, -1, 1, 1])/
    ((-3 + d)*(11 - 4*d + n10 + 3*n2 + 2*n4 + 2*n5)) + 
   ((-1 - n10)*j[p4, n1, n2, 0, n4, n5, 1, 0, 1, n9, 2 + n10, 1, 0, 1, 1])/
    (11 - 4*d + n10 + 3*n2 + 2*n4 + 2*n5) + 
   (n9*j[p4, n1, n2, 0, n4, n5, 1, 0, 1, 1 + n9, 1 + n10, 1, 0, 1, 1])/
    (-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5) + 
   j[p4, n1, n2, 0, n4, n5, 1, 0, 2, n9, 1 + n10, 1, -1, 1, 1]/
    (-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5) + 
   ((-3 + d + 3*n1 - d*n1 + 2*n10 - d*n10 + 8*n2 - 3*d*n2 + 2*n10*n2 + 
      2*n2^2 - 4*n4 + d*n4 + 2*n2*n4 + 3*n9 - d*n9)*
     j[p4, n1, n2, 0, n4, n5, 1, 1, 0, n9, 1 + n10, 1, 0, 1, 1])/
    ((-3 + d)*(-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5)) + 
   ((3 - d + n10 + n2 + n4)*j[p4, n1, n2, 0, n4, n5, 1, 1, 0, n9, 1 + n10, 2, 
      -1, 1, 1])/((-3 + d)*(-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5)) + 
   ((-3 + d - n10 - n2 - n4)*j[p4, n1, n2, 0, n4, n5, 1, 1, 0, n9, 1 + n10, 
      2, 0, 1, 1])/((-3 + d)*(-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5)) + 
   (n9*j[p4, n1, n2, 0, n4, n5, 1, 1, 0, 1 + n9, 1 + n10, 1, 0, 1, 1])/
    (-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5) + 
   ((2 - d + n4 + n5 + n9)*j[p4, n1, n2, 0, n4, n5, 1, 1, 1, -1 + n9, 
      1 + n10, 1, 0, 1, 1])/(-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5) + 
   ((n1 + n10 - n4 + n9)*j[p4, n1, n2, 0, n4, n5, 1, 1, 1, n9, 1 + n10, 0, 0, 
      1, 1])/(-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5) + 
   ((-6 + 2*d + 3*n1 - d*n1 + 2*n10 - d*n10 + n1*n10 + 11*n2 - 4*d*n2 + 
      n1*n2 + 2*n10*n2 + 2*n2^2 - n4 + n1*n4 + 2*n2*n4)*
     j[p4, n1, n2, 0, n4, n5, 1, 1, 1, n9, 1 + n10, 1, 0, 0, 1])/
    ((-3 + d)*(-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5)) + 
   ((6 - 2*d + n10 + n2 + n4)*j[p4, n1, n2, 0, n4, n5, 1, 1, 1, n9, 1 + n10, 
      1, 0, 0, 2])/((-3 + d)*(-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5)) + 
   ((-3 + d - n10 - n2 + 2*n4 - d*n4 + n10*n4 + n2*n4 + n4^2)*
     j[p4, n1, n2, 0, n4, n5, 1, 1, 1, n9, 1 + n10, 1, 0, 1, 0])/
    ((-3 + d)*(11 - 4*d + n10 + 3*n2 + 2*n4 + 2*n5)) + 
   ((-24 + 17*d - 3*d^2 - 3*n1 + d*n1 - 11*n10 + 4*d*n10 - n1*n10 - n10^2 - 
      14*n2 + 5*d*n2 - n1*n2 - 3*n10*n2 - 2*n2^2 - 14*n4 + 5*d*n4 - n1*n4 - 
      3*n10*n4 - 4*n2*n4 - 2*n4^2 - 6*n5 + 2*d*n5 - 2*n10*n5 - 2*n2*n5 - 
      2*n4*n5 - 3*n9 + d*n9 - n10*n9 - n2*n9 - n4*n9)*
     j[p4, n1, n2, 0, n4, n5, 1, 1, 1, n9, 1 + n10, 1, 0, 1, 1])/
    ((-3 + d)*(-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5)) + 
   ((-3 + d - 4*n10 + d*n10 - n10^2 - n2 - n10*n2 - n4 - n10*n4)*
     j[p4, n1, n2, 0, n4, n5, 1, 1, 1, n9, 2 + n10, 0, -1, 1, 1])/
    ((-3 + d)*(11 - 4*d + n10 + 3*n2 + 2*n4 + 2*n5)) + 
   ((1 + n10)*j[p4, n1, n2, 0, n4, n5, 1, 1, 1, n9, 2 + n10, 0, 0, 1, 1])/
    (11 - 4*d + n10 + 3*n2 + 2*n4 + 2*n5) + 
   (n9*j[p4, n1, n2, 0, n4, n5, 1, 1, 1, 1 + n9, n10, 1, 0, 1, 0])/
    (-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5) - 
   (n9*j[p4, n1, n2, 0, n4, n5, 1, 1, 1, 1 + n9, 1 + n10, 0, 0, 1, 1])/
    (-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5) - 
   j[p4, n1, n2, 0, n4, n5, 1, 2, 0, n9, n10, 1, 0, 1, 1]/
    (-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5) - 
   j[p4, n1, n2, 0, n4, n5, 2, 1, 0, -1 + n9, 1 + n10, 1, 0, 1, 1]/
    (-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5) + 
   j[p4, n1, n2, 0, n4, n5, 2, 1, 0, n9, n10, 1, 0, 1, 1]/
    (-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5) + 
   ((3 - d + n10 + n2 + n4)*j[p4, n1, n2, 0, n4, n5, 2, 1, 0, n9, 1 + n10, 1, 
      -1, 1, 1])/((-3 + d)*(-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5)) - 
   (n5*j[p4, n1, n2, 0, n4, 1 + n5, 1, 0, 1, -1 + n9, 1 + n10, 1, 0, 1, 1])/
    (-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5) + 
   (n4*j[p4, n1, n2, 0, 1 + n4, -1 + n5, 1, 1, 1, n9, 1 + n10, 1, -1, 1, 1])/
    (11 - 4*d + n10 + 3*n2 + 2*n4 + 2*n5) - 
   (n4*j[p4, n1, n2, 0, 1 + n4, n5, 0, 1, 1, n9, n10, 1, 0, 1, 1])/
    (11 - 4*d + n10 + 3*n2 + 2*n4 + 2*n5) - 
   (n4*j[p4, n1, n2, 0, 1 + n4, n5, 1, 0, 1, n9, 1 + n10, 1, -1, 1, 1])/
    (11 - 4*d + n10 + 3*n2 + 2*n4 + 2*n5) + 
   (n4*j[p4, n1, n2, 0, 1 + n4, n5, 1, 1, 0, n9, n10, 1, 0, 1, 1])/
    (11 - 4*d + n10 + 3*n2 + 2*n4 + 2*n5) + 
   ((3*n2 - d*n2 + n10*n2 + n2^2 + n2*n4)*j[p4, n1, 1 + n2, -1, n4, n5, 1, 0, 
      1, n9, 1 + n10, 1, 0, 1, 1])/((-3 + d)*(11 - 4*d + n10 + 3*n2 + 2*n4 + 
      2*n5)) + ((-3*n2 + d*n2 - n10*n2 - n2^2 - n2*n4)*
     j[p4, n1, 1 + n2, -1, n4, n5, 1, 1, 0, n9, 1 + n10, 1, 0, 1, 1])/
    ((-3 + d)*(11 - 4*d + n10 + 3*n2 + 2*n4 + 2*n5)) + 
   (n2*j[p4, n1, 1 + n2, 0, n4, n5, 1, 0, 1, n9, n10, 1, 0, 1, 1])/
    (11 - 4*d + n10 + 3*n2 + 2*n4 + 2*n5) + 
   ((3*n2 - d*n2 + n10*n2 + n2^2 + n2*n4)*j[p4, n1, 1 + n2, 0, n4, n5, 1, 0, 
      1, n9, 1 + n10, 1, -1, 1, 1])/((-3 + d)*(11 - 4*d + n10 + 3*n2 + 2*n4 + 
      2*n5)) - (n2*j[p4, n1, 1 + n2, 0, n4, n5, 1, 1, 0, n9, n10, 1, 0, 1, 
      1])/(11 - 4*d + n10 + 3*n2 + 2*n4 + 2*n5) + 
   ((-3*n2 + d*n2 - n10*n2 - n2^2 - n2*n4)*j[p4, n1, 1 + n2, 0, n4, n5, 1, 1, 
      0, n9, 1 + n10, 1, -1, 1, 1])/((-3 + d)*(11 - 4*d + n10 + 3*n2 + 2*n4 + 
      2*n5)) - (n1*j[p4, 1 + n1, -1 + n2, 0, n4, n5, 1, 1, 1, n9, 1 + n10, 1, 
      0, 0, 1])/(-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5) + 
   (n1*j[p4, 1 + n1, n2, 0, n4, n5, 1, 1, 0, n9, 1 + n10, 1, 0, 1, 1])/
    (-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5) + 
   (n1*j[p4, 1 + n1, n2, 0, n4, n5, 1, 1, 1, n9, n10, 1, 0, 0, 1])/
    (-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5) - 
   (n1*j[p4, 1 + n1, n2, 0, n4, n5, 1, 1, 1, n9, 1 + n10, 0, 0, 1, 1])/
    (-11 + 4*d - n10 - 3*n2 - 2*n4 - 2*n5), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n5 == 1 && n6 == 1 && 
    n7 == 1 && n8 == 1 && n4 != 0 -> 
  (n9*j[p4, -1 + n1, -1 + n2, n3, 1 + n4, 1, 1, 1, 1, 1 + n9, n10, 1, 0, 1, 
      1])/(4 - d + n4 + n9) + (n9*j[p4, -1 + n1, n2, n3, n4, 1, 1, 1, 1, 
      1 + n9, n10, 1, 0, 1, 1])/(4 - d + n4 + n9) + 
   j[p4, n1, -1 + n2, n3, 1 + n4, 0, 1, 1, 1, n9, n10, 1, 0, 1, 2]/
    (-4 + d - n4 - n9) - (n9*j[p4, n1, -1 + n2, n3, 1 + n4, 0, 1, 1, 1, 
      1 + n9, n10, 1, 0, 1, 1])/(4 - d + n4 + n9) + 
   (n10*j[p4, n1, -1 + n2, n3, 1 + n4, 1, 1, 0, 1, n9, 1 + n10, 1, 0, 1, 1])/
    (-4 + d - n4 - n9) + j[p4, n1, -1 + n2, n3, 1 + n4, 1, 1, 1, 1, n9, n10, 
     1, 0, 0, 2]/(4 - d + n4 + n9) + ((7 - 2*d + n10 + n2 + n3 + 2*n4 + n9)*
     j[p4, n1, -1 + n2, n3, 1 + n4, 1, 1, 1, 1, n9, n10, 1, 0, 1, 1])/
    (-4 + d - n4 - n9) - (n10*j[p4, n1, -1 + n2, n3, 1 + n4, 1, 1, 1, 1, n9, 
      1 + n10, 0, 0, 1, 1])/(-4 + d - n4 - n9) + 
   j[p4, n1, -1 + n2, n3, 1 + n4, 1, 2, 1, 0, n9, n10, 1, 0, 1, 1]/
    (4 - d + n4 + n9) + (n3*j[p4, n1, -1 + n2, 1 + n3, 1 + n4, 1, 1, 0, 1, 
      n9, n10, 1, 0, 1, 1])/(-4 + d - n4 - n9) - 
   (n3*j[p4, n1, -1 + n2, 1 + n3, 1 + n4, 1, 1, 1, 1, n9, n10, 1, 0, 0, 1])/
    (-4 + d - n4 - n9) + j[p4, n1, n2, n3, n4, 0, 1, 1, 1, n9, n10, 1, 0, 1, 
     2]/(-4 + d - n4 - n9) - (n9*j[p4, n1, n2, n3, n4, 0, 1, 1, 1, 1 + n9, 
      n10, 1, 0, 1, 1])/(4 - d + n4 + n9) + 
   j[p4, n1, n2, n3, n4, 0, 2, 1, 1, n9, n10, 1, 0, 1, 1]/
    (-4 + d - n4 - n9) + j[p4, n1, n2, n3, n4, 1, 1, 1, 1, n9, n10, 1, 0, 0, 
     2]/(4 - d + n4 + n9) - (n4*j[p4, n1, n2, n3, 1 + n4, 0, 1, 1, 1, n9, 
      n10, 1, 0, 1, 1])/(4 - d + n4 + n9) + 
   ((1 - n2 + n4)*j[p4, n1, n2, n3, 1 + n4, 1, 1, 0, 1, n9, n10, 1, 0, 1, 1])/
    (4 - d + n4 + n9) + ((1 - n2)*j[p4, n1, n2, n3, 1 + n4, 1, 1, 1, 0, n9, 
      n10, 1, 0, 1, 1])/(-4 + d - n4 - n9), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n11 == 1 && n13 == 1 && n14 == 1 && n4 == 0 && n5 == 1 && n6 == 1 && 
    n7 == 1 && n8 == 1 &&  !(n12 == 0 || n2 == n3) -> 
  -((n10*j[p4, -1 + n1, -1 + n2, n3, 0, 1, 1, 1, 1, n9, 1 + n10, 1, 1 + n12, 
       1, 1])/(n2 - n3)) - (n9*j[p4, -1 + n1, -1 + n2, n3, 0, 1, 1, 1, 1, 
      1 + n9, n10, 1, 1 + n12, 1, 1])/(n2 - n3) - 
   (n10*j[p4, -1 + n1, n2, -1 + n3, 0, 1, 1, 1, 1, n9, 1 + n10, 1, 1 + n12, 
      1, 1])/(n2 - n3) - (n9*j[p4, -1 + n1, n2, -1 + n3, 0, 1, 1, 1, 1, 
      1 + n9, n10, 1, 1 + n12, 1, 1])/(n2 - n3) + 
   j[p4, n1, -1 + n2, n3, 0, 0, 1, 1, 1, n9, n10, 1, 1 + n12, 1, 2]/
    (n2 - n3) + (n9*j[p4, n1, -1 + n2, n3, 0, 0, 1, 1, 1, 1 + n9, n10, 1, 
      1 + n12, 1, 1])/(n2 - n3) + 
   (n10*j[p4, n1, -1 + n2, n3, 0, 1, 1, 0, 1, n9, 1 + n10, 1, 1 + n12, 1, 1])/
    (n2 - n3) + (n10*j[p4, n1, -1 + n2, n3, 0, 1, 1, 1, 0, n9, 1 + n10, 1, 
      1 + n12, 1, 1])/(n2 - n3) + j[p4, n1, -1 + n2, n3, 0, 1, 1, 1, 1, n9, 
     n10, 1, 1 + n12, 0, 2]/(-n2 + n3) - 
   (n10*j[p4, n1, -1 + n2, n3, 0, 1, 1, 1, 1, n9, 1 + n10, 1, n12, 1, 1])/
    (n2 - n3) + (n10*j[p4, n1, -1 + n2, n3, 0, 1, 1, 1, 1, n9, 1 + n10, 1, 
      1 + n12, 0, 1])/(n2 - n3) + 
   (n10*j[p4, n1, -1 + n2, n3, 0, 1, 1, 1, 1, n9, 1 + n10, 1, 1 + n12, 1, 1])/
    (n2 - n3) - (n9*j[p4, n1, -1 + n2, n3, 0, 1, 1, 1, 1, 1 + n9, n10, 1, 
      1 + n12, 1, 0])/(n2 - n3) + 
   (n9*j[p4, n1, -1 + n2, n3, 0, 1, 1, 1, 1, 1 + n9, n10, 1, 1 + n12, 1, 1])/
    (n2 - n3) + j[p4, n1, -1 + n2, n3, 0, 1, 1, 2, 1, n9, n10, 1, 1 + n12, 0, 
     1]/(n2 - n3) + j[p4, n1, -1 + n2, n3, 0, 2, 1, 1, 1, n9, n10, 1, 
     1 + n12, 0, 1]/(n2 - n3) + j[p4, n1, -1 + n2, n3, 0, 2, 1, 1, 1, n9, 
     n10, 1, 1 + n12, 1, 0]/(-n2 + n3) - 
   (n3*j[p4, n1, -1 + n2, 1 + n3, 0, 1, 1, 0, 1, n9, n10, 1, 1 + n12, 1, 1])/
    (-n2 + n3) + (n3*j[p4, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, n9, n10, 1, 
      1 + n12, 0, 1])/(-n2 + n3) + j[p4, n1, n2, -1 + n3, 0, 0, 1, 1, 1, n9, 
     n10, 1, 1 + n12, 1, 2]/(n2 - n3) + 
   (n9*j[p4, n1, n2, -1 + n3, 0, 0, 1, 1, 1, 1 + n9, n10, 1, 1 + n12, 1, 1])/
    (n2 - n3) + j[p4, n1, n2, -1 + n3, 0, 1, 1, 1, 1, n9, n10, 1, 1 + n12, 0, 
     2]/(-n2 + n3) + ((6 - 2*d + n10 + n2 + n3 + n9)*
     j[p4, n1, n2, -1 + n3, 0, 1, 1, 1, 1, n9, n10, 1, 1 + n12, 1, 1])/
    (n2 - n3) + j[p4, n1, n2, -1 + n3, 0, 1, 1, 2, 0, n9, n10, 1, 1 + n12, 1, 
     1]/(-n2 + n3) + ((-1 + n2)*j[p4, n1, n2, n3, 0, 1, 1, 0, 1, n9, n10, 1, 
      1 + n12, 1, 1])/(n2 - n3) + 
   ((1 + n2 - 2*n3)*j[p4, n1, n2, n3, 0, 1, 1, 1, 0, n9, n10, 1, 1 + n12, 1, 
      1])/(n2 - n3) + 2*j[p4, n1, n2, n3, 0, 1, 1, 1, 1, n9, n10, 1, 1 + n12, 
     0, 1], j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n11 == 1 && n13 == 1 && n14 == 1 && n2 == n3 && n4 == 0 && n5 == 1 && 
    n6 == 1 && n7 == 1 && n8 == 1 && n12 != 0 -> 
  ((-3*n10 + d*n10 - 2*n10^2 - n10*n3)*j[p4, -1 + n1, -1 + n3, n3, 0, 1, 1, 
      1, 1, n9, 1 + n10, 1, 1 + n12, 1, 1])/
    ((-1 + n3)*(2 - d + 2*n10 + 2*n3)) + 
   ((-n9 + d*n9 - 2*n10*n9 - 3*n3*n9)*j[p4, -1 + n1, -1 + n3, n3, 0, 1, 1, 1, 
      1, 1 + n9, n10, 1, 1 + n12, 1, 1])/((-1 + n3)*(2 - d + 2*n10 + 2*n3)) - 
   (n10*j[p4, -1 + n1, n3, -1 + n3, 0, 1, 1, 1, 1, n9, 1 + n10, 1, 1 + n12, 
      1, 1])/(2 - d + 2*n10 + 2*n3) + 
   ((3*n9 - d*n9 + n3*n9)*j[p4, -1 + n1, n3, -1 + n3, 0, 1, 1, 1, 1, 1 + n9, 
      n10, 1, 1 + n12, 1, 1])/((-1 + n3)*(2 - d + 2*n10 + 2*n3)) - 
   (2*n10*j[p4, n1, -1 + n3, -1 + n3, 0, 1, 1, 2, 1, n9, 1 + n10, 0, 1 + n12, 
      1, 1])/((-1 + n3)*(2 - d + 2*n10 + 2*n3)) + 
   ((-1 + d - 2*n10 - 3*n3)*j[p4, n1, -1 + n3, n3, 0, 0, 1, 1, 1, n9, n10, 1, 
      1 + n12, 1, 2])/((-2 + d - 2*n10 - 2*n3)*(-1 + n3)) + 
   ((n9 - d*n9 + 2*n10*n9 + 3*n3*n9)*j[p4, n1, -1 + n3, n3, 0, 0, 1, 1, 1, 
      1 + n9, n10, 1, 1 + n12, 1, 1])/((-1 + n3)*(2 - d + 2*n10 + 2*n3)) + 
   ((n10 - d*n10 + 2*n10^2 + 3*n10*n3)*j[p4, n1, -1 + n3, n3, 0, 1, 1, 0, 1, 
      n9, 1 + n10, 1, 1 + n12, 1, 1])/((-1 + n3)*(2 - d + 2*n10 + 2*n3)) + 
   ((3*n10 - d*n10 + 2*n10^2 + n10*n3)*j[p4, n1, -1 + n3, n3, 0, 1, 1, 1, 0, 
      n9, 1 + n10, 1, 1 + n12, 1, 1])/((-1 + n3)*(2 - d + 2*n10 + 2*n3)) + 
   ((1 - d + 2*n10 + 3*n3)*j[p4, n1, -1 + n3, n3, 0, 1, 1, 1, 1, n9, n10, 1, 
      1 + n12, 0, 2])/((-2 + d - 2*n10 - 2*n3)*(-1 + n3)) - 
   (2*n10*j[p4, n1, -1 + n3, n3, 0, 1, 1, 1, 1, n9, 1 + n10, 0, 1 + n12, 1, 
      1])/(2 - d + 2*n10 + 2*n3) + ((-3*n10 + d*n10 - 2*n10^2 - n10*n3)*
     j[p4, n1, -1 + n3, n3, 0, 1, 1, 1, 1, n9, 1 + n10, 1, n12, 1, 1])/
    ((-1 + n3)*(2 - d + 2*n10 + 2*n3)) + 
   ((3*n10 - d*n10 + 2*n10^2 + n10*n3)*j[p4, n1, -1 + n3, n3, 0, 1, 1, 1, 1, 
      n9, 1 + n10, 1, 1 + n12, 0, 1])/((-1 + n3)*(2 - d + 2*n10 + 2*n3)) + 
   ((3*n10 - d*n10 + 2*n10^2 + n10*n3)*j[p4, n1, -1 + n3, n3, 0, 1, 1, 1, 1, 
      n9, 1 + n10, 1, 1 + n12, 1, 1])/((-1 + n3)*(2 - d + 2*n10 + 2*n3)) + 
   ((-n9 + d*n9 - 2*n10*n9 - 3*n3*n9)*j[p4, n1, -1 + n3, n3, 0, 1, 1, 1, 1, 
      1 + n9, n10, 1, 1 + n12, 1, 0])/((-1 + n3)*(2 - d + 2*n10 + 2*n3)) + 
   ((n9 - d*n9 + 2*n10*n9 + 3*n3*n9)*j[p4, n1, -1 + n3, n3, 0, 1, 1, 1, 1, 
      1 + n9, n10, 1, 1 + n12, 1, 1])/((-1 + n3)*(2 - d + 2*n10 + 2*n3)) + 
   ((3 - d + 2*n10 + n3)*j[p4, n1, -1 + n3, n3, 0, 1, 1, 2, 1, n9, n10, 1, 
      1 + n12, 0, 1])/((-1 + n3)*(2 - d + 2*n10 + 2*n3)) + 
   ((-1 + d - 2*n10 - 3*n3)*j[p4, n1, -1 + n3, n3, 0, 2, 1, 1, 1, n9, n10, 1, 
      1 + n12, 0, 1])/((-2 + d - 2*n10 - 2*n3)*(-1 + n3)) + 
   ((1 - d + 2*n10 + 3*n3)*j[p4, n1, -1 + n3, n3, 0, 2, 1, 1, 1, n9, n10, 1, 
      1 + n12, 1, 0])/((-2 + d - 2*n10 - 2*n3)*(-1 + n3)) + 
   ((n3 - d*n3 + 2*n10*n3 + 3*n3^2)*j[p4, n1, -1 + n3, 1 + n3, 0, 1, 1, 0, 1, 
      n9, n10, 1, 1 + n12, 1, 1])/((-1 + n3)*(2 - d + 2*n10 + 2*n3)) + 
   ((n3 - d*n3 + 2*n10*n3 + 3*n3^2)*j[p4, n1, -1 + n3, 1 + n3, 0, 1, 1, 1, 1, 
      n9, n10, 1, 1 + n12, 0, 1])/((-2 + d - 2*n10 - 2*n3)*(-1 + n3)) + 
   ((-3 + d - n3)*j[p4, n1, n3, -1 + n3, 0, 0, 1, 1, 1, n9, n10, 1, 1 + n12, 
      1, 2])/((-1 + n3)*(2 - d + 2*n10 + 2*n3)) + 
   ((-3*n9 + d*n9 - n3*n9)*j[p4, n1, n3, -1 + n3, 0, 0, 1, 1, 1, 1 + n9, n10, 
      1, 1 + n12, 1, 1])/((-1 + n3)*(2 - d + 2*n10 + 2*n3)) + 
   ((4 - d)*j[p4, n1, n3, -1 + n3, 0, 0, 2, 1, 1, n9, n10, 1, 1 + n12, 1, 1])/
    ((-2 + d - 2*n10 - 2*n3)*(-1 + n3)) + 
   ((3 - d + n3)*j[p4, n1, n3, -1 + n3, 0, 1, 1, 1, 1, n9, n10, 1, 1 + n12, 
      0, 2])/((-1 + n3)*(2 - d + 2*n10 + 2*n3)) + 
   ((-10 + 6*d - d^2 + n10 - 4*n3 + 2*d*n3 - n10*n3 - 2*n3^2 - 3*n9 + d*n9 - 
      n3*n9)*j[p4, n1, n3, -1 + n3, 0, 1, 1, 1, 1, n9, n10, 1, 1 + n12, 1, 
      1])/((-1 + n3)*(2 - d + 2*n10 + 2*n3)) - 
   j[p4, n1, n3, -1 + n3, 0, 1, 1, 2, 0, n9, n10, 1, 1 + n12, 1, 1]/
    (2 - d + 2*n10 + 2*n3) + ((1 - d + 2*n10 + 3*n3)*
     j[p4, n1, n3, n3, 0, 1, 1, 0, 1, n9, n10, 1, 1 + n12, 1, 1])/
    (2 - d + 2*n10 + 2*n3) + ((3 - d + 2*n10 + n3)*j[p4, n1, n3, n3, 0, 1, 1, 
      1, 0, n9, n10, 1, 1 + n12, 1, 1])/(2 - d + 2*n10 + 2*n3) + 
   2*j[p4, n1, n3, n3, 0, 1, 1, 1, 1, n9, n10, 1, 1 + n12, 0, 1], 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n2 == 0 && 
    n3 == 0 && n4 == 0 && n9 == 0 && n7 != 1 -> 
  ((-2*n6 + d*n6 - 2*n6^2)*j[p4, 0, 0, 0, 0, n5, 1 + n6, -1 + n7, n8, 0, 0, 
     1, 0, 1, n14])/((d - 2*n7)*(-1 + n7)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n2 == 0 && n3 == 0 && 
    n4 == 0 && n8 == 1 && n9 == 0 && n7 != 1 -> 
  ((-2*n6 + d*n6 - 2*n6^2)*j[p4, n1, 0, 0, 0, n5, 1 + n6, -1 + n7, 1, 0, 0, 
     1, 0, 1, n14])/((d - 2*n7)*(-1 + n7)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n3 == 0 && n4 == 0 && n8 == 1 && n7 != 1 -> 
  ((-2*n6 + d*n6 - 2*n6^2)*j[p4, n1, 0, 0, 0, n5, 1 + n6, -1 + n7, 1, n9, 0, 
     1, 0, 1, 1])/((d - 2*n7)*(-1 + n7)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 0 && n11 == 1 && n12 == 0 && n2 == 0 && n3 == 0 && 
    n4 == 0 && n7 == 1 && n9 == 0 &&  !(n13 == 1 || n6 == 1) -> 
  -((n8*j[p4, 0, 0, 0, 0, n5, n6, 1, 1 + n8, 0, 0, 1, 0, -1 + n13, n14])/
     (-1 + n13)) + ((n8 - d*n8 + n6*n8)*j[p4, 0, 0, 0, 0, 1 + n5, -1 + n6, 1, 
      1 + n8, 0, 0, 1, 0, -1 + n13, n14])/((-1 + n13)*(-1 + n6)) + 
   (n8*j[p4, 0, 0, 0, 0, 1 + n5, n6, 0, 1 + n8, 0, 0, 1, 0, -1 + n13, n14])/
    (-1 + n13) + ((-1 + d - n13 - 2*n5 - n8)*j[p4, 0, 0, 0, 0, 1 + n5, n6, 1, 
      n8, 0, 0, 1, 0, -1 + n13, n14])/(-1 + n13) + 
   j[p4, 0, 0, 0, 0, 1 + n5, n6, 1, n8, 0, 0, 1, 0, n13, -1 + n14], 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 0 && n11 == 1 && n12 == 0 && n14 == 1 && n2 == 0 && 
    n3 == 0 && n4 == 0 && n7 == 1 &&  !(n13 == 1 || n6 == 1) -> 
  -((n8*j[p4, 0, 0, 0, 0, n5, n6, 1, 1 + n8, n9, 0, 1, 0, -1 + n13, 1])/
     (-1 + n13)) + ((n8 - d*n8 + n6*n8)*j[p4, 0, 0, 0, 0, 1 + n5, -1 + n6, 1, 
      1 + n8, n9, 0, 1, 0, -1 + n13, 1])/((-1 + n13)*(-1 + n6)) + 
   (n8*j[p4, 0, 0, 0, 0, 1 + n5, n6, 0, 1 + n8, n9, 0, 1, 0, -1 + n13, 1])/
    (-1 + n13) + ((-1 + d - n13 - 2*n5 - n8)*j[p4, 0, 0, 0, 0, 1 + n5, n6, 1, 
      n8, n9, 0, 1, 0, -1 + n13, 1])/(-1 + n13) + 
   j[p4, 0, 0, 0, 0, 1 + n5, n6, 1, n8, n9, 0, 1, 0, n13, 0], 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n2 == 0 && n3 == 0 && 
    n4 == 0 && n7 == 1 && n9 == 0 &&  !(n10 == 0 || n6 == 1) -> 
  ((-4 + d - 2*n10)*j[p4, 0, 0, 0, 0, n5, -1 + n6, 1, n8, 0, 1 + n10, 1, 0, 
      1, n14])/(2*(-1 + n6)) + 
   ((-4 + d)*j[p4, 0, 0, 0, 0, n5, -1 + n6, 2, n8, 0, 1 + n10, 0, 0, 1, n14])/
    (2*(-2 + d - n10 - n6)*(-1 + n6)) + 
   ((4 - d + 2*n10)*j[p4, 0, 0, 0, 0, n5, n6, 1, n8, -1, 1 + n10, 1, 0, 1, 
      n14])/(2*(2 - d + n10 + n6)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n2 == 0 && n4 == 0 && n7 == 1 &&  !(n3 == 0 || n6 == 1) -> 
  ((4 - d + 2*n3)*j[p4, 0, -1, 1 + n3, 0, n5, n6, 1, n8, n9, 0, 1, 0, 1, 1])/
    (-d + 2*n6) + ((-4 + d - 2*n3)*j[p4, 0, 0, 1 + n3, 0, -1 + n5, n6, 1, n8, 
      n9, 0, 1, 0, 1, 1])/(-d + 2*n6) + 
   ((-4 + 5*d - d^2 - 2*n3 + 2*d*n3 - 4*n5 + d*n5 - 2*n3*n5 - 4*n6 + d*n6 - 
      2*n3*n6 - 4*n9 + d*n9 - 2*n3*n9)*j[p4, 0, 0, 1 + n3, 0, n5, -1 + n6, 1, 
      n8, n9, 0, 1, 0, 1, 1])/((-1 + n6)*(-d + 2*n6)) + 
   ((-4*n9 + d*n9 - 2*n3*n9)*j[p4, 0, 0, 1 + n3, 0, n5, -1 + n6, 1, n8, 
      1 + n9, 0, 1, 0, 1, 0])/((-1 + n6)*(-d + 2*n6)) + 
   ((4*n9 - d*n9 + 2*n3*n9)*j[p4, 0, 0, 1 + n3, 0, n5, -1 + n6, 1, n8, 
      1 + n9, 0, 1, 0, 1, 1])/((-1 + n6)*(-d + 2*n6)) + 
   ((-4 + d)*j[p4, 0, 0, 1 + n3, 0, n5, -1 + n6, 2, n8, n9, 0, 1, 0, 0, 1])/
    ((d - 2*n6)*(-1 + n6)) + ((-4*n5 + d*n5 - 2*n3*n5)*
     j[p4, 0, 0, 1 + n3, 0, 1 + n5, -1 + n6, 1, n8, n9, 0, 1, 0, 0, 1])/
    ((d - 2*n6)*(-1 + n6)) + ((4*n5 - d*n5 + 2*n3*n5)*
     j[p4, 0, 0, 1 + n3, 0, 1 + n5, -1 + n6, 1, n8, n9, 0, 1, 0, 1, 0])/
    ((d - 2*n6)*(-1 + n6)) + ((-4 + d - 6*n3 + d*n3 - 2*n3^2)*
     j[p4, 0, 0, 2 + n3, 0, n5, -1 + n6, 0, n8, n9, 0, 1, 0, 1, 1])/
    ((d - 2*n6)*(-1 + n6)) + ((4 - d + 6*n3 - d*n3 + 2*n3^2)*
     j[p4, 0, 0, 2 + n3, 0, n5, -1 + n6, 1, n8, n9, 0, 1, 0, 0, 1])/
    ((d - 2*n6)*(-1 + n6)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 0 && n12 == 0 && n2 == 0 && n3 == 0 && n4 == 0 && 
    n7 == 1 && n8 == 1 && n9 == 0 &&  !(n13 == 1 || n6 == 1) -> 
  j[p4, 0, 0, 0, 0, n5, n6, 1, 2, 0, 0, n11, 0, -1 + n13, n14]/(1 - n13) + 
   ((1 - d + n6)*j[p4, 0, 0, 0, 0, 1 + n5, -1 + n6, 1, 2, 0, 0, n11, 0, 
      -1 + n13, n14])/((-1 + n13)*(-1 + n6)) + 
   j[p4, 0, 0, 0, 0, 1 + n5, n6, 0, 2, 0, 0, n11, 0, -1 + n13, n14]/
    (-1 + n13) + ((-2 + d - n13 - 2*n5)*j[p4, 0, 0, 0, 0, 1 + n5, n6, 1, 1, 
      0, 0, n11, 0, -1 + n13, n14])/(-1 + n13) + j[p4, 0, 0, 0, 0, 1 + n5, 
    n6, 1, 1, 0, 0, n11, 0, n13, -1 + n14], 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n2 == 0 && n4 == 0 && 
    n7 == 1 && n8 == 1 && n9 == 0 &&  !(n3 == 0 || n6 == 1) -> 
  ((4 - d + 2*n3)*j[p4, n1, -1, 1 + n3, 0, n5, n6, 1, 1, 0, 0, 1, 0, 1, n14])/
    (-d + 2*n6) + ((-4 + d - 2*n3)*j[p4, n1, 0, 1 + n3, 0, -1 + n5, n6, 1, 1, 
      0, 0, 1, 0, 1, n14])/(-d + 2*n6) + 
   ((-4 - 3*d + d^2 + 8*n14 - 2*d*n14 - 2*n3 - 2*d*n3 + 4*n14*n3 + 4*n5 - 
      d*n5 + 2*n3*n5 + 4*n6 - d*n6 + 2*n3*n6)*j[p4, n1, 0, 1 + n3, 0, n5, 
      -1 + n6, 1, 1, 0, 0, 1, 0, 1, n14])/((d - 2*n6)*(-1 + n6)) + 
   ((-4 + d)*j[p4, n1, 0, 1 + n3, 0, n5, -1 + n6, 2, 1, 0, 0, 1, 0, 0, n14])/
    ((d - 2*n6)*(-1 + n6)) + ((-4*n5 + d*n5 - 2*n3*n5)*
     j[p4, n1, 0, 1 + n3, 0, 1 + n5, -1 + n6, 1, 1, 0, 0, 1, 0, 0, n14])/
    ((d - 2*n6)*(-1 + n6)) + ((4*n5 - d*n5 + 2*n3*n5)*
     j[p4, n1, 0, 1 + n3, 0, 1 + n5, -1 + n6, 1, 1, 0, 0, 1, 0, 1, -1 + n14])/
    ((d - 2*n6)*(-1 + n6)) + ((-4 + d - 6*n3 + d*n3 - 2*n3^2)*
     j[p4, n1, 0, 2 + n3, 0, n5, -1 + n6, 0, 1, 0, 0, 1, 0, 1, n14])/
    ((d - 2*n6)*(-1 + n6)) + ((4 - d + 6*n3 - d*n3 + 2*n3^2)*
     j[p4, n1, 0, 2 + n3, 0, n5, -1 + n6, 1, 1, 0, 0, 1, 0, 0, n14])/
    ((d - 2*n6)*(-1 + n6)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n11 == 1 && n12 == 0 && n13 == 1 && n2 == 0 && n3 == 0 && n4 == 0 && 
    n7 == 1 && n8 == 1 && n9 == 0 &&  !(n10 == 0 || n6 == 1) -> 
  ((-4 + d - 2*n10)*j[p4, n1, 0, 0, 0, n5, -1 + n6, 1, 1, 0, 1 + n10, 1, 0, 
      1, n14])/(2*(-1 + n6)) + 
   ((-4 + d)*j[p4, n1, 0, 0, 0, n5, -1 + n6, 2, 1, 0, 1 + n10, 0, 0, 1, n14])/
    (2*(-2 + d - n10 - n6)*(-1 + n6)) + 
   ((4 - d + 2*n10)*j[p4, n1, 0, 0, 0, n5, n6, 1, 1, -1, 1 + n10, 1, 0, 1, 
      n14])/(2*(2 - d + n10 + n6)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n4 == 0 && n7 == 1 && n8 == 1 &&  !(n3 == 0 || n6 == 1) -> 
  ((4 - d + 2*n3)*j[p4, n1, -1, 1 + n3, 0, n5, n6, 1, 1, n9, 0, 1, 0, 1, 1])/
    (-d + 2*n6) + ((-4 + d - 2*n3)*j[p4, n1, 0, 1 + n3, 0, -1 + n5, n6, 1, 1, 
      n9, 0, 1, 0, 1, 1])/(-d + 2*n6) + 
   ((-4 + 5*d - d^2 - 2*n3 + 2*d*n3 - 4*n5 + d*n5 - 2*n3*n5 - 4*n6 + d*n6 - 
      2*n3*n6 - 4*n9 + d*n9 - 2*n3*n9)*j[p4, n1, 0, 1 + n3, 0, n5, -1 + n6, 
      1, 1, n9, 0, 1, 0, 1, 1])/((-1 + n6)*(-d + 2*n6)) + 
   ((-4*n9 + d*n9 - 2*n3*n9)*j[p4, n1, 0, 1 + n3, 0, n5, -1 + n6, 1, 1, 
      1 + n9, 0, 1, 0, 1, 0])/((-1 + n6)*(-d + 2*n6)) + 
   ((4*n9 - d*n9 + 2*n3*n9)*j[p4, n1, 0, 1 + n3, 0, n5, -1 + n6, 1, 1, 
      1 + n9, 0, 1, 0, 1, 1])/((-1 + n6)*(-d + 2*n6)) + 
   ((-4 + d)*j[p4, n1, 0, 1 + n3, 0, n5, -1 + n6, 2, 1, n9, 0, 1, 0, 0, 1])/
    ((d - 2*n6)*(-1 + n6)) + ((-4*n5 + d*n5 - 2*n3*n5)*
     j[p4, n1, 0, 1 + n3, 0, 1 + n5, -1 + n6, 1, 1, n9, 0, 1, 0, 0, 1])/
    ((d - 2*n6)*(-1 + n6)) + ((4*n5 - d*n5 + 2*n3*n5)*
     j[p4, n1, 0, 1 + n3, 0, 1 + n5, -1 + n6, 1, 1, n9, 0, 1, 0, 1, 0])/
    ((d - 2*n6)*(-1 + n6)) + ((-4 + d - 6*n3 + d*n3 - 2*n3^2)*
     j[p4, n1, 0, 2 + n3, 0, n5, -1 + n6, 0, 1, n9, 0, 1, 0, 1, 1])/
    ((d - 2*n6)*(-1 + n6)) + ((4 - d + 6*n3 - d*n3 + 2*n3^2)*
     j[p4, n1, 0, 2 + n3, 0, n5, -1 + n6, 1, 1, n9, 0, 1, 0, 0, 1])/
    ((d - 2*n6)*(-1 + n6)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && n3 == 0 && 
    n4 == 0 && n7 == 1 && n8 == 1 &&  !(n10 == 0 || n6 == 1) -> 
  ((-4 + d - 2*n10)*j[p4, n1, 0, 0, 0, n5, -1 + n6, 1, 1, n9, 1 + n10, 1, 0, 
      1, 1])/(2*(-1 + n6)) + ((-4 + d)*j[p4, n1, 0, 0, 0, n5, -1 + n6, 2, 1, 
      n9, 1 + n10, 0, 0, 1, 1])/(2*(-2 + d - n10 - n6)*(-1 + n6)) + 
   ((4 - d + 2*n10)*j[p4, n1, 0, 0, 0, n5, n6, 1, 1, -1 + n9, 1 + n10, 1, 0, 
      1, 1])/(2*(2 - d + n10 + n6)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 0 && n12 == 0 && n2 == 0 && n3 == 0 && n4 == 0 && 
    n6 == 1 && n8 == 1 && n9 == 0 && n7 != 1 -> 
  ((-4 + d)*j[p4, 0, 0, 0, 0, n5, 2, -1 + n7, 1, 0, 0, n11, 0, n13, n14])/
   ((d - 2*n7)*(-1 + n7)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 0 && n11 == 1 && n13 == 1 && n14 == 1 && n2 == 0 && n3 == 0 && 
    n4 == 0 && n6 == 1 && n8 == 1 && n7 != 1 -> 
  ((-4 + d)*j[p4, n1, 0, 0, 0, n5, 2, -1 + n7, 1, n9, 0, 1, n12, 1, 1])/
   ((d - 2*n7)*(-1 + n7)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 0 && n12 == 0 && n14 == 1 && n3 == 0 && n4 == 0 && 
    n6 == 1 && n7 == 1 && n9 == 0 &&  !(n11 == 1 || n8 == 1) -> 
  (n13*j[p4, 0, n2, 0, 0, -1 + n5, 1, 2, -1 + n8, 0, 0, -1 + n11, 0, 1 + n13, 
      1])/((-1 + n11)*(-1 + n8)) + j[p4, 0, n2, 0, 0, -1 + n5, 1, 2, n8, 0, 
     0, -1 + n11, 0, n13, 1]/(-1 + n11) + 
   j[p4, 0, n2, 0, 0, n5, 0, 2, n8, 0, 0, -1 + n11, 0, n13, 1]/(1 - n11) + 
   ((-1 - d + 2*n13 + n5 + n8)*j[p4, 0, n2, 0, 0, n5, 1, 1, -1 + n8, 0, 0, 
      n11, 0, n13, 1])/(-1 + n8) + 
   ((2 - 3*d + n11 + 2*n13 + n2 + 2*n5 + 2*n8)*j[p4, 0, n2, 0, 0, n5, 1, 1, 
      n8, 0, 0, -1 + n11, 0, n13, 1])/(-1 + n11) + 
   j[p4, 0, n2, 0, 0, n5, 1, 1, n8, 0, 0, n11, 0, -1 + n13, 1] + 
   ((-1 - d + n13 + n2 + 2*n5 + n8)*j[p4, 0, n2, 0, 0, n5, 1, 2, -1 + n8, 0, 
      0, -1 + n11, 0, n13, 1])/((-1 + n11)*(-1 + n8)) - 
   (n13*j[p4, 0, n2, 0, 0, n5, 1, 2, -1 + n8, 0, 0, -1 + n11, 0, 1 + n13, 0])/
    ((-1 + n11)*(-1 + n8)) + (n5*j[p4, 0, n2, 0, 0, 1 + n5, 1, 1, -1 + n8, 0, 
      0, n11, 0, -1 + n13, 1])/(-1 + n8) - 
   (n5*j[p4, 0, n2, 0, 0, 1 + n5, 1, 1, -1 + n8, 0, 0, n11, 0, n13, 0])/
    (-1 + n8) - (n2*j[p4, 0, 1 + n2, -1, 0, n5, 1, 1, -1 + n8, 0, 0, n11, 0, 
      n13, 1])/(-1 + n8) + (n2*j[p4, 0, 1 + n2, 0, 0, -1 + n5, 1, 1, n8, 0, 
      0, -1 + n11, 0, n13, 1])/(-1 + n11) + 
   (n2*j[p4, 0, 1 + n2, 0, 0, -1 + n5, 1, 2, -1 + n8, 0, 0, -1 + n11, 0, n13, 
      1])/((-1 + n11)*(-1 + n8)) - 
   (n2*j[p4, 0, 1 + n2, 0, 0, n5, 0, 1, n8, 0, 0, -1 + n11, 0, n13, 1])/
    (-1 + n11) - (n2*j[p4, 0, 1 + n2, 0, 0, n5, 0, 2, -1 + n8, 0, 0, 
      -1 + n11, 0, n13, 1])/((-1 + n11)*(-1 + n8)) + 
   (n2*j[p4, 0, 1 + n2, 0, 0, n5, 1, 0, -1 + n8, 0, 0, n11, 0, n13, 1])/
    (-1 + n8) + (n2*j[p4, 0, 1 + n2, 0, 0, n5, 1, 1, -2 + n8, 0, 0, n11, 0, 
      n13, 1])/(-1 + n8) - (n2*j[p4, 0, 1 + n2, 0, 0, n5, 1, 1, -1 + n8, 0, 
      0, n11, -1, n13, 1])/(-1 + n8) + 
   (2*n2*j[p4, 0, 1 + n2, 0, 0, n5, 1, 1, -1 + n8, 0, 0, n11, 0, -1 + n13, 
      1])/(-1 + n8), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?NonPositive, (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, 
    (n7_)?Positive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 0 && n12 == 0 && n13 == 1 && n3 == 0 && n4 == 0 && 
    n6 == 1 && n7 == 1 && n9 == 0 && n14 != 1 -> 
  ((4 - d)*j[p4, 0, n2, 0, 0, n5, 2, 1, n8, 0, 0, n11, 0, 1, -1 + n14])/
    (2*(-1 + n14)*(-3 + d - n2)) + j[p4, 0, n2, 0, 0, 1 + n5, 1, 1, n8, 0, 0, 
    n11, 0, 0, n14] + ((-6 + 3*d - 2*n14 - 2*n2 - 4*n5)*
     j[p4, 0, n2, 0, 0, 1 + n5, 1, 1, n8, 0, 0, n11, 0, 1, -1 + n14])/
    (2*(-1 + n14)) + ((-4 + d)*j[p4, 0, n2, 0, 0, 1 + n5, 1, 2, -1 + n8, 0, 
      0, n11, 0, 1, -1 + n14])/(2*(-1 + n14)*(-3 + d - n2)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 0 && n12 == 0 && n13 == 1 && n14 == 1 && n4 == 0 && 
    n6 == 1 && n7 == 1 && n9 == 0 &&  !(n11 == 1 || n8 == 1) -> 
  -((n3*j[p4, 0, -1 + n2, 1 + n3, 0, n5, 1, 1, n8, 0, 0, -1 + n11, 0, 1, 1])/
     (-1 + n11)) + j[p4, 0, n2, n3, 0, -1 + n5, 1, 2, -1 + n8, 0, 0, 
     -1 + n11, 0, 2, 1]/((-1 + n11)*(-1 + n8)) + 
   j[p4, 0, n2, n3, 0, -1 + n5, 1, 2, n8, 0, 0, -1 + n11, 0, 1, 1]/
    (-1 + n11) + j[p4, 0, n2, n3, 0, n5, 0, 2, n8, 0, 0, -1 + n11, 0, 1, 1]/
    (1 - n11) + ((1 - d + n3 + n5 + n8)*j[p4, 0, n2, n3, 0, n5, 1, 1, 
      -1 + n8, 0, 0, n11, 0, 1, 1])/(-1 + n8) + 
   ((4 - 3*d + n11 + n2 + n3 + 2*n5 + 2*n8)*j[p4, 0, n2, n3, 0, n5, 1, 1, n8, 
      0, 0, -1 + n11, 0, 1, 1])/(-1 + n11) + j[p4, 0, n2, n3, 0, n5, 1, 1, 
    n8, 0, 0, n11, 0, 0, 1] + ((-d + n2 + 2*n5 + n8)*
     j[p4, 0, n2, n3, 0, n5, 1, 2, -1 + n8, 0, 0, -1 + n11, 0, 1, 1])/
    ((-1 + n11)*(-1 + n8)) - j[p4, 0, n2, n3, 0, n5, 1, 2, -1 + n8, 0, 0, 
     -1 + n11, 0, 2, 0]/((-1 + n11)*(-1 + n8)) + 
   (n5*j[p4, 0, n2, n3, 0, 1 + n5, 1, 1, -1 + n8, 0, 0, n11, 0, 0, 1])/
    (-1 + n8) - (n5*j[p4, 0, n2, n3, 0, 1 + n5, 1, 1, -1 + n8, 0, 0, n11, 0, 
      1, 0])/(-1 + n8) - (n3*j[p4, 0, n2, 1 + n3, -1, n5, 1, 1, n8, 0, 0, 
      -1 + n11, 0, 1, 1])/(-1 + n11) + 
   (n3*j[p4, 0, n2, 1 + n3, -1, n5, 1, 2, -1 + n8, 0, 0, -1 + n11, 0, 1, 1])/
    ((-1 + n11)*(-1 + n8)) - (n3*j[p4, 0, n2, 1 + n3, 0, n5, 1, 0, -1 + n8, 
      0, 0, n11, 0, 1, 1])/(-1 + n8) + 
   (n3*j[p4, 0, n2, 1 + n3, 0, n5, 1, 0, n8, 0, 0, -1 + n11, 0, 1, 1])/
    (-1 + n11) + ((-3*n3 + 2*n3*n8)*j[p4, 0, n2, 1 + n3, 0, n5, 1, 1, 
      -1 + n8, 0, 0, -1 + n11, 0, 1, 1])/((-1 + n11)*(-1 + n8)) + 
   (n3*j[p4, 0, n2, 1 + n3, 0, n5, 1, 1, -1 + n8, 0, 0, n11, 0, 0, 1])/
    (-1 + n8) - (n3*j[p4, 0, n2, 1 + n3, 0, n5, 1, 1, n8, 0, 0, -1 + n11, -1, 
      1, 1])/(-1 + n11) + (n3*j[p4, 0, n2, 1 + n3, 0, n5, 1, 1, n8, 0, 0, 
      -1 + n11, 0, 0, 1])/(-1 + n11) + 
   (n3*j[p4, 0, n2, 1 + n3, 0, n5, 1, 1, n8, 0, 0, -1 + n11, 0, 1, 0])/
    (-1 + n11) + (n3*j[p4, 0, n2, 1 + n3, 0, n5, 1, 2, -1 + n8, 0, 0, 
      -1 + n11, 0, 0, 1])/((-1 + n11)*(-1 + n8)) - 
   (n3*j[p4, 0, n2, 1 + n3, 0, n5, 1, 2, -1 + n8, 0, 0, -1 + n11, 0, 1, 0])/
    ((-1 + n11)*(-1 + n8)) - (n2*j[p4, 0, 1 + n2, -1 + n3, 0, n5, 1, 1, 
      -1 + n8, 0, 0, n11, 0, 1, 1])/(-1 + n8) + 
   (n2*j[p4, 0, 1 + n2, n3, 0, -1 + n5, 1, 1, n8, 0, 0, -1 + n11, 0, 1, 1])/
    (-1 + n11) + (n2*j[p4, 0, 1 + n2, n3, 0, -1 + n5, 1, 2, -1 + n8, 0, 0, 
      -1 + n11, 0, 1, 1])/((-1 + n11)*(-1 + n8)) - 
   (n2*j[p4, 0, 1 + n2, n3, 0, n5, 0, 1, n8, 0, 0, -1 + n11, 0, 1, 1])/
    (-1 + n11) - (n2*j[p4, 0, 1 + n2, n3, 0, n5, 0, 2, -1 + n8, 0, 0, 
      -1 + n11, 0, 1, 1])/((-1 + n11)*(-1 + n8)) + 
   (n2*j[p4, 0, 1 + n2, n3, 0, n5, 1, 0, -1 + n8, 0, 0, n11, 0, 1, 1])/
    (-1 + n8) + (n2*j[p4, 0, 1 + n2, n3, 0, n5, 1, 1, -2 + n8, 0, 0, n11, 0, 
      1, 1])/(-1 + n8) - (n2*j[p4, 0, 1 + n2, n3, 0, n5, 1, 1, -1 + n8, 0, 0, 
      n11, -1, 1, 1])/(-1 + n8) + 
   (2*n2*j[p4, 0, 1 + n2, n3, 0, n5, 1, 1, -1 + n8, 0, 0, n11, 0, 0, 1])/
    (-1 + n8), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n11 == 1 && n12 == 0 && n2 == 0 && n3 == 0 && n4 == 0 && 
    n6 == 1 && n7 == 1 && n9 == 0 &&  !(n14 == 1 || n8 == 1) -> 
  (n10*j[p4, -1, 0, 0, 0, 1 + n5, 1, 1, n8, 0, 1 + n10, 1, 0, n13, -1 + n14])/
    (-1 + n14) - (n10*j[p4, 0, -1, 0, 0, 1 + n5, 1, 1, n8, 0, 1 + n10, 1, 0, 
      n13, -1 + n14])/(-1 + n14) - 
   (n13*j[p4, 0, 0, 0, 0, n5, 1, 2, -1 + n8, 0, n10, 1, 0, 1 + n13, 
      -1 + n14])/((-1 + n14)*(-1 + n8)) + 
   j[p4, 0, 0, 0, 0, n5, 1, 2, n8, 0, n10, 1, 0, n13, -1 + n14]/(1 - n14) + 
   (n10*j[p4, 0, 0, 0, 0, 1 + n5, 0, 1, n8, 0, 1 + n10, 1, 0, n13, -1 + n14])/
    (-1 + n14) + j[p4, 0, 0, 0, 0, 1 + n5, 0, 2, n8, 0, n10, 1, 0, n13, 
     -1 + n14]/(-1 + n14) + ((4 - d)*j[p4, 0, 0, 0, 0, 1 + n5, 1, 1, -1 + n8, 
      0, n10, 2, 0, n13, -1 + n14])/(2*(-1 + n14)*(-1 + n8)) - 
   (n10*j[p4, 0, 0, 0, 0, 1 + n5, 1, 1, n8, -1, 1 + n10, 1, 0, n13, 
      -1 + n14])/(-1 + n14) + j[p4, 0, 0, 0, 0, 1 + n5, 1, 1, n8, 0, n10, 1, 
    0, -1 + n13, n14] + ((-4 + 3*d - 2*n14 - 4*n5 - 2*n8)*
     j[p4, 0, 0, 0, 0, 1 + n5, 1, 1, n8, 0, n10, 1, 0, n13, -1 + n14])/
    (2*(-1 + n14)) + ((-6 + 3*d - 2*n13 - 4*n5 - 2*n8)*
     j[p4, 0, 0, 0, 0, 1 + n5, 1, 2, -1 + n8, 0, n10, 1, 0, n13, -1 + n14])/
    (2*(-1 + n14)*(-1 + n8)) + 
   (n13*j[p4, 0, 0, 0, 0, 1 + n5, 1, 2, -1 + n8, 0, n10, 1, 0, 1 + n13, 
      -2 + n14])/((-1 + n14)*(-1 + n8)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n3 == 0 && n4 == 0 && 
    n6 == 1 && n7 == 1 && n9 == 0 && n14 != 1 -> 
  ((4*n10 - d*n10 + 2*n10^2)*j[p4, -1, n2, 0, 0, 1 + n5, 1, 1, n8, 0, 
      1 + n10, 1, 0, 1, -1 + n14])/(2*(-1 + n14)*(3 - d + n10 + n2)) - 
   (n10*j[p4, 0, -1 + n2, 0, 0, 1 + n5, 1, 2, n8, 0, 1 + n10, 0, 0, 1, 
      -1 + n14])/((-1 + n14)*(3 - d + n10 + n2)) + 
   ((4 - d)*j[p4, 0, n2, 0, 0, n5, 2, 1, n8, 0, n10, 1, 0, 1, -1 + n14])/
    (2*(-1 + n14)*(-3 + d - n10 - n2)) + j[p4, 0, n2, 0, 0, 1 + n5, 1, 1, n8, 
    0, n10, 1, 0, 0, n14] + ((-6 + 3*d - 2*n10 - 2*n14 - 2*n2 - 4*n5)*
     j[p4, 0, n2, 0, 0, 1 + n5, 1, 1, n8, 0, n10, 1, 0, 1, -1 + n14])/
    (2*(-1 + n14)) + ((-4 + d - 2*n10)*j[p4, 0, n2, 0, 0, 1 + n5, 1, 2, 
      -1 + n8, 0, n10, 1, 0, 1, -1 + n14])/(2*(-1 + n14)*
     (-3 + d - n10 - n2)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n3 == 0 && 
    n4 == 0 && n6 == 1 && n7 == 1 &&  !(n2 == 0 || n8 == 1) -> 
  j[p4, -1, 1 + n2, 0, 0, -1 + n5, 1, 1, -1 + n8, n9, n10, 1, 0, 2, 1]/
    (1 - n8) + j[p4, -1, 1 + n2, 0, 0, n5, 0, 1, n8, n9, n10, 1, 0, 1, 1] + 
   j[p4, -1, 1 + n2, 0, 0, n5, 1, 0, -1 + n8, n9, n10, 1, 0, 2, 1]/
    (-1 + n8) + ((d - n5 - n8)*j[p4, -1, 1 + n2, 0, 0, n5, 1, 1, -1 + n8, n9, 
      n10, 1, 0, 1, 1])/(-1 + n8) + j[p4, -1, 1 + n2, 0, 0, n5, 1, 1, 
     -1 + n8, n9, n10, 1, 0, 2, 0]/(-1 + n8) + 
   (n5*j[p4, -1, 1 + n2, 0, 0, 1 + n5, 1, 0, -1 + n8, n9, n10, 1, 0, 1, 1])/
    (-1 + n8) + ((1 + n2)*j[p4, -1, 2 + n2, 0, -1, n5, 1, 1, -1 + n8, n9, 
      n10, 1, 0, 1, 1])/(-1 + n8) + 
   ((-1 - n2)*j[p4, -1, 2 + n2, 0, 0, -1 + n5, 1, 1, -1 + n8, n9, n10, 1, 0, 
      1, 1])/(-1 + n8) + ((1 + n2)*j[p4, -1, 2 + n2, 0, 0, n5, 0, 1, -1 + n8, 
      n9, n10, 1, 0, 1, 1])/(-1 + n8) + 
   ((1 + n2)*j[p4, -1, 2 + n2, 0, 0, n5, 1, 0, -1 + n8, n9, n10, 1, 0, 1, 1])/
    (-1 + n8) + ((-1 - n2)*j[p4, -1, 2 + n2, 0, 0, n5, 1, 1, -2 + n8, n9, 
      n10, 1, 0, 1, 1])/(-1 + n8) + 
   (n10*j[p4, 0, -1 + n2, 0, 0, n5, 1, 1, -1 + n8, n9, 1 + n10, 1, 0, 1, 1])/
    (-1 + n8) + (n10*j[p4, 0, n2, -1, 0, n5, 1, 1, -1 + n8, n9, 1 + n10, 1, 
      0, 1, 1])/(-1 + n8) + (n10*j[p4, 0, n2, 0, -1, n5, 1, 1, -1 + n8, n9, 
      1 + n10, 1, 0, 1, 1])/(-1 + n8) + 
   j[p4, 0, n2, 0, 0, -1 + n5, 1, 2, -1 + n8, n9, n10, 1, 0, 1, 1]/
    (-1 + n8) - (n10*j[p4, 0, n2, 0, 0, n5, 0, 1, -1 + n8, n9, 1 + n10, 1, 0, 
      1, 1])/(-1 + n8) - (n10*j[p4, 0, n2, 0, 0, n5, 1, 0, -1 + n8, n9, 
      1 + n10, 1, 0, 1, 1])/(-1 + n8) - 
   (n10*j[p4, 0, n2, 0, 0, n5, 1, 1, -2 + n8, n9, 1 + n10, 1, 0, 1, 1])/
    (-1 + n8) + (n10*j[p4, 0, n2, 0, 0, n5, 1, 1, -1 + n8, -1 + n9, 1 + n10, 
      1, 0, 1, 1])/(-1 + n8) + ((3 - d + n2 + n5 + 2*n9)*
     j[p4, 0, n2, 0, 0, n5, 1, 1, -1 + n8, n9, n10, 1, 0, 1, 1])/(-1 + n8) + 
   (n10*j[p4, 0, n2, 0, 0, n5, 1, 1, -1 + n8, n9, 1 + n10, 1, -1, 1, 1])/
    (-1 + n8) - (n10*j[p4, 0, n2, 0, 0, n5, 1, 1, -1 + n8, n9, 1 + n10, 1, 0, 
      0, 1])/(-1 + n8) - (n10*j[p4, 0, n2, 0, 0, n5, 1, 1, -1 + n8, n9, 
      1 + n10, 1, 0, 1, 1])/(-1 + n8) + 
   (n9*j[p4, 0, n2, 0, 0, n5, 1, 1, -1 + n8, 1 + n9, n10, 1, 0, 1, 0])/
    (-1 + n8) - (2*n9*j[p4, 0, n2, 0, 0, n5, 1, 1, -1 + n8, 1 + n9, n10, 1, 
      0, 1, 1])/(-1 + n8) + j[p4, 0, n2, 0, 0, n5, 1, 2, -1 + n8, n9, n10, 1, 
     0, 0, 1]/(1 - n8) + j[p4, 0, n2, 0, 0, n5, 2, 1, -1 + n8, n9, n10, 1, 0, 
     1, 1]/(1 - n8) - (n5*j[p4, 0, n2, 0, 0, 1 + n5, 1, 1, -1 + n8, n9, n10, 
      1, 0, 0, 1])/(-1 + n8) + 
   (n5*j[p4, 0, n2, 0, 0, 1 + n5, 1, 1, -1 + n8, n9, n10, 1, 0, 1, 0])/
    (-1 + n8) + (n10*j[p4, 0, 1 + n2, -1, -1, n5, 1, 1, -1 + n8, n9, 1 + n10, 
      1, 0, 1, 1])/(-1 + n8) + j[p4, 0, 1 + n2, -1, 0, -1 + n5, 1, 2, 
     -1 + n8, n9, n10, 1, 0, 1, 1]/(-1 + n8) - 
   (n10*j[p4, 0, 1 + n2, -1, 0, n5, 0, 1, -1 + n8, n9, 1 + n10, 1, 0, 1, 1])/
    (-1 + n8) + (n10*j[p4, 0, 1 + n2, -1, 0, n5, 1, 1, -1 + n8, -1 + n9, 
      1 + n10, 1, 0, 1, 1])/(-1 + n8) + 
   ((5 - 3*d + n10 + 2*n2 + 2*n5 + 2*n8 + 2*n9)*j[p4, 0, 1 + n2, -1, 0, n5, 
      1, 1, -1 + n8, n9, n10, 1, 0, 1, 1])/(-1 + n8) + 
   j[p4, 0, 1 + n2, -1, 0, n5, 1, 2, -2 + n8, n9, n10, 1, 0, 1, 1]/
    (-1 + n8) - (n10*j[p4, 0, 1 + n2, 0, -1, n5, 1, 0, -1 + n8, n9, 1 + n10, 
      1, 0, 1, 1])/(-1 + n8) - 
   (n10*j[p4, 0, 1 + n2, 0, -1, n5, 1, 1, -2 + n8, n9, 1 + n10, 1, 0, 1, 1])/
    (-1 + n8) + ((d - n10 + n2 - n8)*j[p4, 0, 1 + n2, 0, -1, n5, 1, 1, 
      -1 + n8, n9, n10, 1, 0, 1, 1])/(-1 + n8) + 
   (n10*j[p4, 0, 1 + n2, 0, -1, n5, 1, 1, -1 + n8, n9, 1 + n10, 1, -1, 1, 1])/
    (-1 + n8) - (n10*j[p4, 0, 1 + n2, 0, -1, n5, 1, 1, -1 + n8, n9, 1 + n10, 
      1, 0, 0, 1])/(-1 + n8) - 
   (n10*j[p4, 0, 1 + n2, 0, -1, n5, 1, 1, -1 + n8, n9, 1 + n10, 1, 0, 1, 1])/
    (-1 + n8) + (n9*j[p4, 0, 1 + n2, 0, -1, n5, 1, 1, -1 + n8, 1 + n9, n10, 
      1, 0, 1, 0])/(-1 + n8) - 
   (2*n9*j[p4, 0, 1 + n2, 0, -1, n5, 1, 1, -1 + n8, 1 + n9, n10, 1, 0, 1, 1])/
    (-1 + n8) - j[p4, 0, 1 + n2, 0, -1, n5, 1, 1, n8, n9, n10, 0, 0, 1, 1] + 
   j[p4, 0, 1 + n2, 0, -1, n5, 1, 2, -2 + n8, n9, n10, 1, 0, 1, 1]/(1 - n8) + 
   j[p4, 0, 1 + n2, 0, -1, n5, 1, 2, -1 + n8, n9, n10, 1, 0, 0, 1]/(1 - n8) + 
   j[p4, 0, 1 + n2, 0, -1, n5, 2, 1, -1 + n8, n9, n10, 1, 0, 1, 1]/(1 - n8) - 
   (n5*j[p4, 0, 1 + n2, 0, -1, 1 + n5, 1, 1, -1 + n8, n9, n10, 1, 0, 0, 1])/
    (-1 + n8) + (n5*j[p4, 0, 1 + n2, 0, -1, 1 + n5, 1, 1, -1 + n8, n9, n10, 
      1, 0, 1, 0])/(-1 + n8) + j[p4, 0, 1 + n2, 0, 0, -1 + n5, 1, 1, -1 + n8, 
     -1 + n9, n10, 1, 0, 1, 2]/(1 - n8) + 
   ((1 + n2 - n9)*j[p4, 0, 1 + n2, 0, 0, -1 + n5, 1, 1, -1 + n8, n9, n10, 1, 
      0, 1, 1])/(-1 + n8) + j[p4, 0, 1 + n2, 0, 0, -1 + n5, 1, 1, -1 + n8, 
     n9, n10, 1, 0, 1, 2]/(-1 + n8) + 
   (n9*j[p4, 0, 1 + n2, 0, 0, -1 + n5, 1, 1, -1 + n8, 1 + n9, n10, 1, 0, 1, 
      1])/(-1 + n8) + j[p4, 0, 1 + n2, 0, 0, -1 + n5, 2, 1, -1 + n8, n9, n10, 
     1, 0, 1, 1]/(-1 + n8) + ((-1 - n2)*j[p4, 0, 1 + n2, 0, 0, n5, 0, 1, 
      -1 + n8, n9, n10, 1, 0, 1, 1])/(-1 + n8) - 
   (n10*j[p4, 0, 1 + n2, 0, 0, n5, 1, 0, -1 + n8, -1 + n9, 1 + n10, 1, 0, 1, 
      1])/(-1 + n8) + ((-1 - n2 - n9)*j[p4, 0, 1 + n2, 0, 0, n5, 1, 0, 
      -1 + n8, n9, n10, 1, 0, 1, 1])/(-1 + n8) + 
   j[p4, 0, 1 + n2, 0, 0, n5, 1, 0, -1 + n8, n9, n10, 1, 0, 2, 1]/(1 - n8) + 
   (n9*j[p4, 0, 1 + n2, 0, 0, n5, 1, 0, -1 + n8, 1 + n9, n10, 1, 0, 1, 1])/
    (-1 + n8) + j[p4, 0, 1 + n2, 0, 0, n5, 1, 0, n8, n9, n10, 1, 0, 1, 1] + 
   ((-1 - n2 - n9)*j[p4, 0, 1 + n2, 0, 0, n5, 1, 1, -2 + n8, n9, n10, 1, 0, 
      1, 1])/(-1 + n8) + (n9*j[p4, 0, 1 + n2, 0, 0, n5, 1, 1, -2 + n8, 
      1 + n9, n10, 1, 0, 1, 1])/(-1 + n8) + 
   j[p4, 0, 1 + n2, 0, 0, n5, 1, 1, -1 + n8, -1 + n9, n10, 1, 0, 0, 2]/
    (-1 + n8) + ((-3 + d - n10 - n2 - n5)*j[p4, 0, 1 + n2, 0, 0, n5, 1, 1, 
      -1 + n8, -1 + n9, n10, 1, 0, 1, 1])/(-1 + n8) + 
   (n10*j[p4, 0, 1 + n2, 0, 0, n5, 1, 1, -1 + n8, -1 + n9, 1 + n10, 0, 0, 1, 
      1])/(-1 + n8) - (n9*j[p4, 0, 1 + n2, 0, 0, n5, 1, 1, -1 + n8, n9, 
      -1 + n10, 1, 0, 1, 1])/(-1 + n8) + 
   (n9*j[p4, 0, 1 + n2, 0, 0, n5, 1, 1, -1 + n8, n9, n10, 0, 0, 1, 1])/
    (-1 + n8) + ((1 + n2)*j[p4, 0, 1 + n2, 0, 0, n5, 1, 1, -1 + n8, n9, n10, 
      1, -1, 1, 1])/(-1 + n8) + 
   ((-1 - 2*n2)*j[p4, 0, 1 + n2, 0, 0, n5, 1, 1, -1 + n8, n9, n10, 1, 0, 0, 
      1])/(-1 + n8) + j[p4, 0, 1 + n2, 0, 0, n5, 1, 1, -1 + n8, n9, n10, 1, 
     0, 0, 2]/(1 - n8) + j[p4, 0, 1 + n2, 0, 0, n5, 1, 1, -1 + n8, n9, n10, 
     1, 0, 1, 0]/(1 - n8) + ((-2 - n2 + n8)*j[p4, 0, 1 + n2, 0, 0, n5, 1, 1, 
      -1 + n8, n9, n10, 1, 0, 1, 1])/(-1 + n8) + 
   (n9*j[p4, 0, 1 + n2, 0, 0, n5, 1, 1, -1 + n8, 1 + n9, -1 + n10, 1, 0, 1, 
      1])/(-1 + n8) - (n9*j[p4, 0, 1 + n2, 0, 0, n5, 1, 1, -1 + n8, 1 + n9, 
      n10, 0, 0, 1, 1])/(-1 + n8) + j[p4, 0, 1 + n2, 0, 0, n5, 2, 1, -2 + n8, 
     n9, n10, 1, 0, 1, 1]/(-1 + n8) - 
   (n5*j[p4, 0, 1 + n2, 0, 0, 1 + n5, 1, 0, -1 + n8, -1 + n9, n10, 1, 0, 1, 
      1])/(-1 + n8) + ((1 + n2)*j[p4, 0, 2 + n2, -1, -1, n5, 1, 1, -1 + n8, 
      n9, n10, 1, 0, 1, 1])/(-1 + n8) + 
   ((1 + n2)*j[p4, 0, 2 + n2, -1, 0, -1 + n5, 1, 1, -1 + n8, n9, n10, 1, 0, 
      1, 1])/(-1 + n8) + ((-1 - n2)*j[p4, 0, 2 + n2, -1, 0, n5, 0, 1, 
      -1 + n8, n9, n10, 1, 0, 1, 1])/(-1 + n8) + 
   ((-1 - n2)*j[p4, 0, 2 + n2, 0, -1, n5, 1, 0, -1 + n8, n9, n10, 1, 0, 1, 
      1])/(-1 + n8) + ((-1 - n2)*j[p4, 0, 2 + n2, 0, -1, n5, 1, 1, -2 + n8, 
      n9, n10, 1, 0, 1, 1])/(-1 + n8) + 
   ((-1 - n2)*j[p4, 0, 2 + n2, 0, -1, n5, 1, 1, -1 + n8, n9, -1 + n10, 1, 0, 
      1, 1])/(-1 + n8) + ((1 + n2)*j[p4, 0, 2 + n2, 0, -1, n5, 1, 1, -1 + n8, 
      n9, n10, 1, -1, 1, 1])/(-1 + n8) + 
   ((-2 - 2*n2)*j[p4, 0, 2 + n2, 0, -1, n5, 1, 1, -1 + n8, n9, n10, 1, 0, 0, 
      1])/(-1 + n8) + ((-1 - n2)*j[p4, 0, 2 + n2, 0, 0, n5, 1, 0, -1 + n8, 
      -1 + n9, n10, 1, 0, 1, 1])/(-1 + n8) + 
   ((-1 - n2)*j[p4, 0, 2 + n2, 0, 0, n5, 1, 0, -1 + n8, n9, n10, 1, 0, 1, 1])/
    (-1 + n8) + ((1 + n2)*j[p4, 0, 2 + n2, 0, 0, n5, 1, 1, -2 + n8, -1 + n9, 
      n10, 1, 0, 1, 1])/(-1 + n8) + 
   ((1 + n2)*j[p4, 0, 2 + n2, 0, 0, n5, 1, 1, -2 + n8, n9, n10, 1, 0, 1, 1])/
    (-1 + n8), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 0 && n12 == 0 && n14 == 1 && n3 == 0 && n6 == 1 && 
    n7 == 1 && n8 == 1 && n9 == 0 &&  !(n11 == 1 || n4 == 0 || n5 == 1) -> 
  -j[p4, 0, -1 + n2, 0, 1 + n4, n5, 1, 1, 1, 0, 0, n11, 0, n13, 1] + 
   j[p4, 0, -1 + n2, 0, 1 + n4, n5, 1, 1, 2, 0, 0, -1 + n11, 0, n13, 1]/
    (1 - n11) + ((n13 + n13*n4)*j[p4, 0, n2, -1, 2 + n4, -1 + n5, 1, 1, 1, 0, 
      0, -1 + n11, 0, 1 + n13, 1])/((-1 + n11)*(-1 + n5)) + 
   ((1 + n4)*j[p4, 0, n2, -1, 2 + n4, -1 + n5, 1, 1, 1, 0, 0, n11, 0, n13, 
      1])/(-1 + n5) + j[p4, 0, n2, 0, n4, n5, 1, 1, 2, 0, 0, -1 + n11, 0, 
     n13, 1]/(1 - n11) + (n13*j[p4, 0, n2, 0, 1 + n4, -2 + n5, 1, 2, 1, 0, 0, 
      -1 + n11, 0, 1 + n13, 1])/((-1 + n11)*(-1 + n5)) + 
   j[p4, 0, n2, 0, 1 + n4, -2 + n5, 1, 2, 2, 0, 0, -1 + n11, 0, n13, 1]/
    ((-1 + n11)*(-1 + n5)) - j[p4, 0, n2, 0, 1 + n4, -1 + n5, 0, 2, 2, 0, 0, 
     -1 + n11, 0, n13, 1]/((-1 + n11)*(-1 + n5)) - 
   (n13*j[p4, 0, n2, 0, 1 + n4, -1 + n5, 1, 1, 0, 0, 0, n11, 0, 1 + n13, 1])/
    (-1 + n5) + ((-8*n13 + 3*d*n13 - n11*n13 - 2*n13*n2 - 2*n13*n4 - n13*n5)*
     j[p4, 0, n2, 0, 1 + n4, -1 + n5, 1, 1, 1, 0, 0, -1 + n11, 0, 1 + n13, 
      1])/((-1 + n11)*(-1 + n5)) + ((-3 + n13 - n2 - n4 + n5)*
     j[p4, 0, n2, 0, 1 + n4, -1 + n5, 1, 1, 1, 0, 0, n11, 0, n13, 1])/
    (-1 + n5) + (n13*j[p4, 0, n2, 0, 1 + n4, -1 + n5, 1, 1, 1, 0, 0, n11, 0, 
      1 + n13, 1])/(-1 + n5) + ((-2*d + n11 + 2*n13 + 2*n5)*
     j[p4, 0, n2, 0, 1 + n4, -1 + n5, 1, 1, 2, 0, 0, -1 + n11, 0, n13, 1])/
    ((-1 + n11)*(-1 + n5)) + j[p4, 0, n2, 0, 1 + n4, -1 + n5, 1, 1, 2, 0, 0, 
     n11, 0, -1 + n13, 1]/(-1 + n5) + j[p4, 0, n2, 0, 1 + n4, -1 + n5, 1, 1, 
     2, 0, 0, n11, 0, n13, 1]/(1 - n5) + 
   ((-d + n13 + n2 + n4 + 2*n5)*j[p4, 0, n2, 0, 1 + n4, -1 + n5, 1, 2, 1, 0, 
      0, -1 + n11, 0, n13, 1])/((-1 + n11)*(-1 + n5)) - 
   (n13*j[p4, 0, n2, 0, 1 + n4, -1 + n5, 1, 2, 1, 0, 0, -1 + n11, 0, 1 + n13, 
      0])/((-1 + n11)*(-1 + n5)) + j[p4, 0, n2, 0, 1 + n4, n5, 0, 1, 1, 0, 0, 
    n11, 0, n13, 1] + j[p4, 0, n2, 0, 1 + n4, n5, 0, 1, 2, 0, 0, -1 + n11, 0, 
     n13, 1]/(-1 + n11) + j[p4, 0, n2, 0, 1 + n4, n5, 1, 0, 1, 0, 0, n11, 0, 
    n13, 1] + j[p4, 0, n2, 0, 1 + n4, n5, 1, 0, 2, 0, 0, -1 + n11, 0, n13, 1]/
    (-1 + n11) + (n13*j[p4, 0, n2, 0, 1 + n4, n5, 1, 1, 1, 0, 0, -1 + n11, 0, 
      n13, 1])/(-1 + n11) - (n13*j[p4, 0, n2, 0, 1 + n4, n5, 1, 1, 1, 0, 0, 
      -1 + n11, 0, 1 + n13, 0])/(-1 + n11) + j[p4, 0, n2, 0, 1 + n4, n5, 1, 
    1, 1, 0, 0, n11, 0, -1 + n13, 1] - j[p4, 0, n2, 0, 1 + n4, n5, 1, 1, 1, 
    0, 0, n11, 0, n13, 0] + ((n13 + n13*n4)*j[p4, 0, n2, 0, 2 + n4, -2 + n5, 
      1, 1, 1, 0, 0, -1 + n11, 0, 1 + n13, 1])/((-1 + n11)*(-1 + n5)) + 
   ((1 + n4)*j[p4, 0, n2, 0, 2 + n4, -2 + n5, 1, 1, 1, 0, 0, n11, 0, n13, 1])/
    (-1 + n5) + ((1 + n4)*j[p4, 0, n2, 0, 2 + n4, -2 + n5, 1, 2, 1, 0, 0, 
      -1 + n11, 0, n13, 1])/((-1 + n11)*(-1 + n5)) + 
   ((1 + n4)*j[p4, 0, n2, 0, 2 + n4, -1 + n5, 0, 1, 1, 0, 0, n11, 0, n13, 1])/
    (-1 + n5) + ((-n13 - n13*n4)*j[p4, 0, n2, 0, 2 + n4, -1 + n5, 1, 0, 1, 0, 
      0, -1 + n11, 0, 1 + n13, 1])/((-1 + n11)*(-1 + n5)) + 
   ((-1 - n4)*j[p4, 0, n2, 0, 2 + n4, -1 + n5, 1, 0, 1, 0, 0, n11, 0, n13, 
      1])/(-1 + n5) + ((-1 - n4)*j[p4, 0, n2, 0, 2 + n4, -1 + n5, 1, 1, 0, 0, 
      0, n11, 0, n13, 1])/(-1 + n5) + 
   ((-1 - n4)*j[p4, 0, n2, 0, 2 + n4, -1 + n5, 1, 1, 1, 0, 0, -1 + n11, 0, 
      n13, 1])/((-1 + n11)*(-1 + n5)) + 
   ((-n13 - n13*n4)*j[p4, 0, n2, 0, 2 + n4, -1 + n5, 1, 1, 1, 0, 0, -1 + n11, 
      0, 1 + n13, 0])/((-1 + n11)*(-1 + n5)) + 
   ((-1 - n4)*j[p4, 0, n2, 0, 2 + n4, -1 + n5, 1, 1, 1, 0, 0, n11, 0, n13, 
      0])/(-1 + n5) - (n13*n2*j[p4, 0, 1 + n2, -1, 1 + n4, -1 + n5, 1, 1, 1, 
      0, 0, -1 + n11, 0, 1 + n13, 1])/((-1 + n11)*(-1 + n5)) - 
   (n2*j[p4, 0, 1 + n2, -1, 1 + n4, -1 + n5, 1, 1, 1, 0, 0, n11, 0, n13, 1])/
    (-1 + n5) + (n2*j[p4, 0, 1 + n2, 0, 1 + n4, -2 + n5, 1, 1, 2, 0, 0, 
      -1 + n11, 0, n13, 1])/((-1 + n11)*(-1 + n5)) + 
   (n2*j[p4, 0, 1 + n2, 0, 1 + n4, -2 + n5, 1, 2, 1, 0, 0, -1 + n11, 0, n13, 
      1])/((-1 + n11)*(-1 + n5)) - 
   (n2*j[p4, 0, 1 + n2, 0, 1 + n4, -1 + n5, 0, 1, 2, 0, 0, -1 + n11, 0, n13, 
      1])/((-1 + n11)*(-1 + n5)) - 
   (n2*j[p4, 0, 1 + n2, 0, 1 + n4, -1 + n5, 0, 2, 1, 0, 0, -1 + n11, 0, n13, 
      1])/((-1 + n11)*(-1 + n5)) + 
   (n13*n2*j[p4, 0, 1 + n2, 0, 1 + n4, -1 + n5, 1, 0, 1, 0, 0, -1 + n11, 0, 
      1 + n13, 1])/((-1 + n11)*(-1 + n5)) + 
   (2*n2*j[p4, 0, 1 + n2, 0, 1 + n4, -1 + n5, 1, 0, 1, 0, 0, n11, 0, n13, 1])/
    (-1 + n5) + (n2*j[p4, 0, 1 + n2, 0, 1 + n4, -1 + n5, 1, 0, 2, 0, 0, 
      -1 + n11, 0, n13, 1])/((-1 + n11)*(-1 + n5)) + 
   (n13*n2*j[p4, 0, 1 + n2, 0, 1 + n4, -1 + n5, 1, 1, 0, 0, 0, -1 + n11, 0, 
      1 + n13, 1])/((-1 + n11)*(-1 + n5)) - 
   (n13*n2*j[p4, 0, 1 + n2, 0, 1 + n4, -1 + n5, 1, 1, 1, 0, 0, -1 + n11, -1, 
      1 + n13, 1])/((-1 + n11)*(-1 + n5)) + 
   ((-n2 + 2*n13*n2)*j[p4, 0, 1 + n2, 0, 1 + n4, -1 + n5, 1, 1, 1, 0, 0, 
      -1 + n11, 0, n13, 1])/((-1 + n11)*(-1 + n5)) - 
   (n2*j[p4, 0, 1 + n2, 0, 1 + n4, -1 + n5, 1, 1, 1, 0, 0, n11, -1, n13, 1])/
    (-1 + n5) + (2*n2*j[p4, 0, 1 + n2, 0, 1 + n4, -1 + n5, 1, 1, 1, 0, 0, 
      n11, 0, -1 + n13, 1])/(-1 + n5), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 0 && n12 == 0 && n13 == 1 && n14 == 1 && n6 == 1 && 
    n7 == 1 && n8 == 1 && n9 == 0 &&  !(n11 == 1 || n4 == 0 || n5 == 1) -> 
  -j[p4, 0, -1 + n2, n3, 1 + n4, n5, 1, 1, 1, 0, 0, n11, 0, 1, 1] + 
   j[p4, 0, -1 + n2, n3, 1 + n4, n5, 1, 1, 2, 0, 0, -1 + n11, 0, 1, 1]/
    (1 - n11) + (n3*j[p4, 0, -1 + n2, 1 + n3, 1 + n4, -1 + n5, 1, 1, 1, 0, 0, 
      n11, 0, 1, 1])/(-1 + n5) + 
   ((1 + n4)*j[p4, 0, n2, -1 + n3, 2 + n4, -1 + n5, 1, 1, 1, 0, 0, -1 + n11, 
      0, 2, 1])/((-1 + n11)*(-1 + n5)) + 
   ((1 + n4)*j[p4, 0, n2, -1 + n3, 2 + n4, -1 + n5, 1, 1, 1, 0, 0, n11, 0, 1, 
      1])/(-1 + n5) + j[p4, 0, n2, n3, n4, n5, 1, 1, 2, 0, 0, -1 + n11, 0, 1, 
     1]/(1 - n11) + j[p4, 0, n2, n3, 1 + n4, -2 + n5, 1, 2, 1, 0, 0, 
     -1 + n11, 0, 2, 1]/((-1 + n11)*(-1 + n5)) + 
   j[p4, 0, n2, n3, 1 + n4, -2 + n5, 1, 2, 2, 0, 0, -1 + n11, 0, 1, 1]/
    ((-1 + n11)*(-1 + n5)) - j[p4, 0, n2, n3, 1 + n4, -1 + n5, 0, 2, 2, 0, 0, 
     -1 + n11, 0, 1, 1]/((-1 + n11)*(-1 + n5)) + 
   j[p4, 0, n2, n3, 1 + n4, -1 + n5, 1, 1, 0, 0, 0, n11, 0, 2, 1]/(1 - n5) + 
   ((-8 + 3*d - n11 - 2*n2 - n3 - 2*n4 - n5)*j[p4, 0, n2, n3, 1 + n4, 
      -1 + n5, 1, 1, 1, 0, 0, -1 + n11, 0, 2, 1])/((-1 + n11)*(-1 + n5)) + 
   ((-2 - n2 + n3 - n4 + n5)*j[p4, 0, n2, n3, 1 + n4, -1 + n5, 1, 1, 1, 0, 0, 
      n11, 0, 1, 1])/(-1 + n5) + j[p4, 0, n2, n3, 1 + n4, -1 + n5, 1, 1, 1, 
     0, 0, n11, 0, 2, 1]/(-1 + n5) + 
   ((2 - 2*d + n11 + n3 + 2*n5)*j[p4, 0, n2, n3, 1 + n4, -1 + n5, 1, 1, 2, 0, 
      0, -1 + n11, 0, 1, 1])/((-1 + n11)*(-1 + n5)) + 
   j[p4, 0, n2, n3, 1 + n4, -1 + n5, 1, 1, 2, 0, 0, n11, 0, 0, 1]/(-1 + n5) + 
   j[p4, 0, n2, n3, 1 + n4, -1 + n5, 1, 1, 2, 0, 0, n11, 0, 1, 1]/(1 - n5) + 
   ((1 - d + n2 + n4 + 2*n5)*j[p4, 0, n2, n3, 1 + n4, -1 + n5, 1, 2, 1, 0, 0, 
      -1 + n11, 0, 1, 1])/((-1 + n11)*(-1 + n5)) - 
   j[p4, 0, n2, n3, 1 + n4, -1 + n5, 1, 2, 1, 0, 0, -1 + n11, 0, 2, 0]/
    ((-1 + n11)*(-1 + n5)) + j[p4, 0, n2, n3, 1 + n4, n5, 0, 1, 1, 0, 0, n11, 
    0, 1, 1] + j[p4, 0, n2, n3, 1 + n4, n5, 0, 1, 2, 0, 0, -1 + n11, 0, 1, 1]/
    (-1 + n11) + j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, 1, 0, 0, n11, 0, 1, 1] + 
   j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, 2, 0, 0, -1 + n11, 0, 1, 1]/
    (-1 + n11) + j[p4, 0, n2, n3, 1 + n4, n5, 1, 1, 1, 0, 0, -1 + n11, 0, 1, 
     1]/(-1 + n11) + j[p4, 0, n2, n3, 1 + n4, n5, 1, 1, 1, 0, 0, -1 + n11, 0, 
     2, 0]/(1 - n11) + j[p4, 0, n2, n3, 1 + n4, n5, 1, 1, 1, 0, 0, n11, 0, 0, 
    1] - j[p4, 0, n2, n3, 1 + n4, n5, 1, 1, 1, 0, 0, n11, 0, 1, 0] + 
   ((1 + n4)*j[p4, 0, n2, n3, 2 + n4, -2 + n5, 1, 1, 1, 0, 0, -1 + n11, 0, 2, 
      1])/((-1 + n11)*(-1 + n5)) + 
   ((1 + n4)*j[p4, 0, n2, n3, 2 + n4, -2 + n5, 1, 1, 1, 0, 0, n11, 0, 1, 1])/
    (-1 + n5) + ((1 + n4)*j[p4, 0, n2, n3, 2 + n4, -2 + n5, 1, 2, 1, 0, 0, 
      -1 + n11, 0, 1, 1])/((-1 + n11)*(-1 + n5)) + 
   ((1 + n4)*j[p4, 0, n2, n3, 2 + n4, -1 + n5, 0, 1, 1, 0, 0, n11, 0, 1, 1])/
    (-1 + n5) + ((-1 - n4)*j[p4, 0, n2, n3, 2 + n4, -1 + n5, 1, 0, 1, 0, 0, 
      -1 + n11, 0, 2, 1])/((-1 + n11)*(-1 + n5)) + 
   ((-1 - n4)*j[p4, 0, n2, n3, 2 + n4, -1 + n5, 1, 0, 1, 0, 0, n11, 0, 1, 1])/
    (-1 + n5) + ((-1 - n4)*j[p4, 0, n2, n3, 2 + n4, -1 + n5, 1, 1, 0, 0, 0, 
      n11, 0, 1, 1])/(-1 + n5) + 
   ((-1 - n4)*j[p4, 0, n2, n3, 2 + n4, -1 + n5, 1, 1, 1, 0, 0, -1 + n11, 0, 
      1, 1])/((-1 + n11)*(-1 + n5)) + 
   ((-1 - n4)*j[p4, 0, n2, n3, 2 + n4, -1 + n5, 1, 1, 1, 0, 0, -1 + n11, 0, 
      2, 0])/((-1 + n11)*(-1 + n5)) + 
   ((-1 - n4)*j[p4, 0, n2, n3, 2 + n4, -1 + n5, 1, 1, 1, 0, 0, n11, 0, 1, 0])/
    (-1 + n5) - (n3*j[p4, 0, n2, 1 + n3, n4, -1 + n5, 1, 1, 2, 0, 0, 
      -1 + n11, 0, 1, 1])/((-1 + n11)*(-1 + n5)) + 
   (n3*j[p4, 0, n2, 1 + n3, n4, -1 + n5, 1, 2, 1, 0, 0, -1 + n11, 0, 1, 1])/
    ((-1 + n11)*(-1 + n5)) - (n3*j[p4, 0, n2, 1 + n3, 1 + n4, -1 + n5, 1, 0, 
      1, 0, 0, -1 + n11, 0, 2, 1])/((-1 + n11)*(-1 + n5)) - 
   (2*n3*j[p4, 0, n2, 1 + n3, 1 + n4, -1 + n5, 1, 0, 1, 0, 0, n11, 0, 1, 1])/
    (-1 + n5) - (2*n3*j[p4, 0, n2, 1 + n3, 1 + n4, -1 + n5, 1, 1, 0, 0, 0, 
      n11, 0, 1, 1])/(-1 + n5) + 
   (n3*j[p4, 0, n2, 1 + n3, 1 + n4, -1 + n5, 1, 1, 1, 0, 0, n11, -1, 1, 1])/
    (-1 + n5) + (n3*j[p4, 0, n2, 1 + n3, 1 + n4, -1 + n5, 1, 1, 2, 0, 0, 
      -1 + n11, 0, 1, 0])/((-1 + n11)*(-1 + n5)) + 
   (n3*j[p4, 0, n2, 1 + n3, 1 + n4, -1 + n5, 1, 2, 1, 0, 0, -1 + n11, 0, 0, 
      1])/((-1 + n11)*(-1 + n5)) - 
   (n3*j[p4, 0, n2, 1 + n3, 1 + n4, -1 + n5, 1, 2, 1, 0, 0, -1 + n11, 0, 1, 
      0])/((-1 + n11)*(-1 + n5)) - 
   (n2*j[p4, 0, 1 + n2, -1 + n3, 1 + n4, -1 + n5, 1, 1, 1, 0, 0, -1 + n11, 0, 
      2, 1])/((-1 + n11)*(-1 + n5)) - 
   (n2*j[p4, 0, 1 + n2, -1 + n3, 1 + n4, -1 + n5, 1, 1, 1, 0, 0, n11, 0, 1, 
      1])/(-1 + n5) + (n2*j[p4, 0, 1 + n2, n3, 1 + n4, -2 + n5, 1, 1, 2, 0, 
      0, -1 + n11, 0, 1, 1])/((-1 + n11)*(-1 + n5)) + 
   (n2*j[p4, 0, 1 + n2, n3, 1 + n4, -2 + n5, 1, 2, 1, 0, 0, -1 + n11, 0, 1, 
      1])/((-1 + n11)*(-1 + n5)) - 
   (n2*j[p4, 0, 1 + n2, n3, 1 + n4, -1 + n5, 0, 1, 2, 0, 0, -1 + n11, 0, 1, 
      1])/((-1 + n11)*(-1 + n5)) - 
   (n2*j[p4, 0, 1 + n2, n3, 1 + n4, -1 + n5, 0, 2, 1, 0, 0, -1 + n11, 0, 1, 
      1])/((-1 + n11)*(-1 + n5)) + 
   (n2*j[p4, 0, 1 + n2, n3, 1 + n4, -1 + n5, 1, 0, 1, 0, 0, -1 + n11, 0, 2, 
      1])/((-1 + n11)*(-1 + n5)) + 
   (2*n2*j[p4, 0, 1 + n2, n3, 1 + n4, -1 + n5, 1, 0, 1, 0, 0, n11, 0, 1, 1])/
    (-1 + n5) + (n2*j[p4, 0, 1 + n2, n3, 1 + n4, -1 + n5, 1, 0, 2, 0, 0, 
      -1 + n11, 0, 1, 1])/((-1 + n11)*(-1 + n5)) + 
   (n2*j[p4, 0, 1 + n2, n3, 1 + n4, -1 + n5, 1, 1, 0, 0, 0, -1 + n11, 0, 2, 
      1])/((-1 + n11)*(-1 + n5)) - 
   (n2*j[p4, 0, 1 + n2, n3, 1 + n4, -1 + n5, 1, 1, 1, 0, 0, -1 + n11, -1, 2, 
      1])/((-1 + n11)*(-1 + n5)) + 
   (n2*j[p4, 0, 1 + n2, n3, 1 + n4, -1 + n5, 1, 1, 1, 0, 0, -1 + n11, 0, 1, 
      1])/((-1 + n11)*(-1 + n5)) - 
   (n2*j[p4, 0, 1 + n2, n3, 1 + n4, -1 + n5, 1, 1, 1, 0, 0, n11, -1, 1, 1])/
    (-1 + n5) + (2*n2*j[p4, 0, 1 + n2, n3, 1 + n4, -1 + n5, 1, 1, 1, 0, 0, 
      n11, 0, 0, 1])/(-1 + n5), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n11 == 1 && n12 == 0 && n13 == 1 && n3 == 0 && n4 == 0 && n6 == 1 && 
    n7 == 1 && n8 == 1 && n9 == 0 && n14 != 1 -> 
  ((4*n10 - d*n10 + 2*n10^2)*j[p4, -1 + n1, n2, 0, 0, 1 + n5, 1, 1, 1, 0, 
      1 + n10, 1, 0, 1, -1 + n14])/(2*(-1 + n14)*(3 - d + n10 + n2)) - 
   (n10*j[p4, n1, -1 + n2, 0, 0, 1 + n5, 1, 2, 1, 0, 1 + n10, 0, 0, 1, 
      -1 + n14])/((-1 + n14)*(3 - d + n10 + n2)) + 
   ((4 - d)*j[p4, n1, n2, 0, 0, n5, 2, 1, 1, 0, n10, 1, 0, 1, -1 + n14])/
    (2*(-1 + n14)*(-3 + d - n10 - n2)) + j[p4, n1, n2, 0, 0, 1 + n5, 1, 1, 1, 
    0, n10, 1, 0, 0, n14] + ((-6 + 3*d - 2*n10 - 2*n14 - 2*n2 - 4*n5)*
     j[p4, n1, n2, 0, 0, 1 + n5, 1, 1, 1, 0, n10, 1, 0, 1, -1 + n14])/
    (2*(-1 + n14)) + ((-4 + d - 2*n10)*j[p4, n1, n2, 0, 0, 1 + n5, 1, 2, 0, 
      0, n10, 1, 0, 1, -1 + n14])/(2*(-1 + n14)*(-3 + d - n10 - n2)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n6 == 1 && 
    n7 == 1 && n8 == 1 && n9 == 0 && n4 != 0 -> 
  ((-n2 + n3 - n2*n4 + n3*n4)*j[p4, n1, -1 + n2, -1 + n3, 2 + n4, n5, 1, 1, 
      1, 0, 0, 1, 0, 1, 1])/((3 - d + 2*n3 + n4)*(3 - d + n4 + n5)) + 
   ((6 - 2*d + n2 + n3 + 2*n4 + n5)*j[p4, n1, -1 + n2, n3, 1 + n4, n5, 1, 1, 
      1, 0, 0, 1, 0, 1, 1])/(-3 + d - n4 - n5) + 
   ((-3 + d - n2 - n3 - n4)*j[p4, n1, -1 + n2, n3, 1 + n4, n5, 1, 2, 1, 0, 0, 
      1, 0, 0, 1])/((3 - d + 2*n3 + n4)*(-3 + d - n4 - n5)) + 
   ((-n2 + n3)*j[p4, n1, -1 + n2, n3, 1 + n4, n5, 2, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((3 - d + 2*n3 + n4)*(-3 + d - n4 - n5)) + 
   ((-3 + d - n2 - n3 - n4)*j[p4, n1, -1 + n2, n3, 1 + n4, n5, 2, 1, 0, 0, 0, 
      1, 0, 1, 1])/((3 - d + 2*n3 + n4)*(-3 + d - n4 - n5)) + 
   ((-n2 + n3)*j[p4, n1, -1 + n2, n3, 1 + n4, n5, 2, 1, 1, 0, 0, 1, 0, 0, 1])/
    ((3 - d + 2*n3 + n4)*(-3 + d - n4 - n5)) + 
   ((-n2 + n3)*j[p4, n1, -1 + n2, n3, 1 + n4, n5, 2, 1, 1, 0, 0, 1, 0, 1, 0])/
    ((3 - d + 2*n3 + n4)*(-3 + d - n4 - n5)) - 
   (n5*j[p4, n1, -1 + n2, n3, 1 + n4, 1 + n5, 1, 1, 1, 0, 0, 1, 0, 0, 1])/
    (-3 + d - n4 - n5) - (n5*j[p4, n1, -1 + n2, n3, 1 + n4, 1 + n5, 1, 1, 1, 
      0, 0, 1, 0, 1, 0])/(3 - d + n4 + n5) + 
   ((-n2 + n3 - n2*n4 + n3*n4)*j[p4, n1, -1 + n2, n3, 2 + n4, -1 + n5, 1, 1, 
      1, 0, 0, 1, 0, 1, 1])/((3 - d + 2*n3 + n4)*(3 - d + n4 + n5)) + 
   ((n2 - n3 + n2*n4 - n3*n4)*j[p4, n1, -1 + n2, n3, 2 + n4, n5, 1, 0, 1, 0, 
      0, 1, 0, 1, 1])/((3 - d + 2*n3 + n4)*(3 - d + n4 + n5)) + 
   ((n2 - n3 + n2*n4 - n3*n4)*j[p4, n1, -1 + n2, n3, 2 + n4, n5, 1, 1, 1, 0, 
      0, 1, 0, 1, 0])/((3 - d + 2*n3 + n4)*(3 - d + n4 + n5)) + 
   ((-(n2*n3) + n3^2)*j[p4, n1, -1 + n2, 1 + n3, 1 + n4, n5, 1, 0, 1, 0, 0, 
      1, 0, 1, 1])/((3 - d + 2*n3 + n4)*(-3 + d - n4 - n5)) + 
   ((n2*n3 - n3^2)*j[p4, n1, -1 + n2, 1 + n3, 1 + n4, n5, 1, 1, 1, 0, 0, 1, 
      0, 0, 1])/((3 - d + 2*n3 + n4)*(-3 + d - n4 - n5)) + 
   ((3 - d + n2 + n3 + n4)*j[p4, n1, n2, -1 + n3, 1 + n4, n5, 1, 1, 1, 0, 0, 
      1, 0, 0, 2])/((3 - d + 2*n3 + n4)*(-3 + d - n4 - n5)) + 
   ((-15 + 11*d - 2*d^2 - 10*n2 + 4*d*n2 - 2*n2^2 - 6*n3 + 2*d*n3 - 2*n2*n3 - 
      8*n4 + 3*d*n4 - 2*n2*n4 - 2*n3*n4 - n4^2 - 6*n5 + 2*d*n5 - 2*n2*n5 - 
      2*n3*n5 - 2*n4*n5)*j[p4, n1, n2, -1 + n3, 1 + n4, n5, 1, 1, 1, 0, 0, 1, 
      0, 1, 1])/((3 - d + 2*n3 + n4)*(-3 + d - n4 - n5)) + 
   ((3 - d + n2 + n3 + n4)*j[p4, n1, n2, -1 + n3, 1 + n4, n5, 1, 2, 0, 0, 0, 
      1, 0, 1, 1])/((3 - d + 2*n3 + n4)*(-3 + d - n4 - n5)) + 
   ((n2 - n3)*j[p4, n1, n2, -1 + n3, 1 + n4, n5, 2, 1, 0, 0, 0, 1, 0, 1, 1])/
    ((3 - d + 2*n3 + n4)*(-3 + d - n4 - n5)) + 
   ((3 - d + n2 + n3 + 4*n4 - d*n4 + n2*n4 + n3*n4 + n4^2)*
     j[p4, n1, n2, -1 + n3, 2 + n4, n5, 0, 1, 1, 0, 0, 1, 0, 1, 1])/
    ((3 - d + 2*n3 + n4)*(3 - d + n4 + n5)) + 
   ((n2 - n3 + n2*n4 - n3*n4)*j[p4, n1, n2, -1 + n3, 2 + n4, n5, 1, 0, 1, 0, 
      0, 1, 0, 1, 1])/((3 - d + 2*n3 + n4)*(3 - d + n4 + n5)) + 
   ((-3 + d - n2 - n3 - 4*n4 + d*n4 - n2*n4 - n3*n4 - n4^2)*
     j[p4, n1, n2, -1 + n3, 2 + n4, n5, 1, 1, 0, 0, 0, 1, 0, 1, 1])/
    ((3 - d + 2*n3 + n4)*(3 - d + n4 + n5)) + 
   ((-3 + d - n2 - n3 - n4)*j[p4, n1, n2, n3, n4, n5, 1, 1, 1, 0, 0, 1, 0, 0, 
      2])/((3 - d + 2*n3 + n4)*(-3 + d - n4 - n5)) + 
   ((-n2 + n3)*j[p4, n1, n2, n3, n4, n5, 2, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((3 - d + 2*n3 + n4)*(-3 + d - n4 - n5)) + 
   ((-n2 + n3)*j[p4, n1, n2, n3, n4, n5, 2, 1, 0, 0, 0, 1, 0, 1, 1])/
    ((3 - d + 2*n3 + n4)*(-3 + d - n4 - n5)) + 
   ((-n2 + n3)*j[p4, n1, n2, n3, n4, n5, 2, 1, 1, 0, 0, 1, 0, 0, 1])/
    ((3 - d + 2*n3 + n4)*(-3 + d - n4 - n5)) + 
   ((-n2 + n3)*j[p4, n1, n2, n3, n4, n5, 2, 1, 1, 0, 0, 1, 0, 1, 0])/
    ((3 - d + 2*n3 + n4)*(-3 + d - n4 - n5)) + 
   ((-(n2*n5) + n3*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 1, 1, 0, 0, 1, 0, 0, 
      1])/((3 - d + 2*n3 + n4)*(3 - d + n4 + n5)) + 
   ((n2*n5 - n3*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 1, 1, 0, 0, 1, 0, 1, 0])/
    ((3 - d + 2*n3 + n4)*(3 - d + n4 + n5)) + j[p4, n1, n2, n3, 1 + n4, 
    -1 + n5, 1, 1, 1, 0, 0, 1, 0, 1, 1] + 
   ((n2 - n3)*j[p4, n1, n2, n3, 1 + n4, -1 + n5, 2, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((3 - d + 2*n3 + n4)*(-3 + d - n4 - n5)) + 
   ((3 - d + 2*n2 + n4)*j[p4, n1, n2, n3, 1 + n4, -1 + n5, 2, 1, 0, 0, 0, 1, 
      0, 1, 1])/((3 - d + 2*n3 + n4)*(-3 + d - n4 - n5)) + 
   ((n2 - n3)*j[p4, n1, n2, n3, 1 + n4, -1 + n5, 2, 1, 1, 0, 0, 1, 0, 0, 1])/
    ((3 - d + 2*n3 + n4)*(-3 + d - n4 - n5)) + 
   ((n2 - n3)*j[p4, n1, n2, n3, 1 + n4, -1 + n5, 2, 1, 1, 0, 0, 1, 0, 1, 0])/
    ((3 - d + 2*n3 + n4)*(-3 + d - n4 - n5)) + 
   ((-3 + d + n2 - n2^2 - 3*n3 + n3^2 - 4*n4 + d*n4 - n2*n4 - n3*n4 - n4^2 + 
      3*n5 - d*n5 + n2*n5 + n3*n5 + n4*n5)*j[p4, n1, n2, n3, 1 + n4, n5, 1, 
      0, 1, 0, 0, 1, 0, 1, 1])/((3 - d + 2*n3 + n4)*(-3 + d - n4 - n5)) + 
   ((-7*n2 + 2*d*n2 - n2^2 + 7*n3 - 2*d*n3 - n2*n3 + 2*n3^2 - 2*n2*n4 + 
      2*n3*n4)*j[p4, n1, n2, n3, 1 + n4, n5, 1, 1, 0, 0, 0, 1, 0, 1, 1])/
    ((3 - d + 2*n3 + n4)*(-3 + d - n4 - n5)) + 
   ((-6*n2 + 2*d*n2 - 2*n2^2 + 6*n3 - 2*d*n3 + n2*n3 + n3^2 - 2*n2*n4 + 
      2*n3*n4 - n2*n5 + n3*n5)*j[p4, n1, n2, n3, 1 + n4, n5, 1, 1, 1, 0, 0, 
      1, 0, 0, 1])/((3 - d + 2*n3 + n4)*(-3 + d - n4 - n5)) + 
   ((n2 - n3 + n2*n4 - n3*n4 - n2*n5 + n3*n5)*j[p4, n1, n2, n3, 1 + n4, n5, 
      1, 1, 1, 0, 0, 1, 0, 1, 0])/((3 - d + 2*n3 + n4)*(3 - d + n4 + n5)) + 
   ((n2 - n3)*j[p4, n1, n2, n3, 1 + n4, n5, 2, 1, 0, 0, 0, 1, -1, 1, 1])/
    ((3 - d + 2*n3 + n4)*(-3 + d - n4 - n5)) + 
   ((-n2 + n3 - n2*n4 + n3*n4)*j[p4, n1, n2, n3, 2 + n4, -1 + n5, 1, 1, 1, 0, 
      0, 1, -1, 1, 1])/((3 - d + 2*n3 + n4)*(3 - d + n4 + n5)) + 
   ((-n2 + n3 - n2*n4 + n3*n4)*j[p4, n1, n2, n3, 2 + n4, -1 + n5, 1, 1, 1, 0, 
      0, 1, 0, 1, 0])/((3 - d + 2*n3 + n4)*(3 - d + n4 + n5)) + 
   ((n2 - n3 + n2*n4 - n3*n4)*j[p4, n1, n2, n3, 2 + n4, n5, 1, 0, 1, 0, 0, 1, 
      -1, 1, 1])/((3 - d + 2*n3 + n4)*(3 - d + n4 + n5)) + 
   ((-(n2*n3) + n3^2)*j[p4, n1, n2, 1 + n3, 1 + n4, n5, 1, 0, 1, 0, 0, 1, -1, 
      1, 1])/((3 - d + 2*n3 + n4)*(-3 + d - n4 - n5)) + 
   ((n2*n3 - n3^2)*j[p4, n1, n2, 1 + n3, 1 + n4, n5, 1, 1, 1, 0, 0, 1, -1, 0, 
      1])/((3 - d + 2*n3 + n4)*(-3 + d - n4 - n5)) + 
   ((-n2^2 + n2*n3)*j[p4, n1, 1 + n2, -1 + n3, 1 + n4, n5, 1, 0, 1, 0, 0, 1, 
      0, 1, 1])/((3 - d + 2*n3 + n4)*(-3 + d - n4 - n5)) + 
   ((n2^2 - n2*n3)*j[p4, n1, 1 + n2, -1 + n3, 1 + n4, n5, 1, 1, 0, 0, 0, 1, 
      0, 1, 1])/((3 - d + 2*n3 + n4)*(-3 + d - n4 - n5)) + 
   ((-n2^2 + n2*n3)*j[p4, n1, 1 + n2, n3, 1 + n4, n5, 1, 0, 1, 0, 0, 1, -1, 
      1, 1])/((3 - d + 2*n3 + n4)*(-3 + d - n4 - n5)) + 
   ((n2^2 - n2*n3)*j[p4, n1, 1 + n2, n3, 1 + n4, n5, 1, 1, 0, 0, 0, 1, -1, 1, 
      1])/((3 - d + 2*n3 + n4)*(-3 + d - n4 - n5)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 0 && n11 == 1 && n13 == 1 && n14 == 1 && n4 == 0 && n6 == 1 && 
    n7 == 1 && n8 == 1 && n9 == 0 && n12 != 0 -> 
  ((12 - 4*d + n1 + 2*n12 + 2*n2 + 2*n3 + 2*n5)*j[p4, -1 + n1, n2, n3, 0, n5, 
      1, 1, 1, 0, 0, 1, 1 + n12, 1, 1])/(-4 + d - n12 - n3) + 
   ((-4 + 2*d - n2 - n3 - n5)*j[p4, n1, -1 + n2, n3, 0, n5, 1, 1, 1, 0, 0, 1, 
      1 + n12, 1, 1])/(-4 + d - n12 - n3) + 
   j[p4, n1, -1 + n2, n3, 0, n5, 1, 2, 1, 0, 0, 1, 1 + n12, 0, 1]/
    (-4 + d - n12 - n3) + j[p4, n1, -1 + n2, n3, 0, n5, 2, 1, 0, 0, 0, 1, 
     1 + n12, 1, 1]/(-4 + d - n12 - n3) + 
   (n5*j[p4, n1, -1 + n2, n3, 0, 1 + n5, 1, 1, 1, 0, 0, 1, 1 + n12, 0, 1])/
    (-4 + d - n12 - n3) - (n5*j[p4, n1, -1 + n2, n3, 0, 1 + n5, 1, 1, 1, 0, 
      0, 1, 1 + n12, 1, 0])/(-4 + d - n12 - n3) + 
   j[p4, n1, n2, -1 + n3, 0, n5, 1, 2, 0, 0, 0, 1, 1 + n12, 1, 1]/
    (4 - d + n12 + n3) + j[p4, n1, n2, -1 + n3, 0, n5, 2, 1, 0, 0, 0, 1, 
     1 + n12, 1, 1]/(-4 + d - n12 - n3) + 
   ((-2 + d - n5)*j[p4, n1, n2, n3, -1, n5, 1, 1, 1, 0, 0, 1, 1 + n12, 1, 1])/
    (-4 + d - n12 - n3) + j[p4, n1, n2, n3, -1, n5, 2, 0, 1, 0, 0, 1, 
     1 + n12, 1, 1]/(4 - d + n12 + n3) + 
   j[p4, n1, n2, n3, -1, n5, 2, 1, 0, 0, 0, 1, 1 + n12, 1, 1]/
    (4 - d + n12 + n3) + j[p4, n1, n2, n3, -1, n5, 2, 1, 1, 0, 0, 1, 1 + n12, 
     0, 1]/(4 - d + n12 + n3) + j[p4, n1, n2, n3, -1, n5, 2, 1, 1, 0, 0, 1, 
     1 + n12, 1, 0]/(4 - d + n12 + n3) + 
   (n5*j[p4, n1, n2, n3, -1, 1 + n5, 1, 1, 1, 0, 0, 1, 1 + n12, 0, 1])/
    (-4 + d - n12 - n3) - (n5*j[p4, n1, n2, n3, -1, 1 + n5, 1, 1, 1, 0, 0, 1, 
      1 + n12, 1, 0])/(-4 + d - n12 - n3) + 
   j[p4, n1, n2, n3, 0, -1 + n5, 1, 1, 1, 0, 0, 1, 1 + n12, 1, 2]/
    (4 - d + n12 + n3) + ((-1 + n3)*j[p4, n1, n2, n3, 0, n5, 1, 0, 1, 0, 0, 
      1, 1 + n12, 1, 1])/(4 - d + n12 + n3) + 
   ((-n12 - 2*n2 + 2*n3)*j[p4, n1, n2, n3, 0, n5, 1, 1, 0, 0, 0, 1, 1 + n12, 
      1, 1])/(4 - d + n12 + n3) + 
   ((1 + n12)*j[p4, n1, n2, n3, 0, n5, 1, 1, 0, 0, 0, 1, 2 + n12, 1, 1])/
    (4 - d + n12 + n3) + j[p4, n1, n2, n3, 0, n5, 1, 1, 0, 0, 0, 2, n12, 1, 
     1]/(-4 + d - n12 - n3) + j[p4, n1, n2, n3, 0, n5, 1, 1, 0, 0, 0, 2, 
     1 + n12, 1, 1]/(4 - d + n12 + n3) + 
   ((2 - n1 + n12 - 2*n2 + n3)*j[p4, n1, n2, n3, 0, n5, 1, 1, 1, 0, 0, 1, 
      1 + n12, 0, 1])/(4 - d + n12 + n3) + 
   j[p4, n1, n2, n3, 0, n5, 1, 1, 1, 0, 0, 1, 1 + n12, 0, 2]/
    (-4 + d - n12 - n3) + j[p4, n1, n2, n3, 0, n5, 1, 1, 1, 0, 0, 1, 1 + n12, 
     1, 0]/(-4 + d - n12 - n3) + ((-8 + 3*d - n1 - n12 - 2*n2 - n3 - 2*n5)*
     j[p4, n1, n2, n3, 0, n5, 1, 1, 1, 0, 0, 1, 1 + n12, 1, 1])/
    (-4 + d - n12 - n3) + ((-1 - n12)*j[p4, n1, n2, n3, 0, n5, 1, 1, 1, 0, 0, 
      1, 2 + n12, 0, 1])/(4 - d + n12 + n3) + 
   j[p4, n1, n2, n3, 0, n5, 2, 1, 0, 0, 0, 1, n12, 1, 1]/
    (-4 + d - n12 - n3) + (n3*j[p4, n1, n2, 1 + n3, 0, n5, 1, 0, 1, 0, 0, 1, 
      1 + n12, 1, 1])/(4 - d + n12 + n3) - 
   (n3*j[p4, n1, n2, 1 + n3, 0, n5, 1, 1, 1, 0, 0, 1, 1 + n12, 0, 1])/
    (4 - d + n12 + n3) - (n2*j[p4, n1, 1 + n2, -1 + n3, 0, n5, 1, 0, 1, 0, 0, 
      1, 1 + n12, 1, 1])/(-4 + d - n12 - n3) + 
   (n2*j[p4, n1, 1 + n2, -1 + n3, 0, n5, 1, 1, 0, 0, 0, 1, 1 + n12, 1, 1])/
    (-4 + d - n12 - n3) - (n2*j[p4, n1, 1 + n2, n3, 0, n5, 1, 0, 1, 0, 0, 1, 
      n12, 1, 1])/(-4 + d - n12 - n3) + 
   (n2*j[p4, n1, 1 + n2, n3, 0, n5, 1, 1, 0, 0, 0, 1, n12, 1, 1])/
    (-4 + d - n12 - n3), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n3 == 0 && 
    n6 == 1 && n7 == 1 && n8 == 1 && n9 != 0 -> 
  (n4*j[p4, -1 + n1, -1 + n2, 0, 1 + n4, n5, 1, 1, 1, 1 + n9, 0, 1, 0, 1, 1])/
    (3 - d + n4 + n5 + n9) + ((2 - d + n2)*j[p4, -1 + n1, n2, 0, n4, n5, 1, 
      0, 1, 1 + n9, 0, 1, 0, 2, 1])/((-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*
     (-3 + d - n4 - n5 - n9)) + 
   ((-2 + d - n2)*j[p4, -1 + n1, n2, 0, n4, n5, 1, 0, 2, 1 + n9, 0, 1, 0, 1, 
      1])/((-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*(-3 + d - n4 - n5 - n9)) + 
   ((660 - 779*d + 306*d^2 - 40*d^3 + 84*n1 - 66*d*n1 + 13*d^2*n1 + 472*n2 - 
      369*d*n2 + 72*d^2*n2 + 38*n1*n2 - 15*d*n1*n2 + 108*n2^2 - 42*d*n2^2 + 
      4*n1*n2^2 + 8*n2^3 + 362*n4 - 285*d*n4 + 56*d^2*n4 + 28*n1*n4 - 
      11*d*n1*n4 + 174*n2*n4 - 68*d*n2*n4 + 6*n1*n2*n4 + 20*n2^2*n4 + 
      66*n4^2 - 26*d*n4^2 + 2*n1*n4^2 + 16*n2*n4^2 + 4*n4^3 + 254*n5 - 
      199*d*n5 + 39*d^2*n5 + 16*n1*n5 - 6*d*n1*n5 + 112*n2*n5 - 44*d*n2*n5 + 
      2*n1*n2*n5 + 12*n2^2*n5 + 92*n4*n5 - 36*d*n4*n5 + 2*n1*n4*n5 + 
      20*n2*n4*n5 + 8*n4^2*n5 + 26*n5^2 - 10*d*n5^2 + 4*n2*n5^2 + 4*n4*n5^2 + 
      60*n9 - 49*d*n9 + 10*d^2*n9 + 32*n2*n9 - 13*d*n2*n9 + 4*n2^2*n9 + 
      22*n4*n9 - 9*d*n4*n9 + 6*n2*n4*n9 + 2*n4^2*n9 + 10*n5*n9 - 4*d*n5*n9 + 
      2*n2*n5*n9 + 2*n4*n5*n9)*j[p4, -1 + n1, n2, 0, n4, n5, 1, 1, 1, 1 + n9, 
      0, 1, 0, 1, 1])/((-3 + d)*(-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*
     (-3 + d - n4 - n5 - n9)) + 
   ((54 - 44*d + 9*d^2 + 29*n2 - 12*d*n2 + 4*n2^2 + 22*n4 - 9*d*n4 + 
      6*n2*n4 + 2*n4^2 + 10*n5 - 4*d*n5 + 2*n2*n5 + 2*n4*n5 + 54*n9 - 
      44*d*n9 + 9*d^2*n9 + 29*n2*n9 - 12*d*n2*n9 + 4*n2^2*n9 + 22*n4*n9 - 
      9*d*n4*n9 + 6*n2*n4*n9 + 2*n4^2*n9 + 10*n5*n9 - 4*d*n5*n9 + 
      2*n2*n5*n9 + 2*n4*n5*n9)*j[p4, -1 + n1, n2, 0, n4, n5, 1, 1, 1, 2 + n9, 
      0, 1, 0, 1, 0])/((-3 + d)*(-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*
     (-3 + d - n4 - n5 - n9)) + ((-10 + 4*d - 3*n2 - 2*n4 - 2*n5)*
     j[p4, -1 + n1, n2, 0, n4, n5, 1, 1, 2, 1 + n9, 0, 1, 0, 0, 1])/
    ((-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*(-3 + d - n4 - n5 - n9)) + 
   ((2*n5 - d*n5 + n2*n5)*j[p4, -1 + n1, n2, 0, n4, 1 + n5, 1, 0, 1, 1 + n9, 
      0, 1, 0, 1, 1])/((8 - 3*d + 2*n2 + 2*n4 + 2*n5)*
     (3 - d + n4 + n5 + n9)) + 
   ((-10*n5 + 4*d*n5 - 3*n2*n5 - 2*n4*n5 - 2*n5^2)*j[p4, -1 + n1, n2, 0, n4, 
      1 + n5, 1, 1, 1, 1 + n9, 0, 1, 0, 0, 1])/
    ((8 - 3*d + 2*n2 + 2*n4 + 2*n5)*(3 - d + n4 + n5 + n9)) + 
   ((10*n5 - 4*d*n5 + 3*n2*n5 + 2*n4*n5 + 2*n5^2)*j[p4, -1 + n1, n2, 0, n4, 
      1 + n5, 1, 1, 1, 1 + n9, 0, 1, 0, 1, 0])/
    ((8 - 3*d + 2*n2 + 2*n4 + 2*n5)*(3 - d + n4 + n5 + n9)) - 
   (n4*j[p4, -1 + n1, n2, 0, 1 + n4, -1 + n5, 1, 1, 1, 1 + n9, 0, 1, 0, 1, 
      1])/(3 - d + n4 + n5 + n9) + 
   (n4*j[p4, -1 + n1, n2, 0, 1 + n4, n5, 1, 0, 1, 1 + n9, 0, 1, 0, 1, 1])/
    (3 - d + n4 + n5 + n9) + ((10*n4 - 4*d*n4 + 3*n2*n4 + 2*n4^2 + 2*n4*n5)*
     j[p4, -1 + n1, n2, 0, 1 + n4, n5, 1, 1, 1, 1 + n9, 0, 1, 0, 1, 0])/
    ((8 - 3*d + 2*n2 + 2*n4 + 2*n5)*(3 - d + n4 + n5 + n9)) + 
   (n2*j[p4, -1 + n1, 1 + n2, 0, n4, n5, 1, 0, 1, 1 + n9, 0, 1, 0, 1, 1])/
    (-3 + d - n4 - n5 - n9) + ((-12*n2 + 5*d*n2 - 4*n2^2 - 2*n2*n4 - 2*n2*n5)*
     j[p4, -1 + n1, 1 + n2, 0, n4, n5, 1, 1, 0, 1 + n9, 0, 1, 0, 1, 1])/
    ((-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*(-3 + d - n4 - n5 - n9)) + 
   ((20*n2 - 8*d*n2 + 6*n2^2 + 4*n2*n4 + 4*n2*n5)*j[p4, -1 + n1, 1 + n2, 0, 
      n4, n5, 1, 1, 1, 1 + n9, 0, 1, 0, 0, 1])/
    ((8 - 3*d + 2*n2 + 2*n4 + 2*n5)*(-3 + d - n4 - n5 - n9)) - 
   (n4*j[p4, n1, -2 + n2, 0, 1 + n4, n5, 1, 1, 1, 1 + n9, 0, 1, 0, 1, 1])/
    (3 - d + n4 + n5 + n9) + ((-12*n4 + 5*d*n4 - 4*n2*n4 - 2*n4^2 - 2*n4*n5)*
     j[p4, n1, -1 + n2, -1, 1 + n4, n5, 1, 1, 1, 1 + n9, 0, 1, 0, 1, 1])/
    ((-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*(-3 + d - n4 - n5 - n9)) + 
   ((-336 + 407*d - 164*d^2 + 22*d^3 - 250*n2 + 200*d*n2 - 40*d^2*n2 - 
      58*n2^2 + 23*d*n2^2 - 4*n2^3 - 230*n4 + 187*d*n4 - 38*d^2*n4 - 
      116*n2*n4 + 47*d*n2*n4 - 14*n2^2*n4 - 54*n4^2 + 22*d*n4^2 - 
      14*n2*n4^2 - 4*n4^3 - 110*n5 + 89*d*n5 - 18*d^2*n5 - 52*n2*n5 + 
      21*d*n2*n5 - 6*n2^2*n5 - 52*n4*n5 + 21*d*n4*n5 - 12*n2*n4*n5 - 
      6*n4^2*n5 - 10*n5^2 + 4*d*n5^2 - 2*n2*n5^2 - 2*n4*n5^2 - 60*n9 + 
      49*d*n9 - 10*d^2*n9 - 32*n2*n9 + 13*d*n2*n9 - 4*n2^2*n9 - 22*n4*n9 + 
      9*d*n4*n9 - 6*n2*n4*n9 - 2*n4^2*n9 - 10*n5*n9 + 4*d*n5*n9 - 
      2*n2*n5*n9 - 2*n4*n5*n9)*j[p4, n1, -1 + n2, 0, n4, n5, 1, 1, 1, 1 + n9, 
      0, 1, 0, 1, 1])/((-3 + d)*(-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*
     (-3 + d - n4 - n5 - n9)) + 
   ((-54 + 44*d - 9*d^2 - 29*n2 + 12*d*n2 - 4*n2^2 - 22*n4 + 9*d*n4 - 
      6*n2*n4 - 2*n4^2 - 10*n5 + 4*d*n5 - 2*n2*n5 - 2*n4*n5 - 54*n9 + 
      44*d*n9 - 9*d^2*n9 - 29*n2*n9 + 12*d*n2*n9 - 4*n2^2*n9 - 22*n4*n9 + 
      9*d*n4*n9 - 6*n2*n4*n9 - 2*n4^2*n9 - 10*n5*n9 + 4*d*n5*n9 - 
      2*n2*n5*n9 - 2*n4*n5*n9)*j[p4, n1, -1 + n2, 0, n4, n5, 1, 1, 1, 2 + n9, 
      0, 1, 0, 1, 0])/((-3 + d)*(-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*
     (-3 + d - n4 - n5 - n9)) + 
   ((60 - 49*d + 10*d^2 + 32*n2 - 13*d*n2 + 4*n2^2 + 22*n4 - 9*d*n4 + 
      6*n2*n4 + 2*n4^2 + 10*n5 - 4*d*n5 + 2*n2*n5 + 2*n4*n5 + 60*n9 - 
      49*d*n9 + 10*d^2*n9 + 32*n2*n9 - 13*d*n2*n9 + 4*n2^2*n9 + 22*n4*n9 - 
      9*d*n4*n9 + 6*n2*n4*n9 + 2*n4^2*n9 + 10*n5*n9 - 4*d*n5*n9 + 
      2*n2*n5*n9 + 2*n4*n5*n9)*j[p4, n1, -1 + n2, 0, n4, n5, 1, 1, 1, 2 + n9, 
      0, 1, 0, 1, 1])/((-3 + d)*(-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*
     (-3 + d - n4 - n5 - n9)) + 
   ((2 - d + n2)*j[p4, n1, -1 + n2, 0, n4, n5, 1, 1, 2, 1 + n9, 0, 0, 0, 1, 
      1])/((-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*(-3 + d - n4 - n5 - n9)) + 
   ((-2 + d - n2)*j[p4, n1, -1 + n2, 0, n4, n5, 1, 1, 2, 1 + n9, 0, 1, 0, 0, 
      1])/((-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*(-3 + d - n4 - n5 - n9)) + 
   j[p4, n1, -1 + n2, 0, n4, n5, 1, 2, 1, 1 + n9, 0, 0, 0, 1, 1]/
    (-3 + d - n4 - n5 - n9) + 
   ((54 - 44*d + 9*d^2 + 29*n2 - 12*d*n2 + 4*n2^2 + 22*n4 - 9*d*n4 + 
      6*n2*n4 + 2*n4^2 + 10*n5 - 4*d*n5 + 2*n2*n5 + 2*n4*n5)*
     j[p4, n1, -1 + n2, 0, n4, n5, 1, 2, 1, 1 + n9, 0, 1, 0, 0, 1])/
    ((-3 + d)*(-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*(-3 + d - n4 - n5 - n9)) + 
   ((54 - 44*d + 9*d^2 + 29*n2 - 12*d*n2 + 4*n2^2 + 22*n4 - 9*d*n4 + 
      6*n2*n4 + 2*n4^2 + 10*n5 - 4*d*n5 + 2*n2*n5 + 2*n4*n5)*
     j[p4, n1, -1 + n2, 0, n4, n5, 2, 1, 0, 1 + n9, 0, 1, 0, 1, 1])/
    ((-3 + d)*(-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*(-3 + d - n4 - n5 - n9)) + 
   ((60*n5 - 49*d*n5 + 10*d^2*n5 + 32*n2*n5 - 13*d*n2*n5 + 4*n2^2*n5 + 
      22*n4*n5 - 9*d*n4*n5 + 6*n2*n4*n5 + 2*n4^2*n5 + 10*n5^2 - 4*d*n5^2 + 
      2*n2*n5^2 + 2*n4*n5^2)*j[p4, n1, -1 + n2, 0, n4, 1 + n5, 1, 1, 1, 
      1 + n9, 0, 1, 0, 0, 1])/((-3 + d)*(-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*
     (-3 + d - n4 - n5 - n9)) + 
   ((-60*n5 + 49*d*n5 - 10*d^2*n5 - 32*n2*n5 + 13*d*n2*n5 - 4*n2^2*n5 - 
      22*n4*n5 + 9*d*n4*n5 - 6*n2*n4*n5 - 2*n4^2*n5 - 10*n5^2 + 4*d*n5^2 - 
      2*n2*n5^2 - 2*n4*n5^2)*j[p4, n1, -1 + n2, 0, n4, 1 + n5, 1, 1, 1, 
      1 + n9, 0, 1, 0, 1, 0])/((-3 + d)*(-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*
     (-3 + d - n4 - n5 - n9)) + ((-4*n4 + 2*d*n4 - 2*n2*n4)*
     j[p4, n1, -1 + n2, 0, 1 + n4, -1 + n5, 1, 1, 1, 1 + n9, 0, 1, 0, 1, 1])/
    ((8 - 3*d + 2*n2 + 2*n4 + 2*n5)*(3 - d + n4 + n5 + n9)) + 
   (n4*j[p4, n1, -1 + n2, 0, 1 + n4, n5, 0, 1, 1, 1 + n9, 0, 1, 0, 1, 1])/
    (3 - d + n4 + n5 + n9) + ((12*n4 - 5*d*n4 + 4*n2*n4 + 2*n4^2 + 2*n4*n5)*
     j[p4, n1, -1 + n2, 0, 1 + n4, n5, 1, 0, 1, 1 + n9, 0, 1, 0, 1, 1])/
    ((-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*(-3 + d - n4 - n5 - n9)) - 
   (n4*j[p4, n1, -1 + n2, 0, 1 + n4, n5, 1, 1, 1, n9, 0, 1, 0, 1, 1])/
    (3 - d + n4 + n5 + n9) + (n4*j[p4, n1, -1 + n2, 0, 1 + n4, n5, 1, 1, 1, 
      1 + n9, -1, 1, 0, 1, 1])/(3 - d + n4 + n5 + n9) - 
   (n4*j[p4, n1, -1 + n2, 0, 1 + n4, n5, 1, 1, 1, 1 + n9, 0, 0, 0, 1, 1])/
    (3 - d + n4 + n5 + n9) + ((2*n4 - d*n4 + n2*n4)*
     j[p4, n1, -1 + n2, 0, 1 + n4, n5, 1, 1, 1, 1 + n9, 0, 1, 0, 1, 0])/
    ((8 - 3*d + 2*n2 + 2*n4 + 2*n5)*(3 - d + n4 + n5 + n9)) + 
   ((40 - 36*d + 8*d^2 + 4*n1 - 2*d*n1 + 32*n2 - 14*d*n2 + 2*n1*n2 + 6*n2^2 + 
      8*n4 - 4*d*n4 + 4*n2*n4 + 8*n5 - 4*d*n5 + 4*n2*n5 + 4*n9 - 2*d*n9 + 
      2*n2*n9)*j[p4, n1, n2, -1, n4, n5, 1, 1, 1, 1 + n9, 0, 1, 0, 1, 1])/
    ((-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*(-3 + d - n4 - n5 - n9)) + 
   ((-54 + 44*d - 9*d^2 - 29*n2 + 12*d*n2 - 4*n2^2 - 22*n4 + 9*d*n4 - 
      6*n2*n4 - 2*n4^2 - 10*n5 + 4*d*n5 - 2*n2*n5 - 2*n4*n5)*
     j[p4, n1, n2, -1, n4, n5, 1, 2, 0, 1 + n9, 0, 1, 0, 1, 1])/
    ((-3 + d)*(-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*(-3 + d - n4 - n5 - n9)) + 
   ((-10 + 4*d - 3*n2 - 2*n4 - 2*n5)*j[p4, n1, n2, -1, n4, n5, 1, 2, 1, 
      1 + n9, 0, 0, 0, 1, 1])/((-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*
     (-3 + d - n4 - n5 - n9)) + 
   ((54 - 44*d + 9*d^2 + 29*n2 - 12*d*n2 + 4*n2^2 + 22*n4 - 9*d*n4 + 
      6*n2*n4 + 2*n4^2 + 10*n5 - 4*d*n5 + 2*n2*n5 + 2*n4*n5)*
     j[p4, n1, n2, -1, n4, n5, 2, 1, 0, 1 + n9, 0, 1, 0, 1, 1])/
    ((-3 + d)*(-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*(-3 + d - n4 - n5 - n9)) + 
   ((24*n4 - 22*d*n4 + 5*d^2*n4 + 20*n2*n4 - 9*d*n2*n4 + 4*n2^2*n4 + 
      16*n4^2 - 7*d*n4^2 + 6*n2*n4^2 + 2*n4^3 + 4*n4*n5 - 2*d*n4*n5 + 
      2*n2*n4*n5 + 2*n4^2*n5)*j[p4, n1, n2, -1, 1 + n4, n5, 0, 1, 1, 1 + n9, 
      0, 1, 0, 1, 1])/((-3 + d)*(-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*
     (-3 + d - n4 - n5 - n9)) + 
   ((10*n4 - 4*d*n4 + 3*n2*n4 + 2*n4^2 + 2*n4*n5)*j[p4, n1, n2, -1, 1 + n4, 
      n5, 1, 0, 1, 1 + n9, 0, 1, 0, 1, 1])/((8 - 3*d + 2*n2 + 2*n4 + 2*n5)*
     (3 - d + n4 + n5 + n9)) + 
   ((-54*n4 + 44*d*n4 - 9*d^2*n4 - 29*n2*n4 + 12*d*n2*n4 - 4*n2^2*n4 - 
      22*n4^2 + 9*d*n4^2 - 6*n2*n4^2 - 2*n4^3 - 10*n4*n5 + 4*d*n4*n5 - 
      2*n2*n4*n5 - 2*n4^2*n5)*j[p4, n1, n2, -1, 1 + n4, n5, 1, 1, 0, 1 + n9, 
      0, 1, 0, 1, 1])/((-3 + d)*(-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*
     (-3 + d - n4 - n5 - n9)) + 
   ((-10*n4 + 4*d*n4 - 3*n2*n4 - 2*n4^2 - 2*n4*n5)*j[p4, n1, n2, -1, 1 + n4, 
      n5, 1, 1, 1, 1 + n9, 0, 0, 0, 1, 1])/((8 - 3*d + 2*n2 + 2*n4 + 2*n5)*
     (3 - d + n4 + n5 + n9)) + 
   ((48 - 39*d + 8*d^2 + 26*n2 - 11*d*n2 + 4*n2^2 + 22*n4 - 9*d*n4 + 
      6*n2*n4 + 2*n4^2 + 10*n5 - 4*d*n5 + 2*n2*n5 + 2*n4*n5)*
     j[p4, n1, n2, 0, -1 + n4, n5, 1, 1, 1, 1 + n9, 0, 1, 0, 1, 1])/
    ((-3 + d)*(-8 + 3*d - 2*n2 - 2*n4 - 2*n5)) + 
   ((-54 + 44*d - 9*d^2 - 29*n2 + 12*d*n2 - 4*n2^2 - 22*n4 + 9*d*n4 - 
      6*n2*n4 - 2*n4^2 - 10*n5 + 4*d*n5 - 2*n2*n5 - 2*n4*n5 - 54*n9 + 
      44*d*n9 - 9*d^2*n9 - 29*n2*n9 + 12*d*n2*n9 - 4*n2^2*n9 - 22*n4*n9 + 
      9*d*n4*n9 - 6*n2*n4*n9 - 2*n4^2*n9 - 10*n5*n9 + 4*d*n5*n9 - 
      2*n2*n5*n9 - 2*n4*n5*n9)*j[p4, n1, n2, 0, -1 + n4, n5, 1, 1, 1, 2 + n9, 
      0, 1, 0, 1, 0])/((-3 + d)*(-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*
     (-3 + d - n4 - n5 - n9)) + 
   ((60 - 49*d + 10*d^2 + 32*n2 - 13*d*n2 + 4*n2^2 + 22*n4 - 9*d*n4 + 
      6*n2*n4 + 2*n4^2 + 10*n5 - 4*d*n5 + 2*n2*n5 + 2*n4*n5 + 60*n9 - 
      49*d*n9 + 10*d^2*n9 + 32*n2*n9 - 13*d*n2*n9 + 4*n2^2*n9 + 22*n4*n9 - 
      9*d*n4*n9 + 6*n2*n4*n9 + 2*n4^2*n9 + 10*n5*n9 - 4*d*n5*n9 + 
      2*n2*n5*n9 + 2*n4*n5*n9)*j[p4, n1, n2, 0, -1 + n4, n5, 1, 1, 1, 2 + n9, 
      0, 1, 0, 1, 1])/((-3 + d)*(-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*
     (-3 + d - n4 - n5 - n9)) + 
   ((-54 + 44*d - 9*d^2 - 29*n2 + 12*d*n2 - 4*n2^2 - 22*n4 + 9*d*n4 - 
      6*n2*n4 - 2*n4^2 - 10*n5 + 4*d*n5 - 2*n2*n5 - 2*n4*n5)*
     j[p4, n1, n2, 0, -1 + n4, n5, 2, 0, 1, 1 + n9, 0, 1, 0, 1, 1])/
    ((-3 + d)*(-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*(-3 + d - n4 - n5 - n9)) + 
   ((-54 + 44*d - 9*d^2 - 29*n2 + 12*d*n2 - 4*n2^2 - 22*n4 + 9*d*n4 - 
      6*n2*n4 - 2*n4^2 - 10*n5 + 4*d*n5 - 2*n2*n5 - 2*n4*n5)*
     j[p4, n1, n2, 0, -1 + n4, n5, 2, 1, 0, 1 + n9, 0, 1, 0, 1, 1])/
    ((-3 + d)*(-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*(-3 + d - n4 - n5 - n9)) + 
   ((-54 + 44*d - 9*d^2 - 29*n2 + 12*d*n2 - 4*n2^2 - 22*n4 + 9*d*n4 - 
      6*n2*n4 - 2*n4^2 - 10*n5 + 4*d*n5 - 2*n2*n5 - 2*n4*n5)*
     j[p4, n1, n2, 0, -1 + n4, n5, 2, 1, 1, 1 + n9, 0, 1, 0, 0, 1])/
    ((-3 + d)*(-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*(-3 + d - n4 - n5 - n9)) + 
   ((-54 + 44*d - 9*d^2 - 29*n2 + 12*d*n2 - 4*n2^2 - 22*n4 + 9*d*n4 - 
      6*n2*n4 - 2*n4^2 - 10*n5 + 4*d*n5 - 2*n2*n5 - 2*n4*n5)*
     j[p4, n1, n2, 0, -1 + n4, n5, 2, 1, 1, 1 + n9, 0, 1, 0, 1, 0])/
    ((-3 + d)*(-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*(-3 + d - n4 - n5 - n9)) + 
   ((54*n5 - 44*d*n5 + 9*d^2*n5 + 29*n2*n5 - 12*d*n2*n5 + 4*n2^2*n5 + 
      22*n4*n5 - 9*d*n4*n5 + 6*n2*n4*n5 + 2*n4^2*n5 + 10*n5^2 - 4*d*n5^2 + 
      2*n2*n5^2 + 2*n4*n5^2)*j[p4, n1, n2, 0, -1 + n4, 1 + n5, 1, 1, 1, 
      1 + n9, 0, 1, 0, 0, 1])/((-3 + d)*(-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*
     (-3 + d - n4 - n5 - n9)) + 
   ((-54*n5 + 44*d*n5 - 9*d^2*n5 - 29*n2*n5 + 12*d*n2*n5 - 4*n2^2*n5 - 
      22*n4*n5 + 9*d*n4*n5 - 6*n2*n4*n5 - 2*n4^2*n5 - 10*n5^2 + 4*d*n5^2 - 
      2*n2*n5^2 - 2*n4*n5^2)*j[p4, n1, n2, 0, -1 + n4, 1 + n5, 1, 1, 1, 
      1 + n9, 0, 1, 0, 1, 0])/((-3 + d)*(-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*
     (-3 + d - n4 - n5 - n9)) + 
   ((-60 + 49*d - 10*d^2 - 32*n2 + 13*d*n2 - 4*n2^2 - 22*n4 + 9*d*n4 - 
      6*n2*n4 - 2*n4^2 - 10*n5 + 4*d*n5 - 2*n2*n5 - 2*n4*n5)*
     j[p4, n1, n2, 0, n4, -1 + n5, 1, 1, 1, 1 + n9, 0, 1, 0, 1, 2])/
    ((-3 + d)*(-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*(-3 + d - n4 - n5 - n9)) + 
   ((-60 + 49*d - 10*d^2 - 32*n2 + 13*d*n2 - 4*n2^2 - 22*n4 + 9*d*n4 - 
      6*n2*n4 - 2*n4^2 - 10*n5 + 4*d*n5 - 2*n2*n5 - 2*n4*n5 - 60*n9 + 
      49*d*n9 - 10*d^2*n9 - 32*n2*n9 + 13*d*n2*n9 - 4*n2^2*n9 - 22*n4*n9 + 
      9*d*n4*n9 - 6*n2*n4*n9 - 2*n4^2*n9 - 10*n5*n9 + 4*d*n5*n9 - 
      2*n2*n5*n9 - 2*n4*n5*n9)*j[p4, n1, n2, 0, n4, -1 + n5, 1, 1, 1, 2 + n9, 
      0, 1, 0, 1, 1])/((-3 + d)*(-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*
     (-3 + d - n4 - n5 - n9)) + 
   ((90 - 71*d + 14*d^2 + 47*n2 - 21*d*n2 + d^2*n2 + 7*n2^2 - d*n2^2 + 
      22*n4 - 6*d*n4 - d^2*n4 + 3*n2*n4 + d*n2*n4 + 2*n4^2 + 16*n5 - 6*d*n5 + 
      2*n2*n5 + 2*n4*n5 + 6*n9 - 5*d*n9 + d^2*n9 + 3*n2*n9 - d*n2*n9)*
     j[p4, n1, n2, 0, n4, n5, 1, 0, 1, 1 + n9, 0, 1, 0, 1, 1])/
    ((-3 + d)*(-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*(-3 + d - n4 - n5 - n9)) + 
   ((-2 + d - n2)*j[p4, n1, n2, 0, n4, n5, 1, 0, 1, 1 + n9, 0, 1, 0, 2, 1])/
    ((-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*(-3 + d - n4 - n5 - n9)) + 
   ((2 - d + n2)*j[p4, n1, n2, 0, n4, n5, 1, 0, 1, 1 + n9, 0, 2, -1, 1, 1])/
    ((-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*(-3 + d - n4 - n5 - n9)) + 
   ((-2 + d - n2)*j[p4, n1, n2, 0, n4, n5, 1, 0, 1, 1 + n9, 0, 2, 0, 1, 1])/
    ((-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*(-3 + d - n4 - n5 - n9)) + 
   ((2 - d + n2 + 2*n9 - d*n9 + n2*n9)*j[p4, n1, n2, 0, n4, n5, 1, 0, 1, 
      2 + n9, 0, 1, 0, 1, 1])/((-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*
     (-3 + d - n4 - n5 - n9)) + 
   ((2 - d + n2)*j[p4, n1, n2, 0, n4, n5, 1, 0, 2, 1 + n9, 0, 1, -1, 1, 1])/
    ((-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*(-3 + d - n4 - n5 - n9)) + 
   ((-54 + 44*d - 9*d^2 + 6*n1 - 5*d*n1 + d^2*n1 + 85*n2 - 81*d*n2 + 
      19*d^2*n2 + 3*n1*n2 - d*n1*n2 + 57*n2^2 - 25*d*n2^2 + 8*n2^3 - 28*n4 + 
      14*d*n4 - d^2*n4 + 35*n2*n4 - 17*d*n2*n4 + 12*n2^2*n4 - 2*n4^2 + 
      4*n2*n4^2 - 10*n5 + 4*d*n5 + 18*n2*n5 - 8*d*n2*n5 + 4*n2^2*n5 - 
      2*n4*n5 + 4*n2*n4*n5 + 6*n9 - 5*d*n9 + d^2*n9 + 3*n2*n9 - d*n2*n9)*
     j[p4, n1, n2, 0, n4, n5, 1, 1, 0, 1 + n9, 0, 1, 0, 1, 1])/
    ((-3 + d)*(-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*(-3 + d - n4 - n5 - n9)) + 
   ((54 - 44*d + 9*d^2 + 29*n2 - 12*d*n2 + 4*n2^2 + 22*n4 - 9*d*n4 + 
      6*n2*n4 + 2*n4^2 + 10*n5 - 4*d*n5 + 2*n2*n5 + 2*n4*n5)*
     j[p4, n1, n2, 0, n4, n5, 1, 1, 0, 1 + n9, 0, 2, -1, 1, 1])/
    ((-3 + d)*(-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*(-3 + d - n4 - n5 - n9)) + 
   ((-54 + 44*d - 9*d^2 - 29*n2 + 12*d*n2 - 4*n2^2 - 22*n4 + 9*d*n4 - 
      6*n2*n4 - 2*n4^2 - 10*n5 + 4*d*n5 - 2*n2*n5 - 2*n4*n5)*
     j[p4, n1, n2, 0, n4, n5, 1, 1, 0, 1 + n9, 0, 2, 0, 1, 1])/
    ((-3 + d)*(-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*(-3 + d - n4 - n5 - n9)) + 
   ((2 - d + n2 + 2*n9 - d*n9 + n2*n9)*j[p4, n1, n2, 0, n4, n5, 1, 1, 0, 
      2 + n9, 0, 1, 0, 1, 1])/((-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*
     (-3 + d - n4 - n5 - n9)) + 
   ((2*n1 - d*n1 + n1*n2 - 2*n4 + d*n4 - n2*n4 + 2*n9 - d*n9 + n2*n9)*
     j[p4, n1, n2, 0, n4, n5, 1, 1, 1, 1 + n9, 0, 0, 0, 1, 1])/
    ((-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*(-3 + d - n4 - n5 - n9)) + 
   ((-96 + 76*d - 15*d^2 + 84*n1 - 66*d*n1 + 13*d^2*n1 + 76*n2 - 81*d*n2 + 
      20*d^2*n2 + 38*n1*n2 - 15*d*n1*n2 + 60*n2^2 - 26*d*n2^2 + 4*n1*n2^2 + 
      8*n2^3 - 28*n4 + 11*d*n4 + 28*n1*n4 - 11*d*n1*n4 + 38*n2*n4 - 
      18*d*n2*n4 + 6*n1*n2*n4 + 12*n2^2*n4 - 2*n4^2 + 2*n1*n4^2 + 4*n2*n4^2 - 
      16*n5 + 6*d*n5 + 16*n1*n5 - 6*d*n1*n5 + 18*n2*n5 - 8*d*n2*n5 + 
      2*n1*n2*n5 + 4*n2^2*n5 - 2*n4*n5 + 2*n1*n4*n5 + 4*n2*n4*n5)*
     j[p4, n1, n2, 0, n4, n5, 1, 1, 1, 1 + n9, 0, 1, 0, 0, 1])/
    ((-3 + d)*(-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*(-3 + d - n4 - n5 - n9)) + 
   ((60 - 49*d + 10*d^2 + 32*n2 - 13*d*n2 + 4*n2^2 + 22*n4 - 9*d*n4 + 
      6*n2*n4 + 2*n4^2 + 10*n5 - 4*d*n5 + 2*n2*n5 + 2*n4*n5)*
     j[p4, n1, n2, 0, n4, n5, 1, 1, 1, 1 + n9, 0, 1, 0, 0, 2])/
    ((-3 + d)*(-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*(-3 + d - n4 - n5 - n9)) + 
   ((54 - 44*d + 9*d^2 + 29*n2 - 12*d*n2 + 4*n2^2 - 32*n4 + 35*d*n4 - 
      9*d^2*n4 - 23*n2*n4 + 12*d*n2*n4 - 4*n2^2*n4 - 20*n4^2 + 9*d*n4^2 - 
      6*n2*n4^2 - 2*n4^3 + 10*n5 - 4*d*n5 + 2*n2*n5 - 8*n4*n5 + 4*d*n4*n5 - 
      2*n2*n4*n5 - 2*n4^2*n5 + 30*n9 - 22*d*n9 + 4*d^2*n9 + 9*n2*n9 - 
      3*d*n2*n9 + 6*n4*n9 - 2*d*n4*n9 + 6*n5*n9 - 2*d*n5*n9)*
     j[p4, n1, n2, 0, n4, n5, 1, 1, 1, 1 + n9, 0, 1, 0, 1, 0])/
    ((-3 + d)*(-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*(-3 + d - n4 - n5 - n9)) + 
   ((-432 + 514*d - 204*d^2 + 27*d^3 - 84*n1 + 66*d*n1 - 13*d^2*n1 - 340*n2 + 
      271*d*n2 - 54*d^2*n2 - 38*n1*n2 + 15*d*n1*n2 - 90*n2^2 + 36*d*n2^2 - 
      4*n1*n2^2 - 8*n2^3 - 284*n4 + 226*d*n4 - 45*d^2*n4 - 28*n1*n4 + 
      11*d*n1*n4 - 150*n2*n4 + 60*d*n2*n4 - 6*n1*n2*n4 - 20*n2^2*n4 - 
      60*n4^2 + 24*d*n4^2 - 2*n1*n4^2 - 16*n2*n4^2 - 4*n4^3 - 188*n5 + 
      150*d*n5 - 30*d^2*n5 - 16*n1*n5 + 6*d*n1*n5 - 94*n2*n5 + 38*d*n2*n5 - 
      2*n1*n2*n5 - 12*n2^2*n5 - 80*n4*n5 + 32*d*n4*n5 - 2*n1*n4*n5 - 
      20*n2*n4*n5 - 8*n4^2*n5 - 20*n5^2 + 8*d*n5^2 - 4*n2*n5^2 - 4*n4*n5^2 - 
      84*n9 + 66*d*n9 - 13*d^2*n9 - 38*n2*n9 + 15*d*n2*n9 - 4*n2^2*n9 - 
      28*n4*n9 + 11*d*n4*n9 - 6*n2*n4*n9 - 2*n4^2*n9 - 16*n5*n9 + 6*d*n5*n9 - 
      2*n2*n5*n9 - 2*n4*n5*n9)*j[p4, n1, n2, 0, n4, n5, 1, 1, 1, 1 + n9, 0, 
      1, 0, 1, 1])/((-3 + d)*(-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*
     (-3 + d - n4 - n5 - n9)) + ((2 - d + n2 + 2*n9 - d*n9 + n2*n9)*
     j[p4, n1, n2, 0, n4, n5, 1, 1, 1, 2 + n9, -1, 1, 0, 1, 0])/
    ((-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*(-3 + d - n4 - n5 - n9)) + 
   ((-2 + d - n2 - 2*n9 + d*n9 - n2*n9)*j[p4, n1, n2, 0, n4, n5, 1, 1, 1, 
      2 + n9, 0, 0, 0, 1, 1])/((-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*
     (-3 + d - n4 - n5 - n9)) + ((10 - 4*d + 3*n2 + 2*n4 + 2*n5)*
     j[p4, n1, n2, 0, n4, n5, 1, 1, 2, 1 + n9, 0, 0, -1, 1, 1])/
    ((-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*(-3 + d - n4 - n5 - n9)) - 
   j[p4, n1, n2, 0, n4, n5, 1, 2, 0, 1 + n9, -1, 1, 0, 1, 1]/
    (-3 + d - n4 - n5 - n9) + ((10 - 4*d + 3*n2 + 2*n4 + 2*n5)*
     j[p4, n1, n2, 0, n4, n5, 1, 2, 1, 1 + n9, -1, 1, 0, 0, 1])/
    ((-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*(-3 + d - n4 - n5 - n9)) + 
   ((-10 + 4*d - 3*n2 - 2*n4 - 2*n5)*j[p4, n1, n2, 0, n4, n5, 2, 0, 1, n9, 0, 
      1, 0, 1, 1])/((-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*
     (-3 + d - n4 - n5 - n9)) + ((10 - 4*d + 3*n2 + 2*n4 + 2*n5)*
     j[p4, n1, n2, 0, n4, n5, 2, 0, 1, 1 + n9, -1, 1, 0, 1, 1])/
    ((-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*(-3 + d - n4 - n5 - n9)) + 
   ((-12 + 5*d - 4*n2 - 2*n4 - 2*n5)*j[p4, n1, n2, 0, n4, n5, 2, 1, 0, n9, 0, 
      1, 0, 1, 1])/((-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*
     (-3 + d - n4 - n5 - n9)) + ((12 - 5*d + 4*n2 + 2*n4 + 2*n5)*
     j[p4, n1, n2, 0, n4, n5, 2, 1, 0, 1 + n9, -1, 1, 0, 1, 1])/
    ((-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*(-3 + d - n4 - n5 - n9)) + 
   ((54 - 44*d + 9*d^2 + 29*n2 - 12*d*n2 + 4*n2^2 + 22*n4 - 9*d*n4 + 
      6*n2*n4 + 2*n4^2 + 10*n5 - 4*d*n5 + 2*n2*n5 + 2*n4*n5)*
     j[p4, n1, n2, 0, n4, n5, 2, 1, 0, 1 + n9, 0, 1, -1, 1, 1])/
    ((-3 + d)*(-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*(-3 + d - n4 - n5 - n9)) + 
   ((-10 + 4*d - 3*n2 - 2*n4 - 2*n5)*j[p4, n1, n2, 0, n4, n5, 2, 1, 1, n9, 0, 
      1, 0, 0, 1])/((-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*
     (-3 + d - n4 - n5 - n9)) + ((-10 + 4*d - 3*n2 - 2*n4 - 2*n5)*
     j[p4, n1, n2, 0, n4, n5, 2, 1, 1, n9, 0, 1, 0, 1, 0])/
    ((-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*(-3 + d - n4 - n5 - n9)) + 
   ((10 - 4*d + 3*n2 + 2*n4 + 2*n5)*j[p4, n1, n2, 0, n4, n5, 2, 1, 1, 1 + n9, 
      -1, 1, 0, 0, 1])/((-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*
     (-3 + d - n4 - n5 - n9)) + ((10 - 4*d + 3*n2 + 2*n4 + 2*n5)*
     j[p4, n1, n2, 0, n4, n5, 2, 1, 1, 1 + n9, -1, 1, 0, 1, 0])/
    ((-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*(-3 + d - n4 - n5 - n9)) + 
   ((-2*n5 + d*n5 - n2*n5)*j[p4, n1, n2, 0, n4, 1 + n5, 1, 0, 1, n9, 0, 1, 0, 
      1, 1])/((8 - 3*d + 2*n2 + 2*n4 + 2*n5)*(3 - d + n4 + n5 + n9)) + 
   ((10*n5 - 4*d*n5 + 3*n2*n5 + 2*n4*n5 + 2*n5^2)*j[p4, n1, n2, 0, n4, 
      1 + n5, 1, 1, 1, n9, 0, 1, 0, 0, 1])/((8 - 3*d + 2*n2 + 2*n4 + 2*n5)*
     (3 - d + n4 + n5 + n9)) + 
   ((-10*n5 + 4*d*n5 - 3*n2*n5 - 2*n4*n5 - 2*n5^2)*j[p4, n1, n2, 0, n4, 
      1 + n5, 1, 1, 1, n9, 0, 1, 0, 1, 0])/((8 - 3*d + 2*n2 + 2*n4 + 2*n5)*
     (3 - d + n4 + n5 + n9)) + 
   ((-12*n4 + 5*d*n4 - 4*n2*n4 - 2*n4^2 - 2*n4*n5)*j[p4, n1, n2, 0, 1 + n4, 
      -1 + n5, 1, 1, 1, 1 + n9, 0, 1, -1, 1, 1])/
    ((-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*(-3 + d - n4 - n5 - n9)) - 
   (n4*j[p4, n1, n2, 0, 1 + n4, n5, 0, 1, 1, 1 + n9, -1, 1, 0, 1, 1])/
    (3 - d + n4 + n5 + n9) + ((12*n4 - 5*d*n4 + 4*n2*n4 + 2*n4^2 + 2*n4*n5)*
     j[p4, n1, n2, 0, 1 + n4, n5, 1, 0, 1, 1 + n9, 0, 1, -1, 1, 1])/
    ((-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*(-3 + d - n4 - n5 - n9)) + 
   (n4*j[p4, n1, n2, 0, 1 + n4, n5, 1, 1, 0, 1 + n9, -1, 1, 0, 1, 1])/
    (3 - d + n4 + n5 + n9) + ((-10*n4 + 4*d*n4 - 3*n2*n4 - 2*n4^2 - 2*n4*n5)*
     j[p4, n1, n2, 0, 1 + n4, n5, 1, 1, 1, n9, 0, 1, 0, 1, 0])/
    ((8 - 3*d + 2*n2 + 2*n4 + 2*n5)*(3 - d + n4 + n5 + n9)) + 
   ((10*n4 - 4*d*n4 + 3*n2*n4 + 2*n4^2 + 2*n4*n5)*j[p4, n1, n2, 0, 1 + n4, 
      n5, 1, 1, 1, 1 + n9, -1, 1, 0, 1, 0])/((8 - 3*d + 2*n2 + 2*n4 + 2*n5)*
     (3 - d + n4 + n5 + n9)) + 
   ((-54*n2 + 44*d*n2 - 9*d^2*n2 - 29*n2^2 + 12*d*n2^2 - 4*n2^3 - 22*n2*n4 + 
      9*d*n2*n4 - 6*n2^2*n4 - 2*n2*n4^2 - 10*n2*n5 + 4*d*n2*n5 - 2*n2^2*n5 - 
      2*n2*n4*n5)*j[p4, n1, 1 + n2, -1, n4, n5, 1, 0, 1, 1 + n9, 0, 1, 0, 1, 
      1])/((-3 + d)*(-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*
     (-3 + d - n4 - n5 - n9)) + 
   ((54*n2 - 44*d*n2 + 9*d^2*n2 + 29*n2^2 - 12*d*n2^2 + 4*n2^3 + 22*n2*n4 - 
      9*d*n2*n4 + 6*n2^2*n4 + 2*n2*n4^2 + 10*n2*n5 - 4*d*n2*n5 + 2*n2^2*n5 + 
      2*n2*n4*n5)*j[p4, n1, 1 + n2, -1, n4, n5, 1, 1, 0, 1 + n9, 0, 1, 0, 1, 
      1])/((-3 + d)*(-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*
     (-3 + d - n4 - n5 - n9)) - 
   (n2*j[p4, n1, 1 + n2, 0, n4, n5, 1, 0, 1, 1 + n9, -1, 1, 0, 1, 1])/
    (-3 + d - n4 - n5 - n9) + 
   ((-54*n2 + 44*d*n2 - 9*d^2*n2 - 29*n2^2 + 12*d*n2^2 - 4*n2^3 - 22*n2*n4 + 
      9*d*n2*n4 - 6*n2^2*n4 - 2*n2*n4^2 - 10*n2*n5 + 4*d*n2*n5 - 2*n2^2*n5 - 
      2*n2*n4*n5)*j[p4, n1, 1 + n2, 0, n4, n5, 1, 0, 1, 1 + n9, 0, 1, -1, 1, 
      1])/((-3 + d)*(-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*
     (-3 + d - n4 - n5 - n9)) + 
   ((12*n2 - 5*d*n2 + 4*n2^2 + 2*n2*n4 + 2*n2*n5)*j[p4, n1, 1 + n2, 0, n4, 
      n5, 1, 1, 0, 1 + n9, -1, 1, 0, 1, 1])/((-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*
     (-3 + d - n4 - n5 - n9)) + 
   ((54*n2 - 44*d*n2 + 9*d^2*n2 + 29*n2^2 - 12*d*n2^2 + 4*n2^3 + 22*n2*n4 - 
      9*d*n2*n4 + 6*n2^2*n4 + 2*n2*n4^2 + 10*n2*n5 - 4*d*n2*n5 + 2*n2^2*n5 + 
      2*n2*n4*n5)*j[p4, n1, 1 + n2, 0, n4, n5, 1, 1, 0, 1 + n9, 0, 1, -1, 1, 
      1])/((-3 + d)*(-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*
     (-3 + d - n4 - n5 - n9)) + 
   ((-20*n2 + 8*d*n2 - 6*n2^2 - 4*n2*n4 - 4*n2*n5)*j[p4, n1, 1 + n2, 0, n4, 
      n5, 1, 1, 1, 1 + n9, -1, 1, 0, 0, 1])/((8 - 3*d + 2*n2 + 2*n4 + 2*n5)*
     (-3 + d - n4 - n5 - n9)) + ((-2*n1 + d*n1 - n1*n2)*
     j[p4, 1 + n1, -1 + n2, 0, n4, n5, 1, 1, 1, 1 + n9, 0, 1, 0, 0, 1])/
    ((-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*(-3 + d - n4 - n5 - n9)) + 
   ((2*n1 - d*n1 + n1*n2)*j[p4, 1 + n1, n2, 0, n4, n5, 1, 1, 0, 1 + n9, 0, 1, 
      0, 1, 1])/((-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*(-3 + d - n4 - n5 - n9)) + 
   ((2*n1 - d*n1 + n1*n2)*j[p4, 1 + n1, n2, 0, n4, n5, 1, 1, 1, 1 + n9, -1, 
      1, 0, 0, 1])/((-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*
     (-3 + d - n4 - n5 - n9)) + ((-2*n1 + d*n1 - n1*n2)*
     j[p4, 1 + n1, n2, 0, n4, n5, 1, 1, 1, 1 + n9, 0, 0, 0, 1, 1])/
    ((-8 + 3*d - 2*n2 - 2*n4 - 2*n5)*(-3 + d - n4 - n5 - n9)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n4 == 0 && n5 == 1 && 
    n6 == 1 && n7 == 1 && n8 == 1 -> 
  ((2*n10*n3 - d*n10*n3 + 2*n10^2*n3 + 2*n10*n2*n3)*
     j[p4, -1 + n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, n9, 1 + n10, 1, 0, 1, 1])/
    (-30 + 19*d - 3*d^2 - 16*n10 + 5*d*n10 - 2*n10^2 + 14*n2 - 14*d*n2 + 
     3*d^2*n2 + 12*n10*n2 - 5*d*n10*n2 + 2*n10^2*n2 + 14*n2^2 - 5*d*n2^2 + 
     4*n10*n2^2 + 2*n2^3 - 18*n3 + 9*d*n3 - d^2*n3 - 2*n10*n3 - d*n2*n3 + 
     2*n10*n2*n3 + 2*n2^2*n3 - 6*n9 + 2*d*n9 - 2*n10*n9 + 4*n2*n9 - 
     2*d*n2*n9 + 2*n10*n2*n9 + 2*n2^2*n9 - 4*n3*n9 + d*n3*n9) + 
   ((4*n3*n9 - d*n3*n9 + 2*n10*n3*n9 + 2*n3^2*n9)*j[p4, -1 + n1, -1 + n2, 
      1 + n3, 0, 1, 1, 1, 1, 1 + n9, n10, 1, 0, 1, 1])/
    (-30 + 19*d - 3*d^2 - 16*n10 + 5*d*n10 - 2*n10^2 + 14*n2 - 14*d*n2 + 
     3*d^2*n2 + 12*n10*n2 - 5*d*n10*n2 + 2*n10^2*n2 + 14*n2^2 - 5*d*n2^2 + 
     4*n10*n2^2 + 2*n2^3 - 18*n3 + 9*d*n3 - d^2*n3 - 2*n10*n3 - d*n2*n3 + 
     2*n10*n2*n3 + 2*n2^2*n3 - 6*n9 + 2*d*n9 - 2*n10*n9 + 4*n2*n9 - 
     2*d*n2*n9 + 2*n10*n2*n9 + 2*n2^2*n9 - 4*n3*n9 + d*n3*n9) + 
   ((-4*n10 + d*n10 - 2*n10^2 + 4*n10*n2 - d*n10*n2 + 2*n10^2*n2 - 2*n10*n3 + 
      2*n10*n2*n3)*j[p4, -1 + n1, n2, n3, 0, 1, 1, 1, 1, n9, 1 + n10, 1, 0, 
      1, 1])/(-30 + 19*d - 3*d^2 - 16*n10 + 5*d*n10 - 2*n10^2 + 14*n2 - 
     14*d*n2 + 3*d^2*n2 + 12*n10*n2 - 5*d*n10*n2 + 2*n10^2*n2 + 14*n2^2 - 
     5*d*n2^2 + 4*n10*n2^2 + 2*n2^3 - 18*n3 + 9*d*n3 - d^2*n3 - 2*n10*n3 - 
     d*n2*n3 + 2*n10*n2*n3 + 2*n2^2*n3 - 6*n9 + 2*d*n9 - 2*n10*n9 + 4*n2*n9 - 
     2*d*n2*n9 + 2*n10*n2*n9 + 2*n2^2*n9 - 4*n3*n9 + d*n3*n9) + 
   ((-6*n9 + 2*d*n9 - 2*n10*n9 + 4*n2*n9 - 2*d*n2*n9 + 2*n10*n2*n9 + 
      2*n2^2*n9 - 4*n3*n9 + d*n3*n9)*j[p4, -1 + n1, n2, n3, 0, 1, 1, 1, 1, 
      1 + n9, n10, 1, 0, 1, 1])/(-30 + 19*d - 3*d^2 - 16*n10 + 5*d*n10 - 
     2*n10^2 + 14*n2 - 14*d*n2 + 3*d^2*n2 + 12*n10*n2 - 5*d*n10*n2 + 
     2*n10^2*n2 + 14*n2^2 - 5*d*n2^2 + 4*n10*n2^2 + 2*n2^3 - 18*n3 + 9*d*n3 - 
     d^2*n3 - 2*n10*n3 - d*n2*n3 + 2*n10*n2*n3 + 2*n2^2*n3 - 6*n9 + 2*d*n9 - 
     2*n10*n9 + 4*n2*n9 - 2*d*n2*n9 + 2*n10*n2*n9 + 2*n2^2*n9 - 4*n3*n9 + 
     d*n3*n9) + ((2*n10 - 2*n10*n2 + 2*n10*n3)*j[p4, n1, -1 + n2, n3, 0, 1, 
      1, 2, 1, n9, 1 + n10, 0, 0, 1, 1])/(-30 + 19*d - 3*d^2 - 16*n10 + 
     5*d*n10 - 2*n10^2 + 14*n2 - 14*d*n2 + 3*d^2*n2 + 12*n10*n2 - 
     5*d*n10*n2 + 2*n10^2*n2 + 14*n2^2 - 5*d*n2^2 + 4*n10*n2^2 + 2*n2^3 - 
     18*n3 + 9*d*n3 - d^2*n3 - 2*n10*n3 - d*n2*n3 + 2*n10*n2*n3 + 2*n2^2*n3 - 
     6*n9 + 2*d*n9 - 2*n10*n9 + 4*n2*n9 - 2*d*n2*n9 + 2*n10*n2*n9 + 
     2*n2^2*n9 - 4*n3*n9 + d*n3*n9) + 
   ((-4*n3 + d*n3 - 2*n10*n3 - 2*n3^2)*j[p4, n1, -1 + n2, 1 + n3, 0, 0, 1, 1, 
      1, n9, n10, 1, 0, 1, 2])/(-30 + 19*d - 3*d^2 - 16*n10 + 5*d*n10 - 
     2*n10^2 + 14*n2 - 14*d*n2 + 3*d^2*n2 + 12*n10*n2 - 5*d*n10*n2 + 
     2*n10^2*n2 + 14*n2^2 - 5*d*n2^2 + 4*n10*n2^2 + 2*n2^3 - 18*n3 + 9*d*n3 - 
     d^2*n3 - 2*n10*n3 - d*n2*n3 + 2*n10*n2*n3 + 2*n2^2*n3 - 6*n9 + 2*d*n9 - 
     2*n10*n9 + 4*n2*n9 - 2*d*n2*n9 + 2*n10*n2*n9 + 2*n2^2*n9 - 4*n3*n9 + 
     d*n3*n9) + ((-4*n3*n9 + d*n3*n9 - 2*n10*n3*n9 - 2*n3^2*n9)*
     j[p4, n1, -1 + n2, 1 + n3, 0, 0, 1, 1, 1, 1 + n9, n10, 1, 0, 1, 1])/
    (-30 + 19*d - 3*d^2 - 16*n10 + 5*d*n10 - 2*n10^2 + 14*n2 - 14*d*n2 + 
     3*d^2*n2 + 12*n10*n2 - 5*d*n10*n2 + 2*n10^2*n2 + 14*n2^2 - 5*d*n2^2 + 
     4*n10*n2^2 + 2*n2^3 - 18*n3 + 9*d*n3 - d^2*n3 - 2*n10*n3 - d*n2*n3 + 
     2*n10*n2*n3 + 2*n2^2*n3 - 6*n9 + 2*d*n9 - 2*n10*n9 + 4*n2*n9 - 
     2*d*n2*n9 + 2*n10*n2*n9 + 2*n2^2*n9 - 4*n3*n9 + d*n3*n9) + 
   ((-4*n10*n3 + d*n10*n3 - 2*n10^2*n3 - 2*n10*n3^2)*
     j[p4, n1, -1 + n2, 1 + n3, 0, 1, 1, 0, 1, n9, 1 + n10, 1, 0, 1, 1])/
    (-30 + 19*d - 3*d^2 - 16*n10 + 5*d*n10 - 2*n10^2 + 14*n2 - 14*d*n2 + 
     3*d^2*n2 + 12*n10*n2 - 5*d*n10*n2 + 2*n10^2*n2 + 14*n2^2 - 5*d*n2^2 + 
     4*n10*n2^2 + 2*n2^3 - 18*n3 + 9*d*n3 - d^2*n3 - 2*n10*n3 - d*n2*n3 + 
     2*n10*n2*n3 + 2*n2^2*n3 - 6*n9 + 2*d*n9 - 2*n10*n9 + 4*n2*n9 - 
     2*d*n2*n9 + 2*n10*n2*n9 + 2*n2^2*n9 - 4*n3*n9 + d*n3*n9) + 
   ((-2*n10*n3 + d*n10*n3 - 2*n10^2*n3 - 2*n10*n2*n3)*
     j[p4, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 0, n9, 1 + n10, 1, 0, 1, 1])/
    (-30 + 19*d - 3*d^2 - 16*n10 + 5*d*n10 - 2*n10^2 + 14*n2 - 14*d*n2 + 
     3*d^2*n2 + 12*n10*n2 - 5*d*n10*n2 + 2*n10^2*n2 + 14*n2^2 - 5*d*n2^2 + 
     4*n10*n2^2 + 2*n2^3 - 18*n3 + 9*d*n3 - d^2*n3 - 2*n10*n3 - d*n2*n3 + 
     2*n10*n2*n3 + 2*n2^2*n3 - 6*n9 + 2*d*n9 - 2*n10*n9 + 4*n2*n9 - 
     2*d*n2*n9 + 2*n10*n2*n9 + 2*n2^2*n9 - 4*n3*n9 + d*n3*n9) + 
   ((4*n3 - d*n3 + 2*n10*n3 + 2*n3^2)*j[p4, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 
      1, n9, n10, 1, 0, 0, 2])/(-30 + 19*d - 3*d^2 - 16*n10 + 5*d*n10 - 
     2*n10^2 + 14*n2 - 14*d*n2 + 3*d^2*n2 + 12*n10*n2 - 5*d*n10*n2 + 
     2*n10^2*n2 + 14*n2^2 - 5*d*n2^2 + 4*n10*n2^2 + 2*n2^3 - 18*n3 + 9*d*n3 - 
     d^2*n3 - 2*n10*n3 - d*n2*n3 + 2*n10*n2*n3 + 2*n2^2*n3 - 6*n9 + 2*d*n9 - 
     2*n10*n9 + 4*n2*n9 - 2*d*n2*n9 + 2*n10*n2*n9 + 2*n2^2*n9 - 4*n3*n9 + 
     d*n3*n9) + ((2*n10*n3 - 2*n10*n2*n3 + 2*n10*n3^2)*
     j[p4, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, n9, 1 + n10, 0, 0, 1, 1])/
    (-30 + 19*d - 3*d^2 - 16*n10 + 5*d*n10 - 2*n10^2 + 14*n2 - 14*d*n2 + 
     3*d^2*n2 + 12*n10*n2 - 5*d*n10*n2 + 2*n10^2*n2 + 14*n2^2 - 5*d*n2^2 + 
     4*n10*n2^2 + 2*n2^3 - 18*n3 + 9*d*n3 - d^2*n3 - 2*n10*n3 - d*n2*n3 + 
     2*n10*n2*n3 + 2*n2^2*n3 - 6*n9 + 2*d*n9 - 2*n10*n9 + 4*n2*n9 - 
     2*d*n2*n9 + 2*n10*n2*n9 + 2*n2^2*n9 - 4*n3*n9 + d*n3*n9) + 
   ((2*n10*n3 - d*n10*n3 + 2*n10^2*n3 + 2*n10*n2*n3)*
     j[p4, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, n9, 1 + n10, 1, -1, 1, 1])/
    (-30 + 19*d - 3*d^2 - 16*n10 + 5*d*n10 - 2*n10^2 + 14*n2 - 14*d*n2 + 
     3*d^2*n2 + 12*n10*n2 - 5*d*n10*n2 + 2*n10^2*n2 + 14*n2^2 - 5*d*n2^2 + 
     4*n10*n2^2 + 2*n2^3 - 18*n3 + 9*d*n3 - d^2*n3 - 2*n10*n3 - d*n2*n3 + 
     2*n10*n2*n3 + 2*n2^2*n3 - 6*n9 + 2*d*n9 - 2*n10*n9 + 4*n2*n9 - 
     2*d*n2*n9 + 2*n10*n2*n9 + 2*n2^2*n9 - 4*n3*n9 + d*n3*n9) + 
   ((-2*n10*n3 + d*n10*n3 - 2*n10^2*n3 - 2*n10*n2*n3)*
     j[p4, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, n9, 1 + n10, 1, 0, 0, 1])/
    (-30 + 19*d - 3*d^2 - 16*n10 + 5*d*n10 - 2*n10^2 + 14*n2 - 14*d*n2 + 
     3*d^2*n2 + 12*n10*n2 - 5*d*n10*n2 + 2*n10^2*n2 + 14*n2^2 - 5*d*n2^2 + 
     4*n10*n2^2 + 2*n2^3 - 18*n3 + 9*d*n3 - d^2*n3 - 2*n10*n3 - d*n2*n3 + 
     2*n10*n2*n3 + 2*n2^2*n3 - 6*n9 + 2*d*n9 - 2*n10*n9 + 4*n2*n9 - 
     2*d*n2*n9 + 2*n10*n2*n9 + 2*n2^2*n9 - 4*n3*n9 + d*n3*n9) + 
   ((-2*n10*n3 + d*n10*n3 - 2*n10^2*n3 - 2*n10*n2*n3)*
     j[p4, n1, -1 + n2, 1 + n3, 0, 1, 1, 1, 1, n9, 1 + n10, 1, 0, 1, 1])/
    (-30 + 19*d - 3*d^2 - 16*n10 + 5*d*n10 - 2*n10^2 + 14*n2 - 14*d*n2 + 
     3*d^2*n2 + 12*n10*n2 - 5*d*n10*n2 + 2*n10^2*n2 + 14*n2^2 - 5*d*n2^2 + 
     4*n10*n2^2 + 2*n2^3 - 18*n3 + 9*d*n3 - d^2*n3 - 2*n10*n3 - d*n2*n3 + 
     2*n10*n2*n3 + 2*n2^2*n3 - 6*n9 + 2*d*n9 - 2*n10*n9 + 4*n2*n9 - 
     2*d*n2*n9 + 2*n10*n2*n9 + 2*n2^2*n9 - 4*n3*n9 + d*n3*n9) + 
   ((4*n3*n9 - d*n3*n9 + 2*n10*n3*n9 + 2*n3^2*n9)*j[p4, n1, -1 + n2, 1 + n3, 
      0, 1, 1, 1, 1, 1 + n9, n10, 1, 0, 1, 0])/(-30 + 19*d - 3*d^2 - 16*n10 + 
     5*d*n10 - 2*n10^2 + 14*n2 - 14*d*n2 + 3*d^2*n2 + 12*n10*n2 - 
     5*d*n10*n2 + 2*n10^2*n2 + 14*n2^2 - 5*d*n2^2 + 4*n10*n2^2 + 2*n2^3 - 
     18*n3 + 9*d*n3 - d^2*n3 - 2*n10*n3 - d*n2*n3 + 2*n10*n2*n3 + 2*n2^2*n3 - 
     6*n9 + 2*d*n9 - 2*n10*n9 + 4*n2*n9 - 2*d*n2*n9 + 2*n10*n2*n9 + 
     2*n2^2*n9 - 4*n3*n9 + d*n3*n9) + 
   ((-4*n3*n9 + d*n3*n9 - 2*n10*n3*n9 - 2*n3^2*n9)*j[p4, n1, -1 + n2, 1 + n3, 
      0, 1, 1, 1, 1, 1 + n9, n10, 1, 0, 1, 1])/(-30 + 19*d - 3*d^2 - 16*n10 + 
     5*d*n10 - 2*n10^2 + 14*n2 - 14*d*n2 + 3*d^2*n2 + 12*n10*n2 - 
     5*d*n10*n2 + 2*n10^2*n2 + 14*n2^2 - 5*d*n2^2 + 4*n10*n2^2 + 2*n2^3 - 
     18*n3 + 9*d*n3 - d^2*n3 - 2*n10*n3 - d*n2*n3 + 2*n10*n2*n3 + 2*n2^2*n3 - 
     6*n9 + 2*d*n9 - 2*n10*n9 + 4*n2*n9 - 2*d*n2*n9 + 2*n10*n2*n9 + 
     2*n2^2*n9 - 4*n3*n9 + d*n3*n9) + ((-2*n3 + d*n3 - 2*n10*n3 - 2*n2*n3)*
     j[p4, n1, -1 + n2, 1 + n3, 0, 1, 1, 2, 1, n9, n10, 1, 0, 0, 1])/
    (-30 + 19*d - 3*d^2 - 16*n10 + 5*d*n10 - 2*n10^2 + 14*n2 - 14*d*n2 + 
     3*d^2*n2 + 12*n10*n2 - 5*d*n10*n2 + 2*n10^2*n2 + 14*n2^2 - 5*d*n2^2 + 
     4*n10*n2^2 + 2*n2^3 - 18*n3 + 9*d*n3 - d^2*n3 - 2*n10*n3 - d*n2*n3 + 
     2*n10*n2*n3 + 2*n2^2*n3 - 6*n9 + 2*d*n9 - 2*n10*n9 + 4*n2*n9 - 
     2*d*n2*n9 + 2*n10*n2*n9 + 2*n2^2*n9 - 4*n3*n9 + d*n3*n9) + 
   ((-4*n3 + d*n3 - 2*n10*n3 - 2*n3^2)*j[p4, n1, -1 + n2, 1 + n3, 0, 2, 1, 1, 
      1, n9, n10, 1, 0, 0, 1])/(-30 + 19*d - 3*d^2 - 16*n10 + 5*d*n10 - 
     2*n10^2 + 14*n2 - 14*d*n2 + 3*d^2*n2 + 12*n10*n2 - 5*d*n10*n2 + 
     2*n10^2*n2 + 14*n2^2 - 5*d*n2^2 + 4*n10*n2^2 + 2*n2^3 - 18*n3 + 9*d*n3 - 
     d^2*n3 - 2*n10*n3 - d*n2*n3 + 2*n10*n2*n3 + 2*n2^2*n3 - 6*n9 + 2*d*n9 - 
     2*n10*n9 + 4*n2*n9 - 2*d*n2*n9 + 2*n10*n2*n9 + 2*n2^2*n9 - 4*n3*n9 + 
     d*n3*n9) + ((4*n3 - d*n3 + 2*n10*n3 + 2*n3^2)*j[p4, n1, -1 + n2, 1 + n3, 
      0, 2, 1, 1, 1, n9, n10, 1, 0, 1, 0])/(-30 + 19*d - 3*d^2 - 16*n10 + 
     5*d*n10 - 2*n10^2 + 14*n2 - 14*d*n2 + 3*d^2*n2 + 12*n10*n2 - 
     5*d*n10*n2 + 2*n10^2*n2 + 14*n2^2 - 5*d*n2^2 + 4*n10*n2^2 + 2*n2^3 - 
     18*n3 + 9*d*n3 - d^2*n3 - 2*n10*n3 - d*n2*n3 + 2*n10*n2*n3 + 2*n2^2*n3 - 
     6*n9 + 2*d*n9 - 2*n10*n9 + 4*n2*n9 - 2*d*n2*n9 + 2*n10*n2*n9 + 
     2*n2^2*n9 - 4*n3*n9 + d*n3*n9) + 
   ((-4*n3 + d*n3 - 2*n10*n3 - 6*n3^2 + d*n3^2 - 2*n10*n3^2 - 2*n3^3)*
     j[p4, n1, -1 + n2, 2 + n3, 0, 1, 1, 0, 1, n9, n10, 1, 0, 1, 1])/
    (-30 + 19*d - 3*d^2 - 16*n10 + 5*d*n10 - 2*n10^2 + 14*n2 - 14*d*n2 + 
     3*d^2*n2 + 12*n10*n2 - 5*d*n10*n2 + 2*n10^2*n2 + 14*n2^2 - 5*d*n2^2 + 
     4*n10*n2^2 + 2*n2^3 - 18*n3 + 9*d*n3 - d^2*n3 - 2*n10*n3 - d*n2*n3 + 
     2*n10*n2*n3 + 2*n2^2*n3 - 6*n9 + 2*d*n9 - 2*n10*n9 + 4*n2*n9 - 
     2*d*n2*n9 + 2*n10*n2*n9 + 2*n2^2*n9 - 4*n3*n9 + d*n3*n9) + 
   ((4*n3 - d*n3 + 2*n10*n3 + 6*n3^2 - d*n3^2 + 2*n10*n3^2 + 2*n3^3)*
     j[p4, n1, -1 + n2, 2 + n3, 0, 1, 1, 1, 1, n9, n10, 1, 0, 0, 1])/
    (-30 + 19*d - 3*d^2 - 16*n10 + 5*d*n10 - 2*n10^2 + 14*n2 - 14*d*n2 + 
     3*d^2*n2 + 12*n10*n2 - 5*d*n10*n2 + 2*n10^2*n2 + 14*n2^2 - 5*d*n2^2 + 
     4*n10*n2^2 + 2*n2^3 - 18*n3 + 9*d*n3 - d^2*n3 - 2*n10*n3 - d*n2*n3 + 
     2*n10*n2*n3 + 2*n2^2*n3 - 6*n9 + 2*d*n9 - 2*n10*n9 + 4*n2*n9 - 
     2*d*n2*n9 + 2*n10*n2*n9 + 2*n2^2*n9 - 4*n3*n9 + d*n3*n9) + 
   ((6 - 2*d + 2*n10 - 4*n2 + 2*d*n2 - 2*n10*n2 - 2*n2^2 + 4*n3 - d*n3)*
     j[p4, n1, n2, n3, 0, 0, 1, 1, 1, n9, n10, 1, 0, 1, 2])/
    (-30 + 19*d - 3*d^2 - 16*n10 + 5*d*n10 - 2*n10^2 + 14*n2 - 14*d*n2 + 
     3*d^2*n2 + 12*n10*n2 - 5*d*n10*n2 + 2*n10^2*n2 + 14*n2^2 - 5*d*n2^2 + 
     4*n10*n2^2 + 2*n2^3 - 18*n3 + 9*d*n3 - d^2*n3 - 2*n10*n3 - d*n2*n3 + 
     2*n10*n2*n3 + 2*n2^2*n3 - 6*n9 + 2*d*n9 - 2*n10*n9 + 4*n2*n9 - 
     2*d*n2*n9 + 2*n10*n2*n9 + 2*n2^2*n9 - 4*n3*n9 + d*n3*n9) + 
   ((6*n9 - 2*d*n9 + 2*n10*n9 - 4*n2*n9 + 2*d*n2*n9 - 2*n10*n2*n9 - 
      2*n2^2*n9 + 4*n3*n9 - d*n3*n9)*j[p4, n1, n2, n3, 0, 0, 1, 1, 1, 1 + n9, 
      n10, 1, 0, 1, 1])/(-30 + 19*d - 3*d^2 - 16*n10 + 5*d*n10 - 2*n10^2 + 
     14*n2 - 14*d*n2 + 3*d^2*n2 + 12*n10*n2 - 5*d*n10*n2 + 2*n10^2*n2 + 
     14*n2^2 - 5*d*n2^2 + 4*n10*n2^2 + 2*n2^3 - 18*n3 + 9*d*n3 - d^2*n3 - 
     2*n10*n3 - d*n2*n3 + 2*n10*n2*n3 + 2*n2^2*n3 - 6*n9 + 2*d*n9 - 
     2*n10*n9 + 4*n2*n9 - 2*d*n2*n9 + 2*n10*n2*n9 + 2*n2^2*n9 - 4*n3*n9 + 
     d*n3*n9) + ((4 - d - 4*n2 + d*n2 + 4*n3 - d*n3)*
     j[p4, n1, n2, n3, 0, 0, 2, 1, 1, n9, n10, 1, 0, 1, 1])/
    (-30 + 19*d - 3*d^2 - 16*n10 + 5*d*n10 - 2*n10^2 + 14*n2 - 14*d*n2 + 
     3*d^2*n2 + 12*n10*n2 - 5*d*n10*n2 + 2*n10^2*n2 + 14*n2^2 - 5*d*n2^2 + 
     4*n10*n2^2 + 2*n2^3 - 18*n3 + 9*d*n3 - d^2*n3 - 2*n10*n3 - d*n2*n3 + 
     2*n10*n2*n3 + 2*n2^2*n3 - 6*n9 + 2*d*n9 - 2*n10*n9 + 4*n2*n9 - 
     2*d*n2*n9 + 2*n10*n2*n9 + 2*n2^2*n9 - 4*n3*n9 + d*n3*n9) + 
   ((-6 + 2*d - 2*n10 + 4*n2 - 2*d*n2 + 2*n10*n2 + 2*n2^2 - 4*n3 + d*n3)*
     j[p4, n1, n2, n3, 0, 1, 1, 1, 1, n9, n10, 1, 0, 0, 2])/
    (-30 + 19*d - 3*d^2 - 16*n10 + 5*d*n10 - 2*n10^2 + 14*n2 - 14*d*n2 + 
     3*d^2*n2 + 12*n10*n2 - 5*d*n10*n2 + 2*n10^2*n2 + 14*n2^2 - 5*d*n2^2 + 
     4*n10*n2^2 + 2*n2^3 - 18*n3 + 9*d*n3 - d^2*n3 - 2*n10*n3 - d*n2*n3 + 
     2*n10*n2*n3 + 2*n2^2*n3 - 6*n9 + 2*d*n9 - 2*n10*n9 + 4*n2*n9 - 
     2*d*n2*n9 + 2*n10*n2*n9 + 2*n2^2*n9 - 4*n3*n9 + d*n3*n9) + 
   ((-4 + d - 2*n10 + 4*n2 - d*n2 + 2*n10*n2 - 2*n3 + 2*n2*n3)*
     j[p4, n1, n2, n3, 0, 1, 1, 2, 0, n9, n10, 1, 0, 1, 1])/
    (-30 + 19*d - 3*d^2 - 16*n10 + 5*d*n10 - 2*n10^2 + 14*n2 - 14*d*n2 + 
     3*d^2*n2 + 12*n10*n2 - 5*d*n10*n2 + 2*n10^2*n2 + 14*n2^2 - 5*d*n2^2 + 
     4*n10*n2^2 + 2*n2^3 - 18*n3 + 9*d*n3 - d^2*n3 - 2*n10*n3 - d*n2*n3 + 
     2*n10*n2*n3 + 2*n2^2*n3 - 6*n9 + 2*d*n9 - 2*n10*n9 + 4*n2*n9 - 
     2*d*n2*n9 + 2*n10*n2*n9 + 2*n2^2*n9 - 4*n3*n9 + d*n3*n9) + 
   ((4*n3 - d*n3 + 2*n10*n3 - 4*n2*n3 + d*n2*n3 - 2*n10*n2*n3 + 2*n3^2 - 
      2*n2*n3^2)*j[p4, n1, n2, 1 + n3, 0, 1, 1, 0, 1, n9, n10, 1, 0, 1, 1])/
    (-30 + 19*d - 3*d^2 - 16*n10 + 5*d*n10 - 2*n10^2 + 14*n2 - 14*d*n2 + 
     3*d^2*n2 + 12*n10*n2 - 5*d*n10*n2 + 2*n10^2*n2 + 14*n2^2 - 5*d*n2^2 + 
     4*n10*n2^2 + 2*n2^3 - 18*n3 + 9*d*n3 - d^2*n3 - 2*n10*n3 - d*n2*n3 + 
     2*n10*n2*n3 + 2*n2^2*n3 - 6*n9 + 2*d*n9 - 2*n10*n9 + 4*n2*n9 - 
     2*d*n2*n9 + 2*n10*n2*n9 + 2*n2^2*n9 - 4*n3*n9 + d*n3*n9) + 
   ((-4*n3 + d*n3 - 2*n10*n3 + 4*n2*n3 - d*n2*n3 + 2*n10*n2*n3 - 2*n3^2 + 
      2*n2*n3^2)*j[p4, n1, n2, 1 + n3, 0, 1, 1, 1, 0, n9, n10, 1, 0, 1, 1])/
    (-30 + 19*d - 3*d^2 - 16*n10 + 5*d*n10 - 2*n10^2 + 14*n2 - 14*d*n2 + 
     3*d^2*n2 + 12*n10*n2 - 5*d*n10*n2 + 2*n10^2*n2 + 14*n2^2 - 5*d*n2^2 + 
     4*n10*n2^2 + 2*n2^3 - 18*n3 + 9*d*n3 - d^2*n3 - 2*n10*n3 - d*n2*n3 + 
     2*n10*n2*n3 + 2*n2^2*n3 - 6*n9 + 2*d*n9 - 2*n10*n9 + 4*n2*n9 - 
     2*d*n2*n9 + 2*n10*n2*n9 + 2*n2^2*n9 - 4*n3*n9 + d*n3*n9), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n2 == 0 && 
    n3 == 0 && n4 == 0 && n7 == 1 && n9 == 0 &&  !(n14 == 1 || n8 == 1) -> 
  -(j[p4, 0, 0, 0, 0, n5, n6, 2, -1 + n8, 0, 0, 1, 0, 2, -1 + n14]/
     ((-1 + n14)*(-1 + n8))) + j[p4, 0, 0, 0, 0, n5, n6, 2, n8, 0, 0, 1, 0, 
     1, -1 + n14]/(1 - n14) + j[p4, 0, 0, 0, 0, 1 + n5, -1 + n6, 2, n8, 0, 0, 
     1, 0, 1, -1 + n14]/(-1 + n14) + 
   ((4 - d)*j[p4, 0, 0, 0, 0, 1 + n5, n6, 1, -1 + n8, 0, 0, 2, 0, 1, 
      -1 + n14])/(2*(-1 + n14)*(-1 + n8)) + j[p4, 0, 0, 0, 0, 1 + n5, n6, 1, 
    n8, 0, 0, 1, 0, 0, n14] + ((-4 + 3*d - 2*n14 - 4*n5 - 2*n8)*
     j[p4, 0, 0, 0, 0, 1 + n5, n6, 1, n8, 0, 0, 1, 0, 1, -1 + n14])/
    (2*(-1 + n14)) + ((-8 + 3*d - 4*n5 - 2*n8)*j[p4, 0, 0, 0, 0, 1 + n5, n6, 
      2, -1 + n8, 0, 0, 1, 0, 1, -1 + n14])/(2*(-1 + n14)*(-1 + n8)) + 
   j[p4, 0, 0, 0, 0, 1 + n5, n6, 2, -1 + n8, 0, 0, 1, 0, 2, -2 + n14]/
    ((-1 + n14)*(-1 + n8)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n2 == 0 && n3 == 0 && n4 == 0 && n7 == 1 &&  !(n8 == 1 || n9 == 0) -> 
  ((1 - d + n6)*j[p4, -1, 0, 0, 0, n5, n6, 0, n8, 1 + n9, 0, 1, 0, 2, 1])/
    ((-4 + 3*d - 2*n5 - 2*n6 - 2*n8)*(-2 + d - n5 - n6 - n9)) + 
   ((n8 - d*n8 + n6*n8)*j[p4, -1, 0, 0, 0, n5, n6, 0, 1 + n8, 1 + n9, 0, 1, 
      0, 1, 1])/((4 - 3*d + 2*n5 + 2*n6 + 2*n8)*(-2 + d - n5 - n6 - n9)) + 
   ((-5 + 9*d - 4*d^2 - 6*n5 + 5*d*n5 - 2*n5^2 - 3*n6 + 3*d*n6 - 2*n5*n6 - 
      8*n8 + 7*d*n8 - 4*n5*n8 - 4*n6*n8 - 2*n8^2 - n9 + d*n9 - n6*n9)*
     j[p4, -1, 0, 0, 0, n5, n6, 1, n8, 1 + n9, 0, 1, 0, 1, 1])/
    ((-4 + 3*d - 2*n5 - 2*n6 - 2*n8)*(-2 + d - n5 - n6 - n9)) + 
   ((5*n8 - 4*d*n8 + 2*n5*n8 + 3*n6*n8 + 2*n8^2)*j[p4, -1, 0, 0, 0, n5, n6, 
      1, 1 + n8, 1 + n9, 0, 1, 0, 0, 1])/((4 - 3*d + 2*n5 + 2*n6 + 2*n8)*
     (-2 + d - n5 - n6 - n9)) + 
   ((n5 - d*n5 + n5*n6)*j[p4, -1, 0, 0, 0, 1 + n5, n6, 0, n8, 1 + n9, 0, 1, 
      0, 1, 1])/((4 - 3*d + 2*n5 + 2*n6 + 2*n8)*(2 - d + n5 + n6 + n9)) + 
   ((-5*n5 + 4*d*n5 - 2*n5^2 - 3*n5*n6 - 2*n5*n8)*j[p4, -1, 0, 0, 0, 1 + n5, 
      n6, 1, n8, 1 + n9, 0, 1, 0, 0, 1])/((4 - 3*d + 2*n5 + 2*n6 + 2*n8)*
     (2 - d + n5 + n6 + n9)) + ((5*n5 - 4*d*n5 + 2*n5^2 + 3*n5*n6 + 2*n5*n8)*
     j[p4, -1, 0, 0, 0, 1 + n5, n6, 1, n8, 1 + n9, 0, 1, 0, 1, 0])/
    ((4 - 3*d + 2*n5 + 2*n6 + 2*n8)*(2 - d + n5 + n6 + n9)) + 
   ((-10 + 14*d - 5*d^2 - 5*n5 + 3*d*n5 - 6*n6 + 4*d*n6 - n5*n6 - 10*n8 + 
      7*d*n8 - 2*n5*n8 - 4*n6*n8 - 2*n8^2 + n9 - d*n9 + n6*n9)*
     j[p4, 0, -1, 0, 0, n5, n6, 1, n8, 1 + n9, 0, 1, 0, 1, 1])/
    ((-4 + 3*d - 2*n5 - 2*n6 - 2*n8)*(-2 + d - n5 - n6 - n9)) + 
   ((-1 + d - n6 - n9 + d*n9 - n6*n9)*j[p4, 0, -1, 0, 0, n5, n6, 1, n8, 
      2 + n9, 0, 1, 0, 1, 1])/((-4 + 3*d - 2*n5 - 2*n6 - 2*n8)*
     (-2 + d - n5 - n6 - n9)) + 
   ((-n8 + d*n8 - n6*n8)*j[p4, 0, -1, 0, 0, n5, n6, 1, 1 + n8, 1 + n9, 0, 0, 
      0, 1, 1])/((4 - 3*d + 2*n5 + 2*n6 + 2*n8)*(-2 + d - n5 - n6 - n9)) + 
   ((n8 - d*n8 + n6*n8)*j[p4, 0, -1, 0, 0, n5, n6, 1, 1 + n8, 1 + n9, 0, 1, 
      0, 0, 1])/((4 - 3*d + 2*n5 + 2*n6 + 2*n8)*(-2 + d - n5 - n6 - n9)) + 
   j[p4, 0, -1, 0, 0, n5, n6, 2, n8, 1 + n9, 0, 0, 0, 1, 1]/
    (-2 + d - n5 - n6 - n9) + ((-n5 + d*n5 - n5*n6)*
     j[p4, 0, -1, 0, 0, 1 + n5, n6, 1, n8, 1 + n9, 0, 1, 0, 0, 1])/
    ((4 - 3*d + 2*n5 + 2*n6 + 2*n8)*(2 - d + n5 + n6 + n9)) + 
   ((n5 - d*n5 + n5*n6)*j[p4, 0, -1, 0, 0, 1 + n5, n6, 1, n8, 1 + n9, 0, 1, 
      0, 1, 0])/((4 - 3*d + 2*n5 + 2*n6 + 2*n8)*(2 - d + n5 + n6 + n9)) + 
   ((11 - 19*d + 8*d^2 + 4*n5 - 4*d*n5 + 16*n6 - 13*d*n6 + 4*n5*n6 + 5*n6^2 + 
      4*n8 - 4*d*n8 + 4*n6*n8 + 2*n9 - 2*d*n9 + 2*n6*n9)*
     j[p4, 0, 0, -1, 0, n5, n6, 1, n8, 1 + n9, 0, 1, 0, 1, 1])/
    ((-4 + 3*d - 2*n5 - 2*n6 - 2*n8)*(-2 + d - n5 - n6 - n9)) + 
   ((-5 + 4*d - 2*n5 - 3*n6 - 2*n8)*j[p4, 0, 0, -1, 0, n5, n6, 2, n8, 1 + n9, 
      0, 0, 0, 1, 1])/((-4 + 3*d - 2*n5 - 2*n6 - 2*n8)*
     (-2 + d - n5 - n6 - n9)) + 
   ((-18 + 27*d - 10*d^2 - 7*n5 + 5*d*n5 - 18*n6 + 13*d*n6 - 3*n5*n6 - 
      4*n6^2 - 12*n8 + 9*d*n8 - 2*n5*n8 - 6*n6*n8 - 2*n8^2 - n9 + d*n9 - 
      n6*n9)*j[p4, 0, 0, 0, -1, n5, n6, 1, n8, 1 + n9, 0, 1, 0, 1, 1])/
    ((-4 + 3*d - 2*n5 - 2*n6 - 2*n8)*(-2 + d - n5 - n6 - n9)) + 
   ((-1 + d - n6 - n9 + d*n9 - n6*n9)*j[p4, 0, 0, 0, -1, n5, n6, 1, n8, 
      2 + n9, 0, 1, 0, 1, 1])/((-4 + 3*d - 2*n5 - 2*n6 - 2*n8)*
     (-2 + d - n5 - n6 - n9)) + 
   ((16 - 24*d + 9*d^2 + 6*n5 - 4*d*n5 + 15*n6 - 11*d*n6 + 2*n5*n6 + 3*n6^2 + 
      12*n8 - 9*d*n8 + 2*n5*n8 + 6*n6*n8 + 2*n8^2)*j[p4, 0, 0, 0, 0, -1 + n5, 
      n6, 1, -1 + n8, 1 + n9, 0, 1, 0, 2, 1])/
    ((-1 + n8)*(4 - 3*d + 2*n5 + 2*n6 + 2*n8)*(-2 + d - n5 - n6 - n9)) + 
   ((1 - d + n6)*j[p4, 0, 0, 0, 0, -1 + n5, n6, 1, n8, 1 + n9, 0, 1, 0, 1, 
      2])/((-4 + 3*d - 2*n5 - 2*n6 - 2*n8)*(-2 + d - n5 - n6 - n9)) + 
   ((1 - d + n6 + n9 - d*n9 + n6*n9)*j[p4, 0, 0, 0, 0, -1 + n5, n6, 1, n8, 
      2 + n9, 0, 1, 0, 1, 1])/((-4 + 3*d - 2*n5 - 2*n6 - 2*n8)*
     (-2 + d - n5 - n6 - n9)) + 
   ((16 - 24*d + 9*d^2 + 6*n5 - 4*d*n5 + 15*n6 - 11*d*n6 + 2*n5*n6 + 3*n6^2 + 
      12*n8 - 9*d*n8 + 2*n5*n8 + 6*n6*n8 + 2*n8^2)*j[p4, 0, 0, 0, 0, n5, 
      -1 + n6, 1, n8, 1 + n9, 0, 1, 0, 1, 1])/
    ((-4 + 3*d - 2*n5 - 2*n6 - 2*n8)*(-2 + d - n5 - n6 - n9)) + 
   ((10 - 19*d + 9*d^2 + 4*n5 - 4*d*n5 + 11*n6 - 11*d*n6 + 2*n5*n6 + 3*n6^2 + 
      10*n8 - 9*d*n8 + 2*n5*n8 + 6*n6*n8 + 2*n8^2 - n9 + d*n9 - n6*n9)*
     j[p4, 0, 0, 0, 0, n5, n6, 0, n8, 1 + n9, 0, 1, 0, 1, 1])/
    ((-4 + 3*d - 2*n5 - 2*n6 - 2*n8)*(-2 + d - n5 - n6 - n9)) + 
   ((-1 + d - n6)*j[p4, 0, 0, 0, 0, n5, n6, 0, n8, 1 + n9, 0, 1, 0, 2, 1])/
    ((-4 + 3*d - 2*n5 - 2*n6 - 2*n8)*(-2 + d - n5 - n6 - n9)) + 
   ((1 - d + n6)*j[p4, 0, 0, 0, 0, n5, n6, 0, n8, 1 + n9, 0, 2, -1, 1, 1])/
    ((-4 + 3*d - 2*n5 - 2*n6 - 2*n8)*(-2 + d - n5 - n6 - n9)) + 
   ((-1 + d - n6)*j[p4, 0, 0, 0, 0, n5, n6, 0, n8, 1 + n9, 0, 2, 0, 1, 1])/
    ((-4 + 3*d - 2*n5 - 2*n6 - 2*n8)*(-2 + d - n5 - n6 - n9)) + 
   ((1 - d + n6 + n9 - d*n9 + n6*n9)*j[p4, 0, 0, 0, 0, n5, n6, 0, n8, 2 + n9, 
      0, 1, 0, 1, 1])/((-4 + 3*d - 2*n5 - 2*n6 - 2*n8)*
     (-2 + d - n5 - n6 - n9)) + 
   ((-n8 + d*n8 - n6*n8)*j[p4, 0, 0, 0, 0, n5, n6, 0, 1 + n8, 1 + n9, 0, 1, 
      -1, 1, 1])/((4 - 3*d + 2*n5 + 2*n6 + 2*n8)*(-2 + d - n5 - n6 - n9)) + 
   ((16*n5 - 24*d*n5 + 9*d^2*n5 + 6*n5^2 - 4*d*n5^2 + 15*n5*n6 - 11*d*n5*n6 + 
      2*n5^2*n6 + 3*n5*n6^2 - 16*n8 + 24*d*n8 - 9*d^2*n8 + 6*n5*n8 - 
      5*d*n5*n8 + 2*n5^2*n8 - 15*n6*n8 + 11*d*n6*n8 + 4*n5*n6*n8 - 
      3*n6^2*n8 - 12*n8^2 + 9*d*n8^2 - 6*n6*n8^2 - 2*n8^3 - n9 + d*n9 - 
      n6*n9 + n8*n9 - d*n8*n9 + n6*n8*n9)*j[p4, 0, 0, 0, 0, n5, n6, 1, 
      -1 + n8, 1 + n9, 0, 1, 0, 1, 1])/((-1 + n8)*(4 - 3*d + 2*n5 + 2*n6 + 
      2*n8)*(-2 + d - n5 - n6 - n9)) + 
   ((-16 + 24*d - 9*d^2 - 6*n5 + 4*d*n5 - 15*n6 + 11*d*n6 - 2*n5*n6 - 
      3*n6^2 - 12*n8 + 9*d*n8 - 2*n5*n8 - 6*n6*n8 - 2*n8^2)*
     j[p4, 0, 0, 0, 0, n5, n6, 1, -1 + n8, 1 + n9, 0, 1, 0, 2, 0])/
    ((-1 + n8)*(4 - 3*d + 2*n5 + 2*n6 + 2*n8)*(-2 + d - n5 - n6 - n9)) + 
   ((1 - d + n6 + n9 - d*n9 + n6*n9)*j[p4, 0, 0, 0, 0, n5, n6, 1, -1 + n8, 
      2 + n9, 0, 1, 0, 1, 1])/((-4 + 3*d - 2*n5 - 2*n6 - 2*n8)*
     (-2 + d - n5 - n6 - n9)) + 
   ((n9 - d*n9 + n6*n9)*j[p4, 0, 0, 0, 0, n5, n6, 1, n8, 1 + n9, 0, 0, 0, 1, 
      1])/((-4 + 3*d - 2*n5 - 2*n6 - 2*n8)*(-2 + d - n5 - n6 - n9)) + 
   ((23 - 30*d + 9*d^2 + 8*n5 - 4*d*n5 + 20*n6 - 11*d*n6 + 2*n5*n6 + 3*n6^2 + 
      14*n8 - 9*d*n8 + 2*n5*n8 + 6*n6*n8 + 2*n8^2)*j[p4, 0, 0, 0, 0, n5, n6, 
      1, n8, 1 + n9, 0, 1, 0, 0, 1])/((-4 + 3*d - 2*n5 - 2*n6 - 2*n8)*
     (-2 + d - n5 - n6 - n9)) + 
   ((-1 + d - n6)*j[p4, 0, 0, 0, 0, n5, n6, 1, n8, 1 + n9, 0, 1, 0, 0, 2])/
    ((-4 + 3*d - 2*n5 - 2*n6 - 2*n8)*(-2 + d - n5 - n6 - n9)) + 
   ((-5*n9 + 4*d*n9 - 2*n5*n9 - 3*n6*n9 - 2*n8*n9)*j[p4, 0, 0, 0, 0, n5, n6, 
      1, n8, 1 + n9, 0, 1, 0, 1, 0])/((-4 + 3*d - 2*n5 - 2*n6 - 2*n8)*
     (-2 + d - n5 - n6 - n9)) + 
   ((5*n9 - 4*d*n9 + 2*n5*n9 + 3*n6*n9 + 2*n8*n9)*j[p4, 0, 0, 0, 0, n5, n6, 
      1, n8, 1 + n9, 0, 1, 0, 1, 1])/((-4 + 3*d - 2*n5 - 2*n6 - 2*n8)*
     (-2 + d - n5 - n6 - n9)) + ((1 - d + n6 + n9 - d*n9 + n6*n9)*
     j[p4, 0, 0, 0, 0, n5, n6, 1, n8, 2 + n9, -1, 1, 0, 1, 0])/
    ((-4 + 3*d - 2*n5 - 2*n6 - 2*n8)*(-2 + d - n5 - n6 - n9)) + 
   ((-1 + d - n6 - n9 + d*n9 - n6*n9)*j[p4, 0, 0, 0, 0, n5, n6, 1, n8, 
      2 + n9, 0, 0, 0, 1, 1])/((-4 + 3*d - 2*n5 - 2*n6 - 2*n8)*
     (-2 + d - n5 - n6 - n9)) + 
   ((-5*n8 + 4*d*n8 - 2*n5*n8 - 3*n6*n8 - 2*n8^2)*j[p4, 0, 0, 0, 0, n5, n6, 
      1, 1 + n8, 1 + n9, 0, 0, -1, 1, 1])/((4 - 3*d + 2*n5 + 2*n6 + 2*n8)*
     (-2 + d - n5 - n6 - n9)) - j[p4, 0, 0, 0, 0, n5, n6, 2, -1 + n8, 1 + n9, 
     -1, 1, 0, 1, 1]/(-2 + d - n5 - n6 - n9) + 
   ((5 - 4*d + 2*n5 + 3*n6 + 2*n8)*j[p4, 0, 0, 0, 0, n5, n6, 2, n8, 1 + n9, 
      -1, 1, 0, 0, 1])/((-4 + 3*d - 2*n5 - 2*n6 - 2*n8)*
     (-2 + d - n5 - n6 - n9)) + 
   ((-5*n6 + 4*d*n6 - 2*n5*n6 - 3*n6^2 - 2*n6*n8)*j[p4, 0, 0, 0, 0, n5, 
      1 + n6, 0, n8, n9, 0, 1, 0, 1, 1])/((4 - 3*d + 2*n5 + 2*n6 + 2*n8)*
     (2 - d + n5 + n6 + n9)) + ((5*n6 - 4*d*n6 + 2*n5*n6 + 3*n6^2 + 2*n6*n8)*
     j[p4, 0, 0, 0, 0, n5, 1 + n6, 0, n8, 1 + n9, -1, 1, 0, 1, 1])/
    ((4 - 3*d + 2*n5 + 2*n6 + 2*n8)*(2 - d + n5 + n6 + n9)) + 
   ((-6*n6 + 5*d*n6 - 2*n5*n6 - 4*n6^2 - 2*n6*n8)*j[p4, 0, 0, 0, 0, n5, 
      1 + n6, 1, -1 + n8, n9, 0, 1, 0, 1, 1])/((4 - 3*d + 2*n5 + 2*n6 + 2*n8)*
     (2 - d + n5 + n6 + n9)) + ((6*n6 - 5*d*n6 + 2*n5*n6 + 4*n6^2 + 2*n6*n8)*
     j[p4, 0, 0, 0, 0, n5, 1 + n6, 1, -1 + n8, 1 + n9, -1, 1, 0, 1, 1])/
    ((4 - 3*d + 2*n5 + 2*n6 + 2*n8)*(2 - d + n5 + n6 + n9)) + 
   ((-5*n6 + 4*d*n6 - 2*n5*n6 - 3*n6^2 - 2*n6*n8)*j[p4, 0, 0, 0, 0, n5, 
      1 + n6, 1, n8, n9, 0, 1, 0, 0, 1])/((4 - 3*d + 2*n5 + 2*n6 + 2*n8)*
     (2 - d + n5 + n6 + n9)) + ((-5*n6 + 4*d*n6 - 2*n5*n6 - 3*n6^2 - 2*n6*n8)*
     j[p4, 0, 0, 0, 0, n5, 1 + n6, 1, n8, n9, 0, 1, 0, 1, 0])/
    ((4 - 3*d + 2*n5 + 2*n6 + 2*n8)*(2 - d + n5 + n6 + n9)) + 
   ((5*n6 - 4*d*n6 + 2*n5*n6 + 3*n6^2 + 2*n6*n8)*j[p4, 0, 0, 0, 0, n5, 
      1 + n6, 1, n8, 1 + n9, -1, 1, 0, 0, 1])/((4 - 3*d + 2*n5 + 2*n6 + 2*n8)*
     (2 - d + n5 + n6 + n9)) + ((5*n6 - 4*d*n6 + 2*n5*n6 + 3*n6^2 + 2*n6*n8)*
     j[p4, 0, 0, 0, 0, n5, 1 + n6, 1, n8, 1 + n9, -1, 1, 0, 1, 0])/
    ((4 - 3*d + 2*n5 + 2*n6 + 2*n8)*(2 - d + n5 + n6 + n9)) + 
   ((-n5 + d*n5 - n5*n6)*j[p4, 0, 0, 0, 0, 1 + n5, n6, 0, n8, n9, 0, 1, 0, 1, 
      1])/((4 - 3*d + 2*n5 + 2*n6 + 2*n8)*(2 - d + n5 + n6 + n9)) + 
   ((16*n5 - 24*d*n5 + 9*d^2*n5 + 6*n5^2 - 4*d*n5^2 + 15*n5*n6 - 11*d*n5*n6 + 
      2*n5^2*n6 + 3*n5*n6^2 + 12*n5*n8 - 9*d*n5*n8 + 2*n5^2*n8 + 6*n5*n6*n8 + 
      2*n5*n8^2)*j[p4, 0, 0, 0, 0, 1 + n5, n6, 1, -1 + n8, 1 + n9, 0, 1, 0, 
      0, 1])/((-1 + n8)*(4 - 3*d + 2*n5 + 2*n6 + 2*n8)*
     (2 - d + n5 + n6 + n9)) + 
   ((-16*n5 + 24*d*n5 - 9*d^2*n5 - 6*n5^2 + 4*d*n5^2 - 15*n5*n6 + 
      11*d*n5*n6 - 2*n5^2*n6 - 3*n5*n6^2 - 12*n5*n8 + 9*d*n5*n8 - 2*n5^2*n8 - 
      6*n5*n6*n8 - 2*n5*n8^2)*j[p4, 0, 0, 0, 0, 1 + n5, n6, 1, -1 + n8, 
      1 + n9, 0, 1, 0, 1, 0])/((-1 + n8)*(4 - 3*d + 2*n5 + 2*n6 + 2*n8)*
     (2 - d + n5 + n6 + n9)) + ((5*n5 - 4*d*n5 + 2*n5^2 + 3*n5*n6 + 2*n5*n8)*
     j[p4, 0, 0, 0, 0, 1 + n5, n6, 1, n8, n9, 0, 1, 0, 0, 1])/
    ((4 - 3*d + 2*n5 + 2*n6 + 2*n8)*(2 - d + n5 + n6 + n9)) + 
   ((-5*n5 + 4*d*n5 - 2*n5^2 - 3*n5*n6 - 2*n5*n8)*j[p4, 0, 0, 0, 0, 1 + n5, 
      n6, 1, n8, n9, 0, 1, 0, 1, 0])/((4 - 3*d + 2*n5 + 2*n6 + 2*n8)*
     (2 - d + n5 + n6 + n9)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 0 && n12 == 0 && n13 == 1 && n2 == 0 && n3 == 0 && 
    n4 == 0 && n7 == 1 && n8 == 1 && n9 == 0 && n14 != 1 -> 
  ((2*n6 - d*n6 + 2*n6^2)*j[p4, 0, 0, 0, 0, n5, 1 + n6, 1, 1, 0, 0, n11, 0, 
      1, -1 + n14])/((-1 + n14)*(-d + 2*n14 + 2*n5)) - 
   (2*n5*j[p4, 0, 0, 0, 0, 1 + n5, n6, 1, 1, 0, 0, n11, 0, 0, n14])/
    (d - 2*n14 - 2*n5) - (n5*j[p4, 0, 0, 0, 0, 1 + n5, n6, 1, 1, 0, 0, n11, 
      0, 1, -1 + n14])/(-1 + n14), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n2 == 0 && n3 == 0 && 
    n4 == 0 && n7 == 1 && n8 == 1 && n9 == 0 && n14 != 1 -> 
  ((2*n6 - d*n6 + 2*n6^2)*j[p4, n1, 0, 0, 0, n5, 1 + n6, 1, 1, 0, 0, 1, 0, 1, 
      -1 + n14])/((-1 + n14)*(-d + 2*n14 + 2*n5)) - 
   (2*n5*j[p4, n1, 0, 0, 0, 1 + n5, n6, 1, 1, 0, 0, 1, 0, 0, n14])/
    (d - 2*n14 - 2*n5) - (n5*j[p4, n1, 0, 0, 0, 1 + n5, n6, 1, 1, 0, 0, 1, 0, 
      1, -1 + n14])/(-1 + n14), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n3 == 0 && n4 == 0 && n7 == 1 && n8 == 1 && n9 != 0 -> 
  ((1 - d + n6)*j[p4, -1 + n1, 0, 0, 0, n5, n6, 0, 1, 1 + n9, 0, 1, 0, 2, 1])/
    ((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n5 - n6 - n9)) + 
   ((-1 + d - n6)*j[p4, -1 + n1, 0, 0, 0, n5, n6, 0, 2, 1 + n9, 0, 1, 0, 1, 
      1])/((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n5 - n6 - n9)) + 
   ((300 - 464*d + 237*d^2 - 40*d^3 + 44*n1 - 48*d*n1 + 13*d^2*n1 + 152*n5 - 
      154*d*n5 + 39*d^2*n5 + 12*n1*n5 - 6*d*n1*n5 + 20*n5^2 - 10*d*n5^2 + 
      278*n6 - 278*d*n6 + 69*d^2*n6 + 34*n1*n6 - 18*d*n1*n6 + 90*n5*n6 - 
      45*d*n5*n6 + 4*n1*n5*n6 + 6*n5^2*n6 + 76*n6^2 - 37*d*n6^2 + 6*n1*n6^2 + 
      12*n5*n6^2 + 6*n6^3 + 32*n9 - 36*d*n9 + 10*d^2*n9 + 8*n5*n9 - 
      4*d*n5*n9 + 24*n6*n9 - 13*d*n6*n9 + 2*n5*n6*n9 + 4*n6^2*n9)*
     j[p4, -1 + n1, 0, 0, 0, n5, n6, 1, 1, 1 + n9, 0, 1, 0, 1, 1])/
    ((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n6)*(-2 + d - n5 - n6 - n9)) + 
   ((30 - 33*d + 9*d^2 + 8*n5 - 4*d*n5 + 21*n6 - 11*d*n6 + 2*n5*n6 + 3*n6^2 + 
      30*n9 - 33*d*n9 + 9*d^2*n9 + 8*n5*n9 - 4*d*n5*n9 + 21*n6*n9 - 
      11*d*n6*n9 + 2*n5*n6*n9 + 3*n6^2*n9)*j[p4, -1 + n1, 0, 0, 0, n5, n6, 1, 
      1, 2 + n9, 0, 1, 0, 1, 0])/((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n6)*
     (-2 + d - n5 - n6 - n9)) + ((-7 + 4*d - 2*n5 - 3*n6)*
     j[p4, -1 + n1, 0, 0, 0, n5, n6, 1, 2, 1 + n9, 0, 1, 0, 0, 1])/
    ((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n5 - n6 - n9)) + 
   ((n5 - d*n5 + n5*n6)*j[p4, -1 + n1, 0, 0, 0, 1 + n5, n6, 0, 1, 1 + n9, 0, 
      1, 0, 1, 1])/((6 - 3*d + 2*n5 + 2*n6)*(2 - d + n5 + n6 + n9)) + 
   ((-7*n5 + 4*d*n5 - 2*n5^2 - 3*n5*n6)*j[p4, -1 + n1, 0, 0, 0, 1 + n5, n6, 
      1, 1, 1 + n9, 0, 1, 0, 0, 1])/((6 - 3*d + 2*n5 + 2*n6)*
     (2 - d + n5 + n6 + n9)) + ((7*n5 - 4*d*n5 + 2*n5^2 + 3*n5*n6)*
     j[p4, -1 + n1, 0, 0, 0, 1 + n5, n6, 1, 1, 1 + n9, 0, 1, 0, 1, 0])/
    ((6 - 3*d + 2*n5 + 2*n6)*(2 - d + n5 + n6 + n9)) + 
   ((-136 + 224*d - 122*d^2 + 22*d^3 - 64*n5 + 68*d*n5 - 18*d^2*n5 - 8*n5^2 + 
      4*d*n5^2 - 144*n6 + 156*d*n6 - 42*d^2*n6 - 40*n5*n6 + 21*d*n5*n6 - 
      2*n5^2*n6 - 50*n6^2 + 27*d*n6^2 - 6*n5*n6^2 - 6*n6^3 - 32*n9 + 
      36*d*n9 - 10*d^2*n9 - 8*n5*n9 + 4*d*n5*n9 - 24*n6*n9 + 13*d*n6*n9 - 
      2*n5*n6*n9 - 4*n6^2*n9)*j[p4, n1, -1, 0, 0, n5, n6, 1, 1, 1 + n9, 0, 1, 
      0, 1, 1])/((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n6)*
     (-2 + d - n5 - n6 - n9)) + 
   ((-30 + 33*d - 9*d^2 - 8*n5 + 4*d*n5 - 21*n6 + 11*d*n6 - 2*n5*n6 - 
      3*n6^2 - 30*n9 + 33*d*n9 - 9*d^2*n9 - 8*n5*n9 + 4*d*n5*n9 - 21*n6*n9 + 
      11*d*n6*n9 - 2*n5*n6*n9 - 3*n6^2*n9)*j[p4, n1, -1, 0, 0, n5, n6, 1, 1, 
      2 + n9, 0, 1, 0, 1, 0])/((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n6)*
     (-2 + d - n5 - n6 - n9)) + 
   ((32 - 36*d + 10*d^2 + 8*n5 - 4*d*n5 + 24*n6 - 13*d*n6 + 2*n5*n6 + 
      4*n6^2 + 32*n9 - 36*d*n9 + 10*d^2*n9 + 8*n5*n9 - 4*d*n5*n9 + 24*n6*n9 - 
      13*d*n6*n9 + 2*n5*n6*n9 + 4*n6^2*n9)*j[p4, n1, -1, 0, 0, n5, n6, 1, 1, 
      2 + n9, 0, 1, 0, 1, 1])/((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n6)*
     (-2 + d - n5 - n6 - n9)) + 
   ((1 - d + n6)*j[p4, n1, -1, 0, 0, n5, n6, 1, 2, 1 + n9, 0, 0, 0, 1, 1])/
    ((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n5 - n6 - n9)) + 
   ((-1 + d - n6)*j[p4, n1, -1, 0, 0, n5, n6, 1, 2, 1 + n9, 0, 1, 0, 0, 1])/
    ((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n5 - n6 - n9)) + 
   j[p4, n1, -1, 0, 0, n5, n6, 2, 1, 1 + n9, 0, 0, 0, 1, 1]/
    (-2 + d - n5 - n6 - n9) + ((30 - 33*d + 9*d^2 + 8*n5 - 4*d*n5 + 21*n6 - 
      11*d*n6 + 2*n5*n6 + 3*n6^2)*j[p4, n1, -1, 0, 0, n5, n6, 2, 1, 1 + n9, 
      0, 1, 0, 0, 1])/((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n6)*
     (-2 + d - n5 - n6 - n9)) + 
   ((30*n6 - 33*d*n6 + 9*d^2*n6 + 8*n5*n6 - 4*d*n5*n6 + 21*n6^2 - 11*d*n6^2 + 
      2*n5*n6^2 + 3*n6^3)*j[p4, n1, -1, 0, 0, n5, 1 + n6, 1, 0, 1 + n9, 0, 1, 
      0, 1, 1])/((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n6)*
     (-2 + d - n5 - n6 - n9)) + 
   ((32*n5 - 36*d*n5 + 10*d^2*n5 + 8*n5^2 - 4*d*n5^2 + 24*n5*n6 - 
      13*d*n5*n6 + 2*n5^2*n6 + 4*n5*n6^2)*j[p4, n1, -1, 0, 0, 1 + n5, n6, 1, 
      1, 1 + n9, 0, 1, 0, 0, 1])/((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n6)*
     (-2 + d - n5 - n6 - n9)) + 
   ((-32*n5 + 36*d*n5 - 10*d^2*n5 - 8*n5^2 + 4*d*n5^2 - 24*n5*n6 + 
      13*d*n5*n6 - 2*n5^2*n6 - 4*n5*n6^2)*j[p4, n1, -1, 0, 0, 1 + n5, n6, 1, 
      1, 1 + n9, 0, 1, 0, 1, 0])/((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n6)*
     (-2 + d - n5 - n6 - n9)) + 
   ((-60 + 94*d - 48*d^2 + 8*d^3 - 4*n1 + 6*d*n1 - 2*d^2*n1 - 16*n5 + 
      16*d*n5 - 4*d^2*n5 - 46*n6 + 47*d*n6 - 12*d^2*n6 - 6*n1*n6 + 
      4*d*n1*n6 - 6*n5*n6 + 4*d*n5*n6 - 12*n6^2 + 7*d*n6^2 - 2*n1*n6^2 - 
      2*n5*n6^2 - 2*n6^3 - 4*n9 + 6*d*n9 - 2*d^2*n9 - 6*n6*n9 + 4*d*n6*n9 - 
      2*n6^2*n9)*j[p4, n1, 0, -1, 0, n5, n6, 1, 1, 1 + n9, 0, 1, 0, 1, 1])/
    ((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n6)*(-2 + d - n5 - n6 - n9)) + 
   ((-30 + 33*d - 9*d^2 - 8*n5 + 4*d*n5 - 21*n6 + 11*d*n6 - 2*n5*n6 - 3*n6^2)*
     j[p4, n1, 0, -1, 0, n5, n6, 2, 0, 1 + n9, 0, 1, 0, 1, 1])/
    ((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n6)*(-2 + d - n5 - n6 - n9)) + 
   ((-7 + 4*d - 2*n5 - 3*n6)*j[p4, n1, 0, -1, 0, n5, n6, 2, 1, 1 + n9, 0, 0, 
      0, 1, 1])/((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n5 - n6 - n9)) + 
   ((30*n6 - 33*d*n6 + 9*d^2*n6 + 8*n5*n6 - 4*d*n5*n6 + 21*n6^2 - 11*d*n6^2 + 
      2*n5*n6^2 + 3*n6^3)*j[p4, n1, 0, -1, 0, n5, 1 + n6, 1, 0, 1 + n9, 0, 1, 
      0, 1, 1])/((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n6)*
     (-2 + d - n5 - n6 - n9)) + 
   ((28 - 30*d + 8*d^2 + 8*n5 - 4*d*n5 + 18*n6 - 9*d*n6 + 2*n5*n6 + 2*n6^2)*
     j[p4, n1, 0, 0, -1, n5, n6, 1, 1, 1 + n9, 0, 1, 0, 1, 1])/
    ((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n6)) + 
   ((-30 + 33*d - 9*d^2 - 8*n5 + 4*d*n5 - 21*n6 + 11*d*n6 - 2*n5*n6 - 
      3*n6^2 - 30*n9 + 33*d*n9 - 9*d^2*n9 - 8*n5*n9 + 4*d*n5*n9 - 21*n6*n9 + 
      11*d*n6*n9 - 2*n5*n6*n9 - 3*n6^2*n9)*j[p4, n1, 0, 0, -1, n5, n6, 1, 1, 
      2 + n9, 0, 1, 0, 1, 0])/((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n6)*
     (-2 + d - n5 - n6 - n9)) + 
   ((32 - 36*d + 10*d^2 + 8*n5 - 4*d*n5 + 24*n6 - 13*d*n6 + 2*n5*n6 + 
      4*n6^2 + 32*n9 - 36*d*n9 + 10*d^2*n9 + 8*n5*n9 - 4*d*n5*n9 + 24*n6*n9 - 
      13*d*n6*n9 + 2*n5*n6*n9 + 4*n6^2*n9)*j[p4, n1, 0, 0, -1, n5, n6, 1, 1, 
      2 + n9, 0, 1, 0, 1, 1])/((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n6)*
     (-2 + d - n5 - n6 - n9)) + 
   ((-30*n6 + 33*d*n6 - 9*d^2*n6 - 8*n5*n6 + 4*d*n5*n6 - 21*n6^2 + 
      11*d*n6^2 - 2*n5*n6^2 - 3*n6^3)*j[p4, n1, 0, 0, -1, n5, 1 + n6, 0, 1, 
      1 + n9, 0, 1, 0, 1, 1])/((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n6)*
     (-2 + d - n5 - n6 - n9)) + 
   ((-30*n6 + 33*d*n6 - 9*d^2*n6 - 8*n5*n6 + 4*d*n5*n6 - 21*n6^2 + 
      11*d*n6^2 - 2*n5*n6^2 - 3*n6^3)*j[p4, n1, 0, 0, -1, n5, 1 + n6, 1, 0, 
      1 + n9, 0, 1, 0, 1, 1])/((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n6)*
     (-2 + d - n5 - n6 - n9)) + 
   ((-30*n6 + 33*d*n6 - 9*d^2*n6 - 8*n5*n6 + 4*d*n5*n6 - 21*n6^2 + 
      11*d*n6^2 - 2*n5*n6^2 - 3*n6^3)*j[p4, n1, 0, 0, -1, n5, 1 + n6, 1, 1, 
      1 + n9, 0, 1, 0, 0, 1])/((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n6)*
     (-2 + d - n5 - n6 - n9)) + 
   ((-30*n6 + 33*d*n6 - 9*d^2*n6 - 8*n5*n6 + 4*d*n5*n6 - 21*n6^2 + 
      11*d*n6^2 - 2*n5*n6^2 - 3*n6^3)*j[p4, n1, 0, 0, -1, n5, 1 + n6, 1, 1, 
      1 + n9, 0, 1, 0, 1, 0])/((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n6)*
     (-2 + d - n5 - n6 - n9)) + 
   ((30*n5 - 33*d*n5 + 9*d^2*n5 + 8*n5^2 - 4*d*n5^2 + 21*n5*n6 - 11*d*n5*n6 + 
      2*n5^2*n6 + 3*n5*n6^2)*j[p4, n1, 0, 0, -1, 1 + n5, n6, 1, 1, 1 + n9, 0, 
      1, 0, 0, 1])/((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n6)*
     (-2 + d - n5 - n6 - n9)) + 
   ((-30*n5 + 33*d*n5 - 9*d^2*n5 - 8*n5^2 + 4*d*n5^2 - 21*n5*n6 + 
      11*d*n5*n6 - 2*n5^2*n6 - 3*n5*n6^2)*j[p4, n1, 0, 0, -1, 1 + n5, n6, 1, 
      1, 1 + n9, 0, 1, 0, 1, 0])/((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n6)*
     (-2 + d - n5 - n6 - n9)) + 
   ((-32 + 36*d - 10*d^2 - 8*n5 + 4*d*n5 - 24*n6 + 13*d*n6 - 2*n5*n6 - 
      4*n6^2)*j[p4, n1, 0, 0, 0, -1 + n5, n6, 1, 1, 1 + n9, 0, 1, 0, 1, 2])/
    ((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n6)*(-2 + d - n5 - n6 - n9)) + 
   ((-32 + 36*d - 10*d^2 - 8*n5 + 4*d*n5 - 24*n6 + 13*d*n6 - 2*n5*n6 - 
      4*n6^2 - 32*n9 + 36*d*n9 - 10*d^2*n9 - 8*n5*n9 + 4*d*n5*n9 - 24*n6*n9 + 
      13*d*n6*n9 - 2*n5*n6*n9 - 4*n6^2*n9)*j[p4, n1, 0, 0, 0, -1 + n5, n6, 1, 
      1, 2 + n9, 0, 1, 0, 1, 1])/((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n6)*
     (-2 + d - n5 - n6 - n9)) + 
   ((46 - 51*d + 14*d^2 + 12*n5 - 6*d*n5 + 37*n6 - 20*d*n6 + 4*n5*n6 + 
      7*n6^2 + 2*n9 - 3*d*n9 + d^2*n9 + 3*n6*n9 - 2*d*n6*n9 + n6^2*n9)*
     j[p4, n1, 0, 0, 0, n5, n6, 0, 1, 1 + n9, 0, 1, 0, 1, 1])/
    ((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n6)*(-2 + d - n5 - n6 - n9)) + 
   ((-1 + d - n6)*j[p4, n1, 0, 0, 0, n5, n6, 0, 1, 1 + n9, 0, 1, 0, 2, 1])/
    ((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n5 - n6 - n9)) + 
   ((1 - d + n6)*j[p4, n1, 0, 0, 0, n5, n6, 0, 1, 1 + n9, 0, 2, -1, 1, 1])/
    ((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n5 - n6 - n9)) + 
   ((-1 + d - n6)*j[p4, n1, 0, 0, 0, n5, n6, 0, 1, 1 + n9, 0, 2, 0, 1, 1])/
    ((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n5 - n6 - n9)) + 
   ((1 - d + n6 + n9 - d*n9 + n6*n9)*j[p4, n1, 0, 0, 0, n5, n6, 0, 1, 2 + n9, 
      0, 1, 0, 1, 1])/((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n5 - n6 - n9)) + 
   ((1 - d + n6)*j[p4, n1, 0, 0, 0, n5, n6, 0, 2, 1 + n9, 0, 1, -1, 1, 1])/
    ((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n5 - n6 - n9)) + 
   ((-30 + 33*d - 9*d^2 + 2*n1 - 3*d*n1 + d^2*n1 - 8*n5 + 4*d*n5 - 21*n6 + 
      11*d*n6 + 3*n1*n6 - 2*d*n1*n6 - 2*n5*n6 - 3*n6^2 + n1*n6^2 + 2*n9 - 
      3*d*n9 + d^2*n9 + 3*n6*n9 - 2*d*n6*n9 + n6^2*n9)*
     j[p4, n1, 0, 0, 0, n5, n6, 1, 0, 1 + n9, 0, 1, 0, 1, 1])/
    ((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n6)*(-2 + d - n5 - n6 - n9)) + 
   ((30 - 33*d + 9*d^2 + 8*n5 - 4*d*n5 + 21*n6 - 11*d*n6 + 2*n5*n6 + 3*n6^2)*
     j[p4, n1, 0, 0, 0, n5, n6, 1, 0, 1 + n9, 0, 2, -1, 1, 1])/
    ((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n6)*(-2 + d - n5 - n6 - n9)) + 
   ((-30 + 33*d - 9*d^2 - 8*n5 + 4*d*n5 - 21*n6 + 11*d*n6 - 2*n5*n6 - 3*n6^2)*
     j[p4, n1, 0, 0, 0, n5, n6, 1, 0, 1 + n9, 0, 2, 0, 1, 1])/
    ((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n6)*(-2 + d - n5 - n6 - n9)) + 
   ((1 - d + n6 + n9 - d*n9 + n6*n9)*j[p4, n1, 0, 0, 0, n5, n6, 1, 0, 2 + n9, 
      0, 1, 0, 1, 1])/((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n5 - n6 - n9)) + 
   ((n1 - d*n1 + n1*n6 + n9 - d*n9 + n6*n9)*j[p4, n1, 0, 0, 0, n5, n6, 1, 1, 
      1 + n9, 0, 0, 0, 1, 1])/((-6 + 3*d - 2*n5 - 2*n6)*
     (-2 + d - n5 - n6 - n9)) + 
   ((-48 + 54*d - 15*d^2 + 44*n1 - 48*d*n1 + 13*d^2*n1 - 12*n5 + 6*d*n5 + 
      12*n1*n5 - 6*d*n1*n5 - 40*n6 + 22*d*n6 + 34*n1*n6 - 18*d*n1*n6 - 
      4*n5*n6 + 4*n1*n5*n6 - 8*n6^2 + 6*n1*n6^2)*j[p4, n1, 0, 0, 0, n5, n6, 
      1, 1, 1 + n9, 0, 1, 0, 0, 1])/((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n6)*
     (-2 + d - n5 - n6 - n9)) + 
   ((32 - 36*d + 10*d^2 + 8*n5 - 4*d*n5 + 24*n6 - 13*d*n6 + 2*n5*n6 + 4*n6^2)*
     j[p4, n1, 0, 0, 0, n5, n6, 1, 1, 1 + n9, 0, 1, 0, 0, 2])/
    ((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n6)*(-2 + d - n5 - n6 - n9)) + 
   ((30 - 33*d + 9*d^2 + 8*n5 - 4*d*n5 + 21*n6 - 11*d*n6 + 2*n5*n6 + 3*n6^2 + 
      14*n9 - 15*d*n9 + 4*d^2*n9 + 4*n5*n9 - 2*d*n5*n9 + 13*n6*n9 - 
      7*d*n6*n9 + 2*n5*n6*n9 + 3*n6^2*n9)*j[p4, n1, 0, 0, 0, n5, n6, 1, 1, 
      1 + n9, 0, 1, 0, 1, 0])/((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n6)*
     (-2 + d - n5 - n6 - n9)) + 
   ((-180 + 288*d - 153*d^2 + 27*d^3 - 44*n1 + 48*d*n1 - 13*d^2*n1 - 108*n5 + 
      114*d*n5 - 30*d^2*n5 - 12*n1*n5 + 6*d*n1*n5 - 16*n5^2 + 8*d*n5^2 - 
      186*n6 + 195*d*n6 - 51*d^2*n6 - 34*n1*n6 + 18*d*n1*n6 - 70*n5*n6 + 
      36*d*n5*n6 - 4*n1*n5*n6 - 4*n5^2*n6 - 60*n6^2 + 31*d*n6^2 - 6*n1*n6^2 - 
      10*n5*n6^2 - 6*n6^3 - 44*n9 + 48*d*n9 - 13*d^2*n9 - 12*n5*n9 + 
      6*d*n5*n9 - 34*n6*n9 + 18*d*n6*n9 - 4*n5*n6*n9 - 6*n6^2*n9)*
     j[p4, n1, 0, 0, 0, n5, n6, 1, 1, 1 + n9, 0, 1, 0, 1, 1])/
    ((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n6)*(-2 + d - n5 - n6 - n9)) + 
   ((1 - d + n6 + n9 - d*n9 + n6*n9)*j[p4, n1, 0, 0, 0, n5, n6, 1, 1, 2 + n9, 
      -1, 1, 0, 1, 0])/((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n5 - n6 - n9)) + 
   ((-1 + d - n6 - n9 + d*n9 - n6*n9)*j[p4, n1, 0, 0, 0, n5, n6, 1, 1, 
      2 + n9, 0, 0, 0, 1, 1])/((-6 + 3*d - 2*n5 - 2*n6)*
     (-2 + d - n5 - n6 - n9)) + ((7 - 4*d + 2*n5 + 3*n6)*
     j[p4, n1, 0, 0, 0, n5, n6, 1, 2, 1 + n9, 0, 0, -1, 1, 1])/
    ((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n5 - n6 - n9)) - 
   j[p4, n1, 0, 0, 0, n5, n6, 2, 0, 1 + n9, -1, 1, 0, 1, 1]/
    (-2 + d - n5 - n6 - n9) + ((7 - 4*d + 2*n5 + 3*n6)*
     j[p4, n1, 0, 0, 0, n5, n6, 2, 1, 1 + n9, -1, 1, 0, 0, 1])/
    ((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n5 - n6 - n9)) + 
   ((-7*n6 + 4*d*n6 - 2*n5*n6 - 3*n6^2)*j[p4, n1, 0, 0, 0, n5, 1 + n6, 0, 1, 
      n9, 0, 1, 0, 1, 1])/((6 - 3*d + 2*n5 + 2*n6)*(2 - d + n5 + n6 + n9)) + 
   ((7*n6 - 4*d*n6 + 2*n5*n6 + 3*n6^2)*j[p4, n1, 0, 0, 0, n5, 1 + n6, 0, 1, 
      1 + n9, -1, 1, 0, 1, 1])/((6 - 3*d + 2*n5 + 2*n6)*
     (2 - d + n5 + n6 + n9)) + ((-8*n6 + 5*d*n6 - 2*n5*n6 - 4*n6^2)*
     j[p4, n1, 0, 0, 0, n5, 1 + n6, 1, 0, n9, 0, 1, 0, 1, 1])/
    ((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n5 - n6 - n9)) + 
   ((8*n6 - 5*d*n6 + 2*n5*n6 + 4*n6^2)*j[p4, n1, 0, 0, 0, n5, 1 + n6, 1, 0, 
      1 + n9, -1, 1, 0, 1, 1])/((-6 + 3*d - 2*n5 - 2*n6)*
     (-2 + d - n5 - n6 - n9)) + 
   ((30*n6 - 33*d*n6 + 9*d^2*n6 + 8*n5*n6 - 4*d*n5*n6 + 21*n6^2 - 11*d*n6^2 + 
      2*n5*n6^2 + 3*n6^3)*j[p4, n1, 0, 0, 0, n5, 1 + n6, 1, 0, 1 + n9, 0, 1, 
      -1, 1, 1])/((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n6)*
     (-2 + d - n5 - n6 - n9)) + ((-7*n6 + 4*d*n6 - 2*n5*n6 - 3*n6^2)*
     j[p4, n1, 0, 0, 0, n5, 1 + n6, 1, 1, n9, 0, 1, 0, 0, 1])/
    ((6 - 3*d + 2*n5 + 2*n6)*(2 - d + n5 + n6 + n9)) + 
   ((-7*n6 + 4*d*n6 - 2*n5*n6 - 3*n6^2)*j[p4, n1, 0, 0, 0, n5, 1 + n6, 1, 1, 
      n9, 0, 1, 0, 1, 0])/((6 - 3*d + 2*n5 + 2*n6)*(2 - d + n5 + n6 + n9)) + 
   ((7*n6 - 4*d*n6 + 2*n5*n6 + 3*n6^2)*j[p4, n1, 0, 0, 0, n5, 1 + n6, 1, 1, 
      1 + n9, -1, 1, 0, 0, 1])/((6 - 3*d + 2*n5 + 2*n6)*
     (2 - d + n5 + n6 + n9)) + ((7*n6 - 4*d*n6 + 2*n5*n6 + 3*n6^2)*
     j[p4, n1, 0, 0, 0, n5, 1 + n6, 1, 1, 1 + n9, -1, 1, 0, 1, 0])/
    ((6 - 3*d + 2*n5 + 2*n6)*(2 - d + n5 + n6 + n9)) + 
   ((-n5 + d*n5 - n5*n6)*j[p4, n1, 0, 0, 0, 1 + n5, n6, 0, 1, n9, 0, 1, 0, 1, 
      1])/((6 - 3*d + 2*n5 + 2*n6)*(2 - d + n5 + n6 + n9)) + 
   ((7*n5 - 4*d*n5 + 2*n5^2 + 3*n5*n6)*j[p4, n1, 0, 0, 0, 1 + n5, n6, 1, 1, 
      n9, 0, 1, 0, 0, 1])/((6 - 3*d + 2*n5 + 2*n6)*(2 - d + n5 + n6 + n9)) + 
   ((-7*n5 + 4*d*n5 - 2*n5^2 - 3*n5*n6)*j[p4, n1, 0, 0, 0, 1 + n5, n6, 1, 1, 
      n9, 0, 1, 0, 1, 0])/((6 - 3*d + 2*n5 + 2*n6)*(2 - d + n5 + n6 + n9)) + 
   ((-n1 + d*n1 - n1*n6)*j[p4, 1 + n1, -1, 0, 0, n5, n6, 1, 1, 1 + n9, 0, 1, 
      0, 0, 1])/((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n5 - n6 - n9)) + 
   ((n1 - d*n1 + n1*n6)*j[p4, 1 + n1, 0, 0, 0, n5, n6, 1, 0, 1 + n9, 0, 1, 0, 
      1, 1])/((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n5 - n6 - n9)) + 
   ((n1 - d*n1 + n1*n6)*j[p4, 1 + n1, 0, 0, 0, n5, n6, 1, 1, 1 + n9, -1, 1, 
      0, 0, 1])/((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n5 - n6 - n9)) + 
   ((-n1 + d*n1 - n1*n6)*j[p4, 1 + n1, 0, 0, 0, n5, n6, 1, 1, 1 + n9, 0, 0, 
      0, 1, 1])/((-6 + 3*d - 2*n5 - 2*n6)*(-2 + d - n5 - n6 - n9)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n3 == 0 && n4 == 0 && n6 == 1 && n7 == 1 &&  !(n10 == 0 || n8 == 1) -> 
  j[p4, -1, 0, 0, 0, n5, 1, 0, n8, n9, 1 + n10, 1, 0, 2, 1]/
    (-9 + 4*d - n10 - 2*n5 - 2*n8) - 
   (n8*j[p4, -1, 0, 0, 0, n5, 1, 0, 1 + n8, n9, 1 + n10, 1, 0, 1, 1])/
    (-9 + 4*d - n10 - 2*n5 - 2*n8) + 
   ((-n10 + n5 - n8 - n9)*j[p4, -1, 0, 0, 0, n5, 1, 1, n8, n9, 1 + n10, 1, 0, 
      1, 1])/(-9 + 4*d - n10 - 2*n5 - 2*n8) - 
   (n5*j[p4, -1, 0, 0, 0, 1 + n5, 1, 0, n8, n9, 1 + n10, 1, 0, 1, 1])/
    (9 - 4*d + n10 + 2*n5 + 2*n8) + 
   ((d + n10 - n5 - n8 + n9)*j[p4, 0, -1, 0, 0, n5, 1, 1, n8, n9, 1 + n10, 1, 
      0, 1, 1])/(-9 + 4*d - n10 - 2*n5 - 2*n8) - 
   (n9*j[p4, 0, -1, 0, 0, n5, 1, 1, n8, 1 + n9, 1 + n10, 1, 0, 1, 1])/
    (-9 + 4*d - n10 - 2*n5 - 2*n8) + 
   (n8*j[p4, 0, -1, 0, 0, n5, 1, 1, 1 + n8, n9, 1 + n10, 0, 0, 1, 1])/
    (-9 + 4*d - n10 - 2*n5 - 2*n8) - 
   (n8*j[p4, 0, -1, 0, 0, n5, 1, 1, 1 + n8, n9, 1 + n10, 1, 0, 0, 1])/
    (-9 + 4*d - n10 - 2*n5 - 2*n8) + j[p4, 0, -1, 0, 0, n5, 1, 2, n8, n9, 
     1 + n10, 0, 0, 1, 1]/(-9 + 4*d - n10 - 2*n5 - 2*n8) + 
   (n5*j[p4, 0, -1, 0, 0, 1 + n5, 1, 1, n8, n9, 1 + n10, 1, 0, 0, 1])/
    (9 - 4*d + n10 + 2*n5 + 2*n8) - 
   (n5*j[p4, 0, -1, 0, 0, 1 + n5, 1, 1, n8, n9, 1 + n10, 1, 0, 1, 0])/
    (9 - 4*d + n10 + 2*n5 + 2*n8) + ((9 - 4*d + 3*n10 + 2*n5 + 2*n8 + 2*n9)*
     j[p4, 0, 0, -1, 0, n5, 1, 1, n8, n9, 1 + n10, 1, 0, 1, 1])/
    (-9 + 4*d - n10 - 2*n5 - 2*n8) + ((-4 + 2*d - n10 - n5 - n8 - n9)*
     j[p4, 0, 0, 0, -1, n5, 1, 1, n8, n9, 1 + n10, 1, 0, 1, 1])/
    (-9 + 4*d - n10 - 2*n5 - 2*n8) - 
   (n9*j[p4, 0, 0, 0, -1, n5, 1, 1, n8, 1 + n9, 1 + n10, 1, 0, 1, 1])/
    (-9 + 4*d - n10 - 2*n5 - 2*n8) + 
   ((-2 + d - n10 - n8)*j[p4, 0, 0, 0, 0, -1 + n5, 1, 1, -1 + n8, n9, 
      1 + n10, 1, 0, 2, 1])/((-9 + 4*d - n10 - 2*n5 - 2*n8)*(-1 + n8)) + 
   j[p4, 0, 0, 0, 0, -1 + n5, 1, 1, n8, n9, 1 + n10, 1, 0, 1, 2]/
    (-9 + 4*d - n10 - 2*n5 - 2*n8) + 
   (n9*j[p4, 0, 0, 0, 0, -1 + n5, 1, 1, n8, 1 + n9, 1 + n10, 1, 0, 1, 1])/
    (-9 + 4*d - n10 - 2*n5 - 2*n8) + 
   ((2 - d + n10 + n8)*j[p4, 0, 0, 0, 0, n5, 0, 1, n8, n9, 1 + n10, 1, 0, 1, 
      1])/(-9 + 4*d - n10 - 2*n5 - 2*n8) + 
   ((-d - n10 + n8 - n9)*j[p4, 0, 0, 0, 0, n5, 1, 0, n8, n9, 1 + n10, 1, 0, 
      1, 1])/(-9 + 4*d - n10 - 2*n5 - 2*n8) + 
   j[p4, 0, 0, 0, 0, n5, 1, 0, n8, n9, 1 + n10, 1, 0, 2, 1]/
    (9 - 4*d + n10 + 2*n5 + 2*n8) + j[p4, 0, 0, 0, 0, n5, 1, 0, n8, n9, 
     1 + n10, 2, -1, 1, 1]/(-9 + 4*d - n10 - 2*n5 - 2*n8) + 
   j[p4, 0, 0, 0, 0, n5, 1, 0, n8, n9, 1 + n10, 2, 0, 1, 1]/
    (9 - 4*d + n10 + 2*n5 + 2*n8) + 
   ((-1 - n10)*j[p4, 0, 0, 0, 0, n5, 1, 0, n8, n9, 2 + n10, 1, 0, 1, 1])/
    (9 - 4*d + n10 + 2*n5 + 2*n8) + 
   (n9*j[p4, 0, 0, 0, 0, n5, 1, 0, n8, 1 + n9, 1 + n10, 1, 0, 1, 1])/
    (-9 + 4*d - n10 - 2*n5 - 2*n8) + 
   (n8*j[p4, 0, 0, 0, 0, n5, 1, 0, 1 + n8, n9, 1 + n10, 1, -1, 1, 1])/
    (-9 + 4*d - n10 - 2*n5 - 2*n8) + 
   ((n10 - 2*n5 + d*n5 - n10*n5 + 2*n8 - d*n8 - n5*n8 + n8^2 + n9 - n8*n9)*
     j[p4, 0, 0, 0, 0, n5, 1, 1, -1 + n8, n9, 1 + n10, 1, 0, 1, 1])/
    ((-9 + 4*d - n10 - 2*n5 - 2*n8)*(-1 + n8)) + 
   ((2 - d + n10 + n8)*j[p4, 0, 0, 0, 0, n5, 1, 1, -1 + n8, n9, 1 + n10, 1, 
      0, 2, 0])/((-9 + 4*d - n10 - 2*n5 - 2*n8)*(-1 + n8)) + 
   (n9*j[p4, 0, 0, 0, 0, n5, 1, 1, -1 + n8, 1 + n9, 1 + n10, 1, 0, 1, 1])/
    (-9 + 4*d - n10 - 2*n5 - 2*n8) + 
   ((2 - d + n5 + n9)*j[p4, 0, 0, 0, 0, n5, 1, 1, n8, -1 + n9, 1 + n10, 1, 0, 
      1, 1])/(-9 + 4*d - n10 - 2*n5 - 2*n8) + 
   ((n10 + n9)*j[p4, 0, 0, 0, 0, n5, 1, 1, n8, n9, 1 + n10, 0, 0, 1, 1])/
    (-9 + 4*d - n10 - 2*n5 - 2*n8) + 
   ((3 - d + n8)*j[p4, 0, 0, 0, 0, n5, 1, 1, n8, n9, 1 + n10, 1, 0, 0, 1])/
    (-9 + 4*d - n10 - 2*n5 - 2*n8) + j[p4, 0, 0, 0, 0, n5, 1, 1, n8, n9, 
     1 + n10, 1, 0, 0, 2]/(9 - 4*d + n10 + 2*n5 + 2*n8) + 
   ((1 + n10)*j[p4, 0, 0, 0, 0, n5, 1, 1, n8, n9, 2 + n10, 0, 0, 1, 1])/
    (9 - 4*d + n10 + 2*n5 + 2*n8) + 
   (n9*j[p4, 0, 0, 0, 0, n5, 1, 1, n8, 1 + n9, n10, 1, 0, 1, 0])/
    (-9 + 4*d - n10 - 2*n5 - 2*n8) - 
   (n9*j[p4, 0, 0, 0, 0, n5, 1, 1, n8, 1 + n9, 1 + n10, 0, 0, 1, 1])/
    (-9 + 4*d - n10 - 2*n5 - 2*n8) + j[p4, 0, 0, 0, 0, n5, 1, 2, -1 + n8, n9, 
     n10, 1, 0, 1, 1]/(9 - 4*d + n10 + 2*n5 + 2*n8) + 
   j[p4, 0, 0, 0, 0, n5, 2, 1, -1 + n8, -1 + n9, 1 + n10, 1, 0, 1, 1]/
    (9 - 4*d + n10 + 2*n5 + 2*n8) + j[p4, 0, 0, 0, 0, n5, 2, 1, -1 + n8, n9, 
     n10, 1, 0, 1, 1]/(-9 + 4*d - n10 - 2*n5 - 2*n8) + 
   (n5*j[p4, 0, 0, 0, 0, 1 + n5, 1, 0, n8, -1 + n9, 1 + n10, 1, 0, 1, 1])/
    (9 - 4*d + n10 + 2*n5 + 2*n8) + ((2*n5 - d*n5 + n10*n5 + n5*n8)*
     j[p4, 0, 0, 0, 0, 1 + n5, 1, 1, -1 + n8, n9, 1 + n10, 1, 0, 0, 1])/
    ((-9 + 4*d - n10 - 2*n5 - 2*n8)*(-1 + n8)) + 
   ((-2*n5 + d*n5 - n10*n5 - n5*n8)*j[p4, 0, 0, 0, 0, 1 + n5, 1, 1, -1 + n8, 
      n9, 1 + n10, 1, 0, 1, 0])/((-9 + 4*d - n10 - 2*n5 - 2*n8)*(-1 + n8)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 0 && n12 == 0 && n2 == 0 && n3 == 0 && n4 == 0 && 
    n6 == 1 && n7 == 1 && n8 == 1 && n9 == 0 &&  !(n13 == 1 || n14 == 1) -> 
  j[p4, 0, 0, 0, 0, n5, 1, 1, 2, 0, 0, n11, 0, -1 + n13, n14]/(1 - n13) + 
   j[p4, 0, 0, 0, 0, n5, 2, 1, 1, 0, 0, n11, 0, n13, -1 + n14]/(1 - n14) - 
   j[p4, 0, 0, 0, 0, n5, 2, 1, 2, 0, 0, n11, 0, -1 + n13, -1 + n14]/
    ((-1 + n13)*(-1 + n14)) + ((-2 + n13 - n5)*j[p4, 0, 0, 0, 0, 1 + n5, 1, 
      1, 1, 0, 0, n11, 0, -1 + n13, n14])/(-1 + n13) + 
   ((-2 + n14 - n5)*j[p4, 0, 0, 0, 0, 1 + n5, 1, 1, 1, 0, 0, n11, 0, n13, 
      -1 + n14])/(-1 + n14) + j[p4, 0, 0, 0, 0, 1 + n5, 1, 1, 2, 0, 0, n11, 
     0, -2 + n13, n14]/(-1 + n13) + 
   ((-2 + d - n14 - 2*n5)*j[p4, 0, 0, 0, 0, 1 + n5, 1, 1, 2, 0, 0, n11, 0, 
      -1 + n13, -1 + n14])/((-1 + n13)*(-1 + n14)) + 
   j[p4, 0, 0, 0, 0, 1 + n5, 2, 0, 2, 0, 0, n11, 0, -1 + n13, -1 + n14]/
    ((-1 + n13)*(-1 + n14)) + ((-2 + d - n13 - 2*n5)*
     j[p4, 0, 0, 0, 0, 1 + n5, 2, 1, 1, 0, 0, n11, 0, -1 + n13, -1 + n14])/
    ((-1 + n13)*(-1 + n14)) + j[p4, 0, 0, 0, 0, 1 + n5, 2, 1, 1, 0, 0, n11, 
     0, n13, -2 + n14]/(-1 + n14) + 
   ((1 + n5)*j[p4, 0, 0, 0, 0, 2 + n5, 1, 1, 1, 0, 0, n11, 0, -2 + n13, n14])/
    (-1 + n13) + ((-2 + d - n13 - n14 - 4*n5 + d*n5 - n13*n5 - n14*n5 - 
      2*n5^2)*j[p4, 0, 0, 0, 0, 2 + n5, 1, 1, 1, 0, 0, n11, 0, -1 + n13, 
      -1 + n14])/((-1 + n13)*(-1 + n14)) + 
   ((1 + n5)*j[p4, 0, 0, 0, 0, 2 + n5, 1, 1, 1, 0, 0, n11, 0, n13, -2 + n14])/
    (-1 + n14), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?NonPositive, (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, 
    (n7_)?Positive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 0 && n12 == 0 && n14 == 1 && n3 == 0 && n4 == 0 && 
    n6 == 1 && n7 == 1 && n8 == 1 && n9 == 0 && n13 != 1 -> 
  ((4 - d + 2*n2)*j[p4, 0, n2, 0, 0, n5, 1, 1, 2, 0, 0, n11, 0, -1 + n13, 1])/
    ((-1 + n13)*(-d + 2*n13 + 2*n5)) - 
   (n5*j[p4, 0, n2, 0, 0, 1 + n5, 1, 1, 1, 0, 0, n11, 0, -1 + n13, 1])/
    (-1 + n13) - (2*n5*j[p4, 0, n2, 0, 0, 1 + n5, 1, 1, 1, 0, 0, n11, 0, n13, 
      0])/(d - 2*n13 - 2*n5) - 
   (2*n2*j[p4, 0, 1 + n2, 0, 0, n5, 1, 0, 2, 0, 0, n11, 0, -1 + n13, 1])/
    ((-1 + n13)*(-d + 2*n13 + 2*n5)) + 
   ((5*n2 - 2*n13*n2 + 2*n2^2 - n2*n5)*j[p4, 0, 1 + n2, 0, 0, n5, 1, 1, 1, 0, 
      0, n11, 0, -1 + n13, 1])/((-1 + n13)*(-d + 2*n13 + 2*n5)) + 
   (n2*j[p4, 0, 1 + n2, 0, 0, n5, 1, 1, 2, 0, 0, n11, -1, -1 + n13, 1])/
    ((-1 + n13)*(-d + 2*n13 + 2*n5)) - 
   (n2*j[p4, 0, 1 + n2, 0, 0, n5, 1, 1, 2, 0, 0, n11, 0, -2 + n13, 1])/
    ((-1 + n13)*(-d + 2*n13 + 2*n5)) - 
   (n2*n5*j[p4, 0, 1 + n2, 0, 0, 1 + n5, 1, 1, 1, 0, 0, n11, 0, -2 + n13, 1])/
    ((-1 + n13)*(-d + 2*n13 + 2*n5)) + 
   (n2*n5*j[p4, 0, 1 + n2, 0, 0, 1 + n5, 1, 1, 1, 0, 0, n11, 0, -1 + n13, 0])/
    ((-1 + n13)*(-d + 2*n13 + 2*n5)) + 
   ((n2 + n2^2)*j[p4, 0, 2 + n2, -1, 0, n5, 1, 1, 1, 0, 0, n11, 0, -1 + n13, 
      1])/((-1 + n13)*(-d + 2*n13 + 2*n5)) + 
   ((-n2 - n2^2)*j[p4, 0, 2 + n2, 0, 0, n5, 1, 0, 1, 0, 0, n11, 0, -1 + n13, 
      1])/((-1 + n13)*(-d + 2*n13 + 2*n5)) + 
   ((-n2 - n2^2)*j[p4, 0, 2 + n2, 0, 0, n5, 1, 1, 0, 0, 0, n11, 0, -1 + n13, 
      1])/((-1 + n13)*(-d + 2*n13 + 2*n5)) + 
   ((n2 + n2^2)*j[p4, 0, 2 + n2, 0, 0, n5, 1, 1, 1, 0, 0, n11, -1, -1 + n13, 
      1])/((-1 + n13)*(-d + 2*n13 + 2*n5)) + 
   ((-2*n2 - 2*n2^2)*j[p4, 0, 2 + n2, 0, 0, n5, 1, 1, 1, 0, 0, n11, 0, 
      -2 + n13, 1])/((-1 + n13)*(-d + 2*n13 + 2*n5)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 0 && n12 == 0 && n13 == 1 && n14 == 1 && n4 == 0 && 
    n6 == 1 && n7 == 1 && n8 == 1 && n9 == 0 &&  !(n11 == 1 || n3 == 0) -> 
  ((-22 + 8*d - 2*n11 - 4*n2 - 4*n3 - 4*n5)*j[p4, -1, n2, 1 + n3, 0, n5, 1, 
      1, 1, 0, 0, n11, 0, 1, 1])/(-2 + d - 2*n2) + 
   ((4 - 2*d + 2*n2)*j[p4, 0, -1 + n2, 1 + n3, 0, n5, 1, 1, 1, 0, 0, n11, 0, 
      1, 1])/(-2 + d - 2*n2) + j[p4, 0, -1 + n2, 1 + n3, 0, n5, 1, 1, 2, 0, 
     0, n11, 0, 0, 1]/(2 - d + 2*n2) + 
   ((-8 + 3*d - 2*n11 - 2*n3 - 2*n5)*j[p4, 0, -1 + n2, 1 + n3, 0, n5, 1, 2, 
      1, 0, 0, -1 + n11, 0, 1, 1])/((-1 + n11)*(-2 + d - 2*n2)) - 
   (2*j[p4, 0, -1 + n2, 1 + n3, 0, n5, 1, 2, 1, 0, 0, n11, 0, 0, 1])/
    (-2 + d - 2*n2) + j[p4, 0, -1 + n2, 1 + n3, 0, n5, 2, 1, 0, 0, 0, n11, 0, 
     1, 1]/(2 - d + 2*n2) + (n5*j[p4, 0, -1 + n2, 1 + n3, 0, 1 + n5, 1, 0, 1, 
      0, 0, n11, 0, 1, 1])/(-2 + d - 2*n2) - 
   (3*n5*j[p4, 0, -1 + n2, 1 + n3, 0, 1 + n5, 1, 1, 1, 0, 0, n11, 0, 0, 1])/
    (-2 + d - 2*n2) + (3*n5*j[p4, 0, -1 + n2, 1 + n3, 0, 1 + n5, 1, 1, 1, 0, 
      0, n11, 0, 1, 0])/(-2 + d - 2*n2) + 
   ((1 + n3)*j[p4, 0, -1 + n2, 2 + n3, 0, n5, 1, 0, 1, 0, 0, n11, 0, 1, 1])/
    (-2 + d - 2*n2) + ((-8 + 3*d - 2*n11 - 10*n3 + 3*d*n3 - 2*n11*n3 - 
      2*n3^2 - 2*n5 - 2*n3*n5)*j[p4, 0, -1 + n2, 2 + n3, 0, n5, 1, 1, 1, 0, 
      0, -1 + n11, 0, 1, 1])/((-1 + n11)*(-2 + d - 2*n2)) + 
   ((-1 - n3)*j[p4, 0, -1 + n2, 2 + n3, 0, n5, 1, 1, 1, 0, 0, n11, 0, 0, 1])/
    (-2 + d - 2*n2) + j[p4, 0, n2, n3, 0, n5, 0, 1, 1, 0, 0, n11, 0, 1, 2]/
    (-2 + d - 2*n2) + j[p4, 0, n2, n3, 0, n5, 1, 0, 1, 0, 0, n11, 0, 1, 2]/
    (-2 + d - 2*n2) + j[p4, 0, n2, n3, 0, n5, 1, 1, 0, 0, 0, n11, 0, 1, 2]/
    (-2 + d - 2*n2) + j[p4, 0, n2, n3, 0, n5, 1, 1, 0, 0, 0, n11, 0, 2, 1]/
    (-2 + d - 2*n2) + j[p4, 0, n2, n3, 0, n5, 1, 1, 1, 0, 0, n11, 0, 0, 2]/
    (-2 + d - 2*n2) + (2*j[p4, 0, n2, n3, 0, n5, 1, 2, 0, 0, 0, n11, 0, 1, 
      1])/(-2 + d - 2*n2) + ((-8 + 3*d - 2*n11 - 2*n3 - 2*n5)*
     j[p4, 0, n2, n3, 0, n5, 1, 2, 1, 0, 0, -1 + n11, 0, 1, 1])/
    ((-1 + n11)*(-2 + d - 2*n2)) + j[p4, 0, n2, n3, 0, n5, 2, 1, 0, 0, 0, 
     n11, 0, 1, 1]/(2 - d + 2*n2) + j[p4, 0, n2, 1 + n3, -1, n5, 0, 1, 1, 0, 
     0, n11, 0, 1, 2]/(2 - d + 2*n2) + 
   j[p4, 0, n2, 1 + n3, -1, n5, 1, 0, 1, 0, 0, n11, 0, 1, 2]/(2 - d + 2*n2) + 
   j[p4, 0, n2, 1 + n3, -1, n5, 1, 1, 0, 0, 0, n11, 0, 1, 2]/(2 - d + 2*n2) + 
   j[p4, 0, n2, 1 + n3, -1, n5, 1, 1, 1, 0, 0, n11, 0, 0, 2]/(2 - d + 2*n2) + 
   j[p4, 0, n2, 1 + n3, -1, n5, 2, 0, 1, 0, 0, n11, 0, 1, 1]/
    (-2 + d - 2*n2) + j[p4, 0, n2, 1 + n3, -1, n5, 2, 1, 0, 0, 0, n11, 0, 1, 
     1]/(-2 + d - 2*n2) + j[p4, 0, n2, 1 + n3, -1, n5, 2, 1, 1, 0, 0, n11, 0, 
     0, 1]/(-2 + d - 2*n2) + j[p4, 0, n2, 1 + n3, -1, n5, 2, 1, 1, 0, 0, n11, 
     0, 1, 0]/(-2 + d - 2*n2) - 
   (n5*j[p4, 0, n2, 1 + n3, -1, 1 + n5, 0, 1, 1, 0, 0, n11, 0, 1, 1])/
    (-2 + d - 2*n2) - (n5*j[p4, 0, n2, 1 + n3, -1, 1 + n5, 1, 1, 1, 0, 0, 
      n11, 0, 0, 1])/(-2 + d - 2*n2) + 
   (n5*j[p4, 0, n2, 1 + n3, -1, 1 + n5, 1, 1, 1, 0, 0, n11, 0, 1, 0])/
    (-2 + d - 2*n2) + (2*j[p4, 0, n2, 1 + n3, 0, -1 + n5, 1, 1, 1, 0, 0, n11, 
      0, 1, 2])/(-2 + d - 2*n2) + j[p4, 0, n2, 1 + n3, 0, n5, 0, 1, 1, 0, 0, 
     n11, 0, 1, 1]/(-2 + d - 2*n2) + j[p4, 0, n2, 1 + n3, 0, n5, 1, 0, 1, 0, 
     0, n11, -1, 2, 1]/(2 - d + 2*n2) + 
   ((1 - n2 + 3*n3)*j[p4, 0, n2, 1 + n3, 0, n5, 1, 0, 1, 0, 0, n11, 0, 1, 1])/
    (-2 + d - 2*n2) + j[p4, 0, n2, 1 + n3, 0, n5, 1, 0, 2, 0, 0, n11, -1, 1, 
     1]/(-2 + d - 2*n2) + ((6 - 5*n2 + 6*n3)*j[p4, 0, n2, 1 + n3, 0, n5, 1, 
      1, 0, 0, 0, n11, 0, 1, 1])/(-2 + d - 2*n2) - 
   (2*n11*j[p4, 0, n2, 1 + n3, 0, n5, 1, 1, 0, 0, 0, 1 + n11, -1, 1, 1])/
    (-2 + d - 2*n2) + (2*n11*j[p4, 0, n2, 1 + n3, 0, n5, 1, 1, 0, 0, 0, 
      1 + n11, 0, 1, 1])/(-2 + d - 2*n2) + 
   ((8 - 11*d + 3*d^2 + 10*n11 - 5*d*n11 + 2*n11^2 - 6*n3 + d*n3 - 2*n3^2 + 
      2*n5 - 2*d*n5 + 2*n11*n5 - 2*n3*n5)*j[p4, 0, n2, 1 + n3, 0, n5, 1, 1, 
      1, 0, 0, -1 + n11, 0, 1, 1])/((-1 + n11)*(-2 + d - 2*n2)) + 
   ((6 - 6*n2 + 3*n3)*j[p4, 0, n2, 1 + n3, 0, n5, 1, 1, 1, 0, 0, n11, 0, 0, 
      1])/(-2 + d - 2*n2) - (2*j[p4, 0, n2, 1 + n3, 0, n5, 1, 1, 1, 0, 0, 
      n11, 0, 0, 2])/(-2 + d - 2*n2) + 
   j[p4, 0, n2, 1 + n3, 0, n5, 1, 1, 1, 0, 0, n11, 0, 1, 0]/(2 - d + 2*n2) + 
   ((6 - 3*d + 4*n2 + 2*n5)*j[p4, 0, n2, 1 + n3, 0, n5, 1, 1, 1, 0, 0, n11, 
      0, 1, 1])/(-2 + d - 2*n2) + ((8 - 3*d + 2*n11 + 2*n3 + 2*n5)*
     j[p4, 0, n2, 1 + n3, 0, n5, 1, 1, 2, 0, 0, -1 + n11, -1, 1, 1])/
    ((-1 + n11)*(-2 + d - 2*n2)) + ((-8 + 3*d - 2*n11 - 2*n3 - 2*n5)*
     j[p4, 0, n2, 1 + n3, 0, n5, 1, 1, 2, 0, 0, -1 + n11, 0, 0, 1])/
    ((-1 + n11)*(-2 + d - 2*n2)) + ((8 - 3*d + 2*n11 + 2*n3 + 2*n5)*
     j[p4, 0, n2, 1 + n3, 0, n5, 1, 2, 0, 0, 0, -1 + n11, 0, 1, 1])/
    ((-1 + n11)*(-2 + d - 2*n2)) + ((8 - 3*d + 2*n11 + 2*n3 + 2*n5)*
     j[p4, 0, n2, 1 + n3, 0, n5, 1, 2, 1, 0, 0, -1 + n11, 0, 0, 1])/
    ((-1 + n11)*(-2 + d - 2*n2)) + j[p4, 0, n2, 1 + n3, 0, n5, 2, 1, 0, 0, 0, 
     n11, -1, 1, 1]/(2 - d + 2*n2) + 
   ((16 - 6*d + 4*n11 + 20*n3 - 6*d*n3 + 4*n11*n3 + 4*n3^2 + 4*n5 + 4*n3*n5)*
     j[p4, 0, n2, 2 + n3, 0, n5, 1, 0, 1, 0, 0, -1 + n11, 0, 1, 1])/
    ((-1 + n11)*(-2 + d - 2*n2)) + 
   ((1 + n3)*j[p4, 0, n2, 2 + n3, 0, n5, 1, 0, 1, 0, 0, n11, -1, 1, 1])/
    (-2 + d - 2*n2) + ((2 + 2*n3)*j[p4, 0, n2, 2 + n3, 0, n5, 1, 0, 1, 0, 0, 
      n11, 0, 1, 1])/(-2 + d - 2*n2) + 
   ((16 - 6*d + 4*n11 + 20*n3 - 6*d*n3 + 4*n11*n3 + 4*n3^2 + 4*n5 + 4*n3*n5)*
     j[p4, 0, n2, 2 + n3, 0, n5, 1, 1, 0, 0, 0, -1 + n11, 0, 1, 1])/
    ((-1 + n11)*(-2 + d - 2*n2)) + 
   ((-8 + 3*d - 2*n11 - 10*n3 + 3*d*n3 - 2*n11*n3 - 2*n3^2 - 2*n5 - 2*n3*n5)*
     j[p4, 0, n2, 2 + n3, 0, n5, 1, 1, 1, 0, 0, -1 + n11, -1, 1, 1])/
    ((-1 + n11)*(-2 + d - 2*n2)) + 
   ((-1 - n3)*j[p4, 0, n2, 2 + n3, 0, n5, 1, 1, 1, 0, 0, n11, -1, 0, 1])/
    (-2 + d - 2*n2) + ((-2 - 2*n3)*j[p4, 0, n2, 2 + n3, 0, n5, 1, 1, 1, 0, 0, 
      n11, 0, 0, 1])/(-2 + d - 2*n2) + 
   (n2*j[p4, 0, 1 + n2, n3, 0, n5, 1, 0, 1, 0, 0, n11, 0, 1, 1])/
    (-2 + d - 2*n2) - (n2*j[p4, 0, 1 + n2, n3, 0, n5, 1, 1, 0, 0, 0, n11, 0, 
      1, 1])/(-2 + d - 2*n2) + 
   (n2*j[p4, 0, 1 + n2, 1 + n3, 0, n5, 1, 0, 1, 0, 0, n11, -1, 1, 1])/
    (-2 + d - 2*n2) - (n2*j[p4, 0, 1 + n2, 1 + n3, 0, n5, 1, 1, 0, 0, 0, n11, 
      -1, 1, 1])/(-2 + d - 2*n2), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n11 == 1 && n12 == 0 && n2 == 0 && n3 == 0 && n4 == 0 && 
    n6 == 1 && n7 == 1 && n8 == 1 && n9 == 0 &&  !(n13 == 1 || n14 == 1) -> 
  j[p4, 0, 0, 0, 0, n5, 1, 1, 2, 0, n10, 1, 0, -1 + n13, n14]/(1 - n13) + 
   j[p4, 0, 0, 0, 0, n5, 2, 1, 1, 0, n10, 1, 0, n13, -1 + n14]/(1 - n14) - 
   j[p4, 0, 0, 0, 0, n5, 2, 1, 2, 0, n10, 1, 0, -1 + n13, -1 + n14]/
    ((-1 + n13)*(-1 + n14)) + ((-2 + n13 - n5)*j[p4, 0, 0, 0, 0, 1 + n5, 1, 
      1, 1, 0, n10, 1, 0, -1 + n13, n14])/(-1 + n13) + 
   ((-2 + n14 - n5)*j[p4, 0, 0, 0, 0, 1 + n5, 1, 1, 1, 0, n10, 1, 0, n13, 
      -1 + n14])/(-1 + n14) + j[p4, 0, 0, 0, 0, 1 + n5, 1, 1, 2, 0, n10, 1, 
     0, -2 + n13, n14]/(-1 + n13) + 
   ((-2 + d - n14 - 2*n5)*j[p4, 0, 0, 0, 0, 1 + n5, 1, 1, 2, 0, n10, 1, 0, 
      -1 + n13, -1 + n14])/((-1 + n13)*(-1 + n14)) + 
   j[p4, 0, 0, 0, 0, 1 + n5, 2, 0, 2, 0, n10, 1, 0, -1 + n13, -1 + n14]/
    ((-1 + n13)*(-1 + n14)) + ((-2 + d - n13 - 2*n5)*
     j[p4, 0, 0, 0, 0, 1 + n5, 2, 1, 1, 0, n10, 1, 0, -1 + n13, -1 + n14])/
    ((-1 + n13)*(-1 + n14)) + j[p4, 0, 0, 0, 0, 1 + n5, 2, 1, 1, 0, n10, 1, 
     0, n13, -2 + n14]/(-1 + n14) + 
   ((1 + n5)*j[p4, 0, 0, 0, 0, 2 + n5, 1, 1, 1, 0, n10, 1, 0, -2 + n13, n14])/
    (-1 + n13) + ((-2 + d - n13 - n14 - 4*n5 + d*n5 - n13*n5 - n14*n5 - 
      2*n5^2)*j[p4, 0, 0, 0, 0, 2 + n5, 1, 1, 1, 0, n10, 1, 0, -1 + n13, 
      -1 + n14])/((-1 + n13)*(-1 + n14)) + 
   ((1 + n5)*j[p4, 0, 0, 0, 0, 2 + n5, 1, 1, 1, 0, n10, 1, 0, n13, -2 + n14])/
    (-1 + n14), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?NonPositive, (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, 
    (n7_)?Positive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n4 == 0 && 
    n6 == 1 && n7 == 1 && n8 == 1 && n9 == 0 && n3 != 0 -> 
  ((96 - 104*d + 36*d^2 - 4*d^3 + 8*n1 - 6*d*n1 + d^2*n1 + 16*n2 - 12*d*n2 + 
      2*d^2*n2 + 64*n3 - 52*d*n3 + 10*d^2*n3 + 4*n1*n3 - 2*d*n1*n3 + 
      8*n2*n3 - 4*d*n2*n3 + 8*n3^2 - 4*d*n3^2 + 64*n5 - 40*d*n5 + 6*d^2*n5 + 
      4*n1*n5 - d*n1*n5 + 8*n2*n5 - 2*d*n2*n5 + 40*n3*n5 - 14*d*n3*n5 + 
      2*n1*n3*n5 + 4*n2*n3*n5 + 4*n3^2*n5 + 8*n5^2 - 2*d*n5^2 + 4*n3*n5^2)*
     j[p4, -1 + n1, n2, 1 + n3, 0, n5, 0, 1, 2, 0, 0, 1, 0, 1, 1])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((96 - 104*d + 36*d^2 - 4*d^3 + 8*n1 - 6*d*n1 + d^2*n1 + 16*n2 - 12*d*n2 + 
      2*d^2*n2 + 64*n3 - 52*d*n3 + 10*d^2*n3 + 4*n1*n3 - 2*d*n1*n3 + 
      8*n2*n3 - 4*d*n2*n3 + 8*n3^2 - 4*d*n3^2 + 64*n5 - 40*d*n5 + 6*d^2*n5 + 
      4*n1*n5 - d*n1*n5 + 8*n2*n5 - 2*d*n2*n5 + 40*n3*n5 - 14*d*n3*n5 + 
      2*n1*n3*n5 + 4*n2*n3*n5 + 4*n3^2*n5 + 8*n5^2 - 2*d*n5^2 + 4*n3*n5^2)*
     j[p4, -1 + n1, n2, 1 + n3, 0, n5, 1, 0, 2, 0, 0, 1, 0, 1, 1])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((-192 + 304*d - 176*d^2 + 44*d^3 - 4*d^4 - 112*n1 + 124*d*n1 - 
      44*d^2*n1 + 5*d^3*n1 - 8*n1^2 + 6*d*n1^2 - d^2*n1^2 - 32*n2 + 40*d*n2 - 
      16*d^2*n2 + 2*d^3*n2 - 16*n1*n2 + 12*d*n1*n2 - 2*d^2*n1*n2 - 128*n3 + 
      168*d*n3 - 72*d^2*n3 + 10*d^3*n3 - 72*n1*n3 + 60*d*n1*n3 - 
      12*d^2*n1*n3 - 4*n1^2*n3 + 2*d*n1^2*n3 - 16*n2*n3 + 16*d*n2*n3 - 
      4*d^2*n2*n3 - 8*n1*n2*n3 + 4*d*n1*n2*n3 - 16*n3^2 + 16*d*n3^2 - 
      4*d^2*n3^2 - 8*n1*n3^2 + 4*d*n1*n3^2 - 128*n5 + 144*d*n5 - 52*d^2*n5 + 
      6*d^3*n5 - 72*n1*n5 + 46*d*n1*n5 - 7*d^2*n1*n5 - 4*n1^2*n5 + 
      d*n1^2*n5 - 16*n2*n5 + 12*d*n2*n5 - 2*d^2*n2*n5 - 8*n1*n2*n5 + 
      2*d*n1*n2*n5 - 80*n3*n5 + 68*d*n3*n5 - 14*d^2*n3*n5 - 44*n1*n3*n5 + 
      16*d*n1*n3*n5 - 2*n1^2*n3*n5 - 8*n2*n3*n5 + 4*d*n2*n3*n5 - 
      4*n1*n2*n3*n5 - 8*n3^2*n5 + 4*d*n3^2*n5 - 4*n1*n3^2*n5 - 16*n5^2 + 
      12*d*n5^2 - 2*d^2*n5^2 - 8*n1*n5^2 + 2*d*n1*n5^2 - 8*n3*n5^2 + 
      4*d*n3*n5^2 - 4*n1*n3*n5^2)*j[p4, -1 + n1, n2, 1 + n3, 0, n5, 1, 1, 1, 
      0, 0, 1, 0, 1, 1])/(832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 
     64*d*n1 + 24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 
     62*d^3*n2 + 132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 
     448*d*n2^2 + 82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 
     44*d*n2^3 + 8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 
     31*d^3*n3 + 32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 
     490*d*n2*n3 + 92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((96 - 104*d + 36*d^2 - 4*d^3 + 8*n1 - 6*d*n1 + d^2*n1 + 16*n2 - 12*d*n2 + 
      2*d^2*n2 + 64*n3 - 52*d*n3 + 10*d^2*n3 + 4*n1*n3 - 2*d*n1*n3 + 
      8*n2*n3 - 4*d*n2*n3 + 8*n3^2 - 4*d*n3^2 + 64*n5 - 40*d*n5 + 6*d^2*n5 + 
      4*n1*n5 - d*n1*n5 + 8*n2*n5 - 2*d*n2*n5 + 40*n3*n5 - 14*d*n3*n5 + 
      2*n1*n3*n5 + 4*n2*n3*n5 + 4*n3^2*n5 + 8*n5^2 - 2*d*n5^2 + 4*n3*n5^2)*
     j[p4, -1 + n1, n2, 1 + n3, 0, n5, 1, 1, 1, 0, 0, 1, 0, 2, 0])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((96 - 104*d + 36*d^2 - 4*d^3 + 8*n1 - 6*d*n1 + d^2*n1 + 16*n2 - 12*d*n2 + 
      2*d^2*n2 + 160*n3 - 156*d*n3 + 46*d^2*n3 - 4*d^3*n3 + 12*n1*n3 - 
      8*d*n1*n3 + d^2*n1*n3 + 24*n2*n3 - 16*d*n2*n3 + 2*d^2*n2*n3 + 72*n3^2 - 
      56*d*n3^2 + 10*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 8*n2*n3^2 - 
      4*d*n2*n3^2 + 8*n3^3 - 4*d*n3^3 + 64*n5 - 40*d*n5 + 6*d^2*n5 + 
      4*n1*n5 - d*n1*n5 + 8*n2*n5 - 2*d*n2*n5 + 104*n3*n5 - 54*d*n3*n5 + 
      6*d^2*n3*n5 + 6*n1*n3*n5 - d*n1*n3*n5 + 12*n2*n3*n5 - 2*d*n2*n3*n5 + 
      44*n3^2*n5 - 14*d*n3^2*n5 + 2*n1*n3^2*n5 + 4*n2*n3^2*n5 + 4*n3^3*n5 + 
      8*n5^2 - 2*d*n5^2 + 12*n3*n5^2 - 2*d*n3*n5^2 + 4*n3^2*n5^2)*
     j[p4, -1 + n1, n2, 2 + n3, 0, n5, 1, 0, 1, 0, 0, 1, 0, 1, 1])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((-96 + 104*d - 36*d^2 + 4*d^3 - 8*n1 + 6*d*n1 - d^2*n1 - 16*n2 + 
      12*d*n2 - 2*d^2*n2 - 160*n3 + 156*d*n3 - 46*d^2*n3 + 4*d^3*n3 - 
      12*n1*n3 + 8*d*n1*n3 - d^2*n1*n3 - 24*n2*n3 + 16*d*n2*n3 - 
      2*d^2*n2*n3 - 72*n3^2 + 56*d*n3^2 - 10*d^2*n3^2 - 4*n1*n3^2 + 
      2*d*n1*n3^2 - 8*n2*n3^2 + 4*d*n2*n3^2 - 8*n3^3 + 4*d*n3^3 - 64*n5 + 
      40*d*n5 - 6*d^2*n5 - 4*n1*n5 + d*n1*n5 - 8*n2*n5 + 2*d*n2*n5 - 
      104*n3*n5 + 54*d*n3*n5 - 6*d^2*n3*n5 - 6*n1*n3*n5 + d*n1*n3*n5 - 
      12*n2*n3*n5 + 2*d*n2*n3*n5 - 44*n3^2*n5 + 14*d*n3^2*n5 - 2*n1*n3^2*n5 - 
      4*n2*n3^2*n5 - 4*n3^3*n5 - 8*n5^2 + 2*d*n5^2 - 12*n3*n5^2 + 
      2*d*n3*n5^2 - 4*n3^2*n5^2)*j[p4, -1 + n1, n2, 2 + n3, 0, n5, 1, 1, 1, 
      0, 0, 1, 0, 0, 1])/(832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 
     64*d*n1 + 24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 
     62*d^3*n2 + 132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 
     448*d*n2^2 + 82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 
     44*d*n2^3 + 8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 
     31*d^3*n3 + 32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 
     490*d*n2*n3 + 92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((96 - 104*d + 36*d^2 - 4*d^3 + 8*n1 - 6*d*n1 + d^2*n1 + 16*n2 - 12*d*n2 + 
      2*d^2*n2 + 160*n3 - 156*d*n3 + 46*d^2*n3 - 4*d^3*n3 + 12*n1*n3 - 
      8*d*n1*n3 + d^2*n1*n3 + 24*n2*n3 - 16*d*n2*n3 + 2*d^2*n2*n3 + 72*n3^2 - 
      56*d*n3^2 + 10*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 8*n2*n3^2 - 
      4*d*n2*n3^2 + 8*n3^3 - 4*d*n3^3 + 64*n5 - 40*d*n5 + 6*d^2*n5 + 
      4*n1*n5 - d*n1*n5 + 8*n2*n5 - 2*d*n2*n5 + 104*n3*n5 - 54*d*n3*n5 + 
      6*d^2*n3*n5 + 6*n1*n3*n5 - d*n1*n3*n5 + 12*n2*n3*n5 - 2*d*n2*n3*n5 + 
      44*n3^2*n5 - 14*d*n3^2*n5 + 2*n1*n3^2*n5 + 4*n2*n3^2*n5 + 4*n3^3*n5 + 
      8*n5^2 - 2*d*n5^2 + 12*n3*n5^2 - 2*d*n3*n5^2 + 4*n3^2*n5^2)*
     j[p4, -1 + n1, n2, 2 + n3, 0, n5, 1, 1, 1, 0, 0, 1, 0, 1, 0])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((96*n2 - 104*d*n2 + 36*d^2*n2 - 4*d^3*n2 + 8*n1*n2 - 6*d*n1*n2 + 
      d^2*n1*n2 + 16*n2^2 - 12*d*n2^2 + 2*d^2*n2^2 + 64*n2*n3 - 52*d*n2*n3 + 
      10*d^2*n2*n3 + 4*n1*n2*n3 - 2*d*n1*n2*n3 + 8*n2^2*n3 - 4*d*n2^2*n3 + 
      8*n2*n3^2 - 4*d*n2*n3^2 + 64*n2*n5 - 40*d*n2*n5 + 6*d^2*n2*n5 + 
      4*n1*n2*n5 - d*n1*n2*n5 + 8*n2^2*n5 - 2*d*n2^2*n5 + 40*n2*n3*n5 - 
      14*d*n2*n3*n5 + 2*n1*n2*n3*n5 + 4*n2^2*n3*n5 + 4*n2*n3^2*n5 + 
      8*n2*n5^2 - 2*d*n2*n5^2 + 4*n2*n3*n5^2)*j[p4, -1 + n1, 1 + n2, 1 + n3, 
      0, n5, 0, 1, 1, 0, 0, 1, 0, 1, 1])/(832 - 1240*d + 684*d^2 - 166*d^3 + 
     15*d^4 + 56*n1 - 64*d*n1 + 24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 
     510*d^2*n2 - 62*d^3*n2 + 132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 
     608*n2^2 - 448*d*n2^2 + 82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 
     120*n2^3 - 44*d*n2^3 + 8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 
     250*d^2*n3 - 31*d^3*n3 + 32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 
     644*n2*n3 - 490*d*n2*n3 + 92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 
     208*n2^2*n3 - 78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 
     100*d*n3^2 + 20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 
     38*d*n2*n3^2 + 4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 
     4*n2*n3^3 + 504*n5 - 508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - 
     d^2*n1*n5 + 532*n2*n5 - 370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 
     8*d*n1*n2*n5 + 164*n2^2*n5 - 58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 
     340*n3*n5 - 232*d*n3*n5 + 39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 
     220*n2*n3*n5 - 78*d*n2*n3*n5 + 8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 
     68*n3^2*n5 - 24*d*n3^2*n5 + 2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 
     44*n5^2 - 26*d*n5^2 + 4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 
     44*n2*n5^2 - 14*d*n2*n5^2 - 2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 
     8*d*n3*n5^2 - 4*n1*n3*n5^2 + 12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((1344 - 1768*d + 866*d^2 - 187*d^3 + 15*d^4 + 192*n1 - 184*d*n1 + 
      58*d^2*n1 - 6*d^3*n1 + 976*n2 - 940*d*n2 + 298*d^2*n2 - 31*d^3*n2 + 
      112*n1*n2 - 68*d*n1*n2 + 10*d^2*n1*n2 + 224*n2^2 - 136*d*n2^2 + 
      20*d^2*n2^2 + 16*n1*n2^2 - 4*d*n1*n2^2 + 16*n2^3 - 4*d*n2^3 + 1480*n3 - 
      1498*d*n3 + 503*d^2*n3 - 56*d^3*n3 + 184*n1*n3 - 122*d*n1*n3 + 
      20*d^2*n1*n3 + 856*n2*n3 - 572*d*n2*n3 + 95*d^2*n2*n3 + 80*n1*n2*n3 - 
      26*d*n1*n2*n3 + 152*n2^2*n3 - 50*d*n2^2*n3 + 8*n1*n2^2*n3 + 8*n2^3*n3 + 
      548*n3^2 - 378*d*n3^2 + 65*d^2*n3^2 + 52*n1*n3^2 - 18*d*n1*n3^2 + 
      216*n2*n3^2 - 74*d*n2*n3^2 + 12*n1*n2*n3^2 + 20*n2^2*n3^2 + 80*n3^3 - 
      28*d*n3^3 + 4*n1*n3^3 + 16*n2*n3^3 + 4*n3^4 + 360*n5 - 342*d*n5 + 
      107*d^2*n5 - 11*d^3*n5 + 24*n1*n5 - 14*d*n1*n5 + 2*d^2*n1*n5 + 
      192*n2*n5 - 116*d*n2*n5 + 17*d^2*n2*n5 + 8*n1*n2*n5 - 2*d*n1*n2*n5 + 
      24*n2^2*n5 - 6*d*n2^2*n5 + 348*n3*n5 - 228*d*n3*n5 + 37*d^2*n3*n5 + 
      20*n1*n3*n5 - 6*d*n1*n3*n5 + 136*n2*n3*n5 - 44*d*n2*n3*n5 + 
      4*n1*n2*n3*n5 + 12*n2^2*n3*n5 + 100*n3^2*n5 - 34*d*n3^2*n5 + 
      4*n1*n3^2*n5 + 20*n2*n3^2*n5 + 8*n3^3*n5 + 24*n5^2 - 14*d*n5^2 + 
      2*d^2*n5^2 + 8*n2*n5^2 - 2*d*n2*n5^2 + 20*n3*n5^2 - 6*d*n3*n5^2 + 
      4*n2*n3*n5^2 + 4*n3^2*n5^2)*j[p4, n1, -1 + n2, 1 + n3, 0, n5, 1, 1, 1, 
      0, 0, 1, 0, 1, 1])/(832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 
     64*d*n1 + 24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 
     62*d^3*n2 + 132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 
     448*d*n2^2 + 82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 
     44*d*n2^3 + 8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 
     31*d^3*n3 + 32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 
     490*d*n2*n3 + 92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((-96 + 104*d - 36*d^2 + 4*d^3 - 8*n1 + 6*d*n1 - d^2*n1 - 16*n2 + 
      12*d*n2 - 2*d^2*n2 - 64*n3 + 52*d*n3 - 10*d^2*n3 - 4*n1*n3 + 
      2*d*n1*n3 - 8*n2*n3 + 4*d*n2*n3 - 8*n3^2 + 4*d*n3^2 - 64*n5 + 40*d*n5 - 
      6*d^2*n5 - 4*n1*n5 + d*n1*n5 - 8*n2*n5 + 2*d*n2*n5 - 40*n3*n5 + 
      14*d*n3*n5 - 2*n1*n3*n5 - 4*n2*n3*n5 - 4*n3^2*n5 - 8*n5^2 + 2*d*n5^2 - 
      4*n3*n5^2)*j[p4, n1, -1 + n2, 1 + n3, 0, n5, 1, 1, 2, 0, 0, 0, 0, 1, 
      1])/(832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((16 - 20*d + 8*d^2 - d^3 + 8*n1 - 6*d*n1 + d^2*n1 + 8*n3 - 8*d*n3 + 
      2*d^2*n3 + 4*n1*n3 - 2*d*n1*n3 + 8*n5 - 6*d*n5 + d^2*n5 + 4*n1*n5 - 
      d*n1*n5 + 4*n3*n5 - 2*d*n3*n5 + 2*n1*n3*n5)*j[p4, n1, -1 + n2, 1 + n3, 
      0, n5, 1, 1, 2, 0, 0, 1, 0, 0, 1])/(832 - 1240*d + 684*d^2 - 166*d^3 + 
     15*d^4 + 56*n1 - 64*d*n1 + 24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 
     510*d^2*n2 - 62*d^3*n2 + 132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 
     608*n2^2 - 448*d*n2^2 + 82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 
     120*n2^3 - 44*d*n2^3 + 8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 
     250*d^2*n3 - 31*d^3*n3 + 32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 
     644*n2*n3 - 490*d*n2*n3 + 92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 
     208*n2^2*n3 - 78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 
     100*d*n3^2 + 20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 
     38*d*n2*n3^2 + 4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 
     4*n2*n3^3 + 504*n5 - 508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - 
     d^2*n1*n5 + 532*n2*n5 - 370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 
     8*d*n1*n2*n5 + 164*n2^2*n5 - 58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 
     340*n3*n5 - 232*d*n3*n5 + 39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 
     220*n2*n3*n5 - 78*d*n2*n3*n5 + 8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 
     68*n3^2*n5 - 24*d*n3^2*n5 + 2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 
     44*n5^2 - 26*d*n5^2 + 4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 
     44*n2*n5^2 - 14*d*n2*n5^2 - 2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 
     8*d*n3*n5^2 - 4*n1*n3*n5^2 + 12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((-240 + 242*d - 81*d^2 + 9*d^3 - 30*n1 + 19*d*n1 - 3*d^2*n1 - 200*n2 + 
      136*d*n2 - 23*d^2*n2 - 22*n1*n2 + 7*d*n1*n2 - 52*n2^2 + 18*d*n2^2 - 
      4*n1*n2^2 - 4*n2^3 - 162*n3 + 111*d*n3 - 19*d^2*n3 - 18*n1*n3 + 
      6*d*n1*n3 - 84*n2*n3 + 29*d*n2*n3 - 6*n1*n2*n3 - 10*n2^2*n3 - 32*n3^2 + 
      11*d*n3^2 - 2*n1*n3^2 - 8*n2*n3^2 - 2*n3^3 - 30*n5 + 19*d*n5 - 
      3*d^2*n5 + 3*n1*n5 - d*n1*n5 - 22*n2*n5 + 7*d*n2*n5 + n1*n2*n5 - 
      4*n2^2*n5 - 18*n3*n5 + 6*d*n3*n5 - 6*n2*n3*n5 - 2*n3^2*n5)*
     j[p4, n1, -1 + n2, 1 + n3, 0, n5, 1, 2, 1, 0, 0, 1, 0, 0, 1])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((112 - 94*d + 25*d^2 - 2*d^3 + 26*n1 - 15*d*n1 + 2*d^2*n1 - 40*n2 + 
      40*d*n2 - 9*d^2*n2 - 6*n1*n2 + 3*d*n1*n2 - 36*n2^2 + 14*d*n2^2 - 
      4*n1*n2^2 - 4*n2^3 + 118*n3 - 75*d*n3 + 12*d^2*n3 + 18*n1*n3 - 
      6*d*n1*n3 + 20*n2*n3 - 5*d*n2*n3 + 2*n1*n2*n3 - 2*n2^2*n3 + 28*n3^2 - 
      9*d*n3^2 + 2*n1*n3^2 + 4*n2*n3^2 + 2*n3^3 + 26*n5 - 15*d*n5 + 
      2*d^2*n5 + 7*n1*n5 - 2*d*n1*n5 - 6*n2*n5 + 3*d*n2*n5 + n1*n2*n5 - 
      4*n2^2*n5 + 18*n3*n5 - 6*d*n3*n5 + 2*n1*n3*n5 + 2*n2*n3*n5 + 2*n3^2*n5)*
     j[p4, n1, -1 + n2, 1 + n3, 0, n5, 2, 0, 1, 0, 0, 1, 0, 1, 1])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((-336 + 346*d - 117*d^2 + 13*d^3 - 38*n1 + 25*d*n1 - 4*d^2*n1 - 216*n2 + 
      148*d*n2 - 25*d^2*n2 - 22*n1*n2 + 7*d*n1*n2 - 52*n2^2 + 18*d*n2^2 - 
      4*n1*n2^2 - 4*n2^3 - 226*n3 + 163*d*n3 - 29*d^2*n3 - 22*n1*n3 + 
      8*d*n1*n3 - 92*n2*n3 + 33*d*n2*n3 - 6*n1*n2*n3 - 10*n2^2*n3 - 40*n3^2 + 
      15*d*n3^2 - 2*n1*n3^2 - 8*n2*n3^2 - 2*n3^3 - 94*n5 + 59*d*n5 - 
      9*d^2*n5 - n1*n5 - 30*n2*n5 + 9*d*n2*n5 + n1*n2*n5 - 4*n2^2*n5 - 
      58*n3*n5 + 20*d*n3*n5 - 2*n1*n3*n5 - 10*n2*n3*n5 - 6*n3^2*n5 - 8*n5^2 + 
      2*d*n5^2 - 4*n3*n5^2)*j[p4, n1, -1 + n2, 1 + n3, 0, n5, 2, 1, 0, 0, 0, 
      1, 0, 1, 1])/(832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 
     64*d*n1 + 24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 
     62*d^3*n2 + 132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 
     448*d*n2^2 + 82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 
     44*d*n2^3 + 8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 
     31*d^3*n3 + 32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 
     490*d*n2*n3 + 92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((112 - 94*d + 25*d^2 - 2*d^3 + 26*n1 - 15*d*n1 + 2*d^2*n1 - 40*n2 + 
      40*d*n2 - 9*d^2*n2 - 6*n1*n2 + 3*d*n1*n2 - 36*n2^2 + 14*d*n2^2 - 
      4*n1*n2^2 - 4*n2^3 + 118*n3 - 75*d*n3 + 12*d^2*n3 + 18*n1*n3 - 
      6*d*n1*n3 + 20*n2*n3 - 5*d*n2*n3 + 2*n1*n2*n3 - 2*n2^2*n3 + 28*n3^2 - 
      9*d*n3^2 + 2*n1*n3^2 + 4*n2*n3^2 + 2*n3^3 + 26*n5 - 15*d*n5 + 
      2*d^2*n5 + 7*n1*n5 - 2*d*n1*n5 - 6*n2*n5 + 3*d*n2*n5 + n1*n2*n5 - 
      4*n2^2*n5 + 18*n3*n5 - 6*d*n3*n5 + 2*n1*n3*n5 + 2*n2*n3*n5 + 2*n3^2*n5)*
     j[p4, n1, -1 + n2, 1 + n3, 0, n5, 2, 1, 1, 0, 0, 1, 0, 0, 1])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((112 - 94*d + 25*d^2 - 2*d^3 + 26*n1 - 15*d*n1 + 2*d^2*n1 - 40*n2 + 
      40*d*n2 - 9*d^2*n2 - 6*n1*n2 + 3*d*n1*n2 - 36*n2^2 + 14*d*n2^2 - 
      4*n1*n2^2 - 4*n2^3 + 118*n3 - 75*d*n3 + 12*d^2*n3 + 18*n1*n3 - 
      6*d*n1*n3 + 20*n2*n3 - 5*d*n2*n3 + 2*n1*n2*n3 - 2*n2^2*n3 + 28*n3^2 - 
      9*d*n3^2 + 2*n1*n3^2 + 4*n2*n3^2 + 2*n3^3 + 26*n5 - 15*d*n5 + 
      2*d^2*n5 + 7*n1*n5 - 2*d*n1*n5 - 6*n2*n5 + 3*d*n2*n5 + n1*n2*n5 - 
      4*n2^2*n5 + 18*n3*n5 - 6*d*n3*n5 + 2*n1*n3*n5 + 2*n2*n3*n5 + 2*n3^2*n5)*
     j[p4, n1, -1 + n2, 1 + n3, 0, n5, 2, 1, 1, 0, 0, 1, 0, 1, 0])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((-336*n5 + 316*d*n5 - 98*d^2*n5 + 10*d^3*n5 - 48*n1*n5 + 28*d*n1*n5 - 
      4*d^2*n1*n5 - 160*n2*n5 + 96*d*n2*n5 - 14*d^2*n2*n5 - 16*n1*n2*n5 + 
      4*d*n1*n2*n5 - 16*n2^2*n5 + 4*d*n2^2*n5 - 272*n3*n5 + 178*d*n3*n5 - 
      29*d^2*n3*n5 - 32*n1*n3*n5 + 10*d*n1*n3*n5 - 104*n2*n3*n5 + 
      34*d*n2*n3*n5 - 8*n1*n2*n3*n5 - 8*n2^2*n3*n5 - 60*n3^2*n5 + 
      20*d*n3^2*n5 - 4*n1*n3^2*n5 - 12*n2*n3^2*n5 - 4*n3^3*n5 - 48*n5^2 + 
      28*d*n5^2 - 4*d^2*n5^2 - 16*n2*n5^2 + 4*d*n2*n5^2 - 32*n3*n5^2 + 
      10*d*n3*n5^2 - 8*n2*n3*n5^2 - 4*n3^2*n5^2)*j[p4, n1, -1 + n2, 1 + n3, 
      0, 1 + n5, 1, 1, 1, 0, 0, 1, 0, 0, 1])/(832 - 1240*d + 684*d^2 - 
     166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 
     1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 132*n1*n2 - 98*d*n1*n2 + 
     18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 82*d^2*n2^2 + 60*n1*n2^2 - 
     22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 8*n1*n2^3 + 8*n2^4 + 568*n3 - 
     660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 32*n1*n3 - 26*d*n1*n3 + 
     5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 92*d^2*n2*n3 + 52*n1*n2*n3 - 
     20*d*n1*n2*n3 + 208*n2^2*n3 - 78*d*n2^2*n3 + 12*n1*n2^2*n3 + 
     20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 20*d^2*n3^2 + 4*n1*n3^2 - 
     2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 4*n1*n2*n3^2 + 16*n2^2*n3^2 + 
     8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 508*d*n5 + 170*d^2*n5 - 
     19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 370*d*n2*n5 + 
     64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 58*d*n2^2*n5 + 
     6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 39*d^2*n3*n5 + 
     8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 8*n1*n2*n3*n5 + 
     32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 2*n1*n3^2*n5 + 
     20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 4*d^2*n5^2 - 
     14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 2*n1*n2*n5^2 + 
     8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 12*n2*n3*n5^2 + 
     4*n3^2*n5^2) + ((336*n5 - 316*d*n5 + 98*d^2*n5 - 10*d^3*n5 + 48*n1*n5 - 
      28*d*n1*n5 + 4*d^2*n1*n5 + 160*n2*n5 - 96*d*n2*n5 + 14*d^2*n2*n5 + 
      16*n1*n2*n5 - 4*d*n1*n2*n5 + 16*n2^2*n5 - 4*d*n2^2*n5 + 272*n3*n5 - 
      178*d*n3*n5 + 29*d^2*n3*n5 + 32*n1*n3*n5 - 10*d*n1*n3*n5 + 
      104*n2*n3*n5 - 34*d*n2*n3*n5 + 8*n1*n2*n3*n5 + 8*n2^2*n3*n5 + 
      60*n3^2*n5 - 20*d*n3^2*n5 + 4*n1*n3^2*n5 + 12*n2*n3^2*n5 + 4*n3^3*n5 + 
      48*n5^2 - 28*d*n5^2 + 4*d^2*n5^2 + 16*n2*n5^2 - 4*d*n2*n5^2 + 
      32*n3*n5^2 - 10*d*n3*n5^2 + 8*n2*n3*n5^2 + 4*n3^2*n5^2)*
     j[p4, n1, -1 + n2, 1 + n3, 0, 1 + n5, 1, 1, 1, 0, 0, 1, 0, 1, 0])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((30*d - 19*d^2 + 3*d^3 + 10*n1 - 3*d*n1 - 56*n2 + 52*d*n2 - 11*d^2*n2 - 
      6*n1*n2 + 3*d*n1*n2 - 36*n2^2 + 14*d*n2^2 - 4*n1*n2^2 - 4*n2^3 + 
      46*n3 + 15*d*n3 - 19*d^2*n3 + 3*d^3*n3 + 20*n1*n3 - 5*d*n1*n3 - 
      44*n2*n3 + 51*d*n2*n3 - 11*d^2*n2*n3 - 4*n1*n2*n3 + 3*d*n1*n2*n3 - 
      38*n2^2*n3 + 14*d*n2^2*n3 - 4*n1*n2^2*n3 - 4*n2^3*n3 + 66*n3^2 - 
      20*d*n3^2 + 12*n1*n3^2 - 2*d*n1*n3^2 + 16*n2*n3^2 - d*n2*n3^2 + 
      2*n1*n2*n3^2 - 2*n2^2*n3^2 + 22*n3^3 - 5*d*n3^3 + 2*n1*n3^3 + 
      4*n2*n3^3 + 2*n3^4 - 46*n5 + 31*d*n5 - 5*d^2*n5 - n1*n5 - 14*n2*n5 + 
      5*d*n2*n5 + n1*n2*n5 - 4*n2^2*n5 - 72*n3*n5 + 41*d*n3*n5 - 
      5*d^2*n3*n5 - 3*n1*n3*n5 - 16*n2*n3*n5 + 5*d*n2*n3*n5 + n1*n2*n3*n5 - 
      4*n2^2*n3*n5 - 28*n3^2*n5 + 10*d*n3^2*n5 - 2*n1*n3^2*n5 - 
      2*n2*n3^2*n5 - 2*n3^3*n5 - 8*n5^2 + 2*d*n5^2 - 12*n3*n5^2 + 
      2*d*n3*n5^2 - 4*n3^2*n5^2)*j[p4, n1, -1 + n2, 2 + n3, 0, n5, 1, 0, 1, 
      0, 0, 1, 0, 1, 1])/(832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 
     64*d*n1 + 24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 
     62*d^3*n2 + 132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 
     448*d*n2^2 + 82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 
     44*d*n2^3 + 8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 
     31*d^3*n3 + 32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 
     490*d*n2*n3 + 92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((-30*d + 19*d^2 - 3*d^3 - 10*n1 + 3*d*n1 + 56*n2 - 52*d*n2 + 11*d^2*n2 + 
      6*n1*n2 - 3*d*n1*n2 + 36*n2^2 - 14*d*n2^2 + 4*n1*n2^2 + 4*n2^3 - 
      46*n3 - 15*d*n3 + 19*d^2*n3 - 3*d^3*n3 - 20*n1*n3 + 5*d*n1*n3 + 
      44*n2*n3 - 51*d*n2*n3 + 11*d^2*n2*n3 + 4*n1*n2*n3 - 3*d*n1*n2*n3 + 
      38*n2^2*n3 - 14*d*n2^2*n3 + 4*n1*n2^2*n3 + 4*n2^3*n3 - 66*n3^2 + 
      20*d*n3^2 - 12*n1*n3^2 + 2*d*n1*n3^2 - 16*n2*n3^2 + d*n2*n3^2 - 
      2*n1*n2*n3^2 + 2*n2^2*n3^2 - 22*n3^3 + 5*d*n3^3 - 2*n1*n3^3 - 
      4*n2*n3^3 - 2*n3^4 + 46*n5 - 31*d*n5 + 5*d^2*n5 + n1*n5 + 14*n2*n5 - 
      5*d*n2*n5 - n1*n2*n5 + 4*n2^2*n5 + 72*n3*n5 - 41*d*n3*n5 + 
      5*d^2*n3*n5 + 3*n1*n3*n5 + 16*n2*n3*n5 - 5*d*n2*n3*n5 - n1*n2*n3*n5 + 
      4*n2^2*n3*n5 + 28*n3^2*n5 - 10*d*n3^2*n5 + 2*n1*n3^2*n5 + 
      2*n2*n3^2*n5 + 2*n3^3*n5 + 8*n5^2 - 2*d*n5^2 + 12*n3*n5^2 - 
      2*d*n3*n5^2 + 4*n3^2*n5^2)*j[p4, n1, -1 + n2, 2 + n3, 0, n5, 1, 1, 1, 
      0, 0, 1, 0, 0, 1])/(832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 
     64*d*n1 + 24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 
     62*d^3*n2 + 132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 
     448*d*n2^2 + 82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 
     44*d*n2^3 + 8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 
     31*d^3*n3 + 32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 
     490*d*n2*n3 + 92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((-96 + 104*d - 36*d^2 + 4*d^3 - 8*n1 + 6*d*n1 - d^2*n1 - 16*n2 + 
      12*d*n2 - 2*d^2*n2 - 160*n3 + 156*d*n3 - 46*d^2*n3 + 4*d^3*n3 - 
      12*n1*n3 + 8*d*n1*n3 - d^2*n1*n3 - 24*n2*n3 + 16*d*n2*n3 - 
      2*d^2*n2*n3 - 72*n3^2 + 56*d*n3^2 - 10*d^2*n3^2 - 4*n1*n3^2 + 
      2*d*n1*n3^2 - 8*n2*n3^2 + 4*d*n2*n3^2 - 8*n3^3 + 4*d*n3^3 - 64*n5 + 
      40*d*n5 - 6*d^2*n5 - 4*n1*n5 + d*n1*n5 - 8*n2*n5 + 2*d*n2*n5 - 
      104*n3*n5 + 54*d*n3*n5 - 6*d^2*n3*n5 - 6*n1*n3*n5 + d*n1*n3*n5 - 
      12*n2*n3*n5 + 2*d*n2*n3*n5 - 44*n3^2*n5 + 14*d*n3^2*n5 - 2*n1*n3^2*n5 - 
      4*n2*n3^2*n5 - 4*n3^3*n5 - 8*n5^2 + 2*d*n5^2 - 12*n3*n5^2 + 
      2*d*n3*n5^2 - 4*n3^2*n5^2)*j[p4, n1, -1 + n2, 2 + n3, 0, n5, 1, 1, 1, 
      0, 0, 1, 0, 1, 0])/(832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 
     64*d*n1 + 24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 
     62*d^3*n2 + 132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 
     448*d*n2^2 + 82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 
     44*d*n2^3 + 8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 
     31*d^3*n3 + 32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 
     490*d*n2*n3 + 92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((224 - 222*d + 73*d^2 - 8*d^3 + 22*n1 - 13*d*n1 + 2*d^2*n1 + 200*n2 - 
      136*d*n2 + 23*d^2*n2 + 22*n1*n2 - 7*d*n1*n2 + 52*n2^2 - 18*d*n2^2 + 
      4*n1*n2^2 + 4*n2^3 + 154*n3 - 103*d*n3 + 17*d^2*n3 + 14*n1*n3 - 
      4*d*n1*n3 + 84*n2*n3 - 29*d*n2*n3 + 6*n1*n2*n3 + 10*n2^2*n3 + 32*n3^2 - 
      11*d*n3^2 + 2*n1*n3^2 + 8*n2*n3^2 + 2*n3^3 + 22*n5 - 13*d*n5 + 
      2*d^2*n5 - 7*n1*n5 + 2*d*n1*n5 + 22*n2*n5 - 7*d*n2*n5 - n1*n2*n5 + 
      4*n2^2*n5 + 14*n3*n5 - 4*d*n3*n5 - 2*n1*n3*n5 + 6*n2*n3*n5 + 2*n3^2*n5)*
     j[p4, n1, n2, n3, 0, n5, 1, 1, 1, 0, 0, 1, 0, 0, 2])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((240 - 242*d + 81*d^2 - 9*d^3 + 30*n1 - 19*d*n1 + 3*d^2*n1 + 200*n2 - 
      136*d*n2 + 23*d^2*n2 + 22*n1*n2 - 7*d*n1*n2 + 52*n2^2 - 18*d*n2^2 + 
      4*n1*n2^2 + 4*n2^3 + 162*n3 - 111*d*n3 + 19*d^2*n3 + 18*n1*n3 - 
      6*d*n1*n3 + 84*n2*n3 - 29*d*n2*n3 + 6*n1*n2*n3 + 10*n2^2*n3 + 32*n3^2 - 
      11*d*n3^2 + 2*n1*n3^2 + 8*n2*n3^2 + 2*n3^3 + 30*n5 - 19*d*n5 + 
      3*d^2*n5 - 3*n1*n5 + d*n1*n5 + 22*n2*n5 - 7*d*n2*n5 - n1*n2*n5 + 
      4*n2^2*n5 + 18*n3*n5 - 6*d*n3*n5 + 6*n2*n3*n5 + 2*n3^2*n5)*
     j[p4, n1, n2, n3, 0, n5, 1, 2, 0, 0, 0, 1, 0, 1, 1])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((-112 + 94*d - 25*d^2 + 2*d^3 - 26*n1 + 15*d*n1 - 2*d^2*n1 + 40*n2 - 
      40*d*n2 + 9*d^2*n2 + 6*n1*n2 - 3*d*n1*n2 + 36*n2^2 - 14*d*n2^2 + 
      4*n1*n2^2 + 4*n2^3 - 118*n3 + 75*d*n3 - 12*d^2*n3 - 18*n1*n3 + 
      6*d*n1*n3 - 20*n2*n3 + 5*d*n2*n3 - 2*n1*n2*n3 + 2*n2^2*n3 - 28*n3^2 + 
      9*d*n3^2 - 2*n1*n3^2 - 4*n2*n3^2 - 2*n3^3 - 26*n5 + 15*d*n5 - 
      2*d^2*n5 - 7*n1*n5 + 2*d*n1*n5 + 6*n2*n5 - 3*d*n2*n5 - n1*n2*n5 + 
      4*n2^2*n5 - 18*n3*n5 + 6*d*n3*n5 - 2*n1*n3*n5 - 2*n2*n3*n5 - 2*n3^2*n5)*
     j[p4, n1, n2, n3, 0, n5, 2, 1, 0, 0, 0, 1, 0, 1, 1])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((-224 + 222*d - 73*d^2 + 8*d^3 - 22*n1 + 13*d*n1 - 2*d^2*n1 - 200*n2 + 
      136*d*n2 - 23*d^2*n2 - 22*n1*n2 + 7*d*n1*n2 - 52*n2^2 + 18*d*n2^2 - 
      4*n1*n2^2 - 4*n2^3 - 154*n3 + 103*d*n3 - 17*d^2*n3 - 14*n1*n3 + 
      4*d*n1*n3 - 84*n2*n3 + 29*d*n2*n3 - 6*n1*n2*n3 - 10*n2^2*n3 - 32*n3^2 + 
      11*d*n3^2 - 2*n1*n3^2 - 8*n2*n3^2 - 2*n3^3 - 22*n5 + 13*d*n5 - 
      2*d^2*n5 + 7*n1*n5 - 2*d*n1*n5 - 22*n2*n5 + 7*d*n2*n5 + n1*n2*n5 - 
      4*n2^2*n5 - 14*n3*n5 + 4*d*n3*n5 + 2*n1*n3*n5 - 6*n2*n3*n5 - 2*n3^2*n5)*
     j[p4, n1, n2, 1 + n3, -1, n5, 1, 1, 1, 0, 0, 1, 0, 0, 2])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((-96 + 104*d - 36*d^2 + 4*d^3 - 8*n1 + 6*d*n1 - d^2*n1 - 16*n2 + 
      12*d*n2 - 2*d^2*n2 - 64*n3 + 52*d*n3 - 10*d^2*n3 - 4*n1*n3 + 
      2*d*n1*n3 - 8*n2*n3 + 4*d*n2*n3 - 8*n3^2 + 4*d*n3^2 - 64*n5 + 40*d*n5 - 
      6*d^2*n5 - 4*n1*n5 + d*n1*n5 - 8*n2*n5 + 2*d*n2*n5 - 40*n3*n5 + 
      14*d*n3*n5 - 2*n1*n3*n5 - 4*n2*n3*n5 - 4*n3^2*n5 - 8*n5^2 + 2*d*n5^2 - 
      4*n3*n5^2)*j[p4, n1, n2, 1 + n3, -1, n5, 1, 1, 2, 0, 0, 0, 0, 1, 1])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((16 - 20*d + 8*d^2 - d^3 + 8*n1 - 6*d*n1 + d^2*n1 + 8*n3 - 8*d*n3 + 
      2*d^2*n3 + 4*n1*n3 - 2*d*n1*n3 + 8*n5 - 6*d*n5 + d^2*n5 + 4*n1*n5 - 
      d*n1*n5 + 4*n3*n5 - 2*d*n3*n5 + 2*n1*n3*n5)*j[p4, n1, n2, 1 + n3, -1, 
      n5, 1, 1, 2, 0, 0, 1, 0, 0, 1])/(832 - 1240*d + 684*d^2 - 166*d^3 + 
     15*d^4 + 56*n1 - 64*d*n1 + 24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 
     510*d^2*n2 - 62*d^3*n2 + 132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 
     608*n2^2 - 448*d*n2^2 + 82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 
     120*n2^3 - 44*d*n2^3 + 8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 
     250*d^2*n3 - 31*d^3*n3 + 32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 
     644*n2*n3 - 490*d*n2*n3 + 92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 
     208*n2^2*n3 - 78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 
     100*d*n3^2 + 20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 
     38*d*n2*n3^2 + 4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 
     4*n2*n3^3 + 504*n5 - 508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - 
     d^2*n1*n5 + 532*n2*n5 - 370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 
     8*d*n1*n2*n5 + 164*n2^2*n5 - 58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 
     340*n3*n5 - 232*d*n3*n5 + 39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 
     220*n2*n3*n5 - 78*d*n2*n3*n5 + 8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 
     68*n3^2*n5 - 24*d*n3^2*n5 + 2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 
     44*n5^2 - 26*d*n5^2 + 4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 
     44*n2*n5^2 - 14*d*n2*n5^2 - 2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 
     8*d*n3*n5^2 - 4*n1*n3*n5^2 + 12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((96 - 104*d + 36*d^2 - 4*d^3 + 8*n1 - 6*d*n1 + d^2*n1 + 16*n2 - 12*d*n2 + 
      2*d^2*n2 + 64*n3 - 52*d*n3 + 10*d^2*n3 + 4*n1*n3 - 2*d*n1*n3 + 
      8*n2*n3 - 4*d*n2*n3 + 8*n3^2 - 4*d*n3^2 + 64*n5 - 40*d*n5 + 6*d^2*n5 + 
      4*n1*n5 - d*n1*n5 + 8*n2*n5 - 2*d*n2*n5 + 40*n3*n5 - 14*d*n3*n5 + 
      2*n1*n3*n5 + 4*n2*n3*n5 + 4*n3^2*n5 + 8*n5^2 - 2*d*n5^2 + 4*n3*n5^2)*
     j[p4, n1, n2, 1 + n3, -1, n5, 1, 2, 0, 0, 0, 1, 0, 1, 1])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((-96 + 104*d - 36*d^2 + 4*d^3 - 8*n1 + 6*d*n1 - d^2*n1 - 16*n2 + 
      12*d*n2 - 2*d^2*n2 - 64*n3 + 52*d*n3 - 10*d^2*n3 - 4*n1*n3 + 
      2*d*n1*n3 - 8*n2*n3 + 4*d*n2*n3 - 8*n3^2 + 4*d*n3^2 - 64*n5 + 40*d*n5 - 
      6*d^2*n5 - 4*n1*n5 + d*n1*n5 - 8*n2*n5 + 2*d*n2*n5 - 40*n3*n5 + 
      14*d*n3*n5 - 2*n1*n3*n5 - 4*n2*n3*n5 - 4*n3^2*n5 - 8*n5^2 + 2*d*n5^2 - 
      4*n3*n5^2)*j[p4, n1, n2, 1 + n3, -1, n5, 1, 2, 1, 0, 0, 0, 0, 1, 1])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((-16 + 20*d - 8*d^2 + d^3 - 8*n1 + 6*d*n1 - d^2*n1 - 8*n3 + 8*d*n3 - 
      2*d^2*n3 - 4*n1*n3 + 2*d*n1*n3 - 8*n5 + 6*d*n5 - d^2*n5 - 4*n1*n5 + 
      d*n1*n5 - 4*n3*n5 + 2*d*n3*n5 - 2*n1*n3*n5)*j[p4, n1, n2, 1 + n3, -1, 
      n5, 1, 2, 1, 0, 0, 1, 0, 0, 1])/(832 - 1240*d + 684*d^2 - 166*d^3 + 
     15*d^4 + 56*n1 - 64*d*n1 + 24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 
     510*d^2*n2 - 62*d^3*n2 + 132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 
     608*n2^2 - 448*d*n2^2 + 82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 
     120*n2^3 - 44*d*n2^3 + 8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 
     250*d^2*n3 - 31*d^3*n3 + 32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 
     644*n2*n3 - 490*d*n2*n3 + 92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 
     208*n2^2*n3 - 78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 
     100*d*n3^2 + 20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 
     38*d*n2*n3^2 + 4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 
     4*n2*n3^3 + 504*n5 - 508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - 
     d^2*n1*n5 + 532*n2*n5 - 370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 
     8*d*n1*n2*n5 + 164*n2^2*n5 - 58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 
     340*n3*n5 - 232*d*n3*n5 + 39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 
     220*n2*n3*n5 - 78*d*n2*n3*n5 + 8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 
     68*n3^2*n5 - 24*d*n3^2*n5 + 2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 
     44*n5^2 - 26*d*n5^2 + 4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 
     44*n2*n5^2 - 14*d*n2*n5^2 - 2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 
     8*d*n3*n5^2 - 4*n1*n3*n5^2 + 12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((112 - 94*d + 25*d^2 - 2*d^3 + 26*n1 - 15*d*n1 + 2*d^2*n1 - 40*n2 + 
      40*d*n2 - 9*d^2*n2 - 6*n1*n2 + 3*d*n1*n2 - 36*n2^2 + 14*d*n2^2 - 
      4*n1*n2^2 - 4*n2^3 + 118*n3 - 75*d*n3 + 12*d^2*n3 + 18*n1*n3 - 
      6*d*n1*n3 + 20*n2*n3 - 5*d*n2*n3 + 2*n1*n2*n3 - 2*n2^2*n3 + 28*n3^2 - 
      9*d*n3^2 + 2*n1*n3^2 + 4*n2*n3^2 + 2*n3^3 + 26*n5 - 15*d*n5 + 
      2*d^2*n5 + 7*n1*n5 - 2*d*n1*n5 - 6*n2*n5 + 3*d*n2*n5 + n1*n2*n5 - 
      4*n2^2*n5 + 18*n3*n5 - 6*d*n3*n5 + 2*n1*n3*n5 + 2*n2*n3*n5 + 2*n3^2*n5)*
     j[p4, n1, n2, 1 + n3, -1, n5, 2, 0, 1, 0, 0, 1, 0, 1, 1])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((112 - 94*d + 25*d^2 - 2*d^3 + 26*n1 - 15*d*n1 + 2*d^2*n1 - 40*n2 + 
      40*d*n2 - 9*d^2*n2 - 6*n1*n2 + 3*d*n1*n2 - 36*n2^2 + 14*d*n2^2 - 
      4*n1*n2^2 - 4*n2^3 + 118*n3 - 75*d*n3 + 12*d^2*n3 + 18*n1*n3 - 
      6*d*n1*n3 + 20*n2*n3 - 5*d*n2*n3 + 2*n1*n2*n3 - 2*n2^2*n3 + 28*n3^2 - 
      9*d*n3^2 + 2*n1*n3^2 + 4*n2*n3^2 + 2*n3^3 + 26*n5 - 15*d*n5 + 
      2*d^2*n5 + 7*n1*n5 - 2*d*n1*n5 - 6*n2*n5 + 3*d*n2*n5 + n1*n2*n5 - 
      4*n2^2*n5 + 18*n3*n5 - 6*d*n3*n5 + 2*n1*n3*n5 + 2*n2*n3*n5 + 2*n3^2*n5)*
     j[p4, n1, n2, 1 + n3, -1, n5, 2, 1, 0, 0, 0, 1, 0, 1, 1])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((112 - 94*d + 25*d^2 - 2*d^3 + 26*n1 - 15*d*n1 + 2*d^2*n1 - 40*n2 + 
      40*d*n2 - 9*d^2*n2 - 6*n1*n2 + 3*d*n1*n2 - 36*n2^2 + 14*d*n2^2 - 
      4*n1*n2^2 - 4*n2^3 + 118*n3 - 75*d*n3 + 12*d^2*n3 + 18*n1*n3 - 
      6*d*n1*n3 + 20*n2*n3 - 5*d*n2*n3 + 2*n1*n2*n3 - 2*n2^2*n3 + 28*n3^2 - 
      9*d*n3^2 + 2*n1*n3^2 + 4*n2*n3^2 + 2*n3^3 + 26*n5 - 15*d*n5 + 
      2*d^2*n5 + 7*n1*n5 - 2*d*n1*n5 - 6*n2*n5 + 3*d*n2*n5 + n1*n2*n5 - 
      4*n2^2*n5 + 18*n3*n5 - 6*d*n3*n5 + 2*n1*n3*n5 + 2*n2*n3*n5 + 2*n3^2*n5)*
     j[p4, n1, n2, 1 + n3, -1, n5, 2, 1, 1, 0, 0, 1, 0, 0, 1])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((112 - 94*d + 25*d^2 - 2*d^3 + 26*n1 - 15*d*n1 + 2*d^2*n1 - 40*n2 + 
      40*d*n2 - 9*d^2*n2 - 6*n1*n2 + 3*d*n1*n2 - 36*n2^2 + 14*d*n2^2 - 
      4*n1*n2^2 - 4*n2^3 + 118*n3 - 75*d*n3 + 12*d^2*n3 + 18*n1*n3 - 
      6*d*n1*n3 + 20*n2*n3 - 5*d*n2*n3 + 2*n1*n2*n3 - 2*n2^2*n3 + 28*n3^2 - 
      9*d*n3^2 + 2*n1*n3^2 + 4*n2*n3^2 + 2*n3^3 + 26*n5 - 15*d*n5 + 
      2*d^2*n5 + 7*n1*n5 - 2*d*n1*n5 - 6*n2*n5 + 3*d*n2*n5 + n1*n2*n5 - 
      4*n2^2*n5 + 18*n3*n5 - 6*d*n3*n5 + 2*n1*n3*n5 + 2*n2*n3*n5 + 2*n3^2*n5)*
     j[p4, n1, n2, 1 + n3, -1, n5, 2, 1, 1, 0, 0, 1, 0, 1, 0])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((-112*n5 + 94*d*n5 - 25*d^2*n5 + 2*d^3*n5 - 26*n1*n5 + 15*d*n1*n5 - 
      2*d^2*n1*n5 + 40*n2*n5 - 40*d*n2*n5 + 9*d^2*n2*n5 + 6*n1*n2*n5 - 
      3*d*n1*n2*n5 + 36*n2^2*n5 - 14*d*n2^2*n5 + 4*n1*n2^2*n5 + 4*n2^3*n5 - 
      118*n3*n5 + 75*d*n3*n5 - 12*d^2*n3*n5 - 18*n1*n3*n5 + 6*d*n1*n3*n5 - 
      20*n2*n3*n5 + 5*d*n2*n3*n5 - 2*n1*n2*n3*n5 + 2*n2^2*n3*n5 - 
      28*n3^2*n5 + 9*d*n3^2*n5 - 2*n1*n3^2*n5 - 4*n2*n3^2*n5 - 2*n3^3*n5 - 
      26*n5^2 + 15*d*n5^2 - 2*d^2*n5^2 - 7*n1*n5^2 + 2*d*n1*n5^2 + 
      6*n2*n5^2 - 3*d*n2*n5^2 - n1*n2*n5^2 + 4*n2^2*n5^2 - 18*n3*n5^2 + 
      6*d*n3*n5^2 - 2*n1*n3*n5^2 - 2*n2*n3*n5^2 - 2*n3^2*n5^2)*
     j[p4, n1, n2, 1 + n3, -1, 1 + n5, 1, 1, 1, 0, 0, 1, 0, 0, 1])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((112*n5 - 94*d*n5 + 25*d^2*n5 - 2*d^3*n5 + 26*n1*n5 - 15*d*n1*n5 + 
      2*d^2*n1*n5 - 40*n2*n5 + 40*d*n2*n5 - 9*d^2*n2*n5 - 6*n1*n2*n5 + 
      3*d*n1*n2*n5 - 36*n2^2*n5 + 14*d*n2^2*n5 - 4*n1*n2^2*n5 - 4*n2^3*n5 + 
      118*n3*n5 - 75*d*n3*n5 + 12*d^2*n3*n5 + 18*n1*n3*n5 - 6*d*n1*n3*n5 + 
      20*n2*n3*n5 - 5*d*n2*n3*n5 + 2*n1*n2*n3*n5 - 2*n2^2*n3*n5 + 
      28*n3^2*n5 - 9*d*n3^2*n5 + 2*n1*n3^2*n5 + 4*n2*n3^2*n5 + 2*n3^3*n5 + 
      26*n5^2 - 15*d*n5^2 + 2*d^2*n5^2 + 7*n1*n5^2 - 2*d*n1*n5^2 - 
      6*n2*n5^2 + 3*d*n2*n5^2 + n1*n2*n5^2 - 4*n2^2*n5^2 + 18*n3*n5^2 - 
      6*d*n3*n5^2 + 2*n1*n3*n5^2 + 2*n2*n3*n5^2 + 2*n3^2*n5^2)*
     j[p4, n1, n2, 1 + n3, -1, 1 + n5, 1, 1, 1, 0, 0, 1, 0, 1, 0])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((-304 + 428*d - 220*d^2 + 49*d^3 - 4*d^4 + 80*n1 - 92*d*n1 + 34*d^2*n1 - 
      4*d^3*n1 + 16*n1^2 - 12*d*n1^2 + 2*d^2*n1^2 - 160*n2 + 176*d*n2 - 
      62*d^2*n2 + 7*d^3*n2 - 16*n2^2 + 12*d*n2^2 - 2*d^2*n2^2 - 312*n3 + 
      352*d*n3 - 128*d^2*n3 + 15*d^3*n3 + 40*n1*n3 - 36*d*n1*n3 + 
      8*d^2*n1*n3 + 8*n1^2*n3 - 4*d*n1^2*n3 - 112*n2*n3 + 92*d*n2*n3 - 
      18*d^2*n2*n3 - 8*n2^2*n3 + 4*d*n2^2*n3 - 96*n3^2 + 80*d*n3^2 - 
      16*d^2*n3^2 - 16*n2*n3^2 + 8*d*n2*n3^2 - 8*n3^3 + 4*d*n3^3 - 184*n5 + 
      170*d*n5 - 51*d^2*n5 + 5*d^3*n5 + 64*n1*n5 - 44*d*n1*n5 + 7*d^2*n1*n5 + 
      8*n1^2*n5 - 2*d*n1^2*n5 - 96*n2*n5 + 60*d*n2*n5 - 9*d^2*n2*n5 - 
      8*n2^2*n5 + 2*d*n2^2*n5 - 188*n3*n5 + 122*d*n3*n5 - 19*d^2*n3*n5 + 
      32*n1*n3*n5 - 14*d*n1*n3*n5 + 4*n1^2*n3*n5 - 64*n2*n3*n5 + 
      22*d*n2*n3*n5 - 4*n2^2*n3*n5 - 56*n3^2*n5 + 20*d*n3^2*n5 - 
      8*n2*n3^2*n5 - 4*n3^3*n5 - 16*n5^2 + 8*d*n5^2 - d^2*n5^2 + 12*n1*n5^2 - 
      3*d*n1*n5^2 - 8*n2*n5^2 + 2*d*n2*n5^2 - 16*n3*n5^2 + 4*d*n3*n5^2 + 
      6*n1*n3*n5^2 - 4*n2*n3*n5^2 - 4*n3^2*n5^2)*j[p4, n1, n2, 1 + n3, 0, 
      -1 + n5, 1, 1, 1, 0, 0, 1, 0, 1, 1])/(832 - 1240*d + 684*d^2 - 
     166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 
     1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 132*n1*n2 - 98*d*n1*n2 + 
     18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 82*d^2*n2^2 + 60*n1*n2^2 - 
     22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 8*n1*n2^3 + 8*n2^4 + 568*n3 - 
     660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 32*n1*n3 - 26*d*n1*n3 + 
     5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 92*d^2*n2*n3 + 52*n1*n2*n3 - 
     20*d*n1*n2*n3 + 208*n2^2*n3 - 78*d*n2^2*n3 + 12*n1*n2^2*n3 + 
     20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 20*d^2*n3^2 + 4*n1*n3^2 - 
     2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 4*n1*n2*n3^2 + 16*n2^2*n3^2 + 
     8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 508*d*n5 + 170*d^2*n5 - 
     19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 370*d*n2*n5 + 
     64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 58*d*n2^2*n5 + 
     6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 39*d^2*n3*n5 + 
     8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 8*n1*n2*n3*n5 + 
     32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 2*n1*n3^2*n5 + 
     20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 4*d^2*n5^2 - 
     14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 2*n1*n2*n5^2 + 
     8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 12*n2*n3*n5^2 + 
     4*n3^2*n5^2) + ((96 - 104*d + 36*d^2 - 4*d^3 + 8*n1 - 6*d*n1 + d^2*n1 + 
      16*n2 - 12*d*n2 + 2*d^2*n2 + 64*n3 - 52*d*n3 + 10*d^2*n3 + 4*n1*n3 - 
      2*d*n1*n3 + 8*n2*n3 - 4*d*n2*n3 + 8*n3^2 - 4*d*n3^2 + 64*n5 - 40*d*n5 + 
      6*d^2*n5 + 4*n1*n5 - d*n1*n5 + 8*n2*n5 - 2*d*n2*n5 + 40*n3*n5 - 
      14*d*n3*n5 + 2*n1*n3*n5 + 4*n2*n3*n5 + 4*n3^2*n5 + 8*n5^2 - 2*d*n5^2 + 
      4*n3*n5^2)*j[p4, n1, n2, 1 + n3, 0, -1 + n5, 1, 1, 1, 0, 0, 1, 0, 1, 
      2])/(832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((-80 + 84*d - 28*d^2 + 3*d^3 - 16*n2 + 12*d*n2 - 2*d^2*n2 - 56*n3 + 
      44*d*n3 - 8*d^2*n3 - 8*n2*n3 + 4*d*n2*n3 - 8*n3^2 + 4*d*n3^2 - 56*n5 + 
      34*d*n5 - 5*d^2*n5 - 8*n2*n5 + 2*d*n2*n5 - 36*n3*n5 + 12*d*n3*n5 - 
      4*n2*n3*n5 - 4*n3^2*n5 - 8*n5^2 + 2*d*n5^2 - 4*n3*n5^2)*
     j[p4, n1, n2, 1 + n3, 0, -1 + n5, 1, 1, 1, 0, 0, 1, 0, 2, 1])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((-96 + 104*d - 36*d^2 + 4*d^3 - 8*n1 + 6*d*n1 - d^2*n1 - 16*n2 + 
      12*d*n2 - 2*d^2*n2 - 64*n3 + 52*d*n3 - 10*d^2*n3 - 4*n1*n3 + 
      2*d*n1*n3 - 8*n2*n3 + 4*d*n2*n3 - 8*n3^2 + 4*d*n3^2 - 64*n5 + 40*d*n5 - 
      6*d^2*n5 - 4*n1*n5 + d*n1*n5 - 8*n2*n5 + 2*d*n2*n5 - 40*n3*n5 + 
      14*d*n3*n5 - 2*n1*n3*n5 - 4*n2*n3*n5 - 4*n3^2*n5 - 8*n5^2 + 2*d*n5^2 - 
      4*n3*n5^2)*j[p4, n1, n2, 1 + n3, 0, -1 + n5, 1, 2, 0, 0, 0, 1, 0, 1, 
      1])/(832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((96 - 104*d + 36*d^2 - 4*d^3 + 8*n1 - 6*d*n1 + d^2*n1 + 16*n2 - 12*d*n2 + 
      2*d^2*n2 + 64*n3 - 52*d*n3 + 10*d^2*n3 + 4*n1*n3 - 2*d*n1*n3 + 
      8*n2*n3 - 4*d*n2*n3 + 8*n3^2 - 4*d*n3^2 + 64*n5 - 40*d*n5 + 6*d^2*n5 + 
      4*n1*n5 - d*n1*n5 + 8*n2*n5 - 2*d*n2*n5 + 40*n3*n5 - 14*d*n3*n5 + 
      2*n1*n3*n5 + 4*n2*n3*n5 + 4*n3^2*n5 + 8*n5^2 - 2*d*n5^2 + 4*n3*n5^2)*
     j[p4, n1, n2, 1 + n3, 0, -1 + n5, 1, 2, 1, 0, 0, 0, 0, 1, 1])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((16 - 20*d + 8*d^2 - d^3 + 8*n1 - 6*d*n1 + d^2*n1 + 8*n3 - 8*d*n3 + 
      2*d^2*n3 + 4*n1*n3 - 2*d*n1*n3 + 8*n5 - 6*d*n5 + d^2*n5 + 4*n1*n5 - 
      d*n1*n5 + 4*n3*n5 - 2*d*n3*n5 + 2*n1*n3*n5)*j[p4, n1, n2, 1 + n3, 0, 
      -1 + n5, 1, 2, 1, 0, 0, 1, 0, 0, 1])/(832 - 1240*d + 684*d^2 - 
     166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 
     1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 132*n1*n2 - 98*d*n1*n2 + 
     18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 82*d^2*n2^2 + 60*n1*n2^2 - 
     22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 8*n1*n2^3 + 8*n2^4 + 568*n3 - 
     660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 32*n1*n3 - 26*d*n1*n3 + 
     5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 92*d^2*n2*n3 + 52*n1*n2*n3 - 
     20*d*n1*n2*n3 + 208*n2^2*n3 - 78*d*n2^2*n3 + 12*n1*n2^2*n3 + 
     20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 20*d^2*n3^2 + 4*n1*n3^2 - 
     2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 4*n1*n2*n3^2 + 16*n2^2*n3^2 + 
     8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 508*d*n5 + 170*d^2*n5 - 
     19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 370*d*n2*n5 + 
     64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 58*d*n2^2*n5 + 
     6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 39*d^2*n3*n5 + 
     8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 8*n1*n2*n3*n5 + 
     32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 2*n1*n3^2*n5 + 
     20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 4*d^2*n5^2 - 
     14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 2*n1*n2*n5^2 + 
     8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 12*n2*n3*n5^2 + 
     4*n3^2*n5^2) + ((-112 + 94*d - 25*d^2 + 2*d^3 - 26*n1 + 15*d*n1 - 
      2*d^2*n1 + 40*n2 - 40*d*n2 + 9*d^2*n2 + 6*n1*n2 - 3*d*n1*n2 + 36*n2^2 - 
      14*d*n2^2 + 4*n1*n2^2 + 4*n2^3 - 118*n3 + 75*d*n3 - 12*d^2*n3 - 
      18*n1*n3 + 6*d*n1*n3 - 20*n2*n3 + 5*d*n2*n3 - 2*n1*n2*n3 + 2*n2^2*n3 - 
      28*n3^2 + 9*d*n3^2 - 2*n1*n3^2 - 4*n2*n3^2 - 2*n3^3 - 26*n5 + 15*d*n5 - 
      2*d^2*n5 - 7*n1*n5 + 2*d*n1*n5 + 6*n2*n5 - 3*d*n2*n5 - n1*n2*n5 + 
      4*n2^2*n5 - 18*n3*n5 + 6*d*n3*n5 - 2*n1*n3*n5 - 2*n2*n3*n5 - 2*n3^2*n5)*
     j[p4, n1, n2, 1 + n3, 0, -1 + n5, 2, 0, 1, 0, 0, 1, 0, 1, 1])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((224 - 252*d + 92*d^2 - 11*d^3 + 12*n1 - 10*d*n1 + 2*d^2*n1 + 256*n2 - 
      188*d*n2 + 34*d^2*n2 + 28*n1*n2 - 10*d*n1*n2 + 88*n2^2 - 32*d*n2^2 + 
      8*n1*n2^2 + 8*n2^3 + 108*n3 - 88*d*n3 + 17*d^2*n3 + 4*n1*n3 - 
      2*d*n1*n3 + 72*n2*n3 - 28*d*n2*n3 + 4*n1*n2*n3 + 12*n2^2*n3 + 12*n3^2 - 
      6*d*n3^2 + 4*n2*n3^2 + 68*n5 - 44*d*n5 + 7*d^2*n5 - 6*n1*n5 + 
      2*d*n1*n5 + 36*n2*n5 - 12*d*n2*n5 - 2*n1*n2*n5 + 8*n2^2*n5 + 40*n3*n5 - 
      14*d*n3*n5 + 8*n2*n3*n5 + 4*n3^2*n5 + 8*n5^2 - 2*d*n5^2 + 4*n3*n5^2)*
     j[p4, n1, n2, 1 + n3, 0, -1 + n5, 2, 1, 0, 0, 0, 1, 0, 1, 1])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((-112 + 94*d - 25*d^2 + 2*d^3 - 26*n1 + 15*d*n1 - 2*d^2*n1 + 40*n2 - 
      40*d*n2 + 9*d^2*n2 + 6*n1*n2 - 3*d*n1*n2 + 36*n2^2 - 14*d*n2^2 + 
      4*n1*n2^2 + 4*n2^3 - 118*n3 + 75*d*n3 - 12*d^2*n3 - 18*n1*n3 + 
      6*d*n1*n3 - 20*n2*n3 + 5*d*n2*n3 - 2*n1*n2*n3 + 2*n2^2*n3 - 28*n3^2 + 
      9*d*n3^2 - 2*n1*n3^2 - 4*n2*n3^2 - 2*n3^3 - 26*n5 + 15*d*n5 - 
      2*d^2*n5 - 7*n1*n5 + 2*d*n1*n5 + 6*n2*n5 - 3*d*n2*n5 - n1*n2*n5 + 
      4*n2^2*n5 - 18*n3*n5 + 6*d*n3*n5 - 2*n1*n3*n5 - 2*n2*n3*n5 - 2*n3^2*n5)*
     j[p4, n1, n2, 1 + n3, 0, -1 + n5, 2, 1, 1, 0, 0, 1, 0, 0, 1])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((-112 + 94*d - 25*d^2 + 2*d^3 - 26*n1 + 15*d*n1 - 2*d^2*n1 + 40*n2 - 
      40*d*n2 + 9*d^2*n2 + 6*n1*n2 - 3*d*n1*n2 + 36*n2^2 - 14*d*n2^2 + 
      4*n1*n2^2 + 4*n2^3 - 118*n3 + 75*d*n3 - 12*d^2*n3 - 18*n1*n3 + 
      6*d*n1*n3 - 20*n2*n3 + 5*d*n2*n3 - 2*n1*n2*n3 + 2*n2^2*n3 - 28*n3^2 + 
      9*d*n3^2 - 2*n1*n3^2 - 4*n2*n3^2 - 2*n3^3 - 26*n5 + 15*d*n5 - 
      2*d^2*n5 - 7*n1*n5 + 2*d*n1*n5 + 6*n2*n5 - 3*d*n2*n5 - n1*n2*n5 + 
      4*n2^2*n5 - 18*n3*n5 + 6*d*n3*n5 - 2*n1*n3*n5 - 2*n2*n3*n5 - 2*n3^2*n5)*
     j[p4, n1, n2, 1 + n3, 0, -1 + n5, 2, 1, 1, 0, 0, 1, 0, 1, 0])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((16 - 20*d + 8*d^2 - d^3 + 8*n1 - 6*d*n1 + d^2*n1 + 96*n2 - 104*d*n2 + 
      36*d^2*n2 - 4*d^3*n2 + 8*n1*n2 - 6*d*n1*n2 + d^2*n1*n2 + 16*n2^2 - 
      12*d*n2^2 + 2*d^2*n2^2 + 8*n3 - 8*d*n3 + 2*d^2*n3 + 4*n1*n3 - 
      2*d*n1*n3 + 64*n2*n3 - 52*d*n2*n3 + 10*d^2*n2*n3 + 4*n1*n2*n3 - 
      2*d*n1*n2*n3 + 8*n2^2*n3 - 4*d*n2^2*n3 + 8*n2*n3^2 - 4*d*n2*n3^2 + 
      8*n5 - 6*d*n5 + d^2*n5 + 4*n1*n5 - d*n1*n5 + 64*n2*n5 - 40*d*n2*n5 + 
      6*d^2*n2*n5 + 4*n1*n2*n5 - d*n1*n2*n5 + 8*n2^2*n5 - 2*d*n2^2*n5 + 
      4*n3*n5 - 2*d*n3*n5 + 2*n1*n3*n5 + 40*n2*n3*n5 - 14*d*n2*n3*n5 + 
      2*n1*n2*n3*n5 + 4*n2^2*n3*n5 + 4*n2*n3^2*n5 + 8*n2*n5^2 - 2*d*n2*n5^2 + 
      4*n2*n3*n5^2)*j[p4, n1, n2, 1 + n3, 0, n5, 0, 1, 1, 0, 0, 1, 0, 1, 1])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((-16 + 20*d - 8*d^2 + d^3 - 8*n1 + 6*d*n1 - d^2*n1 - 8*n3 + 8*d*n3 - 
      2*d^2*n3 - 4*n1*n3 + 2*d*n1*n3 - 8*n5 + 6*d*n5 - d^2*n5 - 4*n1*n5 + 
      d*n1*n5 - 4*n3*n5 + 2*d*n3*n5 - 2*n1*n3*n5)*j[p4, n1, n2, 1 + n3, 0, 
      n5, 0, 1, 1, 0, 0, 2, -1, 1, 1])/(832 - 1240*d + 684*d^2 - 166*d^3 + 
     15*d^4 + 56*n1 - 64*d*n1 + 24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 
     510*d^2*n2 - 62*d^3*n2 + 132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 
     608*n2^2 - 448*d*n2^2 + 82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 
     120*n2^3 - 44*d*n2^3 + 8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 
     250*d^2*n3 - 31*d^3*n3 + 32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 
     644*n2*n3 - 490*d*n2*n3 + 92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 
     208*n2^2*n3 - 78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 
     100*d*n3^2 + 20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 
     38*d*n2*n3^2 + 4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 
     4*n2*n3^3 + 504*n5 - 508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - 
     d^2*n1*n5 + 532*n2*n5 - 370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 
     8*d*n1*n2*n5 + 164*n2^2*n5 - 58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 
     340*n3*n5 - 232*d*n3*n5 + 39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 
     220*n2*n3*n5 - 78*d*n2*n3*n5 + 8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 
     68*n3^2*n5 - 24*d*n3^2*n5 + 2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 
     44*n5^2 - 26*d*n5^2 + 4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 
     44*n2*n5^2 - 14*d*n2*n5^2 - 2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 
     8*d*n3*n5^2 - 4*n1*n3*n5^2 + 12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((16 - 20*d + 8*d^2 - d^3 + 8*n1 - 6*d*n1 + d^2*n1 + 8*n3 - 8*d*n3 + 
      2*d^2*n3 + 4*n1*n3 - 2*d*n1*n3 + 8*n5 - 6*d*n5 + d^2*n5 + 4*n1*n5 - 
      d*n1*n5 + 4*n3*n5 - 2*d*n3*n5 + 2*n1*n3*n5)*j[p4, n1, n2, 1 + n3, 0, 
      n5, 0, 1, 1, 0, 0, 2, 0, 1, 1])/(832 - 1240*d + 684*d^2 - 166*d^3 + 
     15*d^4 + 56*n1 - 64*d*n1 + 24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 
     510*d^2*n2 - 62*d^3*n2 + 132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 
     608*n2^2 - 448*d*n2^2 + 82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 
     120*n2^3 - 44*d*n2^3 + 8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 
     250*d^2*n3 - 31*d^3*n3 + 32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 
     644*n2*n3 - 490*d*n2*n3 + 92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 
     208*n2^2*n3 - 78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 
     100*d*n3^2 + 20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 
     38*d*n2*n3^2 + 4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 
     4*n2*n3^3 + 504*n5 - 508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - 
     d^2*n1*n5 + 532*n2*n5 - 370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 
     8*d*n1*n2*n5 + 164*n2^2*n5 - 58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 
     340*n3*n5 - 232*d*n3*n5 + 39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 
     220*n2*n3*n5 - 78*d*n2*n3*n5 + 8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 
     68*n3^2*n5 - 24*d*n3^2*n5 + 2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 
     44*n5^2 - 26*d*n5^2 + 4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 
     44*n2*n5^2 - 14*d*n2*n5^2 - 2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 
     8*d*n3*n5^2 - 4*n1*n3*n5^2 + 12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((-16 + 20*d - 8*d^2 + d^3 - 8*n1 + 6*d*n1 - d^2*n1 - 8*n3 + 8*d*n3 - 
      2*d^2*n3 - 4*n1*n3 + 2*d*n1*n3 - 8*n5 + 6*d*n5 - d^2*n5 - 4*n1*n5 + 
      d*n1*n5 - 4*n3*n5 + 2*d*n3*n5 - 2*n1*n3*n5)*j[p4, n1, n2, 1 + n3, 0, 
      n5, 0, 1, 2, 0, 0, 1, -1, 1, 1])/(832 - 1240*d + 684*d^2 - 166*d^3 + 
     15*d^4 + 56*n1 - 64*d*n1 + 24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 
     510*d^2*n2 - 62*d^3*n2 + 132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 
     608*n2^2 - 448*d*n2^2 + 82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 
     120*n2^3 - 44*d*n2^3 + 8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 
     250*d^2*n3 - 31*d^3*n3 + 32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 
     644*n2*n3 - 490*d*n2*n3 + 92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 
     208*n2^2*n3 - 78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 
     100*d*n3^2 + 20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 
     38*d*n2*n3^2 + 4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 
     4*n2*n3^3 + 504*n5 - 508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - 
     d^2*n1*n5 + 532*n2*n5 - 370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 
     8*d*n1*n2*n5 + 164*n2^2*n5 - 58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 
     340*n3*n5 - 232*d*n3*n5 + 39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 
     220*n2*n3*n5 - 78*d*n2*n3*n5 + 8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 
     68*n3^2*n5 - 24*d*n3^2*n5 + 2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 
     44*n5^2 - 26*d*n5^2 + 4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 
     44*n2*n5^2 - 14*d*n2*n5^2 - 2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 
     8*d*n3*n5^2 - 4*n1*n3*n5^2 + 12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((-80 + 54*d - 9*d^2 - 10*n1 + 3*d*n1 + 264*n2 - 258*d*n2 + 78*d^2*n2 - 
      7*d^3*n2 + 48*n1*n2 - 30*d*n1*n2 + 4*d^2*n1*n2 + 12*n2^2 + 14*d*n2^2 - 
      7*d^2*n2^2 - 2*n1*n2^2 + 3*d*n1*n2^2 - 32*n2^3 + 14*d*n2^3 - 
      4*n1*n2^3 - 4*n2^4 + 26*n3 - 55*d*n3 + 25*d^2*n3 - 3*d^3*n3 + 
      24*n1*n3 - 19*d*n1*n3 + 3*d^2*n1*n3 + 130*n2*n3 - 90*d*n2*n3 + 
      15*d^2*n2*n3 + 18*n1*n2*n3 - 7*d*n1*n2*n3 - 6*n2^2*n3 + 5*d*n2^2*n3 - 
      2*n1*n2^2*n3 - 6*n2^3*n3 + 98*n3^2 - 74*d*n3^2 + 14*d^2*n3^2 + 
      20*n1*n3^2 - 8*d*n1*n3^2 + 52*n2*n3^2 - 18*d*n2*n3^2 + 4*n1*n2*n3^2 + 
      2*n2^2*n3^2 + 26*n3^3 - 9*d*n3^3 + 2*n1*n3^3 + 6*n2*n3^3 + 2*n3^4 + 
      214*n5 - 219*d*n5 + 73*d^2*n5 - 8*d^3*n5 + 23*n1*n5 - 13*d*n1*n5 + 
      2*d^2*n1*n5 + 304*n2*n5 - 200*d*n2*n5 + 32*d^2*n2*n5 + 36*n1*n2*n5 - 
      11*d*n1*n2*n5 + 58*n2^2*n5 - 17*d*n2^2*n5 + 5*n1*n2^2*n5 + 178*n3*n5 - 
      122*d*n3*n5 + 20*d^2*n3*n5 + 27*n1*n3*n5 - 7*d*n1*n3*n5 + 
      138*n2*n3*n5 - 48*d*n2*n3*n5 + 13*n1*n2*n3*n5 + 12*n2^2*n3*n5 + 
      52*n3^2*n5 - 19*d*n3^2*n5 + 6*n1*n3^2*n5 + 16*n2*n3^2*n5 + 4*n3^3*n5 + 
      22*n5^2 - 13*d*n5^2 + 2*d^2*n5^2 - 7*n1*n5^2 + 2*d*n1*n5^2 + 
      30*n2*n5^2 - 9*d*n2*n5^2 - n1*n2*n5^2 + 4*n2^2*n5^2 + 14*n3*n5^2 - 
      4*d*n3*n5^2 - 2*n1*n3*n5^2 + 10*n2*n3*n5^2 + 2*n3^2*n5^2)*
     j[p4, n1, n2, 1 + n3, 0, n5, 1, 0, 1, 0, 0, 1, 0, 1, 1])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((-16 + 20*d - 8*d^2 + d^3 - 8*n1 + 6*d*n1 - d^2*n1 - 8*n3 + 8*d*n3 - 
      2*d^2*n3 - 4*n1*n3 + 2*d*n1*n3 - 8*n5 + 6*d*n5 - d^2*n5 - 4*n1*n5 + 
      d*n1*n5 - 4*n3*n5 + 2*d*n3*n5 - 2*n1*n3*n5)*j[p4, n1, n2, 1 + n3, 0, 
      n5, 1, 0, 1, 0, 0, 2, -1, 1, 1])/(832 - 1240*d + 684*d^2 - 166*d^3 + 
     15*d^4 + 56*n1 - 64*d*n1 + 24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 
     510*d^2*n2 - 62*d^3*n2 + 132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 
     608*n2^2 - 448*d*n2^2 + 82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 
     120*n2^3 - 44*d*n2^3 + 8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 
     250*d^2*n3 - 31*d^3*n3 + 32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 
     644*n2*n3 - 490*d*n2*n3 + 92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 
     208*n2^2*n3 - 78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 
     100*d*n3^2 + 20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 
     38*d*n2*n3^2 + 4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 
     4*n2*n3^3 + 504*n5 - 508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - 
     d^2*n1*n5 + 532*n2*n5 - 370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 
     8*d*n1*n2*n5 + 164*n2^2*n5 - 58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 
     340*n3*n5 - 232*d*n3*n5 + 39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 
     220*n2*n3*n5 - 78*d*n2*n3*n5 + 8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 
     68*n3^2*n5 - 24*d*n3^2*n5 + 2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 
     44*n5^2 - 26*d*n5^2 + 4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 
     44*n2*n5^2 - 14*d*n2*n5^2 - 2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 
     8*d*n3*n5^2 - 4*n1*n3*n5^2 + 12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((16 - 20*d + 8*d^2 - d^3 + 8*n1 - 6*d*n1 + d^2*n1 + 8*n3 - 8*d*n3 + 
      2*d^2*n3 + 4*n1*n3 - 2*d*n1*n3 + 8*n5 - 6*d*n5 + d^2*n5 + 4*n1*n5 - 
      d*n1*n5 + 4*n3*n5 - 2*d*n3*n5 + 2*n1*n3*n5)*j[p4, n1, n2, 1 + n3, 0, 
      n5, 1, 0, 1, 0, 0, 2, 0, 1, 1])/(832 - 1240*d + 684*d^2 - 166*d^3 + 
     15*d^4 + 56*n1 - 64*d*n1 + 24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 
     510*d^2*n2 - 62*d^3*n2 + 132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 
     608*n2^2 - 448*d*n2^2 + 82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 
     120*n2^3 - 44*d*n2^3 + 8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 
     250*d^2*n3 - 31*d^3*n3 + 32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 
     644*n2*n3 - 490*d*n2*n3 + 92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 
     208*n2^2*n3 - 78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 
     100*d*n3^2 + 20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 
     38*d*n2*n3^2 + 4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 
     4*n2*n3^3 + 504*n5 - 508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - 
     d^2*n1*n5 + 532*n2*n5 - 370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 
     8*d*n1*n2*n5 + 164*n2^2*n5 - 58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 
     340*n3*n5 - 232*d*n3*n5 + 39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 
     220*n2*n3*n5 - 78*d*n2*n3*n5 + 8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 
     68*n3^2*n5 - 24*d*n3^2*n5 + 2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 
     44*n5^2 - 26*d*n5^2 + 4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 
     44*n2*n5^2 - 14*d*n2*n5^2 - 2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 
     8*d*n3*n5^2 - 4*n1*n3*n5^2 + 12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((-16 + 20*d - 8*d^2 + d^3 - 8*n1 + 6*d*n1 - d^2*n1 - 8*n3 + 8*d*n3 - 
      2*d^2*n3 - 4*n1*n3 + 2*d*n1*n3 - 8*n5 + 6*d*n5 - d^2*n5 - 4*n1*n5 + 
      d*n1*n5 - 4*n3*n5 + 2*d*n3*n5 - 2*n1*n3*n5)*j[p4, n1, n2, 1 + n3, 0, 
      n5, 1, 0, 2, 0, 0, 1, -1, 1, 1])/(832 - 1240*d + 684*d^2 - 166*d^3 + 
     15*d^4 + 56*n1 - 64*d*n1 + 24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 
     510*d^2*n2 - 62*d^3*n2 + 132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 
     608*n2^2 - 448*d*n2^2 + 82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 
     120*n2^3 - 44*d*n2^3 + 8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 
     250*d^2*n3 - 31*d^3*n3 + 32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 
     644*n2*n3 - 490*d*n2*n3 + 92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 
     208*n2^2*n3 - 78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 
     100*d*n3^2 + 20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 
     38*d*n2*n3^2 + 4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 
     4*n2*n3^3 + 504*n5 - 508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - 
     d^2*n1*n5 + 532*n2*n5 - 370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 
     8*d*n1*n2*n5 + 164*n2^2*n5 - 58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 
     340*n3*n5 - 232*d*n3*n5 + 39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 
     220*n2*n3*n5 - 78*d*n2*n3*n5 + 8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 
     68*n3^2*n5 - 24*d*n3^2*n5 + 2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 
     44*n5^2 - 26*d*n5^2 + 4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 
     44*n2*n5^2 - 14*d*n2*n5^2 - 2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 
     8*d*n3*n5^2 - 4*n1*n3*n5^2 + 12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((592 - 578*d + 187*d^2 - 20*d^3 + 86*n1 - 53*d*n1 + 8*d^2*n1 - 312*n2 + 
      430*d*n2 - 178*d^2*n2 + 23*d^3*n2 - 48*n1*n2 + 42*d*n1*n2 - 
      8*d^2*n1*n2 - 308*n2^2 + 222*d*n2^2 - 39*d^2*n2^2 - 34*n1*n2^2 + 
      11*d*n1*n2^2 - 64*n2^3 + 22*d*n2^3 - 4*n1*n2^3 - 4*n2^4 + 922*n3 - 
      781*d*n3 + 212*d^2*n3 - 18*d^3*n3 + 114*n1*n3 - 56*d*n1*n3 + 
      6*d^2*n1*n3 + 90*n2*n3 + 6*d*n2*n3 - 12*d^2*n2*n3 + 4*n1*n2*n3 + 
      4*d*n1*n2*n3 - 74*n2^2*n3 + 31*d*n2^2*n3 - 6*n1*n2^2*n3 - 10*n2^3*n3 + 
      416*n3^2 - 253*d*n3^2 + 38*d^2*n3^2 + 42*n1*n3^2 - 12*d*n1*n3^2 + 
      88*n2*n3^2 - 23*d*n2*n3^2 + 6*n1*n2*n3^2 + 70*n3^3 - 22*d*n3^3 + 
      4*n1*n3^3 + 10*n2*n3^3 + 4*n3^4 + 86*n5 - 53*d*n5 + 8*d^2*n5 + n1*n5 - 
      104*n2*n5 + 76*d*n2*n5 - 13*d^2*n2*n5 - 2*n1*n2*n5 - 42*n2^2*n5 + 
      13*d*n2^2*n5 + n1*n2^2*n5 - 4*n2^3*n5 + 114*n3*n5 - 56*d*n3*n5 + 
      6*d^2*n3*n5 - 4*n1*n3*n5 + 2*d*n1*n3*n5 - 32*n2*n3*n5 + 16*d*n2*n3*n5 - 
      4*n1*n2*n3*n5 - 10*n2^2*n3*n5 + 42*n3^2*n5 - 12*d*n3^2*n5 + 
      2*n2*n3^2*n5 + 4*n3^3*n5 - 8*n2*n5^2 + 2*d*n2*n5^2 - 4*n2*n3*n5^2)*
     j[p4, n1, n2, 1 + n3, 0, n5, 1, 1, 0, 0, 0, 1, 0, 1, 1])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((-16 + 20*d - 8*d^2 + d^3 - 8*n1 + 6*d*n1 - d^2*n1 - 8*n3 + 8*d*n3 - 
      2*d^2*n3 - 4*n1*n3 + 2*d*n1*n3 - 8*n5 + 6*d*n5 - d^2*n5 - 4*n1*n5 + 
      d*n1*n5 - 4*n3*n5 + 2*d*n3*n5 - 2*n1*n3*n5)*j[p4, n1, n2, 1 + n3, 0, 
      n5, 1, 1, 0, 0, 0, 2, -1, 1, 1])/(832 - 1240*d + 684*d^2 - 166*d^3 + 
     15*d^4 + 56*n1 - 64*d*n1 + 24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 
     510*d^2*n2 - 62*d^3*n2 + 132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 
     608*n2^2 - 448*d*n2^2 + 82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 
     120*n2^3 - 44*d*n2^3 + 8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 
     250*d^2*n3 - 31*d^3*n3 + 32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 
     644*n2*n3 - 490*d*n2*n3 + 92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 
     208*n2^2*n3 - 78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 
     100*d*n3^2 + 20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 
     38*d*n2*n3^2 + 4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 
     4*n2*n3^3 + 504*n5 - 508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - 
     d^2*n1*n5 + 532*n2*n5 - 370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 
     8*d*n1*n2*n5 + 164*n2^2*n5 - 58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 
     340*n3*n5 - 232*d*n3*n5 + 39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 
     220*n2*n3*n5 - 78*d*n2*n3*n5 + 8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 
     68*n3^2*n5 - 24*d*n3^2*n5 + 2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 
     44*n5^2 - 26*d*n5^2 + 4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 
     44*n2*n5^2 - 14*d*n2*n5^2 - 2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 
     8*d*n3*n5^2 - 4*n1*n3*n5^2 + 12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((16 - 20*d + 8*d^2 - d^3 + 8*n1 - 6*d*n1 + d^2*n1 + 8*n3 - 8*d*n3 + 
      2*d^2*n3 + 4*n1*n3 - 2*d*n1*n3 + 8*n5 - 6*d*n5 + d^2*n5 + 4*n1*n5 - 
      d*n1*n5 + 4*n3*n5 - 2*d*n3*n5 + 2*n1*n3*n5)*j[p4, n1, n2, 1 + n3, 0, 
      n5, 1, 1, 0, 0, 0, 2, 0, 1, 1])/(832 - 1240*d + 684*d^2 - 166*d^3 + 
     15*d^4 + 56*n1 - 64*d*n1 + 24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 
     510*d^2*n2 - 62*d^3*n2 + 132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 
     608*n2^2 - 448*d*n2^2 + 82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 
     120*n2^3 - 44*d*n2^3 + 8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 
     250*d^2*n3 - 31*d^3*n3 + 32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 
     644*n2*n3 - 490*d*n2*n3 + 92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 
     208*n2^2*n3 - 78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 
     100*d*n3^2 + 20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 
     38*d*n2*n3^2 + 4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 
     4*n2*n3^3 + 504*n5 - 508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - 
     d^2*n1*n5 + 532*n2*n5 - 370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 
     8*d*n1*n2*n5 + 164*n2^2*n5 - 58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 
     340*n3*n5 - 232*d*n3*n5 + 39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 
     220*n2*n3*n5 - 78*d*n2*n3*n5 + 8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 
     68*n3^2*n5 - 24*d*n3^2*n5 + 2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 
     44*n5^2 - 26*d*n5^2 + 4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 
     44*n2*n5^2 - 14*d*n2*n5^2 - 2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 
     8*d*n3*n5^2 - 4*n1*n3*n5^2 + 12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((-96 + 104*d - 36*d^2 + 4*d^3 - 8*n1 + 6*d*n1 - d^2*n1 - 16*n2 + 
      12*d*n2 - 2*d^2*n2 - 64*n3 + 52*d*n3 - 10*d^2*n3 - 4*n1*n3 + 
      2*d*n1*n3 - 8*n2*n3 + 4*d*n2*n3 - 8*n3^2 + 4*d*n3^2 - 64*n5 + 40*d*n5 - 
      6*d^2*n5 - 4*n1*n5 + d*n1*n5 - 8*n2*n5 + 2*d*n2*n5 - 40*n3*n5 + 
      14*d*n3*n5 - 2*n1*n3*n5 - 4*n2*n3*n5 - 4*n3^2*n5 - 8*n5^2 + 2*d*n5^2 - 
      4*n3*n5^2)*j[p4, n1, n2, 1 + n3, 0, n5, 1, 1, 1, -1, 0, 1, 0, 0, 2])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((96 - 104*d + 36*d^2 - 4*d^3 + 8*n1 - 6*d*n1 + d^2*n1 + 16*n2 - 12*d*n2 + 
      2*d^2*n2 + 64*n3 - 52*d*n3 + 10*d^2*n3 + 4*n1*n3 - 2*d*n1*n3 + 
      8*n2*n3 - 4*d*n2*n3 + 8*n3^2 - 4*d*n3^2 + 64*n5 - 40*d*n5 + 6*d^2*n5 + 
      4*n1*n5 - d*n1*n5 + 8*n2*n5 - 2*d*n2*n5 + 40*n3*n5 - 14*d*n3*n5 + 
      2*n1*n3*n5 + 4*n2*n3*n5 + 4*n3^2*n5 + 8*n5^2 - 2*d*n5^2 + 4*n3*n5^2)*
     j[p4, n1, n2, 1 + n3, 0, n5, 1, 1, 1, 0, 0, 0, 0, 1, 1])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((320 - 330*d + 113*d^2 - 13*d^3 + 10*n1 - 5*d*n1 + d^2*n1 - 8*n2 + 
      132*d*n2 - 91*d^2*n2 + 16*d^3*n2 + 6*n1*n2 + 9*d*n1*n2 - 4*d^2*n1*n2 - 
      260*n2^2 + 222*d*n2^2 - 46*d^2*n2^2 - 32*n1*n2^2 + 14*d*n1*n2^2 - 
      92*n2^3 + 36*d*n2^3 - 8*n1*n2^3 - 8*n2^4 + 534*n3 - 493*d*n3 + 
      149*d^2*n3 - 15*d^3*n3 + 32*n1*n3 - 17*d*n1*n3 + 3*d^2*n1*n3 + 
      280*n2*n3 - 159*d*n2*n3 + 21*d^2*n2*n3 + 32*n1*n2*n3 - 9*d*n1*n2*n3 - 
      6*n2^2*n3 + 8*d*n2^2*n3 - 8*n2^3*n3 + 234*n3^2 - 152*d*n3^2 + 
      24*d^2*n3^2 + 16*n1*n3^2 - 4*d*n1*n3^2 + 96*n2*n3^2 - 31*d*n2*n3^2 + 
      6*n1*n2*n3^2 + 6*n2^2*n3^2 + 38*n3^3 - 13*d*n3^3 + 2*n1*n3^3 + 
      8*n2*n3^3 + 2*n3^4 + 138*n5 - 119*d*n5 + 34*d^2*n5 - 3*d^3*n5 + 
      9*n1*n5 - 14*d*n1*n5 + 3*d^2*n1*n5 - 34*n2*n5 + 49*d*n2*n5 - 
      13*d^2*n2*n5 + 5*n1*n2*n5 - d*n1*n2*n5 - 68*n2^2*n5 + 28*d*n2^2*n5 - 
      2*n1*n2^2*n5 - 12*n2^3*n5 + 158*n3*n5 - 100*d*n3*n5 + 17*d^2*n3*n5 - 
      3*n1*n3*n5 - 3*d*n1*n3*n5 + 52*n2*n3*n5 - 14*d*n2*n3*n5 + 
      3*n1*n2*n3*n5 - 2*n2^2*n3*n5 + 44*n3^2*n5 - 13*d*n3^2*n5 - 
      2*n1*n3^2*n5 + 10*n2*n3^2*n5 + 4*n3^3*n5 + 34*n5^2 - 21*d*n5^2 + 
      3*d^2*n5^2 + 11*n1*n5^2 - 3*d*n1*n5^2 - 6*n2*n5^2 + 3*d*n2*n5^2 + 
      n1*n2*n5^2 - 4*n2^2*n5^2 + 22*n3*n5^2 - 8*d*n3*n5^2 + 4*n1*n3*n5^2 + 
      2*n2*n3*n5^2 + 2*n3^2*n5^2)*j[p4, n1, n2, 1 + n3, 0, n5, 1, 1, 1, 0, 0, 
      1, 0, 0, 1])/(832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 
     64*d*n1 + 24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 
     62*d^3*n2 + 132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 
     448*d*n2^2 + 82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 
     44*d*n2^3 + 8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 
     31*d^3*n3 + 32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 
     490*d*n2*n3 + 92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((32 - 40*d + 16*d^2 - 2*d^3 + 16*n1 - 12*d*n1 + 2*d^2*n1 + 32*n3 - 
      36*d*n3 + 12*d^2*n3 - d^3*n3 + 16*n1*n3 - 10*d*n1*n3 + d^2*n1*n3 + 
      8*n3^2 - 8*d*n3^2 + 2*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 - 112*n5 + 
      102*d*n5 - 31*d^2*n5 + 3*d^3*n5 - 26*n1*n5 + 19*d*n1*n5 - 3*d^2*n1*n5 + 
      40*n2*n5 - 40*d*n2*n5 + 9*d^2*n2*n5 + 6*n1*n2*n5 - 3*d*n1*n2*n5 + 
      36*n2^2*n5 - 14*d*n2^2*n5 + 4*n1*n2^2*n5 + 4*n2^3*n5 - 110*n3*n5 + 
      73*d*n3*n5 - 13*d^2*n3*n5 - 14*n1*n3*n5 + 7*d*n1*n3*n5 - 20*n2*n3*n5 + 
      5*d*n2*n3*n5 - 2*n1*n2*n3*n5 + 2*n2^2*n3*n5 - 24*n3^2*n5 + 
      7*d*n3^2*n5 - 4*n2*n3^2*n5 - 2*n3^3*n5 - 34*n5^2 + 21*d*n5^2 - 
      3*d^2*n5^2 - 11*n1*n5^2 + 3*d*n1*n5^2 + 6*n2*n5^2 - 3*d*n2*n5^2 - 
      n1*n2*n5^2 + 4*n2^2*n5^2 - 22*n3*n5^2 + 8*d*n3*n5^2 - 4*n1*n3*n5^2 - 
      2*n2*n3*n5^2 - 2*n3^2*n5^2)*j[p4, n1, n2, 1 + n3, 0, n5, 1, 1, 1, 0, 0, 
      1, 0, 1, 0])/(832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 
     64*d*n1 + 24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 
     62*d^3*n2 + 132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 
     448*d*n2^2 + 82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 
     44*d*n2^3 + 8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 
     31*d^3*n3 + 32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 
     490*d*n2*n3 + 92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((128 - 208*d + 124*d^2 - 32*d^3 + 3*d^4 + 80*n1 - 92*d*n1 + 34*d^2*n1 - 
      4*d^3*n1 + 8*n1^2 - 6*d*n1^2 + d^2*n1^2 + 32*n2 - 40*d*n2 + 16*d^2*n2 - 
      2*d^3*n2 + 16*n1*n2 - 12*d*n1*n2 + 2*d^2*n1*n2 + 80*n3 - 108*d*n3 + 
      48*d^2*n3 - 7*d^3*n3 + 48*n1*n3 - 42*d*n1*n3 + 9*d^2*n1*n3 + 
      4*n1^2*n3 - 2*d*n1^2*n3 + 16*n2*n3 - 16*d*n2*n3 + 4*d^2*n2*n3 + 
      8*n1*n2*n3 - 4*d*n1*n2*n3 + 8*n3^2 - 8*d*n3^2 + 2*d^2*n3^2 + 
      4*n1*n3^2 - 2*d*n1*n3^2 + 96*n5 - 112*d*n5 + 42*d^2*n5 - 5*d^3*n5 + 
      56*n1*n5 - 38*d*n1*n5 + 6*d^2*n1*n5 + 4*n1^2*n5 - d*n1^2*n5 + 
      16*n2*n5 - 12*d*n2*n5 + 2*d^2*n2*n5 + 8*n1*n2*n5 - 2*d*n1*n2*n5 + 
      56*n3*n5 - 50*d*n3*n5 + 11*d^2*n3*n5 + 32*n1*n3*n5 - 13*d*n1*n3*n5 + 
      2*n1^2*n3*n5 + 8*n2*n3*n5 - 4*d*n2*n3*n5 + 4*n1*n2*n3*n5 + 4*n3^2*n5 - 
      2*d*n3^2*n5 + 2*n1*n3^2*n5 + 16*n5^2 - 12*d*n5^2 + 2*d^2*n5^2 + 
      8*n1*n5^2 - 2*d*n1*n5^2 + 8*n3*n5^2 - 4*d*n3*n5^2 + 4*n1*n3*n5^2)*
     j[p4, n1, n2, 1 + n3, 0, n5, 1, 1, 1, 0, 0, 1, 0, 1, 1])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((-16 + 20*d - 8*d^2 + d^3 - 8*n1 + 6*d*n1 - d^2*n1 - 8*n3 + 8*d*n3 - 
      2*d^2*n3 - 4*n1*n3 + 2*d*n1*n3 - 8*n5 + 6*d*n5 - d^2*n5 - 4*n1*n5 + 
      d*n1*n5 - 4*n3*n5 + 2*d*n3*n5 - 2*n1*n3*n5)*j[p4, n1, n2, 1 + n3, 0, 
      n5, 1, 1, 1, 0, 0, 1, 0, 2, 0])/(832 - 1240*d + 684*d^2 - 166*d^3 + 
     15*d^4 + 56*n1 - 64*d*n1 + 24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 
     510*d^2*n2 - 62*d^3*n2 + 132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 
     608*n2^2 - 448*d*n2^2 + 82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 
     120*n2^3 - 44*d*n2^3 + 8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 
     250*d^2*n3 - 31*d^3*n3 + 32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 
     644*n2*n3 - 490*d*n2*n3 + 92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 
     208*n2^2*n3 - 78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 
     100*d*n3^2 + 20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 
     38*d*n2*n3^2 + 4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 
     4*n2*n3^3 + 504*n5 - 508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - 
     d^2*n1*n5 + 532*n2*n5 - 370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 
     8*d*n1*n2*n5 + 164*n2^2*n5 - 58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 
     340*n3*n5 - 232*d*n3*n5 + 39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 
     220*n2*n3*n5 - 78*d*n2*n3*n5 + 8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 
     68*n3^2*n5 - 24*d*n3^2*n5 + 2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 
     44*n5^2 - 26*d*n5^2 + 4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 
     44*n2*n5^2 - 14*d*n2*n5^2 - 2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 
     8*d*n3*n5^2 - 4*n1*n3*n5^2 + 12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((-112 + 94*d - 25*d^2 + 2*d^3 - 26*n1 + 15*d*n1 - 2*d^2*n1 + 40*n2 - 
      40*d*n2 + 9*d^2*n2 + 6*n1*n2 - 3*d*n1*n2 + 36*n2^2 - 14*d*n2^2 + 
      4*n1*n2^2 + 4*n2^3 - 118*n3 + 75*d*n3 - 12*d^2*n3 - 18*n1*n3 + 
      6*d*n1*n3 - 20*n2*n3 + 5*d*n2*n3 - 2*n1*n2*n3 + 2*n2^2*n3 - 28*n3^2 + 
      9*d*n3^2 - 2*n1*n3^2 - 4*n2*n3^2 - 2*n3^3 - 26*n5 + 15*d*n5 - 
      2*d^2*n5 - 7*n1*n5 + 2*d*n1*n5 + 6*n2*n5 - 3*d*n2*n5 - n1*n2*n5 + 
      4*n2^2*n5 - 18*n3*n5 + 6*d*n3*n5 - 2*n1*n3*n5 - 2*n2*n3*n5 - 2*n3^2*n5)*
     j[p4, n1, n2, 1 + n3, 0, n5, 2, 1, 0, 0, 0, 1, -1, 1, 1])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((-128 + 144*d - 52*d^2 + 6*d^3 - 24*n1 + 18*d*n1 - 3*d^2*n1 - 16*n2 + 
      12*d*n2 - 2*d^2*n2 - 208*n3 + 212*d*n3 - 66*d^2*n3 + 6*d^3*n3 - 
      36*n1*n3 + 24*d*n1*n3 - 3*d^2*n1*n3 - 24*n2*n3 + 16*d*n2*n3 - 
      2*d^2*n2*n3 - 88*n3^2 + 72*d*n3^2 - 14*d^2*n3^2 - 12*n1*n3^2 + 
      6*d*n1*n3^2 - 8*n2*n3^2 + 4*d*n2*n3^2 - 8*n3^3 + 4*d*n3^3 - 80*n5 + 
      52*d*n5 - 8*d^2*n5 - 12*n1*n5 + 3*d*n1*n5 - 8*n2*n5 + 2*d*n2*n5 - 
      128*n3*n5 + 70*d*n3*n5 - 8*d^2*n3*n5 - 18*n1*n3*n5 + 3*d*n1*n3*n5 - 
      12*n2*n3*n5 + 2*d*n2*n3*n5 - 52*n3^2*n5 + 18*d*n3^2*n5 - 6*n1*n3^2*n5 - 
      4*n2*n3^2*n5 - 4*n3^3*n5 - 8*n5^2 + 2*d*n5^2 - 12*n3*n5^2 + 
      2*d*n3*n5^2 - 4*n3^2*n5^2)*j[p4, n1, n2, 2 + n3, -1, n5, 1, 0, 1, 0, 0, 
      1, 0, 1, 1])/(832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 
     64*d*n1 + 24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 
     62*d^3*n2 + 132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 
     448*d*n2^2 + 82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 
     44*d*n2^3 + 8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 
     31*d^3*n3 + 32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 
     490*d*n2*n3 + 92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((96 - 104*d + 36*d^2 - 4*d^3 + 8*n1 - 6*d*n1 + d^2*n1 + 16*n2 - 12*d*n2 + 
      2*d^2*n2 + 160*n3 - 156*d*n3 + 46*d^2*n3 - 4*d^3*n3 + 12*n1*n3 - 
      8*d*n1*n3 + d^2*n1*n3 + 24*n2*n3 - 16*d*n2*n3 + 2*d^2*n2*n3 + 72*n3^2 - 
      56*d*n3^2 + 10*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 8*n2*n3^2 - 
      4*d*n2*n3^2 + 8*n3^3 - 4*d*n3^3 + 64*n5 - 40*d*n5 + 6*d^2*n5 + 
      4*n1*n5 - d*n1*n5 + 8*n2*n5 - 2*d*n2*n5 + 104*n3*n5 - 54*d*n3*n5 + 
      6*d^2*n3*n5 + 6*n1*n3*n5 - d*n1*n3*n5 + 12*n2*n3*n5 - 2*d*n2*n3*n5 + 
      44*n3^2*n5 - 14*d*n3^2*n5 + 2*n1*n3^2*n5 + 4*n2*n3^2*n5 + 4*n3^3*n5 + 
      8*n5^2 - 2*d*n5^2 + 12*n3*n5^2 - 2*d*n3*n5^2 + 4*n3^2*n5^2)*
     j[p4, n1, n2, 2 + n3, -1, n5, 1, 1, 0, 0, 0, 1, 0, 1, 1])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((-96 + 104*d - 36*d^2 + 4*d^3 - 8*n1 + 6*d*n1 - d^2*n1 - 16*n2 + 
      12*d*n2 - 2*d^2*n2 - 160*n3 + 156*d*n3 - 46*d^2*n3 + 4*d^3*n3 - 
      12*n1*n3 + 8*d*n1*n3 - d^2*n1*n3 - 24*n2*n3 + 16*d*n2*n3 - 
      2*d^2*n2*n3 - 72*n3^2 + 56*d*n3^2 - 10*d^2*n3^2 - 4*n1*n3^2 + 
      2*d*n1*n3^2 - 8*n2*n3^2 + 4*d*n2*n3^2 - 8*n3^3 + 4*d*n3^3 - 64*n5 + 
      40*d*n5 - 6*d^2*n5 - 4*n1*n5 + d*n1*n5 - 8*n2*n5 + 2*d*n2*n5 - 
      104*n3*n5 + 54*d*n3*n5 - 6*d^2*n3*n5 - 6*n1*n3*n5 + d*n1*n3*n5 - 
      12*n2*n3*n5 + 2*d*n2*n3*n5 - 44*n3^2*n5 + 14*d*n3^2*n5 - 2*n1*n3^2*n5 - 
      4*n2*n3^2*n5 - 4*n3^3*n5 - 8*n5^2 + 2*d*n5^2 - 12*n3*n5^2 + 
      2*d*n3*n5^2 - 4*n3^2*n5^2)*j[p4, n1, n2, 2 + n3, -1, n5, 1, 1, 1, 0, 0, 
      0, 0, 1, 1])/(832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 
     64*d*n1 + 24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 
     62*d^3*n2 + 132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 
     448*d*n2^2 + 82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 
     44*d*n2^3 + 8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 
     31*d^3*n3 + 32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 
     490*d*n2*n3 + 92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((224 - 248*d + 88*d^2 - 10*d^3 + 32*n1 - 24*d*n1 + 4*d^2*n1 + 32*n2 - 
      24*d*n2 + 4*d^2*n2 + 368*n3 - 368*d*n3 + 112*d^2*n3 - 10*d^3*n3 + 
      48*n1*n3 - 32*d*n1*n3 + 4*d^2*n1*n3 + 48*n2*n3 - 32*d*n2*n3 + 
      4*d^2*n2*n3 + 160*n3^2 - 128*d*n3^2 + 24*d^2*n3^2 + 16*n1*n3^2 - 
      8*d*n1*n3^2 + 16*n2*n3^2 - 8*d*n2*n3^2 + 16*n3^3 - 8*d*n3^3 + 144*n5 - 
      92*d*n5 + 14*d^2*n5 + 16*n1*n5 - 4*d*n1*n5 + 16*n2*n5 - 4*d*n2*n5 + 
      232*n3*n5 - 124*d*n3*n5 + 14*d^2*n3*n5 + 24*n1*n3*n5 - 4*d*n1*n3*n5 + 
      24*n2*n3*n5 - 4*d*n2*n3*n5 + 96*n3^2*n5 - 32*d*n3^2*n5 + 8*n1*n3^2*n5 + 
      8*n2*n3^2*n5 + 8*n3^3*n5 + 16*n5^2 - 4*d*n5^2 + 24*n3*n5^2 - 
      4*d*n3*n5^2 + 8*n3^2*n5^2)*j[p4, n1, n2, 2 + n3, -1, n5, 1, 1, 1, 0, 0, 
      1, 0, 0, 1])/(832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 
     64*d*n1 + 24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 
     62*d^3*n2 + 132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 
     448*d*n2^2 + 82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 
     44*d*n2^3 + 8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 
     31*d^3*n3 + 32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 
     490*d*n2*n3 + 92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((-80 + 84*d - 28*d^2 + 3*d^3 - 16*n2 + 12*d*n2 - 2*d^2*n2 - 136*n3 + 
      128*d*n3 - 36*d^2*n3 + 3*d^3*n3 - 24*n2*n3 + 16*d*n2*n3 - 2*d^2*n2*n3 - 
      64*n3^2 + 48*d*n3^2 - 8*d^2*n3^2 - 8*n2*n3^2 + 4*d*n2*n3^2 - 8*n3^3 + 
      4*d*n3^3 - 56*n5 + 34*d*n5 - 5*d^2*n5 - 8*n2*n5 + 2*d*n2*n5 - 
      92*n3*n5 + 46*d*n3*n5 - 5*d^2*n3*n5 - 12*n2*n3*n5 + 2*d*n2*n3*n5 - 
      40*n3^2*n5 + 12*d*n3^2*n5 - 4*n2*n3^2*n5 - 4*n3^3*n5 - 8*n5^2 + 
      2*d*n5^2 - 12*n3*n5^2 + 2*d*n3*n5^2 - 4*n3^2*n5^2)*
     j[p4, n1, n2, 2 + n3, -1, n5, 1, 1, 1, 0, 0, 1, 0, 1, 1])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((96 - 104*d + 36*d^2 - 4*d^3 + 8*n1 - 6*d*n1 + d^2*n1 + 16*n2 - 12*d*n2 + 
      2*d^2*n2 + 160*n3 - 156*d*n3 + 46*d^2*n3 - 4*d^3*n3 + 12*n1*n3 - 
      8*d*n1*n3 + d^2*n1*n3 + 24*n2*n3 - 16*d*n2*n3 + 2*d^2*n2*n3 + 72*n3^2 - 
      56*d*n3^2 + 10*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 8*n2*n3^2 - 
      4*d*n2*n3^2 + 8*n3^3 - 4*d*n3^3 + 64*n5 - 40*d*n5 + 6*d^2*n5 + 
      4*n1*n5 - d*n1*n5 + 8*n2*n5 - 2*d*n2*n5 + 104*n3*n5 - 54*d*n3*n5 + 
      6*d^2*n3*n5 + 6*n1*n3*n5 - d*n1*n3*n5 + 12*n2*n3*n5 - 2*d*n2*n3*n5 + 
      44*n3^2*n5 - 14*d*n3^2*n5 + 2*n1*n3^2*n5 + 4*n2*n3^2*n5 + 4*n3^3*n5 + 
      8*n5^2 - 2*d*n5^2 + 12*n3*n5^2 - 2*d*n3*n5^2 + 4*n3^2*n5^2)*
     j[p4, n1, n2, 2 + n3, 0, n5, 1, 0, 1, 0, -1, 1, 0, 1, 1])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((96 - 74*d + 17*d^2 - d^3 + 18*n1 - 9*d*n1 + d^2*n1 - 40*n2 + 40*d*n2 - 
      9*d^2*n2 - 6*n1*n2 + 3*d*n1*n2 - 36*n2^2 + 14*d*n2^2 - 4*n1*n2^2 - 
      4*n2^3 + 206*n3 - 141*d*n3 + 27*d^2*n3 - d^3*n3 + 32*n1*n3 - 
      13*d*n1*n3 + d^2*n1*n3 - 20*n2*n3 + 35*d*n2*n3 - 9*d^2*n2*n3 - 
      4*n1*n2*n3 + 3*d*n1*n2*n3 - 38*n2^2*n3 + 14*d*n2^2*n3 - 4*n1*n2^2*n3 - 
      4*n2^3*n3 + 138*n3^2 - 76*d*n3^2 + 10*d^2*n3^2 + 16*n1*n3^2 - 
      4*d*n1*n3^2 + 24*n2*n3^2 - 5*d*n2*n3^2 + 2*n1*n2*n3^2 - 2*n2^2*n3^2 + 
      30*n3^3 - 9*d*n3^3 + 2*n1*n3^3 + 4*n2*n3^3 + 2*n3^4 + 18*n5 - 9*d*n5 + 
      d^2*n5 + 3*n1*n5 - d*n1*n5 - 6*n2*n5 + 3*d*n2*n5 + n1*n2*n5 - 
      4*n2^2*n5 + 32*n3*n5 - 13*d*n3*n5 + d^2*n3*n5 + 3*n1*n3*n5 - 
      d*n1*n3*n5 - 4*n2*n3*n5 + 3*d*n2*n3*n5 + n1*n2*n3*n5 - 4*n2^2*n3*n5 + 
      16*n3^2*n5 - 4*d*n3^2*n5 + 2*n2*n3^2*n5 + 2*n3^3*n5)*
     j[p4, n1, n2, 2 + n3, 0, n5, 1, 0, 1, 0, 0, 1, -1, 1, 1])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((-96 + 104*d - 36*d^2 + 4*d^3 - 8*n1 + 6*d*n1 - d^2*n1 - 16*n2 + 
      12*d*n2 - 2*d^2*n2 - 160*n3 + 156*d*n3 - 46*d^2*n3 + 4*d^3*n3 - 
      12*n1*n3 + 8*d*n1*n3 - d^2*n1*n3 - 24*n2*n3 + 16*d*n2*n3 - 
      2*d^2*n2*n3 - 72*n3^2 + 56*d*n3^2 - 10*d^2*n3^2 - 4*n1*n3^2 + 
      2*d*n1*n3^2 - 8*n2*n3^2 + 4*d*n2*n3^2 - 8*n3^3 + 4*d*n3^3 - 64*n5 + 
      40*d*n5 - 6*d^2*n5 - 4*n1*n5 + d*n1*n5 - 8*n2*n5 + 2*d*n2*n5 - 
      104*n3*n5 + 54*d*n3*n5 - 6*d^2*n3*n5 - 6*n1*n3*n5 + d*n1*n3*n5 - 
      12*n2*n3*n5 + 2*d*n2*n3*n5 - 44*n3^2*n5 + 14*d*n3^2*n5 - 2*n1*n3^2*n5 - 
      4*n2*n3^2*n5 - 4*n3^3*n5 - 8*n5^2 + 2*d*n5^2 - 12*n3*n5^2 + 
      2*d*n3*n5^2 - 4*n3^2*n5^2)*j[p4, n1, n2, 2 + n3, 0, n5, 1, 1, 1, 0, -1, 
      1, 0, 0, 1])/(832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 
     64*d*n1 + 24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 
     62*d^3*n2 + 132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 
     448*d*n2^2 + 82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 
     44*d*n2^3 + 8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 
     31*d^3*n3 + 32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 
     490*d*n2*n3 + 92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((96 - 104*d + 36*d^2 - 4*d^3 + 8*n1 - 6*d*n1 + d^2*n1 + 16*n2 - 12*d*n2 + 
      2*d^2*n2 + 160*n3 - 156*d*n3 + 46*d^2*n3 - 4*d^3*n3 + 12*n1*n3 - 
      8*d*n1*n3 + d^2*n1*n3 + 24*n2*n3 - 16*d*n2*n3 + 2*d^2*n2*n3 + 72*n3^2 - 
      56*d*n3^2 + 10*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 8*n2*n3^2 - 
      4*d*n2*n3^2 + 8*n3^3 - 4*d*n3^3 + 64*n5 - 40*d*n5 + 6*d^2*n5 + 
      4*n1*n5 - d*n1*n5 + 8*n2*n5 - 2*d*n2*n5 + 104*n3*n5 - 54*d*n3*n5 + 
      6*d^2*n3*n5 + 6*n1*n3*n5 - d*n1*n3*n5 + 12*n2*n3*n5 - 2*d*n2*n3*n5 + 
      44*n3^2*n5 - 14*d*n3^2*n5 + 2*n1*n3^2*n5 + 4*n2*n3^2*n5 + 4*n3^3*n5 + 
      8*n5^2 - 2*d*n5^2 + 12*n3*n5^2 - 2*d*n3*n5^2 + 4*n3^2*n5^2)*
     j[p4, n1, n2, 2 + n3, 0, n5, 1, 1, 1, 0, -1, 1, 0, 1, 0])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((-96 + 74*d - 17*d^2 + d^3 - 18*n1 + 9*d*n1 - d^2*n1 + 40*n2 - 40*d*n2 + 
      9*d^2*n2 + 6*n1*n2 - 3*d*n1*n2 + 36*n2^2 - 14*d*n2^2 + 4*n1*n2^2 + 
      4*n2^3 - 206*n3 + 141*d*n3 - 27*d^2*n3 + d^3*n3 - 32*n1*n3 + 
      13*d*n1*n3 - d^2*n1*n3 + 20*n2*n3 - 35*d*n2*n3 + 9*d^2*n2*n3 + 
      4*n1*n2*n3 - 3*d*n1*n2*n3 + 38*n2^2*n3 - 14*d*n2^2*n3 + 4*n1*n2^2*n3 + 
      4*n2^3*n3 - 138*n3^2 + 76*d*n3^2 - 10*d^2*n3^2 - 16*n1*n3^2 + 
      4*d*n1*n3^2 - 24*n2*n3^2 + 5*d*n2*n3^2 - 2*n1*n2*n3^2 + 2*n2^2*n3^2 - 
      30*n3^3 + 9*d*n3^3 - 2*n1*n3^3 - 4*n2*n3^3 - 2*n3^4 - 18*n5 + 9*d*n5 - 
      d^2*n5 - 3*n1*n5 + d*n1*n5 + 6*n2*n5 - 3*d*n2*n5 - n1*n2*n5 + 
      4*n2^2*n5 - 32*n3*n5 + 13*d*n3*n5 - d^2*n3*n5 - 3*n1*n3*n5 + 
      d*n1*n3*n5 + 4*n2*n3*n5 - 3*d*n2*n3*n5 - n1*n2*n3*n5 + 4*n2^2*n3*n5 - 
      16*n3^2*n5 + 4*d*n3^2*n5 - 2*n2*n3^2*n5 - 2*n3^3*n5)*
     j[p4, n1, n2, 2 + n3, 0, n5, 1, 1, 1, 0, 0, 1, -1, 0, 1])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((-16 + 20*d - 8*d^2 + d^3 - 8*n1 + 6*d*n1 - d^2*n1 - 24*n3 + 28*d*n3 - 
      10*d^2*n3 + d^3*n3 - 12*n1*n3 + 8*d*n1*n3 - d^2*n1*n3 - 8*n3^2 + 
      8*d*n3^2 - 2*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 8*n5 + 6*d*n5 - 
      d^2*n5 - 4*n1*n5 + d*n1*n5 - 12*n3*n5 + 8*d*n3*n5 - d^2*n3*n5 - 
      6*n1*n3*n5 + d*n1*n3*n5 - 4*n3^2*n5 + 2*d*n3^2*n5 - 2*n1*n3^2*n5)*
     j[p4, n1, n2, 2 + n3, 0, n5, 1, 1, 1, 0, 0, 1, 0, 1, 0])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((-16*n2 + 20*d*n2 - 8*d^2*n2 + d^3*n2 - 8*n1*n2 + 6*d*n1*n2 - d^2*n1*n2 - 
      8*n2*n3 + 8*d*n2*n3 - 2*d^2*n2*n3 - 4*n1*n2*n3 + 2*d*n1*n2*n3 - 
      8*n2*n5 + 6*d*n2*n5 - d^2*n2*n5 - 4*n1*n2*n5 + d*n1*n2*n5 - 
      4*n2*n3*n5 + 2*d*n2*n3*n5 - 2*n1*n2*n3*n5)*j[p4, n1, 1 + n2, n3, 0, n5, 
      0, 1, 1, 0, 0, 1, 0, 1, 1])/(832 - 1240*d + 684*d^2 - 166*d^3 + 
     15*d^4 + 56*n1 - 64*d*n1 + 24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 
     510*d^2*n2 - 62*d^3*n2 + 132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 
     608*n2^2 - 448*d*n2^2 + 82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 
     120*n2^3 - 44*d*n2^3 + 8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 
     250*d^2*n3 - 31*d^3*n3 + 32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 
     644*n2*n3 - 490*d*n2*n3 + 92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 
     208*n2^2*n3 - 78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 
     100*d*n3^2 + 20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 
     38*d*n2*n3^2 + 4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 
     4*n2*n3^3 + 504*n5 - 508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - 
     d^2*n1*n5 + 532*n2*n5 - 370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 
     8*d*n1*n2*n5 + 164*n2^2*n5 - 58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 
     340*n3*n5 - 232*d*n3*n5 + 39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 
     220*n2*n3*n5 - 78*d*n2*n3*n5 + 8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 
     68*n3^2*n5 - 24*d*n3^2*n5 + 2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 
     44*n5^2 - 26*d*n5^2 + 4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 
     44*n2*n5^2 - 14*d*n2*n5^2 - 2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 
     8*d*n3*n5^2 - 4*n1*n3*n5^2 + 12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((112*n2 - 94*d*n2 + 25*d^2*n2 - 2*d^3*n2 + 26*n1*n2 - 15*d*n1*n2 + 
      2*d^2*n1*n2 - 40*n2^2 + 40*d*n2^2 - 9*d^2*n2^2 - 6*n1*n2^2 + 
      3*d*n1*n2^2 - 36*n2^3 + 14*d*n2^3 - 4*n1*n2^3 - 4*n2^4 + 118*n2*n3 - 
      75*d*n2*n3 + 12*d^2*n2*n3 + 18*n1*n2*n3 - 6*d*n1*n2*n3 + 20*n2^2*n3 - 
      5*d*n2^2*n3 + 2*n1*n2^2*n3 - 2*n2^3*n3 + 28*n2*n3^2 - 9*d*n2*n3^2 + 
      2*n1*n2*n3^2 + 4*n2^2*n3^2 + 2*n2*n3^3 + 26*n2*n5 - 15*d*n2*n5 + 
      2*d^2*n2*n5 + 7*n1*n2*n5 - 2*d*n1*n2*n5 - 6*n2^2*n5 + 3*d*n2^2*n5 + 
      n1*n2^2*n5 - 4*n2^3*n5 + 18*n2*n3*n5 - 6*d*n2*n3*n5 + 2*n1*n2*n3*n5 + 
      2*n2^2*n3*n5 + 2*n2*n3^2*n5)*j[p4, n1, 1 + n2, n3, 0, n5, 1, 0, 1, 0, 
      0, 1, 0, 1, 1])/(832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 
     64*d*n1 + 24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 
     62*d^3*n2 + 132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 
     448*d*n2^2 + 82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 
     44*d*n2^3 + 8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 
     31*d^3*n3 + 32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 
     490*d*n2*n3 + 92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((-112*n2 + 94*d*n2 - 25*d^2*n2 + 2*d^3*n2 - 26*n1*n2 + 15*d*n1*n2 - 
      2*d^2*n1*n2 + 40*n2^2 - 40*d*n2^2 + 9*d^2*n2^2 + 6*n1*n2^2 - 
      3*d*n1*n2^2 + 36*n2^3 - 14*d*n2^3 + 4*n1*n2^3 + 4*n2^4 - 118*n2*n3 + 
      75*d*n2*n3 - 12*d^2*n2*n3 - 18*n1*n2*n3 + 6*d*n1*n2*n3 - 20*n2^2*n3 + 
      5*d*n2^2*n3 - 2*n1*n2^2*n3 + 2*n2^3*n3 - 28*n2*n3^2 + 9*d*n2*n3^2 - 
      2*n1*n2*n3^2 - 4*n2^2*n3^2 - 2*n2*n3^3 - 26*n2*n5 + 15*d*n2*n5 - 
      2*d^2*n2*n5 - 7*n1*n2*n5 + 2*d*n1*n2*n5 + 6*n2^2*n5 - 3*d*n2^2*n5 - 
      n1*n2^2*n5 + 4*n2^3*n5 - 18*n2*n3*n5 + 6*d*n2*n3*n5 - 2*n1*n2*n3*n5 - 
      2*n2^2*n3*n5 - 2*n2*n3^2*n5)*j[p4, n1, 1 + n2, n3, 0, n5, 1, 1, 0, 0, 
      0, 1, 0, 1, 1])/(832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 
     64*d*n1 + 24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 
     62*d^3*n2 + 132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 
     448*d*n2^2 + 82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 
     44*d*n2^3 + 8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 
     31*d^3*n3 + 32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 
     490*d*n2*n3 + 92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((-96*n2 + 104*d*n2 - 36*d^2*n2 + 4*d^3*n2 - 8*n1*n2 + 6*d*n1*n2 - 
      d^2*n1*n2 - 16*n2^2 + 12*d*n2^2 - 2*d^2*n2^2 - 64*n2*n3 + 52*d*n2*n3 - 
      10*d^2*n2*n3 - 4*n1*n2*n3 + 2*d*n1*n2*n3 - 8*n2^2*n3 + 4*d*n2^2*n3 - 
      8*n2*n3^2 + 4*d*n2*n3^2 - 64*n2*n5 + 40*d*n2*n5 - 6*d^2*n2*n5 - 
      4*n1*n2*n5 + d*n1*n2*n5 - 8*n2^2*n5 + 2*d*n2^2*n5 - 40*n2*n3*n5 + 
      14*d*n2*n3*n5 - 2*n1*n2*n3*n5 - 4*n2^2*n3*n5 - 4*n2*n3^2*n5 - 
      8*n2*n5^2 + 2*d*n2*n5^2 - 4*n2*n3*n5^2)*j[p4, n1, 1 + n2, 1 + n3, 0, 
      -1 + n5, 1, 0, 1, 0, 0, 1, 0, 1, 1])/(832 - 1240*d + 684*d^2 - 
     166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 
     1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 132*n1*n2 - 98*d*n1*n2 + 
     18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 82*d^2*n2^2 + 60*n1*n2^2 - 
     22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 8*n1*n2^3 + 8*n2^4 + 568*n3 - 
     660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 32*n1*n3 - 26*d*n1*n3 + 
     5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 92*d^2*n2*n3 + 52*n1*n2*n3 - 
     20*d*n1*n2*n3 + 208*n2^2*n3 - 78*d*n2^2*n3 + 12*n1*n2^2*n3 + 
     20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 20*d^2*n3^2 + 4*n1*n3^2 - 
     2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 4*n1*n2*n3^2 + 16*n2^2*n3^2 + 
     8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 508*d*n5 + 170*d^2*n5 - 
     19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 370*d*n2*n5 + 
     64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 58*d*n2^2*n5 + 
     6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 39*d^2*n3*n5 + 
     8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 8*n1*n2*n3*n5 + 
     32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 2*n1*n3^2*n5 + 
     20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 4*d^2*n5^2 - 
     14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 2*n1*n2*n5^2 + 
     8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 12*n2*n3*n5^2 + 
     4*n3^2*n5^2) + ((128*n2 - 144*d*n2 + 52*d^2*n2 - 6*d^3*n2 + 24*n1*n2 - 
      18*d*n1*n2 + 3*d^2*n1*n2 + 16*n2^2 - 12*d*n2^2 + 2*d^2*n2^2 + 
      80*n2*n3 - 68*d*n2*n3 + 14*d^2*n2*n3 + 12*n1*n2*n3 - 6*d*n1*n2*n3 + 
      8*n2^2*n3 - 4*d*n2^2*n3 + 8*n2*n3^2 - 4*d*n2*n3^2 + 80*n2*n5 - 
      52*d*n2*n5 + 8*d^2*n2*n5 + 12*n1*n2*n5 - 3*d*n1*n2*n5 + 8*n2^2*n5 - 
      2*d*n2^2*n5 + 48*n2*n3*n5 - 18*d*n2*n3*n5 + 6*n1*n2*n3*n5 + 
      4*n2^2*n3*n5 + 4*n2*n3^2*n5 + 8*n2*n5^2 - 2*d*n2*n5^2 + 4*n2*n3*n5^2)*
     j[p4, n1, 1 + n2, 1 + n3, 0, -1 + n5, 1, 1, 0, 0, 0, 1, 0, 1, 1])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((32*n2 - 40*d*n2 + 16*d^2*n2 - 2*d^3*n2 + 16*n1*n2 - 12*d*n1*n2 + 
      2*d^2*n1*n2 + 16*n2*n3 - 16*d*n2*n3 + 4*d^2*n2*n3 + 8*n1*n2*n3 - 
      4*d*n1*n2*n3 + 16*n2*n5 - 12*d*n2*n5 + 2*d^2*n2*n5 + 8*n1*n2*n5 - 
      2*d*n1*n2*n5 + 8*n2*n3*n5 - 4*d*n2*n3*n5 + 4*n1*n2*n3*n5)*
     j[p4, n1, 1 + n2, 1 + n3, 0, -1 + n5, 1, 1, 1, 0, 0, 1, 0, 0, 1])/
    (832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 56*n1 - 64*d*n1 + 
     24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 510*d^2*n2 - 62*d^3*n2 + 
     132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 608*n2^2 - 448*d*n2^2 + 
     82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 120*n2^3 - 44*d*n2^3 + 
     8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 250*d^2*n3 - 31*d^3*n3 + 
     32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 644*n2*n3 - 490*d*n2*n3 + 
     92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 208*n2^2*n3 - 
     78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 100*d*n3^2 + 
     20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 38*d*n2*n3^2 + 
     4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 4*n2*n3^3 + 504*n5 - 
     508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - d^2*n1*n5 + 532*n2*n5 - 
     370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 8*d*n1*n2*n5 + 164*n2^2*n5 - 
     58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 340*n3*n5 - 232*d*n3*n5 + 
     39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 220*n2*n3*n5 - 78*d*n2*n3*n5 + 
     8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 68*n3^2*n5 - 24*d*n3^2*n5 + 
     2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 44*n5^2 - 26*d*n5^2 + 
     4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 44*n2*n5^2 - 14*d*n2*n5^2 - 
     2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 8*d*n3*n5^2 - 4*n1*n3*n5^2 + 
     12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((-96*n2 + 104*d*n2 - 36*d^2*n2 + 4*d^3*n2 - 8*n1*n2 + 6*d*n1*n2 - 
      d^2*n1*n2 - 16*n2^2 + 12*d*n2^2 - 2*d^2*n2^2 - 64*n2*n3 + 52*d*n2*n3 - 
      10*d^2*n2*n3 - 4*n1*n2*n3 + 2*d*n1*n2*n3 - 8*n2^2*n3 + 4*d*n2^2*n3 - 
      8*n2*n3^2 + 4*d*n2*n3^2 - 64*n2*n5 + 40*d*n2*n5 - 6*d^2*n2*n5 - 
      4*n1*n2*n5 + d*n1*n2*n5 - 8*n2^2*n5 + 2*d*n2^2*n5 - 40*n2*n3*n5 + 
      14*d*n2*n3*n5 - 2*n1*n2*n3*n5 - 4*n2^2*n3*n5 - 4*n2*n3^2*n5 - 
      8*n2*n5^2 + 2*d*n2*n5^2 - 4*n2*n3*n5^2)*j[p4, n1, 1 + n2, 1 + n3, 0, 
      n5, 0, 1, 1, 0, -1, 1, 0, 1, 1])/(832 - 1240*d + 684*d^2 - 166*d^3 + 
     15*d^4 + 56*n1 - 64*d*n1 + 24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 
     510*d^2*n2 - 62*d^3*n2 + 132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 
     608*n2^2 - 448*d*n2^2 + 82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 
     120*n2^3 - 44*d*n2^3 + 8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 
     250*d^2*n3 - 31*d^3*n3 + 32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 
     644*n2*n3 - 490*d*n2*n3 + 92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 
     208*n2^2*n3 - 78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 
     100*d*n3^2 + 20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 
     38*d*n2*n3^2 + 4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 
     4*n2*n3^3 + 504*n5 - 508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - 
     d^2*n1*n5 + 532*n2*n5 - 370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 
     8*d*n1*n2*n5 + 164*n2^2*n5 - 58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 
     340*n3*n5 - 232*d*n3*n5 + 39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 
     220*n2*n3*n5 - 78*d*n2*n3*n5 + 8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 
     68*n3^2*n5 - 24*d*n3^2*n5 + 2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 
     44*n5^2 - 26*d*n5^2 + 4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 
     44*n2*n5^2 - 14*d*n2*n5^2 - 2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 
     8*d*n3*n5^2 - 4*n1*n3*n5^2 + 12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((-16*n2 + 20*d*n2 - 8*d^2*n2 + d^3*n2 - 8*n1*n2 + 6*d*n1*n2 - d^2*n1*n2 - 
      8*n2*n3 + 8*d*n2*n3 - 2*d^2*n2*n3 - 4*n1*n2*n3 + 2*d*n1*n2*n3 - 
      8*n2*n5 + 6*d*n2*n5 - d^2*n2*n5 - 4*n1*n2*n5 + d*n1*n2*n5 - 
      4*n2*n3*n5 + 2*d*n2*n3*n5 - 2*n1*n2*n3*n5)*j[p4, n1, 1 + n2, 1 + n3, 0, 
      n5, 0, 1, 1, 0, 0, 1, -1, 1, 1])/(832 - 1240*d + 684*d^2 - 166*d^3 + 
     15*d^4 + 56*n1 - 64*d*n1 + 24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 
     510*d^2*n2 - 62*d^3*n2 + 132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 
     608*n2^2 - 448*d*n2^2 + 82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 
     120*n2^3 - 44*d*n2^3 + 8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 
     250*d^2*n3 - 31*d^3*n3 + 32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 
     644*n2*n3 - 490*d*n2*n3 + 92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 
     208*n2^2*n3 - 78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 
     100*d*n3^2 + 20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 
     38*d*n2*n3^2 + 4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 
     4*n2*n3^3 + 504*n5 - 508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - 
     d^2*n1*n5 + 532*n2*n5 - 370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 
     8*d*n1*n2*n5 + 164*n2^2*n5 - 58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 
     340*n3*n5 - 232*d*n3*n5 + 39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 
     220*n2*n3*n5 - 78*d*n2*n3*n5 + 8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 
     68*n3^2*n5 - 24*d*n3^2*n5 + 2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 
     44*n5^2 - 26*d*n5^2 + 4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 
     44*n2*n5^2 - 14*d*n2*n5^2 - 2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 
     8*d*n3*n5^2 - 4*n1*n3*n5^2 + 12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((112*n2 - 94*d*n2 + 25*d^2*n2 - 2*d^3*n2 + 26*n1*n2 - 15*d*n1*n2 + 
      2*d^2*n1*n2 - 40*n2^2 + 40*d*n2^2 - 9*d^2*n2^2 - 6*n1*n2^2 + 
      3*d*n1*n2^2 - 36*n2^3 + 14*d*n2^3 - 4*n1*n2^3 - 4*n2^4 + 118*n2*n3 - 
      75*d*n2*n3 + 12*d^2*n2*n3 + 18*n1*n2*n3 - 6*d*n1*n2*n3 + 20*n2^2*n3 - 
      5*d*n2^2*n3 + 2*n1*n2^2*n3 - 2*n2^3*n3 + 28*n2*n3^2 - 9*d*n2*n3^2 + 
      2*n1*n2*n3^2 + 4*n2^2*n3^2 + 2*n2*n3^3 + 26*n2*n5 - 15*d*n2*n5 + 
      2*d^2*n2*n5 + 7*n1*n2*n5 - 2*d*n1*n2*n5 - 6*n2^2*n5 + 3*d*n2^2*n5 + 
      n1*n2^2*n5 - 4*n2^3*n5 + 18*n2*n3*n5 - 6*d*n2*n3*n5 + 2*n1*n2*n3*n5 + 
      2*n2^2*n3*n5 + 2*n2*n3^2*n5)*j[p4, n1, 1 + n2, 1 + n3, 0, n5, 1, 0, 1, 
      0, 0, 1, -1, 1, 1])/(832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 
     56*n1 - 64*d*n1 + 24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 
     510*d^2*n2 - 62*d^3*n2 + 132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 
     608*n2^2 - 448*d*n2^2 + 82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 
     120*n2^3 - 44*d*n2^3 + 8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 
     250*d^2*n3 - 31*d^3*n3 + 32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 
     644*n2*n3 - 490*d*n2*n3 + 92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 
     208*n2^2*n3 - 78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 
     100*d*n3^2 + 20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 
     38*d*n2*n3^2 + 4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 
     4*n2*n3^3 + 504*n5 - 508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - 
     d^2*n1*n5 + 532*n2*n5 - 370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 
     8*d*n1*n2*n5 + 164*n2^2*n5 - 58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 
     340*n3*n5 - 232*d*n3*n5 + 39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 
     220*n2*n3*n5 - 78*d*n2*n3*n5 + 8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 
     68*n3^2*n5 - 24*d*n3^2*n5 + 2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 
     44*n5^2 - 26*d*n5^2 + 4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 
     44*n2*n5^2 - 14*d*n2*n5^2 - 2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 
     8*d*n3*n5^2 - 4*n1*n3*n5^2 + 12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((-112*n2 + 94*d*n2 - 25*d^2*n2 + 2*d^3*n2 - 26*n1*n2 + 15*d*n1*n2 - 
      2*d^2*n1*n2 + 40*n2^2 - 40*d*n2^2 + 9*d^2*n2^2 + 6*n1*n2^2 - 
      3*d*n1*n2^2 + 36*n2^3 - 14*d*n2^3 + 4*n1*n2^3 + 4*n2^4 - 118*n2*n3 + 
      75*d*n2*n3 - 12*d^2*n2*n3 - 18*n1*n2*n3 + 6*d*n1*n2*n3 - 20*n2^2*n3 + 
      5*d*n2^2*n3 - 2*n1*n2^2*n3 + 2*n2^3*n3 - 28*n2*n3^2 + 9*d*n2*n3^2 - 
      2*n1*n2*n3^2 - 4*n2^2*n3^2 - 2*n2*n3^3 - 26*n2*n5 + 15*d*n2*n5 - 
      2*d^2*n2*n5 - 7*n1*n2*n5 + 2*d*n1*n2*n5 + 6*n2^2*n5 - 3*d*n2^2*n5 - 
      n1*n2^2*n5 + 4*n2^3*n5 - 18*n2*n3*n5 + 6*d*n2*n3*n5 - 2*n1*n2*n3*n5 - 
      2*n2^2*n3*n5 - 2*n2*n3^2*n5)*j[p4, n1, 1 + n2, 1 + n3, 0, n5, 1, 1, 0, 
      0, 0, 1, -1, 1, 1])/(832 - 1240*d + 684*d^2 - 166*d^3 + 15*d^4 + 
     56*n1 - 64*d*n1 + 24*d^2*n1 - 3*d^3*n1 + 1248*n2 - 1388*d*n2 + 
     510*d^2*n2 - 62*d^3*n2 + 132*n1*n2 - 98*d*n1*n2 + 18*d^2*n1*n2 + 
     608*n2^2 - 448*d*n2^2 + 82*d^2*n2^2 + 60*n1*n2^2 - 22*d*n1*n2^2 + 
     120*n2^3 - 44*d*n2^3 + 8*n1*n2^3 + 8*n2^4 + 568*n3 - 660*d*n3 + 
     250*d^2*n3 - 31*d^3*n3 + 32*n1*n3 - 26*d*n1*n3 + 5*d^2*n1*n3 + 
     644*n2*n3 - 490*d*n2*n3 + 92*d^2*n2*n3 + 52*n1*n2*n3 - 20*d*n1*n2*n3 + 
     208*n2^2*n3 - 78*d*n2^2*n3 + 12*n1*n2^2*n3 + 20*n2^3*n3 + 120*n3^2 - 
     100*d*n3^2 + 20*d^2*n3^2 + 4*n1*n3^2 - 2*d*n1*n3^2 + 96*n2*n3^2 - 
     38*d*n2*n3^2 + 4*n1*n2*n3^2 + 16*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 
     4*n2*n3^3 + 504*n5 - 508*d*n5 + 170*d^2*n5 - 19*d^3*n5 + 4*d*n1*n5 - 
     d^2*n1*n5 + 532*n2*n5 - 370*d*n2*n5 + 64*d^2*n2*n5 + 26*n1*n2*n5 - 
     8*d*n1*n2*n5 + 164*n2^2*n5 - 58*d*n2^2*n5 + 6*n1*n2^2*n5 + 16*n2^3*n5 + 
     340*n3*n5 - 232*d*n3*n5 + 39*d^2*n3*n5 + 8*n1*n3*n5 - d*n1*n3*n5 + 
     220*n2*n3*n5 - 78*d*n2*n3*n5 + 8*n1*n2*n3*n5 + 32*n2^2*n3*n5 + 
     68*n3^2*n5 - 24*d*n3^2*n5 + 2*n1*n3^2*n5 + 20*n2*n3^2*n5 + 4*n3^3*n5 + 
     44*n5^2 - 26*d*n5^2 + 4*d^2*n5^2 - 14*n1*n5^2 + 4*d*n1*n5^2 + 
     44*n2*n5^2 - 14*d*n2*n5^2 - 2*n1*n2*n5^2 + 8*n2^2*n5^2 + 28*n3*n5^2 - 
     8*d*n3*n5^2 - 4*n1*n3*n5^2 + 12*n2*n3*n5^2 + 4*n3^2*n5^2) + 
   ((-16*n1 + 20*d*n1 - 8*d^2*n1 + d^3*n1 - 8*n1^2 + 6*d*n1^2 - d^2*n1^2 - 
      8*n1*n3 + 8*d*n1*n3 - 2*d^2*n1*n3 - 4*n1^2*n3 + 2*d*n1^2*n3 - 8*n1*n5 + 
      6*d*n1*n5 - d^2*n1*n5 - 4*n1^2*n5 + d*n1^2*n5 - 4*n1*n3*n5 + 
      2*d*n1*n3*n5 - 2*n1^2*n3*n5)*j[p4, 1 + n1, n2, 1 + n3, 0, -1 + n5, 1, 
      1, 1, 0, 0, 1, 0, 0, 1])/(-832 + 1240*d - 684*d^2 + 166*d^3 - 15*d^4 - 
     56*n1 + 64*d*n1 - 24*d^2*n1 + 3*d^3*n1 - 1248*n2 + 1388*d*n2 - 
     510*d^2*n2 + 62*d^3*n2 - 132*n1*n2 + 98*d*n1*n2 - 18*d^2*n1*n2 - 
     608*n2^2 + 448*d*n2^2 - 82*d^2*n2^2 - 60*n1*n2^2 + 22*d*n1*n2^2 - 
     120*n2^3 + 44*d*n2^3 - 8*n1*n2^3 - 8*n2^4 - 568*n3 + 660*d*n3 - 
     250*d^2*n3 + 31*d^3*n3 - 32*n1*n3 + 26*d*n1*n3 - 5*d^2*n1*n3 - 
     644*n2*n3 + 490*d*n2*n3 - 92*d^2*n2*n3 - 52*n1*n2*n3 + 20*d*n1*n2*n3 - 
     208*n2^2*n3 + 78*d*n2^2*n3 - 12*n1*n2^2*n3 - 20*n2^3*n3 - 120*n3^2 + 
     100*d*n3^2 - 20*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 96*n2*n3^2 + 
     38*d*n2*n3^2 - 4*n1*n2*n3^2 - 16*n2^2*n3^2 - 8*n3^3 + 4*d*n3^3 - 
     4*n2*n3^3 - 504*n5 + 508*d*n5 - 170*d^2*n5 + 19*d^3*n5 - 4*d*n1*n5 + 
     d^2*n1*n5 - 532*n2*n5 + 370*d*n2*n5 - 64*d^2*n2*n5 - 26*n1*n2*n5 + 
     8*d*n1*n2*n5 - 164*n2^2*n5 + 58*d*n2^2*n5 - 6*n1*n2^2*n5 - 16*n2^3*n5 - 
     340*n3*n5 + 232*d*n3*n5 - 39*d^2*n3*n5 - 8*n1*n3*n5 + d*n1*n3*n5 - 
     220*n2*n3*n5 + 78*d*n2*n3*n5 - 8*n1*n2*n3*n5 - 32*n2^2*n3*n5 - 
     68*n3^2*n5 + 24*d*n3^2*n5 - 2*n1*n3^2*n5 - 20*n2*n3^2*n5 - 4*n3^3*n5 - 
     44*n5^2 + 26*d*n5^2 - 4*d^2*n5^2 + 14*n1*n5^2 - 4*d*n1*n5^2 - 
     44*n2*n5^2 + 14*d*n2*n5^2 + 2*n1*n2*n5^2 - 8*n2^2*n5^2 - 28*n3*n5^2 + 
     8*d*n3*n5^2 + 4*n1*n3*n5^2 - 12*n2*n3*n5^2 - 4*n3^2*n5^2) + 
   ((16*n1 - 20*d*n1 + 8*d^2*n1 - d^3*n1 + 8*n1^2 - 6*d*n1^2 + d^2*n1^2 + 
      8*n1*n3 - 8*d*n1*n3 + 2*d^2*n1*n3 + 4*n1^2*n3 - 2*d*n1^2*n3 + 8*n1*n5 - 
      6*d*n1*n5 + d^2*n1*n5 + 4*n1^2*n5 - d*n1^2*n5 + 4*n1*n3*n5 - 
      2*d*n1*n3*n5 + 2*n1^2*n3*n5)*j[p4, 1 + n1, n2, 1 + n3, 0, n5, 1, 1, 1, 
      -1, 0, 1, 0, 0, 1])/(-832 + 1240*d - 684*d^2 + 166*d^3 - 15*d^4 - 
     56*n1 + 64*d*n1 - 24*d^2*n1 + 3*d^3*n1 - 1248*n2 + 1388*d*n2 - 
     510*d^2*n2 + 62*d^3*n2 - 132*n1*n2 + 98*d*n1*n2 - 18*d^2*n1*n2 - 
     608*n2^2 + 448*d*n2^2 - 82*d^2*n2^2 - 60*n1*n2^2 + 22*d*n1*n2^2 - 
     120*n2^3 + 44*d*n2^3 - 8*n1*n2^3 - 8*n2^4 - 568*n3 + 660*d*n3 - 
     250*d^2*n3 + 31*d^3*n3 - 32*n1*n3 + 26*d*n1*n3 - 5*d^2*n1*n3 - 
     644*n2*n3 + 490*d*n2*n3 - 92*d^2*n2*n3 - 52*n1*n2*n3 + 20*d*n1*n2*n3 - 
     208*n2^2*n3 + 78*d*n2^2*n3 - 12*n1*n2^2*n3 - 20*n2^3*n3 - 120*n3^2 + 
     100*d*n3^2 - 20*d^2*n3^2 - 4*n1*n3^2 + 2*d*n1*n3^2 - 96*n2*n3^2 + 
     38*d*n2*n3^2 - 4*n1*n2*n3^2 - 16*n2^2*n3^2 - 8*n3^3 + 4*d*n3^3 - 
     4*n2*n3^3 - 504*n5 + 508*d*n5 - 170*d^2*n5 + 19*d^3*n5 - 4*d*n1*n5 + 
     d^2*n1*n5 - 532*n2*n5 + 370*d*n2*n5 - 64*d^2*n2*n5 - 26*n1*n2*n5 + 
     8*d*n1*n2*n5 - 164*n2^2*n5 + 58*d*n2^2*n5 - 6*n1*n2^2*n5 - 16*n2^3*n5 - 
     340*n3*n5 + 232*d*n3*n5 - 39*d^2*n3*n5 - 8*n1*n3*n5 + d*n1*n3*n5 - 
     220*n2*n3*n5 + 78*d*n2*n3*n5 - 8*n1*n2*n3*n5 - 32*n2^2*n3*n5 - 
     68*n3^2*n5 + 24*d*n3^2*n5 - 2*n1*n3^2*n5 - 20*n2*n3^2*n5 - 4*n3^3*n5 - 
     44*n5^2 + 26*d*n5^2 - 4*d^2*n5^2 + 14*n1*n5^2 - 4*d*n1*n5^2 - 
     44*n2*n5^2 + 14*d*n2*n5^2 + 2*n1*n2*n5^2 - 8*n2^2*n5^2 - 28*n3*n5^2 + 
     8*d*n3*n5^2 + 4*n1*n3*n5^2 - 12*n2*n3*n5^2 - 4*n3^2*n5^2), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 0 && n12 == 0 && n14 == 1 && n3 == 0 && n5 == 1 && 
    n6 == 1 && n7 == 1 && n8 == 1 && n9 == 0 && n4 != 0 -> 
  j[p4, 0, -1 + n2, 0, 1 + n4, 0, 1, 2, 1, 0, 0, n11, 0, n13, 1]/
    (-2 + d - 2*n2) + ((-4 + d - 2*n4)*j[p4, 0, -1 + n2, 0, 1 + n4, 1, 1, 1, 
      1, 0, 0, n11, 0, n13, 1])/(-2 + d - 2*n2) + 
   j[p4, 0, -1 + n2, 0, 1 + n4, 1, 2, 1, 0, 0, 0, n11, 0, n13, 1]/
    (-2 + d - 2*n2) - j[p4, 0, n2, 0, n4, 0, 2, 1, 1, 0, 0, n11, 0, n13, 1]/
    (-2 + d - 2*n2) - j[p4, 0, n2, 0, n4, 1, 1, 2, 0, 0, 0, n11, 0, n13, 1]/
    (-2 + d - 2*n2) + ((-1 + n2 - n4)*j[p4, 0, n2, 0, 1 + n4, 0, 1, 1, 1, 0, 
      0, n11, 0, n13, 1])/(-2 + d - 2*n2) + 
   ((1 - n2 + n4)*j[p4, 0, n2, 0, 1 + n4, 1, 0, 1, 1, 0, 0, n11, 0, n13, 1])/
    (-2 + d - 2*n2) + ((1 - n2 + n4)*j[p4, 0, n2, 0, 1 + n4, 1, 1, 0, 1, 0, 
      0, n11, 0, n13, 1])/(-2 + d - 2*n2) + 
   ((-1 + n2 - n4)*j[p4, 0, n2, 0, 1 + n4, 1, 1, 1, 0, 0, 0, n11, 0, n13, 1])/
    (-2 + d - 2*n2), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?NonPositive, (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, 
    (n7_)?Positive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 0 && n12 == 0 && n13 == 1 && n14 == 1 && n5 == 1 && 
    n6 == 1 && n7 == 1 && n8 == 1 && n9 == 0 && n4 != 0 -> 
  j[p4, 0, -1 + n2, n3, 1 + n4, 0, 1, 1, 1, 0, 0, n11, 0, 1, 2]/
    (-4 + d - n4) + j[p4, 0, -1 + n2, n3, 1 + n4, 1, 1, 1, 1, 0, 0, n11, 0, 
     0, 2]/(4 - d + n4) + ((7 - 2*d + n2 + n3 + 2*n4)*
     j[p4, 0, -1 + n2, n3, 1 + n4, 1, 1, 1, 1, 0, 0, n11, 0, 1, 1])/
    (-4 + d - n4) + j[p4, 0, -1 + n2, n3, 1 + n4, 1, 2, 1, 0, 0, 0, n11, 0, 
     1, 1]/(4 - d + n4) + (n3*j[p4, 0, -1 + n2, 1 + n3, 1 + n4, 1, 1, 0, 1, 
      0, 0, n11, 0, 1, 1])/(-4 + d - n4) - 
   (n3*j[p4, 0, -1 + n2, 1 + n3, 1 + n4, 1, 1, 1, 1, 0, 0, n11, 0, 0, 1])/
    (-4 + d - n4) + j[p4, 0, n2, n3, n4, 0, 1, 1, 1, 0, 0, n11, 0, 1, 2]/
    (-4 + d - n4) + j[p4, 0, n2, n3, n4, 0, 2, 1, 1, 0, 0, n11, 0, 1, 1]/
    (-4 + d - n4) + j[p4, 0, n2, n3, n4, 1, 1, 1, 1, 0, 0, n11, 0, 0, 2]/
    (4 - d + n4) - (n4*j[p4, 0, n2, n3, 1 + n4, 0, 1, 1, 1, 0, 0, n11, 0, 1, 
      1])/(4 - d + n4) + ((1 - n2 + n4)*j[p4, 0, n2, n3, 1 + n4, 1, 1, 0, 1, 
      0, 0, n11, 0, 1, 1])/(4 - d + n4) + 
   ((1 - n2)*j[p4, 0, n2, n3, 1 + n4, 1, 1, 1, 0, 0, 0, n11, 0, 1, 1])/
    (-4 + d - n4), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?NonPositive, (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, 
    (n7_)?Positive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n2 == 0 && n3 == 0 && n4 == 0 && n7 == 1 && n9 == 0 && 
     !(n6 == 1 || n8 == 1) -> 
  ((-d + 2*n8)*j[p4, 0, -1, 0, 0, 1 + n5, n6, 1, n8, 0, 0, 1, 0, 0, 2])/
    (4*(-2 + d - n5 - n6)*(-2 + d - n5 - n8)) + 
   ((-4*n8 + d*n8 - 2*n5*n8)*j[p4, 0, -1, 0, 0, 1 + n5, n6, 1, 1 + n8, 0, 0, 
      1, 0, 0, 1])/(4*(-2 + d - n5 - n6)*(-2 + d - n5 - n8)) + 
   ((-(d*n6) + 2*n6*n8)*j[p4, 0, -1, 0, 0, 1 + n5, 1 + n6, 0, n8, 0, 0, 1, 0, 
      1, 1])/(4*(2 - d + n5 + n6)*(-2 + d - n5 - n8)) + 
   ((-(d*n6) + 2*n6*n8)*j[p4, 0, -1, 0, 0, 1 + n5, 1 + n6, 1, n8, 0, 0, 1, 0, 
      0, 1])/(4*(2 - d + n5 + n6)*(-2 + d - n5 - n8)) + 
   ((-(d*n6) + 2*n6*n8)*j[p4, 0, -1, 0, 0, 1 + n5, 1 + n6, 1, n8, 0, 0, 1, 0, 
      1, 0])/(4*(2 - d + n5 + n6)*(-2 + d - n5 - n8)) + 
   ((4 - d + 6*n5 - d*n5 + 2*n5^2)*j[p4, 0, -1, 0, 0, 2 + n5, n6, 0, n8, 0, 
      0, 1, 0, 1, 1])/(4*(2 - d + n5 + n6)*(2 - d + n5 + n8)) + 
   ((-2 - 3*n5 - n5^2 + n8 + n5*n8)*j[p4, 0, -1, 0, 0, 2 + n5, n6, 1, n8, 0, 
      0, 1, 0, 0, 1])/(2*(-2 + d - n5 - n6)*(-2 + d - n5 - n8)) + 
   ((2 + 3*n5 + n5^2 - n8 - n5*n8)*j[p4, 0, -1, 0, 0, 2 + n5, n6, 1, n8, 0, 
      0, 1, 0, 1, 0])/(2*(-2 + d - n5 - n6)*(-2 + d - n5 - n8)) + 
   ((4 - d + 2*n5)*j[p4, 0, 0, -1, 0, 1 + n5, n6, 0, n8, 0, 0, 1, 0, 1, 2])/
    (4*(-2 + d - n5 - n6)*(-2 + d - n5 - n8)) - 
   j[p4, 0, 0, -1, 0, 1 + n5, n6, 1, n8, 0, 0, 1, 0, 0, 2]/
    (2*(-2 + d - n5 - n6)) + ((-4 + d - 2*n5)*j[p4, 0, 0, 0, -1, 1 + n5, n6, 
      0, n8, 0, 0, 1, 0, 1, 2])/(4*(-2 + d - n5 - n6)*(-2 + d - n5 - n8)) + 
   ((-4 + d - 2*n5)*j[p4, 0, 0, 0, -1, 1 + n5, n6, 1, n8, 0, 0, 1, 0, 0, 2])/
    (4*(-2 + d - n5 - n6)*(-2 + d - n5 - n8)) + 
   ((-4*n6 + 3*d*n6 - 2*n5*n6 - 4*n6*n8)*j[p4, 0, 0, 0, -1, 1 + n5, 1 + n6, 
      0, n8, 0, 0, 1, 0, 1, 1])/(4*(-2 + d - n5 - n6)*(-2 + d - n5 - n8)) + 
   ((-4*n6 + 3*d*n6 - 2*n5*n6 - 4*n6*n8)*j[p4, 0, 0, 0, -1, 1 + n5, 1 + n6, 
      1, n8, 0, 0, 1, 0, 0, 1])/(4*(-2 + d - n5 - n6)*(-2 + d - n5 - n8)) + 
   ((-4*n6 + 3*d*n6 - 2*n5*n6 - 4*n6*n8)*j[p4, 0, 0, 0, -1, 1 + n5, 1 + n6, 
      1, n8, 0, 0, 1, 0, 1, 0])/(4*(-2 + d - n5 - n6)*(-2 + d - n5 - n8)) + 
   ((4 - 3*d + 6*n5 - 3*d*n5 + 2*n5^2 + 4*n8 + 4*n5*n8)*
     j[p4, 0, 0, 0, -1, 2 + n5, n6, 1, n8, 0, 0, 1, 0, 0, 1])/
    (4*(-2 + d - n5 - n6)*(-2 + d - n5 - n8)) + 
   ((-4 + 3*d - 6*n5 + 3*d*n5 - 2*n5^2 - 4*n8 - 4*n5*n8)*
     j[p4, 0, 0, 0, -1, 2 + n5, n6, 1, n8, 0, 0, 1, 0, 1, 0])/
    (4*(-2 + d - n5 - n6)*(-2 + d - n5 - n8)) + 
   ((d - 2*n8)*j[p4, 0, 0, 0, 0, n5, n6, 0, n8, 0, 0, 1, 0, 1, 2])/
    (4*(-2 + d - n5 - n6)*(-2 + d - n5 - n8)) + 
   ((d - 2*n8)*j[p4, 0, 0, 0, 0, n5, n6, 1, n8, 0, 0, 1, 0, 0, 2])/
    (4*(-2 + d - n5 - n6)*(-2 + d - n5 - n8)) + 
   ((d*n6 - 2*n6*n8)*j[p4, 0, 0, 0, 0, n5, 1 + n6, 0, n8, 0, 0, 1, 0, 1, 1])/
    (4*(2 - d + n5 + n6)*(-2 + d - n5 - n8)) + 
   ((d*n6 - 2*n6*n8)*j[p4, 0, 0, 0, 0, n5, 1 + n6, 1, n8, 0, 0, 1, 0, 0, 1])/
    (4*(2 - d + n5 + n6)*(-2 + d - n5 - n8)) + 
   ((d*n6 - 2*n6*n8)*j[p4, 0, 0, 0, 0, n5, 1 + n6, 1, n8, 0, 0, 1, 0, 1, 0])/
    (4*(2 - d + n5 + n6)*(-2 + d - n5 - n8)) + 
   ((d - 2*n8)*j[p4, 0, 0, 0, 0, 1 + n5, -1 + n6, 1, n8, 0, 0, 1, 0, 0, 2])/
    (4*(-2 + d - n5 - n6)*(-2 + d - n5 - n8)) + 
   ((-4 + 5*d - d^2 - 2*n5 + 2*d*n5 - 4*n6 + d*n6 - 2*n5*n6)*
     j[p4, 0, 0, 0, 0, 1 + n5, -1 + n6, 1, n8, 0, 0, 1, 0, 1, 1])/
    (2*(-1 + n6)*(-2 + d - n5 - n8)) + 
   ((4 - d + 2*n5)*j[p4, 0, 0, 0, 0, 1 + n5, n6, 0, -1 + n8, 0, 0, 1, 0, 2, 
      1])/(4*(-2 + d - n5 - n6)*(-2 + d - n5 - n8)) + 
   ((-4 + d - 2*n5)*j[p4, 0, 0, 0, 0, 1 + n5, n6, 0, n8, 0, 0, 1, -1, 2, 1])/
    (4*(-2 + d - n5 - n6)*(-2 + d - n5 - n8)) + 
   ((-d - 2*d^2 + 4*n6 + 2*n5*n6 - 2*n8 + 5*d*n8 - 2*n5*n8 - 2*n6*n8)*
     j[p4, 0, 0, 0, 0, 1 + n5, n6, 0, n8, 0, 0, 1, 0, 1, 1])/
    (4*(-2 + d - n5 - n6)*(-2 + d - n5 - n8)) + 
   ((4*n8 - d*n8 + 2*n5*n8)*j[p4, 0, 0, 0, 0, 1 + n5, n6, 0, 1 + n8, 0, 0, 1, 
      -1, 1, 1])/(4*(-2 + d - n5 - n6)*(-2 + d - n5 - n8)) + 
   ((d - 2*n8)*j[p4, 0, 0, 0, 0, 1 + n5, n6, 1, -1 + n8, 0, 0, 1, 0, 0, 2])/
    (4*(-2 + d - n5 - n6)*(-2 + d - n5 - n8)) + 
   ((-4 + d - 2*n5)*j[p4, 0, 0, 0, 0, 1 + n5, n6, 1, -1 + n8, 0, 0, 1, 0, 1, 
      1])/(2*(-1 + n8)) + ((-d + 2*n8)*j[p4, 0, 0, 0, 0, 1 + n5, n6, 1, n8, 
      0, 0, 1, -1, 0, 2])/(4*(-2 + d - n5 - n6)*(-2 + d - n5 - n8)) + 
   ((-12 + 16*d - 4*d^2 - 14*n5 + 7*d*n5 - 4*n5^2 - 4*n6 + 2*d*n6 - 2*n5*n6 - 
      14*n8 + 5*d*n8 - 4*n5*n8 - 2*n6*n8)*j[p4, 0, 0, 0, 0, 1 + n5, n6, 1, 
      n8, 0, 0, 1, 0, 0, 1])/(4*(-2 + d - n5 - n6)*(-2 + d - n5 - n8)) + 
   ((d - 2*d^2 - d*n5 + 4*n6 + 2*n5*n6 - 2*n8 + 4*d*n8 + 2*n5*n8 - 2*n6*n8)*
     j[p4, 0, 0, 0, 0, 1 + n5, n6, 1, n8, 0, 0, 1, 0, 1, 0])/
    (4*(-2 + d - n5 - n6)*(-2 + d - n5 - n8)) + 
   ((4*n6 - 3*d*n6 + 2*n5*n6 + 4*n6*n8)*j[p4, 0, 0, 0, 0, 1 + n5, 1 + n6, 0, 
      -1 + n8, 0, 0, 1, 0, 1, 1])/(4*(-2 + d - n5 - n6)*(-2 + d - n5 - n8)) + 
   ((4*n6 - 3*d*n6 + 2*n5*n6 + 4*n6*n8)*j[p4, 0, 0, 0, 0, 1 + n5, 1 + n6, 1, 
      -1 + n8, 0, 0, 1, 0, 0, 1])/(4*(-2 + d - n5 - n6)*(-2 + d - n5 - n8)) + 
   ((4*n6 - 3*d*n6 + 2*n5*n6 + 4*n6*n8)*j[p4, 0, 0, 0, 0, 1 + n5, 1 + n6, 1, 
      -1 + n8, 0, 0, 1, 0, 1, 0])/(4*(-2 + d - n5 - n6)*(-2 + d - n5 - n8)) + 
   ((-4 + d - 6*n5 + d*n5 - 2*n5^2)*j[p4, 0, 0, 0, 0, 2 + n5, -1 + n6, 0, n8, 
      0, 0, 1, 0, 1, 1])/(4*(2 - d + n5 + n6)*(2 - d + n5 + n8)) + 
   ((-2 + 2*d - d^2 - 3*n5 + 2*d*n5 - d^2*n5 - n5^2 + 2*n6 + 3*n5*n6 + 
      n5^2*n6 - 3*n8 + 2*d*n8 - 3*n5*n8 + 2*d*n5*n8 - n6*n8 - n5*n6*n8)*
     j[p4, 0, 0, 0, 0, 2 + n5, -1 + n6, 1, n8, 0, 0, 1, 0, 0, 1])/
    (2*(-1 + n6)*(2 - d + n5 + n6)*(-2 + d - n5 - n8)) + 
   ((2 - 2*d + d^2 + 3*n5 - 2*d*n5 + d^2*n5 + n5^2 - 2*n6 - 3*n5*n6 - 
      n5^2*n6 + 3*n8 - 2*d*n8 + 3*n5*n8 - 2*d*n5*n8 + n6*n8 + n5*n6*n8)*
     j[p4, 0, 0, 0, 0, 2 + n5, -1 + n6, 1, n8, 0, 0, 1, 0, 1, 0])/
    (2*(-1 + n6)*(2 - d + n5 + n6)*(-2 + d - n5 - n8)) + 
   ((4 - 4*d + d^2 + 10*n5 - 7*d*n5 + d^2*n5 + 8*n5^2 - 3*d*n5^2 + 2*n5^3 + 
      4*n6 - d*n6 + 6*n5*n6 - d*n5*n6 + 2*n5^2*n6 + 2*n8 - 2*d*n8 + 4*n5*n8 - 
      2*d*n5*n8 + 2*n5^2*n8 + 2*n8^2 + 2*n5*n8^2)*j[p4, 0, 0, 0, 0, 2 + n5, 
      n6, 1, -1 + n8, 0, 0, 1, 0, 0, 1])/(2*(-2 + d - n5 - n6)*(-1 + n8)*
     (2 - d + n5 + n8)) + ((-4 + 4*d - d^2 - 10*n5 + 7*d*n5 - d^2*n5 - 
      8*n5^2 + 3*d*n5^2 - 2*n5^3 - 4*n6 + d*n6 - 6*n5*n6 + d*n5*n6 - 
      2*n5^2*n6 - 2*n8 + 2*d*n8 - 4*n5*n8 + 2*d*n5*n8 - 2*n5^2*n8 - 2*n8^2 - 
      2*n5*n8^2)*j[p4, 0, 0, 0, 0, 2 + n5, n6, 1, -1 + n8, 0, 0, 1, 0, 1, 0])/
    (2*(-2 + d - n5 - n6)*(-1 + n8)*(2 - d + n5 + n8)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 0 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n3 == 0 && n4 == 0 && n7 == 1 && n8 == 1 && n9 == 0 && 
     !(n11 == 1 || n6 == 1) -> 
  ((3 - 4*d + d^2 + 2*n6 - n6^2)*j[p4, -1, 0, 0, 0, n5, n6, 0, 1, 0, 0, n11, 
      0, 2, 1])/(22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 
     4*n5 + 18*d*n5 - 10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 
     4*d*n5^2 - 8*n6 + 24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 
     18*d*n5*n6 + 4*n11*n5*n6 - 4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 
     4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((-3 + 4*d - d^2 - 2*n6 + n6^2)*j[p4, -1, 0, 0, 0, n5, n6, 0, 2, 0, 0, 
      n11, 0, 1, 1])/(22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 
     4*n5 + 18*d*n5 - 10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 
     4*d*n5^2 - 8*n6 + 24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 
     18*d*n5*n6 + 4*n11*n5*n6 - 4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 
     4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((-21 + 19*d - 4*d^2 - 6*n5 + 2*d*n5 - 2*n6 - d*n6 + 2*n5*n6 + 3*n6^2)*
     j[p4, -1, 0, 0, 0, n5, n6, 1, 2, 0, 0, n11, 0, 0, 1])/
    (22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 4*n5 + 18*d*n5 - 
     10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 4*d*n5^2 - 8*n6 + 
     24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 18*d*n5*n6 + 4*n11*n5*n6 - 
     4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((3*n5 - 4*d*n5 + d^2*n5 + 2*n5*n6 - n5*n6^2)*j[p4, -1, 0, 0, 0, 1 + n5, 
      n6, 0, 1, 0, 0, n11, 0, 1, 1])/(22*d - 23*d^2 + 7*d^3 - 36*n11 + 
     30*d*n11 - 6*d^2*n11 - 4*n5 + 18*d*n5 - 10*d^2*n5 - 12*n11*n5 + 
     4*d*n11*n5 - 4*n5^2 + 4*d*n5^2 - 8*n6 + 24*d*n6 - 15*d^2*n6 - 
     2*d*n11*n6 - 16*n5*n6 + 18*d*n5*n6 + 4*n11*n5*n6 - 4*n5^2*n6 - 16*n6^2 + 
     18*d*n6^2 + 4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((-21*n5 + 19*d*n5 - 4*d^2*n5 - 6*n5^2 + 2*d*n5^2 - 2*n5*n6 - d*n5*n6 + 
      2*n5^2*n6 + 3*n5*n6^2)*j[p4, -1, 0, 0, 0, 1 + n5, n6, 1, 1, 0, 0, n11, 
      0, 0, 1])/(22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 
     4*n5 + 18*d*n5 - 10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 
     4*d*n5^2 - 8*n6 + 24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 
     18*d*n5*n6 + 4*n11*n5*n6 - 4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 
     4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((21*n5 - 19*d*n5 + 4*d^2*n5 + 6*n5^2 - 2*d*n5^2 + 2*n5*n6 + d*n5*n6 - 
      2*n5^2*n6 - 3*n5*n6^2)*j[p4, -1, 0, 0, 0, 1 + n5, n6, 1, 1, 0, 0, n11, 
      0, 1, 0])/(22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 
     4*n5 + 18*d*n5 - 10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 
     4*d*n5^2 - 8*n6 + 24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 
     18*d*n5*n6 + 4*n11*n5*n6 - 4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 
     4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((3 - 6*d + 3*d^2 + 2*n5 - 2*d*n5 + 6*n6 - 6*d*n6 + 2*n5*n6 + 3*n6^2)*
     j[p4, 0, -1, 0, 0, n5, n6, 1, 2, 0, 0, n11, 0, 0, 1])/
    (22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 4*n5 + 18*d*n5 - 
     10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 4*d*n5^2 - 8*n6 + 
     24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 18*d*n5*n6 + 4*n11*n5*n6 - 
     4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((3 - 4*d + d^2 + 2*n6 - n6^2)*j[p4, 0, -1, 0, 0, n5, n6, 2, 1, 0, 0, n11, 
      0, 0, 1])/(22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 
     4*n5 + 18*d*n5 - 10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 
     4*d*n5^2 - 8*n6 + 24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 
     18*d*n5*n6 + 4*n11*n5*n6 - 4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 
     4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((-3*n6 + 6*d*n6 - 3*d^2*n6 - 2*n5*n6 + 2*d*n5*n6 - 6*n6^2 + 6*d*n6^2 - 
      2*n5*n6^2 - 3*n6^3)*j[p4, 0, -1, 0, 0, n5, 1 + n6, 1, 0, 0, 0, n11, 0, 
      1, 1])/(22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 4*n5 + 
     18*d*n5 - 10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 4*d*n5^2 - 
     8*n6 + 24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 18*d*n5*n6 + 
     4*n11*n5*n6 - 4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 4*n11*n6^2 - 
     12*n5*n6^2 - 8*n6^3) + ((-6*n5 + 10*d*n5 - 4*d^2*n5 - 2*n5^2 + 
      2*d*n5^2 - 8*n5*n6 + 6*d*n5*n6 - 2*n5^2*n6 - 2*n5*n6^2)*
     j[p4, 0, -1, 0, 0, 1 + n5, n6, 0, 1, 0, 0, n11, 0, 1, 1])/
    (22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 4*n5 + 18*d*n5 - 
     10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 4*d*n5^2 - 8*n6 + 
     24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 18*d*n5*n6 + 4*n11*n5*n6 - 
     4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((6*n5 - 10*d*n5 + 4*d^2*n5 + 2*n5^2 - 2*d*n5^2 + 8*n5*n6 - 6*d*n5*n6 + 
      2*n5^2*n6 + 2*n5*n6^2)*j[p4, 0, -1, 0, 0, 1 + n5, n6, 1, 1, 0, 0, n11, 
      0, 0, 1])/(22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 
     4*n5 + 18*d*n5 - 10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 
     4*d*n5^2 - 8*n6 + 24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 
     18*d*n5*n6 + 4*n11*n5*n6 - 4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 
     4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((-6*n5 + 10*d*n5 - 4*d^2*n5 - 2*n5^2 + 2*d*n5^2 - 8*n5*n6 + 6*d*n5*n6 - 
      2*n5^2*n6 - 2*n5*n6^2)*j[p4, 0, -1, 0, 0, 1 + n5, n6, 1, 1, 0, 0, n11, 
      0, 1, 0])/(22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 
     4*n5 + 18*d*n5 - 10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 
     4*d*n5^2 - 8*n6 + 24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 
     18*d*n5*n6 + 4*n11*n5*n6 - 4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 
     4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((-6 + 10*d - 4*d^2 - 2*n5 + 2*d*n5 - 8*n6 + 6*d*n6 - 2*n5*n6 - 2*n6^2)*
     j[p4, 0, 0, -1, 0, n5, n6, 0, 1, 0, 0, n11, 0, 1, 2])/
    (22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 4*n5 + 18*d*n5 - 
     10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 4*d*n5^2 - 8*n6 + 
     24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 18*d*n5*n6 + 4*n11*n5*n6 - 
     4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((-6 + 10*d - 4*d^2 - 2*n5 + 2*d*n5 - 8*n6 + 6*d*n6 - 2*n5*n6 - 2*n6^2)*
     j[p4, 0, 0, -1, 0, n5, n6, 1, 0, 0, 0, n11, 0, 1, 2])/
    (22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 4*n5 + 18*d*n5 - 
     10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 4*d*n5^2 - 8*n6 + 
     24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 18*d*n5*n6 + 4*n11*n5*n6 - 
     4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((-6 + 10*d - 4*d^2 - 2*n5 + 2*d*n5 - 8*n6 + 6*d*n6 - 2*n5*n6 - 2*n6^2)*
     j[p4, 0, 0, -1, 0, n5, n6, 1, 0, 0, 0, n11, 0, 2, 1])/
    (22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 4*n5 + 18*d*n5 - 
     10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 4*d*n5^2 - 8*n6 + 
     24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 18*d*n5*n6 + 4*n11*n5*n6 - 
     4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((-6 + 10*d - 4*d^2 - 2*n5 + 2*d*n5 - 8*n6 + 6*d*n6 - 2*n5*n6 - 2*n6^2)*
     j[p4, 0, 0, -1, 0, n5, n6, 1, 1, 0, 0, n11, 0, 0, 2])/
    (22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 4*n5 + 18*d*n5 - 
     10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 4*d*n5^2 - 8*n6 + 
     24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 18*d*n5*n6 + 4*n11*n5*n6 - 
     4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((-3 + 4*d - d^2 - 2*n6 + n6^2)*j[p4, 0, 0, -1, 0, n5, n6, 2, 0, 0, 0, 
      n11, 0, 1, 1])/(22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 
     4*n5 + 18*d*n5 - 10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 
     4*d*n5^2 - 8*n6 + 24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 
     18*d*n5*n6 + 4*n11*n5*n6 - 4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 
     4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((-3*n6 + 6*d*n6 - 3*d^2*n6 - 2*n5*n6 + 2*d*n5*n6 - 6*n6^2 + 6*d*n6^2 - 
      2*n5*n6^2 - 3*n6^3)*j[p4, 0, 0, -1, 0, n5, 1 + n6, 1, 0, 0, 0, n11, 0, 
      1, 1])/(22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 4*n5 + 
     18*d*n5 - 10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 4*d*n5^2 - 
     8*n6 + 24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 18*d*n5*n6 + 
     4*n11*n5*n6 - 4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 4*n11*n6^2 - 
     12*n5*n6^2 - 8*n6^3) + ((6 - 10*d + 4*d^2 + 2*n5 - 2*d*n5 + 8*n6 - 
      6*d*n6 + 2*n5*n6 + 2*n6^2)*j[p4, 0, 0, 0, -1, n5, n6, 0, 1, 0, 0, n11, 
      0, 1, 2])/(22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 
     4*n5 + 18*d*n5 - 10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 
     4*d*n5^2 - 8*n6 + 24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 
     18*d*n5*n6 + 4*n11*n5*n6 - 4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 
     4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((6 - 10*d + 4*d^2 + 2*n5 - 2*d*n5 + 8*n6 - 6*d*n6 + 2*n5*n6 + 2*n6^2)*
     j[p4, 0, 0, 0, -1, n5, n6, 1, 0, 0, 0, n11, 0, 1, 2])/
    (22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 4*n5 + 18*d*n5 - 
     10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 4*d*n5^2 - 8*n6 + 
     24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 18*d*n5*n6 + 4*n11*n5*n6 - 
     4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((6 - 10*d + 4*d^2 + 2*n5 - 2*d*n5 + 8*n6 - 6*d*n6 + 2*n5*n6 + 2*n6^2)*
     j[p4, 0, 0, 0, -1, n5, n6, 1, 1, 0, 0, n11, 0, 0, 2])/
    (22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 4*n5 + 18*d*n5 - 
     10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 4*d*n5^2 - 8*n6 + 
     24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 18*d*n5*n6 + 4*n11*n5*n6 - 
     4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((3*n6 - 6*d*n6 + 3*d^2*n6 + 2*n5*n6 - 2*d*n5*n6 + 6*n6^2 - 6*d*n6^2 + 
      2*n5*n6^2 + 3*n6^3)*j[p4, 0, 0, 0, -1, n5, 1 + n6, 0, 1, 0, 0, n11, 0, 
      1, 1])/(22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 4*n5 + 
     18*d*n5 - 10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 4*d*n5^2 - 
     8*n6 + 24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 18*d*n5*n6 + 
     4*n11*n5*n6 - 4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 4*n11*n6^2 - 
     12*n5*n6^2 - 8*n6^3) + ((3*n6 - 6*d*n6 + 3*d^2*n6 + 2*n5*n6 - 
      2*d*n5*n6 + 6*n6^2 - 6*d*n6^2 + 2*n5*n6^2 + 3*n6^3)*
     j[p4, 0, 0, 0, -1, n5, 1 + n6, 1, 0, 0, 0, n11, 0, 1, 1])/
    (22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 4*n5 + 18*d*n5 - 
     10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 4*d*n5^2 - 8*n6 + 
     24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 18*d*n5*n6 + 4*n11*n5*n6 - 
     4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((3*n6 - 6*d*n6 + 3*d^2*n6 + 2*n5*n6 - 2*d*n5*n6 + 6*n6^2 - 6*d*n6^2 + 
      2*n5*n6^2 + 3*n6^3)*j[p4, 0, 0, 0, -1, n5, 1 + n6, 1, 1, 0, 0, n11, 0, 
      0, 1])/(22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 4*n5 + 
     18*d*n5 - 10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 4*d*n5^2 - 
     8*n6 + 24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 18*d*n5*n6 + 
     4*n11*n5*n6 - 4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 4*n11*n6^2 - 
     12*n5*n6^2 - 8*n6^3) + ((3*n6 - 6*d*n6 + 3*d^2*n6 + 2*n5*n6 - 
      2*d*n5*n6 + 6*n6^2 - 6*d*n6^2 + 2*n5*n6^2 + 3*n6^3)*
     j[p4, 0, 0, 0, -1, n5, 1 + n6, 1, 1, 0, 0, n11, 0, 1, 0])/
    (22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 4*n5 + 18*d*n5 - 
     10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 4*d*n5^2 - 8*n6 + 
     24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 18*d*n5*n6 + 4*n11*n5*n6 - 
     4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((-3*n5 + 6*d*n5 - 3*d^2*n5 - 2*n5^2 + 2*d*n5^2 - 6*n5*n6 + 6*d*n5*n6 - 
      2*n5^2*n6 - 3*n5*n6^2)*j[p4, 0, 0, 0, -1, 1 + n5, n6, 1, 1, 0, 0, n11, 
      0, 0, 1])/(22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 
     4*n5 + 18*d*n5 - 10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 
     4*d*n5^2 - 8*n6 + 24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 
     18*d*n5*n6 + 4*n11*n5*n6 - 4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 
     4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((3*n5 - 6*d*n5 + 3*d^2*n5 + 2*n5^2 - 2*d*n5^2 + 6*n5*n6 - 6*d*n5*n6 + 
      2*n5^2*n6 + 3*n5*n6^2)*j[p4, 0, 0, 0, -1, 1 + n5, n6, 1, 1, 0, 0, n11, 
      0, 1, 0])/(22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 
     4*n5 + 18*d*n5 - 10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 
     4*d*n5^2 - 8*n6 + 24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 
     18*d*n5*n6 + 4*n11*n5*n6 - 4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 
     4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((6 - 10*d + 4*d^2 + 2*n5 - 2*d*n5 + 8*n6 - 6*d*n6 + 2*n5*n6 + 2*n6^2)*
     j[p4, 0, 0, 0, 0, -1 + n5, -1 + n6, 1, 1, 0, 0, n11, 0, 1, 2])/
    (22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 4*n5 + 18*d*n5 - 
     10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 4*d*n5^2 - 8*n6 + 
     24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 18*d*n5*n6 + 4*n11*n5*n6 - 
     4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((18 - 15*d + 3*d^2 + 24*n5 - 17*d*n5 + 3*d^2*n5 + 6*n5^2 - 2*d*n5^2 - 
      18*n6 + 16*d*n6 - 3*d^2*n6 - 8*n5*n6 + 3*d*n5*n6 - 2*n5^2*n6 - 2*n6^2 - 
      d*n6^2 + 2*n6^3)*j[p4, 0, 0, 0, 0, -1 + n5, n6, 1, 1, 0, 0, -1 + n11, 
      0, 1, 2])/((-1 + n11)*(-22*d + 23*d^2 - 7*d^3 + 36*n11 - 30*d*n11 + 
      6*d^2*n11 + 4*n5 - 18*d*n5 + 10*d^2*n5 + 12*n11*n5 - 4*d*n11*n5 + 
      4*n5^2 - 4*d*n5^2 + 8*n6 - 24*d*n6 + 15*d^2*n6 + 2*d*n11*n6 + 
      16*n5*n6 - 18*d*n5*n6 - 4*n11*n5*n6 + 4*n5^2*n6 + 16*n6^2 - 18*d*n6^2 - 
      4*n11*n6^2 + 12*n5*n6^2 + 8*n6^3)) + 
   ((18 - 33*d + 18*d^2 - 3*d^3 + 24*n5 - 23*d*n5 + 5*d^2*n5 + 6*n5^2 - 
      2*d*n5^2 + 18*n6 - 14*d*n6 + 2*d^2*n6 + 4*n5*n6 + d*n5*n6 - 2*n5^2*n6 - 
      2*n6^2 + 3*d*n6^2 - 4*n5*n6^2 - 2*n6^3)*j[p4, 0, 0, 0, 0, -1 + n5, n6, 
      1, 1, 0, 0, -1 + n11, 0, 2, 1])/((-1 + n11)*(-22*d + 23*d^2 - 7*d^3 + 
      36*n11 - 30*d*n11 + 6*d^2*n11 + 4*n5 - 18*d*n5 + 10*d^2*n5 + 
      12*n11*n5 - 4*d*n11*n5 + 4*n5^2 - 4*d*n5^2 + 8*n6 - 24*d*n6 + 
      15*d^2*n6 + 2*d*n11*n6 + 16*n5*n6 - 18*d*n5*n6 - 4*n11*n5*n6 + 
      4*n5^2*n6 + 16*n6^2 - 18*d*n6^2 - 4*n11*n6^2 + 12*n5*n6^2 + 8*n6^3)) + 
   ((-8*d + 14*d^2 - 6*d^3 + 8*n5 - 18*d*n5 + 10*d^2*n5 + 4*n5^2 - 4*d*n5^2 + 
      16*n6 - 40*d*n6 + 22*d^2*n6 + 20*n5*n6 - 22*d*n5*n6 + 4*n5^2*n6 + 
      24*n6^2 - 24*d*n6^2 + 12*n5*n6^2 + 8*n6^3)*j[p4, 0, 0, 0, 0, -1 + n5, 
      n6, 1, 1, 0, 0, n11, 0, 1, 1])/(22*d - 23*d^2 + 7*d^3 - 36*n11 + 
     30*d*n11 - 6*d^2*n11 - 4*n5 + 18*d*n5 - 10*d^2*n5 - 12*n11*n5 + 
     4*d*n11*n5 - 4*n5^2 + 4*d*n5^2 - 8*n6 + 24*d*n6 - 15*d^2*n6 - 
     2*d*n11*n6 - 16*n5*n6 + 18*d*n5*n6 + 4*n11*n5*n6 - 4*n5^2*n6 - 16*n6^2 + 
     18*d*n6^2 + 4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((-6 + 10*d - 4*d^2 - 2*n5 + 2*d*n5 - 8*n6 + 6*d*n6 - 2*n5*n6 - 2*n6^2)*
     j[p4, 0, 0, 0, 0, n5, -1 + n6, 1, 1, 0, 0, n11, 0, 0, 2])/
    (22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 4*n5 + 18*d*n5 - 
     10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 4*d*n5^2 - 8*n6 + 
     24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 18*d*n5*n6 + 4*n11*n5*n6 - 
     4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((11*d - 25*d^2 + 19*d^3 - 5*d^4 + 6*n11 - 14*d*n11 + 10*d^2*n11 - 
      2*d^3*n11 - 14*n5 + 35*d*n5 - 30*d^2*n5 + 9*d^3*n5 + 6*n11*n5 - 
      8*d*n11*n5 + 2*d^2*n11*n5 - 6*n5^2 + 10*d*n5^2 - 4*d^2*n5^2 - 22*n6 + 
      71*d*n6 - 70*d^2*n6 + 23*d^3*n6 + 10*n11*n6 - 12*d*n11*n6 + 
      2*d^2*n11*n6 - 32*n5*n6 + 56*d*n5*n6 - 26*d^2*n5*n6 + 4*n11*n5*n6 - 
      8*n5^2*n6 + 6*d*n5^2*n6 - 42*n6^2 + 77*d*n6^2 - 37*d^2*n6^2 + 
      2*n11*n6^2 + 2*d*n11*n6^2 - 26*n5*n6^2 + 25*d*n5*n6^2 - 2*n11*n5*n6^2 - 
      2*n5^2*n6^2 - 26*n6^3 + 25*d*n6^3 - 2*n11*n6^3 - 8*n5*n6^3 - 6*n6^4)*
     j[p4, 0, 0, 0, 0, n5, -1 + n6, 1, 1, 0, 0, n11, 0, 1, 1])/
    ((-1 + n6)*(22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 
      4*n5 + 18*d*n5 - 10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 
      4*d*n5^2 - 8*n6 + 24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 
      18*d*n5*n6 + 4*n11*n5*n6 - 4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 
      4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3)) + 
   ((6 - 10*d + 4*d^2 + 2*n5 - 2*d*n5 + 8*n6 - 6*d*n6 + 2*n5*n6 + 2*n6^2)*
     j[p4, 0, 0, 0, 0, n5, n6, 0, 1, 0, 0, n11, -1, 2, 1])/
    (22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 4*n5 + 18*d*n5 - 
     10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 4*d*n5^2 - 8*n6 + 
     24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 18*d*n5*n6 + 4*n11*n5*n6 - 
     4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((-15 + 4*d + 6*d^2 - d^3 + 9*n11 - 12*d*n11 + 3*d^2*n11 - 20*n5 + 
      13*d*n5 - 3*d^2*n5 - 6*n5^2 + 2*d*n5^2 + 4*n6 - 3*d*n6 - 6*d^2*n6 + 
      6*n11*n6 + 2*n5*n6 + 3*d*n5*n6 + 2*n5^2*n6 - 3*n6^2 + 13*d*n6^2 - 
      3*n11*n6^2 - 2*n5*n6^2 - 6*n6^3)*j[p4, 0, 0, 0, 0, n5, n6, 0, 1, 0, 0, 
      n11, 0, 1, 1])/(22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 
     4*n5 + 18*d*n5 - 10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 
     4*d*n5^2 - 8*n6 + 24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 
     18*d*n5*n6 + 4*n11*n5*n6 - 4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 
     4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((-3 + 4*d - d^2 - 2*n6 + n6^2)*j[p4, 0, 0, 0, 0, n5, n6, 0, 1, 0, 0, n11, 
      0, 2, 1])/(22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 
     4*n5 + 18*d*n5 - 10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 
     4*d*n5^2 - 8*n6 + 24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 
     18*d*n5*n6 + 4*n11*n5*n6 - 4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 
     4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((-3*n11 + 4*d*n11 - d^2*n11 - 2*n11*n6 + n11*n6^2)*
     j[p4, 0, 0, 0, 0, n5, n6, 0, 1, 0, 0, 1 + n11, -1, 1, 1])/
    (-22*d + 23*d^2 - 7*d^3 + 36*n11 - 30*d*n11 + 6*d^2*n11 + 4*n5 - 
     18*d*n5 + 10*d^2*n5 + 12*n11*n5 - 4*d*n11*n5 + 4*n5^2 - 4*d*n5^2 + 
     8*n6 - 24*d*n6 + 15*d^2*n6 + 2*d*n11*n6 + 16*n5*n6 - 18*d*n5*n6 - 
     4*n11*n5*n6 + 4*n5^2*n6 + 16*n6^2 - 18*d*n6^2 - 4*n11*n6^2 + 
     12*n5*n6^2 + 8*n6^3) + ((3*n11 - 4*d*n11 + d^2*n11 + 2*n11*n6 - 
      n11*n6^2)*j[p4, 0, 0, 0, 0, n5, n6, 0, 1, 0, 0, 1 + n11, 0, 1, 1])/
    (-22*d + 23*d^2 - 7*d^3 + 36*n11 - 30*d*n11 + 6*d^2*n11 + 4*n5 - 
     18*d*n5 + 10*d^2*n5 + 12*n11*n5 - 4*d*n11*n5 + 4*n5^2 - 4*d*n5^2 + 
     8*n6 - 24*d*n6 + 15*d^2*n6 + 2*d*n11*n6 + 16*n5*n6 - 18*d*n5*n6 - 
     4*n11*n5*n6 + 4*n5^2*n6 + 16*n6^2 - 18*d*n6^2 - 4*n11*n6^2 + 
     12*n5*n6^2 + 8*n6^3) + ((3 - 4*d + d^2 + 2*n6 - n6^2)*
     j[p4, 0, 0, 0, 0, n5, n6, 0, 2, 0, 0, -1 + n11, 0, 1, 1])/
    (22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 4*n5 + 18*d*n5 - 
     10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 4*d*n5^2 - 8*n6 + 
     24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 18*d*n5*n6 + 4*n11*n5*n6 - 
     4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((-3 + 6*d - 3*d^2 - 2*n5 + 2*d*n5 - 6*n6 + 6*d*n6 - 2*n5*n6 - 3*n6^2)*
     j[p4, 0, 0, 0, 0, n5, n6, 0, 2, 0, 0, n11, -1, 1, 1])/
    (22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 4*n5 + 18*d*n5 - 
     10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 4*d*n5^2 - 8*n6 + 
     24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 18*d*n5*n6 + 4*n11*n5*n6 - 
     4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((15 - 57*d + 46*d^2 - 10*d^3 + 9*n11 - 12*d*n11 + 3*d^2*n11 - 2*n5 - 
      17*d*n5 + 9*d^2*n5 - 2*n5^2 - 2*d*n5^2 + 72*n6 - 84*d*n6 + 21*d^2*n6 + 
      6*n11*n6 + 36*n5*n6 - 21*d*n5*n6 + 6*n5^2*n6 + 23*n6^2 - 7*d*n6^2 - 
      3*n11*n6^2 + 6*n5*n6^2 - 2*n6^3)*j[p4, 0, 0, 0, 0, n5, n6, 1, 0, 0, 0, 
      n11, 0, 1, 1])/(22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 
     4*n5 + 18*d*n5 - 10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 
     4*d*n5^2 - 8*n6 + 24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 
     18*d*n5*n6 + 4*n11*n5*n6 - 4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 
     4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((3*n11 - 4*d*n11 + d^2*n11 + 2*n11*n6 - n11*n6^2)*
     j[p4, 0, 0, 0, 0, n5, n6, 1, 0, 0, 0, 1 + n11, -1, 1, 1])/
    (22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 4*n5 + 18*d*n5 - 
     10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 4*d*n5^2 - 8*n6 + 
     24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 18*d*n5*n6 + 4*n11*n5*n6 - 
     4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((-3*n11 + 4*d*n11 - d^2*n11 - 2*n11*n6 + n11*n6^2)*
     j[p4, 0, 0, 0, 0, n5, n6, 1, 0, 0, 0, 1 + n11, 0, 1, 1])/
    (22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 4*n5 + 18*d*n5 - 
     10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 4*d*n5^2 - 8*n6 + 
     24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 18*d*n5*n6 + 4*n11*n5*n6 - 
     4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((-18 + 15*d - 3*d^2 - 24*n5 + 17*d*n5 - 3*d^2*n5 - 6*n5^2 + 2*d*n5^2 + 
      18*n6 - 16*d*n6 + 3*d^2*n6 + 8*n5*n6 - 3*d*n5*n6 + 2*n5^2*n6 + 2*n6^2 + 
      d*n6^2 - 2*n6^3)*j[p4, 0, 0, 0, 0, n5, n6, 1, 1, 0, 0, -1 + n11, 0, 0, 
      2])/((-1 + n11)*(-22*d + 23*d^2 - 7*d^3 + 36*n11 - 30*d*n11 + 
      6*d^2*n11 + 4*n5 - 18*d*n5 + 10*d^2*n5 + 12*n11*n5 - 4*d*n11*n5 + 
      4*n5^2 - 4*d*n5^2 + 8*n6 - 24*d*n6 + 15*d^2*n6 + 2*d*n11*n6 + 
      16*n5*n6 - 18*d*n5*n6 - 4*n11*n5*n6 + 4*n5^2*n6 + 16*n6^2 - 18*d*n6^2 - 
      4*n11*n6^2 + 12*n5*n6^2 + 8*n6^3)) + 
   ((468 - 1030*d + 858*d^2 - 327*d^3 + 49*d^4 + 252*n11 - 376*d*n11 + 
      185*d^2*n11 - 31*d^3*n11 + 36*n11^2 - 30*d*n11^2 + 6*d^2*n11^2 + 
      508*n5 - 850*d*n5 + 488*d^2*n5 - 98*d^3*n5 + 160*n11*n5 - 
      154*d*n11*n5 + 38*d^2*n11*n5 + 12*n11^2*n5 - 4*d*n11^2*n5 + 216*n5^2 - 
      236*d*n5^2 + 68*d^2*n5^2 + 28*n11*n5^2 - 12*d*n11*n5^2 + 32*n5^3 - 
      16*d*n5^3 + 344*n6 - 602*d*n6 + 388*d^2*n6 - 91*d^3*n6 + 80*n11*n6 - 
      70*d*n11*n6 + 19*d^2*n11*n6 + 2*d*n11^2*n6 + 288*n5*n6 - 372*d*n5*n6 + 
      132*d^2*n5*n6 + 12*n11*n5*n6 - 6*d*n11*n5*n6 - 4*n11^2*n5*n6 + 
      68*n5^2*n6 - 48*d*n5^2*n6 - 4*n11*n5^2*n6 + 112*n6^2 - 198*d*n6^2 + 
      86*d^2*n6^2 - 12*n11*n6^2 + 2*d*n11*n6^2 - 4*n11^2*n6^2 + 92*n5*n6^2 - 
      82*d*n5*n6^2 - 4*n11*n5*n6^2 + 12*n5^2*n6^2 + 56*n6^3 - 50*d*n6^3 + 
      24*n5*n6^3 + 12*n6^4)*j[p4, 0, 0, 0, 0, n5, n6, 1, 1, 0, 0, -1 + n11, 
      0, 1, 1])/((-1 + n11)*(-22*d + 23*d^2 - 7*d^3 + 36*n11 - 30*d*n11 + 
      6*d^2*n11 + 4*n5 - 18*d*n5 + 10*d^2*n5 + 12*n11*n5 - 4*d*n11*n5 + 
      4*n5^2 - 4*d*n5^2 + 8*n6 - 24*d*n6 + 15*d^2*n6 + 2*d*n11*n6 + 
      16*n5*n6 - 18*d*n5*n6 - 4*n11*n5*n6 + 4*n5^2*n6 + 16*n6^2 - 18*d*n6^2 - 
      4*n11*n6^2 + 12*n5*n6^2 + 8*n6^3)) + 
   ((-18 + 33*d - 18*d^2 + 3*d^3 - 24*n5 + 23*d*n5 - 5*d^2*n5 - 6*n5^2 + 
      2*d*n5^2 - 18*n6 + 14*d*n6 - 2*d^2*n6 - 4*n5*n6 - d*n5*n6 + 2*n5^2*n6 + 
      2*n6^2 - 3*d*n6^2 + 4*n5*n6^2 + 2*n6^3)*j[p4, 0, 0, 0, 0, n5, n6, 1, 1, 
      0, 0, -1 + n11, 0, 2, 0])/((-1 + n11)*(-22*d + 23*d^2 - 7*d^3 + 
      36*n11 - 30*d*n11 + 6*d^2*n11 + 4*n5 - 18*d*n5 + 10*d^2*n5 + 
      12*n11*n5 - 4*d*n11*n5 + 4*n5^2 - 4*d*n5^2 + 8*n6 - 24*d*n6 + 
      15*d^2*n6 + 2*d*n11*n6 + 16*n5*n6 - 18*d*n5*n6 - 4*n11*n5*n6 + 
      4*n5^2*n6 + 16*n6^2 - 18*d*n6^2 - 4*n11*n6^2 + 12*n5*n6^2 + 8*n6^3)) + 
   ((42 - 61*d + 29*d^2 - 4*d^3 + 6*n11 - 8*d*n11 + 2*d^2*n11 + 14*n5 - 
      12*d*n5 + 2*d^2*n5 + 20*n6 - 9*d*n6 - 4*d^2*n6 + 4*n11*n6 + 4*d*n5*n6 - 
      14*n6^2 + 16*d*n6^2 - 2*n11*n6^2 - 6*n5*n6^2 - 8*n6^3)*
     j[p4, 0, 0, 0, 0, n5, n6, 1, 1, 0, 0, n11, 0, 0, 1])/
    (22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 4*n5 + 18*d*n5 - 
     10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 4*d*n5^2 - 8*n6 + 
     24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 18*d*n5*n6 + 4*n11*n5*n6 - 
     4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((42 - 61*d + 29*d^2 - 4*d^3 + 6*n11 - 8*d*n11 + 2*d^2*n11 + 14*n5 - 
      12*d*n5 + 2*d^2*n5 + 20*n6 - 9*d*n6 - 4*d^2*n6 + 4*n11*n6 + 4*d*n5*n6 - 
      14*n6^2 + 16*d*n6^2 - 2*n11*n6^2 - 6*n5*n6^2 - 8*n6^3)*
     j[p4, 0, 0, 0, 0, n5, n6, 1, 1, 0, 0, n11, 0, 1, 0])/
    (22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 4*n5 + 18*d*n5 - 
     10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 4*d*n5^2 - 8*n6 + 
     24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 18*d*n5*n6 + 4*n11*n5*n6 - 
     4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((21 - 19*d + 4*d^2 + 6*n5 - 2*d*n5 + 2*n6 + d*n6 - 2*n5*n6 - 3*n6^2)*
     j[p4, 0, 0, 0, 0, n5, n6, 1, 2, 0, 0, -1 + n11, 0, 0, 1])/
    (22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 4*n5 + 18*d*n5 - 
     10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 4*d*n5^2 - 8*n6 + 
     24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 18*d*n5*n6 + 4*n11*n5*n6 - 
     4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((18 - 15*d + 3*d^2 + 6*n5 - 2*d*n5 + d*n6 - 2*n5*n6 - 2*n6^2)*
     j[p4, 0, 0, 0, 0, n5, n6, 2, 0, 0, -1, n11, 0, 1, 1])/
    (22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 4*n5 + 18*d*n5 - 
     10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 4*d*n5^2 - 8*n6 + 
     24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 18*d*n5*n6 + 4*n11*n5*n6 - 
     4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((-18 + 15*d - 3*d^2 - 6*n5 + 2*d*n5 - d*n6 + 2*n5*n6 + 2*n6^2)*
     j[p4, 0, 0, 0, 0, n5, n6, 2, 0, 0, 0, -1 + n11, 0, 1, 1])/
    (22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 4*n5 + 18*d*n5 - 
     10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 4*d*n5^2 - 8*n6 + 
     24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 18*d*n5*n6 + 4*n11*n5*n6 - 
     4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((21 - 19*d + 4*d^2 + 6*n5 - 2*d*n5 + 2*n6 + d*n6 - 2*n5*n6 - 3*n6^2)*
     j[p4, 0, 0, 0, 0, n5, n6, 2, 1, 0, -1, n11, 0, 0, 1])/
    (22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 4*n5 + 18*d*n5 - 
     10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 4*d*n5^2 - 8*n6 + 
     24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 18*d*n5*n6 + 4*n11*n5*n6 - 
     4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((-21 + 19*d - 4*d^2 - 6*n5 + 2*d*n5 - 2*n6 - d*n6 + 2*n5*n6 + 3*n6^2)*
     j[p4, 0, 0, 0, 0, n5, n6, 2, 1, 0, 0, -1 + n11, 0, 0, 1])/
    (22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 4*n5 + 18*d*n5 - 
     10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 4*d*n5^2 - 8*n6 + 
     24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 18*d*n5*n6 + 4*n11*n5*n6 - 
     4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((-21*n6 + 19*d*n6 - 4*d^2*n6 - 6*n5*n6 + 2*d*n5*n6 - 2*n6^2 - d*n6^2 + 
      2*n5*n6^2 + 3*n6^3)*j[p4, 0, 0, 0, 0, n5, 1 + n6, 0, 1, -1, 0, n11, 0, 
      1, 1])/(22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 4*n5 + 
     18*d*n5 - 10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 4*d*n5^2 - 
     8*n6 + 24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 18*d*n5*n6 + 
     4*n11*n5*n6 - 4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 4*n11*n6^2 - 
     12*n5*n6^2 - 8*n6^3) + ((21*n6 - 19*d*n6 + 4*d^2*n6 + 6*n5*n6 - 
      2*d*n5*n6 + 2*n6^2 + d*n6^2 - 2*n5*n6^2 - 3*n6^3)*
     j[p4, 0, 0, 0, 0, n5, 1 + n6, 0, 1, 0, -1, n11, 0, 1, 1])/
    (22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 4*n5 + 18*d*n5 - 
     10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 4*d*n5^2 - 8*n6 + 
     24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 18*d*n5*n6 + 4*n11*n5*n6 - 
     4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((24*n6 - 23*d*n6 + 5*d^2*n6 + 6*n5*n6 - 2*d*n5*n6 + 4*n6^2 + d*n6^2 - 
      2*n5*n6^2 - 4*n6^3)*j[p4, 0, 0, 0, 0, n5, 1 + n6, 1, 0, -1, 0, n11, 0, 
      1, 1])/(-22*d + 23*d^2 - 7*d^3 + 36*n11 - 30*d*n11 + 6*d^2*n11 + 4*n5 - 
     18*d*n5 + 10*d^2*n5 + 12*n11*n5 - 4*d*n11*n5 + 4*n5^2 - 4*d*n5^2 + 
     8*n6 - 24*d*n6 + 15*d^2*n6 + 2*d*n11*n6 + 16*n5*n6 - 18*d*n5*n6 - 
     4*n11*n5*n6 + 4*n5^2*n6 + 16*n6^2 - 18*d*n6^2 - 4*n11*n6^2 + 
     12*n5*n6^2 + 8*n6^3) + ((-24*n6 + 23*d*n6 - 5*d^2*n6 - 6*n5*n6 + 
      2*d*n5*n6 - 4*n6^2 - d*n6^2 + 2*n5*n6^2 + 4*n6^3)*
     j[p4, 0, 0, 0, 0, n5, 1 + n6, 1, 0, 0, -1, n11, 0, 1, 1])/
    (-22*d + 23*d^2 - 7*d^3 + 36*n11 - 30*d*n11 + 6*d^2*n11 + 4*n5 - 
     18*d*n5 + 10*d^2*n5 + 12*n11*n5 - 4*d*n11*n5 + 4*n5^2 - 4*d*n5^2 + 
     8*n6 - 24*d*n6 + 15*d^2*n6 + 2*d*n11*n6 + 16*n5*n6 - 18*d*n5*n6 - 
     4*n11*n5*n6 + 4*n5^2*n6 + 16*n6^2 - 18*d*n6^2 - 4*n11*n6^2 + 
     12*n5*n6^2 + 8*n6^3) + ((-3*n6 + 6*d*n6 - 3*d^2*n6 - 2*n5*n6 + 
      2*d*n5*n6 - 6*n6^2 + 6*d*n6^2 - 2*n5*n6^2 - 3*n6^3)*
     j[p4, 0, 0, 0, 0, n5, 1 + n6, 1, 0, 0, 0, n11, -1, 1, 1])/
    (22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 4*n5 + 18*d*n5 - 
     10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 4*d*n5^2 - 8*n6 + 
     24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 18*d*n5*n6 + 4*n11*n5*n6 - 
     4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((-21*n6 + 19*d*n6 - 4*d^2*n6 - 6*n5*n6 + 2*d*n5*n6 - 2*n6^2 - d*n6^2 + 
      2*n5*n6^2 + 3*n6^3)*j[p4, 0, 0, 0, 0, n5, 1 + n6, 1, 1, -1, 0, n11, 0, 
      0, 1])/(22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 4*n5 + 
     18*d*n5 - 10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 4*d*n5^2 - 
     8*n6 + 24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 18*d*n5*n6 + 
     4*n11*n5*n6 - 4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 4*n11*n6^2 - 
     12*n5*n6^2 - 8*n6^3) + ((-21*n6 + 19*d*n6 - 4*d^2*n6 - 6*n5*n6 + 
      2*d*n5*n6 - 2*n6^2 - d*n6^2 + 2*n5*n6^2 + 3*n6^3)*
     j[p4, 0, 0, 0, 0, n5, 1 + n6, 1, 1, -1, 0, n11, 0, 1, 0])/
    (22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 4*n5 + 18*d*n5 - 
     10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 4*d*n5^2 - 8*n6 + 
     24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 18*d*n5*n6 + 4*n11*n5*n6 - 
     4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((21*n6 - 19*d*n6 + 4*d^2*n6 + 6*n5*n6 - 2*d*n5*n6 + 2*n6^2 + d*n6^2 - 
      2*n5*n6^2 - 3*n6^3)*j[p4, 0, 0, 0, 0, n5, 1 + n6, 1, 1, 0, -1, n11, 0, 
      0, 1])/(22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 4*n5 + 
     18*d*n5 - 10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 4*d*n5^2 - 
     8*n6 + 24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 18*d*n5*n6 + 
     4*n11*n5*n6 - 4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 4*n11*n6^2 - 
     12*n5*n6^2 - 8*n6^3) + ((21*n6 - 19*d*n6 + 4*d^2*n6 + 6*n5*n6 - 
      2*d*n5*n6 + 2*n6^2 + d*n6^2 - 2*n5*n6^2 - 3*n6^3)*
     j[p4, 0, 0, 0, 0, n5, 1 + n6, 1, 1, 0, -1, n11, 0, 1, 0])/
    (22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 4*n5 + 18*d*n5 - 
     10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 4*d*n5^2 - 8*n6 + 
     24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 18*d*n5*n6 + 4*n11*n5*n6 - 
     4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((6*n5 - 10*d*n5 + 4*d^2*n5 + 2*n5^2 - 2*d*n5^2 + 8*n5*n6 - 6*d*n5*n6 + 
      2*n5^2*n6 + 2*n5*n6^2)*j[p4, 0, 0, 0, 0, 1 + n5, -1 + n6, 0, 1, 0, 0, 
      n11, 0, 1, 1])/(22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 
     4*n5 + 18*d*n5 - 10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 
     4*d*n5^2 - 8*n6 + 24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 
     18*d*n5*n6 + 4*n11*n5*n6 - 4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 
     4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((-24*n5 + 48*d*n5 - 28*d^2*n5 + 4*d^3*n5 - 6*n11*n5 + 8*d*n11*n5 - 
      2*d^2*n11*n5 - 10*n5^2 + 12*d*n5^2 - 2*d^2*n5^2 - 24*n5*n6 + 
      16*d*n5*n6 + 4*d^2*n5*n6 - 4*n11*n5*n6 - 4*n5^2*n6 - 4*d*n5^2*n6 + 
      8*n5*n6^2 - 16*d*n5*n6^2 + 2*n11*n5*n6^2 + 6*n5^2*n6^2 + 8*n5*n6^3)*
     j[p4, 0, 0, 0, 0, 1 + n5, -1 + n6, 1, 1, 0, 0, n11, 0, 0, 1])/
    ((-1 + n6)*(22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 
      4*n5 + 18*d*n5 - 10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 
      4*d*n5^2 - 8*n6 + 24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 
      18*d*n5*n6 + 4*n11*n5*n6 - 4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 
      4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3)) + 
   ((24*n5 - 48*d*n5 + 28*d^2*n5 - 4*d^3*n5 + 6*n11*n5 - 8*d*n11*n5 + 
      2*d^2*n11*n5 + 10*n5^2 - 12*d*n5^2 + 2*d^2*n5^2 + 24*n5*n6 - 
      16*d*n5*n6 - 4*d^2*n5*n6 + 4*n11*n5*n6 + 4*n5^2*n6 + 4*d*n5^2*n6 - 
      8*n5*n6^2 + 16*d*n5*n6^2 - 2*n11*n5*n6^2 - 6*n5^2*n6^2 - 8*n5*n6^3)*
     j[p4, 0, 0, 0, 0, 1 + n5, -1 + n6, 1, 1, 0, 0, n11, 0, 1, 0])/
    ((-1 + n6)*(22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 
      4*n5 + 18*d*n5 - 10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 
      4*d*n5^2 - 8*n6 + 24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 
      18*d*n5*n6 + 4*n11*n5*n6 - 4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 
      4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3)) + 
   ((-3*n5 + 4*d*n5 - d^2*n5 - 2*n5*n6 + n5*n6^2)*j[p4, 0, 0, 0, 0, 1 + n5, 
      n6, 0, 1, -1, 0, n11, 0, 1, 1])/(22*d - 23*d^2 + 7*d^3 - 36*n11 + 
     30*d*n11 - 6*d^2*n11 - 4*n5 + 18*d*n5 - 10*d^2*n5 - 12*n11*n5 + 
     4*d*n11*n5 - 4*n5^2 + 4*d*n5^2 - 8*n6 + 24*d*n6 - 15*d^2*n6 - 
     2*d*n11*n6 - 16*n5*n6 + 18*d*n5*n6 + 4*n11*n5*n6 - 4*n5^2*n6 - 16*n6^2 + 
     18*d*n6^2 + 4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((21*n5 - 19*d*n5 + 4*d^2*n5 + 6*n5^2 - 2*d*n5^2 + 2*n5*n6 + d*n5*n6 - 
      2*n5^2*n6 - 3*n5*n6^2)*j[p4, 0, 0, 0, 0, 1 + n5, n6, 1, 1, -1, 0, n11, 
      0, 0, 1])/(22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 
     4*n5 + 18*d*n5 - 10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 
     4*d*n5^2 - 8*n6 + 24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 
     18*d*n5*n6 + 4*n11*n5*n6 - 4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 
     4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3) + 
   ((-21*n5 + 19*d*n5 - 4*d^2*n5 - 6*n5^2 + 2*d*n5^2 - 2*n5*n6 - d*n5*n6 + 
      2*n5^2*n6 + 3*n5*n6^2)*j[p4, 0, 0, 0, 0, 1 + n5, n6, 1, 1, -1, 0, n11, 
      0, 1, 0])/(22*d - 23*d^2 + 7*d^3 - 36*n11 + 30*d*n11 - 6*d^2*n11 - 
     4*n5 + 18*d*n5 - 10*d^2*n5 - 12*n11*n5 + 4*d*n11*n5 - 4*n5^2 + 
     4*d*n5^2 - 8*n6 + 24*d*n6 - 15*d^2*n6 - 2*d*n11*n6 - 16*n5*n6 + 
     18*d*n5*n6 + 4*n11*n5*n6 - 4*n5^2*n6 - 16*n6^2 + 18*d*n6^2 + 
     4*n11*n6^2 - 12*n5*n6^2 - 8*n6^3), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n3 == 0 && n4 == 0 && n7 == 1 && n8 == 1 && n9 == 0 && n6 != 1 -> 
  ((8 - 10*d + 2*d^2 + 4*n5 - 4*d*n5 + 8*n6 - 2*d*n6 + 4*n5*n6)*
     j[p4, n1, -1, 0, 0, 1 + n5, n6, 2, 1, 0, 0, 1, 0, 0, 1])/
    ((-2 + d)*(d - 2*n6)*(-6 + 3*d - 2*n5 - 2*n6)) + 
   ((-4*n6 + d*n6 - 2*n5*n6)*j[p4, n1, -1, 0, 0, 1 + n5, 1 + n6, 1, 0, 0, 0, 
      1, 0, 1, 1])/((-2 + d)*(-6 + 3*d - 2*n5 - 2*n6)) + 
   ((8 - 10*d + 2*d^2 + 12*n5 - 14*d*n5 + 2*d^2*n5 + 4*n5^2 - 4*d*n5^2 + 
      8*n6 - 2*d*n6 + 12*n5*n6 - 2*d*n5*n6 + 4*n5^2*n6)*
     j[p4, n1, -1, 0, 0, 2 + n5, n6, 1, 1, 0, 0, 1, 0, 0, 1])/
    ((-2 + d)*(d - 2*n6)*(-6 + 3*d - 2*n5 - 2*n6)) + 
   ((-8 + 10*d - 2*d^2 - 12*n5 + 14*d*n5 - 2*d^2*n5 - 4*n5^2 + 4*d*n5^2 - 
      8*n6 + 2*d*n6 - 12*n5*n6 + 2*d*n5*n6 - 4*n5^2*n6)*
     j[p4, n1, -1, 0, 0, 2 + n5, n6, 1, 1, 0, 0, 1, 0, 1, 0])/
    ((-2 + d)*(d - 2*n6)*(-6 + 3*d - 2*n5 - 2*n6)) + 
   ((-2 + 2*d - 2*n6)*j[p4, n1, 0, -1, 0, 1 + n5, n6, 1, 1, 0, 0, 1, 0, 0, 
      2])/((-2 + d)*(-6 + 3*d - 2*n5 - 2*n6)) + 
   ((-8 + 10*d - 2*d^2 - 4*n5 + 4*d*n5 - 8*n6 + 2*d*n6 - 4*n5*n6)*
     j[p4, n1, 0, -1, 0, 1 + n5, n6, 2, 0, 0, 0, 1, 0, 1, 1])/
    ((-2 + d)*(d - 2*n6)*(-6 + 3*d - 2*n5 - 2*n6)) + 
   ((2 - 2*d + 2*n6)*j[p4, n1, 0, 0, -1, 1 + n5, n6, 1, 1, 0, 0, 1, 0, 0, 2])/
    ((-2 + d)*(-6 + 3*d - 2*n5 - 2*n6)) + 
   ((-4 + d - 2*n5)*j[p4, n1, 0, 0, -1, 1 + n5, n6, 2, 0, 0, 0, 1, 0, 1, 1])/
    ((d - 2*n6)*(-6 + 3*d - 2*n5 - 2*n6)) + 
   ((8 - 12*d + 4*d^2 + 4*n5 - 4*d*n5 + 12*n6 - 8*d*n6 + 4*n5*n6 + 4*n6^2)*
     j[p4, n1, 0, 0, -1, 1 + n5, n6, 2, 1, 0, 0, 1, 0, 0, 1])/
    ((-2 + d)*(d - 2*n6)*(-6 + 3*d - 2*n5 - 2*n6)) + 
   ((8 - 12*d + 4*d^2 + 12*n5 - 16*d*n5 + 4*d^2*n5 + 4*n5^2 - 4*d*n5^2 + 
      12*n6 - 8*d*n6 + 16*n5*n6 - 8*d*n5*n6 + 4*n5^2*n6 + 4*n6^2 + 4*n5*n6^2)*
     j[p4, n1, 0, 0, -1, 2 + n5, n6, 1, 1, 0, 0, 1, 0, 0, 1])/
    ((-2 + d)*(d - 2*n6)*(-6 + 3*d - 2*n5 - 2*n6)) + 
   ((-8 + 12*d - 4*d^2 - 12*n5 + 16*d*n5 - 4*d^2*n5 - 4*n5^2 + 4*d*n5^2 - 
      12*n6 + 8*d*n6 - 16*n5*n6 + 8*d*n5*n6 - 4*n5^2*n6 - 4*n6^2 - 4*n5*n6^2)*
     j[p4, n1, 0, 0, -1, 2 + n5, n6, 1, 1, 0, 0, 1, 0, 1, 0])/
    ((-2 + d)*(d - 2*n6)*(-6 + 3*d - 2*n5 - 2*n6)) + 
   ((4 - d + 2*n5)*j[p4, n1, 0, 0, 0, n5, n6, 2, 0, 0, 0, 1, 0, 1, 1])/
    ((d - 2*n6)*(-6 + 3*d - 2*n5 - 2*n6)) + 
   ((-8 + 12*d - 4*d^2 - 4*n5 + 4*d*n5 - 12*n6 + 8*d*n6 - 4*n5*n6 - 4*n6^2)*
     j[p4, n1, 0, 0, 0, n5, n6, 2, 1, 0, 0, 1, 0, 0, 1])/
    ((-2 + d)*(d - 2*n6)*(-6 + 3*d - 2*n5 - 2*n6)) + 
   ((4*n6 - d*n6 + 2*n5*n6)*j[p4, n1, 0, 0, 0, n5, 1 + n6, 1, 0, 0, 0, 1, 0, 
      1, 1])/((-2 + d)*(-6 + 3*d - 2*n5 - 2*n6)) + 
   ((4 - 5*d + d^2 + 2*n5 - 2*d*n5 + 4*n6 - d*n6 + 2*n5*n6)*
     j[p4, n1, 0, 0, 0, 1 + n5, -1 + n6, 1, 1, 0, 0, 1, 0, 1, 1])/
    ((d - 2*n6)*(-1 + n6)) + ((-2 + 2*d - 2*n5 + 2*d*n5 - 2*n6 - 2*n5*n6)*
     j[p4, n1, 0, 0, 0, 1 + n5, n6, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((-2 + d)*(-6 + 3*d - 2*n5 - 2*n6)) + 
   ((4 - 5*d + d^2 + 2*n5 - 2*d*n5 + 4*n6 - d*n6 + 2*n5*n6)*
     j[p4, n1, 0, 0, 0, 1 + n5, n6, 1, 0, 0, 0, 1, 0, 1, 1])/
    ((-2 + d)*(d - 2*n6)) + ((-8 + 12*d - 4*d^2 - 12*n5 + 16*d*n5 - 
      4*d^2*n5 - 4*n5^2 + 4*d*n5^2 - 12*n6 + 8*d*n6 - 16*n5*n6 + 8*d*n5*n6 - 
      4*n5^2*n6 - 4*n6^2 - 4*n5*n6^2)*j[p4, n1, 0, 0, 0, 1 + n5, n6, 1, 1, 0, 
      0, 1, 0, 0, 1])/((-2 + d)*(d - 2*n6)*(-6 + 3*d - 2*n5 - 2*n6)) + 
   ((8 - 12*d + 4*d^2 + 12*n5 - 16*d*n5 + 4*d^2*n5 + 4*n5^2 - 4*d*n5^2 + 
      12*n6 - 8*d*n6 + 16*n5*n6 - 8*d*n5*n6 + 4*n5^2*n6 + 4*n6^2 + 4*n5*n6^2)*
     j[p4, n1, 0, 0, 0, 1 + n5, n6, 1, 1, 0, 0, 1, 0, 1, 0])/
    ((-2 + d)*(d - 2*n6)*(-6 + 3*d - 2*n5 - 2*n6)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 0 && n12 == 0 && n13 == 1 && n14 == 1 && n3 == 0 && 
    n4 == 0 && n6 == 1 && n7 == 1 && n8 == 1 && n9 == 0 && 
     !(n11 == 1 || n2 == 0) -> 
  ((4 - d + 2*n2)*j[p4, -1, 1 + n2, 0, 0, n5, 1, 0, 1, 0, 0, n11, 0, 2, 1])/
    (30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 6*d*n2 + 2*n2^2 + 12*n5 - 
     4*d*n5 + 4*n2*n5) + ((-4 + d - 2*n2)*j[p4, -1, 1 + n2, 0, 0, n5, 1, 0, 
      2, 0, 0, n11, 0, 1, 1])/(30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 
     6*d*n2 + 2*n2^2 + 12*n5 - 4*d*n5 + 4*n2*n5) + 
   ((114 - 107*d + 24*d^2 + 54*n11 - 22*d*n11 + 4*n11^2 + 48*n2 - 21*d*n2 + 
      10*n11*n2 + 6*n2^2 + 68*n5 - 29*d*n5 + 12*n11*n5 + 14*n2*n5 + 8*n5^2)*
     j[p4, -1, 1 + n2, 0, 0, n5, 1, 1, 1, 0, 0, n11, 0, 1, 1])/
    (30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 6*d*n2 + 2*n2^2 + 12*n5 - 
     4*d*n5 + 4*n2*n5) + ((4*n5 - d*n5 + 2*n2*n5)*j[p4, -1, 1 + n2, 0, 0, 
      1 + n5, 1, 0, 1, 0, 0, n11, 0, 1, 1])/(30 - 24*d + 5*d^2 + 4*n11 - 
     2*d*n11 + 16*n2 - 6*d*n2 + 2*n2^2 + 12*n5 - 4*d*n5 + 4*n2*n5) + 
   ((4 - d + 6*n2 - d*n2 + 2*n2^2)*j[p4, -1, 2 + n2, 0, 0, n5, 1, 0, 1, 0, 0, 
      n11, 0, 1, 1])/(30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 6*d*n2 + 
     2*n2^2 + 12*n5 - 4*d*n5 + 4*n2*n5) + 
   ((-4 + d - 6*n2 + d*n2 - 2*n2^2)*j[p4, -1, 2 + n2, 0, 0, n5, 1, 1, 0, 0, 
      0, n11, 0, 1, 1])/(30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 
     6*d*n2 + 2*n2^2 + 12*n5 - 4*d*n5 + 4*n2*n5) + 
   ((60 - 35*d + 5*d^2 + 42*n2 - 13*d*n2 + 6*n2^2 + 12*n5 - 3*d*n5 + 6*n2*n5)*
     j[p4, 0, n2, 0, 0, n5, 1, 1, 2, 0, 0, -1 + n11, 0, 1, 1])/
    ((-1 + n11)*(-30 + 24*d - 5*d^2 - 4*n11 + 2*d*n11 - 16*n2 + 6*d*n2 - 
      2*n2^2 - 12*n5 + 4*d*n5 - 4*n2*n5)) + 
   ((5 - 3*d + 2*n11 + n2 + 2*n5)*j[p4, 0, n2, 0, 0, n5, 1, 1, 2, 0, 0, n11, 
      0, 0, 1])/(30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 6*d*n2 + 
     2*n2^2 + 12*n5 - 4*d*n5 + 4*n2*n5) + 
   ((-34 + 38*d - 10*d^2 - 30*n11 + 14*d*n11 - 4*n11^2 - 12*n2 + 6*d*n2 - 
      6*n11*n2 - 2*n2^2 - 26*n5 + 13*d*n5 - 8*n11*n5 - 4*n2*n5 - 4*n5^2)*
     j[p4, 0, n2, 0, 0, n5, 1, 2, 1, 0, 0, -1 + n11, 0, 1, 1])/
    ((-1 + n11)*(-30 + 24*d - 5*d^2 - 4*n11 + 2*d*n11 - 16*n2 + 6*d*n2 - 
      2*n2^2 - 12*n5 + 4*d*n5 - 4*n2*n5)) + 
   ((10 - 6*d + 4*n11 + 2*n2 + 4*n5)*j[p4, 0, n2, 0, 0, n5, 1, 2, 1, 0, 0, 
      n11, 0, 0, 1])/(30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 6*d*n2 + 
     2*n2^2 + 12*n5 - 4*d*n5 + 4*n2*n5) + 
   ((1 - 2*d + 2*n11 - n2 + 2*n5)*j[p4, 0, n2, 0, 0, n5, 2, 1, 0, 0, 0, n11, 
      0, 1, 1])/(30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 6*d*n2 + 
     2*n2^2 + 12*n5 - 4*d*n5 + 4*n2*n5) + 
   ((-9*n5 + 4*d*n5 - 2*n11*n5 - 3*n2*n5 - 2*n5^2)*j[p4, 0, n2, 0, 0, 1 + n5, 
      1, 0, 1, 0, 0, n11, 0, 1, 1])/(30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 
     16*n2 - 6*d*n2 + 2*n2^2 + 12*n5 - 4*d*n5 + 4*n2*n5) + 
   ((15*n5 - 9*d*n5 + 6*n11*n5 + 3*n2*n5 + 6*n5^2)*j[p4, 0, n2, 0, 0, 1 + n5, 
      1, 1, 1, 0, 0, n11, 0, 0, 1])/(30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 
     16*n2 - 6*d*n2 + 2*n2^2 + 12*n5 - 4*d*n5 + 4*n2*n5) + 
   ((-15*n5 + 9*d*n5 - 6*n11*n5 - 3*n2*n5 - 6*n5^2)*
     j[p4, 0, n2, 0, 0, 1 + n5, 1, 1, 1, 0, 0, n11, 0, 1, 0])/
    (30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 6*d*n2 + 2*n2^2 + 12*n5 - 
     4*d*n5 + 4*n2*n5) + ((-9 + 4*d - 2*n11 - 3*n2 - 2*n5)*
     j[p4, 0, 1 + n2, -1, 0, n5, 0, 1, 1, 0, 0, n11, 0, 1, 2])/
    (30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 6*d*n2 + 2*n2^2 + 12*n5 - 
     4*d*n5 + 4*n2*n5) + ((-9 + 4*d - 2*n11 - 3*n2 - 2*n5)*
     j[p4, 0, 1 + n2, -1, 0, n5, 1, 0, 1, 0, 0, n11, 0, 1, 2])/
    (30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 6*d*n2 + 2*n2^2 + 12*n5 - 
     4*d*n5 + 4*n2*n5) + ((-9 + 4*d - 2*n11 - 3*n2 - 2*n5)*
     j[p4, 0, 1 + n2, -1, 0, n5, 1, 1, 0, 0, 0, n11, 0, 1, 2])/
    (30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 6*d*n2 + 2*n2^2 + 12*n5 - 
     4*d*n5 + 4*n2*n5) + ((-9 + 4*d - 2*n11 - 3*n2 - 2*n5)*
     j[p4, 0, 1 + n2, -1, 0, n5, 1, 1, 0, 0, 0, n11, 0, 2, 1])/
    (30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 6*d*n2 + 2*n2^2 + 12*n5 - 
     4*d*n5 + 4*n2*n5) + ((-9 + 4*d - 2*n11 - 3*n2 - 2*n5)*
     j[p4, 0, 1 + n2, -1, 0, n5, 1, 1, 1, 0, 0, n11, 0, 0, 2])/
    (30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 6*d*n2 + 2*n2^2 + 12*n5 - 
     4*d*n5 + 4*n2*n5) + ((-10 + 6*d - 4*n11 - 2*n2 - 4*n5)*
     j[p4, 0, 1 + n2, -1, 0, n5, 1, 2, 0, 0, 0, n11, 0, 1, 1])/
    (30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 6*d*n2 + 2*n2^2 + 12*n5 - 
     4*d*n5 + 4*n2*n5) + ((-46 + 45*d - 11*d^2 - 26*n11 + 13*d*n11 - 
      4*n11^2 - 18*n2 + 8*d*n2 - 4*n11*n2 - 2*n2^2 - 30*n5 + 14*d*n5 - 
      8*n11*n5 - 6*n2*n5 - 4*n5^2)*j[p4, 0, 1 + n2, -1, 0, n5, 1, 2, 1, 0, 0, 
      -1 + n11, 0, 1, 1])/((-1 + n11)*(-30 + 24*d - 5*d^2 - 4*n11 + 2*d*n11 - 
      16*n2 + 6*d*n2 - 2*n2^2 - 12*n5 + 4*d*n5 - 4*n2*n5)) + 
   ((1 - 2*d + 2*n11 - n2 + 2*n5)*j[p4, 0, 1 + n2, -1, 0, n5, 2, 1, 0, 0, 0, 
      n11, 0, 1, 1])/(30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 6*d*n2 + 
     2*n2^2 + 12*n5 - 4*d*n5 + 4*n2*n5) + 
   ((9 - 4*d + 2*n11 + 3*n2 + 2*n5)*j[p4, 0, 1 + n2, 0, -1, n5, 0, 1, 1, 0, 
      0, n11, 0, 1, 2])/(30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 
     6*d*n2 + 2*n2^2 + 12*n5 - 4*d*n5 + 4*n2*n5) + 
   ((9 - 4*d + 2*n11 + 3*n2 + 2*n5)*j[p4, 0, 1 + n2, 0, -1, n5, 1, 0, 1, 0, 
      0, n11, 0, 1, 2])/(30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 
     6*d*n2 + 2*n2^2 + 12*n5 - 4*d*n5 + 4*n2*n5) + 
   ((9 - 4*d + 2*n11 + 3*n2 + 2*n5)*j[p4, 0, 1 + n2, 0, -1, n5, 1, 1, 0, 0, 
      0, n11, 0, 1, 2])/(30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 
     6*d*n2 + 2*n2^2 + 12*n5 - 4*d*n5 + 4*n2*n5) + 
   ((9 - 4*d + 2*n11 + 3*n2 + 2*n5)*j[p4, 0, 1 + n2, 0, -1, n5, 1, 1, 1, 0, 
      0, n11, 0, 0, 2])/(30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 
     6*d*n2 + 2*n2^2 + 12*n5 - 4*d*n5 + 4*n2*n5) + 
   ((8 - 6*d + d^2 + 4*n2 - 2*d*n2 + 4*n5 - d*n5 + 2*n2*n5)*
     j[p4, 0, 1 + n2, 0, -1, n5, 1, 1, 2, 0, 0, -1 + n11, 0, 1, 1])/
    ((-1 + n11)*(-30 + 24*d - 5*d^2 - 4*n11 + 2*d*n11 - 16*n2 + 6*d*n2 - 
      2*n2^2 - 12*n5 + 4*d*n5 - 4*n2*n5)) + 
   ((8 - 6*d + d^2 + 4*n2 - 2*d*n2 + 4*n5 - d*n5 + 2*n2*n5)*
     j[p4, 0, 1 + n2, 0, -1, n5, 1, 2, 1, 0, 0, -1 + n11, 0, 1, 1])/
    ((-1 + n11)*(-30 + 24*d - 5*d^2 - 4*n11 + 2*d*n11 - 16*n2 + 6*d*n2 - 
      2*n2^2 - 12*n5 + 4*d*n5 - 4*n2*n5)) + 
   ((-1 + 2*d - 2*n11 + n2 - 2*n5)*j[p4, 0, 1 + n2, 0, -1, n5, 2, 0, 1, 0, 0, 
      n11, 0, 1, 1])/(30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 6*d*n2 + 
     2*n2^2 + 12*n5 - 4*d*n5 + 4*n2*n5) + 
   ((-1 + 2*d - 2*n11 + n2 - 2*n5)*j[p4, 0, 1 + n2, 0, -1, n5, 2, 1, 0, 0, 0, 
      n11, 0, 1, 1])/(30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 6*d*n2 + 
     2*n2^2 + 12*n5 - 4*d*n5 + 4*n2*n5) + 
   ((-1 + 2*d - 2*n11 + n2 - 2*n5)*j[p4, 0, 1 + n2, 0, -1, n5, 2, 1, 1, 0, 0, 
      n11, 0, 0, 1])/(30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 6*d*n2 + 
     2*n2^2 + 12*n5 - 4*d*n5 + 4*n2*n5) + 
   ((-1 + 2*d - 2*n11 + n2 - 2*n5)*j[p4, 0, 1 + n2, 0, -1, n5, 2, 1, 1, 0, 0, 
      n11, 0, 1, 0])/(30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 6*d*n2 + 
     2*n2^2 + 12*n5 - 4*d*n5 + 4*n2*n5) + 
   ((9*n5 - 4*d*n5 + 2*n11*n5 + 3*n2*n5 + 2*n5^2)*j[p4, 0, 1 + n2, 0, -1, 
      1 + n5, 0, 1, 1, 0, 0, n11, 0, 1, 1])/(30 - 24*d + 5*d^2 + 4*n11 - 
     2*d*n11 + 16*n2 - 6*d*n2 + 2*n2^2 + 12*n5 - 4*d*n5 + 4*n2*n5) + 
   ((n5 - 2*d*n5 + 2*n11*n5 - n2*n5 + 2*n5^2)*j[p4, 0, 1 + n2, 0, -1, 1 + n5, 
      1, 1, 1, 0, 0, n11, 0, 0, 1])/(30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 
     16*n2 - 6*d*n2 + 2*n2^2 + 12*n5 - 4*d*n5 + 4*n2*n5) + 
   ((-n5 + 2*d*n5 - 2*n11*n5 + n2*n5 - 2*n5^2)*j[p4, 0, 1 + n2, 0, -1, 
      1 + n5, 1, 1, 1, 0, 0, n11, 0, 1, 0])/(30 - 24*d + 5*d^2 + 4*n11 - 
     2*d*n11 + 16*n2 - 6*d*n2 + 2*n2^2 + 12*n5 - 4*d*n5 + 4*n2*n5) + 
   ((8 - 6*d + d^2 + 4*n2 - 2*d*n2 + 4*n5 - d*n5 + 2*n2*n5)*
     j[p4, 0, 1 + n2, 0, 0, -1 + n5, 1, 1, 1, 0, 0, n11, 0, 1, 1])/
    (30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 6*d*n2 + 2*n2^2 + 12*n5 - 
     4*d*n5 + 4*n2*n5) + ((-6 + 5*d - 4*n11 - 4*n5)*
     j[p4, 0, 1 + n2, 0, 0, -1 + n5, 1, 1, 1, 0, 0, n11, 0, 1, 2])/
    (30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 6*d*n2 + 2*n2^2 + 12*n5 - 
     4*d*n5 + 4*n2*n5) + ((-8 + 6*d - d^2 - 4*n2 + 2*d*n2 - 4*n5 + d*n5 - 
      2*n2*n5)*j[p4, 0, 1 + n2, 0, 0, -1 + n5, 1, 2, 1, 0, 0, -1 + n11, 0, 1, 
      1])/((-1 + n11)*(-30 + 24*d - 5*d^2 - 4*n11 + 2*d*n11 - 16*n2 + 
      6*d*n2 - 2*n2^2 - 12*n5 + 4*d*n5 - 4*n2*n5)) + 
   ((-1 - 2*d + d^2 - 2*n11 + n2 - 2*d*n2 + 2*n5 - d*n5 + 2*n2*n5)*
     j[p4, 0, 1 + n2, 0, 0, n5, 0, 1, 1, 0, 0, n11, 0, 1, 1])/
    (30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 6*d*n2 + 2*n2^2 + 12*n5 - 
     4*d*n5 + 4*n2*n5) + ((-8 + 6*d - d^2 - 4*n2 + 2*d*n2 - 4*n5 + d*n5 - 
      2*n2*n5)*j[p4, 0, 1 + n2, 0, 0, n5, 0, 1, 2, 0, 0, -1 + n11, 0, 1, 1])/
    ((-1 + n11)*(-30 + 24*d - 5*d^2 - 4*n11 + 2*d*n11 - 16*n2 + 6*d*n2 - 
      2*n2^2 - 12*n5 + 4*d*n5 - 4*n2*n5)) + 
   ((9 - 4*d + 2*n11 + 3*n2 + 2*n5)*j[p4, 0, 1 + n2, 0, 0, n5, 1, 0, 1, 0, 0, 
      n11, -1, 2, 1])/(30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 6*d*n2 + 
     2*n2^2 + 12*n5 - 4*d*n5 + 4*n2*n5) + 
   ((71 - 43*d + 5*d^2 + 10*n11 - d*n11 + 48*n2 - 16*d*n2 + 4*n11*n2 + 
      7*n2^2 + 18*n5 - 3*d*n5 + 8*n2*n5)*j[p4, 0, 1 + n2, 0, 0, n5, 1, 0, 1, 
      0, 0, n11, 0, 1, 1])/(30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 
     6*d*n2 + 2*n2^2 + 12*n5 - 4*d*n5 + 4*n2*n5) + 
   ((-4 + d - 2*n2)*j[p4, 0, 1 + n2, 0, 0, n5, 1, 0, 1, 0, 0, n11, 0, 2, 1])/
    (30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 6*d*n2 + 2*n2^2 + 12*n5 - 
     4*d*n5 + 4*n2*n5) + ((-4*n11 + d*n11 - 2*n11*n2)*
     j[p4, 0, 1 + n2, 0, 0, n5, 1, 0, 1, 0, 0, 1 + n11, -1, 1, 1])/
    (-30 + 24*d - 5*d^2 - 4*n11 + 2*d*n11 - 16*n2 + 6*d*n2 - 2*n2^2 - 12*n5 + 
     4*d*n5 - 4*n2*n5) + ((4*n11 - d*n11 + 2*n11*n2)*
     j[p4, 0, 1 + n2, 0, 0, n5, 1, 0, 1, 0, 0, 1 + n11, 0, 1, 1])/
    (-30 + 24*d - 5*d^2 - 4*n11 + 2*d*n11 - 16*n2 + 6*d*n2 - 2*n2^2 - 12*n5 + 
     4*d*n5 - 4*n2*n5) + ((-56 + 34*d - 5*d^2 - 4*n11 + d*n11 - 40*n2 + 
      13*d*n2 - 2*n11*n2 - 6*n2^2 - 12*n5 + 3*d*n5 - 6*n2*n5)*
     j[p4, 0, 1 + n2, 0, 0, n5, 1, 0, 2, 0, 0, -1 + n11, 0, 1, 1])/
    ((-1 + n11)*(-30 + 24*d - 5*d^2 - 4*n11 + 2*d*n11 - 16*n2 + 6*d*n2 - 
      2*n2^2 - 12*n5 + 4*d*n5 - 4*n2*n5)) + 
   ((-5 + 3*d - 2*n11 - n2 - 2*n5)*j[p4, 0, 1 + n2, 0, 0, n5, 1, 0, 2, 0, 0, 
      n11, -1, 1, 1])/(30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 6*d*n2 + 
     2*n2^2 + 12*n5 - 4*d*n5 + 4*n2*n5) + 
   ((45 - 24*d + d^2 + 10*n11 + 40*n2 - 17*d*n2 + 10*n11*n2 + 5*n2^2 + 
      14*n5 - d*n5 + 12*n2*n5)*j[p4, 0, 1 + n2, 0, 0, n5, 1, 1, 0, 0, 0, n11, 
      0, 1, 1])/(30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 6*d*n2 + 
     2*n2^2 + 12*n5 - 4*d*n5 + 4*n2*n5) + 
   ((-10*n11 + 6*d*n11 - 4*n11^2 - 2*n11*n2 - 4*n11*n5)*
     j[p4, 0, 1 + n2, 0, 0, n5, 1, 1, 0, 0, 0, 1 + n11, -1, 1, 1])/
    (-30 + 24*d - 5*d^2 - 4*n11 + 2*d*n11 - 16*n2 + 6*d*n2 - 2*n2^2 - 12*n5 + 
     4*d*n5 - 4*n2*n5) + ((10*n11 - 6*d*n11 + 4*n11^2 + 2*n11*n2 + 4*n11*n5)*
     j[p4, 0, 1 + n2, 0, 0, n5, 1, 1, 0, 0, 0, 1 + n11, 0, 1, 1])/
    (-30 + 24*d - 5*d^2 - 4*n11 + 2*d*n11 - 16*n2 + 6*d*n2 - 2*n2^2 - 12*n5 + 
     4*d*n5 - 4*n2*n5) + ((-32 - 5*d + 22*d^2 - 6*d^3 + 38*n11 - 58*d*n11 + 
      18*d^2*n11 + 30*n11^2 - 16*d*n11^2 + 4*n11^3 - 50*n2 + 34*d*n2 - 
      5*d^2*n2 - 16*n11*n2 + 3*d*n11*n2 + 2*n11^2*n2 - 8*n2^2 + 4*d*n2^2 - 
      4*n11*n2^2 + 32*n5 - 39*d*n5 + 11*d^2*n5 + 34*n11*n5 - 19*d*n11*n5 + 
      8*n11^2*n5 - 2*n2*n5 + 8*n5^2 - 4*d*n5^2 + 4*n11*n5^2)*
     j[p4, 0, 1 + n2, 0, 0, n5, 1, 1, 1, 0, 0, -1 + n11, 0, 1, 1])/
    ((-1 + n11)*(-30 + 24*d - 5*d^2 - 4*n11 + 2*d*n11 - 16*n2 + 6*d*n2 - 
      2*n2^2 - 12*n5 + 4*d*n5 - 4*n2*n5)) + 
   ((19 - 10*d + 6*n11 + 35*n2 - 18*d*n2 + 12*n11*n2 + 6*n2^2 + 6*n5 + 
      12*n2*n5)*j[p4, 0, 1 + n2, 0, 0, n5, 1, 1, 1, 0, 0, n11, 0, 0, 1])/
    (30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 6*d*n2 + 2*n2^2 + 12*n5 - 
     4*d*n5 + 4*n2*n5) + ((6 - 5*d + 4*n11 + 4*n5)*j[p4, 0, 1 + n2, 0, 0, n5, 
      1, 1, 1, 0, 0, n11, 0, 0, 2])/(30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 
     16*n2 - 6*d*n2 + 2*n2^2 + 12*n5 - 4*d*n5 + 4*n2*n5) + 
   ((1 - 2*d + 2*n11 - n2 + 2*n5)*j[p4, 0, 1 + n2, 0, 0, n5, 1, 1, 1, 0, 0, 
      n11, 0, 1, 0])/(30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 6*d*n2 + 
     2*n2^2 + 12*n5 - 4*d*n5 + 4*n2*n5) + 
   ((-30 + 32*d - 7*d^2 - 20*n11 + 6*d*n11 - 16*n2 + 10*d*n2 - 8*n11*n2 - 
      2*n2^2 - 22*n5 + 10*d*n5 - 4*n11*n5 - 6*n2*n5 - 4*n5^2)*
     j[p4, 0, 1 + n2, 0, 0, n5, 1, 1, 1, 0, 0, n11, 0, 1, 1])/
    (30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 6*d*n2 + 2*n2^2 + 12*n5 - 
     4*d*n5 + 4*n2*n5) + ((46 - 45*d + 11*d^2 + 26*n11 - 13*d*n11 + 4*n11^2 + 
      18*n2 - 8*d*n2 + 4*n11*n2 + 2*n2^2 + 30*n5 - 14*d*n5 + 8*n11*n5 + 
      6*n2*n5 + 4*n5^2)*j[p4, 0, 1 + n2, 0, 0, n5, 1, 1, 2, 0, 0, -1 + n11, 
      -1, 1, 1])/((-1 + n11)*(-30 + 24*d - 5*d^2 - 4*n11 + 2*d*n11 - 16*n2 + 
      6*d*n2 - 2*n2^2 - 12*n5 + 4*d*n5 - 4*n2*n5)) + 
   ((-46 + 45*d - 11*d^2 - 26*n11 + 13*d*n11 - 4*n11^2 - 18*n2 + 8*d*n2 - 
      4*n11*n2 - 2*n2^2 - 30*n5 + 14*d*n5 - 8*n11*n5 - 6*n2*n5 - 4*n5^2)*
     j[p4, 0, 1 + n2, 0, 0, n5, 1, 1, 2, 0, 0, -1 + n11, 0, 0, 1])/
    ((-1 + n11)*(-30 + 24*d - 5*d^2 - 4*n11 + 2*d*n11 - 16*n2 + 6*d*n2 - 
      2*n2^2 - 12*n5 + 4*d*n5 - 4*n2*n5)) + 
   ((-4 + d - 2*n2)*j[p4, 0, 1 + n2, 0, 0, n5, 1, 2, 0, 0, -1, n11, 0, 1, 1])/
    (30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 6*d*n2 + 2*n2^2 + 12*n5 - 
     4*d*n5 + 4*n2*n5) + ((38 - 39*d + 10*d^2 + 26*n11 - 13*d*n11 + 4*n11^2 + 
      14*n2 - 6*d*n2 + 4*n11*n2 + 2*n2^2 + 26*n5 - 13*d*n5 + 8*n11*n5 + 
      4*n2*n5 + 4*n5^2)*j[p4, 0, 1 + n2, 0, 0, n5, 1, 2, 0, 0, 0, -1 + n11, 
      0, 1, 1])/((-1 + n11)*(-30 + 24*d - 5*d^2 - 4*n11 + 2*d*n11 - 16*n2 + 
      6*d*n2 - 2*n2^2 - 12*n5 + 4*d*n5 - 4*n2*n5)) + 
   ((46 - 45*d + 11*d^2 + 26*n11 - 13*d*n11 + 4*n11^2 + 18*n2 - 8*d*n2 + 
      4*n11*n2 + 2*n2^2 + 30*n5 - 14*d*n5 + 8*n11*n5 + 6*n2*n5 + 4*n5^2)*
     j[p4, 0, 1 + n2, 0, 0, n5, 1, 2, 1, 0, 0, -1 + n11, 0, 0, 1])/
    ((-1 + n11)*(-30 + 24*d - 5*d^2 - 4*n11 + 2*d*n11 - 16*n2 + 6*d*n2 - 
      2*n2^2 - 12*n5 + 4*d*n5 - 4*n2*n5)) + 
   ((-4 + d - 2*n2)*j[p4, 0, 1 + n2, 0, 0, n5, 2, 1, 0, -1, 0, n11, 0, 1, 1])/
    (30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 6*d*n2 + 2*n2^2 + 12*n5 - 
     4*d*n5 + 4*n2*n5) + ((4 - d + 2*n2)*j[p4, 0, 1 + n2, 0, 0, n5, 2, 1, 0, 
      0, -1, n11, 0, 1, 1])/(30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 
     6*d*n2 + 2*n2^2 + 12*n5 - 4*d*n5 + 4*n2*n5) + 
   ((1 - 2*d + 2*n11 - n2 + 2*n5)*j[p4, 0, 1 + n2, 0, 0, n5, 2, 1, 0, 0, 0, 
      n11, -1, 1, 1])/(30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 6*d*n2 + 
     2*n2^2 + 12*n5 - 4*d*n5 + 4*n2*n5) + 
   ((-4*n5 + d*n5 - 2*n2*n5)*j[p4, 0, 1 + n2, 0, 0, 1 + n5, 1, 0, 1, -1, 0, 
      n11, 0, 1, 1])/(30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 6*d*n2 + 
     2*n2^2 + 12*n5 - 4*d*n5 + 4*n2*n5) + 
   ((-1 + 2*d - 2*n11 + 2*d*n2 - 2*n11*n2 + n2^2 - 2*n5 - 2*n2*n5)*
     j[p4, 0, 2 + n2, -1, 0, n5, 1, 0, 1, 0, 0, n11, 0, 1, 1])/
    (30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 6*d*n2 + 2*n2^2 + 12*n5 - 
     4*d*n5 + 4*n2*n5) + ((1 - 2*d + 2*n11 - 2*d*n2 + 2*n11*n2 - n2^2 + 
      2*n5 + 2*n2*n5)*j[p4, 0, 2 + n2, -1, 0, n5, 1, 1, 0, 0, 0, n11, 0, 1, 
      1])/(30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 6*d*n2 + 2*n2^2 + 
     12*n5 - 4*d*n5 + 4*n2*n5) + ((-4 + d - 6*n2 + d*n2 - 2*n2^2)*
     j[p4, 0, 2 + n2, 0, 0, n5, 1, 0, 1, 0, -1, n11, 0, 1, 1])/
    (30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 6*d*n2 + 2*n2^2 + 12*n5 - 
     4*d*n5 + 4*n2*n5) + ((-1 + 2*d - 2*n11 + 2*d*n2 - 2*n11*n2 + n2^2 - 
      2*n5 - 2*n2*n5)*j[p4, 0, 2 + n2, 0, 0, n5, 1, 0, 1, 0, 0, n11, -1, 1, 
      1])/(30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 6*d*n2 + 2*n2^2 + 
     12*n5 - 4*d*n5 + 4*n2*n5) + ((4 - d + 6*n2 - d*n2 + 2*n2^2)*
     j[p4, 0, 2 + n2, 0, 0, n5, 1, 1, 0, 0, -1, n11, 0, 1, 1])/
    (30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 6*d*n2 + 2*n2^2 + 12*n5 - 
     4*d*n5 + 4*n2*n5) + ((1 - 2*d + 2*n11 - 2*d*n2 + 2*n11*n2 - n2^2 + 
      2*n5 + 2*n2*n5)*j[p4, 0, 2 + n2, 0, 0, n5, 1, 1, 0, 0, 0, n11, -1, 1, 
      1])/(30 - 24*d + 5*d^2 + 4*n11 - 2*d*n11 + 16*n2 - 6*d*n2 + 2*n2^2 + 
     12*n5 - 4*d*n5 + 4*n2*n5), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n3 == 0 && 
    n4 == 0 && n6 == 1 && n7 == 1 && n8 == 1 && n9 == 0 && n2 != 0 -> 
  ((-1344 + 1744*d - 840*d^2 + 178*d^3 - 14*d^4 - 72*n1 + 66*d*n1 - 
      20*d^2*n1 + 2*d^3*n1 - 1648*n2 + 1636*d*n2 - 536*d^2*n2 + 58*d^3*n2 - 
      84*n1*n2 + 52*d*n1*n2 - 8*d^2*n1*n2 - 712*n2^2 + 480*d*n2^2 - 
      80*d^2*n2^2 - 32*n1*n2^2 + 10*d*n1*n2^2 - 128*n2^3 + 44*d*n2^3 - 
      4*n1*n2^3 - 8*n2^4 - 928*n5 + 880*d*n5 - 274*d^2*n5 + 28*d^3*n5 - 
      24*n1*n5 + 14*d*n1*n5 - 2*d^2*n1*n5 - 896*n2*n5 + 584*d*n2*n5 - 
      94*d^2*n2*n5 - 20*n1*n2*n5 + 6*d*n1*n2*n5 - 264*n2^2*n5 + 
      88*d*n2^2*n5 - 4*n1*n2^2*n5 - 24*n2^3*n5 - 208*n5^2 + 124*d*n5^2 - 
      18*d^2*n5^2 - 152*n2*n5^2 + 48*d*n2*n5^2 - 24*n2^2*n5^2 - 16*n5^3 + 
      4*d*n5^3 - 8*n2*n5^3)*j[p4, -1 + n1, 1 + n2, 0, 0, n5, 0, 1, 2, 0, 0, 
      1, 0, 1, 1])/((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 
      24*d^4 - 312*n1 + 354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 
      28*d*n1^2 - 6*d^2*n1^2 + 2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 
      188*n1*n2 + 132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 
      872*n2^2 - 568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 
      136*n2^3 - 44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 
      578*d^2*n5 - 60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 
      8*n1^2*n5 + 4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 
      68*n1*n2*n5 + 22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 
      8*n1*n2^2*n5 + 24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 
      24*n1*n5^2 + 8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((48 - 52*d + 18*d^2 - 2*d^3 + 24*n1 - 14*d*n1 + 2*d^2*n1 + 40*n2 - 
      32*d*n2 + 6*d^2*n2 + 20*n1*n2 - 6*d*n1*n2 + 8*n2^2 - 4*d*n2^2 + 
      4*n1*n2^2 + 16*n5 - 12*d*n5 + 2*d^2*n5 + 8*n1*n5 - 2*d*n1*n5 + 
      8*n2*n5 - 4*d*n2*n5 + 4*n1*n2*n5)*j[p4, -1 + n1, 1 + n2, 0, 0, n5, 1, 
      0, 1, 0, 0, 1, 0, 2, 1])/(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 
     312*n1 + 354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 
     6*d^2*n1^2 + 2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
     132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
     568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
     44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
     60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
     4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
     22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
     24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
     8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 24*n2^2*n5^2 + 
     40*n5^3 - 12*d*n5^3 + 8*n2*n5^3) + 
   ((-1200 + 1540*d - 734*d^2 + 154*d^3 - 12*d^4 - 1480*n2 + 1448*d*n2 - 
      468*d^2*n2 + 50*d^3*n2 - 648*n2^2 + 428*d*n2^2 - 70*d^2*n2^2 - 
      120*n2^3 + 40*d*n2^3 - 8*n2^4 - 880*n5 + 828*d*n5 - 256*d^2*n5 + 
      26*d^3*n5 - 856*n2*n5 + 552*d*n2*n5 - 88*d^2*n2*n5 - 256*n2^2*n5 + 
      84*d*n2^2*n5 - 24*n2^3*n5 - 208*n5^2 + 124*d*n5^2 - 18*d^2*n5^2 - 
      152*n2*n5^2 + 48*d*n2*n5^2 - 24*n2^2*n5^2 - 16*n5^3 + 4*d*n5^3 - 
      8*n2*n5^3)*j[p4, -1 + n1, 1 + n2, 0, 0, n5, 1, 0, 2, 0, 0, 1, 0, 1, 1])/
    ((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 
      354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 
      2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
      132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
      568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
      44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
      60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
      4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
      22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
      24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
      8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((3168 - 5496*d + 3760*d^2 - 1270*d^3 + 212*d^4 - 14*d^5 + 1728*n1 - 
      2160*d*n1 + 1008*d^2*n1 - 208*d^3*n1 + 16*d^4*n1 + 72*n1^2 - 
      66*d*n1^2 + 20*d^2*n1^2 - 2*d^3*n1^2 + 4272*n2 - 6128*d*n2 + 
      3236*d^2*n2 - 748*d^3*n2 + 64*d^4*n2 + 2304*n1*n2 - 2184*d*n1*n2 + 
      688*d^2*n1*n2 - 72*d^3*n1*n2 + 84*n1^2*n2 - 52*d*n1^2*n2 + 
      8*d^2*n1^2*n2 + 2080*n2^2 - 2344*d*n2^2 + 856*d^2*n2^2 - 102*d^3*n2^2 + 
      1104*n1*n2^2 - 704*d*n1*n2^2 + 112*d^2*n1*n2^2 + 32*n1^2*n2^2 - 
      10*d*n1^2*n2^2 + 432*n2^3 - 352*d*n2^3 + 68*d^2*n2^3 + 224*n1*n2^3 - 
      72*d*n1*n2^3 + 4*n1^2*n2^3 + 32*n2^4 - 16*d*n2^4 + 16*n1*n2^4 + 
      2592*n5 - 3624*d*n5 + 1856*d^2*n5 - 414*d^3*n5 + 34*d^4*n5 + 
      1344*n1*n5 - 1216*d*n1*n5 + 364*d^2*n1*n5 - 36*d^3*n1*n5 + 24*n1^2*n5 - 
      14*d*n1^2*n5 + 2*d^2*n1^2*n5 + 2736*n2*n5 - 3032*d*n2*n5 + 
      1084*d^2*n2*n5 - 126*d^3*n2*n5 + 1408*n1*n2*n5 - 864*d*n1*n2*n5 + 
      132*d^2*n1*n2*n5 + 20*n1^2*n2*n5 - 6*d*n1^2*n2*n5 + 912*n2^2*n5 - 
      736*d*n2^2*n5 + 140*d^2*n2^2*n5 + 464*n1*n2^2*n5 - 144*d*n1*n2^2*n5 + 
      4*n1^2*n2^2*n5 + 96*n2^3*n5 - 48*d*n2^3*n5 + 48*n1*n2^3*n5 + 704*n5^2 - 
      752*d*n5^2 + 256*d^2*n5^2 - 28*d^3*n5^2 + 352*n1*n5^2 - 200*d*n1*n5^2 + 
      28*d^2*n1*n5^2 + 544*n2*n5^2 - 432*d*n2*n5^2 + 80*d^2*n2*n5^2 + 
      272*n1*n2*n5^2 - 80*d*n1*n2*n5^2 + 96*n2^2*n5^2 - 48*d*n2^2*n5^2 + 
      48*n1*n2^2*n5^2 + 64*n5^3 - 48*d*n5^3 + 8*d^2*n5^3 + 32*n1*n5^3 - 
      8*d*n1*n5^3 + 32*n2*n5^3 - 16*d*n2*n5^3 + 16*n1*n2*n5^3)*
     j[p4, -1 + n1, 1 + n2, 0, 0, n5, 1, 1, 1, 0, 0, 1, 0, 1, 1])/
    ((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 
      354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 
      2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
      132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
      568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
      44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
      60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
      4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
      22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
      24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
      8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((-1344 + 1744*d - 840*d^2 + 178*d^3 - 14*d^4 - 72*n1 + 66*d*n1 - 
      20*d^2*n1 + 2*d^3*n1 - 1648*n2 + 1636*d*n2 - 536*d^2*n2 + 58*d^3*n2 - 
      84*n1*n2 + 52*d*n1*n2 - 8*d^2*n1*n2 - 712*n2^2 + 480*d*n2^2 - 
      80*d^2*n2^2 - 32*n1*n2^2 + 10*d*n1*n2^2 - 128*n2^3 + 44*d*n2^3 - 
      4*n1*n2^3 - 8*n2^4 - 928*n5 + 880*d*n5 - 274*d^2*n5 + 28*d^3*n5 - 
      24*n1*n5 + 14*d*n1*n5 - 2*d^2*n1*n5 - 896*n2*n5 + 584*d*n2*n5 - 
      94*d^2*n2*n5 - 20*n1*n2*n5 + 6*d*n1*n2*n5 - 264*n2^2*n5 + 
      88*d*n2^2*n5 - 4*n1*n2^2*n5 - 24*n2^3*n5 - 208*n5^2 + 124*d*n5^2 - 
      18*d^2*n5^2 - 152*n2*n5^2 + 48*d*n2*n5^2 - 24*n2^2*n5^2 - 16*n5^3 + 
      4*d*n5^3 - 8*n2*n5^3)*j[p4, -1 + n1, 1 + n2, 0, 0, n5, 1, 1, 1, 0, 0, 
      1, 0, 2, 0])/((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 
      24*d^4 - 312*n1 + 354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 
      28*d*n1^2 - 6*d^2*n1^2 + 2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 
      188*n1*n2 + 132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 
      872*n2^2 - 568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 
      136*n2^3 - 44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 
      578*d^2*n5 - 60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 
      8*n1^2*n5 + 4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 
      68*n1*n2*n5 + 22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 
      8*n1*n2^2*n5 + 24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 
      24*n1*n5^2 + 8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((48*n5 - 52*d*n5 + 18*d^2*n5 - 2*d^3*n5 + 24*n1*n5 - 14*d*n1*n5 + 
      2*d^2*n1*n5 + 40*n2*n5 - 32*d*n2*n5 + 6*d^2*n2*n5 + 20*n1*n2*n5 - 
      6*d*n1*n2*n5 + 8*n2^2*n5 - 4*d*n2^2*n5 + 4*n1*n2^2*n5 + 16*n5^2 - 
      12*d*n5^2 + 2*d^2*n5^2 + 8*n1*n5^2 - 2*d*n1*n5^2 + 8*n2*n5^2 - 
      4*d*n2*n5^2 + 4*n1*n2*n5^2)*j[p4, -1 + n1, 1 + n2, 0, 0, 1 + n5, 1, 0, 
      1, 0, 0, 1, 0, 1, 1])/(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 
     312*n1 + 354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 
     6*d^2*n1^2 + 2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
     132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
     568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
     44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
     60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
     4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
     22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
     24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
     8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 24*n2^2*n5^2 + 
     40*n5^3 - 12*d*n5^3 + 8*n2*n5^3) + 
   ((-1344 + 1744*d - 840*d^2 + 178*d^3 - 14*d^4 - 72*n1 + 66*d*n1 - 
      20*d^2*n1 + 2*d^3*n1 - 2992*n2 + 3380*d*n2 - 1376*d^2*n2 + 236*d^3*n2 - 
      14*d^4*n2 - 156*n1*n2 + 118*d*n1*n2 - 28*d^2*n1*n2 + 2*d^3*n1*n2 - 
      2360*n2^2 + 2116*d*n2^2 - 616*d^2*n2^2 + 58*d^3*n2^2 - 116*n1*n2^2 + 
      62*d*n1*n2^2 - 8*d^2*n1*n2^2 - 840*n2^3 + 524*d*n2^3 - 80*d^2*n2^3 - 
      36*n1*n2^3 + 10*d*n1*n2^3 - 136*n2^4 + 44*d*n2^4 - 4*n1*n2^4 - 8*n2^5 - 
      928*n5 + 880*d*n5 - 274*d^2*n5 + 28*d^3*n5 - 24*n1*n5 + 14*d*n1*n5 - 
      2*d^2*n1*n5 - 1824*n2*n5 + 1464*d*n2*n5 - 368*d^2*n2*n5 + 
      28*d^3*n2*n5 - 44*n1*n2*n5 + 20*d*n1*n2*n5 - 2*d^2*n1*n2*n5 - 
      1160*n2^2*n5 + 672*d*n2^2*n5 - 94*d^2*n2^2*n5 - 24*n1*n2^2*n5 + 
      6*d*n1*n2^2*n5 - 288*n2^3*n5 + 88*d*n2^3*n5 - 4*n1*n2^3*n5 - 
      24*n2^4*n5 - 208*n5^2 + 124*d*n5^2 - 18*d^2*n5^2 - 360*n2*n5^2 + 
      172*d*n2*n5^2 - 18*d^2*n2*n5^2 - 176*n2^2*n5^2 + 48*d*n2^2*n5^2 - 
      24*n2^3*n5^2 - 16*n5^3 + 4*d*n5^3 - 24*n2*n5^3 + 4*d*n2*n5^3 - 
      8*n2^2*n5^3)*j[p4, -1 + n1, 2 + n2, 0, 0, n5, 0, 1, 1, 0, 0, 1, 0, 1, 
      1])/((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 
      312*n1 + 354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 
      6*d^2*n1^2 + 2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
      132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
      568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
      44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
      60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
      4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
      22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
      24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
      8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((48 - 52*d + 18*d^2 - 2*d^3 + 24*n1 - 14*d*n1 + 2*d^2*n1 + 88*n2 - 
      84*d*n2 + 24*d^2*n2 - 2*d^3*n2 + 44*n1*n2 - 20*d*n1*n2 + 2*d^2*n1*n2 + 
      48*n2^2 - 36*d*n2^2 + 6*d^2*n2^2 + 24*n1*n2^2 - 6*d*n1*n2^2 + 8*n2^3 - 
      4*d*n2^3 + 4*n1*n2^3 + 16*n5 - 12*d*n5 + 2*d^2*n5 + 8*n1*n5 - 
      2*d*n1*n5 + 24*n2*n5 - 16*d*n2*n5 + 2*d^2*n2*n5 + 12*n1*n2*n5 - 
      2*d*n1*n2*n5 + 8*n2^2*n5 - 4*d*n2^2*n5 + 4*n1*n2^2*n5)*
     j[p4, -1 + n1, 2 + n2, 0, 0, n5, 1, 0, 1, 0, 0, 1, 0, 1, 1])/
    (2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 354*d*n1 - 
     137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 2456*n2 - 
     2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 132*d*n1*n2 - 
     24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 568*d*n2^2 + 
     92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 44*d*n2^3 - 
     4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 60*d^3*n5 - 
     164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 4*d*n1^2*n5 + 
     1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 22*d*n1*n2*n5 + 
     312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 24*n2^3*n5 + 472*n5^2 - 
     296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 8*d*n1*n5^2 + 216*n2*n5^2 - 
     68*d*n2*n5^2 - 4*n1*n2*n5^2 + 24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 
     8*n2*n5^3) + ((-48 + 52*d - 18*d^2 + 2*d^3 - 24*n1 + 14*d*n1 - 
      2*d^2*n1 - 88*n2 + 84*d*n2 - 24*d^2*n2 + 2*d^3*n2 - 44*n1*n2 + 
      20*d*n1*n2 - 2*d^2*n1*n2 - 48*n2^2 + 36*d*n2^2 - 6*d^2*n2^2 - 
      24*n1*n2^2 + 6*d*n1*n2^2 - 8*n2^3 + 4*d*n2^3 - 4*n1*n2^3 - 16*n5 + 
      12*d*n5 - 2*d^2*n5 - 8*n1*n5 + 2*d*n1*n5 - 24*n2*n5 + 16*d*n2*n5 - 
      2*d^2*n2*n5 - 12*n1*n2*n5 + 2*d*n1*n2*n5 - 8*n2^2*n5 + 4*d*n2^2*n5 - 
      4*n1*n2^2*n5)*j[p4, -1 + n1, 2 + n2, 0, 0, n5, 1, 1, 0, 0, 0, 1, 0, 1, 
      1])/(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 354*d*n1 - 
     137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 2456*n2 - 
     2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 132*d*n1*n2 - 
     24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 568*d*n2^2 + 
     92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 44*d*n2^3 - 
     4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 60*d^3*n5 - 
     164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 4*d*n1^2*n5 + 
     1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 22*d*n1*n2*n5 + 
     312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 24*n2^3*n5 + 472*n5^2 - 
     296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 8*d*n1*n5^2 + 216*n2*n5^2 - 
     68*d*n2*n5^2 - 4*n1*n2*n5^2 + 24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 
     8*n2*n5^3) + ((1200 - 1540*d + 734*d^2 - 154*d^3 + 12*d^4 + 1480*n2 - 
      1448*d*n2 + 468*d^2*n2 - 50*d^3*n2 + 648*n2^2 - 428*d*n2^2 + 
      70*d^2*n2^2 + 120*n2^3 - 40*d*n2^3 + 8*n2^4 + 880*n5 - 828*d*n5 + 
      256*d^2*n5 - 26*d^3*n5 + 856*n2*n5 - 552*d*n2*n5 + 88*d^2*n2*n5 + 
      256*n2^2*n5 - 84*d*n2^2*n5 + 24*n2^3*n5 + 208*n5^2 - 124*d*n5^2 + 
      18*d^2*n5^2 + 152*n2*n5^2 - 48*d*n2*n5^2 + 24*n2^2*n5^2 + 16*n5^3 - 
      4*d*n5^3 + 8*n2*n5^3)*j[p4, n1, n2, 0, 0, n5, 1, 1, 2, 0, 0, 0, 0, 1, 
      1])/((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 
      312*n1 + 354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 
      6*d^2*n1^2 + 2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
      132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
      568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
      44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
      60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
      4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
      22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
      24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
      8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((480 - 664*d + 336*d^2 - 74*d^3 + 6*d^4 + 240*n1 - 212*d*n1 + 62*d^2*n1 - 
      6*d^3*n1 + 496*n2 - 544*d*n2 + 192*d^2*n2 - 22*d^3*n2 + 248*n1*n2 - 
      148*d*n1*n2 + 22*d^2*n1*n2 + 160*n2^2 - 128*d*n2^2 + 24*d^2*n2^2 + 
      80*n1*n2^2 - 24*d*n1*n2^2 + 16*n2^3 - 8*d*n2^3 + 8*n1*n2^3 + 256*n5 - 
      272*d*n5 + 92*d^2*n5 - 10*d^3*n5 + 128*n1*n5 - 72*d*n1*n5 + 
      10*d^2*n1*n5 + 192*n2*n5 - 152*d*n2*n5 + 28*d^2*n2*n5 + 96*n1*n2*n5 - 
      28*d*n1*n2*n5 + 32*n2^2*n5 - 16*d*n2^2*n5 + 16*n1*n2^2*n5 + 32*n5^2 - 
      24*d*n5^2 + 4*d^2*n5^2 + 16*n1*n5^2 - 4*d*n1*n5^2 + 16*n2*n5^2 - 
      8*d*n2*n5^2 + 8*n1*n2*n5^2)*j[p4, n1, n2, 0, 0, n5, 1, 2, 1, 0, 0, 0, 
      0, 1, 1])/((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 
      312*n1 + 354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 
      6*d^2*n1^2 + 2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
      132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
      568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
      44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
      60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
      4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
      22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
      24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
      8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((-136 + 150*d - 53*d^2 + 6*d^3 - 84*n1 + 53*d*n1 - 8*d^2*n1 - 8*n1^2 + 
      2*d*n1^2 - 100*n2 + 82*d*n2 - 16*d^2*n2 - 58*n1*n2 + 20*d*n1*n2 - 
      4*n1^2*n2 - 16*n2^2 + 8*d*n2^2 - 8*n1*n2^2 - 32*n5 + 24*d*n5 - 
      4*d^2*n5 - 16*n1*n5 + 4*d*n1*n5 - 16*n2*n5 + 8*d*n2*n5 - 8*n1*n2*n5)*
     j[p4, n1, n2, 0, 0, n5, 1, 2, 1, 0, 0, 1, 0, 0, 1])/
    (2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 354*d*n1 - 
     137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 2456*n2 - 
     2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 132*d*n1*n2 - 
     24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 568*d*n2^2 + 
     92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 44*d*n2^3 - 
     4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 60*d^3*n5 - 
     164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 4*d*n1^2*n5 + 
     1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 22*d*n1*n2*n5 + 
     312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 24*n2^3*n5 + 472*n5^2 - 
     296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 8*d*n1*n5^2 + 216*n2*n5^2 - 
     68*d*n2*n5^2 - 4*n1*n2*n5^2 + 24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 
     8*n2*n5^3) + ((-56 + 106*d - 71*d^2 + 20*d^3 - 2*d^4 - 12*n1 + 27*d*n1 - 
      14*d^2*n1 + 2*d^3*n1 + 8*n1^2 - 2*d*n1^2 + 28*n2 - 12*d*n2 - 5*d^2*n2 + 
      2*d^3*n2 + 38*n1*n2 - 15*d*n1*n2 + 12*n1^2*n2 - 2*d*n1^2*n2 + 44*n2^2 - 
      34*d*n2^2 + 6*d^2*n2^2 + 30*n1*n2^2 - 10*d*n1*n2^2 + 4*n1^2*n2^2 + 
      8*n2^3 - 4*d*n2^3 + 4*n1*n2^3 - 32*n5 + 40*d*n5 - 16*d^2*n5 + 
      2*d^3*n5 - 16*n1*n5 + 12*d*n1*n5 - 2*d^2*n1*n5 + 4*d*n2*n5 - 
      2*d^2*n2*n5 + 2*d*n1*n2*n5 + 8*n2^2*n5 - 4*d*n2^2*n5 + 4*n1*n2^2*n5)*
     j[p4, n1, n2, 0, 0, n5, 2, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 
      354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 
      2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
      132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
      568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
      44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
      60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
      4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
      22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
      24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
      8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((-764 + 1008*d - 491*d^2 + 104*d^3 - 8*d^4 + 132*n1 - 153*d*n1 + 
      60*d^2*n1 - 8*d^3*n1 + 32*n1^2 - 22*d*n1^2 + 4*d^2*n1^2 - 544*n2 + 
      544*d*n2 - 181*d^2*n2 + 20*d^3*n2 + 98*n1*n2 - 69*d*n1*n2 + 
      12*d^2*n1*n2 + 20*n1^2*n2 - 6*d*n1^2*n2 - 104*n2^2 + 64*d*n2^2 - 
      10*d^2*n2^2 + 34*n1*n2^2 - 12*d*n1*n2^2 + 4*n1^2*n2^2 - 4*n2^3 + 
      4*n1*n2^3 - 624*n5 + 624*d*n5 - 205*d^2*n5 + 22*d^3*n5 + 26*n1*n5 - 
      25*d*n1*n5 + 6*d^2*n1*n5 + 4*n1^2*n5 - 2*d*n1^2*n5 - 308*n2*n5 + 
      210*d*n2*n5 - 36*d^2*n2*n5 + 2*n1*n2*n5 - 32*n2^2*n5 + 10*d*n2^2*n5 + 
      2*n1*n2^2*n5 - 148*n5^2 + 98*d*n5^2 - 16*d^2*n5^2 + 4*n1*n5^2 - 
      2*d*n1*n5^2 - 40*n2*n5^2 + 14*d*n2*n5^2 - 2*n1*n2*n5^2 - 12*n5^3 + 
      4*d*n5^3)*j[p4, n1, n2, 0, 0, n5, 2, 1, 0, 0, 0, 1, 0, 1, 1])/
    ((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 
      354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 
      2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
      132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
      568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
      44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
      60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
      4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
      22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
      24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
      8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((-56 + 106*d - 71*d^2 + 20*d^3 - 2*d^4 - 12*n1 + 27*d*n1 - 14*d^2*n1 + 
      2*d^3*n1 + 8*n1^2 - 2*d*n1^2 + 28*n2 - 12*d*n2 - 5*d^2*n2 + 2*d^3*n2 + 
      38*n1*n2 - 15*d*n1*n2 + 12*n1^2*n2 - 2*d*n1^2*n2 + 44*n2^2 - 
      34*d*n2^2 + 6*d^2*n2^2 + 30*n1*n2^2 - 10*d*n1*n2^2 + 4*n1^2*n2^2 + 
      8*n2^3 - 4*d*n2^3 + 4*n1*n2^3 - 32*n5 + 40*d*n5 - 16*d^2*n5 + 
      2*d^3*n5 - 16*n1*n5 + 12*d*n1*n5 - 2*d^2*n1*n5 + 4*d*n2*n5 - 
      2*d^2*n2*n5 + 2*d*n1*n2*n5 + 8*n2^2*n5 - 4*d*n2^2*n5 + 4*n1*n2^2*n5)*
     j[p4, n1, n2, 0, 0, n5, 2, 1, 1, 0, 0, 1, 0, 0, 1])/
    ((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 
      354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 
      2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
      132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
      568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
      44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
      60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
      4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
      22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
      24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
      8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((-56 + 106*d - 71*d^2 + 20*d^3 - 2*d^4 - 12*n1 + 27*d*n1 - 14*d^2*n1 + 
      2*d^3*n1 + 8*n1^2 - 2*d*n1^2 + 28*n2 - 12*d*n2 - 5*d^2*n2 + 2*d^3*n2 + 
      38*n1*n2 - 15*d*n1*n2 + 12*n1^2*n2 - 2*d*n1^2*n2 + 44*n2^2 - 
      34*d*n2^2 + 6*d^2*n2^2 + 30*n1*n2^2 - 10*d*n1*n2^2 + 4*n1^2*n2^2 + 
      8*n2^3 - 4*d*n2^3 + 4*n1*n2^3 - 32*n5 + 40*d*n5 - 16*d^2*n5 + 
      2*d^3*n5 - 16*n1*n5 + 12*d*n1*n5 - 2*d^2*n1*n5 + 4*d*n2*n5 - 
      2*d^2*n2*n5 + 2*d*n1*n2*n5 + 8*n2^2*n5 - 4*d*n2^2*n5 + 4*n1*n2^2*n5)*
     j[p4, n1, n2, 0, 0, n5, 2, 1, 1, 0, 0, 1, 0, 1, 0])/
    ((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 
      354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 
      2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
      132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
      568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
      44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
      60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
      4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
      22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
      24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
      8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((464*n5 - 692*d*n5 + 380*d^2*n5 - 91*d^3*n5 + 8*d^4*n5 + 264*n1*n5 - 
      270*d*n1*n5 + 91*d^2*n1*n5 - 10*d^3*n1*n5 + 16*n1^2*n5 - 12*d*n1^2*n5 + 
      2*d^2*n1^2*n5 + 408*n2*n5 - 484*d*n2*n5 + 188*d^2*n2*n5 - 
      24*d^3*n2*n5 + 220*n1*n2*n5 - 156*d*n1*n2*n5 + 28*d^2*n1*n2*n5 + 
      8*n1^2*n2*n5 - 4*d*n1^2*n2*n5 + 104*n2^2*n5 - 88*d*n2^2*n5 + 
      18*d^2*n2^2*n5 + 52*n1*n2^2*n5 - 18*d*n1*n2^2*n5 + 8*n2^3*n5 - 
      4*d*n2^3*n5 + 4*n1*n2^3*n5 + 128*n5^2 - 144*d*n5^2 + 52*d^2*n5^2 - 
      6*d^3*n5^2 + 64*n1*n5^2 - 40*d*n1*n5^2 + 6*d^2*n1*n5^2 + 80*n2*n5^2 - 
      68*d*n2*n5^2 + 14*d^2*n2*n5^2 + 40*n1*n2*n5^2 - 14*d*n1*n2*n5^2 + 
      8*n2^2*n5^2 - 4*d*n2^2*n5^2 + 4*n1*n2^2*n5^2)*
     j[p4, n1, n2, 0, 0, 1 + n5, 1, 1, 1, 0, 0, 1, 0, 0, 1])/
    ((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 
      354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 
      2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
      132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
      568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
      44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
      60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
      4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
      22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
      24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
      8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((-464*n5 + 692*d*n5 - 380*d^2*n5 + 91*d^3*n5 - 8*d^4*n5 - 264*n1*n5 + 
      270*d*n1*n5 - 91*d^2*n1*n5 + 10*d^3*n1*n5 - 16*n1^2*n5 + 12*d*n1^2*n5 - 
      2*d^2*n1^2*n5 - 408*n2*n5 + 484*d*n2*n5 - 188*d^2*n2*n5 + 
      24*d^3*n2*n5 - 220*n1*n2*n5 + 156*d*n1*n2*n5 - 28*d^2*n1*n2*n5 - 
      8*n1^2*n2*n5 + 4*d*n1^2*n2*n5 - 104*n2^2*n5 + 88*d*n2^2*n5 - 
      18*d^2*n2^2*n5 - 52*n1*n2^2*n5 + 18*d*n1*n2^2*n5 - 8*n2^3*n5 + 
      4*d*n2^3*n5 - 4*n1*n2^3*n5 - 128*n5^2 + 144*d*n5^2 - 52*d^2*n5^2 + 
      6*d^3*n5^2 - 64*n1*n5^2 + 40*d*n1*n5^2 - 6*d^2*n1*n5^2 - 80*n2*n5^2 + 
      68*d*n2*n5^2 - 14*d^2*n2*n5^2 - 40*n1*n2*n5^2 + 14*d*n1*n2*n5^2 - 
      8*n2^2*n5^2 + 4*d*n2^2*n5^2 - 4*n1*n2^2*n5^2)*
     j[p4, n1, n2, 0, 0, 1 + n5, 1, 1, 1, 0, 0, 1, 0, 1, 0])/
    ((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 
      354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 
      2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
      132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
      568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
      44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
      60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
      4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
      22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
      24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
      8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((88 - 98*d + 35*d^2 - 4*d^3 + 60*n1 - 39*d*n1 + 6*d^2*n1 + 8*n1^2 - 
      2*d*n1^2 + 60*n2 - 50*d*n2 + 10*d^2*n2 + 38*n1*n2 - 14*d*n1*n2 + 
      4*n1^2*n2 + 8*n2^2 - 4*d*n2^2 + 4*n1*n2^2 + 16*n5 - 12*d*n5 + 
      2*d^2*n5 + 8*n1*n5 - 2*d*n1*n5 + 8*n2*n5 - 4*d*n2*n5 + 4*n1*n2*n5)*
     j[p4, n1, 1 + n2, -1, 0, n5, 1, 1, 1, 0, 0, 1, 0, 0, 2])/
    (2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 354*d*n1 - 
     137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 2456*n2 - 
     2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 132*d*n1*n2 - 
     24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 568*d*n2^2 + 
     92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 44*d*n2^3 - 
     4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 60*d^3*n5 - 
     164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 4*d*n1^2*n5 + 
     1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 22*d*n1*n2*n5 + 
     312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 24*n2^3*n5 + 472*n5^2 - 
     296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 8*d*n1*n5^2 + 216*n2*n5^2 - 
     68*d*n2*n5^2 - 4*n1*n2*n5^2 + 24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 
     8*n2*n5^3) + ((136 - 150*d + 53*d^2 - 6*d^3 + 84*n1 - 53*d*n1 + 
      8*d^2*n1 + 8*n1^2 - 2*d*n1^2 + 100*n2 - 82*d*n2 + 16*d^2*n2 + 
      58*n1*n2 - 20*d*n1*n2 + 4*n1^2*n2 + 16*n2^2 - 8*d*n2^2 + 8*n1*n2^2 + 
      32*n5 - 24*d*n5 + 4*d^2*n5 + 16*n1*n5 - 4*d*n1*n5 + 16*n2*n5 - 
      8*d*n2*n5 + 8*n1*n2*n5)*j[p4, n1, 1 + n2, -1, 0, n5, 1, 2, 0, 0, 0, 1, 
      0, 1, 1])/(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 
     354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 
     2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 132*d*n1*n2 - 
     24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 568*d*n2^2 + 
     92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 44*d*n2^3 - 
     4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 60*d^3*n5 - 
     164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 4*d*n1^2*n5 + 
     1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 22*d*n1*n2*n5 + 
     312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 24*n2^3*n5 + 472*n5^2 - 
     296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 8*d*n1*n5^2 + 216*n2*n5^2 - 
     68*d*n2*n5^2 - 4*n1*n2*n5^2 + 24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 
     8*n2*n5^3) + ((56 - 106*d + 71*d^2 - 20*d^3 + 2*d^4 + 12*n1 - 27*d*n1 + 
      14*d^2*n1 - 2*d^3*n1 - 8*n1^2 + 2*d*n1^2 - 28*n2 + 12*d*n2 + 5*d^2*n2 - 
      2*d^3*n2 - 38*n1*n2 + 15*d*n1*n2 - 12*n1^2*n2 + 2*d*n1^2*n2 - 44*n2^2 + 
      34*d*n2^2 - 6*d^2*n2^2 - 30*n1*n2^2 + 10*d*n1*n2^2 - 4*n1^2*n2^2 - 
      8*n2^3 + 4*d*n2^3 - 4*n1*n2^3 + 32*n5 - 40*d*n5 + 16*d^2*n5 - 
      2*d^3*n5 + 16*n1*n5 - 12*d*n1*n5 + 2*d^2*n1*n5 - 4*d*n2*n5 + 
      2*d^2*n2*n5 - 2*d*n1*n2*n5 - 8*n2^2*n5 + 4*d*n2^2*n5 - 4*n1*n2^2*n5)*
     j[p4, n1, 1 + n2, -1, 0, n5, 2, 1, 0, 0, 0, 1, 0, 1, 1])/
    ((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 
      354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 
      2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
      132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
      568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
      44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
      60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
      4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
      22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
      24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
      8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((-88 + 98*d - 35*d^2 + 4*d^3 - 60*n1 + 39*d*n1 - 6*d^2*n1 - 8*n1^2 + 
      2*d*n1^2 - 60*n2 + 50*d*n2 - 10*d^2*n2 - 38*n1*n2 + 14*d*n1*n2 - 
      4*n1^2*n2 - 8*n2^2 + 4*d*n2^2 - 4*n1*n2^2 - 16*n5 + 12*d*n5 - 
      2*d^2*n5 - 8*n1*n5 + 2*d*n1*n5 - 8*n2*n5 + 4*d*n2*n5 - 4*n1*n2*n5)*
     j[p4, n1, 1 + n2, 0, -1, n5, 1, 1, 1, 0, 0, 1, 0, 0, 2])/
    (2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 354*d*n1 - 
     137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 2456*n2 - 
     2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 132*d*n1*n2 - 
     24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 568*d*n2^2 + 
     92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 44*d*n2^3 - 
     4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 60*d^3*n5 - 
     164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 4*d*n1^2*n5 + 
     1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 22*d*n1*n2*n5 + 
     312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 24*n2^3*n5 + 472*n5^2 - 
     296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 8*d*n1*n5^2 + 216*n2*n5^2 - 
     68*d*n2*n5^2 - 4*n1*n2*n5^2 + 24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 
     8*n2*n5^3) + ((1344 - 1744*d + 840*d^2 - 178*d^3 + 14*d^4 + 72*n1 - 
      66*d*n1 + 20*d^2*n1 - 2*d^3*n1 + 1648*n2 - 1636*d*n2 + 536*d^2*n2 - 
      58*d^3*n2 + 84*n1*n2 - 52*d*n1*n2 + 8*d^2*n1*n2 + 712*n2^2 - 
      480*d*n2^2 + 80*d^2*n2^2 + 32*n1*n2^2 - 10*d*n1*n2^2 + 128*n2^3 - 
      44*d*n2^3 + 4*n1*n2^3 + 8*n2^4 + 928*n5 - 880*d*n5 + 274*d^2*n5 - 
      28*d^3*n5 + 24*n1*n5 - 14*d*n1*n5 + 2*d^2*n1*n5 + 896*n2*n5 - 
      584*d*n2*n5 + 94*d^2*n2*n5 + 20*n1*n2*n5 - 6*d*n1*n2*n5 + 264*n2^2*n5 - 
      88*d*n2^2*n5 + 4*n1*n2^2*n5 + 24*n2^3*n5 + 208*n5^2 - 124*d*n5^2 + 
      18*d^2*n5^2 + 152*n2*n5^2 - 48*d*n2*n5^2 + 24*n2^2*n5^2 + 16*n5^3 - 
      4*d*n5^3 + 8*n2*n5^3)*j[p4, n1, 1 + n2, 0, -1, n5, 1, 1, 2, 0, 0, 0, 0, 
      1, 1])/((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 
      312*n1 + 354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 
      6*d^2*n1^2 + 2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
      132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
      568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
      44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
      60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
      4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
      22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
      24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
      8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((48 - 52*d + 18*d^2 - 2*d^3 + 24*n1 - 14*d*n1 + 2*d^2*n1 + 40*n2 - 
      32*d*n2 + 6*d^2*n2 + 20*n1*n2 - 6*d*n1*n2 + 8*n2^2 - 4*d*n2^2 + 
      4*n1*n2^2 + 16*n5 - 12*d*n5 + 2*d^2*n5 + 8*n1*n5 - 2*d*n1*n5 + 
      8*n2*n5 - 4*d*n2*n5 + 4*n1*n2*n5)*j[p4, n1, 1 + n2, 0, -1, n5, 1, 1, 2, 
      0, 0, 1, 0, 0, 1])/(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 
     312*n1 + 354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 
     6*d^2*n1^2 + 2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
     132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
     568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
     44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
     60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
     4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
     22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
     24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
     8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 24*n2^2*n5^2 + 
     40*n5^3 - 12*d*n5^3 + 8*n2*n5^3) + 
   ((1172 - 1594*d + 800*d^2 - 175*d^3 + 14*d^4 + 120*n1 - 90*d*n1 + 
      17*d^2*n1 - 8*n1^2 + 8*d*n1^2 - 2*d^2*n1^2 + 980*n2 - 1040*d*n2 + 
      364*d^2*n2 - 42*d^3*n2 + 160*n1*n2 - 102*d*n1*n2 + 16*d^2*n1*n2 + 
      252*n2^2 - 186*d*n2^2 + 34*d^2*n2^2 + 48*n1*n2^2 - 16*d*n1*n2^2 + 
      20*n2^3 - 8*d*n2^3 + 4*n1*n2^3 + 720*n5 - 728*d*n5 + 241*d^2*n5 - 
      26*d^3*n5 + 22*n1*n5 - 3*d*n1*n5 - 2*d^2*n1*n5 - 4*n1^2*n5 + 
      2*d*n1^2*n5 + 388*n2*n5 - 274*d*n2*n5 + 48*d^2*n2*n5 + 38*n1*n2*n5 - 
      12*d*n1*n2*n5 + 48*n2^2*n5 - 18*d*n2^2*n5 + 6*n1*n2^2*n5 + 148*n5^2 - 
      98*d*n5^2 + 16*d^2*n5^2 - 4*n1*n5^2 + 2*d*n1*n5^2 + 40*n2*n5^2 - 
      14*d*n2*n5^2 + 2*n1*n2*n5^2 + 12*n5^3 - 4*d*n5^3)*
     j[p4, n1, 1 + n2, 0, -1, n5, 1, 2, 0, 0, 0, 1, 0, 1, 1])/
    ((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 
      354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 
      2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
      132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
      568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
      44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
      60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
      4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
      22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
      24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
      8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((1344 - 1744*d + 840*d^2 - 178*d^3 + 14*d^4 + 72*n1 - 66*d*n1 + 
      20*d^2*n1 - 2*d^3*n1 + 1648*n2 - 1636*d*n2 + 536*d^2*n2 - 58*d^3*n2 + 
      84*n1*n2 - 52*d*n1*n2 + 8*d^2*n1*n2 + 712*n2^2 - 480*d*n2^2 + 
      80*d^2*n2^2 + 32*n1*n2^2 - 10*d*n1*n2^2 + 128*n2^3 - 44*d*n2^3 + 
      4*n1*n2^3 + 8*n2^4 + 928*n5 - 880*d*n5 + 274*d^2*n5 - 28*d^3*n5 + 
      24*n1*n5 - 14*d*n1*n5 + 2*d^2*n1*n5 + 896*n2*n5 - 584*d*n2*n5 + 
      94*d^2*n2*n5 + 20*n1*n2*n5 - 6*d*n1*n2*n5 + 264*n2^2*n5 - 
      88*d*n2^2*n5 + 4*n1*n2^2*n5 + 24*n2^3*n5 + 208*n5^2 - 124*d*n5^2 + 
      18*d^2*n5^2 + 152*n2*n5^2 - 48*d*n2*n5^2 + 24*n2^2*n5^2 + 16*n5^3 - 
      4*d*n5^3 + 8*n2*n5^3)*j[p4, n1, 1 + n2, 0, -1, n5, 1, 2, 1, 0, 0, 0, 0, 
      1, 1])/((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 
      312*n1 + 354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 
      6*d^2*n1^2 + 2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
      132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
      568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
      44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
      60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
      4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
      22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
      24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
      8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((-48 + 52*d - 18*d^2 + 2*d^3 - 24*n1 + 14*d*n1 - 2*d^2*n1 - 40*n2 + 
      32*d*n2 - 6*d^2*n2 - 20*n1*n2 + 6*d*n1*n2 - 8*n2^2 + 4*d*n2^2 - 
      4*n1*n2^2 - 16*n5 + 12*d*n5 - 2*d^2*n5 - 8*n1*n5 + 2*d*n1*n5 - 
      8*n2*n5 + 4*d*n2*n5 - 4*n1*n2*n5)*j[p4, n1, 1 + n2, 0, -1, n5, 1, 2, 1, 
      0, 0, 1, 0, 0, 1])/(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 
     312*n1 + 354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 
     6*d^2*n1^2 + 2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
     132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
     568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
     44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
     60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
     4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
     22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
     24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
     8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 24*n2^2*n5^2 + 
     40*n5^3 - 12*d*n5^3 + 8*n2*n5^3) + 
   ((-56 + 106*d - 71*d^2 + 20*d^3 - 2*d^4 - 12*n1 + 27*d*n1 - 14*d^2*n1 + 
      2*d^3*n1 + 8*n1^2 - 2*d*n1^2 + 28*n2 - 12*d*n2 - 5*d^2*n2 + 2*d^3*n2 + 
      38*n1*n2 - 15*d*n1*n2 + 12*n1^2*n2 - 2*d*n1^2*n2 + 44*n2^2 - 
      34*d*n2^2 + 6*d^2*n2^2 + 30*n1*n2^2 - 10*d*n1*n2^2 + 4*n1^2*n2^2 + 
      8*n2^3 - 4*d*n2^3 + 4*n1*n2^3 - 32*n5 + 40*d*n5 - 16*d^2*n5 + 
      2*d^3*n5 - 16*n1*n5 + 12*d*n1*n5 - 2*d^2*n1*n5 + 4*d*n2*n5 - 
      2*d^2*n2*n5 + 2*d*n1*n2*n5 + 8*n2^2*n5 - 4*d*n2^2*n5 + 4*n1*n2^2*n5)*
     j[p4, n1, 1 + n2, 0, -1, n5, 2, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 
      354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 
      2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
      132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
      568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
      44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
      60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
      4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
      22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
      24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
      8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((-56 + 106*d - 71*d^2 + 20*d^3 - 2*d^4 - 12*n1 + 27*d*n1 - 14*d^2*n1 + 
      2*d^3*n1 + 8*n1^2 - 2*d*n1^2 + 28*n2 - 12*d*n2 - 5*d^2*n2 + 2*d^3*n2 + 
      38*n1*n2 - 15*d*n1*n2 + 12*n1^2*n2 - 2*d*n1^2*n2 + 44*n2^2 - 
      34*d*n2^2 + 6*d^2*n2^2 + 30*n1*n2^2 - 10*d*n1*n2^2 + 4*n1^2*n2^2 + 
      8*n2^3 - 4*d*n2^3 + 4*n1*n2^3 - 32*n5 + 40*d*n5 - 16*d^2*n5 + 
      2*d^3*n5 - 16*n1*n5 + 12*d*n1*n5 - 2*d^2*n1*n5 + 4*d*n2*n5 - 
      2*d^2*n2*n5 + 2*d*n1*n2*n5 + 8*n2^2*n5 - 4*d*n2^2*n5 + 4*n1*n2^2*n5)*
     j[p4, n1, 1 + n2, 0, -1, n5, 2, 1, 0, 0, 0, 1, 0, 1, 1])/
    ((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 
      354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 
      2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
      132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
      568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
      44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
      60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
      4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
      22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
      24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
      8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((-56 + 106*d - 71*d^2 + 20*d^3 - 2*d^4 - 12*n1 + 27*d*n1 - 14*d^2*n1 + 
      2*d^3*n1 + 8*n1^2 - 2*d*n1^2 + 28*n2 - 12*d*n2 - 5*d^2*n2 + 2*d^3*n2 + 
      38*n1*n2 - 15*d*n1*n2 + 12*n1^2*n2 - 2*d*n1^2*n2 + 44*n2^2 - 
      34*d*n2^2 + 6*d^2*n2^2 + 30*n1*n2^2 - 10*d*n1*n2^2 + 4*n1^2*n2^2 + 
      8*n2^3 - 4*d*n2^3 + 4*n1*n2^3 - 32*n5 + 40*d*n5 - 16*d^2*n5 + 
      2*d^3*n5 - 16*n1*n5 + 12*d*n1*n5 - 2*d^2*n1*n5 + 4*d*n2*n5 - 
      2*d^2*n2*n5 + 2*d*n1*n2*n5 + 8*n2^2*n5 - 4*d*n2^2*n5 + 4*n1*n2^2*n5)*
     j[p4, n1, 1 + n2, 0, -1, n5, 2, 1, 1, 0, 0, 1, 0, 0, 1])/
    ((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 
      354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 
      2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
      132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
      568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
      44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
      60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
      4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
      22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
      24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
      8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((-56 + 106*d - 71*d^2 + 20*d^3 - 2*d^4 - 12*n1 + 27*d*n1 - 14*d^2*n1 + 
      2*d^3*n1 + 8*n1^2 - 2*d*n1^2 + 28*n2 - 12*d*n2 - 5*d^2*n2 + 2*d^3*n2 + 
      38*n1*n2 - 15*d*n1*n2 + 12*n1^2*n2 - 2*d*n1^2*n2 + 44*n2^2 - 
      34*d*n2^2 + 6*d^2*n2^2 + 30*n1*n2^2 - 10*d*n1*n2^2 + 4*n1^2*n2^2 + 
      8*n2^3 - 4*d*n2^3 + 4*n1*n2^3 - 32*n5 + 40*d*n5 - 16*d^2*n5 + 
      2*d^3*n5 - 16*n1*n5 + 12*d*n1*n5 - 2*d^2*n1*n5 + 4*d*n2*n5 - 
      2*d^2*n2*n5 + 2*d*n1*n2*n5 + 8*n2^2*n5 - 4*d*n2^2*n5 + 4*n1*n2^2*n5)*
     j[p4, n1, 1 + n2, 0, -1, n5, 2, 1, 1, 0, 0, 1, 0, 1, 0])/
    ((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 
      354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 
      2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
      132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
      568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
      44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
      60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
      4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
      22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
      24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
      8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((56*n5 - 106*d*n5 + 71*d^2*n5 - 20*d^3*n5 + 2*d^4*n5 + 12*n1*n5 - 
      27*d*n1*n5 + 14*d^2*n1*n5 - 2*d^3*n1*n5 - 8*n1^2*n5 + 2*d*n1^2*n5 - 
      28*n2*n5 + 12*d*n2*n5 + 5*d^2*n2*n5 - 2*d^3*n2*n5 - 38*n1*n2*n5 + 
      15*d*n1*n2*n5 - 12*n1^2*n2*n5 + 2*d*n1^2*n2*n5 - 44*n2^2*n5 + 
      34*d*n2^2*n5 - 6*d^2*n2^2*n5 - 30*n1*n2^2*n5 + 10*d*n1*n2^2*n5 - 
      4*n1^2*n2^2*n5 - 8*n2^3*n5 + 4*d*n2^3*n5 - 4*n1*n2^3*n5 + 32*n5^2 - 
      40*d*n5^2 + 16*d^2*n5^2 - 2*d^3*n5^2 + 16*n1*n5^2 - 12*d*n1*n5^2 + 
      2*d^2*n1*n5^2 - 4*d*n2*n5^2 + 2*d^2*n2*n5^2 - 2*d*n1*n2*n5^2 - 
      8*n2^2*n5^2 + 4*d*n2^2*n5^2 - 4*n1*n2^2*n5^2)*
     j[p4, n1, 1 + n2, 0, -1, 1 + n5, 1, 1, 1, 0, 0, 1, 0, 0, 1])/
    ((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 
      354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 
      2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
      132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
      568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
      44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
      60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
      4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
      22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
      24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
      8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((-56*n5 + 106*d*n5 - 71*d^2*n5 + 20*d^3*n5 - 2*d^4*n5 - 12*n1*n5 + 
      27*d*n1*n5 - 14*d^2*n1*n5 + 2*d^3*n1*n5 + 8*n1^2*n5 - 2*d*n1^2*n5 + 
      28*n2*n5 - 12*d*n2*n5 - 5*d^2*n2*n5 + 2*d^3*n2*n5 + 38*n1*n2*n5 - 
      15*d*n1*n2*n5 + 12*n1^2*n2*n5 - 2*d*n1^2*n2*n5 + 44*n2^2*n5 - 
      34*d*n2^2*n5 + 6*d^2*n2^2*n5 + 30*n1*n2^2*n5 - 10*d*n1*n2^2*n5 + 
      4*n1^2*n2^2*n5 + 8*n2^3*n5 - 4*d*n2^3*n5 + 4*n1*n2^3*n5 - 32*n5^2 + 
      40*d*n5^2 - 16*d^2*n5^2 + 2*d^3*n5^2 - 16*n1*n5^2 + 12*d*n1*n5^2 - 
      2*d^2*n1*n5^2 + 4*d*n2*n5^2 - 2*d^2*n2*n5^2 + 2*d*n1*n2*n5^2 + 
      8*n2^2*n5^2 - 4*d*n2^2*n5^2 + 4*n1*n2^2*n5^2)*
     j[p4, n1, 1 + n2, 0, -1, 1 + n5, 1, 1, 1, 0, 0, 1, 0, 1, 0])/
    ((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 
      354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 
      2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
      132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
      568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
      44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
      60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
      4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
      22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
      24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
      8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((-6848 + 10896*d - 6864*d^2 + 2138*d^3 - 329*d^4 + 20*d^5 - 2448*n1 + 
      3092*d*n1 - 1440*d^2*n1 + 293*d^3*n1 - 22*d^4*n1 - 112*n1^2 + 
      92*d*n1^2 - 24*d^2*n1^2 + 2*d^3*n1^2 - 9936*n2 + 12900*d*n2 - 
      6226*d^2*n2 + 1322*d^3*n2 - 104*d^4*n2 - 3192*n1*n2 + 3116*d*n1*n2 - 
      996*d^2*n1*n2 + 104*d^3*n1*n2 - 152*n1^2*n2 + 88*d*n1^2*n2 - 
      12*d^2*n1^2*n2 - 5416*n2^2 + 5368*d*n2^2 - 1764*d^2*n2^2 + 
      192*d^3*n2^2 - 1448*n1*n2^2 + 976*d*n1*n2^2 - 162*d^2*n1*n2^2 - 
      64*n1^2*n2^2 + 20*d*n1^2*n2^2 - 1384*n2^3 + 924*d*n2^3 - 154*d^2*n2^3 - 
      264*n1*n2^3 + 92*d*n1*n2^3 - 8*n1^2*n2^3 - 168*n2^4 + 56*d*n2^4 - 
      16*n1*n2^4 - 8*n2^5 - 4896*n5 + 6128*d*n5 - 2846*d^2*n5 + 581*d^3*n5 - 
      44*d^4*n5 - 1632*n1*n5 + 1516*d*n1*n5 - 461*d^2*n1*n5 + 46*d^3*n1*n5 - 
      32*n1^2*n5 + 16*d*n1^2*n5 - 2*d^2*n1^2*n5 - 5776*n2*n5 + 5548*d*n2*n5 - 
      1760*d^2*n2*n5 + 184*d^3*n2*n5 - 1656*n1*n2*n5 + 1060*d*n1*n2*n5 - 
      166*d^2*n1*n2*n5 - 32*n1^2*n2*n5 + 8*d*n1^2*n2*n5 - 2368*n2^2*n5 + 
      1548*d*n2^2*n5 - 252*d^2*n2^2*n5 - 516*n1*n2^2*n5 + 172*d*n1*n2^2*n5 - 
      8*n1^2*n2^2*n5 - 400*n2^3*n5 + 132*d*n2^3*n5 - 48*n1*n2^3*n5 - 
      24*n2^4*n5 - 1168*n5^2 + 1068*d*n5^2 - 322*d^2*n5^2 + 32*d^3*n5^2 - 
      376*n1*n5^2 + 222*d*n1*n5^2 - 32*d^2*n1*n5^2 - 1080*n2*n5^2 + 
      680*d*n2*n5^2 - 106*d^2*n2*n5^2 - 284*n1*n2*n5^2 + 88*d*n1*n2*n5^2 - 
      296*n2^2*n5^2 + 96*d*n2^2*n5^2 - 48*n1*n2^2*n5^2 - 24*n2^3*n5^2 - 
      96*n5^3 + 56*d*n5^3 - 8*d^2*n5^3 - 32*n1*n5^3 + 8*d*n1*n5^3 - 
      64*n2*n5^3 + 20*d*n2*n5^3 - 16*n1*n2*n5^3 - 8*n2^2*n5^3)*
     j[p4, n1, 1 + n2, 0, 0, -1 + n5, 1, 1, 1, 0, 0, 1, 0, 1, 1])/
    ((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 
      354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 
      2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
      132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
      568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
      44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
      60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
      4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
      22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
      24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
      8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((-864 + 1080*d - 504*d^2 + 104*d^3 - 8*d^4 + 168*n1 - 146*d*n1 + 
      42*d^2*n1 - 4*d^3*n1 - 1152*n2 + 1092*d*n2 - 344*d^2*n2 + 36*d^3*n2 + 
      164*n1*n2 - 96*d*n1*n2 + 14*d^2*n1*n2 - 552*n2^2 + 352*d*n2^2 - 
      56*d^2*n2^2 + 48*n1*n2^2 - 14*d*n1*n2^2 - 112*n2^3 + 36*d*n2^3 + 
      4*n1*n2^3 - 8*n2^4 - 672*n5 + 608*d*n5 - 182*d^2*n5 + 18*d^3*n5 + 
      104*n1*n5 - 58*d*n1*n5 + 8*d^2*n1*n5 - 704*n2*n5 + 432*d*n2*n5 - 
      66*d^2*n2*n5 + 76*n1*n2*n5 - 22*d*n1*n2*n5 - 232*n2^2*n5 + 
      72*d*n2^2*n5 + 12*n1*n2^2*n5 - 24*n2^3*n5 - 176*n5^2 + 100*d*n5^2 - 
      14*d^2*n5^2 + 16*n1*n5^2 - 4*d*n1*n5^2 - 136*n2*n5^2 + 40*d*n2*n5^2 + 
      8*n1*n2*n5^2 - 24*n2^2*n5^2 - 16*n5^3 + 4*d*n5^3 - 8*n2*n5^3)*
     j[p4, n1, 1 + n2, 0, 0, -1 + n5, 1, 1, 1, 0, 0, 1, 0, 1, 2])/
    ((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 
      354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 
      2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
      132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
      568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
      44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
      60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
      4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
      22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
      24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
      8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((1200 - 1540*d + 734*d^2 - 154*d^3 + 12*d^4 + 1480*n2 - 1448*d*n2 + 
      468*d^2*n2 - 50*d^3*n2 + 648*n2^2 - 428*d*n2^2 + 70*d^2*n2^2 + 
      120*n2^3 - 40*d*n2^3 + 8*n2^4 + 880*n5 - 828*d*n5 + 256*d^2*n5 - 
      26*d^3*n5 + 856*n2*n5 - 552*d*n2*n5 + 88*d^2*n2*n5 + 256*n2^2*n5 - 
      84*d*n2^2*n5 + 24*n2^3*n5 + 208*n5^2 - 124*d*n5^2 + 18*d^2*n5^2 + 
      152*n2*n5^2 - 48*d*n2*n5^2 + 24*n2^2*n5^2 + 16*n5^3 - 4*d*n5^3 + 
      8*n2*n5^3)*j[p4, n1, 1 + n2, 0, 0, -1 + n5, 1, 1, 1, 0, 0, 1, 0, 2, 1])/
    ((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 
      354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 
      2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
      132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
      568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
      44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
      60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
      4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
      22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
      24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
      8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((-1172 + 1594*d - 800*d^2 + 175*d^3 - 14*d^4 - 120*n1 + 90*d*n1 - 
      17*d^2*n1 + 8*n1^2 - 8*d*n1^2 + 2*d^2*n1^2 - 980*n2 + 1040*d*n2 - 
      364*d^2*n2 + 42*d^3*n2 - 160*n1*n2 + 102*d*n1*n2 - 16*d^2*n1*n2 - 
      252*n2^2 + 186*d*n2^2 - 34*d^2*n2^2 - 48*n1*n2^2 + 16*d*n1*n2^2 - 
      20*n2^3 + 8*d*n2^3 - 4*n1*n2^3 - 720*n5 + 728*d*n5 - 241*d^2*n5 + 
      26*d^3*n5 - 22*n1*n5 + 3*d*n1*n5 + 2*d^2*n1*n5 + 4*n1^2*n5 - 
      2*d*n1^2*n5 - 388*n2*n5 + 274*d*n2*n5 - 48*d^2*n2*n5 - 38*n1*n2*n5 + 
      12*d*n1*n2*n5 - 48*n2^2*n5 + 18*d*n2^2*n5 - 6*n1*n2^2*n5 - 148*n5^2 + 
      98*d*n5^2 - 16*d^2*n5^2 + 4*n1*n5^2 - 2*d*n1*n5^2 - 40*n2*n5^2 + 
      14*d*n2*n5^2 - 2*n1*n2*n5^2 - 12*n5^3 + 4*d*n5^3)*
     j[p4, n1, 1 + n2, 0, 0, -1 + n5, 1, 2, 0, 0, 0, 1, 0, 1, 1])/
    ((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 
      354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 
      2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
      132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
      568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
      44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
      60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
      4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
      22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
      24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
      8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((-1344 + 1744*d - 840*d^2 + 178*d^3 - 14*d^4 - 72*n1 + 66*d*n1 - 
      20*d^2*n1 + 2*d^3*n1 - 1648*n2 + 1636*d*n2 - 536*d^2*n2 + 58*d^3*n2 - 
      84*n1*n2 + 52*d*n1*n2 - 8*d^2*n1*n2 - 712*n2^2 + 480*d*n2^2 - 
      80*d^2*n2^2 - 32*n1*n2^2 + 10*d*n1*n2^2 - 128*n2^3 + 44*d*n2^3 - 
      4*n1*n2^3 - 8*n2^4 - 928*n5 + 880*d*n5 - 274*d^2*n5 + 28*d^3*n5 - 
      24*n1*n5 + 14*d*n1*n5 - 2*d^2*n1*n5 - 896*n2*n5 + 584*d*n2*n5 - 
      94*d^2*n2*n5 - 20*n1*n2*n5 + 6*d*n1*n2*n5 - 264*n2^2*n5 + 
      88*d*n2^2*n5 - 4*n1*n2^2*n5 - 24*n2^3*n5 - 208*n5^2 + 124*d*n5^2 - 
      18*d^2*n5^2 - 152*n2*n5^2 + 48*d*n2*n5^2 - 24*n2^2*n5^2 - 16*n5^3 + 
      4*d*n5^3 - 8*n2*n5^3)*j[p4, n1, 1 + n2, 0, 0, -1 + n5, 1, 2, 1, 0, 0, 
      0, 0, 1, 1])/((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 
      24*d^4 - 312*n1 + 354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 
      28*d*n1^2 - 6*d^2*n1^2 + 2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 
      188*n1*n2 + 132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 
      872*n2^2 - 568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 
      136*n2^3 - 44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 
      578*d^2*n5 - 60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 
      8*n1^2*n5 + 4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 
      68*n1*n2*n5 + 22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 
      8*n1*n2^2*n5 + 24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 
      24*n1*n5^2 + 8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((48 - 52*d + 18*d^2 - 2*d^3 + 24*n1 - 14*d*n1 + 2*d^2*n1 + 40*n2 - 
      32*d*n2 + 6*d^2*n2 + 20*n1*n2 - 6*d*n1*n2 + 8*n2^2 - 4*d*n2^2 + 
      4*n1*n2^2 + 16*n5 - 12*d*n5 + 2*d^2*n5 + 8*n1*n5 - 2*d*n1*n5 + 
      8*n2*n5 - 4*d*n2*n5 + 4*n1*n2*n5)*j[p4, n1, 1 + n2, 0, 0, -1 + n5, 1, 
      2, 1, 0, 0, 1, 0, 0, 1])/(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 
     312*n1 + 354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 
     6*d^2*n1^2 + 2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
     132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
     568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
     44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
     60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
     4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
     22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
     24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
     8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 24*n2^2*n5^2 + 
     40*n5^3 - 12*d*n5^3 + 8*n2*n5^3) + 
   ((56 - 106*d + 71*d^2 - 20*d^3 + 2*d^4 + 12*n1 - 27*d*n1 + 14*d^2*n1 - 
      2*d^3*n1 - 8*n1^2 + 2*d*n1^2 - 28*n2 + 12*d*n2 + 5*d^2*n2 - 2*d^3*n2 - 
      38*n1*n2 + 15*d*n1*n2 - 12*n1^2*n2 + 2*d*n1^2*n2 - 44*n2^2 + 
      34*d*n2^2 - 6*d^2*n2^2 - 30*n1*n2^2 + 10*d*n1*n2^2 - 4*n1^2*n2^2 - 
      8*n2^3 + 4*d*n2^3 - 4*n1*n2^3 + 32*n5 - 40*d*n5 + 16*d^2*n5 - 
      2*d^3*n5 + 16*n1*n5 - 12*d*n1*n5 + 2*d^2*n1*n5 - 4*d*n2*n5 + 
      2*d^2*n2*n5 - 2*d*n1*n2*n5 - 8*n2^2*n5 + 4*d*n2^2*n5 - 4*n1*n2^2*n5)*
     j[p4, n1, 1 + n2, 0, 0, -1 + n5, 2, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 
      354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 
      2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
      132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
      568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
      44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
      60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
      4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
      22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
      24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
      8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((820 - 1114*d + 562*d^2 - 124*d^3 + 10*d^4 - 120*n1 + 126*d*n1 - 
      46*d^2*n1 + 6*d^3*n1 - 40*n1^2 + 24*d*n1^2 - 4*d^2*n1^2 + 516*n2 - 
      532*d*n2 + 186*d^2*n2 - 22*d^3*n2 - 136*n1*n2 + 84*d*n1*n2 - 
      12*d^2*n1*n2 - 32*n1^2*n2 + 8*d*n1^2*n2 + 60*n2^2 - 30*d*n2^2 + 
      4*d^2*n2^2 - 64*n1*n2^2 + 22*d*n1*n2^2 - 8*n1^2*n2^2 - 4*n2^3 + 
      4*d*n2^3 - 8*n1*n2^3 + 656*n5 - 664*d*n5 + 221*d^2*n5 - 24*d^3*n5 - 
      10*n1*n5 + 13*d*n1*n5 - 4*d^2*n1*n5 - 4*n1^2*n5 + 2*d*n1^2*n5 + 
      308*n2*n5 - 214*d*n2*n5 + 38*d^2*n2*n5 - 2*n1*n2*n5 - 2*d*n1*n2*n5 + 
      24*n2^2*n5 - 6*d*n2^2*n5 - 6*n1*n2^2*n5 + 148*n5^2 - 98*d*n5^2 + 
      16*d^2*n5^2 - 4*n1*n5^2 + 2*d*n1*n5^2 + 40*n2*n5^2 - 14*d*n2*n5^2 + 
      2*n1*n2*n5^2 + 12*n5^3 - 4*d*n5^3)*j[p4, n1, 1 + n2, 0, 0, -1 + n5, 2, 
      1, 0, 0, 0, 1, 0, 1, 1])/((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 
      317*d^3 + 24*d^4 - 312*n1 + 354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 
      32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 2456*n2 - 2396*d*n2 + 772*d^2*n2 - 
      82*d^3*n2 - 188*n1*n2 + 132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 
      4*d*n1^2*n2 + 872*n2^2 - 568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 
      14*d*n1*n2^2 + 136*n2^3 - 44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 
      1828*d*n5 + 578*d^2*n5 - 60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 
      22*d^2*n1*n5 - 8*n1^2*n5 + 4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 
      138*d^2*n2*n5 - 68*n1*n2*n5 + 22*d*n1*n2*n5 + 312*n2^2*n5 - 
      100*d*n2^2*n5 - 8*n1*n2^2*n5 + 24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 
      46*d^2*n5^2 - 24*n1*n5^2 + 8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 
      4*n1*n2*n5^2 + 24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((56 - 106*d + 71*d^2 - 20*d^3 + 2*d^4 + 12*n1 - 27*d*n1 + 14*d^2*n1 - 
      2*d^3*n1 - 8*n1^2 + 2*d*n1^2 - 28*n2 + 12*d*n2 + 5*d^2*n2 - 2*d^3*n2 - 
      38*n1*n2 + 15*d*n1*n2 - 12*n1^2*n2 + 2*d*n1^2*n2 - 44*n2^2 + 
      34*d*n2^2 - 6*d^2*n2^2 - 30*n1*n2^2 + 10*d*n1*n2^2 - 4*n1^2*n2^2 - 
      8*n2^3 + 4*d*n2^3 - 4*n1*n2^3 + 32*n5 - 40*d*n5 + 16*d^2*n5 - 
      2*d^3*n5 + 16*n1*n5 - 12*d*n1*n5 + 2*d^2*n1*n5 - 4*d*n2*n5 + 
      2*d^2*n2*n5 - 2*d*n1*n2*n5 - 8*n2^2*n5 + 4*d*n2^2*n5 - 4*n1*n2^2*n5)*
     j[p4, n1, 1 + n2, 0, 0, -1 + n5, 2, 1, 1, 0, 0, 1, 0, 0, 1])/
    ((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 
      354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 
      2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
      132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
      568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
      44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
      60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
      4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
      22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
      24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
      8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((56 - 106*d + 71*d^2 - 20*d^3 + 2*d^4 + 12*n1 - 27*d*n1 + 14*d^2*n1 - 
      2*d^3*n1 - 8*n1^2 + 2*d*n1^2 - 28*n2 + 12*d*n2 + 5*d^2*n2 - 2*d^3*n2 - 
      38*n1*n2 + 15*d*n1*n2 - 12*n1^2*n2 + 2*d*n1^2*n2 - 44*n2^2 + 
      34*d*n2^2 - 6*d^2*n2^2 - 30*n1*n2^2 + 10*d*n1*n2^2 - 4*n1^2*n2^2 - 
      8*n2^3 + 4*d*n2^3 - 4*n1*n2^3 + 32*n5 - 40*d*n5 + 16*d^2*n5 - 
      2*d^3*n5 + 16*n1*n5 - 12*d*n1*n5 + 2*d^2*n1*n5 - 4*d*n2*n5 + 
      2*d^2*n2*n5 - 2*d*n1*n2*n5 - 8*n2^2*n5 + 4*d*n2^2*n5 - 4*n1*n2^2*n5)*
     j[p4, n1, 1 + n2, 0, 0, -1 + n5, 2, 1, 1, 0, 0, 1, 0, 1, 0])/
    ((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 
      354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 
      2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
      132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
      568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
      44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
      60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
      4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
      22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
      24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
      8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((1028 - 1390*d + 694*d^2 - 151*d^3 + 12*d^4 + 48*n1 - 24*d*n1 - 
      3*d^2*n1 + 2*d^3*n1 - 8*n1^2 + 8*d*n1^2 - 2*d^2*n1^2 + 1984*n2 - 
      2446*d*n2 + 1096*d^2*n2 - 209*d^3*n2 + 14*d^4*n2 + 196*n1*n2 - 
      140*d*n1*n2 + 25*d^2*n1*n2 - 8*n1^2*n2 + 8*d*n1^2*n2 - 2*d^2*n1^2*n2 + 
      1168*n2^2 - 1174*d*n2^2 + 388*d^2*n2^2 - 42*d^3*n2^2 + 176*n1*n2^2 - 
      108*d*n1*n2^2 + 16*d^2*n1*n2^2 + 264*n2^3 - 190*d*n2^3 + 34*d^2*n2^3 + 
      48*n1*n2^3 - 16*d*n1*n2^3 + 20*n2^4 - 8*d*n2^4 + 4*n1*n2^4 + 672*n5 - 
      676*d*n5 + 223*d^2*n5 - 24*d^3*n5 - 2*n1*n5 + 11*d*n1*n5 - 
      4*d^2*n1*n5 - 4*n1^2*n5 + 2*d*n1^2*n5 + 1068*n2*n5 - 970*d*n2*n5 + 
      283*d^2*n2*n5 - 26*d^3*n2*n5 + 40*n1*n2*n5 - 9*d*n1*n2*n5 - 
      2*d^2*n1*n2*n5 - 4*n1^2*n2*n5 + 2*d*n1^2*n2*n5 + 428*n2^2*n5 - 
      288*d*n2^2*n5 + 48*d^2*n2^2*n5 + 40*n1*n2^2*n5 - 12*d*n1*n2^2*n5 + 
      48*n2^3*n5 - 18*d*n2^3*n5 + 6*n1*n2^3*n5 + 148*n5^2 - 98*d*n5^2 + 
      16*d^2*n5^2 - 4*n1*n5^2 + 2*d*n1*n5^2 + 188*n2*n5^2 - 112*d*n2*n5^2 + 
      16*d^2*n2*n5^2 - 2*n1*n2*n5^2 + 2*d*n1*n2*n5^2 + 40*n2^2*n5^2 - 
      14*d*n2^2*n5^2 + 2*n1*n2^2*n5^2 + 12*n5^3 - 4*d*n5^3 + 12*n2*n5^3 - 
      4*d*n2*n5^3)*j[p4, n1, 1 + n2, 0, 0, n5, 0, 1, 1, 0, 0, 1, 0, 1, 1])/
    ((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 
      354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 
      2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
      132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
      568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
      44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
      60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
      4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
      22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
      24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
      8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((-48 + 52*d - 18*d^2 + 2*d^3 - 24*n1 + 14*d*n1 - 2*d^2*n1 - 40*n2 + 
      32*d*n2 - 6*d^2*n2 - 20*n1*n2 + 6*d*n1*n2 - 8*n2^2 + 4*d*n2^2 - 
      4*n1*n2^2 - 16*n5 + 12*d*n5 - 2*d^2*n5 - 8*n1*n5 + 2*d*n1*n5 - 
      8*n2*n5 + 4*d*n2*n5 - 4*n1*n2*n5)*j[p4, n1, 1 + n2, 0, 0, n5, 0, 1, 1, 
      0, 0, 2, -1, 1, 1])/(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 
     312*n1 + 354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 
     6*d^2*n1^2 + 2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
     132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
     568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
     44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
     60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
     4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
     22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
     24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
     8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 24*n2^2*n5^2 + 
     40*n5^3 - 12*d*n5^3 + 8*n2*n5^3) + 
   ((48 - 52*d + 18*d^2 - 2*d^3 + 24*n1 - 14*d*n1 + 2*d^2*n1 + 40*n2 - 
      32*d*n2 + 6*d^2*n2 + 20*n1*n2 - 6*d*n1*n2 + 8*n2^2 - 4*d*n2^2 + 
      4*n1*n2^2 + 16*n5 - 12*d*n5 + 2*d^2*n5 + 8*n1*n5 - 2*d*n1*n5 + 
      8*n2*n5 - 4*d*n2*n5 + 4*n1*n2*n5)*j[p4, n1, 1 + n2, 0, 0, n5, 0, 1, 1, 
      0, 0, 2, 0, 1, 1])/(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 
     312*n1 + 354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 
     6*d^2*n1^2 + 2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
     132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
     568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
     44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
     60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
     4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
     22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
     24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
     8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 24*n2^2*n5^2 + 
     40*n5^3 - 12*d*n5^3 + 8*n2*n5^3) + 
   ((-48 + 52*d - 18*d^2 + 2*d^3 - 24*n1 + 14*d*n1 - 2*d^2*n1 - 40*n2 + 
      32*d*n2 - 6*d^2*n2 - 20*n1*n2 + 6*d*n1*n2 - 8*n2^2 + 4*d*n2^2 - 
      4*n1*n2^2 - 16*n5 + 12*d*n5 - 2*d^2*n5 - 8*n1*n5 + 2*d*n1*n5 - 
      8*n2*n5 + 4*d*n2*n5 - 4*n1*n2*n5)*j[p4, n1, 1 + n2, 0, 0, n5, 0, 1, 2, 
      0, 0, 1, -1, 1, 1])/(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 
     312*n1 + 354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 
     6*d^2*n1^2 + 2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
     132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
     568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
     44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
     60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
     4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
     22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
     24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
     8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 24*n2^2*n5^2 + 
     40*n5^3 - 12*d*n5^3 + 8*n2*n5^3) + 
   ((1084 - 1496*d + 765*d^2 - 171*d^3 + 14*d^4 + 60*n1 - 51*d*n1 + 
      11*d^2*n1 - 16*n1^2 + 10*d*n1^2 - 2*d^2*n1^2 + 1900*n2 - 2328*d*n2 + 
      1030*d^2*n2 - 191*d^3*n2 + 12*d^4*n2 + 146*n1*n2 - 98*d*n1*n2 + 
      11*d^2*n1*n2 + 2*d^3*n1*n2 - 12*n1^2*n2 + 8*d*n1^2*n2 - 2*d^2*n1^2*n2 + 
      1152*n2^2 - 1152*d*n2^2 + 377*d^2*n2^2 - 40*d^3*n2^2 + 184*n1*n2^2 - 
      113*d*n1*n2^2 + 16*d^2*n1*n2^2 + 8*n1^2*n2^2 - 2*d*n1^2*n2^2 + 
      300*n2^3 - 220*d*n2^3 + 40*d^2*n2^3 + 74*n1*n2^3 - 26*d*n1*n2^3 + 
      4*n1^2*n2^3 + 28*n2^4 - 12*d*n2^4 + 8*n1*n2^4 + 440*n5 - 334*d*n5 + 
      36*d^2*n5 + 21*d^3*n5 - 4*d^4*n5 - 166*n1*n5 + 176*d*n1*n5 - 
      59*d^2*n1*n5 + 6*d^3*n1*n5 - 28*n1^2*n5 + 16*d*n1^2*n5 - 
      2*d^2*n1^2*n5 + 768*n2*n5 - 626*d*n2*n5 + 154*d^2*n2*n5 - 
      10*d^3*n2*n5 - 150*n1*n2*n5 + 120*d*n1*n2*n5 - 24*d^2*n1*n2*n5 - 
      24*n1^2*n2*n5 + 8*d*n1^2*n2*n5 + 336*n2^2*n5 - 210*d*n2^2*n5 + 
      32*d^2*n2^2*n5 - 14*n1*n2^2*n5 + 8*d*n1*n2^2*n5 - 4*n1^2*n2^2*n5 + 
      48*n2^3*n5 - 18*d*n2^3*n5 + 6*n1*n2^3*n5 + 100*n5^2 - 46*d*n5^2 - 
      2*d^2*n5^2 + 2*d^3*n5^2 - 28*n1*n5^2 + 16*d*n1*n5^2 - 2*d^2*n1*n5^2 + 
      148*n2*n5^2 - 80*d*n2*n5^2 + 10*d^2*n2*n5^2 - 22*n1*n2*n5^2 + 
      8*d*n1*n2*n5^2 + 32*n2^2*n5^2 - 10*d*n2^2*n5^2 - 2*n1*n2^2*n5^2 + 
      12*n5^3 - 4*d*n5^3 + 12*n2*n5^3 - 4*d*n2*n5^3)*
     j[p4, n1, 1 + n2, 0, 0, n5, 1, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 
      354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 
      2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
      132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
      568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
      44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
      60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
      4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
      22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
      24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
      8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((-48 + 52*d - 18*d^2 + 2*d^3 - 24*n1 + 14*d*n1 - 2*d^2*n1 - 40*n2 + 
      32*d*n2 - 6*d^2*n2 - 20*n1*n2 + 6*d*n1*n2 - 8*n2^2 + 4*d*n2^2 - 
      4*n1*n2^2 - 16*n5 + 12*d*n5 - 2*d^2*n5 - 8*n1*n5 + 2*d*n1*n5 - 
      8*n2*n5 + 4*d*n2*n5 - 4*n1*n2*n5)*j[p4, n1, 1 + n2, 0, 0, n5, 1, 0, 1, 
      0, 0, 1, 0, 2, 1])/(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 
     312*n1 + 354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 
     6*d^2*n1^2 + 2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
     132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
     568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
     44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
     60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
     4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
     22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
     24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
     8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 24*n2^2*n5^2 + 
     40*n5^3 - 12*d*n5^3 + 8*n2*n5^3) + 
   ((-500 + 626*d - 288*d^2 + 57*d^3 - 4*d^4 + 456*n1 - 534*d*n1 + 
      223*d^2*n1 - 38*d^3*n1 + 2*d^4*n1 + 128*n1^2 - 102*d*n1^2 + 
      26*d^2*n1^2 - 2*d^3*n1^2 - 576*n2 + 552*d*n2 - 177*d^2*n2 + 19*d^3*n2 + 
      836*n1*n2 - 799*d*n1*n2 + 251*d^2*n1*n2 - 26*d^3*n1*n2 + 172*n1^2*n2 - 
      98*d*n1^2*n2 + 14*d^2*n1^2*n2 - 156*n2^2 + 54*d*n2^2 + 11*d^2*n2^2 - 
      4*d^3*n2^2 + 466*n1*n2^2 - 307*d*n1*n2^2 + 50*d^2*n1*n2^2 + 
      68*n1^2*n2^2 - 20*d*n1^2*n2^2 + 4*n2^3 - 28*d*n2^3 + 8*d^2*n2^3 + 
      102*n1*n2^3 - 34*d*n1*n2^3 + 8*n1^2*n2^3 + 4*n2^4 - 4*d*n2^4 + 
      8*n1*n2^4 - 576*n5 + 572*d*n5 - 187*d^2*n5 + 20*d^3*n5 + 98*n1*n5 - 
      91*d*n1*n5 + 26*d^2*n1*n5 - 2*d^3*n1*n5 + 28*n1^2*n5 - 16*d*n1^2*n5 + 
      2*d^2*n1^2*n5 - 764*n2*n5 + 658*d*n2*n5 - 183*d^2*n2*n5 + 
      16*d^3*n2*n5 + 152*n1*n2*n5 - 103*d*n1*n2*n5 + 18*d^2*n1*n2*n5 + 
      24*n1^2*n2*n5 - 8*d*n1^2*n2*n5 - 252*n2^2*n5 + 148*d*n2^2*n5 - 
      22*d^2*n2^2*n5 + 56*n1*n2^2*n5 - 18*d*n1*n2^2*n5 + 4*n1^2*n2^2*n5 - 
      24*n2^3*n5 + 6*d*n2^3*n5 + 6*n1*n2^3*n5 - 148*n5^2 + 98*d*n5^2 - 
      16*d^2*n5^2 + 4*n1*n5^2 - 2*d*n1*n5^2 - 188*n2*n5^2 + 112*d*n2*n5^2 - 
      16*d^2*n2*n5^2 + 2*n1*n2*n5^2 - 2*d*n1*n2*n5^2 - 40*n2^2*n5^2 + 
      14*d*n2^2*n5^2 - 2*n1*n2^2*n5^2 - 12*n5^3 + 4*d*n5^3 - 12*n2*n5^3 + 
      4*d*n2*n5^3)*j[p4, n1, 1 + n2, 0, 0, n5, 1, 1, 0, 0, 0, 1, 0, 1, 1])/
    ((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 
      354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 
      2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
      132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
      568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
      44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
      60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
      4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
      22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
      24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
      8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((-48 + 52*d - 18*d^2 + 2*d^3 - 24*n1 + 14*d*n1 - 2*d^2*n1 - 40*n2 + 
      32*d*n2 - 6*d^2*n2 - 20*n1*n2 + 6*d*n1*n2 - 8*n2^2 + 4*d*n2^2 - 
      4*n1*n2^2 - 16*n5 + 12*d*n5 - 2*d^2*n5 - 8*n1*n5 + 2*d*n1*n5 - 
      8*n2*n5 + 4*d*n2*n5 - 4*n1*n2*n5)*j[p4, n1, 1 + n2, 0, 0, n5, 1, 1, 0, 
      0, 0, 2, -1, 1, 1])/(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 
     312*n1 + 354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 
     6*d^2*n1^2 + 2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
     132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
     568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
     44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
     60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
     4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
     22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
     24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
     8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 24*n2^2*n5^2 + 
     40*n5^3 - 12*d*n5^3 + 8*n2*n5^3) + 
   ((48 - 52*d + 18*d^2 - 2*d^3 + 24*n1 - 14*d*n1 + 2*d^2*n1 + 40*n2 - 
      32*d*n2 + 6*d^2*n2 + 20*n1*n2 - 6*d*n1*n2 + 8*n2^2 - 4*d*n2^2 + 
      4*n1*n2^2 + 16*n5 - 12*d*n5 + 2*d^2*n5 + 8*n1*n5 - 2*d*n1*n5 + 
      8*n2*n5 - 4*d*n2*n5 + 4*n1*n2*n5)*j[p4, n1, 1 + n2, 0, 0, n5, 1, 1, 0, 
      0, 0, 2, 0, 1, 1])/(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 
     312*n1 + 354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 
     6*d^2*n1^2 + 2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
     132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
     568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
     44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
     60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
     4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
     22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
     24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
     8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 24*n2^2*n5^2 + 
     40*n5^3 - 12*d*n5^3 + 8*n2*n5^3) + 
   ((720 - 876*d + 398*d^2 - 80*d^3 + 6*d^4 - 240*n1 + 212*d*n1 - 62*d^2*n1 + 
      6*d^3*n1 + 984*n2 - 904*d*n2 + 276*d^2*n2 - 28*d^3*n2 - 248*n1*n2 + 
      148*d*n1*n2 - 22*d^2*n1*n2 + 488*n2^2 - 300*d*n2^2 + 46*d^2*n2^2 - 
      80*n1*n2^2 + 24*d*n1*n2^2 + 104*n2^3 - 32*d*n2^3 - 8*n1*n2^3 + 8*n2^4 + 
      624*n5 - 556*d*n5 + 164*d^2*n5 - 16*d^3*n5 - 128*n1*n5 + 72*d*n1*n5 - 
      10*d^2*n1*n5 + 664*n2*n5 - 400*d*n2*n5 + 60*d^2*n2*n5 - 96*n1*n2*n5 + 
      28*d*n1*n2*n5 + 224*n2^2*n5 - 68*d*n2^2*n5 - 16*n1*n2^2*n5 + 
      24*n2^3*n5 + 176*n5^2 - 100*d*n5^2 + 14*d^2*n5^2 - 16*n1*n5^2 + 
      4*d*n1*n5^2 + 136*n2*n5^2 - 40*d*n2*n5^2 - 8*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 16*n5^3 - 4*d*n5^3 + 8*n2*n5^3)*
     j[p4, n1, 1 + n2, 0, 0, n5, 1, 1, 1, -1, 0, 1, 0, 0, 2])/
    ((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 
      354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 
      2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
      132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
      568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
      44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
      60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
      4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
      22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
      24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
      8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((-1200 + 1540*d - 734*d^2 + 154*d^3 - 12*d^4 - 144*n1 + 204*d*n1 - 
      106*d^2*n1 + 24*d^3*n1 - 2*d^4*n1 - 72*n1^2 + 66*d*n1^2 - 20*d^2*n1^2 + 
      2*d^3*n1^2 - 1480*n2 + 1448*d*n2 - 468*d^2*n2 + 50*d^3*n2 - 168*n1*n2 + 
      188*d*n1*n2 - 68*d^2*n1*n2 + 8*d^3*n1*n2 - 84*n1^2*n2 + 52*d*n1^2*n2 - 
      8*d^2*n1^2*n2 - 648*n2^2 + 428*d*n2^2 - 70*d^2*n2^2 - 64*n1*n2^2 + 
      52*d*n1*n2^2 - 10*d^2*n1*n2^2 - 32*n1^2*n2^2 + 10*d*n1^2*n2^2 - 
      120*n2^3 + 40*d*n2^3 - 8*n1*n2^3 + 4*d*n1*n2^3 - 4*n1^2*n2^3 - 8*n2^4 - 
      880*n5 + 828*d*n5 - 256*d^2*n5 + 26*d^3*n5 - 48*n1*n5 + 52*d*n1*n5 - 
      18*d^2*n1*n5 + 2*d^3*n1*n5 - 24*n1^2*n5 + 14*d*n1^2*n5 - 
      2*d^2*n1^2*n5 - 856*n2*n5 + 552*d*n2*n5 - 88*d^2*n2*n5 - 40*n1*n2*n5 + 
      32*d*n1*n2*n5 - 6*d^2*n1*n2*n5 - 20*n1^2*n2*n5 + 6*d*n1^2*n2*n5 - 
      256*n2^2*n5 + 84*d*n2^2*n5 - 8*n1*n2^2*n5 + 4*d*n1*n2^2*n5 - 
      4*n1^2*n2^2*n5 - 24*n2^3*n5 - 208*n5^2 + 124*d*n5^2 - 18*d^2*n5^2 - 
      152*n2*n5^2 + 48*d*n2*n5^2 - 24*n2^2*n5^2 - 16*n5^3 + 4*d*n5^3 - 
      8*n2*n5^3)*j[p4, n1, 1 + n2, 0, 0, n5, 1, 1, 1, 0, 0, 0, 0, 1, 1])/
    ((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 
      354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 
      2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
      132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
      568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
      44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
      60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
      4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
      22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
      24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
      8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((816 - 1172*d + 618*d^2 - 142*d^3 + 12*d^4 + 504*n1 - 486*d*n1 + 
      154*d^2*n1 - 16*d^3*n1 + 48*n1^2 - 28*d*n1^2 + 4*d^2*n1^2 + 1688*n2 - 
      2164*d*n2 + 984*d^2*n2 - 186*d^3*n2 + 12*d^4*n2 + 1020*n1*n2 - 
      828*d*n1*n2 + 210*d^2*n1*n2 - 16*d^3*n1*n2 + 88*n1^2*n2 - 
      40*d*n1^2*n2 + 4*d^2*n1^2*n2 + 1168*n2^2 - 1236*d*n2^2 + 414*d^2*n2^2 - 
      44*d^3*n2^2 + 680*n1*n2^2 - 398*d*n1*n2^2 + 56*d^2*n1*n2^2 + 
      48*n1^2*n2^2 - 12*d*n1^2*n2^2 + 328*n2^3 - 260*d*n2^3 + 48*d^2*n2^3 + 
      180*n1*n2^3 - 56*d*n1*n2^3 + 8*n1^2*n2^3 + 32*n2^4 - 16*d*n2^4 + 
      16*n1*n2^4 - 8*n5 + 102*d*n5 - 105*d^2*n5 + 36*d^3*n5 - 4*d^4*n5 + 
      12*n1*n5 + 37*d*n1*n5 - 26*d^2*n1*n5 + 4*d^3*n1*n5 + 8*n1^2*n5 - 
      2*d*n1^2*n5 + 212*n2*n5 - 160*d*n2*n5 + 23*d^2*n2*n5 + 2*d^3*n2*n5 + 
      130*n1*n2*n5 - 43*d*n1*n2*n5 + 12*n1^2*n2*n5 - 2*d*n1^2*n2*n5 + 
      172*n2^2*n5 - 126*d*n2^2*n5 + 20*d^2*n2^2*n5 + 94*n1*n2^2*n5 - 
      24*d*n1*n2^2*n5 + 4*n1^2*n2^2*n5 + 32*n2^3*n5 - 16*d*n2^3*n5 + 
      16*n1*n2^3*n5 - 80*n5^2 + 92*d*n5^2 - 34*d^2*n5^2 + 4*d^3*n5^2 - 
      40*n1*n5^2 + 26*d*n1*n5^2 - 4*d^2*n1*n5^2 - 40*n2*n5^2 + 36*d*n2*n5^2 - 
      8*d^2*n2*n5^2 - 20*n1*n2*n5^2 + 8*d*n1*n2*n5^2)*
     j[p4, n1, 1 + n2, 0, 0, n5, 1, 1, 1, 0, 0, 1, 0, 0, 1])/
    ((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 
      354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 
      2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
      132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
      568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
      44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
      60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
      4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
      22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
      24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
      8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((-48 + 52*d - 18*d^2 + 2*d^3 - 24*n1 + 14*d*n1 - 2*d^2*n1 - 40*n2 + 
      32*d*n2 - 6*d^2*n2 - 20*n1*n2 + 6*d*n1*n2 - 8*n2^2 + 4*d*n2^2 - 
      4*n1*n2^2 - 16*n5 + 12*d*n5 - 2*d^2*n5 - 8*n1*n5 + 2*d*n1*n5 - 
      8*n2*n5 + 4*d*n2*n5 - 4*n1*n2*n5)*j[p4, n1, 1 + n2, 0, 0, n5, 1, 1, 1, 
      0, 0, 1, 0, 0, 2])/(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 
     312*n1 + 354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 
     6*d^2*n1^2 + 2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
     132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
     568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
     44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
     60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
     4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
     22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
     24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
     8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 24*n2^2*n5^2 + 
     40*n5^3 - 12*d*n5^3 + 8*n2*n5^3) + 
   ((-144 + 204*d - 106*d^2 + 24*d^3 - 2*d^4 - 72*n1 + 66*d*n1 - 20*d^2*n1 + 
      2*d^3*n1 - 168*n2 + 188*d*n2 - 68*d^2*n2 + 8*d^3*n2 - 84*n1*n2 + 
      52*d*n1*n2 - 8*d^2*n1*n2 - 64*n2^2 + 52*d*n2^2 - 10*d^2*n2^2 - 
      32*n1*n2^2 + 10*d*n1*n2^2 - 8*n2^3 + 4*d*n2^3 - 4*n1*n2^3 + 152*n5 - 
      258*d*n5 + 159*d^2*n5 - 42*d^3*n5 + 4*d^4*n5 + 60*n1*n5 - 79*d*n1*n5 + 
      32*d^2*n1*n5 - 4*d^3*n1*n5 - 8*n1^2*n5 + 2*d*n1^2*n5 + 100*n2*n5 - 
      144*d*n2*n5 + 67*d^2*n2*n5 - 10*d^3*n2*n5 + 26*n1*n2*n5 - 
      31*d*n1*n2*n5 + 8*d^2*n1*n2*n5 - 12*n1^2*n2*n5 + 2*d*n1^2*n2*n5 + 
      12*n2^2*n5 - 14*d*n2^2*n5 + 4*d^2*n2^2*n5 - 2*n1*n2^2*n5 - 
      4*n1^2*n2^2*n5 + 80*n5^2 - 92*d*n5^2 + 34*d^2*n5^2 - 4*d^3*n5^2 + 
      40*n1*n5^2 - 26*d*n1*n5^2 + 4*d^2*n1*n5^2 + 40*n2*n5^2 - 36*d*n2*n5^2 + 
      8*d^2*n2*n5^2 + 20*n1*n2*n5^2 - 8*d*n1*n2*n5^2)*
     j[p4, n1, 1 + n2, 0, 0, n5, 1, 1, 1, 0, 0, 1, 0, 1, 0])/
    ((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 
      354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 
      2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
      132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
      568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
      44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
      60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
      4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
      22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
      24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
      8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((432 - 612*d + 318*d^2 - 72*d^3 + 6*d^4 + 264*n1 - 250*d*n1 + 78*d^2*n1 - 
      8*d^3*n1 + 24*n1^2 - 14*d*n1^2 + 2*d^2*n1^2 + 456*n2 - 512*d*n2 + 
      186*d^2*n2 - 22*d^3*n2 + 268*n1*n2 - 174*d*n1*n2 + 28*d^2*n1*n2 + 
      20*n1^2*n2 - 6*d*n1^2*n2 + 152*n2^2 - 124*d*n2^2 + 24*d^2*n2^2 + 
      84*n1*n2^2 - 28*d*n1*n2^2 + 4*n1^2*n2^2 + 16*n2^3 - 8*d*n2^3 + 
      8*n1*n2^3 + 240*n5 - 260*d*n5 + 90*d^2*n5 - 10*d^3*n5 + 136*n1*n5 - 
      82*d*n1*n5 + 12*d^2*n1*n5 + 8*n1^2*n5 - 2*d*n1^2*n5 + 184*n2*n5 - 
      148*d*n2*n5 + 28*d^2*n2*n5 + 100*n1*n2*n5 - 32*d*n1*n2*n5 + 
      4*n1^2*n2*n5 + 32*n2^2*n5 - 16*d*n2^2*n5 + 16*n1*n2^2*n5 + 32*n5^2 - 
      24*d*n5^2 + 4*d^2*n5^2 + 16*n1*n5^2 - 4*d*n1*n5^2 + 16*n2*n5^2 - 
      8*d*n2*n5^2 + 8*n1*n2*n5^2)*j[p4, n1, 1 + n2, 0, 0, n5, 1, 1, 1, 0, 0, 
      1, 0, 1, 1])/(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 
     354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 
     2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 132*d*n1*n2 - 
     24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 568*d*n2^2 + 
     92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 44*d*n2^3 - 
     4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 60*d^3*n5 - 
     164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 4*d*n1^2*n5 + 
     1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 22*d*n1*n2*n5 + 
     312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 24*n2^3*n5 + 472*n5^2 - 
     296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 8*d*n1*n5^2 + 216*n2*n5^2 - 
     68*d*n2*n5^2 - 4*n1*n2*n5^2 + 24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 
     8*n2*n5^3) + ((-48 + 52*d - 18*d^2 + 2*d^3 - 24*n1 + 14*d*n1 - 
      2*d^2*n1 - 40*n2 + 32*d*n2 - 6*d^2*n2 - 20*n1*n2 + 6*d*n1*n2 - 8*n2^2 + 
      4*d*n2^2 - 4*n1*n2^2 - 16*n5 + 12*d*n5 - 2*d^2*n5 - 8*n1*n5 + 
      2*d*n1*n5 - 8*n2*n5 + 4*d*n2*n5 - 4*n1*n2*n5)*
     j[p4, n1, 1 + n2, 0, 0, n5, 1, 1, 1, 0, 0, 1, 0, 2, 0])/
    (2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 354*d*n1 - 
     137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 2456*n2 - 
     2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 132*d*n1*n2 - 
     24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 568*d*n2^2 + 
     92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 44*d*n2^3 - 
     4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 60*d^3*n5 - 
     164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 4*d*n1^2*n5 + 
     1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 22*d*n1*n2*n5 + 
     312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 24*n2^3*n5 + 472*n5^2 - 
     296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 8*d*n1*n5^2 + 216*n2*n5^2 - 
     68*d*n2*n5^2 - 4*n1*n2*n5^2 + 24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 
     8*n2*n5^3) + ((-480 + 664*d - 336*d^2 + 74*d^3 - 6*d^4 - 240*n1 + 
      212*d*n1 - 62*d^2*n1 + 6*d^3*n1 - 496*n2 + 544*d*n2 - 192*d^2*n2 + 
      22*d^3*n2 - 248*n1*n2 + 148*d*n1*n2 - 22*d^2*n1*n2 - 160*n2^2 + 
      128*d*n2^2 - 24*d^2*n2^2 - 80*n1*n2^2 + 24*d*n1*n2^2 - 16*n2^3 + 
      8*d*n2^3 - 8*n1*n2^3 - 256*n5 + 272*d*n5 - 92*d^2*n5 + 10*d^3*n5 - 
      128*n1*n5 + 72*d*n1*n5 - 10*d^2*n1*n5 - 192*n2*n5 + 152*d*n2*n5 - 
      28*d^2*n2*n5 - 96*n1*n2*n5 + 28*d*n1*n2*n5 - 32*n2^2*n5 + 
      16*d*n2^2*n5 - 16*n1*n2^2*n5 - 32*n5^2 + 24*d*n5^2 - 4*d^2*n5^2 - 
      16*n1*n5^2 + 4*d*n1*n5^2 - 16*n2*n5^2 + 8*d*n2*n5^2 - 8*n1*n2*n5^2)*
     j[p4, n1, 1 + n2, 0, 0, n5, 1, 2, 0, 0, -1, 1, 0, 1, 1])/
    ((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 
      354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 
      2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
      132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
      568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
      44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
      60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
      4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
      22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
      24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
      8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((-48 + 52*d - 18*d^2 + 2*d^3 - 24*n1 + 14*d*n1 - 2*d^2*n1 - 40*n2 + 
      32*d*n2 - 6*d^2*n2 - 20*n1*n2 + 6*d*n1*n2 - 8*n2^2 + 4*d*n2^2 - 
      4*n1*n2^2 - 16*n5 + 12*d*n5 - 2*d^2*n5 - 8*n1*n5 + 2*d*n1*n5 - 
      8*n2*n5 + 4*d*n2*n5 - 4*n1*n2*n5)*j[p4, n1, 1 + n2, 0, 0, n5, 2, 1, 0, 
      -1, 0, 1, 0, 1, 1])/(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 
     312*n1 + 354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 
     6*d^2*n1^2 + 2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
     132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
     568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
     44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
     60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
     4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
     22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
     24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
     8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 24*n2^2*n5^2 + 
     40*n5^3 - 12*d*n5^3 + 8*n2*n5^3) + 
   ((48 - 52*d + 18*d^2 - 2*d^3 + 24*n1 - 14*d*n1 + 2*d^2*n1 + 40*n2 - 
      32*d*n2 + 6*d^2*n2 + 20*n1*n2 - 6*d*n1*n2 + 8*n2^2 - 4*d*n2^2 + 
      4*n1*n2^2 + 16*n5 - 12*d*n5 + 2*d^2*n5 + 8*n1*n5 - 2*d*n1*n5 + 
      8*n2*n5 - 4*d*n2*n5 + 4*n1*n2*n5)*j[p4, n1, 1 + n2, 0, 0, n5, 2, 1, 0, 
      0, -1, 1, 0, 1, 1])/(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 
     312*n1 + 354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 
     6*d^2*n1^2 + 2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
     132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
     568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
     44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
     60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
     4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
     22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
     24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
     8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 24*n2^2*n5^2 + 
     40*n5^3 - 12*d*n5^3 + 8*n2*n5^3) + 
   ((56 - 106*d + 71*d^2 - 20*d^3 + 2*d^4 + 12*n1 - 27*d*n1 + 14*d^2*n1 - 
      2*d^3*n1 - 8*n1^2 + 2*d*n1^2 - 28*n2 + 12*d*n2 + 5*d^2*n2 - 2*d^3*n2 - 
      38*n1*n2 + 15*d*n1*n2 - 12*n1^2*n2 + 2*d*n1^2*n2 - 44*n2^2 + 
      34*d*n2^2 - 6*d^2*n2^2 - 30*n1*n2^2 + 10*d*n1*n2^2 - 4*n1^2*n2^2 - 
      8*n2^3 + 4*d*n2^3 - 4*n1*n2^3 + 32*n5 - 40*d*n5 + 16*d^2*n5 - 
      2*d^3*n5 + 16*n1*n5 - 12*d*n1*n5 + 2*d^2*n1*n5 - 4*d*n2*n5 + 
      2*d^2*n2*n5 - 2*d*n1*n2*n5 - 8*n2^2*n5 + 4*d*n2^2*n5 - 4*n1*n2^2*n5)*
     j[p4, n1, 1 + n2, 0, 0, n5, 2, 1, 0, 0, 0, 1, -1, 1, 1])/
    ((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 
      354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 
      2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
      132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
      568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
      44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
      60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
      4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
      22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
      24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
      8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((-48*n5 + 52*d*n5 - 18*d^2*n5 + 2*d^3*n5 - 24*n1*n5 + 14*d*n1*n5 - 
      2*d^2*n1*n5 - 40*n2*n5 + 32*d*n2*n5 - 6*d^2*n2*n5 - 20*n1*n2*n5 + 
      6*d*n1*n2*n5 - 8*n2^2*n5 + 4*d*n2^2*n5 - 4*n1*n2^2*n5 - 16*n5^2 + 
      12*d*n5^2 - 2*d^2*n5^2 - 8*n1*n5^2 + 2*d*n1*n5^2 - 8*n2*n5^2 + 
      4*d*n2*n5^2 - 4*n1*n2*n5^2)*j[p4, n1, 1 + n2, 0, 0, 1 + n5, 1, 0, 1, 
      -1, 0, 1, 0, 1, 1])/(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 
     312*n1 + 354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 
     6*d^2*n1^2 + 2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
     132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
     568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
     44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
     60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
     4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
     22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
     24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
     8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 24*n2^2*n5^2 + 
     40*n5^3 - 12*d*n5^3 + 8*n2*n5^3) + 
   ((-48 + 52*d - 18*d^2 + 2*d^3 - 24*n1 + 14*d*n1 - 2*d^2*n1 - 88*n2 + 
      84*d*n2 - 24*d^2*n2 + 2*d^3*n2 - 44*n1*n2 + 20*d*n1*n2 - 2*d^2*n1*n2 - 
      48*n2^2 + 36*d*n2^2 - 6*d^2*n2^2 - 24*n1*n2^2 + 6*d*n1*n2^2 - 8*n2^3 + 
      4*d*n2^3 - 4*n1*n2^3 - 16*n5 + 12*d*n5 - 2*d^2*n5 - 8*n1*n5 + 
      2*d*n1*n5 - 24*n2*n5 + 16*d*n2*n5 - 2*d^2*n2*n5 - 12*n1*n2*n5 + 
      2*d*n1*n2*n5 - 8*n2^2*n5 + 4*d*n2^2*n5 - 4*n1*n2^2*n5)*
     j[p4, n1, 2 + n2, -1, 0, n5, 0, 1, 1, 0, 0, 1, 0, 1, 1])/
    (2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 354*d*n1 - 
     137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 2456*n2 - 
     2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 132*d*n1*n2 - 
     24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 568*d*n2^2 + 
     92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 44*d*n2^3 - 
     4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 60*d^3*n5 - 
     164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 4*d*n1^2*n5 + 
     1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 22*d*n1*n2*n5 + 
     312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 24*n2^3*n5 + 472*n5^2 - 
     296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 8*d*n1*n5^2 + 216*n2*n5^2 - 
     68*d*n2*n5^2 - 4*n1*n2*n5^2 + 24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 
     8*n2*n5^3) + ((-56 + 106*d - 71*d^2 + 20*d^3 - 2*d^4 - 12*n1 + 27*d*n1 - 
      14*d^2*n1 + 2*d^3*n1 + 8*n1^2 - 2*d*n1^2 - 28*n2 + 94*d*n2 - 
      76*d^2*n2 + 22*d^3*n2 - 2*d^4*n2 + 26*n1*n2 + 12*d*n1*n2 - 
      14*d^2*n1*n2 + 2*d^3*n1*n2 + 20*n1^2*n2 - 4*d*n1^2*n2 + 72*n2^2 - 
      46*d*n2^2 + d^2*n2^2 + 2*d^3*n2^2 + 68*n1*n2^2 - 25*d*n1*n2^2 + 
      16*n1^2*n2^2 - 2*d*n1^2*n2^2 + 52*n2^3 - 38*d*n2^3 + 6*d^2*n2^3 + 
      34*n1*n2^3 - 10*d*n1*n2^3 + 4*n1^2*n2^3 + 8*n2^4 - 4*d*n2^4 + 
      4*n1*n2^4 - 32*n5 + 40*d*n5 - 16*d^2*n5 + 2*d^3*n5 - 16*n1*n5 + 
      12*d*n1*n5 - 2*d^2*n1*n5 - 32*n2*n5 + 44*d*n2*n5 - 18*d^2*n2*n5 + 
      2*d^3*n2*n5 - 16*n1*n2*n5 + 14*d*n1*n2*n5 - 2*d^2*n1*n2*n5 + 
      8*n2^2*n5 - 2*d^2*n2^2*n5 + 4*n1*n2^2*n5 + 2*d*n1*n2^2*n5 + 8*n2^3*n5 - 
      4*d*n2^3*n5 + 4*n1*n2^3*n5)*j[p4, n1, 2 + n2, -1, 0, n5, 1, 0, 1, 0, 0, 
      1, 0, 1, 1])/((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 
      24*d^4 - 312*n1 + 354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 
      28*d*n1^2 - 6*d^2*n1^2 + 2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 
      188*n1*n2 + 132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 
      872*n2^2 - 568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 
      136*n2^3 - 44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 
      578*d^2*n5 - 60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 
      8*n1^2*n5 + 4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 
      68*n1*n2*n5 + 22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 
      8*n1*n2^2*n5 + 24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 
      24*n1*n5^2 + 8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((56 - 106*d + 71*d^2 - 20*d^3 + 2*d^4 + 12*n1 - 27*d*n1 + 14*d^2*n1 - 
      2*d^3*n1 - 8*n1^2 + 2*d*n1^2 + 28*n2 - 94*d*n2 + 76*d^2*n2 - 
      22*d^3*n2 + 2*d^4*n2 - 26*n1*n2 - 12*d*n1*n2 + 14*d^2*n1*n2 - 
      2*d^3*n1*n2 - 20*n1^2*n2 + 4*d*n1^2*n2 - 72*n2^2 + 46*d*n2^2 - 
      d^2*n2^2 - 2*d^3*n2^2 - 68*n1*n2^2 + 25*d*n1*n2^2 - 16*n1^2*n2^2 + 
      2*d*n1^2*n2^2 - 52*n2^3 + 38*d*n2^3 - 6*d^2*n2^3 - 34*n1*n2^3 + 
      10*d*n1*n2^3 - 4*n1^2*n2^3 - 8*n2^4 + 4*d*n2^4 - 4*n1*n2^4 + 32*n5 - 
      40*d*n5 + 16*d^2*n5 - 2*d^3*n5 + 16*n1*n5 - 12*d*n1*n5 + 2*d^2*n1*n5 + 
      32*n2*n5 - 44*d*n2*n5 + 18*d^2*n2*n5 - 2*d^3*n2*n5 + 16*n1*n2*n5 - 
      14*d*n1*n2*n5 + 2*d^2*n1*n2*n5 - 8*n2^2*n5 + 2*d^2*n2^2*n5 - 
      4*n1*n2^2*n5 - 2*d*n1*n2^2*n5 - 8*n2^3*n5 + 4*d*n2^3*n5 - 4*n1*n2^3*n5)*
     j[p4, n1, 2 + n2, -1, 0, n5, 1, 1, 0, 0, 0, 1, 0, 1, 1])/
    ((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 
      354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 
      2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
      132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
      568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
      44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
      60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
      4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
      22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
      24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
      8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((-1172 + 1594*d - 800*d^2 + 175*d^3 - 14*d^4 - 120*n1 + 90*d*n1 - 
      17*d^2*n1 + 8*n1^2 - 8*d*n1^2 + 2*d^2*n1^2 - 2152*n2 + 2634*d*n2 - 
      1164*d^2*n2 + 217*d^3*n2 - 14*d^4*n2 - 280*n1*n2 + 192*d*n1*n2 - 
      33*d^2*n1*n2 + 8*n1^2*n2 - 8*d*n1^2*n2 + 2*d^2*n1^2*n2 - 1232*n2^2 + 
      1226*d*n2^2 - 398*d^2*n2^2 + 42*d^3*n2^2 - 208*n1*n2^2 + 
      118*d*n1*n2^2 - 16*d^2*n1*n2^2 - 272*n2^3 + 194*d*n2^3 - 34*d^2*n2^3 - 
      52*n1*n2^3 + 16*d*n1*n2^3 - 20*n2^4 + 8*d*n2^4 - 4*n1*n2^4 - 720*n5 + 
      728*d*n5 - 241*d^2*n5 + 26*d^3*n5 - 22*n1*n5 + 3*d*n1*n5 + 
      2*d^2*n1*n5 + 4*n1^2*n5 - 2*d*n1^2*n5 - 1108*n2*n5 + 1002*d*n2*n5 - 
      289*d^2*n2*n5 + 26*d^3*n2*n5 - 60*n1*n2*n5 + 15*d*n1*n2*n5 + 
      2*d^2*n1*n2*n5 + 4*n1^2*n2*n5 - 2*d*n1^2*n2*n5 - 436*n2^2*n5 + 
      292*d*n2^2*n5 - 48*d^2*n2^2*n5 - 44*n1*n2^2*n5 + 12*d*n1*n2^2*n5 - 
      48*n2^3*n5 + 18*d*n2^3*n5 - 6*n1*n2^3*n5 - 148*n5^2 + 98*d*n5^2 - 
      16*d^2*n5^2 + 4*n1*n5^2 - 2*d*n1*n5^2 - 188*n2*n5^2 + 112*d*n2*n5^2 - 
      16*d^2*n2*n5^2 + 2*n1*n2*n5^2 - 2*d*n1*n2*n5^2 - 40*n2^2*n5^2 + 
      14*d*n2^2*n5^2 - 2*n1*n2^2*n5^2 - 12*n5^3 + 4*d*n5^3 - 12*n2*n5^3 + 
      4*d*n2*n5^3)*j[p4, n1, 2 + n2, 0, 0, -1 + n5, 1, 0, 1, 0, 0, 1, 0, 1, 
      1])/((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 
      312*n1 + 354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 
      6*d^2*n1^2 + 2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
      132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
      568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
      44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
      60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
      4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
      22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
      24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
      8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((884 - 1186*d + 588*d^2 - 127*d^3 + 10*d^4 - 24*n1 + 42*d*n1 - 
      23*d^2*n1 + 4*d^3*n1 - 8*n1^2 + 8*d*n1^2 - 2*d^2*n1^2 + 1528*n2 - 
      1850*d*n2 + 816*d^2*n2 - 153*d^3*n2 + 10*d^4*n2 - 32*n1*n2 + 
      44*d*n1*n2 - 23*d^2*n1*n2 + 4*d^3*n1*n2 - 8*n1^2*n2 + 8*d*n1^2*n2 - 
      2*d^2*n1^2*n2 + 768*n2^2 - 746*d*n2^2 + 242*d^2*n2^2 - 26*d^3*n2^2 - 
      24*n1*n2^2 + 6*d*n1*n2^2 + 128*n2^3 - 82*d*n2^3 + 14*d^2*n2^3 - 
      20*n1*n2^3 + 4*d*n1*n2^3 + 4*n2^4 - 4*n1*n2^4 + 624*n5 - 624*d*n5 + 
      205*d^2*n5 - 22*d^3*n5 - 26*n1*n5 + 25*d*n1*n5 - 6*d^2*n1*n5 - 
      4*n1^2*n5 + 2*d*n1^2*n5 + 932*n2*n5 - 834*d*n2*n5 + 241*d^2*n2*n5 - 
      22*d^3*n2*n5 - 28*n1*n2*n5 + 25*d*n1*n2*n5 - 6*d^2*n1*n2*n5 - 
      4*n1^2*n2*n5 + 2*d*n1^2*n2*n5 + 340*n2^2*n5 - 220*d*n2^2*n5 + 
      36*d^2*n2^2*n5 - 4*n1*n2^2*n5 + 32*n2^3*n5 - 10*d*n2^3*n5 - 
      2*n1*n2^3*n5 + 148*n5^2 - 98*d*n5^2 + 16*d^2*n5^2 - 4*n1*n5^2 + 
      2*d*n1*n5^2 + 188*n2*n5^2 - 112*d*n2*n5^2 + 16*d^2*n2*n5^2 - 
      2*n1*n2*n5^2 + 2*d*n1*n2*n5^2 + 40*n2^2*n5^2 - 14*d*n2^2*n5^2 + 
      2*n1*n2^2*n5^2 + 12*n5^3 - 4*d*n5^3 + 12*n2*n5^3 - 4*d*n2*n5^3)*
     j[p4, n1, 2 + n2, 0, 0, -1 + n5, 1, 1, 0, 0, 0, 1, 0, 1, 1])/
    ((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 
      354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 
      2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
      132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
      568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
      44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
      60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
      4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
      22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
      24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
      8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((96 - 104*d + 36*d^2 - 4*d^3 + 48*n1 - 28*d*n1 + 4*d^2*n1 + 176*n2 - 
      168*d*n2 + 48*d^2*n2 - 4*d^3*n2 + 88*n1*n2 - 40*d*n1*n2 + 4*d^2*n1*n2 + 
      96*n2^2 - 72*d*n2^2 + 12*d^2*n2^2 + 48*n1*n2^2 - 12*d*n1*n2^2 + 
      16*n2^3 - 8*d*n2^3 + 8*n1*n2^3 + 32*n5 - 24*d*n5 + 4*d^2*n5 + 
      16*n1*n5 - 4*d*n1*n5 + 48*n2*n5 - 32*d*n2*n5 + 4*d^2*n2*n5 + 
      24*n1*n2*n5 - 4*d*n1*n2*n5 + 16*n2^2*n5 - 8*d*n2^2*n5 + 8*n1*n2^2*n5)*
     j[p4, n1, 2 + n2, 0, 0, -1 + n5, 1, 1, 1, 0, 0, 1, 0, 0, 1])/
    (2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 354*d*n1 - 
     137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 2456*n2 - 
     2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 132*d*n1*n2 - 
     24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 568*d*n2^2 + 
     92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 44*d*n2^3 - 
     4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 60*d^3*n5 - 
     164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 4*d*n1^2*n5 + 
     1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 22*d*n1*n2*n5 + 
     312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 24*n2^3*n5 + 472*n5^2 - 
     296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 8*d*n1*n5^2 + 216*n2*n5^2 - 
     68*d*n2*n5^2 - 4*n1*n2*n5^2 + 24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 
     8*n2*n5^3) + ((1344 - 1744*d + 840*d^2 - 178*d^3 + 14*d^4 + 72*n1 - 
      66*d*n1 + 20*d^2*n1 - 2*d^3*n1 + 2992*n2 - 3380*d*n2 + 1376*d^2*n2 - 
      236*d^3*n2 + 14*d^4*n2 + 156*n1*n2 - 118*d*n1*n2 + 28*d^2*n1*n2 - 
      2*d^3*n1*n2 + 2360*n2^2 - 2116*d*n2^2 + 616*d^2*n2^2 - 58*d^3*n2^2 + 
      116*n1*n2^2 - 62*d*n1*n2^2 + 8*d^2*n1*n2^2 + 840*n2^3 - 524*d*n2^3 + 
      80*d^2*n2^3 + 36*n1*n2^3 - 10*d*n1*n2^3 + 136*n2^4 - 44*d*n2^4 + 
      4*n1*n2^4 + 8*n2^5 + 928*n5 - 880*d*n5 + 274*d^2*n5 - 28*d^3*n5 + 
      24*n1*n5 - 14*d*n1*n5 + 2*d^2*n1*n5 + 1824*n2*n5 - 1464*d*n2*n5 + 
      368*d^2*n2*n5 - 28*d^3*n2*n5 + 44*n1*n2*n5 - 20*d*n1*n2*n5 + 
      2*d^2*n1*n2*n5 + 1160*n2^2*n5 - 672*d*n2^2*n5 + 94*d^2*n2^2*n5 + 
      24*n1*n2^2*n5 - 6*d*n1*n2^2*n5 + 288*n2^3*n5 - 88*d*n2^3*n5 + 
      4*n1*n2^3*n5 + 24*n2^4*n5 + 208*n5^2 - 124*d*n5^2 + 18*d^2*n5^2 + 
      360*n2*n5^2 - 172*d*n2*n5^2 + 18*d^2*n2*n5^2 + 176*n2^2*n5^2 - 
      48*d*n2^2*n5^2 + 24*n2^3*n5^2 + 16*n5^3 - 4*d*n5^3 + 24*n2*n5^3 - 
      4*d*n2*n5^3 + 8*n2^2*n5^3)*j[p4, n1, 2 + n2, 0, 0, n5, 0, 1, 1, 0, -1, 
      1, 0, 1, 1])/((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 
      24*d^4 - 312*n1 + 354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 
      28*d*n1^2 - 6*d^2*n1^2 + 2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 
      188*n1*n2 + 132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 
      872*n2^2 - 568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 
      136*n2^3 - 44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 
      578*d^2*n5 - 60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 
      8*n1^2*n5 + 4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 
      68*n1*n2*n5 + 22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 
      8*n1*n2^2*n5 + 24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 
      24*n1*n5^2 + 8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((-48 + 52*d - 18*d^2 + 2*d^3 - 24*n1 + 14*d*n1 - 2*d^2*n1 - 88*n2 + 
      84*d*n2 - 24*d^2*n2 + 2*d^3*n2 - 44*n1*n2 + 20*d*n1*n2 - 2*d^2*n1*n2 - 
      48*n2^2 + 36*d*n2^2 - 6*d^2*n2^2 - 24*n1*n2^2 + 6*d*n1*n2^2 - 8*n2^3 + 
      4*d*n2^3 - 4*n1*n2^3 - 16*n5 + 12*d*n5 - 2*d^2*n5 - 8*n1*n5 + 
      2*d*n1*n5 - 24*n2*n5 + 16*d*n2*n5 - 2*d^2*n2*n5 - 12*n1*n2*n5 + 
      2*d*n1*n2*n5 - 8*n2^2*n5 + 4*d*n2^2*n5 - 4*n1*n2^2*n5)*
     j[p4, n1, 2 + n2, 0, 0, n5, 0, 1, 1, 0, 0, 1, -1, 1, 1])/
    (2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 354*d*n1 - 
     137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 2456*n2 - 
     2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 132*d*n1*n2 - 
     24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 568*d*n2^2 + 
     92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 44*d*n2^3 - 
     4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 60*d^3*n5 - 
     164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 4*d*n1^2*n5 + 
     1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 22*d*n1*n2*n5 + 
     312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 24*n2^3*n5 + 472*n5^2 - 
     296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 8*d*n1*n5^2 + 216*n2*n5^2 - 
     68*d*n2*n5^2 - 4*n1*n2*n5^2 + 24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 
     8*n2*n5^3) + ((-48 + 52*d - 18*d^2 + 2*d^3 - 24*n1 + 14*d*n1 - 
      2*d^2*n1 - 88*n2 + 84*d*n2 - 24*d^2*n2 + 2*d^3*n2 - 44*n1*n2 + 
      20*d*n1*n2 - 2*d^2*n1*n2 - 48*n2^2 + 36*d*n2^2 - 6*d^2*n2^2 - 
      24*n1*n2^2 + 6*d*n1*n2^2 - 8*n2^3 + 4*d*n2^3 - 4*n1*n2^3 - 16*n5 + 
      12*d*n5 - 2*d^2*n5 - 8*n1*n5 + 2*d*n1*n5 - 24*n2*n5 + 16*d*n2*n5 - 
      2*d^2*n2*n5 - 12*n1*n2*n5 + 2*d*n1*n2*n5 - 8*n2^2*n5 + 4*d*n2^2*n5 - 
      4*n1*n2^2*n5)*j[p4, n1, 2 + n2, 0, 0, n5, 1, 0, 1, 0, -1, 1, 0, 1, 1])/
    (2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 354*d*n1 - 
     137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 2456*n2 - 
     2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 132*d*n1*n2 - 
     24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 568*d*n2^2 + 
     92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 44*d*n2^3 - 
     4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 60*d^3*n5 - 
     164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 4*d*n1^2*n5 + 
     1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 22*d*n1*n2*n5 + 
     312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 24*n2^3*n5 + 472*n5^2 - 
     296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 8*d*n1*n5^2 + 216*n2*n5^2 - 
     68*d*n2*n5^2 - 4*n1*n2*n5^2 + 24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 
     8*n2*n5^3) + ((-56 + 106*d - 71*d^2 + 20*d^3 - 2*d^4 - 12*n1 + 27*d*n1 - 
      14*d^2*n1 + 2*d^3*n1 + 8*n1^2 - 2*d*n1^2 - 28*n2 + 94*d*n2 - 
      76*d^2*n2 + 22*d^3*n2 - 2*d^4*n2 + 26*n1*n2 + 12*d*n1*n2 - 
      14*d^2*n1*n2 + 2*d^3*n1*n2 + 20*n1^2*n2 - 4*d*n1^2*n2 + 72*n2^2 - 
      46*d*n2^2 + d^2*n2^2 + 2*d^3*n2^2 + 68*n1*n2^2 - 25*d*n1*n2^2 + 
      16*n1^2*n2^2 - 2*d*n1^2*n2^2 + 52*n2^3 - 38*d*n2^3 + 6*d^2*n2^3 + 
      34*n1*n2^3 - 10*d*n1*n2^3 + 4*n1^2*n2^3 + 8*n2^4 - 4*d*n2^4 + 
      4*n1*n2^4 - 32*n5 + 40*d*n5 - 16*d^2*n5 + 2*d^3*n5 - 16*n1*n5 + 
      12*d*n1*n5 - 2*d^2*n1*n5 - 32*n2*n5 + 44*d*n2*n5 - 18*d^2*n2*n5 + 
      2*d^3*n2*n5 - 16*n1*n2*n5 + 14*d*n1*n2*n5 - 2*d^2*n1*n2*n5 + 
      8*n2^2*n5 - 2*d^2*n2^2*n5 + 4*n1*n2^2*n5 + 2*d*n1*n2^2*n5 + 8*n2^3*n5 - 
      4*d*n2^3*n5 + 4*n1*n2^3*n5)*j[p4, n1, 2 + n2, 0, 0, n5, 1, 0, 1, 0, 0, 
      1, -1, 1, 1])/((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 
      24*d^4 - 312*n1 + 354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 
      28*d*n1^2 - 6*d^2*n1^2 + 2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 
      188*n1*n2 + 132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 
      872*n2^2 - 568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 
      136*n2^3 - 44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 
      578*d^2*n5 - 60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 
      8*n1^2*n5 + 4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 
      68*n1*n2*n5 + 22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 
      8*n1*n2^2*n5 + 24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 
      24*n1*n5^2 + 8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((48 - 52*d + 18*d^2 - 2*d^3 + 24*n1 - 14*d*n1 + 2*d^2*n1 + 88*n2 - 
      84*d*n2 + 24*d^2*n2 - 2*d^3*n2 + 44*n1*n2 - 20*d*n1*n2 + 2*d^2*n1*n2 + 
      48*n2^2 - 36*d*n2^2 + 6*d^2*n2^2 + 24*n1*n2^2 - 6*d*n1*n2^2 + 8*n2^3 - 
      4*d*n2^3 + 4*n1*n2^3 + 16*n5 - 12*d*n5 + 2*d^2*n5 + 8*n1*n5 - 
      2*d*n1*n5 + 24*n2*n5 - 16*d*n2*n5 + 2*d^2*n2*n5 + 12*n1*n2*n5 - 
      2*d*n1*n2*n5 + 8*n2^2*n5 - 4*d*n2^2*n5 + 4*n1*n2^2*n5)*
     j[p4, n1, 2 + n2, 0, 0, n5, 1, 1, 0, 0, -1, 1, 0, 1, 1])/
    (2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 354*d*n1 - 
     137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 2456*n2 - 
     2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 132*d*n1*n2 - 
     24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 568*d*n2^2 + 
     92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 44*d*n2^3 - 
     4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 60*d^3*n5 - 
     164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 4*d*n1^2*n5 + 
     1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 22*d*n1*n2*n5 + 
     312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 24*n2^3*n5 + 472*n5^2 - 
     296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 8*d*n1*n5^2 + 216*n2*n5^2 - 
     68*d*n2*n5^2 - 4*n1*n2*n5^2 + 24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 
     8*n2*n5^3) + ((56 - 106*d + 71*d^2 - 20*d^3 + 2*d^4 + 12*n1 - 27*d*n1 + 
      14*d^2*n1 - 2*d^3*n1 - 8*n1^2 + 2*d*n1^2 + 28*n2 - 94*d*n2 + 
      76*d^2*n2 - 22*d^3*n2 + 2*d^4*n2 - 26*n1*n2 - 12*d*n1*n2 + 
      14*d^2*n1*n2 - 2*d^3*n1*n2 - 20*n1^2*n2 + 4*d*n1^2*n2 - 72*n2^2 + 
      46*d*n2^2 - d^2*n2^2 - 2*d^3*n2^2 - 68*n1*n2^2 + 25*d*n1*n2^2 - 
      16*n1^2*n2^2 + 2*d*n1^2*n2^2 - 52*n2^3 + 38*d*n2^3 - 6*d^2*n2^3 - 
      34*n1*n2^3 + 10*d*n1*n2^3 - 4*n1^2*n2^3 - 8*n2^4 + 4*d*n2^4 - 
      4*n1*n2^4 + 32*n5 - 40*d*n5 + 16*d^2*n5 - 2*d^3*n5 + 16*n1*n5 - 
      12*d*n1*n5 + 2*d^2*n1*n5 + 32*n2*n5 - 44*d*n2*n5 + 18*d^2*n2*n5 - 
      2*d^3*n2*n5 + 16*n1*n2*n5 - 14*d*n1*n2*n5 + 2*d^2*n1*n2*n5 - 
      8*n2^2*n5 + 2*d^2*n2^2*n5 - 4*n1*n2^2*n5 - 2*d*n1*n2^2*n5 - 8*n2^3*n5 + 
      4*d*n2^3*n5 - 4*n1*n2^3*n5)*j[p4, n1, 2 + n2, 0, 0, n5, 1, 1, 0, 0, 0, 
      1, -1, 1, 1])/((-3 + d - n2)*(2504 - 3220*d + 1530*d^2 - 317*d^3 + 
      24*d^4 - 312*n1 + 354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 
      28*d*n1^2 - 6*d^2*n1^2 + 2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 
      188*n1*n2 + 132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 
      872*n2^2 - 568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 
      136*n2^3 - 44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 
      578*d^2*n5 - 60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 
      8*n1^2*n5 + 4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 
      68*n1*n2*n5 + 22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 
      8*n1*n2^2*n5 + 24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 
      24*n1*n5^2 + 8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 
      24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3)) + 
   ((-48*n1 + 52*d*n1 - 18*d^2*n1 + 2*d^3*n1 - 24*n1^2 + 14*d*n1^2 - 
      2*d^2*n1^2 - 40*n1*n2 + 32*d*n1*n2 - 6*d^2*n1*n2 - 20*n1^2*n2 + 
      6*d*n1^2*n2 - 8*n1*n2^2 + 4*d*n1*n2^2 - 4*n1^2*n2^2 - 16*n1*n5 + 
      12*d*n1*n5 - 2*d^2*n1*n5 - 8*n1^2*n5 + 2*d*n1^2*n5 - 8*n1*n2*n5 + 
      4*d*n1*n2*n5 - 4*n1^2*n2*n5)*j[p4, 1 + n1, n2, 0, 0, n5, 1, 1, 1, 0, 0, 
      1, 0, 0, 1])/(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 312*n1 + 
     354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 
     2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 132*d*n1*n2 - 
     24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 568*d*n2^2 + 
     92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 44*d*n2^3 - 
     4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 60*d^3*n5 - 
     164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 4*d*n1^2*n5 + 
     1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 22*d*n1*n2*n5 + 
     312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 24*n2^3*n5 + 472*n5^2 - 
     296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 8*d*n1*n5^2 + 216*n2*n5^2 - 
     68*d*n2*n5^2 - 4*n1*n2*n5^2 + 24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 
     8*n2*n5^3) + ((48*n1 - 52*d*n1 + 18*d^2*n1 - 2*d^3*n1 + 24*n1^2 - 
      14*d*n1^2 + 2*d^2*n1^2 + 40*n1*n2 - 32*d*n1*n2 + 6*d^2*n1*n2 + 
      20*n1^2*n2 - 6*d*n1^2*n2 + 8*n1*n2^2 - 4*d*n1*n2^2 + 4*n1^2*n2^2 + 
      16*n1*n5 - 12*d*n1*n5 + 2*d^2*n1*n5 + 8*n1^2*n5 - 2*d*n1^2*n5 + 
      8*n1*n2*n5 - 4*d*n1*n2*n5 + 4*n1^2*n2*n5)*j[p4, 1 + n1, 1 + n2, 0, 0, 
      -1 + n5, 1, 1, 1, 0, 0, 1, 0, 0, 1])/(2504 - 3220*d + 1530*d^2 - 
     317*d^3 + 24*d^4 - 312*n1 + 354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 
     32*n1^2 + 28*d*n1^2 - 6*d^2*n1^2 + 2456*n2 - 2396*d*n2 + 772*d^2*n2 - 
     82*d^3*n2 - 188*n1*n2 + 132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 
     4*d*n1^2*n2 + 872*n2^2 - 568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 
     14*d*n1*n2^2 + 136*n2^3 - 44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 
     1828*d*n5 + 578*d^2*n5 - 60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 
     22*d^2*n1*n5 - 8*n1^2*n5 + 4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 
     138*d^2*n2*n5 - 68*n1*n2*n5 + 22*d*n1*n2*n5 + 312*n2^2*n5 - 
     100*d*n2^2*n5 - 8*n1*n2^2*n5 + 24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 
     46*d^2*n5^2 - 24*n1*n5^2 + 8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 
     4*n1*n2*n5^2 + 24*n2^2*n5^2 + 40*n5^3 - 12*d*n5^3 + 8*n2*n5^3) + 
   ((48*n1 - 52*d*n1 + 18*d^2*n1 - 2*d^3*n1 + 24*n1^2 - 14*d*n1^2 + 
      2*d^2*n1^2 + 40*n1*n2 - 32*d*n1*n2 + 6*d^2*n1*n2 + 20*n1^2*n2 - 
      6*d*n1^2*n2 + 8*n1*n2^2 - 4*d*n1*n2^2 + 4*n1^2*n2^2 + 16*n1*n5 - 
      12*d*n1*n5 + 2*d^2*n1*n5 + 8*n1^2*n5 - 2*d*n1^2*n5 + 8*n1*n2*n5 - 
      4*d*n1*n2*n5 + 4*n1^2*n2*n5)*j[p4, 1 + n1, 1 + n2, 0, 0, n5, 1, 1, 0, 
      0, 0, 1, 0, 1, 1])/(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 
     312*n1 + 354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 
     6*d^2*n1^2 + 2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
     132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
     568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
     44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
     60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
     4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
     22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
     24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
     8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 24*n2^2*n5^2 + 
     40*n5^3 - 12*d*n5^3 + 8*n2*n5^3) + 
   ((-48*n1 + 52*d*n1 - 18*d^2*n1 + 2*d^3*n1 - 24*n1^2 + 14*d*n1^2 - 
      2*d^2*n1^2 - 40*n1*n2 + 32*d*n1*n2 - 6*d^2*n1*n2 - 20*n1^2*n2 + 
      6*d*n1^2*n2 - 8*n1*n2^2 + 4*d*n1*n2^2 - 4*n1^2*n2^2 - 16*n1*n5 + 
      12*d*n1*n5 - 2*d^2*n1*n5 - 8*n1^2*n5 + 2*d*n1^2*n5 - 8*n1*n2*n5 + 
      4*d*n1*n2*n5 - 4*n1^2*n2*n5)*j[p4, 1 + n1, 1 + n2, 0, 0, n5, 1, 1, 1, 
      -1, 0, 1, 0, 0, 1])/(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 
     312*n1 + 354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 
     6*d^2*n1^2 + 2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
     132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
     568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
     44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
     60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
     4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
     22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
     24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
     8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 24*n2^2*n5^2 + 
     40*n5^3 - 12*d*n5^3 + 8*n2*n5^3) + 
   ((48*n1 - 52*d*n1 + 18*d^2*n1 - 2*d^3*n1 + 24*n1^2 - 14*d*n1^2 + 
      2*d^2*n1^2 + 40*n1*n2 - 32*d*n1*n2 + 6*d^2*n1*n2 + 20*n1^2*n2 - 
      6*d*n1^2*n2 + 8*n1*n2^2 - 4*d*n1*n2^2 + 4*n1^2*n2^2 + 16*n1*n5 - 
      12*d*n1*n5 + 2*d^2*n1*n5 + 8*n1^2*n5 - 2*d*n1^2*n5 + 8*n1*n2*n5 - 
      4*d*n1*n2*n5 + 4*n1^2*n2*n5)*j[p4, 1 + n1, 1 + n2, 0, 0, n5, 1, 1, 1, 
      0, -1, 1, 0, 0, 1])/(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 
     312*n1 + 354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 
     6*d^2*n1^2 + 2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
     132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
     568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
     44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
     60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
     4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
     22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
     24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
     8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 24*n2^2*n5^2 + 
     40*n5^3 - 12*d*n5^3 + 8*n2*n5^3) + 
   ((-48*n1 + 52*d*n1 - 18*d^2*n1 + 2*d^3*n1 - 24*n1^2 + 14*d*n1^2 - 
      2*d^2*n1^2 - 40*n1*n2 + 32*d*n1*n2 - 6*d^2*n1*n2 - 20*n1^2*n2 + 
      6*d*n1^2*n2 - 8*n1*n2^2 + 4*d*n1*n2^2 - 4*n1^2*n2^2 - 16*n1*n5 + 
      12*d*n1*n5 - 2*d^2*n1*n5 - 8*n1^2*n5 + 2*d*n1^2*n5 - 8*n1*n2*n5 + 
      4*d*n1*n2*n5 - 4*n1^2*n2*n5)*j[p4, 1 + n1, 1 + n2, 0, 0, n5, 1, 1, 1, 
      0, 0, 0, 0, 1, 1])/(2504 - 3220*d + 1530*d^2 - 317*d^3 + 24*d^4 - 
     312*n1 + 354*d*n1 - 137*d^2*n1 + 18*d^3*n1 - 32*n1^2 + 28*d*n1^2 - 
     6*d^2*n1^2 + 2456*n2 - 2396*d*n2 + 772*d^2*n2 - 82*d^3*n2 - 188*n1*n2 + 
     132*d*n1*n2 - 24*d^2*n1*n2 - 8*n1^2*n2 + 4*d*n1^2*n2 + 872*n2^2 - 
     568*d*n2^2 + 92*d^2*n2^2 - 44*n1*n2^2 + 14*d*n1*n2^2 + 136*n2^3 - 
     44*d*n2^3 - 4*n1*n2^3 + 8*n2^4 + 1904*n5 - 1828*d*n5 + 578*d^2*n5 - 
     60*d^3*n5 - 164*n1*n5 + 118*d*n1*n5 - 22*d^2*n1*n5 - 8*n1^2*n5 + 
     4*d*n1^2*n5 + 1344*n2*n5 - 864*d*n2*n5 + 138*d^2*n2*n5 - 68*n1*n2*n5 + 
     22*d*n1*n2*n5 + 312*n2^2*n5 - 100*d*n2^2*n5 - 8*n1*n2^2*n5 + 
     24*n2^3*n5 + 472*n5^2 - 296*d*n5^2 + 46*d^2*n5^2 - 24*n1*n5^2 + 
     8*d*n1*n5^2 + 216*n2*n5^2 - 68*d*n2*n5^2 - 4*n1*n2*n5^2 + 24*n2^2*n5^2 + 
     40*n5^3 - 12*d*n5^3 + 8*n2*n5^3), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n2 == 0 && n3 == 0 && n4 == 0 && n6 == 1 && n7 == 1 && n9 == 0 && 
    n8 != 1 -> ((-d + 2*n8)*j[p4, 0, -1, 0, 0, 1 + n5, 1, 1, n8, 0, 0, 1, 0, 
      0, 2])/(4*(-3 + d - n5)*(-2 + d - n5 - n8)) + 
   ((-4*n8 + d*n8 - 2*n5*n8)*j[p4, 0, -1, 0, 0, 1 + n5, 1, 1, 1 + n8, 0, 0, 
      1, 0, 0, 1])/(4*(-3 + d - n5)*(-2 + d - n5 - n8)) + 
   ((-4 + d - 2*n5)*j[p4, 0, -1, 0, 0, 1 + n5, 1, 2, n8, 0, 0, 1, 0, 0, 1])/
    (2*(-8 + 3*d - 2*n5)*(-2 + d - n5 - n8)) + 
   ((-24 + 22*d - 5*d^2 - 20*n5 + 8*d*n5 - 4*n5^2 - 16*n8 + 6*d*n8 - 4*n5*n8)*
     j[p4, 0, -1, 0, 0, 1 + n5, 2, 0, n8, 0, 0, 1, 0, 1, 1])/
    (4*(-8 + 3*d - 2*n5)*(-3 + d - n5)*(-2 + d - n5 - n8)) + 
   ((-24 + 22*d - 5*d^2 - 20*n5 + 8*d*n5 - 4*n5^2 - 16*n8 + 6*d*n8 - 4*n5*n8)*
     j[p4, 0, -1, 0, 0, 1 + n5, 2, 1, n8, 0, 0, 1, 0, 0, 1])/
    (4*(-8 + 3*d - 2*n5)*(-3 + d - n5)*(-2 + d - n5 - n8)) + 
   ((-24 + 22*d - 5*d^2 - 20*n5 + 8*d*n5 - 4*n5^2 - 16*n8 + 6*d*n8 - 4*n5*n8)*
     j[p4, 0, -1, 0, 0, 1 + n5, 2, 1, n8, 0, 0, 1, 0, 1, 0])/
    (4*(-8 + 3*d - 2*n5)*(-3 + d - n5)*(-2 + d - n5 - n8)) + 
   ((4 - d + 6*n5 - d*n5 + 2*n5^2)*j[p4, 0, -1, 0, 0, 2 + n5, 1, 0, n8, 0, 0, 
      1, 0, 1, 1])/(4*(-3 + d - n5)*(-2 + d - n5 - n8)) + 
   ((40 - 28*d + 5*d^2 + 72*n5 - 39*d*n5 + 5*d^2*n5 + 38*n5^2 - 11*d*n5^2 + 
      6*n5^3 + 8*n8 - 3*d*n8 + 10*n5*n8 - 3*d*n5*n8 + 2*n5^2*n8)*
     j[p4, 0, -1, 0, 0, 2 + n5, 1, 1, n8, 0, 0, 1, 0, 0, 1])/
    (2*(-8 + 3*d - 2*n5)*(-3 + d - n5)*(-2 + d - n5 - n8)) + 
   ((-40 + 28*d - 5*d^2 - 72*n5 + 39*d*n5 - 5*d^2*n5 - 38*n5^2 + 11*d*n5^2 - 
      6*n5^3 - 8*n8 + 3*d*n8 - 10*n5*n8 + 3*d*n5*n8 - 2*n5^2*n8)*
     j[p4, 0, -1, 0, 0, 2 + n5, 1, 1, n8, 0, 0, 1, 0, 1, 0])/
    (2*(-8 + 3*d - 2*n5)*(-3 + d - n5)*(-2 + d - n5 - n8)) + 
   ((4 - d + 2*n5)*j[p4, 0, 0, -1, 0, 1 + n5, 0, 1, n8, 0, 0, 1, 0, 1, 2])/
    (4*(-3 + d - n5)*(-2 + d - n5 - n8)) + 
   ((4 - d + 2*n5)*j[p4, 0, 0, -1, 0, 1 + n5, 1, 0, n8, 0, 0, 1, 0, 1, 2])/
    (4*(-3 + d - n5)*(-2 + d - n5 - n8)) - 
   j[p4, 0, 0, -1, 0, 1 + n5, 1, 1, n8, 0, 0, 1, 0, 0, 2]/(2*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, 0, 0, -1, 1 + n5, 0, 1, n8, 0, 0, 1, 0, 1, 2])/
    (4*(-3 + d - n5)*(-2 + d - n5 - n8)) + 
   ((-4 + d - 2*n5)*j[p4, 0, 0, 0, -1, 1 + n5, 1, 0, n8, 0, 0, 1, 0, 1, 2])/
    (4*(-3 + d - n5)*(-2 + d - n5 - n8)) + 
   ((-4 + d - 2*n5)*j[p4, 0, 0, 0, -1, 1 + n5, 1, 1, n8, 0, 0, 1, 0, 0, 2])/
    (4*(-3 + d - n5)*(-2 + d - n5 - n8)) + 
   ((-4 + d - 2*n5)*j[p4, 0, 0, 0, -1, 1 + n5, 1, 2, n8, 0, 0, 1, 0, 0, 1])/
    (2*(-8 + 3*d - 2*n5)*(-2 + d - n5 - n8)) + 
   ((8 - 6*d + d^2 + 4*n5 - 2*d*n5)*j[p4, 0, 0, 0, -1, 1 + n5, 2, 0, n8, 0, 
      0, 1, 0, 1, 1])/(4*(-8 + 3*d - 2*n5)*(-3 + d - n5)*
     (-2 + d - n5 - n8)) + ((8 - 6*d + d^2 + 4*n5 - 2*d*n5)*
     j[p4, 0, 0, 0, -1, 1 + n5, 2, 1, n8, 0, 0, 1, 0, 0, 1])/
    (4*(-8 + 3*d - 2*n5)*(-3 + d - n5)*(-2 + d - n5 - n8)) + 
   ((8 - 6*d + d^2 + 4*n5 - 2*d*n5)*j[p4, 0, 0, 0, -1, 1 + n5, 2, 1, n8, 0, 
      0, 1, 0, 1, 0])/(4*(-8 + 3*d - 2*n5)*(-3 + d - n5)*
     (-2 + d - n5 - n8)) + ((-4 + d - 6*n5 + d*n5 - 2*n5^2)*
     j[p4, 0, 0, 0, -1, 2 + n5, 0, 1, n8, 0, 0, 1, 0, 1, 1])/
    (4*(-3 + d - n5)*(-2 + d - n5 - n8)) + 
   ((16 - 8*d + d^2 + 32*n5 - 12*d*n5 + d^2*n5 + 20*n5^2 - 4*d*n5^2 + 4*n5^3)*
     j[p4, 0, 0, 0, -1, 2 + n5, 1, 1, n8, 0, 0, 1, 0, 0, 1])/
    (4*(-8 + 3*d - 2*n5)*(-3 + d - n5)*(-2 + d - n5 - n8)) + 
   ((-16 + 8*d - d^2 - 32*n5 + 12*d*n5 - d^2*n5 - 20*n5^2 + 4*d*n5^2 - 
      4*n5^3)*j[p4, 0, 0, 0, -1, 2 + n5, 1, 1, n8, 0, 0, 1, 0, 1, 0])/
    (4*(-8 + 3*d - 2*n5)*(-3 + d - n5)*(-2 + d - n5 - n8)) + 
   ((d - 2*n8)*j[p4, 0, 0, 0, 0, n5, 0, 1, n8, 0, 0, 1, 0, 1, 2])/
    (4*(-3 + d - n5)*(-2 + d - n5 - n8)) + 
   ((d - 2*n8)*j[p4, 0, 0, 0, 0, n5, 1, 0, n8, 0, 0, 1, 0, 1, 2])/
    (4*(-3 + d - n5)*(-2 + d - n5 - n8)) + 
   ((d - 2*n8)*j[p4, 0, 0, 0, 0, n5, 1, 1, n8, 0, 0, 1, 0, 0, 2])/
    (4*(-3 + d - n5)*(-2 + d - n5 - n8)) + 
   ((4 - d + 2*n5)*j[p4, 0, 0, 0, 0, n5, 1, 2, n8, 0, 0, 1, 0, 0, 1])/
    (2*(-8 + 3*d - 2*n5)*(-2 + d - n5 - n8)) + 
   ((24 - 22*d + 5*d^2 + 20*n5 - 8*d*n5 + 4*n5^2 + 16*n8 - 6*d*n8 + 4*n5*n8)*
     j[p4, 0, 0, 0, 0, n5, 2, 0, n8, 0, 0, 1, 0, 1, 1])/
    (4*(-8 + 3*d - 2*n5)*(-3 + d - n5)*(-2 + d - n5 - n8)) + 
   ((24 - 22*d + 5*d^2 + 20*n5 - 8*d*n5 + 4*n5^2 + 16*n8 - 6*d*n8 + 4*n5*n8)*
     j[p4, 0, 0, 0, 0, n5, 2, 1, n8, 0, 0, 1, 0, 0, 1])/
    (4*(-8 + 3*d - 2*n5)*(-3 + d - n5)*(-2 + d - n5 - n8)) + 
   ((24 - 22*d + 5*d^2 + 20*n5 - 8*d*n5 + 4*n5^2 + 16*n8 - 6*d*n8 + 4*n5*n8)*
     j[p4, 0, 0, 0, 0, n5, 2, 1, n8, 0, 0, 1, 0, 1, 0])/
    (4*(-8 + 3*d - 2*n5)*(-3 + d - n5)*(-2 + d - n5 - n8)) + 
   ((4 - d + 2*n5 + d*n5 - 2*n5*n8)*j[p4, 0, 0, 0, 0, 1 + n5, 0, 1, n8, 0, 0, 
      1, 0, 1, 1])/(4*(-3 + d - n5)*(-2 + d - n5 - n8)) + 
   ((4 - d + 2*n5)*j[p4, 0, 0, 0, 0, 1 + n5, 1, 0, -1 + n8, 0, 0, 1, 0, 2, 
      1])/(4*(-3 + d - n5)*(-2 + d - n5 - n8)) + 
   ((-4 + d - 2*n5)*j[p4, 0, 0, 0, 0, 1 + n5, 1, 0, n8, 0, 0, 1, -1, 2, 1])/
    (4*(-3 + d - n5)*(-2 + d - n5 - n8)) + 
   ((16 - 8*d + d^2 + 16*n5 - 4*d*n5 + 4*n5^2 + 32*n8 - 20*d*n8 + 3*d^2*n8 + 
      24*n5*n8 - 8*d*n5*n8 + 4*n5^2*n8)*j[p4, 0, 0, 0, 0, 1 + n5, 1, 0, n8, 
      0, 0, 1, 0, 1, 1])/(4*(-8 + 3*d - 2*n5)*(-3 + d - n5)*
     (-2 + d - n5 - n8)) + ((4*n8 - d*n8 + 2*n5*n8)*
     j[p4, 0, 0, 0, 0, 1 + n5, 1, 0, 1 + n8, 0, 0, 1, -1, 1, 1])/
    (4*(-3 + d - n5)*(-2 + d - n5 - n8)) + 
   ((d - 2*n8)*j[p4, 0, 0, 0, 0, 1 + n5, 1, 1, -1 + n8, 0, 0, 1, 0, 0, 2])/
    (4*(-3 + d - n5)*(-2 + d - n5 - n8)) + 
   ((12 - 7*d + d^2 + 10*n5 - 3*d*n5 + 2*n5^2)*j[p4, 0, 0, 0, 0, 1 + n5, 1, 
      1, -1 + n8, 0, 0, 1, 0, 1, 1])/((-8 + 3*d - 2*n5)*(-1 + n8)) + 
   ((-d + 2*n8)*j[p4, 0, 0, 0, 0, 1 + n5, 1, 1, n8, 0, 0, 1, -1, 0, 2])/
    (4*(-3 + d - n5)*(-2 + d - n5 - n8)) + 
   ((32 - 64*d + 30*d^2 - 4*d^3 + 32*n5 - 40*d*n5 + 9*d^2*n5 + 8*n5^2 - 
      6*d*n5^2 + 32*n8 - 20*d*n8 + 3*d^2*n8 + 8*n5*n8 - 2*d*n5*n8)*
     j[p4, 0, 0, 0, 0, 1 + n5, 1, 1, n8, 0, 0, 1, 0, 0, 1])/
    (4*(-8 + 3*d - 2*n5)*(-3 + d - n5)*(-2 + d - n5 - n8)) + 
   ((16 - 8*d + d^2 + 64*n5 - 40*d*n5 + 7*d^2*n5 + 44*n5^2 - 14*d*n5^2 + 
      8*n5^3 + 16*n5*n8 - 6*d*n5*n8 + 4*n5^2*n8)*j[p4, 0, 0, 0, 0, 1 + n5, 1, 
      1, n8, 0, 0, 1, 0, 1, 0])/(4*(-8 + 3*d - 2*n5)*(-3 + d - n5)*
     (-2 + d - n5 - n8)) + ((4 - d + 2*n5)*j[p4, 0, 0, 0, 0, 1 + n5, 1, 2, 
      -1 + n8, 0, 0, 1, 0, 0, 1])/(2*(-8 + 3*d - 2*n5)*(-2 + d - n5 - n8)) + 
   ((-8 + 6*d - d^2 - 4*n5 + 2*d*n5)*j[p4, 0, 0, 0, 0, 1 + n5, 2, 0, -1 + n8, 
      0, 0, 1, 0, 1, 1])/(4*(-8 + 3*d - 2*n5)*(-3 + d - n5)*
     (-2 + d - n5 - n8)) + ((-8 + 6*d - d^2 - 4*n5 + 2*d*n5)*
     j[p4, 0, 0, 0, 0, 1 + n5, 2, 1, -1 + n8, 0, 0, 1, 0, 0, 1])/
    (4*(-8 + 3*d - 2*n5)*(-3 + d - n5)*(-2 + d - n5 - n8)) + 
   ((-8 + 6*d - d^2 - 4*n5 + 2*d*n5)*j[p4, 0, 0, 0, 0, 1 + n5, 2, 1, -1 + n8, 
      0, 0, 1, 0, 1, 0])/(4*(-8 + 3*d - 2*n5)*(-3 + d - n5)*
     (-2 + d - n5 - n8)) + ((64 - 60*d + 19*d^2 - 2*d^3 + 144*n5 - 110*d*n5 + 
      27*d^2*n5 - 2*d^3*n5 + 112*n5^2 - 60*d*n5^2 + 8*d^2*n5^2 + 36*n5^3 - 
      10*d*n5^3 + 4*n5^4 + 8*n8 - 6*d*n8 + d^2*n8 + 12*n5*n8 - 8*d*n5*n8 + 
      d^2*n5*n8 + 4*n5^2*n8 - 2*d*n5^2*n8)*j[p4, 0, 0, 0, 0, 2 + n5, 1, 1, 
      -1 + n8, 0, 0, 1, 0, 0, 1])/(2*(-8 + 3*d - 2*n5)*(-3 + d - n5)*
     (-2 + d - n5 - n8)*(-1 + n8)) + 
   ((-64 + 60*d - 19*d^2 + 2*d^3 - 144*n5 + 110*d*n5 - 27*d^2*n5 + 2*d^3*n5 - 
      112*n5^2 + 60*d*n5^2 - 8*d^2*n5^2 - 36*n5^3 + 10*d*n5^3 - 4*n5^4 - 
      8*n8 + 6*d*n8 - d^2*n8 - 12*n5*n8 + 8*d*n5*n8 - d^2*n5*n8 - 4*n5^2*n8 + 
      2*d*n5^2*n8)*j[p4, 0, 0, 0, 0, 2 + n5, 1, 1, -1 + n8, 0, 0, 1, 0, 1, 
      0])/(2*(-8 + 3*d - 2*n5)*(-3 + d - n5)*(-2 + d - n5 - n8)*(-1 + n8)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 0 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n3 == 0 && n4 == 0 && n6 == 1 && n7 == 1 && n8 == 1 && n9 == 0 && 
    n11 != 1 -> ((-8 + 4*d)*j[p4, -1, 0, 0, 0, n5, 1, 0, 1, 0, 0, n11, 0, 2, 
      1])/(16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 
     26*d*n5 + 28*n11*n5 + 8*n5^2) + 
   ((8 - 4*d)*j[p4, -1, 0, 0, 0, n5, 1, 0, 2, 0, 0, n11, 0, 1, 1])/
    (16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 26*d*n5 + 
     28*n11*n5 + 8*n5^2) + ((-12 + 5*d + 2*n11 - 4*n5)*
     j[p4, -1, 0, 0, 0, n5, 1, 1, 0, 0, 0, n11, 0, 2, 1])/
    (16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 26*d*n5 + 
     28*n11*n5 + 8*n5^2) + ((40 - 16*d + 8*n5)*j[p4, -1, 0, 0, 0, n5, 1, 1, 
      2, 0, 0, n11, 0, 0, 1])/(16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 
     4*n11^2 + 24*n5 - 26*d*n5 + 28*n11*n5 + 8*n5^2) + 
   ((12*n5 - 5*d*n5 - 2*n11*n5 + 4*n5^2)*j[p4, -1, 0, 0, 0, 1 + n5, 0, 1, 1, 
      0, 0, n11, 0, 1, 1])/(16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 
     4*n11^2 + 24*n5 - 26*d*n5 + 28*n11*n5 + 8*n5^2) + 
   ((4*n5 - d*n5 - 2*n11*n5 + 4*n5^2)*j[p4, -1, 0, 0, 0, 1 + n5, 1, 0, 1, 0, 
      0, n11, 0, 1, 1])/(16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 
     24*n5 - 26*d*n5 + 28*n11*n5 + 8*n5^2) + 
   ((40*n5 - 16*d*n5 + 8*n5^2)*j[p4, -1, 0, 0, 0, 1 + n5, 1, 1, 1, 0, 0, n11, 
      0, 0, 1])/(16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 
     26*d*n5 + 28*n11*n5 + 8*n5^2) + 
   ((-40*n5 + 16*d*n5 - 8*n5^2)*j[p4, -1, 0, 0, 0, 1 + n5, 1, 1, 1, 0, 0, 
      n11, 0, 1, 0])/(16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 
     24*n5 - 26*d*n5 + 28*n11*n5 + 8*n5^2) + 
   ((2*d - 4*n11)*j[p4, 0, -1, 0, 0, n5, 1, 1, 2, 0, 0, n11, 0, 0, 1])/
    (16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 26*d*n5 + 
     28*n11*n5 + 8*n5^2) + ((4 - d - 2*n11 + 4*n5)*j[p4, 0, -1, 0, 0, n5, 1, 
      2, 1, 0, 0, n11, 0, 0, 1])/(16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 
     4*n11^2 + 24*n5 - 26*d*n5 + 28*n11*n5 + 8*n5^2) + 
   ((56 - 26*d + 4*n11 + 16*n5)*j[p4, 0, -1, 0, 0, n5, 2, 0, 1, 0, 0, n11, 0, 
      1, 1])/(16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 
     26*d*n5 + 28*n11*n5 + 8*n5^2) + 
   ((12 - 7*d + 2*n11 + 4*n5)*j[p4, 0, -1, 0, 0, n5, 2, 1, 0, 0, 0, n11, 0, 
      1, 1])/(16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 
     26*d*n5 + 28*n11*n5 + 8*n5^2) + 
   ((56 - 26*d + 4*n11 + 16*n5)*j[p4, 0, -1, 0, 0, n5, 2, 1, 1, 0, 0, n11, 0, 
      0, 1])/(16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 
     26*d*n5 + 28*n11*n5 + 8*n5^2) + 
   ((56 - 26*d + 4*n11 + 16*n5)*j[p4, 0, -1, 0, 0, n5, 2, 1, 1, 0, 0, n11, 0, 
      1, 0])/(16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 
     26*d*n5 + 28*n11*n5 + 8*n5^2) + 
   ((8*n5 - 6*d*n5 + 4*n11*n5)*j[p4, 0, -1, 0, 0, 1 + n5, 1, 0, 1, 0, 0, n11, 
      0, 1, 1])/(16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 
     26*d*n5 + 28*n11*n5 + 8*n5^2) + 
   ((-52*n5 + 27*d*n5 - 10*n11*n5 - 12*n5^2)*j[p4, 0, -1, 0, 0, 1 + n5, 1, 1, 
      1, 0, 0, n11, 0, 0, 1])/(16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 
     4*n11^2 + 24*n5 - 26*d*n5 + 28*n11*n5 + 8*n5^2) + 
   ((52*n5 - 27*d*n5 + 10*n11*n5 + 12*n5^2)*j[p4, 0, -1, 0, 0, 1 + n5, 1, 1, 
      1, 0, 0, n11, 0, 1, 0])/(16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 
     4*n11^2 + 24*n5 - 26*d*n5 + 28*n11*n5 + 8*n5^2) + 
   ((8 - 6*d + 4*n11)*j[p4, 0, 0, -1, 0, n5, 0, 1, 1, 0, 0, n11, 0, 1, 2])/
    (16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 26*d*n5 + 
     28*n11*n5 + 8*n5^2) + ((8 - 6*d + 4*n11)*j[p4, 0, 0, -1, 0, n5, 1, 0, 1, 
      0, 0, n11, 0, 1, 2])/(16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 
     4*n11^2 + 24*n5 - 26*d*n5 + 28*n11*n5 + 8*n5^2) + 
   ((8 - 6*d + 4*n11)*j[p4, 0, 0, -1, 0, n5, 1, 1, 0, 0, 0, n11, 0, 1, 2])/
    (16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 26*d*n5 + 
     28*n11*n5 + 8*n5^2) + ((8 - 6*d + 4*n11)*j[p4, 0, 0, -1, 0, n5, 1, 1, 0, 
      0, 0, n11, 0, 2, 1])/(16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 
     4*n11^2 + 24*n5 - 26*d*n5 + 28*n11*n5 + 8*n5^2) + 
   ((8 - 6*d + 4*n11)*j[p4, 0, 0, -1, 0, n5, 1, 1, 1, 0, 0, n11, 0, 0, 2])/
    (16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 26*d*n5 + 
     28*n11*n5 + 8*n5^2) + ((-4 + d + 2*n11 - 4*n5)*
     j[p4, 0, 0, -1, 0, n5, 1, 2, 0, 0, 0, n11, 0, 1, 1])/
    (16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 26*d*n5 + 
     28*n11*n5 + 8*n5^2) + ((-44 + 19*d - 2*n11 - 12*n5)*
     j[p4, 0, 0, -1, 0, n5, 2, 1, 0, 0, 0, n11, 0, 1, 1])/
    (16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 26*d*n5 + 
     28*n11*n5 + 8*n5^2) + ((-8 + 6*d - 4*n11)*j[p4, 0, 0, 0, -1, n5, 0, 1, 
      1, 0, 0, n11, 0, 1, 2])/(16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 
     4*n11^2 + 24*n5 - 26*d*n5 + 28*n11*n5 + 8*n5^2) + 
   ((-8 + 6*d - 4*n11)*j[p4, 0, 0, 0, -1, n5, 1, 0, 1, 0, 0, n11, 0, 1, 2])/
    (16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 26*d*n5 + 
     28*n11*n5 + 8*n5^2) + ((-8 + 6*d - 4*n11)*j[p4, 0, 0, 0, -1, n5, 1, 1, 
      0, 0, 0, n11, 0, 1, 2])/(16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 
     4*n11^2 + 24*n5 - 26*d*n5 + 28*n11*n5 + 8*n5^2) + 
   ((-8 + 6*d - 4*n11)*j[p4, 0, 0, 0, -1, n5, 1, 1, 1, 0, 0, n11, 0, 0, 2])/
    (16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 26*d*n5 + 
     28*n11*n5 + 8*n5^2) + ((44 - 19*d + 2*n11 + 12*n5)*
     j[p4, 0, 0, 0, -1, n5, 2, 0, 1, 0, 0, n11, 0, 1, 1])/
    (16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 26*d*n5 + 
     28*n11*n5 + 8*n5^2) + ((44 - 19*d + 2*n11 + 12*n5)*
     j[p4, 0, 0, 0, -1, n5, 2, 1, 0, 0, 0, n11, 0, 1, 1])/
    (16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 26*d*n5 + 
     28*n11*n5 + 8*n5^2) + ((44 - 19*d + 2*n11 + 12*n5)*
     j[p4, 0, 0, 0, -1, n5, 2, 1, 1, 0, 0, n11, 0, 0, 1])/
    (16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 26*d*n5 + 
     28*n11*n5 + 8*n5^2) + ((44 - 19*d + 2*n11 + 12*n5)*
     j[p4, 0, 0, 0, -1, n5, 2, 1, 1, 0, 0, n11, 0, 1, 0])/
    (16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 26*d*n5 + 
     28*n11*n5 + 8*n5^2) + ((-8*n5 + 6*d*n5 - 4*n11*n5)*
     j[p4, 0, 0, 0, -1, 1 + n5, 0, 1, 1, 0, 0, n11, 0, 1, 1])/
    (16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 26*d*n5 + 
     28*n11*n5 + 8*n5^2) + ((-44*n5 + 19*d*n5 - 2*n11*n5 - 12*n5^2)*
     j[p4, 0, 0, 0, -1, 1 + n5, 1, 1, 1, 0, 0, n11, 0, 0, 1])/
    (16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 26*d*n5 + 
     28*n11*n5 + 8*n5^2) + ((44*n5 - 19*d*n5 + 2*n11*n5 + 12*n5^2)*
     j[p4, 0, 0, 0, -1, 1 + n5, 1, 1, 1, 0, 0, n11, 0, 1, 0])/
    (16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 26*d*n5 + 
     28*n11*n5 + 8*n5^2) + ((-96 + 76*d - 15*d^2 + 16*n11 - 6*d*n11 - 88*n5 + 
      34*d*n5 + 4*n11*n5 - 16*n5^2)*j[p4, 0, 0, 0, 0, -1 + n5, 1, 1, 1, 0, 0, 
      -1 + n11, 0, 1, 2])/((-1 + n11)*(-16 + 64*d - 23*d^2 - 96*n11 + 
      36*d*n11 + 4*n11^2 - 24*n5 + 26*d*n5 - 28*n11*n5 - 8*n5^2)) + 
   ((-64 + 56*d - 12*d^2 - 48*n5 + 20*d*n5 - 8*n5^2)*
     j[p4, 0, 0, 0, 0, -1 + n5, 1, 1, 1, 0, 0, -1 + n11, 0, 2, 1])/
    ((-1 + n11)*(-16 + 64*d - 23*d^2 - 96*n11 + 36*d*n11 + 4*n11^2 - 24*n5 + 
      26*d*n5 - 28*n11*n5 - 8*n5^2)) + 
   ((-48 + 52*d - 14*d^2 - 8*n11 + 4*d*n11 - 40*n5 + 22*d*n5 - 4*n11*n5 - 
      8*n5^2)*j[p4, 0, 0, 0, 0, -1 + n5, 1, 1, 1, 0, 0, n11, 0, 1, 1])/
    (16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 26*d*n5 + 
     28*n11*n5 + 8*n5^2) + ((-56 + 26*d - 4*n11 - 16*n5)*
     j[p4, 0, 0, 0, 0, -1 + n5, 2, 0, 1, 0, 0, n11, 0, 1, 1])/
    (16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 26*d*n5 + 
     28*n11*n5 + 8*n5^2) + ((-56 + 26*d - 4*n11 - 16*n5)*
     j[p4, 0, 0, 0, 0, -1 + n5, 2, 1, 0, 0, 0, n11, 0, 1, 1])/
    (16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 26*d*n5 + 
     28*n11*n5 + 8*n5^2) + ((-56 + 26*d - 4*n11 - 16*n5)*
     j[p4, 0, 0, 0, 0, -1 + n5, 2, 1, 1, 0, 0, n11, 0, 0, 1])/
    (16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 26*d*n5 + 
     28*n11*n5 + 8*n5^2) + ((-56 + 26*d - 4*n11 - 16*n5)*
     j[p4, 0, 0, 0, 0, -1 + n5, 2, 1, 1, 0, 0, n11, 0, 1, 0])/
    (16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 26*d*n5 + 
     28*n11*n5 + 8*n5^2) + ((-12 + 5*d + 2*n11 - 4*n5)*
     j[p4, 0, 0, 0, 0, n5, 0, 1, 1, -1, 0, n11, 0, 1, 2])/
    (16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 26*d*n5 + 
     28*n11*n5 + 8*n5^2) + ((84 - 67*d + 12*d^2 + 2*n11 + 52*n5 - 20*d*n5 + 
      8*n5^2)*j[p4, 0, 0, 0, 0, n5, 0, 1, 1, 0, 0, n11, 0, 1, 1])/
    (16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 26*d*n5 + 
     28*n11*n5 + 8*n5^2) + ((12 - 5*d - 2*n11 + 4*n5)*
     j[p4, 0, 0, 0, 0, n5, 0, 1, 1, 0, 0, n11, 0, 1, 2])/
    (16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 26*d*n5 + 
     28*n11*n5 + 8*n5^2) + ((-12 + 5*d + 2*n11 - 4*n5)*
     j[p4, 0, 0, 0, 0, n5, 1, 0, 1, -1, 0, n11, 0, 1, 2])/
    (16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 26*d*n5 + 
     28*n11*n5 + 8*n5^2) + ((-8 + 6*d - 4*n11)*j[p4, 0, 0, 0, 0, n5, 1, 0, 1, 
      0, 0, n11, -1, 2, 1])/(16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 
     4*n11^2 + 24*n5 - 26*d*n5 + 28*n11*n5 + 8*n5^2) + 
   ((16 - 30*d + 12*d^2 - 20*n11 + 4*d*n11 + 32*n5 - 20*d*n5 + 8*n5^2)*
     j[p4, 0, 0, 0, 0, n5, 1, 0, 1, 0, 0, n11, 0, 1, 1])/
    (16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 26*d*n5 + 
     28*n11*n5 + 8*n5^2) + ((12 - 5*d - 2*n11 + 4*n5)*
     j[p4, 0, 0, 0, 0, n5, 1, 0, 1, 0, 0, n11, 0, 1, 2])/
    (16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 26*d*n5 + 
     28*n11*n5 + 8*n5^2) + ((8 - 4*d)*j[p4, 0, 0, 0, 0, n5, 1, 0, 1, 0, 0, 
      n11, 0, 2, 1])/(16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 
     24*n5 - 26*d*n5 + 28*n11*n5 + 8*n5^2) + 
   ((8*n11 - 4*d*n11)*j[p4, 0, 0, 0, 0, n5, 1, 0, 1, 0, 0, 1 + n11, -1, 1, 
      1])/(-16 + 64*d - 23*d^2 - 96*n11 + 36*d*n11 + 4*n11^2 - 24*n5 + 
     26*d*n5 - 28*n11*n5 - 8*n5^2) + 
   ((-8*n11 + 4*d*n11)*j[p4, 0, 0, 0, 0, n5, 1, 0, 1, 0, 0, 1 + n11, 0, 1, 
      1])/(-16 + 64*d - 23*d^2 - 96*n11 + 36*d*n11 + 4*n11^2 - 24*n5 + 
     26*d*n5 - 28*n11*n5 - 8*n5^2) + 
   ((-8 + 4*d)*j[p4, 0, 0, 0, 0, n5, 1, 0, 2, 0, 0, -1 + n11, 0, 1, 1])/
    (16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 26*d*n5 + 
     28*n11*n5 + 8*n5^2) + ((-2*d + 4*n11)*j[p4, 0, 0, 0, 0, n5, 1, 0, 2, 0, 
      0, n11, -1, 1, 1])/(16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 
     24*n5 - 26*d*n5 + 28*n11*n5 + 8*n5^2) + 
   ((-12 + 5*d + 2*n11 - 4*n5)*j[p4, 0, 0, 0, 0, n5, 1, 1, 0, -1, 0, n11, 0, 
      1, 2])/(16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 
     26*d*n5 + 28*n11*n5 + 8*n5^2) + 
   ((196 - 145*d + 27*d^2 - 14*n11 + 5*d*n11 - 2*n11^2 + 148*n5 - 54*d*n5 + 
      24*n5^2)*j[p4, 0, 0, 0, 0, n5, 1, 1, 0, 0, 0, n11, 0, 1, 1])/
    (16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 26*d*n5 + 
     28*n11*n5 + 8*n5^2) + ((12 - 5*d - 2*n11 + 4*n5)*
     j[p4, 0, 0, 0, 0, n5, 1, 1, 0, 0, 0, n11, 0, 1, 2])/
    (16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 26*d*n5 + 
     28*n11*n5 + 8*n5^2) + ((12 - 5*d - 2*n11 + 4*n5)*
     j[p4, 0, 0, 0, 0, n5, 1, 1, 0, 0, 0, n11, 0, 2, 1])/
    (16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 26*d*n5 + 
     28*n11*n5 + 8*n5^2) + ((4*n11 - d*n11 - 2*n11^2 + 4*n11*n5)*
     j[p4, 0, 0, 0, 0, n5, 1, 1, 0, 0, 0, 1 + n11, -1, 1, 1])/
    (16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 26*d*n5 + 
     28*n11*n5 + 8*n5^2) + ((-4*n11 + d*n11 + 2*n11^2 - 4*n11*n5)*
     j[p4, 0, 0, 0, 0, n5, 1, 1, 0, 0, 0, 1 + n11, 0, 1, 1])/
    (16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 26*d*n5 + 
     28*n11*n5 + 8*n5^2) + ((-12 + 5*d + 2*n11 - 4*n5)*
     j[p4, 0, 0, 0, 0, n5, 1, 1, 1, -1, 0, n11, 0, 0, 2])/
    (16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 26*d*n5 + 
     28*n11*n5 + 8*n5^2) + ((96 - 76*d + 15*d^2 - 16*n11 + 6*d*n11 + 88*n5 - 
      34*d*n5 - 4*n11*n5 + 16*n5^2)*j[p4, 0, 0, 0, 0, n5, 1, 1, 1, 0, 0, 
      -1 + n11, 0, 0, 2])/((-1 + n11)*(-16 + 64*d - 23*d^2 - 96*n11 + 
      36*d*n11 + 4*n11^2 - 24*n5 + 26*d*n5 - 28*n11*n5 - 8*n5^2)) + 
   ((-2224 + 3108*d - 1440*d^2 + 221*d^3 - 768*n11 + 682*d*n11 - 
      149*d^2*n11 - 60*n11^2 + 20*d*n11^2 + 4*n11^3 - 1952*n5 + 1820*d*n5 - 
      422*d^2*n5 - 408*n11*n5 + 186*d*n11*n5 - 20*n11^2*n5 - 608*n5^2 + 
      280*d*n5^2 - 56*n11*n5^2 - 64*n5^3)*j[p4, 0, 0, 0, 0, n5, 1, 1, 1, 0, 
      0, -1 + n11, 0, 1, 1])/((-1 + n11)*(-16 + 64*d - 23*d^2 - 96*n11 + 
      36*d*n11 + 4*n11^2 - 24*n5 + 26*d*n5 - 28*n11*n5 - 8*n5^2)) + 
   ((64 - 56*d + 12*d^2 + 48*n5 - 20*d*n5 + 8*n5^2)*
     j[p4, 0, 0, 0, 0, n5, 1, 1, 1, 0, 0, -1 + n11, 0, 2, 0])/
    ((-1 + n11)*(-16 + 64*d - 23*d^2 - 96*n11 + 36*d*n11 + 4*n11^2 - 24*n5 + 
      26*d*n5 - 28*n11*n5 - 8*n5^2)) + 
   ((-52 + 19*d + 6*n11 + 44*n5 - 26*d*n5 + 4*n11*n5 + 16*n5^2)*
     j[p4, 0, 0, 0, 0, n5, 1, 1, 1, 0, 0, n11, 0, 0, 1])/
    (16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 26*d*n5 + 
     28*n11*n5 + 8*n5^2) + ((12 - 5*d - 2*n11 + 4*n5)*
     j[p4, 0, 0, 0, 0, n5, 1, 1, 1, 0, 0, n11, 0, 0, 2])/
    (16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 26*d*n5 + 
     28*n11*n5 + 8*n5^2) + ((-28 + 9*d + 2*n11 - 60*n5 + 26*d*n5 - 4*n11*n5 - 
      16*n5^2)*j[p4, 0, 0, 0, 0, n5, 1, 1, 1, 0, 0, n11, 0, 1, 0])/
    (16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 26*d*n5 + 
     28*n11*n5 + 8*n5^2) + ((-40 + 16*d - 8*n5)*j[p4, 0, 0, 0, 0, n5, 1, 1, 
      2, 0, 0, -1 + n11, 0, 0, 1])/(16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 
     4*n11^2 + 24*n5 - 26*d*n5 + 28*n11*n5 + 8*n5^2) + 
   ((-44 + 17*d + 2*n11 - 12*n5)*j[p4, 0, 0, 0, 0, n5, 1, 2, 0, 0, -1, n11, 
      0, 1, 1])/(16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 
     26*d*n5 + 28*n11*n5 + 8*n5^2) + 
   ((44 - 17*d - 2*n11 + 12*n5)*j[p4, 0, 0, 0, 0, n5, 1, 2, 0, 0, 0, 
      -1 + n11, 0, 1, 1])/(16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 
     24*n5 - 26*d*n5 + 28*n11*n5 + 8*n5^2) + 
   ((-40 + 16*d - 8*n5)*j[p4, 0, 0, 0, 0, n5, 1, 2, 1, 0, -1, n11, 0, 0, 1])/
    (16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 26*d*n5 + 
     28*n11*n5 + 8*n5^2) + ((40 - 16*d + 8*n5)*j[p4, 0, 0, 0, 0, n5, 1, 2, 1, 
      0, 0, -1 + n11, 0, 0, 1])/(16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 
     4*n11^2 + 24*n5 - 26*d*n5 + 28*n11*n5 + 8*n5^2) + 
   ((40 - 16*d + 8*n5)*j[p4, 0, 0, 0, 0, n5, 2, 0, 1, -1, 0, n11, 0, 1, 1])/
    (16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 26*d*n5 + 
     28*n11*n5 + 8*n5^2) + ((-40 + 16*d - 8*n5)*j[p4, 0, 0, 0, 0, n5, 2, 0, 
      1, 0, -1, n11, 0, 1, 1])/(16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 
     4*n11^2 + 24*n5 - 26*d*n5 + 28*n11*n5 + 8*n5^2) + 
   ((36 - 15*d + 2*n11 + 4*n5)*j[p4, 0, 0, 0, 0, n5, 2, 1, 0, -1, 0, n11, 0, 
      1, 1])/(16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 
     26*d*n5 + 28*n11*n5 + 8*n5^2) + 
   ((-36 + 15*d - 2*n11 - 4*n5)*j[p4, 0, 0, 0, 0, n5, 2, 1, 0, 0, -1, n11, 0, 
      1, 1])/(16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 
     26*d*n5 + 28*n11*n5 + 8*n5^2) + 
   ((-44 + 19*d - 2*n11 - 12*n5)*j[p4, 0, 0, 0, 0, n5, 2, 1, 0, 0, 0, n11, 
      -1, 1, 1])/(16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 
     26*d*n5 + 28*n11*n5 + 8*n5^2) + 
   ((40 - 16*d + 8*n5)*j[p4, 0, 0, 0, 0, n5, 2, 1, 1, -1, 0, n11, 0, 0, 1])/
    (16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 26*d*n5 + 
     28*n11*n5 + 8*n5^2) + ((40 - 16*d + 8*n5)*j[p4, 0, 0, 0, 0, n5, 2, 1, 1, 
      -1, 0, n11, 0, 1, 0])/(16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 
     4*n11^2 + 24*n5 - 26*d*n5 + 28*n11*n5 + 8*n5^2) + 
   ((-40 + 16*d - 8*n5)*j[p4, 0, 0, 0, 0, n5, 2, 1, 1, 0, -1, n11, 0, 0, 1])/
    (16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 26*d*n5 + 
     28*n11*n5 + 8*n5^2) + ((-40 + 16*d - 8*n5)*j[p4, 0, 0, 0, 0, n5, 2, 1, 
      1, 0, -1, n11, 0, 1, 0])/(16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 
     4*n11^2 + 24*n5 - 26*d*n5 + 28*n11*n5 + 8*n5^2) + 
   ((-12*n5 + 5*d*n5 + 2*n11*n5 - 4*n5^2)*j[p4, 0, 0, 0, 0, 1 + n5, 0, 1, 1, 
      -1, 0, n11, 0, 1, 1])/(16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 
     4*n11^2 + 24*n5 - 26*d*n5 + 28*n11*n5 + 8*n5^2) + 
   ((-4*n5 + d*n5 + 2*n11*n5 - 4*n5^2)*j[p4, 0, 0, 0, 0, 1 + n5, 1, 0, 1, -1, 
      0, n11, 0, 1, 1])/(16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 
     24*n5 - 26*d*n5 + 28*n11*n5 + 8*n5^2) + 
   ((-40*n5 + 16*d*n5 - 8*n5^2)*j[p4, 0, 0, 0, 0, 1 + n5, 1, 1, 1, -1, 0, 
      n11, 0, 0, 1])/(16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 
     24*n5 - 26*d*n5 + 28*n11*n5 + 8*n5^2) + 
   ((40*n5 - 16*d*n5 + 8*n5^2)*j[p4, 0, 0, 0, 0, 1 + n5, 1, 1, 1, -1, 0, n11, 
      0, 1, 0])/(16 - 64*d + 23*d^2 + 96*n11 - 36*d*n11 - 4*n11^2 + 24*n5 - 
     26*d*n5 + 28*n11*n5 + 8*n5^2), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n3 == 0 && n4 == 0 && n6 == 1 && n7 == 1 && n8 == 1 && n9 == 0 && 
    n1 != 0 -> ((6 - 3*d + 2*n5)*j[p4, n1, 0, 0, 0, n5, 0, 1, 2, 0, 0, 1, 0, 
      1, 1])/((-3 + d - n1)*(-6 + 3*d - 4*n5)) + 
   ((6 - 3*d + 2*n5)*j[p4, n1, 0, 0, 0, n5, 1, 0, 2, 0, 0, 1, 0, 1, 1])/
    ((-3 + d - n1)*(-6 + 3*d - 4*n5)) + 
   ((6 - 3*d + 2*n5)*j[p4, n1, 0, 0, 0, n5, 1, 1, 1, 0, 0, 1, 0, 2, 0])/
    ((-3 + d - n1)*(-6 + 3*d - 4*n5)) + 
   ((-6 + 3*d - 2*n5)*j[p4, 1 + n1, -1, 0, 0, n5, 1, 1, 2, 0, 0, 0, 0, 1, 1])/
    ((-3 + d - n1)*(-6 + 3*d - 4*n5)) + 
   j[p4, 1 + n1, -1, 0, 0, n5, 1, 2, 1, 0, 0, 0, 0, 1, 1]/(-6 + 3*d - 4*n5) + 
   ((-8 + 3*d)*j[p4, 1 + n1, -1, 0, 0, n5, 1, 2, 1, 0, 0, 1, 0, 0, 1])/
    ((-3 + d - n1)*(-6 + 3*d - 4*n5)) + 
   ((-4 + 2*d + n1 - n5)*j[p4, 1 + n1, -1, 0, 0, n5, 2, 1, 0, 0, 0, 1, 0, 1, 
      1])/((-3 + d - n1)*(-6 + 3*d - 4*n5)) + 
   ((-8*n5 + 3*d*n5)*j[p4, 1 + n1, -1, 0, 0, 1 + n5, 1, 1, 1, 0, 0, 1, 0, 0, 
      1])/((-3 + d - n1)*(-6 + 3*d - 4*n5)) + 
   ((8*n5 - 3*d*n5)*j[p4, 1 + n1, -1, 0, 0, 1 + n5, 1, 1, 1, 0, 0, 1, 0, 1, 
      0])/((-3 + d - n1)*(-6 + 3*d - 4*n5)) + 
   ((16 - 14*d + 3*d^2)*j[p4, 1 + n1, 0, -1, 0, n5, 1, 1, 1, 0, 0, 1, 0, 0, 
      2])/((-3 + d - n1)*(-6 + 3*d - 4*n5)*(-2 + d - 2*n5)) + 
   ((8 - 3*d)*j[p4, 1 + n1, 0, -1, 0, n5, 1, 2, 0, 0, 0, 1, 0, 1, 1])/
    ((-3 + d - n1)*(-6 + 3*d - 4*n5)) + 
   ((-16 + 14*d - 3*d^2)*j[p4, 1 + n1, 0, 0, -1, n5, 1, 1, 1, 0, 0, 1, 0, 0, 
      2])/((-3 + d - n1)*(-6 + 3*d - 4*n5)*(-2 + d - 2*n5)) + 
   ((-6 + 3*d - 2*n5)*j[p4, 1 + n1, 0, 0, -1, n5, 1, 1, 2, 0, 0, 0, 0, 1, 1])/
    ((-3 + d - n1)*(-6 + 3*d - 4*n5)) + 
   ((-4 + d - n1 + n5)*j[p4, 1 + n1, 0, 0, -1, n5, 1, 2, 0, 0, 0, 1, 0, 1, 
      1])/((-3 + d - n1)*(-6 + 3*d - 4*n5)) + 
   ((-3 + 2*d + n1 - 2*n5)*j[p4, 1 + n1, 0, 0, -1, n5, 1, 2, 1, 0, 0, 0, 0, 
      1, 1])/((-3 + d - n1)*(-6 + 3*d - 4*n5)) + 
   ((32 - 28*d + 6*d^2 + 16*n5 - 6*d*n5)*j[p4, 1 + n1, 0, 0, -1, n5, 1, 2, 1, 
      0, 0, 1, 0, 0, 1])/((-3 + d - n1)*(-6 + 3*d - 4*n5)*(-2 + d - 2*n5)) + 
   ((32*n5 - 28*d*n5 + 6*d^2*n5 + 16*n5^2 - 6*d*n5^2)*
     j[p4, 1 + n1, 0, 0, -1, 1 + n5, 1, 1, 1, 0, 0, 1, 0, 0, 1])/
    ((-3 + d - n1)*(-6 + 3*d - 4*n5)*(-2 + d - 2*n5)) + 
   ((-32*n5 + 28*d*n5 - 6*d^2*n5 - 16*n5^2 + 6*d*n5^2)*
     j[p4, 1 + n1, 0, 0, -1, 1 + n5, 1, 1, 1, 0, 0, 1, 0, 1, 0])/
    ((-3 + d - n1)*(-6 + 3*d - 4*n5)*(-2 + d - 2*n5)) + 
   ((12 - 24*d + 15*d^2 - 3*d^3 - 24*n1 + 24*d*n1 - 6*d^2*n1 - 32*n5 + 
      18*d*n5 - d^2*n5 - 32*n1*n5 + 16*d*n1*n5 - 12*n5^2 + 2*d*n5^2 - 
      8*n1*n5^2)*j[p4, 1 + n1, 0, 0, 0, -1 + n5, 1, 1, 1, 0, 0, 1, 0, 1, 1])/
    ((-3 + d - n1)*(-6 + 3*d - 4*n5)*(-2 + d - 2*n5)) + 
   ((-d - 2*n1 + 2*n5)*j[p4, 1 + n1, 0, 0, 0, -1 + n5, 1, 1, 1, 0, 0, 1, 0, 
      1, 2])/((-3 + d - n1)*(-6 + 3*d - 4*n5)) + 
   ((-6 + 3*d - 2*n5)*j[p4, 1 + n1, 0, 0, 0, -1 + n5, 1, 1, 1, 0, 0, 1, 0, 2, 
      1])/((-3 + d - n1)*(-6 + 3*d - 4*n5)) + 
   ((4 - d + n1 - n5)*j[p4, 1 + n1, 0, 0, 0, -1 + n5, 1, 2, 0, 0, 0, 1, 0, 1, 
      1])/((-3 + d - n1)*(-6 + 3*d - 4*n5)) + 
   ((3 - 2*d - n1 + 2*n5)*j[p4, 1 + n1, 0, 0, 0, -1 + n5, 1, 2, 1, 0, 0, 0, 
      0, 1, 1])/((-3 + d - n1)*(-6 + 3*d - 4*n5)) + 
   ((-32 + 28*d - 6*d^2 - 16*n5 + 6*d*n5)*j[p4, 1 + n1, 0, 0, 0, -1 + n5, 1, 
      2, 1, 0, 0, 1, 0, 0, 1])/((-3 + d - n1)*(-6 + 3*d - 4*n5)*
     (-2 + d - 2*n5)) + ((4 - 2*d - n1 + n5)*j[p4, 1 + n1, 0, 0, 0, -1 + n5, 
      2, 1, 0, 0, 0, 1, 0, 1, 1])/((-3 + d - n1)*(-6 + 3*d - 4*n5)) + 
   ((16*n5 - 14*d*n5 + 3*d^2*n5)*j[p4, 1 + n1, 0, 0, 0, n5, 1, 0, 1, 0, 0, 1, 
      0, 1, 1])/((-3 + d - n1)*(-6 + 3*d - 4*n5)*(-2 + d - 2*n5)) + 
   ((d + 2*n1 - 2*n5)*j[p4, 1 + n1, 0, 0, 0, n5, 1, 1, 1, -1, 0, 1, 0, 0, 2])/
    ((-3 + d - n1)*(-6 + 3*d - 4*n5)) + 
   ((6 - 3*d + 2*n5)*j[p4, 1 + n1, 0, 0, 0, n5, 1, 1, 1, 0, 0, 0, 0, 1, 1])/
    ((-3 + d - n1)*(-6 + 3*d - 4*n5)) + 
   ((-32*n5 + 28*d*n5 - 6*d^2*n5 - 16*n5^2 + 6*d*n5^2)*
     j[p4, 1 + n1, 0, 0, 0, n5, 1, 1, 1, 0, 0, 1, 0, 0, 1])/
    ((-3 + d - n1)*(-6 + 3*d - 4*n5)*(-2 + d - 2*n5)) + 
   ((32*n5 - 28*d*n5 + 6*d^2*n5 + 16*n5^2 - 6*d*n5^2)*
     j[p4, 1 + n1, 0, 0, 0, n5, 1, 1, 1, 0, 0, 1, 0, 1, 0])/
    ((-3 + d - n1)*(-6 + 3*d - 4*n5)*(-2 + d - 2*n5)) - 
   j[p4, 1 + n1, 0, 0, 0, n5, 1, 2, 0, 0, -1, 1, 0, 1, 1]/(-6 + 3*d - 4*n5) - 
   j[p4, 1 + n1, 0, 0, 0, n5, 2, 1, 0, -1, 0, 1, 0, 1, 1]/(-6 + 3*d - 4*n5) + 
   j[p4, 1 + n1, 0, 0, 0, n5, 2, 1, 0, 0, -1, 1, 0, 1, 1]/(-6 + 3*d - 4*n5), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n2 == 0 && n3 == 0 && n4 == 0 && n6 == 1 && n7 == 1 && n8 == 1 && 
    n9 == 0 -> ((-10 + 4*d - 3*n5)*j[p4, -1, 0, 0, 0, n5, 0, 1, 2, 0, 0, 1, 
      0, 1, 1])/(56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 4*n5^2) + 
   ((-26 + 11*d - 8*n5)*j[p4, -1, 0, 0, 0, n5, 1, 0, 1, 0, 0, 1, 0, 2, 1])/
    (56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 4*n5^2) + 
   ((16 - 7*d + 5*n5)*j[p4, -1, 0, 0, 0, n5, 1, 0, 2, 0, 0, 1, 0, 1, 1])/
    (56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 4*n5^2) + 
   ((-10 + 4*d - 3*n5)*j[p4, -1, 0, 0, 0, n5, 1, 1, 1, 0, 0, 1, 0, 2, 0])/
    (56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 4*n5^2) + 
   ((-26*n5 + 11*d*n5 - 8*n5^2)*j[p4, -1, 0, 0, 0, 1 + n5, 1, 0, 1, 0, 0, 1, 
      0, 1, 1])/(56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 4*n5^2) + 
   ((-16 + 7*d - 5*n5)*j[p4, 0, -1, 0, 0, n5, 1, 1, 2, 0, 0, 0, 0, 1, 1])/
    (56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 4*n5^2) + 
   ((16 - 7*d + 5*n5)*j[p4, 0, -1, 0, 0, n5, 1, 1, 2, 0, 0, 1, 0, 0, 1])/
    (56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 4*n5^2) - 
   (2*j[p4, 0, -1, 0, 0, n5, 1, 2, 1, 0, 0, 0, 0, 1, 1])/(-2 + d) + 
   ((-12 + 17*d - 5*d^2 - 10*n5 + 6*d*n5)*j[p4, 0, -1, 0, 0, n5, 1, 2, 1, 0, 
      0, 1, 0, 0, 1])/((-2 + d)*(56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 
      4*n5^2)) + ((-8 + 13*d - 4*d^2 - 4*n5 + 3*d*n5)*
     j[p4, 0, -1, 0, 0, n5, 2, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((-2 + d)*(56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 4*n5^2)) + 
   ((40 - 31*d + 6*d^2 + 8*n5 - 3*d*n5)*j[p4, 0, -1, 0, 0, n5, 2, 1, 0, 0, 0, 
      1, 0, 1, 1])/((-2 + d)*(56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 
      4*n5^2)) + ((-8 + 13*d - 4*d^2 - 4*n5 + 3*d*n5)*
     j[p4, 0, -1, 0, 0, n5, 2, 1, 1, 0, 0, 1, 0, 0, 1])/
    ((-2 + d)*(56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 4*n5^2)) + 
   ((-8 + 13*d - 4*d^2 - 4*n5 + 3*d*n5)*j[p4, 0, -1, 0, 0, n5, 2, 1, 1, 0, 0, 
      1, 0, 1, 0])/((-2 + d)*(56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 
      4*n5^2)) + ((18*n5 - 8*d*n5 + 8*n5^2)*j[p4, 0, -1, 0, 0, 1 + n5, 1, 1, 
      1, 0, 0, 1, 0, 0, 1])/(56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 4*n5^2) + 
   ((-18*n5 + 8*d*n5 - 8*n5^2)*j[p4, 0, -1, 0, 0, 1 + n5, 1, 1, 1, 0, 0, 1, 
      0, 1, 0])/(56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 4*n5^2) + 
   ((184 - 158*d + 34*d^2 + 100*n5 - 44*d*n5 + 16*n5^2)*
     j[p4, 0, 0, -1, 0, n5, 1, 1, 1, 0, 0, 1, 0, 0, 2])/
    ((-2 + d - 2*n5)*(56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 4*n5^2)) + 
   ((12 - 17*d + 5*d^2 + 10*n5 - 6*d*n5)*j[p4, 0, 0, -1, 0, n5, 1, 2, 0, 0, 
      0, 1, 0, 1, 1])/((-2 + d)*(56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 
      4*n5^2)) + ((12 - 17*d + 5*d^2 + 6*n5 - 4*d*n5)*
     j[p4, 0, 0, -1, 0, n5, 2, 1, 0, 0, 0, 1, 0, 1, 1])/
    ((-2 + d)*(56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 4*n5^2)) + 
   ((-184 + 158*d - 34*d^2 - 100*n5 + 44*d*n5 - 16*n5^2)*
     j[p4, 0, 0, 0, -1, n5, 1, 1, 1, 0, 0, 1, 0, 0, 2])/
    ((-2 + d - 2*n5)*(56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 4*n5^2)) + 
   ((10 - 4*d + 3*n5)*j[p4, 0, 0, 0, -1, n5, 1, 1, 2, 0, 0, 0, 0, 1, 1])/
    (56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 4*n5^2) + 
   ((-10 + 4*d - 3*n5)*j[p4, 0, 0, 0, -1, n5, 1, 1, 2, 0, 0, 1, 0, 0, 1])/
    (56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 4*n5^2) + 
   ((26 - 11*d + 9*n5)*j[p4, 0, 0, 0, -1, n5, 1, 2, 0, 0, 0, 1, 0, 1, 1])/
    (56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 4*n5^2) + 
   ((-116 + 94*d - 19*d^2 - 62*n5 + 25*d*n5 - 8*n5^2)*
     j[p4, 0, 0, 0, -1, n5, 1, 2, 1, 0, 0, 0, 0, 1, 1])/
    ((-2 + d)*(56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 4*n5^2)) + 
   ((-336 + 442*d - 193*d^2 + 28*d^3 - 144*n5 + 120*d*n5 - 25*d^2*n5 - 
      8*n5^2 + 2*d*n5^2)*j[p4, 0, 0, 0, -1, n5, 1, 2, 1, 0, 0, 1, 0, 0, 1])/
    ((-2 + d)*(-2 + d - 2*n5)*(56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 
      4*n5^2)) + ((-12 + 17*d - 5*d^2 - 6*n5 + 4*d*n5)*
     j[p4, 0, 0, 0, -1, n5, 2, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((-2 + d)*(56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 4*n5^2)) + 
   ((-12 + 17*d - 5*d^2 - 6*n5 + 4*d*n5)*j[p4, 0, 0, 0, -1, n5, 2, 1, 0, 0, 
      0, 1, 0, 1, 1])/((-2 + d)*(56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 
      4*n5^2)) + ((-12 + 17*d - 5*d^2 - 6*n5 + 4*d*n5)*
     j[p4, 0, 0, 0, -1, n5, 2, 1, 1, 0, 0, 1, 0, 0, 1])/
    ((-2 + d)*(56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 4*n5^2)) + 
   ((-12 + 17*d - 5*d^2 - 6*n5 + 4*d*n5)*j[p4, 0, 0, 0, -1, n5, 2, 1, 1, 0, 
      0, 1, 0, 1, 0])/((-2 + d)*(56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 
      4*n5^2)) + ((200*n5 - 172*d*n5 + 37*d^2*n5 + 116*n5^2 - 50*d*n5^2 + 
      16*n5^3)*j[p4, 0, 0, 0, -1, 1 + n5, 1, 1, 1, 0, 0, 1, 0, 0, 1])/
    ((-2 + d - 2*n5)*(56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 4*n5^2)) + 
   ((-200*n5 + 172*d*n5 - 37*d^2*n5 - 116*n5^2 + 50*d*n5^2 - 16*n5^3)*
     j[p4, 0, 0, 0, -1, 1 + n5, 1, 1, 1, 0, 0, 1, 0, 1, 0])/
    ((-2 + d - 2*n5)*(56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 4*n5^2)) + 
   ((-72 + 66*d - 15*d^2 - 36*n5 + 16*d*n5 - 4*n5^2)*
     j[p4, 0, 0, 0, 0, -1 + n5, 1, 1, 1, 0, 0, 1, 0, 1, 1])/
    ((-2 + d - 2*n5)*(-8 + 3*d - 2*n5)) + 
   ((-26 + 11*d - 9*n5)*j[p4, 0, 0, 0, 0, -1 + n5, 1, 2, 0, 0, 0, 1, 0, 1, 
      1])/(56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 4*n5^2) + 
   ((116 - 94*d + 19*d^2 + 62*n5 - 25*d*n5 + 8*n5^2)*
     j[p4, 0, 0, 0, 0, -1 + n5, 1, 2, 1, 0, 0, 0, 0, 1, 1])/
    ((-2 + d)*(56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 4*n5^2)) + 
   ((336 - 442*d + 193*d^2 - 28*d^3 + 144*n5 - 120*d*n5 + 25*d^2*n5 + 
      8*n5^2 - 2*d*n5^2)*j[p4, 0, 0, 0, 0, -1 + n5, 1, 2, 1, 0, 0, 1, 0, 0, 
      1])/((-2 + d)*(-2 + d - 2*n5)*(56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 
      4*n5^2)) + ((8 - 13*d + 4*d^2 + 4*n5 - 3*d*n5)*
     j[p4, 0, 0, 0, 0, -1 + n5, 2, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((-2 + d)*(56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 4*n5^2)) + 
   ((-28 + 14*d - d^2 - 2*n5 - d*n5)*j[p4, 0, 0, 0, 0, -1 + n5, 2, 1, 0, 0, 
      0, 1, 0, 1, 1])/((-2 + d)*(56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 
      4*n5^2)) + ((8 - 13*d + 4*d^2 + 4*n5 - 3*d*n5)*
     j[p4, 0, 0, 0, 0, -1 + n5, 2, 1, 1, 0, 0, 1, 0, 0, 1])/
    ((-2 + d)*(56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 4*n5^2)) + 
   ((8 - 13*d + 4*d^2 + 4*n5 - 3*d*n5)*j[p4, 0, 0, 0, 0, -1 + n5, 2, 1, 1, 0, 
      0, 1, 0, 1, 0])/((-2 + d)*(56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 
      4*n5^2)) + ((-10 + 4*d - 3*n5)*j[p4, 0, 0, 0, 0, n5, 0, 1, 1, 0, 0, 1, 
      0, 1, 1])/(56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 4*n5^2) + 
   ((10 - 4*d + 3*n5)*j[p4, 0, 0, 0, 0, n5, 0, 1, 1, 0, 0, 2, -1, 1, 1])/
    (56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 4*n5^2) + 
   ((-10 + 4*d - 3*n5)*j[p4, 0, 0, 0, 0, n5, 0, 1, 1, 0, 0, 2, 0, 1, 1])/
    (56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 4*n5^2) + 
   ((10 - 4*d + 3*n5)*j[p4, 0, 0, 0, 0, n5, 0, 1, 2, 0, 0, 1, -1, 1, 1])/
    (56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 4*n5^2) + 
   ((-80 + 136*d - 74*d^2 + 13*d^3 - 480*n5 + 632*d*n5 - 262*d^2*n5 + 
      34*d^3*n5 - 232*n5^2 + 208*d*n5^2 - 44*d^2*n5^2 - 32*n5^3 + 16*d*n5^3)*
     j[p4, 0, 0, 0, 0, n5, 1, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((-2 + d)*(-2 + d - 2*n5)*(56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 
      4*n5^2)) + ((26 - 11*d + 8*n5)*j[p4, 0, 0, 0, 0, n5, 1, 0, 1, 0, 0, 1, 
      0, 2, 1])/(56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 4*n5^2) + 
   ((-16 + 7*d - 5*n5)*j[p4, 0, 0, 0, 0, n5, 1, 0, 1, 0, 0, 2, -1, 1, 1])/
    (56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 4*n5^2) + 
   ((16 - 7*d + 5*n5)*j[p4, 0, 0, 0, 0, n5, 1, 0, 1, 0, 0, 2, 0, 1, 1])/
    (56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 4*n5^2) + 
   ((-16 + 7*d - 5*n5)*j[p4, 0, 0, 0, 0, n5, 1, 0, 2, 0, 0, 1, -1, 1, 1])/
    (56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 4*n5^2) + 
   ((-5 + 2*d)*j[p4, 0, 0, 0, 0, n5, 1, 1, 0, 0, 0, 1, 0, 1, 1])/
    ((-2 + d)*(-7 + 3*d - 2*n5)) - j[p4, 0, 0, 0, 0, n5, 1, 1, 0, 0, 0, 2, 
     -1, 1, 1]/(-7 + 3*d - 2*n5) + j[p4, 0, 0, 0, 0, n5, 1, 1, 0, 0, 0, 2, 0, 
     1, 1]/(-7 + 3*d - 2*n5) + 
   ((-24 + 10*d - 7*n5)*j[p4, 0, 0, 0, 0, n5, 1, 1, 1, -1, 0, 1, 0, 0, 2])/
    (56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 4*n5^2) + 
   ((16 - 7*d + 5*n5)*j[p4, 0, 0, 0, 0, n5, 1, 1, 1, 0, 0, 0, 0, 1, 1])/
    (56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 4*n5^2) + 
   ((60 - 56*d + 13*d^2 - 98*n5 + 115*d*n5 - 32*d^2*n5 - 66*n5^2 + 
      36*d*n5^2 - 8*n5^3)*j[p4, 0, 0, 0, 0, n5, 1, 1, 1, 0, 0, 1, 0, 0, 1])/
    ((-2 + d - 2*n5)*(56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 4*n5^2)) + 
   ((24 - 10*d + 7*n5)*j[p4, 0, 0, 0, 0, n5, 1, 1, 1, 0, 0, 1, 0, 0, 2])/
    (56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 4*n5^2) + 
   ((24 - 22*d + 5*d^2 + 208*n5 - 164*d*n5 + 32*d^2*n5 + 92*n5^2 - 
      36*d*n5^2 + 8*n5^3)*j[p4, 0, 0, 0, 0, n5, 1, 1, 1, 0, 0, 1, 0, 1, 0])/
    ((-2 + d - 2*n5)*(56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 4*n5^2)) + 
   ((10 - 4*d + 3*n5)*j[p4, 0, 0, 0, 0, n5, 1, 1, 1, 0, 0, 1, 0, 2, 0])/
    (56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 4*n5^2) + 
   (2*j[p4, 0, 0, 0, 0, n5, 1, 2, 0, 0, -1, 1, 0, 1, 1])/(-2 + d) + 
   ((-148 + 124*d - 26*d^2 - 72*n5 + 30*d*n5 - 8*n5^2)*
     j[p4, 0, 0, 0, 0, n5, 2, 1, 0, -1, 0, 1, 0, 1, 1])/
    ((-2 + d)*(56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 4*n5^2)) + 
   ((148 - 124*d + 26*d^2 + 72*n5 - 30*d*n5 + 8*n5^2)*
     j[p4, 0, 0, 0, 0, n5, 2, 1, 0, 0, -1, 1, 0, 1, 1])/
    ((-2 + d)*(56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 4*n5^2)) + 
   ((12 - 17*d + 5*d^2 + 6*n5 - 4*d*n5)*j[p4, 0, 0, 0, 0, n5, 2, 1, 0, 0, 0, 
      1, -1, 1, 1])/((-2 + d)*(56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 
      4*n5^2)) + ((26*n5 - 11*d*n5 + 8*n5^2)*j[p4, 0, 0, 0, 0, 1 + n5, 1, 0, 
      1, -1, 0, 1, 0, 1, 1])/(56 - 45*d + 9*d^2 + 30*n5 - 12*d*n5 + 4*n5^2)}
