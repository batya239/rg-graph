{j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n1 == 0 || n13 == 1) -> 
  -((n8*j[p4, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
       -1 + n13, n14])/(-1 + n13)) - 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) - (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, 
      n10, n11, n12, -1 + n13, n14])/(-1 + n13) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) - (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, 
      n10, n11, n12, -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4, 1 + n1, -1 + n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n3*j[p4, 1 + n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4, 1 + n1, n2, -1 + n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + ((-2 - n1 + n13 - n2 + n3)*
     j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) + j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, 
    n11, n12, n13, n14] + (n8*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, 1 + n8, 
      n9, n10, -1 + n11, n12, -1 + n13, n14])/(-1 + n13) - 
   (n8*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, -1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n8*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) + 
   (n5*j[p4, 1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, -1 + n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n5*j[p4, 1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) - 
   (n5*j[p4, 1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n13) - 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, n8, -1 + n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, -1 + n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n13) - 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n2*j[p4, 1 + n1, 1 + n2, -1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4, 1 + n1, 1 + n2, n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4, 1 + n1, 1 + n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4, 1 + n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n2*j[p4, 1 + n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, -1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (2*n2*j[p4, 1 + n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) + 
   ((1 + n1)*j[p4, 2 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) + 
   ((-1 - n1)*j[p4, 2 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; n12 != 1 -> 
  -((n8*j[p4, -1 + n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, 
       -1 + n12, n13, n14])/(-1 + n12)) - 
   (n2*j[p4, -1 + n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, -1 + n12, 
      n13, n14])/(-1 + n12) - (n6*j[p4, n1, -1 + n2, n3, n4, n5, 1 + n6, n7, 
      n8, n9, n10, n11, -1 + n12, n13, n14])/(-1 + n12) - 
   (n6*j[p4, n1, n2, -1 + n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, -1 + n12, 
      n13, n14])/(-1 + n12) + j[p4, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, 
    -1 + n11, n12, n13, n14] + 
   ((-1 - 4*d + n1 + 2*n10 + 2*n11 + n12 + 2*n13 + 2*n14 + n2 + 2*n3 + 2*n4 + 
      2*n5 + 2*n6 + 2*n7 + 2*n8 + n9)*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 
      n9, n10, n11, -1 + n12, n13, n14])/(-1 + n12) + 
   (n9*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, n11, -1 + n12, n13, 
      -1 + n14])/(-1 + n12) - 
   (n9*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, n11, -1 + n12, n13, 
      n14])/(-1 + n12) + (n8*j[p4, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, 
      n10, -1 + n11, -1 + n12, n13, n14])/(-1 + n12) - 
   (n8*j[p4, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, -2 + n12, n13, 
      n14])/(-1 + n12) + (n8*j[p4, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, 
      n10, n11, -1 + n12, -1 + n13, n14])/(-1 + n12) + 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, -1 + n7, n8, n9, n10, n11, -1 + n12, 
      n13, n14])/(-1 + n12) + 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, -1 + n8, n9, n10, n11, -1 + n12, 
      n13, n14])/(-1 + n12) - (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 
      -1 + n9, n10, n11, -1 + n12, n13, n14])/(-1 + n12) + 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, -1 + n10, n11, -1 + n12, 
      n13, n14])/(-1 + n12) - (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 
      n9, n10, n11, -2 + n12, n13, n14])/(-1 + n12) + 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, -1 + n12, 
      -1 + n13, n14])/(-1 + n12) + 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, -1 + n12, n13, 
      -1 + n14])/(-1 + n12) - (n2*j[p4, n1, 1 + n2, -1 + n3, n4, n5, n6, n7, 
      n8, n9, n10, n11, -1 + n12, n13, n14])/(-1 + n12) + 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, -1 + n12, 
      n13, n14])/(-1 + n12) + 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, -1 + n12, 
      n13, n14])/(-1 + n12) + (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, n8, 
      n9, -1 + n10, n11, -1 + n12, n13, n14])/(-1 + n12) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, -2 + n12, n13, 
      n14])/(-1 + n12) + (2*n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, 
      n10, n11, -1 + n12, -1 + n13, n14])/(-1 + n12) + 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, -1 + n12, 
      -1 + n13, n14])/(-1 + n12) - 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, -1 + n12, n13, 
      n14])/(-1 + n12), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?NonPositive, (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, 
    (n7_)?NonPositive, (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n14 != 1 -> -((n5*j[p4, -1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, 
       n11, n12, n13, -1 + n14])/(-1 + n14)) + 
   (n3*j[p4, -1 + n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) - (n2*j[p4, -1 + n1, 1 + n2, n3, n4, n5, n6, n7, 
      n8, n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) - 
   (n7*j[p4, n1, -1 + n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) - (n3*j[p4, n1, -1 + n2, 1 + n3, n4, n5, n6, n7, 
      n8, n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) - 
   (n7*j[p4, n1, n2, -1 + n3, n4, n5, n6, 1 + n7, n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) + j[p4, n1, n2, n3, n4, n5, n6, n7, n8, -1 + n9, 
    n10, n11, n12, n13, n14] + 
   ((-1 - 4*d + n1 + 2*n10 + n11 + 2*n12 + 2*n13 + n14 + n2 + n3 + 2*n4 + 
      2*n5 + 2*n6 + 3*n7 + 2*n8 + 2*n9)*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 
      n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) + 
   (n11*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, 1 + n11, -1 + n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n11*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, 1 + n11, n12, n13, 
      -1 + n14])/(-1 + n14) + 
   (n7*j[p4, n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) + (n7*j[p4, n1, n2, n3, n4, n5, n6, 1 + n7, n8, 
      n9, -1 + n10, n11, n12, n13, -1 + n14])/(-1 + n14) - 
   (n7*j[p4, n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, n12, n13, 
      -1 + n14])/(-1 + n14) + (n7*j[p4, n1, n2, n3, n4, n5, n6, 1 + n7, n8, 
      n9, n10, n11, n12, -1 + n13, -1 + n14])/(-1 + n14) + 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, -1 + n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) + (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, 
      n9, n10, n11, n12, -1 + n13, -1 + n14])/(-1 + n14) - 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14) + (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, 
      n8, n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) + 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) + (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, 
      n9, -1 + n10, n11, n12, n13, -1 + n14])/(-1 + n14) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, n12, n13, 
      -1 + n14])/(-1 + n14) - (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, 
      n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) - 
   (n2*j[p4, n1, 1 + n2, -1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) + (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, -1 + n7, 
      n8, n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) + 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) + (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, n8, 
      n9, -1 + n10, n11, n12, n13, -1 + n14])/(-1 + n14) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, -1 + n12, n13, 
      -1 + n14])/(-1 + n14) + (2*n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, n8, 
      n9, n10, n11, n12, -1 + n13, -1 + n14])/(-1 + n14) + 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, -1 + n13, 
      -1 + n14])/(-1 + n14) - (n1*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, n8, 
      n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n4 == 1 || n6 == 0) -> 
  -((n5*j[p4, -1 + n1, n2, n3, -1 + n4, 1 + n5, 1 + n6, n7, n8, n9, n10, n11, 
       n12, n13, n14])/(-1 + n4)) - j[p4, -1 + n1, n2, n3, n4, n5, 1 + n6, 
    n7, n8, n9, n10, n11, n12, n13, n14] - 
   (n7*j[p4, n1, -1 + n2, n3, -1 + n4, n5, 1 + n6, 1 + n7, n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n4) + 
   ((1 + n6)*j[p4, n1, -1 + n2, n3, -1 + n4, n5, 2 + n6, n7, n8, n9, n10, 
      n11, n12, n13, n14])/(-1 + n4) + j[p4, n1, -1 + n2, n3, n4, n5, 1 + n6, 
    n7, n8, n9, n10, n11, n12, n13, n14] - 
   (n3*j[p4, n1, -1 + n2, 1 + n3, -1 + n4, n5, 1 + n6, n7, n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n4) - 
   (n7*j[p4, n1, n2, -1 + n3, -1 + n4, n5, 1 + n6, 1 + n7, n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n4) + 
   ((1 + n6)*j[p4, n1, n2, -1 + n3, -1 + n4, n5, 2 + n6, n7, n8, n9, n10, 
      n11, n12, n13, n14])/(-1 + n4) + 
   (n14*j[p4, n1, n2, n3, -1 + n4, n5, 1 + n6, n7, n8, -1 + n9, n10, n11, 
      n12, n13, 1 + n14])/(-1 + n4) + 
   ((-1 - d + n11 + 2*n12 - n14 - n3 + n4 + 2*n7 + n8 + n9)*
     j[p4, n1, n2, n3, -1 + n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, n13, 
      n14])/(-1 + n4) - (n14*j[p4, n1, n2, n3, -1 + n4, n5, 1 + n6, n7, n8, 
      n9, n10, n11, n12, n13, 1 + n14])/(-1 + n4) + 
   (n11*j[p4, n1, n2, n3, -1 + n4, n5, 1 + n6, n7, n8, n9, n10, 1 + n11, 
      -1 + n12, n13, n14])/(-1 + n4) - 
   (n11*j[p4, n1, n2, n3, -1 + n4, n5, 1 + n6, n7, n8, n9, n10, 1 + n11, n12, 
      n13, n14])/(-1 + n4) - (n9*j[p4, n1, n2, n3, -1 + n4, n5, 1 + n6, n7, 
      n8, 1 + n9, n10, n11, n12, n13, -1 + n14])/(-1 + n4) + 
   (n9*j[p4, n1, n2, n3, -1 + n4, n5, 1 + n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, n14])/(-1 + n4) + (n8*j[p4, n1, n2, n3, -1 + n4, n5, 1 + n6, n7, 
      1 + n8, n9, n10, n11, -1 + n12, n13, n14])/(-1 + n4) - 
   (n8*j[p4, n1, n2, n3, -1 + n4, n5, 1 + n6, n7, 1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n4) + 
   (n7*j[p4, n1, n2, n3, -1 + n4, n5, 1 + n6, 1 + n7, -1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n4) + 
   (n7*j[p4, n1, n2, n3, -1 + n4, n5, 1 + n6, 1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n4) + 
   ((-1 - n6)*j[p4, n1, n2, n3, -1 + n4, n5, 2 + n6, -1 + n7, n8, n9, n10, 
      n11, n12, n13, n14])/(-1 + n4) + 
   ((-1 - n6)*j[p4, n1, n2, n3, -1 + n4, n5, 2 + n6, n7, -1 + n8, n9, n10, 
      n11, n12, n13, n14])/(-1 + n4) + 
   ((1 + n6)*j[p4, n1, n2, n3, -1 + n4, n5, 2 + n6, n7, n8, -1 + n9, n10, 
      n11, n12, n13, n14])/(-1 + n4) + 
   ((-1 - n6)*j[p4, n1, n2, n3, -1 + n4, n5, 2 + n6, n7, n8, n9, -1 + n10, 
      n11, n12, n13, n14])/(-1 + n4) + 
   ((1 + n6)*j[p4, n1, n2, n3, -1 + n4, n5, 2 + n6, n7, n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n4) + 
   ((-1 - n6)*j[p4, n1, n2, n3, -1 + n4, n5, 2 + n6, n7, n8, n9, n10, n11, 
      n12, -1 + n13, n14])/(-1 + n4) + 
   ((-1 - n6)*j[p4, n1, n2, n3, -1 + n4, n5, 2 + n6, n7, n8, n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n4) + 
   (n5*j[p4, n1, n2, n3, -1 + n4, 1 + n5, 1 + n6, n7, n8, -1 + n9, n10, n11, 
      n12, n13, n14])/(-1 + n4) + 
   (n5*j[p4, n1, n2, n3, -1 + n4, 1 + n5, 1 + n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n4) - 
   (n5*j[p4, n1, n2, n3, -1 + n4, 1 + n5, 1 + n6, n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n4) - j[p4, n1, n2, n3, n4, -1 + n5, 1 + n6, n7, 
    n8, n9, n10, n11, n12, n13, n14] + j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, 
    n8, -1 + n9, n10, n11, n12, n13, n14] - j[p4, n1, n2, n3, n4, n5, 1 + n6, 
    n7, n8, n9, -1 + n10, n11, n12, n13, n14] + j[p4, n1, n2, n3, n4, n5, 
    1 + n6, n7, n8, n9, n10, -1 + n11, n12, n13, n14] + 
   (2*n3*j[p4, n1, n2, 1 + n3, -1 + n4, n5, 1 + n6, -1 + n7, n8, n9, n10, 
      n11, n12, n13, n14])/(-1 + n4) + 
   (2*n3*j[p4, n1, n2, 1 + n3, -1 + n4, n5, 1 + n6, n7, -1 + n8, n9, n10, 
      n11, n12, n13, n14])/(-1 + n4) - 
   (n3*j[p4, n1, n2, 1 + n3, -1 + n4, n5, 1 + n6, n7, n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n4), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n4 == 1 || n7 == 0) -> j[p4, n1, n2, -1 + n3, n4, n5, n6, 1 + n7, n8, 
    n9, n10, n11, n12, n13, n14] + ((-d + n1 + 2*n13 + n3 + n5 + n8)*
     j[p4, n1, n2, n3, -1 + n4, n5, n6, 1 + n7, n8, n9, n10, n11, n12, n13, 
      n14])/(-1 + n4) - (n8*j[p4, n1, n2, n3, -1 + n4, n5, n6, 1 + n7, 
      1 + n8, n9, n10, n11, -1 + n12, n13, n14])/(-1 + n4) + 
   (n8*j[p4, n1, n2, n3, -1 + n4, n5, n6, 1 + n7, 1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n4) + 
   (n5*j[p4, n1, n2, n3, -1 + n4, 1 + n5, n6, 1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n4) - 
   (n5*j[p4, n1, n2, n3, -1 + n4, 1 + n5, n6, 1 + n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n4) + j[p4, n1, n2, n3, n4, -1 + n5, n6, 1 + n7, 
    n8, n9, n10, n11, n12, n13, n14] - j[p4, n1, n2, n3, n4, n5, n6, 1 + n7, 
    n8, n9, n10, n11, n12, n13, -1 + n14] - 
   (n3*j[p4, n1, n2, 1 + n3, -1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, 
      n14])/(-1 + n4) + (n3*j[p4, n1, n2, 1 + n3, -1 + n4, n5, n6, 1 + n7, 
      n8, n9, n10, n11, n12, -1 + n13, n14])/(-1 + n4) - 
   (n2*j[p4, n1, 1 + n2, -1 + n3, -1 + n4, n5, n6, 1 + n7, n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n4) + 
   (n2*j[p4, n1, 1 + n2, n3, -1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, 
      n14])/(-1 + n4) + (n2*j[p4, n1, 1 + n2, n3, -1 + n4, n5, n6, 1 + n7, 
      -1 + n8, n9, n10, n11, n12, n13, n14])/(-1 + n4) - 
   (n2*j[p4, n1, 1 + n2, n3, -1 + n4, n5, n6, 1 + n7, n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n4) + 
   (2*n2*j[p4, n1, 1 + n2, n3, -1 + n4, n5, n6, 1 + n7, n8, n9, n10, n11, 
      n12, -1 + n13, n14])/(-1 + n4) + 
   (n1*j[p4, 1 + n1, n2, n3, -1 + n4, n5, n6, 1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n4) - 
   (n1*j[p4, 1 + n1, n2, n3, -1 + n4, n5, n6, 1 + n7, n8, n9, n10, n11, n12, 
      n13, n14])/(-1 + n4), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n12 == 1 || n6 == 0) -> 
  -(n11*j[p4, -1 + n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, 1 + n11, 
       -1 + n12, n13, n14])/(2*(-1 + n12)) + 
   j[p4, n1, -1 + n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, n13, 
     n14]/2 + (n11*j[p4, n1, -1 + n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, 
      1 + n11, -1 + n12, n13, n14])/(-1 + n12) + 
   (n8*j[p4, n1, -1 + n2, n3, n4, n5, 1 + n6, n7, 1 + n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(2*(-1 + n12)) + 
   (n7*j[p4, n1, -1 + n2, n3, n4, n5, 1 + n6, 1 + n7, n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(2*(-1 + n12)) + 
   (n3*j[p4, n1, -1 + n2, 1 + n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(2*(-1 + n12)) - 
   j[p4, n1, n2, -1 + n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, n13, 
     n14]/2 + j[p4, n1, n2, n3, -1 + n4, n5, 1 + n6, n7, n8, n9, n10, n11, 
    n12, n13, n14] + (n11*j[p4, n1, n2, n3, -1 + n4, n5, 1 + n6, n7, n8, n9, 
      n10, 1 + n11, -1 + n12, n13, n14])/(-1 + n12) + 
   (n8*j[p4, n1, n2, n3, -1 + n4, n5, 1 + n6, n7, 1 + n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n12) + 
   (n7*j[p4, n1, n2, n3, -1 + n4, n5, 1 + n6, 1 + n7, n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n12) - j[p4, n1, n2, n3, n4, -1 + n5, 
    1 + n6, n7, n8, n9, n10, n11, n12, n13, n14] - 
   (n11*j[p4, n1, n2, n3, n4, -1 + n5, 1 + n6, n7, n8, n9, n10, 1 + n11, 
      -1 + n12, n13, n14])/(-1 + n12) - 
   (n7*j[p4, n1, n2, n3, n4, -1 + n5, 1 + n6, 1 + n7, n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n12) - 
   (n11*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, 1 + n11, -1 + n12, 
      n13, n14])/(-1 + n12) - (n8*j[p4, n1, n2, n3, n4, n5, n6, n7, 1 + n8, 
      n9, n10, n11, -1 + n12, n13, n14])/(-1 + n12) - 
   (n11*j[p4, n1, n2, n3, n4, n5, 1 + n6, -1 + n7, n8, n9, n10, 1 + n11, 
      -1 + n12, n13, n14])/(2*(-1 + n12)) - 
   (n8*j[p4, n1, n2, n3, n4, n5, 1 + n6, -1 + n7, 1 + n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(2*(-1 + n12)) - 
   (n11*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, -1 + n8, n9, n10, 1 + n11, 
      -1 + n12, n13, n14])/(2*(-1 + n12)) + 
   (n11*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, -1 + n9, n10, 1 + n11, 
      -1 + n12, n13, n14])/(-1 + n12) - 
   (n11*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, -1 + n10, 1 + n11, 
      -1 + n12, n13, n14])/(2*(-1 + n12)) + 
   ((1 - n12 + n3 + 2*n4 - n7 - n8)*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 
      n9, n10, n11, -1 + n12, n13, n14])/(2*(-1 + n12)) + 
   j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, n13, 
    -1 + n14] - (n7*j[p4, n1, n2, n3, n4, n5, 1 + n6, 1 + n7, -1 + n8, n9, 
      n10, n11, -1 + n12, n13, n14])/(2*(-1 + n12)) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, -1 + n5, 1 + n6, n7, n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(2*(-1 + n12)) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, -1 + n12, n13, 
      n14])/(2*(-1 + n12)) - (n4*j[p4, n1, n2, n3, 1 + n4, n5, 1 + n6, 
      -1 + n7, n8, n9, n10, n11, -1 + n12, n13, n14])/(2*(-1 + n12)) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, 1 + n6, n7, -1 + n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(2*(-1 + n12)) + 
   (n3*j[p4, n1, n2, 1 + n3, -1 + n4, n5, 1 + n6, n7, n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n12) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, 1 + n6, -1 + n7, n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n12) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, 1 + n6, n7, -1 + n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n12) + 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, -2 + n12, 
      n13, n14])/(2*(-1 + n12)) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, -1 + n12, 
      n13, -1 + n14])/(-1 + n12), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n10 == 1 || n2 == 0) -> j[p4, -1 + n1, 1 + n2, n3, n4, n5, n6, n7, n8, 
    n9, n10, n11, n12, n13, n14] - 
   (n7*j[p4, n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, -1 + n10, n11, n12, n13, 
      n14])/(-1 + n10) - (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, 
      -1 + n10, n11, n12, n13, n14])/(-1 + n10) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, n13, 
      n14])/(-1 + n10) + (n6*j[p4, n1, 1 + n2, n3, n4, -1 + n5, 1 + n6, n7, 
      n8, n9, -1 + n10, n11, n12, n13, n14])/(-1 + n10) + 
   ((-1 + d - n10 - 2*n2 - n3 - n6 - n7)*j[p4, n1, 1 + n2, n3, n4, n5, n6, 
      n7, n8, n9, -1 + n10, n11, n12, n13, n14])/(-1 + n10) + 
   (n7*j[p4, n1, 1 + n2, n3, n4, n5, n6, 1 + n7, -1 + n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n4*j[p4, n1, 1 + n2, n3, 1 + n4, -1 + n5, n6, n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n4*j[p4, n1, 1 + n2, n3, 1 + n4, n5, -1 + n6, n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n4*j[p4, n1, 1 + n2, n3, 1 + n4, n5, n6, -1 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n4*j[p4, n1, 1 + n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (2*n3*j[p4, n1, 1 + n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, -1 + n10, 
      n11, n12, n13, n14])/(-1 + n10) - 
   (n3*j[p4, n1, 1 + n2, 1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, 
      -1 + n12, n13, n14])/(-1 + n10) + 
   (2*n3*j[p4, n1, 1 + n2, 1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, 
      n12, -1 + n13, n14])/(-1 + n10), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n14 == 1 || n3 == 0) -> 
  -((n9*j[p4, -1 + n1, n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
       n13, -1 + n14])/(-1 + n14)) + 
   (n9*j[p4, n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4, n1, -1 + n2, 1 + n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) + (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, 
      n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) + 
   j[p4, n1, n2, 1 + n3, -1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, 
    n14] + (n9*j[p4, n1, n2, 1 + n3, -1 + n4, n5, n6, n7, n8, 1 + n9, n10, 
      n11, n12, n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4, n1, n2, 1 + n3, -1 + n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n5*j[p4, n1, n2, 1 + n3, -1 + n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   ((1 - n14 + n4)*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, -1 + n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n9*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14) + (n9*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, 
      1 + n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4, n1, n2, 1 + n3, n4, n5, 1 + n6, -1 + n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (2*n6*j[p4, n1, n2, 1 + n3, n4, n5, 1 + n6, n7, -1 + n8, n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4, n1, n2, 1 + n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, -1 + n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4, n1, n2, 1 + n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4, n1, n2, 1 + n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14) - 
   (n5*j[p4, n1, n2, 1 + n3, n4, 1 + n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n5*j[p4, n1, n2, 1 + n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n14) - 
   (n5*j[p4, n1, n2, 1 + n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14) - (n4*j[p4, n1, n2, 1 + n3, 1 + n4, n5, n6, n7, 
      n8, n9, n10, n11, n12, n13, -2 + n14])/(-1 + n14), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n13 == 1 || n7 == 0) -> 
  -((n8*j[p4, n1, -1 + n2, n3, n4, n5, n6, 1 + n7, 1 + n8, n9, n10, n11, n12, 
       -1 + n13, n14])/(-1 + n13)) + j[p4, n1, n2, -1 + n3, n4, n5, n6, 
    1 + n7, n8, n9, n10, n11, n12, n13, n14] + 
   (n5*j[p4, n1, n2, n3, -1 + n4, 1 + n5, n6, 1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n8*j[p4, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) + ((1 - n13 - n2 + n3 + n4 - n5 + n8)*
     j[p4, n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) - (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, 
      n10, n11, n12, -1 + n13, n14])/(-1 + n13) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, -1 + n5, n6, 1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) + (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, 
      n10, n11, n12, -1 + n13, n14])/(-1 + n13) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, 1 + n7, n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) + (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, 1 + n7, 
      -1 + n8, n9, n10, n11, n12, -1 + n13, n14])/(-1 + n13) - 
   (n1*j[p4, 1 + n1, -1 + n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, -1 + n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, n12, 
      -1 + n13, n14])/(-1 + n13), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n4 == 1 || n8 == 0) -> 
  (n7*j[p4, n1, -1 + n2, n3, -1 + n4, n5, n6, 1 + n7, 1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n4) + 
   (n3*j[p4, n1, -1 + n2, 1 + n3, -1 + n4, n5, n6, n7, 1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n4) + 
   (n7*j[p4, n1, n2, -1 + n3, -1 + n4, n5, n6, 1 + n7, 1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n4) + j[p4, n1, n2, -1 + n3, n4, n5, n6, n7, 
    1 + n8, n9, n10, n11, n12, n13, n14] + 
   ((d - n11 - 2*n12 + n3 - n4 - 2*n7 - n8)*j[p4, n1, n2, n3, -1 + n4, n5, 
      n6, n7, 1 + n8, n9, n10, n11, n12, n13, n14])/(-1 + n4) - 
   (n11*j[p4, n1, n2, n3, -1 + n4, n5, n6, n7, 1 + n8, n9, n10, 1 + n11, 
      -1 + n12, n13, n14])/(-1 + n4) + 
   (n11*j[p4, n1, n2, n3, -1 + n4, n5, n6, n7, 1 + n8, n9, n10, 1 + n11, n12, 
      n13, n14])/(-1 + n4) + ((-1 - n8)*j[p4, n1, n2, n3, -1 + n4, n5, n6, 
      n7, 2 + n8, n9, n10, n11, -1 + n12, n13, n14])/(-1 + n4) + 
   ((1 + n8)*j[p4, n1, n2, n3, -1 + n4, n5, n6, n7, 2 + n8, n9, n10, n11, 
      n12, -1 + n13, n14])/(-1 + n4) - 
   (n7*j[p4, n1, n2, n3, -1 + n4, n5, n6, 1 + n7, n8, n9, n10, n11, n12, n13, 
      n14])/(-1 + n4) - (n7*j[p4, n1, n2, n3, -1 + n4, n5, n6, 1 + n7, 
      1 + n8, n9, n10, n11, n12, -1 + n13, n14])/(-1 + n4) + 
   j[p4, n1, n2, n3, n4, -1 + n5, n6, n7, 1 + n8, n9, n10, n11, n12, n13, 
    n14] + j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, 1 + n8, n9, n10, n11, n12, 
    n13, n14] - j[p4, n1, n2, n3, n4, n5, n6, -1 + n7, 1 + n8, n9, n10, n11, 
    n12, n13, n14] - j[p4, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, 
    n12, n13, -1 + n14] - (2*n3*j[p4, n1, n2, 1 + n3, -1 + n4, n5, n6, 
      -1 + n7, 1 + n8, n9, n10, n11, n12, n13, n14])/(-1 + n4) - 
   (2*n3*j[p4, n1, n2, 1 + n3, -1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      n13, n14])/(-1 + n4) + (n3*j[p4, n1, n2, 1 + n3, -1 + n4, n5, n6, n7, 
      1 + n8, n9, n10, n11, -1 + n12, n13, n14])/(-1 + n4), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n10 == 1 || n7 == 0) -> 
  ((1 + n7)*j[p4, n1, -1 + n2, n3, n4, n5, n6, 2 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n6*j[p4, n1, -1 + n2, n3, n4, n5, 1 + n6, 1 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n3*j[p4, n1, -1 + n2, 1 + n3, n4, n5, n6, 1 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   ((1 + n7)*j[p4, n1, n2, n3, -1 + n4, n5, n6, 2 + n7, n8, n9, -1 + n10, 
      n11, n12, n13, n14])/(-1 + n10) - 
   (n6*j[p4, n1, n2, n3, -1 + n4, n5, 1 + n6, 1 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   ((-1 - n7)*j[p4, n1, n2, n3, n4, -1 + n5, n6, 2 + n7, n8, n9, -1 + n10, 
      n11, n12, n13, n14])/(-1 + n10) + 
   (n6*j[p4, n1, n2, n3, n4, -1 + n5, 1 + n6, 1 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + j[p4, n1, n2, n3, n4, n5, -1 + n6, 1 + n7, 
    n8, n9, n10, n11, n12, n13, n14] - j[p4, n1, n2, n3, n4, n5, n6, 1 + n7, 
    n8, -1 + n9, n10, n11, n12, n13, n14] + 
   ((-2 + 2*n6 - 2*n7)*j[p4, n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, 
      -1 + n10, n11, n12, n13, n14])/(-1 + n10) + 
   j[p4, n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, n12, n13, 
    n14] + ((-1 - n7)*j[p4, n1, n2, n3, n4, n5, n6, 2 + n7, -1 + n8, n9, 
      -1 + n10, n11, n12, n13, n14])/(-1 + n10) + 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, 1 + n7, -1 + n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, -1 + n5, n6, 1 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, -1 + n6, 1 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, n13, 
      n14])/(-1 + n10) - (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, 1 + n7, 
      -1 + n8, n9, -1 + n10, n11, n12, n13, n14])/(-1 + n10) + 
   (n3*j[p4, n1, n2, 1 + n3, -1 + n4, n5, n6, 1 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (2*n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, 
      n13, n14])/(-1 + n10) - (2*n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, 1 + n7, 
      -1 + n8, n9, -1 + n10, n11, n12, n13, n14])/(-1 + n10) + 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, 1 + n7, n8, n9, -1 + n10, n11, 
      -1 + n12, n13, n14])/(-1 + n10) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, 1 + n7, n8, n9, -1 + n10, n11, n12, 
      n13, -1 + n14])/(-1 + n10) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, -1 + n5, n6, 1 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, -1 + n6, 1 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, n13, 
      n14])/(-1 + n10) + (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, 1 + n7, 
      -1 + n8, n9, -1 + n10, n11, n12, n13, n14])/(-1 + n10), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n14 == 1 || n5 == 0) -> 
  (n9*j[p4, n1, -1 + n2, n3, n4, 1 + n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4, n1, -1 + n2, n3, n4, 1 + n5, 1 + n6, n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - j[p4, n1, n2, -1 + n3, n4, 1 + n5, n6, n7, 
    n8, n9, n10, n11, n12, n13, n14] + j[p4, n1, n2, n3, -1 + n4, 1 + n5, n6, 
    n7, n8, n9, n10, n11, n12, n13, n14] + 
   (n9*j[p4, n1, n2, n3, -1 + n4, 1 + n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4, n1, n2, n3, -1 + n4, 1 + n5, 1 + n6, n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   ((1 + n5)*j[p4, n1, n2, n3, -1 + n4, 2 + n5, n6, n7, n8, n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) - (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 
      n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4, n1, n2, n3, n4, 1 + n5, n6, -1 + n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, -1 + n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, 
    n9, n10, n11, n12, -1 + n13, n14] + 
   ((-1 + n4 - n5)*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, 1 + n9, -1 + n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n9*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, 1 + n9, n10, -1 + n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4, n1, n2, n3, n4, 1 + n5, 1 + n6, n7, -1 + n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   ((-1 - n5)*j[p4, n1, n2, n3, n4, 2 + n5, n6, -1 + n7, n8, n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, 1 + n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n13 == 1 || n8 == 0) -> 
  ((-1 - n8)*j[p4, n1, -1 + n2, n3, n4, n5, n6, n7, 2 + n8, n9, n10, n11, 
      n12, -1 + n13, n14])/(-1 + n13) - 
   (n5*j[p4, n1, -1 + n2, n3, n4, 1 + n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n3*j[p4, n1, -1 + n2, 1 + n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + j[p4, n1, n2, -1 + n3, n4, n5, n6, n7, 
    1 + n8, n9, n10, n11, n12, n13, n14] + 
   (n4*j[p4, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - j[p4, n1, n2, n3, n4, n5, n6, -1 + n7, 
    1 + n8, n9, n10, n11, n12, n13, n14] + 
   ((1 + n8)*j[p4, n1, n2, n3, n4, n5, n6, -1 + n7, 2 + n8, n9, n10, n11, 
      n12, -1 + n13, n14])/(-1 + n13) + j[p4, n1, n2, n3, n4, n5, n6, n7, 
    1 + n8, n9, n10, n11, -1 + n12, n13, n14] + 
   ((-2*n2 + 2*n3)*j[p4, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, 
      n12, -1 + n13, n14])/(-1 + n13) + 
   ((-1 - n8)*j[p4, n1, n2, n3, n4, n5, n6, n7, 2 + n8, n9, n10, n11, 
      -1 + n12, -1 + n13, n14])/(-1 + n13) + 
   ((1 + n8)*j[p4, n1, n2, n3, n4, n5, n6, n7, 2 + n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) + 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, -1 + n6, n7, 1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) - 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n13) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, 1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) - (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, 1 + n8, 
      n9, n10, n11, n12, -1 + n13, -1 + n14])/(-1 + n13) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, 1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (2*n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, -1 + n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) - 
   (n2*j[p4, n1, 1 + n2, -1 + n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, -1 + n7, 1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) - (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, 1 + n8, 
      n9, n10, n11, -1 + n12, -1 + n13, n14])/(-1 + n13) + 
   (2*n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) - 
   (n1*j[p4, 1 + n1, -1 + n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, -1 + n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) - 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n12 == 1 || n7 == 0) -> 
  -((n11*j[p4, n1, -1 + n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, 1 + n11, 
       -1 + n12, n13, n14])/(-1 + n12)) + 
   ((-1 - n7)*j[p4, n1, -1 + n2, n3, n4, n5, n6, 2 + n7, n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n12) - 
   (n3*j[p4, n1, -1 + n2, 1 + n3, n4, n5, n6, 1 + n7, n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n12) + j[p4, n1, n2, -1 + n3, n4, n5, n6, 
    1 + n7, n8, n9, n10, n11, n12, n13, n14] - j[p4, n1, n2, n3, -1 + n4, n5, 
    n6, 1 + n7, n8, n9, n10, n11, n12, n13, n14] - 
   (n11*j[p4, n1, n2, n3, -1 + n4, n5, n6, 1 + n7, n8, n9, n10, 1 + n11, 
      -1 + n12, n13, n14])/(-1 + n12) - 
   (n8*j[p4, n1, n2, n3, -1 + n4, n5, n6, 1 + n7, 1 + n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n12) + 
   ((-1 - n7)*j[p4, n1, n2, n3, -1 + n4, n5, n6, 2 + n7, n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n12) + j[p4, n1, n2, n3, n4, -1 + n5, n6, 
    1 + n7, n8, n9, n10, n11, n12, n13, n14] + 
   (n11*j[p4, n1, n2, n3, n4, -1 + n5, n6, 1 + n7, n8, n9, n10, 1 + n11, 
      -1 + n12, n13, n14])/(-1 + n12) + 
   ((1 + n7)*j[p4, n1, n2, n3, n4, -1 + n5, n6, 2 + n7, n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n12) + j[p4, n1, n2, n3, n4, n5, -1 + n6, 
    1 + n7, n8, n9, n10, n11, n12, n13, n14] + 
   (n11*j[p4, n1, n2, n3, n4, n5, -1 + n6, 1 + n7, n8, n9, n10, 1 + n11, 
      -1 + n12, n13, n14])/(-1 + n12) + 
   (n8*j[p4, n1, n2, n3, n4, n5, -1 + n6, 1 + n7, 1 + n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n12) + 
   (n11*j[p4, n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, n9, n10, 1 + n11, 
      -1 + n12, n13, n14])/(-1 + n12) - 
   (n11*j[p4, n1, n2, n3, n4, n5, n6, 1 + n7, n8, -1 + n9, n10, 1 + n11, 
      -1 + n12, n13, n14])/(-1 + n12) + 
   (n11*j[p4, n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, -1 + n10, 1 + n11, 
      -1 + n12, n13, n14])/(-1 + n12) + 
   ((-1 + n12 - n3 - n4 + n8)*j[p4, n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, 
      n10, n11, -1 + n12, n13, n14])/(-1 + n12) - 
   j[p4, n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, n11, n12, -1 + n13, 
    n14] - j[p4, n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, n11, n12, n13, 
    -1 + n14] + ((1 + n7)*j[p4, n1, n2, n3, n4, n5, n6, 2 + n7, -1 + n8, n9, 
      n10, n11, -1 + n12, n13, n14])/(-1 + n12) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, -1 + n6, 1 + n7, n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n12) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, 1 + n7, -1 + n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n12) - 
   (n3*j[p4, n1, n2, 1 + n3, -1 + n4, n5, n6, 1 + n7, n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n12) + 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, -1 + n12, n13, 
      n14])/(-1 + n12) + (2*n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, 1 + n7, 
      -1 + n8, n9, n10, n11, -1 + n12, n13, n14])/(-1 + n12) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, 1 + n7, n8, n9, n10, n11, -2 + n12, 
      n13, n14])/(-1 + n12) + (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, 1 + n7, 
      n8, n9, n10, n11, -1 + n12, -1 + n13, n14])/(-1 + n12) + 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, 1 + n7, n8, n9, n10, n11, -1 + n12, 
      n13, -1 + n14])/(-1 + n12), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n10 == 1 || n6 == 0) -> 
  -((n7*j[p4, n1, -1 + n2, n3, n4, n5, 1 + n6, 1 + n7, n8, n9, -1 + n10, n11, 
       n12, n13, n14])/(-1 + n10)) - 
   (n3*j[p4, n1, -1 + n2, 1 + n3, n4, n5, 1 + n6, n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n7*j[p4, n1, n2, n3, -1 + n4, n5, 1 + n6, 1 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n7*j[p4, n1, n2, n3, n4, -1 + n5, 1 + n6, 1 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 
    -1 + n9, n10, n11, n12, n13, n14] + 
   ((-1 + d - n10 - n2 - n3 - n4 - 2*n6)*j[p4, n1, n2, n3, n4, n5, 1 + n6, 
      n7, n8, n9, -1 + n10, n11, n12, n13, n14])/(-1 + n10) + 
   (n7*j[p4, n1, n2, n3, n4, n5, 1 + n6, 1 + n7, -1 + n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, n13, 
      n14])/(-1 + n10) + (n4*j[p4, n1, n2, n3, 1 + n4, n5, 1 + n6, n7, 
      -1 + n8, n9, -1 + n10, n11, n12, n13, n14])/(-1 + n10) - 
   (n3*j[p4, n1, n2, 1 + n3, -1 + n4, n5, 1 + n6, n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, 1 + n6, -1 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (2*n3*j[p4, n1, n2, 1 + n3, n4, n5, 1 + n6, n7, -1 + n8, n9, -1 + n10, 
      n11, n12, n13, n14])/(-1 + n10) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, 1 + n6, n7, n8, n9, -1 + n10, n11, 
      -1 + n12, n13, n14])/(-1 + n10) + 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, 1 + n6, n7, n8, n9, -1 + n10, n11, n12, 
      -1 + n13, n14])/(-1 + n10) + 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, 1 + n6, n7, n8, n9, -1 + n10, n11, n12, 
      n13, -1 + n14])/(-1 + n10) + 
   (n2*j[p4, n1, 1 + n2, n3, n4, -1 + n5, 1 + n6, n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, n13, 
      n14])/(-1 + n10), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?NonPositive, (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, 
    (n7_)?NonPositive, (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n14 == 1 || n8 == 0) -> j[p4, n1, -1 + n2, n3, n4, n5, n6, n7, 1 + n8, 
    n9, n10, n11, n12, n13, n14] - 
   (n6*j[p4, n1, -1 + n2, n3, n4, n5, 1 + n6, n7, 1 + n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n5*j[p4, n1, -1 + n2, n3, n4, 1 + n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + j[p4, n1, n2, -1 + n3, n4, n5, n6, n7, 
    1 + n8, n9, n10, n11, n12, n13, n14] - 
   (n6*j[p4, n1, n2, -1 + n3, n4, n5, 1 + n6, n7, 1 + n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, 
    1 + n8, n9, n10, n11, n12, n13, n14] - 
   (n9*j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, 1 + n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - j[p4, n1, n2, n3, n4, n5, n6, -1 + n7, 
    1 + n8, n9, n10, n11, n12, n13, n14] + j[p4, n1, n2, n3, n4, n5, n6, n7, 
    1 + n8, n9, n10, n11, -1 + n12, n13, n14] - j[p4, n1, n2, n3, n4, n5, n6, 
    n7, 1 + n8, n9, n10, n11, n12, -1 + n13, n14] + 
   ((-1 + n14 - n6)*j[p4, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) + 
   (n9*j[p4, n1, n2, n3, n4, n5, n6, n7, 1 + n8, 1 + n9, -1 + n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n9*j[p4, n1, n2, n3, n4, n5, n6, n7, 1 + n8, 1 + n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14) - (n9*j[p4, n1, n2, n3, n4, n5, n6, n7, 1 + n8, 
      1 + n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, -1 + n7, 1 + n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) - 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, 1 + n8, n9, n10, n11, -1 + n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, 1 + n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, 1 + n8, n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14) - (n5*j[p4, n1, n2, n3, n4, 1 + n5, -1 + n6, n7, 
      1 + n8, n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) - 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n14) + 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, 1 + n8, n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14) - (n4*j[p4, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, 
      1 + n8, n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, 1 + n8, n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n13 == 1 || n5 == 0) -> 
  -((n8*j[p4, n1, -1 + n2, n3, n4, 1 + n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
       -1 + n13, n14])/(-1 + n13)) + 
   (n4*j[p4, n1, n2, -1 + n3, 1 + n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n8*j[p4, n1, n2, n3, -1 + n4, 1 + n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n8*j[p4, n1, n2, n3, n4, 1 + n5, -1 + n6, n7, 1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n8*j[p4, n1, n2, n3, n4, 1 + n5, n6, -1 + n7, 1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + ((-2 + n13 - n2 + n3 - n4 - n5 + n8)*
     j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) + j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, 
    n11, n12, n13, -1 + n14] - 
   (n8*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, 1 + n8, n9, n10, n11, -1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n8*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) + 
   ((1 + n5)*j[p4, n1, n2, n3, n4, 2 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) + 
   ((-1 - n5)*j[p4, n1, n2, n3, n4, 2 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n13) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n13) - 
   (n3*j[p4, n1, n2, 1 + n3, -1 + n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n3*j[p4, n1, n2, 1 + n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n13) - 
   (n2*j[p4, n1, 1 + n2, -1 + n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) + (n2*j[p4, n1, 1 + n2, n3, n4, 1 + n5, -1 + n6, n7, 
      n8, n9, n10, n11, n12, -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4, n1, 1 + n2, n3, n4, 1 + n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4, n1, 1 + n2, n3, n4, 1 + n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, -1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (2*n2*j[p4, n1, 1 + n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) - 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) + (n1*j[p4, 1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, 
      -1 + n9, n10, n11, n12, -1 + n13, n14])/(-1 + n13) + 
   (n1*j[p4, 1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) - 
   (n1*j[p4, 1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n12 == 1 || n8 == 0) -> j[p4, n1, -1 + n2, n3, n4, n5, n6, n7, 1 + n8, 
    n9, n10, n11, n12, n13, n14] + 
   (n11*j[p4, n1, -1 + n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, 1 + n11, 
      -1 + n12, n13, n14])/(-1 + n12) + 
   ((1 + n8)*j[p4, n1, -1 + n2, n3, n4, n5, n6, n7, 2 + n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n12) - 
   (n7*j[p4, n1, n2, -1 + n3, n4, n5, n6, 1 + n7, 1 + n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n12) - 
   (n4*j[p4, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, 1 + n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n12) + j[p4, n1, n2, n3, -1 + n4, n5, n6, 
    n7, 1 + n8, n9, n10, n11, n12, n13, n14] + 
   (n11*j[p4, n1, n2, n3, -1 + n4, n5, n6, n7, 1 + n8, n9, n10, 1 + n11, 
      -1 + n12, n13, n14])/(-1 + n12) + 
   ((1 + n8)*j[p4, n1, n2, n3, -1 + n4, n5, n6, n7, 2 + n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n12) + 
   (n7*j[p4, n1, n2, n3, -1 + n4, n5, n6, 1 + n7, 1 + n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n12) - j[p4, n1, n2, n3, n4, -1 + n5, n6, 
    n7, 1 + n8, n9, n10, n11, n12, n13, n14] - 
   (n11*j[p4, n1, n2, n3, n4, -1 + n5, n6, n7, 1 + n8, n9, n10, 1 + n11, 
      -1 + n12, n13, n14])/(-1 + n12) - 
   (n7*j[p4, n1, n2, n3, n4, -1 + n5, n6, 1 + n7, 1 + n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n12) - j[p4, n1, n2, n3, n4, n5, -1 + n6, 
    n7, 1 + n8, n9, n10, n11, n12, n13, n14] - 
   (n11*j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, 1 + n8, n9, n10, 1 + n11, 
      -1 + n12, n13, n14])/(-1 + n12) + 
   ((-1 - n8)*j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, 2 + n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n12) - j[p4, n1, n2, n3, n4, n5, n6, 
    -1 + n7, 1 + n8, n9, n10, n11, n12, n13, n14] - 
   (n11*j[p4, n1, n2, n3, n4, n5, n6, -1 + n7, 1 + n8, n9, n10, 1 + n11, 
      -1 + n12, n13, n14])/(-1 + n12) + 
   ((-1 - n8)*j[p4, n1, n2, n3, n4, n5, n6, -1 + n7, 2 + n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n12) - 
   (n11*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, 1 + n11, -1 + n12, 
      n13, n14])/(-1 + n12) + (n11*j[p4, n1, n2, n3, n4, n5, n6, n7, 1 + n8, 
      -1 + n9, n10, 1 + n11, -1 + n12, n13, n14])/(-1 + n12) + 
   ((-2 + n12 - n3 + n4 - n8)*j[p4, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, 
      n10, n11, -1 + n12, n13, n14])/(-1 + n12) + 
   j[p4, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, n12, n13, 
    -1 + n14] + (n11*j[p4, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, 
      1 + n11, -2 + n12, n13, n14])/(-1 + n12) - 
   (n11*j[p4, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, 1 + n11, -1 + n12, 
      n13, n14])/(-1 + n12) + ((1 + n8)*j[p4, n1, n2, n3, n4, n5, n6, n7, 
      2 + n8, n9, n10, n11, -2 + n12, n13, n14])/(-1 + n12) + 
   ((-1 - n8)*j[p4, n1, n2, n3, n4, n5, n6, n7, 2 + n8, n9, n10, n11, 
      -1 + n12, -1 + n13, n14])/(-1 + n12) + 
   (n7*j[p4, n1, n2, n3, n4, n5, n6, 1 + n7, 1 + n8, n9, n10, n11, -1 + n12, 
      -1 + n13, n14])/(-1 + n12) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, 1 + n8, n9, n10, n11, -1 + n12, 
      n13, -1 + n14])/(-1 + n12) + 
   (n3*j[p4, n1, n2, 1 + n3, -1 + n4, n5, n6, n7, 1 + n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n12) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, -1 + n12, 
      n13, -1 + n14])/(-1 + n12), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n10 == 1 || n8 == 0) -> j[p4, n1, -1 + n2, n3, n4, n5, n6, n7, 1 + n8, 
    n9, n10, n11, n12, n13, n14] + 
   (n6*j[p4, n1, -1 + n2, n3, n4, n5, 1 + n6, n7, 1 + n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + j[p4, n1, n2, -1 + n3, n4, n5, n6, n7, 
    1 + n8, n9, n10, n11, n12, n13, n14] + 
   (n7*j[p4, n1, n2, -1 + n3, n4, n5, n6, 1 + n7, 1 + n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n6*j[p4, n1, n2, -1 + n3, n4, n5, 1 + n6, n7, 1 + n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n4*j[p4, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, 1 + n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n7*j[p4, n1, n2, n3, -1 + n4, n5, n6, 1 + n7, 1 + n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n7*j[p4, n1, n2, n3, n4, -1 + n5, n6, 1 + n7, 1 + n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, 
    1 + n8, n9, n10, n11, n12, n13, n14] - j[p4, n1, n2, n3, n4, n5, n6, 
    -1 + n7, 1 + n8, n9, n10, n11, n12, n13, n14] + 
   j[p4, n1, n2, n3, n4, n5, n6, n7, 1 + n8, -1 + n9, n10, n11, n12, n13, 
    n14] + ((n2 + n3 - n4 - n6)*j[p4, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, 
      -1 + n10, n11, n12, n13, n14])/(-1 + n10) + 
   j[p4, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, -1 + n12, n13, 
    n14] - j[p4, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
    -1 + n13, n14] - j[p4, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, 
    n12, n13, n14] - (n7*j[p4, n1, n2, n3, n4, n5, n6, 1 + n7, 1 + n8, n9, 
      -1 + n10, n11, n12, -1 + n13, n14])/(-1 + n10) - 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, -1 + n7, 1 + n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, -1 + n10, n11, n12, n13, 
      n14])/(-1 + n10) + (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, 1 + n8, 
      n9, -1 + n10, n11, -1 + n12, n13, n14])/(-1 + n10) - 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, 1 + n8, n9, -1 + n10, n11, n12, 
      -1 + n13, n14])/(-1 + n10) - 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, 1 + n8, n9, -1 + n10, n11, n12, 
      n13, -1 + n14])/(-1 + n10) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, 1 + n8, n9, -1 + n10, n11, n12, 
      n13, -1 + n14])/(-1 + n10) - 
   (n3*j[p4, n1, n2, 1 + n3, -1 + n4, n5, n6, n7, 1 + n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, 1 + n8, n9, -1 + n10, n11, n12, 
      n13, -1 + n14])/(-1 + n10) + 
   (n2*j[p4, n1, 1 + n2, -1 + n3, n4, n5, n6, n7, 1 + n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n2*j[p4, n1, 1 + n2, n3, n4, -1 + n5, n6, n7, 1 + n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, -1 + n6, n7, 1 + n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, -1 + n7, 1 + n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, n13, 
      n14])/(-1 + n10) + (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, 1 + n8, 
      n9, -1 + n10, n11, -1 + n12, n13, n14])/(-1 + n10) - 
   (2*n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, 1 + n8, n9, -1 + n10, n11, 
      n12, -1 + n13, n14])/(-1 + n10), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n3 == 0 || n4 == 1) -> 
  -((n6*j[p4, n1, -1 + n2, 1 + n3, -1 + n4, n5, 1 + n6, n7, n8, n9, n10, n11, 
       n12, n13, n14])/(-1 + n4)) - 
   (n6*j[p4, n1, n2, n3, -1 + n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, n13, 
      n14])/(-1 + n4) + ((-1 - d + 2*n14 + n4 + n5 + n6 + n9)*
     j[p4, n1, n2, 1 + n3, -1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, 
      n14])/(-1 + n4) + (n9*j[p4, n1, n2, 1 + n3, -1 + n4, n5, n6, n7, n8, 
      1 + n9, n10, n11, n12, n13, -1 + n14])/(-1 + n4) - 
   (n9*j[p4, n1, n2, 1 + n3, -1 + n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, n14])/(-1 + n4) + (n6*j[p4, n1, n2, 1 + n3, -1 + n4, n5, 1 + n6, 
      -1 + n7, n8, n9, n10, n11, n12, n13, n14])/(-1 + n4) + 
   (n6*j[p4, n1, n2, 1 + n3, -1 + n4, n5, 1 + n6, n7, -1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n4) - 
   (n6*j[p4, n1, n2, 1 + n3, -1 + n4, n5, 1 + n6, n7, n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n4) + 
   (n6*j[p4, n1, n2, 1 + n3, -1 + n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n4) + 
   (n6*j[p4, n1, n2, 1 + n3, -1 + n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n4) - 
   (n5*j[p4, n1, n2, 1 + n3, -1 + n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n4) + 
   (n5*j[p4, n1, n2, 1 + n3, -1 + n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n4) + j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, 
    n9, n10, n11, n12, n13, -1 + n14], 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n12 == 1 && n13 == 1 && n14 == 1 && n4 == 1 && 
     !(n11 == 1 || n8 == 0) -> 
  (n8*j[p4, -1 + n1, n2, n3, 1, n5, n6, n7, 1 + n8, n9, 1, -1 + n11, 1, 1, 
      1])/(-1 + n11) + j[p4, -1 + n1, n2, n3, 1, n5, n6, n7, 1 + n8, n9, 1, 
    n11, 1, 1, 1] + (n2*j[p4, -1 + n1, 1 + n2, n3, 1, n5, n6, n7, n8, n9, 1, 
      -1 + n11, 1, 1, 1])/(-1 + n11) + 
   (n6*j[p4, n1, -1 + n2, n3, 1, n5, 1 + n6, n7, n8, n9, 1, -1 + n11, 1, 1, 
      1])/(-1 + n11) - (n7*j[p4, n1, n2, -1 + n3, 1, n5, n6, 1 + n7, 1 + n8, 
      n9, 1, -1 + n11, 1, 1, 1])/(-1 + n11) + 
   (n6*j[p4, n1, n2, -1 + n3, 1, n5, 1 + n6, n7, n8, n9, 1, -1 + n11, 1, 1, 
      1])/(-1 + n11) + j[p4, n1, n2, -1 + n3, 2, n5, n6, n7, 1 + n8, n9, 1, 
     -1 + n11, 1, 1, 1]/(1 - n11) + j[p4, n1, n2, n3, 1, n5, n6, n7, n8, n9, 
     1, -2 + n11, 2, 1, 1]/(1 - n11) + 
   ((-7 + 4*d - n1 - 2*n11 - n2 - 2*n3 - 2*n5 - 2*n6 - 2*n7 - 2*n8 - n9)*
     j[p4, n1, n2, n3, 1, n5, n6, n7, n8, n9, 1, -1 + n11, 1, 1, 1])/
    (-1 + n11) - (n9*j[p4, n1, n2, n3, 1, n5, n6, n7, n8, 1 + n9, 1, 
      -1 + n11, 1, 1, 0])/(-1 + n11) + 
   (n9*j[p4, n1, n2, n3, 1, n5, n6, n7, n8, 1 + n9, 1, -1 + n11, 1, 1, 1])/
    (-1 + n11) - (n8*j[p4, n1, n2, n3, 1, n5, n6, n7, 1 + n8, n9, 1, 
      -2 + n11, 1, 1, 1])/(-1 + n11) + 
   (n8*j[p4, n1, n2, n3, 1, n5, n6, n7, 1 + n8, n9, 1, -1 + n11, 0, 1, 1])/
    (-1 + n11) - (n8*j[p4, n1, n2, n3, 1, n5, n6, n7, 1 + n8, n9, 1, 
      -1 + n11, 1, 0, 1])/(-1 + n11) + 
   ((-n3 + n7 - n8)*j[p4, n1, n2, n3, 1, n5, n6, n7, 1 + n8, n9, 1, -1 + n11, 
      1, 1, 1])/(-1 + n11) + j[p4, n1, n2, n3, 1, n5, n6, n7, 1 + n8, n9, 1, 
     -1 + n11, 2, 0, 1]/(-1 + n11) + j[p4, n1, n2, n3, 1, n5, n6, n7, 1 + n8, 
    n9, 1, n11, 0, 1, 1] - j[p4, n1, n2, n3, 1, n5, n6, n7, 1 + n8, n9, 1, 
    n11, 1, 1, 1] + ((1 + n8)*j[p4, n1, n2, n3, 1, n5, n6, n7, 2 + n8, n9, 1, 
      -1 + n11, 0, 1, 1])/(-1 + n11) + 
   ((-1 - n8)*j[p4, n1, n2, n3, 1, n5, n6, n7, 2 + n8, n9, 1, -1 + n11, 1, 0, 
      1])/(-1 + n11) + (n7*j[p4, n1, n2, n3, 1, n5, n6, 1 + n7, 1 + n8, n9, 
      1, -1 + n11, 1, 0, 1])/(-1 + n11) - 
   (n6*j[p4, n1, n2, n3, 1, n5, 1 + n6, -1 + n7, n8, n9, 1, -1 + n11, 1, 1, 
      1])/(-1 + n11) - (n6*j[p4, n1, n2, n3, 1, n5, 1 + n6, n7, -1 + n8, n9, 
      1, -1 + n11, 1, 1, 1])/(-1 + n11) + 
   (n6*j[p4, n1, n2, n3, 1, n5, 1 + n6, n7, n8, -1 + n9, 1, -1 + n11, 1, 1, 
      1])/(-1 + n11) - (n6*j[p4, n1, n2, n3, 1, n5, 1 + n6, n7, n8, n9, 0, 
      -1 + n11, 1, 1, 1])/(-1 + n11) + 
   (n6*j[p4, n1, n2, n3, 1, n5, 1 + n6, n7, n8, n9, 1, -1 + n11, 0, 1, 1])/
    (-1 + n11) - (n6*j[p4, n1, n2, n3, 1, n5, 1 + n6, n7, n8, n9, 1, 
      -1 + n11, 1, 0, 1])/(-1 + n11) - 
   (n6*j[p4, n1, n2, n3, 1, n5, 1 + n6, n7, n8, n9, 1, -1 + n11, 1, 1, 0])/
    (-1 + n11) + j[p4, n1, n2, n3, 2, -1 + n5, n6, n7, 1 + n8, n9, 1, 
     -1 + n11, 1, 1, 1]/(1 - n11) + j[p4, n1, n2, n3, 2, n5, n6, -1 + n7, 
     1 + n8, n9, 1, -1 + n11, 1, 1, 1]/(-1 + n11) + 
   j[p4, n1, n2, n3, 2, n5, n6, n7, 1 + n8, n9, 1, -1 + n11, 1, 1, 0]/
    (-1 + n11) + (n3*j[p4, n1, n2, 1 + n3, 1, n5, n6, -1 + n7, 1 + n8, n9, 1, 
      -1 + n11, 1, 1, 1])/(-1 + n11) - 
   (n3*j[p4, n1, n2, 1 + n3, 1, n5, n6, n7, 1 + n8, n9, 1, -1 + n11, 1, 0, 
      1])/(-1 + n11) + (n2*j[p4, n1, 1 + n2, -1 + n3, 1, n5, n6, n7, n8, n9, 
      1, -1 + n11, 1, 1, 1])/(-1 + n11) - 
   (n2*j[p4, n1, 1 + n2, n3, 1, n5, n6, -1 + n7, n8, n9, 1, -1 + n11, 1, 1, 
      1])/(-1 + n11) - (n2*j[p4, n1, 1 + n2, n3, 1, n5, n6, n7, -1 + n8, n9, 
      1, -1 + n11, 1, 1, 1])/(-1 + n11) - 
   (n2*j[p4, n1, 1 + n2, n3, 1, n5, n6, n7, n8, n9, 0, -1 + n11, 1, 1, 1])/
    (-1 + n11) + (n2*j[p4, n1, 1 + n2, n3, 1, n5, n6, n7, n8, n9, 1, 
      -1 + n11, 0, 1, 1])/(-1 + n11) - 
   (2*n2*j[p4, n1, 1 + n2, n3, 1, n5, n6, n7, n8, n9, 1, -1 + n11, 1, 0, 1])/
    (-1 + n11) - (n1*j[p4, 1 + n1, n2, n3, 1, n5, n6, n7, n8, n9, 1, 
      -1 + n11, 1, 0, 1])/(-1 + n11) + 
   (n1*j[p4, 1 + n1, n2, n3, 1, n5, n6, n7, n8, n9, 1, -1 + n11, 1, 1, 1])/
    (-1 + n11), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?NonPositive, (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, 
    (n7_)?NonPositive, (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n12 == 1 && n13 == 1 && n14 == 1 && n4 == 1 && n8 == 0 && 
     !(n11 == 1 || n7 == 0) -> 
  ((-1 + n6 - n7)*j[p4, n1, n2, -1 + n3, 1, n5, n6, 1 + n7, 0, n9, 1, 
      -1 + n11, 1, 1, 1])/(-1 + n11) + 
   ((1 - n6 + n7)*j[p4, n1, n2, n3, 0, n5, n6, 1 + n7, 0, n9, 1, -1 + n11, 1, 
      1, 1])/(-1 + n11) + ((-1 + n6 - n7)*j[p4, n1, n2, n3, 1, -1 + n5, n6, 
      1 + n7, 0, n9, 1, -1 + n11, 1, 1, 1])/(-1 + n11) + 
   ((-8 + 3*d - n1 - n2 - 2*n3 - 2*n5 - n6 - 2*n7 - n9)*
     j[p4, n1, n2, n3, 1, n5, -1 + n6, 1 + n7, 0, n9, 1, -1 + n11, 1, 1, 1])/
    (-1 + n11) + j[p4, n1, n2, n3, 1, n5, -1 + n6, 1 + n7, 0, n9, 2, 
     -2 + n11, 1, 1, 1]/(-1 + n11) - 
   (n9*j[p4, n1, n2, n3, 1, n5, -1 + n6, 1 + n7, 0, 1 + n9, 1, -1 + n11, 1, 
      1, 0])/(-1 + n11) + (n9*j[p4, n1, n2, n3, 1, n5, -1 + n6, 1 + n7, 0, 
      1 + n9, 1, -1 + n11, 1, 1, 1])/(-1 + n11) + 
   j[p4, n1, n2, n3, 1, n5, n6, n7, 0, -1 + n9, 2, -1 + n11, 1, 1, 1]/
    (1 - n11) + ((7 - 3*d + n1 + n11 + n2 + n3 + n5 + n6 + 2*n7)*
     j[p4, n1, n2, n3, 1, n5, n6, n7, 0, n9, 1, -1 + n11, 1, 1, 1])/
    (-1 + n11) + j[p4, n1, n2, n3, 1, n5, n6, n7, 0, n9, 1, n11, 0, 1, 1] + 
   ((-1 + n6)*j[p4, n1, n2, n3, 1, n5, n6, 1 + n7, 0, n9, 1, -1 + n11, 0, 1, 
      1])/(-1 + n11) + ((1 - n6 + n7)*j[p4, n1, n2, n3, 1, n5, n6, 1 + n7, 0, 
      n9, 1, -1 + n11, 1, 0, 1])/(-1 + n11) + 
   ((1 - n6)*j[p4, n1, n2, n3, 1, n5, n6, 1 + n7, 0, n9, 1, -1 + n11, 1, 1, 
      0])/(-1 + n11) + (n5*j[p4, n1, n2, n3, 1, 1 + n5, n6, n7, 0, n9, 1, 
      -1 + n11, 1, 0, 1])/(-1 + n11) - 
   (n5*j[p4, n1, n2, n3, 1, 1 + n5, n6, n7, 0, n9, 1, -1 + n11, 1, 1, 0])/
    (-1 + n11) + (n3*j[p4, n1, n2, 1 + n3, 0, n5, n6, n7, 0, n9, 1, -1 + n11, 
      1, 1, 1])/(-1 + n11) - (n3*j[p4, n1, n2, 1 + n3, 1, n5, n6, n7, 0, n9, 
      1, -1 + n11, 1, 1, 0])/(-1 + n11) + 
   (n2*j[p4, n1, 1 + n2, -1 + n3, 1, n5, -1 + n6, 1 + n7, 0, n9, 1, -1 + n11, 
      1, 1, 1])/(-1 + n11) - (n2*j[p4, n1, 1 + n2, -1 + n3, 1, n5, n6, n7, 0, 
      n9, 1, -1 + n11, 1, 1, 1])/(-1 + n11) - 
   (n2*j[p4, n1, 1 + n2, n3, 1, -1 + n5, n6, n7, 0, n9, 1, -1 + n11, 1, 1, 
      1])/(-1 + n11) - (n2*j[p4, n1, 1 + n2, n3, 1, n5, -1 + n6, n7, 0, n9, 
      1, -1 + n11, 1, 1, 1])/(-1 + n11) + 
   (n2*j[p4, n1, 1 + n2, n3, 1, n5, -1 + n6, 1 + n7, 0, n9, 1, -1 + n11, 0, 
      1, 1])/(-1 + n11) - (2*n2*j[p4, n1, 1 + n2, n3, 1, n5, -1 + n6, 1 + n7, 
      0, n9, 1, -1 + n11, 1, 0, 1])/(-1 + n11) + 
   (n2*j[p4, n1, 1 + n2, n3, 1, n5, n6, -1 + n7, 0, n9, 1, -1 + n11, 1, 1, 
      1])/(-1 + n11) + (n2*j[p4, n1, 1 + n2, n3, 1, n5, n6, n7, -1, n9, 1, 
      -1 + n11, 1, 1, 1])/(-1 + n11) - 
   (n2*j[p4, n1, 1 + n2, n3, 1, n5, n6, n7, 0, n9, 1, -1 + n11, 0, 1, 1])/
    (-1 + n11) + (2*n2*j[p4, n1, 1 + n2, n3, 1, n5, n6, n7, 0, n9, 1, 
      -1 + n11, 1, 0, 1])/(-1 + n11) - 
   (n1*j[p4, 1 + n1, n2, n3, 1, n5, -1 + n6, 1 + n7, 0, n9, 1, -1 + n11, 1, 
      0, 1])/(-1 + n11) + (n1*j[p4, 1 + n1, n2, n3, 1, n5, -1 + n6, 1 + n7, 
      0, n9, 1, -1 + n11, 1, 1, 1])/(-1 + n11) + 
   (n1*j[p4, 1 + n1, n2, n3, 1, n5, n6, n7, 0, n9, 1, -1 + n11, 1, 0, 1])/
    (-1 + n11) - (n1*j[p4, 1 + n1, n2, n3, 1, n5, n6, n7, 0, n9, 1, -1 + n11, 
      1, 1, 1])/(-1 + n11), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 1 && n13 == 1 && n14 == 1 && n4 == 1 && 
     !(n5 == 0 || n8 == 0 || n9 == 1) -> 
  -j[p4, -1 + n1, n2, -1 + n3, 1, 1 + n5, n6, n7, 1 + n8, n9, 1, 1, 1, 1, 
     1] - j[p4, -1 + n1, n2, n3, 1, n5, n6, n7, 1 + n8, n9, 1, 1, 1, 1, 1] + 
   j[p4, n1, -1 + n2, n3, 1, n5, n6, n7, 1 + n8, n9, 1, 1, 1, 1, 1] + 
   (n6*j[p4, n1, -1 + n2, n3, 1, n5, 1 + n6, n7, 1 + n8, -1 + n9, 1, 1, 1, 1, 
      1])/(-1 + n9) + (n6*j[p4, n1, n2, -2 + n3, 1, 1 + n5, 1 + n6, n7, 
      1 + n8, -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) + 
   j[p4, n1, n2, -2 + n3, 2, 1 + n5, n6, n7, 1 + n8, -1 + n9, 1, 1, 1, 1, 1]/
    (-1 + n9) + j[p4, n1, n2, -1 + n3, 1, n5, n6, n7, 1 + n8, n9, 1, 1, 1, 1, 
    1] + (2*n6*j[p4, n1, n2, -1 + n3, 1, n5, 1 + n6, n7, 1 + n8, -1 + n9, 1, 
      1, 1, 1, 1])/(-1 + n9) + j[p4, n1, n2, -1 + n3, 1, 1 + n5, n6, n7, 
     1 + n8, -1 + n9, 1, 1, 1, 0, 2]/(1 - n9) + 
   (n5*j[p4, n1, n2, -1 + n3, 1, 1 + n5, n6, n7, 1 + n8, -1 + n9, 1, 1, 1, 1, 
      1])/(-1 + n9) - j[p4, n1, n2, -1 + n3, 1, 1 + n5, n6, n7, 1 + n8, n9, 
    1, 1, 1, 1, 0] + j[p4, n1, n2, -1 + n3, 1, 1 + n5, n6, n7, 1 + n8, n9, 1, 
    1, 1, 1, 1] - (n6*j[p4, n1, n2, -1 + n3, 1, 1 + n5, 1 + n6, -1 + n7, 
      1 + n8, -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) - 
   (n6*j[p4, n1, n2, -1 + n3, 1, 1 + n5, 1 + n6, n7, n8, -1 + n9, 1, 1, 1, 1, 
      1])/(-1 + n9) + (n6*j[p4, n1, n2, -1 + n3, 1, 1 + n5, 1 + n6, n7, 
      1 + n8, -1 + n9, 1, 1, 0, 1, 1])/(-1 + n9) - 
   (n6*j[p4, n1, n2, -1 + n3, 1, 1 + n5, 1 + n6, n7, 1 + n8, -1 + n9, 1, 1, 
      1, 0, 1])/(-1 + n9) - (n6*j[p4, n1, n2, -1 + n3, 1, 1 + n5, 1 + n6, n7, 
      1 + n8, -1 + n9, 1, 1, 1, 1, 0])/(-1 + n9) + 
   ((1 + n5)*j[p4, n1, n2, -1 + n3, 1, 2 + n5, n6, n7, 1 + n8, -1 + n9, 1, 1, 
      1, 0, 1])/(-1 + n9) + ((-1 - n5)*j[p4, n1, n2, -1 + n3, 1, 2 + n5, n6, 
      n7, 1 + n8, -1 + n9, 1, 1, 1, 1, 0])/(-1 + n9) + 
   (2*j[p4, n1, n2, -1 + n3, 2, n5, n6, n7, 1 + n8, -1 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9) + j[p4, n1, n2, -1 + n3, 2, 1 + n5, n6, -1 + n7, 1 + n8, 
     -1 + n9, 1, 1, 1, 1, 1]/(1 - n9) + 
   j[p4, n1, n2, -1 + n3, 2, 1 + n5, n6, n7, 1 + n8, -1 + n9, 1, 1, 1, 1, 0]/
    (1 - n9) + j[p4, n1, n2, n3, 0, n5, n6, n7, 1 + n8, -1 + n9, 1, 1, 1, 1, 
     2]/(-1 + n9) + j[p4, n1, n2, n3, 0, n5, n6, n7, 1 + n8, n9, 1, 1, 1, 1, 
    1] + (n6*j[p4, n1, n2, n3, 0, n5, 1 + n6, n7, 1 + n8, -1 + n9, 1, 1, 1, 
      1, 1])/(-1 + n9) + (n5*j[p4, n1, n2, n3, 0, 1 + n5, n6, n7, 1 + n8, 
      -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) - j[p4, n1, n2, n3, 1, n5, n6, 
    -1 + n7, 1 + n8, n9, 1, 1, 1, 1, 1] - j[p4, n1, n2, n3, 1, n5, n6, n7, 
    1 + n8, n9, 0, 1, 1, 1, 1] + j[p4, n1, n2, n3, 1, n5, n6, n7, 1 + n8, n9, 
    1, 0, 1, 1, 1] - j[p4, n1, n2, n3, 1, n5, n6, n7, 1 + n8, n9, 1, 1, 1, 1, 
    0] + j[p4, n1, n2, n3, 1, n5, n6, n7, 1 + n8, n9, 1, 1, 1, 1, 1] - 
   (n6*j[p4, n1, n2, n3, 1, n5, 1 + n6, -1 + n7, 1 + n8, -1 + n9, 1, 1, 1, 1, 
      1])/(-1 + n9) - (2*n6*j[p4, n1, n2, n3, 1, n5, 1 + n6, n7, n8, -1 + n9, 
      1, 1, 1, 1, 1])/(-1 + n9) + 
   (n6*j[p4, n1, n2, n3, 1, n5, 1 + n6, n7, 1 + n8, -1 + n9, 1, 1, 0, 1, 1])/
    (-1 + n9) - (n6*j[p4, n1, n2, n3, 1, n5, 1 + n6, n7, 1 + n8, -1 + n9, 1, 
      1, 1, 0, 1])/(-1 + n9) - 
   (n6*j[p4, n1, n2, n3, 1, n5, 1 + n6, n7, 1 + n8, -1 + n9, 1, 1, 1, 1, 0])/
    (-1 + n9) - (n5*j[p4, n1, n2, n3, 1, 1 + n5, n6, -1 + n7, 1 + n8, 
      -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) + 
   (n5*j[p4, n1, n2, n3, 1, 1 + n5, n6, n7, 1 + n8, -1 + n9, 1, 1, 1, 0, 1])/
    (-1 + n9) - (n5*j[p4, n1, n2, n3, 1, 1 + n5, n6, n7, 1 + n8, -1 + n9, 1, 
      1, 1, 1, 0])/(-1 + n9) + j[p4, n1, n2, n3, 2, n5, n6, n7, 1 + n8, 
     -1 + n9, 1, 1, 1, 1, 0]/(1 - n9), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n12 == 1 && n13 == 1 && n14 == 1 && n4 == 1 && n7 == 0 && 
    n8 == 0 &&  !(n11 == 1 || n5 == 0) -> 
  -((n5*j[p4, -1 + n1, n2, n3, 1, 1 + n5, n6, 0, 0, n9, 1, -1 + n11, 1, 1, 
       1])/(-1 + n11)) - (n9*j[p4, -1 + n1, n2, n3, 1, 1 + n5, n6, 0, 0, 
      1 + n9, 1, -1 + n11, 1, 1, 1])/(-1 + n11) + 
   (n3*j[p4, -1 + n1, n2, 1 + n3, 1, n5, n6, 0, 0, n9, 1, -1 + n11, 1, 1, 1])/
    (-1 + n11) - (n2*j[p4, -1 + n1, 1 + n2, n3, 1, n5, n6, 0, 0, n9, 1, 
      -1 + n11, 1, 1, 1])/(-1 + n11) - 
   (n3*j[p4, n1, -1 + n2, 1 + n3, 1, n5, n6, 0, 0, n9, 1, -1 + n11, 1, 1, 1])/
    (-1 + n11) + (n6*j[p4, n1, n2, -1 + n3, 1, 1 + n5, 1 + n6, 0, 0, n9, 1, 
      -1 + n11, 1, 1, 1])/(-1 + n11) + 
   j[p4, n1, n2, -1 + n3, 2, 1 + n5, n6, 0, 0, n9, 1, -1 + n11, 1, 1, 1]/
    (-1 + n11) + j[p4, n1, n2, n3, 1, n5, n6, 0, 0, -1 + n9, 1, -1 + n11, 1, 
     1, 2]/(-1 + n11) + ((8 - 4*d + n1 + n11 + n2 + n3 + 2*n5 + 2*n6 + 2*n9)*
     j[p4, n1, n2, n3, 1, n5, n6, 0, 0, n9, 1, -1 + n11, 1, 1, 1])/
    (-1 + n11) + j[p4, n1, n2, n3, 1, n5, n6, 0, 0, n9, 1, n11, 0, 1, 1] + 
   (n9*j[p4, n1, n2, n3, 1, n5, n6, 0, 0, 1 + n9, 1, -1 + n11, 1, 1, 1])/
    (-1 + n11) + (n6*j[p4, n1, n2, n3, 1, n5, 1 + n6, 0, 0, n9, 1, -1 + n11, 
      1, 1, 1])/(-1 + n11) + (n5*j[p4, n1, n2, n3, 1, 1 + n5, n6, 0, 0, 
      -1 + n9, 1, -1 + n11, 1, 1, 1])/(-1 + n11) + 
   (n5*j[p4, n1, n2, n3, 1, 1 + n5, n6, 0, 0, n9, 1, -1 + n11, 1, 0, 1])/
    (-1 + n11) + j[p4, n1, n2, n3, 1, 1 + n5, n6, 0, 0, n9, 1, -1 + n11, 1, 
     0, 2]/(1 - n11) - (n5*j[p4, n1, n2, n3, 1, 1 + n5, n6, 0, 0, n9, 1, 
      -1 + n11, 1, 1, 0])/(-1 + n11) + 
   (n5*j[p4, n1, n2, n3, 1, 1 + n5, n6, 0, 0, n9, 1, -1 + n11, 1, 1, 1])/
    (-1 + n11) - (n9*j[p4, n1, n2, n3, 1, 1 + n5, n6, 0, 0, 1 + n9, 1, 
      -1 + n11, 1, 1, 0])/(-1 + n11) + 
   (n9*j[p4, n1, n2, n3, 1, 1 + n5, n6, 0, 0, 1 + n9, 1, -1 + n11, 1, 1, 1])/
    (-1 + n11) - (n6*j[p4, n1, n2, n3, 1, 1 + n5, 1 + n6, -1, 0, n9, 1, 
      -1 + n11, 1, 1, 1])/(-1 + n11) - 
   (n6*j[p4, n1, n2, n3, 1, 1 + n5, 1 + n6, 0, -1, n9, 1, -1 + n11, 1, 1, 1])/
    (-1 + n11) + (n6*j[p4, n1, n2, n3, 1, 1 + n5, 1 + n6, 0, 0, n9, 1, 
      -1 + n11, 0, 1, 1])/(-1 + n11) - 
   (n6*j[p4, n1, n2, n3, 1, 1 + n5, 1 + n6, 0, 0, n9, 1, -1 + n11, 1, 0, 1])/
    (-1 + n11) - (n6*j[p4, n1, n2, n3, 1, 1 + n5, 1 + n6, 0, 0, n9, 1, 
      -1 + n11, 1, 1, 0])/(-1 + n11) + 
   ((1 + n5)*j[p4, n1, n2, n3, 1, 2 + n5, n6, 0, 0, n9, 1, -1 + n11, 1, 0, 
      1])/(-1 + n11) + ((-1 - n5)*j[p4, n1, n2, n3, 1, 2 + n5, n6, 0, 0, n9, 
      1, -1 + n11, 1, 1, 0])/(-1 + n11) + 
   j[p4, n1, n2, n3, 2, n5, n6, 0, 0, n9, 1, -1 + n11, 1, 1, 1]/(-1 + n11) + 
   j[p4, n1, n2, n3, 2, 1 + n5, n6, -1, 0, n9, 1, -1 + n11, 1, 1, 1]/
    (1 - n11) + j[p4, n1, n2, n3, 2, 1 + n5, n6, 0, 0, n9, 1, -1 + n11, 1, 1, 
     0]/(1 - n11) + (n3*j[p4, n1, n2, 1 + n3, 1, n5, n6, -1, 0, n9, 1, 
      -1 + n11, 1, 1, 1])/(-1 + n11) + 
   (n3*j[p4, n1, n2, 1 + n3, 1, n5, n6, 0, -1, n9, 1, -1 + n11, 1, 1, 1])/
    (-1 + n11) + (n3*j[p4, n1, n2, 1 + n3, 1, n5, n6, 0, 0, n9, 0, -1 + n11, 
      1, 1, 1])/(-1 + n11) - (n3*j[p4, n1, n2, 1 + n3, 1, n5, n6, 0, 0, n9, 
      1, -2 + n11, 1, 1, 1])/(-1 + n11) - 
   (n3*j[p4, n1, n2, 1 + n3, 1, n5, n6, 0, 0, n9, 1, -1 + n11, 1, 1, 1])/
    (-1 + n11) - (n2*j[p4, n1, 1 + n2, -1 + n3, 1, n5, n6, 0, 0, n9, 1, 
      -1 + n11, 1, 1, 1])/(-1 + n11) + 
   (n2*j[p4, n1, 1 + n2, n3, 1, n5, n6, -1, 0, n9, 1, -1 + n11, 1, 1, 1])/
    (-1 + n11) + (n2*j[p4, n1, 1 + n2, n3, 1, n5, n6, 0, -1, n9, 1, -1 + n11, 
      1, 1, 1])/(-1 + n11) + (n2*j[p4, n1, 1 + n2, n3, 1, n5, n6, 0, 0, n9, 
      0, -1 + n11, 1, 1, 1])/(-1 + n11) - 
   (n2*j[p4, n1, 1 + n2, n3, 1, n5, n6, 0, 0, n9, 1, -1 + n11, 0, 1, 1])/
    (-1 + n11) + (2*n2*j[p4, n1, 1 + n2, n3, 1, n5, n6, 0, 0, n9, 1, 
      -1 + n11, 1, 0, 1])/(-1 + n11) + 
   (n1*j[p4, 1 + n1, n2, n3, 1, n5, n6, 0, 0, n9, 1, -1 + n11, 1, 0, 1])/
    (-1 + n11) - (n1*j[p4, 1 + n1, n2, n3, 1, n5, n6, 0, 0, n9, 1, -1 + n11, 
      1, 1, 1])/(-1 + n11), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 1 && n13 == 1 && n14 == 1 && n4 == 1 && 
    n8 == 0 &&  !(n5 == 0 || n9 == 1) -> 
  (n6*j[p4, -1 + n1, -1 + n2, n3, 1, 1 + n5, 1 + n6, n7, 0, -1 + n9, 1, 1, 1, 
      1, 1])/(2*(-1 + n9)) + (n6*j[p4, -1 + n1, n2, -1 + n3, 1, 1 + n5, 
      1 + n6, n7, 0, -1 + n9, 1, 1, 1, 1, 1])/(2*(-1 + n9)) + 
   ((-2 + d + n2 - n3 - n6 - n9)*j[p4, -1 + n1, n2, n3, 1, 1 + n5, n6, n7, 0, 
      -1 + n9, 1, 1, 1, 1, 1])/(2*(-1 + n9)) - 
   j[p4, -1 + n1, n2, n3, 1, 1 + n5, n6, n7, 0, -1 + n9, 1, 1, 1, 2, 0]/
    (2*(-1 + n9)) - j[p4, -1 + n1, n2, n3, 1, 1 + n5, n6, n7, 0, n9, 1, 1, 1, 
     1, 0]/2 + j[p4, -1 + n1, n2, n3, 1, 1 + n5, n6, n7, 0, n9, 1, 1, 1, 1, 
    1] - (n6*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 1 + n6, -1 + n7, 0, -1 + n9, 
      1, 1, 1, 1, 1])/(2*(-1 + n9)) - 
   (n6*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 1 + n6, n7, -1, -1 + n9, 1, 1, 1, 1, 
      1])/(2*(-1 + n9)) + (n6*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 1 + n6, n7, 
      0, -1 + n9, 1, 1, 0, 1, 1])/(2*(-1 + n9)) - 
   (n6*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 1 + n6, n7, 0, -1 + n9, 1, 1, 1, 0, 
      1])/(2*(-1 + n9)) - (n6*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 1 + n6, n7, 
      0, -1 + n9, 1, 1, 1, 1, 0])/(2*(-1 + n9)) + 
   (n3*j[p4, -1 + n1, n2, 1 + n3, 0, 1 + n5, n6, n7, 0, -1 + n9, 1, 1, 1, 1, 
      1])/(2*(-1 + n9)) - (n3*j[p4, -1 + n1, n2, 1 + n3, 1, n5, n6, n7, 0, 
      -1 + n9, 1, 1, 1, 1, 1])/(2*(-1 + n9)) - 
   (n3*j[p4, -1 + n1, n2, 1 + n3, 1, 1 + n5, n6, n7, 0, -1 + n9, 1, 1, 1, 1, 
      0])/(2*(-1 + n9)) + (n2*j[p4, -1 + n1, 1 + n2, -1 + n3, 1, 1 + n5, n6, 
      n7, 0, -1 + n9, 1, 1, 1, 1, 1])/(2*(-1 + n9)) - 
   (n2*j[p4, -1 + n1, 1 + n2, n3, 1, 1 + n5, -1 + n6, n7, 0, -1 + n9, 1, 1, 
      1, 1, 1])/(2*(-1 + n9)) - 
   (n2*j[p4, -1 + n1, 1 + n2, n3, 1, 1 + n5, n6, -1 + n7, 0, -1 + n9, 1, 1, 
      1, 1, 1])/(2*(-1 + n9)) - 
   (n2*j[p4, -1 + n1, 1 + n2, n3, 1, 1 + n5, n6, n7, -1, -1 + n9, 1, 1, 1, 1, 
      1])/(2*(-1 + n9)) + (n2*j[p4, -1 + n1, 1 + n2, n3, 1, 1 + n5, n6, n7, 
      0, -1 + n9, 1, 1, 0, 1, 1])/(2*(-1 + n9)) - 
   (n2*j[p4, -1 + n1, 1 + n2, n3, 1, 1 + n5, n6, n7, 0, -1 + n9, 1, 1, 1, 0, 
      1])/(-1 + n9) - (n6*j[p4, n1, -1 + n2, n3, 1, n5, 1 + n6, n7, 0, 
      -1 + n9, 1, 1, 1, 1, 1])/(2*(-1 + n9)) + 
   (n3*j[p4, n1, -1 + n2, 1 + n3, 1, n5, n6, n7, 0, -1 + n9, 1, 1, 1, 1, 1])/
    (2*(-1 + n9)) - (n6*j[p4, n1, n2, -1 + n3, 1, n5, 1 + n6, n7, 0, -1 + n9, 
      1, 1, 1, 1, 1])/(2*(-1 + n9)) - 
   (n6*j[p4, n1, n2, -1 + n3, 1, 1 + n5, 1 + n6, n7, 0, -1 + n9, 1, 1, 1, 1, 
      1])/(2*(-1 + n9)) - j[p4, n1, n2, n3, 1, n5, n6, n7, 0, -2 + n9, 1, 1, 
     1, 1, 2]/(2*(-1 + n9)) + ((2 - n2 + n3 - n9)*j[p4, n1, n2, n3, 1, n5, 
      n6, n7, 0, -1 + n9, 1, 1, 1, 1, 1])/(2*(-1 + n9)) + 
   j[p4, n1, n2, n3, 1, n5, n6, n7, 0, n9, 1, 1, 1, 1, 0]/2 + 
   (n6*j[p4, n1, n2, n3, 1, n5, 1 + n6, -1 + n7, 0, -1 + n9, 1, 1, 1, 1, 1])/
    (2*(-1 + n9)) + (n6*j[p4, n1, n2, n3, 1, n5, 1 + n6, n7, -1, -1 + n9, 1, 
      1, 1, 1, 1])/(2*(-1 + n9)) - 
   (n6*j[p4, n1, n2, n3, 1, n5, 1 + n6, n7, 0, -2 + n9, 1, 1, 1, 1, 1])/
    (2*(-1 + n9)) + (n6*j[p4, n1, n2, n3, 1, n5, 1 + n6, n7, 0, -1 + n9, 0, 
      1, 1, 1, 1])/(2*(-1 + n9)) - 
   (n6*j[p4, n1, n2, n3, 1, n5, 1 + n6, n7, 0, -1 + n9, 1, 1, 0, 1, 1])/
    (2*(-1 + n9)) + (n6*j[p4, n1, n2, n3, 1, n5, 1 + n6, n7, 0, -1 + n9, 1, 
      1, 1, 0, 1])/(2*(-1 + n9)) + 
   (n6*j[p4, n1, n2, n3, 1, n5, 1 + n6, n7, 0, -1 + n9, 1, 1, 1, 1, 0])/
    (2*(-1 + n9)) - (n6*j[p4, n1, n2, n3, 1, n5, 1 + n6, n7, 0, -1 + n9, 1, 
      1, 1, 1, 1])/(2*(-1 + n9)) + 
   ((1 - n1)*j[p4, n1, n2, n3, 1, 1 + n5, n6, n7, 0, -2 + n9, 1, 1, 1, 1, 1])/
    (2*(-1 + n9)) + ((1 - n1)*j[p4, n1, n2, n3, 1, 1 + n5, n6, n7, 0, 
      -1 + n9, 1, 1, 1, 0, 1])/(2*(-1 + n9)) + 
   j[p4, n1, n2, n3, 1, 1 + n5, n6, n7, 0, -1 + n9, 1, 1, 1, 0, 2]/
    (2*(-1 + n9)) + ((-2 + n1 - n2 + n3 - 2*n5)*j[p4, n1, n2, n3, 1, 1 + n5, 
      n6, n7, 0, -1 + n9, 1, 1, 1, 1, 1])/(2*(-1 + n9)) + 
   j[p4, n1, n2, n3, 1, 1 + n5, n6, n7, 0, -1 + n9, 1, 1, 1, 2, 0]/
    (2*(-1 + n9)) + j[p4, n1, n2, n3, 1, 1 + n5, n6, n7, 0, n9, 1, 1, 1, 1, 
     0]/2 - j[p4, n1, n2, n3, 1, 1 + n5, n6, n7, 0, n9, 1, 1, 1, 1, 1]/2 + 
   (n6*j[p4, n1, n2, n3, 1, 1 + n5, 1 + n6, -1 + n7, 0, -1 + n9, 1, 1, 1, 1, 
      1])/(2*(-1 + n9)) + (n6*j[p4, n1, n2, n3, 1, 1 + n5, 1 + n6, n7, -1, 
      -1 + n9, 1, 1, 1, 1, 1])/(2*(-1 + n9)) - 
   (n6*j[p4, n1, n2, n3, 1, 1 + n5, 1 + n6, n7, 0, -1 + n9, 1, 1, 0, 1, 1])/
    (2*(-1 + n9)) + (n6*j[p4, n1, n2, n3, 1, 1 + n5, 1 + n6, n7, 0, -1 + n9, 
      1, 1, 1, 0, 1])/(2*(-1 + n9)) + 
   (n6*j[p4, n1, n2, n3, 1, 1 + n5, 1 + n6, n7, 0, -1 + n9, 1, 1, 1, 1, 0])/
    (2*(-1 + n9)) - j[p4, n1, n2, n3, 2, n5, n6, n7, 0, -1 + n9, 1, 1, 1, 1, 
     1]/(2*(-1 + n9)) + j[p4, n1, n2, n3, 2, 1 + n5, n6, -1 + n7, 0, -1 + n9, 
     1, 1, 1, 1, 1]/(2*(-1 + n9)) - 
   (n3*j[p4, n1, n2, 1 + n3, 0, 1 + n5, n6, n7, 0, -1 + n9, 1, 1, 1, 1, 1])/
    (2*(-1 + n9)) - (n3*j[p4, n1, n2, 1 + n3, 1, n5, n6, -1 + n7, 0, -1 + n9, 
      1, 1, 1, 1, 1])/(2*(-1 + n9)) - 
   (n3*j[p4, n1, n2, 1 + n3, 1, n5, n6, n7, -1, -1 + n9, 1, 1, 1, 1, 1])/
    (2*(-1 + n9)) - (n3*j[p4, n1, n2, 1 + n3, 1, n5, n6, n7, 0, -1 + n9, 0, 
      1, 1, 1, 1])/(2*(-1 + n9)) + 
   (n3*j[p4, n1, n2, 1 + n3, 1, n5, n6, n7, 0, -1 + n9, 1, 0, 1, 1, 1])/
    (2*(-1 + n9)) + (n3*j[p4, n1, n2, 1 + n3, 1, n5, n6, n7, 0, -1 + n9, 1, 
      1, 1, 1, 1])/(2*(-1 + n9)) + 
   (n3*j[p4, n1, n2, 1 + n3, 1, 1 + n5, n6, n7, 0, -1 + n9, 1, 1, 1, 1, 0])/
    (2*(-1 + n9)) - (n2*j[p4, n1, 1 + n2, -1 + n3, 1, n5, n6, n7, 0, -1 + n9, 
      1, 1, 1, 1, 1])/(2*(-1 + n9)) - 
   (n2*j[p4, n1, 1 + n2, -1 + n3, 1, 1 + n5, n6, n7, 0, -1 + n9, 1, 1, 1, 1, 
      1])/(2*(-1 + n9)) + (n2*j[p4, n1, 1 + n2, n3, 1, n5, n6, -1 + n7, 0, 
      -1 + n9, 1, 1, 1, 1, 1])/(2*(-1 + n9)) + 
   (n2*j[p4, n1, 1 + n2, n3, 1, n5, n6, n7, -1, -1 + n9, 1, 1, 1, 1, 1])/
    (2*(-1 + n9)) + (n2*j[p4, n1, 1 + n2, n3, 1, n5, n6, n7, 0, -1 + n9, 0, 
      1, 1, 1, 1])/(2*(-1 + n9)) - 
   (n2*j[p4, n1, 1 + n2, n3, 1, n5, n6, n7, 0, -1 + n9, 1, 1, 0, 1, 1])/
    (2*(-1 + n9)) + (n2*j[p4, n1, 1 + n2, n3, 1, n5, n6, n7, 0, -1 + n9, 1, 
      1, 1, 0, 1])/(-1 + n9) - 
   (n2*j[p4, n1, 1 + n2, n3, 1, n5, n6, n7, 0, -1 + n9, 1, 1, 1, 1, 1])/
    (2*(-1 + n9)) + (n2*j[p4, n1, 1 + n2, n3, 1, 1 + n5, -1 + n6, n7, 0, 
      -1 + n9, 1, 1, 1, 1, 1])/(2*(-1 + n9)) + 
   (n2*j[p4, n1, 1 + n2, n3, 1, 1 + n5, n6, -1 + n7, 0, -1 + n9, 1, 1, 1, 1, 
      1])/(2*(-1 + n9)) + (n2*j[p4, n1, 1 + n2, n3, 1, 1 + n5, n6, n7, -1, 
      -1 + n9, 1, 1, 1, 1, 1])/(2*(-1 + n9)) - 
   (n2*j[p4, n1, 1 + n2, n3, 1, 1 + n5, n6, n7, 0, -1 + n9, 1, 1, 0, 1, 1])/
    (2*(-1 + n9)) + (n2*j[p4, n1, 1 + n2, n3, 1, 1 + n5, n6, n7, 0, -1 + n9, 
      1, 1, 1, 0, 1])/(-1 + n9) + 
   (n1*j[p4, 1 + n1, n2, n3, 1, n5, n6, n7, 0, -1 + n9, 1, 1, 1, 0, 1])/
    (2*(-1 + n9)) - (n1*j[p4, 1 + n1, n2, n3, 1, n5, n6, n7, 0, -1 + n9, 1, 
      1, 1, 1, 1])/(-1 + n9) + 
   (n1*j[p4, 1 + n1, n2, n3, 1, 1 + n5, n6, n7, 0, -2 + n9, 1, 1, 1, 1, 1])/
    (2*(-1 + n9)) + (n1*j[p4, 1 + n1, n2, n3, 1, 1 + n5, n6, n7, 0, -1 + n9, 
      1, 1, 1, 0, 1])/(2*(-1 + n9)) - 
   (n1*j[p4, 1 + n1, n2, n3, 1, 1 + n5, n6, n7, 0, -1 + n9, 1, 1, 1, 1, 1])/
    (2*(-1 + n9)), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?NonPositive, (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, 
    (n7_)?NonPositive, (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 1 && n13 == 1 && n14 == 1 && n4 == 1 && 
    n5 == 0 &&  !(n8 == 0 || n9 == 1) -> 
  j[p4, -1 + n1, n2, n3, 1, 0, n6, n7, 1 + n8, -1 + n9, 1, 1, 1, 1, 1]/
    (-1 + n9) - j[p4, -1 + n1, n2, n3, 1, 0, n6, n7, 1 + n8, n9, 1, 1, 1, 1, 
    1] + (n3*j[p4, -1 + n1, n2, 1 + n3, 1, -1, n6, n7, 1 + n8, -1 + n9, 1, 1, 
      1, 1, 1])/(-1 + n9) - (n2*j[p4, -1 + n1, 1 + n2, n3, 1, -1, n6, n7, 
      1 + n8, -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) + 
   ((-1 - n8)*j[p4, n1, -1 + n2, n3, 1, 0, n6, n7, 1 + n8, -1 + n9, 1, 1, 1, 
      1, 1])/(-1 + n9) - (n6*j[p4, n1, -1 + n2, n3, 1, 0, 1 + n6, n7, n8, 
      -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) - 
   (n3*j[p4, n1, -1 + n2, 1 + n3, 1, -1, n6, n7, 1 + n8, -1 + n9, 1, 1, 1, 1, 
      1])/(-1 + n9) - (n6*j[p4, n1, n2, -1 + n3, 1, 0, 1 + n6, n7, n8, 
      -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) + 
   (n6*j[p4, n1, n2, -1 + n3, 1, 0, 1 + n6, n7, 1 + n8, -1 + n9, 1, 1, 1, 1, 
      1])/(-1 + n9) + j[p4, n1, n2, -1 + n3, 2, 0, n6, n7, 1 + n8, -1 + n9, 
     1, 1, 1, 1, 1]/(-1 + n9) + 
   ((-1 - n8)*j[p4, n1, n2, n3, 0, 0, n6, n7, 1 + n8, -1 + n9, 1, 1, 1, 1, 
      1])/(-1 + n9) + j[p4, n1, n2, n3, 1, -1, n6, n7, 1 + n8, -2 + n9, 1, 1, 
     1, 1, 2]/(-1 + n9) + j[p4, n1, n2, n3, 1, -1, n6, n7, 1 + n8, -1 + n9, 
     1, 1, 0, 2, 1]/(1 - n9) + 
   ((5 - 3*d + n1 + 2*n2 + n3 + 2*n6 + n7 + 2*n8 + 2*n9)*
     j[p4, n1, n2, n3, 1, -1, n6, n7, 1 + n8, -1 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9) + j[p4, n1, n2, n3, 1, -1, n6, n7, 1 + n8, n9, 1, 1, 1, 1, 1] + 
   (n7*j[p4, n1, n2, n3, 1, -1, n6, 1 + n7, 1 + n8, -1 + n9, 0, 1, 1, 1, 1])/
    (-1 + n9) - (n7*j[p4, n1, n2, n3, 1, -1, n6, 1 + n7, 1 + n8, -1 + n9, 1, 
      0, 1, 1, 1])/(-1 + n9) + 
   (n6*j[p4, n1, n2, n3, 1, -1, 1 + n6, n7, 1 + n8, -1 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9) + ((1 + n8)*j[p4, n1, n2, n3, 1, 0, -1 + n6, n7, 1 + n8, 
      -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) + 
   ((1 + n8)*j[p4, n1, n2, n3, 1, 0, n6, -1 + n7, 1 + n8, -1 + n9, 1, 1, 1, 
      1, 1])/(-1 + n9) + ((2 - d - n2 + n3 + n6 + n8 + n9)*
     j[p4, n1, n2, n3, 1, 0, n6, n7, n8, -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) + 
   j[p4, n1, n2, n3, 1, 0, n6, n7, n8, -1 + n9, 1, 1, 1, 2, 0]/(-1 + n9) + 
   j[p4, n1, n2, n3, 1, 0, n6, n7, n8, n9, 1, 1, 1, 1, 0] + 
   j[p4, n1, n2, n3, 1, 0, n6, n7, 1 + n8, -2 + n9, 1, 1, 1, 1, 1]/(1 - n9) - 
   (n8*j[p4, n1, n2, n3, 1, 0, n6, n7, 1 + n8, -1 + n9, 1, 1, 0, 1, 1])/
    (-1 + n9) + (n8*j[p4, n1, n2, n3, 1, 0, n6, n7, 1 + n8, -1 + n9, 1, 1, 1, 
      0, 1])/(-1 + n9) + j[p4, n1, n2, n3, 1, 0, n6, n7, 1 + n8, -1 + n9, 1, 
     1, 1, 0, 2]/(1 - n9) + j[p4, n1, n2, n3, 1, 0, n6, n7, 1 + n8, -1 + n9, 
     1, 1, 1, 1, 1]/(1 - n9) - j[p4, n1, n2, n3, 1, 0, n6, n7, 1 + n8, n9, 1, 
    1, 1, 1, 0] + j[p4, n1, n2, n3, 1, 0, n6, n7, 1 + n8, n9, 1, 1, 1, 1, 
    1] + (n6*j[p4, n1, n2, n3, 1, 0, 1 + n6, -1 + n7, n8, -1 + n9, 1, 1, 1, 
      1, 1])/(-1 + n9) - (n6*j[p4, n1, n2, n3, 1, 0, 1 + n6, -1 + n7, 1 + n8, 
      -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) + 
   (n6*j[p4, n1, n2, n3, 1, 0, 1 + n6, n7, -1 + n8, -1 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9) - (n6*j[p4, n1, n2, n3, 1, 0, 1 + n6, n7, n8, -1 + n9, 1, 1, 0, 
      1, 1])/(-1 + n9) + (n6*j[p4, n1, n2, n3, 1, 0, 1 + n6, n7, n8, -1 + n9, 
      1, 1, 1, 0, 1])/(-1 + n9) + 
   (n6*j[p4, n1, n2, n3, 1, 0, 1 + n6, n7, n8, -1 + n9, 1, 1, 1, 1, 0])/
    (-1 + n9) - (n6*j[p4, n1, n2, n3, 1, 0, 1 + n6, n7, n8, -1 + n9, 1, 1, 1, 
      1, 1])/(-1 + n9) + (n6*j[p4, n1, n2, n3, 1, 0, 1 + n6, n7, 1 + n8, 
      -1 + n9, 1, 1, 0, 1, 1])/(-1 + n9) - 
   (n6*j[p4, n1, n2, n3, 1, 0, 1 + n6, n7, 1 + n8, -1 + n9, 1, 1, 1, 0, 1])/
    (-1 + n9) - (n6*j[p4, n1, n2, n3, 1, 0, 1 + n6, n7, 1 + n8, -1 + n9, 1, 
      1, 1, 1, 0])/(-1 + n9) + j[p4, n1, n2, n3, 2, -1, n6, n7, 1 + n8, 
     -1 + n9, 1, 1, 1, 1, 1]/(-1 + n9) + 
   j[p4, n1, n2, n3, 2, 0, n6, -1 + n7, 1 + n8, -1 + n9, 1, 1, 1, 1, 1]/
    (1 - n9) + j[p4, n1, n2, n3, 2, 0, n6, n7, 1 + n8, -1 + n9, 1, 1, 1, 1, 
     0]/(1 - n9) - (n3*j[p4, n1, n2, 1 + n3, 0, 0, n6, n7, n8, -1 + n9, 1, 1, 
      1, 1, 1])/(-1 + n9) + (n3*j[p4, n1, n2, 1 + n3, 1, -1, n6, -1 + n7, 
      1 + n8, -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) + 
   (n3*j[p4, n1, n2, 1 + n3, 1, -1, n6, n7, n8, -1 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9) + (n3*j[p4, n1, n2, 1 + n3, 1, -1, n6, n7, 1 + n8, -1 + n9, 0, 
      1, 1, 1, 1])/(-1 + n9) - 
   (n3*j[p4, n1, n2, 1 + n3, 1, -1, n6, n7, 1 + n8, -1 + n9, 1, 0, 1, 1, 1])/
    (-1 + n9) - (n3*j[p4, n1, n2, 1 + n3, 1, -1, n6, n7, 1 + n8, -1 + n9, 1, 
      1, 1, 1, 1])/(-1 + n9) + 
   (n3*j[p4, n1, n2, 1 + n3, 1, 0, n6, n7, n8, -1 + n9, 1, 1, 1, 1, 0])/
    (-1 + n9) - (n2*j[p4, n1, 1 + n2, -1 + n3, 1, 0, n6, n7, n8, -1 + n9, 1, 
      1, 1, 1, 1])/(-1 + n9) - 
   (n2*j[p4, n1, 1 + n2, n3, 1, -1, n6, -1 + n7, 1 + n8, -1 + n9, 1, 1, 1, 1, 
      1])/(-1 + n9) + (n2*j[p4, n1, 1 + n2, n3, 1, -1, n6, n7, 1 + n8, 
      -1 + n9, 0, 1, 1, 1, 1])/(-1 + n9) + 
   (n2*j[p4, n1, 1 + n2, n3, 1, 0, -1 + n6, n7, n8, -1 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9) + (n2*j[p4, n1, 1 + n2, n3, 1, 0, n6, -1 + n7, n8, -1 + n9, 1, 
      1, 1, 1, 1])/(-1 + n9) + 
   (n2*j[p4, n1, 1 + n2, n3, 1, 0, n6, n7, -1 + n8, -1 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9) - (n2*j[p4, n1, 1 + n2, n3, 1, 0, n6, n7, n8, -1 + n9, 1, 1, 0, 
      1, 1])/(-1 + n9) + (2*n2*j[p4, n1, 1 + n2, n3, 1, 0, n6, n7, n8, 
      -1 + n9, 1, 1, 1, 0, 1])/(-1 + n9) - 
   (n1*j[p4, 1 + n1, n2, n3, 1, -1, n6, n7, 1 + n8, -1 + n9, 1, 0, 1, 1, 1])/
    (-1 + n9) + (n1*j[p4, 1 + n1, n2, n3, 1, 0, n6, n7, n8, -2 + n9, 1, 1, 1, 
      1, 1])/(-1 + n9) + (n1*j[p4, 1 + n1, n2, n3, 1, 0, n6, n7, n8, -1 + n9, 
      1, 1, 1, 0, 1])/(-1 + n9) - 
   (n1*j[p4, 1 + n1, n2, n3, 1, 0, n6, n7, n8, -1 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 1 && n13 == 1 && n14 == 1 && n4 == 1 && 
    n9 == 1 &&  !(n6 == 0 || n8 == 0) -> 
  ((2 - n5 + n6 - n7 + n8)*j[p4, n1, -2 + n2, n3, 1, n5, 1 + n6, n7, 1 + n8, 
      1, 1, 1, 1, 1, 1])/(2*(-1 + n2)) + 
   (n3*j[p4, n1, -2 + n2, 1 + n3, 1, -1 + n5, 1 + n6, n7, 1 + n8, 1, 1, 1, 1, 
      1, 1])/(2*(-1 + n2)) - (n3*j[p4, n1, -2 + n2, 1 + n3, 1, n5, 1 + n6, 
      -1 + n7, 1 + n8, 1, 1, 1, 1, 1, 1])/(2*(-1 + n2)) + 
   ((2 - n5 + n6 - n7 + n8)*j[p4, n1, -1 + n2, n3, 0, n5, 1 + n6, n7, 1 + n8, 
      1, 1, 1, 1, 1, 1])/(2*(-1 + n2)) + 
   j[p4, n1, -1 + n2, n3, 1, -1 + n5, 1 + n6, n7, 1 + n8, 1, 1, 1, 0, 2, 1]/
    (2*(-1 + n2)) + ((-4 + d - n1 - n2 - n6 + n7 - 2*n8)*
     j[p4, n1, -1 + n2, n3, 1, -1 + n5, 1 + n6, n7, 1 + n8, 1, 1, 1, 1, 1, 
      1])/(2*(-1 + n2)) + ((-d + n2 + n3 + n5 + 2*n7 - n8)*
     j[p4, n1, -1 + n2, n3, 1, n5, n6, n7, 1 + n8, 1, 1, 1, 1, 1, 1])/
    (2*(-1 + n2)) - j[p4, n1, -1 + n2, n3, 1, n5, n6, n7, 1 + n8, 1, 2, 0, 1, 
     1, 1]/(2*(-1 + n2)) + j[p4, n1, -1 + n2, n3, 1, n5, 1 + n6, -1 + n7, 
     1 + n8, 0, 2, 1, 1, 1, 1]/(2*(-1 + n2)) + 
   ((-4 + d - n2 - n3 + n5 - 2*n6 - n8)*j[p4, n1, -1 + n2, n3, 1, n5, 1 + n6, 
      -1 + n7, 1 + n8, 1, 1, 1, 1, 1, 1])/(2*(-1 + n2)) + 
   ((-d + n1 + n2 + 2*n5 - n6 + n7)*j[p4, n1, -1 + n2, n3, 1, n5, 1 + n6, n7, 
      n8, 1, 1, 1, 1, 1, 1])/(2*(-1 + n2)) - 
   j[p4, n1, -1 + n2, n3, 1, n5, 1 + n6, n7, n8, 1, 1, 1, 1, 2, 0]/
    (2*(-1 + n2)) - (n3*j[p4, n1, -1 + n2, 1 + n3, 0, n5, 1 + n6, -1 + n7, 
      1 + n8, 1, 1, 1, 1, 1, 1])/(2*(-1 + n2)) + 
   (n3*j[p4, n1, -1 + n2, 1 + n3, 0, n5, 1 + n6, n7, n8, 1, 1, 1, 1, 1, 1])/
    (2*(-1 + n2)) - (n3*j[p4, n1, -1 + n2, 1 + n3, 1, -1 + n5, 1 + n6, 
      -1 + n7, 1 + n8, 1, 1, 1, 1, 1, 1])/(2*(-1 + n2)) - 
   (n3*j[p4, n1, -1 + n2, 1 + n3, 1, -1 + n5, 1 + n6, n7, n8, 1, 1, 1, 1, 1, 
      1])/(-1 + n2) + (n3*j[p4, n1, -1 + n2, 1 + n3, 1, -1 + n5, 1 + n6, n7, 
      1 + n8, 1, 1, 1, 0, 1, 1])/(2*(-1 + n2)) - 
   (n3*j[p4, n1, -1 + n2, 1 + n3, 1, -1 + n5, 1 + n6, n7, 1 + n8, 1, 1, 1, 1, 
      0, 1])/(2*(-1 + n2)) + (n3*j[p4, n1, -1 + n2, 1 + n3, 1, n5, n6, 
      -1 + n7, 1 + n8, 1, 1, 1, 1, 1, 1])/(2*(-1 + n2)) - 
   (n3*j[p4, n1, -1 + n2, 1 + n3, 1, n5, n6, n7, 1 + n8, 1, 1, 1, 1, 0, 1])/
    (2*(-1 + n2)) + (n3*j[p4, n1, -1 + n2, 1 + n3, 1, n5, 1 + n6, -2 + n7, 
      1 + n8, 1, 1, 1, 1, 1, 1])/(2*(-1 + n2)) + 
   (n3*j[p4, n1, -1 + n2, 1 + n3, 1, n5, 1 + n6, -1 + n7, n8, 1, 1, 1, 1, 1, 
      1])/(2*(-1 + n2)) - (n3*j[p4, n1, -1 + n2, 1 + n3, 1, n5, 1 + n6, 
      -1 + n7, 1 + n8, 1, 1, 1, 0, 1, 1])/(2*(-1 + n2)) + 
   (n3*j[p4, n1, -1 + n2, 1 + n3, 1, n5, 1 + n6, -1 + n7, 1 + n8, 1, 1, 1, 1, 
      0, 1])/(2*(-1 + n2)) + (n3*j[p4, n1, -1 + n2, 1 + n3, 1, n5, 1 + n6, 
      -1 + n7, 1 + n8, 1, 1, 1, 1, 1, 0])/(2*(-1 + n2)) + 
   (n3*j[p4, n1, -1 + n2, 1 + n3, 1, n5, 1 + n6, n7, n8, 1, 1, 1, 1, 0, 1])/
    (2*(-1 + n2)) - (n3*j[p4, n1, -1 + n2, 1 + n3, 1, n5, 1 + n6, n7, n8, 1, 
      1, 1, 1, 1, 0])/(2*(-1 + n2)) + j[p4, n1, n2, n3, 1, -1 + n5, 1 + n6, 
    -1 + n7, 1 + n8, 1, 1, 1, 1, 1, 1] + 
   (n1*j[p4, 1 + n1, -1 + n2, n3, 1, -1 + n5, 1 + n6, n7, 1 + n8, 1, 1, 0, 1, 
      1, 1])/(2*(-1 + n2)) - (n1*j[p4, 1 + n1, -1 + n2, n3, 1, n5, 1 + n6, 
      n7, n8, 0, 1, 1, 1, 1, 1])/(2*(-1 + n2)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n12 == 1 && n13 == 1 && n14 == 1 && n2 == 0 && n3 == 0 && n6 == 0 && 
    n7 == 0 && n8 == 0 &&  !(n11 == 1 || n5 == 0) -> 
  -((n5*j[p4, -1 + n1, 0, 0, n4, 1 + n5, 0, 0, 0, n9, n10, -1 + n11, 1, 1, 
       1])/(-1 + n11)) - (n9*j[p4, -1 + n1, 0, 0, n4, 1 + n5, 0, 0, 0, 
      1 + n9, n10, -1 + n11, 1, 1, 1])/(-1 + n11) + 
   (n4*j[p4, n1, 0, -1, 1 + n4, 1 + n5, 0, 0, 0, n9, n10, -1 + n11, 1, 1, 1])/
    (-1 + n11) + j[p4, n1, 0, 0, n4, n5, 0, 0, 0, -1 + n9, n10, -1 + n11, 1, 
     1, 2]/(-1 + n11) + ((4 - 4*d + n1 + 2*n10 + n11 + 2*n4 + 2*n5 + 2*n9)*
     j[p4, n1, 0, 0, n4, n5, 0, 0, 0, n9, n10, -1 + n11, 1, 1, 1])/
    (-1 + n11) + j[p4, n1, 0, 0, n4, n5, 0, 0, 0, n9, n10, n11, 0, 1, 1] + 
   (n9*j[p4, n1, 0, 0, n4, n5, 0, 0, 0, 1 + n9, n10, -1 + n11, 1, 1, 1])/
    (-1 + n11) + (n5*j[p4, n1, 0, 0, n4, 1 + n5, 0, 0, 0, -1 + n9, n10, 
      -1 + n11, 1, 1, 1])/(-1 + n11) + 
   (n5*j[p4, n1, 0, 0, n4, 1 + n5, 0, 0, 0, n9, n10, -1 + n11, 1, 0, 1])/
    (-1 + n11) + j[p4, n1, 0, 0, n4, 1 + n5, 0, 0, 0, n9, n10, -1 + n11, 1, 
     0, 2]/(1 - n11) - (n5*j[p4, n1, 0, 0, n4, 1 + n5, 0, 0, 0, n9, n10, 
      -1 + n11, 1, 1, 0])/(-1 + n11) + 
   (n5*j[p4, n1, 0, 0, n4, 1 + n5, 0, 0, 0, n9, n10, -1 + n11, 1, 1, 1])/
    (-1 + n11) - (n9*j[p4, n1, 0, 0, n4, 1 + n5, 0, 0, 0, 1 + n9, n10, 
      -1 + n11, 1, 1, 0])/(-1 + n11) + 
   (n9*j[p4, n1, 0, 0, n4, 1 + n5, 0, 0, 0, 1 + n9, n10, -1 + n11, 1, 1, 1])/
    (-1 + n11) + ((1 + n5)*j[p4, n1, 0, 0, n4, 2 + n5, 0, 0, 0, n9, n10, 
      -1 + n11, 1, 0, 1])/(-1 + n11) + 
   ((-1 - n5)*j[p4, n1, 0, 0, n4, 2 + n5, 0, 0, 0, n9, n10, -1 + n11, 1, 1, 
      0])/(-1 + n11) + (n4*j[p4, n1, 0, 0, 1 + n4, n5, 0, 0, 0, n9, n10, 
      -1 + n11, 1, 1, 1])/(-1 + n11) - 
   (n4*j[p4, n1, 0, 0, 1 + n4, 1 + n5, 0, -1, 0, n9, n10, -1 + n11, 1, 1, 1])/
    (-1 + n11) - (n4*j[p4, n1, 0, 0, 1 + n4, 1 + n5, 0, 0, 0, n9, n10, 
      -1 + n11, 1, 1, 0])/(-1 + n11) + 
   (n1*j[p4, 1 + n1, 0, 0, n4, n5, 0, 0, 0, n9, n10, -1 + n11, 1, 0, 1])/
    (-1 + n11) - (n1*j[p4, 1 + n1, 0, 0, n4, n5, 0, 0, 0, n9, n10, -1 + n11, 
      1, 1, 1])/(-1 + n11), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n12 == 1 && n13 == 1 && n14 == 1 && n3 == 0 && n6 == 0 && 
    n7 == 0 && n8 == 0 &&  !(n11 == 1 || n5 == 0) -> 
  -((n5*j[p4, -1 + n1, n2, 0, n4, 1 + n5, 0, 0, 0, n9, 1, -1 + n11, 1, 1, 1])/
     (-1 + n11)) - (n9*j[p4, -1 + n1, n2, 0, n4, 1 + n5, 0, 0, 0, 1 + n9, 1, 
      -1 + n11, 1, 1, 1])/(-1 + n11) - 
   (n2*j[p4, -1 + n1, 1 + n2, 0, n4, n5, 0, 0, 0, n9, 1, -1 + n11, 1, 1, 1])/
    (-1 + n11) + (n4*j[p4, n1, n2, -1, 1 + n4, 1 + n5, 0, 0, 0, n9, 1, 
      -1 + n11, 1, 1, 1])/(-1 + n11) + 
   j[p4, n1, n2, 0, n4, n5, 0, 0, 0, -1 + n9, 1, -1 + n11, 1, 1, 2]/
    (-1 + n11) + ((6 - 4*d + n1 + n11 + n2 + 2*n4 + 2*n5 + 2*n9)*
     j[p4, n1, n2, 0, n4, n5, 0, 0, 0, n9, 1, -1 + n11, 1, 1, 1])/
    (-1 + n11) + j[p4, n1, n2, 0, n4, n5, 0, 0, 0, n9, 1, n11, 0, 1, 1] + 
   (n9*j[p4, n1, n2, 0, n4, n5, 0, 0, 0, 1 + n9, 1, -1 + n11, 1, 1, 1])/
    (-1 + n11) + (n5*j[p4, n1, n2, 0, n4, 1 + n5, 0, 0, 0, -1 + n9, 1, 
      -1 + n11, 1, 1, 1])/(-1 + n11) + 
   (n5*j[p4, n1, n2, 0, n4, 1 + n5, 0, 0, 0, n9, 1, -1 + n11, 1, 0, 1])/
    (-1 + n11) + j[p4, n1, n2, 0, n4, 1 + n5, 0, 0, 0, n9, 1, -1 + n11, 1, 0, 
     2]/(1 - n11) - (n5*j[p4, n1, n2, 0, n4, 1 + n5, 0, 0, 0, n9, 1, 
      -1 + n11, 1, 1, 0])/(-1 + n11) + 
   (n5*j[p4, n1, n2, 0, n4, 1 + n5, 0, 0, 0, n9, 1, -1 + n11, 1, 1, 1])/
    (-1 + n11) - (n9*j[p4, n1, n2, 0, n4, 1 + n5, 0, 0, 0, 1 + n9, 1, 
      -1 + n11, 1, 1, 0])/(-1 + n11) + 
   (n9*j[p4, n1, n2, 0, n4, 1 + n5, 0, 0, 0, 1 + n9, 1, -1 + n11, 1, 1, 1])/
    (-1 + n11) + ((1 + n5)*j[p4, n1, n2, 0, n4, 2 + n5, 0, 0, 0, n9, 1, 
      -1 + n11, 1, 0, 1])/(-1 + n11) + 
   ((-1 - n5)*j[p4, n1, n2, 0, n4, 2 + n5, 0, 0, 0, n9, 1, -1 + n11, 1, 1, 
      0])/(-1 + n11) + (n4*j[p4, n1, n2, 0, 1 + n4, n5, 0, 0, 0, n9, 1, 
      -1 + n11, 1, 1, 1])/(-1 + n11) - 
   (n4*j[p4, n1, n2, 0, 1 + n4, 1 + n5, 0, -1, 0, n9, 1, -1 + n11, 1, 1, 1])/
    (-1 + n11) - (n4*j[p4, n1, n2, 0, 1 + n4, 1 + n5, 0, 0, 0, n9, 1, 
      -1 + n11, 1, 1, 0])/(-1 + n11) - 
   (n2*j[p4, n1, 1 + n2, -1, n4, n5, 0, 0, 0, n9, 1, -1 + n11, 1, 1, 1])/
    (-1 + n11) + (n2*j[p4, n1, 1 + n2, 0, n4, n5, 0, -1, 0, n9, 1, -1 + n11, 
      1, 1, 1])/(-1 + n11) + (n2*j[p4, n1, 1 + n2, 0, n4, n5, 0, 0, -1, n9, 
      1, -1 + n11, 1, 1, 1])/(-1 + n11) + 
   (n2*j[p4, n1, 1 + n2, 0, n4, n5, 0, 0, 0, n9, 0, -1 + n11, 1, 1, 1])/
    (-1 + n11) - (n2*j[p4, n1, 1 + n2, 0, n4, n5, 0, 0, 0, n9, 1, -1 + n11, 
      0, 1, 1])/(-1 + n11) + (2*n2*j[p4, n1, 1 + n2, 0, n4, n5, 0, 0, 0, n9, 
      1, -1 + n11, 1, 0, 1])/(-1 + n11) + 
   (n1*j[p4, 1 + n1, n2, 0, n4, n5, 0, 0, 0, n9, 1, -1 + n11, 1, 0, 1])/
    (-1 + n11) - (n1*j[p4, 1 + n1, n2, 0, n4, n5, 0, 0, 0, n9, 1, -1 + n11, 
      1, 1, 1])/(-1 + n11), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n12 == 1 && n13 == 1 && n14 == 1 && n2 == 0 && n4 == 1 && n6 == 0 && 
    n7 == 0 && n8 == 0 &&  !(n11 == 1 || n5 == 0) -> 
  -((n5*j[p4, -1 + n1, 0, n3, 1, 1 + n5, 0, 0, 0, n9, n10, -1 + n11, 1, 1, 
       1])/(-1 + n11)) - (n9*j[p4, -1 + n1, 0, n3, 1, 1 + n5, 0, 0, 0, 
      1 + n9, n10, -1 + n11, 1, 1, 1])/(-1 + n11) + 
   (n3*j[p4, -1 + n1, 0, 1 + n3, 1, n5, 0, 0, 0, n9, n10, -1 + n11, 1, 1, 1])/
    (-1 + n11) - (n3*j[p4, n1, -1, 1 + n3, 1, n5, 0, 0, 0, n9, n10, -1 + n11, 
      1, 1, 1])/(-1 + n11) + j[p4, n1, 0, -1 + n3, 2, 1 + n5, 0, 0, 0, n9, 
     n10, -1 + n11, 1, 1, 1]/(-1 + n11) + 
   j[p4, n1, 0, n3, 1, n5, 0, 0, 0, -1 + n9, n10, -1 + n11, 1, 1, 2]/
    (-1 + n11) + ((6 - 4*d + n1 + 2*n10 + n11 + n3 + 2*n5 + 2*n9)*
     j[p4, n1, 0, n3, 1, n5, 0, 0, 0, n9, n10, -1 + n11, 1, 1, 1])/
    (-1 + n11) + j[p4, n1, 0, n3, 1, n5, 0, 0, 0, n9, n10, n11, 0, 1, 1] + 
   (n9*j[p4, n1, 0, n3, 1, n5, 0, 0, 0, 1 + n9, n10, -1 + n11, 1, 1, 1])/
    (-1 + n11) + (n5*j[p4, n1, 0, n3, 1, 1 + n5, 0, 0, 0, -1 + n9, n10, 
      -1 + n11, 1, 1, 1])/(-1 + n11) + 
   (n5*j[p4, n1, 0, n3, 1, 1 + n5, 0, 0, 0, n9, n10, -1 + n11, 1, 0, 1])/
    (-1 + n11) + j[p4, n1, 0, n3, 1, 1 + n5, 0, 0, 0, n9, n10, -1 + n11, 1, 
     0, 2]/(1 - n11) - (n5*j[p4, n1, 0, n3, 1, 1 + n5, 0, 0, 0, n9, n10, 
      -1 + n11, 1, 1, 0])/(-1 + n11) + 
   (n5*j[p4, n1, 0, n3, 1, 1 + n5, 0, 0, 0, n9, n10, -1 + n11, 1, 1, 1])/
    (-1 + n11) - (n9*j[p4, n1, 0, n3, 1, 1 + n5, 0, 0, 0, 1 + n9, n10, 
      -1 + n11, 1, 1, 0])/(-1 + n11) + 
   (n9*j[p4, n1, 0, n3, 1, 1 + n5, 0, 0, 0, 1 + n9, n10, -1 + n11, 1, 1, 1])/
    (-1 + n11) + ((1 + n5)*j[p4, n1, 0, n3, 1, 2 + n5, 0, 0, 0, n9, n10, 
      -1 + n11, 1, 0, 1])/(-1 + n11) + 
   ((-1 - n5)*j[p4, n1, 0, n3, 1, 2 + n5, 0, 0, 0, n9, n10, -1 + n11, 1, 1, 
      0])/(-1 + n11) + j[p4, n1, 0, n3, 2, n5, 0, 0, 0, n9, n10, -1 + n11, 1, 
     1, 1]/(-1 + n11) + j[p4, n1, 0, n3, 2, 1 + n5, 0, -1, 0, n9, n10, 
     -1 + n11, 1, 1, 1]/(1 - n11) + j[p4, n1, 0, n3, 2, 1 + n5, 0, 0, 0, n9, 
     n10, -1 + n11, 1, 1, 0]/(1 - n11) + 
   (n3*j[p4, n1, 0, 1 + n3, 1, n5, 0, -1, 0, n9, n10, -1 + n11, 1, 1, 1])/
    (-1 + n11) + (n3*j[p4, n1, 0, 1 + n3, 1, n5, 0, 0, -1, n9, n10, -1 + n11, 
      1, 1, 1])/(-1 + n11) + (n3*j[p4, n1, 0, 1 + n3, 1, n5, 0, 0, 0, n9, 
      -1 + n10, -1 + n11, 1, 1, 1])/(-1 + n11) - 
   (n3*j[p4, n1, 0, 1 + n3, 1, n5, 0, 0, 0, n9, n10, -2 + n11, 1, 1, 1])/
    (-1 + n11) - (n3*j[p4, n1, 0, 1 + n3, 1, n5, 0, 0, 0, n9, n10, -1 + n11, 
      1, 1, 1])/(-1 + n11) + (n1*j[p4, 1 + n1, 0, n3, 1, n5, 0, 0, 0, n9, 
      n10, -1 + n11, 1, 0, 1])/(-1 + n11) - 
   (n1*j[p4, 1 + n1, 0, n3, 1, n5, 0, 0, 0, n9, n10, -1 + n11, 1, 1, 1])/
    (-1 + n11), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?NonPositive, (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, 
    (n7_)?NonPositive, (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 1 && n14 == 1 && n4 == 1 && n5 == 0 && 
    n7 == 0 && n8 == 0 &&  !(n11 == 1 || n3 == 0) -> 
  (n3*j[p4, -1, n2, 1 + n3, 1, 0, n6, 0, 0, n9, 1, -1 + n11, 1, n13, 1])/
    (-1 + n11) + (n9*j[p4, -1, n2, 1 + n3, 1, 0, n6, 0, 0, 1 + n9, 1, 
      -1 + n11, 1, n13, 1])/(-1 + n11) - 
   (n2*j[p4, -1, 1 + n2, n3, 1, 0, n6, 0, 0, n9, 1, -1 + n11, 1, n13, 1])/
    (-1 + n11) - (n3*j[p4, 0, -1 + n2, 1 + n3, 1, 0, n6, 0, 0, n9, 1, 
      -1 + n11, 1, n13, 1])/(-1 + n11) - 
   (n9*j[p4, 0, -1 + n2, 1 + n3, 1, 0, n6, 0, 0, 1 + n9, 1, -1 + n11, 1, n13, 
      1])/(-1 + n11) - (n6*j[p4, 0, -1 + n2, 1 + n3, 1, 0, 1 + n6, 0, 0, n9, 
      1, -1 + n11, 1, n13, 1])/(-1 + n11) + 
   j[p4, 0, n2, n3, 1, 0, n6, 0, 0, -1 + n9, 1, -1 + n11, 1, n13, 2]/
    (-1 + n11) + ((6 - 4*d + n11 + 2*n13 + n2 + n3 + 2*n6 + 2*n9)*
     j[p4, 0, n2, n3, 1, 0, n6, 0, 0, n9, 1, -1 + n11, 1, n13, 1])/
    (-1 + n11) + j[p4, 0, n2, n3, 1, 0, n6, 0, 0, n9, 1, n11, 0, n13, 1] - 
   (n6*j[p4, 0, n2, n3, 1, 0, 1 + n6, 0, 0, n9, 1, -1 + n11, 1, n13, 1])/
    (-1 + n11) + j[p4, 0, n2, n3, 2, 0, n6, 0, 0, n9, 1, -1 + n11, 1, n13, 1]/
    (1 - n11) + j[p4, 0, n2, 1 + n3, 0, 0, n6, 0, 0, n9, 1, -1 + n11, 1, n13, 
     2]/(1 - n11) - (n9*j[p4, 0, n2, 1 + n3, 0, 0, n6, 0, 0, 1 + n9, 1, 
      -1 + n11, 1, n13, 1])/(-1 + n11) - 
   (n6*j[p4, 0, n2, 1 + n3, 0, 0, 1 + n6, 0, 0, n9, 1, -1 + n11, 1, n13, 1])/
    (-1 + n11) + (n3*j[p4, 0, n2, 1 + n3, 1, 0, n6, -1, 0, n9, 1, -1 + n11, 
      1, n13, 1])/(-1 + n11) + 
   (n9*j[p4, 0, n2, 1 + n3, 1, 0, n6, -1, 0, 1 + n9, 1, -1 + n11, 1, n13, 1])/
    (-1 + n11) + (n3*j[p4, 0, n2, 1 + n3, 1, 0, n6, 0, -1, n9, 1, -1 + n11, 
      1, n13, 1])/(-1 + n11) + 
   (n9*j[p4, 0, n2, 1 + n3, 1, 0, n6, 0, -1, 1 + n9, 1, -1 + n11, 1, n13, 1])/
    (-1 + n11) + (n3*j[p4, 0, n2, 1 + n3, 1, 0, n6, 0, 0, n9, 0, -1 + n11, 1, 
      n13, 1])/(-1 + n11) - (n3*j[p4, 0, n2, 1 + n3, 1, 0, n6, 0, 0, n9, 1, 
      -2 + n11, 1, n13, 1])/(-1 + n11) - 
   (n3*j[p4, 0, n2, 1 + n3, 1, 0, n6, 0, 0, n9, 1, -1 + n11, 1, n13, 1])/
    (-1 + n11) + (n9*j[p4, 0, n2, 1 + n3, 1, 0, n6, 0, 0, 1 + n9, 0, 
      -1 + n11, 1, n13, 1])/(-1 + n11) - 
   (n9*j[p4, 0, n2, 1 + n3, 1, 0, n6, 0, 0, 1 + n9, 1, -2 + n11, 1, n13, 1])/
    (-1 + n11) + (n9*j[p4, 0, n2, 1 + n3, 1, 0, n6, 0, 0, 1 + n9, 1, 
      -1 + n11, 1, n13, 0])/(-1 + n11) - 
   (n9*j[p4, 0, n2, 1 + n3, 1, 0, n6, 0, 0, 1 + n9, 1, -1 + n11, 1, n13, 1])/
    (-1 + n11) + (n6*j[p4, 0, n2, 1 + n3, 1, 0, 1 + n6, -1, 0, n9, 1, 
      -1 + n11, 1, n13, 1])/(-1 + n11) + 
   (2*n6*j[p4, 0, n2, 1 + n3, 1, 0, 1 + n6, 0, -1, n9, 1, -1 + n11, 1, n13, 
      1])/(-1 + n11) - (n6*j[p4, 0, n2, 1 + n3, 1, 0, 1 + n6, 0, 0, n9, 1, 
      -1 + n11, 0, n13, 1])/(-1 + n11) + 
   (n6*j[p4, 0, n2, 1 + n3, 1, 0, 1 + n6, 0, 0, n9, 1, -1 + n11, 1, -1 + n13, 
      1])/(-1 + n11) + (n6*j[p4, 0, n2, 1 + n3, 1, 0, 1 + n6, 0, 0, n9, 1, 
      -1 + n11, 1, n13, 0])/(-1 + n11) + 
   j[p4, 0, n2, 1 + n3, 2, 0, n6, 0, 0, n9, 1, -1 + n11, 1, n13, 0]/
    (-1 + n11) - (n2*j[p4, 0, 1 + n2, -1 + n3, 1, 0, n6, 0, 0, n9, 1, 
      -1 + n11, 1, n13, 1])/(-1 + n11) + 
   (n2*j[p4, 0, 1 + n2, n3, 1, 0, n6, -1, 0, n9, 1, -1 + n11, 1, n13, 1])/
    (-1 + n11) + (n2*j[p4, 0, 1 + n2, n3, 1, 0, n6, 0, -1, n9, 1, -1 + n11, 
      1, n13, 1])/(-1 + n11) + 
   (n2*j[p4, 0, 1 + n2, n3, 1, 0, n6, 0, 0, n9, 0, -1 + n11, 1, n13, 1])/
    (-1 + n11) - (n2*j[p4, 0, 1 + n2, n3, 1, 0, n6, 0, 0, n9, 1, -1 + n11, 0, 
      n13, 1])/(-1 + n11) + (2*n2*j[p4, 0, 1 + n2, n3, 1, 0, n6, 0, 0, n9, 1, 
      -1 + n11, 1, -1 + n13, 1])/(-1 + n11), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n12 == 1 && n13 == 1 && n14 == 1 && n4 == 1 && n5 == 0 && 
    n7 == 0 && n8 == 0 &&  !(n11 == 1 || n3 == 0) -> 
  (n3*j[p4, -1 + n1, n2, 1 + n3, 1, 0, n6, 0, 0, n9, 1, -1 + n11, 1, 1, 1])/
    (-1 + n11) + (n9*j[p4, -1 + n1, n2, 1 + n3, 1, 0, n6, 0, 0, 1 + n9, 1, 
      -1 + n11, 1, 1, 1])/(-1 + n11) - 
   (n2*j[p4, -1 + n1, 1 + n2, n3, 1, 0, n6, 0, 0, n9, 1, -1 + n11, 1, 1, 1])/
    (-1 + n11) - (n3*j[p4, n1, -1 + n2, 1 + n3, 1, 0, n6, 0, 0, n9, 1, 
      -1 + n11, 1, 1, 1])/(-1 + n11) - 
   (n9*j[p4, n1, -1 + n2, 1 + n3, 1, 0, n6, 0, 0, 1 + n9, 1, -1 + n11, 1, 1, 
      1])/(-1 + n11) - (n6*j[p4, n1, -1 + n2, 1 + n3, 1, 0, 1 + n6, 0, 0, n9, 
      1, -1 + n11, 1, 1, 1])/(-1 + n11) + 
   j[p4, n1, n2, n3, 1, 0, n6, 0, 0, -1 + n9, 1, -1 + n11, 1, 1, 2]/
    (-1 + n11) + ((8 - 4*d + n1 + n11 + n2 + n3 + 2*n6 + 2*n9)*
     j[p4, n1, n2, n3, 1, 0, n6, 0, 0, n9, 1, -1 + n11, 1, 1, 1])/
    (-1 + n11) + j[p4, n1, n2, n3, 1, 0, n6, 0, 0, n9, 1, n11, 0, 1, 1] - 
   (n6*j[p4, n1, n2, n3, 1, 0, 1 + n6, 0, 0, n9, 1, -1 + n11, 1, 1, 1])/
    (-1 + n11) + j[p4, n1, n2, n3, 2, 0, n6, 0, 0, n9, 1, -1 + n11, 1, 1, 1]/
    (1 - n11) + j[p4, n1, n2, 1 + n3, 0, 0, n6, 0, 0, n9, 1, -1 + n11, 1, 1, 
     2]/(1 - n11) - (n9*j[p4, n1, n2, 1 + n3, 0, 0, n6, 0, 0, 1 + n9, 1, 
      -1 + n11, 1, 1, 1])/(-1 + n11) - 
   (n6*j[p4, n1, n2, 1 + n3, 0, 0, 1 + n6, 0, 0, n9, 1, -1 + n11, 1, 1, 1])/
    (-1 + n11) + (n3*j[p4, n1, n2, 1 + n3, 1, 0, n6, -1, 0, n9, 1, -1 + n11, 
      1, 1, 1])/(-1 + n11) + (n9*j[p4, n1, n2, 1 + n3, 1, 0, n6, -1, 0, 
      1 + n9, 1, -1 + n11, 1, 1, 1])/(-1 + n11) + 
   (n3*j[p4, n1, n2, 1 + n3, 1, 0, n6, 0, -1, n9, 1, -1 + n11, 1, 1, 1])/
    (-1 + n11) + (n9*j[p4, n1, n2, 1 + n3, 1, 0, n6, 0, -1, 1 + n9, 1, 
      -1 + n11, 1, 1, 1])/(-1 + n11) + 
   (n3*j[p4, n1, n2, 1 + n3, 1, 0, n6, 0, 0, n9, 0, -1 + n11, 1, 1, 1])/
    (-1 + n11) - (n3*j[p4, n1, n2, 1 + n3, 1, 0, n6, 0, 0, n9, 1, -2 + n11, 
      1, 1, 1])/(-1 + n11) - (n3*j[p4, n1, n2, 1 + n3, 1, 0, n6, 0, 0, n9, 1, 
      -1 + n11, 1, 1, 1])/(-1 + n11) + 
   (n9*j[p4, n1, n2, 1 + n3, 1, 0, n6, 0, 0, 1 + n9, 0, -1 + n11, 1, 1, 1])/
    (-1 + n11) - (n9*j[p4, n1, n2, 1 + n3, 1, 0, n6, 0, 0, 1 + n9, 1, 
      -2 + n11, 1, 1, 1])/(-1 + n11) + 
   (n9*j[p4, n1, n2, 1 + n3, 1, 0, n6, 0, 0, 1 + n9, 1, -1 + n11, 1, 1, 0])/
    (-1 + n11) - (n9*j[p4, n1, n2, 1 + n3, 1, 0, n6, 0, 0, 1 + n9, 1, 
      -1 + n11, 1, 1, 1])/(-1 + n11) + 
   (n6*j[p4, n1, n2, 1 + n3, 1, 0, 1 + n6, -1, 0, n9, 1, -1 + n11, 1, 1, 1])/
    (-1 + n11) + (2*n6*j[p4, n1, n2, 1 + n3, 1, 0, 1 + n6, 0, -1, n9, 1, 
      -1 + n11, 1, 1, 1])/(-1 + n11) - 
   (n6*j[p4, n1, n2, 1 + n3, 1, 0, 1 + n6, 0, 0, n9, 1, -1 + n11, 0, 1, 1])/
    (-1 + n11) + (n6*j[p4, n1, n2, 1 + n3, 1, 0, 1 + n6, 0, 0, n9, 1, 
      -1 + n11, 1, 0, 1])/(-1 + n11) + 
   (n6*j[p4, n1, n2, 1 + n3, 1, 0, 1 + n6, 0, 0, n9, 1, -1 + n11, 1, 1, 0])/
    (-1 + n11) + j[p4, n1, n2, 1 + n3, 2, 0, n6, 0, 0, n9, 1, -1 + n11, 1, 1, 
     0]/(-1 + n11) - (n2*j[p4, n1, 1 + n2, -1 + n3, 1, 0, n6, 0, 0, n9, 1, 
      -1 + n11, 1, 1, 1])/(-1 + n11) + 
   (n2*j[p4, n1, 1 + n2, n3, 1, 0, n6, -1, 0, n9, 1, -1 + n11, 1, 1, 1])/
    (-1 + n11) + (n2*j[p4, n1, 1 + n2, n3, 1, 0, n6, 0, -1, n9, 1, -1 + n11, 
      1, 1, 1])/(-1 + n11) + (n2*j[p4, n1, 1 + n2, n3, 1, 0, n6, 0, 0, n9, 0, 
      -1 + n11, 1, 1, 1])/(-1 + n11) - 
   (n2*j[p4, n1, 1 + n2, n3, 1, 0, n6, 0, 0, n9, 1, -1 + n11, 0, 1, 1])/
    (-1 + n11) + (2*n2*j[p4, n1, 1 + n2, n3, 1, 0, n6, 0, 0, n9, 1, -1 + n11, 
      1, 0, 1])/(-1 + n11) + (n1*j[p4, 1 + n1, n2, n3, 1, 0, n6, 0, 0, n9, 1, 
      -1 + n11, 1, 0, 1])/(-1 + n11) - 
   (n1*j[p4, 1 + n1, n2, n3, 1, 0, n6, 0, 0, n9, 1, -1 + n11, 1, 1, 1])/
    (-1 + n11), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?NonPositive, (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, 
    (n7_)?NonPositive, (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 1 && n13 == 1 && n14 == 1 && n4 == 1 && 
    n5 == 0 && n8 == 0 &&  !(n7 == 0 || n9 == 1) -> 
  -((n6*j[p4, -1 + n1, -1 + n2, n3, 1, 0, 1 + n6, 1 + n7, 0, -1 + n9, 1, 1, 
       1, 1, 1])/(-1 + n9)) - (n6*j[p4, -1 + n1, n2, -1 + n3, 1, 0, 1 + n6, 
      1 + n7, 0, -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) + 
   ((3 - 2*d + n1 + n3 + n6 + n9)*j[p4, -1 + n1, n2, n3, 1, 0, n6, 1 + n7, 0, 
      -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) + j[p4, -1 + n1, n2, n3, 1, 0, n6, 
    1 + n7, 0, n9, 1, 1, 1, 1, 0] - j[p4, -1 + n1, n2, n3, 1, 0, n6, 1 + n7, 
    0, n9, 1, 1, 1, 1, 1] + (n6*j[p4, -1 + n1, n2, n3, 1, 0, 1 + n6, n7, 0, 
      -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) + 
   (n6*j[p4, -1 + n1, n2, n3, 1, 0, 1 + n6, 1 + n7, -1, -1 + n9, 1, 1, 1, 1, 
      1])/(-1 + n9) - (n6*j[p4, -1 + n1, n2, n3, 1, 0, 1 + n6, 1 + n7, 0, 
      -1 + n9, 1, 1, 0, 1, 1])/(-1 + n9) + 
   (n6*j[p4, -1 + n1, n2, n3, 1, 0, 1 + n6, 1 + n7, 0, -1 + n9, 1, 1, 1, 0, 
      1])/(-1 + n9) + (n6*j[p4, -1 + n1, n2, n3, 1, 0, 1 + n6, 1 + n7, 0, 
      -1 + n9, 1, 1, 1, 1, 0])/(-1 + n9) - 
   (n3*j[p4, -1 + n1, n2, 1 + n3, 1, -1, n6, 1 + n7, 0, -1 + n9, 1, 1, 1, 1, 
      1])/(-1 + n9) + (n3*j[p4, -1 + n1, n2, 1 + n3, 1, 0, n6, 1 + n7, 0, 
      -1 + n9, 1, 1, 1, 0, 1])/(-1 + n9) - 
   (n2*j[p4, -1 + n1, 1 + n2, -1 + n3, 1, 0, n6, 1 + n7, 0, -1 + n9, 1, 1, 1, 
      1, 1])/(-1 + n9) + (n2*j[p4, -1 + n1, 1 + n2, n3, 1, -1, n6, 1 + n7, 0, 
      -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) + 
   (n2*j[p4, -1 + n1, 1 + n2, n3, 1, 0, n6, 1 + n7, -1, -1 + n9, 1, 1, 1, 1, 
      1])/(-1 + n9) - (n2*j[p4, -1 + n1, 1 + n2, n3, 1, 0, n6, 1 + n7, 0, 
      -1 + n9, 1, 1, 0, 1, 1])/(-1 + n9) + 
   (2*n2*j[p4, -1 + n1, 1 + n2, n3, 1, 0, n6, 1 + n7, 0, -1 + n9, 1, 1, 1, 0, 
      1])/(-1 + n9) + (n6*j[p4, n1, -2 + n2, n3, 1, 0, 1 + n6, 1 + n7, 0, 
      -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) + 
   (n6*j[p4, n1, -1 + n2, -1 + n3, 1, 0, 1 + n6, 1 + n7, 0, -1 + n9, 1, 1, 1, 
      1, 1])/(-1 + n9) + ((-3 + 2*d - n1 - n3 - 2*n6 - n9)*
     j[p4, n1, -1 + n2, n3, 1, 0, n6, 1 + n7, 0, -1 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9) - j[p4, n1, -1 + n2, n3, 1, 0, n6, 1 + n7, 0, n9, 1, 1, 1, 1, 
    0] + j[p4, n1, -1 + n2, n3, 1, 0, n6, 1 + n7, 0, n9, 1, 1, 1, 1, 1] - 
   (2*n6*j[p4, n1, -1 + n2, n3, 1, 0, 1 + n6, n7, 0, -1 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9) - (n6*j[p4, n1, -1 + n2, n3, 1, 0, 1 + n6, 1 + n7, -1, -1 + n9, 
      1, 1, 1, 1, 1])/(-1 + n9) + 
   (n6*j[p4, n1, -1 + n2, n3, 1, 0, 1 + n6, 1 + n7, 0, -1 + n9, 1, 1, 0, 1, 
      1])/(-1 + n9) - (n6*j[p4, n1, -1 + n2, n3, 1, 0, 1 + n6, 1 + n7, 0, 
      -1 + n9, 1, 1, 1, 0, 1])/(-1 + n9) - 
   (n6*j[p4, n1, -1 + n2, n3, 1, 0, 1 + n6, 1 + n7, 0, -1 + n9, 1, 1, 1, 1, 
      0])/(-1 + n9) + (n3*j[p4, n1, -1 + n2, 1 + n3, 1, 0, n6, n7, 0, 
      -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) - 
   (n3*j[p4, n1, -1 + n2, 1 + n3, 1, 0, n6, 1 + n7, 0, -1 + n9, 1, 1, 1, 0, 
      1])/(-1 + n9) + ((n2 - n6)*j[p4, n1, n2, -1 + n3, 1, 0, n6, 1 + n7, 0, 
      -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) - 
   (n6*j[p4, n1, n2, -1 + n3, 1, 0, 1 + n6, n7, 0, -1 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9) + ((-3 + d - n2 - n3 - n6 - n7)*j[p4, n1, n2, n3, 1, -1, n6, 
      1 + n7, 0, -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) + 
   ((-1 - n7)*j[p4, n1, n2, n3, 1, -1, n6, 2 + n7, 0, -1 + n9, 0, 1, 1, 1, 
      1])/(-1 + n9) + ((1 + n7)*j[p4, n1, n2, n3, 1, -1, n6, 2 + n7, 0, 
      -1 + n9, 1, 0, 1, 1, 1])/(-1 + n9) + 
   (n6*j[p4, n1, n2, n3, 1, -1, 1 + n6, 1 + n7, 0, -2 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9) - (n6*j[p4, n1, n2, n3, 1, -1, 1 + n6, 1 + n7, 0, -1 + n9, 0, 
      1, 1, 1, 1])/(-1 + n9) + ((3 - 2*d + n1 + n3 + n6 + n9)*
     j[p4, n1, n2, n3, 1, 0, -1 + n6, 1 + n7, 0, -1 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9) + j[p4, n1, n2, n3, 1, 0, -1 + n6, 1 + n7, 0, n9, 1, 1, 1, 1, 
    0] - j[p4, n1, n2, n3, 1, 0, -1 + n6, 1 + n7, 0, n9, 1, 1, 1, 1, 1] + 
   ((6 - 3*d + n1 + 2*n3 + 3*n6 + n7 + n9)*j[p4, n1, n2, n3, 1, 0, n6, n7, 0, 
      -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) + j[p4, n1, n2, n3, 1, 0, n6, n7, 0, 
    n9, 1, 1, 1, 1, 0] + ((-n2 + n6)*j[p4, n1, n2, n3, 1, 0, n6, 1 + n7, -1, 
      -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) + 
   (n7*j[p4, n1, n2, n3, 1, 0, n6, 1 + n7, 0, -1 + n9, 0, 1, 1, 1, 1])/
    (-1 + n9) - (n7*j[p4, n1, n2, n3, 1, 0, n6, 1 + n7, 0, -1 + n9, 1, 0, 1, 
      1, 1])/(-1 + n9) + ((n2 - n6)*j[p4, n1, n2, n3, 1, 0, n6, 1 + n7, 0, 
      -1 + n9, 1, 1, 0, 1, 1])/(-1 + n9) + 
   ((n1 - 2*n2 + n6)*j[p4, n1, n2, n3, 1, 0, n6, 1 + n7, 0, -1 + n9, 1, 1, 1, 
      0, 1])/(-1 + n9) + ((-1 + n6)*j[p4, n1, n2, n3, 1, 0, n6, 1 + n7, 0, 
      -1 + n9, 1, 1, 1, 1, 0])/(-1 + n9) + 
   ((1 - n1)*j[p4, n1, n2, n3, 1, 0, n6, 1 + n7, 0, -1 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9) + (n6*j[p4, n1, n2, n3, 1, 0, 1 + n6, -1 + n7, 0, -1 + n9, 1, 
      1, 1, 1, 1])/(-1 + n9) + 
   (n6*j[p4, n1, n2, n3, 1, 0, 1 + n6, n7, -1, -1 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9) - (n6*j[p4, n1, n2, n3, 1, 0, 1 + n6, n7, 0, -2 + n9, 1, 1, 1, 
      1, 1])/(-1 + n9) + (n6*j[p4, n1, n2, n3, 1, 0, 1 + n6, n7, 0, -1 + n9, 
      0, 1, 1, 1, 1])/(-1 + n9) - 
   (n6*j[p4, n1, n2, n3, 1, 0, 1 + n6, n7, 0, -1 + n9, 1, 1, 0, 1, 1])/
    (-1 + n9) + (n6*j[p4, n1, n2, n3, 1, 0, 1 + n6, n7, 0, -1 + n9, 1, 1, 1, 
      0, 1])/(-1 + n9) + (n6*j[p4, n1, n2, n3, 1, 0, 1 + n6, n7, 0, -1 + n9, 
      1, 1, 1, 1, 0])/(-1 + n9) + j[p4, n1, n2, n3, 2, -1, n6, 1 + n7, 0, 
     -2 + n9, 1, 1, 1, 1, 1]/(-1 + n9) + 
   j[p4, n1, n2, n3, 2, -1, n6, 1 + n7, 0, -1 + n9, 0, 1, 1, 1, 1]/(1 - n9) + 
   j[p4, n1, n2, n3, 2, -1, n6, 1 + n7, 0, -1 + n9, 1, 0, 1, 1, 1]/
    (-1 + n9) + j[p4, n1, n2, n3, 2, 0, n6, n7, 0, -2 + n9, 1, 1, 1, 1, 1]/
    (1 - n9) + j[p4, n1, n2, n3, 2, 0, n6, n7, 0, -1 + n9, 0, 1, 1, 1, 1]/
    (-1 + n9) + j[p4, n1, n2, n3, 2, 0, n6, n7, 0, -1 + n9, 1, 0, 1, 1, 1]/
    (1 - n9) + (n3*j[p4, n1, n2, 1 + n3, 1, -1, n6, 1 + n7, -1, -1 + n9, 1, 
      1, 1, 1, 1])/(-1 + n9) - 
   (n3*j[p4, n1, n2, 1 + n3, 1, -1, n6, 1 + n7, 0, -1 + n9, 0, 1, 1, 1, 1])/
    (-1 + n9) + (n3*j[p4, n1, n2, 1 + n3, 1, -1, n6, 1 + n7, 0, -1 + n9, 1, 
      0, 1, 1, 1])/(-1 + n9) - 
   (n3*j[p4, n1, n2, 1 + n3, 1, -1, n6, 1 + n7, 0, -1 + n9, 1, 1, 0, 1, 1])/
    (-1 + n9) + (n3*j[p4, n1, n2, 1 + n3, 1, -1, n6, 1 + n7, 0, -1 + n9, 1, 
      1, 1, 0, 1])/(-1 + n9) + 
   (n3*j[p4, n1, n2, 1 + n3, 1, -1, n6, 1 + n7, 0, -1 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9) - (n3*j[p4, n1, n2, 1 + n3, 1, 0, -1 + n6, n7, 0, -1 + n9, 1, 
      1, 1, 1, 1])/(-1 + n9) + 
   (n3*j[p4, n1, n2, 1 + n3, 1, 0, -1 + n6, 1 + n7, 0, -1 + n9, 1, 1, 1, 0, 
      1])/(-1 + n9) - (n3*j[p4, n1, n2, 1 + n3, 1, 0, n6, -1 + n7, 0, 
      -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) - 
   (n3*j[p4, n1, n2, 1 + n3, 1, 0, n6, n7, -1, -1 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9) + (n3*j[p4, n1, n2, 1 + n3, 1, 0, n6, n7, 0, -1 + n9, 0, 1, 1, 
      1, 1])/(-1 + n9) - (n3*j[p4, n1, n2, 1 + n3, 1, 0, n6, n7, 0, -1 + n9, 
      1, 0, 1, 1, 1])/(-1 + n9) + 
   (n3*j[p4, n1, n2, 1 + n3, 1, 0, n6, n7, 0, -1 + n9, 1, 1, 0, 1, 1])/
    (-1 + n9) - (n3*j[p4, n1, n2, 1 + n3, 1, 0, n6, n7, 0, -1 + n9, 1, 1, 1, 
      1, 1])/(-1 + n9) - (n2*j[p4, n1, 1 + n2, -1 + n3, 1, 0, -1 + n6, 
      1 + n7, 0, -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) - 
   (n2*j[p4, n1, 1 + n2, -1 + n3, 1, 0, n6, n7, 0, -1 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9) - (n2*j[p4, n1, 1 + n2, n3, 1, -1, n6, 1 + n7, 0, -1 + n9, 0, 
      1, 1, 1, 1])/(-1 + n9) + 
   (n2*j[p4, n1, 1 + n2, n3, 1, 0, -1 + n6, n7, 0, -1 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9) + (n2*j[p4, n1, 1 + n2, n3, 1, 0, -1 + n6, 1 + n7, -1, -1 + n9, 
      1, 1, 1, 1, 1])/(-1 + n9) - 
   (n2*j[p4, n1, 1 + n2, n3, 1, 0, -1 + n6, 1 + n7, 0, -1 + n9, 1, 1, 0, 1, 
      1])/(-1 + n9) + (2*n2*j[p4, n1, 1 + n2, n3, 1, 0, -1 + n6, 1 + n7, 0, 
      -1 + n9, 1, 1, 1, 0, 1])/(-1 + n9) + 
   (n2*j[p4, n1, 1 + n2, n3, 1, 0, n6, -1 + n7, 0, -1 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9) + (n2*j[p4, n1, 1 + n2, n3, 1, 0, n6, n7, -1, -1 + n9, 1, 1, 1, 
      1, 1])/(-1 + n9) + (n2*j[p4, n1, 1 + n2, n3, 1, 0, n6, n7, 0, -1 + n9, 
      0, 1, 1, 1, 1])/(-1 + n9) - 
   (n2*j[p4, n1, 1 + n2, n3, 1, 0, n6, n7, 0, -1 + n9, 1, 1, 0, 1, 1])/
    (-1 + n9) + (2*n2*j[p4, n1, 1 + n2, n3, 1, 0, n6, n7, 0, -1 + n9, 1, 1, 
      1, 0, 1])/(-1 + n9) - (n1*j[p4, 1 + n1, -1 + n2, n3, 1, 0, n6, 1 + n7, 
      0, -1 + n9, 1, 1, 1, 0, 1])/(-1 + n9) + 
   (n1*j[p4, 1 + n1, -1 + n2, n3, 1, 0, n6, 1 + n7, 0, -1 + n9, 1, 1, 1, 1, 
      1])/(-1 + n9) + (n1*j[p4, 1 + n1, n2, n3, 1, 0, -1 + n6, 1 + n7, 0, 
      -1 + n9, 1, 1, 1, 0, 1])/(-1 + n9) - 
   (n1*j[p4, 1 + n1, n2, n3, 1, 0, -1 + n6, 1 + n7, 0, -1 + n9, 1, 1, 1, 1, 
      1])/(-1 + n9) + (n1*j[p4, 1 + n1, n2, n3, 1, 0, n6, n7, 0, -1 + n9, 1, 
      1, 1, 0, 1])/(-1 + n9) - 
   (n1*j[p4, 1 + n1, n2, n3, 1, 0, n6, n7, 0, -1 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 1 && n13 == 1 && n14 == 1 && n4 == 1 && 
    n8 == 0 && n9 == 1 && n7 != 0 -> 
  ((15*n6 - 5*d*n6 + n1*n6 + 2*n2*n6 + 3*n3*n6 + 2*n5*n6 + 3*n6^2 + 3*n6*n7)*
     j[p4, -1 + n1, -1 + n2, n3, 1, n5, 1 + n6, 1 + n7, 0, 1, 1, 1, 1, 1, 1])/
    ((-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((-9 + 3*d - n1 - n2 - n3 - 2*n5 - 2*n6 - 11*n7 + 3*d*n7 - n1*n7 - n2*n7 - 
      n3*n7 - 2*n5*n7 - 2*n6*n7 - 2*n7^2)*j[p4, -1 + n1, n2, -1 + n3, 1, n5, 
      n6, 2 + n7, 0, 1, 1, 1, 1, 1, 1])/((-3 + d - n1 - n5 - n7)*
     (-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((9*n6 - 3*d*n6 + n1*n6 + n2*n6 + n3*n6 + 2*n5*n6 + 2*n6^2 + 2*n6*n7)*
     j[p4, -1 + n1, n2, -1 + n3, 1, n5, 1 + n6, 1 + n7, 0, 1, 1, 1, 1, 1, 1])/
    ((-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((9 - 3*d + n1 + n2 + n3 + 2*n5 + 2*n6 + 11*n7 - 3*d*n7 + n1*n7 + n2*n7 + 
      n3*n7 + 2*n5*n7 + 2*n6*n7 + 2*n7^2)*j[p4, -1 + n1, n2, n3, 0, n5, n6, 
      2 + n7, 0, 1, 1, 1, 1, 1, 1])/((-3 + d - n1 - n5 - n7)*
     (-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   (n6*j[p4, -1 + n1, n2, n3, 0, n5, 1 + n6, 1 + n7, 0, 1, 1, 1, 1, 1, 1])/
    (-3 + d - n1 - n5 - n7) + 
   ((-9 + 3*d - n1 - n2 - n3 - 2*n5 - 2*n6 - 11*n7 + 3*d*n7 - n1*n7 - n2*n7 - 
      n3*n7 - 2*n5*n7 - 2*n6*n7 - 2*n7^2)*j[p4, -1 + n1, n2, n3, 1, -1 + n5, 
      n6, 2 + n7, 0, 1, 1, 1, 1, 1, 1])/((-3 + d - n1 - n5 - n7)*
     (-6 + 2*d - n2 - 2*n3 - n6 - n7)) - 
   (n6*j[p4, -1 + n1, n2, n3, 1, -1 + n5, 1 + n6, 1 + n7, 0, 1, 1, 1, 1, 1, 
      1])/(-3 + d - n1 - n5 - n7) + 
   ((-9 + 3*d - n1 - n2 - n3 - 2*n5 - 2*n6 - 2*n7)*j[p4, -1 + n1, n2, n3, 1, 
      n5, n6, 1 + n7, 0, 0, 2, 1, 1, 1, 1])/((-3 + d - n1 - n5 - n7)*
     (-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((-36 + 24*d - 4*d^2 - 6*n1 + 2*d*n1 - 30*n2 + 10*d*n2 - 3*n1*n2 - 
      3*n2^2 - 18*n3 + 6*d*n3 - 2*n1*n3 - 5*n2*n3 - 2*n3^2 - 6*n5 + 2*d*n5 - 
      5*n2*n5 - 2*n3*n5 + 3*n6 - d*n6 - 4*n2*n6 + n5*n6 + 2*n6^2 - 18*n7 + 
      6*d*n7 - n1*n7 - 7*n2*n7 - 5*n3*n7 - n5*n7 - 2*n7^2)*
     j[p4, -1 + n1, n2, n3, 1, n5, n6, 1 + n7, 0, 1, 1, 1, 1, 1, 1])/
    ((-3 + d - n1 - n5 - n7)*(-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((15 - 5*d + n1 + 2*n2 + 3*n3 + 2*n5 + 3*n6 + 3*n7)*
     j[p4, -1 + n1, n2, n3, 1, n5, n6, 1 + n7, 0, 1, 1, 1, 1, 2, 0])/
    (2*(-3 + d - n1 - n5 - n7)*(-6 + 2*d - n2 - 2*n3 - n6 - n7)) - 
   j[p4, -1 + n1, n2, n3, 1, n5, n6, 1 + n7, 0, 1, 2, 0, 1, 1, 1]/
    (-3 + d - n1 - n5 - n7) + ((-9 + 3*d - n1 - n2 - n3 - 2*n5 - 2*n6 - 2*n7)*
     j[p4, -1 + n1, n2, n3, 1, n5, n6, 1 + n7, 0, 1, 2, 1, 0, 1, 1])/
    ((-3 + d - n1 - n5 - n7)*(-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((9 - 3*d + n1 + n2 + n3 + 2*n5 + 2*n6 + 2*n7)*j[p4, -1 + n1, n2, n3, 1, 
      n5, n6, 1 + n7, 0, 1, 2, 1, 1, 0, 1])/((-3 + d - n1 - n5 - n7)*
     (-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((9 - 3*d + n1 + n2 + n3 + 2*n5 + 2*n6 + 11*n7 - 3*d*n7 + n1*n7 + n2*n7 + 
      n3*n7 + 2*n5*n7 + 2*n6*n7 + 2*n7^2)*j[p4, -1 + n1, n2, n3, 1, n5, n6, 
      2 + n7, 0, 1, 1, 1, 1, 0, 1])/((-3 + d - n1 - n5 - n7)*
     (-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((-9*n6 + 3*d*n6 - n1*n6 - n2*n6 - n3*n6 - 2*n5*n6 - 2*n6^2 - 2*n6*n7)*
     j[p4, -1 + n1, n2, n3, 1, n5, 1 + n6, n7, 0, 1, 1, 1, 1, 1, 1])/
    ((-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((-15*n6 + 5*d*n6 - n1*n6 - 2*n2*n6 - 3*n3*n6 - 2*n5*n6 - 3*n6^2 - 
      3*n6*n7)*j[p4, -1 + n1, n2, n3, 1, n5, 1 + n6, 1 + n7, -1, 1, 1, 1, 1, 
      1, 1])/((-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((9*n6 - 3*d*n6 + n1*n6 + n2*n6 + n3*n6 + 2*n5*n6 + 2*n6^2 + 2*n6*n7)*
     j[p4, -1 + n1, n2, n3, 1, n5, 1 + n6, 1 + n7, 0, 1, 1, 1, 0, 1, 1])/
    ((-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((-9*n6 + 3*d*n6 - n1*n6 - n2*n6 - n3*n6 - 2*n5*n6 - 2*n6^2 - 2*n6*n7)*
     j[p4, -1 + n1, n2, n3, 1, n5, 1 + n6, 1 + n7, 0, 1, 1, 1, 1, 0, 1])/
    ((-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((-9*n6 + 3*d*n6 - n1*n6 - n2*n6 - n3*n6 - 2*n5*n6 - 2*n6^2 - 2*n6*n7)*
     j[p4, -1 + n1, n2, n3, 1, n5, 1 + n6, 1 + n7, 0, 1, 1, 1, 1, 1, 0])/
    ((-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((-3*n5 + d*n5 - n1*n5 + n3*n5 - 2*n5^2 - n5*n6 - n5*n7)*
     j[p4, -1 + n1, n2, n3, 1, 1 + n5, n6, 1 + n7, 0, 1, 1, 1, 1, 0, 1])/
    (2*(-6 + 2*d - n2 - 2*n3 - n6 - n7)*(3 - d + n1 + n5 + n7)) + 
   ((3*n5 - d*n5 + n1*n5 - n3*n5 + 2*n5^2 + n5*n6 + n5*n7)*
     j[p4, -1 + n1, n2, n3, 1, 1 + n5, n6, 1 + n7, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-6 + 2*d - n2 - 2*n3 - n6 - n7)*(3 - d + n1 + n5 + n7)) + 
   ((15 - 5*d + n1 + 2*n2 + 3*n3 + 2*n5 + 3*n6 + 3*n7)*
     j[p4, -1 + n1, n2, n3, 2, n5, n6, 1 + n7, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-3 + d - n1 - n5 - n7)*(-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((-3*n3 + d*n3 - n1*n3 + n3^2 - 2*n3*n5 - n3*n6 - n3*n7)*
     j[p4, -1 + n1, n2, 1 + n3, 0, n5, n6, 1 + n7, 0, 1, 1, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((3*n3 - d*n3 + n1*n3 - n3^2 + 2*n3*n5 + n3*n6 + n3*n7)*
     j[p4, -1 + n1, n2, 1 + n3, 1, n5, n6, 1 + n7, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((18*n2 - 6*d*n2 + 2*n1*n2 + 2*n2^2 + 2*n2*n3 + 4*n2*n5 + 4*n2*n6 + 
      4*n2*n7)*j[p4, -1 + n1, 1 + n2, -1 + n3, 1, n5, n6, 1 + n7, 0, 1, 1, 1, 
      1, 1, 1])/((-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((-18*n2 + 6*d*n2 - 2*n1*n2 - 2*n2^2 - 2*n2*n3 - 4*n2*n5 - 4*n2*n6 - 
      4*n2*n7)*j[p4, -1 + n1, 1 + n2, n3, 1, n5, -1 + n6, 1 + n7, 0, 1, 1, 1, 
      1, 1, 1])/((-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((-6*n2 + 2*d*n2 - 2*n1*n2 + 2*n2*n3 - 4*n2*n5 - 2*n2*n6 - 2*n2*n7)*
     j[p4, -1 + n1, 1 + n2, n3, 1, n5, n6, n7, 0, 1, 1, 1, 1, 1, 1])/
    ((-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((-18*n2 + 6*d*n2 - 2*n1*n2 - 2*n2^2 - 2*n2*n3 - 4*n2*n5 - 4*n2*n6 - 
      4*n2*n7)*j[p4, -1 + n1, 1 + n2, n3, 1, n5, n6, 1 + n7, -1, 1, 1, 1, 1, 
      1, 1])/((-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((21*n2 - 7*d*n2 + 3*n1*n2 + 2*n2^2 + n2*n3 + 6*n2*n5 + 5*n2*n6 + 5*n2*n7)*
     j[p4, -1 + n1, 1 + n2, n3, 1, n5, n6, 1 + n7, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((-21*n2 + 7*d*n2 - 3*n1*n2 - 2*n2^2 - n2*n3 - 6*n2*n5 - 5*n2*n6 - 
      5*n2*n7)*j[p4, -1 + n1, 1 + n2, n3, 1, n5, n6, 1 + n7, 0, 1, 1, 1, 1, 
      0, 1])/((-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) - 
   (n6*j[p4, n1, -2 + n2, n3, 1, n5, 1 + n6, 1 + n7, 0, 1, 1, 1, 1, 1, 1])/
    (-3 + d - n1 - n5 - n7) + 
   ((9 - 3*d + n1 + n2 + n3 + 2*n5 + 2*n6 + 11*n7 - 3*d*n7 + n1*n7 + n2*n7 + 
      n3*n7 + 2*n5*n7 + 2*n6*n7 + 2*n7^2)*j[p4, n1, -1 + n2, -1 + n3, 1, n5, 
      n6, 2 + n7, 0, 1, 1, 1, 1, 1, 1])/((-3 + d - n1 - n5 - n7)*
     (-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((3 - d + n1 - n3 + 2*n5 + n6 + 4*n7 - d*n7 + n1*n7 - n3*n7 + 2*n5*n7 + 
      n6*n7 + n7^2)*j[p4, n1, -1 + n2, n3, 0, n5, n6, 2 + n7, 0, 1, 1, 1, 1, 
      1, 1])/(2*(-3 + d - n1 - n5 - n7)*(-6 + 2*d - n2 - 2*n3 - n6 - n7)) - 
   (n6*j[p4, n1, -1 + n2, n3, 0, n5, 1 + n6, 1 + n7, 0, 1, 1, 1, 1, 1, 1])/
    (-3 + d - n1 - n5 - n7) + ((-3*n6 + d*n6 - n1*n6 + n3*n6 - 2*n5*n6 - 
      n6^2 - n6*n7)*j[p4, n1, -1 + n2, n3, 1, -1 + n5, 1 + n6, 1 + n7, 0, 1, 
      1, 1, 1, 1, 1])/((-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + 
      n7)) + ((-3 + d - n1 + n3 - 2*n5 - n6 - n7)*j[p4, n1, -1 + n2, n3, 1, 
      n5, n6, 1 + n7, 0, 0, 2, 1, 1, 1, 1])/(2*(-3 + d - n1 - n5 - n7)*
     (-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((3 - d + n1 - n3 + 2*n5 + n6 + n7)*j[p4, n1, -1 + n2, n3, 1, n5, n6, 
      1 + n7, 0, 1, 1, 0, 2, 1, 1])/(2*(-3 + d - n1 - n5 - n7)*
     (-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((-6 + 2*d - n1 - n2 - n3 - n5 - 2*n7)*j[p4, n1, -1 + n2, n3, 1, n5, n6, 
      1 + n7, 0, 1, 1, 1, 1, 1, 1])/(-3 + d - n1 - n5 - n7) + 
   ((3 - d + n1 - n3 + 2*n5 + n6 + n7)*j[p4, n1, -1 + n2, n3, 1, n5, n6, 
      1 + n7, 0, 1, 1, 2, 0, 1, 1])/(2*(-3 + d - n1 - n5 - n7)*
     (-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   j[p4, n1, -1 + n2, n3, 1, n5, n6, 1 + n7, 0, 1, 2, 0, 1, 1, 1]/
    (-3 + d - n1 - n5 - n7) + ((9 - 3*d + n1 + n2 + n3 + 2*n5 + 2*n6 + 2*n7)*
     j[p4, n1, -1 + n2, n3, 1, n5, n6, 1 + n7, 0, 1, 2, 1, 0, 1, 1])/
    ((-3 + d - n1 - n5 - n7)*(-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((-9 + 3*d - n1 - n2 - n3 - 2*n5 - 2*n6 - 2*n7)*j[p4, n1, -1 + n2, n3, 1, 
      n5, n6, 1 + n7, 0, 1, 2, 1, 1, 0, 1])/((-3 + d - n1 - n5 - n7)*
     (-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((-15 + 5*d - n1 - 2*n2 - 3*n3 - 2*n5 - 3*n6 - 18*n7 + 5*d*n7 - n1*n7 - 
      2*n2*n7 - 3*n3*n7 - 2*n5*n7 - 3*n6*n7 - 3*n7^2)*
     j[p4, n1, -1 + n2, n3, 1, n5, n6, 2 + n7, 0, 1, 1, 1, 1, 0, 1])/
    (2*(3 - d + n1 + n5 + n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   (n6*j[p4, n1, -1 + n2, n3, 1, n5, 1 + n6, n7, 0, 1, 1, 1, 1, 1, 1])/
    (-3 + d - n1 - n5 - n7) + 
   (n6*j[p4, n1, -1 + n2, n3, 1, n5, 1 + n6, 1 + n7, -1, 1, 1, 1, 1, 1, 1])/
    (-3 + d - n1 - n5 - n7) + 
   ((3*n6 - d*n6 + n1*n6 - n3*n6 + 2*n5*n6 + n6^2 + n6*n7)*
     j[p4, n1, -1 + n2, n3, 1, n5, 1 + n6, 1 + n7, 0, 0, 1, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((-3*n6 + d*n6 - n1*n6 + n3*n6 - 2*n5*n6 - n6^2 - n6*n7)*
     j[p4, n1, -1 + n2, n3, 1, n5, 1 + n6, 1 + n7, 0, 1, 0, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((-9*n6 + 3*d*n6 - n1*n6 - n2*n6 - n3*n6 - 2*n5*n6 - 2*n6^2 - 2*n6*n7)*
     j[p4, n1, -1 + n2, n3, 1, n5, 1 + n6, 1 + n7, 0, 1, 1, 1, 0, 1, 1])/
    ((-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((9*n6 - 3*d*n6 + n1*n6 + n2*n6 + n3*n6 + 2*n5*n6 + 2*n6^2 + 2*n6*n7)*
     j[p4, n1, -1 + n2, n3, 1, n5, 1 + n6, 1 + n7, 0, 1, 1, 1, 1, 0, 1])/
    ((-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((9*n6 - 3*d*n6 + n1*n6 + n2*n6 + n3*n6 + 2*n5*n6 + 2*n6^2 + 2*n6*n7)*
     j[p4, n1, -1 + n2, n3, 1, n5, 1 + n6, 1 + n7, 0, 1, 1, 1, 1, 1, 0])/
    ((-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((-9*n6 + 3*d*n6 - n1*n6 - n2*n6 - n3*n6 - 2*n5*n6 - 2*n6^2 - 2*n6*n7)*
     j[p4, n1, -1 + n2, n3, 1, n5, 1 + n6, 1 + n7, 0, 1, 1, 1, 1, 1, 1])/
    ((-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((-15 + 5*d - n1 - 2*n2 - 3*n3 - 2*n5 - 3*n6 - 3*n7)*
     j[p4, n1, -1 + n2, n3, 2, n5, n6, 1 + n7, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-3 + d - n1 - n5 - n7)*(-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((-3*n3 + d*n3 - n1*n3 + n3^2 - 2*n3*n5 - n3*n6 - n3*n7)*
     j[p4, n1, -1 + n2, 1 + n3, 0, n5, n6, 1 + n7, 0, 1, 1, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((3*n3 - d*n3 + n1*n3 - n3^2 + 2*n3*n5 + n3*n6 + n3*n7)*
     j[p4, n1, -1 + n2, 1 + n3, 1, n5, n6, 1 + n7, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((21 - 7*d + 3*n1 + 2*n2 + n3 + 6*n5 + 5*n6 + 26*n7 - 7*d*n7 + 3*n1*n7 + 
      2*n2*n7 + n3*n7 + 6*n5*n7 + 5*n6*n7 + 5*n7^2)*
     j[p4, n1, n2, -1 + n3, 0, n5, n6, 2 + n7, 0, 1, 1, 1, 1, 1, 1])/
    (2*(3 - d + n1 + n5 + n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((-9 + 3*d - n1 - n2 - n3 - 2*n5 - 2*n6 - 11*n7 + 3*d*n7 - n1*n7 - n2*n7 - 
      n3*n7 - 2*n5*n7 - 2*n6*n7 - 2*n7^2)*j[p4, n1, n2, -1 + n3, 1, -1 + n5, 
      n6, 2 + n7, 0, 1, 1, 1, 1, 1, 1])/((-3 + d - n1 - n5 - n7)*
     (-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((-9*n6 + 3*d*n6 - n1*n6 - n2*n6 - n3*n6 - 2*n5*n6 - 2*n6^2 - 2*n6*n7)*
     j[p4, n1, n2, -1 + n3, 1, -1 + n5, 1 + n6, 1 + n7, 0, 1, 1, 1, 1, 1, 1])/
    ((-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((-9 + 3*d - n1 - n2 - n3 - 2*n5 - 2*n6 - 11*n7 + 3*d*n7 - n1*n7 - n2*n7 - 
      n3*n7 - 2*n5*n7 - 2*n6*n7 - 2*n7^2)*j[p4, n1, n2, -1 + n3, 1, n5, 
      -1 + n6, 2 + n7, 0, 1, 1, 1, 1, 1, 1])/((-3 + d - n1 - n5 - n7)*
     (-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((-21 + 7*d - 3*n1 - 2*n2 - n3 - 6*n5 - 5*n6 - 5*n7)*
     j[p4, n1, n2, -1 + n3, 1, n5, n6, 1 + n7, 0, 0, 2, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5 - n7)*(-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((18 - 15*d + 3*d^2 + 2*n1 - d*n1 + 11*n2 - 4*d*n2 + n1*n2 + n2^2 + 
      11*n3 - 4*d*n3 + n1*n3 + 2*n2*n3 + n3^2 + 4*n5 - 2*d*n5 + 2*n2*n5 + 
      2*n3*n5 + 13*n6 - 5*d*n6 + n1*n6 + 3*n2*n6 + 3*n3*n6 + 2*n5*n6 + 
      2*n6^2 + 4*n7 - 2*d*n7 + 2*n2*n7 + 2*n3*n7 + 2*n6*n7)*
     j[p4, n1, n2, -1 + n3, 1, n5, n6, 1 + n7, 0, 1, 1, 1, 1, 1, 1])/
    ((-3 + d - n1 - n5 - n7)*(-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((15 - 5*d + n1 + 2*n2 + 3*n3 + 2*n5 + 3*n6 + 18*n7 - 5*d*n7 + n1*n7 + 
      2*n2*n7 + 3*n3*n7 + 2*n5*n7 + 3*n6*n7 + 3*n7^2)*
     j[p4, n1, n2, -1 + n3, 1, n5, n6, 2 + n7, 0, 1, 0, 1, 1, 1, 1])/
    (2*(3 - d + n1 + n5 + n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((-15 + 5*d - n1 - 2*n2 - 3*n3 - 2*n5 - 3*n6 - 18*n7 + 5*d*n7 - n1*n7 - 
      2*n2*n7 - 3*n3*n7 - 2*n5*n7 - 3*n6*n7 - 3*n7^2)*
     j[p4, n1, n2, -1 + n3, 1, n5, n6, 2 + n7, 0, 1, 1, 0, 1, 1, 1])/
    (2*(3 - d + n1 + n5 + n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((15*n6 - 5*d*n6 + n1*n6 + 2*n2*n6 + 3*n3*n6 + 2*n5*n6 + 3*n6^2 + 3*n6*n7)*
     j[p4, n1, n2, -1 + n3, 1, n5, 1 + n6, 1 + n7, 0, 0, 1, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((-15*n6 + 5*d*n6 - n1*n6 - 2*n2*n6 - 3*n3*n6 - 2*n5*n6 - 3*n6^2 - 
      3*n6*n7)*j[p4, n1, n2, -1 + n3, 1, n5, 1 + n6, 1 + n7, 0, 1, 0, 1, 1, 
      1, 1])/(2*(-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((-15 + 5*d - n1 - 2*n2 - 3*n3 - 2*n5 - 3*n6 - 3*n7)*
     j[p4, n1, n2, -1 + n3, 2, n5, n6, 1 + n7, 0, 0, 1, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5 - n7)*(-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((15 - 5*d + n1 + 2*n2 + 3*n3 + 2*n5 + 3*n6 + 3*n7)*
     j[p4, n1, n2, -1 + n3, 2, n5, n6, 1 + n7, 0, 1, 0, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5 - n7)*(-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((-15 + 5*d - n1 - 2*n2 - 3*n3 - 2*n5 - 3*n6 - 3*n7)*
     j[p4, n1, n2, -1 + n3, 2, n5, n6, 1 + n7, 0, 1, 1, 0, 1, 1, 1])/
    (2*(-3 + d - n1 - n5 - n7)*(-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((-9 + 3*d - 3*n1 + 24*n3 - 7*d*n3 + 3*n1*n3 + 2*n2*n3 + n3^2 - 18*n5 + 
      4*d*n5 - 2*n2*n5 + 2*n3*n5 - 15*n6 + 4*d*n6 - 2*n2*n6 + n3*n6 - 
      2*n5*n6 - 2*n6^2 - 12*n7 + 3*d*n7 - 3*n1*n7 + 8*n3*n7 - 8*n5*n7 - 
      5*n6*n7 - 3*n7^2)*j[p4, n1, n2, n3, 0, n5, n6, 1 + n7, 0, 1, 1, 1, 1, 
      1, 1])/(2*(-3 + d - n1 - n5 - n7)*(-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((3 - d + n1 - n3 + 2*n5 + n6 + n7)*j[p4, n1, n2, n3, 0, n5, n6, 1 + n7, 
      0, 1, 1, 1, 2, 1, 1])/(2*(-3 + d - n1 - n5 - n7)*
     (-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((3 - d + n1 - n3 + 2*n5 + n6 + n7)*j[p4, n1, n2, n3, 0, n5, n6, 1 + n7, 
      0, 1, 1, 2, 1, 1, 1])/(2*(-3 + d - n1 - n5 - n7)*
     (-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((-21 + 7*d - 3*n1 - 2*n2 - n3 - 6*n5 - 5*n6 - 26*n7 + 7*d*n7 - 3*n1*n7 - 
      2*n2*n7 - n3*n7 - 6*n5*n7 - 5*n6*n7 - 5*n7^2)*
     j[p4, n1, n2, n3, 0, n5, n6, 2 + n7, -1, 1, 1, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5 - n7)*(-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((-9 + 3*d - n1 - n2 - n3 - 2*n5 - 2*n6 - 11*n7 + 3*d*n7 - n1*n7 - n2*n7 - 
      n3*n7 - 2*n5*n7 - 2*n6*n7 - 2*n7^2)*j[p4, n1, n2, n3, 0, n5, n6, 
      2 + n7, 0, 1, 1, 1, 1, 1, 1])/((-3 + d - n1 - n5 - n7)*
     (-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((-3 + d - n1 + n3 - 2*n5 - n6 - n7)*j[p4, n1, n2, n3, 1, -1 + n5, n6, 
      1 + n7, 0, 1, 1, 0, 2, 1, 1])/(2*(-3 + d - n1 - n5 - n7)*
     (-6 + 2*d - n2 - 2*n3 - n6 - n7)) - 
   j[p4, n1, n2, n3, 1, -1 + n5, n6, 1 + n7, 0, 1, 1, 1, 0, 2, 1]/
    (-3 + d - n1 - n5 - n7) + ((-54 + 39*d - 7*d^2 - 17*n1 + 6*d*n1 - n1^2 - 
      14*n2 + 5*d*n2 - 2*n1*n2 - n2^2 - 20*n3 + 7*d*n3 - 3*n1*n3 - 3*n2*n3 - 
      2*n3^2 - 19*n5 + 7*d*n5 - 3*n1*n5 - 2*n2*n5 - 3*n3*n5 - 2*n5^2 - 
      25*n6 + 9*d*n6 - 4*n1*n6 - 3*n2*n6 - 4*n3*n6 - 5*n5*n6 - 3*n6^2 - 
      22*n7 + 8*d*n7 - 3*n1*n7 - 3*n2*n7 - 5*n3*n7 - 3*n5*n7 - 5*n6*n7 - 
      2*n7^2)*j[p4, n1, n2, n3, 1, -1 + n5, n6, 1 + n7, 0, 1, 1, 1, 1, 1, 1])/
    ((-3 + d - n1 - n5 - n7)*(-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((-3 + d - n1 + n3 - 2*n5 - n6 - n7)*j[p4, n1, n2, n3, 1, -1 + n5, n6, 
      1 + n7, 0, 1, 1, 2, 0, 1, 1])/(2*(-3 + d - n1 - n5 - n7)*
     (-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((9 - 3*d + n1 + n2 + n3 + 2*n5 + 2*n6 + 11*n7 - 3*d*n7 + n1*n7 + n2*n7 + 
      n3*n7 + 2*n5*n7 + 2*n6*n7 + 2*n7^2)*j[p4, n1, n2, n3, 1, -1 + n5, n6, 
      2 + n7, -1, 1, 1, 1, 1, 1, 1])/((-3 + d - n1 - n5 - n7)*
     (-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((-15 + 5*d - n1 - 2*n2 - 3*n3 - 2*n5 - 3*n6 - 18*n7 + 5*d*n7 - n1*n7 - 
      2*n2*n7 - 3*n3*n7 - 2*n5*n7 - 3*n6*n7 - 3*n7^2)*
     j[p4, n1, n2, n3, 1, -1 + n5, n6, 2 + n7, 0, 1, 0, 1, 1, 1, 1])/
    (2*(3 - d + n1 + n5 + n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((15 - 5*d + n1 + 2*n2 + 3*n3 + 2*n5 + 3*n6 + 18*n7 - 5*d*n7 + n1*n7 + 
      2*n2*n7 + 3*n3*n7 + 2*n5*n7 + 3*n6*n7 + 3*n7^2)*
     j[p4, n1, n2, n3, 1, -1 + n5, n6, 2 + n7, 0, 1, 1, 0, 1, 1, 1])/
    (2*(3 - d + n1 + n5 + n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((-3 + d - n1 + n3 - 2*n5 - n6 - 4*n7 + d*n7 - n1*n7 + n3*n7 - 2*n5*n7 - 
      n6*n7 - n7^2)*j[p4, n1, n2, n3, 1, -1 + n5, n6, 2 + n7, 0, 1, 1, 1, 1, 
      0, 1])/(2*(-3 + d - n1 - n5 - n7)*(-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((9 - 3*d + n1 + n2 + n3 + 2*n5 + 2*n6 + 11*n7 - 3*d*n7 + n1*n7 + n2*n7 + 
      n3*n7 + 2*n5*n7 + 2*n6*n7 + 2*n7^2)*j[p4, n1, n2, n3, 1, -1 + n5, n6, 
      2 + n7, 0, 1, 1, 1, 1, 1, 1])/((-3 + d - n1 - n5 - n7)*
     (-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((3*n6 - d*n6 + n1*n6 - n3*n6 + 2*n5*n6 + n6^2 + n6*n7)*
     j[p4, n1, n2, n3, 1, -1 + n5, 1 + n6, n7, 0, 1, 1, 1, 1, 1, 1])/
    ((-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((9*n6 - 3*d*n6 + n1*n6 + n2*n6 + n3*n6 + 2*n5*n6 + 2*n6^2 + 2*n6*n7)*
     j[p4, n1, n2, n3, 1, -1 + n5, 1 + n6, 1 + n7, -1, 1, 1, 1, 1, 1, 1])/
    ((-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((-9*n6 + 3*d*n6 - n1*n6 - n2*n6 - n3*n6 - 2*n5*n6 - 2*n6^2 - 2*n6*n7)*
     j[p4, n1, n2, n3, 1, -1 + n5, 1 + n6, 1 + n7, 0, 0, 1, 1, 1, 1, 1])/
    ((-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((9*n6 - 3*d*n6 + n1*n6 + n2*n6 + n3*n6 + 2*n5*n6 + 2*n6^2 + 2*n6*n7)*
     j[p4, n1, n2, n3, 1, -1 + n5, 1 + n6, 1 + n7, 0, 1, 0, 1, 1, 1, 1])/
    ((-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((9*n6 - 3*d*n6 + n1*n6 + n2*n6 + n3*n6 + 2*n5*n6 + 2*n6^2 + 2*n6*n7)*
     j[p4, n1, n2, n3, 1, -1 + n5, 1 + n6, 1 + n7, 0, 1, 1, 1, 1, 1, 1])/
    ((-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((-3 + d - n1 + n3 - 2*n5 - n6 - n7)*j[p4, n1, n2, n3, 1, n5, -1 + n6, 
      1 + n7, 0, 1, 1, 0, 2, 1, 1])/(2*(-3 + d - n1 - n5 - n7)*
     (-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((6 - 2*d + n1 + n2 + n3 + n5 + n6 + 2*n7)*j[p4, n1, n2, n3, 1, n5, 
      -1 + n6, 1 + n7, 0, 1, 1, 1, 1, 1, 1])/(-3 + d - n1 - n5 - n7) + 
   ((-3 + d - n1 + n3 - 2*n5 - n6 - n7)*j[p4, n1, n2, n3, 1, n5, -1 + n6, 
      1 + n7, 0, 1, 1, 2, 0, 1, 1])/(2*(-3 + d - n1 - n5 - n7)*
     (-6 + 2*d - n2 - 2*n3 - n6 - n7)) - 
   j[p4, n1, n2, n3, 1, n5, -1 + n6, 1 + n7, 0, 1, 2, 0, 1, 1, 1]/
    (-3 + d - n1 - n5 - n7) + ((-21 + 7*d - 3*n1 - 2*n2 - n3 - 6*n5 - 5*n6 - 
      5*n7)*j[p4, n1, n2, n3, 1, n5, -1 + n6, 1 + n7, 0, 1, 2, 1, 0, 1, 1])/
    (2*(-3 + d - n1 - n5 - n7)*(-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((21 - 7*d + 3*n1 + 2*n2 + n3 + 6*n5 + 5*n6 + 5*n7)*
     j[p4, n1, n2, n3, 1, n5, -1 + n6, 1 + n7, 0, 1, 2, 1, 1, 0, 1])/
    (2*(-3 + d - n1 - n5 - n7)*(-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((9 - 3*d + n1 + n2 + n3 + 2*n5 + 2*n6 + 11*n7 - 3*d*n7 + n1*n7 + n2*n7 + 
      n3*n7 + 2*n5*n7 + 2*n6*n7 + 2*n7^2)*j[p4, n1, n2, n3, 1, n5, -1 + n6, 
      2 + n7, 0, 1, 1, 1, 1, 0, 1])/((-3 + d - n1 - n5 - n7)*
     (-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((9 - 3*d + 3*n1 - 3*n3 + 6*n5 + 3*n6 + 3*n7)*j[p4, n1, n2, n3, 1, n5, n6, 
      n7, 0, 0, 2, 1, 1, 1, 1])/(2*(-3 + d - n1 - n5 - n7)*
     (-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((-3 + d - n1 + n3 - 2*n5 - n6 - n7)*j[p4, n1, n2, n3, 1, n5, n6, n7, 0, 
      1, 1, 0, 2, 1, 1])/(2*(-3 + d - n1 - n5 - n7)*
     (-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((-3 + d - n1 + n3 - 2*n5 - n6 - n7)*j[p4, n1, n2, n3, 1, n5, n6, n7, 0, 
      1, 1, 2, 0, 1, 1])/(2*(-3 + d - n1 - n5 - n7)*
     (-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((21 - 7*d + 3*n1 + 2*n2 + n3 + 6*n5 + 5*n6 + 5*n7)*
     j[p4, n1, n2, n3, 1, n5, n6, 1 + n7, -1, 0, 2, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5 - n7)*(-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((-3 + d - n1 + n3 - 2*n5 - n6 - n7)*j[p4, n1, n2, n3, 1, n5, n6, 1 + n7, 
      -1, 1, 1, 0, 2, 1, 1])/(2*(-3 + d - n1 - n5 - n7)*
     (-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   j[p4, n1, n2, n3, 1, n5, n6, 1 + n7, -1, 1, 1, 1, 1, 2, 0]/
    (-3 + d - n1 - n5 - n7) + ((-3 + d - n1 + n3 - 2*n5 - n6 - n7)*
     j[p4, n1, n2, n3, 1, n5, n6, 1 + n7, -1, 1, 1, 2, 0, 1, 1])/
    (2*(-3 + d - n1 - n5 - n7)*(-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((-3 + d + 14*n1 - 5*d*n1 + n1^2 + 2*n1*n2 + n3 + 3*n1*n3 - 17*n5 + 
      5*d*n5 + n1*n5 - 2*n2*n5 - 3*n3*n5 - 2*n5^2 + 2*n6 - d*n6 + 4*n1*n6 - 
      n3*n6 - n5*n6 + n6^2 - n7 + 3*n1*n7 - 3*n5*n7 + n6*n7)*
     j[p4, n1, n2, n3, 1, n5, n6, 1 + n7, 0, 0, 1, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5 - n7)*(-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((3 - d + n1 - n3 + 2*n5 + n6 + n7)*j[p4, n1, n2, n3, 1, n5, n6, 1 + n7, 
      0, 0, 1, 2, 1, 1, 1])/(2*(-3 + d - n1 - n5 - n7)*
     (-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((21 - 7*d + 3*n1 + 2*n2 + n3 + 6*n5 + 5*n6 + 5*n7)*
     j[p4, n1, n2, n3, 1, n5, n6, 1 + n7, 0, 0, 2, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5 - n7)*(-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((-15 + 5*d - n1 + n2 - d*n2 + n1*n2 + 12*n3 - 5*d*n3 + n1*n3 + n2*n3 + 
      3*n3^2 - 2*n5 + 2*n2*n5 + 2*n3*n5 - 6*n6 + d*n6 - n1*n6 + n2*n6 + 
      4*n3*n6 - 2*n5*n6 - n6^2 - 3*n7 + n2*n7 + 3*n3*n7 - n6*n7)*
     j[p4, n1, n2, n3, 1, n5, n6, 1 + n7, 0, 1, 0, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5 - n7)*(-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((18 - 6*d + 2*n1 + 2*n2 - 13*n3 + 5*d*n3 - n1*n3 - 2*n2*n3 - 3*n3^2 + 
      4*n5 - 2*n3*n5 + 4*n6 - 3*n3*n6 + 4*n7 - 3*n3*n7)*
     j[p4, n1, n2, n3, 1, n5, n6, 1 + n7, 0, 1, 1, 0, 1, 1, 1])/
    (2*(-3 + d - n1 - n5 - n7)*(-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((-12 + 4*d + 16*n2 - 6*d*n2 + 2*n1*n2 + 2*n2^2 + 14*n3 - 6*d*n3 + 
      2*n1*n3 + 4*n2*n3 + 2*n3^2 + 4*n2*n5 + 4*n3*n5 - 23*n6 + 7*d*n6 - 
      3*n1*n6 + 2*n2*n6 + 3*n3*n6 - 6*n5*n6 - 5*n6^2 - 2*n7 + 4*n2*n7 + 
      4*n3*n7 - 5*n6*n7)*j[p4, n1, n2, n3, 1, n5, n6, 1 + n7, 0, 1, 1, 1, 0, 
      1, 1])/(2*(-3 + d - n1 - n5 - n7)*(-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((30 - 10*d + 5*n1 - d*n1 + n1^2 - 32*n2 + 12*d*n2 - 4*n1*n2 - 4*n2^2 + 
      6*n3 - n1*n3 - 4*n2*n3 - 17*n5 + 7*d*n5 - n1*n5 - 10*n2*n5 - n3*n5 - 
      6*n5^2 + 27*n6 - 7*d*n6 + 4*n1*n6 - 6*n2*n6 + n3*n6 + n5*n6 + 5*n6^2 + 
      3*n7 + d*n7 - 8*n2*n7 + n3*n7 - 7*n5*n7 + 4*n6*n7 - n7^2)*
     j[p4, n1, n2, n3, 1, n5, n6, 1 + n7, 0, 1, 1, 1, 1, 0, 1])/
    (2*(-3 + d - n1 - n5 - n7)*(-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((-21 + 7*d - 3*n1 - 2*n2 - 22*n3 + 7*d*n3 - 3*n1*n3 - 2*n2*n3 - n3^2 + 
      15*n5 - 7*d*n5 + 3*n1*n5 + 2*n2*n5 - 5*n3*n5 + 6*n5^2 + 16*n6 - 
      7*d*n6 + 3*n1*n6 + 2*n2*n6 - 4*n3*n6 + 11*n5*n6 + 5*n6^2 - 5*n7 - 
      5*n3*n7 + 5*n5*n7 + 5*n6*n7)*j[p4, n1, n2, n3, 1, n5, n6, 1 + n7, 0, 1, 
      1, 1, 1, 1, 0])/(2*(-3 + d - n1 - n5 - n7)*(-6 + 2*d - n2 - 2*n3 - n6 - 
      n7)) + ((30 - 19*d + 3*d^2 + 10*n1 - 3*d*n1 + 36*n2 - 12*d*n2 + 
      4*n1*n2 + 4*n2^2 - 4*n3 + d*n3 + 2*n1*n3 + 4*n2*n3 - 2*n3^2 + 26*n5 - 
      8*d*n5 + 2*n1*n5 + 8*n2*n5 + 2*n3*n5 + 4*n5^2 - 20*n6 + 7*d*n6 - 
      2*n1*n6 + 4*n2*n6 - 4*n3*n6 - 2*n5*n6 - 6*n6^2 + 16*n7 - 5*d*n7 + 
      2*n1*n7 + 8*n2*n7 + 6*n5*n7 - 4*n6*n7 + 2*n7^2)*
     j[p4, n1, n2, n3, 1, n5, n6, 1 + n7, 0, 1, 1, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5 - n7)*(-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((-15 + 5*d - n1 - 2*n2 - 3*n3 - 2*n5 - 3*n6 - 3*n7)*
     j[p4, n1, n2, n3, 1, n5, n6, 1 + n7, 0, 1, 1, 1, 1, 2, 0])/
    (2*(-3 + d - n1 - n5 - n7)*(-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((3 - d + n1 - n3 + 2*n5 + n6 + n7)*j[p4, n1, n2, n3, 1, n5, n6, 1 + n7, 
      0, 1, 1, 1, 2, 1, 0])/(2*(-3 + d - n1 - n5 - n7)*
     (-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((-3 + d - n1 + n3 - 2*n5 - n6 - 4*n7 + d*n7 - n1*n7 + n3*n7 - 2*n5*n7 - 
      n6*n7 - n7^2)*j[p4, n1, n2, n3, 1, n5, n6, 2 + n7, -1, 1, 1, 1, 1, 0, 
      1])/(2*(-3 + d - n1 - n5 - n7)*(-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((-3*n6 + d*n6 - n1*n6 + n3*n6 - 2*n5*n6 - n6^2 - n6*n7)*
     j[p4, n1, n2, n3, 1, n5, 1 + n6, n7, 0, 0, 1, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((3*n6 - d*n6 + n1*n6 - n3*n6 + 2*n5*n6 + n6^2 + n6*n7)*
     j[p4, n1, n2, n3, 1, n5, 1 + n6, n7, 0, 1, 0, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((-3*n6 + d*n6 - n1*n6 + n3*n6 - 2*n5*n6 - n6^2 - n6*n7)*
     j[p4, n1, n2, n3, 1, n5, 1 + n6, 1 + n7, -1, 0, 1, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((3*n6 - d*n6 + n1*n6 - n3*n6 + 2*n5*n6 + n6^2 + n6*n7)*
     j[p4, n1, n2, n3, 1, n5, 1 + n6, 1 + n7, -1, 1, 0, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((9 - 3*d + n1 + n2 + n3 + 2*n5 + 2*n6 + 2*n7)*j[p4, n1, n2, n3, 2, 
      -1 + n5, n6, 1 + n7, 0, 1, 1, 1, 1, 1, 0])/((-3 + d - n1 - n5 - n7)*
     (-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((9 - 3*d + n1 + n2 + n3 + 2*n5 + 2*n6 + 2*n7)*j[p4, n1, n2, n3, 2, n5, 
      -1 + n6, 1 + n7, 0, 1, 1, 1, 1, 1, 0])/((-3 + d - n1 - n5 - n7)*
     (-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((-3 + d - n1 + n3 - 2*n5 - n6 - n7)*j[p4, n1, n2, n3, 2, n5, n6, n7, 0, 
      1, 1, 1, 1, 1, 0])/(2*(-3 + d - n1 - n5 - n7)*
     (-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((-3 + d - n1 + n3 - 2*n5 - n6 - n7)*j[p4, n1, n2, n3, 2, n5, n6, 1 + n7, 
      -1, 1, 1, 1, 1, 1, 0])/(2*(-3 + d - n1 - n5 - n7)*
     (-6 + 2*d - n2 - 2*n3 - n6 - n7)) + 
   ((9*n3 - 3*d*n3 + 3*n1*n3 - 3*n3^2 + 6*n3*n5 + 3*n3*n6 + 3*n3*n7)*
     j[p4, n1, n2, 1 + n3, 0, n5, n6, n7, 0, 1, 1, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((9*n3 - 3*d*n3 + 3*n1*n3 - 3*n3^2 + 6*n3*n5 + 3*n3*n6 + 3*n3*n7)*
     j[p4, n1, n2, 1 + n3, 0, n5, n6, 1 + n7, -1, 1, 1, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((3*n3 - d*n3 + n1*n3 - n3^2 + 2*n3*n5 + n3*n6 + n3*n7)*
     j[p4, n1, n2, 1 + n3, 0, n5, n6, 1 + n7, 0, 1, 1, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((-9*n3 + 3*d*n3 - 3*n1*n3 + 3*n3^2 - 6*n3*n5 - 3*n3*n6 - 3*n3*n7)*
     j[p4, n1, n2, 1 + n3, 1, n5, n6, n7, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((-9*n3 + 3*d*n3 - 3*n1*n3 + 3*n3^2 - 6*n3*n5 - 3*n3*n6 - 3*n3*n7)*
     j[p4, n1, n2, 1 + n3, 1, n5, n6, 1 + n7, -1, 1, 1, 1, 1, 1, 0])/
    (2*(-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((-3*n3 + d*n3 - n1*n3 + n3^2 - 2*n3*n5 - n3*n6 - n3*n7)*
     j[p4, n1, n2, 1 + n3, 1, n5, n6, 1 + n7, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((-15*n2 + 5*d*n2 - n1*n2 - 2*n2^2 - 3*n2*n3 - 2*n2*n5 - 3*n2*n6 - 
      3*n2*n7)*j[p4, n1, 1 + n2, -1 + n3, 1, n5, n6, 1 + n7, 0, 1, 0, 1, 1, 
      1, 1])/(2*(-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((33*n2 - 11*d*n2 + 3*n1*n2 + 4*n2^2 + 5*n2*n3 + 6*n2*n5 + 7*n2*n6 + 
      7*n2*n7)*j[p4, n1, 1 + n2, n3, 1, -1 + n5, n6, 1 + n7, 0, 1, 0, 1, 1, 
      1, 1])/(2*(-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((-21*n2 + 7*d*n2 - 3*n1*n2 - 2*n2^2 - n2*n3 - 6*n2*n5 - 5*n2*n6 - 
      5*n2*n7)*j[p4, n1, 1 + n2, n3, 1, -1 + n5, n6, 1 + n7, 0, 1, 1, 1, 0, 
      1, 1])/(2*(-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((21*n2 - 7*d*n2 + 3*n1*n2 + 2*n2^2 + n2*n3 + 6*n2*n5 + 5*n2*n6 + 5*n2*n7)*
     j[p4, n1, 1 + n2, n3, 1, -1 + n5, n6, 1 + n7, 0, 1, 1, 1, 1, 0, 1])/
    ((-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((-18*n2 + 6*d*n2 - 2*n1*n2 - 2*n2^2 - 2*n2*n3 - 4*n2*n5 - 4*n2*n6 - 
      4*n2*n7)*j[p4, n1, 1 + n2, n3, 1, -1 + n5, n6, 1 + n7, 0, 1, 1, 1, 1, 
      1, 1])/((-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((3*n2 - d*n2 + n1*n2 - n2*n3 + 2*n2*n5 + n2*n6 + n2*n7)*
     j[p4, n1, 1 + n2, n3, 1, n5, -1 + n6, 1 + n7, 0, 1, 0, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((21*n2 - 7*d*n2 + 3*n1*n2 + 2*n2^2 + n2*n3 + 6*n2*n5 + 5*n2*n6 + 5*n2*n7)*
     j[p4, n1, 1 + n2, n3, 1, n5, -1 + n6, 1 + n7, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((-21*n2 + 7*d*n2 - 3*n1*n2 - 2*n2^2 - n2*n3 - 6*n2*n5 - 5*n2*n6 - 
      5*n2*n7)*j[p4, n1, 1 + n2, n3, 1, n5, -1 + n6, 1 + n7, 0, 1, 1, 1, 1, 
      0, 1])/((-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((18*n2 - 6*d*n2 + 2*n1*n2 + 2*n2^2 + 2*n2*n3 + 4*n2*n5 + 4*n2*n6 + 
      4*n2*n7)*j[p4, n1, 1 + n2, n3, 1, n5, -1 + n6, 1 + n7, 0, 1, 1, 1, 1, 
      1, 1])/((-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((3*n2 - d*n2 + n1*n2 - n2*n3 + 2*n2*n5 + n2*n6 + n2*n7)*
     j[p4, n1, 1 + n2, n3, 1, n5, n6, n7, 0, 1, 0, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   ((3*n2 - d*n2 + n1*n2 - n2*n3 + 2*n2*n5 + n2*n6 + n2*n7)*
     j[p4, n1, 1 + n2, n3, 1, n5, n6, 1 + n7, -1, 1, 0, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5 - n7)*(6 - 2*d + n2 + 2*n3 + n6 + n7)) + 
   (n1*j[p4, 1 + n1, n2, n3, 1, -1 + n5, n6, 1 + n7, 0, 1, 1, 0, 1, 1, 1])/
    (3 - d + n1 + n5 + n7) + ((21*n1 - 7*d*n1 + 3*n1^2 + 2*n1*n2 + n1*n3 + 
      6*n1*n5 + 5*n1*n6 + 5*n1*n7)*j[p4, 1 + n1, n2, n3, 1, -1 + n5, n6, 
      1 + n7, 0, 1, 1, 1, 1, 0, 1])/(2*(-6 + 2*d - n2 - 2*n3 - n6 - n7)*
     (3 - d + n1 + n5 + n7)) + 
   ((-18*n1 + 6*d*n1 - 2*n1^2 - 2*n1*n2 - 2*n1*n3 - 4*n1*n5 - 4*n1*n6 - 
      4*n1*n7)*j[p4, 1 + n1, n2, n3, 1, -1 + n5, n6, 1 + n7, 0, 1, 1, 1, 1, 
      1, 1])/((-6 + 2*d - n2 - 2*n3 - n6 - n7)*(3 - d + n1 + n5 + n7)) - 
   (n1*j[p4, 1 + n1, n2, n3, 1, n5, n6, 1 + n7, -1, 0, 1, 1, 1, 1, 1])/
    (3 - d + n1 + n5 + n7) + ((15*n1 - 5*d*n1 + n1^2 + 2*n1*n2 + 3*n1*n3 + 
      2*n1*n5 + 3*n1*n6 + 3*n1*n7)*j[p4, 1 + n1, n2, n3, 1, n5, n6, 1 + n7, 
      0, 0, 1, 1, 1, 1, 1])/(2*(-6 + 2*d - n2 - 2*n3 - n6 - n7)*
     (3 - d + n1 + n5 + n7)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 1 && n13 == 1 && n14 == 1 && n4 == 1 && 
    n6 == 0 && n9 == 1 &&  !(n8 == -1 || n8 == 0) -> 
  ((2 + n8)*j[p4, -1 + n1, -2 + n2, n3, 1, n5, 0, n7, 3 + n8, 1, 1, 1, 1, 1, 
      1])/(-1 + n2) - (n7*j[p4, -1 + n1, -2 + n2, n3, 1, n5, 0, 1 + n7, 
      2 + n8, 1, 1, 1, 1, 1, 1])/(-1 + n2) - 
   (n5*j[p4, -1 + n1, -2 + n2, n3, 1, 1 + n5, 0, n7, 2 + n8, 1, 1, 1, 1, 1, 
      1])/(-1 + n2) - (n7*j[p4, -1 + n1, -1 + n2, -1 + n3, 1, n5, 0, 1 + n7, 
      2 + n8, 1, 1, 1, 1, 1, 1])/(-1 + n2) + 
   ((2 + n8)*j[p4, -1 + n1, -1 + n2, n3, 0, n5, 0, n7, 3 + n8, 1, 1, 1, 1, 1, 
      1])/(-1 + n2) - (n5*j[p4, -1 + n1, -1 + n2, n3, 0, 1 + n5, 0, n7, 
      2 + n8, 1, 1, 1, 1, 1, 1])/(-1 + n2) + 
   ((-2 - n8)*j[p4, -1 + n1, -1 + n2, n3, 1, -1 + n5, 0, n7, 3 + n8, 1, 1, 1, 
      1, 1, 1])/(-1 + n2) + ((-2 - n8)*j[p4, -1 + n1, -1 + n2, n3, 1, n5, -1, 
      n7, 3 + n8, 1, 1, 1, 1, 1, 1])/(-1 + n2) + 
   ((-2 - n8)*j[p4, -1 + n1, -1 + n2, n3, 1, n5, 0, -1 + n7, 3 + n8, 1, 1, 1, 
      1, 1, 1])/(-1 + n2) + j[p4, -1 + n1, -1 + n2, n3, 1, n5, 0, n7, 2 + n8, 
     1, 1, 1, 0, 2, 1]/(-1 + n2) + ((2 - n3 - n5 + 2*n7 + n8)*
     j[p4, -1 + n1, -1 + n2, n3, 1, n5, 0, n7, 2 + n8, 1, 1, 1, 1, 1, 1])/
    (-1 + n2) + j[p4, -1 + n1, -1 + n2, n3, 1, n5, 0, n7, 2 + n8, 1, 1, 1, 1, 
     2, 0]/(1 - n2) + j[p4, -1 + n1, -1 + n2, n3, 1, n5, 0, n7, 2 + n8, 1, 1, 
     2, 0, 1, 1]/(-1 + n2) + j[p4, -1 + n1, -1 + n2, n3, 1, n5, 0, n7, 
     2 + n8, 2, 1, 1, 1, 1, 0]/(1 - n2) + 
   ((2 + n8)*j[p4, -1 + n1, -1 + n2, n3, 1, n5, 0, n7, 3 + n8, 1, 1, 1, 0, 1, 
      1])/(-1 + n2) + ((-2 - n8)*j[p4, -1 + n1, -1 + n2, n3, 1, n5, 0, n7, 
      3 + n8, 1, 1, 1, 1, 0, 1])/(-1 + n2) + 
   (n7*j[p4, -1 + n1, -1 + n2, n3, 1, n5, 0, 1 + n7, 1 + n8, 1, 1, 1, 1, 1, 
      1])/(-1 + n2) + (n7*j[p4, -1 + n1, -1 + n2, n3, 1, n5, 0, 1 + n7, 
      2 + n8, 1, 1, 1, 1, 0, 1])/(-1 + n2) + 
   (n5*j[p4, -1 + n1, -1 + n2, n3, 1, 1 + n5, -1, n7, 2 + n8, 1, 1, 1, 1, 1, 
      1])/(-1 + n2) + (n5*j[p4, -1 + n1, -1 + n2, n3, 1, 1 + n5, 0, -1 + n7, 
      2 + n8, 1, 1, 1, 1, 1, 1])/(-1 + n2) + 
   (n5*j[p4, -1 + n1, -1 + n2, n3, 1, 1 + n5, 0, n7, 1 + n8, 1, 1, 1, 1, 1, 
      1])/(-1 + n2) + (n5*j[p4, -1 + n1, -1 + n2, n3, 1, 1 + n5, 0, n7, 
      2 + n8, 1, 1, 1, 1, 0, 1])/(-1 + n2) - 
   (n5*j[p4, -1 + n1, -1 + n2, n3, 1, 1 + n5, 0, n7, 2 + n8, 1, 1, 1, 1, 1, 
      0])/(-1 + n2) + (n3*j[p4, -1 + n1, -1 + n2, 1 + n3, 0, n5, 0, n7, 
      2 + n8, 1, 1, 1, 1, 1, 1])/(-1 + n2) + 
   (n3*j[p4, -1 + n1, -1 + n2, 1 + n3, 1, -1 + n5, 0, n7, 2 + n8, 1, 1, 1, 1, 
      1, 1])/(-1 + n2) - (n3*j[p4, -1 + n1, -1 + n2, 1 + n3, 1, n5, 0, n7, 
      2 + n8, 1, 1, 1, 1, 1, 0])/(-1 + n2) - 
   2*j[p4, -1 + n1, n2, n3, 1, -1 + n5, 0, n7, 2 + n8, 1, 1, 1, 1, 1, 1] - 
   j[p4, -1 + n1, n2, n3, 1, n5, -1, n7, 2 + n8, 1, 1, 1, 1, 1, 1] + 
   j[p4, -1 + n1, n2, n3, 1, n5, 0, -1 + n7, 2 + n8, 1, 1, 1, 1, 1, 1] + 
   2*j[p4, -1 + n1, n2, n3, 1, n5, 0, n7, 1 + n8, 1, 1, 1, 1, 1, 1] - 
   (2*n7*j[p4, n1, -2 + n2, n3, 1, n5, 0, n7, 2 + n8, 1, 1, 1, 1, 1, 1])/
    (-1 + n2) + ((-2 - n8)*j[p4, n1, -2 + n2, n3, 1, n5, 0, n7, 3 + n8, 1, 1, 
      1, 1, 1, 1])/(-1 + n2) + 
   (n7*j[p4, n1, -2 + n2, n3, 1, n5, 0, 1 + n7, 1 + n8, 1, 1, 1, 1, 1, 1])/
    (-1 + n2) + (n7*j[p4, n1, -2 + n2, n3, 1, n5, 0, 1 + n7, 2 + n8, 1, 1, 1, 
      1, 1, 1])/(-1 + n2) + (n5*j[p4, n1, -2 + n2, n3, 1, 1 + n5, 0, n7, 
      2 + n8, 1, 1, 1, 1, 1, 1])/(-1 + n2) + 
   (n3*j[p4, n1, -2 + n2, 1 + n3, 1, -1 + n5, 0, n7, 2 + n8, 1, 1, 1, 1, 1, 
      1])/(-1 + n2) - (2*n3*j[p4, n1, -2 + n2, 1 + n3, 1, n5, 0, -1 + n7, 
      2 + n8, 1, 1, 1, 1, 1, 1])/(-1 + n2) + 
   (n7*j[p4, n1, -1 + n2, -1 + n3, 1, n5, 0, 1 + n7, 1 + n8, 1, 1, 1, 1, 1, 
      1])/(-1 + n2) - (2*n7*j[p4, n1, -1 + n2, n3, 0, n5, 0, n7, 2 + n8, 1, 
      1, 1, 1, 1, 1])/(-1 + n2) + 
   ((-2 - n8)*j[p4, n1, -1 + n2, n3, 0, n5, 0, n7, 3 + n8, 1, 1, 1, 1, 1, 1])/
    (-1 + n2) + (n5*j[p4, n1, -1 + n2, n3, 0, 1 + n5, 0, n7, 2 + n8, 1, 1, 1, 
      1, 1, 1])/(-1 + n2) + j[p4, n1, -1 + n2, n3, 1, -1 + n5, 0, n7, 2 + n8, 
     0, 1, 1, 1, 1, 2]/(-1 + n2) + ((9 - 4*d + n2 + 3*n3 + 2*n5 + 4*n7)*
     j[p4, n1, -1 + n2, n3, 1, -1 + n5, 0, n7, 2 + n8, 1, 1, 1, 1, 1, 1])/
    (-1 + n2) + j[p4, n1, -1 + n2, n3, 1, -1 + n5, 0, n7, 2 + n8, 2, 1, 1, 1, 
     1, 0]/(-1 + n2) + ((2 + n8)*j[p4, n1, -1 + n2, n3, 1, -1 + n5, 0, n7, 
      3 + n8, 1, 1, 0, 1, 1, 1])/(-1 + n2) + 
   ((-2 - n8)*j[p4, n1, -1 + n2, n3, 1, -1 + n5, 0, n7, 3 + n8, 1, 1, 1, 0, 
      1, 1])/(-1 + n2) + ((2 + n8)*j[p4, n1, -1 + n2, n3, 1, -1 + n5, 0, n7, 
      3 + n8, 1, 1, 1, 1, 0, 1])/(-1 + n2) + 
   (2*n7*j[p4, n1, -1 + n2, n3, 1, -1 + n5, 0, 1 + n7, 2 + n8, 1, 0, 1, 1, 1, 
      1])/(-1 + n2) - (2*n7*j[p4, n1, -1 + n2, n3, 1, -1 + n5, 0, 1 + n7, 
      2 + n8, 1, 1, 0, 1, 1, 1])/(-1 + n2) + 
   ((2 - 2*d + 2*n2 + 2*n3 + 4*n7)*j[p4, n1, -1 + n2, n3, 1, n5, -1, n7, 
      2 + n8, 1, 1, 1, 1, 1, 1])/(-1 + n2) - 
   (2*j[p4, n1, -1 + n2, n3, 1, n5, -1, n7, 2 + n8, 1, 2, 0, 1, 1, 1])/
    (-1 + n2) + ((2 + n8)*j[p4, n1, -1 + n2, n3, 1, n5, -1, n7, 3 + n8, 1, 1, 
      1, 1, 1, 1])/(-1 + n2) + 
   (2*j[p4, n1, -1 + n2, n3, 1, n5, 0, -1 + n7, 2 + n8, 0, 2, 1, 1, 1, 1])/
    (-1 + n2) + ((-2 + 2*d - 2*n2 - 2*n3)*j[p4, n1, -1 + n2, n3, 1, n5, 0, 
      -1 + n7, 2 + n8, 1, 1, 1, 1, 1, 1])/(-1 + n2) + 
   ((2 + n8)*j[p4, n1, -1 + n2, n3, 1, n5, 0, -1 + n7, 3 + n8, 1, 1, 1, 1, 1, 
      1])/(-1 + n2) + j[p4, n1, -1 + n2, n3, 1, n5, 0, n7, 1 + n8, 1, 1, 0, 
     2, 1, 1]/(1 - n2) + ((-13 + 4*d - n2 - 2*n3 - 3*n7 - 2*n8)*
     j[p4, n1, -1 + n2, n3, 1, n5, 0, n7, 1 + n8, 1, 1, 1, 1, 1, 1])/
    (-1 + n2) + j[p4, n1, -1 + n2, n3, 1, n5, 0, n7, 1 + n8, 1, 1, 2, 0, 1, 
     1]/(1 - n2) + ((-1 - n1 + 2*n5)*j[p4, n1, -1 + n2, n3, 1, n5, 0, n7, 
      2 + n8, 0, 1, 1, 1, 1, 1])/(-1 + n2) + 
   ((-3 + n1 - 2*n8)*j[p4, n1, -1 + n2, n3, 1, n5, 0, n7, 2 + n8, 1, 1, 0, 1, 
      1, 1])/(-1 + n2) + j[p4, n1, -1 + n2, n3, 1, n5, 0, n7, 2 + n8, 1, 1, 
     1, 0, 2, 1]/(1 - n2) + j[p4, n1, -1 + n2, n3, 1, n5, 0, n7, 2 + n8, 1, 
     1, 1, 1, 0, 2]/(1 - n2) - 
   (n7*j[p4, n1, -1 + n2, n3, 1, n5, 0, n7, 2 + n8, 1, 1, 1, 1, 1, 1])/
    (-1 + n2) + j[p4, n1, -1 + n2, n3, 1, n5, 0, n7, 2 + n8, 1, 1, 1, 1, 2, 
     0]/(-1 + n2) + j[p4, n1, -1 + n2, n3, 1, n5, 0, n7, 2 + n8, 1, 1, 1, 2, 
     0, 1]/(-1 + n2) - (n7*j[p4, n1, -1 + n2, n3, 1, n5, 0, 1 + n7, n8, 1, 1, 
      1, 1, 1, 1])/(-1 + n2) - 
   (n7*j[p4, n1, -1 + n2, n3, 1, n5, 0, 1 + n7, 1 + n8, 1, 0, 1, 1, 1, 1])/
    (-1 + n2) + (n7*j[p4, n1, -1 + n2, n3, 1, n5, 0, 1 + n7, 1 + n8, 1, 1, 0, 
      1, 1, 1])/(-1 + n2) - (n7*j[p4, n1, -1 + n2, n3, 1, n5, 0, 1 + n7, 
      1 + n8, 1, 1, 1, 1, 0, 1])/(-1 + n2) - 
   (n7*j[p4, n1, -1 + n2, n3, 1, n5, 0, 1 + n7, 1 + n8, 1, 1, 1, 1, 1, 1])/
    (-1 + n2) - (n5*j[p4, n1, -1 + n2, n3, 1, 1 + n5, -1, n7, 2 + n8, 1, 1, 
      1, 1, 1, 1])/(-1 + n2) - 
   (n5*j[p4, n1, -1 + n2, n3, 1, 1 + n5, 0, -1 + n7, 2 + n8, 1, 1, 1, 1, 1, 
      1])/(-1 + n2) - (n5*j[p4, n1, -1 + n2, n3, 1, 1 + n5, 0, n7, 1 + n8, 0, 
      1, 1, 1, 1, 1])/(-1 + n2) - 
   (n5*j[p4, n1, -1 + n2, n3, 1, 1 + n5, 0, n7, 1 + n8, 1, 1, 1, 1, 0, 1])/
    (-1 + n2) + (n5*j[p4, n1, -1 + n2, n3, 1, 1 + n5, 0, n7, 1 + n8, 1, 1, 1, 
      1, 1, 0])/(-1 + n2) - (2*n3*j[p4, n1, -1 + n2, 1 + n3, 0, n5, 0, 
      -1 + n7, 2 + n8, 1, 1, 1, 1, 1, 1])/(-1 + n2) - 
   (n3*j[p4, n1, -1 + n2, 1 + n3, 0, n5, 0, n7, 2 + n8, 1, 1, 1, 1, 1, 1])/
    (-1 + n2) - (n3*j[p4, n1, -1 + n2, 1 + n3, 1, -1 + n5, 0, -1 + n7, 
      2 + n8, 1, 1, 1, 1, 1, 1])/(-1 + n2) - 
   (3*n3*j[p4, n1, -1 + n2, 1 + n3, 1, -1 + n5, 0, n7, 1 + n8, 1, 1, 1, 1, 1, 
      1])/(-1 + n2) + (n3*j[p4, n1, -1 + n2, 1 + n3, 1, -1 + n5, 0, n7, 
      2 + n8, 1, 0, 1, 1, 1, 1])/(-1 + n2) - 
   (n3*j[p4, n1, -1 + n2, 1 + n3, 1, -1 + n5, 0, n7, 2 + n8, 1, 1, 0, 1, 1, 
      1])/(-1 + n2) + (2*n3*j[p4, n1, -1 + n2, 1 + n3, 1, -1 + n5, 0, n7, 
      2 + n8, 1, 1, 1, 0, 1, 1])/(-1 + n2) - 
   (2*n3*j[p4, n1, -1 + n2, 1 + n3, 1, -1 + n5, 0, n7, 2 + n8, 1, 1, 1, 1, 0, 
      1])/(-1 + n2) - (n3*j[p4, n1, -1 + n2, 1 + n3, 1, -1 + n5, 0, n7, 
      2 + n8, 1, 1, 1, 1, 1, 1])/(-1 + n2) + 
   (2*n3*j[p4, n1, -1 + n2, 1 + n3, 1, n5, -1, -1 + n7, 2 + n8, 1, 1, 1, 1, 
      1, 1])/(-1 + n2) - (2*n3*j[p4, n1, -1 + n2, 1 + n3, 1, n5, -1, n7, 
      2 + n8, 1, 1, 1, 1, 0, 1])/(-1 + n2) + 
   (2*n3*j[p4, n1, -1 + n2, 1 + n3, 1, n5, 0, -2 + n7, 2 + n8, 1, 1, 1, 1, 1, 
      1])/(-1 + n2) + (2*n3*j[p4, n1, -1 + n2, 1 + n3, 1, n5, 0, -1 + n7, 
      1 + n8, 1, 1, 1, 1, 1, 1])/(-1 + n2) - 
   (2*n3*j[p4, n1, -1 + n2, 1 + n3, 1, n5, 0, -1 + n7, 2 + n8, 1, 1, 1, 0, 1, 
      1])/(-1 + n2) + (2*n3*j[p4, n1, -1 + n2, 1 + n3, 1, n5, 0, -1 + n7, 
      2 + n8, 1, 1, 1, 1, 0, 1])/(-1 + n2) + 
   (2*n3*j[p4, n1, -1 + n2, 1 + n3, 1, n5, 0, -1 + n7, 2 + n8, 1, 1, 1, 1, 1, 
      0])/(-1 + n2) + (n3*j[p4, n1, -1 + n2, 1 + n3, 1, n5, 0, -1 + n7, 
      2 + n8, 1, 1, 1, 1, 1, 1])/(-1 + n2) + 
   (2*n3*j[p4, n1, -1 + n2, 1 + n3, 1, n5, 0, n7, 1 + n8, 1, 1, 1, 1, 0, 1])/
    (-1 + n2) - (n3*j[p4, n1, -1 + n2, 1 + n3, 1, n5, 0, n7, 2 + n8, 1, 1, 1, 
      1, 0, 1])/(-1 + n2) + (n3*j[p4, n1, -1 + n2, 1 + n3, 1, n5, 0, n7, 
      2 + n8, 1, 1, 1, 1, 1, 0])/(-1 + n2) - j[p4, n1, n2, -1 + n3, 1, 
    -1 + n5, 0, n7, 2 + n8, 1, 1, 1, 1, 1, 1] + j[p4, n1, n2, -1 + n3, 1, n5, 
    0, n7, 1 + n8, 1, 1, 1, 1, 1, 1] + 
   3*j[p4, n1, n2, n3, 1, -1 + n5, 0, -1 + n7, 2 + n8, 1, 1, 1, 1, 1, 1] + 
   j[p4, n1, n2, n3, 1, -1 + n5, 0, n7, 1 + n8, 1, 1, 1, 1, 1, 1] + 
   3*j[p4, n1, n2, n3, 1, -1 + n5, 0, n7, 2 + n8, 1, 0, 1, 1, 1, 1] - 
   j[p4, n1, n2, n3, 1, -1 + n5, 0, n7, 2 + n8, 1, 1, 1, 0, 1, 1] + 
   2*j[p4, n1, n2, n3, 1, -1 + n5, 0, n7, 2 + n8, 1, 1, 1, 1, 0, 1] - 
   j[p4, n1, n2, n3, 1, -1 + n5, 0, n7, 2 + n8, 1, 1, 1, 1, 1, 1] - 
   2*j[p4, n1, n2, n3, 1, n5, -1, n7, 1 + n8, 1, 1, 1, 1, 1, 1] + 
   j[p4, n1, n2, n3, 1, n5, -1, n7, 2 + n8, 1, 1, 1, 1, 1, 1] - 
   j[p4, n1, n2, n3, 1, n5, 0, -1 + n7, 1 + n8, 1, 1, 1, 1, 1, 1] - 
   j[p4, n1, n2, n3, 1, n5, 0, -1 + n7, 2 + n8, 1, 1, 1, 1, 1, 1] - 
   3*j[p4, n1, n2, n3, 1, n5, 0, n7, 1 + n8, 1, 0, 1, 1, 1, 1] + 
   j[p4, n1, n2, n3, 1, n5, 0, n7, 1 + n8, 1, 1, 1, 0, 1, 1] - 
   2*j[p4, n1, n2, n3, 1, n5, 0, n7, 1 + n8, 1, 1, 1, 1, 0, 1] + 
   j[p4, n1, n2, n3, 1, n5, 0, n7, 1 + n8, 1, 1, 1, 1, 1, 1] + 
   (n1*j[p4, 1 + n1, -1 + n2, n3, 1, -1 + n5, 0, n7, 2 + n8, 1, 1, 1, 1, 0, 
      1])/(-1 + n2) - (2*n1*j[p4, 1 + n1, -1 + n2, n3, 1, -1 + n5, 0, n7, 
      2 + n8, 1, 1, 1, 1, 1, 1])/(-1 + n2) - 
   (n1*j[p4, 1 + n1, -1 + n2, n3, 1, n5, 0, n7, 1 + n8, 1, 1, 1, 1, 0, 1])/
    (-1 + n2) + (2*n1*j[p4, 1 + n1, -1 + n2, n3, 1, n5, 0, n7, 1 + n8, 1, 1, 
      1, 1, 1, 1])/(-1 + n2) + 
   (n1*j[p4, 1 + n1, -1 + n2, n3, 1, n5, 0, n7, 2 + n8, 0, 1, 1, 1, 1, 1])/
    (-1 + n2) - (n1*j[p4, 1 + n1, -1 + n2, n3, 1, n5, 0, n7, 2 + n8, 1, 1, 0, 
      1, 1, 1])/(-1 + n2), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n12 == 1 && n14 == 1 && n2 == 0 && n3 == 0 && n5 == 0 && 
    n6 == 0 && n7 == 0 && n8 == 0 && n10 != 1 -> 
  ((-2*n4 + d*n4 - 2*n4^2)*j[p4, 0, 0, 0, 1 + n4, 0, 0, 0, 0, n9, -1 + n10, 
     n11, 1, n13, 1])/((d - 2*n10)*(-1 + n10)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n12 == 1 && n13 == 1 && n14 == 1 && n2 == 0 && n3 == 0 && n5 == 0 && 
    n6 == 0 && n7 == 0 && n8 == 0 &&  !(n1 == 0 || n10 == 1 || n4 == 1) -> 
  -((n4*j[p4, 1 + n1, 0, -1, 1 + n4, 0, 0, 0, 0, n9, -1 + n10, n11, 1, 1, 1])/
     (-1 + n10)) + ((-5 + 3*d - n1 - n11 - 2*n4 - n9)*
     j[p4, 1 + n1, 0, 0, -1 + n4, 0, 0, 0, 0, n9, n10, n11, 1, 1, 1])/
    (-1 + n4) - (n11*j[p4, 1 + n1, 0, 0, -1 + n4, 0, 0, 0, 0, n9, n10, 
      1 + n11, 0, 1, 1])/(-1 + n4) + 
   (n11*j[p4, 1 + n1, 0, 0, -1 + n4, 0, 0, 0, 0, n9, n10, 1 + n11, 1, 1, 1])/
    (-1 + n4) - (n9*j[p4, 1 + n1, 0, 0, -1 + n4, 0, 0, 0, 0, 1 + n9, n10, 
      n11, 1, 1, 0])/(-1 + n4) + 
   (n9*j[p4, 1 + n1, 0, 0, -1 + n4, 0, 0, 0, 0, 1 + n9, n10, n11, 1, 1, 1])/
    (-1 + n4) + j[p4, 1 + n1, 0, 0, n4, 0, 0, 0, 0, -1 + n9, n10, n11, 1, 1, 
    1] + ((2 + 2*d - 2*n10 - 2*n4)*j[p4, 1 + n1, 0, 0, n4, 0, 0, 0, 0, n9, 
      -1 + n10, n11, 1, 1, 1])/(-1 + n10) + j[p4, 1 + n1, 0, 0, n4, 0, 0, 0, 
    0, n9, n10, -1 + n11, 1, 1, 1] - j[p4, 1 + n1, 0, 0, n4, 0, 0, 0, 0, n9, 
    n10, n11, 0, 1, 1] + j[p4, 1 + n1, 0, 0, n4, 0, 0, 0, 0, n9, n10, n11, 1, 
    0, 1] - j[p4, 1 + n1, 0, 0, n4, 0, 0, 0, 0, n9, n10, n11, 1, 1, 0] + 
   j[p4, 1 + n1, 0, 0, n4, 0, 0, 0, 0, n9, n10, n11, 1, 1, 1] - 
   (n4*j[p4, 1 + n1, 0, 0, 1 + n4, 0, -1, 0, 0, n9, -1 + n10, n11, 1, 1, 1])/
    (-1 + n10) + (n4*j[p4, 1 + n1, 0, 0, 1 + n4, 0, 0, 0, -1, n9, -1 + n10, 
      n11, 1, 1, 1])/(-1 + n10) + 
   (n4*j[p4, 1 + n1, 0, 0, 1 + n4, 0, 0, 0, 0, n9, -1 + n10, n11, 1, 1, 0])/
    (-1 + n10) + ((-1 - n1)*j[p4, 2 + n1, 0, 0, -1 + n4, 0, 0, 0, 0, n9, n10, 
      n11, 1, 0, 1])/(-1 + n4) + 
   ((1 + n1)*j[p4, 2 + n1, 0, 0, -1 + n4, 0, 0, 0, 0, n9, n10, n11, 1, 1, 1])/
    (-1 + n4), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n11 == 1 && n12 == 1 && n13 == 1 && n14 == 1 && n2 == 0 && n3 == 0 && 
    n6 == 0 && n7 == 0 && n8 == 0 &&  !(n10 == 1 || n4 == 1 || n5 == 0) -> 
  j[p4, n1, -1, 0, n4, 1 + n5, 0, 0, 0, n9, n10, 1, 1, 1, 1] + 
   (n4*j[p4, n1, 0, -1, 1 + n4, 1 + n5, 0, 0, 0, n9, -1 + n10, 1, 1, 1, 1])/
    (-1 + n10) + ((2 - d + n4)*j[p4, n1, 0, 0, -1 + n4, 1 + n5, 0, 0, 0, n9, 
      n10, 1, 1, 1, 1])/(-1 + n4) + j[p4, n1, 0, 0, -1 + n4, 1 + n5, 0, 0, 0, 
     n9, n10, 2, 0, 1, 1]/(-1 + n4) + j[p4, n1, 0, 0, -1 + n4, 1 + n5, 0, 0, 
     0, n9, n10, 2, 1, 1, 1]/(1 - n4) - j[p4, n1, 0, 0, n4, 1 + n5, 0, 0, 0, 
    -1 + n9, n10, 1, 1, 1, 1] + ((-2 - 2*d + 2*n10 + n4)*
     j[p4, n1, 0, 0, n4, 1 + n5, 0, 0, 0, n9, -1 + n10, 1, 1, 1, 1])/
    (-1 + n10) + j[p4, n1, 0, 0, n4, 1 + n5, 0, 0, 0, n9, n10, 1, 0, 1, 1] - 
   j[p4, n1, 0, 0, n4, 1 + n5, 0, 0, 0, n9, n10, 1, 1, 0, 1] + 
   j[p4, n1, 0, 0, n4, 1 + n5, 0, 0, 0, n9, n10, 1, 1, 1, 0] - 
   j[p4, n1, 0, 0, n4, 1 + n5, 0, 0, 0, n9, n10, 1, 1, 1, 1] + 
   (2*n4*j[p4, n1, 0, 0, 1 + n4, 1 + n5, -1, 0, 0, n9, -1 + n10, 1, 1, 1, 1])/
    (-1 + n10) - (2*n4*j[p4, n1, 0, 0, 1 + n4, 1 + n5, 0, 0, -1, n9, 
      -1 + n10, 1, 1, 1, 1])/(-1 + n10) - 
   (n4*j[p4, n1, 0, 0, 1 + n4, 1 + n5, 0, 0, 0, n9, -1 + n10, 1, 1, 1, 0])/
    (-1 + n10), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?NonPositive, (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, 
    (n7_)?NonPositive, (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 1 && n14 == 1 && n3 == 0 && n5 == 0 && 
    n6 == 0 && n7 == 0 && n8 == 0 &&  !(n11 == 1 || n9 == 1) -> 
  -((n2*j[p4, -1, 1 + n2, 0, n4, 0, 0, 0, 0, -1 + n9, 1, n11, 1, n13, 1])/
     (-1 + n9)) + ((-4 + d)*j[p4, 0, n2, 0, n4, 0, 0, 0, 0, -1 + n9, 1, 
      -1 + n11, 2, n13, 1])/(2*(-1 + n11)*(-1 + n9)) + 
   ((6 - 7*d + 2*n11 + 4*n13 + 2*n2 + 4*n4 + 2*n9)*j[p4, 0, n2, 0, n4, 0, 0, 
      0, 0, -1 + n9, 1, n11, 1, n13, 1])/(2*(-1 + n9)) + 
   j[p4, 0, n2, 0, n4, 0, 0, 0, 0, n9, 1, n11, 1, n13, 0] + 
   ((2*n4 - d*n4 + 2*n4^2)*j[p4, 0, n2, 0, 1 + n4, 0, 0, 0, 0, -1 + n9, 1, 
      -1 + n11, 1, n13, 1])/(2*(-1 + n11)*(-1 + n9)) - 
   (n2*j[p4, 0, 1 + n2, -1, n4, 0, 0, 0, 0, -1 + n9, 1, n11, 1, n13, 1])/
    (-1 + n9) + (n2*j[p4, 0, 1 + n2, 0, n4, 0, 0, -1, 0, -1 + n9, 1, n11, 1, 
      n13, 1])/(-1 + n9) + (n2*j[p4, 0, 1 + n2, 0, n4, 0, 0, 0, -1, -1 + n9, 
      1, n11, 1, n13, 1])/(-1 + n9) + 
   (n2*j[p4, 0, 1 + n2, 0, n4, 0, 0, 0, 0, -1 + n9, 0, n11, 1, n13, 1])/
    (-1 + n9) - (n2*j[p4, 0, 1 + n2, 0, n4, 0, 0, 0, 0, -1 + n9, 1, n11, 0, 
      n13, 1])/(-1 + n9) + (2*n2*j[p4, 0, 1 + n2, 0, n4, 0, 0, 0, 0, -1 + n9, 
      1, n11, 1, -1 + n13, 1])/(-1 + n9), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n12 == 1 && n13 == 1 && n14 == 1 && n3 == 0 && n5 == 0 && 
    n6 == 0 && n7 == 0 && n8 == 0 &&  !(n11 == 1 || n9 == 1) -> 
  -((n2*j[p4, -1 + n1, 1 + n2, 0, n4, 0, 0, 0, 0, -1 + n9, 1, n11, 1, 1, 1])/
     (-1 + n9)) + ((-4 + d)*j[p4, n1, n2, 0, n4, 0, 0, 0, 0, -1 + n9, 1, 
      -1 + n11, 2, 1, 1])/(2*(-1 + n11)*(-1 + n9)) + 
   ((10 - 7*d + 2*n1 + 2*n11 + 2*n2 + 4*n4 + 2*n9)*j[p4, n1, n2, 0, n4, 0, 0, 
      0, 0, -1 + n9, 1, n11, 1, 1, 1])/(2*(-1 + n9)) + 
   j[p4, n1, n2, 0, n4, 0, 0, 0, 0, n9, 1, n11, 1, 1, 0] + 
   ((2*n4 - d*n4 + 2*n4^2)*j[p4, n1, n2, 0, 1 + n4, 0, 0, 0, 0, -1 + n9, 1, 
      -1 + n11, 1, 1, 1])/(2*(-1 + n11)*(-1 + n9)) - 
   (n2*j[p4, n1, 1 + n2, -1, n4, 0, 0, 0, 0, -1 + n9, 1, n11, 1, 1, 1])/
    (-1 + n9) + (n2*j[p4, n1, 1 + n2, 0, n4, 0, 0, -1, 0, -1 + n9, 1, n11, 1, 
      1, 1])/(-1 + n9) + (n2*j[p4, n1, 1 + n2, 0, n4, 0, 0, 0, -1, -1 + n9, 
      1, n11, 1, 1, 1])/(-1 + n9) + 
   (n2*j[p4, n1, 1 + n2, 0, n4, 0, 0, 0, 0, -1 + n9, 0, n11, 1, 1, 1])/
    (-1 + n9) - (n2*j[p4, n1, 1 + n2, 0, n4, 0, 0, 0, 0, -1 + n9, 1, n11, 0, 
      1, 1])/(-1 + n9) + (2*n2*j[p4, n1, 1 + n2, 0, n4, 0, 0, 0, 0, -1 + n9, 
      1, n11, 1, 0, 1])/(-1 + n9) + 
   (n1*j[p4, 1 + n1, n2, 0, n4, 0, 0, 0, 0, -1 + n9, 1, n11, 1, 0, 1])/
    (-1 + n9) - (n1*j[p4, 1 + n1, n2, 0, n4, 0, 0, 0, 0, -1 + n9, 1, n11, 1, 
      1, 1])/(-1 + n9), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?NonPositive, (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, 
    (n7_)?NonPositive, (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 1 && n13 == 1 && n14 == 1 && n3 == 0 && 
    n6 == 0 && n7 == 0 && n8 == 0 &&  !(n4 == 1 || n5 == 0) -> 
  ((4 - d + n1 + 2*n5)*j[p4, n1, n2, -1, n4, 1 + n5, 0, 0, 0, n9, 1, 1, 1, 1, 
      1])/(-d + 2*n4) + ((4 - d + n1 - 4*n2 + d*n2 - n1*n2 - 4*n4 + d*n4 - 
      n1*n4 + 2*n5 + n1*n5 - 2*n2*n5 - 2*n4*n5)*j[p4, n1, n2, 0, -1 + n4, 
      1 + n5, 0, 0, 0, n9, 1, 1, 1, 1, 1])/((-1 + n4)*(-d + 2*n4)) + 
   ((-4 + d - n1)*j[p4, n1, n2, 0, -1 + n4, 1 + n5, 0, 0, 0, n9, 1, 1, 1, 2, 
      0])/((d - 2*n4)*(-1 + n4)) + 
   ((4 - d + n1 + 6*n5 - d*n5 + n1*n5 + 2*n5^2)*j[p4, n1, n2, 0, -1 + n4, 
      2 + n5, 0, 0, 0, n9, 1, 1, 1, 0, 1])/((-1 + n4)*(-d + 2*n4)) + 
   ((-4 + d - n1 - 6*n5 + d*n5 - n1*n5 - 2*n5^2)*j[p4, n1, n2, 0, -1 + n4, 
      2 + n5, 0, 0, 0, n9, 1, 1, 1, 1, 0])/((-1 + n4)*(-d + 2*n4)) + 
   ((-4 + d - n1 - 2*n5)*j[p4, n1, n2, 0, n4, 1 + n5, 0, 0, 0, n9, 1, 1, 1, 
      1, 0])/(-d + 2*n4) + ((-4*n2 + d*n2 - n1*n2 - 2*n2*n5)*
     j[p4, n1, 1 + n2, -1, -1 + n4, 1 + n5, 0, 0, 0, n9, 1, 1, 1, 1, 1])/
    ((-1 + n4)*(-d + 2*n4)) + ((8*n2 - 6*d*n2 + 2*n1*n2 - 2*n2^2 + 4*n2*n4 + 
      4*n2*n5 + 2*n2*n9)*j[p4, n1, 1 + n2, 0, -1 + n4, n5, 0, 0, 0, n9, 1, 1, 
      1, 1, 1])/((-1 + n4)*(-d + 2*n4)) + 
   (2*n2*j[p4, n1, 1 + n2, 0, -1 + n4, n5, 0, 0, 0, n9, 1, 2, 0, 1, 1])/
    ((-1 + n4)*(-d + 2*n4)) - (2*n2*j[p4, n1, 1 + n2, 0, -1 + n4, n5, 0, 0, 
      0, n9, 1, 2, 1, 1, 1])/((-1 + n4)*(-d + 2*n4)) + 
   (2*n2*n9*j[p4, n1, 1 + n2, 0, -1 + n4, n5, 0, 0, 0, 1 + n9, 1, 1, 1, 1, 
      0])/((-1 + n4)*(-d + 2*n4)) - 
   (2*n2*n9*j[p4, n1, 1 + n2, 0, -1 + n4, n5, 0, 0, 0, 1 + n9, 1, 1, 1, 1, 
      1])/((-1 + n4)*(-d + 2*n4)) + ((4*n2 - d*n2 + n1*n2 + 2*n2*n5)*
     j[p4, n1, 1 + n2, 0, -1 + n4, 1 + n5, -1, 0, 0, n9, 1, 1, 1, 1, 1])/
    ((-1 + n4)*(-d + 2*n4)) + ((4*n2 - d*n2 + n1*n2 + 2*n2*n5)*
     j[p4, n1, 1 + n2, 0, -1 + n4, 1 + n5, 0, -1, 0, n9, 1, 1, 1, 1, 1])/
    ((-1 + n4)*(-d + 2*n4)) + ((4*n2 - d*n2 + n1*n2 + 2*n2*n5)*
     j[p4, n1, 1 + n2, 0, -1 + n4, 1 + n5, 0, 0, -1, n9, 1, 1, 1, 1, 1])/
    ((-1 + n4)*(-d + 2*n4)) + ((-4*n2 + d*n2 - n1*n2 - 2*n2*n5)*
     j[p4, n1, 1 + n2, 0, -1 + n4, 1 + n5, 0, 0, 0, n9, 1, 1, 0, 1, 1])/
    ((-1 + n4)*(-d + 2*n4)) + ((8*n2 - 2*d*n2 + 2*n1*n2 + 6*n2*n5)*
     j[p4, n1, 1 + n2, 0, -1 + n4, 1 + n5, 0, 0, 0, n9, 1, 1, 1, 0, 1])/
    ((-1 + n4)*(-d + 2*n4)) - (2*n2*n5*j[p4, n1, 1 + n2, 0, -1 + n4, 1 + n5, 
      0, 0, 0, n9, 1, 1, 1, 1, 0])/((-1 + n4)*(-d + 2*n4)) + 
   ((-4*n2 - 4*n2^2)*j[p4, n1, 2 + n2, -1, -1 + n4, n5, 0, 0, 0, n9, 1, 1, 1, 
      1, 1])/((-1 + n4)*(-d + 2*n4)) + 
   ((4*n2 + 4*n2^2)*j[p4, n1, 2 + n2, 0, -1 + n4, n5, 0, -1, 0, n9, 1, 1, 1, 
      1, 1])/((-1 + n4)*(-d + 2*n4)) + 
   ((4*n2 + 4*n2^2)*j[p4, n1, 2 + n2, 0, -1 + n4, n5, 0, 0, -1, n9, 1, 1, 1, 
      1, 1])/((-1 + n4)*(-d + 2*n4)) + 
   ((-4*n2 - 4*n2^2)*j[p4, n1, 2 + n2, 0, -1 + n4, n5, 0, 0, 0, n9, 1, 1, 0, 
      1, 1])/((-1 + n4)*(-d + 2*n4)) + 
   ((8*n2 + 8*n2^2)*j[p4, n1, 2 + n2, 0, -1 + n4, n5, 0, 0, 0, n9, 1, 1, 1, 
      0, 1])/((-1 + n4)*(-d + 2*n4)) - 
   (n1*j[p4, 1 + n1, n2, 0, -1 + n4, n5, 0, 0, 0, -1 + n9, 1, 1, 1, 1, 2])/
    ((-1 + n4)*(-d + 2*n4)) + ((n1 - n1*n2 - n1*n9)*
     j[p4, 1 + n1, n2, 0, -1 + n4, n5, 0, 0, 0, n9, 1, 1, 1, 1, 1])/
    ((-1 + n4)*(-d + 2*n4)) + (n1*j[p4, 1 + n1, n2, 0, -1 + n4, n5, 0, 0, 0, 
      n9, 1, 1, 1, 1, 2])/((-1 + n4)*(-d + 2*n4)) - 
   (n1*j[p4, 1 + n1, n2, 0, -1 + n4, n5, 0, 0, 0, n9, 1, 1, 1, 2, 1])/
    ((-1 + n4)*(-d + 2*n4)) + (n1*n9*j[p4, 1 + n1, n2, 0, -1 + n4, n5, 0, 0, 
      0, 1 + n9, 1, 1, 1, 1, 0])/((-1 + n4)*(-d + 2*n4)) - 
   (n1*n9*j[p4, 1 + n1, n2, 0, -1 + n4, n5, 0, 0, 0, 1 + n9, 1, 1, 1, 1, 1])/
    ((-1 + n4)*(-d + 2*n4)) + ((-4*n1 + d*n1 - n1^2)*
     j[p4, 1 + n1, n2, 0, -1 + n4, 1 + n5, 0, 0, 0, -1 + n9, 1, 1, 1, 1, 1])/
    ((d - 2*n4)*(-1 + n4)) + ((4*n1 - d*n1 + n1^2 + 2*n1*n5)*
     j[p4, 1 + n1, n2, 0, -1 + n4, 1 + n5, 0, 0, 0, n9, 1, 1, 1, 0, 1])/
    ((-1 + n4)*(-d + 2*n4)) + ((-4*n1 + d*n1 - n1^2 - 2*n1*n5)*
     j[p4, 1 + n1, n2, 0, -1 + n4, 1 + n5, 0, 0, 0, n9, 1, 1, 1, 1, 1])/
    ((-1 + n4)*(-d + 2*n4)) - (n1*n2*j[p4, 1 + n1, 1 + n2, -1, -1 + n4, n5, 
      0, 0, 0, n9, 1, 1, 1, 1, 1])/((-1 + n4)*(-d + 2*n4)) + 
   (n1*n2*j[p4, 1 + n1, 1 + n2, 0, -1 + n4, n5, 0, -1, 0, n9, 1, 1, 1, 1, 1])/
    ((-1 + n4)*(-d + 2*n4)) + (n1*n2*j[p4, 1 + n1, 1 + n2, 0, -1 + n4, n5, 0, 
      0, -1, n9, 1, 1, 1, 1, 1])/((-1 + n4)*(-d + 2*n4)) + 
   (n1*n2*j[p4, 1 + n1, 1 + n2, 0, -1 + n4, n5, 0, 0, 0, n9, 0, 1, 1, 1, 1])/
    ((-1 + n4)*(-d + 2*n4)) - (n1*n2*j[p4, 1 + n1, 1 + n2, 0, -1 + n4, n5, 0, 
      0, 0, n9, 1, 1, 0, 1, 1])/((-1 + n4)*(-d + 2*n4)) + 
   (6*n1*n2*j[p4, 1 + n1, 1 + n2, 0, -1 + n4, n5, 0, 0, 0, n9, 1, 1, 1, 0, 
      1])/((-1 + n4)*(-d + 2*n4)) - 
   (4*n1*n2*j[p4, 1 + n1, 1 + n2, 0, -1 + n4, n5, 0, 0, 0, n9, 1, 1, 1, 1, 
      1])/((-1 + n4)*(-d + 2*n4)) + 
   ((n1 + n1^2)*j[p4, 2 + n1, n2, 0, -1 + n4, n5, 0, 0, 0, n9, 1, 1, 1, 0, 
      1])/((-1 + n4)*(-d + 2*n4)) + 
   ((-n1 - n1^2)*j[p4, 2 + n1, n2, 0, -1 + n4, n5, 0, 0, 0, n9, 1, 1, 1, 1, 
      1])/((-1 + n4)*(-d + 2*n4)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n12 == 1 && n14 == 1 && n2 == 0 && n4 == 1 && n5 == 0 && 
    n6 == 0 && n7 == 0 && n8 == 0 &&  !(n11 == 1 || n3 == 0) -> 
  (n3*j[p4, -1, 0, 1 + n3, 1, 0, 0, 0, 0, n9, n10, -1 + n11, 1, n13, 1])/
    (-1 + n11) + (n9*j[p4, -1, 0, 1 + n3, 1, 0, 0, 0, 0, 1 + n9, n10, 
      -1 + n11, 1, n13, 1])/(-1 + n11) - 
   (n3*j[p4, 0, -1, 1 + n3, 1, 0, 0, 0, 0, n9, n10, -1 + n11, 1, n13, 1])/
    (-1 + n11) - (n9*j[p4, 0, -1, 1 + n3, 1, 0, 0, 0, 0, 1 + n9, n10, 
      -1 + n11, 1, n13, 1])/(-1 + n11) + 
   j[p4, 0, 0, n3, 1, 0, 0, 0, 0, -1 + n9, n10, -1 + n11, 1, n13, 2]/
    (-1 + n11) + ((4 - 4*d + 2*n10 + n11 + 2*n13 + n3 + 2*n9)*
     j[p4, 0, 0, n3, 1, 0, 0, 0, 0, n9, n10, -1 + n11, 1, n13, 1])/
    (-1 + n11) + j[p4, 0, 0, n3, 1, 0, 0, 0, 0, n9, n10, n11, 0, n13, 1] + 
   j[p4, 0, 0, n3, 2, 0, 0, 0, 0, n9, n10, -1 + n11, 1, n13, 1]/(1 - n11) + 
   j[p4, 0, 0, 1 + n3, 0, 0, 0, 0, 0, n9, n10, -1 + n11, 1, n13, 2]/
    (1 - n11) - (n9*j[p4, 0, 0, 1 + n3, 0, 0, 0, 0, 0, 1 + n9, n10, -1 + n11, 
      1, n13, 1])/(-1 + n11) + 
   (n3*j[p4, 0, 0, 1 + n3, 1, 0, 0, -1, 0, n9, n10, -1 + n11, 1, n13, 1])/
    (-1 + n11) + (n9*j[p4, 0, 0, 1 + n3, 1, 0, 0, -1, 0, 1 + n9, n10, 
      -1 + n11, 1, n13, 1])/(-1 + n11) + 
   (n3*j[p4, 0, 0, 1 + n3, 1, 0, 0, 0, -1, n9, n10, -1 + n11, 1, n13, 1])/
    (-1 + n11) + (n9*j[p4, 0, 0, 1 + n3, 1, 0, 0, 0, -1, 1 + n9, n10, 
      -1 + n11, 1, n13, 1])/(-1 + n11) + 
   (n3*j[p4, 0, 0, 1 + n3, 1, 0, 0, 0, 0, n9, -1 + n10, -1 + n11, 1, n13, 1])/
    (-1 + n11) - (n3*j[p4, 0, 0, 1 + n3, 1, 0, 0, 0, 0, n9, n10, -2 + n11, 1, 
      n13, 1])/(-1 + n11) - (n3*j[p4, 0, 0, 1 + n3, 1, 0, 0, 0, 0, n9, n10, 
      -1 + n11, 1, n13, 1])/(-1 + n11) + 
   (n9*j[p4, 0, 0, 1 + n3, 1, 0, 0, 0, 0, 1 + n9, -1 + n10, -1 + n11, 1, n13, 
      1])/(-1 + n11) - (n9*j[p4, 0, 0, 1 + n3, 1, 0, 0, 0, 0, 1 + n9, n10, 
      -2 + n11, 1, n13, 1])/(-1 + n11) + 
   (n9*j[p4, 0, 0, 1 + n3, 1, 0, 0, 0, 0, 1 + n9, n10, -1 + n11, 1, n13, 0])/
    (-1 + n11) - (n9*j[p4, 0, 0, 1 + n3, 1, 0, 0, 0, 0, 1 + n9, n10, 
      -1 + n11, 1, n13, 1])/(-1 + n11) + 
   j[p4, 0, 0, 1 + n3, 2, 0, 0, 0, 0, n9, n10, -1 + n11, 1, n13, 0]/
    (-1 + n11), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?NonPositive, (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, 
    (n7_)?NonPositive, (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n12 == 1 && n13 == 1 && n14 == 1 && n2 == 0 && n4 == 1 && n5 == 0 && 
    n6 == 0 && n7 == 0 && n8 == 0 &&  !(n11 == 1 || n3 == 0) -> 
  (n3*j[p4, -1 + n1, 0, 1 + n3, 1, 0, 0, 0, 0, n9, n10, -1 + n11, 1, 1, 1])/
    (-1 + n11) + (n9*j[p4, -1 + n1, 0, 1 + n3, 1, 0, 0, 0, 0, 1 + n9, n10, 
      -1 + n11, 1, 1, 1])/(-1 + n11) - 
   (n3*j[p4, n1, -1, 1 + n3, 1, 0, 0, 0, 0, n9, n10, -1 + n11, 1, 1, 1])/
    (-1 + n11) - (n9*j[p4, n1, -1, 1 + n3, 1, 0, 0, 0, 0, 1 + n9, n10, 
      -1 + n11, 1, 1, 1])/(-1 + n11) + 
   j[p4, n1, 0, n3, 1, 0, 0, 0, 0, -1 + n9, n10, -1 + n11, 1, 1, 2]/
    (-1 + n11) + ((6 - 4*d + n1 + 2*n10 + n11 + n3 + 2*n9)*
     j[p4, n1, 0, n3, 1, 0, 0, 0, 0, n9, n10, -1 + n11, 1, 1, 1])/
    (-1 + n11) + j[p4, n1, 0, n3, 1, 0, 0, 0, 0, n9, n10, n11, 0, 1, 1] + 
   j[p4, n1, 0, n3, 2, 0, 0, 0, 0, n9, n10, -1 + n11, 1, 1, 1]/(1 - n11) + 
   j[p4, n1, 0, 1 + n3, 0, 0, 0, 0, 0, n9, n10, -1 + n11, 1, 1, 2]/
    (1 - n11) - (n9*j[p4, n1, 0, 1 + n3, 0, 0, 0, 0, 0, 1 + n9, n10, 
      -1 + n11, 1, 1, 1])/(-1 + n11) + 
   (n3*j[p4, n1, 0, 1 + n3, 1, 0, 0, -1, 0, n9, n10, -1 + n11, 1, 1, 1])/
    (-1 + n11) + (n9*j[p4, n1, 0, 1 + n3, 1, 0, 0, -1, 0, 1 + n9, n10, 
      -1 + n11, 1, 1, 1])/(-1 + n11) + 
   (n3*j[p4, n1, 0, 1 + n3, 1, 0, 0, 0, -1, n9, n10, -1 + n11, 1, 1, 1])/
    (-1 + n11) + (n9*j[p4, n1, 0, 1 + n3, 1, 0, 0, 0, -1, 1 + n9, n10, 
      -1 + n11, 1, 1, 1])/(-1 + n11) + 
   (n3*j[p4, n1, 0, 1 + n3, 1, 0, 0, 0, 0, n9, -1 + n10, -1 + n11, 1, 1, 1])/
    (-1 + n11) - (n3*j[p4, n1, 0, 1 + n3, 1, 0, 0, 0, 0, n9, n10, -2 + n11, 
      1, 1, 1])/(-1 + n11) - (n3*j[p4, n1, 0, 1 + n3, 1, 0, 0, 0, 0, n9, n10, 
      -1 + n11, 1, 1, 1])/(-1 + n11) + 
   (n9*j[p4, n1, 0, 1 + n3, 1, 0, 0, 0, 0, 1 + n9, -1 + n10, -1 + n11, 1, 1, 
      1])/(-1 + n11) - (n9*j[p4, n1, 0, 1 + n3, 1, 0, 0, 0, 0, 1 + n9, n10, 
      -2 + n11, 1, 1, 1])/(-1 + n11) + 
   (n9*j[p4, n1, 0, 1 + n3, 1, 0, 0, 0, 0, 1 + n9, n10, -1 + n11, 1, 1, 0])/
    (-1 + n11) - (n9*j[p4, n1, 0, 1 + n3, 1, 0, 0, 0, 0, 1 + n9, n10, 
      -1 + n11, 1, 1, 1])/(-1 + n11) + 
   j[p4, n1, 0, 1 + n3, 2, 0, 0, 0, 0, n9, n10, -1 + n11, 1, 1, 0]/
    (-1 + n11) + (n1*j[p4, 1 + n1, 0, n3, 1, 0, 0, 0, 0, n9, n10, -1 + n11, 
      1, 0, 1])/(-1 + n11) - (n1*j[p4, 1 + n1, 0, n3, 1, 0, 0, 0, 0, n9, n10, 
      -1 + n11, 1, 1, 1])/(-1 + n11), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n11 == 1 && n12 == 1 && n13 == 1 && n14 == 1 && n2 == 0 && n4 == 1 && 
    n6 == 0 && n7 == 0 && n8 == 0 && n10 != 1 -> 
  (n3*j[p4, -1 + n1, 0, 1 + n3, 1, n5, 0, 0, 0, n9, n10, 1, 1, 1, 1])/
    (d - 2*n10) - (n3*j[p4, n1, -1, 1 + n3, 1, n5, 0, 0, 0, n9, n10, 1, 1, 1, 
      1])/(d - 2*n10) + ((-n3 - n3^2)*j[p4, n1, -1, 2 + n3, 1, n5, 0, 0, 0, 
      n9, -1 + n10, 1, 1, 1, 1])/((d - 2*n10)*(-1 + n10)) + 
   ((-4 + d - 2*n3)*j[p4, n1, 0, n3, 2, n5, 0, 0, 0, n9, -1 + n10, 1, 1, 1, 
      1])/((d - 2*n10)*(-1 + n10)) + ((-4*n3 + 2*d*n3 - n10*n3 - 3*n3^2)*
     j[p4, n1, 0, 1 + n3, 1, n5, 0, 0, 0, n9, -1 + n10, 1, 1, 1, 1])/
    ((d - 2*n10)*(-1 + n10)) + 
   (n3*j[p4, n1, 0, 1 + n3, 2, -1 + n5, 0, 0, 0, n9, -1 + n10, 1, 1, 1, 1])/
    ((d - 2*n10)*(-1 + n10)) - 
   (n3*j[p4, n1, 0, 1 + n3, 2, n5, -1, 0, 0, n9, -1 + n10, 1, 1, 1, 1])/
    ((d - 2*n10)*(-1 + n10)) - 
   (n3*j[p4, n1, 0, 1 + n3, 2, n5, 0, -1, 0, n9, -1 + n10, 1, 1, 1, 1])/
    ((d - 2*n10)*(-1 + n10)) + 
   (n3*j[p4, n1, 0, 1 + n3, 2, n5, 0, 0, -1, n9, -1 + n10, 1, 1, 1, 1])/
    ((d - 2*n10)*(-1 + n10)) + 
   (2*n3*j[p4, n1, 0, 1 + n3, 2, n5, 0, 0, 0, n9, -1 + n10, 1, 1, 1, 0])/
    ((d - 2*n10)*(-1 + n10)) + 
   ((2*n3 + 2*n3^2)*j[p4, n1, 0, 2 + n3, 1, n5, 0, 0, -1, n9, -1 + n10, 1, 1, 
      1, 1])/((d - 2*n10)*(-1 + n10)) + 
   ((-n3 - n3^2)*j[p4, n1, 0, 2 + n3, 1, n5, 0, 0, 0, n9, -1 + n10, 1, 0, 1, 
      1])/((d - 2*n10)*(-1 + n10)) + 
   ((2*n3 + 2*n3^2)*j[p4, n1, 0, 2 + n3, 1, n5, 0, 0, 0, n9, -1 + n10, 1, 1, 
      0, 1])/((d - 2*n10)*(-1 + n10)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 1 && n14 == 1 && n3 == 0 && n4 == 1 && 
    n5 == 0 && n7 == 0 && n8 == 0 &&  !(n11 == 1 || n9 == 1) -> 
  -((n2*j[p4, -1, 1 + n2, 0, 1, 0, n6, 0, 0, -1 + n9, 1, n11, 1, n13, 1])/
     (-1 + n9)) - (n6*j[p4, 0, -1 + n2, 0, 1, 0, 1 + n6, 0, 0, -1 + n9, 1, 
      n11, 1, n13, 1])/(-1 + n9) - 
   (n6*j[p4, 0, n2, -1, 1, 0, 1 + n6, 0, 0, -1 + n9, 1, n11, 1, n13, 1])/
    (-1 + n9) + ((-4 + d)*j[p4, 0, n2, 0, 1, 0, n6, 0, 0, -1 + n9, 1, 
      -1 + n11, 2, n13, 1])/(2*(-1 + n11)*(-1 + n9)) + 
   ((10 - 7*d + 2*n11 + 4*n13 + 2*n2 + 4*n6 + 2*n9)*
     j[p4, 0, n2, 0, 1, 0, n6, 0, 0, -1 + n9, 1, n11, 1, n13, 1])/
    (2*(-1 + n9)) + j[p4, 0, n2, 0, 1, 0, n6, 0, 0, n9, 1, n11, 1, n13, 0] + 
   (n6*j[p4, 0, n2, 0, 1, 0, 1 + n6, -1, 0, -1 + n9, 1, n11, 1, n13, 1])/
    (-1 + n9) + (n6*j[p4, 0, n2, 0, 1, 0, 1 + n6, 0, -1, -1 + n9, 1, n11, 1, 
      n13, 1])/(-1 + n9) - (n6*j[p4, 0, n2, 0, 1, 0, 1 + n6, 0, 0, -2 + n9, 
      1, n11, 1, n13, 1])/(-1 + n9) + 
   (n6*j[p4, 0, n2, 0, 1, 0, 1 + n6, 0, 0, -1 + n9, 0, n11, 1, n13, 1])/
    (-1 + n9) - (n6*j[p4, 0, n2, 0, 1, 0, 1 + n6, 0, 0, -1 + n9, 1, n11, 0, 
      n13, 1])/(-1 + n9) + (n6*j[p4, 0, n2, 0, 1, 0, 1 + n6, 0, 0, -1 + n9, 
      1, n11, 1, -1 + n13, 1])/(-1 + n9) + 
   (n6*j[p4, 0, n2, 0, 1, 0, 1 + n6, 0, 0, -1 + n9, 1, n11, 1, n13, 0])/
    (-1 + n9) + ((4 - d)*j[p4, 0, n2, 0, 2, 0, n6, 0, 0, -1 + n9, 1, 
      -1 + n11, 1, n13, 1])/(2*(-1 + n11)*(-1 + n9)) - 
   (n2*j[p4, 0, 1 + n2, -1, 1, 0, n6, 0, 0, -1 + n9, 1, n11, 1, n13, 1])/
    (-1 + n9) + (n2*j[p4, 0, 1 + n2, 0, 1, 0, n6, -1, 0, -1 + n9, 1, n11, 1, 
      n13, 1])/(-1 + n9) + (n2*j[p4, 0, 1 + n2, 0, 1, 0, n6, 0, -1, -1 + n9, 
      1, n11, 1, n13, 1])/(-1 + n9) + 
   (n2*j[p4, 0, 1 + n2, 0, 1, 0, n6, 0, 0, -1 + n9, 0, n11, 1, n13, 1])/
    (-1 + n9) - (n2*j[p4, 0, 1 + n2, 0, 1, 0, n6, 0, 0, -1 + n9, 1, n11, 0, 
      n13, 1])/(-1 + n9) + (2*n2*j[p4, 0, 1 + n2, 0, 1, 0, n6, 0, 0, -1 + n9, 
      1, n11, 1, -1 + n13, 1])/(-1 + n9), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n12 == 1 && n13 == 1 && n14 == 1 && n3 == 0 && n4 == 1 && 
    n5 == 0 && n7 == 0 && n8 == 0 &&  !(n11 == 1 || n9 == 1) -> 
  -((n2*j[p4, -1 + n1, 1 + n2, 0, 1, 0, n6, 0, 0, -1 + n9, 1, n11, 1, 1, 1])/
     (-1 + n9)) - (n6*j[p4, n1, -1 + n2, 0, 1, 0, 1 + n6, 0, 0, -1 + n9, 1, 
      n11, 1, 1, 1])/(-1 + n9) - 
   (n6*j[p4, n1, n2, -1, 1, 0, 1 + n6, 0, 0, -1 + n9, 1, n11, 1, 1, 1])/
    (-1 + n9) + ((-4 + d)*j[p4, n1, n2, 0, 1, 0, n6, 0, 0, -1 + n9, 1, 
      -1 + n11, 2, 1, 1])/(2*(-1 + n11)*(-1 + n9)) + 
   ((14 - 7*d + 2*n1 + 2*n11 + 2*n2 + 4*n6 + 2*n9)*j[p4, n1, n2, 0, 1, 0, n6, 
      0, 0, -1 + n9, 1, n11, 1, 1, 1])/(2*(-1 + n9)) + 
   j[p4, n1, n2, 0, 1, 0, n6, 0, 0, n9, 1, n11, 1, 1, 0] + 
   (n6*j[p4, n1, n2, 0, 1, 0, 1 + n6, -1, 0, -1 + n9, 1, n11, 1, 1, 1])/
    (-1 + n9) + (n6*j[p4, n1, n2, 0, 1, 0, 1 + n6, 0, -1, -1 + n9, 1, n11, 1, 
      1, 1])/(-1 + n9) - (n6*j[p4, n1, n2, 0, 1, 0, 1 + n6, 0, 0, -2 + n9, 1, 
      n11, 1, 1, 1])/(-1 + n9) + 
   (n6*j[p4, n1, n2, 0, 1, 0, 1 + n6, 0, 0, -1 + n9, 0, n11, 1, 1, 1])/
    (-1 + n9) - (n6*j[p4, n1, n2, 0, 1, 0, 1 + n6, 0, 0, -1 + n9, 1, n11, 0, 
      1, 1])/(-1 + n9) + (n6*j[p4, n1, n2, 0, 1, 0, 1 + n6, 0, 0, -1 + n9, 1, 
      n11, 1, 0, 1])/(-1 + n9) + 
   (n6*j[p4, n1, n2, 0, 1, 0, 1 + n6, 0, 0, -1 + n9, 1, n11, 1, 1, 0])/
    (-1 + n9) + ((4 - d)*j[p4, n1, n2, 0, 2, 0, n6, 0, 0, -1 + n9, 1, 
      -1 + n11, 1, 1, 1])/(2*(-1 + n11)*(-1 + n9)) - 
   (n2*j[p4, n1, 1 + n2, -1, 1, 0, n6, 0, 0, -1 + n9, 1, n11, 1, 1, 1])/
    (-1 + n9) + (n2*j[p4, n1, 1 + n2, 0, 1, 0, n6, -1, 0, -1 + n9, 1, n11, 1, 
      1, 1])/(-1 + n9) + (n2*j[p4, n1, 1 + n2, 0, 1, 0, n6, 0, -1, -1 + n9, 
      1, n11, 1, 1, 1])/(-1 + n9) + 
   (n2*j[p4, n1, 1 + n2, 0, 1, 0, n6, 0, 0, -1 + n9, 0, n11, 1, 1, 1])/
    (-1 + n9) - (n2*j[p4, n1, 1 + n2, 0, 1, 0, n6, 0, 0, -1 + n9, 1, n11, 0, 
      1, 1])/(-1 + n9) + (2*n2*j[p4, n1, 1 + n2, 0, 1, 0, n6, 0, 0, -1 + n9, 
      1, n11, 1, 0, 1])/(-1 + n9) + 
   (n1*j[p4, 1 + n1, n2, 0, 1, 0, n6, 0, 0, -1 + n9, 1, n11, 1, 0, 1])/
    (-1 + n9) - (n1*j[p4, 1 + n1, n2, 0, 1, 0, n6, 0, 0, -1 + n9, 1, n11, 1, 
      1, 1])/(-1 + n9), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?NonPositive, (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, 
    (n7_)?NonPositive, (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 1 && n14 == 1 && n4 == 1 && 
    n5 == 0 && n7 == 0 && n8 == 0 && n13 != 1 -> 
  ((-4 + d - n3)*j[p4, 0, n2, n3, 2, 0, n6, 0, 0, n9, 1, 1, 1, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + ((-5*n3 + 2*n13*n3 + 2*n2*n3 - n3^2)*
     j[p4, 0, n2, 1 + n3, 1, 0, n6, 0, 0, n9, 1, 1, 1, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n3*j[p4, 0, n2, 1 + n3, 2, -1, n6, 0, 0, n9, 1, 1, 1, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n3*j[p4, 0, n2, 1 + n3, 2, 0, n6, -1, 0, n9, 1, 1, 1, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n3*j[p4, 0, n2, 1 + n3, 2, 0, n6, 0, 0, n9, 1, 1, 1, -1 + n13, 0])/
    ((d - 2*n13)*(-1 + n13)) + 
   ((-n3 - n3^2)*j[p4, 0, n2, 2 + n3, 1, 0, n6, -1, 0, n9, 1, 1, 1, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((n3 + n3^2)*j[p4, 0, n2, 2 + n3, 1, 0, n6, 0, 0, n9, 1, 1, 1, -2 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (n2*j[p4, 0, 1 + n2, -1 + n3, 2, 0, n6, 0, 0, n9, 1, 1, 1, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + ((-4*n2 + 2*n13*n2 - 2*n2^2 + 2*n2*n3)*
     j[p4, 0, 1 + n2, n3, 1, 0, n6, 0, 0, n9, 1, 1, 1, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n2*j[p4, 0, 1 + n2, n3, 2, -1, n6, 0, 0, n9, 1, 1, 1, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (2*n2*j[p4, 0, 1 + n2, n3, 2, 0, -1 + n6, 0, 0, n9, 1, 1, 1, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n2*j[p4, 0, 1 + n2, n3, 2, 0, n6, -1, 0, n9, 1, 1, 1, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (2*n2*j[p4, 0, 1 + n2, n3, 2, 0, n6, 0, -1, n9, 1, 1, 1, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n2*j[p4, 0, 1 + n2, n3, 2, 0, n6, 0, 0, n9, 1, 1, 1, -1 + n13, 0])/
    ((d - 2*n13)*(-1 + n13)) - 
   (3*n2*n3*j[p4, 0, 1 + n2, 1 + n3, 1, 0, n6, 0, -1, n9, 1, 1, 1, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (n2*n3*j[p4, 0, 1 + n2, 1 + n3, 1, 0, n6, 0, 0, n9, 1, 1, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n2*n3*j[p4, 0, 1 + n2, 1 + n3, 1, 0, n6, 0, 0, n9, 1, 1, 1, -2 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   ((-n2 - n2^2)*j[p4, 0, 2 + n2, -1 + n3, 1, 0, n6, 0, 0, n9, 1, 1, 1, 
      -1 + n13, 1])/((d - 2*n13)*(-1 + n13)) + 
   ((n2 + n2^2)*j[p4, 0, 2 + n2, n3, 1, 0, n6, -1, 0, n9, 1, 1, 1, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((n2 + n2^2)*j[p4, 0, 2 + n2, n3, 1, 0, n6, 0, -1, n9, 1, 1, 1, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((-n2 - n2^2)*j[p4, 0, 2 + n2, n3, 1, 0, n6, 0, 0, n9, 1, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((2*n2 + 2*n2^2)*j[p4, 0, 2 + n2, n3, 1, 0, n6, 0, 0, n9, 1, 1, 1, 
      -2 + n13, 1])/((d - 2*n13)*(-1 + n13)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 1 && n13 == 1 && n14 == 1 && n4 == 1 && 
    n5 == 0 && n7 == 0 && n8 == 0 &&  !(n6 == 0 || n9 == 1) -> 
  ((-1 - n6)*j[p4, -1 + n1, -1 + n2, n3, 1, 0, 2 + n6, 0, 0, -1 + n9, 1, 1, 
      1, 1, 1])/(-1 + n9) + ((-1 - n6)*j[p4, -1 + n1, n2, -1 + n3, 1, 0, 
      2 + n6, 0, 0, -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) + 
   ((4 - 2*d + n1 + n3 + n6 + n9)*j[p4, -1 + n1, n2, n3, 1, 0, 1 + n6, 0, 0, 
      -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) + j[p4, -1 + n1, n2, n3, 1, 0, 
    1 + n6, 0, 0, n9, 1, 1, 1, 1, 0] - j[p4, -1 + n1, n2, n3, 1, 0, 1 + n6, 
    0, 0, n9, 1, 1, 1, 1, 1] + 
   ((1 + n6)*j[p4, -1 + n1, n2, n3, 1, 0, 2 + n6, -1, 0, -1 + n9, 1, 1, 1, 1, 
      1])/(-1 + n9) + ((1 + n6)*j[p4, -1 + n1, n2, n3, 1, 0, 2 + n6, 0, -1, 
      -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) + 
   ((-1 - n6)*j[p4, -1 + n1, n2, n3, 1, 0, 2 + n6, 0, 0, -1 + n9, 1, 1, 0, 1, 
      1])/(-1 + n9) + ((1 + n6)*j[p4, -1 + n1, n2, n3, 1, 0, 2 + n6, 0, 0, 
      -1 + n9, 1, 1, 1, 0, 1])/(-1 + n9) + 
   ((1 + n6)*j[p4, -1 + n1, n2, n3, 1, 0, 2 + n6, 0, 0, -1 + n9, 1, 1, 1, 1, 
      0])/(-1 + n9) - (n3*j[p4, -1 + n1, n2, 1 + n3, 1, -1, 1 + n6, 0, 0, 
      -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) + 
   (n3*j[p4, -1 + n1, n2, 1 + n3, 1, 0, 1 + n6, 0, 0, -1 + n9, 1, 1, 1, 0, 
      1])/(-1 + n9) - (n2*j[p4, -1 + n1, 1 + n2, -1 + n3, 1, 0, 1 + n6, 0, 0, 
      -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) + 
   (n2*j[p4, -1 + n1, 1 + n2, n3, 1, -1, 1 + n6, 0, 0, -1 + n9, 1, 1, 1, 1, 
      1])/(-1 + n9) + (n2*j[p4, -1 + n1, 1 + n2, n3, 1, 0, 1 + n6, 0, -1, 
      -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) - 
   (n2*j[p4, -1 + n1, 1 + n2, n3, 1, 0, 1 + n6, 0, 0, -1 + n9, 1, 1, 0, 1, 
      1])/(-1 + n9) + (2*n2*j[p4, -1 + n1, 1 + n2, n3, 1, 0, 1 + n6, 0, 0, 
      -1 + n9, 1, 1, 1, 0, 1])/(-1 + n9) + 
   ((1 + n6)*j[p4, n1, -2 + n2, n3, 1, 0, 2 + n6, 0, 0, -1 + n9, 1, 1, 1, 1, 
      1])/(-1 + n9) + ((-1 - n6)*j[p4, n1, -1 + n2, n3, 1, -1, 2 + n6, 0, 0, 
      -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) + 
   ((-5 + 2*d - n1 - n3 - 2*n6 - n9)*j[p4, n1, -1 + n2, n3, 1, 0, 1 + n6, 0, 
      0, -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) - j[p4, n1, -1 + n2, n3, 1, 0, 
    1 + n6, 0, 0, n9, 1, 1, 1, 1, 0] + j[p4, n1, -1 + n2, n3, 1, 0, 1 + n6, 
    0, 0, n9, 1, 1, 1, 1, 1] + 
   ((-1 - n6)*j[p4, n1, -1 + n2, n3, 1, 0, 2 + n6, -1, 0, -1 + n9, 1, 1, 1, 
      1, 1])/(-1 + n9) + ((-1 - n6)*j[p4, n1, -1 + n2, n3, 1, 0, 2 + n6, 0, 
      -1, -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) + 
   ((1 + n6)*j[p4, n1, -1 + n2, n3, 1, 0, 2 + n6, 0, 0, -1 + n9, 1, 1, 0, 1, 
      1])/(-1 + n9) + ((-1 - n6)*j[p4, n1, -1 + n2, n3, 1, 0, 2 + n6, 0, 0, 
      -1 + n9, 1, 1, 1, 0, 1])/(-1 + n9) + 
   ((-1 - n6)*j[p4, n1, -1 + n2, n3, 1, 0, 2 + n6, 0, 0, -1 + n9, 1, 1, 1, 1, 
      0])/(-1 + n9) + (n3*j[p4, n1, -1 + n2, 1 + n3, 1, 0, 1 + n6, -1, 0, 
      -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) - 
   (n3*j[p4, n1, -1 + n2, 1 + n3, 1, 0, 1 + n6, 0, 0, -1 + n9, 1, 1, 1, 0, 
      1])/(-1 + n9) + ((-1 - n6)*j[p4, n1, n2, -2 + n3, 1, 0, 2 + n6, 0, 0, 
      -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) + 
   ((-1 - n6)*j[p4, n1, n2, -1 + n3, 1, -1, 2 + n6, 0, 0, -1 + n9, 1, 1, 1, 
      1, 1])/(-1 + n9) + ((1 - d + n3 + n9)*j[p4, n1, n2, -1 + n3, 1, 0, 
      1 + n6, 0, 0, -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) + 
   j[p4, n1, n2, -1 + n3, 1, 0, 1 + n6, 0, 0, -1 + n9, 1, 1, 1, 2, 0]/
    (-1 + n9) + j[p4, n1, n2, -1 + n3, 1, 0, 1 + n6, 0, 0, n9, 1, 1, 1, 1, 
    0] - j[p4, n1, n2, -1 + n3, 1, 0, 1 + n6, 0, 0, n9, 1, 1, 1, 1, 1] + 
   ((1 + n6)*j[p4, n1, n2, -1 + n3, 1, 0, 2 + n6, -1, 0, -1 + n9, 1, 1, 1, 1, 
      1])/(-1 + n9) + ((1 + n6)*j[p4, n1, n2, -1 + n3, 1, 0, 2 + n6, 0, -1, 
      -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) + 
   ((-1 - n6)*j[p4, n1, n2, -1 + n3, 1, 0, 2 + n6, 0, 0, -1 + n9, 1, 1, 0, 1, 
      1])/(-1 + n9) + ((1 + n6)*j[p4, n1, n2, -1 + n3, 1, 0, 2 + n6, 0, 0, 
      -1 + n9, 1, 1, 1, 0, 1])/(-1 + n9) + 
   ((1 + n6)*j[p4, n1, n2, -1 + n3, 1, 0, 2 + n6, 0, 0, -1 + n9, 1, 1, 1, 1, 
      0])/(-1 + n9) - (n3*j[p4, n1, n2, n3, 0, 0, 1 + n6, 0, 0, -1 + n9, 1, 
      1, 1, 1, 1])/(-1 + n9) + ((1 - d + n1 - 2*n2 + n3 + n9)*
     j[p4, n1, n2, n3, 1, -1, 1 + n6, 0, 0, -1 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9) + j[p4, n1, n2, n3, 1, -1, 1 + n6, 0, 0, n9, 1, 1, 1, 1, 0] - 
   j[p4, n1, n2, n3, 1, -1, 1 + n6, 0, 0, n9, 1, 1, 1, 1, 1] + 
   ((1 + n6)*j[p4, n1, n2, n3, 1, -1, 2 + n6, -1, 0, -1 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9) + ((1 + n6)*j[p4, n1, n2, n3, 1, -1, 2 + n6, 0, -1, -1 + n9, 1, 
      1, 1, 1, 1])/(-1 + n9) + 
   ((1 + n6)*j[p4, n1, n2, n3, 1, -1, 2 + n6, 0, 0, -2 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9) + ((-1 - n6)*j[p4, n1, n2, n3, 1, -1, 2 + n6, 0, 0, -1 + n9, 0, 
      1, 1, 1, 1])/(-1 + n9) + 
   ((-1 - n6)*j[p4, n1, n2, n3, 1, -1, 2 + n6, 0, 0, -1 + n9, 1, 1, 0, 1, 1])/
    (-1 + n9) + ((1 + n6)*j[p4, n1, n2, n3, 1, -1, 2 + n6, 0, 0, -1 + n9, 1, 
      1, 1, 0, 1])/(-1 + n9) + 
   ((1 + n6)*j[p4, n1, n2, n3, 1, -1, 2 + n6, 0, 0, -1 + n9, 1, 1, 1, 1, 0])/
    (-1 + n9) + ((4 - 2*d + n1 + n3 + n6 + n9)*j[p4, n1, n2, n3, 1, 0, n6, 0, 
      0, -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) + j[p4, n1, n2, n3, 1, 0, n6, 0, 
    0, n9, 1, 1, 1, 1, 0] + ((6 - 2*d + n1 + n2 + n3 + 2*n6)*
     j[p4, n1, n2, n3, 1, 0, 1 + n6, -1, 0, -1 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9) + j[p4, n1, n2, n3, 1, 0, 1 + n6, -1, 0, -1 + n9, 1, 1, 1, 2, 
     0]/(1 - n9) + ((1 - n2 + n6)*j[p4, n1, n2, n3, 1, 0, 1 + n6, 0, -1, 
      -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) + 
   j[p4, n1, n2, n3, 1, 0, 1 + n6, 0, 0, -1 + n9, 0, 1, 1, 1, 1]/(1 - n9) + 
   j[p4, n1, n2, n3, 1, 0, 1 + n6, 0, 0, -1 + n9, 1, 0, 1, 1, 1]/(-1 + n9) + 
   ((-1 + n2 - n6)*j[p4, n1, n2, n3, 1, 0, 1 + n6, 0, 0, -1 + n9, 1, 1, 0, 1, 
      1])/(-1 + n9) + ((1 + n1 - 2*n2 + n6)*j[p4, n1, n2, n3, 1, 0, 1 + n6, 
      0, 0, -1 + n9, 1, 1, 1, 0, 1])/(-1 + n9) + 
   ((-1 + n3 + n6)*j[p4, n1, n2, n3, 1, 0, 1 + n6, 0, 0, -1 + n9, 1, 1, 1, 1, 
      0])/(-1 + n9) + ((1 - n1)*j[p4, n1, n2, n3, 1, 0, 1 + n6, 0, 0, 
      -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) + 
   ((-1 - n6)*j[p4, n1, n2, n3, 1, 0, 2 + n6, -1, 0, -2 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9) + ((1 + n6)*j[p4, n1, n2, n3, 1, 0, 2 + n6, -1, 0, -1 + n9, 0, 
      1, 1, 1, 1])/(-1 + n9) + j[p4, n1, n2, n3, 2, -1, 1 + n6, 0, 0, 
     -2 + n9, 1, 1, 1, 1, 1]/(-1 + n9) + 
   j[p4, n1, n2, n3, 2, -1, 1 + n6, 0, 0, -1 + n9, 0, 1, 1, 1, 1]/(1 - n9) + 
   j[p4, n1, n2, n3, 2, -1, 1 + n6, 0, 0, -1 + n9, 1, 0, 1, 1, 1]/(-1 + n9) + 
   j[p4, n1, n2, n3, 2, 0, 1 + n6, -1, 0, -2 + n9, 1, 1, 1, 1, 1]/(1 - n9) + 
   j[p4, n1, n2, n3, 2, 0, 1 + n6, -1, 0, -1 + n9, 0, 1, 1, 1, 1]/(-1 + n9) + 
   j[p4, n1, n2, n3, 2, 0, 1 + n6, -1, 0, -1 + n9, 1, 0, 1, 1, 1]/(1 - n9) + 
   (n3*j[p4, n1, n2, 1 + n3, 0, 0, 1 + n6, -1, 0, -1 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9) + (n3*j[p4, n1, n2, 1 + n3, 1, -1, 1 + n6, 0, -1, -1 + n9, 1, 
      1, 1, 1, 1])/(-1 + n9) - 
   (n3*j[p4, n1, n2, 1 + n3, 1, -1, 1 + n6, 0, 0, -1 + n9, 0, 1, 1, 1, 1])/
    (-1 + n9) + (n3*j[p4, n1, n2, 1 + n3, 1, -1, 1 + n6, 0, 0, -1 + n9, 1, 0, 
      1, 1, 1])/(-1 + n9) - (n3*j[p4, n1, n2, 1 + n3, 1, -1, 1 + n6, 0, 0, 
      -1 + n9, 1, 1, 0, 1, 1])/(-1 + n9) + 
   (n3*j[p4, n1, n2, 1 + n3, 1, -1, 1 + n6, 0, 0, -1 + n9, 1, 1, 1, 0, 1])/
    (-1 + n9) + (n3*j[p4, n1, n2, 1 + n3, 1, -1, 1 + n6, 0, 0, -1 + n9, 1, 1, 
      1, 1, 1])/(-1 + n9) - (n3*j[p4, n1, n2, 1 + n3, 1, 0, n6, -1, 0, 
      -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) + 
   (n3*j[p4, n1, n2, 1 + n3, 1, 0, n6, 0, 0, -1 + n9, 1, 1, 1, 0, 1])/
    (-1 + n9) - (n3*j[p4, n1, n2, 1 + n3, 1, 0, 1 + n6, -2, 0, -1 + n9, 1, 1, 
      1, 1, 1])/(-1 + n9) - (n3*j[p4, n1, n2, 1 + n3, 1, 0, 1 + n6, -1, -1, 
      -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) + 
   (n3*j[p4, n1, n2, 1 + n3, 1, 0, 1 + n6, -1, 0, -1 + n9, 0, 1, 1, 1, 1])/
    (-1 + n9) - (n3*j[p4, n1, n2, 1 + n3, 1, 0, 1 + n6, -1, 0, -1 + n9, 1, 0, 
      1, 1, 1])/(-1 + n9) + (n3*j[p4, n1, n2, 1 + n3, 1, 0, 1 + n6, -1, 0, 
      -1 + n9, 1, 1, 0, 1, 1])/(-1 + n9) - 
   (n3*j[p4, n1, n2, 1 + n3, 1, 0, 1 + n6, -1, 0, -1 + n9, 1, 1, 1, 1, 0])/
    (-1 + n9) - (n3*j[p4, n1, n2, 1 + n3, 1, 0, 1 + n6, -1, 0, -1 + n9, 1, 1, 
      1, 1, 1])/(-1 + n9) - (n2*j[p4, n1, 1 + n2, -2 + n3, 1, 0, 1 + n6, 0, 
      0, -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) - 
   (2*n2*j[p4, n1, 1 + n2, -1 + n3, 1, -1, 1 + n6, 0, 0, -1 + n9, 1, 1, 1, 1, 
      1])/(-1 + n9) + (n2*j[p4, n1, 1 + n2, -1 + n3, 1, 0, 1 + n6, -1, 0, 
      -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) + 
   (n2*j[p4, n1, 1 + n2, -1 + n3, 1, 0, 1 + n6, 0, -1, -1 + n9, 1, 1, 1, 1, 
      1])/(-1 + n9) - (n2*j[p4, n1, 1 + n2, -1 + n3, 1, 0, 1 + n6, 0, 0, 
      -1 + n9, 1, 1, 0, 1, 1])/(-1 + n9) + 
   (2*n2*j[p4, n1, 1 + n2, -1 + n3, 1, 0, 1 + n6, 0, 0, -1 + n9, 1, 1, 1, 0, 
      1])/(-1 + n9) + (n2*j[p4, n1, 1 + n2, n3, 1, -1, 1 + n6, -1, 0, 
      -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) + 
   (2*n2*j[p4, n1, 1 + n2, n3, 1, -1, 1 + n6, 0, -1, -1 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9) - (n2*j[p4, n1, 1 + n2, n3, 1, -1, 1 + n6, 0, 0, -1 + n9, 0, 1, 
      1, 1, 1])/(-1 + n9) - (n2*j[p4, n1, 1 + n2, n3, 1, -1, 1 + n6, 0, 0, 
      -1 + n9, 1, 1, 0, 1, 1])/(-1 + n9) + 
   (2*n2*j[p4, n1, 1 + n2, n3, 1, -1, 1 + n6, 0, 0, -1 + n9, 1, 1, 1, 0, 1])/
    (-1 + n9) + (n2*j[p4, n1, 1 + n2, n3, 1, 0, n6, 0, -1, -1 + n9, 1, 1, 1, 
      1, 1])/(-1 + n9) - (n2*j[p4, n1, 1 + n2, n3, 1, 0, n6, 0, 0, -1 + n9, 
      1, 1, 0, 1, 1])/(-1 + n9) + 
   (2*n2*j[p4, n1, 1 + n2, n3, 1, 0, n6, 0, 0, -1 + n9, 1, 1, 1, 0, 1])/
    (-1 + n9) + (n2*j[p4, n1, 1 + n2, n3, 1, 0, 1 + n6, -1, 0, -1 + n9, 0, 1, 
      1, 1, 1])/(-1 + n9) - (n1*j[p4, 1 + n1, -1 + n2, n3, 1, -1, 1 + n6, 0, 
      0, -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) - 
   (n1*j[p4, 1 + n1, -1 + n2, n3, 1, 0, 1 + n6, 0, 0, -1 + n9, 1, 1, 1, 0, 
      1])/(-1 + n9) + (n1*j[p4, 1 + n1, -1 + n2, n3, 1, 0, 1 + n6, 0, 0, 
      -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) - 
   (n1*j[p4, 1 + n1, n2, -1 + n3, 1, -1, 1 + n6, 0, 0, -1 + n9, 1, 1, 1, 1, 
      1])/(-1 + n9) + (n1*j[p4, 1 + n1, n2, -1 + n3, 1, 0, 1 + n6, 0, 0, 
      -2 + n9, 1, 1, 1, 1, 1])/(-1 + n9) + 
   (n1*j[p4, 1 + n1, n2, -1 + n3, 1, 0, 1 + n6, 0, 0, -1 + n9, 1, 1, 1, 0, 
      1])/(-1 + n9) - (n1*j[p4, 1 + n1, n2, -1 + n3, 1, 0, 1 + n6, 0, 0, 
      -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) + 
   (n1*j[p4, 1 + n1, n2, n3, 1, -1, 1 + n6, -1, 0, -1 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9) + (n1*j[p4, 1 + n1, n2, n3, 1, -1, 1 + n6, 0, -1, -1 + n9, 1, 
      1, 1, 1, 1])/(-1 + n9) + 
   (n1*j[p4, 1 + n1, n2, n3, 1, -1, 1 + n6, 0, 0, -1 + n9, 0, 1, 1, 1, 1])/
    (-1 + n9) - (n1*j[p4, 1 + n1, n2, n3, 1, -1, 1 + n6, 0, 0, -1 + n9, 1, 0, 
      1, 1, 1])/(-1 + n9) + (n1*j[p4, 1 + n1, n2, n3, 1, -1, 1 + n6, 0, 0, 
      -1 + n9, 1, 1, 1, 0, 1])/(-1 + n9) - 
   (n1*j[p4, 1 + n1, n2, n3, 1, -1, 1 + n6, 0, 0, -1 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9) + (n1*j[p4, 1 + n1, n2, n3, 1, 0, n6, 0, 0, -1 + n9, 1, 1, 1, 
      0, 1])/(-1 + n9) - (n1*j[p4, 1 + n1, n2, n3, 1, 0, n6, 0, 0, -1 + n9, 
      1, 1, 1, 1, 1])/(-1 + n9) - 
   (n1*j[p4, 1 + n1, n2, n3, 1, 0, 1 + n6, -1, 0, -2 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 1 && n13 == 1 && n14 == 1 && n4 == 1 && 
    n7 == 0 && n8 == 0 && n9 == 1 && n6 != 0 -> 
  ((-8 + 3*d - 2*n1 - n2 - 2*n3 - n5 - 9*n6 + 3*d*n6 - 2*n1*n6 - n2*n6 - 
      2*n3*n6 - n5*n6 - n6^2)*j[p4, -1 + n1, -1 + n2, n3, 1, n5, 2 + n6, 0, 
      0, 1, 1, 1, 1, 1, 1])/((-2 + d - 2*n1 - n5)*(-6 + 2*d - n2 - 2*n3 - 
      n6)) + (n5*j[p4, -1 + n1, -1 + n2, n3, 1, 1 + n5, 1 + n6, 0, 0, 1, 1, 
      1, 1, 1, 1])/(-2 + d - 2*n1 - n5) + 
   ((-8 + 3*d - 2*n1 - n2 - 2*n3 - n5 - 9*n6 + 3*d*n6 - 2*n1*n6 - n2*n6 - 
      2*n3*n6 - n5*n6 - n6^2)*j[p4, -1 + n1, n2, -1 + n3, 1, n5, 2 + n6, 0, 
      0, 1, 1, 1, 1, 1, 1])/((-2 + d - 2*n1 - n5)*(-6 + 2*d - n2 - 2*n3 - 
      n6)) + (n5*j[p4, -1 + n1, n2, -1 + n3, 1, 1 + n5, 1 + n6, 0, 0, 1, 1, 
      1, 1, 1, 1])/(-2 + d - 2*n1 - n5) + 
   j[p4, -1 + n1, n2, n3, 1, n5, 1 + n6, 0, 0, 0, 2, 1, 1, 1, 1]/
    (-6 + 2*d - n2 - 2*n3 - n6) + j[p4, -1 + n1, n2, n3, 1, n5, 1 + n6, 0, 0, 
     1, 1, 1, 0, 2, 1]/(2 - d + 2*n1 + n5) + 
   ((-16 + 11*d - 2*d^2 + 2*n1 - 31*n2 + 11*d*n2 - 4*n1*n2 - 4*n2^2 - 6*n3 + 
      2*d*n3 - 8*n2*n3 + n5 - 2*n2*n5 - 7*n6 + 2*d*n6 + 2*n1*n6 - 5*n2*n6 - 
      2*n3*n6 + n5*n6 - n6^2)*j[p4, -1 + n1, n2, n3, 1, n5, 1 + n6, 0, 0, 1, 
      1, 1, 1, 1, 1])/((-2 + d - 2*n1 - n5)*(-6 + 2*d - n2 - 2*n3 - n6)) - 
   j[p4, -1 + n1, n2, n3, 1, n5, 1 + n6, 0, 0, 1, 1, 1, 1, 2, 0]/
    (2*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   ((-8 + 3*d - 2*n1 - n2 - 2*n3 - n5 - n6)*j[p4, -1 + n1, n2, n3, 1, n5, 
      1 + n6, 0, 0, 1, 2, 1, 0, 1, 1])/((-2 + d - 2*n1 - n5)*
     (-6 + 2*d - n2 - 2*n3 - n6)) + ((8 - 3*d + 2*n1 + n2 + 2*n3 + n5 + n6)*
     j[p4, -1 + n1, n2, n3, 1, n5, 1 + n6, 0, 0, 1, 2, 1, 1, 0, 1])/
    ((-2 + d - 2*n1 - n5)*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   ((8 - 3*d + 2*n1 + n2 + 2*n3 + n5 + 9*n6 - 3*d*n6 + 2*n1*n6 + n2*n6 + 
      2*n3*n6 + n5*n6 + n6^2)*j[p4, -1 + n1, n2, n3, 1, n5, 2 + n6, -1, 0, 1, 
      1, 1, 1, 1, 1])/((-2 + d - 2*n1 - n5)*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   ((8 - 3*d + 2*n1 + n2 + 2*n3 + n5 + 9*n6 - 3*d*n6 + 2*n1*n6 + n2*n6 + 
      2*n3*n6 + n5*n6 + n6^2)*j[p4, -1 + n1, n2, n3, 1, n5, 2 + n6, 0, -1, 1, 
      1, 1, 1, 1, 1])/((-2 + d - 2*n1 - n5)*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   ((-8 + 3*d - 2*n1 - n2 - 2*n3 - n5 - 9*n6 + 3*d*n6 - 2*n1*n6 - n2*n6 - 
      2*n3*n6 - n5*n6 - n6^2)*j[p4, -1 + n1, n2, n3, 1, n5, 2 + n6, 0, 0, 1, 
      1, 1, 0, 1, 1])/((-2 + d - 2*n1 - n5)*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   ((8 - 3*d + 2*n1 + n2 + 2*n3 + n5 + 9*n6 - 3*d*n6 + 2*n1*n6 + n2*n6 + 
      2*n3*n6 + n5*n6 + n6^2)*j[p4, -1 + n1, n2, n3, 1, n5, 2 + n6, 0, 0, 1, 
      1, 1, 1, 0, 1])/((-2 + d - 2*n1 - n5)*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   ((8 - 3*d + 2*n1 + n2 + 2*n3 + n5 + 9*n6 - 3*d*n6 + 2*n1*n6 + n2*n6 + 
      2*n3*n6 + n5*n6 + n6^2)*j[p4, -1 + n1, n2, n3, 1, n5, 2 + n6, 0, 0, 1, 
      1, 1, 1, 1, 0])/((-2 + d - 2*n1 - n5)*(-6 + 2*d - n2 - 2*n3 - n6)) - 
   (n5*j[p4, -1 + n1, n2, n3, 1, 1 + n5, n6, 0, 0, 1, 1, 1, 1, 1, 1])/
    (-2 + d - 2*n1 - n5) - (n5*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 1 + n6, -1, 
      0, 1, 1, 1, 1, 1, 1])/(-2 + d - 2*n1 - n5) - 
   (n5*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 1 + n6, 0, -1, 1, 1, 1, 1, 1, 1])/
    (-2 + d - 2*n1 - n5) + ((14*n5 - 5*d*n5 + 2*n1*n5 + 2*n2*n5 + 4*n3*n5 + 
      n5^2 + 2*n5*n6)*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 1 + n6, 0, 0, 1, 1, 
      1, 1, 0, 1])/(2*(-2 + d - 2*n1 - n5)*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   ((-14*n5 + 5*d*n5 - 2*n1*n5 - 2*n2*n5 - 4*n3*n5 - n5^2 - 2*n5*n6)*
     j[p4, -1 + n1, n2, n3, 1, 1 + n5, 1 + n6, 0, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-2 + d - 2*n1 - n5)*(-6 + 2*d - n2 - 2*n3 - n6)) - 
   j[p4, -1 + n1, n2, n3, 2, n5, 1 + n6, 0, 0, 1, 1, 1, 1, 1, 0]/
    (2*(-6 + 2*d - n2 - 2*n3 - n6)) - 
   (n3*j[p4, -1 + n1, n2, 1 + n3, 0, n5, 1 + n6, 0, 0, 1, 1, 1, 1, 1, 1])/
    (2*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   (n3*j[p4, -1 + n1, n2, 1 + n3, 1, n5, 1 + n6, 0, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   ((-28*n2 + 10*d*n2 - 4*n1*n2 - 4*n2^2 - 8*n2*n3 - 2*n2*n5 - 4*n2*n6)*
     j[p4, -1 + n1, 1 + n2, -1 + n3, 1, n5, 1 + n6, 0, 0, 1, 1, 1, 1, 1, 1])/
    ((-2 + d - 2*n1 - n5)*(-6 + 2*d - n2 - 2*n3 - n6)) - 
   (2*n2*j[p4, -1 + n1, 1 + n2, n3, 1, n5, n6, 0, 0, 1, 1, 1, 1, 1, 1])/
    (-6 + 2*d - n2 - 2*n3 - n6) + 
   ((28*n2 - 10*d*n2 + 4*n1*n2 + 4*n2^2 + 8*n2*n3 + 2*n2*n5 + 4*n2*n6)*
     j[p4, -1 + n1, 1 + n2, n3, 1, n5, 1 + n6, -1, 0, 1, 1, 1, 1, 1, 1])/
    ((-2 + d - 2*n1 - n5)*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   ((28*n2 - 10*d*n2 + 4*n1*n2 + 4*n2^2 + 8*n2*n3 + 2*n2*n5 + 4*n2*n6)*
     j[p4, -1 + n1, 1 + n2, n3, 1, n5, 1 + n6, 0, -1, 1, 1, 1, 1, 1, 1])/
    ((-2 + d - 2*n1 - n5)*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   ((-30*n2 + 11*d*n2 - 6*n1*n2 - 4*n2^2 - 8*n2*n3 - 3*n2*n5 - 4*n2*n6)*
     j[p4, -1 + n1, 1 + n2, n3, 1, n5, 1 + n6, 0, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-2 + d - 2*n1 - n5)*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   ((30*n2 - 11*d*n2 + 6*n1*n2 + 4*n2^2 + 8*n2*n3 + 3*n2*n5 + 4*n2*n6)*
     j[p4, -1 + n1, 1 + n2, n3, 1, n5, 1 + n6, 0, 0, 1, 1, 1, 1, 0, 1])/
    ((-2 + d - 2*n1 - n5)*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   ((8 - 3*d + 2*n1 + n2 + 2*n3 + n5 + 9*n6 - 3*d*n6 + 2*n1*n6 + n2*n6 + 
      2*n3*n6 + n5*n6 + n6^2)*j[p4, n1, -1 + n2, n3, 1, -1 + n5, 2 + n6, 0, 
      0, 1, 1, 1, 1, 1, 1])/((-2 + d - 2*n1 - n5)*(-6 + 2*d - n2 - 2*n3 - 
      n6)) + j[p4, n1, -1 + n2, n3, 1, n5, 1 + n6, 0, 0, 0, 2, 1, 1, 1, 1]/
    (2*(-6 + 2*d - n2 - 2*n3 - n6)) - j[p4, n1, -1 + n2, n3, 1, n5, 1 + n6, 
     0, 0, 1, 1, 0, 2, 1, 1]/(2*(-6 + 2*d - n2 - 2*n3 - n6)) - 
   j[p4, n1, -1 + n2, n3, 1, n5, 1 + n6, 0, 0, 1, 1, 2, 0, 1, 1]/
    (2*(-6 + 2*d - n2 - 2*n3 - n6)) + ((8 - 3*d + 2*n1 + n2 + 2*n3 + n5 + n6)*
     j[p4, n1, -1 + n2, n3, 1, n5, 1 + n6, 0, 0, 1, 2, 1, 0, 1, 1])/
    ((-2 + d - 2*n1 - n5)*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   ((-8 + 3*d - 2*n1 - n2 - 2*n3 - n5 - n6)*j[p4, n1, -1 + n2, n3, 1, n5, 
      1 + n6, 0, 0, 1, 2, 1, 1, 0, 1])/((-2 + d - 2*n1 - n5)*
     (-6 + 2*d - n2 - 2*n3 - n6)) + 
   ((1 + n6)*j[p4, n1, -1 + n2, n3, 1, n5, 2 + n6, 0, 0, 0, 1, 1, 1, 1, 1])/
    (2*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   ((-1 - n6)*j[p4, n1, -1 + n2, n3, 1, n5, 2 + n6, 0, 0, 1, 0, 1, 1, 1, 1])/
    (2*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   ((8 - 3*d + 2*n1 + n2 + 2*n3 + n5 + 9*n6 - 3*d*n6 + 2*n1*n6 + n2*n6 + 
      2*n3*n6 + n5*n6 + n6^2)*j[p4, n1, -1 + n2, n3, 1, n5, 2 + n6, 0, 0, 1, 
      1, 1, 0, 1, 1])/((-2 + d - 2*n1 - n5)*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   ((-8 + 3*d - 2*n1 - n2 - 2*n3 - n5 - 9*n6 + 3*d*n6 - 2*n1*n6 - n2*n6 - 
      2*n3*n6 - n5*n6 - n6^2)*j[p4, n1, -1 + n2, n3, 1, n5, 2 + n6, 0, 0, 1, 
      1, 1, 1, 0, 1])/((-2 + d - 2*n1 - n5)*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   ((-8 + 3*d - 2*n1 - n2 - 2*n3 - n5 - 9*n6 + 3*d*n6 - 2*n1*n6 - n2*n6 - 
      2*n3*n6 - n5*n6 - n6^2)*j[p4, n1, -1 + n2, n3, 1, n5, 2 + n6, 0, 0, 1, 
      1, 1, 1, 1, 0])/((-2 + d - 2*n1 - n5)*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   ((8 - 3*d + 2*n1 + n2 + 2*n3 + n5 + 9*n6 - 3*d*n6 + 2*n1*n6 + n2*n6 + 
      2*n3*n6 + n5*n6 + n6^2)*j[p4, n1, -1 + n2, n3, 1, n5, 2 + n6, 0, 0, 1, 
      1, 1, 1, 1, 1])/((-2 + d - 2*n1 - n5)*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   (n5*j[p4, n1, -1 + n2, n3, 1, 1 + n5, 1 + n6, 0, 0, 1, 1, 1, 1, 0, 1])/
    (-2 + d - 2*n1 - n5) - (n5*j[p4, n1, -1 + n2, n3, 1, 1 + n5, 1 + n6, 0, 
      0, 1, 1, 1, 1, 1, 0])/(-2 + d - 2*n1 - n5) - 
   (n5*j[p4, n1, -1 + n2, n3, 1, 1 + n5, 1 + n6, 0, 0, 1, 1, 1, 1, 1, 1])/
    (-2 + d - 2*n1 - n5) + j[p4, n1, -1 + n2, n3, 2, n5, 1 + n6, 0, 0, 1, 1, 
     1, 1, 1, 0]/(2*(-6 + 2*d - n2 - 2*n3 - n6)) - 
   (n3*j[p4, n1, -1 + n2, 1 + n3, 0, n5, 1 + n6, 0, 0, 1, 1, 1, 1, 1, 1])/
    (2*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   (n3*j[p4, n1, -1 + n2, 1 + n3, 1, n5, 1 + n6, 0, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   ((8 - 3*d + 2*n1 + n2 + 2*n3 + n5 + 9*n6 - 3*d*n6 + 2*n1*n6 + n2*n6 + 
      2*n3*n6 + n5*n6 + n6^2)*j[p4, n1, n2, -1 + n3, 1, -1 + n5, 2 + n6, 0, 
      0, 1, 1, 1, 1, 1, 1])/((-2 + d - 2*n1 - n5)*(-6 + 2*d - n2 - 2*n3 - 
      n6)) + (3*j[p4, n1, n2, -1 + n3, 1, n5, 1 + n6, 0, 0, 0, 2, 1, 1, 1, 
      1])/(2*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   ((3 - d + n3)*j[p4, n1, n2, -1 + n3, 1, n5, 1 + n6, 0, 0, 1, 1, 1, 1, 1, 
      1])/(-6 + 2*d - n2 - 2*n3 - n6) + 
   ((-14 + 5*d - 2*n1 - 2*n2 - 4*n3 - n5 - 16*n6 + 5*d*n6 - 2*n1*n6 - 
      2*n2*n6 - 4*n3*n6 - n5*n6 - 2*n6^2)*j[p4, n1, n2, -1 + n3, 1, n5, 
      2 + n6, 0, 0, 0, 1, 1, 1, 1, 1])/(2*(-2 + d - 2*n1 - n5)*
     (-6 + 2*d - n2 - 2*n3 - n6)) + 
   ((14 - 5*d + 2*n1 + 2*n2 + 4*n3 + n5 + 16*n6 - 5*d*n6 + 2*n1*n6 + 
      2*n2*n6 + 4*n3*n6 + n5*n6 + 2*n6^2)*j[p4, n1, n2, -1 + n3, 1, n5, 
      2 + n6, 0, 0, 1, 0, 1, 1, 1, 1])/(2*(-2 + d - 2*n1 - n5)*
     (-6 + 2*d - n2 - 2*n3 - n6)) - 
   (n5*j[p4, n1, n2, -1 + n3, 1, 1 + n5, 1 + n6, 0, 0, 0, 1, 1, 1, 1, 1])/
    (-2 + d - 2*n1 - n5) + j[p4, n1, n2, -1 + n3, 2, n5, 1 + n6, 0, 0, 0, 1, 
     1, 1, 1, 1]/(2*(-6 + 2*d - n2 - 2*n3 - n6)) - 
   j[p4, n1, n2, -1 + n3, 2, n5, 1 + n6, 0, 0, 1, 0, 1, 1, 1, 1]/
    (2*(-6 + 2*d - n2 - 2*n3 - n6)) + j[p4, n1, n2, -1 + n3, 2, n5, 1 + n6, 
     0, 0, 1, 1, 0, 1, 1, 1]/(2*(-6 + 2*d - n2 - 2*n3 - n6)) - 
   (3*n3*j[p4, n1, n2, n3, 0, n5, 1 + n6, 0, 0, 1, 1, 1, 1, 1, 1])/
    (2*(-6 + 2*d - n2 - 2*n3 - n6)) - j[p4, n1, n2, n3, 0, n5, 1 + n6, 0, 0, 
     1, 1, 1, 2, 1, 1]/(2*(-6 + 2*d - n2 - 2*n3 - n6)) - 
   j[p4, n1, n2, n3, 0, n5, 1 + n6, 0, 0, 1, 1, 2, 1, 1, 1]/
    (2*(-6 + 2*d - n2 - 2*n3 - n6)) + j[p4, n1, n2, n3, 1, -1 + n5, 1 + n6, 
     0, 0, 1, 1, 0, 2, 1, 1]/(2*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   ((9 - 3*d + n1 + n2 + 2*n3 + n5 + 2*n6)*j[p4, n1, n2, n3, 1, -1 + n5, 
      1 + n6, 0, 0, 1, 1, 1, 1, 1, 1])/(-6 + 2*d - n2 - 2*n3 - n6) + 
   j[p4, n1, n2, n3, 1, -1 + n5, 1 + n6, 0, 0, 1, 1, 2, 0, 1, 1]/
    (2*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   ((-8 + 3*d - 2*n1 - n2 - 2*n3 - n5 - 9*n6 + 3*d*n6 - 2*n1*n6 - n2*n6 - 
      2*n3*n6 - n5*n6 - n6^2)*j[p4, n1, n2, n3, 1, -1 + n5, 2 + n6, -1, 0, 1, 
      1, 1, 1, 1, 1])/((-2 + d - 2*n1 - n5)*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   ((-8 + 3*d - 2*n1 - n2 - 2*n3 - n5 - 9*n6 + 3*d*n6 - 2*n1*n6 - n2*n6 - 
      2*n3*n6 - n5*n6 - n6^2)*j[p4, n1, n2, n3, 1, -1 + n5, 2 + n6, 0, -1, 1, 
      1, 1, 1, 1, 1])/((-2 + d - 2*n1 - n5)*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   ((-1 - n6)*j[p4, n1, n2, n3, 1, -1 + n5, 2 + n6, 0, 0, 0, 1, 1, 1, 1, 1])/
    (-6 + 2*d - n2 - 2*n3 - n6) + 
   ((1 + n6)*j[p4, n1, n2, n3, 1, -1 + n5, 2 + n6, 0, 0, 1, 0, 1, 1, 1, 1])/
    (-6 + 2*d - n2 - 2*n3 - n6) + 
   ((-8 + 3*d - 2*n1 - n2 - 2*n3 - n5 - 9*n6 + 3*d*n6 - 2*n1*n6 - n2*n6 - 
      2*n3*n6 - n5*n6 - n6^2)*j[p4, n1, n2, n3, 1, -1 + n5, 2 + n6, 0, 0, 1, 
      1, 1, 1, 1, 1])/((-2 + d - 2*n1 - n5)*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   j[p4, n1, n2, n3, 1, n5, n6, 0, 0, 1, 1, 0, 2, 1, 1]/
    (2*(-6 + 2*d - n2 - 2*n3 - n6)) + j[p4, n1, n2, n3, 1, n5, n6, 0, 0, 1, 
     1, 2, 0, 1, 1]/(2*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   (3*j[p4, n1, n2, n3, 1, n5, n6, 0, 0, 1, 2, 1, 0, 1, 1])/
    (2*(-6 + 2*d - n2 - 2*n3 - n6)) - 
   (3*j[p4, n1, n2, n3, 1, n5, n6, 0, 0, 1, 2, 1, 1, 0, 1])/
    (2*(-6 + 2*d - n2 - 2*n3 - n6)) - 
   (3*j[p4, n1, n2, n3, 1, n5, 1 + n6, -1, 0, 0, 2, 1, 1, 1, 1])/
    (2*(-6 + 2*d - n2 - 2*n3 - n6)) + j[p4, n1, n2, n3, 1, n5, 1 + n6, -1, 0, 
     1, 1, 0, 2, 1, 1]/(2*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   j[p4, n1, n2, n3, 1, n5, 1 + n6, -1, 0, 1, 1, 2, 0, 1, 1]/
    (2*(-6 + 2*d - n2 - 2*n3 - n6)) - 
   (3*j[p4, n1, n2, n3, 1, n5, 1 + n6, 0, -1, 0, 2, 1, 1, 1, 1])/
    (2*(-6 + 2*d - n2 - 2*n3 - n6)) + j[p4, n1, n2, n3, 1, n5, 1 + n6, 0, -1, 
     1, 1, 0, 2, 1, 1]/(2*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   j[p4, n1, n2, n3, 1, n5, 1 + n6, 0, -1, 1, 1, 2, 0, 1, 1]/
    (2*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   ((-n1 + n5 - n6)*j[p4, n1, n2, n3, 1, n5, 1 + n6, 0, 0, 0, 1, 1, 1, 1, 1])/
    (2*(-6 + 2*d - n2 - 2*n3 - n6)) - j[p4, n1, n2, n3, 1, n5, 1 + n6, 0, 0, 
     0, 1, 2, 1, 1, 1]/(2*(-6 + 2*d - n2 - 2*n3 - n6)) - 
   (3*j[p4, n1, n2, n3, 1, n5, 1 + n6, 0, 0, 0, 2, 1, 1, 1, 1])/
    (2*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   ((-4 + 2*d + 8*n1 - 4*d*n1 + 2*n2 - d*n2 + 4*n1*n2 + 2*n3 - d*n3 + 
      6*n1*n3 - 2*n5 + n2*n5 + n3*n5 - 2*n6 + d*n6 - n5*n6)*
     j[p4, n1, n2, n3, 1, n5, 1 + n6, 0, 0, 1, 0, 1, 1, 1, 1])/
    (2*(-2 + d - 2*n1 - n5)*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   ((-2 + n3)*j[p4, n1, n2, n3, 1, n5, 1 + n6, 0, 0, 1, 1, 0, 1, 1, 1])/
    (2*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   ((-30 + 11*d - 6*n1 + 24*n2 - 10*d*n2 + 4*n1*n2 + 4*n2^2 - 4*n3 - 2*d*n3 + 
      4*n1*n3 + 8*n2*n3 - 3*n5 + 2*n2*n5 + 2*n3*n5 - 10*n6 + 3*d*n6 - 
      6*n1*n6 + 4*n2*n6 - 3*n5*n6)*j[p4, n1, n2, n3, 1, n5, 1 + n6, 0, 0, 1, 
      1, 1, 0, 1, 1])/(2*(-2 + d - 2*n1 - n5)*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   j[p4, n1, n2, n3, 1, n5, 1 + n6, 0, 0, 1, 1, 1, 0, 2, 1]/
    (-2 + d - 2*n1 - n5) + ((48 - 18*d + 26*n1 - 5*d*n1 + 2*n1^2 - 50*n2 + 
      20*d*n2 - 6*n1*n2 - 8*n2^2 + 12*n3 + 4*n1*n3 - 16*n2*n3 + 3*d*n5 - 
      5*n1*n5 - 4*n2*n5 - 3*n5^2 + 12*n6 - 3*d*n6 + 8*n1*n6 - 8*n2*n6 + 
      3*n5*n6)*j[p4, n1, n2, n3, 1, n5, 1 + n6, 0, 0, 1, 1, 1, 1, 0, 1])/
    (2*(-2 + d - 2*n1 - n5)*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   ((3*n3 - 3*n5 - 3*n6)*j[p4, n1, n2, n3, 1, n5, 1 + n6, 0, 0, 1, 1, 1, 1, 
      1, 0])/(2*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   ((48 - 36*d + 7*d^2 - 12*n1 + 2*d*n1 + 62*n2 - 22*d*n2 + 4*n1*n2 + 
      8*n2^2 + 16*n3 - 6*d*n3 - 4*n1*n3 + 16*n2*n3 + 10*n5 - 5*d*n5 + 
      4*n1*n5 + 4*n2*n5 + 2*n3*n5 + 2*n5^2 + 14*n6 - 4*d*n6 - 8*n1*n6 + 
      10*n2*n6 + 4*n3*n6 - 2*n5*n6 + 2*n6^2)*j[p4, n1, n2, n3, 1, n5, 1 + n6, 
      0, 0, 1, 1, 1, 1, 1, 1])/(2*(-2 + d - 2*n1 - n5)*
     (-6 + 2*d - n2 - 2*n3 - n6)) + j[p4, n1, n2, n3, 1, n5, 1 + n6, 0, 0, 1, 
     1, 1, 1, 2, 0]/(2*(-6 + 2*d - n2 - 2*n3 - n6)) - 
   j[p4, n1, n2, n3, 1, n5, 1 + n6, 0, 0, 1, 1, 1, 2, 1, 0]/
    (2*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   ((14 - 5*d + 2*n1 + 2*n2 + 4*n3 + n5 + 16*n6 - 5*d*n6 + 2*n1*n6 + 
      2*n2*n6 + 4*n3*n6 + n5*n6 + 2*n6^2)*j[p4, n1, n2, n3, 1, n5, 2 + n6, 
      -1, 0, 0, 1, 1, 1, 1, 1])/(2*(-2 + d - 2*n1 - n5)*
     (-6 + 2*d - n2 - 2*n3 - n6)) + 
   ((-14 + 5*d - 2*n1 - 2*n2 - 4*n3 - n5 - 16*n6 + 5*d*n6 - 2*n1*n6 - 
      2*n2*n6 - 4*n3*n6 - n5*n6 - 2*n6^2)*j[p4, n1, n2, n3, 1, n5, 2 + n6, 
      -1, 0, 1, 0, 1, 1, 1, 1])/(2*(-2 + d - 2*n1 - n5)*
     (-6 + 2*d - n2 - 2*n3 - n6)) + 
   ((14 - 5*d + 2*n1 + 2*n2 + 4*n3 + n5 + 16*n6 - 5*d*n6 + 2*n1*n6 + 
      2*n2*n6 + 4*n3*n6 + n5*n6 + 2*n6^2)*j[p4, n1, n2, n3, 1, n5, 2 + n6, 0, 
      -1, 0, 1, 1, 1, 1, 1])/(2*(-2 + d - 2*n1 - n5)*
     (-6 + 2*d - n2 - 2*n3 - n6)) + 
   ((-14 + 5*d - 2*n1 - 2*n2 - 4*n3 - n5 - 16*n6 + 5*d*n6 - 2*n1*n6 - 
      2*n2*n6 - 4*n3*n6 - n5*n6 - 2*n6^2)*j[p4, n1, n2, n3, 1, n5, 2 + n6, 0, 
      -1, 1, 0, 1, 1, 1, 1])/(2*(-2 + d - 2*n1 - n5)*
     (-6 + 2*d - n2 - 2*n3 - n6)) + 
   (n5*j[p4, n1, n2, n3, 1, 1 + n5, n6, 0, 0, 1, 1, 1, 1, 1, 1])/
    (-2 + d - 2*n1 - n5) + (n5*j[p4, n1, n2, n3, 1, 1 + n5, 1 + n6, -1, 0, 0, 
      1, 1, 1, 1, 1])/(-2 + d - 2*n1 - n5) + 
   (n5*j[p4, n1, n2, n3, 1, 1 + n5, 1 + n6, 0, -1, 0, 1, 1, 1, 1, 1])/
    (-2 + d - 2*n1 - n5) - j[p4, n1, n2, n3, 2, -1 + n5, 1 + n6, 0, 0, 1, 1, 
     1, 1, 1, 0]/(-6 + 2*d - n2 - 2*n3 - n6) - 
   j[p4, n1, n2, n3, 2, n5, n6, 0, 0, 1, 1, 1, 1, 1, 0]/
    (-6 + 2*d - n2 - 2*n3 - n6) + j[p4, n1, n2, n3, 2, n5, 1 + n6, -1, 0, 1, 
     1, 1, 1, 1, 0]/(2*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   j[p4, n1, n2, n3, 2, n5, 1 + n6, 0, -1, 1, 1, 1, 1, 1, 0]/
    (2*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   (3*n3*j[p4, n1, n2, 1 + n3, 0, n5, 1 + n6, -1, 0, 1, 1, 1, 1, 1, 1])/
    (2*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   (3*n3*j[p4, n1, n2, 1 + n3, 0, n5, 1 + n6, 0, -1, 1, 1, 1, 1, 1, 1])/
    (2*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   (n3*j[p4, n1, n2, 1 + n3, 0, n5, 1 + n6, 0, 0, 1, 1, 1, 1, 1, 1])/
    (2*(-6 + 2*d - n2 - 2*n3 - n6)) - 
   (3*n3*j[p4, n1, n2, 1 + n3, 1, n5, 1 + n6, -1, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-6 + 2*d - n2 - 2*n3 - n6)) - 
   (3*n3*j[p4, n1, n2, 1 + n3, 1, n5, 1 + n6, 0, -1, 1, 1, 1, 1, 1, 0])/
    (2*(-6 + 2*d - n2 - 2*n3 - n6)) - 
   (n3*j[p4, n1, n2, 1 + n3, 1, n5, 1 + n6, 0, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   ((26*n2 - 9*d*n2 + 2*n1*n2 + 4*n2^2 + 8*n2*n3 + n2*n5 + 4*n2*n6)*
     j[p4, n1, 1 + n2, -1 + n3, 1, n5, 1 + n6, 0, 0, 1, 0, 1, 1, 1, 1])/
    (2*(-2 + d - 2*n1 - n5)*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   (3*n2*j[p4, n1, 1 + n2, n3, 1, -1 + n5, 1 + n6, 0, 0, 1, 0, 1, 1, 1, 1])/
    (2*(-6 + 2*d - n2 - 2*n3 - n6)) - 
   (3*n2*j[p4, n1, 1 + n2, n3, 1, -1 + n5, 1 + n6, 0, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   (3*n2*j[p4, n1, 1 + n2, n3, 1, -1 + n5, 1 + n6, 0, 0, 1, 1, 1, 1, 0, 1])/
    (-6 + 2*d - n2 - 2*n3 - n6) - 
   (2*n2*j[p4, n1, 1 + n2, n3, 1, -1 + n5, 1 + n6, 0, 0, 1, 1, 1, 1, 1, 1])/
    (-6 + 2*d - n2 - 2*n3 - n6) + 
   (n2*j[p4, n1, 1 + n2, n3, 1, n5, n6, 0, 0, 1, 0, 1, 1, 1, 1])/
    (2*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   (3*n2*j[p4, n1, 1 + n2, n3, 1, n5, n6, 0, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-6 + 2*d - n2 - 2*n3 - n6)) - 
   (3*n2*j[p4, n1, 1 + n2, n3, 1, n5, n6, 0, 0, 1, 1, 1, 1, 0, 1])/
    (-6 + 2*d - n2 - 2*n3 - n6) + 
   (2*n2*j[p4, n1, 1 + n2, n3, 1, n5, n6, 0, 0, 1, 1, 1, 1, 1, 1])/
    (-6 + 2*d - n2 - 2*n3 - n6) + 
   ((-26*n2 + 9*d*n2 - 2*n1*n2 - 4*n2^2 - 8*n2*n3 - n2*n5 - 4*n2*n6)*
     j[p4, n1, 1 + n2, n3, 1, n5, 1 + n6, -1, 0, 1, 0, 1, 1, 1, 1])/
    (2*(-2 + d - 2*n1 - n5)*(-6 + 2*d - n2 - 2*n3 - n6)) + 
   ((-26*n2 + 9*d*n2 - 2*n1*n2 - 4*n2^2 - 8*n2*n3 - n2*n5 - 4*n2*n6)*
     j[p4, n1, 1 + n2, n3, 1, n5, 1 + n6, 0, -1, 1, 0, 1, 1, 1, 1])/
    (2*(-2 + d - 2*n1 - n5)*(-6 + 2*d - n2 - 2*n3 - n6)) - 
   (n1*j[p4, 1 + n1, -1 + n2, n3, 1, n5, 1 + n6, 0, 0, 1, 1, 1, 1, 0, 1])/
    (2 - d + 2*n1 + n5) + (2*n1*j[p4, 1 + n1, -1 + n2, n3, 1, n5, 1 + n6, 0, 
      0, 1, 1, 1, 1, 1, 1])/(2 - d + 2*n1 + n5) + 
   (3*n1*j[p4, 1 + n1, n2, n3, 1, -1 + n5, 1 + n6, 0, 0, 1, 1, 1, 1, 0, 1])/
    (2*(-6 + 2*d - n2 - 2*n3 - n6)) - 
   (2*n1*j[p4, 1 + n1, n2, n3, 1, -1 + n5, 1 + n6, 0, 0, 1, 1, 1, 1, 1, 1])/
    (-6 + 2*d - n2 - 2*n3 - n6) + 
   (n1*j[p4, 1 + n1, n2, n3, 1, n5, 1 + n6, 0, 0, 0, 1, 1, 1, 1, 1])/
    (2*(-6 + 2*d - n2 - 2*n3 - n6)) - 
   (n1*j[p4, 1 + n1, n2, n3, 1, n5, 1 + n6, 0, 0, 1, 0, 1, 1, 1, 1])/
    (2 - d + 2*n1 + n5), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 1 && n13 == 1 && n14 == 1 && n4 == 1 && 
    n6 == 0 && n8 == -1 && n9 == 1 && n7 != 0 -> 
  ((8 - 3*d + n1 + n2 + n3 + 2*n5 + 2*n7)*j[p4, -1 + n1, -1 + n2, n3, 1, n5, 
      0, 1 + n7, 0, 1, 1, 1, 1, 1, 1])/((-5 + 2*d - n2 - 2*n3 - n7)*
     (-2 + d - n1 - n5 - n7)) + 
   ((-8 + 3*d - n1 - n2 - n3 - 2*n5 - 10*n7 + 3*d*n7 - n1*n7 - n2*n7 - 
      n3*n7 - 2*n5*n7 - 2*n7^2)*j[p4, -1 + n1, n2, -1 + n3, 1, n5, 0, 2 + n7, 
      -1, 1, 1, 1, 1, 1, 1])/((-5 + 2*d - n2 - 2*n3 - n7)*
     (-2 + d - n1 - n5 - n7)) + ((13 - 5*d + n1 + 2*n2 + 3*n3 + 2*n5 + 3*n7)*
     j[p4, -1 + n1, n2, n3, 0, n5, 0, 1 + n7, 0, 1, 1, 1, 1, 1, 1])/
    (2*(-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((8 - 3*d + n1 + n2 + n3 + 2*n5 + 10*n7 - 3*d*n7 + n1*n7 + n2*n7 + n3*n7 + 
      2*n5*n7 + 2*n7^2)*j[p4, -1 + n1, n2, n3, 0, n5, 0, 2 + n7, -1, 1, 1, 1, 
      1, 1, 1])/((-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((-8 + 3*d - n1 - n2 - n3 - 2*n5 - 2*n7)*j[p4, -1 + n1, n2, n3, 1, 
      -1 + n5, 0, 1 + n7, 0, 1, 1, 1, 1, 1, 1])/((-5 + 2*d - n2 - 2*n3 - n7)*
     (-2 + d - n1 - n5 - n7)) + 
   ((-8 + 3*d - n1 - n2 - n3 - 2*n5 - 10*n7 + 3*d*n7 - n1*n7 - n2*n7 - 
      n3*n7 - 2*n5*n7 - 2*n7^2)*j[p4, -1 + n1, n2, n3, 1, -1 + n5, 0, 2 + n7, 
      -1, 1, 1, 1, 1, 1, 1])/((-5 + 2*d - n2 - 2*n3 - n7)*
     (-2 + d - n1 - n5 - n7)) + ((-8 + 3*d - n1 - n2 - n3 - 2*n5 - 2*n7)*
     j[p4, -1 + n1, n2, n3, 1, n5, -1, 1 + n7, 0, 1, 1, 1, 1, 1, 1])/
    ((-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((-8 + 3*d - n1 - n2 - n3 - 2*n5 - 2*n7)*j[p4, -1 + n1, n2, n3, 1, n5, 0, 
      n7, 0, 1, 1, 1, 1, 1, 1])/((-5 + 2*d - n2 - 2*n3 - n7)*
     (-2 + d - n1 - n5 - n7)) + ((-8 + 3*d - n1 - n2 - n3 - 2*n5 - 2*n7)*
     j[p4, -1 + n1, n2, n3, 1, n5, 0, 1 + n7, -1, 0, 2, 1, 1, 1, 1])/
    ((-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((-33 + 23*d - 4*d^2 - 6*n1 + 2*d*n1 - 27*n2 + 10*d*n2 - 3*n1*n2 - 
      3*n2^2 - 16*n3 + 6*d*n3 - 2*n1*n3 - 5*n2*n3 - 2*n3^2 - 7*n5 + 2*d*n5 - 
      5*n2*n5 - 2*n3*n5 - 17*n7 + 6*d*n7 - n1*n7 - 7*n2*n7 - 5*n3*n7 - 
      n5*n7 - 2*n7^2)*j[p4, -1 + n1, n2, n3, 1, n5, 0, 1 + n7, -1, 1, 1, 1, 
      1, 1, 1])/((-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((13 - 5*d + n1 + 2*n2 + 3*n3 + 2*n5 + 3*n7)*j[p4, -1 + n1, n2, n3, 1, n5, 
      0, 1 + n7, -1, 1, 1, 1, 1, 2, 0])/(2*(-5 + 2*d - n2 - 2*n3 - n7)*
     (-2 + d - n1 - n5 - n7)) - j[p4, -1 + n1, n2, n3, 1, n5, 0, 1 + n7, -1, 
     1, 2, 0, 1, 1, 1]/(-2 + d - n1 - n5 - n7) + 
   ((-8 + 3*d - n1 - n2 - n3 - 2*n5 - 2*n7)*j[p4, -1 + n1, n2, n3, 1, n5, 0, 
      1 + n7, -1, 1, 2, 1, 0, 1, 1])/((-5 + 2*d - n2 - 2*n3 - n7)*
     (-2 + d - n1 - n5 - n7)) + ((8 - 3*d + n1 + n2 + n3 + 2*n5 + 2*n7)*
     j[p4, -1 + n1, n2, n3, 1, n5, 0, 1 + n7, -1, 1, 2, 1, 1, 0, 1])/
    ((-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((3 - d + n1 - n3 + 2*n5 + n7)*j[p4, -1 + n1, n2, n3, 1, n5, 0, 1 + n7, 0, 
      1, 1, 1, 0, 1, 1])/(2*(-5 + 2*d - n2 - 2*n3 - n7)*
     (-2 + d - n1 - n5 - n7)) + ((-3 + d - n1 + n3 - 2*n5 - n7)*
     j[p4, -1 + n1, n2, n3, 1, n5, 0, 1 + n7, 0, 1, 1, 1, 1, 0, 1])/
    (2*(-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((8 - 3*d + n1 + n2 + n3 + 2*n5 + 10*n7 - 3*d*n7 + n1*n7 + n2*n7 + n3*n7 + 
      2*n5*n7 + 2*n7^2)*j[p4, -1 + n1, n2, n3, 1, n5, 0, 2 + n7, -1, 1, 1, 1, 
      1, 0, 1])/((-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((-3*n5 + d*n5 - n1*n5 + n3*n5 - 2*n5^2 - n5*n7)*
     j[p4, -1 + n1, n2, n3, 1, 1 + n5, 0, 1 + n7, -1, 1, 1, 1, 1, 0, 1])/
    (2*(-5 + 2*d - n2 - 2*n3 - n7)*(2 - d + n1 + n5 + n7)) + 
   ((3*n5 - d*n5 + n1*n5 - n3*n5 + 2*n5^2 + n5*n7)*j[p4, -1 + n1, n2, n3, 1, 
      1 + n5, 0, 1 + n7, -1, 1, 1, 1, 1, 1, 0])/
    (2*(-5 + 2*d - n2 - 2*n3 - n7)*(2 - d + n1 + n5 + n7)) + 
   ((13 - 5*d + n1 + 2*n2 + 3*n3 + 2*n5 + 3*n7)*j[p4, -1 + n1, n2, n3, 2, n5, 
      0, 1 + n7, -1, 1, 1, 1, 1, 1, 0])/(2*(-5 + 2*d - n2 - 2*n3 - n7)*
     (-2 + d - n1 - n5 - n7)) + 
   ((-3*n3 + d*n3 - n1*n3 + n3^2 - 2*n3*n5 - n3*n7)*
     j[p4, -1 + n1, n2, 1 + n3, 0, n5, 0, 1 + n7, -1, 1, 1, 1, 1, 1, 1])/
    (2*(-2 + d - n1 - n5 - n7)*(5 - 2*d + n2 + 2*n3 + n7)) + 
   ((3*n3 - d*n3 + n1*n3 - n3^2 + 2*n3*n5 + n3*n7)*j[p4, -1 + n1, n2, 1 + n3, 
      1, n5, 0, 1 + n7, -1, 1, 1, 1, 1, 1, 0])/(2*(-2 + d - n1 - n5 - n7)*
     (5 - 2*d + n2 + 2*n3 + n7)) + 
   ((16*n2 - 6*d*n2 + 2*n1*n2 + 2*n2^2 + 2*n2*n3 + 4*n2*n5 + 4*n2*n7)*
     j[p4, -1 + n1, 1 + n2, -1 + n3, 1, n5, 0, 1 + n7, -1, 1, 1, 1, 1, 1, 1])/
    ((-2 + d - n1 - n5 - n7)*(5 - 2*d + n2 + 2*n3 + n7)) + 
   ((-16*n2 + 6*d*n2 - 2*n1*n2 - 2*n2^2 - 2*n2*n3 - 4*n2*n5 - 4*n2*n7)*
     j[p4, -1 + n1, 1 + n2, n3, 1, n5, -1, 1 + n7, -1, 1, 1, 1, 1, 1, 1])/
    ((-2 + d - n1 - n5 - n7)*(5 - 2*d + n2 + 2*n3 + n7)) + 
   ((-6*n2 + 2*d*n2 - 2*n1*n2 + 2*n2*n3 - 4*n2*n5 - 2*n2*n7)*
     j[p4, -1 + n1, 1 + n2, n3, 1, n5, 0, n7, -1, 1, 1, 1, 1, 1, 1])/
    ((-2 + d - n1 - n5 - n7)*(5 - 2*d + n2 + 2*n3 + n7)) + 
   ((-16*n2 + 6*d*n2 - 2*n1*n2 - 2*n2^2 - 2*n2*n3 - 4*n2*n5 - 4*n2*n7)*
     j[p4, -1 + n1, 1 + n2, n3, 1, n5, 0, 1 + n7, -2, 1, 1, 1, 1, 1, 1])/
    ((-2 + d - n1 - n5 - n7)*(5 - 2*d + n2 + 2*n3 + n7)) + 
   ((19*n2 - 7*d*n2 + 3*n1*n2 + 2*n2^2 + n2*n3 + 6*n2*n5 + 5*n2*n7)*
     j[p4, -1 + n1, 1 + n2, n3, 1, n5, 0, 1 + n7, -1, 1, 1, 1, 0, 1, 1])/
    (2*(-2 + d - n1 - n5 - n7)*(5 - 2*d + n2 + 2*n3 + n7)) + 
   ((-19*n2 + 7*d*n2 - 3*n1*n2 - 2*n2^2 - n2*n3 - 6*n2*n5 - 5*n2*n7)*
     j[p4, -1 + n1, 1 + n2, n3, 1, n5, 0, 1 + n7, -1, 1, 1, 1, 1, 0, 1])/
    ((-2 + d - n1 - n5 - n7)*(5 - 2*d + n2 + 2*n3 + n7)) + 
   ((8 - 3*d + n1 + n2 + n3 + 2*n5 + 10*n7 - 3*d*n7 + n1*n7 + n2*n7 + n3*n7 + 
      2*n5*n7 + 2*n7^2)*j[p4, n1, -1 + n2, -1 + n3, 1, n5, 0, 2 + n7, -1, 1, 
      1, 1, 1, 1, 1])/((-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((3 - d + n1 - n3 + 2*n5 + 4*n7 - d*n7 + n1*n7 - n3*n7 + 2*n5*n7 + n7^2)*
     j[p4, n1, -1 + n2, n3, 0, n5, 0, 2 + n7, -1, 1, 1, 1, 1, 1, 1])/
    (2*(-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((-3 + d - n1 + n3 - 2*n5 - n7)*j[p4, n1, -1 + n2, n3, 1, n5, 0, 1 + n7, 
      -1, 0, 2, 1, 1, 1, 1])/(2*(-5 + 2*d - n2 - 2*n3 - n7)*
     (-2 + d - n1 - n5 - n7)) + ((3 - d + n1 - n3 + 2*n5 + n7)*
     j[p4, n1, -1 + n2, n3, 1, n5, 0, 1 + n7, -1, 1, 1, 0, 2, 1, 1])/
    (2*(-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((-5 + 2*d - n1 - n2 - n3 - n5 - 2*n7)*j[p4, n1, -1 + n2, n3, 1, n5, 0, 
      1 + n7, -1, 1, 1, 1, 1, 1, 1])/(-2 + d - n1 - n5 - n7) + 
   ((3 - d + n1 - n3 + 2*n5 + n7)*j[p4, n1, -1 + n2, n3, 1, n5, 0, 1 + n7, 
      -1, 1, 1, 2, 0, 1, 1])/(2*(-5 + 2*d - n2 - 2*n3 - n7)*
     (-2 + d - n1 - n5 - n7)) + j[p4, n1, -1 + n2, n3, 1, n5, 0, 1 + n7, -1, 
     1, 2, 0, 1, 1, 1]/(-2 + d - n1 - n5 - n7) + 
   ((8 - 3*d + n1 + n2 + n3 + 2*n5 + 2*n7)*j[p4, n1, -1 + n2, n3, 1, n5, 0, 
      1 + n7, -1, 1, 2, 1, 0, 1, 1])/((-5 + 2*d - n2 - 2*n3 - n7)*
     (-2 + d - n1 - n5 - n7)) + ((-8 + 3*d - n1 - n2 - n3 - 2*n5 - 2*n7)*
     j[p4, n1, -1 + n2, n3, 1, n5, 0, 1 + n7, -1, 1, 2, 1, 1, 0, 1])/
    ((-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((-3 + d - n1 + n3 - 2*n5 - n7)*j[p4, n1, -1 + n2, n3, 1, n5, 0, 1 + n7, 
      0, 1, 1, 0, 1, 1, 1])/(2*(-5 + 2*d - n2 - 2*n3 - n7)*
     (-2 + d - n1 - n5 - n7)) + ((-3 + d - n1 + n3 - 2*n5 - n7)*
     j[p4, n1, -1 + n2, n3, 1, n5, 0, 1 + n7, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((3 - d + n1 - n3 + 2*n5 + n7)*j[p4, n1, -1 + n2, n3, 1, n5, 0, 1 + n7, 0, 
      1, 1, 1, 1, 0, 1])/(2*(-5 + 2*d - n2 - 2*n3 - n7)*
     (-2 + d - n1 - n5 - n7)) + ((-8 + 3*d - n1 - n2 - n3 - 2*n5 - 2*n7)*
     j[p4, n1, -1 + n2, n3, 1, n5, 0, 1 + n7, 0, 1, 1, 1, 1, 1, 1])/
    ((-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((-13 + 5*d - n1 - 2*n2 - 3*n3 - 2*n5 - 16*n7 + 5*d*n7 - n1*n7 - 2*n2*n7 - 
      3*n3*n7 - 2*n5*n7 - 3*n7^2)*j[p4, n1, -1 + n2, n3, 1, n5, 0, 2 + n7, 
      -1, 1, 1, 1, 1, 0, 1])/(2*(5 - 2*d + n2 + 2*n3 + n7)*
     (2 - d + n1 + n5 + n7)) + ((-13 + 5*d - n1 - 2*n2 - 3*n3 - 2*n5 - 3*n7)*
     j[p4, n1, -1 + n2, n3, 2, n5, 0, 1 + n7, -1, 1, 1, 1, 1, 1, 0])/
    (2*(-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((-3*n3 + d*n3 - n1*n3 + n3^2 - 2*n3*n5 - n3*n7)*
     j[p4, n1, -1 + n2, 1 + n3, 0, n5, 0, 1 + n7, -1, 1, 1, 1, 1, 1, 1])/
    (2*(-2 + d - n1 - n5 - n7)*(5 - 2*d + n2 + 2*n3 + n7)) + 
   ((3*n3 - d*n3 + n1*n3 - n3^2 + 2*n3*n5 + n3*n7)*j[p4, n1, -1 + n2, 1 + n3, 
      1, n5, 0, 1 + n7, -1, 1, 1, 1, 1, 1, 0])/(2*(-2 + d - n1 - n5 - n7)*
     (5 - 2*d + n2 + 2*n3 + n7)) + 
   ((19 - 7*d + 3*n1 + 2*n2 + n3 + 6*n5 + 24*n7 - 7*d*n7 + 3*n1*n7 + 
      2*n2*n7 + n3*n7 + 6*n5*n7 + 5*n7^2)*j[p4, n1, n2, -1 + n3, 0, n5, 0, 
      2 + n7, -1, 1, 1, 1, 1, 1, 1])/(2*(5 - 2*d + n2 + 2*n3 + n7)*
     (2 - d + n1 + n5 + n7)) + 
   ((-8 + 3*d - n1 - n2 - n3 - 2*n5 - 10*n7 + 3*d*n7 - n1*n7 - n2*n7 - 
      n3*n7 - 2*n5*n7 - 2*n7^2)*j[p4, n1, n2, -1 + n3, 1, -1 + n5, 0, 2 + n7, 
      -1, 1, 1, 1, 1, 1, 1])/((-5 + 2*d - n2 - 2*n3 - n7)*
     (-2 + d - n1 - n5 - n7)) + 
   ((-8 + 3*d - n1 - n2 - n3 - 2*n5 - 10*n7 + 3*d*n7 - n1*n7 - n2*n7 - 
      n3*n7 - 2*n5*n7 - 2*n7^2)*j[p4, n1, n2, -1 + n3, 1, n5, -1, 2 + n7, -1, 
      1, 1, 1, 1, 1, 1])/((-5 + 2*d - n2 - 2*n3 - n7)*
     (-2 + d - n1 - n5 - n7)) + ((-19 + 7*d - 3*n1 - 2*n2 - n3 - 6*n5 - 5*n7)*
     j[p4, n1, n2, -1 + n3, 1, n5, 0, 1 + n7, -1, 0, 2, 1, 1, 1, 1])/
    (2*(-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((16 - 14*d + 3*d^2 + 2*n1 - d*n1 + 10*n2 - 4*d*n2 + n1*n2 + n2^2 + 
      10*n3 - 4*d*n3 + n1*n3 + 2*n2*n3 + n3^2 + 4*n5 - 2*d*n5 + 2*n2*n5 + 
      2*n3*n5 + 4*n7 - 2*d*n7 + 2*n2*n7 + 2*n3*n7)*j[p4, n1, n2, -1 + n3, 1, 
      n5, 0, 1 + n7, -1, 1, 1, 1, 1, 1, 1])/((-5 + 2*d - n2 - 2*n3 - n7)*
     (-2 + d - n1 - n5 - n7)) + 
   ((13 - 5*d + n1 + 2*n2 + 3*n3 + 2*n5 + 16*n7 - 5*d*n7 + n1*n7 + 2*n2*n7 + 
      3*n3*n7 + 2*n5*n7 + 3*n7^2)*j[p4, n1, n2, -1 + n3, 1, n5, 0, 2 + n7, 
      -1, 1, 0, 1, 1, 1, 1])/(2*(5 - 2*d + n2 + 2*n3 + n7)*
     (2 - d + n1 + n5 + n7)) + 
   ((-13 + 5*d - n1 - 2*n2 - 3*n3 - 2*n5 - 16*n7 + 5*d*n7 - n1*n7 - 2*n2*n7 - 
      3*n3*n7 - 2*n5*n7 - 3*n7^2)*j[p4, n1, n2, -1 + n3, 1, n5, 0, 2 + n7, 
      -1, 1, 1, 0, 1, 1, 1])/(2*(5 - 2*d + n2 + 2*n3 + n7)*
     (2 - d + n1 + n5 + n7)) + ((-13 + 5*d - n1 - 2*n2 - 3*n3 - 2*n5 - 3*n7)*
     j[p4, n1, n2, -1 + n3, 2, n5, 0, 1 + n7, -1, 0, 1, 1, 1, 1, 1])/
    (2*(-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((13 - 5*d + n1 + 2*n2 + 3*n3 + 2*n5 + 3*n7)*j[p4, n1, n2, -1 + n3, 2, n5, 
      0, 1 + n7, -1, 1, 0, 1, 1, 1, 1])/(2*(-5 + 2*d - n2 - 2*n3 - n7)*
     (-2 + d - n1 - n5 - n7)) + ((-13 + 5*d - n1 - 2*n2 - 3*n3 - 2*n5 - 3*n7)*
     j[p4, n1, n2, -1 + n3, 2, n5, 0, 1 + n7, -1, 1, 1, 0, 1, 1, 1])/
    (2*(-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((-19 + 7*d - 3*n1 - 2*n2 + 18*n3 - 7*d*n3 + 3*n1*n3 + 2*n2*n3 + n3^2 - 
      16*n5 + 4*d*n5 - 2*n2*n5 + 2*n3*n5 - 14*n7 + 3*d*n7 - 3*n1*n7 + 
      8*n3*n7 - 8*n5*n7 - 3*n7^2)*j[p4, n1, n2, n3, 0, n5, 0, 1 + n7, -1, 1, 
      1, 1, 1, 1, 1])/(2*(-5 + 2*d - n2 - 2*n3 - n7)*
     (-2 + d - n1 - n5 - n7)) + ((3 - d + n1 - n3 + 2*n5 + n7)*
     j[p4, n1, n2, n3, 0, n5, 0, 1 + n7, -1, 1, 1, 1, 2, 1, 1])/
    (2*(-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((3 - d + n1 - n3 + 2*n5 + n7)*j[p4, n1, n2, n3, 0, n5, 0, 1 + n7, -1, 1, 
      1, 2, 1, 1, 1])/(2*(-5 + 2*d - n2 - 2*n3 - n7)*
     (-2 + d - n1 - n5 - n7)) + ((-8 + 3*d - n1 - n2 - n3 - 2*n5 - 2*n7)*
     j[p4, n1, n2, n3, 0, n5, 0, 1 + n7, 0, 1, 1, 1, 1, 1, 1])/
    ((-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((-19 + 7*d - 3*n1 - 2*n2 - n3 - 6*n5 - 24*n7 + 7*d*n7 - 3*n1*n7 - 
      2*n2*n7 - n3*n7 - 6*n5*n7 - 5*n7^2)*j[p4, n1, n2, n3, 0, n5, 0, 2 + n7, 
      -2, 1, 1, 1, 1, 1, 1])/(2*(-5 + 2*d - n2 - 2*n3 - n7)*
     (-2 + d - n1 - n5 - n7)) + 
   ((-8 + 3*d - n1 - n2 - n3 - 2*n5 - 10*n7 + 3*d*n7 - n1*n7 - n2*n7 - 
      n3*n7 - 2*n5*n7 - 2*n7^2)*j[p4, n1, n2, n3, 0, n5, 0, 2 + n7, -1, 1, 1, 
      1, 1, 1, 1])/((-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((-3 + d - n1 + n3 - 2*n5 - n7)*j[p4, n1, n2, n3, 1, -1 + n5, 0, 1 + n7, 
      -1, 1, 1, 0, 2, 1, 1])/(2*(-5 + 2*d - n2 - 2*n3 - n7)*
     (-2 + d - n1 - n5 - n7)) - j[p4, n1, n2, n3, 1, -1 + n5, 0, 1 + n7, -1, 
     1, 1, 1, 0, 2, 1]/(-2 + d - n1 - n5 - n7) + 
   ((-33 + 31*d - 7*d^2 - 14*n1 + 6*d*n1 - n1^2 - 11*n2 + 5*d*n2 - 2*n1*n2 - 
      n2^2 - 16*n3 + 7*d*n3 - 3*n1*n3 - 3*n2*n3 - 2*n3^2 - 15*n5 + 7*d*n5 - 
      3*n1*n5 - 2*n2*n5 - 3*n3*n5 - 2*n5^2 - 17*n7 + 8*d*n7 - 3*n1*n7 - 
      3*n2*n7 - 5*n3*n7 - 3*n5*n7 - 2*n7^2)*j[p4, n1, n2, n3, 1, -1 + n5, 0, 
      1 + n7, -1, 1, 1, 1, 1, 1, 1])/((-5 + 2*d - n2 - 2*n3 - n7)*
     (-2 + d - n1 - n5 - n7)) + ((-3 + d - n1 + n3 - 2*n5 - n7)*
     j[p4, n1, n2, n3, 1, -1 + n5, 0, 1 + n7, -1, 1, 1, 2, 0, 1, 1])/
    (2*(-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((8 - 3*d + n1 + n2 + n3 + 2*n5 + 2*n7)*j[p4, n1, n2, n3, 1, -1 + n5, 0, 
      1 + n7, 0, 1, 1, 0, 1, 1, 1])/((-5 + 2*d - n2 - 2*n3 - n7)*
     (-2 + d - n1 - n5 - n7)) + ((-8 + 3*d - n1 - n2 - n3 - 2*n5 - 2*n7)*
     j[p4, n1, n2, n3, 1, -1 + n5, 0, 1 + n7, 0, 1, 1, 1, 0, 1, 1])/
    ((-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((8 - 3*d + n1 + n2 + n3 + 2*n5 + 2*n7)*j[p4, n1, n2, n3, 1, -1 + n5, 0, 
      1 + n7, 0, 1, 1, 1, 1, 0, 1])/((-5 + 2*d - n2 - 2*n3 - n7)*
     (-2 + d - n1 - n5 - n7)) + 
   ((8 - 3*d + n1 + n2 + n3 + 2*n5 + 10*n7 - 3*d*n7 + n1*n7 + n2*n7 + n3*n7 + 
      2*n5*n7 + 2*n7^2)*j[p4, n1, n2, n3, 1, -1 + n5, 0, 2 + n7, -2, 1, 1, 1, 
      1, 1, 1])/((-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((-13 + 5*d - n1 - 2*n2 - 3*n3 - 2*n5 - 16*n7 + 5*d*n7 - n1*n7 - 2*n2*n7 - 
      3*n3*n7 - 2*n5*n7 - 3*n7^2)*j[p4, n1, n2, n3, 1, -1 + n5, 0, 2 + n7, 
      -1, 1, 0, 1, 1, 1, 1])/(2*(5 - 2*d + n2 + 2*n3 + n7)*
     (2 - d + n1 + n5 + n7)) + 
   ((13 - 5*d + n1 + 2*n2 + 3*n3 + 2*n5 + 16*n7 - 5*d*n7 + n1*n7 + 2*n2*n7 + 
      3*n3*n7 + 2*n5*n7 + 3*n7^2)*j[p4, n1, n2, n3, 1, -1 + n5, 0, 2 + n7, 
      -1, 1, 1, 0, 1, 1, 1])/(2*(5 - 2*d + n2 + 2*n3 + n7)*
     (2 - d + n1 + n5 + n7)) + 
   ((-3 + d - n1 + n3 - 2*n5 - 4*n7 + d*n7 - n1*n7 + n3*n7 - 2*n5*n7 - n7^2)*
     j[p4, n1, n2, n3, 1, -1 + n5, 0, 2 + n7, -1, 1, 1, 1, 1, 0, 1])/
    (2*(-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((8 - 3*d + n1 + n2 + n3 + 2*n5 + 10*n7 - 3*d*n7 + n1*n7 + n2*n7 + n3*n7 + 
      2*n5*n7 + 2*n7^2)*j[p4, n1, n2, n3, 1, -1 + n5, 0, 2 + n7, -1, 1, 1, 1, 
      1, 1, 1])/((-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((-3 + d - n1 + n3 - 2*n5 - n7)*j[p4, n1, n2, n3, 1, n5, -1, 1 + n7, -1, 
      1, 1, 0, 2, 1, 1])/(2*(-5 + 2*d - n2 - 2*n3 - n7)*
     (-2 + d - n1 - n5 - n7)) + ((5 - 2*d + n1 + n2 + n3 + n5 + 2*n7)*
     j[p4, n1, n2, n3, 1, n5, -1, 1 + n7, -1, 1, 1, 1, 1, 1, 1])/
    (-2 + d - n1 - n5 - n7) + ((-3 + d - n1 + n3 - 2*n5 - n7)*
     j[p4, n1, n2, n3, 1, n5, -1, 1 + n7, -1, 1, 1, 2, 0, 1, 1])/
    (2*(-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) - 
   j[p4, n1, n2, n3, 1, n5, -1, 1 + n7, -1, 1, 2, 0, 1, 1, 1]/
    (-2 + d - n1 - n5 - n7) + ((-19 + 7*d - 3*n1 - 2*n2 - n3 - 6*n5 - 5*n7)*
     j[p4, n1, n2, n3, 1, n5, -1, 1 + n7, -1, 1, 2, 1, 0, 1, 1])/
    (2*(-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((19 - 7*d + 3*n1 + 2*n2 + n3 + 6*n5 + 5*n7)*j[p4, n1, n2, n3, 1, n5, -1, 
      1 + n7, -1, 1, 2, 1, 1, 0, 1])/(2*(-5 + 2*d - n2 - 2*n3 - n7)*
     (-2 + d - n1 - n5 - n7)) + ((3 - d + n1 - n3 + 2*n5 + n7)*
     j[p4, n1, n2, n3, 1, n5, -1, 1 + n7, 0, 1, 1, 0, 1, 1, 1])/
    (2*(-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((3 - d + n1 - n3 + 2*n5 + n7)*j[p4, n1, n2, n3, 1, n5, -1, 1 + n7, 0, 1, 
      1, 1, 0, 1, 1])/(2*(-5 + 2*d - n2 - 2*n3 - n7)*
     (-2 + d - n1 - n5 - n7)) + ((-3 + d - n1 + n3 - 2*n5 - n7)*
     j[p4, n1, n2, n3, 1, n5, -1, 1 + n7, 0, 1, 1, 1, 1, 0, 1])/
    (2*(-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((8 - 3*d + n1 + n2 + n3 + 2*n5 + 2*n7)*j[p4, n1, n2, n3, 1, n5, -1, 
      1 + n7, 0, 1, 1, 1, 1, 1, 1])/((-5 + 2*d - n2 - 2*n3 - n7)*
     (-2 + d - n1 - n5 - n7)) + 
   ((8 - 3*d + n1 + n2 + n3 + 2*n5 + 10*n7 - 3*d*n7 + n1*n7 + n2*n7 + n3*n7 + 
      2*n5*n7 + 2*n7^2)*j[p4, n1, n2, n3, 1, n5, -1, 2 + n7, -1, 1, 1, 1, 1, 
      0, 1])/((-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((9 - 3*d + 3*n1 - 3*n3 + 6*n5 + 3*n7)*j[p4, n1, n2, n3, 1, n5, 0, n7, -1, 
      0, 2, 1, 1, 1, 1])/(2*(-5 + 2*d - n2 - 2*n3 - n7)*
     (-2 + d - n1 - n5 - n7)) + ((-3 + d - n1 + n3 - 2*n5 - n7)*
     j[p4, n1, n2, n3, 1, n5, 0, n7, -1, 1, 1, 0, 2, 1, 1])/
    (2*(-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((-3 + d - n1 + n3 - 2*n5 - n7)*j[p4, n1, n2, n3, 1, n5, 0, n7, -1, 1, 1, 
      2, 0, 1, 1])/(2*(-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((3 - d + n1 - n3 + 2*n5 + n7)*j[p4, n1, n2, n3, 1, n5, 0, n7, 0, 1, 1, 0, 
      1, 1, 1])/(2*(-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((3 - d + n1 - n3 + 2*n5 + n7)*j[p4, n1, n2, n3, 1, n5, 0, n7, 0, 1, 1, 1, 
      0, 1, 1])/(2*(-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((-3 + d - n1 + n3 - 2*n5 - n7)*j[p4, n1, n2, n3, 1, n5, 0, n7, 0, 1, 1, 
      1, 1, 0, 1])/(2*(-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((8 - 3*d + n1 + n2 + n3 + 2*n5 + 2*n7)*j[p4, n1, n2, n3, 1, n5, 0, n7, 0, 
      1, 1, 1, 1, 1, 1])/((-5 + 2*d - n2 - 2*n3 - n7)*
     (-2 + d - n1 - n5 - n7)) + ((19 - 7*d + 3*n1 + 2*n2 + n3 + 6*n5 + 5*n7)*
     j[p4, n1, n2, n3, 1, n5, 0, 1 + n7, -2, 0, 2, 1, 1, 1, 1])/
    (2*(-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((-3 + d - n1 + n3 - 2*n5 - n7)*j[p4, n1, n2, n3, 1, n5, 0, 1 + n7, -2, 1, 
      1, 0, 2, 1, 1])/(2*(-5 + 2*d - n2 - 2*n3 - n7)*
     (-2 + d - n1 - n5 - n7)) + j[p4, n1, n2, n3, 1, n5, 0, 1 + n7, -2, 1, 1, 
     1, 1, 2, 0]/(-2 + d - n1 - n5 - n7) + 
   ((-3 + d - n1 + n3 - 2*n5 - n7)*j[p4, n1, n2, n3, 1, n5, 0, 1 + n7, -2, 1, 
      1, 2, 0, 1, 1])/(2*(-5 + 2*d - n2 - 2*n3 - n7)*
     (-2 + d - n1 - n5 - n7)) + 
   ((-3 + d + 12*n1 - 5*d*n1 + n1^2 + 2*n1*n2 + n3 + 3*n1*n3 - 15*n5 + 
      5*d*n5 + n1*n5 - 2*n2*n5 - 3*n3*n5 - 2*n5^2 - n7 + 3*n1*n7 - 3*n5*n7)*
     j[p4, n1, n2, n3, 1, n5, 0, 1 + n7, -1, 0, 1, 1, 1, 1, 1])/
    (2*(-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((3 - d + n1 - n3 + 2*n5 + n7)*j[p4, n1, n2, n3, 1, n5, 0, 1 + n7, -1, 0, 
      1, 2, 1, 1, 1])/(2*(-5 + 2*d - n2 - 2*n3 - n7)*
     (-2 + d - n1 - n5 - n7)) + ((19 - 7*d + 3*n1 + 2*n2 + n3 + 6*n5 + 5*n7)*
     j[p4, n1, n2, n3, 1, n5, 0, 1 + n7, -1, 0, 2, 1, 1, 1, 1])/
    (2*(-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((-13 + 5*d - n1 + n2 - d*n2 + n1*n2 + 10*n3 - 5*d*n3 + n1*n3 + n2*n3 + 
      3*n3^2 - 2*n5 + 2*n2*n5 + 2*n3*n5 - 3*n7 + n2*n7 + 3*n3*n7)*
     j[p4, n1, n2, n3, 1, n5, 0, 1 + n7, -1, 1, 0, 1, 1, 1, 1])/
    (2*(-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((19 - 7*d + 3*n1 + 2*n2 - 12*n3 + 5*d*n3 - n1*n3 - 2*n2*n3 - 3*n3^2 + 
      6*n5 - 2*n3*n5 + 5*n7 - 3*n3*n7)*j[p4, n1, n2, n3, 1, n5, 0, 1 + n7, 
      -1, 1, 1, 0, 1, 1, 1])/(2*(-5 + 2*d - n2 - 2*n3 - n7)*
     (-2 + d - n1 - n5 - n7)) + 
   ((-7 + 3*d + n1 + 14*n2 - 6*d*n2 + 2*n1*n2 + 2*n2^2 + 11*n3 - 6*d*n3 + 
      2*n1*n3 + 4*n2*n3 + 2*n3^2 + 2*n5 + 4*n2*n5 + 4*n3*n5 - n7 + 4*n2*n7 + 
      4*n3*n7)*j[p4, n1, n2, n3, 1, n5, 0, 1 + n7, -1, 1, 1, 1, 0, 1, 1])/
    (2*(-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((23 - 9*d + 4*n1 - d*n1 + n1^2 - 28*n2 + 12*d*n2 - 4*n1*n2 - 4*n2^2 + 
      7*n3 - n1*n3 - 4*n2*n3 - 17*n5 + 7*d*n5 - n1*n5 - 10*n2*n5 - n3*n5 - 
      6*n5^2 + 2*n7 + d*n7 - 8*n2*n7 + n3*n7 - 7*n5*n7 - n7^2)*
     j[p4, n1, n2, n3, 1, n5, 0, 1 + n7, -1, 1, 1, 1, 1, 0, 1])/
    (2*(-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((-19 + 7*d - 3*n1 - 2*n2 - 20*n3 + 7*d*n3 - 3*n1*n3 - 2*n2*n3 - n3^2 + 
      13*n5 - 7*d*n5 + 3*n1*n5 + 2*n2*n5 - 5*n3*n5 + 6*n5^2 - 5*n7 - 
      5*n3*n7 + 5*n5*n7)*j[p4, n1, n2, n3, 1, n5, 0, 1 + n7, -1, 1, 1, 1, 1, 
      1, 0])/(2*(-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((30 - 19*d + 3*d^2 + 10*n1 - 3*d*n1 + 32*n2 - 12*d*n2 + 4*n1*n2 + 
      4*n2^2 - 4*n3 + d*n3 + 2*n1*n3 + 4*n2*n3 - 2*n3^2 + 26*n5 - 8*d*n5 + 
      2*n1*n5 + 8*n2*n5 + 2*n3*n5 + 4*n5^2 + 16*n7 - 5*d*n7 + 2*n1*n7 + 
      8*n2*n7 + 6*n5*n7 + 2*n7^2)*j[p4, n1, n2, n3, 1, n5, 0, 1 + n7, -1, 1, 
      1, 1, 1, 1, 1])/(2*(-5 + 2*d - n2 - 2*n3 - n7)*
     (-2 + d - n1 - n5 - n7)) + ((-13 + 5*d - n1 - 2*n2 - 3*n3 - 2*n5 - 3*n7)*
     j[p4, n1, n2, n3, 1, n5, 0, 1 + n7, -1, 1, 1, 1, 1, 2, 0])/
    (2*(-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((3 - d + n1 - n3 + 2*n5 + n7)*j[p4, n1, n2, n3, 1, n5, 0, 1 + n7, -1, 1, 
      1, 1, 2, 1, 0])/(2*(-5 + 2*d - n2 - 2*n3 - n7)*
     (-2 + d - n1 - n5 - n7)) + 
   ((-3 + d - n1 + n3 - 2*n5 - 4*n7 + d*n7 - n1*n7 + n3*n7 - 2*n5*n7 - n7^2)*
     j[p4, n1, n2, n3, 1, n5, 0, 2 + n7, -2, 1, 1, 1, 1, 0, 1])/
    (2*(-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((8 - 3*d + n1 + n2 + n3 + 2*n5 + 2*n7)*j[p4, n1, n2, n3, 2, -1 + n5, 0, 
      1 + n7, -1, 1, 1, 1, 1, 1, 0])/((-5 + 2*d - n2 - 2*n3 - n7)*
     (-2 + d - n1 - n5 - n7)) + ((8 - 3*d + n1 + n2 + n3 + 2*n5 + 2*n7)*
     j[p4, n1, n2, n3, 2, n5, -1, 1 + n7, -1, 1, 1, 1, 1, 1, 0])/
    ((-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((-3 + d - n1 + n3 - 2*n5 - n7)*j[p4, n1, n2, n3, 2, n5, 0, n7, -1, 1, 1, 
      1, 1, 1, 0])/(2*(-5 + 2*d - n2 - 2*n3 - n7)*(-2 + d - n1 - n5 - n7)) + 
   ((-3 + d - n1 + n3 - 2*n5 - n7)*j[p4, n1, n2, n3, 2, n5, 0, 1 + n7, -2, 1, 
      1, 1, 1, 1, 0])/(2*(-5 + 2*d - n2 - 2*n3 - n7)*
     (-2 + d - n1 - n5 - n7)) + 
   ((9*n3 - 3*d*n3 + 3*n1*n3 - 3*n3^2 + 6*n3*n5 + 3*n3*n7)*
     j[p4, n1, n2, 1 + n3, 0, n5, 0, n7, -1, 1, 1, 1, 1, 1, 1])/
    (2*(-2 + d - n1 - n5 - n7)*(5 - 2*d + n2 + 2*n3 + n7)) + 
   ((9*n3 - 3*d*n3 + 3*n1*n3 - 3*n3^2 + 6*n3*n5 + 3*n3*n7)*
     j[p4, n1, n2, 1 + n3, 0, n5, 0, 1 + n7, -2, 1, 1, 1, 1, 1, 1])/
    (2*(-2 + d - n1 - n5 - n7)*(5 - 2*d + n2 + 2*n3 + n7)) + 
   ((3*n3 - d*n3 + n1*n3 - n3^2 + 2*n3*n5 + n3*n7)*j[p4, n1, n2, 1 + n3, 0, 
      n5, 0, 1 + n7, -1, 1, 1, 1, 1, 1, 1])/(2*(-2 + d - n1 - n5 - n7)*
     (5 - 2*d + n2 + 2*n3 + n7)) + 
   ((-9*n3 + 3*d*n3 - 3*n1*n3 + 3*n3^2 - 6*n3*n5 - 3*n3*n7)*
     j[p4, n1, n2, 1 + n3, 1, n5, 0, n7, -1, 1, 1, 1, 1, 1, 0])/
    (2*(-2 + d - n1 - n5 - n7)*(5 - 2*d + n2 + 2*n3 + n7)) + 
   ((-9*n3 + 3*d*n3 - 3*n1*n3 + 3*n3^2 - 6*n3*n5 - 3*n3*n7)*
     j[p4, n1, n2, 1 + n3, 1, n5, 0, 1 + n7, -2, 1, 1, 1, 1, 1, 0])/
    (2*(-2 + d - n1 - n5 - n7)*(5 - 2*d + n2 + 2*n3 + n7)) + 
   ((-3*n3 + d*n3 - n1*n3 + n3^2 - 2*n3*n5 - n3*n7)*
     j[p4, n1, n2, 1 + n3, 1, n5, 0, 1 + n7, -1, 1, 1, 1, 1, 1, 0])/
    (2*(-2 + d - n1 - n5 - n7)*(5 - 2*d + n2 + 2*n3 + n7)) + 
   ((-13*n2 + 5*d*n2 - n1*n2 - 2*n2^2 - 3*n2*n3 - 2*n2*n5 - 3*n2*n7)*
     j[p4, n1, 1 + n2, -1 + n3, 1, n5, 0, 1 + n7, -1, 1, 0, 1, 1, 1, 1])/
    (2*(-2 + d - n1 - n5 - n7)*(5 - 2*d + n2 + 2*n3 + n7)) + 
   ((29*n2 - 11*d*n2 + 3*n1*n2 + 4*n2^2 + 5*n2*n3 + 6*n2*n5 + 7*n2*n7)*
     j[p4, n1, 1 + n2, n3, 1, -1 + n5, 0, 1 + n7, -1, 1, 0, 1, 1, 1, 1])/
    (2*(-2 + d - n1 - n5 - n7)*(5 - 2*d + n2 + 2*n3 + n7)) + 
   ((-19*n2 + 7*d*n2 - 3*n1*n2 - 2*n2^2 - n2*n3 - 6*n2*n5 - 5*n2*n7)*
     j[p4, n1, 1 + n2, n3, 1, -1 + n5, 0, 1 + n7, -1, 1, 1, 1, 0, 1, 1])/
    (2*(-2 + d - n1 - n5 - n7)*(5 - 2*d + n2 + 2*n3 + n7)) + 
   ((19*n2 - 7*d*n2 + 3*n1*n2 + 2*n2^2 + n2*n3 + 6*n2*n5 + 5*n2*n7)*
     j[p4, n1, 1 + n2, n3, 1, -1 + n5, 0, 1 + n7, -1, 1, 1, 1, 1, 0, 1])/
    ((-2 + d - n1 - n5 - n7)*(5 - 2*d + n2 + 2*n3 + n7)) + 
   ((-16*n2 + 6*d*n2 - 2*n1*n2 - 2*n2^2 - 2*n2*n3 - 4*n2*n5 - 4*n2*n7)*
     j[p4, n1, 1 + n2, n3, 1, -1 + n5, 0, 1 + n7, -1, 1, 1, 1, 1, 1, 1])/
    ((-2 + d - n1 - n5 - n7)*(5 - 2*d + n2 + 2*n3 + n7)) + 
   ((3*n2 - d*n2 + n1*n2 - n2*n3 + 2*n2*n5 + n2*n7)*
     j[p4, n1, 1 + n2, n3, 1, n5, -1, 1 + n7, -1, 1, 0, 1, 1, 1, 1])/
    (2*(-2 + d - n1 - n5 - n7)*(5 - 2*d + n2 + 2*n3 + n7)) + 
   ((19*n2 - 7*d*n2 + 3*n1*n2 + 2*n2^2 + n2*n3 + 6*n2*n5 + 5*n2*n7)*
     j[p4, n1, 1 + n2, n3, 1, n5, -1, 1 + n7, -1, 1, 1, 1, 0, 1, 1])/
    (2*(-2 + d - n1 - n5 - n7)*(5 - 2*d + n2 + 2*n3 + n7)) + 
   ((-19*n2 + 7*d*n2 - 3*n1*n2 - 2*n2^2 - n2*n3 - 6*n2*n5 - 5*n2*n7)*
     j[p4, n1, 1 + n2, n3, 1, n5, -1, 1 + n7, -1, 1, 1, 1, 1, 0, 1])/
    ((-2 + d - n1 - n5 - n7)*(5 - 2*d + n2 + 2*n3 + n7)) + 
   ((16*n2 - 6*d*n2 + 2*n1*n2 + 2*n2^2 + 2*n2*n3 + 4*n2*n5 + 4*n2*n7)*
     j[p4, n1, 1 + n2, n3, 1, n5, -1, 1 + n7, -1, 1, 1, 1, 1, 1, 1])/
    ((-2 + d - n1 - n5 - n7)*(5 - 2*d + n2 + 2*n3 + n7)) + 
   ((3*n2 - d*n2 + n1*n2 - n2*n3 + 2*n2*n5 + n2*n7)*
     j[p4, n1, 1 + n2, n3, 1, n5, 0, n7, -1, 1, 0, 1, 1, 1, 1])/
    (2*(-2 + d - n1 - n5 - n7)*(5 - 2*d + n2 + 2*n3 + n7)) + 
   ((3*n2 - d*n2 + n1*n2 - n2*n3 + 2*n2*n5 + n2*n7)*
     j[p4, n1, 1 + n2, n3, 1, n5, 0, 1 + n7, -2, 1, 0, 1, 1, 1, 1])/
    (2*(-2 + d - n1 - n5 - n7)*(5 - 2*d + n2 + 2*n3 + n7)) + 
   (n1*j[p4, 1 + n1, n2, n3, 1, -1 + n5, 0, 1 + n7, -1, 1, 1, 0, 1, 1, 1])/
    (2 - d + n1 + n5 + n7) + ((19*n1 - 7*d*n1 + 3*n1^2 + 2*n1*n2 + n1*n3 + 
      6*n1*n5 + 5*n1*n7)*j[p4, 1 + n1, n2, n3, 1, -1 + n5, 0, 1 + n7, -1, 1, 
      1, 1, 1, 0, 1])/(2*(-5 + 2*d - n2 - 2*n3 - n7)*
     (2 - d + n1 + n5 + n7)) + 
   ((-16*n1 + 6*d*n1 - 2*n1^2 - 2*n1*n2 - 2*n1*n3 - 4*n1*n5 - 4*n1*n7)*
     j[p4, 1 + n1, n2, n3, 1, -1 + n5, 0, 1 + n7, -1, 1, 1, 1, 1, 1, 1])/
    ((-5 + 2*d - n2 - 2*n3 - n7)*(2 - d + n1 + n5 + n7)) - 
   (n1*j[p4, 1 + n1, n2, n3, 1, n5, 0, 1 + n7, -2, 0, 1, 1, 1, 1, 1])/
    (2 - d + n1 + n5 + n7) + ((13*n1 - 5*d*n1 + n1^2 + 2*n1*n2 + 3*n1*n3 + 
      2*n1*n5 + 3*n1*n7)*j[p4, 1 + n1, n2, n3, 1, n5, 0, 1 + n7, -1, 0, 1, 1, 
      1, 1, 1])/(2*(-5 + 2*d - n2 - 2*n3 - n7)*(2 - d + n1 + n5 + n7)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 1 && n14 == 1 && n3 == 0 && 
    n5 == 0 && n6 == 0 && n7 == 0 && n8 == 0 && n13 != 1 -> 
  ((-2*n4 + d*n4 - 2*n4^2)*j[p4, 0, n2, 0, 1 + n4, 0, 0, 0, 0, n9, 1, 1, 1, 
      -1 + n13, 1])/((d - 2*n13)*(-1 + n13)) + 
   (n2*n4*j[p4, 0, 1 + n2, -1, 1 + n4, 0, 0, 0, 0, n9, 1, 1, 1, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + ((-4*n2 + 2*n13*n2 - 2*n2^2)*
     j[p4, 0, 1 + n2, 0, n4, 0, 0, 0, 0, n9, 1, 1, 1, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n2*n4*j[p4, 0, 1 + n2, 0, 1 + n4, -1, 0, 0, 0, n9, 1, 1, 1, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (2*n2*n4*j[p4, 0, 1 + n2, 0, 1 + n4, 0, -1, 0, 0, n9, 1, 1, 1, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (n2*n4*j[p4, 0, 1 + n2, 0, 1 + n4, 0, 0, -1, 0, n9, 1, 1, 1, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (2*n2*n4*j[p4, 0, 1 + n2, 0, 1 + n4, 0, 0, 0, -1, n9, 1, 1, 1, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) - 
   (n2*n4*j[p4, 0, 1 + n2, 0, 1 + n4, 0, 0, 0, 0, n9, 1, 1, 1, -1 + n13, 0])/
    ((d - 2*n13)*(-1 + n13)) + 
   ((-n2 - n2^2)*j[p4, 0, 2 + n2, -1, n4, 0, 0, 0, 0, n9, 1, 1, 1, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((n2 + n2^2)*j[p4, 0, 2 + n2, 0, n4, 0, 0, -1, 0, n9, 1, 1, 1, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((n2 + n2^2)*j[p4, 0, 2 + n2, 0, n4, 0, 0, 0, -1, n9, 1, 1, 1, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((-n2 - n2^2)*j[p4, 0, 2 + n2, 0, n4, 0, 0, 0, 0, n9, 1, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((2*n2 + 2*n2^2)*j[p4, 0, 2 + n2, 0, n4, 0, 0, 0, 0, n9, 1, 1, 1, 
      -2 + n13, 1])/((d - 2*n13)*(-1 + n13)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 1 && n13 == 1 && n14 == 1 && n3 == 0 && 
    n5 == 0 && n6 == 0 && n7 == 0 && n8 == 0 &&  !(n1 == 0 || n4 == 1) -> 
  ((8*n2 - 6*d*n2 + 2*n1*n2 - 2*n2^2 + 4*n2*n4 + 2*n2*n9)*
     j[p4, n1, 1 + n2, 0, -1 + n4, 0, 0, 0, 0, n9, 1, 1, 1, 1, 1])/
    ((-1 + n4)*(-d + 2*n4)) + (2*n2*j[p4, n1, 1 + n2, 0, -1 + n4, 0, 0, 0, 0, 
      n9, 1, 2, 0, 1, 1])/((-1 + n4)*(-d + 2*n4)) - 
   (2*n2*j[p4, n1, 1 + n2, 0, -1 + n4, 0, 0, 0, 0, n9, 1, 2, 1, 1, 1])/
    ((-1 + n4)*(-d + 2*n4)) + (2*n2*n9*j[p4, n1, 1 + n2, 0, -1 + n4, 0, 0, 0, 
      0, 1 + n9, 1, 1, 1, 1, 0])/((-1 + n4)*(-d + 2*n4)) - 
   (2*n2*n9*j[p4, n1, 1 + n2, 0, -1 + n4, 0, 0, 0, 0, 1 + n9, 1, 1, 1, 1, 1])/
    ((-1 + n4)*(-d + 2*n4)) + 
   ((-4*n2 - 4*n2^2)*j[p4, n1, 2 + n2, -1, -1 + n4, 0, 0, 0, 0, n9, 1, 1, 1, 
      1, 1])/((-1 + n4)*(-d + 2*n4)) + 
   ((4*n2 + 4*n2^2)*j[p4, n1, 2 + n2, 0, -1 + n4, 0, 0, -1, 0, n9, 1, 1, 1, 
      1, 1])/((-1 + n4)*(-d + 2*n4)) + 
   ((4*n2 + 4*n2^2)*j[p4, n1, 2 + n2, 0, -1 + n4, 0, 0, 0, -1, n9, 1, 1, 1, 
      1, 1])/((-1 + n4)*(-d + 2*n4)) + 
   ((-4*n2 - 4*n2^2)*j[p4, n1, 2 + n2, 0, -1 + n4, 0, 0, 0, 0, n9, 1, 1, 0, 
      1, 1])/((-1 + n4)*(-d + 2*n4)) + 
   ((8*n2 + 8*n2^2)*j[p4, n1, 2 + n2, 0, -1 + n4, 0, 0, 0, 0, n9, 1, 1, 1, 0, 
      1])/((-1 + n4)*(-d + 2*n4)) + 
   ((4 - d + 2*n1)*j[p4, 1 + n1, n2, 0, -1 + n4, 0, 0, 0, 0, -1 + n9, 1, 1, 
      1, 1, 2])/((d - 2*n4)*(-1 + n4)) + 
   ((4 - d + 2*n1 - 4*n2 + d*n2 - 2*n1*n2 - 4*n9 + d*n9 - 2*n1*n9)*
     j[p4, 1 + n1, n2, 0, -1 + n4, 0, 0, 0, 0, n9, 1, 1, 1, 1, 1])/
    ((-1 + n4)*(-d + 2*n4)) + ((-4 + d - 2*n1)*j[p4, 1 + n1, n2, 0, -1 + n4, 
      0, 0, 0, 0, n9, 1, 1, 1, 1, 2])/((d - 2*n4)*(-1 + n4)) + 
   ((-4 + d)*j[p4, 1 + n1, n2, 0, -1 + n4, 0, 0, 0, 0, n9, 1, 1, 1, 2, 1])/
    ((d - 2*n4)*(-1 + n4)) + ((4*n9 - d*n9 + 2*n1*n9)*
     j[p4, 1 + n1, n2, 0, -1 + n4, 0, 0, 0, 0, 1 + n9, 1, 1, 1, 1, 0])/
    ((-1 + n4)*(-d + 2*n4)) + ((-4*n9 + d*n9 - 2*n1*n9)*
     j[p4, 1 + n1, n2, 0, -1 + n4, 0, 0, 0, 0, 1 + n9, 1, 1, 1, 1, 1])/
    ((-1 + n4)*(-d + 2*n4)) + ((4*n2 - d*n2 + 2*n1*n2)*
     j[p4, 1 + n1, 1 + n2, -1, -1 + n4, 0, 0, 0, 0, n9, 1, 1, 1, 1, 1])/
    ((d - 2*n4)*(-1 + n4)) + ((-4*n2 + d*n2 - 2*n1*n2)*
     j[p4, 1 + n1, 1 + n2, 0, -1 + n4, 0, 0, -1, 0, n9, 1, 1, 1, 1, 1])/
    ((d - 2*n4)*(-1 + n4)) + ((-4*n2 + d*n2 - 2*n1*n2)*
     j[p4, 1 + n1, 1 + n2, 0, -1 + n4, 0, 0, 0, -1, n9, 1, 1, 1, 1, 1])/
    ((d - 2*n4)*(-1 + n4)) + ((-4*n2 + d*n2 - 2*n1*n2)*
     j[p4, 1 + n1, 1 + n2, 0, -1 + n4, 0, 0, 0, 0, n9, 0, 1, 1, 1, 1])/
    ((d - 2*n4)*(-1 + n4)) + ((4*n2 - d*n2 + 2*n1*n2)*
     j[p4, 1 + n1, 1 + n2, 0, -1 + n4, 0, 0, 0, 0, n9, 1, 1, 0, 1, 1])/
    ((d - 2*n4)*(-1 + n4)) + ((-8*n2 + 2*d*n2 - 8*n1*n2)*
     j[p4, 1 + n1, 1 + n2, 0, -1 + n4, 0, 0, 0, 0, n9, 1, 1, 1, 0, 1])/
    ((d - 2*n4)*(-1 + n4)) - (4*n1*n2*j[p4, 1 + n1, 1 + n2, 0, -1 + n4, 0, 0, 
      0, 0, n9, 1, 1, 1, 1, 1])/((-1 + n4)*(-d + 2*n4)) + 
   ((-4 + d - 6*n1 + d*n1 - 2*n1^2)*j[p4, 2 + n1, n2, 0, -1 + n4, 0, 0, 0, 0, 
      n9, 1, 1, 1, 0, 1])/((d - 2*n4)*(-1 + n4)) + 
   ((4 - d + 6*n1 - d*n1 + 2*n1^2)*j[p4, 2 + n1, n2, 0, -1 + n4, 0, 0, 0, 0, 
      n9, 1, 1, 1, 1, 1])/((d - 2*n4)*(-1 + n4)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 1 && n14 == 1 && n3 == 0 && n5 == 0 && 
    n6 == 0 && n7 == 0 && n8 == 0 && n9 == 1 && n13 != 1 -> 
  ((-2*n4 + d*n4 - 2*n4^2)*j[p4, 0, n2, 0, 1 + n4, 0, 0, 0, 0, 1, 1, n11, 1, 
      -1 + n13, 1])/((d - 2*n13)*(-1 + n13)) + 
   (n2*n4*j[p4, 0, 1 + n2, -1, 1 + n4, 0, 0, 0, 0, 1, 1, n11, 1, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((-4*n2 + 2*n13*n2 - 2*n2^2)*j[p4, 0, 1 + n2, 0, n4, 0, 0, 0, 0, 1, 1, 
      n11, 1, -1 + n13, 1])/((d - 2*n13)*(-1 + n13)) - 
   (n2*n4*j[p4, 0, 1 + n2, 0, 1 + n4, -1, 0, 0, 0, 1, 1, n11, 1, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (2*n2*n4*j[p4, 0, 1 + n2, 0, 1 + n4, 0, -1, 0, 0, 1, 1, n11, 1, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (n2*n4*j[p4, 0, 1 + n2, 0, 1 + n4, 0, 0, -1, 0, 1, 1, n11, 1, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) - 
   (2*n2*n4*j[p4, 0, 1 + n2, 0, 1 + n4, 0, 0, 0, -1, 1, 1, n11, 1, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) - 
   (n2*n4*j[p4, 0, 1 + n2, 0, 1 + n4, 0, 0, 0, 0, 1, 1, n11, 1, -1 + n13, 0])/
    ((d - 2*n13)*(-1 + n13)) + 
   ((-n2 - n2^2)*j[p4, 0, 2 + n2, -1, n4, 0, 0, 0, 0, 1, 1, n11, 1, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((n2 + n2^2)*j[p4, 0, 2 + n2, 0, n4, 0, 0, -1, 0, 1, 1, n11, 1, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((n2 + n2^2)*j[p4, 0, 2 + n2, 0, n4, 0, 0, 0, -1, 1, 1, n11, 1, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((-n2 - n2^2)*j[p4, 0, 2 + n2, 0, n4, 0, 0, 0, 0, 1, 1, n11, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((2*n2 + 2*n2^2)*j[p4, 0, 2 + n2, 0, n4, 0, 0, 0, 0, 1, 1, n11, 1, 
      -2 + n13, 1])/((d - 2*n13)*(-1 + n13)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n12 == 1 && n13 == 1 && n14 == 1 && n3 == 0 && n5 == 0 && 
    n6 == 0 && n7 == 0 && n8 == 0 && n9 == 1 &&  !(n1 == 0 || n4 == 1) -> 
  ((-8*n2 + 6*d*n2 - 2*n1*n2 - 2*n11*n2 + 2*n2^2 - 4*n2*n4)*
     j[p4, n1, 1 + n2, 0, -1 + n4, 0, 0, 0, 0, 1, 1, n11, 1, 1, 1])/
    ((d - 2*n4)*(-1 + n4)) + (2*n11*n2*j[p4, n1, 1 + n2, 0, -1 + n4, 0, 0, 0, 
      0, 1, 1, 1 + n11, 0, 1, 1])/((-1 + n4)*(-d + 2*n4)) - 
   (2*n11*n2*j[p4, n1, 1 + n2, 0, -1 + n4, 0, 0, 0, 0, 1, 1, 1 + n11, 1, 1, 
      1])/((-1 + n4)*(-d + 2*n4)) + 
   (2*n2*j[p4, n1, 1 + n2, 0, -1 + n4, 0, 0, 0, 0, 2, 1, n11, 1, 1, 0])/
    ((-1 + n4)*(-d + 2*n4)) - (2*n2*j[p4, n1, 1 + n2, 0, -1 + n4, 0, 0, 0, 0, 
      2, 1, n11, 1, 1, 1])/((-1 + n4)*(-d + 2*n4)) + 
   ((-4*n2 - 4*n2^2)*j[p4, n1, 2 + n2, -1, -1 + n4, 0, 0, 0, 0, 1, 1, n11, 1, 
      1, 1])/((-1 + n4)*(-d + 2*n4)) + 
   ((4*n2 + 4*n2^2)*j[p4, n1, 2 + n2, 0, -1 + n4, 0, 0, -1, 0, 1, 1, n11, 1, 
      1, 1])/((-1 + n4)*(-d + 2*n4)) + 
   ((4*n2 + 4*n2^2)*j[p4, n1, 2 + n2, 0, -1 + n4, 0, 0, 0, -1, 1, 1, n11, 1, 
      1, 1])/((-1 + n4)*(-d + 2*n4)) + 
   ((-4*n2 - 4*n2^2)*j[p4, n1, 2 + n2, 0, -1 + n4, 0, 0, 0, 0, 1, 1, n11, 0, 
      1, 1])/((-1 + n4)*(-d + 2*n4)) + 
   ((8*n2 + 8*n2^2)*j[p4, n1, 2 + n2, 0, -1 + n4, 0, 0, 0, 0, 1, 1, n11, 1, 
      0, 1])/((-1 + n4)*(-d + 2*n4)) + 
   ((4 - d + 2*n1)*j[p4, 1 + n1, n2, 0, -1 + n4, 0, 0, 0, 0, 0, 1, n11, 1, 1, 
      2])/((d - 2*n4)*(-1 + n4)) + 
   ((4*n2 - d*n2 + 2*n1*n2)*j[p4, 1 + n1, n2, 0, -1 + n4, 0, 0, 0, 0, 1, 1, 
      n11, 1, 1, 1])/((d - 2*n4)*(-1 + n4)) + 
   ((-4 + d - 2*n1)*j[p4, 1 + n1, n2, 0, -1 + n4, 0, 0, 0, 0, 1, 1, n11, 1, 
      1, 2])/((d - 2*n4)*(-1 + n4)) + 
   ((-4 + d)*j[p4, 1 + n1, n2, 0, -1 + n4, 0, 0, 0, 0, 1, 1, n11, 1, 2, 1])/
    ((d - 2*n4)*(-1 + n4)) + ((-4 + d - 2*n1)*j[p4, 1 + n1, n2, 0, -1 + n4, 
      0, 0, 0, 0, 2, 1, n11, 1, 1, 0])/((d - 2*n4)*(-1 + n4)) + 
   ((4 - d + 2*n1)*j[p4, 1 + n1, n2, 0, -1 + n4, 0, 0, 0, 0, 2, 1, n11, 1, 1, 
      1])/((d - 2*n4)*(-1 + n4)) + 
   ((4*n2 - d*n2 + 2*n1*n2)*j[p4, 1 + n1, 1 + n2, -1, -1 + n4, 0, 0, 0, 0, 1, 
      1, n11, 1, 1, 1])/((d - 2*n4)*(-1 + n4)) + 
   ((-4*n2 + d*n2 - 2*n1*n2)*j[p4, 1 + n1, 1 + n2, 0, -1 + n4, 0, 0, -1, 0, 
      1, 1, n11, 1, 1, 1])/((d - 2*n4)*(-1 + n4)) + 
   ((-4*n2 + d*n2 - 2*n1*n2)*j[p4, 1 + n1, 1 + n2, 0, -1 + n4, 0, 0, 0, -1, 
      1, 1, n11, 1, 1, 1])/((d - 2*n4)*(-1 + n4)) + 
   ((-4*n2 + d*n2 - 2*n1*n2)*j[p4, 1 + n1, 1 + n2, 0, -1 + n4, 0, 0, 0, 0, 1, 
      0, n11, 1, 1, 1])/((d - 2*n4)*(-1 + n4)) + 
   ((4*n2 - d*n2 + 2*n1*n2)*j[p4, 1 + n1, 1 + n2, 0, -1 + n4, 0, 0, 0, 0, 1, 
      1, n11, 0, 1, 1])/((d - 2*n4)*(-1 + n4)) + 
   ((-8*n2 + 2*d*n2 - 8*n1*n2)*j[p4, 1 + n1, 1 + n2, 0, -1 + n4, 0, 0, 0, 0, 
      1, 1, n11, 1, 0, 1])/((d - 2*n4)*(-1 + n4)) - 
   (4*n1*n2*j[p4, 1 + n1, 1 + n2, 0, -1 + n4, 0, 0, 0, 0, 1, 1, n11, 1, 1, 
      1])/((-1 + n4)*(-d + 2*n4)) + ((-4 + d - 6*n1 + d*n1 - 2*n1^2)*
     j[p4, 2 + n1, n2, 0, -1 + n4, 0, 0, 0, 0, 1, 1, n11, 1, 0, 1])/
    ((d - 2*n4)*(-1 + n4)) + ((4 - d + 6*n1 - d*n1 + 2*n1^2)*
     j[p4, 2 + n1, n2, 0, -1 + n4, 0, 0, 0, 0, 1, 1, n11, 1, 1, 1])/
    ((d - 2*n4)*(-1 + n4)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n12 == 1 && n13 == 1 && n14 == 1 && n2 == 0 && n3 == 0 && n4 == 1 && 
    n5 == 0 && n6 == 0 && n7 == 0 && n8 == 0 && n10 != 1 -> 
  ((-4 + d)*j[p4, n1, 0, 0, 2, 0, 0, 0, 0, n9, -1 + n10, n11, 1, 1, 1])/
   ((d - 2*n10)*(-1 + n10)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n11 == 1 && n12 == 1 && n14 == 1 && n2 == 0 && n4 == 1 && 
    n5 == 0 && n6 == 0 && n7 == 0 && n8 == 0 && n10 != 1 -> 
  (n3*j[p4, -1, 0, 1 + n3, 1, 0, 0, 0, 0, n9, n10, 1, 1, n13, 1])/
    (d - 2*n10) - (n3*j[p4, 0, -1, 1 + n3, 1, 0, 0, 0, 0, n9, n10, 1, 1, n13, 
      1])/(d - 2*n10) + ((-n3 - n3^2)*j[p4, 0, -1, 2 + n3, 1, 0, 0, 0, 0, n9, 
      -1 + n10, 1, 1, n13, 1])/((d - 2*n10)*(-1 + n10)) + 
   ((-4 + d - 2*n3)*j[p4, 0, 0, n3, 2, 0, 0, 0, 0, n9, -1 + n10, 1, 1, n13, 
      1])/((d - 2*n10)*(-1 + n10)) + ((-4*n3 + 2*d*n3 - n10*n3 - 3*n3^2)*
     j[p4, 0, 0, 1 + n3, 1, 0, 0, 0, 0, n9, -1 + n10, 1, 1, n13, 1])/
    ((d - 2*n10)*(-1 + n10)) + 
   (n3*j[p4, 0, 0, 1 + n3, 2, -1, 0, 0, 0, n9, -1 + n10, 1, 1, n13, 1])/
    ((d - 2*n10)*(-1 + n10)) - 
   (n3*j[p4, 0, 0, 1 + n3, 2, 0, -1, 0, 0, n9, -1 + n10, 1, 1, n13, 1])/
    ((d - 2*n10)*(-1 + n10)) - 
   (n3*j[p4, 0, 0, 1 + n3, 2, 0, 0, -1, 0, n9, -1 + n10, 1, 1, n13, 1])/
    ((d - 2*n10)*(-1 + n10)) + 
   (n3*j[p4, 0, 0, 1 + n3, 2, 0, 0, 0, -1, n9, -1 + n10, 1, 1, n13, 1])/
    ((d - 2*n10)*(-1 + n10)) + 
   (2*n3*j[p4, 0, 0, 1 + n3, 2, 0, 0, 0, 0, n9, -1 + n10, 1, 1, n13, 0])/
    ((d - 2*n10)*(-1 + n10)) + 
   ((2*n3 + 2*n3^2)*j[p4, 0, 0, 2 + n3, 1, 0, 0, 0, -1, n9, -1 + n10, 1, 1, 
      n13, 1])/((d - 2*n10)*(-1 + n10)) + 
   ((-n3 - n3^2)*j[p4, 0, 0, 2 + n3, 1, 0, 0, 0, 0, n9, -1 + n10, 1, 0, n13, 
      1])/((d - 2*n10)*(-1 + n10)) + 
   ((2*n3 + 2*n3^2)*j[p4, 0, 0, 2 + n3, 1, 0, 0, 0, 0, n9, -1 + n10, 1, 1, 
      -1 + n13, 1])/((d - 2*n10)*(-1 + n10)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 1 && n13 == 1 && n14 == 1 && n4 == 1 && 
    n5 == 0 && n6 == 0 && n7 == 0 && n8 == 0 &&  !(n3 == 0 || n9 == 1) -> 
  ((6 - 3*d - 2*n2 + 2*n3 + 3*n9)*j[p4, -1 + n1, n2, 1 + n3, 1, 0, 0, 0, 0, 
      -1 + n9, 1, 1, 1, 1, 1])/(2*(-1 + n9)) + 
   j[p4, -1 + n1, n2, 1 + n3, 1, 0, 0, 0, 0, -1 + n9, 1, 1, 1, 2, 0]/
    (-1 + n9) + (3*j[p4, -1 + n1, n2, 1 + n3, 1, 0, 0, 0, 0, n9, 1, 1, 1, 1, 
      0])/2 - 2*j[p4, -1 + n1, n2, 1 + n3, 1, 0, 0, 0, 0, n9, 1, 1, 1, 1, 
     1] + j[p4, -1 + n1, n2, 1 + n3, 2, 0, 0, 0, 0, -1 + n9, 1, 1, 1, 1, 0]/
    (2*(-1 + n9)) + ((-1 - n3)*j[p4, -1 + n1, n2, 2 + n3, 0, 0, 0, 0, 0, 
      -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) + 
   ((1 + n3)*j[p4, -1 + n1, n2, 2 + n3, 1, 0, 0, 0, 0, -1 + n9, 1, 1, 1, 1, 
      0])/(-1 + n9) - (n2*j[p4, -1 + n1, 1 + n2, n3, 1, 0, 0, 0, 0, -1 + n9, 
      1, 1, 1, 1, 1])/(-1 + n9) + 
   (n2*j[p4, -1 + n1, 1 + n2, 1 + n3, 1, -1, 0, 0, 0, -1 + n9, 1, 1, 1, 1, 
      1])/(-1 + n9) + (n2*j[p4, -1 + n1, 1 + n2, 1 + n3, 1, 0, -1, 0, 0, 
      -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) + 
   (n2*j[p4, -1 + n1, 1 + n2, 1 + n3, 1, 0, 0, -1, 0, -1 + n9, 1, 1, 1, 1, 
      1])/(-1 + n9) + (n2*j[p4, -1 + n1, 1 + n2, 1 + n3, 1, 0, 0, 0, -1, 
      -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) - 
   (n2*j[p4, -1 + n1, 1 + n2, 1 + n3, 1, 0, 0, 0, 0, -1 + n9, 1, 1, 0, 1, 1])/
    (-1 + n9) + (2*n2*j[p4, -1 + n1, 1 + n2, 1 + n3, 1, 0, 0, 0, 0, -1 + n9, 
      1, 1, 1, 0, 1])/(-1 + n9) + 
   ((-2 + d - n9)*j[p4, n1, -1 + n2, 1 + n3, 1, 0, 0, 0, 0, -1 + n9, 1, 1, 1, 
      1, 1])/(2*(-1 + n9)) - j[p4, n1, -1 + n2, 1 + n3, 1, 0, 0, 0, 0, n9, 1, 
     1, 1, 1, 0]/2 + j[p4, n1, -1 + n2, 1 + n3, 1, 0, 0, 0, 0, n9, 1, 1, 1, 
    1, 1] - j[p4, n1, -1 + n2, 1 + n3, 2, 0, 0, 0, 0, -1 + n9, 1, 1, 1, 1, 0]/
    (2*(-1 + n9)) - j[p4, n1, n2, n3, 1, 0, 0, 0, 0, -2 + n9, 1, 1, 1, 1, 2]/
    (2*(-1 + n9)) + ((4 - d - 2*n2 + 2*n3)*j[p4, n1, n2, n3, 1, 0, 0, 0, 0, 
      -1 + n9, 1, 1, 1, 1, 1])/(2*(-1 + n9)) + 
   j[p4, n1, n2, n3, 1, 0, 0, 0, 0, -1 + n9, 1, 1, 1, 2, 0]/(-1 + n9) + 
   j[p4, n1, n2, n3, 1, 0, 0, 0, 0, n9, 1, 1, 1, 1, 0] - 
   j[p4, n1, n2, n3, 2, 0, 0, 0, 0, -2 + n9, 1, 1, 1, 1, 1]/(2*(-1 + n9)) + 
   j[p4, n1, n2, n3, 2, 0, 0, 0, 0, -1 + n9, 0, 1, 1, 1, 1]/(2*(-1 + n9)) - 
   j[p4, n1, n2, n3, 2, 0, 0, 0, 0, -1 + n9, 1, 0, 1, 1, 1]/(2*(-1 + n9)) - 
   j[p4, n1, n2, n3, 2, 0, 0, 0, 0, -1 + n9, 1, 1, 1, 1, 1]/(2*(-1 + n9)) + 
   ((-1 - n3)*j[p4, n1, n2, 1 + n3, 0, 0, 0, 0, 0, -1 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9) + j[p4, n1, n2, 1 + n3, 0, 0, 0, 0, 0, -1 + n9, 1, 1, 1, 1, 2]/
    (2*(-1 + n9)) + j[p4, n1, n2, 1 + n3, 0, 0, 0, 0, 0, n9, 1, 1, 1, 1, 1]/
    2 + j[p4, n1, n2, 1 + n3, 1, -1, 0, 0, 0, -1 + n9, 1, 1, 0, 2, 1]/
    (-1 + n9) + ((-2 + d - 2*n2)*j[p4, n1, n2, 1 + n3, 1, -1, 0, 0, 0, 
      -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) + 
   ((-2 + d + 2*n2 - 2*n3 - n9)*j[p4, n1, n2, 1 + n3, 1, 0, 0, -1, 0, 
      -1 + n9, 1, 1, 1, 1, 1])/(2*(-1 + n9)) + 
   j[p4, n1, n2, 1 + n3, 1, 0, 0, -1, 0, -1 + n9, 1, 1, 1, 2, 0]/(1 - n9) - 
   j[p4, n1, n2, 1 + n3, 1, 0, 0, -1, 0, n9, 1, 1, 1, 1, 0]/2 + 
   ((-2 + d + 2*n2 - 2*n3 - n9)*j[p4, n1, n2, 1 + n3, 1, 0, 0, 0, -1, 
      -1 + n9, 1, 1, 1, 1, 1])/(2*(-1 + n9)) + 
   j[p4, n1, n2, 1 + n3, 1, 0, 0, 0, -1, -1 + n9, 1, 1, 1, 2, 0]/(1 - n9) - 
   j[p4, n1, n2, 1 + n3, 1, 0, 0, 0, -1, n9, 1, 1, 1, 1, 0]/2 + 
   (n1*j[p4, n1, n2, 1 + n3, 1, 0, 0, 0, 0, -2 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9) + j[p4, n1, n2, 1 + n3, 1, 0, 0, 0, 0, -1 + n9, 1, 1, 0, 1, 1]/
    (1 - n9) + (n1*j[p4, n1, n2, 1 + n3, 1, 0, 0, 0, 0, -1 + n9, 1, 1, 1, 0, 
      1])/(-1 + n9) + (n3*j[p4, n1, n2, 1 + n3, 1, 0, 0, 0, 0, -1 + n9, 1, 1, 
      1, 1, 0])/(-1 + n9) + ((-n1 + n2 - n3)*j[p4, n1, n2, 1 + n3, 1, 0, 0, 
      0, 0, -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) + 
   j[p4, n1, n2, 1 + n3, 1, 0, 0, 0, 0, -1 + n9, 1, 1, 1, 2, 0]/(1 - n9) - 
   j[p4, n1, n2, 1 + n3, 1, 0, 0, 0, 0, n9, 0, 1, 1, 1, 1]/2 + 
   j[p4, n1, n2, 1 + n3, 1, 0, 0, 0, 0, n9, 1, 0, 1, 1, 1]/2 - 
   j[p4, n1, n2, 1 + n3, 1, 0, 0, 0, 0, n9, 1, 1, 1, 1, 0]/2 + 
   j[p4, n1, n2, 1 + n3, 1, 0, 0, 0, 0, n9, 1, 1, 1, 1, 1]/2 + 
   j[p4, n1, n2, 1 + n3, 2, 0, 0, -1, 0, -1 + n9, 1, 1, 1, 1, 0]/
    (2*(-1 + n9)) + j[p4, n1, n2, 1 + n3, 2, 0, 0, 0, -1, -1 + n9, 1, 1, 1, 
     1, 0]/(2*(-1 + n9)) + j[p4, n1, n2, 1 + n3, 2, 0, 0, 0, 0, -1 + n9, 1, 
     1, 1, 1, 0]/(2*(-1 + n9)) + 
   ((1 + n3)*j[p4, n1, n2, 2 + n3, 0, 0, 0, -1, 0, -1 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9) + ((1 + n3)*j[p4, n1, n2, 2 + n3, 0, 0, 0, 0, -1, -1 + n9, 1, 
      1, 1, 1, 1])/(-1 + n9) + 
   ((1 + n3)*j[p4, n1, n2, 2 + n3, 0, 0, 0, 0, 0, -1 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9) + ((-1 - n3)*j[p4, n1, n2, 2 + n3, 1, 0, 0, -1, 0, -1 + n9, 1, 
      1, 1, 1, 0])/(-1 + n9) + 
   ((-1 - n3)*j[p4, n1, n2, 2 + n3, 1, 0, 0, 0, -1, -1 + n9, 1, 1, 1, 1, 0])/
    (-1 + n9) + ((-1 - n3)*j[p4, n1, n2, 2 + n3, 1, 0, 0, 0, 0, -1 + n9, 1, 
      1, 1, 1, 0])/(-1 + n9) - 
   (n2*j[p4, n1, 1 + n2, -1 + n3, 1, 0, 0, 0, 0, -1 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9) - (n2*j[p4, n1, 1 + n2, n3, 1, -1, 0, 0, 0, -1 + n9, 1, 1, 1, 
      1, 1])/(-1 + n9) + (n2*j[p4, n1, 1 + n2, n3, 1, 0, -1, 0, 0, -1 + n9, 
      1, 1, 1, 1, 1])/(-1 + n9) + 
   (2*n2*j[p4, n1, 1 + n2, n3, 1, 0, 0, -1, 0, -1 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9) + (2*n2*j[p4, n1, 1 + n2, n3, 1, 0, 0, 0, -1, -1 + n9, 1, 1, 1, 
      1, 1])/(-1 + n9) - (n2*j[p4, n1, 1 + n2, n3, 1, 0, 0, 0, 0, -1 + n9, 1, 
      1, 0, 1, 1])/(-1 + n9) + 
   (2*n2*j[p4, n1, 1 + n2, n3, 1, 0, 0, 0, 0, -1 + n9, 1, 1, 1, 0, 1])/
    (-1 + n9) + (n2*j[p4, n1, 1 + n2, n3, 1, 0, 0, 0, 0, -1 + n9, 1, 1, 1, 1, 
      1])/(-1 + n9) + (n2*j[p4, n1, 1 + n2, 1 + n3, 1, -1, 0, -1, 0, -1 + n9, 
      1, 1, 1, 1, 1])/(-1 + n9) + 
   (n2*j[p4, n1, 1 + n2, 1 + n3, 1, -1, 0, 0, -1, -1 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9) - (2*n2*j[p4, n1, 1 + n2, 1 + n3, 1, -1, 0, 0, 0, -1 + n9, 0, 
      1, 1, 1, 1])/(-1 + n9) + 
   (n2*j[p4, n1, 1 + n2, 1 + n3, 1, -1, 0, 0, 0, -1 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9) - (n2*j[p4, n1, 1 + n2, 1 + n3, 1, 0, -1, -1, 0, -1 + n9, 1, 1, 
      1, 1, 1])/(-1 + n9) - (n2*j[p4, n1, 1 + n2, 1 + n3, 1, 0, -1, 0, -1, 
      -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) - 
   (n2*j[p4, n1, 1 + n2, 1 + n3, 1, 0, -1, 0, 0, -1 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9) - (n2*j[p4, n1, 1 + n2, 1 + n3, 1, 0, 0, -2, 0, -1 + n9, 1, 1, 
      1, 1, 1])/(-1 + n9) - (2*n2*j[p4, n1, 1 + n2, 1 + n3, 1, 0, 0, -1, -1, 
      -1 + n9, 1, 1, 1, 1, 1])/(-1 + n9) + 
   (n2*j[p4, n1, 1 + n2, 1 + n3, 1, 0, 0, -1, 0, -1 + n9, 1, 1, 0, 1, 1])/
    (-1 + n9) - (2*n2*j[p4, n1, 1 + n2, 1 + n3, 1, 0, 0, -1, 0, -1 + n9, 1, 
      1, 1, 0, 1])/(-1 + n9) - 
   (n2*j[p4, n1, 1 + n2, 1 + n3, 1, 0, 0, -1, 0, -1 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9) - (n2*j[p4, n1, 1 + n2, 1 + n3, 1, 0, 0, 0, -2, -1 + n9, 1, 1, 
      1, 1, 1])/(-1 + n9) + (n2*j[p4, n1, 1 + n2, 1 + n3, 1, 0, 0, 0, -1, 
      -1 + n9, 1, 1, 0, 1, 1])/(-1 + n9) - 
   (2*n2*j[p4, n1, 1 + n2, 1 + n3, 1, 0, 0, 0, -1, -1 + n9, 1, 1, 1, 0, 1])/
    (-1 + n9) - (n2*j[p4, n1, 1 + n2, 1 + n3, 1, 0, 0, 0, -1, -1 + n9, 1, 1, 
      1, 1, 1])/(-1 + n9) + (n2*j[p4, n1, 1 + n2, 1 + n3, 1, 0, 0, 0, 0, 
      -1 + n9, 1, 1, 0, 1, 1])/(-1 + n9) - 
   (2*n2*j[p4, n1, 1 + n2, 1 + n3, 1, 0, 0, 0, 0, -1 + n9, 1, 1, 1, 0, 1])/
    (-1 + n9) - (n1*j[p4, 1 + n1, -1 + n2, 1 + n3, 1, -1, 0, 0, 0, -1 + n9, 
      1, 1, 1, 1, 1])/(-1 + n9) - 
   (n1*j[p4, 1 + n1, n2, n3, 1, -1, 0, 0, 0, -1 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9) + (n1*j[p4, 1 + n1, n2, n3, 1, 0, 0, 0, 0, -2 + n9, 1, 1, 1, 1, 
      1])/(-1 + n9) + (n1*j[p4, 1 + n1, n2, n3, 1, 0, 0, 0, 0, -1 + n9, 1, 1, 
      1, 0, 1])/(-1 + n9) - (n1*j[p4, 1 + n1, n2, n3, 1, 0, 0, 0, 0, -1 + n9, 
      1, 1, 1, 1, 1])/(-1 + n9) + 
   (n1*j[p4, 1 + n1, n2, 1 + n3, 1, -1, 0, -1, 0, -1 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9) + (n1*j[p4, 1 + n1, n2, 1 + n3, 1, -1, 0, 0, -1, -1 + n9, 1, 1, 
      1, 1, 1])/(-1 + n9) + (n1*j[p4, 1 + n1, n2, 1 + n3, 1, -1, 0, 0, 0, 
      -1 + n9, 0, 1, 1, 1, 1])/(-1 + n9) + 
   (n1*j[p4, 1 + n1, n2, 1 + n3, 1, -1, 0, 0, 0, -1 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9) - (n1*j[p4, 1 + n1, n2, 1 + n3, 1, 0, 0, -1, 0, -2 + n9, 1, 1, 
      1, 1, 1])/(-1 + n9) - (n1*j[p4, 1 + n1, n2, 1 + n3, 1, 0, 0, -1, 0, 
      -1 + n9, 1, 1, 1, 0, 1])/(-1 + n9) + 
   (n1*j[p4, 1 + n1, n2, 1 + n3, 1, 0, 0, -1, 0, -1 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9) - (n1*j[p4, 1 + n1, n2, 1 + n3, 1, 0, 0, 0, -1, -2 + n9, 1, 1, 
      1, 1, 1])/(-1 + n9) - (n1*j[p4, 1 + n1, n2, 1 + n3, 1, 0, 0, 0, -1, 
      -1 + n9, 1, 1, 1, 0, 1])/(-1 + n9) + 
   (n1*j[p4, 1 + n1, n2, 1 + n3, 1, 0, 0, 0, -1, -1 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9) - (n1*j[p4, 1 + n1, n2, 1 + n3, 1, 0, 0, 0, 0, -2 + n9, 1, 1, 
      1, 1, 1])/(-1 + n9) - (n1*j[p4, 1 + n1, n2, 1 + n3, 1, 0, 0, 0, 0, 
      -1 + n9, 1, 1, 1, 0, 1])/(-1 + n9) + 
   (n1*j[p4, 1 + n1, n2, 1 + n3, 1, 0, 0, 0, 0, -1 + n9, 1, 1, 1, 1, 1])/
    (-1 + n9), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 1 && n14 == 1 && n3 == 0 && n4 == 1 && 
    n5 == 0 && n7 == 0 && n8 == 0 && n9 == 1 && n13 != 1 -> 
  ((-4 + d)*j[p4, 0, n2, 0, 2, 0, n6, 0, 0, 1, 1, n11, 1, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n2*j[p4, 0, 1 + n2, -1, 2, 0, n6, 0, 0, 1, 1, n11, 1, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + ((-4*n2 + 2*n13*n2 - 2*n2^2)*
     j[p4, 0, 1 + n2, 0, 1, 0, n6, 0, 0, 1, 1, n11, 1, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n2*j[p4, 0, 1 + n2, 0, 2, -1, n6, 0, 0, 1, 1, n11, 1, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (2*n2*j[p4, 0, 1 + n2, 0, 2, 0, -1 + n6, 0, 0, 1, 1, n11, 1, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n2*j[p4, 0, 1 + n2, 0, 2, 0, n6, -1, 0, 1, 1, n11, 1, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (2*n2*j[p4, 0, 1 + n2, 0, 2, 0, n6, 0, -1, 1, 1, n11, 1, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n2*j[p4, 0, 1 + n2, 0, 2, 0, n6, 0, 0, 1, 1, n11, 1, -1 + n13, 0])/
    ((d - 2*n13)*(-1 + n13)) + 
   ((-n2 - n2^2)*j[p4, 0, 2 + n2, -1, 1, 0, n6, 0, 0, 1, 1, n11, 1, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((n2 + n2^2)*j[p4, 0, 2 + n2, 0, 1, 0, n6, -1, 0, 1, 1, n11, 1, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((n2 + n2^2)*j[p4, 0, 2 + n2, 0, 1, 0, n6, 0, -1, 1, 1, n11, 1, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((-n2 - n2^2)*j[p4, 0, 2 + n2, 0, 1, 0, n6, 0, 0, 1, 1, n11, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((2*n2 + 2*n2^2)*j[p4, 0, 2 + n2, 0, 1, 0, n6, 0, 0, 1, 1, n11, 1, 
      -2 + n13, 1])/((d - 2*n13)*(-1 + n13)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n12 == 1 && n13 == 1 && n14 == 1 && n3 == 0 && n4 == 1 && 
    n5 == 0 && n7 == 0 && n8 == 0 && n9 == 1 &&  !(n11 == 1 || n6 == 0) -> 
  ((1 + n6)*j[p4, -1 + n1, -1 + n2, 0, 1, 0, 2 + n6, 0, 0, 1, 1, -1 + n11, 1, 
      1, 1])/(-1 + n11) + ((1 + n6)*j[p4, -1 + n1, n2, -1, 1, 0, 2 + n6, 0, 
      0, 1, 1, -1 + n11, 1, 1, 1])/(-1 + n11) + 
   ((-4 + n11 - n6)*j[p4, -1 + n1, n2, 0, 1, 0, 1 + n6, 0, 0, 1, 1, -1 + n11, 
      1, 1, 1])/(-1 + n11) + j[p4, -1 + n1, n2, 0, 1, 0, 1 + n6, 0, 0, 1, 1, 
    n11, 0, 1, 1] - j[p4, -1 + n1, n2, 0, 1, 0, 1 + n6, 0, 0, 1, 1, n11, 1, 
    1, 1] + j[p4, -1 + n1, n2, 0, 1, 0, 1 + n6, 0, 0, 2, 1, -1 + n11, 1, 1, 
     0]/(1 - n11) + (2*j[p4, -1 + n1, n2, 0, 1, 0, 1 + n6, 0, 0, 2, 1, 
      -1 + n11, 1, 1, 1])/(-1 + n11) + 
   ((-1 - n6)*j[p4, -1 + n1, n2, 0, 1, 0, 2 + n6, -1, 0, 1, 1, -1 + n11, 1, 
      1, 1])/(-1 + n11) + ((-1 - n6)*j[p4, -1 + n1, n2, 0, 1, 0, 2 + n6, 0, 
      -1, 1, 1, -1 + n11, 1, 1, 1])/(-1 + n11) + 
   ((1 + n6)*j[p4, -1 + n1, n2, 0, 1, 0, 2 + n6, 0, 0, 1, 1, -1 + n11, 0, 1, 
      1])/(-1 + n11) + ((-1 - n6)*j[p4, -1 + n1, n2, 0, 1, 0, 2 + n6, 0, 0, 
      1, 1, -1 + n11, 1, 0, 1])/(-1 + n11) + 
   ((-1 - n6)*j[p4, -1 + n1, n2, 0, 1, 0, 2 + n6, 0, 0, 1, 1, -1 + n11, 1, 1, 
      0])/(-1 + n11) - (n2*j[p4, -1 + n1, 1 + n2, 0, 1, 0, n6, 0, 0, 1, 1, 
      -1 + n11, 1, 1, 1])/(-1 + n11) + 
   (n2*j[p4, -1 + n1, 1 + n2, 0, 1, 0, 1 + n6, -1, 0, 1, 1, -1 + n11, 1, 1, 
      1])/(-1 + n11) + (n2*j[p4, -1 + n1, 1 + n2, 0, 1, 0, 1 + n6, 0, -1, 1, 
      1, -1 + n11, 1, 1, 1])/(-1 + n11) + 
   ((-1 - n6)*j[p4, n1, -2 + n2, 0, 1, 0, 2 + n6, 0, 0, 1, 1, -1 + n11, 1, 1, 
      1])/(-1 + n11) + ((-1 - n6)*j[p4, n1, -1 + n2, -1, 1, 0, 2 + n6, 0, 0, 
      1, 1, -1 + n11, 1, 1, 1])/(-1 + n11) + 
   ((4 - n11 + 2*n6)*j[p4, n1, -1 + n2, 0, 1, 0, 1 + n6, 0, 0, 1, 1, 
      -1 + n11, 1, 1, 1])/(-1 + n11) - j[p4, n1, -1 + n2, 0, 1, 0, 1 + n6, 0, 
    0, 1, 1, n11, 0, 1, 1] + j[p4, n1, -1 + n2, 0, 1, 0, 1 + n6, 0, 0, 1, 1, 
    n11, 1, 1, 1] + j[p4, n1, -1 + n2, 0, 1, 0, 1 + n6, 0, 0, 2, 1, -1 + n11, 
     1, 1, 0]/(-1 + n11) + j[p4, n1, -1 + n2, 0, 1, 0, 1 + n6, 0, 0, 2, 1, 
     -1 + n11, 1, 1, 1]/(1 - n11) + 
   ((2 + 2*n6)*j[p4, n1, -1 + n2, 0, 1, 0, 2 + n6, -1, 0, 1, 1, -1 + n11, 1, 
      1, 1])/(-1 + n11) + ((1 + n6)*j[p4, n1, -1 + n2, 0, 1, 0, 2 + n6, 0, 
      -1, 1, 1, -1 + n11, 1, 1, 1])/(-1 + n11) + 
   ((-1 - n6)*j[p4, n1, -1 + n2, 0, 1, 0, 2 + n6, 0, 0, 1, 1, -1 + n11, 0, 1, 
      1])/(-1 + n11) + ((1 + n6)*j[p4, n1, -1 + n2, 0, 1, 0, 2 + n6, 0, 0, 1, 
      1, -1 + n11, 1, 0, 1])/(-1 + n11) + 
   ((1 + n6)*j[p4, n1, -1 + n2, 0, 1, 0, 2 + n6, 0, 0, 1, 1, -1 + n11, 1, 1, 
      0])/(-1 + n11) + ((1 + n6)*j[p4, n1, n2, -1, 1, 0, 2 + n6, -1, 0, 1, 1, 
      -1 + n11, 1, 1, 1])/(-1 + n11) + 
   ((-1 - n6)*j[p4, n1, n2, -1, 1, 0, 2 + n6, 0, 0, 1, 1, -1 + n11, 1, 1, 1])/
    (-1 + n11) + j[p4, n1, n2, -1, 2, 0, 1 + n6, 0, 0, 1, 1, -1 + n11, 1, 1, 
     1]/(1 - n11) + ((1 + n6)*j[p4, n1, n2, 0, 0, 0, 1 + n6, 0, 0, 1, 1, 
      -1 + n11, 1, 1, 1])/(-1 + n11) + 
   j[p4, n1, n2, 0, 1, -1, 1 + n6, 0, 0, 0, 1, -1 + n11, 1, 1, 2]/(1 - n11) + 
   ((-8 + 3*d - n1 - n11 - 2*n6)*j[p4, n1, n2, 0, 1, -1, 1 + n6, 0, 0, 1, 1, 
      -1 + n11, 1, 1, 1])/(-1 + n11) - j[p4, n1, n2, 0, 1, -1, 1 + n6, 0, 0, 
    1, 1, n11, 0, 1, 1] + j[p4, n1, n2, 0, 1, -1, 1 + n6, 0, 0, 1, 1, n11, 1, 
    1, 1] + j[p4, n1, n2, 0, 1, -1, 1 + n6, 0, 0, 2, 1, -1 + n11, 1, 1, 1]/
    (1 - n11) + ((-1 - n6)*j[p4, n1, n2, 0, 1, -1, 2 + n6, 0, 0, 0, 1, 
      -1 + n11, 1, 1, 1])/(-1 + n11) + 
   ((1 + n6)*j[p4, n1, n2, 0, 1, -1, 2 + n6, 0, 0, 1, 0, -1 + n11, 1, 1, 1])/
    (-1 + n11) + ((-1 - n6)*j[p4, n1, n2, 0, 1, -1, 2 + n6, 0, 0, 1, 1, 
      -1 + n11, 1, 1, 1])/(-1 + n11) + 
   ((8 - 4*d + n1 + n11 + 2*n2 + n6)*j[p4, n1, n2, 0, 1, 0, n6, 0, 0, 1, 1, 
      -1 + n11, 1, 1, 1])/(-1 + n11) + j[p4, n1, n2, 0, 1, 0, n6, 0, 0, 1, 1, 
    n11, 0, 1, 1] + j[p4, n1, n2, 0, 1, 0, n6, 0, 0, 1, 2, -2 + n11, 1, 1, 1]/
    (1 - n11) + j[p4, n1, n2, 0, 1, 0, 1 + n6, -1, 0, 0, 2, -1 + n11, 1, 1, 
     1]/(-1 + n11) + ((-13 + 4*d - n1 - 2*n2 - 4*n6)*
     j[p4, n1, n2, 0, 1, 0, 1 + n6, -1, 0, 1, 1, -1 + n11, 1, 1, 1])/
    (-1 + n11) + j[p4, n1, n2, 0, 1, 0, 1 + n6, -1, 0, 2, 1, -1 + n11, 1, 1, 
     0]/(1 - n11) + j[p4, n1, n2, 0, 1, 0, 1 + n6, -1, 0, 2, 1, -1 + n11, 1, 
     1, 1]/(-1 + n11) + ((-4 + d - n2 - 2*n6)*j[p4, n1, n2, 0, 1, 0, 1 + n6, 
      0, -1, 1, 1, -1 + n11, 1, 1, 1])/(-1 + n11) + 
   ((1 - n6)*j[p4, n1, n2, 0, 1, 0, 1 + n6, 0, 0, 0, 1, -1 + n11, 1, 1, 1])/
    (-1 + n11) + ((1 + n6)*j[p4, n1, n2, 0, 1, 0, 1 + n6, 0, 0, 1, 0, 
      -1 + n11, 1, 1, 1])/(-1 + n11) + 
   j[p4, n1, n2, 0, 1, 0, 1 + n6, 0, 0, 1, 1, -2 + n11, 1, 1, 1]/(1 - n11) + 
   j[p4, n1, n2, 0, 1, 0, 1 + n6, 0, 0, 1, 1, -1 + n11, 1, 0, 1]/(-1 + n11) + 
   j[p4, n1, n2, 0, 1, 0, 1 + n6, 0, 0, 1, 1, -1 + n11, 1, 0, 2]/(-1 + n11) + 
   j[p4, n1, n2, 0, 1, 0, 1 + n6, 0, 0, 1, 1, -1 + n11, 1, 1, 0]/(1 - n11) + 
   j[p4, n1, n2, 0, 1, 0, 1 + n6, 0, 0, 1, 1, -1 + n11, 1, 1, 1]/(-1 + n11) + 
   j[p4, n1, n2, 0, 1, 0, 1 + n6, 0, 0, 2, 1, -1 + n11, 1, 1, 0]/(-1 + n11) + 
   j[p4, n1, n2, 0, 1, 0, 1 + n6, 0, 0, 2, 1, -1 + n11, 1, 1, 1]/(1 - n11) + 
   ((-1 - n6)*j[p4, n1, n2, 0, 1, 0, 2 + n6, -2, 0, 1, 1, -1 + n11, 1, 1, 1])/
    (-1 + n11) + ((-1 - n6)*j[p4, n1, n2, 0, 1, 0, 2 + n6, -1, -1, 1, 1, 
      -1 + n11, 1, 1, 1])/(-1 + n11) + 
   ((1 + n6)*j[p4, n1, n2, 0, 1, 0, 2 + n6, -1, 0, 0, 1, -1 + n11, 1, 1, 1])/
    (-1 + n11) + ((-1 - n6)*j[p4, n1, n2, 0, 1, 0, 2 + n6, -1, 0, 1, 0, 
      -1 + n11, 1, 1, 1])/(-1 + n11) + 
   ((1 + n6)*j[p4, n1, n2, 0, 1, 0, 2 + n6, -1, 0, 1, 1, -1 + n11, 0, 1, 1])/
    (-1 + n11) + ((-1 - n6)*j[p4, n1, n2, 0, 1, 0, 2 + n6, -1, 0, 1, 1, 
      -1 + n11, 1, 0, 1])/(-1 + n11) + 
   ((-1 - n6)*j[p4, n1, n2, 0, 1, 0, 2 + n6, -1, 0, 1, 1, -1 + n11, 1, 1, 0])/
    (-1 + n11) + ((1 + n6)*j[p4, n1, n2, 0, 1, 0, 2 + n6, -1, 0, 1, 1, 
      -1 + n11, 1, 1, 1])/(-1 + n11) + 
   ((1 + n6)*j[p4, n1, n2, 0, 1, 0, 2 + n6, 0, -1, 0, 1, -1 + n11, 1, 1, 1])/
    (-1 + n11) + ((-1 - n6)*j[p4, n1, n2, 0, 1, 0, 2 + n6, 0, -1, 1, 0, 
      -1 + n11, 1, 1, 1])/(-1 + n11) + 
   ((1 + n6)*j[p4, n1, n2, 0, 1, 0, 2 + n6, 0, -1, 1, 1, -1 + n11, 1, 1, 1])/
    (-1 + n11) + ((-1 - n6)*j[p4, n1, n2, 0, 1, 0, 2 + n6, 0, 0, 1, 1, 
      -1 + n11, 0, 1, 1])/(-1 + n11) + 
   ((1 + n6)*j[p4, n1, n2, 0, 1, 0, 2 + n6, 0, 0, 1, 1, -1 + n11, 1, 0, 1])/
    (-1 + n11) + ((1 + n6)*j[p4, n1, n2, 0, 1, 0, 2 + n6, 0, 0, 1, 1, 
      -1 + n11, 1, 1, 0])/(-1 + n11) + 
   j[p4, n1, n2, 0, 2, -1, 1 + n6, 0, 0, 0, 1, -1 + n11, 1, 1, 1]/(1 - n11) + 
   j[p4, n1, n2, 0, 2, -1, 1 + n6, 0, 0, 1, 0, -1 + n11, 1, 1, 1]/
    (-1 + n11) + j[p4, n1, n2, 0, 2, -1, 1 + n6, 0, 0, 1, 1, -2 + n11, 1, 1, 
     1]/(1 - n11) + j[p4, n1, n2, 0, 2, -1, 1 + n6, 0, 0, 1, 1, -1 + n11, 1, 
     1, 1]/(1 - n11) + j[p4, n1, n2, 0, 2, 0, n6, 0, 0, 0, 1, -1 + n11, 1, 1, 
     1]/(1 - n11) + j[p4, n1, n2, 0, 2, 0, n6, 0, 0, 1, 0, -1 + n11, 1, 1, 1]/
    (-1 + n11) + j[p4, n1, n2, 0, 2, 0, n6, 0, 0, 1, 1, -2 + n11, 1, 1, 1]/
    (1 - n11) + j[p4, n1, n2, 0, 2, 0, 1 + n6, -1, 0, 0, 1, -1 + n11, 1, 1, 
     1]/(-1 + n11) + j[p4, n1, n2, 0, 2, 0, 1 + n6, -1, 0, 1, 0, -1 + n11, 1, 
     1, 1]/(1 - n11) + j[p4, n1, n2, 0, 2, 0, 1 + n6, -1, 0, 1, 1, -2 + n11, 
     1, 1, 1]/(-1 + n11) + j[p4, n1, n2, 0, 2, 0, 1 + n6, -1, 0, 1, 1, 
     -1 + n11, 1, 1, 1]/(-1 + n11) + j[p4, n1, n2, 0, 2, 0, 1 + n6, 0, -1, 0, 
     1, -1 + n11, 1, 1, 1]/(-1 + n11) + 
   j[p4, n1, n2, 0, 2, 0, 1 + n6, 0, -1, 1, 0, -1 + n11, 1, 1, 1]/(1 - n11) + 
   j[p4, n1, n2, 0, 2, 0, 1 + n6, 0, -1, 1, 1, -2 + n11, 1, 1, 1]/
    (-1 + n11) + j[p4, n1, n2, 0, 2, 0, 1 + n6, 0, 0, 1, 1, -1 + n11, 1, 1, 
     0]/(-1 + n11) + (n2*j[p4, n1, 1 + n2, -1, 1, -1, 1 + n6, 0, 0, 1, 1, 
      -1 + n11, 1, 1, 1])/(-1 + n11) - 
   (n2*j[p4, n1, 1 + n2, -1, 1, 0, n6, 0, 0, 1, 1, -1 + n11, 1, 1, 1])/
    (-1 + n11) + (n2*j[p4, n1, 1 + n2, -1, 1, 0, 1 + n6, -1, 0, 1, 1, 
      -1 + n11, 1, 1, 1])/(-1 + n11) - 
   (n2*j[p4, n1, 1 + n2, 0, 1, -1, 1 + n6, 0, -1, 1, 1, -1 + n11, 1, 1, 1])/
    (-1 + n11) + (n2*j[p4, n1, 1 + n2, 0, 1, -1, 1 + n6, 0, 0, 1, 1, 
      -1 + n11, 0, 1, 1])/(-1 + n11) - 
   (2*n2*j[p4, n1, 1 + n2, 0, 1, -1, 1 + n6, 0, 0, 1, 1, -1 + n11, 1, 0, 1])/
    (-1 + n11) + (n2*j[p4, n1, 1 + n2, 0, 1, 0, n6, -1, 0, 1, 1, -1 + n11, 1, 
      1, 1])/(-1 + n11) + (n2*j[p4, n1, 1 + n2, 0, 1, 0, n6, 0, 0, 1, 0, 
      -1 + n11, 1, 1, 1])/(-1 + n11) - 
   (n2*j[p4, n1, 1 + n2, 0, 1, 0, n6, 0, 0, 1, 1, -1 + n11, 0, 1, 1])/
    (-1 + n11) + (2*n2*j[p4, n1, 1 + n2, 0, 1, 0, n6, 0, 0, 1, 1, -1 + n11, 
      1, 0, 1])/(-1 + n11) - (n2*j[p4, n1, 1 + n2, 0, 1, 0, 1 + n6, -2, 0, 1, 
      1, -1 + n11, 1, 1, 1])/(-1 + n11) - 
   (n2*j[p4, n1, 1 + n2, 0, 1, 0, 1 + n6, -1, -1, 1, 1, -1 + n11, 1, 1, 1])/
    (-1 + n11) - (n2*j[p4, n1, 1 + n2, 0, 1, 0, 1 + n6, -1, 0, 1, 0, 
      -1 + n11, 1, 1, 1])/(-1 + n11) + 
   (n2*j[p4, n1, 1 + n2, 0, 1, 0, 1 + n6, -1, 0, 1, 1, -1 + n11, 0, 1, 1])/
    (-1 + n11) - (2*n2*j[p4, n1, 1 + n2, 0, 1, 0, 1 + n6, -1, 0, 1, 1, 
      -1 + n11, 1, 0, 1])/(-1 + n11) - 
   (n2*j[p4, n1, 1 + n2, 0, 1, 0, 1 + n6, 0, -1, 1, 0, -1 + n11, 1, 1, 1])/
    (-1 + n11) - (n1*j[p4, 1 + n1, n2, 0, 1, -1, 1 + n6, 0, 0, 1, 1, 
      -1 + n11, 1, 0, 1])/(-1 + n11) + 
   (n1*j[p4, 1 + n1, n2, 0, 1, -1, 1 + n6, 0, 0, 1, 1, -1 + n11, 1, 1, 1])/
    (-1 + n11) + (n1*j[p4, 1 + n1, n2, 0, 1, 0, n6, 0, 0, 1, 1, -1 + n11, 1, 
      0, 1])/(-1 + n11) - (n1*j[p4, 1 + n1, n2, 0, 1, 0, n6, 0, 0, 1, 1, 
      -1 + n11, 1, 1, 1])/(-1 + n11) - 
   (n1*j[p4, 1 + n1, n2, 0, 1, 0, 1 + n6, -1, 0, 1, 1, -1 + n11, 1, 0, 1])/
    (-1 + n11) + (n1*j[p4, 1 + n1, n2, 0, 1, 0, 1 + n6, -1, 0, 1, 1, 
      -1 + n11, 1, 1, 1])/(-1 + n11), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 1 && n13 == 1 && n14 == 1 && n4 == 1 && 
    n6 == 0 && n7 == 0 && n8 == -1 && n9 == 1 &&  !(n2 == n3 || n5 == 0) -> 
  ((32 - 20*d + 2*d^2 + 12*n2 - 2*n2^2 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 12*n5 - 
      6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, -2 + n1, n2, n3, 0, 1 + n5, 0, 0, 0, 
      1, 1, 1, 1, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((32 - 20*d + 2*d^2 + 12*n2 - 2*n2^2 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 44*n5 - 
      26*d*n5 + 2*d^2*n5 + 18*n2*n5 - 2*n2^2*n5 + 3*n3*n5 + 3*d*n3*n5 - 
      5*n2*n3*n5 - 2*n3^2*n5 + 12*n5^2 - 6*d*n5^2 + 6*n2*n5^2 + 3*n3*n5^2)*
     j[p4, -2 + n1, n2, n3, 0, 2 + n5, 0, 0, -1, 1, 1, 1, 1, 1, 1])/
    ((n2 - n3)*(4 - d + n5)*(2 - d + n1 + n5)) + 
   ((-32 + 20*d - 2*d^2 - 12*n2 + 2*n2^2 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      12*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, -2 + n1, n2, n3, 1, 1 + n5, 
      0, 0, -1, 1, 1, 1, 0, 2, 1])/((n2 - n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((32 - 20*d + 2*d^2 + 12*n2 - 2*n2^2 + 3*d*n3 - 
      5*n2*n3 - 2*n3^2 + 12*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*
     j[p4, -2 + n1, n2, n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 2, 0])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-32 + 20*d - 2*d^2 - 12*n2 + 2*n2^2 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      12*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, -2 + n1, n2, n3, 1, 1 + n5, 
      0, 0, 0, 1, 1, 1, 0, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((32 - 20*d + 2*d^2 + 12*n2 - 2*n2^2 + 3*d*n3 - 
      5*n2*n3 - 2*n3^2 + 12*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*
     j[p4, -2 + n1, n2, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 0, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-32 + 20*d - 2*d^2 - 12*n2 + 2*n2^2 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      44*n5 + 26*d*n5 - 2*d^2*n5 - 18*n2*n5 + 2*n2^2*n5 - 3*n3*n5 - 
      3*d*n3*n5 + 5*n2*n3*n5 + 2*n3^2*n5 - 12*n5^2 + 6*d*n5^2 - 6*n2*n5^2 - 
      3*n3*n5^2)*j[p4, -2 + n1, n2, n3, 1, 2 + n5, 0, 0, -1, 1, 1, 1, 1, 0, 
      1])/(2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((32 - 20*d + 2*d^2 + 12*n2 - 2*n2^2 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 44*n5 - 
      26*d*n5 + 2*d^2*n5 + 18*n2*n5 - 2*n2^2*n5 + 3*n3*n5 + 3*d*n3*n5 - 
      5*n2*n3*n5 - 2*n3^2*n5 + 12*n5^2 - 6*d*n5^2 + 6*n2*n5^2 + 3*n3*n5^2)*
     j[p4, -2 + n1, n2, n3, 1, 2 + n5, 0, 0, -1, 1, 1, 1, 1, 1, 0])/
    (2*(n2 - n3)*(4 - d + n5)*(2 - d + n1 + n5)) + 
   ((32 - 20*d + 2*d^2 + 12*n2 - 2*n2^2 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 12*n5 - 
      6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, -2 + n1, n2, n3, 2, 1 + n5, 0, 0, -1, 
      1, 1, 1, 1, 1, 0])/(2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((32*n3 - 20*d*n3 + 2*d^2*n3 + 12*n2*n3 - 2*n2^2*n3 + 3*d*n3^2 - 
      5*n2*n3^2 - 2*n3^3 + 12*n3*n5 - 6*d*n3*n5 + 6*n2*n3*n5 + 3*n3^2*n5)*
     j[p4, -2 + n1, n2, 1 + n3, 0, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 1, 1])/
    (2*(-n2 + n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((32*n3 - 20*d*n3 + 2*d^2*n3 + 12*n2*n3 - 2*n2^2*n3 + 3*d*n3^2 - 
      5*n2*n3^2 - 2*n3^3 + 12*n3*n5 - 6*d*n3*n5 + 6*n2*n3*n5 + 3*n3^2*n5)*
     j[p4, -2 + n1, n2, 1 + n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 0, 1, 1])/
    ((-n2 + n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-32*n3 + 20*d*n3 - 2*d^2*n3 - 12*n2*n3 + 2*n2^2*n3 - 3*d*n3^2 + 
      5*n2*n3^2 + 2*n3^3 - 12*n3*n5 + 6*d*n3*n5 - 6*n2*n3*n5 - 3*n3^2*n5)*
     j[p4, -2 + n1, n2, 1 + n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 1, 0])/
    (2*(-n2 + n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((32*n2 - 20*d*n2 + 2*d^2*n2 + 12*n2^2 - 2*n2^3 + 3*d*n2*n3 - 5*n2^2*n3 - 
      2*n2*n3^2 + 12*n2*n5 - 6*d*n2*n5 + 6*n2^2*n5 + 3*n2*n3*n5)*
     j[p4, -2 + n1, 1 + n2, n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 0, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-32*n2 + 20*d*n2 - 2*d^2*n2 - 12*n2^2 + 2*n2^3 - 3*d*n2*n3 + 5*n2^2*n3 + 
      2*n2*n3^2 - 12*n2*n5 + 6*d*n2*n5 - 6*n2^2*n5 - 3*n2*n3*n5)*
     j[p4, -2 + n1, 1 + n2, n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 0, 1])/
    ((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((32 - 20*d + 2*d^2 + 12*n2 - 2*n2^2 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 12*n5 - 
      6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, -1 + n1, -1 + n2, n3, 1, 1 + n5, 0, 
      0, -1, 0, 1, 1, 1, 1, 2])/((n2 - n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((32 - 20*d + 2*d^2 + 12*n2 - 2*n2^2 + 3*d*n3 - 
      5*n2*n3 - 2*n3^2 + 12*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*
     j[p4, -1 + n1, -1 + n2, n3, 1, 1 + n5, 0, 0, -1, 0, 2, 1, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-32 + 20*d - 2*d^2 - 12*n2 + 2*n2^2 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      12*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, -1 + n1, -1 + n2, n3, 1, 
      1 + n5, 0, 0, -1, 1, 1, 0, 2, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((-32 + 20*d - 2*d^2 - 12*n2 + 2*n2^2 - 3*d*n3 + 
      5*n2*n3 + 2*n3^2 - 12*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*
     j[p4, -1 + n1, -1 + n2, n3, 1, 1 + n5, 0, 0, -1, 1, 1, 2, 0, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((32 - 20*d + 2*d^2 + 12*n2 - 2*n2^2 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 12*n5 - 
      6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, -1 + n1, -1 + n2, n3, 1, 1 + n5, 0, 
      0, 0, 1, 1, 0, 1, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((32 - 20*d + 2*d^2 + 12*n2 - 2*n2^2 + 3*d*n3 - 
      5*n2*n3 - 2*n3^2 + 12*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*
     j[p4, -1 + n1, -1 + n2, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 0, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-32 + 20*d - 2*d^2 - 12*n2 + 2*n2^2 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      12*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, -1 + n1, -1 + n2, n3, 1, 
      1 + n5, 0, 0, 0, 1, 1, 1, 1, 0, 1])/(2*(n2 - n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((-176 + 192*d - 60*d^2 + 4*d^3 - 8*n1 - 56*d*n1 + 
      38*d^2*n1 - 4*d^3*n1 + 184*n1^2 - 136*d*n1^2 + 22*d^2*n1^2 - 60*n2 + 
      12*d*n2 + 9*d^2*n2 - 30*n1*n2 + 9*d*n1*n2 - 9*d^2*n1*n2 + 90*n1^2*n2 - 
      21*d*n1^2*n2 + 26*n2^2 - 19*d*n2^2 - 25*n1*n2^2 + 19*d*n1*n2^2 - 
      n1^2*n2^2 + 6*n2^3 - 6*n1*n2^3 - 288*n3 + 306*d*n3 - 105*d^2*n3 + 
      12*d^3*n3 - 240*n1*n3 + 190*d*n1*n3 - 41*d^2*n1*n3 + 40*n1^2*n3 - 
      8*d*n1^2*n3 - 116*n2*n3 + 63*d*n2*n3 - 7*d^2*n2*n3 - 159*n1*n2*n3 + 
      66*d*n1*n2*n3 - 3*n1^2*n2*n3 + 15*n2^2*n3 - 11*d*n2^2*n3 - 
      20*n1*n2^2*n3 + 6*n2^3*n3 - 40*n3^2 + 3*d*n3^2 + 7*d^2*n3^2 - 
      78*n1*n3^2 + 31*d*n1*n3^2 - 2*n1^2*n3^2 + 45*n2*n3^2 - 33*d*n2*n3^2 - 
      18*n1*n2*n3^2 + 21*n2^2*n3^2 + 30*n3^3 - 19*d*n3^3 - 4*n1*n3^3 + 
      21*n2*n3^3 + 6*n3^4 - 160*n5 + 136*d*n5 - 28*d^2*n5 + 112*n1*n5 - 
      112*d*n1*n5 + 28*d^2*n1*n5 + 48*n1^2*n5 - 24*d*n1^2*n5 - 90*n2*n5 + 
      33*d*n2*n5 + 66*n1*n2*n5 - 33*d*n1*n2*n5 + 24*n1^2*n2*n5 - 5*n2^2*n5 + 
      5*n1*n2^2*n5 - 238*n3*n5 + 185*d*n3*n5 - 36*d^2*n3*n5 - 14*n1*n3*n5 + 
      7*d*n1*n3*n5 + 12*n1^2*n3*n5 - 128*n2*n3*n5 + 49*d*n2*n3*n5 - 
      18*n1*n2*n3*n5 - 13*n2^2*n3*n5 - 71*n3^2*n5 + 29*d*n3^2*n5 - 
      11*n1*n3^2*n5 - 18*n2*n3^2*n5 - 5*n3^3*n5 - 24*n5^2 + 12*d*n5^2 + 
      24*n1*n5^2 - 12*d*n1*n5^2 - 12*n2*n5^2 + 12*n1*n2*n5^2 - 30*n3*n5^2 + 
      12*d*n3*n5^2 + 6*n1*n3*n5^2 - 12*n2*n3*n5^2 - 6*n3^2*n5^2)*
     j[p4, -1 + n1, -1 + n2, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((32 - 20*d + 2*d^2 + 12*n2 - 2*n2^2 + 3*d*n3 - 
      5*n2*n3 - 2*n3^2 + 44*n5 - 26*d*n5 + 2*d^2*n5 + 18*n2*n5 - 2*n2^2*n5 + 
      3*n3*n5 + 3*d*n3*n5 - 5*n2*n3*n5 - 2*n3^2*n5 + 12*n5^2 - 6*d*n5^2 + 
      6*n2*n5^2 + 3*n3*n5^2)*j[p4, -1 + n1, -1 + n2, n3, 1, 2 + n5, 0, 0, -1, 
      0, 1, 1, 1, 1, 1])/((n2 - n3)*(4 - d + n5)*(2 - d + n1 + n5)) + 
   ((-8 + 4*d - 4*n1 + 2*d*n1 + 2*n2 - 3*d*n2 - n1*n2 + 2*n2^2 + 4*n3 - 
      3*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 16*n5 + 8*d*n5 - 4*n1*n5 + 
      2*d*n1*n5 - n2*n5 - 3*d*n2*n5 - n1*n2*n5 + 2*n2^2*n5 + n3*n5 - 
      3*d*n3*n5 - 2*n1*n3*n5 + 5*n2*n3*n5 + 2*n3^2*n5 - 8*n5^2 + 4*d*n5^2 - 
      3*n2*n5^2 - 3*n3*n5^2)*j[p4, -1 + n1, -1 + n2, n3, 1, 2 + n5, 0, 0, -1, 
      1, 1, 1, 1, 1, 1])/(2*(n2 - n3)*(4 - d + n5)*(2 - d + n1 + n5)) + 
   ((-32 + 20*d - 2*d^2 - 12*n2 + 2*n2^2 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      12*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, -1 + n1, -1 + n2, n3, 2, 
      1 + n5, 0, 0, -1, 1, 1, 1, 1, 1, 0])/(2*(n2 - n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((32*n3 - 20*d*n3 + 2*d^2*n3 + 12*n2*n3 - 
      2*n2^2*n3 + 3*d*n3^2 - 5*n2*n3^2 - 2*n3^3 + 12*n3*n5 - 6*d*n3*n5 + 
      6*n2*n3*n5 + 3*n3^2*n5)*j[p4, -1 + n1, -1 + n2, 1 + n3, 0, 1 + n5, 0, 
      0, -1, 1, 1, 1, 1, 1, 1])/(2*(-n2 + n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((-304*n3 + 352*d*n3 - 124*d^2*n3 + 12*d^3*n3 - 
      184*n1*n3 + 136*d*n1*n3 - 22*d^2*n1*n3 - 188*n2*n3 + 108*d*n2*n3 - 
      7*d^2*n2*n3 - 90*n1*n2*n3 + 21*d*n1*n2*n3 - 6*n2^2*n3 - 11*d*n2^2*n3 + 
      n1*n2^2*n3 + 6*n2^3*n3 - 80*n3^2 + 26*d*n3^2 + 7*d^2*n3^2 - 
      40*n1*n3^2 + 8*d*n1*n3^2 + 24*n2*n3^2 - 33*d*n2*n3^2 + 3*n1*n2*n3^2 + 
      21*n2^2*n3^2 + 24*n3^3 - 19*d*n3^3 + 2*n1*n3^3 + 21*n2*n3^3 + 6*n3^4 - 
      192*n3*n5 + 168*d*n3*n5 - 36*d^2*n3*n5 - 48*n1*n3*n5 + 24*d*n1*n3*n5 - 
      122*n2*n3*n5 + 49*d*n2*n3*n5 - 24*n1*n2*n3*n5 - 13*n2^2*n3*n5 - 
      70*n3^2*n5 + 29*d*n3^2*n5 - 12*n1*n3^2*n5 - 18*n2*n3^2*n5 - 5*n3^3*n5 - 
      24*n3*n5^2 + 12*d*n3*n5^2 - 12*n2*n3*n5^2 - 6*n3^2*n5^2)*
     j[p4, -1 + n1, -1 + n2, 1 + n3, 1, n5, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((304*n3 - 352*d*n3 + 124*d^2*n3 - 12*d^3*n3 + 
      184*n1*n3 - 136*d*n1*n3 + 22*d^2*n1*n3 + 188*n2*n3 - 108*d*n2*n3 + 
      7*d^2*n2*n3 + 90*n1*n2*n3 - 21*d*n1*n2*n3 + 6*n2^2*n3 + 11*d*n2^2*n3 - 
      n1*n2^2*n3 - 6*n2^3*n3 + 80*n3^2 - 26*d*n3^2 - 7*d^2*n3^2 + 
      40*n1*n3^2 - 8*d*n1*n3^2 - 24*n2*n3^2 + 33*d*n2*n3^2 - 3*n1*n2*n3^2 - 
      21*n2^2*n3^2 - 24*n3^3 + 19*d*n3^3 - 2*n1*n3^3 - 21*n2*n3^3 - 6*n3^4 + 
      192*n3*n5 - 168*d*n3*n5 + 36*d^2*n3*n5 + 48*n1*n3*n5 - 24*d*n1*n3*n5 + 
      122*n2*n3*n5 - 49*d*n2*n3*n5 + 24*n1*n2*n3*n5 + 13*n2^2*n3*n5 + 
      70*n3^2*n5 - 29*d*n3^2*n5 + 12*n1*n3^2*n5 + 18*n2*n3^2*n5 + 5*n3^3*n5 + 
      24*n3*n5^2 - 12*d*n3*n5^2 + 12*n2*n3*n5^2 + 6*n3^2*n5^2)*
     j[p4, -1 + n1, -1 + n2, 1 + n3, 1, 1 + n5, 0, -1, 0, 1, 1, 1, 1, 1, 1])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((-32*n3 + 20*d*n3 - 2*d^2*n3 - 12*n2*n3 + 
      2*n2^2*n3 - 3*d*n3^2 + 5*n2*n3^2 + 2*n3^3 - 12*n3*n5 + 6*d*n3*n5 - 
      6*n2*n3*n5 - 3*n3^2*n5)*j[p4, -1 + n1, -1 + n2, 1 + n3, 1, 1 + n5, 0, 
      0, -1, 1, 0, 1, 1, 1, 1])/((-n2 + n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((32*n3 - 20*d*n3 + 2*d^2*n3 + 12*n2*n3 - 
      2*n2^2*n3 + 3*d*n3^2 - 5*n2*n3^2 - 2*n3^3 + 12*n3*n5 - 6*d*n3*n5 + 
      6*n2*n3*n5 + 3*n3^2*n5)*j[p4, -1 + n1, -1 + n2, 1 + n3, 1, 1 + n5, 0, 
      0, -1, 1, 1, 0, 1, 1, 1])/((-n2 + n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((-32*n3 + 20*d*n3 - 2*d^2*n3 - 12*n2*n3 + 
      2*n2^2*n3 - 3*d*n3^2 + 5*n2*n3^2 + 2*n3^3 - 12*n3*n5 + 6*d*n3*n5 - 
      6*n2*n3*n5 - 3*n3^2*n5)*j[p4, -1 + n1, -1 + n2, 1 + n3, 1, 1 + n5, 0, 
      0, -1, 1, 1, 1, 0, 1, 1])/((-n2 + n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((-32*n3 + 20*d*n3 - 2*d^2*n3 - 12*n2*n3 + 
      2*n2^2*n3 - 3*d*n3^2 + 5*n2*n3^2 + 2*n3^3 - 12*n3*n5 + 6*d*n3*n5 - 
      6*n2*n3*n5 - 3*n3^2*n5)*j[p4, -1 + n1, -1 + n2, 1 + n3, 1, 1 + n5, 0, 
      0, -1, 1, 1, 1, 1, 1, 0])/(2*(-n2 + n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((32 - 20*d + 2*d^2 + 12*n2 - 2*n2^2 + 3*d*n3 - 
      5*n2*n3 - 2*n3^2 + 12*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*
     j[p4, -1 + n1, n2, -1 + n3, 1, 1 + n5, 0, 0, -1, 0, 2, 1, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((192 - 240*d + 96*d^2 - 12*d^3 - 192*n1 + 240*d*n1 - 96*d^2*n1 + 
      12*d^3*n1 + 496*n2 - 496*d*n2 + 148*d^2*n2 - 12*d^3*n2 - 8*n1*n2 + 
      8*d*n1*n2 - 2*d^2*n1*n2 + 236*n2^2 - 120*d*n2^2 + 7*d^2*n2^2 + 
      42*n1*n2^2 - 9*d*n1*n2^2 + 6*n2^3 + 11*d*n2^3 - n1*n2^3 - 6*n2^4 + 
      144*n3 - 108*d*n3 + 18*d^2*n3 - 144*n1*n3 + 108*d*n1*n3 - 
      18*d^2*n1*n3 + 152*n2*n3 - 44*d*n2*n3 - 7*d^2*n2*n3 - 32*n1*n2*n3 + 
      10*d*n1*n2*n3 - 24*n2^2*n3 + 33*d*n2^2*n3 - 3*n1*n2^2*n3 - 21*n2^3*n3 + 
      24*n3^2 - 6*d*n3^2 - 24*n1*n3^2 + 6*d*n1*n3^2 - 24*n2*n3^2 + 
      19*d*n2*n3^2 - 2*n1*n2*n3^2 - 21*n2^2*n3^2 - 6*n2*n3^3 + 48*n5 - 
      48*d*n5 + 12*d^2*n5 - 48*n1*n5 + 48*d*n1*n5 - 12*d^2*n1*n5 + 
      240*n2*n5 - 192*d*n2*n5 + 36*d^2*n2*n5 + 134*n2^2*n5 - 49*d*n2^2*n5 + 
      12*n1*n2^2*n5 + 13*n2^3*n5 + 36*n3*n5 - 18*d*n3*n5 - 36*n1*n3*n5 + 
      18*d*n1*n3*n5 + 88*n2*n3*n5 - 29*d*n2*n3*n5 - 6*n1*n2*n3*n5 + 
      18*n2^2*n3*n5 + 6*n3^2*n5 - 6*n1*n3^2*n5 + 5*n2*n3^2*n5 + 24*n2*n5^2 - 
      12*d*n2*n5^2 + 12*n2^2*n5^2 + 6*n2*n3*n5^2)*j[p4, -1 + n1, n2, -1 + n3, 
      1, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*
     (n2 - n3)*(-4 + d - n5)*(2 - d + n1 + n5)) + 
   ((-192 + 240*d - 96*d^2 + 12*d^3 + 192*n1 - 240*d*n1 + 96*d^2*n1 - 
      12*d^3*n1 - 528*n2 + 544*d*n2 - 172*d^2*n2 + 16*d^3*n2 - 8*n1*n2 + 
      8*d*n1*n2 - 2*d^2*n1*n2 - 260*n2^2 + 144*d*n2^2 - 13*d^2*n2^2 - 
      54*n1*n2^2 + 15*d*n1*n2^2 - 10*n2^3 - 9*d*n2^3 - n1*n2^3 + 6*n2^4 - 
      144*n3 + 108*d*n3 - 18*d^2*n3 + 144*n1*n3 - 108*d*n1*n3 + 
      18*d^2*n1*n3 - 184*n2*n3 + 76*d*n2*n3 - d^2*n2*n3 + 16*n1*n2*n3 - 
      2*d*n1*n2*n3 + 12*n2^2*n3 - 27*d*n2^2*n3 - 3*n1*n2^2*n3 + 21*n2^3*n3 - 
      24*n3^2 + 6*d*n3^2 + 24*n1*n3^2 - 6*d*n1*n3^2 + 16*n2*n3^2 - 
      15*d*n2*n3^2 - 2*n1*n2*n3^2 + 21*n2^2*n3^2 + 6*n2*n3^3 - 240*n5 + 
      288*d*n5 - 108*d^2*n5 + 12*d^3*n5 + 240*n1*n5 - 288*d*n1*n5 + 
      108*d^2*n1*n5 - 12*d^3*n1*n5 - 784*n2*n5 + 752*d*n2*n5 - 
      212*d^2*n2*n5 + 16*d^3*n2*n5 - 8*n1*n2*n5 + 8*d*n1*n2*n5 - 
      2*d^2*n1*n2*n5 - 406*n2^2*n5 + 199*d*n2^2*n5 - 13*d^2*n2^2*n5 - 
      66*n1*n2^2*n5 + 15*d*n1*n2^2*n5 - 25*n2^3*n5 - 9*d*n2^3*n5 - 
      n1*n2^3*n5 + 6*n2^4*n5 - 180*n3*n5 + 126*d*n3*n5 - 18*d^2*n3*n5 + 
      180*n1*n3*n5 - 126*d*n1*n3*n5 + 18*d^2*n1*n3*n5 - 288*n2*n3*n5 + 
      113*d*n2*n3*n5 - d^2*n2*n3*n5 + 22*n1*n2*n3*n5 - 2*d*n1*n2*n3*n5 - 
      12*n2^2*n3*n5 - 27*d*n2^2*n3*n5 - 3*n1*n2^2*n3*n5 + 21*n2^3*n3*n5 - 
      30*n3^2*n5 + 6*d*n3^2*n5 + 30*n1*n3^2*n5 - 6*d*n1*n3^2*n5 + 
      7*n2*n3^2*n5 - 15*d*n2*n3^2*n5 - 2*n1*n2*n3^2*n5 + 21*n2^2*n3^2*n5 + 
      6*n2*n3^3*n5 - 48*n5^2 + 48*d*n5^2 - 12*d^2*n5^2 + 48*n1*n5^2 - 
      48*d*n1*n5^2 + 12*d^2*n1*n5^2 - 280*n2*n5^2 + 220*d*n2*n5^2 - 
      40*d^2*n2*n5^2 - 158*n2^2*n5^2 + 55*d*n2^2*n5^2 - 12*n1*n2^2*n5^2 - 
      15*n2^3*n5^2 - 36*n3*n5^2 + 18*d*n3*n5^2 + 36*n1*n3*n5^2 - 
      18*d*n1*n3*n5^2 - 110*n2*n3*n5^2 + 37*d*n2*n3*n5^2 + 6*n1*n2*n3*n5^2 - 
      24*n2^2*n3*n5^2 - 6*n3^2*n5^2 + 6*n1*n3^2*n5^2 - 9*n2*n3^2*n5^2 - 
      24*n2*n5^3 + 12*d*n2*n5^3 - 12*n2^2*n5^3 - 6*n2*n3*n5^3)*
     j[p4, -1 + n1, n2, -1 + n3, 1, 2 + n5, 0, 0, -1, 1, 1, 1, 1, 1, 1])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((-32 + 20*d - 2*d^2 - 12*n2 + 2*n2^2 - 3*d*n3 + 
      5*n2*n3 + 2*n3^2 - 12*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*
     j[p4, -1 + n1, n2, -1 + n3, 2, 1 + n5, 0, 0, -1, 0, 1, 1, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((32 - 20*d + 2*d^2 + 12*n2 - 2*n2^2 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 12*n5 - 
      6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, -1 + n1, n2, -1 + n3, 2, 1 + n5, 0, 
      0, -1, 1, 0, 1, 1, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((-32 + 20*d - 2*d^2 - 12*n2 + 2*n2^2 - 3*d*n3 + 
      5*n2*n3 + 2*n3^2 - 12*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*
     j[p4, -1 + n1, n2, -1 + n3, 2, 1 + n5, 0, 0, -1, 1, 1, 0, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-128 + 80*d - 8*d^2 - 48*n2 + 8*n2^2 - 32*n3 + 8*d*n3 - 2*d^2*n3 + 
      8*n2*n3 + 2*n2^2*n3 + 8*n3^2 - 3*d*n3^2 + 5*n2*n3^2 + 2*n3^3 - 112*n5 + 
      64*d*n5 - 4*d^2*n5 - 48*n2*n5 + 4*n2^2*n5 - 24*n3*n5 + 4*n2*n3*n5 + 
      n3^2*n5 - 24*n5^2 + 12*d*n5^2 - 12*n2*n5^2 - 6*n3*n5^2)*
     j[p4, -1 + n1, n2, n3, 0, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((32 - 20*d + 2*d^2 + 12*n2 - 2*n2^2 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 12*n5 - 
      6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, -1 + n1, n2, n3, 0, 1 + n5, 0, 0, -1, 
      1, 1, 1, 1, 1, 2])/((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-32 + 20*d - 2*d^2 - 12*n2 + 2*n2^2 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      12*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, -1 + n1, n2, n3, 0, 1 + n5, 
      0, 0, -1, 1, 1, 1, 2, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((-32 + 20*d - 2*d^2 - 12*n2 + 2*n2^2 - 3*d*n3 + 
      5*n2*n3 + 2*n3^2 - 12*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*
     j[p4, -1 + n1, n2, n3, 0, 1 + n5, 0, 0, -1, 1, 1, 2, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((32 - 20*d + 2*d^2 + 12*n2 - 2*n2^2 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 12*n5 - 
      6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, -1 + n1, n2, n3, 0, 1 + n5, 0, 0, -1, 
      2, 1, 1, 1, 1, 1])/((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-448 + 528*d - 192*d^2 + 20*d^3 + 256*n1 - 384*d*n1 + 168*d^2*n1 - 
      20*d^3*n1 + 192*n1^2 - 144*d*n1^2 + 24*d^2*n1^2 - 320*n2 + 200*d*n2 - 
      20*d^2*n2 + 224*n1*n2 - 176*d*n1*n2 + 20*d^2*n1*n2 + 96*n1^2*n2 - 
      24*d*n1^2*n2 - 32*n2^2 - 8*d*n2^2 + 32*n1*n2^2 + 8*d*n1*n2^2 + 8*n2^3 - 
      8*n1*n2^3 - 480*n3 + 444*d*n3 - 126*d^2*n3 + 12*d^3*n3 - 56*n1*n3 + 
      56*d*n1*n3 - 20*d^2*n1*n3 + 48*n1^2*n3 - 12*d*n1^2*n3 - 196*n2*n3 + 
      76*d*n2*n3 - 7*d^2*n2*n3 - 82*n1*n2*n3 + 53*d*n1*n2*n3 + 22*n2^2*n3 - 
      11*d*n2^2*n3 - 27*n1*n2^2*n3 + 6*n2^3*n3 - 64*n3^2 + 6*d*n3^2 + 
      7*d^2*n3^2 - 56*n1*n3^2 + 28*d*n1*n3^2 + 52*n2*n3^2 - 33*d*n2*n3^2 - 
      25*n1*n2*n3^2 + 21*n2^2*n3^2 + 32*n3^3 - 19*d*n3^3 - 6*n1*n3^3 + 
      21*n2*n3^3 + 6*n3^4 - 240*n5 + 216*d*n5 - 48*d^2*n5 + 192*n1*n5 - 
      192*d*n1*n5 + 48*d^2*n1*n5 + 48*n1^2*n5 - 24*d*n1^2*n5 - 168*n2*n5 + 
      72*d*n2*n5 + 144*n1*n2*n5 - 72*d*n1*n2*n5 + 24*n1^2*n2*n5 - 
      24*n2^2*n5 + 24*n1*n2^2*n5 - 300*n3*n5 + 216*d*n3*n5 - 36*d^2*n3*n5 + 
      48*n1*n3*n5 - 24*d*n1*n3*n5 + 12*n1^2*n3*n5 - 158*n2*n3*n5 + 
      49*d*n2*n3*n5 + 12*n1*n2*n3*n5 - 13*n2^2*n3*n5 - 82*n3^2*n5 + 
      29*d*n3^2*n5 - 18*n2*n3^2*n5 - 5*n3^3*n5 - 24*n5^2 + 12*d*n5^2 + 
      24*n1*n5^2 - 12*d*n1*n5^2 - 12*n2*n5^2 + 12*n1*n2*n5^2 - 30*n3*n5^2 + 
      12*d*n3*n5^2 + 6*n1*n3*n5^2 - 12*n2*n3*n5^2 - 6*n3^2*n5^2)*
     j[p4, -1 + n1, n2, n3, 0, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((12 - 6*d + 6*n2 + 3*n3 + 12*n5 - 6*d*n5 + 
      6*n2*n5 + 3*n3*n5)*j[p4, -1 + n1, n2, n3, 0, 2 + n5, 0, 0, -1, 1, 1, 1, 
      1, 1, 1])/((n2 - n3)*(-2 + d - n1 - n5)) + 
   ((-32 + 20*d - 2*d^2 - 12*n2 + 2*n2^2 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      12*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, -1 + n1, n2, n3, 1, n5, 0, 0, 
      -1, 0, 1, 1, 1, 1, 2])/((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((32 - 20*d + 2*d^2 + 12*n2 - 2*n2^2 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 12*n5 - 
      6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, -1 + n1, n2, n3, 1, n5, 0, 0, -1, 1, 
      1, 0, 2, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((32 - 20*d + 2*d^2 + 12*n2 - 2*n2^2 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 12*n5 - 
      6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, -1 + n1, n2, n3, 1, n5, 0, 0, -1, 1, 
      1, 1, 0, 2, 1])/((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((32 - 20*d + 2*d^2 + 12*n2 - 2*n2^2 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 12*n5 - 
      6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, -1 + n1, n2, n3, 1, n5, 0, 0, -1, 1, 
      1, 2, 0, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((368 - 432*d + 156*d^2 - 16*d^3 - 184*n1 + 296*d*n1 - 134*d^2*n1 + 
      16*d^3*n1 - 184*n1^2 + 136*d*n1^2 - 22*d^2*n1^2 + 556*n2 - 508*d*n2 + 
      139*d^2*n2 - 12*d^3*n2 + 22*n1*n2 - d*n1*n2 + 7*d^2*n1*n2 - 
      90*n1^2*n2 + 21*d*n1^2*n2 + 210*n2^2 - 101*d*n2^2 + 7*d^2*n2^2 + 
      67*n1*n2^2 - 28*d*n1*n2^2 + n1^2*n2^2 + 11*d*n2^3 + 5*n1*n2^3 - 
      6*n2^4 + 128*n3 - 62*d*n3 - d^2*n3 - 88*n1*n3 + 54*d*n1*n3 + 
      d^2*n1*n3 - 40*n1^2*n3 + 8*d*n1^2*n3 + 80*n2*n3 + d*n2*n3 - 
      7*d^2*n2*n3 + 37*n1*n2*n3 - 35*d*n1*n2*n3 + 3*n1^2*n2*n3 - 45*n2^2*n3 + 
      33*d*n2^2*n3 + 18*n1*n2^2*n3 - 21*n2^3*n3 - 16*n3^2 + 17*d*n3^2 + 
      14*n1*n3^2 - 17*d*n1*n3^2 + 2*n1^2*n3^2 - 45*n2*n3^2 + 19*d*n2*n3^2 + 
      19*n1*n2*n3^2 - 21*n2^2*n3^2 - 6*n3^3 + 6*n1*n3^3 - 6*n2*n3^3 + 
      208*n5 - 184*d*n5 + 40*d^2*n5 - 160*n1*n5 + 160*d*n1*n5 - 
      40*d^2*n1*n5 - 48*n1^2*n5 + 24*d*n1^2*n5 + 330*n2*n5 - 225*d*n2*n5 + 
      36*d^2*n2*n5 - 66*n1*n2*n5 + 33*d*n1*n2*n5 - 24*n1^2*n2*n5 + 
      139*n2^2*n5 - 49*d*n2^2*n5 + 7*n1*n2^2*n5 + 13*n2^3*n5 + 82*n3*n5 - 
      35*d*n3*n5 - 70*n1*n3*n5 + 35*d*n1*n3*n5 - 12*n1^2*n3*n5 + 
      94*n2*n3*n5 - 29*d*n2*n3*n5 - 12*n1*n2*n3*n5 + 18*n2^2*n3*n5 + 
      7*n3^2*n5 - 7*n1*n3^2*n5 + 5*n2*n3^2*n5 + 24*n5^2 - 12*d*n5^2 - 
      24*n1*n5^2 + 12*d*n1*n5^2 + 36*n2*n5^2 - 12*d*n2*n5^2 - 12*n1*n2*n5^2 + 
      12*n2^2*n5^2 + 6*n3*n5^2 - 6*n1*n3*n5^2 + 6*n2*n3*n5^2)*
     j[p4, -1 + n1, n2, n3, 1, n5, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((-32 + 20*d - 2*d^2 - 12*n2 + 2*n2^2 - 3*d*n3 + 
      5*n2*n3 + 2*n3^2 - 12*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*
     j[p4, -1 + n1, n2, n3, 1, 1 + n5, -1, 0, -1, 0, 1, 1, 1, 1, 2])/
    ((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((32 - 20*d + 2*d^2 + 12*n2 - 2*n2^2 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 12*n5 - 
      6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, -1 + n1, n2, n3, 1, 1 + n5, -1, 0, 
      -1, 1, 1, 0, 2, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((32 - 20*d + 2*d^2 + 12*n2 - 2*n2^2 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 12*n5 - 
      6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, -1 + n1, n2, n3, 1, 1 + n5, -1, 0, 
      -1, 1, 1, 2, 0, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((32 - 20*d + 2*d^2 + 12*n2 - 2*n2^2 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 12*n5 - 
      6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, -1 + n1, n2, n3, 1, 1 + n5, -1, 0, 
      -1, 1, 2, 0, 1, 1, 1])/((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((32 - 20*d + 2*d^2 + 12*n2 - 2*n2^2 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 12*n5 - 
      6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, -1 + n1, n2, n3, 1, 1 + n5, -1, 0, 
      -1, 1, 2, 1, 0, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-32 + 20*d - 2*d^2 - 12*n2 + 2*n2^2 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      12*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 
      -1, 0, -1, 1, 2, 1, 1, 0, 1])/(2*(n2 - n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((-32 + 20*d - 2*d^2 - 12*n2 + 2*n2^2 - 3*d*n3 + 
      5*n2*n3 + 2*n3^2 - 12*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*
     j[p4, -1 + n1, n2, n3, 1, 1 + n5, -1, 0, 0, 1, 1, 0, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-32 + 20*d - 2*d^2 - 12*n2 + 2*n2^2 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      12*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 
      -1, 0, 0, 1, 1, 1, 0, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((32 - 20*d + 2*d^2 + 12*n2 - 2*n2^2 + 3*d*n3 - 
      5*n2*n3 - 2*n3^2 + 12*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*
     j[p4, -1 + n1, n2, n3, 1, 1 + n5, -1, 0, 0, 1, 1, 1, 1, 0, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((368 - 432*d + 156*d^2 - 16*d^3 - 184*n1 + 296*d*n1 - 134*d^2*n1 + 
      16*d^3*n1 - 184*n1^2 + 136*d*n1^2 - 22*d^2*n1^2 + 252*n2 - 156*d*n2 + 
      15*d^2*n2 - 162*n1*n2 + 135*d*n1*n2 - 15*d^2*n1*n2 - 90*n1^2*n2 + 
      21*d*n1^2*n2 + 22*n2^2 + 7*d*n2^2 - 23*n1*n2^2 - 7*d*n1*n2^2 + 
      n1^2*n2^2 - 6*n2^3 + 6*n1*n2^3 + 432*n3 - 414*d*n3 + 123*d^2*n3 - 
      12*d^3*n3 + 96*n1*n3 - 82*d*n1*n3 + 23*d^2*n1*n3 - 40*n1^2*n3 + 
      8*d*n1^2*n3 + 188*n2*n3 - 81*d*n2*n3 + 7*d^2*n2*n3 + 87*n1*n2*n3 - 
      48*d*n1*n2*n3 + 3*n1^2*n2*n3 - 15*n2^2*n3 + 11*d*n2^2*n3 + 
      20*n1*n2^2*n3 - 6*n2^3*n3 + 64*n3^2 - 9*d*n3^2 - 7*d^2*n3^2 + 
      54*n1*n3^2 - 25*d*n1*n3^2 + 2*n1^2*n3^2 - 45*n2*n3^2 + 33*d*n2*n3^2 + 
      18*n1*n2*n3^2 - 21*n2^2*n3^2 - 30*n3^3 + 19*d*n3^3 + 4*n1*n3^3 - 
      21*n2*n3^3 - 6*n3^4 + 208*n5 - 184*d*n5 + 40*d^2*n5 - 160*n1*n5 + 
      160*d*n1*n5 - 40*d^2*n1*n5 - 48*n1^2*n5 + 24*d*n1^2*n5 + 138*n2*n5 - 
      57*d*n2*n5 - 114*n1*n2*n5 + 57*d*n1*n2*n5 - 24*n1^2*n2*n5 + 
      17*n2^2*n5 - 17*n1*n2^2*n5 + 274*n3*n5 - 203*d*n3*n5 + 36*d^2*n3*n5 - 
      22*n1*n3*n5 + 11*d*n1*n3*n5 - 12*n1^2*n3*n5 + 146*n2*n3*n5 - 
      49*d*n2*n3*n5 + 13*n2^2*n3*n5 + 77*n3^2*n5 - 29*d*n3^2*n5 + 
      5*n1*n3^2*n5 + 18*n2*n3^2*n5 + 5*n3^3*n5 + 24*n5^2 - 12*d*n5^2 - 
      24*n1*n5^2 + 12*d*n1*n5^2 + 12*n2*n5^2 - 12*n1*n2*n5^2 + 30*n3*n5^2 - 
      12*d*n3*n5^2 - 6*n1*n3*n5^2 + 12*n2*n3*n5^2 + 6*n3^2*n5^2)*
     j[p4, -1 + n1, n2, n3, 1, 1 + n5, -1, 0, 0, 1, 1, 1, 1, 1, 1])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((-32 + 20*d - 2*d^2 - 12*n2 + 2*n2^2 - 3*d*n3 + 
      5*n2*n3 + 2*n3^2 - 12*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*
     j[p4, -1 + n1, n2, n3, 1, 1 + n5, 0, -1, -1, 0, 1, 1, 1, 1, 2])/
    ((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-96 + 60*d - 6*d^2 - 36*n2 + 6*n2^2 - 9*d*n3 + 15*n2*n3 + 6*n3^2 - 
      36*n5 + 18*d*n5 - 18*n2*n5 - 9*n3*n5)*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 
      0, -1, -1, 0, 2, 1, 1, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((32 - 20*d + 2*d^2 + 12*n2 - 2*n2^2 + 3*d*n3 - 
      5*n2*n3 - 2*n3^2 + 12*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*
     j[p4, -1 + n1, n2, n3, 1, 1 + n5, 0, -1, -1, 1, 1, 0, 2, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((32 - 20*d + 2*d^2 + 12*n2 - 2*n2^2 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 12*n5 - 
      6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 0, -1, 
      -1, 1, 1, 2, 0, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-32 + 20*d - 2*d^2 - 12*n2 + 2*n2^2 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      12*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 
      0, -1, 0, 1, 1, 0, 1, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((-32 + 20*d - 2*d^2 - 12*n2 + 2*n2^2 - 3*d*n3 + 
      5*n2*n3 + 2*n3^2 - 12*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*
     j[p4, -1 + n1, n2, n3, 1, 1 + n5, 0, -1, 0, 1, 1, 1, 0, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((32 - 20*d + 2*d^2 + 12*n2 - 2*n2^2 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 12*n5 - 
      6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 0, -1, 0, 
      1, 1, 1, 1, 0, 1])/(2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-16 + 48*d - 36*d^2 + 8*d^3 + 200*n1 - 184*d*n1 + 58*d^2*n1 - 8*d^3*n1 - 
      184*n1^2 + 136*d*n1^2 - 22*d^2*n1^2 - 436*n2 + 484*d*n2 - 157*d^2*n2 + 
      12*d^3*n2 + 38*n1*n2 - 17*d*n1*n2 + 11*d^2*n1*n2 - 90*n1^2*n2 + 
      21*d*n1^2*n2 - 262*n2^2 + 139*d*n2^2 - 7*d^2*n2^2 - 17*n1*n2^2 - 
      10*d*n1*n2^2 + n1^2*n2^2 - 12*n2^3 - 11*d*n2^3 + 7*n1*n2^3 + 6*n2^4 + 
      144*n3 - 198*d*n3 + 87*d^2*n3 - 12*d^3*n3 + 384*n1*n3 - 298*d*n1*n3 + 
      59*d^2*n1*n3 - 40*n1^2*n3 + 8*d*n1^2*n3 - 36*n2*n3 - 19*d*n2*n3 + 
      14*d^2*n2*n3 + 191*n1*n2*n3 - 76*d*n1*n2*n3 + 3*n1^2*n2*n3 + 
      9*n2^2*n3 - 22*d*n2^2*n3 + 23*n1*n2^2*n3 + 15*n2^3*n3 + 16*n3^2 + 
      3*d*n3^2 - 7*d^2*n3^2 + 102*n1*n3^2 - 37*d*n1*n3^2 + 2*n1^2*n3^2 - 
      21*n2*n3^2 + 14*d*n2*n3^2 + 20*n1*n2*n3^2 - 30*n3^3 + 19*d*n3^3 + 
      4*n1*n3^3 - 15*n2*n3^3 - 6*n3^4 + 112*n5 - 88*d*n5 + 16*d^2*n5 - 
      64*n1*n5 + 64*d*n1*n5 - 16*d^2*n1*n5 - 48*n1^2*n5 + 24*d*n1^2*n5 - 
      150*n2*n5 + 159*d*n2*n5 - 36*d^2*n2*n5 - 66*n1*n2*n5 + 33*d*n1*n2*n5 - 
      24*n1^2*n2*n5 - 129*n2^2*n5 + 49*d*n2^2*n5 - 17*n1*n2^2*n5 - 
      13*n2^3*n5 + 202*n3*n5 - 167*d*n3*n5 + 36*d^2*n3*n5 + 50*n1*n3*n5 - 
      25*d*n1*n3*n5 - 12*n1^2*n3*n5 + 40*n2*n3*n5 - 20*d*n2*n3*n5 + 
      24*n1*n2*n3*n5 - 5*n2^2*n3*n5 + 65*n3^2*n5 - 29*d*n3^2*n5 + 
      17*n1*n3^2*n5 + 13*n2*n3^2*n5 + 5*n3^3*n5 + 24*n5^2 - 12*d*n5^2 - 
      24*n1*n5^2 + 12*d*n1*n5^2 - 12*n2*n5^2 + 12*d*n2*n5^2 - 12*n1*n2*n5^2 - 
      12*n2^2*n5^2 + 30*n3*n5^2 - 12*d*n3*n5^2 - 6*n1*n3*n5^2 + 
      6*n2*n3*n5^2 + 6*n3^2*n5^2)*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 0, -1, 0, 
      1, 1, 1, 1, 1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(2 - d + n1 + n5)) + 
   ((-32 + 20*d - 2*d^2 - 12*n2 + 2*n2^2 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      12*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 
      0, 0, -2, 0, 1, 1, 1, 1, 2])/((n2 - n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((-32 + 20*d - 2*d^2 - 12*n2 + 2*n2^2 - 3*d*n3 + 
      5*n2*n3 + 2*n3^2 - 12*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*
     j[p4, -1 + n1, n2, n3, 1, 1 + n5, 0, 0, -2, 0, 2, 1, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((32 - 20*d + 2*d^2 + 12*n2 - 2*n2^2 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 12*n5 - 
      6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 0, 0, -2, 
      1, 1, 0, 2, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-32 + 20*d - 2*d^2 - 12*n2 + 2*n2^2 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      12*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 
      0, 0, -2, 1, 1, 1, 1, 2, 0])/((n2 - n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((32 - 20*d + 2*d^2 + 12*n2 - 2*n2^2 + 3*d*n3 - 
      5*n2*n3 - 2*n3^2 + 12*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*
     j[p4, -1 + n1, n2, n3, 1, 1 + n5, 0, 0, -2, 1, 1, 2, 0, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((32 - 20*d + 2*d^2 + 32*n1 - 20*d*n1 + 2*d^2*n1 + 12*n2 + 12*n1*n2 - 
      2*n2^2 - 2*n1*n2^2 + 3*d*n3 + 3*d*n1*n3 - 5*n2*n3 - 5*n1*n2*n3 - 
      2*n3^2 - 2*n1*n3^2 - 84*n5 + 54*d*n5 - 6*d^2*n5 + 12*n1*n5 - 
      6*d*n1*n5 - 30*n2*n5 + 6*n1*n2*n5 + 6*n2^2*n5 + 3*n3*n5 - 9*d*n3*n5 + 
      3*n1*n3*n5 + 15*n2*n3*n5 + 6*n3^2*n5 - 36*n5^2 + 18*d*n5^2 - 
      18*n2*n5^2 - 9*n3*n5^2)*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 0, 0, -1, 0, 
      1, 1, 1, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-32 + 20*d - 2*d^2 - 12*n2 + 2*n2^2 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      12*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 
      0, 0, -1, 0, 1, 2, 1, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((-64 + 44*d - 6*d^2 - 28*n2 + 4*d*n2 + 2*n2^2 - 
      8*n3 - d*n3 + 5*n2*n3 + 2*n3^2 - 20*n5 + 10*d*n5 - 10*n2*n5 - 5*n3*n5)*
     j[p4, -1 + n1, n2, n3, 1, 1 + n5, 0, 0, -1, 0, 2, 1, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-32 + 20*d - 2*d^2 + 20*n2 - 20*d*n2 + 2*d^2*n2 + 14*n2^2 - 2*n2^3 + 
      32*n3 - 23*d*n3 + 2*d^2*n3 + 17*n2*n3 + 3*d*n2*n3 - 7*n2^2*n3 + 
      2*n3^2 + 3*d*n3^2 - 7*n2*n3^2 - 2*n3^3 - 12*n5 + 6*d*n5 + 6*n2*n5 - 
      6*d*n2*n5 + 6*n2^2*n5 + 9*n3*n5 - 6*d*n3*n5 + 9*n2*n3*n5 + 3*n3^2*n5)*
     j[p4, -1 + n1, n2, n3, 1, 1 + n5, 0, 0, -1, 1, 0, 1, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-160 + 100*d - 10*d^2 - 64*n1 + 40*d*n1 - 4*d^2*n1 - 60*n2 - 24*n1*n2 + 
      10*n2^2 + 4*n1*n2^2 - 32*n3 + 5*d*n3 - 2*d^2*n3 - 6*d*n1*n3 + 
      13*n2*n3 + 10*n1*n2*n3 + 2*n2^2*n3 + 10*n3^2 - 3*d*n3^2 + 4*n1*n3^2 + 
      5*n2*n3^2 + 2*n3^3 - 60*n5 + 30*d*n5 - 24*n1*n5 + 12*d*n1*n5 - 
      30*n2*n5 - 12*n1*n2*n5 - 27*n3*n5 + 6*d*n3*n5 - 6*n1*n3*n5 - 
      6*n2*n3*n5 - 3*n3^2*n5)*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 0, 0, -1, 1, 
      1, 0, 1, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-96 + 60*d - 6*d^2 - 36*n2 + 6*n2^2 - 9*d*n3 + 15*n2*n3 + 6*n3^2 - 
      36*n5 + 18*d*n5 - 18*n2*n5 - 9*n3*n5)*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 
      0, 0, -1, 1, 1, 1, 0, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((32 - 20*d + 2*d^2 + 12*n2 - 2*n2^2 + 3*d*n3 - 
      5*n2*n3 - 2*n3^2 + 12*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*
     j[p4, -1 + n1, n2, n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 0, 1, 2])/
    ((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((32 - 20*d + 2*d^2 + 12*n2 - 2*n2^2 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 12*n5 - 
      6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 0, 0, -1, 
      1, 1, 1, 0, 2, 1])/((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((128 - 80*d + 8*d^2 - 32*n1 + 20*d*n1 - 2*d^2*n1 + 48*n2 - 12*n1*n2 - 
      8*n2^2 + 2*n1*n2^2 + 12*d*n3 - 3*d*n1*n3 - 20*n2*n3 + 5*n1*n2*n3 - 
      8*n3^2 + 2*n1*n3^2 + 80*n5 - 44*d*n5 + 2*d^2*n5 - 12*n1*n5 + 
      6*d*n1*n5 + 36*n2*n5 - 6*n1*n2*n5 - 2*n2^2*n5 + 12*n3*n5 + 3*d*n3*n5 - 
      3*n1*n3*n5 - 5*n2*n3*n5 - 2*n3^2*n5 + 12*n5^2 - 6*d*n5^2 + 6*n2*n5^2 + 
      3*n3*n5^2)*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 0, 
      1])/(2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((32*n3 - 20*d*n3 + 2*d^2*n3 + 12*n2*n3 - 2*n2^2*n3 + 3*d*n3^2 - 
      5*n2*n3^2 - 2*n3^3 - 32*n5 + 20*d*n5 - 2*d^2*n5 - 12*n2*n5 + 
      2*n2^2*n5 + 12*n3*n5 - 9*d*n3*n5 + 11*n2*n3*n5 + 5*n3^2*n5 - 12*n5^2 + 
      6*d*n5^2 - 6*n2*n5^2 - 3*n3*n5^2)*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 0, 
      0, -1, 1, 1, 1, 1, 1, 0])/(2*(n2 - n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((1376 - 2384*d + 1520*d^2 - 420*d^3 + 42*d^4 - 
      176*n1 + 992*d*n1 - 1004*d^2*n1 + 360*d^3*n1 - 42*d^4*n1 - 1008*n1^2 + 
      1248*d*n1^2 - 492*d^2*n1^2 + 60*d^3*n1^2 - 192*n1^3 + 144*d*n1^3 - 
      24*d^2*n1^3 + 2392*n2 - 2928*d*n2 + 1130*d^2*n2 - 132*d^3*n2 + 
      212*n1*n2 + 586*d*n1*n2 - 502*d^2*n1*n2 + 84*d^3*n1*n2 - 900*n1^2*n2 + 
      662*d*n1^2*n2 - 106*d^2*n1^2*n2 - 96*n1^3*n2 + 24*d*n1^3*n2 + 
      1008*n2^2 - 658*d*n2^2 + 73*d^2*n2^2 + 128*n1*n2^2 + 137*d*n1*n2^2 - 
      34*d^2*n1*n2^2 - 194*n1^2*n2^2 + 44*d*n1^2*n2^2 + 26*n2^3 + 43*d*n2^3 + 
      5*n1*n2^3 - 16*d*n1*n2^3 + 2*n1^2*n2^3 - 26*n2^4 + 8*n1*n2^4 + 
      1920*n3 - 2672*d*n3 + 1274*d^2*n3 - 233*d^3*n3 + 12*d^4*n3 + 
      368*n1*n3 + 12*d*n1*n3 - 170*d^2*n1*n3 + 39*d^3*n1*n3 - 288*n1^2*n3 + 
      208*d*n1^2*n3 - 32*d^2*n1^2*n3 - 48*n1^3*n3 + 12*d*n1^3*n3 + 
      2164*n2*n3 - 1920*d*n2*n3 + 483*d^2*n2*n3 - 35*d^3*n2*n3 + 
      586*n1*n2*n3 - 158*d*n1*n2*n3 - 3*d^2*n1*n2*n3 - 110*n1^2*n2*n3 + 
      22*d*n1^2*n2*n3 + 404*n2^2*n3 - 112*d*n2^2*n3 + 9*d^2*n2^2*n3 + 
      177*n1*n2^2*n3 - 56*d*n1*n2^2*n3 + 4*n1^2*n2^2*n3 - 91*n2^3*n3 + 
      26*d*n2^3*n3 + 20*n1*n2^3*n3 - 12*n2^4*n3 + 560*n3^2 - 430*d*n3^2 + 
      59*d^2*n3^2 + 7*d^3*n3^2 - 60*n1*n3^2 + 168*d*n1*n3^2 - 
      53*d^2*n1*n3^2 - 20*n1^2*n3^2 + 6*d*n1^2*n3^2 + 156*n2*n3^2 + 
      64*d*n2*n3^2 - 39*d^2*n2*n3^2 - 16*n1*n2*n3^2 + 32*d*n1*n2*n3^2 - 
      2*n1^2*n2*n3^2 - 183*n2^2*n3^2 + 81*d*n2^2*n3^2 - 42*n2^3*n3^2 - 
      24*n3^3 + 62*d*n3^3 - 19*d^2*n3^3 - 76*n1*n3^3 + 40*d*n1*n3^3 - 
      4*n1^2*n3^3 - 122*n2*n3^3 + 55*d*n2*n3^3 - 20*n1*n2*n3^3 - 
      42*n2^2*n3^3 - 16*n3^4 + 6*d*n3^4 - 8*n1*n3^4 - 12*n2*n3^4 + 1088*n5 - 
      1392*d*n5 + 588*d^2*n5 - 82*d^3*n5 - 488*n1*n5 + 888*d*n1*n5 - 
      486*d^2*n1*n5 + 82*d^3*n1*n5 - 552*n1^2*n5 + 480*d*n1^2*n5 - 
      102*d^2*n1^2*n5 - 48*n1^3*n5 + 24*d*n1^3*n5 + 1936*n2*n5 - 
      1762*d*n2*n5 + 435*d^2*n2*n5 - 16*d^3*n2*n5 - 226*n1*n2*n5 + 
      431*d*n1*n2*n5 - 141*d^2*n1*n2*n5 - 382*n1^2*n2*n5 + 155*d*n1^2*n2*n5 - 
      24*n1^3*n2*n5 + 862*n2^2*n5 - 398*d*n2^2*n5 + 13*d^2*n2^2*n5 - 
      21*n1*n2^2*n5 + 74*d*n1*n2^2*n5 - 53*n1^2*n2^2*n5 + 71*n2^3*n5 + 
      9*d*n2^3*n5 - 15*n1*n2^3*n5 - 6*n2^4*n5 + 1768*n3*n5 - 1898*d*n3*n5 + 
      630*d^2*n3*n5 - 60*d^3*n3*n5 + 332*n1*n3*n5 - 144*d*n1*n3*n5 - 
      2*d^2*n1*n3*n5 - 152*n1^2*n3*n5 + 58*d*n1^2*n3*n5 - 12*n1^3*n3*n5 + 
      1838*n2*n3*n5 - 1145*d*n2*n3*n5 + 140*d^2*n2*n3*n5 + 293*n1*n2*n3*n5 - 
      40*d*n1*n2*n3*n5 - 33*n1^2*n2*n3*n5 + 407*n2^2*n3*n5 - 
      68*d*n2^2*n3*n5 + 22*n1*n2^2*n3*n5 - 5*n2^3*n3*n5 + 490*n3^2*n5 - 
      262*d*n3^2*n5 + 15*d^2*n3^2*n5 + 82*n1*n3^2*n5 - 4*d*n1*n3^2*n5 - 
      4*n1^2*n3^2*n5 + 208*n2*n3^2*n5 - 3*d*n2*n3^2*n5 + 3*n1*n2*n3^2*n5 - 
      21*n2^2*n3^2*n5 - 22*n3^3*n5 + 33*d*n3^3*n5 - 10*n1*n3^3*n5 - 
      34*n2*n3^3*n5 - 12*n3^4*n5 + 280*n5^2 - 244*d*n5^2 + 52*d^2*n5^2 - 
      208*n1*n5^2 + 208*d*n1*n5^2 - 52*d^2*n1*n5^2 - 72*n1^2*n5^2 + 
      36*d*n1^2*n5^2 + 474*n2*n5^2 - 299*d*n2*n5^2 + 40*d^2*n2*n5^2 - 
      110*n1*n2*n5^2 + 55*d*n1*n2*n5^2 - 36*n1^2*n2*n5^2 + 197*n2^2*n5^2 - 
      55*d*n2^2*n5^2 - 3*n1*n2^2*n5^2 + 15*n2^3*n5^2 + 560*n3*n5^2 - 
      439*d*n3*n5^2 + 84*d^2*n3*n5^2 + 34*n1*n3*n5^2 - 17*d*n1*n3*n5^2 - 
      18*n1^2*n3*n5^2 + 462*n2*n3*n5^2 - 171*d*n2*n3*n5^2 + 
      42*n1*n2*n3*n5^2 + 74*n2^2*n3*n5^2 + 167*n3^2*n5^2 - 64*d*n3^2*n5^2 + 
      21*n1*n3^2*n5^2 + 57*n2*n3^2*n5^2 + 10*n3^3*n5^2 + 24*n5^3 - 
      12*d*n5^3 - 24*n1*n5^3 + 12*d*n1*n5^3 + 36*n2*n5^3 - 12*d*n2*n5^3 - 
      12*n1*n2*n5^3 + 12*n2^2*n5^3 + 54*n3*n5^3 - 24*d*n3*n5^3 - 
      6*n1*n3*n5^3 + 30*n2*n3*n5^3 + 12*n3^2*n5^3)*j[p4, -1 + n1, n2, n3, 1, 
      1 + n5, 0, 0, -1, 1, 1, 1, 1, 1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*
     (n2 - n3)*(-4 + d - n5)*(2 - d + n1 + n5)) + 
   ((-384 + 456*d - 168*d^2 + 18*d^3 + 192*n1 - 312*d*n1 + 144*d^2*n1 - 
      18*d^3*n1 + 192*n1^2 - 144*d*n1^2 + 24*d^2*n1^2 - 264*n2 + 168*d*n2 - 
      18*d^2*n2 + 168*n1*n2 - 144*d*n1*n2 + 18*d^2*n1*n2 + 96*n1^2*n2 - 
      24*d*n1^2*n2 - 24*n2^2 - 6*d*n2^2 + 24*n1*n2^2 + 6*d*n1*n2^2 + 6*n2^3 - 
      6*n1*n2^3 - 448*n3 + 430*d*n3 - 127*d^2*n3 + 12*d^3*n3 - 88*n1*n3 + 
      70*d*n1*n3 - 19*d^2*n1*n3 + 48*n1^2*n3 - 12*d*n1^2*n3 - 194*n2*n3 + 
      84*d*n2*n3 - 7*d^2*n2*n3 - 84*n1*n2*n3 + 45*d*n1*n2*n3 + 15*n2^2*n3 - 
      11*d*n2^2*n3 - 20*n1*n2^2*n3 + 6*n2^3*n3 - 68*n3^2 + 11*d*n3^2 + 
      7*d^2*n3^2 - 52*n1*n3^2 + 23*d*n1*n3^2 + 45*n2*n3^2 - 33*d*n2*n3^2 - 
      18*n1*n2*n3^2 + 21*n2^2*n3^2 + 30*n3^3 - 19*d*n3^3 - 4*n1*n3^3 + 
      21*n2*n3^3 + 6*n3^4 - 216*n5 + 192*d*n5 - 42*d^2*n5 + 168*n1*n5 - 
      168*d*n1*n5 + 42*d^2*n1*n5 + 48*n1^2*n5 - 24*d*n1^2*n5 - 144*n2*n5 + 
      60*d*n2*n5 + 120*n1*n2*n5 - 60*d*n1*n2*n5 + 24*n1^2*n2*n5 - 
      18*n2^2*n5 + 18*n1*n2^2*n5 - 282*n3*n5 + 207*d*n3*n5 - 36*d^2*n3*n5 + 
      30*n1*n3*n5 - 15*d*n1*n3*n5 + 12*n1^2*n3*n5 - 149*n2*n3*n5 + 
      49*d*n2*n3*n5 + 3*n1*n2*n3*n5 - 13*n2^2*n3*n5 - 79*n3^2*n5 + 
      29*d*n3^2*n5 - 3*n1*n3^2*n5 - 18*n2*n3^2*n5 - 5*n3^3*n5 - 24*n5^2 + 
      12*d*n5^2 + 24*n1*n5^2 - 12*d*n1*n5^2 - 12*n2*n5^2 + 12*n1*n2*n5^2 - 
      30*n3*n5^2 + 12*d*n3*n5^2 + 6*n1*n3*n5^2 - 12*n2*n3*n5^2 - 6*n3^2*n5^2)*
     j[p4, -1 + n1, n2, n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 2, 0])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((-32 + 20*d - 2*d^2 - 12*n2 + 2*n2^2 - 3*d*n3 + 
      5*n2*n3 + 2*n3^2 - 12*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*
     j[p4, -1 + n1, n2, n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 2, 1, 0])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((40 - 28*d + 4*d^2 + 4*n1 - 2*d*n1 + 14*n2 - d*n2 + n1*n2 - 2*n2^2 + 
      4*n3 + d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 16*n5 - 8*d*n5 + 7*n2*n5 + 
      5*n3*n5)*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 0, 0, -1, 1, 1, 2, 0, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((56 - 44*d + 8*d^2 + 4*n1 - 2*d*n1 + 26*n2 - 7*d*n2 + n1*n2 + 16*n3 - 
      5*d*n3 + 2*n1*n3 + 16*n5 - 8*d*n5 + 7*n2*n5 + 5*n3*n5)*
     j[p4, -1 + n1, n2, n3, 1, 1 + n5, 0, 0, -1, 1, 2, 0, 1, 1, 1])/
    ((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((32 - 20*d + 2*d^2 + 12*n2 - 2*n2^2 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 12*n5 - 
      6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 0, 0, -1, 
      2, 1, 0, 1, 1, 1])/((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((24 - 12*d - 4*n1 + 2*d*n1 + 10*n2 + d*n2 - n1*n2 - 2*n2^2 - 4*n3 + 
      5*d*n3 - 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 8*n5 - 4*d*n5 + 5*n2*n5 + n3*n5)*
     j[p4, -1 + n1, n2, n3, 1, 1 + n5, 0, 0, -1, 2, 1, 1, 1, 1, 0])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-104 + 84*d - 16*d^2 - 4*n1 + 2*d*n1 - 54*n2 + 17*d*n2 - n1*n2 - 
      2*n2^2 - 36*n3 + 13*d*n3 - 2*n1*n3 - 5*n2*n3 - 2*n3^2 - 24*n5 + 
      12*d*n5 - 11*n2*n5 - 7*n3*n5)*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 0, 0, 
      0, 1, 1, 1, 0, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((104 - 84*d + 16*d^2 + 4*n1 - 2*d*n1 + 54*n2 - 17*d*n2 + n1*n2 + 2*n2^2 + 
      36*n3 - 13*d*n3 + 2*n1*n3 + 5*n2*n3 + 2*n3^2 + 24*n5 - 12*d*n5 + 
      11*n2*n5 + 7*n3*n5)*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 
      1, 0, 1])/(2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-32 + 20*d - 2*d^2 - 12*n2 + 2*n2^2 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      44*n5 + 26*d*n5 - 2*d^2*n5 - 18*n2*n5 + 2*n2^2*n5 - 3*n3*n5 - 
      3*d*n3*n5 + 5*n2*n3*n5 + 2*n3^2*n5 - 12*n5^2 + 6*d*n5^2 - 6*n2*n5^2 - 
      3*n3*n5^2)*j[p4, -1 + n1, n2, n3, 1, 2 + n5, -1, 0, -1, 0, 1, 1, 1, 1, 
      1])/((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((8 - 4*d + 4*n1 - 2*d*n1 - 2*n2 + 3*d*n2 + n1*n2 - 2*n2^2 - 4*n3 + 
      3*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 16*n5 - 8*d*n5 + 4*n1*n5 - 
      2*d*n1*n5 + n2*n5 + 3*d*n2*n5 + n1*n2*n5 - 2*n2^2*n5 - n3*n5 + 
      3*d*n3*n5 + 2*n1*n3*n5 - 5*n2*n3*n5 - 2*n3^2*n5 + 8*n5^2 - 4*d*n5^2 + 
      3*n2*n5^2 + 3*n3*n5^2)*j[p4, -1 + n1, n2, n3, 1, 2 + n5, -1, 0, -1, 1, 
      1, 1, 1, 1, 1])/(2*(n2 - n3)*(4 - d + n5)*(2 - d + n1 + n5)) + 
   ((-32 + 20*d - 2*d^2 - 12*n2 + 2*n2^2 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      44*n5 + 26*d*n5 - 2*d^2*n5 - 18*n2*n5 + 2*n2^2*n5 - 3*n3*n5 - 
      3*d*n3*n5 + 5*n2*n3*n5 + 2*n3^2*n5 - 12*n5^2 + 6*d*n5^2 - 6*n2*n5^2 - 
      3*n3*n5^2)*j[p4, -1 + n1, n2, n3, 1, 2 + n5, 0, -1, -1, 0, 1, 1, 1, 1, 
      1])/((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-16 + 16*d - 4*d^2 + 8*n1 - 8*d*n1 + 2*d^2*n1 + 8*n1^2 - 8*d*n1^2 + 
      2*d^2*n1^2 + 332*n2 - 404*d*n2 + 151*d^2*n2 - 16*d^3*n2 + 198*n1*n2 - 
      145*d*n1*n2 + 23*d^2*n1*n2 + 6*n1^2*n2 - 3*d*n1^2*n2 + 218*n2^2 - 
      137*d*n2^2 + 13*d^2*n2^2 + 95*n1*n2^2 - 22*d*n1*n2^2 + n1^2*n2^2 + 
      12*n2^3 + 9*d*n2^3 - n1*n2^3 - 6*n2^4 - 6*d*n3 + 3*d^2*n3 - 8*n1*n3 + 
      10*d*n1*n3 - 3*d^2*n1*n3 + 8*n1^2*n3 - 4*d*n1^2*n3 + 128*n2*n3 - 
      69*d*n2*n3 + d^2*n2*n3 + 37*n1*n2*n3 - 5*d*n1*n2*n3 + 3*n1^2*n2*n3 - 
      5*n2^2*n3 + 27*d*n2^2*n3 - 4*n1*n2^2*n3 - 21*n2^3*n3 + 8*n3^2 - 
      5*d*n3^2 - 10*n1*n3^2 + 5*d*n1*n3^2 + 2*n1^2*n3^2 - 9*n2*n3^2 + 
      15*d*n2*n3^2 - 5*n1*n2*n3^2 - 21*n2^2*n3^2 + 2*n3^3 - 2*n1*n3^3 - 
      6*n2*n3^3 - 32*n5 + 32*d*n5 - 8*d^2*n5 + 24*n1*n5 - 24*d*n1*n5 + 
      6*d^2*n1*n5 + 8*n1^2*n5 - 8*d*n1^2*n5 + 2*d^2*n1^2*n5 + 526*n2*n5 - 
      581*d*n2*n5 + 191*d^2*n2*n5 - 16*d^3*n2*n5 + 260*n1*n2*n5 - 
      176*d*n1*n2*n5 + 23*d^2*n1*n2*n5 + 6*n1^2*n2*n5 - 3*d*n1^2*n2*n5 + 
      349*n2^2*n5 - 192*d*n2^2*n5 + 13*d^2*n2^2*n5 + 122*n1*n2^2*n5 - 
      22*d*n1*n2^2*n5 + n1^2*n2^2*n5 + 27*n2^3*n5 + 9*d*n2^3*n5 - 
      n1*n2^3*n5 - 6*n2^4*n5 - 14*n3*n5 + d*n3*n5 + 3*d^2*n3*n5 + 
      6*n1*n3*n5 + 3*d*n1*n3*n5 - 3*d^2*n1*n3*n5 + 8*n1^2*n3*n5 - 
      4*d*n1^2*n3*n5 + 208*n2*n3*n5 - 106*d*n2*n3*n5 + d^2*n2*n3*n5 + 
      55*n1*n2*n3*n5 - 5*d*n1*n2*n3*n5 + 3*n1^2*n2*n3*n5 + 19*n2^2*n3*n5 + 
      27*d*n2^2*n3*n5 - 4*n1*n2^2*n3*n5 - 21*n2^3*n3*n5 + 5*n3^2*n5 - 
      5*d*n3^2*n5 - 7*n1*n3^2*n5 + 5*d*n1*n3^2*n5 + 2*n1^2*n3^2*n5 + 
      15*d*n2*n3^2*n5 - 5*n1*n2*n3^2*n5 - 21*n2^2*n3^2*n5 + 2*n3^3*n5 - 
      2*n1*n3^3*n5 - 6*n2*n3^3*n5 - 16*n5^2 + 16*d*n5^2 - 4*d^2*n5^2 + 
      16*n1*n5^2 - 16*d*n1*n5^2 + 4*d^2*n1*n5^2 + 218*n2*n5^2 - 
      189*d*n2*n5^2 + 40*d^2*n2*n5^2 + 62*n1*n2*n5^2 - 31*d*n1*n2*n5^2 + 
      143*n2^2*n5^2 - 55*d*n2^2*n5^2 + 27*n1*n2^2*n5^2 + 15*n2^3*n5^2 - 
      14*n3*n5^2 + 7*d*n3*n5^2 + 14*n1*n3*n5^2 - 7*d*n1*n3*n5^2 + 
      86*n2*n3*n5^2 - 37*d*n2*n3*n5^2 + 18*n1*n2*n3*n5^2 + 24*n2^2*n3*n5^2 - 
      3*n3^2*n5^2 + 3*n1*n3^2*n5^2 + 9*n2*n3^2*n5^2 + 24*n2*n5^3 - 
      12*d*n2*n5^3 + 12*n2^2*n5^3 + 6*n2*n3*n5^3)*j[p4, -1 + n1, n2, n3, 1, 
      2 + n5, 0, -1, -1, 1, 1, 1, 1, 1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*
     (n2 - n3)*(-4 + d - n5)*(2 - d + n1 + n5)) + 
   ((8 - 4*d + 4*n1 - 2*d*n1 - 2*n2 + 3*d*n2 + n1*n2 - 2*n2^2 - 4*n3 + 
      3*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 16*n5 - 8*d*n5 + 4*n1*n5 - 
      2*d*n1*n5 + n2*n5 + 3*d*n2*n5 + n1*n2*n5 - 2*n2^2*n5 - n3*n5 + 
      3*d*n3*n5 + 2*n1*n3*n5 - 5*n2*n3*n5 - 2*n3^2*n5 + 8*n5^2 - 4*d*n5^2 + 
      3*n2*n5^2 + 3*n3*n5^2)*j[p4, -1 + n1, n2, n3, 1, 2 + n5, 0, 0, -2, 1, 
      1, 1, 1, 1, 1])/(2*(n2 - n3)*(4 - d + n5)*(2 - d + n1 + n5)) + 
   ((-88 + 68*d - 12*d^2 + 4*n1 - 2*d*n1 - 50*n2 + 15*d*n2 + n1*n2 - 2*n2^2 - 
      28*n3 + 9*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 - 104*n5 + 76*d*n5 - 
      12*d^2*n5 + 4*n1*n5 - 2*d*n1*n5 - 59*n2*n5 + 15*d*n2*n5 + n1*n2*n5 - 
      2*n2^2*n5 - 31*n3*n5 + 9*d*n3*n5 + 2*n1*n3*n5 - 5*n2*n3*n5 - 
      2*n3^2*n5 - 16*n5^2 + 8*d*n5^2 - 9*n2*n5^2 - 3*n3*n5^2)*
     j[p4, -1 + n1, n2, n3, 1, 2 + n5, 0, 0, -1, 1, 1, 1, 1, 0, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((88 - 68*d + 12*d^2 - 4*n1 + 2*d*n1 + 50*n2 - 15*d*n2 - n1*n2 + 2*n2^2 + 
      28*n3 - 9*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 + 104*n5 - 76*d*n5 + 
      12*d^2*n5 - 4*n1*n5 + 2*d*n1*n5 + 59*n2*n5 - 15*d*n2*n5 - n1*n2*n5 + 
      2*n2^2*n5 + 31*n3*n5 - 9*d*n3*n5 - 2*n1*n3*n5 + 5*n2*n3*n5 + 
      2*n3^2*n5 + 16*n5^2 - 8*d*n5^2 + 9*n2*n5^2 + 3*n3*n5^2)*
     j[p4, -1 + n1, n2, n3, 1, 2 + n5, 0, 0, -1, 1, 1, 1, 1, 1, 0])/
    (2*(n2 - n3)*(4 - d + n5)*(2 - d + n1 + n5)) + 
   ((-32 + 20*d - 2*d^2 - 12*n2 + 2*n2^2 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      12*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, -1 + n1, n2, n3, 2, n5, 0, 0, 
      -1, 0, 1, 1, 1, 1, 1])/((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((32 - 20*d + 2*d^2 + 12*n2 - 2*n2^2 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 12*n5 - 
      6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, -1 + n1, n2, n3, 2, n5, 0, 0, -1, 1, 
      0, 1, 1, 1, 1])/((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-32 + 20*d - 2*d^2 - 12*n2 + 2*n2^2 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      12*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, -1 + n1, n2, n3, 2, n5, 0, 0, 
      -1, 1, 1, 0, 1, 1, 1])/((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-32 + 20*d - 2*d^2 - 12*n2 + 2*n2^2 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      12*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, -1 + n1, n2, n3, 2, 1 + n5, 
      -1, 0, -1, 0, 1, 1, 1, 1, 1])/((n2 - n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((32 - 20*d + 2*d^2 + 12*n2 - 2*n2^2 + 3*d*n3 - 
      5*n2*n3 - 2*n3^2 + 12*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*
     j[p4, -1 + n1, n2, n3, 2, 1 + n5, -1, 0, -1, 1, 0, 1, 1, 1, 1])/
    ((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-32 + 20*d - 2*d^2 - 12*n2 + 2*n2^2 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      12*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, -1 + n1, n2, n3, 2, 1 + n5, 
      -1, 0, -1, 1, 1, 0, 1, 1, 1])/((n2 - n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((32 - 20*d + 2*d^2 + 12*n2 - 2*n2^2 + 3*d*n3 - 
      5*n2*n3 - 2*n3^2 + 12*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*
     j[p4, -1 + n1, n2, n3, 2, 1 + n5, 0, -1, -1, 0, 1, 1, 1, 1, 1])/
    ((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-32 + 20*d - 2*d^2 - 12*n2 + 2*n2^2 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      12*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, -1 + n1, n2, n3, 2, 1 + n5, 
      0, -1, -1, 1, 0, 1, 1, 1, 1])/((n2 - n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((32 - 20*d + 2*d^2 + 12*n2 - 2*n2^2 + 3*d*n3 - 
      5*n2*n3 - 2*n3^2 + 12*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*
     j[p4, -1 + n1, n2, n3, 2, 1 + n5, 0, -1, -1, 1, 1, 0, 1, 1, 1])/
    ((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((32 - 20*d + 2*d^2 + 12*n2 - 2*n2^2 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 12*n5 - 
      6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, -1 + n1, n2, n3, 2, 1 + n5, 0, -1, 
      -1, 1, 1, 1, 1, 1, 0])/(2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((32 - 20*d + 2*d^2 + 12*n2 - 2*n2^2 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 12*n5 - 
      6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, -1 + n1, n2, n3, 2, 1 + n5, 0, 0, -2, 
      0, 1, 1, 1, 1, 1])/((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-32 + 20*d - 2*d^2 - 12*n2 + 2*n2^2 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      12*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, -1 + n1, n2, n3, 2, 1 + n5, 
      0, 0, -2, 1, 0, 1, 1, 1, 1])/((n2 - n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((32 - 20*d + 2*d^2 + 12*n2 - 2*n2^2 + 3*d*n3 - 
      5*n2*n3 - 2*n3^2 + 12*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*
     j[p4, -1 + n1, n2, n3, 2, 1 + n5, 0, 0, -2, 1, 1, 0, 1, 1, 1])/
    ((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((32 - 20*d + 2*d^2 + 12*n2 - 2*n2^2 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 12*n5 - 
      6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, -1 + n1, n2, n3, 2, 1 + n5, 0, 0, -2, 
      1, 1, 1, 1, 1, 0])/(2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-16 + 8*d - 8*n2 - 4*n3)*j[p4, -1 + n1, n2, n3, 2, 1 + n5, 0, 0, -1, 1, 
      1, 1, 1, 1, 0])/((n2 - n3)*(-2 + d - n1 - n5)) + 
   ((-96*n3 + 60*d*n3 - 6*d^2*n3 - 36*n2*n3 + 6*n2^2*n3 - 9*d*n3^2 + 
      15*n2*n3^2 + 6*n3^3 - 36*n3*n5 + 18*d*n3*n5 - 18*n2*n3*n5 - 9*n3^2*n5)*
     j[p4, -1 + n1, n2, 1 + n3, 0, 1 + n5, 0, -1, -1, 1, 1, 1, 1, 1, 1])/
    (2*(-n2 + n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((304*n3 - 352*d*n3 + 124*d^2*n3 - 12*d^3*n3 + 184*n1*n3 - 136*d*n1*n3 + 
      22*d^2*n1*n3 + 188*n2*n3 - 108*d*n2*n3 + 7*d^2*n2*n3 + 90*n1*n2*n3 - 
      21*d*n1*n2*n3 + 6*n2^2*n3 + 11*d*n2^2*n3 - n1*n2^2*n3 - 6*n2^3*n3 + 
      80*n3^2 - 26*d*n3^2 - 7*d^2*n3^2 + 40*n1*n3^2 - 8*d*n1*n3^2 - 
      24*n2*n3^2 + 33*d*n2*n3^2 - 3*n1*n2*n3^2 - 21*n2^2*n3^2 - 24*n3^3 + 
      19*d*n3^3 - 2*n1*n3^3 - 21*n2*n3^3 - 6*n3^4 + 192*n3*n5 - 168*d*n3*n5 + 
      36*d^2*n3*n5 + 48*n1*n3*n5 - 24*d*n1*n3*n5 + 122*n2*n3*n5 - 
      49*d*n2*n3*n5 + 24*n1*n2*n3*n5 + 13*n2^2*n3*n5 + 70*n3^2*n5 - 
      29*d*n3^2*n5 + 12*n1*n3^2*n5 + 18*n2*n3^2*n5 + 5*n3^3*n5 + 24*n3*n5^2 - 
      12*d*n3*n5^2 + 12*n2*n3*n5^2 + 6*n3^2*n5^2)*j[p4, -1 + n1, n2, 1 + n3, 
      0, 1 + n5, 0, -1, 0, 1, 1, 1, 1, 1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*
     (n2 - n3)*(-4 + d - n5)*(2 - d + n1 + n5)) + 
   ((-96*n3 + 60*d*n3 - 6*d^2*n3 - 36*n2*n3 + 6*n2^2*n3 - 9*d*n3^2 + 
      15*n2*n3^2 + 6*n3^3 - 36*n3*n5 + 18*d*n3*n5 - 18*n2*n3*n5 - 9*n3^2*n5)*
     j[p4, -1 + n1, n2, 1 + n3, 0, 1 + n5, 0, 0, -2, 1, 1, 1, 1, 1, 1])/
    (2*(-n2 + n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((320*n3 - 376*d*n3 + 136*d^2*n3 - 14*d^3*n3 - 128*n1*n3 + 232*d*n1*n3 - 
      112*d^2*n1*n3 + 14*d^3*n1*n3 - 192*n1^2*n3 + 144*d*n1^2*n3 - 
      24*d^2*n1^2*n3 + 200*n2*n3 - 120*d*n2*n3 + 10*d^2*n2*n3 - 
      104*n1*n2*n3 + 96*d*n1*n2*n3 - 10*d^2*n1*n2*n3 - 96*n1^2*n2*n3 + 
      24*d*n1^2*n2*n3 + 8*n2^2*n3 + 10*d*n2^2*n3 - 8*n1*n2^2*n3 - 
      10*d*n1*n2^2*n3 - 6*n2^3*n3 + 6*n1*n2^3*n3 + 400*n3^2 - 394*d*n3^2 + 
      121*d^2*n3^2 - 12*d^3*n3^2 + 136*n1*n3^2 - 106*d*n1*n3^2 + 
      25*d^2*n1*n3^2 - 48*n1^2*n3^2 + 12*d*n1^2*n3^2 + 170*n2*n3^2 - 
      78*d*n2*n3^2 + 7*d^2*n2*n3^2 + 108*n1*n2*n3^2 - 51*d*n1*n2*n3^2 - 
      15*n2^2*n3^2 + 11*d*n2^2*n3^2 + 20*n1*n2^2*n3^2 - 6*n2^3*n3^2 + 
      60*n3^3 - 9*d*n3^3 - 7*d^2*n3^3 + 60*n1*n3^3 - 25*d*n1*n3^3 - 
      45*n2*n3^3 + 33*d*n2*n3^3 + 18*n1*n2*n3^3 - 21*n2^2*n3^3 - 30*n3^4 + 
      19*d*n3^4 + 4*n1*n3^4 - 21*n2*n3^4 - 6*n3^5 - 104*n3*n5 + 176*d*n3*n5 - 
      86*d^2*n3*n5 + 12*d^3*n3*n5 - 336*n1*n3*n5 + 288*d*n1*n3*n5 - 
      60*d^2*n1*n3*n5 - 48*n1^2*n3*n5 + 24*d*n1^2*n3*n5 - 60*n2*n3*n5 + 
      56*d*n2*n3*n5 - 7*d^2*n2*n3*n5 - 194*n1*n2*n3*n5 + 73*d*n1*n2*n3*n5 - 
      24*n1^2*n2*n3*n5 + 8*n2^2*n3*n5 - 11*d*n2^2*n3*n5 - 13*n1*n2^2*n3*n5 + 
      6*n2^3*n3*n5 + 190*n3^2*n5 - 175*d*n3^2*n5 + 43*d^2*n3^2*n5 - 
      58*n1*n3^2*n5 + 17*d*n1*n3^2*n5 - 12*n1^2*n3^2*n5 + 167*n2*n3^2*n5 - 
      82*d*n2*n3^2*n5 + 6*n1*n2*n3^2*n5 + 34*n2^2*n3^2*n5 + 101*n3^3*n5 - 
      48*d*n3^3*n5 + 7*n1*n3^3*n5 + 39*n2*n3^3*n5 + 11*n3^4*n5 - 
      168*n3*n5^2 + 156*d*n3*n5^2 - 36*d^2*n3*n5^2 - 72*n1*n3*n5^2 + 
      36*d*n1*n3*n5^2 - 110*n2*n3*n5^2 + 49*d*n2*n3*n5^2 - 36*n1*n2*n3*n5^2 - 
      13*n2^2*n3*n5^2 - 40*n3^2*n5^2 + 17*d*n3^2*n5^2 - 18*n1*n3^2*n5^2 - 
      6*n2*n3^2*n5^2 + n3^3*n5^2 - 24*n3*n5^3 + 12*d*n3*n5^3 - 
      12*n2*n3*n5^3 - 6*n3^2*n5^3)*j[p4, -1 + n1, n2, 1 + n3, 0, 1 + n5, 0, 
      0, -1, 1, 1, 1, 1, 1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(2 - d + n1 + n5)) + 
   ((304*n3 - 352*d*n3 + 124*d^2*n3 - 12*d^3*n3 + 184*n1*n3 - 136*d*n1*n3 + 
      22*d^2*n1*n3 + 188*n2*n3 - 108*d*n2*n3 + 7*d^2*n2*n3 + 90*n1*n2*n3 - 
      21*d*n1*n2*n3 + 6*n2^2*n3 + 11*d*n2^2*n3 - n1*n2^2*n3 - 6*n2^3*n3 + 
      80*n3^2 - 26*d*n3^2 - 7*d^2*n3^2 + 40*n1*n3^2 - 8*d*n1*n3^2 - 
      24*n2*n3^2 + 33*d*n2*n3^2 - 3*n1*n2*n3^2 - 21*n2^2*n3^2 - 24*n3^3 + 
      19*d*n3^3 - 2*n1*n3^3 - 21*n2*n3^3 - 6*n3^4 + 192*n3*n5 - 168*d*n3*n5 + 
      36*d^2*n3*n5 + 48*n1*n3*n5 - 24*d*n1*n3*n5 + 122*n2*n3*n5 - 
      49*d*n2*n3*n5 + 24*n1*n2*n3*n5 + 13*n2^2*n3*n5 + 70*n3^2*n5 - 
      29*d*n3^2*n5 + 12*n1*n3^2*n5 + 18*n2*n3^2*n5 + 5*n3^3*n5 + 24*n3*n5^2 - 
      12*d*n3*n5^2 + 12*n2*n3*n5^2 + 6*n3^2*n5^2)*j[p4, -1 + n1, n2, 1 + n3, 
      1, n5, 0, -1, 0, 1, 1, 1, 1, 1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*
     (n2 - n3)*(-4 + d - n5)*(2 - d + n1 + n5)) + 
   ((-608*n3 + 1008*d*n3 - 600*d^2*n3 + 148*d^3*n3 - 12*d^4*n3 - 368*n1*n3 + 
      456*d*n1*n3 - 180*d^2*n1*n3 + 22*d^3*n1*n3 - 408*n2*n3 + 452*d*n2*n3 - 
      146*d^2*n2*n3 + 11*d^3*n2*n3 - 196*n1*n2*n3 + 148*d*n1*n2*n3 - 
      25*d^2*n1*n2*n3 - 36*n2^2*n3 + 8*d*n2^2*n3 + 5*d^2*n2^2*n3 - 
      10*n1*n2^2*n3 + 5*d*n1*n2^2*n3 + 8*n2^3*n3 - 4*d*n2^3*n3 - 
      2*n1*n2^3*n3 - 768*n3^2 + 836*d*n3^2 - 260*d^2*n3^2 + 17*d^3*n3^2 - 
      448*n1*n3^2 + 328*d*n1*n3^2 - 52*d^2*n1*n3^2 - 360*n2*n3^2 + 
      158*d*n2*n3^2 + 11*d^2*n2*n3^2 - 190*n1*n2*n3^2 + 47*d*n1*n2*n3^2 + 
      18*n2^2*n3^2 - 37*d*n2^2*n3^2 - 4*n1*n2^2*n3^2 + 12*n2^3*n3^2 - 
      112*n3^3 - 10*d*n3^3 + 33*d^2*n3^3 - 76*n1*n3^3 + 14*d*n1*n3^3 + 
      82*n2*n3^3 - 83*d*n2*n3^3 + 2*n1*n2*n3^3 + 42*n2^2*n3^3 + 60*n3^4 - 
      44*d*n3^4 + 4*n1*n3^4 + 42*n2*n3^4 + 12*n3^5 - 384*n3*n5 + 
      528*d*n3*n5 - 240*d^2*n3*n5 + 36*d^3*n3*n5 - 96*n1*n3*n5 + 
      96*d*n1*n3*n5 - 24*d^2*n1*n3*n5 - 260*n2*n3*n5 + 236*d*n2*n3*n5 - 
      53*d^2*n2*n3*n5 - 48*n1*n2*n3*n5 + 24*d*n1*n2*n3*n5 - 38*n2^2*n3*n5 + 
      19*d*n2^2*n3*n5 - 2*n2^3*n3*n5 - 524*n3^2*n5 + 464*d*n3^2*n5 - 
      101*d^2*n3^2*n5 - 120*n1*n3^2*n5 + 60*d*n1*n3^2*n5 - 296*n2*n3^2*n5 + 
      124*d*n2*n3^2*n5 - 48*n1*n2*n3^2*n5 - 32*n2^2*n3^2*n5 - 150*n3^3*n5 + 
      63*d*n3^3*n5 - 24*n1*n3^3*n5 - 40*n2*n3^3*n5 - 10*n3^4*n5 - 
      48*n3*n5^2 + 48*d*n3*n5^2 - 12*d^2*n3*n5^2 - 24*n2*n3*n5^2 + 
      12*d*n2*n3*n5^2 - 60*n3^2*n5^2 + 30*d*n3^2*n5^2 - 24*n2*n3^2*n5^2 - 
      12*n3^3*n5^2)*j[p4, -1 + n1, n2, 1 + n3, 1, n5, 0, 0, -1, 1, 1, 1, 1, 
      1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((-304*n3 + 352*d*n3 - 124*d^2*n3 + 12*d^3*n3 - 
      184*n1*n3 + 136*d*n1*n3 - 22*d^2*n1*n3 - 188*n2*n3 + 108*d*n2*n3 - 
      7*d^2*n2*n3 - 90*n1*n2*n3 + 21*d*n1*n2*n3 - 6*n2^2*n3 - 11*d*n2^2*n3 + 
      n1*n2^2*n3 + 6*n2^3*n3 - 80*n3^2 + 26*d*n3^2 + 7*d^2*n3^2 - 
      40*n1*n3^2 + 8*d*n1*n3^2 + 24*n2*n3^2 - 33*d*n2*n3^2 + 3*n1*n2*n3^2 + 
      21*n2^2*n3^2 + 24*n3^3 - 19*d*n3^3 + 2*n1*n3^3 + 21*n2*n3^3 + 6*n3^4 - 
      192*n3*n5 + 168*d*n3*n5 - 36*d^2*n3*n5 - 48*n1*n3*n5 + 24*d*n1*n3*n5 - 
      122*n2*n3*n5 + 49*d*n2*n3*n5 - 24*n1*n2*n3*n5 - 13*n2^2*n3*n5 - 
      70*n3^2*n5 + 29*d*n3^2*n5 - 12*n1*n3^2*n5 - 18*n2*n3^2*n5 - 5*n3^3*n5 - 
      24*n3*n5^2 + 12*d*n3*n5^2 - 12*n2*n3*n5^2 - 6*n3^2*n5^2)*
     j[p4, -1 + n1, n2, 1 + n3, 1, n5, 0, 0, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((304*n3 - 352*d*n3 + 124*d^2*n3 - 12*d^3*n3 + 
      184*n1*n3 - 136*d*n1*n3 + 22*d^2*n1*n3 + 188*n2*n3 - 108*d*n2*n3 + 
      7*d^2*n2*n3 + 90*n1*n2*n3 - 21*d*n1*n2*n3 + 6*n2^2*n3 + 11*d*n2^2*n3 - 
      n1*n2^2*n3 - 6*n2^3*n3 + 80*n3^2 - 26*d*n3^2 - 7*d^2*n3^2 + 
      40*n1*n3^2 - 8*d*n1*n3^2 - 24*n2*n3^2 + 33*d*n2*n3^2 - 3*n1*n2*n3^2 - 
      21*n2^2*n3^2 - 24*n3^3 + 19*d*n3^3 - 2*n1*n3^3 - 21*n2*n3^3 - 6*n3^4 + 
      192*n3*n5 - 168*d*n3*n5 + 36*d^2*n3*n5 + 48*n1*n3*n5 - 24*d*n1*n3*n5 + 
      122*n2*n3*n5 - 49*d*n2*n3*n5 + 24*n1*n2*n3*n5 + 13*n2^2*n3*n5 + 
      70*n3^2*n5 - 29*d*n3^2*n5 + 12*n1*n3^2*n5 + 18*n2*n3^2*n5 + 5*n3^3*n5 + 
      24*n3*n5^2 - 12*d*n3*n5^2 + 12*n2*n3*n5^2 + 6*n3^2*n5^2)*
     j[p4, -1 + n1, n2, 1 + n3, 1, n5, 0, 0, 0, 1, 1, 1, 1, 0, 1])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((-304*n3 + 352*d*n3 - 124*d^2*n3 + 12*d^3*n3 - 
      184*n1*n3 + 136*d*n1*n3 - 22*d^2*n1*n3 - 188*n2*n3 + 108*d*n2*n3 - 
      7*d^2*n2*n3 - 90*n1*n2*n3 + 21*d*n1*n2*n3 - 6*n2^2*n3 - 11*d*n2^2*n3 + 
      n1*n2^2*n3 + 6*n2^3*n3 - 80*n3^2 + 26*d*n3^2 + 7*d^2*n3^2 - 
      40*n1*n3^2 + 8*d*n1*n3^2 + 24*n2*n3^2 - 33*d*n2*n3^2 + 3*n1*n2*n3^2 + 
      21*n2^2*n3^2 + 24*n3^3 - 19*d*n3^3 + 2*n1*n3^3 + 21*n2*n3^3 + 6*n3^4 - 
      192*n3*n5 + 168*d*n3*n5 - 36*d^2*n3*n5 - 48*n1*n3*n5 + 24*d*n1*n3*n5 - 
      122*n2*n3*n5 + 49*d*n2*n3*n5 - 24*n1*n2*n3*n5 - 13*n2^2*n3*n5 - 
      70*n3^2*n5 + 29*d*n3^2*n5 - 12*n1*n3^2*n5 - 18*n2*n3^2*n5 - 5*n3^3*n5 - 
      24*n3*n5^2 + 12*d*n3*n5^2 - 12*n2*n3*n5^2 - 6*n3^2*n5^2)*
     j[p4, -1 + n1, n2, 1 + n3, 1, 1 + n5, -1, -1, 0, 1, 1, 1, 1, 1, 1])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((-304*n3 + 352*d*n3 - 124*d^2*n3 + 12*d^3*n3 - 
      184*n1*n3 + 136*d*n1*n3 - 22*d^2*n1*n3 - 188*n2*n3 + 108*d*n2*n3 - 
      7*d^2*n2*n3 - 90*n1*n2*n3 + 21*d*n1*n2*n3 - 6*n2^2*n3 - 11*d*n2^2*n3 + 
      n1*n2^2*n3 + 6*n2^3*n3 - 80*n3^2 + 26*d*n3^2 + 7*d^2*n3^2 - 
      40*n1*n3^2 + 8*d*n1*n3^2 + 24*n2*n3^2 - 33*d*n2*n3^2 + 3*n1*n2*n3^2 + 
      21*n2^2*n3^2 + 24*n3^3 - 19*d*n3^3 + 2*n1*n3^3 + 21*n2*n3^3 + 6*n3^4 - 
      192*n3*n5 + 168*d*n3*n5 - 36*d^2*n3*n5 - 48*n1*n3*n5 + 24*d*n1*n3*n5 - 
      122*n2*n3*n5 + 49*d*n2*n3*n5 - 24*n1*n2*n3*n5 - 13*n2^2*n3*n5 - 
      70*n3^2*n5 + 29*d*n3^2*n5 - 12*n1*n3^2*n5 - 18*n2*n3^2*n5 - 5*n3^3*n5 - 
      24*n3*n5^2 + 12*d*n3*n5^2 - 12*n2*n3*n5^2 - 6*n3^2*n5^2)*
     j[p4, -1 + n1, n2, 1 + n3, 1, 1 + n5, 0, -2, 0, 1, 1, 1, 1, 1, 1])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((64*n3 - 40*d*n3 + 4*d^2*n3 + 24*n2*n3 - 
      4*n2^2*n3 + 6*d*n3^2 - 10*n2*n3^2 - 4*n3^3 + 24*n3*n5 - 12*d*n3*n5 + 
      12*n2*n3*n5 + 6*n3^2*n5)*j[p4, -1 + n1, n2, 1 + n3, 1, 1 + n5, 0, -1, 
      -1, 1, 0, 1, 1, 1, 1])/((-n2 + n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-64*n3 + 40*d*n3 - 4*d^2*n3 - 24*n2*n3 + 4*n2^2*n3 - 6*d*n3^2 + 
      10*n2*n3^2 + 4*n3^3 - 24*n3*n5 + 12*d*n3*n5 - 12*n2*n3*n5 - 6*n3^2*n5)*
     j[p4, -1 + n1, n2, 1 + n3, 1, 1 + n5, 0, -1, -1, 1, 1, 0, 1, 1, 1])/
    ((-n2 + n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((32*n3 - 20*d*n3 + 2*d^2*n3 + 12*n2*n3 - 2*n2^2*n3 + 3*d*n3^2 - 
      5*n2*n3^2 - 2*n3^3 + 12*n3*n5 - 6*d*n3*n5 + 6*n2*n3*n5 + 3*n3^2*n5)*
     j[p4, -1 + n1, n2, 1 + n3, 1, 1 + n5, 0, -1, -1, 1, 1, 1, 0, 1, 1])/
    ((-n2 + n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((96*n3 - 60*d*n3 + 6*d^2*n3 + 36*n2*n3 - 6*n2^2*n3 + 9*d*n3^2 - 
      15*n2*n3^2 - 6*n3^3 + 36*n3*n5 - 18*d*n3*n5 + 18*n2*n3*n5 + 9*n3^2*n5)*
     j[p4, -1 + n1, n2, 1 + n3, 1, 1 + n5, 0, -1, -1, 1, 1, 1, 1, 1, 0])/
    (2*(-n2 + n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-304*n3 + 352*d*n3 - 124*d^2*n3 + 12*d^3*n3 - 184*n1*n3 + 136*d*n1*n3 - 
      22*d^2*n1*n3 - 156*n2*n3 + 60*d*n2*n3 + 17*d^2*n2*n3 - 4*d^3*n2*n3 - 
      74*n1*n2*n3 + 5*d*n1*n2*n3 + 4*d^2*n1*n2*n3 + 18*n2^2*n3 - 
      35*d*n2^2*n3 + 6*d^2*n2^2*n3 + 13*n1*n2^2*n3 - 6*d*n1*n2^2*n3 + 
      10*n2^3*n3 - 2*d*n2^3*n3 + 2*n1*n2^3*n3 - 80*n3^2 + 26*d*n3^2 + 
      7*d^2*n3^2 - 40*n1*n3^2 + 8*d*n1*n3^2 + 56*n2*n3^2 - 65*d*n2*n3^2 + 
      8*d^2*n2*n3^2 + 19*n1*n2*n3^2 - 8*d*n1*n2*n3^2 + 33*n2^2*n3^2 - 
      6*d*n2^2*n3^2 + 6*n1*n2^2*n3^2 + 24*n3^3 - 19*d*n3^3 + 2*n1*n3^3 + 
      29*n2*n3^3 - 4*d*n2*n3^3 + 4*n1*n2*n3^3 + 6*n3^4 - 192*n3*n5 + 
      168*d*n3*n5 - 36*d^2*n3*n5 - 48*n1*n3*n5 + 24*d*n1*n3*n5 - 
      106*n2*n3*n5 + 33*d*n2*n3*n5 + 4*d^2*n2*n3*n5 - 24*n1*n2*n3*n5 - 
      n2^2*n3*n5 - 6*d*n2^2*n3*n5 + 2*n2^3*n3*n5 - 70*n3^2*n5 + 
      29*d*n3^2*n5 - 12*n1*n3^2*n5 - 2*n2*n3^2*n5 - 8*d*n2*n3^2*n5 + 
      6*n2^2*n3^2*n5 - 5*n3^3*n5 + 4*n2*n3^3*n5 - 24*n3*n5^2 + 12*d*n3*n5^2 - 
      12*n2*n3*n5^2 - 6*n3^2*n5^2)*j[p4, -1 + n1, n2, 1 + n3, 1, 1 + n5, 0, 
      -1, -1, 1, 1, 1, 1, 1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(2 - d + n1 + n5)) + 
   ((304*n3 - 352*d*n3 + 124*d^2*n3 - 12*d^3*n3 + 184*n1*n3 - 136*d*n1*n3 + 
      22*d^2*n1*n3 + 188*n2*n3 - 108*d*n2*n3 + 7*d^2*n2*n3 + 90*n1*n2*n3 - 
      21*d*n1*n2*n3 + 6*n2^2*n3 + 11*d*n2^2*n3 - n1*n2^2*n3 - 6*n2^3*n3 + 
      80*n3^2 - 26*d*n3^2 - 7*d^2*n3^2 + 40*n1*n3^2 - 8*d*n1*n3^2 - 
      24*n2*n3^2 + 33*d*n2*n3^2 - 3*n1*n2*n3^2 - 21*n2^2*n3^2 - 24*n3^3 + 
      19*d*n3^3 - 2*n1*n3^3 - 21*n2*n3^3 - 6*n3^4 + 192*n3*n5 - 168*d*n3*n5 + 
      36*d^2*n3*n5 + 48*n1*n3*n5 - 24*d*n1*n3*n5 + 122*n2*n3*n5 - 
      49*d*n2*n3*n5 + 24*n1*n2*n3*n5 + 13*n2^2*n3*n5 + 70*n3^2*n5 - 
      29*d*n3^2*n5 + 12*n1*n3^2*n5 + 18*n2*n3^2*n5 + 5*n3^3*n5 + 24*n3*n5^2 - 
      12*d*n3*n5^2 + 12*n2*n3*n5^2 + 6*n3^2*n5^2)*j[p4, -1 + n1, n2, 1 + n3, 
      1, 1 + n5, 0, -1, -1, 1, 1, 1, 1, 2, 0])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((304*n3 - 352*d*n3 + 124*d^2*n3 - 12*d^3*n3 + 
      184*n1*n3 - 136*d*n1*n3 + 22*d^2*n1*n3 + 188*n2*n3 - 108*d*n2*n3 + 
      7*d^2*n2*n3 + 90*n1*n2*n3 - 21*d*n1*n2*n3 + 6*n2^2*n3 + 11*d*n2^2*n3 - 
      n1*n2^2*n3 - 6*n2^3*n3 + 80*n3^2 - 26*d*n3^2 - 7*d^2*n3^2 + 
      40*n1*n3^2 - 8*d*n1*n3^2 - 24*n2*n3^2 + 33*d*n2*n3^2 - 3*n1*n2*n3^2 - 
      21*n2^2*n3^2 - 24*n3^3 + 19*d*n3^3 - 2*n1*n3^3 - 21*n2*n3^3 - 6*n3^4 + 
      192*n3*n5 - 168*d*n3*n5 + 36*d^2*n3*n5 + 48*n1*n3*n5 - 24*d*n1*n3*n5 + 
      122*n2*n3*n5 - 49*d*n2*n3*n5 + 24*n1*n2*n3*n5 + 13*n2^2*n3*n5 + 
      70*n3^2*n5 - 29*d*n3^2*n5 + 12*n1*n3^2*n5 + 18*n2*n3^2*n5 + 5*n3^3*n5 + 
      24*n3*n5^2 - 12*d*n3*n5^2 + 12*n2*n3*n5^2 + 6*n3^2*n5^2)*
     j[p4, -1 + n1, n2, 1 + n3, 1, 1 + n5, 0, -1, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((-304*n3 + 352*d*n3 - 124*d^2*n3 + 12*d^3*n3 - 
      184*n1*n3 + 136*d*n1*n3 - 22*d^2*n1*n3 - 188*n2*n3 + 108*d*n2*n3 - 
      7*d^2*n2*n3 - 90*n1*n2*n3 + 21*d*n1*n2*n3 - 6*n2^2*n3 - 11*d*n2^2*n3 + 
      n1*n2^2*n3 + 6*n2^3*n3 - 80*n3^2 + 26*d*n3^2 + 7*d^2*n3^2 - 
      40*n1*n3^2 + 8*d*n1*n3^2 + 24*n2*n3^2 - 33*d*n2*n3^2 + 3*n1*n2*n3^2 + 
      21*n2^2*n3^2 + 24*n3^3 - 19*d*n3^3 + 2*n1*n3^3 + 21*n2*n3^3 + 6*n3^4 - 
      192*n3*n5 + 168*d*n3*n5 - 36*d^2*n3*n5 - 48*n1*n3*n5 + 24*d*n1*n3*n5 - 
      122*n2*n3*n5 + 49*d*n2*n3*n5 - 24*n1*n2*n3*n5 - 13*n2^2*n3*n5 - 
      70*n3^2*n5 + 29*d*n3^2*n5 - 12*n1*n3^2*n5 - 18*n2*n3^2*n5 - 5*n3^3*n5 - 
      24*n3*n5^2 + 12*d*n3*n5^2 - 12*n2*n3*n5^2 - 6*n3^2*n5^2)*
     j[p4, -1 + n1, n2, 1 + n3, 1, 1 + n5, 0, -1, 0, 1, 1, 1, 1, 0, 1])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((64*n3 - 40*d*n3 + 4*d^2*n3 + 24*n2*n3 - 
      4*n2^2*n3 + 6*d*n3^2 - 10*n2*n3^2 - 4*n3^3 + 24*n3*n5 - 12*d*n3*n5 + 
      12*n2*n3*n5 + 6*n3^2*n5)*j[p4, -1 + n1, n2, 1 + n3, 1, 1 + n5, 0, 0, 
      -2, 1, 0, 1, 1, 1, 1])/((-n2 + n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-64*n3 + 40*d*n3 - 4*d^2*n3 - 24*n2*n3 + 4*n2^2*n3 - 6*d*n3^2 + 
      10*n2*n3^2 + 4*n3^3 - 24*n3*n5 + 12*d*n3*n5 - 12*n2*n3*n5 - 6*n3^2*n5)*
     j[p4, -1 + n1, n2, 1 + n3, 1, 1 + n5, 0, 0, -2, 1, 1, 0, 1, 1, 1])/
    ((-n2 + n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((32*n3 - 20*d*n3 + 2*d^2*n3 + 12*n2*n3 - 2*n2^2*n3 + 3*d*n3^2 - 
      5*n2*n3^2 - 2*n3^3 + 12*n3*n5 - 6*d*n3*n5 + 6*n2*n3*n5 + 3*n3^2*n5)*
     j[p4, -1 + n1, n2, 1 + n3, 1, 1 + n5, 0, 0, -2, 1, 1, 1, 0, 1, 1])/
    ((-n2 + n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((96*n3 - 60*d*n3 + 6*d^2*n3 + 36*n2*n3 - 6*n2^2*n3 + 9*d*n3^2 - 
      15*n2*n3^2 - 6*n3^3 + 36*n3*n5 - 18*d*n3*n5 + 18*n2*n3*n5 + 9*n3^2*n5)*
     j[p4, -1 + n1, n2, 1 + n3, 1, 1 + n5, 0, 0, -2, 1, 1, 1, 1, 1, 0])/
    (2*(-n2 + n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-56*n3 + 36*d*n3 - 4*d^2*n3 + 4*n1*n3 - 2*d*n1*n3 - 26*n2*n3 + 
      3*d*n2*n3 + n1*n2*n3 + 2*n2^2*n3 - 4*n3^2 - 3*d*n3^2 + 2*n1*n3^2 + 
      5*n2*n3^2 + 2*n3^3 - 16*n3*n5 + 8*d*n3*n5 - 9*n2*n3*n5 - 3*n3^2*n5)*
     j[p4, -1 + n1, n2, 1 + n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 0, 1, 1])/
    (2*(-n2 + n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((352*n3 - 400*d*n3 + 136*d^2*n3 - 12*d^3*n3 - 176*n1*n3 + 272*d*n1*n3 - 
      116*d^2*n1*n3 + 12*d^3*n1*n3 - 176*n1^2*n3 + 128*d*n1^2*n3 - 
      20*d^2*n1^2*n3 + 232*n2*n3 - 128*d*n2*n3 + 6*d^2*n2*n3 - 148*n1*n2*n3 + 
      110*d*n1*n2*n3 - 6*d^2*n1*n2*n3 - 84*n1^2*n2*n3 + 18*d*n1^2*n2*n3 + 
      12*n2^2*n3 + 14*d*n2^2*n3 - 14*n1*n2^2*n3 - 14*d*n1*n2^2*n3 + 
      2*n1^2*n2^2*n3 - 8*n2^3*n3 + 8*n1*n2^3*n3 + 400*n3^2 - 376*d*n3^2 + 
      112*d^2*n3^2 - 12*d^3*n3^2 + 120*n1*n3^2 - 116*d*n1*n3^2 + 
      34*d^2*n1*n3^2 - 32*n1^2*n3^2 + 4*d*n1^2*n3^2 + 160*n2*n3^2 - 
      64*d*n2*n3^2 + 7*d^2*n2*n3^2 + 112*n1*n2*n3^2 - 65*d*n1*n2*n3^2 + 
      6*n1^2*n2*n3^2 - 22*n2^2*n3^2 + 11*d*n2^2*n3^2 + 27*n1*n2^2*n3^2 - 
      6*n2^3*n3^2 + 48*n3^3 - 7*d^2*n3^3 + 68*n1*n3^3 - 34*d*n1*n3^3 + 
      4*n1^2*n3^3 - 52*n2*n3^3 + 33*d*n2*n3^3 + 25*n1*n2*n3^3 - 
      21*n2^2*n3^3 - 32*n3^4 + 19*d*n3^4 + 6*n1*n3^4 - 21*n2*n3^4 - 6*n3^5 - 
      96*n3*n5 + 168*d*n3*n5 - 84*d^2*n3*n5 + 12*d^3*n3*n5 - 344*n1*n3*n5 + 
      296*d*n1*n3*n5 - 62*d^2*n1*n3*n5 - 48*n1^2*n3*n5 + 24*d*n1^2*n3*n5 - 
      48*n2*n3*n5 + 50*d*n2*n3*n5 - 7*d^2*n2*n3*n5 - 206*n1*n2*n3*n5 + 
      79*d*n1*n2*n3*n5 - 24*n1^2*n2*n3*n5 + 12*n2^2*n3*n5 - 11*d*n2^2*n3*n5 - 
      17*n1*n2^2*n3*n5 + 6*n2^3*n3*n5 + 192*n3^2*n5 - 176*d*n3^2*n5 + 
      43*d^2*n3^2*n5 - 60*n1*n3^2*n5 + 18*d*n1*n3^2*n5 - 12*n1^2*n3^2*n5 + 
      170*n2*n3^2*n5 - 82*d*n2*n3^2*n5 + 3*n1*n2*n3^2*n5 + 34*n2^2*n3^2*n5 + 
      100*n3^3*n5 - 48*d*n3^3*n5 + 8*n1*n3^3*n5 + 39*n2*n3^3*n5 + 
      11*n3^4*n5 - 168*n3*n5^2 + 156*d*n3*n5^2 - 36*d^2*n3*n5^2 - 
      72*n1*n3*n5^2 + 36*d*n1*n3*n5^2 - 110*n2*n3*n5^2 + 49*d*n2*n3*n5^2 - 
      36*n1*n2*n3*n5^2 - 13*n2^2*n3*n5^2 - 40*n3^2*n5^2 + 17*d*n3^2*n5^2 - 
      18*n1*n3^2*n5^2 - 6*n2*n3^2*n5^2 + n3^3*n5^2 - 24*n3*n5^3 + 
      12*d*n3*n5^3 - 12*n2*n3*n5^3 - 6*n3^2*n5^3)*j[p4, -1 + n1, n2, 1 + n3, 
      1, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 0, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*
     (n2 - n3)*(-4 + d - n5)*(2 - d + n1 + n5)) + 
   ((-320*n3 + 376*d*n3 - 136*d^2*n3 + 14*d^3*n3 + 128*n1*n3 - 232*d*n1*n3 + 
      112*d^2*n1*n3 - 14*d^3*n1*n3 + 192*n1^2*n3 - 144*d*n1^2*n3 + 
      24*d^2*n1^2*n3 - 200*n2*n3 + 120*d*n2*n3 - 10*d^2*n2*n3 + 
      104*n1*n2*n3 - 96*d*n1*n2*n3 + 10*d^2*n1*n2*n3 + 96*n1^2*n2*n3 - 
      24*d*n1^2*n2*n3 - 8*n2^2*n3 - 10*d*n2^2*n3 + 8*n1*n2^2*n3 + 
      10*d*n1*n2^2*n3 + 6*n2^3*n3 - 6*n1*n2^3*n3 - 400*n3^2 + 394*d*n3^2 - 
      121*d^2*n3^2 + 12*d^3*n3^2 - 136*n1*n3^2 + 106*d*n1*n3^2 - 
      25*d^2*n1*n3^2 + 48*n1^2*n3^2 - 12*d*n1^2*n3^2 - 170*n2*n3^2 + 
      78*d*n2*n3^2 - 7*d^2*n2*n3^2 - 108*n1*n2*n3^2 + 51*d*n1*n2*n3^2 + 
      15*n2^2*n3^2 - 11*d*n2^2*n3^2 - 20*n1*n2^2*n3^2 + 6*n2^3*n3^2 - 
      60*n3^3 + 9*d*n3^3 + 7*d^2*n3^3 - 60*n1*n3^3 + 25*d*n1*n3^3 + 
      45*n2*n3^3 - 33*d*n2*n3^3 - 18*n1*n2*n3^3 + 21*n2^2*n3^3 + 30*n3^4 - 
      19*d*n3^4 - 4*n1*n3^4 + 21*n2*n3^4 + 6*n3^5 + 104*n3*n5 - 176*d*n3*n5 + 
      86*d^2*n3*n5 - 12*d^3*n3*n5 + 336*n1*n3*n5 - 288*d*n1*n3*n5 + 
      60*d^2*n1*n3*n5 + 48*n1^2*n3*n5 - 24*d*n1^2*n3*n5 + 60*n2*n3*n5 - 
      56*d*n2*n3*n5 + 7*d^2*n2*n3*n5 + 194*n1*n2*n3*n5 - 73*d*n1*n2*n3*n5 + 
      24*n1^2*n2*n3*n5 - 8*n2^2*n3*n5 + 11*d*n2^2*n3*n5 + 13*n1*n2^2*n3*n5 - 
      6*n2^3*n3*n5 - 190*n3^2*n5 + 175*d*n3^2*n5 - 43*d^2*n3^2*n5 + 
      58*n1*n3^2*n5 - 17*d*n1*n3^2*n5 + 12*n1^2*n3^2*n5 - 167*n2*n3^2*n5 + 
      82*d*n2*n3^2*n5 - 6*n1*n2*n3^2*n5 - 34*n2^2*n3^2*n5 - 101*n3^3*n5 + 
      48*d*n3^3*n5 - 7*n1*n3^3*n5 - 39*n2*n3^3*n5 - 11*n3^4*n5 + 
      168*n3*n5^2 - 156*d*n3*n5^2 + 36*d^2*n3*n5^2 + 72*n1*n3*n5^2 - 
      36*d*n1*n3*n5^2 + 110*n2*n3*n5^2 - 49*d*n2*n3*n5^2 + 36*n1*n2*n3*n5^2 + 
      13*n2^2*n3*n5^2 + 40*n3^2*n5^2 - 17*d*n3^2*n5^2 + 18*n1*n3^2*n5^2 + 
      6*n2*n3^2*n5^2 - n3^3*n5^2 + 24*n3*n5^3 - 12*d*n3*n5^3 + 
      12*n2*n3*n5^3 + 6*n3^2*n5^3)*j[p4, -1 + n1, n2, 1 + n3, 1, 1 + n5, 0, 
      0, -1, 1, 1, 1, 1, 1, 0])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(2 - d + n1 + n5)) + 
   ((304*n3 - 352*d*n3 + 124*d^2*n3 - 12*d^3*n3 + 184*n1*n3 - 136*d*n1*n3 + 
      22*d^2*n1*n3 + 188*n2*n3 - 108*d*n2*n3 + 7*d^2*n2*n3 + 90*n1*n2*n3 - 
      21*d*n1*n2*n3 + 6*n2^2*n3 + 11*d*n2^2*n3 - n1*n2^2*n3 - 6*n2^3*n3 + 
      80*n3^2 - 26*d*n3^2 - 7*d^2*n3^2 + 40*n1*n3^2 - 8*d*n1*n3^2 - 
      24*n2*n3^2 + 33*d*n2*n3^2 - 3*n1*n2*n3^2 - 21*n2^2*n3^2 - 24*n3^3 + 
      19*d*n3^3 - 2*n1*n3^3 - 21*n2*n3^3 - 6*n3^4 + 496*n3*n5 - 520*d*n3*n5 + 
      160*d^2*n3*n5 - 12*d^3*n3*n5 + 232*n1*n3*n5 - 160*d*n1*n3*n5 + 
      22*d^2*n1*n3*n5 + 310*n2*n3*n5 - 157*d*n2*n3*n5 + 7*d^2*n2*n3*n5 + 
      114*n1*n2*n3*n5 - 21*d*n1*n2*n3*n5 + 19*n2^2*n3*n5 + 11*d*n2^2*n3*n5 - 
      n1*n2^2*n3*n5 - 6*n2^3*n3*n5 + 150*n3^2*n5 - 55*d*n3^2*n5 - 
      7*d^2*n3^2*n5 + 52*n1*n3^2*n5 - 8*d*n1*n3^2*n5 - 6*n2*n3^2*n5 + 
      33*d*n2*n3^2*n5 - 3*n1*n2*n3^2*n5 - 21*n2^2*n3^2*n5 - 19*n3^3*n5 + 
      19*d*n3^3*n5 - 2*n1*n3^3*n5 - 21*n2*n3^3*n5 - 6*n3^4*n5 + 216*n3*n5^2 - 
      180*d*n3*n5^2 + 36*d^2*n3*n5^2 + 48*n1*n3*n5^2 - 24*d*n1*n3*n5^2 + 
      134*n2*n3*n5^2 - 49*d*n2*n3*n5^2 + 24*n1*n2*n3*n5^2 + 13*n2^2*n3*n5^2 + 
      76*n3^2*n5^2 - 29*d*n3^2*n5^2 + 12*n1*n3^2*n5^2 + 18*n2*n3^2*n5^2 + 
      5*n3^3*n5^2 + 24*n3*n5^3 - 12*d*n3*n5^3 + 12*n2*n3*n5^3 + 6*n3^2*n5^3)*
     j[p4, -1 + n1, n2, 1 + n3, 1, 2 + n5, 0, -1, -1, 1, 1, 1, 1, 0, 1])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((-304*n3 + 352*d*n3 - 124*d^2*n3 + 12*d^3*n3 - 
      184*n1*n3 + 136*d*n1*n3 - 22*d^2*n1*n3 - 188*n2*n3 + 108*d*n2*n3 - 
      7*d^2*n2*n3 - 90*n1*n2*n3 + 21*d*n1*n2*n3 - 6*n2^2*n3 - 11*d*n2^2*n3 + 
      n1*n2^2*n3 + 6*n2^3*n3 - 80*n3^2 + 26*d*n3^2 + 7*d^2*n3^2 - 
      40*n1*n3^2 + 8*d*n1*n3^2 + 24*n2*n3^2 - 33*d*n2*n3^2 + 3*n1*n2*n3^2 + 
      21*n2^2*n3^2 + 24*n3^3 - 19*d*n3^3 + 2*n1*n3^3 + 21*n2*n3^3 + 6*n3^4 - 
      496*n3*n5 + 520*d*n3*n5 - 160*d^2*n3*n5 + 12*d^3*n3*n5 - 232*n1*n3*n5 + 
      160*d*n1*n3*n5 - 22*d^2*n1*n3*n5 - 310*n2*n3*n5 + 157*d*n2*n3*n5 - 
      7*d^2*n2*n3*n5 - 114*n1*n2*n3*n5 + 21*d*n1*n2*n3*n5 - 19*n2^2*n3*n5 - 
      11*d*n2^2*n3*n5 + n1*n2^2*n3*n5 + 6*n2^3*n3*n5 - 150*n3^2*n5 + 
      55*d*n3^2*n5 + 7*d^2*n3^2*n5 - 52*n1*n3^2*n5 + 8*d*n1*n3^2*n5 + 
      6*n2*n3^2*n5 - 33*d*n2*n3^2*n5 + 3*n1*n2*n3^2*n5 + 21*n2^2*n3^2*n5 + 
      19*n3^3*n5 - 19*d*n3^3*n5 + 2*n1*n3^3*n5 + 21*n2*n3^3*n5 + 6*n3^4*n5 - 
      216*n3*n5^2 + 180*d*n3*n5^2 - 36*d^2*n3*n5^2 - 48*n1*n3*n5^2 + 
      24*d*n1*n3*n5^2 - 134*n2*n3*n5^2 + 49*d*n2*n3*n5^2 - 24*n1*n2*n3*n5^2 - 
      13*n2^2*n3*n5^2 - 76*n3^2*n5^2 + 29*d*n3^2*n5^2 - 12*n1*n3^2*n5^2 - 
      18*n2*n3^2*n5^2 - 5*n3^3*n5^2 - 24*n3*n5^3 + 12*d*n3*n5^3 - 
      12*n2*n3*n5^3 - 6*n3^2*n5^3)*j[p4, -1 + n1, n2, 1 + n3, 1, 2 + n5, 0, 
      -1, -1, 1, 1, 1, 1, 1, 0])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(2 - d + n1 + n5)) + 
   ((304*n3 - 352*d*n3 + 124*d^2*n3 - 12*d^3*n3 + 184*n1*n3 - 136*d*n1*n3 + 
      22*d^2*n1*n3 + 188*n2*n3 - 108*d*n2*n3 + 7*d^2*n2*n3 + 90*n1*n2*n3 - 
      21*d*n1*n2*n3 + 6*n2^2*n3 + 11*d*n2^2*n3 - n1*n2^2*n3 - 6*n2^3*n3 + 
      80*n3^2 - 26*d*n3^2 - 7*d^2*n3^2 + 40*n1*n3^2 - 8*d*n1*n3^2 - 
      24*n2*n3^2 + 33*d*n2*n3^2 - 3*n1*n2*n3^2 - 21*n2^2*n3^2 - 24*n3^3 + 
      19*d*n3^3 - 2*n1*n3^3 - 21*n2*n3^3 - 6*n3^4 + 192*n3*n5 - 168*d*n3*n5 + 
      36*d^2*n3*n5 + 48*n1*n3*n5 - 24*d*n1*n3*n5 + 122*n2*n3*n5 - 
      49*d*n2*n3*n5 + 24*n1*n2*n3*n5 + 13*n2^2*n3*n5 + 70*n3^2*n5 - 
      29*d*n3^2*n5 + 12*n1*n3^2*n5 + 18*n2*n3^2*n5 + 5*n3^3*n5 + 24*n3*n5^2 - 
      12*d*n3*n5^2 + 12*n2*n3*n5^2 + 6*n3^2*n5^2)*j[p4, -1 + n1, n2, 1 + n3, 
      2, n5, 0, 0, -1, 1, 1, 1, 1, 1, 0])/(2*(-1 + n1)*(-2 + d - n2 - n3)*
     (n2 - n3)*(-4 + d - n5)*(2 - d + n1 + n5)) + 
   ((-304*n3 + 352*d*n3 - 124*d^2*n3 + 12*d^3*n3 - 184*n1*n3 + 136*d*n1*n3 - 
      22*d^2*n1*n3 - 188*n2*n3 + 108*d*n2*n3 - 7*d^2*n2*n3 - 90*n1*n2*n3 + 
      21*d*n1*n2*n3 - 6*n2^2*n3 - 11*d*n2^2*n3 + n1*n2^2*n3 + 6*n2^3*n3 - 
      80*n3^2 + 26*d*n3^2 + 7*d^2*n3^2 - 40*n1*n3^2 + 8*d*n1*n3^2 + 
      24*n2*n3^2 - 33*d*n2*n3^2 + 3*n1*n2*n3^2 + 21*n2^2*n3^2 + 24*n3^3 - 
      19*d*n3^3 + 2*n1*n3^3 + 21*n2*n3^3 + 6*n3^4 - 192*n3*n5 + 168*d*n3*n5 - 
      36*d^2*n3*n5 - 48*n1*n3*n5 + 24*d*n1*n3*n5 - 122*n2*n3*n5 + 
      49*d*n2*n3*n5 - 24*n1*n2*n3*n5 - 13*n2^2*n3*n5 - 70*n3^2*n5 + 
      29*d*n3^2*n5 - 12*n1*n3^2*n5 - 18*n2*n3^2*n5 - 5*n3^3*n5 - 24*n3*n5^2 + 
      12*d*n3*n5^2 - 12*n2*n3*n5^2 - 6*n3^2*n5^2)*j[p4, -1 + n1, n2, 1 + n3, 
      2, 1 + n5, 0, -1, -1, 1, 1, 1, 1, 1, 0])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((-304*n3 + 352*d*n3 - 124*d^2*n3 + 12*d^3*n3 - 
      184*n1*n3 + 136*d*n1*n3 - 22*d^2*n1*n3 - 188*n2*n3 + 108*d*n2*n3 - 
      7*d^2*n2*n3 - 90*n1*n2*n3 + 21*d*n1*n2*n3 - 6*n2^2*n3 - 11*d*n2^2*n3 + 
      n1*n2^2*n3 + 6*n2^3*n3 - 384*n3^2 + 378*d*n3^2 - 117*d^2*n3^2 + 
      12*d^3*n3^2 - 224*n1*n3^2 + 144*d*n1*n3^2 - 22*d^2*n1*n3^2 - 
      164*n2*n3^2 + 75*d*n2*n3^2 - 7*d^2*n2*n3^2 - 87*n1*n2*n3^2 + 
      21*d*n1*n2*n3^2 + 15*n2^2*n3^2 - 11*d*n2^2*n3^2 + n1*n2^2*n3^2 + 
      6*n2^3*n3^2 - 56*n3^3 + 7*d*n3^3 + 7*d^2*n3^3 - 38*n1*n3^3 + 
      8*d*n1*n3^3 + 45*n2*n3^3 - 33*d*n2*n3^3 + 3*n1*n2*n3^3 + 21*n2^2*n3^3 + 
      30*n3^4 - 19*d*n3^4 + 2*n1*n3^4 + 21*n2*n3^4 + 6*n3^5 - 192*n3*n5 + 
      168*d*n3*n5 - 36*d^2*n3*n5 - 48*n1*n3*n5 + 24*d*n1*n3*n5 - 
      122*n2*n3*n5 + 49*d*n2*n3*n5 - 24*n1*n2*n3*n5 - 13*n2^2*n3*n5 - 
      262*n3^2*n5 + 197*d*n3^2*n5 - 36*d^2*n3^2*n5 - 60*n1*n3^2*n5 + 
      24*d*n1*n3^2*n5 - 140*n2*n3^2*n5 + 49*d*n2*n3^2*n5 - 24*n1*n2*n3^2*n5 - 
      13*n2^2*n3^2*n5 - 75*n3^3*n5 + 29*d*n3^3*n5 - 12*n1*n3^3*n5 - 
      18*n2*n3^3*n5 - 5*n3^4*n5 - 24*n3*n5^2 + 12*d*n3*n5^2 - 12*n2*n3*n5^2 - 
      30*n3^2*n5^2 + 12*d*n3^2*n5^2 - 12*n2*n3^2*n5^2 - 6*n3^3*n5^2)*
     j[p4, -1 + n1, n2, 2 + n3, 0, 1 + n5, 0, -1, -1, 1, 1, 1, 1, 1, 1])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((304*n3 - 352*d*n3 + 124*d^2*n3 - 12*d^3*n3 + 
      184*n1*n3 - 136*d*n1*n3 + 22*d^2*n1*n3 + 188*n2*n3 - 108*d*n2*n3 + 
      7*d^2*n2*n3 + 90*n1*n2*n3 - 21*d*n1*n2*n3 + 6*n2^2*n3 + 11*d*n2^2*n3 - 
      n1*n2^2*n3 - 6*n2^3*n3 + 384*n3^2 - 378*d*n3^2 + 117*d^2*n3^2 - 
      12*d^3*n3^2 + 224*n1*n3^2 - 144*d*n1*n3^2 + 22*d^2*n1*n3^2 + 
      164*n2*n3^2 - 75*d*n2*n3^2 + 7*d^2*n2*n3^2 + 87*n1*n2*n3^2 - 
      21*d*n1*n2*n3^2 - 15*n2^2*n3^2 + 11*d*n2^2*n3^2 - n1*n2^2*n3^2 - 
      6*n2^3*n3^2 + 56*n3^3 - 7*d*n3^3 - 7*d^2*n3^3 + 38*n1*n3^3 - 
      8*d*n1*n3^3 - 45*n2*n3^3 + 33*d*n2*n3^3 - 3*n1*n2*n3^3 - 21*n2^2*n3^3 - 
      30*n3^4 + 19*d*n3^4 - 2*n1*n3^4 - 21*n2*n3^4 - 6*n3^5 + 192*n3*n5 - 
      168*d*n3*n5 + 36*d^2*n3*n5 + 48*n1*n3*n5 - 24*d*n1*n3*n5 + 
      122*n2*n3*n5 - 49*d*n2*n3*n5 + 24*n1*n2*n3*n5 + 13*n2^2*n3*n5 + 
      262*n3^2*n5 - 197*d*n3^2*n5 + 36*d^2*n3^2*n5 + 60*n1*n3^2*n5 - 
      24*d*n1*n3^2*n5 + 140*n2*n3^2*n5 - 49*d*n2*n3^2*n5 + 24*n1*n2*n3^2*n5 + 
      13*n2^2*n3^2*n5 + 75*n3^3*n5 - 29*d*n3^3*n5 + 12*n1*n3^3*n5 + 
      18*n2*n3^3*n5 + 5*n3^4*n5 + 24*n3*n5^2 - 12*d*n3*n5^2 + 12*n2*n3*n5^2 + 
      30*n3^2*n5^2 - 12*d*n3^2*n5^2 + 12*n2*n3^2*n5^2 + 6*n3^3*n5^2)*
     j[p4, -1 + n1, n2, 2 + n3, 1, 1 + n5, 0, -1, -1, 1, 1, 1, 1, 1, 0])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((304*n2 - 352*d*n2 + 124*d^2*n2 - 12*d^3*n2 + 
      184*n1*n2 - 136*d*n1*n2 + 22*d^2*n1*n2 + 188*n2^2 - 108*d*n2^2 + 
      7*d^2*n2^2 + 90*n1*n2^2 - 21*d*n1*n2^2 + 6*n2^3 + 11*d*n2^3 - n1*n2^3 - 
      6*n2^4 + 80*n2*n3 - 26*d*n2*n3 - 7*d^2*n2*n3 + 40*n1*n2*n3 - 
      8*d*n1*n2*n3 - 24*n2^2*n3 + 33*d*n2^2*n3 - 3*n1*n2^2*n3 - 21*n2^3*n3 - 
      24*n2*n3^2 + 19*d*n2*n3^2 - 2*n1*n2*n3^2 - 21*n2^2*n3^2 - 6*n2*n3^3 + 
      192*n2*n5 - 168*d*n2*n5 + 36*d^2*n2*n5 + 48*n1*n2*n5 - 24*d*n1*n2*n5 + 
      122*n2^2*n5 - 49*d*n2^2*n5 + 24*n1*n2^2*n5 + 13*n2^3*n5 + 70*n2*n3*n5 - 
      29*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 18*n2^2*n3*n5 + 5*n2*n3^2*n5 + 
      24*n2*n5^2 - 12*d*n2*n5^2 + 12*n2^2*n5^2 + 6*n2*n3*n5^2)*
     j[p4, -1 + n1, 1 + n2, -1 + n3, 0, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((-336*n2 + 400*d*n2 - 148*d^2*n2 + 16*d^3*n2 - 
      200*n1*n2 + 152*d*n1*n2 - 26*d^2*n1*n2 - 212*n2^2 + 132*d*n2^2 - 
      13*d^2*n2^2 - 102*n1*n2^2 + 27*d*n1*n2^2 - 10*n2^3 - 9*d*n2^3 - 
      n1*n2^3 + 6*n2^4 - 112*n2*n3 + 58*d*n2*n3 - d^2*n2*n3 - 56*n1*n2*n3 + 
      16*d*n1*n2*n3 + 12*n2^2*n3 - 27*d*n2^2*n3 - 3*n1*n2^2*n3 + 21*n2^3*n3 + 
      16*n2*n3^2 - 15*d*n2*n3^2 - 2*n1*n2*n3^2 + 21*n2^2*n3^2 + 6*n2*n3^3 - 
      544*n2*n5 + 584*d*n2*n5 - 188*d^2*n2*n5 + 16*d^3*n2*n5 - 248*n1*n2*n5 + 
      176*d*n1*n2*n5 - 26*d^2*n1*n2*n5 - 346*n2^2*n5 + 187*d*n2^2*n5 - 
      13*d^2*n2^2*n5 - 126*n1*n2^2*n5 + 27*d*n1*n2^2*n5 - 25*n2^3*n5 - 
      9*d*n2^3*n5 - n1*n2^3*n5 + 6*n2^4*n5 - 198*n2*n3*n5 + 95*d*n2*n3*n5 - 
      d^2*n2*n3*n5 - 68*n1*n2*n3*n5 + 16*d*n1*n2*n3*n5 - 12*n2^2*n3*n5 - 
      27*d*n2^2*n3*n5 - 3*n1*n2^2*n3*n5 + 21*n2^3*n3*n5 + 7*n2*n3^2*n5 - 
      15*d*n2*n3^2*n5 - 2*n1*n2*n3^2*n5 + 21*n2^2*n3^2*n5 + 6*n2*n3^3*n5 - 
      232*n2*n5^2 + 196*d*n2*n5^2 - 40*d^2*n2*n5^2 - 48*n1*n2*n5^2 + 
      24*d*n1*n2*n5^2 - 146*n2^2*n5^2 + 55*d*n2^2*n5^2 - 24*n1*n2^2*n5^2 - 
      15*n2^3*n5^2 - 92*n2*n3*n5^2 + 37*d*n2*n3*n5^2 - 12*n1*n2*n3*n5^2 - 
      24*n2^2*n3*n5^2 - 9*n2*n3^2*n5^2 - 24*n2*n5^3 + 12*d*n2*n5^3 - 
      12*n2^2*n5^3 - 6*n2*n3*n5^3)*j[p4, -1 + n1, 1 + n2, -1 + n3, 0, 2 + n5, 
      0, 0, -1, 1, 1, 1, 1, 1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(2 - d + n1 + n5)) + 
   ((-304*n2 + 352*d*n2 - 124*d^2*n2 + 12*d^3*n2 - 184*n1*n2 + 136*d*n1*n2 - 
      22*d^2*n1*n2 - 188*n2^2 + 108*d*n2^2 - 7*d^2*n2^2 - 90*n1*n2^2 + 
      21*d*n1*n2^2 - 6*n2^3 - 11*d*n2^3 + n1*n2^3 + 6*n2^4 - 80*n2*n3 + 
      26*d*n2*n3 + 7*d^2*n2*n3 - 40*n1*n2*n3 + 8*d*n1*n2*n3 + 24*n2^2*n3 - 
      33*d*n2^2*n3 + 3*n1*n2^2*n3 + 21*n2^3*n3 + 24*n2*n3^2 - 19*d*n2*n3^2 + 
      2*n1*n2*n3^2 + 21*n2^2*n3^2 + 6*n2*n3^3 - 192*n2*n5 + 168*d*n2*n5 - 
      36*d^2*n2*n5 - 48*n1*n2*n5 + 24*d*n1*n2*n5 - 122*n2^2*n5 + 
      49*d*n2^2*n5 - 24*n1*n2^2*n5 - 13*n2^3*n5 - 70*n2*n3*n5 + 
      29*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 18*n2^2*n3*n5 - 5*n2*n3^2*n5 - 
      24*n2*n5^2 + 12*d*n2*n5^2 - 12*n2^2*n5^2 - 6*n2*n3*n5^2)*
     j[p4, -1 + n1, 1 + n2, -1 + n3, 1, 1 + n5, -1, 0, 0, 1, 1, 1, 1, 1, 1])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((-304*n2 + 352*d*n2 - 124*d^2*n2 + 12*d^3*n2 - 
      184*n1*n2 + 136*d*n1*n2 - 22*d^2*n1*n2 - 188*n2^2 + 108*d*n2^2 - 
      7*d^2*n2^2 - 90*n1*n2^2 + 21*d*n1*n2^2 - 6*n2^3 - 11*d*n2^3 + n1*n2^3 + 
      6*n2^4 - 80*n2*n3 + 26*d*n2*n3 + 7*d^2*n2*n3 - 40*n1*n2*n3 + 
      8*d*n1*n2*n3 + 24*n2^2*n3 - 33*d*n2^2*n3 + 3*n1*n2^2*n3 + 21*n2^3*n3 + 
      24*n2*n3^2 - 19*d*n2*n3^2 + 2*n1*n2*n3^2 + 21*n2^2*n3^2 + 6*n2*n3^3 - 
      192*n2*n5 + 168*d*n2*n5 - 36*d^2*n2*n5 - 48*n1*n2*n5 + 24*d*n1*n2*n5 - 
      122*n2^2*n5 + 49*d*n2^2*n5 - 24*n1*n2^2*n5 - 13*n2^3*n5 - 70*n2*n3*n5 + 
      29*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 18*n2^2*n3*n5 - 5*n2*n3^2*n5 - 
      24*n2*n5^2 + 12*d*n2*n5^2 - 12*n2^2*n5^2 - 6*n2*n3*n5^2)*
     j[p4, -1 + n1, 1 + n2, -1 + n3, 1, 1 + n5, 0, -1, 0, 1, 1, 1, 1, 1, 1])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((32*n2 - 20*d*n2 + 2*d^2*n2 + 12*n2^2 - 2*n2^3 + 
      3*d*n2*n3 - 5*n2^2*n3 - 2*n2*n3^2 + 12*n2*n5 - 6*d*n2*n5 + 6*n2^2*n5 + 
      3*n2*n3*n5)*j[p4, -1 + n1, 1 + n2, -1 + n3, 1, 1 + n5, 0, 0, -1, 1, 0, 
      1, 1, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((336*n2 - 400*d*n2 + 148*d^2*n2 - 16*d^3*n2 + 200*n1*n2 - 152*d*n1*n2 + 
      26*d^2*n1*n2 + 212*n2^2 - 132*d*n2^2 + 13*d^2*n2^2 + 102*n1*n2^2 - 
      27*d*n1*n2^2 + 10*n2^3 + 9*d*n2^3 + n1*n2^3 - 6*n2^4 + 112*n2*n3 - 
      58*d*n2*n3 + d^2*n2*n3 + 56*n1*n2*n3 - 16*d*n1*n2*n3 - 12*n2^2*n3 + 
      27*d*n2^2*n3 + 3*n1*n2^2*n3 - 21*n2^3*n3 - 16*n2*n3^2 + 15*d*n2*n3^2 + 
      2*n1*n2*n3^2 - 21*n2^2*n3^2 - 6*n2*n3^3 + 208*n2*n5 - 184*d*n2*n5 + 
      40*d^2*n2*n5 + 48*n1*n2*n5 - 24*d*n1*n2*n5 + 134*n2^2*n5 - 
      55*d*n2^2*n5 + 24*n1*n2^2*n5 + 15*n2^3*n5 + 86*n2*n3*n5 - 
      37*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 24*n2^2*n3*n5 + 9*n2*n3^2*n5 + 
      24*n2*n5^2 - 12*d*n2*n5^2 + 12*n2^2*n5^2 + 6*n2*n3*n5^2)*
     j[p4, -1 + n1, 1 + n2, -1 + n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 0, 2, 1])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((-736*n2 + 1192*d*n2 - 696*d^2*n2 + 170*d^3*n2 - 
      14*d^4*n2 - 560*n1*n2 + 672*d*n1*n2 - 252*d^2*n1*n2 + 28*d^3*n1*n2 - 
      192*n1^2*n2 + 144*d*n1^2*n2 - 24*d^2*n1^2*n2 - 832*n2^2 + 904*d*n2^2 - 
      292*d^2*n2^2 + 24*d^3*n2^2 - 436*n1*n2^2 + 290*d*n1*n2^2 - 
      36*d^2*n1*n2^2 - 96*n1^2*n2^2 + 24*d*n1^2*n2^2 - 252*n2^3 + 
      120*d*n2^3 - 62*n1*n2^3 + 2*n2^4 - 16*d*n2^4 + 8*n1*n2^4 + 6*n2^5 - 
      272*n2*n3 + 242*d*n2*n3 - 47*d^2*n2*n3 - 3*d^3*n2*n3 - 64*n1*n2*n3 + 
      12*d*n1*n2*n3 + 10*d^2*n1*n2*n3 - 48*n1^2*n2*n3 + 12*d*n1^2*n2*n3 - 
      118*n2^2*n3 - 16*d*n2^2*n3 + 33*d^2*n2^2*n3 + 46*n1*n2^2*n3 - 
      44*d*n1*n2^2*n3 + 53*n2^3*n3 - 51*d*n2^3*n3 + 28*n1*n2^3*n3 + 
      21*n2^4*n3 + 20*n2*n3^2 - 47*d*n2*n3^2 + 17*d^2*n2*n3^2 + 
      52*n1*n2*n3^2 - 28*d*n1*n2*n3^2 + 55*n2^2*n3^2 - 38*d*n2^2*n3^2 + 
      28*n1*n2^2*n3^2 + 21*n2^3*n3^2 + 10*n2*n3^3 - 6*d*n2*n3^3 + 
      8*n1*n2*n3^3 + 6*n2^2*n3^3 - 712*n2*n5 + 912*d*n2*n5 - 378*d^2*n2*n5 + 
      50*d^3*n2*n5 - 456*n1*n2*n5 + 384*d*n1*n2*n5 - 78*d^2*n1*n2*n5 - 
      48*n1^2*n2*n5 + 24*d*n1^2*n2*n5 - 656*n2^2*n5 + 522*d*n2^2*n5 - 
      97*d^2*n2^2*n5 - 290*n1*n2^2*n5 + 109*d*n1*n2^2*n5 - 24*n1^2*n2^2*n5 - 
      166*n2^3*n5 + 55*d*n2^3*n5 - 31*n1*n2^3*n5 - 8*n2^4*n5 - 238*n2*n3*n5 + 
      171*d*n2*n3*n5 - 26*d^2*n2*n3*n5 - 124*n1*n2*n3*n5 + 44*d*n1*n2*n3*n5 - 
      12*n1^2*n2*n3*n5 - 99*n2^2*n3*n5 + 21*d*n2^2*n3*n5 - 21*n1*n2^2*n3*n5 + 
      11*n2*n3^2*n5 - 12*d*n2*n3^2*n5 - 2*n1*n2*n3^2*n5 + 14*n2^2*n3^2*n5 + 
      6*n2*n3^3*n5 - 240*n2*n5^2 + 216*d*n2*n5^2 - 48*d^2*n2*n5^2 - 
      72*n1*n2*n5^2 + 36*d*n1*n2*n5^2 - 170*n2^2*n5^2 + 73*d*n2^2*n5^2 - 
      36*n1*n2^2*n5^2 - 25*n2^3*n5^2 - 82*n2*n3*n5^2 + 35*d*n2*n3*n5^2 - 
      18*n1*n2*n3*n5^2 - 24*n2^2*n3*n5^2 - 5*n2*n3^2*n5^2 - 24*n2*n5^3 + 
      12*d*n2*n5^3 - 12*n2^2*n5^3 - 6*n2*n3*n5^3)*j[p4, -1 + n1, 1 + n2, 
      -1 + n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 1, 1])/
    ((-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((304*n2 - 352*d*n2 + 124*d^2*n2 - 12*d^3*n2 + 
      184*n1*n2 - 136*d*n1*n2 + 22*d^2*n1*n2 + 188*n2^2 - 108*d*n2^2 + 
      7*d^2*n2^2 + 90*n1*n2^2 - 21*d*n1*n2^2 + 6*n2^3 + 11*d*n2^3 - n1*n2^3 - 
      6*n2^4 + 80*n2*n3 - 26*d*n2*n3 - 7*d^2*n2*n3 + 40*n1*n2*n3 - 
      8*d*n1*n2*n3 - 24*n2^2*n3 + 33*d*n2^2*n3 - 3*n1*n2^2*n3 - 21*n2^3*n3 - 
      24*n2*n3^2 + 19*d*n2*n3^2 - 2*n1*n2*n3^2 - 21*n2^2*n3^2 - 6*n2*n3^3 + 
      192*n2*n5 - 168*d*n2*n5 + 36*d^2*n2*n5 + 48*n1*n2*n5 - 24*d*n1*n2*n5 + 
      122*n2^2*n5 - 49*d*n2^2*n5 + 24*n1*n2^2*n5 + 13*n2^3*n5 + 70*n2*n3*n5 - 
      29*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 18*n2^2*n3*n5 + 5*n2*n3^2*n5 + 
      24*n2*n5^2 - 12*d*n2*n5^2 + 12*n2^2*n5^2 + 6*n2*n3*n5^2)*
     j[p4, -1 + n1, 1 + n2, -1 + n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 2, 0])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((336*n2 - 400*d*n2 + 148*d^2*n2 - 16*d^3*n2 + 
      200*n1*n2 - 152*d*n1*n2 + 26*d^2*n1*n2 + 212*n2^2 - 132*d*n2^2 + 
      13*d^2*n2^2 + 102*n1*n2^2 - 27*d*n1*n2^2 + 10*n2^3 + 9*d*n2^3 + 
      n1*n2^3 - 6*n2^4 + 112*n2*n3 - 58*d*n2*n3 + d^2*n2*n3 + 56*n1*n2*n3 - 
      16*d*n1*n2*n3 - 12*n2^2*n3 + 27*d*n2^2*n3 + 3*n1*n2^2*n3 - 21*n2^3*n3 - 
      16*n2*n3^2 + 15*d*n2*n3^2 + 2*n1*n2*n3^2 - 21*n2^2*n3^2 - 6*n2*n3^3 + 
      544*n2*n5 - 584*d*n2*n5 + 188*d^2*n2*n5 - 16*d^3*n2*n5 + 248*n1*n2*n5 - 
      176*d*n1*n2*n5 + 26*d^2*n1*n2*n5 + 346*n2^2*n5 - 187*d*n2^2*n5 + 
      13*d^2*n2^2*n5 + 126*n1*n2^2*n5 - 27*d*n1*n2^2*n5 + 25*n2^3*n5 + 
      9*d*n2^3*n5 + n1*n2^3*n5 - 6*n2^4*n5 + 198*n2*n3*n5 - 95*d*n2*n3*n5 + 
      d^2*n2*n3*n5 + 68*n1*n2*n3*n5 - 16*d*n1*n2*n3*n5 + 12*n2^2*n3*n5 + 
      27*d*n2^2*n3*n5 + 3*n1*n2^2*n3*n5 - 21*n2^3*n3*n5 - 7*n2*n3^2*n5 + 
      15*d*n2*n3^2*n5 + 2*n1*n2*n3^2*n5 - 21*n2^2*n3^2*n5 - 6*n2*n3^3*n5 + 
      232*n2*n5^2 - 196*d*n2*n5^2 + 40*d^2*n2*n5^2 + 48*n1*n2*n5^2 - 
      24*d*n1*n2*n5^2 + 146*n2^2*n5^2 - 55*d*n2^2*n5^2 + 24*n1*n2^2*n5^2 + 
      15*n2^3*n5^2 + 92*n2*n3*n5^2 - 37*d*n2*n3*n5^2 + 12*n1*n2*n3*n5^2 + 
      24*n2^2*n3*n5^2 + 9*n2*n3^2*n5^2 + 24*n2*n5^3 - 12*d*n2*n5^3 + 
      12*n2^2*n5^3 + 6*n2*n3*n5^3)*j[p4, -1 + n1, 1 + n2, -1 + n3, 1, 2 + n5, 
      -1, 0, -1, 1, 1, 1, 1, 1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(2 - d + n1 + n5)) + 
   ((336*n2 - 400*d*n2 + 148*d^2*n2 - 16*d^3*n2 + 200*n1*n2 - 152*d*n1*n2 + 
      26*d^2*n1*n2 + 212*n2^2 - 132*d*n2^2 + 13*d^2*n2^2 + 102*n1*n2^2 - 
      27*d*n1*n2^2 + 10*n2^3 + 9*d*n2^3 + n1*n2^3 - 6*n2^4 + 112*n2*n3 - 
      58*d*n2*n3 + d^2*n2*n3 + 56*n1*n2*n3 - 16*d*n1*n2*n3 - 12*n2^2*n3 + 
      27*d*n2^2*n3 + 3*n1*n2^2*n3 - 21*n2^3*n3 - 16*n2*n3^2 + 15*d*n2*n3^2 + 
      2*n1*n2*n3^2 - 21*n2^2*n3^2 - 6*n2*n3^3 + 544*n2*n5 - 584*d*n2*n5 + 
      188*d^2*n2*n5 - 16*d^3*n2*n5 + 248*n1*n2*n5 - 176*d*n1*n2*n5 + 
      26*d^2*n1*n2*n5 + 346*n2^2*n5 - 187*d*n2^2*n5 + 13*d^2*n2^2*n5 + 
      126*n1*n2^2*n5 - 27*d*n1*n2^2*n5 + 25*n2^3*n5 + 9*d*n2^3*n5 + 
      n1*n2^3*n5 - 6*n2^4*n5 + 198*n2*n3*n5 - 95*d*n2*n3*n5 + d^2*n2*n3*n5 + 
      68*n1*n2*n3*n5 - 16*d*n1*n2*n3*n5 + 12*n2^2*n3*n5 + 27*d*n2^2*n3*n5 + 
      3*n1*n2^2*n3*n5 - 21*n2^3*n3*n5 - 7*n2*n3^2*n5 + 15*d*n2*n3^2*n5 + 
      2*n1*n2*n3^2*n5 - 21*n2^2*n3^2*n5 - 6*n2*n3^3*n5 + 232*n2*n5^2 - 
      196*d*n2*n5^2 + 40*d^2*n2*n5^2 + 48*n1*n2*n5^2 - 24*d*n1*n2*n5^2 + 
      146*n2^2*n5^2 - 55*d*n2^2*n5^2 + 24*n1*n2^2*n5^2 + 15*n2^3*n5^2 + 
      92*n2*n3*n5^2 - 37*d*n2*n3*n5^2 + 12*n1*n2*n3*n5^2 + 24*n2^2*n3*n5^2 + 
      9*n2*n3^2*n5^2 + 24*n2*n5^3 - 12*d*n2*n5^3 + 12*n2^2*n5^3 + 
      6*n2*n3*n5^3)*j[p4, -1 + n1, 1 + n2, -1 + n3, 1, 2 + n5, 0, -1, -1, 1, 
      1, 1, 1, 1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((-304*n2 + 352*d*n2 - 124*d^2*n2 + 12*d^3*n2 - 
      184*n1*n2 + 136*d*n1*n2 - 22*d^2*n1*n2 - 188*n2^2 + 108*d*n2^2 - 
      7*d^2*n2^2 - 90*n1*n2^2 + 21*d*n1*n2^2 - 6*n2^3 - 11*d*n2^3 + n1*n2^3 + 
      6*n2^4 - 80*n2*n3 + 26*d*n2*n3 + 7*d^2*n2*n3 - 40*n1*n2*n3 + 
      8*d*n1*n2*n3 + 24*n2^2*n3 - 33*d*n2^2*n3 + 3*n1*n2^2*n3 + 21*n2^3*n3 + 
      24*n2*n3^2 - 19*d*n2*n3^2 + 2*n1*n2*n3^2 + 21*n2^2*n3^2 + 6*n2*n3^3 - 
      192*n2*n5 + 168*d*n2*n5 - 36*d^2*n2*n5 - 48*n1*n2*n5 + 24*d*n1*n2*n5 - 
      122*n2^2*n5 + 49*d*n2^2*n5 - 24*n1*n2^2*n5 - 13*n2^3*n5 - 70*n2*n3*n5 + 
      29*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 18*n2^2*n3*n5 - 5*n2*n3^2*n5 - 
      24*n2*n5^2 + 12*d*n2*n5^2 - 12*n2^2*n5^2 - 6*n2*n3*n5^2)*
     j[p4, -1 + n1, 1 + n2, n3, 0, 1 + n5, 0, -1, 0, 1, 1, 1, 1, 1, 1])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((976*n2 - 1152*d*n2 + 420*d^2*n2 - 44*d^3*n2 + 
      584*n1*n2 - 440*d*n1*n2 + 74*d^2*n1*n2 + 612*n2^2 - 372*d*n2^2 + 
      33*d^2*n2^2 + 294*n1*n2^2 - 75*d*n1*n2^2 + 26*n2^3 + 29*d*n2^3 + 
      n1*n2^3 - 18*n2^4 + 210*d*n2*n3 - 129*d^2*n2*n3 + 12*d^3*n2*n3 - 
      32*n1*n2*n3 + 96*d*n1*n2*n3 - 22*d^2*n1*n2*n3 - 236*n2^2*n3 + 
      195*d*n2^2*n3 - 7*d^2*n2^2*n3 - 87*n1*n2^2*n3 + 21*d*n1*n2^2*n3 - 
      69*n2^3*n3 - 11*d*n2^3*n3 + n1*n2^3*n3 + 6*n2^4*n3 - 136*n2*n3^2 + 
      75*d*n2*n3^2 + 7*d^2*n2*n3^2 - 38*n1*n2*n3^2 + 8*d*n1*n2*n3^2 - 
      39*n2^2*n3^2 - 33*d*n2^2*n3^2 + 3*n1*n2^2*n3^2 + 21*n2^3*n3^2 + 
      6*n2*n3^3 - 19*d*n2*n3^3 + 2*n1*n2*n3^3 + 21*n2^2*n3^3 + 6*n2*n3^4 + 
      1248*n2*n5 - 1288*d*n2*n5 + 388*d^2*n2*n5 - 28*d^3*n2*n5 + 
      528*n1*n2*n5 - 360*d*n1*n2*n5 + 48*d^2*n1*n2*n5 + 790*n2^2*n5 - 
      399*d*n2^2*n5 + 20*d^2*n2^2*n5 + 264*n1*n2^2*n5 - 48*d*n1*n2^2*n5 + 
      59*n2^3*n5 + 20*d*n2^3*n5 - 12*n2^4*n5 + 242*n2*n3*n5 - 19*d*n2*n3*n5 - 
      42*d^2*n2*n3*n5 + 84*n1*n2*n3*n5 - 92*n2^2*n3*n5 + 109*d*n2^2*n3*n5 - 
      24*n1*n2^2*n3*n5 - 55*n2^3*n3*n5 - 87*n2*n3^2*n5 + 63*d*n2*n3^2*n5 - 
      12*n1*n2*n3^2*n5 - 60*n2^2*n3^2*n5 - 17*n2*n3^3*n5 + 472*n2*n5^2 - 
      388*d*n2*n5^2 + 76*d^2*n2*n5^2 + 96*n1*n2*n5^2 - 48*d*n1*n2*n5^2 + 
      292*n2^2*n5^2 - 104*d*n2^2*n5^2 + 48*n1*n2^2*n5^2 + 28*n2^3*n5^2 + 
      150*n2*n3*n5^2 - 54*d*n2*n3*n5^2 + 24*n1*n2*n3*n5^2 + 30*n2^2*n3*n5^2 + 
      8*n2*n3^2*n5^2 + 48*n2*n5^3 - 24*d*n2*n5^3 + 24*n2^2*n5^3 + 
      12*n2*n3*n5^3)*j[p4, -1 + n1, 1 + n2, n3, 0, 1 + n5, 0, 0, -1, 1, 1, 1, 
      1, 1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((336*n2 - 400*d*n2 + 148*d^2*n2 - 16*d^3*n2 + 
      200*n1*n2 - 152*d*n1*n2 + 26*d^2*n1*n2 + 212*n2^2 - 132*d*n2^2 + 
      13*d^2*n2^2 + 102*n1*n2^2 - 27*d*n1*n2^2 + 10*n2^3 + 9*d*n2^3 + 
      n1*n2^3 - 6*n2^4 + 112*n2*n3 - 58*d*n2*n3 + d^2*n2*n3 + 56*n1*n2*n3 - 
      16*d*n1*n2*n3 - 12*n2^2*n3 + 27*d*n2^2*n3 + 3*n1*n2^2*n3 - 21*n2^3*n3 - 
      16*n2*n3^2 + 15*d*n2*n3^2 + 2*n1*n2*n3^2 - 21*n2^2*n3^2 - 6*n2*n3^3 + 
      544*n2*n5 - 584*d*n2*n5 + 188*d^2*n2*n5 - 16*d^3*n2*n5 + 248*n1*n2*n5 - 
      176*d*n1*n2*n5 + 26*d^2*n1*n2*n5 + 346*n2^2*n5 - 187*d*n2^2*n5 + 
      13*d^2*n2^2*n5 + 126*n1*n2^2*n5 - 27*d*n1*n2^2*n5 + 25*n2^3*n5 + 
      9*d*n2^3*n5 + n1*n2^3*n5 - 6*n2^4*n5 + 198*n2*n3*n5 - 95*d*n2*n3*n5 + 
      d^2*n2*n3*n5 + 68*n1*n2*n3*n5 - 16*d*n1*n2*n3*n5 + 12*n2^2*n3*n5 + 
      27*d*n2^2*n3*n5 + 3*n1*n2^2*n3*n5 - 21*n2^3*n3*n5 - 7*n2*n3^2*n5 + 
      15*d*n2*n3^2*n5 + 2*n1*n2*n3^2*n5 - 21*n2^2*n3^2*n5 - 6*n2*n3^3*n5 + 
      232*n2*n5^2 - 196*d*n2*n5^2 + 40*d^2*n2*n5^2 + 48*n1*n2*n5^2 - 
      24*d*n1*n2*n5^2 + 146*n2^2*n5^2 - 55*d*n2^2*n5^2 + 24*n1*n2^2*n5^2 + 
      15*n2^3*n5^2 + 92*n2*n3*n5^2 - 37*d*n2*n3*n5^2 + 12*n1*n2*n3*n5^2 + 
      24*n2^2*n3*n5^2 + 9*n2*n3^2*n5^2 + 24*n2*n5^3 - 12*d*n2*n5^3 + 
      12*n2^2*n5^3 + 6*n2*n3*n5^3)*j[p4, -1 + n1, 1 + n2, n3, 0, 2 + n5, 0, 
      -1, -1, 1, 1, 1, 1, 1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(2 - d + n1 + n5)) + 
   ((336*n2 - 400*d*n2 + 148*d^2*n2 - 16*d^3*n2 + 200*n1*n2 - 152*d*n1*n2 + 
      26*d^2*n1*n2 + 212*n2^2 - 132*d*n2^2 + 13*d^2*n2^2 + 102*n1*n2^2 - 
      27*d*n1*n2^2 + 10*n2^3 + 9*d*n2^3 + n1*n2^3 - 6*n2^4 + 112*n2*n3 - 
      58*d*n2*n3 + d^2*n2*n3 + 56*n1*n2*n3 - 16*d*n1*n2*n3 - 12*n2^2*n3 + 
      27*d*n2^2*n3 + 3*n1*n2^2*n3 - 21*n2^3*n3 - 16*n2*n3^2 + 15*d*n2*n3^2 + 
      2*n1*n2*n3^2 - 21*n2^2*n3^2 - 6*n2*n3^3 + 544*n2*n5 - 584*d*n2*n5 + 
      188*d^2*n2*n5 - 16*d^3*n2*n5 + 248*n1*n2*n5 - 176*d*n1*n2*n5 + 
      26*d^2*n1*n2*n5 + 346*n2^2*n5 - 187*d*n2^2*n5 + 13*d^2*n2^2*n5 + 
      126*n1*n2^2*n5 - 27*d*n1*n2^2*n5 + 25*n2^3*n5 + 9*d*n2^3*n5 + 
      n1*n2^3*n5 - 6*n2^4*n5 + 198*n2*n3*n5 - 95*d*n2*n3*n5 + d^2*n2*n3*n5 + 
      68*n1*n2*n3*n5 - 16*d*n1*n2*n3*n5 + 12*n2^2*n3*n5 + 27*d*n2^2*n3*n5 + 
      3*n1*n2^2*n3*n5 - 21*n2^3*n3*n5 - 7*n2*n3^2*n5 + 15*d*n2*n3^2*n5 + 
      2*n1*n2*n3^2*n5 - 21*n2^2*n3^2*n5 - 6*n2*n3^3*n5 + 232*n2*n5^2 - 
      196*d*n2*n5^2 + 40*d^2*n2*n5^2 + 48*n1*n2*n5^2 - 24*d*n1*n2*n5^2 + 
      146*n2^2*n5^2 - 55*d*n2^2*n5^2 + 24*n1*n2^2*n5^2 + 15*n2^3*n5^2 + 
      92*n2*n3*n5^2 - 37*d*n2*n3*n5^2 + 12*n1*n2*n3*n5^2 + 24*n2^2*n3*n5^2 + 
      9*n2*n3^2*n5^2 + 24*n2*n5^3 - 12*d*n2*n5^3 + 12*n2^2*n5^3 + 
      6*n2*n3*n5^3)*j[p4, -1 + n1, 1 + n2, n3, 0, 2 + n5, 0, 0, -2, 1, 1, 1, 
      1, 1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((-304*n2 + 352*d*n2 - 124*d^2*n2 + 12*d^3*n2 - 
      184*n1*n2 + 136*d*n1*n2 - 22*d^2*n1*n2 - 188*n2^2 + 108*d*n2^2 - 
      7*d^2*n2^2 - 90*n1*n2^2 + 21*d*n1*n2^2 - 6*n2^3 - 11*d*n2^3 + n1*n2^3 + 
      6*n2^4 - 80*n2*n3 + 26*d*n2*n3 + 7*d^2*n2*n3 - 40*n1*n2*n3 + 
      8*d*n1*n2*n3 + 24*n2^2*n3 - 33*d*n2^2*n3 + 3*n1*n2^2*n3 + 21*n2^3*n3 + 
      24*n2*n3^2 - 19*d*n2*n3^2 + 2*n1*n2*n3^2 + 21*n2^2*n3^2 + 6*n2*n3^3 - 
      192*n2*n5 + 168*d*n2*n5 - 36*d^2*n2*n5 - 48*n1*n2*n5 + 24*d*n1*n2*n5 - 
      122*n2^2*n5 + 49*d*n2^2*n5 - 24*n1*n2^2*n5 - 13*n2^3*n5 - 70*n2*n3*n5 + 
      29*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 18*n2^2*n3*n5 - 5*n2*n3^2*n5 - 
      24*n2*n5^2 + 12*d*n2*n5^2 - 12*n2^2*n5^2 - 6*n2*n3*n5^2)*
     j[p4, -1 + n1, 1 + n2, n3, 1, n5, 0, -1, 0, 1, 1, 1, 1, 1, 1])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((-32*n2 + 20*d*n2 - 2*d^2*n2 - 12*n2^2 + 2*n2^3 - 
      3*d*n2*n3 + 5*n2^2*n3 + 2*n2*n3^2 - 12*n2*n5 + 6*d*n2*n5 - 6*n2^2*n5 - 
      3*n2*n3*n5)*j[p4, -1 + n1, 1 + n2, n3, 1, n5, 0, 0, -1, 1, 0, 1, 1, 1, 
      1])/(2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-32*n2 + 20*d*n2 - 2*d^2*n2 - 12*n2^2 + 2*n2^3 - 3*d*n2*n3 + 5*n2^2*n3 + 
      2*n2*n3^2 - 12*n2*n5 + 6*d*n2*n5 - 6*n2^2*n5 - 3*n2*n3*n5)*
     j[p4, -1 + n1, 1 + n2, n3, 1, n5, 0, 0, -1, 1, 1, 1, 0, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-336*n2 + 400*d*n2 - 148*d^2*n2 + 16*d^3*n2 - 200*n1*n2 + 152*d*n1*n2 - 
      26*d^2*n1*n2 - 212*n2^2 + 132*d*n2^2 - 13*d^2*n2^2 - 102*n1*n2^2 + 
      27*d*n1*n2^2 - 10*n2^3 - 9*d*n2^3 - n1*n2^3 + 6*n2^4 - 112*n2*n3 + 
      58*d*n2*n3 - d^2*n2*n3 - 56*n1*n2*n3 + 16*d*n1*n2*n3 + 12*n2^2*n3 - 
      27*d*n2^2*n3 - 3*n1*n2^2*n3 + 21*n2^3*n3 + 16*n2*n3^2 - 15*d*n2*n3^2 - 
      2*n1*n2*n3^2 + 21*n2^2*n3^2 + 6*n2*n3^3 - 208*n2*n5 + 184*d*n2*n5 - 
      40*d^2*n2*n5 - 48*n1*n2*n5 + 24*d*n1*n2*n5 - 134*n2^2*n5 + 
      55*d*n2^2*n5 - 24*n1*n2^2*n5 - 15*n2^3*n5 - 86*n2*n3*n5 + 
      37*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 24*n2^2*n3*n5 - 9*n2*n3^2*n5 - 
      24*n2*n5^2 + 12*d*n2*n5^2 - 12*n2^2*n5^2 - 6*n2*n3*n5^2)*
     j[p4, -1 + n1, 1 + n2, n3, 1, n5, 0, 0, -1, 1, 1, 1, 0, 2, 1])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((32*n2 - 20*d*n2 + 2*d^2*n2 + 12*n2^2 - 2*n2^3 + 
      3*d*n2*n3 - 5*n2^2*n3 - 2*n2*n3^2 + 12*n2*n5 - 6*d*n2*n5 + 6*n2^2*n5 + 
      3*n2*n3*n5)*j[p4, -1 + n1, 1 + n2, n3, 1, n5, 0, 0, -1, 1, 1, 1, 1, 0, 
      1])/((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-304*n2 + 32*d*n2 + 252*d^2*n2 - 124*d^3*n2 + 14*d^4*n2 + 136*n1*n2 - 
      432*d*n1*n2 + 258*d^2*n1*n2 - 38*d^3*n1*n2 + 192*n1^2*n2 - 
      144*d*n1^2*n2 + 24*d^2*n1^2*n2 - 172*n2^2 - 116*d*n2^2 + 125*d^2*n2^2 - 
      12*d^3*n2^2 + 118*n1*n2^2 - 203*d*n1*n2^2 + 36*d^2*n1*n2^2 + 
      96*n1^2*n2^2 - 24*d*n1^2*n2^2 + 6*n2^3 - 31*d*n2^3 - 7*d^2*n2^3 + 
      15*n1*n2^3 + 7*d*n1*n2^3 + 8*n2^4 + 5*d*n2^4 - 5*n1*n2^4 + 528*n2*n3 - 
      774*d*n2*n3 + 297*d^2*n2*n3 - 21*d^3*n2*n3 + 424*n1*n2*n3 - 
      354*d*n1*n2*n3 + 53*d^2*n1*n2*n3 + 48*n1^2*n2*n3 - 12*d*n1^2*n2*n3 + 
      416*n2^2*n3 - 247*d*n2^2*n3 - 12*d^2*n2^2*n3 + 173*n1*n2^2*n3 - 
      16*d*n1*n2^2*n3 + 39*n2^3*n3 + 40*d*n2^3*n3 - 20*n1*n2^3*n3 - 
      12*n2^4*n3 + 184*n2*n3^2 - 51*d*n2*n3^2 - 31*d^2*n2*n3^2 + 
      62*n1*n2*n3^2 + d*n1*n2*n3^2 - 23*n2^2*n3^2 + 85*d*n2^2*n3^2 - 
      25*n1*n2^2*n3^2 - 42*n2^3*n3^2 - 42*n2*n3^3 + 44*d*n2*n3^3 - 
      10*n1*n2*n3^3 - 42*n2^2*n3^3 - 12*n2*n3^4 - 192*n2*n5 - 32*d*n2*n5 + 
      140*d^2*n2*n5 - 38*d^3*n2*n5 + 152*n1*n2*n5 - 200*d*n1*n2*n5 + 
      62*d^2*n1*n2*n5 + 48*n1^2*n2*n5 - 24*d*n1^2*n2*n5 - 114*n2^2*n5 - 
      87*d*n2^2*n5 + 54*d^2*n2^2*n5 + 104*n1*n2^2*n5 - 76*d*n1*n2^2*n5 + 
      24*n1^2*n2^2*n5 - 7*n2^3*n5 - 17*d*n2^3*n5 + 14*n1*n2^3*n5 + n2^4*n5 + 
      314*n2*n3*n5 - 385*d*n2*n3*n5 + 105*d^2*n2*n3*n5 + 162*n1*n2*n3*n5 - 
      93*d*n1*n2*n3*n5 + 12*n1^2*n2*n3*n5 + 234*n2^2*n3*n5 - 
      123*d*n2^2*n3*n5 + 69*n1*n2^2*n3*n5 + 29*n2^3*n3*n5 + 135*n2*n3^2*n5 - 
      65*d*n2*n3^2*n5 + 31*n1*n2*n3^2*n5 + 38*n2^2*n3^2*n5 + 10*n2*n3^3*n5 - 
      24*n2*n5^2 - 12*d*n2*n5^2 + 12*d^2*n2*n5^2 + 24*n1*n2*n5^2 - 
      12*d*n1*n2*n5^2 - 12*n2^2*n5^2 - 12*d*n2^2*n5^2 + 12*n1*n2^2*n5^2 + 
      42*n2*n3*n5^2 - 30*d*n2*n3*n5^2 + 6*n1*n2*n3*n5^2 + 24*n2^2*n3*n5^2 + 
      12*n2*n3^2*n5^2)*j[p4, -1 + n1, 1 + n2, n3, 1, n5, 0, 0, -1, 1, 1, 1, 
      1, 1, 1])/((-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((304*n2 - 352*d*n2 + 124*d^2*n2 - 12*d^3*n2 + 
      184*n1*n2 - 136*d*n1*n2 + 22*d^2*n1*n2 + 188*n2^2 - 108*d*n2^2 + 
      7*d^2*n2^2 + 90*n1*n2^2 - 21*d*n1*n2^2 + 6*n2^3 + 11*d*n2^3 - n1*n2^3 - 
      6*n2^4 + 80*n2*n3 - 26*d*n2*n3 - 7*d^2*n2*n3 + 40*n1*n2*n3 - 
      8*d*n1*n2*n3 - 24*n2^2*n3 + 33*d*n2^2*n3 - 3*n1*n2^2*n3 - 21*n2^3*n3 - 
      24*n2*n3^2 + 19*d*n2*n3^2 - 2*n1*n2*n3^2 - 21*n2^2*n3^2 - 6*n2*n3^3 + 
      192*n2*n5 - 168*d*n2*n5 + 36*d^2*n2*n5 + 48*n1*n2*n5 - 24*d*n1*n2*n5 + 
      122*n2^2*n5 - 49*d*n2^2*n5 + 24*n1*n2^2*n5 + 13*n2^3*n5 + 70*n2*n3*n5 - 
      29*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 18*n2^2*n3*n5 + 5*n2*n3^2*n5 + 
      24*n2*n5^2 - 12*d*n2*n5^2 + 12*n2^2*n5^2 + 6*n2*n3*n5^2)*
     j[p4, -1 + n1, 1 + n2, n3, 1, n5, 0, 0, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((-304*n2 + 352*d*n2 - 124*d^2*n2 + 12*d^3*n2 - 
      184*n1*n2 + 136*d*n1*n2 - 22*d^2*n1*n2 - 188*n2^2 + 108*d*n2^2 - 
      7*d^2*n2^2 - 90*n1*n2^2 + 21*d*n1*n2^2 - 6*n2^3 - 11*d*n2^3 + n1*n2^3 + 
      6*n2^4 - 80*n2*n3 + 26*d*n2*n3 + 7*d^2*n2*n3 - 40*n1*n2*n3 + 
      8*d*n1*n2*n3 + 24*n2^2*n3 - 33*d*n2^2*n3 + 3*n1*n2^2*n3 + 21*n2^3*n3 + 
      24*n2*n3^2 - 19*d*n2*n3^2 + 2*n1*n2*n3^2 + 21*n2^2*n3^2 + 6*n2*n3^3 - 
      192*n2*n5 + 168*d*n2*n5 - 36*d^2*n2*n5 - 48*n1*n2*n5 + 24*d*n1*n2*n5 - 
      122*n2^2*n5 + 49*d*n2^2*n5 - 24*n1*n2^2*n5 - 13*n2^3*n5 - 70*n2*n3*n5 + 
      29*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 18*n2^2*n3*n5 - 5*n2*n3^2*n5 - 
      24*n2*n5^2 + 12*d*n2*n5^2 - 12*n2^2*n5^2 - 6*n2*n3*n5^2)*
     j[p4, -1 + n1, 1 + n2, n3, 1, n5, 0, 0, 0, 1, 1, 1, 1, 0, 1])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((304*n2 - 352*d*n2 + 124*d^2*n2 - 12*d^3*n2 + 
      184*n1*n2 - 136*d*n1*n2 + 22*d^2*n1*n2 + 188*n2^2 - 108*d*n2^2 + 
      7*d^2*n2^2 + 90*n1*n2^2 - 21*d*n1*n2^2 + 6*n2^3 + 11*d*n2^3 - n1*n2^3 - 
      6*n2^4 + 80*n2*n3 - 26*d*n2*n3 - 7*d^2*n2*n3 + 40*n1*n2*n3 - 
      8*d*n1*n2*n3 - 24*n2^2*n3 + 33*d*n2^2*n3 - 3*n1*n2^2*n3 - 21*n2^3*n3 - 
      24*n2*n3^2 + 19*d*n2*n3^2 - 2*n1*n2*n3^2 - 21*n2^2*n3^2 - 6*n2*n3^3 + 
      192*n2*n5 - 168*d*n2*n5 + 36*d^2*n2*n5 + 48*n1*n2*n5 - 24*d*n1*n2*n5 + 
      122*n2^2*n5 - 49*d*n2^2*n5 + 24*n1*n2^2*n5 + 13*n2^3*n5 + 70*n2*n3*n5 - 
      29*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 18*n2^2*n3*n5 + 5*n2*n3^2*n5 + 
      24*n2*n5^2 - 12*d*n2*n5^2 + 12*n2^2*n5^2 + 6*n2*n3*n5^2)*
     j[p4, -1 + n1, 1 + n2, n3, 1, 1 + n5, -1, -1, 0, 1, 1, 1, 1, 1, 1])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((32*n2 - 20*d*n2 + 2*d^2*n2 + 12*n2^2 - 2*n2^3 + 
      3*d*n2*n3 - 5*n2^2*n3 - 2*n2*n3^2 + 12*n2*n5 - 6*d*n2*n5 + 6*n2^2*n5 + 
      3*n2*n3*n5)*j[p4, -1 + n1, 1 + n2, n3, 1, 1 + n5, -1, 0, -1, 1, 0, 1, 
      1, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((32*n2 - 20*d*n2 + 2*d^2*n2 + 12*n2^2 - 2*n2^3 + 3*d*n2*n3 - 5*n2^2*n3 - 
      2*n2*n3^2 + 12*n2*n5 - 6*d*n2*n5 + 6*n2^2*n5 + 3*n2*n3*n5)*
     j[p4, -1 + n1, 1 + n2, n3, 1, 1 + n5, -1, 0, -1, 1, 1, 1, 0, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-32*n2 + 20*d*n2 - 2*d^2*n2 - 12*n2^2 + 2*n2^3 - 3*d*n2*n3 + 5*n2^2*n3 + 
      2*n2*n3^2 - 12*n2*n5 + 6*d*n2*n5 - 6*n2^2*n5 - 3*n2*n3*n5)*
     j[p4, -1 + n1, 1 + n2, n3, 1, 1 + n5, -1, 0, -1, 1, 1, 1, 1, 0, 1])/
    ((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-3456*n2 + 5120*d*n2 - 2720*d^2*n2 + 608*d^3*n2 - 48*d^4*n2 - 
      1888*n1*n2 + 1992*d*n1*n2 - 672*d^2*n1*n2 + 74*d^3*n1*n2 - 16*n1^2*n2 + 
      16*d*n1^2*n2 - 4*d^2*n1^2*n2 - 2896*n2^2 + 2828*d*n2^2 - 832*d^2*n2^2 + 
      71*d^3*n2^2 - 1304*n1*n2^2 + 802*d*n1*n2^2 - 123*d^2*n1*n2^2 - 
      12*n1^2*n2^2 + 6*d*n1^2*n2^2 - 552*n2^3 + 210*d*n2^3 + d^2*n2^3 - 
      184*n1*n2^3 + 51*d*n1*n2^3 - 2*n1^2*n2^3 + 40*n2^4 - 36*d*n2^4 - 
      2*n1*n2^4 + 12*n2^5 - 2496*n2*n3 + 2508*d*n2*n3 - 756*d^2*n2*n3 + 
      63*d^3*n2*n3 - 1264*n1*n2*n3 + 872*d*n1*n2*n3 - 144*d^2*n1*n2*n3 - 
      16*n1^2*n2*n3 + 8*d*n1^2*n2*n3 - 964*n2^2*n3 + 320*d*n2^2*n3 + 
      33*d^2*n2^2*n3 - 496*n1*n2^2*n3 + 137*d*n1*n2^2*n3 - 6*n1^2*n2^2*n3 + 
      198*n2^3*n3 - 155*d*n2^3*n3 - 8*n1*n2^3*n3 + 66*n2^4*n3 - 264*n2*n3^2 + 
      2*d*n2*n3^2 + 49*d^2*n2*n3^2 - 216*n1*n2*n3^2 + 62*d*n1*n2*n3^2 - 
      4*n1^2*n2*n3^2 + 302*n2^2*n3^2 - 207*d*n2^2*n3^2 - 10*n1*n2^2*n3^2 + 
      126*n2^3*n3^2 + 132*n2*n3^3 - 82*d*n2*n3^3 - 4*n1*n2*n3^3 + 
      96*n2^2*n3^3 + 24*n2*n3^4 - 2768*n2*n5 + 3280*d*n2*n5 - 
      1252*d^2*n2*n5 + 152*d^3*n2*n5 - 864*n1*n2*n5 + 672*d*n1*n2*n5 - 
      120*d^2*n1*n2*n5 - 2200*n2^2*n5 + 1594*d*n2^2*n5 - 271*d^2*n2^2*n5 - 
      520*n1*n2^2*n5 + 164*d*n1*n2^2*n5 - 444*n2^3*n5 + 137*d*n2^3*n5 - 
      44*n1*n2^3*n5 - 18*n2^4*n5 - 1908*n2*n3*n5 + 1468*d*n2*n3*n5 - 
      269*d^2*n2*n3*n5 - 416*n1*n2*n3*n5 + 160*d*n1*n2*n3*n5 - 
      918*n2^2*n3*n5 + 306*d*n2^2*n3*n5 - 120*n1*n2^2*n3*n5 - 64*n2^3*n3*n5 - 
      386*n2*n3^2*n5 + 137*d*n2*n3^2*n5 - 52*n1*n2*n3^2*n5 - 
      66*n2^2*n3^2*n5 - 20*n2*n3^3*n5 - 656*n2*n5^2 + 560*d*n2*n5^2 - 
      116*d^2*n2*n5^2 - 96*n1*n2*n5^2 + 48*d*n1*n2*n5^2 - 436*n2^2*n5^2 + 
      170*d*n2^2*n5^2 - 48*n1*n2^2*n5^2 - 54*n2^3*n5^2 - 328*n2*n3*n5^2 + 
      140*d*n2*n3*n5^2 - 24*n1*n2*n3*n5^2 - 108*n2^2*n3*n5^2 - 
      42*n2*n3^2*n5^2 - 48*n2*n5^3 + 24*d*n2*n5^3 - 24*n2^2*n5^3 - 
      12*n2*n3*n5^3)*j[p4, -1 + n1, 1 + n2, n3, 1, 1 + n5, -1, 0, -1, 1, 1, 
      1, 1, 1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((336*n2 - 400*d*n2 + 148*d^2*n2 - 16*d^3*n2 + 
      200*n1*n2 - 152*d*n1*n2 + 26*d^2*n1*n2 + 212*n2^2 - 132*d*n2^2 + 
      13*d^2*n2^2 + 102*n1*n2^2 - 27*d*n1*n2^2 + 10*n2^3 + 9*d*n2^3 + 
      n1*n2^3 - 6*n2^4 + 112*n2*n3 - 58*d*n2*n3 + d^2*n2*n3 + 56*n1*n2*n3 - 
      16*d*n1*n2*n3 - 12*n2^2*n3 + 27*d*n2^2*n3 + 3*n1*n2^2*n3 - 21*n2^3*n3 - 
      16*n2*n3^2 + 15*d*n2*n3^2 + 2*n1*n2*n3^2 - 21*n2^2*n3^2 - 6*n2*n3^3 + 
      208*n2*n5 - 184*d*n2*n5 + 40*d^2*n2*n5 + 48*n1*n2*n5 - 24*d*n1*n2*n5 + 
      134*n2^2*n5 - 55*d*n2^2*n5 + 24*n1*n2^2*n5 + 15*n2^3*n5 + 86*n2*n3*n5 - 
      37*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 24*n2^2*n3*n5 + 9*n2*n3^2*n5 + 
      24*n2*n5^2 - 12*d*n2*n5^2 + 12*n2^2*n5^2 + 6*n2*n3*n5^2)*
     j[p4, -1 + n1, 1 + n2, n3, 1, 1 + n5, -1, 0, -1, 1, 2, 0, 1, 1, 1])/
    ((-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((-336*n2 + 400*d*n2 - 148*d^2*n2 + 16*d^3*n2 - 
      200*n1*n2 + 152*d*n1*n2 - 26*d^2*n1*n2 - 212*n2^2 + 132*d*n2^2 - 
      13*d^2*n2^2 - 102*n1*n2^2 + 27*d*n1*n2^2 - 10*n2^3 - 9*d*n2^3 - 
      n1*n2^3 + 6*n2^4 - 112*n2*n3 + 58*d*n2*n3 - d^2*n2*n3 - 56*n1*n2*n3 + 
      16*d*n1*n2*n3 + 12*n2^2*n3 - 27*d*n2^2*n3 - 3*n1*n2^2*n3 + 21*n2^3*n3 + 
      16*n2*n3^2 - 15*d*n2*n3^2 - 2*n1*n2*n3^2 + 21*n2^2*n3^2 + 6*n2*n3^3 - 
      208*n2*n5 + 184*d*n2*n5 - 40*d^2*n2*n5 - 48*n1*n2*n5 + 24*d*n1*n2*n5 - 
      134*n2^2*n5 + 55*d*n2^2*n5 - 24*n1*n2^2*n5 - 15*n2^3*n5 - 86*n2*n3*n5 + 
      37*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 24*n2^2*n3*n5 - 9*n2*n3^2*n5 - 
      24*n2*n5^2 + 12*d*n2*n5^2 - 12*n2^2*n5^2 - 6*n2*n3*n5^2)*
     j[p4, -1 + n1, 1 + n2, n3, 1, 1 + n5, -1, 0, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((336*n2 - 400*d*n2 + 148*d^2*n2 - 16*d^3*n2 + 
      200*n1*n2 - 152*d*n1*n2 + 26*d^2*n1*n2 + 212*n2^2 - 132*d*n2^2 + 
      13*d^2*n2^2 + 102*n1*n2^2 - 27*d*n1*n2^2 + 10*n2^3 + 9*d*n2^3 + 
      n1*n2^3 - 6*n2^4 + 112*n2*n3 - 58*d*n2*n3 + d^2*n2*n3 + 56*n1*n2*n3 - 
      16*d*n1*n2*n3 - 12*n2^2*n3 + 27*d*n2^2*n3 + 3*n1*n2^2*n3 - 21*n2^3*n3 - 
      16*n2*n3^2 + 15*d*n2*n3^2 + 2*n1*n2*n3^2 - 21*n2^2*n3^2 - 6*n2*n3^3 + 
      208*n2*n5 - 184*d*n2*n5 + 40*d^2*n2*n5 + 48*n1*n2*n5 - 24*d*n1*n2*n5 + 
      134*n2^2*n5 - 55*d*n2^2*n5 + 24*n1*n2^2*n5 + 15*n2^3*n5 + 86*n2*n3*n5 - 
      37*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 24*n2^2*n3*n5 + 9*n2*n3^2*n5 + 
      24*n2*n5^2 - 12*d*n2*n5^2 + 12*n2^2*n5^2 + 6*n2*n3*n5^2)*
     j[p4, -1 + n1, 1 + n2, n3, 1, 1 + n5, -1, 0, 0, 1, 1, 1, 1, 0, 1])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((304*n2 - 352*d*n2 + 124*d^2*n2 - 12*d^3*n2 + 
      184*n1*n2 - 136*d*n1*n2 + 22*d^2*n1*n2 + 188*n2^2 - 108*d*n2^2 + 
      7*d^2*n2^2 + 90*n1*n2^2 - 21*d*n1*n2^2 + 6*n2^3 + 11*d*n2^3 - n1*n2^3 - 
      6*n2^4 + 80*n2*n3 - 26*d*n2*n3 - 7*d^2*n2*n3 + 40*n1*n2*n3 - 
      8*d*n1*n2*n3 - 24*n2^2*n3 + 33*d*n2^2*n3 - 3*n1*n2^2*n3 - 21*n2^3*n3 - 
      24*n2*n3^2 + 19*d*n2*n3^2 - 2*n1*n2*n3^2 - 21*n2^2*n3^2 - 6*n2*n3^3 + 
      192*n2*n5 - 168*d*n2*n5 + 36*d^2*n2*n5 + 48*n1*n2*n5 - 24*d*n1*n2*n5 + 
      122*n2^2*n5 - 49*d*n2^2*n5 + 24*n1*n2^2*n5 + 13*n2^3*n5 + 70*n2*n3*n5 - 
      29*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 18*n2^2*n3*n5 + 5*n2*n3^2*n5 + 
      24*n2*n5^2 - 12*d*n2*n5^2 + 12*n2^2*n5^2 + 6*n2*n3*n5^2)*
     j[p4, -1 + n1, 1 + n2, n3, 1, 1 + n5, 0, -2, 0, 1, 1, 1, 1, 1, 1])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((-336*n2 + 400*d*n2 - 148*d^2*n2 + 16*d^3*n2 - 
      200*n1*n2 + 152*d*n1*n2 - 26*d^2*n1*n2 - 212*n2^2 + 132*d*n2^2 - 
      13*d^2*n2^2 - 102*n1*n2^2 + 27*d*n1*n2^2 - 10*n2^3 - 9*d*n2^3 - 
      n1*n2^3 + 6*n2^4 - 112*n2*n3 + 58*d*n2*n3 - d^2*n2*n3 - 56*n1*n2*n3 + 
      16*d*n1*n2*n3 + 12*n2^2*n3 - 27*d*n2^2*n3 - 3*n1*n2^2*n3 + 21*n2^3*n3 + 
      16*n2*n3^2 - 15*d*n2*n3^2 - 2*n1*n2*n3^2 + 21*n2^2*n3^2 + 6*n2*n3^3 - 
      208*n2*n5 + 184*d*n2*n5 - 40*d^2*n2*n5 - 48*n1*n2*n5 + 24*d*n1*n2*n5 - 
      134*n2^2*n5 + 55*d*n2^2*n5 - 24*n1*n2^2*n5 - 15*n2^3*n5 - 86*n2*n3*n5 + 
      37*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 24*n2^2*n3*n5 - 9*n2*n3^2*n5 - 
      24*n2*n5^2 + 12*d*n2*n5^2 - 12*n2^2*n5^2 - 6*n2*n3*n5^2)*
     j[p4, -1 + n1, 1 + n2, n3, 1, 1 + n5, 0, -1, -1, 0, 2, 1, 1, 1, 1])/
    ((-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((-96*n2 + 60*d*n2 - 6*d^2*n2 - 36*n2^2 + 6*n2^3 - 
      9*d*n2*n3 + 15*n2^2*n3 + 6*n2*n3^2 - 36*n2*n5 + 18*d*n2*n5 - 
      18*n2^2*n5 - 9*n2*n3*n5)*j[p4, -1 + n1, 1 + n2, n3, 1, 1 + n5, 0, -1, 
      -1, 1, 0, 1, 1, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-336*n2 + 400*d*n2 - 148*d^2*n2 + 16*d^3*n2 - 200*n1*n2 + 152*d*n1*n2 - 
      26*d^2*n1*n2 - 212*n2^2 + 132*d*n2^2 - 13*d^2*n2^2 - 102*n1*n2^2 + 
      27*d*n1*n2^2 - 10*n2^3 - 9*d*n2^3 - n1*n2^3 + 6*n2^4 - 112*n2*n3 + 
      58*d*n2*n3 - d^2*n2*n3 - 56*n1*n2*n3 + 16*d*n1*n2*n3 + 12*n2^2*n3 - 
      27*d*n2^2*n3 - 3*n1*n2^2*n3 + 21*n2^3*n3 + 16*n2*n3^2 - 15*d*n2*n3^2 - 
      2*n1*n2*n3^2 + 21*n2^2*n3^2 + 6*n2*n3^3 - 208*n2*n5 + 184*d*n2*n5 - 
      40*d^2*n2*n5 - 48*n1*n2*n5 + 24*d*n1*n2*n5 - 134*n2^2*n5 + 
      55*d*n2^2*n5 - 24*n1*n2^2*n5 - 15*n2^3*n5 - 86*n2*n3*n5 + 
      37*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 24*n2^2*n3*n5 - 9*n2*n3^2*n5 - 
      24*n2*n5^2 + 12*d*n2*n5^2 - 12*n2^2*n5^2 - 6*n2*n3*n5^2)*
     j[p4, -1 + n1, 1 + n2, n3, 1, 1 + n5, 0, -1, -1, 1, 1, 1, 0, 2, 1])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((1728*n2 - 3136*d*n2 + 2032*d^2*n2 - 544*d^3*n2 + 
      48*d^4*n2 + 1024*n1*n2 - 1384*d*n1*n2 + 568*d^2*n1*n2 - 66*d^3*n1*n2 + 
      368*n1^2*n2 - 272*d*n1^2*n2 + 44*d^2*n1^2*n2 + 2592*n2^2 - 
      3100*d*n2^2 + 1100*d^2*n2^2 - 99*d^3*n2^2 + 1136*n1*n2^2 - 
      838*d*n1*n2^2 + 111*d^2*n1*n2^2 + 180*n1^2*n2^2 - 42*d*n1^2*n2^2 + 
      1008*n2^3 - 558*d*n2^3 + 19*d^2*n2^3 + 268*n1*n2^3 - 23*d*n1*n2^3 - 
      2*n1^2*n2^3 + 24*n2^4 + 56*d*n2^4 - 22*n1*n2^4 - 24*n2^5 + 864*n2*n3 - 
      964*d*n2*n3 + 280*d^2*n2*n3 - 7*d^3*n2*n3 + 16*n1*n2*n3 + 
      48*d*n1*n2*n3 - 40*d^2*n1*n2*n3 + 80*n1^2*n2*n3 - 16*d*n1^2*n2*n3 + 
      668*n2^2*n3 - 200*d*n2^2*n3 - 79*d^2*n2^2*n3 - 92*n1*n2^2*n3 + 
      115*d*n1*n2^2*n3 - 6*n1^2*n2^2*n3 - 98*n2^3*n3 + 175*d*n2^3*n3 - 
      76*n1*n2^3*n3 - 84*n2^4*n3 + 88*n2*n3^2 + 22*d*n2*n3^2 - 
      37*d^2*n2*n3^2 - 144*n1*n2*n3^2 + 78*d*n1*n2*n3^2 - 4*n1^2*n2*n3^2 - 
      102*n2^2*n3^2 + 121*d*n2^2*n3^2 - 74*n1*n2^2*n3^2 - 84*n2^3*n3^2 - 
      4*n2*n3^3 + 14*d*n2*n3^3 - 20*n1*n2*n3^3 - 24*n2^2*n3^3 + 544*n2*n5 - 
      1008*d*n2*n5 + 576*d^2*n2*n5 - 104*d^3*n2*n5 + 328*n1*n2*n5 - 
      376*d*n1*n2*n5 + 106*d^2*n1*n2*n5 + 96*n1^2*n2*n5 - 48*d*n1^2*n2*n5 + 
      1188*n2^2*n5 - 1234*d*n2^2*n5 + 308*d^2*n2^2*n5 + 382*n1*n2^2*n5 - 
      215*d*n1*n2^2*n5 + 48*n1^2*n2^2*n5 + 586*n2^3*n5 - 268*d*n2^3*n5 + 
      109*n1*n2^3*n5 + 64*n2^4*n5 + 284*n2*n3*n5 - 382*d*n2*n3*n5 + 
      114*d^2*n2*n3*n5 + 96*n1*n2*n3*n5 - 60*d*n1*n2*n3*n5 + 
      24*n1^2*n2*n3*n5 + 466*n2^2*n3*n5 - 245*d*n2^2*n3*n5 + 
      63*n1*n2^2*n3*n5 + 113*n2^3*n3*n5 + 74*n2*n3^2*n5 - 50*d*n2*n3^2*n5 + 
      2*n1*n2*n3^2*n5 + 59*n2^2*n3^2*n5 + 10*n2*n3^3*n5 - 112*n2*n5^2 + 
      64*d*n2*n5^2 - 4*d^2*n2*n5^2 + 10*n2^2*n5^2 - 29*d*n2^2*n5^2 + 
      33*n2^3*n5^2 - 62*n2*n3*n5^2 + 19*d*n2*n3*n5^2 - 9*n2*n3^2*n5^2 - 
      24*n2*n5^3 + 12*d*n2*n5^3 - 12*n2^2*n5^3 - 6*n2*n3*n5^3)*
     j[p4, -1 + n1, 1 + n2, n3, 1, 1 + n5, 0, -1, -1, 1, 1, 1, 1, 1, 1])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((-304*n2 + 352*d*n2 - 124*d^2*n2 + 12*d^3*n2 - 
      184*n1*n2 + 136*d*n1*n2 - 22*d^2*n1*n2 - 188*n2^2 + 108*d*n2^2 - 
      7*d^2*n2^2 - 90*n1*n2^2 + 21*d*n1*n2^2 - 6*n2^3 - 11*d*n2^3 + n1*n2^3 + 
      6*n2^4 - 80*n2*n3 + 26*d*n2*n3 + 7*d^2*n2*n3 - 40*n1*n2*n3 + 
      8*d*n1*n2*n3 + 24*n2^2*n3 - 33*d*n2^2*n3 + 3*n1*n2^2*n3 + 21*n2^3*n3 + 
      24*n2*n3^2 - 19*d*n2*n3^2 + 2*n1*n2*n3^2 + 21*n2^2*n3^2 + 6*n2*n3^3 - 
      192*n2*n5 + 168*d*n2*n5 - 36*d^2*n2*n5 - 48*n1*n2*n5 + 24*d*n1*n2*n5 - 
      122*n2^2*n5 + 49*d*n2^2*n5 - 24*n1*n2^2*n5 - 13*n2^3*n5 - 70*n2*n3*n5 + 
      29*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 18*n2^2*n3*n5 - 5*n2*n3^2*n5 - 
      24*n2*n5^2 + 12*d*n2*n5^2 - 12*n2^2*n5^2 - 6*n2*n3*n5^2)*
     j[p4, -1 + n1, 1 + n2, n3, 1, 1 + n5, 0, -1, -1, 1, 1, 1, 1, 2, 0])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((-304*n2 + 352*d*n2 - 124*d^2*n2 + 12*d^3*n2 - 
      184*n1*n2 + 136*d*n1*n2 - 22*d^2*n1*n2 - 188*n2^2 + 108*d*n2^2 - 
      7*d^2*n2^2 - 90*n1*n2^2 + 21*d*n1*n2^2 - 6*n2^3 - 11*d*n2^3 + n1*n2^3 + 
      6*n2^4 - 80*n2*n3 + 26*d*n2*n3 + 7*d^2*n2*n3 - 40*n1*n2*n3 + 
      8*d*n1*n2*n3 + 24*n2^2*n3 - 33*d*n2^2*n3 + 3*n1*n2^2*n3 + 21*n2^3*n3 + 
      24*n2*n3^2 - 19*d*n2*n3^2 + 2*n1*n2*n3^2 + 21*n2^2*n3^2 + 6*n2*n3^3 - 
      192*n2*n5 + 168*d*n2*n5 - 36*d^2*n2*n5 - 48*n1*n2*n5 + 24*d*n1*n2*n5 - 
      122*n2^2*n5 + 49*d*n2^2*n5 - 24*n1*n2^2*n5 - 13*n2^3*n5 - 70*n2*n3*n5 + 
      29*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 18*n2^2*n3*n5 - 5*n2*n3^2*n5 - 
      24*n2*n5^2 + 12*d*n2*n5^2 - 12*n2^2*n5^2 - 6*n2*n3*n5^2)*
     j[p4, -1 + n1, 1 + n2, n3, 1, 1 + n5, 0, -1, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((304*n2 - 352*d*n2 + 124*d^2*n2 - 12*d^3*n2 + 
      184*n1*n2 - 136*d*n1*n2 + 22*d^2*n1*n2 + 188*n2^2 - 108*d*n2^2 + 
      7*d^2*n2^2 + 90*n1*n2^2 - 21*d*n1*n2^2 + 6*n2^3 + 11*d*n2^3 - n1*n2^3 - 
      6*n2^4 + 80*n2*n3 - 26*d*n2*n3 - 7*d^2*n2*n3 + 40*n1*n2*n3 - 
      8*d*n1*n2*n3 - 24*n2^2*n3 + 33*d*n2^2*n3 - 3*n1*n2^2*n3 - 21*n2^3*n3 - 
      24*n2*n3^2 + 19*d*n2*n3^2 - 2*n1*n2*n3^2 - 21*n2^2*n3^2 - 6*n2*n3^3 + 
      192*n2*n5 - 168*d*n2*n5 + 36*d^2*n2*n5 + 48*n1*n2*n5 - 24*d*n1*n2*n5 + 
      122*n2^2*n5 - 49*d*n2^2*n5 + 24*n1*n2^2*n5 + 13*n2^3*n5 + 70*n2*n3*n5 - 
      29*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 18*n2^2*n3*n5 + 5*n2*n3^2*n5 + 
      24*n2*n5^2 - 12*d*n2*n5^2 + 12*n2^2*n5^2 + 6*n2*n3*n5^2)*
     j[p4, -1 + n1, 1 + n2, n3, 1, 1 + n5, 0, -1, 0, 1, 1, 1, 1, 0, 1])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((32*n2 - 20*d*n2 + 2*d^2*n2 + 12*n2^2 - 2*n2^3 + 
      3*d*n2*n3 - 5*n2^2*n3 - 2*n2*n3^2 + 12*n2*n5 - 6*d*n2*n5 + 6*n2^2*n5 + 
      3*n2*n3*n5)*j[p4, -1 + n1, 1 + n2, n3, 1, 1 + n5, 0, 0, -2, 1, 0, 1, 1, 
      1, 1])/(2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-912*n2 + 1080*d*n2 - 396*d^2*n2 + 42*d^3*n2 - 712*n1*n2 + 592*d*n1*n2 - 
      130*d^2*n1*n2 + 6*d^3*n1*n2 + 16*n1^2*n2 - 16*d*n1^2*n2 + 
      4*d^2*n1^2*n2 - 860*n2^2 + 708*d*n2^2 - 171*d^2*n2^2 + 16*d^3*n2^2 - 
      630*n1*n2^2 + 327*d*n1*n2^2 - 42*d^2*n1*n2^2 + 12*n1^2*n2^2 - 
      6*d*n1^2*n2^2 - 206*n2^3 + 93*d*n2^3 - 13*d^2*n2^3 - 143*n1*n2^3 + 
      39*d*n1*n2^3 + 2*n1^2*n2^3 + 10*n2^4 - 9*d*n2^4 - 3*n1*n2^4 + 6*n2^5 - 
      256*n2*n3 + 112*d*n2*n3 + 8*d^2*n2*n3 - 264*n1*n2*n3 + 118*d*n1*n2*n3 - 
      11*d^2*n1*n2*n3 + 16*n1^2*n2*n3 - 8*d*n1^2*n2*n3 - 18*n2^2*n3 - 
      43*d*n2^2*n3 - d^2*n2^2*n3 - 129*n1*n2^2*n3 + 36*d*n1*n2^2*n3 + 
      6*n1^2*n2^2*n3 + 82*n2^3*n3 - 27*d*n2^3*n3 - 10*n1*n2^3*n3 + 
      21*n2^4*n3 + 68*n2*n3^2 - 52*d*n2*n3^2 - 30*n1*n2*n3^2 + 
      7*d*n1*n2*n3^2 + 4*n1^2*n2*n3^2 + 86*n2^2*n3^2 - 15*d*n2^2*n3^2 - 
      9*n1*n2^2*n3^2 + 21*n2^3*n3^2 + 20*n2*n3^3 - 2*n1*n2*n3^3 + 
      6*n2^2*n3^3 - 952*n2*n5 + 944*d*n2*n5 - 266*d^2*n2*n5 + 16*d^3*n2*n5 - 
      352*n1*n2*n5 + 232*d*n1*n2*n5 - 28*d^2*n1*n2*n5 - 810*n2^2*n5 + 
      475*d*n2^2*n5 - 53*d^2*n2^2*n5 - 234*n1*n2^2*n5 + 57*d*n1*n2^2*n5 - 
      185*n2^3*n5 + 46*d*n2^3*n5 - 29*n1*n2^3*n5 - 9*n2^4*n5 - 368*n2*n3*n5 + 
      168*d*n2*n3*n5 - d^2*n2*n3*n5 - 94*n1*n2*n3*n5 + 17*d*n1*n2*n3*n5 - 
      143*n2^2*n3*n5 + 10*d*n2^2*n3*n5 - 18*n1*n2^2*n3*n5 - 3*n2^3*n3*n5 - 
      12*n2*n3^2*n5 - 15*d*n2*n3^2*n5 - n1*n2*n3^2*n5 + 12*n2^2*n3^2*n5 + 
      6*n2*n3^3*n5 - 280*n2*n5^2 + 220*d*n2*n5^2 - 40*d^2*n2*n5^2 - 
      48*n1*n2*n5^2 + 24*d*n1*n2*n5^2 - 194*n2^2*n5^2 + 67*d*n2^2*n5^2 - 
      24*n1*n2^2*n5^2 - 27*n2^3*n5^2 - 104*n2*n3*n5^2 + 37*d*n2*n3*n5^2 - 
      12*n1*n2*n3*n5^2 - 30*n2^2*n3*n5^2 - 9*n2*n3^2*n5^2 - 24*n2*n5^3 + 
      12*d*n2*n5^3 - 12*n2^2*n5^3 - 6*n2*n3*n5^3)*j[p4, -1 + n1, 1 + n2, n3, 
      1, 1 + n5, 0, 0, -2, 1, 1, 1, 1, 1, 1])/((-1 + n1)*(-2 + d - n2 - n3)*
     (n2 - n3)*(-4 + d - n5)*(2 - d + n1 + n5)) + 
   ((336*n2 - 400*d*n2 + 148*d^2*n2 - 16*d^3*n2 + 200*n1*n2 - 152*d*n1*n2 + 
      26*d^2*n1*n2 + 212*n2^2 - 132*d*n2^2 + 13*d^2*n2^2 + 102*n1*n2^2 - 
      27*d*n1*n2^2 + 10*n2^3 + 9*d*n2^3 + n1*n2^3 - 6*n2^4 + 112*n2*n3 - 
      58*d*n2*n3 + d^2*n2*n3 + 56*n1*n2*n3 - 16*d*n1*n2*n3 - 12*n2^2*n3 + 
      27*d*n2^2*n3 + 3*n1*n2^2*n3 - 21*n2^3*n3 - 16*n2*n3^2 + 15*d*n2*n3^2 + 
      2*n1*n2*n3^2 - 21*n2^2*n3^2 - 6*n2*n3^3 + 208*n2*n5 - 184*d*n2*n5 + 
      40*d^2*n2*n5 + 48*n1*n2*n5 - 24*d*n1*n2*n5 + 134*n2^2*n5 - 
      55*d*n2^2*n5 + 24*n1*n2^2*n5 + 15*n2^3*n5 + 86*n2*n3*n5 - 
      37*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 24*n2^2*n3*n5 + 9*n2*n3^2*n5 + 
      24*n2*n5^2 - 12*d*n2*n5^2 + 12*n2^2*n5^2 + 6*n2*n3*n5^2)*
     j[p4, -1 + n1, 1 + n2, n3, 1, 1 + n5, 0, 0, -2, 1, 1, 1, 1, 2, 0])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((208*n2 - 224*d*n2 + 68*d^2*n2 - 4*d^3*n2 + 
      328*n1*n2 - 328*d*n1*n2 + 106*d^2*n1*n2 - 12*d^3*n1*n2 + 68*n2^2 - 
      4*d*n2^2 - 15*d^2*n2^2 + 246*n1*n2^2 - 155*d*n1*n2^2 + 28*d^2*n1*n2^2 - 
      38*n2^3 + 29*d*n2^3 + 49*n1*n2^3 - 20*d*n1*n2^3 - 10*n2^4 + 4*n1*n2^4 + 
      320*n2*n3 - 342*d*n2*n3 + 123*d^2*n2*n3 - 16*d^3*n2*n3 + 384*n1*n2*n3 - 
      284*d*n1*n2*n3 + 52*d^2*n1*n2*n3 + 108*n2^2*n3 - 65*d*n2^2*n3 + 
      13*d^2*n2^2*n3 + 197*n1*n2^2*n3 - 67*d*n1*n2^2*n3 - 25*n2^3*n3 + 
      9*d*n2^3*n3 + 15*n1*n2^3*n3 - 6*n2^4*n3 + 56*n2*n3^2 - 25*d*n2*n3^2 + 
      d^2*n2*n3^2 + 98*n1*n2*n3^2 - 34*d*n1*n2*n3^2 - 47*n2^2*n3^2 + 
      27*d*n2^2*n3^2 + 17*n1*n2^2*n3^2 - 21*n2^3*n3^2 - 26*n2*n3^3 + 
      15*d*n2*n3^3 + 6*n1*n2*n3^3 - 21*n2^2*n3^3 - 6*n2*n3^4 + 192*n2*n5 - 
      168*d*n2*n5 + 36*d^2*n2*n5 + 64*n1*n2*n5 - 40*d*n1*n2*n5 + 
      4*d^2*n1*n2*n5 + 118*n2^2*n5 - 47*d*n2^2*n5 + 40*n1*n2^2*n5 - 
      8*d*n1*n2^2*n5 + 11*n2^3*n5 + 4*n1*n2^3*n5 + 282*n2*n3*n5 - 
      215*d*n2*n3*n5 + 40*d^2*n2*n3*n5 + 72*n1*n2*n3*n5 - 30*d*n1*n2*n3*n5 + 
      152*n2^2*n3*n5 - 55*d*n2^2*n3*n5 + 30*n1*n2^2*n3*n5 + 15*n2^3*n3*n5 + 
      93*n2*n3^2*n5 - 37*d*n2*n3^2*n5 + 14*n1*n2*n3^2*n5 + 24*n2^2*n3^2*n5 + 
      9*n2*n3^3*n5 + 24*n2*n5^2 - 12*d*n2*n5^2 + 12*n2^2*n5^2 + 
      30*n2*n3*n5^2 - 12*d*n2*n3*n5^2 + 12*n2^2*n3*n5^2 + 6*n2*n3^2*n5^2)*
     j[p4, -1 + n1, 1 + n2, n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 0, 1, 1])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((224*n2 - 304*d*n2 + 136*d^2*n2 - 20*d^3*n2 - 
      272*n1*n2 + 368*d*n1*n2 - 164*d^2*n1*n2 + 24*d^3*n1*n2 + 264*n2^2 - 
      232*d*n2^2 + 50*d^2*n2^2 - 300*n1*n2^2 + 262*d*n1*n2^2 - 
      56*d^2*n1*n2^2 + 92*n2^3 - 38*d*n2^3 - 98*n1*n2^3 + 40*d*n1*n2^3 + 
      8*n2^4 - 8*n1*n2^4 - 416*n2*n3 + 552*d*n2*n3 - 228*d^2*n2*n3 + 
      28*d^3*n2*n3 - 656*n1*n2*n3 + 528*d*n1*n2*n3 - 100*d^2*n1*n2*n3 - 
      228*n2^2*n3 + 166*d*n2^2*n3 - 20*d^2*n2^2*n3 - 382*n1*n2^2*n3 + 
      128*d*n1*n2^2*n3 + 12*n2^3*n3 - 20*d*n2^3*n3 - 28*n1*n2^3*n3 + 
      12*n2^4*n3 - 120*n2*n3^2 + 52*d*n2*n3^2 + 6*d^2*n2*n3^2 - 
      180*n1*n2*n3^2 + 60*d*n1*n2*n3^2 + 64*n2^2*n3^2 - 60*d*n2^2*n3^2 - 
      28*n1*n2^2*n3^2 + 42*n2^3*n3^2 + 48*n2*n3^3 - 34*d*n2*n3^3 - 
      8*n1*n2*n3^3 + 42*n2^2*n3^3 + 12*n2*n3^4 + 320*n2*n5 - 368*d*n2*n5 + 
      128*d^2*n2*n5 - 12*d^3*n2*n5 + 152*n1*n2*n5 - 104*d*n1*n2*n5 + 
      14*d^2*n1*n2*n5 + 208*n2^2*n5 - 118*d*n2^2*n5 + 7*d^2*n2^2*n5 + 
      58*n1*n2^2*n5 - 5*d*n1*n2^2*n5 + 12*n2^3*n5 + 11*d*n2^3*n5 - 
      9*n1*n2^3*n5 - 6*n2^4*n5 - 312*n2*n3*n5 + 322*d*n2*n3*n5 - 
      83*d^2*n2*n3*n5 - 80*n1*n2*n3*n5 + 52*d*n1*n2*n3*n5 - 274*n2^2*n3*n5 + 
      137*d*n2^2*n3*n5 - 63*n1*n2^2*n3*n5 - 49*n2^3*n3*n5 - 180*n2*n3^2*n5 + 
      85*d*n2*n3^2*n5 - 30*n1*n2*n3^2*n5 - 63*n2^2*n3^2*n5 - 20*n2*n3^3*n5 + 
      192*n2*n5^2 - 168*d*n2*n5^2 + 36*d^2*n2*n5^2 + 48*n1*n2*n5^2 - 
      24*d*n1*n2*n5^2 + 122*n2^2*n5^2 - 49*d*n2^2*n5^2 + 24*n1*n2^2*n5^2 + 
      13*n2^3*n5^2 + 22*n2*n3*n5^2 - 5*d*n2*n3*n5^2 + 12*n1*n2*n3*n5^2 - 
      6*n2^2*n3*n5^2 - 7*n2*n3^2*n5^2 + 24*n2*n5^3 - 12*d*n2*n5^3 + 
      12*n2^2*n5^3 + 6*n2*n3*n5^3)*j[p4, -1 + n1, 1 + n2, n3, 1, 1 + n5, 0, 
      0, -1, 1, 1, 1, 1, 0, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(2 - d + n1 + n5)) + 
   ((-304*n2 + 352*d*n2 - 124*d^2*n2 + 12*d^3*n2 - 184*n1*n2 + 136*d*n1*n2 - 
      22*d^2*n1*n2 - 188*n2^2 + 108*d*n2^2 - 7*d^2*n2^2 - 90*n1*n2^2 + 
      21*d*n1*n2^2 - 6*n2^3 - 11*d*n2^3 + n1*n2^3 + 6*n2^4 + 224*n2*n3 - 
      326*d*n2*n3 + 131*d^2*n2*n3 - 12*d^3*n2*n3 + 144*n1*n2*n3 - 
      128*d*n1*n2*n3 + 22*d^2*n1*n2*n3 + 212*n2^2*n3 - 141*d*n2^2*n3 + 
      7*d^2*n2^2*n3 + 93*n1*n2^2*n3 - 21*d*n1*n2^2*n3 + 27*n2^3*n3 + 
      11*d*n2^3*n3 - n1*n2^3*n3 - 6*n2^4*n3 + 104*n2*n3^2 - 45*d*n2*n3^2 - 
      7*d^2*n2*n3^2 + 42*n1*n2*n3^2 - 8*d*n1*n2*n3^2 - 3*n2^2*n3^2 + 
      33*d*n2^2*n3^2 - 3*n1*n2^2*n3^2 - 21*n2^3*n3^2 - 18*n2*n3^3 + 
      19*d*n2*n3^3 - 2*n1*n2*n3^3 - 21*n2^2*n3^3 - 6*n2*n3^4 - 496*n2*n5 + 
      520*d*n2*n5 - 160*d^2*n2*n5 + 12*d^3*n2*n5 - 232*n1*n2*n5 + 
      160*d*n1*n2*n5 - 22*d^2*n1*n2*n5 - 310*n2^2*n5 + 157*d*n2^2*n5 - 
      7*d^2*n2^2*n5 - 114*n1*n2^2*n5 + 21*d*n1*n2^2*n5 - 19*n2^3*n5 - 
      11*d*n2^3*n5 + n1*n2^3*n5 + 6*n2^4*n5 + 42*n2*n3*n5 - 113*d*n2*n3*n5 + 
      43*d^2*n2*n3*n5 - 4*n1*n2*n3*n5 - 16*d*n1*n2*n3*n5 + 128*n2^2*n3*n5 - 
      82*d*n2^2*n3*n5 + 27*n1*n2^2*n3*n5 + 34*n2^3*n3*n5 + 89*n2*n3^2*n5 - 
      48*d*n2*n3^2*n5 + 14*n1*n2*n3^2*n5 + 39*n2^2*n3^2*n5 + 11*n2*n3^3*n5 - 
      216*n2*n5^2 + 180*d*n2*n5^2 - 36*d^2*n2*n5^2 - 48*n1*n2*n5^2 + 
      24*d*n1*n2*n5^2 - 134*n2^2*n5^2 + 49*d*n2^2*n5^2 - 24*n1*n2^2*n5^2 - 
      13*n2^3*n5^2 - 52*n2*n3*n5^2 + 17*d*n2*n3*n5^2 - 12*n1*n2*n3*n5^2 - 
      6*n2^2*n3*n5^2 + n2*n3^2*n5^2 - 24*n2*n5^3 + 12*d*n2*n5^3 - 
      12*n2^2*n5^3 - 6*n2*n3*n5^3)*j[p4, -1 + n1, 1 + n2, n3, 1, 1 + n5, 0, 
      0, -1, 1, 1, 1, 1, 1, 0])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(2 - d + n1 + n5)) + 
   ((-336*n2 + 400*d*n2 - 148*d^2*n2 + 16*d^3*n2 - 200*n1*n2 + 152*d*n1*n2 - 
      26*d^2*n1*n2 - 212*n2^2 + 132*d*n2^2 - 13*d^2*n2^2 - 102*n1*n2^2 + 
      27*d*n1*n2^2 - 10*n2^3 - 9*d*n2^3 - n1*n2^3 + 6*n2^4 - 112*n2*n3 + 
      58*d*n2*n3 - d^2*n2*n3 - 56*n1*n2*n3 + 16*d*n1*n2*n3 + 12*n2^2*n3 - 
      27*d*n2^2*n3 - 3*n1*n2^2*n3 + 21*n2^3*n3 + 16*n2*n3^2 - 15*d*n2*n3^2 - 
      2*n1*n2*n3^2 + 21*n2^2*n3^2 + 6*n2*n3^3 - 544*n2*n5 + 584*d*n2*n5 - 
      188*d^2*n2*n5 + 16*d^3*n2*n5 - 248*n1*n2*n5 + 176*d*n1*n2*n5 - 
      26*d^2*n1*n2*n5 - 346*n2^2*n5 + 187*d*n2^2*n5 - 13*d^2*n2^2*n5 - 
      126*n1*n2^2*n5 + 27*d*n1*n2^2*n5 - 25*n2^3*n5 - 9*d*n2^3*n5 - 
      n1*n2^3*n5 + 6*n2^4*n5 - 198*n2*n3*n5 + 95*d*n2*n3*n5 - d^2*n2*n3*n5 - 
      68*n1*n2*n3*n5 + 16*d*n1*n2*n3*n5 - 12*n2^2*n3*n5 - 27*d*n2^2*n3*n5 - 
      3*n1*n2^2*n3*n5 + 21*n2^3*n3*n5 + 7*n2*n3^2*n5 - 15*d*n2*n3^2*n5 - 
      2*n1*n2*n3^2*n5 + 21*n2^2*n3^2*n5 + 6*n2*n3^3*n5 - 232*n2*n5^2 + 
      196*d*n2*n5^2 - 40*d^2*n2*n5^2 - 48*n1*n2*n5^2 + 24*d*n1*n2*n5^2 - 
      146*n2^2*n5^2 + 55*d*n2^2*n5^2 - 24*n1*n2^2*n5^2 - 15*n2^3*n5^2 - 
      92*n2*n3*n5^2 + 37*d*n2*n3*n5^2 - 12*n1*n2*n3*n5^2 - 24*n2^2*n3*n5^2 - 
      9*n2*n3^2*n5^2 - 24*n2*n5^3 + 12*d*n2*n5^3 - 12*n2^2*n5^3 - 
      6*n2*n3*n5^3)*j[p4, -1 + n1, 1 + n2, n3, 1, 2 + n5, -1, -1, -1, 1, 1, 
      1, 1, 1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((-336*n2 + 400*d*n2 - 148*d^2*n2 + 16*d^3*n2 - 
      200*n1*n2 + 152*d*n1*n2 - 26*d^2*n1*n2 - 212*n2^2 + 132*d*n2^2 - 
      13*d^2*n2^2 - 102*n1*n2^2 + 27*d*n1*n2^2 - 10*n2^3 - 9*d*n2^3 - 
      n1*n2^3 + 6*n2^4 - 112*n2*n3 + 58*d*n2*n3 - d^2*n2*n3 - 56*n1*n2*n3 + 
      16*d*n1*n2*n3 + 12*n2^2*n3 - 27*d*n2^2*n3 - 3*n1*n2^2*n3 + 21*n2^3*n3 + 
      16*n2*n3^2 - 15*d*n2*n3^2 - 2*n1*n2*n3^2 + 21*n2^2*n3^2 + 6*n2*n3^3 - 
      544*n2*n5 + 584*d*n2*n5 - 188*d^2*n2*n5 + 16*d^3*n2*n5 - 248*n1*n2*n5 + 
      176*d*n1*n2*n5 - 26*d^2*n1*n2*n5 - 346*n2^2*n5 + 187*d*n2^2*n5 - 
      13*d^2*n2^2*n5 - 126*n1*n2^2*n5 + 27*d*n1*n2^2*n5 - 25*n2^3*n5 - 
      9*d*n2^3*n5 - n1*n2^3*n5 + 6*n2^4*n5 - 198*n2*n3*n5 + 95*d*n2*n3*n5 - 
      d^2*n2*n3*n5 - 68*n1*n2*n3*n5 + 16*d*n1*n2*n3*n5 - 12*n2^2*n3*n5 - 
      27*d*n2^2*n3*n5 - 3*n1*n2^2*n3*n5 + 21*n2^3*n3*n5 + 7*n2*n3^2*n5 - 
      15*d*n2*n3^2*n5 - 2*n1*n2*n3^2*n5 + 21*n2^2*n3^2*n5 + 6*n2*n3^3*n5 - 
      232*n2*n5^2 + 196*d*n2*n5^2 - 40*d^2*n2*n5^2 - 48*n1*n2*n5^2 + 
      24*d*n1*n2*n5^2 - 146*n2^2*n5^2 + 55*d*n2^2*n5^2 - 24*n1*n2^2*n5^2 - 
      15*n2^3*n5^2 - 92*n2*n3*n5^2 + 37*d*n2*n3*n5^2 - 12*n1*n2*n3*n5^2 - 
      24*n2^2*n3*n5^2 - 9*n2*n3^2*n5^2 - 24*n2*n5^3 + 12*d*n2*n5^3 - 
      12*n2^2*n5^3 - 6*n2*n3*n5^3)*j[p4, -1 + n1, 1 + n2, n3, 1, 2 + n5, -1, 
      0, -1, 1, 1, 1, 1, 0, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(2 - d + n1 + n5)) + 
   ((336*n2 - 400*d*n2 + 148*d^2*n2 - 16*d^3*n2 + 200*n1*n2 - 152*d*n1*n2 + 
      26*d^2*n1*n2 + 212*n2^2 - 132*d*n2^2 + 13*d^2*n2^2 + 102*n1*n2^2 - 
      27*d*n1*n2^2 + 10*n2^3 + 9*d*n2^3 + n1*n2^3 - 6*n2^4 + 112*n2*n3 - 
      58*d*n2*n3 + d^2*n2*n3 + 56*n1*n2*n3 - 16*d*n1*n2*n3 - 12*n2^2*n3 + 
      27*d*n2^2*n3 + 3*n1*n2^2*n3 - 21*n2^3*n3 - 16*n2*n3^2 + 15*d*n2*n3^2 + 
      2*n1*n2*n3^2 - 21*n2^2*n3^2 - 6*n2*n3^3 + 544*n2*n5 - 584*d*n2*n5 + 
      188*d^2*n2*n5 - 16*d^3*n2*n5 + 248*n1*n2*n5 - 176*d*n1*n2*n5 + 
      26*d^2*n1*n2*n5 + 346*n2^2*n5 - 187*d*n2^2*n5 + 13*d^2*n2^2*n5 + 
      126*n1*n2^2*n5 - 27*d*n1*n2^2*n5 + 25*n2^3*n5 + 9*d*n2^3*n5 + 
      n1*n2^3*n5 - 6*n2^4*n5 + 198*n2*n3*n5 - 95*d*n2*n3*n5 + d^2*n2*n3*n5 + 
      68*n1*n2*n3*n5 - 16*d*n1*n2*n3*n5 + 12*n2^2*n3*n5 + 27*d*n2^2*n3*n5 + 
      3*n1*n2^2*n3*n5 - 21*n2^3*n3*n5 - 7*n2*n3^2*n5 + 15*d*n2*n3^2*n5 + 
      2*n1*n2*n3^2*n5 - 21*n2^2*n3^2*n5 - 6*n2*n3^3*n5 + 232*n2*n5^2 - 
      196*d*n2*n5^2 + 40*d^2*n2*n5^2 + 48*n1*n2*n5^2 - 24*d*n1*n2*n5^2 + 
      146*n2^2*n5^2 - 55*d*n2^2*n5^2 + 24*n1*n2^2*n5^2 + 15*n2^3*n5^2 + 
      92*n2*n3*n5^2 - 37*d*n2*n3*n5^2 + 12*n1*n2*n3*n5^2 + 24*n2^2*n3*n5^2 + 
      9*n2*n3^2*n5^2 + 24*n2*n5^3 - 12*d*n2*n5^3 + 12*n2^2*n5^3 + 
      6*n2*n3*n5^3)*j[p4, -1 + n1, 1 + n2, n3, 1, 2 + n5, -1, 0, -1, 1, 1, 1, 
      1, 1, 0])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((-336*n2 + 400*d*n2 - 148*d^2*n2 + 16*d^3*n2 - 
      200*n1*n2 + 152*d*n1*n2 - 26*d^2*n1*n2 - 212*n2^2 + 132*d*n2^2 - 
      13*d^2*n2^2 - 102*n1*n2^2 + 27*d*n1*n2^2 - 10*n2^3 - 9*d*n2^3 - 
      n1*n2^3 + 6*n2^4 - 112*n2*n3 + 58*d*n2*n3 - d^2*n2*n3 - 56*n1*n2*n3 + 
      16*d*n1*n2*n3 + 12*n2^2*n3 - 27*d*n2^2*n3 - 3*n1*n2^2*n3 + 21*n2^3*n3 + 
      16*n2*n3^2 - 15*d*n2*n3^2 - 2*n1*n2*n3^2 + 21*n2^2*n3^2 + 6*n2*n3^3 - 
      544*n2*n5 + 584*d*n2*n5 - 188*d^2*n2*n5 + 16*d^3*n2*n5 - 248*n1*n2*n5 + 
      176*d*n1*n2*n5 - 26*d^2*n1*n2*n5 - 346*n2^2*n5 + 187*d*n2^2*n5 - 
      13*d^2*n2^2*n5 - 126*n1*n2^2*n5 + 27*d*n1*n2^2*n5 - 25*n2^3*n5 - 
      9*d*n2^3*n5 - n1*n2^3*n5 + 6*n2^4*n5 - 198*n2*n3*n5 + 95*d*n2*n3*n5 - 
      d^2*n2*n3*n5 - 68*n1*n2*n3*n5 + 16*d*n1*n2*n3*n5 - 12*n2^2*n3*n5 - 
      27*d*n2^2*n3*n5 - 3*n1*n2^2*n3*n5 + 21*n2^3*n3*n5 + 7*n2*n3^2*n5 - 
      15*d*n2*n3^2*n5 - 2*n1*n2*n3^2*n5 + 21*n2^2*n3^2*n5 + 6*n2*n3^3*n5 - 
      232*n2*n5^2 + 196*d*n2*n5^2 - 40*d^2*n2*n5^2 - 48*n1*n2*n5^2 + 
      24*d*n1*n2*n5^2 - 146*n2^2*n5^2 + 55*d*n2^2*n5^2 - 24*n1*n2^2*n5^2 - 
      15*n2^3*n5^2 - 92*n2*n3*n5^2 + 37*d*n2*n3*n5^2 - 12*n1*n2*n3*n5^2 - 
      24*n2^2*n3*n5^2 - 9*n2*n3^2*n5^2 - 24*n2*n5^3 + 12*d*n2*n5^3 - 
      12*n2^2*n5^3 - 6*n2*n3*n5^3)*j[p4, -1 + n1, 1 + n2, n3, 1, 2 + n5, 0, 
      -2, -1, 1, 1, 1, 1, 1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(2 - d + n1 + n5)) + 
   ((-336*n2 + 400*d*n2 - 148*d^2*n2 + 16*d^3*n2 - 200*n1*n2 + 152*d*n1*n2 - 
      26*d^2*n1*n2 - 212*n2^2 + 132*d*n2^2 - 13*d^2*n2^2 - 102*n1*n2^2 + 
      27*d*n1*n2^2 - 10*n2^3 - 9*d*n2^3 - n1*n2^3 + 6*n2^4 - 112*n2*n3 + 
      58*d*n2*n3 - d^2*n2*n3 - 56*n1*n2*n3 + 16*d*n1*n2*n3 + 12*n2^2*n3 - 
      27*d*n2^2*n3 - 3*n1*n2^2*n3 + 21*n2^3*n3 + 16*n2*n3^2 - 15*d*n2*n3^2 - 
      2*n1*n2*n3^2 + 21*n2^2*n3^2 + 6*n2*n3^3 - 544*n2*n5 + 584*d*n2*n5 - 
      188*d^2*n2*n5 + 16*d^3*n2*n5 - 248*n1*n2*n5 + 176*d*n1*n2*n5 - 
      26*d^2*n1*n2*n5 - 346*n2^2*n5 + 187*d*n2^2*n5 - 13*d^2*n2^2*n5 - 
      126*n1*n2^2*n5 + 27*d*n1*n2^2*n5 - 25*n2^3*n5 - 9*d*n2^3*n5 - 
      n1*n2^3*n5 + 6*n2^4*n5 - 198*n2*n3*n5 + 95*d*n2*n3*n5 - d^2*n2*n3*n5 - 
      68*n1*n2*n3*n5 + 16*d*n1*n2*n3*n5 - 12*n2^2*n3*n5 - 27*d*n2^2*n3*n5 - 
      3*n1*n2^2*n3*n5 + 21*n2^3*n3*n5 + 7*n2*n3^2*n5 - 15*d*n2*n3^2*n5 - 
      2*n1*n2*n3^2*n5 + 21*n2^2*n3^2*n5 + 6*n2*n3^3*n5 - 232*n2*n5^2 + 
      196*d*n2*n5^2 - 40*d^2*n2*n5^2 - 48*n1*n2*n5^2 + 24*d*n1*n2*n5^2 - 
      146*n2^2*n5^2 + 55*d*n2^2*n5^2 - 24*n1*n2^2*n5^2 - 15*n2^3*n5^2 - 
      92*n2*n3*n5^2 + 37*d*n2*n3*n5^2 - 12*n1*n2*n3*n5^2 - 24*n2^2*n3*n5^2 - 
      9*n2*n3^2*n5^2 - 24*n2*n5^3 + 12*d*n2*n5^3 - 12*n2^2*n5^3 - 
      6*n2*n3*n5^3)*j[p4, -1 + n1, 1 + n2, n3, 1, 2 + n5, 0, -1, -2, 1, 1, 1, 
      1, 1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((-304*n2 + 352*d*n2 - 124*d^2*n2 + 12*d^3*n2 - 
      184*n1*n2 + 136*d*n1*n2 - 22*d^2*n1*n2 - 188*n2^2 + 108*d*n2^2 - 
      7*d^2*n2^2 - 90*n1*n2^2 + 21*d*n1*n2^2 - 6*n2^3 - 11*d*n2^3 + n1*n2^3 + 
      6*n2^4 - 80*n2*n3 + 26*d*n2*n3 + 7*d^2*n2*n3 - 40*n1*n2*n3 + 
      8*d*n1*n2*n3 + 24*n2^2*n3 - 33*d*n2^2*n3 + 3*n1*n2^2*n3 + 21*n2^3*n3 + 
      24*n2*n3^2 - 19*d*n2*n3^2 + 2*n1*n2*n3^2 + 21*n2^2*n3^2 + 6*n2*n3^3 - 
      496*n2*n5 + 520*d*n2*n5 - 160*d^2*n2*n5 + 12*d^3*n2*n5 - 232*n1*n2*n5 + 
      160*d*n1*n2*n5 - 22*d^2*n1*n2*n5 - 310*n2^2*n5 + 157*d*n2^2*n5 - 
      7*d^2*n2^2*n5 - 114*n1*n2^2*n5 + 21*d*n1*n2^2*n5 - 19*n2^3*n5 - 
      11*d*n2^3*n5 + n1*n2^3*n5 + 6*n2^4*n5 - 150*n2*n3*n5 + 55*d*n2*n3*n5 + 
      7*d^2*n2*n3*n5 - 52*n1*n2*n3*n5 + 8*d*n1*n2*n3*n5 + 6*n2^2*n3*n5 - 
      33*d*n2^2*n3*n5 + 3*n1*n2^2*n3*n5 + 21*n2^3*n3*n5 + 19*n2*n3^2*n5 - 
      19*d*n2*n3^2*n5 + 2*n1*n2*n3^2*n5 + 21*n2^2*n3^2*n5 + 6*n2*n3^3*n5 - 
      216*n2*n5^2 + 180*d*n2*n5^2 - 36*d^2*n2*n5^2 - 48*n1*n2*n5^2 + 
      24*d*n1*n2*n5^2 - 134*n2^2*n5^2 + 49*d*n2^2*n5^2 - 24*n1*n2^2*n5^2 - 
      13*n2^3*n5^2 - 76*n2*n3*n5^2 + 29*d*n2*n3*n5^2 - 12*n1*n2*n3*n5^2 - 
      18*n2^2*n3*n5^2 - 5*n2*n3^2*n5^2 - 24*n2*n5^3 + 12*d*n2*n5^3 - 
      12*n2^2*n5^3 - 6*n2*n3*n5^3)*j[p4, -1 + n1, 1 + n2, n3, 1, 2 + n5, 0, 
      -1, -1, 1, 1, 1, 1, 0, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(2 - d + n1 + n5)) + 
   ((304*n2 - 352*d*n2 + 124*d^2*n2 - 12*d^3*n2 + 184*n1*n2 - 136*d*n1*n2 + 
      22*d^2*n1*n2 + 188*n2^2 - 108*d*n2^2 + 7*d^2*n2^2 + 90*n1*n2^2 - 
      21*d*n1*n2^2 + 6*n2^3 + 11*d*n2^3 - n1*n2^3 - 6*n2^4 + 80*n2*n3 - 
      26*d*n2*n3 - 7*d^2*n2*n3 + 40*n1*n2*n3 - 8*d*n1*n2*n3 - 24*n2^2*n3 + 
      33*d*n2^2*n3 - 3*n1*n2^2*n3 - 21*n2^3*n3 - 24*n2*n3^2 + 19*d*n2*n3^2 - 
      2*n1*n2*n3^2 - 21*n2^2*n3^2 - 6*n2*n3^3 + 496*n2*n5 - 520*d*n2*n5 + 
      160*d^2*n2*n5 - 12*d^3*n2*n5 + 232*n1*n2*n5 - 160*d*n1*n2*n5 + 
      22*d^2*n1*n2*n5 + 310*n2^2*n5 - 157*d*n2^2*n5 + 7*d^2*n2^2*n5 + 
      114*n1*n2^2*n5 - 21*d*n1*n2^2*n5 + 19*n2^3*n5 + 11*d*n2^3*n5 - 
      n1*n2^3*n5 - 6*n2^4*n5 + 150*n2*n3*n5 - 55*d*n2*n3*n5 - 
      7*d^2*n2*n3*n5 + 52*n1*n2*n3*n5 - 8*d*n1*n2*n3*n5 - 6*n2^2*n3*n5 + 
      33*d*n2^2*n3*n5 - 3*n1*n2^2*n3*n5 - 21*n2^3*n3*n5 - 19*n2*n3^2*n5 + 
      19*d*n2*n3^2*n5 - 2*n1*n2*n3^2*n5 - 21*n2^2*n3^2*n5 - 6*n2*n3^3*n5 + 
      216*n2*n5^2 - 180*d*n2*n5^2 + 36*d^2*n2*n5^2 + 48*n1*n2*n5^2 - 
      24*d*n1*n2*n5^2 + 134*n2^2*n5^2 - 49*d*n2^2*n5^2 + 24*n1*n2^2*n5^2 + 
      13*n2^3*n5^2 + 76*n2*n3*n5^2 - 29*d*n2*n3*n5^2 + 12*n1*n2*n3*n5^2 + 
      18*n2^2*n3*n5^2 + 5*n2*n3^2*n5^2 + 24*n2*n5^3 - 12*d*n2*n5^3 + 
      12*n2^2*n5^3 + 6*n2*n3*n5^3)*j[p4, -1 + n1, 1 + n2, n3, 1, 2 + n5, 0, 
      -1, -1, 1, 1, 1, 1, 1, 0])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(2 - d + n1 + n5)) + 
   ((336*n2 - 400*d*n2 + 148*d^2*n2 - 16*d^3*n2 + 200*n1*n2 - 152*d*n1*n2 + 
      26*d^2*n1*n2 + 212*n2^2 - 132*d*n2^2 + 13*d^2*n2^2 + 102*n1*n2^2 - 
      27*d*n1*n2^2 + 10*n2^3 + 9*d*n2^3 + n1*n2^3 - 6*n2^4 + 112*n2*n3 - 
      58*d*n2*n3 + d^2*n2*n3 + 56*n1*n2*n3 - 16*d*n1*n2*n3 - 12*n2^2*n3 + 
      27*d*n2^2*n3 + 3*n1*n2^2*n3 - 21*n2^3*n3 - 16*n2*n3^2 + 15*d*n2*n3^2 + 
      2*n1*n2*n3^2 - 21*n2^2*n3^2 - 6*n2*n3^3 + 544*n2*n5 - 584*d*n2*n5 + 
      188*d^2*n2*n5 - 16*d^3*n2*n5 + 248*n1*n2*n5 - 176*d*n1*n2*n5 + 
      26*d^2*n1*n2*n5 + 346*n2^2*n5 - 187*d*n2^2*n5 + 13*d^2*n2^2*n5 + 
      126*n1*n2^2*n5 - 27*d*n1*n2^2*n5 + 25*n2^3*n5 + 9*d*n2^3*n5 + 
      n1*n2^3*n5 - 6*n2^4*n5 + 198*n2*n3*n5 - 95*d*n2*n3*n5 + d^2*n2*n3*n5 + 
      68*n1*n2*n3*n5 - 16*d*n1*n2*n3*n5 + 12*n2^2*n3*n5 + 27*d*n2^2*n3*n5 + 
      3*n1*n2^2*n3*n5 - 21*n2^3*n3*n5 - 7*n2*n3^2*n5 + 15*d*n2*n3^2*n5 + 
      2*n1*n2*n3^2*n5 - 21*n2^2*n3^2*n5 - 6*n2*n3^3*n5 + 232*n2*n5^2 - 
      196*d*n2*n5^2 + 40*d^2*n2*n5^2 + 48*n1*n2*n5^2 - 24*d*n1*n2*n5^2 + 
      146*n2^2*n5^2 - 55*d*n2^2*n5^2 + 24*n1*n2^2*n5^2 + 15*n2^3*n5^2 + 
      92*n2*n3*n5^2 - 37*d*n2*n3*n5^2 + 12*n1*n2*n3*n5^2 + 24*n2^2*n3*n5^2 + 
      9*n2*n3^2*n5^2 + 24*n2*n5^3 - 12*d*n2*n5^3 + 12*n2^2*n5^3 + 
      6*n2*n3*n5^3)*j[p4, -1 + n1, 1 + n2, n3, 1, 2 + n5, 0, 0, -2, 1, 1, 1, 
      1, 0, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((-336*n2 + 400*d*n2 - 148*d^2*n2 + 16*d^3*n2 - 
      200*n1*n2 + 152*d*n1*n2 - 26*d^2*n1*n2 - 212*n2^2 + 132*d*n2^2 - 
      13*d^2*n2^2 - 102*n1*n2^2 + 27*d*n1*n2^2 - 10*n2^3 - 9*d*n2^3 - 
      n1*n2^3 + 6*n2^4 - 112*n2*n3 + 58*d*n2*n3 - d^2*n2*n3 - 56*n1*n2*n3 + 
      16*d*n1*n2*n3 + 12*n2^2*n3 - 27*d*n2^2*n3 - 3*n1*n2^2*n3 + 21*n2^3*n3 + 
      16*n2*n3^2 - 15*d*n2*n3^2 - 2*n1*n2*n3^2 + 21*n2^2*n3^2 + 6*n2*n3^3 - 
      544*n2*n5 + 584*d*n2*n5 - 188*d^2*n2*n5 + 16*d^3*n2*n5 - 248*n1*n2*n5 + 
      176*d*n1*n2*n5 - 26*d^2*n1*n2*n5 - 346*n2^2*n5 + 187*d*n2^2*n5 - 
      13*d^2*n2^2*n5 - 126*n1*n2^2*n5 + 27*d*n1*n2^2*n5 - 25*n2^3*n5 - 
      9*d*n2^3*n5 - n1*n2^3*n5 + 6*n2^4*n5 - 198*n2*n3*n5 + 95*d*n2*n3*n5 - 
      d^2*n2*n3*n5 - 68*n1*n2*n3*n5 + 16*d*n1*n2*n3*n5 - 12*n2^2*n3*n5 - 
      27*d*n2^2*n3*n5 - 3*n1*n2^2*n3*n5 + 21*n2^3*n3*n5 + 7*n2*n3^2*n5 - 
      15*d*n2*n3^2*n5 - 2*n1*n2*n3^2*n5 + 21*n2^2*n3^2*n5 + 6*n2*n3^3*n5 - 
      232*n2*n5^2 + 196*d*n2*n5^2 - 40*d^2*n2*n5^2 - 48*n1*n2*n5^2 + 
      24*d*n1*n2*n5^2 - 146*n2^2*n5^2 + 55*d*n2^2*n5^2 - 24*n1*n2^2*n5^2 - 
      15*n2^3*n5^2 - 92*n2*n3*n5^2 + 37*d*n2*n3*n5^2 - 12*n1*n2*n3*n5^2 - 
      24*n2^2*n3*n5^2 - 9*n2*n3^2*n5^2 - 24*n2*n5^3 + 12*d*n2*n5^3 - 
      12*n2^2*n5^3 - 6*n2*n3*n5^3)*j[p4, -1 + n1, 1 + n2, n3, 1, 2 + n5, 0, 
      0, -2, 1, 1, 1, 1, 1, 0])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(2 - d + n1 + n5)) + 
   ((-304*n2 + 352*d*n2 - 124*d^2*n2 + 12*d^3*n2 - 184*n1*n2 + 136*d*n1*n2 - 
      22*d^2*n1*n2 - 188*n2^2 + 108*d*n2^2 - 7*d^2*n2^2 - 90*n1*n2^2 + 
      21*d*n1*n2^2 - 6*n2^3 - 11*d*n2^3 + n1*n2^3 + 6*n2^4 - 80*n2*n3 + 
      26*d*n2*n3 + 7*d^2*n2*n3 - 40*n1*n2*n3 + 8*d*n1*n2*n3 + 24*n2^2*n3 - 
      33*d*n2^2*n3 + 3*n1*n2^2*n3 + 21*n2^3*n3 + 24*n2*n3^2 - 19*d*n2*n3^2 + 
      2*n1*n2*n3^2 + 21*n2^2*n3^2 + 6*n2*n3^3 - 192*n2*n5 + 168*d*n2*n5 - 
      36*d^2*n2*n5 - 48*n1*n2*n5 + 24*d*n1*n2*n5 - 122*n2^2*n5 + 
      49*d*n2^2*n5 - 24*n1*n2^2*n5 - 13*n2^3*n5 - 70*n2*n3*n5 + 
      29*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 18*n2^2*n3*n5 - 5*n2*n3^2*n5 - 
      24*n2*n5^2 + 12*d*n2*n5^2 - 12*n2^2*n5^2 - 6*n2*n3*n5^2)*
     j[p4, -1 + n1, 1 + n2, n3, 2, n5, 0, 0, -1, 1, 1, 1, 1, 1, 0])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((336*n2 - 400*d*n2 + 148*d^2*n2 - 16*d^3*n2 + 
      200*n1*n2 - 152*d*n1*n2 + 26*d^2*n1*n2 + 212*n2^2 - 132*d*n2^2 + 
      13*d^2*n2^2 + 102*n1*n2^2 - 27*d*n1*n2^2 + 10*n2^3 + 9*d*n2^3 + 
      n1*n2^3 - 6*n2^4 + 112*n2*n3 - 58*d*n2*n3 + d^2*n2*n3 + 56*n1*n2*n3 - 
      16*d*n1*n2*n3 - 12*n2^2*n3 + 27*d*n2^2*n3 + 3*n1*n2^2*n3 - 21*n2^3*n3 - 
      16*n2*n3^2 + 15*d*n2*n3^2 + 2*n1*n2*n3^2 - 21*n2^2*n3^2 - 6*n2*n3^3 + 
      208*n2*n5 - 184*d*n2*n5 + 40*d^2*n2*n5 + 48*n1*n2*n5 - 24*d*n1*n2*n5 + 
      134*n2^2*n5 - 55*d*n2^2*n5 + 24*n1*n2^2*n5 + 15*n2^3*n5 + 86*n2*n3*n5 - 
      37*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 24*n2^2*n3*n5 + 9*n2*n3^2*n5 + 
      24*n2*n5^2 - 12*d*n2*n5^2 + 12*n2^2*n5^2 + 6*n2*n3*n5^2)*
     j[p4, -1 + n1, 1 + n2, n3, 2, 1 + n5, -1, 0, -1, 1, 1, 1, 1, 1, 0])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((304*n2 - 352*d*n2 + 124*d^2*n2 - 12*d^3*n2 + 
      184*n1*n2 - 136*d*n1*n2 + 22*d^2*n1*n2 + 188*n2^2 - 108*d*n2^2 + 
      7*d^2*n2^2 + 90*n1*n2^2 - 21*d*n1*n2^2 + 6*n2^3 + 11*d*n2^3 - n1*n2^3 - 
      6*n2^4 + 80*n2*n3 - 26*d*n2*n3 - 7*d^2*n2*n3 + 40*n1*n2*n3 - 
      8*d*n1*n2*n3 - 24*n2^2*n3 + 33*d*n2^2*n3 - 3*n1*n2^2*n3 - 21*n2^3*n3 - 
      24*n2*n3^2 + 19*d*n2*n3^2 - 2*n1*n2*n3^2 - 21*n2^2*n3^2 - 6*n2*n3^3 + 
      192*n2*n5 - 168*d*n2*n5 + 36*d^2*n2*n5 + 48*n1*n2*n5 - 24*d*n1*n2*n5 + 
      122*n2^2*n5 - 49*d*n2^2*n5 + 24*n1*n2^2*n5 + 13*n2^3*n5 + 70*n2*n3*n5 - 
      29*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 18*n2^2*n3*n5 + 5*n2*n3^2*n5 + 
      24*n2*n5^2 - 12*d*n2*n5^2 + 12*n2^2*n5^2 + 6*n2*n3*n5^2)*
     j[p4, -1 + n1, 1 + n2, n3, 2, 1 + n5, 0, -1, -1, 1, 1, 1, 1, 1, 0])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((-336*n2 + 400*d*n2 - 148*d^2*n2 + 16*d^3*n2 - 
      200*n1*n2 + 152*d*n1*n2 - 26*d^2*n1*n2 - 212*n2^2 + 132*d*n2^2 - 
      13*d^2*n2^2 - 102*n1*n2^2 + 27*d*n1*n2^2 - 10*n2^3 - 9*d*n2^3 - 
      n1*n2^3 + 6*n2^4 - 112*n2*n3 + 58*d*n2*n3 - d^2*n2*n3 - 56*n1*n2*n3 + 
      16*d*n1*n2*n3 + 12*n2^2*n3 - 27*d*n2^2*n3 - 3*n1*n2^2*n3 + 21*n2^3*n3 + 
      16*n2*n3^2 - 15*d*n2*n3^2 - 2*n1*n2*n3^2 + 21*n2^2*n3^2 + 6*n2*n3^3 - 
      208*n2*n5 + 184*d*n2*n5 - 40*d^2*n2*n5 - 48*n1*n2*n5 + 24*d*n1*n2*n5 - 
      134*n2^2*n5 + 55*d*n2^2*n5 - 24*n1*n2^2*n5 - 15*n2^3*n5 - 86*n2*n3*n5 + 
      37*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 24*n2^2*n3*n5 - 9*n2*n3^2*n5 - 
      24*n2*n5^2 + 12*d*n2*n5^2 - 12*n2^2*n5^2 - 6*n2*n3*n5^2)*
     j[p4, -1 + n1, 1 + n2, n3, 2, 1 + n5, 0, 0, -2, 1, 1, 1, 1, 1, 0])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((976*n2*n3 - 1152*d*n2*n3 + 420*d^2*n2*n3 - 
      44*d^3*n2*n3 + 584*n1*n2*n3 - 440*d*n1*n2*n3 + 74*d^2*n1*n2*n3 + 
      612*n2^2*n3 - 372*d*n2^2*n3 + 33*d^2*n2^2*n3 + 294*n1*n2^2*n3 - 
      75*d*n1*n2^2*n3 + 26*n2^3*n3 + 29*d*n2^3*n3 + n1*n2^3*n3 - 18*n2^4*n3 + 
      304*n2*n3^2 - 142*d*n2*n3^2 - 5*d^2*n2*n3^2 + 152*n1*n2*n3^2 - 
      40*d*n1*n2*n3^2 - 48*n2^2*n3^2 + 87*d*n2^2*n3^2 + 3*n1*n2^2*n3^2 - 
      63*n2^3*n3^2 - 56*n2*n3^3 + 49*d*n2*n3^3 + 2*n1*n2*n3^3 - 
      63*n2^2*n3^3 - 18*n2*n3^4 + 608*n2*n3*n5 - 536*d*n2*n3*n5 + 
      116*d^2*n2*n3*n5 + 144*n1*n2*n3*n5 - 72*d*n1*n2*n3*n5 + 
      390*n2^2*n3*n5 - 159*d*n2^2*n3*n5 + 72*n1*n2^2*n3*n5 + 43*n2^3*n3*n5 + 
      242*n2*n3^2*n5 - 103*d*n2*n3^2*n5 + 36*n1*n2*n3^2*n5 + 
      66*n2^2*n3^2*n5 + 23*n2*n3^3*n5 + 72*n2*n3*n5^2 - 36*d*n2*n3*n5^2 + 
      36*n2^2*n3*n5^2 + 18*n2*n3^2*n5^2)*j[p4, -1 + n1, 1 + n2, 1 + n3, 0, 
      1 + n5, 0, -1, -1, 1, 1, 1, 1, 1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*
     (n2 - n3)*(-4 + d - n5)*(2 - d + n1 + n5)) + 
   ((-336*n2*n3 + 400*d*n2*n3 - 148*d^2*n2*n3 + 16*d^3*n2*n3 - 200*n1*n2*n3 + 
      152*d*n1*n2*n3 - 26*d^2*n1*n2*n3 - 212*n2^2*n3 + 132*d*n2^2*n3 - 
      13*d^2*n2^2*n3 - 102*n1*n2^2*n3 + 27*d*n1*n2^2*n3 - 10*n2^3*n3 - 
      9*d*n2^3*n3 - n1*n2^3*n3 + 6*n2^4*n3 - 112*n2*n3^2 + 58*d*n2*n3^2 - 
      d^2*n2*n3^2 - 56*n1*n2*n3^2 + 16*d*n1*n2*n3^2 + 12*n2^2*n3^2 - 
      27*d*n2^2*n3^2 - 3*n1*n2^2*n3^2 + 21*n2^3*n3^2 + 16*n2*n3^3 - 
      15*d*n2*n3^3 - 2*n1*n2*n3^3 + 21*n2^2*n3^3 + 6*n2*n3^4 - 208*n2*n3*n5 + 
      184*d*n2*n3*n5 - 40*d^2*n2*n3*n5 - 48*n1*n2*n3*n5 + 24*d*n1*n2*n3*n5 - 
      134*n2^2*n3*n5 + 55*d*n2^2*n3*n5 - 24*n1*n2^2*n3*n5 - 15*n2^3*n3*n5 - 
      86*n2*n3^2*n5 + 37*d*n2*n3^2*n5 - 12*n1*n2*n3^2*n5 - 24*n2^2*n3^2*n5 - 
      9*n2*n3^3*n5 - 24*n2*n3*n5^2 + 12*d*n2*n3*n5^2 - 12*n2^2*n3*n5^2 - 
      6*n2*n3^2*n5^2)*j[p4, -1 + n1, 1 + n2, 1 + n3, 0, 1 + n5, 0, 0, -2, 1, 
      1, 1, 1, 1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((-4*n2*n3 + 2*d*n2*n3 - n2^2*n3 - 2*n2*n3^2)*
     j[p4, -1 + n1, 1 + n2, 1 + n3, 1, n5, 0, -1, -1, 1, 1, 1, 1, 1, 1])/
    ((-1 + n1)*(n2 - n3)*(-4 + d - n5)) + 
   ((-8*n2*n3 + 4*d*n2*n3 - 2*n2^2*n3 - 4*n2*n3^2)*j[p4, -1 + n1, 1 + n2, 
      1 + n3, 1, n5, 0, 0, -2, 1, 1, 1, 1, 1, 1])/
    ((-1 + n1)*(n2 - n3)*(-4 + d - n5)) + 
   ((4*n2*n3 - 2*d*n2*n3 + n2^2*n3 + 2*n2*n3^2)*j[p4, -1 + n1, 1 + n2, 
      1 + n3, 1, n5, 0, 0, -1, 1, 1, 1, 0, 1, 1])/
    ((-1 + n1)*(n2 - n3)*(-4 + d - n5)) + 
   ((-272*n2*n3 + 304*d*n2*n3 - 100*d^2*n2*n3 + 8*d^3*n2*n3 - 168*n1*n2*n3 + 
      120*d*n1*n2*n3 - 18*d^2*n1*n2*n3 - 164*n2^2*n3 + 84*d*n2^2*n3 - 
      d^2*n2^2*n3 - 78*n1*n2^2*n3 + 15*d*n1*n2^2*n3 - 2*n2^3*n3 - 
      13*d*n2^3*n3 + 3*n1*n2^3*n3 + 6*n2^4*n3 - 48*n2*n3^2 - 6*d*n2*n3^2 + 
      15*d^2*n2*n3^2 - 24*n1*n2*n3^2 + 36*n2^2*n3^2 - 39*d*n2^2*n3^2 + 
      9*n1*n2^2*n3^2 + 21*n2^3*n3^2 + 32*n2*n3^3 - 23*d*n2*n3^3 + 
      6*n1*n2*n3^3 + 21*n2^2*n3^3 + 6*n2*n3^4 - 176*n2*n3*n5 + 
      152*d*n2*n3*n5 - 32*d^2*n2*n3*n5 - 48*n1*n2*n3*n5 + 24*d*n1*n2*n3*n5 - 
      110*n2^2*n3*n5 + 43*d*n2^2*n3*n5 - 24*n1*n2^2*n3*n5 - 11*n2^3*n3*n5 - 
      54*n2*n3^2*n5 + 21*d*n2*n3^2*n5 - 12*n1*n2*n3^2*n5 - 12*n2^2*n3^2*n5 - 
      n2*n3^3*n5 - 24*n2*n3*n5^2 + 12*d*n2*n3*n5^2 - 12*n2^2*n3*n5^2 - 
      6*n2*n3^2*n5^2)*j[p4, -1 + n1, 1 + n2, 1 + n3, 1, n5, 0, 0, -1, 1, 1, 
      1, 1, 0, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((4*n2*n3 - 2*d*n2*n3 + n2^2*n3 + 2*n2*n3^2)*
     j[p4, -1 + n1, 1 + n2, 1 + n3, 1, 1 + n5, -1, -1, -1, 1, 1, 1, 1, 1, 1])/
    ((-1 + n1)*(n2 - n3)*(-4 + d - n5)) + 
   ((336*n2*n3 - 400*d*n2*n3 + 148*d^2*n2*n3 - 16*d^3*n2*n3 + 200*n1*n2*n3 - 
      152*d*n1*n2*n3 + 26*d^2*n1*n2*n3 + 212*n2^2*n3 - 132*d*n2^2*n3 + 
      13*d^2*n2^2*n3 + 102*n1*n2^2*n3 - 27*d*n1*n2^2*n3 + 10*n2^3*n3 + 
      9*d*n2^3*n3 + n1*n2^3*n3 - 6*n2^4*n3 + 112*n2*n3^2 - 58*d*n2*n3^2 + 
      d^2*n2*n3^2 + 56*n1*n2*n3^2 - 16*d*n1*n2*n3^2 - 12*n2^2*n3^2 + 
      27*d*n2^2*n3^2 + 3*n1*n2^2*n3^2 - 21*n2^3*n3^2 - 16*n2*n3^3 + 
      15*d*n2*n3^3 + 2*n1*n2*n3^3 - 21*n2^2*n3^3 - 6*n2*n3^4 + 208*n2*n3*n5 - 
      184*d*n2*n3*n5 + 40*d^2*n2*n3*n5 + 48*n1*n2*n3*n5 - 24*d*n1*n2*n3*n5 + 
      134*n2^2*n3*n5 - 55*d*n2^2*n3*n5 + 24*n1*n2^2*n3*n5 + 15*n2^3*n3*n5 + 
      86*n2*n3^2*n5 - 37*d*n2*n3^2*n5 + 12*n1*n2*n3^2*n5 + 24*n2^2*n3^2*n5 + 
      9*n2*n3^3*n5 + 24*n2*n3*n5^2 - 12*d*n2*n3*n5^2 + 12*n2^2*n3*n5^2 + 
      6*n2*n3^2*n5^2)*j[p4, -1 + n1, 1 + n2, 1 + n3, 1, 1 + n5, -1, 0, -1, 1, 
      1, 1, 1, 0, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((4*n2*n3 - 2*d*n2*n3 + n2^2*n3 + 2*n2*n3^2)*
     j[p4, -1 + n1, 1 + n2, 1 + n3, 1, 1 + n5, 0, -2, -1, 1, 1, 1, 1, 1, 1])/
    ((-1 + n1)*(n2 - n3)*(-4 + d - n5)) + 
   ((4*n2*n3 - 2*d*n2*n3 + n2^2*n3 + 2*n2*n3^2)*j[p4, -1 + n1, 1 + n2, 
      1 + n3, 1, 1 + n5, 0, -1, -2, 1, 1, 1, 1, 1, 1])/
    ((-1 + n1)*(n2 - n3)*(-4 + d - n5)) + 
   ((-4*n2*n3 + 2*d*n2*n3 - n2^2*n3 - 2*n2*n3^2)*j[p4, -1 + n1, 1 + n2, 
      1 + n3, 1, 1 + n5, 0, -1, -1, 1, 1, 1, 0, 1, 1])/
    ((-1 + n1)*(n2 - n3)*(-4 + d - n5)) + 
   ((272*n2*n3 - 304*d*n2*n3 + 100*d^2*n2*n3 - 8*d^3*n2*n3 + 168*n1*n2*n3 - 
      120*d*n1*n2*n3 + 18*d^2*n1*n2*n3 + 164*n2^2*n3 - 84*d*n2^2*n3 + 
      d^2*n2^2*n3 + 78*n1*n2^2*n3 - 15*d*n1*n2^2*n3 + 2*n2^3*n3 + 
      13*d*n2^3*n3 - 3*n1*n2^3*n3 - 6*n2^4*n3 + 48*n2*n3^2 + 6*d*n2*n3^2 - 
      15*d^2*n2*n3^2 + 24*n1*n2*n3^2 - 36*n2^2*n3^2 + 39*d*n2^2*n3^2 - 
      9*n1*n2^2*n3^2 - 21*n2^3*n3^2 - 32*n2*n3^3 + 23*d*n2*n3^3 - 
      6*n1*n2*n3^3 - 21*n2^2*n3^3 - 6*n2*n3^4 + 176*n2*n3*n5 - 
      152*d*n2*n3*n5 + 32*d^2*n2*n3*n5 + 48*n1*n2*n3*n5 - 24*d*n1*n2*n3*n5 + 
      110*n2^2*n3*n5 - 43*d*n2^2*n3*n5 + 24*n1*n2^2*n3*n5 + 11*n2^3*n3*n5 + 
      54*n2*n3^2*n5 - 21*d*n2*n3^2*n5 + 12*n1*n2*n3^2*n5 + 12*n2^2*n3^2*n5 + 
      n2*n3^3*n5 + 24*n2*n3*n5^2 - 12*d*n2*n3*n5^2 + 12*n2^2*n3*n5^2 + 
      6*n2*n3^2*n5^2)*j[p4, -1 + n1, 1 + n2, 1 + n3, 1, 1 + n5, 0, -1, -1, 1, 
      1, 1, 1, 0, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((-976*n2*n3 + 1152*d*n2*n3 - 420*d^2*n2*n3 + 
      44*d^3*n2*n3 - 584*n1*n2*n3 + 440*d*n1*n2*n3 - 74*d^2*n1*n2*n3 - 
      612*n2^2*n3 + 372*d*n2^2*n3 - 33*d^2*n2^2*n3 - 294*n1*n2^2*n3 + 
      75*d*n1*n2^2*n3 - 26*n2^3*n3 - 29*d*n2^3*n3 - n1*n2^3*n3 + 18*n2^4*n3 - 
      304*n2*n3^2 + 142*d*n2*n3^2 + 5*d^2*n2*n3^2 - 152*n1*n2*n3^2 + 
      40*d*n1*n2*n3^2 + 48*n2^2*n3^2 - 87*d*n2^2*n3^2 - 3*n1*n2^2*n3^2 + 
      63*n2^3*n3^2 + 56*n2*n3^3 - 49*d*n2*n3^3 - 2*n1*n2*n3^3 + 
      63*n2^2*n3^3 + 18*n2*n3^4 - 608*n2*n3*n5 + 536*d*n2*n3*n5 - 
      116*d^2*n2*n3*n5 - 144*n1*n2*n3*n5 + 72*d*n1*n2*n3*n5 - 
      390*n2^2*n3*n5 + 159*d*n2^2*n3*n5 - 72*n1*n2^2*n3*n5 - 43*n2^3*n3*n5 - 
      242*n2*n3^2*n5 + 103*d*n2*n3^2*n5 - 36*n1*n2*n3^2*n5 - 
      66*n2^2*n3^2*n5 - 23*n2*n3^3*n5 - 72*n2*n3*n5^2 + 36*d*n2*n3*n5^2 - 
      36*n2^2*n3*n5^2 - 18*n2*n3^2*n5^2)*j[p4, -1 + n1, 1 + n2, 1 + n3, 1, 
      1 + n5, 0, -1, -1, 1, 1, 1, 1, 1, 0])/(2*(-1 + n1)*(-2 + d - n2 - n3)*
     (n2 - n3)*(-4 + d - n5)*(2 - d + n1 + n5)) + 
   ((-336*n2*n3 + 400*d*n2*n3 - 148*d^2*n2*n3 + 16*d^3*n2*n3 - 200*n1*n2*n3 + 
      152*d*n1*n2*n3 - 26*d^2*n1*n2*n3 - 212*n2^2*n3 + 132*d*n2^2*n3 - 
      13*d^2*n2^2*n3 - 102*n1*n2^2*n3 + 27*d*n1*n2^2*n3 - 10*n2^3*n3 - 
      9*d*n2^3*n3 - n1*n2^3*n3 + 6*n2^4*n3 - 112*n2*n3^2 + 58*d*n2*n3^2 - 
      d^2*n2*n3^2 - 56*n1*n2*n3^2 + 16*d*n1*n2*n3^2 + 12*n2^2*n3^2 - 
      27*d*n2^2*n3^2 - 3*n1*n2^2*n3^2 + 21*n2^3*n3^2 + 16*n2*n3^3 - 
      15*d*n2*n3^3 - 2*n1*n2*n3^3 + 21*n2^2*n3^3 + 6*n2*n3^4 - 208*n2*n3*n5 + 
      184*d*n2*n3*n5 - 40*d^2*n2*n3*n5 - 48*n1*n2*n3*n5 + 24*d*n1*n2*n3*n5 - 
      134*n2^2*n3*n5 + 55*d*n2^2*n3*n5 - 24*n1*n2^2*n3*n5 - 15*n2^3*n3*n5 - 
      86*n2*n3^2*n5 + 37*d*n2*n3^2*n5 - 12*n1*n2*n3^2*n5 - 24*n2^2*n3^2*n5 - 
      9*n2*n3^3*n5 - 24*n2*n3*n5^2 + 12*d*n2*n3*n5^2 - 12*n2^2*n3*n5^2 - 
      6*n2*n3^2*n5^2)*j[p4, -1 + n1, 1 + n2, 1 + n3, 1, 1 + n5, 0, 0, -2, 1, 
      1, 1, 1, 0, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((336*n2*n3 - 400*d*n2*n3 + 148*d^2*n2*n3 - 
      16*d^3*n2*n3 + 200*n1*n2*n3 - 152*d*n1*n2*n3 + 26*d^2*n1*n2*n3 + 
      212*n2^2*n3 - 132*d*n2^2*n3 + 13*d^2*n2^2*n3 + 102*n1*n2^2*n3 - 
      27*d*n1*n2^2*n3 + 10*n2^3*n3 + 9*d*n2^3*n3 + n1*n2^3*n3 - 6*n2^4*n3 + 
      112*n2*n3^2 - 58*d*n2*n3^2 + d^2*n2*n3^2 + 56*n1*n2*n3^2 - 
      16*d*n1*n2*n3^2 - 12*n2^2*n3^2 + 27*d*n2^2*n3^2 + 3*n1*n2^2*n3^2 - 
      21*n2^3*n3^2 - 16*n2*n3^3 + 15*d*n2*n3^3 + 2*n1*n2*n3^3 - 
      21*n2^2*n3^3 - 6*n2*n3^4 + 208*n2*n3*n5 - 184*d*n2*n3*n5 + 
      40*d^2*n2*n3*n5 + 48*n1*n2*n3*n5 - 24*d*n1*n2*n3*n5 + 134*n2^2*n3*n5 - 
      55*d*n2^2*n3*n5 + 24*n1*n2^2*n3*n5 + 15*n2^3*n3*n5 + 86*n2*n3^2*n5 - 
      37*d*n2*n3^2*n5 + 12*n1*n2*n3^2*n5 + 24*n2^2*n3^2*n5 + 9*n2*n3^3*n5 + 
      24*n2*n3*n5^2 - 12*d*n2*n3*n5^2 + 12*n2^2*n3*n5^2 + 6*n2*n3^2*n5^2)*
     j[p4, -1 + n1, 1 + n2, 1 + n3, 1, 1 + n5, 0, 0, -2, 1, 1, 1, 1, 1, 0])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((-304*n2 + 352*d*n2 - 124*d^2*n2 + 12*d^3*n2 - 
      184*n1*n2 + 136*d*n1*n2 - 22*d^2*n1*n2 - 492*n2^2 + 460*d*n2^2 - 
      131*d^2*n2^2 + 12*d^3*n2^2 - 274*n1*n2^2 + 157*d*n1*n2^2 - 
      22*d^2*n1*n2^2 - 194*n2^3 + 97*d*n2^3 - 7*d^2*n2^3 - 89*n1*n2^3 + 
      21*d*n1*n2^3 - 11*d*n2^4 + n1*n2^4 + 6*n2^5 - 80*n2*n3 + 26*d*n2*n3 + 
      7*d^2*n2*n3 - 40*n1*n2*n3 + 8*d*n1*n2*n3 - 56*n2^2*n3 - 7*d*n2^2*n3 + 
      7*d^2*n2^2*n3 - 37*n1*n2^2*n3 + 8*d*n1*n2^2*n3 + 45*n2^3*n3 - 
      33*d*n2^3*n3 + 3*n1*n2^3*n3 + 21*n2^4*n3 + 24*n2*n3^2 - 19*d*n2*n3^2 + 
      2*n1*n2*n3^2 + 45*n2^2*n3^2 - 19*d*n2^2*n3^2 + 2*n1*n2^2*n3^2 + 
      21*n2^3*n3^2 + 6*n2*n3^3 + 6*n2^2*n3^3 - 192*n2*n5 + 168*d*n2*n5 - 
      36*d^2*n2*n5 - 48*n1*n2*n5 + 24*d*n1*n2*n5 - 314*n2^2*n5 + 
      217*d*n2^2*n5 - 36*d^2*n2^2*n5 - 72*n1*n2^2*n5 + 24*d*n1*n2^2*n5 - 
      135*n2^3*n5 + 49*d*n2^3*n5 - 24*n1*n2^3*n5 - 13*n2^4*n5 - 70*n2*n3*n5 + 
      29*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 88*n2^2*n3*n5 + 29*d*n2^2*n3*n5 - 
      12*n1*n2^2*n3*n5 - 18*n2^3*n3*n5 - 5*n2*n3^2*n5 - 5*n2^2*n3^2*n5 - 
      24*n2*n5^2 + 12*d*n2*n5^2 - 36*n2^2*n5^2 + 12*d*n2^2*n5^2 - 
      12*n2^3*n5^2 - 6*n2*n3*n5^2 - 6*n2^2*n3*n5^2)*
     j[p4, -1 + n1, 2 + n2, -1 + n3, 1, n5, 0, 0, -1, 1, 1, 1, 1, 1, 1])/
    ((-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((320*n2 - 376*d*n2 + 136*d^2*n2 - 14*d^3*n2 + 
      192*n1*n2 - 144*d*n1*n2 + 24*d^2*n1*n2 + 520*n2^2 - 496*d*n2^2 + 
      146*d^2*n2^2 - 14*d^3*n2^2 + 288*n1*n2^2 - 168*d*n1*n2^2 + 
      24*d^2*n1*n2^2 + 208*n2^3 - 110*d*n2^3 + 10*d^2*n2^3 + 96*n1*n2^3 - 
      24*d*n1*n2^3 + 2*n2^4 + 10*d*n2^4 - 6*n2^5 + 96*n2*n3 - 42*d*n2*n3 - 
      3*d^2*n2*n3 + 48*n1*n2*n3 - 12*d*n1*n2*n3 + 78*n2^2*n3 - 12*d*n2^2*n3 - 
      3*d^2*n2^2*n3 + 48*n1*n2^2*n3 - 12*d*n1*n2^2*n3 - 39*n2^3*n3 + 
      30*d*n2^3*n3 - 21*n2^4*n3 - 20*n2*n3^2 + 17*d*n2*n3^2 - 41*n2^2*n3^2 + 
      17*d*n2^2*n3^2 - 21*n2^3*n3^2 - 6*n2*n3^3 - 6*n2^2*n3^3 + 200*n2*n5 - 
      176*d*n2*n5 + 38*d^2*n2*n5 + 48*n1*n2*n5 - 24*d*n1*n2*n5 + 
      328*n2^2*n5 - 228*d*n2^2*n5 + 38*d^2*n2^2*n5 + 72*n1*n2^2*n5 - 
      24*d*n1*n2^2*n5 + 142*n2^3*n5 - 52*d*n2^3*n5 + 24*n1*n2^3*n5 + 
      14*n2^4*n5 + 78*n2*n3*n5 - 33*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 
      99*n2^2*n3*n5 - 33*d*n2^2*n3*n5 + 12*n1*n2^2*n3*n5 + 21*n2^3*n3*n5 + 
      7*n2*n3^2*n5 + 7*n2^2*n3^2*n5 + 24*n2*n5^2 - 12*d*n2*n5^2 + 
      36*n2^2*n5^2 - 12*d*n2^2*n5^2 + 12*n2^3*n5^2 + 6*n2*n3*n5^2 + 
      6*n2^2*n3*n5^2)*j[p4, -1 + n1, 2 + n2, -1 + n3, 1, 1 + n5, -1, 0, -1, 
      1, 1, 1, 1, 1, 1])/((-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(2 - d + n1 + n5)) + 
   ((320*n2 - 376*d*n2 + 136*d^2*n2 - 14*d^3*n2 + 192*n1*n2 - 144*d*n1*n2 + 
      24*d^2*n1*n2 + 520*n2^2 - 496*d*n2^2 + 146*d^2*n2^2 - 14*d^3*n2^2 + 
      288*n1*n2^2 - 168*d*n1*n2^2 + 24*d^2*n1*n2^2 + 208*n2^3 - 110*d*n2^3 + 
      10*d^2*n2^3 + 96*n1*n2^3 - 24*d*n1*n2^3 + 2*n2^4 + 10*d*n2^4 - 6*n2^5 + 
      96*n2*n3 - 42*d*n2*n3 - 3*d^2*n2*n3 + 48*n1*n2*n3 - 12*d*n1*n2*n3 + 
      78*n2^2*n3 - 12*d*n2^2*n3 - 3*d^2*n2^2*n3 + 48*n1*n2^2*n3 - 
      12*d*n1*n2^2*n3 - 39*n2^3*n3 + 30*d*n2^3*n3 - 21*n2^4*n3 - 20*n2*n3^2 + 
      17*d*n2*n3^2 - 41*n2^2*n3^2 + 17*d*n2^2*n3^2 - 21*n2^3*n3^2 - 
      6*n2*n3^3 - 6*n2^2*n3^3 + 200*n2*n5 - 176*d*n2*n5 + 38*d^2*n2*n5 + 
      48*n1*n2*n5 - 24*d*n1*n2*n5 + 328*n2^2*n5 - 228*d*n2^2*n5 + 
      38*d^2*n2^2*n5 + 72*n1*n2^2*n5 - 24*d*n1*n2^2*n5 + 142*n2^3*n5 - 
      52*d*n2^3*n5 + 24*n1*n2^3*n5 + 14*n2^4*n5 + 78*n2*n3*n5 - 
      33*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 99*n2^2*n3*n5 - 33*d*n2^2*n3*n5 + 
      12*n1*n2^2*n3*n5 + 21*n2^3*n3*n5 + 7*n2*n3^2*n5 + 7*n2^2*n3^2*n5 + 
      24*n2*n5^2 - 12*d*n2*n5^2 + 36*n2^2*n5^2 - 12*d*n2^2*n5^2 + 
      12*n2^3*n5^2 + 6*n2*n3*n5^2 + 6*n2^2*n3*n5^2)*
     j[p4, -1 + n1, 2 + n2, -1 + n3, 1, 1 + n5, 0, -1, -1, 1, 1, 1, 1, 1, 1])/
    ((-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((-336*n2 + 400*d*n2 - 148*d^2*n2 + 16*d^3*n2 - 
      200*n1*n2 + 152*d*n1*n2 - 26*d^2*n1*n2 - 548*n2^2 + 532*d*n2^2 - 
      161*d^2*n2^2 + 16*d^3*n2^2 - 302*n1*n2^2 + 179*d*n1*n2^2 - 
      26*d^2*n1*n2^2 - 222*n2^3 + 123*d*n2^3 - 13*d^2*n2^3 - 103*n1*n2^3 + 
      27*d*n1*n2^3 - 4*n2^4 - 9*d*n2^4 - n1*n2^4 + 6*n2^5 - 112*n2*n3 + 
      58*d*n2*n3 - d^2*n2*n3 - 56*n1*n2*n3 + 16*d*n1*n2*n3 - 100*n2^2*n3 + 
      31*d*n2^2*n3 - d^2*n2^2*n3 - 59*n1*n2^2*n3 + 16*d*n1*n2^2*n3 + 
      33*n2^3*n3 - 27*d*n2^3*n3 - 3*n1*n2^3*n3 + 21*n2^4*n3 + 16*n2*n3^2 - 
      15*d*n2*n3^2 - 2*n1*n2*n3^2 + 37*n2^2*n3^2 - 15*d*n2^2*n3^2 - 
      2*n1*n2^2*n3^2 + 21*n2^3*n3^2 + 6*n2*n3^3 + 6*n2^2*n3^3 - 208*n2*n5 + 
      184*d*n2*n5 - 40*d^2*n2*n5 - 48*n1*n2*n5 + 24*d*n1*n2*n5 - 
      342*n2^2*n5 + 239*d*n2^2*n5 - 40*d^2*n2^2*n5 - 72*n1*n2^2*n5 + 
      24*d*n1*n2^2*n5 - 149*n2^3*n5 + 55*d*n2^3*n5 - 24*n1*n2^3*n5 - 
      15*n2^4*n5 - 86*n2*n3*n5 + 37*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 
      110*n2^2*n3*n5 + 37*d*n2^2*n3*n5 - 12*n1*n2^2*n3*n5 - 24*n2^3*n3*n5 - 
      9*n2*n3^2*n5 - 9*n2^2*n3^2*n5 - 24*n2*n5^2 + 12*d*n2*n5^2 - 
      36*n2^2*n5^2 + 12*d*n2^2*n5^2 - 12*n2^3*n5^2 - 6*n2*n3*n5^2 - 
      6*n2^2*n3*n5^2)*j[p4, -1 + n1, 2 + n2, -1 + n3, 1, 1 + n5, 0, 0, -2, 1, 
      1, 1, 1, 1, 1])/((-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((-352*n2 + 424*d*n2 - 160*d^2*n2 + 18*d^3*n2 - 
      208*n1*n2 + 160*d*n1*n2 - 28*d^2*n1*n2 - 576*n2^2 + 568*d*n2^2 - 
      176*d^2*n2^2 + 18*d^3*n2^2 - 316*n1*n2^2 + 190*d*n1*n2^2 - 
      28*d^2*n1*n2^2 - 236*n2^3 + 136*d*n2^3 - 16*d^2*n2^3 - 110*n1*n2^3 + 
      30*d*n1*n2^3 - 6*n2^4 - 8*d*n2^4 - 2*n1*n2^4 + 6*n2^5 - 128*n2*n3 + 
      74*d*n2*n3 - 5*d^2*n2*n3 - 64*n1*n2*n3 + 20*d*n1*n2*n3 - 122*n2^2*n3 + 
      50*d*n2^2*n3 - 5*d^2*n2^2*n3 - 70*n1*n2^2*n3 + 20*d*n1*n2^2*n3 + 
      27*n2^3*n3 - 24*d*n2^3*n3 - 6*n1*n2^3*n3 + 21*n2^4*n3 + 12*n2*n3^2 - 
      13*d*n2*n3^2 - 4*n1*n2*n3^2 + 33*n2^2*n3^2 - 13*d*n2^2*n3^2 - 
      4*n1*n2^2*n3^2 + 21*n2^3*n3^2 + 6*n2*n3^3 + 6*n2^2*n3^3 - 216*n2*n5 + 
      192*d*n2*n5 - 42*d^2*n2*n5 - 48*n1*n2*n5 + 24*d*n1*n2*n5 - 
      356*n2^2*n5 + 250*d*n2^2*n5 - 42*d^2*n2^2*n5 - 72*n1*n2^2*n5 + 
      24*d*n1*n2^2*n5 - 156*n2^3*n5 + 58*d*n2^3*n5 - 24*n1*n2^3*n5 - 
      16*n2^4*n5 - 94*n2*n3*n5 + 41*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 
      121*n2^2*n3*n5 + 41*d*n2^2*n3*n5 - 12*n1*n2^2*n3*n5 - 27*n2^3*n3*n5 - 
      11*n2*n3^2*n5 - 11*n2^2*n3^2*n5 - 24*n2*n5^2 + 12*d*n2*n5^2 - 
      36*n2^2*n5^2 + 12*d*n2^2*n5^2 - 12*n2^3*n5^2 - 6*n2*n3*n5^2 - 
      6*n2^2*n3*n5^2)*j[p4, -1 + n1, 2 + n2, n3, 1, n5, 0, -1, -1, 1, 1, 1, 
      1, 1, 1])/((-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((304*n2 - 352*d*n2 + 124*d^2*n2 - 12*d^3*n2 + 
      184*n1*n2 - 136*d*n1*n2 + 22*d^2*n1*n2 + 492*n2^2 - 460*d*n2^2 + 
      131*d^2*n2^2 - 12*d^3*n2^2 + 274*n1*n2^2 - 157*d*n1*n2^2 + 
      22*d^2*n1*n2^2 + 194*n2^3 - 97*d*n2^3 + 7*d^2*n2^3 + 89*n1*n2^3 - 
      21*d*n1*n2^3 + 11*d*n2^4 - n1*n2^4 - 6*n2^5 + 80*n2*n3 - 26*d*n2*n3 - 
      7*d^2*n2*n3 + 40*n1*n2*n3 - 8*d*n1*n2*n3 + 56*n2^2*n3 + 7*d*n2^2*n3 - 
      7*d^2*n2^2*n3 + 37*n1*n2^2*n3 - 8*d*n1*n2^2*n3 - 45*n2^3*n3 + 
      33*d*n2^3*n3 - 3*n1*n2^3*n3 - 21*n2^4*n3 - 24*n2*n3^2 + 19*d*n2*n3^2 - 
      2*n1*n2*n3^2 - 45*n2^2*n3^2 + 19*d*n2^2*n3^2 - 2*n1*n2^2*n3^2 - 
      21*n2^3*n3^2 - 6*n2*n3^3 - 6*n2^2*n3^3 + 192*n2*n5 - 168*d*n2*n5 + 
      36*d^2*n2*n5 + 48*n1*n2*n5 - 24*d*n1*n2*n5 + 314*n2^2*n5 - 
      217*d*n2^2*n5 + 36*d^2*n2^2*n5 + 72*n1*n2^2*n5 - 24*d*n1*n2^2*n5 + 
      135*n2^3*n5 - 49*d*n2^3*n5 + 24*n1*n2^3*n5 + 13*n2^4*n5 + 70*n2*n3*n5 - 
      29*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 88*n2^2*n3*n5 - 29*d*n2^2*n3*n5 + 
      12*n1*n2^2*n3*n5 + 18*n2^3*n3*n5 + 5*n2*n3^2*n5 + 5*n2^2*n3^2*n5 + 
      24*n2*n5^2 - 12*d*n2*n5^2 + 36*n2^2*n5^2 - 12*d*n2^2*n5^2 + 
      12*n2^3*n5^2 + 6*n2*n3*n5^2 + 6*n2^2*n3*n5^2)*
     j[p4, -1 + n1, 2 + n2, n3, 1, n5, 0, 0, -2, 1, 1, 1, 1, 1, 1])/
    ((-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((-304*n2 + 352*d*n2 - 124*d^2*n2 + 12*d^3*n2 - 
      184*n1*n2 + 136*d*n1*n2 - 22*d^2*n1*n2 - 492*n2^2 + 460*d*n2^2 - 
      131*d^2*n2^2 + 12*d^3*n2^2 - 274*n1*n2^2 + 157*d*n1*n2^2 - 
      22*d^2*n1*n2^2 - 194*n2^3 + 97*d*n2^3 - 7*d^2*n2^3 - 89*n1*n2^3 + 
      21*d*n1*n2^3 - 11*d*n2^4 + n1*n2^4 + 6*n2^5 - 80*n2*n3 + 26*d*n2*n3 + 
      7*d^2*n2*n3 - 40*n1*n2*n3 + 8*d*n1*n2*n3 - 56*n2^2*n3 - 7*d*n2^2*n3 + 
      7*d^2*n2^2*n3 - 37*n1*n2^2*n3 + 8*d*n1*n2^2*n3 + 45*n2^3*n3 - 
      33*d*n2^3*n3 + 3*n1*n2^3*n3 + 21*n2^4*n3 + 24*n2*n3^2 - 19*d*n2*n3^2 + 
      2*n1*n2*n3^2 + 45*n2^2*n3^2 - 19*d*n2^2*n3^2 + 2*n1*n2^2*n3^2 + 
      21*n2^3*n3^2 + 6*n2*n3^3 + 6*n2^2*n3^3 - 192*n2*n5 + 168*d*n2*n5 - 
      36*d^2*n2*n5 - 48*n1*n2*n5 + 24*d*n1*n2*n5 - 314*n2^2*n5 + 
      217*d*n2^2*n5 - 36*d^2*n2^2*n5 - 72*n1*n2^2*n5 + 24*d*n1*n2^2*n5 - 
      135*n2^3*n5 + 49*d*n2^3*n5 - 24*n1*n2^3*n5 - 13*n2^4*n5 - 70*n2*n3*n5 + 
      29*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 88*n2^2*n3*n5 + 29*d*n2^2*n3*n5 - 
      12*n1*n2^2*n3*n5 - 18*n2^3*n3*n5 - 5*n2*n3^2*n5 - 5*n2^2*n3^2*n5 - 
      24*n2*n5^2 + 12*d*n2*n5^2 - 36*n2^2*n5^2 + 12*d*n2^2*n5^2 - 
      12*n2^3*n5^2 - 6*n2*n3*n5^2 - 6*n2^2*n3*n5^2)*
     j[p4, -1 + n1, 2 + n2, n3, 1, n5, 0, 0, -1, 1, 1, 1, 0, 1, 1])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((304*n2 - 352*d*n2 + 124*d^2*n2 - 12*d^3*n2 + 
      184*n1*n2 - 136*d*n1*n2 + 22*d^2*n1*n2 + 492*n2^2 - 460*d*n2^2 + 
      131*d^2*n2^2 - 12*d^3*n2^2 + 274*n1*n2^2 - 157*d*n1*n2^2 + 
      22*d^2*n1*n2^2 + 194*n2^3 - 97*d*n2^3 + 7*d^2*n2^3 + 89*n1*n2^3 - 
      21*d*n1*n2^3 + 11*d*n2^4 - n1*n2^4 - 6*n2^5 + 80*n2*n3 - 26*d*n2*n3 - 
      7*d^2*n2*n3 + 40*n1*n2*n3 - 8*d*n1*n2*n3 + 56*n2^2*n3 + 7*d*n2^2*n3 - 
      7*d^2*n2^2*n3 + 37*n1*n2^2*n3 - 8*d*n1*n2^2*n3 - 45*n2^3*n3 + 
      33*d*n2^3*n3 - 3*n1*n2^3*n3 - 21*n2^4*n3 - 24*n2*n3^2 + 19*d*n2*n3^2 - 
      2*n1*n2*n3^2 - 45*n2^2*n3^2 + 19*d*n2^2*n3^2 - 2*n1*n2^2*n3^2 - 
      21*n2^3*n3^2 - 6*n2*n3^3 - 6*n2^2*n3^3 + 192*n2*n5 - 168*d*n2*n5 + 
      36*d^2*n2*n5 + 48*n1*n2*n5 - 24*d*n1*n2*n5 + 314*n2^2*n5 - 
      217*d*n2^2*n5 + 36*d^2*n2^2*n5 + 72*n1*n2^2*n5 - 24*d*n1*n2^2*n5 + 
      135*n2^3*n5 - 49*d*n2^3*n5 + 24*n1*n2^3*n5 + 13*n2^4*n5 + 70*n2*n3*n5 - 
      29*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 88*n2^2*n3*n5 - 29*d*n2^2*n3*n5 + 
      12*n1*n2^2*n3*n5 + 18*n2^3*n3*n5 + 5*n2*n3^2*n5 + 5*n2^2*n3^2*n5 + 
      24*n2*n5^2 - 12*d*n2*n5^2 + 36*n2^2*n5^2 - 12*d*n2^2*n5^2 + 
      12*n2^3*n5^2 + 6*n2*n3*n5^2 + 6*n2^2*n3*n5^2)*
     j[p4, -1 + n1, 2 + n2, n3, 1, n5, 0, 0, -1, 1, 1, 1, 1, 0, 1])/
    ((-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((-320*n2 + 376*d*n2 - 136*d^2*n2 + 14*d^3*n2 - 
      192*n1*n2 + 144*d*n1*n2 - 24*d^2*n1*n2 - 520*n2^2 + 496*d*n2^2 - 
      146*d^2*n2^2 + 14*d^3*n2^2 - 288*n1*n2^2 + 168*d*n1*n2^2 - 
      24*d^2*n1*n2^2 - 208*n2^3 + 110*d*n2^3 - 10*d^2*n2^3 - 96*n1*n2^3 + 
      24*d*n1*n2^3 - 2*n2^4 - 10*d*n2^4 + 6*n2^5 - 96*n2*n3 + 42*d*n2*n3 + 
      3*d^2*n2*n3 - 48*n1*n2*n3 + 12*d*n1*n2*n3 - 78*n2^2*n3 + 12*d*n2^2*n3 + 
      3*d^2*n2^2*n3 - 48*n1*n2^2*n3 + 12*d*n1*n2^2*n3 + 39*n2^3*n3 - 
      30*d*n2^3*n3 + 21*n2^4*n3 + 20*n2*n3^2 - 17*d*n2*n3^2 + 41*n2^2*n3^2 - 
      17*d*n2^2*n3^2 + 21*n2^3*n3^2 + 6*n2*n3^3 + 6*n2^2*n3^3 - 200*n2*n5 + 
      176*d*n2*n5 - 38*d^2*n2*n5 - 48*n1*n2*n5 + 24*d*n1*n2*n5 - 
      328*n2^2*n5 + 228*d*n2^2*n5 - 38*d^2*n2^2*n5 - 72*n1*n2^2*n5 + 
      24*d*n1*n2^2*n5 - 142*n2^3*n5 + 52*d*n2^3*n5 - 24*n1*n2^3*n5 - 
      14*n2^4*n5 - 78*n2*n3*n5 + 33*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 
      99*n2^2*n3*n5 + 33*d*n2^2*n3*n5 - 12*n1*n2^2*n3*n5 - 21*n2^3*n3*n5 - 
      7*n2*n3^2*n5 - 7*n2^2*n3^2*n5 - 24*n2*n5^2 + 12*d*n2*n5^2 - 
      36*n2^2*n5^2 + 12*d*n2^2*n5^2 - 12*n2^3*n5^2 - 6*n2*n3*n5^2 - 
      6*n2^2*n3*n5^2)*j[p4, -1 + n1, 2 + n2, n3, 1, 1 + n5, -1, -1, -1, 1, 1, 
      1, 1, 1, 1])/((-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((336*n2 - 400*d*n2 + 148*d^2*n2 - 16*d^3*n2 + 
      200*n1*n2 - 152*d*n1*n2 + 26*d^2*n1*n2 + 548*n2^2 - 532*d*n2^2 + 
      161*d^2*n2^2 - 16*d^3*n2^2 + 302*n1*n2^2 - 179*d*n1*n2^2 + 
      26*d^2*n1*n2^2 + 222*n2^3 - 123*d*n2^3 + 13*d^2*n2^3 + 103*n1*n2^3 - 
      27*d*n1*n2^3 + 4*n2^4 + 9*d*n2^4 + n1*n2^4 - 6*n2^5 + 112*n2*n3 - 
      58*d*n2*n3 + d^2*n2*n3 + 56*n1*n2*n3 - 16*d*n1*n2*n3 + 100*n2^2*n3 - 
      31*d*n2^2*n3 + d^2*n2^2*n3 + 59*n1*n2^2*n3 - 16*d*n1*n2^2*n3 - 
      33*n2^3*n3 + 27*d*n2^3*n3 + 3*n1*n2^3*n3 - 21*n2^4*n3 - 16*n2*n3^2 + 
      15*d*n2*n3^2 + 2*n1*n2*n3^2 - 37*n2^2*n3^2 + 15*d*n2^2*n3^2 + 
      2*n1*n2^2*n3^2 - 21*n2^3*n3^2 - 6*n2*n3^3 - 6*n2^2*n3^3 + 208*n2*n5 - 
      184*d*n2*n5 + 40*d^2*n2*n5 + 48*n1*n2*n5 - 24*d*n1*n2*n5 + 
      342*n2^2*n5 - 239*d*n2^2*n5 + 40*d^2*n2^2*n5 + 72*n1*n2^2*n5 - 
      24*d*n1*n2^2*n5 + 149*n2^3*n5 - 55*d*n2^3*n5 + 24*n1*n2^3*n5 + 
      15*n2^4*n5 + 86*n2*n3*n5 - 37*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 
      110*n2^2*n3*n5 - 37*d*n2^2*n3*n5 + 12*n1*n2^2*n3*n5 + 24*n2^3*n3*n5 + 
      9*n2*n3^2*n5 + 9*n2^2*n3^2*n5 + 24*n2*n5^2 - 12*d*n2*n5^2 + 
      36*n2^2*n5^2 - 12*d*n2^2*n5^2 + 12*n2^3*n5^2 + 6*n2*n3*n5^2 + 
      6*n2^2*n3*n5^2)*j[p4, -1 + n1, 2 + n2, n3, 1, 1 + n5, -1, 0, -2, 1, 1, 
      1, 1, 1, 1])/((-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((336*n2 - 400*d*n2 + 148*d^2*n2 - 16*d^3*n2 + 
      200*n1*n2 - 152*d*n1*n2 + 26*d^2*n1*n2 + 548*n2^2 - 532*d*n2^2 + 
      161*d^2*n2^2 - 16*d^3*n2^2 + 302*n1*n2^2 - 179*d*n1*n2^2 + 
      26*d^2*n1*n2^2 + 222*n2^3 - 123*d*n2^3 + 13*d^2*n2^3 + 103*n1*n2^3 - 
      27*d*n1*n2^3 + 4*n2^4 + 9*d*n2^4 + n1*n2^4 - 6*n2^5 + 112*n2*n3 - 
      58*d*n2*n3 + d^2*n2*n3 + 56*n1*n2*n3 - 16*d*n1*n2*n3 + 100*n2^2*n3 - 
      31*d*n2^2*n3 + d^2*n2^2*n3 + 59*n1*n2^2*n3 - 16*d*n1*n2^2*n3 - 
      33*n2^3*n3 + 27*d*n2^3*n3 + 3*n1*n2^3*n3 - 21*n2^4*n3 - 16*n2*n3^2 + 
      15*d*n2*n3^2 + 2*n1*n2*n3^2 - 37*n2^2*n3^2 + 15*d*n2^2*n3^2 + 
      2*n1*n2^2*n3^2 - 21*n2^3*n3^2 - 6*n2*n3^3 - 6*n2^2*n3^3 + 208*n2*n5 - 
      184*d*n2*n5 + 40*d^2*n2*n5 + 48*n1*n2*n5 - 24*d*n1*n2*n5 + 
      342*n2^2*n5 - 239*d*n2^2*n5 + 40*d^2*n2^2*n5 + 72*n1*n2^2*n5 - 
      24*d*n1*n2^2*n5 + 149*n2^3*n5 - 55*d*n2^3*n5 + 24*n1*n2^3*n5 + 
      15*n2^4*n5 + 86*n2*n3*n5 - 37*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 
      110*n2^2*n3*n5 - 37*d*n2^2*n3*n5 + 12*n1*n2^2*n3*n5 + 24*n2^3*n3*n5 + 
      9*n2*n3^2*n5 + 9*n2^2*n3^2*n5 + 24*n2*n5^2 - 12*d*n2*n5^2 + 
      36*n2^2*n5^2 - 12*d*n2^2*n5^2 + 12*n2^3*n5^2 + 6*n2*n3*n5^2 + 
      6*n2^2*n3*n5^2)*j[p4, -1 + n1, 2 + n2, n3, 1, 1 + n5, -1, 0, -1, 1, 1, 
      1, 0, 1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((-336*n2 + 400*d*n2 - 148*d^2*n2 + 16*d^3*n2 - 
      200*n1*n2 + 152*d*n1*n2 - 26*d^2*n1*n2 - 548*n2^2 + 532*d*n2^2 - 
      161*d^2*n2^2 + 16*d^3*n2^2 - 302*n1*n2^2 + 179*d*n1*n2^2 - 
      26*d^2*n1*n2^2 - 222*n2^3 + 123*d*n2^3 - 13*d^2*n2^3 - 103*n1*n2^3 + 
      27*d*n1*n2^3 - 4*n2^4 - 9*d*n2^4 - n1*n2^4 + 6*n2^5 - 112*n2*n3 + 
      58*d*n2*n3 - d^2*n2*n3 - 56*n1*n2*n3 + 16*d*n1*n2*n3 - 100*n2^2*n3 + 
      31*d*n2^2*n3 - d^2*n2^2*n3 - 59*n1*n2^2*n3 + 16*d*n1*n2^2*n3 + 
      33*n2^3*n3 - 27*d*n2^3*n3 - 3*n1*n2^3*n3 + 21*n2^4*n3 + 16*n2*n3^2 - 
      15*d*n2*n3^2 - 2*n1*n2*n3^2 + 37*n2^2*n3^2 - 15*d*n2^2*n3^2 - 
      2*n1*n2^2*n3^2 + 21*n2^3*n3^2 + 6*n2*n3^3 + 6*n2^2*n3^3 - 208*n2*n5 + 
      184*d*n2*n5 - 40*d^2*n2*n5 - 48*n1*n2*n5 + 24*d*n1*n2*n5 - 
      342*n2^2*n5 + 239*d*n2^2*n5 - 40*d^2*n2^2*n5 - 72*n1*n2^2*n5 + 
      24*d*n1*n2^2*n5 - 149*n2^3*n5 + 55*d*n2^3*n5 - 24*n1*n2^3*n5 - 
      15*n2^4*n5 - 86*n2*n3*n5 + 37*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 
      110*n2^2*n3*n5 + 37*d*n2^2*n3*n5 - 12*n1*n2^2*n3*n5 - 24*n2^3*n3*n5 - 
      9*n2*n3^2*n5 - 9*n2^2*n3^2*n5 - 24*n2*n5^2 + 12*d*n2*n5^2 - 
      36*n2^2*n5^2 + 12*d*n2^2*n5^2 - 12*n2^3*n5^2 - 6*n2*n3*n5^2 - 
      6*n2^2*n3*n5^2)*j[p4, -1 + n1, 2 + n2, n3, 1, 1 + n5, -1, 0, -1, 1, 1, 
      1, 1, 0, 1])/((-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((-320*n2 + 376*d*n2 - 136*d^2*n2 + 14*d^3*n2 - 
      192*n1*n2 + 144*d*n1*n2 - 24*d^2*n1*n2 - 520*n2^2 + 496*d*n2^2 - 
      146*d^2*n2^2 + 14*d^3*n2^2 - 288*n1*n2^2 + 168*d*n1*n2^2 - 
      24*d^2*n1*n2^2 - 208*n2^3 + 110*d*n2^3 - 10*d^2*n2^3 - 96*n1*n2^3 + 
      24*d*n1*n2^3 - 2*n2^4 - 10*d*n2^4 + 6*n2^5 - 96*n2*n3 + 42*d*n2*n3 + 
      3*d^2*n2*n3 - 48*n1*n2*n3 + 12*d*n1*n2*n3 - 78*n2^2*n3 + 12*d*n2^2*n3 + 
      3*d^2*n2^2*n3 - 48*n1*n2^2*n3 + 12*d*n1*n2^2*n3 + 39*n2^3*n3 - 
      30*d*n2^3*n3 + 21*n2^4*n3 + 20*n2*n3^2 - 17*d*n2*n3^2 + 41*n2^2*n3^2 - 
      17*d*n2^2*n3^2 + 21*n2^3*n3^2 + 6*n2*n3^3 + 6*n2^2*n3^3 - 200*n2*n5 + 
      176*d*n2*n5 - 38*d^2*n2*n5 - 48*n1*n2*n5 + 24*d*n1*n2*n5 - 
      328*n2^2*n5 + 228*d*n2^2*n5 - 38*d^2*n2^2*n5 - 72*n1*n2^2*n5 + 
      24*d*n1*n2^2*n5 - 142*n2^3*n5 + 52*d*n2^3*n5 - 24*n1*n2^3*n5 - 
      14*n2^4*n5 - 78*n2*n3*n5 + 33*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 
      99*n2^2*n3*n5 + 33*d*n2^2*n3*n5 - 12*n1*n2^2*n3*n5 - 21*n2^3*n3*n5 - 
      7*n2*n3^2*n5 - 7*n2^2*n3^2*n5 - 24*n2*n5^2 + 12*d*n2*n5^2 - 
      36*n2^2*n5^2 + 12*d*n2^2*n5^2 - 12*n2^3*n5^2 - 6*n2*n3*n5^2 - 
      6*n2^2*n3*n5^2)*j[p4, -1 + n1, 2 + n2, n3, 1, 1 + n5, 0, -2, -1, 1, 1, 
      1, 1, 1, 1])/((-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((-4*n2 + 2*d*n2 - 5*n2^2 + 2*d*n2^2 - n2^3 - 
      2*n2*n3 - 2*n2^2*n3)*j[p4, -1 + n1, 2 + n2, n3, 1, 1 + n5, 0, -1, -2, 
      1, 1, 1, 1, 1, 1])/((-1 + n1)*(n2 - n3)*(-4 + d - n5)) + 
   ((304*n2 - 352*d*n2 + 124*d^2*n2 - 12*d^3*n2 + 184*n1*n2 - 136*d*n1*n2 + 
      22*d^2*n1*n2 + 492*n2^2 - 460*d*n2^2 + 131*d^2*n2^2 - 12*d^3*n2^2 + 
      274*n1*n2^2 - 157*d*n1*n2^2 + 22*d^2*n1*n2^2 + 194*n2^3 - 97*d*n2^3 + 
      7*d^2*n2^3 + 89*n1*n2^3 - 21*d*n1*n2^3 + 11*d*n2^4 - n1*n2^4 - 6*n2^5 + 
      80*n2*n3 - 26*d*n2*n3 - 7*d^2*n2*n3 + 40*n1*n2*n3 - 8*d*n1*n2*n3 + 
      56*n2^2*n3 + 7*d*n2^2*n3 - 7*d^2*n2^2*n3 + 37*n1*n2^2*n3 - 
      8*d*n1*n2^2*n3 - 45*n2^3*n3 + 33*d*n2^3*n3 - 3*n1*n2^3*n3 - 
      21*n2^4*n3 - 24*n2*n3^2 + 19*d*n2*n3^2 - 2*n1*n2*n3^2 - 45*n2^2*n3^2 + 
      19*d*n2^2*n3^2 - 2*n1*n2^2*n3^2 - 21*n2^3*n3^2 - 6*n2*n3^3 - 
      6*n2^2*n3^3 + 192*n2*n5 - 168*d*n2*n5 + 36*d^2*n2*n5 + 48*n1*n2*n5 - 
      24*d*n1*n2*n5 + 314*n2^2*n5 - 217*d*n2^2*n5 + 36*d^2*n2^2*n5 + 
      72*n1*n2^2*n5 - 24*d*n1*n2^2*n5 + 135*n2^3*n5 - 49*d*n2^3*n5 + 
      24*n1*n2^3*n5 + 13*n2^4*n5 + 70*n2*n3*n5 - 29*d*n2*n3*n5 + 
      12*n1*n2*n3*n5 + 88*n2^2*n3*n5 - 29*d*n2^2*n3*n5 + 12*n1*n2^2*n3*n5 + 
      18*n2^3*n3*n5 + 5*n2*n3^2*n5 + 5*n2^2*n3^2*n5 + 24*n2*n5^2 - 
      12*d*n2*n5^2 + 36*n2^2*n5^2 - 12*d*n2^2*n5^2 + 12*n2^3*n5^2 + 
      6*n2*n3*n5^2 + 6*n2^2*n3*n5^2)*j[p4, -1 + n1, 2 + n2, n3, 1, 1 + n5, 0, 
      -1, -1, 1, 1, 1, 0, 1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(2 - d + n1 + n5)) + 
   ((-304*n2 + 352*d*n2 - 124*d^2*n2 + 12*d^3*n2 - 184*n1*n2 + 136*d*n1*n2 - 
      22*d^2*n1*n2 - 492*n2^2 + 460*d*n2^2 - 131*d^2*n2^2 + 12*d^3*n2^2 - 
      274*n1*n2^2 + 157*d*n1*n2^2 - 22*d^2*n1*n2^2 - 194*n2^3 + 97*d*n2^3 - 
      7*d^2*n2^3 - 89*n1*n2^3 + 21*d*n1*n2^3 - 11*d*n2^4 + n1*n2^4 + 6*n2^5 - 
      80*n2*n3 + 26*d*n2*n3 + 7*d^2*n2*n3 - 40*n1*n2*n3 + 8*d*n1*n2*n3 - 
      56*n2^2*n3 - 7*d*n2^2*n3 + 7*d^2*n2^2*n3 - 37*n1*n2^2*n3 + 
      8*d*n1*n2^2*n3 + 45*n2^3*n3 - 33*d*n2^3*n3 + 3*n1*n2^3*n3 + 
      21*n2^4*n3 + 24*n2*n3^2 - 19*d*n2*n3^2 + 2*n1*n2*n3^2 + 45*n2^2*n3^2 - 
      19*d*n2^2*n3^2 + 2*n1*n2^2*n3^2 + 21*n2^3*n3^2 + 6*n2*n3^3 + 
      6*n2^2*n3^3 - 192*n2*n5 + 168*d*n2*n5 - 36*d^2*n2*n5 - 48*n1*n2*n5 + 
      24*d*n1*n2*n5 - 314*n2^2*n5 + 217*d*n2^2*n5 - 36*d^2*n2^2*n5 - 
      72*n1*n2^2*n5 + 24*d*n1*n2^2*n5 - 135*n2^3*n5 + 49*d*n2^3*n5 - 
      24*n1*n2^3*n5 - 13*n2^4*n5 - 70*n2*n3*n5 + 29*d*n2*n3*n5 - 
      12*n1*n2*n3*n5 - 88*n2^2*n3*n5 + 29*d*n2^2*n3*n5 - 12*n1*n2^2*n3*n5 - 
      18*n2^3*n3*n5 - 5*n2*n3^2*n5 - 5*n2^2*n3^2*n5 - 24*n2*n5^2 + 
      12*d*n2*n5^2 - 36*n2^2*n5^2 + 12*d*n2^2*n5^2 - 12*n2^3*n5^2 - 
      6*n2*n3*n5^2 - 6*n2^2*n3*n5^2)*j[p4, -1 + n1, 2 + n2, n3, 1, 1 + n5, 0, 
      -1, -1, 1, 1, 1, 1, 0, 1])/((-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(2 - d + n1 + n5)) + 
   ((336*n2 - 400*d*n2 + 148*d^2*n2 - 16*d^3*n2 + 200*n1*n2 - 152*d*n1*n2 + 
      26*d^2*n1*n2 + 548*n2^2 - 532*d*n2^2 + 161*d^2*n2^2 - 16*d^3*n2^2 + 
      302*n1*n2^2 - 179*d*n1*n2^2 + 26*d^2*n1*n2^2 + 222*n2^3 - 123*d*n2^3 + 
      13*d^2*n2^3 + 103*n1*n2^3 - 27*d*n1*n2^3 + 4*n2^4 + 9*d*n2^4 + 
      n1*n2^4 - 6*n2^5 + 112*n2*n3 - 58*d*n2*n3 + d^2*n2*n3 + 56*n1*n2*n3 - 
      16*d*n1*n2*n3 + 100*n2^2*n3 - 31*d*n2^2*n3 + d^2*n2^2*n3 + 
      59*n1*n2^2*n3 - 16*d*n1*n2^2*n3 - 33*n2^3*n3 + 27*d*n2^3*n3 + 
      3*n1*n2^3*n3 - 21*n2^4*n3 - 16*n2*n3^2 + 15*d*n2*n3^2 + 2*n1*n2*n3^2 - 
      37*n2^2*n3^2 + 15*d*n2^2*n3^2 + 2*n1*n2^2*n3^2 - 21*n2^3*n3^2 - 
      6*n2*n3^3 - 6*n2^2*n3^3 + 208*n2*n5 - 184*d*n2*n5 + 40*d^2*n2*n5 + 
      48*n1*n2*n5 - 24*d*n1*n2*n5 + 342*n2^2*n5 - 239*d*n2^2*n5 + 
      40*d^2*n2^2*n5 + 72*n1*n2^2*n5 - 24*d*n1*n2^2*n5 + 149*n2^3*n5 - 
      55*d*n2^3*n5 + 24*n1*n2^3*n5 + 15*n2^4*n5 + 86*n2*n3*n5 - 
      37*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 110*n2^2*n3*n5 - 37*d*n2^2*n3*n5 + 
      12*n1*n2^2*n3*n5 + 24*n2^3*n3*n5 + 9*n2*n3^2*n5 + 9*n2^2*n3^2*n5 + 
      24*n2*n5^2 - 12*d*n2*n5^2 + 36*n2^2*n5^2 - 12*d*n2^2*n5^2 + 
      12*n2^3*n5^2 + 6*n2*n3*n5^2 + 6*n2^2*n3*n5^2)*
     j[p4, -1 + n1, 2 + n2, n3, 1, 1 + n5, 0, 0, -3, 1, 1, 1, 1, 1, 1])/
    ((-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((-336*n2 + 400*d*n2 - 148*d^2*n2 + 16*d^3*n2 - 
      200*n1*n2 + 152*d*n1*n2 - 26*d^2*n1*n2 - 548*n2^2 + 532*d*n2^2 - 
      161*d^2*n2^2 + 16*d^3*n2^2 - 302*n1*n2^2 + 179*d*n1*n2^2 - 
      26*d^2*n1*n2^2 - 222*n2^3 + 123*d*n2^3 - 13*d^2*n2^3 - 103*n1*n2^3 + 
      27*d*n1*n2^3 - 4*n2^4 - 9*d*n2^4 - n1*n2^4 + 6*n2^5 - 112*n2*n3 + 
      58*d*n2*n3 - d^2*n2*n3 - 56*n1*n2*n3 + 16*d*n1*n2*n3 - 100*n2^2*n3 + 
      31*d*n2^2*n3 - d^2*n2^2*n3 - 59*n1*n2^2*n3 + 16*d*n1*n2^2*n3 + 
      33*n2^3*n3 - 27*d*n2^3*n3 - 3*n1*n2^3*n3 + 21*n2^4*n3 + 16*n2*n3^2 - 
      15*d*n2*n3^2 - 2*n1*n2*n3^2 + 37*n2^2*n3^2 - 15*d*n2^2*n3^2 - 
      2*n1*n2^2*n3^2 + 21*n2^3*n3^2 + 6*n2*n3^3 + 6*n2^2*n3^3 - 208*n2*n5 + 
      184*d*n2*n5 - 40*d^2*n2*n5 - 48*n1*n2*n5 + 24*d*n1*n2*n5 - 
      342*n2^2*n5 + 239*d*n2^2*n5 - 40*d^2*n2^2*n5 - 72*n1*n2^2*n5 + 
      24*d*n1*n2^2*n5 - 149*n2^3*n5 + 55*d*n2^3*n5 - 24*n1*n2^3*n5 - 
      15*n2^4*n5 - 86*n2*n3*n5 + 37*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 
      110*n2^2*n3*n5 + 37*d*n2^2*n3*n5 - 12*n1*n2^2*n3*n5 - 24*n2^3*n3*n5 - 
      9*n2*n3^2*n5 - 9*n2^2*n3^2*n5 - 24*n2*n5^2 + 12*d*n2*n5^2 - 
      36*n2^2*n5^2 + 12*d*n2^2*n5^2 - 12*n2^3*n5^2 - 6*n2*n3*n5^2 - 
      6*n2^2*n3*n5^2)*j[p4, -1 + n1, 2 + n2, n3, 1, 1 + n5, 0, 0, -2, 1, 1, 
      1, 0, 1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((336*n2 - 400*d*n2 + 148*d^2*n2 - 16*d^3*n2 + 
      200*n1*n2 - 152*d*n1*n2 + 26*d^2*n1*n2 + 548*n2^2 - 532*d*n2^2 + 
      161*d^2*n2^2 - 16*d^3*n2^2 + 302*n1*n2^2 - 179*d*n1*n2^2 + 
      26*d^2*n1*n2^2 + 222*n2^3 - 123*d*n2^3 + 13*d^2*n2^3 + 103*n1*n2^3 - 
      27*d*n1*n2^3 + 4*n2^4 + 9*d*n2^4 + n1*n2^4 - 6*n2^5 + 112*n2*n3 - 
      58*d*n2*n3 + d^2*n2*n3 + 56*n1*n2*n3 - 16*d*n1*n2*n3 + 100*n2^2*n3 - 
      31*d*n2^2*n3 + d^2*n2^2*n3 + 59*n1*n2^2*n3 - 16*d*n1*n2^2*n3 - 
      33*n2^3*n3 + 27*d*n2^3*n3 + 3*n1*n2^3*n3 - 21*n2^4*n3 - 16*n2*n3^2 + 
      15*d*n2*n3^2 + 2*n1*n2*n3^2 - 37*n2^2*n3^2 + 15*d*n2^2*n3^2 + 
      2*n1*n2^2*n3^2 - 21*n2^3*n3^2 - 6*n2*n3^3 - 6*n2^2*n3^3 + 208*n2*n5 - 
      184*d*n2*n5 + 40*d^2*n2*n5 + 48*n1*n2*n5 - 24*d*n1*n2*n5 + 
      342*n2^2*n5 - 239*d*n2^2*n5 + 40*d^2*n2^2*n5 + 72*n1*n2^2*n5 - 
      24*d*n1*n2^2*n5 + 149*n2^3*n5 - 55*d*n2^3*n5 + 24*n1*n2^3*n5 + 
      15*n2^4*n5 + 86*n2*n3*n5 - 37*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 
      110*n2^2*n3*n5 - 37*d*n2^2*n3*n5 + 12*n1*n2^2*n3*n5 + 24*n2^3*n3*n5 + 
      9*n2*n3^2*n5 + 9*n2^2*n3^2*n5 + 24*n2*n5^2 - 12*d*n2*n5^2 + 
      36*n2^2*n5^2 - 12*d*n2^2*n5^2 + 12*n2^3*n5^2 + 6*n2*n3*n5^2 + 
      6*n2^2*n3*n5^2)*j[p4, -1 + n1, 2 + n2, n3, 1, 1 + n5, 0, 0, -2, 1, 1, 
      1, 1, 0, 1])/((-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (2 - d + n1 + n5)) + ((8 - 4*d + 4*n1 - 2*d*n1 - 2*n2 + 3*d*n2 + n1*n2 - 
      2*n2^2 - 4*n3 + 3*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 8*n5 - 4*d*n5 + 
      3*n2*n5 + 3*n3*n5)*j[p4, n1, -1 + n2, n3, 1, 1 + n5, 0, 0, -1, 0, 1, 1, 
      1, 1, 2])/(2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((40 - 28*d + 4*d^2 + 4*n1 - 2*d*n1 + 14*n2 - d*n2 + n1*n2 - 2*n2^2 + 
      4*n3 + d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 16*n5 - 8*d*n5 + 7*n2*n5 + 
      5*n3*n5)*j[p4, n1, -1 + n2, n3, 1, 1 + n5, 0, 0, -1, 0, 2, 1, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-40 + 28*d - 4*d^2 - 4*n1 + 2*d*n1 - 14*n2 + d*n2 - n1*n2 + 2*n2^2 - 
      4*n3 - d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 16*n5 + 8*d*n5 - 7*n2*n5 - 
      5*n3*n5)*j[p4, n1, -1 + n2, n3, 1, 1 + n5, 0, 0, -1, 1, 1, 0, 2, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-32 + 20*d - 2*d^2 - 12*n2 + 2*n2^2 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      12*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, n1, -1 + n2, n3, 1, 1 + n5, 
      0, 0, -1, 1, 1, 1, 1, 0, 2])/((n2 - n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((48 - 72*d + 36*d^2 - 6*d^3 + 8*n1 - 8*d*n1 + 
      2*d^2*n1 + 52*n2 - 52*d*n2 + 13*d^2*n2 + 6*n1*n2 - 3*d*n1*n2 + 
      18*n2^2 - 9*d*n2^2 + n1*n2^2 + 2*n2^3 + 56*n3 - 56*d*n3 + 14*d^2*n3 + 
      8*n1*n3 - 4*d*n1*n3 + 40*n2*n3 - 20*d*n2*n3 + 3*n1*n2*n3 + 7*n2^2*n3 + 
      20*n3^2 - 10*d*n3^2 + 2*n1*n3^2 + 7*n2*n3^2 + 2*n3^3 + 8*n5 - 8*d*n5 + 
      2*d^2*n5 + 6*n2*n5 - 3*d*n2*n5 + n2^2*n5 + 8*n3*n5 - 4*d*n3*n5 + 
      3*n2*n3*n5 + 2*n3^2*n5)*j[p4, n1, -1 + n2, n3, 1, 1 + n5, 0, 0, -1, 1, 
      1, 1, 1, 1, 1])/((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-40 + 28*d - 4*d^2 - 4*n1 + 2*d*n1 - 14*n2 + d*n2 - n1*n2 + 2*n2^2 - 
      4*n3 - d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 16*n5 + 8*d*n5 - 7*n2*n5 - 
      5*n3*n5)*j[p4, n1, -1 + n2, n3, 1, 1 + n5, 0, 0, -1, 1, 1, 2, 0, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((112 - 160*d + 76*d^2 - 12*d^3 - 168*n1 + 120*d*n1 - 18*d^2*n1 + 204*n2 - 
      172*d*n2 + 35*d^2*n2 - 78*n1*n2 + 15*d*n1*n2 + 78*n2^2 - 25*d*n2^2 + 
      3*n1*n2^2 + 2*n2^3 + 208*n3 - 178*d*n3 + 37*d^2*n3 - 24*n1*n3 + 
      136*n2*n3 - 47*d*n2*n3 + 9*n1*n2*n3 + 7*n2^2*n3 + 56*n3^2 - 21*d*n3^2 + 
      6*n1*n3^2 + 7*n2*n3^2 + 2*n3^3 - 64*n5 + 40*d*n5 - 4*d^2*n5 - 
      48*n1*n5 + 24*d*n1*n5 + 2*n2*n5 - 13*d*n2*n5 - 24*n1*n2*n5 + 
      17*n2^2*n5 + 30*n3*n5 - 21*d*n3*n5 - 12*n1*n3*n5 + 30*n2*n3*n5 + 
      13*n3^2*n5 - 24*n5^2 + 12*d*n5^2 - 12*n2*n5^2 - 6*n3*n5^2)*
     j[p4, n1, -1 + n2, n3, 1, 1 + n5, 0, 0, -1, 1, 2, 0, 1, 1, 1])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((8 - 4*d + 4*n1 - 2*d*n1 - 2*n2 + 3*d*n2 + n1*n2 - 2*n2^2 - 4*n3 + 
      3*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 8*n5 - 4*d*n5 + 3*n2*n5 + 
      3*n3*n5)*j[p4, n1, -1 + n2, n3, 1, 1 + n5, 0, 0, -1, 2, 1, 1, 1, 1, 0])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((40 - 28*d + 4*d^2 + 4*n1 - 2*d*n1 + 14*n2 - d*n2 + n1*n2 - 2*n2^2 + 
      4*n3 + d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 16*n5 - 8*d*n5 + 7*n2*n5 + 
      5*n3*n5)*j[p4, n1, -1 + n2, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 0, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((136 - 100*d + 16*d^2 + 4*n1 - 2*d*n1 + 62*n2 - 13*d*n2 + n1*n2 - 
      2*n2^2 + 28*n3 - 5*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 40*n5 - 
      20*d*n5 + 19*n2*n5 + 11*n3*n5)*j[p4, n1, -1 + n2, n3, 1, 1 + n5, 0, 0, 
      0, 1, 1, 1, 0, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-136 + 100*d - 16*d^2 - 4*n1 + 2*d*n1 - 62*n2 + 13*d*n2 - n1*n2 + 
      2*n2^2 - 28*n3 + 5*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 40*n5 + 
      20*d*n5 - 19*n2*n5 - 11*n3*n5)*j[p4, n1, -1 + n2, n3, 1, 1 + n5, 0, 0, 
      0, 1, 1, 1, 1, 0, 1])/(2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((176 - 192*d + 60*d^2 - 4*d^3 + 184*n1 - 136*d*n1 + 22*d^2*n1 + 60*n2 - 
      12*d*n2 - 9*d^2*n2 + 90*n1*n2 - 21*d*n1*n2 - 26*n2^2 + 19*d*n2^2 - 
      n1*n2^2 - 6*n2^3 - 16*n3 + 46*d*n3 - 19*d^2*n3 + 40*n1*n3 - 8*d*n1*n3 - 
      72*n2*n3 + 45*d*n2*n3 - 3*n1*n2*n3 - 21*n2^2*n3 - 40*n3^2 + 23*d*n3^2 - 
      2*n1*n3^2 - 21*n2*n3^2 - 6*n3^3 + 160*n5 - 136*d*n5 + 28*d^2*n5 + 
      48*n1*n5 - 24*d*n1*n5 + 90*n2*n5 - 33*d*n2*n5 + 24*n1*n2*n5 + 
      5*n2^2*n5 + 46*n3*n5 - 17*d*n3*n5 + 12*n1*n3*n5 + 6*n2*n3*n5 + 
      n3^2*n5 + 24*n5^2 - 12*d*n5^2 + 12*n2*n5^2 + 6*n3*n5^2)*
     j[p4, n1, -1 + n2, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((8 - 4*d + 4*n1 - 2*d*n1 - 2*n2 + 3*d*n2 + n1*n2 - 2*n2^2 - 4*n3 + 
      3*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 16*n5 - 8*d*n5 + 4*n1*n5 - 
      2*d*n1*n5 + n2*n5 + 3*d*n2*n5 + n1*n2*n5 - 2*n2^2*n5 - n3*n5 + 
      3*d*n3*n5 + 2*n1*n3*n5 - 5*n2*n3*n5 - 2*n3^2*n5 + 8*n5^2 - 4*d*n5^2 + 
      3*n2*n5^2 + 3*n3*n5^2)*j[p4, n1, -1 + n2, n3, 1, 2 + n5, 0, 0, -1, 0, 
      1, 1, 1, 1, 1])/(2*(n2 - n3)*(4 - d + n5)*(2 - d + n1 + n5)) + 
   ((88 - 68*d + 12*d^2 - 4*n1 + 2*d*n1 + 50*n2 - 15*d*n2 - n1*n2 + 2*n2^2 + 
      28*n3 - 9*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 + 104*n5 - 76*d*n5 + 
      12*d^2*n5 - 4*n1*n5 + 2*d*n1*n5 + 59*n2*n5 - 15*d*n2*n5 - n1*n2*n5 + 
      2*n2^2*n5 + 31*n3*n5 - 9*d*n3*n5 - 2*n1*n3*n5 + 5*n2*n3*n5 + 
      2*n3^2*n5 + 16*n5^2 - 8*d*n5^2 + 9*n2*n5^2 + 3*n3*n5^2)*
     j[p4, n1, -1 + n2, n3, 1, 2 + n5, 0, 0, -1, 1, 1, 1, 1, 0, 1])/
    (2*(n2 - n3)*(4 - d + n5)*(2 - d + n1 + n5)) + 
   ((-88 + 68*d - 12*d^2 + 4*n1 - 2*d*n1 - 50*n2 + 15*d*n2 + n1*n2 - 2*n2^2 - 
      28*n3 + 9*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 - 104*n5 + 76*d*n5 - 
      12*d^2*n5 + 4*n1*n5 - 2*d*n1*n5 - 59*n2*n5 + 15*d*n2*n5 + n1*n2*n5 - 
      2*n2^2*n5 - 31*n3*n5 + 9*d*n3*n5 + 2*n1*n3*n5 - 5*n2*n3*n5 - 
      2*n3^2*n5 - 16*n5^2 + 8*d*n5^2 - 9*n2*n5^2 - 3*n3*n5^2)*
     j[p4, n1, -1 + n2, n3, 1, 2 + n5, 0, 0, -1, 1, 1, 1, 1, 1, 0])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((8 - 4*d + 4*n1 - 2*d*n1 - 2*n2 + 3*d*n2 + n1*n2 - 2*n2^2 - 4*n3 + 
      3*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 16*n5 - 8*d*n5 + 4*n1*n5 - 
      2*d*n1*n5 + n2*n5 + 3*d*n2*n5 + n1*n2*n5 - 2*n2^2*n5 - n3*n5 + 
      3*d*n3*n5 + 2*n1*n3*n5 - 5*n2*n3*n5 - 2*n3^2*n5 + 8*n5^2 - 4*d*n5^2 + 
      3*n2*n5^2 + 3*n3*n5^2)*j[p4, n1, -1 + n2, n3, 1, 2 + n5, 0, 0, -1, 1, 
      1, 1, 1, 1, 1])/(2*(n2 - n3)*(4 - d + n5)*(2 - d + n1 + n5)) + 
   ((16 - 8*d + 8*n2 + 4*n3)*j[p4, n1, -1 + n2, n3, 2, 1 + n5, 0, 0, -1, 1, 
      1, 1, 1, 1, 0])/((n2 - n3)*(-2 + d - n1 - n5)) + 
   ((40*n3 - 28*d*n3 + 4*d^2*n3 + 4*n1*n3 - 2*d*n1*n3 + 14*n2*n3 - d*n2*n3 + 
      n1*n2*n3 - 2*n2^2*n3 + 4*n3^2 + d*n3^2 + 2*n1*n3^2 - 5*n2*n3^2 - 
      2*n3^3 + 16*n3*n5 - 8*d*n3*n5 + 7*n2*n3*n5 + 5*n3^2*n5)*
     j[p4, n1, -1 + n2, 1 + n3, 0, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 1, 1])/
    (2*(-n2 + n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-8*n3 + 4*d*n3 - 4*n1*n3 + 2*d*n1*n3 + 2*n2*n3 - 3*d*n2*n3 - n1*n2*n3 + 
      2*n2^2*n3 + 4*n3^2 - 3*d*n3^2 - 2*n1*n3^2 + 5*n2*n3^2 + 2*n3^3 - 
      8*n3*n5 + 4*d*n3*n5 - 3*n2*n3*n5 - 3*n3^2*n5)*
     j[p4, n1, -1 + n2, 1 + n3, 1, 1 + n5, 0, 0, -1, 1, 0, 1, 1, 1, 1])/
    (2*(-n2 + n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((8*n3 - 4*d*n3 + 4*n1*n3 - 2*d*n1*n3 - 2*n2*n3 + 3*d*n2*n3 + n1*n2*n3 - 
      2*n2^2*n3 - 4*n3^2 + 3*d*n3^2 + 2*n1*n3^2 - 5*n2*n3^2 - 2*n3^3 + 
      8*n3*n5 - 4*d*n3*n5 + 3*n2*n3*n5 + 3*n3^2*n5)*
     j[p4, n1, -1 + n2, 1 + n3, 1, 1 + n5, 0, 0, -1, 1, 1, 0, 1, 1, 1])/
    (2*(-n2 + n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-8*n3 + 4*d*n3 - 4*n1*n3 + 2*d*n1*n3 + 2*n2*n3 - 3*d*n2*n3 - n1*n2*n3 + 
      2*n2^2*n3 + 4*n3^2 - 3*d*n3^2 - 2*n1*n3^2 + 5*n2*n3^2 + 2*n3^3 - 
      8*n3*n5 + 4*d*n3*n5 - 3*n2*n3*n5 - 3*n3^2*n5)*
     j[p4, n1, -1 + n2, 1 + n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 0, 1, 1])/
    (2*(-n2 + n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-112*n3 + 128*d*n3 - 44*d^2*n3 + 4*d^3*n3 - 88*n1*n3 + 64*d*n1*n3 - 
      10*d^2*n1*n3 - 60*n2*n3 + 32*d*n2*n3 - d^2*n2*n3 - 42*n1*n2*n3 + 
      9*d*n1*n2*n3 + 2*n2^2*n3 - 5*d*n2^2*n3 + n1*n2^2*n3 + 2*n2^3*n3 - 
      16*n3^2 - 2*d*n3^2 + 5*d^2*n3^2 - 16*n1*n3^2 + 2*d*n1*n3^2 + 
      16*n2*n3^2 - 14*d*n2*n3^2 + 3*n1*n2*n3^2 + 7*n2^2*n3^2 + 12*n3^3 - 
      8*d*n3^3 + 2*n1*n3^3 + 7*n2*n3^3 + 2*n3^4 - 80*n3*n5 + 68*d*n3*n5 - 
      14*d^2*n3*n5 - 24*n1*n3*n5 + 12*d*n1*n3*n5 - 46*n2*n3*n5 + 
      17*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 3*n2^2*n3*n5 - 22*n3^2*n5 + 
      8*d*n3^2*n5 - 6*n1*n3^2*n5 - 3*n2*n3^2*n5 - 12*n3*n5^2 + 6*d*n3*n5^2 - 
      6*n2*n3*n5^2 - 3*n3^2*n5^2)*j[p4, n1, -1 + n2, 1 + n3, 1, 1 + n5, 0, 0, 
      -1, 1, 1, 1, 1, 0, 1])/((-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((-40*n3 + 28*d*n3 - 4*d^2*n3 - 4*n1*n3 + 
      2*d*n1*n3 - 14*n2*n3 + d*n2*n3 - n1*n2*n3 + 2*n2^2*n3 - 4*n3^2 - 
      d*n3^2 - 2*n1*n3^2 + 5*n2*n3^2 + 2*n3^3 - 16*n3*n5 + 8*d*n3*n5 - 
      7*n2*n3*n5 - 5*n3^2*n5)*j[p4, n1, -1 + n2, 1 + n3, 1, 1 + n5, 0, 0, -1, 
      1, 1, 1, 1, 1, 0])/(2*(-n2 + n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((8 - 4*d + 4*n1 - 2*d*n1 - 2*n2 + 3*d*n2 + n1*n2 - 2*n2^2 - 4*n3 + 
      3*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 8*n5 - 4*d*n5 + 3*n2*n5 + 
      3*n3*n5)*j[p4, n1, n2, -1 + n3, 1, 1 + n5, 0, 0, -1, 0, 2, 1, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((64 - 88*d + 40*d^2 - 6*d^3 + 72*n2 - 64*d*n2 + 14*d^2*n2 + 24*n2^2 - 
      10*d*n2^2 + 2*n2^3 + 64*n3 - 58*d*n3 + 13*d^2*n3 + 46*n2*n3 - 
      20*d*n2*n3 + 7*n2^2*n3 + 20*n3^2 - 9*d*n3^2 + 7*n2*n3^2 + 2*n3^3 + 
      8*n5 - 8*d*n5 + 2*d^2*n5 + 8*n2*n5 - 4*d*n2*n5 + 2*n2^2*n5 + 6*n3*n5 - 
      3*d*n3*n5 + 3*n2*n3*n5 + n3^2*n5)*j[p4, n1, n2, -1 + n3, 1, 1 + n5, 0, 
      0, -1, 1, 1, 1, 1, 1, 1])/((n2 - n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((-112 + 128*d - 44*d^2 + 4*d^3 - 184*n1 + 
      136*d*n1 - 22*d^2*n1 - 12*n2 - 4*d*n2 + 5*d^2*n2 - 90*n1*n2 + 
      21*d*n1*n2 + 26*n2^2 - 11*d*n2^2 + n1*n2^2 + 2*n2^3 + 32*n3 - 38*d*n3 + 
      11*d^2*n3 - 40*n1*n3 + 8*d*n1*n3 + 52*n2*n3 - 23*d*n2*n3 + 3*n1*n2*n3 + 
      7*n2^2*n3 + 24*n3^2 - 11*d*n3^2 + 2*n1*n3^2 + 7*n2*n3^2 + 2*n3^3 - 
      128*n5 + 104*d*n5 - 20*d^2*n5 - 48*n1*n5 + 24*d*n1*n5 - 58*n2*n5 + 
      17*d*n2*n5 - 24*n1*n2*n5 + 3*n2^2*n5 - 22*n3*n5 + 5*d*n3*n5 - 
      12*n1*n3*n5 + 6*n2*n3*n5 + 3*n3^2*n5 - 24*n5^2 + 12*d*n5^2 - 
      12*n2*n5^2 - 6*n3*n5^2)*j[p4, n1, n2, -1 + n3, 1, 1 + n5, 0, 0, -1, 1, 
      2, 0, 1, 1, 1])/(2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((-12 + 6*d - 6*n2 - 3*n3)*
     j[p4, n1, n2, -1 + n3, 1, 1 + n5, 0, 0, 0, 1, 1, 0, 1, 1, 1])/
    ((n2 - n3)*(-2 + d - n1 - n5)) + 
   ((12 - 6*d + 6*n2 + 3*n3 + 12*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*
     j[p4, n1, n2, -1 + n3, 1, 2 + n5, 0, 0, -1, 0, 1, 1, 1, 1, 1])/
    ((n2 - n3)*(-2 + d - n1 - n5)) + 
   ((16 - 8*d + 8*n2 + 4*n3)*j[p4, n1, n2, -1 + n3, 2, 1 + n5, 0, 0, -1, 0, 
      1, 1, 1, 1, 1])/((n2 - n3)*(-2 + d - n1 - n5)) + 
   ((-16 + 8*d - 8*n2 - 4*n3)*j[p4, n1, n2, -1 + n3, 2, 1 + n5, 0, 0, -1, 1, 
      0, 1, 1, 1, 1])/((n2 - n3)*(-2 + d - n1 - n5)) + 
   ((16 - 8*d + 8*n2 + 4*n3)*j[p4, n1, n2, -1 + n3, 2, 1 + n5, 0, 0, -1, 1, 
      1, 0, 1, 1, 1])/((n2 - n3)*(-2 + d - n1 - n5)) + 
   ((-32 + 20*d - 2*d^2 - 12*n2 + 2*n2^2 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      12*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, n1, n2, n3, 0, n5, 0, 0, -1, 
      1, 1, 1, 1, 1, 2])/((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-32 + 20*d - 2*d^2 - 12*n2 + 2*n2^2 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      12*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, n1, n2, n3, 0, n5, 0, 0, -1, 
      2, 1, 1, 1, 1, 1])/((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-224 + 160*d - 24*d^2 - 16*n1 + 8*d*n1 - 88*n2 + 12*d*n2 - 4*n1*n2 + 
      8*n2^2 - 40*n3 + 4*d*n3 - 12*n1*n3 + 2*d*n1*n3 + 22*n2*n3 - 3*d*n2*n3 - 
      n1*n2*n3 + 2*n2^2*n3 + 12*n3^2 - 3*d*n3^2 - 2*n1*n3^2 + 5*n2*n3^2 + 
      2*n3^3 - 256*n5 + 160*d*n5 - 16*d^2*n5 - 8*n1*n5 + 4*d*n1*n5 - 
      104*n2*n5 + 6*d*n2*n5 - 2*n1*n2*n5 + 8*n2^2*n5 - 48*n3*n5 - 2*d*n3*n5 - 
      4*n1*n3*n5 + 17*n2*n3*n5 + 5*n3^2*n5 - 64*n5^2 + 32*d*n5^2 - 
      30*n2*n5^2 - 18*n3*n5^2)*j[p4, n1, n2, n3, 0, 1 + n5, 0, 0, -1, 1, 1, 
      1, 1, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((8 - 4*d + 4*n1 - 2*d*n1 - 2*n2 + 3*d*n2 + n1*n2 - 2*n2^2 - 4*n3 + 
      3*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 8*n5 - 4*d*n5 + 3*n2*n5 + 
      3*n3*n5)*j[p4, n1, n2, n3, 0, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 1, 2])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-40 + 28*d - 4*d^2 - 4*n1 + 2*d*n1 - 14*n2 + d*n2 - n1*n2 + 2*n2^2 - 
      4*n3 - d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 16*n5 + 8*d*n5 - 7*n2*n5 - 
      5*n3*n5)*j[p4, n1, n2, n3, 0, 1 + n5, 0, 0, -1, 1, 1, 1, 2, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-40 + 28*d - 4*d^2 - 4*n1 + 2*d*n1 - 14*n2 + d*n2 - n1*n2 + 2*n2^2 - 
      4*n3 - d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 16*n5 + 8*d*n5 - 7*n2*n5 - 
      5*n3*n5)*j[p4, n1, n2, n3, 0, 1 + n5, 0, 0, -1, 1, 1, 2, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((8 - 4*d + 4*n1 - 2*d*n1 - 2*n2 + 3*d*n2 + n1*n2 - 2*n2^2 - 4*n3 + 
      3*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 8*n5 - 4*d*n5 + 3*n2*n5 + 
      3*n3*n5)*j[p4, n1, n2, n3, 0, 1 + n5, 0, 0, -1, 2, 1, 1, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((368 - 432*d + 156*d^2 - 16*d^3 + 184*n1 - 136*d*n1 + 22*d^2*n1 + 
      252*n2 - 156*d*n2 + 15*d^2*n2 + 90*n1*n2 - 21*d*n1*n2 + 22*n2^2 + 
      7*d*n2^2 - n1*n2^2 - 6*n2^3 + 128*n3 - 62*d*n3 - d^2*n3 + 40*n1*n3 - 
      8*d*n1*n3 + 27*d*n2*n3 - 3*n1*n2*n3 - 21*n2^2*n3 - 16*n3^2 + 
      17*d*n3^2 - 2*n1*n3^2 - 21*n2*n3^2 - 6*n3^3 + 208*n5 - 184*d*n5 + 
      40*d^2*n5 + 48*n1*n5 - 24*d*n1*n5 + 138*n2*n5 - 57*d*n2*n5 + 
      24*n1*n2*n5 + 17*n2^2*n5 + 82*n3*n5 - 35*d*n3*n5 + 12*n1*n3*n5 + 
      24*n2*n3*n5 + 7*n3^2*n5 + 24*n5^2 - 12*d*n5^2 + 12*n2*n5^2 + 6*n3*n5^2)*
     j[p4, n1, n2, n3, 0, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((104 - 76*d + 12*d^2 + 4*n1 - 2*d*n1 + 46*n2 - 9*d*n2 + n1*n2 - 2*n2^2 + 
      20*n3 - 3*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 136*n5 - 92*d*n5 + 
      12*d^2*n5 + 4*n1*n5 - 2*d*n1*n5 + 61*n2*n5 - 9*d*n2*n5 + n1*n2*n5 - 
      2*n2^2*n5 + 29*n3*n5 - 3*d*n3*n5 + 2*n1*n3*n5 - 5*n2*n3*n5 - 
      2*n3^2*n5 + 32*n5^2 - 16*d*n5^2 + 15*n2*n5^2 + 9*n3*n5^2)*
     j[p4, n1, n2, n3, 0, 2 + n5, 0, 0, -1, 1, 1, 1, 1, 1, 1])/
    (2*(n2 - n3)*(4 - d + n5)*(2 - d + n1 + n5)) + 
   ((-16 + 8*d - 4*n2 - 2*d*n2 + 2*n2^2 + 4*n3 - 4*d*n3 + 5*n2*n3 + 2*n3^2 - 
      8*n5 + 4*d*n5 - 4*n2*n5 - 2*n3*n5)*j[p4, n1, n2, n3, 1, n5, 0, 0, -1, 
      0, 1, 1, 1, 1, 2])/((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((32 - 20*d + 2*d^2 - 32*n1 + 20*d*n1 - 2*d^2*n1 + 12*n2 - 12*n1*n2 - 
      2*n2^2 + 2*n1*n2^2 + 3*d*n3 - 3*d*n1*n3 - 5*n2*n3 + 5*n1*n2*n3 - 
      2*n3^2 + 2*n1*n3^2 + 12*n5 - 6*d*n5 - 12*n1*n5 + 6*d*n1*n5 + 6*n2*n5 - 
      6*n1*n2*n5 + 3*n3*n5 - 3*n1*n3*n5)*j[p4, n1, n2, n3, 1, n5, 0, 0, -1, 
      1, 1, 0, 1, 1, 1])/((n2 - n3)*(-4 + d - n5)*(2 - d + n1 + n5)) + 
   ((40 - 28*d + 4*d^2 + 4*n1 - 2*d*n1 + 14*n2 - d*n2 + n1*n2 - 2*n2^2 + 
      4*n3 + d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 16*n5 - 8*d*n5 + 7*n2*n5 + 
      5*n3*n5)*j[p4, n1, n2, n3, 1, n5, 0, 0, -1, 1, 1, 0, 2, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-32 + 20*d - 2*d^2 - 12*n2 + 2*n2^2 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      12*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, n1, n2, n3, 1, n5, 0, 0, -1, 
      1, 1, 1, 0, 1, 2])/((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((56 - 40*d + 6*d^2 + 4*n1 - 2*d*n1 + 22*n2 - 3*d*n2 + n1*n2 - 2*n2^2 + 
      8*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 20*n5 - 10*d*n5 + 9*n2*n5 + 
      6*n3*n5)*j[p4, n1, n2, n3, 1, n5, 0, 0, -1, 1, 1, 1, 0, 2, 1])/
    ((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((32 - 20*d + 2*d^2 - 32*n1 + 20*d*n1 - 2*d^2*n1 + 12*n2 - 12*n1*n2 - 
      2*n2^2 + 2*n1*n2^2 + 3*d*n3 - 3*d*n1*n3 - 5*n2*n3 + 5*n1*n2*n3 - 
      2*n3^2 + 2*n1*n3^2 + 12*n5 - 6*d*n5 - 12*n1*n5 + 6*d*n1*n5 + 6*n2*n5 - 
      6*n1*n2*n5 + 3*n3*n5 - 3*n1*n3*n5)*j[p4, n1, n2, n3, 1, n5, 0, 0, -1, 
      1, 1, 1, 1, 0, 1])/(2*(n2 - n3)*(-4 + d - n5)*(2 - d + n1 + n5)) + 
   ((32 - 20*d + 2*d^2 + 12*n2 - 2*n2^2 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 12*n5 - 
      6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, n1, n2, n3, 1, n5, 0, 0, -1, 1, 1, 1, 
      1, 0, 2])/((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((40 - 28*d + 4*d^2 + 4*n1 - 2*d*n1 + 14*n2 - d*n2 + n1*n2 - 2*n2^2 + 
      4*n3 + d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 16*n5 - 8*d*n5 + 7*n2*n5 + 
      5*n3*n5)*j[p4, n1, n2, n3, 1, n5, 0, 0, -1, 1, 1, 2, 0, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-32 + 20*d - 2*d^2 - 12*n2 + 2*n2^2 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      12*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, n1, n2, n3, 1, n5, 0, 0, -1, 
      2, 1, 0, 1, 1, 1])/((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-16 + 8*d - 4*n2 - 2*d*n2 + 2*n2^2 + 4*n3 - 4*d*n3 + 5*n2*n3 + 2*n3^2 - 
      8*n5 + 4*d*n5 - 4*n2*n5 - 2*n3*n5)*j[p4, n1, n2, n3, 1, n5, 0, 0, -1, 
      2, 1, 1, 1, 1, 0])/((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-368 + 432*d - 156*d^2 + 16*d^3 - 184*n1 + 136*d*n1 - 22*d^2*n1 - 
      252*n2 + 156*d*n2 - 15*d^2*n2 - 90*n1*n2 + 21*d*n1*n2 - 22*n2^2 - 
      7*d*n2^2 + n1*n2^2 + 6*n2^3 - 128*n3 + 62*d*n3 + d^2*n3 - 40*n1*n3 + 
      8*d*n1*n3 - 27*d*n2*n3 + 3*n1*n2*n3 + 21*n2^2*n3 + 16*n3^2 - 
      17*d*n3^2 + 2*n1*n3^2 + 21*n2*n3^2 + 6*n3^3 - 208*n5 + 184*d*n5 - 
      40*d^2*n5 - 48*n1*n5 + 24*d*n1*n5 - 138*n2*n5 + 57*d*n2*n5 - 
      24*n1*n2*n5 - 17*n2^2*n5 - 82*n3*n5 + 35*d*n3*n5 - 12*n1*n3*n5 - 
      24*n2*n3*n5 - 7*n3^2*n5 - 24*n5^2 + 12*d*n5^2 - 12*n2*n5^2 - 6*n3*n5^2)*
     j[p4, n1, n2, n3, 1, n5, 0, 0, 0, 1, 1, 0, 1, 1, 1])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((368 - 432*d + 156*d^2 - 16*d^3 + 184*n1 - 136*d*n1 + 22*d^2*n1 + 
      252*n2 - 156*d*n2 + 15*d^2*n2 + 90*n1*n2 - 21*d*n1*n2 + 22*n2^2 + 
      7*d*n2^2 - n1*n2^2 - 6*n2^3 + 128*n3 - 62*d*n3 - d^2*n3 + 40*n1*n3 - 
      8*d*n1*n3 + 27*d*n2*n3 - 3*n1*n2*n3 - 21*n2^2*n3 - 16*n3^2 + 
      17*d*n3^2 - 2*n1*n3^2 - 21*n2*n3^2 - 6*n3^3 + 208*n5 - 184*d*n5 + 
      40*d^2*n5 + 48*n1*n5 - 24*d*n1*n5 + 138*n2*n5 - 57*d*n2*n5 + 
      24*n1*n2*n5 + 17*n2^2*n5 + 82*n3*n5 - 35*d*n3*n5 + 12*n1*n3*n5 + 
      24*n2*n3*n5 + 7*n3^2*n5 + 24*n5^2 - 12*d*n5^2 + 12*n2*n5^2 + 6*n3*n5^2)*
     j[p4, n1, n2, n3, 1, n5, 0, 0, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-368 + 432*d - 156*d^2 + 16*d^3 - 184*n1 + 136*d*n1 - 22*d^2*n1 - 
      252*n2 + 156*d*n2 - 15*d^2*n2 - 90*n1*n2 + 21*d*n1*n2 - 22*n2^2 - 
      7*d*n2^2 + n1*n2^2 + 6*n2^3 - 128*n3 + 62*d*n3 + d^2*n3 - 40*n1*n3 + 
      8*d*n1*n3 - 27*d*n2*n3 + 3*n1*n2*n3 + 21*n2^2*n3 + 16*n3^2 - 
      17*d*n3^2 + 2*n1*n3^2 + 21*n2*n3^2 + 6*n3^3 - 208*n5 + 184*d*n5 - 
      40*d^2*n5 - 48*n1*n5 + 24*d*n1*n5 - 138*n2*n5 + 57*d*n2*n5 - 
      24*n1*n2*n5 - 17*n2^2*n5 - 82*n3*n5 + 35*d*n3*n5 - 12*n1*n3*n5 - 
      24*n2*n3*n5 - 7*n3^2*n5 - 24*n5^2 + 12*d*n5^2 - 12*n2*n5^2 - 6*n3*n5^2)*
     j[p4, n1, n2, n3, 1, n5, 0, 0, 0, 1, 1, 1, 1, 0, 1])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-8 + 4*d - 4*n1 + 2*d*n1 + 2*n2 - 3*d*n2 - n1*n2 + 2*n2^2 + 4*n3 - 
      3*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 8*n5 + 4*d*n5 - 3*n2*n5 - 
      3*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, -1, 0, -1, 0, 1, 1, 1, 1, 2])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((40 - 28*d + 4*d^2 + 4*n1 - 2*d*n1 + 14*n2 - d*n2 + n1*n2 - 2*n2^2 + 
      4*n3 + d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 16*n5 - 8*d*n5 + 7*n2*n5 + 
      5*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, -1, 0, -1, 1, 1, 0, 2, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((32 - 20*d + 2*d^2 + 12*n2 - 2*n2^2 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 12*n5 - 
      6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, -1, 0, -1, 1, 
      1, 1, 1, 0, 2])/((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((40 - 28*d + 4*d^2 + 4*n1 - 2*d*n1 + 14*n2 - d*n2 + n1*n2 - 2*n2^2 + 
      4*n3 + d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 16*n5 - 8*d*n5 + 7*n2*n5 + 
      5*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, -1, 0, -1, 1, 1, 2, 0, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((56 - 40*d + 6*d^2 + 4*n1 - 2*d*n1 + 22*n2 - 3*d*n2 + n1*n2 - 2*n2^2 + 
      8*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 20*n5 - 10*d*n5 + 9*n2*n5 + 
      6*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, -1, 0, -1, 1, 2, 0, 1, 1, 1])/
    ((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((8 - 4*d + 4*n1 - 2*d*n1 - 2*n2 + 3*d*n2 + n1*n2 - 2*n2^2 - 4*n3 + 
      3*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 8*n5 - 4*d*n5 + 3*n2*n5 + 
      3*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, -1, 0, -1, 1, 2, 1, 0, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-8 + 4*d - 4*n1 + 2*d*n1 + 2*n2 - 3*d*n2 - n1*n2 + 2*n2^2 + 4*n3 - 
      3*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 8*n5 + 4*d*n5 - 3*n2*n5 - 
      3*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, -1, 0, -1, 1, 2, 1, 1, 0, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-8 + 4*d - 4*n1 + 2*d*n1 + 2*n2 - 3*d*n2 - n1*n2 + 2*n2^2 + 4*n3 - 
      3*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 8*n5 + 4*d*n5 - 3*n2*n5 - 
      3*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, -1, 0, -1, 2, 1, 1, 1, 1, 0])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-40 + 28*d - 4*d^2 - 4*n1 + 2*d*n1 - 14*n2 + d*n2 - n1*n2 + 2*n2^2 - 
      4*n3 - d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 16*n5 + 8*d*n5 - 7*n2*n5 - 
      5*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, -1, 0, 0, 1, 1, 0, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-40 + 28*d - 4*d^2 - 4*n1 + 2*d*n1 - 14*n2 + d*n2 - n1*n2 + 2*n2^2 - 
      4*n3 - d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 16*n5 + 8*d*n5 - 7*n2*n5 - 
      5*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, -1, 0, 0, 1, 1, 1, 0, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((40 - 28*d + 4*d^2 + 4*n1 - 2*d*n1 + 14*n2 - d*n2 + n1*n2 - 2*n2^2 + 
      4*n3 + d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 16*n5 - 8*d*n5 + 7*n2*n5 + 
      5*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, -1, 0, 0, 1, 1, 1, 1, 0, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-368 + 432*d - 156*d^2 + 16*d^3 - 184*n1 + 136*d*n1 - 22*d^2*n1 - 
      252*n2 + 156*d*n2 - 15*d^2*n2 - 90*n1*n2 + 21*d*n1*n2 - 22*n2^2 - 
      7*d*n2^2 + n1*n2^2 + 6*n2^3 - 128*n3 + 62*d*n3 + d^2*n3 - 40*n1*n3 + 
      8*d*n1*n3 - 27*d*n2*n3 + 3*n1*n2*n3 + 21*n2^2*n3 + 16*n3^2 - 
      17*d*n3^2 + 2*n1*n3^2 + 21*n2*n3^2 + 6*n3^3 - 208*n5 + 184*d*n5 - 
      40*d^2*n5 - 48*n1*n5 + 24*d*n1*n5 - 138*n2*n5 + 57*d*n2*n5 - 
      24*n1*n2*n5 - 17*n2^2*n5 - 82*n3*n5 + 35*d*n3*n5 - 12*n1*n3*n5 - 
      24*n2*n3*n5 - 7*n3^2*n5 - 24*n5^2 + 12*d*n5^2 - 12*n2*n5^2 - 6*n3*n5^2)*
     j[p4, n1, n2, n3, 1, 1 + n5, -1, 0, 0, 1, 1, 1, 1, 1, 1])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-8 + 4*d - 4*n1 + 2*d*n1 + 2*n2 - 3*d*n2 - n1*n2 + 2*n2^2 + 4*n3 - 
      3*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 8*n5 + 4*d*n5 - 3*n2*n5 - 
      3*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, 0, -1, -1, 0, 1, 1, 1, 1, 2])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-120 + 84*d - 12*d^2 - 12*n1 + 6*d*n1 - 42*n2 + 3*d*n2 - 3*n1*n2 + 
      6*n2^2 - 12*n3 - 3*d*n3 - 6*n1*n3 + 15*n2*n3 + 6*n3^2 - 48*n5 + 
      24*d*n5 - 21*n2*n5 - 15*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, 0, -1, -1, 
      0, 2, 1, 1, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((40 - 28*d + 4*d^2 + 4*n1 - 2*d*n1 + 14*n2 - d*n2 + n1*n2 - 2*n2^2 + 
      4*n3 + d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 16*n5 - 8*d*n5 + 7*n2*n5 + 
      5*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, 0, -1, -1, 1, 1, 0, 2, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((32 - 20*d + 2*d^2 + 12*n2 - 2*n2^2 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 12*n5 - 
      6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, 0, -1, -1, 1, 
      1, 1, 1, 0, 2])/((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((40 - 28*d + 4*d^2 + 4*n1 - 2*d*n1 + 14*n2 - d*n2 + n1*n2 - 2*n2^2 + 
      4*n3 + d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 16*n5 - 8*d*n5 + 7*n2*n5 + 
      5*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, 0, -1, -1, 1, 1, 2, 0, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((112 - 128*d + 44*d^2 - 4*d^3 + 184*n1 - 136*d*n1 + 22*d^2*n1 + 12*n2 + 
      4*d*n2 - 5*d^2*n2 + 90*n1*n2 - 21*d*n1*n2 - 26*n2^2 + 11*d*n2^2 - 
      n1*n2^2 - 2*n2^3 - 32*n3 + 38*d*n3 - 11*d^2*n3 + 40*n1*n3 - 8*d*n1*n3 - 
      52*n2*n3 + 23*d*n2*n3 - 3*n1*n2*n3 - 7*n2^2*n3 - 24*n3^2 + 11*d*n3^2 - 
      2*n1*n3^2 - 7*n2*n3^2 - 2*n3^3 + 128*n5 - 104*d*n5 + 20*d^2*n5 + 
      48*n1*n5 - 24*d*n1*n5 + 58*n2*n5 - 17*d*n2*n5 + 24*n1*n2*n5 - 
      3*n2^2*n5 + 22*n3*n5 - 5*d*n3*n5 + 12*n1*n3*n5 - 6*n2*n3*n5 - 
      3*n3^2*n5 + 24*n5^2 - 12*d*n5^2 + 12*n2*n5^2 + 6*n3*n5^2)*
     j[p4, n1, n2, n3, 1, 1 + n5, 0, -1, -1, 1, 2, 0, 1, 1, 1])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-112 + 128*d - 44*d^2 + 4*d^3 - 184*n1 + 136*d*n1 - 22*d^2*n1 - 12*n2 - 
      4*d*n2 + 5*d^2*n2 - 90*n1*n2 + 21*d*n1*n2 + 26*n2^2 - 11*d*n2^2 + 
      n1*n2^2 + 2*n2^3 + 32*n3 - 38*d*n3 + 11*d^2*n3 - 40*n1*n3 + 8*d*n1*n3 + 
      52*n2*n3 - 23*d*n2*n3 + 3*n1*n2*n3 + 7*n2^2*n3 + 24*n3^2 - 11*d*n3^2 + 
      2*n1*n3^2 + 7*n2*n3^2 + 2*n3^3 - 128*n5 + 104*d*n5 - 20*d^2*n5 - 
      48*n1*n5 + 24*d*n1*n5 - 58*n2*n5 + 17*d*n2*n5 - 24*n1*n2*n5 + 
      3*n2^2*n5 - 22*n3*n5 + 5*d*n3*n5 - 12*n1*n3*n5 + 6*n2*n3*n5 + 
      3*n3^2*n5 - 24*n5^2 + 12*d*n5^2 - 12*n2*n5^2 - 6*n3*n5^2)*
     j[p4, n1, n2, n3, 1, 1 + n5, 0, -1, -1, 1, 2, 1, 0, 1, 1])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((112 - 128*d + 44*d^2 - 4*d^3 + 184*n1 - 136*d*n1 + 22*d^2*n1 + 12*n2 + 
      4*d*n2 - 5*d^2*n2 + 90*n1*n2 - 21*d*n1*n2 - 26*n2^2 + 11*d*n2^2 - 
      n1*n2^2 - 2*n2^3 - 32*n3 + 38*d*n3 - 11*d^2*n3 + 40*n1*n3 - 8*d*n1*n3 - 
      52*n2*n3 + 23*d*n2*n3 - 3*n1*n2*n3 - 7*n2^2*n3 - 24*n3^2 + 11*d*n3^2 - 
      2*n1*n3^2 - 7*n2*n3^2 - 2*n3^3 + 128*n5 - 104*d*n5 + 20*d^2*n5 + 
      48*n1*n5 - 24*d*n1*n5 + 58*n2*n5 - 17*d*n2*n5 + 24*n1*n2*n5 - 
      3*n2^2*n5 + 22*n3*n5 - 5*d*n3*n5 + 12*n1*n3*n5 - 6*n2*n3*n5 - 
      3*n3^2*n5 + 24*n5^2 - 12*d*n5^2 + 12*n2*n5^2 + 6*n3*n5^2)*
     j[p4, n1, n2, n3, 1, 1 + n5, 0, -1, -1, 1, 2, 1, 1, 0, 1])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-8 + 4*d - 4*n1 + 2*d*n1 + 2*n2 - 3*d*n2 - n1*n2 + 2*n2^2 + 4*n3 - 
      3*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 8*n5 + 4*d*n5 - 3*n2*n5 - 
      3*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, 0, -1, -1, 2, 1, 1, 1, 1, 0])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-136 + 100*d - 16*d^2 - 4*n1 + 2*d*n1 - 62*n2 + 13*d*n2 - n1*n2 + 
      2*n2^2 - 28*n3 + 5*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 40*n5 + 
      20*d*n5 - 19*n2*n5 - 11*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, 0, -1, 0, 
      1, 1, 0, 1, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-40 + 28*d - 4*d^2 - 4*n1 + 2*d*n1 - 14*n2 + d*n2 - n1*n2 + 2*n2^2 - 
      4*n3 - d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 16*n5 + 8*d*n5 - 7*n2*n5 - 
      5*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, 0, -1, 0, 1, 1, 1, 0, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((40 - 28*d + 4*d^2 + 4*n1 - 2*d*n1 + 14*n2 - d*n2 + n1*n2 - 2*n2^2 + 
      4*n3 + d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 16*n5 - 8*d*n5 + 7*n2*n5 + 
      5*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, 0, -1, 0, 1, 1, 1, 1, 0, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-176 + 192*d - 60*d^2 + 4*d^3 - 184*n1 + 136*d*n1 - 22*d^2*n1 - 60*n2 + 
      12*d*n2 + 9*d^2*n2 - 90*n1*n2 + 21*d*n1*n2 + 26*n2^2 - 19*d*n2^2 + 
      n1*n2^2 + 6*n2^3 + 16*n3 - 46*d*n3 + 19*d^2*n3 - 40*n1*n3 + 8*d*n1*n3 + 
      72*n2*n3 - 45*d*n2*n3 + 3*n1*n2*n3 + 21*n2^2*n3 + 40*n3^2 - 23*d*n3^2 + 
      2*n1*n3^2 + 21*n2*n3^2 + 6*n3^3 - 160*n5 + 136*d*n5 - 28*d^2*n5 - 
      48*n1*n5 + 24*d*n1*n5 - 90*n2*n5 + 33*d*n2*n5 - 24*n1*n2*n5 - 
      5*n2^2*n5 - 46*n3*n5 + 17*d*n3*n5 - 12*n1*n3*n5 - 6*n2*n3*n5 - 
      n3^2*n5 - 24*n5^2 + 12*d*n5^2 - 12*n2*n5^2 - 6*n3*n5^2)*
     j[p4, n1, n2, n3, 1, 1 + n5, 0, -1, 0, 1, 1, 1, 1, 1, 1])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-32 + 20*d - 2*d^2 + 32*n1 - 20*d*n1 + 2*d^2*n1 - 12*n2 + 12*n1*n2 + 
      2*n2^2 - 2*n1*n2^2 - 3*d*n3 + 3*d*n1*n3 + 5*n2*n3 - 5*n1*n2*n3 + 
      2*n3^2 - 2*n1*n3^2 - 12*n5 + 6*d*n5 + 12*n1*n5 - 6*d*n1*n5 - 6*n2*n5 + 
      6*n1*n2*n5 - 3*n3*n5 + 3*n1*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, 
      -2, 0, 1, 1, 1, 1, 1])/((n2 - n3)*(-4 + d - n5)*(2 - d + n1 + n5)) + 
   ((-8 + 4*d - 4*n1 + 2*d*n1 + 2*n2 - 3*d*n2 - n1*n2 + 2*n2^2 + 4*n3 - 
      3*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 8*n5 + 4*d*n5 - 3*n2*n5 - 
      3*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, -2, 0, 1, 1, 1, 1, 2])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-8 + 4*d - 4*n1 + 2*d*n1 + 2*n2 - 3*d*n2 - n1*n2 + 2*n2^2 + 4*n3 - 
      3*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 8*n5 + 4*d*n5 - 3*n2*n5 - 
      3*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, -2, 0, 2, 1, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((32 - 20*d + 2*d^2 + 12*n2 - 2*n2^2 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 12*n5 - 
      6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, -2, 1, 
      1, 1, 1, 0, 2])/((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-56 + 40*d - 6*d^2 - 4*n1 + 2*d*n1 - 22*n2 + 3*d*n2 - n1*n2 + 2*n2^2 - 
      8*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 20*n5 + 10*d*n5 - 9*n2*n5 - 
      6*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, -2, 1, 1, 1, 1, 2, 0])/
    ((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((112 - 128*d + 44*d^2 - 4*d^3 + 184*n1 - 136*d*n1 + 22*d^2*n1 + 12*n2 + 
      4*d*n2 - 5*d^2*n2 + 90*n1*n2 - 21*d*n1*n2 - 26*n2^2 + 11*d*n2^2 - 
      n1*n2^2 - 2*n2^3 - 32*n3 + 38*d*n3 - 11*d^2*n3 + 40*n1*n3 - 8*d*n1*n3 - 
      52*n2*n3 + 23*d*n2*n3 - 3*n1*n2*n3 - 7*n2^2*n3 - 24*n3^2 + 11*d*n3^2 - 
      2*n1*n3^2 - 7*n2*n3^2 - 2*n3^3 + 128*n5 - 104*d*n5 + 20*d^2*n5 + 
      48*n1*n5 - 24*d*n1*n5 + 58*n2*n5 - 17*d*n2*n5 + 24*n1*n2*n5 - 
      3*n2^2*n5 + 22*n3*n5 - 5*d*n3*n5 + 12*n1*n3*n5 - 6*n2*n3*n5 - 
      3*n3^2*n5 + 24*n5^2 - 12*d*n5^2 + 12*n2*n5^2 + 6*n3*n5^2)*
     j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, -2, 1, 2, 0, 1, 1, 1])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-8 + 4*d - 4*n1 + 2*d*n1 + 2*n2 - 3*d*n2 - n1*n2 + 2*n2^2 + 4*n3 - 
      3*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 8*n5 + 4*d*n5 - 3*n2*n5 - 
      3*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, -2, 2, 1, 1, 1, 1, 0])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((288 - 344*d + 128*d^2 - 14*d^3 - 208*n1 + 328*d*n1 - 148*d^2*n1 + 
      18*d^3*n1 - 192*n1^2 + 144*d*n1^2 - 24*d^2*n1^2 + 192*n2 - 128*d*n2 + 
      16*d^2*n2 - 180*n1*n2 + 150*d*n1*n2 - 18*d^2*n1*n2 - 96*n1^2*n2 + 
      24*d*n1^2*n2 + 20*n2^2 - 26*n1*n2^2 - 6*d*n1*n2^2 - 2*n2^3 + 
      6*n1*n2^3 + 400*n3 - 406*d*n3 + 127*d^2*n3 - 12*d^3*n3 + 72*n1*n3 - 
      62*d*n1*n3 + 19*d^2*n1*n3 - 48*n1^2*n3 + 12*d*n1^2*n3 + 202*n2*n3 - 
      100*d*n2*n3 + 7*d^2*n2*n3 + 78*n1*n2*n3 - 45*d*n1*n2*n3 - n2^2*n3 + 
      11*d*n2^2*n3 + 20*n1*n2^2*n3 - 6*n2^3*n3 + 76*n3^2 - 19*d*n3^2 - 
      7*d^2*n3^2 + 48*n1*n3^2 - 23*d*n1*n3^2 - 31*n2*n3^2 + 33*d*n2*n3^2 + 
      18*n1*n2*n3^2 - 21*n2^2*n3^2 - 26*n3^3 + 19*d*n3^3 + 4*n1*n3^3 - 
      21*n2*n3^3 - 6*n3^4 + 680*n5 - 736*d*n5 + 238*d^2*n5 - 20*d^3*n5 + 
      24*n1*n5 + 24*d*n1*n5 - 18*d^2*n1*n5 - 48*n1^2*n5 + 24*d*n1^2*n5 + 
      468*n2*n5 - 254*d*n2*n5 + 16*d^2*n2*n5 - 24*n1*n2*n5 + 36*d*n1*n2*n5 - 
      24*n1^2*n2*n5 + 40*n2^2*n5 + 16*d*n2^2*n5 - 18*n1*n2^2*n5 - 
      12*n2^3*n5 + 434*n3*n5 - 271*d*n3*n5 + 30*d^2*n3*n5 + 18*n1*n3*n5 + 
      3*d*n1*n3*n5 - 12*n1^2*n3*n5 + 119*n2*n3*n5 + 5*d*n2*n3*n5 - 
      3*n1*n2*n3*n5 - 29*n2^2*n3*n5 + 39*n3^2*n5 + 3*d*n3^2*n5 + 
      3*n1*n3^2*n5 - 24*n2*n3^2*n5 - 7*n3^3*n5 + 296*n5^2 - 260*d*n5^2 + 
      56*d^2*n5^2 + 24*n1*n5^2 - 12*d*n1*n5^2 + 212*n2*n5^2 - 88*d*n2*n5^2 + 
      12*n1*n2*n5^2 + 32*n2^2*n5^2 + 162*n3*n5^2 - 72*d*n3*n5^2 + 
      6*n1*n3*n5^2 + 60*n2*n3*n5^2 + 22*n3^2*n5^2 + 24*n5^3 - 12*d*n5^3 + 
      12*n2*n5^3 + 6*n3*n5^3)*j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, -1, 0, 1, 1, 
      1, 1, 1])/(2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((-40 + 28*d - 4*d^2 - 4*n1 + 2*d*n1 - 14*n2 + 
      d*n2 - n1*n2 + 2*n2^2 - 4*n3 - d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 
      16*n5 + 8*d*n5 - 7*n2*n5 - 5*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, 
      -1, 0, 1, 2, 1, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-8 + 4*d - 4*n1 + 2*d*n1 + 2*n2 - 3*d*n2 - n1*n2 + 2*n2^2 + 4*n3 - 
      3*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 8*n5 + 4*d*n5 - 3*n2*n5 - 
      3*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, -1, 0, 2, 1, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-48 + 40*d - 4*d^2 - 2*d^3 + 8*n1 - 56*d*n1 + 38*d^2*n1 - 6*d^3*n1 + 
      44*n2 - 72*d*n2 + 29*d^2*n2 - 2*d^3*n2 + 54*n1*n2 - 63*d*n1*n2 + 
      12*d^2*n1*n2 + 58*n2^2 - 39*d*n2^2 + 4*d^2*n2^2 + 25*n1*n2^2 - 
      6*d*n1*n2^2 + 12*n2^3 - 2*d*n2^3 - 80*n3 + 100*d*n3 - 46*d^2*n3 + 
      8*d^3*n3 + 56*n1*n3 - 52*d*n1*n3 + 9*d^2*n1*n3 - 42*n2*n3 + 
      44*d*n2*n3 - 13*d^2*n2*n3 + 39*n1*n2*n3 - 9*d*n1*n2*n3 - 6*n2^2*n3 + 
      5*d*n2^2*n3 - 64*n3^2 + 55*d*n3^2 - 12*d^2*n3^2 + 14*n1*n3^2 - 
      3*d*n1*n3^2 - 30*n2*n3^2 + 11*d*n2*n3^2 - 12*n3^3 + 4*d*n3^3 - 72*n5 + 
      60*d*n5 - 12*d^2*n5 - 12*d*n1*n5 + 6*d^2*n1*n5 - 30*n2*n5 + 5*d*n2*n5 + 
      2*d^2*n2*n5 + 12*n1*n2*n5 - 12*d*n1*n2*n5 + 7*n2^2*n5 - 4*d*n2^2*n5 + 
      6*n1*n2^2*n5 + 2*n2^3*n5 - 48*n3*n5 + 37*d*n3*n5 - 8*d^2*n3*n5 + 
      12*n1*n3*n5 - 9*d*n1*n3*n5 - 26*n2*n3*n5 + 13*d*n2*n3*n5 + 
      9*n1*n2*n3*n5 - 5*n2^2*n3*n5 - 23*n3^2*n5 + 12*d*n3^2*n5 + 
      3*n1*n3^2*n5 - 11*n2*n3^2*n5 - 4*n3^3*n5 - 12*n5^2 + 6*d*n5^2 - 
      6*n2*n5^2 - 3*n3*n5^2)*j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, -1, 1, 0, 1, 
      1, 1, 1])/((-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((128 - 128*d + 32*d^2 - 64*n1 + 120*d*n1 - 
      60*d^2*n1 + 8*d^3*n1 + 48*n2 + 4*d*n2 - 14*d^2*n2 - 104*n1*n2 + 
      92*d*n1*n2 - 14*d^2*n1*n2 - 24*n2^2 + 22*d*n2^2 - 32*n1*n2^2 + 
      4*d*n1*n2^2 - 8*n2^3 + 2*n1*n2^3 + 112*n3 - 108*d*n3 + 42*d^2*n3 - 
      8*d^3*n3 - 80*n1*n3 + 62*d*n1*n3 - 8*d^2*n1*n3 + 52*n2*n3 - 
      43*d*n2*n3 + 16*d^2*n2*n3 - 38*n1*n2*n3 + d*n1*n2*n3 + 4*n2^2*n3 - 
      8*d*n2^2*n3 + 7*n1*n2^2*n3 + 52*n3^2 - 45*d*n3^2 + 12*d^2*n3^2 - 
      8*n1*n3^2 - 2*d*n1*n3^2 + 20*n2*n3^2 - 12*d*n2*n3^2 + 7*n1*n2*n3^2 + 
      8*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 112*n5 - 100*d*n5 + 22*d^2*n5 - 
      24*n1*n5 + 36*d*n1*n5 - 12*d^2*n1*n5 + 76*n2*n5 - 32*d*n2*n5 - 
      36*n1*n2*n5 + 24*d*n1*n2*n5 + 10*n2^2*n5 - 12*n1*n2^2*n5 + 80*n3*n5 - 
      53*d*n3*n5 + 8*d^2*n3*n5 - 30*n1*n3*n5 + 18*d*n1*n3*n5 + 47*n2*n3*n5 - 
      16*d*n2*n3*n5 - 18*n1*n2*n3*n5 + 8*n2^2*n3*n5 + 29*n3^2*n5 - 
      12*d*n3^2*n5 - 6*n1*n3^2*n5 + 12*n2*n3^2*n5 + 4*n3^3*n5 + 12*n5^2 - 
      6*d*n5^2 + 6*n2*n5^2 + 3*n3*n5^2)*j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, 
      -1, 1, 1, 0, 1, 1, 1])/((-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((-168 + 116*d - 16*d^2 - 20*n1 + 10*d*n1 - 
      150*n2 + 73*d*n2 - 12*d^2*n2 - 5*n1*n2 - 38*n2^2 + 12*d*n2^2 + 12*n3 - 
      27*d*n3 + 4*d^2*n3 - 14*n1*n3 + 2*d*n1*n3 + 19*n2*n3 - d*n2*n3 - 
      n1*n2*n3 + 2*n2^2*n3 + 22*n3^2 - 5*d*n3^2 - 2*n1*n3^2 + 5*n2*n3^2 + 
      2*n3^3 - 72*n5 + 36*d*n5 - 55*n2*n5 + 12*d*n2*n5 - 12*n2^2*n5 - 
      23*n3*n5 - 5*n2*n3*n5 - n3^2*n5)*j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, -1, 
      1, 1, 1, 0, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((8 - 4*d + 4*n1 - 2*d*n1 - 2*n2 + 3*d*n2 + n1*n2 - 2*n2^2 - 4*n3 + 
      3*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 8*n5 - 4*d*n5 + 3*n2*n5 + 
      3*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 0, 1, 2])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((48*n1 - 72*d*n1 + 36*d^2*n1 - 6*d^3*n1 - 176*n2 + 224*d*n2 - 92*d^2*n2 + 
      12*d^3*n2 + 60*n1*n2 - 58*d*n1*n2 + 14*d^2*n1*n2 - 180*n2^2 + 
      138*d*n2^2 - 24*d^2*n2^2 + 22*n1*n2^2 - 10*d*n1*n2^2 - 46*n2^3 + 
      12*d*n2^3 + 2*n1*n2^3 - 120*n3 + 144*d*n3 - 54*d^2*n3 + 6*d^3*n3 - 
      48*n1*n3 + 22*d*n1*n3 + d^2*n1*n3 - 194*n2*n3 + 141*d*n2*n3 - 
      22*d^2*n2*n3 - 8*n1*n2*n3 - 8*d*n1*n2*n3 - 65*n2^2*n3 + 14*d*n2^2*n3 + 
      7*n1*n2^2*n3 + 2*n2^3*n3 - 24*n3^2 + 10*d*n3^2 + d^2*n3^2 - 8*n1*n3^2 - 
      3*d*n1*n3^2 - 7*n2*n3^2 - 5*d*n2*n3^2 + 7*n1*n2*n3^2 + 7*n2^2*n3^2 + 
      10*n3^3 - 6*d*n3^3 + 2*n1*n3^3 + 7*n2*n3^3 + 2*n3^4 + 96*n5 - 
      120*d*n5 + 48*d^2*n5 - 6*d^3*n5 + 96*n1*n5 - 72*d*n1*n5 + 
      12*d^2*n1*n5 + 8*n2*n5 + 6*d*n2*n5 - 5*d^2*n2*n5 + 50*n1*n2*n5 - 
      13*d*n1*n2*n5 - 44*n2^2*n5 + 23*d*n2^2*n5 + n1*n2^2*n5 - 12*n2^3*n5 - 
      72*n3*n5 + 64*d*n3*n5 - 14*d^2*n3*n5 - 2*n1*n3*n5 + 7*d*n1*n3*n5 - 
      88*n2*n3*n5 + 38*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 22*n2^2*n3*n5 - 
      34*n3^2*n5 + 13*d*n3^2*n5 - 7*n1*n3^2*n5 - 12*n2*n3^2*n5 - 2*n3^3*n5 + 
      72*n5^2 - 60*d*n5^2 + 12*d^2*n5^2 + 24*n1*n5^2 - 12*d*n1*n5^2 + 
      38*n2*n5^2 - 13*d*n2*n5^2 + 12*n1*n2*n5^2 + n2^2*n5^2 + 4*n3*n5^2 + 
      d*n3*n5^2 + 6*n1*n3*n5^2 - 6*n2*n3*n5^2 - 4*n3^2*n5^2 + 12*n5^3 - 
      6*d*n5^3 + 6*n2*n5^3 + 3*n3*n5^3)*j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, 
      -1, 1, 1, 1, 1, 0, 1])/((-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((24 - 12*d - 4*n1 + 2*d*n1 + 10*n2 + d*n2 - 
      n1*n2 - 2*n2^2 - 4*n3 + 5*d*n3 - 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 8*n5 - 
      4*d*n5 + 5*n2*n5 + n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, -1, 1, 1, 
      1, 1, 0, 2])/(2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-16 + 16*d - 4*d^2 - 8*n1 + 8*d*n1 - 2*d^2*n1 - 4*n2 - 4*d*n2 + 
      3*d^2*n2 - 6*n1*n2 + 3*d*n1*n2 + 6*n2^2 - 5*d*n2^2 - n1*n2^2 + 2*n2^3 - 
      16*n3 + 10*d*n3 - d^2*n3 - 16*n1*n3 + 12*d*n1*n3 - 2*d^2*n1*n3 + 
      12*n2*n3 - 15*d*n2*n3 + 3*d^2*n2*n3 - 9*n1*n2*n3 + 3*d*n1*n2*n3 + 
      13*n2^2*n3 - 5*d*n2^2*n3 - n1*n2^2*n3 + 2*n2^3*n3 + 8*n3^2 - 
      11*d*n3^2 + 3*d^2*n3^2 - 10*n1*n3^2 + 4*d*n1*n3^2 + 23*n2*n3^2 - 
      11*d*n2*n3^2 - 3*n1*n2*n3^2 + 7*n2^2*n3^2 + 10*n3^3 - 5*d*n3^3 - 
      2*n1*n3^3 + 7*n2*n3^3 + 2*n3^4 - 240*n5 + 288*d*n5 - 108*d^2*n5 + 
      12*d^3*n5 - 176*n1*n5 + 128*d*n1*n5 - 20*d^2*n1*n5 - 150*n2*n5 + 
      103*d*n2*n5 - 14*d^2*n2*n5 - 84*n1*n2*n5 + 18*d*n1*n2*n5 - 15*n2^2*n5 + 
      2*d*n2^2*n5 + 2*n1*n2^2*n5 - 94*n3*n5 + 63*d*n3*n5 - 8*d^2*n3*n5 - 
      32*n1*n3*n5 + 4*d*n1*n3*n5 - 32*n2*n3*n5 + 7*d*n2*n3*n5 + 
      6*n1*n2*n3*n5 - 3*n2^2*n3*n5 - 17*n3^2*n5 + 5*d*n3^2*n5 + 
      4*n1*n3^2*n5 - 6*n2*n3^2*n5 - 3*n3^3*n5 - 144*n5^2 + 120*d*n5^2 - 
      24*d^2*n5^2 - 48*n1*n5^2 + 24*d*n1*n5^2 - 76*n2*n5^2 + 26*d*n2*n5^2 - 
      24*n1*n2*n5^2 - 2*n2^2*n5^2 - 32*n3*n5^2 + 10*d*n3*n5^2 - 
      12*n1*n3*n5^2 + 2*n3^2*n5^2 - 24*n5^3 + 12*d*n5^3 - 12*n2*n5^3 - 
      6*n3*n5^3)*j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 1, 0])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-704 + 1088*d - 608*d^2 + 144*d^3 - 12*d^4 - 864*n1 + 976*d*n1 - 
      352*d^2*n1 + 40*d^3*n1 - 96*n1^2 + 72*d*n1^2 - 12*d^2*n1^2 - 560*n2 + 
      576*d*n2 - 176*d^2*n2 + 14*d^3*n2 - 712*n1*n2 + 476*d*n1*n2 - 
      72*d^2*n1*n2 - 48*n1^2*n2 + 12*d*n1^2*n2 - 56*n2^2 - 4*d*n2^2 + 
      14*d^2*n2^2 - 136*n1*n2^2 + 30*d*n1*n2^2 + 36*n2^3 - 22*d*n2^3 + 
      2*n1*n2^3 + 6*n2^4 - 176*n3 + 144*d*n3 - 24*d^2*n3 - 2*d^3*n3 - 
      392*n1*n3 + 260*d*n1*n3 - 38*d^2*n1*n3 - 24*n1^2*n3 + 6*d*n1^2*n3 + 
      108*n2*n3 - 150*d*n2*n3 + 45*d^2*n2*n3 - 146*n1*n2*n3 + 28*d*n1*n2*n3 + 
      132*n2^2*n3 - 66*d*n2^2*n3 + 7*n1*n2^2*n3 + 23*n2^3*n3 + 96*n3^2 - 
      94*d*n3^2 + 22*d^2*n3^2 - 36*n1*n3^2 + 5*d*n1*n3^2 + 124*n2*n3^2 - 
      55*d*n2*n3^2 + 7*n1*n2*n3^2 + 28*n2^2*n3^2 + 32*n3^3 - 13*d*n3^3 + 
      2*n1*n3^3 + 13*n2*n3^3 + 2*n3^4 - 800*n5 + 960*d*n5 - 372*d^2*n5 + 
      46*d^3*n5 - 464*n1*n5 + 380*d*n1*n5 - 74*d^2*n1*n5 - 24*n1^2*n5 + 
      12*d*n1^2*n5 - 640*n2*n5 + 472*d*n2*n5 - 82*d^2*n2*n5 - 308*n1*n2*n5 + 
      112*d*n1*n2*n5 - 12*n1^2*n2*n5 - 124*n2^2*n5 + 38*d*n2^2*n5 - 
      38*n1*n2^2*n5 - 2*n2^3*n5 - 320*n3*n5 + 224*d*n3*n5 - 35*d^2*n3*n5 - 
      168*n1*n3*n5 + 63*d*n1*n3*n5 - 6*n1^2*n3*n5 - 104*n2*n3*n5 + 
      22*d*n2*n3*n5 - 45*n1*n2*n3*n5 + 7*n2^2*n3*n5 - 10*n3^2*n5 - 
      4*d*n3^2*n5 - 13*n1*n3^2*n5 + 14*n2*n3^2*n5 + 5*n3^3*n5 - 256*n5^2 + 
      220*d*n5^2 - 46*d^2*n5^2 - 60*n1*n5^2 + 30*d*n1*n5^2 - 172*n2*n5^2 + 
      68*d*n2*n5^2 - 30*n1*n2*n5^2 - 22*n2^2*n5^2 - 96*n3*n5^2 + 
      39*d*n3*n5^2 - 15*n1*n3*n5^2 - 27*n2*n3*n5^2 - 8*n3^2*n5^2 - 24*n5^3 + 
      12*d*n5^3 - 12*n2*n5^3 - 6*n3*n5^3)*j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, 
      -1, 1, 1, 1, 1, 1, 1])/((-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((224 - 264*d + 96*d^2 - 10*d^3 + 96*n1 - 
      72*d*n1 + 12*d^2*n1 + 160*n2 - 100*d*n2 + 10*d^2*n2 + 48*n1*n2 - 
      12*d*n1*n2 + 16*n2^2 + 4*d*n2^2 - 4*n2^3 + 88*n3 - 46*d*n3 + d^2*n3 + 
      24*n1*n3 - 6*d*n1*n3 + 4*n2*n3 + 16*d*n2*n3 - 14*n2^2*n3 - 8*n3^2 + 
      10*d*n3^2 - 14*n2*n3^2 - 4*n3^3 + 120*n5 - 108*d*n5 + 24*d^2*n5 + 
      24*n1*n5 - 12*d*n1*n5 + 84*n2*n5 - 36*d*n2*n5 + 12*n1*n2*n5 + 
      12*n2^2*n5 + 54*n3*n5 - 24*d*n3*n5 + 6*n1*n3*n5 + 18*n2*n3*n5 + 
      6*n3^2*n5 + 12*n5^2 - 6*d*n5^2 + 6*n2*n5^2 + 3*n3*n5^2)*
     j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 2, 0])/
    ((-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((40 - 28*d + 4*d^2 + 4*n1 - 2*d*n1 + 14*n2 - d*n2 + n1*n2 - 2*n2^2 + 
      4*n3 + d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 16*n5 - 8*d*n5 + 7*n2*n5 + 
      5*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 2, 0, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-40 + 28*d - 4*d^2 - 4*n1 + 2*d*n1 - 14*n2 + d*n2 - n1*n2 + 2*n2^2 - 
      4*n3 - d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 16*n5 + 8*d*n5 - 7*n2*n5 - 
      5*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 2, 1, 0])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((112 - 128*d + 44*d^2 - 4*d^3 + 184*n1 - 136*d*n1 + 22*d^2*n1 + 12*n2 + 
      4*d*n2 - 5*d^2*n2 + 90*n1*n2 - 21*d*n1*n2 - 26*n2^2 + 11*d*n2^2 - 
      n1*n2^2 - 2*n2^3 - 32*n3 + 38*d*n3 - 11*d^2*n3 + 40*n1*n3 - 8*d*n1*n3 - 
      52*n2*n3 + 23*d*n2*n3 - 3*n1*n2*n3 - 7*n2^2*n3 - 24*n3^2 + 11*d*n3^2 - 
      2*n1*n3^2 - 7*n2*n3^2 - 2*n3^3 + 128*n5 - 104*d*n5 + 20*d^2*n5 + 
      48*n1*n5 - 24*d*n1*n5 + 58*n2*n5 - 17*d*n2*n5 + 24*n1*n2*n5 - 
      3*n2^2*n5 + 22*n3*n5 - 5*d*n3*n5 + 12*n1*n3*n5 - 6*n2*n3*n5 - 
      3*n3^2*n5 + 24*n5^2 - 12*d*n5^2 + 12*n2*n5^2 + 6*n3*n5^2)*
     j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, -1, 1, 2, 0, 1, 1, 1])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((8 - 4*d + 4*n1 - 2*d*n1 - 2*n2 + 3*d*n2 + n1*n2 - 2*n2^2 - 4*n3 + 
      3*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 8*n5 - 4*d*n5 + 3*n2*n5 + 
      3*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, -1, 2, 1, 0, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-8 + 4*d - 4*n1 + 2*d*n1 + 2*n2 - 3*d*n2 - n1*n2 + 2*n2^2 + 4*n3 - 
      3*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 16*n5 + 8*d*n5 - 4*n1*n5 + 
      2*d*n1*n5 - n2*n5 - 3*d*n2*n5 - n1*n2*n5 + 2*n2^2*n5 + n3*n5 - 
      3*d*n3*n5 - 2*n1*n3*n5 + 5*n2*n3*n5 + 2*n3^2*n5 - 8*n5^2 + 4*d*n5^2 - 
      3*n2*n5^2 - 3*n3*n5^2)*j[p4, n1, n2, n3, 1, 2 + n5, -1, 0, -1, 0, 1, 1, 
      1, 1, 1])/(2*(n2 - n3)*(4 - d + n5)*(2 - d + n1 + n5)) + 
   ((8 - 4*d + 4*n1 - 2*d*n1 - 2*n2 + 3*d*n2 + n1*n2 - 2*n2^2 - 4*n3 + 
      3*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 16*n5 - 8*d*n5 + 4*n1*n5 - 
      2*d*n1*n5 + n2*n5 + 3*d*n2*n5 + n1*n2*n5 - 2*n2^2*n5 - n3*n5 + 
      3*d*n3*n5 + 2*n1*n3*n5 - 5*n2*n3*n5 - 2*n3^2*n5 + 8*n5^2 - 4*d*n5^2 + 
      3*n2*n5^2 + 3*n3*n5^2)*j[p4, n1, n2, n3, 1, 2 + n5, -1, 0, -1, 1, 1, 1, 
      1, 0, 1])/(2*(n2 - n3)*(4 - d + n5)*(2 - d + n1 + n5)) + 
   ((-8 + 4*d - 4*n1 + 2*d*n1 + 2*n2 - 3*d*n2 - n1*n2 + 2*n2^2 + 4*n3 - 
      3*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 16*n5 + 8*d*n5 - 4*n1*n5 + 
      2*d*n1*n5 - n2*n5 - 3*d*n2*n5 - n1*n2*n5 + 2*n2^2*n5 + n3*n5 - 
      3*d*n3*n5 - 2*n1*n3*n5 + 5*n2*n3*n5 + 2*n3^2*n5 - 8*n5^2 + 4*d*n5^2 - 
      3*n2*n5^2 - 3*n3*n5^2)*j[p4, n1, n2, n3, 1, 2 + n5, -1, 0, -1, 1, 1, 1, 
      1, 1, 0])/(2*(n2 - n3)*(4 - d + n5)*(2 - d + n1 + n5)) + 
   ((-8 + 4*d - 4*n1 + 2*d*n1 + 2*n2 - 3*d*n2 - n1*n2 + 2*n2^2 + 4*n3 - 
      3*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 16*n5 + 8*d*n5 - 4*n1*n5 + 
      2*d*n1*n5 - n2*n5 - 3*d*n2*n5 - n1*n2*n5 + 2*n2^2*n5 + n3*n5 - 
      3*d*n3*n5 - 2*n1*n3*n5 + 5*n2*n3*n5 + 2*n3^2*n5 - 8*n5^2 + 4*d*n5^2 - 
      3*n2*n5^2 - 3*n3*n5^2)*j[p4, n1, n2, n3, 1, 2 + n5, -1, 0, -1, 1, 1, 1, 
      1, 1, 1])/(2*(n2 - n3)*(4 - d + n5)*(2 - d + n1 + n5)) + 
   ((88 - 68*d + 12*d^2 - 4*n1 + 2*d*n1 + 50*n2 - 15*d*n2 - n1*n2 + 2*n2^2 + 
      28*n3 - 9*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 + 104*n5 - 76*d*n5 + 
      12*d^2*n5 - 4*n1*n5 + 2*d*n1*n5 + 59*n2*n5 - 15*d*n2*n5 - n1*n2*n5 + 
      2*n2^2*n5 + 31*n3*n5 - 9*d*n3*n5 - 2*n1*n3*n5 + 5*n2*n3*n5 + 
      2*n3^2*n5 + 16*n5^2 - 8*d*n5^2 + 9*n2*n5^2 + 3*n3*n5^2)*
     j[p4, n1, n2, n3, 1, 2 + n5, 0, -1, -1, 0, 1, 1, 1, 1, 1])/
    (2*(n2 - n3)*(4 - d + n5)*(2 - d + n1 + n5)) + 
   ((8 - 4*d + 4*n1 - 2*d*n1 - 2*n2 + 3*d*n2 + n1*n2 - 2*n2^2 - 4*n3 + 
      3*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 16*n5 - 8*d*n5 + 4*n1*n5 - 
      2*d*n1*n5 + n2*n5 + 3*d*n2*n5 + n1*n2*n5 - 2*n2^2*n5 - n3*n5 + 
      3*d*n3*n5 + 2*n1*n3*n5 - 5*n2*n3*n5 - 2*n3^2*n5 + 8*n5^2 - 4*d*n5^2 + 
      3*n2*n5^2 + 3*n3*n5^2)*j[p4, n1, n2, n3, 1, 2 + n5, 0, -1, -1, 1, 1, 1, 
      1, 0, 1])/(2*(n2 - n3)*(4 - d + n5)*(2 - d + n1 + n5)) + 
   ((-8 + 4*d - 4*n1 + 2*d*n1 + 2*n2 - 3*d*n2 - n1*n2 + 2*n2^2 + 4*n3 - 
      3*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 16*n5 + 8*d*n5 - 4*n1*n5 + 
      2*d*n1*n5 - n2*n5 - 3*d*n2*n5 - n1*n2*n5 + 2*n2^2*n5 + n3*n5 - 
      3*d*n3*n5 - 2*n1*n3*n5 + 5*n2*n3*n5 + 2*n3^2*n5 - 8*n5^2 + 4*d*n5^2 - 
      3*n2*n5^2 - 3*n3*n5^2)*j[p4, n1, n2, n3, 1, 2 + n5, 0, -1, -1, 1, 1, 1, 
      1, 1, 0])/(2*(n2 - n3)*(4 - d + n5)*(2 - d + n1 + n5)) + 
   ((-104 + 76*d - 12*d^2 - 4*n1 + 2*d*n1 - 46*n2 + 9*d*n2 - n1*n2 + 2*n2^2 - 
      20*n3 + 3*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 136*n5 + 92*d*n5 - 
      12*d^2*n5 - 4*n1*n5 + 2*d*n1*n5 - 61*n2*n5 + 9*d*n2*n5 - n1*n2*n5 + 
      2*n2^2*n5 - 29*n3*n5 + 3*d*n3*n5 - 2*n1*n3*n5 + 5*n2*n3*n5 + 
      2*n3^2*n5 - 32*n5^2 + 16*d*n5^2 - 15*n2*n5^2 - 9*n3*n5^2)*
     j[p4, n1, n2, n3, 1, 2 + n5, 0, -1, -1, 1, 1, 1, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-8 + 4*d - 4*n1 + 2*d*n1 + 2*n2 - 3*d*n2 - n1*n2 + 2*n2^2 + 4*n3 - 
      3*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 16*n5 + 8*d*n5 - 4*n1*n5 + 
      2*d*n1*n5 - n2*n5 - 3*d*n2*n5 - n1*n2*n5 + 2*n2^2*n5 + n3*n5 - 
      3*d*n3*n5 - 2*n1*n3*n5 + 5*n2*n3*n5 + 2*n3^2*n5 - 8*n5^2 + 4*d*n5^2 - 
      3*n2*n5^2 - 3*n3*n5^2)*j[p4, n1, n2, n3, 1, 2 + n5, 0, 0, -2, 0, 1, 1, 
      1, 1, 1])/(2*(n2 - n3)*(4 - d + n5)*(2 - d + n1 + n5)) + 
   ((-104 + 76*d - 12*d^2 - 4*n1 + 2*d*n1 - 46*n2 + 9*d*n2 - n1*n2 + 2*n2^2 - 
      20*n3 + 3*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 136*n5 + 92*d*n5 - 
      12*d^2*n5 - 4*n1*n5 + 2*d*n1*n5 - 61*n2*n5 + 9*d*n2*n5 - n1*n2*n5 + 
      2*n2^2*n5 - 29*n3*n5 + 3*d*n3*n5 - 2*n1*n3*n5 + 5*n2*n3*n5 + 
      2*n3^2*n5 - 32*n5^2 + 16*d*n5^2 - 15*n2*n5^2 - 9*n3*n5^2)*
     j[p4, n1, n2, n3, 1, 2 + n5, 0, 0, -2, 1, 1, 1, 1, 0, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((104 - 76*d + 12*d^2 + 4*n1 - 2*d*n1 + 46*n2 - 9*d*n2 + n1*n2 - 2*n2^2 + 
      20*n3 - 3*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 136*n5 - 92*d*n5 + 
      12*d^2*n5 + 4*n1*n5 - 2*d*n1*n5 + 61*n2*n5 - 9*d*n2*n5 + n1*n2*n5 - 
      2*n2^2*n5 + 29*n3*n5 - 3*d*n3*n5 + 2*n1*n3*n5 - 5*n2*n3*n5 - 
      2*n3^2*n5 + 32*n5^2 - 16*d*n5^2 + 15*n2*n5^2 + 9*n3*n5^2)*
     j[p4, n1, n2, n3, 1, 2 + n5, 0, 0, -2, 1, 1, 1, 1, 1, 0])/
    (2*(n2 - n3)*(4 - d + n5)*(2 - d + n1 + n5)) + 
   ((368 - 416*d + 140*d^2 - 12*d^3 + 184*n1 - 136*d*n1 + 22*d^2*n1 + 
      236*n2 - 124*d*n2 + 3*d^2*n2 + 90*n1*n2 - 21*d*n1*n2 + 6*n2^2 + 
      19*d*n2^2 - n1*n2^2 - 10*n2^3 + 96*n3 - 18*d*n3 - 15*d^2*n3 + 
      40*n1*n3 - 8*d*n1*n3 - 44*n2*n3 + 55*d*n2*n3 - 3*n1*n2*n3 - 
      35*n2^2*n3 - 40*n3^2 + 31*d*n3^2 - 2*n1*n3^2 - 35*n2*n3^2 - 10*n3^3 + 
      224*n5 - 200*d*n5 + 44*d^2*n5 + 48*n1*n5 - 24*d*n1*n5 + 154*n2*n5 - 
      65*d*n2*n5 + 24*n1*n2*n5 + 21*n2^2*n5 + 94*n3*n5 - 41*d*n3*n5 + 
      12*n1*n3*n5 + 30*n2*n3*n5 + 9*n3^2*n5 + 24*n5^2 - 12*d*n5^2 + 
      12*n2*n5^2 + 6*n3*n5^2)*j[p4, n1, n2, n3, 2, n5, 0, 0, -1, 0, 1, 1, 1, 
      1, 1])/(2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((-368 + 416*d - 140*d^2 + 12*d^3 - 184*n1 + 
      136*d*n1 - 22*d^2*n1 - 236*n2 + 124*d*n2 - 3*d^2*n2 - 90*n1*n2 + 
      21*d*n1*n2 - 6*n2^2 - 19*d*n2^2 + n1*n2^2 + 10*n2^3 - 96*n3 + 18*d*n3 + 
      15*d^2*n3 - 40*n1*n3 + 8*d*n1*n3 + 44*n2*n3 - 55*d*n2*n3 + 3*n1*n2*n3 + 
      35*n2^2*n3 + 40*n3^2 - 31*d*n3^2 + 2*n1*n3^2 + 35*n2*n3^2 + 10*n3^3 - 
      224*n5 + 200*d*n5 - 44*d^2*n5 - 48*n1*n5 + 24*d*n1*n5 - 154*n2*n5 + 
      65*d*n2*n5 - 24*n1*n2*n5 - 21*n2^2*n5 - 94*n3*n5 + 41*d*n3*n5 - 
      12*n1*n3*n5 - 30*n2*n3*n5 - 9*n3^2*n5 - 24*n5^2 + 12*d*n5^2 - 
      12*n2*n5^2 - 6*n3*n5^2)*j[p4, n1, n2, n3, 2, n5, 0, 0, -1, 1, 0, 1, 1, 
      1, 1])/(2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((368 - 416*d + 140*d^2 - 12*d^3 + 184*n1 - 
      136*d*n1 + 22*d^2*n1 + 236*n2 - 124*d*n2 + 3*d^2*n2 + 90*n1*n2 - 
      21*d*n1*n2 + 6*n2^2 + 19*d*n2^2 - n1*n2^2 - 10*n2^3 + 96*n3 - 18*d*n3 - 
      15*d^2*n3 + 40*n1*n3 - 8*d*n1*n3 - 44*n2*n3 + 55*d*n2*n3 - 3*n1*n2*n3 - 
      35*n2^2*n3 - 40*n3^2 + 31*d*n3^2 - 2*n1*n3^2 - 35*n2*n3^2 - 10*n3^3 + 
      224*n5 - 200*d*n5 + 44*d^2*n5 + 48*n1*n5 - 24*d*n1*n5 + 154*n2*n5 - 
      65*d*n2*n5 + 24*n1*n2*n5 + 21*n2^2*n5 + 94*n3*n5 - 41*d*n3*n5 + 
      12*n1*n3*n5 + 30*n2*n3*n5 + 9*n3^2*n5 + 24*n5^2 - 12*d*n5^2 + 
      12*n2*n5^2 + 6*n3*n5^2)*j[p4, n1, n2, n3, 2, n5, 0, 0, -1, 1, 1, 0, 1, 
      1, 1])/(2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((-304 + 368*d - 140*d^2 + 16*d^3 - 184*n1 + 
      136*d*n1 - 22*d^2*n1 - 204*n2 + 140*d*n2 - 19*d^2*n2 - 90*n1*n2 + 
      21*d*n1*n2 - 22*n2^2 + d*n2^2 + n1*n2^2 + 2*n2^3 - 112*n3 + 70*d*n3 - 
      7*d^2*n3 - 40*n1*n3 + 8*d*n1*n3 - 20*n2*n3 - 5*d*n2*n3 + 3*n1*n2*n3 + 
      7*n2^2*n3 - 5*d*n3^2 + 2*n1*n3^2 + 7*n2*n3^2 + 2*n3^3 - 176*n5 + 
      152*d*n5 - 32*d^2*n5 - 48*n1*n5 + 24*d*n1*n5 - 106*n2*n5 + 41*d*n2*n5 - 
      24*n1*n2*n5 - 9*n2^2*n5 - 58*n3*n5 + 23*d*n3*n5 - 12*n1*n3*n5 - 
      12*n2*n3*n5 - 3*n3^2*n5 - 24*n5^2 + 12*d*n5^2 - 12*n2*n5^2 - 6*n3*n5^2)*
     j[p4, n1, n2, n3, 2, n5, 0, 0, -1, 1, 1, 1, 1, 1, 0])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-8 + 4*d - 4*n1 + 2*d*n1 + 2*n2 - 3*d*n2 - n1*n2 + 2*n2^2 + 4*n3 - 
      3*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 8*n5 + 4*d*n5 - 3*n2*n5 - 
      3*n3*n5)*j[p4, n1, n2, n3, 2, 1 + n5, -1, 0, -1, 0, 1, 1, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((8 - 4*d + 4*n1 - 2*d*n1 - 2*n2 + 3*d*n2 + n1*n2 - 2*n2^2 - 4*n3 + 
      3*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 8*n5 - 4*d*n5 + 3*n2*n5 + 
      3*n3*n5)*j[p4, n1, n2, n3, 2, 1 + n5, -1, 0, -1, 1, 0, 1, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-8 + 4*d - 4*n1 + 2*d*n1 + 2*n2 - 3*d*n2 - n1*n2 + 2*n2^2 + 4*n3 - 
      3*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 8*n5 + 4*d*n5 - 3*n2*n5 - 
      3*n3*n5)*j[p4, n1, n2, n3, 2, 1 + n5, -1, 0, -1, 1, 1, 0, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((24 - 20*d + 4*d^2 - 4*n1 + 2*d*n1 + 18*n2 - 7*d*n2 - n1*n2 + 2*n2^2 + 
      12*n3 - 5*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 + n2*n5 - n3*n5)*
     j[p4, n1, n2, n3, 2, 1 + n5, -1, 0, -1, 1, 1, 1, 1, 1, 0])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-368 + 416*d - 140*d^2 + 12*d^3 - 184*n1 + 136*d*n1 - 22*d^2*n1 - 
      236*n2 + 124*d*n2 - 3*d^2*n2 - 90*n1*n2 + 21*d*n1*n2 - 6*n2^2 - 
      19*d*n2^2 + n1*n2^2 + 10*n2^3 - 96*n3 + 18*d*n3 + 15*d^2*n3 - 
      40*n1*n3 + 8*d*n1*n3 + 44*n2*n3 - 55*d*n2*n3 + 3*n1*n2*n3 + 
      35*n2^2*n3 + 40*n3^2 - 31*d*n3^2 + 2*n1*n3^2 + 35*n2*n3^2 + 10*n3^3 - 
      224*n5 + 200*d*n5 - 44*d^2*n5 - 48*n1*n5 + 24*d*n1*n5 - 154*n2*n5 + 
      65*d*n2*n5 - 24*n1*n2*n5 - 21*n2^2*n5 - 94*n3*n5 + 41*d*n3*n5 - 
      12*n1*n3*n5 - 30*n2*n3*n5 - 9*n3^2*n5 - 24*n5^2 + 12*d*n5^2 - 
      12*n2*n5^2 - 6*n3*n5^2)*j[p4, n1, n2, n3, 2, 1 + n5, 0, -1, -1, 0, 1, 
      1, 1, 1, 1])/(2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((368 - 416*d + 140*d^2 - 12*d^3 + 184*n1 - 
      136*d*n1 + 22*d^2*n1 + 236*n2 - 124*d*n2 + 3*d^2*n2 + 90*n1*n2 - 
      21*d*n1*n2 + 6*n2^2 + 19*d*n2^2 - n1*n2^2 - 10*n2^3 + 96*n3 - 18*d*n3 - 
      15*d^2*n3 + 40*n1*n3 - 8*d*n1*n3 - 44*n2*n3 + 55*d*n2*n3 - 3*n1*n2*n3 - 
      35*n2^2*n3 - 40*n3^2 + 31*d*n3^2 - 2*n1*n3^2 - 35*n2*n3^2 - 10*n3^3 + 
      224*n5 - 200*d*n5 + 44*d^2*n5 + 48*n1*n5 - 24*d*n1*n5 + 154*n2*n5 - 
      65*d*n2*n5 + 24*n1*n2*n5 + 21*n2^2*n5 + 94*n3*n5 - 41*d*n3*n5 + 
      12*n1*n3*n5 + 30*n2*n3*n5 + 9*n3^2*n5 + 24*n5^2 - 12*d*n5^2 + 
      12*n2*n5^2 + 6*n3*n5^2)*j[p4, n1, n2, n3, 2, 1 + n5, 0, -1, -1, 1, 0, 
      1, 1, 1, 1])/(2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((-368 + 416*d - 140*d^2 + 12*d^3 - 184*n1 + 
      136*d*n1 - 22*d^2*n1 - 236*n2 + 124*d*n2 - 3*d^2*n2 - 90*n1*n2 + 
      21*d*n1*n2 - 6*n2^2 - 19*d*n2^2 + n1*n2^2 + 10*n2^3 - 96*n3 + 18*d*n3 + 
      15*d^2*n3 - 40*n1*n3 + 8*d*n1*n3 + 44*n2*n3 - 55*d*n2*n3 + 3*n1*n2*n3 + 
      35*n2^2*n3 + 40*n3^2 - 31*d*n3^2 + 2*n1*n3^2 + 35*n2*n3^2 + 10*n3^3 - 
      224*n5 + 200*d*n5 - 44*d^2*n5 - 48*n1*n5 + 24*d*n1*n5 - 154*n2*n5 + 
      65*d*n2*n5 - 24*n1*n2*n5 - 21*n2^2*n5 - 94*n3*n5 + 41*d*n3*n5 - 
      12*n1*n3*n5 - 30*n2*n3*n5 - 9*n3^2*n5 - 24*n5^2 + 12*d*n5^2 - 
      12*n2*n5^2 - 6*n3*n5^2)*j[p4, n1, n2, n3, 2, 1 + n5, 0, -1, -1, 1, 1, 
      0, 1, 1, 1])/(2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((48 - 48*d + 12*d^2 + 184*n1 - 136*d*n1 + 
      22*d^2*n1 - 52*n2 + 52*d*n2 - 13*d^2*n2 + 90*n1*n2 - 21*d*n1*n2 - 
      42*n2^2 + 15*d*n2^2 - n1*n2^2 - 2*n2^3 - 80*n3 + 74*d*n3 - 17*d^2*n3 + 
      40*n1*n3 - 8*d*n1*n3 - 76*n2*n3 + 29*d*n2*n3 - 3*n1*n2*n3 - 7*n2^2*n3 - 
      32*n3^2 + 13*d*n3^2 - 2*n1*n3^2 - 7*n2*n3^2 - 2*n3^3 + 112*n5 - 
      88*d*n5 + 16*d^2*n5 + 48*n1*n5 - 24*d*n1*n5 + 42*n2*n5 - 9*d*n2*n5 + 
      24*n1*n2*n5 - 7*n2^2*n5 + 10*n3*n5 + d*n3*n5 + 12*n1*n3*n5 - 
      12*n2*n3*n5 - 5*n3^2*n5 + 24*n5^2 - 12*d*n5^2 + 12*n2*n5^2 + 6*n3*n5^2)*
     j[p4, n1, n2, n3, 2, 1 + n5, 0, -1, -1, 1, 1, 1, 1, 1, 0])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((8 - 4*d + 4*n1 - 2*d*n1 - 2*n2 + 3*d*n2 + n1*n2 - 2*n2^2 - 4*n3 + 
      3*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 8*n5 - 4*d*n5 + 3*n2*n5 + 
      3*n3*n5)*j[p4, n1, n2, n3, 2, 1 + n5, 0, 0, -2, 0, 1, 1, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-8 + 4*d - 4*n1 + 2*d*n1 + 2*n2 - 3*d*n2 - n1*n2 + 2*n2^2 + 4*n3 - 
      3*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 8*n5 + 4*d*n5 - 3*n2*n5 - 
      3*n3*n5)*j[p4, n1, n2, n3, 2, 1 + n5, 0, 0, -2, 1, 0, 1, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((8 - 4*d + 4*n1 - 2*d*n1 - 2*n2 + 3*d*n2 + n1*n2 - 2*n2^2 - 4*n3 + 
      3*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 8*n5 - 4*d*n5 + 3*n2*n5 + 
      3*n3*n5)*j[p4, n1, n2, n3, 2, 1 + n5, 0, 0, -2, 1, 1, 0, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((104 - 76*d + 12*d^2 + 4*n1 - 2*d*n1 + 46*n2 - 9*d*n2 + n1*n2 - 2*n2^2 + 
      20*n3 - 3*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 32*n5 - 16*d*n5 + 
      15*n2*n5 + 9*n3*n5)*j[p4, n1, n2, n3, 2, 1 + n5, 0, 0, -2, 1, 1, 1, 1, 
      1, 0])/(2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-120*n3 + 84*d*n3 - 12*d^2*n3 - 12*n1*n3 + 6*d*n1*n3 - 42*n2*n3 + 
      3*d*n2*n3 - 3*n1*n2*n3 + 6*n2^2*n3 - 12*n3^2 - 3*d*n3^2 - 6*n1*n3^2 + 
      15*n2*n3^2 + 6*n3^3 - 48*n3*n5 + 24*d*n3*n5 - 21*n2*n3*n5 - 15*n3^2*n5)*
     j[p4, n1, n2, 1 + n3, 0, 1 + n5, 0, -1, -1, 1, 1, 1, 1, 1, 1])/
    (2*(-n2 + n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-120*n3 + 84*d*n3 - 12*d^2*n3 - 12*n1*n3 + 6*d*n1*n3 - 42*n2*n3 + 
      3*d*n2*n3 - 3*n1*n2*n3 + 6*n2^2*n3 - 12*n3^2 - 3*d*n3^2 - 6*n1*n3^2 + 
      15*n2*n3^2 + 6*n3^3 - 48*n3*n5 + 24*d*n3*n5 - 21*n2*n3*n5 - 15*n3^2*n5)*
     j[p4, n1, n2, 1 + n3, 0, 1 + n5, 0, 0, -2, 1, 1, 1, 1, 1, 1])/
    (2*(-n2 + n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-192*n3 + 224*d*n3 - 80*d^2*n3 + 8*d^3*n3 - 96*n1*n3 + 72*d*n1*n3 - 
      12*d^2*n1*n3 - 128*n2*n3 + 76*d*n2*n3 - 6*d^2*n2*n3 - 48*n1*n2*n3 + 
      12*d*n1*n2*n3 - 8*n2^2*n3 - 6*d*n2^2*n3 + 4*n2^3*n3 - 64*n3^2 + 
      28*d*n3^2 + 2*d^2*n3^2 - 24*n1*n3^2 + 6*d*n1*n3^2 + 8*n2*n3^2 - 
      19*d*n2*n3^2 + 14*n2^2*n3^2 + 12*n3^3 - 11*d*n3^3 + 14*n2*n3^3 + 
      4*n3^4 - 112*n3*n5 + 100*d*n3*n5 - 22*d^2*n3*n5 - 24*n1*n3*n5 + 
      12*d*n1*n3*n5 - 76*n2*n3*n5 + 32*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 
      10*n2^2*n3*n5 - 48*n3^2*n5 + 21*d*n3^2*n5 - 6*n1*n3^2*n5 - 
      15*n2*n3^2*n5 - 5*n3^3*n5 - 12*n3*n5^2 + 6*d*n3*n5^2 - 6*n2*n3*n5^2 - 
      3*n3^2*n5^2)*j[p4, n1, n2, 1 + n3, 0, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 1, 
      1])/((-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((304*n3 - 352*d*n3 + 124*d^2*n3 - 12*d^3*n3 + 184*n1*n3 - 136*d*n1*n3 + 
      22*d^2*n1*n3 + 188*n2*n3 - 108*d*n2*n3 + 7*d^2*n2*n3 + 90*n1*n2*n3 - 
      21*d*n1*n2*n3 + 6*n2^2*n3 + 11*d*n2^2*n3 - n1*n2^2*n3 - 6*n2^3*n3 + 
      80*n3^2 - 26*d*n3^2 - 7*d^2*n3^2 + 40*n1*n3^2 - 8*d*n1*n3^2 - 
      24*n2*n3^2 + 33*d*n2*n3^2 - 3*n1*n2*n3^2 - 21*n2^2*n3^2 - 24*n3^3 + 
      19*d*n3^3 - 2*n1*n3^3 - 21*n2*n3^3 - 6*n3^4 + 192*n3*n5 - 168*d*n3*n5 + 
      36*d^2*n3*n5 + 48*n1*n3*n5 - 24*d*n1*n3*n5 + 122*n2*n3*n5 - 
      49*d*n2*n3*n5 + 24*n1*n2*n3*n5 + 13*n2^2*n3*n5 + 70*n3^2*n5 - 
      29*d*n3^2*n5 + 12*n1*n3^2*n5 + 18*n2*n3^2*n5 + 5*n3^3*n5 + 24*n3*n5^2 - 
      12*d*n3*n5^2 + 12*n2*n3*n5^2 + 6*n3^2*n5^2)*j[p4, n1, n2, 1 + n3, 1, 
      n5, 0, 0, -1, 1, 1, 1, 1, 0, 1])/(2*(-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-304*n3 + 352*d*n3 - 124*d^2*n3 + 12*d^3*n3 - 184*n1*n3 + 136*d*n1*n3 - 
      22*d^2*n1*n3 - 188*n2*n3 + 108*d*n2*n3 - 7*d^2*n2*n3 - 90*n1*n2*n3 + 
      21*d*n1*n2*n3 - 6*n2^2*n3 - 11*d*n2^2*n3 + n1*n2^2*n3 + 6*n2^3*n3 - 
      80*n3^2 + 26*d*n3^2 + 7*d^2*n3^2 - 40*n1*n3^2 + 8*d*n1*n3^2 + 
      24*n2*n3^2 - 33*d*n2*n3^2 + 3*n1*n2*n3^2 + 21*n2^2*n3^2 + 24*n3^3 - 
      19*d*n3^3 + 2*n1*n3^3 + 21*n2*n3^3 + 6*n3^4 - 192*n3*n5 + 168*d*n3*n5 - 
      36*d^2*n3*n5 - 48*n1*n3*n5 + 24*d*n1*n3*n5 - 122*n2*n3*n5 + 
      49*d*n2*n3*n5 - 24*n1*n2*n3*n5 - 13*n2^2*n3*n5 - 70*n3^2*n5 + 
      29*d*n3^2*n5 - 12*n1*n3^2*n5 - 18*n2*n3^2*n5 - 5*n3^3*n5 - 24*n3*n5^2 + 
      12*d*n3*n5^2 - 12*n2*n3*n5^2 - 6*n3^2*n5^2)*j[p4, n1, n2, 1 + n3, 1, 
      1 + n5, 0, -1, -1, 0, 1, 1, 1, 1, 1])/(2*(-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((192*n3 - 216*d*n3 + 72*d^2*n3 - 6*d^3*n3 + 96*n1*n3 - 72*d*n1*n3 + 
      12*d^2*n1*n3 + 120*n2*n3 - 60*d*n2*n3 + 48*n1*n2*n3 - 12*d*n1*n2*n3 + 
      12*d*n2^2*n3 - 6*n2^3*n3 + 48*n3^2 - 6*d*n3^2 - 9*d^2*n3^2 + 
      24*n1*n3^2 - 6*d*n1*n3^2 - 30*n2*n3^2 + 33*d*n2*n3^2 - 21*n2^2*n3^2 - 
      24*n3^3 + 18*d*n3^3 - 21*n2*n3^3 - 6*n3^4 + 120*n3*n5 - 108*d*n3*n5 + 
      24*d^2*n3*n5 + 24*n1*n3*n5 - 12*d*n1*n3*n5 + 84*n2*n3*n5 - 
      36*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 12*n2^2*n3*n5 + 54*n3^2*n5 - 
      24*d*n3^2*n5 + 6*n1*n3^2*n5 + 18*n2*n3^2*n5 + 6*n3^3*n5 + 12*n3*n5^2 - 
      6*d*n3*n5^2 + 6*n2*n3*n5^2 + 3*n3^2*n5^2)*j[p4, n1, n2, 1 + n3, 1, 
      1 + n5, 0, -1, -1, 1, 0, 1, 1, 1, 1])/((-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-192*n3 + 216*d*n3 - 72*d^2*n3 + 6*d^3*n3 - 96*n1*n3 + 72*d*n1*n3 - 
      12*d^2*n1*n3 - 120*n2*n3 + 60*d*n2*n3 - 48*n1*n2*n3 + 12*d*n1*n2*n3 - 
      12*d*n2^2*n3 + 6*n2^3*n3 - 48*n3^2 + 6*d*n3^2 + 9*d^2*n3^2 - 
      24*n1*n3^2 + 6*d*n1*n3^2 + 30*n2*n3^2 - 33*d*n2*n3^2 + 21*n2^2*n3^2 + 
      24*n3^3 - 18*d*n3^3 + 21*n2*n3^3 + 6*n3^4 - 120*n3*n5 + 108*d*n3*n5 - 
      24*d^2*n3*n5 - 24*n1*n3*n5 + 12*d*n1*n3*n5 - 84*n2*n3*n5 + 
      36*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 12*n2^2*n3*n5 - 54*n3^2*n5 + 
      24*d*n3^2*n5 - 6*n1*n3^2*n5 - 18*n2*n3^2*n5 - 6*n3^3*n5 - 12*n3*n5^2 + 
      6*d*n3*n5^2 - 6*n2*n3*n5^2 - 3*n3^2*n5^2)*j[p4, n1, n2, 1 + n3, 1, 
      1 + n5, 0, -1, -1, 1, 1, 0, 1, 1, 1])/((-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((72*n3 - 44*d*n3 + 4*d^2*n3 + 4*n1*n3 - 2*d*n1*n3 + 22*n2*n3 + 
      3*d*n2*n3 + n1*n2*n3 - 6*n2^2*n3 - 4*n3^2 + 9*d*n3^2 + 2*n1*n3^2 - 
      15*n2*n3^2 - 6*n3^3 + 32*n3*n5 - 16*d*n3*n5 + 15*n2*n3*n5 + 9*n3^2*n5)*
     j[p4, n1, n2, 1 + n3, 1, 1 + n5, 0, -1, -1, 1, 1, 1, 0, 1, 1])/
    (2*(-n2 + n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-104*n3 + 68*d*n3 - 8*d^2*n3 - 4*n1*n3 + 2*d*n1*n3 - 38*n2*n3 + 
      d*n2*n3 - n1*n2*n3 + 6*n2^2*n3 - 4*n3^2 - 7*d*n3^2 - 2*n1*n3^2 + 
      15*n2*n3^2 + 6*n3^3 - 40*n3*n5 + 20*d*n3*n5 - 19*n2*n3*n5 - 11*n3^2*n5)*
     j[p4, n1, n2, 1 + n3, 1, 1 + n5, 0, -1, -1, 1, 1, 1, 1, 0, 1])/
    (2*(-n2 + n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((120*n3 - 84*d*n3 + 12*d^2*n3 + 12*n1*n3 - 6*d*n1*n3 + 42*n2*n3 - 
      3*d*n2*n3 + 3*n1*n2*n3 - 6*n2^2*n3 + 12*n3^2 + 3*d*n3^2 + 6*n1*n3^2 - 
      15*n2*n3^2 - 6*n3^3 + 48*n3*n5 - 24*d*n3*n5 + 21*n2*n3*n5 + 15*n3^2*n5)*
     j[p4, n1, n2, 1 + n3, 1, 1 + n5, 0, -1, -1, 1, 1, 1, 1, 1, 0])/
    (2*(-n2 + n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((8*n3 - 4*d*n3 + 4*n1*n3 - 2*d*n1*n3 - 2*n2*n3 + 3*d*n2*n3 + n1*n2*n3 - 
      2*n2^2*n3 - 4*n3^2 + 3*d*n3^2 + 2*n1*n3^2 - 5*n2*n3^2 - 2*n3^3 + 
      8*n3*n5 - 4*d*n3*n5 + 3*n2*n3*n5 + 3*n3^2*n5)*
     j[p4, n1, n2, 1 + n3, 1, 1 + n5, 0, 0, -2, 1, 0, 1, 1, 1, 1])/
    ((-n2 + n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-8*n3 + 4*d*n3 - 4*n1*n3 + 2*d*n1*n3 + 2*n2*n3 - 3*d*n2*n3 - n1*n2*n3 + 
      2*n2^2*n3 + 4*n3^2 - 3*d*n3^2 - 2*n1*n3^2 + 5*n2*n3^2 + 2*n3^3 - 
      8*n3*n5 + 4*d*n3*n5 - 3*n2*n3*n5 - 3*n3^2*n5)*
     j[p4, n1, n2, 1 + n3, 1, 1 + n5, 0, 0, -2, 1, 1, 0, 1, 1, 1])/
    ((-n2 + n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((8*n3 - 4*d*n3 + 4*n1*n3 - 2*d*n1*n3 - 2*n2*n3 + 3*d*n2*n3 + n1*n2*n3 - 
      2*n2^2*n3 - 4*n3^2 + 3*d*n3^2 + 2*n1*n3^2 - 5*n2*n3^2 - 2*n3^3 + 
      8*n3*n5 - 4*d*n3*n5 + 3*n2*n3*n5 + 3*n3^2*n5)*
     j[p4, n1, n2, 1 + n3, 1, 1 + n5, 0, 0, -2, 1, 1, 1, 0, 1, 1])/
    (2*(-n2 + n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((48*n3 - 56*d*n3 + 20*d^2*n3 - 2*d^3*n3 + 88*n1*n3 - 64*d*n1*n3 + 
      10*d^2*n1*n3 + 4*n2*n3 - d^2*n2*n3 + 42*n1*n2*n3 - 9*d*n1*n2*n3 - 
      10*n2^2*n3 + 3*d*n2^2*n3 - n1*n2^2*n3 - 16*n3^2 + 16*d*n3^2 - 
      4*d^2*n3^2 + 16*n1*n3^2 - 2*d*n1*n3^2 - 18*n2*n3^2 + 6*d*n2*n3^2 - 
      3*n1*n2*n3^2 - 8*n3^3 + 3*d*n3^3 - 2*n1*n3^3 + 56*n3*n5 - 44*d*n3*n5 + 
      8*d^2*n3*n5 + 24*n1*n3*n5 - 12*d*n1*n3*n5 + 22*n2*n3*n5 - 
      5*d*n2*n3*n5 + 12*n1*n2*n3*n5 - 3*n2^2*n3*n5 + 4*n3^2*n5 + d*n3^2*n5 + 
      6*n1*n3^2*n5 - 6*n2*n3^2*n5 - 3*n3^3*n5 + 12*n3*n5^2 - 6*d*n3*n5^2 + 
      6*n2*n3*n5^2 + 3*n3^2*n5^2)*j[p4, n1, n2, 1 + n3, 1, 1 + n5, 0, 0, -2, 
      1, 1, 1, 1, 0, 1])/((-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((120*n3 - 84*d*n3 + 12*d^2*n3 + 12*n1*n3 - 
      6*d*n1*n3 + 42*n2*n3 - 3*d*n2*n3 + 3*n1*n2*n3 - 6*n2^2*n3 + 12*n3^2 + 
      3*d*n3^2 + 6*n1*n3^2 - 15*n2*n3^2 - 6*n3^3 + 48*n3*n5 - 24*d*n3*n5 + 
      21*n2*n3*n5 + 15*n3^2*n5)*j[p4, n1, n2, 1 + n3, 1, 1 + n5, 0, 0, -2, 1, 
      1, 1, 1, 1, 0])/(2*(-n2 + n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-8*n3 + 4*d*n3 - 4*n1*n3 + 2*d*n1*n3 + 2*n2*n3 - 3*d*n2*n3 - n1*n2*n3 + 
      2*n2^2*n3 + 4*n3^2 - 3*d*n3^2 - 2*n1*n3^2 + 5*n2*n3^2 + 2*n3^3 - 
      8*n3*n5 + 4*d*n3*n5 - 3*n2*n3*n5 - 3*n3^2*n5)*
     j[p4, n1, n2, 1 + n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 0, 1, 1])/
    (2*(-n2 + n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-24*n3 + 12*d*n3 + 4*n1*n3 - 2*d*n1*n3 - 10*n2*n3 - d*n2*n3 + n1*n2*n3 + 
      2*n2^2*n3 + 4*n3^2 - 5*d*n3^2 + 2*n1*n3^2 + 5*n2*n3^2 + 2*n3^3 - 
      8*n3*n5 + 4*d*n3*n5 - 5*n2*n3*n5 - n3^2*n5)*j[p4, n1, n2, 1 + n3, 1, 
      1 + n5, 0, 0, -1, 1, 1, 1, 1, 0, 1])/(2*(-n2 + n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((192*n3 - 224*d*n3 + 80*d^2*n3 - 8*d^3*n3 + 
      96*n1*n3 - 72*d*n1*n3 + 12*d^2*n1*n3 + 128*n2*n3 - 76*d*n2*n3 + 
      6*d^2*n2*n3 + 48*n1*n2*n3 - 12*d*n1*n2*n3 + 8*n2^2*n3 + 6*d*n2^2*n3 - 
      4*n2^3*n3 + 64*n3^2 - 28*d*n3^2 - 2*d^2*n3^2 + 24*n1*n3^2 - 
      6*d*n1*n3^2 - 8*n2*n3^2 + 19*d*n2*n3^2 - 14*n2^2*n3^2 - 12*n3^3 + 
      11*d*n3^3 - 14*n2*n3^3 - 4*n3^4 + 112*n3*n5 - 100*d*n3*n5 + 
      22*d^2*n3*n5 + 24*n1*n3*n5 - 12*d*n1*n3*n5 + 76*n2*n3*n5 - 
      32*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 10*n2^2*n3*n5 + 48*n3^2*n5 - 
      21*d*n3^2*n5 + 6*n1*n3^2*n5 + 15*n2*n3^2*n5 + 5*n3^3*n5 + 12*n3*n5^2 - 
      6*d*n3*n5^2 + 6*n2*n3*n5^2 + 3*n3^2*n5^2)*j[p4, n1, n2, 1 + n3, 1, 
      1 + n5, 0, 0, -1, 1, 1, 1, 1, 1, 0])/((-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-304*n2 + 352*d*n2 - 124*d^2*n2 + 12*d^3*n2 - 184*n1*n2 + 136*d*n1*n2 - 
      22*d^2*n1*n2 - 188*n2^2 + 108*d*n2^2 - 7*d^2*n2^2 - 90*n1*n2^2 + 
      21*d*n1*n2^2 - 6*n2^3 - 11*d*n2^3 + n1*n2^3 + 6*n2^4 - 80*n2*n3 + 
      26*d*n2*n3 + 7*d^2*n2*n3 - 40*n1*n2*n3 + 8*d*n1*n2*n3 + 24*n2^2*n3 - 
      33*d*n2^2*n3 + 3*n1*n2^2*n3 + 21*n2^3*n3 + 24*n2*n3^2 - 19*d*n2*n3^2 + 
      2*n1*n2*n3^2 + 21*n2^2*n3^2 + 6*n2*n3^3 - 192*n2*n5 + 168*d*n2*n5 - 
      36*d^2*n2*n5 - 48*n1*n2*n5 + 24*d*n1*n2*n5 - 122*n2^2*n5 + 
      49*d*n2^2*n5 - 24*n1*n2^2*n5 - 13*n2^3*n5 - 70*n2*n3*n5 + 
      29*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 18*n2^2*n3*n5 - 5*n2*n3^2*n5 - 
      24*n2*n5^2 + 12*d*n2*n5^2 - 12*n2^2*n5^2 - 6*n2*n3*n5^2)*
     j[p4, n1, 1 + n2, -1 + n3, 1, 1 + n5, 0, 0, -1, 0, 1, 1, 1, 1, 1])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((8*n2 - 4*d*n2 + 4*n2^2 + 2*n2*n3)*j[p4, n1, 1 + n2, -1 + n3, 1, 1 + n5, 
      0, 0, -1, 1, 0, 1, 1, 1, 1])/((n2 - n3)*(-2 + d - n1 - n5)) + 
   ((-336*n2 + 400*d*n2 - 148*d^2*n2 + 16*d^3*n2 - 200*n1*n2 + 152*d*n1*n2 - 
      26*d^2*n1*n2 - 212*n2^2 + 132*d*n2^2 - 13*d^2*n2^2 - 102*n1*n2^2 + 
      27*d*n1*n2^2 - 10*n2^3 - 9*d*n2^3 - n1*n2^3 + 6*n2^4 - 112*n2*n3 + 
      58*d*n2*n3 - d^2*n2*n3 - 56*n1*n2*n3 + 16*d*n1*n2*n3 + 12*n2^2*n3 - 
      27*d*n2^2*n3 - 3*n1*n2^2*n3 + 21*n2^3*n3 + 16*n2*n3^2 - 15*d*n2*n3^2 - 
      2*n1*n2*n3^2 + 21*n2^2*n3^2 + 6*n2*n3^3 - 208*n2*n5 + 184*d*n2*n5 - 
      40*d^2*n2*n5 - 48*n1*n2*n5 + 24*d*n1*n2*n5 - 134*n2^2*n5 + 
      55*d*n2^2*n5 - 24*n1*n2^2*n5 - 15*n2^3*n5 - 86*n2*n3*n5 + 
      37*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 24*n2^2*n3*n5 - 9*n2*n3^2*n5 - 
      24*n2*n5^2 + 12*d*n2*n5^2 - 12*n2^2*n5^2 - 6*n2*n3*n5^2)*
     j[p4, n1, 1 + n2, -1 + n3, 1, 1 + n5, 0, 0, -1, 1, 1, 0, 1, 1, 1])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-104*n2 + 76*d*n2 - 12*d^2*n2 - 4*n1*n2 + 2*d*n1*n2 - 46*n2^2 + 
      9*d*n2^2 - n1*n2^2 + 2*n2^3 - 20*n2*n3 + 3*d*n2*n3 - 2*n1*n2*n3 + 
      5*n2^2*n3 + 2*n2*n3^2 - 32*n2*n5 + 16*d*n2*n5 - 15*n2^2*n5 - 
      9*n2*n3*n5)*j[p4, n1, 1 + n2, n3, 1, n5, 0, 0, -1, 1, 0, 1, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((320*n2 - 376*d*n2 + 136*d^2*n2 - 14*d^3*n2 + 192*n1*n2 - 144*d*n1*n2 + 
      24*d^2*n1*n2 + 200*n2^2 - 120*d*n2^2 + 10*d^2*n2^2 + 96*n1*n2^2 - 
      24*d*n1*n2^2 + 8*n2^3 + 10*d*n2^3 - 6*n2^4 + 96*n2*n3 - 42*d*n2*n3 - 
      3*d^2*n2*n3 + 48*n1*n2*n3 - 12*d*n1*n2*n3 - 18*n2^2*n3 + 30*d*n2^2*n3 - 
      21*n2^3*n3 - 20*n2*n3^2 + 17*d*n2*n3^2 - 21*n2^2*n3^2 - 6*n2*n3^3 + 
      200*n2*n5 - 176*d*n2*n5 + 38*d^2*n2*n5 + 48*n1*n2*n5 - 24*d*n1*n2*n5 + 
      128*n2^2*n5 - 52*d*n2^2*n5 + 24*n1*n2^2*n5 + 14*n2^3*n5 + 78*n2*n3*n5 - 
      33*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 21*n2^2*n3*n5 + 7*n2*n3^2*n5 + 
      24*n2*n5^2 - 12*d*n2*n5^2 + 12*n2^2*n5^2 + 6*n2*n3*n5^2)*
     j[p4, n1, 1 + n2, n3, 1, n5, 0, 0, -1, 1, 1, 0, 1, 1, 1])/
    ((-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-144*n2 + 168*d*n2 - 60*d^2*n2 + 6*d^3*n2 - 88*n1*n2 + 64*d*n1*n2 - 
      10*d^2*n1*n2 - 92*n2^2 + 56*d*n2^2 - 5*d^2*n2^2 - 42*n1*n2^2 + 
      9*d*n1*n2^2 - 6*n2^3 - 3*d*n2^3 + n1*n2^3 + 2*n2^4 - 40*n2*n3 + 
      16*d*n2*n3 + 2*d^2*n2*n3 - 16*n1*n2*n3 + 2*d*n1*n2*n3 + 4*n2^2*n3 - 
      11*d*n2^2*n3 + 3*n1*n2^2*n3 + 7*n2^3*n3 + 8*n2*n3^2 - 7*d*n2*n3^2 + 
      2*n1*n2*n3^2 + 7*n2^2*n3^2 + 2*n2*n3^3 - 88*n2*n5 + 76*d*n2*n5 - 
      16*d^2*n2*n5 - 24*n1*n2*n5 + 12*d*n1*n2*n5 - 54*n2^2*n5 + 
      21*d*n2^2*n5 - 12*n1*n2^2*n5 - 5*n2^3*n5 - 28*n2*n3*n5 + 
      11*d*n2*n3*n5 - 6*n1*n2*n3*n5 - 6*n2^2*n3*n5 - n2*n3^2*n5 - 
      12*n2*n5^2 + 6*d*n2*n5^2 - 6*n2^2*n5^2 - 3*n2*n3*n5^2)*
     j[p4, n1, 1 + n2, n3, 1, n5, 0, 0, -1, 1, 1, 1, 0, 1, 1])/
    ((-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((272*n2 - 320*d*n2 + 116*d^2*n2 - 12*d^3*n2 + 168*n1*n2 - 120*d*n1*n2 + 
      18*d^2*n1*n2 + 180*n2^2 - 116*d*n2^2 + 13*d^2*n2^2 + 78*n1*n2^2 - 
      15*d*n1*n2^2 + 18*n2^3 + d*n2^3 - 3*n1*n2^3 - 2*n2^4 + 80*n2*n3 - 
      38*d*n2*n3 - d^2*n2*n3 + 24*n1*n2*n3 + 8*n2^2*n3 + 11*d*n2^2*n3 - 
      9*n1*n2^2*n3 - 7*n2^3*n3 - 8*n2*n3^2 + 9*d*n2*n3^2 - 6*n1*n2*n3^2 - 
      7*n2^2*n3^2 - 2*n2*n3^3 + 160*n2*n5 - 136*d*n2*n5 + 28*d^2*n2*n5 + 
      48*n1*n2*n5 - 24*d*n1*n2*n5 + 94*n2^2*n5 - 35*d*n2^2*n5 + 
      24*n1*n2^2*n5 + 7*n2^3*n5 + 42*n2*n3*n5 - 15*d*n2*n3*n5 + 
      12*n1*n2*n3*n5 + 6*n2^2*n3*n5 - n2*n3^2*n5 + 24*n2*n5^2 - 
      12*d*n2*n5^2 + 12*n2^2*n5^2 + 6*n2*n3*n5^2)*j[p4, n1, 1 + n2, n3, 1, 
      n5, 0, 0, -1, 1, 1, 1, 1, 0, 1])/(2*(-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-8*n2 + 4*d*n2 - 4*n2^2 - 2*n2*n3)*j[p4, n1, 1 + n2, n3, 1, n5, 0, 0, 
      -1, 1, 1, 1, 1, 1, 1])/((n2 - n3)*(-2 + d - n1 - n5)) + 
   ((40*n2 - 28*d*n2 + 4*d^2*n2 + 4*n1*n2 - 2*d*n1*n2 + 14*n2^2 - d*n2^2 + 
      n1*n2^2 - 2*n2^3 + 4*n2*n3 + d*n2*n3 + 2*n1*n2*n3 - 5*n2^2*n3 - 
      2*n2*n3^2 + 16*n2*n5 - 8*d*n2*n5 + 7*n2^2*n5 + 5*n2*n3*n5)*
     j[p4, n1, 1 + n2, n3, 1, 1 + n5, -1, 0, -1, 1, 0, 1, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((8*n2 - 4*d*n2 + 4*n1*n2 - 2*d*n1*n2 - 2*n2^2 + 3*d*n2^2 + n1*n2^2 - 
      2*n2^3 - 4*n2*n3 + 3*d*n2*n3 + 2*n1*n2*n3 - 5*n2^2*n3 - 2*n2*n3^2 + 
      8*n2*n5 - 4*d*n2*n5 + 3*n2^2*n5 + 3*n2*n3*n5)*
     j[p4, n1, 1 + n2, n3, 1, 1 + n5, -1, 0, -1, 1, 1, 1, 0, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((368*n2 - 432*d*n2 + 156*d^2*n2 - 16*d^3*n2 + 216*n1*n2 - 168*d*n1*n2 + 
      30*d^2*n1*n2 + 220*n2^2 - 124*d*n2^2 + 7*d^2*n2^2 + 114*n1*n2^2 - 
      33*d*n1*n2^2 - 2*n2^3 + 19*d*n2^3 + 3*n1*n2^3 - 10*n2^4 + 112*n2*n3 - 
      46*d*n2*n3 - 5*d^2*n2*n3 + 72*n1*n2*n3 - 24*d*n1*n2*n3 - 44*n2^2*n3 + 
      49*d*n2^2*n3 + 9*n1*n2^2*n3 - 35*n2^3*n3 - 32*n2*n3^2 + 25*d*n2*n3^2 + 
      6*n1*n2*n3^2 - 35*n2^2*n3^2 - 10*n2*n3^3 + 240*n2*n5 - 216*d*n2*n5 + 
      48*d^2*n2*n5 + 48*n1*n2*n5 - 24*d*n1*n2*n5 + 162*n2^2*n5 - 
      69*d*n2^2*n5 + 24*n1*n2^2*n5 + 21*n2^3*n5 + 114*n2*n3*n5 - 
      51*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 36*n2^2*n3*n5 + 15*n2*n3^2*n5 + 
      24*n2*n5^2 - 12*d*n2*n5^2 + 12*n2^2*n5^2 + 6*n2*n3*n5^2)*
     j[p4, n1, 1 + n2, n3, 1, 1 + n5, -1, 0, -1, 1, 1, 1, 1, 0, 1])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-24*n2 + 16*d*n2 - 2*d^2*n2 + 4*n1*n2 - 2*d*n1*n2 - 14*n2^2 + 3*d*n2^2 + 
      n1*n2^2 - 4*n2*n3 + 2*n1*n2*n3 - 4*n2*n5 + 2*d*n2*n5 - 3*n2^2*n5)*
     j[p4, n1, 1 + n2, n3, 1, 1 + n5, -1, 0, -1, 1, 1, 1, 1, 1, 1])/
    ((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((304*n2 - 352*d*n2 + 124*d^2*n2 - 12*d^3*n2 + 184*n1*n2 - 136*d*n1*n2 + 
      22*d^2*n1*n2 + 188*n2^2 - 108*d*n2^2 + 7*d^2*n2^2 + 90*n1*n2^2 - 
      21*d*n1*n2^2 + 6*n2^3 + 11*d*n2^3 - n1*n2^3 - 6*n2^4 + 80*n2*n3 - 
      26*d*n2*n3 - 7*d^2*n2*n3 + 40*n1*n2*n3 - 8*d*n1*n2*n3 - 24*n2^2*n3 + 
      33*d*n2^2*n3 - 3*n1*n2^2*n3 - 21*n2^3*n3 - 24*n2*n3^2 + 19*d*n2*n3^2 - 
      2*n1*n2*n3^2 - 21*n2^2*n3^2 - 6*n2*n3^3 + 192*n2*n5 - 168*d*n2*n5 + 
      36*d^2*n2*n5 + 48*n1*n2*n5 - 24*d*n1*n2*n5 + 122*n2^2*n5 - 
      49*d*n2^2*n5 + 24*n1*n2^2*n5 + 13*n2^3*n5 + 70*n2*n3*n5 - 
      29*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 18*n2^2*n3*n5 + 5*n2*n3^2*n5 + 
      24*n2*n5^2 - 12*d*n2*n5^2 + 12*n2^2*n5^2 + 6*n2*n3*n5^2)*
     j[p4, n1, 1 + n2, n3, 1, 1 + n5, 0, -1, -1, 0, 1, 1, 1, 1, 1])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-80*n2 + 144*d*n2 - 84*d^2*n2 + 16*d^3*n2 + 184*n1*n2 - 136*d*n1*n2 + 
      22*d^2*n1*n2 - 212*n2^2 + 212*d*n2^2 - 53*d^2*n2^2 + 90*n1*n2^2 - 
      21*d*n1*n2^2 - 106*n2^3 + 47*d*n2^3 - n1*n2^3 - 10*n2^4 - 240*n2*n3 + 
      234*d*n2*n3 - 57*d^2*n2*n3 + 40*n1*n2*n3 - 8*d*n1*n2*n3 - 212*n2^2*n3 + 
      97*d*n2^2*n3 - 3*n1*n2^2*n3 - 35*n2^3*n3 - 96*n2*n3^2 + 45*d*n2*n3^2 - 
      2*n1*n2*n3^2 - 35*n2^2*n3^2 - 10*n2*n3^3 + 112*n2*n5 - 88*d*n2*n5 + 
      16*d^2*n2*n5 + 48*n1*n2*n5 - 24*d*n1*n2*n5 + 42*n2^2*n5 - 9*d*n2^2*n5 + 
      24*n1*n2^2*n5 - 7*n2^3*n5 + 10*n2*n3*n5 + d*n2*n3*n5 + 12*n1*n2*n3*n5 - 
      12*n2^2*n3*n5 - 5*n2*n3^2*n5 + 24*n2*n5^2 - 12*d*n2*n5^2 + 
      12*n2^2*n5^2 + 6*n2*n3*n5^2)*j[p4, n1, 1 + n2, n3, 1, 1 + n5, 0, -1, 
      -1, 1, 0, 1, 1, 1, 1])/(2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((336*n2 - 400*d*n2 + 148*d^2*n2 - 16*d^3*n2 + 
      200*n1*n2 - 152*d*n1*n2 + 26*d^2*n1*n2 + 212*n2^2 - 132*d*n2^2 + 
      13*d^2*n2^2 + 102*n1*n2^2 - 27*d*n1*n2^2 + 10*n2^3 + 9*d*n2^3 + 
      n1*n2^3 - 6*n2^4 + 112*n2*n3 - 58*d*n2*n3 + d^2*n2*n3 + 56*n1*n2*n3 - 
      16*d*n1*n2*n3 - 12*n2^2*n3 + 27*d*n2^2*n3 + 3*n1*n2^2*n3 - 21*n2^3*n3 - 
      16*n2*n3^2 + 15*d*n2*n3^2 + 2*n1*n2*n3^2 - 21*n2^2*n3^2 - 6*n2*n3^3 + 
      208*n2*n5 - 184*d*n2*n5 + 40*d^2*n2*n5 + 48*n1*n2*n5 - 24*d*n1*n2*n5 + 
      134*n2^2*n5 - 55*d*n2^2*n5 + 24*n1*n2^2*n5 + 15*n2^3*n5 + 86*n2*n3*n5 - 
      37*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 24*n2^2*n3*n5 + 9*n2*n3^2*n5 + 
      24*n2*n5^2 - 12*d*n2*n5^2 + 12*n2^2*n5^2 + 6*n2*n3*n5^2)*
     j[p4, n1, 1 + n2, n3, 1, 1 + n5, 0, -1, -1, 1, 1, 0, 1, 1, 1])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-112*n2 + 128*d*n2 - 44*d^2*n2 + 4*d^3*n2 - 184*n1*n2 + 136*d*n1*n2 - 
      22*d^2*n1*n2 - 12*n2^2 - 4*d*n2^2 + 5*d^2*n2^2 - 90*n1*n2^2 + 
      21*d*n1*n2^2 + 26*n2^3 - 11*d*n2^3 + n1*n2^3 + 2*n2^4 + 32*n2*n3 - 
      38*d*n2*n3 + 11*d^2*n2*n3 - 40*n1*n2*n3 + 8*d*n1*n2*n3 + 52*n2^2*n3 - 
      23*d*n2^2*n3 + 3*n1*n2^2*n3 + 7*n2^3*n3 + 24*n2*n3^2 - 11*d*n2*n3^2 + 
      2*n1*n2*n3^2 + 7*n2^2*n3^2 + 2*n2*n3^3 - 128*n2*n5 + 104*d*n2*n5 - 
      20*d^2*n2*n5 - 48*n1*n2*n5 + 24*d*n1*n2*n5 - 58*n2^2*n5 + 
      17*d*n2^2*n5 - 24*n1*n2^2*n5 + 3*n2^3*n5 - 22*n2*n3*n5 + 5*d*n2*n3*n5 - 
      12*n1*n2*n3*n5 + 6*n2^2*n3*n5 + 3*n2*n3^2*n5 - 24*n2*n5^2 + 
      12*d*n2*n5^2 - 12*n2^2*n5^2 - 6*n2*n3*n5^2)*j[p4, n1, 1 + n2, n3, 1, 
      1 + n5, 0, -1, -1, 1, 1, 1, 0, 1, 1])/(2*(-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((528*n2 - 608*d*n2 + 212*d^2*n2 - 20*d^3*n2 + 552*n1*n2 - 408*d*n1*n2 + 
      66*d^2*n1*n2 + 212*n2^2 - 100*d*n2^2 - 3*d^2*n2^2 + 270*n1*n2^2 - 
      63*d*n1*n2^2 - 46*n2^3 + 33*d*n2^3 - 3*n1*n2^3 - 10*n2^4 + 16*n2*n3 + 
      50*d*n2*n3 - 29*d^2*n2*n3 + 120*n1*n2*n3 - 24*d*n1*n2*n3 - 
      128*n2^2*n3 + 79*d*n2^2*n3 - 9*n1*n2^2*n3 - 35*n2^3*n3 - 72*n2*n3^2 + 
      41*d*n2*n3^2 - 6*n1*n2*n3^2 - 35*n2^2*n3^2 - 10*n2*n3^3 + 448*n2*n5 - 
      376*d*n2*n5 + 76*d^2*n2*n5 + 144*n1*n2*n5 - 72*d*n1*n2*n5 + 
      238*n2^2*n5 - 83*d*n2^2*n5 + 72*n1*n2^2*n5 + 7*n2^3*n5 + 114*n2*n3*n5 - 
      39*d*n2*n3*n5 + 36*n1*n2*n3*n5 + 6*n2^2*n3*n5 - n2*n3^2*n5 + 
      72*n2*n5^2 - 36*d*n2*n5^2 + 36*n2^2*n5^2 + 18*n2*n3*n5^2)*
     j[p4, n1, 1 + n2, n3, 1, 1 + n5, 0, -1, -1, 1, 1, 1, 1, 0, 1])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-112*n2 + 120*d*n2 - 36*d^2*n2 + 2*d^3*n2 - 184*n1*n2 + 136*d*n1*n2 - 
      22*d^2*n1*n2 - 4*n2^2 - 20*d*n2^2 + 11*d^2*n2^2 - 90*n1*n2^2 + 
      21*d*n1*n2^2 + 34*n2^3 - 17*d*n2^3 + n1*n2^3 + 4*n2^4 + 48*n2*n3 - 
      60*d*n2*n3 + 18*d^2*n2*n3 - 40*n1*n2*n3 + 8*d*n1*n2*n3 + 74*n2^2*n3 - 
      37*d*n2^2*n3 + 3*n1*n2^2*n3 + 14*n2^3*n3 + 36*n2*n3^2 - 18*d*n2*n3^2 + 
      2*n1*n2*n3^2 + 14*n2^2*n3^2 + 4*n2*n3^3 - 136*n2*n5 + 112*d*n2*n5 - 
      22*d^2*n2*n5 - 48*n1*n2*n5 + 24*d*n1*n2*n5 - 66*n2^2*n5 + 
      21*d*n2^2*n5 - 24*n1*n2^2*n5 + n2^3*n5 - 28*n2*n3*n5 + 8*d*n2*n3*n5 - 
      12*n1*n2*n3*n5 + 3*n2^2*n3*n5 + 2*n2*n3^2*n5 - 24*n2*n5^2 + 
      12*d*n2*n5^2 - 12*n2^2*n5^2 - 6*n2*n3*n5^2)*j[p4, n1, 1 + n2, n3, 1, 
      1 + n5, 0, -1, -1, 1, 1, 1, 1, 1, 1])/((-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-336*n2 + 400*d*n2 - 148*d^2*n2 + 16*d^3*n2 - 200*n1*n2 + 152*d*n1*n2 - 
      26*d^2*n1*n2 - 212*n2^2 + 132*d*n2^2 - 13*d^2*n2^2 - 102*n1*n2^2 + 
      27*d*n1*n2^2 - 10*n2^3 - 9*d*n2^3 - n1*n2^3 + 6*n2^4 - 112*n2*n3 + 
      58*d*n2*n3 - d^2*n2*n3 - 56*n1*n2*n3 + 16*d*n1*n2*n3 + 12*n2^2*n3 - 
      27*d*n2^2*n3 - 3*n1*n2^2*n3 + 21*n2^3*n3 + 16*n2*n3^2 - 15*d*n2*n3^2 - 
      2*n1*n2*n3^2 + 21*n2^2*n3^2 + 6*n2*n3^3 - 208*n2*n5 + 184*d*n2*n5 - 
      40*d^2*n2*n5 - 48*n1*n2*n5 + 24*d*n1*n2*n5 - 134*n2^2*n5 + 
      55*d*n2^2*n5 - 24*n1*n2^2*n5 - 15*n2^3*n5 - 86*n2*n3*n5 + 
      37*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 24*n2^2*n3*n5 - 9*n2*n3^2*n5 - 
      24*n2*n5^2 + 12*d*n2*n5^2 - 12*n2^2*n5^2 - 6*n2*n3*n5^2)*
     j[p4, n1, 1 + n2, n3, 1, 1 + n5, 0, 0, -2, 0, 1, 1, 1, 1, 1])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-304*n2 + 368*d*n2 - 140*d^2*n2 + 16*d^3*n2 - 184*n1*n2 + 136*d*n1*n2 - 
      22*d^2*n1*n2 - 204*n2^2 + 140*d*n2^2 - 19*d^2*n2^2 - 90*n1*n2^2 + 
      21*d*n1*n2^2 - 22*n2^3 + d*n2^3 + n1*n2^3 + 2*n2^4 - 112*n2*n3 + 
      70*d*n2*n3 - 7*d^2*n2*n3 - 40*n1*n2*n3 + 8*d*n1*n2*n3 - 20*n2^2*n3 - 
      5*d*n2^2*n3 + 3*n1*n2^2*n3 + 7*n2^3*n3 - 5*d*n2*n3^2 + 2*n1*n2*n3^2 + 
      7*n2^2*n3^2 + 2*n2*n3^3 - 176*n2*n5 + 152*d*n2*n5 - 32*d^2*n2*n5 - 
      48*n1*n2*n5 + 24*d*n1*n2*n5 - 106*n2^2*n5 + 41*d*n2^2*n5 - 
      24*n1*n2^2*n5 - 9*n2^3*n5 - 58*n2*n3*n5 + 23*d*n2*n3*n5 - 
      12*n1*n2*n3*n5 - 12*n2^2*n3*n5 - 3*n2*n3^2*n5 - 24*n2*n5^2 + 
      12*d*n2*n5^2 - 12*n2^2*n5^2 - 6*n2*n3*n5^2)*j[p4, n1, 1 + n2, n3, 1, 
      1 + n5, 0, 0, -2, 1, 0, 1, 1, 1, 1])/(2*(-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((336*n2 - 400*d*n2 + 148*d^2*n2 - 16*d^3*n2 + 200*n1*n2 - 152*d*n1*n2 + 
      26*d^2*n1*n2 + 212*n2^2 - 132*d*n2^2 + 13*d^2*n2^2 + 102*n1*n2^2 - 
      27*d*n1*n2^2 + 10*n2^3 + 9*d*n2^3 + n1*n2^3 - 6*n2^4 + 112*n2*n3 - 
      58*d*n2*n3 + d^2*n2*n3 + 56*n1*n2*n3 - 16*d*n1*n2*n3 - 12*n2^2*n3 + 
      27*d*n2^2*n3 + 3*n1*n2^2*n3 - 21*n2^3*n3 - 16*n2*n3^2 + 15*d*n2*n3^2 + 
      2*n1*n2*n3^2 - 21*n2^2*n3^2 - 6*n2*n3^3 + 208*n2*n5 - 184*d*n2*n5 + 
      40*d^2*n2*n5 + 48*n1*n2*n5 - 24*d*n1*n2*n5 + 134*n2^2*n5 - 
      55*d*n2^2*n5 + 24*n1*n2^2*n5 + 15*n2^3*n5 + 86*n2*n3*n5 - 
      37*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 24*n2^2*n3*n5 + 9*n2*n3^2*n5 + 
      24*n2*n5^2 - 12*d*n2*n5^2 + 12*n2^2*n5^2 + 6*n2*n3*n5^2)*
     j[p4, n1, 1 + n2, n3, 1, 1 + n5, 0, 0, -2, 1, 1, 0, 1, 1, 1])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((56*n2 - 40*d*n2 + 6*d^2*n2 + 4*n1*n2 - 2*d*n1*n2 + 22*n2^2 - 3*d*n2^2 + 
      n1*n2^2 - 2*n2^3 + 8*n2*n3 + 2*n1*n2*n3 - 5*n2^2*n3 - 2*n2*n3^2 + 
      20*n2*n5 - 10*d*n2*n5 + 9*n2^2*n5 + 6*n2*n3*n5)*
     j[p4, n1, 1 + n2, n3, 1, 1 + n5, 0, 0, -2, 1, 1, 1, 0, 1, 1])/
    ((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((112*n2 - 144*d*n2 + 60*d^2*n2 - 8*d^3*n2 - 168*n1*n2 + 120*d*n1*n2 - 
      18*d^2*n1*n2 + 188*n2^2 - 140*d*n2^2 + 23*d^2*n2^2 - 78*n1*n2^2 + 
      15*d*n1*n2^2 + 62*n2^3 - 13*d*n2^3 + 3*n1*n2^3 - 2*n2^4 + 176*n2*n3 - 
      134*d*n2*n3 + 23*d^2*n2*n3 - 24*n1*n2*n3 + 92*n2^2*n3 - 19*d*n2^2*n3 + 
      9*n1*n2^2*n3 - 7*n2^3*n3 + 32*n2*n3^2 - 7*d*n2*n3^2 + 6*n1*n2*n3^2 - 
      7*n2^2*n3^2 - 2*n2*n3^3 - 48*n2*n5 + 24*d*n2*n5 - 48*n1*n2*n5 + 
      24*d*n1*n2*n5 + 18*n2^2*n5 - 21*d*n2^2*n5 - 24*n1*n2^2*n5 + 
      21*n2^3*n5 + 42*n2*n3*n5 - 27*d*n2*n3*n5 - 12*n1*n2*n3*n5 + 
      36*n2^2*n3*n5 + 15*n2*n3^2*n5 - 24*n2*n5^2 + 12*d*n2*n5^2 - 
      12*n2^2*n5^2 - 6*n2*n3*n5^2)*j[p4, n1, 1 + n2, n3, 1, 1 + n5, 0, 0, -2, 
      1, 1, 1, 1, 0, 1])/(2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (-2 + d - n1 - n5)) + ((128*n2 - 144*d*n2 + 48*d^2*n2 - 4*d^3*n2 + 
      192*n1*n2 - 144*d*n1*n2 + 24*d^2*n1*n2 + 16*n2^2 + 8*d*n2^2 - 
      8*d^2*n2^2 + 96*n1*n2^2 - 24*d*n1*n2^2 - 32*n2^3 + 16*d*n2^3 - 4*n2^4 - 
      32*n2*n3 + 44*d*n2*n3 - 14*d^2*n2*n3 + 48*n1*n2*n3 - 12*d*n1*n2*n3 - 
      68*n2^2*n3 + 34*d*n2^2*n3 - 14*n2^3*n3 - 32*n2*n3^2 + 16*d*n2*n3^2 - 
      14*n2^2*n3^2 - 4*n2*n3^3 + 144*n2*n5 - 120*d*n2*n5 + 24*d^2*n2*n5 + 
      48*n1*n2*n5 - 24*d*n1*n2*n5 + 72*n2^2*n5 - 24*d*n2^2*n5 + 
      24*n1*n2^2*n5 + 36*n2*n3*n5 - 12*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 
      24*n2*n5^2 - 12*d*n2*n5^2 + 12*n2^2*n5^2 + 6*n2*n3*n5^2)*
     j[p4, n1, 1 + n2, n3, 1, 1 + n5, 0, 0, -2, 1, 1, 1, 1, 1, 1])/
    ((-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-12*n1 + 6*d*n1 - 6*n1*n2 - 3*n1*n3)*j[p4, 1 + n1, -1 + n2, n3, 1, 
      1 + n5, 0, 0, -1, 1, 1, 1, 1, 0, 1])/((n2 - n3)*(-2 + d - n1 - n5)) + 
   ((24*n1 - 12*d*n1 + 12*n1*n2 + 6*n1*n3)*j[p4, 1 + n1, -1 + n2, n3, 1, 
      1 + n5, 0, 0, -1, 1, 1, 1, 1, 1, 1])/((n2 - n3)*(-2 + d - n1 - n5)) + 
   ((56*n1 - 40*d*n1 + 6*d^2*n1 + 4*n1^2 - 2*d*n1^2 + 22*n1*n2 - 3*d*n1*n2 + 
      n1^2*n2 - 2*n1*n2^2 + 8*n1*n3 + 2*n1^2*n3 - 5*n1*n2*n3 - 2*n1*n3^2 + 
      20*n1*n5 - 10*d*n1*n5 + 9*n1*n2*n5 + 6*n1*n3*n5)*
     j[p4, 1 + n1, n2, n3, 1, n5, 0, 0, -1, 1, 1, 0, 1, 1, 1])/
    ((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((144*n1 - 168*d*n1 + 60*d^2*n1 - 6*d^3*n1 + 88*n1^2 - 64*d*n1^2 + 
      10*d^2*n1^2 + 92*n1*n2 - 56*d*n1*n2 + 5*d^2*n1*n2 + 42*n1^2*n2 - 
      9*d*n1^2*n2 + 6*n1*n2^2 + 3*d*n1*n2^2 - n1^2*n2^2 - 2*n1*n2^3 + 
      40*n1*n3 - 16*d*n1*n3 - 2*d^2*n1*n3 + 16*n1^2*n3 - 2*d*n1^2*n3 - 
      4*n1*n2*n3 + 11*d*n1*n2*n3 - 3*n1^2*n2*n3 - 7*n1*n2^2*n3 - 8*n1*n3^2 + 
      7*d*n1*n3^2 - 2*n1^2*n3^2 - 7*n1*n2*n3^2 - 2*n1*n3^3 + 88*n1*n5 - 
      76*d*n1*n5 + 16*d^2*n1*n5 + 24*n1^2*n5 - 12*d*n1^2*n5 + 54*n1*n2*n5 - 
      21*d*n1*n2*n5 + 12*n1^2*n2*n5 + 5*n1*n2^2*n5 + 28*n1*n3*n5 - 
      11*d*n1*n3*n5 + 6*n1^2*n3*n5 + 6*n1*n2*n3*n5 + n1*n3^2*n5 + 
      12*n1*n5^2 - 6*d*n1*n5^2 + 6*n1*n2*n5^2 + 3*n1*n3*n5^2)*
     j[p4, 1 + n1, n2, n3, 1, n5, 0, 0, -1, 1, 1, 1, 1, 0, 1])/
    ((-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-368*n1 + 432*d*n1 - 156*d^2*n1 + 16*d^3*n1 - 184*n1^2 + 136*d*n1^2 - 
      22*d^2*n1^2 - 252*n1*n2 + 156*d*n1*n2 - 15*d^2*n1*n2 - 90*n1^2*n2 + 
      21*d*n1^2*n2 - 22*n1*n2^2 - 7*d*n1*n2^2 + n1^2*n2^2 + 6*n1*n2^3 - 
      128*n1*n3 + 62*d*n1*n3 + d^2*n1*n3 - 40*n1^2*n3 + 8*d*n1^2*n3 - 
      27*d*n1*n2*n3 + 3*n1^2*n2*n3 + 21*n1*n2^2*n3 + 16*n1*n3^2 - 
      17*d*n1*n3^2 + 2*n1^2*n3^2 + 21*n1*n2*n3^2 + 6*n1*n3^3 - 208*n1*n5 + 
      184*d*n1*n5 - 40*d^2*n1*n5 - 48*n1^2*n5 + 24*d*n1^2*n5 - 138*n1*n2*n5 + 
      57*d*n1*n2*n5 - 24*n1^2*n2*n5 - 17*n1*n2^2*n5 - 82*n1*n3*n5 + 
      35*d*n1*n3*n5 - 12*n1^2*n3*n5 - 24*n1*n2*n3*n5 - 7*n1*n3^2*n5 - 
      24*n1*n5^2 + 12*d*n1*n5^2 - 12*n1*n2*n5^2 - 6*n1*n3*n5^2)*
     j[p4, 1 + n1, n2, n3, 1, n5, 0, 0, -1, 1, 1, 1, 1, 1, 1])/
    ((-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-56*n1 + 40*d*n1 - 6*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 22*n1*n2 + 3*d*n1*n2 - 
      n1^2*n2 + 2*n1*n2^2 - 8*n1*n3 - 2*n1^2*n3 + 5*n1*n2*n3 + 2*n1*n3^2 - 
      20*n1*n5 + 10*d*n1*n5 - 9*n1*n2*n5 - 6*n1*n3*n5)*
     j[p4, 1 + n1, n2, n3, 1, 1 + n5, 0, 0, -2, 0, 1, 1, 1, 1, 1])/
    ((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-56*n1 + 40*d*n1 - 6*d^2*n1 - 4*n1^2 + 2*d*n1^2 - 22*n1*n2 + 3*d*n1*n2 - 
      n1^2*n2 + 2*n1*n2^2 - 8*n1*n3 - 2*n1^2*n3 + 5*n1*n2*n3 + 2*n1*n3^2 - 
      20*n1*n5 + 10*d*n1*n5 - 9*n1*n2*n5 - 6*n1*n3*n5)*
     j[p4, 1 + n1, n2, n3, 1, 1 + n5, 0, 0, -2, 1, 1, 1, 1, 0, 1])/
    ((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((104*n1 - 76*d*n1 + 12*d^2*n1 + 4*n1^2 - 2*d*n1^2 + 46*n1*n2 - 
      9*d*n1*n2 + n1^2*n2 - 2*n1*n2^2 + 20*n1*n3 - 3*d*n1*n3 + 2*n1^2*n3 - 
      5*n1*n2*n3 - 2*n1*n3^2 + 32*n1*n5 - 16*d*n1*n5 + 15*n1*n2*n5 + 
      9*n1*n3*n5)*j[p4, 1 + n1, n2, n3, 1, 1 + n5, 0, 0, -2, 1, 1, 1, 1, 1, 
      1])/((n2 - n3)*(-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((224*n1 - 264*d*n1 + 96*d^2*n1 - 10*d^3*n1 + 96*n1^2 - 72*d*n1^2 + 
      12*d^2*n1^2 + 160*n1*n2 - 100*d*n1*n2 + 10*d^2*n1*n2 + 48*n1^2*n2 - 
      12*d*n1^2*n2 + 16*n1*n2^2 + 4*d*n1*n2^2 - 4*n1*n2^3 + 88*n1*n3 - 
      46*d*n1*n3 + d^2*n1*n3 + 24*n1^2*n3 - 6*d*n1^2*n3 + 4*n1*n2*n3 + 
      16*d*n1*n2*n3 - 14*n1*n2^2*n3 - 8*n1*n3^2 + 10*d*n1*n3^2 - 
      14*n1*n2*n3^2 - 4*n1*n3^3 + 120*n1*n5 - 108*d*n1*n5 + 24*d^2*n1*n5 + 
      24*n1^2*n5 - 12*d*n1^2*n5 + 84*n1*n2*n5 - 36*d*n1*n2*n5 + 
      12*n1^2*n2*n5 + 12*n1*n2^2*n5 + 54*n1*n3*n5 - 24*d*n1*n3*n5 + 
      6*n1^2*n3*n5 + 18*n1*n2*n3*n5 + 6*n1*n3^2*n5 + 12*n1*n5^2 - 
      6*d*n1*n5^2 + 6*n1*n2*n5^2 + 3*n1*n3*n5^2)*j[p4, 1 + n1, n2, n3, 1, 
      1 + n5, 0, 0, -1, 0, 1, 1, 1, 1, 1])/((-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(-2 + d - n1 - n5)) + 
   ((-12*n1 + 6*d*n1 - 6*n1*n2 - 3*n1*n3)*j[p4, 1 + n1, n2, n3, 1, 1 + n5, 0, 
      0, -1, 1, 0, 1, 1, 1, 1])/((n2 - n3)*(-2 + d - n1 - n5)) + 
   ((12*n1 - 6*d*n1 + 6*n1*n2 + 3*n1*n3)*j[p4, 1 + n1, n2, n3, 1, 1 + n5, 0, 
      0, -1, 1, 1, 0, 1, 1, 1])/((n2 - n3)*(-2 + d - n1 - n5)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 1 && n13 == 1 && n14 == 1 && n4 == 1 && 
    n6 == 0 && n7 == 0 && n8 == 0 && n9 == 1 &&  !(n2 == n3 || n5 == 0) -> 
  ((35 - 19*d + 2*d^2 + 9*n2 - 2*n2^2 - 3*n3 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 
      50*n5 - 25*d*n5 + 2*d^2*n5 + 15*n2*n5 - 2*n2^2*n5 + 3*d*n3*n5 - 
      5*n2*n3*n5 - 2*n3^2*n5 + 15*n5^2 - 6*d*n5^2 + 6*n2*n5^2 + 3*n3*n5^2)*
     j[p4, -2 + n1, n2, n3, 0, 2 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    ((n2 - n3)*(4 - d + n5)*(3 - d + n1 + n5)) + 
   ((-35 + 19*d - 2*d^2 - 9*n2 + 2*n2^2 + 3*n3 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      15*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, -2 + n1, n2, n3, 1, 1 + n5, 
      0, 0, 0, 1, 1, 1, 0, 2, 1])/((n2 - n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((35 - 19*d + 2*d^2 + 9*n2 - 2*n2^2 - 3*n3 + 
      3*d*n3 - 5*n2*n3 - 2*n3^2 + 15*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*
     j[p4, -2 + n1, n2, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 2, 0])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-35 + 19*d - 2*d^2 - 9*n2 + 2*n2^2 + 3*n3 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      50*n5 + 25*d*n5 - 2*d^2*n5 - 15*n2*n5 + 2*n2^2*n5 - 3*d*n3*n5 + 
      5*n2*n3*n5 + 2*n3^2*n5 - 15*n5^2 + 6*d*n5^2 - 6*n2*n5^2 - 3*n3*n5^2)*
     j[p4, -2 + n1, n2, n3, 1, 2 + n5, 0, 0, 0, 1, 1, 1, 1, 0, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((35 - 19*d + 2*d^2 + 9*n2 - 2*n2^2 - 3*n3 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 
      50*n5 - 25*d*n5 + 2*d^2*n5 + 15*n2*n5 - 2*n2^2*n5 + 3*d*n3*n5 - 
      5*n2*n3*n5 - 2*n3^2*n5 + 15*n5^2 - 6*d*n5^2 + 6*n2*n5^2 + 3*n3*n5^2)*
     j[p4, -2 + n1, n2, n3, 1, 2 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 0])/
    (2*(n2 - n3)*(4 - d + n5)*(3 - d + n1 + n5)) + 
   ((35 - 19*d + 2*d^2 + 9*n2 - 2*n2^2 - 3*n3 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 
      15*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, -2 + n1, n2, n3, 2, 1 + n5, 
      0, 0, 0, 1, 1, 1, 1, 1, 0])/(2*(n2 - n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((35*n3 - 19*d*n3 + 2*d^2*n3 + 9*n2*n3 - 
      2*n2^2*n3 - 3*n3^2 + 3*d*n3^2 - 5*n2*n3^2 - 2*n3^3 + 15*n3*n5 - 
      6*d*n3*n5 + 6*n2*n3*n5 + 3*n3^2*n5)*j[p4, -2 + n1, n2, 1 + n3, 0, 
      1 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 1])/(2*(-n2 + n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((35*n3 - 19*d*n3 + 2*d^2*n3 + 9*n2*n3 - 
      2*n2^2*n3 - 3*n3^2 + 3*d*n3^2 - 5*n2*n3^2 - 2*n3^3 + 15*n3*n5 - 
      6*d*n3*n5 + 6*n2*n3*n5 + 3*n3^2*n5)*j[p4, -2 + n1, n2, 1 + n3, 1, 
      1 + n5, 0, 0, 0, 1, 1, 1, 0, 1, 1])/((-n2 + n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((-35*n3 + 19*d*n3 - 2*d^2*n3 - 9*n2*n3 + 
      2*n2^2*n3 + 3*n3^2 - 3*d*n3^2 + 5*n2*n3^2 + 2*n3^3 - 15*n3*n5 + 
      6*d*n3*n5 - 6*n2*n3*n5 - 3*n3^2*n5)*j[p4, -2 + n1, n2, 1 + n3, 1, 
      1 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 0])/(2*(-n2 + n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((35*n2 - 19*d*n2 + 2*d^2*n2 + 9*n2^2 - 2*n2^3 - 
      3*n2*n3 + 3*d*n2*n3 - 5*n2^2*n3 - 2*n2*n3^2 + 15*n2*n5 - 6*d*n2*n5 + 
      6*n2^2*n5 + 3*n2*n3*n5)*j[p4, -2 + n1, 1 + n2, n3, 1, 1 + n5, 0, 0, 0, 
      1, 1, 1, 0, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-35*n2 + 19*d*n2 - 2*d^2*n2 - 9*n2^2 + 2*n2^3 + 3*n2*n3 - 3*d*n2*n3 + 
      5*n2^2*n3 + 2*n2*n3^2 - 15*n2*n5 + 6*d*n2*n5 - 6*n2^2*n5 - 3*n2*n3*n5)*
     j[p4, -2 + n1, 1 + n2, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 0, 1])/
    ((n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((35 - 19*d + 2*d^2 + 9*n2 - 2*n2^2 - 3*n3 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 
      15*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, -1 + n1, -1 + n2, n3, 1, 
      1 + n5, 0, 0, 0, 0, 1, 1, 1, 1, 2])/((n2 - n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((35 - 19*d + 2*d^2 + 9*n2 - 2*n2^2 - 3*n3 + 
      3*d*n3 - 5*n2*n3 - 2*n3^2 + 15*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*
     j[p4, -1 + n1, -1 + n2, n3, 1, 1 + n5, 0, 0, 0, 0, 2, 1, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-35 + 19*d - 2*d^2 - 9*n2 + 2*n2^2 + 3*n3 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      15*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, -1 + n1, -1 + n2, n3, 1, 
      1 + n5, 0, 0, 0, 1, 1, 0, 2, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((-35 + 19*d - 2*d^2 - 9*n2 + 2*n2^2 + 3*n3 - 
      3*d*n3 + 5*n2*n3 + 2*n3^2 - 15*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*
     j[p4, -1 + n1, -1 + n2, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 2, 0, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((35 - 19*d + 2*d^2 + 9*n2 - 2*n2^2 - 3*n3 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 
      50*n5 - 25*d*n5 + 2*d^2*n5 + 15*n2*n5 - 2*n2^2*n5 + 3*d*n3*n5 - 
      5*n2*n3*n5 - 2*n3^2*n5 + 15*n5^2 - 6*d*n5^2 + 6*n2*n5^2 + 3*n3*n5^2)*
     j[p4, -1 + n1, -1 + n2, n3, 1, 2 + n5, 0, 0, 0, 0, 1, 1, 1, 1, 1])/
    ((n2 - n3)*(4 - d + n5)*(3 - d + n1 + n5)) + 
   ((-10 + 4*d - 5*n1 + 2*d*n1 + 4*n2 - 3*d*n2 - n1*n2 + 2*n2^2 + 5*n3 - 
      3*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 20*n5 + 8*d*n5 - 5*n1*n5 + 
      2*d*n1*n5 + n2*n5 - 3*d*n2*n5 - n1*n2*n5 + 2*n2^2*n5 + 2*n3*n5 - 
      3*d*n3*n5 - 2*n1*n3*n5 + 5*n2*n3*n5 + 2*n3^2*n5 - 10*n5^2 + 4*d*n5^2 - 
      3*n2*n5^2 - 3*n3*n5^2)*j[p4, -1 + n1, -1 + n2, n3, 1, 2 + n5, 0, 0, 0, 
      1, 1, 1, 1, 1, 1])/(2*(n2 - n3)*(4 - d + n5)*(3 - d + n1 + n5)) + 
   ((-35 + 19*d - 2*d^2 - 9*n2 + 2*n2^2 + 3*n3 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      15*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, -1 + n1, -1 + n2, n3, 2, 
      1 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 0])/(2*(n2 - n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((35*n3 - 19*d*n3 + 2*d^2*n3 + 9*n2*n3 - 
      2*n2^2*n3 - 3*n3^2 + 3*d*n3^2 - 5*n2*n3^2 - 2*n3^3 + 15*n3*n5 - 
      6*d*n3*n5 + 6*n2*n3*n5 + 3*n3^2*n5)*j[p4, -1 + n1, -1 + n2, 1 + n3, 0, 
      1 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 1])/(2*(-n2 + n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((-35*n3 + 19*d*n3 - 2*d^2*n3 - 9*n2*n3 + 
      2*n2^2*n3 + 3*n3^2 - 3*d*n3^2 + 5*n2*n3^2 + 2*n3^3 - 15*n3*n5 + 
      6*d*n3*n5 - 6*n2*n3*n5 - 3*n3^2*n5)*j[p4, -1 + n1, -1 + n2, 1 + n3, 1, 
      1 + n5, 0, 0, 0, 1, 0, 1, 1, 1, 1])/((-n2 + n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((35*n3 - 19*d*n3 + 2*d^2*n3 + 9*n2*n3 - 
      2*n2^2*n3 - 3*n3^2 + 3*d*n3^2 - 5*n2*n3^2 - 2*n3^3 + 15*n3*n5 - 
      6*d*n3*n5 + 6*n2*n3*n5 + 3*n3^2*n5)*j[p4, -1 + n1, -1 + n2, 1 + n3, 1, 
      1 + n5, 0, 0, 0, 1, 1, 0, 1, 1, 1])/((-n2 + n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((-35*n3 + 19*d*n3 - 2*d^2*n3 - 9*n2*n3 + 
      2*n2^2*n3 + 3*n3^2 - 3*d*n3^2 + 5*n2*n3^2 + 2*n3^3 - 15*n3*n5 + 
      6*d*n3*n5 - 6*n2*n3*n5 - 3*n3^2*n5)*j[p4, -1 + n1, -1 + n2, 1 + n3, 1, 
      1 + n5, 0, 0, 0, 1, 1, 1, 0, 1, 1])/((-n2 + n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((-35*n3 + 19*d*n3 - 2*d^2*n3 - 9*n2*n3 + 
      2*n2^2*n3 + 3*n3^2 - 3*d*n3^2 + 5*n2*n3^2 + 2*n3^3 - 15*n3*n5 + 
      6*d*n3*n5 - 6*n2*n3*n5 - 3*n3^2*n5)*j[p4, -1 + n1, -1 + n2, 1 + n3, 1, 
      1 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 0])/(2*(-n2 + n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((35 - 19*d + 2*d^2 + 9*n2 - 2*n2^2 - 3*n3 + 
      3*d*n3 - 5*n2*n3 - 2*n3^2 + 15*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*
     j[p4, -1 + n1, n2, -1 + n3, 1, 1 + n5, 0, 0, 0, 0, 2, 1, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-240 + 276*d - 102*d^2 + 12*d^3 + 240*n1 - 276*d*n1 + 102*d^2*n1 - 
      12*d^3*n1 - 736*n2 + 668*d*n2 - 188*d^2*n2 + 16*d^3*n2 - 34*n1*n2 + 
      15*d*n1*n2 - 2*d^2*n1*n2 - 300*n2^2 + 146*d*n2^2 - 13*d^2*n2^2 - 
      55*n1*n2^2 + 15*d*n1*n2^2 - 2*n2^3 - 9*d*n2^3 - n1*n2^3 + 6*n2^4 - 
      168*n3 + 114*d*n3 - 18*d^2*n3 + 168*n1*n3 - 114*d*n1*n3 + 
      18*d^2*n1*n3 - 202*n2*n3 + 73*d*n2*n3 - d^2*n2*n3 + 15*n1*n2*n3 - 
      2*d*n1*n2*n3 + 27*n2^2*n3 - 27*d*n2^2*n3 - 3*n1*n2^2*n3 + 21*n2^3*n3 - 
      24*n3^2 + 6*d*n3^2 + 24*n1*n3^2 - 6*d*n1*n3^2 + 23*n2*n3^2 - 
      15*d*n2*n3^2 - 2*n1*n2*n3^2 + 21*n2^2*n3^2 + 6*n2*n3^3 - 300*n5 + 
      330*d*n5 - 114*d^2*n5 + 12*d^3*n5 + 300*n1*n5 - 330*d*n1*n5 + 
      114*d^2*n1*n5 - 12*d^3*n1*n5 - 1080*n2*n5 + 908*d*n2*n5 - 
      228*d^2*n2*n5 + 16*d^3*n2*n5 - 40*n1*n2*n5 + 15*d*n1*n2*n5 - 
      2*d^2*n1*n2*n5 - 466*n2^2*n5 + 201*d*n2^2*n5 - 13*d^2*n2^2*n5 - 
      67*n1*n2^2*n5 + 15*d*n1*n2^2*n5 - 17*n2^3*n5 - 9*d*n2^3*n5 - 
      n1*n2^3*n5 + 6*n2^4*n5 - 210*n3*n5 + 132*d*n3*n5 - 18*d^2*n3*n5 + 
      210*n1*n3*n5 - 132*d*n1*n3*n5 + 18*d^2*n1*n3*n5 - 320*n2*n3*n5 + 
      110*d*n2*n3*n5 - d^2*n2*n3*n5 + 21*n1*n2*n3*n5 - 2*d*n1*n2*n3*n5 + 
      3*n2^2*n3*n5 - 27*d*n2^2*n3*n5 - 3*n1*n2^2*n3*n5 + 21*n2^3*n3*n5 - 
      30*n3^2*n5 + 6*d*n3^2*n5 + 30*n1*n3^2*n5 - 6*d*n1*n3^2*n5 + 
      14*n2*n3^2*n5 - 15*d*n2*n3^2*n5 - 2*n1*n2*n3^2*n5 + 21*n2^2*n3^2*n5 + 
      6*n2*n3^3*n5 - 60*n5^2 + 54*d*n5^2 - 12*d^2*n5^2 + 60*n1*n5^2 - 
      54*d*n1*n5^2 + 12*d^2*n1*n5^2 - 374*n2*n5^2 + 252*d*n2*n5^2 - 
      40*d^2*n2*n5^2 - 6*n1*n2*n5^2 - 178*n2^2*n5^2 + 55*d*n2^2*n5^2 - 
      12*n1*n2^2*n5^2 - 15*n2^3*n5^2 - 42*n3*n5^2 + 18*d*n3*n5^2 + 
      42*n1*n3*n5^2 - 18*d*n1*n3*n5^2 - 124*n2*n3*n5^2 + 37*d*n2*n3*n5^2 + 
      6*n1*n2*n3*n5^2 - 24*n2^2*n3*n5^2 - 6*n3^2*n5^2 + 6*n1*n3^2*n5^2 - 
      9*n2*n3^2*n5^2 - 30*n2*n5^3 + 12*d*n2*n5^3 - 12*n2^2*n5^3 - 
      6*n2*n3*n5^3)*j[p4, -1 + n1, n2, -1 + n3, 1, 2 + n5, 0, 0, 0, 1, 1, 1, 
      1, 1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((-35 + 19*d - 2*d^2 - 9*n2 + 2*n2^2 + 3*n3 - 
      3*d*n3 + 5*n2*n3 + 2*n3^2 - 15*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*
     j[p4, -1 + n1, n2, -1 + n3, 2, 1 + n5, 0, 0, 0, 0, 1, 1, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((35 - 19*d + 2*d^2 + 9*n2 - 2*n2^2 - 3*n3 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 
      15*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, -1 + n1, n2, -1 + n3, 2, 
      1 + n5, 0, 0, 0, 1, 0, 1, 1, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((-35 + 19*d - 2*d^2 - 9*n2 + 2*n2^2 + 3*n3 - 
      3*d*n3 + 5*n2*n3 + 2*n3^2 - 15*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*
     j[p4, -1 + n1, n2, -1 + n3, 2, 1 + n5, 0, 0, 0, 1, 1, 0, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-70 + 38*d - 4*d^2 - 18*n2 + 4*n2^2 - 29*n3 + 13*d*n3 - 2*d^2*n3 + 
      n2*n3 + 2*n2^2*n3 + 7*n3^2 - 3*d*n3^2 + 5*n2*n3^2 + 2*n3^3 - 100*n5 + 
      50*d*n5 - 4*d^2*n5 - 30*n2*n5 + 4*n2^2*n5 - 15*n3*n5 + 4*n2*n3*n5 + 
      n3^2*n5 - 30*n5^2 + 12*d*n5^2 - 12*n2*n5^2 - 6*n3*n5^2)*
     j[p4, -1 + n1, n2, n3, 0, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((35 - 19*d + 2*d^2 + 9*n2 - 2*n2^2 - 3*n3 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 
      15*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, -1 + n1, n2, n3, 0, 1 + n5, 
      0, 0, 0, 1, 1, 1, 1, 1, 2])/((n2 - n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((-35 + 19*d - 2*d^2 - 9*n2 + 2*n2^2 + 3*n3 - 
      3*d*n3 + 5*n2*n3 + 2*n3^2 - 15*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*
     j[p4, -1 + n1, n2, n3, 0, 1 + n5, 0, 0, 0, 1, 1, 1, 2, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-35 + 19*d - 2*d^2 - 9*n2 + 2*n2^2 + 3*n3 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      15*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, -1 + n1, n2, n3, 0, 1 + n5, 
      0, 0, 0, 1, 1, 2, 1, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((35 - 19*d + 2*d^2 + 9*n2 - 2*n2^2 - 3*n3 + 
      3*d*n3 - 5*n2*n3 - 2*n3^2 + 15*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*
     j[p4, -1 + n1, n2, n3, 0, 1 + n5, 0, 0, 0, 2, 1, 1, 1, 1, 1])/
    ((n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((15 - 6*d + 6*n2 + 3*n3 + 15*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*
     j[p4, -1 + n1, n2, n3, 0, 2 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    ((n2 - n3)*(-3 + d - n1 - n5)) + 
   ((-35 + 19*d - 2*d^2 - 9*n2 + 2*n2^2 + 3*n3 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      15*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, -1 + n1, n2, n3, 1, n5, 0, 0, 
      0, 0, 1, 1, 1, 1, 2])/((n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((35 - 19*d + 2*d^2 + 9*n2 - 2*n2^2 - 3*n3 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 
      15*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, -1 + n1, n2, n3, 1, n5, 0, 0, 
      0, 1, 1, 0, 2, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((35 - 19*d + 2*d^2 + 9*n2 - 2*n2^2 - 3*n3 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 
      15*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, -1 + n1, n2, n3, 1, n5, 0, 0, 
      0, 1, 1, 1, 0, 2, 1])/((n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((35 - 19*d + 2*d^2 + 9*n2 - 2*n2^2 - 3*n3 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 
      15*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, -1 + n1, n2, n3, 1, n5, 0, 0, 
      0, 1, 1, 2, 0, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-35 + 19*d - 2*d^2 - 9*n2 + 2*n2^2 + 3*n3 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      15*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 
      -1, 0, 0, 0, 1, 1, 1, 1, 2])/((n2 - n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((35 - 19*d + 2*d^2 + 9*n2 - 2*n2^2 - 3*n3 + 
      3*d*n3 - 5*n2*n3 - 2*n3^2 + 15*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*
     j[p4, -1 + n1, n2, n3, 1, 1 + n5, -1, 0, 0, 1, 1, 0, 2, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((35 - 19*d + 2*d^2 + 9*n2 - 2*n2^2 - 3*n3 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 
      15*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 
      -1, 0, 0, 1, 1, 2, 0, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((35 - 19*d + 2*d^2 + 9*n2 - 2*n2^2 - 3*n3 + 
      3*d*n3 - 5*n2*n3 - 2*n3^2 + 15*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*
     j[p4, -1 + n1, n2, n3, 1, 1 + n5, -1, 0, 0, 1, 2, 0, 1, 1, 1])/
    ((n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((35 - 19*d + 2*d^2 + 9*n2 - 2*n2^2 - 3*n3 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 
      15*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 
      -1, 0, 0, 1, 2, 1, 0, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((-35 + 19*d - 2*d^2 - 9*n2 + 2*n2^2 + 3*n3 - 
      3*d*n3 + 5*n2*n3 + 2*n3^2 - 15*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*
     j[p4, -1 + n1, n2, n3, 1, 1 + n5, -1, 0, 0, 1, 2, 1, 1, 0, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-35 + 19*d - 2*d^2 - 9*n2 + 2*n2^2 + 3*n3 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      15*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 
      0, -1, 0, 0, 1, 1, 1, 1, 2])/((n2 - n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((-105 + 57*d - 6*d^2 - 27*n2 + 6*n2^2 + 9*n3 - 
      9*d*n3 + 15*n2*n3 + 6*n3^2 - 45*n5 + 18*d*n5 - 18*n2*n5 - 9*n3*n5)*
     j[p4, -1 + n1, n2, n3, 1, 1 + n5, 0, -1, 0, 0, 2, 1, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((35 - 19*d + 2*d^2 + 9*n2 - 2*n2^2 - 3*n3 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 
      15*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 
      0, -1, 0, 1, 1, 0, 2, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((35 - 19*d + 2*d^2 + 9*n2 - 2*n2^2 - 3*n3 + 
      3*d*n3 - 5*n2*n3 - 2*n3^2 + 15*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*
     j[p4, -1 + n1, n2, n3, 1, 1 + n5, 0, -1, 0, 1, 1, 2, 0, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-35 + 19*d - 2*d^2 - 9*n2 + 2*n2^2 + 3*n3 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      15*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 
      0, 0, -1, 0, 1, 1, 1, 1, 2])/((n2 - n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((-35 + 19*d - 2*d^2 - 9*n2 + 2*n2^2 + 3*n3 - 
      3*d*n3 + 5*n2*n3 + 2*n3^2 - 15*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*
     j[p4, -1 + n1, n2, n3, 1, 1 + n5, 0, 0, -1, 0, 2, 1, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((35 - 19*d + 2*d^2 + 9*n2 - 2*n2^2 - 3*n3 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 
      15*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 
      0, 0, -1, 1, 1, 0, 2, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((-35 + 19*d - 2*d^2 - 9*n2 + 2*n2^2 + 3*n3 - 
      3*d*n3 + 5*n2*n3 + 2*n3^2 - 15*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*
     j[p4, -1 + n1, n2, n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 2, 0])/
    ((n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((35 - 19*d + 2*d^2 + 9*n2 - 2*n2^2 - 3*n3 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 
      15*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 
      0, 0, -1, 1, 1, 2, 0, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((35 - 19*d + 2*d^2 + 35*n1 - 19*d*n1 + 2*d^2*n1 + 
      9*n2 + 9*n1*n2 - 2*n2^2 - 2*n1*n2^2 - 3*n3 + 3*d*n3 - 3*n1*n3 + 
      3*d*n1*n3 - 5*n2*n3 - 5*n1*n2*n3 - 2*n3^2 - 2*n1*n3^2 - 90*n5 + 
      51*d*n5 - 6*d^2*n5 + 15*n1*n5 - 6*d*n1*n5 - 21*n2*n5 + 6*n1*n2*n5 + 
      6*n2^2*n5 + 12*n3*n5 - 9*d*n3*n5 + 3*n1*n3*n5 + 15*n2*n3*n5 + 
      6*n3^2*n5 - 45*n5^2 + 18*d*n5^2 - 18*n2*n5^2 - 9*n3*n5^2)*
     j[p4, -1 + n1, n2, n3, 1, 1 + n5, 0, 0, 0, 0, 1, 1, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-35 + 19*d - 2*d^2 - 9*n2 + 2*n2^2 + 3*n3 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      15*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 
      0, 0, 0, 0, 1, 2, 1, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((-75 + 45*d - 6*d^2 - 25*n2 + 4*d*n2 + 2*n2^2 - 
      5*n3 - d*n3 + 5*n2*n3 + 2*n3^2 - 25*n5 + 10*d*n5 - 10*n2*n5 - 5*n3*n5)*
     j[p4, -1 + n1, n2, n3, 1, 1 + n5, 0, 0, 0, 0, 2, 1, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-35 + 19*d - 2*d^2 + 26*n2 - 19*d*n2 + 2*d^2*n2 + 11*n2^2 - 2*n2^3 + 
      38*n3 - 22*d*n3 + 2*d^2*n3 + 11*n2*n3 + 3*d*n2*n3 - 7*n2^2*n3 - n3^2 + 
      3*d*n3^2 - 7*n2*n3^2 - 2*n3^3 - 15*n5 + 6*d*n5 + 9*n2*n5 - 6*d*n2*n5 + 
      6*n2^2*n5 + 12*n3*n5 - 6*d*n3*n5 + 9*n2*n3*n5 + 3*n3^2*n5)*
     j[p4, -1 + n1, n2, n3, 1, 1 + n5, 0, 0, 0, 1, 0, 1, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-70 + 38*d - 4*d^2 - 70*n1 + 38*d*n1 - 4*d^2*n1 - 18*n2 - 18*n1*n2 + 
      4*n2^2 + 4*n1*n2^2 - 29*n3 + 13*d*n3 - 2*d^2*n3 + 6*n1*n3 - 6*d*n1*n3 + 
      n2*n3 + 10*n1*n2*n3 + 2*n2^2*n3 + 7*n3^2 - 3*d*n3^2 + 4*n1*n3^2 + 
      5*n2*n3^2 + 2*n3^3 - 30*n5 + 12*d*n5 - 30*n1*n5 + 12*d*n1*n5 - 
      12*n2*n5 - 12*n1*n2*n5 - 21*n3*n5 + 6*d*n3*n5 - 6*n1*n3*n5 - 
      6*n2*n3*n5 - 3*n3^2*n5)*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 0, 0, 0, 1, 
      1, 0, 1, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-35 + 19*d - 2*d^2 - 9*n2 + 2*n2^2 + 3*n3 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      15*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 
      0, 0, 0, 1, 1, 1, 0, 1, 1])/((n2 - n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((35 - 19*d + 2*d^2 + 9*n2 - 2*n2^2 - 3*n3 + 
      3*d*n3 - 5*n2*n3 - 2*n3^2 + 15*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*
     j[p4, -1 + n1, n2, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 0, 1, 2])/
    ((n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((35 - 19*d + 2*d^2 + 9*n2 - 2*n2^2 - 3*n3 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 
      15*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 
      0, 0, 0, 1, 1, 1, 0, 2, 1])/((n2 - n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((105 - 57*d + 6*d^2 - 35*n1 + 19*d*n1 - 
      2*d^2*n1 + 27*n2 - 9*n1*n2 - 6*n2^2 + 2*n1*n2^2 - 9*n3 + 9*d*n3 + 
      3*n1*n3 - 3*d*n1*n3 - 15*n2*n3 + 5*n1*n2*n3 - 6*n3^2 + 2*n1*n3^2 + 
      80*n5 - 37*d*n5 + 2*d^2*n5 - 15*n1*n5 + 6*d*n1*n5 + 27*n2*n5 - 
      6*n1*n2*n5 - 2*n2^2*n5 + 6*n3*n5 + 3*d*n3*n5 - 3*n1*n3*n5 - 
      5*n2*n3*n5 - 2*n3^2*n5 + 15*n5^2 - 6*d*n5^2 + 6*n2*n5^2 + 3*n3*n5^2)*
     j[p4, -1 + n1, n2, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 0, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((35*n3 - 19*d*n3 + 2*d^2*n3 + 9*n2*n3 - 2*n2^2*n3 - 3*n3^2 + 3*d*n3^2 - 
      5*n2*n3^2 - 2*n3^3 - 35*n5 + 19*d*n5 - 2*d^2*n5 - 9*n2*n5 + 2*n2^2*n5 + 
      18*n3*n5 - 9*d*n3*n5 + 11*n2*n3*n5 + 5*n3^2*n5 - 15*n5^2 + 6*d*n5^2 - 
      6*n2*n5^2 - 3*n3*n5^2)*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 
      1, 1, 1, 0])/(2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((2560 - 3724*d + 2015*d^2 - 479*d^3 + 42*d^4 - 970*n1 + 2083*d*n1 - 
      1463*d^2*n1 + 419*d^3*n1 - 42*d^4*n1 - 1350*n1^2 + 1485*d*n1^2 - 
      528*d^2*n1^2 + 60*d^3*n1^2 - 240*n1^3 + 156*d*n1^3 - 24*d^2*n1^3 + 
      2764*n2 - 2841*d*n2 + 945*d^2*n2 - 100*d^3*n2 - 873*n1*n2 + 
      1447*d*n1*n2 - 649*d^2*n1*n2 + 84*d^3*n1*n2 - 1025*n1^2*n2 + 
      687*d*n1^2*n2 - 106*d^2*n1^2*n2 - 96*n1^3*n2 + 24*d*n1^3*n2 + 
      760*n2^2 - 424*d*n2^2 + 47*d^2*n2^2 - 216*n1*n2^2 + 219*d*n1*n2^2 - 
      34*d^2*n1*n2^2 - 189*n1^2*n2^2 + 44*d*n1^2*n2^2 - 10*n2^3 + 25*d*n2^3 + 
      11*n1*n2^3 - 16*d*n1*n2^3 + 2*n1^2*n2^3 - 14*n2^4 + 8*n1*n2^4 + 
      3022*n3 - 3574*d*n3 + 1479*d^2*n3 - 243*d^3*n3 + 12*d^4*n3 + 81*n1*n3 + 
      304*d*n1*n3 - 232*d^2*n1*n3 + 39*d^3*n1*n3 - 295*n1^2*n3 + 
      204*d*n1^2*n3 - 32*d^2*n1^2*n3 - 48*n1^3*n3 + 12*d*n1^3*n3 + 
      2609*n2*n3 - 2084*d*n2*n3 + 501*d^2*n2*n3 - 35*d^3*n2*n3 + 
      335*n1*n2*n3 - 74*d*n1*n2*n3 - 3*d^2*n1*n2*n3 - 101*n1^2*n2*n3 + 
      22*d*n1^2*n2*n3 + 440*n2^2*n3 - 152*d*n2^2*n3 + 9*d^2*n2^2*n3 + 
      166*n1*n2^2*n3 - 56*d*n1*n2^2*n3 + 4*n1^2*n2^2*n3 - 67*n2^3*n3 + 
      26*d*n2^3*n3 + 20*n1*n2^3*n3 - 12*n2^4*n3 + 681*n3^2 - 434*d*n3^2 + 
      46*d^2*n3^2 + 7*d^3*n3^2 - 205*n1*n3^2 + 229*d*n1*n3^2 - 
      53*d^2*n1*n3^2 - 16*n1^2*n3^2 + 6*d*n1^2*n3^2 + 146*n2*n3^2 + 
      71*d*n2*n3^2 - 39*d^2*n2*n3^2 - 55*n1*n2*n3^2 + 32*d*n1*n2*n3^2 - 
      2*n1^2*n2*n3^2 - 177*n2^2*n3^2 + 81*d*n2^2*n3^2 - 42*n2^3*n3^2 - 
      46*n3^3 + 73*d*n3^3 - 19*d^2*n3^3 - 98*n1*n3^3 + 40*d*n1*n3^3 - 
      4*n1^2*n3^3 - 128*n2*n3^3 + 55*d*n2*n3^3 - 20*n1*n2*n3^3 - 
      42*n2^2*n3^3 - 16*n3^4 + 6*d*n3^4 - 8*n1*n3^4 - 12*n2*n3^4 + 1670*n5 - 
      1838*d*n5 + 673*d^2*n5 - 82*d^3*n5 - 890*n1*n5 + 1271*d*n1*n5 - 
      571*d^2*n1*n5 + 82*d^3*n1*n5 - 720*n1^2*n5 + 543*d*n1^2*n5 - 
      102*d^2*n1^2*n5 - 60*n1^3*n5 + 24*d*n1^3*n5 + 2102*n2*n5 - 
      1664*d*n2*n5 + 371*d^2*n2*n5 - 16*d^3*n2*n5 - 537*n1*n2*n5 + 
      586*d*n1*n2*n5 - 141*d^2*n1*n2*n5 - 421*n1^2*n2*n5 + 155*d*n1^2*n2*n5 - 
      24*n1^3*n2*n5 + 695*n2^2*n5 - 290*d*n2^2*n5 + 13*d^2*n2^2*n5 - 
      109*n1*n2^2*n5 + 74*d*n1*n2^2*n5 - 53*n1^2*n2^2*n5 + 33*n2^3*n5 + 
      9*d*n2^3*n5 - 15*n1*n2^3*n5 - 6*n2^4*n5 + 2500*n3*n5 - 2323*d*n3*n5 + 
      680*d^2*n3*n5 - 60*d^3*n3*n5 + 373*n1*n3*n5 - 135*d*n1*n3*n5 - 
      2*d^2*n1*n3*n5 - 161*n1^2*n3*n5 + 58*d*n1^2*n3*n5 - 12*n1^3*n3*n5 + 
      2009*n2*n3*n5 - 1136*d*n2*n3*n5 + 140*d^2*n2*n3*n5 + 257*n1*n2*n3*n5 - 
      40*d*n1*n2*n3*n5 - 33*n1^2*n2*n3*n5 + 362*n2^2*n3*n5 - 
      68*d*n2^2*n3*n5 + 22*n1*n2^2*n3*n5 - 5*n2^3*n3*n5 + 536*n3^2*n5 - 
      248*d*n3^2*n5 + 15*d^2*n3^2*n5 + 74*n1*n3^2*n5 - 4*d*n1*n3^2*n5 - 
      4*n1^2*n3^2*n5 + 167*n2*n3^2*n5 - 3*d*n2*n3^2*n5 + 3*n1*n2*n3^2*n5 - 
      21*n2^2*n3^2*n5 - 44*n3^3*n5 + 33*d*n3^3*n5 - 10*n1*n3^3*n5 - 
      34*n2*n3^3*n5 - 12*n3^4*n5 + 380*n5^2 - 282*d*n5^2 + 52*d^2*n5^2 - 
      290*n1*n5^2 + 246*d*n1*n5^2 - 52*d^2*n1*n5^2 - 90*n1^2*n5^2 + 
      36*d*n1^2*n5^2 + 540*n2*n5^2 - 307*d*n2*n5^2 + 40*d^2*n2*n5^2 - 
      124*n1*n2*n5^2 + 55*d*n1*n2*n5^2 - 36*n1^2*n2*n5^2 + 193*n2^2*n5^2 - 
      55*d*n2^2*n5^2 - 3*n1*n2^2*n5^2 + 15*n2^3*n5^2 + 748*n3*n5^2 - 
      505*d*n3*n5^2 + 84*d^2*n3*n5^2 + 50*n1*n3*n5^2 - 17*d*n1*n3*n5^2 - 
      18*n1^2*n3*n5^2 + 512*n2*n3*n5^2 - 171*d*n2*n3*n5^2 + 
      42*n1*n2*n3*n5^2 + 74*n2^2*n3*n5^2 + 191*n3^2*n5^2 - 64*d*n3^2*n5^2 + 
      21*n1*n3^2*n5^2 + 57*n2*n3^2*n5^2 + 10*n3^3*n5^2 + 30*n5^3 - 
      12*d*n5^3 - 30*n1*n5^3 + 12*d*n1*n5^3 + 42*n2*n5^3 - 12*d*n2*n5^3 - 
      12*n1*n2*n5^3 + 12*n2^2*n5^3 + 66*n3*n5^3 - 24*d*n3*n5^3 - 
      6*n1*n3*n5^3 + 30*n2*n3*n5^3 + 12*n3^2*n5^3)*j[p4, -1 + n1, n2, n3, 1, 
      1 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*
     (n2 - n3)*(-4 + d - n5)*(3 - d + n1 + n5)) + 
   ((-570 + 573*d - 183*d^2 + 18*d^3 + 330*n1 - 417*d*n1 + 159*d^2*n1 - 
      18*d^3*n1 + 240*n1^2 - 156*d*n1^2 + 24*d^2*n1^2 - 303*n2 + 168*d*n2 - 
      18*d^2*n2 + 207*n1*n2 - 144*d*n1*n2 + 18*d^2*n1*n2 + 96*n1^2*n2 - 
      24*d*n1^2*n2 - 15*n2^2 - 6*d*n2^2 + 15*n1*n2^2 + 6*d*n1*n2^2 + 6*n2^3 - 
      6*n1*n2^3 - 619*n3 + 516*d*n3 - 137*d^2*n3 + 12*d^3*n3 - 119*n1*n3 + 
      87*d*n1*n3 - 19*d^2*n1*n3 + 48*n1^2*n3 - 12*d*n1^2*n3 - 198*n2*n3 + 
      78*d*n2*n3 - 7*d^2*n2*n3 - 101*n1*n2*n3 + 45*d*n1*n2*n3 + 25*n2^2*n3 - 
      11*d*n2^2*n3 - 20*n1*n2^2*n3 + 6*n2^3*n3 - 55*n3^2 - 2*d*n3^2 + 
      7*d^2*n3^2 - 60*n1*n3^2 + 23*d*n1*n3^2 + 66*n2*n3^2 - 33*d*n2*n3^2 - 
      18*n1*n2*n3^2 + 21*n2^2*n3^2 + 41*n3^3 - 19*d*n3^3 - 4*n1*n3^3 + 
      21*n2*n3^3 + 6*n3^4 - 300*n5 + 225*d*n5 - 42*d^2*n5 + 240*n1*n5 - 
      201*d*n1*n5 + 42*d^2*n1*n5 + 60*n1^2*n5 - 24*d*n1^2*n5 - 165*n2*n5 + 
      60*d*n2*n5 + 141*n1*n2*n5 - 60*d*n1*n2*n5 + 24*n1^2*n2*n5 - 
      18*n2^2*n5 + 18*n1*n2^2*n5 - 375*n3*n5 + 237*d*n3*n5 - 36*d^2*n3*n5 + 
      33*n1*n3*n5 - 15*d*n1*n3*n5 + 12*n1^2*n3*n5 - 167*n2*n3*n5 + 
      49*d*n2*n3*n5 + 3*n1*n2*n3*n5 - 13*n2^2*n3*n5 - 91*n3^2*n5 + 
      29*d*n3^2*n5 - 3*n1*n3^2*n5 - 18*n2*n3^2*n5 - 5*n3^3*n5 - 30*n5^2 + 
      12*d*n5^2 + 30*n1*n5^2 - 12*d*n1*n5^2 - 12*n2*n5^2 + 12*n1*n2*n5^2 - 
      36*n3*n5^2 + 12*d*n3*n5^2 + 6*n1*n3*n5^2 - 12*n2*n3*n5^2 - 6*n3^2*n5^2)*
     j[p4, -1 + n1, n2, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 2, 0])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((-35 + 19*d - 2*d^2 - 9*n2 + 2*n2^2 + 3*n3 - 
      3*d*n3 + 5*n2*n3 + 2*n3^2 - 15*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*
     j[p4, -1 + n1, n2, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 2, 1, 0])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((50 - 30*d + 4*d^2 + 5*n1 - 2*d*n1 + 12*n2 - d*n2 + n1*n2 - 2*n2^2 + 
      3*n3 + d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 20*n5 - 8*d*n5 + 7*n2*n5 + 
      5*n3*n5)*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 2, 0, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((75 - 50*d + 8*d^2 + 5*n1 - 2*d*n1 + 27*n2 - 7*d*n2 + n1*n2 + 18*n3 - 
      5*d*n3 + 2*n1*n3 + 20*n5 - 8*d*n5 + 7*n2*n5 + 5*n3*n5)*
     j[p4, -1 + n1, n2, n3, 1, 1 + n5, 0, 0, 0, 1, 2, 0, 1, 1, 1])/
    ((n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((35 - 19*d + 2*d^2 + 9*n2 - 2*n2^2 - 3*n3 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 
      15*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 
      0, 0, 0, 2, 1, 0, 1, 1, 1])/((n2 - n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((20 - 8*d - 5*n1 + 2*d*n1 + 6*n2 + d*n2 - n1*n2 - 
      2*n2^2 - 9*n3 + 5*d*n3 - 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 10*n5 - 4*d*n5 + 
      5*n2*n5 + n3*n5)*j[p4, -1 + n1, n2, n3, 1, 1 + n5, 0, 0, 0, 2, 1, 1, 1, 
      1, 0])/(2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-35 + 19*d - 2*d^2 - 9*n2 + 2*n2^2 + 3*n3 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      50*n5 + 25*d*n5 - 2*d^2*n5 - 15*n2*n5 + 2*n2^2*n5 - 3*d*n3*n5 + 
      5*n2*n3*n5 + 2*n3^2*n5 - 15*n5^2 + 6*d*n5^2 - 6*n2*n5^2 - 3*n3*n5^2)*
     j[p4, -1 + n1, n2, n3, 1, 2 + n5, -1, 0, 0, 0, 1, 1, 1, 1, 1])/
    ((n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((10 - 4*d + 5*n1 - 2*d*n1 - 4*n2 + 3*d*n2 + n1*n2 - 2*n2^2 - 5*n3 + 
      3*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 20*n5 - 8*d*n5 + 5*n1*n5 - 
      2*d*n1*n5 - n2*n5 + 3*d*n2*n5 + n1*n2*n5 - 2*n2^2*n5 - 2*n3*n5 + 
      3*d*n3*n5 + 2*n1*n3*n5 - 5*n2*n3*n5 - 2*n3^2*n5 + 10*n5^2 - 4*d*n5^2 + 
      3*n2*n5^2 + 3*n3*n5^2)*j[p4, -1 + n1, n2, n3, 1, 2 + n5, -1, 0, 0, 1, 
      1, 1, 1, 1, 1])/(2*(n2 - n3)*(4 - d + n5)*(3 - d + n1 + n5)) + 
   ((-35 + 19*d - 2*d^2 - 9*n2 + 2*n2^2 + 3*n3 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      50*n5 + 25*d*n5 - 2*d^2*n5 - 15*n2*n5 + 2*n2^2*n5 - 3*d*n3*n5 + 
      5*n2*n3*n5 + 2*n3^2*n5 - 15*n5^2 + 6*d*n5^2 - 6*n2*n5^2 - 3*n3*n5^2)*
     j[p4, -1 + n1, n2, n3, 1, 2 + n5, 0, -1, 0, 0, 1, 1, 1, 1, 1])/
    ((n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-20 + 18*d - 4*d^2 + 10*n1 - 9*d*n1 + 2*d^2*n1 + 10*n1^2 - 9*d*n1^2 + 
      2*d^2*n1^2 + 518*n2 - 524*d*n2 + 167*d^2*n2 - 16*d^3*n2 + 245*n1*n2 - 
      156*d*n1*n2 + 23*d^2*n1*n2 + 7*n1^2*n2 - 3*d*n1^2*n2 + 260*n2^2 - 
      139*d*n2^2 + 13*d^2*n2^2 + 94*n1*n2^2 - 22*d*n1*n2^2 + n1^2*n2^2 + 
      4*n2^3 + 9*d*n2^3 - n1*n2^3 - 6*n2^4 - 7*d*n3 + 3*d^2*n3 - 9*n1*n3 + 
      11*d*n1*n3 - 3*d^2*n1*n3 + 9*n1^2*n3 - 4*d*n1^2*n3 + 149*n2*n3 - 
      66*d*n2*n3 + d^2*n2*n3 + 35*n1*n2*n3 - 5*d*n1*n2*n3 + 3*n1^2*n2*n3 - 
      20*n2^2*n3 + 27*d*n2^2*n3 - 4*n1*n2^2*n3 - 21*n2^3*n3 + 9*n3^2 - 
      5*d*n3^2 - 11*n1*n3^2 + 5*d*n1*n3^2 + 2*n1^2*n3^2 - 16*n2*n3^2 + 
      15*d*n2*n3^2 - 5*n1*n2*n3^2 - 21*n2^2*n3^2 + 2*n3^3 - 2*n1*n3^3 - 
      6*n2*n3^3 - 40*n5 + 36*d*n5 - 8*d^2*n5 + 30*n1*n5 - 27*d*n1*n5 + 
      6*d^2*n1*n5 + 10*n1^2*n5 - 9*d*n1^2*n5 + 2*d^2*n1^2*n5 + 792*n2*n5 - 
      733*d*n2*n5 + 207*d^2*n2*n5 - 16*d^3*n2*n5 + 321*n1*n2*n5 - 
      187*d*n1*n2*n5 + 23*d^2*n1*n2*n5 + 7*n1^2*n2*n5 - 3*d*n1^2*n2*n5 + 
      411*n2^2*n5 - 194*d*n2^2*n5 + 13*d^2*n2^2*n5 + 121*n1*n2^2*n5 - 
      22*d*n1*n2^2*n5 + n1^2*n2^2*n5 + 19*n2^3*n5 + 9*d*n2^3*n5 - 
      n1*n2^3*n5 - 6*n2^4*n5 - 16*n3*n5 + 3*d^2*n3*n5 + 7*n1*n3*n5 + 
      4*d*n1*n3*n5 - 3*d^2*n1*n3*n5 + 9*n1^2*n3*n5 - 4*d*n1^2*n3*n5 + 
      243*n2*n3*n5 - 103*d*n2*n3*n5 + d^2*n2*n3*n5 + 53*n1*n2*n3*n5 - 
      5*d*n1*n2*n3*n5 + 3*n1^2*n2*n3*n5 + 4*n2^2*n3*n5 + 27*d*n2^2*n3*n5 - 
      4*n1*n2^2*n3*n5 - 21*n2^3*n3*n5 + 6*n3^2*n5 - 5*d*n3^2*n5 - 
      8*n1*n3^2*n5 + 5*d*n1*n3^2*n5 + 2*n1^2*n3^2*n5 - 7*n2*n3^2*n5 + 
      15*d*n2*n3^2*n5 - 5*n1*n2*n3^2*n5 - 21*n2^2*n3^2*n5 + 2*n3^3*n5 - 
      2*n1*n3^3*n5 - 6*n2*n3^3*n5 - 20*n5^2 + 18*d*n5^2 - 4*d^2*n5^2 + 
      20*n1*n5^2 - 18*d*n1*n5^2 + 4*d^2*n1*n5^2 + 304*n2*n5^2 - 
      221*d*n2*n5^2 + 40*d^2*n2*n5^2 + 76*n1*n2*n5^2 - 31*d*n1*n2*n5^2 + 
      163*n2^2*n5^2 - 55*d*n2^2*n5^2 + 27*n1*n2^2*n5^2 + 15*n2^3*n5^2 - 
      16*n3*n5^2 + 7*d*n3*n5^2 + 16*n1*n3*n5^2 - 7*d*n1*n3*n5^2 + 
      100*n2*n3*n5^2 - 37*d*n2*n3*n5^2 + 18*n1*n2*n3*n5^2 + 24*n2^2*n3*n5^2 - 
      3*n3^2*n5^2 + 3*n1*n3^2*n5^2 + 9*n2*n3^2*n5^2 + 30*n2*n5^3 - 
      12*d*n2*n5^3 + 12*n2^2*n5^3 + 6*n2*n3*n5^3)*j[p4, -1 + n1, n2, n3, 1, 
      2 + n5, 0, -1, 0, 1, 1, 1, 1, 1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*
     (n2 - n3)*(-4 + d - n5)*(3 - d + n1 + n5)) + 
   ((10 - 4*d + 5*n1 - 2*d*n1 - 4*n2 + 3*d*n2 + n1*n2 - 2*n2^2 - 5*n3 + 
      3*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 20*n5 - 8*d*n5 + 5*n1*n5 - 
      2*d*n1*n5 - n2*n5 + 3*d*n2*n5 + n1*n2*n5 - 2*n2^2*n5 - 2*n3*n5 + 
      3*d*n3*n5 + 2*n1*n3*n5 - 5*n2*n3*n5 - 2*n3^2*n5 + 10*n5^2 - 4*d*n5^2 + 
      3*n2*n5^2 + 3*n3*n5^2)*j[p4, -1 + n1, n2, n3, 1, 2 + n5, 0, 0, -1, 1, 
      1, 1, 1, 1, 1])/(2*(n2 - n3)*(4 - d + n5)*(3 - d + n1 + n5)) + 
   ((-110 + 74*d - 12*d^2 + 5*n1 - 2*d*n1 - 52*n2 + 15*d*n2 + n1*n2 - 
      2*n2^2 - 29*n3 + 9*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 - 130*n5 + 
      82*d*n5 - 12*d^2*n5 + 5*n1*n5 - 2*d*n1*n5 - 61*n2*n5 + 15*d*n2*n5 + 
      n1*n2*n5 - 2*n2^2*n5 - 32*n3*n5 + 9*d*n3*n5 + 2*n1*n3*n5 - 5*n2*n3*n5 - 
      2*n3^2*n5 - 20*n5^2 + 8*d*n5^2 - 9*n2*n5^2 - 3*n3*n5^2)*
     j[p4, -1 + n1, n2, n3, 1, 2 + n5, 0, 0, 0, 1, 1, 1, 1, 0, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((110 - 74*d + 12*d^2 - 5*n1 + 2*d*n1 + 52*n2 - 15*d*n2 - n1*n2 + 2*n2^2 + 
      29*n3 - 9*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 + 130*n5 - 82*d*n5 + 
      12*d^2*n5 - 5*n1*n5 + 2*d*n1*n5 + 61*n2*n5 - 15*d*n2*n5 - n1*n2*n5 + 
      2*n2^2*n5 + 32*n3*n5 - 9*d*n3*n5 - 2*n1*n3*n5 + 5*n2*n3*n5 + 
      2*n3^2*n5 + 20*n5^2 - 8*d*n5^2 + 9*n2*n5^2 + 3*n3*n5^2)*
     j[p4, -1 + n1, n2, n3, 1, 2 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 0])/
    (2*(n2 - n3)*(4 - d + n5)*(3 - d + n1 + n5)) + 
   ((-35 + 19*d - 2*d^2 - 9*n2 + 2*n2^2 + 3*n3 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      15*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, -1 + n1, n2, n3, 2, n5, 0, 0, 
      0, 0, 1, 1, 1, 1, 1])/((n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((35 - 19*d + 2*d^2 + 9*n2 - 2*n2^2 - 3*n3 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 
      15*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, -1 + n1, n2, n3, 2, n5, 0, 0, 
      0, 1, 0, 1, 1, 1, 1])/((n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-35 + 19*d - 2*d^2 - 9*n2 + 2*n2^2 + 3*n3 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      15*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, -1 + n1, n2, n3, 2, n5, 0, 0, 
      0, 1, 1, 0, 1, 1, 1])/((n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-35 + 19*d - 2*d^2 - 9*n2 + 2*n2^2 + 3*n3 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      15*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, -1 + n1, n2, n3, 2, 1 + n5, 
      -1, 0, 0, 0, 1, 1, 1, 1, 1])/((n2 - n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((35 - 19*d + 2*d^2 + 9*n2 - 2*n2^2 - 3*n3 + 
      3*d*n3 - 5*n2*n3 - 2*n3^2 + 15*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*
     j[p4, -1 + n1, n2, n3, 2, 1 + n5, -1, 0, 0, 1, 0, 1, 1, 1, 1])/
    ((n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-35 + 19*d - 2*d^2 - 9*n2 + 2*n2^2 + 3*n3 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      15*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, -1 + n1, n2, n3, 2, 1 + n5, 
      -1, 0, 0, 1, 1, 0, 1, 1, 1])/((n2 - n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((35 - 19*d + 2*d^2 + 9*n2 - 2*n2^2 - 3*n3 + 
      3*d*n3 - 5*n2*n3 - 2*n3^2 + 15*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*
     j[p4, -1 + n1, n2, n3, 2, 1 + n5, 0, -1, 0, 0, 1, 1, 1, 1, 1])/
    ((n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-35 + 19*d - 2*d^2 - 9*n2 + 2*n2^2 + 3*n3 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      15*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, -1 + n1, n2, n3, 2, 1 + n5, 
      0, -1, 0, 1, 0, 1, 1, 1, 1])/((n2 - n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((35 - 19*d + 2*d^2 + 9*n2 - 2*n2^2 - 3*n3 + 
      3*d*n3 - 5*n2*n3 - 2*n3^2 + 15*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*
     j[p4, -1 + n1, n2, n3, 2, 1 + n5, 0, -1, 0, 1, 1, 0, 1, 1, 1])/
    ((n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((35 - 19*d + 2*d^2 + 9*n2 - 2*n2^2 - 3*n3 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 
      15*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, -1 + n1, n2, n3, 2, 1 + n5, 
      0, -1, 0, 1, 1, 1, 1, 1, 0])/(2*(n2 - n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((35 - 19*d + 2*d^2 + 9*n2 - 2*n2^2 - 3*n3 + 
      3*d*n3 - 5*n2*n3 - 2*n3^2 + 15*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*
     j[p4, -1 + n1, n2, n3, 2, 1 + n5, 0, 0, -1, 0, 1, 1, 1, 1, 1])/
    ((n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-35 + 19*d - 2*d^2 - 9*n2 + 2*n2^2 + 3*n3 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      15*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, -1 + n1, n2, n3, 2, 1 + n5, 
      0, 0, -1, 1, 0, 1, 1, 1, 1])/((n2 - n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((35 - 19*d + 2*d^2 + 9*n2 - 2*n2^2 - 3*n3 + 
      3*d*n3 - 5*n2*n3 - 2*n3^2 + 15*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*
     j[p4, -1 + n1, n2, n3, 2, 1 + n5, 0, 0, -1, 1, 1, 0, 1, 1, 1])/
    ((n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((35 - 19*d + 2*d^2 + 9*n2 - 2*n2^2 - 3*n3 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 
      15*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, -1 + n1, n2, n3, 2, 1 + n5, 
      0, 0, -1, 1, 1, 1, 1, 1, 0])/(2*(n2 - n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((-20 + 8*d - 8*n2 - 4*n3)*
     j[p4, -1 + n1, n2, n3, 2, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 0])/
    ((n2 - n3)*(-3 + d - n1 - n5)) + 
   ((-105*n3 + 57*d*n3 - 6*d^2*n3 - 27*n2*n3 + 6*n2^2*n3 + 9*n3^2 - 
      9*d*n3^2 + 15*n2*n3^2 + 6*n3^3 - 45*n3*n5 + 18*d*n3*n5 - 18*n2*n3*n5 - 
      9*n3^2*n5)*j[p4, -1 + n1, n2, 1 + n3, 0, 1 + n5, 0, -1, 0, 1, 1, 1, 1, 
      1, 1])/(2*(-n2 + n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-105*n3 + 57*d*n3 - 6*d^2*n3 - 27*n2*n3 + 6*n2^2*n3 + 9*n3^2 - 
      9*d*n3^2 + 15*n2*n3^2 + 6*n3^3 - 45*n3*n5 + 18*d*n3*n5 - 18*n2*n3*n5 - 
      9*n3^2*n5)*j[p4, -1 + n1, n2, 1 + n3, 0, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 
      1, 1])/(2*(-n2 + n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((490*n3 - 481*d*n3 + 149*d^2*n3 - 14*d^3*n3 - 250*n1*n3 + 325*d*n1*n3 - 
      125*d^2*n1*n3 + 14*d^3*n1*n3 - 240*n1^2*n3 + 156*d*n1^2*n3 - 
      24*d^2*n1^2*n3 + 231*n2*n3 - 118*d*n2*n3 + 10*d^2*n2*n3 - 
      135*n1*n2*n3 + 94*d*n1*n2*n3 - 10*d^2*n1*n2*n3 - 96*n1^2*n2*n3 + 
      24*d*n1^2*n2*n3 - n2^2*n3 + 10*d*n2^2*n3 + n1*n2^2*n3 - 
      10*d*n1*n2^2*n3 - 6*n2^3*n3 + 6*n1*n2^3*n3 + 563*n3^2 - 478*d*n3^2 + 
      131*d^2*n3^2 - 12*d^3*n3^2 + 175*n1*n3^2 - 125*d*n1*n3^2 + 
      25*d^2*n1*n3^2 - 48*n1^2*n3^2 + 12*d*n1^2*n3^2 + 174*n2*n3^2 - 
      72*d*n2*n3^2 + 7*d^2*n2*n3^2 + 125*n1*n2*n3^2 - 51*d*n1*n2*n3^2 - 
      25*n2^2*n3^2 + 11*d*n2^2*n3^2 + 20*n1*n2^2*n3^2 - 6*n2^3*n3^2 + 
      47*n3^3 + 4*d*n3^3 - 7*d^2*n3^3 + 68*n1*n3^3 - 25*d*n1*n3^3 - 
      66*n2*n3^3 + 33*d*n2*n3^3 + 18*n1*n2*n3^3 - 21*n2^2*n3^3 - 41*n3^4 + 
      19*d*n3^4 + 4*n1*n3^4 - 21*n2*n3^4 - 6*n3^5 - 180*n3*n5 + 237*d*n3*n5 - 
      96*d^2*n3*n5 + 12*d^3*n3*n5 - 450*n1*n3*n5 + 330*d*n1*n3*n5 - 
      60*d^2*n1*n3*n5 - 60*n1^2*n3*n5 + 24*d*n1^2*n3*n5 - 63*n2*n3*n5 + 
      50*d*n2*n3*n5 - 7*d^2*n2*n3*n5 - 212*n1*n2*n3*n5 + 73*d*n1*n2*n3*n5 - 
      24*n1^2*n2*n3*n5 + 18*n2^2*n3*n5 - 11*d*n2^2*n3*n5 - 13*n1*n2^2*n3*n5 + 
      6*n2^3*n3*n5 + 285*n3^2*n5 - 218*d*n3^2*n5 + 43*d^2*n3^2*n5 - 
      58*n1*n3^2*n5 + 17*d*n1*n3^2*n5 - 12*n1^2*n3^2*n5 + 206*n2*n3^2*n5 - 
      82*d*n2*n3^2*n5 + 6*n1*n2*n3^2*n5 + 34*n2^2*n3^2*n5 + 124*n3^3*n5 - 
      48*d*n3^3*n5 + 7*n1*n3^3*n5 + 39*n2*n3^3*n5 + 11*n3^4*n5 - 
      240*n3*n5^2 + 186*d*n3*n5^2 - 36*d^2*n3*n5^2 - 90*n1*n3*n5^2 + 
      36*d*n1*n3*n5^2 - 128*n2*n3*n5^2 + 49*d*n2*n3*n5^2 - 36*n1*n2*n3*n5^2 - 
      13*n2^2*n3*n5^2 - 46*n3^2*n5^2 + 17*d*n3^2*n5^2 - 18*n1*n3^2*n5^2 - 
      6*n2*n3^2*n5^2 + n3^3*n5^2 - 30*n3*n5^3 + 12*d*n3*n5^3 - 
      12*n2*n3*n5^3 - 6*n3^2*n5^3)*j[p4, -1 + n1, n2, 1 + n3, 0, 1 + n5, 0, 
      0, 0, 1, 1, 1, 1, 1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(3 - d + n1 + n5)) + 
   ((-1840*n3 + 2236*d*n3 - 980*d^2*n3 + 182*d^3*n3 - 12*d^4*n3 - 920*n1*n3 + 
      818*d*n1*n3 - 235*d^2*n1*n3 + 22*d^3*n1*n3 - 900*n2*n3 + 692*d*n2*n3 - 
      160*d^2*n2*n3 + 11*d^3*n2*n3 - 376*n1*n2*n3 + 191*d*n1*n2*n3 - 
      25*d^2*n1*n2*n3 - 26*n2^2*n3 - 16*d*n2^2*n3 + 5*d^2*n2^2*n3 - 
      10*n1*n2^2*n3 + 5*d*n1*n2^2*n3 + 18*n2^3*n3 - 4*d*n2^3*n3 - 
      2*n1*n2^3*n3 - 1224*n3^2 + 1016*d*n3^2 - 253*d^2*n3^2 + 17*d^3*n3^2 - 
      616*n1*n3^2 + 365*d*n1*n3^2 - 52*d^2*n1*n3^2 - 294*n2*n3^2 + 
      69*d*n2*n3^2 + 11*d^2*n2*n3^2 - 184*n1*n2*n3^2 + 47*d*n1*n2*n3^2 + 
      74*n2^2*n3^2 - 37*d*n2^2*n3^2 - 4*n1*n2^2*n3^2 + 12*n2^3*n3^2 - 
      12*n3^3 - 85*d*n3^3 + 33*d^2*n3^3 - 70*n1*n3^3 + 14*d*n1*n3^3 + 
      162*n2*n3^3 - 83*d*n2*n3^3 + 2*n1*n2*n3^3 + 42*n2^2*n3^3 + 94*n3^4 - 
      44*d*n3^4 + 4*n1*n3^4 + 42*n2*n3^4 + 12*n3^5 - 1080*n3*n5 + 
      1062*d*n3*n5 - 342*d^2*n3*n5 + 36*d^3*n3*n5 - 240*n1*n3*n5 + 
      156*d*n1*n3*n5 - 24*d^2*n1*n3*n5 - 580*n2*n3*n5 + 354*d*n2*n3*n5 - 
      53*d^2*n2*n3*n5 - 96*n1*n2*n3*n5 + 24*d*n1*n2*n3*n5 - 66*n2^2*n3*n5 + 
      19*d*n2^2*n3*n5 - 2*n2^3*n3*n5 - 868*n3^2*n5 + 594*d*n3^2*n5 - 
      101*d^2*n3^2*n5 - 168*n1*n3^2*n5 + 60*d*n1*n3^2*n5 - 370*n2*n3^2*n5 + 
      124*d*n2*n3^2*n5 - 48*n1*n2*n3^2*n5 - 32*n2^2*n3^2*n5 - 184*n3^3*n5 + 
      63*d*n3^3*n5 - 24*n1*n3^3*n5 - 40*n2*n3^3*n5 - 10*n3^4*n5 - 
      120*n3*n5^2 + 78*d*n3*n5^2 - 12*d^2*n3*n5^2 - 48*n2*n3*n5^2 + 
      12*d*n2*n3*n5^2 - 84*n3^2*n5^2 + 30*d*n3^2*n5^2 - 24*n2*n3^2*n5^2 - 
      12*n3^3*n5^2)*j[p4, -1 + n1, n2, 1 + n3, 1, n5, 0, 0, 0, 1, 1, 1, 1, 1, 
      1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((70*n3 - 38*d*n3 + 4*d^2*n3 + 18*n2*n3 - 
      4*n2^2*n3 - 6*n3^2 + 6*d*n3^2 - 10*n2*n3^2 - 4*n3^3 + 30*n3*n5 - 
      12*d*n3*n5 + 12*n2*n3*n5 + 6*n3^2*n5)*j[p4, -1 + n1, n2, 1 + n3, 1, 
      1 + n5, 0, -1, 0, 1, 0, 1, 1, 1, 1])/((-n2 + n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((-70*n3 + 38*d*n3 - 4*d^2*n3 - 18*n2*n3 + 
      4*n2^2*n3 + 6*n3^2 - 6*d*n3^2 + 10*n2*n3^2 + 4*n3^3 - 30*n3*n5 + 
      12*d*n3*n5 - 12*n2*n3*n5 - 6*n3^2*n5)*j[p4, -1 + n1, n2, 1 + n3, 1, 
      1 + n5, 0, -1, 0, 1, 1, 0, 1, 1, 1])/((-n2 + n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((35*n3 - 19*d*n3 + 2*d^2*n3 + 9*n2*n3 - 
      2*n2^2*n3 - 3*n3^2 + 3*d*n3^2 - 5*n2*n3^2 - 2*n3^3 + 15*n3*n5 - 
      6*d*n3*n5 + 6*n2*n3*n5 + 3*n3^2*n5)*j[p4, -1 + n1, n2, 1 + n3, 1, 
      1 + n5, 0, -1, 0, 1, 1, 1, 0, 1, 1])/((-n2 + n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((105*n3 - 57*d*n3 + 6*d^2*n3 + 27*n2*n3 - 
      6*n2^2*n3 - 9*n3^2 + 9*d*n3^2 - 15*n2*n3^2 - 6*n3^3 + 45*n3*n5 - 
      18*d*n3*n5 + 18*n2*n3*n5 + 9*n3^2*n5)*j[p4, -1 + n1, n2, 1 + n3, 1, 
      1 + n5, 0, -1, 0, 1, 1, 1, 1, 1, 0])/(2*(-n2 + n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((-5*n2*n3 + 2*d*n2*n3 - n2^2*n3 - 2*n2*n3^2)*
     j[p4, -1 + n1, n2, 1 + n3, 1, 1 + n5, 0, -1, 0, 1, 1, 1, 1, 1, 1])/
    ((-1 + n1)*(n2 - n3)*(-4 + d - n5)) + 
   ((460*n3 - 444*d*n3 + 134*d^2*n3 - 12*d^3*n3 + 230*n1*n3 - 147*d*n1*n3 + 
      22*d^2*n1*n3 + 210*n2*n3 - 102*d*n2*n3 + 7*d^2*n2*n3 + 89*n1*n2*n3 - 
      21*d*n1*n2*n3 - 4*n2^2*n3 + 11*d*n2^2*n3 - n1*n2^2*n3 - 6*n2^3*n3 + 
      76*n3^2 - 13*d*n3^2 - 7*d^2*n3^2 + 39*n1*n3^2 - 8*d*n1*n3^2 - 
      45*n2*n3^2 + 33*d*n2*n3^2 - 3*n1*n2*n3^2 - 21*n2^2*n3^2 - 35*n3^3 + 
      19*d*n3^3 - 2*n1*n3^3 - 21*n2*n3^3 - 6*n3^4 + 270*n3*n5 - 198*d*n3*n5 + 
      36*d^2*n3*n5 + 60*n1*n3*n5 - 24*d*n1*n3*n5 + 140*n2*n3*n5 - 
      49*d*n2*n3*n5 + 24*n1*n2*n3*n5 + 13*n2^2*n3*n5 + 82*n3^2*n5 - 
      29*d*n3^2*n5 + 12*n1*n3^2*n5 + 18*n2*n3^2*n5 + 5*n3^3*n5 + 30*n3*n5^2 - 
      12*d*n3*n5^2 + 12*n2*n3*n5^2 + 6*n3^2*n5^2)*j[p4, -1 + n1, n2, 1 + n3, 
      1, 1 + n5, 0, -1, 0, 1, 1, 1, 1, 2, 0])/(2*(-1 + n1)*(-2 + d - n2 - n3)*
     (n2 - n3)*(-4 + d - n5)*(3 - d + n1 + n5)) + 
   ((70*n3 - 38*d*n3 + 4*d^2*n3 + 18*n2*n3 - 4*n2^2*n3 - 6*n3^2 + 6*d*n3^2 - 
      10*n2*n3^2 - 4*n3^3 + 30*n3*n5 - 12*d*n3*n5 + 12*n2*n3*n5 + 6*n3^2*n5)*
     j[p4, -1 + n1, n2, 1 + n3, 1, 1 + n5, 0, 0, -1, 1, 0, 1, 1, 1, 1])/
    ((-n2 + n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-70*n3 + 38*d*n3 - 4*d^2*n3 - 18*n2*n3 + 4*n2^2*n3 + 6*n3^2 - 6*d*n3^2 + 
      10*n2*n3^2 + 4*n3^3 - 30*n3*n5 + 12*d*n3*n5 - 12*n2*n3*n5 - 6*n3^2*n5)*
     j[p4, -1 + n1, n2, 1 + n3, 1, 1 + n5, 0, 0, -1, 1, 1, 0, 1, 1, 1])/
    ((-n2 + n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((35*n3 - 19*d*n3 + 2*d^2*n3 + 9*n2*n3 - 2*n2^2*n3 - 3*n3^2 + 3*d*n3^2 - 
      5*n2*n3^2 - 2*n3^3 + 15*n3*n5 - 6*d*n3*n5 + 6*n2*n3*n5 + 3*n3^2*n5)*
     j[p4, -1 + n1, n2, 1 + n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 0, 1, 1])/
    ((-n2 + n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((105*n3 - 57*d*n3 + 6*d^2*n3 + 27*n2*n3 - 6*n2^2*n3 - 9*n3^2 + 9*d*n3^2 - 
      15*n2*n3^2 - 6*n3^3 + 45*n3*n5 - 18*d*n3*n5 + 18*n2*n3*n5 + 9*n3^2*n5)*
     j[p4, -1 + n1, n2, 1 + n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 1, 0])/
    (2*(-n2 + n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-60*n3 + 34*d*n3 - 4*d^2*n3 + 5*n1*n3 - 2*d*n1*n3 - 22*n2*n3 + 
      3*d*n2*n3 + n1*n2*n3 + 2*n2^2*n3 + n3^2 - 3*d*n3^2 + 2*n1*n3^2 + 
      5*n2*n3^2 + 2*n3^3 - 20*n3*n5 + 8*d*n3*n5 - 9*n2*n3*n5 - 3*n3^2*n5)*
     j[p4, -1 + n1, n2, 1 + n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-n2 + n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((500*n3 - 480*d*n3 + 142*d^2*n3 - 12*d^3*n3 - 280*n1*n3 + 342*d*n1*n3 - 
      122*d^2*n1*n3 + 12*d^3*n1*n3 - 220*n1^2*n3 + 138*d*n1^2*n3 - 
      20*d^2*n1^2*n3 + 242*n2*n3 - 114*d*n2*n3 + 6*d^2*n2*n3 - 160*n1*n2*n3 + 
      96*d*n1*n2*n3 - 6*d^2*n1*n2*n3 - 82*n1^2*n2*n3 + 18*d*n1^2*n2*n3 - 
      2*n2^2*n3 + 14*d*n2^2*n3 - 14*d*n1*n2^2*n3 + 2*n1^2*n2^2*n3 - 
      8*n2^3*n3 + 8*n1*n2^3*n3 + 538*n3^2 - 446*d*n3^2 + 122*d^2*n3^2 - 
      12*d^3*n3^2 + 182*n1*n3^2 - 149*d*n1*n3^2 + 34*d^2*n1*n3^2 - 
      30*n1^2*n3^2 + 4*d*n1^2*n3^2 + 152*n2*n3^2 - 58*d*n2*n3^2 + 
      7*d^2*n2*n3^2 + 141*n1*n2*n3^2 - 65*d*n1*n2*n3^2 + 6*n1^2*n2*n3^2 - 
      32*n2^2*n3^2 + 11*d*n2^2*n3^2 + 27*n1*n2^2*n3^2 - 6*n2^3*n3^2 + 
      28*n3^3 + 13*d*n3^3 - 7*d^2*n3^3 + 83*n1*n3^3 - 34*d*n1*n3^3 + 
      4*n1^2*n3^3 - 73*n2*n3^3 + 33*d*n2*n3^3 + 25*n1*n2*n3^3 - 
      21*n2^2*n3^3 - 43*n3^4 + 19*d*n3^4 + 6*n1*n3^4 - 21*n2*n3^4 - 6*n3^5 - 
      170*n3*n5 + 228*d*n3*n5 - 94*d^2*n3*n5 + 12*d^3*n3*n5 - 460*n1*n3*n5 + 
      339*d*n1*n3*n5 - 62*d^2*n1*n3*n5 - 60*n1^2*n3*n5 + 24*d*n1^2*n3*n5 - 
      50*n2*n3*n5 + 44*d*n2*n3*n5 - 7*d^2*n2*n3*n5 - 225*n1*n2*n3*n5 + 
      79*d*n1*n2*n3*n5 - 24*n1^2*n2*n3*n5 + 22*n2^2*n3*n5 - 11*d*n2^2*n3*n5 - 
      17*n1*n2^2*n3*n5 + 6*n2^3*n3*n5 + 288*n3^2*n5 - 219*d*n3^2*n5 + 
      43*d^2*n3^2*n5 - 61*n1*n3^2*n5 + 18*d*n1*n3^2*n5 - 12*n1^2*n3^2*n5 + 
      209*n2*n3^2*n5 - 82*d*n2*n3^2*n5 + 3*n1*n2*n3^2*n5 + 34*n2^2*n3^2*n5 + 
      123*n3^3*n5 - 48*d*n3^3*n5 + 8*n1*n3^3*n5 + 39*n2*n3^3*n5 + 
      11*n3^4*n5 - 240*n3*n5^2 + 186*d*n3*n5^2 - 36*d^2*n3*n5^2 - 
      90*n1*n3*n5^2 + 36*d*n1*n3*n5^2 - 128*n2*n3*n5^2 + 49*d*n2*n3*n5^2 - 
      36*n1*n2*n3*n5^2 - 13*n2^2*n3*n5^2 - 46*n3^2*n5^2 + 17*d*n3^2*n5^2 - 
      18*n1*n3^2*n5^2 - 6*n2*n3^2*n5^2 + n3^3*n5^2 - 30*n3*n5^3 + 
      12*d*n3*n5^3 - 12*n2*n3*n5^3 - 6*n3^2*n5^3)*j[p4, -1 + n1, n2, 1 + n3, 
      1, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 0, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*
     (n2 - n3)*(-4 + d - n5)*(3 - d + n1 + n5)) + 
   ((-490*n3 + 481*d*n3 - 149*d^2*n3 + 14*d^3*n3 + 250*n1*n3 - 325*d*n1*n3 + 
      125*d^2*n1*n3 - 14*d^3*n1*n3 + 240*n1^2*n3 - 156*d*n1^2*n3 + 
      24*d^2*n1^2*n3 - 231*n2*n3 + 118*d*n2*n3 - 10*d^2*n2*n3 + 
      135*n1*n2*n3 - 94*d*n1*n2*n3 + 10*d^2*n1*n2*n3 + 96*n1^2*n2*n3 - 
      24*d*n1^2*n2*n3 + n2^2*n3 - 10*d*n2^2*n3 - n1*n2^2*n3 + 
      10*d*n1*n2^2*n3 + 6*n2^3*n3 - 6*n1*n2^3*n3 - 563*n3^2 + 478*d*n3^2 - 
      131*d^2*n3^2 + 12*d^3*n3^2 - 175*n1*n3^2 + 125*d*n1*n3^2 - 
      25*d^2*n1*n3^2 + 48*n1^2*n3^2 - 12*d*n1^2*n3^2 - 174*n2*n3^2 + 
      72*d*n2*n3^2 - 7*d^2*n2*n3^2 - 125*n1*n2*n3^2 + 51*d*n1*n2*n3^2 + 
      25*n2^2*n3^2 - 11*d*n2^2*n3^2 - 20*n1*n2^2*n3^2 + 6*n2^3*n3^2 - 
      47*n3^3 - 4*d*n3^3 + 7*d^2*n3^3 - 68*n1*n3^3 + 25*d*n1*n3^3 + 
      66*n2*n3^3 - 33*d*n2*n3^3 - 18*n1*n2*n3^3 + 21*n2^2*n3^3 + 41*n3^4 - 
      19*d*n3^4 - 4*n1*n3^4 + 21*n2*n3^4 + 6*n3^5 + 180*n3*n5 - 237*d*n3*n5 + 
      96*d^2*n3*n5 - 12*d^3*n3*n5 + 450*n1*n3*n5 - 330*d*n1*n3*n5 + 
      60*d^2*n1*n3*n5 + 60*n1^2*n3*n5 - 24*d*n1^2*n3*n5 + 63*n2*n3*n5 - 
      50*d*n2*n3*n5 + 7*d^2*n2*n3*n5 + 212*n1*n2*n3*n5 - 73*d*n1*n2*n3*n5 + 
      24*n1^2*n2*n3*n5 - 18*n2^2*n3*n5 + 11*d*n2^2*n3*n5 + 13*n1*n2^2*n3*n5 - 
      6*n2^3*n3*n5 - 285*n3^2*n5 + 218*d*n3^2*n5 - 43*d^2*n3^2*n5 + 
      58*n1*n3^2*n5 - 17*d*n1*n3^2*n5 + 12*n1^2*n3^2*n5 - 206*n2*n3^2*n5 + 
      82*d*n2*n3^2*n5 - 6*n1*n2*n3^2*n5 - 34*n2^2*n3^2*n5 - 124*n3^3*n5 + 
      48*d*n3^3*n5 - 7*n1*n3^3*n5 - 39*n2*n3^3*n5 - 11*n3^4*n5 + 
      240*n3*n5^2 - 186*d*n3*n5^2 + 36*d^2*n3*n5^2 + 90*n1*n3*n5^2 - 
      36*d*n1*n3*n5^2 + 128*n2*n3*n5^2 - 49*d*n2*n3*n5^2 + 36*n1*n2*n3*n5^2 + 
      13*n2^2*n3*n5^2 + 46*n3^2*n5^2 - 17*d*n3^2*n5^2 + 18*n1*n3^2*n5^2 + 
      6*n2*n3^2*n5^2 - n3^3*n5^2 + 30*n3*n5^3 - 12*d*n3*n5^3 + 
      12*n2*n3*n5^3 + 6*n3^2*n5^3)*j[p4, -1 + n1, n2, 1 + n3, 1, 1 + n5, 0, 
      0, 0, 1, 1, 1, 1, 1, 0])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(3 - d + n1 + n5)) + 
   ((460*n3 - 444*d*n3 + 134*d^2*n3 - 12*d^3*n3 + 230*n1*n3 - 147*d*n1*n3 + 
      22*d^2*n1*n3 + 210*n2*n3 - 102*d*n2*n3 + 7*d^2*n2*n3 + 89*n1*n2*n3 - 
      21*d*n1*n2*n3 - 4*n2^2*n3 + 11*d*n2^2*n3 - n1*n2^2*n3 - 6*n2^3*n3 + 
      76*n3^2 - 13*d*n3^2 - 7*d^2*n3^2 + 39*n1*n3^2 - 8*d*n1*n3^2 - 
      45*n2*n3^2 + 33*d*n2*n3^2 - 3*n1*n2*n3^2 - 21*n2^2*n3^2 - 35*n3^3 + 
      19*d*n3^3 - 2*n1*n3^3 - 21*n2*n3^3 - 6*n3^4 + 730*n3*n5 - 642*d*n3*n5 + 
      170*d^2*n3*n5 - 12*d^3*n3*n5 + 290*n1*n3*n5 - 171*d*n1*n3*n5 + 
      22*d^2*n1*n3*n5 + 350*n2*n3*n5 - 151*d*n2*n3*n5 + 7*d^2*n2*n3*n5 + 
      113*n1*n2*n3*n5 - 21*d*n1*n2*n3*n5 + 9*n2^2*n3*n5 + 11*d*n2^2*n3*n5 - 
      n1*n2^2*n3*n5 - 6*n2^3*n3*n5 + 158*n3^2*n5 - 42*d*n3^2*n5 - 
      7*d^2*n3^2*n5 + 51*n1*n3^2*n5 - 8*d*n1*n3^2*n5 - 27*n2*n3^2*n5 + 
      33*d*n2*n3^2*n5 - 3*n1*n2*n3^2*n5 - 21*n2^2*n3^2*n5 - 30*n3^3*n5 + 
      19*d*n3^3*n5 - 2*n1*n3^3*n5 - 21*n2*n3^3*n5 - 6*n3^4*n5 + 300*n3*n5^2 - 
      210*d*n3*n5^2 + 36*d^2*n3*n5^2 + 60*n1*n3*n5^2 - 24*d*n1*n3*n5^2 + 
      152*n2*n3*n5^2 - 49*d*n2*n3*n5^2 + 24*n1*n2*n3*n5^2 + 13*n2^2*n3*n5^2 + 
      88*n3^2*n5^2 - 29*d*n3^2*n5^2 + 12*n1*n3^2*n5^2 + 18*n2*n3^2*n5^2 + 
      5*n3^3*n5^2 + 30*n3*n5^3 - 12*d*n3*n5^3 + 12*n2*n3*n5^3 + 6*n3^2*n5^3)*
     j[p4, -1 + n1, n2, 1 + n3, 1, 2 + n5, 0, -1, 0, 1, 1, 1, 1, 0, 1])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((-460*n3 + 444*d*n3 - 134*d^2*n3 + 12*d^3*n3 - 
      230*n1*n3 + 147*d*n1*n3 - 22*d^2*n1*n3 - 210*n2*n3 + 102*d*n2*n3 - 
      7*d^2*n2*n3 - 89*n1*n2*n3 + 21*d*n1*n2*n3 + 4*n2^2*n3 - 11*d*n2^2*n3 + 
      n1*n2^2*n3 + 6*n2^3*n3 - 76*n3^2 + 13*d*n3^2 + 7*d^2*n3^2 - 
      39*n1*n3^2 + 8*d*n1*n3^2 + 45*n2*n3^2 - 33*d*n2*n3^2 + 3*n1*n2*n3^2 + 
      21*n2^2*n3^2 + 35*n3^3 - 19*d*n3^3 + 2*n1*n3^3 + 21*n2*n3^3 + 6*n3^4 - 
      730*n3*n5 + 642*d*n3*n5 - 170*d^2*n3*n5 + 12*d^3*n3*n5 - 290*n1*n3*n5 + 
      171*d*n1*n3*n5 - 22*d^2*n1*n3*n5 - 350*n2*n3*n5 + 151*d*n2*n3*n5 - 
      7*d^2*n2*n3*n5 - 113*n1*n2*n3*n5 + 21*d*n1*n2*n3*n5 - 9*n2^2*n3*n5 - 
      11*d*n2^2*n3*n5 + n1*n2^2*n3*n5 + 6*n2^3*n3*n5 - 158*n3^2*n5 + 
      42*d*n3^2*n5 + 7*d^2*n3^2*n5 - 51*n1*n3^2*n5 + 8*d*n1*n3^2*n5 + 
      27*n2*n3^2*n5 - 33*d*n2*n3^2*n5 + 3*n1*n2*n3^2*n5 + 21*n2^2*n3^2*n5 + 
      30*n3^3*n5 - 19*d*n3^3*n5 + 2*n1*n3^3*n5 + 21*n2*n3^3*n5 + 6*n3^4*n5 - 
      300*n3*n5^2 + 210*d*n3*n5^2 - 36*d^2*n3*n5^2 - 60*n1*n3*n5^2 + 
      24*d*n1*n3*n5^2 - 152*n2*n3*n5^2 + 49*d*n2*n3*n5^2 - 24*n1*n2*n3*n5^2 - 
      13*n2^2*n3*n5^2 - 88*n3^2*n5^2 + 29*d*n3^2*n5^2 - 12*n1*n3^2*n5^2 - 
      18*n2*n3^2*n5^2 - 5*n3^3*n5^2 - 30*n3*n5^3 + 12*d*n3*n5^3 - 
      12*n2*n3*n5^3 - 6*n3^2*n5^3)*j[p4, -1 + n1, n2, 1 + n3, 1, 2 + n5, 0, 
      -1, 0, 1, 1, 1, 1, 1, 0])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(3 - d + n1 + n5)) + 
   ((460*n3 - 444*d*n3 + 134*d^2*n3 - 12*d^3*n3 + 230*n1*n3 - 147*d*n1*n3 + 
      22*d^2*n1*n3 + 210*n2*n3 - 102*d*n2*n3 + 7*d^2*n2*n3 + 89*n1*n2*n3 - 
      21*d*n1*n2*n3 - 4*n2^2*n3 + 11*d*n2^2*n3 - n1*n2^2*n3 - 6*n2^3*n3 + 
      76*n3^2 - 13*d*n3^2 - 7*d^2*n3^2 + 39*n1*n3^2 - 8*d*n1*n3^2 - 
      45*n2*n3^2 + 33*d*n2*n3^2 - 3*n1*n2*n3^2 - 21*n2^2*n3^2 - 35*n3^3 + 
      19*d*n3^3 - 2*n1*n3^3 - 21*n2*n3^3 - 6*n3^4 + 270*n3*n5 - 198*d*n3*n5 + 
      36*d^2*n3*n5 + 60*n1*n3*n5 - 24*d*n1*n3*n5 + 140*n2*n3*n5 - 
      49*d*n2*n3*n5 + 24*n1*n2*n3*n5 + 13*n2^2*n3*n5 + 82*n3^2*n5 - 
      29*d*n3^2*n5 + 12*n1*n3^2*n5 + 18*n2*n3^2*n5 + 5*n3^3*n5 + 30*n3*n5^2 - 
      12*d*n3*n5^2 + 12*n2*n3*n5^2 + 6*n3^2*n5^2)*j[p4, -1 + n1, n2, 1 + n3, 
      2, n5, 0, 0, 0, 1, 1, 1, 1, 1, 0])/(2*(-1 + n1)*(-2 + d - n2 - n3)*
     (n2 - n3)*(-4 + d - n5)*(3 - d + n1 + n5)) + 
   ((-460*n3 + 444*d*n3 - 134*d^2*n3 + 12*d^3*n3 - 230*n1*n3 + 147*d*n1*n3 - 
      22*d^2*n1*n3 - 210*n2*n3 + 102*d*n2*n3 - 7*d^2*n2*n3 - 89*n1*n2*n3 + 
      21*d*n1*n2*n3 + 4*n2^2*n3 - 11*d*n2^2*n3 + n1*n2^2*n3 + 6*n2^3*n3 - 
      76*n3^2 + 13*d*n3^2 + 7*d^2*n3^2 - 39*n1*n3^2 + 8*d*n1*n3^2 + 
      45*n2*n3^2 - 33*d*n2*n3^2 + 3*n1*n2*n3^2 + 21*n2^2*n3^2 + 35*n3^3 - 
      19*d*n3^3 + 2*n1*n3^3 + 21*n2*n3^3 + 6*n3^4 - 270*n3*n5 + 198*d*n3*n5 - 
      36*d^2*n3*n5 - 60*n1*n3*n5 + 24*d*n1*n3*n5 - 140*n2*n3*n5 + 
      49*d*n2*n3*n5 - 24*n1*n2*n3*n5 - 13*n2^2*n3*n5 - 82*n3^2*n5 + 
      29*d*n3^2*n5 - 12*n1*n3^2*n5 - 18*n2*n3^2*n5 - 5*n3^3*n5 - 30*n3*n5^2 + 
      12*d*n3*n5^2 - 12*n2*n3*n5^2 - 6*n3^2*n5^2)*j[p4, -1 + n1, n2, 1 + n3, 
      2, 1 + n5, 0, -1, 0, 1, 1, 1, 1, 1, 0])/(2*(-1 + n1)*(-2 + d - n2 - n3)*
     (n2 - n3)*(-4 + d - n5)*(3 - d + n1 + n5)) + 
   ((-460*n3 + 444*d*n3 - 134*d^2*n3 + 12*d^3*n3 - 230*n1*n3 + 147*d*n1*n3 - 
      22*d^2*n1*n3 - 210*n2*n3 + 102*d*n2*n3 - 7*d^2*n2*n3 - 89*n1*n2*n3 + 
      21*d*n1*n2*n3 + 4*n2^2*n3 - 11*d*n2^2*n3 + n1*n2^2*n3 + 6*n2^3*n3 - 
      536*n3^2 + 457*d*n3^2 - 127*d^2*n3^2 + 12*d^3*n3^2 - 269*n1*n3^2 + 
      155*d*n1*n3^2 - 22*d^2*n1*n3^2 - 165*n2*n3^2 + 69*d*n2*n3^2 - 
      7*d^2*n2*n3^2 - 86*n1*n2*n3^2 + 21*d*n1*n2*n3^2 + 25*n2^2*n3^2 - 
      11*d*n2^2*n3^2 + n1*n2^2*n3^2 + 6*n2^3*n3^2 - 41*n3^3 - 6*d*n3^3 + 
      7*d^2*n3^3 - 37*n1*n3^3 + 8*d*n1*n3^3 + 66*n2*n3^3 - 33*d*n2*n3^3 + 
      3*n1*n2*n3^3 + 21*n2^2*n3^3 + 41*n3^4 - 19*d*n3^4 + 2*n1*n3^4 + 
      21*n2*n3^4 + 6*n3^5 - 270*n3*n5 + 198*d*n3*n5 - 36*d^2*n3*n5 - 
      60*n1*n3*n5 + 24*d*n1*n3*n5 - 140*n2*n3*n5 + 49*d*n2*n3*n5 - 
      24*n1*n2*n3*n5 - 13*n2^2*n3*n5 - 352*n3^2*n5 + 227*d*n3^2*n5 - 
      36*d^2*n3^2*n5 - 72*n1*n3^2*n5 + 24*d*n1*n3^2*n5 - 158*n2*n3^2*n5 + 
      49*d*n2*n3^2*n5 - 24*n1*n2*n3^2*n5 - 13*n2^2*n3^2*n5 - 87*n3^3*n5 + 
      29*d*n3^3*n5 - 12*n1*n3^3*n5 - 18*n2*n3^3*n5 - 5*n3^4*n5 - 30*n3*n5^2 + 
      12*d*n3*n5^2 - 12*n2*n3*n5^2 - 36*n3^2*n5^2 + 12*d*n3^2*n5^2 - 
      12*n2*n3^2*n5^2 - 6*n3^3*n5^2)*j[p4, -1 + n1, n2, 2 + n3, 0, 1 + n5, 0, 
      -1, 0, 1, 1, 1, 1, 1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(3 - d + n1 + n5)) + 
   ((460*n3 - 444*d*n3 + 134*d^2*n3 - 12*d^3*n3 + 230*n1*n3 - 147*d*n1*n3 + 
      22*d^2*n1*n3 + 210*n2*n3 - 102*d*n2*n3 + 7*d^2*n2*n3 + 89*n1*n2*n3 - 
      21*d*n1*n2*n3 - 4*n2^2*n3 + 11*d*n2^2*n3 - n1*n2^2*n3 - 6*n2^3*n3 + 
      536*n3^2 - 457*d*n3^2 + 127*d^2*n3^2 - 12*d^3*n3^2 + 269*n1*n3^2 - 
      155*d*n1*n3^2 + 22*d^2*n1*n3^2 + 165*n2*n3^2 - 69*d*n2*n3^2 + 
      7*d^2*n2*n3^2 + 86*n1*n2*n3^2 - 21*d*n1*n2*n3^2 - 25*n2^2*n3^2 + 
      11*d*n2^2*n3^2 - n1*n2^2*n3^2 - 6*n2^3*n3^2 + 41*n3^3 + 6*d*n3^3 - 
      7*d^2*n3^3 + 37*n1*n3^3 - 8*d*n1*n3^3 - 66*n2*n3^3 + 33*d*n2*n3^3 - 
      3*n1*n2*n3^3 - 21*n2^2*n3^3 - 41*n3^4 + 19*d*n3^4 - 2*n1*n3^4 - 
      21*n2*n3^4 - 6*n3^5 + 270*n3*n5 - 198*d*n3*n5 + 36*d^2*n3*n5 + 
      60*n1*n3*n5 - 24*d*n1*n3*n5 + 140*n2*n3*n5 - 49*d*n2*n3*n5 + 
      24*n1*n2*n3*n5 + 13*n2^2*n3*n5 + 352*n3^2*n5 - 227*d*n3^2*n5 + 
      36*d^2*n3^2*n5 + 72*n1*n3^2*n5 - 24*d*n1*n3^2*n5 + 158*n2*n3^2*n5 - 
      49*d*n2*n3^2*n5 + 24*n1*n2*n3^2*n5 + 13*n2^2*n3^2*n5 + 87*n3^3*n5 - 
      29*d*n3^3*n5 + 12*n1*n3^3*n5 + 18*n2*n3^3*n5 + 5*n3^4*n5 + 30*n3*n5^2 - 
      12*d*n3*n5^2 + 12*n2*n3*n5^2 + 36*n3^2*n5^2 - 12*d*n3^2*n5^2 + 
      12*n2*n3^2*n5^2 + 6*n3^3*n5^2)*j[p4, -1 + n1, n2, 2 + n3, 1, 1 + n5, 0, 
      -1, 0, 1, 1, 1, 1, 1, 0])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(3 - d + n1 + n5)) + 
   ((-520*n2 + 518*d*n2 - 164*d^2*n2 + 16*d^3*n2 - 250*n1*n2 + 165*d*n1*n2 - 
      26*d^2*n1*n2 - 252*n2^2 + 134*d*n2^2 - 13*d^2*n2^2 - 103*n1*n2^2 + 
      27*d*n1*n2^2 - 2*n2^3 - 9*d*n2^3 - n1*n2^3 + 6*n2^4 - 130*n2*n3 + 
      55*d*n2*n3 - d^2*n2*n3 - 57*n1*n2*n3 + 16*d*n1*n2*n3 + 27*n2^2*n3 - 
      27*d*n2^2*n3 - 3*n1*n2^2*n3 + 21*n2^3*n3 + 23*n2*n3^2 - 15*d*n2*n3^2 - 
      2*n1*n2*n3^2 + 21*n2^2*n3^2 + 6*n2*n3^3 - 810*n2*n5 + 734*d*n2*n5 - 
      204*d^2*n2*n5 + 16*d^3*n2*n5 - 310*n1*n2*n5 + 189*d*n1*n2*n5 - 
      26*d^2*n1*n2*n5 - 406*n2^2*n5 + 189*d*n2^2*n5 - 13*d^2*n2^2*n5 - 
      127*n1*n2^2*n5 + 27*d*n1*n2^2*n5 - 17*n2^3*n5 - 9*d*n2^3*n5 - 
      n1*n2^3*n5 + 6*n2^4*n5 - 230*n2*n3*n5 + 92*d*n2*n3*n5 - d^2*n2*n3*n5 - 
      69*n1*n2*n3*n5 + 16*d*n1*n2*n3*n5 + 3*n2^2*n3*n5 - 27*d*n2^2*n3*n5 - 
      3*n1*n2^2*n3*n5 + 21*n2^3*n3*n5 + 14*n2*n3^2*n5 - 15*d*n2*n3^2*n5 - 
      2*n1*n2*n3^2*n5 + 21*n2^2*n3^2*n5 + 6*n2*n3^3*n5 - 320*n2*n5^2 + 
      228*d*n2*n5^2 - 40*d^2*n2*n5^2 - 60*n1*n2*n5^2 + 24*d*n1*n2*n5^2 - 
      166*n2^2*n5^2 + 55*d*n2^2*n5^2 - 24*n1*n2^2*n5^2 - 15*n2^3*n5^2 - 
      106*n2*n3*n5^2 + 37*d*n2*n3*n5^2 - 12*n1*n2*n3*n5^2 - 24*n2^2*n3*n5^2 - 
      9*n2*n3^2*n5^2 - 30*n2*n5^3 + 12*d*n2*n5^3 - 12*n2^2*n5^3 - 
      6*n2*n3*n5^3)*j[p4, -1 + n1, 1 + n2, -1 + n3, 0, 2 + n5, 0, 0, 0, 1, 1, 
      1, 1, 1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((35*n2 - 19*d*n2 + 2*d^2*n2 + 9*n2^2 - 2*n2^3 - 
      3*n2*n3 + 3*d*n2*n3 - 5*n2^2*n3 - 2*n2*n3^2 + 15*n2*n5 - 6*d*n2*n5 + 
      6*n2^2*n5 + 3*n2*n3*n5)*j[p4, -1 + n1, 1 + n2, -1 + n3, 1, 1 + n5, 0, 
      0, 0, 1, 0, 1, 1, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((520*n2 - 518*d*n2 + 164*d^2*n2 - 16*d^3*n2 + 
      250*n1*n2 - 165*d*n1*n2 + 26*d^2*n1*n2 + 252*n2^2 - 134*d*n2^2 + 
      13*d^2*n2^2 + 103*n1*n2^2 - 27*d*n1*n2^2 + 2*n2^3 + 9*d*n2^3 + 
      n1*n2^3 - 6*n2^4 + 130*n2*n3 - 55*d*n2*n3 + d^2*n2*n3 + 57*n1*n2*n3 - 
      16*d*n1*n2*n3 - 27*n2^2*n3 + 27*d*n2^2*n3 + 3*n1*n2^2*n3 - 21*n2^3*n3 - 
      23*n2*n3^2 + 15*d*n2*n3^2 + 2*n1*n2*n3^2 - 21*n2^2*n3^2 - 6*n2*n3^3 + 
      290*n2*n5 - 216*d*n2*n5 + 40*d^2*n2*n5 + 60*n1*n2*n5 - 24*d*n1*n2*n5 + 
      154*n2^2*n5 - 55*d*n2^2*n5 + 24*n1*n2^2*n5 + 15*n2^3*n5 + 
      100*n2*n3*n5 - 37*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 24*n2^2*n3*n5 + 
      9*n2*n3^2*n5 + 30*n2*n5^2 - 12*d*n2*n5^2 + 12*n2^2*n5^2 + 6*n2*n3*n5^2)*
     j[p4, -1 + n1, 1 + n2, -1 + n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 0, 2, 1])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((-1610*n2 + 2099*d*n2 - 992*d^2*n2 + 199*d^3*n2 - 
      14*d^4*n2 - 1030*n1*n2 + 977*d*n1*n2 - 296*d^2*n1*n2 + 28*d^3*n1*n2 - 
      240*n1^2*n2 + 156*d*n1^2*n2 - 24*d^2*n1^2*n2 - 1325*n2^2 + 
      1172*d*n2^2 - 316*d^2*n2^2 + 24*d^3*n2^2 - 589*n1*n2^2 + 
      317*d*n1*n2^2 - 36*d^2*n1*n2^2 - 96*n1^2*n2^2 + 24*d*n1^2*n2^2 - 
      268*n2^3 + 100*d*n2^3 - 51*n1*n2^3 + 17*n2^4 - 16*d*n2^4 + 8*n1*n2^4 + 
      6*n2^5 - 421*n2*n3 + 288*d*n2*n3 - 40*d^2*n2*n3 - 3*d^3*n2*n3 - 
      99*n1*n2*n3 + 10*d*n1*n2*n3 + 10*d^2*n1*n2*n3 - 48*n1^2*n2*n3 + 
      12*d*n1^2*n2*n3 - 62*n2^2*n3 - 69*d*n2^2*n3 + 33*d^2*n2^2*n3 + 
      67*n1*n2^2*n3 - 44*d*n1*n2^2*n3 + 92*n2^3*n3 - 51*d*n2^3*n3 + 
      28*n1*n2^3*n3 + 21*n2^4*n3 + 62*n2*n3^2 - 71*d*n2*n3^2 + 
      17*d^2*n2*n3^2 + 62*n1*n2*n3^2 - 28*d*n1*n2*n3^2 + 85*n2^2*n3^2 - 
      38*d*n2^2*n3^2 + 28*n1*n2^2*n3^2 + 21*n2^3*n3^2 + 16*n2*n3^3 - 
      6*d*n2*n3^3 + 8*n1*n2*n3^3 + 6*n2^2*n3^3 - 1320*n2*n5 + 1363*d*n2*n5 - 
      459*d^2*n2*n5 + 50*d^3*n2*n5 - 660*n1*n2*n5 + 459*d*n1*n2*n5 - 
      78*d^2*n1*n2*n5 - 60*n1^2*n2*n5 + 24*d*n1^2*n2*n5 - 951*n2^2*n5 + 
      621*d*n2^2*n5 - 97*d^2*n2^2*n5 - 341*n1*n2^2*n5 + 109*d*n1*n2^2*n5 - 
      24*n1^2*n2^2*n5 - 190*n2^3*n5 + 55*d*n2^3*n5 - 31*n1*n2^3*n5 - 
      8*n2^4*n5 - 361*n2*n3*n5 + 208*d*n2*n3*n5 - 26*d^2*n2*n3*n5 - 
      145*n1*n2*n3*n5 + 44*d*n1*n2*n3*n5 - 12*n1^2*n2*n3*n5 - 
      115*n2^2*n3*n5 + 21*d*n2^2*n3*n5 - 21*n1*n2^2*n3*n5 + 13*n2*n3^2*n5 - 
      12*d*n2*n3^2*n5 - 2*n1*n2*n3^2*n5 + 14*n2^2*n3^2*n5 + 6*n2*n3^3*n5 - 
      360*n2*n5^2 + 264*d*n2*n5^2 - 48*d^2*n2*n5^2 - 90*n1*n2*n5^2 + 
      36*d*n1*n2*n5^2 - 206*n2^2*n5^2 + 73*d*n2^2*n5^2 - 36*n1*n2^2*n5^2 - 
      25*n2^3*n5^2 - 100*n2*n3*n5^2 + 35*d*n2*n3*n5^2 - 18*n1*n2*n3*n5^2 - 
      24*n2^2*n3*n5^2 - 5*n2*n3^2*n5^2 - 30*n2*n5^3 + 12*d*n2*n5^3 - 
      12*n2^2*n5^3 - 6*n2*n3*n5^3)*j[p4, -1 + n1, 1 + n2, -1 + n3, 1, 1 + n5, 
      0, 0, 0, 1, 1, 1, 1, 1, 1])/((-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(3 - d + n1 + n5)) + 
   ((460*n2 - 444*d*n2 + 134*d^2*n2 - 12*d^3*n2 + 230*n1*n2 - 147*d*n1*n2 + 
      22*d^2*n1*n2 + 210*n2^2 - 102*d*n2^2 + 7*d^2*n2^2 + 89*n1*n2^2 - 
      21*d*n1*n2^2 - 4*n2^3 + 11*d*n2^3 - n1*n2^3 - 6*n2^4 + 76*n2*n3 - 
      13*d*n2*n3 - 7*d^2*n2*n3 + 39*n1*n2*n3 - 8*d*n1*n2*n3 - 45*n2^2*n3 + 
      33*d*n2^2*n3 - 3*n1*n2^2*n3 - 21*n2^3*n3 - 35*n2*n3^2 + 19*d*n2*n3^2 - 
      2*n1*n2*n3^2 - 21*n2^2*n3^2 - 6*n2*n3^3 + 270*n2*n5 - 198*d*n2*n5 + 
      36*d^2*n2*n5 + 60*n1*n2*n5 - 24*d*n1*n2*n5 + 140*n2^2*n5 - 
      49*d*n2^2*n5 + 24*n1*n2^2*n5 + 13*n2^3*n5 + 82*n2*n3*n5 - 
      29*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 18*n2^2*n3*n5 + 5*n2*n3^2*n5 + 
      30*n2*n5^2 - 12*d*n2*n5^2 + 12*n2^2*n5^2 + 6*n2*n3*n5^2)*
     j[p4, -1 + n1, 1 + n2, -1 + n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 2, 0])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((520*n2 - 518*d*n2 + 164*d^2*n2 - 16*d^3*n2 + 
      250*n1*n2 - 165*d*n1*n2 + 26*d^2*n1*n2 + 252*n2^2 - 134*d*n2^2 + 
      13*d^2*n2^2 + 103*n1*n2^2 - 27*d*n1*n2^2 + 2*n2^3 + 9*d*n2^3 + 
      n1*n2^3 - 6*n2^4 + 130*n2*n3 - 55*d*n2*n3 + d^2*n2*n3 + 57*n1*n2*n3 - 
      16*d*n1*n2*n3 - 27*n2^2*n3 + 27*d*n2^2*n3 + 3*n1*n2^2*n3 - 21*n2^3*n3 - 
      23*n2*n3^2 + 15*d*n2*n3^2 + 2*n1*n2*n3^2 - 21*n2^2*n3^2 - 6*n2*n3^3 + 
      810*n2*n5 - 734*d*n2*n5 + 204*d^2*n2*n5 - 16*d^3*n2*n5 + 310*n1*n2*n5 - 
      189*d*n1*n2*n5 + 26*d^2*n1*n2*n5 + 406*n2^2*n5 - 189*d*n2^2*n5 + 
      13*d^2*n2^2*n5 + 127*n1*n2^2*n5 - 27*d*n1*n2^2*n5 + 17*n2^3*n5 + 
      9*d*n2^3*n5 + n1*n2^3*n5 - 6*n2^4*n5 + 230*n2*n3*n5 - 92*d*n2*n3*n5 + 
      d^2*n2*n3*n5 + 69*n1*n2*n3*n5 - 16*d*n1*n2*n3*n5 - 3*n2^2*n3*n5 + 
      27*d*n2^2*n3*n5 + 3*n1*n2^2*n3*n5 - 21*n2^3*n3*n5 - 14*n2*n3^2*n5 + 
      15*d*n2*n3^2*n5 + 2*n1*n2*n3^2*n5 - 21*n2^2*n3^2*n5 - 6*n2*n3^3*n5 + 
      320*n2*n5^2 - 228*d*n2*n5^2 + 40*d^2*n2*n5^2 + 60*n1*n2*n5^2 - 
      24*d*n1*n2*n5^2 + 166*n2^2*n5^2 - 55*d*n2^2*n5^2 + 24*n1*n2^2*n5^2 + 
      15*n2^3*n5^2 + 106*n2*n3*n5^2 - 37*d*n2*n3*n5^2 + 12*n1*n2*n3*n5^2 + 
      24*n2^2*n3*n5^2 + 9*n2*n3^2*n5^2 + 30*n2*n5^3 - 12*d*n2*n5^3 + 
      12*n2^2*n5^3 + 6*n2*n3*n5^3)*j[p4, -1 + n1, 1 + n2, -1 + n3, 1, 2 + n5, 
      -1, 0, 0, 1, 1, 1, 1, 1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(3 - d + n1 + n5)) + 
   ((520*n2 - 518*d*n2 + 164*d^2*n2 - 16*d^3*n2 + 250*n1*n2 - 165*d*n1*n2 + 
      26*d^2*n1*n2 + 252*n2^2 - 134*d*n2^2 + 13*d^2*n2^2 + 103*n1*n2^2 - 
      27*d*n1*n2^2 + 2*n2^3 + 9*d*n2^3 + n1*n2^3 - 6*n2^4 + 130*n2*n3 - 
      55*d*n2*n3 + d^2*n2*n3 + 57*n1*n2*n3 - 16*d*n1*n2*n3 - 27*n2^2*n3 + 
      27*d*n2^2*n3 + 3*n1*n2^2*n3 - 21*n2^3*n3 - 23*n2*n3^2 + 15*d*n2*n3^2 + 
      2*n1*n2*n3^2 - 21*n2^2*n3^2 - 6*n2*n3^3 + 810*n2*n5 - 734*d*n2*n5 + 
      204*d^2*n2*n5 - 16*d^3*n2*n5 + 310*n1*n2*n5 - 189*d*n1*n2*n5 + 
      26*d^2*n1*n2*n5 + 406*n2^2*n5 - 189*d*n2^2*n5 + 13*d^2*n2^2*n5 + 
      127*n1*n2^2*n5 - 27*d*n1*n2^2*n5 + 17*n2^3*n5 + 9*d*n2^3*n5 + 
      n1*n2^3*n5 - 6*n2^4*n5 + 230*n2*n3*n5 - 92*d*n2*n3*n5 + d^2*n2*n3*n5 + 
      69*n1*n2*n3*n5 - 16*d*n1*n2*n3*n5 - 3*n2^2*n3*n5 + 27*d*n2^2*n3*n5 + 
      3*n1*n2^2*n3*n5 - 21*n2^3*n3*n5 - 14*n2*n3^2*n5 + 15*d*n2*n3^2*n5 + 
      2*n1*n2*n3^2*n5 - 21*n2^2*n3^2*n5 - 6*n2*n3^3*n5 + 320*n2*n5^2 - 
      228*d*n2*n5^2 + 40*d^2*n2*n5^2 + 60*n1*n2*n5^2 - 24*d*n1*n2*n5^2 + 
      166*n2^2*n5^2 - 55*d*n2^2*n5^2 + 24*n1*n2^2*n5^2 + 15*n2^3*n5^2 + 
      106*n2*n3*n5^2 - 37*d*n2*n3*n5^2 + 12*n1*n2*n3*n5^2 + 24*n2^2*n3*n5^2 + 
      9*n2*n3^2*n5^2 + 30*n2*n5^3 - 12*d*n2*n5^3 + 12*n2^2*n5^3 + 
      6*n2*n3*n5^3)*j[p4, -1 + n1, 1 + n2, -1 + n3, 1, 2 + n5, 0, -1, 0, 1, 
      1, 1, 1, 1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((980*n2 - 962*d*n2 + 298*d^2*n2 - 28*d^3*n2 + 
      480*n1*n2 - 312*d*n1*n2 + 48*d^2*n1*n2 + 462*n2^2 - 236*d*n2^2 + 
      20*d^2*n2^2 + 192*n1*n2^2 - 48*d*n1*n2^2 - 2*n2^3 + 20*d*n2^3 - 
      12*n2^4 - 254*n2*n3 + 376*d*n2*n3 - 140*d^2*n2*n3 + 12*d^3*n2*n3 - 
      134*n1*n2*n3 + 123*d*n1*n2*n3 - 22*d^2*n1*n2*n3 - 282*n2^2*n3 + 
      162*d*n2^2*n3 - 7*d^2*n2^2*n3 - 89*n1*n2^2*n3 + 21*d*n1*n2^2*n3 - 
      38*n2^3*n3 - 11*d*n2^3*n3 + n1*n2^3*n3 + 6*n2^4*n3 - 134*n2*n3^2 + 
      47*d*n2*n3^2 + 7*d^2*n2*n3^2 - 39*n1*n2*n3^2 + 8*d*n1*n2*n3^2 + 
      3*n2^2*n3^2 - 33*d*n2^2*n3^2 + 3*n1*n2^2*n3^2 + 21*n2^3*n3^2 + 
      23*n2*n3^3 - 19*d*n2*n3^3 + 2*n1*n2*n3^3 + 21*n2^2*n3^3 + 6*n2*n3^4 + 
      1540*n2*n5 - 1376*d*n2*n5 + 374*d^2*n2*n5 - 28*d^3*n2*n5 + 
      600*n1*n2*n5 - 360*d*n1*n2*n5 + 48*d^2*n1*n2*n5 + 756*n2^2*n5 - 
      340*d*n2^2*n5 + 20*d^2*n2^2*n5 + 240*n1*n2^2*n5 - 48*d*n1*n2^2*n5 + 
      26*n2^3*n5 + 20*d*n2^3*n5 - 12*n2^4*n5 + 118*n2*n3*n5 + 64*d*n2*n3*n5 - 
      42*d^2*n2*n3*n5 + 60*n1*n2*n3*n5 - 170*n2^2*n3*n5 + 109*d*n2^2*n3*n5 - 
      24*n1*n2^2*n3*n5 - 55*n2^3*n3*n5 - 126*n2*n3^2*n5 + 63*d*n2*n3^2*n5 - 
      12*n1*n2*n3^2*n5 - 60*n2^2*n3^2*n5 - 17*n2*n3^3*n5 + 620*n2*n5^2 - 
      438*d*n2*n5^2 + 76*d^2*n2*n5^2 + 120*n1*n2*n5^2 - 48*d*n1*n2*n5^2 + 
      318*n2^2*n5^2 - 104*d*n2^2*n5^2 + 48*n1*n2^2*n5^2 + 28*n2^3*n5^2 + 
      164*n2*n3*n5^2 - 54*d*n2*n3*n5^2 + 24*n1*n2*n3*n5^2 + 30*n2^2*n3*n5^2 + 
      8*n2*n3^2*n5^2 + 60*n2*n5^3 - 24*d*n2*n5^3 + 24*n2^2*n5^3 + 
      12*n2*n3*n5^3)*j[p4, -1 + n1, 1 + n2, n3, 0, 1 + n5, 0, 0, 0, 1, 1, 1, 
      1, 1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((520*n2 - 518*d*n2 + 164*d^2*n2 - 16*d^3*n2 + 
      250*n1*n2 - 165*d*n1*n2 + 26*d^2*n1*n2 + 252*n2^2 - 134*d*n2^2 + 
      13*d^2*n2^2 + 103*n1*n2^2 - 27*d*n1*n2^2 + 2*n2^3 + 9*d*n2^3 + 
      n1*n2^3 - 6*n2^4 + 130*n2*n3 - 55*d*n2*n3 + d^2*n2*n3 + 57*n1*n2*n3 - 
      16*d*n1*n2*n3 - 27*n2^2*n3 + 27*d*n2^2*n3 + 3*n1*n2^2*n3 - 21*n2^3*n3 - 
      23*n2*n3^2 + 15*d*n2*n3^2 + 2*n1*n2*n3^2 - 21*n2^2*n3^2 - 6*n2*n3^3 + 
      810*n2*n5 - 734*d*n2*n5 + 204*d^2*n2*n5 - 16*d^3*n2*n5 + 310*n1*n2*n5 - 
      189*d*n1*n2*n5 + 26*d^2*n1*n2*n5 + 406*n2^2*n5 - 189*d*n2^2*n5 + 
      13*d^2*n2^2*n5 + 127*n1*n2^2*n5 - 27*d*n1*n2^2*n5 + 17*n2^3*n5 + 
      9*d*n2^3*n5 + n1*n2^3*n5 - 6*n2^4*n5 + 230*n2*n3*n5 - 92*d*n2*n3*n5 + 
      d^2*n2*n3*n5 + 69*n1*n2*n3*n5 - 16*d*n1*n2*n3*n5 - 3*n2^2*n3*n5 + 
      27*d*n2^2*n3*n5 + 3*n1*n2^2*n3*n5 - 21*n2^3*n3*n5 - 14*n2*n3^2*n5 + 
      15*d*n2*n3^2*n5 + 2*n1*n2*n3^2*n5 - 21*n2^2*n3^2*n5 - 6*n2*n3^3*n5 + 
      320*n2*n5^2 - 228*d*n2*n5^2 + 40*d^2*n2*n5^2 + 60*n1*n2*n5^2 - 
      24*d*n1*n2*n5^2 + 166*n2^2*n5^2 - 55*d*n2^2*n5^2 + 24*n1*n2^2*n5^2 + 
      15*n2^3*n5^2 + 106*n2*n3*n5^2 - 37*d*n2*n3*n5^2 + 12*n1*n2*n3*n5^2 + 
      24*n2^2*n3*n5^2 + 9*n2*n3^2*n5^2 + 30*n2*n5^3 - 12*d*n2*n5^3 + 
      12*n2^2*n5^3 + 6*n2*n3*n5^3)*j[p4, -1 + n1, 1 + n2, n3, 0, 2 + n5, 0, 
      -1, 0, 1, 1, 1, 1, 1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(3 - d + n1 + n5)) + 
   ((520*n2 - 518*d*n2 + 164*d^2*n2 - 16*d^3*n2 + 250*n1*n2 - 165*d*n1*n2 + 
      26*d^2*n1*n2 + 252*n2^2 - 134*d*n2^2 + 13*d^2*n2^2 + 103*n1*n2^2 - 
      27*d*n1*n2^2 + 2*n2^3 + 9*d*n2^3 + n1*n2^3 - 6*n2^4 + 130*n2*n3 - 
      55*d*n2*n3 + d^2*n2*n3 + 57*n1*n2*n3 - 16*d*n1*n2*n3 - 27*n2^2*n3 + 
      27*d*n2^2*n3 + 3*n1*n2^2*n3 - 21*n2^3*n3 - 23*n2*n3^2 + 15*d*n2*n3^2 + 
      2*n1*n2*n3^2 - 21*n2^2*n3^2 - 6*n2*n3^3 + 810*n2*n5 - 734*d*n2*n5 + 
      204*d^2*n2*n5 - 16*d^3*n2*n5 + 310*n1*n2*n5 - 189*d*n1*n2*n5 + 
      26*d^2*n1*n2*n5 + 406*n2^2*n5 - 189*d*n2^2*n5 + 13*d^2*n2^2*n5 + 
      127*n1*n2^2*n5 - 27*d*n1*n2^2*n5 + 17*n2^3*n5 + 9*d*n2^3*n5 + 
      n1*n2^3*n5 - 6*n2^4*n5 + 230*n2*n3*n5 - 92*d*n2*n3*n5 + d^2*n2*n3*n5 + 
      69*n1*n2*n3*n5 - 16*d*n1*n2*n3*n5 - 3*n2^2*n3*n5 + 27*d*n2^2*n3*n5 + 
      3*n1*n2^2*n3*n5 - 21*n2^3*n3*n5 - 14*n2*n3^2*n5 + 15*d*n2*n3^2*n5 + 
      2*n1*n2*n3^2*n5 - 21*n2^2*n3^2*n5 - 6*n2*n3^3*n5 + 320*n2*n5^2 - 
      228*d*n2*n5^2 + 40*d^2*n2*n5^2 + 60*n1*n2*n5^2 - 24*d*n1*n2*n5^2 + 
      166*n2^2*n5^2 - 55*d*n2^2*n5^2 + 24*n1*n2^2*n5^2 + 15*n2^3*n5^2 + 
      106*n2*n3*n5^2 - 37*d*n2*n3*n5^2 + 12*n1*n2*n3*n5^2 + 24*n2^2*n3*n5^2 + 
      9*n2*n3^2*n5^2 + 30*n2*n5^3 - 12*d*n2*n5^3 + 12*n2^2*n5^3 + 
      6*n2*n3*n5^3)*j[p4, -1 + n1, 1 + n2, n3, 0, 2 + n5, 0, 0, -1, 1, 1, 1, 
      1, 1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((-35*n2 + 19*d*n2 - 2*d^2*n2 - 9*n2^2 + 2*n2^3 + 
      3*n2*n3 - 3*d*n2*n3 + 5*n2^2*n3 + 2*n2*n3^2 - 15*n2*n5 + 6*d*n2*n5 - 
      6*n2^2*n5 - 3*n2*n3*n5)*j[p4, -1 + n1, 1 + n2, n3, 1, n5, 0, 0, 0, 1, 
      0, 1, 1, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-35*n2 + 19*d*n2 - 2*d^2*n2 - 9*n2^2 + 2*n2^3 + 3*n2*n3 - 3*d*n2*n3 + 
      5*n2^2*n3 + 2*n2*n3^2 - 15*n2*n5 + 6*d*n2*n5 - 6*n2^2*n5 - 3*n2*n3*n5)*
     j[p4, -1 + n1, 1 + n2, n3, 1, n5, 0, 0, 0, 1, 1, 1, 0, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-520*n2 + 518*d*n2 - 164*d^2*n2 + 16*d^3*n2 - 250*n1*n2 + 165*d*n1*n2 - 
      26*d^2*n1*n2 - 252*n2^2 + 134*d*n2^2 - 13*d^2*n2^2 - 103*n1*n2^2 + 
      27*d*n1*n2^2 - 2*n2^3 - 9*d*n2^3 - n1*n2^3 + 6*n2^4 - 130*n2*n3 + 
      55*d*n2*n3 - d^2*n2*n3 - 57*n1*n2*n3 + 16*d*n1*n2*n3 + 27*n2^2*n3 - 
      27*d*n2^2*n3 - 3*n1*n2^2*n3 + 21*n2^3*n3 + 23*n2*n3^2 - 15*d*n2*n3^2 - 
      2*n1*n2*n3^2 + 21*n2^2*n3^2 + 6*n2*n3^3 - 290*n2*n5 + 216*d*n2*n5 - 
      40*d^2*n2*n5 - 60*n1*n2*n5 + 24*d*n1*n2*n5 - 154*n2^2*n5 + 
      55*d*n2^2*n5 - 24*n1*n2^2*n5 - 15*n2^3*n5 - 100*n2*n3*n5 + 
      37*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 24*n2^2*n3*n5 - 9*n2*n3^2*n5 - 
      30*n2*n5^2 + 12*d*n2*n5^2 - 12*n2^2*n5^2 - 6*n2*n3*n5^2)*
     j[p4, -1 + n1, 1 + n2, n3, 1, n5, 0, 0, 0, 1, 1, 1, 0, 2, 1])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((35*n2 - 19*d*n2 + 2*d^2*n2 + 9*n2^2 - 2*n2^3 - 
      3*n2*n3 + 3*d*n2*n3 - 5*n2^2*n3 - 2*n2*n3^2 + 15*n2*n5 - 6*d*n2*n5 + 
      6*n2^2*n5 + 3*n2*n3*n5)*j[p4, -1 + n1, 1 + n2, n3, 1, n5, 0, 0, 0, 1, 
      1, 1, 1, 0, 1])/((n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((520*n2 - 1008*d*n2 + 645*d^2*n2 - 165*d^3*n2 + 14*d^4*n2 + 740*n1*n2 - 
      886*d*n1*n2 + 331*d^2*n1*n2 - 38*d^3*n1*n2 + 240*n1^2*n2 - 
      156*d*n1^2*n2 + 24*d^2*n1^2*n2 + 282*n2^2 - 402*d*n2^2 + 146*d^2*n2^2 - 
      12*d^3*n2^2 + 344*n1*n2^2 - 250*d*n1*n2^2 + 36*d^2*n1*n2^2 + 
      96*n1^2*n2^2 - 24*d*n1^2*n2^2 + 23*n2^3 - 6*d*n2^3 - 7*d^2*n2^3 + 
      7*n1*n2^3 + 7*d*n1*n2^3 - 3*n2^4 + 5*d*n2^4 - 5*n1*n2^4 + 1050*n2*n3 - 
      1046*d*n2*n3 + 303*d^2*n2*n3 - 21*d^3*n2*n3 + 620*n1*n2*n3 - 
      392*d*n1*n2*n3 + 53*d^2*n1*n2*n3 + 48*n1^2*n2*n3 - 12*d*n1^2*n2*n3 + 
      420*n2^2*n3 - 162*d*n2^2*n3 - 12*d^2*n2^2*n3 + 154*n1*n2^2*n3 - 
      16*d*n1*n2^2*n3 - 20*n2^3*n3 + 40*d*n2^3*n3 - 20*n1*n2^3*n3 - 
      12*n2^4*n3 + 129*n2*n3^2 + 18*d*n2*n3^2 - 31*d^2*n2*n3^2 + 
      51*n1*n2*n3^2 + d*n1*n2*n3^2 - 105*n2^2*n3^2 + 85*d*n2^2*n3^2 - 
      25*n1*n2^2*n3^2 - 42*n2^3*n3^2 - 76*n2*n3^3 + 44*d*n2*n3^3 - 
      10*n1*n2*n3^3 - 42*n2^2*n3^3 - 12*n2*n3^4 + 290*n2*n5 - 496*d*n2*n5 + 
      247*d^2*n2*n5 - 38*d^3*n2*n5 + 340*n1*n2*n5 - 291*d*n1*n2*n5 + 
      62*d^2*n1*n2*n5 + 60*n1^2*n2*n5 - 24*d*n1^2*n2*n5 + 164*n2^2*n5 - 
      211*d*n2^2*n5 + 54*d^2*n2^2*n5 + 171*n1*n2^2*n5 - 76*d*n1*n2^2*n5 + 
      24*n1^2*n2^2*n5 + 22*n2^3*n5 - 17*d*n2^3*n5 + 14*n1*n2^3*n5 + n2^4*n5 + 
      640*n2*n3*n5 - 524*d*n2*n3*n5 + 105*d^2*n2*n3*n5 + 223*n1*n2*n3*n5 - 
      93*d*n1*n2*n3*n5 + 12*n1^2*n2*n3*n5 + 313*n2^2*n3*n5 - 
      123*d*n2^2*n3*n5 + 69*n1*n2^2*n3*n5 + 29*n2^3*n3*n5 + 173*n2*n3^2*n5 - 
      65*d*n2*n3^2*n5 + 31*n1*n2*n3^2*n5 + 38*n2^2*n3^2*n5 + 10*n2*n3^3*n5 + 
      30*n2*n5^2 - 42*d*n2*n5^2 + 12*d^2*n2*n5^2 + 30*n1*n2*n5^2 - 
      12*d*n1*n2*n5^2 + 12*n2^2*n5^2 - 12*d*n2^2*n5^2 + 12*n1*n2^2*n5^2 + 
      66*n2*n3*n5^2 - 30*d*n2*n3*n5^2 + 6*n1*n2*n3*n5^2 + 24*n2^2*n3*n5^2 + 
      12*n2*n3^2*n5^2)*j[p4, -1 + n1, 1 + n2, n3, 1, n5, 0, 0, 0, 1, 1, 1, 1, 
      1, 1])/((-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((35*n2 - 19*d*n2 + 2*d^2*n2 + 9*n2^2 - 2*n2^3 - 
      3*n2*n3 + 3*d*n2*n3 - 5*n2^2*n3 - 2*n2*n3^2 + 15*n2*n5 - 6*d*n2*n5 + 
      6*n2^2*n5 + 3*n2*n3*n5)*j[p4, -1 + n1, 1 + n2, n3, 1, 1 + n5, -1, 0, 0, 
      1, 0, 1, 1, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((35*n2 - 19*d*n2 + 2*d^2*n2 + 9*n2^2 - 2*n2^3 - 3*n2*n3 + 3*d*n2*n3 - 
      5*n2^2*n3 - 2*n2*n3^2 + 15*n2*n5 - 6*d*n2*n5 + 6*n2^2*n5 + 3*n2*n3*n5)*
     j[p4, -1 + n1, 1 + n2, n3, 1, 1 + n5, -1, 0, 0, 1, 1, 1, 0, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-35*n2 + 19*d*n2 - 2*d^2*n2 - 9*n2^2 + 2*n2^3 + 3*n2*n3 - 3*d*n2*n3 + 
      5*n2^2*n3 + 2*n2*n3^2 - 15*n2*n5 + 6*d*n2*n5 - 6*n2^2*n5 - 3*n2*n3*n5)*
     j[p4, -1 + n1, 1 + n2, n3, 1, 1 + n5, -1, 0, 0, 1, 1, 1, 1, 0, 1])/
    ((n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-5300*n2 + 6850*d*n2 - 3232*d^2*n2 + 656*d^3*n2 - 48*d^4*n2 - 
      2380*n1*n2 + 2272*d*n1*n2 - 713*d^2*n1*n2 + 74*d^3*n1*n2 - 20*n1^2*n2 + 
      18*d*n1^2*n2 - 4*d^2*n1^2*n2 - 3662*n2^2 + 3200*d*n2^2 - 870*d^2*n2^2 + 
      71*d^3*n2^2 - 1414*n1*n2^2 + 835*d*n1*n2^2 - 123*d^2*n1*n2^2 - 
      14*n1^2*n2^2 + 6*d*n1^2*n2^2 - 550*n2^3 + 190*d*n2^3 + d^2*n2^3 - 
      188*n1*n2^3 + 51*d*n1*n2^3 - 2*n1^2*n2^3 + 56*n2^4 - 36*d*n2^4 - 
      2*n1*n2^4 + 12*n2^5 - 3378*n2*n3 + 2972*d*n2*n3 - 805*d^2*n2*n3 + 
      63*d^3*n2*n3 - 1474*n1*n2*n3 + 931*d*n1*n2*n3 - 144*d^2*n1*n2*n3 - 
      18*n1^2*n2*n3 + 8*d*n1^2*n2*n3 - 986*n2^2*n3 + 269*d*n2^2*n3 + 
      33*d^2*n2^2*n3 - 506*n1*n2^2*n3 + 137*d*n1*n2^2*n3 - 6*n1^2*n2^2*n3 + 
      262*n2^3*n3 - 155*d*n2^3*n3 - 8*n1*n2^3*n3 + 66*n2^4*n3 - 240*n2*n3^2 - 
      41*d*n2*n3^2 + 49*d^2*n2*n3^2 - 222*n1*n2*n3^2 + 62*d*n1*n2*n3^2 - 
      4*n1^2*n2*n3^2 + 382*n2^2*n3^2 - 207*d*n2^2*n3^2 - 10*n1*n2^2*n3^2 + 
      126*n2^3*n3^2 + 164*n2*n3^3 - 82*d*n2*n3^3 - 4*n1*n2*n3^3 + 
      96*n2^2*n3^3 + 24*n2*n3^4 - 3960*n2*n5 + 4084*d*n2*n5 - 
      1380*d^2*n2*n5 + 152*d^3*n2*n5 - 1080*n1*n2*n5 + 732*d*n1*n2*n5 - 
      120*d^2*n1*n2*n5 - 2646*n2^2*n5 + 1722*d*n2^2*n5 - 271*d^2*n2^2*n5 - 
      544*n1*n2^2*n5 + 164*d*n1*n2^2*n5 - 468*n2^3*n5 + 137*d*n2^3*n5 - 
      44*n1*n2^3*n5 - 18*n2^4*n5 - 2410*n2*n3*n5 + 1630*d*n2*n3*n5 - 
      269*d^2*n2*n3*n5 - 464*n1*n2*n3*n5 + 160*d*n1*n2*n3*n5 - 
      994*n2^2*n3*n5 + 306*d*n2^2*n3*n5 - 120*n1*n2^2*n3*n5 - 64*n2^3*n3*n5 - 
      426*n2*n3^2*n5 + 137*d*n2*n3^2*n5 - 52*n1*n2*n3^2*n5 - 
      66*n2^2*n3^2*n5 - 20*n2*n3^3*n5 - 880*n2*n5^2 + 642*d*n2*n5^2 - 
      116*d^2*n2*n5^2 - 120*n1*n2*n5^2 + 48*d*n1*n2*n5^2 - 488*n2^2*n5^2 + 
      170*d*n2^2*n5^2 - 48*n1*n2^2*n5^2 - 54*n2^3*n5^2 - 380*n2*n3*n5^2 + 
      140*d*n2*n3*n5^2 - 24*n1*n2*n3*n5^2 - 108*n2^2*n3*n5^2 - 
      42*n2*n3^2*n5^2 - 60*n2*n5^3 + 24*d*n2*n5^3 - 24*n2^2*n5^3 - 
      12*n2*n3*n5^3)*j[p4, -1 + n1, 1 + n2, n3, 1, 1 + n5, -1, 0, 0, 1, 1, 1, 
      1, 1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((520*n2 - 518*d*n2 + 164*d^2*n2 - 16*d^3*n2 + 
      250*n1*n2 - 165*d*n1*n2 + 26*d^2*n1*n2 + 252*n2^2 - 134*d*n2^2 + 
      13*d^2*n2^2 + 103*n1*n2^2 - 27*d*n1*n2^2 + 2*n2^3 + 9*d*n2^3 + 
      n1*n2^3 - 6*n2^4 + 130*n2*n3 - 55*d*n2*n3 + d^2*n2*n3 + 57*n1*n2*n3 - 
      16*d*n1*n2*n3 - 27*n2^2*n3 + 27*d*n2^2*n3 + 3*n1*n2^2*n3 - 21*n2^3*n3 - 
      23*n2*n3^2 + 15*d*n2*n3^2 + 2*n1*n2*n3^2 - 21*n2^2*n3^2 - 6*n2*n3^3 + 
      290*n2*n5 - 216*d*n2*n5 + 40*d^2*n2*n5 + 60*n1*n2*n5 - 24*d*n1*n2*n5 + 
      154*n2^2*n5 - 55*d*n2^2*n5 + 24*n1*n2^2*n5 + 15*n2^3*n5 + 
      100*n2*n3*n5 - 37*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 24*n2^2*n3*n5 + 
      9*n2*n3^2*n5 + 30*n2*n5^2 - 12*d*n2*n5^2 + 12*n2^2*n5^2 + 6*n2*n3*n5^2)*
     j[p4, -1 + n1, 1 + n2, n3, 1, 1 + n5, -1, 0, 0, 1, 2, 0, 1, 1, 1])/
    ((-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((-520*n2 + 518*d*n2 - 164*d^2*n2 + 16*d^3*n2 - 
      250*n1*n2 + 165*d*n1*n2 - 26*d^2*n1*n2 - 252*n2^2 + 134*d*n2^2 - 
      13*d^2*n2^2 - 103*n1*n2^2 + 27*d*n1*n2^2 - 2*n2^3 - 9*d*n2^3 - 
      n1*n2^3 + 6*n2^4 - 130*n2*n3 + 55*d*n2*n3 - d^2*n2*n3 - 57*n1*n2*n3 + 
      16*d*n1*n2*n3 + 27*n2^2*n3 - 27*d*n2^2*n3 - 3*n1*n2^2*n3 + 21*n2^3*n3 + 
      23*n2*n3^2 - 15*d*n2*n3^2 - 2*n1*n2*n3^2 + 21*n2^2*n3^2 + 6*n2*n3^3 - 
      290*n2*n5 + 216*d*n2*n5 - 40*d^2*n2*n5 - 60*n1*n2*n5 + 24*d*n1*n2*n5 - 
      154*n2^2*n5 + 55*d*n2^2*n5 - 24*n1*n2^2*n5 - 15*n2^3*n5 - 
      100*n2*n3*n5 + 37*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 24*n2^2*n3*n5 - 
      9*n2*n3^2*n5 - 30*n2*n5^2 + 12*d*n2*n5^2 - 12*n2^2*n5^2 - 6*n2*n3*n5^2)*
     j[p4, -1 + n1, 1 + n2, n3, 1, 1 + n5, 0, -1, 0, 0, 2, 1, 1, 1, 1])/
    ((-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((-105*n2 + 57*d*n2 - 6*d^2*n2 - 27*n2^2 + 6*n2^3 + 
      9*n2*n3 - 9*d*n2*n3 + 15*n2^2*n3 + 6*n2*n3^2 - 45*n2*n5 + 18*d*n2*n5 - 
      18*n2^2*n5 - 9*n2*n3*n5)*j[p4, -1 + n1, 1 + n2, n3, 1, 1 + n5, 0, -1, 
      0, 1, 0, 1, 1, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-520*n2 + 518*d*n2 - 164*d^2*n2 + 16*d^3*n2 - 250*n1*n2 + 165*d*n1*n2 - 
      26*d^2*n1*n2 - 252*n2^2 + 134*d*n2^2 - 13*d^2*n2^2 - 103*n1*n2^2 + 
      27*d*n1*n2^2 - 2*n2^3 - 9*d*n2^3 - n1*n2^3 + 6*n2^4 - 130*n2*n3 + 
      55*d*n2*n3 - d^2*n2*n3 - 57*n1*n2*n3 + 16*d*n1*n2*n3 + 27*n2^2*n3 - 
      27*d*n2^2*n3 - 3*n1*n2^2*n3 + 21*n2^3*n3 + 23*n2*n3^2 - 15*d*n2*n3^2 - 
      2*n1*n2*n3^2 + 21*n2^2*n3^2 + 6*n2*n3^3 - 290*n2*n5 + 216*d*n2*n5 - 
      40*d^2*n2*n5 - 60*n1*n2*n5 + 24*d*n1*n2*n5 - 154*n2^2*n5 + 
      55*d*n2^2*n5 - 24*n1*n2^2*n5 - 15*n2^3*n5 - 100*n2*n3*n5 + 
      37*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 24*n2^2*n3*n5 - 9*n2*n3^2*n5 - 
      30*n2*n5^2 + 12*d*n2*n5^2 - 12*n2^2*n5^2 - 6*n2*n3*n5^2)*
     j[p4, -1 + n1, 1 + n2, n3, 1, 1 + n5, 0, -1, 0, 1, 1, 1, 0, 2, 1])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((4240*n2 - 5926*d*n2 + 3002*d^2*n2 - 644*d^3*n2 + 
      48*d^4*n2 + 2150*n1*n2 - 2145*d*n1*n2 + 679*d^2*n1*n2 - 66*d^3*n1*n2 + 
      460*n1^2*n2 - 294*d*n1^2*n2 + 44*d^2*n1^2*n2 + 4372*n2^2 - 
      4156*d*n2^2 + 1209*d^2*n2^2 - 99*d^3*n2^2 + 1589*n1*n2^2 - 
      918*d*n1*n2^2 + 111*d^2*n1*n2^2 + 178*n1^2*n2^2 - 42*d*n1^2*n2^2 + 
      1148*n2^3 - 509*d*n2^3 + 19*d^2*n2^3 + 237*n1*n2^3 - 23*d*n1*n2^3 - 
      2*n1^2*n2^3 - 28*n2^4 + 56*d*n2^4 - 22*n1*n2^4 - 24*n2^5 + 1522*n2*n3 - 
      1287*d*n2*n3 + 288*d^2*n2*n3 - 7*d^3*n2*n3 + 91*n1*n2*n3 + 
      61*d*n1*n2*n3 - 40*d^2*n1*n2*n3 + 78*n1^2*n2*n3 - 16*d*n1^2*n2*n3 + 
      649*n2^2*n3 - 66*d*n2^2*n3 - 79*d^2*n2^2*n3 - 151*n1*n2^2*n3 + 
      115*d*n1*n2^2*n3 - 6*n1^2*n2^2*n3 - 225*n2^3*n3 + 175*d*n2^3*n3 - 
      76*n1*n2^3*n3 - 84*n2^4*n3 + 43*n2*n3^2 + 74*d*n2*n3^2 - 
      37*d^2*n2*n3^2 - 172*n1*n2*n3^2 + 78*d*n1*n2*n3^2 - 4*n1^2*n2*n3^2 - 
      191*n2^2*n3^2 + 121*d*n2^2*n3^2 - 74*n1*n2^2*n3^2 - 84*n2^3*n3^2 - 
      18*n2*n3^3 + 14*d*n2*n3^3 - 20*n1*n2*n3^3 - 24*n2^2*n3^3 + 1590*n2*n5 - 
      1936*d*n2*n5 + 780*d^2*n2*n5 - 104*d^3*n2*n5 + 650*n1*n2*n5 - 
      525*d*n1*n2*n5 + 106*d^2*n1*n2*n5 + 120*n1^2*n2*n5 - 48*d*n1^2*n2*n5 + 
      2034*n2^2*n5 - 1589*d*n2^2*n5 + 308*d^2*n2^2*n5 + 531*n1*n2^2*n5 - 
      215*d*n1*n2^2*n5 + 48*n1^2*n2^2*n5 + 719*n2^3*n5 - 268*d*n2^3*n5 + 
      109*n1*n2^3*n5 + 64*n2^4*n5 + 650*n2*n3*n5 - 548*d*n2*n3*n5 + 
      114*d^2*n2*n3*n5 + 149*n1*n2*n3*n5 - 60*d*n1*n2*n3*n5 + 
      24*n1^2*n2*n3*n5 + 615*n2^2*n3*n5 - 245*d*n2^2*n3*n5 + 
      63*n1*n2^2*n3*n5 + 113*n2^3*n3*n5 + 114*n2*n3^2*n5 - 50*d*n2*n3^2*n5 + 
      2*n1*n2*n3^2*n5 + 59*n2^2*n3^2*n5 + 10*n2*n3^3*n5 - 80*n2*n5^2 + 
      42*d*n2*n5^2 - 4*d^2*n2*n5^2 + 50*n2^2*n5^2 - 29*d*n2^2*n5^2 + 
      33*n2^3*n5^2 - 58*n2*n3*n5^2 + 19*d*n2*n3*n5^2 - 9*n2*n3^2*n5^2 - 
      30*n2*n5^3 + 12*d*n2*n5^3 - 12*n2^2*n5^3 - 6*n2*n3*n5^3)*
     j[p4, -1 + n1, 1 + n2, n3, 1, 1 + n5, 0, -1, 0, 1, 1, 1, 1, 1, 1])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((-460*n2 + 444*d*n2 - 134*d^2*n2 + 12*d^3*n2 - 
      230*n1*n2 + 147*d*n1*n2 - 22*d^2*n1*n2 - 210*n2^2 + 102*d*n2^2 - 
      7*d^2*n2^2 - 89*n1*n2^2 + 21*d*n1*n2^2 + 4*n2^3 - 11*d*n2^3 + n1*n2^3 + 
      6*n2^4 - 76*n2*n3 + 13*d*n2*n3 + 7*d^2*n2*n3 - 39*n1*n2*n3 + 
      8*d*n1*n2*n3 + 45*n2^2*n3 - 33*d*n2^2*n3 + 3*n1*n2^2*n3 + 21*n2^3*n3 + 
      35*n2*n3^2 - 19*d*n2*n3^2 + 2*n1*n2*n3^2 + 21*n2^2*n3^2 + 6*n2*n3^3 - 
      270*n2*n5 + 198*d*n2*n5 - 36*d^2*n2*n5 - 60*n1*n2*n5 + 24*d*n1*n2*n5 - 
      140*n2^2*n5 + 49*d*n2^2*n5 - 24*n1*n2^2*n5 - 13*n2^3*n5 - 82*n2*n3*n5 + 
      29*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 18*n2^2*n3*n5 - 5*n2*n3^2*n5 - 
      30*n2*n5^2 + 12*d*n2*n5^2 - 12*n2^2*n5^2 - 6*n2*n3*n5^2)*
     j[p4, -1 + n1, 1 + n2, n3, 1, 1 + n5, 0, -1, 0, 1, 1, 1, 1, 2, 0])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((35*n2 - 19*d*n2 + 2*d^2*n2 + 9*n2^2 - 2*n2^3 - 
      3*n2*n3 + 3*d*n2*n3 - 5*n2^2*n3 - 2*n2*n3^2 + 15*n2*n5 - 6*d*n2*n5 + 
      6*n2^2*n5 + 3*n2*n3*n5)*j[p4, -1 + n1, 1 + n2, n3, 1, 1 + n5, 0, 0, -1, 
      1, 0, 1, 1, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-930*n2 + 907*d*n2 - 279*d^2*n2 + 26*d^3*n2 - 630*n1*n2 + 477*d*n1*n2 - 
      105*d^2*n1*n2 + 6*d^3*n1*n2 + 20*n1^2*n2 - 18*d*n1^2*n2 + 
      4*d^2*n1^2*n2 - 903*n2^2 + 696*d*n2^2 - 174*d^2*n2^2 + 16*d^3*n2^2 - 
      591*n1*n2^2 + 315*d*n1*n2^2 - 42*d^2*n1*n2^2 + 14*n1^2*n2^2 - 
      6*d*n1^2*n2^2 - 219*n2^3 + 104*d*n2^3 - 13*d^2*n2^3 - 144*n1*n2^3 + 
      39*d*n1*n2^3 + 2*n1^2*n2^3 + 12*n2^4 - 9*d*n2^4 - 3*n1*n2^4 + 6*n2^5 - 
      175*n2*n3 + 48*d*n2*n3 + 9*d^2*n2*n3 - 217*n1*n2*n3 + 102*d*n1*n2*n3 - 
      11*d^2*n1*n2*n3 + 18*n1^2*n2*n3 - 8*d*n1^2*n2*n3 - 18*n2^2*n3 - 
      19*d*n2^2*n3 - d^2*n2^2*n3 - 127*n1*n2^2*n3 + 36*d*n1*n2^2*n3 + 
      6*n1^2*n2^2*n3 + 76*n2^3*n3 - 27*d*n2^3*n3 - 10*n1*n2^3*n3 + 
      21*n2^4*n3 + 65*n2*n3^2 - 37*d*n2*n3^2 - 27*n1*n2*n3^2 + 
      7*d*n1*n2*n3^2 + 4*n1^2*n2*n3^2 + 72*n2^2*n3^2 - 15*d*n2^2*n3^2 - 
      9*n1*n2^2*n3^2 + 21*n2^3*n3^2 + 14*n2*n3^3 - 2*n1*n2*n3^3 + 
      6*n2^2*n3^3 - 1090*n2*n5 + 941*d*n2*n5 - 242*d^2*n2*n5 + 16*d^3*n2*n5 - 
      380*n1*n2*n5 + 222*d*n1*n2*n5 - 28*d^2*n1*n2*n5 - 837*n2^2*n5 + 
      454*d*n2^2*n5 - 53*d^2*n2^2*n5 - 224*n1*n2^2*n5 + 57*d*n1*n2^2*n5 - 
      182*n2^3*n5 + 46*d*n2^3*n5 - 29*n1*n2^3*n5 - 9*n2^4*n5 - 327*n2*n3*n5 + 
      128*d*n2*n3*n5 - d^2*n2*n3*n5 - 84*n1*n2*n3*n5 + 17*d*n1*n2*n3*n5 - 
      118*n2^2*n3*n5 + 10*d*n2^2*n3*n5 - 18*n1*n2^2*n3*n5 - 3*n2^3*n3*n5 + 
      4*n2*n3^2*n5 - 15*d*n2*n3^2*n5 - n1*n2*n3^2*n5 + 12*n2^2*n3^2*n5 + 
      6*n2*n3^3*n5 - 350*n2*n5^2 + 240*d*n2*n5^2 - 40*d^2*n2*n5^2 - 
      60*n1*n2*n5^2 + 24*d*n1*n2*n5^2 - 208*n2^2*n5^2 + 67*d*n2^2*n5^2 - 
      24*n1*n2^2*n5^2 - 27*n2^3*n5^2 - 112*n2*n3*n5^2 + 37*d*n2*n3*n5^2 - 
      12*n1*n2*n3*n5^2 - 30*n2^2*n3*n5^2 - 9*n2*n3^2*n5^2 - 30*n2*n5^3 + 
      12*d*n2*n5^3 - 12*n2^2*n5^3 - 6*n2*n3*n5^3)*j[p4, -1 + n1, 1 + n2, n3, 
      1, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 1, 1])/((-1 + n1)*(-2 + d - n2 - n3)*
     (n2 - n3)*(-4 + d - n5)*(3 - d + n1 + n5)) + 
   ((520*n2 - 518*d*n2 + 164*d^2*n2 - 16*d^3*n2 + 250*n1*n2 - 165*d*n1*n2 + 
      26*d^2*n1*n2 + 252*n2^2 - 134*d*n2^2 + 13*d^2*n2^2 + 103*n1*n2^2 - 
      27*d*n1*n2^2 + 2*n2^3 + 9*d*n2^3 + n1*n2^3 - 6*n2^4 + 130*n2*n3 - 
      55*d*n2*n3 + d^2*n2*n3 + 57*n1*n2*n3 - 16*d*n1*n2*n3 - 27*n2^2*n3 + 
      27*d*n2^2*n3 + 3*n1*n2^2*n3 - 21*n2^3*n3 - 23*n2*n3^2 + 15*d*n2*n3^2 + 
      2*n1*n2*n3^2 - 21*n2^2*n3^2 - 6*n2*n3^3 + 290*n2*n5 - 216*d*n2*n5 + 
      40*d^2*n2*n5 + 60*n1*n2*n5 - 24*d*n1*n2*n5 + 154*n2^2*n5 - 
      55*d*n2^2*n5 + 24*n1*n2^2*n5 + 15*n2^3*n5 + 100*n2*n3*n5 - 
      37*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 24*n2^2*n3*n5 + 9*n2*n3^2*n5 + 
      30*n2*n5^2 - 12*d*n2*n5^2 + 12*n2^2*n5^2 + 6*n2*n3*n5^2)*
     j[p4, -1 + n1, 1 + n2, n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 2, 0])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((-180*n2 + 222*d*n2 - 90*d^2*n2 + 12*d^3*n2 + 
      180*n1*n2 - 222*d*n1*n2 + 90*d^2*n1*n2 - 12*d^3*n1*n2 - 182*n2^2 + 
      144*d*n2^2 - 28*d^2*n2^2 + 182*n1*n2^2 - 144*d*n1*n2^2 + 
      28*d^2*n1*n2^2 - 54*n2^3 + 20*d*n2^3 + 54*n1*n2^3 - 20*d*n1*n2^3 - 
      4*n2^4 + 4*n1*n2^4 + 354*n2*n3 - 386*d*n2*n3 + 138*d^2*n2*n3 - 
      16*d^3*n2*n3 + 416*n1*n2*n3 - 297*d*n1*n2*n3 + 52*d^2*n1*n2*n3 + 
      148*n2^2*n3 - 94*d*n2^2*n3 + 13*d^2*n2^2*n3 + 207*n1*n2^2*n3 - 
      67*d*n1*n2^2*n3 - 12*n2^3*n3 + 9*d*n2^3*n3 + 15*n1*n2^3*n3 - 
      6*n2^4*n3 + 84*n2*n3^2 - 37*d*n2*n3^2 + d^2*n2*n3^2 + 103*n1*n2*n3^2 - 
      34*d*n1*n2*n3^2 - 41*n2^2*n3^2 + 27*d*n2^2*n3^2 + 17*n1*n2^2*n3^2 - 
      21*n2^3*n3^2 - 27*n2*n3^3 + 15*d*n2*n3^3 + 6*n1*n2*n3^3 - 
      21*n2^2*n3^3 - 6*n2*n3^4 - 20*n2*n5 + 18*d*n2*n5 - 4*d^2*n2*n5 + 
      20*n1*n2*n5 - 18*d*n1*n2*n5 + 4*d^2*n1*n2*n5 - 18*n2^2*n5 + 
      8*d*n2^2*n5 + 18*n1*n2^2*n5 - 8*d*n1*n2^2*n5 - 4*n2^3*n5 + 
      4*n1*n2^3*n5 + 276*n2*n3*n5 - 210*d*n2*n3*n5 + 40*d^2*n2*n3*n5 + 
      74*n1*n2*n3*n5 - 30*d*n1*n2*n3*n5 + 148*n2^2*n3*n5 - 55*d*n2^2*n3*n5 + 
      30*n1*n2^2*n3*n5 + 15*n2^3*n3*n5 + 98*n2*n3^2*n5 - 37*d*n2*n3^2*n5 + 
      14*n1*n2*n3^2*n5 + 24*n2^2*n3^2*n5 + 9*n2*n3^3*n5 + 30*n2*n3*n5^2 - 
      12*d*n2*n3*n5^2 + 12*n2^2*n3*n5^2 + 6*n2*n3^2*n5^2)*
     j[p4, -1 + n1, 1 + n2, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((820*n2 - 888*d*n2 + 314*d^2*n2 - 36*d^3*n2 - 
      130*n1*n2 + 297*d*n1*n2 - 158*d^2*n1*n2 + 24*d^3*n1*n2 + 574*n2^2 - 
      390*d*n2^2 + 63*d^2*n2^2 - 275*n1*n2^2 + 267*d*n1*n2^2 - 
      56*d^2*n1*n2^2 + 104*n2^3 - 29*d*n2^3 - 109*n1*n2^3 + 40*d*n1*n2^3 + 
      2*n2^4 - 8*n1*n2^4 - 572*n2*n3 + 685*d*n2*n3 - 253*d^2*n2*n3 + 
      28*d^3*n2*n3 - 773*n1*n2*n3 + 568*d*n1*n2*n3 - 100*d^2*n1*n2*n3 - 
      299*n2^2*n3 + 189*d*n2^2*n3 - 20*d^2*n2^2*n3 - 403*n1*n2^2*n3 + 
      128*d*n1*n2^2*n3 + 9*n2^3*n3 - 20*d*n2^3*n3 - 28*n1*n2^3*n3 + 
      12*n2^4*n3 - 149*n2*n3^2 + 51*d*n2*n3^2 + 6*d^2*n2*n3^2 - 
      190*n1*n2*n3^2 + 60*d*n1*n2*n3^2 + 79*n2^2*n3^2 - 60*d*n2^2*n3^2 - 
      28*n1*n2^2*n3^2 + 42*n2^3*n3^2 + 60*n2*n3^3 - 34*d*n2*n3^3 - 
      8*n1*n2*n3^3 + 42*n2^2*n3^3 + 12*n2*n3^4 + 770*n2*n5 - 678*d*n2*n5 + 
      178*d^2*n2*n5 - 12*d^3*n2*n5 + 250*n1*n2*n5 - 135*d*n1*n2*n5 + 
      14*d^2*n1*n2*n5 + 386*n2^2*n5 - 167*d*n2^2*n5 + 7*d^2*n2^2*n5 + 
      77*n1*n2^2*n5 - 5*d*n1*n2^2*n5 + 17*n2^3*n5 + 11*d*n2^3*n5 - 
      9*n1*n2^3*n5 - 6*n2^4*n5 - 374*n2*n3*n5 + 360*d*n2*n3*n5 - 
      83*d^2*n2*n3*n5 - 97*n1*n2*n3*n5 + 52*d*n1*n2*n3*n5 - 309*n2^2*n3*n5 + 
      137*d*n2^2*n3*n5 - 63*n1*n2^2*n3*n5 - 49*n2^3*n3*n5 - 208*n2*n3^2*n5 + 
      85*d*n2*n3^2*n5 - 30*n1*n2*n3^2*n5 - 63*n2^2*n3^2*n5 - 20*n2*n3^3*n5 + 
      300*n2*n5^2 - 210*d*n2*n5^2 + 36*d^2*n2*n5^2 + 60*n1*n2*n5^2 - 
      24*d*n1*n2*n5^2 + 152*n2^2*n5^2 - 49*d*n2^2*n5^2 + 24*n1*n2^2*n5^2 + 
      13*n2^3*n5^2 + 28*n2*n3*n5^2 - 5*d*n2*n3*n5^2 + 12*n1*n2*n3*n5^2 - 
      6*n2^2*n3*n5^2 - 7*n2*n3^2*n5^2 + 30*n2*n5^3 - 12*d*n2*n5^3 + 
      12*n2^2*n5^3 + 6*n2*n3*n5^3)*j[p4, -1 + n1, 1 + n2, n3, 1, 1 + n5, 0, 
      0, 0, 1, 1, 1, 1, 0, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(3 - d + n1 + n5)) + 
   ((-460*n2 + 444*d*n2 - 134*d^2*n2 + 12*d^3*n2 - 230*n1*n2 + 147*d*n1*n2 - 
      22*d^2*n1*n2 - 210*n2^2 + 102*d*n2^2 - 7*d^2*n2^2 - 89*n1*n2^2 + 
      21*d*n1*n2^2 + 4*n2^3 - 11*d*n2^3 + n1*n2^3 + 6*n2^4 + 384*n2*n3 - 
      431*d*n2*n3 + 141*d^2*n2*n3 - 12*d^3*n2*n3 + 191*n1*n2*n3 - 
      139*d*n1*n2*n3 + 22*d^2*n1*n2*n3 + 255*n2^2*n3 - 135*d*n2^2*n3 + 
      7*d^2*n2^2*n3 + 92*n1*n2^2*n3 - 21*d*n1*n2^2*n3 + 17*n2^3*n3 + 
      11*d*n2^3*n3 - n1*n2^3*n3 - 6*n2^4*n3 + 111*n2*n3^2 - 32*d*n2*n3^2 - 
      7*d^2*n2*n3^2 + 41*n1*n2*n3^2 - 8*d*n1*n2*n3^2 - 24*n2^2*n3^2 + 
      33*d*n2^2*n3^2 - 3*n1*n2^2*n3^2 - 21*n2^3*n3^2 - 29*n2*n3^3 + 
      19*d*n2*n3^3 - 2*n1*n2*n3^3 - 21*n2^2*n3^3 - 6*n2*n3^4 - 730*n2*n5 + 
      642*d*n2*n5 - 170*d^2*n2*n5 + 12*d^3*n2*n5 - 290*n1*n2*n5 + 
      171*d*n1*n2*n5 - 22*d^2*n1*n2*n5 - 350*n2^2*n5 + 151*d*n2^2*n5 - 
      7*d^2*n2^2*n5 - 113*n1*n2^2*n5 + 21*d*n1*n2^2*n5 - 9*n2^3*n5 - 
      11*d*n2^3*n5 + n1*n2^3*n5 + 6*n2^4*n5 + 112*n2*n3*n5 - 156*d*n2*n3*n5 + 
      43*d^2*n2*n3*n5 + 9*n1*n2*n3*n5 - 16*d*n1*n2*n3*n5 + 167*n2^2*n3*n5 - 
      82*d*n2^2*n3*n5 + 27*n1*n2^2*n3*n5 + 34*n2^3*n3*n5 + 112*n2*n3^2*n5 - 
      48*d*n2*n3^2*n5 + 14*n1*n2*n3^2*n5 + 39*n2^2*n3^2*n5 + 11*n2*n3^3*n5 - 
      300*n2*n5^2 + 210*d*n2*n5^2 - 36*d^2*n2*n5^2 - 60*n1*n2*n5^2 + 
      24*d*n1*n2*n5^2 - 152*n2^2*n5^2 + 49*d*n2^2*n5^2 - 24*n1*n2^2*n5^2 - 
      13*n2^3*n5^2 - 58*n2*n3*n5^2 + 17*d*n2*n3*n5^2 - 12*n1*n2*n3*n5^2 - 
      6*n2^2*n3*n5^2 + n2*n3^2*n5^2 - 30*n2*n5^3 + 12*d*n2*n5^3 - 
      12*n2^2*n5^3 - 6*n2*n3*n5^3)*j[p4, -1 + n1, 1 + n2, n3, 1, 1 + n5, 0, 
      0, 0, 1, 1, 1, 1, 1, 0])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(3 - d + n1 + n5)) + 
   ((-520*n2 + 518*d*n2 - 164*d^2*n2 + 16*d^3*n2 - 250*n1*n2 + 165*d*n1*n2 - 
      26*d^2*n1*n2 - 252*n2^2 + 134*d*n2^2 - 13*d^2*n2^2 - 103*n1*n2^2 + 
      27*d*n1*n2^2 - 2*n2^3 - 9*d*n2^3 - n1*n2^3 + 6*n2^4 - 130*n2*n3 + 
      55*d*n2*n3 - d^2*n2*n3 - 57*n1*n2*n3 + 16*d*n1*n2*n3 + 27*n2^2*n3 - 
      27*d*n2^2*n3 - 3*n1*n2^2*n3 + 21*n2^3*n3 + 23*n2*n3^2 - 15*d*n2*n3^2 - 
      2*n1*n2*n3^2 + 21*n2^2*n3^2 + 6*n2*n3^3 - 810*n2*n5 + 734*d*n2*n5 - 
      204*d^2*n2*n5 + 16*d^3*n2*n5 - 310*n1*n2*n5 + 189*d*n1*n2*n5 - 
      26*d^2*n1*n2*n5 - 406*n2^2*n5 + 189*d*n2^2*n5 - 13*d^2*n2^2*n5 - 
      127*n1*n2^2*n5 + 27*d*n1*n2^2*n5 - 17*n2^3*n5 - 9*d*n2^3*n5 - 
      n1*n2^3*n5 + 6*n2^4*n5 - 230*n2*n3*n5 + 92*d*n2*n3*n5 - d^2*n2*n3*n5 - 
      69*n1*n2*n3*n5 + 16*d*n1*n2*n3*n5 + 3*n2^2*n3*n5 - 27*d*n2^2*n3*n5 - 
      3*n1*n2^2*n3*n5 + 21*n2^3*n3*n5 + 14*n2*n3^2*n5 - 15*d*n2*n3^2*n5 - 
      2*n1*n2*n3^2*n5 + 21*n2^2*n3^2*n5 + 6*n2*n3^3*n5 - 320*n2*n5^2 + 
      228*d*n2*n5^2 - 40*d^2*n2*n5^2 - 60*n1*n2*n5^2 + 24*d*n1*n2*n5^2 - 
      166*n2^2*n5^2 + 55*d*n2^2*n5^2 - 24*n1*n2^2*n5^2 - 15*n2^3*n5^2 - 
      106*n2*n3*n5^2 + 37*d*n2*n3*n5^2 - 12*n1*n2*n3*n5^2 - 24*n2^2*n3*n5^2 - 
      9*n2*n3^2*n5^2 - 30*n2*n5^3 + 12*d*n2*n5^3 - 12*n2^2*n5^3 - 
      6*n2*n3*n5^3)*j[p4, -1 + n1, 1 + n2, n3, 1, 2 + n5, -1, -1, 0, 1, 1, 1, 
      1, 1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((-520*n2 + 518*d*n2 - 164*d^2*n2 + 16*d^3*n2 - 
      250*n1*n2 + 165*d*n1*n2 - 26*d^2*n1*n2 - 252*n2^2 + 134*d*n2^2 - 
      13*d^2*n2^2 - 103*n1*n2^2 + 27*d*n1*n2^2 - 2*n2^3 - 9*d*n2^3 - 
      n1*n2^3 + 6*n2^4 - 130*n2*n3 + 55*d*n2*n3 - d^2*n2*n3 - 57*n1*n2*n3 + 
      16*d*n1*n2*n3 + 27*n2^2*n3 - 27*d*n2^2*n3 - 3*n1*n2^2*n3 + 21*n2^3*n3 + 
      23*n2*n3^2 - 15*d*n2*n3^2 - 2*n1*n2*n3^2 + 21*n2^2*n3^2 + 6*n2*n3^3 - 
      810*n2*n5 + 734*d*n2*n5 - 204*d^2*n2*n5 + 16*d^3*n2*n5 - 310*n1*n2*n5 + 
      189*d*n1*n2*n5 - 26*d^2*n1*n2*n5 - 406*n2^2*n5 + 189*d*n2^2*n5 - 
      13*d^2*n2^2*n5 - 127*n1*n2^2*n5 + 27*d*n1*n2^2*n5 - 17*n2^3*n5 - 
      9*d*n2^3*n5 - n1*n2^3*n5 + 6*n2^4*n5 - 230*n2*n3*n5 + 92*d*n2*n3*n5 - 
      d^2*n2*n3*n5 - 69*n1*n2*n3*n5 + 16*d*n1*n2*n3*n5 + 3*n2^2*n3*n5 - 
      27*d*n2^2*n3*n5 - 3*n1*n2^2*n3*n5 + 21*n2^3*n3*n5 + 14*n2*n3^2*n5 - 
      15*d*n2*n3^2*n5 - 2*n1*n2*n3^2*n5 + 21*n2^2*n3^2*n5 + 6*n2*n3^3*n5 - 
      320*n2*n5^2 + 228*d*n2*n5^2 - 40*d^2*n2*n5^2 - 60*n1*n2*n5^2 + 
      24*d*n1*n2*n5^2 - 166*n2^2*n5^2 + 55*d*n2^2*n5^2 - 24*n1*n2^2*n5^2 - 
      15*n2^3*n5^2 - 106*n2*n3*n5^2 + 37*d*n2*n3*n5^2 - 12*n1*n2*n3*n5^2 - 
      24*n2^2*n3*n5^2 - 9*n2*n3^2*n5^2 - 30*n2*n5^3 + 12*d*n2*n5^3 - 
      12*n2^2*n5^3 - 6*n2*n3*n5^3)*j[p4, -1 + n1, 1 + n2, n3, 1, 2 + n5, -1, 
      0, 0, 1, 1, 1, 1, 0, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(3 - d + n1 + n5)) + 
   ((520*n2 - 518*d*n2 + 164*d^2*n2 - 16*d^3*n2 + 250*n1*n2 - 165*d*n1*n2 + 
      26*d^2*n1*n2 + 252*n2^2 - 134*d*n2^2 + 13*d^2*n2^2 + 103*n1*n2^2 - 
      27*d*n1*n2^2 + 2*n2^3 + 9*d*n2^3 + n1*n2^3 - 6*n2^4 + 130*n2*n3 - 
      55*d*n2*n3 + d^2*n2*n3 + 57*n1*n2*n3 - 16*d*n1*n2*n3 - 27*n2^2*n3 + 
      27*d*n2^2*n3 + 3*n1*n2^2*n3 - 21*n2^3*n3 - 23*n2*n3^2 + 15*d*n2*n3^2 + 
      2*n1*n2*n3^2 - 21*n2^2*n3^2 - 6*n2*n3^3 + 810*n2*n5 - 734*d*n2*n5 + 
      204*d^2*n2*n5 - 16*d^3*n2*n5 + 310*n1*n2*n5 - 189*d*n1*n2*n5 + 
      26*d^2*n1*n2*n5 + 406*n2^2*n5 - 189*d*n2^2*n5 + 13*d^2*n2^2*n5 + 
      127*n1*n2^2*n5 - 27*d*n1*n2^2*n5 + 17*n2^3*n5 + 9*d*n2^3*n5 + 
      n1*n2^3*n5 - 6*n2^4*n5 + 230*n2*n3*n5 - 92*d*n2*n3*n5 + d^2*n2*n3*n5 + 
      69*n1*n2*n3*n5 - 16*d*n1*n2*n3*n5 - 3*n2^2*n3*n5 + 27*d*n2^2*n3*n5 + 
      3*n1*n2^2*n3*n5 - 21*n2^3*n3*n5 - 14*n2*n3^2*n5 + 15*d*n2*n3^2*n5 + 
      2*n1*n2*n3^2*n5 - 21*n2^2*n3^2*n5 - 6*n2*n3^3*n5 + 320*n2*n5^2 - 
      228*d*n2*n5^2 + 40*d^2*n2*n5^2 + 60*n1*n2*n5^2 - 24*d*n1*n2*n5^2 + 
      166*n2^2*n5^2 - 55*d*n2^2*n5^2 + 24*n1*n2^2*n5^2 + 15*n2^3*n5^2 + 
      106*n2*n3*n5^2 - 37*d*n2*n3*n5^2 + 12*n1*n2*n3*n5^2 + 24*n2^2*n3*n5^2 + 
      9*n2*n3^2*n5^2 + 30*n2*n5^3 - 12*d*n2*n5^3 + 12*n2^2*n5^3 + 
      6*n2*n3*n5^3)*j[p4, -1 + n1, 1 + n2, n3, 1, 2 + n5, -1, 0, 0, 1, 1, 1, 
      1, 1, 0])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((-520*n2 + 518*d*n2 - 164*d^2*n2 + 16*d^3*n2 - 
      250*n1*n2 + 165*d*n1*n2 - 26*d^2*n1*n2 - 252*n2^2 + 134*d*n2^2 - 
      13*d^2*n2^2 - 103*n1*n2^2 + 27*d*n1*n2^2 - 2*n2^3 - 9*d*n2^3 - 
      n1*n2^3 + 6*n2^4 - 130*n2*n3 + 55*d*n2*n3 - d^2*n2*n3 - 57*n1*n2*n3 + 
      16*d*n1*n2*n3 + 27*n2^2*n3 - 27*d*n2^2*n3 - 3*n1*n2^2*n3 + 21*n2^3*n3 + 
      23*n2*n3^2 - 15*d*n2*n3^2 - 2*n1*n2*n3^2 + 21*n2^2*n3^2 + 6*n2*n3^3 - 
      810*n2*n5 + 734*d*n2*n5 - 204*d^2*n2*n5 + 16*d^3*n2*n5 - 310*n1*n2*n5 + 
      189*d*n1*n2*n5 - 26*d^2*n1*n2*n5 - 406*n2^2*n5 + 189*d*n2^2*n5 - 
      13*d^2*n2^2*n5 - 127*n1*n2^2*n5 + 27*d*n1*n2^2*n5 - 17*n2^3*n5 - 
      9*d*n2^3*n5 - n1*n2^3*n5 + 6*n2^4*n5 - 230*n2*n3*n5 + 92*d*n2*n3*n5 - 
      d^2*n2*n3*n5 - 69*n1*n2*n3*n5 + 16*d*n1*n2*n3*n5 + 3*n2^2*n3*n5 - 
      27*d*n2^2*n3*n5 - 3*n1*n2^2*n3*n5 + 21*n2^3*n3*n5 + 14*n2*n3^2*n5 - 
      15*d*n2*n3^2*n5 - 2*n1*n2*n3^2*n5 + 21*n2^2*n3^2*n5 + 6*n2*n3^3*n5 - 
      320*n2*n5^2 + 228*d*n2*n5^2 - 40*d^2*n2*n5^2 - 60*n1*n2*n5^2 + 
      24*d*n1*n2*n5^2 - 166*n2^2*n5^2 + 55*d*n2^2*n5^2 - 24*n1*n2^2*n5^2 - 
      15*n2^3*n5^2 - 106*n2*n3*n5^2 + 37*d*n2*n3*n5^2 - 12*n1*n2*n3*n5^2 - 
      24*n2^2*n3*n5^2 - 9*n2*n3^2*n5^2 - 30*n2*n5^3 + 12*d*n2*n5^3 - 
      12*n2^2*n5^3 - 6*n2*n3*n5^3)*j[p4, -1 + n1, 1 + n2, n3, 1, 2 + n5, 0, 
      -2, 0, 1, 1, 1, 1, 1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(3 - d + n1 + n5)) + 
   ((-520*n2 + 518*d*n2 - 164*d^2*n2 + 16*d^3*n2 - 250*n1*n2 + 165*d*n1*n2 - 
      26*d^2*n1*n2 - 252*n2^2 + 134*d*n2^2 - 13*d^2*n2^2 - 103*n1*n2^2 + 
      27*d*n1*n2^2 - 2*n2^3 - 9*d*n2^3 - n1*n2^3 + 6*n2^4 - 130*n2*n3 + 
      55*d*n2*n3 - d^2*n2*n3 - 57*n1*n2*n3 + 16*d*n1*n2*n3 + 27*n2^2*n3 - 
      27*d*n2^2*n3 - 3*n1*n2^2*n3 + 21*n2^3*n3 + 23*n2*n3^2 - 15*d*n2*n3^2 - 
      2*n1*n2*n3^2 + 21*n2^2*n3^2 + 6*n2*n3^3 - 810*n2*n5 + 734*d*n2*n5 - 
      204*d^2*n2*n5 + 16*d^3*n2*n5 - 310*n1*n2*n5 + 189*d*n1*n2*n5 - 
      26*d^2*n1*n2*n5 - 406*n2^2*n5 + 189*d*n2^2*n5 - 13*d^2*n2^2*n5 - 
      127*n1*n2^2*n5 + 27*d*n1*n2^2*n5 - 17*n2^3*n5 - 9*d*n2^3*n5 - 
      n1*n2^3*n5 + 6*n2^4*n5 - 230*n2*n3*n5 + 92*d*n2*n3*n5 - d^2*n2*n3*n5 - 
      69*n1*n2*n3*n5 + 16*d*n1*n2*n3*n5 + 3*n2^2*n3*n5 - 27*d*n2^2*n3*n5 - 
      3*n1*n2^2*n3*n5 + 21*n2^3*n3*n5 + 14*n2*n3^2*n5 - 15*d*n2*n3^2*n5 - 
      2*n1*n2*n3^2*n5 + 21*n2^2*n3^2*n5 + 6*n2*n3^3*n5 - 320*n2*n5^2 + 
      228*d*n2*n5^2 - 40*d^2*n2*n5^2 - 60*n1*n2*n5^2 + 24*d*n1*n2*n5^2 - 
      166*n2^2*n5^2 + 55*d*n2^2*n5^2 - 24*n1*n2^2*n5^2 - 15*n2^3*n5^2 - 
      106*n2*n3*n5^2 + 37*d*n2*n3*n5^2 - 12*n1*n2*n3*n5^2 - 24*n2^2*n3*n5^2 - 
      9*n2*n3^2*n5^2 - 30*n2*n5^3 + 12*d*n2*n5^3 - 12*n2^2*n5^3 - 
      6*n2*n3*n5^3)*j[p4, -1 + n1, 1 + n2, n3, 1, 2 + n5, 0, -1, -1, 1, 1, 1, 
      1, 1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((-460*n2 + 444*d*n2 - 134*d^2*n2 + 12*d^3*n2 - 
      230*n1*n2 + 147*d*n1*n2 - 22*d^2*n1*n2 - 210*n2^2 + 102*d*n2^2 - 
      7*d^2*n2^2 - 89*n1*n2^2 + 21*d*n1*n2^2 + 4*n2^3 - 11*d*n2^3 + n1*n2^3 + 
      6*n2^4 - 76*n2*n3 + 13*d*n2*n3 + 7*d^2*n2*n3 - 39*n1*n2*n3 + 
      8*d*n1*n2*n3 + 45*n2^2*n3 - 33*d*n2^2*n3 + 3*n1*n2^2*n3 + 21*n2^3*n3 + 
      35*n2*n3^2 - 19*d*n2*n3^2 + 2*n1*n2*n3^2 + 21*n2^2*n3^2 + 6*n2*n3^3 - 
      730*n2*n5 + 642*d*n2*n5 - 170*d^2*n2*n5 + 12*d^3*n2*n5 - 290*n1*n2*n5 + 
      171*d*n1*n2*n5 - 22*d^2*n1*n2*n5 - 350*n2^2*n5 + 151*d*n2^2*n5 - 
      7*d^2*n2^2*n5 - 113*n1*n2^2*n5 + 21*d*n1*n2^2*n5 - 9*n2^3*n5 - 
      11*d*n2^3*n5 + n1*n2^3*n5 + 6*n2^4*n5 - 158*n2*n3*n5 + 42*d*n2*n3*n5 + 
      7*d^2*n2*n3*n5 - 51*n1*n2*n3*n5 + 8*d*n1*n2*n3*n5 + 27*n2^2*n3*n5 - 
      33*d*n2^2*n3*n5 + 3*n1*n2^2*n3*n5 + 21*n2^3*n3*n5 + 30*n2*n3^2*n5 - 
      19*d*n2*n3^2*n5 + 2*n1*n2*n3^2*n5 + 21*n2^2*n3^2*n5 + 6*n2*n3^3*n5 - 
      300*n2*n5^2 + 210*d*n2*n5^2 - 36*d^2*n2*n5^2 - 60*n1*n2*n5^2 + 
      24*d*n1*n2*n5^2 - 152*n2^2*n5^2 + 49*d*n2^2*n5^2 - 24*n1*n2^2*n5^2 - 
      13*n2^3*n5^2 - 88*n2*n3*n5^2 + 29*d*n2*n3*n5^2 - 12*n1*n2*n3*n5^2 - 
      18*n2^2*n3*n5^2 - 5*n2*n3^2*n5^2 - 30*n2*n5^3 + 12*d*n2*n5^3 - 
      12*n2^2*n5^3 - 6*n2*n3*n5^3)*j[p4, -1 + n1, 1 + n2, n3, 1, 2 + n5, 0, 
      -1, 0, 1, 1, 1, 1, 0, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(3 - d + n1 + n5)) + 
   ((460*n2 - 444*d*n2 + 134*d^2*n2 - 12*d^3*n2 + 230*n1*n2 - 147*d*n1*n2 + 
      22*d^2*n1*n2 + 210*n2^2 - 102*d*n2^2 + 7*d^2*n2^2 + 89*n1*n2^2 - 
      21*d*n1*n2^2 - 4*n2^3 + 11*d*n2^3 - n1*n2^3 - 6*n2^4 + 76*n2*n3 - 
      13*d*n2*n3 - 7*d^2*n2*n3 + 39*n1*n2*n3 - 8*d*n1*n2*n3 - 45*n2^2*n3 + 
      33*d*n2^2*n3 - 3*n1*n2^2*n3 - 21*n2^3*n3 - 35*n2*n3^2 + 19*d*n2*n3^2 - 
      2*n1*n2*n3^2 - 21*n2^2*n3^2 - 6*n2*n3^3 + 730*n2*n5 - 642*d*n2*n5 + 
      170*d^2*n2*n5 - 12*d^3*n2*n5 + 290*n1*n2*n5 - 171*d*n1*n2*n5 + 
      22*d^2*n1*n2*n5 + 350*n2^2*n5 - 151*d*n2^2*n5 + 7*d^2*n2^2*n5 + 
      113*n1*n2^2*n5 - 21*d*n1*n2^2*n5 + 9*n2^3*n5 + 11*d*n2^3*n5 - 
      n1*n2^3*n5 - 6*n2^4*n5 + 158*n2*n3*n5 - 42*d*n2*n3*n5 - 
      7*d^2*n2*n3*n5 + 51*n1*n2*n3*n5 - 8*d*n1*n2*n3*n5 - 27*n2^2*n3*n5 + 
      33*d*n2^2*n3*n5 - 3*n1*n2^2*n3*n5 - 21*n2^3*n3*n5 - 30*n2*n3^2*n5 + 
      19*d*n2*n3^2*n5 - 2*n1*n2*n3^2*n5 - 21*n2^2*n3^2*n5 - 6*n2*n3^3*n5 + 
      300*n2*n5^2 - 210*d*n2*n5^2 + 36*d^2*n2*n5^2 + 60*n1*n2*n5^2 - 
      24*d*n1*n2*n5^2 + 152*n2^2*n5^2 - 49*d*n2^2*n5^2 + 24*n1*n2^2*n5^2 + 
      13*n2^3*n5^2 + 88*n2*n3*n5^2 - 29*d*n2*n3*n5^2 + 12*n1*n2*n3*n5^2 + 
      18*n2^2*n3*n5^2 + 5*n2*n3^2*n5^2 + 30*n2*n5^3 - 12*d*n2*n5^3 + 
      12*n2^2*n5^3 + 6*n2*n3*n5^3)*j[p4, -1 + n1, 1 + n2, n3, 1, 2 + n5, 0, 
      -1, 0, 1, 1, 1, 1, 1, 0])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(3 - d + n1 + n5)) + 
   ((520*n2 - 518*d*n2 + 164*d^2*n2 - 16*d^3*n2 + 250*n1*n2 - 165*d*n1*n2 + 
      26*d^2*n1*n2 + 252*n2^2 - 134*d*n2^2 + 13*d^2*n2^2 + 103*n1*n2^2 - 
      27*d*n1*n2^2 + 2*n2^3 + 9*d*n2^3 + n1*n2^3 - 6*n2^4 + 130*n2*n3 - 
      55*d*n2*n3 + d^2*n2*n3 + 57*n1*n2*n3 - 16*d*n1*n2*n3 - 27*n2^2*n3 + 
      27*d*n2^2*n3 + 3*n1*n2^2*n3 - 21*n2^3*n3 - 23*n2*n3^2 + 15*d*n2*n3^2 + 
      2*n1*n2*n3^2 - 21*n2^2*n3^2 - 6*n2*n3^3 + 810*n2*n5 - 734*d*n2*n5 + 
      204*d^2*n2*n5 - 16*d^3*n2*n5 + 310*n1*n2*n5 - 189*d*n1*n2*n5 + 
      26*d^2*n1*n2*n5 + 406*n2^2*n5 - 189*d*n2^2*n5 + 13*d^2*n2^2*n5 + 
      127*n1*n2^2*n5 - 27*d*n1*n2^2*n5 + 17*n2^3*n5 + 9*d*n2^3*n5 + 
      n1*n2^3*n5 - 6*n2^4*n5 + 230*n2*n3*n5 - 92*d*n2*n3*n5 + d^2*n2*n3*n5 + 
      69*n1*n2*n3*n5 - 16*d*n1*n2*n3*n5 - 3*n2^2*n3*n5 + 27*d*n2^2*n3*n5 + 
      3*n1*n2^2*n3*n5 - 21*n2^3*n3*n5 - 14*n2*n3^2*n5 + 15*d*n2*n3^2*n5 + 
      2*n1*n2*n3^2*n5 - 21*n2^2*n3^2*n5 - 6*n2*n3^3*n5 + 320*n2*n5^2 - 
      228*d*n2*n5^2 + 40*d^2*n2*n5^2 + 60*n1*n2*n5^2 - 24*d*n1*n2*n5^2 + 
      166*n2^2*n5^2 - 55*d*n2^2*n5^2 + 24*n1*n2^2*n5^2 + 15*n2^3*n5^2 + 
      106*n2*n3*n5^2 - 37*d*n2*n3*n5^2 + 12*n1*n2*n3*n5^2 + 24*n2^2*n3*n5^2 + 
      9*n2*n3^2*n5^2 + 30*n2*n5^3 - 12*d*n2*n5^3 + 12*n2^2*n5^3 + 
      6*n2*n3*n5^3)*j[p4, -1 + n1, 1 + n2, n3, 1, 2 + n5, 0, 0, -1, 1, 1, 1, 
      1, 0, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((-520*n2 + 518*d*n2 - 164*d^2*n2 + 16*d^3*n2 - 
      250*n1*n2 + 165*d*n1*n2 - 26*d^2*n1*n2 - 252*n2^2 + 134*d*n2^2 - 
      13*d^2*n2^2 - 103*n1*n2^2 + 27*d*n1*n2^2 - 2*n2^3 - 9*d*n2^3 - 
      n1*n2^3 + 6*n2^4 - 130*n2*n3 + 55*d*n2*n3 - d^2*n2*n3 - 57*n1*n2*n3 + 
      16*d*n1*n2*n3 + 27*n2^2*n3 - 27*d*n2^2*n3 - 3*n1*n2^2*n3 + 21*n2^3*n3 + 
      23*n2*n3^2 - 15*d*n2*n3^2 - 2*n1*n2*n3^2 + 21*n2^2*n3^2 + 6*n2*n3^3 - 
      810*n2*n5 + 734*d*n2*n5 - 204*d^2*n2*n5 + 16*d^3*n2*n5 - 310*n1*n2*n5 + 
      189*d*n1*n2*n5 - 26*d^2*n1*n2*n5 - 406*n2^2*n5 + 189*d*n2^2*n5 - 
      13*d^2*n2^2*n5 - 127*n1*n2^2*n5 + 27*d*n1*n2^2*n5 - 17*n2^3*n5 - 
      9*d*n2^3*n5 - n1*n2^3*n5 + 6*n2^4*n5 - 230*n2*n3*n5 + 92*d*n2*n3*n5 - 
      d^2*n2*n3*n5 - 69*n1*n2*n3*n5 + 16*d*n1*n2*n3*n5 + 3*n2^2*n3*n5 - 
      27*d*n2^2*n3*n5 - 3*n1*n2^2*n3*n5 + 21*n2^3*n3*n5 + 14*n2*n3^2*n5 - 
      15*d*n2*n3^2*n5 - 2*n1*n2*n3^2*n5 + 21*n2^2*n3^2*n5 + 6*n2*n3^3*n5 - 
      320*n2*n5^2 + 228*d*n2*n5^2 - 40*d^2*n2*n5^2 - 60*n1*n2*n5^2 + 
      24*d*n1*n2*n5^2 - 166*n2^2*n5^2 + 55*d*n2^2*n5^2 - 24*n1*n2^2*n5^2 - 
      15*n2^3*n5^2 - 106*n2*n3*n5^2 + 37*d*n2*n3*n5^2 - 12*n1*n2*n3*n5^2 - 
      24*n2^2*n3*n5^2 - 9*n2*n3^2*n5^2 - 30*n2*n5^3 + 12*d*n2*n5^3 - 
      12*n2^2*n5^3 - 6*n2*n3*n5^3)*j[p4, -1 + n1, 1 + n2, n3, 1, 2 + n5, 0, 
      0, -1, 1, 1, 1, 1, 1, 0])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(3 - d + n1 + n5)) + 
   ((-460*n2 + 444*d*n2 - 134*d^2*n2 + 12*d^3*n2 - 230*n1*n2 + 147*d*n1*n2 - 
      22*d^2*n1*n2 - 210*n2^2 + 102*d*n2^2 - 7*d^2*n2^2 - 89*n1*n2^2 + 
      21*d*n1*n2^2 + 4*n2^3 - 11*d*n2^3 + n1*n2^3 + 6*n2^4 - 76*n2*n3 + 
      13*d*n2*n3 + 7*d^2*n2*n3 - 39*n1*n2*n3 + 8*d*n1*n2*n3 + 45*n2^2*n3 - 
      33*d*n2^2*n3 + 3*n1*n2^2*n3 + 21*n2^3*n3 + 35*n2*n3^2 - 19*d*n2*n3^2 + 
      2*n1*n2*n3^2 + 21*n2^2*n3^2 + 6*n2*n3^3 - 270*n2*n5 + 198*d*n2*n5 - 
      36*d^2*n2*n5 - 60*n1*n2*n5 + 24*d*n1*n2*n5 - 140*n2^2*n5 + 
      49*d*n2^2*n5 - 24*n1*n2^2*n5 - 13*n2^3*n5 - 82*n2*n3*n5 + 
      29*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 18*n2^2*n3*n5 - 5*n2*n3^2*n5 - 
      30*n2*n5^2 + 12*d*n2*n5^2 - 12*n2^2*n5^2 - 6*n2*n3*n5^2)*
     j[p4, -1 + n1, 1 + n2, n3, 2, n5, 0, 0, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((520*n2 - 518*d*n2 + 164*d^2*n2 - 16*d^3*n2 + 
      250*n1*n2 - 165*d*n1*n2 + 26*d^2*n1*n2 + 252*n2^2 - 134*d*n2^2 + 
      13*d^2*n2^2 + 103*n1*n2^2 - 27*d*n1*n2^2 + 2*n2^3 + 9*d*n2^3 + 
      n1*n2^3 - 6*n2^4 + 130*n2*n3 - 55*d*n2*n3 + d^2*n2*n3 + 57*n1*n2*n3 - 
      16*d*n1*n2*n3 - 27*n2^2*n3 + 27*d*n2^2*n3 + 3*n1*n2^2*n3 - 21*n2^3*n3 - 
      23*n2*n3^2 + 15*d*n2*n3^2 + 2*n1*n2*n3^2 - 21*n2^2*n3^2 - 6*n2*n3^3 + 
      290*n2*n5 - 216*d*n2*n5 + 40*d^2*n2*n5 + 60*n1*n2*n5 - 24*d*n1*n2*n5 + 
      154*n2^2*n5 - 55*d*n2^2*n5 + 24*n1*n2^2*n5 + 15*n2^3*n5 + 
      100*n2*n3*n5 - 37*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 24*n2^2*n3*n5 + 
      9*n2*n3^2*n5 + 30*n2*n5^2 - 12*d*n2*n5^2 + 12*n2^2*n5^2 + 6*n2*n3*n5^2)*
     j[p4, -1 + n1, 1 + n2, n3, 2, 1 + n5, -1, 0, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((460*n2 - 444*d*n2 + 134*d^2*n2 - 12*d^3*n2 + 
      230*n1*n2 - 147*d*n1*n2 + 22*d^2*n1*n2 + 210*n2^2 - 102*d*n2^2 + 
      7*d^2*n2^2 + 89*n1*n2^2 - 21*d*n1*n2^2 - 4*n2^3 + 11*d*n2^3 - n1*n2^3 - 
      6*n2^4 + 76*n2*n3 - 13*d*n2*n3 - 7*d^2*n2*n3 + 39*n1*n2*n3 - 
      8*d*n1*n2*n3 - 45*n2^2*n3 + 33*d*n2^2*n3 - 3*n1*n2^2*n3 - 21*n2^3*n3 - 
      35*n2*n3^2 + 19*d*n2*n3^2 - 2*n1*n2*n3^2 - 21*n2^2*n3^2 - 6*n2*n3^3 + 
      270*n2*n5 - 198*d*n2*n5 + 36*d^2*n2*n5 + 60*n1*n2*n5 - 24*d*n1*n2*n5 + 
      140*n2^2*n5 - 49*d*n2^2*n5 + 24*n1*n2^2*n5 + 13*n2^3*n5 + 82*n2*n3*n5 - 
      29*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 18*n2^2*n3*n5 + 5*n2*n3^2*n5 + 
      30*n2*n5^2 - 12*d*n2*n5^2 + 12*n2^2*n5^2 + 6*n2*n3*n5^2)*
     j[p4, -1 + n1, 1 + n2, n3, 2, 1 + n5, 0, -1, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((-520*n2 + 518*d*n2 - 164*d^2*n2 + 16*d^3*n2 - 
      250*n1*n2 + 165*d*n1*n2 - 26*d^2*n1*n2 - 252*n2^2 + 134*d*n2^2 - 
      13*d^2*n2^2 - 103*n1*n2^2 + 27*d*n1*n2^2 - 2*n2^3 - 9*d*n2^3 - 
      n1*n2^3 + 6*n2^4 - 130*n2*n3 + 55*d*n2*n3 - d^2*n2*n3 - 57*n1*n2*n3 + 
      16*d*n1*n2*n3 + 27*n2^2*n3 - 27*d*n2^2*n3 - 3*n1*n2^2*n3 + 21*n2^3*n3 + 
      23*n2*n3^2 - 15*d*n2*n3^2 - 2*n1*n2*n3^2 + 21*n2^2*n3^2 + 6*n2*n3^3 - 
      290*n2*n5 + 216*d*n2*n5 - 40*d^2*n2*n5 - 60*n1*n2*n5 + 24*d*n1*n2*n5 - 
      154*n2^2*n5 + 55*d*n2^2*n5 - 24*n1*n2^2*n5 - 15*n2^3*n5 - 
      100*n2*n3*n5 + 37*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 24*n2^2*n3*n5 - 
      9*n2*n3^2*n5 - 30*n2*n5^2 + 12*d*n2*n5^2 - 12*n2^2*n5^2 - 6*n2*n3*n5^2)*
     j[p4, -1 + n1, 1 + n2, n3, 2, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 1, 0])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((1500*n2*n3 - 1480*d*n2*n3 + 462*d^2*n2*n3 - 
      44*d^3*n2*n3 + 730*n1*n2*n3 - 477*d*n1*n2*n3 + 74*d^2*n1*n2*n3 + 
      714*n2^2*n3 - 370*d*n2^2*n3 + 33*d^2*n2^2*n3 + 295*n1*n2^2*n3 - 
      75*d*n1*n2^2*n3 + 29*d*n2^3*n3 + n1*n2^3*n3 - 18*n2^4*n3 + 
      336*n2*n3^2 - 123*d*n2*n3^2 - 5*d^2*n2*n3^2 + 153*n1*n2*n3^2 - 
      40*d*n1*n2*n3^2 - 99*n2^2*n3^2 + 87*d*n2^2*n3^2 + 3*n1*n2^2*n3^2 - 
      63*n2^3*n3^2 - 81*n2*n3^3 + 49*d*n2*n3^3 + 2*n1*n2*n3^3 - 
      63*n2^2*n3^3 - 18*n2*n3^4 + 850*n2*n3*n5 - 630*d*n2*n3*n5 + 
      116*d^2*n2*n3*n5 + 180*n1*n2*n3*n5 - 72*d*n1*n2*n3*n5 + 
      448*n2^2*n3*n5 - 159*d*n2^2*n3*n5 + 72*n1*n2^2*n3*n5 + 43*n2^3*n3*n5 + 
      282*n2*n3^2*n5 - 103*d*n2*n3^2*n5 + 36*n1*n2*n3^2*n5 + 
      66*n2^2*n3^2*n5 + 23*n2*n3^3*n5 + 90*n2*n3*n5^2 - 36*d*n2*n3*n5^2 + 
      36*n2^2*n3*n5^2 + 18*n2*n3^2*n5^2)*j[p4, -1 + n1, 1 + n2, 1 + n3, 0, 
      1 + n5, 0, -1, 0, 1, 1, 1, 1, 1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*
     (n2 - n3)*(-4 + d - n5)*(3 - d + n1 + n5)) + 
   ((-520*n2*n3 + 518*d*n2*n3 - 164*d^2*n2*n3 + 16*d^3*n2*n3 - 250*n1*n2*n3 + 
      165*d*n1*n2*n3 - 26*d^2*n1*n2*n3 - 252*n2^2*n3 + 134*d*n2^2*n3 - 
      13*d^2*n2^2*n3 - 103*n1*n2^2*n3 + 27*d*n1*n2^2*n3 - 2*n2^3*n3 - 
      9*d*n2^3*n3 - n1*n2^3*n3 + 6*n2^4*n3 - 130*n2*n3^2 + 55*d*n2*n3^2 - 
      d^2*n2*n3^2 - 57*n1*n2*n3^2 + 16*d*n1*n2*n3^2 + 27*n2^2*n3^2 - 
      27*d*n2^2*n3^2 - 3*n1*n2^2*n3^2 + 21*n2^3*n3^2 + 23*n2*n3^3 - 
      15*d*n2*n3^3 - 2*n1*n2*n3^3 + 21*n2^2*n3^3 + 6*n2*n3^4 - 290*n2*n3*n5 + 
      216*d*n2*n3*n5 - 40*d^2*n2*n3*n5 - 60*n1*n2*n3*n5 + 24*d*n1*n2*n3*n5 - 
      154*n2^2*n3*n5 + 55*d*n2^2*n3*n5 - 24*n1*n2^2*n3*n5 - 15*n2^3*n3*n5 - 
      100*n2*n3^2*n5 + 37*d*n2*n3^2*n5 - 12*n1*n2*n3^2*n5 - 24*n2^2*n3^2*n5 - 
      9*n2*n3^3*n5 - 30*n2*n3*n5^2 + 12*d*n2*n3*n5^2 - 12*n2^2*n3*n5^2 - 
      6*n2*n3^2*n5^2)*j[p4, -1 + n1, 1 + n2, 1 + n3, 0, 1 + n5, 0, 0, -1, 1, 
      1, 1, 1, 1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((-5*n2*n3 + 2*d*n2*n3 - n2^2*n3 - 2*n2*n3^2)*
     j[p4, -1 + n1, 1 + n2, 1 + n3, 1, n5, 0, -1, 0, 1, 1, 1, 1, 1, 1])/
    ((-1 + n1)*(n2 - n3)*(-4 + d - n5)) + 
   ((-10*n2*n3 + 4*d*n2*n3 - 2*n2^2*n3 - 4*n2*n3^2)*
     j[p4, -1 + n1, 1 + n2, 1 + n3, 1, n5, 0, 0, -1, 1, 1, 1, 1, 1, 1])/
    ((-1 + n1)*(n2 - n3)*(-4 + d - n5)) + 
   ((5*n2*n3 - 2*d*n2*n3 + n2^2*n3 + 2*n2*n3^2)*j[p4, -1 + n1, 1 + n2, 
      1 + n3, 1, n5, 0, 0, 0, 1, 1, 1, 0, 1, 1])/((-1 + n1)*(n2 - n3)*
     (-4 + d - n5)) + ((-400*n2*n3 + 370*d*n2*n3 - 104*d^2*n2*n3 + 
      8*d^3*n2*n3 - 210*n1*n2*n3 + 129*d*n1*n2*n3 - 18*d^2*n1*n2*n3 - 
      168*n2^2*n3 + 70*d*n2^2*n3 - d^2*n2^2*n3 - 75*n1*n2^2*n3 + 
      15*d*n1*n2^2*n3 + 10*n2^3*n3 - 13*d*n2^3*n3 + 3*n1*n2^3*n3 + 
      6*n2^4*n3 - 22*n2*n3^2 - 29*d*n2*n3^2 + 15*d^2*n2*n3^2 - 
      21*n1*n2*n3^2 + 63*n2^2*n3^2 - 39*d*n2^2*n3^2 + 9*n1*n2^2*n3^2 + 
      21*n2^3*n3^2 + 47*n2*n3^3 - 23*d*n2*n3^3 + 6*n1*n2*n3^3 + 
      21*n2^2*n3^3 + 6*n2*n3^4 - 250*n2*n3*n5 + 180*d*n2*n3*n5 - 
      32*d^2*n2*n3*n5 - 60*n1*n2*n3*n5 + 24*d*n1*n2*n3*n5 - 126*n2^2*n3*n5 + 
      43*d*n2^2*n3*n5 - 24*n1*n2^2*n3*n5 - 11*n2^3*n3*n5 - 64*n2*n3^2*n5 + 
      21*d*n2*n3^2*n5 - 12*n1*n2*n3^2*n5 - 12*n2^2*n3^2*n5 - n2*n3^3*n5 - 
      30*n2*n3*n5^2 + 12*d*n2*n3*n5^2 - 12*n2^2*n3*n5^2 - 6*n2*n3^2*n5^2)*
     j[p4, -1 + n1, 1 + n2, 1 + n3, 1, n5, 0, 0, 0, 1, 1, 1, 1, 0, 1])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((5*n2*n3 - 2*d*n2*n3 + n2^2*n3 + 2*n2*n3^2)*
     j[p4, -1 + n1, 1 + n2, 1 + n3, 1, 1 + n5, -1, -1, 0, 1, 1, 1, 1, 1, 1])/
    ((-1 + n1)*(n2 - n3)*(-4 + d - n5)) + 
   ((520*n2*n3 - 518*d*n2*n3 + 164*d^2*n2*n3 - 16*d^3*n2*n3 + 250*n1*n2*n3 - 
      165*d*n1*n2*n3 + 26*d^2*n1*n2*n3 + 252*n2^2*n3 - 134*d*n2^2*n3 + 
      13*d^2*n2^2*n3 + 103*n1*n2^2*n3 - 27*d*n1*n2^2*n3 + 2*n2^3*n3 + 
      9*d*n2^3*n3 + n1*n2^3*n3 - 6*n2^4*n3 + 130*n2*n3^2 - 55*d*n2*n3^2 + 
      d^2*n2*n3^2 + 57*n1*n2*n3^2 - 16*d*n1*n2*n3^2 - 27*n2^2*n3^2 + 
      27*d*n2^2*n3^2 + 3*n1*n2^2*n3^2 - 21*n2^3*n3^2 - 23*n2*n3^3 + 
      15*d*n2*n3^3 + 2*n1*n2*n3^3 - 21*n2^2*n3^3 - 6*n2*n3^4 + 290*n2*n3*n5 - 
      216*d*n2*n3*n5 + 40*d^2*n2*n3*n5 + 60*n1*n2*n3*n5 - 24*d*n1*n2*n3*n5 + 
      154*n2^2*n3*n5 - 55*d*n2^2*n3*n5 + 24*n1*n2^2*n3*n5 + 15*n2^3*n3*n5 + 
      100*n2*n3^2*n5 - 37*d*n2*n3^2*n5 + 12*n1*n2*n3^2*n5 + 24*n2^2*n3^2*n5 + 
      9*n2*n3^3*n5 + 30*n2*n3*n5^2 - 12*d*n2*n3*n5^2 + 12*n2^2*n3*n5^2 + 
      6*n2*n3^2*n5^2)*j[p4, -1 + n1, 1 + n2, 1 + n3, 1, 1 + n5, -1, 0, 0, 1, 
      1, 1, 1, 0, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((5*n2*n3 - 2*d*n2*n3 + n2^2*n3 + 2*n2*n3^2)*
     j[p4, -1 + n1, 1 + n2, 1 + n3, 1, 1 + n5, 0, -2, 0, 1, 1, 1, 1, 1, 1])/
    ((-1 + n1)*(n2 - n3)*(-4 + d - n5)) + 
   ((5*n2*n3 - 2*d*n2*n3 + n2^2*n3 + 2*n2*n3^2)*j[p4, -1 + n1, 1 + n2, 
      1 + n3, 1, 1 + n5, 0, -1, -1, 1, 1, 1, 1, 1, 1])/
    ((-1 + n1)*(n2 - n3)*(-4 + d - n5)) + 
   ((-5*n2*n3 + 2*d*n2*n3 - n2^2*n3 - 2*n2*n3^2)*j[p4, -1 + n1, 1 + n2, 
      1 + n3, 1, 1 + n5, 0, -1, 0, 1, 1, 1, 0, 1, 1])/
    ((-1 + n1)*(n2 - n3)*(-4 + d - n5)) + 
   ((400*n2*n3 - 370*d*n2*n3 + 104*d^2*n2*n3 - 8*d^3*n2*n3 + 210*n1*n2*n3 - 
      129*d*n1*n2*n3 + 18*d^2*n1*n2*n3 + 168*n2^2*n3 - 70*d*n2^2*n3 + 
      d^2*n2^2*n3 + 75*n1*n2^2*n3 - 15*d*n1*n2^2*n3 - 10*n2^3*n3 + 
      13*d*n2^3*n3 - 3*n1*n2^3*n3 - 6*n2^4*n3 + 22*n2*n3^2 + 29*d*n2*n3^2 - 
      15*d^2*n2*n3^2 + 21*n1*n2*n3^2 - 63*n2^2*n3^2 + 39*d*n2^2*n3^2 - 
      9*n1*n2^2*n3^2 - 21*n2^3*n3^2 - 47*n2*n3^3 + 23*d*n2*n3^3 - 
      6*n1*n2*n3^3 - 21*n2^2*n3^3 - 6*n2*n3^4 + 250*n2*n3*n5 - 
      180*d*n2*n3*n5 + 32*d^2*n2*n3*n5 + 60*n1*n2*n3*n5 - 24*d*n1*n2*n3*n5 + 
      126*n2^2*n3*n5 - 43*d*n2^2*n3*n5 + 24*n1*n2^2*n3*n5 + 11*n2^3*n3*n5 + 
      64*n2*n3^2*n5 - 21*d*n2*n3^2*n5 + 12*n1*n2*n3^2*n5 + 12*n2^2*n3^2*n5 + 
      n2*n3^3*n5 + 30*n2*n3*n5^2 - 12*d*n2*n3*n5^2 + 12*n2^2*n3*n5^2 + 
      6*n2*n3^2*n5^2)*j[p4, -1 + n1, 1 + n2, 1 + n3, 1, 1 + n5, 0, -1, 0, 1, 
      1, 1, 1, 0, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((-1500*n2*n3 + 1480*d*n2*n3 - 462*d^2*n2*n3 + 
      44*d^3*n2*n3 - 730*n1*n2*n3 + 477*d*n1*n2*n3 - 74*d^2*n1*n2*n3 - 
      714*n2^2*n3 + 370*d*n2^2*n3 - 33*d^2*n2^2*n3 - 295*n1*n2^2*n3 + 
      75*d*n1*n2^2*n3 - 29*d*n2^3*n3 - n1*n2^3*n3 + 18*n2^4*n3 - 
      336*n2*n3^2 + 123*d*n2*n3^2 + 5*d^2*n2*n3^2 - 153*n1*n2*n3^2 + 
      40*d*n1*n2*n3^2 + 99*n2^2*n3^2 - 87*d*n2^2*n3^2 - 3*n1*n2^2*n3^2 + 
      63*n2^3*n3^2 + 81*n2*n3^3 - 49*d*n2*n3^3 - 2*n1*n2*n3^3 + 
      63*n2^2*n3^3 + 18*n2*n3^4 - 850*n2*n3*n5 + 630*d*n2*n3*n5 - 
      116*d^2*n2*n3*n5 - 180*n1*n2*n3*n5 + 72*d*n1*n2*n3*n5 - 
      448*n2^2*n3*n5 + 159*d*n2^2*n3*n5 - 72*n1*n2^2*n3*n5 - 43*n2^3*n3*n5 - 
      282*n2*n3^2*n5 + 103*d*n2*n3^2*n5 - 36*n1*n2*n3^2*n5 - 
      66*n2^2*n3^2*n5 - 23*n2*n3^3*n5 - 90*n2*n3*n5^2 + 36*d*n2*n3*n5^2 - 
      36*n2^2*n3*n5^2 - 18*n2*n3^2*n5^2)*j[p4, -1 + n1, 1 + n2, 1 + n3, 1, 
      1 + n5, 0, -1, 0, 1, 1, 1, 1, 1, 0])/(2*(-1 + n1)*(-2 + d - n2 - n3)*
     (n2 - n3)*(-4 + d - n5)*(3 - d + n1 + n5)) + 
   ((-520*n2*n3 + 518*d*n2*n3 - 164*d^2*n2*n3 + 16*d^3*n2*n3 - 250*n1*n2*n3 + 
      165*d*n1*n2*n3 - 26*d^2*n1*n2*n3 - 252*n2^2*n3 + 134*d*n2^2*n3 - 
      13*d^2*n2^2*n3 - 103*n1*n2^2*n3 + 27*d*n1*n2^2*n3 - 2*n2^3*n3 - 
      9*d*n2^3*n3 - n1*n2^3*n3 + 6*n2^4*n3 - 130*n2*n3^2 + 55*d*n2*n3^2 - 
      d^2*n2*n3^2 - 57*n1*n2*n3^2 + 16*d*n1*n2*n3^2 + 27*n2^2*n3^2 - 
      27*d*n2^2*n3^2 - 3*n1*n2^2*n3^2 + 21*n2^3*n3^2 + 23*n2*n3^3 - 
      15*d*n2*n3^3 - 2*n1*n2*n3^3 + 21*n2^2*n3^3 + 6*n2*n3^4 - 290*n2*n3*n5 + 
      216*d*n2*n3*n5 - 40*d^2*n2*n3*n5 - 60*n1*n2*n3*n5 + 24*d*n1*n2*n3*n5 - 
      154*n2^2*n3*n5 + 55*d*n2^2*n3*n5 - 24*n1*n2^2*n3*n5 - 15*n2^3*n3*n5 - 
      100*n2*n3^2*n5 + 37*d*n2*n3^2*n5 - 12*n1*n2*n3^2*n5 - 24*n2^2*n3^2*n5 - 
      9*n2*n3^3*n5 - 30*n2*n3*n5^2 + 12*d*n2*n3*n5^2 - 12*n2^2*n3*n5^2 - 
      6*n2*n3^2*n5^2)*j[p4, -1 + n1, 1 + n2, 1 + n3, 1, 1 + n5, 0, 0, -1, 1, 
      1, 1, 1, 0, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((520*n2*n3 - 518*d*n2*n3 + 164*d^2*n2*n3 - 
      16*d^3*n2*n3 + 250*n1*n2*n3 - 165*d*n1*n2*n3 + 26*d^2*n1*n2*n3 + 
      252*n2^2*n3 - 134*d*n2^2*n3 + 13*d^2*n2^2*n3 + 103*n1*n2^2*n3 - 
      27*d*n1*n2^2*n3 + 2*n2^3*n3 + 9*d*n2^3*n3 + n1*n2^3*n3 - 6*n2^4*n3 + 
      130*n2*n3^2 - 55*d*n2*n3^2 + d^2*n2*n3^2 + 57*n1*n2*n3^2 - 
      16*d*n1*n2*n3^2 - 27*n2^2*n3^2 + 27*d*n2^2*n3^2 + 3*n1*n2^2*n3^2 - 
      21*n2^3*n3^2 - 23*n2*n3^3 + 15*d*n2*n3^3 + 2*n1*n2*n3^3 - 
      21*n2^2*n3^3 - 6*n2*n3^4 + 290*n2*n3*n5 - 216*d*n2*n3*n5 + 
      40*d^2*n2*n3*n5 + 60*n1*n2*n3*n5 - 24*d*n1*n2*n3*n5 + 154*n2^2*n3*n5 - 
      55*d*n2^2*n3*n5 + 24*n1*n2^2*n3*n5 + 15*n2^3*n3*n5 + 100*n2*n3^2*n5 - 
      37*d*n2*n3^2*n5 + 12*n1*n2*n3^2*n5 + 24*n2^2*n3^2*n5 + 9*n2*n3^3*n5 + 
      30*n2*n3*n5^2 - 12*d*n2*n3*n5^2 + 12*n2^2*n3*n5^2 + 6*n2*n3^2*n5^2)*
     j[p4, -1 + n1, 1 + n2, 1 + n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 1, 0])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((-460*n2 + 444*d*n2 - 134*d^2*n2 + 12*d^3*n2 - 
      230*n1*n2 + 147*d*n1*n2 - 22*d^2*n1*n2 - 670*n2^2 + 546*d*n2^2 - 
      141*d^2*n2^2 + 12*d^3*n2^2 - 319*n1*n2^2 + 168*d*n1*n2^2 - 
      22*d^2*n1*n2^2 - 206*n2^3 + 91*d*n2^3 - 7*d^2*n2^3 - 88*n1*n2^3 + 
      21*d*n1*n2^3 + 10*n2^4 - 11*d*n2^4 + n1*n2^4 + 6*n2^5 - 76*n2*n3 + 
      13*d*n2*n3 + 7*d^2*n2*n3 - 39*n1*n2*n3 + 8*d*n1*n2*n3 - 31*n2^2*n3 - 
      20*d*n2^2*n3 + 7*d^2*n2^2*n3 - 36*n1*n2^2*n3 + 8*d*n1*n2^2*n3 + 
      66*n2^3*n3 - 33*d*n2^3*n3 + 3*n1*n2^3*n3 + 21*n2^4*n3 + 35*n2*n3^2 - 
      19*d*n2*n3^2 + 2*n1*n2*n3^2 + 56*n2^2*n3^2 - 19*d*n2^2*n3^2 + 
      2*n1*n2^2*n3^2 + 21*n2^3*n3^2 + 6*n2*n3^3 + 6*n2^2*n3^3 - 270*n2*n5 + 
      198*d*n2*n5 - 36*d^2*n2*n5 - 60*n1*n2*n5 + 24*d*n1*n2*n5 - 
      410*n2^2*n5 + 247*d*n2^2*n5 - 36*d^2*n2^2*n5 - 84*n1*n2^2*n5 + 
      24*d*n1*n2^2*n5 - 153*n2^3*n5 + 49*d*n2^3*n5 - 24*n1*n2^3*n5 - 
      13*n2^4*n5 - 82*n2*n3*n5 + 29*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 
      100*n2^2*n3*n5 + 29*d*n2^2*n3*n5 - 12*n1*n2^2*n3*n5 - 18*n2^3*n3*n5 - 
      5*n2*n3^2*n5 - 5*n2^2*n3^2*n5 - 30*n2*n5^2 + 12*d*n2*n5^2 - 
      42*n2^2*n5^2 + 12*d*n2^2*n5^2 - 12*n2^3*n5^2 - 6*n2*n3*n5^2 - 
      6*n2^2*n3*n5^2)*j[p4, -1 + n1, 2 + n2, -1 + n3, 1, n5, 0, 0, 0, 1, 1, 
      1, 1, 1, 1])/((-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((490*n2 - 481*d*n2 + 149*d^2*n2 - 14*d^3*n2 + 
      240*n1*n2 - 156*d*n1*n2 + 24*d^2*n1*n2 + 721*n2^2 - 599*d*n2^2 + 
      159*d^2*n2^2 - 14*d^3*n2^2 + 336*n1*n2^2 - 180*d*n1*n2^2 + 
      24*d^2*n1*n2^2 + 230*n2^3 - 108*d*n2^3 + 10*d^2*n2^3 + 96*n1*n2^3 - 
      24*d*n1*n2^3 - 7*n2^4 + 10*d*n2^4 - 6*n2^5 + 103*n2*n3 - 34*d*n2*n3 - 
      3*d^2*n2*n3 + 48*n1*n2*n3 - 12*d*n1*n2*n3 + 67*n2^2*n3 - 4*d*n2^2*n3 - 
      3*d^2*n2^2*n3 + 48*n1*n2^2*n3 - 12*d*n1*n2^2*n3 - 57*n2^3*n3 + 
      30*d*n2^3*n3 - 21*n2^4*n3 - 29*n2*n3^2 + 17*d*n2*n3^2 - 50*n2^2*n3^2 + 
      17*d*n2^2*n3^2 - 21*n2^3*n3^2 - 6*n2*n3^3 - 6*n2^2*n3^3 + 280*n2*n5 - 
      207*d*n2*n5 + 38*d^2*n2*n5 + 60*n1*n2*n5 - 24*d*n1*n2*n5 + 
      427*n2^2*n5 - 259*d*n2^2*n5 + 38*d^2*n2^2*n5 + 84*n1*n2^2*n5 - 
      24*d*n1*n2^2*n5 + 161*n2^3*n5 - 52*d*n2^3*n5 + 24*n1*n2^3*n5 + 
      14*n2^4*n5 + 91*n2*n3*n5 - 33*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 
      112*n2^2*n3*n5 - 33*d*n2^2*n3*n5 + 12*n1*n2^2*n3*n5 + 21*n2^3*n3*n5 + 
      7*n2*n3^2*n5 + 7*n2^2*n3^2*n5 + 30*n2*n5^2 - 12*d*n2*n5^2 + 
      42*n2^2*n5^2 - 12*d*n2^2*n5^2 + 12*n2^3*n5^2 + 6*n2*n3*n5^2 + 
      6*n2^2*n3*n5^2)*j[p4, -1 + n1, 2 + n2, -1 + n3, 1, 1 + n5, -1, 0, 0, 1, 
      1, 1, 1, 1, 1])/((-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((490*n2 - 481*d*n2 + 149*d^2*n2 - 14*d^3*n2 + 
      240*n1*n2 - 156*d*n1*n2 + 24*d^2*n1*n2 + 721*n2^2 - 599*d*n2^2 + 
      159*d^2*n2^2 - 14*d^3*n2^2 + 336*n1*n2^2 - 180*d*n1*n2^2 + 
      24*d^2*n1*n2^2 + 230*n2^3 - 108*d*n2^3 + 10*d^2*n2^3 + 96*n1*n2^3 - 
      24*d*n1*n2^3 - 7*n2^4 + 10*d*n2^4 - 6*n2^5 + 103*n2*n3 - 34*d*n2*n3 - 
      3*d^2*n2*n3 + 48*n1*n2*n3 - 12*d*n1*n2*n3 + 67*n2^2*n3 - 4*d*n2^2*n3 - 
      3*d^2*n2^2*n3 + 48*n1*n2^2*n3 - 12*d*n1*n2^2*n3 - 57*n2^3*n3 + 
      30*d*n2^3*n3 - 21*n2^4*n3 - 29*n2*n3^2 + 17*d*n2*n3^2 - 50*n2^2*n3^2 + 
      17*d*n2^2*n3^2 - 21*n2^3*n3^2 - 6*n2*n3^3 - 6*n2^2*n3^3 + 280*n2*n5 - 
      207*d*n2*n5 + 38*d^2*n2*n5 + 60*n1*n2*n5 - 24*d*n1*n2*n5 + 
      427*n2^2*n5 - 259*d*n2^2*n5 + 38*d^2*n2^2*n5 + 84*n1*n2^2*n5 - 
      24*d*n1*n2^2*n5 + 161*n2^3*n5 - 52*d*n2^3*n5 + 24*n1*n2^3*n5 + 
      14*n2^4*n5 + 91*n2*n3*n5 - 33*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 
      112*n2^2*n3*n5 - 33*d*n2^2*n3*n5 + 12*n1*n2^2*n3*n5 + 21*n2^3*n3*n5 + 
      7*n2*n3^2*n5 + 7*n2^2*n3^2*n5 + 30*n2*n5^2 - 12*d*n2*n5^2 + 
      42*n2^2*n5^2 - 12*d*n2^2*n5^2 + 12*n2^3*n5^2 + 6*n2*n3*n5^2 + 
      6*n2^2*n3*n5^2)*j[p4, -1 + n1, 2 + n2, -1 + n3, 1, 1 + n5, 0, -1, 0, 1, 
      1, 1, 1, 1, 1])/((-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((-520*n2 + 518*d*n2 - 164*d^2*n2 + 16*d^3*n2 - 
      250*n1*n2 + 165*d*n1*n2 - 26*d^2*n1*n2 - 772*n2^2 + 652*d*n2^2 - 
      177*d^2*n2^2 + 16*d^3*n2^2 - 353*n1*n2^2 + 192*d*n1*n2^2 - 
      26*d^2*n1*n2^2 - 254*n2^3 + 125*d*n2^3 - 13*d^2*n2^3 - 104*n1*n2^3 + 
      27*d*n1*n2^3 + 4*n2^4 - 9*d*n2^4 - n1*n2^4 + 6*n2^5 - 130*n2*n3 + 
      55*d*n2*n3 - d^2*n2*n3 - 57*n1*n2*n3 + 16*d*n1*n2*n3 - 103*n2^2*n3 + 
      28*d*n2^2*n3 - d^2*n2^2*n3 - 60*n1*n2^2*n3 + 16*d*n1*n2^2*n3 + 
      48*n2^3*n3 - 27*d*n2^3*n3 - 3*n1*n2^3*n3 + 21*n2^4*n3 + 23*n2*n3^2 - 
      15*d*n2*n3^2 - 2*n1*n2*n3^2 + 44*n2^2*n3^2 - 15*d*n2^2*n3^2 - 
      2*n1*n2^2*n3^2 + 21*n2^3*n3^2 + 6*n2*n3^3 + 6*n2^2*n3^3 - 290*n2*n5 + 
      216*d*n2*n5 - 40*d^2*n2*n5 - 60*n1*n2*n5 + 24*d*n1*n2*n5 - 
      444*n2^2*n5 + 271*d*n2^2*n5 - 40*d^2*n2^2*n5 - 84*n1*n2^2*n5 + 
      24*d*n1*n2^2*n5 - 169*n2^3*n5 + 55*d*n2^3*n5 - 24*n1*n2^3*n5 - 
      15*n2^4*n5 - 100*n2*n3*n5 + 37*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 
      124*n2^2*n3*n5 + 37*d*n2^2*n3*n5 - 12*n1*n2^2*n3*n5 - 24*n2^3*n3*n5 - 
      9*n2*n3^2*n5 - 9*n2^2*n3^2*n5 - 30*n2*n5^2 + 12*d*n2*n5^2 - 
      42*n2^2*n5^2 + 12*d*n2^2*n5^2 - 12*n2^3*n5^2 - 6*n2*n3*n5^2 - 
      6*n2^2*n3*n5^2)*j[p4, -1 + n1, 2 + n2, -1 + n3, 1, 1 + n5, 0, 0, -1, 1, 
      1, 1, 1, 1, 1])/((-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((-550*n2 + 555*d*n2 - 179*d^2*n2 + 18*d^3*n2 - 
      260*n1*n2 + 174*d*n1*n2 - 28*d^2*n1*n2 - 823*n2^2 + 705*d*n2^2 - 
      195*d^2*n2^2 + 18*d^3*n2^2 - 370*n1*n2^2 + 204*d*n1*n2^2 - 
      28*d^2*n1*n2^2 - 278*n2^3 + 142*d*n2^3 - 16*d^2*n2^3 - 112*n1*n2^3 + 
      30*d*n1*n2^3 + n2^4 - 8*d*n2^4 - 2*n1*n2^4 + 6*n2^5 - 157*n2*n3 + 
      76*d*n2*n3 - 5*d^2*n2*n3 - 66*n1*n2*n3 + 20*d*n1*n2*n3 - 139*n2^2*n3 + 
      52*d*n2^2*n3 - 5*d^2*n2^2*n3 - 72*n1*n2^2*n3 + 20*d*n1*n2^2*n3 + 
      39*n2^3*n3 - 24*d*n2^3*n3 - 6*n1*n2^3*n3 + 21*n2^4*n3 + 17*n2*n3^2 - 
      13*d*n2*n3^2 - 4*n1*n2*n3^2 + 38*n2^2*n3^2 - 13*d*n2^2*n3^2 - 
      4*n1*n2^2*n3^2 + 21*n2^3*n3^2 + 6*n2*n3^3 + 6*n2^2*n3^3 - 300*n2*n5 + 
      225*d*n2*n5 - 42*d^2*n2*n5 - 60*n1*n2*n5 + 24*d*n1*n2*n5 - 
      461*n2^2*n5 + 283*d*n2^2*n5 - 42*d^2*n2^2*n5 - 84*n1*n2^2*n5 + 
      24*d*n1*n2^2*n5 - 177*n2^3*n5 + 58*d*n2^3*n5 - 24*n1*n2^3*n5 - 
      16*n2^4*n5 - 109*n2*n3*n5 + 41*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 
      136*n2^2*n3*n5 + 41*d*n2^2*n3*n5 - 12*n1*n2^2*n3*n5 - 27*n2^3*n3*n5 - 
      11*n2*n3^2*n5 - 11*n2^2*n3^2*n5 - 30*n2*n5^2 + 12*d*n2*n5^2 - 
      42*n2^2*n5^2 + 12*d*n2^2*n5^2 - 12*n2^3*n5^2 - 6*n2*n3*n5^2 - 
      6*n2^2*n3*n5^2)*j[p4, -1 + n1, 2 + n2, n3, 1, n5, 0, -1, 0, 1, 1, 1, 1, 
      1, 1])/((-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((460*n2 - 444*d*n2 + 134*d^2*n2 - 12*d^3*n2 + 
      230*n1*n2 - 147*d*n1*n2 + 22*d^2*n1*n2 + 670*n2^2 - 546*d*n2^2 + 
      141*d^2*n2^2 - 12*d^3*n2^2 + 319*n1*n2^2 - 168*d*n1*n2^2 + 
      22*d^2*n1*n2^2 + 206*n2^3 - 91*d*n2^3 + 7*d^2*n2^3 + 88*n1*n2^3 - 
      21*d*n1*n2^3 - 10*n2^4 + 11*d*n2^4 - n1*n2^4 - 6*n2^5 + 76*n2*n3 - 
      13*d*n2*n3 - 7*d^2*n2*n3 + 39*n1*n2*n3 - 8*d*n1*n2*n3 + 31*n2^2*n3 + 
      20*d*n2^2*n3 - 7*d^2*n2^2*n3 + 36*n1*n2^2*n3 - 8*d*n1*n2^2*n3 - 
      66*n2^3*n3 + 33*d*n2^3*n3 - 3*n1*n2^3*n3 - 21*n2^4*n3 - 35*n2*n3^2 + 
      19*d*n2*n3^2 - 2*n1*n2*n3^2 - 56*n2^2*n3^2 + 19*d*n2^2*n3^2 - 
      2*n1*n2^2*n3^2 - 21*n2^3*n3^2 - 6*n2*n3^3 - 6*n2^2*n3^3 + 270*n2*n5 - 
      198*d*n2*n5 + 36*d^2*n2*n5 + 60*n1*n2*n5 - 24*d*n1*n2*n5 + 
      410*n2^2*n5 - 247*d*n2^2*n5 + 36*d^2*n2^2*n5 + 84*n1*n2^2*n5 - 
      24*d*n1*n2^2*n5 + 153*n2^3*n5 - 49*d*n2^3*n5 + 24*n1*n2^3*n5 + 
      13*n2^4*n5 + 82*n2*n3*n5 - 29*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 
      100*n2^2*n3*n5 - 29*d*n2^2*n3*n5 + 12*n1*n2^2*n3*n5 + 18*n2^3*n3*n5 + 
      5*n2*n3^2*n5 + 5*n2^2*n3^2*n5 + 30*n2*n5^2 - 12*d*n2*n5^2 + 
      42*n2^2*n5^2 - 12*d*n2^2*n5^2 + 12*n2^3*n5^2 + 6*n2*n3*n5^2 + 
      6*n2^2*n3*n5^2)*j[p4, -1 + n1, 2 + n2, n3, 1, n5, 0, 0, -1, 1, 1, 1, 1, 
      1, 1])/((-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((-460*n2 + 444*d*n2 - 134*d^2*n2 + 12*d^3*n2 - 
      230*n1*n2 + 147*d*n1*n2 - 22*d^2*n1*n2 - 670*n2^2 + 546*d*n2^2 - 
      141*d^2*n2^2 + 12*d^3*n2^2 - 319*n1*n2^2 + 168*d*n1*n2^2 - 
      22*d^2*n1*n2^2 - 206*n2^3 + 91*d*n2^3 - 7*d^2*n2^3 - 88*n1*n2^3 + 
      21*d*n1*n2^3 + 10*n2^4 - 11*d*n2^4 + n1*n2^4 + 6*n2^5 - 76*n2*n3 + 
      13*d*n2*n3 + 7*d^2*n2*n3 - 39*n1*n2*n3 + 8*d*n1*n2*n3 - 31*n2^2*n3 - 
      20*d*n2^2*n3 + 7*d^2*n2^2*n3 - 36*n1*n2^2*n3 + 8*d*n1*n2^2*n3 + 
      66*n2^3*n3 - 33*d*n2^3*n3 + 3*n1*n2^3*n3 + 21*n2^4*n3 + 35*n2*n3^2 - 
      19*d*n2*n3^2 + 2*n1*n2*n3^2 + 56*n2^2*n3^2 - 19*d*n2^2*n3^2 + 
      2*n1*n2^2*n3^2 + 21*n2^3*n3^2 + 6*n2*n3^3 + 6*n2^2*n3^3 - 270*n2*n5 + 
      198*d*n2*n5 - 36*d^2*n2*n5 - 60*n1*n2*n5 + 24*d*n1*n2*n5 - 
      410*n2^2*n5 + 247*d*n2^2*n5 - 36*d^2*n2^2*n5 - 84*n1*n2^2*n5 + 
      24*d*n1*n2^2*n5 - 153*n2^3*n5 + 49*d*n2^3*n5 - 24*n1*n2^3*n5 - 
      13*n2^4*n5 - 82*n2*n3*n5 + 29*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 
      100*n2^2*n3*n5 + 29*d*n2^2*n3*n5 - 12*n1*n2^2*n3*n5 - 18*n2^3*n3*n5 - 
      5*n2*n3^2*n5 - 5*n2^2*n3^2*n5 - 30*n2*n5^2 + 12*d*n2*n5^2 - 
      42*n2^2*n5^2 + 12*d*n2^2*n5^2 - 12*n2^3*n5^2 - 6*n2*n3*n5^2 - 
      6*n2^2*n3*n5^2)*j[p4, -1 + n1, 2 + n2, n3, 1, n5, 0, 0, 0, 1, 1, 1, 0, 
      1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((460*n2 - 444*d*n2 + 134*d^2*n2 - 12*d^3*n2 + 
      230*n1*n2 - 147*d*n1*n2 + 22*d^2*n1*n2 + 670*n2^2 - 546*d*n2^2 + 
      141*d^2*n2^2 - 12*d^3*n2^2 + 319*n1*n2^2 - 168*d*n1*n2^2 + 
      22*d^2*n1*n2^2 + 206*n2^3 - 91*d*n2^3 + 7*d^2*n2^3 + 88*n1*n2^3 - 
      21*d*n1*n2^3 - 10*n2^4 + 11*d*n2^4 - n1*n2^4 - 6*n2^5 + 76*n2*n3 - 
      13*d*n2*n3 - 7*d^2*n2*n3 + 39*n1*n2*n3 - 8*d*n1*n2*n3 + 31*n2^2*n3 + 
      20*d*n2^2*n3 - 7*d^2*n2^2*n3 + 36*n1*n2^2*n3 - 8*d*n1*n2^2*n3 - 
      66*n2^3*n3 + 33*d*n2^3*n3 - 3*n1*n2^3*n3 - 21*n2^4*n3 - 35*n2*n3^2 + 
      19*d*n2*n3^2 - 2*n1*n2*n3^2 - 56*n2^2*n3^2 + 19*d*n2^2*n3^2 - 
      2*n1*n2^2*n3^2 - 21*n2^3*n3^2 - 6*n2*n3^3 - 6*n2^2*n3^3 + 270*n2*n5 - 
      198*d*n2*n5 + 36*d^2*n2*n5 + 60*n1*n2*n5 - 24*d*n1*n2*n5 + 
      410*n2^2*n5 - 247*d*n2^2*n5 + 36*d^2*n2^2*n5 + 84*n1*n2^2*n5 - 
      24*d*n1*n2^2*n5 + 153*n2^3*n5 - 49*d*n2^3*n5 + 24*n1*n2^3*n5 + 
      13*n2^4*n5 + 82*n2*n3*n5 - 29*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 
      100*n2^2*n3*n5 - 29*d*n2^2*n3*n5 + 12*n1*n2^2*n3*n5 + 18*n2^3*n3*n5 + 
      5*n2*n3^2*n5 + 5*n2^2*n3^2*n5 + 30*n2*n5^2 - 12*d*n2*n5^2 + 
      42*n2^2*n5^2 - 12*d*n2^2*n5^2 + 12*n2^3*n5^2 + 6*n2*n3*n5^2 + 
      6*n2^2*n3*n5^2)*j[p4, -1 + n1, 2 + n2, n3, 1, n5, 0, 0, 0, 1, 1, 1, 1, 
      0, 1])/((-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((-490*n2 + 481*d*n2 - 149*d^2*n2 + 14*d^3*n2 - 
      240*n1*n2 + 156*d*n1*n2 - 24*d^2*n1*n2 - 721*n2^2 + 599*d*n2^2 - 
      159*d^2*n2^2 + 14*d^3*n2^2 - 336*n1*n2^2 + 180*d*n1*n2^2 - 
      24*d^2*n1*n2^2 - 230*n2^3 + 108*d*n2^3 - 10*d^2*n2^3 - 96*n1*n2^3 + 
      24*d*n1*n2^3 + 7*n2^4 - 10*d*n2^4 + 6*n2^5 - 103*n2*n3 + 34*d*n2*n3 + 
      3*d^2*n2*n3 - 48*n1*n2*n3 + 12*d*n1*n2*n3 - 67*n2^2*n3 + 4*d*n2^2*n3 + 
      3*d^2*n2^2*n3 - 48*n1*n2^2*n3 + 12*d*n1*n2^2*n3 + 57*n2^3*n3 - 
      30*d*n2^3*n3 + 21*n2^4*n3 + 29*n2*n3^2 - 17*d*n2*n3^2 + 50*n2^2*n3^2 - 
      17*d*n2^2*n3^2 + 21*n2^3*n3^2 + 6*n2*n3^3 + 6*n2^2*n3^3 - 280*n2*n5 + 
      207*d*n2*n5 - 38*d^2*n2*n5 - 60*n1*n2*n5 + 24*d*n1*n2*n5 - 
      427*n2^2*n5 + 259*d*n2^2*n5 - 38*d^2*n2^2*n5 - 84*n1*n2^2*n5 + 
      24*d*n1*n2^2*n5 - 161*n2^3*n5 + 52*d*n2^3*n5 - 24*n1*n2^3*n5 - 
      14*n2^4*n5 - 91*n2*n3*n5 + 33*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 
      112*n2^2*n3*n5 + 33*d*n2^2*n3*n5 - 12*n1*n2^2*n3*n5 - 21*n2^3*n3*n5 - 
      7*n2*n3^2*n5 - 7*n2^2*n3^2*n5 - 30*n2*n5^2 + 12*d*n2*n5^2 - 
      42*n2^2*n5^2 + 12*d*n2^2*n5^2 - 12*n2^3*n5^2 - 6*n2*n3*n5^2 - 
      6*n2^2*n3*n5^2)*j[p4, -1 + n1, 2 + n2, n3, 1, 1 + n5, -1, -1, 0, 1, 1, 
      1, 1, 1, 1])/((-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((520*n2 - 518*d*n2 + 164*d^2*n2 - 16*d^3*n2 + 
      250*n1*n2 - 165*d*n1*n2 + 26*d^2*n1*n2 + 772*n2^2 - 652*d*n2^2 + 
      177*d^2*n2^2 - 16*d^3*n2^2 + 353*n1*n2^2 - 192*d*n1*n2^2 + 
      26*d^2*n1*n2^2 + 254*n2^3 - 125*d*n2^3 + 13*d^2*n2^3 + 104*n1*n2^3 - 
      27*d*n1*n2^3 - 4*n2^4 + 9*d*n2^4 + n1*n2^4 - 6*n2^5 + 130*n2*n3 - 
      55*d*n2*n3 + d^2*n2*n3 + 57*n1*n2*n3 - 16*d*n1*n2*n3 + 103*n2^2*n3 - 
      28*d*n2^2*n3 + d^2*n2^2*n3 + 60*n1*n2^2*n3 - 16*d*n1*n2^2*n3 - 
      48*n2^3*n3 + 27*d*n2^3*n3 + 3*n1*n2^3*n3 - 21*n2^4*n3 - 23*n2*n3^2 + 
      15*d*n2*n3^2 + 2*n1*n2*n3^2 - 44*n2^2*n3^2 + 15*d*n2^2*n3^2 + 
      2*n1*n2^2*n3^2 - 21*n2^3*n3^2 - 6*n2*n3^3 - 6*n2^2*n3^3 + 290*n2*n5 - 
      216*d*n2*n5 + 40*d^2*n2*n5 + 60*n1*n2*n5 - 24*d*n1*n2*n5 + 
      444*n2^2*n5 - 271*d*n2^2*n5 + 40*d^2*n2^2*n5 + 84*n1*n2^2*n5 - 
      24*d*n1*n2^2*n5 + 169*n2^3*n5 - 55*d*n2^3*n5 + 24*n1*n2^3*n5 + 
      15*n2^4*n5 + 100*n2*n3*n5 - 37*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 
      124*n2^2*n3*n5 - 37*d*n2^2*n3*n5 + 12*n1*n2^2*n3*n5 + 24*n2^3*n3*n5 + 
      9*n2*n3^2*n5 + 9*n2^2*n3^2*n5 + 30*n2*n5^2 - 12*d*n2*n5^2 + 
      42*n2^2*n5^2 - 12*d*n2^2*n5^2 + 12*n2^3*n5^2 + 6*n2*n3*n5^2 + 
      6*n2^2*n3*n5^2)*j[p4, -1 + n1, 2 + n2, n3, 1, 1 + n5, -1, 0, -1, 1, 1, 
      1, 1, 1, 1])/((-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((520*n2 - 518*d*n2 + 164*d^2*n2 - 16*d^3*n2 + 
      250*n1*n2 - 165*d*n1*n2 + 26*d^2*n1*n2 + 772*n2^2 - 652*d*n2^2 + 
      177*d^2*n2^2 - 16*d^3*n2^2 + 353*n1*n2^2 - 192*d*n1*n2^2 + 
      26*d^2*n1*n2^2 + 254*n2^3 - 125*d*n2^3 + 13*d^2*n2^3 + 104*n1*n2^3 - 
      27*d*n1*n2^3 - 4*n2^4 + 9*d*n2^4 + n1*n2^4 - 6*n2^5 + 130*n2*n3 - 
      55*d*n2*n3 + d^2*n2*n3 + 57*n1*n2*n3 - 16*d*n1*n2*n3 + 103*n2^2*n3 - 
      28*d*n2^2*n3 + d^2*n2^2*n3 + 60*n1*n2^2*n3 - 16*d*n1*n2^2*n3 - 
      48*n2^3*n3 + 27*d*n2^3*n3 + 3*n1*n2^3*n3 - 21*n2^4*n3 - 23*n2*n3^2 + 
      15*d*n2*n3^2 + 2*n1*n2*n3^2 - 44*n2^2*n3^2 + 15*d*n2^2*n3^2 + 
      2*n1*n2^2*n3^2 - 21*n2^3*n3^2 - 6*n2*n3^3 - 6*n2^2*n3^3 + 290*n2*n5 - 
      216*d*n2*n5 + 40*d^2*n2*n5 + 60*n1*n2*n5 - 24*d*n1*n2*n5 + 
      444*n2^2*n5 - 271*d*n2^2*n5 + 40*d^2*n2^2*n5 + 84*n1*n2^2*n5 - 
      24*d*n1*n2^2*n5 + 169*n2^3*n5 - 55*d*n2^3*n5 + 24*n1*n2^3*n5 + 
      15*n2^4*n5 + 100*n2*n3*n5 - 37*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 
      124*n2^2*n3*n5 - 37*d*n2^2*n3*n5 + 12*n1*n2^2*n3*n5 + 24*n2^3*n3*n5 + 
      9*n2*n3^2*n5 + 9*n2^2*n3^2*n5 + 30*n2*n5^2 - 12*d*n2*n5^2 + 
      42*n2^2*n5^2 - 12*d*n2^2*n5^2 + 12*n2^3*n5^2 + 6*n2*n3*n5^2 + 
      6*n2^2*n3*n5^2)*j[p4, -1 + n1, 2 + n2, n3, 1, 1 + n5, -1, 0, 0, 1, 1, 
      1, 0, 1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((-520*n2 + 518*d*n2 - 164*d^2*n2 + 16*d^3*n2 - 
      250*n1*n2 + 165*d*n1*n2 - 26*d^2*n1*n2 - 772*n2^2 + 652*d*n2^2 - 
      177*d^2*n2^2 + 16*d^3*n2^2 - 353*n1*n2^2 + 192*d*n1*n2^2 - 
      26*d^2*n1*n2^2 - 254*n2^3 + 125*d*n2^3 - 13*d^2*n2^3 - 104*n1*n2^3 + 
      27*d*n1*n2^3 + 4*n2^4 - 9*d*n2^4 - n1*n2^4 + 6*n2^5 - 130*n2*n3 + 
      55*d*n2*n3 - d^2*n2*n3 - 57*n1*n2*n3 + 16*d*n1*n2*n3 - 103*n2^2*n3 + 
      28*d*n2^2*n3 - d^2*n2^2*n3 - 60*n1*n2^2*n3 + 16*d*n1*n2^2*n3 + 
      48*n2^3*n3 - 27*d*n2^3*n3 - 3*n1*n2^3*n3 + 21*n2^4*n3 + 23*n2*n3^2 - 
      15*d*n2*n3^2 - 2*n1*n2*n3^2 + 44*n2^2*n3^2 - 15*d*n2^2*n3^2 - 
      2*n1*n2^2*n3^2 + 21*n2^3*n3^2 + 6*n2*n3^3 + 6*n2^2*n3^3 - 290*n2*n5 + 
      216*d*n2*n5 - 40*d^2*n2*n5 - 60*n1*n2*n5 + 24*d*n1*n2*n5 - 
      444*n2^2*n5 + 271*d*n2^2*n5 - 40*d^2*n2^2*n5 - 84*n1*n2^2*n5 + 
      24*d*n1*n2^2*n5 - 169*n2^3*n5 + 55*d*n2^3*n5 - 24*n1*n2^3*n5 - 
      15*n2^4*n5 - 100*n2*n3*n5 + 37*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 
      124*n2^2*n3*n5 + 37*d*n2^2*n3*n5 - 12*n1*n2^2*n3*n5 - 24*n2^3*n3*n5 - 
      9*n2*n3^2*n5 - 9*n2^2*n3^2*n5 - 30*n2*n5^2 + 12*d*n2*n5^2 - 
      42*n2^2*n5^2 + 12*d*n2^2*n5^2 - 12*n2^3*n5^2 - 6*n2*n3*n5^2 - 
      6*n2^2*n3*n5^2)*j[p4, -1 + n1, 2 + n2, n3, 1, 1 + n5, -1, 0, 0, 1, 1, 
      1, 1, 0, 1])/((-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((-490*n2 + 481*d*n2 - 149*d^2*n2 + 14*d^3*n2 - 
      240*n1*n2 + 156*d*n1*n2 - 24*d^2*n1*n2 - 721*n2^2 + 599*d*n2^2 - 
      159*d^2*n2^2 + 14*d^3*n2^2 - 336*n1*n2^2 + 180*d*n1*n2^2 - 
      24*d^2*n1*n2^2 - 230*n2^3 + 108*d*n2^3 - 10*d^2*n2^3 - 96*n1*n2^3 + 
      24*d*n1*n2^3 + 7*n2^4 - 10*d*n2^4 + 6*n2^5 - 103*n2*n3 + 34*d*n2*n3 + 
      3*d^2*n2*n3 - 48*n1*n2*n3 + 12*d*n1*n2*n3 - 67*n2^2*n3 + 4*d*n2^2*n3 + 
      3*d^2*n2^2*n3 - 48*n1*n2^2*n3 + 12*d*n1*n2^2*n3 + 57*n2^3*n3 - 
      30*d*n2^3*n3 + 21*n2^4*n3 + 29*n2*n3^2 - 17*d*n2*n3^2 + 50*n2^2*n3^2 - 
      17*d*n2^2*n3^2 + 21*n2^3*n3^2 + 6*n2*n3^3 + 6*n2^2*n3^3 - 280*n2*n5 + 
      207*d*n2*n5 - 38*d^2*n2*n5 - 60*n1*n2*n5 + 24*d*n1*n2*n5 - 
      427*n2^2*n5 + 259*d*n2^2*n5 - 38*d^2*n2^2*n5 - 84*n1*n2^2*n5 + 
      24*d*n1*n2^2*n5 - 161*n2^3*n5 + 52*d*n2^3*n5 - 24*n1*n2^3*n5 - 
      14*n2^4*n5 - 91*n2*n3*n5 + 33*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 
      112*n2^2*n3*n5 + 33*d*n2^2*n3*n5 - 12*n1*n2^2*n3*n5 - 21*n2^3*n3*n5 - 
      7*n2*n3^2*n5 - 7*n2^2*n3^2*n5 - 30*n2*n5^2 + 12*d*n2*n5^2 - 
      42*n2^2*n5^2 + 12*d*n2^2*n5^2 - 12*n2^3*n5^2 - 6*n2*n3*n5^2 - 
      6*n2^2*n3*n5^2)*j[p4, -1 + n1, 2 + n2, n3, 1, 1 + n5, 0, -2, 0, 1, 1, 
      1, 1, 1, 1])/((-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((-5*n2 + 2*d*n2 - 6*n2^2 + 2*d*n2^2 - n2^3 - 
      2*n2*n3 - 2*n2^2*n3)*j[p4, -1 + n1, 2 + n2, n3, 1, 1 + n5, 0, -1, -1, 
      1, 1, 1, 1, 1, 1])/((-1 + n1)*(n2 - n3)*(-4 + d - n5)) + 
   ((460*n2 - 444*d*n2 + 134*d^2*n2 - 12*d^3*n2 + 230*n1*n2 - 147*d*n1*n2 + 
      22*d^2*n1*n2 + 670*n2^2 - 546*d*n2^2 + 141*d^2*n2^2 - 12*d^3*n2^2 + 
      319*n1*n2^2 - 168*d*n1*n2^2 + 22*d^2*n1*n2^2 + 206*n2^3 - 91*d*n2^3 + 
      7*d^2*n2^3 + 88*n1*n2^3 - 21*d*n1*n2^3 - 10*n2^4 + 11*d*n2^4 - 
      n1*n2^4 - 6*n2^5 + 76*n2*n3 - 13*d*n2*n3 - 7*d^2*n2*n3 + 39*n1*n2*n3 - 
      8*d*n1*n2*n3 + 31*n2^2*n3 + 20*d*n2^2*n3 - 7*d^2*n2^2*n3 + 
      36*n1*n2^2*n3 - 8*d*n1*n2^2*n3 - 66*n2^3*n3 + 33*d*n2^3*n3 - 
      3*n1*n2^3*n3 - 21*n2^4*n3 - 35*n2*n3^2 + 19*d*n2*n3^2 - 2*n1*n2*n3^2 - 
      56*n2^2*n3^2 + 19*d*n2^2*n3^2 - 2*n1*n2^2*n3^2 - 21*n2^3*n3^2 - 
      6*n2*n3^3 - 6*n2^2*n3^3 + 270*n2*n5 - 198*d*n2*n5 + 36*d^2*n2*n5 + 
      60*n1*n2*n5 - 24*d*n1*n2*n5 + 410*n2^2*n5 - 247*d*n2^2*n5 + 
      36*d^2*n2^2*n5 + 84*n1*n2^2*n5 - 24*d*n1*n2^2*n5 + 153*n2^3*n5 - 
      49*d*n2^3*n5 + 24*n1*n2^3*n5 + 13*n2^4*n5 + 82*n2*n3*n5 - 
      29*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 100*n2^2*n3*n5 - 29*d*n2^2*n3*n5 + 
      12*n1*n2^2*n3*n5 + 18*n2^3*n3*n5 + 5*n2*n3^2*n5 + 5*n2^2*n3^2*n5 + 
      30*n2*n5^2 - 12*d*n2*n5^2 + 42*n2^2*n5^2 - 12*d*n2^2*n5^2 + 
      12*n2^3*n5^2 + 6*n2*n3*n5^2 + 6*n2^2*n3*n5^2)*
     j[p4, -1 + n1, 2 + n2, n3, 1, 1 + n5, 0, -1, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((-460*n2 + 444*d*n2 - 134*d^2*n2 + 12*d^3*n2 - 
      230*n1*n2 + 147*d*n1*n2 - 22*d^2*n1*n2 - 670*n2^2 + 546*d*n2^2 - 
      141*d^2*n2^2 + 12*d^3*n2^2 - 319*n1*n2^2 + 168*d*n1*n2^2 - 
      22*d^2*n1*n2^2 - 206*n2^3 + 91*d*n2^3 - 7*d^2*n2^3 - 88*n1*n2^3 + 
      21*d*n1*n2^3 + 10*n2^4 - 11*d*n2^4 + n1*n2^4 + 6*n2^5 - 76*n2*n3 + 
      13*d*n2*n3 + 7*d^2*n2*n3 - 39*n1*n2*n3 + 8*d*n1*n2*n3 - 31*n2^2*n3 - 
      20*d*n2^2*n3 + 7*d^2*n2^2*n3 - 36*n1*n2^2*n3 + 8*d*n1*n2^2*n3 + 
      66*n2^3*n3 - 33*d*n2^3*n3 + 3*n1*n2^3*n3 + 21*n2^4*n3 + 35*n2*n3^2 - 
      19*d*n2*n3^2 + 2*n1*n2*n3^2 + 56*n2^2*n3^2 - 19*d*n2^2*n3^2 + 
      2*n1*n2^2*n3^2 + 21*n2^3*n3^2 + 6*n2*n3^3 + 6*n2^2*n3^3 - 270*n2*n5 + 
      198*d*n2*n5 - 36*d^2*n2*n5 - 60*n1*n2*n5 + 24*d*n1*n2*n5 - 
      410*n2^2*n5 + 247*d*n2^2*n5 - 36*d^2*n2^2*n5 - 84*n1*n2^2*n5 + 
      24*d*n1*n2^2*n5 - 153*n2^3*n5 + 49*d*n2^3*n5 - 24*n1*n2^3*n5 - 
      13*n2^4*n5 - 82*n2*n3*n5 + 29*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 
      100*n2^2*n3*n5 + 29*d*n2^2*n3*n5 - 12*n1*n2^2*n3*n5 - 18*n2^3*n3*n5 - 
      5*n2*n3^2*n5 - 5*n2^2*n3^2*n5 - 30*n2*n5^2 + 12*d*n2*n5^2 - 
      42*n2^2*n5^2 + 12*d*n2^2*n5^2 - 12*n2^3*n5^2 - 6*n2*n3*n5^2 - 
      6*n2^2*n3*n5^2)*j[p4, -1 + n1, 2 + n2, n3, 1, 1 + n5, 0, -1, 0, 1, 1, 
      1, 1, 0, 1])/((-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((520*n2 - 518*d*n2 + 164*d^2*n2 - 16*d^3*n2 + 
      250*n1*n2 - 165*d*n1*n2 + 26*d^2*n1*n2 + 772*n2^2 - 652*d*n2^2 + 
      177*d^2*n2^2 - 16*d^3*n2^2 + 353*n1*n2^2 - 192*d*n1*n2^2 + 
      26*d^2*n1*n2^2 + 254*n2^3 - 125*d*n2^3 + 13*d^2*n2^3 + 104*n1*n2^3 - 
      27*d*n1*n2^3 - 4*n2^4 + 9*d*n2^4 + n1*n2^4 - 6*n2^5 + 130*n2*n3 - 
      55*d*n2*n3 + d^2*n2*n3 + 57*n1*n2*n3 - 16*d*n1*n2*n3 + 103*n2^2*n3 - 
      28*d*n2^2*n3 + d^2*n2^2*n3 + 60*n1*n2^2*n3 - 16*d*n1*n2^2*n3 - 
      48*n2^3*n3 + 27*d*n2^3*n3 + 3*n1*n2^3*n3 - 21*n2^4*n3 - 23*n2*n3^2 + 
      15*d*n2*n3^2 + 2*n1*n2*n3^2 - 44*n2^2*n3^2 + 15*d*n2^2*n3^2 + 
      2*n1*n2^2*n3^2 - 21*n2^3*n3^2 - 6*n2*n3^3 - 6*n2^2*n3^3 + 290*n2*n5 - 
      216*d*n2*n5 + 40*d^2*n2*n5 + 60*n1*n2*n5 - 24*d*n1*n2*n5 + 
      444*n2^2*n5 - 271*d*n2^2*n5 + 40*d^2*n2^2*n5 + 84*n1*n2^2*n5 - 
      24*d*n1*n2^2*n5 + 169*n2^3*n5 - 55*d*n2^3*n5 + 24*n1*n2^3*n5 + 
      15*n2^4*n5 + 100*n2*n3*n5 - 37*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 
      124*n2^2*n3*n5 - 37*d*n2^2*n3*n5 + 12*n1*n2^2*n3*n5 + 24*n2^3*n3*n5 + 
      9*n2*n3^2*n5 + 9*n2^2*n3^2*n5 + 30*n2*n5^2 - 12*d*n2*n5^2 + 
      42*n2^2*n5^2 - 12*d*n2^2*n5^2 + 12*n2^3*n5^2 + 6*n2*n3*n5^2 + 
      6*n2^2*n3*n5^2)*j[p4, -1 + n1, 2 + n2, n3, 1, 1 + n5, 0, 0, -2, 1, 1, 
      1, 1, 1, 1])/((-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((-520*n2 + 518*d*n2 - 164*d^2*n2 + 16*d^3*n2 - 
      250*n1*n2 + 165*d*n1*n2 - 26*d^2*n1*n2 - 772*n2^2 + 652*d*n2^2 - 
      177*d^2*n2^2 + 16*d^3*n2^2 - 353*n1*n2^2 + 192*d*n1*n2^2 - 
      26*d^2*n1*n2^2 - 254*n2^3 + 125*d*n2^3 - 13*d^2*n2^3 - 104*n1*n2^3 + 
      27*d*n1*n2^3 + 4*n2^4 - 9*d*n2^4 - n1*n2^4 + 6*n2^5 - 130*n2*n3 + 
      55*d*n2*n3 - d^2*n2*n3 - 57*n1*n2*n3 + 16*d*n1*n2*n3 - 103*n2^2*n3 + 
      28*d*n2^2*n3 - d^2*n2^2*n3 - 60*n1*n2^2*n3 + 16*d*n1*n2^2*n3 + 
      48*n2^3*n3 - 27*d*n2^3*n3 - 3*n1*n2^3*n3 + 21*n2^4*n3 + 23*n2*n3^2 - 
      15*d*n2*n3^2 - 2*n1*n2*n3^2 + 44*n2^2*n3^2 - 15*d*n2^2*n3^2 - 
      2*n1*n2^2*n3^2 + 21*n2^3*n3^2 + 6*n2*n3^3 + 6*n2^2*n3^3 - 290*n2*n5 + 
      216*d*n2*n5 - 40*d^2*n2*n5 - 60*n1*n2*n5 + 24*d*n1*n2*n5 - 
      444*n2^2*n5 + 271*d*n2^2*n5 - 40*d^2*n2^2*n5 - 84*n1*n2^2*n5 + 
      24*d*n1*n2^2*n5 - 169*n2^3*n5 + 55*d*n2^3*n5 - 24*n1*n2^3*n5 - 
      15*n2^4*n5 - 100*n2*n3*n5 + 37*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 
      124*n2^2*n3*n5 + 37*d*n2^2*n3*n5 - 12*n1*n2^2*n3*n5 - 24*n2^3*n3*n5 - 
      9*n2*n3^2*n5 - 9*n2^2*n3^2*n5 - 30*n2*n5^2 + 12*d*n2*n5^2 - 
      42*n2^2*n5^2 + 12*d*n2^2*n5^2 - 12*n2^3*n5^2 - 6*n2*n3*n5^2 - 
      6*n2^2*n3*n5^2)*j[p4, -1 + n1, 2 + n2, n3, 1, 1 + n5, 0, 0, -1, 1, 1, 
      1, 0, 1, 1])/(2*(-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((520*n2 - 518*d*n2 + 164*d^2*n2 - 16*d^3*n2 + 
      250*n1*n2 - 165*d*n1*n2 + 26*d^2*n1*n2 + 772*n2^2 - 652*d*n2^2 + 
      177*d^2*n2^2 - 16*d^3*n2^2 + 353*n1*n2^2 - 192*d*n1*n2^2 + 
      26*d^2*n1*n2^2 + 254*n2^3 - 125*d*n2^3 + 13*d^2*n2^3 + 104*n1*n2^3 - 
      27*d*n1*n2^3 - 4*n2^4 + 9*d*n2^4 + n1*n2^4 - 6*n2^5 + 130*n2*n3 - 
      55*d*n2*n3 + d^2*n2*n3 + 57*n1*n2*n3 - 16*d*n1*n2*n3 + 103*n2^2*n3 - 
      28*d*n2^2*n3 + d^2*n2^2*n3 + 60*n1*n2^2*n3 - 16*d*n1*n2^2*n3 - 
      48*n2^3*n3 + 27*d*n2^3*n3 + 3*n1*n2^3*n3 - 21*n2^4*n3 - 23*n2*n3^2 + 
      15*d*n2*n3^2 + 2*n1*n2*n3^2 - 44*n2^2*n3^2 + 15*d*n2^2*n3^2 + 
      2*n1*n2^2*n3^2 - 21*n2^3*n3^2 - 6*n2*n3^3 - 6*n2^2*n3^3 + 290*n2*n5 - 
      216*d*n2*n5 + 40*d^2*n2*n5 + 60*n1*n2*n5 - 24*d*n1*n2*n5 + 
      444*n2^2*n5 - 271*d*n2^2*n5 + 40*d^2*n2^2*n5 + 84*n1*n2^2*n5 - 
      24*d*n1*n2^2*n5 + 169*n2^3*n5 - 55*d*n2^3*n5 + 24*n1*n2^3*n5 + 
      15*n2^4*n5 + 100*n2*n3*n5 - 37*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 
      124*n2^2*n3*n5 - 37*d*n2^2*n3*n5 + 12*n1*n2^2*n3*n5 + 24*n2^3*n3*n5 + 
      9*n2*n3^2*n5 + 9*n2^2*n3^2*n5 + 30*n2*n5^2 - 12*d*n2*n5^2 + 
      42*n2^2*n5^2 - 12*d*n2^2*n5^2 + 12*n2^3*n5^2 + 6*n2*n3*n5^2 + 
      6*n2^2*n3*n5^2)*j[p4, -1 + n1, 2 + n2, n3, 1, 1 + n5, 0, 0, -1, 1, 1, 
      1, 1, 0, 1])/((-1 + n1)*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (3 - d + n1 + n5)) + ((10 - 4*d + 5*n1 - 2*d*n1 - 4*n2 + 3*d*n2 + 
      n1*n2 - 2*n2^2 - 5*n3 + 3*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 10*n5 - 
      4*d*n5 + 3*n2*n5 + 3*n3*n5)*j[p4, n1, -1 + n2, n3, 1, 1 + n5, 0, 0, 0, 
      0, 1, 1, 1, 1, 2])/(2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((50 - 30*d + 4*d^2 + 5*n1 - 2*d*n1 + 12*n2 - d*n2 + n1*n2 - 2*n2^2 + 
      3*n3 + d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 20*n5 - 8*d*n5 + 7*n2*n5 + 
      5*n3*n5)*j[p4, n1, -1 + n2, n3, 1, 1 + n5, 0, 0, 0, 0, 2, 1, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-50 + 30*d - 4*d^2 - 5*n1 + 2*d*n1 - 12*n2 + d*n2 - n1*n2 + 2*n2^2 - 
      3*n3 - d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 20*n5 + 8*d*n5 - 7*n2*n5 - 
      5*n3*n5)*j[p4, n1, -1 + n2, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 0, 2, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-35 + 19*d - 2*d^2 - 9*n2 + 2*n2^2 + 3*n3 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      15*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, n1, -1 + n2, n3, 1, 1 + n5, 
      0, 0, 0, 1, 1, 1, 1, 0, 2])/((n2 - n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((80 - 102*d + 43*d^2 - 6*d^3 + 10*n1 - 9*d*n1 + 
      2*d^2*n1 + 76*n2 - 63*d*n2 + 13*d^2*n2 + 7*n1*n2 - 3*d*n1*n2 + 
      22*n2^2 - 9*d*n2^2 + n1*n2^2 + 2*n2^3 + 82*n3 - 68*d*n3 + 14*d^2*n3 + 
      9*n1*n3 - 4*d*n1*n3 + 49*n2*n3 - 20*d*n2*n3 + 3*n1*n2*n3 + 7*n2^2*n3 + 
      25*n3^2 - 10*d*n3^2 + 2*n1*n3^2 + 7*n2*n3^2 + 2*n3^3 + 10*n5 - 9*d*n5 + 
      2*d^2*n5 + 7*n2*n5 - 3*d*n2*n5 + n2^2*n5 + 9*n3*n5 - 4*d*n3*n5 + 
      3*n2*n3*n5 + 2*n3^2*n5)*j[p4, n1, -1 + n2, n3, 1, 1 + n5, 0, 0, 0, 1, 
      1, 1, 1, 1, 1])/((n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-50 + 30*d - 4*d^2 - 5*n1 + 2*d*n1 - 12*n2 + d*n2 - n1*n2 + 2*n2^2 - 
      3*n3 - d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 20*n5 + 8*d*n5 - 7*n2*n5 - 
      5*n3*n5)*j[p4, n1, -1 + n2, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 2, 0, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((60 - 144*d + 78*d^2 - 12*d^3 - 210*n1 + 129*d*n1 - 18*d^2*n1 + 226*n2 - 
      186*d*n2 + 35*d^2*n2 - 75*n1*n2 + 15*d*n1*n2 + 84*n2^2 - 25*d*n2^2 + 
      3*n1*n2^2 + 2*n2^3 + 260*n3 - 201*d*n3 + 37*d^2*n3 - 21*n1*n3 + 
      151*n2*n3 - 47*d*n2*n3 + 9*n1*n2*n3 + 7*n2^2*n3 + 65*n3^2 - 21*d*n3^2 + 
      6*n1*n3^2 + 7*n2*n3^2 + 2*n3^3 - 110*n5 + 54*d*n5 - 4*d^2*n5 - 
      60*n1*n5 + 24*d*n1*n5 - 13*d*n2*n5 - 24*n1*n2*n5 + 17*n2^2*n5 + 
      34*n3*n5 - 21*d*n3*n5 - 12*n1*n3*n5 + 30*n2*n3*n5 + 13*n3^2*n5 - 
      30*n5^2 + 12*d*n5^2 - 12*n2*n5^2 - 6*n3*n5^2)*
     j[p4, n1, -1 + n2, n3, 1, 1 + n5, 0, 0, 0, 1, 2, 0, 1, 1, 1])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((10 - 4*d + 5*n1 - 2*d*n1 - 4*n2 + 3*d*n2 + n1*n2 - 2*n2^2 - 5*n3 + 
      3*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 10*n5 - 4*d*n5 + 3*n2*n5 + 
      3*n3*n5)*j[p4, n1, -1 + n2, n3, 1, 1 + n5, 0, 0, 0, 2, 1, 1, 1, 1, 0])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((10 - 4*d + 5*n1 - 2*d*n1 - 4*n2 + 3*d*n2 + n1*n2 - 2*n2^2 - 5*n3 + 
      3*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 20*n5 - 8*d*n5 + 5*n1*n5 - 
      2*d*n1*n5 - n2*n5 + 3*d*n2*n5 + n1*n2*n5 - 2*n2^2*n5 - 2*n3*n5 + 
      3*d*n3*n5 + 2*n1*n3*n5 - 5*n2*n3*n5 - 2*n3^2*n5 + 10*n5^2 - 4*d*n5^2 + 
      3*n2*n5^2 + 3*n3*n5^2)*j[p4, n1, -1 + n2, n3, 1, 2 + n5, 0, 0, 0, 0, 1, 
      1, 1, 1, 1])/(2*(n2 - n3)*(4 - d + n5)*(3 - d + n1 + n5)) + 
   ((110 - 74*d + 12*d^2 - 5*n1 + 2*d*n1 + 52*n2 - 15*d*n2 - n1*n2 + 2*n2^2 + 
      29*n3 - 9*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 + 130*n5 - 82*d*n5 + 
      12*d^2*n5 - 5*n1*n5 + 2*d*n1*n5 + 61*n2*n5 - 15*d*n2*n5 - n1*n2*n5 + 
      2*n2^2*n5 + 32*n3*n5 - 9*d*n3*n5 - 2*n1*n3*n5 + 5*n2*n3*n5 + 
      2*n3^2*n5 + 20*n5^2 - 8*d*n5^2 + 9*n2*n5^2 + 3*n3*n5^2)*
     j[p4, n1, -1 + n2, n3, 1, 2 + n5, 0, 0, 0, 1, 1, 1, 1, 0, 1])/
    (2*(n2 - n3)*(4 - d + n5)*(3 - d + n1 + n5)) + 
   ((-110 + 74*d - 12*d^2 + 5*n1 - 2*d*n1 - 52*n2 + 15*d*n2 + n1*n2 - 
      2*n2^2 - 29*n3 + 9*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 - 130*n5 + 
      82*d*n5 - 12*d^2*n5 + 5*n1*n5 - 2*d*n1*n5 - 61*n2*n5 + 15*d*n2*n5 + 
      n1*n2*n5 - 2*n2^2*n5 - 32*n3*n5 + 9*d*n3*n5 + 2*n1*n3*n5 - 5*n2*n3*n5 - 
      2*n3^2*n5 - 20*n5^2 + 8*d*n5^2 - 9*n2*n5^2 - 3*n3*n5^2)*
     j[p4, n1, -1 + n2, n3, 1, 2 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 0])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((10 - 4*d + 5*n1 - 2*d*n1 - 4*n2 + 3*d*n2 + n1*n2 - 2*n2^2 - 5*n3 + 
      3*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 20*n5 - 8*d*n5 + 5*n1*n5 - 
      2*d*n1*n5 - n2*n5 + 3*d*n2*n5 + n1*n2*n5 - 2*n2^2*n5 - 2*n3*n5 + 
      3*d*n3*n5 + 2*n1*n3*n5 - 5*n2*n3*n5 - 2*n3^2*n5 + 10*n5^2 - 4*d*n5^2 + 
      3*n2*n5^2 + 3*n3*n5^2)*j[p4, n1, -1 + n2, n3, 1, 2 + n5, 0, 0, 0, 1, 1, 
      1, 1, 1, 1])/(2*(n2 - n3)*(4 - d + n5)*(3 - d + n1 + n5)) + 
   ((20 - 8*d + 8*n2 + 4*n3)*j[p4, n1, -1 + n2, n3, 2, 1 + n5, 0, 0, 0, 1, 1, 
      1, 1, 1, 0])/((n2 - n3)*(-3 + d - n1 - n5)) + 
   ((50*n3 - 30*d*n3 + 4*d^2*n3 + 5*n1*n3 - 2*d*n1*n3 + 12*n2*n3 - d*n2*n3 + 
      n1*n2*n3 - 2*n2^2*n3 + 3*n3^2 + d*n3^2 + 2*n1*n3^2 - 5*n2*n3^2 - 
      2*n3^3 + 20*n3*n5 - 8*d*n3*n5 + 7*n2*n3*n5 + 5*n3^2*n5)*
     j[p4, n1, -1 + n2, 1 + n3, 0, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    (2*(-n2 + n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-10*n3 + 4*d*n3 - 5*n1*n3 + 2*d*n1*n3 + 4*n2*n3 - 3*d*n2*n3 - n1*n2*n3 + 
      2*n2^2*n3 + 5*n3^2 - 3*d*n3^2 - 2*n1*n3^2 + 5*n2*n3^2 + 2*n3^3 - 
      10*n3*n5 + 4*d*n3*n5 - 3*n2*n3*n5 - 3*n3^2*n5)*
     j[p4, n1, -1 + n2, 1 + n3, 1, 1 + n5, 0, 0, 0, 1, 0, 1, 1, 1, 1])/
    (2*(-n2 + n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((10*n3 - 4*d*n3 + 5*n1*n3 - 2*d*n1*n3 - 4*n2*n3 + 3*d*n2*n3 + n1*n2*n3 - 
      2*n2^2*n3 - 5*n3^2 + 3*d*n3^2 + 2*n1*n3^2 - 5*n2*n3^2 - 2*n3^3 + 
      10*n3*n5 - 4*d*n3*n5 + 3*n2*n3*n5 + 3*n3^2*n5)*
     j[p4, n1, -1 + n2, 1 + n3, 1, 1 + n5, 0, 0, 0, 1, 1, 0, 1, 1, 1])/
    (2*(-n2 + n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-10*n3 + 4*d*n3 - 5*n1*n3 + 2*d*n1*n3 + 4*n2*n3 - 3*d*n2*n3 - n1*n2*n3 + 
      2*n2^2*n3 + 5*n3^2 - 3*d*n3^2 - 2*n1*n3^2 + 5*n2*n3^2 + 2*n3^3 - 
      10*n3*n5 + 4*d*n3*n5 - 3*n2*n3*n5 - 3*n3^2*n5)*
     j[p4, n1, -1 + n2, 1 + n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-n2 + n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-180*n3 + 167*d*n3 - 48*d^2*n3 + 4*d^3*n3 - 110*n1*n3 + 69*d*n1*n3 - 
      10*d^2*n1*n3 - 68*n2*n3 + 29*d*n2*n3 - d^2*n2*n3 - 41*n1*n2*n3 + 
      9*d*n1*n2*n3 + 6*n2^2*n3 - 5*d*n2^2*n3 + n1*n2^2*n3 + 2*n2^3*n3 - 
      10*n3^2 - 9*d*n3^2 + 5*d^2*n3^2 - 15*n1*n3^2 + 2*d*n1*n3^2 + 
      25*n2*n3^2 - 14*d*n2*n3^2 + 3*n1*n2*n3^2 + 7*n2^2*n3^2 + 17*n3^3 - 
      8*d*n3^3 + 2*n1*n3^3 + 7*n2*n3^3 + 2*n3^4 - 115*n3*n5 + 81*d*n3*n5 - 
      14*d^2*n3*n5 - 30*n1*n3*n5 + 12*d*n1*n3*n5 - 53*n2*n3*n5 + 
      17*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 3*n2^2*n3*n5 - 26*n3^2*n5 + 
      8*d*n3^2*n5 - 6*n1*n3^2*n5 - 3*n2*n3^2*n5 - 15*n3*n5^2 + 6*d*n3*n5^2 - 
      6*n2*n3*n5^2 - 3*n3^2*n5^2)*j[p4, n1, -1 + n2, 1 + n3, 1, 1 + n5, 0, 0, 
      0, 1, 1, 1, 1, 0, 1])/((-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((-50*n3 + 30*d*n3 - 4*d^2*n3 - 5*n1*n3 + 
      2*d*n1*n3 - 12*n2*n3 + d*n2*n3 - n1*n2*n3 + 2*n2^2*n3 - 3*n3^2 - 
      d*n3^2 - 2*n1*n3^2 + 5*n2*n3^2 + 2*n3^3 - 20*n3*n5 + 8*d*n3*n5 - 
      7*n2*n3*n5 - 5*n3^2*n5)*j[p4, n1, -1 + n2, 1 + n3, 1, 1 + n5, 0, 0, 0, 
      1, 1, 1, 1, 1, 0])/(2*(-n2 + n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((10 - 4*d + 5*n1 - 2*d*n1 - 4*n2 + 3*d*n2 + n1*n2 - 2*n2^2 - 5*n3 + 
      3*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 10*n5 - 4*d*n5 + 3*n2*n5 + 
      3*n3*n5)*j[p4, n1, n2, -1 + n3, 1, 1 + n5, 0, 0, 0, 0, 2, 1, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((90 - 111*d + 45*d^2 - 6*d^3 + 91*n2 - 72*d*n2 + 14*d^2*n2 + 27*n2^2 - 
      10*d*n2^2 + 2*n2^3 + 83*n3 - 66*d*n3 + 13*d^2*n3 + 52*n2*n3 - 
      20*d*n2*n3 + 7*n2^2*n3 + 23*n3^2 - 9*d*n3^2 + 7*n2*n3^2 + 2*n3^3 + 
      10*n5 - 9*d*n5 + 2*d^2*n5 + 9*n2*n5 - 4*d*n2*n5 + 2*n2^2*n5 + 7*n3*n5 - 
      3*d*n3*n5 + 3*n2*n3*n5 + n3^2*n5)*j[p4, n1, n2, -1 + n3, 1, 1 + n5, 0, 
      0, 0, 1, 1, 1, 1, 1, 1])/((n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-240 + 206*d - 54*d^2 + 4*d^3 - 230*n1 + 147*d*n1 - 22*d^2*n1 - 32*n2 - 
      4*d*n2 + 5*d^2*n2 - 89*n1*n2 + 21*d*n1*n2 + 30*n2^2 - 11*d*n2^2 + 
      n1*n2^2 + 2*n2^3 + 38*n3 - 45*d*n3 + 11*d^2*n3 - 39*n1*n3 + 8*d*n1*n3 + 
      61*n2*n3 - 23*d*n2*n3 + 3*n1*n2*n3 + 7*n2^2*n3 + 29*n3^2 - 11*d*n3^2 + 
      2*n1*n3^2 + 7*n2*n3^2 + 2*n3^3 - 190*n5 + 126*d*n5 - 20*d^2*n5 - 
      60*n1*n5 + 24*d*n1*n5 - 68*n2*n5 + 17*d*n2*n5 - 24*n1*n2*n5 + 
      3*n2^2*n5 - 26*n3*n5 + 5*d*n3*n5 - 12*n1*n3*n5 + 6*n2*n3*n5 + 
      3*n3^2*n5 - 30*n5^2 + 12*d*n5^2 - 12*n2*n5^2 - 6*n3*n5^2)*
     j[p4, n1, n2, -1 + n3, 1, 1 + n5, 0, 0, 0, 1, 2, 0, 1, 1, 1])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((15 - 6*d + 6*n2 + 3*n3 + 15*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*
     j[p4, n1, n2, -1 + n3, 1, 2 + n5, 0, 0, 0, 0, 1, 1, 1, 1, 1])/
    ((n2 - n3)*(-3 + d - n1 - n5)) + 
   ((20 - 8*d + 8*n2 + 4*n3)*j[p4, n1, n2, -1 + n3, 2, 1 + n5, 0, 0, 0, 0, 1, 
      1, 1, 1, 1])/((n2 - n3)*(-3 + d - n1 - n5)) + 
   ((-20 + 8*d - 8*n2 - 4*n3)*j[p4, n1, n2, -1 + n3, 2, 1 + n5, 0, 0, 0, 1, 
      0, 1, 1, 1, 1])/((n2 - n3)*(-3 + d - n1 - n5)) + 
   ((20 - 8*d + 8*n2 + 4*n3)*j[p4, n1, n2, -1 + n3, 2, 1 + n5, 0, 0, 0, 1, 1, 
      0, 1, 1, 1])/((n2 - n3)*(-3 + d - n1 - n5)) + 
   ((-35 + 19*d - 2*d^2 - 9*n2 + 2*n2^2 + 3*n3 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      15*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, n1, n2, n3, 0, n5, 0, 0, 0, 
      1, 1, 1, 1, 1, 2])/((n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-35 + 19*d - 2*d^2 - 9*n2 + 2*n2^2 + 3*n3 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      15*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, n1, n2, n3, 0, n5, 0, 0, 0, 
      2, 1, 1, 1, 1, 1])/((n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-140 + 86*d - 12*d^2 - 10*n1 + 4*d*n1 - 40*n2 + 6*d*n2 - 2*n1*n2 + 
      4*n2^2 - 24*n3 + 4*d*n3 - 9*n1*n3 + 2*d*n1*n3 + 14*n2*n3 - 3*d*n2*n3 - 
      n1*n2*n3 + 2*n2^2*n3 + 9*n3^2 - 3*d*n3^2 - 2*n1*n3^2 + 5*n2*n3^2 + 
      2*n3^3 - 260*n5 + 144*d*n5 - 16*d^2*n5 - 10*n1*n5 + 4*d*n1*n5 - 
      76*n2*n5 + 6*d*n2*n5 - 2*n1*n2*n5 + 8*n2^2*n5 - 30*n3*n5 - 2*d*n3*n5 - 
      4*n1*n3*n5 + 17*n2*n3*n5 + 5*n3^2*n5 - 80*n5^2 + 32*d*n5^2 - 
      30*n2*n5^2 - 18*n3*n5^2)*j[p4, n1, n2, n3, 0, 1 + n5, 0, 0, 0, 1, 1, 1, 
      1, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((10 - 4*d + 5*n1 - 2*d*n1 - 4*n2 + 3*d*n2 + n1*n2 - 2*n2^2 - 5*n3 + 
      3*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 10*n5 - 4*d*n5 + 3*n2*n5 + 
      3*n3*n5)*j[p4, n1, n2, n3, 0, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 2])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-50 + 30*d - 4*d^2 - 5*n1 + 2*d*n1 - 12*n2 + d*n2 - n1*n2 + 2*n2^2 - 
      3*n3 - d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 20*n5 + 8*d*n5 - 7*n2*n5 - 
      5*n3*n5)*j[p4, n1, n2, n3, 0, 1 + n5, 0, 0, 0, 1, 1, 1, 2, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-50 + 30*d - 4*d^2 - 5*n1 + 2*d*n1 - 12*n2 + d*n2 - n1*n2 + 2*n2^2 - 
      3*n3 - d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 20*n5 + 8*d*n5 - 7*n2*n5 - 
      5*n3*n5)*j[p4, n1, n2, n3, 0, 1 + n5, 0, 0, 0, 1, 1, 2, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((10 - 4*d + 5*n1 - 2*d*n1 - 4*n2 + 3*d*n2 + n1*n2 - 2*n2^2 - 5*n3 + 
      3*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 10*n5 - 4*d*n5 + 3*n2*n5 + 
      3*n3*n5)*j[p4, n1, n2, n3, 0, 1 + n5, 0, 0, 0, 2, 1, 1, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((130 - 82*d + 12*d^2 + 5*n1 - 2*d*n1 + 44*n2 - 9*d*n2 + n1*n2 - 2*n2^2 + 
      19*n3 - 3*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 170*n5 - 98*d*n5 + 
      12*d^2*n5 + 5*n1*n5 - 2*d*n1*n5 + 59*n2*n5 - 9*d*n2*n5 + n1*n2*n5 - 
      2*n2^2*n5 + 28*n3*n5 - 3*d*n3*n5 + 2*n1*n3*n5 - 5*n2*n3*n5 - 
      2*n3^2*n5 + 40*n5^2 - 16*d*n5^2 + 15*n2*n5^2 + 9*n3*n5^2)*
     j[p4, n1, n2, n3, 0, 2 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    (2*(n2 - n3)*(4 - d + n5)*(3 - d + n1 + n5)) + 
   ((-15 + 6*d - n2 - 2*d*n2 + 2*n2^2 + 7*n3 - 4*d*n3 + 5*n2*n3 + 2*n3^2 - 
      10*n5 + 4*d*n5 - 4*n2*n5 - 2*n3*n5)*j[p4, n1, n2, n3, 1, n5, 0, 0, 0, 
      0, 1, 1, 1, 1, 2])/((n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((35 - 19*d + 2*d^2 - 35*n1 + 19*d*n1 - 2*d^2*n1 + 9*n2 - 9*n1*n2 - 
      2*n2^2 + 2*n1*n2^2 - 3*n3 + 3*d*n3 + 3*n1*n3 - 3*d*n1*n3 - 5*n2*n3 + 
      5*n1*n2*n3 - 2*n3^2 + 2*n1*n3^2 + 15*n5 - 6*d*n5 - 15*n1*n5 + 
      6*d*n1*n5 + 6*n2*n5 - 6*n1*n2*n5 + 3*n3*n5 - 3*n1*n3*n5)*
     j[p4, n1, n2, n3, 1, n5, 0, 0, 0, 1, 1, 0, 1, 1, 1])/
    ((n2 - n3)*(-4 + d - n5)*(3 - d + n1 + n5)) + 
   ((50 - 30*d + 4*d^2 + 5*n1 - 2*d*n1 + 12*n2 - d*n2 + n1*n2 - 2*n2^2 + 
      3*n3 + d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 20*n5 - 8*d*n5 + 7*n2*n5 + 
      5*n3*n5)*j[p4, n1, n2, n3, 1, n5, 0, 0, 0, 1, 1, 0, 2, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-35 + 19*d - 2*d^2 - 9*n2 + 2*n2^2 + 3*n3 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      15*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, n1, n2, n3, 1, n5, 0, 0, 0, 
      1, 1, 1, 0, 1, 2])/((n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((70 - 43*d + 6*d^2 + 5*n1 - 2*d*n1 + 20*n2 - 3*d*n2 + n1*n2 - 2*n2^2 + 
      7*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 25*n5 - 10*d*n5 + 9*n2*n5 + 
      6*n3*n5)*j[p4, n1, n2, n3, 1, n5, 0, 0, 0, 1, 1, 1, 0, 2, 1])/
    ((n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((35 - 19*d + 2*d^2 - 35*n1 + 19*d*n1 - 2*d^2*n1 + 9*n2 - 9*n1*n2 - 
      2*n2^2 + 2*n1*n2^2 - 3*n3 + 3*d*n3 + 3*n1*n3 - 3*d*n1*n3 - 5*n2*n3 + 
      5*n1*n2*n3 - 2*n3^2 + 2*n1*n3^2 + 15*n5 - 6*d*n5 - 15*n1*n5 + 
      6*d*n1*n5 + 6*n2*n5 - 6*n1*n2*n5 + 3*n3*n5 - 3*n1*n3*n5)*
     j[p4, n1, n2, n3, 1, n5, 0, 0, 0, 1, 1, 1, 1, 0, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(3 - d + n1 + n5)) + 
   ((35 - 19*d + 2*d^2 + 9*n2 - 2*n2^2 - 3*n3 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 
      15*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, n1, n2, n3, 1, n5, 0, 0, 0, 
      1, 1, 1, 1, 0, 2])/((n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((50 - 30*d + 4*d^2 + 5*n1 - 2*d*n1 + 12*n2 - d*n2 + n1*n2 - 2*n2^2 + 
      3*n3 + d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 20*n5 - 8*d*n5 + 7*n2*n5 + 
      5*n3*n5)*j[p4, n1, n2, n3, 1, n5, 0, 0, 0, 1, 1, 2, 0, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-35 + 19*d - 2*d^2 - 9*n2 + 2*n2^2 + 3*n3 - 3*d*n3 + 5*n2*n3 + 2*n3^2 - 
      15*n5 + 6*d*n5 - 6*n2*n5 - 3*n3*n5)*j[p4, n1, n2, n3, 1, n5, 0, 0, 0, 
      2, 1, 0, 1, 1, 1])/((n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-15 + 6*d - n2 - 2*d*n2 + 2*n2^2 + 7*n3 - 4*d*n3 + 5*n2*n3 + 2*n3^2 - 
      10*n5 + 4*d*n5 - 4*n2*n5 - 2*n3*n5)*j[p4, n1, n2, n3, 1, n5, 0, 0, 0, 
      2, 1, 1, 1, 1, 0])/((n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-10 + 4*d - 5*n1 + 2*d*n1 + 4*n2 - 3*d*n2 - n1*n2 + 2*n2^2 + 5*n3 - 
      3*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 10*n5 + 4*d*n5 - 3*n2*n5 - 
      3*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, -1, 0, 0, 0, 1, 1, 1, 1, 2])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((50 - 30*d + 4*d^2 + 5*n1 - 2*d*n1 + 12*n2 - d*n2 + n1*n2 - 2*n2^2 + 
      3*n3 + d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 20*n5 - 8*d*n5 + 7*n2*n5 + 
      5*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, -1, 0, 0, 1, 1, 0, 2, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((35 - 19*d + 2*d^2 + 9*n2 - 2*n2^2 - 3*n3 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 
      15*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, -1, 0, 
      0, 1, 1, 1, 1, 0, 2])/((n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((50 - 30*d + 4*d^2 + 5*n1 - 2*d*n1 + 12*n2 - d*n2 + n1*n2 - 2*n2^2 + 
      3*n3 + d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 20*n5 - 8*d*n5 + 7*n2*n5 + 
      5*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, -1, 0, 0, 1, 1, 2, 0, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((70 - 43*d + 6*d^2 + 5*n1 - 2*d*n1 + 20*n2 - 3*d*n2 + n1*n2 - 2*n2^2 + 
      7*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 25*n5 - 10*d*n5 + 9*n2*n5 + 
      6*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, -1, 0, 0, 1, 2, 0, 1, 1, 1])/
    ((n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((10 - 4*d + 5*n1 - 2*d*n1 - 4*n2 + 3*d*n2 + n1*n2 - 2*n2^2 - 5*n3 + 
      3*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 10*n5 - 4*d*n5 + 3*n2*n5 + 
      3*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, -1, 0, 0, 1, 2, 1, 0, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-10 + 4*d - 5*n1 + 2*d*n1 + 4*n2 - 3*d*n2 - n1*n2 + 2*n2^2 + 5*n3 - 
      3*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 10*n5 + 4*d*n5 - 3*n2*n5 - 
      3*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, -1, 0, 0, 1, 2, 1, 1, 0, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-10 + 4*d - 5*n1 + 2*d*n1 + 4*n2 - 3*d*n2 - n1*n2 + 2*n2^2 + 5*n3 - 
      3*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 10*n5 + 4*d*n5 - 3*n2*n5 - 
      3*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, -1, 0, 0, 2, 1, 1, 1, 1, 0])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-10 + 4*d - 5*n1 + 2*d*n1 + 4*n2 - 3*d*n2 - n1*n2 + 2*n2^2 + 5*n3 - 
      3*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 10*n5 + 4*d*n5 - 3*n2*n5 - 
      3*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, 0, -1, 0, 0, 1, 1, 1, 1, 2])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-150 + 90*d - 12*d^2 - 15*n1 + 6*d*n1 - 36*n2 + 3*d*n2 - 3*n1*n2 + 
      6*n2^2 - 9*n3 - 3*d*n3 - 6*n1*n3 + 15*n2*n3 + 6*n3^2 - 60*n5 + 
      24*d*n5 - 21*n2*n5 - 15*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, 0, -1, 0, 
      0, 2, 1, 1, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((50 - 30*d + 4*d^2 + 5*n1 - 2*d*n1 + 12*n2 - d*n2 + n1*n2 - 2*n2^2 + 
      3*n3 + d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 20*n5 - 8*d*n5 + 7*n2*n5 + 
      5*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, 0, -1, 0, 1, 1, 0, 2, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((35 - 19*d + 2*d^2 + 9*n2 - 2*n2^2 - 3*n3 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 
      15*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, 0, -1, 
      0, 1, 1, 1, 1, 0, 2])/((n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((50 - 30*d + 4*d^2 + 5*n1 - 2*d*n1 + 12*n2 - d*n2 + n1*n2 - 2*n2^2 + 
      3*n3 + d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 20*n5 - 8*d*n5 + 7*n2*n5 + 
      5*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, 0, -1, 0, 1, 1, 2, 0, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((240 - 206*d + 54*d^2 - 4*d^3 + 230*n1 - 147*d*n1 + 22*d^2*n1 + 32*n2 + 
      4*d*n2 - 5*d^2*n2 + 89*n1*n2 - 21*d*n1*n2 - 30*n2^2 + 11*d*n2^2 - 
      n1*n2^2 - 2*n2^3 - 38*n3 + 45*d*n3 - 11*d^2*n3 + 39*n1*n3 - 8*d*n1*n3 - 
      61*n2*n3 + 23*d*n2*n3 - 3*n1*n2*n3 - 7*n2^2*n3 - 29*n3^2 + 11*d*n3^2 - 
      2*n1*n3^2 - 7*n2*n3^2 - 2*n3^3 + 190*n5 - 126*d*n5 + 20*d^2*n5 + 
      60*n1*n5 - 24*d*n1*n5 + 68*n2*n5 - 17*d*n2*n5 + 24*n1*n2*n5 - 
      3*n2^2*n5 + 26*n3*n5 - 5*d*n3*n5 + 12*n1*n3*n5 - 6*n2*n3*n5 - 
      3*n3^2*n5 + 30*n5^2 - 12*d*n5^2 + 12*n2*n5^2 + 6*n3*n5^2)*
     j[p4, n1, n2, n3, 1, 1 + n5, 0, -1, 0, 1, 2, 0, 1, 1, 1])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-240 + 206*d - 54*d^2 + 4*d^3 - 230*n1 + 147*d*n1 - 22*d^2*n1 - 32*n2 - 
      4*d*n2 + 5*d^2*n2 - 89*n1*n2 + 21*d*n1*n2 + 30*n2^2 - 11*d*n2^2 + 
      n1*n2^2 + 2*n2^3 + 38*n3 - 45*d*n3 + 11*d^2*n3 - 39*n1*n3 + 8*d*n1*n3 + 
      61*n2*n3 - 23*d*n2*n3 + 3*n1*n2*n3 + 7*n2^2*n3 + 29*n3^2 - 11*d*n3^2 + 
      2*n1*n3^2 + 7*n2*n3^2 + 2*n3^3 - 190*n5 + 126*d*n5 - 20*d^2*n5 - 
      60*n1*n5 + 24*d*n1*n5 - 68*n2*n5 + 17*d*n2*n5 - 24*n1*n2*n5 + 
      3*n2^2*n5 - 26*n3*n5 + 5*d*n3*n5 - 12*n1*n3*n5 + 6*n2*n3*n5 + 
      3*n3^2*n5 - 30*n5^2 + 12*d*n5^2 - 12*n2*n5^2 - 6*n3*n5^2)*
     j[p4, n1, n2, n3, 1, 1 + n5, 0, -1, 0, 1, 2, 1, 0, 1, 1])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((240 - 206*d + 54*d^2 - 4*d^3 + 230*n1 - 147*d*n1 + 22*d^2*n1 + 32*n2 + 
      4*d*n2 - 5*d^2*n2 + 89*n1*n2 - 21*d*n1*n2 - 30*n2^2 + 11*d*n2^2 - 
      n1*n2^2 - 2*n2^3 - 38*n3 + 45*d*n3 - 11*d^2*n3 + 39*n1*n3 - 8*d*n1*n3 - 
      61*n2*n3 + 23*d*n2*n3 - 3*n1*n2*n3 - 7*n2^2*n3 - 29*n3^2 + 11*d*n3^2 - 
      2*n1*n3^2 - 7*n2*n3^2 - 2*n3^3 + 190*n5 - 126*d*n5 + 20*d^2*n5 + 
      60*n1*n5 - 24*d*n1*n5 + 68*n2*n5 - 17*d*n2*n5 + 24*n1*n2*n5 - 
      3*n2^2*n5 + 26*n3*n5 - 5*d*n3*n5 + 12*n1*n3*n5 - 6*n2*n3*n5 - 
      3*n3^2*n5 + 30*n5^2 - 12*d*n5^2 + 12*n2*n5^2 + 6*n3*n5^2)*
     j[p4, n1, n2, n3, 1, 1 + n5, 0, -1, 0, 1, 2, 1, 1, 0, 1])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-10 + 4*d - 5*n1 + 2*d*n1 + 4*n2 - 3*d*n2 - n1*n2 + 2*n2^2 + 5*n3 - 
      3*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 10*n5 + 4*d*n5 - 3*n2*n5 - 
      3*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, 0, -1, 0, 2, 1, 1, 1, 1, 0])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-35 + 19*d - 2*d^2 + 35*n1 - 19*d*n1 + 2*d^2*n1 - 9*n2 + 9*n1*n2 + 
      2*n2^2 - 2*n1*n2^2 + 3*n3 - 3*d*n3 - 3*n1*n3 + 3*d*n1*n3 + 5*n2*n3 - 
      5*n1*n2*n3 + 2*n3^2 - 2*n1*n3^2 - 15*n5 + 6*d*n5 + 15*n1*n5 - 
      6*d*n1*n5 - 6*n2*n5 + 6*n1*n2*n5 - 3*n3*n5 + 3*n1*n3*n5)*
     j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, -1, 0, 1, 1, 1, 1, 1])/
    ((n2 - n3)*(-4 + d - n5)*(3 - d + n1 + n5)) + 
   ((-10 + 4*d - 5*n1 + 2*d*n1 + 4*n2 - 3*d*n2 - n1*n2 + 2*n2^2 + 5*n3 - 
      3*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 10*n5 + 4*d*n5 - 3*n2*n5 - 
      3*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, -1, 0, 1, 1, 1, 1, 2])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-10 + 4*d - 5*n1 + 2*d*n1 + 4*n2 - 3*d*n2 - n1*n2 + 2*n2^2 + 5*n3 - 
      3*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 10*n5 + 4*d*n5 - 3*n2*n5 - 
      3*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, -1, 0, 2, 1, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((35 - 19*d + 2*d^2 + 9*n2 - 2*n2^2 - 3*n3 + 3*d*n3 - 5*n2*n3 - 2*n3^2 + 
      15*n5 - 6*d*n5 + 6*n2*n5 + 3*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, 
      -1, 1, 1, 1, 1, 0, 2])/((n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-70 + 43*d - 6*d^2 - 5*n1 + 2*d*n1 - 20*n2 + 3*d*n2 - n1*n2 + 2*n2^2 - 
      7*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 25*n5 + 10*d*n5 - 9*n2*n5 - 
      6*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 2, 0])/
    ((n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((240 - 206*d + 54*d^2 - 4*d^3 + 230*n1 - 147*d*n1 + 22*d^2*n1 + 32*n2 + 
      4*d*n2 - 5*d^2*n2 + 89*n1*n2 - 21*d*n1*n2 - 30*n2^2 + 11*d*n2^2 - 
      n1*n2^2 - 2*n2^3 - 38*n3 + 45*d*n3 - 11*d^2*n3 + 39*n1*n3 - 8*d*n1*n3 - 
      61*n2*n3 + 23*d*n2*n3 - 3*n1*n2*n3 - 7*n2^2*n3 - 29*n3^2 + 11*d*n3^2 - 
      2*n1*n3^2 - 7*n2*n3^2 - 2*n3^3 + 190*n5 - 126*d*n5 + 20*d^2*n5 + 
      60*n1*n5 - 24*d*n1*n5 + 68*n2*n5 - 17*d*n2*n5 + 24*n1*n2*n5 - 
      3*n2^2*n5 + 26*n3*n5 - 5*d*n3*n5 + 12*n1*n3*n5 - 6*n2*n3*n5 - 
      3*n3^2*n5 + 30*n5^2 - 12*d*n5^2 + 12*n2*n5^2 + 6*n3*n5^2)*
     j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, -1, 1, 2, 0, 1, 1, 1])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-10 + 4*d - 5*n1 + 2*d*n1 + 4*n2 - 3*d*n2 - n1*n2 + 2*n2^2 + 5*n3 - 
      3*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 10*n5 + 4*d*n5 - 3*n2*n5 - 
      3*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, -1, 2, 1, 1, 1, 1, 0])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((450 - 445*d + 141*d^2 - 14*d^3 - 350*n1 + 435*d*n1 - 163*d^2*n1 + 
      18*d^3*n1 - 240*n1^2 + 156*d*n1^2 - 24*d^2*n1^2 + 227*n2 - 130*d*n2 + 
      16*d^2*n2 - 221*n1*n2 + 150*d*n1*n2 - 18*d^2*n1*n2 - 96*n1^2*n2 + 
      24*d*n1^2*n2 + 15*n2^2 - 17*n1*n2^2 - 6*d*n1*n2^2 - 2*n2^3 + 
      6*n1*n2^3 + 563*n3 - 492*d*n3 + 137*d^2*n3 - 12*d^3*n3 + 101*n1*n3 - 
      79*d*n1*n3 + 19*d^2*n1*n3 - 48*n1^2*n3 + 12*d*n1^2*n3 + 212*n2*n3 - 
      94*d*n2*n3 + 7*d^2*n2*n3 + 95*n1*n2*n3 - 45*d*n1*n2*n3 - 11*n2^2*n3 + 
      11*d*n2^2*n3 + 20*n1*n2^2*n3 - 6*n2^3*n3 + 65*n3^2 - 6*d*n3^2 - 
      7*d^2*n3^2 + 56*n1*n3^2 - 23*d*n1*n3^2 - 52*n2*n3^2 + 33*d*n2*n3^2 + 
      18*n1*n2*n3^2 - 21*n2^2*n3^2 - 37*n3^3 + 19*d*n3^3 + 4*n1*n3^3 - 
      21*n2*n3^3 - 6*n3^4 + 940*n5 - 871*d*n5 + 248*d^2*n5 - 20*d^3*n5 + 
      45*d*n1*n5 - 18*d^2*n1*n5 - 60*n1^2*n5 + 24*d*n1^2*n5 + 505*n2*n5 - 
      240*d*n2*n5 + 16*d^2*n2*n5 - 45*n1*n2*n5 + 36*d*n1*n2*n5 - 
      24*n1^2*n2*n5 + 22*n2^2*n5 + 16*d*n2^2*n5 - 18*n1*n2^2*n5 - 
      12*n2^3*n5 + 519*n3*n5 - 281*d*n3*n5 + 30*d^2*n3*n5 + 15*n1*n3*n5 + 
      3*d*n1*n3*n5 - 12*n1^2*n3*n5 + 101*n2*n3*n5 + 5*d*n2*n3*n5 - 
      3*n1*n2*n3*n5 - 29*n2^2*n3*n5 + 33*n3^2*n5 + 3*d*n3^2*n5 + 
      3*n1*n3^2*n5 - 24*n2*n3^2*n5 - 7*n3^3*n5 + 400*n5^2 - 300*d*n5^2 + 
      56*d^2*n5^2 + 30*n1*n5^2 - 12*d*n1*n5^2 + 240*n2*n5^2 - 88*d*n2*n5^2 + 
      12*n1*n2*n5^2 + 32*n2^2*n5^2 + 190*n3*n5^2 - 72*d*n3*n5^2 + 
      6*n1*n3*n5^2 + 60*n2*n3*n5^2 + 22*n3^2*n5^2 + 30*n5^3 - 12*d*n5^3 + 
      12*n2*n5^3 + 6*n3*n5^3)*j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, 0, 0, 1, 1, 
      1, 1, 1])/(2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((-50 + 30*d - 4*d^2 - 5*n1 + 2*d*n1 - 12*n2 + 
      d*n2 - n1*n2 + 2*n2^2 - 3*n3 - d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 
      20*n5 + 8*d*n5 - 7*n2*n5 - 5*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, 
      0, 0, 1, 2, 1, 1, 1])/(2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-10 + 4*d - 5*n1 + 2*d*n1 + 4*n2 - 3*d*n2 - n1*n2 + 2*n2^2 + 5*n3 - 
      3*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 10*n5 + 4*d*n5 - 3*n2*n5 - 
      3*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, 0, 0, 2, 1, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-90 + 56*d - 3*d^2 - 2*d^3 + 10*n1 - 69*d*n1 + 41*d^2*n1 - 6*d^3*n1 + 
      63*n2 - 89*d*n2 + 30*d^2*n2 - 2*d^3*n2 + 67*n1*n2 - 66*d*n1*n2 + 
      12*d^2*n1*n2 + 69*n2^2 - 40*d*n2^2 + 4*d^2*n2^2 + 25*n1*n2^2 - 
      6*d*n1*n2^2 + 12*n2^3 - 2*d*n2^3 - 87*n3 + 109*d*n3 - 50*d^2*n3 + 
      8*d^3*n3 + 69*n1*n3 - 55*d*n1*n3 + 9*d^2*n1*n3 - 39*n2*n3 + 
      47*d*n2*n3 - 13*d^2*n2*n3 + 39*n1*n2*n3 - 9*d*n1*n2*n3 - 6*n2^2*n3 + 
      5*d*n2^2*n3 - 72*n3^2 + 59*d*n3^2 - 12*d^2*n3^2 + 14*n1*n3^2 - 
      3*d*n1*n3^2 - 30*n2*n3^2 + 11*d*n2*n3^2 - 12*n3^3 + 4*d*n3^3 - 105*n5 + 
      72*d*n5 - 12*d^2*n5 - 15*d*n1*n5 + 6*d^2*n1*n5 - 34*n2*n5 + 4*d*n2*n5 + 
      2*d^2*n2*n5 + 15*n1*n2*n5 - 12*d*n1*n2*n5 + 8*n2^2*n5 - 4*d*n2^2*n5 + 
      6*n1*n2^2*n5 + 2*n2^3*n5 - 59*n3*n5 + 41*d*n3*n5 - 8*d^2*n3*n5 + 
      15*n1*n3*n5 - 9*d*n1*n3*n5 - 29*n2*n3*n5 + 13*d*n2*n3*n5 + 
      9*n1*n2*n3*n5 - 5*n2^2*n3*n5 - 27*n3^2*n5 + 12*d*n3^2*n5 + 
      3*n1*n3^2*n5 - 11*n2*n3^2*n5 - 4*n3^3*n5 - 15*n5^2 + 6*d*n5^2 - 
      6*n2*n5^2 - 3*n3*n5^2)*j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, 0, 1, 0, 1, 
      1, 1, 1])/((-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((180 - 147*d + 30*d^2 - 70*n1 + 133*d*n1 - 
      62*d^2*n1 + 8*d^3*n1 + 32*n2 + 21*d*n2 - 14*d^2*n2 - 113*n1*n2 + 
      91*d*n1*n2 - 14*d^2*n1*n2 - 36*n2^2 + 22*d*n2^2 - 29*n1*n2^2 + 
      4*d*n1*n2^2 - 8*n2^3 + 2*n1*n2^3 + 116*n3 - 112*d*n3 + 46*d^2*n3 - 
      8*d^3*n3 - 89*n1*n3 + 61*d*n1*n3 - 8*d^2*n1*n3 + 44*n2*n3 - 
      47*d*n2*n3 + 16*d^2*n2*n3 - 32*n1*n2*n3 + d*n1*n2*n3 + 4*n2^2*n3 - 
      8*d*n2^2*n3 + 7*n1*n2^2*n3 + 56*n3^2 - 49*d*n3^2 + 12*d^2*n3^2 - 
      5*n1*n3^2 - 2*d*n1*n3^2 + 20*n2*n3^2 - 12*d*n2*n3^2 + 7*n1*n2*n3^2 + 
      8*n3^3 - 4*d*n3^3 + 2*n1*n3^3 + 155*n5 - 117*d*n5 + 22*d^2*n5 - 
      30*n1*n5 + 42*d*n1*n5 - 12*d^2*n1*n5 + 87*n2*n5 - 32*d*n2*n5 - 
      42*n1*n2*n5 + 24*d*n1*n2*n5 + 10*n2^2*n5 - 12*n1*n2^2*n5 + 96*n3*n5 - 
      57*d*n3*n5 + 8*d^2*n3*n5 - 36*n1*n3*n5 + 18*d*n1*n3*n5 + 51*n2*n3*n5 - 
      16*d*n2*n3*n5 - 18*n1*n2*n3*n5 + 8*n2^2*n3*n5 + 33*n3^2*n5 - 
      12*d*n3^2*n5 - 6*n1*n3^2*n5 + 12*n2*n3^2*n5 + 4*n3^3*n5 + 15*n5^2 - 
      6*d*n5^2 + 6*n2*n5^2 + 3*n3*n5^2)*j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, 0, 
      1, 1, 0, 1, 1, 1])/((-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((-70 + 38*d - 4*d^2 - 15*n1 + 6*d*n1 - 124*n2 + 
      73*d*n2 - 12*d^2*n2 - 3*n1*n2 - 42*n2^2 + 12*d*n2^2 + 37*n3 - 29*d*n3 + 
      4*d^2*n3 - 11*n1*n3 + 2*d*n1*n3 + 11*n2*n3 - d*n2*n3 - n1*n2*n3 + 
      2*n2^2*n3 + 19*n3^2 - 5*d*n3^2 - 2*n1*n3^2 + 5*n2*n3^2 + 2*n3^3 - 
      40*n5 + 16*d*n5 - 43*n2*n5 + 12*d*n2*n5 - 12*n2^2*n5 - 11*n3*n5 - 
      5*n2*n3*n5 - n3^2*n5)*j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 0, 
      1, 1])/(2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((10 - 4*d + 5*n1 - 2*d*n1 - 4*n2 + 3*d*n2 + n1*n2 - 2*n2^2 - 5*n3 + 
      3*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 10*n5 - 4*d*n5 + 3*n2*n5 + 
      3*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 0, 1, 2])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((130 - 147*d + 53*d^2 - 6*d^3 + 80*n1 - 102*d*n1 + 43*d^2*n1 - 6*d^3*n1 - 
      117*n2 + 192*d*n2 - 89*d^2*n2 + 12*d^3*n2 + 84*n1*n2 - 69*d*n1*n2 + 
      14*d^2*n1*n2 - 187*n2^2 + 143*d*n2^2 - 24*d^2*n2^2 + 26*n1*n2^2 - 
      10*d*n1*n2^2 - 48*n2^3 + 12*d*n2^3 + 2*n1*n2^3 - 125*n3 + 149*d*n3 - 
      55*d^2*n3 + 6*d^3*n3 - 46*n1*n3 + 16*d*n1*n3 + d^2*n1*n3 - 218*n2*n3 + 
      150*d*n2*n3 - 22*d^2*n2*n3 + n1*n2*n3 - 8*d*n1*n2*n3 - 69*n2^2*n3 + 
      14*d*n2^2*n3 + 7*n1*n2^2*n3 + 2*n2^3*n3 - 27*n3^2 + 10*d*n3^2 + 
      d^2*n3^2 - 3*n1*n3^2 - 3*d*n1*n3^2 - 8*n2*n3^2 - 5*d*n2*n3^2 + 
      7*n1*n2*n3^2 + 7*n2^2*n3^2 + 11*n3^3 - 6*d*n3^3 + 2*n1*n3^3 + 
      7*n2*n3^3 + 2*n3^4 + 220*n5 - 213*d*n5 + 65*d^2*n5 - 6*d^3*n5 + 
      120*n1*n5 - 78*d*n1*n5 + 12*d^2*n1*n5 + 56*n2*n5 - 10*d*n2*n5 - 
      5*d^2*n2*n5 + 50*n1*n2*n5 - 13*d*n1*n2*n5 - 42*n2^2*n5 + 23*d*n2^2*n5 + 
      n1*n2^2*n5 - 12*n2^3*n5 - 69*n3*n5 + 63*d*n3*n5 - 14*d^2*n3*n5 - 
      8*n1*n3*n5 + 7*d*n1*n3*n5 - 90*n2*n3*n5 + 38*d*n2*n3*n5 - 
      12*n1*n2*n3*n5 - 22*n2^2*n3*n5 - 35*n3^2*n5 + 13*d*n3^2*n5 - 
      7*n1*n3^2*n5 - 12*n2*n3^2*n5 - 2*n3^3*n5 + 105*n5^2 - 72*d*n5^2 + 
      12*d^2*n5^2 + 30*n1*n5^2 - 12*d*n1*n5^2 + 44*n2*n5^2 - 13*d*n2*n5^2 + 
      12*n1*n2*n5^2 + n2^2*n5^2 + 4*n3*n5^2 + d*n3*n5^2 + 6*n1*n3*n5^2 - 
      6*n2*n3*n5^2 - 4*n3^2*n5^2 + 15*n5^3 - 6*d*n5^3 + 6*n2*n5^3 + 
      3*n3*n5^3)*j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 0, 1])/
    ((-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((20 - 8*d - 5*n1 + 2*d*n1 + 6*n2 + d*n2 - n1*n2 - 2*n2^2 - 9*n3 + 
      5*d*n3 - 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 10*n5 - 4*d*n5 + 5*n2*n5 + n3*n5)*
     j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 0, 2])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-20 + 18*d - 4*d^2 - 10*n1 + 9*d*n1 - 2*d^2*n1 - 2*n2 - 6*d*n2 + 
      3*d^2*n2 - 7*n1*n2 + 3*d*n1*n2 + 8*n2^2 - 5*d*n2^2 - n1*n2^2 + 2*n2^3 - 
      20*n3 + 11*d*n3 - d^2*n3 - 19*n1*n3 + 13*d*n1*n3 - 2*d^2*n1*n3 + 
      17*n2*n3 - 17*d*n2*n3 + 3*d^2*n2*n3 - 10*n1*n2*n3 + 3*d*n1*n2*n3 + 
      15*n2^2*n3 - 5*d*n2^2*n3 - n1*n2^2*n3 + 2*n2^3*n3 + 9*n3^2 - 
      12*d*n3^2 + 3*d^2*n3^2 - 11*n1*n3^2 + 4*d*n1*n3^2 + 26*n2*n3^2 - 
      11*d*n2*n3^2 - 3*n1*n2*n3^2 + 7*n2^2*n3^2 + 11*n3^3 - 5*d*n3^3 - 
      2*n1*n3^3 + 7*n2*n3^3 + 2*n3^4 - 400*n5 + 390*d*n5 - 122*d^2*n5 + 
      12*d^3*n5 - 220*n1*n5 + 138*d*n1*n5 - 20*d^2*n1*n5 - 190*n2*n5 + 
      109*d*n2*n5 - 14*d^2*n2*n5 - 82*n1*n2*n5 + 18*d*n1*n2*n5 - 13*n2^2*n5 + 
      2*d*n2^2*n5 + 2*n1*n2^2*n5 - 110*n3*n5 + 63*d*n3*n5 - 8*d^2*n3*n5 - 
      30*n1*n3*n5 + 4*d*n1*n3*n5 - 28*n2*n3*n5 + 7*d*n2*n3*n5 + 
      6*n1*n2*n3*n5 - 3*n2^2*n3*n5 - 15*n3^2*n5 + 5*d*n3^2*n5 + 
      4*n1*n3^2*n5 - 6*n2*n3^2*n5 - 3*n3^3*n5 - 210*n5^2 + 144*d*n5^2 - 
      24*d^2*n5^2 - 60*n1*n5^2 + 24*d*n1*n5^2 - 88*n2*n5^2 + 26*d*n2*n5^2 - 
      24*n1*n2*n5^2 - 2*n2^2*n5^2 - 38*n3*n5^2 + 10*d*n3*n5^2 - 
      12*n1*n3*n5^2 + 2*n3^2*n5^2 - 30*n5^3 + 12*d*n5^3 - 12*n2*n5^3 - 
      6*n3*n5^3)*j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-1300 + 1690*d - 803*d^2 + 164*d^3 - 12*d^4 - 1130*n1 + 1142*d*n1 - 
      376*d^2*n1 + 40*d^3*n1 - 120*n1^2 + 78*d*n1^2 - 12*d^2*n1^2 - 900*n2 + 
      770*d*n2 - 199*d^2*n2 + 14*d^3*n2 - 797*n1*n2 + 494*d*n1*n2 - 
      72*d^2*n1*n2 - 48*n1^2*n2 + 12*d*n1^2*n2 - 77*n2^2 - 10*d*n2^2 + 
      14*d^2*n2^2 - 133*n1*n2^2 + 30*d*n1*n2^2 + 45*n2^3 - 22*d*n2^3 + 
      2*n1*n2^3 + 6*n2^4 - 340*n3 + 231*d*n3 - 33*d^2*n3 - 2*d^3*n3 - 
      441*n1*n3 + 269*d*n1*n3 - 38*d^2*n1*n3 - 24*n1^2*n3 + 6*d*n1^2*n3 + 
      112*n2*n3 - 167*d*n2*n3 + 45*d^2*n2*n3 - 140*n1*n2*n3 + 28*d*n1*n2*n3 + 
      153*n2^2*n3 - 66*d*n2^2*n3 + 7*n1*n2^2*n3 + 23*n2^3*n3 + 109*n3^2 - 
      102*d*n3^2 + 22*d^2*n3^2 - 33*n1*n3^2 + 5*d*n1*n3^2 + 139*n2*n3^2 - 
      55*d*n2*n3^2 + 7*n1*n2*n3^2 + 28*n2^2*n3^2 + 35*n3^3 - 13*d*n3^3 + 
      2*n1*n3^3 + 13*n2*n3^3 + 2*n3^4 - 1220*n5 + 1253*d*n5 - 421*d^2*n5 + 
      46*d^3*n5 - 595*n1*n5 + 423*d*n1*n5 - 74*d^2*n1*n5 - 30*n1^2*n5 + 
      12*d*n1^2*n5 - 823*n2*n5 + 530*d*n2*n5 - 82*d^2*n2*n5 - 333*n1*n2*n5 + 
      112*d*n1*n2*n5 - 12*n1^2*n2*n5 - 139*n2^2*n5 + 38*d*n2^2*n5 - 
      38*n1*n2^2*n5 - 2*n2^3*n5 - 414*n3*n5 + 251*d*n3*n5 - 35*d^2*n3*n5 - 
      184*n1*n3*n5 + 63*d*n1*n3*n5 - 6*n1^2*n3*n5 - 115*n2*n3*n5 + 
      22*d*n2*n3*n5 - 45*n1*n2*n3*n5 + 7*n2^2*n3*n5 - 9*n3^2*n5 - 
      4*d*n3^2*n5 - 13*n1*n3^2*n5 + 14*n2*n3^2*n5 + 5*n3^3*n5 - 350*n5^2 + 
      255*d*n5^2 - 46*d^2*n5^2 - 75*n1*n5^2 + 30*d*n1*n5^2 - 195*n2*n5^2 + 
      68*d*n2*n5^2 - 30*n1*n2*n5^2 - 22*n2^2*n5^2 - 110*n3*n5^2 + 
      39*d*n3*n5^2 - 15*n1*n3*n5^2 - 27*n2*n3*n5^2 - 8*n3^2*n5^2 - 30*n5^3 + 
      12*d*n5^3 - 12*n2*n5^3 - 6*n3*n5^3)*j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, 
      0, 1, 1, 1, 1, 1, 1])/((-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((320 - 323*d + 103*d^2 - 10*d^3 + 120*n1 - 
      78*d*n1 + 12*d^2*n1 + 178*n2 - 98*d*n2 + 10*d^2*n2 + 48*n1*n2 - 
      12*d*n1*n2 + 10*n2^2 + 4*d*n2^2 - 4*n2^3 + 94*n3 - 41*d*n3 + d^2*n3 + 
      24*n1*n3 - 6*d*n1*n3 - 8*n2*n3 + 16*d*n2*n3 - 14*n2^2*n3 - 14*n3^2 + 
      10*d*n3^2 - 14*n2*n3^2 - 4*n3^3 + 165*n5 - 126*d*n5 + 24*d^2*n5 + 
      30*n1*n5 - 12*d*n1*n5 + 96*n2*n5 - 36*d*n2*n5 + 12*n1*n2*n5 + 
      12*n2^2*n5 + 63*n3*n5 - 24*d*n3*n5 + 6*n1*n3*n5 + 18*n2*n3*n5 + 
      6*n3^2*n5 + 15*n5^2 - 6*d*n5^2 + 6*n2*n5^2 + 3*n3*n5^2)*
     j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 2, 0])/
    ((-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((50 - 30*d + 4*d^2 + 5*n1 - 2*d*n1 + 12*n2 - d*n2 + n1*n2 - 2*n2^2 + 
      3*n3 + d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 20*n5 - 8*d*n5 + 7*n2*n5 + 
      5*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 2, 0, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-50 + 30*d - 4*d^2 - 5*n1 + 2*d*n1 - 12*n2 + d*n2 - n1*n2 + 2*n2^2 - 
      3*n3 - d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 20*n5 + 8*d*n5 - 7*n2*n5 - 
      5*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 2, 1, 0])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((240 - 206*d + 54*d^2 - 4*d^3 + 230*n1 - 147*d*n1 + 22*d^2*n1 + 32*n2 + 
      4*d*n2 - 5*d^2*n2 + 89*n1*n2 - 21*d*n1*n2 - 30*n2^2 + 11*d*n2^2 - 
      n1*n2^2 - 2*n2^3 - 38*n3 + 45*d*n3 - 11*d^2*n3 + 39*n1*n3 - 8*d*n1*n3 - 
      61*n2*n3 + 23*d*n2*n3 - 3*n1*n2*n3 - 7*n2^2*n3 - 29*n3^2 + 11*d*n3^2 - 
      2*n1*n3^2 - 7*n2*n3^2 - 2*n3^3 + 190*n5 - 126*d*n5 + 20*d^2*n5 + 
      60*n1*n5 - 24*d*n1*n5 + 68*n2*n5 - 17*d*n2*n5 + 24*n1*n2*n5 - 
      3*n2^2*n5 + 26*n3*n5 - 5*d*n3*n5 + 12*n1*n3*n5 - 6*n2*n3*n5 - 
      3*n3^2*n5 + 30*n5^2 - 12*d*n5^2 + 12*n2*n5^2 + 6*n3*n5^2)*
     j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, 0, 1, 2, 0, 1, 1, 1])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((10 - 4*d + 5*n1 - 2*d*n1 - 4*n2 + 3*d*n2 + n1*n2 - 2*n2^2 - 5*n3 + 
      3*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 10*n5 - 4*d*n5 + 3*n2*n5 + 
      3*n3*n5)*j[p4, n1, n2, n3, 1, 1 + n5, 0, 0, 0, 2, 1, 0, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-10 + 4*d - 5*n1 + 2*d*n1 + 4*n2 - 3*d*n2 - n1*n2 + 2*n2^2 + 5*n3 - 
      3*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 20*n5 + 8*d*n5 - 5*n1*n5 + 
      2*d*n1*n5 + n2*n5 - 3*d*n2*n5 - n1*n2*n5 + 2*n2^2*n5 + 2*n3*n5 - 
      3*d*n3*n5 - 2*n1*n3*n5 + 5*n2*n3*n5 + 2*n3^2*n5 - 10*n5^2 + 4*d*n5^2 - 
      3*n2*n5^2 - 3*n3*n5^2)*j[p4, n1, n2, n3, 1, 2 + n5, -1, 0, 0, 0, 1, 1, 
      1, 1, 1])/(2*(n2 - n3)*(4 - d + n5)*(3 - d + n1 + n5)) + 
   ((10 - 4*d + 5*n1 - 2*d*n1 - 4*n2 + 3*d*n2 + n1*n2 - 2*n2^2 - 5*n3 + 
      3*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 20*n5 - 8*d*n5 + 5*n1*n5 - 
      2*d*n1*n5 - n2*n5 + 3*d*n2*n5 + n1*n2*n5 - 2*n2^2*n5 - 2*n3*n5 + 
      3*d*n3*n5 + 2*n1*n3*n5 - 5*n2*n3*n5 - 2*n3^2*n5 + 10*n5^2 - 4*d*n5^2 + 
      3*n2*n5^2 + 3*n3*n5^2)*j[p4, n1, n2, n3, 1, 2 + n5, -1, 0, 0, 1, 1, 1, 
      1, 0, 1])/(2*(n2 - n3)*(4 - d + n5)*(3 - d + n1 + n5)) + 
   ((-10 + 4*d - 5*n1 + 2*d*n1 + 4*n2 - 3*d*n2 - n1*n2 + 2*n2^2 + 5*n3 - 
      3*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 20*n5 + 8*d*n5 - 5*n1*n5 + 
      2*d*n1*n5 + n2*n5 - 3*d*n2*n5 - n1*n2*n5 + 2*n2^2*n5 + 2*n3*n5 - 
      3*d*n3*n5 - 2*n1*n3*n5 + 5*n2*n3*n5 + 2*n3^2*n5 - 10*n5^2 + 4*d*n5^2 - 
      3*n2*n5^2 - 3*n3*n5^2)*j[p4, n1, n2, n3, 1, 2 + n5, -1, 0, 0, 1, 1, 1, 
      1, 1, 0])/(2*(n2 - n3)*(4 - d + n5)*(3 - d + n1 + n5)) + 
   ((-10 + 4*d - 5*n1 + 2*d*n1 + 4*n2 - 3*d*n2 - n1*n2 + 2*n2^2 + 5*n3 - 
      3*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 20*n5 + 8*d*n5 - 5*n1*n5 + 
      2*d*n1*n5 + n2*n5 - 3*d*n2*n5 - n1*n2*n5 + 2*n2^2*n5 + 2*n3*n5 - 
      3*d*n3*n5 - 2*n1*n3*n5 + 5*n2*n3*n5 + 2*n3^2*n5 - 10*n5^2 + 4*d*n5^2 - 
      3*n2*n5^2 - 3*n3*n5^2)*j[p4, n1, n2, n3, 1, 2 + n5, -1, 0, 0, 1, 1, 1, 
      1, 1, 1])/(2*(n2 - n3)*(4 - d + n5)*(3 - d + n1 + n5)) + 
   ((110 - 74*d + 12*d^2 - 5*n1 + 2*d*n1 + 52*n2 - 15*d*n2 - n1*n2 + 2*n2^2 + 
      29*n3 - 9*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 + 130*n5 - 82*d*n5 + 
      12*d^2*n5 - 5*n1*n5 + 2*d*n1*n5 + 61*n2*n5 - 15*d*n2*n5 - n1*n2*n5 + 
      2*n2^2*n5 + 32*n3*n5 - 9*d*n3*n5 - 2*n1*n3*n5 + 5*n2*n3*n5 + 
      2*n3^2*n5 + 20*n5^2 - 8*d*n5^2 + 9*n2*n5^2 + 3*n3*n5^2)*
     j[p4, n1, n2, n3, 1, 2 + n5, 0, -1, 0, 0, 1, 1, 1, 1, 1])/
    (2*(n2 - n3)*(4 - d + n5)*(3 - d + n1 + n5)) + 
   ((10 - 4*d + 5*n1 - 2*d*n1 - 4*n2 + 3*d*n2 + n1*n2 - 2*n2^2 - 5*n3 + 
      3*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 20*n5 - 8*d*n5 + 5*n1*n5 - 
      2*d*n1*n5 - n2*n5 + 3*d*n2*n5 + n1*n2*n5 - 2*n2^2*n5 - 2*n3*n5 + 
      3*d*n3*n5 + 2*n1*n3*n5 - 5*n2*n3*n5 - 2*n3^2*n5 + 10*n5^2 - 4*d*n5^2 + 
      3*n2*n5^2 + 3*n3*n5^2)*j[p4, n1, n2, n3, 1, 2 + n5, 0, -1, 0, 1, 1, 1, 
      1, 0, 1])/(2*(n2 - n3)*(4 - d + n5)*(3 - d + n1 + n5)) + 
   ((-10 + 4*d - 5*n1 + 2*d*n1 + 4*n2 - 3*d*n2 - n1*n2 + 2*n2^2 + 5*n3 - 
      3*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 20*n5 + 8*d*n5 - 5*n1*n5 + 
      2*d*n1*n5 + n2*n5 - 3*d*n2*n5 - n1*n2*n5 + 2*n2^2*n5 + 2*n3*n5 - 
      3*d*n3*n5 - 2*n1*n3*n5 + 5*n2*n3*n5 + 2*n3^2*n5 - 10*n5^2 + 4*d*n5^2 - 
      3*n2*n5^2 - 3*n3*n5^2)*j[p4, n1, n2, n3, 1, 2 + n5, 0, -1, 0, 1, 1, 1, 
      1, 1, 0])/(2*(n2 - n3)*(4 - d + n5)*(3 - d + n1 + n5)) + 
   ((-130 + 82*d - 12*d^2 - 5*n1 + 2*d*n1 - 44*n2 + 9*d*n2 - n1*n2 + 2*n2^2 - 
      19*n3 + 3*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 170*n5 + 98*d*n5 - 
      12*d^2*n5 - 5*n1*n5 + 2*d*n1*n5 - 59*n2*n5 + 9*d*n2*n5 - n1*n2*n5 + 
      2*n2^2*n5 - 28*n3*n5 + 3*d*n3*n5 - 2*n1*n3*n5 + 5*n2*n3*n5 + 
      2*n3^2*n5 - 40*n5^2 + 16*d*n5^2 - 15*n2*n5^2 - 9*n3*n5^2)*
     j[p4, n1, n2, n3, 1, 2 + n5, 0, -1, 0, 1, 1, 1, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-10 + 4*d - 5*n1 + 2*d*n1 + 4*n2 - 3*d*n2 - n1*n2 + 2*n2^2 + 5*n3 - 
      3*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 20*n5 + 8*d*n5 - 5*n1*n5 + 
      2*d*n1*n5 + n2*n5 - 3*d*n2*n5 - n1*n2*n5 + 2*n2^2*n5 + 2*n3*n5 - 
      3*d*n3*n5 - 2*n1*n3*n5 + 5*n2*n3*n5 + 2*n3^2*n5 - 10*n5^2 + 4*d*n5^2 - 
      3*n2*n5^2 - 3*n3*n5^2)*j[p4, n1, n2, n3, 1, 2 + n5, 0, 0, -1, 0, 1, 1, 
      1, 1, 1])/(2*(n2 - n3)*(4 - d + n5)*(3 - d + n1 + n5)) + 
   ((-130 + 82*d - 12*d^2 - 5*n1 + 2*d*n1 - 44*n2 + 9*d*n2 - n1*n2 + 2*n2^2 - 
      19*n3 + 3*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 170*n5 + 98*d*n5 - 
      12*d^2*n5 - 5*n1*n5 + 2*d*n1*n5 - 59*n2*n5 + 9*d*n2*n5 - n1*n2*n5 + 
      2*n2^2*n5 - 28*n3*n5 + 3*d*n3*n5 - 2*n1*n3*n5 + 5*n2*n3*n5 + 
      2*n3^2*n5 - 40*n5^2 + 16*d*n5^2 - 15*n2*n5^2 - 9*n3*n5^2)*
     j[p4, n1, n2, n3, 1, 2 + n5, 0, 0, -1, 1, 1, 1, 1, 0, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((130 - 82*d + 12*d^2 + 5*n1 - 2*d*n1 + 44*n2 - 9*d*n2 + n1*n2 - 2*n2^2 + 
      19*n3 - 3*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 170*n5 - 98*d*n5 + 
      12*d^2*n5 + 5*n1*n5 - 2*d*n1*n5 + 59*n2*n5 - 9*d*n2*n5 + n1*n2*n5 - 
      2*n2^2*n5 + 28*n3*n5 - 3*d*n3*n5 + 2*n1*n3*n5 - 5*n2*n3*n5 - 
      2*n3^2*n5 + 40*n5^2 - 16*d*n5^2 + 15*n2*n5^2 + 9*n3*n5^2)*
     j[p4, n1, n2, n3, 1, 2 + n5, 0, 0, -1, 1, 1, 1, 1, 1, 0])/
    (2*(n2 - n3)*(4 - d + n5)*(3 - d + n1 + n5)) + 
   ((520 - 498*d + 146*d^2 - 12*d^3 + 230*n1 - 147*d*n1 + 22*d^2*n1 + 
      244*n2 - 108*d*n2 + 3*d^2*n2 + 89*n1*n2 - 21*d*n1*n2 - 10*n2^2 + 
      19*d*n2^2 - n1*n2^2 - 10*n2^3 + 78*n3 + 5*d*n3 - 15*d^2*n3 + 39*n1*n3 - 
      8*d*n1*n3 - 77*n2*n3 + 55*d*n2*n3 - 3*n1*n2*n3 - 35*n2^2*n3 - 57*n3^2 + 
      31*d*n3^2 - 2*n1*n3^2 - 35*n2*n3^2 - 10*n3^3 + 310*n5 - 234*d*n5 + 
      44*d^2*n5 + 60*n1*n5 - 24*d*n1*n5 + 176*n2*n5 - 65*d*n2*n5 + 
      24*n1*n2*n5 + 21*n2^2*n5 + 110*n3*n5 - 41*d*n3*n5 + 12*n1*n3*n5 + 
      30*n2*n3*n5 + 9*n3^2*n5 + 30*n5^2 - 12*d*n5^2 + 12*n2*n5^2 + 6*n3*n5^2)*
     j[p4, n1, n2, n3, 2, n5, 0, 0, 0, 0, 1, 1, 1, 1, 1])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-520 + 498*d - 146*d^2 + 12*d^3 - 230*n1 + 147*d*n1 - 22*d^2*n1 - 
      244*n2 + 108*d*n2 - 3*d^2*n2 - 89*n1*n2 + 21*d*n1*n2 + 10*n2^2 - 
      19*d*n2^2 + n1*n2^2 + 10*n2^3 - 78*n3 - 5*d*n3 + 15*d^2*n3 - 39*n1*n3 + 
      8*d*n1*n3 + 77*n2*n3 - 55*d*n2*n3 + 3*n1*n2*n3 + 35*n2^2*n3 + 57*n3^2 - 
      31*d*n3^2 + 2*n1*n3^2 + 35*n2*n3^2 + 10*n3^3 - 310*n5 + 234*d*n5 - 
      44*d^2*n5 - 60*n1*n5 + 24*d*n1*n5 - 176*n2*n5 + 65*d*n2*n5 - 
      24*n1*n2*n5 - 21*n2^2*n5 - 110*n3*n5 + 41*d*n3*n5 - 12*n1*n3*n5 - 
      30*n2*n3*n5 - 9*n3^2*n5 - 30*n5^2 + 12*d*n5^2 - 12*n2*n5^2 - 6*n3*n5^2)*
     j[p4, n1, n2, n3, 2, n5, 0, 0, 0, 1, 0, 1, 1, 1, 1])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((520 - 498*d + 146*d^2 - 12*d^3 + 230*n1 - 147*d*n1 + 22*d^2*n1 + 
      244*n2 - 108*d*n2 + 3*d^2*n2 + 89*n1*n2 - 21*d*n1*n2 - 10*n2^2 + 
      19*d*n2^2 - n1*n2^2 - 10*n2^3 + 78*n3 + 5*d*n3 - 15*d^2*n3 + 39*n1*n3 - 
      8*d*n1*n3 - 77*n2*n3 + 55*d*n2*n3 - 3*n1*n2*n3 - 35*n2^2*n3 - 57*n3^2 + 
      31*d*n3^2 - 2*n1*n3^2 - 35*n2*n3^2 - 10*n3^3 + 310*n5 - 234*d*n5 + 
      44*d^2*n5 + 60*n1*n5 - 24*d*n1*n5 + 176*n2*n5 - 65*d*n2*n5 + 
      24*n1*n2*n5 + 21*n2^2*n5 + 110*n3*n5 - 41*d*n3*n5 + 12*n1*n3*n5 + 
      30*n2*n3*n5 + 9*n3^2*n5 + 30*n5^2 - 12*d*n5^2 + 12*n2*n5^2 + 6*n3*n5^2)*
     j[p4, n1, n2, n3, 2, n5, 0, 0, 0, 1, 1, 0, 1, 1, 1])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-480 + 482*d - 156*d^2 + 16*d^3 - 230*n1 + 147*d*n1 - 22*d^2*n1 - 
      248*n2 + 146*d*n2 - 19*d^2*n2 - 89*n1*n2 + 21*d*n1*n2 - 18*n2^2 + 
      d*n2^2 + n1*n2^2 + 2*n2^3 - 130*n3 + 69*d*n3 - 7*d^2*n3 - 39*n1*n3 + 
      8*d*n1*n3 - 11*n2*n3 - 5*d*n2*n3 + 3*n1*n2*n3 + 7*n2^2*n3 + 5*n3^2 - 
      5*d*n3^2 + 2*n1*n3^2 + 7*n2*n3^2 + 2*n3^3 - 250*n5 + 180*d*n5 - 
      32*d^2*n5 - 60*n1*n5 + 24*d*n1*n5 - 122*n2*n5 + 41*d*n2*n5 - 
      24*n1*n2*n5 - 9*n2^2*n5 - 68*n3*n5 + 23*d*n3*n5 - 12*n1*n3*n5 - 
      12*n2*n3*n5 - 3*n3^2*n5 - 30*n5^2 + 12*d*n5^2 - 12*n2*n5^2 - 6*n3*n5^2)*
     j[p4, n1, n2, n3, 2, n5, 0, 0, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-10 + 4*d - 5*n1 + 2*d*n1 + 4*n2 - 3*d*n2 - n1*n2 + 2*n2^2 + 5*n3 - 
      3*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 10*n5 + 4*d*n5 - 3*n2*n5 - 
      3*n3*n5)*j[p4, n1, n2, n3, 2, 1 + n5, -1, 0, 0, 0, 1, 1, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((10 - 4*d + 5*n1 - 2*d*n1 - 4*n2 + 3*d*n2 + n1*n2 - 2*n2^2 - 5*n3 + 
      3*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 10*n5 - 4*d*n5 + 3*n2*n5 + 
      3*n3*n5)*j[p4, n1, n2, n3, 2, 1 + n5, -1, 0, 0, 1, 0, 1, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-10 + 4*d - 5*n1 + 2*d*n1 + 4*n2 - 3*d*n2 - n1*n2 + 2*n2^2 + 5*n3 - 
      3*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 10*n5 + 4*d*n5 - 3*n2*n5 - 
      3*n3*n5)*j[p4, n1, n2, n3, 2, 1 + n5, -1, 0, 0, 1, 1, 0, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((30 - 22*d + 4*d^2 - 5*n1 + 2*d*n1 + 20*n2 - 7*d*n2 - n1*n2 + 2*n2^2 + 
      13*n3 - 5*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 + n2*n5 - n3*n5)*
     j[p4, n1, n2, n3, 2, 1 + n5, -1, 0, 0, 1, 1, 1, 1, 1, 0])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-520 + 498*d - 146*d^2 + 12*d^3 - 230*n1 + 147*d*n1 - 22*d^2*n1 - 
      244*n2 + 108*d*n2 - 3*d^2*n2 - 89*n1*n2 + 21*d*n1*n2 + 10*n2^2 - 
      19*d*n2^2 + n1*n2^2 + 10*n2^3 - 78*n3 - 5*d*n3 + 15*d^2*n3 - 39*n1*n3 + 
      8*d*n1*n3 + 77*n2*n3 - 55*d*n2*n3 + 3*n1*n2*n3 + 35*n2^2*n3 + 57*n3^2 - 
      31*d*n3^2 + 2*n1*n3^2 + 35*n2*n3^2 + 10*n3^3 - 310*n5 + 234*d*n5 - 
      44*d^2*n5 - 60*n1*n5 + 24*d*n1*n5 - 176*n2*n5 + 65*d*n2*n5 - 
      24*n1*n2*n5 - 21*n2^2*n5 - 110*n3*n5 + 41*d*n3*n5 - 12*n1*n3*n5 - 
      30*n2*n3*n5 - 9*n3^2*n5 - 30*n5^2 + 12*d*n5^2 - 12*n2*n5^2 - 6*n3*n5^2)*
     j[p4, n1, n2, n3, 2, 1 + n5, 0, -1, 0, 0, 1, 1, 1, 1, 1])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((520 - 498*d + 146*d^2 - 12*d^3 + 230*n1 - 147*d*n1 + 22*d^2*n1 + 
      244*n2 - 108*d*n2 + 3*d^2*n2 + 89*n1*n2 - 21*d*n1*n2 - 10*n2^2 + 
      19*d*n2^2 - n1*n2^2 - 10*n2^3 + 78*n3 + 5*d*n3 - 15*d^2*n3 + 39*n1*n3 - 
      8*d*n1*n3 - 77*n2*n3 + 55*d*n2*n3 - 3*n1*n2*n3 - 35*n2^2*n3 - 57*n3^2 + 
      31*d*n3^2 - 2*n1*n3^2 - 35*n2*n3^2 - 10*n3^3 + 310*n5 - 234*d*n5 + 
      44*d^2*n5 + 60*n1*n5 - 24*d*n1*n5 + 176*n2*n5 - 65*d*n2*n5 + 
      24*n1*n2*n5 + 21*n2^2*n5 + 110*n3*n5 - 41*d*n3*n5 + 12*n1*n3*n5 + 
      30*n2*n3*n5 + 9*n3^2*n5 + 30*n5^2 - 12*d*n5^2 + 12*n2*n5^2 + 6*n3*n5^2)*
     j[p4, n1, n2, n3, 2, 1 + n5, 0, -1, 0, 1, 0, 1, 1, 1, 1])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-520 + 498*d - 146*d^2 + 12*d^3 - 230*n1 + 147*d*n1 - 22*d^2*n1 - 
      244*n2 + 108*d*n2 - 3*d^2*n2 - 89*n1*n2 + 21*d*n1*n2 + 10*n2^2 - 
      19*d*n2^2 + n1*n2^2 + 10*n2^3 - 78*n3 - 5*d*n3 + 15*d^2*n3 - 39*n1*n3 + 
      8*d*n1*n3 + 77*n2*n3 - 55*d*n2*n3 + 3*n1*n2*n3 + 35*n2^2*n3 + 57*n3^2 - 
      31*d*n3^2 + 2*n1*n3^2 + 35*n2*n3^2 + 10*n3^3 - 310*n5 + 234*d*n5 - 
      44*d^2*n5 - 60*n1*n5 + 24*d*n1*n5 - 176*n2*n5 + 65*d*n2*n5 - 
      24*n1*n2*n5 - 21*n2^2*n5 - 110*n3*n5 + 41*d*n3*n5 - 12*n1*n3*n5 - 
      30*n2*n3*n5 - 9*n3^2*n5 - 30*n5^2 + 12*d*n5^2 - 12*n2*n5^2 - 6*n3*n5^2)*
     j[p4, n1, n2, n3, 2, 1 + n5, 0, -1, 0, 1, 1, 0, 1, 1, 1])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((160 - 114*d + 20*d^2 + 230*n1 - 147*d*n1 + 22*d^2*n1 - 40*n2 + 54*d*n2 - 
      13*d^2*n2 + 89*n1*n2 - 21*d*n1*n2 - 46*n2^2 + 15*d*n2^2 - n1*n2^2 - 
      2*n2^3 - 94*n3 + 83*d*n3 - 17*d^2*n3 + 39*n1*n3 - 8*d*n1*n3 - 
      85*n2*n3 + 29*d*n2*n3 - 3*n1*n2*n3 - 7*n2^2*n3 - 37*n3^2 + 13*d*n3^2 - 
      2*n1*n3^2 - 7*n2*n3^2 - 2*n3^3 + 170*n5 - 108*d*n5 + 16*d^2*n5 + 
      60*n1*n5 - 24*d*n1*n5 + 50*n2*n5 - 9*d*n2*n5 + 24*n1*n2*n5 - 
      7*n2^2*n5 + 12*n3*n5 + d*n3*n5 + 12*n1*n3*n5 - 12*n2*n3*n5 - 
      5*n3^2*n5 + 30*n5^2 - 12*d*n5^2 + 12*n2*n5^2 + 6*n3*n5^2)*
     j[p4, n1, n2, n3, 2, 1 + n5, 0, -1, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((10 - 4*d + 5*n1 - 2*d*n1 - 4*n2 + 3*d*n2 + n1*n2 - 2*n2^2 - 5*n3 + 
      3*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 10*n5 - 4*d*n5 + 3*n2*n5 + 
      3*n3*n5)*j[p4, n1, n2, n3, 2, 1 + n5, 0, 0, -1, 0, 1, 1, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-10 + 4*d - 5*n1 + 2*d*n1 + 4*n2 - 3*d*n2 - n1*n2 + 2*n2^2 + 5*n3 - 
      3*d*n3 - 2*n1*n3 + 5*n2*n3 + 2*n3^2 - 10*n5 + 4*d*n5 - 3*n2*n5 - 
      3*n3*n5)*j[p4, n1, n2, n3, 2, 1 + n5, 0, 0, -1, 1, 0, 1, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((10 - 4*d + 5*n1 - 2*d*n1 - 4*n2 + 3*d*n2 + n1*n2 - 2*n2^2 - 5*n3 + 
      3*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 10*n5 - 4*d*n5 + 3*n2*n5 + 
      3*n3*n5)*j[p4, n1, n2, n3, 2, 1 + n5, 0, 0, -1, 1, 1, 0, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((130 - 82*d + 12*d^2 + 5*n1 - 2*d*n1 + 44*n2 - 9*d*n2 + n1*n2 - 2*n2^2 + 
      19*n3 - 3*d*n3 + 2*n1*n3 - 5*n2*n3 - 2*n3^2 + 40*n5 - 16*d*n5 + 
      15*n2*n5 + 9*n3*n5)*j[p4, n1, n2, n3, 2, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 
      1, 0])/(2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-150*n3 + 90*d*n3 - 12*d^2*n3 - 15*n1*n3 + 6*d*n1*n3 - 36*n2*n3 + 
      3*d*n2*n3 - 3*n1*n2*n3 + 6*n2^2*n3 - 9*n3^2 - 3*d*n3^2 - 6*n1*n3^2 + 
      15*n2*n3^2 + 6*n3^3 - 60*n3*n5 + 24*d*n3*n5 - 21*n2*n3*n5 - 15*n3^2*n5)*
     j[p4, n1, n2, 1 + n3, 0, 1 + n5, 0, -1, 0, 1, 1, 1, 1, 1, 1])/
    (2*(-n2 + n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-150*n3 + 90*d*n3 - 12*d^2*n3 - 15*n1*n3 + 6*d*n1*n3 - 36*n2*n3 + 
      3*d*n2*n3 - 3*n1*n2*n3 + 6*n2^2*n3 - 9*n3^2 - 3*d*n3^2 - 6*n1*n3^2 + 
      15*n2*n3^2 + 6*n3^3 - 60*n3*n5 + 24*d*n3*n5 - 21*n2*n3*n5 - 15*n3^2*n5)*
     j[p4, n1, n2, 1 + n3, 0, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 1, 1])/
    (2*(-n2 + n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-280*n3 + 277*d*n3 - 86*d^2*n3 + 8*d^3*n3 - 120*n1*n3 + 78*d*n1*n3 - 
      12*d^2*n1*n3 - 142*n2*n3 + 73*d*n2*n3 - 6*d^2*n2*n3 - 48*n1*n2*n3 + 
      12*d*n1*n2*n3 - 2*n2^2*n3 - 6*d*n2^2*n3 + 4*n2^3*n3 - 66*n3^2 + 
      22*d*n3^2 + 2*d^2*n3^2 - 24*n1*n3^2 + 6*d*n1*n3^2 + 20*n2*n3^2 - 
      19*d*n2*n3^2 + 14*n2^2*n3^2 + 18*n3^3 - 11*d*n3^3 + 14*n2*n3^3 + 
      4*n3^4 - 155*n3*n5 + 117*d*n3*n5 - 22*d^2*n3*n5 - 30*n1*n3*n5 + 
      12*d*n1*n3*n5 - 87*n2*n3*n5 + 32*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 
      10*n2^2*n3*n5 - 56*n3^2*n5 + 21*d*n3^2*n5 - 6*n1*n3^2*n5 - 
      15*n2*n3^2*n5 - 5*n3^3*n5 - 15*n3*n5^2 + 6*d*n3*n5^2 - 6*n2*n3*n5^2 - 
      3*n3^2*n5^2)*j[p4, n1, n2, 1 + n3, 0, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 
      1])/((-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((460*n3 - 444*d*n3 + 134*d^2*n3 - 12*d^3*n3 + 230*n1*n3 - 147*d*n1*n3 + 
      22*d^2*n1*n3 + 210*n2*n3 - 102*d*n2*n3 + 7*d^2*n2*n3 + 89*n1*n2*n3 - 
      21*d*n1*n2*n3 - 4*n2^2*n3 + 11*d*n2^2*n3 - n1*n2^2*n3 - 6*n2^3*n3 + 
      76*n3^2 - 13*d*n3^2 - 7*d^2*n3^2 + 39*n1*n3^2 - 8*d*n1*n3^2 - 
      45*n2*n3^2 + 33*d*n2*n3^2 - 3*n1*n2*n3^2 - 21*n2^2*n3^2 - 35*n3^3 + 
      19*d*n3^3 - 2*n1*n3^3 - 21*n2*n3^3 - 6*n3^4 + 270*n3*n5 - 198*d*n3*n5 + 
      36*d^2*n3*n5 + 60*n1*n3*n5 - 24*d*n1*n3*n5 + 140*n2*n3*n5 - 
      49*d*n2*n3*n5 + 24*n1*n2*n3*n5 + 13*n2^2*n3*n5 + 82*n3^2*n5 - 
      29*d*n3^2*n5 + 12*n1*n3^2*n5 + 18*n2*n3^2*n5 + 5*n3^3*n5 + 30*n3*n5^2 - 
      12*d*n3*n5^2 + 12*n2*n3*n5^2 + 6*n3^2*n5^2)*j[p4, n1, n2, 1 + n3, 1, 
      n5, 0, 0, 0, 1, 1, 1, 1, 0, 1])/(2*(-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-460*n3 + 444*d*n3 - 134*d^2*n3 + 12*d^3*n3 - 230*n1*n3 + 147*d*n1*n3 - 
      22*d^2*n1*n3 - 210*n2*n3 + 102*d*n2*n3 - 7*d^2*n2*n3 - 89*n1*n2*n3 + 
      21*d*n1*n2*n3 + 4*n2^2*n3 - 11*d*n2^2*n3 + n1*n2^2*n3 + 6*n2^3*n3 - 
      76*n3^2 + 13*d*n3^2 + 7*d^2*n3^2 - 39*n1*n3^2 + 8*d*n1*n3^2 + 
      45*n2*n3^2 - 33*d*n2*n3^2 + 3*n1*n2*n3^2 + 21*n2^2*n3^2 + 35*n3^3 - 
      19*d*n3^3 + 2*n1*n3^3 + 21*n2*n3^3 + 6*n3^4 - 270*n3*n5 + 198*d*n3*n5 - 
      36*d^2*n3*n5 - 60*n1*n3*n5 + 24*d*n1*n3*n5 - 140*n2*n3*n5 + 
      49*d*n2*n3*n5 - 24*n1*n2*n3*n5 - 13*n2^2*n3*n5 - 82*n3^2*n5 + 
      29*d*n3^2*n5 - 12*n1*n3^2*n5 - 18*n2*n3^2*n5 - 5*n3^3*n5 - 30*n3*n5^2 + 
      12*d*n3*n5^2 - 12*n2*n3*n5^2 - 6*n3^2*n5^2)*j[p4, n1, n2, 1 + n3, 1, 
      1 + n5, 0, -1, 0, 0, 1, 1, 1, 1, 1])/(2*(-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((270*n3 - 258*d*n3 + 75*d^2*n3 - 6*d^3*n3 + 120*n1*n3 - 78*d*n1*n3 + 
      12*d^2*n1*n3 + 123*n2*n3 - 51*d*n2*n3 + 48*n1*n2*n3 - 12*d*n1*n2*n3 - 
      9*n2^2*n3 + 12*d*n2^2*n3 - 6*n2^3*n3 + 39*n3^2 + 6*d*n3^2 - 
      9*d^2*n3^2 + 24*n1*n3^2 - 6*d*n1*n3^2 - 48*n2*n3^2 + 33*d*n2*n3^2 - 
      21*n2^2*n3^2 - 33*n3^3 + 18*d*n3^3 - 21*n2*n3^3 - 6*n3^4 + 165*n3*n5 - 
      126*d*n3*n5 + 24*d^2*n3*n5 + 30*n1*n3*n5 - 12*d*n1*n3*n5 + 
      96*n2*n3*n5 - 36*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 12*n2^2*n3*n5 + 
      63*n3^2*n5 - 24*d*n3^2*n5 + 6*n1*n3^2*n5 + 18*n2*n3^2*n5 + 6*n3^3*n5 + 
      15*n3*n5^2 - 6*d*n3*n5^2 + 6*n2*n3*n5^2 + 3*n3^2*n5^2)*
     j[p4, n1, n2, 1 + n3, 1, 1 + n5, 0, -1, 0, 1, 0, 1, 1, 1, 1])/
    ((-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-270*n3 + 258*d*n3 - 75*d^2*n3 + 6*d^3*n3 - 120*n1*n3 + 78*d*n1*n3 - 
      12*d^2*n1*n3 - 123*n2*n3 + 51*d*n2*n3 - 48*n1*n2*n3 + 12*d*n1*n2*n3 + 
      9*n2^2*n3 - 12*d*n2^2*n3 + 6*n2^3*n3 - 39*n3^2 - 6*d*n3^2 + 
      9*d^2*n3^2 - 24*n1*n3^2 + 6*d*n1*n3^2 + 48*n2*n3^2 - 33*d*n2*n3^2 + 
      21*n2^2*n3^2 + 33*n3^3 - 18*d*n3^3 + 21*n2*n3^3 + 6*n3^4 - 165*n3*n5 + 
      126*d*n3*n5 - 24*d^2*n3*n5 - 30*n1*n3*n5 + 12*d*n1*n3*n5 - 
      96*n2*n3*n5 + 36*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 12*n2^2*n3*n5 - 
      63*n3^2*n5 + 24*d*n3^2*n5 - 6*n1*n3^2*n5 - 18*n2*n3^2*n5 - 6*n3^3*n5 - 
      15*n3*n5^2 + 6*d*n3*n5^2 - 6*n2*n3*n5^2 - 3*n3^2*n5^2)*
     j[p4, n1, n2, 1 + n3, 1, 1 + n5, 0, -1, 0, 1, 1, 0, 1, 1, 1])/
    ((-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((80*n3 - 42*d*n3 + 4*d^2*n3 + 5*n1*n3 - 2*d*n1*n3 + 14*n2*n3 + 
      3*d*n2*n3 + n1*n2*n3 - 6*n2^2*n3 - 11*n3^2 + 9*d*n3^2 + 2*n1*n3^2 - 
      15*n2*n3^2 - 6*n3^3 + 40*n3*n5 - 16*d*n3*n5 + 15*n2*n3*n5 + 9*n3^2*n5)*
     j[p4, n1, n2, 1 + n3, 1, 1 + n5, 0, -1, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-n2 + n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-120*n3 + 68*d*n3 - 8*d^2*n3 - 5*n1*n3 + 2*d*n1*n3 - 30*n2*n3 + 
      d*n2*n3 - n1*n2*n3 + 6*n2^2*n3 + 3*n3^2 - 7*d*n3^2 - 2*n1*n3^2 + 
      15*n2*n3^2 + 6*n3^3 - 50*n3*n5 + 20*d*n3*n5 - 19*n2*n3*n5 - 11*n3^2*n5)*
     j[p4, n1, n2, 1 + n3, 1, 1 + n5, 0, -1, 0, 1, 1, 1, 1, 0, 1])/
    (2*(-n2 + n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((150*n3 - 90*d*n3 + 12*d^2*n3 + 15*n1*n3 - 6*d*n1*n3 + 36*n2*n3 - 
      3*d*n2*n3 + 3*n1*n2*n3 - 6*n2^2*n3 + 9*n3^2 + 3*d*n3^2 + 6*n1*n3^2 - 
      15*n2*n3^2 - 6*n3^3 + 60*n3*n5 - 24*d*n3*n5 + 21*n2*n3*n5 + 15*n3^2*n5)*
     j[p4, n1, n2, 1 + n3, 1, 1 + n5, 0, -1, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-n2 + n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((10*n3 - 4*d*n3 + 5*n1*n3 - 2*d*n1*n3 - 4*n2*n3 + 3*d*n2*n3 + n1*n2*n3 - 
      2*n2^2*n3 - 5*n3^2 + 3*d*n3^2 + 2*n1*n3^2 - 5*n2*n3^2 - 2*n3^3 + 
      10*n3*n5 - 4*d*n3*n5 + 3*n2*n3*n5 + 3*n3^2*n5)*
     j[p4, n1, n2, 1 + n3, 1, 1 + n5, 0, 0, -1, 1, 0, 1, 1, 1, 1])/
    ((-n2 + n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-10*n3 + 4*d*n3 - 5*n1*n3 + 2*d*n1*n3 + 4*n2*n3 - 3*d*n2*n3 - n1*n2*n3 + 
      2*n2^2*n3 + 5*n3^2 - 3*d*n3^2 - 2*n1*n3^2 + 5*n2*n3^2 + 2*n3^3 - 
      10*n3*n5 + 4*d*n3*n5 - 3*n2*n3*n5 - 3*n3^2*n5)*
     j[p4, n1, n2, 1 + n3, 1, 1 + n5, 0, 0, -1, 1, 1, 0, 1, 1, 1])/
    ((-n2 + n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((10*n3 - 4*d*n3 + 5*n1*n3 - 2*d*n1*n3 - 4*n2*n3 + 3*d*n2*n3 + n1*n2*n3 - 
      2*n2^2*n3 - 5*n3^2 + 3*d*n3^2 + 2*n1*n3^2 - 5*n2*n3^2 - 2*n3^3 + 
      10*n3*n5 - 4*d*n3*n5 + 3*n2*n3*n5 + 3*n3^2*n5)*
     j[p4, n1, n2, 1 + n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 0, 1, 1])/
    (2*(-n2 + n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((110*n3 - 94*d*n3 + 25*d^2*n3 - 2*d^3*n3 + 110*n1*n3 - 69*d*n1*n3 + 
      10*d^2*n1*n3 + 15*n2*n3 - d*n2*n3 - d^2*n2*n3 + 41*n1*n2*n3 - 
      9*d*n1*n2*n3 - 11*n2^2*n3 + 3*d*n2^2*n3 - n1*n2^2*n3 - 19*n3^2 + 
      19*d*n3^2 - 4*d^2*n3^2 + 15*n1*n3^2 - 2*d*n1*n3^2 - 21*n2*n3^2 + 
      6*d*n2*n3^2 - 3*n1*n2*n3^2 - 10*n3^3 + 3*d*n3^3 - 2*n1*n3^3 + 
      85*n3*n5 - 54*d*n3*n5 + 8*d^2*n3*n5 + 30*n1*n3*n5 - 12*d*n1*n3*n5 + 
      26*n2*n3*n5 - 5*d*n2*n3*n5 + 12*n1*n2*n3*n5 - 3*n2^2*n3*n5 + 
      5*n3^2*n5 + d*n3^2*n5 + 6*n1*n3^2*n5 - 6*n2*n3^2*n5 - 3*n3^3*n5 + 
      15*n3*n5^2 - 6*d*n3*n5^2 + 6*n2*n3*n5^2 + 3*n3^2*n5^2)*
     j[p4, n1, n2, 1 + n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 0, 1])/
    ((-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((150*n3 - 90*d*n3 + 12*d^2*n3 + 15*n1*n3 - 6*d*n1*n3 + 36*n2*n3 - 
      3*d*n2*n3 + 3*n1*n2*n3 - 6*n2^2*n3 + 9*n3^2 + 3*d*n3^2 + 6*n1*n3^2 - 
      15*n2*n3^2 - 6*n3^3 + 60*n3*n5 - 24*d*n3*n5 + 21*n2*n3*n5 + 15*n3^2*n5)*
     j[p4, n1, n2, 1 + n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 1, 0])/
    (2*(-n2 + n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-10*n3 + 4*d*n3 - 5*n1*n3 + 2*d*n1*n3 + 4*n2*n3 - 3*d*n2*n3 - n1*n2*n3 + 
      2*n2^2*n3 + 5*n3^2 - 3*d*n3^2 - 2*n1*n3^2 + 5*n2*n3^2 + 2*n3^3 - 
      10*n3*n5 + 4*d*n3*n5 - 3*n2*n3*n5 - 3*n3^2*n5)*
     j[p4, n1, n2, 1 + n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-n2 + n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-20*n3 + 8*d*n3 + 5*n1*n3 - 2*d*n1*n3 - 6*n2*n3 - d*n2*n3 + n1*n2*n3 + 
      2*n2^2*n3 + 9*n3^2 - 5*d*n3^2 + 2*n1*n3^2 + 5*n2*n3^2 + 2*n3^3 - 
      10*n3*n5 + 4*d*n3*n5 - 5*n2*n3*n5 - n3^2*n5)*j[p4, n1, n2, 1 + n3, 1, 
      1 + n5, 0, 0, 0, 1, 1, 1, 1, 0, 1])/(2*(-n2 + n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((280*n3 - 277*d*n3 + 86*d^2*n3 - 8*d^3*n3 + 
      120*n1*n3 - 78*d*n1*n3 + 12*d^2*n1*n3 + 142*n2*n3 - 73*d*n2*n3 + 
      6*d^2*n2*n3 + 48*n1*n2*n3 - 12*d*n1*n2*n3 + 2*n2^2*n3 + 6*d*n2^2*n3 - 
      4*n2^3*n3 + 66*n3^2 - 22*d*n3^2 - 2*d^2*n3^2 + 24*n1*n3^2 - 
      6*d*n1*n3^2 - 20*n2*n3^2 + 19*d*n2*n3^2 - 14*n2^2*n3^2 - 18*n3^3 + 
      11*d*n3^3 - 14*n2*n3^3 - 4*n3^4 + 155*n3*n5 - 117*d*n3*n5 + 
      22*d^2*n3*n5 + 30*n1*n3*n5 - 12*d*n1*n3*n5 + 87*n2*n3*n5 - 
      32*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 10*n2^2*n3*n5 + 56*n3^2*n5 - 
      21*d*n3^2*n5 + 6*n1*n3^2*n5 + 15*n2*n3^2*n5 + 5*n3^3*n5 + 15*n3*n5^2 - 
      6*d*n3*n5^2 + 6*n2*n3*n5^2 + 3*n3^2*n5^2)*j[p4, n1, n2, 1 + n3, 1, 
      1 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 0])/((-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-460*n2 + 444*d*n2 - 134*d^2*n2 + 12*d^3*n2 - 230*n1*n2 + 147*d*n1*n2 - 
      22*d^2*n1*n2 - 210*n2^2 + 102*d*n2^2 - 7*d^2*n2^2 - 89*n1*n2^2 + 
      21*d*n1*n2^2 + 4*n2^3 - 11*d*n2^3 + n1*n2^3 + 6*n2^4 - 76*n2*n3 + 
      13*d*n2*n3 + 7*d^2*n2*n3 - 39*n1*n2*n3 + 8*d*n1*n2*n3 + 45*n2^2*n3 - 
      33*d*n2^2*n3 + 3*n1*n2^2*n3 + 21*n2^3*n3 + 35*n2*n3^2 - 19*d*n2*n3^2 + 
      2*n1*n2*n3^2 + 21*n2^2*n3^2 + 6*n2*n3^3 - 270*n2*n5 + 198*d*n2*n5 - 
      36*d^2*n2*n5 - 60*n1*n2*n5 + 24*d*n1*n2*n5 - 140*n2^2*n5 + 
      49*d*n2^2*n5 - 24*n1*n2^2*n5 - 13*n2^3*n5 - 82*n2*n3*n5 + 
      29*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 18*n2^2*n3*n5 - 5*n2*n3^2*n5 - 
      30*n2*n5^2 + 12*d*n2*n5^2 - 12*n2^2*n5^2 - 6*n2*n3*n5^2)*
     j[p4, n1, 1 + n2, -1 + n3, 1, 1 + n5, 0, 0, 0, 0, 1, 1, 1, 1, 1])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((10*n2 - 4*d*n2 + 4*n2^2 + 2*n2*n3)*j[p4, n1, 1 + n2, -1 + n3, 1, 1 + n5, 
      0, 0, 0, 1, 0, 1, 1, 1, 1])/((n2 - n3)*(-3 + d - n1 - n5)) + 
   ((-520*n2 + 518*d*n2 - 164*d^2*n2 + 16*d^3*n2 - 250*n1*n2 + 165*d*n1*n2 - 
      26*d^2*n1*n2 - 252*n2^2 + 134*d*n2^2 - 13*d^2*n2^2 - 103*n1*n2^2 + 
      27*d*n1*n2^2 - 2*n2^3 - 9*d*n2^3 - n1*n2^3 + 6*n2^4 - 130*n2*n3 + 
      55*d*n2*n3 - d^2*n2*n3 - 57*n1*n2*n3 + 16*d*n1*n2*n3 + 27*n2^2*n3 - 
      27*d*n2^2*n3 - 3*n1*n2^2*n3 + 21*n2^3*n3 + 23*n2*n3^2 - 15*d*n2*n3^2 - 
      2*n1*n2*n3^2 + 21*n2^2*n3^2 + 6*n2*n3^3 - 290*n2*n5 + 216*d*n2*n5 - 
      40*d^2*n2*n5 - 60*n1*n2*n5 + 24*d*n1*n2*n5 - 154*n2^2*n5 + 
      55*d*n2^2*n5 - 24*n1*n2^2*n5 - 15*n2^3*n5 - 100*n2*n3*n5 + 
      37*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 24*n2^2*n3*n5 - 9*n2*n3^2*n5 - 
      30*n2*n5^2 + 12*d*n2*n5^2 - 12*n2^2*n5^2 - 6*n2*n3*n5^2)*
     j[p4, n1, 1 + n2, -1 + n3, 1, 1 + n5, 0, 0, 0, 1, 1, 0, 1, 1, 1])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-130*n2 + 82*d*n2 - 12*d^2*n2 - 5*n1*n2 + 2*d*n1*n2 - 44*n2^2 + 
      9*d*n2^2 - n1*n2^2 + 2*n2^3 - 19*n2*n3 + 3*d*n2*n3 - 2*n1*n2*n3 + 
      5*n2^2*n3 + 2*n2*n3^2 - 40*n2*n5 + 16*d*n2*n5 - 15*n2^2*n5 - 
      9*n2*n3*n5)*j[p4, n1, 1 + n2, n3, 1, n5, 0, 0, 0, 1, 0, 1, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((490*n2 - 481*d*n2 + 149*d^2*n2 - 14*d^3*n2 + 240*n1*n2 - 156*d*n1*n2 + 
      24*d^2*n1*n2 + 231*n2^2 - 118*d*n2^2 + 10*d^2*n2^2 + 96*n1*n2^2 - 
      24*d*n1*n2^2 - n2^3 + 10*d*n2^3 - 6*n2^4 + 103*n2*n3 - 34*d*n2*n3 - 
      3*d^2*n2*n3 + 48*n1*n2*n3 - 12*d*n1*n2*n3 - 36*n2^2*n3 + 30*d*n2^2*n3 - 
      21*n2^3*n3 - 29*n2*n3^2 + 17*d*n2*n3^2 - 21*n2^2*n3^2 - 6*n2*n3^3 + 
      280*n2*n5 - 207*d*n2*n5 + 38*d^2*n2*n5 + 60*n1*n2*n5 - 24*d*n1*n2*n5 + 
      147*n2^2*n5 - 52*d*n2^2*n5 + 24*n1*n2^2*n5 + 14*n2^3*n5 + 91*n2*n3*n5 - 
      33*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 21*n2^2*n3*n5 + 7*n2*n3^2*n5 + 
      30*n2*n5^2 - 12*d*n2*n5^2 + 12*n2^2*n5^2 + 6*n2*n3*n5^2)*
     j[p4, n1, 1 + n2, n3, 1, n5, 0, 0, 0, 1, 1, 0, 1, 1, 1])/
    ((-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-220*n2 + 213*d*n2 - 65*d^2*n2 + 6*d^3*n2 - 110*n1*n2 + 69*d*n1*n2 - 
      10*d^2*n1*n2 - 104*n2^2 + 54*d*n2^2 - 5*d^2*n2^2 - 41*n1*n2^2 + 
      9*d*n1*n2^2 - 2*n2^3 - 3*d*n2^3 + n1*n2^3 + 2*n2^4 - 38*n2*n3 + 
      10*d*n2*n3 + 2*d^2*n2*n3 - 15*n1*n2*n3 + 2*d*n1*n2*n3 + 13*n2^2*n3 - 
      11*d*n2^2*n3 + 3*n1*n2^2*n3 + 7*n2^3*n3 + 13*n2*n3^2 - 7*d*n2*n3^2 + 
      2*n1*n2*n3^2 + 7*n2^2*n3^2 + 2*n2*n3^3 - 125*n2*n5 + 90*d*n2*n5 - 
      16*d^2*n2*n5 - 30*n1*n2*n5 + 12*d*n1*n2*n5 - 62*n2^2*n5 + 
      21*d*n2^2*n5 - 12*n1*n2^2*n5 - 5*n2^3*n5 - 33*n2*n3*n5 + 
      11*d*n2*n3*n5 - 6*n1*n2*n3*n5 - 6*n2^2*n3*n5 - n2*n3^2*n5 - 
      15*n2*n5^2 + 6*d*n2*n5^2 - 6*n2^2*n5^2 - 3*n2*n3*n5^2)*
     j[p4, n1, 1 + n2, n3, 1, n5, 0, 0, 0, 1, 1, 1, 0, 1, 1])/
    ((-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((420*n2 - 408*d*n2 + 126*d^2*n2 - 12*d^3*n2 + 210*n1*n2 - 129*d*n1*n2 + 
      18*d^2*n1*n2 + 206*n2^2 - 114*d*n2^2 + 13*d^2*n2^2 + 75*n1*n2^2 - 
      15*d*n1*n2^2 + 12*n2^3 + d*n2^3 - 3*n1*n2^3 - 2*n2^4 + 76*n2*n3 - 
      27*d*n2*n3 - d^2*n2*n3 + 21*n1*n2*n3 - 7*n2^2*n3 + 11*d*n2^2*n3 - 
      9*n1*n2^2*n3 - 7*n2^3*n3 - 17*n2*n3^2 + 9*d*n2*n3^2 - 6*n1*n2*n3^2 - 
      7*n2^2*n3^2 - 2*n2*n3^3 + 230*n2*n5 - 162*d*n2*n5 + 28*d^2*n2*n5 + 
      60*n1*n2*n5 - 24*d*n1*n2*n5 + 108*n2^2*n5 - 35*d*n2^2*n5 + 
      24*n1*n2^2*n5 + 7*n2^3*n5 + 50*n2*n3*n5 - 15*d*n2*n3*n5 + 
      12*n1*n2*n3*n5 + 6*n2^2*n3*n5 - n2*n3^2*n5 + 30*n2*n5^2 - 
      12*d*n2*n5^2 + 12*n2^2*n5^2 + 6*n2*n3*n5^2)*j[p4, n1, 1 + n2, n3, 1, 
      n5, 0, 0, 0, 1, 1, 1, 1, 0, 1])/(2*(-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-10*n2 + 4*d*n2 - 4*n2^2 - 2*n2*n3)*j[p4, n1, 1 + n2, n3, 1, n5, 0, 0, 
      0, 1, 1, 1, 1, 1, 1])/((n2 - n3)*(-3 + d - n1 - n5)) + 
   ((50*n2 - 30*d*n2 + 4*d^2*n2 + 5*n1*n2 - 2*d*n1*n2 + 12*n2^2 - d*n2^2 + 
      n1*n2^2 - 2*n2^3 + 3*n2*n3 + d*n2*n3 + 2*n1*n2*n3 - 5*n2^2*n3 - 
      2*n2*n3^2 + 20*n2*n5 - 8*d*n2*n5 + 7*n2^2*n5 + 5*n2*n3*n5)*
     j[p4, n1, 1 + n2, n3, 1, 1 + n5, -1, 0, 0, 1, 0, 1, 1, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((10*n2 - 4*d*n2 + 5*n1*n2 - 2*d*n1*n2 - 4*n2^2 + 3*d*n2^2 + n1*n2^2 - 
      2*n2^3 - 5*n2*n3 + 3*d*n2*n3 + 2*n1*n2*n3 - 5*n2^2*n3 - 2*n2*n3^2 + 
      10*n2*n5 - 4*d*n2*n5 + 3*n2^2*n5 + 3*n2*n3*n5)*
     j[p4, n1, 1 + n2, n3, 1, 1 + n5, -1, 0, 0, 1, 1, 1, 0, 1, 1])/
    (2*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((560*n2 - 554*d*n2 + 172*d^2*n2 - 16*d^3*n2 + 270*n1*n2 - 183*d*n1*n2 + 
      30*d^2*n1*n2 + 256*n2^2 - 122*d*n2^2 + 7*d^2*n2^2 + 117*n1*n2^2 - 
      33*d*n1*n2^2 - 14*n2^3 + 19*d*n2^3 + 3*n1*n2^3 - 10*n2^4 + 130*n2*n3 - 
      41*d*n2*n3 - 5*d^2*n2*n3 + 75*n1*n2*n3 - 24*d*n1*n2*n3 - 65*n2^2*n3 + 
      49*d*n2^2*n3 + 9*n1*n2^2*n3 - 35*n2^3*n3 - 41*n2*n3^2 + 25*d*n2*n3^2 + 
      6*n1*n2*n3^2 - 35*n2^2*n3^2 - 10*n2*n3^3 + 330*n2*n5 - 252*d*n2*n5 + 
      48*d^2*n2*n5 + 60*n1*n2*n5 - 24*d*n1*n2*n5 + 186*n2^2*n5 - 
      69*d*n2^2*n5 + 24*n1*n2^2*n5 + 21*n2^3*n5 + 132*n2*n3*n5 - 
      51*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 36*n2^2*n3*n5 + 15*n2*n3^2*n5 + 
      30*n2*n5^2 - 12*d*n2*n5^2 + 12*n2^2*n5^2 + 6*n2*n3*n5^2)*
     j[p4, n1, 1 + n2, n3, 1, 1 + n5, -1, 0, 0, 1, 1, 1, 1, 0, 1])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-25*n2 + 15*d*n2 - 2*d^2*n2 + 5*n1*n2 - 2*d*n1*n2 - 13*n2^2 + 3*d*n2^2 + 
      n1*n2^2 - 2*n2*n3 + 2*n1*n2*n3 - 5*n2*n5 + 2*d*n2*n5 - 3*n2^2*n5)*
     j[p4, n1, 1 + n2, n3, 1, 1 + n5, -1, 0, 0, 1, 1, 1, 1, 1, 1])/
    ((n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((460*n2 - 444*d*n2 + 134*d^2*n2 - 12*d^3*n2 + 230*n1*n2 - 147*d*n1*n2 + 
      22*d^2*n1*n2 + 210*n2^2 - 102*d*n2^2 + 7*d^2*n2^2 + 89*n1*n2^2 - 
      21*d*n1*n2^2 - 4*n2^3 + 11*d*n2^3 - n1*n2^3 - 6*n2^4 + 76*n2*n3 - 
      13*d*n2*n3 - 7*d^2*n2*n3 + 39*n1*n2*n3 - 8*d*n1*n2*n3 - 45*n2^2*n3 + 
      33*d*n2^2*n3 - 3*n1*n2^2*n3 - 21*n2^3*n3 - 35*n2*n3^2 + 19*d*n2*n3^2 - 
      2*n1*n2*n3^2 - 21*n2^2*n3^2 - 6*n2*n3^3 + 270*n2*n5 - 198*d*n2*n5 + 
      36*d^2*n2*n5 + 60*n1*n2*n5 - 24*d*n1*n2*n5 + 140*n2^2*n5 - 
      49*d*n2^2*n5 + 24*n1*n2^2*n5 + 13*n2^3*n5 + 82*n2*n3*n5 - 
      29*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 18*n2^2*n3*n5 + 5*n2*n3^2*n5 + 
      30*n2*n5^2 - 12*d*n2*n5^2 + 12*n2^2*n5^2 + 6*n2*n3*n5^2)*
     j[p4, n1, 1 + n2, n3, 1, 1 + n5, 0, -1, 0, 0, 1, 1, 1, 1, 1])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-40*n2 + 146*d*n2 - 92*d^2*n2 + 16*d^3*n2 + 230*n1*n2 - 147*d*n1*n2 + 
      22*d^2*n1*n2 - 260*n2^2 + 242*d*n2^2 - 53*d^2*n2^2 + 89*n1*n2^2 - 
      21*d*n1*n2^2 - 122*n2^3 + 47*d*n2^3 - n1*n2^3 - 10*n2^4 - 314*n2*n3 + 
      271*d*n2*n3 - 57*d^2*n2*n3 + 39*n1*n2*n3 - 8*d*n1*n2*n3 - 245*n2^2*n3 + 
      97*d*n2^2*n3 - 3*n1*n2^2*n3 - 35*n2^3*n3 - 113*n2*n3^2 + 45*d*n2*n3^2 - 
      2*n1*n2*n3^2 - 35*n2^2*n3^2 - 10*n2*n3^3 + 170*n2*n5 - 108*d*n2*n5 + 
      16*d^2*n2*n5 + 60*n1*n2*n5 - 24*d*n1*n2*n5 + 50*n2^2*n5 - 9*d*n2^2*n5 + 
      24*n1*n2^2*n5 - 7*n2^3*n5 + 12*n2*n3*n5 + d*n2*n3*n5 + 12*n1*n2*n3*n5 - 
      12*n2^2*n3*n5 - 5*n2*n3^2*n5 + 30*n2*n5^2 - 12*d*n2*n5^2 + 
      12*n2^2*n5^2 + 6*n2*n3*n5^2)*j[p4, n1, 1 + n2, n3, 1, 1 + n5, 0, -1, 0, 
      1, 0, 1, 1, 1, 1])/(2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((520*n2 - 518*d*n2 + 164*d^2*n2 - 16*d^3*n2 + 
      250*n1*n2 - 165*d*n1*n2 + 26*d^2*n1*n2 + 252*n2^2 - 134*d*n2^2 + 
      13*d^2*n2^2 + 103*n1*n2^2 - 27*d*n1*n2^2 + 2*n2^3 + 9*d*n2^3 + 
      n1*n2^3 - 6*n2^4 + 130*n2*n3 - 55*d*n2*n3 + d^2*n2*n3 + 57*n1*n2*n3 - 
      16*d*n1*n2*n3 - 27*n2^2*n3 + 27*d*n2^2*n3 + 3*n1*n2^2*n3 - 21*n2^3*n3 - 
      23*n2*n3^2 + 15*d*n2*n3^2 + 2*n1*n2*n3^2 - 21*n2^2*n3^2 - 6*n2*n3^3 + 
      290*n2*n5 - 216*d*n2*n5 + 40*d^2*n2*n5 + 60*n1*n2*n5 - 24*d*n1*n2*n5 + 
      154*n2^2*n5 - 55*d*n2^2*n5 + 24*n1*n2^2*n5 + 15*n2^3*n5 + 
      100*n2*n3*n5 - 37*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 24*n2^2*n3*n5 + 
      9*n2*n3^2*n5 + 30*n2*n5^2 - 12*d*n2*n5^2 + 12*n2^2*n5^2 + 6*n2*n3*n5^2)*
     j[p4, n1, 1 + n2, n3, 1, 1 + n5, 0, -1, 0, 1, 1, 0, 1, 1, 1])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-240*n2 + 206*d*n2 - 54*d^2*n2 + 4*d^3*n2 - 230*n1*n2 + 147*d*n1*n2 - 
      22*d^2*n1*n2 - 32*n2^2 - 4*d*n2^2 + 5*d^2*n2^2 - 89*n1*n2^2 + 
      21*d*n1*n2^2 + 30*n2^3 - 11*d*n2^3 + n1*n2^3 + 2*n2^4 + 38*n2*n3 - 
      45*d*n2*n3 + 11*d^2*n2*n3 - 39*n1*n2*n3 + 8*d*n1*n2*n3 + 61*n2^2*n3 - 
      23*d*n2^2*n3 + 3*n1*n2^2*n3 + 7*n2^3*n3 + 29*n2*n3^2 - 11*d*n2*n3^2 + 
      2*n1*n2*n3^2 + 7*n2^2*n3^2 + 2*n2*n3^3 - 190*n2*n5 + 126*d*n2*n5 - 
      20*d^2*n2*n5 - 60*n1*n2*n5 + 24*d*n1*n2*n5 - 68*n2^2*n5 + 
      17*d*n2^2*n5 - 24*n1*n2^2*n5 + 3*n2^3*n5 - 26*n2*n3*n5 + 5*d*n2*n3*n5 - 
      12*n1*n2*n3*n5 + 6*n2^2*n3*n5 + 3*n2*n3^2*n5 - 30*n2*n5^2 + 
      12*d*n2*n5^2 - 12*n2^2*n5^2 - 6*n2*n3*n5^2)*j[p4, n1, 1 + n2, n3, 1, 
      1 + n5, 0, -1, 0, 1, 1, 1, 0, 1, 1])/(2*(-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((940*n2 - 856*d*n2 + 242*d^2*n2 - 20*d^3*n2 + 690*n1*n2 - 441*d*n1*n2 + 
      66*d^2*n1*n2 + 274*n2^2 - 94*d*n2^2 - 3*d^2*n2^2 + 267*n1*n2^2 - 
      63*d*n1*n2^2 - 64*n2^3 + 33*d*n2^3 - 3*n1*n2^3 - 10*n2^4 + 77*d*n2*n3 - 
      29*d^2*n2*n3 + 117*n1*n2*n3 - 24*d*n1*n2*n3 - 167*n2^2*n3 + 
      79*d*n2^2*n3 - 9*n1*n2^2*n3 - 35*n2^3*n3 - 93*n2*n3^2 + 41*d*n2*n3^2 - 
      6*n1*n2*n3^2 - 35*n2^2*n3^2 - 10*n2*n3^3 + 650*n2*n5 - 450*d*n2*n5 + 
      76*d^2*n2*n5 + 180*n1*n2*n5 - 72*d*n1*n2*n5 + 276*n2^2*n5 - 
      83*d*n2^2*n5 + 72*n1*n2^2*n5 + 7*n2^3*n5 + 134*n2*n3*n5 - 
      39*d*n2*n3*n5 + 36*n1*n2*n3*n5 + 6*n2^2*n3*n5 - n2*n3^2*n5 + 
      90*n2*n5^2 - 36*d*n2*n5^2 + 36*n2^2*n5^2 + 18*n2*n3*n5^2)*
     j[p4, n1, 1 + n2, n3, 1, 1 + n5, 0, -1, 0, 1, 1, 1, 1, 0, 1])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-230*n2 + 187*d*n2 - 43*d^2*n2 + 2*d^3*n2 - 230*n1*n2 + 147*d*n1*n2 - 
      22*d^2*n1*n2 - 13*n2^2 - 26*d*n2^2 + 11*d^2*n2^2 - 89*n1*n2^2 + 
      21*d*n1*n2^2 + 41*n2^3 - 17*d*n2^3 + n1*n2^3 + 4*n2^4 + 65*n2*n3 - 
      73*d*n2*n3 + 18*d^2*n2*n3 - 39*n1*n2*n3 + 8*d*n1*n2*n3 + 89*n2^2*n3 - 
      37*d*n2^2*n3 + 3*n1*n2^2*n3 + 14*n2^3*n3 + 44*n2*n3^2 - 18*d*n2*n3^2 + 
      2*n1*n2*n3^2 + 14*n2^2*n3^2 + 4*n2*n3^3 - 200*n2*n5 + 135*d*n2*n5 - 
      22*d^2*n2*n5 - 60*n1*n2*n5 + 24*d*n1*n2*n5 - 77*n2^2*n5 + 
      21*d*n2^2*n5 - 24*n1*n2^2*n5 + n2^3*n5 - 33*n2*n3*n5 + 8*d*n2*n3*n5 - 
      12*n1*n2*n3*n5 + 3*n2^2*n3*n5 + 2*n2*n3^2*n5 - 30*n2*n5^2 + 
      12*d*n2*n5^2 - 12*n2^2*n5^2 - 6*n2*n3*n5^2)*j[p4, n1, 1 + n2, n3, 1, 
      1 + n5, 0, -1, 0, 1, 1, 1, 1, 1, 1])/((-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-520*n2 + 518*d*n2 - 164*d^2*n2 + 16*d^3*n2 - 250*n1*n2 + 165*d*n1*n2 - 
      26*d^2*n1*n2 - 252*n2^2 + 134*d*n2^2 - 13*d^2*n2^2 - 103*n1*n2^2 + 
      27*d*n1*n2^2 - 2*n2^3 - 9*d*n2^3 - n1*n2^3 + 6*n2^4 - 130*n2*n3 + 
      55*d*n2*n3 - d^2*n2*n3 - 57*n1*n2*n3 + 16*d*n1*n2*n3 + 27*n2^2*n3 - 
      27*d*n2^2*n3 - 3*n1*n2^2*n3 + 21*n2^3*n3 + 23*n2*n3^2 - 15*d*n2*n3^2 - 
      2*n1*n2*n3^2 + 21*n2^2*n3^2 + 6*n2*n3^3 - 290*n2*n5 + 216*d*n2*n5 - 
      40*d^2*n2*n5 - 60*n1*n2*n5 + 24*d*n1*n2*n5 - 154*n2^2*n5 + 
      55*d*n2^2*n5 - 24*n1*n2^2*n5 - 15*n2^3*n5 - 100*n2*n3*n5 + 
      37*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 24*n2^2*n3*n5 - 9*n2*n3^2*n5 - 
      30*n2*n5^2 + 12*d*n2*n5^2 - 12*n2^2*n5^2 - 6*n2*n3*n5^2)*
     j[p4, n1, 1 + n2, n3, 1, 1 + n5, 0, 0, -1, 0, 1, 1, 1, 1, 1])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-480*n2 + 482*d*n2 - 156*d^2*n2 + 16*d^3*n2 - 230*n1*n2 + 147*d*n1*n2 - 
      22*d^2*n1*n2 - 248*n2^2 + 146*d*n2^2 - 19*d^2*n2^2 - 89*n1*n2^2 + 
      21*d*n1*n2^2 - 18*n2^3 + d*n2^3 + n1*n2^3 + 2*n2^4 - 130*n2*n3 + 
      69*d*n2*n3 - 7*d^2*n2*n3 - 39*n1*n2*n3 + 8*d*n1*n2*n3 - 11*n2^2*n3 - 
      5*d*n2^2*n3 + 3*n1*n2^2*n3 + 7*n2^3*n3 + 5*n2*n3^2 - 5*d*n2*n3^2 + 
      2*n1*n2*n3^2 + 7*n2^2*n3^2 + 2*n2*n3^3 - 250*n2*n5 + 180*d*n2*n5 - 
      32*d^2*n2*n5 - 60*n1*n2*n5 + 24*d*n1*n2*n5 - 122*n2^2*n5 + 
      41*d*n2^2*n5 - 24*n1*n2^2*n5 - 9*n2^3*n5 - 68*n2*n3*n5 + 
      23*d*n2*n3*n5 - 12*n1*n2*n3*n5 - 12*n2^2*n3*n5 - 3*n2*n3^2*n5 - 
      30*n2*n5^2 + 12*d*n2*n5^2 - 12*n2^2*n5^2 - 6*n2*n3*n5^2)*
     j[p4, n1, 1 + n2, n3, 1, 1 + n5, 0, 0, -1, 1, 0, 1, 1, 1, 1])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((520*n2 - 518*d*n2 + 164*d^2*n2 - 16*d^3*n2 + 250*n1*n2 - 165*d*n1*n2 + 
      26*d^2*n1*n2 + 252*n2^2 - 134*d*n2^2 + 13*d^2*n2^2 + 103*n1*n2^2 - 
      27*d*n1*n2^2 + 2*n2^3 + 9*d*n2^3 + n1*n2^3 - 6*n2^4 + 130*n2*n3 - 
      55*d*n2*n3 + d^2*n2*n3 + 57*n1*n2*n3 - 16*d*n1*n2*n3 - 27*n2^2*n3 + 
      27*d*n2^2*n3 + 3*n1*n2^2*n3 - 21*n2^3*n3 - 23*n2*n3^2 + 15*d*n2*n3^2 + 
      2*n1*n2*n3^2 - 21*n2^2*n3^2 - 6*n2*n3^3 + 290*n2*n5 - 216*d*n2*n5 + 
      40*d^2*n2*n5 + 60*n1*n2*n5 - 24*d*n1*n2*n5 + 154*n2^2*n5 - 
      55*d*n2^2*n5 + 24*n1*n2^2*n5 + 15*n2^3*n5 + 100*n2*n3*n5 - 
      37*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 24*n2^2*n3*n5 + 9*n2*n3^2*n5 + 
      30*n2*n5^2 - 12*d*n2*n5^2 + 12*n2^2*n5^2 + 6*n2*n3*n5^2)*
     j[p4, n1, 1 + n2, n3, 1, 1 + n5, 0, 0, -1, 1, 1, 0, 1, 1, 1])/
    (2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((70*n2 - 43*d*n2 + 6*d^2*n2 + 5*n1*n2 - 2*d*n1*n2 + 20*n2^2 - 3*d*n2^2 + 
      n1*n2^2 - 2*n2^3 + 7*n2*n3 + 2*n1*n2*n3 - 5*n2^2*n3 - 2*n2*n3^2 + 
      25*n2*n5 - 10*d*n2*n5 + 9*n2^2*n5 + 6*n2*n3*n5)*
     j[p4, n1, 1 + n2, n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 0, 1, 1])/
    ((n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((40*n2 - 106*d*n2 + 56*d^2*n2 - 8*d^3*n2 - 210*n1*n2 + 129*d*n1*n2 - 
      18*d^2*n1*n2 + 188*n2^2 - 142*d*n2^2 + 23*d^2*n2^2 - 75*n1*n2^2 + 
      15*d*n1*n2^2 + 62*n2^3 - 13*d*n2^3 + 3*n1*n2^3 - 2*n2^4 + 206*n2*n3 - 
      145*d*n2*n3 + 23*d^2*n2*n3 - 21*n1*n2*n3 + 95*n2^2*n3 - 19*d*n2^2*n3 + 
      9*n1*n2^2*n3 - 7*n2^3*n3 + 35*n2*n3^2 - 7*d*n2*n3^2 + 6*n1*n2*n3^2 - 
      7*n2^2*n3^2 - 2*n2*n3^3 - 90*n2*n5 + 36*d*n2*n5 - 60*n1*n2*n5 + 
      24*d*n1*n2*n5 + 18*n2^2*n5 - 21*d*n2^2*n5 - 24*n1*n2^2*n5 + 
      21*n2^3*n5 + 48*n2*n3*n5 - 27*d*n2*n3*n5 - 12*n1*n2*n3*n5 + 
      36*n2^2*n3*n5 + 15*n2*n3^2*n5 - 30*n2*n5^2 + 12*d*n2*n5^2 - 
      12*n2^2*n5^2 - 6*n2*n3*n5^2)*j[p4, n1, 1 + n2, n3, 1, 1 + n5, 0, 0, -1, 
      1, 1, 1, 1, 0, 1])/(2*(-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*
     (-3 + d - n1 - n5)) + ((260*n2 - 224*d*n2 + 58*d^2*n2 - 4*d^3*n2 + 
      240*n1*n2 - 156*d*n1*n2 + 24*d^2*n1*n2 + 34*n2^2 + 10*d*n2^2 - 
      8*d^2*n2^2 + 96*n1*n2^2 - 24*d*n1*n2^2 - 38*n2^3 + 16*d*n2^3 - 4*n2^4 - 
      38*n2*n3 + 52*d*n2*n3 - 14*d^2*n2*n3 + 48*n1*n2*n3 - 12*d*n1*n2*n3 - 
      80*n2^2*n3 + 34*d*n2^2*n3 - 14*n2^3*n3 - 38*n2*n3^2 + 16*d*n2*n3^2 - 
      14*n2^2*n3^2 - 4*n2*n3^3 + 210*n2*n5 - 144*d*n2*n5 + 24*d^2*n2*n5 + 
      60*n1*n2*n5 - 24*d*n1*n2*n5 + 84*n2^2*n5 - 24*d*n2^2*n5 + 
      24*n1*n2^2*n5 + 42*n2*n3*n5 - 12*d*n2*n3*n5 + 12*n1*n2*n3*n5 + 
      30*n2*n5^2 - 12*d*n2*n5^2 + 12*n2^2*n5^2 + 6*n2*n3*n5^2)*
     j[p4, n1, 1 + n2, n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 1, 1])/
    ((-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-15*n1 + 6*d*n1 - 6*n1*n2 - 3*n1*n3)*j[p4, 1 + n1, -1 + n2, n3, 1, 
      1 + n5, 0, 0, 0, 1, 1, 1, 1, 0, 1])/((n2 - n3)*(-3 + d - n1 - n5)) + 
   ((30*n1 - 12*d*n1 + 12*n1*n2 + 6*n1*n3)*j[p4, 1 + n1, -1 + n2, n3, 1, 
      1 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 1])/((n2 - n3)*(-3 + d - n1 - n5)) + 
   ((70*n1 - 43*d*n1 + 6*d^2*n1 + 5*n1^2 - 2*d*n1^2 + 20*n1*n2 - 3*d*n1*n2 + 
      n1^2*n2 - 2*n1*n2^2 + 7*n1*n3 + 2*n1^2*n3 - 5*n1*n2*n3 - 2*n1*n3^2 + 
      25*n1*n5 - 10*d*n1*n5 + 9*n1*n2*n5 + 6*n1*n3*n5)*
     j[p4, 1 + n1, n2, n3, 1, n5, 0, 0, 0, 1, 1, 0, 1, 1, 1])/
    ((n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((220*n1 - 213*d*n1 + 65*d^2*n1 - 6*d^3*n1 + 110*n1^2 - 69*d*n1^2 + 
      10*d^2*n1^2 + 104*n1*n2 - 54*d*n1*n2 + 5*d^2*n1*n2 + 41*n1^2*n2 - 
      9*d*n1^2*n2 + 2*n1*n2^2 + 3*d*n1*n2^2 - n1^2*n2^2 - 2*n1*n2^3 + 
      38*n1*n3 - 10*d*n1*n3 - 2*d^2*n1*n3 + 15*n1^2*n3 - 2*d*n1^2*n3 - 
      13*n1*n2*n3 + 11*d*n1*n2*n3 - 3*n1^2*n2*n3 - 7*n1*n2^2*n3 - 
      13*n1*n3^2 + 7*d*n1*n3^2 - 2*n1^2*n3^2 - 7*n1*n2*n3^2 - 2*n1*n3^3 + 
      125*n1*n5 - 90*d*n1*n5 + 16*d^2*n1*n5 + 30*n1^2*n5 - 12*d*n1^2*n5 + 
      62*n1*n2*n5 - 21*d*n1*n2*n5 + 12*n1^2*n2*n5 + 5*n1*n2^2*n5 + 
      33*n1*n3*n5 - 11*d*n1*n3*n5 + 6*n1^2*n3*n5 + 6*n1*n2*n3*n5 + 
      n1*n3^2*n5 + 15*n1*n5^2 - 6*d*n1*n5^2 + 6*n1*n2*n5^2 + 3*n1*n3*n5^2)*
     j[p4, 1 + n1, n2, n3, 1, n5, 0, 0, 0, 1, 1, 1, 1, 0, 1])/
    ((-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-540*n1 + 536*d*n1 - 168*d^2*n1 + 16*d^3*n1 - 230*n1^2 + 147*d*n1^2 - 
      22*d^2*n1^2 - 282*n1*n2 + 152*d*n1*n2 - 15*d^2*n1*n2 - 89*n1^2*n2 + 
      21*d*n1^2*n2 - 12*n1*n2^2 - 7*d*n1*n2^2 + n1^2*n2^2 + 6*n1*n2^3 - 
      132*n1*n3 + 51*d*n1*n3 + d^2*n1*n3 - 39*n1^2*n3 + 8*d*n1^2*n3 + 
      21*n1*n2*n3 - 27*d*n1*n2*n3 + 3*n1^2*n2*n3 + 21*n1*n2^2*n3 + 
      27*n1*n3^2 - 17*d*n1*n3^2 + 2*n1^2*n3^2 + 21*n1*n2*n3^2 + 6*n1*n3^3 - 
      290*n1*n5 + 216*d*n1*n5 - 40*d^2*n1*n5 - 60*n1^2*n5 + 24*d*n1^2*n5 - 
      158*n1*n2*n5 + 57*d*n1*n2*n5 - 24*n1^2*n2*n5 - 17*n1*n2^2*n5 - 
      96*n1*n3*n5 + 35*d*n1*n3*n5 - 12*n1^2*n3*n5 - 24*n1*n2*n3*n5 - 
      7*n1*n3^2*n5 - 30*n1*n5^2 + 12*d*n1*n5^2 - 12*n1*n2*n5^2 - 
      6*n1*n3*n5^2)*j[p4, 1 + n1, n2, n3, 1, n5, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    ((-2 + d - n2 - n3)*(n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-70*n1 + 43*d*n1 - 6*d^2*n1 - 5*n1^2 + 2*d*n1^2 - 20*n1*n2 + 3*d*n1*n2 - 
      n1^2*n2 + 2*n1*n2^2 - 7*n1*n3 - 2*n1^2*n3 + 5*n1*n2*n3 + 2*n1*n3^2 - 
      25*n1*n5 + 10*d*n1*n5 - 9*n1*n2*n5 - 6*n1*n3*n5)*
     j[p4, 1 + n1, n2, n3, 1, 1 + n5, 0, 0, -1, 0, 1, 1, 1, 1, 1])/
    ((n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-70*n1 + 43*d*n1 - 6*d^2*n1 - 5*n1^2 + 2*d*n1^2 - 20*n1*n2 + 3*d*n1*n2 - 
      n1^2*n2 + 2*n1*n2^2 - 7*n1*n3 - 2*n1^2*n3 + 5*n1*n2*n3 + 2*n1*n3^2 - 
      25*n1*n5 + 10*d*n1*n5 - 9*n1*n2*n5 - 6*n1*n3*n5)*
     j[p4, 1 + n1, n2, n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 0, 1])/
    ((n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((130*n1 - 82*d*n1 + 12*d^2*n1 + 5*n1^2 - 2*d*n1^2 + 44*n1*n2 - 
      9*d*n1*n2 + n1^2*n2 - 2*n1*n2^2 + 19*n1*n3 - 3*d*n1*n3 + 2*n1^2*n3 - 
      5*n1*n2*n3 - 2*n1*n3^2 + 40*n1*n5 - 16*d*n1*n5 + 15*n1*n2*n5 + 
      9*n1*n3*n5)*j[p4, 1 + n1, n2, n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 1, 
      1])/((n2 - n3)*(-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((320*n1 - 323*d*n1 + 103*d^2*n1 - 10*d^3*n1 + 120*n1^2 - 78*d*n1^2 + 
      12*d^2*n1^2 + 178*n1*n2 - 98*d*n1*n2 + 10*d^2*n1*n2 + 48*n1^2*n2 - 
      12*d*n1^2*n2 + 10*n1*n2^2 + 4*d*n1*n2^2 - 4*n1*n2^3 + 94*n1*n3 - 
      41*d*n1*n3 + d^2*n1*n3 + 24*n1^2*n3 - 6*d*n1^2*n3 - 8*n1*n2*n3 + 
      16*d*n1*n2*n3 - 14*n1*n2^2*n3 - 14*n1*n3^2 + 10*d*n1*n3^2 - 
      14*n1*n2*n3^2 - 4*n1*n3^3 + 165*n1*n5 - 126*d*n1*n5 + 24*d^2*n1*n5 + 
      30*n1^2*n5 - 12*d*n1^2*n5 + 96*n1*n2*n5 - 36*d*n1*n2*n5 + 
      12*n1^2*n2*n5 + 12*n1*n2^2*n5 + 63*n1*n3*n5 - 24*d*n1*n3*n5 + 
      6*n1^2*n3*n5 + 18*n1*n2*n3*n5 + 6*n1*n3^2*n5 + 15*n1*n5^2 - 
      6*d*n1*n5^2 + 6*n1*n2*n5^2 + 3*n1*n3*n5^2)*j[p4, 1 + n1, n2, n3, 1, 
      1 + n5, 0, 0, 0, 0, 1, 1, 1, 1, 1])/((-2 + d - n2 - n3)*(n2 - n3)*
     (-4 + d - n5)*(-3 + d - n1 - n5)) + 
   ((-15*n1 + 6*d*n1 - 6*n1*n2 - 3*n1*n3)*j[p4, 1 + n1, n2, n3, 1, 1 + n5, 0, 
      0, 0, 1, 0, 1, 1, 1, 1])/((n2 - n3)*(-3 + d - n1 - n5)) + 
   ((15*n1 - 6*d*n1 + 6*n1*n2 + 3*n1*n3)*j[p4, 1 + n1, n2, n3, 1, 1 + n5, 0, 
      0, 0, 1, 1, 0, 1, 1, 1])/((n2 - n3)*(-3 + d - n1 - n5)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 1 && n13 == 1 && n14 == 1 && n2 == n3 && 
    n4 == 1 && n6 == 0 && n7 == 0 && n8 == -1 && n9 == 1 && n5 != 0 -> 
  ((-1 - n5)*j[p4, -1 + n1, -1 + n3, -1 + n3, 1, 2 + n5, 0, 0, 0, 1, 1, 1, 1, 
      1, 1])/(-1 + n1) + ((-3 + d + n1 - 5*n3 + d*n3 - 2*n3^2 - 2*n5 + d*n5 - 
      2*n3*n5)*j[p4, -1 + n1, -1 + n3, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 
      1])/((-1 + n1)*(-2 + d - 2*n3)) + 
   ((1 + n5)*j[p4, -1 + n1, -1 + n3, n3, 1, 2 + n5, 0, -1, 0, 1, 1, 1, 1, 1, 
      1])/(-1 + n1) + ((n3 - d*n3 + 2*n3^2)*j[p4, -1 + n1, -1 + n3, 1 + n3, 
      1, n5, 0, 0, 0, 1, 1, 1, 1, 1, 1])/((-1 + n1)*(-2 + d - 2*n3)) + 
   ((-n3 + d*n3 - 2*n3^2)*j[p4, -1 + n1, -1 + n3, 1 + n3, 1, 1 + n5, 0, -1, 
      0, 1, 1, 1, 1, 1, 1])/((-1 + n1)*(-2 + d - 2*n3)) + 
   ((-1 - n5)*j[p4, -1 + n1, n3, -1 + n3, 0, 2 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 
      1])/(-1 + n1) + j[p4, -1 + n1, n3, -1 + n3, 1, 1 + n5, 0, 0, 0, 1, 1, 
     1, 0, 2, 1]/(-1 + n1) + ((-4 + 2*d - 3*n3 - 4*n5 + 2*d*n5 - 4*n3*n5)*
     j[p4, -1 + n1, n3, -1 + n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    ((-1 + n1)*(-2 + d - 2*n3)) + j[p4, -1 + n1, n3, -1 + n3, 1, 1 + n5, 0, 
     0, 0, 1, 1, 1, 1, 2, 0]/(1 - n1) + 
   ((1 + n5)*j[p4, -1 + n1, n3, -1 + n3, 1, 2 + n5, -1, 0, 0, 1, 1, 1, 1, 1, 
      1])/(-1 + n1) + ((1 + n5)*j[p4, -1 + n1, n3, -1 + n3, 1, 2 + n5, 0, -1, 
      0, 1, 1, 1, 1, 1, 1])/(-1 + n1) + 
   ((n3 + n3*n5)*j[p4, -1 + n1, n3, -1 + n3, 1, 2 + n5, 0, 0, -1, 1, 1, 1, 1, 
      1, 1])/((-1 + n1)*(2 - d + 2*n3)) + 
   ((-1 + n1 - 3*n3 + d*n3 - 2*n3^2)*j[p4, -1 + n1, n3, n3, 0, 1 + n5, 0, 0, 
      0, 1, 1, 1, 1, 1, 1])/((-1 + n1)*(-2 + d - 2*n3)) + 
   ((1 + n5)*j[p4, -1 + n1, n3, n3, 0, 2 + n5, 0, -1, 0, 1, 1, 1, 1, 1, 1])/
    (-1 + n1) + ((1 + n5)*j[p4, -1 + n1, n3, n3, 0, 2 + n5, 0, 0, -1, 1, 1, 
      1, 1, 1, 1])/(-1 + n1) + j[p4, -1 + n1, n3, n3, 1, n5, 0, 0, 0, 1, 1, 
     1, 0, 2, 1]/(1 - n1) + ((-1 + n1 - n3)*j[p4, -1 + n1, n3, n3, 1, n5, 0, 
      0, 0, 1, 1, 1, 1, 1, 1])/((-1 + n1)*(2 - d + 2*n3)) + 
   ((15 - 13*d + 3*d^2 + n1 - d*n1 + 25*n3 - 11*d*n3 + 2*n1*n3 + 10*n3^2 + 
      4*n5 - 2*d*n5 + 4*n3*n5)*j[p4, -1 + n1, n3, n3, 1, 1 + n5, -1, 0, 0, 1, 
      1, 1, 1, 1, 1])/((-1 + n1)*(-2 + d - 2*n3)) + 
   (2*j[p4, -1 + n1, n3, n3, 1, 1 + n5, -1, 0, 0, 1, 2, 0, 1, 1, 1])/
    (-1 + n1) - (2*j[p4, -1 + n1, n3, n3, 1, 1 + n5, 0, -1, 0, 0, 2, 1, 1, 1, 
      1])/(-1 + n1) + j[p4, -1 + n1, n3, n3, 1, 1 + n5, 0, -1, 0, 1, 1, 1, 0, 
     2, 1]/(1 - n1) + ((-7 + 10*d - 3*d^2 - 3*n1 + d*n1 - 14*n3 + 9*d*n3 - 
      2*n1*n3 - 6*n3^2 + 2*n5 - d*n5 + 2*n3*n5)*j[p4, -1 + n1, n3, n3, 1, 
      1 + n5, 0, -1, 0, 1, 1, 1, 1, 1, 1])/((-1 + n1)*(-2 + d - 2*n3)) + 
   j[p4, -1 + n1, n3, n3, 1, 1 + n5, 0, -1, 0, 1, 1, 1, 1, 2, 0]/(-1 + n1) + 
   ((7 - 3*d - 2*n1 + d*n1 - n1^2 + 15*n3 - 3*d*n3 + 6*n3^2 + 5*n5 - 2*d*n5 - 
      n1*n5 + 7*n3*n5)*j[p4, -1 + n1, n3, n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 
      1, 1, 1])/((-1 + n1)*(-2 + d - 2*n3)) + 
   ((-3 + d + n1 - 3*n3)*j[p4, -1 + n1, n3, n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 
      1, 2, 0])/((-1 + n1)*(-2 + d - 2*n3)) + 
   (n3*j[p4, -1 + n1, n3, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 0, 1, 1])/
    (-1 + n1) + ((-1 - n5)*j[p4, -1 + n1, n3, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 
      1, 1, 0, 1])/(-1 + n1) + 
   ((1 - n3 + n5)*j[p4, -1 + n1, n3, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 
      0])/(-1 + n1) + ((-1 - n5)*j[p4, -1 + n1, n3, n3, 1, 2 + n5, -1, -1, 0, 
      1, 1, 1, 1, 1, 1])/(-1 + n1) + 
   ((-1 - n5)*j[p4, -1 + n1, n3, n3, 1, 2 + n5, -1, 0, 0, 1, 1, 1, 1, 0, 1])/
    (-1 + n1) + ((1 + n5)*j[p4, -1 + n1, n3, n3, 1, 2 + n5, -1, 0, 0, 1, 1, 
      1, 1, 1, 0])/(-1 + n1) + 
   ((-1 - n5)*j[p4, -1 + n1, n3, n3, 1, 2 + n5, 0, -2, 0, 1, 1, 1, 1, 1, 1])/
    (-1 + n1) + ((2 - d + 3*n3 + 2*n5 - d*n5 + 3*n3*n5)*
     j[p4, -1 + n1, n3, n3, 1, 2 + n5, 0, -1, -1, 1, 1, 1, 1, 1, 1])/
    ((-1 + n1)*(-2 + d - 2*n3)) + 
   ((1 + n5)*j[p4, -1 + n1, n3, n3, 1, 2 + n5, 0, -1, 0, 1, 1, 1, 1, 0, 1])/
    (-1 + n1) + ((-1 - n5)*j[p4, -1 + n1, n3, n3, 1, 2 + n5, 0, -1, 0, 1, 1, 
      1, 1, 1, 0])/(-1 + n1) + 
   ((1 + n5)*j[p4, -1 + n1, n3, n3, 1, 2 + n5, 0, 0, -1, 1, 1, 1, 1, 0, 1])/
    (-1 + n1) + ((-1 - n5)*j[p4, -1 + n1, n3, n3, 1, 2 + n5, 0, 0, -1, 1, 1, 
      1, 1, 1, 0])/(-1 + n1) + j[p4, -1 + n1, n3, n3, 2, n5, 0, 0, 0, 1, 1, 
     1, 1, 1, 0]/(-1 + n1) + j[p4, -1 + n1, n3, n3, 2, 1 + n5, -1, 0, 0, 1, 
     1, 1, 1, 1, 0]/(-1 + n1) + j[p4, -1 + n1, n3, n3, 2, 1 + n5, 0, -1, 0, 
     1, 1, 1, 1, 1, 0]/(1 - n1) + j[p4, -1 + n1, n3, n3, 2, 1 + n5, 0, 0, -1, 
     1, 1, 1, 1, 1, 0]/(1 - n1) + 
   ((-n3 + d*n3 - 2*n3^2)*j[p4, -1 + n1, n3, 1 + n3, 0, 1 + n5, 0, -1, 0, 1, 
      1, 1, 1, 1, 1])/((-1 + n1)*(-2 + d - 2*n3)) + 
   ((3*n3 - d*n3 - n1*n3 + 3*n3^2 - n3*n5)*j[p4, -1 + n1, n3, 1 + n3, 0, 
      1 + n5, 0, 0, -1, 1, 1, 1, 1, 1, 1])/((-1 + n1)*(-2 + d - 2*n3)) + 
   ((-n3 + d*n3 - 2*n3^2)*j[p4, -1 + n1, n3, 1 + n3, 1, n5, 0, -1, 0, 1, 1, 
      1, 1, 1, 1])/((-1 + n1)*(-2 + d - 2*n3)) + 
   (3*n3*j[p4, -1 + n1, n3, 1 + n3, 1, n5, 0, 0, -1, 1, 1, 1, 1, 1, 1])/
    (-1 + n1) + ((n3 - d*n3 + 2*n3^2)*j[p4, -1 + n1, n3, 1 + n3, 1, n5, 0, 0, 
      0, 1, 1, 1, 0, 1, 1])/((-1 + n1)*(-2 + d - 2*n3)) + 
   ((-n3 + d*n3 - 2*n3^2)*j[p4, -1 + n1, n3, 1 + n3, 1, n5, 0, 0, 0, 1, 1, 1, 
      1, 0, 1])/((-1 + n1)*(-2 + d - 2*n3)) + 
   ((n3 - d*n3 + 2*n3^2)*j[p4, -1 + n1, n3, 1 + n3, 1, 1 + n5, -1, -1, 0, 1, 
      1, 1, 1, 1, 1])/((-1 + n1)*(-2 + d - 2*n3)) + 
   (n3*j[p4, -1 + n1, n3, 1 + n3, 1, 1 + n5, -1, 0, 0, 1, 1, 1, 1, 0, 1])/
    (-1 + n1) + ((n3 - d*n3 + 2*n3^2)*j[p4, -1 + n1, n3, 1 + n3, 1, 1 + n5, 
      0, -2, 0, 1, 1, 1, 1, 1, 1])/((-1 + n1)*(-2 + d - 2*n3)) + 
   ((n3 - d*n3 + 2*n3^2)*j[p4, -1 + n1, n3, 1 + n3, 1, 1 + n5, 0, -1, -1, 1, 
      1, 1, 1, 1, 1])/((-1 + n1)*(-2 + d - 2*n3)) - 
   (n3*j[p4, -1 + n1, n3, 1 + n3, 1, 1 + n5, 0, -1, -1, 1, 1, 1, 1, 2, 0])/
    ((-1 + n1)*(2 - d + 2*n3)) + 
   ((-n3 + d*n3 - 2*n3^2)*j[p4, -1 + n1, n3, 1 + n3, 1, 1 + n5, 0, -1, 0, 1, 
      1, 1, 0, 1, 1])/((-1 + n1)*(-2 + d - 2*n3)) + 
   ((n3 - d*n3 + 2*n3^2)*j[p4, -1 + n1, n3, 1 + n3, 1, 1 + n5, 0, -1, 0, 1, 
      1, 1, 1, 0, 1])/((-1 + n1)*(-2 + d - 2*n3)) - 
   (n3*j[p4, -1 + n1, n3, 1 + n3, 1, 1 + n5, 0, -1, 0, 1, 1, 1, 1, 1, 0])/
    (-1 + n1) + ((3*n3 - d*n3 - n1*n3 + 3*n3^2 - n3*n5)*
     j[p4, -1 + n1, n3, 1 + n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 0, 1])/
    ((-1 + n1)*(-2 + d - 2*n3)) + ((-3*n3 + d*n3 + n1*n3 - 3*n3^2 + n3*n5)*
     j[p4, -1 + n1, n3, 1 + n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 1, 0])/
    ((-1 + n1)*(-2 + d - 2*n3)) + 
   ((-n3 - n3*n5)*j[p4, -1 + n1, n3, 1 + n3, 1, 2 + n5, 0, -1, -1, 1, 1, 1, 
      1, 0, 1])/((-1 + n1)*(2 - d + 2*n3)) + 
   ((n3 + n3*n5)*j[p4, -1 + n1, n3, 1 + n3, 1, 2 + n5, 0, -1, -1, 1, 1, 1, 1, 
      1, 0])/((-1 + n1)*(2 - d + 2*n3)) - 
   (n3*j[p4, -1 + n1, n3, 1 + n3, 2, n5, 0, 0, -1, 1, 1, 1, 1, 1, 0])/
    ((-1 + n1)*(2 - d + 2*n3)) + 
   (n3*j[p4, -1 + n1, n3, 1 + n3, 2, 1 + n5, 0, -1, -1, 1, 1, 1, 1, 1, 0])/
    ((-1 + n1)*(2 - d + 2*n3)) + 
   ((-n3 - n3^2)*j[p4, -1 + n1, n3, 2 + n3, 0, 1 + n5, 0, -1, -1, 1, 1, 1, 1, 
      1, 1])/((-1 + n1)*(-2 + d - 2*n3)) + 
   ((n3 + n3^2)*j[p4, -1 + n1, n3, 2 + n3, 1, 1 + n5, 0, -1, -1, 1, 1, 1, 1, 
      1, 0])/((-1 + n1)*(-2 + d - 2*n3)) - 
   (n3*j[p4, -1 + n1, 1 + n3, -1 + n3, 0, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    ((-1 + n1)*(2 - d + 2*n3)) + 
   ((n3 + n3*n5)*j[p4, -1 + n1, 1 + n3, -1 + n3, 0, 2 + n5, 0, 0, -1, 1, 1, 
      1, 1, 1, 1])/((-1 + n1)*(2 - d + 2*n3)) + 
   (2*n3*j[p4, -1 + n1, 1 + n3, -1 + n3, 1, n5, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    (-1 + n1) + (n3*j[p4, -1 + n1, 1 + n3, -1 + n3, 1, 1 + n5, -1, 0, 0, 1, 
      1, 1, 1, 1, 1])/((-1 + n1)*(2 - d + 2*n3)) + 
   (n3*j[p4, -1 + n1, 1 + n3, -1 + n3, 1, 1 + n5, 0, -1, 0, 1, 1, 1, 1, 1, 
      1])/((-1 + n1)*(2 - d + 2*n3)) - 
   (n3*j[p4, -1 + n1, 1 + n3, -1 + n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 0, 2, 
      1])/((-1 + n1)*(2 - d + 2*n3)) + 
   ((-2*n1*n3 + 2*n3^2 - 2*n3*n5)*j[p4, -1 + n1, 1 + n3, -1 + n3, 1, 1 + n5, 
      0, 0, -1, 1, 1, 1, 1, 1, 1])/((-1 + n1)*(-2 + d - 2*n3)) - 
   (n3*j[p4, -1 + n1, 1 + n3, -1 + n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 2, 
      0])/((-1 + n1)*(2 - d + 2*n3)) + 
   ((-n3 - n3*n5)*j[p4, -1 + n1, 1 + n3, -1 + n3, 1, 2 + n5, -1, 0, -1, 1, 1, 
      1, 1, 1, 1])/((-1 + n1)*(2 - d + 2*n3)) + 
   ((-n3 - n3*n5)*j[p4, -1 + n1, 1 + n3, -1 + n3, 1, 2 + n5, 0, -1, -1, 1, 1, 
      1, 1, 1, 1])/((-1 + n1)*(2 - d + 2*n3)) + 
   (n3*j[p4, -1 + n1, 1 + n3, n3, 0, 1 + n5, 0, -1, 0, 1, 1, 1, 1, 1, 1])/
    ((-1 + n1)*(2 - d + 2*n3)) + ((3*n3 - n3^2 + 2*n3*n5)*
     j[p4, -1 + n1, 1 + n3, n3, 0, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 1, 1])/
    ((-1 + n1)*(-2 + d - 2*n3)) + 
   ((-n3 - n3*n5)*j[p4, -1 + n1, 1 + n3, n3, 0, 2 + n5, 0, -1, -1, 1, 1, 1, 
      1, 1, 1])/((-1 + n1)*(2 - d + 2*n3)) + 
   ((-n3 - n3*n5)*j[p4, -1 + n1, 1 + n3, n3, 0, 2 + n5, 0, 0, -2, 1, 1, 1, 1, 
      1, 1])/((-1 + n1)*(2 - d + 2*n3)) + 
   ((7*n3 - 4*d*n3 + 8*n3^2)*j[p4, -1 + n1, 1 + n3, n3, 1, n5, 0, -1, 0, 1, 
      1, 1, 1, 1, 1])/((-1 + n1)*(-2 + d - 2*n3)) + 
   (n3*j[p4, -1 + n1, 1 + n3, n3, 1, n5, 0, 0, -1, 1, 1, 1, 0, 2, 1])/
    ((-1 + n1)*(2 - d + 2*n3)) + ((2*n3 - 4*d*n3 + 2*n1*n3 + 8*n3^2)*
     j[p4, -1 + n1, 1 + n3, n3, 1, n5, 0, 0, -1, 1, 1, 1, 1, 1, 1])/
    ((-1 + n1)*(-2 + d - 2*n3)) + 
   ((-n3 + d*n3 - 2*n3^2)*j[p4, -1 + n1, 1 + n3, n3, 1, n5, 0, 0, 0, 1, 1, 1, 
      0, 1, 1])/((-1 + n1)*(-2 + d - 2*n3)) + 
   ((3*n3 - 2*d*n3 + 4*n3^2)*j[p4, -1 + n1, 1 + n3, n3, 1, n5, 0, 0, 0, 1, 1, 
      1, 1, 0, 1])/((-1 + n1)*(-2 + d - 2*n3)) - 
   (n3*j[p4, -1 + n1, 1 + n3, n3, 1, 1 + n5, -1, -1, 0, 1, 1, 1, 1, 1, 1])/
    ((-1 + n1)*(2 - d + 2*n3)) + ((-14*n3 + 5*d*n3 - 10*n3^2 - 2*n3*n5)*
     j[p4, -1 + n1, 1 + n3, n3, 1, 1 + n5, -1, 0, -1, 1, 1, 1, 1, 1, 1])/
    ((-1 + n1)*(-2 + d - 2*n3)) - 
   (2*n3*j[p4, -1 + n1, 1 + n3, n3, 1, 1 + n5, -1, 0, -1, 1, 2, 0, 1, 1, 1])/
    ((-1 + n1)*(2 - d + 2*n3)) + ((-3*n3 + d*n3 - 2*n3^2)*
     j[p4, -1 + n1, 1 + n3, n3, 1, 1 + n5, -1, 0, 0, 1, 1, 1, 0, 1, 1])/
    ((-1 + n1)*(-2 + d - 2*n3)) + ((5*n3 - 2*d*n3 + 4*n3^2)*
     j[p4, -1 + n1, 1 + n3, n3, 1, 1 + n5, -1, 0, 0, 1, 1, 1, 1, 0, 1])/
    ((-1 + n1)*(-2 + d - 2*n3)) - 
   (n3*j[p4, -1 + n1, 1 + n3, n3, 1, 1 + n5, 0, -2, 0, 1, 1, 1, 1, 1, 1])/
    ((-1 + n1)*(2 - d + 2*n3)) + 
   (2*n3*j[p4, -1 + n1, 1 + n3, n3, 1, 1 + n5, 0, -1, -1, 0, 2, 1, 1, 1, 1])/
    ((-1 + n1)*(2 - d + 2*n3)) + 
   (n3*j[p4, -1 + n1, 1 + n3, n3, 1, 1 + n5, 0, -1, -1, 1, 1, 1, 0, 2, 1])/
    ((-1 + n1)*(2 - d + 2*n3)) + ((-(d*n3) + 2*n1*n3 - n3*n5)*
     j[p4, -1 + n1, 1 + n3, n3, 1, 1 + n5, 0, -1, -1, 1, 1, 1, 1, 1, 1])/
    ((-1 + n1)*(-2 + d - 2*n3)) + 
   (n3*j[p4, -1 + n1, 1 + n3, n3, 1, 1 + n5, 0, -1, -1, 1, 1, 1, 1, 2, 0])/
    ((-1 + n1)*(2 - d + 2*n3)) + 
   ((n3 - d*n3 + 2*n3^2)*j[p4, -1 + n1, 1 + n3, n3, 1, 1 + n5, 0, -1, 0, 1, 
      1, 1, 0, 1, 1])/((-1 + n1)*(-2 + d - 2*n3)) + 
   ((-3*n3 + 2*d*n3 - 4*n3^2)*j[p4, -1 + n1, 1 + n3, n3, 1, 1 + n5, 0, -1, 0, 
      1, 1, 1, 1, 0, 1])/((-1 + n1)*(-2 + d - 2*n3)) + 
   ((-10*n3 + 2*d*n3 - 6*n3^2 - 2*n3*n5)*j[p4, -1 + n1, 1 + n3, n3, 1, 
      1 + n5, 0, 0, -2, 1, 1, 1, 1, 1, 1])/((-1 + n1)*(-2 + d - 2*n3)) - 
   (n3*j[p4, -1 + n1, 1 + n3, n3, 1, 1 + n5, 0, 0, -2, 1, 1, 1, 1, 2, 0])/
    ((-1 + n1)*(2 - d + 2*n3)) + 
   ((3*n3 - d*n3 + 3*n3^2)*j[p4, -1 + n1, 1 + n3, n3, 1, 1 + n5, 0, 0, -1, 1, 
      1, 1, 0, 1, 1])/((-1 + n1)*(-2 + d - 2*n3)) + 
   ((-4*n3 + 2*d*n3 - 6*n3^2 + n3*n5)*j[p4, -1 + n1, 1 + n3, n3, 1, 1 + n5, 
      0, 0, -1, 1, 1, 1, 1, 0, 1])/((-1 + n1)*(-2 + d - 2*n3)) + 
   ((-n3 + n3^2 - n3*n5)*j[p4, -1 + n1, 1 + n3, n3, 1, 1 + n5, 0, 0, -1, 1, 
      1, 1, 1, 1, 0])/((-1 + n1)*(-2 + d - 2*n3)) + 
   ((n3 + n3*n5)*j[p4, -1 + n1, 1 + n3, n3, 1, 2 + n5, -1, -1, -1, 1, 1, 1, 
      1, 1, 1])/((-1 + n1)*(2 - d + 2*n3)) + 
   ((n3 + n3*n5)*j[p4, -1 + n1, 1 + n3, n3, 1, 2 + n5, -1, 0, -1, 1, 1, 1, 1, 
      0, 1])/((-1 + n1)*(2 - d + 2*n3)) + 
   ((-n3 - n3*n5)*j[p4, -1 + n1, 1 + n3, n3, 1, 2 + n5, -1, 0, -1, 1, 1, 1, 
      1, 1, 0])/((-1 + n1)*(2 - d + 2*n3)) + 
   ((n3 + n3*n5)*j[p4, -1 + n1, 1 + n3, n3, 1, 2 + n5, 0, -2, -1, 1, 1, 1, 1, 
      1, 1])/((-1 + n1)*(2 - d + 2*n3)) + 
   ((n3 + n3*n5)*j[p4, -1 + n1, 1 + n3, n3, 1, 2 + n5, 0, -1, -2, 1, 1, 1, 1, 
      1, 1])/((-1 + n1)*(2 - d + 2*n3)) + 
   ((n3 + n3*n5)*j[p4, -1 + n1, 1 + n3, n3, 1, 2 + n5, 0, -1, -1, 1, 1, 1, 1, 
      0, 1])/((-1 + n1)*(2 - d + 2*n3)) + 
   ((-n3 - n3*n5)*j[p4, -1 + n1, 1 + n3, n3, 1, 2 + n5, 0, -1, -1, 1, 1, 1, 
      1, 1, 0])/((-1 + n1)*(2 - d + 2*n3)) + 
   ((-n3 - n3*n5)*j[p4, -1 + n1, 1 + n3, n3, 1, 2 + n5, 0, 0, -2, 1, 1, 1, 1, 
      0, 1])/((-1 + n1)*(2 - d + 2*n3)) + 
   ((n3 + n3*n5)*j[p4, -1 + n1, 1 + n3, n3, 1, 2 + n5, 0, 0, -2, 1, 1, 1, 1, 
      1, 0])/((-1 + n1)*(2 - d + 2*n3)) + 
   (n3*j[p4, -1 + n1, 1 + n3, n3, 2, n5, 0, 0, -1, 1, 1, 1, 1, 1, 0])/
    ((-1 + n1)*(2 - d + 2*n3)) - 
   (n3*j[p4, -1 + n1, 1 + n3, n3, 2, 1 + n5, -1, 0, -1, 1, 1, 1, 1, 1, 0])/
    ((-1 + n1)*(2 - d + 2*n3)) - 
   (n3*j[p4, -1 + n1, 1 + n3, n3, 2, 1 + n5, 0, -1, -1, 1, 1, 1, 1, 1, 0])/
    ((-1 + n1)*(2 - d + 2*n3)) + 
   (n3*j[p4, -1 + n1, 1 + n3, n3, 2, 1 + n5, 0, 0, -2, 1, 1, 1, 1, 1, 0])/
    ((-1 + n1)*(2 - d + 2*n3)) - 
   (3*n3^2*j[p4, -1 + n1, 1 + n3, 1 + n3, 0, 1 + n5, 0, -1, -1, 1, 1, 1, 1, 
      1, 1])/((-1 + n1)*(2 - d + 2*n3)) + 
   (n3^2*j[p4, -1 + n1, 1 + n3, 1 + n3, 0, 1 + n5, 0, 0, -2, 1, 1, 1, 1, 1, 
      1])/((-1 + n1)*(2 - d + 2*n3)) + 
   (n3^2*j[p4, -1 + n1, 1 + n3, 1 + n3, 1, n5, 0, 0, -1, 1, 1, 1, 1, 0, 1])/
    ((-1 + n1)*(2 - d + 2*n3)) - 
   (n3^2*j[p4, -1 + n1, 1 + n3, 1 + n3, 1, 1 + n5, -1, 0, -1, 1, 1, 1, 1, 0, 
      1])/((-1 + n1)*(2 - d + 2*n3)) - 
   (n3^2*j[p4, -1 + n1, 1 + n3, 1 + n3, 1, 1 + n5, 0, -1, -1, 1, 1, 1, 1, 0, 
      1])/((-1 + n1)*(2 - d + 2*n3)) + 
   (3*n3^2*j[p4, -1 + n1, 1 + n3, 1 + n3, 1, 1 + n5, 0, -1, -1, 1, 1, 1, 1, 
      1, 0])/((-1 + n1)*(2 - d + 2*n3)) + 
   (n3^2*j[p4, -1 + n1, 1 + n3, 1 + n3, 1, 1 + n5, 0, 0, -2, 1, 1, 1, 1, 0, 
      1])/((-1 + n1)*(2 - d + 2*n3)) - 
   (n3^2*j[p4, -1 + n1, 1 + n3, 1 + n3, 1, 1 + n5, 0, 0, -2, 1, 1, 1, 1, 1, 
      0])/((-1 + n1)*(2 - d + 2*n3)) + 
   ((-2*n3 - 2*n3^2)*j[p4, -1 + n1, 2 + n3, -1 + n3, 1, n5, 0, 0, -1, 1, 1, 
      1, 1, 1, 1])/((-1 + n1)*(-2 + d - 2*n3)) + 
   ((2*n3 + 2*n3^2)*j[p4, -1 + n1, 2 + n3, -1 + n3, 1, 1 + n5, -1, 0, -1, 1, 
      1, 1, 1, 1, 1])/((-1 + n1)*(-2 + d - 2*n3)) + 
   ((2*n3 + 2*n3^2)*j[p4, -1 + n1, 2 + n3, -1 + n3, 1, 1 + n5, 0, -1, -1, 1, 
      1, 1, 1, 1, 1])/((-1 + n1)*(-2 + d - 2*n3)) + 
   ((-2*n3 - 2*n3^2)*j[p4, -1 + n1, 2 + n3, -1 + n3, 1, 1 + n5, 0, 0, -2, 1, 
      1, 1, 1, 1, 1])/((-1 + n1)*(-2 + d - 2*n3)) + 
   ((-2*n3 - 2*n3^2)*j[p4, -1 + n1, 2 + n3, n3, 1, n5, 0, -1, -1, 1, 1, 1, 1, 
      1, 1])/((-1 + n1)*(-2 + d - 2*n3)) + 
   ((2*n3 + 2*n3^2)*j[p4, -1 + n1, 2 + n3, n3, 1, n5, 0, 0, -2, 1, 1, 1, 1, 
      1, 1])/((-1 + n1)*(-2 + d - 2*n3)) + 
   ((-n3 - n3^2)*j[p4, -1 + n1, 2 + n3, n3, 1, n5, 0, 0, -1, 1, 1, 1, 0, 1, 
      1])/((-1 + n1)*(-2 + d - 2*n3)) + 
   ((2*n3 + 2*n3^2)*j[p4, -1 + n1, 2 + n3, n3, 1, n5, 0, 0, -1, 1, 1, 1, 1, 
      0, 1])/((-1 + n1)*(-2 + d - 2*n3)) + 
   ((-2*n3 - 2*n3^2)*j[p4, -1 + n1, 2 + n3, n3, 1, 1 + n5, -1, -1, -1, 1, 1, 
      1, 1, 1, 1])/((-1 + n1)*(-2 + d - 2*n3)) + 
   ((2*n3 + 2*n3^2)*j[p4, -1 + n1, 2 + n3, n3, 1, 1 + n5, -1, 0, -2, 1, 1, 1, 
      1, 1, 1])/((-1 + n1)*(-2 + d - 2*n3)) + 
   ((n3 + n3^2)*j[p4, -1 + n1, 2 + n3, n3, 1, 1 + n5, -1, 0, -1, 1, 1, 1, 0, 
      1, 1])/((-1 + n1)*(-2 + d - 2*n3)) + 
   ((-2*n3 - 2*n3^2)*j[p4, -1 + n1, 2 + n3, n3, 1, 1 + n5, -1, 0, -1, 1, 1, 
      1, 1, 0, 1])/((-1 + n1)*(-2 + d - 2*n3)) + 
   ((-2*n3 - 2*n3^2)*j[p4, -1 + n1, 2 + n3, n3, 1, 1 + n5, 0, -2, -1, 1, 1, 
      1, 1, 1, 1])/((-1 + n1)*(-2 + d - 2*n3)) + 
   ((n3 + n3^2)*j[p4, -1 + n1, 2 + n3, n3, 1, 1 + n5, 0, -1, -1, 1, 1, 1, 0, 
      1, 1])/((-1 + n1)*(-2 + d - 2*n3)) + 
   ((-2*n3 - 2*n3^2)*j[p4, -1 + n1, 2 + n3, n3, 1, 1 + n5, 0, -1, -1, 1, 1, 
      1, 1, 0, 1])/((-1 + n1)*(-2 + d - 2*n3)) + 
   ((2*n3 + 2*n3^2)*j[p4, -1 + n1, 2 + n3, n3, 1, 1 + n5, 0, 0, -3, 1, 1, 1, 
      1, 1, 1])/((-1 + n1)*(-2 + d - 2*n3)) + 
   ((-n3 - n3^2)*j[p4, -1 + n1, 2 + n3, n3, 1, 1 + n5, 0, 0, -2, 1, 1, 1, 0, 
      1, 1])/((-1 + n1)*(-2 + d - 2*n3)) + 
   ((2*n3 + 2*n3^2)*j[p4, -1 + n1, 2 + n3, n3, 1, 1 + n5, 0, 0, -2, 1, 1, 1, 
      1, 0, 1])/((-1 + n1)*(-2 + d - 2*n3)) + j[p4, n1, -1 + n3, n3, 1, n5, 
    0, 0, 0, 1, 1, 1, 1, 1, 1] + j[p4, n1, -1 + n3, n3, 1, 1 + n5, 0, 0, -1, 
     1, 2, 0, 1, 1, 1]/(-2 + d - 2*n3) + 
   j[p4, n1, -1 + n3, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 1]/
    (2 - d + 2*n3) - (n3*j[p4, n1, -1 + n3, 1 + n3, 1, 1 + n5, 0, 0, -1, 1, 
      1, 1, 1, 0, 1])/(2 - d + 2*n3) + j[p4, n1, n3, -1 + n3, 1, n5, 0, 0, 0, 
    1, 1, 1, 1, 1, 1] + j[p4, n1, n3, -1 + n3, 1, 1 + n5, 0, 0, -1, 1, 2, 0, 
     1, 1, 1]/(-2 + d - 2*n3) - j[p4, n1, n3, -1 + n3, 1, 1 + n5, 0, 0, 0, 0, 
    1, 1, 1, 1, 1] + j[p4, n1, n3, -1 + n3, 1, 1 + n5, 0, 0, 0, 1, 1, 0, 1, 
    1, 1] + j[p4, n1, n3, n3, 0, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 1]/
    (2 - d + 2*n3) - j[p4, n1, n3, n3, 1, n5, 0, -1, 0, 1, 1, 1, 1, 1, 1] - 
   j[p4, n1, n3, n3, 1, n5, 0, 0, 0, 1, 0, 1, 1, 1, 1] + 
   j[p4, n1, n3, n3, 1, n5, 0, 0, 0, 1, 1, 0, 1, 1, 1]/(-2 + d - 2*n3) + 
   j[p4, n1, n3, n3, 1, n5, 0, 0, 0, 1, 1, 1, 0, 1, 1]/(2 - d + 2*n3) + 
   ((3 - d + 2*n3)*j[p4, n1, n3, n3, 1, n5, 0, 0, 0, 1, 1, 1, 1, 0, 1])/
    (-2 + d - 2*n3) + j[p4, n1, n3, n3, 1, n5, 0, 0, 0, 1, 1, 1, 1, 1, 1] - 
   j[p4, n1, n3, n3, 1, 1 + n5, -1, 0, 0, 1, 1, 1, 1, 0, 1] + 
   ((-1 + d - 2*n3)*j[p4, n1, n3, n3, 1, 1 + n5, -1, 0, 0, 1, 1, 1, 1, 1, 1])/
    (-2 + d - 2*n3) + j[p4, n1, n3, n3, 1, 1 + n5, 0, -1, -1, 1, 2, 0, 1, 1, 
     1]/(2 - d + 2*n3) + j[p4, n1, n3, n3, 1, 1 + n5, 0, -1, -1, 1, 2, 1, 0, 
     1, 1]/(-2 + d - 2*n3) + j[p4, n1, n3, n3, 1, 1 + n5, 0, -1, -1, 1, 2, 1, 
     1, 0, 1]/(2 - d + 2*n3) + j[p4, n1, n3, n3, 1, 1 + n5, 0, -1, 0, 0, 1, 
    1, 1, 1, 1] - j[p4, n1, n3, n3, 1, 1 + n5, 0, -1, 0, 1, 1, 0, 1, 1, 1] + 
   j[p4, n1, n3, n3, 1, 1 + n5, 0, -1, 0, 1, 1, 1, 1, 0, 1] + 
   ((3 - d + 2*n3)*j[p4, n1, n3, n3, 1, 1 + n5, 0, -1, 0, 1, 1, 1, 1, 1, 1])/
    (-2 + d - 2*n3) + j[p4, n1, n3, n3, 1, 1 + n5, 0, 0, -2, 1, 2, 0, 1, 1, 
     1]/(2 - d + 2*n3) + ((-3 + d + n1 - 3*n3 - n5)*
     j[p4, n1, n3, n3, 1, 1 + n5, 0, 0, -1, 0, 1, 1, 1, 1, 1])/
    (-2 + d - 2*n3) + ((-1 + d - 2*n3)*j[p4, n1, n3, n3, 1, 1 + n5, 0, 0, -1, 
      1, 0, 1, 1, 1, 1])/(-2 + d - 2*n3) + 
   ((1 - d + 2*n3)*j[p4, n1, n3, n3, 1, 1 + n5, 0, 0, -1, 1, 1, 0, 1, 1, 1])/
    (-2 + d - 2*n3) + ((-2 + d - n3 - n5)*j[p4, n1, n3, n3, 1, 1 + n5, 0, 0, 
      -1, 1, 1, 1, 1, 0, 1])/(-2 + d - 2*n3) + 
   (n5*j[p4, n1, n3, n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 1, 0])/
    (-2 + d - 2*n3) + ((8 - 3*d + n1 + 5*n3 + 2*n5)*
     j[p4, n1, n3, n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 1, 1])/
    (-2 + d - 2*n3) + j[p4, n1, n3, n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 2, 
     0]/(2 - d + 2*n3) + j[p4, n1, n3, n3, 1, 1 + n5, 0, 0, -1, 1, 2, 0, 1, 
     1, 1]/(2 - d + 2*n3) + j[p4, n1, n3, n3, 2, n5, 0, 0, -1, 0, 1, 1, 1, 1, 
     1]/(2 - d + 2*n3) + j[p4, n1, n3, n3, 2, n5, 0, 0, -1, 1, 0, 1, 1, 1, 1]/
    (-2 + d - 2*n3) + j[p4, n1, n3, n3, 2, n5, 0, 0, -1, 1, 1, 0, 1, 1, 1]/
    (2 - d + 2*n3) + j[p4, n1, n3, n3, 2, n5, 0, 0, -1, 1, 1, 1, 1, 1, 0]/
    (-2 + d - 2*n3) + j[p4, n1, n3, n3, 2, 1 + n5, 0, -1, -1, 0, 1, 1, 1, 1, 
     1]/(-2 + d - 2*n3) + j[p4, n1, n3, n3, 2, 1 + n5, 0, -1, -1, 1, 0, 1, 1, 
     1, 1]/(2 - d + 2*n3) + j[p4, n1, n3, n3, 2, 1 + n5, 0, -1, -1, 1, 1, 0, 
     1, 1, 1]/(-2 + d - 2*n3) + j[p4, n1, n3, n3, 2, 1 + n5, 0, -1, -1, 1, 1, 
     1, 1, 1, 0]/(2 - d + 2*n3) - 
   (n3*j[p4, n1, n3, 1 + n3, 0, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 1, 1])/
    (2 - d + 2*n3) + (n3*j[p4, n1, n3, 1 + n3, 1, n5, 0, 0, -1, 1, 1, 1, 1, 
      0, 1])/(2 - d + 2*n3) - (n3*j[p4, n1, n3, 1 + n3, 1, 1 + n5, 0, -1, -1, 
      0, 1, 1, 1, 1, 1])/(2 - d + 2*n3) + 
   (n3*j[p4, n1, n3, 1 + n3, 1, 1 + n5, 0, -1, -1, 1, 0, 1, 1, 1, 1])/
    (2 - d + 2*n3) - (n3*j[p4, n1, n3, 1 + n3, 1, 1 + n5, 0, -1, -1, 1, 1, 0, 
      1, 1, 1])/(2 - d + 2*n3) + 
   (n3*j[p4, n1, n3, 1 + n3, 1, 1 + n5, 0, 0, -2, 1, 1, 1, 1, 0, 1])/
    (2 - d + 2*n3) + (n3*j[p4, n1, n3, 1 + n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 
      1, 1, 0])/(2 - d + 2*n3) - 
   (n3*j[p4, n1, 1 + n3, -1 + n3, 1, 1 + n5, 0, 0, -1, 0, 1, 1, 1, 1, 1])/
    (2 - d + 2*n3) - (n3*j[p4, n1, 1 + n3, -1 + n3, 1, 1 + n5, 0, 0, -1, 1, 
      1, 0, 1, 1, 1])/(2 - d + 2*n3) + 
   (2*n3*j[p4, n1, 1 + n3, n3, 1, n5, 0, 0, -1, 1, 1, 0, 1, 1, 1])/
    (2 - d + 2*n3) - (n3*j[p4, n1, 1 + n3, n3, 1, n5, 0, 0, -1, 1, 1, 1, 0, 
      1, 1])/(2 - d + 2*n3) + (n3*j[p4, n1, 1 + n3, n3, 1, n5, 0, 0, -1, 1, 
      1, 1, 1, 0, 1])/(2 - d + 2*n3) + 
   (n3*j[p4, n1, 1 + n3, n3, 1, 1 + n5, -1, 0, -1, 1, 1, 1, 1, 0, 1])/
    (2 - d + 2*n3) + (n3*j[p4, n1, 1 + n3, n3, 1, 1 + n5, 0, -1, -1, 0, 1, 1, 
      1, 1, 1])/(2 - d + 2*n3) + 
   (n3*j[p4, n1, 1 + n3, n3, 1, 1 + n5, 0, -1, -1, 1, 0, 1, 1, 1, 1])/
    (2 - d + 2*n3) + (n3*j[p4, n1, 1 + n3, n3, 1, 1 + n5, 0, -1, -1, 1, 1, 0, 
      1, 1, 1])/(2 - d + 2*n3) - 
   (n3*j[p4, n1, 1 + n3, n3, 1, 1 + n5, 0, -1, -1, 1, 1, 1, 0, 1, 1])/
    (2 - d + 2*n3) + (3*n3*j[p4, n1, 1 + n3, n3, 1, 1 + n5, 0, -1, -1, 1, 1, 
      1, 1, 0, 1])/(2 - d + 2*n3) - 
   (2*n3*j[p4, n1, 1 + n3, n3, 1, 1 + n5, 0, -1, -1, 1, 1, 1, 1, 1, 1])/
    (2 - d + 2*n3) - (n3*j[p4, n1, 1 + n3, n3, 1, 1 + n5, 0, 0, -2, 0, 1, 1, 
      1, 1, 1])/(2 - d + 2*n3) - 
   (n3*j[p4, n1, 1 + n3, n3, 1, 1 + n5, 0, 0, -2, 1, 0, 1, 1, 1, 1])/
    (2 - d + 2*n3) + (n3*j[p4, n1, 1 + n3, n3, 1, 1 + n5, 0, 0, -2, 1, 1, 0, 
      1, 1, 1])/(2 - d + 2*n3) - 
   (n3*j[p4, n1, 1 + n3, n3, 1, 1 + n5, 0, 0, -2, 1, 1, 1, 1, 0, 1])/
    (2 - d + 2*n3) + (2*n3*j[p4, n1, 1 + n3, n3, 1, 1 + n5, 0, 0, -2, 1, 1, 
      1, 1, 1, 1])/(2 - d + 2*n3) - 
   (n1*j[p4, 1 + n1, n3, n3, 1, n5, 0, 0, -1, 1, 1, 1, 1, 0, 1])/
    (-2 + d - 2*n3) + (2*n1*j[p4, 1 + n1, n3, n3, 1, n5, 0, 0, -1, 1, 1, 1, 
      1, 1, 1])/(-2 + d - 2*n3) - 
   (n1*j[p4, 1 + n1, n3, n3, 1, 1 + n5, 0, 0, -1, 0, 1, 1, 1, 1, 1])/
    (-2 + d - 2*n3), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?NonPositive, (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, 
    (n7_)?NonPositive, (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 1 && n13 == 1 && n14 == 1 && n2 == n3 && 
    n4 == 1 && n6 == 0 && n7 == 0 && n8 == 0 && n9 == 1 && 
     !(n1 == 0 || n5 == 0) -> 
  ((10*n5 - 9*d*n5 + 2*d^2*n5 + 5*n1*n5 - 2*d*n1*n5 + 16*n3*n5 - 7*d*n3*n5 + 
      3*n1*n3*n5 + 6*n3^2*n5)*j[p4, -1 + n1, n3, n3, 0, 1 + n5, 0, 0, 0, 1, 
      1, 1, 1, 1, 1])/((3 - d + n1 + n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((10 - 9*d + 2*d^2 + 5*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 3*n1*n3 + 6*n3^2)*
     j[p4, -1 + n1, n3, n3, 1, n5, 0, 0, 0, 1, 1, 1, 0, 2, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-10 + 9*d - 2*d^2 - 5*n1 + 2*d*n1 - 16*n3 + 
      7*d*n3 - 3*n1*n3 - 6*n3^2)*j[p4, -1 + n1, n3, n3, 1, n5, 0, 0, 0, 1, 1, 
      1, 1, 2, 0])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   j[p4, -1 + n1, n3, n3, 1, 1 + n5, 0, 0, 0, 0, 2, 1, 1, 1, 1]/
    (-3 + d - n1 - n5) + ((-10*n5 + 9*d*n5 - 2*d^2*n5 - 5*n1*n5 + 2*d*n1*n5 - 
      16*n3*n5 + 7*d*n3*n5 - 3*n1*n3*n5 - 6*n3^2*n5)*
     j[p4, -1 + n1, n3, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 0, 1])/
    (2*(3 - d + n1 + n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((10*n5 - 9*d*n5 + 2*d^2*n5 + 5*n1*n5 - 2*d*n1*n5 + 
      16*n3*n5 - 7*d*n3*n5 + 3*n1*n3*n5 + 6*n3^2*n5)*
     j[p4, -1 + n1, n3, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 0])/
    (2*(3 - d + n1 + n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + (2*n3*j[p4, -1 + n1, n3, n3, 1, 1 + n5, 0, 0, 0, 1, 
      1, 1, 1, 1, 1])/(-3 + d - n1 - n5) + 
   ((-112 + 82*d - 15*d^2 - 36*n1 + 13*d*n1 - 2*n1^2 - 104*n3 + 38*d*n3 - 
      16*n1*n3 - 24*n3^2 - 24*n5 + 9*d*n5 - 4*n1*n5 - 12*n3*n5 - n5^2)*
     j[p4, -1 + n1, n3, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 2, 0])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + j[p4, -1 + n1, n3, n3, 1, 1 + n5, 0, 0, 0, 1, 2, 1, 
     0, 1, 1]/(-3 + d - n1 - n5) - j[p4, -1 + n1, n3, n3, 1, 1 + n5, 0, 0, 0, 
     1, 2, 1, 1, 0, 1]/(-3 + d - n1 - n5) + 
   ((-112 + 82*d - 15*d^2 - 36*n1 + 13*d*n1 - 2*n1^2 - 104*n3 + 38*d*n3 - 
      16*n1*n3 - 24*n3^2 - 136*n5 + 91*d*n5 - 15*d^2*n5 - 40*n1*n5 + 
      13*d*n1*n5 - 2*n1^2*n5 - 116*n3*n5 + 38*d*n3*n5 - 16*n1*n3*n5 - 
      24*n3^2*n5 - 25*n5^2 + 9*d*n5^2 - 4*n1*n5^2 - 12*n3*n5^2 - n5^3)*
     j[p4, -1 + n1, n3, n3, 1, 2 + n5, 0, 0, 0, 1, 1, 1, 1, 0, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((112 - 82*d + 15*d^2 + 36*n1 - 13*d*n1 + 2*n1^2 + 
      104*n3 - 38*d*n3 + 16*n1*n3 + 24*n3^2 + 136*n5 - 91*d*n5 + 15*d^2*n5 + 
      40*n1*n5 - 13*d*n1*n5 + 2*n1^2*n5 + 116*n3*n5 - 38*d*n3*n5 + 
      16*n1*n3*n5 + 24*n3^2*n5 + 25*n5^2 - 9*d*n5^2 + 4*n1*n5^2 + 
      12*n3*n5^2 + n5^3)*j[p4, -1 + n1, n3, n3, 1, 2 + n5, 0, 0, 0, 1, 1, 1, 
      1, 1, 0])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-10 + 9*d - 2*d^2 - 5*n1 + 2*d*n1 - 16*n3 + 7*d*n3 - 3*n1*n3 - 6*n3^2)*
     j[p4, -1 + n1, n3, n3, 2, n5, 0, 0, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-32 + 20*d - 3*d^2 - 16*n1 + 5*d*n1 - 2*n1^2 - 
      16*n3 + 4*d*n3 - 4*n1*n3 - 14*n5 + 5*d*n5 - 4*n1*n5 - 6*n3*n5 - n5^2)*
     j[p4, -1 + n1, n3, n3, 2, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((10*n3 - 9*d*n3 + 2*d^2*n3 + 5*n1*n3 - 2*d*n1*n3 + 
      16*n3^2 - 7*d*n3^2 + 3*n1*n3^2 + 6*n3^3)*j[p4, -1 + n1, n3, 1 + n3, 0, 
      n5, 0, 0, 0, 1, 1, 1, 1, 1, 1])/(2*(-3 + d - n1 - n5)*
     (72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 
      10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-32*n3 + 20*d*n3 - 3*d^2*n3 - 16*n1*n3 + 5*d*n1*n3 - 2*n1^2*n3 - 
      16*n3^2 + 4*d*n3^2 - 4*n1*n3^2 - 14*n3*n5 + 5*d*n3*n5 - 4*n1*n3*n5 - 
      6*n3^2*n5 - n3*n5^2)*j[p4, -1 + n1, n3, 1 + n3, 0, 1 + n5, 0, 0, 0, 1, 
      1, 1, 1, 1, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((10*n3 - 9*d*n3 + 2*d^2*n3 + 5*n1*n3 - 2*d*n1*n3 + 16*n3^2 - 7*d*n3^2 + 
      3*n1*n3^2 + 6*n3^3)*j[p4, -1 + n1, n3, 1 + n3, 1, n5, 0, 0, 0, 1, 1, 1, 
      0, 1, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-10*n3 + 9*d*n3 - 2*d^2*n3 - 5*n1*n3 + 2*d*n1*n3 - 16*n3^2 + 7*d*n3^2 - 
      3*n1*n3^2 - 6*n3^3)*j[p4, -1 + n1, n3, 1 + n3, 1, n5, 0, 0, 0, 1, 1, 1, 
      1, 1, 0])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((32*n3 - 20*d*n3 + 3*d^2*n3 + 16*n1*n3 - 5*d*n1*n3 + 2*n1^2*n3 + 
      16*n3^2 - 4*d*n3^2 + 4*n1*n3^2 + 14*n3*n5 - 5*d*n3*n5 + 4*n1*n3*n5 + 
      6*n3^2*n5 + n3*n5^2)*j[p4, -1 + n1, n3, 1 + n3, 1, 1 + n5, 0, 0, 0, 1, 
      1, 1, 1, 1, 0])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   (2*n3*j[p4, -1 + n1, 1 + n3, -1 + n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 
      1])/(-3 + d - n1 - n5) + 
   ((-10*n3 + 9*d*n3 - 2*d^2*n3 - 5*n1*n3 + 2*d*n1*n3 - 16*n3^2 + 7*d*n3^2 - 
      3*n1*n3^2 - 6*n3^3)*j[p4, -1 + n1, 1 + n3, n3, 1, n5, 0, 0, 0, 1, 1, 1, 
      0, 1, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((10*n3 - 9*d*n3 + 2*d^2*n3 + 5*n1*n3 - 2*d*n1*n3 + 16*n3^2 - 7*d*n3^2 + 
      3*n1*n3^2 + 6*n3^3)*j[p4, -1 + n1, 1 + n3, n3, 1, n5, 0, 0, 0, 1, 1, 1, 
      1, 0, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) - 
   (2*n3*j[p4, -1 + n1, 1 + n3, n3, 1, 1 + n5, -1, 0, 0, 1, 1, 1, 1, 1, 1])/
    (-3 + d - n1 - n5) - (2*n3*j[p4, -1 + n1, 1 + n3, n3, 1, 1 + n5, 0, -1, 
      0, 1, 1, 1, 1, 1, 1])/(-3 + d - n1 - n5) - 
   (2*n3*j[p4, -1 + n1, 1 + n3, n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 1, 1])/
    (-3 + d - n1 - n5) + ((256*n3 - 184*d*n3 + 33*d^2*n3 + 88*n1*n3 - 
      31*d*n1*n3 + 6*n1^2*n3 + 224*n3^2 - 80*d*n3^2 + 36*n1*n3^2 + 48*n3^3 + 
      62*n3*n5 - 23*d*n3*n5 + 12*n1*n3*n5 + 30*n3^2*n5 + 3*n3*n5^2)*
     j[p4, -1 + n1, 1 + n3, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-256*n3 + 184*d*n3 - 33*d^2*n3 - 88*n1*n3 + 
      31*d*n1*n3 - 6*n1^2*n3 - 224*n3^2 + 80*d*n3^2 - 36*n1*n3^2 - 48*n3^3 - 
      62*n3*n5 + 23*d*n3*n5 - 12*n1*n3*n5 - 30*n3^2*n5 - 3*n3*n5^2)*
     j[p4, -1 + n1, 1 + n3, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 0, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-10 + 9*d - 2*d^2 - 5*n1 + 2*d*n1 - 16*n3 + 
      7*d*n3 - 3*n1*n3 - 6*n3^2)*j[p4, n1, -1 + n3, n3, 1, n5, 0, 0, 0, 0, 1, 
      1, 1, 1, 2])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-10 + 9*d - 2*d^2 - 5*n1 + 2*d*n1 - 16*n3 + 7*d*n3 - 3*n1*n3 - 6*n3^2)*
     j[p4, n1, -1 + n3, n3, 1, n5, 0, 0, 0, 0, 2, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((10 - 9*d + 2*d^2 + 5*n1 - 2*d*n1 + 16*n3 - 
      7*d*n3 + 3*n1*n3 + 6*n3^2)*j[p4, n1, -1 + n3, n3, 1, n5, 0, 0, 0, 1, 1, 
      0, 2, 1, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((10 - 9*d + 2*d^2 + 5*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 3*n1*n3 + 6*n3^2)*
     j[p4, n1, -1 + n3, n3, 1, n5, 0, 0, 0, 1, 1, 2, 0, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((10*n5 - 9*d*n5 + 2*d^2*n5 + 5*n1*n5 - 2*d*n1*n5 + 
      16*n3*n5 - 7*d*n3*n5 + 3*n1*n3*n5 + 6*n3^2*n5)*
     j[p4, n1, -1 + n3, n3, 1, 1 + n5, 0, 0, 0, 0, 1, 1, 1, 1, 1])/
    ((3 - d + n1 + n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 60*n3 - 
      21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 9*n3*n5 + 
      n5^2)) + ((32 - 20*d + 3*d^2 + 16*n1 - 5*d*n1 + 2*n1^2 + 16*n3 - 
      4*d*n3 + 4*n1*n3 + 14*n5 - 5*d*n5 + 4*n1*n5 + 6*n3*n5 + n5^2)*
     j[p4, n1, -1 + n3, n3, 1, 1 + n5, 0, 0, 0, 0, 2, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-32 + 20*d - 3*d^2 - 16*n1 + 5*d*n1 - 2*n1^2 - 
      16*n3 + 4*d*n3 - 4*n1*n3 - 14*n5 + 5*d*n5 - 4*n1*n5 - 6*n3*n5 - n5^2)*
     j[p4, n1, -1 + n3, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 0, 2, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-32 + 20*d - 3*d^2 - 16*n1 + 5*d*n1 - 2*n1^2 - 
      16*n3 + 4*d*n3 - 4*n1*n3 - 14*n5 + 5*d*n5 - 4*n1*n5 - 6*n3*n5 - n5^2)*
     j[p4, n1, -1 + n3, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 2, 0, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) - j[p4, n1, -1 + n3, n3, 1, 1 + n5, 0, 0, 0, 1, 2, 1, 
     0, 1, 1]/(-3 + d - n1 - n5) + j[p4, n1, -1 + n3, n3, 1, 1 + n5, 0, 0, 0, 
     1, 2, 1, 1, 0, 1]/(-3 + d - n1 - n5) + 
   ((40 - 31*d + 6*d^2 + 10*n1 - 4*d*n1 + 44*n3 - 17*d*n3 + 6*n1*n3 + 
      12*n3^2 + 45*n5 - 33*d*n5 + 6*d^2*n5 + 10*n1*n5 - 4*d*n1*n5 + 
      47*n3*n5 - 17*d*n3*n5 + 6*n1*n3*n5 + 12*n3^2*n5 + 5*n5^2 - 2*d*n5^2 + 
      3*n3*n5^2)*j[p4, n1, -1 + n3, n3, 1, 2 + n5, 0, 0, 0, 1, 1, 1, 1, 0, 
      1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-40 + 31*d - 6*d^2 - 10*n1 + 4*d*n1 - 44*n3 + 
      17*d*n3 - 6*n1*n3 - 12*n3^2 - 45*n5 + 33*d*n5 - 6*d^2*n5 - 10*n1*n5 + 
      4*d*n1*n5 - 47*n3*n5 + 17*d*n3*n5 - 6*n1*n3*n5 - 12*n3^2*n5 - 5*n5^2 + 
      2*d*n5^2 - 3*n3*n5^2)*j[p4, n1, -1 + n3, n3, 1, 2 + n5, 0, 0, 0, 1, 1, 
      1, 1, 1, 0])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((10 - 9*d + 2*d^2 + 5*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 3*n1*n3 + 6*n3^2)*
     j[p4, n1, -1 + n3, n3, 2, n5, 0, 0, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((32 - 20*d + 3*d^2 + 16*n1 - 5*d*n1 + 2*n1^2 + 
      16*n3 - 4*d*n3 + 4*n1*n3 + 14*n5 - 5*d*n5 + 4*n1*n5 + 6*n3*n5 + n5^2)*
     j[p4, n1, -1 + n3, n3, 2, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((10*n3 - 9*d*n3 + 2*d^2*n3 + 5*n1*n3 - 2*d*n1*n3 + 
      16*n3^2 - 7*d*n3^2 + 3*n1*n3^2 + 6*n3^3)*j[p4, n1, -1 + n3, 1 + n3, 0, 
      n5, 0, 0, 0, 1, 1, 1, 1, 1, 1])/(2*(-3 + d - n1 - n5)*
     (72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 
      10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-32*n3 + 20*d*n3 - 3*d^2*n3 - 16*n1*n3 + 5*d*n1*n3 - 2*n1^2*n3 - 
      16*n3^2 + 4*d*n3^2 - 4*n1*n3^2 - 14*n3*n5 + 5*d*n3*n5 - 4*n1*n3*n5 - 
      6*n3^2*n5 - n3*n5^2)*j[p4, n1, -1 + n3, 1 + n3, 0, 1 + n5, 0, 0, 0, 1, 
      1, 1, 1, 1, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-10*n3 + 9*d*n3 - 2*d^2*n3 - 5*n1*n3 + 2*d*n1*n3 - 16*n3^2 + 7*d*n3^2 - 
      3*n1*n3^2 - 6*n3^3)*j[p4, n1, -1 + n3, 1 + n3, 1, n5, 0, 0, 0, 1, 0, 1, 
      1, 1, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((10*n3 - 9*d*n3 + 2*d^2*n3 + 5*n1*n3 - 2*d*n1*n3 + 16*n3^2 - 7*d*n3^2 + 
      3*n1*n3^2 + 6*n3^3)*j[p4, n1, -1 + n3, 1 + n3, 1, n5, 0, 0, 0, 1, 1, 0, 
      1, 1, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-10*n3 + 9*d*n3 - 2*d^2*n3 - 5*n1*n3 + 2*d*n1*n3 - 16*n3^2 + 7*d*n3^2 - 
      3*n1*n3^2 - 6*n3^3)*j[p4, n1, -1 + n3, 1 + n3, 1, n5, 0, 0, 0, 1, 1, 1, 
      0, 1, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-10*n3 + 9*d*n3 - 2*d^2*n3 - 5*n1*n3 + 2*d*n1*n3 - 16*n3^2 + 7*d*n3^2 - 
      3*n1*n3^2 - 6*n3^3)*j[p4, n1, -1 + n3, 1 + n3, 1, n5, 0, 0, 0, 1, 1, 1, 
      1, 1, 0])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((32*n3 - 20*d*n3 + 3*d^2*n3 + 16*n1*n3 - 5*d*n1*n3 + 2*n1^2*n3 + 
      16*n3^2 - 4*d*n3^2 + 4*n1*n3^2 + 14*n3*n5 - 5*d*n3*n5 + 4*n1*n3*n5 + 
      6*n3^2*n5 + n3*n5^2)*j[p4, n1, -1 + n3, 1 + n3, 1, 1 + n5, 0, 0, 0, 1, 
      1, 1, 1, 1, 0])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-10 + 9*d - 2*d^2 - 5*n1 + 2*d*n1 - 16*n3 + 7*d*n3 - 3*n1*n3 - 6*n3^2)*
     j[p4, n1, n3, -1 + n3, 1, n5, 0, 0, 0, 0, 2, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((176 - 122*d + 21*d^2 + 68*n1 - 23*d*n1 + 6*n1^2 + 
      136*n3 - 46*d*n3 + 24*n1*n3 + 24*n3^2 + 52*n5 - 19*d*n5 + 12*n1*n5 + 
      24*n3*n5 + 3*n5^2)*j[p4, n1, n3, -1 + n3, 1, 1 + n5, 0, 0, 0, 0, 2, 1, 
      1, 1, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((96 - 92*d + 29*d^2 - 3*d^3 + 48*n1 - 31*d*n1 + 5*d^2*n1 + 6*n1^2 - 
      2*d*n1^2 + 80*n3 - 48*d*n3 + 7*d^2*n3 + 28*n1*n3 - 9*d*n1*n3 + 
      2*n1^2*n3 + 16*n3^2 - 4*d*n3^2 + 4*n1*n3^2 + 62*n5 - 42*d*n5 + 
      7*d^2*n5 + 12*n1*n5 - 4*d*n1*n5 + 44*n3*n5 - 14*d*n3*n5 + 4*n1*n3*n5 + 
      6*n3^2*n5 + 8*n5^2 - 3*d*n5^2 + 4*n3*n5^2)*j[p4, n1, n3, -1 + n3, 1, 
      1 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 1])/((-3 + d - n1 - n5)*
     (72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 
      10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-40 + 31*d - 6*d^2 - 10*n1 + 4*d*n1 - 44*n3 + 17*d*n3 - 6*n1*n3 - 
      12*n3^2 - 5*n5 + 2*d*n5 - 3*n3*n5)*j[p4, n1, n3, -1 + n3, 1, 1 + n5, 0, 
      0, 0, 1, 1, 1, 1, 2, 0])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 
      26*n1 - 9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 
      19*n5 - 7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((10 - 9*d + 2*d^2 + 5*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 3*n1*n3 + 6*n3^2)*
     j[p4, n1, n3, -1 + n3, 2, n5, 0, 0, 0, 0, 1, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-10 + 9*d - 2*d^2 - 5*n1 + 2*d*n1 - 16*n3 + 
      7*d*n3 - 3*n1*n3 - 6*n3^2)*j[p4, n1, n3, -1 + n3, 2, n5, 0, 0, 0, 1, 0, 
      1, 1, 1, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((10 - 9*d + 2*d^2 + 5*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 3*n1*n3 + 6*n3^2)*
     j[p4, n1, n3, -1 + n3, 2, n5, 0, 0, 0, 1, 1, 0, 1, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((32 - 20*d + 3*d^2 + 16*n1 - 5*d*n1 + 2*n1^2 + 
      16*n3 - 4*d*n3 + 4*n1*n3 + 14*n5 - 5*d*n5 + 4*n1*n5 + 6*n3*n5 + n5^2)*
     j[p4, n1, n3, -1 + n3, 2, 1 + n5, 0, 0, 0, 0, 1, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-32 + 20*d - 3*d^2 - 16*n1 + 5*d*n1 - 2*n1^2 - 
      16*n3 + 4*d*n3 - 4*n1*n3 - 14*n5 + 5*d*n5 - 4*n1*n5 - 6*n3*n5 - n5^2)*
     j[p4, n1, n3, -1 + n3, 2, 1 + n5, 0, 0, 0, 1, 0, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((32 - 20*d + 3*d^2 + 16*n1 - 5*d*n1 + 2*n1^2 + 
      16*n3 - 4*d*n3 + 4*n1*n3 + 14*n5 - 5*d*n5 + 4*n1*n5 + 6*n3*n5 + n5^2)*
     j[p4, n1, n3, -1 + n3, 2, 1 + n5, 0, 0, 0, 1, 1, 0, 1, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((10*n3 - 9*d*n3 + 2*d^2*n3 + 5*n1*n3 - 2*d*n1*n3 + 
      16*n3^2 - 7*d*n3^2 + 3*n1*n3^2 + 6*n3^3 + 20*n5 - 18*d*n5 + 4*d^2*n5 + 
      10*n1*n5 - 4*d*n1*n5 + 32*n3*n5 - 14*d*n3*n5 + 6*n1*n3*n5 + 12*n3^2*n5)*
     j[p4, n1, n3, n3, 0, n5, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-10 + 9*d - 2*d^2 - 5*n1 + 2*d*n1 - 16*n3 + 
      7*d*n3 - 3*n1*n3 - 6*n3^2)*j[p4, n1, n3, n3, 0, n5, 0, 0, 0, 1, 1, 1, 
      1, 1, 2])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((10 - 9*d + 2*d^2 + 5*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 3*n1*n3 + 6*n3^2)*
     j[p4, n1, n3, n3, 0, n5, 0, 0, 0, 1, 1, 1, 2, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((10 - 9*d + 2*d^2 + 5*n1 - 2*d*n1 + 16*n3 - 
      7*d*n3 + 3*n1*n3 + 6*n3^2)*j[p4, n1, n3, n3, 0, n5, 0, 0, 0, 1, 1, 2, 
      1, 1, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-10 + 9*d - 2*d^2 - 5*n1 + 2*d*n1 - 16*n3 + 7*d*n3 - 3*n1*n3 - 6*n3^2)*
     j[p4, n1, n3, n3, 0, n5, 0, 0, 0, 2, 1, 1, 1, 1, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-96*n3 + 60*d*n3 - 9*d^2*n3 - 48*n1*n3 + 
      15*d*n1*n3 - 6*n1^2*n3 - 48*n3^2 + 12*d*n3^2 - 12*n1*n3^2 + 20*n5 - 
      18*d*n5 + 4*d^2*n5 + 10*n1*n5 - 4*d*n1*n5 - 10*n3*n5 + d*n3*n5 - 
      6*n1*n3*n5 - 6*n3^2*n5 - 3*n3*n5^2)*j[p4, n1, n3, n3, 0, 1 + n5, 0, 0, 
      0, 1, 1, 1, 1, 1, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 
      26*n1 - 9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 
      19*n5 - 7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-32 + 20*d - 3*d^2 - 16*n1 + 5*d*n1 - 2*n1^2 - 16*n3 + 4*d*n3 - 
      4*n1*n3 - 14*n5 + 5*d*n5 - 4*n1*n5 - 6*n3*n5 - n5^2)*
     j[p4, n1, n3, n3, 0, 1 + n5, 0, 0, 0, 1, 1, 1, 2, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-32 + 20*d - 3*d^2 - 16*n1 + 5*d*n1 - 2*n1^2 - 
      16*n3 + 4*d*n3 - 4*n1*n3 - 14*n5 + 5*d*n5 - 4*n1*n5 - 6*n3*n5 - n5^2)*
     j[p4, n1, n3, n3, 0, 1 + n5, 0, 0, 0, 1, 1, 2, 1, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((10 - 9*d + 2*d^2 + 5*n1 - 2*d*n1 + 16*n3 - 
      7*d*n3 + 3*n1*n3 + 6*n3^2)*j[p4, n1, n3, n3, 1, -1 + n5, 0, 0, 0, 0, 1, 
      1, 1, 1, 2])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-10 + 9*d - 2*d^2 - 5*n1 + 2*d*n1 - 16*n3 + 7*d*n3 - 3*n1*n3 - 6*n3^2)*
     j[p4, n1, n3, n3, 1, -1 + n5, 0, 0, 0, 1, 1, 0, 2, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-10 + 9*d - 2*d^2 - 5*n1 + 2*d*n1 - 16*n3 + 
      7*d*n3 - 3*n1*n3 - 6*n3^2)*j[p4, n1, n3, n3, 1, -1 + n5, 0, 0, 0, 1, 1, 
      1, 0, 2, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-10 + 9*d - 2*d^2 - 5*n1 + 2*d*n1 - 16*n3 + 7*d*n3 - 3*n1*n3 - 6*n3^2)*
     j[p4, n1, n3, n3, 1, -1 + n5, 0, 0, 0, 1, 1, 2, 0, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((10 - 9*d + 2*d^2 + 5*n1 - 2*d*n1 + 16*n3 - 
      7*d*n3 + 3*n1*n3 + 6*n3^2)*j[p4, n1, n3, n3, 1, n5, -1, 0, 0, 0, 1, 1, 
      1, 1, 2])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-10 + 9*d - 2*d^2 - 5*n1 + 2*d*n1 - 16*n3 + 7*d*n3 - 3*n1*n3 - 6*n3^2)*
     j[p4, n1, n3, n3, 1, n5, -1, 0, 0, 1, 1, 0, 2, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-10 + 9*d - 2*d^2 - 5*n1 + 2*d*n1 - 16*n3 + 
      7*d*n3 - 3*n1*n3 - 6*n3^2)*j[p4, n1, n3, n3, 1, n5, -1, 0, 0, 1, 1, 2, 
      0, 1, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-10 + 9*d - 2*d^2 - 5*n1 + 2*d*n1 - 16*n3 + 7*d*n3 - 3*n1*n3 - 6*n3^2)*
     j[p4, n1, n3, n3, 1, n5, -1, 0, 0, 1, 2, 0, 1, 1, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-10 + 9*d - 2*d^2 - 5*n1 + 2*d*n1 - 16*n3 + 
      7*d*n3 - 3*n1*n3 - 6*n3^2)*j[p4, n1, n3, n3, 1, n5, -1, 0, 0, 1, 2, 1, 
      0, 1, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((10 - 9*d + 2*d^2 + 5*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 3*n1*n3 + 6*n3^2)*
     j[p4, n1, n3, n3, 1, n5, -1, 0, 0, 1, 2, 1, 1, 0, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((10 - 9*d + 2*d^2 + 5*n1 - 2*d*n1 + 16*n3 - 
      7*d*n3 + 3*n1*n3 + 6*n3^2)*j[p4, n1, n3, n3, 1, n5, 0, -1, 0, 0, 1, 1, 
      1, 1, 2])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((30 - 27*d + 6*d^2 + 15*n1 - 6*d*n1 + 48*n3 - 21*d*n3 + 9*n1*n3 + 
      18*n3^2)*j[p4, n1, n3, n3, 1, n5, 0, -1, 0, 0, 2, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-10 + 9*d - 2*d^2 - 5*n1 + 2*d*n1 - 16*n3 + 
      7*d*n3 - 3*n1*n3 - 6*n3^2)*j[p4, n1, n3, n3, 1, n5, 0, -1, 0, 1, 1, 0, 
      2, 1, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-10 + 9*d - 2*d^2 - 5*n1 + 2*d*n1 - 16*n3 + 7*d*n3 - 3*n1*n3 - 6*n3^2)*
     j[p4, n1, n3, n3, 1, n5, 0, -1, 0, 1, 1, 2, 0, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((10 - 9*d + 2*d^2 + 5*n1 - 2*d*n1 + 16*n3 - 
      7*d*n3 + 3*n1*n3 + 6*n3^2)*j[p4, n1, n3, n3, 1, n5, 0, 0, -1, 0, 1, 1, 
      1, 1, 2])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((10 - 9*d + 2*d^2 + 5*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 3*n1*n3 + 6*n3^2)*
     j[p4, n1, n3, n3, 1, n5, 0, 0, -1, 0, 2, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-10 + 9*d - 2*d^2 - 5*n1 + 2*d*n1 - 16*n3 + 
      7*d*n3 - 3*n1*n3 - 6*n3^2)*j[p4, n1, n3, n3, 1, n5, 0, 0, -1, 1, 1, 0, 
      2, 1, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((10 - 9*d + 2*d^2 + 5*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 3*n1*n3 + 6*n3^2)*
     j[p4, n1, n3, n3, 1, n5, 0, 0, -1, 1, 1, 1, 1, 2, 0])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-10 + 9*d - 2*d^2 - 5*n1 + 2*d*n1 - 16*n3 + 
      7*d*n3 - 3*n1*n3 - 6*n3^2)*j[p4, n1, n3, n3, 1, n5, 0, 0, -1, 1, 1, 2, 
      0, 1, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-50 + 45*d - 10*d^2 - 35*n1 + 19*d*n1 - 2*d^2*n1 - 5*n1^2 + 2*d*n1^2 - 
      80*n3 + 35*d*n3 - 31*n1*n3 + 7*d*n1*n3 - 3*n1^2*n3 - 30*n3^2 - 
      6*n1*n3^2 + 30*n5 - 27*d*n5 + 6*d^2*n5 + 15*n1*n5 - 6*d*n1*n5 + 
      48*n3*n5 - 21*d*n3*n5 + 9*n1*n3*n5 + 18*n3^2*n5)*
     j[p4, n1, n3, n3, 1, n5, 0, 0, 0, 0, 1, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((10 - 9*d + 2*d^2 + 5*n1 - 2*d*n1 + 16*n3 - 
      7*d*n3 + 3*n1*n3 + 6*n3^2)*j[p4, n1, n3, n3, 1, n5, 0, 0, 0, 0, 1, 2, 
      1, 1, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((10 - 9*d + 2*d^2 + 5*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 3*n1*n3 + 6*n3^2)*
     j[p4, n1, n3, n3, 1, n5, 0, 0, 0, 0, 2, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((10 - 9*d + 2*d^2 + 5*n1 - 2*d*n1 - 4*n3 + 
      11*d*n3 - 4*d^2*n3 - 7*n1*n3 + 4*d*n1*n3 - 26*n3^2 + 14*d*n3^2 - 
      6*n1*n3^2 - 12*n3^3)*j[p4, n1, n3, n3, 1, n5, 0, 0, 0, 1, 0, 1, 1, 1, 
      1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((40 - 36*d + 8*d^2 + 40*n1 - 26*d*n1 + 4*d^2*n1 + 10*n1^2 - 4*d*n1^2 + 
      74*n3 - 37*d*n3 + 2*d^2*n3 + 49*n1*n3 - 16*d*n1*n3 + 6*n1^2*n3 + 
      40*n3^2 - 7*d*n3^2 + 15*n1*n3^2 + 6*n3^3)*j[p4, n1, n3, n3, 1, n5, 0, 
      0, 0, 1, 1, 0, 1, 1, 1])/(2*(-3 + d - n1 - n5)*
     (72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 
      10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((32 - 20*d + 3*d^2 + 16*n1 - 5*d*n1 + 2*n1^2 + 16*n3 - 4*d*n3 + 4*n1*n3 + 
      14*n5 - 5*d*n5 + 4*n1*n5 + 6*n3*n5 + n5^2)*j[p4, n1, n3, n3, 1, n5, 0, 
      0, 0, 1, 1, 0, 2, 1, 1])/(2*(-3 + d - n1 - n5)*
     (72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 
      10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((10 - 9*d + 2*d^2 + 5*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 3*n1*n3 + 6*n3^2)*
     j[p4, n1, n3, n3, 1, n5, 0, 0, 0, 1, 1, 1, 0, 1, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-10 + 9*d - 2*d^2 - 5*n1 + 2*d*n1 - 16*n3 + 
      7*d*n3 - 3*n1*n3 - 6*n3^2)*j[p4, n1, n3, n3, 1, n5, 0, 0, 0, 1, 1, 1, 
      0, 1, 2])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-50 + 40*d - 8*d^2 - 15*n1 + 6*d*n1 - 60*n3 + 24*d*n3 - 9*n1*n3 - 
      18*n3^2 - 5*n5 + 2*d*n5 - 3*n3*n5)*j[p4, n1, n3, n3, 1, n5, 0, 0, 0, 1, 
      1, 1, 0, 2, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-10 + 9*d - 2*d^2 + 5*n1 - 7*d*n1 + 2*d^2*n1 + 5*n1^2 - 2*d*n1^2 - 
      16*n3 + 7*d*n3 + 13*n1*n3 - 7*d*n1*n3 + 3*n1^2*n3 - 6*n3^2 + 
      6*n1*n3^2 - 10*n5 + 9*d*n5 - 2*d^2*n5 - 5*n1*n5 + 2*d*n1*n5 - 
      16*n3*n5 + 7*d*n3*n5 - 3*n1*n3*n5 - 6*n3^2*n5)*
     j[p4, n1, n3, n3, 1, n5, 0, 0, 0, 1, 1, 1, 1, 0, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-10 + 9*d - 2*d^2 - 5*n1 + 2*d*n1 - 26*n3 + 
      16*d*n3 - 2*d^2*n3 - 8*n1*n3 + 2*d*n1*n3 - 22*n3^2 + 7*d*n3^2 - 
      3*n1*n3^2 - 6*n3^3 + 10*n5 - 9*d*n5 + 2*d^2*n5 + 5*n1*n5 - 2*d*n1*n5 + 
      16*n3*n5 - 7*d*n3*n5 + 3*n1*n3*n5 + 6*n3^2*n5)*
     j[p4, n1, n3, n3, 1, n5, 0, 0, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((30 - 22*d + 4*d^2 + 5*n1 - 2*d*n1 + 28*n3 - 
      10*d*n3 + 3*n1*n3 + 6*n3^2 + 5*n5 - 2*d*n5 + 3*n3*n5)*
     j[p4, n1, n3, n3, 1, n5, 0, 0, 0, 1, 1, 1, 1, 2, 0])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((10 - 9*d + 2*d^2 + 5*n1 - 2*d*n1 + 16*n3 - 
      7*d*n3 + 3*n1*n3 + 6*n3^2)*j[p4, n1, n3, n3, 1, n5, 0, 0, 0, 1, 1, 1, 
      2, 1, 0])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((22 - 11*d + d^2 + 11*n1 - 3*d*n1 + 2*n1^2 + 3*d*n3 + n1*n3 - 6*n3^2 + 
      14*n5 - 5*d*n5 + 4*n1*n5 + 6*n3*n5 + n5^2)*j[p4, n1, n3, n3, 1, n5, 0, 
      0, 0, 1, 1, 2, 0, 1, 1])/(2*(-3 + d - n1 - n5)*
     (72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 
      10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-10 + 9*d - 2*d^2 - 5*n1 + 2*d*n1 - 16*n3 + 7*d*n3 - 3*n1*n3 - 6*n3^2)*
     j[p4, n1, n3, n3, 1, n5, 0, 0, 0, 1, 2, 0, 1, 1, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-70 + 53*d - 10*d^2 - 15*n1 + 6*d*n1 - 72*n3 + 
      27*d*n3 - 9*n1*n3 - 18*n3^2 - 10*n5 + 4*d*n5 - 6*n3*n5)*
     j[p4, n1, n3, n3, 1, n5, 0, 0, 0, 1, 2, 1, 0, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((70 - 53*d + 10*d^2 + 15*n1 - 6*d*n1 + 72*n3 - 
      27*d*n3 + 9*n1*n3 + 18*n3^2 + 10*n5 - 4*d*n5 + 6*n3*n5)*
     j[p4, n1, n3, n3, 1, n5, 0, 0, 0, 1, 2, 1, 1, 0, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-10 + 9*d - 2*d^2 - 5*n1 + 2*d*n1 - 16*n3 + 
      7*d*n3 - 3*n1*n3 - 6*n3^2)*j[p4, n1, n3, n3, 1, n5, 0, 0, 0, 2, 1, 0, 
      1, 1, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-10 + 9*d - 2*d^2 - 5*n1 + 2*d*n1 - 16*n3 + 7*d*n3 - 3*n1*n3 - 6*n3^2)*
     j[p4, n1, n3, n3, 1, n5, 0, 0, 0, 2, 1, 1, 1, 1, 0])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-10*n5 + 9*d*n5 - 2*d^2*n5 - 5*n1*n5 + 2*d*n1*n5 - 
      16*n3*n5 + 7*d*n3*n5 - 3*n1*n3*n5 - 6*n3^2*n5)*
     j[p4, n1, n3, n3, 1, 1 + n5, -1, 0, 0, 0, 1, 1, 1, 1, 1])/
    ((3 - d + n1 + n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 60*n3 - 
      21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 9*n3*n5 + 
      n5^2)) + ((32 - 20*d + 3*d^2 + 16*n1 - 5*d*n1 + 2*n1^2 + 16*n3 - 
      4*d*n3 + 4*n1*n3 + 14*n5 - 5*d*n5 + 4*n1*n5 + 6*n3*n5 + n5^2)*
     j[p4, n1, n3, n3, 1, 1 + n5, -1, 0, 0, 1, 1, 0, 2, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((32 - 20*d + 3*d^2 + 16*n1 - 5*d*n1 + 2*n1^2 + 
      16*n3 - 4*d*n3 + 4*n1*n3 + 14*n5 - 5*d*n5 + 4*n1*n5 + 6*n3*n5 + n5^2)*
     j[p4, n1, n3, n3, 1, 1 + n5, -1, 0, 0, 1, 1, 2, 0, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((176 - 122*d + 21*d^2 + 68*n1 - 23*d*n1 + 6*n1^2 + 
      136*n3 - 46*d*n3 + 24*n1*n3 + 24*n3^2 + 52*n5 - 19*d*n5 + 12*n1*n5 + 
      24*n3*n5 + 3*n5^2)*j[p4, n1, n3, n3, 1, 1 + n5, -1, 0, 0, 1, 2, 1, 0, 
      1, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-176 + 122*d - 21*d^2 - 68*n1 + 23*d*n1 - 6*n1^2 - 136*n3 + 46*d*n3 - 
      24*n1*n3 - 24*n3^2 - 52*n5 + 19*d*n5 - 12*n1*n5 - 24*n3*n5 - 3*n5^2)*
     j[p4, n1, n3, n3, 1, 1 + n5, -1, 0, 0, 1, 2, 1, 1, 0, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-10*n5 + 9*d*n5 - 2*d^2*n5 - 5*n1*n5 + 2*d*n1*n5 - 
      16*n3*n5 + 7*d*n3*n5 - 3*n1*n3*n5 - 6*n3^2*n5)*
     j[p4, n1, n3, n3, 1, 1 + n5, 0, -1, 0, 0, 1, 1, 1, 1, 1])/
    ((3 - d + n1 + n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 60*n3 - 
      21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 9*n3*n5 + 
      n5^2)) + ((-176 + 122*d - 21*d^2 - 68*n1 + 23*d*n1 - 6*n1^2 - 136*n3 + 
      46*d*n3 - 24*n1*n3 - 24*n3^2 - 52*n5 + 19*d*n5 - 12*n1*n5 - 24*n3*n5 - 
      3*n5^2)*j[p4, n1, n3, n3, 1, 1 + n5, 0, -1, 0, 0, 2, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((32 - 20*d + 3*d^2 + 16*n1 - 5*d*n1 + 2*n1^2 + 
      16*n3 - 4*d*n3 + 4*n1*n3 + 14*n5 - 5*d*n5 + 4*n1*n5 + 6*n3*n5 + n5^2)*
     j[p4, n1, n3, n3, 1, 1 + n5, 0, -1, 0, 1, 1, 0, 2, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((40 - 31*d + 6*d^2 + 10*n1 - 4*d*n1 + 44*n3 - 
      17*d*n3 + 6*n1*n3 + 12*n3^2 + 5*n5 - 2*d*n5 + 3*n3*n5)*
     j[p4, n1, n3, n3, 1, 1 + n5, 0, -1, 0, 1, 1, 1, 1, 2, 0])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((32 - 20*d + 3*d^2 + 16*n1 - 5*d*n1 + 2*n1^2 + 
      16*n3 - 4*d*n3 + 4*n1*n3 + 14*n5 - 5*d*n5 + 4*n1*n5 + 6*n3*n5 + n5^2)*
     j[p4, n1, n3, n3, 1, 1 + n5, 0, -1, 0, 1, 1, 2, 0, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-176 + 122*d - 21*d^2 - 68*n1 + 23*d*n1 - 6*n1^2 - 
      136*n3 + 46*d*n3 - 24*n1*n3 - 24*n3^2 - 52*n5 + 19*d*n5 - 12*n1*n5 - 
      24*n3*n5 - 3*n5^2)*j[p4, n1, n3, n3, 1, 1 + n5, 0, 0, -1, 0, 2, 1, 1, 
      1, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((32 - 20*d + 3*d^2 + 16*n1 - 5*d*n1 + 2*n1^2 + 16*n3 - 4*d*n3 + 4*n1*n3 + 
      14*n5 - 5*d*n5 + 4*n1*n5 + 6*n3*n5 + n5^2)*j[p4, n1, n3, n3, 1, 1 + n5, 
      0, 0, -1, 1, 1, 0, 2, 1, 1])/(2*(-3 + d - n1 - n5)*
     (72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 
      10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((40 - 31*d + 6*d^2 + 10*n1 - 4*d*n1 + 44*n3 - 17*d*n3 + 6*n1*n3 + 
      12*n3^2 + 5*n5 - 2*d*n5 + 3*n3*n5)*j[p4, n1, n3, n3, 1, 1 + n5, 0, 0, 
      -1, 1, 1, 1, 1, 2, 0])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((32 - 20*d + 3*d^2 + 16*n1 - 5*d*n1 + 2*n1^2 + 16*n3 - 4*d*n3 + 4*n1*n3 + 
      14*n5 - 5*d*n5 + 4*n1*n5 + 6*n3*n5 + n5^2)*j[p4, n1, n3, n3, 1, 1 + n5, 
      0, 0, -1, 1, 1, 2, 0, 1, 1])/(2*(-3 + d - n1 - n5)*
     (72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 
      10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((144 - 102*d + 18*d^2 - 60*n1 + 64*d*n1 - 15*d^2*n1 - 32*n1^2 + 
      13*d*n1^2 - 2*n1^3 + 120*n3 - 42*d*n3 - 84*n1*n3 + 38*d*n1*n3 - 
      16*n1^2*n3 + 24*n3^2 - 24*n1*n3^2 + 150*n5 - 96*d*n5 + 15*d^2*n5 + 
      20*n1*n5 - 4*d*n1*n5 - 2*n1^2*n5 + 122*n3*n5 - 38*d*n3*n5 + 
      4*n1*n3*n5 + 24*n3^2*n5 + 26*n5^2 - 9*d*n5^2 + 3*n1*n5^2 + 12*n3*n5^2 + 
      n5^3)*j[p4, n1, n3, n3, 1, 1 + n5, 0, 0, 0, 0, 1, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-32 + 20*d - 3*d^2 - 16*n1 + 5*d*n1 - 2*n1^2 - 
      16*n3 + 4*d*n3 - 4*n1*n3 - 14*n5 + 5*d*n5 - 4*n1*n5 - 6*n3*n5 - n5^2)*
     j[p4, n1, n3, n3, 1, 1 + n5, 0, 0, 0, 0, 1, 2, 1, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-176 + 122*d - 21*d^2 - 68*n1 + 23*d*n1 - 6*n1^2 - 
      136*n3 + 46*d*n3 - 24*n1*n3 - 24*n3^2 - 52*n5 + 19*d*n5 - 12*n1*n5 - 
      24*n3*n5 - 3*n5^2)*j[p4, n1, n3, n3, 1, 1 + n5, 0, 0, 0, 0, 2, 1, 1, 1, 
      1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((32 - 20*d + 3*d^2 + 16*n1 - 5*d*n1 + 2*n1^2 - 48*n3 + 36*d*n3 - 
      6*d^2*n3 - 28*n1*n3 + 10*d*n1*n3 - 4*n1^2*n3 - 32*n3^2 + 8*d*n3^2 - 
      8*n1*n3^2 + 14*n5 - 5*d*n5 + 4*n1*n5 - 22*n3*n5 + 10*d*n3*n5 - 
      8*n1*n3*n5 - 12*n3^2*n5 + n5^2 - 2*n3*n5^2)*j[p4, n1, n3, n3, 1, 
      1 + n5, 0, 0, 0, 1, 0, 1, 1, 1, 1])/(2*(-3 + d - n1 - n5)*
     (72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 
      10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-64 + 40*d - 6*d^2 - 32*n1 + 10*d*n1 - 4*n1^2 - 12*d*n3 + 3*d^2*n3 + 
      8*n1*n3 - 5*d*n1*n3 + 2*n1^2*n3 + 16*n3^2 - 4*d*n3^2 + 4*n1*n3^2 - 
      28*n5 + 10*d*n5 - 8*n1*n5 + 2*n3*n5 - 5*d*n3*n5 + 4*n1*n3*n5 + 
      6*n3^2*n5 - 2*n5^2 + n3*n5^2)*j[p4, n1, n3, n3, 1, 1 + n5, 0, 0, 0, 1, 
      1, 0, 1, 1, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((40 - 31*d + 6*d^2 + 10*n1 - 4*d*n1 - 100*n3 + 85*d*n3 - 18*d^2*n3 - 
      46*n1*n3 + 18*d*n1*n3 - 4*n1^2*n3 - 108*n3^2 + 42*d*n3^2 - 20*n1*n3^2 - 
      24*n3^3 + 5*n5 - 2*d*n5 - 35*n3*n5 + 14*d*n3*n5 - 8*n1*n3*n5 - 
      18*n3^2*n5 - 2*n3*n5^2)*j[p4, n1, n3, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 
      0, 1, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-160 + 124*d - 24*d^2 - 152*n1 + 98*d*n1 - 15*d^2*n1 - 36*n1^2 + 
      13*d*n1^2 - 2*n1^3 + 272*n3 - 260*d*n3 + 60*d^2*n3 + 16*n1*n3 - 
      14*d*n1*n3 - 8*n1^2*n3 + 368*n3^2 - 152*d*n3^2 + 40*n1*n3^2 + 96*n3^3 + 
      96*n5 - 70*d*n5 + 13*d^2*n5 + 34*n1*n5 - 10*d*n1*n5 + 2*n1^2*n5 + 
      164*n3*n5 - 62*d*n3*n5 + 22*n1*n3*n5 + 60*n3^2*n5 + 42*n5^2 - 
      15*d*n5^2 + 11*n1*n5^2 + 22*n3*n5^2 + 3*n5^3)*
     j[p4, n1, n3, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 0, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((80 - 62*d + 12*d^2 + 20*n1 - 8*d*n1 + 184*n3 - 
      94*d*n3 + 9*d^2*n3 + 60*n1*n3 - 15*d*n1*n3 + 6*n1^2*n3 + 72*n3^2 - 
      12*d*n3^2 + 12*n1*n3^2 - 106*n5 + 74*d*n5 - 13*d^2*n5 - 58*n1*n5 + 
      19*d*n1*n5 - 6*n1^2*n5 - 32*n3*n5 + 11*d*n3*n5 - 6*n1*n3*n5 + 
      6*n3^2*n5 - 42*n5^2 + 15*d*n5^2 - 12*n1*n5^2 - 15*n3*n5^2 - 3*n5^3)*
     j[p4, n1, n3, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-320 + 296*d - 90*d^2 + 9*d^3 - 80*n1 + 36*d*n1 - 
      3*d^2*n1 - 2*d*n1^2 - 512*n3 + 332*d*n3 - 54*d^2*n3 - 88*n1*n3 + 
      24*d*n1*n3 - 272*n3^2 + 92*d*n3^2 - 24*n1*n3^2 - 48*n3^3 - 264*n5 + 
      176*d*n5 - 29*d^2*n5 - 72*n1*n5 + 22*d*n1*n5 - 4*n1^2*n5 - 252*n3*n5 + 
      84*d*n3*n5 - 32*n1*n3*n5 - 60*n3^2*n5 - 48*n5^2 + 17*d*n5^2 - 
      8*n1*n5^2 - 24*n3*n5^2 - 2*n5^3)*j[p4, n1, n3, n3, 1, 1 + n5, 0, 0, 0, 
      1, 1, 1, 1, 1, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((112 - 82*d + 15*d^2 + 36*n1 - 13*d*n1 + 2*n1^2 + 104*n3 - 38*d*n3 + 
      16*n1*n3 + 24*n3^2 + 24*n5 - 9*d*n5 + 4*n1*n5 + 12*n3*n5 + n5^2)*
     j[p4, n1, n3, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 2, 0])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-32 + 20*d - 3*d^2 - 16*n1 + 5*d*n1 - 2*n1^2 - 
      16*n3 + 4*d*n3 - 4*n1*n3 - 14*n5 + 5*d*n5 - 4*n1*n5 - 6*n3*n5 - n5^2)*
     j[p4, n1, n3, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 2, 1, 0])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-40 + 31*d - 6*d^2 - 10*n1 + 4*d*n1 - 44*n3 + 
      17*d*n3 - 6*n1*n3 - 12*n3^2 - 45*n5 + 33*d*n5 - 6*d^2*n5 - 10*n1*n5 + 
      4*d*n1*n5 - 47*n3*n5 + 17*d*n3*n5 - 6*n1*n3*n5 - 12*n3^2*n5 - 5*n5^2 + 
      2*d*n5^2 - 3*n3*n5^2)*j[p4, n1, n3, n3, 1, 2 + n5, -1, 0, 0, 1, 1, 1, 
      1, 0, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((40 - 31*d + 6*d^2 + 10*n1 - 4*d*n1 + 44*n3 - 17*d*n3 + 6*n1*n3 + 
      12*n3^2 + 45*n5 - 33*d*n5 + 6*d^2*n5 + 10*n1*n5 - 4*d*n1*n5 + 
      47*n3*n5 - 17*d*n3*n5 + 6*n1*n3*n5 + 12*n3^2*n5 + 5*n5^2 - 2*d*n5^2 + 
      3*n3*n5^2)*j[p4, n1, n3, n3, 1, 2 + n5, -1, 0, 0, 1, 1, 1, 1, 1, 0])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((10 - 9*d + 2*d^2 + 5*n1 - 2*d*n1 + 16*n3 - 
      7*d*n3 + 3*n1*n3 + 6*n3^2)*j[p4, n1, n3, n3, 2, -1 + n5, 0, 0, 0, 0, 1, 
      1, 1, 1, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-10 + 9*d - 2*d^2 - 5*n1 + 2*d*n1 - 16*n3 + 7*d*n3 - 3*n1*n3 - 6*n3^2)*
     j[p4, n1, n3, n3, 2, -1 + n5, 0, 0, 0, 1, 0, 1, 1, 1, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((10 - 9*d + 2*d^2 + 5*n1 - 2*d*n1 + 16*n3 - 
      7*d*n3 + 3*n1*n3 + 6*n3^2)*j[p4, n1, n3, n3, 2, -1 + n5, 0, 0, 0, 1, 1, 
      0, 1, 1, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((10 - 9*d + 2*d^2 + 5*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 3*n1*n3 + 6*n3^2)*
     j[p4, n1, n3, n3, 2, n5, -1, 0, 0, 0, 1, 1, 1, 1, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-10 + 9*d - 2*d^2 - 5*n1 + 2*d*n1 - 16*n3 + 
      7*d*n3 - 3*n1*n3 - 6*n3^2)*j[p4, n1, n3, n3, 2, n5, -1, 0, 0, 1, 0, 1, 
      1, 1, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((10 - 9*d + 2*d^2 + 5*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 3*n1*n3 + 6*n3^2)*
     j[p4, n1, n3, n3, 2, n5, -1, 0, 0, 1, 1, 0, 1, 1, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-10 + 9*d - 2*d^2 - 5*n1 + 2*d*n1 - 16*n3 + 
      7*d*n3 - 3*n1*n3 - 6*n3^2)*j[p4, n1, n3, n3, 2, n5, 0, -1, 0, 0, 1, 1, 
      1, 1, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((10 - 9*d + 2*d^2 + 5*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 3*n1*n3 + 6*n3^2)*
     j[p4, n1, n3, n3, 2, n5, 0, -1, 0, 1, 0, 1, 1, 1, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-10 + 9*d - 2*d^2 - 5*n1 + 2*d*n1 - 16*n3 + 
      7*d*n3 - 3*n1*n3 - 6*n3^2)*j[p4, n1, n3, n3, 2, n5, 0, -1, 0, 1, 1, 0, 
      1, 1, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-10 + 9*d - 2*d^2 - 5*n1 + 2*d*n1 - 16*n3 + 7*d*n3 - 3*n1*n3 - 6*n3^2)*
     j[p4, n1, n3, n3, 2, n5, 0, -1, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-10 + 9*d - 2*d^2 - 5*n1 + 2*d*n1 - 16*n3 + 
      7*d*n3 - 3*n1*n3 - 6*n3^2)*j[p4, n1, n3, n3, 2, n5, 0, 0, -1, 0, 1, 1, 
      1, 1, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((10 - 9*d + 2*d^2 + 5*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 3*n1*n3 + 6*n3^2)*
     j[p4, n1, n3, n3, 2, n5, 0, 0, -1, 1, 0, 1, 1, 1, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-10 + 9*d - 2*d^2 - 5*n1 + 2*d*n1 - 16*n3 + 
      7*d*n3 - 3*n1*n3 - 6*n3^2)*j[p4, n1, n3, n3, 2, n5, 0, 0, -1, 1, 1, 0, 
      1, 1, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-10 + 9*d - 2*d^2 - 5*n1 + 2*d*n1 - 16*n3 + 7*d*n3 - 3*n1*n3 - 6*n3^2)*
     j[p4, n1, n3, n3, 2, n5, 0, 0, -1, 1, 1, 1, 1, 1, 0])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-12 + 7*d - d^2 - 16*n1 + 5*d*n1 - 2*n1^2 - 4*n3 + 
      d*n3 - 4*n1*n3 - 9*n5 + 3*d*n5 - 4*n1*n5 - 3*n3*n5 - n5^2)*
     j[p4, n1, n3, n3, 2, n5, 0, 0, 0, 1, 1, 1, 1, 1, 0])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-32 + 20*d - 3*d^2 - 16*n1 + 5*d*n1 - 2*n1^2 - 
      16*n3 + 4*d*n3 - 4*n1*n3 - 14*n5 + 5*d*n5 - 4*n1*n5 - 6*n3*n5 - n5^2)*
     j[p4, n1, n3, n3, 2, 1 + n5, -1, 0, 0, 1, 1, 1, 1, 1, 0])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((32 - 20*d + 3*d^2 + 16*n1 - 5*d*n1 + 2*n1^2 + 
      16*n3 - 4*d*n3 + 4*n1*n3 + 14*n5 - 5*d*n5 + 4*n1*n5 + 6*n3*n5 + n5^2)*
     j[p4, n1, n3, n3, 2, 1 + n5, 0, -1, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((32 - 20*d + 3*d^2 + 16*n1 - 5*d*n1 + 2*n1^2 + 
      16*n3 - 4*d*n3 + 4*n1*n3 + 14*n5 - 5*d*n5 + 4*n1*n5 + 6*n3*n5 + n5^2)*
     j[p4, n1, n3, n3, 2, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 1, 0])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-30*n3 + 27*d*n3 - 6*d^2*n3 - 15*n1*n3 + 
      6*d*n1*n3 - 48*n3^2 + 21*d*n3^2 - 9*n1*n3^2 - 18*n3^3)*
     j[p4, n1, n3, 1 + n3, 0, n5, 0, -1, 0, 1, 1, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-30*n3 + 27*d*n3 - 6*d^2*n3 - 15*n1*n3 + 
      6*d*n1*n3 - 48*n3^2 + 21*d*n3^2 - 9*n1*n3^2 - 18*n3^3)*
     j[p4, n1, n3, 1 + n3, 0, n5, 0, 0, -1, 1, 1, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-30*n3 + 22*d*n3 - 4*d^2*n3 - 5*n1*n3 + 
      2*d*n1*n3 - 28*n3^2 + 10*d*n3^2 - 3*n1*n3^2 - 6*n3^3 - 5*n3*n5 + 
      2*d*n3*n5 - 3*n3^2*n5)*j[p4, n1, n3, 1 + n3, 0, n5, 0, 0, 0, 1, 1, 1, 
      1, 1, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((96*n3 - 60*d*n3 + 9*d^2*n3 + 48*n1*n3 - 15*d*n1*n3 + 6*n1^2*n3 + 
      48*n3^2 - 12*d*n3^2 + 12*n1*n3^2 + 42*n3*n5 - 15*d*n3*n5 + 
      12*n1*n3*n5 + 18*n3^2*n5 + 3*n3*n5^2)*j[p4, n1, n3, 1 + n3, 0, 1 + n5, 
      0, -1, 0, 1, 1, 1, 1, 1, 1])/(2*(-3 + d - n1 - n5)*
     (72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 
      10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((96*n3 - 60*d*n3 + 9*d^2*n3 + 48*n1*n3 - 15*d*n1*n3 + 6*n1^2*n3 + 
      48*n3^2 - 12*d*n3^2 + 12*n1*n3^2 + 42*n3*n5 - 15*d*n3*n5 + 
      12*n1*n3*n5 + 18*n3^2*n5 + 3*n3*n5^2)*j[p4, n1, n3, 1 + n3, 0, 1 + n5, 
      0, 0, -1, 1, 1, 1, 1, 1, 1])/(2*(-3 + d - n1 - n5)*
     (72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 
      10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((32*n3 - 20*d*n3 + 3*d^2*n3 + 16*n1*n3 - 5*d*n1*n3 + 2*n1^2*n3 + 
      16*n3^2 - 4*d*n3^2 + 4*n1*n3^2 + 14*n3*n5 - 5*d*n3*n5 + 4*n1*n3*n5 + 
      6*n3^2*n5 + n3*n5^2)*j[p4, n1, n3, 1 + n3, 0, 1 + n5, 0, 0, 0, 1, 1, 1, 
      1, 1, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((20*n3 - 18*d*n3 + 4*d^2*n3 + 10*n1*n3 - 4*d*n1*n3 + 32*n3^2 - 
      14*d*n3^2 + 6*n1*n3^2 + 12*n3^3)*j[p4, n1, n3, 1 + n3, 1, n5, 0, -1, 0, 
      1, 0, 1, 1, 1, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-20*n3 + 18*d*n3 - 4*d^2*n3 - 10*n1*n3 + 4*d*n1*n3 - 32*n3^2 + 
      14*d*n3^2 - 6*n1*n3^2 - 12*n3^3)*j[p4, n1, n3, 1 + n3, 1, n5, 0, -1, 0, 
      1, 1, 0, 1, 1, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((10*n3 - 9*d*n3 + 2*d^2*n3 + 5*n1*n3 - 2*d*n1*n3 + 16*n3^2 - 7*d*n3^2 + 
      3*n1*n3^2 + 6*n3^3)*j[p4, n1, n3, 1 + n3, 1, n5, 0, -1, 0, 1, 1, 1, 0, 
      1, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((30*n3 - 27*d*n3 + 6*d^2*n3 + 15*n1*n3 - 6*d*n1*n3 + 48*n3^2 - 
      21*d*n3^2 + 9*n1*n3^2 + 18*n3^3)*j[p4, n1, n3, 1 + n3, 1, n5, 0, -1, 0, 
      1, 1, 1, 1, 1, 0])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((20*n3 - 18*d*n3 + 4*d^2*n3 + 10*n1*n3 - 4*d*n1*n3 + 32*n3^2 - 
      14*d*n3^2 + 6*n1*n3^2 + 12*n3^3)*j[p4, n1, n3, 1 + n3, 1, n5, 0, 0, -1, 
      1, 0, 1, 1, 1, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-20*n3 + 18*d*n3 - 4*d^2*n3 - 10*n1*n3 + 4*d*n1*n3 - 32*n3^2 + 
      14*d*n3^2 - 6*n1*n3^2 - 12*n3^3)*j[p4, n1, n3, 1 + n3, 1, n5, 0, 0, -1, 
      1, 1, 0, 1, 1, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((10*n3 - 9*d*n3 + 2*d^2*n3 + 5*n1*n3 - 2*d*n1*n3 + 16*n3^2 - 7*d*n3^2 + 
      3*n1*n3^2 + 6*n3^3)*j[p4, n1, n3, 1 + n3, 1, n5, 0, 0, -1, 1, 1, 1, 0, 
      1, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((30*n3 - 27*d*n3 + 6*d^2*n3 + 15*n1*n3 - 6*d*n1*n3 + 48*n3^2 - 
      21*d*n3^2 + 9*n1*n3^2 + 18*n3^3)*j[p4, n1, n3, 1 + n3, 1, n5, 0, 0, -1, 
      1, 1, 1, 1, 1, 0])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-40*n3 + 31*d*n3 - 6*d^2*n3 - 10*n1*n3 + 4*d*n1*n3 - 44*n3^2 + 
      17*d*n3^2 - 6*n1*n3^2 - 12*n3^3 - 5*n3*n5 + 2*d*n3*n5 - 3*n3^2*n5)*
     j[p4, n1, n3, 1 + n3, 1, n5, 0, 0, 0, 1, 1, 1, 0, 1, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((10*n3 - 9*d*n3 + 2*d^2*n3 + 5*n1*n3 - 2*d*n1*n3 + 
      16*n3^2 - 7*d*n3^2 + 3*n1*n3^2 + 6*n3^3)*j[p4, n1, n3, 1 + n3, 1, n5, 
      0, 0, 0, 1, 1, 1, 1, 0, 1])/(2*(-3 + d - n1 - n5)*
     (72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 
      10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((30*n3 - 22*d*n3 + 4*d^2*n3 + 5*n1*n3 - 2*d*n1*n3 + 28*n3^2 - 10*d*n3^2 + 
      3*n1*n3^2 + 6*n3^3 + 5*n3*n5 - 2*d*n3*n5 + 3*n3^2*n5)*
     j[p4, n1, n3, 1 + n3, 1, n5, 0, 0, 0, 1, 1, 1, 1, 1, 0])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-96*n3 + 60*d*n3 - 9*d^2*n3 - 48*n1*n3 + 
      15*d*n1*n3 - 6*n1^2*n3 - 48*n3^2 + 12*d*n3^2 - 12*n1*n3^2 - 42*n3*n5 + 
      15*d*n3*n5 - 12*n1*n3*n5 - 18*n3^2*n5 - 3*n3*n5^2)*
     j[p4, n1, n3, 1 + n3, 1, 1 + n5, 0, -1, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-96*n3 + 60*d*n3 - 9*d^2*n3 - 48*n1*n3 + 
      15*d*n1*n3 - 6*n1^2*n3 - 48*n3^2 + 12*d*n3^2 - 12*n1*n3^2 - 42*n3*n5 + 
      15*d*n3*n5 - 12*n1*n3*n5 - 18*n3^2*n5 - 3*n3*n5^2)*
     j[p4, n1, n3, 1 + n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 1, 0])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-32*n3 + 20*d*n3 - 3*d^2*n3 - 16*n1*n3 + 
      5*d*n1*n3 - 2*n1^2*n3 - 16*n3^2 + 4*d*n3^2 - 4*n1*n3^2 - 14*n3*n5 + 
      5*d*n3*n5 - 4*n1*n3*n5 - 6*n3^2*n5 - n3*n5^2)*
     j[p4, n1, n3, 1 + n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-10*n3 + 9*d*n3 - 2*d^2*n3 - 5*n1*n3 + 2*d*n1*n3 - 
      16*n3^2 + 7*d*n3^2 - 3*n1*n3^2 - 6*n3^3)*j[p4, n1, 1 + n3, -1 + n3, 1, 
      n5, 0, 0, 0, 1, 0, 1, 1, 1, 1])/(2*(-3 + d - n1 - n5)*
     (72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 
      10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-32*n3 + 20*d*n3 - 3*d^2*n3 - 16*n1*n3 + 5*d*n1*n3 - 2*n1^2*n3 - 
      16*n3^2 + 4*d*n3^2 - 4*n1*n3^2 - 14*n3*n5 + 5*d*n3*n5 - 4*n1*n3*n5 - 
      6*n3^2*n5 - n3*n5^2)*j[p4, n1, 1 + n3, -1 + n3, 1, 1 + n5, 0, 0, 0, 1, 
      0, 1, 1, 1, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((10*n3 - 9*d*n3 + 2*d^2*n3 + 5*n1*n3 - 2*d*n1*n3 + 16*n3^2 - 7*d*n3^2 + 
      3*n1*n3^2 + 6*n3^3)*j[p4, n1, 1 + n3, n3, 1, -1 + n5, 0, 0, 0, 1, 0, 1, 
      1, 1, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((10*n3 - 9*d*n3 + 2*d^2*n3 + 5*n1*n3 - 2*d*n1*n3 + 16*n3^2 - 7*d*n3^2 + 
      3*n1*n3^2 + 6*n3^3)*j[p4, n1, 1 + n3, n3, 1, -1 + n5, 0, 0, 0, 1, 1, 1, 
      0, 1, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-10*n3 + 9*d*n3 - 2*d^2*n3 - 5*n1*n3 + 2*d*n1*n3 - 16*n3^2 + 7*d*n3^2 - 
      3*n1*n3^2 - 6*n3^3)*j[p4, n1, 1 + n3, n3, 1, -1 + n5, 0, 0, 0, 1, 1, 1, 
      1, 0, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-10*n3 + 9*d*n3 - 2*d^2*n3 - 5*n1*n3 + 2*d*n1*n3 - 16*n3^2 + 7*d*n3^2 - 
      3*n1*n3^2 - 6*n3^3)*j[p4, n1, 1 + n3, n3, 1, n5, -1, 0, 0, 1, 0, 1, 1, 
      1, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-10*n3 + 9*d*n3 - 2*d^2*n3 - 5*n1*n3 + 2*d*n1*n3 - 16*n3^2 + 7*d*n3^2 - 
      3*n1*n3^2 - 6*n3^3)*j[p4, n1, 1 + n3, n3, 1, n5, -1, 0, 0, 1, 1, 1, 0, 
      1, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((10*n3 - 9*d*n3 + 2*d^2*n3 + 5*n1*n3 - 2*d*n1*n3 + 16*n3^2 - 7*d*n3^2 + 
      3*n1*n3^2 + 6*n3^3)*j[p4, n1, 1 + n3, n3, 1, n5, -1, 0, 0, 1, 1, 1, 1, 
      0, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((30*n3 - 27*d*n3 + 6*d^2*n3 + 15*n1*n3 - 6*d*n1*n3 + 48*n3^2 - 
      21*d*n3^2 + 9*n1*n3^2 + 18*n3^3)*j[p4, n1, 1 + n3, n3, 1, n5, 0, -1, 0, 
      1, 0, 1, 1, 1, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-10*n3 + 9*d*n3 - 2*d^2*n3 - 5*n1*n3 + 2*d*n1*n3 - 16*n3^2 + 7*d*n3^2 - 
      3*n1*n3^2 - 6*n3^3)*j[p4, n1, 1 + n3, n3, 1, n5, 0, 0, -1, 1, 0, 1, 1, 
      1, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((256*n3 - 184*d*n3 + 33*d^2*n3 + 88*n1*n3 - 31*d*n1*n3 + 6*n1^2*n3 + 
      224*n3^2 - 80*d*n3^2 + 36*n1*n3^2 + 48*n3^3 + 62*n3*n5 - 23*d*n3*n5 + 
      12*n1*n3*n5 + 30*n3^2*n5 + 3*n3*n5^2)*j[p4, n1, 1 + n3, n3, 1, n5, 0, 
      0, 0, 1, 0, 1, 1, 1, 1])/(2*(-3 + d - n1 - n5)*
     (72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 
      10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-176*n3 + 122*d*n3 - 21*d^2*n3 - 68*n1*n3 + 23*d*n1*n3 - 6*n1^2*n3 - 
      136*n3^2 + 46*d*n3^2 - 24*n1*n3^2 - 24*n3^3 - 52*n3*n5 + 19*d*n3*n5 - 
      12*n1*n3*n5 - 24*n3^2*n5 - 3*n3*n5^2)*j[p4, n1, 1 + n3, n3, 1, n5, 0, 
      0, 0, 1, 1, 1, 0, 1, 1])/(2*(-3 + d - n1 - n5)*
     (72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 
      10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((176*n3 - 122*d*n3 + 21*d^2*n3 + 68*n1*n3 - 23*d*n1*n3 + 6*n1^2*n3 + 
      136*n3^2 - 46*d*n3^2 + 24*n1*n3^2 + 24*n3^3 + 52*n3*n5 - 19*d*n3*n5 + 
      12*n1*n3*n5 + 24*n3^2*n5 + 3*n3*n5^2)*j[p4, n1, 1 + n3, n3, 1, n5, 0, 
      0, 0, 1, 1, 1, 1, 0, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 
      26*n1 - 9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 
      19*n5 - 7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) - 
   (2*n3*j[p4, n1, 1 + n3, n3, 1, n5, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    (-3 + d - n1 - n5) + ((32*n3 - 20*d*n3 + 3*d^2*n3 + 16*n1*n3 - 
      5*d*n1*n3 + 2*n1^2*n3 + 16*n3^2 - 4*d*n3^2 + 4*n1*n3^2 + 14*n3*n5 - 
      5*d*n3*n5 + 4*n1*n3*n5 + 6*n3^2*n5 + n3*n5^2)*
     j[p4, n1, 1 + n3, n3, 1, 1 + n5, -1, 0, 0, 1, 0, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((256*n3 - 184*d*n3 + 33*d^2*n3 + 88*n1*n3 - 
      31*d*n1*n3 + 6*n1^2*n3 + 224*n3^2 - 80*d*n3^2 + 36*n1*n3^2 + 48*n3^3 + 
      62*n3*n5 - 23*d*n3*n5 + 12*n1*n3*n5 + 30*n3^2*n5 + 3*n3*n5^2)*
     j[p4, n1, 1 + n3, n3, 1, 1 + n5, -1, 0, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-256*n3 + 184*d*n3 - 33*d^2*n3 - 88*n1*n3 + 
      31*d*n1*n3 - 6*n1^2*n3 - 224*n3^2 + 80*d*n3^2 - 36*n1*n3^2 - 48*n3^3 - 
      62*n3*n5 + 23*d*n3*n5 - 12*n1*n3*n5 - 30*n3^2*n5 - 3*n3*n5^2)*
     j[p4, n1, 1 + n3, n3, 1, 1 + n5, -1, 0, 0, 1, 1, 1, 1, 0, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + (2*n3*j[p4, n1, 1 + n3, n3, 1, 1 + n5, -1, 0, 0, 1, 
      1, 1, 1, 1, 1])/(-3 + d - n1 - n5) + 
   ((32*n3 - 20*d*n3 + 3*d^2*n3 + 16*n1*n3 - 5*d*n1*n3 + 2*n1^2*n3 + 
      16*n3^2 - 4*d*n3^2 + 4*n1*n3^2 + 14*n3*n5 - 5*d*n3*n5 + 4*n1*n3*n5 + 
      6*n3^2*n5 + n3*n5^2)*j[p4, n1, 1 + n3, n3, 1, 1 + n5, 0, -1, 0, 1, 0, 
      1, 1, 1, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((32*n3 - 20*d*n3 + 3*d^2*n3 + 16*n1*n3 - 5*d*n1*n3 + 2*n1^2*n3 + 
      16*n3^2 - 4*d*n3^2 + 4*n1*n3^2 + 14*n3*n5 - 5*d*n3*n5 + 4*n1*n3*n5 + 
      6*n3^2*n5 + n3*n5^2)*j[p4, n1, 1 + n3, n3, 1, 1 + n5, 0, 0, -1, 1, 0, 
      1, 1, 1, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((30 - 22*d + 4*d^2 + 5*n1 - 2*d*n1 + 28*n3 - 10*d*n3 + 3*n1*n3 + 6*n3^2 + 
      5*n5 - 2*d*n5 + 3*n3*n5)*j[p4, 1 + n1, -1 + n3, n3, 1, n5, 0, 0, 0, 0, 
      1, 1, 1, 1, 2])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((50 - 35*d + 6*d^2 + 5*n1 - 2*d*n1 + 40*n3 - 13*d*n3 + 3*n1*n3 + 6*n3^2 + 
      10*n5 - 4*d*n5 + 6*n3*n5)*j[p4, 1 + n1, -1 + n3, n3, 1, n5, 0, 0, 0, 0, 
      2, 1, 1, 1, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-50 + 35*d - 6*d^2 - 5*n1 + 2*d*n1 - 40*n3 + 13*d*n3 - 3*n1*n3 - 
      6*n3^2 - 10*n5 + 4*d*n5 - 6*n3*n5)*j[p4, 1 + n1, -1 + n3, n3, 1, n5, 0, 
      0, 0, 1, 1, 0, 2, 1, 1])/(2*(-3 + d - n1 - n5)*
     (72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 
      10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((10 - 9*d + 2*d^2 + 5*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 3*n1*n3 + 6*n3^2)*
     j[p4, 1 + n1, -1 + n3, n3, 1, n5, 0, 0, 0, 1, 1, 1, 1, 0, 2])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-50 + 35*d - 6*d^2 - 5*n1 + 2*d*n1 - 40*n3 + 
      13*d*n3 - 3*n1*n3 - 6*n3^2 - 10*n5 + 4*d*n5 - 6*n3*n5)*
     j[p4, 1 + n1, -1 + n3, n3, 1, n5, 0, 0, 0, 1, 1, 2, 0, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-40 + 26*d - 4*d^2 - 24*n3 + 6*d*n3 - 10*n5 + 
      4*d*n5 - 6*n3*n5)*j[p4, 1 + n1, -1 + n3, n3, 1, n5, 0, 0, 0, 1, 2, 0, 
      1, 1, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((70 - 53*d + 10*d^2 + 15*n1 - 6*d*n1 + 72*n3 - 27*d*n3 + 9*n1*n3 + 
      18*n3^2 + 10*n5 - 4*d*n5 + 6*n3*n5)*j[p4, 1 + n1, -1 + n3, n3, 1, n5, 
      0, 0, 0, 1, 2, 1, 0, 1, 1])/(2*(-3 + d - n1 - n5)*
     (72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 
      10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-70 + 53*d - 10*d^2 - 15*n1 + 6*d*n1 - 72*n3 + 27*d*n3 - 9*n1*n3 - 
      18*n3^2 - 10*n5 + 4*d*n5 - 6*n3*n5)*j[p4, 1 + n1, -1 + n3, n3, 1, n5, 
      0, 0, 0, 1, 2, 1, 1, 0, 1])/(2*(-3 + d - n1 - n5)*
     (72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 
      10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((30 - 22*d + 4*d^2 + 5*n1 - 2*d*n1 + 28*n3 - 10*d*n3 + 3*n1*n3 + 6*n3^2 + 
      5*n5 - 2*d*n5 + 3*n3*n5)*j[p4, 1 + n1, -1 + n3, n3, 1, n5, 0, 0, 0, 2, 
      1, 1, 1, 1, 0])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((30*n5 - 22*d*n5 + 4*d^2*n5 + 5*n1*n5 - 2*d*n1*n5 + 28*n3*n5 - 
      10*d*n3*n5 + 3*n1*n3*n5 + 6*n3^2*n5 + 5*n5^2 - 2*d*n5^2 + 3*n3*n5^2)*
     j[p4, 1 + n1, -1 + n3, n3, 1, 1 + n5, 0, 0, 0, 0, 1, 1, 1, 1, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((40*n1 - 31*d*n1 + 6*d^2*n1 + 10*n1^2 - 4*d*n1^2 + 
      44*n1*n3 - 17*d*n1*n3 + 6*n1^2*n3 + 12*n1*n3^2 - 40*n5 + 31*d*n5 - 
      6*d^2*n5 - 5*n1*n5 + 2*d*n1*n5 - 44*n3*n5 + 17*d*n3*n5 - 3*n1*n3*n5 - 
      12*n3^2*n5 - 5*n5^2 + 2*d*n5^2 - 3*n3*n5^2)*j[p4, 1 + n1, -1 + n3, n3, 
      1, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 0, 1])/((-3 + d - n1 - n5)*
     (72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 
      10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((40*n5 - 31*d*n5 + 6*d^2*n5 + 10*n1*n5 - 4*d*n1*n5 + 44*n3*n5 - 
      17*d*n3*n5 + 6*n1*n3*n5 + 12*n3^2*n5 + 5*n5^2 - 2*d*n5^2 + 3*n3*n5^2)*
     j[p4, 1 + n1, -1 + n3, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 0])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-40*n1 + 31*d*n1 - 6*d^2*n1 - 10*n1^2 + 4*d*n1^2 - 
      44*n1*n3 + 17*d*n1*n3 - 6*n1^2*n3 - 12*n1*n3^2 + 30*n5 - 22*d*n5 + 
      4*d^2*n5 + 28*n3*n5 - 10*d*n3*n5 + 6*n3^2*n5 + 5*n5^2 - 2*d*n5^2 + 
      3*n3*n5^2)*j[p4, 1 + n1, -1 + n3, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 
      1, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-20 + 13*d - 2*d^2 - 12*n3 + 3*d*n3 - 5*n5 + 2*d*n5 - 3*n3*n5)*
     j[p4, 1 + n1, -1 + n3, n3, 2, n5, 0, 0, 0, 1, 1, 1, 1, 1, 0])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-50*n3 + 35*d*n3 - 6*d^2*n3 - 5*n1*n3 + 
      2*d*n1*n3 - 40*n3^2 + 13*d*n3^2 - 3*n1*n3^2 - 6*n3^3 - 10*n3*n5 + 
      4*d*n3*n5 - 6*n3^2*n5)*j[p4, 1 + n1, -1 + n3, 1 + n3, 0, n5, 0, 0, 0, 
      1, 1, 1, 1, 1, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((30*n3 - 22*d*n3 + 4*d^2*n3 + 5*n1*n3 - 2*d*n1*n3 + 28*n3^2 - 10*d*n3^2 + 
      3*n1*n3^2 + 6*n3^3 + 5*n3*n5 - 2*d*n3*n5 + 3*n3^2*n5)*
     j[p4, 1 + n1, -1 + n3, 1 + n3, 1, n5, 0, 0, 0, 1, 0, 1, 1, 1, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-30*n3 + 22*d*n3 - 4*d^2*n3 - 5*n1*n3 + 
      2*d*n1*n3 - 28*n3^2 + 10*d*n3^2 - 3*n1*n3^2 - 6*n3^3 - 5*n3*n5 + 
      2*d*n3*n5 - 3*n3^2*n5)*j[p4, 1 + n1, -1 + n3, 1 + n3, 1, n5, 0, 0, 0, 
      1, 1, 0, 1, 1, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((30*n3 - 22*d*n3 + 4*d^2*n3 + 5*n1*n3 - 2*d*n1*n3 + 28*n3^2 - 10*d*n3^2 + 
      3*n1*n3^2 + 6*n3^3 + 5*n3*n5 - 2*d*n3*n5 + 3*n3^2*n5)*
     j[p4, 1 + n1, -1 + n3, 1 + n3, 1, n5, 0, 0, 0, 1, 1, 1, 0, 1, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((10*n3 - 9*d*n3 + 2*d^2*n3 + 5*n1*n3 - 2*d*n1*n3 + 
      16*n3^2 - 7*d*n3^2 + 3*n1*n3^2 + 6*n3^3)*j[p4, 1 + n1, -1 + n3, 1 + n3, 
      1, n5, 0, 0, 0, 1, 1, 1, 1, 0, 1])/(2*(-3 + d - n1 - n5)*
     (72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 
      10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((50*n3 - 35*d*n3 + 6*d^2*n3 + 5*n1*n3 - 2*d*n1*n3 + 40*n3^2 - 13*d*n3^2 + 
      3*n1*n3^2 + 6*n3^3 + 10*n3*n5 - 4*d*n3*n5 + 6*n3^2*n5)*
     j[p4, 1 + n1, -1 + n3, 1 + n3, 1, n5, 0, 0, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((50 - 35*d + 6*d^2 + 5*n1 - 2*d*n1 + 40*n3 - 
      13*d*n3 + 3*n1*n3 + 6*n3^2 + 10*n5 - 4*d*n5 + 6*n3*n5)*
     j[p4, 1 + n1, n3, -1 + n3, 1, n5, 0, 0, 0, 0, 2, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-50 + 35*d - 6*d^2 - 5*n1 + 2*d*n1 - 40*n3 + 
      13*d*n3 - 3*n1*n3 - 6*n3^2 - 10*n5 + 4*d*n5 - 6*n3*n5)*
     j[p4, 1 + n1, n3, -1 + n3, 1, n5, 0, 0, 0, 1, 2, 0, 1, 1, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((40*n1 - 31*d*n1 + 6*d^2*n1 + 10*n1^2 - 4*d*n1^2 + 
      44*n1*n3 - 17*d*n1*n3 + 6*n1^2*n3 + 12*n1*n3^2 - 10*n5 + 9*d*n5 - 
      2*d^2*n5 - 16*n3*n5 + 7*d*n3*n5 - 6*n3^2*n5)*j[p4, 1 + n1, n3, -1 + n3, 
      1, 1 + n5, 0, 0, 0, 0, 1, 1, 1, 1, 1])/((3 - d + n1 + n5)*
     (72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 
      10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-20 + 13*d - 2*d^2 - 12*n3 + 3*d*n3 - 5*n5 + 2*d*n5 - 3*n3*n5)*
     j[p4, 1 + n1, n3, -1 + n3, 2, n5, 0, 0, 0, 0, 1, 1, 1, 1, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((20 - 13*d + 2*d^2 + 12*n3 - 3*d*n3 + 5*n5 - 
      2*d*n5 + 3*n3*n5)*j[p4, 1 + n1, n3, -1 + n3, 2, n5, 0, 0, 0, 1, 0, 1, 
      1, 1, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-20 + 13*d - 2*d^2 - 12*n3 + 3*d*n3 - 5*n5 + 2*d*n5 - 3*n3*n5)*
     j[p4, 1 + n1, n3, -1 + n3, 2, n5, 0, 0, 0, 1, 1, 0, 1, 1, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((10 - 9*d + 2*d^2 + 5*n1 - 2*d*n1 + 16*n3 - 
      7*d*n3 + 3*n1*n3 + 6*n3^2)*j[p4, 1 + n1, n3, n3, 0, -1 + n5, 0, 0, 0, 
      1, 1, 1, 1, 1, 2])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((10 - 9*d + 2*d^2 + 5*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 3*n1*n3 + 6*n3^2)*
     j[p4, 1 + n1, n3, n3, 0, -1 + n5, 0, 0, 0, 2, 1, 1, 1, 1, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-20 + 18*d - 4*d^2 - 10*n1 + 4*d*n1 - 82*n3 + 
      49*d*n3 - 6*d^2*n3 - 11*n1*n3 + 2*d*n1*n3 - 52*n3^2 + 13*d*n3^2 - 
      3*n1*n3^2 - 6*n3^3 - 80*n5 + 52*d*n5 - 8*d^2*n5 - 58*n3*n5 + 
      16*d*n3*n5 - 6*n3^2*n5 - 20*n5^2 + 8*d*n5^2 - 12*n3*n5^2)*
     j[p4, 1 + n1, n3, n3, 0, n5, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((30 - 22*d + 4*d^2 + 5*n1 - 2*d*n1 + 28*n3 - 
      10*d*n3 + 3*n1*n3 + 6*n3^2 + 5*n5 - 2*d*n5 + 3*n3*n5)*
     j[p4, 1 + n1, n3, n3, 0, n5, 0, 0, 0, 1, 1, 1, 1, 1, 2])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-50 + 35*d - 6*d^2 - 5*n1 + 2*d*n1 - 40*n3 + 
      13*d*n3 - 3*n1*n3 - 6*n3^2 - 10*n5 + 4*d*n5 - 6*n3*n5)*
     j[p4, 1 + n1, n3, n3, 0, n5, 0, 0, 0, 1, 1, 1, 2, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-50 + 35*d - 6*d^2 - 5*n1 + 2*d*n1 - 40*n3 + 
      13*d*n3 - 3*n1*n3 - 6*n3^2 - 10*n5 + 4*d*n5 - 6*n3*n5)*
     j[p4, 1 + n1, n3, n3, 0, n5, 0, 0, 0, 1, 1, 2, 1, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((30 - 22*d + 4*d^2 + 5*n1 - 2*d*n1 + 28*n3 - 
      10*d*n3 + 3*n1*n3 + 6*n3^2 + 5*n5 - 2*d*n5 + 3*n3*n5)*
     j[p4, 1 + n1, n3, n3, 0, n5, 0, 0, 0, 2, 1, 1, 1, 1, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((20*n5 - 13*d*n5 + 2*d^2*n5 + 12*n3*n5 - 
      3*d*n3*n5 + 5*n5^2 - 2*d*n5^2 + 3*n3*n5^2)*j[p4, 1 + n1, n3, n3, 0, 
      1 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 1])/((-3 + d - n1 - n5)*
     (72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 
      10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-50 + 35*d - 6*d^2 - 5*n1 + 2*d*n1 - 40*n3 + 13*d*n3 - 3*n1*n3 - 
      6*n3^2 - 10*n5 + 4*d*n5 - 6*n3*n5)*j[p4, 1 + n1, n3, n3, 1, -1 + n5, 0, 
      0, 0, 0, 1, 1, 1, 1, 2])/(2*(-3 + d - n1 - n5)*
     (72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 
      10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((10*n1 - 9*d*n1 + 2*d^2*n1 + 5*n1^2 - 2*d*n1^2 + 16*n1*n3 - 7*d*n1*n3 + 
      3*n1^2*n3 + 6*n1*n3^2)*j[p4, 1 + n1, n3, n3, 1, -1 + n5, 0, 0, 0, 1, 1, 
      0, 1, 1, 1])/((3 - d + n1 + n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((50 - 35*d + 6*d^2 + 5*n1 - 2*d*n1 + 40*n3 - 13*d*n3 + 3*n1*n3 + 6*n3^2 + 
      10*n5 - 4*d*n5 + 6*n3*n5)*j[p4, 1 + n1, n3, n3, 1, -1 + n5, 0, 0, 0, 1, 
      1, 0, 2, 1, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((10 - 9*d + 2*d^2 + 5*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 3*n1*n3 + 6*n3^2)*
     j[p4, 1 + n1, n3, n3, 1, -1 + n5, 0, 0, 0, 1, 1, 1, 0, 1, 2])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((50 - 35*d + 6*d^2 + 5*n1 - 2*d*n1 + 40*n3 - 
      13*d*n3 + 3*n1*n3 + 6*n3^2 + 10*n5 - 4*d*n5 + 6*n3*n5)*
     j[p4, 1 + n1, n3, n3, 1, -1 + n5, 0, 0, 0, 1, 1, 1, 0, 2, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((10*n1 - 9*d*n1 + 2*d^2*n1 + 5*n1^2 - 2*d*n1^2 + 
      16*n1*n3 - 7*d*n1*n3 + 3*n1^2*n3 + 6*n1*n3^2)*
     j[p4, 1 + n1, n3, n3, 1, -1 + n5, 0, 0, 0, 1, 1, 1, 1, 0, 1])/
    (2*(3 - d + n1 + n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-10 + 9*d - 2*d^2 - 5*n1 + 2*d*n1 - 16*n3 + 
      7*d*n3 - 3*n1*n3 - 6*n3^2)*j[p4, 1 + n1, n3, n3, 1, -1 + n5, 0, 0, 0, 
      1, 1, 1, 1, 0, 2])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((50 - 35*d + 6*d^2 + 5*n1 - 2*d*n1 + 40*n3 - 13*d*n3 + 3*n1*n3 + 6*n3^2 + 
      10*n5 - 4*d*n5 + 6*n3*n5)*j[p4, 1 + n1, n3, n3, 1, -1 + n5, 0, 0, 0, 1, 
      1, 2, 0, 1, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((10 - 9*d + 2*d^2 + 5*n1 - 2*d*n1 + 16*n3 - 7*d*n3 + 3*n1*n3 + 6*n3^2)*
     j[p4, 1 + n1, n3, n3, 1, -1 + n5, 0, 0, 0, 2, 1, 0, 1, 1, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-50 + 35*d - 6*d^2 - 5*n1 + 2*d*n1 - 40*n3 + 
      13*d*n3 - 3*n1*n3 - 6*n3^2 - 10*n5 + 4*d*n5 - 6*n3*n5)*
     j[p4, 1 + n1, n3, n3, 1, -1 + n5, 0, 0, 0, 2, 1, 1, 1, 1, 0])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-30 + 22*d - 4*d^2 - 5*n1 + 2*d*n1 - 28*n3 + 
      10*d*n3 - 3*n1*n3 - 6*n3^2 - 5*n5 + 2*d*n5 - 3*n3*n5)*
     j[p4, 1 + n1, n3, n3, 1, n5, -1, 0, 0, 0, 1, 1, 1, 1, 2])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((50 - 35*d + 6*d^2 + 5*n1 - 2*d*n1 + 40*n3 - 
      13*d*n3 + 3*n1*n3 + 6*n3^2 + 10*n5 - 4*d*n5 + 6*n3*n5)*
     j[p4, 1 + n1, n3, n3, 1, n5, -1, 0, 0, 1, 1, 0, 2, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-10 + 9*d - 2*d^2 - 5*n1 + 2*d*n1 - 16*n3 + 
      7*d*n3 - 3*n1*n3 - 6*n3^2)*j[p4, 1 + n1, n3, n3, 1, n5, -1, 0, 0, 1, 1, 
      1, 1, 0, 2])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((50 - 35*d + 6*d^2 + 5*n1 - 2*d*n1 + 40*n3 - 13*d*n3 + 3*n1*n3 + 6*n3^2 + 
      10*n5 - 4*d*n5 + 6*n3*n5)*j[p4, 1 + n1, n3, n3, 1, n5, -1, 0, 0, 1, 1, 
      2, 0, 1, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((50 - 35*d + 6*d^2 + 5*n1 - 2*d*n1 + 40*n3 - 13*d*n3 + 3*n1*n3 + 6*n3^2 + 
      10*n5 - 4*d*n5 + 6*n3*n5)*j[p4, 1 + n1, n3, n3, 1, n5, -1, 0, 0, 1, 2, 
      0, 1, 1, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((50 - 35*d + 6*d^2 + 5*n1 - 2*d*n1 + 40*n3 - 13*d*n3 + 3*n1*n3 + 6*n3^2 + 
      10*n5 - 4*d*n5 + 6*n3*n5)*j[p4, 1 + n1, n3, n3, 1, n5, -1, 0, 0, 1, 2, 
      1, 0, 1, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-50 + 35*d - 6*d^2 - 5*n1 + 2*d*n1 - 40*n3 + 13*d*n3 - 3*n1*n3 - 
      6*n3^2 - 10*n5 + 4*d*n5 - 6*n3*n5)*j[p4, 1 + n1, n3, n3, 1, n5, -1, 0, 
      0, 1, 2, 1, 1, 0, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 
      26*n1 - 9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 
      19*n5 - 7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-30 + 22*d - 4*d^2 - 5*n1 + 2*d*n1 - 28*n3 + 10*d*n3 - 3*n1*n3 - 
      6*n3^2 - 5*n5 + 2*d*n5 - 3*n3*n5)*j[p4, 1 + n1, n3, n3, 1, n5, -1, 0, 
      0, 2, 1, 1, 1, 1, 0])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-30 + 22*d - 4*d^2 - 5*n1 + 2*d*n1 - 28*n3 + 10*d*n3 - 3*n1*n3 - 
      6*n3^2 - 5*n5 + 2*d*n5 - 3*n3*n5)*j[p4, 1 + n1, n3, n3, 1, n5, 0, -1, 
      0, 0, 1, 1, 1, 1, 2])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-150 + 105*d - 18*d^2 - 15*n1 + 6*d*n1 - 120*n3 + 39*d*n3 - 9*n1*n3 - 
      18*n3^2 - 30*n5 + 12*d*n5 - 18*n3*n5)*j[p4, 1 + n1, n3, n3, 1, n5, 0, 
      -1, 0, 0, 2, 1, 1, 1, 1])/(2*(-3 + d - n1 - n5)*
     (72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 
      10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((50 - 35*d + 6*d^2 + 5*n1 - 2*d*n1 + 40*n3 - 13*d*n3 + 3*n1*n3 + 6*n3^2 + 
      10*n5 - 4*d*n5 + 6*n3*n5)*j[p4, 1 + n1, n3, n3, 1, n5, 0, -1, 0, 1, 1, 
      0, 2, 1, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-10 + 9*d - 2*d^2 - 5*n1 + 2*d*n1 - 16*n3 + 7*d*n3 - 3*n1*n3 - 6*n3^2)*
     j[p4, 1 + n1, n3, n3, 1, n5, 0, -1, 0, 1, 1, 1, 1, 0, 2])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((50 - 35*d + 6*d^2 + 5*n1 - 2*d*n1 + 40*n3 - 
      13*d*n3 + 3*n1*n3 + 6*n3^2 + 10*n5 - 4*d*n5 + 6*n3*n5)*
     j[p4, 1 + n1, n3, n3, 1, n5, 0, -1, 0, 1, 1, 2, 0, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((50 - 35*d + 6*d^2 + 5*n1 - 2*d*n1 + 40*n3 - 
      13*d*n3 + 3*n1*n3 + 6*n3^2 + 10*n5 - 4*d*n5 + 6*n3*n5)*
     j[p4, 1 + n1, n3, n3, 1, n5, 0, -1, 0, 1, 2, 0, 1, 1, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-50 + 35*d - 6*d^2 - 5*n1 + 2*d*n1 - 40*n3 + 
      13*d*n3 - 3*n1*n3 - 6*n3^2 - 10*n5 + 4*d*n5 - 6*n3*n5)*
     j[p4, 1 + n1, n3, n3, 1, n5, 0, -1, 0, 1, 2, 1, 0, 1, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((50 - 35*d + 6*d^2 + 5*n1 - 2*d*n1 + 40*n3 - 
      13*d*n3 + 3*n1*n3 + 6*n3^2 + 10*n5 - 4*d*n5 + 6*n3*n5)*
     j[p4, 1 + n1, n3, n3, 1, n5, 0, -1, 0, 1, 2, 1, 1, 0, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-30 + 22*d - 4*d^2 - 5*n1 + 2*d*n1 - 28*n3 + 
      10*d*n3 - 3*n1*n3 - 6*n3^2 - 5*n5 + 2*d*n5 - 3*n3*n5)*
     j[p4, 1 + n1, n3, n3, 1, n5, 0, -1, 0, 2, 1, 1, 1, 1, 0])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-10*n1 + 9*d*n1 - 2*d^2*n1 - 5*n1^2 + 2*d*n1^2 - 
      16*n1*n3 + 7*d*n1*n3 - 3*n1^2*n3 - 6*n1*n3^2)*
     j[p4, 1 + n1, n3, n3, 1, n5, 0, 0, -1, 0, 1, 1, 1, 1, 1])/
    ((3 - d + n1 + n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 60*n3 - 
      21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 9*n3*n5 + 
      n5^2)) + ((-30 + 22*d - 4*d^2 - 5*n1 + 2*d*n1 - 28*n3 + 10*d*n3 - 
      3*n1*n3 - 6*n3^2 - 5*n5 + 2*d*n5 - 3*n3*n5)*j[p4, 1 + n1, n3, n3, 1, 
      n5, 0, 0, -1, 0, 1, 1, 1, 1, 2])/((-3 + d - n1 - n5)*
     (72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 
      10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-50 + 35*d - 6*d^2 - 5*n1 + 2*d*n1 - 40*n3 + 13*d*n3 - 3*n1*n3 - 
      6*n3^2 - 10*n5 + 4*d*n5 - 6*n3*n5)*j[p4, 1 + n1, n3, n3, 1, n5, 0, 0, 
      -1, 0, 2, 1, 1, 1, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 
      26*n1 - 9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 
      19*n5 - 7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((30 - 22*d + 4*d^2 + 5*n1 - 2*d*n1 + 28*n3 - 10*d*n3 + 3*n1*n3 + 6*n3^2 + 
      5*n5 - 2*d*n5 + 3*n3*n5)*j[p4, 1 + n1, n3, n3, 1, n5, 0, 0, -1, 1, 1, 
      0, 2, 1, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-10 + 9*d - 2*d^2 - 5*n1 + 2*d*n1 - 16*n3 + 7*d*n3 - 3*n1*n3 - 6*n3^2)*
     j[p4, 1 + n1, n3, n3, 1, n5, 0, 0, -1, 1, 1, 1, 1, 0, 2])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-50 + 35*d - 6*d^2 - 5*n1 + 2*d*n1 - 40*n3 + 
      13*d*n3 - 3*n1*n3 - 6*n3^2 - 10*n5 + 4*d*n5 - 6*n3*n5)*
     j[p4, 1 + n1, n3, n3, 1, n5, 0, 0, -1, 1, 1, 1, 1, 2, 0])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((30 - 22*d + 4*d^2 + 5*n1 - 2*d*n1 + 28*n3 - 
      10*d*n3 + 3*n1*n3 + 6*n3^2 + 5*n5 - 2*d*n5 + 3*n3*n5)*
     j[p4, 1 + n1, n3, n3, 1, n5, 0, 0, -1, 1, 1, 2, 0, 1, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((50 - 35*d + 6*d^2 + 5*n1 - 2*d*n1 + 40*n3 - 
      13*d*n3 + 3*n1*n3 + 6*n3^2 + 10*n5 - 4*d*n5 + 6*n3*n5)*
     j[p4, 1 + n1, n3, n3, 1, n5, 0, 0, -1, 1, 2, 0, 1, 1, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-30 + 22*d - 4*d^2 - 5*n1 + 2*d*n1 - 28*n3 + 
      10*d*n3 - 3*n1*n3 - 6*n3^2 - 5*n5 + 2*d*n5 - 3*n3*n5)*
     j[p4, 1 + n1, n3, n3, 1, n5, 0, 0, -1, 2, 1, 1, 1, 1, 0])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((210 - 149*d + 26*d^2 + 85*n1 - 54*d*n1 + 
      8*d^2*n1 + 10*n1^2 - 4*d*n1^2 + 176*n3 - 59*d*n3 + 71*n1*n3 - 
      20*d*n1*n3 + 6*n1^2*n3 + 30*n3^2 + 12*n1*n3^2 - 60*n5 + 54*d*n5 - 
      12*d^2*n5 - 56*n3*n5 + 26*d*n3*n5 - 12*n3^2*n5 - 20*n5^2 + 8*d*n5^2 - 
      12*n3*n5^2)*j[p4, 1 + n1, n3, n3, 1, n5, 0, 0, 0, 0, 1, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-50 + 35*d - 6*d^2 - 5*n1 + 2*d*n1 - 40*n3 + 
      13*d*n3 - 3*n1*n3 - 6*n3^2 - 10*n5 + 4*d*n5 - 6*n3*n5)*
     j[p4, 1 + n1, n3, n3, 1, n5, 0, 0, 0, 0, 1, 2, 1, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-50 + 35*d - 6*d^2 - 5*n1 + 2*d*n1 - 40*n3 + 
      13*d*n3 - 3*n1*n3 - 6*n3^2 - 10*n5 + 4*d*n5 - 6*n3*n5)*
     j[p4, 1 + n1, n3, n3, 1, n5, 0, 0, 0, 0, 2, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-30 + 17*d - 2*d^2 - 55*n1 + 42*d*n1 - 8*d^2*n1 - 
      10*n1^2 + 4*d*n1^2 + 42*n3 - 36*d*n3 + 6*d^2*n3 - 48*n1*n3 + 
      18*d*n1*n3 - 6*n1^2*n3 + 46*n3^2 - 13*d*n3^2 - 9*n1*n3^2 + 6*n3^3 - 
      10*n5 + 4*d*n5 - 10*n1*n5 + 4*d*n1*n5 + 4*n3*n5 - 4*d*n3*n5 - 
      6*n1*n3*n5 + 6*n3^2*n5)*j[p4, 1 + n1, n3, n3, 1, n5, 0, 0, 0, 1, 0, 1, 
      1, 1, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-150 + 115*d - 22*d^2 - 75*n1 + 50*d*n1 - 8*d^2*n1 - 20*n1^2 + 
      8*d*n1^2 - 200*n3 + 87*d*n3 - 4*d^2*n3 - 85*n1*n3 + 28*d*n1*n3 - 
      12*n1^2*n3 - 66*n3^2 + 6*d*n3^2 - 24*n1*n3^2 - 20*n5 + 8*d*n5 - 
      22*n3*n5 + 4*d*n3*n5 - 6*n3^2*n5)*j[p4, 1 + n1, n3, n3, 1, n5, 0, 0, 0, 
      1, 1, 0, 1, 1, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-300 + 220*d - 40*d^2 - 50*n1 + 20*d*n1 - 250*n3 + 73*d*n3 + 6*d^2*n3 - 
      15*n1*n3 - 6*d*n1*n3 - 12*n3^2 - 21*d*n3^2 + 9*n1*n3^2 + 18*n3^3 - 
      50*n5 + 20*d*n5 - 30*n3*n5)*j[p4, 1 + n1, n3, n3, 1, n5, 0, 0, 0, 1, 1, 
      1, 0, 1, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((30 - 22*d + 4*d^2 + 5*n1 - 2*d*n1 + 28*n3 - 10*d*n3 + 3*n1*n3 + 6*n3^2 + 
      5*n5 - 2*d*n5 + 3*n3*n5)*j[p4, 1 + n1, n3, n3, 1, n5, 0, 0, 0, 1, 1, 1, 
      0, 1, 2])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((190 - 151*d + 30*d^2 + 161*n1 - 91*d*n1 + 11*d^2*n1 + 53*n1^2 - 
      17*d*n1^2 + 6*n1^3 + 54*n3 + 44*d*n3 - 26*d^2*n3 + 52*n1*n3 - d*n1*n3 + 
      15*n1^2*n3 - 126*n3^2 + 75*d*n3^2 - 21*n1*n3^2 - 54*n3^3 + 120*n5 - 
      78*d*n5 + 12*d^2*n5 + 52*n1*n5 - 19*d*n1*n5 + 12*n1^2*n5 + 72*n3*n5 - 
      18*d*n3*n5 + 24*n1*n3*n5 + 20*n5^2 - 8*d*n5^2 + 3*n1*n5^2 + 12*n3*n5^2)*
     j[p4, 1 + n1, n3, n3, 1, n5, 0, 0, 0, 1, 1, 1, 1, 0, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-10 + 9*d - 2*d^2 - 5*n1 + 2*d*n1 - 16*n3 + 
      7*d*n3 - 3*n1*n3 - 6*n3^2)*j[p4, 1 + n1, n3, n3, 1, n5, 0, 0, 0, 1, 1, 
      1, 1, 0, 2])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((160 - 114*d + 20*d^2 + 20*n1 - 8*d*n1 + 186*n3 - 81*d*n3 + 6*d^2*n3 + 
      17*n1*n3 - 2*d*n1*n3 + 64*n3^2 - 13*d*n3^2 + 3*n1*n3^2 + 6*n3^3 - 
      70*n5 + 58*d*n5 - 12*d^2*n5 - 10*n1*n5 + 4*d*n1*n5 - 52*n3*n5 + 
      22*d*n3*n5 - 6*n1*n3*n5 - 6*n3^2*n5 - 20*n5^2 + 8*d*n5^2 - 12*n3*n5^2)*
     j[p4, 1 + n1, n3, n3, 1, n5, 0, 0, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((100 - 115*d + 45*d^2 - 6*d^3 - 64*n1 + 40*d*n1 - 
      6*d^2*n1 - 42*n1^2 + 14*d*n1^2 - 4*n1^3 + 160*n3 - 130*d*n3 + 
      27*d^2*n3 - 32*n1*n3 + 8*d*n1*n3 - 14*n1^2*n3 + 100*n3^2 - 43*d*n3^2 + 
      24*n3^3 + 25*n5 - 20*d*n5 + 4*d^2*n5 - 23*n1*n5 + 8*d*n1*n5 - 
      8*n1^2*n5 + 30*n3*n5 - 12*d*n3*n5 - 9*n1*n3*n5 + 9*n3^2*n5 - 2*n1*n5^2)*
     j[p4, 1 + n1, n3, n3, 1, n5, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-50 + 35*d - 6*d^2 - 5*n1 + 2*d*n1 - 40*n3 + 
      13*d*n3 - 3*n1*n3 - 6*n3^2 - 10*n5 + 4*d*n5 - 6*n3*n5)*
     j[p4, 1 + n1, n3, n3, 1, n5, 0, 0, 0, 1, 1, 1, 1, 2, 0])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-10 + 9*d - 2*d^2 - 5*n1 + 2*d*n1 - 16*n3 + 
      7*d*n3 - 3*n1*n3 - 6*n3^2)*j[p4, 1 + n1, n3, n3, 1, n5, 0, 0, 0, 1, 1, 
      1, 2, 0, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-50 + 35*d - 6*d^2 - 5*n1 + 2*d*n1 - 40*n3 + 13*d*n3 - 3*n1*n3 - 
      6*n3^2 - 10*n5 + 4*d*n5 - 6*n3*n5)*j[p4, 1 + n1, n3, n3, 1, n5, 0, 0, 
      0, 1, 1, 1, 2, 1, 0])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 
      26*n1 - 9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 
      19*n5 - 7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((50 - 35*d + 6*d^2 + 5*n1 - 2*d*n1 + 40*n3 - 13*d*n3 + 3*n1*n3 + 6*n3^2 + 
      10*n5 - 4*d*n5 + 6*n3*n5)*j[p4, 1 + n1, n3, n3, 1, n5, 0, 0, 0, 1, 2, 
      0, 1, 1, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((30 - 22*d + 4*d^2 + 5*n1 - 2*d*n1 + 28*n3 - 10*d*n3 + 3*n1*n3 + 6*n3^2 + 
      5*n5 - 2*d*n5 + 3*n3*n5)*j[p4, 1 + n1, n3, n3, 1, n5, 0, 0, 0, 2, 1, 0, 
      1, 1, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-30*n5 + 22*d*n5 - 4*d^2*n5 - 5*n1*n5 + 2*d*n1*n5 - 28*n3*n5 + 
      10*d*n3*n5 - 3*n1*n3*n5 - 6*n3^2*n5 - 5*n5^2 + 2*d*n5^2 - 3*n3*n5^2)*
     j[p4, 1 + n1, n3, n3, 1, 1 + n5, -1, 0, 0, 0, 1, 1, 1, 1, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-40*n1 + 31*d*n1 - 6*d^2*n1 - 10*n1^2 + 4*d*n1^2 - 
      44*n1*n3 + 17*d*n1*n3 - 6*n1^2*n3 - 12*n1*n3^2 + 30*n5 - 22*d*n5 + 
      4*d^2*n5 + 28*n3*n5 - 10*d*n3*n5 + 6*n3^2*n5 + 5*n5^2 - 2*d*n5^2 + 
      3*n3*n5^2)*j[p4, 1 + n1, n3, n3, 1, 1 + n5, -1, 0, 0, 1, 1, 1, 1, 0, 
      1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-30*n5 + 22*d*n5 - 4*d^2*n5 - 5*n1*n5 + 
      2*d*n1*n5 - 28*n3*n5 + 10*d*n3*n5 - 3*n1*n3*n5 - 6*n3^2*n5 - 5*n5^2 + 
      2*d*n5^2 - 3*n3*n5^2)*j[p4, 1 + n1, n3, n3, 1, 1 + n5, -1, 0, 0, 1, 1, 
      1, 1, 1, 0])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((40*n1 - 31*d*n1 + 6*d^2*n1 + 10*n1^2 - 4*d*n1^2 + 44*n1*n3 - 
      17*d*n1*n3 + 6*n1^2*n3 + 12*n1*n3^2 - 30*n5 + 22*d*n5 - 4*d^2*n5 - 
      28*n3*n5 + 10*d*n3*n5 - 6*n3^2*n5 - 5*n5^2 + 2*d*n5^2 - 3*n3*n5^2)*
     j[p4, 1 + n1, n3, n3, 1, 1 + n5, -1, 0, 0, 1, 1, 1, 1, 1, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((40*n1 - 31*d*n1 + 6*d^2*n1 + 10*n1^2 - 4*d*n1^2 + 
      44*n1*n3 - 17*d*n1*n3 + 6*n1^2*n3 + 12*n1*n3^2 - 40*n5 + 31*d*n5 - 
      6*d^2*n5 - 5*n1*n5 + 2*d*n1*n5 - 44*n3*n5 + 17*d*n3*n5 - 3*n1*n3*n5 - 
      12*n3^2*n5 - 5*n5^2 + 2*d*n5^2 - 3*n3*n5^2)*j[p4, 1 + n1, n3, n3, 1, 
      1 + n5, 0, -1, 0, 0, 1, 1, 1, 1, 1])/((-3 + d - n1 - n5)*
     (72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 
      10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((30*n5 - 22*d*n5 + 4*d^2*n5 + 5*n1*n5 - 2*d*n1*n5 + 28*n3*n5 - 
      10*d*n3*n5 + 3*n1*n3*n5 + 6*n3^2*n5 + 5*n5^2 - 2*d*n5^2 + 3*n3*n5^2)*
     j[p4, 1 + n1, n3, n3, 1, 1 + n5, 0, -1, 0, 1, 1, 1, 1, 0, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-30*n5 + 22*d*n5 - 4*d^2*n5 - 5*n1*n5 + 
      2*d*n1*n5 - 28*n3*n5 + 10*d*n3*n5 - 3*n1*n3*n5 - 6*n3^2*n5 - 5*n5^2 + 
      2*d*n5^2 - 3*n3*n5^2)*j[p4, 1 + n1, n3, n3, 1, 1 + n5, 0, -1, 0, 1, 1, 
      1, 1, 1, 0])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-20*n5 + 13*d*n5 - 2*d^2*n5 - 12*n3*n5 + 3*d*n3*n5 - 5*n5^2 + 2*d*n5^2 - 
      3*n3*n5^2)*j[p4, 1 + n1, n3, n3, 1, 1 + n5, 0, -1, 0, 1, 1, 1, 1, 1, 
      1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((40*n1 - 31*d*n1 + 6*d^2*n1 + 10*n1^2 - 4*d*n1^2 + 
      44*n1*n3 - 17*d*n1*n3 + 6*n1^2*n3 + 12*n1*n3^2 - 30*n5 + 22*d*n5 - 
      4*d^2*n5 - 28*n3*n5 + 10*d*n3*n5 - 6*n3^2*n5 - 5*n5^2 + 2*d*n5^2 - 
      3*n3*n5^2)*j[p4, 1 + n1, n3, n3, 1, 1 + n5, 0, 0, -1, 0, 1, 1, 1, 1, 
      1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-20*n5 + 13*d*n5 - 2*d^2*n5 - 12*n3*n5 + 
      3*d*n3*n5 - 5*n5^2 + 2*d*n5^2 - 3*n3*n5^2)*j[p4, 1 + n1, n3, n3, 1, 
      1 + n5, 0, 0, -1, 1, 1, 1, 1, 0, 1])/((-3 + d - n1 - n5)*
     (72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 
      10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((20*n5 - 13*d*n5 + 2*d^2*n5 + 12*n3*n5 - 3*d*n3*n5 + 5*n5^2 - 2*d*n5^2 + 
      3*n3*n5^2)*j[p4, 1 + n1, n3, n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 1, 
      0])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((112*n1 - 82*d*n1 + 15*d^2*n1 + 36*n1^2 - 
      13*d*n1^2 + 2*n1^3 + 104*n1*n3 - 38*d*n1*n3 + 16*n1^2*n3 + 24*n1*n3^2 + 
      24*n1*n5 - 9*d*n1*n5 + 4*n1^2*n5 + 12*n1*n3*n5 + n1*n5^2)*
     j[p4, 1 + n1, n3, n3, 1, 1 + n5, 0, 0, 0, 0, 1, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-50 + 35*d - 6*d^2 - 5*n1 + 2*d*n1 - 40*n3 + 
      13*d*n3 - 3*n1*n3 - 6*n3^2 - 10*n5 + 4*d*n5 - 6*n3*n5)*
     j[p4, 1 + n1, n3, n3, 2, -1 + n5, 0, 0, 0, 0, 1, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((50 - 35*d + 6*d^2 + 5*n1 - 2*d*n1 + 40*n3 - 
      13*d*n3 + 3*n1*n3 + 6*n3^2 + 10*n5 - 4*d*n5 + 6*n3*n5)*
     j[p4, 1 + n1, n3, n3, 2, -1 + n5, 0, 0, 0, 1, 0, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-50 + 35*d - 6*d^2 - 5*n1 + 2*d*n1 - 40*n3 + 
      13*d*n3 - 3*n1*n3 - 6*n3^2 - 10*n5 + 4*d*n5 - 6*n3*n5)*
     j[p4, 1 + n1, n3, n3, 2, -1 + n5, 0, 0, 0, 1, 1, 0, 1, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-50 + 35*d - 6*d^2 - 5*n1 + 2*d*n1 - 40*n3 + 
      13*d*n3 - 3*n1*n3 - 6*n3^2 - 10*n5 + 4*d*n5 - 6*n3*n5)*
     j[p4, 1 + n1, n3, n3, 2, -1 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-30 + 22*d - 4*d^2 - 5*n1 + 2*d*n1 - 28*n3 + 
      10*d*n3 - 3*n1*n3 - 6*n3^2 - 5*n5 + 2*d*n5 - 3*n3*n5)*
     j[p4, 1 + n1, n3, n3, 2, n5, -1, 0, 0, 0, 1, 1, 1, 1, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((30 - 22*d + 4*d^2 + 5*n1 - 2*d*n1 + 28*n3 - 
      10*d*n3 + 3*n1*n3 + 6*n3^2 + 5*n5 - 2*d*n5 + 3*n3*n5)*
     j[p4, 1 + n1, n3, n3, 2, n5, -1, 0, 0, 1, 0, 1, 1, 1, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-30 + 22*d - 4*d^2 - 5*n1 + 2*d*n1 - 28*n3 + 
      10*d*n3 - 3*n1*n3 - 6*n3^2 - 5*n5 + 2*d*n5 - 3*n3*n5)*
     j[p4, 1 + n1, n3, n3, 2, n5, -1, 0, 0, 1, 1, 0, 1, 1, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-30 + 22*d - 4*d^2 - 5*n1 + 2*d*n1 - 28*n3 + 
      10*d*n3 - 3*n1*n3 - 6*n3^2 - 5*n5 + 2*d*n5 - 3*n3*n5)*
     j[p4, 1 + n1, n3, n3, 2, n5, -1, 0, 0, 1, 1, 1, 1, 1, 0])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((50 - 35*d + 6*d^2 + 5*n1 - 2*d*n1 + 40*n3 - 
      13*d*n3 + 3*n1*n3 + 6*n3^2 + 10*n5 - 4*d*n5 + 6*n3*n5)*
     j[p4, 1 + n1, n3, n3, 2, n5, 0, -1, 0, 0, 1, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-50 + 35*d - 6*d^2 - 5*n1 + 2*d*n1 - 40*n3 + 
      13*d*n3 - 3*n1*n3 - 6*n3^2 - 10*n5 + 4*d*n5 - 6*n3*n5)*
     j[p4, 1 + n1, n3, n3, 2, n5, 0, -1, 0, 1, 0, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((50 - 35*d + 6*d^2 + 5*n1 - 2*d*n1 + 40*n3 - 
      13*d*n3 + 3*n1*n3 + 6*n3^2 + 10*n5 - 4*d*n5 + 6*n3*n5)*
     j[p4, 1 + n1, n3, n3, 2, n5, 0, -1, 0, 1, 1, 0, 1, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((90 - 61*d + 10*d^2 + 5*n1 - 2*d*n1 + 64*n3 - 
      19*d*n3 + 3*n1*n3 + 6*n3^2 + 20*n5 - 8*d*n5 + 12*n3*n5)*
     j[p4, 1 + n1, n3, n3, 2, n5, 0, -1, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((30 - 22*d + 4*d^2 + 5*n1 - 2*d*n1 + 28*n3 - 
      10*d*n3 + 3*n1*n3 + 6*n3^2 + 5*n5 - 2*d*n5 + 3*n3*n5)*
     j[p4, 1 + n1, n3, n3, 2, n5, 0, 0, -1, 0, 1, 1, 1, 1, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-30 + 22*d - 4*d^2 - 5*n1 + 2*d*n1 - 28*n3 + 
      10*d*n3 - 3*n1*n3 - 6*n3^2 - 5*n5 + 2*d*n5 - 3*n3*n5)*
     j[p4, 1 + n1, n3, n3, 2, n5, 0, 0, -1, 1, 0, 1, 1, 1, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((30 - 22*d + 4*d^2 + 5*n1 - 2*d*n1 + 28*n3 - 
      10*d*n3 + 3*n1*n3 + 6*n3^2 + 5*n5 - 2*d*n5 + 3*n3*n5)*
     j[p4, 1 + n1, n3, n3, 2, n5, 0, 0, -1, 1, 1, 0, 1, 1, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((50 - 35*d + 6*d^2 + 5*n1 - 2*d*n1 + 40*n3 - 
      13*d*n3 + 3*n1*n3 + 6*n3^2 + 10*n5 - 4*d*n5 + 6*n3*n5)*
     j[p4, 1 + n1, n3, n3, 2, n5, 0, 0, -1, 1, 1, 1, 1, 1, 0])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((150*n3 - 105*d*n3 + 18*d^2*n3 + 15*n1*n3 - 
      6*d*n1*n3 + 120*n3^2 - 39*d*n3^2 + 9*n1*n3^2 + 18*n3^3 + 30*n3*n5 - 
      12*d*n3*n5 + 18*n3^2*n5)*j[p4, 1 + n1, n3, 1 + n3, 0, n5, 0, -1, 0, 1, 
      1, 1, 1, 1, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((150*n3 - 105*d*n3 + 18*d^2*n3 + 15*n1*n3 - 6*d*n1*n3 + 120*n3^2 - 
      39*d*n3^2 + 9*n1*n3^2 + 18*n3^3 + 30*n3*n5 - 12*d*n3*n5 + 18*n3^2*n5)*
     j[p4, 1 + n1, n3, 1 + n3, 0, n5, 0, 0, -1, 1, 1, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((50*n3 - 35*d*n3 + 6*d^2*n3 + 5*n1*n3 - 2*d*n1*n3 + 
      40*n3^2 - 13*d*n3^2 + 3*n1*n3^2 + 6*n3^3 + 10*n3*n5 - 4*d*n3*n5 + 
      6*n3^2*n5)*j[p4, 1 + n1, n3, 1 + n3, 0, n5, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-110*n3 + 79*d*n3 - 14*d^2*n3 - 15*n1*n3 + 
      6*d*n1*n3 - 96*n3^2 + 33*d*n3^2 - 9*n1*n3^2 - 18*n3^3 - 20*n3*n5 + 
      8*d*n3*n5 - 12*n3^2*n5)*j[p4, 1 + n1, n3, 1 + n3, 1, n5, 0, -1, 0, 1, 
      0, 1, 1, 1, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((110*n3 - 79*d*n3 + 14*d^2*n3 + 15*n1*n3 - 6*d*n1*n3 + 96*n3^2 - 
      33*d*n3^2 + 9*n1*n3^2 + 18*n3^3 + 20*n3*n5 - 8*d*n3*n5 + 12*n3^2*n5)*
     j[p4, 1 + n1, n3, 1 + n3, 1, n5, 0, -1, 0, 1, 1, 0, 1, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-20*n3 + 13*d*n3 - 2*d^2*n3 - 12*n3^2 + 3*d*n3^2 - 
      5*n3*n5 + 2*d*n3*n5 - 3*n3^2*n5)*j[p4, 1 + n1, n3, 1 + n3, 1, n5, 0, 
      -1, 0, 1, 1, 1, 0, 1, 1])/((-3 + d - n1 - n5)*
     (72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 
      10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-30*n3 + 27*d*n3 - 6*d^2*n3 - 15*n1*n3 + 6*d*n1*n3 - 48*n3^2 + 
      21*d*n3^2 - 9*n1*n3^2 - 18*n3^3)*j[p4, 1 + n1, n3, 1 + n3, 1, n5, 0, 
      -1, 0, 1, 1, 1, 1, 0, 1])/(2*(-3 + d - n1 - n5)*
     (72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 
      10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-150*n3 + 105*d*n3 - 18*d^2*n3 - 15*n1*n3 + 6*d*n1*n3 - 120*n3^2 + 
      39*d*n3^2 - 9*n1*n3^2 - 18*n3^3 - 30*n3*n5 + 12*d*n3*n5 - 18*n3^2*n5)*
     j[p4, 1 + n1, n3, 1 + n3, 1, n5, 0, -1, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-60*n3 + 44*d*n3 - 8*d^2*n3 - 10*n1*n3 + 
      4*d*n1*n3 - 56*n3^2 + 20*d*n3^2 - 6*n1*n3^2 - 12*n3^3 - 10*n3*n5 + 
      4*d*n3*n5 - 6*n3^2*n5)*j[p4, 1 + n1, n3, 1 + n3, 1, n5, 0, 0, -1, 1, 0, 
      1, 1, 1, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((60*n3 - 44*d*n3 + 8*d^2*n3 + 10*n1*n3 - 4*d*n1*n3 + 56*n3^2 - 
      20*d*n3^2 + 6*n1*n3^2 + 12*n3^3 + 10*n3*n5 - 4*d*n3*n5 + 6*n3^2*n5)*
     j[p4, 1 + n1, n3, 1 + n3, 1, n5, 0, 0, -1, 1, 1, 0, 1, 1, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-30*n3 + 22*d*n3 - 4*d^2*n3 - 5*n1*n3 + 
      2*d*n1*n3 - 28*n3^2 + 10*d*n3^2 - 3*n1*n3^2 - 6*n3^3 - 5*n3*n5 + 
      2*d*n3*n5 - 3*n3^2*n5)*j[p4, 1 + n1, n3, 1 + n3, 1, n5, 0, 0, -1, 1, 1, 
      1, 0, 1, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-30*n3 + 27*d*n3 - 6*d^2*n3 - 15*n1*n3 + 6*d*n1*n3 - 48*n3^2 + 
      21*d*n3^2 - 9*n1*n3^2 - 18*n3^3)*j[p4, 1 + n1, n3, 1 + n3, 1, n5, 0, 0, 
      -1, 1, 1, 1, 1, 0, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 
      26*n1 - 9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 
      19*n5 - 7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-150*n3 + 105*d*n3 - 18*d^2*n3 - 15*n1*n3 + 6*d*n1*n3 - 120*n3^2 + 
      39*d*n3^2 - 9*n1*n3^2 - 18*n3^3 - 30*n3*n5 + 12*d*n3*n5 - 18*n3^2*n5)*
     j[p4, 1 + n1, n3, 1 + n3, 1, n5, 0, 0, -1, 1, 1, 1, 1, 1, 0])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((30*n3 - 22*d*n3 + 4*d^2*n3 + 5*n1*n3 - 2*d*n1*n3 + 
      28*n3^2 - 10*d*n3^2 + 3*n1*n3^2 + 6*n3^3 + 5*n3*n5 - 2*d*n3*n5 + 
      3*n3^2*n5)*j[p4, 1 + n1, n3, 1 + n3, 1, n5, 0, 0, 0, 1, 1, 1, 0, 1, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-10*n3 + 9*d*n3 - 2*d^2*n3 - 5*n1*n3 + 2*d*n1*n3 - 
      16*n3^2 + 7*d*n3^2 - 3*n1*n3^2 - 6*n3^3)*j[p4, 1 + n1, n3, 1 + n3, 1, 
      n5, 0, 0, 0, 1, 1, 1, 1, 0, 1])/(2*(-3 + d - n1 - n5)*
     (72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 
      10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-50*n3 + 35*d*n3 - 6*d^2*n3 - 5*n1*n3 + 2*d*n1*n3 - 40*n3^2 + 
      13*d*n3^2 - 3*n1*n3^2 - 6*n3^3 - 10*n3*n5 + 4*d*n3*n5 - 6*n3^2*n5)*
     j[p4, 1 + n1, n3, 1 + n3, 1, n5, 0, 0, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((40*n3 - 31*d*n3 + 6*d^2*n3 + 10*n1*n3 - 
      4*d*n1*n3 + 44*n3^2 - 17*d*n3^2 + 6*n1*n3^2 + 12*n3^3 + 5*n3*n5 - 
      2*d*n3*n5 + 3*n3^2*n5)*j[p4, 1 + n1, 1 + n3, -1 + n3, 1, n5, 0, 0, 0, 
      1, 0, 1, 1, 1, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-50*n3 + 35*d*n3 - 6*d^2*n3 - 5*n1*n3 + 2*d*n1*n3 - 40*n3^2 + 
      13*d*n3^2 - 3*n1*n3^2 - 6*n3^3 - 10*n3*n5 + 4*d*n3*n5 - 6*n3^2*n5)*
     j[p4, 1 + n1, 1 + n3, n3, 1, -1 + n5, 0, 0, 0, 1, 0, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-50*n3 + 35*d*n3 - 6*d^2*n3 - 5*n1*n3 + 
      2*d*n1*n3 - 40*n3^2 + 13*d*n3^2 - 3*n1*n3^2 - 6*n3^3 - 10*n3*n5 + 
      4*d*n3*n5 - 6*n3^2*n5)*j[p4, 1 + n1, 1 + n3, n3, 1, -1 + n5, 0, 0, 0, 
      1, 1, 1, 0, 1, 1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((50*n3 - 35*d*n3 + 6*d^2*n3 + 5*n1*n3 - 2*d*n1*n3 + 40*n3^2 - 13*d*n3^2 + 
      3*n1*n3^2 + 6*n3^3 + 10*n3*n5 - 4*d*n3*n5 + 6*n3^2*n5)*
     j[p4, 1 + n1, 1 + n3, n3, 1, -1 + n5, 0, 0, 0, 1, 1, 1, 1, 0, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((50*n3 - 35*d*n3 + 6*d^2*n3 + 5*n1*n3 - 2*d*n1*n3 + 
      40*n3^2 - 13*d*n3^2 + 3*n1*n3^2 + 6*n3^3 + 10*n3*n5 - 4*d*n3*n5 + 
      6*n3^2*n5)*j[p4, 1 + n1, 1 + n3, n3, 1, n5, -1, 0, 0, 1, 0, 1, 1, 1, 
      1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((50*n3 - 35*d*n3 + 6*d^2*n3 + 5*n1*n3 - 2*d*n1*n3 + 40*n3^2 - 13*d*n3^2 + 
      3*n1*n3^2 + 6*n3^3 + 10*n3*n5 - 4*d*n3*n5 + 6*n3^2*n5)*
     j[p4, 1 + n1, 1 + n3, n3, 1, n5, -1, 0, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-50*n3 + 35*d*n3 - 6*d^2*n3 - 5*n1*n3 + 
      2*d*n1*n3 - 40*n3^2 + 13*d*n3^2 - 3*n1*n3^2 - 6*n3^3 - 10*n3*n5 + 
      4*d*n3*n5 - 6*n3^2*n5)*j[p4, 1 + n1, 1 + n3, n3, 1, n5, -1, 0, 0, 1, 1, 
      1, 1, 0, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-50*n3 + 40*d*n3 - 8*d^2*n3 - 15*n1*n3 + 6*d*n1*n3 - 60*n3^2 + 
      24*d*n3^2 - 9*n1*n3^2 - 18*n3^3 - 5*n3*n5 + 2*d*n3*n5 - 3*n3^2*n5)*
     j[p4, 1 + n1, 1 + n3, n3, 1, n5, 0, -1, 0, 1, 0, 1, 1, 1, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-50*n3 + 35*d*n3 - 6*d^2*n3 - 5*n1*n3 + 
      2*d*n1*n3 - 40*n3^2 + 13*d*n3^2 - 3*n1*n3^2 - 6*n3^3 - 10*n3*n5 + 
      4*d*n3*n5 - 6*n3^2*n5)*j[p4, 1 + n1, 1 + n3, n3, 1, n5, 0, -1, 0, 1, 1, 
      1, 0, 1, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((100*n3 - 70*d*n3 + 12*d^2*n3 + 10*n1*n3 - 4*d*n1*n3 + 80*n3^2 - 
      26*d*n3^2 + 6*n1*n3^2 + 12*n3^3 + 20*n3*n5 - 8*d*n3*n5 + 12*n3^2*n5)*
     j[p4, 1 + n1, 1 + n3, n3, 1, n5, 0, -1, 0, 1, 1, 1, 1, 0, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-40*n3 + 26*d*n3 - 4*d^2*n3 - 24*n3^2 + 6*d*n3^2 - 
      10*n3*n5 + 4*d*n3*n5 - 6*n3^2*n5)*j[p4, 1 + n1, 1 + n3, n3, 1, n5, 0, 
      -1, 0, 1, 1, 1, 1, 1, 1])/((-3 + d - n1 - n5)*
     (72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 
      10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-30*n3 + 22*d*n3 - 4*d^2*n3 - 5*n1*n3 + 2*d*n1*n3 - 28*n3^2 + 
      10*d*n3^2 - 3*n1*n3^2 - 6*n3^3 - 5*n3*n5 + 2*d*n3*n5 - 3*n3^2*n5)*
     j[p4, 1 + n1, 1 + n3, n3, 1, n5, 0, 0, -1, 1, 0, 1, 1, 1, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((50*n3 - 35*d*n3 + 6*d^2*n3 + 5*n1*n3 - 2*d*n1*n3 + 
      40*n3^2 - 13*d*n3^2 + 3*n1*n3^2 + 6*n3^3 + 10*n3*n5 - 4*d*n3*n5 + 
      6*n3^2*n5)*j[p4, 1 + n1, 1 + n3, n3, 1, n5, 0, 0, -1, 1, 1, 1, 0, 1, 
      1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-100*n3 + 70*d*n3 - 12*d^2*n3 - 10*n1*n3 + 
      4*d*n1*n3 - 80*n3^2 + 26*d*n3^2 - 6*n1*n3^2 - 12*n3^3 - 20*n3*n5 + 
      8*d*n3*n5 - 12*n3^2*n5)*j[p4, 1 + n1, 1 + n3, n3, 1, n5, 0, 0, -1, 1, 
      1, 1, 1, 0, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((40*n3 - 26*d*n3 + 4*d^2*n3 + 24*n3^2 - 6*d*n3^2 + 10*n3*n5 - 4*d*n3*n5 + 
      6*n3^2*n5)*j[p4, 1 + n1, 1 + n3, n3, 1, n5, 0, 0, -1, 1, 1, 1, 1, 1, 
      1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-10 + 9*d - 2*d^2 - 15*n1 + 11*d*n1 - 2*d^2*n1 - 
      5*n1^2 + 2*d*n1^2 - 16*n3 + 7*d*n3 - 19*n1*n3 + 7*d*n1*n3 - 3*n1^2*n3 - 
      6*n3^2 - 6*n1*n3^2)*j[p4, 2 + n1, -1 + n3, n3, 1, n5, 0, 0, 0, 1, 1, 1, 
      1, 0, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((20 - 18*d + 4*d^2 + 30*n1 - 22*d*n1 + 4*d^2*n1 + 10*n1^2 - 4*d*n1^2 + 
      32*n3 - 14*d*n3 + 38*n1*n3 - 14*d*n1*n3 + 6*n1^2*n3 + 12*n3^2 + 
      12*n1*n3^2)*j[p4, 2 + n1, -1 + n3, n3, 1, n5, 0, 0, 0, 1, 1, 1, 1, 1, 
      1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((50 - 35*d + 6*d^2 + 55*n1 - 37*d*n1 + 6*d^2*n1 + 
      5*n1^2 - 2*d*n1^2 + 40*n3 - 13*d*n3 + 43*n1*n3 - 13*d*n1*n3 + 
      3*n1^2*n3 + 6*n3^2 + 6*n1*n3^2 + 10*n5 - 4*d*n5 + 10*n1*n5 - 
      4*d*n1*n5 + 6*n3*n5 + 6*n1*n3*n5)*j[p4, 2 + n1, n3, n3, 1, -1 + n5, 0, 
      0, 0, 1, 1, 0, 1, 1, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 
      26*n1 - 9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 
      19*n5 - 7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((50 - 35*d + 6*d^2 + 55*n1 - 37*d*n1 + 6*d^2*n1 + 5*n1^2 - 2*d*n1^2 + 
      40*n3 - 13*d*n3 + 43*n1*n3 - 13*d*n1*n3 + 3*n1^2*n3 + 6*n3^2 + 
      6*n1*n3^2 + 10*n5 - 4*d*n5 + 10*n1*n5 - 4*d*n1*n5 + 6*n3*n5 + 
      6*n1*n3*n5)*j[p4, 2 + n1, n3, n3, 1, -1 + n5, 0, 0, 0, 1, 1, 1, 1, 0, 
      1])/(2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-50 + 35*d - 6*d^2 - 55*n1 + 37*d*n1 - 6*d^2*n1 - 5*n1^2 + 2*d*n1^2 - 
      40*n3 + 13*d*n3 - 43*n1*n3 + 13*d*n1*n3 - 3*n1^2*n3 - 6*n3^2 - 
      6*n1*n3^2 - 10*n5 + 4*d*n5 - 10*n1*n5 + 4*d*n1*n5 - 6*n3*n5 - 
      6*n1*n3*n5)*j[p4, 2 + n1, n3, n3, 1, n5, 0, 0, -1, 0, 1, 1, 1, 1, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-50 + 35*d - 6*d^2 - 55*n1 + 37*d*n1 - 6*d^2*n1 - 
      5*n1^2 + 2*d*n1^2 - 40*n3 + 13*d*n3 - 43*n1*n3 + 13*d*n1*n3 - 
      3*n1^2*n3 - 6*n3^2 - 6*n1*n3^2 - 10*n5 + 4*d*n5 - 10*n1*n5 + 
      4*d*n1*n5 - 6*n3*n5 - 6*n1*n3*n5)*j[p4, 2 + n1, n3, n3, 1, n5, 0, 0, 
      -1, 1, 1, 1, 1, 0, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 
      9*d*n1 + 2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 
      7*d*n5 + 4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((40 - 26*d + 4*d^2 + 40*n1 - 26*d*n1 + 4*d^2*n1 + 24*n3 - 6*d*n3 + 
      24*n1*n3 - 6*d*n1*n3 + 10*n5 - 4*d*n5 + 10*n1*n5 - 4*d*n1*n5 + 
      6*n3*n5 + 6*n1*n3*n5)*j[p4, 2 + n1, n3, n3, 1, n5, 0, 0, -1, 1, 1, 1, 
      1, 1, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((-50 + 35*d - 6*d^2 - 55*n1 + 37*d*n1 - 6*d^2*n1 - 5*n1^2 + 2*d*n1^2 - 
      40*n3 + 13*d*n3 - 43*n1*n3 + 13*d*n1*n3 - 3*n1^2*n3 - 6*n3^2 - 
      6*n1*n3^2 - 10*n5 + 4*d*n5 - 10*n1*n5 + 4*d*n1*n5 - 6*n3*n5 - 
      6*n1*n3*n5)*j[p4, 2 + n1, n3, n3, 1, n5, 0, 0, 0, 0, 1, 1, 1, 1, 1])/
    (2*(-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)) + ((-10 + 9*d - 2*d^2 - 15*n1 + 11*d*n1 - 2*d^2*n1 - 
      5*n1^2 + 2*d*n1^2 - 16*n3 + 7*d*n3 - 19*n1*n3 + 7*d*n1*n3 - 3*n1^2*n3 - 
      6*n3^2 - 6*n1*n3^2)*j[p4, 2 + n1, n3, n3, 1, n5, 0, 0, 0, 1, 0, 1, 1, 
      1, 1])/((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 
      2*n1^2 + 60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 
      4*n1*n5 + 9*n3*n5 + n5^2)) + 
   ((10 - 9*d + 2*d^2 + 15*n1 - 11*d*n1 + 2*d^2*n1 + 5*n1^2 - 2*d*n1^2 + 
      16*n3 - 7*d*n3 + 19*n1*n3 - 7*d*n1*n3 + 3*n1^2*n3 + 6*n3^2 + 6*n1*n3^2)*
     j[p4, 2 + n1, n3, n3, 1, n5, 0, 0, 0, 1, 1, 0, 1, 1, 1])/
    ((-3 + d - n1 - n5)*(72 - 51*d + 9*d^2 + 26*n1 - 9*d*n1 + 2*n1^2 + 
      60*n3 - 21*d*n3 + 10*n1*n3 + 12*n3^2 + 19*n5 - 7*d*n5 + 4*n1*n5 + 
      9*n3*n5 + n5^2)), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?NonPositive, (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, 
    (n7_)?NonPositive, (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 1 && n13 == 1 && n14 == 1 && 
    n3 == 0 && n5 == 0 && n6 == 0 && n7 == 0 && n8 == 0 && 
     !(n2 == 0 || n4 == 1) -> 
  ((-2 - 15*d + 7*d^2 - 22*n2 + 6*d*n2 - 4*n2^2 + 14*n4 - 10*d*n4 + 4*n4^2 - 
      2*n9 - d*n9 - 2*n2*n9 + 2*n4*n9)*j[p4, -1, 1 + n2, 0, n4, 0, 0, 0, 0, 
      n9, 1, 1, 1, 1, 1])/(18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 
     10*d*n4 + 4*n2*n4 + 4*n4^2 + 2*n9 - 2*d*n9 + 2*n4*n9) + 
   ((-2 + d)*j[p4, -1, 1 + n2, 0, n4, 0, 0, 0, 0, n9, 1, 2, 0, 1, 1])/
    (18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 
     2*n9 - 2*d*n9 + 2*n4*n9) + ((-18 + 8*d - 4*n2 - 4*n4 - 2*n9)*
     j[p4, -1, 1 + n2, 0, n4, 0, 0, 0, 0, n9, 2, 0, 1, 1, 1])/
    (18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 
     2*n9 - 2*d*n9 + 2*n4*n9) + 
   ((2*n9 - d*n9)*j[p4, -1, 1 + n2, 0, n4, 0, 0, 0, 0, 1 + n9, 1, 1, 1, 1, 
      0])/(18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 
     4*n4^2 + 2*n9 - 2*d*n9 + 2*n4*n9) + 
   ((-13*n4 + 6*d*n4 - 2*n2*n4 - 2*n4^2 - n4*n9)*j[p4, -1, 1 + n2, 0, 1 + n4, 
      0, 0, 0, 0, n9, 1, 1, 1, 1, 0])/(18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 
     18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 2*n9 - 2*d*n9 + 2*n4*n9) + 
   ((18 - 8*d + 22*n2 - 8*d*n2 + 4*n2^2 + 4*n4 + 4*n2*n4 + 2*n9 + 2*n2*n9)*
     j[p4, -1, 2 + n2, -1, n4, 0, 0, 0, 0, n9, 1, 1, 1, 1, 1])/
    (-18 + 24*d - 7*d^2 - 4*n2 + 4*d*n2 - 18*n4 + 10*d*n4 - 4*n2*n4 - 
     4*n4^2 - 2*n9 + 2*d*n9 - 2*n4*n9) + 
   ((6 - 2*d + 10*n2 - 2*d*n2 + 4*n2^2 + 4*n4 + 4*n2*n4 + 2*n9 + 2*n2*n9)*
     j[p4, -1, 2 + n2, 0, n4, -1, 0, 0, 0, n9, 1, 1, 1, 1, 1])/
    (-18 + 24*d - 7*d^2 - 4*n2 + 4*d*n2 - 18*n4 + 10*d*n4 - 4*n2*n4 - 
     4*n4^2 - 2*n9 + 2*d*n9 - 2*n4*n9) + 
   ((-54 + 24*d - 66*n2 + 24*d*n2 - 12*n2^2 - 12*n4 - 12*n2*n4 - 6*n9 - 
      6*n2*n9)*j[p4, -1, 2 + n2, 0, n4, 0, 0, -1, 0, n9, 1, 1, 1, 1, 1])/
    (-18 + 24*d - 7*d^2 - 4*n2 + 4*d*n2 - 18*n4 + 10*d*n4 - 4*n2*n4 - 
     4*n4^2 - 2*n9 + 2*d*n9 - 2*n4*n9) + 
   ((-4 + 2*d - 4*n2 + 2*d*n2)*j[p4, -1, 2 + n2, 0, n4, 0, 0, 0, -1, n9, 1, 
      1, 1, 1, 1])/(-18 + 24*d - 7*d^2 - 4*n2 + 4*d*n2 - 18*n4 + 10*d*n4 - 
     4*n2*n4 - 4*n4^2 - 2*n9 + 2*d*n9 - 2*n4*n9) + 
   ((13 - 6*d + 15*n2 - 6*d*n2 + 2*n2^2 + 2*n4 + 2*n2*n4 + n9 + n2*n9)*
     j[p4, -1, 2 + n2, 0, n4, 0, 0, 0, 0, n9, 1, 1, 0, 1, 1])/
    (-18 + 24*d - 7*d^2 - 4*n2 + 4*d*n2 - 18*n4 + 10*d*n4 - 4*n2*n4 - 
     4*n4^2 - 2*n9 + 2*d*n9 - 2*n4*n9) + 
   ((-26 + 12*d - 30*n2 + 12*d*n2 - 4*n2^2 - 4*n4 - 4*n2*n4 - 2*n9 - 2*n2*n9)*
     j[p4, -1, 2 + n2, 0, n4, 0, 0, 0, 0, n9, 1, 1, 1, 0, 1])/
    (-18 + 24*d - 7*d^2 - 4*n2 + 4*d*n2 - 18*n4 + 10*d*n4 - 4*n2*n4 - 
     4*n4^2 - 2*n9 + 2*d*n9 - 2*n4*n9) + 
   ((2 - d)*j[p4, 0, n2, 0, n4, 0, 0, 0, 0, n9, 1, 0, 2, 1, 1])/
    (18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 
     2*n9 - 2*d*n9 + 2*n4*n9) + 
   ((2 - d)*j[p4, 0, n2, 0, n4, 0, 0, 0, 0, n9, 1, 2, 0, 1, 1])/
    (18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 
     2*n9 - 2*d*n9 + 2*n4*n9) + ((27 - 12*d + 6*n2 + 6*n4 + 3*n9)*
     j[p4, 0, n2, 0, n4, 0, 0, 0, 0, n9, 2, 0, 1, 1, 1])/
    (18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 
     2*n9 - 2*d*n9 + 2*n4*n9) + ((13*n4 - 6*d*n4 + 2*n2*n4 + 2*n4^2 + n4*n9)*
     j[p4, 0, n2, 0, 1 + n4, 0, 0, 0, 0, n9, 1, 1, 1, 1, 0])/
    (18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 
     2*n9 - 2*d*n9 + 2*n4*n9) + 
   ((2 - d)*j[p4, 0, 1 + n2, -1, n4, 0, 0, 0, 0, n9, 1, 1, 1, 2, 0])/
    (18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 
     2*n9 - 2*d*n9 + 2*n4*n9) + ((9 - 4*d + 2*n2 + 2*n4 + n9)*
     j[p4, 0, 1 + n2, -1, n4, 0, 0, 0, 0, n9, 2, 0, 1, 1, 1])/
    (18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 
     2*n9 - 2*d*n9 + 2*n4*n9) + ((15*n4 - 7*d*n4 + 2*n2*n4 + 2*n4^2 + n4*n9)*
     j[p4, 0, 1 + n2, -1, 1 + n4, 0, 0, 0, 0, -1 + n9, 1, 1, 1, 1, 1])/
    (18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 
     2*n9 - 2*d*n9 + 2*n4*n9) + ((-13*n4 + 6*d*n4 - 2*n2*n4 - 2*n4^2 - n4*n9)*
     j[p4, 0, 1 + n2, -1, 1 + n4, 0, 0, 0, 0, n9, 0, 1, 1, 1, 1])/
    (18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 
     2*n9 - 2*d*n9 + 2*n4*n9) + ((13*n4 - 6*d*n4 + 2*n2*n4 + 2*n4^2 + n4*n9)*
     j[p4, 0, 1 + n2, -1, 1 + n4, 0, 0, 0, 0, n9, 1, 0, 1, 1, 1])/
    (18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 
     2*n9 - 2*d*n9 + 2*n4*n9) + 
   ((40 - 31*d + 6*d^2 + 35*n2 - 14*d*n2 + 6*n2^2 + 19*n4 - 7*d*n4 + 
      8*n2*n4 + 2*n4^2 + 6*n9 - 2*d*n9 + 3*n2*n9 + n4*n9)*
     j[p4, 0, 1 + n2, 0, -1 + n4, 0, 0, 0, 0, -1 + n9, 1, 1, 1, 1, 2])/
    ((-1 + n4)*(18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 
      4*n2*n4 + 4*n4^2 + 2*n9 - 2*d*n9 + 2*n4*n9)) + 
   ((-86 + 96*d - 37*d^2 + 5*d^3 - 64*n2 + 45*d*n2 - 8*d^2*n2 - 12*n2^2 + 
      4*d*n2^2 - 56*n4 + 48*d*n4 - 11*d^2*n4 - 16*n2*n4 + 6*d*n2*n4 - 
      8*n4^2 + 4*d*n4^2 + 2*n9 + d*n9 - d^2*n9 + 14*n2*n9 - 5*d*n2*n9 + 
      4*n2^2*n9 + 2*d*n4*n9 + 4*n2*n4*n9 + 4*n9^2 - d*n9^2 + 2*n2*n9^2)*
     j[p4, 0, 1 + n2, 0, -1 + n4, 0, 0, 0, 0, n9, 1, 1, 1, 1, 1])/
    ((-1 + n4)*(18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 
      4*n2*n4 + 4*n4^2 + 2*n9 - 2*d*n9 + 2*n4*n9)) + 
   ((-40 + 31*d - 6*d^2 - 35*n2 + 14*d*n2 - 6*n2^2 - 19*n4 + 7*d*n4 - 
      8*n2*n4 - 2*n4^2 - 6*n9 + 2*d*n9 - 3*n2*n9 - n4*n9)*
     j[p4, 0, 1 + n2, 0, -1 + n4, 0, 0, 0, 0, n9, 1, 1, 1, 1, 2])/
    ((-1 + n4)*(18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 
      4*n2*n4 + 4*n4^2 + 2*n9 - 2*d*n9 + 2*n4*n9)) + 
   ((2 - d)*j[p4, 0, 1 + n2, 0, -1 + n4, 0, 0, 0, 0, n9, 1, 1, 2, 1, 1])/
    (18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 
     2*n9 - 2*d*n9 + 2*n4*n9) + 
   ((6 - 7*d + 2*d^2 + 11*n2 - 5*d*n2 + 2*n2^2 + 11*n4 - 5*d*n4 + 4*n2*n4 + 
      2*n4^2 + 2*n9 - d*n9 + n2*n9 + n4*n9)*j[p4, 0, 1 + n2, 0, -1 + n4, 0, 
      0, 0, 0, n9, 1, 2, 0, 1, 1])/((-1 + n4)*(18 - 24*d + 7*d^2 + 4*n2 - 
      4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 2*n9 - 2*d*n9 + 
      2*n4*n9)) + ((-8 + 8*d - 2*d^2 - 11*n2 + 5*d*n2 - 2*n2^2 - 9*n4 + 
      4*d*n4 - 4*n2*n4 - 2*n4^2 - 2*n9 + d*n9 - n2*n9 - n4*n9)*
     j[p4, 0, 1 + n2, 0, -1 + n4, 0, 0, 0, 0, n9, 1, 2, 1, 1, 1])/
    ((-1 + n4)*(18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 
      4*n2*n4 + 4*n4^2 + 2*n9 - 2*d*n9 + 2*n4*n9)) + 
   ((-70*n9 + 60*d*n9 - 13*d^2*n9 - 50*n2*n9 + 21*d*n2*n9 - 8*n2^2*n9 - 
      38*n4*n9 + 16*d*n4*n9 - 12*n2*n4*n9 - 4*n4^2*n9 - 8*n9^2 + 3*d*n9^2 - 
      4*n2*n9^2 - 2*n4*n9^2)*j[p4, 0, 1 + n2, 0, -1 + n4, 0, 0, 0, 0, 1 + n9, 
      1, 1, 1, 1, 0])/((-1 + n4)*(18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 
      10*d*n4 + 4*n2*n4 + 4*n4^2 + 2*n9 - 2*d*n9 + 2*n4*n9)) + 
   ((70*n9 - 60*d*n9 + 13*d^2*n9 + 50*n2*n9 - 21*d*n2*n9 + 8*n2^2*n9 + 
      38*n4*n9 - 16*d*n4*n9 + 12*n2*n4*n9 + 4*n4^2*n9 + 8*n9^2 - 3*d*n9^2 + 
      4*n2*n9^2 + 2*n4*n9^2)*j[p4, 0, 1 + n2, 0, -1 + n4, 0, 0, 0, 0, 1 + n9, 
      1, 1, 1, 1, 1])/((-1 + n4)*(18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 
      10*d*n4 + 4*n2*n4 + 4*n4^2 + 2*n9 - 2*d*n9 + 2*n4*n9)) + 
   ((-2 + d)*j[p4, 0, 1 + n2, 0, n4, -1, 0, 0, 0, n9, 1, 0, 2, 1, 1])/
    (18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 
     2*n9 - 2*d*n9 + 2*n4*n9) + ((-9 + 4*d - 2*n2 - 2*n4 - n9)*
     j[p4, 0, 1 + n2, 0, n4, -1, 0, 0, 0, n9, 1, 1, 0, 2, 1])/
    (18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 
     2*n9 - 2*d*n9 + 2*n4*n9) + 
   ((-2 + d)*j[p4, 0, 1 + n2, 0, n4, -1, 0, 0, 0, n9, 1, 2, 0, 1, 1])/
    (18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 
     2*n9 - 2*d*n9 + 2*n4*n9) + 
   ((-2*n9 + d*n9)*j[p4, 0, 1 + n2, 0, n4, -1, 0, 0, 0, 1 + n9, 1, 1, 1, 1, 
      0])/(18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 
     4*n4^2 + 2*n9 - 2*d*n9 + 2*n4*n9) + 
   ((-2 + d)*j[p4, 0, 1 + n2, 0, n4, 0, -1, 0, 0, n9, 1, 0, 2, 1, 1])/
    (18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 
     2*n9 - 2*d*n9 + 2*n4*n9) + 
   ((-2 + d)*j[p4, 0, 1 + n2, 0, n4, 0, -1, 0, 0, n9, 1, 2, 0, 1, 1])/
    (18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 
     2*n9 - 2*d*n9 + 2*n4*n9) + ((-11 + 5*d - 2*n2 - 2*n4 - n9)*
     j[p4, 0, 1 + n2, 0, n4, 0, -1, 0, 0, n9, 2, 0, 1, 1, 1])/
    (18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 
     2*n9 - 2*d*n9 + 2*n4*n9) + 
   ((-2 + d)*j[p4, 0, 1 + n2, 0, n4, 0, 0, -1, 0, n9, 1, 0, 2, 1, 1])/
    (18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 
     2*n9 - 2*d*n9 + 2*n4*n9) + 
   ((-2 + d)*j[p4, 0, 1 + n2, 0, n4, 0, 0, -1, 0, n9, 1, 1, 1, 2, 0])/
    (18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 
     2*n9 - 2*d*n9 + 2*n4*n9) + 
   ((-2 + d)*j[p4, 0, 1 + n2, 0, n4, 0, 0, -1, 0, n9, 1, 2, 0, 1, 1])/
    (18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 
     2*n9 - 2*d*n9 + 2*n4*n9) + ((-9 + 4*d - 2*n2 - 2*n4 - n9)*
     j[p4, 0, 1 + n2, 0, n4, 0, 0, -1, 0, n9, 2, 0, 1, 1, 1])/
    (18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 
     2*n9 - 2*d*n9 + 2*n4*n9) + ((9 - 4*d + 2*n2 + 2*n4 + n9)*
     j[p4, 0, 1 + n2, 0, n4, 0, 0, -1, 0, n9, 2, 1, 0, 1, 1])/
    (18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 
     2*n9 - 2*d*n9 + 2*n4*n9) + ((-9 + 4*d - 2*n2 - 2*n4 - n9)*
     j[p4, 0, 1 + n2, 0, n4, 0, 0, -1, 0, n9, 2, 1, 1, 0, 1])/
    (18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 
     2*n9 - 2*d*n9 + 2*n4*n9) + ((9 - 4*d + 2*n2 + 2*n4 + n9)*
     j[p4, 0, 1 + n2, 0, n4, 0, 0, 0, -1, n9, 1, 1, 1, 2, 0])/
    (18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 
     2*n9 - 2*d*n9 + 2*n4*n9) + ((-9 + 4*d - 2*n2 - 2*n4 - n9)*
     j[p4, 0, 1 + n2, 0, n4, 0, 0, 0, -1, n9, 2, 0, 1, 1, 1])/
    (18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 
     2*n9 - 2*d*n9 + 2*n4*n9) + 
   ((-2 + d)*j[p4, 0, 1 + n2, 0, n4, 0, 0, 0, 0, -1 + n9, 1, 1, 1, 0, 2])/
    (18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 
     2*n9 - 2*d*n9 + 2*n4*n9) + 
   ((22 - 14*d + 2*d^2 + 24*n2 - 9*d*n2 + 4*n2^2 + 4*n4 + 4*n2*n4 + 4*n9 - 
      d*n9 + 2*n2*n9)*j[p4, 0, 1 + n2, 0, n4, 0, 0, 0, 0, -1 + n9, 1, 1, 1, 
      1, 1])/(18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 
     4*n4^2 + 2*n9 - 2*d*n9 + 2*n4*n9) + 
   ((2 - d)*j[p4, 0, 1 + n2, 0, n4, 0, 0, 0, 0, -1 + n9, 1, 2, 1, 1, 1])/
    (18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 
     2*n9 - 2*d*n9 + 2*n4*n9) + ((11 - 5*d + 2*n2 + 2*n4 + n9)*
     j[p4, 0, 1 + n2, 0, n4, 0, 0, 0, 0, -1 + n9, 2, 0, 1, 1, 1])/
    (18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 
     2*n9 - 2*d*n9 + 2*n4*n9) + 
   ((-13 + 19*d - 6*d^2 - 27*n2 + 13*d*n2 - 6*n2^2 - 13*n4 + 7*d*n4 - 
      8*n2*n4 - 2*n4^2 - 3*n9 + 2*d*n9 - 3*n2*n9 - n4*n9)*
     j[p4, 0, 1 + n2, 0, n4, 0, 0, 0, 0, n9, 0, 1, 1, 1, 1])/
    (18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 
     2*n9 - 2*d*n9 + 2*n4*n9) + 
   ((15 - 20*d + 6*d^2 + 29*n2 - 14*d*n2 + 6*n2^2 + 13*n4 - 7*d*n4 + 
      8*n2*n4 + 2*n4^2 + 3*n9 - 2*d*n9 + 3*n2*n9 + n4*n9)*
     j[p4, 0, 1 + n2, 0, n4, 0, 0, 0, 0, n9, 1, 0, 1, 1, 1])/
    (18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 
     2*n9 - 2*d*n9 + 2*n4*n9) + 
   ((13 - 6*d + 13*n2 - 5*d*n2 + 2*n2^2 + 2*n4 + 2*n2*n4 + n9 + n2*n9)*
     j[p4, 0, 1 + n2, 0, n4, 0, 0, 0, 0, n9, 1, 1, 0, 1, 1])/
    (18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 
     2*n9 - 2*d*n9 + 2*n4*n9) + 
   ((-13 + 6*d - 24*n2 + 10*d*n2 - 4*n2^2 - 2*n4 - 4*n2*n4 - n9 - 2*n2*n9)*
     j[p4, 0, 1 + n2, 0, n4, 0, 0, 0, 0, n9, 1, 1, 1, 0, 1])/
    (18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 
     2*n9 - 2*d*n9 + 2*n4*n9) + 
   ((2 - d)*j[p4, 0, 1 + n2, 0, n4, 0, 0, 0, 0, n9, 1, 1, 1, 0, 2])/
    (18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 
     2*n9 - 2*d*n9 + 2*n4*n9) + 
   ((-50 + 47*d - 11*d^2 - 21*n2 + 10*d*n2 - 2*n2^2 - 19*n4 + 9*d*n4 - 
      4*n2*n4 - 2*n4^2 - 6*n9 + 3*d*n9 - n2*n9 - n4*n9)*
     j[p4, 0, 1 + n2, 0, n4, 0, 0, 0, 0, n9, 1, 1, 1, 1, 0])/
    (18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 
     2*n9 - 2*d*n9 + 2*n4*n9) + 
   ((32 - 21*d + 3*d^2 + 26*n2 - 10*d*n2 + 4*n2^2 + 8*n4 - 2*d*n4 + 4*n2*n4 + 
      4*n9 - d*n9 + 2*n2*n9)*j[p4, 0, 1 + n2, 0, n4, 0, 0, 0, 0, n9, 1, 1, 1, 
      1, 1])/(18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 
     4*n4^2 + 2*n9 - 2*d*n9 + 2*n4*n9) + 
   ((-2 + d)*j[p4, 0, 1 + n2, 0, n4, 0, 0, 0, 0, n9, 1, 1, 2, 0, 1])/
    (18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 
     2*n9 - 2*d*n9 + 2*n4*n9) + 
   ((2 - d)*j[p4, 0, 1 + n2, 0, n4, 0, 0, 0, 0, n9, 1, 1, 2, 1, 0])/
    (18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 
     2*n9 - 2*d*n9 + 2*n4*n9) + ((-9 + 4*d - 2*n2 - 2*n4 - n9)*
     j[p4, 0, 1 + n2, 0, n4, 0, 0, 0, 0, n9, 2, 0, 1, 1, 1])/
    (18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 
     2*n9 - 2*d*n9 + 2*n4*n9) + ((-n4 - 2*n2*n4 - 2*n4^2 - n4*n9)*
     j[p4, 0, 1 + n2, 0, 1 + n4, -1, 0, 0, 0, -1 + n9, 1, 1, 1, 1, 1])/
    (18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 
     2*n9 - 2*d*n9 + 2*n4*n9) + 
   ((12*n4 - 5*d*n4 + 4*n2*n4 + 4*n4^2 + 2*n4*n9)*j[p4, 0, 1 + n2, 0, 1 + n4, 
      -1, 0, 0, 0, n9, 0, 1, 1, 1, 1])/(18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 
     18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 2*n9 - 2*d*n9 + 2*n4*n9) + 
   ((-12*n4 + 5*d*n4 - 4*n2*n4 - 4*n4^2 - 2*n4*n9)*
     j[p4, 0, 1 + n2, 0, 1 + n4, -1, 0, 0, 0, n9, 1, 0, 1, 1, 1])/
    (18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 
     2*n9 - 2*d*n9 + 2*n4*n9) + 
   ((-2*n4 + d*n4)*j[p4, 0, 1 + n2, 0, 1 + n4, -1, 0, 0, 0, n9, 1, 1, 1, 1, 
      0])/(18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 
     4*n4^2 + 2*n9 - 2*d*n9 + 2*n4*n9) + 
   ((2*n4 - d*n4)*j[p4, 0, 1 + n2, 0, 1 + n4, 0, -1, 0, 0, -1 + n9, 1, 1, 1, 
      1, 1])/(18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 
     4*n4^2 + 2*n9 - 2*d*n9 + 2*n4*n9) + 
   ((-4*n4 + 2*d*n4)*j[p4, 0, 1 + n2, 0, 1 + n4, 0, -1, 0, 0, n9, 1, 1, 1, 1, 
      0])/(18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 
     4*n4^2 + 2*n9 - 2*d*n9 + 2*n4*n9) + 
   ((n4 + 2*n2*n4 + 2*n4^2 + n4*n9)*j[p4, 0, 1 + n2, 0, 1 + n4, 0, 0, -1, 0, 
      -1 + n9, 1, 1, 1, 1, 1])/(18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 
     10*d*n4 + 4*n2*n4 + 4*n4^2 + 2*n9 - 2*d*n9 + 2*n4*n9) + 
   ((-12*n4 + 5*d*n4 - 4*n2*n4 - 4*n4^2 - 2*n4*n9)*
     j[p4, 0, 1 + n2, 0, 1 + n4, 0, 0, -1, 0, n9, 0, 1, 1, 1, 1])/
    (18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 
     2*n9 - 2*d*n9 + 2*n4*n9) + 
   ((12*n4 - 5*d*n4 + 4*n2*n4 + 4*n4^2 + 2*n4*n9)*j[p4, 0, 1 + n2, 0, 1 + n4, 
      0, 0, -1, 0, n9, 1, 0, 1, 1, 1])/(18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 
     18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 2*n9 - 2*d*n9 + 2*n4*n9) + 
   ((-11*n4 + 5*d*n4 - 2*n2*n4 - 2*n4^2 - n4*n9)*j[p4, 0, 1 + n2, 0, 1 + n4, 
      0, 0, -1, 0, n9, 1, 1, 1, 1, 0])/(18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 
     18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 2*n9 - 2*d*n9 + 2*n4*n9) + 
   ((-2*n4 + d*n4)*j[p4, 0, 1 + n2, 0, 1 + n4, 0, 0, 0, -1, -1 + n9, 1, 1, 1, 
      1, 1])/(18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 
     4*n4^2 + 2*n9 - 2*d*n9 + 2*n4*n9) + 
   ((-9*n4 + 4*d*n4 - 2*n2*n4 - 2*n4^2 - n4*n9)*j[p4, 0, 1 + n2, 0, 1 + n4, 
      0, 0, 0, -1, n9, 1, 1, 1, 1, 0])/(18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 
     18*n4 - 10*d*n4 + 4*n2*n4 + 4*n4^2 + 2*n9 - 2*d*n9 + 2*n4*n9) + 
   ((-2*n4 + d*n4)*j[p4, 0, 1 + n2, 0, 1 + n4, 0, 0, 0, 0, -1 + n9, 1, 1, 1, 
      1, 0])/(18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 4*n2*n4 + 
     4*n4^2 + 2*n9 - 2*d*n9 + 2*n4*n9) + 
   ((14 - 6*d + 32*n2 - 12*d*n2 + 22*n2^2 - 6*d*n2^2 + 4*n2^3 + 8*n4 - 
      2*d*n4 + 12*n2*n4 - 2*d*n2*n4 + 4*n2^2*n4 + 2*n9 + 4*n2*n9 + 2*n2^2*n9)*
     j[p4, 0, 2 + n2, -1, -1 + n4, 0, 0, 0, 0, n9, 1, 1, 1, 1, 1])/
    ((-1 + n4)*(18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 
      4*n2*n4 + 4*n4^2 + 2*n9 - 2*d*n9 + 2*n4*n9)) + 
   ((-5 + 2*d - 7*n2 + 2*d*n2 - 2*n2^2 - 2*n4 - 2*n2*n4 - n9 - n2*n9)*
     j[p4, 0, 2 + n2, -1, n4, 0, 0, 0, 0, n9, 0, 1, 1, 1, 1])/
    (-18 + 24*d - 7*d^2 - 4*n2 + 4*d*n2 - 18*n4 + 10*d*n4 - 4*n2*n4 - 
     4*n4^2 - 2*n9 + 2*d*n9 - 2*n4*n9) + 
   ((-14 + 6*d - 32*n2 + 12*d*n2 - 22*n2^2 + 6*d*n2^2 - 4*n2^3 - 8*n4 + 
      2*d*n4 - 12*n2*n4 + 2*d*n2*n4 - 4*n2^2*n4 - 2*n9 - 4*n2*n9 - 2*n2^2*n9)*
     j[p4, 0, 2 + n2, 0, -1 + n4, 0, 0, -1, 0, n9, 1, 1, 1, 1, 1])/
    ((-1 + n4)*(18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 
      4*n2*n4 + 4*n4^2 + 2*n9 - 2*d*n9 + 2*n4*n9)) + 
   ((-14 + 6*d - 32*n2 + 12*d*n2 - 22*n2^2 + 6*d*n2^2 - 4*n2^3 - 8*n4 + 
      2*d*n4 - 12*n2*n4 + 2*d*n2*n4 - 4*n2^2*n4 - 2*n9 - 4*n2*n9 - 2*n2^2*n9)*
     j[p4, 0, 2 + n2, 0, -1 + n4, 0, 0, 0, -1, n9, 1, 1, 1, 1, 1])/
    ((-1 + n4)*(18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 
      4*n2*n4 + 4*n4^2 + 2*n9 - 2*d*n9 + 2*n4*n9)) + 
   ((14 - 6*d + 32*n2 - 12*d*n2 + 22*n2^2 - 6*d*n2^2 + 4*n2^3 + 8*n4 - 
      2*d*n4 + 12*n2*n4 - 2*d*n2*n4 + 4*n2^2*n4 + 2*n9 + 4*n2*n9 + 2*n2^2*n9)*
     j[p4, 0, 2 + n2, 0, -1 + n4, 0, 0, 0, 0, n9, 1, 1, 0, 1, 1])/
    ((-1 + n4)*(18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 
      4*n2*n4 + 4*n4^2 + 2*n9 - 2*d*n9 + 2*n4*n9)) + 
   ((-28 + 12*d - 64*n2 + 24*d*n2 - 44*n2^2 + 12*d*n2^2 - 8*n2^3 - 16*n4 + 
      4*d*n4 - 24*n2*n4 + 4*d*n2*n4 - 8*n2^2*n4 - 4*n9 - 8*n2*n9 - 4*n2^2*n9)*
     j[p4, 0, 2 + n2, 0, -1 + n4, 0, 0, 0, 0, n9, 1, 1, 1, 0, 1])/
    ((-1 + n4)*(18 - 24*d + 7*d^2 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 
      4*n2*n4 + 4*n4^2 + 2*n9 - 2*d*n9 + 2*n4*n9)) + 
   ((-8 + 3*d - 12*n2 + 3*d*n2 - 4*n2^2 - 4*n4 - 4*n2*n4 - 2*n9 - 2*n2*n9)*
     j[p4, 0, 2 + n2, 0, n4, -1, 0, 0, 0, n9, 0, 1, 1, 1, 1])/
    (-18 + 24*d - 7*d^2 - 4*n2 + 4*d*n2 - 18*n4 + 10*d*n4 - 4*n2*n4 - 
     4*n4^2 - 2*n9 + 2*d*n9 - 2*n4*n9) + 
   ((-2 + d - 2*n2 + d*n2)*j[p4, 0, 2 + n2, 0, n4, -1, 0, 0, 0, n9, 1, 1, 0, 
      1, 1])/(-18 + 24*d - 7*d^2 - 4*n2 + 4*d*n2 - 18*n4 + 10*d*n4 - 
     4*n2*n4 - 4*n4^2 - 2*n9 + 2*d*n9 - 2*n4*n9) + 
   ((4 - 2*d + 4*n2 - 2*d*n2)*j[p4, 0, 2 + n2, 0, n4, -1, 0, 0, 0, n9, 1, 1, 
      1, 0, 1])/(-18 + 24*d - 7*d^2 - 4*n2 + 4*d*n2 - 18*n4 + 10*d*n4 - 
     4*n2*n4 - 4*n4^2 - 2*n9 + 2*d*n9 - 2*n4*n9) + 
   ((2 - d + 2*n2 - d*n2)*j[p4, 0, 2 + n2, 0, n4, 0, -1, 0, 0, n9, 0, 1, 1, 
      1, 1])/(-18 + 24*d - 7*d^2 - 4*n2 + 4*d*n2 - 18*n4 + 10*d*n4 - 
     4*n2*n4 - 4*n4^2 - 2*n9 + 2*d*n9 - 2*n4*n9) + 
   ((2 - d + 2*n2 - d*n2)*j[p4, 0, 2 + n2, 0, n4, 0, -1, 0, 0, n9, 1, 1, 0, 
      1, 1])/(-18 + 24*d - 7*d^2 - 4*n2 + 4*d*n2 - 18*n4 + 10*d*n4 - 
     4*n2*n4 - 4*n4^2 - 2*n9 + 2*d*n9 - 2*n4*n9) + 
   ((-4 + 2*d - 4*n2 + 2*d*n2)*j[p4, 0, 2 + n2, 0, n4, 0, -1, 0, 0, n9, 1, 1, 
      1, 0, 1])/(-18 + 24*d - 7*d^2 - 4*n2 + 4*d*n2 - 18*n4 + 10*d*n4 - 
     4*n2*n4 - 4*n4^2 - 2*n9 + 2*d*n9 - 2*n4*n9) + 
   ((11 - 5*d + 13*n2 - 5*d*n2 + 2*n2^2 + 2*n4 + 2*n2*n4 + n9 + n2*n9)*
     j[p4, 0, 2 + n2, 0, n4, 0, 0, -1, 0, -1 + n9, 1, 1, 1, 1, 1])/
    (-18 + 24*d - 7*d^2 - 4*n2 + 4*d*n2 - 18*n4 + 10*d*n4 - 4*n2*n4 - 
     4*n4^2 - 2*n9 + 2*d*n9 - 2*n4*n9) + 
   ((32 - 14*d + 40*n2 - 14*d*n2 + 8*n2^2 + 8*n4 + 8*n2*n4 + 4*n9 + 4*n2*n9)*
     j[p4, 0, 2 + n2, 0, n4, 0, 0, -1, 0, n9, 0, 1, 1, 1, 1])/
    (-18 + 24*d - 7*d^2 - 4*n2 + 4*d*n2 - 18*n4 + 10*d*n4 - 4*n2*n4 - 
     4*n4^2 - 2*n9 + 2*d*n9 - 2*n4*n9) + 
   ((-9 + 4*d - 11*n2 + 4*d*n2 - 2*n2^2 - 2*n4 - 2*n2*n4 - n9 - n2*n9)*
     j[p4, 0, 2 + n2, 0, n4, 0, 0, -1, 0, n9, 1, 1, 0, 1, 1])/
    (-18 + 24*d - 7*d^2 - 4*n2 + 4*d*n2 - 18*n4 + 10*d*n4 - 4*n2*n4 - 
     4*n4^2 - 2*n9 + 2*d*n9 - 2*n4*n9) + 
   ((18 - 8*d + 22*n2 - 8*d*n2 + 4*n2^2 + 4*n4 + 4*n2*n4 + 2*n9 + 2*n2*n9)*
     j[p4, 0, 2 + n2, 0, n4, 0, 0, -1, 0, n9, 1, 1, 1, 0, 1])/
    (-18 + 24*d - 7*d^2 - 4*n2 + 4*d*n2 - 18*n4 + 10*d*n4 - 4*n2*n4 - 
     4*n4^2 - 2*n9 + 2*d*n9 - 2*n4*n9) + 
   ((-18 + 8*d - 22*n2 + 8*d*n2 - 4*n2^2 - 4*n4 - 4*n2*n4 - 2*n9 - 2*n2*n9)*
     j[p4, 0, 2 + n2, 0, n4, 0, 0, -1, 0, n9, 1, 1, 1, 1, 1])/
    (-18 + 24*d - 7*d^2 - 4*n2 + 4*d*n2 - 18*n4 + 10*d*n4 - 4*n2*n4 - 
     4*n4^2 - 2*n9 + 2*d*n9 - 2*n4*n9) + 
   ((-11 + 5*d - 13*n2 + 5*d*n2 - 2*n2^2 - 2*n4 - 2*n2*n4 - n9 - n2*n9)*
     j[p4, 0, 2 + n2, 0, n4, 0, 0, 0, -1, -1 + n9, 1, 1, 1, 1, 1])/
    (-18 + 24*d - 7*d^2 - 4*n2 + 4*d*n2 - 18*n4 + 10*d*n4 - 4*n2*n4 - 
     4*n4^2 - 2*n9 + 2*d*n9 - 2*n4*n9) + 
   ((9 - 4*d + 11*n2 - 4*d*n2 + 2*n2^2 + 2*n4 + 2*n2*n4 + n9 + n2*n9)*
     j[p4, 0, 2 + n2, 0, n4, 0, 0, 0, -1, n9, 1, 1, 0, 1, 1])/
    (-18 + 24*d - 7*d^2 - 4*n2 + 4*d*n2 - 18*n4 + 10*d*n4 - 4*n2*n4 - 
     4*n4^2 - 2*n9 + 2*d*n9 - 2*n4*n9) + 
   ((-18 + 8*d - 22*n2 + 8*d*n2 - 4*n2^2 - 4*n4 - 4*n2*n4 - 2*n9 - 2*n2*n9)*
     j[p4, 0, 2 + n2, 0, n4, 0, 0, 0, -1, n9, 1, 1, 1, 0, 1])/
    (-18 + 24*d - 7*d^2 - 4*n2 + 4*d*n2 - 18*n4 + 10*d*n4 - 4*n2*n4 - 
     4*n4^2 - 2*n9 + 2*d*n9 - 2*n4*n9) + 
   ((18 - 8*d + 22*n2 - 8*d*n2 + 4*n2^2 + 4*n4 + 4*n2*n4 + 2*n9 + 2*n2*n9)*
     j[p4, 0, 2 + n2, 0, n4, 0, 0, 0, -1, n9, 1, 1, 1, 1, 1])/
    (-18 + 24*d - 7*d^2 - 4*n2 + 4*d*n2 - 18*n4 + 10*d*n4 - 4*n2*n4 - 
     4*n4^2 - 2*n9 + 2*d*n9 - 2*n4*n9), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 1 && n13 == 1 && n14 == 1 && n3 == 0 && 
    n5 == 0 && n6 == 0 && n7 == 0 && n8 == 0 && n9 == 1 && 
     !(n2 == 0 || n4 == 1) -> 
  ((2 - d)*j[p4, -1, 1 + n2, 0, n4, 0, 0, 0, 0, 0, 2, n11, 1, 1, 1])/
    (18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 
     2*n11*n4 + 4*n2*n4 + 4*n4^2) + 
   ((-6 - 13*d + 7*d^2 + 2*n11 - 3*d*n11 - 22*n2 + 6*d*n2 - 2*n11*n2 - 
      4*n2^2 + 14*n4 - 10*d*n4 + 2*n11*n4 + 4*n4^2)*
     j[p4, -1, 1 + n2, 0, n4, 0, 0, 0, 0, 1, 1, n11, 1, 1, 1])/
    (18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 
     2*n11*n4 + 4*n2*n4 + 4*n4^2) + 
   ((2*n11 - d*n11)*j[p4, -1, 1 + n2, 0, n4, 0, 0, 0, 0, 1, 1, 1 + n11, 0, 1, 
      1])/(-18 + 24*d - 7*d^2 - 2*n11 + 2*d*n11 - 4*n2 + 4*d*n2 - 18*n4 + 
     10*d*n4 - 2*n11*n4 - 4*n2*n4 - 4*n4^2) + 
   ((-18 + 8*d - 2*n11 - 4*n2 - 4*n4)*j[p4, -1, 1 + n2, 0, n4, 0, 0, 0, 0, 1, 
      2, -1 + n11, 1, 1, 1])/(18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 
     4*d*n2 + 18*n4 - 10*d*n4 + 2*n11*n4 + 4*n2*n4 + 4*n4^2) + 
   ((2 - d)*j[p4, -1, 1 + n2, 0, n4, 0, 0, 0, 0, 2, 1, n11, 1, 1, 0])/
    (18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 
     2*n11*n4 + 4*n2*n4 + 4*n4^2) + 
   ((-13*n4 + 6*d*n4 - n11*n4 - 2*n2*n4 - 2*n4^2)*j[p4, -1, 1 + n2, 0, 
      1 + n4, 0, 0, 0, 0, 1, 1, n11, 1, 1, 0])/(18 - 24*d + 7*d^2 + 2*n11 - 
     2*d*n11 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 2*n11*n4 + 4*n2*n4 + 
     4*n4^2) + ((18 - 8*d + 2*n11 + 22*n2 - 8*d*n2 + 2*n11*n2 + 4*n2^2 + 
      4*n4 + 4*n2*n4)*j[p4, -1, 2 + n2, -1, n4, 0, 0, 0, 0, 1, 1, n11, 1, 1, 
      1])/(-18 + 24*d - 7*d^2 - 2*n11 + 2*d*n11 - 4*n2 + 4*d*n2 - 18*n4 + 
     10*d*n4 - 2*n11*n4 - 4*n2*n4 - 4*n4^2) + 
   ((6 - 2*d + 2*n11 + 10*n2 - 2*d*n2 + 2*n11*n2 + 4*n2^2 + 4*n4 + 4*n2*n4)*
     j[p4, -1, 2 + n2, 0, n4, -1, 0, 0, 0, 1, 1, n11, 1, 1, 1])/
    (-18 + 24*d - 7*d^2 - 2*n11 + 2*d*n11 - 4*n2 + 4*d*n2 - 18*n4 + 10*d*n4 - 
     2*n11*n4 - 4*n2*n4 - 4*n4^2) + 
   ((-54 + 24*d - 6*n11 - 66*n2 + 24*d*n2 - 6*n11*n2 - 12*n2^2 - 12*n4 - 
      12*n2*n4)*j[p4, -1, 2 + n2, 0, n4, 0, 0, -1, 0, 1, 1, n11, 1, 1, 1])/
    (-18 + 24*d - 7*d^2 - 2*n11 + 2*d*n11 - 4*n2 + 4*d*n2 - 18*n4 + 10*d*n4 - 
     2*n11*n4 - 4*n2*n4 - 4*n4^2) + 
   ((-4 + 2*d - 4*n2 + 2*d*n2)*j[p4, -1, 2 + n2, 0, n4, 0, 0, 0, -1, 1, 1, 
      n11, 1, 1, 1])/(-18 + 24*d - 7*d^2 - 2*n11 + 2*d*n11 - 4*n2 + 4*d*n2 - 
     18*n4 + 10*d*n4 - 2*n11*n4 - 4*n2*n4 - 4*n4^2) + 
   ((13 - 6*d + n11 + 15*n2 - 6*d*n2 + n11*n2 + 2*n2^2 + 2*n4 + 2*n2*n4)*
     j[p4, -1, 2 + n2, 0, n4, 0, 0, 0, 0, 1, 1, n11, 0, 1, 1])/
    (-18 + 24*d - 7*d^2 - 2*n11 + 2*d*n11 - 4*n2 + 4*d*n2 - 18*n4 + 10*d*n4 - 
     2*n11*n4 - 4*n2*n4 - 4*n4^2) + 
   ((-26 + 12*d - 2*n11 - 30*n2 + 12*d*n2 - 2*n11*n2 - 4*n2^2 - 4*n4 - 
      4*n2*n4)*j[p4, -1, 2 + n2, 0, n4, 0, 0, 0, 0, 1, 1, n11, 1, 0, 1])/
    (-18 + 24*d - 7*d^2 - 2*n11 + 2*d*n11 - 4*n2 + 4*d*n2 - 18*n4 + 10*d*n4 - 
     2*n11*n4 - 4*n2*n4 - 4*n4^2) + 
   ((-2 + d)*j[p4, 0, n2, 0, n4, 0, 0, 0, 0, 0, 2, n11, 1, 1, 1])/
    (18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 
     2*n11*n4 + 4*n2*n4 + 4*n4^2) + 
   ((-2*n11 + d*n11)*j[p4, 0, n2, 0, n4, 0, 0, 0, 0, 1, 1, 1 + n11, 0, 1, 1])/
    (-18 + 24*d - 7*d^2 - 2*n11 + 2*d*n11 - 4*n2 + 4*d*n2 - 18*n4 + 10*d*n4 - 
     2*n11*n4 - 4*n2*n4 - 4*n4^2) + ((27 - 12*d + 3*n11 + 6*n2 + 6*n4)*
     j[p4, 0, n2, 0, n4, 0, 0, 0, 0, 1, 2, -1 + n11, 1, 1, 1])/
    (18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 
     2*n11*n4 + 4*n2*n4 + 4*n4^2) + 
   ((13*n4 - 6*d*n4 + n11*n4 + 2*n2*n4 + 2*n4^2)*j[p4, 0, n2, 0, 1 + n4, 0, 
      0, 0, 0, 1, 1, n11, 1, 1, 0])/(18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 
     4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 2*n11*n4 + 4*n2*n4 + 4*n4^2) + 
   ((2 - d)*j[p4, 0, 1 + n2, -1, n4, 0, 0, 0, 0, 1, 1, n11, 1, 2, 0])/
    (18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 
     2*n11*n4 + 4*n2*n4 + 4*n4^2) + ((9 - 4*d + n11 + 2*n2 + 2*n4)*
     j[p4, 0, 1 + n2, -1, n4, 0, 0, 0, 0, 1, 2, -1 + n11, 1, 1, 1])/
    (18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 
     2*n11*n4 + 4*n2*n4 + 4*n4^2) + 
   ((13*n4 - 6*d*n4 + n11*n4 + 2*n2*n4 + 2*n4^2)*j[p4, 0, 1 + n2, -1, 1 + n4, 
      0, 0, 0, 0, 0, 1, n11, 1, 1, 1])/(18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 
     4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 2*n11*n4 + 4*n2*n4 + 4*n4^2) + 
   ((-13*n4 + 6*d*n4 - n11*n4 - 2*n2*n4 - 2*n4^2)*j[p4, 0, 1 + n2, -1, 
      1 + n4, 0, 0, 0, 0, 1, 0, n11, 1, 1, 1])/(18 - 24*d + 7*d^2 + 2*n11 - 
     2*d*n11 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 2*n11*n4 + 4*n2*n4 + 
     4*n4^2) + ((13*n4 - 6*d*n4 + n11*n4 + 2*n2*n4 + 2*n4^2)*
     j[p4, 0, 1 + n2, -1, 1 + n4, 0, 0, 0, 0, 1, 1, -1 + n11, 1, 1, 1])/
    (18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 
     2*n11*n4 + 4*n2*n4 + 4*n4^2) + 
   ((44 - 33*d + 6*d^2 + 2*n11 + 35*n2 - 14*d*n2 + 3*n11*n2 + 6*n2^2 + 
      19*n4 - 7*d*n4 + n11*n4 + 8*n2*n4 + 2*n4^2)*j[p4, 0, 1 + n2, 0, 
      -1 + n4, 0, 0, 0, 0, 0, 1, n11, 1, 1, 2])/
    ((-1 + n4)*(18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 4*d*n2 + 18*n4 - 
      10*d*n4 + 2*n11*n4 + 4*n2*n4 + 4*n4^2)) + 
   ((-2 + d)*j[p4, 0, 1 + n2, 0, -1 + n4, 0, 0, 0, 0, 1, 1, -1 + n11, 2, 1, 
      1])/(18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 4*d*n2 + 18*n4 - 
     10*d*n4 + 2*n11*n4 + 4*n2*n4 + 4*n4^2) + 
   ((-64 + 80*d - 34*d^2 + 5*d^3 - 14*n11 + 15*d*n11 - 4*d^2*n11 - 2*n11^2 + 
      d*n11^2 - 55*n2 + 43*d*n2 - 8*d^2*n2 + 6*n11*n2 - 3*d*n11*n2 + 
      n11^2*n2 - 10*n2^2 + 4*d*n2^2 + 2*n11*n2^2 - 57*n4 + 50*d*n4 - 
      11*d^2*n4 + n11^2*n4 - 16*n2*n4 + 6*d*n2*n4 + 4*n11*n2*n4 - 10*n4^2 + 
      4*d*n4^2 + 2*n11*n4^2)*j[p4, 0, 1 + n2, 0, -1 + n4, 0, 0, 0, 0, 1, 1, 
      n11, 1, 1, 1])/((-1 + n4)*(18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 
      4*d*n2 + 18*n4 - 10*d*n4 + 2*n11*n4 + 4*n2*n4 + 4*n4^2)) + 
   ((-44 + 33*d - 6*d^2 - 2*n11 - 35*n2 + 14*d*n2 - 3*n11*n2 - 6*n2^2 - 
      19*n4 + 7*d*n4 - n11*n4 - 8*n2*n4 - 2*n4^2)*j[p4, 0, 1 + n2, 0, 
      -1 + n4, 0, 0, 0, 0, 1, 1, n11, 1, 1, 2])/
    ((-1 + n4)*(18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 4*d*n2 + 18*n4 - 
      10*d*n4 + 2*n11*n4 + 4*n2*n4 + 4*n4^2)) + 
   ((2 - d)*j[p4, 0, 1 + n2, 0, -1 + n4, 0, 0, 0, 0, 1, 1, n11, 2, 1, 1])/
    (18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 
     2*n11*n4 + 4*n2*n4 + 4*n4^2) + 
   ((10*n11 - 9*d*n11 + 2*d^2*n11 - 2*n11^2 + d*n11^2 + 11*n11*n2 - 
      5*d*n11*n2 + n11^2*n2 + 2*n11*n2^2 + 11*n11*n4 - 5*d*n11*n4 + 
      n11^2*n4 + 4*n11*n2*n4 + 2*n11*n4^2)*j[p4, 0, 1 + n2, 0, -1 + n4, 0, 0, 
      0, 0, 1, 1, 1 + n11, 0, 1, 1])/((-1 + n4)*(18 - 24*d + 7*d^2 + 2*n11 - 
      2*d*n11 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 2*n11*n4 + 4*n2*n4 + 
      4*n4^2)) + ((-12*n11 + 10*d*n11 - 2*d^2*n11 + 2*n11^2 - d*n11^2 - 
      11*n11*n2 + 5*d*n11*n2 - n11^2*n2 - 2*n11*n2^2 - 9*n11*n4 + 
      4*d*n11*n4 - n11^2*n4 - 4*n11*n2*n4 - 2*n11*n4^2)*
     j[p4, 0, 1 + n2, 0, -1 + n4, 0, 0, 0, 0, 1, 1, 1 + n11, 1, 1, 1])/
    ((-1 + n4)*(18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 4*d*n2 + 18*n4 - 
      10*d*n4 + 2*n11*n4 + 4*n2*n4 + 4*n4^2)) + 
   ((-70 + 60*d - 13*d^2 - 8*n11 + 3*d*n11 - 50*n2 + 21*d*n2 - 4*n11*n2 - 
      8*n2^2 - 38*n4 + 16*d*n4 - 2*n11*n4 - 12*n2*n4 - 4*n4^2)*
     j[p4, 0, 1 + n2, 0, -1 + n4, 0, 0, 0, 0, 2, 1, n11, 1, 1, 0])/
    ((-1 + n4)*(18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 4*d*n2 + 18*n4 - 
      10*d*n4 + 2*n11*n4 + 4*n2*n4 + 4*n4^2)) + 
   ((70 - 60*d + 13*d^2 + 8*n11 - 3*d*n11 + 50*n2 - 21*d*n2 + 4*n11*n2 + 
      8*n2^2 + 38*n4 - 16*d*n4 + 2*n11*n4 + 12*n2*n4 + 4*n4^2)*
     j[p4, 0, 1 + n2, 0, -1 + n4, 0, 0, 0, 0, 2, 1, n11, 1, 1, 1])/
    ((-1 + n4)*(18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 4*d*n2 + 18*n4 - 
      10*d*n4 + 2*n11*n4 + 4*n2*n4 + 4*n4^2)) + 
   ((-2 + d)*j[p4, 0, 1 + n2, 0, n4, -1, 0, 0, 0, 0, 1, n11, 1, 1, 2])/
    (18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 
     2*n11*n4 + 4*n2*n4 + 4*n4^2) + ((-9 + 4*d - n11 - 2*n2 - 2*n4)*
     j[p4, 0, 1 + n2, 0, n4, -1, 0, 0, 0, 1, 1, n11, 0, 2, 1])/
    (18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 
     2*n11*n4 + 4*n2*n4 + 4*n4^2) + 
   ((2*n11 - d*n11)*j[p4, 0, 1 + n2, 0, n4, -1, 0, 0, 0, 1, 1, 1 + n11, 0, 1, 
      1])/(-18 + 24*d - 7*d^2 - 2*n11 + 2*d*n11 - 4*n2 + 4*d*n2 - 18*n4 + 
     10*d*n4 - 2*n11*n4 - 4*n2*n4 - 4*n4^2) + 
   ((-2 + d)*j[p4, 0, 1 + n2, 0, n4, -1, 0, 0, 0, 2, 1, n11, 1, 1, 0])/
    (18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 
     2*n11*n4 + 4*n2*n4 + 4*n4^2) + 
   ((2*n11 - d*n11)*j[p4, 0, 1 + n2, 0, n4, 0, -1, 0, 0, 1, 1, 1 + n11, 0, 1, 
      1])/(-18 + 24*d - 7*d^2 - 2*n11 + 2*d*n11 - 4*n2 + 4*d*n2 - 18*n4 + 
     10*d*n4 - 2*n11*n4 - 4*n2*n4 - 4*n4^2) + 
   ((-11 + 5*d - n11 - 2*n2 - 2*n4)*j[p4, 0, 1 + n2, 0, n4, 0, -1, 0, 0, 1, 
      2, -1 + n11, 1, 1, 1])/(18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 
     4*d*n2 + 18*n4 - 10*d*n4 + 2*n11*n4 + 4*n2*n4 + 4*n4^2) + 
   ((11 - 5*d + n11 + 2*n2 + 2*n4)*j[p4, 0, 1 + n2, 0, n4, 0, 0, -1, 0, 0, 2, 
      n11, 1, 1, 1])/(18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 4*d*n2 + 
     18*n4 - 10*d*n4 + 2*n11*n4 + 4*n2*n4 + 4*n4^2) + 
   ((-2 + d)*j[p4, 0, 1 + n2, 0, n4, 0, 0, -1, 0, 1, 1, n11, 1, 2, 0])/
    (18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 
     2*n11*n4 + 4*n2*n4 + 4*n4^2) + 
   ((2*n11 - d*n11)*j[p4, 0, 1 + n2, 0, n4, 0, 0, -1, 0, 1, 1, 1 + n11, 0, 1, 
      1])/(-18 + 24*d - 7*d^2 - 2*n11 + 2*d*n11 - 4*n2 + 4*d*n2 - 18*n4 + 
     10*d*n4 - 2*n11*n4 - 4*n2*n4 - 4*n4^2) + 
   ((-9 + 4*d - n11 - 2*n2 - 2*n4)*j[p4, 0, 1 + n2, 0, n4, 0, 0, -1, 0, 1, 2, 
      -1 + n11, 1, 1, 1])/(18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 
     4*d*n2 + 18*n4 - 10*d*n4 + 2*n11*n4 + 4*n2*n4 + 4*n4^2) + 
   ((9 - 4*d + n11 + 2*n2 + 2*n4)*j[p4, 0, 1 + n2, 0, n4, 0, 0, -1, 0, 1, 2, 
      n11, 0, 1, 1])/(18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 4*d*n2 + 
     18*n4 - 10*d*n4 + 2*n11*n4 + 4*n2*n4 + 4*n4^2) + 
   ((-9 + 4*d - n11 - 2*n2 - 2*n4)*j[p4, 0, 1 + n2, 0, n4, 0, 0, -1, 0, 1, 2, 
      n11, 1, 0, 1])/(18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 4*d*n2 + 
     18*n4 - 10*d*n4 + 2*n11*n4 + 4*n2*n4 + 4*n4^2) + 
   ((9 - 4*d + n11 + 2*n2 + 2*n4)*j[p4, 0, 1 + n2, 0, n4, 0, 0, 0, -1, 1, 1, 
      n11, 1, 2, 0])/(18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 4*d*n2 + 
     18*n4 - 10*d*n4 + 2*n11*n4 + 4*n2*n4 + 4*n4^2) + 
   ((-9 + 4*d - n11 - 2*n2 - 2*n4)*j[p4, 0, 1 + n2, 0, n4, 0, 0, 0, -1, 1, 2, 
      -1 + n11, 1, 1, 1])/(18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 
     4*d*n2 + 18*n4 - 10*d*n4 + 2*n11*n4 + 4*n2*n4 + 4*n4^2) + 
   ((46 - 34*d + 6*d^2 + d*n11 + 35*n2 - 14*d*n2 + 3*n11*n2 + 6*n2^2 + 
      19*n4 - 7*d*n4 + n11*n4 + 8*n2*n4 + 2*n4^2)*j[p4, 0, 1 + n2, 0, n4, 0, 
      0, 0, 0, 0, 1, n11, 1, 1, 1])/(18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 
     4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 2*n11*n4 + 4*n2*n4 + 4*n4^2) + 
   ((-2*n11 + d*n11)*j[p4, 0, 1 + n2, 0, n4, 0, 0, 0, 0, 0, 1, 1 + n11, 1, 1, 
      1])/(-18 + 24*d - 7*d^2 - 2*n11 + 2*d*n11 - 4*n2 + 4*d*n2 - 18*n4 + 
     10*d*n4 - 2*n11*n4 - 4*n2*n4 - 4*n4^2) + 
   ((-17 + 21*d - 6*d^2 + n11 - 27*n2 + 13*d*n2 - 3*n11*n2 - 6*n2^2 - 13*n4 + 
      7*d*n4 - n11*n4 - 8*n2*n4 - 2*n4^2)*j[p4, 0, 1 + n2, 0, n4, 0, 0, 0, 0, 
      1, 0, n11, 1, 1, 1])/(18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 
     4*d*n2 + 18*n4 - 10*d*n4 + 2*n11*n4 + 4*n2*n4 + 4*n4^2) + 
   ((19 - 22*d + 6*d^2 - n11 + 29*n2 - 14*d*n2 + 3*n11*n2 + 6*n2^2 + 11*n4 - 
      6*d*n4 + n11*n4 + 8*n2*n4 + 2*n4^2)*j[p4, 0, 1 + n2, 0, n4, 0, 0, 0, 0, 
      1, 1, -1 + n11, 1, 1, 1])/(18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 
     4*d*n2 + 18*n4 - 10*d*n4 + 2*n11*n4 + 4*n2*n4 + 4*n4^2) + 
   ((2 - d)*j[p4, 0, 1 + n2, 0, n4, 0, 0, 0, 0, 1, 1, -1 + n11, 2, 0, 1])/
    (18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 
     2*n11*n4 + 4*n2*n4 + 4*n4^2) + 
   ((-2 + d)*j[p4, 0, 1 + n2, 0, n4, 0, 0, 0, 0, 1, 1, -1 + n11, 2, 1, 0])/
    (18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 
     2*n11*n4 + 4*n2*n4 + 4*n4^2) + 
   ((13 - 6*d + n11 + 13*n2 - 5*d*n2 + n11*n2 + 2*n2^2 + 2*n4 + 2*n2*n4)*
     j[p4, 0, 1 + n2, 0, n4, 0, 0, 0, 0, 1, 1, n11, 0, 1, 1])/
    (18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 
     2*n11*n4 + 4*n2*n4 + 4*n4^2) + 
   ((-13 + 6*d - n11 - 24*n2 + 10*d*n2 - 2*n11*n2 - 4*n2^2 - 2*n4 - 4*n2*n4)*
     j[p4, 0, 1 + n2, 0, n4, 0, 0, 0, 0, 1, 1, n11, 1, 0, 1])/
    (18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 
     2*n11*n4 + 4*n2*n4 + 4*n4^2) + 
   ((2 - d)*j[p4, 0, 1 + n2, 0, n4, 0, 0, 0, 0, 1, 1, n11, 1, 0, 2])/
    (18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 
     2*n11*n4 + 4*n2*n4 + 4*n4^2) + 
   ((-52 + 48*d - 11*d^2 - 4*n11 + 2*d*n11 - 21*n2 + 10*d*n2 - n11*n2 - 
      2*n2^2 - 19*n4 + 9*d*n4 - n11*n4 - 4*n2*n4 - 2*n4^2)*
     j[p4, 0, 1 + n2, 0, n4, 0, 0, 0, 0, 1, 1, n11, 1, 1, 0])/
    (18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 
     2*n11*n4 + 4*n2*n4 + 4*n4^2) + 
   ((32 - 21*d + 3*d^2 + 4*n11 - d*n11 + 26*n2 - 10*d*n2 + 2*n11*n2 + 
      4*n2^2 + 8*n4 - 2*d*n4 + 4*n2*n4)*j[p4, 0, 1 + n2, 0, n4, 0, 0, 0, 0, 
      1, 1, n11, 1, 1, 1])/(18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 
     4*d*n2 + 18*n4 - 10*d*n4 + 2*n11*n4 + 4*n2*n4 + 4*n4^2) + 
   ((-2 + d)*j[p4, 0, 1 + n2, 0, n4, 0, 0, 0, 0, 1, 1, n11, 2, 0, 1])/
    (18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 
     2*n11*n4 + 4*n2*n4 + 4*n4^2) + 
   ((2 - d)*j[p4, 0, 1 + n2, 0, n4, 0, 0, 0, 0, 1, 1, n11, 2, 1, 0])/
    (18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 
     2*n11*n4 + 4*n2*n4 + 4*n4^2) + ((-9 + 4*d - n11 - 2*n2 - 2*n4)*
     j[p4, 0, 1 + n2, 0, n4, 0, 0, 0, 0, 1, 2, -1 + n11, 1, 1, 1])/
    (18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 
     2*n11*n4 + 4*n2*n4 + 4*n4^2) + 
   ((-12*n4 + 5*d*n4 - 2*n11*n4 - 4*n2*n4 - 4*n4^2)*
     j[p4, 0, 1 + n2, 0, 1 + n4, -1, 0, 0, 0, 0, 1, n11, 1, 1, 1])/
    (18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 
     2*n11*n4 + 4*n2*n4 + 4*n4^2) + 
   ((12*n4 - 5*d*n4 + 2*n11*n4 + 4*n2*n4 + 4*n4^2)*
     j[p4, 0, 1 + n2, 0, 1 + n4, -1, 0, 0, 0, 1, 0, n11, 1, 1, 1])/
    (18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 
     2*n11*n4 + 4*n2*n4 + 4*n4^2) + 
   ((-14*n4 + 6*d*n4 - 2*n11*n4 - 4*n2*n4 - 4*n4^2)*
     j[p4, 0, 1 + n2, 0, 1 + n4, -1, 0, 0, 0, 1, 1, -1 + n11, 1, 1, 1])/
    (18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 
     2*n11*n4 + 4*n2*n4 + 4*n4^2) + 
   ((-2*n4 + d*n4)*j[p4, 0, 1 + n2, 0, 1 + n4, -1, 0, 0, 0, 1, 1, n11, 1, 1, 
      0])/(18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 4*d*n2 + 18*n4 - 
     10*d*n4 + 2*n11*n4 + 4*n2*n4 + 4*n4^2) + 
   ((-4*n4 + 2*d*n4)*j[p4, 0, 1 + n2, 0, 1 + n4, 0, -1, 0, 0, 1, 1, n11, 1, 
      1, 0])/(18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 4*d*n2 + 18*n4 - 
     10*d*n4 + 2*n11*n4 + 4*n2*n4 + 4*n4^2) + 
   ((12*n4 - 5*d*n4 + 2*n11*n4 + 4*n2*n4 + 4*n4^2)*
     j[p4, 0, 1 + n2, 0, 1 + n4, 0, 0, -1, 0, 0, 1, n11, 1, 1, 1])/
    (18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 
     2*n11*n4 + 4*n2*n4 + 4*n4^2) + 
   ((-12*n4 + 5*d*n4 - 2*n11*n4 - 4*n2*n4 - 4*n4^2)*
     j[p4, 0, 1 + n2, 0, 1 + n4, 0, 0, -1, 0, 1, 0, n11, 1, 1, 1])/
    (18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 
     2*n11*n4 + 4*n2*n4 + 4*n4^2) + 
   ((14*n4 - 6*d*n4 + 2*n11*n4 + 4*n2*n4 + 4*n4^2)*
     j[p4, 0, 1 + n2, 0, 1 + n4, 0, 0, -1, 0, 1, 1, -1 + n11, 1, 1, 1])/
    (18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 
     2*n11*n4 + 4*n2*n4 + 4*n4^2) + 
   ((-11*n4 + 5*d*n4 - n11*n4 - 2*n2*n4 - 2*n4^2)*j[p4, 0, 1 + n2, 0, 1 + n4, 
      0, 0, -1, 0, 1, 1, n11, 1, 1, 0])/(18 - 24*d + 7*d^2 + 2*n11 - 
     2*d*n11 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 2*n11*n4 + 4*n2*n4 + 
     4*n4^2) + ((-9*n4 + 4*d*n4 - n11*n4 - 2*n2*n4 - 2*n4^2)*
     j[p4, 0, 1 + n2, 0, 1 + n4, 0, 0, 0, -1, 1, 1, n11, 1, 1, 0])/
    (18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 
     2*n11*n4 + 4*n2*n4 + 4*n4^2) + 
   ((10 - 4*d + 6*n11 - 2*d*n11 + 28*n2 - 10*d*n2 + 8*n11*n2 - 2*d*n11*n2 + 
      22*n2^2 - 6*d*n2^2 + 2*n11*n2^2 + 4*n2^3 + 8*n4 - 2*d*n4 + 12*n2*n4 - 
      2*d*n2*n4 + 4*n2^2*n4)*j[p4, 0, 2 + n2, -1, -1 + n4, 0, 0, 0, 0, 1, 1, 
      n11, 1, 1, 1])/((-1 + n4)*(18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 
      4*d*n2 + 18*n4 - 10*d*n4 + 2*n11*n4 + 4*n2*n4 + 4*n4^2)) + 
   ((-5 + 2*d - n11 - 7*n2 + 2*d*n2 - n11*n2 - 2*n2^2 - 2*n4 - 2*n2*n4)*
     j[p4, 0, 2 + n2, -1, n4, 0, 0, 0, 0, 1, 0, n11, 1, 1, 1])/
    (-18 + 24*d - 7*d^2 - 2*n11 + 2*d*n11 - 4*n2 + 4*d*n2 - 18*n4 + 10*d*n4 - 
     2*n11*n4 - 4*n2*n4 - 4*n4^2) + 
   ((-10 + 4*d - 6*n11 + 2*d*n11 - 28*n2 + 10*d*n2 - 8*n11*n2 + 2*d*n11*n2 - 
      22*n2^2 + 6*d*n2^2 - 2*n11*n2^2 - 4*n2^3 - 8*n4 + 2*d*n4 - 12*n2*n4 + 
      2*d*n2*n4 - 4*n2^2*n4)*j[p4, 0, 2 + n2, 0, -1 + n4, 0, 0, -1, 0, 1, 1, 
      n11, 1, 1, 1])/((-1 + n4)*(18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 
      4*d*n2 + 18*n4 - 10*d*n4 + 2*n11*n4 + 4*n2*n4 + 4*n4^2)) + 
   ((-10 + 4*d - 6*n11 + 2*d*n11 - 28*n2 + 10*d*n2 - 8*n11*n2 + 2*d*n11*n2 - 
      22*n2^2 + 6*d*n2^2 - 2*n11*n2^2 - 4*n2^3 - 8*n4 + 2*d*n4 - 12*n2*n4 + 
      2*d*n2*n4 - 4*n2^2*n4)*j[p4, 0, 2 + n2, 0, -1 + n4, 0, 0, 0, -1, 1, 1, 
      n11, 1, 1, 1])/((-1 + n4)*(18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 
      4*d*n2 + 18*n4 - 10*d*n4 + 2*n11*n4 + 4*n2*n4 + 4*n4^2)) + 
   ((10 - 4*d + 6*n11 - 2*d*n11 + 28*n2 - 10*d*n2 + 8*n11*n2 - 2*d*n11*n2 + 
      22*n2^2 - 6*d*n2^2 + 2*n11*n2^2 + 4*n2^3 + 8*n4 - 2*d*n4 + 12*n2*n4 - 
      2*d*n2*n4 + 4*n2^2*n4)*j[p4, 0, 2 + n2, 0, -1 + n4, 0, 0, 0, 0, 1, 1, 
      n11, 0, 1, 1])/((-1 + n4)*(18 - 24*d + 7*d^2 + 2*n11 - 2*d*n11 + 4*n2 - 
      4*d*n2 + 18*n4 - 10*d*n4 + 2*n11*n4 + 4*n2*n4 + 4*n4^2)) + 
   ((-20 + 8*d - 12*n11 + 4*d*n11 - 56*n2 + 20*d*n2 - 16*n11*n2 + 
      4*d*n11*n2 - 44*n2^2 + 12*d*n2^2 - 4*n11*n2^2 - 8*n2^3 - 16*n4 + 
      4*d*n4 - 24*n2*n4 + 4*d*n2*n4 - 8*n2^2*n4)*j[p4, 0, 2 + n2, 0, -1 + n4, 
      0, 0, 0, 0, 1, 1, n11, 1, 0, 1])/((-1 + n4)*(18 - 24*d + 7*d^2 + 
      2*n11 - 2*d*n11 + 4*n2 - 4*d*n2 + 18*n4 - 10*d*n4 + 2*n11*n4 + 
      4*n2*n4 + 4*n4^2)) + ((-8 + 3*d - 2*n11 - 12*n2 + 3*d*n2 - 2*n11*n2 - 
      4*n2^2 - 4*n4 - 4*n2*n4)*j[p4, 0, 2 + n2, 0, n4, -1, 0, 0, 0, 1, 0, 
      n11, 1, 1, 1])/(-18 + 24*d - 7*d^2 - 2*n11 + 2*d*n11 - 4*n2 + 4*d*n2 - 
     18*n4 + 10*d*n4 - 2*n11*n4 - 4*n2*n4 - 4*n4^2) + 
   ((-2 + d - 2*n2 + d*n2)*j[p4, 0, 2 + n2, 0, n4, -1, 0, 0, 0, 1, 1, n11, 0, 
      1, 1])/(-18 + 24*d - 7*d^2 - 2*n11 + 2*d*n11 - 4*n2 + 4*d*n2 - 18*n4 + 
     10*d*n4 - 2*n11*n4 - 4*n2*n4 - 4*n4^2) + 
   ((4 - 2*d + 4*n2 - 2*d*n2)*j[p4, 0, 2 + n2, 0, n4, -1, 0, 0, 0, 1, 1, n11, 
      1, 0, 1])/(-18 + 24*d - 7*d^2 - 2*n11 + 2*d*n11 - 4*n2 + 4*d*n2 - 
     18*n4 + 10*d*n4 - 2*n11*n4 - 4*n2*n4 - 4*n4^2) + 
   ((2 - d + 2*n2 - d*n2)*j[p4, 0, 2 + n2, 0, n4, 0, -1, 0, 0, 1, 0, n11, 1, 
      1, 1])/(-18 + 24*d - 7*d^2 - 2*n11 + 2*d*n11 - 4*n2 + 4*d*n2 - 18*n4 + 
     10*d*n4 - 2*n11*n4 - 4*n2*n4 - 4*n4^2) + 
   ((2 - d + 2*n2 - d*n2)*j[p4, 0, 2 + n2, 0, n4, 0, -1, 0, 0, 1, 1, n11, 0, 
      1, 1])/(-18 + 24*d - 7*d^2 - 2*n11 + 2*d*n11 - 4*n2 + 4*d*n2 - 18*n4 + 
     10*d*n4 - 2*n11*n4 - 4*n2*n4 - 4*n4^2) + 
   ((-4 + 2*d - 4*n2 + 2*d*n2)*j[p4, 0, 2 + n2, 0, n4, 0, -1, 0, 0, 1, 1, 
      n11, 1, 0, 1])/(-18 + 24*d - 7*d^2 - 2*n11 + 2*d*n11 - 4*n2 + 4*d*n2 - 
     18*n4 + 10*d*n4 - 2*n11*n4 - 4*n2*n4 - 4*n4^2) + 
   ((32 - 14*d + 4*n11 + 40*n2 - 14*d*n2 + 4*n11*n2 + 8*n2^2 + 8*n4 + 
      8*n2*n4)*j[p4, 0, 2 + n2, 0, n4, 0, 0, -1, 0, 1, 0, n11, 1, 1, 1])/
    (-18 + 24*d - 7*d^2 - 2*n11 + 2*d*n11 - 4*n2 + 4*d*n2 - 18*n4 + 10*d*n4 - 
     2*n11*n4 - 4*n2*n4 - 4*n4^2) + 
   ((-9 + 4*d - n11 - 11*n2 + 4*d*n2 - n11*n2 - 2*n2^2 - 2*n4 - 2*n2*n4)*
     j[p4, 0, 2 + n2, 0, n4, 0, 0, -1, 0, 1, 1, n11, 0, 1, 1])/
    (-18 + 24*d - 7*d^2 - 2*n11 + 2*d*n11 - 4*n2 + 4*d*n2 - 18*n4 + 10*d*n4 - 
     2*n11*n4 - 4*n2*n4 - 4*n4^2) + 
   ((18 - 8*d + 2*n11 + 22*n2 - 8*d*n2 + 2*n11*n2 + 4*n2^2 + 4*n4 + 4*n2*n4)*
     j[p4, 0, 2 + n2, 0, n4, 0, 0, -1, 0, 1, 1, n11, 1, 0, 1])/
    (-18 + 24*d - 7*d^2 - 2*n11 + 2*d*n11 - 4*n2 + 4*d*n2 - 18*n4 + 10*d*n4 - 
     2*n11*n4 - 4*n2*n4 - 4*n4^2) + 
   ((-18 + 8*d - 2*n11 - 22*n2 + 8*d*n2 - 2*n11*n2 - 4*n2^2 - 4*n4 - 4*n2*n4)*
     j[p4, 0, 2 + n2, 0, n4, 0, 0, -1, 0, 1, 1, n11, 1, 1, 1])/
    (-18 + 24*d - 7*d^2 - 2*n11 + 2*d*n11 - 4*n2 + 4*d*n2 - 18*n4 + 10*d*n4 - 
     2*n11*n4 - 4*n2*n4 - 4*n4^2) + 
   ((9 - 4*d + n11 + 11*n2 - 4*d*n2 + n11*n2 + 2*n2^2 + 2*n4 + 2*n2*n4)*
     j[p4, 0, 2 + n2, 0, n4, 0, 0, 0, -1, 1, 1, n11, 0, 1, 1])/
    (-18 + 24*d - 7*d^2 - 2*n11 + 2*d*n11 - 4*n2 + 4*d*n2 - 18*n4 + 10*d*n4 - 
     2*n11*n4 - 4*n2*n4 - 4*n4^2) + 
   ((-18 + 8*d - 2*n11 - 22*n2 + 8*d*n2 - 2*n11*n2 - 4*n2^2 - 4*n4 - 4*n2*n4)*
     j[p4, 0, 2 + n2, 0, n4, 0, 0, 0, -1, 1, 1, n11, 1, 0, 1])/
    (-18 + 24*d - 7*d^2 - 2*n11 + 2*d*n11 - 4*n2 + 4*d*n2 - 18*n4 + 10*d*n4 - 
     2*n11*n4 - 4*n2*n4 - 4*n4^2) + 
   ((18 - 8*d + 2*n11 + 22*n2 - 8*d*n2 + 2*n11*n2 + 4*n2^2 + 4*n4 + 4*n2*n4)*
     j[p4, 0, 2 + n2, 0, n4, 0, 0, 0, -1, 1, 1, n11, 1, 1, 1])/
    (-18 + 24*d - 7*d^2 - 2*n11 + 2*d*n11 - 4*n2 + 4*d*n2 - 18*n4 + 10*d*n4 - 
     2*n11*n4 - 4*n2*n4 - 4*n4^2), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 1 && n13 == 1 && n14 == 1 && n3 == 0 && 
    n4 == 1 && n5 == 0 && n6 == 0 && n7 == 0 && n8 == 0 && 
     !(n2 == 0 || n9 == 1) -> 
  ((36 - 21*d + 3*d^2 + 22*n2 - 7*d*n2 + 2*n2^2)*j[p4, -1 + n1, 1 + n2, 0, 1, 
      0, 0, 0, 0, n9, 1, 1, 0, 2, 1])/((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*
     (-1 + n9)) + ((52 - 36*d + 6*d^2 + 14*n1 - 4*d*n1 + 32*n2 - 12*d*n2 + 
      6*n1*n2 + 4*n2^2)*j[p4, -1 + n1, 1 + n2, 0, 1, 0, 0, 0, 0, n9, 1, 1, 1, 
      1, 1])/((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-32 + 20*d - 3*d^2 - 20*n2 + 7*d*n2 - 2*n2^2 - 4*n9 + d*n9 - 2*n2*n9)*
     j[p4, -1 + n1, 1 + n2, 0, 1, 0, 0, 0, 0, n9, 1, 1, 1, 2, 0])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((-6 + 2*d - n1 - 2*n2)*j[p4, -1 + n1, 1 + n2, 0, 1, 0, 0, 0, 0, n9, 2, 0, 
      1, 1, 1])/((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-4 + d - 2*n2)*j[p4, -1 + n1, 1 + n2, 0, 2, 0, 0, 0, 0, n9, 1, 1, 1, 1, 
      0])/((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-4 + 2*d - 2*n1 - 4*n2 + 2*d*n2 - 2*n1*n2)*j[p4, -1 + n1, 2 + n2, 0, 1, 
      -1, 0, 0, 0, n9, 1, 1, 1, 1, 1])/((3 - d + n2)*
     (8 - 3*d + 2*n1 + 2*n2)) + 
   ((12 - 4*d + 2*n1 + 16*n2 - 4*d*n2 + 2*n1*n2 + 4*n2^2)*
     j[p4, -1 + n1, 2 + n2, 0, 1, 0, -1, 0, 0, n9, 1, 1, 1, 1, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((12 - 4*d + 2*n1 + 16*n2 - 4*d*n2 + 2*n1*n2 + 4*n2^2)*
     j[p4, -1 + n1, 2 + n2, 0, 1, 0, 0, -1, 0, n9, 1, 1, 1, 1, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-4 + 2*d - 2*n1 - 4*n2 + 2*d*n2 - 2*n1*n2)*j[p4, -1 + n1, 2 + n2, 0, 1, 
      0, 0, 0, -1, n9, 1, 1, 1, 1, 1])/((3 - d + n2)*
     (8 - 3*d + 2*n1 + 2*n2)) + ((-4 + d - 6*n2 + d*n2 - 2*n2^2)*
     j[p4, -1 + n1, 2 + n2, 0, 1, 0, 0, 0, 0, n9, 1, 1, 0, 1, 1])/
    ((3 - d + n2)*(8 - 3*d + 2*n1 + 2*n2)) + 
   ((8 - 2*d + 12*n2 - 2*d*n2 + 4*n2^2)*j[p4, -1 + n1, 2 + n2, 0, 1, 0, 0, 0, 
      0, n9, 1, 1, 1, 0, 1])/((3 - d + n2)*(8 - 3*d + 2*n1 + 2*n2)) + 
   ((28 - 19*d + 3*d^2 + 18*n2 - 7*d*n2 + 2*n2^2 + 8*n9 - 2*d*n9 + 4*n2*n9)*
     j[p4, n1, n2, 0, 1, 0, 0, 0, 0, n9, 1, 0, 2, 1, 1])/
    (2*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((28 - 19*d + 3*d^2 + 18*n2 - 7*d*n2 + 2*n2^2 + 8*n9 - 2*d*n9 + 4*n2*n9)*
     j[p4, n1, n2, 0, 1, 0, 0, 0, 0, n9, 1, 2, 0, 1, 1])/
    (2*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((6 - 2*d + n1 + 2*n2)*j[p4, n1, n2, 0, 1, 0, 0, 0, 0, n9, 2, 0, 1, 1, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-36*n9 + 21*d*n9 - 3*d^2*n9 - 22*n2*n9 + 7*d*n2*n9 - 2*n2^2*n9)*
     j[p4, n1, n2, 0, 1, 0, 0, 0, 0, 1 + n9, 1, 1, 1, 1, 0])/
    (2*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((4 - d + 2*n2)*j[p4, n1, n2, 0, 2, 0, 0, 0, 0, n9, 1, 1, 1, 1, 0])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-52 + 25*d - 3*d^2 - 30*n2 + 7*d*n2 - 2*n2^2 + 16*n9 - 4*d*n9 + 8*n2*n9)*
     j[p4, n1, 1 + n2, -1, 2, 0, 0, 0, 0, -1 + n9, 1, 1, 1, 1, 1])/
    (2*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((-4 + d - 2*n2)*j[p4, n1, 1 + n2, -1, 2, 0, 0, 0, 0, n9, 0, 1, 1, 1, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((4 - d + 2*n2)*j[p4, n1, 1 + n2, -1, 2, 0, 0, 0, 0, n9, 1, 0, 1, 1, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((36 - 21*d + 3*d^2 + 22*n2 - 7*d*n2 + 2*n2^2)*j[p4, n1, 1 + n2, 0, 0, 0, 
      0, 0, 0, -1 + n9, 1, 1, 1, 1, 2])/(2*(-8 + 3*d - 2*n1 - 2*n2)*
     (-3 + d - n2)*(-1 + n9)) + 
   ((36 - 21*d + 3*d^2 + 22*n2 - 7*d*n2 + 2*n2^2)*j[p4, n1, 1 + n2, 0, 0, 0, 
      0, 0, 0, n9, 1, 1, 1, 1, 1])/(2*(-8 + 3*d - 2*n1 - 2*n2)*
     (-3 + d - n2)) + ((-36 + 21*d - 3*d^2 - 22*n2 + 7*d*n2 - 2*n2^2)*
     j[p4, n1, 1 + n2, 0, 0, 0, 0, 0, 0, n9, 1, 1, 1, 1, 2])/
    (2*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((28 - 19*d + 3*d^2 + 18*n2 - 7*d*n2 + 2*n2^2 + 8*n9 - 2*d*n9 + 4*n2*n9)*
     j[p4, n1, 1 + n2, 0, 0, 0, 0, 0, 0, n9, 1, 1, 2, 1, 1])/
    (2*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((28 - 19*d + 3*d^2 + 18*n2 - 7*d*n2 + 2*n2^2 + 8*n9 - 2*d*n9 + 4*n2*n9)*
     j[p4, n1, 1 + n2, 0, 0, 0, 0, 0, 0, n9, 1, 2, 1, 1, 1])/
    (2*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((-36*n9 + 21*d*n9 - 3*d^2*n9 - 22*n2*n9 + 7*d*n2*n9 - 2*n2^2*n9)*
     j[p4, n1, 1 + n2, 0, 0, 0, 0, 0, 0, 1 + n9, 1, 1, 1, 1, 1])/
    (2*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((-28 + 19*d - 3*d^2 - 18*n2 + 7*d*n2 - 2*n2^2 - 8*n9 + 2*d*n9 - 4*n2*n9)*
     j[p4, n1, 1 + n2, 0, 1, -1, 0, 0, 0, n9, 1, 0, 2, 1, 1])/
    (2*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((-32 + 20*d - 3*d^2 - 20*n2 + 7*d*n2 - 2*n2^2 - 4*n9 + d*n9 - 2*n2*n9)*
     j[p4, n1, 1 + n2, 0, 1, -1, 0, 0, 0, n9, 1, 1, 0, 2, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((-28 + 19*d - 3*d^2 - 18*n2 + 7*d*n2 - 2*n2^2 - 8*n9 + 2*d*n9 - 4*n2*n9)*
     j[p4, n1, 1 + n2, 0, 1, -1, 0, 0, 0, n9, 1, 2, 0, 1, 1])/
    (2*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((36*n9 - 21*d*n9 + 3*d^2*n9 + 22*n2*n9 - 7*d*n2*n9 + 2*n2^2*n9)*
     j[p4, n1, 1 + n2, 0, 1, -1, 0, 0, 0, 1 + n9, 1, 1, 1, 1, 0])/
    (2*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((-28 + 19*d - 3*d^2 - 18*n2 + 7*d*n2 - 2*n2^2 - 8*n9 + 2*d*n9 - 4*n2*n9)*
     j[p4, n1, 1 + n2, 0, 1, 0, -1, 0, 0, n9, 1, 0, 2, 1, 1])/
    (2*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((-28 + 19*d - 3*d^2 - 18*n2 + 7*d*n2 - 2*n2^2 - 8*n9 + 2*d*n9 - 4*n2*n9)*
     j[p4, n1, 1 + n2, 0, 1, 0, -1, 0, 0, n9, 1, 2, 0, 1, 1])/
    (2*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((-32 + 20*d - 3*d^2 - 20*n2 + 7*d*n2 - 2*n2^2 - 4*n9 + d*n9 - 2*n2*n9)*
     j[p4, n1, 1 + n2, 0, 1, 0, -1, 0, 0, n9, 2, 0, 1, 1, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((-4 + d - 2*n2)*j[p4, n1, 1 + n2, 0, 1, 0, -1, 0, 0, n9, 2, 1, 0, 1, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((4 - d + 2*n2)*j[p4, n1, 1 + n2, 0, 1, 0, -1, 0, 0, n9, 2, 1, 1, 0, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((36*n9 - 21*d*n9 + 3*d^2*n9 + 22*n2*n9 - 7*d*n2*n9 + 2*n2^2*n9)*
     j[p4, n1, 1 + n2, 0, 1, 0, -1, 0, 0, 1 + n9, 1, 1, 1, 1, 0])/
    (2*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((-28 + 19*d - 3*d^2 - 18*n2 + 7*d*n2 - 2*n2^2 - 8*n9 + 2*d*n9 - 4*n2*n9)*
     j[p4, n1, 1 + n2, 0, 1, 0, 0, -1, 0, n9, 1, 0, 2, 1, 1])/
    (2*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((-28 + 19*d - 3*d^2 - 18*n2 + 7*d*n2 - 2*n2^2 - 8*n9 + 2*d*n9 - 4*n2*n9)*
     j[p4, n1, 1 + n2, 0, 1, 0, 0, -1, 0, n9, 1, 2, 0, 1, 1])/
    (2*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((36*n9 - 21*d*n9 + 3*d^2*n9 + 22*n2*n9 - 7*d*n2*n9 + 2*n2^2*n9)*
     j[p4, n1, 1 + n2, 0, 1, 0, 0, -1, 0, 1 + n9, 1, 1, 1, 1, 0])/
    (2*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((-28 + 19*d - 3*d^2 - 18*n2 + 7*d*n2 - 2*n2^2 - 8*n9 + 2*d*n9 - 4*n2*n9)*
     j[p4, n1, 1 + n2, 0, 1, 0, 0, 0, -1, n9, 1, 0, 2, 1, 1])/
    (2*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((32 - 20*d + 3*d^2 + 20*n2 - 7*d*n2 + 2*n2^2 + 4*n9 - d*n9 + 2*n2*n9)*
     j[p4, n1, 1 + n2, 0, 1, 0, 0, 0, -1, n9, 1, 1, 1, 2, 0])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((-28 + 19*d - 3*d^2 - 18*n2 + 7*d*n2 - 2*n2^2 - 8*n9 + 2*d*n9 - 4*n2*n9)*
     j[p4, n1, 1 + n2, 0, 1, 0, 0, 0, -1, n9, 1, 2, 0, 1, 1])/
    (2*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((36*n9 - 21*d*n9 + 3*d^2*n9 + 22*n2*n9 - 7*d*n2*n9 + 2*n2^2*n9)*
     j[p4, n1, 1 + n2, 0, 1, 0, 0, 0, -1, 1 + n9, 1, 1, 1, 1, 0])/
    (2*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((36 - 21*d + 3*d^2 + 22*n2 - 7*d*n2 + 2*n2^2)*j[p4, n1, 1 + n2, 0, 1, 0, 
      0, 0, 0, -1 + n9, 1, 1, 0, 1, 2])/(2*(-8 + 3*d - 2*n1 - 2*n2)*
     (-3 + d - n2)*(-1 + n9)) + 
   ((-116 + 105*d - 31*d^2 + 3*d^3 - 28*n1 + 19*d*n1 - 3*d^2*n1 - 106*n2 + 
      66*d*n2 - 10*d^2*n2 - 18*n1*n2 + 7*d*n1*n2 - 28*n2^2 + 9*d*n2^2 - 
      2*n1*n2^2 - 2*n2^3 - 28*n9 + 15*d*n9 - 2*d^2*n9 - 8*n1*n9 + 2*d*n1*n9 - 
      18*n2*n9 + 5*d*n2*n9 - 4*n1*n2*n9 - 2*n2^2*n9)*
     j[p4, n1, 1 + n2, 0, 1, 0, 0, 0, 0, -1 + n9, 1, 1, 1, 1, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((28 - 19*d + 3*d^2 + 18*n2 - 7*d*n2 + 2*n2^2 + 8*n9 - 2*d*n9 + 4*n2*n9)*
     j[p4, n1, 1 + n2, 0, 1, 0, 0, 0, 0, -1 + n9, 1, 2, 1, 1, 1])/
    (2*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((32 - 20*d + 3*d^2 + 20*n2 - 7*d*n2 + 2*n2^2 + 4*n9 - d*n9 + 2*n2*n9)*
     j[p4, n1, 1 + n2, 0, 1, 0, 0, 0, 0, -1 + n9, 2, 0, 1, 1, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((4 - d + 2*n2)*j[p4, n1, 1 + n2, 0, 1, 0, 0, 0, 0, -1 + n9, 2, 1, 0, 1, 
      1])/((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-4 + d - 2*n2)*j[p4, n1, 1 + n2, 0, 1, 0, 0, 0, 0, -1 + n9, 2, 1, 1, 0, 
      1])/((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((12 - 4*d + 2*n1 + 8*n2 - d*n2 + 2*n2^2)*j[p4, n1, 1 + n2, 0, 1, 0, 0, 0, 
      0, n9, 0, 1, 1, 1, 1])/((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((104 - 63*d + 9*d^2 + 74*n1 - 42*d*n1 + 6*d^2*n1 + 62*n2 - 21*d*n2 + 
      44*n1*n2 - 14*d*n1*n2 + 6*n2^2 + 4*n1*n2^2 + 40*n9 - 21*d*n9 + 
      3*d^2*n9 - 2*n1*n9 + 26*n2*n9 - 7*d*n2*n9 + 2*n2^2*n9)*
     j[p4, n1, 1 + n2, 0, 1, 0, 0, 0, 0, n9, 1, 0, 1, 1, 1])/
    (2*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((28 - 19*d + 3*d^2 + 18*n2 - 7*d*n2 + 2*n2^2 + 8*n9 - 2*d*n9 + 4*n2*n9)*
     j[p4, n1, 1 + n2, 0, 1, 0, 0, 0, 0, n9, 1, 1, 0, 1, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((-36 + 21*d - 3*d^2 - 22*n2 + 7*d*n2 - 2*n2^2)*j[p4, n1, 1 + n2, 0, 1, 0, 
      0, 0, 0, n9, 1, 1, 0, 1, 2])/(2*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*
     (-1 + n9)) + ((-36 + 21*d - 3*d^2 - 22*n2 + 7*d*n2 - 2*n2^2)*
     j[p4, n1, 1 + n2, 0, 1, 0, 0, 0, 0, n9, 1, 1, 0, 2, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((4 - d - 4*n1 + d*n1 + 2*n2 - 2*n1*n2)*j[p4, n1, 1 + n2, 0, 1, 0, 0, 0, 
      0, n9, 1, 1, 1, 0, 1])/((-3 + d - n2)*(8 - 3*d + 2*n1 + 2*n2)) + 
   ((-100 + 61*d - 9*d^2 - 62*n2 + 21*d*n2 - 6*n2^2 + 28*n9 - 19*d*n9 + 
      3*d^2*n9 + 18*n2*n9 - 7*d*n2*n9 + 2*n2^2*n9)*j[p4, n1, 1 + n2, 0, 1, 0, 
      0, 0, 0, n9, 1, 1, 1, 1, 0])/(2*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*
     (-1 + n9)) + ((4 - d + 2*n2)*j[p4, n1, 1 + n2, 0, 1, 0, 0, 0, 0, n9, 1, 
      1, 1, 1, 1])/(-3 + d - n2) + 
   ((32 - 20*d + 3*d^2 + 20*n2 - 7*d*n2 + 2*n2^2 + 4*n9 - d*n9 + 2*n2*n9)*
     j[p4, n1, 1 + n2, 0, 1, 0, 0, 0, 0, n9, 1, 1, 1, 2, 0])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((28 - 19*d + 3*d^2 + 18*n2 - 7*d*n2 + 2*n2^2 + 8*n9 - 2*d*n9 + 4*n2*n9)*
     j[p4, n1, 1 + n2, 0, 1, 0, 0, 0, 0, n9, 1, 1, 2, 1, 0])/
    (2*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((-36*n9 + 21*d*n9 - 3*d^2*n9 - 22*n2*n9 + 7*d*n2*n9 - 2*n2^2*n9)*
     j[p4, n1, 1 + n2, 0, 1, 0, 0, 0, 0, 1 + n9, 1, 0, 1, 1, 1])/
    (2*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((84 - 57*d + 9*d^2 + 54*n2 - 21*d*n2 + 6*n2^2 + 24*n9 - 6*d*n9 + 
      12*n2*n9)*j[p4, n1, 1 + n2, 0, 2, -1, 0, 0, 0, -1 + n9, 1, 1, 1, 1, 1])/
    (2*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((-34 + 21*d - 3*d^2 - n1 - 20*n2 + 7*d*n2 - 2*n2^2 - 2*n9 + n1*n9 - 
      2*n2*n9)*j[p4, n1, 1 + n2, 0, 2, -1, 0, 0, 0, n9, 0, 1, 1, 1, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((34 - 21*d + 3*d^2 + n1 + 20*n2 - 7*d*n2 + 2*n2^2 + 2*n9 - n1*n9 + 
      2*n2*n9)*j[p4, n1, 1 + n2, 0, 2, -1, 0, 0, 0, n9, 1, 0, 1, 1, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((28 - 19*d + 3*d^2 + 18*n2 - 7*d*n2 + 2*n2^2 + 8*n9 - 2*d*n9 + 4*n2*n9)*
     j[p4, n1, 1 + n2, 0, 2, 0, -1, 0, 0, -1 + n9, 1, 1, 1, 1, 1])/
    (2*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((-30 + 19*d - 3*d^2 + n1 - 20*n2 + 7*d*n2 - 2*n2^2 - 6*n9 + 2*d*n9 - 
      n1*n9 - 2*n2*n9)*j[p4, n1, 1 + n2, 0, 2, 0, -1, 0, 0, n9, 0, 1, 1, 1, 
      1])/((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((30 - 19*d + 3*d^2 - n1 + 20*n2 - 7*d*n2 + 2*n2^2 + 6*n9 - 2*d*n9 + 
      n1*n9 + 2*n2*n9)*j[p4, n1, 1 + n2, 0, 2, 0, -1, 0, 0, n9, 1, 0, 1, 1, 
      1])/((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((-84 + 57*d - 9*d^2 - 54*n2 + 21*d*n2 - 6*n2^2 - 24*n9 + 6*d*n9 - 
      12*n2*n9)*j[p4, n1, 1 + n2, 0, 2, 0, 0, -1, 0, -1 + n9, 1, 1, 1, 1, 1])/
    (2*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((34 - 21*d + 3*d^2 + n1 + 20*n2 - 7*d*n2 + 2*n2^2 + 2*n9 - n1*n9 + 
      2*n2*n9)*j[p4, n1, 1 + n2, 0, 2, 0, 0, -1, 0, n9, 0, 1, 1, 1, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((-34 + 21*d - 3*d^2 - n1 - 20*n2 + 7*d*n2 - 2*n2^2 - 2*n9 + n1*n9 - 
      2*n2*n9)*j[p4, n1, 1 + n2, 0, 2, 0, 0, -1, 0, n9, 1, 0, 1, 1, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((-4 + d - 2*n2)*j[p4, n1, 1 + n2, 0, 2, 0, 0, -1, 0, n9, 1, 1, 1, 1, 0])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-28 + 19*d - 3*d^2 - 18*n2 + 7*d*n2 - 2*n2^2 - 8*n9 + 2*d*n9 - 4*n2*n9)*
     j[p4, n1, 1 + n2, 0, 2, 0, 0, 0, -1, -1 + n9, 1, 1, 1, 1, 1])/
    (2*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((30 - 19*d + 3*d^2 - n1 + 20*n2 - 7*d*n2 + 2*n2^2 + 6*n9 - 2*d*n9 + 
      n1*n9 + 2*n2*n9)*j[p4, n1, 1 + n2, 0, 2, 0, 0, 0, -1, n9, 0, 1, 1, 1, 
      1])/((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((-30 + 19*d - 3*d^2 + n1 - 20*n2 + 7*d*n2 - 2*n2^2 - 6*n9 + 2*d*n9 - 
      n1*n9 - 2*n2*n9)*j[p4, n1, 1 + n2, 0, 2, 0, 0, 0, -1, n9, 1, 0, 1, 1, 
      1])/((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((-4 + d - 2*n2)*j[p4, n1, 1 + n2, 0, 2, 0, 0, 0, -1, n9, 1, 1, 1, 1, 0])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((44 - 23*d + 3*d^2 + 26*n2 - 7*d*n2 + 2*n2^2 - 8*n9 + 2*d*n9 - 4*n2*n9)*
     j[p4, n1, 1 + n2, 0, 2, 0, 0, 0, 0, -1 + n9, 1, 1, 1, 1, 0])/
    (2*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((4 - d + 6*n2 - d*n2 + 2*n2^2)*j[p4, n1, 2 + n2, -1, 1, 0, 0, 0, 0, 
      -1 + n9, 1, 1, 1, 1, 1])/((3 - d + n2)*(8 - 3*d + 2*n1 + 2*n2)) + 
   ((-4 + d - 6*n2 + d*n2 - 2*n2^2)*j[p4, n1, 2 + n2, -1, 1, 0, 0, 0, 0, n9, 
      0, 1, 1, 1, 1])/((3 - d + n2)*(8 - 3*d + 2*n1 + 2*n2)) + 
   ((34 - 20*d + 3*d^2 - n1 + 56*n2 - 27*d*n2 + 3*d^2*n2 - n1*n2 + 24*n2^2 - 
      7*d*n2^2 + 2*n2^3 + 2*n9 - d*n9 + n1*n9 + 2*n2*n9 - d*n2*n9 + n1*n2*n9)*
     j[p4, n1, 2 + n2, 0, 1, -1, 0, 0, 0, n9, 0, 1, 1, 1, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((4 - d + 6*n2 - d*n2 + 2*n2^2)*j[p4, n1, 2 + n2, 0, 1, -1, 0, 0, 0, n9, 
      1, 1, 0, 1, 1])/((3 - d + n2)*(8 - 3*d + 2*n1 + 2*n2)) + 
   ((-8 + 2*d - 12*n2 + 2*d*n2 - 4*n2^2)*j[p4, n1, 2 + n2, 0, 1, -1, 0, 0, 0, 
      n9, 1, 1, 1, 0, 1])/((3 - d + n2)*(8 - 3*d + 2*n1 + 2*n2)) + 
   ((-36 + 21*d - 3*d^2 - 58*n2 + 28*d*n2 - 3*d^2*n2 - 24*n2^2 + 7*d*n2^2 - 
      2*n2^3)*j[p4, n1, 2 + n2, 0, 1, -1, 0, 0, 0, n9, 1, 1, 1, 1, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((-26 + 18*d - 3*d^2 + n1 - 44*n2 + 25*d*n2 - 3*d^2*n2 + n1*n2 - 20*n2^2 + 
      7*d*n2^2 - 2*n2^3 - 10*n9 + 3*d*n9 - n1*n9 - 14*n2*n9 + 3*d*n2*n9 - 
      n1*n2*n9 - 4*n2^2*n9)*j[p4, n1, 2 + n2, 0, 1, 0, -1, 0, 0, n9, 0, 1, 1, 
      1, 1])/((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((-4 + d - 6*n2 + d*n2 - 2*n2^2)*j[p4, n1, 2 + n2, 0, 1, 0, -1, 0, 0, n9, 
      1, 1, 0, 1, 1])/((3 - d + n2)*(8 - 3*d + 2*n1 + 2*n2)) + 
   ((8 - 2*d + 12*n2 - 2*d*n2 + 4*n2^2)*j[p4, n1, 2 + n2, 0, 1, 0, -1, 0, 0, 
      n9, 1, 1, 1, 0, 1])/((3 - d + n2)*(8 - 3*d + 2*n1 + 2*n2)) + 
   ((36 - 21*d + 3*d^2 + 58*n2 - 28*d*n2 + 3*d^2*n2 + 24*n2^2 - 7*d*n2^2 + 
      2*n2^3)*j[p4, n1, 2 + n2, 0, 1, 0, -1, 0, 0, n9, 1, 1, 1, 1, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((-28 + 19*d - 3*d^2 - 46*n2 + 26*d*n2 - 3*d^2*n2 - 20*n2^2 + 7*d*n2^2 - 
      2*n2^3 - 8*n9 + 2*d*n9 - 12*n2*n9 + 2*d*n2*n9 - 4*n2^2*n9)*
     j[p4, n1, 2 + n2, 0, 1, 0, 0, -1, 0, -1 + n9, 1, 1, 1, 1, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((38 - 22*d + 3*d^2 + n1 + 60*n2 - 29*d*n2 + 3*d^2*n2 + n1*n2 + 24*n2^2 - 
      7*d*n2^2 + 2*n2^3 - 2*n9 + d*n9 - n1*n9 - 2*n2*n9 + d*n2*n9 - n1*n2*n9)*
     j[p4, n1, 2 + n2, 0, 1, 0, 0, -1, 0, n9, 0, 1, 1, 1, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((-36 + 21*d - 3*d^2 - 58*n2 + 28*d*n2 - 3*d^2*n2 - 24*n2^2 + 7*d*n2^2 - 
      2*n2^3)*j[p4, n1, 2 + n2, 0, 1, 0, 0, -1, 0, n9, 1, 1, 1, 1, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((36 - 21*d + 3*d^2 + 58*n2 - 28*d*n2 + 3*d^2*n2 + 24*n2^2 - 7*d*n2^2 + 
      2*n2^3)*j[p4, n1, 2 + n2, 0, 1, 0, 0, 0, -1, -1 + n9, 1, 1, 1, 1, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((-38 + 22*d - 3*d^2 - n1 - 60*n2 + 29*d*n2 - 3*d^2*n2 - n1*n2 - 24*n2^2 + 
      7*d*n2^2 - 2*n2^3 + 2*n9 - d*n9 + n1*n9 + 2*n2*n9 - d*n2*n9 + n1*n2*n9)*
     j[p4, n1, 2 + n2, 0, 1, 0, 0, 0, -1, n9, 0, 1, 1, 1, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((36 - 21*d + 3*d^2 + 58*n2 - 28*d*n2 + 3*d^2*n2 + 24*n2^2 - 7*d*n2^2 + 
      2*n2^3)*j[p4, n1, 2 + n2, 0, 1, 0, 0, 0, -1, n9, 1, 1, 1, 1, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((4 - d + 6*n2 - d*n2 + 2*n2^2)*j[p4, n1, 2 + n2, 0, 1, 0, 0, 0, 0, 
      -1 + n9, 1, 1, 0, 1, 1])/((3 - d + n2)*(8 - 3*d + 2*n1 + 2*n2)) + 
   ((-8 + 2*d - 12*n2 + 2*d*n2 - 4*n2^2)*j[p4, n1, 2 + n2, 0, 1, 0, 0, 0, 0, 
      -1 + n9, 1, 1, 1, 0, 1])/((3 - d + n2)*(8 - 3*d + 2*n1 + 2*n2)) + 
   ((-32*n1 + 20*d*n1 - 3*d^2*n1 - 20*n1*n2 + 7*d*n1*n2 - 2*n1*n2^2 - 
      4*n1*n9 + d*n1*n9 - 2*n1*n2*n9)*j[p4, 1 + n1, 1 + n2, 0, 1, -1, 0, 0, 
      0, n9, 1, 0, 1, 1, 1])/((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*
     (-1 + n9)) + ((4*n1 - d*n1 + 2*n1*n2)*j[p4, 1 + n1, 1 + n2, 0, 1, -1, 0, 
      0, 0, n9, 1, 1, 1, 0, 1])/((-3 + d - n2)*(8 - 3*d + 2*n1 + 2*n2)) + 
   ((-36*n1 + 21*d*n1 - 3*d^2*n1 - 22*n1*n2 + 7*d*n1*n2 - 2*n1*n2^2)*
     j[p4, 1 + n1, 1 + n2, 0, 1, -1, 0, 0, 0, n9, 1, 1, 1, 1, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((32*n1 - 20*d*n1 + 3*d^2*n1 + 20*n1*n2 - 7*d*n1*n2 + 2*n1*n2^2 + 
      4*n1*n9 - d*n1*n9 + 2*n1*n2*n9)*j[p4, 1 + n1, 1 + n2, 0, 1, 0, 0, 0, 
      -1, -1 + n9, 1, 1, 1, 1, 1])/((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*
     (-1 + n9)) + ((36*n1 - 21*d*n1 + 3*d^2*n1 + 22*n1*n2 - 7*d*n1*n2 + 
      2*n1*n2^2)*j[p4, 1 + n1, 1 + n2, 0, 1, 0, 0, 0, -1, n9, 1, 1, 1, 1, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)) + 
   ((32*n1 - 20*d*n1 + 3*d^2*n1 + 20*n1*n2 - 7*d*n1*n2 + 2*n1*n2^2 + 
      4*n1*n9 - d*n1*n9 + 2*n1*n2*n9)*j[p4, 1 + n1, 1 + n2, 0, 1, 0, 0, 0, 0, 
      -1 + n9, 1, 1, 1, 1, 1])/((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*
     (-1 + n9)) + ((-36*n1 + 21*d*n1 - 3*d^2*n1 - 22*n1*n2 + 7*d*n1*n2 - 
      2*n1*n2^2)*j[p4, 1 + n1, 1 + n2, 0, 1, 0, 0, 0, 0, n9, 1, 0, 1, 1, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-1 + n9)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n12 == 1 && n13 == 1 && n14 == 1 && n3 == 0 && n4 == 1 && 
    n5 == 0 && n6 == 0 && n7 == 0 && n8 == 0 && n9 == 1 && 
     !(n11 == 1 || n2 == 0) -> 
  ((-6 + 2*d - n1 - 2*n2)*j[p4, -1 + n1, 1 + n2, 0, 1, 0, 0, 0, 0, 0, 2, n11, 
      1, 1, 1])/((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-196 + 212*d - 76*d^2 + 9*d^3 - 110*n1 + 74*d*n1 - 12*d^2*n1 - 8*n1^2 + 
      d*n1^2 + 2*n1^3 - 164*n2 + 120*d*n2 - 22*d^2*n2 - 72*n1*n2 + 
      26*d*n1*n2 - 6*n1^2*n2 - 44*n2^2 + 16*d*n2^2 - 10*n1*n2^2 - 4*n2^3)*
     j[p4, -1 + n1, 1 + n2, 0, 1, 0, 0, 0, 0, 1, 1, n11, 1, 1, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-5 + 2*d - 2*n1 - n2)) + 
   ((-2 + n1 - 2*n2)*j[p4, -1 + n1, 1 + n2, 0, 1, 0, 0, 0, 0, 1, 1, n11, 1, 
      2, 0])/((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-6 + 2*d - n1 - 2*n2)*j[p4, -1 + n1, 1 + n2, 0, 1, 0, 0, 0, 0, 1, 2, 
      -1 + n11, 1, 1, 1])/((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-2 + d - n1)*j[p4, -1 + n1, 1 + n2, 0, 1, 0, 0, 0, 0, 1, 2, n11, 0, 1, 
      1])/((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((2 - d + n1)*j[p4, -1 + n1, 1 + n2, 0, 1, 0, 0, 0, 0, 1, 2, n11, 1, 0, 
      1])/((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((16 - 9*d + d^2 + 2*n1 + d*n1 - 2*n1^2 + 14*n2 - 5*d*n2 + 4*n1*n2 + 
      2*n2^2)*j[p4, -1 + n1, 1 + n2, 0, 2, 0, 0, 0, 0, 1, 1, n11, 1, 1, 0])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-5 + 2*d - 2*n1 - n2)) + 
   ((-4 + 2*d - 2*n1 - 4*n2 + 2*d*n2 - 2*n1*n2)*j[p4, -1 + n1, 2 + n2, -1, 1, 
      0, 0, 0, 0, 1, 1, n11, 1, 1, 1])/((-3 + d - n2)*
     (-5 + 2*d - 2*n1 - n2)) + ((-4 + 2*d - 2*n1 - 4*n2 + 2*d*n2 - 2*n1*n2)*
     j[p4, -1 + n1, 2 + n2, 0, 1, -1, 0, 0, 0, 1, 1, n11, 1, 1, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((12 - 4*d + 2*n1 + 16*n2 - 4*d*n2 + 2*n1*n2 + 4*n2^2)*
     j[p4, -1 + n1, 2 + n2, 0, 1, 0, -1, 0, 0, 1, 1, n11, 1, 1, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-92 + 72*d - 14*d^2 - 58*n1 + 22*d*n1 - 8*n1^2 - 132*n2 + 88*d*n2 - 
      14*d^2*n2 - 72*n1*n2 + 22*d*n1*n2 - 8*n1^2*n2 - 44*n2^2 + 16*d*n2^2 - 
      14*n1*n2^2 - 4*n2^3)*j[p4, -1 + n1, 2 + n2, 0, 1, 0, 0, -1, 0, 1, 1, 
      n11, 1, 1, 1])/((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*
     (-5 + 2*d - 2*n1 - n2)) + ((4 - 2*d + 2*n1 + 4*n2 - 2*d*n2 + 2*n1*n2)*
     j[p4, -1 + n1, 2 + n2, 0, 1, 0, 0, 0, -1, 1, 1, n11, 1, 1, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-5 + 2*d - 2*n1 - n2)) + 
   ((36 - 27*d + 5*d^2 + 20*n1 - 7*d*n1 + 2*n1^2 + 54*n2 - 34*d*n2 + 
      5*d^2*n2 + 26*n1*n2 - 7*d*n1*n2 + 2*n1^2*n2 + 20*n2^2 - 7*d*n2^2 + 
      6*n1*n2^2 + 2*n2^3)*j[p4, -1 + n1, 2 + n2, 0, 1, 0, 0, 0, 0, 1, 1, n11, 
      0, 1, 1])/((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*
     (-5 + 2*d - 2*n1 - n2)) + 
   ((-72 + 54*d - 10*d^2 - 40*n1 + 14*d*n1 - 4*n1^2 - 108*n2 + 68*d*n2 - 
      10*d^2*n2 - 52*n1*n2 + 14*d*n1*n2 - 4*n1^2*n2 - 40*n2^2 + 14*d*n2^2 - 
      12*n1*n2^2 - 4*n2^3)*j[p4, -1 + n1, 2 + n2, 0, 1, 0, 0, 0, 0, 1, 1, 
      n11, 1, 0, 1])/((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*
     (-5 + 2*d - 2*n1 - n2)) + 
   ((28 - 19*d + 3*d^2 + 8*n11 - 2*d*n11 + 18*n2 - 7*d*n2 + 4*n11*n2 + 
      2*n2^2)*j[p4, n1, n2, 0, 1, 0, 0, 0, 0, 0, 1, n11, 1, 1, 2])/
    (2*(-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((28 - 19*d + 3*d^2 + 8*n11 - 2*d*n11 + 18*n2 - 7*d*n2 + 4*n11*n2 + 
      2*n2^2)*j[p4, n1, n2, 0, 1, 0, 0, 0, 0, 0, 2, n11, 1, 1, 1])/
    ((-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-36*n11 + 21*d*n11 - 3*d^2*n11 - 22*n11*n2 + 7*d*n11*n2 - 2*n11*n2^2)*
     j[p4, n1, n2, 0, 1, 0, 0, 0, 0, 1, 1, 1 + n11, 0, 1, 1])/
    (2*(-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((176 - 178*d + 58*d^2 - 6*d^3 + 76*n1 - 45*d*n1 + 6*d^2*n1 + 2*n1^2 + 
      4*n11 + d*n11 - d^2*n11 - 4*n1*n11 + 3*d*n1*n11 - 2*n1^2*n11 + 136*n2 - 
      97*d*n2 + 17*d^2*n2 + 42*n1*n2 - 14*d*n1*n2 + 10*n11*n2 - 3*d*n11*n2 + 
      2*n1*n11*n2 + 30*n2^2 - 11*d*n2^2 + 4*n1*n2^2 + 2*n11*n2^2 + 2*n2^3)*
     j[p4, n1, n2, 0, 1, 0, 0, 0, 0, 1, 2, -1 + n11, 1, 1, 1])/
    ((-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*
     (-5 + 2*d - 2*n1 - n2)) + 
   ((2 - d + n1)*j[p4, n1, n2, 0, 1, 0, 0, 0, 0, 1, 2, n11, 0, 1, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-2 + d - n1)*j[p4, n1, n2, 0, 1, 0, 0, 0, 0, 1, 2, n11, 1, 0, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((28 - 19*d + 3*d^2 + 8*n11 - 2*d*n11 + 18*n2 - 7*d*n2 + 4*n11*n2 + 
      2*n2^2)*j[p4, n1, n2, 0, 1, 0, 0, 0, 0, 2, 1, n11, 1, 1, 0])/
    (2*(-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-16 + 9*d - d^2 - 2*n1 - d*n1 + 2*n1^2 - 14*n2 + 5*d*n2 - 4*n1*n2 - 
      2*n2^2)*j[p4, n1, n2, 0, 2, 0, 0, 0, 0, 1, 1, n11, 1, 1, 0])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-5 + 2*d - 2*n1 - n2)) + 
   ((34 - 21*d + 3*d^2 + n1 + 2*n11 - n1*n11 + 20*n2 - 7*d*n2 + 2*n11*n2 + 
      2*n2^2)*j[p4, n1, 1 + n2, -1, 1, 0, 0, 0, 0, 0, 2, n11, 1, 1, 1])/
    ((-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((146 - 156*d + 54*d^2 - 6*d^3 + 59*n1 - 39*d*n1 + 6*d^2*n1 + 34*n11 - 
      21*d*n11 + 3*d^2*n11 + 13*n1*n11 - 3*d*n1*n11 + 120*n2 - 91*d*n2 + 
      17*d^2*n2 + 37*n1*n2 - 14*d*n1*n2 + 26*n11*n2 - 9*d*n11*n2 + 
      7*n1*n11*n2 + 28*n2^2 - 11*d*n2^2 + 4*n1*n2^2 + 4*n11*n2^2 + 2*n2^3)*
     j[p4, n1, 1 + n2, -1, 1, 0, 0, 0, 0, 1, 2, -1 + n11, 1, 1, 1])/
    ((-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*
     (-5 + 2*d - 2*n1 - n2)) + 
   ((-16 + 9*d - d^2 - 2*n1 - d*n1 + 2*n1^2 - 14*n2 + 5*d*n2 - 4*n1*n2 - 
      2*n2^2)*j[p4, n1, 1 + n2, -1, 2, 0, 0, 0, 0, 0, 1, n11, 1, 1, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-5 + 2*d - 2*n1 - n2)) + 
   ((16 - 9*d + d^2 + 2*n1 + d*n1 - 2*n1^2 + 14*n2 - 5*d*n2 + 4*n1*n2 + 
      2*n2^2)*j[p4, n1, 1 + n2, -1, 2, 0, 0, 0, 0, 1, 0, n11, 1, 1, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-5 + 2*d - 2*n1 - n2)) + 
   ((212 - 195*d + 59*d^2 - 6*d^3 + 76*n1 - 40*d*n1 + 6*d^2*n1 - 4*n1^2 - 
      32*n11 + 18*d*n11 - 2*d^2*n11 - 4*n1*n11 - 2*d*n1*n11 + 4*n1^2*n11 + 
      174*n2 - 110*d*n2 + 17*d^2*n2 + 52*n1*n2 - 14*d*n1*n2 - 28*n11*n2 + 
      10*d*n11*n2 - 8*n1*n11*n2 + 36*n2^2 - 11*d*n2^2 + 4*n1*n2^2 - 
      4*n11*n2^2 + 2*n2^3)*j[p4, n1, 1 + n2, -1, 2, 0, 0, 0, 0, 1, 1, 
      -1 + n11, 1, 1, 1])/(2*(-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*
     (-3 + d - n2)*(-5 + 2*d - 2*n1 - n2)) + 
   ((36 - 21*d + 3*d^2 + 22*n2 - 7*d*n2 + 2*n2^2)*j[p4, n1, 1 + n2, 0, 0, 0, 
      0, 0, 0, 1, 1, -1 + n11, 2, 1, 1])/(2*(-1 + n11)*
     (-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((36 - 21*d + 3*d^2 + 22*n2 - 7*d*n2 + 2*n2^2)*j[p4, n1, 1 + n2, 0, 0, 0, 
      0, 0, 0, 1, 1, n11, 1, 1, 1])/(2*(-8 + 3*d - 2*n1 - 2*n2)*
     (-3 + d - n2)) + ((28 - 19*d + 3*d^2 + 8*n11 - 2*d*n11 + 18*n2 - 
      7*d*n2 + 4*n11*n2 + 2*n2^2)*j[p4, n1, 1 + n2, 0, 0, 0, 0, 0, 0, 1, 1, 
      n11, 1, 1, 2])/(2*(-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-36 + 21*d - 3*d^2 - 22*n2 + 7*d*n2 - 2*n2^2)*j[p4, n1, 1 + n2, 0, 0, 0, 
      0, 0, 0, 1, 1, n11, 2, 1, 1])/(2*(-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*
     (-3 + d - n2)) + ((-36*n11 + 21*d*n11 - 3*d^2*n11 - 22*n11*n2 + 
      7*d*n11*n2 - 2*n11*n2^2)*j[p4, n1, 1 + n2, 0, 0, 0, 0, 0, 0, 1, 1, 
      1 + n11, 1, 1, 1])/(2*(-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*
     (-3 + d - n2)) + ((28 - 19*d + 3*d^2 + 8*n11 - 2*d*n11 + 18*n2 - 
      7*d*n2 + 4*n11*n2 + 2*n2^2)*j[p4, n1, 1 + n2, 0, 0, 0, 0, 0, 0, 2, 1, 
      n11, 1, 1, 1])/(2*(-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-28 + 19*d - 3*d^2 - 8*n11 + 2*d*n11 - 18*n2 + 7*d*n2 - 4*n11*n2 - 
      2*n2^2)*j[p4, n1, 1 + n2, 0, 1, -1, 0, 0, 0, 0, 1, n11, 1, 1, 2])/
    (2*(-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((32 - 20*d + 3*d^2 + 4*n11 - d*n11 + 20*n2 - 7*d*n2 + 2*n11*n2 + 2*n2^2)*
     j[p4, n1, 1 + n2, 0, 1, -1, 0, 0, 0, 1, 1, n11, 0, 2, 1])/
    ((-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((36*n11 - 21*d*n11 + 3*d^2*n11 + 22*n11*n2 - 7*d*n11*n2 + 2*n11*n2^2)*
     j[p4, n1, 1 + n2, 0, 1, -1, 0, 0, 0, 1, 1, 1 + n11, 0, 1, 1])/
    (2*(-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-28 + 19*d - 3*d^2 - 8*n11 + 2*d*n11 - 18*n2 + 7*d*n2 - 4*n11*n2 - 
      2*n2^2)*j[p4, n1, 1 + n2, 0, 1, -1, 0, 0, 0, 2, 1, n11, 1, 1, 0])/
    (2*(-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-28 + 19*d - 3*d^2 - 8*n11 + 2*d*n11 - 18*n2 + 7*d*n2 - 4*n11*n2 - 
      2*n2^2)*j[p4, n1, 1 + n2, 0, 1, 0, -1, 0, 0, 0, 1, n11, 1, 1, 2])/
    (2*(-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((36*n11 - 21*d*n11 + 3*d^2*n11 + 22*n11*n2 - 7*d*n11*n2 + 2*n11*n2^2)*
     j[p4, n1, 1 + n2, 0, 1, 0, -1, 0, 0, 1, 1, 1 + n11, 0, 1, 1])/
    (2*(-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((32 - 20*d + 3*d^2 + 4*n11 - d*n11 + 20*n2 - 7*d*n2 + 2*n11*n2 + 2*n2^2)*
     j[p4, n1, 1 + n2, 0, 1, 0, -1, 0, 0, 1, 2, -1 + n11, 1, 1, 1])/
    ((-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((34 - 21*d + 3*d^2 + n1 + 2*n11 - n1*n11 + 20*n2 - 7*d*n2 + 2*n11*n2 + 
      2*n2^2)*j[p4, n1, 1 + n2, 0, 1, 0, -1, 0, 0, 1, 2, n11, 0, 1, 1])/
    ((-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-34 + 21*d - 3*d^2 - n1 - 2*n11 + n1*n11 - 20*n2 + 7*d*n2 - 2*n11*n2 - 
      2*n2^2)*j[p4, n1, 1 + n2, 0, 1, 0, -1, 0, 0, 1, 2, n11, 1, 0, 1])/
    ((-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-28 + 19*d - 3*d^2 - 8*n11 + 2*d*n11 - 18*n2 + 7*d*n2 - 4*n11*n2 - 
      2*n2^2)*j[p4, n1, 1 + n2, 0, 1, 0, -1, 0, 0, 2, 1, n11, 1, 1, 0])/
    (2*(-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-28 + 19*d - 3*d^2 - 8*n11 + 2*d*n11 - 18*n2 + 7*d*n2 - 4*n11*n2 - 
      2*n2^2)*j[p4, n1, 1 + n2, 0, 1, 0, 0, -1, 0, 0, 1, n11, 1, 1, 2])/
    (2*(-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-66 + 41*d - 6*d^2 - n1 - 6*n11 + d*n11 + n1*n11 - 40*n2 + 14*d*n2 - 
      4*n11*n2 - 4*n2^2)*j[p4, n1, 1 + n2, 0, 1, 0, 0, -1, 0, 0, 2, n11, 1, 
      1, 1])/((-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((36*n11 - 21*d*n11 + 3*d^2*n11 + 22*n11*n2 - 7*d*n11*n2 + 2*n11*n2^2)*
     j[p4, n1, 1 + n2, 0, 1, 0, 0, -1, 0, 1, 1, 1 + n11, 0, 1, 1])/
    (2*(-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-146 + 156*d - 54*d^2 + 6*d^3 - 59*n1 + 39*d*n1 - 6*d^2*n1 - 34*n11 + 
      21*d*n11 - 3*d^2*n11 - 13*n1*n11 + 3*d*n1*n11 - 120*n2 + 91*d*n2 - 
      17*d^2*n2 - 37*n1*n2 + 14*d*n1*n2 - 26*n11*n2 + 9*d*n11*n2 - 
      7*n1*n11*n2 - 28*n2^2 + 11*d*n2^2 - 4*n1*n2^2 - 4*n11*n2^2 - 2*n2^3)*
     j[p4, n1, 1 + n2, 0, 1, 0, 0, -1, 0, 1, 2, -1 + n11, 1, 1, 1])/
    ((-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*
     (-5 + 2*d - 2*n1 - n2)) + 
   ((146 - 156*d + 54*d^2 - 6*d^3 + 59*n1 - 39*d*n1 + 6*d^2*n1 + 34*n11 - 
      21*d*n11 + 3*d^2*n11 + 13*n1*n11 - 3*d*n1*n11 + 120*n2 - 91*d*n2 + 
      17*d^2*n2 + 37*n1*n2 - 14*d*n1*n2 + 26*n11*n2 - 9*d*n11*n2 + 
      7*n1*n11*n2 + 28*n2^2 - 11*d*n2^2 + 4*n1*n2^2 + 4*n11*n2^2 + 2*n2^3)*
     j[p4, n1, 1 + n2, 0, 1, 0, 0, -1, 0, 1, 2, n11, 0, 1, 1])/
    ((-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*
     (-5 + 2*d - 2*n1 - n2)) + 
   ((-146 + 156*d - 54*d^2 + 6*d^3 - 59*n1 + 39*d*n1 - 6*d^2*n1 - 34*n11 + 
      21*d*n11 - 3*d^2*n11 - 13*n1*n11 + 3*d*n1*n11 - 120*n2 + 91*d*n2 - 
      17*d^2*n2 - 37*n1*n2 + 14*d*n1*n2 - 26*n11*n2 + 9*d*n11*n2 - 
      7*n1*n11*n2 - 28*n2^2 + 11*d*n2^2 - 4*n1*n2^2 - 4*n11*n2^2 - 2*n2^3)*
     j[p4, n1, 1 + n2, 0, 1, 0, 0, -1, 0, 1, 2, n11, 1, 0, 1])/
    ((-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*
     (-5 + 2*d - 2*n1 - n2)) + 
   ((-28 + 19*d - 3*d^2 - 8*n11 + 2*d*n11 - 18*n2 + 7*d*n2 - 4*n11*n2 - 
      2*n2^2)*j[p4, n1, 1 + n2, 0, 1, 0, 0, -1, 0, 2, 1, n11, 1, 1, 0])/
    (2*(-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-28 + 19*d - 3*d^2 - 8*n11 + 2*d*n11 - 18*n2 + 7*d*n2 - 4*n11*n2 - 
      2*n2^2)*j[p4, n1, 1 + n2, 0, 1, 0, 0, 0, -1, 0, 1, n11, 1, 1, 2])/
    (2*(-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-34 + 21*d - 3*d^2 - n1 - 2*n11 + n1*n11 - 20*n2 + 7*d*n2 - 2*n11*n2 - 
      2*n2^2)*j[p4, n1, 1 + n2, 0, 1, 0, 0, 0, -1, 0, 2, n11, 1, 1, 1])/
    ((-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-32 + 20*d - 3*d^2 - 4*n11 + d*n11 - 20*n2 + 7*d*n2 - 2*n11*n2 - 2*n2^2)*
     j[p4, n1, 1 + n2, 0, 1, 0, 0, 0, -1, 1, 1, n11, 1, 2, 0])/
    ((-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((36*n11 - 21*d*n11 + 3*d^2*n11 + 22*n11*n2 - 7*d*n11*n2 + 2*n11*n2^2)*
     j[p4, n1, 1 + n2, 0, 1, 0, 0, 0, -1, 1, 1, 1 + n11, 0, 1, 1])/
    (2*(-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-146 + 156*d - 54*d^2 + 6*d^3 - 59*n1 + 39*d*n1 - 6*d^2*n1 - 34*n11 + 
      21*d*n11 - 3*d^2*n11 - 13*n1*n11 + 3*d*n1*n11 - 120*n2 + 91*d*n2 - 
      17*d^2*n2 - 37*n1*n2 + 14*d*n1*n2 - 26*n11*n2 + 9*d*n11*n2 - 
      7*n1*n11*n2 - 28*n2^2 + 11*d*n2^2 - 4*n1*n2^2 - 4*n11*n2^2 - 2*n2^3)*
     j[p4, n1, 1 + n2, 0, 1, 0, 0, 0, -1, 1, 2, -1 + n11, 1, 1, 1])/
    ((-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*
     (-5 + 2*d - 2*n1 - n2)) + 
   ((-28 + 19*d - 3*d^2 - 8*n11 + 2*d*n11 - 18*n2 + 7*d*n2 - 4*n11*n2 - 
      2*n2^2)*j[p4, n1, 1 + n2, 0, 1, 0, 0, 0, -1, 2, 1, n11, 1, 1, 0])/
    (2*(-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((36 - 21*d + 3*d^2 + 4*n1 - 2*n1^2 + 36*n11 - 21*d*n11 + 3*d^2*n11 - 
      4*n1*n11 + 2*n1^2*n11 + 22*n2 - 7*d*n2 + 4*n1*n2 + 22*n11*n2 - 
      7*d*n11*n2 - 4*n1*n11*n2 + 2*n2^2 + 2*n11*n2^2)*
     j[p4, n1, 1 + n2, 0, 1, 0, 0, 0, 0, 0, 1, n11, 1, 1, 1])/
    (2*(-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-36*n11 + 21*d*n11 - 3*d^2*n11 - 22*n11*n2 + 7*d*n11*n2 - 2*n11*n2^2)*
     j[p4, n1, 1 + n2, 0, 1, 0, 0, 0, 0, 0, 1, 1 + n11, 1, 1, 1])/
    (2*(-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-34 + 21*d - 3*d^2 - n1 - 2*n11 + n1*n11 - 20*n2 + 7*d*n2 - 2*n11*n2 - 
      2*n2^2)*j[p4, n1, 1 + n2, 0, 1, 0, 0, 0, 0, 0, 2, n11, 1, 1, 1])/
    ((-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-56 + 40*d - 7*d^2 - 34*n1 + 14*d*n1 - d^2*n1 - 5*n1^2 + d*n1^2 - 
      52*n2 + 25*d*n2 - 2*d^2*n2 - 20*n1*n2 + 3*d*n1*n2 - n1^2*n2 - 18*n2^2 + 
      5*d*n2^2 - 4*n1*n2^2 - 2*n2^3)*j[p4, n1, 1 + n2, 0, 1, 0, 0, 0, 0, 1, 
      0, n11, 1, 1, 1])/((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*
     (-5 + 2*d - 2*n1 - n2)) + 
   ((36 - 27*d + 5*d^2 + 26*n1 - 12*d*n1 + d^2*n1 + 5*n1^2 - d*n1^2 + 18*n2 - 
      7*d*n2 + 8*n1*n2 - d*n1*n2 + n1^2*n2 + 2*n2^2)*
     j[p4, n1, 1 + n2, 0, 1, 0, 0, 0, 0, 1, 1, -1 + n11, 1, 1, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-5 + 2*d - 2*n1 - n2)) + 
   ((36 - 21*d + 3*d^2 + 22*n2 - 7*d*n2 + 2*n2^2)*j[p4, n1, 1 + n2, 0, 1, 0, 
      0, 0, 0, 1, 1, -1 + n11, 2, 1, 0])/(2*(-1 + n11)*
     (-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((832 - 843*d + 279*d^2 - 30*d^3 + 334*n1 - 204*d*n1 + 30*d^2*n1 - 
      112*n11 + 135*d*n11 - 51*d^2*n11 + 6*d^3*n11 - 46*n1*n11 + 
      36*d*n1*n11 - 6*d^2*n1*n11 + 710*n2 - 510*d*n2 + 91*d^2*n2 + 
      230*n1*n2 - 80*d*n1*n2 + 4*n1^2*n2 - 126*n11*n2 + 110*d*n11*n2 - 
      23*d^2*n11*n2 - 54*n1*n11*n2 + 24*d*n1*n11*n2 - 4*n1^2*n11*n2 + 
      160*n2^2 - 59*d*n2^2 + 24*n1*n2^2 - 32*n11*n2^2 + 15*d*n11*n2^2 - 
      8*n1*n11*n2^2 + 10*n2^3 - 2*n11*n2^3)*j[p4, n1, 1 + n2, 0, 1, 0, 0, 0, 
      0, 1, 1, n11, 0, 1, 1])/(2*(-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*
     (-3 + d - n2)*(-5 + 2*d - 2*n1 - n2)) + 
   ((28 - 19*d + 3*d^2 + 8*n11 - 2*d*n11 + 18*n2 - 7*d*n2 + 4*n11*n2 + 
      2*n2^2)*j[p4, n1, 1 + n2, 0, 1, 0, 0, 0, 0, 1, 1, n11, 0, 1, 2])/
    (2*(-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((26 - 18*d + 3*d^2 - 15*n1 + 15*d*n1 - 3*d^2*n1 - 11*n1^2 + 3*d*n1^2 + 
      48*n2 - 34*d*n2 + 6*d^2*n2 + 13*n1*n2 - 4*d*n1*n2 - n1^2*n2 + 10*n2^2 - 
      4*d*n2^2 + 2*n1*n2^2)*j[p4, n1, 1 + n2, 0, 1, 0, 0, 0, 0, 1, 1, n11, 1, 
      0, 1])/((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*
     (-5 + 2*d - 2*n1 - n2)) + 
   ((62 - 40*d + 6*d^2 + n1 + 10*n11 - 2*d*n11 - n1*n11 + 38*n2 - 14*d*n2 + 
      6*n11*n2 + 4*n2^2)*j[p4, n1, 1 + n2, 0, 1, 0, 0, 0, 0, 1, 1, n11, 1, 1, 
      0])/((-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((96 - 92*d + 29*d^2 - 3*d^3 + 52*n1 - 30*d*n1 + 4*d^2*n1 + 2*n1^2 + 
      d*n1^2 - 2*n1^3 + 104*n2 - 68*d*n2 + 11*d^2*n2 + 44*n1*n2 - 
      14*d*n1*n2 + 4*n1^2*n2 + 36*n2^2 - 12*d*n2^2 + 8*n1*n2^2 + 4*n2^3)*
     j[p4, n1, 1 + n2, 0, 1, 0, 0, 0, 0, 1, 1, n11, 1, 1, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-5 + 2*d - 2*n1 - n2)) + 
   ((2 - n1 + 2*n2)*j[p4, n1, 1 + n2, 0, 1, 0, 0, 0, 0, 1, 1, n11, 1, 2, 0])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-36 + 21*d - 3*d^2 - 22*n2 + 7*d*n2 - 2*n2^2)*j[p4, n1, 1 + n2, 0, 1, 0, 
      0, 0, 0, 1, 1, n11, 2, 1, 0])/(2*(-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*
     (-3 + d - n2)) + ((-146 + 156*d - 54*d^2 + 6*d^3 - 59*n1 + 39*d*n1 - 
      6*d^2*n1 - 34*n11 + 21*d*n11 - 3*d^2*n11 - 13*n1*n11 + 3*d*n1*n11 - 
      120*n2 + 91*d*n2 - 17*d^2*n2 - 37*n1*n2 + 14*d*n1*n2 - 26*n11*n2 + 
      9*d*n11*n2 - 7*n1*n11*n2 - 28*n2^2 + 11*d*n2^2 - 4*n1*n2^2 - 
      4*n11*n2^2 - 2*n2^3)*j[p4, n1, 1 + n2, 0, 1, 0, 0, 0, 0, 1, 2, 
      -1 + n11, 1, 1, 1])/((-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*
     (-5 + 2*d - 2*n1 - n2)) + 
   ((28 - 19*d + 3*d^2 + 8*n11 - 2*d*n11 + 18*n2 - 7*d*n2 + 4*n11*n2 + 
      2*n2^2)*j[p4, n1, 1 + n2, 0, 1, 0, 0, 0, 0, 2, 1, -1 + n11, 1, 1, 1])/
    (2*(-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((d - 2*n1 + 2*n2)*j[p4, n1, 1 + n2, 0, 2, -1, 0, 0, 0, 0, 1, n11, 1, 1, 
      1])/((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-d + 2*n1 - 2*n2)*j[p4, n1, 1 + n2, 0, 2, -1, 0, 0, 0, 1, 0, n11, 1, 1, 
      1])/((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((d - 2*n1 + 2*n2)*j[p4, n1, 1 + n2, 0, 2, -1, 0, 0, 0, 1, 1, -1 + n11, 1, 
      1, 1])/((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-30 + 20*d - 3*d^2 - n1 - 6*n11 + d*n11 + n1*n11 - 18*n2 + 7*d*n2 - 
      4*n11*n2 - 2*n2^2)*j[p4, n1, 1 + n2, 0, 2, -1, 0, 0, 0, 1, 1, n11, 1, 
      1, 0])/((-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((4 - d + 2*n2)*j[p4, n1, 1 + n2, 0, 2, 0, -1, 0, 0, 0, 1, n11, 1, 1, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-4 + d - 2*n2)*j[p4, n1, 1 + n2, 0, 2, 0, -1, 0, 0, 1, 0, n11, 1, 1, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((4 - d + 2*n2)*j[p4, n1, 1 + n2, 0, 2, 0, -1, 0, 0, 1, 1, -1 + n11, 1, 1, 
      1])/((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-30 + 20*d - 3*d^2 - n1 - 6*n11 + d*n11 + n1*n11 - 18*n2 + 7*d*n2 - 
      4*n11*n2 - 2*n2^2)*j[p4, n1, 1 + n2, 0, 2, 0, -1, 0, 0, 1, 1, n11, 1, 
      1, 0])/((-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-d + 2*n1 - 2*n2)*j[p4, n1, 1 + n2, 0, 2, 0, 0, -1, 0, 0, 1, n11, 1, 1, 
      1])/((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((d - 2*n1 + 2*n2)*j[p4, n1, 1 + n2, 0, 2, 0, 0, -1, 0, 1, 0, n11, 1, 1, 
      1])/((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-d + 2*n1 - 2*n2)*j[p4, n1, 1 + n2, 0, 2, 0, 0, -1, 0, 1, 1, -1 + n11, 
      1, 1, 1])/((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-166 + 169*d - 56*d^2 + 6*d^3 - 67*n1 + 41*d*n1 - 6*d^2*n1 - 14*n11 + 
      8*d*n11 - d^2*n11 - 5*n1*n11 + d*n1*n11 - 134*n2 + 96*d*n2 - 
      17*d^2*n2 - 41*n1*n2 + 14*d*n1*n2 - 12*n11*n2 + 4*d*n11*n2 - 
      3*n1*n11*n2 - 30*n2^2 + 11*d*n2^2 - 4*n1*n2^2 - 2*n11*n2^2 - 2*n2^3)*
     j[p4, n1, 1 + n2, 0, 2, 0, 0, -1, 0, 1, 1, n11, 1, 1, 0])/
    ((-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*
     (-5 + 2*d - 2*n1 - n2)) + 
   ((-4 + d - 2*n2)*j[p4, n1, 1 + n2, 0, 2, 0, 0, 0, -1, 0, 1, n11, 1, 1, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((4 - d + 2*n2)*j[p4, n1, 1 + n2, 0, 2, 0, 0, 0, -1, 1, 0, n11, 1, 1, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-4 + d - 2*n2)*j[p4, n1, 1 + n2, 0, 2, 0, 0, 0, -1, 1, 1, -1 + n11, 1, 
      1, 1])/((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-166 + 169*d - 56*d^2 + 6*d^3 - 67*n1 + 41*d*n1 - 6*d^2*n1 - 14*n11 + 
      8*d*n11 - d^2*n11 - 5*n1*n11 + d*n1*n11 - 134*n2 + 96*d*n2 - 
      17*d^2*n2 - 41*n1*n2 + 14*d*n1*n2 - 12*n11*n2 + 4*d*n11*n2 - 
      3*n1*n11*n2 - 30*n2^2 + 11*d*n2^2 - 4*n1*n2^2 - 2*n11*n2^2 - 2*n2^3)*
     j[p4, n1, 1 + n2, 0, 2, 0, 0, 0, -1, 1, 1, n11, 1, 1, 0])/
    ((-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*
     (-5 + 2*d - 2*n1 - n2)) + ((36 - 21*d + 3*d^2 + 22*n2 - 7*d*n2 + 2*n2^2)*
     j[p4, n1, 1 + n2, 0, 2, 0, 0, 0, 0, 1, 1, -1 + n11, 1, 1, 0])/
    (2*(-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((4 + d - d^2 - 4*n1 + 3*d*n1 - 2*n1^2 + 14*n2 - 2*d*n2 - d^2*n2 - 
      2*n1*n2 + 3*d*n1*n2 - 2*n1^2*n2 + 12*n2^2 - 3*d*n2^2 + 2*n1*n2^2 + 
      2*n2^3)*j[p4, n1, 2 + n2, -1, 1, 0, 0, 0, 0, 1, 0, n11, 1, 1, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*(-5 + 2*d - 2*n1 - n2)) + 
   ((-34 + 21*d - 3*d^2 - n1 - 2*n11 + n1*n11 - 54*n2 + 28*d*n2 - 3*d^2*n2 - 
      n1*n2 - 4*n11*n2 + n1*n11*n2 - 22*n2^2 + 7*d*n2^2 - 2*n11*n2^2 - 
      2*n2^3)*j[p4, n1, 2 + n2, 0, 1, -1, 0, 0, 0, 1, 1, n11, 0, 1, 1])/
    ((-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((68 - 42*d + 6*d^2 + 2*n1 + 4*n11 - 2*n1*n11 + 108*n2 - 56*d*n2 + 
      6*d^2*n2 + 2*n1*n2 + 8*n11*n2 - 2*n1*n11*n2 + 44*n2^2 - 14*d*n2^2 + 
      4*n11*n2^2 + 4*n2^3)*j[p4, n1, 2 + n2, 0, 1, -1, 0, 0, 0, 1, 1, n11, 1, 
      0, 1])/((-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-32 + 21*d - 3*d^2 - 2*n1 - 4*n11 + 2*n1*n11 - 50*n2 + 28*d*n2 - 
      3*d^2*n2 - 2*n1*n2 - 8*n11*n2 + 2*n1*n11*n2 - 20*n2^2 + 7*d*n2^2 - 
      4*n11*n2^2 - 2*n2^3)*j[p4, n1, 2 + n2, 0, 1, -1, 0, 0, 0, 1, 1, n11, 1, 
      1, 1])/((-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-8 + 2*d - 12*n2 + 2*d*n2 - 4*n2^2)*j[p4, n1, 2 + n2, 0, 1, 0, -1, 0, 0, 
      1, 0, n11, 1, 1, 1])/((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((34 - 21*d + 3*d^2 + n1 + 2*n11 - n1*n11 + 54*n2 - 28*d*n2 + 3*d^2*n2 + 
      n1*n2 + 4*n11*n2 - n1*n11*n2 + 22*n2^2 - 7*d*n2^2 + 2*n11*n2^2 + 
      2*n2^3)*j[p4, n1, 2 + n2, 0, 1, 0, -1, 0, 0, 1, 1, n11, 0, 1, 1])/
    ((-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-68 + 42*d - 6*d^2 - 2*n1 - 4*n11 + 2*n1*n11 - 108*n2 + 56*d*n2 - 
      6*d^2*n2 - 2*n1*n2 - 8*n11*n2 + 2*n1*n11*n2 - 44*n2^2 + 14*d*n2^2 - 
      4*n11*n2^2 - 4*n2^3)*j[p4, n1, 2 + n2, 0, 1, 0, -1, 0, 0, 1, 1, n11, 1, 
      0, 1])/((-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((32 - 21*d + 3*d^2 + 2*n1 + 4*n11 - 2*n1*n11 + 50*n2 - 28*d*n2 + 
      3*d^2*n2 + 2*n1*n2 + 8*n11*n2 - 2*n1*n11*n2 + 20*n2^2 - 7*d*n2^2 + 
      4*n11*n2^2 + 2*n2^3)*j[p4, n1, 2 + n2, 0, 1, 0, -1, 0, 0, 1, 1, n11, 1, 
      1, 1])/((-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-4 + 2*d - 2*n1 - 4*n2 + 2*d*n2 - 2*n1*n2)*j[p4, n1, 2 + n2, 0, 1, 0, 0, 
      -1, 0, 1, 0, n11, 1, 1, 1])/((-3 + d - n2)*(-5 + 2*d - 2*n1 - n2)) + 
   ((146 - 156*d + 54*d^2 - 6*d^3 + 59*n1 - 39*d*n1 + 6*d^2*n1 + 34*n11 - 
      21*d*n11 + 3*d^2*n11 + 13*n1*n11 - 3*d*n1*n11 + 266*n2 - 247*d*n2 + 
      71*d^2*n2 - 6*d^3*n2 + 96*n1*n2 - 53*d*n1*n2 + 6*d^2*n1*n2 + 
      60*n11*n2 - 30*d*n11*n2 + 3*d^2*n11*n2 + 20*n1*n11*n2 - 3*d*n1*n11*n2 + 
      148*n2^2 - 102*d*n2^2 + 17*d^2*n2^2 + 41*n1*n2^2 - 14*d*n1*n2^2 + 
      30*n11*n2^2 - 9*d*n11*n2^2 + 7*n1*n11*n2^2 + 30*n2^3 - 11*d*n2^3 + 
      4*n1*n2^3 + 4*n11*n2^3 + 2*n2^4)*j[p4, n1, 2 + n2, 0, 1, 0, 0, -1, 0, 
      1, 1, n11, 0, 1, 1])/((-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*
     (-5 + 2*d - 2*n1 - n2)) + 
   ((-292 + 312*d - 108*d^2 + 12*d^3 - 118*n1 + 78*d*n1 - 12*d^2*n1 - 
      68*n11 + 42*d*n11 - 6*d^2*n11 - 26*n1*n11 + 6*d*n1*n11 - 532*n2 + 
      494*d*n2 - 142*d^2*n2 + 12*d^3*n2 - 192*n1*n2 + 106*d*n1*n2 - 
      12*d^2*n1*n2 - 120*n11*n2 + 60*d*n11*n2 - 6*d^2*n11*n2 - 40*n1*n11*n2 + 
      6*d*n1*n11*n2 - 296*n2^2 + 204*d*n2^2 - 34*d^2*n2^2 - 82*n1*n2^2 + 
      28*d*n1*n2^2 - 60*n11*n2^2 + 18*d*n11*n2^2 - 14*n1*n11*n2^2 - 60*n2^3 + 
      22*d*n2^3 - 8*n1*n2^3 - 8*n11*n2^3 - 4*n2^4)*j[p4, n1, 2 + n2, 0, 1, 0, 
      0, -1, 0, 1, 1, n11, 1, 0, 1])/((-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*
     (-3 + d - n2)*(-5 + 2*d - 2*n1 - n2)) + 
   ((152 - 161*d + 55*d^2 - 6*d^3 + 62*n1 - 40*d*n1 + 6*d^2*n1 + 28*n11 - 
      16*d*n11 + 2*d^2*n11 + 10*n1*n11 - 2*d*n1*n11 + 274*n2 - 253*d*n2 + 
      72*d^2*n2 - 6*d^3*n2 + 100*n1*n2 - 54*d*n1*n2 + 6*d^2*n1*n2 + 
      52*n11*n2 - 24*d*n11*n2 + 2*d^2*n11*n2 + 16*n1*n11*n2 - 2*d*n1*n11*n2 + 
      150*n2^2 - 103*d*n2^2 + 17*d^2*n2^2 + 42*n1*n2^2 - 14*d*n1*n2^2 + 
      28*n11*n2^2 - 8*d*n11*n2^2 + 6*n1*n11*n2^2 + 30*n2^3 - 11*d*n2^3 + 
      4*n1*n2^3 + 4*n11*n2^3 + 2*n2^4)*j[p4, n1, 2 + n2, 0, 1, 0, 0, -1, 0, 
      1, 1, n11, 1, 1, 1])/((-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*
     (-5 + 2*d - 2*n1 - n2)) + 
   ((-146 + 156*d - 54*d^2 + 6*d^3 - 59*n1 + 39*d*n1 - 6*d^2*n1 - 34*n11 + 
      21*d*n11 - 3*d^2*n11 - 13*n1*n11 + 3*d*n1*n11 - 266*n2 + 247*d*n2 - 
      71*d^2*n2 + 6*d^3*n2 - 96*n1*n2 + 53*d*n1*n2 - 6*d^2*n1*n2 - 
      60*n11*n2 + 30*d*n11*n2 - 3*d^2*n11*n2 - 20*n1*n11*n2 + 3*d*n1*n11*n2 - 
      148*n2^2 + 102*d*n2^2 - 17*d^2*n2^2 - 41*n1*n2^2 + 14*d*n1*n2^2 - 
      30*n11*n2^2 + 9*d*n11*n2^2 - 7*n1*n11*n2^2 - 30*n2^3 + 11*d*n2^3 - 
      4*n1*n2^3 - 4*n11*n2^3 - 2*n2^4)*j[p4, n1, 2 + n2, 0, 1, 0, 0, 0, -1, 
      1, 1, n11, 0, 1, 1])/((-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*
     (-5 + 2*d - 2*n1 - n2)) + 
   ((292 - 312*d + 108*d^2 - 12*d^3 + 118*n1 - 78*d*n1 + 12*d^2*n1 + 68*n11 - 
      42*d*n11 + 6*d^2*n11 + 26*n1*n11 - 6*d*n1*n11 + 532*n2 - 494*d*n2 + 
      142*d^2*n2 - 12*d^3*n2 + 192*n1*n2 - 106*d*n1*n2 + 12*d^2*n1*n2 + 
      120*n11*n2 - 60*d*n11*n2 + 6*d^2*n11*n2 + 40*n1*n11*n2 - 
      6*d*n1*n11*n2 + 296*n2^2 - 204*d*n2^2 + 34*d^2*n2^2 + 82*n1*n2^2 - 
      28*d*n1*n2^2 + 60*n11*n2^2 - 18*d*n11*n2^2 + 14*n1*n11*n2^2 + 60*n2^3 - 
      22*d*n2^3 + 8*n1*n2^3 + 8*n11*n2^3 + 4*n2^4)*j[p4, n1, 2 + n2, 0, 1, 0, 
      0, 0, -1, 1, 1, n11, 1, 0, 1])/((-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*
     (-3 + d - n2)*(-5 + 2*d - 2*n1 - n2)) + 
   ((-152 + 161*d - 55*d^2 + 6*d^3 - 62*n1 + 40*d*n1 - 6*d^2*n1 - 28*n11 + 
      16*d*n11 - 2*d^2*n11 - 10*n1*n11 + 2*d*n1*n11 - 274*n2 + 253*d*n2 - 
      72*d^2*n2 + 6*d^3*n2 - 100*n1*n2 + 54*d*n1*n2 - 6*d^2*n1*n2 - 
      52*n11*n2 + 24*d*n11*n2 - 2*d^2*n11*n2 - 16*n1*n11*n2 + 2*d*n1*n11*n2 - 
      150*n2^2 + 103*d*n2^2 - 17*d^2*n2^2 - 42*n1*n2^2 + 14*d*n1*n2^2 - 
      28*n11*n2^2 + 8*d*n11*n2^2 - 6*n1*n11*n2^2 - 30*n2^3 + 11*d*n2^3 - 
      4*n1*n2^3 - 4*n11*n2^3 - 2*n2^4)*j[p4, n1, 2 + n2, 0, 1, 0, 0, 0, -1, 
      1, 1, n11, 1, 1, 1])/((-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*
     (-5 + 2*d - 2*n1 - n2)) + ((-2*n1 + d*n1 - n1^2)*
     j[p4, 1 + n1, n2, 0, 1, 0, 0, 0, 0, 1, 1, n11, 1, 0, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-5 + 2*d - 2*n1 - n2)) + 
   ((4*n1 - 2*d*n1 + 2*n1^2)*j[p4, 1 + n1, n2, 0, 1, 0, 0, 0, 0, 1, 1, n11, 
      1, 1, 1])/((-8 + 3*d - 2*n1 - 2*n2)*(-5 + 2*d - 2*n1 - n2)) + 
   ((32*n1 - 20*d*n1 + 3*d^2*n1 + 4*n1*n11 - d*n1*n11 + 20*n1*n2 - 
      7*d*n1*n2 + 2*n1*n11*n2 + 2*n1*n2^2)*j[p4, 1 + n1, 1 + n2, 0, 1, -1, 0, 
      0, 0, 1, 1, -1 + n11, 1, 1, 1])/((-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*
     (-3 + d - n2)) + ((34*n1 - 21*d*n1 + 3*d^2*n1 + n1^2 + 2*n1*n11 - 
      n1^2*n11 + 20*n1*n2 - 7*d*n1*n2 + 2*n1*n11*n2 + 2*n1*n2^2)*
     j[p4, 1 + n1, 1 + n2, 0, 1, -1, 0, 0, 0, 1, 1, n11, 1, 0, 1])/
    ((-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-32*n1 + 21*d*n1 - 3*d^2*n1 - 2*n1^2 - 4*n1*n11 + 2*n1^2*n11 - 
      18*n1*n2 + 7*d*n1*n2 - 4*n1*n11*n2 - 2*n1*n2^2)*
     j[p4, 1 + n1, 1 + n2, 0, 1, -1, 0, 0, 0, 1, 1, n11, 1, 1, 1])/
    ((-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-32*n1 + 20*d*n1 - 3*d^2*n1 - 4*n1*n11 + d*n1*n11 - 20*n1*n2 + 
      7*d*n1*n2 - 2*n1*n11*n2 - 2*n1*n2^2)*j[p4, 1 + n1, 1 + n2, 0, 1, 0, 0, 
      0, -1, 0, 1, n11, 1, 1, 1])/((-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*
     (-3 + d - n2)) + ((146*n1 - 156*d*n1 + 54*d^2*n1 - 6*d^3*n1 + 59*n1^2 - 
      39*d*n1^2 + 6*d^2*n1^2 + 34*n1*n11 - 21*d*n1*n11 + 3*d^2*n1*n11 + 
      13*n1^2*n11 - 3*d*n1^2*n11 + 120*n1*n2 - 91*d*n1*n2 + 17*d^2*n1*n2 + 
      37*n1^2*n2 - 14*d*n1^2*n2 + 26*n1*n11*n2 - 9*d*n1*n11*n2 + 
      7*n1^2*n11*n2 + 28*n1*n2^2 - 11*d*n1*n2^2 + 4*n1^2*n2^2 + 
      4*n1*n11*n2^2 + 2*n1*n2^3)*j[p4, 1 + n1, 1 + n2, 0, 1, 0, 0, 0, -1, 1, 
      1, n11, 1, 0, 1])/((-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*
     (-5 + 2*d - 2*n1 - n2)) + 
   ((-152*n1 + 161*d*n1 - 55*d^2*n1 + 6*d^3*n1 - 62*n1^2 + 40*d*n1^2 - 
      6*d^2*n1^2 - 28*n1*n11 + 16*d*n1*n11 - 2*d^2*n1*n11 - 10*n1^2*n11 + 
      2*d*n1^2*n11 - 122*n1*n2 + 92*d*n1*n2 - 17*d^2*n1*n2 - 38*n1^2*n2 + 
      14*d*n1^2*n2 - 24*n1*n11*n2 + 8*d*n1*n11*n2 - 6*n1^2*n11*n2 - 
      28*n1*n2^2 + 11*d*n1*n2^2 - 4*n1^2*n2^2 - 4*n1*n11*n2^2 - 2*n1*n2^3)*
     j[p4, 1 + n1, 1 + n2, 0, 1, 0, 0, 0, -1, 1, 1, n11, 1, 1, 1])/
    ((-1 + n11)*(-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)*
     (-5 + 2*d - 2*n1 - n2)) + ((2*n1 - n1^2 + 2*n1*n2)*
     j[p4, 1 + n1, 1 + n2, 0, 1, 0, 0, 0, 0, 0, 1, n11, 1, 1, 1])/
    ((-8 + 3*d - 2*n1 - 2*n2)*(-3 + d - n2)) + 
   ((-2*n1 + d*n1 - n1^2)*j[p4, 1 + n1, 1 + n2, 0, 1, 0, 0, 0, 0, 1, 0, n11, 
      1, 1, 1])/((-8 + 3*d - 2*n1 - 2*n2)*(-5 + 2*d - 2*n1 - n2)) + 
   ((2*n1 - d*n1 + n1^2)*j[p4, 1 + n1, 1 + n2, 0, 1, 0, 0, 0, 0, 1, 1, 
      -1 + n11, 1, 1, 1])/((-8 + 3*d - 2*n1 - 2*n2)*(-5 + 2*d - 2*n1 - n2)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 1 && n13 == 1 && n14 == 1 && n4 == 1 && 
    n5 == 0 && n6 == 0 && n7 == 0 && n8 == -1 && n9 == 1 && n1 != 0 -> 
  j[p4, -1 + n1, n2, n3, 1, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1]/
    (4 - 2*d + n1 + n2) - (2*j[p4, -1 + n1, n2, n3, 1, 0, 0, 0, 0, 1, 1, 1, 
      0, 2, 1])/(-4 + 2*d - n1 - n2) + 
   (2*j[p4, -1 + n1, n2, n3, 1, 0, 0, 0, 0, 1, 1, 1, 1, 2, 0])/
    (-4 + 2*d - n1 - n2) + j[p4, -1 + n1, n2, n3, 1, 0, 0, 0, 0, 1, 2, 0, 1, 
     1, 1]/(-4 + 2*d - n1 - n2) - 
   (n3*j[p4, -1 + n1, n2, 1 + n3, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    (-4 + 2*d - n1 - n2) - (n3*j[p4, -1 + n1, n2, 1 + n3, 1, 0, 0, 0, 0, 1, 
      1, 1, 0, 1, 1])/(-4 + 2*d - n1 - n2) + 
   (n3*j[p4, -1 + n1, n2, 1 + n3, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0])/
    (-4 + 2*d - n1 - n2) - (2*n2*j[p4, -1 + n1, 1 + n2, n3, 1, 0, -1, 0, 0, 
      1, 1, 1, 1, 1, 1])/(4 - 2*d + n1 + n2) + 
   (2*n2*j[p4, -1 + n1, 1 + n2, n3, 1, 0, 0, -1, 0, 1, 1, 1, 1, 1, 1])/
    (4 - 2*d + n1 + n2) + j[p4, n1, -1 + n2, n3, 1, 0, 0, 0, 0, 0, 1, 1, 1, 
     1, 2]/(-4 + 2*d - n1 - n2) + j[p4, n1, -1 + n2, n3, 1, 0, 0, 0, 0, 0, 2, 
     1, 1, 1, 1]/(-4 + 2*d - n1 - n2) + 
   j[p4, n1, -1 + n2, n3, 1, 0, 0, 0, 0, 1, 1, 0, 2, 1, 1]/
    (4 - 2*d + n1 + n2) + (n3*j[p4, n1, -1 + n2, n3, 1, 0, 0, 0, 0, 1, 1, 1, 
      1, 1, 1])/(-4 + 2*d - n1 - n2) + 
   j[p4, n1, -1 + n2, n3, 1, 0, 0, 0, 0, 1, 1, 2, 0, 1, 1]/
    (4 - 2*d + n1 + n2) + j[p4, n1, -1 + n2, n3, 1, 0, 0, 0, 0, 1, 2, 0, 1, 
     1, 1]/(4 - 2*d + n1 + n2) + j[p4, n1, -1 + n2, n3, 1, 0, 0, 0, 0, 2, 1, 
     1, 1, 1, 0]/(-4 + 2*d - n1 - n2) - 
   (n3*j[p4, n1, -1 + n2, 1 + n3, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    (-4 + 2*d - n1 - n2) + (n3*j[p4, n1, -1 + n2, 1 + n3, 1, 0, 0, 0, 0, 1, 
      0, 1, 1, 1, 1])/(-4 + 2*d - n1 - n2) - 
   (n3*j[p4, n1, -1 + n2, 1 + n3, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1])/
    (-4 + 2*d - n1 - n2) + (n3*j[p4, n1, -1 + n2, 1 + n3, 1, 0, 0, 0, 0, 1, 
      1, 1, 0, 1, 1])/(-4 + 2*d - n1 - n2) + 
   (n3*j[p4, n1, -1 + n2, 1 + n3, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0])/
    (-4 + 2*d - n1 - n2) + j[p4, n1, n2, n3, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2]/
    (-4 + 2*d - n1 - n2) + j[p4, n1, n2, n3, 0, 0, 0, 0, 0, 1, 1, 1, 2, 1, 1]/
    (4 - 2*d + n1 + n2) + j[p4, n1, n2, n3, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 1]/
    (4 - 2*d + n1 + n2) + j[p4, n1, n2, n3, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1]/
    (-4 + 2*d - n1 - n2) + j[p4, n1, n2, n3, 1, -1, 0, 0, 0, 0, 1, 1, 1, 1, 
     2]/(4 - 2*d + n1 + n2) + j[p4, n1, n2, n3, 1, -1, 0, 0, 0, 1, 1, 0, 2, 
     1, 1]/(-4 + 2*d - n1 - n2) + 
   (3*j[p4, n1, n2, n3, 1, -1, 0, 0, 0, 1, 1, 1, 0, 2, 1])/
    (-4 + 2*d - n1 - n2) + ((-4 + 2*d - n1 - n2 - 2*n3)*
     j[p4, n1, n2, n3, 1, -1, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    (-4 + 2*d - n1 - n2) + j[p4, n1, n2, n3, 1, -1, 0, 0, 0, 1, 1, 2, 0, 1, 
     1]/(-4 + 2*d - n1 - n2) + j[p4, n1, n2, n3, 1, -1, 0, 0, 0, 2, 1, 1, 1, 
     1, 0]/(4 - 2*d + n1 + n2) + j[p4, n1, n2, n3, 1, 0, -1, 0, 0, 0, 1, 1, 
     1, 1, 2]/(4 - 2*d + n1 + n2) + j[p4, n1, n2, n3, 1, 0, -1, 0, 0, 1, 1, 
     0, 2, 1, 1]/(-4 + 2*d - n1 - n2) + 
   ((-2 + d - n2 - 2*n3)*j[p4, n1, n2, n3, 1, 0, -1, 0, 0, 1, 1, 1, 1, 1, 1])/
    (-4 + 2*d - n1 - n2) + j[p4, n1, n2, n3, 1, 0, -1, 0, 0, 1, 1, 2, 0, 1, 
     1]/(-4 + 2*d - n1 - n2) + 
   (3*j[p4, n1, n2, n3, 1, 0, -1, 0, 0, 1, 2, 0, 1, 1, 1])/
    (-4 + 2*d - n1 - n2) + j[p4, n1, n2, n3, 1, 0, -1, 0, 0, 2, 1, 1, 1, 1, 
     0]/(4 - 2*d + n1 + n2) + j[p4, n1, n2, n3, 1, 0, 0, -1, 0, 0, 1, 1, 1, 
     1, 2]/(4 - 2*d + n1 + n2) - 
   (3*j[p4, n1, n2, n3, 1, 0, 0, -1, 0, 0, 2, 1, 1, 1, 1])/
    (-4 + 2*d - n1 - n2) + j[p4, n1, n2, n3, 1, 0, 0, -1, 0, 1, 1, 0, 2, 1, 
     1]/(-4 + 2*d - n1 - n2) + 
   ((2 - d + n2)*j[p4, n1, n2, n3, 1, 0, 0, -1, 0, 1, 1, 1, 1, 1, 1])/
    (-4 + 2*d - n1 - n2) + j[p4, n1, n2, n3, 1, 0, 0, -1, 0, 1, 1, 2, 0, 1, 
     1]/(-4 + 2*d - n1 - n2) + j[p4, n1, n2, n3, 1, 0, 0, -1, 0, 2, 1, 1, 1, 
     1, 0]/(4 - 2*d + n1 + n2) + j[p4, n1, n2, n3, 1, 0, 0, 0, -1, 0, 1, 1, 
     1, 1, 2]/(4 - 2*d + n1 + n2) + j[p4, n1, n2, n3, 1, 0, 0, 0, -1, 1, 1, 
     0, 2, 1, 1]/(-4 + 2*d - n1 - n2) - 
   (3*j[p4, n1, n2, n3, 1, 0, 0, 0, -1, 1, 1, 1, 1, 2, 0])/
    (-4 + 2*d - n1 - n2) + j[p4, n1, n2, n3, 1, 0, 0, 0, -1, 1, 1, 2, 0, 1, 
     1]/(-4 + 2*d - n1 - n2) + j[p4, n1, n2, n3, 1, 0, 0, 0, -1, 2, 1, 1, 1, 
     1, 0]/(4 - 2*d + n1 + n2) + 
   ((-3 - 2*n1)*j[p4, n1, n2, n3, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1])/
    (4 - 2*d + n1 + n2) + j[p4, n1, n2, n3, 1, 0, 0, 0, 0, 0, 1, 2, 1, 1, 1]/
    (4 - 2*d + n1 + n2) + ((3 + 2*n1)*j[p4, n1, n2, n3, 1, 0, 0, 0, 0, 1, 1, 
      0, 1, 1, 1])/(4 - 2*d + n1 + n2) - 
   (2*j[p4, n1, n2, n3, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1])/
    (-4 + 2*d - n1 - n2) + j[p4, n1, n2, n3, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 2]/
    (-4 + 2*d - n1 - n2) + (2*j[p4, n1, n2, n3, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 
      0])/(-4 + 2*d - n1 - n2) + 
   ((-6 + 2*d + 2*n2)*j[p4, n1, n2, n3, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    (-4 + 2*d - n1 - n2) - (2*j[p4, n1, n2, n3, 1, 0, 0, 0, 0, 1, 1, 1, 1, 2, 
      0])/(-4 + 2*d - n1 - n2) + j[p4, n1, n2, n3, 1, 0, 0, 0, 0, 1, 1, 1, 2, 
     1, 0]/(4 - 2*d + n1 + n2) - 
   (2*j[p4, n1, n2, n3, 1, 0, 0, 0, 0, 1, 1, 2, 0, 1, 1])/
    (-4 + 2*d - n1 - n2) + (2*j[p4, n1, n2, n3, 1, 0, 0, 0, 0, 1, 1, 2, 1, 1, 
      1])/(-4 + 2*d - n1 - n2) + j[p4, n1, n2, n3, 1, 0, 0, 0, 0, 2, 1, 0, 1, 
     1, 1]/(-4 + 2*d - n1 - n2) + j[p4, n1, n2, n3, 2, -1, 0, 0, 0, 0, 1, 1, 
     1, 1, 1]/(4 - 2*d + n1 + n2) + j[p4, n1, n2, n3, 2, -1, 0, 0, 0, 1, 0, 
     1, 1, 1, 1]/(-4 + 2*d - n1 - n2) + 
   j[p4, n1, n2, n3, 2, -1, 0, 0, 0, 1, 1, 0, 1, 1, 1]/(4 - 2*d + n1 + n2) + 
   j[p4, n1, n2, n3, 2, 0, -1, 0, 0, 0, 1, 1, 1, 1, 1]/(4 - 2*d + n1 + n2) + 
   j[p4, n1, n2, n3, 2, 0, -1, 0, 0, 1, 0, 1, 1, 1, 1]/(-4 + 2*d - n1 - n2) + 
   j[p4, n1, n2, n3, 2, 0, -1, 0, 0, 1, 1, 0, 1, 1, 1]/(4 - 2*d + n1 + n2) + 
   j[p4, n1, n2, n3, 2, 0, 0, -1, 0, 0, 1, 1, 1, 1, 1]/(-4 + 2*d - n1 - n2) + 
   j[p4, n1, n2, n3, 2, 0, 0, -1, 0, 1, 0, 1, 1, 1, 1]/(4 - 2*d + n1 + n2) + 
   j[p4, n1, n2, n3, 2, 0, 0, -1, 0, 1, 1, 0, 1, 1, 1]/(-4 + 2*d - n1 - n2) + 
   j[p4, n1, n2, n3, 2, 0, 0, 0, -1, 0, 1, 1, 1, 1, 1]/(-4 + 2*d - n1 - n2) + 
   j[p4, n1, n2, n3, 2, 0, 0, 0, -1, 1, 0, 1, 1, 1, 1]/(4 - 2*d + n1 + n2) + 
   j[p4, n1, n2, n3, 2, 0, 0, 0, -1, 1, 1, 0, 1, 1, 1]/(-4 + 2*d - n1 - n2) + 
   (3*n3*j[p4, n1, n2, 1 + n3, 0, 0, 0, -1, 0, 1, 1, 1, 1, 1, 1])/
    (-4 + 2*d - n1 - n2) + (3*n3*j[p4, n1, n2, 1 + n3, 0, 0, 0, 0, -1, 1, 1, 
      1, 1, 1, 1])/(-4 + 2*d - n1 - n2) + 
   (n3*j[p4, n1, n2, 1 + n3, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    (-4 + 2*d - n1 - n2) - (2*n3*j[p4, n1, n2, 1 + n3, 1, 0, 0, -1, 0, 1, 0, 
      1, 1, 1, 1])/(-4 + 2*d - n1 - n2) + 
   (2*n3*j[p4, n1, n2, 1 + n3, 1, 0, 0, -1, 0, 1, 1, 0, 1, 1, 1])/
    (-4 + 2*d - n1 - n2) - (n3*j[p4, n1, n2, 1 + n3, 1, 0, 0, -1, 0, 1, 1, 1, 
      0, 1, 1])/(-4 + 2*d - n1 - n2) - 
   (3*n3*j[p4, n1, n2, 1 + n3, 1, 0, 0, -1, 0, 1, 1, 1, 1, 1, 0])/
    (-4 + 2*d - n1 - n2) - (2*n3*j[p4, n1, n2, 1 + n3, 1, 0, 0, 0, -1, 1, 0, 
      1, 1, 1, 1])/(-4 + 2*d - n1 - n2) + 
   (2*n3*j[p4, n1, n2, 1 + n3, 1, 0, 0, 0, -1, 1, 1, 0, 1, 1, 1])/
    (-4 + 2*d - n1 - n2) - (n3*j[p4, n1, n2, 1 + n3, 1, 0, 0, 0, -1, 1, 1, 1, 
      0, 1, 1])/(-4 + 2*d - n1 - n2) - 
   (3*n3*j[p4, n1, n2, 1 + n3, 1, 0, 0, 0, -1, 1, 1, 1, 1, 1, 0])/
    (-4 + 2*d - n1 - n2) - (2*n3*j[p4, n1, n2, 1 + n3, 1, 0, 0, 0, -1, 1, 1, 
      1, 1, 1, 1])/(-4 + 2*d - n1 - n2) + 
   (n3*j[p4, n1, n2, 1 + n3, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1])/
    (-4 + 2*d - n1 - n2) - (n3*j[p4, n1, n2, 1 + n3, 1, 0, 0, 0, 0, 1, 1, 1, 
      1, 1, 0])/(-4 + 2*d - n1 - n2) - 
   (2*n2*j[p4, n1, 1 + n2, -1 + n3, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    (4 - 2*d + n1 + n2) + (3*n2*j[p4, n1, 1 + n2, n3, 1, -1, 0, 0, 0, 1, 0, 
      1, 1, 1, 1])/(4 - 2*d + n1 + n2) - 
   (2*n2*j[p4, n1, 1 + n2, n3, 1, -1, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    (4 - 2*d + n1 + n2) - (n2*j[p4, n1, 1 + n2, n3, 1, 0, -1, 0, 0, 1, 0, 1, 
      1, 1, 1])/(4 - 2*d + n1 + n2) + 
   (2*n2*j[p4, n1, 1 + n2, n3, 1, 0, -1, 0, 0, 1, 1, 1, 1, 1, 1])/
    (4 - 2*d + n1 + n2) + (n2*j[p4, n1, 1 + n2, n3, 1, 0, 0, -1, 0, 1, 0, 1, 
      1, 1, 1])/(4 - 2*d + n1 + n2) + 
   (2*n2*j[p4, n1, 1 + n2, n3, 1, 0, 0, -1, 0, 1, 1, 1, 1, 1, 1])/
    (4 - 2*d + n1 + n2) - (3*n2*j[p4, n1, 1 + n2, n3, 1, 0, 0, 0, -1, 1, 0, 
      1, 1, 1, 1])/(4 - 2*d + n1 + n2) + 
   (4*n2*j[p4, n1, 1 + n2, n3, 1, 0, 0, 0, -1, 1, 1, 1, 1, 1, 1])/
    (4 - 2*d + n1 + n2) - (2*n2*j[p4, n1, 1 + n2, n3, 1, 0, 0, 0, 0, 1, 1, 1, 
      0, 1, 1])/(4 - 2*d + n1 + n2) + 
   (4*n2*j[p4, n1, 1 + n2, n3, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1])/
    (4 - 2*d + n1 + n2) + (2*n3*j[p4, 1 + n1, -1 + n2, 1 + n3, 1, 0, 0, 0, 
      -1, 1, 1, 1, 1, 1, 1])/(-4 + 2*d - n1 - n2) - 
   (3*n1*j[p4, 1 + n1, n2, n3, 1, -1, 0, 0, 0, 1, 1, 0, 1, 1, 1])/
    (4 - 2*d + n1 + n2) - (2*n1*j[p4, 1 + n1, n2, n3, 1, -1, 0, 0, 0, 1, 1, 
      1, 1, 1, 1])/(4 - 2*d + n1 + n2) + 
   (3*n1*j[p4, 1 + n1, n2, n3, 1, 0, 0, 0, -1, 0, 1, 1, 1, 1, 1])/
    (4 - 2*d + n1 + n2) - (2*j[p4, 1 + n1, n2, n3, 1, 0, 0, 0, -1, 0, 1, 1, 
      1, 1, 2])/(-4 + 2*d - n1 - n2) + 
   ((-2*n1 - 2*n2 + 2*n3)*j[p4, 1 + n1, n2, n3, 1, 0, 0, 0, -1, 1, 1, 1, 1, 
      1, 1])/(-4 + 2*d - n1 - n2) + 
   (2*j[p4, 1 + n1, n2, n3, 1, 0, 0, 0, -1, 1, 1, 1, 1, 1, 2])/
    (-4 + 2*d - n1 - n2) + (2*j[p4, 1 + n1, n2, n3, 1, 0, 0, 0, -1, 1, 1, 1, 
      1, 2, 1])/(-4 + 2*d - n1 - n2) + 
   (2*j[p4, 1 + n1, n2, n3, 1, 0, 0, 0, -1, 2, 1, 1, 1, 1, 0])/
    (-4 + 2*d - n1 - n2) - (2*j[p4, 1 + n1, n2, n3, 1, 0, 0, 0, -1, 2, 1, 1, 
      1, 1, 1])/(-4 + 2*d - n1 - n2) + 
   (2*n1*j[p4, 1 + n1, n2, n3, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1])/
    (4 - 2*d + n1 + n2) - (2*j[p4, 1 + n1, n2, n3, 1, 0, 0, 0, 0, 1, 1, 0, 1, 
      1, 1])/(-4 + 2*d - n1 - n2) + 
   (2*j[p4, 1 + n1, n2, n3, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1])/
    (-4 + 2*d - n1 - n2) + ((2 + 2*n1)*j[p4, 1 + n1, n2, n3, 1, 0, 0, 0, 0, 
      1, 1, 1, 1, 0, 1])/(4 - 2*d + n1 + n2) - 
   (2*n1*j[p4, 1 + n1, n2, n3, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    (4 - 2*d + n1 + n2) - (2*n3*j[p4, 1 + n1, n2, 1 + n3, 1, 0, 0, -1, -1, 1, 
      1, 1, 1, 1, 1])/(-4 + 2*d - n1 - n2) - 
   (2*n3*j[p4, 1 + n1, n2, 1 + n3, 1, 0, 0, 0, -2, 1, 1, 1, 1, 1, 1])/
    (-4 + 2*d - n1 - n2) - (2*n3*j[p4, 1 + n1, n2, 1 + n3, 1, 0, 0, 0, -1, 1, 
      0, 1, 1, 1, 1])/(-4 + 2*d - n1 - n2) + 
   (2*n3*j[p4, 1 + n1, n2, 1 + n3, 1, 0, 0, 0, -1, 1, 1, 0, 1, 1, 1])/
    (-4 + 2*d - n1 - n2) + (2*n3*j[p4, 1 + n1, n2, 1 + n3, 1, 0, 0, 0, -1, 1, 
      1, 1, 1, 1, 1])/(-4 + 2*d - n1 - n2) + 
   (2*n2*j[p4, 1 + n1, 1 + n2, -1 + n3, 1, 0, 0, 0, -1, 1, 1, 1, 1, 1, 1])/
    (4 - 2*d + n1 + n2) - (2*n2*j[p4, 1 + n1, 1 + n2, n3, 1, 0, 0, -1, -1, 1, 
      1, 1, 1, 1, 1])/(4 - 2*d + n1 + n2) - 
   (2*n2*j[p4, 1 + n1, 1 + n2, n3, 1, 0, 0, 0, -2, 1, 1, 1, 1, 1, 1])/
    (4 - 2*d + n1 + n2) - (2*n2*j[p4, 1 + n1, 1 + n2, n3, 1, 0, 0, 0, -1, 1, 
      0, 1, 1, 1, 1])/(4 - 2*d + n1 + n2) + 
   (2*n2*j[p4, 1 + n1, 1 + n2, n3, 1, 0, 0, 0, -1, 1, 1, 1, 0, 1, 1])/
    (4 - 2*d + n1 + n2) - (4*n2*j[p4, 1 + n1, 1 + n2, n3, 1, 0, 0, 0, -1, 1, 
      1, 1, 1, 0, 1])/(4 - 2*d + n1 + n2) + 
   ((-2 - 2*n1)*j[p4, 2 + n1, n2, n3, 1, 0, 0, 0, -1, 1, 1, 1, 1, 0, 1])/
    (4 - 2*d + n1 + n2) + ((2 + 2*n1)*j[p4, 2 + n1, n2, n3, 1, 0, 0, 0, -1, 
      1, 1, 1, 1, 1, 1])/(4 - 2*d + n1 + n2), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 1 && n13 == 1 && n14 == 1 && n4 == 1 && 
    n5 == 0 && n6 == 0 && n7 == 0 && n8 == 0 && n9 == 1 && n1 != 0 -> 
  ((2 - d + n2 + n3)*j[p4, -1 + n1, n2, n3, 1, 0, 0, 0, 0, 1, 1, 1, 1, 2, 0])/
    (2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-2 + d - n2 - n3)*j[p4, -1 + n1, n2, n3, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 
      0])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-2*n3 + d*n3 - n2*n3 - n3^2)*j[p4, -1 + n1, n2, 1 + n3, 0, 0, 0, 0, 0, 
      1, 1, 1, 1, 1, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((2*n3 - d*n3 + n2*n3 + n3^2)*j[p4, -1 + n1, n2, 1 + n3, 1, 0, 0, 0, 0, 1, 
      1, 1, 1, 1, 0])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-2*n2 + d*n2 - n2^2 - n2*n3)*j[p4, -1 + n1, 1 + n2, n3, 1, 0, 0, 0, 0, 
      1, 1, 1, 0, 1, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) - 
   (2*n2*j[p4, -1 + n1, 1 + n2, n3, 1, 0, 0, 0, 0, 1, 1, 1, 0, 2, 1])/
    (6 - 5*d + d^2 + 8*n1 - 3*d*n1 + 2*n1^2) + 
   ((2*n2 - d*n2 + n2^2 + n2*n3)*j[p4, -1 + n1, 1 + n2, n3, 1, 0, 0, 0, 0, 1, 
      1, 1, 1, 0, 1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((12*n2 - 2*d*n2 + 8*n2^2)*j[p4, -1 + n1, 1 + n2, n3, 1, 0, 0, 0, 0, 1, 1, 
      1, 1, 1, 1])/(6 - 5*d + d^2 + 8*n1 - 3*d*n1 + 2*n1^2) + 
   (2*n2*j[p4, -1 + n1, 1 + n2, n3, 1, 0, 0, 0, 0, 1, 2, 1, 0, 1, 1])/
    (6 - 5*d + d^2 + 8*n1 - 3*d*n1 + 2*n1^2) - 
   (2*n2*j[p4, -1 + n1, 1 + n2, n3, 1, 0, 0, 0, 0, 1, 2, 1, 1, 0, 1])/
    (6 - 5*d + d^2 + 8*n1 - 3*d*n1 + 2*n1^2) + 
   ((8*n2 + 8*n2^2)*j[p4, -1 + n1, 2 + n2, -1 + n3, 1, 0, 0, 0, 0, 1, 1, 1, 
      1, 1, 1])/(6 - 5*d + d^2 + 8*n1 - 3*d*n1 + 2*n1^2) + 
   ((-8*n2 - 8*n2^2)*j[p4, -1 + n1, 2 + n2, n3, 1, 0, 0, -1, 0, 1, 1, 1, 1, 
      1, 1])/(6 - 5*d + d^2 + 8*n1 - 3*d*n1 + 2*n1^2) + 
   ((-8*n2 - 8*n2^2)*j[p4, -1 + n1, 2 + n2, n3, 1, 0, 0, 0, -1, 1, 1, 1, 1, 
      1, 1])/(6 - 5*d + d^2 + 8*n1 - 3*d*n1 + 2*n1^2) + 
   ((4*n2 + 4*n2^2)*j[p4, -1 + n1, 2 + n2, n3, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 
      1])/(6 - 5*d + d^2 + 8*n1 - 3*d*n1 + 2*n1^2) + 
   ((-8*n2 - 8*n2^2)*j[p4, -1 + n1, 2 + n2, n3, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 
      1])/(6 - 5*d + d^2 + 8*n1 - 3*d*n1 + 2*n1^2) + 
   ((2 - d + n2 + n3)*j[p4, n1, -1 + n2, n3, 1, 0, 0, 0, 0, 0, 2, 1, 1, 1, 
      1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-2 + d - n2 - n3)*j[p4, n1, -1 + n2, n3, 1, 0, 0, 0, 0, 1, 1, 0, 2, 1, 
      1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-2 + d - n2 - n3)*j[p4, n1, -1 + n2, n3, 1, 0, 0, 0, 0, 1, 1, 2, 0, 1, 
      1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-2 + d - n2 - n3)*j[p4, n1, -1 + n2, n3, 1, 0, 0, 0, 0, 1, 2, 0, 1, 1, 
      1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((2 - d + n2 + n3)*j[p4, n1, -1 + n2, n3, 1, 0, 0, 0, 0, 2, 1, 1, 1, 1, 
      0])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((2 - d + n2 + n3)*j[p4, n1, -1 + n2, n3, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 
      0])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-2*n3 + d*n3 - n2*n3 - n3^2)*j[p4, n1, -1 + n2, 1 + n3, 0, 0, 0, 0, 0, 
      1, 1, 1, 1, 1, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((2*n3 - d*n3 + n2*n3 + n3^2)*j[p4, n1, -1 + n2, 1 + n3, 1, 0, 0, 0, 0, 1, 
      1, 1, 1, 1, 0])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((2 - d + n2 + n3)*j[p4, n1, n2, -1 + n3, 1, 0, 0, 0, 0, 0, 2, 1, 1, 1, 
      1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-2 + d - n2 - n3)*j[p4, n1, n2, -1 + n3, 1, 0, 0, 0, 0, 1, 2, 0, 1, 1, 
      1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((2 - d + n2 + n3)*j[p4, n1, n2, -1 + n3, 2, 0, 0, 0, 0, 0, 1, 1, 1, 1, 
      1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-2 + d - n2 - n3)*j[p4, n1, n2, -1 + n3, 2, 0, 0, 0, 0, 1, 0, 1, 1, 1, 
      1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((2 - d + n2 + n3)*j[p4, n1, n2, -1 + n3, 2, 0, 0, 0, 0, 1, 1, 0, 1, 1, 
      1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-2*n3 + d*n3 - n2*n3 - n3^2)*j[p4, n1, n2, n3, 0, 0, 0, 0, 0, 1, 1, 1, 
      1, 1, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-2 + d - n2 - n3)*j[p4, n1, n2, n3, 0, 0, 0, 0, 0, 1, 1, 1, 2, 1, 1])/
    (2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-2 + d - n2 - n3)*j[p4, n1, n2, n3, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 1])/
    (2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((2 - d + n2 + n3)*j[p4, n1, n2, n3, 1, -1, 0, 0, 0, 1, 1, 0, 2, 1, 1])/
    (2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((2 - d + n2 + n3)*j[p4, n1, n2, n3, 1, -1, 0, 0, 0, 1, 1, 1, 0, 2, 1])/
    ((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((2 - d + n2 + n3)*j[p4, n1, n2, n3, 1, -1, 0, 0, 0, 1, 1, 2, 0, 1, 1])/
    (2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-2 + d - n2 - n3)*j[p4, n1, n2, n3, 1, -1, 0, 0, 0, 2, 1, 1, 1, 1, 0])/
    ((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((2 - d + n2 + n3)*j[p4, n1, n2, n3, 1, 0, -1, 0, 0, 1, 1, 0, 2, 1, 1])/
    (2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((2 - d + n2 + n3)*j[p4, n1, n2, n3, 1, 0, -1, 0, 0, 1, 1, 2, 0, 1, 1])/
    (2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((2 - d + n2 + n3)*j[p4, n1, n2, n3, 1, 0, -1, 0, 0, 1, 2, 0, 1, 1, 1])/
    ((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((2 - d + n2 + n3)*j[p4, n1, n2, n3, 1, 0, -1, 0, 0, 1, 2, 1, 0, 1, 1])/
    (2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-2 + d - n2 - n3)*j[p4, n1, n2, n3, 1, 0, -1, 0, 0, 1, 2, 1, 1, 0, 1])/
    (2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-2 + d - n2 - n3)*j[p4, n1, n2, n3, 1, 0, -1, 0, 0, 2, 1, 1, 1, 1, 0])/
    ((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-6 + 3*d - 3*n2 - 3*n3)*j[p4, n1, n2, n3, 1, 0, 0, -1, 0, 0, 2, 1, 1, 1, 
      1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((2 - d + n2 + n3)*j[p4, n1, n2, n3, 1, 0, 0, -1, 0, 1, 1, 0, 2, 1, 1])/
    (2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((2 - d + n2 + n3)*j[p4, n1, n2, n3, 1, 0, 0, -1, 0, 1, 1, 2, 0, 1, 1])/
    (2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((2 - d + n2 + n3)*j[p4, n1, n2, n3, 1, 0, 0, -1, 0, 1, 2, 0, 1, 1, 1])/
    ((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-2 + d - n2 - n3)*j[p4, n1, n2, n3, 1, 0, 0, -1, 0, 1, 2, 1, 0, 1, 1])/
    ((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((2 - d + n2 + n3)*j[p4, n1, n2, n3, 1, 0, 0, -1, 0, 1, 2, 1, 1, 0, 1])/
    ((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-2 + d - n2 - n3)*j[p4, n1, n2, n3, 1, 0, 0, -1, 0, 2, 1, 1, 1, 1, 0])/
    ((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-2 + d - n2 - n3)*j[p4, n1, n2, n3, 1, 0, 0, 0, -1, 0, 2, 1, 1, 1, 1])/
    (2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((2 - d + n2 + n3)*j[p4, n1, n2, n3, 1, 0, 0, 0, -1, 1, 1, 0, 2, 1, 1])/
    (2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-2 + d - n2 - n3)*j[p4, n1, n2, n3, 1, 0, 0, 0, -1, 1, 1, 1, 1, 2, 0])/
    ((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((2 - d + n2 + n3)*j[p4, n1, n2, n3, 1, 0, 0, 0, -1, 1, 1, 2, 0, 1, 1])/
    (2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((2 - d + n2 + n3)*j[p4, n1, n2, n3, 1, 0, 0, 0, -1, 1, 2, 0, 1, 1, 1])/
    ((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-2 + d - n2 - n3)*j[p4, n1, n2, n3, 1, 0, 0, 0, -1, 2, 1, 1, 1, 1, 0])/
    ((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((2 - d + 2*n1 - d*n1 + n2 + n1*n2 + n3 + n1*n3)*
     j[p4, n1, n2, n3, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1])/
    (2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-2 + d - n2 - n3)*j[p4, n1, n2, n3, 1, 0, 0, 0, 0, 0, 1, 2, 1, 1, 1])/
    (2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-2 + d - n2 - n3)*j[p4, n1, n2, n3, 1, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1])/
    (2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((2 - d - n2 + d*n2 - n2^2 - n3 + d*n3 - 2*n2*n3 - n3^2)*
     j[p4, n1, n2, n3, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1])/
    (2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-4 + 2*d - 2*n2 - d*n3 + n2*n3 + n3^2)*j[p4, n1, n2, n3, 1, 0, 0, 0, 0, 
      1, 1, 0, 1, 1, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-4 + 2*d - 2*n2 - 4*n3 + d*n3 - n2*n3 - n3^2)*j[p4, n1, n2, n3, 1, 0, 0, 
      0, 0, 1, 1, 1, 0, 1, 1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 
      2*n3)) + ((-2 + d + 2*n1 - d*n1 - n2 + n1*n2 - n3 + n1*n3)*
     j[p4, n1, n2, n3, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1])/
    (2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((10 - 5*d + 5*n2 + 7*n3 - d*n3 + n2*n3 + n3^2)*j[p4, n1, n2, n3, 1, 0, 0, 
      0, 0, 1, 1, 1, 1, 1, 0])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 
      2*n3)) + ((4 - d + 2*n1)*j[p4, n1, n2, n3, 1, 0, 0, 0, 0, 1, 1, 1, 1, 
      2, 0])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-2 + d - n2 - n3)*j[p4, n1, n2, n3, 1, 0, 0, 0, 0, 1, 1, 1, 2, 1, 0])/
    (2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-2 + d - n2 - n3)*j[p4, n1, n2, n3, 1, 0, 0, 0, 0, 1, 1, 2, 0, 1, 1])/
    (2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((28 - 24*d + 5*d^2 + 36*n1 - 14*d*n1 + 8*n1^2 + 38*n2 - 15*d*n2 + 
      14*n1*n2 + 8*n2^2 + 6*n3 - 3*d*n3 + 6*n1*n3 + 8*n2*n3)*
     j[p4, n1, n2, n3, 1, 0, 0, 0, 0, 1, 2, 1, 0, 1, 1])/
    (2*(6 - 5*d + d^2 + 8*n1 - 3*d*n1 + 2*n1^2)*(-8 + 3*d - 2*n1 - 2*n2 - 
      2*n3)) + ((-28 + 24*d - 5*d^2 - 36*n1 + 14*d*n1 - 8*n1^2 - 38*n2 + 
      15*d*n2 - 14*n1*n2 - 8*n2^2 - 6*n3 + 3*d*n3 - 6*n1*n3 - 8*n2*n3)*
     j[p4, n1, n2, n3, 1, 0, 0, 0, 0, 1, 2, 1, 1, 0, 1])/
    (2*(6 - 5*d + d^2 + 8*n1 - 3*d*n1 + 2*n1^2)*(-8 + 3*d - 2*n1 - 2*n2 - 
      2*n3)) + ((-2 + d - n2 - n3)*j[p4, n1, n2, n3, 1, 0, 0, 0, 0, 2, 1, 1, 
      1, 1, 0])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-2 + d - n2 - n3)*j[p4, n1, n2, n3, 2, -1, 0, 0, 0, 1, 1, 1, 1, 1, 0])/
    ((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-2 + d - n2 - n3)*j[p4, n1, n2, n3, 2, 0, -1, 0, 0, 1, 1, 1, 1, 1, 0])/
    ((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((2 - d + n2 + n3)*j[p4, n1, n2, n3, 2, 0, 0, -1, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((2 - d + n2 + n3)*j[p4, n1, n2, n3, 2, 0, 0, 0, -1, 1, 1, 1, 1, 1, 0])/
    (2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((4 - d + 2*n1)*j[p4, n1, n2, n3, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0])/
    ((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((6*n3 - 3*d*n3 + 3*n2*n3 + 3*n3^2)*j[p4, n1, n2, 1 + n3, 0, 0, 0, -1, 0, 
      1, 1, 1, 1, 1, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((6*n3 - 3*d*n3 + 3*n2*n3 + 3*n3^2)*j[p4, n1, n2, 1 + n3, 0, 0, 0, 0, -1, 
      1, 1, 1, 1, 1, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-4*n3 + d*n3 - 2*n1*n3)*j[p4, n1, n2, 1 + n3, 0, 0, 0, 0, 0, 1, 1, 1, 1, 
      1, 1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-6*n3 + 3*d*n3 - 3*n2*n3 - 3*n3^2)*j[p4, n1, n2, 1 + n3, 1, 0, 0, -1, 0, 
      1, 1, 1, 1, 1, 0])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-6*n3 + 3*d*n3 - 3*n2*n3 - 3*n3^2)*j[p4, n1, n2, 1 + n3, 1, 0, 0, 0, -1, 
      1, 1, 1, 1, 1, 0])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-6*n3 + 2*d*n3 - 2*n1*n3 - n2*n3 - n3^2)*j[p4, n1, n2, 1 + n3, 1, 0, 0, 
      0, 0, 1, 1, 1, 0, 1, 1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 
      2*n3)) + ((2*n3 - d*n3 + n2*n3 + n3^2)*j[p4, n1, n2, 1 + n3, 1, 0, 0, 
      0, 0, 1, 1, 1, 1, 0, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 
      2*n3)) + ((4*n3 - d*n3 + 2*n1*n3)*j[p4, n1, n2, 1 + n3, 1, 0, 0, 0, 0, 
      1, 1, 1, 1, 1, 0])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-2*n2 + d*n2 - n2^2 - n2*n3)*j[p4, n1, 1 + n2, -1 + n3, 1, 0, 0, 0, 0, 
      1, 0, 1, 1, 1, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-2*n2 + d*n2 - n2^2 - n2*n3)*j[p4, n1, 1 + n2, n3, 1, -1, 0, 0, 0, 1, 0, 
      1, 1, 1, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-2*n2 + d*n2 - n2^2 - n2*n3)*j[p4, n1, 1 + n2, n3, 1, -1, 0, 0, 0, 1, 1, 
      1, 0, 1, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((2*n2 - d*n2 + n2^2 + n2*n3)*j[p4, n1, 1 + n2, n3, 1, -1, 0, 0, 0, 1, 1, 
      1, 1, 0, 1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((2*n2 - d*n2 + n2^2 + n2*n3)*j[p4, n1, 1 + n2, n3, 1, 0, -1, 0, 0, 1, 0, 
      1, 1, 1, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((2*n2 - d*n2 + n2^2 + n2*n3)*j[p4, n1, 1 + n2, n3, 1, 0, -1, 0, 0, 1, 1, 
      1, 0, 1, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-2*n2 + d*n2 - n2^2 - n2*n3)*j[p4, n1, 1 + n2, n3, 1, 0, -1, 0, 0, 1, 1, 
      1, 1, 0, 1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((2*n2 - d*n2 + n2^2 + n2*n3)*j[p4, n1, 1 + n2, n3, 1, 0, 0, -1, 0, 1, 0, 
      1, 1, 1, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-2*n2 + d*n2 - n2^2 - n2*n3)*j[p4, n1, 1 + n2, n3, 1, 0, 0, -1, 0, 1, 1, 
      1, 0, 1, 1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((4*n2 - 2*d*n2 + 2*n2^2 + 2*n2*n3)*j[p4, n1, 1 + n2, n3, 1, 0, 0, -1, 0, 
      1, 1, 1, 1, 0, 1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((2*n2 - d*n2 + n2^2 + n2*n3)*j[p4, n1, 1 + n2, n3, 1, 0, 0, 0, -1, 1, 0, 
      1, 1, 1, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((2*n2 - d*n2 + n2^2 + n2*n3)*j[p4, n1, 1 + n2, n3, 1, 0, 0, 0, -1, 1, 1, 
      1, 0, 1, 1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-4*n2 + 2*d*n2 - 2*n2^2 - 2*n2*n3)*j[p4, n1, 1 + n2, n3, 1, 0, 0, 0, -1, 
      1, 1, 1, 1, 0, 1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) - 
   (2*n1*n2*j[p4, n1, 1 + n2, n3, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1])/
    (6 - 5*d + d^2 + 8*n1 - 3*d*n1 + 2*n1^2) + 
   ((-2*n2 + d*n2 - 2*n1*n2 - 4*n2^2)*j[p4, n1, 1 + n2, n3, 1, 0, 0, 0, 0, 1, 
      1, 1, 0, 1, 1])/(6 - 5*d + d^2 + 8*n1 - 3*d*n1 + 2*n1^2) + 
   (2*n2*j[p4, n1, 1 + n2, n3, 1, 0, 0, 0, 0, 1, 1, 1, 0, 2, 1])/
    (6 - 5*d + d^2 + 8*n1 - 3*d*n1 + 2*n1^2) + 
   ((6*n2 - 2*d*n2 + 2*n1*n2 + 8*n2^2)*j[p4, n1, 1 + n2, n3, 1, 0, 0, 0, 0, 
      1, 1, 1, 1, 0, 1])/(6 - 5*d + d^2 + 8*n1 - 3*d*n1 + 2*n1^2) + 
   ((-16*n2 + 4*d*n2 - 8*n2^2)*j[p4, n1, 1 + n2, n3, 1, 0, 0, 0, 0, 1, 1, 1, 
      1, 1, 1])/(6 - 5*d + d^2 + 8*n1 - 3*d*n1 + 2*n1^2) + 
   ((-4*n2 - 4*n2^2)*j[p4, n1, 2 + n2, -1 + n3, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 
      1])/(6 - 5*d + d^2 + 8*n1 - 3*d*n1 + 2*n1^2) + 
   ((4*n2 + 4*n2^2)*j[p4, n1, 2 + n2, n3, 1, 0, 0, -1, 0, 1, 0, 1, 1, 1, 1])/
    (6 - 5*d + d^2 + 8*n1 - 3*d*n1 + 2*n1^2) + 
   ((4*n2 + 4*n2^2)*j[p4, n1, 2 + n2, n3, 1, 0, 0, 0, -1, 1, 0, 1, 1, 1, 1])/
    (6 - 5*d + d^2 + 8*n1 - 3*d*n1 + 2*n1^2) + 
   ((6 - 2*d + 2*n1 + n2 + n3)*j[p4, 1 + n1, -1 + n2, n3, 1, 0, 0, 0, 0, 0, 
      1, 1, 1, 1, 2])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((10 - 3*d + 4*n1 + n2 + n3)*j[p4, 1 + n1, -1 + n2, n3, 1, 0, 0, 0, 0, 0, 
      2, 1, 1, 1, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-10 + 3*d - 4*n1 - n2 - n3)*j[p4, 1 + n1, -1 + n2, n3, 1, 0, 0, 0, 0, 1, 
      1, 0, 2, 1, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((2 - d + n2 + n3)*j[p4, 1 + n1, -1 + n2, n3, 1, 0, 0, 0, 0, 1, 1, 1, 1, 
      0, 2])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-10 + 3*d - 4*n1 - n2 - n3)*j[p4, 1 + n1, -1 + n2, n3, 1, 0, 0, 0, 0, 1, 
      1, 2, 0, 1, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-8 + 2*d - 4*n1)*j[p4, 1 + n1, -1 + n2, n3, 1, 0, 0, 0, 0, 1, 2, 0, 1, 
      1, 1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((14 - 5*d + 4*n1 + 3*n2 + 3*n3)*j[p4, 1 + n1, -1 + n2, n3, 1, 0, 0, 0, 0, 
      1, 2, 1, 0, 1, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-14 + 5*d - 4*n1 - 3*n2 - 3*n3)*j[p4, 1 + n1, -1 + n2, n3, 1, 0, 0, 0, 
      0, 1, 2, 1, 1, 0, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 
      2*n3)) + ((6 - 2*d + 2*n1 + n2 + n3)*j[p4, 1 + n1, -1 + n2, n3, 1, 0, 
      0, 0, 0, 2, 1, 1, 1, 1, 0])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 
      2*n3)) + ((-4 + d - 2*n1)*j[p4, 1 + n1, -1 + n2, n3, 2, 0, 0, 0, 0, 1, 
      1, 1, 1, 1, 0])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-10*n3 + 3*d*n3 - 4*n1*n3 - n2*n3 - n3^2)*j[p4, 1 + n1, -1 + n2, 1 + n3, 
      0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1])/(2*(-3 + d - n1)*
     (-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((6*n3 - 2*d*n3 + 2*n1*n3 + n2*n3 + n3^2)*j[p4, 1 + n1, -1 + n2, 1 + n3, 
      1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1])/((-3 + d - n1)*
     (-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-6*n3 + 2*d*n3 - 2*n1*n3 - n2*n3 - n3^2)*j[p4, 1 + n1, -1 + n2, 1 + n3, 
      1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1])/((-3 + d - n1)*
     (-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((6*n3 - 2*d*n3 + 2*n1*n3 + n2*n3 + n3^2)*j[p4, 1 + n1, -1 + n2, 1 + n3, 
      1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1])/((-3 + d - n1)*
     (-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((2*n3 - d*n3 + n2*n3 + n3^2)*j[p4, 1 + n1, -1 + n2, 1 + n3, 1, 0, 0, 0, 
      0, 1, 1, 1, 1, 0, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 
      2*n3)) + ((10*n3 - 3*d*n3 + 4*n1*n3 + n2*n3 + n3^2)*
     j[p4, 1 + n1, -1 + n2, 1 + n3, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((10 - 3*d + 4*n1 + n2 + n3)*j[p4, 1 + n1, n2, -1 + n3, 1, 0, 0, 0, 0, 0, 
      2, 1, 1, 1, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-10 + 3*d - 4*n1 - n2 - n3)*j[p4, 1 + n1, n2, -1 + n3, 1, 0, 0, 0, 0, 1, 
      2, 0, 1, 1, 1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-4 + d - 2*n1)*j[p4, 1 + n1, n2, -1 + n3, 2, 0, 0, 0, 0, 0, 1, 1, 1, 1, 
      1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((4 - d + 2*n1)*j[p4, 1 + n1, n2, -1 + n3, 2, 0, 0, 0, 0, 1, 0, 1, 1, 1, 
      1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-4 + d - 2*n1)*j[p4, 1 + n1, n2, -1 + n3, 2, 0, 0, 0, 0, 1, 1, 0, 1, 1, 
      1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((2 - d + n2 + n3)*j[p4, 1 + n1, n2, n3, 0, -1, 0, 0, 0, 1, 1, 1, 1, 1, 
      2])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((2 - d + n2 + n3)*j[p4, 1 + n1, n2, n3, 0, -1, 0, 0, 0, 2, 1, 1, 1, 1, 
      1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-4 + 2*d - 2*n2 - 12*n3 + 3*d*n3 - 4*n1*n3 - n2*n3 - n3^2)*
     j[p4, 1 + n1, n2, n3, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    (2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((6 - 2*d + 2*n1 + n2 + n3)*j[p4, 1 + n1, n2, n3, 0, 0, 0, 0, 0, 1, 1, 1, 
      1, 1, 2])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-10 + 3*d - 4*n1 - n2 - n3)*j[p4, 1 + n1, n2, n3, 0, 0, 0, 0, 0, 1, 1, 
      1, 2, 1, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-10 + 3*d - 4*n1 - n2 - n3)*j[p4, 1 + n1, n2, n3, 0, 0, 0, 0, 0, 1, 1, 
      2, 1, 1, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((6 - 2*d + 2*n1 + n2 + n3)*j[p4, 1 + n1, n2, n3, 0, 0, 0, 0, 0, 2, 1, 1, 
      1, 1, 1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-10 + 3*d - 4*n1 - n2 - n3)*j[p4, 1 + n1, n2, n3, 1, -1, 0, 0, 0, 0, 1, 
      1, 1, 1, 2])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((2*n1 - d*n1 + n1*n2 + n1*n3)*j[p4, 1 + n1, n2, n3, 1, -1, 0, 0, 0, 1, 1, 
      0, 1, 1, 1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((10 - 3*d + 4*n1 + n2 + n3)*j[p4, 1 + n1, n2, n3, 1, -1, 0, 0, 0, 1, 1, 
      0, 2, 1, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((2 - d + n2 + n3)*j[p4, 1 + n1, n2, n3, 1, -1, 0, 0, 0, 1, 1, 1, 0, 1, 
      2])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((10 - 3*d + 4*n1 + n2 + n3)*j[p4, 1 + n1, n2, n3, 1, -1, 0, 0, 0, 1, 1, 
      1, 0, 2, 1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((2*n1 - d*n1 + n1*n2 + n1*n3)*j[p4, 1 + n1, n2, n3, 1, -1, 0, 0, 0, 1, 1, 
      1, 1, 0, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-2 + d - n2 - n3)*j[p4, 1 + n1, n2, n3, 1, -1, 0, 0, 0, 1, 1, 1, 1, 0, 
      2])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((10 - 3*d + 4*n1 + n2 + n3)*j[p4, 1 + n1, n2, n3, 1, -1, 0, 0, 0, 1, 1, 
      2, 0, 1, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((2 - d + n2 + n3)*j[p4, 1 + n1, n2, n3, 1, -1, 0, 0, 0, 2, 1, 0, 1, 1, 
      1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-10 + 3*d - 4*n1 - n2 - n3)*j[p4, 1 + n1, n2, n3, 1, -1, 0, 0, 0, 2, 1, 
      1, 1, 1, 0])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-6 + 2*d - 2*n1 - n2 - n3)*j[p4, 1 + n1, n2, n3, 1, 0, -1, 0, 0, 0, 1, 
      1, 1, 1, 2])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((10 - 3*d + 4*n1 + n2 + n3)*j[p4, 1 + n1, n2, n3, 1, 0, -1, 0, 0, 1, 1, 
      0, 2, 1, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-2 + d - n2 - n3)*j[p4, 1 + n1, n2, n3, 1, 0, -1, 0, 0, 1, 1, 1, 1, 0, 
      2])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((10 - 3*d + 4*n1 + n2 + n3)*j[p4, 1 + n1, n2, n3, 1, 0, -1, 0, 0, 1, 1, 
      2, 0, 1, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((10 - 3*d + 4*n1 + n2 + n3)*j[p4, 1 + n1, n2, n3, 1, 0, -1, 0, 0, 1, 2, 
      0, 1, 1, 1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((10 - 3*d + 4*n1 + n2 + n3)*j[p4, 1 + n1, n2, n3, 1, 0, -1, 0, 0, 1, 2, 
      1, 0, 1, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-10 + 3*d - 4*n1 - n2 - n3)*j[p4, 1 + n1, n2, n3, 1, 0, -1, 0, 0, 1, 2, 
      1, 1, 0, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-6 + 2*d - 2*n1 - n2 - n3)*j[p4, 1 + n1, n2, n3, 1, 0, -1, 0, 0, 2, 1, 
      1, 1, 1, 0])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-6 + 2*d - 2*n1 - n2 - n3)*j[p4, 1 + n1, n2, n3, 1, 0, 0, -1, 0, 0, 1, 
      1, 1, 1, 2])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-30 + 9*d - 12*n1 - 3*n2 - 3*n3)*j[p4, 1 + n1, n2, n3, 1, 0, 0, -1, 0, 
      0, 2, 1, 1, 1, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((10 - 3*d + 4*n1 + n2 + n3)*j[p4, 1 + n1, n2, n3, 1, 0, 0, -1, 0, 1, 1, 
      0, 2, 1, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-2 + d - n2 - n3)*j[p4, 1 + n1, n2, n3, 1, 0, 0, -1, 0, 1, 1, 1, 1, 0, 
      2])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((10 - 3*d + 4*n1 + n2 + n3)*j[p4, 1 + n1, n2, n3, 1, 0, 0, -1, 0, 1, 1, 
      2, 0, 1, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((10 - 3*d + 4*n1 + n2 + n3)*j[p4, 1 + n1, n2, n3, 1, 0, 0, -1, 0, 1, 2, 
      0, 1, 1, 1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-10 + 3*d - 4*n1 - n2 - n3)*j[p4, 1 + n1, n2, n3, 1, 0, 0, -1, 0, 1, 2, 
      1, 0, 1, 1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((10 - 3*d + 4*n1 + n2 + n3)*j[p4, 1 + n1, n2, n3, 1, 0, 0, -1, 0, 1, 2, 
      1, 1, 0, 1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-6 + 2*d - 2*n1 - n2 - n3)*j[p4, 1 + n1, n2, n3, 1, 0, 0, -1, 0, 2, 1, 
      1, 1, 1, 0])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-2*n1 + d*n1 - n1*n2 - n1*n3)*j[p4, 1 + n1, n2, n3, 1, 0, 0, 0, -1, 0, 
      1, 1, 1, 1, 1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-6 + 2*d - 2*n1 - n2 - n3)*j[p4, 1 + n1, n2, n3, 1, 0, 0, 0, -1, 0, 1, 
      1, 1, 1, 2])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-10 + 3*d - 4*n1 - n2 - n3)*j[p4, 1 + n1, n2, n3, 1, 0, 0, 0, -1, 0, 2, 
      1, 1, 1, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((6 - 2*d + 2*n1 + n2 + n3)*j[p4, 1 + n1, n2, n3, 1, 0, 0, 0, -1, 1, 1, 0, 
      2, 1, 1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-2*n1 + d*n1 - n1*n2 - n1*n3)*j[p4, 1 + n1, n2, n3, 1, 0, 0, 0, -1, 1, 
      1, 1, 1, 0, 1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-2 + d - n2 - n3)*j[p4, 1 + n1, n2, n3, 1, 0, 0, 0, -1, 1, 1, 1, 1, 0, 
      2])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-10 + 3*d - 4*n1 - n2 - n3)*j[p4, 1 + n1, n2, n3, 1, 0, 0, 0, -1, 1, 1, 
      1, 1, 2, 0])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((6 - 2*d + 2*n1 + n2 + n3)*j[p4, 1 + n1, n2, n3, 1, 0, 0, 0, -1, 1, 1, 2, 
      0, 1, 1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((10 - 3*d + 4*n1 + n2 + n3)*j[p4, 1 + n1, n2, n3, 1, 0, 0, 0, -1, 1, 2, 
      0, 1, 1, 1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-6 + 2*d - 2*n1 - n2 - n3)*j[p4, 1 + n1, n2, n3, 1, 0, 0, 0, -1, 2, 1, 
      1, 1, 1, 0])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((42 - 13*d + 24*n1 - 2*d*n1 + 4*n1^2 + 5*n2 + 5*n3)*
     j[p4, 1 + n1, n2, n3, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1])/
    (2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-10 + 3*d - 4*n1 - n2 - n3)*j[p4, 1 + n1, n2, n3, 1, 0, 0, 0, 0, 0, 1, 
      2, 1, 1, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-10 + 3*d - 4*n1 - n2 - n3)*j[p4, 1 + n1, n2, n3, 1, 0, 0, 0, 0, 0, 2, 
      1, 1, 1, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-6 + d - 2*d*n1 + 3*n2 - d*n2 + 2*n1*n2 + n2^2 + 9*n3 - 2*d*n3 + 
      6*n1*n3 + n2*n3)*j[p4, 1 + n1, n2, n3, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 
      1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-30 + 11*d - 12*n1 + 2*d*n1 - 7*n2 - 2*n1*n2 - 15*n3 + 2*d*n3 - 6*n1*n3)*
     j[p4, 1 + n1, n2, n3, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1])/
    (2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-60 + 20*d - 20*n1 + 8*n2 - 7*d*n2 + 4*n1*n2 + 5*n2^2 - 22*n3 + 4*d*n3 - 
      4*n1*n3 + 3*n2*n3 - 2*n3^2)*j[p4, 1 + n1, n2, n3, 1, 0, 0, 0, 0, 1, 1, 
      1, 0, 1, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((6 - 2*d + 2*n1 + n2 + n3)*j[p4, 1 + n1, n2, n3, 1, 0, 0, 0, 0, 1, 1, 1, 
      0, 1, 2])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-76 + 68*d - 15*d^2 - 96*n1 + 42*d*n1 - d^2*n1 - 20*n1^2 + 2*d*n1^2 + 
      50*n2 - 53*d*n2 + 14*d^2*n2 + 32*n1*n2 - 23*d*n1*n2 + 6*n1^2*n2 + 
      20*n2^2 - 10*d*n2^2 + 12*n1*n2^2 - 26*n3 + 15*d*n3 - d^2*n3 - 
      28*n1*n3 + 3*d*n1*n3 - 2*n1^2*n3 + 18*n2*n3 - 9*d*n2*n3 + 10*n1*n2*n3 - 
      2*n3^2 + d*n3^2 - 2*n1*n3^2)*j[p4, 1 + n1, n2, n3, 1, 0, 0, 0, 0, 1, 1, 
      1, 1, 0, 1])/(2*(6 - 5*d + d^2 + 8*n1 - 3*d*n1 + 2*n1^2)*
     (-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-2 + d - n2 - n3)*j[p4, 1 + n1, n2, n3, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 
      2])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((32 - 10*d + 12*n1 + 4*n2 + 14*n3 - 3*d*n3 + 4*n1*n3 + n2*n3 + n3^2)*
     j[p4, 1 + n1, n2, n3, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-40 + 50*d - 21*d^2 + 3*d^3 - 60*n1 + 46*d*n1 - 9*d^2*n1 - 24*n1^2 + 
      8*d*n1^2 - 4*n1^3 - 40*n2 + 36*d*n2 - 8*d^2*n2 - 16*n1*n2 + 8*d*n1*n2 - 
      8*n2^2 + 4*d*n2^2 + 2*d*n3 - d^2*n3 + 4*n1*n3 + 4*n1^2*n3 - 8*n2*n3 + 
      4*d*n2*n3)*j[p4, 1 + n1, n2, n3, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    ((6 - 5*d + d^2 + 8*n1 - 3*d*n1 + 2*n1^2)*(-8 + 3*d - 2*n1 - 2*n2 - 
      2*n3)) + ((-10 + 3*d - 4*n1 - n2 - n3)*j[p4, 1 + n1, n2, n3, 1, 0, 0, 
      0, 0, 1, 1, 1, 1, 2, 0])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 
      2*n3)) + ((-2 + d - n2 - n3)*j[p4, 1 + n1, n2, n3, 1, 0, 0, 0, 0, 1, 1, 
      1, 2, 0, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-10 + 3*d - 4*n1 - n2 - n3)*j[p4, 1 + n1, n2, n3, 1, 0, 0, 0, 0, 1, 1, 
      1, 2, 1, 0])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((10 - 3*d + 4*n1 + n2 + n3)*j[p4, 1 + n1, n2, n3, 1, 0, 0, 0, 0, 1, 2, 0, 
      1, 1, 1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((6 - 2*d + 2*n1 + n2 + n3)*j[p4, 1 + n1, n2, n3, 1, 0, 0, 0, 0, 2, 1, 0, 
      1, 1, 1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-10 + 3*d - 4*n1 - n2 - n3)*j[p4, 1 + n1, n2, n3, 2, -1, 0, 0, 0, 0, 1, 
      1, 1, 1, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((10 - 3*d + 4*n1 + n2 + n3)*j[p4, 1 + n1, n2, n3, 2, -1, 0, 0, 0, 1, 0, 
      1, 1, 1, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-10 + 3*d - 4*n1 - n2 - n3)*j[p4, 1 + n1, n2, n3, 2, -1, 0, 0, 0, 1, 1, 
      0, 1, 1, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-10 + 3*d - 4*n1 - n2 - n3)*j[p4, 1 + n1, n2, n3, 2, -1, 0, 0, 0, 1, 1, 
      1, 1, 1, 0])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-6 + 2*d - 2*n1 - n2 - n3)*j[p4, 1 + n1, n2, n3, 2, 0, -1, 0, 0, 0, 1, 
      1, 1, 1, 1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((6 - 2*d + 2*n1 + n2 + n3)*j[p4, 1 + n1, n2, n3, 2, 0, -1, 0, 0, 1, 0, 1, 
      1, 1, 1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-6 + 2*d - 2*n1 - n2 - n3)*j[p4, 1 + n1, n2, n3, 2, 0, -1, 0, 0, 1, 1, 
      0, 1, 1, 1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-6 + 2*d - 2*n1 - n2 - n3)*j[p4, 1 + n1, n2, n3, 2, 0, -1, 0, 0, 1, 1, 
      1, 1, 1, 0])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((10 - 3*d + 4*n1 + n2 + n3)*j[p4, 1 + n1, n2, n3, 2, 0, 0, -1, 0, 0, 1, 
      1, 1, 1, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-10 + 3*d - 4*n1 - n2 - n3)*j[p4, 1 + n1, n2, n3, 2, 0, 0, -1, 0, 1, 0, 
      1, 1, 1, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((10 - 3*d + 4*n1 + n2 + n3)*j[p4, 1 + n1, n2, n3, 2, 0, 0, -1, 0, 1, 1, 
      0, 1, 1, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((18 - 5*d + 8*n1 + n2 + n3)*j[p4, 1 + n1, n2, n3, 2, 0, 0, -1, 0, 1, 1, 
      1, 1, 1, 0])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((6 - 2*d + 2*n1 + n2 + n3)*j[p4, 1 + n1, n2, n3, 2, 0, 0, 0, -1, 0, 1, 1, 
      1, 1, 1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-6 + 2*d - 2*n1 - n2 - n3)*j[p4, 1 + n1, n2, n3, 2, 0, 0, 0, -1, 1, 0, 
      1, 1, 1, 1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((6 - 2*d + 2*n1 + n2 + n3)*j[p4, 1 + n1, n2, n3, 2, 0, 0, 0, -1, 1, 1, 0, 
      1, 1, 1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((10 - 3*d + 4*n1 + n2 + n3)*j[p4, 1 + n1, n2, n3, 2, 0, 0, 0, -1, 1, 1, 
      1, 1, 1, 0])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((30*n3 - 9*d*n3 + 12*n1*n3 + 3*n2*n3 + 3*n3^2)*j[p4, 1 + n1, n2, 1 + n3, 
      0, 0, 0, -1, 0, 1, 1, 1, 1, 1, 1])/(2*(-3 + d - n1)*
     (-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((30*n3 - 9*d*n3 + 12*n1*n3 + 3*n2*n3 + 3*n3^2)*j[p4, 1 + n1, n2, 1 + n3, 
      0, 0, 0, 0, -1, 1, 1, 1, 1, 1, 1])/(2*(-3 + d - n1)*
     (-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((10*n3 - 3*d*n3 + 4*n1*n3 + n2*n3 + n3^2)*j[p4, 1 + n1, n2, 1 + n3, 0, 0, 
      0, 0, 0, 1, 1, 1, 1, 1, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 
      2*n3)) + ((-22*n3 + 7*d*n3 - 8*n1*n3 - 3*n2*n3 - 3*n3^2)*
     j[p4, 1 + n1, n2, 1 + n3, 1, 0, 0, -1, 0, 1, 0, 1, 1, 1, 1])/
    (2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((22*n3 - 7*d*n3 + 8*n1*n3 + 3*n2*n3 + 3*n3^2)*j[p4, 1 + n1, n2, 1 + n3, 
      1, 0, 0, -1, 0, 1, 1, 0, 1, 1, 1])/(2*(-3 + d - n1)*
     (-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-4*n3 + d*n3 - 2*n1*n3)*j[p4, 1 + n1, n2, 1 + n3, 1, 0, 0, -1, 0, 1, 1, 
      1, 0, 1, 1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-6*n3 + 3*d*n3 - 3*n2*n3 - 3*n3^2)*j[p4, 1 + n1, n2, 1 + n3, 1, 0, 0, 
      -1, 0, 1, 1, 1, 1, 0, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 
      2*n3)) + ((-30*n3 + 9*d*n3 - 12*n1*n3 - 3*n2*n3 - 3*n3^2)*
     j[p4, 1 + n1, n2, 1 + n3, 1, 0, 0, -1, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-12*n3 + 4*d*n3 - 4*n1*n3 - 2*n2*n3 - 2*n3^2)*j[p4, 1 + n1, n2, 1 + n3, 
      1, 0, 0, 0, -1, 1, 0, 1, 1, 1, 1])/((-3 + d - n1)*
     (-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((12*n3 - 4*d*n3 + 4*n1*n3 + 2*n2*n3 + 2*n3^2)*j[p4, 1 + n1, n2, 1 + n3, 
      1, 0, 0, 0, -1, 1, 1, 0, 1, 1, 1])/((-3 + d - n1)*
     (-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-6*n3 + 2*d*n3 - 2*n1*n3 - n2*n3 - n3^2)*j[p4, 1 + n1, n2, 1 + n3, 1, 0, 
      0, 0, -1, 1, 1, 1, 0, 1, 1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 
      2*n3)) + ((-6*n3 + 3*d*n3 - 3*n2*n3 - 3*n3^2)*
     j[p4, 1 + n1, n2, 1 + n3, 1, 0, 0, 0, -1, 1, 1, 1, 1, 0, 1])/
    (2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-30*n3 + 9*d*n3 - 12*n1*n3 - 3*n2*n3 - 3*n3^2)*
     j[p4, 1 + n1, n2, 1 + n3, 1, 0, 0, 0, -1, 1, 1, 1, 1, 1, 0])/
    (2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((6*n3 - 2*d*n3 + 2*n1*n3 + n2*n3 + n3^2)*j[p4, 1 + n1, n2, 1 + n3, 1, 0, 
      0, 0, 0, 1, 1, 1, 0, 1, 1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 
      2*n3)) + ((-2*n3 + d*n3 - n2*n3 - n3^2)*j[p4, 1 + n1, n2, 1 + n3, 1, 0, 
      0, 0, 0, 1, 1, 1, 1, 0, 1])/(2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 
      2*n3)) + ((-10*n3 + 3*d*n3 - 4*n1*n3 - n2*n3 - n3^2)*
     j[p4, 1 + n1, n2, 1 + n3, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) - 
   (n2*j[p4, 1 + n1, 1 + n2, -1 + n3, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1])/
    (-3 + d - n1) + ((-10*n2 + 3*d*n2 - 4*n1*n2 - n2^2 - n2*n3)*
     j[p4, 1 + n1, 1 + n2, n3, 1, -1, 0, 0, 0, 1, 0, 1, 1, 1, 1])/
    (2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-10*n2 + 3*d*n2 - 4*n1*n2 - n2^2 - n2*n3)*j[p4, 1 + n1, 1 + n2, n3, 1, 
      -1, 0, 0, 0, 1, 1, 1, 0, 1, 1])/(2*(-3 + d - n1)*
     (-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((10*n2 - 3*d*n2 + 4*n1*n2 + n2^2 + n2*n3)*j[p4, 1 + n1, 1 + n2, n3, 1, 
      -1, 0, 0, 0, 1, 1, 1, 1, 0, 1])/((-3 + d - n1)*
     (-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((10*n2 - 3*d*n2 + 4*n1*n2 + n2^2 + n2*n3)*j[p4, 1 + n1, 1 + n2, n3, 1, 0, 
      -1, 0, 0, 1, 0, 1, 1, 1, 1])/(2*(-3 + d - n1)*
     (-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((10*n2 - 3*d*n2 + 4*n1*n2 + n2^2 + n2*n3)*j[p4, 1 + n1, 1 + n2, n3, 1, 0, 
      -1, 0, 0, 1, 1, 1, 0, 1, 1])/(2*(-3 + d - n1)*
     (-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-10*n2 + 3*d*n2 - 4*n1*n2 - n2^2 - n2*n3)*j[p4, 1 + n1, 1 + n2, n3, 1, 
      0, -1, 0, 0, 1, 1, 1, 1, 0, 1])/((-3 + d - n1)*
     (-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-10*n2 + 4*d*n2 - 2*n1*n2 - 3*n2^2 - 3*n2*n3)*j[p4, 1 + n1, 1 + n2, n3, 
      1, 0, 0, -1, 0, 1, 0, 1, 1, 1, 1])/((-3 + d - n1)*
     (-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-10*n2 + 3*d*n2 - 4*n1*n2 - n2^2 - n2*n3)*j[p4, 1 + n1, 1 + n2, n3, 1, 
      0, 0, -1, 0, 1, 1, 1, 0, 1, 1])/((-3 + d - n1)*
     (-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((20*n2 - 6*d*n2 + 8*n1*n2 + 2*n2^2 + 2*n2*n3)*j[p4, 1 + n1, 1 + n2, n3, 
      1, 0, 0, -1, 0, 1, 1, 1, 1, 0, 1])/((-3 + d - n1)*
     (-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-8*n2 + 2*d*n2 - 4*n1*n2)*j[p4, 1 + n1, 1 + n2, n3, 1, 0, 0, -1, 0, 1, 
      1, 1, 1, 1, 1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-6*n2 + 2*d*n2 - 2*n1*n2 - n2^2 - n2*n3)*j[p4, 1 + n1, 1 + n2, n3, 1, 0, 
      0, 0, -1, 1, 0, 1, 1, 1, 1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 
      2*n3)) + ((10*n2 - 3*d*n2 + 4*n1*n2 + n2^2 + n2*n3)*
     j[p4, 1 + n1, 1 + n2, n3, 1, 0, 0, 0, -1, 1, 1, 1, 0, 1, 1])/
    ((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-20*n2 + 6*d*n2 - 8*n1*n2 - 2*n2^2 - 2*n2*n3)*j[p4, 1 + n1, 1 + n2, n3, 
      1, 0, 0, 0, -1, 1, 1, 1, 1, 0, 1])/((-3 + d - n1)*
     (-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((8*n2 - 2*d*n2 + 4*n1*n2)*j[p4, 1 + n1, 1 + n2, n3, 1, 0, 0, 0, -1, 1, 1, 
      1, 1, 1, 1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   (2*n1*n2*j[p4, 1 + n1, 1 + n2, n3, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1])/
    (6 - 5*d + d^2 + 8*n1 - 3*d*n1 + 2*n1^2) + 
   ((-2 + d - 2*n1 + d*n1 - n2 - n1*n2 - n3 - n1*n3)*
     j[p4, 2 + n1, -1 + n2, n3, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1])/
    ((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((4 - 2*d + 4*n1 - 2*d*n1 + 2*n2 + 2*n1*n2 + 2*n3 + 2*n1*n3)*
     j[p4, 2 + n1, -1 + n2, n3, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    ((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((10 - 3*d + 14*n1 - 3*d*n1 + 4*n1^2 + n2 + n1*n2 + n3 + n1*n3)*
     j[p4, 2 + n1, n2, n3, 1, -1, 0, 0, 0, 1, 1, 0, 1, 1, 1])/
    ((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((10 - 3*d + 14*n1 - 3*d*n1 + 4*n1^2 + n2 + n1*n2 + n3 + n1*n3)*
     j[p4, 2 + n1, n2, n3, 1, -1, 0, 0, 0, 1, 1, 1, 1, 0, 1])/
    (2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-10 + 3*d - 14*n1 + 3*d*n1 - 4*n1^2 - n2 - n1*n2 - n3 - n1*n3)*
     j[p4, 2 + n1, n2, n3, 1, 0, 0, 0, -1, 0, 1, 1, 1, 1, 1])/
    ((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-10 + 3*d - 14*n1 + 3*d*n1 - 4*n1^2 - n2 - n1*n2 - n3 - n1*n3)*
     j[p4, 2 + n1, n2, n3, 1, 0, 0, 0, -1, 1, 1, 1, 1, 0, 1])/
    ((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((8 - 2*d + 12*n1 - 2*d*n1 + 4*n1^2)*j[p4, 2 + n1, n2, n3, 1, 0, 0, 0, -1, 
      1, 1, 1, 1, 1, 1])/((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-10 + 3*d - 14*n1 + 3*d*n1 - 4*n1^2 - n2 - n1*n2 - n3 - n1*n3)*
     j[p4, 2 + n1, n2, n3, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1])/
    (2*(-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((-2 + d - 2*n1 + d*n1 - n2 - n1*n2 - n3 - n1*n3)*
     j[p4, 2 + n1, n2, n3, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1])/
    ((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)) + 
   ((2 - d + 2*n1 - d*n1 + n2 + n1*n2 + n3 + n1*n3)*
     j[p4, 2 + n1, n2, n3, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1])/
    ((-3 + d - n1)*(-8 + 3*d - 2*n1 - 2*n2 - 2*n3)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 1 && n13 == 1 && n14 == 1 && 
    n2 == n3 && n4 == 1 && n6 == 0 && n7 == 0 && n8 == 0 && n9 == 1 && 
    n5 != 0 -> ((-9 + 3*d - 3*n3 - 2*n5)*j[p4, -1, n3, n3, 1, 1 + n5, 0, 0, 
      0, 0, 2, 1, 1, 1, 1])/((-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((-36*n3 + 30*d*n3 - 6*d^2*n3 - 12*n3^2 + 6*d*n3^2 - 16*n3*n5 + 
      6*d*n3*n5 - 4*n3*n5^2)*j[p4, -1, n3, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 
      1, 1, 1])/((14 - 5*d + 6*n3 + 2*n5)*(6 - 5*d + d^2 + 5*n5 - 2*d*n5 + 
      n5^2)) - j[p4, -1, n3, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 2, 0]/
    (2*(-3 + d - n5)) + ((-9 + 3*d - 3*n3 - 2*n5)*j[p4, -1, n3, n3, 1, 
      1 + n5, 0, 0, 0, 1, 2, 1, 0, 1, 1])/((-14 + 5*d - 6*n3 - 2*n5)*
     (-3 + d - n5)) + ((9 - 3*d + 3*n3 + 2*n5)*j[p4, -1, n3, n3, 1, 1 + n5, 
      0, 0, 0, 1, 2, 1, 1, 0, 1])/((-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((-1 - n5)*j[p4, -1, n3, n3, 1, 2 + n5, 0, 0, 0, 1, 1, 1, 1, 0, 1])/
    (2*(-3 + d - n5)) + ((1 + n5)*j[p4, -1, n3, n3, 1, 2 + n5, 0, 0, 0, 1, 1, 
      1, 1, 1, 0])/(2*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, -1, n3, n3, 2, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((4*n3 - d*n3 + 2*n3*n5)*j[p4, -1, n3, 1 + n3, 0, 1 + n5, 0, 0, 0, 1, 1, 
      1, 1, 1, 1])/(2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((-4*n3 + d*n3 - 2*n3*n5)*j[p4, -1, n3, 1 + n3, 1, 1 + n5, 0, 0, 0, 1, 1, 
      1, 1, 1, 0])/(2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((-36*n3 + 30*d*n3 - 6*d^2*n3 - 12*n3^2 + 6*d*n3^2 - 16*n3*n5 + 
      6*d*n3*n5 - 4*n3*n5^2)*j[p4, -1, 1 + n3, -1 + n3, 1, 1 + n5, 0, 0, 0, 
      1, 1, 1, 1, 1, 1])/((14 - 5*d + 6*n3 + 2*n5)*(6 - 5*d + d^2 + 5*n5 - 
      2*d*n5 + n5^2)) + ((-10*n3 + 4*d*n3 - 6*n3^2)*
     j[p4, -1, 1 + n3, n3, 1, n5, 0, 0, 0, 1, 1, 1, 0, 2, 1])/
    ((14 - 5*d + 6*n3 + 2*n5)*(6 - 5*d + d^2 + 5*n5 - 2*d*n5 + n5^2)) + 
   ((60*n3 - 34*d*n3 + 4*d^2*n3 + 76*n3^2 - 22*d*n3^2 + 24*n3^3)*
     j[p4, -1, 1 + n3, n3, 1, n5, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    ((14 - 5*d + 6*n3 + 2*n5)*(6 - 5*d + d^2 + 5*n5 - 2*d*n5 + n5^2)) + 
   ((10*n3 - 4*d*n3 + 6*n3^2)*j[p4, -1, 1 + n3, n3, 1, n5, 0, 0, 0, 1, 2, 1, 
      0, 1, 1])/((14 - 5*d + 6*n3 + 2*n5)*(6 - 5*d + d^2 + 5*n5 - 2*d*n5 + 
      n5^2)) + ((-10*n3 + 4*d*n3 - 6*n3^2)*j[p4, -1, 1 + n3, n3, 1, n5, 0, 0, 
      0, 1, 2, 1, 1, 0, 1])/((14 - 5*d + 6*n3 + 2*n5)*
     (6 - 5*d + d^2 + 5*n5 - 2*d*n5 + n5^2)) + 
   ((-36*n3 + 30*d*n3 - 6*d^2*n3 - 12*n3^2 + 6*d*n3^2 - 16*n3*n5 + 
      6*d*n3*n5 - 4*n3*n5^2)*j[p4, -1, 1 + n3, n3, 1, 1 + n5, -1, 0, 0, 1, 1, 
      1, 1, 1, 1])/((-14 + 5*d - 6*n3 - 2*n5)*(6 - 5*d + d^2 + 5*n5 - 
      2*d*n5 + n5^2)) + ((-36*n3 + 30*d*n3 - 6*d^2*n3 - 12*n3^2 + 6*d*n3^2 - 
      16*n3*n5 + 6*d*n3*n5 - 4*n3*n5^2)*j[p4, -1, 1 + n3, n3, 1, 1 + n5, 0, 
      -1, 0, 1, 1, 1, 1, 1, 1])/((-14 + 5*d - 6*n3 - 2*n5)*
     (6 - 5*d + d^2 + 5*n5 - 2*d*n5 + n5^2)) + 
   ((-36*n3 + 30*d*n3 - 6*d^2*n3 - 12*n3^2 + 6*d*n3^2 - 16*n3*n5 + 
      6*d*n3*n5 - 4*n3*n5^2)*j[p4, -1, 1 + n3, n3, 1, 1 + n5, 0, 0, -1, 1, 1, 
      1, 1, 1, 1])/((-14 + 5*d - 6*n3 - 2*n5)*(6 - 5*d + d^2 + 5*n5 - 
      2*d*n5 + n5^2)) + ((-32*n3 + 11*d*n3 - 12*n3^2 - 6*n3*n5)*
     j[p4, -1, 1 + n3, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((-64*n3 + 54*d*n3 - 11*d^2*n3 - 24*n3^2 + 12*d*n3^2 - 34*n3*n5 + 
      13*d*n3*n5 - 6*n3^2*n5 - 6*n3*n5^2)*j[p4, -1, 1 + n3, n3, 1, 1 + n5, 0, 
      0, 0, 1, 1, 1, 1, 0, 1])/((-14 + 5*d - 6*n3 - 2*n5)*
     (6 - 5*d + d^2 + 5*n5 - 2*d*n5 + n5^2)) + 
   ((10*n3*n5 - 4*d*n3*n5 + 6*n3^2*n5)*j[p4, -1, 1 + n3, n3, 1, 1 + n5, 0, 0, 
      0, 1, 1, 1, 1, 1, 0])/((14 - 5*d + 6*n3 + 2*n5)*
     (6 - 5*d + d^2 + 5*n5 - 2*d*n5 + n5^2)) + 
   ((40*n3 - 16*d*n3 + 64*n3^2 - 16*d*n3^2 + 24*n3^3)*
     j[p4, -1, 2 + n3, -1 + n3, 1, n5, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    ((14 - 5*d + 6*n3 + 2*n5)*(6 - 5*d + d^2 + 5*n5 - 2*d*n5 + n5^2)) + 
   ((-40*n3 + 16*d*n3 - 64*n3^2 + 16*d*n3^2 - 24*n3^3)*
     j[p4, -1, 2 + n3, n3, 1, n5, 0, -1, 0, 1, 1, 1, 1, 1, 1])/
    ((14 - 5*d + 6*n3 + 2*n5)*(6 - 5*d + d^2 + 5*n5 - 2*d*n5 + n5^2)) + 
   ((-40*n3 + 16*d*n3 - 64*n3^2 + 16*d*n3^2 - 24*n3^3)*
     j[p4, -1, 2 + n3, n3, 1, n5, 0, 0, -1, 1, 1, 1, 1, 1, 1])/
    ((14 - 5*d + 6*n3 + 2*n5)*(6 - 5*d + d^2 + 5*n5 - 2*d*n5 + n5^2)) + 
   ((20*n3 - 8*d*n3 + 32*n3^2 - 8*d*n3^2 + 12*n3^3)*
     j[p4, -1, 2 + n3, n3, 1, n5, 0, 0, 0, 1, 1, 1, 0, 1, 1])/
    ((14 - 5*d + 6*n3 + 2*n5)*(6 - 5*d + d^2 + 5*n5 - 2*d*n5 + n5^2)) + 
   ((-40*n3 + 16*d*n3 - 64*n3^2 + 16*d*n3^2 - 24*n3^3)*
     j[p4, -1, 2 + n3, n3, 1, n5, 0, 0, 0, 1, 1, 1, 1, 0, 1])/
    ((14 - 5*d + 6*n3 + 2*n5)*(6 - 5*d + d^2 + 5*n5 - 2*d*n5 + n5^2)) + 
   ((-4 + d - 2*n5)*j[p4, 0, -1 + n3, n3, 1, 1 + n5, 0, 0, 0, 0, 2, 1, 1, 1, 
      1])/(2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, -1 + n3, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 0, 2, 1, 
      1])/(2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, -1 + n3, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 2, 0, 1, 
      1])/(2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((9 - 3*d + 3*n3 + 2*n5)*j[p4, 0, -1 + n3, n3, 1, 1 + n5, 0, 0, 0, 1, 2, 
      1, 0, 1, 1])/((-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((-9 + 3*d - 3*n3 - 2*n5)*j[p4, 0, -1 + n3, n3, 1, 1 + n5, 0, 0, 0, 1, 2, 
      1, 1, 0, 1])/((-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((-5 + 2*d - 3*n3 - 5*n5 + 2*d*n5 - 3*n3*n5)*j[p4, 0, -1 + n3, n3, 1, 
      2 + n5, 0, 0, 0, 1, 1, 1, 1, 0, 1])/((-14 + 5*d - 6*n3 - 2*n5)*
     (-3 + d - n5)) + ((5 - 2*d + 3*n3 + 5*n5 - 2*d*n5 + 3*n3*n5)*
     j[p4, 0, -1 + n3, n3, 1, 2 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 0])/
    ((-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, -1 + n3, n3, 2, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 
      0])/(2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((4*n3 - d*n3 + 2*n3*n5)*j[p4, 0, -1 + n3, 1 + n3, 0, 1 + n5, 0, 0, 0, 1, 
      1, 1, 1, 1, 1])/(2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((-4*n3 + d*n3 - 2*n3*n5)*j[p4, 0, -1 + n3, 1 + n3, 1, 1 + n5, 0, 0, 0, 1, 
      1, 1, 1, 1, 0])/(2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((-22 + 7*d - 6*n3 - 6*n5)*j[p4, 0, n3, -1 + n3, 1, 1 + n5, 0, 0, 0, 0, 2, 
      1, 1, 1, 1])/(2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((-12 + 7*d - d^2 - 4*n3 + d*n3 - 6*n5 + 2*d*n5 - 2*n3*n5)*
     j[p4, 0, n3, -1 + n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    ((-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((5 - 2*d + 3*n3)*j[p4, 0, n3, -1 + n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 2, 
      0])/((-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n3, -1 + n3, 2, 1 + n5, 0, 0, 0, 0, 1, 1, 1, 1, 
      1])/(2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n3, -1 + n3, 2, 1 + n5, 0, 0, 0, 1, 0, 1, 1, 1, 
      1])/(2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n3, -1 + n3, 2, 1 + n5, 0, 0, 0, 1, 1, 0, 1, 1, 
      1])/(2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((-12*n3 + 3*d*n3 - 6*n3*n5)*j[p4, 0, n3, n3, 0, 1 + n5, 0, 0, 0, 1, 1, 1, 
      1, 1, 1])/(2*(-3 + d - n5)*(14 - 5*d + 6*n3 + 2*n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n3, n3, 0, 1 + n5, 0, 0, 0, 1, 1, 1, 2, 1, 1])/
    (2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n3, n3, 0, 1 + n5, 0, 0, 0, 1, 1, 2, 1, 1, 1])/
    (2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n3, n3, 1, n5, 0, 0, 0, 1, 1, 0, 2, 1, 1])/
    (2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((5 - 2*d + 3*n3)*j[p4, 0, n3, n3, 1, n5, 0, 0, 0, 1, 1, 1, 0, 2, 1])/
    ((-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n3, n3, 1, n5, 0, 0, 0, 1, 1, 2, 0, 1, 1])/
    (2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((-10*n3 + 4*d*n3 - 6*n3^2)*j[p4, 0, n3, n3, 1, n5, 0, 0, 0, 1, 2, 1, 0, 
      1, 1])/((14 - 5*d + 6*n3 + 2*n5)*(6 - 5*d + d^2 + 5*n5 - 2*d*n5 + 
      n5^2)) + ((10*n3 - 4*d*n3 + 6*n3^2)*j[p4, 0, n3, n3, 1, n5, 0, 0, 0, 1, 
      2, 1, 1, 0, 1])/((14 - 5*d + 6*n3 + 2*n5)*(6 - 5*d + d^2 + 5*n5 - 
      2*d*n5 + n5^2)) + ((-4 + d - 2*n5)*j[p4, 0, n3, n3, 1, 1 + n5, -1, 0, 
      0, 1, 1, 0, 2, 1, 1])/(2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n3, n3, 1, 1 + n5, -1, 0, 0, 1, 1, 2, 0, 1, 1])/
    (2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((-22 + 7*d - 6*n3 - 6*n5)*j[p4, 0, n3, n3, 1, 1 + n5, -1, 0, 0, 1, 2, 1, 
      0, 1, 1])/(2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((22 - 7*d + 6*n3 + 6*n5)*j[p4, 0, n3, n3, 1, 1 + n5, -1, 0, 0, 1, 2, 1, 
      1, 0, 1])/(2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((22 - 7*d + 6*n3 + 6*n5)*j[p4, 0, n3, n3, 1, 1 + n5, 0, -1, 0, 0, 2, 1, 
      1, 1, 1])/(2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n3, n3, 1, 1 + n5, 0, -1, 0, 1, 1, 0, 2, 1, 1])/
    (2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((-5 + 2*d - 3*n3)*j[p4, 0, n3, n3, 1, 1 + n5, 0, -1, 0, 1, 1, 1, 1, 2, 
      0])/((-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n3, n3, 1, 1 + n5, 0, -1, 0, 1, 1, 2, 0, 1, 1])/
    (2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((22 - 7*d + 6*n3 + 6*n5)*j[p4, 0, n3, n3, 1, 1 + n5, 0, 0, -1, 0, 2, 1, 
      1, 1, 1])/(2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n3, n3, 1, 1 + n5, 0, 0, -1, 1, 1, 0, 2, 1, 1])/
    (2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((-5 + 2*d - 3*n3)*j[p4, 0, n3, n3, 1, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 2, 
      0])/((-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n3, n3, 1, 1 + n5, 0, 0, -1, 1, 1, 2, 0, 1, 1])/
    (2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((-18 + 6*d - 6*n3 - 18*n5 + 5*d*n5 - 6*n3*n5 - 2*n5^2)*
     j[p4, 0, n3, n3, 1, 1 + n5, 0, 0, 0, 0, 1, 1, 1, 1, 1])/
    (2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n3, n3, 1, 1 + n5, 0, 0, 0, 0, 1, 2, 1, 1, 1])/
    (2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((22 - 7*d + 6*n3 + 6*n5)*j[p4, 0, n3, n3, 1, 1 + n5, 0, 0, 0, 0, 2, 1, 1, 
      1, 1])/(2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((-4 + d + 8*n3 - 2*d*n3 - 2*n5 + 4*n3*n5)*j[p4, 0, n3, n3, 1, 1 + n5, 0, 
      0, 0, 1, 0, 1, 1, 1, 1])/(2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((8 - 2*d - 4*n3 + d*n3 + 4*n5 - 2*n3*n5)*j[p4, 0, n3, n3, 1, 1 + n5, 0, 
      0, 0, 1, 1, 0, 1, 1, 1])/(2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((-5 + 2*d + 15*n3 - 6*d*n3 + 6*n3^2 + 4*n3*n5)*
     j[p4, 0, n3, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 0, 1, 1])/
    ((-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((-40 + 36*d - 8*d^2 + 88*n3 - 84*d*n3 + 20*d^2*n3 + 48*n3^2 - 24*d*n3^2 + 
      4*n5 - 10*d*n5 + 3*d^2*n5 + 40*n3*n5 - 20*d*n3*n5 + 12*n3^2*n5 + 
      24*n5^2 - 9*d*n5^2 + 8*n3*n5^2 + 6*n5^3)*j[p4, 0, n3, n3, 1, 1 + n5, 0, 
      0, 0, 1, 1, 1, 1, 0, 1])/(2*(-14 + 5*d - 6*n3 - 2*n5)*
     (6 - 5*d + d^2 + 5*n5 - 2*d*n5 + n5^2)) + 
   ((20 - 18*d + 4*d^2 + 36*n3 - 24*d*n3 + 3*d^2*n3 - 14*n5 + 14*d*n5 - 
      3*d^2*n5 + 50*n3*n5 - 17*d*n3*n5 + 12*n3^2*n5 - 24*n5^2 + 9*d*n5^2 + 
      6*n3*n5^2 - 6*n5^3)*j[p4, 0, n3, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 
      0])/(2*(-14 + 5*d - 6*n3 - 2*n5)*(6 - 5*d + d^2 + 5*n5 - 2*d*n5 + 
      n5^2)) + ((-80 + 84*d - 28*d^2 + 3*d^3 - 88*n3 + 72*d*n3 - 14*d^2*n3 - 
      24*n3^2 + 12*d*n3^2 - 96*n5 + 66*d*n5 - 11*d^2*n5 - 48*n3*n5 + 
      18*d*n3*n5 - 36*n5^2 + 12*d*n5^2 - 12*n3*n5^2 - 4*n5^3)*
     j[p4, 0, n3, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    (2*(-14 + 5*d - 6*n3 - 2*n5)*(6 - 5*d + d^2 + 5*n5 - 2*d*n5 + n5^2)) + 
   j[p4, 0, n3, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 1, 2, 0]/(2*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n3, n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 2, 1, 0])/
    (2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((5 - 2*d + 3*n3 + 5*n5 - 2*d*n5 + 3*n3*n5)*j[p4, 0, n3, n3, 1, 2 + n5, 
      -1, 0, 0, 1, 1, 1, 1, 0, 1])/((-14 + 5*d - 6*n3 - 2*n5)*
     (-3 + d - n5)) + ((-5 + 2*d - 3*n3 - 5*n5 + 2*d*n5 - 3*n3*n5)*
     j[p4, 0, n3, n3, 1, 2 + n5, -1, 0, 0, 1, 1, 1, 1, 1, 0])/
    ((-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n3, n3, 2, n5, 0, 0, 0, 1, 1, 1, 1, 1, 0])/
    ((-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n3, n3, 2, 1 + n5, -1, 0, 0, 1, 1, 1, 1, 1, 0])/
    ((-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n3, n3, 2, 1 + n5, 0, -1, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n3, n3, 2, 1 + n5, 0, 0, -1, 1, 1, 1, 1, 1, 0])/
    (2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((-12*n3 + 3*d*n3 - 6*n3*n5)*j[p4, 0, n3, 1 + n3, 0, 1 + n5, 0, -1, 0, 1, 
      1, 1, 1, 1, 1])/(2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((-12*n3 + 3*d*n3 - 6*n3*n5)*j[p4, 0, n3, 1 + n3, 0, 1 + n5, 0, 0, -1, 1, 
      1, 1, 1, 1, 1])/(2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((-4*n3 + d*n3 - 2*n3*n5)*j[p4, 0, n3, 1 + n3, 0, 1 + n5, 0, 0, 0, 1, 1, 
      1, 1, 1, 1])/(2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((12*n3 - 3*d*n3 + 6*n3*n5)*j[p4, 0, n3, 1 + n3, 1, 1 + n5, 0, -1, 0, 1, 
      1, 1, 1, 1, 0])/(2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((12*n3 - 3*d*n3 + 6*n3*n5)*j[p4, 0, n3, 1 + n3, 1, 1 + n5, 0, 0, -1, 1, 
      1, 1, 1, 1, 0])/(2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((4*n3 - d*n3 + 2*n3*n5)*j[p4, 0, n3, 1 + n3, 1, 1 + n5, 0, 0, 0, 1, 1, 1, 
      1, 1, 0])/(2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((-10*n3*n5 + 4*d*n3*n5 - 6*n3^2*n5)*j[p4, 0, 1 + n3, -1 + n3, 1, 1 + n5, 
      0, 0, 0, 0, 1, 1, 1, 1, 1])/((14 - 5*d + 6*n3 + 2*n5)*
     (6 - 5*d + d^2 + 5*n5 - 2*d*n5 + n5^2)) + 
   ((4*n3 - d*n3 + 2*n3*n5)*j[p4, 0, 1 + n3, -1 + n3, 1, 1 + n5, 0, 0, 0, 1, 
      0, 1, 1, 1, 1])/(2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((-32*n3 + 11*d*n3 - 12*n3^2 - 6*n3*n5)*j[p4, 0, 1 + n3, n3, 1, n5, 0, 0, 
      0, 1, 0, 1, 1, 1, 1])/(2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((24*n3 - 18*d*n3 + 3*d^2*n3 - 40*n3^2 + 16*d*n3^2 - 24*n3^3 + 24*n3*n5 - 
      9*d*n3*n5 + 6*n3*n5^2)*j[p4, 0, 1 + n3, n3, 1, n5, 0, 0, 0, 1, 1, 1, 0, 
      1, 1])/(2*(14 - 5*d + 6*n3 + 2*n5)*(6 - 5*d + d^2 + 5*n5 - 2*d*n5 + 
      n5^2)) + ((10*n3 - 4*d*n3 + 6*n3^2)*j[p4, 0, 1 + n3, n3, 1, n5, 0, 0, 
      0, 1, 1, 1, 0, 2, 1])/((14 - 5*d + 6*n3 + 2*n5)*
     (6 - 5*d + d^2 + 5*n5 - 2*d*n5 + n5^2)) + 
   ((14*n3 - 14*d*n3 + 3*d^2*n3 - 46*n3^2 + 16*d*n3^2 - 24*n3^3 + 24*n3*n5 - 
      9*d*n3*n5 + 6*n3*n5^2)*j[p4, 0, 1 + n3, n3, 1, n5, 0, 0, 0, 1, 1, 1, 1, 
      0, 1])/((-14 + 5*d - 6*n3 - 2*n5)*(6 - 5*d + d^2 + 5*n5 - 2*d*n5 + 
      n5^2)) + ((44*n3 - 22*d*n3 + 2*d^2*n3 + 76*n3^2 - 22*d*n3^2 + 24*n3^3 - 
      16*n3*n5 + 6*d*n3*n5 - 4*n3*n5^2)*j[p4, 0, 1 + n3, n3, 1, n5, 0, 0, 0, 
      1, 1, 1, 1, 1, 1])/((-14 + 5*d - 6*n3 - 2*n5)*
     (6 - 5*d + d^2 + 5*n5 - 2*d*n5 + n5^2)) + 
   ((-4*n3 + d*n3 - 2*n3*n5)*j[p4, 0, 1 + n3, n3, 1, 1 + n5, -1, 0, 0, 1, 0, 
      1, 1, 1, 1])/(2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((-32*n3 + 11*d*n3 - 12*n3^2 - 6*n3*n5)*j[p4, 0, 1 + n3, n3, 1, 1 + n5, 
      -1, 0, 0, 1, 1, 1, 0, 1, 1])/(2*(-14 + 5*d - 6*n3 - 2*n5)*
     (-3 + d - n5)) + ((32*n3 - 11*d*n3 + 12*n3^2 + 6*n3*n5)*
     j[p4, 0, 1 + n3, n3, 1, 1 + n5, -1, 0, 0, 1, 1, 1, 1, 0, 1])/
    ((-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((36*n3 - 30*d*n3 + 6*d^2*n3 + 12*n3^2 - 6*d*n3^2 + 16*n3*n5 - 6*d*n3*n5 + 
      4*n3*n5^2)*j[p4, 0, 1 + n3, n3, 1, 1 + n5, -1, 0, 0, 1, 1, 1, 1, 1, 1])/
    ((-14 + 5*d - 6*n3 - 2*n5)*(6 - 5*d + d^2 + 5*n5 - 2*d*n5 + n5^2)) + 
   ((10*n3*n5 - 4*d*n3*n5 + 6*n3^2*n5)*j[p4, 0, 1 + n3, n3, 1, 1 + n5, 0, -1, 
      0, 0, 1, 1, 1, 1, 1])/((14 - 5*d + 6*n3 + 2*n5)*
     (6 - 5*d + d^2 + 5*n5 - 2*d*n5 + n5^2)) + 
   ((-4*n3 + d*n3 - 2*n3*n5)*j[p4, 0, 1 + n3, n3, 1, 1 + n5, 0, -1, 0, 1, 0, 
      1, 1, 1, 1])/(2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((10*n3*n5 - 4*d*n3*n5 + 6*n3^2*n5)*j[p4, 0, 1 + n3, n3, 1, 1 + n5, 0, 0, 
      -1, 0, 1, 1, 1, 1, 1])/((14 - 5*d + 6*n3 + 2*n5)*
     (6 - 5*d + d^2 + 5*n5 - 2*d*n5 + n5^2)) + 
   ((-4*n3 + d*n3 - 2*n3*n5)*j[p4, 0, 1 + n3, n3, 1, 1 + n5, 0, 0, -1, 1, 0, 
      1, 1, 1, 1])/(2*(-14 + 5*d - 6*n3 - 2*n5)*(-3 + d - n5)) + 
   ((-20*n3 + 8*d*n3 - 32*n3^2 + 8*d*n3^2 - 12*n3^3)*
     j[p4, 0, 2 + n3, -1 + n3, 1, n5, 0, 0, 0, 1, 0, 1, 1, 1, 1])/
    ((14 - 5*d + 6*n3 + 2*n5)*(6 - 5*d + d^2 + 5*n5 - 2*d*n5 + n5^2)) + 
   ((20*n3 - 8*d*n3 + 32*n3^2 - 8*d*n3^2 + 12*n3^3)*
     j[p4, 0, 2 + n3, n3, 1, n5, 0, -1, 0, 1, 0, 1, 1, 1, 1])/
    ((14 - 5*d + 6*n3 + 2*n5)*(6 - 5*d + d^2 + 5*n5 - 2*d*n5 + n5^2)) + 
   ((20*n3 - 8*d*n3 + 32*n3^2 - 8*d*n3^2 + 12*n3^3)*
     j[p4, 0, 2 + n3, n3, 1, n5, 0, 0, -1, 1, 0, 1, 1, 1, 1])/
    ((14 - 5*d + 6*n3 + 2*n5)*(6 - 5*d + d^2 + 5*n5 - 2*d*n5 + n5^2)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 1 && n13 == 1 && n14 == 1 && 
    n2 == 0 && n3 == 0 && n5 == 0 && n6 == 0 && n7 == 0 && n8 == 0 && 
    n9 != 1 -> (n4*j[p4, -1, 0, 0, 1 + n4, 0, 0, 0, 0, -1 + n9, 2, 0, 1, 1, 
      1])/((6 - 3*d + 2*n4)*(-1 + n9)) + 
   ((n4 + n4^2)*j[p4, -1, 0, 0, 2 + n4, 0, 0, 0, 0, -1 + n9, 1, 1, 1, 1, 0])/
    ((6 - 3*d + 2*n4)*(-1 + n9)) - 
   (n4*j[p4, 0, -1, 0, 1 + n4, 0, 0, 0, 0, -1 + n9, 2, 0, 1, 1, 1])/
    ((6 - 3*d + 2*n4)*(-1 + n9)) + 
   ((-n4 - n4^2)*j[p4, 0, -1, 0, 2 + n4, 0, 0, 0, 0, -1 + n9, 1, 1, 1, 1, 0])/
    ((6 - 3*d + 2*n4)*(-1 + n9)) - 
   (n4*j[p4, 0, 0, -1, 1 + n4, 0, 0, 0, 0, -1 + n9, 1, 1, 1, 2, 0])/
    ((6 - 3*d + 2*n4)*(-1 + n9)) + 
   ((n4 + n4^2)*j[p4, 0, 0, -1, 2 + n4, 0, 0, 0, 0, -1 + n9, 0, 1, 1, 1, 1])/
    ((6 - 3*d + 2*n4)*(-1 + n9)) + 
   ((-n4 - n4^2)*j[p4, 0, 0, -1, 2 + n4, 0, 0, 0, 0, -1 + n9, 1, 0, 1, 1, 1])/
    ((6 - 3*d + 2*n4)*(-1 + n9)) + 
   ((3 - 2*d + n4 + n9)*j[p4, 0, 0, 0, n4, 0, 0, 0, 0, -1 + n9, 1, 1, 1, 1, 
      1])/(-1 + n9) + j[p4, 0, 0, 0, n4, 0, 0, 0, 0, n9, 1, 1, 1, 1, 0] + 
   (n4*j[p4, 0, 0, 0, 1 + n4, 0, -1, 0, 0, -1 + n9, 2, 0, 1, 1, 1])/
    ((6 - 3*d + 2*n4)*(-1 + n9)) + 
   (n4*j[p4, 0, 0, 0, 1 + n4, 0, 0, -1, 0, -1 + n9, 1, 1, 1, 2, 0])/
    ((6 - 3*d + 2*n4)*(-1 + n9)) - 
   (n4*j[p4, 0, 0, 0, 1 + n4, 0, 0, 0, 0, -2 + n9, 2, 0, 1, 1, 1])/
    ((6 - 3*d + 2*n4)*(-1 + n9)) + 
   ((3*n4 - 2*d*n4 + n4^2)*j[p4, 0, 0, 0, 1 + n4, 0, 0, 0, 0, -1 + n9, 0, 1, 
      1, 1, 1])/((6 - 3*d + 2*n4)*(-1 + n9)) + 
   ((3*n4 - 2*d*n4 + n4^2)*j[p4, 0, 0, 0, 1 + n4, 0, 0, 0, 0, -1 + n9, 1, 0, 
      1, 1, 1])/((-6 + 3*d - 2*n4)*(-1 + n9)) + 
   ((4*n4 - 2*d*n4 + n4^2)*j[p4, 0, 0, 0, 1 + n4, 0, 0, 0, 0, -1 + n9, 1, 1, 
      1, 1, 0])/((6 - 3*d + 2*n4)*(-1 + n9)) + 
   ((n4 + n4^2)*j[p4, 0, 0, 0, 2 + n4, -1, 0, 0, 0, -1 + n9, 1, 1, 1, 1, 0])/
    ((6 - 3*d + 2*n4)*(-1 + n9)) + 
   ((n4 + n4^2)*j[p4, 0, 0, 0, 2 + n4, 0, -1, 0, 0, -1 + n9, 1, 1, 1, 1, 0])/
    ((6 - 3*d + 2*n4)*(-1 + n9)) + 
   ((-n4 - n4^2)*j[p4, 0, 0, 0, 2 + n4, 0, 0, 0, 0, -2 + n9, 1, 1, 1, 1, 0])/
    ((6 - 3*d + 2*n4)*(-1 + n9)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 1 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n3 == 0 && n5 == 0 && n6 == 0 && n7 == 0 && n8 == 0 && n9 == 1 && 
    n11 != 1 -> ((4 - d)*j[p4, 0, 0, 0, n4, 0, 0, 0, 0, 0, 1, -1 + n11, 1, 1, 
      2])/(2*(-1 + n11)*(-5 + 3*d - n11 - 2*n4)) + 
   ((-4 + d)*j[p4, 0, 0, 0, n4, 0, 0, 0, 0, 1, 1, -2 + n11, 2, 1, 1])/
    (2*(-1 + n11)*(-5 + 3*d - n11 - 2*n4)) + 
   ((8 - 2*d - 4*n11 + d*n11)*j[p4, 0, 0, 0, n4, 0, 0, 0, 0, 1, 1, -1 + n11, 
      1, 1, 1])/(2*(-1 + n11)*(-5 + 3*d - n11 - 2*n4)) + 
   ((-4 + d)*j[p4, 0, 0, 0, n4, 0, 0, 0, 0, 1, 1, n11, 0, 1, 1])/
    (2*(5 - 3*d + n11 + 2*n4)) + 
   ((-4 + d)*j[p4, 0, 0, 0, n4, 0, 0, 0, 0, 2, 1, -1 + n11, 1, 1, 0])/
    (2*(-1 + n11)*(-5 + 3*d - n11 - 2*n4)) + 
   j[p4, 0, 0, 0, n4, 0, 0, 0, 0, 2, 1, -1 + n11, 1, 1, 1]/(-1 + n11) + 
   j[p4, 0, 0, 0, n4, 0, 0, 0, 0, 2, 1, n11, 0, 1, 1]/
    (5 - 3*d + n11 + 2*n4) - j[p4, 0, 0, 0, n4, 0, 0, 0, 0, 2, 1, n11, 1, 1, 
     0]/(5 - 3*d + n11 + 2*n4), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 1 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n3 == 0 && n4 == 1 && n5 == 0 && n6 == 0 && n7 == 0 && n8 == 0 && 
     !(n1 == 0 || n9 == 1) -> 
  ((-96 + 69*d - 12*d^2 - 30*n1 + 11*d*n1 - 2*n1^2 + 4*n9 - 4*d*n9 + 4*n9^2)*
     j[p4, n1, 0, 0, 1, 0, 0, 0, 0, n9, 1, 1, 0, 2, 1])/
    (2*(-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)*(-1 + n9)) + 
   ((78 - 61*d + 12*d^2 + 28*n1 - 11*d*n1 + 2*n1^2 + 10*n9 - 4*d*n9 + 
      2*n1*n9)*j[p4, n1, 0, 0, 1, 0, 0, 0, 0, n9, 1, 1, 1, 2, 0])/
    (2*(-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)*(-1 + n9)) - 
   j[p4, n1, 0, 0, 1, 0, 0, 0, 0, n9, 1, 2, 0, 1, 1]/(2*(-1 + n9)) + 
   ((8 - 3*d + n1)*j[p4, n1, 0, 0, 1, 0, 0, 0, 0, n9, 2, 0, 1, 1, 1])/
    ((-8 + 3*d - 2*n1)*(-1 + n9)) + 
   (n9*j[p4, n1, 0, 0, 1, 0, 0, 0, 0, 1 + n9, 1, 1, 1, 1, 0])/(2*(-1 + n9)) - 
   j[p4, n1, 0, 0, 2, 0, 0, 0, 0, n9, 1, 1, 1, 1, 0]/(-8 + 3*d - 2*n1) + 
   ((-8 + 3*d - n1)*j[p4, 1 + n1, -1, 0, 1, 0, 0, 0, 0, n9, 2, 0, 1, 1, 1])/
    ((-8 + 3*d - 2*n1)*(-1 + n9)) + 
   ((-3*n9 + d*n9 - n1*n9)*j[p4, 1 + n1, -1, 0, 1, 0, 0, 0, 0, 1 + n9, 1, 1, 
      1, 1, 0])/((-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)) + 
   j[p4, 1 + n1, -1, 0, 2, 0, 0, 0, 0, n9, 1, 1, 1, 1, 0]/(-8 + 3*d - 2*n1) + 
   ((114 - 77*d + 12*d^2 + 32*n1 - 11*d*n1 + 2*n1^2 - 18*n9 + 12*d*n9 - 
      2*n1*n9 - 8*n9^2)*j[p4, 1 + n1, 0, -1, 2, 0, 0, 0, 0, -1 + n9, 1, 1, 1, 
      1, 1])/(2*(-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)*(-1 + n9)) - 
   j[p4, 1 + n1, 0, -1, 2, 0, 0, 0, 0, n9, 0, 1, 1, 1, 1]/(-8 + 3*d - 2*n1) + 
   j[p4, 1 + n1, 0, -1, 2, 0, 0, 0, 0, n9, 1, 0, 1, 1, 1]/(-8 + 3*d - 2*n1) + 
   ((3 - d + n1)*j[p4, 1 + n1, 0, 0, 0, 0, 0, 0, 0, -1 + n9, 1, 1, 1, 1, 2])/
    ((-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)) + 
   ((-3 + d - n1 + 3*n9 - d*n9 + n1*n9)*j[p4, 1 + n1, 0, 0, 0, 0, 0, 0, 0, 
      n9, 1, 1, 1, 1, 1])/((-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)) + 
   ((-3 + d - n1)*j[p4, 1 + n1, 0, 0, 0, 0, 0, 0, 0, n9, 1, 1, 1, 1, 2])/
    ((-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)) + 
   ((-3*n9 + d*n9 - n1*n9)*j[p4, 1 + n1, 0, 0, 0, 0, 0, 0, 0, 1 + n9, 1, 1, 
      1, 1, 1])/((-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)) + 
   ((-60 + 54*d - 12*d^2 - 6*n1 + 3*d*n1 - 26*n9 + 11*d*n9 - 2*n1*n9 - 
      2*n9^2)*j[p4, 1 + n1, 0, 0, 1, -1, 0, 0, 0, n9, 1, 1, 0, 2, 1])/
    ((-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)*(-1 + n9)) + 
   ((-78*n9 + 61*d*n9 - 12*d^2*n9 - 28*n1*n9 + 11*d*n1*n9 - 2*n1^2*n9 - 
      10*n9^2 + 4*d*n9^2 - 2*n1*n9^2)*j[p4, 1 + n1, 0, 0, 1, -1, 0, 0, 0, 
      1 + n9, 1, 1, 1, 1, 0])/(2*(-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)*
     (-1 + n9)) + ((-3 + d - n1)*j[p4, 1 + n1, 0, 0, 1, 0, -1, 0, 0, n9, 2, 
      0, 1, 1, 1])/((-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)) - 
   j[p4, 1 + n1, 0, 0, 1, 0, -1, 0, 0, n9, 2, 1, 0, 1, 1]/(-8 + 3*d - 2*n1) + 
   j[p4, 1 + n1, 0, 0, 1, 0, -1, 0, 0, n9, 2, 1, 1, 0, 1]/(-8 + 3*d - 2*n1) + 
   ((3*n9 - d*n9 + n1*n9)*j[p4, 1 + n1, 0, 0, 1, 0, -1, 0, 0, 1 + n9, 1, 1, 
      1, 1, 0])/((-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)) + 
   ((3*n9 - d*n9 + n1*n9)*j[p4, 1 + n1, 0, 0, 1, 0, 0, -1, 0, 1 + n9, 1, 1, 
      1, 1, 0])/((-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)) + 
   j[p4, 1 + n1, 0, 0, 1, 0, 0, 0, -1, n9, 1, 0, 2, 1, 1]/(2*(-1 + n9)) + 
   ((60 - 54*d + 12*d^2 + 6*n1 - 3*d*n1 + 26*n9 - 11*d*n9 + 2*n1*n9 + 2*n9^2)*
     j[p4, 1 + n1, 0, 0, 1, 0, 0, 0, -1, n9, 1, 1, 1, 2, 0])/
    ((-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)*(-1 + n9)) + 
   j[p4, 1 + n1, 0, 0, 1, 0, 0, 0, -1, n9, 1, 2, 0, 1, 1]/(2*(-1 + n9)) + 
   ((3*n9 - d*n9 + n1*n9)*j[p4, 1 + n1, 0, 0, 1, 0, 0, 0, -1, 1 + n9, 1, 1, 
      1, 1, 0])/((-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)) + 
   ((3 - d + n1)*j[p4, 1 + n1, 0, 0, 1, 0, 0, 0, 0, -1 + n9, 1, 1, 0, 1, 2])/
    ((-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)) - 
   j[p4, 1 + n1, 0, 0, 1, 0, 0, 0, 0, -1 + n9, 1, 1, 1, 0, 2]/(2*(-1 + n9)) + 
   ((378 - 451*d + 180*d^2 - 24*d^3 + 178*n1 - 136*d*n1 + 26*d^2*n1 + 
      34*n1^2 - 13*d*n1^2 + 2*n1^3 + 62*n9 - 50*d*n9 + 10*d^2*n9 + 16*n1*n9 - 
      6*d*n1*n9 + 2*n1^2*n9)*j[p4, 1 + n1, 0, 0, 1, 0, 0, 0, 0, -1 + n9, 1, 
      1, 1, 1, 1])/(2*(-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)*(-1 + n9)) + 
   ((3 - d + n1)*j[p4, 1 + n1, 0, 0, 1, 0, 0, 0, 0, -1 + n9, 2, 0, 1, 1, 1])/
    ((-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)) + 
   j[p4, 1 + n1, 0, 0, 1, 0, 0, 0, 0, -1 + n9, 2, 1, 0, 1, 1]/
    (-8 + 3*d - 2*n1) - j[p4, 1 + n1, 0, 0, 1, 0, 0, 0, 0, -1 + n9, 2, 1, 1, 
     0, 1]/(-8 + 3*d - 2*n1) + 
   ((-318 + 248*d - 48*d^2 - 188*n1 + 105*d*n1 - 12*d^2*n1 - 36*n1^2 + 
      11*d*n1^2 - 2*n1^3 - 44*n9 + 14*d*n9 - 4*n1*n9 - 4*d*n1*n9 + 10*n9^2 - 
      2*d*n9^2 + 6*n1*n9^2)*j[p4, 1 + n1, 0, 0, 1, 0, 0, 0, 0, n9, 1, 0, 1, 
      1, 1])/(2*(-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)*(-1 + n9)) + 
   ((-6 + 3*d - 2*n9)*j[p4, 1 + n1, 0, 0, 1, 0, 0, 0, 0, n9, 1, 1, 0, 1, 1])/
    ((-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)) + 
   ((-3 + d - n1)*j[p4, 1 + n1, 0, 0, 1, 0, 0, 0, 0, n9, 1, 1, 0, 1, 2])/
    ((-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)) + 
   ((96 - 69*d + 12*d^2 + 30*n1 - 11*d*n1 + 2*n1^2 - 4*n9 + 4*d*n9 - 4*n9^2)*
     j[p4, 1 + n1, 0, 0, 1, 0, 0, 0, 0, n9, 1, 1, 0, 2, 1])/
    (2*(-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)*(-1 + n9)) - 
   (n1*j[p4, 1 + n1, 0, 0, 1, 0, 0, 0, 0, n9, 1, 1, 1, 0, 1])/
    (8 - 3*d + 2*n1) + j[p4, 1 + n1, 0, 0, 1, 0, 0, 0, 0, n9, 1, 1, 1, 0, 2]/
    (2*(-1 + n9)) + ((-84 + 63*d - 12*d^2 - 30*n1 + 11*d*n1 - 2*n1^2 - 
      10*n9 + 4*d*n9 - 2*n1*n9)*j[p4, 1 + n1, 0, 0, 1, 0, 0, 0, 0, n9, 1, 1, 
      1, 1, 0])/(2*(-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)) + 
   ((60 - 47*d + 9*d^2 + 26*n1 - 11*d*n1 + 2*n1^2 + 12*n9 - 4*d*n9 + 4*n1*n9)*
     j[p4, 1 + n1, 0, 0, 1, 0, 0, 0, 0, n9, 1, 1, 1, 1, 1])/
    ((-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)) + 
   ((-78 + 61*d - 12*d^2 - 28*n1 + 11*d*n1 - 2*n1^2 - 10*n9 + 4*d*n9 - 
      2*n1*n9)*j[p4, 1 + n1, 0, 0, 1, 0, 0, 0, 0, n9, 1, 1, 1, 2, 0])/
    (2*(-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)*(-1 + n9)) - 
   j[p4, 1 + n1, 0, 0, 1, 0, 0, 0, 0, n9, 1, 1, 2, 0, 1]/(2*(-1 + n9)) + 
   ((-3*n9 + d*n9 - n1*n9)*j[p4, 1 + n1, 0, 0, 1, 0, 0, 0, 0, 1 + n9, 1, 0, 
      1, 1, 1])/((-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)) + 
   ((-186 + 163*d - 36*d^2 - 40*n1 + 17*d*n1 - 2*n1^2 - 70*n9 + 32*d*n9 - 
      6*n1*n9 - 8*n9^2)*j[p4, 1 + n1, 0, 0, 2, -1, 0, 0, 0, -1 + n9, 1, 1, 1, 
      1, 1])/(2*(-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)*(-1 + n9)) + 
   ((66 - 56*d + 12*d^2 + 17*n1 - 7*d*n1 + n1^2 + 20*n9 - 9*d*n9 + 2*n1*n9 + 
      2*n9^2)*j[p4, 1 + n1, 0, 0, 2, -1, 0, 0, 0, n9, 0, 1, 1, 1, 1])/
    ((-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)*(-1 + n9)) + 
   ((-66 + 56*d - 12*d^2 - 17*n1 + 7*d*n1 - n1^2 - 20*n9 + 9*d*n9 - 2*n1*n9 - 
      2*n9^2)*j[p4, 1 + n1, 0, 0, 2, -1, 0, 0, 0, n9, 1, 0, 1, 1, 1])/
    ((-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)*(-1 + n9)) + 
   ((75 - 60*d + 12*d^2 + 18*n1 - 7*d*n1 + n1^2 + 13*n9 - 5*d*n9 + n1*n9)*
     j[p4, 1 + n1, 0, 0, 2, 0, -1, 0, 0, n9, 0, 1, 1, 1, 1])/
    ((-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)*(-1 + n9)) + 
   ((-75 + 60*d - 12*d^2 - 18*n1 + 7*d*n1 - n1^2 - 13*n9 + 5*d*n9 - n1*n9)*
     j[p4, 1 + n1, 0, 0, 2, 0, -1, 0, 0, n9, 1, 0, 1, 1, 1])/
    ((-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)*(-1 + n9)) + 
   ((186 - 163*d + 36*d^2 + 40*n1 - 17*d*n1 + 2*n1^2 + 70*n9 - 32*d*n9 + 
      6*n1*n9 + 8*n9^2)*j[p4, 1 + n1, 0, 0, 2, 0, 0, -1, 0, -1 + n9, 1, 1, 1, 
      1, 1])/(2*(-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)*(-1 + n9)) + 
   ((-66 + 56*d - 12*d^2 - 17*n1 + 7*d*n1 - n1^2 - 20*n9 + 9*d*n9 - 2*n1*n9 - 
      2*n9^2)*j[p4, 1 + n1, 0, 0, 2, 0, 0, -1, 0, n9, 0, 1, 1, 1, 1])/
    ((-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)*(-1 + n9)) + 
   ((66 - 56*d + 12*d^2 + 17*n1 - 7*d*n1 + n1^2 + 20*n9 - 9*d*n9 + 2*n1*n9 + 
      2*n9^2)*j[p4, 1 + n1, 0, 0, 2, 0, 0, -1, 0, n9, 1, 0, 1, 1, 1])/
    ((-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)*(-1 + n9)) - 
   j[p4, 1 + n1, 0, 0, 2, 0, 0, -1, 0, n9, 1, 1, 1, 1, 0]/(-8 + 3*d - 2*n1) + 
   ((-75 + 60*d - 12*d^2 - 18*n1 + 7*d*n1 - n1^2 - 13*n9 + 5*d*n9 - n1*n9)*
     j[p4, 1 + n1, 0, 0, 2, 0, 0, 0, -1, n9, 0, 1, 1, 1, 1])/
    ((-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)*(-1 + n9)) + 
   ((75 - 60*d + 12*d^2 + 18*n1 - 7*d*n1 + n1^2 + 13*n9 - 5*d*n9 + n1*n9)*
     j[p4, 1 + n1, 0, 0, 2, 0, 0, 0, -1, n9, 1, 0, 1, 1, 1])/
    ((-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)*(-1 + n9)) - 
   j[p4, 1 + n1, 0, 0, 2, 0, 0, 0, -1, n9, 1, 1, 1, 1, 0]/(-8 + 3*d - 2*n1) + 
   ((-96 + 69*d - 12*d^2 - 30*n1 + 11*d*n1 - 2*n1^2 + 4*n9 - 4*d*n9 + 4*n9^2)*
     j[p4, 1 + n1, 0, 0, 2, 0, 0, 0, 0, -1 + n9, 1, 1, 1, 1, 0])/
    (2*(-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)*(-1 + n9)) + 
   ((6 - 3*d + 6*n1 - 3*d*n1 + 2*n9 + 2*n1*n9)*j[p4, 2 + n1, -1, 0, 1, 0, 0, 
      0, 0, n9, 1, 1, 1, 0, 1])/((-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)) + 
   ((-6 + 3*d - 6*n1 + 3*d*n1 - 2*n9 - 2*n1*n9)*j[p4, 2 + n1, -1, 0, 1, 0, 0, 
      0, 0, n9, 1, 1, 1, 1, 1])/((-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)) + 
   ((-60 + 54*d - 12*d^2 - 66*n1 + 57*d*n1 - 12*d^2*n1 - 6*n1^2 + 3*d*n1^2 - 
      26*n9 + 11*d*n9 - 28*n1*n9 + 11*d*n1*n9 - 2*n1^2*n9 - 2*n9^2 - 
      2*n1*n9^2)*j[p4, 2 + n1, 0, 0, 1, -1, 0, 0, 0, n9, 1, 0, 1, 1, 1])/
    ((-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)*(-1 + n9)) + 
   ((-78 + 61*d - 12*d^2 - 106*n1 + 72*d*n1 - 12*d^2*n1 - 30*n1^2 + 
      11*d*n1^2 - 2*n1^3 - 10*n9 + 4*d*n9 - 12*n1*n9 + 4*d*n1*n9 - 2*n1^2*n9)*
     j[p4, 2 + n1, 0, 0, 1, -1, 0, 0, 0, n9, 1, 1, 1, 0, 1])/
    (2*(-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)*(-1 + n9)) + 
   ((78 - 61*d + 12*d^2 + 106*n1 - 72*d*n1 + 12*d^2*n1 + 30*n1^2 - 
      11*d*n1^2 + 2*n1^3 + 10*n9 - 4*d*n9 + 12*n1*n9 - 4*d*n1*n9 + 2*n1^2*n9)*
     j[p4, 2 + n1, 0, 0, 1, -1, 0, 0, 0, n9, 1, 1, 1, 1, 1])/
    ((-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)*(-1 + n9)) + 
   ((-6 + 3*d - 6*n1 + 3*d*n1 - 2*n9 - 2*n1*n9)*j[p4, 2 + n1, 0, 0, 1, 0, -1, 
      0, 0, n9, 1, 1, 1, 0, 1])/((-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)) + 
   ((6 - 3*d + 6*n1 - 3*d*n1 + 2*n9 + 2*n1*n9)*j[p4, 2 + n1, 0, 0, 1, 0, -1, 
      0, 0, n9, 1, 1, 1, 1, 1])/((-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)) + 
   ((-6 + 3*d - 6*n1 + 3*d*n1 - 2*n9 - 2*n1*n9)*j[p4, 2 + n1, 0, 0, 1, 0, 0, 
      -1, 0, n9, 1, 1, 1, 0, 1])/((-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)) + 
   ((6 - 3*d + 6*n1 - 3*d*n1 + 2*n9 + 2*n1*n9)*j[p4, 2 + n1, 0, 0, 1, 0, 0, 
      -1, 0, n9, 1, 1, 1, 1, 1])/((-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)) + 
   ((60 - 54*d + 12*d^2 + 66*n1 - 57*d*n1 + 12*d^2*n1 + 6*n1^2 - 3*d*n1^2 + 
      26*n9 - 11*d*n9 + 28*n1*n9 - 11*d*n1*n9 + 2*n1^2*n9 + 2*n9^2 + 
      2*n1*n9^2)*j[p4, 2 + n1, 0, 0, 1, 0, 0, 0, -1, -1 + n9, 1, 1, 1, 1, 1])/
    ((-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)*(-1 + n9)) + 
   ((84 - 65*d + 12*d^2 + 110*n1 - 76*d*n1 + 12*d^2*n1 + 28*n1^2 - 
      11*d*n1^2 + 2*n1^3 + 8*n9 + 12*n1*n9 + 4*n1^2*n9 - 4*n9^2 - 4*n1*n9^2)*
     j[p4, 2 + n1, 0, 0, 1, 0, 0, 0, -1, n9, 1, 1, 1, 0, 1])/
    (2*(-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)*(-1 + n9)) + 
   ((10 - 3*d + 12*n1 - 3*d*n1 + 2*n1^2 - 2*n9 - 2*n1*n9)*
     j[p4, 2 + n1, 0, 0, 1, 0, 0, 0, -1, n9, 1, 1, 1, 1, 1])/
    ((-8 + 3*d - 2*n1)*(-1 + n9)) + 
   ((-78 + 61*d - 12*d^2 - 106*n1 + 72*d*n1 - 12*d^2*n1 - 30*n1^2 + 
      11*d*n1^2 - 2*n1^3 - 10*n9 + 4*d*n9 - 12*n1*n9 + 4*d*n1*n9 - 2*n1^2*n9)*
     j[p4, 2 + n1, 0, 0, 1, 0, 0, 0, 0, -1 + n9, 1, 1, 1, 1, 1])/
    (2*(-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)*(-1 + n9)) + 
   ((96 - 69*d + 12*d^2 + 126*n1 - 80*d*n1 + 12*d^2*n1 + 32*n1^2 - 
      11*d*n1^2 + 2*n1^3 - 4*n9 + 4*d*n9 - 4*n1*n9 + 4*d*n1*n9 - 4*n9^2 - 
      4*n1*n9^2)*j[p4, 2 + n1, 0, 0, 1, 0, 0, 0, 0, n9, 1, 0, 1, 1, 1])/
    (2*(-8 + 3*d - 2*n1)*(-9 + 4*d - n1 - 2*n9)*(-1 + n9)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n12 == 1 && n13 == 1 && n14 == 1 && n2 == 0 && n3 == 0 && 
    n4 == 1 && n5 == 0 && n6 == 0 && n7 == 0 && n8 == 0 && n9 == 1 && 
    n11 != 1 -> ((4 - d)*j[p4, n1, 0, 0, 1, 0, 0, 0, 0, 0, 1, -1 + n11, 1, 1, 
      2])/(2*(-7 + 3*d - n1 - n11)*(-1 + n11)) + 
   ((-4 + d)*j[p4, n1, 0, 0, 1, 0, 0, 0, 0, 1, 1, -2 + n11, 2, 1, 1])/
    (2*(-7 + 3*d - n1 - n11)*(-1 + n11)) + 
   ((8 - 2*d - 4*n11 + d*n11)*j[p4, n1, 0, 0, 1, 0, 0, 0, 0, 1, 1, -1 + n11, 
      1, 1, 1])/(2*(-7 + 3*d - n1 - n11)*(-1 + n11)) + 
   ((-4 + d)*j[p4, n1, 0, 0, 1, 0, 0, 0, 0, 1, 1, n11, 0, 1, 1])/
    (2*(7 - 3*d + n1 + n11)) + 
   ((-4 + d)*j[p4, n1, 0, 0, 1, 0, 0, 0, 0, 2, 1, -1 + n11, 1, 1, 0])/
    (2*(-7 + 3*d - n1 - n11)*(-1 + n11)) + 
   j[p4, n1, 0, 0, 1, 0, 0, 0, 0, 2, 1, -1 + n11, 1, 1, 1]/(-1 + n11) + 
   j[p4, n1, 0, 0, 1, 0, 0, 0, 0, 2, 1, n11, 0, 1, 1]/(7 - 3*d + n1 + n11) - 
   j[p4, n1, 0, 0, 1, 0, 0, 0, 0, 2, 1, n11, 1, 1, 0]/(7 - 3*d + n1 + n11) - 
   (n1*j[p4, 1 + n1, 0, 0, 1, 0, 0, 0, 0, 1, 1, n11, 1, 0, 1])/
    (7 - 3*d + n1 + n11) + (n1*j[p4, 1 + n1, 0, 0, 1, 0, 0, 0, 0, 1, 1, n11, 
      1, 1, 1])/(7 - 3*d + n1 + n11) + 
   (n1*j[p4, 1 + n1, 0, 0, 1, 0, 0, 0, 0, 2, 1, -1 + n11, 1, 0, 1])/
    ((-1 + n11)*(7 - 3*d + n1 + n11)) - 
   (n1*j[p4, 1 + n1, 0, 0, 1, 0, 0, 0, 0, 2, 1, -1 + n11, 1, 1, 1])/
    ((-1 + n11)*(7 - 3*d + n1 + n11)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 1 && n13 == 1 && n14 == 1 && 
    n4 == 1 && n5 == 0 && n6 == 0 && n7 == 0 && n8 == -1 && n9 == 1 -> 
  j[p4, -1, n2, n3, 1, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1]/(4 - 2*d + n2) - 
   (2*j[p4, -1, n2, n3, 1, 0, 0, 0, 0, 1, 1, 1, 0, 2, 1])/(-4 + 2*d - n2) + 
   (2*j[p4, -1, n2, n3, 1, 0, 0, 0, 0, 1, 1, 1, 1, 2, 0])/(-4 + 2*d - n2) + 
   j[p4, -1, n2, n3, 1, 0, 0, 0, 0, 1, 2, 0, 1, 1, 1]/(-4 + 2*d - n2) - 
   (n3*j[p4, -1, n2, 1 + n3, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    (-4 + 2*d - n2) - (n3*j[p4, -1, n2, 1 + n3, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 
      1])/(-4 + 2*d - n2) + (n3*j[p4, -1, n2, 1 + n3, 1, 0, 0, 0, 0, 1, 1, 1, 
      1, 1, 0])/(-4 + 2*d - n2) - 
   (2*n2*j[p4, -1, 1 + n2, n3, 1, 0, -1, 0, 0, 1, 1, 1, 1, 1, 1])/
    (4 - 2*d + n2) + (2*n2*j[p4, -1, 1 + n2, n3, 1, 0, 0, -1, 0, 1, 1, 1, 1, 
      1, 1])/(4 - 2*d + n2) + j[p4, 0, -1 + n2, n3, 1, 0, 0, 0, 0, 0, 1, 1, 
     1, 1, 2]/(-4 + 2*d - n2) + j[p4, 0, -1 + n2, n3, 1, 0, 0, 0, 0, 0, 2, 1, 
     1, 1, 1]/(-4 + 2*d - n2) + j[p4, 0, -1 + n2, n3, 1, 0, 0, 0, 0, 1, 1, 0, 
     2, 1, 1]/(4 - 2*d + n2) + 
   (n3*j[p4, 0, -1 + n2, n3, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    (-4 + 2*d - n2) + j[p4, 0, -1 + n2, n3, 1, 0, 0, 0, 0, 1, 1, 2, 0, 1, 1]/
    (4 - 2*d + n2) + j[p4, 0, -1 + n2, n3, 1, 0, 0, 0, 0, 1, 2, 0, 1, 1, 1]/
    (4 - 2*d + n2) + j[p4, 0, -1 + n2, n3, 1, 0, 0, 0, 0, 2, 1, 1, 1, 1, 0]/
    (-4 + 2*d - n2) - (n3*j[p4, 0, -1 + n2, 1 + n3, 0, 0, 0, 0, 0, 1, 1, 1, 
      1, 1, 1])/(-4 + 2*d - n2) + 
   (n3*j[p4, 0, -1 + n2, 1 + n3, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1])/
    (-4 + 2*d - n2) - (n3*j[p4, 0, -1 + n2, 1 + n3, 1, 0, 0, 0, 0, 1, 1, 0, 
      1, 1, 1])/(-4 + 2*d - n2) + 
   (n3*j[p4, 0, -1 + n2, 1 + n3, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1])/
    (-4 + 2*d - n2) + (n3*j[p4, 0, -1 + n2, 1 + n3, 1, 0, 0, 0, 0, 1, 1, 1, 
      1, 1, 0])/(-4 + 2*d - n2) + j[p4, 0, n2, n3, 0, 0, 0, 0, 0, 1, 1, 1, 1, 
     1, 2]/(-4 + 2*d - n2) + j[p4, 0, n2, n3, 0, 0, 0, 0, 0, 1, 1, 1, 2, 1, 
     1]/(4 - 2*d + n2) + j[p4, 0, n2, n3, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 1]/
    (4 - 2*d + n2) + j[p4, 0, n2, n3, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1]/
    (-4 + 2*d - n2) + j[p4, 0, n2, n3, 1, -1, 0, 0, 0, 0, 1, 1, 1, 1, 2]/
    (4 - 2*d + n2) + j[p4, 0, n2, n3, 1, -1, 0, 0, 0, 1, 1, 0, 2, 1, 1]/
    (-4 + 2*d - n2) + (3*j[p4, 0, n2, n3, 1, -1, 0, 0, 0, 1, 1, 1, 0, 2, 1])/
    (-4 + 2*d - n2) + ((-4 + 2*d - n2 - 2*n3)*j[p4, 0, n2, n3, 1, -1, 0, 0, 
      0, 1, 1, 1, 1, 1, 1])/(-4 + 2*d - n2) + 
   j[p4, 0, n2, n3, 1, -1, 0, 0, 0, 1, 1, 2, 0, 1, 1]/(-4 + 2*d - n2) + 
   j[p4, 0, n2, n3, 1, -1, 0, 0, 0, 2, 1, 1, 1, 1, 0]/(4 - 2*d + n2) + 
   j[p4, 0, n2, n3, 1, 0, -1, 0, 0, 0, 1, 1, 1, 1, 2]/(4 - 2*d + n2) + 
   j[p4, 0, n2, n3, 1, 0, -1, 0, 0, 1, 1, 0, 2, 1, 1]/(-4 + 2*d - n2) + 
   ((-2 + d - n2 - 2*n3)*j[p4, 0, n2, n3, 1, 0, -1, 0, 0, 1, 1, 1, 1, 1, 1])/
    (-4 + 2*d - n2) + j[p4, 0, n2, n3, 1, 0, -1, 0, 0, 1, 1, 2, 0, 1, 1]/
    (-4 + 2*d - n2) + (3*j[p4, 0, n2, n3, 1, 0, -1, 0, 0, 1, 2, 0, 1, 1, 1])/
    (-4 + 2*d - n2) + j[p4, 0, n2, n3, 1, 0, -1, 0, 0, 2, 1, 1, 1, 1, 0]/
    (4 - 2*d + n2) + j[p4, 0, n2, n3, 1, 0, 0, -1, 0, 0, 1, 1, 1, 1, 2]/
    (4 - 2*d + n2) - (3*j[p4, 0, n2, n3, 1, 0, 0, -1, 0, 0, 2, 1, 1, 1, 1])/
    (-4 + 2*d - n2) + j[p4, 0, n2, n3, 1, 0, 0, -1, 0, 1, 1, 0, 2, 1, 1]/
    (-4 + 2*d - n2) + ((2 - d + n2)*j[p4, 0, n2, n3, 1, 0, 0, -1, 0, 1, 1, 1, 
      1, 1, 1])/(-4 + 2*d - n2) + j[p4, 0, n2, n3, 1, 0, 0, -1, 0, 1, 1, 2, 
     0, 1, 1]/(-4 + 2*d - n2) + j[p4, 0, n2, n3, 1, 0, 0, -1, 0, 2, 1, 1, 1, 
     1, 0]/(4 - 2*d + n2) + j[p4, 0, n2, n3, 1, 0, 0, 0, -1, 0, 1, 1, 1, 1, 
     2]/(4 - 2*d + n2) + j[p4, 0, n2, n3, 1, 0, 0, 0, -1, 1, 1, 0, 2, 1, 1]/
    (-4 + 2*d - n2) - (3*j[p4, 0, n2, n3, 1, 0, 0, 0, -1, 1, 1, 1, 1, 2, 0])/
    (-4 + 2*d - n2) + j[p4, 0, n2, n3, 1, 0, 0, 0, -1, 1, 1, 2, 0, 1, 1]/
    (-4 + 2*d - n2) + j[p4, 0, n2, n3, 1, 0, 0, 0, -1, 2, 1, 1, 1, 1, 0]/
    (4 - 2*d + n2) + (3*j[p4, 0, n2, n3, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1])/
    (-4 + 2*d - n2) + j[p4, 0, n2, n3, 1, 0, 0, 0, 0, 0, 1, 2, 1, 1, 1]/
    (4 - 2*d + n2) - (3*j[p4, 0, n2, n3, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1])/
    (-4 + 2*d - n2) - (2*j[p4, 0, n2, n3, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1])/
    (-4 + 2*d - n2) + j[p4, 0, n2, n3, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 2]/
    (-4 + 2*d - n2) + (2*j[p4, 0, n2, n3, 1, 0, 0, 0, 0, 1, 1, 1, 0, 2, 1])/
    (-4 + 2*d - n2) + (2*j[p4, 0, n2, n3, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0])/
    (-4 + 2*d - n2) - (2*j[p4, 0, n2, n3, 1, 0, 0, 0, 0, 1, 1, 1, 1, 2, 0])/
    (-4 + 2*d - n2) + j[p4, 0, n2, n3, 1, 0, 0, 0, 0, 1, 1, 1, 2, 1, 0]/
    (4 - 2*d + n2) + j[p4, 0, n2, n3, 1, 0, 0, 0, 0, 2, 1, 0, 1, 1, 1]/
    (-4 + 2*d - n2) + j[p4, 0, n2, n3, 2, -1, 0, 0, 0, 0, 1, 1, 1, 1, 1]/
    (4 - 2*d + n2) + j[p4, 0, n2, n3, 2, -1, 0, 0, 0, 1, 0, 1, 1, 1, 1]/
    (-4 + 2*d - n2) + j[p4, 0, n2, n3, 2, -1, 0, 0, 0, 1, 1, 0, 1, 1, 1]/
    (4 - 2*d + n2) + j[p4, 0, n2, n3, 2, 0, -1, 0, 0, 0, 1, 1, 1, 1, 1]/
    (4 - 2*d + n2) + j[p4, 0, n2, n3, 2, 0, -1, 0, 0, 1, 0, 1, 1, 1, 1]/
    (-4 + 2*d - n2) + j[p4, 0, n2, n3, 2, 0, -1, 0, 0, 1, 1, 0, 1, 1, 1]/
    (4 - 2*d + n2) + j[p4, 0, n2, n3, 2, 0, 0, -1, 0, 0, 1, 1, 1, 1, 1]/
    (-4 + 2*d - n2) + j[p4, 0, n2, n3, 2, 0, 0, -1, 0, 1, 0, 1, 1, 1, 1]/
    (4 - 2*d + n2) + j[p4, 0, n2, n3, 2, 0, 0, -1, 0, 1, 1, 0, 1, 1, 1]/
    (-4 + 2*d - n2) + j[p4, 0, n2, n3, 2, 0, 0, 0, -1, 0, 1, 1, 1, 1, 1]/
    (-4 + 2*d - n2) + j[p4, 0, n2, n3, 2, 0, 0, 0, -1, 1, 0, 1, 1, 1, 1]/
    (4 - 2*d + n2) + j[p4, 0, n2, n3, 2, 0, 0, 0, -1, 1, 1, 0, 1, 1, 1]/
    (-4 + 2*d - n2) + (3*n3*j[p4, 0, n2, 1 + n3, 0, 0, 0, -1, 0, 1, 1, 1, 1, 
      1, 1])/(-4 + 2*d - n2) + 
   (3*n3*j[p4, 0, n2, 1 + n3, 0, 0, 0, 0, -1, 1, 1, 1, 1, 1, 1])/
    (-4 + 2*d - n2) + (n3*j[p4, 0, n2, 1 + n3, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 
      1])/(-4 + 2*d - n2) - (2*n3*j[p4, 0, n2, 1 + n3, 1, 0, 0, -1, 0, 1, 0, 
      1, 1, 1, 1])/(-4 + 2*d - n2) + 
   (2*n3*j[p4, 0, n2, 1 + n3, 1, 0, 0, -1, 0, 1, 1, 0, 1, 1, 1])/
    (-4 + 2*d - n2) - (n3*j[p4, 0, n2, 1 + n3, 1, 0, 0, -1, 0, 1, 1, 1, 0, 1, 
      1])/(-4 + 2*d - n2) - (3*n3*j[p4, 0, n2, 1 + n3, 1, 0, 0, -1, 0, 1, 1, 
      1, 1, 1, 0])/(-4 + 2*d - n2) - 
   (2*n3*j[p4, 0, n2, 1 + n3, 1, 0, 0, 0, -1, 1, 0, 1, 1, 1, 1])/
    (-4 + 2*d - n2) + (2*n3*j[p4, 0, n2, 1 + n3, 1, 0, 0, 0, -1, 1, 1, 0, 1, 
      1, 1])/(-4 + 2*d - n2) - 
   (n3*j[p4, 0, n2, 1 + n3, 1, 0, 0, 0, -1, 1, 1, 1, 0, 1, 1])/
    (-4 + 2*d - n2) - (3*n3*j[p4, 0, n2, 1 + n3, 1, 0, 0, 0, -1, 1, 1, 1, 1, 
      1, 0])/(-4 + 2*d - n2) + 
   (n3*j[p4, 0, n2, 1 + n3, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1])/
    (-4 + 2*d - n2) - (n3*j[p4, 0, n2, 1 + n3, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 
      0])/(-4 + 2*d - n2) + (3*n2*j[p4, 0, 1 + n2, n3, 1, -1, 0, 0, 0, 1, 0, 
      1, 1, 1, 1])/(4 - 2*d + n2) - 
   (2*n2*j[p4, 0, 1 + n2, n3, 1, -1, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    (4 - 2*d + n2) - (n2*j[p4, 0, 1 + n2, n3, 1, 0, -1, 0, 0, 1, 0, 1, 1, 1, 
      1])/(4 - 2*d + n2) + (2*n2*j[p4, 0, 1 + n2, n3, 1, 0, -1, 0, 0, 1, 1, 
      1, 1, 1, 1])/(4 - 2*d + n2) + 
   (n2*j[p4, 0, 1 + n2, n3, 1, 0, 0, -1, 0, 1, 0, 1, 1, 1, 1])/
    (4 - 2*d + n2) - (2*n2*j[p4, 0, 1 + n2, n3, 1, 0, 0, -1, 0, 1, 1, 1, 1, 
      1, 1])/(4 - 2*d + n2) - (3*n2*j[p4, 0, 1 + n2, n3, 1, 0, 0, 0, -1, 1, 
      0, 1, 1, 1, 1])/(4 - 2*d + n2) + 
   (2*n2*j[p4, 0, 1 + n2, n3, 1, 0, 0, 0, -1, 1, 1, 1, 1, 1, 1])/
    (4 - 2*d + n2), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?NonPositive, (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, 
    (n7_)?NonPositive, (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 1 && n13 == 1 && n14 == 1 && 
    n4 == 1 && n5 == 0 && n6 == 0 && n7 == 0 && n8 == 0 && n9 == 1 && 
    n3 != 0 -> ((-1116 + 1318*d - 508*d^2 + 64*d^3 - 676*n2 + 506*d*n2 - 
      93*d^2*n2 - 128*n2^2 + 46*d*n2^2 - 8*n2^3 - 1496*n3 + 1644*d*n3 - 
      576*d^2*n3 + 64*d^3*n3 - 860*n2*n3 + 580*d*n2*n3 - 93*d^2*n2*n3 - 
      148*n2^2*n3 + 46*d*n2^2*n3 - 8*n2^3*n3 - 404*n3^2 + 338*d*n3^2 - 
      68*d^2*n3^2 - 192*n2*n3^2 + 74*d*n2*n3^2 - 20*n2^2*n3^2 - 24*n3^3 + 
      12*d*n3^3 - 8*n2*n3^3)*j[p4, -1, -1 + n2, 2 + n3, 1, 0, 0, 0, 0, 1, 1, 
      1, 1, 1, 1])/(2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 
      12*n3 - 6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 
      4*n2^2 + 28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((24 - 9*d + 4*n2 + 2*n3)*j[p4, -1, n2, 1 + n3, 1, 0, 0, 0, 0, 0, 2, 1, 1, 
      1, 1])/(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
     10*d*n3 + 6*n2*n3 + 2*n3^2) + 
   ((-12616 + 19292*d - 10932*d^2 + 2724*d^3 - 252*d^4 - 14912*n2 + 
      16456*d*n2 - 5998*d^2*n2 + 722*d^3*n2 - 5688*n2^2 + 4072*d*n2^2 - 
      722*d^2*n2^2 - 880*n2^3 + 308*d*n2^3 - 48*n2^4 - 8128*n3 + 9704*d*n3 - 
      3796*d^2*n3 + 488*d^3*n3 - 7856*n2*n3 + 5932*d*n2*n3 - 1110*d^2*n2*n3 - 
      2088*n2^2*n3 + 768*d*n2^2*n3 - 168*n2^3*n3 - 1576*n3^2 + 1348*d*n3^2 - 
      280*d^2*n3^2 - 1200*n2*n3^2 + 468*d*n2*n3^2 - 168*n2^2*n3^2 - 80*n3^3 + 
      40*d*n3^3 - 48*n2*n3^3)*j[p4, -1, n2, 1 + n3, 1, 0, 0, 0, 0, 1, 1, 1, 
      0, 2, 1])/((-2 + d)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 
      12*n3 - 6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 
      4*n2^2 + 28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((37536 - 75920*d + 60824*d^2 - 24128*d^3 + 4740*d^4 - 369*d^5 + 
      92352*n2 - 144280*d*n2 + 83588*d^2*n2 - 21294*d^3*n2 + 2013*d^4*n2 + 
      74432*n2^2 - 83792*d*n2^2 + 31148*d^2*n2^2 - 3822*d^3*n2^2 + 
      24992*n2^3 - 18192*d*n2^3 + 3280*d^2*n2^3 + 3648*n2^4 - 1296*d*n2^4 + 
      192*n2^5 + 24544*n3 - 41424*d*n3 + 25912*d^2*n3 - 7116*d^3*n3 + 
      724*d^4*n3 + 54960*n2*n3 - 67096*d*n2*n3 + 26916*d^2*n2*n3 - 
      3554*d^3*n2*n3 + 37088*n2^2*n3 - 28664*d*n2^2*n3 + 5492*d^2*n2^2*n3 + 
      8800*n2^3*n3 - 3296*d*n2^3*n3 + 672*n2^4*n3 + 4864*n3^2 - 6576*d*n3^2 + 
      2928*d^2*n3^2 - 428*d^3*n3^2 + 9664*n2*n3^2 - 8400*d*n2*n3^2 + 
      1784*d^2*n2*n3^2 + 5248*n2^2*n3^2 - 2096*d*n2^2*n3^2 + 672*n2^3*n3^2 + 
      256*n3^3 - 256*d*n3^3 + 64*d^2*n3^3 + 448*n2*n3^3 - 224*d*n2*n3^3 + 
      192*n2^2*n3^3)*j[p4, -1, n2, 1 + n3, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    ((-2 + d)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 
      6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 
      28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-576 + 698*d - 277*d^2 + 36*d^3 - 790*n2 + 567*d*n2 - 101*d^2*n2 - 
      186*n2^2 + 64*d*n2^2 - 12*n2^3 - 140*n3 + 124*d*n3 - 27*d^2*n3 - 
      218*n2*n3 + 81*d*n2*n3 - 30*n2^2*n3 - 4*n3^2 + 2*d*n3^2 - 12*n2*n3^2)*
     j[p4, -1, n2, 1 + n3, 1, 0, 0, 0, 0, 1, 1, 1, 1, 2, 0])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-2 + d)*j[p4, -1, n2, 1 + n3, 1, 0, 0, 0, 0, 1, 1, 2, 0, 1, 1])/
    (70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 10*d*n3 + 
     6*n2*n3 + 2*n3^2) + ((13544 - 20756*d + 11772*d^2 - 2930*d^3 + 270*d^4 + 
      15512*n2 - 17160*d*n2 + 6264*d^2*n2 - 754*d^3*n2 + 5856*n2^2 - 
      4212*d*n2^2 + 750*d^2*n2^2 + 896*n2^3 - 316*d*n2^3 + 48*n2^4 + 
      8752*n3 - 10544*d*n3 + 4168*d^2*n3 - 542*d^3*n3 + 8168*n2*n3 - 
      6212*d*n2*n3 + 1172*d^2*n2*n3 + 2128*n2^2*n3 - 788*d*n2^2*n3 + 
      168*n2^3*n3 + 1624*n3^2 - 1396*d*n3^2 + 292*d^2*n3^2 + 1216*n2*n3^2 - 
      476*d*n2*n3^2 + 168*n2^2*n3^2 + 80*n3^3 - 40*d*n3^3 + 48*n2*n3^3)*
     j[p4, -1, n2, 1 + n3, 1, 0, 0, 0, 0, 1, 2, 1, 0, 1, 1])/
    ((-2 + d)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 
      6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 
      28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-13544 + 20756*d - 11772*d^2 + 2930*d^3 - 270*d^4 - 15512*n2 + 
      17160*d*n2 - 6264*d^2*n2 + 754*d^3*n2 - 5856*n2^2 + 4212*d*n2^2 - 
      750*d^2*n2^2 - 896*n2^3 + 316*d*n2^3 - 48*n2^4 - 8752*n3 + 10544*d*n3 - 
      4168*d^2*n3 + 542*d^3*n3 - 8168*n2*n3 + 6212*d*n2*n3 - 1172*d^2*n2*n3 - 
      2128*n2^2*n3 + 788*d*n2^2*n3 - 168*n2^3*n3 - 1624*n3^2 + 1396*d*n3^2 - 
      292*d^2*n3^2 - 1216*n2*n3^2 + 476*d*n2*n3^2 - 168*n2^2*n3^2 - 80*n3^3 + 
      40*d*n3^3 - 48*n2*n3^3)*j[p4, -1, n2, 1 + n3, 1, 0, 0, 0, 0, 1, 2, 1, 
      1, 0, 1])/((-2 + d)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 
      12*n3 - 6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 
      4*n2^2 + 28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((2 - d)*j[p4, -1, n2, 1 + n3, 1, 0, 0, 0, 0, 2, 1, 1, 1, 1, 0])/
    (70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 10*d*n3 + 
     6*n2*n3 + 2*n3^2) + ((1040 - 1198*d + 447*d^2 - 54*d^3 + 1090*n2 - 
      769*d*n2 + 133*d^2*n2 + 270*n2^2 - 92*d*n2^2 + 20*n2^3 + 452*n3 - 
      388*d*n3 + 81*d^2*n3 + 374*n2*n3 - 143*d*n2*n3 + 50*n2^2*n3 + 28*n3^2 - 
      14*d*n3^2 + 20*n2*n3^2)*j[p4, -1, n2, 1 + n3, 2, 0, 0, 0, 0, 1, 1, 1, 
      1, 1, 0])/((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 
      6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 
      28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-1056 + 1258*d - 491*d^2 + 63*d^3 - 202*n2 + 191*d*n2 - 42*d^2*n2 + 
      18*n2^2 - 2*d*n2^2 + 4*n2^3 - 1340*n3 + 1498*d*n3 - 540*d^2*n3 + 
      63*d^3*n3 - 188*n2*n3 + 192*d*n2*n3 - 42*d^2*n2*n3 + 28*n2^2*n3 - 
      2*d*n2^2*n3 + 4*n2^3*n3 - 304*n3^2 + 250*d*n3^2 - 49*d^2*n3^2 + 
      18*n2*n3^2 + d*n2*n3^2 + 10*n2^2*n3^2 - 20*n3^3 + 10*d*n3^3 + 
      4*n2*n3^3)*j[p4, -1, n2, 2 + n3, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-3348 + 3954*d - 1524*d^2 + 192*d^3 - 2028*n2 + 1518*d*n2 - 279*d^2*n2 - 
      384*n2^2 + 138*d*n2^2 - 24*n2^3 - 4488*n3 + 4932*d*n3 - 1728*d^2*n3 + 
      192*d^3*n3 - 2580*n2*n3 + 1740*d*n2*n3 - 279*d^2*n2*n3 - 444*n2^2*n3 + 
      138*d*n2^2*n3 - 24*n2^3*n3 - 1212*n3^2 + 1014*d*n3^2 - 204*d^2*n3^2 - 
      576*n2*n3^2 + 222*d*n2*n3^2 - 60*n2^2*n3^2 - 72*n3^3 + 36*d*n3^3 - 
      24*n2*n3^3)*j[p4, -1, n2, 2 + n3, 1, -1, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((1116 - 1318*d + 508*d^2 - 64*d^3 + 676*n2 - 506*d*n2 + 93*d^2*n2 + 
      128*n2^2 - 46*d*n2^2 + 8*n2^3 + 1496*n3 - 1644*d*n3 + 576*d^2*n3 - 
      64*d^3*n3 + 860*n2*n3 - 580*d*n2*n3 + 93*d^2*n2*n3 + 148*n2^2*n3 - 
      46*d*n2^2*n3 + 8*n2^3*n3 + 404*n3^2 - 338*d*n3^2 + 68*d^2*n3^2 + 
      192*n2*n3^2 - 74*d*n2*n3^2 + 20*n2^2*n3^2 + 24*n3^3 - 12*d*n3^3 + 
      8*n2*n3^3)*j[p4, -1, n2, 2 + n3, 1, 0, -1, 0, 0, 1, 1, 1, 1, 1, 1])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((1116 - 1318*d + 508*d^2 - 64*d^3 + 676*n2 - 506*d*n2 + 93*d^2*n2 + 
      128*n2^2 - 46*d*n2^2 + 8*n2^3 + 1496*n3 - 1644*d*n3 + 576*d^2*n3 - 
      64*d^3*n3 + 860*n2*n3 - 580*d*n2*n3 + 93*d^2*n2*n3 + 148*n2^2*n3 - 
      46*d*n2^2*n3 + 8*n2^3*n3 + 404*n3^2 - 338*d*n3^2 + 68*d^2*n3^2 + 
      192*n2*n3^2 - 74*d*n2*n3^2 + 20*n2^2*n3^2 + 24*n3^3 - 12*d*n3^3 + 
      8*n2*n3^3)*j[p4, -1, n2, 2 + n3, 1, 0, 0, -1, 0, 1, 1, 1, 1, 1, 1])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((1116 - 1318*d + 508*d^2 - 64*d^3 + 676*n2 - 506*d*n2 + 93*d^2*n2 + 
      128*n2^2 - 46*d*n2^2 + 8*n2^3 + 1496*n3 - 1644*d*n3 + 576*d^2*n3 - 
      64*d^3*n3 + 860*n2*n3 - 580*d*n2*n3 + 93*d^2*n2*n3 + 148*n2^2*n3 - 
      46*d*n2^2*n3 + 8*n2^3*n3 + 404*n3^2 - 338*d*n3^2 + 68*d^2*n3^2 + 
      192*n2*n3^2 - 74*d*n2*n3^2 + 20*n2^2*n3^2 + 24*n3^3 - 12*d*n3^3 + 
      8*n2*n3^3)*j[p4, -1, n2, 2 + n3, 1, 0, 0, 0, -1, 1, 1, 1, 1, 1, 1])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-1960 + 2276*d - 860*d^2 + 106*d^3 - 1232*n2 + 908*d*n2 - 164*d^2*n2 - 
      248*n2^2 + 88*d*n2^2 - 16*n2^3 - 2672*n3 + 2880*d*n3 - 984*d^2*n3 + 
      106*d^3*n3 - 1584*n2*n3 + 1048*d*n2*n3 - 164*d^2*n2*n3 - 288*n2^2*n3 + 
      88*d*n2^2*n3 - 16*n2^3*n3 - 760*n3^2 + 628*d*n3^2 - 124*d^2*n3^2 - 
      368*n2*n3^2 + 140*d*n2*n3^2 - 40*n2^2*n3^2 - 48*n3^3 + 24*d*n3^3 - 
      16*n2*n3^3)*j[p4, -1, n2, 2 + n3, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((2096 - 2456*d + 938*d^2 - 117*d^3 + 1292*n2 - 960*d*n2 + 175*d^2*n2 + 
      252*n2^2 - 90*d*n2^2 + 16*n2^3 + 2832*n3 - 3084*d*n3 + 1068*d^2*n3 - 
      117*d^3*n3 + 1652*n2*n3 - 1104*d*n2*n3 + 175*d^2*n2*n3 + 292*n2^2*n3 - 
      90*d*n2^2*n3 + 16*n2^3*n3 + 784*n3^2 - 652*d*n3^2 + 130*d^2*n3^2 + 
      376*n2*n3^2 - 144*d*n2*n3^2 + 40*n2^2*n3^2 + 48*n3^3 - 24*d*n3^3 + 
      16*n2*n3^3)*j[p4, -1, n2, 2 + n3, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((1056 - 1258*d + 491*d^2 - 63*d^3 + 202*n2 - 191*d*n2 + 42*d^2*n2 - 
      18*n2^2 + 2*d*n2^2 - 4*n2^3 + 1340*n3 - 1498*d*n3 + 540*d^2*n3 - 
      63*d^3*n3 + 188*n2*n3 - 192*d*n2*n3 + 42*d^2*n2*n3 - 28*n2^2*n3 + 
      2*d*n2^2*n3 - 4*n2^3*n3 + 304*n3^2 - 250*d*n3^2 + 49*d^2*n3^2 - 
      18*n2*n3^2 - d*n2*n3^2 - 10*n2^2*n3^2 + 20*n3^3 - 10*d*n3^3 - 
      4*n2*n3^3)*j[p4, -1, n2, 2 + n3, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((52320*n2 - 80096*d*n2 + 45408*d^2*n2 - 11308*d^3*n2 + 1044*d^4*n2 + 
      60848*n2^2 - 67232*d*n2^2 + 24524*d^2*n2^2 - 2952*d^3*n2^2 + 
      23088*n2^3 - 16568*d*n2^3 + 2944*d^2*n2^3 + 3552*n2^4 - 1248*d*n2^4 + 
      192*n2^5 + 33760*n2*n3 - 40496*d*n2*n3 + 15928*d^2*n2*n3 - 
      2060*d^3*n2*n3 + 32048*n2^2*n3 - 24288*d*n2^2*n3 + 4564*d^2*n2^2*n3 + 
      8432*n2^3*n3 - 3112*d*n2^3*n3 + 672*n2^4*n3 + 6400*n2*n3^2 - 
      5488*d*n2*n3^2 + 1144*d^2*n2*n3^2 + 4832*n2^2*n3^2 - 1888*d*n2^2*n3^2 + 
      672*n2^3*n3^2 + 320*n2*n3^3 - 160*d*n2*n3^3 + 192*n2^2*n3^3)*
     j[p4, -1, 1 + n2, n3, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    ((-2 + d)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 
      6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 
      28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((1560*n2 - 1868*d*n2 + 732*d^2*n2 - 94*d^3*n2 + 472*n2^2 - 396*d*n2^2 + 
      80*d^2*n2^2 + 32*n2^3 - 16*d*n2^3 + 488*n2*n3 - 420*d*n2*n3 + 
      88*d^2*n2*n3 + 80*n2^2*n3 - 40*d*n2^2*n3 + 32*n2*n3^2 - 16*d*n2*n3^2)*
     j[p4, -1, 1 + n2, 1 + n3, 1, -1, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-3936*n2 + 4680*d*n2 - 1820*d^2*n2 + 232*d^3*n2 - 2864*n2^2 + 
      2132*d*n2^2 - 392*d^2*n2^2 - 560*n2^3 + 200*d*n2^3 - 32*n2^4 - 
      1120*n2*n3 + 960*d*n2*n3 - 200*d^2*n2*n3 - 696*n2^2*n3 + 
      272*d*n2^2*n3 - 80*n2^3*n3 - 64*n2*n3^2 + 32*d*n2*n3^2 - 32*n2^2*n3^2)*
     j[p4, -1, 1 + n2, 1 + n3, 1, 0, -1, 0, 0, 1, 1, 1, 1, 1, 1])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-50432*n2 + 76896*d*n2 - 43400*d^2*n2 + 10756*d^3*n2 - 988*d^4*n2 - 
      58848*n2^2 + 64792*d*n2^2 - 23548*d^2*n2^2 + 2824*d^3*n2^2 - 
      22624*n2^3 + 16176*d*n2^3 - 2864*d^2*n2^3 - 3520*n2^4 + 1232*d*n2^4 - 
      192*n2^5 - 33120*n2*n3 + 39616*d*n2*n3 - 15528*d^2*n2*n3 + 
      2000*d^3*n2*n3 - 31440*n2^2*n3 + 23752*d*n2^2*n3 - 4448*d^2*n2^2*n3 - 
      8352*n2^3*n3 + 3072*d*n2^3*n3 - 672*n2^4*n3 - 6368*n2*n3^2 + 
      5456*d*n2*n3^2 - 1136*d^2*n2*n3^2 - 4800*n2^2*n3^2 + 1872*d*n2^2*n3^2 - 
      672*n2^3*n3^2 - 320*n2*n3^3 + 160*d*n2*n3^3 - 192*n2^2*n3^3)*
     j[p4, -1, 1 + n2, 1 + n3, 1, 0, 0, -1, 0, 1, 1, 1, 1, 1, 1])/
    ((-2 + d)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 
      6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 
      28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-54352*n2 + 83408*d*n2 - 47396*d^2*n2 + 11828*d^3*n2 - 1094*d^4*n2 - 
      61312*n2^2 + 67840*d*n2^2 - 24784*d^2*n2^2 + 2988*d^3*n2^2 - 
      23120*n2^3 + 16600*d*n2^3 - 2952*d^2*n2^3 - 3552*n2^4 + 1248*d*n2^4 - 
      192*n2^5 - 34544*n2*n3 + 41536*d*n2*n3 - 16380*d^2*n2*n3 + 
      2124*d^3*n2*n3 - 32144*n2^2*n3 + 24384*d*n2^2*n3 - 4588*d^2*n2^2*n3 - 
      8432*n2^3*n3 + 3112*d*n2^3*n3 - 672*n2^4*n3 - 6464*n2*n3^2 + 
      5552*d*n2*n3^2 - 1160*d^2*n2*n3^2 - 4832*n2^2*n3^2 + 1888*d*n2^2*n3^2 - 
      672*n2^3*n3^2 - 320*n2*n3^3 + 160*d*n2*n3^3 - 192*n2^2*n3^3)*
     j[p4, -1, 1 + n2, 1 + n3, 1, 0, 0, 0, -1, 1, 1, 1, 1, 1, 1])/
    ((-2 + d)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 
      6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 
      28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((25008*n2 - 38076*d*n2 + 21452*d^2*n2 - 5305*d^3*n2 + 486*d^4*n2 + 
      28844*n2^2 - 31692*d*n2^2 + 11493*d^2*n2^2 - 1375*d^3*n2^2 + 
      11172*n2^3 - 7970*d*n2^3 + 1408*d^2*n2^3 + 1752*n2^4 - 612*d*n2^4 + 
      96*n2^5 + 16600*n2*n3 - 19860*d*n2*n3 + 7786*d^2*n2*n3 - 
      1003*d^3*n2*n3 + 15588*n2^2*n3 - 11764*d*n2^2*n3 + 2201*d^2*n2^2*n3 + 
      4156*n2^3*n3 - 1526*d*n2^3*n3 + 336*n2^4*n3 + 3192*n2*n3^2 - 
      2736*d*n2*n3^2 + 570*d^2*n2*n3^2 + 2392*n2^2*n3^2 - 932*d*n2^2*n3^2 + 
      336*n2^3*n3^2 + 160*n2*n3^3 - 80*d*n2*n3^3 + 96*n2^2*n3^3)*
     j[p4, -1, 1 + n2, 1 + n3, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1])/
    ((-2 + d)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 
      6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 
      28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-50016*n2 + 76152*d*n2 - 42904*d^2*n2 + 10610*d^3*n2 - 972*d^4*n2 - 
      57688*n2^2 + 63384*d*n2^2 - 22986*d^2*n2^2 + 2750*d^3*n2^2 - 
      22344*n2^3 + 15940*d*n2^3 - 2816*d^2*n2^3 - 3504*n2^4 + 1224*d*n2^4 - 
      192*n2^5 - 33200*n2*n3 + 39720*d*n2*n3 - 15572*d^2*n2*n3 + 
      2006*d^3*n2*n3 - 31176*n2^2*n3 + 23528*d*n2^2*n3 - 4402*d^2*n2^2*n3 - 
      8312*n2^3*n3 + 3052*d*n2^3*n3 - 672*n2^4*n3 - 6384*n2*n3^2 + 
      5472*d*n2*n3^2 - 1140*d^2*n2*n3^2 - 4784*n2^2*n3^2 + 1864*d*n2^2*n3^2 - 
      672*n2^3*n3^2 - 320*n2*n3^3 + 160*d*n2*n3^3 - 192*n2^2*n3^3)*
     j[p4, -1, 1 + n2, 1 + n3, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1])/
    ((-2 + d)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 
      6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 
      28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-4464 + 5272*d - 2032*d^2 + 256*d^3 - 472*n2 - 612*d*n2 + 644*d^2*n2 - 
      128*d^3*n2 + 840*n2^2 - 828*d*n2^2 + 186*d^2*n2^2 + 224*n2^3 - 
      92*d*n2^3 + 16*n2^4 - 7100*n3 + 7894*d*n3 - 2812*d^2*n3 + 320*d^3*n3 - 
      1124*n2*n3 - 462*d*n2*n3 + 687*d^2*n2*n3 - 128*d^3*n2*n3 + 
      1000*n2^2*n3 - 930*d*n2^2*n3 + 186*d^2*n2^2*n3 + 256*n2^3*n3 - 
      92*d*n2^3*n3 + 16*n2^4*n3 - 3112*n3^2 + 2996*d*n3^2 - 848*d^2*n3^2 + 
      64*d^3*n3^2 - 820*n2*n3^2 + 200*d*n2*n3^2 + 43*d^2*n2*n3^2 + 
      156*n2^2*n3^2 - 102*d*n2^2*n3^2 + 32*n2^3*n3^2 - 500*n3^3 + 
      386*d*n3^3 - 68*d^2*n3^3 - 176*n2*n3^3 + 50*d*n2*n3^3 - 4*n2^2*n3^3 - 
      24*n3^4 + 12*d*n3^4 - 8*n2*n3^4)*j[p4, 0, -2 + n2, 2 + n3, 1, 0, 0, 0, 
      0, 1, 1, 1, 1, 1, 1])/(4*(-1 + n2)*(68 - 56*d + 11*d^2 + 30*n2 - 
      11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 
      34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((2232 - 2636*d + 1016*d^2 - 128*d^3 + 1352*n2 - 1012*d*n2 + 186*d^2*n2 + 
      256*n2^2 - 92*d*n2^2 + 16*n2^3 + 4108*n3 - 4606*d*n3 + 1660*d^2*n3 - 
      192*d^3*n3 + 2396*n2*n3 - 1666*d*n2*n3 + 279*d^2*n2*n3 + 424*n2^2*n3 - 
      138*d*n2^2*n3 + 24*n2^3*n3 + 2304*n3^2 - 2320*d*n3^2 + 712*d^2*n3^2 - 
      64*d^3*n3^2 + 1244*n2*n3^2 - 728*d*n2*n3^2 + 93*d^2*n2*n3^2 + 
      188*n2^2*n3^2 - 46*d*n2^2*n3^2 + 8*n2^3*n3^2 + 452*n3^3 - 362*d*n3^3 + 
      68*d^2*n3^3 + 208*n2*n3^3 - 74*d*n2*n3^3 + 20*n2^2*n3^3 + 24*n3^4 - 
      12*d*n3^4 + 8*n2*n3^4)*j[p4, 0, -2 + n2, 3 + n3, 1, -1, 0, 0, 0, 1, 1, 
      1, 1, 1, 1])/(4*(-1 + n2)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 
      2*n2^2 + 12*n3 - 6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 
      12*d*n2 + 4*n2^2 + 28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-2232 + 2636*d - 1016*d^2 + 128*d^3 - 1352*n2 + 1012*d*n2 - 186*d^2*n2 - 
      256*n2^2 + 92*d*n2^2 - 16*n2^3 - 4108*n3 + 4606*d*n3 - 1660*d^2*n3 + 
      192*d^3*n3 - 2396*n2*n3 + 1666*d*n2*n3 - 279*d^2*n2*n3 - 424*n2^2*n3 + 
      138*d*n2^2*n3 - 24*n2^3*n3 - 2304*n3^2 + 2320*d*n3^2 - 712*d^2*n3^2 + 
      64*d^3*n3^2 - 1244*n2*n3^2 + 728*d*n2*n3^2 - 93*d^2*n2*n3^2 - 
      188*n2^2*n3^2 + 46*d*n2^2*n3^2 - 8*n2^3*n3^2 - 452*n3^3 + 362*d*n3^3 - 
      68*d^2*n3^3 - 208*n2*n3^3 + 74*d*n2*n3^3 - 20*n2^2*n3^3 - 24*n3^4 + 
      12*d*n3^4 - 8*n2*n3^4)*j[p4, 0, -2 + n2, 3 + n3, 1, 0, 0, -1, 0, 1, 1, 
      1, 1, 1, 1])/(4*(-1 + n2)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 
      2*n2^2 + 12*n3 - 6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 
      12*d*n2 + 4*n2^2 + 28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((2804 - 3234*d + 1212*d^2 - 148*d^3 + 1788*n2 - 1310*d*n2 + 235*d^2*n2 + 
      368*n2^2 - 130*d*n2^2 + 24*n2^3 + 1044*n3 - 882*d*n3 + 180*d^2*n3 + 
      520*n2*n3 - 206*d*n2*n3 + 60*n2^2*n3 + 72*n3^2 - 36*d*n3^2 + 
      24*n2*n3^2)*j[p4, 0, -1 + n2, 1 + n3, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((9 - 3*d + 2*n2 + n3)*j[p4, 0, -1 + n2, 1 + n3, 1, 0, 0, 0, 0, 0, 2, 1, 
      1, 1, 1])/(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
     10*d*n3 + 6*n2*n3 + 2*n3^2) + 
   ((-2340 + 2734*d - 1042*d^2 + 130*d^3 - 1488*n2 + 1108*d*n2 - 203*d^2*n2 - 
      284*n2^2 + 102*d*n2^2 - 16*n2^3 - 732*n3 + 618*d*n3 - 126*d^2*n3 - 
      364*n2*n3 + 144*d*n2*n3 - 40*n2^2*n3 - 48*n3^2 + 24*d*n3^2 - 
      16*n2*n3^2)*j[p4, 0, -1 + n2, 1 + n3, 1, 0, 0, 0, 0, 1, 1, 0, 2, 1, 1])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-1116 + 1318*d - 508*d^2 + 64*d^3 - 676*n2 + 506*d*n2 - 93*d^2*n2 - 
      128*n2^2 + 46*d*n2^2 - 8*n2^3 - 1496*n3 + 1644*d*n3 - 576*d^2*n3 + 
      64*d^3*n3 - 860*n2*n3 + 580*d*n2*n3 - 93*d^2*n2*n3 - 148*n2^2*n3 + 
      46*d*n2^2*n3 - 8*n2^3*n3 - 404*n3^2 + 338*d*n3^2 - 68*d^2*n3^2 - 
      192*n2*n3^2 + 74*d*n2*n3^2 - 20*n2^2*n3^2 - 24*n3^3 + 12*d*n3^3 - 
      8*n2*n3^3)*j[p4, 0, -1 + n2, 1 + n3, 1, 0, 0, 0, 0, 1, 1, 1, 0, 2, 1])/
    (4*(-1 + n2)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 
      6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 
      28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((928 - 1908*d + 1390*d^2 - 430*d^3 + 48*d^4 + 2520*n2 - 2412*d*n2 + 
      624*d^2*n2 + 21*d^3*n2 - 18*d^4*n2 - 1568*n2^2 + 2248*d*n2^2 - 
      990*d^2*n2^2 + 138*d^3*n2^2 - 1328*n2^3 + 1020*d*n2^3 - 192*d^2*n2^3 - 
      264*n2^4 + 96*d*n2^4 - 16*n2^5 + 624*n3 - 1392*d*n3 + 1016*d^2*n3 - 
      298*d^3*n3 + 30*d^4*n3 + 1504*n2*n3 - 1024*d*n2*n3 + 158*d^2*n2*n3 + 
      7*d^3*n2*n3 - 1248*n2^2*n3 + 1128*d*n2^2*n3 - 242*d^2*n2^2*n3 - 
      584*n2^3*n3 + 228*d*n2^3*n3 - 56*n2^4*n3 + 48*n3^2 - 164*d*n3^2 + 
      110*d^2*n3^2 - 20*d^3*n3^2 + 248*n2*n3^2 - 68*d*n2*n3^2 - 
      6*d^2*n2*n3^2 - 272*n2^2*n3^2 + 120*d*n2^2*n3^2 - 56*n2^3*n3^2 - 
      8*d*n3^3 + 4*d^2*n3^3 + 16*n2*n3^3 - 16*n2^2*n3^3)*
     j[p4, 0, -1 + n2, 1 + n3, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    (2*(-1 + n2)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 
      6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 
      28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((228 - 218*d + 60*d^2 - 4*d^3 + 1084*n2 - 726*d*n2 + 119*d^2*n2 + 
      320*n2^2 - 106*d*n2^2 + 24*n2^3 + 392*n3 - 356*d*n3 + 88*d^2*n3 - 
      4*d^3*n3 + 1476*n2*n3 - 868*d*n2*n3 + 119*d^2*n2*n3 + 380*n2^2*n3 - 
      106*d*n2^2*n3 + 24*n2^3*n3 + 172*n3^2 - 142*d*n3^2 + 28*d^2*n3^2 + 
      416*n2*n3^2 - 142*d*n2*n3^2 + 60*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 
      24*n2*n3^3)*j[p4, 0, -1 + n2, 1 + n3, 1, 0, 0, 0, 0, 1, 1, 1, 1, 2, 0])/
    (4*(-1 + n2)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 
      6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 
      28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-2340 + 2734*d - 1042*d^2 + 130*d^3 - 1488*n2 + 1108*d*n2 - 203*d^2*n2 - 
      284*n2^2 + 102*d*n2^2 - 16*n2^3 - 732*n3 + 618*d*n3 - 126*d^2*n3 - 
      364*n2*n3 + 144*d*n2*n3 - 40*n2^2*n3 - 48*n3^2 + 24*d*n3^2 - 
      16*n2*n3^2)*j[p4, 0, -1 + n2, 1 + n3, 1, 0, 0, 0, 0, 1, 1, 2, 0, 1, 1])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-3748 + 4362*d - 1652*d^2 + 204*d^3 - 2788*n2 + 2030*d*n2 - 363*d^2*n2 - 
      600*n2^2 + 210*d*n2^2 - 40*n2^3 - 1364*n3 + 1162*d*n3 - 240*d^2*n3 - 
      824*n2*n3 + 322*d*n2*n3 - 100*n2^2*n3 - 88*n3^2 + 44*d*n3^2 - 
      40*n2*n3^2)*j[p4, 0, -1 + n2, 1 + n3, 1, 0, 0, 0, 0, 1, 2, 0, 1, 1, 1])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-13544 + 20756*d - 11772*d^2 + 2930*d^3 - 270*d^4 - 15512*n2 + 
      17160*d*n2 - 6264*d^2*n2 + 754*d^3*n2 - 5856*n2^2 + 4212*d*n2^2 - 
      750*d^2*n2^2 - 896*n2^3 + 316*d*n2^3 - 48*n2^4 - 8752*n3 + 10544*d*n3 - 
      4168*d^2*n3 + 542*d^3*n3 - 8168*n2*n3 + 6212*d*n2*n3 - 1172*d^2*n2*n3 - 
      2128*n2^2*n3 + 788*d*n2^2*n3 - 168*n2^3*n3 - 1624*n3^2 + 1396*d*n3^2 - 
      292*d^2*n3^2 - 1216*n2*n3^2 + 476*d*n2*n3^2 - 168*n2^2*n3^2 - 80*n3^3 + 
      40*d*n3^3 - 48*n2*n3^3)*j[p4, 0, -1 + n2, 1 + n3, 1, 0, 0, 0, 0, 1, 2, 
      1, 0, 1, 1])/((-2 + d)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 
      12*n3 - 6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 
      4*n2^2 + 28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((13544 - 20756*d + 11772*d^2 - 2930*d^3 + 270*d^4 + 15512*n2 - 
      17160*d*n2 + 6264*d^2*n2 - 754*d^3*n2 + 5856*n2^2 - 4212*d*n2^2 + 
      750*d^2*n2^2 + 896*n2^3 - 316*d*n2^3 + 48*n2^4 + 8752*n3 - 10544*d*n3 + 
      4168*d^2*n3 - 542*d^3*n3 + 8168*n2*n3 - 6212*d*n2*n3 + 1172*d^2*n2*n3 + 
      2128*n2^2*n3 - 788*d*n2^2*n3 + 168*n2^3*n3 + 1624*n3^2 - 1396*d*n3^2 + 
      292*d^2*n3^2 + 1216*n2*n3^2 - 476*d*n2*n3^2 + 168*n2^2*n3^2 + 80*n3^3 - 
      40*d*n3^3 + 48*n2*n3^3)*j[p4, 0, -1 + n2, 1 + n3, 1, 0, 0, 0, 0, 1, 2, 
      1, 1, 0, 1])/((-2 + d)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 
      12*n3 - 6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 
      4*n2^2 + 28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((2804 - 3234*d + 1212*d^2 - 148*d^3 + 1788*n2 - 1310*d*n2 + 235*d^2*n2 + 
      368*n2^2 - 130*d*n2^2 + 24*n2^3 + 1044*n3 - 882*d*n3 + 180*d^2*n3 + 
      520*n2*n3 - 206*d*n2*n3 + 60*n2^2*n3 + 72*n3^2 - 36*d*n3^2 + 
      24*n2*n3^2)*j[p4, 0, -1 + n2, 1 + n3, 1, 0, 0, 0, 0, 2, 1, 1, 1, 1, 0])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-1040 + 1198*d - 447*d^2 + 54*d^3 - 1090*n2 + 769*d*n2 - 133*d^2*n2 - 
      270*n2^2 + 92*d*n2^2 - 20*n2^3 - 452*n3 + 388*d*n3 - 81*d^2*n3 - 
      374*n2*n3 + 143*d*n2*n3 - 50*n2^2*n3 - 28*n3^2 + 14*d*n3^2 - 
      20*n2*n3^2)*j[p4, 0, -1 + n2, 1 + n3, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((1992 - 2396*d + 948*d^2 - 124*d^3 - 2992*n2 + 3080*d*n2 - 1086*d^2*n2 + 
      132*d^3*n2 - 1952*n2^2 + 1304*d*n2^2 - 220*d^2*n2^2 - 344*n2^3 + 
      112*d*n2^3 - 16*n2^4 + 2140*n3 - 2486*d*n3 + 948*d^2*n3 - 120*d^3*n3 - 
      5204*n2*n3 + 4534*d*n2*n3 - 1321*d^2*n2*n3 + 132*d^3*n2*n3 - 
      2712*n2^2*n3 + 1550*d*n2^2*n3 - 220*d^2*n2^2*n3 - 408*n2^3*n3 + 
      112*d*n2^3*n3 - 16*n2^4*n3 + 16*n3^2 + 32*d*n3^2 - 28*d^2*n3^2 + 
      4*d^3*n3^2 - 2684*n2*n3^2 + 1620*d*n2*n3^2 - 235*d^2*n2*n3^2 - 
      836*n2^2*n3^2 + 246*d*n2^2*n3^2 - 64*n2^3*n3^2 - 140*n3^3 + 
      126*d*n3^3 - 28*d^2*n3^3 - 496*n2*n3^3 + 166*d*n2*n3^3 - 76*n2^2*n3^3 - 
      8*n3^4 + 4*d*n3^4 - 24*n2*n3^4)*j[p4, 0, -1 + n2, 2 + n3, 0, 0, 0, 0, 
      0, 1, 1, 1, 1, 1, 1])/(4*(-1 + n2)*(68 - 56*d + 11*d^2 + 30*n2 - 
      11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 
      34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((1116 - 1318*d + 508*d^2 - 64*d^3 + 676*n2 - 506*d*n2 + 93*d^2*n2 + 
      128*n2^2 - 46*d*n2^2 + 8*n2^3 + 1496*n3 - 1644*d*n3 + 576*d^2*n3 - 
      64*d^3*n3 + 860*n2*n3 - 580*d*n2*n3 + 93*d^2*n2*n3 + 148*n2^2*n3 - 
      46*d*n2^2*n3 + 8*n2^3*n3 + 404*n3^2 - 338*d*n3^2 + 68*d^2*n3^2 + 
      192*n2*n3^2 - 74*d*n2*n3^2 + 20*n2^2*n3^2 + 24*n3^3 - 12*d*n3^3 + 
      8*n2*n3^3)*j[p4, 0, -1 + n2, 2 + n3, 1, -1, 0, 0, 0, 1, 1, 1, 0, 2, 1])/
    (4*(-1 + n2)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 
      6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 
      28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-1548 + 2426*d - 1386*d^2 + 340*d^3 - 30*d^4 + 3016*n2 - 2688*d*n2 + 
      789*d^2*n2 - 77*d^3*n2 + 1380*n2^2 - 828*d*n2^2 + 123*d^2*n2^2 + 
      184*n2^3 - 54*d*n2^3 + 8*n2^4 - 1588*n3 + 2554*d*n3 - 1472*d^2*n3 + 
      356*d^3*n3 - 30*d^4*n3 + 5288*n2*n3 - 4122*d*n2*n3 + 1010*d^2*n2*n3 - 
      77*d^3*n2*n3 + 2024*n2^2*n3 - 1028*d*n2^2*n3 + 123*d^2*n2^2*n3 + 
      228*n2^3*n3 - 54*d*n2^3*n3 + 8*n2^4*n3 + 100*n3^2 + 10*d*n3^2 - 
      62*d^2*n3^2 + 16*d^3*n3^2 + 2744*n2*n3^2 - 1596*d*n2*n3^2 + 
      221*d^2*n2*n3^2 + 712*n2^2*n3^2 - 200*d*n2^2*n3^2 + 44*n2^3*n3^2 + 
      148*n3^3 - 122*d*n3^3 + 24*d^2*n3^3 + 496*n2*n3^3 - 162*d*n2*n3^3 + 
      68*n2^2*n3^3 + 8*n3^4 - 4*d*n3^4 + 24*n2*n3^4)*
     j[p4, 0, -1 + n2, 2 + n3, 1, -1, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    (2*(-1 + n2)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 
      6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 
      28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((13392 - 19164*d + 10050*d^2 - 2292*d^3 + 192*d^4 + 8112*n2 - 8100*d*n2 + 
      2634*d^2*n2 - 279*d^3*n2 + 1536*n2^2 - 936*d*n2^2 + 138*d^2*n2^2 + 
      96*n2^3 - 24*d*n2^3 + 21300*n3 - 28170*d*n3 + 13368*d^2*n3 - 
      2688*d^3*n3 + 192*d^4*n3 + 12348*n2*n3 - 11058*d*n2*n3 + 
      3135*d^2*n2*n3 - 279*d^3*n2*n3 + 2160*n2^2*n3 - 1134*d*n2^2*n3 + 
      138*d^2*n2^2*n3 + 120*n2^3*n3 - 24*d*n2^3*n3 + 9336*n3^2 - 
      10200*d*n3^2 + 3558*d^2*n3^2 - 396*d^3*n3^2 + 4884*n2*n3^2 - 
      3204*d*n2*n3^2 + 501*d^2*n2*n3^2 + 684*n2^2*n3^2 - 198*d*n2^2*n3^2 + 
      24*n2^3*n3^2 + 1500*n3^3 - 1230*d*n3^3 + 240*d^2*n3^3 + 672*n2*n3^3 - 
      246*d*n2*n3^3 + 60*n2^2*n3^3 + 72*n3^4 - 36*d*n3^4 + 24*n2*n3^4)*
     j[p4, 0, -1 + n2, 2 + n3, 1, 0, -1, 0, 0, 1, 1, 1, 1, 1, 1])/
    (4*(-1 + n2)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 
      6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 
      28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-1116 + 1318*d - 508*d^2 + 64*d^3 - 676*n2 + 506*d*n2 - 93*d^2*n2 - 
      128*n2^2 + 46*d*n2^2 - 8*n2^3 - 1496*n3 + 1644*d*n3 - 576*d^2*n3 + 
      64*d^3*n3 - 860*n2*n3 + 580*d*n2*n3 - 93*d^2*n2*n3 - 148*n2^2*n3 + 
      46*d*n2^2*n3 - 8*n2^3*n3 - 404*n3^2 + 338*d*n3^2 - 68*d^2*n3^2 - 
      192*n2*n3^2 + 74*d*n2*n3^2 - 20*n2^2*n3^2 - 24*n3^3 + 12*d*n3^3 - 
      8*n2*n3^3)*j[p4, 0, -1 + n2, 2 + n3, 1, 0, -1, 0, 0, 1, 2, 0, 1, 1, 1])/
    (2*(-1 + n2)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 
      6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 
      28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((1116 - 1318*d + 508*d^2 - 64*d^3 + 676*n2 - 506*d*n2 + 93*d^2*n2 + 
      128*n2^2 - 46*d*n2^2 + 8*n2^3 + 1496*n3 - 1644*d*n3 + 576*d^2*n3 - 
      64*d^3*n3 + 860*n2*n3 - 580*d*n2*n3 + 93*d^2*n2*n3 + 148*n2^2*n3 - 
      46*d*n2^2*n3 + 8*n2^3*n3 + 404*n3^2 - 338*d*n3^2 + 68*d^2*n3^2 + 
      192*n2*n3^2 - 74*d*n2*n3^2 + 20*n2^2*n3^2 + 24*n3^3 - 12*d*n3^3 + 
      8*n2*n3^3)*j[p4, 0, -1 + n2, 2 + n3, 1, 0, 0, -1, 0, 0, 2, 1, 1, 1, 1])/
    (2*(-1 + n2)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 
      6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 
      28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((1116 - 1318*d + 508*d^2 - 64*d^3 + 676*n2 - 506*d*n2 + 93*d^2*n2 + 
      128*n2^2 - 46*d*n2^2 + 8*n2^3 + 1496*n3 - 1644*d*n3 + 576*d^2*n3 - 
      64*d^3*n3 + 860*n2*n3 - 580*d*n2*n3 + 93*d^2*n2*n3 + 148*n2^2*n3 - 
      46*d*n2^2*n3 + 8*n2^3*n3 + 404*n3^2 - 338*d*n3^2 + 68*d^2*n3^2 + 
      192*n2*n3^2 - 74*d*n2*n3^2 + 20*n2^2*n3^2 + 24*n3^3 - 12*d*n3^3 + 
      8*n2*n3^3)*j[p4, 0, -1 + n2, 2 + n3, 1, 0, 0, -1, 0, 1, 1, 1, 0, 2, 1])/
    (4*(-1 + n2)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 
      6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 
      28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-4464 + 8620*d - 5986*d^2 + 1780*d^3 - 192*d^4 - 7168*n2 + 9324*d*n2 - 
      3922*d^2*n2 + 535*d^3*n2 - 3216*n2^2 + 2592*d*n2^2 - 510*d^2*n2^2 - 
      544*n2^3 + 208*d*n2^3 - 32*n2^4 - 7100*n3 + 12382*d*n3 - 7744*d^2*n3 + 
      2048*d^3*n3 - 192*d^4*n3 - 10100*n2*n3 + 11982*d*n2*n3 - 
      4509*d^2*n2*n3 + 535*d^3*n2*n3 - 4160*n2^2*n3 + 2994*d*n2^2*n3 - 
      510*d^2*n2^2*n3 - 632*n2^3*n3 + 208*d*n2^3*n3 - 32*n2^4*n3 - 
      3112*n3^2 + 4208*d*n3^2 - 1862*d^2*n3^2 + 268*d^3*n3^2 - 3244*n2*n3^2 + 
      2804*d*n2*n3^2 - 587*d^2*n2*n3^2 - 996*n2^2*n3^2 + 402*d*n2^2*n3^2 - 
      88*n2^3*n3^2 - 500*n3^3 + 458*d*n3^3 - 104*d^2*n3^3 - 320*n2*n3^3 + 
      146*d*n2*n3^3 - 52*n2^2*n3^3 - 24*n3^4 + 12*d*n3^4 - 8*n2*n3^4)*
     j[p4, 0, -1 + n2, 2 + n3, 1, 0, 0, -1, 0, 1, 1, 1, 1, 1, 1])/
    (4*(-1 + n2)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 
      6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 
      28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-228 + 218*d - 60*d^2 + 4*d^3 - 1084*n2 + 726*d*n2 - 119*d^2*n2 - 
      320*n2^2 + 106*d*n2^2 - 24*n2^3 - 392*n3 + 356*d*n3 - 88*d^2*n3 + 
      4*d^3*n3 - 1476*n2*n3 + 868*d*n2*n3 - 119*d^2*n2*n3 - 380*n2^2*n3 + 
      106*d*n2^2*n3 - 24*n2^3*n3 - 172*n3^2 + 142*d*n3^2 - 28*d^2*n3^2 - 
      416*n2*n3^2 + 142*d*n2*n3^2 - 60*n2^2*n3^2 - 8*n3^3 + 4*d*n3^3 - 
      24*n2*n3^3)*j[p4, 0, -1 + n2, 2 + n3, 1, 0, 0, -1, 0, 1, 1, 1, 1, 2, 
      0])/(4*(-1 + n2)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 
      12*n3 - 6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 
      4*n2^2 + 28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-1116 + 1318*d - 508*d^2 + 64*d^3 - 676*n2 + 506*d*n2 - 93*d^2*n2 - 
      128*n2^2 + 46*d*n2^2 - 8*n2^3 - 1496*n3 + 1644*d*n3 - 576*d^2*n3 + 
      64*d^3*n3 - 860*n2*n3 + 580*d*n2*n3 - 93*d^2*n2*n3 - 148*n2^2*n3 + 
      46*d*n2^2*n3 - 8*n2^3*n3 - 404*n3^2 + 338*d*n3^2 - 68*d^2*n3^2 - 
      192*n2*n3^2 + 74*d*n2*n3^2 - 20*n2^2*n3^2 - 24*n3^3 + 12*d*n3^3 - 
      8*n2*n3^3)*j[p4, 0, -1 + n2, 2 + n3, 1, 0, 0, 0, -1, 1, 1, 1, 1, 1, 1])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-1116 + 1318*d - 508*d^2 + 64*d^3 - 676*n2 + 506*d*n2 - 93*d^2*n2 - 
      128*n2^2 + 46*d*n2^2 - 8*n2^3 - 1496*n3 + 1644*d*n3 - 576*d^2*n3 + 
      64*d^3*n3 - 860*n2*n3 + 580*d*n2*n3 - 93*d^2*n2*n3 - 148*n2^2*n3 + 
      46*d*n2^2*n3 - 8*n2^3*n3 - 404*n3^2 + 338*d*n3^2 - 68*d^2*n3^2 - 
      192*n2*n3^2 + 74*d*n2*n3^2 - 20*n2^2*n3^2 - 24*n3^3 + 12*d*n3^3 - 
      8*n2*n3^3)*j[p4, 0, -1 + n2, 2 + n3, 1, 0, 0, 0, -1, 1, 1, 1, 1, 2, 0])/
    (4*(-1 + n2)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 
      6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 
      28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((2804 - 3234*d + 1212*d^2 - 148*d^3 + 1788*n2 - 1310*d*n2 + 235*d^2*n2 + 
      368*n2^2 - 130*d*n2^2 + 24*n2^3 + 3848*n3 - 4116*d*n3 + 1392*d^2*n3 - 
      148*d^3*n3 + 2308*n2*n3 - 1516*d*n2*n3 + 235*d^2*n2*n3 + 428*n2^2*n3 - 
      130*d*n2^2*n3 + 24*n2^3*n3 + 1116*n3^2 - 918*d*n3^2 + 180*d^2*n3^2 + 
      544*n2*n3^2 - 206*d*n2*n3^2 + 60*n2^2*n3^2 + 72*n3^3 - 36*d*n3^3 + 
      24*n2*n3^3)*j[p4, 0, -1 + n2, 2 + n3, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-2804 + 3234*d - 1212*d^2 + 148*d^3 - 1788*n2 + 1310*d*n2 - 235*d^2*n2 - 
      368*n2^2 + 130*d*n2^2 - 24*n2^3 - 3848*n3 + 4116*d*n3 - 1392*d^2*n3 + 
      148*d^3*n3 - 2308*n2*n3 + 1516*d*n2*n3 - 235*d^2*n2*n3 - 428*n2^2*n3 + 
      130*d*n2^2*n3 - 24*n2^3*n3 - 1116*n3^2 + 918*d*n3^2 - 180*d^2*n3^2 - 
      544*n2*n3^2 + 206*d*n2*n3^2 - 60*n2^2*n3^2 - 72*n3^3 + 36*d*n3^3 - 
      24*n2*n3^3)*j[p4, 0, -1 + n2, 2 + n3, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-10072 + 11740*d - 4456*d^2 + 552*d^3 + 1560*n2 - 4460*d*n2 + 
      2598*d^2*n2 - 424*d^3*n2 + 3680*n2^2 - 3188*d*n2^2 + 656*d^2*n2^2 + 
      912*n2^3 - 352*d*n2^3 + 64*n2^4 - 14796*n3 + 16126*d*n3 - 5596*d^2*n3 + 
      616*d^3*n3 + 1956*n2*n3 - 5662*d*n2*n3 + 3001*d^2*n2*n3 - 
      424*d^3*n2*n3 + 4760*n2^2*n3 - 3702*d*n2^2*n3 + 656*d^2*n2^2*n3 + 
      1064*n2^3*n3 - 352*d*n2^3*n3 + 64*n2^4*n3 - 5344*n3^2 + 4832*d*n3^2 - 
      1208*d^2*n3^2 + 64*d^3*n3^2 + 324*n2*n3^2 - 1224*d*n2*n3^2 + 
      403*d^2*n2*n3^2 + 1124*n2^2*n3^2 - 514*d*n2^2*n3^2 + 152*n2^3*n3^2 - 
      644*n3^3 + 458*d*n3^3 - 68*d^2*n3^3 - 80*n2*n3^3 - 22*d*n2*n3^3 + 
      44*n2^2*n3^3 - 24*n3^4 + 12*d*n3^4 - 8*n2*n3^4)*
     j[p4, 0, -1 + n2, 2 + n3, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1])/
    (4*(-1 + n2)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 
      6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 
      28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((5080 - 6012*d + 2324*d^2 - 294*d^3 - 2016*n2 + 3212*d*n2 - 1552*d^2*n2 + 
      234*d^3*n2 - 2272*n2^2 + 1800*d*n2^2 - 350*d^2*n2^2 - 488*n2^3 + 
      180*d*n2^3 - 32*n2^4 + 7212*n3 - 8006*d*n3 + 2848*d^2*n3 - 324*d^3*n3 - 
      3180*n2*n3 + 4358*d*n2*n3 - 1825*d^2*n2*n3 + 234*d^3*n2*n3 - 
      3048*n2^2*n3 + 2118*d*n2^2*n3 - 350*d^2*n2^2*n3 - 576*n2^3*n3 + 
      180*d*n2^3*n3 - 32*n2^4*n3 + 2352*n3^2 - 2144*d*n3^2 + 544*d^2*n3^2 - 
      30*d^3*n3^2 - 1348*n2*n3^2 + 1228*d*n2*n3^2 - 273*d^2*n2*n3^2 - 
      828*n2^2*n3^2 + 318*d*n2^2*n3^2 - 88*n2^3*n3^2 + 228*n3^3 - 
      154*d*n3^3 + 20*d^2*n3^3 - 192*n2*n3^3 + 82*d*n2*n3^3 - 52*n2^2*n3^3 + 
      8*n3^4 - 4*d*n3^4 - 8*n2*n3^4)*j[p4, 0, -1 + n2, 2 + n3, 1, 0, 0, 0, 0, 
      1, 1, 1, 1, 0, 1])/(2*(-1 + n2)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 
      2*n2^2 + 12*n3 - 6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 
      12*d*n2 + 4*n2^2 + 28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-1992 + 2396*d - 948*d^2 + 124*d^3 + 2992*n2 - 3080*d*n2 + 1086*d^2*n2 - 
      132*d^3*n2 + 1952*n2^2 - 1304*d*n2^2 + 220*d^2*n2^2 + 344*n2^3 - 
      112*d*n2^3 + 16*n2^4 - 2140*n3 + 2486*d*n3 - 948*d^2*n3 + 120*d^3*n3 + 
      5204*n2*n3 - 4534*d*n2*n3 + 1321*d^2*n2*n3 - 132*d^3*n2*n3 + 
      2712*n2^2*n3 - 1550*d*n2^2*n3 + 220*d^2*n2^2*n3 + 408*n2^3*n3 - 
      112*d*n2^3*n3 + 16*n2^4*n3 - 16*n3^2 - 32*d*n3^2 + 28*d^2*n3^2 - 
      4*d^3*n3^2 + 2684*n2*n3^2 - 1620*d*n2*n3^2 + 235*d^2*n2*n3^2 + 
      836*n2^2*n3^2 - 246*d*n2^2*n3^2 + 64*n2^3*n3^2 + 140*n3^3 - 
      126*d*n3^3 + 28*d^2*n3^3 + 496*n2*n3^3 - 166*d*n2*n3^3 + 76*n2^2*n3^3 + 
      8*n3^4 - 4*d*n3^4 + 24*n2*n3^4)*j[p4, 0, -1 + n2, 2 + n3, 1, 0, 0, 0, 
      0, 1, 1, 1, 1, 1, 0])/(4*(-1 + n2)*(68 - 56*d + 11*d^2 + 30*n2 - 
      11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 
      34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-228 + 218*d - 60*d^2 + 4*d^3 - 1084*n2 + 726*d*n2 - 119*d^2*n2 - 
      320*n2^2 + 106*d*n2^2 - 24*n2^3 - 392*n3 + 356*d*n3 - 88*d^2*n3 + 
      4*d^3*n3 - 1476*n2*n3 + 868*d*n2*n3 - 119*d^2*n2*n3 - 380*n2^2*n3 + 
      106*d*n2^2*n3 - 24*n2^3*n3 - 172*n3^2 + 142*d*n3^2 - 28*d^2*n3^2 - 
      416*n2*n3^2 + 142*d*n2*n3^2 - 60*n2^2*n3^2 - 8*n3^3 + 4*d*n3^3 - 
      24*n2*n3^3)*j[p4, 0, -1 + n2, 2 + n3, 2, -1, 0, 0, 0, 1, 1, 1, 1, 1, 
      0])/(4*(-1 + n2)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 
      12*n3 - 6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 
      4*n2^2 + 28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-1116 + 1318*d - 508*d^2 + 64*d^3 - 676*n2 + 506*d*n2 - 93*d^2*n2 - 
      128*n2^2 + 46*d*n2^2 - 8*n2^3 - 1496*n3 + 1644*d*n3 - 576*d^2*n3 + 
      64*d^3*n3 - 860*n2*n3 + 580*d*n2*n3 - 93*d^2*n2*n3 - 148*n2^2*n3 + 
      46*d*n2^2*n3 - 8*n2^3*n3 - 404*n3^2 + 338*d*n3^2 - 68*d^2*n3^2 - 
      192*n2*n3^2 + 74*d*n2*n3^2 - 20*n2^2*n3^2 - 24*n3^3 + 12*d*n3^3 - 
      8*n2*n3^3)*j[p4, 0, -1 + n2, 2 + n3, 2, 0, -1, 0, 0, 1, 1, 1, 1, 1, 0])/
    (4*(-1 + n2)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 
      6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 
      28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((228 - 218*d + 60*d^2 - 4*d^3 + 1084*n2 - 726*d*n2 + 119*d^2*n2 + 
      320*n2^2 - 106*d*n2^2 + 24*n2^3 + 392*n3 - 356*d*n3 + 88*d^2*n3 - 
      4*d^3*n3 + 1476*n2*n3 - 868*d*n2*n3 + 119*d^2*n2*n3 + 380*n2^2*n3 - 
      106*d*n2^2*n3 + 24*n2^3*n3 + 172*n3^2 - 142*d*n3^2 + 28*d^2*n3^2 + 
      416*n2*n3^2 - 142*d*n2*n3^2 + 60*n2^2*n3^2 + 8*n3^3 - 4*d*n3^3 + 
      24*n2*n3^3)*j[p4, 0, -1 + n2, 2 + n3, 2, 0, 0, -1, 0, 1, 1, 1, 1, 1, 
      0])/(4*(-1 + n2)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 
      12*n3 - 6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 
      4*n2^2 + 28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((1116 - 1318*d + 508*d^2 - 64*d^3 + 676*n2 - 506*d*n2 + 93*d^2*n2 + 
      128*n2^2 - 46*d*n2^2 + 8*n2^3 + 1496*n3 - 1644*d*n3 + 576*d^2*n3 - 
      64*d^3*n3 + 860*n2*n3 - 580*d*n2*n3 + 93*d^2*n2*n3 + 148*n2^2*n3 - 
      46*d*n2^2*n3 + 8*n2^3*n3 + 404*n3^2 - 338*d*n3^2 + 68*d^2*n3^2 + 
      192*n2*n3^2 - 74*d*n2*n3^2 + 20*n2^2*n3^2 + 24*n3^3 - 12*d*n3^3 + 
      8*n2*n3^3)*j[p4, 0, -1 + n2, 2 + n3, 2, 0, 0, 0, -1, 1, 1, 1, 1, 1, 0])/
    (4*(-1 + n2)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 
      6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 
      28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-4008 + 4836*d - 1912*d^2 + 248*d^3 - 536*n2 + 572*d*n2 - 134*d^2*n2 + 
      128*n2^2 - 28*d*n2^2 + 16*n2^3 - 7204*n3 + 8282*d*n3 - 3084*d^2*n3 + 
      372*d^3*n3 - 756*n2*n3 + 870*d*n2*n3 - 201*d^2*n2*n3 + 232*n2^2*n3 - 
      42*d*n2^2*n3 + 24*n2^3*n3 - 3872*n3^2 + 4000*d*n3^2 - 1280*d^2*n3^2 + 
      124*d^3*n3^2 - 180*n2*n3^2 + 304*d*n2*n3^2 - 67*d^2*n2*n3^2 + 
      124*n2^2*n3^2 - 14*d*n2^2*n3^2 + 8*n2^3*n3^2 - 716*n3^3 + 574*d*n3^3 - 
      108*d^2*n3^3 + 48*n2*n3^3 + 6*d*n2*n3^3 + 20*n2^2*n3^3 - 40*n3^4 + 
      20*d*n3^4 + 8*n2*n3^4)*j[p4, 0, -1 + n2, 3 + n3, 0, 0, 0, -1, 0, 1, 1, 
      1, 1, 1, 1])/(4*(-1 + n2)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 
      2*n2^2 + 12*n3 - 6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 
      12*d*n2 + 4*n2^2 + 28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((2232 - 2636*d + 1016*d^2 - 128*d^3 + 1352*n2 - 1012*d*n2 + 186*d^2*n2 + 
      256*n2^2 - 92*d*n2^2 + 16*n2^3 + 4108*n3 - 4606*d*n3 + 1660*d^2*n3 - 
      192*d^3*n3 + 2396*n2*n3 - 1666*d*n2*n3 + 279*d^2*n2*n3 + 424*n2^2*n3 - 
      138*d*n2^2*n3 + 24*n2^3*n3 + 2304*n3^2 - 2320*d*n3^2 + 712*d^2*n3^2 - 
      64*d^3*n3^2 + 1244*n2*n3^2 - 728*d*n2*n3^2 + 93*d^2*n2*n3^2 + 
      188*n2^2*n3^2 - 46*d*n2^2*n3^2 + 8*n2^3*n3^2 + 452*n3^3 - 362*d*n3^3 + 
      68*d^2*n3^3 + 208*n2*n3^3 - 74*d*n2*n3^3 + 20*n2^2*n3^3 + 24*n3^4 - 
      12*d*n3^4 + 8*n2*n3^4)*j[p4, 0, -1 + n2, 3 + n3, 0, 0, 0, 0, -1, 1, 1, 
      1, 1, 1, 1])/(4*(-1 + n2)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 
      2*n2^2 + 12*n3 - 6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 
      12*d*n2 + 4*n2^2 + 28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-2232 + 2636*d - 1016*d^2 + 128*d^3 - 1352*n2 + 1012*d*n2 - 186*d^2*n2 - 
      256*n2^2 + 92*d*n2^2 - 16*n2^3 - 4108*n3 + 4606*d*n3 - 1660*d^2*n3 + 
      192*d^3*n3 - 2396*n2*n3 + 1666*d*n2*n3 - 279*d^2*n2*n3 - 424*n2^2*n3 + 
      138*d*n2^2*n3 - 24*n2^3*n3 - 2304*n3^2 + 2320*d*n3^2 - 712*d^2*n3^2 + 
      64*d^3*n3^2 - 1244*n2*n3^2 + 728*d*n2*n3^2 - 93*d^2*n2*n3^2 - 
      188*n2^2*n3^2 + 46*d*n2^2*n3^2 - 8*n2^3*n3^2 - 452*n3^3 + 362*d*n3^3 - 
      68*d^2*n3^3 - 208*n2*n3^3 + 74*d*n2*n3^3 - 20*n2^2*n3^3 - 24*n3^4 + 
      12*d*n3^4 - 8*n2*n3^4)*j[p4, 0, -1 + n2, 3 + n3, 1, -1, 0, -1, 0, 1, 1, 
      1, 1, 1, 1])/(4*(-1 + n2)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 
      2*n2^2 + 12*n3 - 6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 
      12*d*n2 + 4*n2^2 + 28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-2232 + 2636*d - 1016*d^2 + 128*d^3 - 1352*n2 + 1012*d*n2 - 186*d^2*n2 - 
      256*n2^2 + 92*d*n2^2 - 16*n2^3 - 4108*n3 + 4606*d*n3 - 1660*d^2*n3 + 
      192*d^3*n3 - 2396*n2*n3 + 1666*d*n2*n3 - 279*d^2*n2*n3 - 424*n2^2*n3 + 
      138*d*n2^2*n3 - 24*n2^3*n3 - 2304*n3^2 + 2320*d*n3^2 - 712*d^2*n3^2 + 
      64*d^3*n3^2 - 1244*n2*n3^2 + 728*d*n2*n3^2 - 93*d^2*n2*n3^2 - 
      188*n2^2*n3^2 + 46*d*n2^2*n3^2 - 8*n2^3*n3^2 - 452*n3^3 + 362*d*n3^3 - 
      68*d^2*n3^3 - 208*n2*n3^3 + 74*d*n2*n3^3 - 20*n2^2*n3^3 - 24*n3^4 + 
      12*d*n3^4 - 8*n2*n3^4)*j[p4, 0, -1 + n2, 3 + n3, 1, -1, 0, 0, -1, 1, 1, 
      1, 1, 1, 1])/(2*(-1 + n2)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 
      2*n2^2 + 12*n3 - 6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 
      12*d*n2 + 4*n2^2 + 28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((2232 - 2636*d + 1016*d^2 - 128*d^3 + 1352*n2 - 1012*d*n2 + 186*d^2*n2 + 
      256*n2^2 - 92*d*n2^2 + 16*n2^3 + 4108*n3 - 4606*d*n3 + 1660*d^2*n3 - 
      192*d^3*n3 + 2396*n2*n3 - 1666*d*n2*n3 + 279*d^2*n2*n3 + 424*n2^2*n3 - 
      138*d*n2^2*n3 + 24*n2^3*n3 + 2304*n3^2 - 2320*d*n3^2 + 712*d^2*n3^2 - 
      64*d^3*n3^2 + 1244*n2*n3^2 - 728*d*n2*n3^2 + 93*d^2*n2*n3^2 + 
      188*n2^2*n3^2 - 46*d*n2^2*n3^2 + 8*n2^3*n3^2 + 452*n3^3 - 362*d*n3^3 + 
      68*d^2*n3^3 + 208*n2*n3^3 - 74*d*n2*n3^3 + 20*n2^2*n3^3 + 24*n3^4 - 
      12*d*n3^4 + 8*n2*n3^4)*j[p4, 0, -1 + n2, 3 + n3, 1, -1, 0, 0, 0, 1, 1, 
      1, 0, 1, 1])/(4*(-1 + n2)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 
      2*n2^2 + 12*n3 - 6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 
      12*d*n2 + 4*n2^2 + 28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-2232 + 2636*d - 1016*d^2 + 128*d^3 - 1352*n2 + 1012*d*n2 - 186*d^2*n2 - 
      256*n2^2 + 92*d*n2^2 - 16*n2^3 - 4108*n3 + 4606*d*n3 - 1660*d^2*n3 + 
      192*d^3*n3 - 2396*n2*n3 + 1666*d*n2*n3 - 279*d^2*n2*n3 - 424*n2^2*n3 + 
      138*d*n2^2*n3 - 24*n2^3*n3 - 2304*n3^2 + 2320*d*n3^2 - 712*d^2*n3^2 + 
      64*d^3*n3^2 - 1244*n2*n3^2 + 728*d*n2*n3^2 - 93*d^2*n2*n3^2 - 
      188*n2^2*n3^2 + 46*d*n2^2*n3^2 - 8*n2^3*n3^2 - 452*n3^3 + 362*d*n3^3 - 
      68*d^2*n3^3 - 208*n2*n3^3 + 74*d*n2*n3^3 - 20*n2^2*n3^3 - 24*n3^4 + 
      12*d*n3^4 - 8*n2*n3^4)*j[p4, 0, -1 + n2, 3 + n3, 1, -1, 0, 0, 0, 1, 1, 
      1, 1, 0, 1])/(4*(-1 + n2)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 
      2*n2^2 + 12*n3 - 6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 
      12*d*n2 + 4*n2^2 + 28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((2232 - 2636*d + 1016*d^2 - 128*d^3 + 1352*n2 - 1012*d*n2 + 186*d^2*n2 + 
      256*n2^2 - 92*d*n2^2 + 16*n2^3 + 4108*n3 - 4606*d*n3 + 1660*d^2*n3 - 
      192*d^3*n3 + 2396*n2*n3 - 1666*d*n2*n3 + 279*d^2*n2*n3 + 424*n2^2*n3 - 
      138*d*n2^2*n3 + 24*n2^3*n3 + 2304*n3^2 - 2320*d*n3^2 + 712*d^2*n3^2 - 
      64*d^3*n3^2 + 1244*n2*n3^2 - 728*d*n2*n3^2 + 93*d^2*n2*n3^2 + 
      188*n2^2*n3^2 - 46*d*n2^2*n3^2 + 8*n2^3*n3^2 + 452*n3^3 - 362*d*n3^3 + 
      68*d^2*n3^3 + 208*n2*n3^3 - 74*d*n2*n3^3 + 20*n2^2*n3^3 + 24*n3^4 - 
      12*d*n3^4 + 8*n2*n3^4)*j[p4, 0, -1 + n2, 3 + n3, 1, 0, -1, -1, 0, 1, 1, 
      1, 1, 1, 1])/(4*(-1 + n2)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 
      2*n2^2 + 12*n3 - 6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 
      12*d*n2 + 4*n2^2 + 28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-2232 + 2636*d - 1016*d^2 + 128*d^3 - 1352*n2 + 1012*d*n2 - 186*d^2*n2 - 
      256*n2^2 + 92*d*n2^2 - 16*n2^3 - 4108*n3 + 4606*d*n3 - 1660*d^2*n3 + 
      192*d^3*n3 - 2396*n2*n3 + 1666*d*n2*n3 - 279*d^2*n2*n3 - 424*n2^2*n3 + 
      138*d*n2^2*n3 - 24*n2^3*n3 - 2304*n3^2 + 2320*d*n3^2 - 712*d^2*n3^2 + 
      64*d^3*n3^2 - 1244*n2*n3^2 + 728*d*n2*n3^2 - 93*d^2*n2*n3^2 - 
      188*n2^2*n3^2 + 46*d*n2^2*n3^2 - 8*n2^3*n3^2 - 452*n3^3 + 362*d*n3^3 - 
      68*d^2*n3^3 - 208*n2*n3^3 + 74*d*n2*n3^3 - 20*n2^2*n3^3 - 24*n3^4 + 
      12*d*n3^4 - 8*n2*n3^4)*j[p4, 0, -1 + n2, 3 + n3, 1, 0, -1, 0, 0, 1, 1, 
      1, 1, 0, 1])/(4*(-1 + n2)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 
      2*n2^2 + 12*n3 - 6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 
      12*d*n2 + 4*n2^2 + 28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((2232 - 2636*d + 1016*d^2 - 128*d^3 + 1352*n2 - 1012*d*n2 + 186*d^2*n2 + 
      256*n2^2 - 92*d*n2^2 + 16*n2^3 + 4108*n3 - 4606*d*n3 + 1660*d^2*n3 - 
      192*d^3*n3 + 2396*n2*n3 - 1666*d*n2*n3 + 279*d^2*n2*n3 + 424*n2^2*n3 - 
      138*d*n2^2*n3 + 24*n2^3*n3 + 2304*n3^2 - 2320*d*n3^2 + 712*d^2*n3^2 - 
      64*d^3*n3^2 + 1244*n2*n3^2 - 728*d*n2*n3^2 + 93*d^2*n2*n3^2 + 
      188*n2^2*n3^2 - 46*d*n2^2*n3^2 + 8*n2^3*n3^2 + 452*n3^3 - 362*d*n3^3 + 
      68*d^2*n3^3 + 208*n2*n3^3 - 74*d*n2*n3^3 + 20*n2^2*n3^3 + 24*n3^4 - 
      12*d*n3^4 + 8*n2*n3^4)*j[p4, 0, -1 + n2, 3 + n3, 1, 0, 0, -2, 0, 1, 1, 
      1, 1, 1, 1])/(4*(-1 + n2)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 
      2*n2^2 + 12*n3 - 6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 
      12*d*n2 + 4*n2^2 + 28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((2232 - 2636*d + 1016*d^2 - 128*d^3 + 1352*n2 - 1012*d*n2 + 186*d^2*n2 + 
      256*n2^2 - 92*d*n2^2 + 16*n2^3 + 4108*n3 - 4606*d*n3 + 1660*d^2*n3 - 
      192*d^3*n3 + 2396*n2*n3 - 1666*d*n2*n3 + 279*d^2*n2*n3 + 424*n2^2*n3 - 
      138*d*n2^2*n3 + 24*n2^3*n3 + 2304*n3^2 - 2320*d*n3^2 + 712*d^2*n3^2 - 
      64*d^3*n3^2 + 1244*n2*n3^2 - 728*d*n2*n3^2 + 93*d^2*n2*n3^2 + 
      188*n2^2*n3^2 - 46*d*n2^2*n3^2 + 8*n2^3*n3^2 + 452*n3^3 - 362*d*n3^3 + 
      68*d^2*n3^3 + 208*n2*n3^3 - 74*d*n2*n3^3 + 20*n2^2*n3^3 + 24*n3^4 - 
      12*d*n3^4 + 8*n2*n3^4)*j[p4, 0, -1 + n2, 3 + n3, 1, 0, 0, -1, -1, 1, 1, 
      1, 1, 1, 1])/(4*(-1 + n2)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 
      2*n2^2 + 12*n3 - 6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 
      12*d*n2 + 4*n2^2 + 28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-2232 + 2636*d - 1016*d^2 + 128*d^3 - 1352*n2 + 1012*d*n2 - 186*d^2*n2 - 
      256*n2^2 + 92*d*n2^2 - 16*n2^3 - 4108*n3 + 4606*d*n3 - 1660*d^2*n3 + 
      192*d^3*n3 - 2396*n2*n3 + 1666*d*n2*n3 - 279*d^2*n2*n3 - 424*n2^2*n3 + 
      138*d*n2^2*n3 - 24*n2^3*n3 - 2304*n3^2 + 2320*d*n3^2 - 712*d^2*n3^2 + 
      64*d^3*n3^2 - 1244*n2*n3^2 + 728*d*n2*n3^2 - 93*d^2*n2*n3^2 - 
      188*n2^2*n3^2 + 46*d*n2^2*n3^2 - 8*n2^3*n3^2 - 452*n3^3 + 362*d*n3^3 - 
      68*d^2*n3^3 - 208*n2*n3^3 + 74*d*n2*n3^3 - 20*n2^2*n3^3 - 24*n3^4 + 
      12*d*n3^4 - 8*n2*n3^4)*j[p4, 0, -1 + n2, 3 + n3, 1, 0, 0, -1, 0, 1, 1, 
      1, 0, 1, 1])/(4*(-1 + n2)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 
      2*n2^2 + 12*n3 - 6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 
      12*d*n2 + 4*n2^2 + 28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((2232 - 2636*d + 1016*d^2 - 128*d^3 + 1352*n2 - 1012*d*n2 + 186*d^2*n2 + 
      256*n2^2 - 92*d*n2^2 + 16*n2^3 + 4108*n3 - 4606*d*n3 + 1660*d^2*n3 - 
      192*d^3*n3 + 2396*n2*n3 - 1666*d*n2*n3 + 279*d^2*n2*n3 + 424*n2^2*n3 - 
      138*d*n2^2*n3 + 24*n2^3*n3 + 2304*n3^2 - 2320*d*n3^2 + 712*d^2*n3^2 - 
      64*d^3*n3^2 + 1244*n2*n3^2 - 728*d*n2*n3^2 + 93*d^2*n2*n3^2 + 
      188*n2^2*n3^2 - 46*d*n2^2*n3^2 + 8*n2^3*n3^2 + 452*n3^3 - 362*d*n3^3 + 
      68*d^2*n3^3 + 208*n2*n3^3 - 74*d*n2*n3^3 + 20*n2^2*n3^3 + 24*n3^4 - 
      12*d*n3^4 + 8*n2*n3^4)*j[p4, 0, -1 + n2, 3 + n3, 1, 0, 0, -1, 0, 1, 1, 
      1, 1, 0, 1])/(4*(-1 + n2)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 
      2*n2^2 + 12*n3 - 6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 
      12*d*n2 + 4*n2^2 + 28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((4008 - 4836*d + 1912*d^2 - 248*d^3 + 536*n2 - 572*d*n2 + 134*d^2*n2 - 
      128*n2^2 + 28*d*n2^2 - 16*n2^3 + 7204*n3 - 8282*d*n3 + 3084*d^2*n3 - 
      372*d^3*n3 + 756*n2*n3 - 870*d*n2*n3 + 201*d^2*n2*n3 - 232*n2^2*n3 + 
      42*d*n2^2*n3 - 24*n2^3*n3 + 3872*n3^2 - 4000*d*n3^2 + 1280*d^2*n3^2 - 
      124*d^3*n3^2 + 180*n2*n3^2 - 304*d*n2*n3^2 + 67*d^2*n2*n3^2 - 
      124*n2^2*n3^2 + 14*d*n2^2*n3^2 - 8*n2^3*n3^2 + 716*n3^3 - 574*d*n3^3 + 
      108*d^2*n3^3 - 48*n2*n3^3 - 6*d*n2*n3^3 - 20*n2^2*n3^3 + 40*n3^4 - 
      20*d*n3^4 - 8*n2*n3^4)*j[p4, 0, -1 + n2, 3 + n3, 1, 0, 0, -1, 0, 1, 1, 
      1, 1, 1, 0])/(4*(-1 + n2)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 
      2*n2^2 + 12*n3 - 6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 
      12*d*n2 + 4*n2^2 + 28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((2232 - 2636*d + 1016*d^2 - 128*d^3 + 1352*n2 - 1012*d*n2 + 186*d^2*n2 + 
      256*n2^2 - 92*d*n2^2 + 16*n2^3 + 4108*n3 - 4606*d*n3 + 1660*d^2*n3 - 
      192*d^3*n3 + 2396*n2*n3 - 1666*d*n2*n3 + 279*d^2*n2*n3 + 424*n2^2*n3 - 
      138*d*n2^2*n3 + 24*n2^3*n3 + 2304*n3^2 - 2320*d*n3^2 + 712*d^2*n3^2 - 
      64*d^3*n3^2 + 1244*n2*n3^2 - 728*d*n2*n3^2 + 93*d^2*n2*n3^2 + 
      188*n2^2*n3^2 - 46*d*n2^2*n3^2 + 8*n2^3*n3^2 + 452*n3^3 - 362*d*n3^3 + 
      68*d^2*n3^3 + 208*n2*n3^3 - 74*d*n2*n3^3 + 20*n2^2*n3^3 + 24*n3^4 - 
      12*d*n3^4 + 8*n2*n3^4)*j[p4, 0, -1 + n2, 3 + n3, 1, 0, 0, 0, -1, 1, 1, 
      1, 1, 0, 1])/(4*(-1 + n2)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 
      2*n2^2 + 12*n3 - 6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 
      12*d*n2 + 4*n2^2 + 28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-2232 + 2636*d - 1016*d^2 + 128*d^3 - 1352*n2 + 1012*d*n2 - 186*d^2*n2 - 
      256*n2^2 + 92*d*n2^2 - 16*n2^3 - 4108*n3 + 4606*d*n3 - 1660*d^2*n3 + 
      192*d^3*n3 - 2396*n2*n3 + 1666*d*n2*n3 - 279*d^2*n2*n3 - 424*n2^2*n3 + 
      138*d*n2^2*n3 - 24*n2^3*n3 - 2304*n3^2 + 2320*d*n3^2 - 712*d^2*n3^2 + 
      64*d^3*n3^2 - 1244*n2*n3^2 + 728*d*n2*n3^2 - 93*d^2*n2*n3^2 - 
      188*n2^2*n3^2 + 46*d*n2^2*n3^2 - 8*n2^3*n3^2 - 452*n3^3 + 362*d*n3^3 - 
      68*d^2*n3^3 - 208*n2*n3^3 + 74*d*n2*n3^3 - 20*n2^2*n3^3 - 24*n3^4 + 
      12*d*n3^4 - 8*n2*n3^4)*j[p4, 0, -1 + n2, 3 + n3, 1, 0, 0, 0, -1, 1, 1, 
      1, 1, 1, 0])/(4*(-1 + n2)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 
      2*n2^2 + 12*n3 - 6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 
      12*d*n2 + 4*n2^2 + 28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((33 - 12*d + 6*n2 + 3*n3)*j[p4, 0, n2, n3, 1, 0, 0, 0, 0, 0, 2, 1, 1, 1, 
      1])/(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 10*d*n3 + 
     6*n2*n3 + 2*n3^2) + ((-472 + 564*d - 220*d^2 + 28*d^3 - 500*n2 + 
      360*d*n2 - 64*d^2*n2 - 116*n2^2 + 40*d*n2^2 - 8*n2^3 - 160*n3 + 
      140*d*n3 - 30*d^2*n3 - 152*n2*n3 + 58*d*n2*n3 - 20*n2^2*n3 - 8*n3^2 + 
      4*d*n3^2 - 8*n2*n3^2)*j[p4, 0, n2, n3, 1, 0, 0, 0, 0, 1, 1, 1, 0, 2, 
      1])/((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-336 + 384*d - 142*d^2 + 17*d^3 - 440*n2 + 308*d*n2 - 53*d^2*n2 - 
      112*n2^2 + 38*d*n2^2 - 8*n2^3 - 136*n3 + 116*d*n3 - 24*d^2*n3 - 
      144*n2*n3 + 54*d*n2*n3 - 20*n2^2*n3 - 8*n3^2 + 4*d*n3^2 - 8*n2*n3^2)*
     j[p4, 0, n2, n3, 1, 0, 0, 0, 0, 1, 1, 1, 1, 2, 0])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-3748 + 4362*d - 1652*d^2 + 204*d^3 - 2788*n2 + 2030*d*n2 - 363*d^2*n2 - 
      600*n2^2 + 210*d*n2^2 - 40*n2^3 - 1364*n3 + 1162*d*n3 - 240*d^2*n3 - 
      824*n2*n3 + 322*d*n2*n3 - 100*n2^2*n3 - 88*n3^2 + 44*d*n3^2 - 
      40*n2*n3^2)*j[p4, 0, n2, n3, 1, 0, 0, 0, 0, 1, 2, 0, 1, 1, 1])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-1040 + 1198*d - 447*d^2 + 54*d^3 - 1090*n2 + 769*d*n2 - 133*d^2*n2 - 
      270*n2^2 + 92*d*n2^2 - 20*n2^3 - 452*n3 + 388*d*n3 - 81*d^2*n3 - 
      374*n2*n3 + 143*d*n2*n3 - 50*n2^2*n3 - 28*n3^2 + 14*d*n3^2 - 
      20*n2*n3^2)*j[p4, 0, n2, n3, 2, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((1040 - 1198*d + 447*d^2 - 54*d^3 + 1090*n2 - 769*d*n2 + 133*d^2*n2 + 
      270*n2^2 - 92*d*n2^2 + 20*n2^3 + 452*n3 - 388*d*n3 + 81*d^2*n3 + 
      374*n2*n3 - 143*d*n2*n3 + 50*n2^2*n3 + 28*n3^2 - 14*d*n3^2 + 
      20*n2*n3^2)*j[p4, 0, n2, n3, 2, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-1040 + 1198*d - 447*d^2 + 54*d^3 - 1090*n2 + 769*d*n2 - 133*d^2*n2 - 
      270*n2^2 + 92*d*n2^2 - 20*n2^3 - 452*n3 + 388*d*n3 - 81*d^2*n3 - 
      374*n2*n3 + 143*d*n2*n3 - 50*n2^2*n3 - 28*n3^2 + 14*d*n3^2 - 
      20*n2*n3^2)*j[p4, 0, n2, n3, 2, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-1908 + 2280*d - 893*d^2 + 115*d^3 - 958*n2 + 751*d*n2 - 145*d^2*n2 - 
      134*n2^2 + 52*d*n2^2 - 4*n2^3 - 2372*n3 + 2674*d*n3 - 974*d^2*n3 + 
      115*d^3*n3 - 1108*n2*n3 + 814*d*n2*n3 - 145*d^2*n2*n3 - 144*n2^2*n3 + 
      52*d*n2^2*n3 - 4*n2^3*n3 - 492*n3^2 + 408*d*n3^2 - 81*d^2*n3^2 - 
      154*n2*n3^2 + 63*d*n2*n3^2 - 10*n2^2*n3^2 - 28*n3^3 + 14*d*n3^3 - 
      4*n2*n3^3)*j[p4, 0, n2, 1 + n3, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((2804 - 3234*d + 1212*d^2 - 148*d^3 + 1788*n2 - 1310*d*n2 + 235*d^2*n2 + 
      368*n2^2 - 130*d*n2^2 + 24*n2^3 + 1044*n3 - 882*d*n3 + 180*d^2*n3 + 
      520*n2*n3 - 206*d*n2*n3 + 60*n2^2*n3 + 72*n3^2 - 36*d*n3^2 + 
      24*n2*n3^2)*j[p4, 0, n2, 1 + n3, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-2340 + 2734*d - 1042*d^2 + 130*d^3 - 1488*n2 + 1108*d*n2 - 203*d^2*n2 - 
      284*n2^2 + 102*d*n2^2 - 16*n2^3 - 732*n3 + 618*d*n3 - 126*d^2*n3 - 
      364*n2*n3 + 144*d*n2*n3 - 40*n2^2*n3 - 48*n3^2 + 24*d*n3^2 - 
      16*n2*n3^2)*j[p4, 0, n2, 1 + n3, 0, 0, 0, 0, 0, 1, 1, 1, 2, 1, 1])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-2340 + 2734*d - 1042*d^2 + 130*d^3 - 1488*n2 + 1108*d*n2 - 203*d^2*n2 - 
      284*n2^2 + 102*d*n2^2 - 16*n2^3 - 732*n3 + 618*d*n3 - 126*d^2*n3 - 
      364*n2*n3 + 144*d*n2*n3 - 40*n2^2*n3 - 48*n3^2 + 24*d*n3^2 - 
      16*n2*n3^2)*j[p4, 0, n2, 1 + n3, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 1])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((2804 - 3234*d + 1212*d^2 - 148*d^3 + 1788*n2 - 1310*d*n2 + 235*d^2*n2 + 
      368*n2^2 - 130*d*n2^2 + 24*n2^3 + 1044*n3 - 882*d*n3 + 180*d^2*n3 + 
      520*n2*n3 - 206*d*n2*n3 + 60*n2^2*n3 + 72*n3^2 - 36*d*n3^2 + 
      24*n2*n3^2)*j[p4, 0, n2, 1 + n3, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-3076 + 3594*d - 1368*d^2 + 170*d^3 - 1908*n2 + 1414*d*n2 - 257*d^2*n2 - 
      376*n2^2 + 134*d*n2^2 - 24*n2^3 - 1092*n3 + 930*d*n3 - 192*d^2*n3 - 
      536*n2*n3 + 214*d*n2*n3 - 60*n2^2*n3 - 72*n3^2 + 36*d*n3^2 - 
      24*n2*n3^2)*j[p4, 0, n2, 1 + n3, 1, -1, 0, 0, 0, 0, 1, 1, 1, 1, 2])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((2340 - 2734*d + 1042*d^2 - 130*d^3 + 1488*n2 - 1108*d*n2 + 203*d^2*n2 + 
      284*n2^2 - 102*d*n2^2 + 16*n2^3 + 732*n3 - 618*d*n3 + 126*d^2*n3 + 
      364*n2*n3 - 144*d*n2*n3 + 40*n2^2*n3 + 48*n3^2 - 24*d*n3^2 + 
      16*n2*n3^2)*j[p4, 0, n2, 1 + n3, 1, -1, 0, 0, 0, 1, 1, 0, 2, 1, 1])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((1488 - 1712*d + 640*d^2 - 78*d^3 + 732*n2 - 548*d*n2 + 100*d^2*n2 + 
      132*n2^2 - 48*d*n2^2 + 8*n2^3 + 552*n3 - 464*d*n3 + 94*d^2*n3 + 
      200*n2*n3 - 82*d*n2*n3 + 20*n2^2*n3 + 40*n3^2 - 20*d*n3^2 + 8*n2*n3^2)*
     j[p4, 0, n2, 1 + n3, 1, -1, 0, 0, 0, 1, 1, 1, 0, 2, 1])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((2340 - 2734*d + 1042*d^2 - 130*d^3 + 1488*n2 - 1108*d*n2 + 203*d^2*n2 + 
      284*n2^2 - 102*d*n2^2 + 16*n2^3 + 732*n3 - 618*d*n3 + 126*d^2*n3 + 
      364*n2*n3 - 144*d*n2*n3 + 40*n2^2*n3 + 48*n3^2 - 24*d*n3^2 + 
      16*n2*n3^2)*j[p4, 0, n2, 1 + n3, 1, -1, 0, 0, 0, 1, 1, 2, 0, 1, 1])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-3076 + 3594*d - 1368*d^2 + 170*d^3 - 1908*n2 + 1414*d*n2 - 257*d^2*n2 - 
      376*n2^2 + 134*d*n2^2 - 24*n2^3 - 1092*n3 + 930*d*n3 - 192*d^2*n3 - 
      536*n2*n3 + 214*d*n2*n3 - 60*n2^2*n3 - 72*n3^2 + 36*d*n3^2 - 
      24*n2*n3^2)*j[p4, 0, n2, 1 + n3, 1, -1, 0, 0, 0, 2, 1, 1, 1, 1, 0])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-2804 + 3234*d - 1212*d^2 + 148*d^3 - 1788*n2 + 1310*d*n2 - 235*d^2*n2 - 
      368*n2^2 + 130*d*n2^2 - 24*n2^3 - 1044*n3 + 882*d*n3 - 180*d^2*n3 - 
      520*n2*n3 + 206*d*n2*n3 - 60*n2^2*n3 - 72*n3^2 + 36*d*n3^2 - 
      24*n2*n3^2)*j[p4, 0, n2, 1 + n3, 1, 0, -1, 0, 0, 0, 1, 1, 1, 1, 2])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((2340 - 2734*d + 1042*d^2 - 130*d^3 + 1488*n2 - 1108*d*n2 + 203*d^2*n2 + 
      284*n2^2 - 102*d*n2^2 + 16*n2^3 + 732*n3 - 618*d*n3 + 126*d^2*n3 + 
      364*n2*n3 - 144*d*n2*n3 + 40*n2^2*n3 + 48*n3^2 - 24*d*n3^2 + 
      16*n2*n3^2)*j[p4, 0, n2, 1 + n3, 1, 0, -1, 0, 0, 1, 1, 0, 2, 1, 1])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((2340 - 2734*d + 1042*d^2 - 130*d^3 + 1488*n2 - 1108*d*n2 + 203*d^2*n2 + 
      284*n2^2 - 102*d*n2^2 + 16*n2^3 + 732*n3 - 618*d*n3 + 126*d^2*n3 + 
      364*n2*n3 - 144*d*n2*n3 + 40*n2^2*n3 + 48*n3^2 - 24*d*n3^2 + 
      16*n2*n3^2)*j[p4, 0, n2, 1 + n3, 1, 0, -1, 0, 0, 1, 1, 2, 0, 1, 1])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((1824 - 2096*d + 782*d^2 - 95*d^3 + 1172*n2 - 856*d*n2 + 153*d^2*n2 + 
      244*n2^2 - 86*d*n2^2 + 16*n2^3 + 688*n3 - 580*d*n3 + 118*d^2*n3 + 
      344*n2*n3 - 136*d*n2*n3 + 40*n2^2*n3 + 48*n3^2 - 24*d*n3^2 + 
      16*n2*n3^2)*j[p4, 0, n2, 1 + n3, 1, 0, -1, 0, 0, 1, 2, 0, 1, 1, 1])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((33 - 12*d + 6*n2 + 3*n3)*j[p4, 0, n2, 1 + n3, 1, 0, -1, 0, 0, 1, 2, 1, 
      0, 1, 1])/(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
     10*d*n3 + 6*n2*n3 + 2*n3^2) + ((-33 + 12*d - 6*n2 - 3*n3)*
     j[p4, 0, n2, 1 + n3, 1, 0, -1, 0, 0, 1, 2, 1, 1, 0, 1])/
    (70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 10*d*n3 + 
     6*n2*n3 + 2*n3^2) + ((-2804 + 3234*d - 1212*d^2 + 148*d^3 - 1788*n2 + 
      1310*d*n2 - 235*d^2*n2 - 368*n2^2 + 130*d*n2^2 - 24*n2^3 - 1044*n3 + 
      882*d*n3 - 180*d^2*n3 - 520*n2*n3 + 206*d*n2*n3 - 60*n2^2*n3 - 
      72*n3^2 + 36*d*n3^2 - 24*n2*n3^2)*j[p4, 0, n2, 1 + n3, 1, 0, -1, 0, 0, 
      2, 1, 1, 1, 1, 0])/(2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 
      12*n3 - 6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 
      4*n2^2 + 28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-2804 + 3234*d - 1212*d^2 + 148*d^3 - 1788*n2 + 1310*d*n2 - 235*d^2*n2 - 
      368*n2^2 + 130*d*n2^2 - 24*n2^3 - 1044*n3 + 882*d*n3 - 180*d^2*n3 - 
      520*n2*n3 + 206*d*n2*n3 - 60*n2^2*n3 - 72*n3^2 + 36*d*n3^2 - 
      24*n2*n3^2)*j[p4, 0, n2, 1 + n3, 1, 0, 0, -1, 0, 0, 1, 1, 1, 1, 2])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-4068 + 4760*d - 1817*d^2 + 227*d^3 - 2570*n2 + 1915*d*n2 - 351*d^2*n2 - 
      490*n2^2 + 176*d*n2^2 - 28*n2^3 - 1288*n3 + 1090*d*n3 - 223*d^2*n3 - 
      638*n2*n3 + 253*d*n2*n3 - 70*n2^2*n3 - 84*n3^2 + 42*d*n3^2 - 
      28*n2*n3^2)*j[p4, 0, n2, 1 + n3, 1, 0, 0, -1, 0, 0, 2, 1, 1, 1, 1])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((2340 - 2734*d + 1042*d^2 - 130*d^3 + 1488*n2 - 1108*d*n2 + 203*d^2*n2 + 
      284*n2^2 - 102*d*n2^2 + 16*n2^3 + 732*n3 - 618*d*n3 + 126*d^2*n3 + 
      364*n2*n3 - 144*d*n2*n3 + 40*n2^2*n3 + 48*n3^2 - 24*d*n3^2 + 
      16*n2*n3^2)*j[p4, 0, n2, 1 + n3, 1, 0, 0, -1, 0, 1, 1, 0, 2, 1, 1])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((472 - 564*d + 220*d^2 - 28*d^3 + 500*n2 - 360*d*n2 + 64*d^2*n2 + 
      116*n2^2 - 40*d*n2^2 + 8*n2^3 + 160*n3 - 140*d*n3 + 30*d^2*n3 + 
      152*n2*n3 - 58*d*n2*n3 + 20*n2^2*n3 + 8*n3^2 - 4*d*n3^2 + 8*n2*n3^2)*
     j[p4, 0, n2, 1 + n3, 1, 0, 0, -1, 0, 1, 1, 1, 0, 2, 1])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((336 - 384*d + 142*d^2 - 17*d^3 + 440*n2 - 308*d*n2 + 53*d^2*n2 + 
      112*n2^2 - 38*d*n2^2 + 8*n2^3 + 136*n3 - 116*d*n3 + 24*d^2*n3 + 
      144*n2*n3 - 54*d*n2*n3 + 20*n2^2*n3 + 8*n3^2 - 4*d*n3^2 + 8*n2*n3^2)*
     j[p4, 0, n2, 1 + n3, 1, 0, 0, -1, 0, 1, 1, 1, 1, 2, 0])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((2340 - 2734*d + 1042*d^2 - 130*d^3 + 1488*n2 - 1108*d*n2 + 203*d^2*n2 + 
      284*n2^2 - 102*d*n2^2 + 16*n2^3 + 732*n3 - 618*d*n3 + 126*d^2*n3 + 
      364*n2*n3 - 144*d*n2*n3 + 40*n2^2*n3 + 48*n3^2 - 24*d*n3^2 + 
      16*n2*n3^2)*j[p4, 0, n2, 1 + n3, 1, 0, 0, -1, 0, 1, 1, 2, 0, 1, 1])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((3748 - 4362*d + 1652*d^2 - 204*d^3 + 2788*n2 - 2030*d*n2 + 363*d^2*n2 + 
      600*n2^2 - 210*d*n2^2 + 40*n2^3 + 1364*n3 - 1162*d*n3 + 240*d^2*n3 + 
      824*n2*n3 - 322*d*n2*n3 + 100*n2^2*n3 + 88*n3^2 - 44*d*n3^2 + 
      40*n2*n3^2)*j[p4, 0, n2, 1 + n3, 1, 0, 0, -1, 0, 1, 2, 0, 1, 1, 1])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-3748 + 4362*d - 1652*d^2 + 204*d^3 - 2788*n2 + 2030*d*n2 - 363*d^2*n2 - 
      600*n2^2 + 210*d*n2^2 - 40*n2^3 - 1364*n3 + 1162*d*n3 - 240*d^2*n3 - 
      824*n2*n3 + 322*d*n2*n3 - 100*n2^2*n3 - 88*n3^2 + 44*d*n3^2 - 
      40*n2*n3^2)*j[p4, 0, n2, 1 + n3, 1, 0, 0, -1, 0, 1, 2, 1, 0, 1, 1])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((3748 - 4362*d + 1652*d^2 - 204*d^3 + 2788*n2 - 2030*d*n2 + 363*d^2*n2 + 
      600*n2^2 - 210*d*n2^2 + 40*n2^3 + 1364*n3 - 1162*d*n3 + 240*d^2*n3 + 
      824*n2*n3 - 322*d*n2*n3 + 100*n2^2*n3 + 88*n3^2 - 44*d*n3^2 + 
      40*n2*n3^2)*j[p4, 0, n2, 1 + n3, 1, 0, 0, -1, 0, 1, 2, 1, 1, 0, 1])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-2804 + 3234*d - 1212*d^2 + 148*d^3 - 1788*n2 + 1310*d*n2 - 235*d^2*n2 - 
      368*n2^2 + 130*d*n2^2 - 24*n2^3 - 1044*n3 + 882*d*n3 - 180*d^2*n3 - 
      520*n2*n3 + 206*d*n2*n3 - 60*n2^2*n3 - 72*n3^2 + 36*d*n3^2 - 
      24*n2*n3^2)*j[p4, 0, n2, 1 + n3, 1, 0, 0, -1, 0, 2, 1, 1, 1, 1, 0])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-2804 + 3234*d - 1212*d^2 + 148*d^3 - 1788*n2 + 1310*d*n2 - 235*d^2*n2 - 
      368*n2^2 + 130*d*n2^2 - 24*n2^3 - 1044*n3 + 882*d*n3 - 180*d^2*n3 - 
      520*n2*n3 + 206*d*n2*n3 - 60*n2^2*n3 - 72*n3^2 + 36*d*n3^2 - 
      24*n2*n3^2)*j[p4, 0, n2, 1 + n3, 1, 0, 0, 0, -1, 0, 1, 1, 1, 1, 2])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-33 + 12*d - 6*n2 - 3*n3)*j[p4, 0, n2, 1 + n3, 1, 0, 0, 0, -1, 0, 2, 1, 
      1, 1, 1])/(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
     10*d*n3 + 6*n2*n3 + 2*n3^2) + 
   ((2612 - 3094*d + 1198*d^2 - 152*d^3 + 1608*n2 - 1212*d*n2 + 225*d^2*n2 + 
      292*n2^2 - 106*d*n2^2 + 16*n2^3 + 780*n3 - 666*d*n3 + 138*d^2*n3 + 
      380*n2*n3 - 152*d*n2*n3 + 40*n2^2*n3 + 48*n3^2 - 24*d*n3^2 + 
      16*n2*n3^2)*j[p4, 0, n2, 1 + n3, 1, 0, 0, 0, -1, 1, 1, 0, 2, 1, 1])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-1488 + 1712*d - 640*d^2 + 78*d^3 - 732*n2 + 548*d*n2 - 100*d^2*n2 - 
      132*n2^2 + 48*d*n2^2 - 8*n2^3 - 552*n3 + 464*d*n3 - 94*d^2*n3 - 
      200*n2*n3 + 82*d*n2*n3 - 20*n2^2*n3 - 40*n3^2 + 20*d*n3^2 - 8*n2*n3^2)*
     j[p4, 0, n2, 1 + n3, 1, 0, 0, 0, -1, 1, 1, 1, 1, 2, 0])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((2612 - 3094*d + 1198*d^2 - 152*d^3 + 1608*n2 - 1212*d*n2 + 225*d^2*n2 + 
      292*n2^2 - 106*d*n2^2 + 16*n2^3 + 780*n3 - 666*d*n3 + 138*d^2*n3 + 
      380*n2*n3 - 152*d*n2*n3 + 40*n2^2*n3 + 48*n3^2 - 24*d*n3^2 + 
      16*n2*n3^2)*j[p4, 0, n2, 1 + n3, 1, 0, 0, 0, -1, 1, 1, 2, 0, 1, 1])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((3748 - 4362*d + 1652*d^2 - 204*d^3 + 2788*n2 - 2030*d*n2 + 363*d^2*n2 + 
      600*n2^2 - 210*d*n2^2 + 40*n2^3 + 1364*n3 - 1162*d*n3 + 240*d^2*n3 + 
      824*n2*n3 - 322*d*n2*n3 + 100*n2^2*n3 + 88*n3^2 - 44*d*n3^2 + 
      40*n2*n3^2)*j[p4, 0, n2, 1 + n3, 1, 0, 0, 0, -1, 1, 2, 0, 1, 1, 1])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-2804 + 3234*d - 1212*d^2 + 148*d^3 - 1788*n2 + 1310*d*n2 - 235*d^2*n2 - 
      368*n2^2 + 130*d*n2^2 - 24*n2^3 - 1044*n3 + 882*d*n3 - 180*d^2*n3 - 
      520*n2*n3 + 206*d*n2*n3 - 60*n2^2*n3 - 72*n3^2 + 36*d*n3^2 - 
      24*n2*n3^2)*j[p4, 0, n2, 1 + n3, 1, 0, 0, 0, -1, 2, 1, 1, 1, 1, 0])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((4668 - 5440*d + 2065*d^2 - 256*d^3 + 2930*n2 - 2169*d*n2 + 394*d^2*n2 + 
      578*n2^2 - 206*d*n2^2 + 36*n2^3 + 1624*n3 - 1378*d*n3 + 283*d^2*n3 + 
      802*n2*n3 - 319*d*n2*n3 + 90*n2^2*n3 + 108*n3^2 - 54*d*n3^2 + 
      36*n2*n3^2)*j[p4, 0, n2, 1 + n3, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-2340 + 2734*d - 1042*d^2 + 130*d^3 - 1488*n2 + 1108*d*n2 - 203*d^2*n2 - 
      284*n2^2 + 102*d*n2^2 - 16*n2^3 - 732*n3 + 618*d*n3 - 126*d^2*n3 - 
      364*n2*n3 + 144*d*n2*n3 - 40*n2^2*n3 - 48*n3^2 + 24*d*n3^2 - 
      16*n2*n3^2)*j[p4, 0, n2, 1 + n3, 1, 0, 0, 0, 0, 0, 1, 2, 1, 1, 1])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-33 + 12*d - 6*n2 - 3*n3)*j[p4, 0, n2, 1 + n3, 1, 0, 0, 0, 0, 0, 2, 1, 
      1, 1, 1])/(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
     10*d*n3 + 6*n2*n3 + 2*n3^2) + 
   ((-2096 + 2456*d - 938*d^2 + 117*d^3 - 1060*n2 + 710*d*n2 - 90*d^2*n2 - 
      9*d^3*n2 - 102*n2^2 - 11*d*n2^2 + 16*d^2*n2^2 + 26*n2^3 - 14*d*n2^3 + 
      4*n2^4 + 304*n3 - 570*d*n3 + 317*d^2*n3 - 54*d^3*n3 + 886*n2*n3 - 
      757*d*n2*n3 + 160*d^2*n2*n3 + 308*n2^2*n3 - 123*d*n2^2*n3 + 
      30*n2^3*n3 + 404*n3^2 - 364*d*n3^2 + 81*d^2*n3^2 + 370*n2*n3^2 - 
      149*d*n2*n3^2 + 54*n2^2*n3^2 + 28*n3^3 - 14*d*n3^3 + 20*n2*n3^3)*
     j[p4, 0, n2, 1 + n3, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-2572 + 2984*d - 1127*d^2 + 139*d^3 - 1638*n2 + 1209*d*n2 - 219*d^2*n2 - 
      326*n2^2 + 116*d*n2^2 - 20*n2^3 - 1928*n3 + 1948*d*n3 - 600*d^2*n3 + 
      54*d^3*n3 - 1532*n2*n3 + 944*d*n2*n3 - 133*d^2*n2*n3 - 320*n2^2*n3 + 
      92*d*n2^2*n3 - 20*n2^3*n3 - 512*n3^2 + 418*d*n3^2 - 81*d^2*n3^2 - 
      394*n2*n3^2 + 143*d*n2*n3^2 - 50*n2^2*n3^2 - 28*n3^3 + 14*d*n3^3 - 
      20*n2*n3^3)*j[p4, 0, n2, 1 + n3, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((41000 - 64824*d + 38002*d^2 - 9790*d^3 + 935*d^4 + 14768*n2 - 
      7360*d*n2 - 4228*d^2*n2 + 3116*d^3*n2 - 477*d^4*n2 - 15336*n2^2 + 
      21624*d*n2^2 - 9588*d^2*n2^2 + 1359*d^3*n2^2 - 9216*n2^3 + 
      7228*d*n2^3 - 1394*d^2*n2^3 - 1648*n2^4 + 608*d*n2^4 - 96*n2^5 + 
      26000*n3 - 33968*d*n3 + 15340*d^2*n3 - 2676*d^3*n3 + 124*d^4*n3 + 
      4192*n2*n3 + 2468*d*n2*n3 - 3696*d^2*n2*n3 + 815*d^3*n2*n3 - 
      10624*n2^2*n3 + 9640*d*n2^2*n3 - 2104*d^2*n2^2*n3 - 3784*n2^3*n3 + 
      1508*d*n2^3*n3 - 336*n2^4*n3 + 4760*n3^2 - 4736*d*n3^2 + 
      1394*d^2*n3^2 - 108*d^3*n3^2 - 200*n2*n3^2 + 1304*d*n2*n3^2 - 
      470*d^2*n2*n3^2 - 2008*n2^2*n3^2 + 908*d*n2^2*n3^2 - 336*n2^3*n3^2 + 
      240*n3^3 - 160*d*n3^3 + 20*d^2*n3^3 - 48*n2*n3^3 + 72*d*n2*n3^3 - 
      96*n2^2*n3^3)*j[p4, 0, n2, 1 + n3, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1])/
    ((-2 + d)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 
      6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 
      28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((2804 - 3234*d + 1212*d^2 - 148*d^3 + 1788*n2 - 1310*d*n2 + 235*d^2*n2 + 
      368*n2^2 - 130*d*n2^2 + 24*n2^3 + 1044*n3 - 882*d*n3 + 180*d^2*n3 + 
      520*n2*n3 - 206*d*n2*n3 + 60*n2^2*n3 + 72*n3^2 - 36*d*n3^2 + 
      24*n2*n3^2)*j[p4, 0, n2, 1 + n3, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 2])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((12616 - 19292*d + 10932*d^2 - 2724*d^3 + 252*d^4 + 14912*n2 - 
      16456*d*n2 + 5998*d^2*n2 - 722*d^3*n2 + 5688*n2^2 - 4072*d*n2^2 + 
      722*d^2*n2^2 + 880*n2^3 - 308*d*n2^3 + 48*n2^4 + 8128*n3 - 9704*d*n3 + 
      3796*d^2*n3 - 488*d^3*n3 + 7856*n2*n3 - 5932*d*n2*n3 + 1110*d^2*n2*n3 + 
      2088*n2^2*n3 - 768*d*n2^2*n3 + 168*n2^3*n3 + 1576*n3^2 - 1348*d*n3^2 + 
      280*d^2*n3^2 + 1200*n2*n3^2 - 468*d*n2*n3^2 + 168*n2^2*n3^2 + 80*n3^3 - 
      40*d*n3^3 + 48*n2*n3^3)*j[p4, 0, n2, 1 + n3, 1, 0, 0, 0, 0, 1, 1, 1, 0, 
      2, 1])/((-2 + d)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 
      12*n3 - 6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 
      4*n2^2 + 28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-36008 + 54664*d - 30712*d^2 + 7577*d^3 - 693*d^4 + 7212*n2 - 
      28816*d*n2 + 25475*d^2*n2 - 8424*d^3*n2 + 954*d^4*n2 + 40684*n2^2 - 
      51022*d*n2^2 + 20668*d^2*n2^2 - 2718*d^3*n2^2 + 19576*n2^3 - 
      14896*d*n2^3 + 2788*d^2*n2^3 + 3344*n2^4 - 1216*d*n2^4 + 192*n2^5 - 
      22520*n3 + 26052*d*n3 - 9546*d^2*n3 + 985*d^3*n3 + 45*d^4*n3 + 
      11604*n2*n3 - 23980*d*n2*n3 + 12903*d^2*n2*n3 - 2069*d^3*n2*n3 + 
      25156*n2^2*n3 - 21378*d*n2^2*n3 + 4418*d^2*n2^2*n3 + 7800*n2^3*n3 - 
      3048*d*n2^3*n3 + 672*n2^4*n3 - 4144*n3^2 + 3244*d*n3^2 - 478*d^2*n3^2 - 
      54*d^3*n3^2 + 3368*n2*n3^2 - 4560*d*n2*n3^2 + 1240*d^2*n2*n3^2 + 
      4344*n2^2*n3^2 - 1896*d*n2^2*n3^2 + 672*n2^3*n3^2 - 208*n3^3 + 
      88*d*n3^3 + 8*d^2*n3^3 + 208*n2*n3^3 - 176*d*n2*n3^3 + 192*n2^2*n3^3)*
     j[p4, 0, n2, 1 + n3, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1])/
    ((-2 + d)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 
      6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 
      28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((2 - d)*j[p4, 0, n2, 1 + n3, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 2])/
    (70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 10*d*n3 + 
     6*n2*n3 + 2*n3^2) + ((7764 - 9126*d + 3502*d^2 - 440*d^3 + 5084*n2 - 
      3788*d*n2 + 695*d^2*n2 + 976*n2^2 - 350*d*n2^2 + 56*n2^3 + 4312*n3 - 
      4322*d*n3 + 1313*d^2*n3 - 115*d^3*n3 + 2218*n2*n3 - 1249*d*n2*n3 + 
      145*d^2*n2*n3 + 274*n2^2*n3 - 52*d*n2^2*n3 + 4*n2^3*n3 + 616*n3^2 - 
      470*d*n3^2 + 81*d^2*n3^2 + 206*n2*n3^2 - 63*d*n2*n3^2 + 10*n2^2*n3^2 + 
      28*n3^3 - 14*d*n3^3 + 4*n2*n3^3)*j[p4, 0, n2, 1 + n3, 1, 0, 0, 0, 0, 1, 
      1, 1, 1, 1, 0])/((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 
      12*n3 - 6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 
      4*n2^2 + 28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-38912 + 79552*d - 64460*d^2 + 25872*d^3 - 5143*d^4 + 405*d^5 - 
      95328*n2 + 149748*d*n2 - 87280*d^2*n2 + 22379*d^3*n2 - 2130*d^4*n2 - 
      76168*n2^2 + 86060*d*n2^2 - 32124*d^2*n2^2 + 3960*d^3*n2^2 - 
      25304*n2^3 + 18468*d*n2^3 - 3340*d^2*n2^3 - 3664*n2^4 + 1304*d*n2^4 - 
      192*n2^5 - 23552*n3 + 40176*d*n3 - 25444*d^2*n3 + 7088*d^3*n3 - 
      733*d^4*n3 - 54840*n2*n3 + 67204*d*n2*n3 - 27086*d^2*n2*n3 + 
      3597*d^3*n2*n3 - 37264*n2^2*n3 + 28848*d*n2^2*n3 - 5540*d^2*n2^2*n3 - 
      8824*n2^3*n3 + 3308*d*n2^3*n3 - 672*n2^4*n3 - 4208*n3^2 + 5712*d*n3^2 - 
      2556*d^2*n3^2 + 376*d^3*n3^2 - 9368*n2*n3^2 + 8144*d*n2*n3^2 - 
      1730*d^2*n2*n3^2 - 5224*n2^2*n3^2 + 2084*d*n2^2*n3^2 - 672*n2^3*n3^2 - 
      208*n3^3 + 208*d*n3^3 - 52*d^2*n3^3 - 432*n2*n3^3 + 216*d*n2*n3^3 - 
      192*n2^2*n3^3)*j[p4, 0, n2, 1 + n3, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    ((-2 + d)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 
      6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 
      28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((576 - 698*d + 277*d^2 - 36*d^3 + 790*n2 - 567*d*n2 + 101*d^2*n2 + 
      186*n2^2 - 64*d*n2^2 + 12*n2^3 + 140*n3 - 124*d*n3 + 27*d^2*n3 + 
      218*n2*n3 - 81*d*n2*n3 + 30*n2^2*n3 + 4*n3^2 - 2*d*n3^2 + 12*n2*n3^2)*
     j[p4, 0, n2, 1 + n3, 1, 0, 0, 0, 0, 1, 1, 1, 1, 2, 0])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-2 + d)*j[p4, 0, n2, 1 + n3, 1, 0, 0, 0, 0, 1, 1, 1, 2, 0, 1])/
    (70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 10*d*n3 + 
     6*n2*n3 + 2*n3^2) + ((-2340 + 2734*d - 1042*d^2 + 130*d^3 - 1488*n2 + 
      1108*d*n2 - 203*d^2*n2 - 284*n2^2 + 102*d*n2^2 - 16*n2^3 - 732*n3 + 
      618*d*n3 - 126*d^2*n3 - 364*n2*n3 + 144*d*n2*n3 - 40*n2^2*n3 - 
      48*n3^2 + 24*d*n3^2 - 16*n2*n3^2)*j[p4, 0, n2, 1 + n3, 1, 0, 0, 0, 0, 
      1, 1, 1, 2, 1, 0])/(2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 
      12*n3 - 6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 
      4*n2^2 + 28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((3748 - 4362*d + 1652*d^2 - 204*d^3 + 2788*n2 - 2030*d*n2 + 363*d^2*n2 + 
      600*n2^2 - 210*d*n2^2 + 40*n2^3 + 1364*n3 - 1162*d*n3 + 240*d^2*n3 + 
      824*n2*n3 - 322*d*n2*n3 + 100*n2^2*n3 + 88*n3^2 - 44*d*n3^2 + 
      40*n2*n3^2)*j[p4, 0, n2, 1 + n3, 1, 0, 0, 0, 0, 1, 2, 0, 1, 1, 1])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((2804 - 3234*d + 1212*d^2 - 148*d^3 + 1788*n2 - 1310*d*n2 + 235*d^2*n2 + 
      368*n2^2 - 130*d*n2^2 + 24*n2^3 + 1044*n3 - 882*d*n3 + 180*d^2*n3 + 
      520*n2*n3 - 206*d*n2*n3 + 60*n2^2*n3 + 72*n3^2 - 36*d*n3^2 + 
      24*n2*n3^2)*j[p4, 0, n2, 1 + n3, 1, 0, 0, 0, 0, 2, 1, 0, 1, 1, 1])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((2 - d)*j[p4, 0, n2, 1 + n3, 2, -1, 0, 0, 0, 0, 1, 1, 1, 1, 1])/
    (70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 10*d*n3 + 
     6*n2*n3 + 2*n3^2) + ((-2 + d)*j[p4, 0, n2, 1 + n3, 2, -1, 0, 0, 0, 1, 0, 
      1, 1, 1, 1])/(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
     10*d*n3 + 6*n2*n3 + 2*n3^2) + 
   ((2 - d)*j[p4, 0, n2, 1 + n3, 2, -1, 0, 0, 0, 1, 1, 0, 1, 1, 1])/
    (70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 10*d*n3 + 
     6*n2*n3 + 2*n3^2) + ((-2948 + 3478*d - 1340*d^2 + 169*d^3 - 2048*n2 + 
      1520*d*n2 - 278*d^2*n2 - 404*n2^2 + 144*d*n2^2 - 24*n2^3 - 916*n3 + 
      782*d*n3 - 162*d^2*n3 - 524*n2*n3 + 206*d*n2*n3 - 60*n2^2*n3 - 
      56*n3^2 + 28*d*n3^2 - 24*n2*n3^2)*j[p4, 0, n2, 1 + n3, 2, -1, 0, 0, 0, 
      1, 1, 1, 1, 1, 0])/((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 
      12*n3 - 6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 
      4*n2^2 + 28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-1960 + 2276*d - 860*d^2 + 106*d^3 - 1232*n2 + 908*d*n2 - 164*d^2*n2 - 
      248*n2^2 + 88*d*n2^2 - 16*n2^3 - 712*n3 + 604*d*n3 - 124*d^2*n3 - 
      352*n2*n3 + 140*d*n2*n3 - 40*n2^2*n3 - 48*n3^2 + 24*d*n3^2 - 
      16*n2*n3^2)*j[p4, 0, n2, 1 + n3, 2, 0, -1, 0, 0, 0, 1, 1, 1, 1, 1])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((1960 - 2276*d + 860*d^2 - 106*d^3 + 1232*n2 - 908*d*n2 + 164*d^2*n2 + 
      248*n2^2 - 88*d*n2^2 + 16*n2^3 + 712*n3 - 604*d*n3 + 124*d^2*n3 + 
      352*n2*n3 - 140*d*n2*n3 + 40*n2^2*n3 + 48*n3^2 - 24*d*n3^2 + 
      16*n2*n3^2)*j[p4, 0, n2, 1 + n3, 2, 0, -1, 0, 0, 1, 0, 1, 1, 1, 1])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-1960 + 2276*d - 860*d^2 + 106*d^3 - 1232*n2 + 908*d*n2 - 164*d^2*n2 - 
      248*n2^2 + 88*d*n2^2 - 16*n2^3 - 712*n3 + 604*d*n3 - 124*d^2*n3 - 
      352*n2*n3 + 140*d*n2*n3 - 40*n2^2*n3 - 48*n3^2 + 24*d*n3^2 - 
      16*n2*n3^2)*j[p4, 0, n2, 1 + n3, 2, 0, -1, 0, 0, 1, 1, 0, 1, 1, 1])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-2140 + 2530*d - 978*d^2 + 124*d^3 - 1108*n2 + 852*d*n2 - 161*d^2*n2 - 
      176*n2^2 + 66*d*n2^2 - 8*n2^3 - 620*n3 + 526*d*n3 - 108*d^2*n3 - 
      228*n2*n3 + 94*d*n2*n3 - 20*n2^2*n3 - 40*n3^2 + 20*d*n3^2 - 8*n2*n3^2)*
     j[p4, 0, n2, 1 + n3, 2, 0, -1, 0, 0, 1, 1, 1, 1, 1, 0])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-2 + d)*j[p4, 0, n2, 1 + n3, 2, 0, 0, -1, 0, 0, 1, 1, 1, 1, 1])/
    (70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 10*d*n3 + 
     6*n2*n3 + 2*n3^2) + ((2 - d)*j[p4, 0, n2, 1 + n3, 2, 0, 0, -1, 0, 1, 0, 
      1, 1, 1, 1])/(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
     10*d*n3 + 6*n2*n3 + 2*n3^2) + 
   ((-2 + d)*j[p4, 0, n2, 1 + n3, 2, 0, 0, -1, 0, 1, 1, 0, 1, 1, 1])/
    (70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 10*d*n3 + 
     6*n2*n3 + 2*n3^2) + ((3988 - 4676*d + 1787*d^2 - 223*d^3 + 3138*n2 - 
      2289*d*n2 + 411*d^2*n2 + 674*n2^2 - 236*d*n2^2 + 44*n2^3 + 1368*n3 - 
      1170*d*n3 + 243*d^2*n3 + 898*n2*n3 - 349*d*n2*n3 + 110*n2^2*n3 + 
      84*n3^2 - 42*d*n3^2 + 44*n2*n3^2)*j[p4, 0, n2, 1 + n3, 2, 0, 0, -1, 0, 
      1, 1, 1, 1, 1, 0])/((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 
      12*n3 - 6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 
      4*n2^2 + 28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((1960 - 2276*d + 860*d^2 - 106*d^3 + 1232*n2 - 908*d*n2 + 164*d^2*n2 + 
      248*n2^2 - 88*d*n2^2 + 16*n2^3 + 712*n3 - 604*d*n3 + 124*d^2*n3 + 
      352*n2*n3 - 140*d*n2*n3 + 40*n2^2*n3 + 48*n3^2 - 24*d*n3^2 + 
      16*n2*n3^2)*j[p4, 0, n2, 1 + n3, 2, 0, 0, 0, -1, 0, 1, 1, 1, 1, 1])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-1960 + 2276*d - 860*d^2 + 106*d^3 - 1232*n2 + 908*d*n2 - 164*d^2*n2 - 
      248*n2^2 + 88*d*n2^2 - 16*n2^3 - 712*n3 + 604*d*n3 - 124*d^2*n3 - 
      352*n2*n3 + 140*d*n2*n3 - 40*n2^2*n3 - 48*n3^2 + 24*d*n3^2 - 
      16*n2*n3^2)*j[p4, 0, n2, 1 + n3, 2, 0, 0, 0, -1, 1, 0, 1, 1, 1, 1])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((1960 - 2276*d + 860*d^2 - 106*d^3 + 1232*n2 - 908*d*n2 + 164*d^2*n2 + 
      248*n2^2 - 88*d*n2^2 + 16*n2^3 + 712*n3 - 604*d*n3 + 124*d^2*n3 + 
      352*n2*n3 - 140*d*n2*n3 + 40*n2^2*n3 + 48*n3^2 - 24*d*n3^2 + 
      16*n2*n3^2)*j[p4, 0, n2, 1 + n3, 2, 0, 0, 0, -1, 1, 1, 0, 1, 1, 1])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((3180 - 3728*d + 1425*d^2 - 178*d^3 + 2198*n2 - 1621*d*n2 + 294*d^2*n2 + 
      446*n2^2 - 158*d*n2^2 + 28*n2^3 + 1072*n3 - 914*d*n3 + 189*d^2*n3 + 
      602*n2*n3 - 237*d*n2*n3 + 70*n2^2*n3 + 68*n3^2 - 34*d*n3^2 + 
      28*n2*n3^2)*j[p4, 0, n2, 1 + n3, 2, 0, 0, 0, -1, 1, 1, 1, 1, 1, 0])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((3732 - 4376*d + 1675*d^2 - 210*d^3 + 2130*n2 - 1607*d*n2 + 298*d^2*n2 + 
      378*n2^2 - 138*d*n2^2 + 20*n2^3 + 4884*n3 - 5350*d*n3 + 1874*d^2*n3 - 
      210*d^3*n3 + 2624*n2*n3 - 1806*d*n2*n3 + 298*d^2*n2*n3 + 428*n2^2*n3 - 
      138*d*n2^2*n3 + 20*n2^3*n3 + 1228*n3^2 - 1012*d*n3^2 + 199*d^2*n3^2 + 
      514*n2*n3^2 - 199*d*n2*n3^2 + 50*n2^2*n3^2 + 76*n3^3 - 38*d*n3^3 + 
      20*n2*n3^3)*j[p4, 0, n2, 2 + n3, 0, 0, 0, -1, 0, 1, 1, 1, 1, 1, 1])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((3732 - 4376*d + 1675*d^2 - 210*d^3 + 2130*n2 - 1607*d*n2 + 298*d^2*n2 + 
      378*n2^2 - 138*d*n2^2 + 20*n2^3 + 4884*n3 - 5350*d*n3 + 1874*d^2*n3 - 
      210*d^3*n3 + 2624*n2*n3 - 1806*d*n2*n3 + 298*d^2*n2*n3 + 428*n2^2*n3 - 
      138*d*n2^2*n3 + 20*n2^3*n3 + 1228*n3^2 - 1012*d*n3^2 + 199*d^2*n3^2 + 
      514*n2*n3^2 - 199*d*n2*n3^2 + 50*n2^2*n3^2 + 76*n3^3 - 38*d*n3^3 + 
      20*n2*n3^3)*j[p4, 0, n2, 2 + n3, 0, 0, 0, 0, -1, 1, 1, 1, 1, 1, 1])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((996 - 1198*d + 474*d^2 - 62*d^3 - 272*n2 + 124*d*n2 - 9*d^2*n2 - 
      164*n2^2 + 50*d*n2^2 - 16*n2^3 + 1184*n3 - 1352*d*n3 + 504*d^2*n3 - 
      62*d^3*n3 - 484*n2*n3 + 196*d*n2*n3 - 9*d^2*n2*n3 - 204*n2^2*n3 + 
      50*d*n2^2*n3 - 16*n2^3*n3 + 204*n3^2 - 162*d*n3^2 + 30*d^2*n3^2 - 
      228*n2*n3^2 + 72*d*n2*n3^2 - 40*n2^2*n3^2 + 16*n3^3 - 8*d*n3^3 - 
      16*n2*n3^3)*j[p4, 0, n2, 2 + n3, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-3348 + 3954*d - 1524*d^2 + 192*d^3 - 2028*n2 + 1518*d*n2 - 279*d^2*n2 - 
      384*n2^2 + 138*d*n2^2 - 24*n2^3 - 4488*n3 + 4932*d*n3 - 1728*d^2*n3 + 
      192*d^3*n3 - 2580*n2*n3 + 1740*d*n2*n3 - 279*d^2*n2*n3 - 444*n2^2*n3 + 
      138*d*n2^2*n3 - 24*n2^3*n3 - 1212*n3^2 + 1014*d*n3^2 - 204*d^2*n3^2 - 
      576*n2*n3^2 + 222*d*n2*n3^2 - 60*n2^2*n3^2 - 72*n3^3 + 36*d*n3^3 - 
      24*n2*n3^3)*j[p4, 0, n2, 2 + n3, 1, -1, 0, 0, 0, 1, 0, 1, 1, 1, 1])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((3348 - 3954*d + 1524*d^2 - 192*d^3 + 2028*n2 - 1518*d*n2 + 279*d^2*n2 + 
      384*n2^2 - 138*d*n2^2 + 24*n2^3 + 4488*n3 - 4932*d*n3 + 1728*d^2*n3 - 
      192*d^3*n3 + 2580*n2*n3 - 1740*d*n2*n3 + 279*d^2*n2*n3 + 444*n2^2*n3 - 
      138*d*n2^2*n3 + 24*n2^3*n3 + 1212*n3^2 - 1014*d*n3^2 + 204*d^2*n3^2 + 
      576*n2*n3^2 - 222*d*n2*n3^2 + 60*n2^2*n3^2 + 72*n3^3 - 36*d*n3^3 + 
      24*n2*n3^3)*j[p4, 0, n2, 2 + n3, 1, -1, 0, 0, 0, 1, 1, 0, 1, 1, 1])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-3348 + 3954*d - 1524*d^2 + 192*d^3 - 2028*n2 + 1518*d*n2 - 279*d^2*n2 - 
      384*n2^2 + 138*d*n2^2 - 24*n2^3 - 4488*n3 + 4932*d*n3 - 1728*d^2*n3 + 
      192*d^3*n3 - 2580*n2*n3 + 1740*d*n2*n3 - 279*d^2*n2*n3 - 444*n2^2*n3 + 
      138*d*n2^2*n3 - 24*n2^3*n3 - 1212*n3^2 + 1014*d*n3^2 - 204*d^2*n3^2 - 
      576*n2*n3^2 + 222*d*n2*n3^2 - 60*n2^2*n3^2 - 72*n3^3 + 36*d*n3^3 - 
      24*n2*n3^3)*j[p4, 0, n2, 2 + n3, 1, -1, 0, 0, 0, 1, 1, 1, 0, 1, 1])/
    (4*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((1788 - 2086*d + 792*d^2 - 98*d^3 + 1556*n2 - 1122*d*n2 + 199*d^2*n2 + 
      352*n2^2 - 122*d*n2^2 + 24*n2^3 + 2440*n3 - 2644*d*n3 + 908*d^2*n3 - 
      98*d^3*n3 + 2028*n2*n3 - 1304*d*n2*n3 + 199*d^2*n2*n3 + 412*n2^2*n3 - 
      122*d*n2^2*n3 + 24*n2^3*n3 + 692*n3^2 - 578*d*n3^2 + 116*d^2*n3^2 + 
      496*n2*n3^2 - 182*d*n2*n3^2 + 60*n2^2*n3^2 + 40*n3^3 - 20*d*n3^3 + 
      24*n2*n3^3)*j[p4, 0, n2, 2 + n3, 1, -1, 0, 0, 0, 1, 1, 1, 1, 0, 1])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((3348 - 3954*d + 1524*d^2 - 192*d^3 + 2028*n2 - 1518*d*n2 + 279*d^2*n2 + 
      384*n2^2 - 138*d*n2^2 + 24*n2^3 + 4488*n3 - 4932*d*n3 + 1728*d^2*n3 - 
      192*d^3*n3 + 2580*n2*n3 - 1740*d*n2*n3 + 279*d^2*n2*n3 + 444*n2^2*n3 - 
      138*d*n2^2*n3 + 24*n2^3*n3 + 1212*n3^2 - 1014*d*n3^2 + 204*d^2*n3^2 + 
      576*n2*n3^2 - 222*d*n2*n3^2 + 60*n2^2*n3^2 + 72*n3^3 - 36*d*n3^3 + 
      24*n2*n3^3)*j[p4, 0, n2, 2 + n3, 1, -1, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((1116 - 1318*d + 508*d^2 - 64*d^3 + 676*n2 - 506*d*n2 + 93*d^2*n2 + 
      128*n2^2 - 46*d*n2^2 + 8*n2^3 + 1496*n3 - 1644*d*n3 + 576*d^2*n3 - 
      64*d^3*n3 + 860*n2*n3 - 580*d*n2*n3 + 93*d^2*n2*n3 + 148*n2^2*n3 - 
      46*d*n2^2*n3 + 8*n2^3*n3 + 404*n3^2 - 338*d*n3^2 + 68*d^2*n3^2 + 
      192*n2*n3^2 - 74*d*n2*n3^2 + 20*n2^2*n3^2 + 24*n3^3 - 12*d*n3^3 + 
      8*n2*n3^3)*j[p4, 0, n2, 2 + n3, 1, 0, -1, 0, 0, 1, 0, 1, 1, 1, 1])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-1116 + 1318*d - 508*d^2 + 64*d^3 - 676*n2 + 506*d*n2 - 93*d^2*n2 - 
      128*n2^2 + 46*d*n2^2 - 8*n2^3 - 1496*n3 + 1644*d*n3 - 576*d^2*n3 + 
      64*d^3*n3 - 860*n2*n3 + 580*d*n2*n3 - 93*d^2*n2*n3 - 148*n2^2*n3 + 
      46*d*n2^2*n3 - 8*n2^3*n3 - 404*n3^2 + 338*d*n3^2 - 68*d^2*n3^2 - 
      192*n2*n3^2 + 74*d*n2*n3^2 - 20*n2^2*n3^2 - 24*n3^3 + 12*d*n3^3 - 
      8*n2*n3^3)*j[p4, 0, n2, 2 + n3, 1, 0, -1, 0, 0, 1, 1, 0, 1, 1, 1])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-1116 + 1318*d - 508*d^2 + 64*d^3 - 676*n2 + 506*d*n2 - 93*d^2*n2 - 
      128*n2^2 + 46*d*n2^2 - 8*n2^3 - 1496*n3 + 1644*d*n3 - 576*d^2*n3 + 
      64*d^3*n3 - 860*n2*n3 + 580*d*n2*n3 - 93*d^2*n2*n3 - 148*n2^2*n3 + 
      46*d*n2^2*n3 - 8*n2^3*n3 - 404*n3^2 + 338*d*n3^2 - 68*d^2*n3^2 - 
      192*n2*n3^2 + 74*d*n2*n3^2 - 20*n2^2*n3^2 - 24*n3^3 + 12*d*n3^3 - 
      8*n2*n3^3)*j[p4, 0, n2, 2 + n3, 1, 0, -1, 0, 0, 1, 1, 1, 0, 1, 1])/
    (4*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((2676 - 3186*d + 1240*d^2 - 158*d^3 + 1148*n2 - 902*d*n2 + 173*d^2*n2 + 
      160*n2^2 - 62*d*n2^2 + 8*n2^3 + 3544*n3 - 3932*d*n3 + 1396*d^2*n3 - 
      158*d^3*n3 + 1412*n2*n3 - 1016*d*n2*n3 + 173*d^2*n2*n3 + 180*n2^2*n3 - 
      62*d*n2^2*n3 + 8*n2^3*n3 + 924*n3^2 - 774*d*n3^2 + 156*d^2*n3^2 + 
      272*n2*n3^2 - 114*d*n2*n3^2 + 20*n2^2*n3^2 + 56*n3^3 - 28*d*n3^3 + 
      8*n2*n3^3)*j[p4, 0, n2, 2 + n3, 1, 0, -1, 0, 0, 1, 1, 1, 1, 0, 1])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-1116 + 1318*d - 508*d^2 + 64*d^3 - 676*n2 + 506*d*n2 - 93*d^2*n2 - 
      128*n2^2 + 46*d*n2^2 - 8*n2^3 - 1496*n3 + 1644*d*n3 - 576*d^2*n3 + 
      64*d^3*n3 - 860*n2*n3 + 580*d*n2*n3 - 93*d^2*n2*n3 - 148*n2^2*n3 + 
      46*d*n2^2*n3 - 8*n2^3*n3 - 404*n3^2 + 338*d*n3^2 - 68*d^2*n3^2 - 
      192*n2*n3^2 + 74*d*n2*n3^2 - 20*n2^2*n3^2 - 24*n3^3 + 12*d*n3^3 - 
      8*n2*n3^3)*j[p4, 0, n2, 2 + n3, 1, 0, -1, 0, 0, 1, 1, 1, 1, 1, 1])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-2532 + 2874*d - 1056*d^2 + 126*d^3 - 1668*n2 + 1206*d*n2 - 213*d^2*n2 - 
      360*n2^2 + 126*d*n2^2 - 24*n2^3 - 3528*n3 + 3708*d*n3 - 1224*d^2*n3 + 
      126*d^3*n3 - 2172*n2*n3 + 1404*d*n2*n3 - 213*d^2*n2*n3 - 420*n2^2*n3 + 
      126*d*n2^2*n3 - 24*n2^3*n3 - 1068*n3^2 + 870*d*n3^2 - 168*d^2*n3^2 - 
      528*n2*n3^2 + 198*d*n2*n3^2 - 60*n2^2*n3^2 - 72*n3^3 + 36*d*n3^3 - 
      24*n2*n3^3)*j[p4, 0, n2, 2 + n3, 1, 0, 0, -1, 0, 1, 0, 1, 1, 1, 1])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((2532 - 2874*d + 1056*d^2 - 126*d^3 + 1668*n2 - 1206*d*n2 + 213*d^2*n2 + 
      360*n2^2 - 126*d*n2^2 + 24*n2^3 + 3528*n3 - 3708*d*n3 + 1224*d^2*n3 - 
      126*d^3*n3 + 2172*n2*n3 - 1404*d*n2*n3 + 213*d^2*n2*n3 + 420*n2^2*n3 - 
      126*d*n2^2*n3 + 24*n2^3*n3 + 1068*n3^2 - 870*d*n3^2 + 168*d^2*n3^2 + 
      528*n2*n3^2 - 198*d*n2*n3^2 + 60*n2^2*n3^2 + 72*n3^3 - 36*d*n3^3 + 
      24*n2*n3^3)*j[p4, 0, n2, 2 + n3, 1, 0, 0, -1, 0, 1, 1, 0, 1, 1, 1])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-4492 + 5150*d - 1916*d^2 + 232*d^3 - 2900*n2 + 2114*d*n2 - 377*d^2*n2 - 
      608*n2^2 + 214*d*n2^2 - 40*n2^3 - 6200*n3 + 6588*d*n3 - 2208*d^2*n3 + 
      232*d^3*n3 - 3756*n2*n3 + 2452*d*n2*n3 - 377*d^2*n2*n3 - 708*n2^2*n3 + 
      214*d*n2^2*n3 - 40*n2^3*n3 - 1828*n3^2 + 1498*d*n3^2 - 292*d^2*n3^2 - 
      896*n2*n3^2 + 338*d*n2*n3^2 - 100*n2^2*n3^2 - 120*n3^3 + 60*d*n3^3 - 
      40*n2*n3^3)*j[p4, 0, n2, 2 + n3, 1, 0, 0, -1, 0, 1, 1, 1, 0, 1, 1])/
    (4*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((2404 - 2826*d + 1084*d^2 - 136*d^3 + 1028*n2 - 798*d*n2 + 151*d^2*n2 + 
      152*n2^2 - 58*d*n2^2 + 8*n2^3 + 3224*n3 - 3524*d*n3 + 1228*d^2*n3 - 
      136*d^3*n3 + 1276*n2*n3 - 904*d*n2*n3 + 151*d^2*n2*n3 + 172*n2^2*n3 - 
      58*d*n2^2*n3 + 8*n2^3*n3 + 876*n3^2 - 726*d*n3^2 + 144*d^2*n3^2 + 
      256*n2*n3^2 - 106*d*n2*n3^2 + 20*n2^2*n3^2 + 56*n3^3 - 28*d*n3^3 + 
      8*n2*n3^3)*j[p4, 0, n2, 2 + n3, 1, 0, 0, -1, 0, 1, 1, 1, 1, 0, 1])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-3732 + 4376*d - 1675*d^2 + 210*d^3 - 2130*n2 + 1607*d*n2 - 298*d^2*n2 - 
      378*n2^2 + 138*d*n2^2 - 20*n2^3 - 4884*n3 + 5350*d*n3 - 1874*d^2*n3 + 
      210*d^3*n3 - 2624*n2*n3 + 1806*d*n2*n3 - 298*d^2*n2*n3 - 428*n2^2*n3 + 
      138*d*n2^2*n3 - 20*n2^3*n3 - 1228*n3^2 + 1012*d*n3^2 - 199*d^2*n3^2 - 
      514*n2*n3^2 + 199*d*n2*n3^2 - 50*n2^2*n3^2 - 76*n3^3 + 38*d*n3^3 - 
      20*n2*n3^3)*j[p4, 0, n2, 2 + n3, 1, 0, 0, -1, 0, 1, 1, 1, 1, 1, 0])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-3348 + 3954*d - 1524*d^2 + 192*d^3 - 2028*n2 + 1518*d*n2 - 279*d^2*n2 - 
      384*n2^2 + 138*d*n2^2 - 24*n2^3 - 4488*n3 + 4932*d*n3 - 1728*d^2*n3 + 
      192*d^3*n3 - 2580*n2*n3 + 1740*d*n2*n3 - 279*d^2*n2*n3 - 444*n2^2*n3 + 
      138*d*n2^2*n3 - 24*n2^3*n3 - 1212*n3^2 + 1014*d*n3^2 - 204*d^2*n3^2 - 
      576*n2*n3^2 + 222*d*n2*n3^2 - 60*n2^2*n3^2 - 72*n3^3 + 36*d*n3^3 - 
      24*n2*n3^3)*j[p4, 0, n2, 2 + n3, 1, 0, 0, -1, 0, 1, 1, 1, 1, 1, 1])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-6724 + 7786*d - 2932*d^2 + 360*d^3 - 4252*n2 + 3126*d*n2 - 563*d^2*n2 - 
      864*n2^2 + 306*d*n2^2 - 56*n2^3 - 9192*n3 + 9876*d*n3 - 3360*d^2*n3 + 
      360*d^3*n3 - 5476*n2*n3 + 3612*d*n2*n3 - 563*d^2*n2*n3 - 1004*n2^2*n3 + 
      306*d*n2^2*n3 - 56*n2^3*n3 - 2636*n3^2 + 2174*d*n3^2 - 428*d^2*n3^2 - 
      1280*n2*n3^2 + 486*d*n2*n3^2 - 140*n2^2*n3^2 - 168*n3^3 + 84*d*n3^3 - 
      56*n2*n3^3)*j[p4, 0, n2, 2 + n3, 1, 0, 0, 0, -1, 1, 0, 1, 1, 1, 1])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((6724 - 7786*d + 2932*d^2 - 360*d^3 + 4252*n2 - 3126*d*n2 + 563*d^2*n2 + 
      864*n2^2 - 306*d*n2^2 + 56*n2^3 + 9192*n3 - 9876*d*n3 + 3360*d^2*n3 - 
      360*d^3*n3 + 5476*n2*n3 - 3612*d*n2*n3 + 563*d^2*n2*n3 + 1004*n2^2*n3 - 
      306*d*n2^2*n3 + 56*n2^3*n3 + 2636*n3^2 - 2174*d*n3^2 + 428*d^2*n3^2 + 
      1280*n2*n3^2 - 486*d*n2*n3^2 + 140*n2^2*n3^2 + 168*n3^3 - 84*d*n3^3 + 
      56*n2*n3^3)*j[p4, 0, n2, 2 + n3, 1, 0, 0, 0, -1, 1, 1, 0, 1, 1, 1])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-6724 + 7786*d - 2932*d^2 + 360*d^3 - 4252*n2 + 3126*d*n2 - 563*d^2*n2 - 
      864*n2^2 + 306*d*n2^2 - 56*n2^3 - 9192*n3 + 9876*d*n3 - 3360*d^2*n3 + 
      360*d^3*n3 - 5476*n2*n3 + 3612*d*n2*n3 - 563*d^2*n2*n3 - 1004*n2^2*n3 + 
      306*d*n2^2*n3 - 56*n2^3*n3 - 2636*n3^2 + 2174*d*n3^2 - 428*d^2*n3^2 - 
      1280*n2*n3^2 + 486*d*n2*n3^2 - 140*n2^2*n3^2 - 168*n3^3 + 84*d*n3^3 - 
      56*n2*n3^3)*j[p4, 0, n2, 2 + n3, 1, 0, 0, 0, -1, 1, 1, 1, 0, 1, 1])/
    (4*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((1516 - 1726*d + 636*d^2 - 76*d^3 + 1436*n2 - 1018*d*n2 + 177*d^2*n2 + 
      344*n2^2 - 118*d*n2^2 + 24*n2^3 + 2120*n3 - 2236*d*n3 + 740*d^2*n3 - 
      76*d^3*n3 + 1892*n2*n3 - 1192*d*n2*n3 + 177*d^2*n2*n3 + 404*n2^2*n3 - 
      118*d*n2^2*n3 + 24*n2^3*n3 + 644*n3^2 - 530*d*n3^2 + 104*d^2*n3^2 + 
      480*n2*n3^2 - 174*d*n2*n3^2 + 60*n2^2*n3^2 + 40*n3^3 - 20*d*n3^3 + 
      24*n2*n3^3)*j[p4, 0, n2, 2 + n3, 1, 0, 0, 0, -1, 1, 1, 1, 1, 0, 1])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-3732 + 4376*d - 1675*d^2 + 210*d^3 - 2130*n2 + 1607*d*n2 - 298*d^2*n2 - 
      378*n2^2 + 138*d*n2^2 - 20*n2^3 - 4884*n3 + 5350*d*n3 - 1874*d^2*n3 + 
      210*d^3*n3 - 2624*n2*n3 + 1806*d*n2*n3 - 298*d^2*n2*n3 - 428*n2^2*n3 + 
      138*d*n2^2*n3 - 20*n2^3*n3 - 1228*n3^2 + 1012*d*n3^2 - 199*d^2*n3^2 - 
      514*n2*n3^2 + 199*d*n2*n3^2 - 50*n2^2*n3^2 - 76*n3^3 + 38*d*n3^3 - 
      20*n2*n3^3)*j[p4, 0, n2, 2 + n3, 1, 0, 0, 0, -1, 1, 1, 1, 1, 1, 0])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((1116 - 1318*d + 508*d^2 - 64*d^3 + 676*n2 - 506*d*n2 + 93*d^2*n2 + 
      128*n2^2 - 46*d*n2^2 + 8*n2^3 + 1496*n3 - 1644*d*n3 + 576*d^2*n3 - 
      64*d^3*n3 + 860*n2*n3 - 580*d*n2*n3 + 93*d^2*n2*n3 + 148*n2^2*n3 - 
      46*d*n2^2*n3 + 8*n2^3*n3 + 404*n3^2 - 338*d*n3^2 + 68*d^2*n3^2 + 
      192*n2*n3^2 - 74*d*n2*n3^2 + 20*n2^2*n3^2 + 24*n3^3 - 12*d*n3^3 + 
      8*n2*n3^3)*j[p4, 0, n2, 2 + n3, 1, 0, 0, 0, -1, 1, 1, 1, 1, 1, 1])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((2804 - 3234*d + 1212*d^2 - 148*d^3 + 1788*n2 - 1310*d*n2 + 235*d^2*n2 + 
      368*n2^2 - 130*d*n2^2 + 24*n2^3 + 3848*n3 - 4116*d*n3 + 1392*d^2*n3 - 
      148*d^3*n3 + 2308*n2*n3 - 1516*d*n2*n3 + 235*d^2*n2*n3 + 428*n2^2*n3 - 
      130*d*n2^2*n3 + 24*n2^3*n3 + 1116*n3^2 - 918*d*n3^2 + 180*d^2*n3^2 + 
      544*n2*n3^2 - 206*d*n2*n3^2 + 60*n2^2*n3^2 + 72*n3^3 - 36*d*n3^3 + 
      24*n2*n3^3)*j[p4, 0, n2, 2 + n3, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1])/
    (2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((2 - d + 2*n3 - d*n3)*j[p4, 0, n2, 2 + n3, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 
      1])/(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 10*d*n3 + 
     6*n2*n3 + 2*n3^2) + ((-996 + 1198*d - 474*d^2 + 62*d^3 + 272*n2 - 
      124*d*n2 + 9*d^2*n2 + 164*n2^2 - 50*d*n2^2 + 16*n2^3 - 1184*n3 + 
      1352*d*n3 - 504*d^2*n3 + 62*d^3*n3 + 484*n2*n3 - 196*d*n2*n3 + 
      9*d^2*n2*n3 + 204*n2^2*n3 - 50*d*n2^2*n3 + 16*n2^3*n3 - 204*n3^2 + 
      162*d*n3^2 - 30*d^2*n3^2 + 228*n2*n3^2 - 72*d*n2*n3^2 + 40*n2^2*n3^2 - 
      16*n3^3 + 8*d*n3^3 + 16*n2*n3^3)*j[p4, 0, n2, 2 + n3, 1, 0, 0, 0, 0, 1, 
      1, 1, 1, 1, 0])/(2*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 
      12*n3 - 6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 
      4*n2^2 + 28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-27312*n2 + 42020*d*n2 - 23956*d^2*n2 + 6003*d^3*n2 - 558*d^4*n2 - 
      32004*n2^2 + 35540*d*n2^2 - 13031*d^2*n2^2 + 1577*d^3*n2^2 - 
      11916*n2^3 + 8598*d*n2^3 - 1536*d^2*n2^3 - 1800*n2^4 + 636*d*n2^4 - 
      96*n2^5 - 17160*n2*n3 + 20636*d*n2*n3 - 8142*d^2*n2*n3 + 
      1057*d^3*n2*n3 - 16460*n2^2*n3 + 12524*d*n2^2*n3 - 2363*d^2*n2^2*n3 - 
      4276*n2^3*n3 + 1586*d*n2^3*n3 - 336*n2^4*n3 - 3208*n2*n3^2 + 
      2752*d*n2*n3^2 - 574*d^2*n2*n3^2 - 2440*n2^2*n3^2 + 956*d*n2^2*n3^2 - 
      336*n2^3*n3^2 - 160*n2*n3^3 + 80*d*n2*n3^3 - 96*n2^2*n3^3)*
     j[p4, 0, 1 + n2, n3, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1])/
    ((-2 + d)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 
      6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 
      28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((648*n2 - 786*d*n2 + 313*d^2*n2 - 41*d^3*n2 + 1310*n2^2 - 929*d*n2^2 + 
      164*d^2*n2^2 + 322*n2^3 - 110*d*n2^3 + 20*n2^4 + 76*n2*n3 - 
      68*d*n2*n3 + 15*d^2*n2*n3 + 342*n2^2*n3 - 123*d*n2^2*n3 + 50*n2^3*n3 - 
      4*n2*n3^2 + 2*d*n2*n3^2 + 20*n2^2*n3^2)*j[p4, 0, 1 + n2, 1 + n3, 1, -1, 
      0, 0, 0, 1, 0, 1, 1, 1, 1])/((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 
      2*n2^2 + 12*n3 - 6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 
      12*d*n2 + 4*n2^2 + 28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-2580*n2 + 3048*d*n2 - 1177*d^2*n2 + 149*d^3*n2 - 1838*n2^2 + 
      1367*d*n2^2 - 251*d^2*n2^2 - 358*n2^3 + 128*d*n2^3 - 20*n2^4 - 
      736*n2*n3 + 626*d*n2*n3 - 129*d^2*n2*n3 - 438*n2^2*n3 + 171*d*n2^2*n3 - 
      50*n2^3*n3 - 44*n2*n3^2 + 22*d*n2*n3^2 - 20*n2^2*n3^2)*
     j[p4, 0, 1 + n2, 1 + n3, 1, -1, 0, 0, 0, 1, 1, 1, 0, 1, 1])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((5160*n2 - 6096*d*n2 + 2354*d^2*n2 - 298*d^3*n2 + 3676*n2^2 - 
      2734*d*n2^2 + 502*d^2*n2^2 + 716*n2^3 - 256*d*n2^3 + 40*n2^4 + 
      1472*n2*n3 - 1252*d*n2*n3 + 258*d^2*n2*n3 + 876*n2^2*n3 - 
      342*d*n2^2*n3 + 100*n2^3*n3 + 88*n2*n3^2 - 44*d*n2*n3^2 + 40*n2^2*n3^2)*
     j[p4, 0, 1 + n2, 1 + n3, 1, -1, 0, 0, 0, 1, 1, 1, 1, 0, 1])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-2820*n2 + 3362*d*n2 - 1312*d^2*n2 + 168*d^3*n2 - 2188*n2^2 + 
      1626*d*n2^2 - 299*d^2*n2^2 - 432*n2^3 + 154*d*n2^3 - 24*n2^4 - 
      740*n2*n3 + 634*d*n2*n3 - 132*d^2*n2*n3 - 512*n2^2*n3 + 198*d*n2^2*n3 - 
      60*n2^3*n3 - 40*n2*n3^2 + 20*d*n2*n3^2 - 24*n2^2*n3^2)*
     j[p4, 0, 1 + n2, 1 + n3, 1, -1, 0, 0, 0, 1, 1, 1, 1, 1, 1])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((1728*n2 - 2026*d*n2 + 775*d^2*n2 - 97*d^3*n2 + 1082*n2^2 - 807*d*n2^2 + 
      148*d^2*n2^2 + 206*n2^3 - 74*d*n2^3 + 12*n2^4 + 556*n2*n3 - 
      472*d*n2*n3 + 97*d^2*n2*n3 + 274*n2^2*n3 - 109*d*n2^2*n3 + 30*n2^3*n3 + 
      36*n2*n3^2 - 18*d*n2*n3^2 + 12*n2^2*n3^2)*j[p4, 0, 1 + n2, 1 + n3, 1, 
      0, -1, 0, 0, 1, 0, 1, 1, 1, 1])/((68 - 56*d + 11*d^2 + 30*n2 - 
      11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 
      34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((2580*n2 - 3048*d*n2 + 1177*d^2*n2 - 149*d^3*n2 + 1838*n2^2 - 
      1367*d*n2^2 + 251*d^2*n2^2 + 358*n2^3 - 128*d*n2^3 + 20*n2^4 + 
      736*n2*n3 - 626*d*n2*n3 + 129*d^2*n2*n3 + 438*n2^2*n3 - 171*d*n2^2*n3 + 
      50*n2^3*n3 + 44*n2*n3^2 - 22*d*n2*n3^2 + 20*n2^2*n3^2)*
     j[p4, 0, 1 + n2, 1 + n3, 1, 0, -1, 0, 0, 1, 1, 1, 0, 1, 1])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-5160*n2 + 6096*d*n2 - 2354*d^2*n2 + 298*d^3*n2 - 3676*n2^2 + 
      2734*d*n2^2 - 502*d^2*n2^2 - 716*n2^3 + 256*d*n2^3 - 40*n2^4 - 
      1472*n2*n3 + 1252*d*n2*n3 - 258*d^2*n2*n3 - 876*n2^2*n3 + 
      342*d*n2^2*n3 - 100*n2^3*n3 - 88*n2*n3^2 + 44*d*n2*n3^2 - 40*n2^2*n3^2)*
     j[p4, 0, 1 + n2, 1 + n3, 1, 0, -1, 0, 0, 1, 1, 1, 1, 0, 1])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((2820*n2 - 3362*d*n2 + 1312*d^2*n2 - 168*d^3*n2 + 2188*n2^2 - 
      1626*d*n2^2 + 299*d^2*n2^2 + 432*n2^3 - 154*d*n2^3 + 24*n2^4 + 
      740*n2*n3 - 634*d*n2*n3 + 132*d^2*n2*n3 + 512*n2^2*n3 - 198*d*n2^2*n3 + 
      60*n2^3*n3 + 40*n2*n3^2 - 20*d*n2*n3^2 + 24*n2^2*n3^2)*
     j[p4, 0, 1 + n2, 1 + n3, 1, 0, -1, 0, 0, 1, 1, 1, 1, 1, 1])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((25424*n2 - 38820*d*n2 + 21948*d^2*n2 - 5451*d^3*n2 + 502*d^4*n2 + 
      30004*n2^2 - 33100*d*n2^2 + 12055*d^2*n2^2 - 1449*d^3*n2^2 + 
      11452*n2^3 - 8206*d*n2^3 + 1456*d^2*n2^3 + 1768*n2^4 - 620*d*n2^4 + 
      96*n2^5 + 16520*n2*n3 - 19756*d*n2*n3 + 7742*d^2*n2*n3 - 
      997*d^3*n2*n3 + 15852*n2^2*n3 - 11988*d*n2^2*n3 + 2247*d^2*n2^2*n3 + 
      4196*n2^3*n3 - 1546*d*n2^3*n3 + 336*n2^4*n3 + 3176*n2*n3^2 - 
      2720*d*n2*n3^2 + 566*d^2*n2*n3^2 + 2408*n2^2*n3^2 - 940*d*n2^2*n3^2 + 
      336*n2^3*n3^2 + 160*n2*n3^3 - 80*d*n2*n3^3 + 96*n2^2*n3^3)*
     j[p4, 0, 1 + n2, 1 + n3, 1, 0, 0, -1, 0, 1, 0, 1, 1, 1, 1])/
    ((-2 + d)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 
      6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 
      28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-3276*n2 + 3798*d*n2 - 1432*d^2*n2 + 176*d^3*n2 - 2288*n2^2 + 
      1670*d*n2^2 - 299*d^2*n2^2 - 484*n2^3 + 170*d*n2^3 - 32*n2^4 - 
      1204*n2*n3 + 1022*d*n2*n3 - 210*d^2*n2*n3 - 672*n2^2*n3 + 
      264*d*n2^2*n3 - 80*n2^3*n3 - 80*n2*n3^2 + 40*d*n2*n3^2 - 32*n2^2*n3^2)*
     j[p4, 0, 1 + n2, 1 + n3, 1, 0, 0, -1, 0, 1, 1, 1, 0, 1, 1])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((6552*n2 - 7596*d*n2 + 2864*d^2*n2 - 352*d^3*n2 + 4576*n2^2 - 
      3340*d*n2^2 + 598*d^2*n2^2 + 968*n2^3 - 340*d*n2^3 + 64*n2^4 + 
      2408*n2*n3 - 2044*d*n2*n3 + 420*d^2*n2*n3 + 1344*n2^2*n3 - 
      528*d*n2^2*n3 + 160*n2^3*n3 + 160*n2*n3^2 - 80*d*n2*n3^2 + 
      64*n2^2*n3^2)*j[p4, 0, 1 + n2, 1 + n3, 1, 0, 0, -1, 0, 1, 1, 1, 1, 0, 
      1])/((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-3748*n2 + 4362*d*n2 - 1652*d^2*n2 + 204*d^3*n2 - 2788*n2^2 + 
      2030*d*n2^2 - 363*d^2*n2^2 - 600*n2^3 + 210*d*n2^3 - 40*n2^4 - 
      1364*n2*n3 + 1162*d*n2*n3 - 240*d^2*n2*n3 - 824*n2^2*n3 + 
      322*d*n2^2*n3 - 100*n2^3*n3 - 88*n2*n3^2 + 44*d*n2*n3^2 - 40*n2^2*n3^2)*
     j[p4, 0, 1 + n2, 1 + n3, 1, 0, 0, -1, 0, 1, 1, 1, 1, 1, 1])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((29344*n2 - 45332*d*n2 + 25944*d^2*n2 - 6523*d^3*n2 + 608*d^4*n2 + 
      32468*n2^2 - 36148*d*n2^2 + 13291*d^2*n2^2 - 1613*d^3*n2^2 + 
      11948*n2^3 - 8630*d*n2^3 + 1544*d^2*n2^3 + 1800*n2^4 - 636*d*n2^4 + 
      96*n2^5 + 17944*n2*n3 - 21676*d*n2*n3 + 8594*d^2*n2*n3 - 
      1121*d^3*n2*n3 + 16556*n2^2*n3 - 12620*d*n2^2*n3 + 2387*d^2*n2^2*n3 + 
      4276*n2^3*n3 - 1586*d*n2^3*n3 + 336*n2^4*n3 + 3272*n2*n3^2 - 
      2816*d*n2*n3^2 + 590*d^2*n2*n3^2 + 2440*n2^2*n3^2 - 956*d*n2^2*n3^2 + 
      336*n2^3*n3^2 + 160*n2*n3^3 - 80*d*n2*n3^3 + 96*n2^2*n3^3)*
     j[p4, 0, 1 + n2, 1 + n3, 1, 0, 0, 0, -1, 1, 0, 1, 1, 1, 1])/
    ((-2 + d)*(68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 
      6*d*n3 + 4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 
      28*n3 - 10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((3276*n2 - 3798*d*n2 + 1432*d^2*n2 - 176*d^3*n2 + 2288*n2^2 - 
      1670*d*n2^2 + 299*d^2*n2^2 + 484*n2^3 - 170*d*n2^3 + 32*n2^4 + 
      1204*n2*n3 - 1022*d*n2*n3 + 210*d^2*n2*n3 + 672*n2^2*n3 - 
      264*d*n2^2*n3 + 80*n2^3*n3 + 80*n2*n3^2 - 40*d*n2*n3^2 + 32*n2^2*n3^2)*
     j[p4, 0, 1 + n2, 1 + n3, 1, 0, 0, 0, -1, 1, 1, 1, 0, 1, 1])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((-6552*n2 + 7596*d*n2 - 2864*d^2*n2 + 352*d^3*n2 - 4576*n2^2 + 
      3340*d*n2^2 - 598*d^2*n2^2 - 968*n2^3 + 340*d*n2^3 - 64*n2^4 - 
      2408*n2*n3 + 2044*d*n2*n3 - 420*d^2*n2*n3 - 1344*n2^2*n3 + 
      528*d*n2^2*n3 - 160*n2^3*n3 - 160*n2*n3^2 + 80*d*n2*n3^2 - 
      64*n2^2*n3^2)*j[p4, 0, 1 + n2, 1 + n3, 1, 0, 0, 0, -1, 1, 1, 1, 1, 0, 
      1])/((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)) + 
   ((3748*n2 - 4362*d*n2 + 1652*d^2*n2 - 204*d^3*n2 + 2788*n2^2 - 
      2030*d*n2^2 + 363*d^2*n2^2 + 600*n2^3 - 210*d*n2^3 + 40*n2^4 + 
      1364*n2*n3 - 1162*d*n2*n3 + 240*d^2*n2*n3 + 824*n2^2*n3 - 
      322*d*n2^2*n3 + 100*n2^3*n3 + 88*n2*n3^2 - 44*d*n2*n3^2 + 40*n2^2*n3^2)*
     j[p4, 0, 1 + n2, 1 + n3, 1, 0, 0, 0, -1, 1, 1, 1, 1, 1, 1])/
    ((68 - 56*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2 + 12*n3 - 6*d*n3 + 
      4*n2*n3)*(70 - 50*d + 9*d^2 + 34*n2 - 12*d*n2 + 4*n2^2 + 28*n3 - 
      10*d*n3 + 6*n2*n3 + 2*n3^2)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 1 && n13 == 1 && n14 == 1 && 
    n2 == 0 && n3 == 0 && n5 == 0 && n6 == 0 && n7 == 0 && n8 == 0 && 
    n9 == 1 && n4 != 1 -> j[p4, -1, 0, 0, n4, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1]/
    (-6 + 3*d - 2*n4) + ((-7 + 4*d - 3*n4)*j[p4, -1, 0, 0, n4, 0, 0, 0, 0, 1, 
      1, 1, 1, 2, 0])/((-6 + 3*d - 2*n4)*(-1 + d - n4)) - 
   j[p4, -1, 0, 0, n4, 0, 0, 0, 0, 1, 1, 2, 0, 1, 1]/(-6 + 3*d - 2*n4) + 
   ((16 - 8*d - d^2 - 12*n4 + 12*d*n4 - 8*n4^2)*j[p4, -1, 0, 0, n4, 0, 0, 0, 
      0, 1, 2, 0, 1, 1, 1])/((-2 + d)*(d - 2*n4)*(-6 + 3*d - 2*n4)) + 
   j[p4, -1, 0, 0, n4, 0, 0, 0, 0, 2, 1, 1, 1, 1, 0]/(-6 + 3*d - 2*n4) + 
   ((160*n4 - 328*d*n4 + 286*d^2*n4 - 133*d^3*n4 + 27*d^4*n4 + 88*n4^2 - 
      272*d*n4^2 + 302*d^2*n4^2 - 105*d^3*n4^2 + 152*n4^3 - 380*d*n4^3 + 
      196*d^2*n4^3 + 176*n4^4 - 164*d*n4^4 + 48*n4^5)*
     j[p4, -1, 0, 0, 1 + n4, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-2 + d)*(d - 2*n4)*(-1 + d - n4)*(30 - 33*d + 9*d^2 + 22*n4 - 
      12*d*n4 + 4*n4^2)) + ((-32 + 44*d - 15*d^2 - 32*n4 + 22*d*n4 - 8*n4^2)*
     j[p4, 0, -1, 0, n4, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1])/
    (2*(-2 + d)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 4*n4^2)) + 
   j[p4, 0, -1, 0, n4, 0, 0, 0, 0, 1, 1, 0, 2, 1, 1]/(-6 + 3*d - 2*n4) + 
   ((32 - 44*d + 15*d^2 + 32*n4 - 22*d*n4 + 8*n4^2)*
     j[p4, 0, -1, 0, n4, 0, 0, 0, 0, 1, 1, 2, 0, 1, 1])/
    (2*(-2 + d)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 4*n4^2)) + 
   ((-160 + 244*d - 82*d^2 - 29*d^3 + 15*d^4 + 80*n4 - 332*d*n4 + 
      330*d^2*n4 - 97*d^3*n4 + 240*n4^2 - 380*d*n4^2 + 148*d^2*n4^2 + 
      112*n4^3 - 84*d*n4^3 + 16*n4^4)*j[p4, 0, -1, 0, n4, 0, 0, 0, 0, 1, 2, 
      0, 1, 1, 1])/(2*(-2 + d)*(d - 2*n4)*(-1 + d - n4)*
     (30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 4*n4^2)) + 
   ((-12 + 22*d - 9*d^2 - 24*n4 + 18*d*n4 - 8*n4^2)*
     j[p4, 0, -1, 0, n4, 0, 0, 0, 0, 2, 1, 1, 1, 1, 0])/
    (2*(-2 + d)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 4*n4^2)) + 
   ((-160*n4 + 328*d*n4 - 286*d^2*n4 + 133*d^3*n4 - 27*d^4*n4 - 88*n4^2 + 
      272*d*n4^2 - 302*d^2*n4^2 + 105*d^3*n4^2 - 152*n4^3 + 380*d*n4^3 - 
      196*d^2*n4^3 - 176*n4^4 + 164*d*n4^4 - 48*n4^5)*
     j[p4, 0, -1, 0, 1 + n4, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-2 + d)*(d - 2*n4)*(-1 + d - n4)*(30 - 33*d + 9*d^2 + 22*n4 - 
      12*d*n4 + 4*n4^2)) + ((12 - 22*d + 9*d^2 + 24*n4 - 18*d*n4 + 8*n4^2)*
     j[p4, 0, 0, -1, n4, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2])/
    (2*(-2 + d)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 4*n4^2)) + 
   ((-12 + 22*d - 9*d^2 - 24*n4 + 18*d*n4 - 8*n4^2)*
     j[p4, 0, 0, -1, n4, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1])/
    (2*(-2 + d)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 4*n4^2)) + 
   ((-12 + 22*d - 9*d^2 - 24*n4 + 18*d*n4 - 8*n4^2)*
     j[p4, 0, 0, -1, n4, 0, 0, 0, 0, 1, 1, 0, 2, 1, 1])/
    (2*(-2 + d)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 4*n4^2)) + 
   ((16 - 22*d + 8*d^2 + 16*n4 - 14*d*n4 + 8*n4^2)*j[p4, 0, 0, -1, n4, 0, 0, 
      0, 0, 1, 1, 1, 1, 2, 0])/((-2 + d)*(d - 2*n4)*(-6 + 3*d - 2*n4)) + 
   ((-92 + 132*d - 61*d^2 + 9*d^3 - 28*n4 + 10*d*n4 + 3*d^2*n4 + 24*n4^2 - 
      18*d*n4^2 + 8*n4^3)*j[p4, 0, 0, -1, n4, 0, 0, 0, 0, 1, 2, 0, 1, 1, 1])/
    (2*(-2 + d)*(-1 + d - n4)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 
      4*n4^2)) + ((-160*n4 + 328*d*n4 - 286*d^2*n4 + 133*d^3*n4 - 27*d^4*n4 - 
      88*n4^2 + 272*d*n4^2 - 302*d^2*n4^2 + 105*d^3*n4^2 - 152*n4^3 + 
      380*d*n4^3 - 196*d^2*n4^3 - 176*n4^4 + 164*d*n4^4 - 48*n4^5)*
     j[p4, 0, 0, -1, 1 + n4, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1])/
    (2*(-2 + d)*(d - 2*n4)*(-1 + d - n4)*(30 - 33*d + 9*d^2 + 22*n4 - 
      12*d*n4 + 4*n4^2)) + ((160*n4 - 328*d*n4 + 286*d^2*n4 - 133*d^3*n4 + 
      27*d^4*n4 + 88*n4^2 - 272*d*n4^2 + 302*d^2*n4^2 - 105*d^3*n4^2 + 
      152*n4^3 - 380*d*n4^3 + 196*d^2*n4^3 + 176*n4^4 - 164*d*n4^4 + 48*n4^5)*
     j[p4, 0, 0, -1, 1 + n4, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1])/
    (2*(-2 + d)*(d - 2*n4)*(-1 + d - n4)*(30 - 33*d + 9*d^2 + 22*n4 - 
      12*d*n4 + 4*n4^2)) + ((-160*n4 + 328*d*n4 - 286*d^2*n4 + 133*d^3*n4 - 
      27*d^4*n4 - 88*n4^2 + 272*d*n4^2 - 302*d^2*n4^2 + 105*d^3*n4^2 - 
      152*n4^3 + 380*d*n4^3 - 196*d^2*n4^3 - 176*n4^4 + 164*d*n4^4 - 48*n4^5)*
     j[p4, 0, 0, -1, 1 + n4, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1])/
    (2*(-2 + d)*(d - 2*n4)*(-1 + d - n4)*(30 - 33*d + 9*d^2 + 22*n4 - 
      12*d*n4 + 4*n4^2)) + ((-12 + 22*d - 9*d^2 - 24*n4 + 18*d*n4 - 8*n4^2)*
     j[p4, 0, 0, 0, -1 + n4, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2])/
    (2*(-2 + d)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 4*n4^2)) + 
   ((32 - 44*d + 15*d^2 + 32*n4 - 22*d*n4 + 8*n4^2)*
     j[p4, 0, 0, 0, -1 + n4, 0, 0, 0, 0, 1, 1, 0, 2, 1, 1])/
    (2*(-2 + d)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 4*n4^2)) + 
   ((-32 + 72*d - 52*d^2 + 12*d^3 - 56*n4 + 78*d*n4 - 26*d^2*n4 - 28*n4^2 + 
      18*d*n4^2 - 4*n4^3)*j[p4, 0, 0, 0, -1 + n4, 0, 0, 0, 0, 1, 1, 1, 1, 1, 
      1])/((-1 + n4)*(6 - 3*d + 2*n4)*(-d + 2*n4)) + 
   ((32 - 44*d + 15*d^2 + 32*n4 - 22*d*n4 + 8*n4^2)*
     j[p4, 0, 0, 0, -1 + n4, 0, 0, 0, 0, 1, 1, 2, 0, 1, 1])/
    (2*(-2 + d)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 4*n4^2)) + 
   ((-12 + 22*d - 9*d^2 - 24*n4 + 18*d*n4 - 8*n4^2)*
     j[p4, 0, 0, 0, -1 + n4, 0, 0, 0, 0, 2, 1, 1, 1, 1, 0])/
    (2*(-2 + d)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 4*n4^2)) + 
   ((-8 + 3*d^2 + 16*n4 - 14*d*n4 + 8*n4^2)*j[p4, 0, 0, 0, n4, -1, 0, 0, 0, 
      0, 1, 1, 1, 1, 2])/(2*(-2 + d)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 
      4*n4^2)) + ((-32 + 44*d - 15*d^2 - 32*n4 + 22*d*n4 - 8*n4^2)*
     j[p4, 0, 0, 0, n4, -1, 0, 0, 0, 1, 1, 0, 2, 1, 1])/
    (2*(-2 + d)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 4*n4^2)) + 
   ((18 - 16*d + 3*d^2 + 8*n4 - 2*d*n4)*j[p4, 0, 0, 0, n4, -1, 0, 0, 0, 1, 1, 
      1, 0, 2, 1])/((-2 + d)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 
      4*n4^2)) + ((-32 + 44*d - 15*d^2 - 32*n4 + 22*d*n4 - 8*n4^2)*
     j[p4, 0, 0, 0, n4, -1, 0, 0, 0, 1, 1, 2, 0, 1, 1])/
    (2*(-2 + d)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 4*n4^2)) + 
   ((-8 + 3*d^2 + 16*n4 - 14*d*n4 + 8*n4^2)*j[p4, 0, 0, 0, n4, -1, 0, 0, 0, 
      2, 1, 1, 1, 1, 0])/(2*(-2 + d)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 
      4*n4^2)) + ((-32 + 44*d - 15*d^2 - 32*n4 + 22*d*n4 - 8*n4^2)*
     j[p4, 0, 0, 0, n4, 0, -1, 0, 0, 1, 1, 0, 2, 1, 1])/
    (2*(-2 + d)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 4*n4^2)) + 
   ((-32 + 44*d - 15*d^2 - 32*n4 + 22*d*n4 - 8*n4^2)*
     j[p4, 0, 0, 0, n4, 0, -1, 0, 0, 1, 1, 2, 0, 1, 1])/
    (2*(-2 + d)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 4*n4^2)) + 
   ((16 - 6*d^2 - 28*n4 + 26*d*n4 - 16*n4^2)*j[p4, 0, 0, 0, n4, 0, -1, 0, 0, 
      1, 2, 0, 1, 1, 1])/((-2 + d)*(d - 2*n4)*(-6 + 3*d - 2*n4)) + 
   ((-12 + 22*d - 9*d^2 - 24*n4 + 18*d*n4 - 8*n4^2)*
     j[p4, 0, 0, 0, n4, 0, -1, 0, 0, 1, 2, 1, 0, 1, 1])/
    (2*(-2 + d)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 4*n4^2)) + 
   ((12 - 22*d + 9*d^2 + 24*n4 - 18*d*n4 + 8*n4^2)*j[p4, 0, 0, 0, n4, 0, -1, 
      0, 0, 1, 2, 1, 1, 0, 1])/(2*(-2 + d)*(30 - 33*d + 9*d^2 + 22*n4 - 
      12*d*n4 + 4*n4^2)) + ((160 - 84*d - 82*d^2 + 45*d^3 - 240*n4 + 
      496*d*n4 - 216*d^2*n4 - 320*n4^2 + 244*d*n4^2 - 80*n4^3)*
     j[p4, 0, 0, 0, n4, 0, 0, -1, 0, 0, 2, 1, 1, 1, 1])/
    (2*(-2 + d)*(d - 2*n4)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 4*n4^2)) + 
   ((-8 + 3*d^2 + 16*n4 - 14*d*n4 + 8*n4^2)*j[p4, 0, 0, 0, n4, 0, 0, -1, 0, 
      1, 1, 0, 2, 1, 1])/(2*(-2 + d)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 
      4*n4^2)) + ((-16 + 22*d - 8*d^2 - 16*n4 + 14*d*n4 - 8*n4^2)*
     j[p4, 0, 0, 0, n4, 0, 0, -1, 0, 1, 1, 1, 1, 2, 0])/
    ((-2 + d)*(d - 2*n4)*(-6 + 3*d - 2*n4)) - 
   j[p4, 0, 0, 0, n4, 0, 0, -1, 0, 1, 1, 2, 0, 1, 1]/(-6 + 3*d - 2*n4) + 
   ((92 - 132*d + 61*d^2 - 9*d^3 + 28*n4 - 10*d*n4 - 3*d^2*n4 - 24*n4^2 + 
      18*d*n4^2 - 8*n4^3)*j[p4, 0, 0, 0, n4, 0, 0, -1, 0, 1, 2, 0, 1, 1, 1])/
    (2*(-2 + d)*(-1 + d - n4)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 
      4*n4^2)) + ((-92 + 132*d - 61*d^2 + 9*d^3 - 28*n4 + 10*d*n4 + 
      3*d^2*n4 + 24*n4^2 - 18*d*n4^2 + 8*n4^3)*j[p4, 0, 0, 0, n4, 0, 0, -1, 
      0, 1, 2, 1, 0, 1, 1])/(2*(-2 + d)*(-1 + d - n4)*
     (30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 4*n4^2)) + 
   ((92 - 132*d + 61*d^2 - 9*d^3 + 28*n4 - 10*d*n4 - 3*d^2*n4 - 24*n4^2 + 
      18*d*n4^2 - 8*n4^3)*j[p4, 0, 0, 0, n4, 0, 0, -1, 0, 1, 2, 1, 1, 0, 1])/
    (2*(-2 + d)*(-1 + d - n4)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 
      4*n4^2)) + ((12 - 22*d + 9*d^2 + 24*n4 - 18*d*n4 + 8*n4^2)*
     j[p4, 0, 0, 0, n4, 0, 0, -1, 0, 2, 1, 1, 1, 1, 0])/
    (2*(-2 + d)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 4*n4^2)) + 
   ((12 - 22*d + 9*d^2 + 24*n4 - 18*d*n4 + 8*n4^2)*j[p4, 0, 0, 0, n4, 0, 0, 
      0, -1, 0, 2, 1, 1, 1, 1])/(2*(-2 + d)*(30 - 33*d + 9*d^2 + 22*n4 - 
      12*d*n4 + 4*n4^2)) + ((-18 + 16*d - 3*d^2 - 8*n4 + 2*d*n4)*
     j[p4, 0, 0, 0, n4, 0, 0, 0, -1, 1, 1, 1, 1, 2, 0])/
    ((-2 + d)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 4*n4^2)) + 
   ((-12 + 22*d - 9*d^2 - 24*n4 + 18*d*n4 - 8*n4^2)*
     j[p4, 0, 0, 0, n4, 0, 0, 0, -1, 1, 1, 2, 0, 1, 1])/
    (2*(-2 + d)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 4*n4^2)) + 
   ((92 - 132*d + 61*d^2 - 9*d^3 + 28*n4 - 10*d*n4 - 3*d^2*n4 - 24*n4^2 + 
      18*d*n4^2 - 8*n4^3)*j[p4, 0, 0, 0, n4, 0, 0, 0, -1, 1, 2, 0, 1, 1, 1])/
    (2*(-2 + d)*(-1 + d - n4)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 
      4*n4^2)) + ((12 - 22*d + 9*d^2 + 24*n4 - 18*d*n4 + 8*n4^2)*
     j[p4, 0, 0, 0, n4, 0, 0, 0, -1, 2, 1, 1, 1, 1, 0])/
    (2*(-2 + d)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 4*n4^2)) + 
   ((-480 + 1436*d - 1818*d^2 + 1194*d^3 - 395*d^4 + 51*d^5 - 688*n4 + 
      2080*d*n4 - 2308*d^2*n4 + 1080*d^3*n4 - 175*d^4*n4 - 848*n4^2 + 
      1916*d*n4^2 - 1306*d^2*n4^2 + 262*d^3*n4^2 - 576*n4^3 + 712*d*n4^3 - 
      184*d^2*n4^3 - 128*n4^4 + 48*d*n4^4)*j[p4, 0, 0, 0, n4, 0, 0, 0, 0, 0, 
      1, 1, 1, 1, 1])/(2*(-2 + d)*(d - 2*n4)*(-1 + d - n4)*
     (30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 4*n4^2)) + 
   ((32 - 44*d + 15*d^2 + 32*n4 - 22*d*n4 + 8*n4^2)*
     j[p4, 0, 0, 0, n4, 0, 0, 0, 0, 0, 1, 2, 1, 1, 1])/
    (2*(-2 + d)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 4*n4^2)) + 
   ((12 - 22*d + 9*d^2 + 24*n4 - 18*d*n4 + 8*n4^2)*j[p4, 0, 0, 0, n4, 0, 0, 
      0, 0, 0, 2, 1, 1, 1, 1])/(2*(-2 + d)*(30 - 33*d + 9*d^2 + 22*n4 - 
      12*d*n4 + 4*n4^2)) + ((-160 + 488*d - 552*d^2 + 275*d^3 - 51*d^4 - 
      328*n4 + 830*d*n4 - 670*d^2*n4 + 175*d^3*n4 - 408*n4^2 + 666*d*n4^2 - 
      262*d^2*n4^2 - 240*n4^3 + 184*d*n4^3 - 48*n4^4)*
     j[p4, 0, 0, 0, n4, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1])/
    (2*(d - 2*n4)*(-1 + d - n4)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 
      4*n4^2)) + ((-12 + 22*d - 9*d^2 - 24*n4 + 18*d*n4 - 8*n4^2)*
     j[p4, 0, 0, 0, n4, 0, 0, 0, 0, 1, 0, 2, 1, 1, 1])/
    (2*(-2 + d)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 4*n4^2)) + 
   ((-320 + 1124*d - 1558*d^2 + 1071*d^3 - 368*d^4 + 51*d^5 - 632*n4 + 
      1884*d*n4 - 2044*d^2*n4 + 975*d^3*n4 - 175*d^4*n4 - 744*n4^2 + 
      1580*d*n4^2 - 1110*d^2*n4^2 + 262*d^3*n4^2 - 416*n4^3 + 548*d*n4^3 - 
      184*d^2*n4^3 - 80*n4^4 + 48*d*n4^4)*j[p4, 0, 0, 0, n4, 0, 0, 0, 0, 1, 
      1, 0, 1, 1, 1])/(2*(-2 + d)*(d - 2*n4)*(-1 + d - n4)*
     (30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 4*n4^2)) + 
   ((22 - 33*d + 12*d^2 + 28*n4 - 20*d*n4 + 8*n4^2)*
     j[p4, 0, 0, 0, n4, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1])/
    ((-2 + d)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 4*n4^2)) + 
   ((8 - 5*d - 4*n4 + 5*d*n4 - 4*n4^2)*j[p4, 0, 0, 0, n4, 0, 0, 0, 0, 1, 1, 
      1, 1, 0, 1])/((-2 + d)*(-6 + 3*d - 2*n4)*(-1 + d - n4)) + 
   ((8 - 3*d^2 - 16*n4 + 14*d*n4 - 8*n4^2)*j[p4, 0, 0, 0, n4, 0, 0, 0, 0, 1, 
      1, 1, 1, 0, 2])/(2*(-2 + d)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 
      4*n4^2)) + ((160 + 96*d - 660*d^2 + 615*d^3 - 208*d^4 + 21*d^5 - 
      920*n4 + 2528*d*n4 - 2314*d^2*n4 + 809*d^3*n4 - 77*d^4*n4 - 1096*n4^2 + 
      1732*d*n4^2 - 754*d^2*n4^2 + 54*d^3*n4^2 - 320*n4^3 + 212*d*n4^3 + 
      16*d^2*n4^3 - 16*n4^4 - 16*d*n4^4)*j[p4, 0, 0, 0, n4, 0, 0, 0, 0, 1, 1, 
      1, 1, 1, 0])/(2*(-2 + d)*(d - 2*n4)*(-1 + d - n4)*
     (30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 4*n4^2)) + 
   ((7 - 4*d + 3*n4)*j[p4, 0, 0, 0, n4, 0, 0, 0, 0, 1, 1, 1, 1, 2, 0])/
    ((-6 + 3*d - 2*n4)*(-1 + d - n4)) + 
   ((-8 + 3*d^2 + 16*n4 - 14*d*n4 + 8*n4^2)*j[p4, 0, 0, 0, n4, 0, 0, 0, 0, 1, 
      1, 1, 2, 0, 1])/(2*(-2 + d)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 
      4*n4^2)) + ((32 - 44*d + 15*d^2 + 32*n4 - 22*d*n4 + 8*n4^2)*
     j[p4, 0, 0, 0, n4, 0, 0, 0, 0, 1, 1, 1, 2, 1, 0])/
    (2*(-2 + d)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 4*n4^2)) + 
   ((92 - 132*d + 61*d^2 - 9*d^3 + 28*n4 - 10*d*n4 - 3*d^2*n4 - 24*n4^2 + 
      18*d*n4^2 - 8*n4^3)*j[p4, 0, 0, 0, n4, 0, 0, 0, 0, 1, 2, 0, 1, 1, 1])/
    (2*(-2 + d)*(-1 + d - n4)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 
      4*n4^2)) + ((12 - 22*d + 9*d^2 + 24*n4 - 18*d*n4 + 8*n4^2)*
     j[p4, 0, 0, 0, n4, 0, 0, 0, 0, 2, 0, 1, 1, 1, 1])/
    (2*(-2 + d)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 4*n4^2)) + 
   ((-12 + 22*d - 9*d^2 - 24*n4 + 18*d*n4 - 8*n4^2)*
     j[p4, 0, 0, 0, n4, 0, 0, 0, 0, 2, 1, 0, 1, 1, 1])/
    (2*(-2 + d)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 4*n4^2)) + 
   ((-52*n4 + 76*d*n4 - 27*d^2*n4 - 80*n4^2 + 54*d*n4^2 - 24*n4^3)*
     j[p4, 0, 0, 0, 1 + n4, -1, 0, 0, 0, 0, 1, 1, 1, 1, 1])/
    (2*(-2 + d)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 4*n4^2)) + 
   ((52*n4 - 76*d*n4 + 27*d^2*n4 + 80*n4^2 - 54*d*n4^2 + 24*n4^3)*
     j[p4, 0, 0, 0, 1 + n4, -1, 0, 0, 0, 1, 0, 1, 1, 1, 1])/
    (2*(-2 + d)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 4*n4^2)) + 
   ((-52*n4 + 76*d*n4 - 27*d^2*n4 - 80*n4^2 + 54*d*n4^2 - 24*n4^3)*
     j[p4, 0, 0, 0, 1 + n4, -1, 0, 0, 0, 1, 1, 0, 1, 1, 1])/
    (2*(-2 + d)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 4*n4^2)) + 
   ((-80*n4 + 156*d*n4 - 113*d^2*n4 + 34*d^3*n4 - 3*d^4*n4 - 28*n4^2 + 
      36*d*n4^2 - 7*d^2*n4^2 - 4*d^3*n4^2 + 4*n4^3 - 12*d*n4^3 + 
      10*d^2*n4^3 - 4*d*n4^4)*j[p4, 0, 0, 0, 1 + n4, -1, 0, 0, 0, 1, 1, 1, 1, 
      1, 0])/((-2 + d)*(d - 2*n4)*(-1 + d - n4)*(30 - 33*d + 9*d^2 + 22*n4 - 
      12*d*n4 + 4*n4^2)) + ((160*n4 - 292*d*n4 + 218*d^2*n4 - 95*d^3*n4 + 
      21*d^4*n4 + 16*n4^2 - 84*d*n4^2 + 174*d^2*n4^2 - 83*d^3*n4^2 + 
      48*n4^3 - 260*d*n4^3 + 172*d^2*n4^3 + 144*n4^4 - 156*d*n4^4 + 48*n4^5)*
     j[p4, 0, 0, 0, 1 + n4, 0, -1, 0, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-2 + d)*(d - 2*n4)*(-1 + d - n4)*(30 - 33*d + 9*d^2 + 22*n4 - 
      12*d*n4 + 4*n4^2)) + ((52*n4 - 76*d*n4 + 27*d^2*n4 + 80*n4^2 - 
      54*d*n4^2 + 24*n4^3)*j[p4, 0, 0, 0, 1 + n4, 0, 0, -1, 0, 0, 1, 1, 1, 1, 
      1])/(2*(-2 + d)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 4*n4^2)) + 
   ((-52*n4 + 76*d*n4 - 27*d^2*n4 - 80*n4^2 + 54*d*n4^2 - 24*n4^3)*
     j[p4, 0, 0, 0, 1 + n4, 0, 0, -1, 0, 1, 0, 1, 1, 1, 1])/
    (2*(-2 + d)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 4*n4^2)) + 
   ((52*n4 - 76*d*n4 + 27*d^2*n4 + 80*n4^2 - 54*d*n4^2 + 24*n4^3)*
     j[p4, 0, 0, 0, 1 + n4, 0, 0, -1, 0, 1, 1, 0, 1, 1, 1])/
    (2*(-2 + d)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 4*n4^2)) + 
   ((320*n4 - 640*d*n4 + 512*d^2*n4 - 201*d^3*n4 + 33*d^4*n4 + 144*n4^2 - 
      344*d*n4^2 + 316*d^2*n4^2 - 97*d^3*n4^2 + 144*n4^3 - 356*d*n4^3 + 
      176*d^2*n4^3 + 176*n4^4 - 156*d*n4^4 + 48*n4^5)*
     j[p4, 0, 0, 0, 1 + n4, 0, 0, -1, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-2 + d)*(d - 2*n4)*(-1 + d - n4)*(30 - 33*d + 9*d^2 + 22*n4 - 
      12*d*n4 + 4*n4^2)) + ((18*n4 - 16*d*n4 + 3*d^2*n4 + 8*n4^2 - 2*d*n4^2)*
     j[p4, 0, 0, 0, 1 + n4, 0, 0, 0, -1, 1, 1, 1, 1, 1, 0])/
    ((-2 + d)*(30 - 33*d + 9*d^2 + 22*n4 - 12*d*n4 + 4*n4^2)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?Positive, (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive, 
    (n8_)?NonPositive, (n9_)?Positive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?Positive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 1 && n13 == 1 && n14 == 1 && 
    n3 == 0 && n4 == 1 && n5 == 0 && n6 == 0 && n7 == 0 && n8 == 0 && 
    n9 == 1 && n2 != 0 -> ((84 - 61*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2)*
     j[p4, -1, 1 + n2, 0, 1, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1])/
    (2*(-2 + d)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((344 - 238*d + 41*d^2 + 436*n2 - 252*d*n2 + 35*d^2*n2 + 124*n2^2 - 
      38*d*n2^2 + 8*n2^3)*j[p4, -1, 1 + n2, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 
      1])/(2*(-5 + 2*d - n2)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((-140 + 91*d - 15*d^2 - 66*n2 + 21*d*n2 - 6*n2^2)*
     j[p4, -1, 1 + n2, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 2, 0])/
    (2*(-2 + d)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((84 - 61*d + 11*d^2 + 30*n2 - 11*d*n2 + 2*n2^2)*
     j[p4, -1, 1 + n2, 0, 1, 0, 0, 0, 0, 1, 2, 0, 1, 1, 1])/
    (2*(-2 + d)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((76 - 55*d + 10*d^2 + 26*n2 - 9*d*n2 + 2*n2^2)*j[p4, -1, 1 + n2, 0, 1, 0, 
      0, 0, 0, 1, 2, 1, 0, 1, 1])/(2*(-2 + d)*(48 - 34*d + 6*d^2 + 20*n2 - 
      7*d*n2 + 2*n2^2)) + ((-76 + 55*d - 10*d^2 - 26*n2 + 9*d*n2 - 2*n2^2)*
     j[p4, -1, 1 + n2, 0, 1, 0, 0, 0, 0, 1, 2, 1, 1, 0, 1])/
    (2*(-2 + d)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((164 - 169*d + 59*d^2 - 7*d^3 + 114*n2 - 74*d*n2 + 12*d^2*n2 + 28*n2^2 - 
      9*d*n2^2 + 2*n2^3)*j[p4, -1, 1 + n2, 0, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 
      0])/((-2 + d)*(-5 + 2*d - n2)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 
      2*n2^2)) + ((4 - 13*d + 4*d^2 - 14*n2 - 8*d*n2 + 4*d^2*n2 - 20*n2^2 + 
      5*d*n2^2 - 2*n2^3)*j[p4, -1, 2 + n2, -1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 
      1])/((-2 + d)*(-6 + 2*d - n2)*(-5 + 2*d - n2)) + 
   ((-20 + 7*d - 22*n2 + 7*d*n2 - 2*n2^2)*j[p4, -1, 2 + n2, 0, 1, -1, 0, 0, 
      0, 1, 1, 1, 1, 1, 1])/(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2) + 
   ((-120 + 82*d - 14*d^2 - 172*n2 + 100*d*n2 - 14*d^2*n2 - 56*n2^2 + 
      18*d*n2^2 - 4*n2^3)*j[p4, -1, 2 + n2, 0, 1, 0, -1, 0, 0, 1, 1, 1, 1, 1, 
      1])/((-2 + d)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((-316 + 225*d - 40*d^2 - 438*n2 + 268*d*n2 - 40*d^2*n2 - 132*n2^2 + 
      43*d*n2^2 - 10*n2^3)*j[p4, -1, 2 + n2, 0, 1, 0, 0, -1, 0, 1, 1, 1, 1, 
      1, 1])/((-5 + 2*d - n2)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 
      2*n2^2)) + ((-168 + 134*d - 32*d^2 + 2*d^3 - 364*n2 + 254*d*n2 - 
      50*d^2*n2 + 2*d^3*n2 - 252*n2^2 + 138*d*n2^2 - 18*d^2*n2^2 - 60*n2^3 + 
      18*d*n2^3 - 4*n2^4)*j[p4, -1, 2 + n2, 0, 1, 0, 0, 0, -1, 1, 1, 1, 1, 1, 
      1])/((-2 + d)*(-5 + 2*d - n2)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 
      2*n2^2)) + ((108 - 75*d + 13*d^2 + 154*n2 - 91*d*n2 + 13*d^2*n2 + 
      50*n2^2 - 16*d*n2^2 + 4*n2^3)*j[p4, -1, 2 + n2, 0, 1, 0, 0, 0, 0, 1, 1, 
      1, 0, 1, 1])/((-5 + 2*d - n2)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 
      2*n2^2)) + ((-216 + 150*d - 26*d^2 - 308*n2 + 182*d*n2 - 26*d^2*n2 - 
      100*n2^2 + 32*d*n2^2 - 8*n2^3)*j[p4, -1, 2 + n2, 0, 1, 0, 0, 0, 0, 1, 
      1, 1, 1, 0, 1])/((-5 + 2*d - n2)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 
      2*n2^2)) + ((4 - d + 2*n2)*j[p4, 0, n2, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 
      1, 2])/(2*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((4 - d + 2*n2)*j[p4, 0, n2, 0, 1, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1])/
    (48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2) + 
   ((-88 + 62*d - 11*d^2 - 32*n2 + 11*d*n2 - 2*n2^2)*
     j[p4, 0, n2, 0, 1, 0, 0, 0, 0, 1, 2, 0, 1, 1, 1])/
    ((-5 + 2*d - n2)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((-76 + 55*d - 10*d^2 - 26*n2 + 9*d*n2 - 2*n2^2)*
     j[p4, 0, n2, 0, 1, 0, 0, 0, 0, 1, 2, 1, 0, 1, 1])/
    (2*(-2 + d)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((76 - 55*d + 10*d^2 + 26*n2 - 9*d*n2 + 2*n2^2)*j[p4, 0, n2, 0, 1, 0, 0, 
      0, 0, 1, 2, 1, 1, 0, 1])/(2*(-2 + d)*(48 - 34*d + 6*d^2 + 20*n2 - 
      7*d*n2 + 2*n2^2)) + ((4 - d + 2*n2)*j[p4, 0, n2, 0, 1, 0, 0, 0, 0, 2, 
      1, 1, 1, 1, 0])/(2*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((-164 + 169*d - 59*d^2 + 7*d^3 - 114*n2 + 74*d*n2 - 12*d^2*n2 - 28*n2^2 + 
      9*d*n2^2 - 2*n2^3)*j[p4, 0, n2, 0, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0])/
    ((-2 + d)*(-5 + 2*d - n2)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 
      2*n2^2)) + ((68 - 49*d + 9*d^2 + 22*n2 - 7*d*n2 + 2*n2^2)*
     j[p4, 0, 1 + n2, -1, 1, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1])/
    (2*(-2 + d)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((-36 + 21*d - 3*d^2 - 22*n2 + 7*d*n2 - 2*n2^2)*j[p4, 0, 1 + n2, -1, 1, 0, 
      0, 0, 0, 1, 1, 1, 0, 2, 1])/(2*(-2 + d)*(48 - 34*d + 6*d^2 + 20*n2 - 
      7*d*n2 + 2*n2^2)) + ((-36 + 21*d - 3*d^2 - 22*n2 + 7*d*n2 - 2*n2^2)*
     j[p4, 0, 1 + n2, -1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 2, 0])/
    (2*(-2 + d)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((-68 + 49*d - 9*d^2 - 106*n2 + 68*d*n2 - 11*d^2*n2 - 32*n2^2 + 
      11*d*n2^2 - 2*n2^3)*j[p4, 0, 1 + n2, -1, 1, 0, 0, 0, 0, 1, 2, 0, 1, 1, 
      1])/(2*(-2 + d)*(-5 + 2*d - n2)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 
      2*n2^2)) + ((-164 + 169*d - 59*d^2 + 7*d^3 - 114*n2 + 74*d*n2 - 
      12*d^2*n2 - 28*n2^2 + 9*d*n2^2 - 2*n2^3)*j[p4, 0, 1 + n2, -1, 2, 0, 0, 
      0, 0, 0, 1, 1, 1, 1, 1])/((-2 + d)*(-5 + 2*d - n2)*
     (48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((164 - 169*d + 59*d^2 - 7*d^3 + 114*n2 - 74*d*n2 + 12*d^2*n2 + 28*n2^2 - 
      9*d*n2^2 + 2*n2^3)*j[p4, 0, 1 + n2, -1, 2, 0, 0, 0, 0, 1, 0, 1, 1, 1, 
      1])/((-2 + d)*(-5 + 2*d - n2)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 
      2*n2^2)) + ((-164 + 169*d - 59*d^2 + 7*d^3 - 114*n2 + 74*d*n2 - 
      12*d^2*n2 - 28*n2^2 + 9*d*n2^2 - 2*n2^3)*j[p4, 0, 1 + n2, -1, 2, 0, 0, 
      0, 0, 1, 1, 0, 1, 1, 1])/((-2 + d)*(-5 + 2*d - n2)*
     (48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((4 - d + 2*n2)*j[p4, 0, 1 + n2, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2])/
    (2*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((4 - d + 2*n2)*j[p4, 0, 1 + n2, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1])/
    (2*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((-4 + d - 2*n2)*j[p4, 0, 1 + n2, 0, 1, -1, 0, 0, 0, 0, 1, 1, 1, 1, 2])/
    (2*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((-44 + 27*d - 4*d^2 - 26*n2 + 9*d*n2 - 2*n2^2)*j[p4, 0, 1 + n2, 0, 1, -1, 
      0, 0, 0, 1, 1, 1, 0, 2, 1])/(2*(-2 + d)*(48 - 34*d + 6*d^2 + 20*n2 - 
      7*d*n2 + 2*n2^2)) + ((-4 + d - 2*n2)*j[p4, 0, 1 + n2, 0, 1, -1, 0, 0, 
      0, 2, 1, 1, 1, 1, 0])/(2*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 
      2*n2^2)) + ((-4 + d - 2*n2)*j[p4, 0, 1 + n2, 0, 1, 0, -1, 0, 0, 0, 1, 
      1, 1, 1, 2])/(2*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((4 - d + 2*n2)*j[p4, 0, 1 + n2, 0, 1, 0, -1, 0, 0, 1, 2, 0, 1, 1, 1])/
    (2*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((68 - 49*d + 9*d^2 + 22*n2 - 7*d*n2 + 2*n2^2)*j[p4, 0, 1 + n2, 0, 1, 0, 
      -1, 0, 0, 1, 2, 1, 0, 1, 1])/(2*(-2 + d)*(48 - 34*d + 6*d^2 + 20*n2 - 
      7*d*n2 + 2*n2^2)) + ((-68 + 49*d - 9*d^2 - 22*n2 + 7*d*n2 - 2*n2^2)*
     j[p4, 0, 1 + n2, 0, 1, 0, -1, 0, 0, 1, 2, 1, 1, 0, 1])/
    (2*(-2 + d)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((-4 + d - 2*n2)*j[p4, 0, 1 + n2, 0, 1, 0, -1, 0, 0, 2, 1, 1, 1, 1, 0])/
    (2*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((-4 + d - 2*n2)*j[p4, 0, 1 + n2, 0, 1, 0, 0, -1, 0, 0, 1, 1, 1, 1, 2])/
    (2*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((-60 + 43*d - 8*d^2 - 18*n2 + 5*d*n2 - 2*n2^2)*j[p4, 0, 1 + n2, 0, 1, 0, 
      0, -1, 0, 0, 2, 1, 1, 1, 1])/(2*(-2 + d)*(48 - 34*d + 6*d^2 + 20*n2 - 
      7*d*n2 + 2*n2^2)) + ((36 - 21*d + 3*d^2 + 22*n2 - 7*d*n2 + 2*n2^2)*
     j[p4, 0, 1 + n2, 0, 1, 0, 0, -1, 0, 1, 1, 1, 0, 2, 1])/
    (2*(-2 + d)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((36 - 21*d + 3*d^2 + 22*n2 - 7*d*n2 + 2*n2^2)*j[p4, 0, 1 + n2, 0, 1, 0, 
      0, -1, 0, 1, 1, 1, 1, 2, 0])/(2*(-2 + d)*(48 - 34*d + 6*d^2 + 20*n2 - 
      7*d*n2 + 2*n2^2)) + ((68 - 49*d + 9*d^2 + 106*n2 - 68*d*n2 + 
      11*d^2*n2 + 32*n2^2 - 11*d*n2^2 + 2*n2^3)*j[p4, 0, 1 + n2, 0, 1, 0, 0, 
      -1, 0, 1, 2, 0, 1, 1, 1])/(2*(-2 + d)*(-5 + 2*d - n2)*
     (48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((-68 + 49*d - 9*d^2 - 106*n2 + 68*d*n2 - 11*d^2*n2 - 32*n2^2 + 
      11*d*n2^2 - 2*n2^3)*j[p4, 0, 1 + n2, 0, 1, 0, 0, -1, 0, 1, 2, 1, 0, 1, 
      1])/(2*(-2 + d)*(-5 + 2*d - n2)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 
      2*n2^2)) + ((68 - 49*d + 9*d^2 + 106*n2 - 68*d*n2 + 11*d^2*n2 + 
      32*n2^2 - 11*d*n2^2 + 2*n2^3)*j[p4, 0, 1 + n2, 0, 1, 0, 0, -1, 0, 1, 2, 
      1, 1, 0, 1])/(2*(-2 + d)*(-5 + 2*d - n2)*(48 - 34*d + 6*d^2 + 20*n2 - 
      7*d*n2 + 2*n2^2)) + ((-4 + d - 2*n2)*j[p4, 0, 1 + n2, 0, 1, 0, 0, -1, 
      0, 2, 1, 1, 1, 1, 0])/(2*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 
      2*n2^2)) + ((-4 + d - 2*n2)*j[p4, 0, 1 + n2, 0, 1, 0, 0, 0, -1, 0, 1, 
      1, 1, 1, 2])/(2*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((-68 + 49*d - 9*d^2 - 22*n2 + 7*d*n2 - 2*n2^2)*j[p4, 0, 1 + n2, 0, 1, 0, 
      0, 0, -1, 0, 2, 1, 1, 1, 1])/(2*(-2 + d)*(48 - 34*d + 6*d^2 + 20*n2 - 
      7*d*n2 + 2*n2^2)) + ((44 - 27*d + 4*d^2 + 26*n2 - 9*d*n2 + 2*n2^2)*
     j[p4, 0, 1 + n2, 0, 1, 0, 0, 0, -1, 1, 1, 1, 1, 2, 0])/
    (2*(-2 + d)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((68 - 49*d + 9*d^2 + 106*n2 - 68*d*n2 + 11*d^2*n2 + 32*n2^2 - 11*d*n2^2 + 
      2*n2^3)*j[p4, 0, 1 + n2, 0, 1, 0, 0, 0, -1, 1, 2, 0, 1, 1, 1])/
    (2*(-2 + d)*(-5 + 2*d - n2)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 
      2*n2^2)) + ((-4 + d - 2*n2)*j[p4, 0, 1 + n2, 0, 1, 0, 0, 0, -1, 2, 1, 
      1, 1, 1, 0])/(2*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((-68 + 49*d - 9*d^2 - 22*n2 + 7*d*n2 - 2*n2^2)*j[p4, 0, 1 + n2, 0, 1, 0, 
      0, 0, 0, 0, 2, 1, 1, 1, 1])/(2*(-2 + d)*(48 - 34*d + 6*d^2 + 20*n2 - 
      7*d*n2 + 2*n2^2)) + ((-236 + 163*d - 28*d^2 - 126*n2 + 50*d*n2 - 
      2*d^2*n2 - 24*n2^2 + 5*d*n2^2 - 2*n2^3)*j[p4, 0, 1 + n2, 0, 1, 0, 0, 0, 
      0, 1, 0, 1, 1, 1, 1])/(2*(-5 + 2*d - n2)*(48 - 34*d + 6*d^2 + 20*n2 - 
      7*d*n2 + 2*n2^2)) + ((108 - 75*d + 13*d^2 + 46*n2 - 16*d*n2 + 4*n2^2)*
     j[p4, 0, 1 + n2, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1])/
    ((-5 + 2*d - n2)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((-68 + 49*d - 9*d^2 + 286*n2 - 402*d*n2 + 174*d^2*n2 - 24*d^3*n2 + 
      124*n2^2 - 121*d*n2^2 + 27*d^2*n2^2 + 10*n2^3 - 6*d*n2^3)*
     j[p4, 0, 1 + n2, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1])/
    (2*(-2 + d)*(-5 + 2*d - n2)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 
      2*n2^2)) + ((4 - d + 2*n2)*j[p4, 0, 1 + n2, 0, 1, 0, 0, 0, 0, 1, 1, 1, 
      0, 1, 2])/(2*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((-52 + 89*d - 42*d^2 + 6*d^3 - 762*n2 + 944*d*n2 - 374*d^2*n2 + 
      48*d^3*n2 - 292*n2^2 + 259*d*n2^2 - 54*d^2*n2^2 - 22*n2^3 + 12*d*n2^3)*
     j[p4, 0, 1 + n2, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1])/
    (2*(-2 + d)*(-5 + 2*d - n2)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 
      2*n2^2)) + ((124 - 79*d + 13*d^2 + 58*n2 - 17*d*n2 + 6*n2^2)*
     j[p4, 0, 1 + n2, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-2 + d)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((-492 + 467*d - 146*d^2 + 15*d^3 - 422*n2 + 276*d*n2 - 45*d^2*n2 - 
      100*n2^2 + 33*d*n2^2 - 6*n2^3)*j[p4, 0, 1 + n2, 0, 1, 0, 0, 0, 0, 1, 1, 
      1, 1, 1, 1])/((-5 + 2*d - n2)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 
      2*n2^2)) + ((140 - 91*d + 15*d^2 + 66*n2 - 21*d*n2 + 6*n2^2)*
     j[p4, 0, 1 + n2, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 2, 0])/
    (2*(-2 + d)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((68 - 49*d + 9*d^2 + 106*n2 - 68*d*n2 + 11*d^2*n2 + 32*n2^2 - 11*d*n2^2 + 
      2*n2^3)*j[p4, 0, 1 + n2, 0, 1, 0, 0, 0, 0, 1, 2, 0, 1, 1, 1])/
    (2*(-2 + d)*(-5 + 2*d - n2)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 
      2*n2^2)) + ((4 - d + 2*n2)*j[p4, 0, 1 + n2, 0, 1, 0, 0, 0, 0, 2, 1, 0, 
      1, 1, 1])/(2*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((144 - 104*d + 19*d^2 + 48*n2 - 16*d*n2 + 4*n2^2)*
     j[p4, 0, 1 + n2, 0, 2, -1, 0, 0, 0, 0, 1, 1, 1, 1, 1])/
    (2*(-2 + d)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((-144 + 104*d - 19*d^2 - 48*n2 + 16*d*n2 - 4*n2^2)*
     j[p4, 0, 1 + n2, 0, 2, -1, 0, 0, 0, 1, 0, 1, 1, 1, 1])/
    (2*(-2 + d)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((144 - 104*d + 19*d^2 + 48*n2 - 16*d*n2 + 4*n2^2)*
     j[p4, 0, 1 + n2, 0, 2, -1, 0, 0, 0, 1, 1, 0, 1, 1, 1])/
    (2*(-2 + d)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((-96 + 64*d - 11*d^2 - 40*n2 + 12*d*n2 - 4*n2^2)*
     j[p4, 0, 1 + n2, 0, 2, -1, 0, 0, 0, 1, 1, 1, 1, 1, 0])/
    (2*(-2 + d)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((4 - d + 2*n2)*j[p4, 0, 1 + n2, 0, 2, 0, -1, 0, 0, 0, 1, 1, 1, 1, 1])/
    (2*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((-4 + d - 2*n2)*j[p4, 0, 1 + n2, 0, 2, 0, -1, 0, 0, 1, 0, 1, 1, 1, 1])/
    (2*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((4 - d + 2*n2)*j[p4, 0, 1 + n2, 0, 2, 0, -1, 0, 0, 1, 1, 0, 1, 1, 1])/
    (2*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((12 - 5*d - 2*n2)*j[p4, 0, 1 + n2, 0, 2, 0, -1, 0, 0, 1, 1, 1, 1, 1, 0])/
    (2*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((-144 + 104*d - 19*d^2 - 48*n2 + 16*d*n2 - 4*n2^2)*
     j[p4, 0, 1 + n2, 0, 2, 0, 0, -1, 0, 0, 1, 1, 1, 1, 1])/
    (2*(-2 + d)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((144 - 104*d + 19*d^2 + 48*n2 - 16*d*n2 + 4*n2^2)*
     j[p4, 0, 1 + n2, 0, 2, 0, 0, -1, 0, 1, 0, 1, 1, 1, 1])/
    (2*(-2 + d)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((-144 + 104*d - 19*d^2 - 48*n2 + 16*d*n2 - 4*n2^2)*
     j[p4, 0, 1 + n2, 0, 2, 0, 0, -1, 0, 1, 1, 0, 1, 1, 1])/
    (2*(-2 + d)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((76 - 49*d + 8*d^2 + 34*n2 - 11*d*n2 + 2*n2^2)*j[p4, 0, 1 + n2, 0, 2, 0, 
      0, -1, 0, 1, 1, 1, 1, 1, 0])/(2*(-5 + 2*d - n2)*
     (48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((-4 + d - 2*n2)*j[p4, 0, 1 + n2, 0, 2, 0, 0, 0, -1, 0, 1, 1, 1, 1, 1])/
    (2*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((4 - d + 2*n2)*j[p4, 0, 1 + n2, 0, 2, 0, 0, 0, -1, 1, 0, 1, 1, 1, 1])/
    (2*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((-4 + d - 2*n2)*j[p4, 0, 1 + n2, 0, 2, 0, 0, 0, -1, 1, 1, 0, 1, 1, 1])/
    (2*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((208 - 180*d + 49*d^2 - 4*d^3 + 224*n2 - 144*d*n2 + 23*d^2*n2 + 60*n2^2 - 
      20*d*n2^2 + 4*n2^3)*j[p4, 0, 1 + n2, 0, 2, 0, 0, 0, -1, 1, 1, 1, 1, 1, 
      0])/(2*(-2 + d)*(-5 + 2*d - n2)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 
      2*n2^2)) + ((-184 + 142*d - 30*d^2 + d^3 - 412*n2 + 288*d*n2 - 
      53*d^2*n2 + d^3*n2 - 288*n2^2 + 166*d*n2^2 - 23*d^2*n2^2 - 64*n2^3 + 
      20*d*n2^3 - 4*n2^4)*j[p4, 0, 2 + n2, -1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 
      1])/((-2 + d)*(-5 + 2*d - n2)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 
      2*n2^2)) + ((72 - 42*d + 6*d^2 + 116*n2 - 56*d*n2 + 6*d^2*n2 + 
      48*n2^2 - 14*d*n2^2 + 4*n2^3)*j[p4, 0, 2 + n2, 0, 1, -1, 0, 0, 0, 1, 0, 
      1, 1, 1, 1])/((-2 + d)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((-52 + 35*d - 6*d^2 - 74*n2 + 42*d*n2 - 6*d^2*n2 - 24*n2^2 + 7*d*n2^2 - 
      2*n2^3)*j[p4, 0, 2 + n2, 0, 1, -1, 0, 0, 0, 1, 1, 1, 0, 1, 1])/
    ((-2 + d)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((104 - 70*d + 12*d^2 + 148*n2 - 84*d*n2 + 12*d^2*n2 + 48*n2^2 - 
      14*d*n2^2 + 4*n2^3)*j[p4, 0, 2 + n2, 0, 1, -1, 0, 0, 0, 1, 1, 1, 1, 0, 
      1])/((-2 + d)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((-104 + 70*d - 12*d^2 - 148*n2 + 84*d*n2 - 12*d^2*n2 - 48*n2^2 + 
      14*d*n2^2 - 4*n2^3)*j[p4, 0, 2 + n2, 0, 1, -1, 0, 0, 0, 1, 1, 1, 1, 1, 
      1])/((-2 + d)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((-4 + d - 6*n2 + d*n2 - 2*n2^2)*j[p4, 0, 2 + n2, 0, 1, 0, -1, 0, 0, 1, 0, 
      1, 1, 1, 1])/(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2) + 
   ((52 - 35*d + 6*d^2 + 74*n2 - 42*d*n2 + 6*d^2*n2 + 24*n2^2 - 7*d*n2^2 + 
      2*n2^3)*j[p4, 0, 2 + n2, 0, 1, 0, -1, 0, 0, 1, 1, 1, 0, 1, 1])/
    ((-2 + d)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((-104 + 70*d - 12*d^2 - 148*n2 + 84*d*n2 - 12*d^2*n2 - 48*n2^2 + 
      14*d*n2^2 - 4*n2^3)*j[p4, 0, 2 + n2, 0, 1, 0, -1, 0, 0, 1, 1, 1, 1, 0, 
      1])/((-2 + d)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((104 - 70*d + 12*d^2 + 148*n2 - 84*d*n2 + 12*d^2*n2 + 48*n2^2 - 
      14*d*n2^2 + 4*n2^3)*j[p4, 0, 2 + n2, 0, 1, 0, -1, 0, 0, 1, 1, 1, 1, 1, 
      1])/((-2 + d)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 2*n2^2)) + 
   ((4 - 13*d + 4*d^2 - 14*n2 - 8*d*n2 + 4*d^2*n2 - 20*n2^2 + 5*d*n2^2 - 
      2*n2^3)*j[p4, 0, 2 + n2, 0, 1, 0, 0, -1, 0, 1, 0, 1, 1, 1, 1])/
    ((-2 + d)*(-6 + 2*d - n2)*(-5 + 2*d - n2)) + 
   ((-124 + 113*d - 33*d^2 + 3*d^3 - 250*n2 + 197*d*n2 - 47*d^2*n2 + 
      3*d^3*n2 - 158*n2^2 + 95*d*n2^2 - 14*d^2*n2^2 - 34*n2^3 + 11*d*n2^3 - 
      2*n2^4)*j[p4, 0, 2 + n2, 0, 1, 0, 0, -1, 0, 1, 1, 1, 0, 1, 1])/
    ((-2 + d)*(-5 + 2*d - n2)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 
      2*n2^2)) + ((248 - 226*d + 66*d^2 - 6*d^3 + 500*n2 - 394*d*n2 + 
      94*d^2*n2 - 6*d^3*n2 + 316*n2^2 - 190*d*n2^2 + 28*d^2*n2^2 + 68*n2^3 - 
      22*d*n2^3 + 4*n2^4)*j[p4, 0, 2 + n2, 0, 1, 0, 0, -1, 0, 1, 1, 1, 1, 0, 
      1])/((-2 + d)*(-5 + 2*d - n2)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 
      2*n2^2)) + ((-208 + 180*d - 49*d^2 + 4*d^3 - 432*n2 + 324*d*n2 - 
      72*d^2*n2 + 4*d^3*n2 - 284*n2^2 + 164*d*n2^2 - 23*d^2*n2^2 - 64*n2^3 + 
      20*d*n2^3 - 4*n2^4)*j[p4, 0, 2 + n2, 0, 1, 0, 0, -1, 0, 1, 1, 1, 1, 1, 
      1])/((-2 + d)*(-5 + 2*d - n2)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 
      2*n2^2)) + ((124 - 113*d + 33*d^2 - 3*d^3 + 250*n2 - 197*d*n2 + 
      47*d^2*n2 - 3*d^3*n2 + 158*n2^2 - 95*d*n2^2 + 14*d^2*n2^2 + 34*n2^3 - 
      11*d*n2^3 + 2*n2^4)*j[p4, 0, 2 + n2, 0, 1, 0, 0, 0, -1, 1, 1, 1, 0, 1, 
      1])/((-2 + d)*(-5 + 2*d - n2)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 
      2*n2^2)) + ((-248 + 226*d - 66*d^2 + 6*d^3 - 500*n2 + 394*d*n2 - 
      94*d^2*n2 + 6*d^3*n2 - 316*n2^2 + 190*d*n2^2 - 28*d^2*n2^2 - 68*n2^3 + 
      22*d*n2^3 - 4*n2^4)*j[p4, 0, 2 + n2, 0, 1, 0, 0, 0, -1, 1, 1, 1, 1, 0, 
      1])/((-2 + d)*(-5 + 2*d - n2)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 
      2*n2^2)) + ((208 - 180*d + 49*d^2 - 4*d^3 + 432*n2 - 324*d*n2 + 
      72*d^2*n2 - 4*d^3*n2 + 284*n2^2 - 164*d*n2^2 + 23*d^2*n2^2 + 64*n2^3 - 
      20*d*n2^3 + 4*n2^4)*j[p4, 0, 2 + n2, 0, 1, 0, 0, 0, -1, 1, 1, 1, 1, 1, 
      1])/((-2 + d)*(-5 + 2*d - n2)*(48 - 34*d + 6*d^2 + 20*n2 - 7*d*n2 + 
      2*n2^2))}
