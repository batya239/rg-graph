{j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n1 == 0 || n13 == 1) -> 
  -((n8*j[p4, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
       -1 + n13, n14])/(-1 + n13)) - 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) - (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, 
      n10, n11, n12, -1 + n13, n14])/(-1 + n13) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) - (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, 
      n10, n11, n12, -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4, 1 + n1, -1 + n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n3*j[p4, 1 + n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4, 1 + n1, n2, -1 + n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + ((-2 - n1 + n13 - n2 + n3)*
     j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) + j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, 
    n11, n12, n13, n14] + (n8*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, 1 + n8, 
      n9, n10, -1 + n11, n12, -1 + n13, n14])/(-1 + n13) - 
   (n8*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, -1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n8*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) + 
   (n5*j[p4, 1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, -1 + n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n5*j[p4, 1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) - 
   (n5*j[p4, 1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n13) - 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, n8, -1 + n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, -1 + n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n13) - 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n2*j[p4, 1 + n1, 1 + n2, -1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4, 1 + n1, 1 + n2, n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4, 1 + n1, 1 + n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4, 1 + n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n2*j[p4, 1 + n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, -1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (2*n2*j[p4, 1 + n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) + 
   ((1 + n1)*j[p4, 2 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) + 
   ((-1 - n1)*j[p4, 2 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n1 == 0 || n8 == 1) -> 
  -((n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
       n13, n14])/(-1 + n8)) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, n13, 
      n14])/(-1 + n8) + (n4*j[p4, 1 + n1, -1 + n2, n3, 1 + n4, n5, n6, n7, 
      -1 + n8, n9, n10, n11, n12, n13, n14])/(-1 + n8) + 
   (n12*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n8) + ((-1 - d + 2*n11 + n12 + n4 + n7 + n8)*
     j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, n13, 
      n14])/(-1 + n8) - (n12*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, -1 + n8, 
      n9, n10, n11, 1 + n12, n13, n14])/(-1 + n8) + 
   j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, n12, n13, 
    n14] - (n7*j[p4, 1 + n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, n9, 
      -1 + n10, n11, n12, n13, n14])/(-1 + n8) + 
   (n7*j[p4, 1 + n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n8) - 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, -1 + n5, n6, n7, -1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n8) - 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, n5, -1 + n6, n7, -1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n8) + 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, -1 + n9, n10, n11, 
      n12, n13, n14])/(-1 + n8) - 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n8) + 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n8) + 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, -1 + n7, -1 + n8, n9, n10, n11, 
      n12, n13, n14])/(-1 + n8) + 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, -2 + n8, n9, n10, n11, n12, 
      n13, n14])/(-1 + n8) - (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, 
      -1 + n8, n9, -1 + n10, n11, n12, n13, n14])/(-1 + n8) + 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n8) - 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n8) + 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      n13, n14])/(-1 + n8), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n6 == 1 || n9 == 0) -> 
  (n4*j[p4, -1 + n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 
      n12, n13, n14])/(-1 + n6) + 
   (n3*j[p4, -1 + n1, n2, 1 + n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 
      n12, n13, n14])/(-1 + n6) - 
   (n2*j[p4, -1 + n1, 1 + n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 
      n12, n13, n14])/(-1 + n6) - 
   (n4*j[p4, n1, -1 + n2, n3, 1 + n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 
      n12, n13, n14])/(-1 + n6) + ((-1 - d + 2*n10 + n2 + n3 + n6 + n7)*
     j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
      n14])/(-1 + n6) + (n7*j[p4, n1, n2, n3, n4, n5, -1 + n6, 1 + n7, n8, 
      1 + n9, -1 + n10, n11, n12, n13, n14])/(-1 + n6) - 
   (n7*j[p4, n1, n2, n3, n4, n5, -1 + n6, 1 + n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n6) + j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 
    1 + n9, -1 + n10, n11, n12, n13, n14] + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, -2 + n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, n14])/(-1 + n6) + (n4*j[p4, n1, n2, n3, 1 + n4, n5, -1 + n6, 
      -1 + n7, n8, 1 + n9, n10, n11, n12, n13, n14])/(-1 + n6) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, n9, n10, n11, n12, n13, 
      n14])/(-1 + n6) + (n4*j[p4, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, 
      1 + n9, -1 + n10, n11, n12, n13, n14])/(-1 + n6) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n6) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, -1 + n6, n7, -1 + n8, 1 + n9, n10, n11, 
      n12, n13, n14])/(-1 + n6) + 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, -1 + n6, n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n6) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n6) + 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 
      -1 + n12, n13, n14])/(-1 + n6) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n6) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, n14])/(-1 + n6) + (n2*j[p4, n1, 1 + n2, n3, n4, n5, -1 + n6, n7, 
      n8, 1 + n9, -1 + n10, n11, n12, n13, n14])/(-1 + n6), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n14 == 1 || n9 == 0) -> 
  (n5*j[p4, -1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n4*j[p4, -1 + n1, n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4, n1, -1 + n2, n3, n4, n5, 1 + n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4, n1, -1 + n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4, n1, n2, -1 + n3, n4, n5, 1 + n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   ((-2 + n14 - n9)*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) + j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 
    1 + n9, n10, n11, n12, n13, n14] + 
   ((1 + n9)*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 2 + n9, n10, n11, n12, 
      n13, -2 + n14])/(-1 + n14) + 
   ((-1 - n9)*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 2 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, -1 + n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, -1 + n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) + (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 
      1 + n9, -1 + n10, n11, n12, n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 1 + n9, n10, n11, -1 + n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 1 + n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14) - (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, 
      n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) - 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n14) + 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14) + (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, 
      n8, 1 + n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) + (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, 
      1 + n9, -1 + n10, n11, n12, n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n12 == 0 || n8 == 1) -> 
  (n4*j[p4, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) + ((-1 - d + n1 + 2*n13 + n3 + n5 + n8)*
     j[p4, n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, n13, 
      n14])/(-1 + n8) + j[p4, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 
    1 + n12, -1 + n13, n14] + 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n8) - 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n8) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, -1 + n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n8) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) + 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n8) - 
   (n2*j[p4, n1, 1 + n2, -1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) + 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, -1 + n7, -1 + n8, n9, n10, n11, 
      1 + n12, n13, n14])/(-1 + n8) + 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, -2 + n8, n9, n10, n11, 1 + n12, 
      n13, n14])/(-1 + n8) - (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, 
      -1 + n8, n9, n10, n11, n12, n13, n14])/(-1 + n8) + 
   (2*n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, -1 + n13, n14])/(-1 + n8) + 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n8) - 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      n13, n14])/(-1 + n8), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n1 == 0 || n11 == 1) -> 
  -((n7*j[p4, 1 + n1, -1 + n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 
       n12, n13, n14])/(-1 + n11)) - 
   (n3*j[p4, 1 + n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n12*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, 
    -1 + n8, n9, n10, n11, n12, n13, n14] + 
   ((-1 - d + n11 + n12 + n4 + n7 + 2*n8)*j[p4, 1 + n1, n2, n3, n4, n5, n6, 
      n7, n8, n9, n10, -1 + n11, n12, n13, n14])/(-1 + n11) - 
   (n12*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n11) + 
   (n7*j[p4, 1 + n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n4*j[p4, 1 + n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (2*n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, 
      -1 + n11, n12, n13, n14])/(-1 + n11) - 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      -1 + n12, n13, n14])/(-1 + n11) + 
   (n3*j[p4, 1 + n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, n12, 
      -1 + n13, n14])/(-1 + n11), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n10 == 1 || n2 == 0) -> j[p4, -1 + n1, 1 + n2, n3, n4, n5, n6, n7, n8, 
    n9, n10, n11, n12, n13, n14] - 
   (n7*j[p4, n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, -1 + n10, n11, n12, n13, 
      n14])/(-1 + n10) - (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, 
      -1 + n10, n11, n12, n13, n14])/(-1 + n10) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, n13, 
      n14])/(-1 + n10) + (n6*j[p4, n1, 1 + n2, n3, n4, -1 + n5, 1 + n6, n7, 
      n8, n9, -1 + n10, n11, n12, n13, n14])/(-1 + n10) + 
   ((-1 + d - n10 - 2*n2 - n3 - n6 - n7)*j[p4, n1, 1 + n2, n3, n4, n5, n6, 
      n7, n8, n9, -1 + n10, n11, n12, n13, n14])/(-1 + n10) + 
   (n7*j[p4, n1, 1 + n2, n3, n4, n5, n6, 1 + n7, -1 + n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n4*j[p4, n1, 1 + n2, n3, 1 + n4, -1 + n5, n6, n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n4*j[p4, n1, 1 + n2, n3, 1 + n4, n5, -1 + n6, n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n4*j[p4, n1, 1 + n2, n3, 1 + n4, n5, n6, -1 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n4*j[p4, n1, 1 + n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (2*n3*j[p4, n1, 1 + n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, -1 + n10, 
      n11, n12, n13, n14])/(-1 + n10) - 
   (n3*j[p4, n1, 1 + n2, 1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, 
      -1 + n12, n13, n14])/(-1 + n10) + 
   (2*n3*j[p4, n1, 1 + n2, 1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, 
      n12, -1 + n13, n14])/(-1 + n10), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n14 == 1 || n4 == 0) -> 
  (n9*j[p4, -1 + n1, n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4, n1, -1 + n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4, n1, -1 + n2, n3, 1 + n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + j[p4, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, 
    n8, n9, n10, n11, n12, n13, n14] - 
   (n6*j[p4, n1, n2, -1 + n3, 1 + n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   ((-1 - n4)*j[p4, n1, n2, -1 + n3, 2 + n4, n5, n6, n7, n8, n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) - (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 
      n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) - 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) + (n9*j[p4, n1, n2, n3, 1 + n4, n5, n6, -1 + n7, 
      n8, 1 + n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) + 
   (n9*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   ((-2 + n14 - n4)*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) + 
   (n9*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, -1 + n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n9*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14) - (n9*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, 
      1 + n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4, n1, n2, n3, 1 + n4, n5, 1 + n6, -1 + n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (2*n6*j[p4, n1, n2, n3, 1 + n4, n5, 1 + n6, n7, -1 + n8, n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4, n1, n2, n3, 1 + n4, n5, 1 + n6, n7, n8, n9, n10, n11, -1 + n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4, n1, n2, n3, 1 + n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4, n1, n2, n3, 1 + n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14) + 
   (n5*j[p4, n1, n2, n3, 1 + n4, 1 + n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n5*j[p4, n1, n2, n3, 1 + n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n14) + 
   (n5*j[p4, n1, n2, n3, 1 + n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, n13, 
      -2 + n14])/(-1 + n14) + ((1 + n4)*j[p4, n1, n2, n3, 2 + n4, n5, n6, n7, 
      n8, n9, n10, n11, n12, n13, -2 + n14])/(-1 + n14), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n13 == 1 || n7 == 0) -> 
  -((n8*j[p4, n1, -1 + n2, n3, n4, n5, n6, 1 + n7, 1 + n8, n9, n10, n11, n12, 
       -1 + n13, n14])/(-1 + n13)) + j[p4, n1, n2, -1 + n3, n4, n5, n6, 
    1 + n7, n8, n9, n10, n11, n12, n13, n14] + 
   (n5*j[p4, n1, n2, n3, -1 + n4, 1 + n5, n6, 1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n8*j[p4, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) + ((1 - n13 - n2 + n3 + n4 - n5 + n8)*
     j[p4, n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) - (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, 
      n10, n11, n12, -1 + n13, n14])/(-1 + n13) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, -1 + n5, n6, 1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) + (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, 
      n10, n11, n12, -1 + n13, n14])/(-1 + n13) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, 1 + n7, n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) + (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, 1 + n7, 
      -1 + n8, n9, n10, n11, n12, -1 + n13, n14])/(-1 + n13) - 
   (n1*j[p4, 1 + n1, -1 + n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, -1 + n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, n12, 
      -1 + n13, n14])/(-1 + n13), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n11 == 1 || n7 == 0) -> 
  (n12*j[p4, n1, -1 + n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   (n8*j[p4, n1, -1 + n2, n3, n4, n5, n6, 1 + n7, 1 + n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n12*j[p4, n1, n2, -1 + n3, n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) - 
   (2*n12*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 1 + n12, 
      n13, n14])/(-1 + n11) - (n8*j[p4, n1, n2, n3, n4, n5, n6, n7, 1 + n8, 
      n9, n10, -1 + n11, n12, n13, n14])/(-1 + n11) - 
   (n12*j[p4, n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + j[p4, n1, n2, n3, n4, n5, n6, 1 + n7, 
    n8, n9, -1 + n10, n11, n12, n13, n14] + 
   ((-1 + d - n11 - n3 - n4 - 2*n7 - n8)*j[p4, n1, n2, n3, n4, n5, n6, 
      1 + n7, n8, n9, n10, -1 + n11, n12, n13, n14])/(-1 + n11) - 
   (n12*j[p4, n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n11) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, -1 + n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, -1 + n11, n12, n13, 
      n14])/(-1 + n11) - (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, 
      n10, -1 + n11, n12, n13, n14])/(-1 + n11) + 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, n12, 
      -1 + n13, n14])/(-1 + n11), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n10 == 1 || n7 == 0) -> 
  -((n6*j[p4, n1, -1 + n2, n3, n4, n5, 1 + n6, 1 + n7, n8, n9, -1 + n10, n11, 
       n12, n13, n14])/(-1 + n10)) - 
   (n6*j[p4, n1, n2, n3, -1 + n4, n5, 1 + n6, 1 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n6*j[p4, n1, n2, n3, n4, -1 + n5, 1 + n6, 1 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + ((-1 + d - n10 - n2 - n3 - n4 - 2*n7)*
     j[p4, n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, -1 + n10, n11, n12, n13, 
      n14])/(-1 + n10) + j[p4, n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, 
    -1 + n11, n12, n13, n14] + 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, 1 + n7, -1 + n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, -1 + n5, n6, 1 + n7, n8, n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, n13, 
      n14])/(-1 + n10) - (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, 
      -1 + n10, n11, n12, n13, n14])/(-1 + n10) + 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, 1 + n7, n8, n9, -1 + n10, n11, n12, 
      -1 + n13, n14])/(-1 + n10) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, n13, 
      n14])/(-1 + n10) + (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, 1 + n7, 
      -1 + n8, n9, -1 + n10, n11, n12, n13, n14])/(-1 + n10), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n14 == 1 || n5 == 0) -> 
  (n9*j[p4, n1, -1 + n2, n3, n4, 1 + n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4, n1, -1 + n2, n3, n4, 1 + n5, 1 + n6, n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - j[p4, n1, n2, -1 + n3, n4, 1 + n5, n6, n7, 
    n8, n9, n10, n11, n12, n13, n14] + j[p4, n1, n2, n3, -1 + n4, 1 + n5, n6, 
    n7, n8, n9, n10, n11, n12, n13, n14] + 
   (n9*j[p4, n1, n2, n3, -1 + n4, 1 + n5, n6, n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4, n1, n2, n3, -1 + n4, 1 + n5, 1 + n6, n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   ((1 + n5)*j[p4, n1, n2, n3, -1 + n4, 2 + n5, n6, n7, n8, n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) - (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 
      n9, n10, n11, n12, n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4, n1, n2, n3, n4, 1 + n5, n6, -1 + n7, n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, -1 + n8, 1 + n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, 
    n9, n10, n11, n12, -1 + n13, n14] + 
   ((-1 + n4 - n5)*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, 1 + n9, -1 + n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n9*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, 1 + n9, n10, -1 + n11, n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4, n1, n2, n3, n4, 1 + n5, 1 + n6, n7, -1 + n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14) + 
   ((-1 - n5)*j[p4, n1, n2, n3, n4, 2 + n5, n6, -1 + n7, n8, n9, n10, n11, 
      n12, n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, 1 + n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      n13, -1 + n14])/(-1 + n14), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n12 == 0 || n13 == 1) -> 
  (n8*j[p4, n1, -1 + n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n5*j[p4, n1, -1 + n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n3*j[p4, n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) - j[p4, n1, n2, -1 + n3, n4, n5, n6, n7, n8, 
    n9, n10, n11, 1 + n12, n13, n14] - 
   (n4*j[p4, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + j[p4, n1, n2, n3, n4, n5, n6, -1 + n7, n8, 
    n9, n10, n11, 1 + n12, n13, n14] - 
   (n8*j[p4, n1, n2, n3, n4, n5, n6, -1 + n7, 1 + n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + j[p4, n1, n2, n3, n4, n5, n6, n7, -1 + n8, 
    n9, n10, n11, 1 + n12, n13, n14] + 
   ((2*n2 - 2*n3)*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 
      1 + n12, -1 + n13, n14])/(-1 + n13) + 
   (n8*j[p4, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) - (n8*j[p4, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, 
      n10, n11, 1 + n12, -2 + n13, n14])/(-1 + n13) - 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, -1 + n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -2 + n13, n14])/(-1 + n13) + 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, -1 + n14])/(-1 + n13) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, -1 + n14])/(-1 + n13) + 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (2*n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 
      1 + n12, -1 + n13, n14])/(-1 + n13) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) + (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, 
      n10, n11, 1 + n12, -2 + n13, n14])/(-1 + n13) + 
   (n2*j[p4, n1, 1 + n2, -1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, -1 + n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) - (2*n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, 
      n10, n11, 1 + n12, -2 + n13, n14])/(-1 + n13) + 
   (n1*j[p4, 1 + n1, -1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -2 + n13, n14])/(-1 + n13) + 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n13), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n11 == 1 || n9 == 0) -> 
  -j[p4, n1, -1 + n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, n11, n12, n13, 
     n14] - (n7*j[p4, n1, -1 + n2, n3, n4, n5, n6, 1 + n7, n8, 1 + n9, n10, 
      -1 + n11, n12, n13, n14])/(-1 + n11) - 
   (n3*j[p4, n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n12*j[p4, n1, n2, -1 + n3, n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) - 
   (n12*j[p4, n1, n2, n3, -1 + n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) - j[p4, n1, n2, n3, -1 + n4, n5, n6, n7, 
    n8, 1 + n9, n10, n11, n12, n13, n14] - 
   (n8*j[p4, n1, n2, n3, -1 + n4, n5, n6, n7, 1 + n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n7*j[p4, n1, n2, n3, -1 + n4, n5, n6, 1 + n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n12*j[p4, n1, n2, n3, n4, -1 + n5, n6, n7, n8, 1 + n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + j[p4, n1, n2, n3, n4, -1 + n5, n6, n7, 
    n8, 1 + n9, n10, n11, n12, n13, n14] + 
   (n7*j[p4, n1, n2, n3, n4, -1 + n5, n6, 1 + n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n12*j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, 
    n8, 1 + n9, n10, n11, n12, n13, n14] + 
   (n8*j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, 1 + n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n12*j[p4, n1, n2, n3, n4, n5, n6, -1 + n7, n8, 1 + n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + j[p4, n1, n2, n3, n4, n5, n6, n7, 
    -1 + n8, 1 + n9, n10, n11, n12, n13, n14] + j[p4, n1, n2, n3, n4, n5, n6, 
    n7, n8, 1 + n9, -1 + n10, n11, n12, n13, n14] + 
   ((n12 - n3 - n4 + n8)*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, 
      -1 + n11, n12, n13, n14])/(-1 + n11) - 
   (n12*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n11) - 
   (n12*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n11) + 
   (n7*j[p4, n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) - 
   (n3*j[p4, n1, n2, 1 + n3, -1 + n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, 1 + n9, n10, -1 + n11, 
      n12, n13, n14])/(-1 + n11) + 
   (2*n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, 1 + n9, n10, 
      -1 + n11, n12, n13, n14])/(-1 + n11) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, 
      -1 + n12, n13, n14])/(-1 + n11) + 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, n12, 
      -1 + n13, n14])/(-1 + n11) + 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, n10, -1 + n11, n12, 
      n13, -1 + n14])/(-1 + n11), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n10 == 1 || n9 == 0) -> 
  (n7*j[p4, n1, -1 + n2, n3, n4, n5, n6, 1 + n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n3*j[p4, n1, -1 + n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n7*j[p4, n1, n2, n3, -1 + n4, n5, n6, 1 + n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n7*j[p4, n1, n2, n3, n4, -1 + n5, n6, 1 + n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, n8, 
    1 + n9, n10, n11, n12, n13, n14] + 
   ((-1 - d + n10 + n2 + n3 + n4 + 2*n6)*j[p4, n1, n2, n3, n4, n5, n6, n7, 
      n8, 1 + n9, -1 + n10, n11, n12, n13, n14])/(-1 + n10) - 
   (n7*j[p4, n1, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n3*j[p4, n1, n2, 1 + n3, -1 + n4, n5, n6, n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, -1 + n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) - 
   (2*n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, 1 + n9, -1 + n10, 
      n11, n12, n13, n14])/(-1 + n10) + 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, -1 + n10, n11, 
      -1 + n12, n13, n14])/(-1 + n10) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, -1 + n10, n11, n12, 
      -1 + n13, n14])/(-1 + n10) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, 1 + n9, -1 + n10, n11, n12, 
      n13, -1 + n14])/(-1 + n10) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, -1 + n5, n6, n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10) + 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, -1 + n10, n11, 
      n12, n13, n14])/(-1 + n10), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n12 == 0 || n14 == 1) -> 
  -j[p4, n1, -1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
     n14] + (n6*j[p4, n1, -1 + n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, 
      1 + n12, n13, -1 + n14])/(-1 + n14) - 
   (n5*j[p4, n1, -1 + n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) - j[p4, n1, n2, -1 + n3, n4, n5, n6, n7, n8, 
    n9, n10, n11, 1 + n12, n13, n14] + 
   (n6*j[p4, n1, n2, -1 + n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n4*j[p4, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) + j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, n8, 
    n9, n10, n11, 1 + n12, n13, n14] + 
   (n9*j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) + j[p4, n1, n2, n3, n4, n5, n6, -1 + n7, n8, 
    n9, n10, n11, 1 + n12, n13, n14] + j[p4, n1, n2, n3, n4, n5, n6, n7, 
    -1 + n8, n9, n10, n11, 1 + n12, n13, n14] + j[p4, n1, n2, n3, n4, n5, n6, 
    n7, n8, n9, n10, n11, 1 + n12, -1 + n13, n14] + 
   ((1 - n14 + n6)*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 
      1 + n12, n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, -1 + n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n9*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, n11, 1 + n12, n13, 
      -2 + n14])/(-1 + n14) + 
   (n9*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 1 + n9, n10, n11, 1 + n12, n13, 
      -1 + n14])/(-1 + n14) - (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, -1 + n7, 
      n8, n9, n10, n11, 1 + n12, n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) + 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, n12, n13, 
      -1 + n14])/(-1 + n14) - (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, 
      n9, n10, n11, 1 + n12, -1 + n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
      -2 + n14])/(-1 + n14) + (n5*j[p4, n1, n2, n3, n4, 1 + n5, -1 + n6, n7, 
      n8, n9, n10, n11, 1 + n12, n13, -1 + n14])/(-1 + n14) + 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, -1 + n14])/(-1 + n14) - 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
      -2 + n14])/(-1 + n14) + (n4*j[p4, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, 
      n8, n9, n10, n11, 1 + n12, n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n14) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
      -2 + n14])/(-1 + n14), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n13 == 1 || n5 == 0) -> 
  -((n8*j[p4, n1, -1 + n2, n3, n4, 1 + n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
       -1 + n13, n14])/(-1 + n13)) + 
   (n4*j[p4, n1, n2, -1 + n3, 1 + n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n8*j[p4, n1, n2, n3, -1 + n4, 1 + n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n8*j[p4, n1, n2, n3, n4, 1 + n5, -1 + n6, n7, 1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n8*j[p4, n1, n2, n3, n4, 1 + n5, n6, -1 + n7, 1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + ((-2 + n13 - n2 + n3 - n4 - n5 + n8)*
     j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) + j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, 
    n11, n12, n13, -1 + n14] - 
   (n8*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, 1 + n8, n9, n10, n11, -1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n8*j[p4, n1, n2, n3, n4, 1 + n5, n6, n7, 1 + n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) + 
   ((1 + n5)*j[p4, n1, n2, n3, n4, 2 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) + 
   ((-1 - n5)*j[p4, n1, n2, n3, n4, 2 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n13) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n13) - 
   (n3*j[p4, n1, n2, 1 + n3, -1 + n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n3*j[p4, n1, n2, 1 + n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, -1 + n14])/(-1 + n13) - 
   (n2*j[p4, n1, 1 + n2, -1 + n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) + (n2*j[p4, n1, 1 + n2, n3, n4, 1 + n5, -1 + n6, n7, 
      n8, n9, n10, n11, n12, -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4, n1, 1 + n2, n3, n4, 1 + n5, n6, -1 + n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (n2*j[p4, n1, 1 + n2, n3, n4, 1 + n5, n6, n7, -1 + n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, -1 + n12, 
      -1 + n13, n14])/(-1 + n13) + 
   (2*n2*j[p4, n1, 1 + n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) - 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, -1 + n13, 
      n14])/(-1 + n13) + (n1*j[p4, 1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, 
      -1 + n9, n10, n11, n12, -1 + n13, n14])/(-1 + n13) + 
   (n1*j[p4, 1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -2 + n13, n14])/(-1 + n13) - 
   (n1*j[p4, 1 + n1, n2, n3, n4, 1 + n5, n6, n7, n8, n9, n10, n11, n12, 
      -1 + n13, n14])/(-1 + n13), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n11 == 1 || n12 == 0) -> 
  ((-1 - n12)*j[p4, n1, -1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      2 + n12, n13, n14])/(-1 + n11) - j[p4, n1, -1 + n2, n3, n4, n5, n6, n7, 
    n8, n9, n10, n11, 1 + n12, n13, n14] - 
   (n8*j[p4, n1, -1 + n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   (n7*j[p4, n1, n2, -1 + n3, n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   (n4*j[p4, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   ((-1 - n12)*j[p4, n1, n2, n3, -1 + n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      2 + n12, n13, n14])/(-1 + n11) - j[p4, n1, n2, n3, -1 + n4, n5, n6, n7, 
    n8, n9, n10, n11, 1 + n12, n13, n14] - 
   (n8*j[p4, n1, n2, n3, -1 + n4, n5, n6, n7, 1 + n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) - 
   (n7*j[p4, n1, n2, n3, -1 + n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   ((1 + n12)*j[p4, n1, n2, n3, n4, -1 + n5, n6, n7, n8, n9, n10, -1 + n11, 
      2 + n12, n13, n14])/(-1 + n11) + j[p4, n1, n2, n3, n4, -1 + n5, n6, n7, 
    n8, n9, n10, n11, 1 + n12, n13, n14] + 
   (n7*j[p4, n1, n2, n3, n4, -1 + n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   ((1 + n12)*j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, n8, n9, n10, -1 + n11, 
      2 + n12, n13, n14])/(-1 + n11) + j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, 
    n8, n9, n10, n11, 1 + n12, n13, n14] + 
   (n8*j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, 1 + n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   ((1 + n12)*j[p4, n1, n2, n3, n4, n5, n6, -1 + n7, n8, n9, n10, -1 + n11, 
      2 + n12, n13, n14])/(-1 + n11) + j[p4, n1, n2, n3, n4, n5, n6, -1 + n7, 
    n8, n9, n10, n11, 1 + n12, n13, n14] + 
   (n8*j[p4, n1, n2, n3, n4, n5, n6, -1 + n7, 1 + n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   ((1 + n12)*j[p4, n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, -1 + n11, 
      2 + n12, n13, n14])/(-1 + n11) + j[p4, n1, n2, n3, n4, n5, n6, n7, 
    -1 + n8, n9, n10, n11, 1 + n12, n13, n14] - j[p4, n1, n2, n3, n4, n5, n6, 
    n7, n8, -1 + n9, n10, n11, 1 + n12, n13, n14] + 
   ((-1 - n12 + n3 - n4 + n8)*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, 
      -1 + n11, 1 + n12, n13, n14])/(-1 + n11) + 
   ((-1 - n12)*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      2 + n12, n13, -1 + n14])/(-1 + n11) + j[p4, n1, n2, n3, n4, n5, n6, n7, 
    n8, n9, n10, n11, 1 + n12, n13, n14] - 
   (n8*j[p4, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, n10, -1 + n11, n12, n13, 
      n14])/(-1 + n11) + (n8*j[p4, n1, n2, n3, n4, n5, n6, n7, 1 + n8, n9, 
      n10, -1 + n11, 1 + n12, -1 + n13, n14])/(-1 + n11) - 
   (n7*j[p4, n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, n10, -1 + n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n11) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, n10, -1 + n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n11) - 
   (n3*j[p4, n1, n2, 1 + n3, -1 + n4, n5, n6, n7, n8, n9, n10, -1 + n11, 
      1 + n12, n13, n14])/(-1 + n11) + 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, n10, -1 + n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n11), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n10 == 1 || n12 == 0) -> 
  -j[p4, n1, -1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
     n14] - (n6*j[p4, n1, -1 + n2, n3, n4, n5, 1 + n6, n7, n8, n9, -1 + n10, 
      n11, 1 + n12, n13, n14])/(-1 + n10) - j[p4, n1, n2, -1 + n3, n4, n5, 
    n6, n7, n8, n9, n10, n11, 1 + n12, n13, n14] - 
   (n7*j[p4, n1, n2, -1 + n3, n4, n5, n6, 1 + n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) - 
   (n6*j[p4, n1, n2, -1 + n3, n4, n5, 1 + n6, n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) - 
   (n4*j[p4, n1, n2, -1 + n3, 1 + n4, n5, n6, n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) + 
   (n7*j[p4, n1, n2, n3, -1 + n4, n5, n6, 1 + n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) - 
   (n7*j[p4, n1, n2, n3, n4, -1 + n5, n6, 1 + n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) + j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, 
    n8, n9, n10, n11, 1 + n12, n13, n14] + j[p4, n1, n2, n3, n4, n5, n6, 
    -1 + n7, n8, n9, n10, n11, 1 + n12, n13, n14] + 
   j[p4, n1, n2, n3, n4, n5, n6, n7, -1 + n8, n9, n10, n11, 1 + n12, n13, 
    n14] - j[p4, n1, n2, n3, n4, n5, n6, n7, n8, -1 + n9, n10, n11, 1 + n12, 
    n13, n14] + ((-n2 - n3 + n4 + n6)*j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 
      n9, -1 + n10, n11, 1 + n12, n13, n14])/(-1 + n10) + 
   j[p4, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, -1 + n13, 
    n14] + j[p4, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
    n14] + (n7*j[p4, n1, n2, n3, n4, n5, n6, 1 + n7, n8, n9, -1 + n10, n11, 
      1 + n12, -1 + n13, n14])/(-1 + n10) + 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, -1 + n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) + 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, -1 + n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) - 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, -1 + n10, n11, n12, n13, 
      n14])/(-1 + n10) + (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, 
      -1 + n10, n11, 1 + n12, -1 + n13, n14])/(-1 + n10) + 
   (n6*j[p4, n1, n2, n3, n4, n5, 1 + n6, n7, n8, n9, -1 + n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n10) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, n7, n8, n9, -1 + n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n10) + 
   (n3*j[p4, n1, n2, 1 + n3, -1 + n4, n5, n6, n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n10) - 
   (n2*j[p4, n1, 1 + n2, -1 + n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, -1 + n5, n6, n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) + 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, -1 + n6, n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) + 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, -1 + n7, n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) + 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, -1 + n8, n9, -1 + n10, n11, 
      1 + n12, n13, n14])/(-1 + n10) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, -1 + n10, n11, n12, n13, 
      n14])/(-1 + n10) + (2*n2*j[p4, n1, 1 + n2, n3, n4, n5, n6, n7, n8, n9, 
      -1 + n10, n11, 1 + n12, -1 + n13, n14])/(-1 + n10), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
    !(n12 == 0 || n6 == 1) -> 
  -j[p4, n1, -1 + n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, n13, 
     n14] - j[p4, n1, n2, -1 + n3, n4, n5, n6, n7, n8, n9, n10, n11, 1 + n12, 
    n13, n14] - (n4*j[p4, n1, n2, -1 + n3, 1 + n4, n5, -1 + n6, n7, n8, n9, 
      n10, n11, 1 + n12, n13, n14])/(-1 + n6) + 
   ((-1 - d + 2*n14 + n4 + n5 + n6 + n9)*j[p4, n1, n2, n3, n4, n5, -1 + n6, 
      n7, n8, n9, n10, n11, 1 + n12, n13, n14])/(-1 + n6) + 
   (n9*j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n6) - 
   (n9*j[p4, n1, n2, n3, n4, n5, -1 + n6, n7, n8, 1 + n9, n10, n11, 1 + n12, 
      n13, n14])/(-1 + n6) + j[p4, n1, n2, n3, n4, n5, n6, -1 + n7, n8, n9, 
    n10, n11, 1 + n12, n13, n14] + j[p4, n1, n2, n3, n4, n5, n6, n7, -1 + n8, 
    n9, n10, n11, 1 + n12, n13, n14] + j[p4, n1, n2, n3, n4, n5, n6, n7, n8, 
    n9, n10, n11, 1 + n12, -1 + n13, n14] + j[p4, n1, n2, n3, n4, n5, n6, n7, 
    n8, n9, n10, n11, 1 + n12, n13, -1 + n14] - 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, -1 + n6, n7, n8, n9, n10, n11, 1 + n12, 
      -1 + n13, n14])/(-1 + n6) + 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, -1 + n6, n7, n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n6) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, n8, n9, n10, n11, 1 + n12, 
      n13, -1 + n14])/(-1 + n6), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n13 == 1 && n14 == 1 && n6 == 1 && n8 == 1 && 
     !(n12 == -1 || n12 == 0) -> 
  -((n4*j[p4, -1 + n1, n2, -2 + n3, 1 + n4, n5, 1, n7, 1, n9, 1, 1, 2 + n12, 
       1, 1])/(-1 + n3)) + ((-1 + d - n1 - n3 - n5)*
     j[p4, -1 + n1, n2, -1 + n3, n4, n5, 1, n7, 1, n9, 1, 1, 2 + n12, 1, 1])/
    (-1 + n3) + j[p4, -1 + n1, n2, -1 + n3, n4, n5, 1, n7, 2, n9, 1, 1, 
     2 + n12, 0, 1]/(1 - n3) - 
   (n5*j[p4, -1 + n1, n2, -1 + n3, n4, 1 + n5, 1, n7, 1, n9, 1, 1, 2 + n12, 
      0, 1])/(-1 + n3) + (n5*j[p4, -1 + n1, n2, -1 + n3, n4, 1 + n5, 1, n7, 
      1, n9, 1, 1, 2 + n12, 1, 0])/(-1 + n3) - 
   (n4*j[p4, -1 + n1, n2, -1 + n3, 1 + n4, -1 + n5, 1, n7, 1, n9, 1, 1, 
      2 + n12, 1, 1])/(-1 + n3) + 
   (n4*j[p4, -1 + n1, n2, -1 + n3, 1 + n4, n5, 1, -1 + n7, 1, n9, 1, 1, 
      2 + n12, 1, 1])/(-1 + n3) - 
   (n4*j[p4, -1 + n1, n2, -1 + n3, 1 + n4, n5, 1, n7, 1, n9, 1, 1, 1 + n12, 
      1, 1])/(-1 + n3) + (n4*j[p4, -1 + n1, n2, -1 + n3, 1 + n4, n5, 1, n7, 
      1, n9, 1, 1, 2 + n12, 1, 0])/(-1 + n3) + j[p4, -1 + n1, n2, n3, n4, n5, 
    1, -1 + n7, 1, n9, 1, 1, 2 + n12, 1, 1] - j[p4, -1 + n1, n2, n3, n4, n5, 
    1, n7, 1, n9, 1, 1, 1 + n12, 1, 1] - j[p4, -1 + n1, n2, n3, n4, n5, 1, 
    n7, 1, n9, 1, 1, 2 + n12, 0, 1] + 
   (n2*j[p4, -1 + n1, 1 + n2, -2 + n3, n4, n5, 1, n7, 1, n9, 1, 1, 2 + n12, 
      1, 1])/(-1 + n3) - (n2*j[p4, -1 + n1, 1 + n2, -1 + n3, n4, n5, 1, 
      -1 + n7, 1, n9, 1, 1, 2 + n12, 1, 1])/(-1 + n3) - 
   (n2*j[p4, -1 + n1, 1 + n2, -1 + n3, n4, n5, 1, n7, 0, n9, 1, 1, 2 + n12, 
      1, 1])/(-1 + n3) + (n2*j[p4, -1 + n1, 1 + n2, -1 + n3, n4, n5, 1, n7, 
      1, n9, 1, 1, 1 + n12, 1, 1])/(-1 + n3) - 
   (2*n2*j[p4, -1 + n1, 1 + n2, -1 + n3, n4, n5, 1, n7, 1, n9, 1, 1, 2 + n12, 
      0, 1])/(-1 + n3) + (n4*j[p4, n1, -1 + n2, -1 + n3, 1 + n4, n5, 1, n7, 
      1, n9, 1, 1, 1 + n12, 1, 1])/(-1 + n3) + 
   ((1 + n12)*j[p4, n1, n2, -1 + n3, n4, n5, 1, n7, 1, n9, 1, 0, 2 + n12, 1, 
      1])/(-1 + n3) + ((4 - d + n12 + n4 + n7)*j[p4, n1, n2, -1 + n3, n4, n5, 
      1, n7, 1, n9, 1, 1, 1 + n12, 1, 1])/(-1 + n3) + 
   ((1 - n1)*j[p4, n1, n2, -1 + n3, n4, n5, 1, n7, 1, n9, 1, 1, 2 + n12, 0, 
      1])/(-1 + n3) + ((-2 + n1 - n12)*j[p4, n1, n2, -1 + n3, n4, n5, 1, n7, 
      1, n9, 1, 1, 2 + n12, 1, 1])/(-1 + n3) + 
   j[p4, n1, n2, -1 + n3, n4, n5, 1, n7, 2, n9, 1, 0, 1 + n12, 1, 1]/
    (-1 + n3) - (n7*j[p4, n1, n2, -1 + n3, n4, n5, 1, 1 + n7, 1, n9, 0, 1, 
      1 + n12, 1, 1])/(-1 + n3) + 
   (n7*j[p4, n1, n2, -1 + n3, n4, n5, 1, 1 + n7, 1, n9, 1, 0, 1 + n12, 1, 1])/
    (-1 + n3) - (n4*j[p4, n1, n2, -1 + n3, 1 + n4, -1 + n5, 1, n7, 1, n9, 1, 
      1, 1 + n12, 1, 1])/(-1 + n3) - 
   (n4*j[p4, n1, n2, -1 + n3, 1 + n4, n5, 0, n7, 1, n9, 1, 1, 1 + n12, 1, 1])/
    (-1 + n3) + (n4*j[p4, n1, n2, -1 + n3, 1 + n4, n5, 1, n7, 1, -1 + n9, 1, 
      1, 1 + n12, 1, 1])/(-1 + n3) - 
   (n4*j[p4, n1, n2, -1 + n3, 1 + n4, n5, 1, n7, 1, n9, 0, 1, 1 + n12, 1, 1])/
    (-1 + n3) + (n4*j[p4, n1, n2, -1 + n3, 1 + n4, n5, 1, n7, 1, n9, 1, 0, 
      1 + n12, 1, 1])/(-1 + n3) + j[p4, n1, n2, n3, n4, n5, 1, -1 + n7, 1, 
    n9, 1, 1, 1 + n12, 1, 1] + j[p4, n1, n2, n3, n4, n5, 1, n7, 0, n9, 1, 1, 
    1 + n12, 1, 1] - j[p4, n1, n2, n3, n4, n5, 1, n7, 1, n9, 0, 1, 1 + n12, 
    1, 1] + j[p4, n1, n2, n3, n4, n5, 1, n7, 1, n9, 1, 0, 1 + n12, 1, 1] + 
   j[p4, n1, n2, n3, n4, n5, 1, n7, 1, n9, 1, 1, 1 + n12, 1, 1], 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n12 == 0 && n2 == 0 && n4 == 0 && n5 == 0 && n7 == 0 && 
    n9 == 0 &&  !(n11 == 1 || n14 == 1 || n3 == 0) -> 
  -j[p4, 0, -1, 1 + n3, 0, 0, n6, 0, n8, 0, n10, n11, 0, n13, n14] + 
   (n8*j[p4, 0, -1, 1 + n3, 0, 0, n6, 0, 1 + n8, 0, n10, -1 + n11, 0, n13, 
      n14])/(-1 + n11) + (n6*j[p4, 0, -1, 1 + n3, 0, 0, 1 + n6, 0, n8, 0, 
      n10, n11, 0, n13, -1 + n14])/(-1 + n14) + 
   ((-1 - n3)*j[p4, 0, -1, 2 + n3, 0, 0, n6, 0, n8, 0, n10, -1 + n11, 0, n13, 
      n14])/(-1 + n11) + (n6*j[p4, 0, 0, n3, 0, 0, 1 + n6, 0, n8, 0, n10, 
      n11, 0, n13, -1 + n14])/(-1 + n14) + j[p4, 0, 0, 1 + n3, 0, 0, -1 + n6, 
    0, n8, 0, n10, n11, 0, n13, n14] - 
   (n8*j[p4, 0, 0, 1 + n3, 0, 0, n6, -1, 1 + n8, 0, n10, -1 + n11, 0, n13, 
      n14])/(-1 + n11) + j[p4, 0, 0, 1 + n3, 0, 0, n6, 0, -1 + n8, 0, n10, 
    n11, 0, n13, n14] + j[p4, 0, 0, 1 + n3, 0, 0, n6, 0, n8, 0, -1 + n10, 
    n11, 0, n13, n14] + ((-2 - 2*n3)*j[p4, 0, 0, 1 + n3, 0, 0, n6, 0, n8, 0, 
      n10, -1 + n11, 0, n13, n14])/(-1 + n11) + j[p4, 0, 0, 1 + n3, 0, 0, n6, 
    0, n8, 0, n10, n11, 0, -1 + n13, n14] + 
   ((1 - n14 + n6)*j[p4, 0, 0, 1 + n3, 0, 0, n6, 0, n8, 0, n10, n11, 0, n13, 
      -1 + n14])/(-1 + n14) - j[p4, 0, 0, 1 + n3, 0, 0, n6, 0, n8, 0, n10, 
    n11, 0, n13, n14] + (n8*j[p4, 0, 0, 1 + n3, 0, 0, n6, 0, 1 + n8, 0, n10, 
      -1 + n11, -1, n13, n14])/(-1 + n11) - 
   (n8*j[p4, 0, 0, 1 + n3, 0, 0, n6, 0, 1 + n8, 0, n10, -1 + n11, 0, 
      -1 + n13, n14])/(-1 + n11) - 
   (n6*j[p4, 0, 0, 1 + n3, 0, 0, 1 + n6, -1, n8, 0, n10, n11, 0, n13, 
      -1 + n14])/(-1 + n14) - 
   (n6*j[p4, 0, 0, 1 + n3, 0, 0, 1 + n6, 0, -1 + n8, 0, n10, n11, 0, n13, 
      -1 + n14])/(-1 + n14) + (n6*j[p4, 0, 0, 1 + n3, 0, 0, 1 + n6, 0, n8, 0, 
      n10, n11, -1, n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4, 0, 0, 1 + n3, 0, 0, 1 + n6, 0, n8, 0, n10, n11, 0, -1 + n13, 
      -1 + n14])/(-1 + n14) - (n6*j[p4, 0, 0, 1 + n3, 0, 0, 1 + n6, 0, n8, 0, 
      n10, n11, 0, n13, -2 + n14])/(-1 + n14) + 
   ((1 + n3)*j[p4, 0, 0, 2 + n3, 0, 0, n6, -1, n8, 0, n10, -1 + n11, 0, n13, 
      n14])/(-1 + n11) + ((2 + 2*n3)*j[p4, 0, 0, 2 + n3, 0, 0, n6, 0, 
      -1 + n8, 0, n10, -1 + n11, 0, n13, n14])/(-1 + n11) + 
   ((-1 - n3)*j[p4, 0, 0, 2 + n3, 0, 0, n6, 0, n8, 0, n10, -1 + n11, -1, n13, 
      n14])/(-1 + n11) + ((1 + n3)*j[p4, 0, 0, 2 + n3, 0, 0, n6, 0, n8, 0, 
      n10, -1 + n11, 0, -1 + n13, n14])/(-1 + n11), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n12 == 0 && n14 == 1 && n2 == 0 && n5 == 0 && n7 == 0 && 
    n9 == 0 &&  !(n10 == 1 || n6 == 1) -> 
  (n3*j[p4, 0, -1, 1 + n3, n4, 0, n6, 0, n8, 0, -1 + n10, n11, 0, n13, 1])/
    (-1 + n10) - (n4*j[p4, 0, 0, -1 + n3, 1 + n4, 0, -1 + n6, 0, n8, 0, n10, 
      n11, 0, n13, 1])/(-1 + n6) + 
   ((1 - d + n4 + n6)*j[p4, 0, 0, n3, n4, 0, -1 + n6, 0, n8, 0, n10, n11, 0, 
      n13, 1])/(-1 + n6) + ((1 - 2*d + n10 + 2*n3 + n4 + 2*n6)*
     j[p4, 0, 0, n3, n4, 0, n6, 0, n8, 0, -1 + n10, n11, 0, n13, 1])/
    (-1 + n10) + j[p4, 0, 0, n3, n4, 0, n6, 0, n8, 0, n10, n11, 0, n13, 0] + 
   (n4*j[p4, 0, 0, n3, 1 + n4, 0, -1 + n6, 0, n8, 0, -1 + n10, n11, 0, n13, 
      1])/(-1 + n10) + (n4*j[p4, 0, 0, n3, 1 + n4, 0, -1 + n6, 0, n8, 0, n10, 
      n11, 0, n13, 0])/(-1 + n6) - 
   (n4*j[p4, 0, 0, n3, 1 + n4, 0, n6, 0, -1 + n8, 0, -1 + n10, n11, 0, n13, 
      1])/(-1 + n10) - (n3*j[p4, 0, 0, 1 + n3, n4, 0, n6, -1, n8, 0, 
      -1 + n10, n11, 0, n13, 1])/(-1 + n10) - 
   (2*n3*j[p4, 0, 0, 1 + n3, n4, 0, n6, 0, -1 + n8, 0, -1 + n10, n11, 0, n13, 
      1])/(-1 + n10) + (n3*j[p4, 0, 0, 1 + n3, n4, 0, n6, 0, n8, 0, -1 + n10, 
      n11, -1, n13, 1])/(-1 + n10) - 
   (n3*j[p4, 0, 0, 1 + n3, n4, 0, n6, 0, n8, 0, -1 + n10, n11, 0, -1 + n13, 
      1])/(-1 + n10), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?NonPositive, (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, 
    (n7_)?NonPositive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && n7 == 0 && 
    n9 == 0 &&  !(n10 == 1 || n6 == 1) -> 
  (n3*j[p4, 0, -1, 1 + n3, n4, n5, n6, 0, n8, 0, -1 + n10, n11, 0, 1, 1])/
    (-1 + n10) - (n4*j[p4, 0, 0, -1 + n3, 1 + n4, n5, -1 + n6, 0, n8, 0, n10, 
      n11, 0, 1, 1])/(-1 + n6) + 
   ((1 - d + n4 + n5 + n6)*j[p4, 0, 0, n3, n4, n5, -1 + n6, 0, n8, 0, n10, 
      n11, 0, 1, 1])/(-1 + n6) + ((1 - 2*d + n10 + 2*n3 + n4 + n5 + 2*n6)*
     j[p4, 0, 0, n3, n4, n5, n6, 0, n8, 0, -1 + n10, n11, 0, 1, 1])/
    (-1 + n10) + j[p4, 0, 0, n3, n4, n5, n6, 0, n8, 0, n10, n11, 0, 1, 0] - 
   (n5*j[p4, 0, 0, n3, n4, 1 + n5, -1 + n6, 0, n8, 0, n10, n11, 0, 0, 1])/
    (-1 + n6) + (n5*j[p4, 0, 0, n3, n4, 1 + n5, -1 + n6, 0, n8, 0, n10, n11, 
      0, 1, 0])/(-1 + n6) - (n5*j[p4, 0, 0, n3, n4, 1 + n5, n6, 0, n8, 0, 
      -1 + n10, n11, 0, 0, 1])/(-1 + n10) + 
   (n5*j[p4, 0, 0, n3, n4, 1 + n5, n6, 0, n8, 0, -1 + n10, n11, 0, 1, 0])/
    (-1 + n10) + (n4*j[p4, 0, 0, n3, 1 + n4, n5, -1 + n6, 0, n8, 0, -1 + n10, 
      n11, 0, 1, 1])/(-1 + n10) + 
   (n4*j[p4, 0, 0, n3, 1 + n4, n5, -1 + n6, 0, n8, 0, n10, n11, 0, 1, 0])/
    (-1 + n6) - (n4*j[p4, 0, 0, n3, 1 + n4, n5, n6, 0, -1 + n8, 0, -1 + n10, 
      n11, 0, 1, 1])/(-1 + n10) - 
   (n3*j[p4, 0, 0, 1 + n3, n4, n5, n6, -1, n8, 0, -1 + n10, n11, 0, 1, 1])/
    (-1 + n10) - (2*n3*j[p4, 0, 0, 1 + n3, n4, n5, n6, 0, -1 + n8, 0, 
      -1 + n10, n11, 0, 1, 1])/(-1 + n10) + 
   (n3*j[p4, 0, 0, 1 + n3, n4, n5, n6, 0, n8, 0, -1 + n10, n11, -1, 1, 1])/
    (-1 + n10) - (n3*j[p4, 0, 0, 1 + n3, n4, n5, n6, 0, n8, 0, -1 + n10, n11, 
      0, 0, 1])/(-1 + n10), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n4 == 0 && n5 == 0 && n7 == 0 && 
    n9 == 0 &&  !(n13 == 1 || n14 == 1 || n2 == 0) -> 
  -((n8*j[p4, 0, n2, n3, 0, 0, n6, 0, 1 + n8, 0, 1, n11, 0, -1 + n13, n14])/
     (-1 + n13)) + (n6*j[p4, 0, n2, n3, 0, 0, 1 + n6, 0, n8, 0, 1, n11, 0, 
      n13, -1 + n14])/(-1 + n14) + 
   (n3*j[p4, 0, n2, 1 + n3, 0, 0, n6, 0, n8, 0, 1, n11, 0, -1 + n13, n14])/
    (-1 + n13) + (n6*j[p4, 0, 1 + n2, -1 + n3, 0, 0, 1 + n6, 0, n8, 0, 1, 
      n11, 0, n13, -1 + n14])/(-1 + n14) + j[p4, 0, 1 + n2, n3, 0, 0, 
    -1 + n6, 0, n8, 0, 1, n11, 0, n13, n14] + 
   (n8*j[p4, 0, 1 + n2, n3, 0, 0, n6, -1, 1 + n8, 0, 1, n11, 0, -1 + n13, 
      n14])/(-1 + n13) + ((-3 + n13 - 2*n2 + 2*n3)*j[p4, 0, 1 + n2, n3, 0, 0, 
      n6, 0, n8, 0, 1, n11, 0, -1 + n13, n14])/(-1 + n13) + 
   ((1 - n14 + n6)*j[p4, 0, 1 + n2, n3, 0, 0, n6, 0, n8, 0, 1, n11, 0, n13, 
      -1 + n14])/(-1 + n14) - (n8*j[p4, 0, 1 + n2, n3, 0, 0, n6, 0, 1 + n8, 
      0, 1, n11, -1, -1 + n13, n14])/(-1 + n13) + 
   (n8*j[p4, 0, 1 + n2, n3, 0, 0, n6, 0, 1 + n8, 0, 1, n11, 0, -2 + n13, 
      n14])/(-1 + n13) - (n6*j[p4, 0, 1 + n2, n3, 0, 0, 1 + n6, -1, n8, 0, 1, 
      n11, 0, n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4, 0, 1 + n2, n3, 0, 0, 1 + n6, 0, -1 + n8, 0, 1, n11, 0, n13, 
      -1 + n14])/(-1 + n14) + (n6*j[p4, 0, 1 + n2, n3, 0, 0, 1 + n6, 0, n8, 
      0, 1, n11, -1, n13, -1 + n14])/(-1 + n14) - 
   (n6*j[p4, 0, 1 + n2, n3, 0, 0, 1 + n6, 0, n8, 0, 1, n11, 0, -1 + n13, 
      -1 + n14])/(-1 + n14) - (n6*j[p4, 0, 1 + n2, n3, 0, 0, 1 + n6, 0, n8, 
      0, 1, n11, 0, n13, -2 + n14])/(-1 + n14) - 
   (n3*j[p4, 0, 1 + n2, 1 + n3, 0, 0, n6, -1, n8, 0, 1, n11, 0, -1 + n13, 
      n14])/(-1 + n13) - (2*n3*j[p4, 0, 1 + n2, 1 + n3, 0, 0, n6, 0, -1 + n8, 
      0, 1, n11, 0, -1 + n13, n14])/(-1 + n13) + 
   (n3*j[p4, 0, 1 + n2, 1 + n3, 0, 0, n6, 0, n8, 0, 1, n11, -1, -1 + n13, 
      n14])/(-1 + n13) - (n3*j[p4, 0, 1 + n2, 1 + n3, 0, 0, n6, 0, n8, 0, 1, 
      n11, 0, -2 + n13, n14])/(-1 + n13) + 
   ((-1 - n2)*j[p4, 0, 2 + n2, -1 + n3, 0, 0, n6, 0, n8, 0, 1, n11, 0, 
      -1 + n13, n14])/(-1 + n13) + 
   ((1 + n2)*j[p4, 0, 2 + n2, n3, 0, 0, n6, -1, n8, 0, 1, n11, 0, -1 + n13, 
      n14])/(-1 + n13) + ((1 + n2)*j[p4, 0, 2 + n2, n3, 0, 0, n6, 0, -1 + n8, 
      0, 1, n11, 0, -1 + n13, n14])/(-1 + n13) + 
   ((-1 - n2)*j[p4, 0, 2 + n2, n3, 0, 0, n6, 0, n8, 0, 1, n11, -1, -1 + n13, 
      n14])/(-1 + n13) + ((2 + 2*n2)*j[p4, 0, 2 + n2, n3, 0, 0, n6, 0, n8, 0, 
      1, n11, 0, -2 + n13, n14])/(-1 + n13), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n14 == 1 && n5 == 0 && n7 == 0 && 
    n9 == 0 &&  !(n11 == 1 || n3 == 0 || n6 == 1) -> 
  -j[p4, 0, -1 + n2, 1 + n3, n4, 0, n6, 0, n8, 0, 1, n11, 0, n13, 1] + 
   (n8*j[p4, 0, -1 + n2, 1 + n3, n4, 0, n6, 0, 1 + n8, 0, 1, -1 + n11, 0, 
      n13, 1])/(-1 + n11) + ((-1 - n3)*j[p4, 0, -1 + n2, 2 + n3, n4, 0, n6, 
      0, n8, 0, 1, -1 + n11, 0, n13, 1])/(-1 + n11) - 
   (n4*j[p4, 0, n2, n3, 1 + n4, 0, -1 + n6, 0, n8, 0, 1, n11, 0, n13, 1])/
    (-1 + n6) - (n4*j[p4, 0, n2, n3, 1 + n4, 0, n6, 0, n8, 0, 1, -1 + n11, 0, 
      n13, 1])/(-1 + n11) + ((1 - d + n4 + n6)*j[p4, 0, n2, 1 + n3, n4, 0, 
      -1 + n6, 0, n8, 0, 1, n11, 0, n13, 1])/(-1 + n6) - 
   (n8*j[p4, 0, n2, 1 + n3, n4, 0, n6, -1, 1 + n8, 0, 1, -1 + n11, 0, n13, 
      1])/(-1 + n11) + j[p4, 0, n2, 1 + n3, n4, 0, n6, 0, -1 + n8, 0, 1, n11, 
    0, n13, 1] + j[p4, 0, n2, 1 + n3, n4, 0, n6, 0, n8, 0, 0, n11, 0, n13, 
    1] + ((-2 - 2*n3)*j[p4, 0, n2, 1 + n3, n4, 0, n6, 0, n8, 0, 1, -1 + n11, 
      0, n13, 1])/(-1 + n11) + j[p4, 0, n2, 1 + n3, n4, 0, n6, 0, n8, 0, 1, 
    n11, 0, -1 + n13, 1] + j[p4, 0, n2, 1 + n3, n4, 0, n6, 0, n8, 0, 1, n11, 
    0, n13, 0] - j[p4, 0, n2, 1 + n3, n4, 0, n6, 0, n8, 0, 1, n11, 0, n13, 
    1] + (n8*j[p4, 0, n2, 1 + n3, n4, 0, n6, 0, 1 + n8, 0, 1, -1 + n11, -1, 
      n13, 1])/(-1 + n11) - (n8*j[p4, 0, n2, 1 + n3, n4, 0, n6, 0, 1 + n8, 0, 
      1, -1 + n11, 0, -1 + n13, 1])/(-1 + n11) - 
   (n4*j[p4, 0, n2, 1 + n3, 1 + n4, 0, -1 + n6, 0, n8, 0, 1, -1 + n11, 0, 
      n13, 1])/(-1 + n11) + (n4*j[p4, 0, n2, 1 + n3, 1 + n4, 0, -1 + n6, 0, 
      n8, 0, 1, n11, 0, n13, 0])/(-1 + n6) + 
   (n4*j[p4, 0, n2, 1 + n3, 1 + n4, 0, n6, 0, -1 + n8, 0, 1, -1 + n11, 0, 
      n13, 1])/(-1 + n11) + (n4*j[p4, 0, n2, 1 + n3, 1 + n4, 0, n6, 0, n8, 0, 
      1, -1 + n11, 0, n13, 0])/(-1 + n11) + 
   ((1 + n3)*j[p4, 0, n2, 2 + n3, n4, 0, n6, -1, n8, 0, 1, -1 + n11, 0, n13, 
      1])/(-1 + n11) + ((2 + 2*n3)*j[p4, 0, n2, 2 + n3, n4, 0, n6, 0, 
      -1 + n8, 0, 1, -1 + n11, 0, n13, 1])/(-1 + n11) + 
   ((-1 - n3)*j[p4, 0, n2, 2 + n3, n4, 0, n6, 0, n8, 0, 1, -1 + n11, -1, n13, 
      1])/(-1 + n11) + ((1 + n3)*j[p4, 0, n2, 2 + n3, n4, 0, n6, 0, n8, 0, 1, 
      -1 + n11, 0, -1 + n13, 1])/(-1 + n11), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n7 == 0 && 
    n9 == 0 &&  !(n11 == 1 || n3 == 0 || n6 == 1) -> 
  -j[p4, 0, -1 + n2, 1 + n3, n4, n5, n6, 0, n8, 0, 1, n11, 0, 1, 1] + 
   (n8*j[p4, 0, -1 + n2, 1 + n3, n4, n5, n6, 0, 1 + n8, 0, 1, -1 + n11, 0, 1, 
      1])/(-1 + n11) + ((-1 - n3)*j[p4, 0, -1 + n2, 2 + n3, n4, n5, n6, 0, 
      n8, 0, 1, -1 + n11, 0, 1, 1])/(-1 + n11) - 
   (n4*j[p4, 0, n2, n3, 1 + n4, n5, -1 + n6, 0, n8, 0, 1, n11, 0, 1, 1])/
    (-1 + n6) - (n4*j[p4, 0, n2, n3, 1 + n4, n5, n6, 0, n8, 0, 1, -1 + n11, 
      0, 1, 1])/(-1 + n11) + ((1 - d + n4 + n5 + n6)*
     j[p4, 0, n2, 1 + n3, n4, n5, -1 + n6, 0, n8, 0, 1, n11, 0, 1, 1])/
    (-1 + n6) - (n8*j[p4, 0, n2, 1 + n3, n4, n5, n6, -1, 1 + n8, 0, 1, 
      -1 + n11, 0, 1, 1])/(-1 + n11) + j[p4, 0, n2, 1 + n3, n4, n5, n6, 0, 
    -1 + n8, 0, 1, n11, 0, 1, 1] + j[p4, 0, n2, 1 + n3, n4, n5, n6, 0, n8, 0, 
    0, n11, 0, 1, 1] + ((-2 - 2*n3)*j[p4, 0, n2, 1 + n3, n4, n5, n6, 0, n8, 
      0, 1, -1 + n11, 0, 1, 1])/(-1 + n11) + j[p4, 0, n2, 1 + n3, n4, n5, n6, 
    0, n8, 0, 1, n11, 0, 0, 1] + j[p4, 0, n2, 1 + n3, n4, n5, n6, 0, n8, 0, 
    1, n11, 0, 1, 0] - j[p4, 0, n2, 1 + n3, n4, n5, n6, 0, n8, 0, 1, n11, 0, 
    1, 1] + (n8*j[p4, 0, n2, 1 + n3, n4, n5, n6, 0, 1 + n8, 0, 1, -1 + n11, 
      -1, 1, 1])/(-1 + n11) - (n8*j[p4, 0, n2, 1 + n3, n4, n5, n6, 0, 1 + n8, 
      0, 1, -1 + n11, 0, 0, 1])/(-1 + n11) - 
   (n5*j[p4, 0, n2, 1 + n3, n4, 1 + n5, -1 + n6, 0, n8, 0, 1, n11, 0, 0, 1])/
    (-1 + n6) + (n5*j[p4, 0, n2, 1 + n3, n4, 1 + n5, -1 + n6, 0, n8, 0, 1, 
      n11, 0, 1, 0])/(-1 + n6) - 
   (n4*j[p4, 0, n2, 1 + n3, 1 + n4, n5, -1 + n6, 0, n8, 0, 1, -1 + n11, 0, 1, 
      1])/(-1 + n11) + (n4*j[p4, 0, n2, 1 + n3, 1 + n4, n5, -1 + n6, 0, n8, 
      0, 1, n11, 0, 1, 0])/(-1 + n6) + 
   (n4*j[p4, 0, n2, 1 + n3, 1 + n4, n5, n6, 0, -1 + n8, 0, 1, -1 + n11, 0, 1, 
      1])/(-1 + n11) + (n4*j[p4, 0, n2, 1 + n3, 1 + n4, n5, n6, 0, n8, 0, 1, 
      -1 + n11, 0, 1, 0])/(-1 + n11) + 
   ((1 + n3)*j[p4, 0, n2, 2 + n3, n4, n5, n6, -1, n8, 0, 1, -1 + n11, 0, 1, 
      1])/(-1 + n11) + ((2 + 2*n3)*j[p4, 0, n2, 2 + n3, n4, n5, n6, 0, 
      -1 + n8, 0, 1, -1 + n11, 0, 1, 1])/(-1 + n11) + 
   ((-1 - n3)*j[p4, 0, n2, 2 + n3, n4, n5, n6, 0, n8, 0, 1, -1 + n11, -1, 1, 
      1])/(-1 + n11) + ((1 + n3)*j[p4, 0, n2, 2 + n3, n4, n5, n6, 0, n8, 0, 
      1, -1 + n11, 0, 0, 1])/(-1 + n11), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n9 == 0 &&  !(n6 == 1 || n7 == 0 || n8 == 1) -> 
  j[p4, 0, -1 + n2, n3, n4, n5, n6, 1 + n7, n8, 0, 1, 1, 0, 1, 1] + 
   j[p4, 0, n2, -1 + n3, n4, n5, n6, 1 + n7, n8, 0, 1, 1, 0, 1, 1] + 
   (n4*j[p4, 0, n2, -1 + n3, 1 + n4, n5, -1 + n6, 1 + n7, n8, 0, 1, 1, 0, 1, 
      1])/(-1 + n6) + (n4*j[p4, 0, n2, -1 + n3, 1 + n4, n5, n6, 1 + n7, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) + 
   ((-1 + d - n4 - n5 - n6)*j[p4, 0, n2, n3, n4, n5, -1 + n6, 1 + n7, n8, 0, 
      1, 1, 0, 1, 1])/(-1 + n6) + 
   ((2 - d + n3 + n5)*j[p4, 0, n2, n3, n4, n5, n6, 1 + n7, -1 + n8, 0, 1, 1, 
      0, 1, 1])/(-1 + n8) - j[p4, 0, n2, n3, n4, n5, n6, 1 + n7, n8, 0, 1, 1, 
    0, 1, 0] + (n5*j[p4, 0, n2, n3, n4, 1 + n5, -1 + n6, 1 + n7, n8, 0, 1, 1, 
      0, 0, 1])/(-1 + n6) - (n5*j[p4, 0, n2, n3, n4, 1 + n5, -1 + n6, 1 + n7, 
      n8, 0, 1, 1, 0, 1, 0])/(-1 + n6) + 
   (n5*j[p4, 0, n2, n3, n4, 1 + n5, n6, 1 + n7, -1 + n8, 0, 1, 1, 0, 0, 1])/
    (-1 + n8) - (n5*j[p4, 0, n2, n3, n4, 1 + n5, n6, 1 + n7, -1 + n8, 0, 1, 
      1, 0, 1, 0])/(-1 + n8) + 
   (n4*j[p4, 0, n2, n3, 1 + n4, -1 + n5, n6, 1 + n7, -1 + n8, 0, 1, 1, 0, 1, 
      1])/(-1 + n8) - (n4*j[p4, 0, n2, n3, 1 + n4, n5, -1 + n6, 1 + n7, n8, 
      0, 1, 1, 0, 1, 0])/(-1 + n6) - 
   (n4*j[p4, 0, n2, n3, 1 + n4, n5, n6, n7, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (-1 + n8) - (n4*j[p4, 0, n2, n3, 1 + n4, n5, n6, 1 + n7, -1 + n8, 0, 1, 
      1, 0, 1, 0])/(-1 + n8) - 
   (n3*j[p4, 0, n2, 1 + n3, n4, n5, n6, n7, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (-1 + n8) + (n3*j[p4, 0, n2, 1 + n3, n4, n5, n6, 1 + n7, -1 + n8, 0, 1, 
      1, 0, 0, 1])/(-1 + n8) - 
   (n2*j[p4, 0, 1 + n2, -1 + n3, n4, n5, n6, 1 + n7, -1 + n8, 0, 1, 1, 0, 1, 
      1])/(-1 + n8) + (n2*j[p4, 0, 1 + n2, n3, n4, n5, n6, n7, -1 + n8, 0, 1, 
      1, 0, 1, 1])/(-1 + n8) + 
   (n2*j[p4, 0, 1 + n2, n3, n4, n5, n6, 1 + n7, -2 + n8, 0, 1, 1, 0, 1, 1])/
    (-1 + n8) - (n2*j[p4, 0, 1 + n2, n3, n4, n5, n6, 1 + n7, -1 + n8, 0, 1, 
      1, -1, 1, 1])/(-1 + n8) + 
   (2*n2*j[p4, 0, 1 + n2, n3, n4, n5, n6, 1 + n7, -1 + n8, 0, 1, 1, 0, 0, 1])/
    (-1 + n8), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n8 == 1 && 
    n9 == 0 &&  !(n5 == 0 || n6 == 1 || n7 == 0) -> 
  ((4 - d + 2*n7)*j[p4, n1, -2 + n2, n3, n4, 1 + n5, n6, 1 + n7, 1, 0, 1, 1, 
      0, 1, 1])/(2*(-1 + n2)) + 
   (n3*j[p4, n1, -2 + n2, 1 + n3, n4, 1 + n5, n6, n7, 1, 0, 1, 1, 0, 1, 1])/
    (-1 + n2) + ((4 - d + 2*n7)*j[p4, n1, -1 + n2, n3, -1 + n4, 1 + n5, n6, 
      1 + n7, 1, 0, 1, 1, 0, 1, 1])/(2*(-1 + n2)) + 
   ((-4 + d - 2*n7)*j[p4, n1, -1 + n2, n3, n4, n5, n6, 1 + n7, 1, 0, 1, 1, 0, 
      1, 1])/(2*(-1 + n2)) + ((8 - 6*d + d^2 + 4*n2 - d*n2 + 4*n3 - d*n3 + 
      4*n4 - d*n4 + 8*n7 - 3*d*n7 + 2*n2*n7 + 2*n3*n7 + 2*n4*n7 + 2*n7^2)*
     j[p4, n1, -1 + n2, n3, n4, 1 + n5, -1 + n6, 1 + n7, 1, 0, 1, 1, 0, 1, 
      1])/(2*(-1 + n2)*(-1 + n6)) + 
   ((-4 + d)*j[p4, n1, -1 + n2, n3, n4, 1 + n5, -1 + n6, 1 + n7, 1, 0, 2, 0, 
      0, 1, 1])/(2*(-1 + n2)*(-1 + n6)) + 
   ((-2 - d + 2*n2 + 2*n3 + 2*n4 + 2*n6)*j[p4, n1, -1 + n2, n3, n4, 1 + n5, 
      n6, n7, 1, 0, 1, 1, 0, 1, 1])/(2*(-1 + n2)) + 
   ((-4 + d - 2*n7)*j[p4, n1, -1 + n2, n3, n4, 1 + n5, n6, 1 + n7, 0, 0, 1, 
      1, 0, 1, 1])/(2*(-1 + n2)) + 
   ((-4*n4 + d*n4 - 2*n4*n7)*j[p4, n1, -1 + n2, n3, 1 + n4, n5, -1 + n6, 
      1 + n7, 1, 0, 1, 1, 0, 1, 1])/(2*(-1 + n2)*(-1 + n6)) + 
   ((2*n4 - d*n4 + n3*n4 + n4^2 + n4*n6 + n4*n7)*j[p4, n1, -1 + n2, n3, 
      1 + n4, 1 + n5, -1 + n6, n7, 1, 0, 1, 1, 0, 1, 1])/
    ((-1 + n2)*(-1 + n6)) - (n4*j[p4, n1, -1 + n2, n3, 1 + n4, 1 + n5, n6, 
      n7, 0, 0, 1, 1, 0, 1, 1])/(-1 + n2) + 
   (n3*j[p4, n1, -1 + n2, 1 + n3, -1 + n4, 1 + n5, n6, n7, 1, 0, 1, 1, 0, 1, 
      1])/(-1 + n2) + ((2*n3 - d*n3 + n2*n3 + n3^2 + n3*n4 + n3*n7)*
     j[p4, n1, -1 + n2, 1 + n3, n4, 1 + n5, -1 + n6, n7, 1, 0, 1, 1, 0, 1, 
      1])/((-1 + n2)*(-1 + n6)) + ((-4*n3 + d*n3 - 2*n3*n7)*
     j[p4, n1, -1 + n2, 1 + n3, n4, 1 + n5, -1 + n6, 1 + n7, 1, 0, 1, 1, 0, 
      0, 1])/(2*(-1 + n2)*(-1 + n6)) - 
   (n3*j[p4, n1, -1 + n2, 1 + n3, n4, 1 + n5, n6, -1 + n7, 1, 0, 1, 1, 0, 1, 
      1])/(-1 + n2) - (2*n3*j[p4, n1, -1 + n2, 1 + n3, n4, 1 + n5, n6, n7, 0, 
      0, 1, 1, 0, 1, 1])/(-1 + n2) + 
   (n3*j[p4, n1, -1 + n2, 1 + n3, n4, 1 + n5, n6, n7, 1, 0, 1, 1, -1, 1, 1])/
    (-1 + n2) - (n3*j[p4, n1, -1 + n2, 1 + n3, n4, 1 + n5, n6, n7, 1, 0, 1, 
      1, 0, 0, 1])/(-1 + n2) - 
   (n3*j[p4, n1, -1 + n2, 1 + n3, n4, 1 + n5, n6, n7, 1, 0, 1, 1, 0, 1, 0])/
    (-1 + n2) - (n3*n4*j[p4, n1, -1 + n2, 1 + n3, 1 + n4, 1 + n5, -1 + n6, 
      n7, 1, 0, 1, 1, 0, 1, 0])/((-1 + n2)*(-1 + n6)) + 
   ((1 - d + n2 + n3 + n6 + n7)*j[p4, n1, n2, n3, n4, 1 + n5, -1 + n6, n7, 1, 
      0, 1, 1, 0, 1, 1])/(-1 + n6) + 
   ((-4 + d - 2*n7)*j[p4, n1, n2, n3, n4, 1 + n5, -1 + n6, 1 + n7, 0, 0, 1, 
      1, 0, 1, 1])/(2*(-1 + n6)) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, -1 + n6, n7, 1, 0, 1, 1, 0, 1, 1])/
    (-1 + n6) + (n4*j[p4, n1, n2, n3, 1 + n4, 1 + n5, -2 + n6, n7, 1, 0, 1, 
      1, 0, 1, 1])/(-1 + n6) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, 1 + n5, -1 + n6, -1 + n7, 1, 0, 1, 1, 0, 1, 
      1])/(-1 + n6) - (n4*j[p4, n1, n2, n3, 1 + n4, 1 + n5, -1 + n6, n7, 0, 
      0, 1, 1, 0, 1, 1])/(-1 + n6) - 
   (2*n3*j[p4, n1, n2, 1 + n3, n4, 1 + n5, -1 + n6, n7, 0, 0, 1, 1, 0, 1, 1])/
    (-1 + n6) + (n3*j[p4, n1, n2, 1 + n3, n4, 1 + n5, -1 + n6, n7, 1, 0, 1, 
      1, -1, 1, 1])/(-1 + n6) - 
   (2*n3*j[p4, n1, n2, 1 + n3, n4, 1 + n5, -1 + n6, n7, 1, 0, 1, 1, 0, 0, 1])/
    (-1 + n6), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n6 == 1 &&  !(n7 == -1 || n7 == 0 || n8 == 1) -> 
  ((6 - d + 2*n7)*j[p4, 0, -1 + n2, -1 + n3, n4, n5, 1, 2 + n7, n8, n9, 1, 1, 
      0, 1, 1])/(2*(-1 + n3)) + j[p4, 0, -1 + n2, n3, n4, n5, 1, 1 + n7, n8, 
    n9, 1, 1, 0, 1, 1] + ((-3 + d - n4 - n7 - n8)*j[p4, 0, n2, -1 + n3, n4, 
      n5, 1, 1 + n7, n8, n9, 1, 1, 0, 1, 1])/(-1 + n3) + 
   ((4 - d)*j[p4, 0, n2, -1 + n3, n4, n5, 1, 2 + n7, -1 + n8, n9, 0, 2, 0, 1, 
      1])/(2*(-1 + n3)*(-1 + n8)) + 
   ((-12 + 8*d - d^2 - 6*n3 + d*n3 - 6*n4 + d*n4 - 10*n7 + 3*d*n7 - 2*n3*n7 - 
      2*n4*n7 - 2*n7^2 - 6*n8 + d*n8 - 2*n7*n8)*j[p4, 0, n2, -1 + n3, n4, n5, 
      1, 2 + n7, -1 + n8, n9, 1, 1, 0, 1, 1])/(2*(-1 + n3)*(-1 + n8)) + 
   ((6*n4 - d*n4 + 2*n4*n7)*j[p4, 0, n2, -1 + n3, 1 + n4, -1 + n5, 1, 2 + n7, 
      -1 + n8, n9, 1, 1, 0, 1, 1])/(2*(-1 + n3)*(-1 + n8)) + 
   (n4*j[p4, 0, n2, -1 + n3, 1 + n4, n5, 0, 1 + n7, n8, n9, 1, 1, 0, 1, 1])/
    (-1 + n3) + ((-3*n4 + d*n4 - n4^2 - n4*n7 - n4*n8)*
     j[p4, 0, n2, -1 + n3, 1 + n4, n5, 1, 1 + n7, -1 + n8, n9, 1, 1, 0, 1, 
      1])/((-1 + n3)*(-1 + n8)) + 
   ((-n4 + n5 - n7 - n8)*j[p4, 0, n2, n3, n4, n5, 1, 1 + n7, -1 + n8, n9, 1, 
      1, 0, 1, 1])/(-1 + n8) + 
   ((6 - d + 2*n7)*j[p4, 0, n2, n3, n4, n5, 1, 2 + n7, -1 + n8, n9, 1, 1, 0, 
      0, 1])/(2*(-1 + n8)) + (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, 1 + n7, 
      -1 + n8, n9, 1, 1, 0, 0, 1])/(-1 + n8) - 
   (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, 1 + n7, -1 + n8, n9, 1, 1, 0, 1, 0])/
    (-1 + n8) + (n4*j[p4, 0, n2, n3, 1 + n4, -1 + n5, 1, 1 + n7, -1 + n8, n9, 
      1, 1, 0, 1, 1])/(-1 + n8) - 
   (n4*j[p4, 0, n2, n3, 1 + n4, n5, 1, n7, -1 + n8, n9, 1, 1, 0, 1, 1])/
    (-1 + n8) - (n3*j[p4, 0, n2, 1 + n3, n4, n5, 1, n7, -1 + n8, n9, 1, 1, 0, 
      1, 1])/(-1 + n8) + (n3*j[p4, 0, n2, 1 + n3, n4, n5, 1, 1 + n7, -1 + n8, 
      n9, 1, 1, 0, 0, 1])/(-1 + n8) - 
   (n2*j[p4, 0, 1 + n2, -1 + n3, n4, n5, 1, 1 + n7, -1 + n8, n9, 1, 1, 0, 1, 
      1])/(-1 + n8) + (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, n7, -1 + n8, n9, 1, 
      1, 0, 1, 1])/(-1 + n8) + 
   (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, 1 + n7, -2 + n8, n9, 1, 1, 0, 1, 1])/
    (-1 + n8) - (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, 1 + n7, -1 + n8, n9, 1, 
      1, -1, 1, 1])/(-1 + n8) + 
   (2*n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, 1 + n7, -1 + n8, n9, 1, 1, 0, 0, 1])/
    (-1 + n8), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == -1 && n13 == 1 && n14 == 1 && n6 == 1 && 
    n8 == 1 &&  !(n7 == 0 || n9 == 0) -> 
  ((-1 - n7)*j[p4, -1 + n1, -2 + n2, n3, n4, n5, 1, 2 + n7, 1, 1 + n9, 1, 1, 
      -1, 1, 1])/(-1 + n2) - (n3*j[p4, -1 + n1, -2 + n2, 1 + n3, n4, n5, 1, 
      1 + n7, 1, 1 + n9, 1, 1, -1, 1, 1])/(-1 + n2) + 
   ((-1 - n7)*j[p4, -1 + n1, -1 + n2, n3, -1 + n4, n5, 1, 2 + n7, 1, 1 + n9, 
      1, 1, -1, 1, 1])/(-1 + n2) + 
   ((1 + n7)*j[p4, -1 + n1, -1 + n2, n3, n4, -1 + n5, 1, 2 + n7, 1, 1 + n9, 
      1, 1, -1, 1, 1])/(-1 + n2) + j[p4, -1 + n1, -1 + n2, n3, n4, n5, 0, 
     1 + n7, 1, 1 + n9, 2, 1, -1, 1, 1]/(1 - n2) + 
   ((-1 + d - n2 - n3 - 2*n4)*j[p4, -1 + n1, -1 + n2, n3, n4, n5, 1, 1 + n7, 
      1, 1 + n9, 1, 1, -1, 1, 1])/(-1 + n2) + 
   ((1 + n7)*j[p4, -1 + n1, -1 + n2, n3, n4, n5, 1, 2 + n7, 0, 1 + n9, 1, 1, 
      -1, 1, 1])/(-1 + n2) - (n4*j[p4, -1 + n1, -1 + n2, n3, 1 + n4, n5, 0, 
      1 + n7, 1, 1 + n9, 1, 1, -1, 1, 1])/(-1 + n2) + 
   (n4*j[p4, -1 + n1, -1 + n2, n3, 1 + n4, n5, 1, 1 + n7, 0, 1 + n9, 1, 1, 
      -1, 1, 1])/(-1 + n2) - (2*n3*j[p4, -1 + n1, -1 + n2, 1 + n3, -1 + n4, 
      n5, 1, 1 + n7, 1, 1 + n9, 1, 1, -1, 1, 1])/(-1 + n2) + 
   (n3*j[p4, -1 + n1, -1 + n2, 1 + n3, n4, n5, 1, n7, 1, 1 + n9, 1, 1, -1, 1, 
      1])/(-1 + n2) + (2*n3*j[p4, -1 + n1, -1 + n2, 1 + n3, n4, n5, 1, 
      1 + n7, 0, 1 + n9, 1, 1, -1, 1, 1])/(-1 + n2) - 
   (n3*j[p4, -1 + n1, -1 + n2, 1 + n3, n4, n5, 1, 1 + n7, 1, 1 + n9, 1, 1, 
      -2, 1, 1])/(-1 + n2) + (n3*j[p4, -1 + n1, -1 + n2, 1 + n3, n4, n5, 1, 
      1 + n7, 1, 1 + n9, 1, 1, -1, 0, 1])/(-1 + n2) + 
   (n3*j[p4, -1 + n1, -1 + n2, 1 + n3, n4, n5, 1, 1 + n7, 1, 1 + n9, 1, 1, 
      -1, 1, 0])/(-1 + n2) + j[p4, -1 + n1, n2, n3, -1 + n4, n5, 1, 1 + n7, 
    1, 1 + n9, 1, 1, -1, 1, 1] + j[p4, -1 + n1, n2, n3, n4, -1 + n5, 1, 
    1 + n7, 1, 1 + n9, 1, 1, -1, 1, 1] - j[p4, -1 + n1, n2, n3, n4, n5, 0, 
    1 + n7, 1, 1 + n9, 1, 1, -1, 1, 1] + 
   ((1 + n7)*j[p4, n1, -3 + n2, n3, n4, n5, 1, 2 + n7, 1, 1 + n9, 1, 1, -1, 
      1, 1])/(-1 + n2) + (n3*j[p4, n1, -3 + n2, 1 + n3, n4, n5, 1, 1 + n7, 1, 
      1 + n9, 1, 1, -1, 1, 1])/(-1 + n2) + 
   ((1 + n7)*j[p4, n1, -2 + n2, n3, -1 + n4, n5, 1, 2 + n7, 1, 1 + n9, 1, 1, 
      -1, 1, 1])/(-1 + n2) + ((-1 - n7)*j[p4, n1, -2 + n2, n3, n4, -1 + n5, 
      1, 2 + n7, 1, 1 + n9, 1, 1, -1, 1, 1])/(-1 + n2) + 
   j[p4, n1, -2 + n2, n3, n4, n5, 0, 1 + n7, 1, 1 + n9, 2, 1, -1, 1, 1]/
    (-1 + n2) + ((-d + n2 + n3 + 2*n4 - n7)*j[p4, n1, -2 + n2, n3, n4, n5, 1, 
      1 + n7, 1, 1 + n9, 1, 1, -1, 1, 1])/(-1 + n2) + 
   ((-1 - n7)*j[p4, n1, -2 + n2, n3, n4, n5, 1, 2 + n7, 0, 1 + n9, 1, 1, -1, 
      1, 1])/(-1 + n2) + ((1 + n7)*j[p4, n1, -2 + n2, n3, n4, n5, 1, 2 + n7, 
      1, n9, 1, 1, -1, 1, 1])/(-1 + n2) + 
   (n4*j[p4, n1, -2 + n2, n3, 1 + n4, n5, 0, 1 + n7, 1, 1 + n9, 1, 1, -1, 1, 
      1])/(-1 + n2) - (n4*j[p4, n1, -2 + n2, n3, 1 + n4, n5, 1, 1 + n7, 0, 
      1 + n9, 1, 1, -1, 1, 1])/(-1 + n2) + 
   (n3*j[p4, n1, -2 + n2, 1 + n3, -1 + n4, n5, 1, 1 + n7, 1, 1 + n9, 1, 1, 
      -1, 1, 1])/(-1 + n2) - (2*n3*j[p4, n1, -2 + n2, 1 + n3, n4, n5, 1, n7, 
      1, 1 + n9, 1, 1, -1, 1, 1])/(-1 + n2) - 
   (2*n3*j[p4, n1, -2 + n2, 1 + n3, n4, n5, 1, 1 + n7, 0, 1 + n9, 1, 1, -1, 
      1, 1])/(-1 + n2) + (n3*j[p4, n1, -2 + n2, 1 + n3, n4, n5, 1, 1 + n7, 1, 
      n9, 1, 1, -1, 1, 1])/(-1 + n2) + 
   (n3*j[p4, n1, -2 + n2, 1 + n3, n4, n5, 1, 1 + n7, 1, 1 + n9, 1, 1, -2, 1, 
      1])/(-1 + n2) - (n3*j[p4, n1, -2 + n2, 1 + n3, n4, n5, 1, 1 + n7, 1, 
      1 + n9, 1, 1, -1, 0, 1])/(-1 + n2) - 
   (n3*j[p4, n1, -2 + n2, 1 + n3, n4, n5, 1, 1 + n7, 1, 1 + n9, 1, 1, -1, 1, 
      0])/(-1 + n2) + ((-3 + d - n2 - n3 - 2*n7)*j[p4, n1, -1 + n2, n3, 
      -1 + n4, n5, 1, 1 + n7, 1, 1 + n9, 1, 1, -1, 1, 1])/(-1 + n2) + 
   ((-1 - n7)*j[p4, n1, -1 + n2, n3, -1 + n4, n5, 1, 2 + n7, 1, 1 + n9, 0, 1, 
      -1, 1, 1])/(-1 + n2) + ((1 + n7)*j[p4, n1, -1 + n2, n3, -1 + n4, n5, 1, 
      2 + n7, 1, 1 + n9, 1, 0, -1, 1, 1])/(-1 + n2) + 
   j[p4, n1, -1 + n2, n3, -1 + n4, n5, 2, 1 + n7, 1, 1 + n9, 0, 1, -1, 1, 1]/
    (1 - n2) + ((2 - n2 + n7)*j[p4, n1, -1 + n2, n3, n4, -1 + n5, 1, 1 + n7, 
      1, 1 + n9, 1, 1, -1, 1, 1])/(-1 + n2) + 
   j[p4, n1, -1 + n2, n3, n4, n5, 0, n7, 1, 1 + n9, 2, 1, -1, 1, 1]/
    (1 - n2) + ((-1 + n2 - n4)*j[p4, n1, -1 + n2, n3, n4, n5, 0, 1 + n7, 1, 
      1 + n9, 1, 1, -1, 1, 1])/(-1 + n2) + 
   ((-1 + d - n2 - n3 - 2*n4)*j[p4, n1, -1 + n2, n3, n4, n5, 1, n7, 1, 
      1 + n9, 1, 1, -1, 1, 1])/(-1 + n2) + 
   (n7*j[p4, n1, -1 + n2, n3, n4, n5, 1, 1 + n7, 0, 1 + n9, 1, 1, -1, 1, 1])/
    (-1 + n2) + ((-2 + n2 - n7)*j[p4, n1, -1 + n2, n3, n4, n5, 1, 1 + n7, 1, 
      n9, 1, 1, -1, 1, 1])/(-1 + n2) + 
   j[p4, n1, -1 + n2, n3, n4, n5, 1, 1 + n7, 1, n9, 2, 0, -1, 1, 1]/
    (-1 + n2) + ((1 - n4)*j[p4, n1, -1 + n2, n3, n4, n5, 1, 1 + n7, 1, 
      1 + n9, 0, 1, -1, 1, 1])/(-1 + n2) + 
   ((-1 + n4)*j[p4, n1, -1 + n2, n3, n4, n5, 1, 1 + n7, 1, 1 + n9, 1, 0, -1, 
      1, 1])/(-1 + n2) + ((-1 - n7)*j[p4, n1, -1 + n2, n3, n4, n5, 1, 2 + n7, 
      0, n9, 1, 1, -1, 1, 1])/(-1 + n2) + 
   j[p4, n1, -1 + n2, n3, n4, n5, 2, 1 + n7, 0, n9, 1, 1, -1, 1, 1]/
    (-1 + n2) - (n4*j[p4, n1, -1 + n2, n3, 1 + n4, n5, 0, n7, 1, 1 + n9, 1, 
      1, -1, 1, 1])/(-1 + n2) + 
   (n4*j[p4, n1, -1 + n2, n3, 1 + n4, n5, 0, 1 + n7, 1, n9, 1, 1, -1, 1, 1])/
    (-1 + n2) + (n4*j[p4, n1, -1 + n2, n3, 1 + n4, n5, 1, n7, 0, 1 + n9, 1, 
      1, -1, 1, 1])/(-1 + n2) - 
   (n4*j[p4, n1, -1 + n2, n3, 1 + n4, n5, 1, 1 + n7, 0, n9, 1, 1, -1, 1, 1])/
    (-1 + n2) - (n3*j[p4, n1, -1 + n2, 1 + n3, -1 + n4, n5, 1, n7, 1, 1 + n9, 
      1, 1, -1, 1, 1])/(-1 + n2) + 
   (n3*j[p4, n1, -1 + n2, 1 + n3, -1 + n4, n5, 1, 1 + n7, 0, 1 + n9, 1, 1, 
      -1, 1, 1])/(-1 + n2) - (n3*j[p4, n1, -1 + n2, 1 + n3, -1 + n4, n5, 1, 
      1 + n7, 1, 1 + n9, 0, 1, -1, 1, 1])/(-1 + n2) + 
   (n3*j[p4, n1, -1 + n2, 1 + n3, -1 + n4, n5, 1, 1 + n7, 1, 1 + n9, 1, 0, 
      -1, 1, 1])/(-1 + n2) - (n3*j[p4, n1, -1 + n2, 1 + n3, -1 + n4, n5, 1, 
      1 + n7, 1, 1 + n9, 1, 1, -2, 1, 1])/(-1 + n2) + 
   (n3*j[p4, n1, -1 + n2, 1 + n3, -1 + n4, n5, 1, 1 + n7, 1, 1 + n9, 1, 1, 
      -1, 0, 1])/(-1 + n2) + (n3*j[p4, n1, -1 + n2, 1 + n3, -1 + n4, n5, 1, 
      1 + n7, 1, 1 + n9, 1, 1, -1, 1, 1])/(-1 + n2) + 
   (n3*j[p4, n1, -1 + n2, 1 + n3, n4, n5, 1, -1 + n7, 1, 1 + n9, 1, 1, -1, 1, 
      1])/(-1 + n2) + (2*n3*j[p4, n1, -1 + n2, 1 + n3, n4, n5, 1, n7, 0, 
      1 + n9, 1, 1, -1, 1, 1])/(-1 + n2) - 
   (n3*j[p4, n1, -1 + n2, 1 + n3, n4, n5, 1, n7, 1, n9, 1, 1, -1, 1, 1])/
    (-1 + n2) - (n3*j[p4, n1, -1 + n2, 1 + n3, n4, n5, 1, n7, 1, 1 + n9, 1, 
      1, -2, 1, 1])/(-1 + n2) + 
   (n3*j[p4, n1, -1 + n2, 1 + n3, n4, n5, 1, n7, 1, 1 + n9, 1, 1, -1, 0, 1])/
    (-1 + n2) + (n3*j[p4, n1, -1 + n2, 1 + n3, n4, n5, 1, n7, 1, 1 + n9, 1, 
      1, -1, 1, 0])/(-1 + n2) - 
   (2*n3*j[p4, n1, -1 + n2, 1 + n3, n4, n5, 1, 1 + n7, 0, n9, 1, 1, -1, 1, 
      1])/(-1 + n2) + (n3*j[p4, n1, -1 + n2, 1 + n3, n4, n5, 1, 1 + n7, 1, 
      n9, 1, 1, -2, 1, 1])/(-1 + n2) - 
   (n3*j[p4, n1, -1 + n2, 1 + n3, n4, n5, 1, 1 + n7, 1, n9, 1, 1, -1, 0, 1])/
    (-1 + n2) - j[p4, n1, n2, n3, -1 + n4, n5, 1, 1 + n7, 1, 1 + n9, 0, 1, 
    -1, 1, 1] + j[p4, n1, n2, n3, n4, -1 + n5, 1, n7, 1, 1 + n9, 1, 1, -1, 1, 
    1] - j[p4, n1, n2, n3, n4, n5, 0, n7, 1, 1 + n9, 1, 1, -1, 1, 1] + 
   j[p4, n1, n2, n3, n4, n5, 1, 1 + n7, 0, n9, 1, 1, -1, 1, 1], 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n6 == 1 && 
    n8 == 1 &&  !(n7 == 0 || n9 == 0) -> 
  ((-1 - n7)*j[p4, -1 + n1, -2 + n2, n3, n4, n5, 1, 2 + n7, 1, 1 + n9, 1, 1, 
      0, 1, 1])/(-1 + n2) - (n3*j[p4, -1 + n1, -2 + n2, 1 + n3, n4, n5, 1, 
      1 + n7, 1, 1 + n9, 1, 1, 0, 1, 1])/(-1 + n2) + 
   ((-1 - n7)*j[p4, -1 + n1, -1 + n2, n3, -1 + n4, n5, 1, 2 + n7, 1, 1 + n9, 
      1, 1, 0, 1, 1])/(-1 + n2) + 
   ((1 + n7)*j[p4, -1 + n1, -1 + n2, n3, n4, -1 + n5, 1, 2 + n7, 1, 1 + n9, 
      1, 1, 0, 1, 1])/(-1 + n2) + j[p4, -1 + n1, -1 + n2, n3, n4, n5, 0, 
     1 + n7, 1, 1 + n9, 2, 1, 0, 1, 1]/(1 - n2) + 
   ((-1 + d - n2 - n3 - 2*n4)*j[p4, -1 + n1, -1 + n2, n3, n4, n5, 1, 1 + n7, 
      1, 1 + n9, 1, 1, 0, 1, 1])/(-1 + n2) + 
   ((1 + n7)*j[p4, -1 + n1, -1 + n2, n3, n4, n5, 1, 2 + n7, 0, 1 + n9, 1, 1, 
      0, 1, 1])/(-1 + n2) - (n4*j[p4, -1 + n1, -1 + n2, n3, 1 + n4, n5, 0, 
      1 + n7, 1, 1 + n9, 1, 1, 0, 1, 1])/(-1 + n2) + 
   (n4*j[p4, -1 + n1, -1 + n2, n3, 1 + n4, n5, 1, 1 + n7, 0, 1 + n9, 1, 1, 0, 
      1, 1])/(-1 + n2) - (2*n3*j[p4, -1 + n1, -1 + n2, 1 + n3, -1 + n4, n5, 
      1, 1 + n7, 1, 1 + n9, 1, 1, 0, 1, 1])/(-1 + n2) + 
   (n3*j[p4, -1 + n1, -1 + n2, 1 + n3, n4, n5, 1, n7, 1, 1 + n9, 1, 1, 0, 1, 
      1])/(-1 + n2) + (2*n3*j[p4, -1 + n1, -1 + n2, 1 + n3, n4, n5, 1, 
      1 + n7, 0, 1 + n9, 1, 1, 0, 1, 1])/(-1 + n2) - 
   (n3*j[p4, -1 + n1, -1 + n2, 1 + n3, n4, n5, 1, 1 + n7, 1, 1 + n9, 1, 1, 
      -1, 1, 1])/(-1 + n2) + (n3*j[p4, -1 + n1, -1 + n2, 1 + n3, n4, n5, 1, 
      1 + n7, 1, 1 + n9, 1, 1, 0, 0, 1])/(-1 + n2) + 
   (n3*j[p4, -1 + n1, -1 + n2, 1 + n3, n4, n5, 1, 1 + n7, 1, 1 + n9, 1, 1, 0, 
      1, 0])/(-1 + n2) + j[p4, -1 + n1, n2, n3, -1 + n4, n5, 1, 1 + n7, 1, 
    1 + n9, 1, 1, 0, 1, 1] + j[p4, -1 + n1, n2, n3, n4, -1 + n5, 1, 1 + n7, 
    1, 1 + n9, 1, 1, 0, 1, 1] - j[p4, -1 + n1, n2, n3, n4, n5, 0, 1 + n7, 1, 
    1 + n9, 1, 1, 0, 1, 1] + ((1 + n7)*j[p4, n1, -3 + n2, n3, n4, n5, 1, 
      2 + n7, 1, 1 + n9, 1, 1, 0, 1, 1])/(-1 + n2) + 
   (n3*j[p4, n1, -3 + n2, 1 + n3, n4, n5, 1, 1 + n7, 1, 1 + n9, 1, 1, 0, 1, 
      1])/(-1 + n2) + ((1 + n7)*j[p4, n1, -2 + n2, n3, -1 + n4, n5, 1, 
      2 + n7, 1, 1 + n9, 1, 1, 0, 1, 1])/(-1 + n2) + 
   ((-1 - n7)*j[p4, n1, -2 + n2, n3, n4, -1 + n5, 1, 2 + n7, 1, 1 + n9, 1, 1, 
      0, 1, 1])/(-1 + n2) + j[p4, n1, -2 + n2, n3, n4, n5, 0, 1 + n7, 1, 
     1 + n9, 2, 1, 0, 1, 1]/(-1 + n2) + 
   ((-d + n2 + n3 + 2*n4 - n7)*j[p4, n1, -2 + n2, n3, n4, n5, 1, 1 + n7, 1, 
      1 + n9, 1, 1, 0, 1, 1])/(-1 + n2) + 
   ((-1 - n7)*j[p4, n1, -2 + n2, n3, n4, n5, 1, 2 + n7, 0, 1 + n9, 1, 1, 0, 
      1, 1])/(-1 + n2) + ((1 + n7)*j[p4, n1, -2 + n2, n3, n4, n5, 1, 2 + n7, 
      1, n9, 1, 1, 0, 1, 1])/(-1 + n2) + 
   (n4*j[p4, n1, -2 + n2, n3, 1 + n4, n5, 0, 1 + n7, 1, 1 + n9, 1, 1, 0, 1, 
      1])/(-1 + n2) - (n4*j[p4, n1, -2 + n2, n3, 1 + n4, n5, 1, 1 + n7, 0, 
      1 + n9, 1, 1, 0, 1, 1])/(-1 + n2) + 
   (n3*j[p4, n1, -2 + n2, 1 + n3, -1 + n4, n5, 1, 1 + n7, 1, 1 + n9, 1, 1, 0, 
      1, 1])/(-1 + n2) - (2*n3*j[p4, n1, -2 + n2, 1 + n3, n4, n5, 1, n7, 1, 
      1 + n9, 1, 1, 0, 1, 1])/(-1 + n2) - 
   (2*n3*j[p4, n1, -2 + n2, 1 + n3, n4, n5, 1, 1 + n7, 0, 1 + n9, 1, 1, 0, 1, 
      1])/(-1 + n2) + (n3*j[p4, n1, -2 + n2, 1 + n3, n4, n5, 1, 1 + n7, 1, 
      n9, 1, 1, 0, 1, 1])/(-1 + n2) + 
   (n3*j[p4, n1, -2 + n2, 1 + n3, n4, n5, 1, 1 + n7, 1, 1 + n9, 1, 1, -1, 1, 
      1])/(-1 + n2) - (n3*j[p4, n1, -2 + n2, 1 + n3, n4, n5, 1, 1 + n7, 1, 
      1 + n9, 1, 1, 0, 0, 1])/(-1 + n2) - 
   (n3*j[p4, n1, -2 + n2, 1 + n3, n4, n5, 1, 1 + n7, 1, 1 + n9, 1, 1, 0, 1, 
      0])/(-1 + n2) + ((-3 + d - n2 - n3 - 2*n7)*j[p4, n1, -1 + n2, n3, 
      -1 + n4, n5, 1, 1 + n7, 1, 1 + n9, 1, 1, 0, 1, 1])/(-1 + n2) + 
   ((-1 - n7)*j[p4, n1, -1 + n2, n3, -1 + n4, n5, 1, 2 + n7, 1, 1 + n9, 0, 1, 
      0, 1, 1])/(-1 + n2) + ((1 + n7)*j[p4, n1, -1 + n2, n3, -1 + n4, n5, 1, 
      2 + n7, 1, 1 + n9, 1, 0, 0, 1, 1])/(-1 + n2) + 
   j[p4, n1, -1 + n2, n3, -1 + n4, n5, 2, 1 + n7, 1, 1 + n9, 0, 1, 0, 1, 1]/
    (1 - n2) + ((2 - n2 + n7)*j[p4, n1, -1 + n2, n3, n4, -1 + n5, 1, 1 + n7, 
      1, 1 + n9, 1, 1, 0, 1, 1])/(-1 + n2) + 
   j[p4, n1, -1 + n2, n3, n4, n5, 0, n7, 1, 1 + n9, 2, 1, 0, 1, 1]/(1 - n2) + 
   ((-1 + n2 - n4)*j[p4, n1, -1 + n2, n3, n4, n5, 0, 1 + n7, 1, 1 + n9, 1, 1, 
      0, 1, 1])/(-1 + n2) + ((-1 + d - n2 - n3 - 2*n4)*
     j[p4, n1, -1 + n2, n3, n4, n5, 1, n7, 1, 1 + n9, 1, 1, 0, 1, 1])/
    (-1 + n2) + (n7*j[p4, n1, -1 + n2, n3, n4, n5, 1, 1 + n7, 0, 1 + n9, 1, 
      1, 0, 1, 1])/(-1 + n2) + 
   ((-2 + n2 - n7)*j[p4, n1, -1 + n2, n3, n4, n5, 1, 1 + n7, 1, n9, 1, 1, 0, 
      1, 1])/(-1 + n2) + j[p4, n1, -1 + n2, n3, n4, n5, 1, 1 + n7, 1, n9, 2, 
     0, 0, 1, 1]/(-1 + n2) + ((1 - n4)*j[p4, n1, -1 + n2, n3, n4, n5, 1, 
      1 + n7, 1, 1 + n9, 0, 1, 0, 1, 1])/(-1 + n2) + 
   ((-1 + n4)*j[p4, n1, -1 + n2, n3, n4, n5, 1, 1 + n7, 1, 1 + n9, 1, 0, 0, 
      1, 1])/(-1 + n2) + ((-1 - n7)*j[p4, n1, -1 + n2, n3, n4, n5, 1, 2 + n7, 
      0, n9, 1, 1, 0, 1, 1])/(-1 + n2) + 
   j[p4, n1, -1 + n2, n3, n4, n5, 2, 1 + n7, 0, n9, 1, 1, 0, 1, 1]/
    (-1 + n2) - (n4*j[p4, n1, -1 + n2, n3, 1 + n4, n5, 0, n7, 1, 1 + n9, 1, 
      1, 0, 1, 1])/(-1 + n2) + 
   (n4*j[p4, n1, -1 + n2, n3, 1 + n4, n5, 0, 1 + n7, 1, n9, 1, 1, 0, 1, 1])/
    (-1 + n2) + (n4*j[p4, n1, -1 + n2, n3, 1 + n4, n5, 1, n7, 0, 1 + n9, 1, 
      1, 0, 1, 1])/(-1 + n2) - 
   (n4*j[p4, n1, -1 + n2, n3, 1 + n4, n5, 1, 1 + n7, 0, n9, 1, 1, 0, 1, 1])/
    (-1 + n2) - (n3*j[p4, n1, -1 + n2, 1 + n3, -1 + n4, n5, 1, n7, 1, 1 + n9, 
      1, 1, 0, 1, 1])/(-1 + n2) + 
   (n3*j[p4, n1, -1 + n2, 1 + n3, -1 + n4, n5, 1, 1 + n7, 0, 1 + n9, 1, 1, 0, 
      1, 1])/(-1 + n2) - (n3*j[p4, n1, -1 + n2, 1 + n3, -1 + n4, n5, 1, 
      1 + n7, 1, 1 + n9, 0, 1, 0, 1, 1])/(-1 + n2) + 
   (n3*j[p4, n1, -1 + n2, 1 + n3, -1 + n4, n5, 1, 1 + n7, 1, 1 + n9, 1, 0, 0, 
      1, 1])/(-1 + n2) - (n3*j[p4, n1, -1 + n2, 1 + n3, -1 + n4, n5, 1, 
      1 + n7, 1, 1 + n9, 1, 1, -1, 1, 1])/(-1 + n2) + 
   (n3*j[p4, n1, -1 + n2, 1 + n3, -1 + n4, n5, 1, 1 + n7, 1, 1 + n9, 1, 1, 0, 
      0, 1])/(-1 + n2) + (n3*j[p4, n1, -1 + n2, 1 + n3, -1 + n4, n5, 1, 
      1 + n7, 1, 1 + n9, 1, 1, 0, 1, 1])/(-1 + n2) + 
   (n3*j[p4, n1, -1 + n2, 1 + n3, n4, n5, 1, -1 + n7, 1, 1 + n9, 1, 1, 0, 1, 
      1])/(-1 + n2) + (2*n3*j[p4, n1, -1 + n2, 1 + n3, n4, n5, 1, n7, 0, 
      1 + n9, 1, 1, 0, 1, 1])/(-1 + n2) - 
   (n3*j[p4, n1, -1 + n2, 1 + n3, n4, n5, 1, n7, 1, n9, 1, 1, 0, 1, 1])/
    (-1 + n2) - (n3*j[p4, n1, -1 + n2, 1 + n3, n4, n5, 1, n7, 1, 1 + n9, 1, 
      1, -1, 1, 1])/(-1 + n2) + 
   (n3*j[p4, n1, -1 + n2, 1 + n3, n4, n5, 1, n7, 1, 1 + n9, 1, 1, 0, 0, 1])/
    (-1 + n2) + (n3*j[p4, n1, -1 + n2, 1 + n3, n4, n5, 1, n7, 1, 1 + n9, 1, 
      1, 0, 1, 0])/(-1 + n2) - 
   (2*n3*j[p4, n1, -1 + n2, 1 + n3, n4, n5, 1, 1 + n7, 0, n9, 1, 1, 0, 1, 1])/
    (-1 + n2) + (n3*j[p4, n1, -1 + n2, 1 + n3, n4, n5, 1, 1 + n7, 1, n9, 1, 
      1, -1, 1, 1])/(-1 + n2) - 
   (n3*j[p4, n1, -1 + n2, 1 + n3, n4, n5, 1, 1 + n7, 1, n9, 1, 1, 0, 0, 1])/
    (-1 + n2) - j[p4, n1, n2, n3, -1 + n4, n5, 1, 1 + n7, 1, 1 + n9, 0, 1, 0, 
    1, 1] + j[p4, n1, n2, n3, n4, -1 + n5, 1, n7, 1, 1 + n9, 1, 1, 0, 1, 1] - 
   j[p4, n1, n2, n3, n4, n5, 0, n7, 1, 1 + n9, 1, 1, 0, 1, 1] + 
   j[p4, n1, n2, n3, n4, n5, 1, 1 + n7, 0, n9, 1, 1, 0, 1, 1], 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n12 == 0 && n2 == 0 && n3 == 0 && n4 == 0 && n5 == 0 && 
    n7 == 0 && n9 == 0 &&  !(n11 == 1 || n13 == 1) -> 
  j[p4, 0, 0, 0, 0, 0, n6, 0, -1 + n8, 0, n10, n11, 0, n13, n14] + 
   ((-1 - d + n11 + 2*n8)*j[p4, 0, 0, 0, 0, 0, n6, 0, n8, 0, n10, -1 + n11, 
      0, n13, n14])/(-1 + n11) + ((-1 - 2*d + 2*n11 + n13 + 2*n8)*
     j[p4, 0, 0, 0, 0, 0, n6, 0, n8, 0, n10, n11, 0, -1 + n13, n14])/
    (-1 + n13), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?NonPositive, (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, 
    (n7_)?NonPositive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n11 == 1 && n12 == 0 && n2 == 0 && n4 == 0 && n5 == 0 && 
    n7 == 0 && n9 == 0 &&  !(n13 == 1 || n8 == 1) -> 
  -((n3*j[p4, -1, 0, 1 + n3, 0, 0, n6, 0, -1 + n8, 0, n10, 1, 0, n13, n14])/
     (-1 + n8)) - (n3*j[p4, 0, -1, 1 + n3, 0, 0, n6, 0, n8, 0, n10, 1, 0, 
      -1 + n13, n14])/(-1 + n13) + 
   ((1 - d + n8)*j[p4, 0, 0, n3, 0, 0, n6, 0, -1 + n8, 0, n10, 1, 0, n13, 
      n14])/(-1 + n8) + j[p4, 0, 0, n3, 0, 0, n6, 0, n8, 0, n10, 0, 0, n13, 
    n14] + ((1 - 2*d + n13 + 2*n8)*j[p4, 0, 0, n3, 0, 0, n6, 0, n8, 0, n10, 
      1, 0, -1 + n13, n14])/(-1 + n13) + 
   (n3*j[p4, 0, 0, 1 + n3, 0, 0, n6, -1, -1 + n8, 0, n10, 1, 0, n13, n14])/
    (-1 + n8) + (n3*j[p4, 0, 0, 1 + n3, 0, 0, n6, -1, n8, 0, n10, 1, 0, 
      -1 + n13, n14])/(-1 + n13) + 
   (n3*j[p4, 0, 0, 1 + n3, 0, 0, n6, 0, -2 + n8, 0, n10, 1, 0, n13, n14])/
    (-1 + n8) - (n3*j[p4, 0, 0, 1 + n3, 0, 0, n6, 0, -1 + n8, 0, -1 + n10, 1, 
      0, n13, n14])/(-1 + n8) + 
   (n3*j[p4, 0, 0, 1 + n3, 0, 0, n6, 0, -1 + n8, 0, n10, 0, 0, n13, n14])/
    (-1 + n8) - (n3*j[p4, 0, 0, 1 + n3, 0, 0, n6, 0, -1 + n8, 0, n10, 1, -1, 
      n13, n14])/(-1 + n8) + (2*n3*j[p4, 0, 0, 1 + n3, 0, 0, n6, 0, -1 + n8, 
      0, n10, 1, 0, -1 + n13, n14])/(-1 + n13) + 
   (n3*j[p4, 0, 0, 1 + n3, 0, 0, n6, 0, -1 + n8, 0, n10, 1, 0, n13, n14])/
    (-1 + n8) - (n3*j[p4, 0, 0, 1 + n3, 0, 0, n6, 0, n8, 0, n10, 1, -1, 
      -1 + n13, n14])/(-1 + n13) + 
   (n3*j[p4, 0, 0, 1 + n3, 0, 0, n6, 0, n8, 0, n10, 1, 0, -2 + n13, n14])/
    (-1 + n13), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?NonPositive, (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, 
    (n7_)?NonPositive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n14 == 1 && n3 == 0 && n5 == 0 && 
    n7 == 0 && n9 == 0 &&  !(n11 == 1 || n8 == 1) -> 
  (n4*j[p4, 0, n2, -1, 1 + n4, 0, n6, 0, -1 + n8, 0, 1, n11, 0, n13, 1])/
    (-1 + n8) + ((-1 - d + 2*n13 + n8)*j[p4, 0, n2, 0, n4, 0, n6, 0, -1 + n8, 
      0, 1, n11, 0, n13, 1])/(-1 + n8) + 
   ((-1 - 2*d + n11 + 2*n13 + n4 + 2*n8)*j[p4, 0, n2, 0, n4, 0, n6, 0, n8, 0, 
      1, -1 + n11, 0, n13, 1])/(-1 + n11) + j[p4, 0, n2, 0, n4, 0, n6, 0, n8, 
    0, 1, n11, 0, -1 + n13, 1] + 
   (n4*j[p4, 0, n2, 0, 1 + n4, -1, n6, 0, -1 + n8, 0, 1, n11, 0, n13, 1])/
    (-1 + n8) - (n4*j[p4, 0, n2, 0, 1 + n4, 0, -1 + n6, 0, n8, 0, 1, 
      -1 + n11, 0, n13, 1])/(-1 + n11) - 
   (n4*j[p4, 0, n2, 0, 1 + n4, 0, n6, -1, -1 + n8, 0, 1, n11, 0, n13, 1])/
    (-1 + n8) + (n4*j[p4, 0, n2, 0, 1 + n4, 0, n6, 0, -1 + n8, 0, 1, 
      -1 + n11, 0, n13, 1])/(-1 + n11) - 
   (n4*j[p4, 0, n2, 0, 1 + n4, 0, n6, 0, -1 + n8, 0, 1, n11, 0, n13, 0])/
    (-1 + n8) - (n2*j[p4, 0, 1 + n2, -1, n4, 0, n6, 0, -1 + n8, 0, 1, n11, 0, 
      n13, 1])/(-1 + n8) - (n2*j[p4, 0, 1 + n2, -1, n4, 0, n6, 0, n8, 0, 1, 
      -1 + n11, 0, n13, 1])/(-1 + n11) + 
   (n2*j[p4, 0, 1 + n2, 0, n4, 0, n6, -1, -1 + n8, 0, 1, n11, 0, n13, 1])/
    (-1 + n8) + (n2*j[p4, 0, 1 + n2, 0, n4, 0, n6, -1, n8, 0, 1, -1 + n11, 0, 
      n13, 1])/(-1 + n11) + (n2*j[p4, 0, 1 + n2, 0, n4, 0, n6, 0, -2 + n8, 0, 
      1, n11, 0, n13, 1])/(-1 + n8) + 
   (n2*j[p4, 0, 1 + n2, 0, n4, 0, n6, 0, -1 + n8, 0, 1, -1 + n11, 0, n13, 1])/
    (-1 + n11) - (n2*j[p4, 0, 1 + n2, 0, n4, 0, n6, 0, -1 + n8, 0, 1, n11, 
      -1, n13, 1])/(-1 + n8) + 
   (2*n2*j[p4, 0, 1 + n2, 0, n4, 0, n6, 0, -1 + n8, 0, 1, n11, 0, -1 + n13, 
      1])/(-1 + n8) - (n2*j[p4, 0, 1 + n2, 0, n4, 0, n6, 0, n8, 0, 1, 
      -1 + n11, -1, n13, 1])/(-1 + n11) + 
   (2*n2*j[p4, 0, 1 + n2, 0, n4, 0, n6, 0, n8, 0, 1, -1 + n11, 0, -1 + n13, 
      1])/(-1 + n11), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?NonPositive, (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, 
    (n7_)?NonPositive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n13 == 1 && n4 == 0 && n5 == 0 && 
    n7 == 0 && n9 == 0 &&  !(n11 == 1 || n3 == 0 || n6 == 1) -> 
  -j[p4, 0, -1 + n2, 1 + n3, 0, 0, n6, 0, n8, 0, 1, n11, 0, 1, n14] + 
   (n8*j[p4, 0, -1 + n2, 1 + n3, 0, 0, n6, 0, 1 + n8, 0, 1, -1 + n11, 0, 1, 
      n14])/(-1 + n11) + ((-1 - n3)*j[p4, 0, -1 + n2, 2 + n3, 0, 0, n6, 0, 
      n8, 0, 1, -1 + n11, 0, 1, n14])/(-1 + n11) + 
   ((-1 - d + 2*n14 + n6)*j[p4, 0, n2, 1 + n3, 0, 0, -1 + n6, 0, n8, 0, 1, 
      n11, 0, 1, n14])/(-1 + n6) - 
   (n8*j[p4, 0, n2, 1 + n3, 0, 0, n6, -1, 1 + n8, 0, 1, -1 + n11, 0, 1, n14])/
    (-1 + n11) + j[p4, 0, n2, 1 + n3, 0, 0, n6, 0, -1 + n8, 0, 1, n11, 0, 1, 
    n14] + j[p4, 0, n2, 1 + n3, 0, 0, n6, 0, n8, 0, 0, n11, 0, 1, n14] + 
   ((-2 - 2*n3)*j[p4, 0, n2, 1 + n3, 0, 0, n6, 0, n8, 0, 1, -1 + n11, 0, 1, 
      n14])/(-1 + n11) + j[p4, 0, n2, 1 + n3, 0, 0, n6, 0, n8, 0, 1, n11, 0, 
    0, n14] + j[p4, 0, n2, 1 + n3, 0, 0, n6, 0, n8, 0, 1, n11, 0, 1, 
    -1 + n14] - j[p4, 0, n2, 1 + n3, 0, 0, n6, 0, n8, 0, 1, n11, 0, 1, n14] + 
   (n8*j[p4, 0, n2, 1 + n3, 0, 0, n6, 0, 1 + n8, 0, 1, -1 + n11, -1, 1, n14])/
    (-1 + n11) - (n8*j[p4, 0, n2, 1 + n3, 0, 0, n6, 0, 1 + n8, 0, 1, 
      -1 + n11, 0, 0, n14])/(-1 + n11) + 
   ((1 + n3)*j[p4, 0, n2, 2 + n3, 0, 0, n6, -1, n8, 0, 1, -1 + n11, 0, 1, 
      n14])/(-1 + n11) + ((2 + 2*n3)*j[p4, 0, n2, 2 + n3, 0, 0, n6, 0, 
      -1 + n8, 0, 1, -1 + n11, 0, 1, n14])/(-1 + n11) + 
   ((-1 - n3)*j[p4, 0, n2, 2 + n3, 0, 0, n6, 0, n8, 0, 1, -1 + n11, -1, 1, 
      n14])/(-1 + n11) + ((1 + n3)*j[p4, 0, n2, 2 + n3, 0, 0, n6, 0, n8, 0, 
      1, -1 + n11, 0, 0, n14])/(-1 + n11), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n3 == 0 && 
    n7 == 0 && n9 == 0 &&  !(n11 == 1 || n5 == 0 || n6 == 1) -> 
  -((n4*j[p4, -1, n2, 0, 1 + n4, 1 + n5, -1 + n6, 0, n8, 0, 2, -1 + n11, 0, 
       1, 1])/((-1 + n11)*(-1 + n6))) + j[p4, 0, -1 + n2, 0, n4, 1 + n5, n6, 
    0, n8, 0, 1, n11, 0, 1, 1] + 
   (n4*j[p4, 0, -1 + n2, 0, 1 + n4, 1 + n5, -1 + n6, 0, n8, 0, 2, -1 + n11, 
      0, 1, 1])/((-1 + n11)*(-1 + n6)) + j[p4, 0, n2, 0, -1 + n4, 1 + n5, n6, 
    0, n8, 0, 1, n11, 0, 1, 1] + 
   (n8*j[p4, 0, n2, 0, -1 + n4, 1 + n5, n6, 0, 1 + n8, 0, 1, -1 + n11, 0, 1, 
      1])/(-1 + n11) + ((2 - d + n2 + n4)*j[p4, 0, n2, 0, n4, 1 + n5, 
      -1 + n6, 0, n8, 0, 1, n11, 0, 1, 1])/(-1 + n6) + 
   ((n8 - n2*n8 + n4*n8 - n6*n8)*j[p4, 0, n2, 0, n4, 1 + n5, -1 + n6, 0, 
      1 + n8, 0, 1, -1 + n11, 0, 1, 1])/((-1 + n11)*(-1 + n6)) - 
   j[p4, 0, n2, 0, n4, 1 + n5, n6, 0, -1 + n8, 0, 1, n11, 0, 1, 1] - 
   (n8*j[p4, 0, n2, 0, n4, 1 + n5, n6, 0, n8, 0, 1, -1 + n11, 0, 1, 1])/
    (-1 + n11) - (n4*j[p4, 0, n2, 0, 1 + n4, n5, -1 + n6, 0, n8, 0, 1, n11, 
      0, 1, 1])/(-1 + n6) - (n4*j[p4, 0, n2, 0, 1 + n4, 1 + n5, -2 + n6, 0, 
      n8, 0, 2, -1 + n11, 0, 1, 1])/((-1 + n11)*(-1 + n6)) - 
   (n4*n8*j[p4, 0, n2, 0, 1 + n4, 1 + n5, -2 + n6, 0, 1 + n8, 0, 1, -1 + n11, 
      0, 1, 1])/((-1 + n11)*(-1 + n6)) + 
   (n4*j[p4, 0, n2, 0, 1 + n4, 1 + n5, -1 + n6, -1, n8, 0, 1, n11, 0, 1, 1])/
    (-1 + n6) - (n4*j[p4, 0, n2, 0, 1 + n4, 1 + n5, -1 + n6, -1, n8, 0, 2, 
      -1 + n11, 0, 1, 1])/((-1 + n11)*(-1 + n6)) + 
   (n4*j[p4, 0, n2, 0, 1 + n4, 1 + n5, -1 + n6, 0, n8, -1, 2, -1 + n11, 0, 1, 
      1])/((-1 + n11)*(-1 + n6)) + 
   ((-n4 + n4*n8)*j[p4, 0, n2, 0, 1 + n4, 1 + n5, -1 + n6, 0, n8, 0, 1, 
      -1 + n11, 0, 1, 1])/((-1 + n11)*(-1 + n6)) + 
   (n4*j[p4, 0, n2, 0, 1 + n4, 1 + n5, -1 + n6, 0, n8, 0, 2, -2 + n11, 0, 1, 
      1])/((-1 + n11)*(-1 + n6)) + 
   (n2*j[p4, 0, 1 + n2, 0, n4, 1 + n5, -1 + n6, -1, n8, 0, 1, n11, 0, 1, 1])/
    (-1 + n6) + (n2*n8*j[p4, 0, 1 + n2, 0, n4, 1 + n5, -1 + n6, -1, 1 + n8, 
      0, 1, -1 + n11, 0, 1, 1])/((-1 + n11)*(-1 + n6)) - 
   (n2*j[p4, 0, 1 + n2, 0, n4, 1 + n5, -1 + n6, 0, -1 + n8, 0, 1, n11, 0, 1, 
      1])/(-1 + n6) - (n2*n8*j[p4, 0, 1 + n2, 0, n4, 1 + n5, -1 + n6, 0, n8, 
      0, 1, -1 + n11, 0, 1, 1])/((-1 + n11)*(-1 + n6)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n14 == 1 && n5 == 0 && 
    n7 == 0 && n9 == 0 &&  !(n13 == 1 || n2 == 0 || n6 == 1) -> 
  -((n8*j[p4, 0, n2, n3, n4, 0, n6, 0, 1 + n8, 0, 1, 1, 0, -1 + n13, 1])/
     (-1 + n13)) + (n3*j[p4, 0, n2, 1 + n3, n4, 0, n6, 0, n8, 0, 1, 1, 0, 
      -1 + n13, 1])/(-1 + n13) - 
   (n4*j[p4, 0, 1 + n2, -1 + n3, 1 + n4, 0, -1 + n6, 0, n8, 0, 1, 1, 0, n13, 
      1])/(-1 + n6) + (n4*j[p4, 0, 1 + n2, -1 + n3, 1 + n4, 0, n6, 0, n8, 0, 
      1, 1, 0, -1 + n13, 1])/(-1 + n13) + 
   ((1 - d + n4 + n6)*j[p4, 0, 1 + n2, n3, n4, 0, -1 + n6, 0, n8, 0, 1, 1, 0, 
      n13, 1])/(-1 + n6) + (n8*j[p4, 0, 1 + n2, n3, n4, 0, n6, -1, 1 + n8, 0, 
      1, 1, 0, -1 + n13, 1])/(-1 + n13) + 
   ((-3 + n13 - 2*n2 + 2*n3)*j[p4, 0, 1 + n2, n3, n4, 0, n6, 0, n8, 0, 1, 1, 
      0, -1 + n13, 1])/(-1 + n13) + j[p4, 0, 1 + n2, n3, n4, 0, n6, 0, n8, 0, 
    1, 1, 0, n13, 0] - (n8*j[p4, 0, 1 + n2, n3, n4, 0, n6, 0, 1 + n8, 0, 1, 
      1, -1, -1 + n13, 1])/(-1 + n13) + 
   (n8*j[p4, 0, 1 + n2, n3, n4, 0, n6, 0, 1 + n8, 0, 1, 1, 0, -2 + n13, 1])/
    (-1 + n13) + (n4*j[p4, 0, 1 + n2, n3, 1 + n4, 0, -1 + n6, 0, n8, 0, 1, 1, 
      0, -1 + n13, 1])/(-1 + n13) + 
   (n4*j[p4, 0, 1 + n2, n3, 1 + n4, 0, -1 + n6, 0, n8, 0, 1, 1, 0, n13, 0])/
    (-1 + n6) - (n4*j[p4, 0, 1 + n2, n3, 1 + n4, 0, n6, 0, -1 + n8, 0, 1, 1, 
      0, -1 + n13, 1])/(-1 + n13) - 
   (n4*j[p4, 0, 1 + n2, n3, 1 + n4, 0, n6, 0, n8, 0, 1, 1, 0, -1 + n13, 0])/
    (-1 + n13) - (n3*j[p4, 0, 1 + n2, 1 + n3, n4, 0, n6, -1, n8, 0, 1, 1, 0, 
      -1 + n13, 1])/(-1 + n13) - 
   (2*n3*j[p4, 0, 1 + n2, 1 + n3, n4, 0, n6, 0, -1 + n8, 0, 1, 1, 0, 
      -1 + n13, 1])/(-1 + n13) + 
   (n3*j[p4, 0, 1 + n2, 1 + n3, n4, 0, n6, 0, n8, 0, 1, 1, -1, -1 + n13, 1])/
    (-1 + n13) - (n3*j[p4, 0, 1 + n2, 1 + n3, n4, 0, n6, 0, n8, 0, 1, 1, 0, 
      -2 + n13, 1])/(-1 + n13) + 
   ((-1 - n2)*j[p4, 0, 2 + n2, -1 + n3, n4, 0, n6, 0, n8, 0, 1, 1, 0, 
      -1 + n13, 1])/(-1 + n13) + 
   ((1 + n2)*j[p4, 0, 2 + n2, n3, n4, 0, n6, -1, n8, 0, 1, 1, 0, -1 + n13, 
      1])/(-1 + n13) + ((1 + n2)*j[p4, 0, 2 + n2, n3, n4, 0, n6, 0, -1 + n8, 
      0, 1, 1, 0, -1 + n13, 1])/(-1 + n13) + 
   ((-1 - n2)*j[p4, 0, 2 + n2, n3, n4, 0, n6, 0, n8, 0, 1, 1, -1, -1 + n13, 
      1])/(-1 + n13) + ((2 + 2*n2)*j[p4, 0, 2 + n2, n3, n4, 0, n6, 0, n8, 0, 
      1, 1, 0, -2 + n13, 1])/(-1 + n13), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n4 == 0 && 
    n5 == 0 && n9 == 0 &&  !(n6 == 1 || n7 == 0 || n8 == 1) -> 
  j[p4, 0, -1 + n2, n3, 0, 0, n6, 1 + n7, n8, 0, 1, 1, 0, 1, n14] + 
   j[p4, 0, n2, -1 + n3, 0, 0, n6, 1 + n7, n8, 0, 1, 1, 0, 1, n14] + 
   ((1 + d - 2*n14 - n6)*j[p4, 0, n2, n3, 0, 0, -1 + n6, 1 + n7, n8, 0, 1, 1, 
      0, 1, n14])/(-1 + n6) + 
   ((2 - d + n3)*j[p4, 0, n2, n3, 0, 0, n6, 1 + n7, -1 + n8, 0, 1, 1, 0, 1, 
      n14])/(-1 + n8) - j[p4, 0, n2, n3, 0, 0, n6, 1 + n7, n8, 0, 1, 1, 0, 1, 
    -1 + n14] - (n3*j[p4, 0, n2, 1 + n3, 0, 0, n6, n7, -1 + n8, 0, 1, 1, 0, 
      1, n14])/(-1 + n8) + (n3*j[p4, 0, n2, 1 + n3, 0, 0, n6, 1 + n7, 
      -1 + n8, 0, 1, 1, 0, 0, n14])/(-1 + n8) - 
   (n2*j[p4, 0, 1 + n2, -1 + n3, 0, 0, n6, 1 + n7, -1 + n8, 0, 1, 1, 0, 1, 
      n14])/(-1 + n8) + (n2*j[p4, 0, 1 + n2, n3, 0, 0, n6, n7, -1 + n8, 0, 1, 
      1, 0, 1, n14])/(-1 + n8) + 
   (n2*j[p4, 0, 1 + n2, n3, 0, 0, n6, 1 + n7, -2 + n8, 0, 1, 1, 0, 1, n14])/
    (-1 + n8) - (n2*j[p4, 0, 1 + n2, n3, 0, 0, n6, 1 + n7, -1 + n8, 0, 1, 1, 
      -1, 1, n14])/(-1 + n8) + 
   (2*n2*j[p4, 0, 1 + n2, n3, 0, 0, n6, 1 + n7, -1 + n8, 0, 1, 1, 0, 0, n14])/
    (-1 + n8), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n7 == 0 && n9 == 0 &&  !(n5 == 0 || n6 == 1) -> 
  ((4 - d + 2*n5)*j[p4, 0, -1 + n2, n3, n4, 1 + n5, n6, 0, n8, 0, 1, 1, 0, 1, 
      1])/(2*(2 - d + n4 + n5 + n6)) + 
   ((-4 + d)*j[p4, 0, n2, n3, n4, 1 + n5, -1 + n6, 0, n8, 0, 1, 1, 0, 0, 2])/
    (2*(-2 + d - n4 - n5 - n6)*(-1 + n6)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, n3, n4, 1 + n5, -1 + n6, 0, n8, 0, 1, 1, 0, 
      1, 1])/(2*(-1 + n6)) - (n4*j[p4, 0, n2, n3, 1 + n4, n5, -1 + n6, 0, n8, 
      0, 1, 1, 0, 1, 1])/(-1 + n6) + 
   (n4*j[p4, 0, n2, n3, 1 + n4, n5, n6, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (2 - d + n4 + n5 + n6) + ((4*n4 - d*n4 + 2*n4*n5)*
     j[p4, 0, n2, n3, 1 + n4, 1 + n5, -1 + n6, -1, n8, 0, 1, 1, 0, 1, 1])/
    (2*(-1 + n6)*(2 - d + n4 + n5 + n6)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && n7 == 0 && 
    n8 == 1 && n9 == 0 &&  !(n10 == 1 || n6 == 1) -> 
  (n3*j[p4, n1, -1, 1 + n3, n4, n5, n6, 0, 1, 0, -1 + n10, 1, 0, 1, 1])/
    (-1 + n10) - (n4*j[p4, n1, 0, -1 + n3, 1 + n4, n5, -1 + n6, 0, 1, 0, n10, 
      1, 0, 1, 1])/(-1 + n6) + ((1 - d + n4 + n5 + n6)*
     j[p4, n1, 0, n3, n4, n5, -1 + n6, 0, 1, 0, n10, 1, 0, 1, 1])/(-1 + n6) + 
   ((1 - 2*d + n10 + 2*n3 + n4 + n5 + 2*n6)*j[p4, n1, 0, n3, n4, n5, n6, 0, 
      1, 0, -1 + n10, 1, 0, 1, 1])/(-1 + n10) + j[p4, n1, 0, n3, n4, n5, n6, 
    0, 1, 0, n10, 1, 0, 1, 0] - 
   (n5*j[p4, n1, 0, n3, n4, 1 + n5, -1 + n6, 0, 1, 0, n10, 1, 0, 0, 1])/
    (-1 + n6) + (n5*j[p4, n1, 0, n3, n4, 1 + n5, -1 + n6, 0, 1, 0, n10, 1, 0, 
      1, 0])/(-1 + n6) - (n5*j[p4, n1, 0, n3, n4, 1 + n5, n6, 0, 1, 0, 
      -1 + n10, 1, 0, 0, 1])/(-1 + n10) + 
   (n5*j[p4, n1, 0, n3, n4, 1 + n5, n6, 0, 1, 0, -1 + n10, 1, 0, 1, 0])/
    (-1 + n10) + (n4*j[p4, n1, 0, n3, 1 + n4, n5, -1 + n6, 0, 1, 0, -1 + n10, 
      1, 0, 1, 1])/(-1 + n10) + 
   (n4*j[p4, n1, 0, n3, 1 + n4, n5, -1 + n6, 0, 1, 0, n10, 1, 0, 1, 0])/
    (-1 + n6) - (n4*j[p4, n1, 0, n3, 1 + n4, n5, n6, 0, 0, 0, -1 + n10, 1, 0, 
      1, 1])/(-1 + n10) - (n3*j[p4, n1, 0, 1 + n3, n4, n5, n6, -1, 1, 0, 
      -1 + n10, 1, 0, 1, 1])/(-1 + n10) - 
   (2*n3*j[p4, n1, 0, 1 + n3, n4, n5, n6, 0, 0, 0, -1 + n10, 1, 0, 1, 1])/
    (-1 + n10) + (n3*j[p4, n1, 0, 1 + n3, n4, n5, n6, 0, 1, 0, -1 + n10, 1, 
      -1, 1, 1])/(-1 + n10) - (n3*j[p4, n1, 0, 1 + n3, n4, n5, n6, 0, 1, 0, 
      -1 + n10, 1, 0, 0, 1])/(-1 + n10), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n4 == 0 && n5 == 0 && 
    n8 == 1 && n9 == 0 && n14 != 1 -> 
  ((-2*n6 + d*n6 - 2*n6^2)*j[p4, n1, n2, n3, 0, 0, 1 + n6, n7, 1, 0, 1, 1, 0, 
     1, -1 + n14])/((d - 2*n14)*(-1 + n14)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n7 == 0 && 
    n8 == 1 && n9 == 0 &&  !(n5 == 0 || n6 == 1) -> 
  ((4 - d + 2*n5)*j[p4, n1, -1 + n2, n3, n4, 1 + n5, n6, 0, 1, 0, 1, 1, 0, 1, 
      1])/(2*(2 - d + n4 + n5 + n6)) + 
   ((-4 + d)*j[p4, n1, n2, n3, n4, 1 + n5, -1 + n6, 0, 1, 0, 1, 1, 0, 0, 2])/
    (2*(-2 + d - n4 - n5 - n6)*(-1 + n6)) + 
   ((-4 + d - 2*n5)*j[p4, n1, n2, n3, n4, 1 + n5, -1 + n6, 0, 1, 0, 1, 1, 0, 
      1, 1])/(2*(-1 + n6)) - (n4*j[p4, n1, n2, n3, 1 + n4, n5, -1 + n6, 0, 1, 
      0, 1, 1, 0, 1, 1])/(-1 + n6) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, n6, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2 - d + n4 + n5 + n6) + ((4*n4 - d*n4 + 2*n4*n5)*
     j[p4, n1, n2, n3, 1 + n4, 1 + n5, -1 + n6, -1, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-1 + n6)*(2 - d + n4 + n5 + n6)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n5 == 0 && 
    n8 == 1 && n9 == 0 &&  !(n4 == 0 || n6 == 1) -> 
  ((n3 + n4)*j[p4, -1 + n1, n2, n3, 1 + n4, 0, -1 + n6, n7, 1, 0, 1, 1, 0, 1, 
      1])/(-1 + n6) - (n2*j[p4, -1 + n1, 1 + n2, -1 + n3, 1 + n4, 0, -1 + n6, 
      n7, 1, 0, 1, 1, 0, 1, 1])/(-1 + n6) + 
   ((-1 - n4)*j[p4, n1, -1 + n2, n3, 1 + n4, 0, -1 + n6, n7, 1, 0, 1, 1, 0, 
      1, 1])/(-1 + n6) + ((1 - 2*d + n2 + n3 + n4 + 2*n6 + n7)*
     j[p4, n1, n2, -1 + n3, 1 + n4, 0, -1 + n6, n7, 1, 0, 1, 1, 0, 1, 1])/
    (-1 + n6) + (n7*j[p4, n1, n2, -1 + n3, 1 + n4, 0, -1 + n6, 1 + n7, 1, 0, 
      0, 1, 0, 1, 1])/(-1 + n6) - 
   (n7*j[p4, n1, n2, -1 + n3, 1 + n4, 0, -1 + n6, 1 + n7, 1, 0, 1, 0, 0, 1, 
      1])/(-1 + n6) + ((1 + n4)*j[p4, n1, n2, -1 + n3, 2 + n4, 0, -2 + n6, 
      n7, 1, 0, 1, 1, 0, 1, 1])/(-1 + n6) + 
   ((-1 - n4)*j[p4, n1, n2, -1 + n3, 2 + n4, 0, -1 + n6, n7, 0, 0, 1, 1, 0, 
      1, 1])/(-1 + n6) + ((-1 + d - n4 - n6)*j[p4, n1, n2, n3, n4, 0, 
      -1 + n6, n7, 1, 0, 1, 1, 0, 1, 1])/(-1 + n6) + 
   j[p4, n1, n2, n3, n4, 0, n6, n7, 1, 0, 0, 1, 0, 1, 1] + 
   ((1 + n4)*j[p4, n1, n2, n3, 1 + n4, 0, -1 + n6, -1 + n7, 1, 0, 1, 1, 0, 1, 
      1])/(-1 + n6) + ((2 - n3 + n4)*j[p4, n1, n2, n3, 1 + n4, 0, -1 + n6, 
      n7, 0, 0, 1, 1, 0, 1, 1])/(-1 + n6) + 
   ((1 - d + n4 + n6)*j[p4, n1, n2, n3, 1 + n4, 0, -1 + n6, n7, 1, -1, 1, 1, 
      0, 1, 1])/(-1 + n6) + ((n3 + n4)*j[p4, n1, n2, n3, 1 + n4, 0, -1 + n6, 
      n7, 1, 0, 0, 1, 0, 1, 1])/(-1 + n6) + 
   ((-n3 - n4)*j[p4, n1, n2, n3, 1 + n4, 0, -1 + n6, n7, 1, 0, 1, 0, 0, 1, 
      1])/(-1 + n6) + ((-1 + n3)*j[p4, n1, n2, n3, 1 + n4, 0, -1 + n6, n7, 1, 
      0, 1, 1, -1, 1, 1])/(-1 + n6) + 
   ((1 - n3)*j[p4, n1, n2, n3, 1 + n4, 0, -1 + n6, n7, 1, 0, 1, 1, 0, 0, 1])/
    (-1 + n6) + ((-1 + d - n3 - 2*n4 - n6)*j[p4, n1, n2, n3, 1 + n4, 0, 
      -1 + n6, n7, 1, 0, 1, 1, 0, 1, 1])/(-1 + n6) - 
   j[p4, n1, n2, n3, 1 + n4, 0, n6, n7, 0, -1, 1, 1, 0, 1, 1] + 
   j[p4, n1, n2, n3, 1 + n4, 0, n6, n7, 0, 0, 1, 1, 0, 1, 1] + 
   (n2*j[p4, n1, 1 + n2, -1 + n3, 1 + n4, 0, -1 + n6, n7, 1, 0, 0, 1, 0, 1, 
      1])/(-1 + n6), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?NonPositive, (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, 
    (n7_)?NonPositive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n12 == 0 && n14 == 1 && n2 == 0 && n5 == 0 && n6 == 1 && 
    n7 == 0 && n9 == 0 &&  !(n10 == 1 || n3 == 0 || n8 == 1) -> 
  -j[p4, 0, -1, 1 + n3, n4, 0, 1, 0, n8, 0, n10, n11, 0, n13, 1] - 
   (2*j[p4, 0, -1, 1 + n3, n4, 0, 2, 0, n8, 0, -1 + n10, n11, 0, n13, 1])/
    (-1 + n10) + ((-1 - n3)*j[p4, 0, -1, 2 + n3, n4, 0, 1, 0, n8, 0, 
      -1 + n10, n11, 0, n13, 1])/(-1 + n10) + 
   j[p4, 0, 0, n3, n4, 0, 2, 0, n8, 0, -1 + n10, n11, 0, n13, 1]/(1 - n10) - 
   (n4*j[p4, 0, 0, n3, 1 + n4, 0, 1, 0, -1 + n8, 0, n10, n11, 0, n13, 1])/
    (-1 + n8) - (n4*j[p4, 0, 0, n3, 1 + n4, 0, 1, 0, n8, 0, -1 + n10, n11, 0, 
      n13, 1])/(-1 + n10) + j[p4, 0, 0, 1 + n3, -1 + n4, 0, 2, 0, n8, 0, 
     -1 + n10, n11, 0, n13, 1]/(1 - n10) + 
   j[p4, 0, 0, 1 + n3, n4, -1, 2, 0, n8, 0, -1 + n10, n11, 0, n13, 1]/
    (-1 + n10) + ((-1 + d - 2*n13 - n3)*j[p4, 0, 0, 1 + n3, n4, 0, 1, 0, 
      -1 + n8, 0, n10, n11, 0, n13, 1])/(-1 + n8) + 
   ((-2 + 2*d - 2*n10 - 3*n3 - n4)*j[p4, 0, 0, 1 + n3, n4, 0, 1, 0, n8, 0, 
      -1 + n10, n11, 0, n13, 1])/(-1 + n10) + j[p4, 0, 0, 1 + n3, n4, 0, 1, 
    0, n8, 0, n10, -1 + n11, 0, n13, 1] + j[p4, 0, 0, 1 + n3, n4, 0, 1, 0, 
    n8, 0, n10, n11, 0, n13, 1] + j[p4, 0, 0, 1 + n3, n4, 0, 2, -1, n8, 0, 
     -1 + n10, n11, 0, n13, 1]/(-1 + n10) + 
   (2*j[p4, 0, 0, 1 + n3, n4, 0, 2, 0, -1 + n8, 0, -1 + n10, n11, 0, n13, 1])/
    (-1 + n10) + j[p4, 0, 0, 1 + n3, n4, 0, 2, 0, n8, 0, -1 + n10, n11, -1, 
     n13, 1]/(1 - n10) + j[p4, 0, 0, 1 + n3, n4, 0, 2, 0, n8, 0, -1 + n10, 
     n11, 0, -1 + n13, 1]/(-1 + n10) + 
   j[p4, 0, 0, 1 + n3, n4, 0, 2, 0, n8, 0, -1 + n10, n11, 0, n13, 0]/
    (-1 + n10) - (n4*j[p4, 0, 0, 1 + n3, 1 + n4, -1, 1, 0, -1 + n8, 0, n10, 
      n11, 0, n13, 1])/(-1 + n8) + 
   (n4*j[p4, 0, 0, 1 + n3, 1 + n4, -1, 1, 0, n8, 0, -1 + n10, n11, 0, n13, 
      1])/(-1 + n10) - (n4*j[p4, 0, 0, 1 + n3, 1 + n4, 0, 0, 0, n8, 0, 
      -1 + n10, n11, 0, n13, 1])/(-1 + n10) + 
   (n4*j[p4, 0, 0, 1 + n3, 1 + n4, 0, 1, -1, -1 + n8, 0, n10, n11, 0, n13, 
      1])/(-1 + n8) - (n4*j[p4, 0, 0, 1 + n3, 1 + n4, 0, 1, -1, n8, 0, 
      -1 + n10, n11, 0, n13, 1])/(-1 + n10) + 
   (n4*j[p4, 0, 0, 1 + n3, 1 + n4, 0, 1, 0, -1 + n8, 0, -1 + n10, n11, 0, 
      n13, 1])/(-1 + n10) + (n4*j[p4, 0, 0, 1 + n3, 1 + n4, 0, 1, 0, -1 + n8, 
      0, n10, n11, 0, n13, 0])/(-1 + n8) + 
   (n4*j[p4, 0, 0, 1 + n3, 1 + n4, 0, 1, 0, n8, 0, -1 + n10, n11, 0, n13, 0])/
    (-1 + n10) + ((1 + n3)*j[p4, 0, 0, 2 + n3, n4, 0, 1, -1, -1 + n8, 0, n10, 
      n11, 0, n13, 1])/(-1 + n8) + 
   ((2 + 2*n3)*j[p4, 0, 0, 2 + n3, n4, 0, 1, 0, -1 + n8, 0, -1 + n10, n11, 0, 
      n13, 1])/(-1 + n10) + ((-1 - n3)*j[p4, 0, 0, 2 + n3, n4, 0, 1, 0, 
      -1 + n8, 0, n10, n11, 0, -1 + n13, 1])/(-1 + n8) + 
   ((-1 - n3)*j[p4, 0, 0, 2 + n3, n4, 0, 1, 0, n8, 0, -1 + n10, n11, -1, n13, 
      1])/(-1 + n10) + ((2 + 2*n3)*j[p4, 0, 0, 2 + n3, n4, 0, 1, 0, n8, 0, 
      -1 + n10, n11, 0, -1 + n13, 1])/(-1 + n10), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && n6 == 1 && 
    n7 == 0 && n9 == 0 &&  !(n10 == 1 || n3 == 0 || n8 == 1) -> 
  -j[p4, 0, -1, 1 + n3, n4, n5, 1, 0, n8, 0, n10, n11, 0, 1, 1] - 
   (2*j[p4, 0, -1, 1 + n3, n4, n5, 2, 0, n8, 0, -1 + n10, n11, 0, 1, 1])/
    (-1 + n10) + ((-1 - n3)*j[p4, 0, -1, 2 + n3, n4, n5, 1, 0, n8, 0, 
      -1 + n10, n11, 0, 1, 1])/(-1 + n10) + 
   j[p4, 0, 0, n3, n4, n5, 2, 0, n8, 0, -1 + n10, n11, 0, 1, 1]/(1 - n10) - 
   (n4*j[p4, 0, 0, n3, 1 + n4, n5, 1, 0, -1 + n8, 0, n10, n11, 0, 1, 1])/
    (-1 + n8) - (n4*j[p4, 0, 0, n3, 1 + n4, n5, 1, 0, n8, 0, -1 + n10, n11, 
      0, 1, 1])/(-1 + n10) + j[p4, 0, 0, 1 + n3, -1 + n4, n5, 2, 0, n8, 0, 
     -1 + n10, n11, 0, 1, 1]/(1 - n10) + 
   j[p4, 0, 0, 1 + n3, n4, -1 + n5, 2, 0, n8, 0, -1 + n10, n11, 0, 1, 1]/
    (-1 + n10) + ((-3 + d - n3 - n5)*j[p4, 0, 0, 1 + n3, n4, n5, 1, 0, 
      -1 + n8, 0, n10, n11, 0, 1, 1])/(-1 + n8) + 
   ((-2 + 2*d - 2*n10 - 3*n3 - n4)*j[p4, 0, 0, 1 + n3, n4, n5, 1, 0, n8, 0, 
      -1 + n10, n11, 0, 1, 1])/(-1 + n10) + j[p4, 0, 0, 1 + n3, n4, n5, 1, 0, 
    n8, 0, n10, -1 + n11, 0, 1, 1] + j[p4, 0, 0, 1 + n3, n4, n5, 1, 0, n8, 0, 
    n10, n11, 0, 1, 1] + j[p4, 0, 0, 1 + n3, n4, n5, 2, -1, n8, 0, -1 + n10, 
     n11, 0, 1, 1]/(-1 + n10) + 
   (2*j[p4, 0, 0, 1 + n3, n4, n5, 2, 0, -1 + n8, 0, -1 + n10, n11, 0, 1, 1])/
    (-1 + n10) + j[p4, 0, 0, 1 + n3, n4, n5, 2, 0, n8, 0, -1 + n10, n11, -1, 
     1, 1]/(1 - n10) + j[p4, 0, 0, 1 + n3, n4, n5, 2, 0, n8, 0, -1 + n10, 
     n11, 0, 0, 1]/(-1 + n10) + j[p4, 0, 0, 1 + n3, n4, n5, 2, 0, n8, 0, 
     -1 + n10, n11, 0, 1, 0]/(-1 + n10) - 
   (n5*j[p4, 0, 0, 1 + n3, n4, 1 + n5, 1, 0, -1 + n8, 0, n10, n11, 0, 0, 1])/
    (-1 + n8) + (n5*j[p4, 0, 0, 1 + n3, n4, 1 + n5, 1, 0, -1 + n8, 0, n10, 
      n11, 0, 1, 0])/(-1 + n8) - 
   (n4*j[p4, 0, 0, 1 + n3, 1 + n4, -1 + n5, 1, 0, -1 + n8, 0, n10, n11, 0, 1, 
      1])/(-1 + n8) + (n4*j[p4, 0, 0, 1 + n3, 1 + n4, -1 + n5, 1, 0, n8, 0, 
      -1 + n10, n11, 0, 1, 1])/(-1 + n10) - 
   (n4*j[p4, 0, 0, 1 + n3, 1 + n4, n5, 0, 0, n8, 0, -1 + n10, n11, 0, 1, 1])/
    (-1 + n10) + (n4*j[p4, 0, 0, 1 + n3, 1 + n4, n5, 1, -1, -1 + n8, 0, n10, 
      n11, 0, 1, 1])/(-1 + n8) - 
   (n4*j[p4, 0, 0, 1 + n3, 1 + n4, n5, 1, -1, n8, 0, -1 + n10, n11, 0, 1, 1])/
    (-1 + n10) + (n4*j[p4, 0, 0, 1 + n3, 1 + n4, n5, 1, 0, -1 + n8, 0, 
      -1 + n10, n11, 0, 1, 1])/(-1 + n10) + 
   (n4*j[p4, 0, 0, 1 + n3, 1 + n4, n5, 1, 0, -1 + n8, 0, n10, n11, 0, 1, 0])/
    (-1 + n8) + (n4*j[p4, 0, 0, 1 + n3, 1 + n4, n5, 1, 0, n8, 0, -1 + n10, 
      n11, 0, 1, 0])/(-1 + n10) + 
   ((1 + n3)*j[p4, 0, 0, 2 + n3, n4, n5, 1, -1, -1 + n8, 0, n10, n11, 0, 1, 
      1])/(-1 + n8) + ((2 + 2*n3)*j[p4, 0, 0, 2 + n3, n4, n5, 1, 0, -1 + n8, 
      0, -1 + n10, n11, 0, 1, 1])/(-1 + n10) + 
   ((-1 - n3)*j[p4, 0, 0, 2 + n3, n4, n5, 1, 0, -1 + n8, 0, n10, n11, 0, 0, 
      1])/(-1 + n8) + ((-1 - n3)*j[p4, 0, 0, 2 + n3, n4, n5, 1, 0, n8, 0, 
      -1 + n10, n11, -1, 1, 1])/(-1 + n10) + 
   ((2 + 2*n3)*j[p4, 0, 0, 2 + n3, n4, n5, 1, 0, n8, 0, -1 + n10, n11, 0, 0, 
      1])/(-1 + n10), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?NonPositive, (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, 
    (n7_)?NonPositive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n14 == 1 && n5 == 0 && n6 == 1 && 
    n7 == 0 && n9 == 0 &&  !(n11 == 1 || n8 == 1) -> 
  -((n3*j[p4, 0, -1 + n2, 1 + n3, n4, 0, 1, 0, n8, 0, 1, -1 + n11, 0, n13, 
       1])/(-1 + n11)) + (n4*j[p4, 0, n2, -1 + n3, 1 + n4, 0, 1, 0, -1 + n8, 
      0, 1, n11, 0, n13, 1])/(-1 + n8) + 
   ((-1 - d + 2*n13 + n3 + n8)*j[p4, 0, n2, n3, n4, 0, 1, 0, -1 + n8, 0, 1, 
      n11, 0, n13, 1])/(-1 + n8) + ((-1 - 2*d + n11 + 2*n13 + n4 + 2*n8)*
     j[p4, 0, n2, n3, n4, 0, 1, 0, n8, 0, 1, -1 + n11, 0, n13, 1])/
    (-1 + n11) + j[p4, 0, n2, n3, n4, 0, 1, 0, n8, 0, 1, n11, 0, -1 + n13, 
    1] + (n4*j[p4, 0, n2, n3, 1 + n4, -1, 1, 0, -1 + n8, 0, 1, n11, 0, n13, 
      1])/(-1 + n8) - (n4*j[p4, 0, n2, n3, 1 + n4, 0, 0, 0, n8, 0, 1, 
      -1 + n11, 0, n13, 1])/(-1 + n11) - 
   (n4*j[p4, 0, n2, n3, 1 + n4, 0, 1, -1, -1 + n8, 0, 1, n11, 0, n13, 1])/
    (-1 + n8) + (n4*j[p4, 0, n2, n3, 1 + n4, 0, 1, 0, -1 + n8, 0, 1, 
      -1 + n11, 0, n13, 1])/(-1 + n11) - 
   (n4*j[p4, 0, n2, n3, 1 + n4, 0, 1, 0, -1 + n8, 0, 1, n11, 0, n13, 0])/
    (-1 + n8) - (n3*j[p4, 0, n2, 1 + n3, n4, 0, 1, -1, -1 + n8, 0, 1, n11, 0, 
      n13, 1])/(-1 + n8) + (n3*j[p4, 0, n2, 1 + n3, n4, 0, 1, -1, n8, 0, 1, 
      -1 + n11, 0, n13, 1])/(-1 + n11) + 
   (2*n3*j[p4, 0, n2, 1 + n3, n4, 0, 1, 0, -1 + n8, 0, 1, -1 + n11, 0, n13, 
      1])/(-1 + n11) + (n3*j[p4, 0, n2, 1 + n3, n4, 0, 1, 0, -1 + n8, 0, 1, 
      n11, 0, -1 + n13, 1])/(-1 + n8) - 
   (n3*j[p4, 0, n2, 1 + n3, n4, 0, 1, 0, n8, 0, 1, -1 + n11, -1, n13, 1])/
    (-1 + n11) + (n3*j[p4, 0, n2, 1 + n3, n4, 0, 1, 0, n8, 0, 1, -1 + n11, 0, 
      -1 + n13, 1])/(-1 + n11) - 
   (n2*j[p4, 0, 1 + n2, -1 + n3, n4, 0, 1, 0, -1 + n8, 0, 1, n11, 0, n13, 1])/
    (-1 + n8) - (n2*j[p4, 0, 1 + n2, -1 + n3, n4, 0, 1, 0, n8, 0, 1, 
      -1 + n11, 0, n13, 1])/(-1 + n11) + 
   (n2*j[p4, 0, 1 + n2, n3, n4, 0, 1, -1, -1 + n8, 0, 1, n11, 0, n13, 1])/
    (-1 + n8) + (n2*j[p4, 0, 1 + n2, n3, n4, 0, 1, -1, n8, 0, 1, -1 + n11, 0, 
      n13, 1])/(-1 + n11) + (n2*j[p4, 0, 1 + n2, n3, n4, 0, 1, 0, -2 + n8, 0, 
      1, n11, 0, n13, 1])/(-1 + n8) + 
   (n2*j[p4, 0, 1 + n2, n3, n4, 0, 1, 0, -1 + n8, 0, 1, -1 + n11, 0, n13, 1])/
    (-1 + n11) - (n2*j[p4, 0, 1 + n2, n3, n4, 0, 1, 0, -1 + n8, 0, 1, n11, 
      -1, n13, 1])/(-1 + n8) + 
   (2*n2*j[p4, 0, 1 + n2, n3, n4, 0, 1, 0, -1 + n8, 0, 1, n11, 0, -1 + n13, 
      1])/(-1 + n8) - (n2*j[p4, 0, 1 + n2, n3, n4, 0, 1, 0, n8, 0, 1, 
      -1 + n11, -1, n13, 1])/(-1 + n11) + 
   (2*n2*j[p4, 0, 1 + n2, n3, n4, 0, 1, 0, n8, 0, 1, -1 + n11, 0, -1 + n13, 
      1])/(-1 + n11), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?NonPositive, (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, 
    (n7_)?NonPositive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n6 == 1 && 
    n7 == 0 && n9 == 0 &&  !(n11 == 1 || n8 == 1) -> 
  -((n3*j[p4, 0, -1 + n2, 1 + n3, n4, n5, 1, 0, n8, 0, 1, -1 + n11, 0, 1, 1])/
     (-1 + n11)) + (n4*j[p4, 0, n2, -1 + n3, 1 + n4, n5, 1, 0, -1 + n8, 0, 1, 
      n11, 0, 1, 1])/(-1 + n8) + 
   ((1 - d + n3 + n5 + n8)*j[p4, 0, n2, n3, n4, n5, 1, 0, -1 + n8, 0, 1, n11, 
      0, 1, 1])/(-1 + n8) + ((1 - 2*d + n11 + n4 + n5 + 2*n8)*
     j[p4, 0, n2, n3, n4, n5, 1, 0, n8, 0, 1, -1 + n11, 0, 1, 1])/
    (-1 + n11) + j[p4, 0, n2, n3, n4, n5, 1, 0, n8, 0, 1, n11, 0, 0, 1] + 
   (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, 0, -1 + n8, 0, 1, n11, 0, 0, 1])/
    (-1 + n8) - (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, 0, -1 + n8, 0, 1, n11, 0, 
      1, 0])/(-1 + n8) + (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, 0, n8, 0, 1, 
      -1 + n11, 0, 0, 1])/(-1 + n11) - 
   (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, 0, n8, 0, 1, -1 + n11, 0, 1, 0])/
    (-1 + n11) + (n4*j[p4, 0, n2, n3, 1 + n4, -1 + n5, 1, 0, -1 + n8, 0, 1, 
      n11, 0, 1, 1])/(-1 + n8) - 
   (n4*j[p4, 0, n2, n3, 1 + n4, n5, 0, 0, n8, 0, 1, -1 + n11, 0, 1, 1])/
    (-1 + n11) - (n4*j[p4, 0, n2, n3, 1 + n4, n5, 1, -1, -1 + n8, 0, 1, n11, 
      0, 1, 1])/(-1 + n8) + (n4*j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, -1 + n8, 
      0, 1, -1 + n11, 0, 1, 1])/(-1 + n11) - 
   (n4*j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, -1 + n8, 0, 1, n11, 0, 1, 0])/
    (-1 + n8) - (n3*j[p4, 0, n2, 1 + n3, n4, n5, 1, -1, -1 + n8, 0, 1, n11, 
      0, 1, 1])/(-1 + n8) + (n3*j[p4, 0, n2, 1 + n3, n4, n5, 1, -1, n8, 0, 1, 
      -1 + n11, 0, 1, 1])/(-1 + n11) + 
   (2*n3*j[p4, 0, n2, 1 + n3, n4, n5, 1, 0, -1 + n8, 0, 1, -1 + n11, 0, 1, 
      1])/(-1 + n11) + (n3*j[p4, 0, n2, 1 + n3, n4, n5, 1, 0, -1 + n8, 0, 1, 
      n11, 0, 0, 1])/(-1 + n8) - 
   (n3*j[p4, 0, n2, 1 + n3, n4, n5, 1, 0, n8, 0, 1, -1 + n11, -1, 1, 1])/
    (-1 + n11) + (n3*j[p4, 0, n2, 1 + n3, n4, n5, 1, 0, n8, 0, 1, -1 + n11, 
      0, 0, 1])/(-1 + n11) - (n2*j[p4, 0, 1 + n2, -1 + n3, n4, n5, 1, 0, 
      -1 + n8, 0, 1, n11, 0, 1, 1])/(-1 + n8) - 
   (n2*j[p4, 0, 1 + n2, -1 + n3, n4, n5, 1, 0, n8, 0, 1, -1 + n11, 0, 1, 1])/
    (-1 + n11) + (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, -1, -1 + n8, 0, 1, n11, 
      0, 1, 1])/(-1 + n8) + (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, -1, n8, 0, 1, 
      -1 + n11, 0, 1, 1])/(-1 + n11) + 
   (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, 0, -2 + n8, 0, 1, n11, 0, 1, 1])/
    (-1 + n8) + (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, 0, -1 + n8, 0, 1, 
      -1 + n11, 0, 1, 1])/(-1 + n11) - 
   (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, 0, -1 + n8, 0, 1, n11, -1, 1, 1])/
    (-1 + n8) + (2*n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, 0, -1 + n8, 0, 1, n11, 
      0, 0, 1])/(-1 + n8) - (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, 0, n8, 0, 1, 
      -1 + n11, -1, 1, 1])/(-1 + n11) + 
   (2*n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, 0, n8, 0, 1, -1 + n11, 0, 0, 1])/
    (-1 + n11), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?NonPositive, (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, 
    (n7_)?NonPositive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n14 == 1 && n5 == 0 && 
    n6 == 1 && n7 == 0 && n13 != 1 -> 
  (2*n3*n8*j[p4, 0, -1 + n2, 1 + n3, n4, 0, 1, 0, 1 + n8, n9, 1, 1, 0, 
      -1 + n13, 1])/((d - 2*n13)*(-1 + n13)) + 
   ((n4 + n4^2)*j[p4, 0, n2, -1 + n3, 2 + n4, 0, 1, 0, n8, n9, 1, 1, 0, 
      -1 + n13, 1])/((d - 2*n13)*(-1 + n13)) + 
   ((-2*n8 + d*n8 - 2*n2*n8 - 2*n4*n8 - 2*n8^2)*j[p4, 0, n2, n3, n4, 0, 1, 0, 
      1 + n8, n9, 1, 1, 0, -1 + n13, 1])/((d - 2*n13)*(-1 + n13)) + 
   (2*n4*n8*j[p4, 0, n2, n3, 1 + n4, 0, 0, 0, 1 + n8, n9, 1, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + ((-4*n4 + 2*n13*n4 - 2*n4^2 - n4*n8)*
     j[p4, 0, n2, n3, 1 + n4, 0, 1, 0, n8, n9, 1, 1, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) - 
   (n4*n8*j[p4, 0, n2, n3, 1 + n4, 0, 1, 0, 1 + n8, n9, 1, 1, -1, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (n4*n8*j[p4, 0, n2, n3, 1 + n4, 0, 1, 0, 1 + n8, n9, 1, 1, 0, -2 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((n4 + n4^2)*j[p4, 0, n2, n3, 2 + n4, -1, 1, 0, n8, n9, 1, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((-n4 - n4^2)*j[p4, 0, n2, n3, 2 + n4, 0, 1, -1, n8, n9, 1, 1, 0, 
      -1 + n13, 1])/((d - 2*n13)*(-1 + n13)) + 
   ((-n4 - n4^2)*j[p4, 0, n2, n3, 2 + n4, 0, 1, 0, n8, n9, 1, 1, 0, -1 + n13, 
      0])/((d - 2*n13)*(-1 + n13)) - 
   (2*n3*n8*j[p4, 0, n2, 1 + n3, n4, 0, 1, -1, 1 + n8, n9, 1, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((-3*n3 + 2*n13*n3 + 2*n2*n3 - n3^2 - 2*n3*n4 - 3*n3*n8)*
     j[p4, 0, n2, 1 + n3, n4, 0, 1, 0, n8, n9, 1, 1, 0, -1 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n3*n8*j[p4, 0, n2, 1 + n3, n4, 0, 1, 0, 1 + n8, n9, 1, 1, -1, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) - 
   (n3*n8*j[p4, 0, n2, 1 + n3, n4, 0, 1, 0, 1 + n8, n9, 1, 1, 0, -2 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (n3*n4*j[p4, 0, n2, 1 + n3, 1 + n4, -1, 1, 0, n8, n9, 1, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) - 
   (2*n3*n4*j[p4, 0, n2, 1 + n3, 1 + n4, 0, 1, -1, n8, n9, 1, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (n3*n4*j[p4, 0, n2, 1 + n3, 1 + n4, 0, 1, 0, n8, n9, 1, 1, 0, -2 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (n3*n4*j[p4, 0, n2, 1 + n3, 1 + n4, 0, 1, 0, n8, n9, 1, 1, 0, -1 + n13, 
      0])/((d - 2*n13)*(-1 + n13)) + 
   ((-n3 - n3^2)*j[p4, 0, n2, 2 + n3, n4, 0, 1, -1, n8, n9, 1, 1, 0, 
      -1 + n13, 1])/((d - 2*n13)*(-1 + n13)) + 
   ((n3 + n3^2)*j[p4, 0, n2, 2 + n3, n4, 0, 1, 0, n8, n9, 1, 1, 0, -2 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (2*n2*n8*j[p4, 0, 1 + n2, n3, n4, 0, 1, -1, 1 + n8, n9, 1, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((-4*n2 + 2*n13*n2 - 2*n2^2 + 2*n2*n3 - n2*n8)*j[p4, 0, 1 + n2, n3, n4, 0, 
      1, 0, n8, n9, 1, 1, 0, -1 + n13, 1])/((d - 2*n13)*(-1 + n13)) - 
   (n2*n8*j[p4, 0, 1 + n2, n3, n4, 0, 1, 0, 1 + n8, n9, 1, 1, -1, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (n2*n8*j[p4, 0, 1 + n2, n3, n4, 0, 1, 0, 1 + n8, n9, 1, 1, 0, -2 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) - 
   (n2*n4*j[p4, 0, 1 + n2, n3, 1 + n4, -1, 1, 0, n8, n9, 1, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (2*n2*n4*j[p4, 0, 1 + n2, n3, 1 + n4, 0, 0, 0, n8, n9, 1, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (2*n2*n4*j[p4, 0, 1 + n2, n3, 1 + n4, 0, 1, -1, n8, n9, 1, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) - 
   (n2*n4*j[p4, 0, 1 + n2, n3, 1 + n4, 0, 1, 0, -1 + n8, n9, 1, 1, 0, 
      -1 + n13, 1])/((d - 2*n13)*(-1 + n13)) - 
   (n2*n4*j[p4, 0, 1 + n2, n3, 1 + n4, 0, 1, 0, n8, n9, 1, 1, -1, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (2*n2*n4*j[p4, 0, 1 + n2, n3, 1 + n4, 0, 1, 0, n8, n9, 1, 1, 0, -2 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) - 
   (n2*n4*j[p4, 0, 1 + n2, n3, 1 + n4, 0, 1, 0, n8, n9, 1, 1, 0, -1 + n13, 
      0])/((d - 2*n13)*(-1 + n13)) - 
   (3*n2*n3*j[p4, 0, 1 + n2, 1 + n3, n4, 0, 1, 0, -1 + n8, n9, 1, 1, 0, 
      -1 + n13, 1])/((d - 2*n13)*(-1 + n13)) + 
   (n2*n3*j[p4, 0, 1 + n2, 1 + n3, n4, 0, 1, 0, n8, n9, 1, 1, -1, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) - 
   (n2*n3*j[p4, 0, 1 + n2, 1 + n3, n4, 0, 1, 0, n8, n9, 1, 1, 0, -2 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((-n2 - n2^2)*j[p4, 0, 2 + n2, -1 + n3, n4, 0, 1, 0, n8, n9, 1, 1, 0, 
      -1 + n13, 1])/((d - 2*n13)*(-1 + n13)) + 
   ((n2 + n2^2)*j[p4, 0, 2 + n2, n3, n4, 0, 1, -1, n8, n9, 1, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((n2 + n2^2)*j[p4, 0, 2 + n2, n3, n4, 0, 1, 0, -1 + n8, n9, 1, 1, 0, 
      -1 + n13, 1])/((d - 2*n13)*(-1 + n13)) + 
   ((-n2 - n2^2)*j[p4, 0, 2 + n2, n3, n4, 0, 1, 0, n8, n9, 1, 1, -1, 
      -1 + n13, 1])/((d - 2*n13)*(-1 + n13)) + 
   ((2*n2 + 2*n2^2)*j[p4, 0, 2 + n2, n3, n4, 0, 1, 0, n8, n9, 1, 1, 0, 
      -2 + n13, 1])/((d - 2*n13)*(-1 + n13)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n6 == 1 && n7 == -1 && n9 != 0 -> 
  -(j[p4, -1, n2, n3, n4, n5, 1, -1, n8, 1 + n9, 0, 2, 0, 1, 1]/
     (-3 + d - n4 - n5 - n9)) + ((4 - 7*d + 4*n2 + 4*n3 + 4*n4 + 4*n5 + 4*n8)*
     j[p4, -1, n2, n3, n4, n5, 1, -1, n8, 1 + n9, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4, -1, n2, n3, n4, n5, 1, -1, n8, 
     1 + n9, 2, 1, 0, 0, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   ((-1 - n9)*j[p4, -1, n2, n3, n4, n5, 1, -1, n8, 2 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n8*j[p4, -1, n2, n3, n4, n5, 1, -1, 1 + n8, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5 - n9)) - 
   (n5*j[p4, -1, n2, n3, n4, 1 + n5, 1, -1, n8, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n5*j[p4, -1, n2, n3, n4, 1 + n5, 1, -1, n8, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n4*j[p4, -1, n2, n3, 1 + n4, n5, 1, -1, n8, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n2*j[p4, -1, 1 + n2, n3, n4, n5, 1, -1, n8, 1 + n9, 1, 1, 0, 0, 1])/
    (-3 + d - n4 - n5 - n9) + ((-6 + 5*d - 2*n2 - 4*n3 - 4*n4 - 2*n5)*
     j[p4, 0, -1 + n2, n3, n4, n5, 1, -1, n8, 1 + n9, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, 0, -1 + n2, n3, n4, n5, 1, -1, n8, 
     1 + n9, 2, 0, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4, 0, -1 + n2, n3, n4, n5, 1, -1, n8, 1 + n9, 2, 1, 0, 0, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + 
   ((1 + n9)*j[p4, 0, -1 + n2, n3, n4, n5, 1, -1, n8, 2 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (n8*j[p4, 0, -1 + n2, n3, n4, n5, 1, -1, 1 + n8, 1 + n9, 1, 0, 0, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) - 
   (n8*j[p4, 0, -1 + n2, n3, n4, n5, 1, -1, 1 + n8, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4, 0, -1 + n2, n3, n4, n5, 1, 0, n8, 
     1 + n9, 1, 1, 0, 0, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4, 0, -1 + n2, n3, n4, n5, 2, -1, -1 + n8, 1 + n9, 1, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4, 0, -1 + n2, n3, n4, n5, 2, -1, n8, 
     1 + n9, 0, 1, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   (n4*j[p4, 0, -1 + n2, n3, 1 + n4, n5, 1, -1, n8, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   ((4 - 3*d + 2*n2 + 2*n4 + 2*n5 + 2*n8 + 2*n9)*j[p4, 0, n2, -1 + n3, n4, 
      n5, 1, -1, n8, 1 + n9, 1, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4, 0, n2, -1 + n3, n4, n5, 1, -1, n8, 1 + n9, 2, 0, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, 0, n2, -1 + n3, n4, n5, 1, 0, n8, 
     1 + n9, 0, 1, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, 0, n2, -1 + n3, n4, n5, 1, 0, n8, 1 + n9, 1, 0, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, 0, n2, -1 + n3, n4, n5, 2, -1, 
     -1 + n8, 1 + n9, 1, 1, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, 0, n2, -1 + n3, n4, n5, 2, -1, n8, 1 + n9, 0, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) - 
   (n4*j[p4, 0, n2, -1 + n3, 1 + n4, n5, 1, -1, -1 + n8, 1 + n9, 1, 1, 0, 1, 
      1])/(2*(3 - d + n4 + n5 + n9)) + 
   (n4*j[p4, 0, n2, -1 + n3, 1 + n4, n5, 1, -1, n8, 1 + n9, 0, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (n4*j[p4, 0, n2, -1 + n3, 1 + n4, n5, 1, -1, n8, 1 + n9, 1, 0, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) + j[p4, 0, n2, n3, -1 + n4, n5, 1, -1, n8, 
    1 + n9, 1, 1, 0, 1, 1] + ((1 + n9)*j[p4, 0, n2, n3, -1 + n4, n5, 1, -1, 
      n8, 2 + n9, 1, 1, 0, 1, 0])/(2*(3 - d + n4 + n5 + n9)) + 
   j[p4, 0, n2, n3, -1 + n4, n5, 2, -1, n8, 1 + n9, 0, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4, 0, n2, n3, -1 + n4, n5, 2, -1, n8, 
     1 + n9, 1, 1, 0, 0, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, 0, n2, n3, -1 + n4, n5, 2, -1, n8, 1 + n9, 1, 1, 0, 1, 0]/
    (2*(-3 + d - n4 - n5 - n9)) - 
   (n5*j[p4, 0, n2, n3, -1 + n4, 1 + n5, 1, -1, n8, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n5*j[p4, 0, n2, n3, -1 + n4, 1 + n5, 1, -1, n8, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + ((4 - 3*d + 4*n3 + 4*n4)*
     j[p4, 0, n2, n3, n4, n5, 1, -2, n8, 1 + n9, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4, 0, n2, n3, n4, n5, 1, -2, n8, 1 + n9, 
     2, 0, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, 0, n2, n3, n4, n5, 1, -2, n8, 1 + n9, 2, 1, 0, 0, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + 
   ((-1 - n9)*j[p4, 0, n2, n3, n4, n5, 1, -2, n8, 2 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n8*j[p4, 0, n2, n3, n4, n5, 1, -2, 1 + n8, 1 + n9, 1, 0, 0, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) + 
   (n8*j[p4, 0, n2, n3, n4, n5, 1, -2, 1 + n8, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, 0, n2, n3, n4, n5, 1, -1, -1 + n8, 
     1 + n9, 0, 2, 0, 1, 1]/(-3 + d - n4 - n5 - n9) + 
   ((2*d - n4 + n5 - 2*n8 - n9)*j[p4, 0, n2, n3, n4, n5, 1, -1, -1 + n8, 
      1 + n9, 1, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, 0, n2, n3, n4, n5, 1, -1, -1 + n8, 1 + n9, 2, 0, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + 
   ((-1 - n9)*j[p4, 0, n2, n3, n4, n5, 1, -1, -1 + n8, 2 + n9, 1, 1, 0, 1, 
      1])/(2*(3 - d + n4 + n5 + n9)) + 
   ((1 + n2 - n4 + n9)*j[p4, 0, n2, n3, n4, n5, 1, -1, n8, 1 + n9, 0, 1, 0, 
      1, 1])/(2*(3 - d + n4 + n5 + n9)) - 
   j[p4, 0, n2, n3, n4, n5, 1, -1, n8, 1 + n9, 0, 2, -1, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, 0, n2, n3, n4, n5, 1, -1, n8, 1 + n9, 
     0, 2, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   ((-3 + n4 - n9)*j[p4, 0, n2, n3, n4, n5, 1, -1, n8, 1 + n9, 1, 0, 0, 1, 
      1])/(2*(3 - d + n4 + n5 + n9)) + 
   (n8*j[p4, 0, n2, n3, n4, n5, 1, -1, n8, 1 + n9, 1, 1, 0, 0, 1])/
    (-3 + d - n4 - n5 - n9) + ((-1 + n4 - n9)*j[p4, 0, n2, n3, n4, n5, 1, -1, 
      n8, 1 + n9, 1, 1, 0, 1, 0])/(2*(3 - d + n4 + n5 + n9)) + 
   ((-4 + 3*d - 2*n2 - 2*n4 - 2*n5 - 2*n8 - 2*n9)*j[p4, 0, n2, n3, n4, n5, 1, 
      -1, n8, 1 + n9, 1, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4, 0, n2, n3, n4, n5, 1, -1, n8, 1 + n9, 2, 0, -1, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4, 0, n2, n3, n4, n5, 1, -1, n8, 1 + n9, 
     2, 0, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   ((-1 - n9)*j[p4, 0, n2, n3, n4, n5, 1, -1, n8, 2 + n9, 0, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) + 
   ((1 + n9)*j[p4, 0, n2, n3, n4, n5, 1, -1, n8, 2 + n9, 1, 0, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (n8*j[p4, 0, n2, n3, n4, n5, 1, -1, 1 + n8, 1 + n9, 1, 0, -1, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, 0, n2, n3, n4, n5, 1, 0, -1 + n8, 
     1 + n9, 1, 1, 0, 0, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, 0, n2, n3, n4, n5, 2, -2, -1 + n8, 1 + n9, 1, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, 0, n2, n3, n4, n5, 2, -2, n8, 1 + n9, 
     0, 1, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, 0, n2, n3, n4, n5, 2, -1, -2 + n8, 1 + n9, 1, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, 0, n2, n3, n4, n5, 2, -1, -1 + n8, 
     1 + n9, 1, 1, -1, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4, 0, n2, n3, n4, n5, 2, -1, n8, n9, 1, 1, 0, 0, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, 0, n2, n3, n4, n5, 2, -1, n8, n9, 1, 
     1, 0, 1, 0]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, 0, n2, n3, n4, n5, 2, -1, n8, 1 + n9, 0, 1, -1, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + 
   (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, -2, n8, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, -2, n8, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, -1, -1 + n8, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, -1, -1 + n8, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, -1, n8, n9, 1, 1, 0, 0, 1])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, -1, n8, n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (2*n4*j[p4, 0, n2, n3, 1 + n4, -1 + n5, 1, -1, -1 + n8, 1 + n9, 1, 1, 0, 
      1, 1])/(3 - d + n4 + n5 + n9) + 
   (2*n4*j[p4, 0, n2, n3, 1 + n4, n5, 1, -2, -1 + n8, 1 + n9, 1, 1, 0, 1, 1])/
    (3 - d + n4 + n5 + n9) + (n4*j[p4, 0, n2, n3, 1 + n4, n5, 1, -2, n8, 
      1 + n9, 1, 1, 0, 1, 0])/(2*(3 - d + n4 + n5 + n9)) + 
   (n4*j[p4, 0, n2, n3, 1 + n4, n5, 1, -1, -1 + n8, 1 + n9, 1, 1, 0, 1, 0])/
    (3 - d + n4 + n5 + n9) - (n4*j[p4, 0, n2, n3, 1 + n4, n5, 1, -1, n8, n9, 
      1, 1, 0, 1, 0])/(2*(3 - d + n4 + n5 + n9)) - 
   (2*n3*j[p4, 0, n2, 1 + n3, n4, n5, 1, -2, -1 + n8, 1 + n9, 1, 1, 0, 1, 1])/
    (-3 + d - n4 - n5 - n9) + 
   (2*n3*j[p4, 0, n2, 1 + n3, n4, n5, 1, -1, -1 + n8, 1 + n9, 1, 1, 0, 0, 1])/
    (-3 + d - n4 - n5 - n9) - (n2*j[p4, 0, 1 + n2, -1 + n3, n4, n5, 1, -1, 
      n8, 1 + n9, 0, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5 - n9)) + 
   (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, -2, n8, 1 + n9, 0, 1, 0, 1, 1])/
    (-3 + d - n4 - n5 - n9) - (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, -2, n8, 
      1 + n9, 1, 1, 0, 0, 1])/(-3 + d - n4 - n5 - n9) + 
   (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, -1, -1 + n8, 1 + n9, 1, 1, 0, 0, 1])/
    (-3 + d - n4 - n5 - n9) - (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, -1, n8, 
      1 + n9, 0, 1, -1, 1, 1])/(2*(-3 + d - n4 - n5 - n9)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n6 == 1 && n7 == 0 && n9 != 0 -> 
  -(j[p4, -1, n2, n3, n4, n5, 1, 0, n8, 1 + n9, 0, 2, 0, 1, 1]/
     (-3 + d - n4 - n5 - n9)) + 
   ((10 - 7*d + 4*n2 + 4*n3 + 4*n4 + 4*n5 + 4*n8)*j[p4, -1, n2, n3, n4, n5, 
      1, 0, n8, 1 + n9, 1, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, -1, n2, n3, n4, n5, 1, 0, n8, 1 + n9, 2, 1, 0, 0, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + 
   ((-1 - n9)*j[p4, -1, n2, n3, n4, n5, 1, 0, n8, 2 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n8*j[p4, -1, n2, n3, n4, n5, 1, 0, 1 + n8, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5 - n9)) - 
   (n5*j[p4, -1, n2, n3, n4, 1 + n5, 1, 0, n8, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n5*j[p4, -1, n2, n3, n4, 1 + n5, 1, 0, n8, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n4*j[p4, -1, n2, n3, 1 + n4, n5, 1, 0, n8, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n2*j[p4, -1, 1 + n2, n3, n4, n5, 1, 0, n8, 1 + n9, 1, 1, 0, 0, 1])/
    (-3 + d - n4 - n5 - n9) + ((-10 + 5*d - 2*n2 - 4*n3 - 4*n4 - 2*n5)*
     j[p4, 0, -1 + n2, n3, n4, n5, 1, 0, n8, 1 + n9, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, 0, -1 + n2, n3, n4, n5, 1, 0, n8, 
     1 + n9, 2, 0, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4, 0, -1 + n2, n3, n4, n5, 1, 0, n8, 1 + n9, 2, 1, 0, 0, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + 
   ((1 + n9)*j[p4, 0, -1 + n2, n3, n4, n5, 1, 0, n8, 2 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (n8*j[p4, 0, -1 + n2, n3, n4, n5, 1, 0, 1 + n8, 1 + n9, 1, 0, 0, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) - 
   (n8*j[p4, 0, -1 + n2, n3, n4, n5, 1, 0, 1 + n8, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, 0, -1 + n2, n3, n4, n5, 2, 0, 
     -1 + n8, 1 + n9, 1, 1, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, 0, -1 + n2, n3, n4, n5, 2, 0, n8, 1 + n9, 0, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) - 
   (n4*j[p4, 0, -1 + n2, n3, 1 + n4, n5, 1, 0, n8, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   ((6 - 3*d + 2*n2 + 2*n4 + 2*n5 + 2*n8 + 2*n9)*j[p4, 0, n2, -1 + n3, n4, 
      n5, 1, 0, n8, 1 + n9, 1, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4, 0, n2, -1 + n3, n4, n5, 1, 0, n8, 1 + n9, 2, 0, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, 0, n2, -1 + n3, n4, n5, 2, 0, 
     -1 + n8, 1 + n9, 1, 1, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, 0, n2, -1 + n3, n4, n5, 2, 0, n8, 1 + n9, 0, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) - 
   (n4*j[p4, 0, n2, -1 + n3, 1 + n4, n5, 1, 0, -1 + n8, 1 + n9, 1, 1, 0, 1, 
      1])/(2*(3 - d + n4 + n5 + n9)) + 
   (n4*j[p4, 0, n2, -1 + n3, 1 + n4, n5, 1, 0, n8, 1 + n9, 0, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (n4*j[p4, 0, n2, -1 + n3, 1 + n4, n5, 1, 0, n8, 1 + n9, 1, 0, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) + j[p4, 0, n2, n3, -1 + n4, n5, 1, 0, n8, 
    1 + n9, 1, 1, 0, 1, 1] + ((1 + n9)*j[p4, 0, n2, n3, -1 + n4, n5, 1, 0, 
      n8, 2 + n9, 1, 1, 0, 1, 0])/(2*(3 - d + n4 + n5 + n9)) + 
   j[p4, 0, n2, n3, -1 + n4, n5, 2, 0, n8, 1 + n9, 0, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4, 0, n2, n3, -1 + n4, n5, 2, 0, n8, 
     1 + n9, 1, 1, 0, 0, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, 0, n2, n3, -1 + n4, n5, 2, 0, n8, 1 + n9, 1, 1, 0, 1, 0]/
    (2*(-3 + d - n4 - n5 - n9)) - 
   (n5*j[p4, 0, n2, n3, -1 + n4, 1 + n5, 1, 0, n8, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n5*j[p4, 0, n2, n3, -1 + n4, 1 + n5, 1, 0, n8, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + ((6 - 3*d + 4*n3 + 4*n4)*
     j[p4, 0, n2, n3, n4, n5, 1, -1, n8, 1 + n9, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4, 0, n2, n3, n4, n5, 1, -1, n8, 1 + n9, 
     2, 0, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, 0, n2, n3, n4, n5, 1, -1, n8, 1 + n9, 2, 1, 0, 0, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + 
   ((-1 - n9)*j[p4, 0, n2, n3, n4, n5, 1, -1, n8, 2 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n8*j[p4, 0, n2, n3, n4, n5, 1, -1, 1 + n8, 1 + n9, 1, 0, 0, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) + 
   (n8*j[p4, 0, n2, n3, n4, n5, 1, -1, 1 + n8, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, 0, n2, n3, n4, n5, 1, 0, -1 + n8, 
     1 + n9, 0, 2, 0, 1, 1]/(-3 + d - n4 - n5 - n9) + 
   ((-4 + 2*d - n4 + n5 - 2*n8 - n9)*j[p4, 0, n2, n3, n4, n5, 1, 0, -1 + n8, 
      1 + n9, 1, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, 0, n2, n3, n4, n5, 1, 0, -1 + n8, 1 + n9, 2, 0, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + 
   ((-1 - n9)*j[p4, 0, n2, n3, n4, n5, 1, 0, -1 + n8, 2 + n9, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) + 
   ((n2 - n4 + n9)*j[p4, 0, n2, n3, n4, n5, 1, 0, n8, 1 + n9, 0, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) - j[p4, 0, n2, n3, n4, n5, 1, 0, n8, 1 + n9, 
     0, 2, -1, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4, 0, n2, n3, n4, n5, 1, 0, n8, 1 + n9, 0, 2, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + 
   ((-2 + n4 - n9)*j[p4, 0, n2, n3, n4, n5, 1, 0, n8, 1 + n9, 1, 0, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) + 
   ((-1 + n8)*j[p4, 0, n2, n3, n4, n5, 1, 0, n8, 1 + n9, 1, 1, 0, 0, 1])/
    (-3 + d - n4 - n5 - n9) + ((-1 + n4 - n9)*j[p4, 0, n2, n3, n4, n5, 1, 0, 
      n8, 1 + n9, 1, 1, 0, 1, 0])/(2*(3 - d + n4 + n5 + n9)) + 
   ((-6 + 3*d - 2*n2 - 2*n4 - 2*n5 - 2*n8 - 2*n9)*j[p4, 0, n2, n3, n4, n5, 1, 
      0, n8, 1 + n9, 1, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4, 0, n2, n3, n4, n5, 1, 0, n8, 1 + n9, 2, 0, -1, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4, 0, n2, n3, n4, n5, 1, 0, n8, 1 + n9, 
     2, 0, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   ((-1 - n9)*j[p4, 0, n2, n3, n4, n5, 1, 0, n8, 2 + n9, 0, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) + 
   ((1 + n9)*j[p4, 0, n2, n3, n4, n5, 1, 0, n8, 2 + n9, 1, 0, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (n8*j[p4, 0, n2, n3, n4, n5, 1, 0, 1 + n8, 1 + n9, 1, 0, -1, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4, 0, n2, n3, n4, n5, 2, -1, -1 + n8, 
     1 + n9, 1, 1, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4, 0, n2, n3, n4, n5, 2, -1, n8, 1 + n9, 0, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4, 0, n2, n3, n4, n5, 2, 0, -2 + n8, 
     1 + n9, 1, 1, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4, 0, n2, n3, n4, n5, 2, 0, -1 + n8, 1 + n9, 1, 1, -1, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, 0, n2, n3, n4, n5, 2, 0, n8, n9, 1, 
     1, 0, 0, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4, 0, n2, n3, n4, n5, 2, 0, n8, n9, 1, 1, 0, 1, 0]/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4, 0, n2, n3, n4, n5, 2, 0, n8, 1 + n9, 
     0, 1, -1, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, -1, n8, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, -1, n8, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, 0, -1 + n8, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, 0, -1 + n8, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, 0, n8, n9, 1, 1, 0, 0, 1])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, 0, n8, n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (2*n4*j[p4, 0, n2, n3, 1 + n4, -1 + n5, 1, 0, -1 + n8, 1 + n9, 1, 1, 0, 1, 
      1])/(3 - d + n4 + n5 + n9) + 
   (2*n4*j[p4, 0, n2, n3, 1 + n4, n5, 1, -1, -1 + n8, 1 + n9, 1, 1, 0, 1, 1])/
    (3 - d + n4 + n5 + n9) + (n4*j[p4, 0, n2, n3, 1 + n4, n5, 1, -1, n8, 
      1 + n9, 1, 1, 0, 1, 0])/(2*(3 - d + n4 + n5 + n9)) + 
   (n4*j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, -1 + n8, 1 + n9, 1, 1, 0, 1, 0])/
    (3 - d + n4 + n5 + n9) - (n4*j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, n8, n9, 
      1, 1, 0, 1, 0])/(2*(3 - d + n4 + n5 + n9)) - 
   (2*n3*j[p4, 0, n2, 1 + n3, n4, n5, 1, -1, -1 + n8, 1 + n9, 1, 1, 0, 1, 1])/
    (-3 + d - n4 - n5 - n9) + 
   (2*n3*j[p4, 0, n2, 1 + n3, n4, n5, 1, 0, -1 + n8, 1 + n9, 1, 1, 0, 0, 1])/
    (-3 + d - n4 - n5 - n9) - (n2*j[p4, 0, 1 + n2, -1 + n3, n4, n5, 1, 0, n8, 
      1 + n9, 0, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5 - n9)) + 
   (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, -1, n8, 1 + n9, 0, 1, 0, 1, 1])/
    (-3 + d - n4 - n5 - n9) - (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, -1, n8, 
      1 + n9, 1, 1, 0, 0, 1])/(-3 + d - n4 - n5 - n9) + 
   (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, 0, -1 + n8, 1 + n9, 1, 1, 0, 0, 1])/
    (-3 + d - n4 - n5 - n9) - (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, 0, n8, 
      1 + n9, 0, 1, -1, 1, 1])/(2*(-3 + d - n4 - n5 - n9)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == -1 && n13 == 1 && n14 == 1 && n6 == 1 && 
    n8 == 1 && n9 == 0 && n7 != 0 -> 
  ((7 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4, -1 + n1, n2, n3, n4, n5, 
      1, 1 + n7, 0, 0, 1, 1, -1, 2, 1])/(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     30*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((22 - 9*d + 2*n1 + 4*n2 + 4*n3 + 6*n4 + 6*n5 + 6*n7)*
     j[p4, -1 + n1, n2, n3, n4, n5, 1, 1 + n7, 0, 0, 2, 1, -1, 1, 1])/
    (2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
      26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-132 + 120*d - 27*d^2 - 12*n1 + 6*d*n1 - 68*n2 + 30*d*n2 - 4*n1*n2 - 
      8*n2^2 - 68*n3 + 30*d*n3 - 4*n1*n3 - 16*n2*n3 - 8*n3^2 - 80*n4 + 
      36*d*n4 - 4*n1*n4 - 20*n2*n4 - 20*n3*n4 - 12*n4^2 - 80*n5 + 36*d*n5 - 
      4*n1*n5 - 20*n2*n5 - 20*n3*n5 - 24*n4*n5 - 12*n5^2 - 80*n7 + 36*d*n7 - 
      4*n1*n7 - 20*n2*n7 - 20*n3*n7 - 24*n4*n7 - 24*n5*n7 - 12*n7^2)*
     j[p4, -1 + n1, n2, n3, n4, n5, 1, 1 + n7, 1, 0, 1, 1, -1, 1, 1])/
    (2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
      26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((22 - 9*d + 2*n1 + 4*n2 + 4*n3 + 6*n4 + 6*n5 + 6*n7)*
     j[p4, -1 + n1, n2, n3, n4, n5, 1, 1 + n7, 1, 0, 2, 1, -1, 0, 1])/
    (2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
      26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*j[p4, -1 + n1, n2, n3, n4, 
      n5, 1, 1 + n7, 2, 0, 1, 1, -1, 0, 1])/
    (2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
      26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((7*n5 - 3*d*n5 + n2*n5 + 2*n3*n5 + 2*n4*n5 + 2*n5^2 + 2*n5*n7)*
     j[p4, -1 + n1, n2, n3, n4, 1 + n5, 0, 1 + n7, 1, 0, 1, 1, -1, 1, 1])/
    (-30 + 27*d - 6*d^2 + 10*n1 - 4*d*n1 - 6*n2 + 3*d*n2 + 2*n1*n2 - 26*n3 + 
     11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 30*n4 + 13*d*n4 + 2*n1*n4 - 
     4*n2*n4 - 10*n3*n4 - 6*n4^2 - 8*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 
     6*n4*n5 - 16*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 8*n4*n7 - 
     2*n5*n7 - 2*n7^2) + ((-8*n5 + 3*d*n5 - 2*n1*n5 - 2*n2*n5 - 2*n4*n5 - 
      2*n5^2 - 2*n5*n7)*j[p4, -1 + n1, n2, n3, n4, 1 + n5, 1, 1 + n7, 1, 0, 
      1, 1, -1, 0, 1])/(2*(-30 + 27*d - 6*d^2 + 10*n1 - 4*d*n1 - 6*n2 + 
      3*d*n2 + 2*n1*n2 - 26*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 
      30*n4 + 13*d*n4 + 2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 8*n5 + 
      4*d*n5 + 4*n1*n5 - 6*n3*n5 - 6*n4*n5 - 16*n7 + 7*d*n7 + 2*n1*n7 - 
      2*n2*n7 - 6*n3*n7 - 8*n4*n7 - 2*n5*n7 - 2*n7^2)) + 
   ((8*n5 - 3*d*n5 + 2*n1*n5 + 2*n2*n5 + 2*n4*n5 + 2*n5^2 + 2*n5*n7)*
     j[p4, -1 + n1, n2, n3, n4, 1 + n5, 1, 1 + n7, 1, 0, 1, 1, -1, 1, 0])/
    (2*(-30 + 27*d - 6*d^2 + 10*n1 - 4*d*n1 - 6*n2 + 3*d*n2 + 2*n1*n2 - 
      26*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 30*n4 + 13*d*n4 + 
      2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 8*n5 + 4*d*n5 + 4*n1*n5 - 
      6*n3*n5 - 6*n4*n5 - 16*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 
      8*n4*n7 - 2*n5*n7 - 2*n7^2)) + 
   ((-7*n4 + 3*d*n4 - n2*n4 - 2*n3*n4 - 2*n4^2 - 2*n4*n5 - 2*n4*n7)*
     j[p4, -1 + n1, n2, n3, 1 + n4, n5, 0, 1 + n7, 1, 0, 1, 1, -1, 1, 1])/
    (30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((7*n4 - 3*d*n4 + n2*n4 + 2*n3*n4 + 2*n4^2 + 
      2*n4*n5 + 2*n4*n7)*j[p4, -1 + n1, n2, n3, 1 + n4, n5, 1, 1 + n7, 0, 0, 
      1, 1, -1, 1, 1])/(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 
     2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 
     13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 
     4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 
     6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-8*n4 + 3*d*n4 - 2*n1*n4 - 2*n2*n4 - 2*n4^2 - 2*n4*n5 - 2*n4*n7)*
     j[p4, -1 + n1, n2, n3, 1 + n4, n5, 1, 1 + n7, 1, 0, 1, 1, -1, 1, 0])/
    (2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
      26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((14*n3 - 6*d*n3 + 2*n2*n3 + 4*n3^2 + 4*n3*n4 + 4*n3*n5 + 4*n3*n7)*
     j[p4, -1 + n1, n2, 1 + n3, n4, n5, 1, 1 + n7, 0, 0, 1, 1, -1, 1, 1])/
    (30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((22*n3 - 9*d*n3 + 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
      6*n3*n4 + 6*n3*n5 + 6*n3*n7)*j[p4, -1 + n1, n2, 1 + n3, n4, n5, 1, 
      1 + n7, 1, 0, 1, 1, -1, 0, 1])/(2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 
      6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
      4*n3^2 + 30*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
      8*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 
      2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-22*n2 + 9*d*n2 - 2*n1*n2 - 4*n2^2 - 4*n2*n3 - 6*n2*n4 - 6*n2*n5 - 
      6*n2*n7)*j[p4, -1 + n1, 1 + n2, n3, n4, n5, 1, 1 + n7, 0, 0, 1, 1, -1, 
      1, 1])/(2*(-30 + 27*d - 6*d^2 + 10*n1 - 4*d*n1 - 6*n2 + 3*d*n2 + 
      2*n1*n2 - 26*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 30*n4 + 
      13*d*n4 + 2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 8*n5 + 4*d*n5 + 
      4*n1*n5 - 6*n3*n5 - 6*n4*n5 - 16*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 
      6*n3*n7 - 8*n4*n7 - 2*n5*n7 - 2*n7^2)) + 
   ((-8*n2 + 3*d*n2 - 2*n1*n2 - 2*n2^2 - 2*n2*n4 - 2*n2*n5 - 2*n2*n7)*
     j[p4, -1 + n1, 1 + n2, n3, n4, n5, 1, 1 + n7, 1, 0, 1, 1, -1, 0, 1])/
    (-30 + 27*d - 6*d^2 + 10*n1 - 4*d*n1 - 6*n2 + 3*d*n2 + 2*n1*n2 - 26*n3 + 
     11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 30*n4 + 13*d*n4 + 2*n1*n4 - 
     4*n2*n4 - 10*n3*n4 - 6*n4^2 - 8*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 
     6*n4*n5 - 16*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 8*n4*n7 - 
     2*n5*n7 - 2*n7^2) + ((-22 + 9*d - 2*n1 - 4*n2 - 4*n3 - 6*n4 - 6*n5 - 
      6*n7)*j[p4, n1, -1 + n2, n3, n4, n5, 1, 1 + n7, 0, 0, 2, 1, -1, 1, 1])/
    (2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
      26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, -1 + n2, n3, n4, 
      n5, 1, 1 + n7, 1, 0, 1, 1, -1, 0, 2])/(30 - 27*d + 6*d^2 - 10*n1 + 
     4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
     4*n3^2 + 30*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
     8*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((70 - 58*d + 12*d^2 + 24*n2 - 10*d*n2 + 2*n2^2 + 34*n3 - 14*d*n3 + 
      6*n2*n3 + 4*n3^2 + 48*n4 - 20*d*n4 + 8*n2*n4 + 12*n3*n4 + 8*n4^2 + 
      34*n5 - 14*d*n5 + 6*n2*n5 + 8*n3*n5 + 12*n4*n5 + 4*n5^2 + 34*n7 - 
      14*d*n7 + 6*n2*n7 + 8*n3*n7 + 12*n4*n7 + 8*n5*n7 + 4*n7^2)*
     j[p4, n1, -1 + n2, n3, n4, n5, 1, 1 + n7, 1, 0, 1, 1, -1, 1, 1])/
    (30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((-7 + 3*d - n2 - 2*n3 - 2*n4 - 2*n5 - 2*n7)*
     j[p4, n1, -1 + n2, n3, n4, n5, 1, 1 + n7, 1, 0, 2, 0, -1, 1, 1])/
    (30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((-22 + 9*d - 2*n1 - 4*n2 - 4*n3 - 6*n4 - 6*n5 - 
      6*n7)*j[p4, n1, -1 + n2, n3, n4, n5, 1, 1 + n7, 1, 0, 2, 1, -1, 0, 1])/
    (2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
      26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((7 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 9*n7 - 3*d*n7 + n2*n7 + 2*n3*n7 + 
      2*n4*n7 + 2*n5*n7 + 2*n7^2)*j[p4, n1, -1 + n2, n3, n4, n5, 1, 2 + n7, 
      1, 0, 0, 1, -1, 1, 1])/(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 
     3*d*n2 - 2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     30*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-7 + 3*d - n2 - 2*n3 - 2*n4 - 2*n5 - 9*n7 + 3*d*n7 - n2*n7 - 2*n3*n7 - 
      2*n4*n7 - 2*n5*n7 - 2*n7^2)*j[p4, n1, -1 + n2, n3, n4, n5, 1, 2 + n7, 
      1, 0, 1, 0, -1, 1, 1])/(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 
     3*d*n2 - 2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     30*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-22 + 9*d - 2*n1 - 4*n2 - 4*n3 - 6*n4 - 6*n5 - 28*n7 + 9*d*n7 - 
      2*n1*n7 - 4*n2*n7 - 4*n3*n7 - 6*n4*n7 - 6*n5*n7 - 6*n7^2)*
     j[p4, n1, -1 + n2, n3, n4, n5, 1, 2 + n7, 1, 0, 1, 1, -1, 0, 1])/
    (2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
      26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-6 + 3*d + 2*n1 - 4*n3 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, -1 + n2, n3, n4, 
      n5, 2, 1 + n7, 0, 0, 1, 1, -1, 1, 1])/
    (2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
      26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, -1 + n2, n3, n4, 
      n5, 2, 1 + n7, 1, 0, 1, 1, -1, 0, 1])/
    (2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
      26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, -1 + n2, n3, n4, 
      n5, 2, 1 + n7, 1, 0, 1, 1, -1, 1, 0])/
    (2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
      26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((15*n5 - 6*d*n5 + 2*n1*n5 + 3*n2*n5 + 2*n3*n5 + 4*n4*n5 + 4*n5^2 + 
      4*n5*n7)*j[p4, n1, -1 + n2, n3, n4, 1 + n5, 1, 1 + n7, 1, 0, 1, 1, -1, 
      0, 1])/(-30 + 27*d - 6*d^2 + 10*n1 - 4*d*n1 - 6*n2 + 3*d*n2 + 2*n1*n2 - 
     26*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 30*n4 + 13*d*n4 + 
     2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 8*n5 + 4*d*n5 + 4*n1*n5 - 
     6*n3*n5 - 6*n4*n5 - 16*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 
     8*n4*n7 - 2*n5*n7 - 2*n7^2) + 
   ((-15*n5 + 6*d*n5 - 2*n1*n5 - 3*n2*n5 - 2*n3*n5 - 4*n4*n5 - 4*n5^2 - 
      4*n5*n7)*j[p4, n1, -1 + n2, n3, n4, 1 + n5, 1, 1 + n7, 1, 0, 1, 1, -1, 
      1, 0])/(-30 + 27*d - 6*d^2 + 10*n1 - 4*d*n1 - 6*n2 + 3*d*n2 + 2*n1*n2 - 
     26*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 30*n4 + 13*d*n4 + 
     2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 8*n5 + 4*d*n5 + 4*n1*n5 - 
     6*n3*n5 - 6*n4*n5 - 16*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 
     8*n4*n7 - 2*n5*n7 - 2*n7^2) + 
   ((7*n4 - 3*d*n4 + n2*n4 + 2*n3*n4 + 2*n4^2 + 2*n4*n5 + 2*n4*n7)*
     j[p4, n1, -1 + n2, n3, 1 + n4, n5, 0, 1 + n7, 1, 0, 1, 1, -1, 1, 1])/
    (30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((-7*n4 + 3*d*n4 - n2*n4 - 2*n3*n4 - 2*n4^2 - 
      2*n4*n5 - 2*n4*n7)*j[p4, n1, -1 + n2, n3, 1 + n4, n5, 1, 1 + n7, 0, 0, 
      1, 1, -1, 1, 1])/(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 
     2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 
     13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 
     4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 
     6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((8*n4 - 3*d*n4 + 2*n1*n4 + 2*n2*n4 + 2*n4^2 + 2*n4*n5 + 2*n4*n7)*
     j[p4, n1, -1 + n2, n3, 1 + n4, n5, 1, 1 + n7, 1, 0, 1, 1, -1, 1, 0])/
    (2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
      26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-7*n3 + 3*d*n3 - n2*n3 - 2*n3^2 - 2*n3*n4 - 2*n3*n5 - 2*n3*n7)*
     j[p4, n1, -1 + n2, 1 + n3, n4, n5, 1, 1 + n7, 0, 0, 1, 1, -1, 1, 1])/
    (30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((7*n3 - 3*d*n3 + n2*n3 + 2*n3^2 + 2*n3*n4 + 
      2*n3*n5 + 2*n3*n7)*j[p4, n1, -1 + n2, 1 + n3, n4, n5, 1, 1 + n7, 1, 0, 
      0, 1, -1, 1, 1])/(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 
     2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 
     13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 
     4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 
     6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-7*n3 + 3*d*n3 - n2*n3 - 2*n3^2 - 2*n3*n4 - 2*n3*n5 - 2*n3*n7)*
     j[p4, n1, -1 + n2, 1 + n3, n4, n5, 1, 1 + n7, 1, 0, 1, 0, -1, 1, 1])/
    (30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((-6*n3 + 3*d*n3 + 2*n1*n3 - 4*n3^2 - 2*n3*n4 - 
      2*n3*n5 - 2*n3*n7)*j[p4, n1, -1 + n2, 1 + n3, n4, n5, 1, 1 + n7, 1, 0, 
      1, 1, -1, 0, 1])/(2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 
      3*d*n2 - 2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
      30*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 
      2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, n2, -1 + n3, n4, 
      n5, 1, 1 + n7, 1, 0, 1, 1, -1, 0, 2])/(30 - 27*d + 6*d^2 - 10*n1 + 
     4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
     4*n3^2 + 30*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
     8*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-40 + 31*d - 6*d^2 - 10*n1 + 4*d*n1 - 18*n2 + 7*d*n2 - 2*n1*n2 - 
      2*n2^2 - 8*n3 + 3*d*n3 - 2*n1*n3 - 2*n2*n3 - 18*n4 + 7*d*n4 - 2*n1*n4 - 
      4*n2*n4 - 2*n3*n4 - 2*n4^2 - 26*n5 + 10*d*n5 - 4*n1*n5 - 6*n2*n5 - 
      2*n3*n5 - 6*n4*n5 - 4*n5^2 - 18*n7 + 7*d*n7 - 2*n1*n7 - 4*n2*n7 - 
      2*n3*n7 - 4*n4*n7 - 6*n5*n7 - 2*n7^2)*j[p4, n1, n2, -1 + n3, n4, n5, 1, 
      1 + n7, 1, 0, 1, 1, -1, 1, 1])/(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     30*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-7 + 3*d - n2 - 2*n3 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, -1 + n3, n4, 
      n5, 1, 1 + n7, 1, 0, 2, 0, -1, 1, 1])/(30 - 27*d + 6*d^2 - 10*n1 + 
     4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
     4*n3^2 + 30*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
     8*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((22 - 9*d + 2*n1 + 4*n2 + 4*n3 + 6*n4 + 6*n5 + 28*n7 - 9*d*n7 + 2*n1*n7 + 
      4*n2*n7 + 4*n3*n7 + 6*n4*n7 + 6*n5*n7 + 6*n7^2)*
     j[p4, n1, n2, -1 + n3, n4, n5, 1, 2 + n7, 0, 0, 1, 1, -1, 1, 1])/
    (2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
      26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 10*n7 + 3*d*n7 - 2*n1*n7 - 
      2*n2*n7 - 2*n4*n7 - 2*n5*n7 - 2*n7^2)*j[p4, n1, n2, -1 + n3, n4, n5, 1, 
      2 + n7, 1, 0, 0, 1, -1, 1, 1])/(2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 
      6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
      4*n3^2 + 30*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
      8*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 
      2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 10*n7 - 3*d*n7 + 2*n1*n7 + 
      2*n2*n7 + 2*n4*n7 + 2*n5*n7 + 2*n7^2)*j[p4, n1, n2, -1 + n3, n4, n5, 1, 
      2 + n7, 1, 0, 1, 0, -1, 1, 1])/(2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 
      6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
      4*n3^2 + 30*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
      8*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 
      2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-7 + 3*d - n2 - 2*n3 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, -1 + n3, n4, 
      n5, 2, 1 + n7, 0, 0, 1, 1, -1, 1, 1])/(30 - 27*d + 6*d^2 - 10*n1 + 
     4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
     4*n3^2 + 30*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
     8*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, -1 + n3, n4, 
      n5, 2, 1 + n7, 1, 0, 0, 1, -1, 1, 1])/
    (2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
      26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-15*n4 + 6*d*n4 - 2*n1*n4 - 3*n2*n4 - 2*n3*n4 - 4*n4^2 - 4*n4*n5 - 
      4*n4*n7)*j[p4, n1, n2, -1 + n3, 1 + n4, n5, 0, 1 + n7, 1, 0, 1, 1, -1, 
      1, 1])/(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
     26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
     2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
     6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
     8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((22*n4 - 9*d*n4 + 2*n1*n4 + 4*n2*n4 + 4*n3*n4 + 6*n4^2 + 6*n4*n5 + 
      6*n4*n7)*j[p4, n1, n2, -1 + n3, 1 + n4, n5, 1, 1 + n7, 0, 0, 1, 1, -1, 
      1, 1])/(2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 
      2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 
      13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 
      4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 
      6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8*n4 + 3*d*n4 - 2*n1*n4 - 2*n2*n4 - 2*n4^2 - 2*n4*n5 - 2*n4*n7)*
     j[p4, n1, n2, -1 + n3, 1 + n4, n5, 1, 1 + n7, 1, 0, 0, 1, -1, 1, 1])/
    (2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
      26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8*n4 - 3*d*n4 + 2*n1*n4 + 2*n2*n4 + 2*n4^2 + 2*n4*n5 + 2*n4*n7)*
     j[p4, n1, n2, -1 + n3, 1 + n4, n5, 1, 1 + n7, 1, 0, 1, 0, -1, 1, 1])/
    (2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
      26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((28 - 26*d + 6*d^2 + 4*n2 - 2*d*n2 + 8*n3 - 4*d*n3 + 22*n4 - 10*d*n4 + 
      2*n2*n4 + 4*n3*n4 + 4*n4^2 + 22*n5 - 10*d*n5 + 2*n2*n5 + 4*n3*n5 + 
      8*n4*n5 + 4*n5^2 + 8*n7 - 4*d*n7 + 4*n4*n7 + 4*n5*n7)*
     j[p4, n1, n2, n3, -1 + n4, n5, 1, 1 + n7, 1, 0, 1, 1, -1, 1, 1])/
    (30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((7 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*
     j[p4, n1, n2, n3, -1 + n4, n5, 2, 1 + n7, 0, 0, 1, 1, -1, 1, 1])/
    (30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((-7 + 3*d - n2 - 2*n3 - 2*n4 - 2*n5 - 2*n7)*
     j[p4, n1, n2, n3, -1 + n4, n5, 2, 1 + n7, 1, 0, 0, 1, -1, 1, 1])/
    (30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((7 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*
     j[p4, n1, n2, n3, -1 + n4, n5, 2, 1 + n7, 1, 0, 1, 1, -1, 0, 1])/
    (30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((7 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*
     j[p4, n1, n2, n3, -1 + n4, n5, 2, 1 + n7, 1, 0, 1, 1, -1, 1, 0])/
    (30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((7*n5 - 3*d*n5 + n2*n5 + 2*n3*n5 + 2*n4*n5 + 
      2*n5^2 + 2*n5*n7)*j[p4, n1, n2, n3, -1 + n4, 1 + n5, 1, 1 + n7, 1, 0, 
      1, 1, -1, 0, 1])/(-30 + 27*d - 6*d^2 + 10*n1 - 4*d*n1 - 6*n2 + 3*d*n2 + 
     2*n1*n2 - 26*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 30*n4 + 
     13*d*n4 + 2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 8*n5 + 4*d*n5 + 
     4*n1*n5 - 6*n3*n5 - 6*n4*n5 - 16*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 
     6*n3*n7 - 8*n4*n7 - 2*n5*n7 - 2*n7^2) + 
   ((-7*n5 + 3*d*n5 - n2*n5 - 2*n3*n5 - 2*n4*n5 - 2*n5^2 - 2*n5*n7)*
     j[p4, n1, n2, n3, -1 + n4, 1 + n5, 1, 1 + n7, 1, 0, 1, 1, -1, 1, 0])/
    (-30 + 27*d - 6*d^2 + 10*n1 - 4*d*n1 - 6*n2 + 3*d*n2 + 2*n1*n2 - 26*n3 + 
     11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 30*n4 + 13*d*n4 + 2*n1*n4 - 
     4*n2*n4 - 10*n3*n4 - 6*n4^2 - 8*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 
     6*n4*n5 - 16*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 8*n4*n7 - 
     2*n5*n7 - 2*n7^2) + ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*
     j[p4, n1, n2, n3, n4, -1 + n5, 0, 1 + n7, 1, 0, 1, 1, -1, 1, 2])/
    (30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*
     j[p4, n1, n2, n3, n4, -1 + n5, 1, 1 + n7, 0, 0, 1, 1, -1, 1, 2])/
    (30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*
     j[p4, n1, n2, n3, n4, -1 + n5, 1, 1 + n7, 1, 0, 1, 1, -1, 0, 2])/
    (30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((-16 + 14*d - 3*d^2 - 4*n1 + 2*d*n1 - 4*n2 + 
      2*d*n2 - 12*n4 + 5*d*n4 - 2*n1*n4 - 2*n2*n4 - 2*n4^2 - 12*n5 + 5*d*n5 - 
      2*n1*n5 - 2*n2*n5 - 4*n4*n5 - 2*n5^2 - 4*n7 + 2*d*n7 - 2*n4*n7 - 
      2*n5*n7)*j[p4, n1, n2, n3, n4, -1 + n5, 1, 1 + n7, 1, 0, 1, 1, -1, 1, 
      1])/(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
     26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
     2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
     6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
     8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, n3, n4, 
      -1 + n5, 2, 1 + n7, 0, 0, 1, 1, -1, 1, 1])/
    (2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
      26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, n3, n4, 
      -1 + n5, 2, 1 + n7, 1, 0, 0, 1, -1, 1, 1])/
    (2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
      26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, n3, n4, 
      -1 + n5, 2, 1 + n7, 1, 0, 1, 1, -1, 0, 1])/
    (2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
      26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, n3, n4, 
      -1 + n5, 2, 1 + n7, 1, 0, 1, 1, -1, 1, 0])/
    (2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
      26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((7 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, n2, n3, n4, n5, 0, 
      1 + n7, 1, -1, 1, 1, -1, 1, 2])/(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     30*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-1 - 2*n1 - n2 + 2*n3 + 8*n5 - 3*d*n5 + 2*n1*n5 + 2*n2*n5 + 2*n4*n5 + 
      2*n5^2 + 2*n5*n7)*j[p4, n1, n2, n3, n4, n5, 0, 1 + n7, 1, 0, 1, 1, -1, 
      1, 1])/(-30 + 27*d - 6*d^2 + 10*n1 - 4*d*n1 - 6*n2 + 3*d*n2 + 2*n1*n2 - 
     26*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 30*n4 + 13*d*n4 + 
     2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 8*n5 + 4*d*n5 + 4*n1*n5 - 
     6*n3*n5 - 6*n4*n5 - 16*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 
     8*n4*n7 - 2*n5*n7 - 2*n7^2) + 
   ((-7 + 3*d - n2 - 2*n3 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, n3, n4, n5, 0, 
      1 + n7, 1, 0, 1, 1, -1, 1, 2])/(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     30*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((7 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, n2, n3, n4, n5, 1, 
      n7, 0, 0, 2, 1, -1, 1, 1])/(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 
     3*d*n2 - 2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     30*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, n3, n4, n5, 
      1, n7, 1, 0, 1, 1, -1, 0, 2])/(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     30*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((7 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, n2, n3, n4, n5, 1, 
      n7, 1, 0, 2, 0, -1, 1, 1])/(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 
     3*d*n2 - 2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     30*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((7 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, n2, n3, n4, n5, 1, 
      n7, 1, 0, 2, 1, -1, 0, 1])/(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 
     3*d*n2 - 2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     30*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((7 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, n2, n3, n4, n5, 1, 
      1 + n7, 0, -1, 1, 1, -1, 1, 2])/(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     30*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((14 - 6*d + 14*n1 - 6*d*n1 - 34*n2 + 15*d*n2 - 6*n2^2 + 56*n3 - 21*d*n3 + 
      10*n1*n3 + 2*n2*n3 + 8*n3^2 - 10*n4 + 6*d*n4 + 4*n1*n4 - 12*n2*n4 + 
      10*n3*n4 - 4*n4^2 + 4*n5 + 4*n1*n5 - 10*n2*n5 + 14*n3*n5 - 4*n4*n5 - 
      4*n7 + 3*d*n7 + 2*n1*n7 - 12*n2*n7 + 14*n3*n7 - 6*n4*n7 - 2*n5*n7 - 
      2*n7^2)*j[p4, n1, n2, n3, n4, n5, 1, 1 + n7, 0, 0, 1, 1, -1, 1, 1])/
    (2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
      26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-7 + 3*d - n2 - 2*n3 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, n3, n4, n5, 1, 
      1 + n7, 0, 0, 1, 1, -1, 1, 2])/(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     30*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-7 + 3*d - n2 - 2*n3 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, n3, n4, n5, 1, 
      1 + n7, 0, 0, 1, 1, -1, 2, 1])/(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     30*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-22 + 9*d - 2*n1 - 4*n2 - 4*n3 - 6*n4 - 6*n5 - 6*n7)*
     j[p4, n1, n2, n3, n4, n5, 1, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
      26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-22 + 9*d - 2*n1 - 4*n2 - 4*n3 - 6*n4 - 6*n5 - 6*n7)*
     j[p4, n1, n2, n3, n4, n5, 1, 1 + n7, 0, 0, 1, 2, -2, 1, 1])/
    (2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
      26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((22 - 9*d + 2*n1 + 4*n2 + 4*n3 + 6*n4 + 6*n5 + 6*n7)*
     j[p4, n1, n2, n3, n4, n5, 1, 1 + n7, 0, 0, 1, 2, -1, 1, 1])/
    (2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
      26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((22 - 9*d + 2*n1 + 4*n2 + 4*n3 + 6*n4 + 6*n5 + 6*n7)*
     j[p4, n1, n2, n3, n4, n5, 1, 1 + n7, 1, -1, 1, 1, -1, 0, 2])/
    (2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
      26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8 - 3*d + 2*n1 + 16*n2 - 6*d*n2 + 2*n2^2 - 8*n3 + 3*d*n3 - 2*n1*n3 + 
      2*n2*n3 - 12*n4 + 6*d*n4 + 2*n2*n4 - 6*n3*n4 - 4*n4^2 + 2*n5 + 
      4*n2*n5 - 2*n3*n5 - 4*n4*n5 - 4*n7 + 3*d*n7 + 2*n1*n7 + 4*n2*n7 - 
      6*n3*n7 - 6*n4*n7 - 2*n5*n7 - 2*n7^2)*j[p4, n1, n2, n3, n4, n5, 1, 
      1 + n7, 1, 0, 0, 1, -1, 1, 1])/(2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 
      6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
      4*n3^2 + 30*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
      8*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 
      2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-6 + 3*d - 12*n1 + 6*d*n1 - 2*n1*n2 + 4*n3 - 3*d*n3 - 2*n1*n3 + 
      2*n2*n3 + 12*n4 - 6*d*n4 - 4*n1*n4 + 2*n2*n4 + 6*n3*n4 + 4*n4^2 - 
      2*n5 - 4*n1*n5 + 2*n3*n5 + 4*n4*n5 + 4*n7 - 3*d*n7 - 6*n1*n7 + 
      6*n3*n7 + 6*n4*n7 + 2*n5*n7 + 2*n7^2)*j[p4, n1, n2, n3, n4, n5, 1, 
      1 + n7, 1, 0, 1, 0, -1, 1, 1])/(2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 
      6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
      4*n3^2 + 30*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
      8*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 
      2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, n2, n3, n4, n5, 1, 
      1 + n7, 1, 0, 1, 1, -2, 0, 2])/(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     30*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-32 + 12*d - 22*n1 + 6*d*n1 - 52*n2 + 18*d*n2 - 6*n1*n2 - 8*n2^2 + 
      38*n3 - 15*d*n3 + 2*n1*n3 + 4*n3^2 - 8*n4 - 4*n1*n4 - 12*n2*n4 + 
      10*n3*n4 - 3*d*n5 - 2*n1*n5 - 10*n2*n5 + 10*n3*n5 + 2*n4*n5 + 2*n5^2 + 
      6*n7 - 6*d*n7 - 4*n1*n7 - 10*n2*n7 + 14*n3*n7 + 4*n4*n7 + 6*n5*n7 + 
      4*n7^2)*j[p4, n1, n2, n3, n4, n5, 1, 1 + n7, 1, 0, 1, 1, -1, 0, 1])/
    (2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
      26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-22 + 9*d - 2*n1 - 4*n2 - 4*n3 - 6*n4 - 6*n5 - 6*n7)*
     j[p4, n1, n2, n3, n4, n5, 1, 1 + n7, 1, 0, 1, 1, -1, 0, 2])/
    (2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
      26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-14 + 6*d - 2*n2 - 4*n3 + 10*n4 - 6*d*n4 + 2*n2*n4 + 4*n3*n4 + 4*n4^2 - 
      12*n5 + 3*d*n5 - 2*n1*n5 - 2*n2*n5 + 2*n4*n5 - 2*n5^2 - 4*n7 + 
      4*n4*n7 - 2*n5*n7)*j[p4, n1, n2, n3, n4, n5, 1, 1 + n7, 1, 0, 1, 1, -1, 
      1, 0])/(2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 
      2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 
      13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 
      4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 
      6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((48 - 42*d + 9*d^2 + 12*n1 - 6*d*n1 + 28*n2 - 12*d*n2 + 4*n1*n2 + 
      4*n2^2 + 16*n3 - 6*d*n3 + 4*n1*n3 + 4*n2*n3 + 28*n4 - 12*d*n4 + 
      4*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 28*n5 - 12*d*n5 + 4*n1*n5 + 
      8*n2*n5 + 4*n3*n5 + 8*n4*n5 + 4*n5^2 + 28*n7 - 12*d*n7 + 4*n1*n7 + 
      8*n2*n7 + 4*n3*n7 + 8*n4*n7 + 8*n5*n7 + 4*n7^2)*
     j[p4, n1, n2, n3, n4, n5, 1, 1 + n7, 1, 0, 1, 1, -1, 1, 1])/
    (2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
      26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((22 - 9*d + 2*n1 + 4*n2 + 4*n3 + 6*n4 + 6*n5 + 6*n7)*
     j[p4, n1, n2, n3, n4, n5, 1, 1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    (2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
      26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-7 + 3*d - n2 - 2*n3 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, n3, n4, n5, 1, 
      1 + n7, 1, 0, 2, 0, -2, 1, 1])/(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     30*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((7 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, n2, n3, n4, n5, 1, 
      1 + n7, 1, 0, 2, 0, -1, 1, 1])/(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     30*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, n3, n4, n5, 
      1, 1 + n7, 2, 0, 1, 0, -2, 1, 1])/
    (2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
      26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((7 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, n2, n3, n4, n5, 2, 
      n7, 0, 0, 1, 1, -1, 1, 1])/(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 
     3*d*n2 - 2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     30*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, n2, n3, n4, n5, 2, 
      n7, 1, 0, 0, 1, -1, 1, 1])/(2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 
      6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
      4*n3^2 + 30*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
      8*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 
      2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((22 - 9*d + 2*n1 + 4*n2 + 4*n3 + 6*n4 + 6*n5 + 6*n7)*
     j[p4, n1, n2, n3, n4, n5, 2, 1 + n7, 0, -1, 1, 1, -1, 1, 1])/
    (2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
      26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-7 + 3*d - n2 - 2*n3 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, n3, n4, n5, 2, 
      1 + n7, 0, 0, 1, 1, -2, 1, 1])/(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     30*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, n2, n3, n4, n5, 2, 
      1 + n7, 1, -1, 1, 1, -1, 0, 1])/(2*(30 - 27*d + 6*d^2 - 10*n1 + 
      4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 
      4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 
      6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 
      2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, n2, n3, n4, n5, 2, 
      1 + n7, 1, -1, 1, 1, -1, 1, 0])/(2*(30 - 27*d + 6*d^2 - 10*n1 + 
      4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 
      4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 
      6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 
      2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, n3, n4, n5, 
      2, 1 + n7, 1, 0, 0, 1, -2, 1, 1])/
    (2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
      26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-7*n5 + 3*d*n5 - n2*n5 - 2*n3*n5 - 2*n4*n5 - 2*n5^2 - 2*n5*n7)*
     j[p4, n1, n2, n3, n4, 1 + n5, 0, 1 + n7, 1, -1, 1, 1, -1, 1, 1])/
    (-30 + 27*d - 6*d^2 + 10*n1 - 4*d*n1 - 6*n2 + 3*d*n2 + 2*n1*n2 - 26*n3 + 
     11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 30*n4 + 13*d*n4 + 2*n1*n4 - 
     4*n2*n4 - 10*n3*n4 - 6*n4^2 - 8*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 
     6*n4*n5 - 16*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 8*n4*n7 - 
     2*n5*n7 - 2*n7^2) + ((-7*n5 + 3*d*n5 - n2*n5 - 2*n3*n5 - 2*n4*n5 - 
      2*n5^2 - 2*n5*n7)*j[p4, n1, n2, n3, n4, 1 + n5, 1, n7, 1, 0, 1, 1, -1, 
      0, 1])/(-30 + 27*d - 6*d^2 + 10*n1 - 4*d*n1 - 6*n2 + 3*d*n2 + 2*n1*n2 - 
     26*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 30*n4 + 13*d*n4 + 
     2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 8*n5 + 4*d*n5 + 4*n1*n5 - 
     6*n3*n5 - 6*n4*n5 - 16*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 
     8*n4*n7 - 2*n5*n7 - 2*n7^2) + 
   ((7*n5 - 3*d*n5 + n2*n5 + 2*n3*n5 + 2*n4*n5 + 2*n5^2 + 2*n5*n7)*
     j[p4, n1, n2, n3, n4, 1 + n5, 1, n7, 1, 0, 1, 1, -1, 1, 0])/
    (-30 + 27*d - 6*d^2 + 10*n1 - 4*d*n1 - 6*n2 + 3*d*n2 + 2*n1*n2 - 26*n3 + 
     11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 30*n4 + 13*d*n4 + 2*n1*n4 - 
     4*n2*n4 - 10*n3*n4 - 6*n4^2 - 8*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 
     6*n4*n5 - 16*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 8*n4*n7 - 
     2*n5*n7 - 2*n7^2) + ((8*n5 - 3*d*n5 + 2*n1*n5 + 2*n2*n5 + 2*n4*n5 + 
      2*n5^2 + 2*n5*n7)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 1 + n7, 1, -1, 1, 1, 
      -1, 0, 1])/(2*(-30 + 27*d - 6*d^2 + 10*n1 - 4*d*n1 - 6*n2 + 3*d*n2 + 
      2*n1*n2 - 26*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 30*n4 + 
      13*d*n4 + 2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 8*n5 + 4*d*n5 + 
      4*n1*n5 - 6*n3*n5 - 6*n4*n5 - 16*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 
      6*n3*n7 - 8*n4*n7 - 2*n5*n7 - 2*n7^2)) + 
   ((-8*n5 + 3*d*n5 - 2*n1*n5 - 2*n2*n5 - 2*n4*n5 - 2*n5^2 - 2*n5*n7)*
     j[p4, n1, n2, n3, n4, 1 + n5, 1, 1 + n7, 1, -1, 1, 1, -1, 1, 0])/
    (2*(-30 + 27*d - 6*d^2 + 10*n1 - 4*d*n1 - 6*n2 + 3*d*n2 + 2*n1*n2 - 
      26*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 30*n4 + 13*d*n4 + 
      2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 8*n5 + 4*d*n5 + 4*n1*n5 - 
      6*n3*n5 - 6*n4*n5 - 16*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 
      8*n4*n7 - 2*n5*n7 - 2*n7^2)) + 
   ((-8*n4 + 3*d*n4 - 2*n1*n4 - 2*n2*n4 - 2*n4^2 - 2*n4*n5 - 2*n4*n7)*
     j[p4, n1, n2, n3, 1 + n4, -1 + n5, 0, 1 + n7, 1, 0, 1, 1, -1, 1, 1])/
    (30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((8*n4 - 3*d*n4 + 2*n1*n4 + 2*n2*n4 + 2*n4^2 + 
      2*n4*n5 + 2*n4*n7)*j[p4, n1, n2, n3, 1 + n4, -1 + n5, 1, 1 + n7, 0, 0, 
      1, 1, -1, 1, 1])/(2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 
      3*d*n2 - 2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
      30*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 
      2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8*n4 + 3*d*n4 - 2*n1*n4 - 2*n2*n4 - 2*n4^2 - 2*n4*n5 - 2*n4*n7)*
     j[p4, n1, n2, n3, 1 + n4, -1 + n5, 1, 1 + n7, 1, 0, 0, 1, -1, 1, 1])/
    (2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
      26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8*n4 - 3*d*n4 + 2*n1*n4 + 2*n2*n4 + 2*n4^2 + 2*n4*n5 + 2*n4*n7)*
     j[p4, n1, n2, n3, 1 + n4, -1 + n5, 1, 1 + n7, 1, 0, 1, 0, -1, 1, 1])/
    (2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
      26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8*n4 + 3*d*n4 - 2*n1*n4 - 2*n2*n4 - 2*n4^2 - 2*n4*n5 - 2*n4*n7)*
     j[p4, n1, n2, n3, 1 + n4, -1 + n5, 1, 1 + n7, 1, 0, 1, 1, -1, 1, 0])/
    (2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
      26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + ((n4 + 2*n1*n4 + n2*n4 - 2*n3*n4)*
     j[p4, n1, n2, n3, 1 + n4, n5, 0, n7, 1, 0, 1, 1, -1, 1, 1])/
    (30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((7*n4 - 3*d*n4 + n2*n4 + 2*n3*n4 + 2*n4^2 + 
      2*n4*n5 + 2*n4*n7)*j[p4, n1, n2, n3, 1 + n4, n5, 0, 1 + n7, 1, -1, 1, 
      1, -1, 1, 1])/(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 
     2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 
     13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 
     4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 
     6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((6*n4 - 3*d*n4 - 2*n1*n4 + 4*n3*n4 + 2*n4^2 + 2*n4*n5 + 2*n4*n7)*
     j[p4, n1, n2, n3, 1 + n4, n5, 1, n7, 0, 0, 1, 1, -1, 1, 1])/
    (2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
      26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8*n4 - 3*d*n4 + 2*n1*n4 + 2*n2*n4 + 2*n4^2 + 2*n4*n5 + 2*n4*n7)*
     j[p4, n1, n2, n3, 1 + n4, n5, 1, n7, 1, 0, 0, 1, -1, 1, 1])/
    (2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
      26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8*n4 + 3*d*n4 - 2*n1*n4 - 2*n2*n4 - 2*n4^2 - 2*n4*n5 - 2*n4*n7)*
     j[p4, n1, n2, n3, 1 + n4, n5, 1, n7, 1, 0, 1, 0, -1, 1, 1])/
    (2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
      26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-7*n4 + 3*d*n4 - n2*n4 - 2*n3*n4 - 2*n4^2 - 2*n4*n5 - 2*n4*n7)*
     j[p4, n1, n2, n3, 1 + n4, n5, 1, 1 + n7, 0, -1, 1, 1, -1, 1, 1])/
    (30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((8*n4 - 3*d*n4 + 2*n1*n4 + 2*n2*n4 + 2*n4^2 + 
      2*n4*n5 + 2*n4*n7)*j[p4, n1, n2, n3, 1 + n4, n5, 1, 1 + n7, 1, -1, 1, 
      1, -1, 1, 0])/(2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 
      2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 
      13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 
      4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 
      6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-10*n3 + 3*d*n3 - 6*n1*n3 - 4*n2*n3 + 4*n3^2 - 2*n3*n4 - 2*n3*n5 - 
      2*n3*n7)*j[p4, n1, n2, 1 + n3, n4, n5, 1, n7, 0, 0, 1, 1, -1, 1, 1])/
    (2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
      26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-6*n3 + 3*d*n3 + 2*n1*n3 - 4*n3^2 - 2*n3*n4 - 2*n3*n5 - 2*n3*n7)*
     j[p4, n1, n2, 1 + n3, n4, n5, 1, n7, 1, 0, 0, 1, -1, 1, 1])/
    (2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
      26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((6*n3 - 3*d*n3 - 2*n1*n3 + 4*n3^2 + 2*n3*n4 + 2*n3*n5 + 2*n3*n7)*
     j[p4, n1, n2, 1 + n3, n4, n5, 1, n7, 1, 0, 1, 0, -1, 1, 1])/
    (2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
      26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-10*n3 + 3*d*n3 - 6*n1*n3 - 4*n2*n3 + 4*n3^2 - 2*n3*n4 - 2*n3*n5 - 
      2*n3*n7)*j[p4, n1, n2, 1 + n3, n4, n5, 1, n7, 1, 0, 1, 1, -1, 0, 1])/
    (2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 
      26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((7*n3 - 3*d*n3 + n2*n3 + 2*n3^2 + 2*n3*n4 + 2*n3*n5 + 2*n3*n7)*
     j[p4, n1, n2, 1 + n3, n4, n5, 1, 1 + n7, 0, 0, 1, 1, -2, 1, 1])/
    (30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((-14*n3 + 6*d*n3 - 2*n2*n3 - 4*n3^2 - 4*n3*n4 - 
      4*n3*n5 - 4*n3*n7)*j[p4, n1, n2, 1 + n3, n4, n5, 1, 1 + n7, 0, 0, 1, 1, 
      -1, 1, 1])/(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 
     2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 
     13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 
     4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 
     6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((7*n3 - 3*d*n3 + n2*n3 + 2*n3^2 + 2*n3*n4 + 2*n3*n5 + 2*n3*n7)*
     j[p4, n1, n2, 1 + n3, n4, n5, 1, 1 + n7, 1, 0, 0, 1, -2, 1, 1])/
    (30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((-7*n3 + 3*d*n3 - n2*n3 - 2*n3^2 - 2*n3*n4 - 
      2*n3*n5 - 2*n3*n7)*j[p4, n1, n2, 1 + n3, n4, n5, 1, 1 + n7, 1, 0, 1, 0, 
      -2, 1, 1])/(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 
     2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 
     13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 
     4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 
     6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((8*n3 - 3*d*n3 + 2*n1*n3 + 2*n2*n3 + 2*n3*n4 + 2*n3*n5 + 2*n3*n7)*
     j[p4, n1, n2, 1 + n3, n4, n5, 1, 1 + n7, 1, 0, 1, 1, -2, 0, 1])/
    (30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((-22*n3 + 9*d*n3 - 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 
      6*n3*n4 - 6*n3*n5 - 6*n3*n7)*j[p4, n1, n2, 1 + n3, n4, n5, 1, 1 + n7, 
      1, 0, 1, 1, -1, 0, 1])/(2*(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 
      3*d*n2 - 2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
      30*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 
      2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((7*n2 - 3*d*n2 + n2^2 + 2*n2*n3 + 2*n2*n4 + 2*n2*n5 + 2*n2*n7)*
     j[p4, n1, 1 + n2, -1 + n3, n4, n5, 1, 1 + n7, 0, 0, 1, 1, -1, 1, 1])/
    (-30 + 27*d - 6*d^2 + 10*n1 - 4*d*n1 - 6*n2 + 3*d*n2 + 2*n1*n2 - 26*n3 + 
     11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 30*n4 + 13*d*n4 + 2*n1*n4 - 
     4*n2*n4 - 10*n3*n4 - 6*n4^2 - 8*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 
     6*n4*n5 - 16*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 8*n4*n7 - 
     2*n5*n7 - 2*n7^2) + ((8*n2 - 3*d*n2 + 2*n1*n2 + 2*n2^2 + 2*n2*n4 + 
      2*n2*n5 + 2*n2*n7)*j[p4, n1, 1 + n2, -1 + n3, n4, n5, 1, 1 + n7, 1, 0, 
      0, 1, -1, 1, 1])/(2*(-30 + 27*d - 6*d^2 + 10*n1 - 4*d*n1 - 6*n2 + 
      3*d*n2 + 2*n1*n2 - 26*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 
      30*n4 + 13*d*n4 + 2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 8*n5 + 
      4*d*n5 + 4*n1*n5 - 6*n3*n5 - 6*n4*n5 - 16*n7 + 7*d*n7 + 2*n1*n7 - 
      2*n2*n7 - 6*n3*n7 - 8*n4*n7 - 2*n5*n7 - 2*n7^2)) + 
   ((-14*n2 + 6*d*n2 - 2*n2^2 - 4*n2*n3 - 4*n2*n4 - 4*n2*n5 - 4*n2*n7)*
     j[p4, n1, 1 + n2, n3, n4, n5, 1, n7, 0, 0, 1, 1, -1, 1, 1])/
    (-30 + 27*d - 6*d^2 + 10*n1 - 4*d*n1 - 6*n2 + 3*d*n2 + 2*n1*n2 - 26*n3 + 
     11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 30*n4 + 13*d*n4 + 2*n1*n4 - 
     4*n2*n4 - 10*n3*n4 - 6*n4^2 - 8*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 
     6*n4*n5 - 16*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 8*n4*n7 - 
     2*n5*n7 - 2*n7^2) + ((6*n2 - 3*d*n2 - 2*n1*n2 + 4*n2*n3 + 2*n2*n4 + 
      2*n2*n5 + 2*n2*n7)*j[p4, n1, 1 + n2, n3, n4, n5, 1, n7, 1, 0, 0, 1, -1, 
      1, 1])/(2*(-30 + 27*d - 6*d^2 + 10*n1 - 4*d*n1 - 6*n2 + 3*d*n2 + 
      2*n1*n2 - 26*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 30*n4 + 
      13*d*n4 + 2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 8*n5 + 4*d*n5 + 
      4*n1*n5 - 6*n3*n5 - 6*n4*n5 - 16*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 
      6*n3*n7 - 8*n4*n7 - 2*n5*n7 - 2*n7^2)) + 
   ((-14*n2 + 6*d*n2 - 2*n2^2 - 4*n2*n3 - 4*n2*n4 - 4*n2*n5 - 4*n2*n7)*
     j[p4, n1, 1 + n2, n3, n4, n5, 1, n7, 1, 0, 1, 1, -1, 0, 1])/
    (-30 + 27*d - 6*d^2 + 10*n1 - 4*d*n1 - 6*n2 + 3*d*n2 + 2*n1*n2 - 26*n3 + 
     11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 30*n4 + 13*d*n4 + 2*n1*n4 - 
     4*n2*n4 - 10*n3*n4 - 6*n4^2 - 8*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 
     6*n4*n5 - 16*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 8*n4*n7 - 
     2*n5*n7 - 2*n7^2) + ((7*n2 - 3*d*n2 + n2^2 + 2*n2*n3 + 2*n2*n4 + 
      2*n2*n5 + 2*n2*n7)*j[p4, n1, 1 + n2, n3, n4, n5, 1, 1 + n7, 0, 0, 1, 1, 
      -2, 1, 1])/(-30 + 27*d - 6*d^2 + 10*n1 - 4*d*n1 - 6*n2 + 3*d*n2 + 
     2*n1*n2 - 26*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 30*n4 + 
     13*d*n4 + 2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 8*n5 + 4*d*n5 + 
     4*n1*n5 - 6*n3*n5 - 6*n4*n5 - 16*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 
     6*n3*n7 - 8*n4*n7 - 2*n5*n7 - 2*n7^2) + 
   ((8*n2 - 3*d*n2 + 2*n1*n2 + 2*n2^2 + 2*n2*n4 + 2*n2*n5 + 2*n2*n7)*
     j[p4, n1, 1 + n2, n3, n4, n5, 1, 1 + n7, 1, 0, 0, 1, -2, 1, 1])/
    (2*(-30 + 27*d - 6*d^2 + 10*n1 - 4*d*n1 - 6*n2 + 3*d*n2 + 2*n1*n2 - 
      26*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 30*n4 + 13*d*n4 + 
      2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 8*n5 + 4*d*n5 + 4*n1*n5 - 
      6*n3*n5 - 6*n4*n5 - 16*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 
      8*n4*n7 - 2*n5*n7 - 2*n7^2)) + 
   ((-7*n1 + 3*d*n1 - n1*n2 - 2*n1*n3 - 2*n1*n4 - 2*n1*n5 - 2*n1*n7)*
     j[p4, 1 + n1, n2, n3, n4, n5, 1, 1 + n7, 0, 0, 1, 1, -1, 1, 1])/
    (30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((7*n1 - 3*d*n1 + n1*n2 + 2*n1*n3 + 2*n1*n4 + 
      2*n1*n5 + 2*n1*n7)*j[p4, 1 + n1, n2, n3, n4, n5, 1, 1 + n7, 1, 0, 1, 0, 
      -1, 1, 1])/(30 - 27*d + 6*d^2 - 10*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 
     2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 30*n4 - 
     13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 
     4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 16*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 
     6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n6 == 1 && 
    n8 == 1 && n9 == 0 && n7 != 0 -> 
  ((8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4, -1 + n1, n2, n3, n4, n5, 
      1, 1 + n7, 0, 0, 1, 1, 0, 2, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((24 - 9*d + 2*n1 + 4*n2 + 4*n3 + 6*n4 + 6*n5 + 6*n7)*
     j[p4, -1 + n1, n2, n3, n4, n5, 1, 1 + n7, 0, 0, 2, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-192 + 144*d - 27*d^2 - 16*n1 + 6*d*n1 - 80*n2 + 30*d*n2 - 4*n1*n2 - 
      8*n2^2 - 80*n3 + 30*d*n3 - 4*n1*n3 - 16*n2*n3 - 8*n3^2 - 96*n4 + 
      36*d*n4 - 4*n1*n4 - 20*n2*n4 - 20*n3*n4 - 12*n4^2 - 96*n5 + 36*d*n5 - 
      4*n1*n5 - 20*n2*n5 - 20*n3*n5 - 24*n4*n5 - 12*n5^2 - 96*n7 + 36*d*n7 - 
      4*n1*n7 - 20*n2*n7 - 20*n3*n7 - 24*n4*n7 - 24*n5*n7 - 12*n7^2)*
     j[p4, -1 + n1, n2, n3, n4, n5, 1, 1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((24 - 9*d + 2*n1 + 4*n2 + 4*n3 + 6*n4 + 6*n5 + 6*n7)*
     j[p4, -1 + n1, n2, n3, n4, n5, 1, 1 + n7, 1, 0, 2, 1, 0, 0, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*j[p4, -1 + n1, n2, n3, n4, 
      n5, 1, 1 + n7, 2, 0, 1, 1, 0, 0, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8*n5 - 3*d*n5 + n2*n5 + 2*n3*n5 + 2*n4*n5 + 2*n5^2 + 2*n5*n7)*
     j[p4, -1 + n1, n2, n3, n4, 1 + n5, 0, 1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    (-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 28*n3 + 
     11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 2*n1*n4 - 
     4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 
     6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 8*n4*n7 - 
     2*n5*n7 - 2*n7^2) + ((-8*n5 + 3*d*n5 - 2*n1*n5 - 2*n2*n5 - 2*n4*n5 - 
      2*n5^2 - 2*n5*n7)*j[p4, -1 + n1, n2, n3, n4, 1 + n5, 1, 1 + n7, 1, 0, 
      1, 1, 0, 0, 1])/(2*(-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 
      3*d*n2 + 2*n1*n2 - 28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 
      34*n4 + 13*d*n4 + 2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 
      4*d*n5 + 4*n1*n5 - 6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 
      2*n2*n7 - 6*n3*n7 - 8*n4*n7 - 2*n5*n7 - 2*n7^2)) + 
   ((8*n5 - 3*d*n5 + 2*n1*n5 + 2*n2*n5 + 2*n4*n5 + 2*n5^2 + 2*n5*n7)*
     j[p4, -1 + n1, n2, n3, n4, 1 + n5, 1, 1 + n7, 1, 0, 1, 1, 0, 1, 0])/
    (2*(-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 
      28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 
      2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 
      6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 
      8*n4*n7 - 2*n5*n7 - 2*n7^2)) + 
   ((-8*n4 + 3*d*n4 - n2*n4 - 2*n3*n4 - 2*n4^2 - 2*n4*n5 - 2*n4*n7)*
     j[p4, -1 + n1, n2, n3, 1 + n4, n5, 0, 1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((8*n4 - 3*d*n4 + n2*n4 + 2*n3*n4 + 2*n4^2 + 
      2*n4*n5 + 2*n4*n7)*j[p4, -1 + n1, n2, n3, 1 + n4, n5, 1, 1 + n7, 0, 0, 
      1, 1, 0, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 
     2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 
     13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 
     4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 
     6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-8*n4 + 3*d*n4 - 2*n1*n4 - 2*n2*n4 - 2*n4^2 - 2*n4*n5 - 2*n4*n7)*
     j[p4, -1 + n1, n2, n3, 1 + n4, n5, 1, 1 + n7, 1, 0, 1, 1, 0, 1, 0])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((16*n3 - 6*d*n3 + 2*n2*n3 + 4*n3^2 + 4*n3*n4 + 4*n3*n5 + 4*n3*n7)*
     j[p4, -1 + n1, n2, 1 + n3, n4, n5, 1, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((24*n3 - 9*d*n3 + 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
      6*n3*n4 + 6*n3*n5 + 6*n3*n7)*j[p4, -1 + n1, n2, 1 + n3, n4, n5, 1, 
      1 + n7, 1, 0, 1, 1, 0, 0, 1])/(2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
      8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
      4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
      10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 
      2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-24*n2 + 9*d*n2 - 2*n1*n2 - 4*n2^2 - 4*n2*n3 - 6*n2*n4 - 6*n2*n5 - 
      6*n2*n7)*j[p4, -1 + n1, 1 + n2, n3, n4, n5, 1, 1 + n7, 0, 0, 1, 1, 0, 
      1, 1])/(2*(-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 
      2*n1*n2 - 28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 
      13*d*n4 + 2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 
      4*n1*n5 - 6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 
      6*n3*n7 - 8*n4*n7 - 2*n5*n7 - 2*n7^2)) + 
   ((-8*n2 + 3*d*n2 - 2*n1*n2 - 2*n2^2 - 2*n2*n4 - 2*n2*n5 - 2*n2*n7)*
     j[p4, -1 + n1, 1 + n2, n3, n4, n5, 1, 1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    (-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 28*n3 + 
     11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 2*n1*n4 - 
     4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 
     6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 8*n4*n7 - 
     2*n5*n7 - 2*n7^2) + ((-24 + 9*d - 2*n1 - 4*n2 - 4*n3 - 6*n4 - 6*n5 - 
      6*n7)*j[p4, n1, -1 + n2, n3, n4, n5, 1, 1 + n7, 0, 0, 2, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, -1 + n2, n3, n4, 
      n5, 1, 1 + n7, 1, 0, 1, 1, 0, 0, 2])/(40 - 31*d + 6*d^2 - 10*n1 + 
     4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
     4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
     10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 
     2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((80 - 62*d + 12*d^2 + 26*n2 - 10*d*n2 + 2*n2^2 + 36*n3 - 14*d*n3 + 
      6*n2*n3 + 4*n3^2 + 52*n4 - 20*d*n4 + 8*n2*n4 + 12*n3*n4 + 8*n4^2 + 
      36*n5 - 14*d*n5 + 6*n2*n5 + 8*n3*n5 + 12*n4*n5 + 4*n5^2 + 36*n7 - 
      14*d*n7 + 6*n2*n7 + 8*n3*n7 + 12*n4*n7 + 8*n5*n7 + 4*n7^2)*
     j[p4, n1, -1 + n2, n3, n4, n5, 1, 1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((-8 + 3*d - n2 - 2*n3 - 2*n4 - 2*n5 - 2*n7)*
     j[p4, n1, -1 + n2, n3, n4, n5, 1, 1 + n7, 1, 0, 2, 0, 0, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((-24 + 9*d - 2*n1 - 4*n2 - 4*n3 - 6*n4 - 6*n5 - 
      6*n7)*j[p4, n1, -1 + n2, n3, n4, n5, 1, 1 + n7, 1, 0, 2, 1, 0, 0, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 10*n7 - 3*d*n7 + n2*n7 + 2*n3*n7 + 
      2*n4*n7 + 2*n5*n7 + 2*n7^2)*j[p4, n1, -1 + n2, n3, n4, n5, 1, 2 + n7, 
      1, 0, 0, 1, 0, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 
     3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-8 + 3*d - n2 - 2*n3 - 2*n4 - 2*n5 - 10*n7 + 3*d*n7 - n2*n7 - 2*n3*n7 - 
      2*n4*n7 - 2*n5*n7 - 2*n7^2)*j[p4, n1, -1 + n2, n3, n4, n5, 1, 2 + n7, 
      1, 0, 1, 0, 0, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 
     3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-24 + 9*d - 2*n1 - 4*n2 - 4*n3 - 6*n4 - 6*n5 - 30*n7 + 9*d*n7 - 
      2*n1*n7 - 4*n2*n7 - 4*n3*n7 - 6*n4*n7 - 6*n5*n7 - 6*n7^2)*
     j[p4, n1, -1 + n2, n3, n4, n5, 1, 2 + n7, 1, 0, 1, 1, 0, 0, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8 + 3*d + 2*n1 - 4*n3 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, -1 + n2, n3, n4, 
      n5, 2, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, -1 + n2, n3, n4, 
      n5, 2, 1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, -1 + n2, n3, n4, 
      n5, 2, 1 + n7, 1, 0, 1, 1, 0, 1, 0])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((16*n5 - 6*d*n5 + 2*n1*n5 + 3*n2*n5 + 2*n3*n5 + 4*n4*n5 + 4*n5^2 + 
      4*n5*n7)*j[p4, n1, -1 + n2, n3, n4, 1 + n5, 1, 1 + n7, 1, 0, 1, 1, 0, 
      0, 1])/(-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 
     28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 
     2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 
     6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 
     8*n4*n7 - 2*n5*n7 - 2*n7^2) + 
   ((-16*n5 + 6*d*n5 - 2*n1*n5 - 3*n2*n5 - 2*n3*n5 - 4*n4*n5 - 4*n5^2 - 
      4*n5*n7)*j[p4, n1, -1 + n2, n3, n4, 1 + n5, 1, 1 + n7, 1, 0, 1, 1, 0, 
      1, 0])/(-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 
     28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 
     2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 
     6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 
     8*n4*n7 - 2*n5*n7 - 2*n7^2) + 
   ((8*n4 - 3*d*n4 + n2*n4 + 2*n3*n4 + 2*n4^2 + 2*n4*n5 + 2*n4*n7)*
     j[p4, n1, -1 + n2, n3, 1 + n4, n5, 0, 1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((-8*n4 + 3*d*n4 - n2*n4 - 2*n3*n4 - 2*n4^2 - 
      2*n4*n5 - 2*n4*n7)*j[p4, n1, -1 + n2, n3, 1 + n4, n5, 1, 1 + n7, 0, 0, 
      1, 1, 0, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 
     2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 
     13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 
     4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 
     6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((8*n4 - 3*d*n4 + 2*n1*n4 + 2*n2*n4 + 2*n4^2 + 2*n4*n5 + 2*n4*n7)*
     j[p4, n1, -1 + n2, n3, 1 + n4, n5, 1, 1 + n7, 1, 0, 1, 1, 0, 1, 0])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8*n3 + 3*d*n3 - n2*n3 - 2*n3^2 - 2*n3*n4 - 2*n3*n5 - 2*n3*n7)*
     j[p4, n1, -1 + n2, 1 + n3, n4, n5, 1, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((8*n3 - 3*d*n3 + n2*n3 + 2*n3^2 + 2*n3*n4 + 
      2*n3*n5 + 2*n3*n7)*j[p4, n1, -1 + n2, 1 + n3, n4, n5, 1, 1 + n7, 1, 0, 
      0, 1, 0, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 
     2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 
     13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 
     4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 
     6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-8*n3 + 3*d*n3 - n2*n3 - 2*n3^2 - 2*n3*n4 - 2*n3*n5 - 2*n3*n7)*
     j[p4, n1, -1 + n2, 1 + n3, n4, n5, 1, 1 + n7, 1, 0, 1, 0, 0, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((-8*n3 + 3*d*n3 + 2*n1*n3 - 4*n3^2 - 2*n3*n4 - 
      2*n3*n5 - 2*n3*n7)*j[p4, n1, -1 + n2, 1 + n3, n4, n5, 1, 1 + n7, 1, 0, 
      1, 1, 0, 0, 1])/(2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 
      3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
      34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
      2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, n2, -1 + n3, n4, 
      n5, 1, 1 + n7, 1, 0, 1, 1, 0, 0, 2])/(40 - 31*d + 6*d^2 - 10*n1 + 
     4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
     4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
     10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 
     2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-40 + 31*d - 6*d^2 - 10*n1 + 4*d*n1 - 18*n2 + 7*d*n2 - 2*n1*n2 - 
      2*n2^2 - 8*n3 + 3*d*n3 - 2*n1*n3 - 2*n2*n3 - 18*n4 + 7*d*n4 - 2*n1*n4 - 
      4*n2*n4 - 2*n3*n4 - 2*n4^2 - 26*n5 + 10*d*n5 - 4*n1*n5 - 6*n2*n5 - 
      2*n3*n5 - 6*n4*n5 - 4*n5^2 - 18*n7 + 7*d*n7 - 2*n1*n7 - 4*n2*n7 - 
      2*n3*n7 - 4*n4*n7 - 6*n5*n7 - 2*n7^2)*j[p4, n1, n2, -1 + n3, n4, n5, 1, 
      1 + n7, 1, 0, 1, 1, 0, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-8 + 3*d - n2 - 2*n3 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, -1 + n3, n4, 
      n5, 1, 1 + n7, 1, 0, 2, 0, 0, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 
     4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
     4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
     10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 
     2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((24 - 9*d + 2*n1 + 4*n2 + 4*n3 + 6*n4 + 6*n5 + 30*n7 - 9*d*n7 + 2*n1*n7 + 
      4*n2*n7 + 4*n3*n7 + 6*n4*n7 + 6*n5*n7 + 6*n7^2)*
     j[p4, n1, n2, -1 + n3, n4, n5, 1, 2 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 10*n7 + 3*d*n7 - 2*n1*n7 - 
      2*n2*n7 - 2*n4*n7 - 2*n5*n7 - 2*n7^2)*j[p4, n1, n2, -1 + n3, n4, n5, 1, 
      2 + n7, 1, 0, 0, 1, 0, 1, 1])/(2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
      8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
      4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
      10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 
      2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 10*n7 - 3*d*n7 + 2*n1*n7 + 
      2*n2*n7 + 2*n4*n7 + 2*n5*n7 + 2*n7^2)*j[p4, n1, n2, -1 + n3, n4, n5, 1, 
      2 + n7, 1, 0, 1, 0, 0, 1, 1])/(2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
      8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
      4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
      10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 
      2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8 + 3*d - n2 - 2*n3 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, -1 + n3, n4, 
      n5, 2, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 
     4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
     4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
     10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 
     2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, -1 + n3, n4, 
      n5, 2, 1 + n7, 1, 0, 0, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-16*n4 + 6*d*n4 - 2*n1*n4 - 3*n2*n4 - 2*n3*n4 - 4*n4^2 - 4*n4*n5 - 
      4*n4*n7)*j[p4, n1, n2, -1 + n3, 1 + n4, n5, 0, 1 + n7, 1, 0, 1, 1, 0, 
      1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
     28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
     2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
     6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
     8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((24*n4 - 9*d*n4 + 2*n1*n4 + 4*n2*n4 + 4*n3*n4 + 6*n4^2 + 6*n4*n5 + 
      6*n4*n7)*j[p4, n1, n2, -1 + n3, 1 + n4, n5, 1, 1 + n7, 0, 0, 1, 1, 0, 
      1, 1])/(2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 
      2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 
      13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 
      4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 
      6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8*n4 + 3*d*n4 - 2*n1*n4 - 2*n2*n4 - 2*n4^2 - 2*n4*n5 - 2*n4*n7)*
     j[p4, n1, n2, -1 + n3, 1 + n4, n5, 1, 1 + n7, 1, 0, 0, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8*n4 - 3*d*n4 + 2*n1*n4 + 2*n2*n4 + 2*n4^2 + 2*n4*n5 + 2*n4*n7)*
     j[p4, n1, n2, -1 + n3, 1 + n4, n5, 1, 1 + n7, 1, 0, 1, 0, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((32 - 28*d + 6*d^2 + 4*n2 - 2*d*n2 + 8*n3 - 4*d*n3 + 24*n4 - 10*d*n4 + 
      2*n2*n4 + 4*n3*n4 + 4*n4^2 + 24*n5 - 10*d*n5 + 2*n2*n5 + 4*n3*n5 + 
      8*n4*n5 + 4*n5^2 + 8*n7 - 4*d*n7 + 4*n4*n7 + 4*n5*n7)*
     j[p4, n1, n2, n3, -1 + n4, n5, 1, 1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*
     j[p4, n1, n2, n3, -1 + n4, n5, 2, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((-8 + 3*d - n2 - 2*n3 - 2*n4 - 2*n5 - 2*n7)*
     j[p4, n1, n2, n3, -1 + n4, n5, 2, 1 + n7, 1, 0, 0, 1, 0, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*
     j[p4, n1, n2, n3, -1 + n4, n5, 2, 1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*
     j[p4, n1, n2, n3, -1 + n4, n5, 2, 1 + n7, 1, 0, 1, 1, 0, 1, 0])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((8*n5 - 3*d*n5 + n2*n5 + 2*n3*n5 + 2*n4*n5 + 
      2*n5^2 + 2*n5*n7)*j[p4, n1, n2, n3, -1 + n4, 1 + n5, 1, 1 + n7, 1, 0, 
      1, 1, 0, 0, 1])/(-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 
     2*n1*n2 - 28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 
     13*d*n4 + 2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 
     4*n1*n5 - 6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 
     6*n3*n7 - 8*n4*n7 - 2*n5*n7 - 2*n7^2) + 
   ((-8*n5 + 3*d*n5 - n2*n5 - 2*n3*n5 - 2*n4*n5 - 2*n5^2 - 2*n5*n7)*
     j[p4, n1, n2, n3, -1 + n4, 1 + n5, 1, 1 + n7, 1, 0, 1, 1, 0, 1, 0])/
    (-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 28*n3 + 
     11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 2*n1*n4 - 
     4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 
     6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 8*n4*n7 - 
     2*n5*n7 - 2*n7^2) + ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*
     j[p4, n1, n2, n3, n4, -1 + n5, 0, 1 + n7, 1, 0, 1, 1, 0, 1, 2])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*
     j[p4, n1, n2, n3, n4, -1 + n5, 1, 1 + n7, 0, 0, 1, 1, 0, 1, 2])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*
     j[p4, n1, n2, n3, n4, -1 + n5, 1, 1 + n7, 1, 0, 1, 1, 0, 0, 2])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((-16 + 14*d - 3*d^2 - 4*n1 + 2*d*n1 - 4*n2 + 
      2*d*n2 - 12*n4 + 5*d*n4 - 2*n1*n4 - 2*n2*n4 - 2*n4^2 - 12*n5 + 5*d*n5 - 
      2*n1*n5 - 2*n2*n5 - 4*n4*n5 - 2*n5^2 - 4*n7 + 2*d*n7 - 2*n4*n7 - 
      2*n5*n7)*j[p4, n1, n2, n3, n4, -1 + n5, 1, 1 + n7, 1, 0, 1, 1, 0, 1, 
      1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
     28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
     2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
     6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
     8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, n3, n4, 
      -1 + n5, 2, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, n3, n4, 
      -1 + n5, 2, 1 + n7, 1, 0, 0, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, n3, n4, 
      -1 + n5, 2, 1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, n3, n4, 
      -1 + n5, 2, 1 + n7, 1, 0, 1, 1, 0, 1, 0])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, n2, n3, n4, n5, 0, 
      1 + n7, 1, -1, 1, 1, 0, 1, 2])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-2*n1 - n2 + 2*n3 + 8*n5 - 3*d*n5 + 2*n1*n5 + 2*n2*n5 + 2*n4*n5 + 
      2*n5^2 + 2*n5*n7)*j[p4, n1, n2, n3, n4, n5, 0, 1 + n7, 1, 0, 1, 1, 0, 
      1, 1])/(-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 
     28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 
     2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 
     6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 
     8*n4*n7 - 2*n5*n7 - 2*n7^2) + 
   ((-8 + 3*d - n2 - 2*n3 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, n3, n4, n5, 0, 
      1 + n7, 1, 0, 1, 1, 0, 1, 2])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, n2, n3, n4, n5, 1, 
      n7, 0, 0, 2, 1, 0, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 
     3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, n3, n4, n5, 
      1, n7, 1, 0, 1, 1, 0, 0, 2])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, n2, n3, n4, n5, 1, 
      n7, 1, 0, 2, 0, 0, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 
     3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, n2, n3, n4, n5, 1, 
      n7, 1, 0, 2, 1, 0, 0, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 
     3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, n2, n3, n4, n5, 1, 
      1 + n7, 0, -1, 1, 1, 0, 1, 2])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-8 + 3*d + 14*n1 - 6*d*n1 - 42*n2 + 15*d*n2 - 6*n2^2 + 56*n3 - 21*d*n3 + 
      10*n1*n3 + 2*n2*n3 + 8*n3^2 - 18*n4 + 6*d*n4 + 4*n1*n4 - 12*n2*n4 + 
      10*n3*n4 - 4*n4^2 - 2*n5 + 4*n1*n5 - 10*n2*n5 + 14*n3*n5 - 4*n4*n5 - 
      10*n7 + 3*d*n7 + 2*n1*n7 - 12*n2*n7 + 14*n3*n7 - 6*n4*n7 - 2*n5*n7 - 
      2*n7^2)*j[p4, n1, n2, n3, n4, n5, 1, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8 + 3*d - n2 - 2*n3 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, n3, n4, n5, 1, 
      1 + n7, 0, 0, 1, 1, 0, 1, 2])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-8 + 3*d - n2 - 2*n3 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, n3, n4, n5, 1, 
      1 + n7, 0, 0, 1, 1, 0, 2, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-24 + 9*d - 2*n1 - 4*n2 - 4*n3 - 6*n4 - 6*n5 - 6*n7)*
     j[p4, n1, n2, n3, n4, n5, 1, 1 + n7, 0, 0, 1, 2, -1, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((24 - 9*d + 2*n1 + 4*n2 + 4*n3 + 6*n4 + 6*n5 + 6*n7)*
     j[p4, n1, n2, n3, n4, n5, 1, 1 + n7, 0, 0, 1, 2, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((24 - 9*d + 2*n1 + 4*n2 + 4*n3 + 6*n4 + 6*n5 + 6*n7)*
     j[p4, n1, n2, n3, n4, n5, 1, 1 + n7, 1, -1, 1, 1, 0, 0, 2])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8 - 3*d + 2*n1 + 18*n2 - 6*d*n2 + 2*n2^2 - 8*n3 + 3*d*n3 - 2*n1*n3 + 
      2*n2*n3 - 14*n4 + 6*d*n4 + 2*n2*n4 - 6*n3*n4 - 4*n4^2 + 2*n5 + 
      4*n2*n5 - 2*n3*n5 - 4*n4*n5 - 6*n7 + 3*d*n7 + 2*n1*n7 + 4*n2*n7 - 
      6*n3*n7 - 6*n4*n7 - 2*n5*n7 - 2*n7^2)*j[p4, n1, n2, n3, n4, n5, 1, 
      1 + n7, 1, 0, 0, 1, 0, 1, 1])/(2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
      8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
      4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
      10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 
      2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-16*n1 + 6*d*n1 - 2*n1*n2 + 8*n3 - 3*d*n3 - 2*n1*n3 + 2*n2*n3 + 16*n4 - 
      6*d*n4 - 4*n1*n4 + 2*n2*n4 + 6*n3*n4 + 4*n4^2 - 4*n1*n5 + 2*n3*n5 + 
      4*n4*n5 + 8*n7 - 3*d*n7 - 6*n1*n7 + 6*n3*n7 + 6*n4*n7 + 2*n5*n7 + 
      2*n7^2)*j[p4, n1, n2, n3, n4, n5, 1, 1 + n7, 1, 0, 1, 0, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, n2, n3, n4, n5, 1, 
      1 + n7, 1, 0, 1, 1, -1, 0, 2])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-8 + 3*d - 22*n1 + 6*d*n1 - 52*n2 + 18*d*n2 - 6*n1*n2 - 8*n2^2 + 44*n3 - 
      15*d*n3 + 2*n1*n3 + 4*n3^2 - 2*n4 - 4*n1*n4 - 12*n2*n4 + 10*n3*n4 + 
      6*n5 - 3*d*n5 - 2*n1*n5 - 10*n2*n5 + 10*n3*n5 + 2*n4*n5 + 2*n5^2 + 
      14*n7 - 6*d*n7 - 4*n1*n7 - 10*n2*n7 + 14*n3*n7 + 4*n4*n7 + 6*n5*n7 + 
      4*n7^2)*j[p4, n1, n2, n3, n4, n5, 1, 1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-24 + 9*d - 2*n1 - 4*n2 - 4*n3 - 6*n4 - 6*n5 - 6*n7)*
     j[p4, n1, n2, n3, n4, n5, 1, 1 + n7, 1, 0, 1, 1, 0, 0, 2])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-16 + 6*d - 2*n2 - 4*n3 + 12*n4 - 6*d*n4 + 2*n2*n4 + 4*n3*n4 + 4*n4^2 - 
      12*n5 + 3*d*n5 - 2*n1*n5 - 2*n2*n5 + 2*n4*n5 - 2*n5^2 - 4*n7 + 
      4*n4*n7 - 2*n5*n7)*j[p4, n1, n2, n3, n4, n5, 1, 1 + n7, 1, 0, 1, 1, 0, 
      1, 0])/(2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 
      2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 
      13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 
      4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 
      6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((64 - 48*d + 9*d^2 + 16*n1 - 6*d*n1 + 32*n2 - 12*d*n2 + 4*n1*n2 + 
      4*n2^2 + 16*n3 - 6*d*n3 + 4*n1*n3 + 4*n2*n3 + 32*n4 - 12*d*n4 + 
      4*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 32*n5 - 12*d*n5 + 4*n1*n5 + 
      8*n2*n5 + 4*n3*n5 + 8*n4*n5 + 4*n5^2 + 32*n7 - 12*d*n7 + 4*n1*n7 + 
      8*n2*n7 + 4*n3*n7 + 8*n4*n7 + 8*n5*n7 + 4*n7^2)*
     j[p4, n1, n2, n3, n4, n5, 1, 1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8 + 3*d - n2 - 2*n3 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, n3, n4, n5, 1, 
      1 + n7, 1, 0, 2, 0, -1, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, n2, n3, n4, n5, 1, 
      1 + n7, 1, 0, 2, 0, 0, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, n3, n4, n5, 
      1, 1 + n7, 2, 0, 1, 0, -1, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8 - 3*d + n2 + 2*n3 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, n2, n3, n4, n5, 2, 
      n7, 0, 0, 1, 1, 0, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 
     3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, n2, n3, n4, n5, 2, 
      n7, 1, 0, 0, 1, 0, 1, 1])/(2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
      8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
      4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
      10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 
      2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((24 - 9*d + 2*n1 + 4*n2 + 4*n3 + 6*n4 + 6*n5 + 6*n7)*
     j[p4, n1, n2, n3, n4, n5, 2, 1 + n7, 0, -1, 1, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8 + 3*d - n2 - 2*n3 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, n3, n4, n5, 2, 
      1 + n7, 0, 0, 1, 1, -1, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
     8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
     34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
     4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
     2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, n2, n3, n4, n5, 2, 
      1 + n7, 1, -1, 1, 1, 0, 0, 1])/(2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
      8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
      4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
      10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 
      2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n7)*j[p4, n1, n2, n3, n4, n5, 2, 
      1 + n7, 1, -1, 1, 1, 0, 1, 0])/(2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 
      8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 
      4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 
      10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 
      2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n7)*j[p4, n1, n2, n3, n4, n5, 
      2, 1 + n7, 1, 0, 0, 1, -1, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8*n5 + 3*d*n5 - n2*n5 - 2*n3*n5 - 2*n4*n5 - 2*n5^2 - 2*n5*n7)*
     j[p4, n1, n2, n3, n4, 1 + n5, 0, 1 + n7, 1, -1, 1, 1, 0, 1, 1])/
    (-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 28*n3 + 
     11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 2*n1*n4 - 
     4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 
     6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 8*n4*n7 - 
     2*n5*n7 - 2*n7^2) + ((-8*n5 + 3*d*n5 - n2*n5 - 2*n3*n5 - 2*n4*n5 - 
      2*n5^2 - 2*n5*n7)*j[p4, n1, n2, n3, n4, 1 + n5, 1, n7, 1, 0, 1, 1, 0, 
      0, 1])/(-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 
     28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 
     2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 
     6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 
     8*n4*n7 - 2*n5*n7 - 2*n7^2) + 
   ((8*n5 - 3*d*n5 + n2*n5 + 2*n3*n5 + 2*n4*n5 + 2*n5^2 + 2*n5*n7)*
     j[p4, n1, n2, n3, n4, 1 + n5, 1, n7, 1, 0, 1, 1, 0, 1, 0])/
    (-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 28*n3 + 
     11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 2*n1*n4 - 
     4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 
     6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 8*n4*n7 - 
     2*n5*n7 - 2*n7^2) + ((8*n5 - 3*d*n5 + 2*n1*n5 + 2*n2*n5 + 2*n4*n5 + 
      2*n5^2 + 2*n5*n7)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 1 + n7, 1, -1, 1, 1, 
      0, 0, 1])/(2*(-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 
      2*n1*n2 - 28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 
      13*d*n4 + 2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 
      4*n1*n5 - 6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 
      6*n3*n7 - 8*n4*n7 - 2*n5*n7 - 2*n7^2)) + 
   ((-8*n5 + 3*d*n5 - 2*n1*n5 - 2*n2*n5 - 2*n4*n5 - 2*n5^2 - 2*n5*n7)*
     j[p4, n1, n2, n3, n4, 1 + n5, 1, 1 + n7, 1, -1, 1, 1, 0, 1, 0])/
    (2*(-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 
      28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 
      2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 
      6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 
      8*n4*n7 - 2*n5*n7 - 2*n7^2)) + 
   ((-8*n4 + 3*d*n4 - 2*n1*n4 - 2*n2*n4 - 2*n4^2 - 2*n4*n5 - 2*n4*n7)*
     j[p4, n1, n2, n3, 1 + n4, -1 + n5, 0, 1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((8*n4 - 3*d*n4 + 2*n1*n4 + 2*n2*n4 + 2*n4^2 + 
      2*n4*n5 + 2*n4*n7)*j[p4, n1, n2, n3, 1 + n4, -1 + n5, 1, 1 + n7, 0, 0, 
      1, 1, 0, 1, 1])/(2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 
      3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
      34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
      2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8*n4 + 3*d*n4 - 2*n1*n4 - 2*n2*n4 - 2*n4^2 - 2*n4*n5 - 2*n4*n7)*
     j[p4, n1, n2, n3, 1 + n4, -1 + n5, 1, 1 + n7, 1, 0, 0, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8*n4 - 3*d*n4 + 2*n1*n4 + 2*n2*n4 + 2*n4^2 + 2*n4*n5 + 2*n4*n7)*
     j[p4, n1, n2, n3, 1 + n4, -1 + n5, 1, 1 + n7, 1, 0, 1, 0, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8*n4 + 3*d*n4 - 2*n1*n4 - 2*n2*n4 - 2*n4^2 - 2*n4*n5 - 2*n4*n7)*
     j[p4, n1, n2, n3, 1 + n4, -1 + n5, 1, 1 + n7, 1, 0, 1, 1, 0, 1, 0])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-2*n1*n4 - n2*n4 + 2*n3*n4)*j[p4, n1, n2, n3, 1 + n4, n5, 0, n7, 1, 0, 
      1, 1, 0, 1, 1])/(-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 
     2*n1*n2 - 28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 
     13*d*n4 + 2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 
     4*n1*n5 - 6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 
     6*n3*n7 - 8*n4*n7 - 2*n5*n7 - 2*n7^2) + 
   ((8*n4 - 3*d*n4 + n2*n4 + 2*n3*n4 + 2*n4^2 + 2*n4*n5 + 2*n4*n7)*
     j[p4, n1, n2, n3, 1 + n4, n5, 0, 1 + n7, 1, -1, 1, 1, 0, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((8*n4 - 3*d*n4 - 2*n1*n4 + 4*n3*n4 + 2*n4^2 + 
      2*n4*n5 + 2*n4*n7)*j[p4, n1, n2, n3, 1 + n4, n5, 1, n7, 0, 0, 1, 1, 0, 
      1, 1])/(2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 
      2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 
      13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 
      4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 
      6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8*n4 - 3*d*n4 + 2*n1*n4 + 2*n2*n4 + 2*n4^2 + 2*n4*n5 + 2*n4*n7)*
     j[p4, n1, n2, n3, 1 + n4, n5, 1, n7, 1, 0, 0, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8*n4 + 3*d*n4 - 2*n1*n4 - 2*n2*n4 - 2*n4^2 - 2*n4*n5 - 2*n4*n7)*
     j[p4, n1, n2, n3, 1 + n4, n5, 1, n7, 1, 0, 1, 0, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8*n4 + 3*d*n4 - n2*n4 - 2*n3*n4 - 2*n4^2 - 2*n4*n5 - 2*n4*n7)*
     j[p4, n1, n2, n3, 1 + n4, n5, 1, 1 + n7, 0, -1, 1, 1, 0, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((8*n4 - 3*d*n4 + 2*n1*n4 + 2*n2*n4 + 2*n4^2 + 
      2*n4*n5 + 2*n4*n7)*j[p4, n1, n2, n3, 1 + n4, n5, 1, 1 + n7, 1, -1, 1, 
      1, 0, 1, 0])/(2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 
      2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 
      13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 
      4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 
      6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8*n3 + 3*d*n3 - 6*n1*n3 - 4*n2*n3 + 4*n3^2 - 2*n3*n4 - 2*n3*n5 - 
      2*n3*n7)*j[p4, n1, n2, 1 + n3, n4, n5, 1, n7, 0, 0, 1, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8*n3 + 3*d*n3 + 2*n1*n3 - 4*n3^2 - 2*n3*n4 - 2*n3*n5 - 2*n3*n7)*
     j[p4, n1, n2, 1 + n3, n4, n5, 1, n7, 1, 0, 0, 1, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8*n3 - 3*d*n3 - 2*n1*n3 + 4*n3^2 + 2*n3*n4 + 2*n3*n5 + 2*n3*n7)*
     j[p4, n1, n2, 1 + n3, n4, n5, 1, n7, 1, 0, 1, 0, 0, 1, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((-8*n3 + 3*d*n3 - 6*n1*n3 - 4*n2*n3 + 4*n3^2 - 2*n3*n4 - 2*n3*n5 - 
      2*n3*n7)*j[p4, n1, n2, 1 + n3, n4, n5, 1, n7, 1, 0, 1, 1, 0, 0, 1])/
    (2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 
      28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 
      2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 
      6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 
      8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8*n3 - 3*d*n3 + n2*n3 + 2*n3^2 + 2*n3*n4 + 2*n3*n5 + 2*n3*n7)*
     j[p4, n1, n2, 1 + n3, n4, n5, 1, 1 + n7, 0, 0, 1, 1, -1, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((-16*n3 + 6*d*n3 - 2*n2*n3 - 4*n3^2 - 4*n3*n4 - 
      4*n3*n5 - 4*n3*n7)*j[p4, n1, n2, 1 + n3, n4, n5, 1, 1 + n7, 0, 0, 1, 1, 
      0, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 
     2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 
     13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 
     4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 
     6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((8*n3 - 3*d*n3 + n2*n3 + 2*n3^2 + 2*n3*n4 + 2*n3*n5 + 2*n3*n7)*
     j[p4, n1, n2, 1 + n3, n4, n5, 1, 1 + n7, 1, 0, 0, 1, -1, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((-8*n3 + 3*d*n3 - n2*n3 - 2*n3^2 - 2*n3*n4 - 
      2*n3*n5 - 2*n3*n7)*j[p4, n1, n2, 1 + n3, n4, n5, 1, 1 + n7, 1, 0, 1, 0, 
      -1, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 
     2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 
     13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 
     4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 
     6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2) + 
   ((8*n3 - 3*d*n3 + 2*n1*n3 + 2*n2*n3 + 2*n3*n4 + 2*n3*n5 + 2*n3*n7)*
     j[p4, n1, n2, 1 + n3, n4, n5, 1, 1 + n7, 1, 0, 1, 1, -1, 0, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((-24*n3 + 9*d*n3 - 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 
      6*n3*n4 - 6*n3*n5 - 6*n3*n7)*j[p4, n1, n2, 1 + n3, n4, n5, 1, 1 + n7, 
      1, 0, 1, 1, 0, 0, 1])/(2*(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 
      3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
      34*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 
      2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2)) + 
   ((8*n2 - 3*d*n2 + n2^2 + 2*n2*n3 + 2*n2*n4 + 2*n2*n5 + 2*n2*n7)*
     j[p4, n1, 1 + n2, -1 + n3, n4, n5, 1, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 28*n3 + 
     11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 2*n1*n4 - 
     4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 
     6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 8*n4*n7 - 
     2*n5*n7 - 2*n7^2) + ((8*n2 - 3*d*n2 + 2*n1*n2 + 2*n2^2 + 2*n2*n4 + 
      2*n2*n5 + 2*n2*n7)*j[p4, n1, 1 + n2, -1 + n3, n4, n5, 1, 1 + n7, 1, 0, 
      0, 1, 0, 1, 1])/(2*(-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 
      3*d*n2 + 2*n1*n2 - 28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 
      34*n4 + 13*d*n4 + 2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 
      4*d*n5 + 4*n1*n5 - 6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 
      2*n2*n7 - 6*n3*n7 - 8*n4*n7 - 2*n5*n7 - 2*n7^2)) + 
   ((-16*n2 + 6*d*n2 - 2*n2^2 - 4*n2*n3 - 4*n2*n4 - 4*n2*n5 - 4*n2*n7)*
     j[p4, n1, 1 + n2, n3, n4, n5, 1, n7, 0, 0, 1, 1, 0, 1, 1])/
    (-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 28*n3 + 
     11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 2*n1*n4 - 
     4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 
     6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 8*n4*n7 - 
     2*n5*n7 - 2*n7^2) + ((8*n2 - 3*d*n2 - 2*n1*n2 + 4*n2*n3 + 2*n2*n4 + 
      2*n2*n5 + 2*n2*n7)*j[p4, n1, 1 + n2, n3, n4, n5, 1, n7, 1, 0, 0, 1, 0, 
      1, 1])/(2*(-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 
      2*n1*n2 - 28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 
      13*d*n4 + 2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 
      4*n1*n5 - 6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 
      6*n3*n7 - 8*n4*n7 - 2*n5*n7 - 2*n7^2)) + 
   ((-16*n2 + 6*d*n2 - 2*n2^2 - 4*n2*n3 - 4*n2*n4 - 4*n2*n5 - 4*n2*n7)*
     j[p4, n1, 1 + n2, n3, n4, n5, 1, n7, 1, 0, 1, 1, 0, 0, 1])/
    (-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 28*n3 + 
     11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 2*n1*n4 - 
     4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 
     6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 8*n4*n7 - 
     2*n5*n7 - 2*n7^2) + ((8*n2 - 3*d*n2 + n2^2 + 2*n2*n3 + 2*n2*n4 + 
      2*n2*n5 + 2*n2*n7)*j[p4, n1, 1 + n2, n3, n4, n5, 1, 1 + n7, 0, 0, 1, 1, 
      -1, 1, 1])/(-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 
     2*n1*n2 - 28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 
     13*d*n4 + 2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 
     4*n1*n5 - 6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 
     6*n3*n7 - 8*n4*n7 - 2*n5*n7 - 2*n7^2) + 
   ((8*n2 - 3*d*n2 + 2*n1*n2 + 2*n2^2 + 2*n2*n4 + 2*n2*n5 + 2*n2*n7)*
     j[p4, n1, 1 + n2, n3, n4, n5, 1, 1 + n7, 1, 0, 0, 1, -1, 1, 1])/
    (2*(-40 + 31*d - 6*d^2 + 10*n1 - 4*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 
      28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 34*n4 + 13*d*n4 + 
      2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 10*n5 + 4*d*n5 + 4*n1*n5 - 
      6*n3*n5 - 6*n4*n5 - 18*n7 + 7*d*n7 + 2*n1*n7 - 2*n2*n7 - 6*n3*n7 - 
      8*n4*n7 - 2*n5*n7 - 2*n7^2)) + 
   ((-8*n1 + 3*d*n1 - n1*n2 - 2*n1*n3 - 2*n1*n4 - 2*n1*n5 - 2*n1*n7)*
     j[p4, 1 + n1, n2, n3, n4, n5, 1, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
     11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 13*d*n4 - 2*n1*n4 + 
     4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
     6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 6*n3*n7 + 8*n4*n7 + 
     2*n5*n7 + 2*n7^2) + ((8*n1 - 3*d*n1 + n1*n2 + 2*n1*n3 + 2*n1*n4 + 
      2*n1*n5 + 2*n1*n7)*j[p4, 1 + n1, n2, n3, n4, n5, 1, 1 + n7, 1, 0, 1, 0, 
      0, 1, 1])/(40 - 31*d + 6*d^2 - 10*n1 + 4*d*n1 + 8*n2 - 3*d*n2 - 
     2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 34*n4 - 
     13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 10*n5 - 4*d*n5 - 
     4*n1*n5 + 6*n3*n5 + 6*n4*n5 + 18*n7 - 7*d*n7 - 2*n1*n7 + 2*n2*n7 + 
     6*n3*n7 + 8*n4*n7 + 2*n5*n7 + 2*n7^2), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == -1 && n13 == 1 && n14 == 1 && n6 == 1 && 
    n7 == 0 && n8 == 1 && n9 != 0 -> 
  j[p4, -1 + n1, -1 + n2, n3, n4, n5, 1, 0, 1, 1 + n9, 1, 1, 0, 1, 1]/
    (-3 + d - n4 - n5 - n9) + j[p4, -1 + n1, n2, -1 + n3, n4, n5, 1, 0, 1, 
     1 + n9, 1, 1, 0, 1, 1]/(-3 + d - n4 - n5 - n9) - 
   (2*j[p4, -1 + n1, n2, n3, n4, n5, 1, -1, 1, 1 + n9, 1, 1, 0, 1, 1])/
    (-3 + d - n4 - n5 - n9) - j[p4, -1 + n1, n2, n3, n4, n5, 1, 0, 0, 1 + n9, 
     1, 1, 0, 1, 1]/(-3 + d - n4 - n5 - n9) - 
   j[p4, -1 + n1, n2, n3, n4, n5, 1, 0, 0, 1 + n9, 2, 1, -1, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4, -1 + n1, n2, n3, n4, n5, 1, 0, 1, 
     1 + n9, 0, 2, -1, 1, 1]/(-3 + d - n4 - n5 - n9) + 
   ((12 - 7*d + 2*n1 + 4*n2 + 4*n3 + 4*n4 + 4*n5)*j[p4, -1 + n1, n2, n3, n4, 
      n5, 1, 0, 1, 1 + n9, 1, 1, -1, 1, 1])/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, -1 + n1, n2, n3, n4, n5, 1, 0, 1, 1 + n9, 1, 1, 0, 0, 1]/
    (-3 + d - n4 - n5 - n9) - j[p4, -1 + n1, n2, n3, n4, n5, 1, 0, 1, 1 + n9, 
     2, 1, -1, 0, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   ((-1 - n9)*j[p4, -1 + n1, n2, n3, n4, n5, 1, 0, 1, 2 + n9, 1, 1, -1, 1, 
      0])/(2*(3 - d + n4 + n5 + n9)) + 
   j[p4, -1 + n1, n2, n3, n4, n5, 1, 0, 2, 1 + n9, 1, 1, -1, 0, 1]/
    (2*(-3 + d - n4 - n5 - n9)) - 
   (n5*j[p4, -1 + n1, n2, n3, n4, 1 + n5, 1, 0, 1, 1 + n9, 1, 1, -1, 0, 1])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n5*j[p4, -1 + n1, n2, n3, n4, 1 + n5, 1, 0, 1, 1 + n9, 1, 1, -1, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n4*j[p4, -1 + n1, n2, n3, 1 + n4, n5, 1, 0, 1, 1 + n9, 1, 1, -1, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n2*j[p4, -1 + n1, 1 + n2, n3, n4, n5, 1, 0, 1, 1 + n9, 1, 1, -1, 0, 1])/
    (-3 + d - n4 - n5 - n9) + j[p4, n1, -1 + n2, n3, n4, n5, 1, 0, 0, 1 + n9, 
     2, 1, -1, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4, n1, -1 + n2, n3, n4, n5, 1, 0, 1, 1 + n9, 1, 0, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + ((-8 + 5*d - 2*n2 - 4*n3 - 4*n4 - 2*n5)*
     j[p4, n1, -1 + n2, n3, n4, n5, 1, 0, 1, 1 + n9, 1, 1, -1, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4, n1, -1 + n2, n3, n4, n5, 1, 0, 1, 
     1 + n9, 1, 1, 0, 1, 1]/(-3 + d - n4 - n5 - n9) + 
   j[p4, n1, -1 + n2, n3, n4, n5, 1, 0, 1, 1 + n9, 2, 0, -1, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, n1, -1 + n2, n3, n4, n5, 1, 0, 1, 
     1 + n9, 2, 1, -1, 0, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   ((1 + n9)*j[p4, n1, -1 + n2, n3, n4, n5, 1, 0, 1, 2 + n9, 1, 1, -1, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) - j[p4, n1, -1 + n2, n3, n4, n5, 1, 0, 2, 
     1 + n9, 1, 0, -1, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, n1, -1 + n2, n3, n4, n5, 1, 0, 2, 1 + n9, 1, 1, -1, 0, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, n1, -1 + n2, n3, n4, n5, 2, 0, 0, 
     1 + n9, 1, 1, -1, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, n1, -1 + n2, n3, n4, n5, 2, 0, 1, 1 + n9, 0, 1, -1, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) - 
   (n4*j[p4, n1, -1 + n2, n3, 1 + n4, n5, 1, 0, 1, 1 + n9, 1, 1, -1, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) - j[p4, n1, n2, -1 + n3, n4, n5, 1, 0, 1, 
     1 + n9, 1, 0, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   ((8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n9)*j[p4, n1, n2, -1 + n3, n4, 
      n5, 1, 0, 1, 1 + n9, 1, 1, -1, 1, 1])/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4, n1, n2, -1 + n3, n4, n5, 1, 0, 1, 1 + n9, 2, 0, -1, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, n1, n2, -1 + n3, n4, n5, 2, 0, 0, 
     1 + n9, 1, 1, -1, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, n1, n2, -1 + n3, n4, n5, 2, 0, 1, 1 + n9, 0, 1, -1, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + 
   (n4*j[p4, n1, n2, -1 + n3, 1 + n4, n5, 1, 0, 0, 1 + n9, 1, 1, -1, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n4*j[p4, n1, n2, -1 + n3, 1 + n4, n5, 1, 0, 1, 1 + n9, 0, 1, -1, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (n4*j[p4, n1, n2, -1 + n3, 1 + n4, n5, 1, 0, 1, 1 + n9, 1, 0, -1, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) + j[p4, n1, n2, n3, -1 + n4, n5, 1, 0, 1, 
    1 + n9, 1, 1, -1, 1, 1] + ((1 + n9)*j[p4, n1, n2, n3, -1 + n4, n5, 1, 0, 
      1, 2 + n9, 1, 1, -1, 1, 0])/(2*(3 - d + n4 + n5 + n9)) - 
   j[p4, n1, n2, n3, -1 + n4, n5, 2, 0, 0, 1 + n9, 1, 1, -1, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, n1, n2, n3, -1 + n4, n5, 2, 0, 1, 
     1 + n9, 0, 1, -1, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, n1, n2, n3, -1 + n4, n5, 2, 0, 1, 1 + n9, 1, 1, -1, 0, 1]/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4, n1, n2, n3, -1 + n4, n5, 2, 0, 1, 
     1 + n9, 1, 1, -1, 1, 0]/(2*(-3 + d - n4 - n5 - n9)) - 
   (n5*j[p4, n1, n2, n3, -1 + n4, 1 + n5, 1, 0, 1, 1 + n9, 1, 1, -1, 0, 1])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n5*j[p4, n1, n2, n3, -1 + n4, 1 + n5, 1, 0, 1, 1 + n9, 1, 1, -1, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) - j[p4, n1, n2, n3, n4, n5, 1, -1, 0, 1 + n9, 
     1, 1, 0, 1, 1]/(-3 + d - n4 - n5 - n9) + 
   j[p4, n1, n2, n3, n4, n5, 1, -1, 0, 1 + n9, 1, 2, -1, 1, 1]/
    (-3 + d - n4 - n5 - n9) - j[p4, n1, n2, n3, n4, n5, 1, -1, 0, 1 + n9, 2, 
     1, -1, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   ((4 - 3*d - 2*n1 + 4*n3 + 4*n4)*j[p4, n1, n2, n3, n4, n5, 1, -1, 1, 
      1 + n9, 1, 1, -1, 1, 1])/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4, n1, n2, n3, n4, n5, 1, -1, 1, 1 + n9, 1, 1, 0, 0, 1]/
    (-3 + d - n4 - n5 - n9) + j[p4, n1, n2, n3, n4, n5, 1, -1, 1, 1 + n9, 1, 
     1, 0, 1, 1]/(-3 + d - n4 - n5 - n9) - 
   j[p4, n1, n2, n3, n4, n5, 1, -1, 1, 1 + n9, 2, 0, -1, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4, n1, n2, n3, n4, n5, 1, -1, 1, 1 + n9, 
     2, 1, -1, 0, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   ((-1 - n9)*j[p4, n1, n2, n3, n4, n5, 1, -1, 1, 2 + n9, 1, 1, -1, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + j[p4, n1, n2, n3, n4, n5, 1, -1, 2, 1 + n9, 
     1, 0, -1, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4, n1, n2, n3, n4, n5, 1, -1, 2, 1 + n9, 1, 1, -1, 0, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + 
   ((6 + n1 - n2 - n4 + n9)*j[p4, n1, n2, n3, n4, n5, 1, 0, 0, 1 + n9, 1, 1, 
      -1, 1, 1])/(2*(3 - d + n4 + n5 + n9)) + 
   j[p4, n1, n2, n3, n4, n5, 1, 0, 0, 1 + n9, 1, 1, 0, 1, 1]/
    (-3 + d - n4 - n5 - n9) + j[p4, n1, n2, n3, n4, n5, 1, 0, 0, 1 + n9, 1, 
     2, -2, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, n1, n2, n3, n4, n5, 1, 0, 0, 1 + n9, 1, 2, -1, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + 
   ((-1 - n9)*j[p4, n1, n2, n3, n4, n5, 1, 0, 0, 2 + n9, 1, 1, -1, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) + 
   ((n1 + n2 - n4 + n9)*j[p4, n1, n2, n3, n4, n5, 1, 0, 1, 1 + n9, 0, 1, -1, 
      1, 1])/(2*(3 - d + n4 + n5 + n9)) - 
   j[p4, n1, n2, n3, n4, n5, 1, 0, 1, 1 + n9, 0, 2, -2, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, n1, n2, n3, n4, n5, 1, 0, 1, 1 + n9, 
     0, 2, -1, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   ((-3 - n1 + n4 - n9)*j[p4, n1, n2, n3, n4, n5, 1, 0, 1, 1 + n9, 1, 0, -1, 
      1, 1])/(2*(3 - d + n4 + n5 + n9)) + 
   (n1*j[p4, n1, n2, n3, n4, n5, 1, 0, 1, 1 + n9, 1, 1, -1, 0, 1])/
    (-3 + d - n4 - n5 - n9) + ((-1 + n4 - n9)*j[p4, n1, n2, n3, n4, n5, 1, 0, 
      1, 1 + n9, 1, 1, -1, 1, 0])/(2*(3 - d + n4 + n5 + n9)) + 
   ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n9)*j[p4, n1, n2, n3, n4, n5, 
      1, 0, 1, 1 + n9, 1, 1, -1, 1, 1])/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4, n1, n2, n3, n4, n5, 1, 0, 1, 1 + n9, 2, 0, -2, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4, n1, n2, n3, n4, n5, 1, 0, 1, 1 + n9, 
     2, 0, -1, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   ((-1 - n9)*j[p4, n1, n2, n3, n4, n5, 1, 0, 1, 2 + n9, 0, 1, -1, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) + 
   ((1 + n9)*j[p4, n1, n2, n3, n4, n5, 1, 0, 1, 2 + n9, 1, 0, -1, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) - j[p4, n1, n2, n3, n4, n5, 1, 0, 2, 1 + n9, 
     1, 0, -2, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, n1, n2, n3, n4, n5, 2, -1, 0, 1 + n9, 1, 1, -1, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, n1, n2, n3, n4, n5, 2, -1, 1, 1 + n9, 
     0, 1, -1, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4, n1, n2, n3, n4, n5, 2, 0, 0, 1 + n9, 1, 1, -2, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, n1, n2, n3, n4, n5, 2, 0, 1, n9, 1, 
     1, -1, 0, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4, n1, n2, n3, n4, n5, 2, 0, 1, n9, 1, 1, -1, 1, 0]/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4, n1, n2, n3, n4, n5, 2, 0, 1, 1 + n9, 
     0, 1, -2, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, 1, -1, 1, 1 + n9, 1, 1, -1, 0, 1])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, 1, -1, 1, 1 + n9, 1, 1, -1, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 1, n9, 1, 1, -1, 0, 1])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 1, n9, 1, 1, -1, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, 1, -1, 1, 1 + n9, 1, 1, -1, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, 1, 0, 1, n9, 1, 1, -1, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n2*j[p4, n1, 1 + n2, -1 + n3, n4, n5, 1, 0, 0, 1 + n9, 1, 1, -1, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) - 
   (n2*j[p4, n1, 1 + n2, -1 + n3, n4, n5, 1, 0, 1, 1 + n9, 0, 1, -1, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, 1, -1, 0, 1 + n9, 1, 1, -1, 1, 1])/
    (-3 + d - n4 - n5 - n9) + (n2*j[p4, n1, 1 + n2, n3, n4, n5, 1, -1, 1, 
      1 + n9, 0, 1, -1, 1, 1])/(-3 + d - n4 - n5 - n9) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, 1, -1, 1, 1 + n9, 1, 1, -1, 0, 1])/
    (-3 + d - n4 - n5 - n9) + (n2*j[p4, n1, 1 + n2, n3, n4, n5, 1, 0, 0, 
      1 + n9, 1, 1, -2, 1, 1])/(2*(-3 + d - n4 - n5 - n9)) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, 1, 0, 1, 1 + n9, 0, 1, -2, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) - 
   (n1*j[p4, 1 + n1, -1 + n2, n3, n4, n5, 1, 0, 1, 1 + n9, 1, 1, -1, 0, 1])/
    (2*(-3 + d - n4 - n5 - n9)) + 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, 1, 0, 0, 1 + n9, 1, 1, -1, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) + 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, 1, 0, 1, 1 + n9, 0, 1, -1, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) - 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, 1, 0, 1, 1 + n9, 1, 0, -1, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n6 == 1 && 
    n7 == 0 && n8 == 1 && n9 != 0 -> 
  -j[p4, -1 + n1, n2, n3, n4, n5, 1, 0, 0, 1 + n9, 2, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4, -1 + n1, n2, n3, n4, n5, 1, 0, 1, 
     1 + n9, 0, 2, 0, 1, 1]/(-3 + d - n4 - n5 - n9) + 
   ((14 - 7*d + 2*n1 + 4*n2 + 4*n3 + 4*n4 + 4*n5)*j[p4, -1 + n1, n2, n3, n4, 
      n5, 1, 0, 1, 1 + n9, 1, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, -1 + n1, n2, n3, n4, n5, 1, 0, 1, 1 + n9, 2, 1, 0, 0, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + 
   ((-1 - n9)*j[p4, -1 + n1, n2, n3, n4, n5, 1, 0, 1, 2 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + j[p4, -1 + n1, n2, n3, n4, n5, 1, 0, 2, 
     1 + n9, 1, 1, 0, 0, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   (n5*j[p4, -1 + n1, n2, n3, n4, 1 + n5, 1, 0, 1, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n5*j[p4, -1 + n1, n2, n3, n4, 1 + n5, 1, 0, 1, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n4*j[p4, -1 + n1, n2, n3, 1 + n4, n5, 1, 0, 1, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n2*j[p4, -1 + n1, 1 + n2, n3, n4, n5, 1, 0, 1, 1 + n9, 1, 1, 0, 0, 1])/
    (-3 + d - n4 - n5 - n9) + j[p4, n1, -1 + n2, n3, n4, n5, 1, 0, 0, 1 + n9, 
     2, 1, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   ((-10 + 5*d - 2*n2 - 4*n3 - 4*n4 - 2*n5)*j[p4, n1, -1 + n2, n3, n4, n5, 1, 
      0, 1, 1 + n9, 1, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4, n1, -1 + n2, n3, n4, n5, 1, 0, 1, 1 + n9, 2, 0, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, n1, -1 + n2, n3, n4, n5, 1, 0, 1, 
     1 + n9, 2, 1, 0, 0, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   ((1 + n9)*j[p4, n1, -1 + n2, n3, n4, n5, 1, 0, 1, 2 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) - j[p4, n1, -1 + n2, n3, n4, n5, 1, 0, 2, 
     1 + n9, 1, 0, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, n1, -1 + n2, n3, n4, n5, 1, 0, 2, 1 + n9, 1, 1, 0, 0, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, n1, -1 + n2, n3, n4, n5, 2, 0, 0, 
     1 + n9, 1, 1, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, n1, -1 + n2, n3, n4, n5, 2, 0, 1, 1 + n9, 0, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) - 
   (n4*j[p4, n1, -1 + n2, n3, 1 + n4, n5, 1, 0, 1, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   ((8 - 3*d + 2*n1 + 2*n2 + 2*n4 + 2*n5 + 2*n9)*j[p4, n1, n2, -1 + n3, n4, 
      n5, 1, 0, 1, 1 + n9, 1, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4, n1, n2, -1 + n3, n4, n5, 1, 0, 1, 1 + n9, 2, 0, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, n1, n2, -1 + n3, n4, n5, 2, 0, 0, 
     1 + n9, 1, 1, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, n1, n2, -1 + n3, n4, n5, 2, 0, 1, 1 + n9, 0, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + 
   (n4*j[p4, n1, n2, -1 + n3, 1 + n4, n5, 1, 0, 0, 1 + n9, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n4*j[p4, n1, n2, -1 + n3, 1 + n4, n5, 1, 0, 1, 1 + n9, 0, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (n4*j[p4, n1, n2, -1 + n3, 1 + n4, n5, 1, 0, 1, 1 + n9, 1, 0, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) + j[p4, n1, n2, n3, -1 + n4, n5, 1, 0, 1, 
    1 + n9, 1, 1, 0, 1, 1] + ((1 + n9)*j[p4, n1, n2, n3, -1 + n4, n5, 1, 0, 
      1, 2 + n9, 1, 1, 0, 1, 0])/(2*(3 - d + n4 + n5 + n9)) - 
   j[p4, n1, n2, n3, -1 + n4, n5, 2, 0, 0, 1 + n9, 1, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, n1, n2, n3, -1 + n4, n5, 2, 0, 1, 
     1 + n9, 0, 1, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, n1, n2, n3, -1 + n4, n5, 2, 0, 1, 1 + n9, 1, 1, 0, 0, 1]/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4, n1, n2, n3, -1 + n4, n5, 2, 0, 1, 
     1 + n9, 1, 1, 0, 1, 0]/(2*(-3 + d - n4 - n5 - n9)) - 
   (n5*j[p4, n1, n2, n3, -1 + n4, 1 + n5, 1, 0, 1, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n5*j[p4, n1, n2, n3, -1 + n4, 1 + n5, 1, 0, 1, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + j[p4, n1, n2, n3, n4, n5, 1, -1, 0, 1 + n9, 
     1, 2, 0, 1, 1]/(-3 + d - n4 - n5 - n9) - 
   j[p4, n1, n2, n3, n4, n5, 1, -1, 0, 1 + n9, 2, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + ((6 - 3*d - 2*n1 + 4*n3 + 4*n4)*
     j[p4, n1, n2, n3, n4, n5, 1, -1, 1, 1 + n9, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4, n1, n2, n3, n4, n5, 1, -1, 1, 1 + n9, 
     2, 0, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, n1, n2, n3, n4, n5, 1, -1, 1, 1 + n9, 2, 1, 0, 0, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + 
   ((-1 - n9)*j[p4, n1, n2, n3, n4, n5, 1, -1, 1, 2 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + j[p4, n1, n2, n3, n4, n5, 1, -1, 2, 1 + n9, 
     1, 0, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4, n1, n2, n3, n4, n5, 1, -1, 2, 1 + n9, 1, 1, 0, 0, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + 
   ((4 + n1 - n2 - n4 + n9)*j[p4, n1, n2, n3, n4, n5, 1, 0, 0, 1 + n9, 1, 1, 
      0, 1, 1])/(2*(3 - d + n4 + n5 + n9)) + 
   j[p4, n1, n2, n3, n4, n5, 1, 0, 0, 1 + n9, 1, 2, -1, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4, n1, n2, n3, n4, n5, 1, 0, 0, 1 + n9, 
     1, 2, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   ((-1 - n9)*j[p4, n1, n2, n3, n4, n5, 1, 0, 0, 2 + n9, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) + 
   ((n1 + n2 - n4 + n9)*j[p4, n1, n2, n3, n4, n5, 1, 0, 1, 1 + n9, 0, 1, 0, 
      1, 1])/(2*(3 - d + n4 + n5 + n9)) - 
   j[p4, n1, n2, n3, n4, n5, 1, 0, 1, 1 + n9, 0, 2, -1, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, n1, n2, n3, n4, n5, 1, 0, 1, 1 + n9, 
     0, 2, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   ((-2 - n1 + n4 - n9)*j[p4, n1, n2, n3, n4, n5, 1, 0, 1, 1 + n9, 1, 0, 0, 
      1, 1])/(2*(3 - d + n4 + n5 + n9)) + 
   (n1*j[p4, n1, n2, n3, n4, n5, 1, 0, 1, 1 + n9, 1, 1, 0, 0, 1])/
    (-3 + d - n4 - n5 - n9) + ((-1 + n4 - n9)*j[p4, n1, n2, n3, n4, n5, 1, 0, 
      1, 1 + n9, 1, 1, 0, 1, 0])/(2*(3 - d + n4 + n5 + n9)) + 
   ((-8 + 3*d - 2*n1 - 2*n2 - 2*n4 - 2*n5 - 2*n9)*j[p4, n1, n2, n3, n4, n5, 
      1, 0, 1, 1 + n9, 1, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4, n1, n2, n3, n4, n5, 1, 0, 1, 1 + n9, 2, 0, -1, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4, n1, n2, n3, n4, n5, 1, 0, 1, 1 + n9, 
     2, 0, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   ((-1 - n9)*j[p4, n1, n2, n3, n4, n5, 1, 0, 1, 2 + n9, 0, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) + 
   ((1 + n9)*j[p4, n1, n2, n3, n4, n5, 1, 0, 1, 2 + n9, 1, 0, 0, 1, 1])/
    (2*(3 - d + n4 + n5 + n9)) - j[p4, n1, n2, n3, n4, n5, 1, 0, 2, 1 + n9, 
     1, 0, -1, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) - 
   j[p4, n1, n2, n3, n4, n5, 2, -1, 0, 1 + n9, 1, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, n1, n2, n3, n4, n5, 2, -1, 1, 1 + n9, 
     0, 1, 0, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4, n1, n2, n3, n4, n5, 2, 0, 0, 1 + n9, 1, 1, -1, 1, 1]/
    (2*(-3 + d - n4 - n5 - n9)) + j[p4, n1, n2, n3, n4, n5, 2, 0, 1, n9, 1, 
     1, 0, 0, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   j[p4, n1, n2, n3, n4, n5, 2, 0, 1, n9, 1, 1, 0, 1, 0]/
    (2*(-3 + d - n4 - n5 - n9)) - j[p4, n1, n2, n3, n4, n5, 2, 0, 1, 1 + n9, 
     0, 1, -1, 1, 1]/(2*(-3 + d - n4 - n5 - n9)) + 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, 1, -1, 1, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, 1, -1, 1, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 1, n9, 1, 1, 0, 0, 1])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (n5*j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 1, n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, 1, -1, 1, 1 + n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, 1, 0, 1, n9, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5 + n9)) + 
   (n2*j[p4, n1, 1 + n2, -1 + n3, n4, n5, 1, 0, 0, 1 + n9, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) - 
   (n2*j[p4, n1, 1 + n2, -1 + n3, n4, n5, 1, 0, 1, 1 + n9, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, 1, -1, 0, 1 + n9, 1, 1, 0, 1, 1])/
    (-3 + d - n4 - n5 - n9) + (n2*j[p4, n1, 1 + n2, n3, n4, n5, 1, -1, 1, 
      1 + n9, 0, 1, 0, 1, 1])/(-3 + d - n4 - n5 - n9) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, 1, -1, 1, 1 + n9, 1, 1, 0, 0, 1])/
    (-3 + d - n4 - n5 - n9) + (n2*j[p4, n1, 1 + n2, n3, n4, n5, 1, 0, 0, 
      1 + n9, 1, 1, -1, 1, 1])/(2*(-3 + d - n4 - n5 - n9)) - 
   (n2*j[p4, n1, 1 + n2, n3, n4, n5, 1, 0, 1, 1 + n9, 0, 1, -1, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) - 
   (n1*j[p4, 1 + n1, -1 + n2, n3, n4, n5, 1, 0, 1, 1 + n9, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5 - n9)) + 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, 1, 0, 0, 1 + n9, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) + 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, 1, 0, 1, 1 + n9, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)) - 
   (n1*j[p4, 1 + n1, n2, n3, n4, n5, 1, 0, 1, 1 + n9, 1, 0, 0, 1, 1])/
    (2*(-3 + d - n4 - n5 - n9)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n12 == 0 && n13 == 1 && n2 == 0 && n3 == 0 && n4 == 0 && 
    n5 == 0 && n7 == 0 && n9 == 0 &&  !(n10 == 1 || n6 == 1) -> 
  ((-1 - d + 2*n14 + n6)*j[p4, 0, 0, 0, 0, 0, -1 + n6, 0, n8, 0, n10, n11, 0, 
      1, n14])/(-1 + n6) + ((-1 - 2*d + n10 + 2*n14 + 2*n6)*
     j[p4, 0, 0, 0, 0, 0, n6, 0, n8, 0, -1 + n10, n11, 0, 1, n14])/
    (-1 + n10) + j[p4, 0, 0, 0, 0, 0, n6, 0, n8, 0, n10, n11, 0, 1, 
    -1 + n14], j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n2 == 0 && n4 == 0 && 
    n5 == 0 && n7 == 0 && n9 == 0 &&  !(n10 == 1 || n6 == 1) -> 
  (n3*j[p4, 0, -1, 1 + n3, 0, 0, n6, 0, n8, 0, -1 + n10, 1, 0, 1, n14])/
    (-1 + n10) + ((-1 - d + 2*n14 + n6)*j[p4, 0, 0, n3, 0, 0, -1 + n6, 0, n8, 
      0, n10, 1, 0, 1, n14])/(-1 + n6) + 
   ((-1 - 2*d + n10 + 2*n14 + 2*n3 + 2*n6)*j[p4, 0, 0, n3, 0, 0, n6, 0, n8, 
      0, -1 + n10, 1, 0, 1, n14])/(-1 + n10) + j[p4, 0, 0, n3, 0, 0, n6, 0, 
    n8, 0, n10, 1, 0, 1, -1 + n14] - 
   (n3*j[p4, 0, 0, 1 + n3, 0, 0, n6, -1, n8, 0, -1 + n10, 1, 0, 1, n14])/
    (-1 + n10) - (2*n3*j[p4, 0, 0, 1 + n3, 0, 0, n6, 0, -1 + n8, 0, -1 + n10, 
      1, 0, 1, n14])/(-1 + n10) + 
   (n3*j[p4, 0, 0, 1 + n3, 0, 0, n6, 0, n8, 0, -1 + n10, 1, -1, 1, n14])/
    (-1 + n10) - (n3*j[p4, 0, 0, 1 + n3, 0, 0, n6, 0, n8, 0, -1 + n10, 1, 0, 
      0, n14])/(-1 + n10), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n13 == 1 && n3 == 0 && n4 == 0 && 
    n5 == 0 && n7 == 0 && n9 == 0 &&  !(n11 == 1 || n8 == 1) -> 
  ((1 - d + n8)*j[p4, 0, n2, 0, 0, 0, n6, 0, -1 + n8, 0, 1, n11, 0, 1, n14])/
    (-1 + n8) + ((1 - 2*d + n11 + 2*n8)*j[p4, 0, n2, 0, 0, 0, n6, 0, n8, 0, 
      1, -1 + n11, 0, 1, n14])/(-1 + n11) + j[p4, 0, n2, 0, 0, 0, n6, 0, n8, 
    0, 1, n11, 0, 0, n14] - (n2*j[p4, 0, 1 + n2, -1, 0, 0, n6, 0, -1 + n8, 0, 
      1, n11, 0, 1, n14])/(-1 + n8) - 
   (n2*j[p4, 0, 1 + n2, -1, 0, 0, n6, 0, n8, 0, 1, -1 + n11, 0, 1, n14])/
    (-1 + n11) + (n2*j[p4, 0, 1 + n2, 0, 0, 0, n6, -1, -1 + n8, 0, 1, n11, 0, 
      1, n14])/(-1 + n8) + (n2*j[p4, 0, 1 + n2, 0, 0, 0, n6, -1, n8, 0, 1, 
      -1 + n11, 0, 1, n14])/(-1 + n11) + 
   (n2*j[p4, 0, 1 + n2, 0, 0, 0, n6, 0, -2 + n8, 0, 1, n11, 0, 1, n14])/
    (-1 + n8) + (n2*j[p4, 0, 1 + n2, 0, 0, 0, n6, 0, -1 + n8, 0, 1, -1 + n11, 
      0, 1, n14])/(-1 + n11) - 
   (n2*j[p4, 0, 1 + n2, 0, 0, 0, n6, 0, -1 + n8, 0, 1, n11, -1, 1, n14])/
    (-1 + n8) + (2*n2*j[p4, 0, 1 + n2, 0, 0, 0, n6, 0, -1 + n8, 0, 1, n11, 0, 
      0, n14])/(-1 + n8) - (n2*j[p4, 0, 1 + n2, 0, 0, 0, n6, 0, n8, 0, 1, 
      -1 + n11, -1, 1, n14])/(-1 + n11) + 
   (2*n2*j[p4, 0, 1 + n2, 0, 0, 0, n6, 0, n8, 0, 1, -1 + n11, 0, 0, n14])/
    (-1 + n11), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?NonPositive, (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, 
    (n7_)?NonPositive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n14 == 1 && n2 == 0 && 
    n5 == 0 && n7 == 0 && n9 == 0 && n13 != 1 -> 
  (2*n3*n8*j[p4, 0, -1, 1 + n3, n4, 0, n6, 0, 1 + n8, 0, 1, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((n4 + n4^2)*j[p4, 0, 0, -1 + n3, 2 + n4, 0, n6, 0, n8, 0, 1, 1, 0, 
      -1 + n13, 1])/((d - 2*n13)*(-1 + n13)) + 
   ((-2*n8 + d*n8 - 2*n4*n8 - 2*n8^2)*j[p4, 0, 0, n3, n4, 0, n6, 0, 1 + n8, 
      0, 1, 1, 0, -1 + n13, 1])/((d - 2*n13)*(-1 + n13)) + 
   (2*n4*n8*j[p4, 0, 0, n3, 1 + n4, 0, -1 + n6, 0, 1 + n8, 0, 1, 1, 0, 
      -1 + n13, 1])/((d - 2*n13)*(-1 + n13)) + 
   ((-4*n4 + 2*n13*n4 - 2*n4^2 - n4*n8)*j[p4, 0, 0, n3, 1 + n4, 0, n6, 0, n8, 
      0, 1, 1, 0, -1 + n13, 1])/((d - 2*n13)*(-1 + n13)) - 
   (n4*n8*j[p4, 0, 0, n3, 1 + n4, 0, n6, 0, 1 + n8, 0, 1, 1, -1, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (n4*n8*j[p4, 0, 0, n3, 1 + n4, 0, n6, 0, 1 + n8, 0, 1, 1, 0, -2 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   ((n4 + n4^2)*j[p4, 0, 0, n3, 2 + n4, -1, n6, 0, n8, 0, 1, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((-n4 - n4^2)*j[p4, 0, 0, n3, 2 + n4, 0, n6, -1, n8, 0, 1, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((-n4 - n4^2)*j[p4, 0, 0, n3, 2 + n4, 0, n6, 0, n8, 0, 1, 1, 0, -1 + n13, 
      0])/((d - 2*n13)*(-1 + n13)) - 
   (2*n3*n8*j[p4, 0, 0, 1 + n3, n4, 0, n6, -1, 1 + n8, 0, 1, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((-3*n3 + 2*n13*n3 - n3^2 - 2*n3*n4 - 3*n3*n8)*j[p4, 0, 0, 1 + n3, n4, 0, 
      n6, 0, n8, 0, 1, 1, 0, -1 + n13, 1])/((d - 2*n13)*(-1 + n13)) + 
   (n3*n8*j[p4, 0, 0, 1 + n3, n4, 0, n6, 0, 1 + n8, 0, 1, 1, -1, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) - 
   (n3*n8*j[p4, 0, 0, 1 + n3, n4, 0, n6, 0, 1 + n8, 0, 1, 1, 0, -2 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n3*n4*j[p4, 0, 0, 1 + n3, 1 + n4, -1, n6, 0, n8, 0, 1, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) - 
   (2*n3*n4*j[p4, 0, 0, 1 + n3, 1 + n4, 0, n6, -1, n8, 0, 1, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   (n3*n4*j[p4, 0, 0, 1 + n3, 1 + n4, 0, n6, 0, n8, 0, 1, 1, 0, -2 + n13, 1])/
    ((d - 2*n13)*(-1 + n13)) + 
   (n3*n4*j[p4, 0, 0, 1 + n3, 1 + n4, 0, n6, 0, n8, 0, 1, 1, 0, -1 + n13, 0])/
    ((d - 2*n13)*(-1 + n13)) + 
   ((-n3 - n3^2)*j[p4, 0, 0, 2 + n3, n4, 0, n6, -1, n8, 0, 1, 1, 0, -1 + n13, 
      1])/((d - 2*n13)*(-1 + n13)) + 
   ((n3 + n3^2)*j[p4, 0, 0, 2 + n3, n4, 0, n6, 0, n8, 0, 1, 1, 0, -2 + n13, 
      1])/((d - 2*n13)*(-1 + n13)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n4 == 0 && 
    n5 == 0 && n7 == 0 && n9 == 0 && n14 != 1 -> 
  ((-2*n6 + d*n6 - 2*n6^2)*j[p4, 0, n2, n3, 0, 0, 1 + n6, 0, n8, 0, 1, 1, 0, 
     1, -1 + n14])/((d - 2*n14)*(-1 + n14)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n5 == 0 && n7 == 0 && n9 == 0 &&  !(n4 == 0 || n8 == 1) -> 
  ((-1 - n4)*j[p4, -1, -1 + n2, n3, 2 + n4, 0, n6, 0, -1 + n8, 0, 1, 1, 0, 1, 
      1])/(-1 + n8) - (n3*j[p4, -1, -1 + n2, 1 + n3, 1 + n4, 0, n6, 0, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) - j[p4, -1, n2, n3, 1 + n4, 0, 
    -1 + n6, 0, n8, 0, 1, 1, 0, 1, 1] + 
   j[p4, -1, n2, n3, 1 + n4, 0, n6, 0, -1 + n8, 0, 0, 2, 0, 1, 1]/(-1 + n8) + 
   j[p4, -1, n2, n3, 1 + n4, 0, n6, 0, -1 + n8, 0, 1, 1, 0, 2, 0]/(1 - n8) + 
   ((1 + n4)*j[p4, -1, n2, n3, 2 + n4, -1, n6, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (-1 + n8) + (n3*j[p4, -1, n2, 1 + n3, 1 + n4, 0, n6, 0, -1 + n8, 0, 1, 1, 
      0, 0, 1])/(-1 + n8) - (n3*j[p4, -1, n2, 1 + n3, 1 + n4, 0, n6, 0, 
      -1 + n8, 0, 1, 1, 0, 1, 0])/(-1 + n8) - 
   (n2*j[p4, -1, 1 + n2, -1 + n3, 1 + n4, 0, n6, 0, -1 + n8, 0, 1, 1, 0, 1, 
      1])/(-1 + n8) - (n2*j[p4, -1, 1 + n2, n3, 1 + n4, 0, -1 + n6, 0, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) + 
   (n2*j[p4, -1, 1 + n2, n3, 1 + n4, 0, n6, 0, -2 + n8, 0, 1, 1, 0, 1, 1])/
    (-1 + n8) + ((1 + n4)*j[p4, 0, -2 + n2, n3, 2 + n4, 0, n6, 0, -1 + n8, 0, 
      1, 1, 0, 1, 1])/(-1 + n8) + ((1 - d + n3 + 2*n4 + n8)*
     j[p4, 0, -1 + n2, n3, 1 + n4, 0, n6, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (-1 + n8) + j[p4, 0, -1 + n2, n3, 1 + n4, 0, n6, 0, n8, 0, 1, 0, 0, 1, 
    1] + ((-1 - n4)*j[p4, 0, -1 + n2, n3, 2 + n4, -1, n6, 0, -1 + n8, 0, 1, 
      1, 0, 1, 1])/(-1 + n8) + 
   ((-1 - n4)*j[p4, 0, -1 + n2, n3, 2 + n4, 0, -1 + n6, 0, -1 + n8, 0, 1, 1, 
      0, 1, 1])/(-1 + n8) + ((-1 - n4)*j[p4, 0, -1 + n2, n3, 2 + n4, 0, n6, 
      -1, -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) + 
   ((1 + n4)*j[p4, 0, -1 + n2, n3, 2 + n4, 0, n6, 0, -1 + n8, -1, 1, 1, 0, 1, 
      1])/(-1 + n8) + ((-1 - n4)*j[p4, 0, -1 + n2, n3, 2 + n4, 0, n6, 0, 
      -1 + n8, 0, 0, 1, 0, 1, 1])/(-1 + n8) + 
   ((1 + n4)*j[p4, 0, -1 + n2, n3, 2 + n4, 0, n6, 0, -1 + n8, 0, 1, 0, 0, 1, 
      1])/(-1 + n8) + (n3*j[p4, 0, -1 + n2, 1 + n3, 1 + n4, -1, n6, 0, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) + 
   (n3*j[p4, 0, -1 + n2, 1 + n3, 1 + n4, 0, n6, -1, -1 + n8, 0, 1, 1, 0, 1, 
      1])/(-1 + n8) + (n3*j[p4, 0, -1 + n2, 1 + n3, 1 + n4, 0, n6, 0, 
      -2 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) - 
   (n3*j[p4, 0, -1 + n2, 1 + n3, 1 + n4, 0, n6, 0, -1 + n8, 0, 0, 1, 0, 1, 
      1])/(-1 + n8) + (n3*j[p4, 0, -1 + n2, 1 + n3, 1 + n4, 0, n6, 0, 
      -1 + n8, 0, 1, 0, 0, 1, 1])/(-1 + n8) - 
   (n3*j[p4, 0, -1 + n2, 1 + n3, 1 + n4, 0, n6, 0, -1 + n8, 0, 1, 1, -1, 1, 
      1])/(-1 + n8) + (n3*j[p4, 0, -1 + n2, 1 + n3, 1 + n4, 0, n6, 0, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) + 
   ((-2 + 2*d - n2 - n4 - 2*n8)*j[p4, 0, n2, -1 + n3, 1 + n4, 0, n6, 0, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) + 
   ((1 + n4)*j[p4, 0, n2, -1 + n3, 2 + n4, 0, -1 + n6, 0, -1 + n8, 0, 1, 1, 
      0, 1, 1])/(-1 + n8) + ((-1 - n4)*j[p4, 0, n2, -1 + n3, 2 + n4, 0, n6, 
      0, -2 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) + 
   ((1 - d + n4 + n8)*j[p4, 0, n2, n3, n4, 0, n6, 0, -1 + n8, 0, 1, 1, 0, 1, 
      1])/(-1 + n8) + j[p4, 0, n2, n3, n4, 0, n6, 0, n8, 0, 1, 0, 0, 1, 1] + 
   ((-2 + 2*d - n2 - 2*n4 - 2*n8)*j[p4, 0, n2, n3, 1 + n4, -1, n6, 0, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) - 
   (n4*j[p4, 0, n2, n3, 1 + n4, 0, -1 + n6, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (-1 + n8) + j[p4, 0, n2, n3, 1 + n4, 0, -1 + n6, 0, n8, 0, 1, 1, 0, 1, 
    1] + j[p4, 0, n2, n3, 1 + n4, 0, n6, -1, -2 + n8, 0, 1, 2, 0, 1, 1]/
    (1 - n8) + ((2 + n2 - n3 - n4 - n8)*j[p4, 0, n2, n3, 1 + n4, 0, n6, -1, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) - j[p4, 0, n2, n3, 1 + n4, 0, n6, 
    -1, n8, 0, 1, 0, 0, 1, 1] + 
   ((2 - 2*n3)*j[p4, 0, n2, n3, 1 + n4, 0, n6, 0, -2 + n8, 0, 1, 1, 0, 1, 1])/
    (-1 + n8) + (n4*j[p4, 0, n2, n3, 1 + n4, 0, n6, 0, -1 + n8, -1, 1, 1, 0, 
      1, 1])/(-1 + n8) + ((-1 - n4)*j[p4, 0, n2, n3, 1 + n4, 0, n6, 0, 
      -1 + n8, 0, 0, 1, 0, 1, 1])/(-1 + n8) + 
   ((1 + n4)*j[p4, 0, n2, n3, 1 + n4, 0, n6, 0, -1 + n8, 0, 1, 0, 0, 1, 1])/
    (-1 + n8) + ((-1 + n3)*j[p4, 0, n2, n3, 1 + n4, 0, n6, 0, -1 + n8, 0, 1, 
      1, -1, 1, 1])/(-1 + n8) + 
   ((1 - n3)*j[p4, 0, n2, n3, 1 + n4, 0, n6, 0, -1 + n8, 0, 1, 1, 0, 0, 1])/
    (-1 + n8) + ((-1 + d - n3 - 2*n4 - n8)*j[p4, 0, n2, n3, 1 + n4, 0, n6, 0, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) + 
   j[p4, 0, n2, n3, 1 + n4, 0, n6, 0, -1 + n8, 0, 1, 1, 0, 2, 0]/(-1 + n8) + 
   ((1 + n4)*j[p4, 0, n2, n3, 2 + n4, -1, -1 + n6, 0, -1 + n8, 0, 1, 1, 0, 1, 
      1])/(-1 + n8) + ((1 + n4)*j[p4, 0, n2, n3, 2 + n4, -1, n6, -1, -1 + n8, 
      0, 1, 1, 0, 1, 1])/(-1 + n8) + 
   ((-1 - n4)*j[p4, 0, n2, n3, 2 + n4, -1, n6, 0, -2 + n8, 0, 1, 1, 0, 1, 1])/
    (-1 + n8) + ((1 + n4)*j[p4, 0, n2, n3, 2 + n4, 0, -1 + n6, -1, -1 + n8, 
      0, 1, 1, 0, 1, 1])/(-1 + n8) + 
   ((-1 - n4)*j[p4, 0, n2, n3, 2 + n4, 0, n6, -1, -1 + n8, -1, 1, 1, 0, 1, 
      1])/(-1 + n8) + ((1 + n4)*j[p4, 0, n2, n3, 2 + n4, 0, n6, -1, -1 + n8, 
      0, 0, 1, 0, 1, 1])/(-1 + n8) + 
   ((-1 - n4)*j[p4, 0, n2, n3, 2 + n4, 0, n6, -1, -1 + n8, 0, 1, 0, 0, 1, 1])/
    (-1 + n8) + (n3*j[p4, 0, n2, 1 + n3, n4, 0, n6, -1, -1 + n8, 0, 1, 1, 0, 
      1, 1])/(-1 + n8) + (n3*j[p4, 0, n2, 1 + n3, n4, 0, n6, 0, -2 + n8, 0, 
      1, 1, 0, 1, 1])/(-1 + n8) - 
   (n3*j[p4, 0, n2, 1 + n3, n4, 0, n6, 0, -1 + n8, 0, 0, 1, 0, 1, 1])/
    (-1 + n8) + (n3*j[p4, 0, n2, 1 + n3, n4, 0, n6, 0, -1 + n8, 0, 1, 0, 0, 
      1, 1])/(-1 + n8) - (n3*j[p4, 0, n2, 1 + n3, n4, 0, n6, 0, -1 + n8, 0, 
      1, 1, -1, 1, 1])/(-1 + n8) - 
   (n3*j[p4, 0, n2, 1 + n3, 1 + n4, -1, n6, -1, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (-1 + n8) - (2*n3*j[p4, 0, n2, 1 + n3, 1 + n4, -1, n6, 0, -2 + n8, 0, 1, 
      1, 0, 1, 1])/(-1 + n8) + 
   (n3*j[p4, 0, n2, 1 + n3, 1 + n4, -1, n6, 0, -1 + n8, 0, 1, 1, -1, 1, 1])/
    (-1 + n8) - (n3*j[p4, 0, n2, 1 + n3, 1 + n4, -1, n6, 0, -1 + n8, 0, 1, 1, 
      0, 0, 1])/(-1 + n8) - (n3*j[p4, 0, n2, 1 + n3, 1 + n4, 0, n6, -2, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) - 
   (n3*j[p4, 0, n2, 1 + n3, 1 + n4, 0, n6, -1, -2 + n8, 0, 1, 1, 0, 1, 1])/
    (-1 + n8) + (n3*j[p4, 0, n2, 1 + n3, 1 + n4, 0, n6, -1, -1 + n8, 0, 0, 1, 
      0, 1, 1])/(-1 + n8) - (n3*j[p4, 0, n2, 1 + n3, 1 + n4, 0, n6, -1, 
      -1 + n8, 0, 1, 0, 0, 1, 1])/(-1 + n8) + 
   (n3*j[p4, 0, n2, 1 + n3, 1 + n4, 0, n6, -1, -1 + n8, 0, 1, 1, -1, 1, 1])/
    (-1 + n8) - (n3*j[p4, 0, n2, 1 + n3, 1 + n4, 0, n6, -1, -1 + n8, 0, 1, 1, 
      0, 1, 1])/(-1 + n8) + (n3*j[p4, 0, n2, 1 + n3, 1 + n4, 0, n6, 0, 
      -1 + n8, 0, 1, 1, 0, 1, 0])/(-1 + n8) + 
   (n2*j[p4, 0, 1 + n2, -1 + n3, 1 + n4, 0, n6, 0, -1 + n8, 0, 0, 1, 0, 1, 
      1])/(-1 + n8) + (n2*j[p4, 0, 1 + n2, n3, 1 + n4, -1, n6, 0, -1 + n8, 0, 
      0, 1, 0, 1, 1])/(-1 + n8) - 
   (n2*j[p4, 0, 1 + n2, n3, 1 + n4, -1, n6, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (-1 + n8) + (n2*j[p4, 0, 1 + n2, n3, 1 + n4, 0, -1 + n6, 0, -1 + n8, 0, 
      1, 1, 0, 1, 1])/(-1 + n8) - 
   (n2*j[p4, 0, 1 + n2, n3, 1 + n4, 0, n6, -1, -1 + n8, 0, 0, 1, 0, 1, 1])/
    (-1 + n8) + (n2*j[p4, 0, 1 + n2, n3, 1 + n4, 0, n6, -1, -1 + n8, 0, 1, 1, 
      0, 1, 1])/(-1 + n8) - (n2*j[p4, 0, 1 + n2, n3, 1 + n4, 0, n6, 0, 
      -2 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n11 == 1 && n12 == 0 && n2 == 0 && n4 == 0 && n5 == 0 && 
    n7 == 0 && n8 == 1 && n9 == 0 && n14 != 1 -> 
  ((-2*n6 + d*n6 - 2*n6^2)*j[p4, 0, 0, n3, 0, 0, 1 + n6, 0, 1, 0, n10, 1, 0, 
     n13, -1 + n14])/((d - 2*n14)*(-1 + n14)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n11 == 1 && n12 == 0 && n13 == 1 && n2 == 0 && n4 == 0 && n5 == 0 && 
    n7 == 0 && n8 == 1 && n9 == 0 &&  !(n10 == 1 || n6 == 1) -> 
  (n3*j[p4, n1, -1, 1 + n3, 0, 0, n6, 0, 1, 0, -1 + n10, 1, 0, 1, n14])/
    (-1 + n10) + ((-1 - d + 2*n14 + n6)*j[p4, n1, 0, n3, 0, 0, -1 + n6, 0, 1, 
      0, n10, 1, 0, 1, n14])/(-1 + n6) + 
   ((-1 - 2*d + n10 + 2*n14 + 2*n3 + 2*n6)*j[p4, n1, 0, n3, 0, 0, n6, 0, 1, 
      0, -1 + n10, 1, 0, 1, n14])/(-1 + n10) + j[p4, n1, 0, n3, 0, 0, n6, 0, 
    1, 0, n10, 1, 0, 1, -1 + n14] - 
   (n3*j[p4, n1, 0, 1 + n3, 0, 0, n6, -1, 1, 0, -1 + n10, 1, 0, 1, n14])/
    (-1 + n10) - (2*n3*j[p4, n1, 0, 1 + n3, 0, 0, n6, 0, 0, 0, -1 + n10, 1, 
      0, 1, n14])/(-1 + n10) + 
   (n3*j[p4, n1, 0, 1 + n3, 0, 0, n6, 0, 1, 0, -1 + n10, 1, -1, 1, n14])/
    (-1 + n10) - (n3*j[p4, n1, 0, 1 + n3, 0, 0, n6, 0, 1, 0, -1 + n10, 1, 0, 
      0, n14])/(-1 + n10), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n14 == 1 && n3 == 0 && n5 == 0 && 
    n7 == 0 && n8 == 1 && n9 == 0 && n11 != 1 -> 
  -((n4*j[p4, -1, n2, 0, 1 + n4, 0, n6, 0, 1, 0, 1, n11, 0, n13, 1])/
     (d - 2*n11)) + ((-4 + d - 2*n4)*j[p4, 0, n2, 0, n4, 0, n6, 0, 2, 0, 1, 
      -1 + n11, 0, n13, 1])/((d - 2*n11)*(-1 + n11)) + 
   (2*n4*j[p4, 0, n2, 0, 1 + n4, 0, -1 + n6, 0, 2, 0, 1, -1 + n11, 0, n13, 
      1])/((d - 2*n11)*(-1 + n11)) + 
   (n4*j[p4, 0, n2, 0, 1 + n4, 0, n6, 0, 0, 0, 1, n11, 0, n13, 1])/
    (d - 2*n11) + ((-2*n4 + n11*n4 - n4^2)*j[p4, 0, n2, 0, 1 + n4, 0, n6, 0, 
      1, 0, 1, -1 + n11, 0, n13, 1])/((d - 2*n11)*(-1 + n11)) + 
   ((-n4 - n4^2)*j[p4, 0, n2, 0, 2 + n4, 0, -1 + n6, 0, 1, 0, 1, -1 + n11, 0, 
      n13, 1])/((d - 2*n11)*(-1 + n11)) + 
   ((n4 + n4^2)*j[p4, 0, n2, 0, 2 + n4, 0, n6, 0, 0, 0, 1, -1 + n11, 0, n13, 
      1])/((d - 2*n11)*(-1 + n11)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n4 == 0 && 
    n5 == 0 && n8 == 1 && n9 == 0 &&  !(n6 == 1 || n7 == 0) -> 
  -((n3*j[p4, -1 + n1, -1 + n2, 1 + n3, 0, 0, n6, 1 + n7, 1, 0, 1, 1, 0, 1, 
       1])/(2 - 2*d + n2 + 2*n3 + 2*n6)) + 
   ((n2 - n3)*j[p4, -1 + n1, n2, n3, 0, 0, n6, 1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    (2 - 2*d + n2 + 2*n3 + 2*n6) + 
   (n2*j[p4, -1 + n1, 1 + n2, -1 + n3, 0, 0, n6, 1 + n7, 1, 0, 1, 1, 0, 1, 
      1])/(2 - 2*d + n2 + 2*n3 + 2*n6) + 
   ((2 + n2 + 2*n7)*j[p4, n1, -1 + n2, n3, 0, 0, n6, 1 + n7, 1, 0, 1, 1, 0, 
      1, 1])/(-2 + 2*d - n2 - 2*n3 - 2*n6) + 
   j[p4, n1, -1 + n2, n3, 0, 0, n6, 1 + n7, 1, 0, 2, 0, 0, 1, 1]/
    (-2 + 2*d - n2 - 2*n3 - 2*n6) + 
   ((1 + n7)*j[p4, n1, -1 + n2, n3, 0, 0, n6, 2 + n7, 1, 0, 0, 1, 0, 1, 1])/
    (-2 + 2*d - n2 - 2*n3 - 2*n6) + 
   ((-1 - n7)*j[p4, n1, -1 + n2, n3, 0, 0, n6, 2 + n7, 1, 0, 1, 0, 0, 1, 1])/
    (-2 + 2*d - n2 - 2*n3 - 2*n6) + 
   (n6*j[p4, n1, -1 + n2, n3, 0, 0, 1 + n6, 1 + n7, 1, 0, 0, 1, 0, 1, 1])/
    (-2 + 2*d - n2 - 2*n3 - 2*n6) - 
   (n6*j[p4, n1, -1 + n2, n3, 0, 0, 1 + n6, 1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    (-2 + 2*d - n2 - 2*n3 - 2*n6) - 
   (n6*j[p4, n1, -1 + n2, n3, 0, 0, 1 + n6, 1 + n7, 1, 0, 1, 1, 0, 1, 0])/
    (-2 + 2*d - n2 - 2*n3 - 2*n6) + 
   (n3*j[p4, n1, -1 + n2, 1 + n3, 0, 0, n6, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (2 - 2*d + n2 + 2*n3 + 2*n6) - 
   (n3*j[p4, n1, -1 + n2, 1 + n3, 0, 0, n6, 1 + n7, 1, 0, 0, 1, 0, 1, 1])/
    (2 - 2*d + n2 + 2*n3 + 2*n6) + 
   (n3*j[p4, n1, -1 + n2, 1 + n3, 0, 0, n6, 1 + n7, 1, 0, 1, 0, 0, 1, 1])/
    (2 - 2*d + n2 + 2*n3 + 2*n6) - 
   (n3*j[p4, n1, -1 + n2, 1 + n3, 0, 0, n6, 1 + n7, 1, 0, 1, 1, -1, 1, 1])/
    (2 - 2*d + n2 + 2*n3 + 2*n6) + 
   (n3*j[p4, n1, -1 + n2, 1 + n3, 0, 0, n6, 1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    (2 - 2*d + n2 + 2*n3 + 2*n6) + ((4 - 2*d + n2 + 2*n6 + 2*n7)*
     j[p4, n1, n2, -1 + n3, 0, 0, n6, 1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    (-2 + 2*d - n2 - 2*n3 - 2*n6) + j[p4, n1, n2, -1 + n3, 0, 0, n6, 1 + n7, 
     1, 0, 2, 0, 0, 1, 1]/(-2 + 2*d - n2 - 2*n3 - 2*n6) + 
   ((1 + n7)*j[p4, n1, n2, -1 + n3, 0, 0, n6, 2 + n7, 1, 0, 0, 1, 0, 1, 1])/
    (-2 + 2*d - n2 - 2*n3 - 2*n6) + 
   ((-1 - n7)*j[p4, n1, n2, -1 + n3, 0, 0, n6, 2 + n7, 1, 0, 1, 0, 0, 1, 1])/
    (-2 + 2*d - n2 - 2*n3 - 2*n6) + 
   (n6*j[p4, n1, n2, -1 + n3, 0, 0, 1 + n6, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (-2 + 2*d - n2 - 2*n3 - 2*n6) + 
   ((-2 + 2*d - 2*n6)*j[p4, n1, n2, n3, -1, 0, n6, 1 + n7, 1, 0, 1, 1, 0, 1, 
      1])/(-2 + 2*d - n2 - 2*n3 - 2*n6) - 
   (n6*j[p4, n1, n2, n3, -1, 0, 1 + n6, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (-2 + 2*d - n2 - 2*n3 - 2*n6) + 
   (n6*j[p4, n1, n2, n3, -1, 0, 1 + n6, 1 + n7, 1, 0, 0, 1, 0, 1, 1])/
    (-2 + 2*d - n2 - 2*n3 - 2*n6) - 
   (n6*j[p4, n1, n2, n3, -1, 0, 1 + n6, 1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    (-2 + 2*d - n2 - 2*n3 - 2*n6) - 
   (n6*j[p4, n1, n2, n3, -1, 0, 1 + n6, 1 + n7, 1, 0, 1, 1, 0, 1, 0])/
    (-2 + 2*d - n2 - 2*n3 - 2*n6) + 
   ((2 - 2*d + 2*n6)*j[p4, n1, n2, n3, 0, -1, n6, 1 + n7, 1, 0, 1, 1, 0, 1, 
      1])/(-2 + 2*d - n2 - 2*n3 - 2*n6) + 
   (n6*j[p4, n1, n2, n3, 0, -1, 1 + n6, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (-2 + 2*d - n2 - 2*n3 - 2*n6) - 
   (n6*j[p4, n1, n2, n3, 0, -1, 1 + n6, 1 + n7, 1, 0, 0, 1, 0, 1, 1])/
    (-2 + 2*d - n2 - 2*n3 - 2*n6) + 
   (n6*j[p4, n1, n2, n3, 0, -1, 1 + n6, 1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    (-2 + 2*d - n2 - 2*n3 - 2*n6) + 
   (n6*j[p4, n1, n2, n3, 0, -1, 1 + n6, 1 + n7, 1, 0, 1, 1, 0, 1, 0])/
    (-2 + 2*d - n2 - 2*n3 - 2*n6) + 
   ((-4 + 5*d - d^2 - n2 + d*n2 - 4*n6 + d*n6 - n2*n6 - 2*n7 + 2*d*n7 - 
      2*n6*n7)*j[p4, n1, n2, n3, 0, 0, -1 + n6, 1 + n7, 1, 0, 1, 1, 0, 1, 1])/
    ((-2 + 2*d - n2 - 2*n3 - 2*n6)*(-1 + n6)) + 
   j[p4, n1, n2, n3, 0, 0, n6, n7, 0, 0, 2, 1, 0, 1, 1]/
    (2 - 2*d + n2 + 2*n3 + 2*n6) + j[p4, n1, n2, n3, 0, 0, n6, n7, 1, 0, 2, 
     0, 0, 1, 1]/(2 - 2*d + n2 + 2*n3 + 2*n6) + 
   j[p4, n1, n2, n3, 0, 0, n6, n7, 1, 0, 2, 1, 0, 0, 1]/
    (2 - 2*d + n2 + 2*n3 + 2*n6) + 
   ((-4 + d - n3 - 3*n7)*j[p4, n1, n2, n3, 0, 0, n6, 1 + n7, 0, 0, 1, 1, 0, 
      1, 1])/(-2 + 2*d - n2 - 2*n3 - 2*n6) + 
   j[p4, n1, n2, n3, 0, 0, n6, 1 + n7, 1, -1, 1, 1, 0, 0, 2]/
    (-2 + 2*d - n2 - 2*n3 - 2*n6) + 
   ((2 - n2 - n3)*j[p4, n1, n2, n3, 0, 0, n6, 1 + n7, 1, 0, 0, 1, 0, 1, 1])/
    (2 - 2*d + n2 + 2*n3 + 2*n6) + 
   ((-1 + n3)*j[p4, n1, n2, n3, 0, 0, n6, 1 + n7, 1, 0, 1, 0, 0, 1, 1])/
    (2 - 2*d + n2 + 2*n3 + 2*n6) + 
   ((-3 + d - n2 - 3*n7)*j[p4, n1, n2, n3, 0, 0, n6, 1 + n7, 1, 0, 1, 1, 0, 
      0, 1])/(-2 + 2*d - n2 - 2*n3 - 2*n6) + 
   j[p4, n1, n2, n3, 0, 0, n6, 1 + n7, 1, 0, 1, 1, 0, 0, 2]/
    (2 - 2*d + n2 + 2*n3 + 2*n6) + 
   ((-4 + d - n2 - 2*n7)*j[p4, n1, n2, n3, 0, 0, n6, 1 + n7, 1, 0, 1, 1, 0, 
      1, 0])/(-2 + 2*d - n2 - 2*n3 - 2*n6) + 
   ((4 - d + n2 + 2*n7)*j[p4, n1, n2, n3, 0, 0, n6, 1 + n7, 1, 0, 1, 1, 0, 1, 
      1])/(-2 + 2*d - n2 - 2*n3 - 2*n6) + 
   j[p4, n1, n2, n3, 0, 0, n6, 1 + n7, 1, 0, 2, 0, -1, 1, 1]/
    (-2 + 2*d - n2 - 2*n3 - 2*n6) + j[p4, n1, n2, n3, 0, 0, n6, 1 + n7, 1, 0, 
     2, 0, 0, 1, 1]/(2 - 2*d + n2 + 2*n3 + 2*n6) - 
   (n6*j[p4, n1, n2, n3, 0, 0, 1 + n6, n7, 0, 0, 1, 1, 0, 1, 1])/
    (-2 + 2*d - n2 - 2*n3 - 2*n6) - 
   (n6*j[p4, n1, n2, n3, 0, 0, 1 + n6, 1 + n7, 0, -1, 1, 1, 0, 1, 1])/
    (-2 + 2*d - n2 - 2*n3 - 2*n6) + 
   (n6*j[p4, n1, n2, n3, 0, 0, 1 + n6, 1 + n7, 0, 0, 1, 1, -1, 1, 1])/
    (-2 + 2*d - n2 - 2*n3 - 2*n6) + 
   (2*n3*j[p4, n1, n2, 1 + n3, 0, 0, n6, n7, 0, 0, 1, 1, 0, 1, 1])/
    (2 - 2*d + n2 + 2*n3 + 2*n6) + 
   (2*n3*j[p4, n1, n2, 1 + n3, 0, 0, n6, n7, 1, 0, 1, 1, 0, 0, 1])/
    (2 - 2*d + n2 + 2*n3 + 2*n6) - 
   (n3*j[p4, n1, n2, 1 + n3, 0, 0, n6, n7, 1, 0, 1, 1, 0, 1, 1])/
    (2 - 2*d + n2 + 2*n3 + 2*n6) - 
   (n3*j[p4, n1, n2, 1 + n3, 0, 0, n6, 1 + n7, 1, 0, 1, 1, -1, 0, 1])/
    (2 - 2*d + n2 + 2*n3 + 2*n6) + 
   (n3*j[p4, n1, n2, 1 + n3, 0, 0, n6, 1 + n7, 1, 0, 1, 1, 0, 0, 1])/
    (2 - 2*d + n2 + 2*n3 + 2*n6) - 
   (n2*j[p4, n1, 1 + n2, -1 + n3, 0, 0, n6, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (2 - 2*d + n2 + 2*n3 + 2*n6) - 
   (n2*j[p4, n1, 1 + n2, -1 + n3, 0, 0, n6, 1 + n7, 1, 0, 0, 1, 0, 1, 1])/
    (2 - 2*d + n2 + 2*n3 + 2*n6) + 
   (2*n2*j[p4, n1, 1 + n2, n3, 0, 0, n6, n7, 0, 0, 1, 1, 0, 1, 1])/
    (2 - 2*d + n2 + 2*n3 + 2*n6) + 
   (2*n2*j[p4, n1, 1 + n2, n3, 0, 0, n6, n7, 1, 0, 1, 1, 0, 0, 1])/
    (2 - 2*d + n2 + 2*n3 + 2*n6) - 
   (n2*j[p4, n1, 1 + n2, n3, 0, 0, n6, n7, 1, 0, 1, 1, 0, 1, 1])/
    (2 - 2*d + n2 + 2*n3 + 2*n6) - 
   (n2*j[p4, n1, 1 + n2, n3, 0, 0, n6, 1 + n7, 0, 0, 1, 1, -1, 1, 1])/
    (2 - 2*d + n2 + 2*n3 + 2*n6) + 
   (n2*j[p4, n1, 1 + n2, n3, 0, 0, n6, 1 + n7, 0, 0, 1, 1, 0, 1, 1])/
    (2 - 2*d + n2 + 2*n3 + 2*n6), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n12 == 0 && n14 == 1 && n2 == 0 && n3 == 0 && n5 == 0 && 
    n6 == 1 && n7 == 0 && n9 == 0 && n10 != 1 -> 
  (n4*j[p4, -1, 0, 0, 1 + n4, 0, 1, 0, n8, 0, n10, n11, 0, n13, 1])/
    (d - 2*n10) - (n4*j[p4, 0, -1, 0, 1 + n4, 0, 1, 0, n8, 0, n10, n11, 0, 
      n13, 1])/(d - 2*n10) - (n4*j[p4, 0, -1, 0, 1 + n4, 0, 2, 0, n8, 0, 
      -1 + n10, n11, 0, n13, 1])/((d - 2*n10)*(-1 + n10)) + 
   ((-4 + d - 2*n4)*j[p4, 0, 0, 0, n4, 0, 2, 0, n8, 0, -1 + n10, n11, 0, n13, 
      1])/((d - 2*n10)*(-1 + n10)) + 
   (n4*j[p4, 0, 0, 0, 1 + n4, -1, 2, 0, n8, 0, -1 + n10, n11, 0, n13, 1])/
    ((d - 2*n10)*(-1 + n10)) + ((-4*n4 + 2*d*n4 - n10*n4 - 2*n4^2)*
     j[p4, 0, 0, 0, 1 + n4, 0, 1, 0, n8, 0, -1 + n10, n11, 0, n13, 1])/
    ((d - 2*n10)*(-1 + n10)) + 
   (2*n4*j[p4, 0, 0, 0, 1 + n4, 0, 2, 0, -1 + n8, 0, -1 + n10, n11, 0, n13, 
      1])/((d - 2*n10)*(-1 + n10)) + 
   ((n4 + n4^2)*j[p4, 0, 0, 0, 2 + n4, -1, 1, 0, n8, 0, -1 + n10, n11, 0, 
      n13, 1])/((d - 2*n10)*(-1 + n10)) + 
   ((-n4 - n4^2)*j[p4, 0, 0, 0, 2 + n4, 0, 0, 0, n8, 0, -1 + n10, n11, 0, 
      n13, 1])/((d - 2*n10)*(-1 + n10)) + 
   ((-n4 - n4^2)*j[p4, 0, 0, 0, 2 + n4, 0, 1, -1, n8, 0, -1 + n10, n11, 0, 
      n13, 1])/((d - 2*n10)*(-1 + n10)) + 
   ((n4 + n4^2)*j[p4, 0, 0, 0, 2 + n4, 0, 1, 0, -1 + n8, 0, -1 + n10, n11, 0, 
      n13, 1])/((d - 2*n10)*(-1 + n10)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && n3 == 0 && 
    n6 == 1 && n7 == 0 && n9 == 0 && n10 != 1 -> 
  (n4*j[p4, -1, 0, 0, 1 + n4, n5, 1, 0, n8, 0, n10, n11, 0, 1, 1])/
    (d - 2*n10) - (n4*j[p4, 0, -1, 0, 1 + n4, n5, 1, 0, n8, 0, n10, n11, 0, 
      1, 1])/(d - 2*n10) - (n4*j[p4, 0, -1, 0, 1 + n4, n5, 2, 0, n8, 0, 
      -1 + n10, n11, 0, 1, 1])/((d - 2*n10)*(-1 + n10)) + 
   ((-4 + d - 2*n4)*j[p4, 0, 0, 0, n4, n5, 2, 0, n8, 0, -1 + n10, n11, 0, 1, 
      1])/((d - 2*n10)*(-1 + n10)) + 
   (n4*j[p4, 0, 0, 0, 1 + n4, -1 + n5, 2, 0, n8, 0, -1 + n10, n11, 0, 1, 1])/
    ((d - 2*n10)*(-1 + n10)) + ((-4*n4 + 2*d*n4 - n10*n4 - 2*n4^2)*
     j[p4, 0, 0, 0, 1 + n4, n5, 1, 0, n8, 0, -1 + n10, n11, 0, 1, 1])/
    ((d - 2*n10)*(-1 + n10)) + 
   (2*n4*j[p4, 0, 0, 0, 1 + n4, n5, 2, 0, -1 + n8, 0, -1 + n10, n11, 0, 1, 
      1])/((d - 2*n10)*(-1 + n10)) + 
   ((n4 + n4^2)*j[p4, 0, 0, 0, 2 + n4, -1 + n5, 1, 0, n8, 0, -1 + n10, n11, 
      0, 1, 1])/((d - 2*n10)*(-1 + n10)) + 
   ((-n4 - n4^2)*j[p4, 0, 0, 0, 2 + n4, n5, 0, 0, n8, 0, -1 + n10, n11, 0, 1, 
      1])/((d - 2*n10)*(-1 + n10)) + 
   ((-n4 - n4^2)*j[p4, 0, 0, 0, 2 + n4, n5, 1, -1, n8, 0, -1 + n10, n11, 0, 
      1, 1])/((d - 2*n10)*(-1 + n10)) + 
   ((n4 + n4^2)*j[p4, 0, 0, 0, 2 + n4, n5, 1, 0, -1 + n8, 0, -1 + n10, n11, 
      0, 1, 1])/((d - 2*n10)*(-1 + n10)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n13 == 1 && n4 == 0 && n5 == 0 && 
    n6 == 1 && n7 == 0 && n9 == 0 &&  !(n11 == 1 || n8 == 1) -> 
  -((n3*j[p4, 0, -1 + n2, 1 + n3, 0, 0, 1, 0, n8, 0, 1, -1 + n11, 0, 1, n14])/
     (-1 + n11)) + ((1 - d + n3 + n8)*j[p4, 0, n2, n3, 0, 0, 1, 0, -1 + n8, 
      0, 1, n11, 0, 1, n14])/(-1 + n8) + 
   ((1 - 2*d + n11 + 2*n8)*j[p4, 0, n2, n3, 0, 0, 1, 0, n8, 0, 1, -1 + n11, 
      0, 1, n14])/(-1 + n11) + j[p4, 0, n2, n3, 0, 0, 1, 0, n8, 0, 1, n11, 0, 
    0, n14] - (n3*j[p4, 0, n2, 1 + n3, 0, 0, 1, -1, -1 + n8, 0, 1, n11, 0, 1, 
      n14])/(-1 + n8) + (n3*j[p4, 0, n2, 1 + n3, 0, 0, 1, -1, n8, 0, 1, 
      -1 + n11, 0, 1, n14])/(-1 + n11) + 
   (2*n3*j[p4, 0, n2, 1 + n3, 0, 0, 1, 0, -1 + n8, 0, 1, -1 + n11, 0, 1, 
      n14])/(-1 + n11) + (n3*j[p4, 0, n2, 1 + n3, 0, 0, 1, 0, -1 + n8, 0, 1, 
      n11, 0, 0, n14])/(-1 + n8) - 
   (n3*j[p4, 0, n2, 1 + n3, 0, 0, 1, 0, n8, 0, 1, -1 + n11, -1, 1, n14])/
    (-1 + n11) + (n3*j[p4, 0, n2, 1 + n3, 0, 0, 1, 0, n8, 0, 1, -1 + n11, 0, 
      0, n14])/(-1 + n11) - (n2*j[p4, 0, 1 + n2, -1 + n3, 0, 0, 1, 0, 
      -1 + n8, 0, 1, n11, 0, 1, n14])/(-1 + n8) - 
   (n2*j[p4, 0, 1 + n2, -1 + n3, 0, 0, 1, 0, n8, 0, 1, -1 + n11, 0, 1, n14])/
    (-1 + n11) + (n2*j[p4, 0, 1 + n2, n3, 0, 0, 1, -1, -1 + n8, 0, 1, n11, 0, 
      1, n14])/(-1 + n8) + (n2*j[p4, 0, 1 + n2, n3, 0, 0, 1, -1, n8, 0, 1, 
      -1 + n11, 0, 1, n14])/(-1 + n11) + 
   (n2*j[p4, 0, 1 + n2, n3, 0, 0, 1, 0, -2 + n8, 0, 1, n11, 0, 1, n14])/
    (-1 + n8) + (n2*j[p4, 0, 1 + n2, n3, 0, 0, 1, 0, -1 + n8, 0, 1, -1 + n11, 
      0, 1, n14])/(-1 + n11) - 
   (n2*j[p4, 0, 1 + n2, n3, 0, 0, 1, 0, -1 + n8, 0, 1, n11, -1, 1, n14])/
    (-1 + n8) + (2*n2*j[p4, 0, 1 + n2, n3, 0, 0, 1, 0, -1 + n8, 0, 1, n11, 0, 
      0, n14])/(-1 + n8) - (n2*j[p4, 0, 1 + n2, n3, 0, 0, 1, 0, n8, 0, 1, 
      -1 + n11, -1, 1, n14])/(-1 + n11) + 
   (2*n2*j[p4, 0, 1 + n2, n3, 0, 0, 1, 0, n8, 0, 1, -1 + n11, 0, 0, n14])/
    (-1 + n11), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?NonPositive, (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, 
    (n7_)?NonPositive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n4 == 0 && 
    n5 == 0 && n6 == 1 && n9 == 0 &&  !(n7 == -1 || n7 == 0 || n8 == 1) -> 
  ((6 - d + 2*n7)*j[p4, 0, -1 + n2, -1 + n3, 0, 0, 1, 2 + n7, n8, 0, 1, 1, 0, 
      1, n14])/(2*(-1 + n3)) + j[p4, 0, -1 + n2, n3, 0, 0, 1, 1 + n7, n8, 0, 
    1, 1, 0, 1, n14] + ((-3 + d - n7 - n8)*j[p4, 0, n2, -1 + n3, 0, 0, 1, 
      1 + n7, n8, 0, 1, 1, 0, 1, n14])/(-1 + n3) + 
   ((4 - d)*j[p4, 0, n2, -1 + n3, 0, 0, 1, 2 + n7, -1 + n8, 0, 0, 2, 0, 1, 
      n14])/(2*(-1 + n3)*(-1 + n8)) + 
   ((-12 + 8*d - d^2 - 6*n3 + d*n3 - 10*n7 + 3*d*n7 - 2*n3*n7 - 2*n7^2 - 
      6*n8 + d*n8 - 2*n7*n8)*j[p4, 0, n2, -1 + n3, 0, 0, 1, 2 + n7, -1 + n8, 
      0, 1, 1, 0, 1, n14])/(2*(-1 + n3)*(-1 + n8)) + 
   ((-n7 - n8)*j[p4, 0, n2, n3, 0, 0, 1, 1 + n7, -1 + n8, 0, 1, 1, 0, 1, 
      n14])/(-1 + n8) + ((6 - d + 2*n7)*j[p4, 0, n2, n3, 0, 0, 1, 2 + n7, 
      -1 + n8, 0, 1, 1, 0, 0, n14])/(2*(-1 + n8)) - 
   (n3*j[p4, 0, n2, 1 + n3, 0, 0, 1, n7, -1 + n8, 0, 1, 1, 0, 1, n14])/
    (-1 + n8) + (n3*j[p4, 0, n2, 1 + n3, 0, 0, 1, 1 + n7, -1 + n8, 0, 1, 1, 
      0, 0, n14])/(-1 + n8) - (n2*j[p4, 0, 1 + n2, -1 + n3, 0, 0, 1, 1 + n7, 
      -1 + n8, 0, 1, 1, 0, 1, n14])/(-1 + n8) + 
   (n2*j[p4, 0, 1 + n2, n3, 0, 0, 1, n7, -1 + n8, 0, 1, 1, 0, 1, n14])/
    (-1 + n8) + (n2*j[p4, 0, 1 + n2, n3, 0, 0, 1, 1 + n7, -2 + n8, 0, 1, 1, 
      0, 1, n14])/(-1 + n8) - 
   (n2*j[p4, 0, 1 + n2, n3, 0, 0, 1, 1 + n7, -1 + n8, 0, 1, 1, -1, 1, n14])/
    (-1 + n8) + (2*n2*j[p4, 0, 1 + n2, n3, 0, 0, 1, 1 + n7, -1 + n8, 0, 1, 1, 
      0, 0, n14])/(-1 + n8), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n6 == 1 && n7 == -1 && n9 == 0 &&  !(n4 == 0 || n8 == 1) -> 
  j[p4, 0, -2 + n2, n3, 1 + n4, n5, 1, 0, -1 + n8, 0, 1, 1, 0, 1, 1]/
    (1 - n8) + (n3*j[p4, 0, -2 + n2, 1 + n3, 1 + n4, n5, 1, -1, -1 + n8, 0, 
      1, 1, 0, 1, 1])/(-1 + n8) + j[p4, 0, -1 + n2, -1 + n3, 1 + n4, n5, 1, 
     0, -1 + n8, 0, 1, 1, 0, 1, 1]/(1 - n8) + 
   ((-1 - n4)*j[p4, 0, -1 + n2, -1 + n3, 2 + n4, n5, 1, -1, -1 + n8, 0, 1, 1, 
      0, 1, 1])/(-1 + n8) + j[p4, 0, -1 + n2, n3, n4, n5, 1, 0, -1 + n8, 0, 
     1, 1, 0, 1, 1]/(1 - n8) + j[p4, 0, -1 + n2, n3, 1 + n4, -1 + n5, 1, 0, 
     -1 + n8, 0, 1, 1, 0, 1, 1]/(-1 + n8) + 
   ((3*d - n3 - n4 - 3*n5 - 3*n8)*j[p4, 0, -1 + n2, n3, 1 + n4, n5, 1, -1, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) - j[p4, 0, -1 + n2, n3, 1 + n4, 
    n5, 1, -1, n8, 0, 1, 1, 0, 0, 1] + 
   j[p4, 0, -1 + n2, n3, 1 + n4, n5, 1, 0, -2 + n8, 0, 1, 1, 0, 1, 1]/
    (-1 + n8) + j[p4, 0, -1 + n2, n3, 1 + n4, n5, 1, 0, -1 + n8, -1, 1, 1, 0, 
     1, 1]/(1 - n8) + j[p4, 0, -1 + n2, n3, 1 + n4, n5, 1, 0, -1 + n8, 0, 1, 
     1, -1, 1, 1]/(1 - n8) + j[p4, 0, -1 + n2, n3, 1 + n4, n5, 1, 0, -1 + n8, 
     0, 1, 1, 0, 0, 1]/(-1 + n8) + j[p4, 0, -1 + n2, n3, 1 + n4, n5, 1, 0, 
     -1 + n8, 0, 1, 1, 0, 1, 1]/(-1 + n8) - 
   (2*n5*j[p4, 0, -1 + n2, n3, 1 + n4, 1 + n5, 1, -1, -1 + n8, 0, 1, 1, 0, 0, 
      1])/(-1 + n8) + (2*n5*j[p4, 0, -1 + n2, n3, 1 + n4, 1 + n5, 1, -1, 
      -1 + n8, 0, 1, 1, 0, 1, 0])/(-1 + n8) + 
   ((-1 - n4)*j[p4, 0, -1 + n2, n3, 2 + n4, -1 + n5, 1, -1, -1 + n8, 0, 1, 1, 
      0, 1, 1])/(-1 + n8) + ((1 + n4)*j[p4, 0, -1 + n2, n3, 2 + n4, n5, 0, 
      -1, -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) + 
   ((1 + n4)*j[p4, 0, -1 + n2, n3, 2 + n4, n5, 1, -2, -1 + n8, 0, 1, 1, 0, 1, 
      1])/(-1 + n8) + ((-1 - n4)*j[p4, 0, -1 + n2, n3, 2 + n4, n5, 1, -1, 
      -2 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) + 
   ((1 + n4)*j[p4, 0, -1 + n2, n3, 2 + n4, n5, 1, -1, -1 + n8, 0, 1, 1, 0, 1, 
      0])/(-1 + n8) + (n3*j[p4, 0, -1 + n2, 1 + n3, n4, n5, 1, -1, -1 + n8, 
      0, 1, 1, 0, 1, 1])/(-1 + n8) - 
   (2*n3*j[p4, 0, -1 + n2, 1 + n3, 1 + n4, n5, 1, -1, -2 + n8, 0, 1, 1, 0, 1, 
      1])/(-1 + n8) + (n3*j[p4, 0, -1 + n2, 1 + n3, 1 + n4, n5, 1, -1, 
      -1 + n8, -1, 1, 1, 0, 1, 1])/(-1 + n8) + 
   (2*n3*j[p4, 0, -1 + n2, 1 + n3, 1 + n4, n5, 1, -1, -1 + n8, 0, 1, 1, -1, 
      1, 1])/(-1 + n8) - (2*n3*j[p4, 0, -1 + n2, 1 + n3, 1 + n4, n5, 1, -1, 
      -1 + n8, 0, 1, 1, 0, 0, 1])/(-1 + n8) - 
   (n3*j[p4, 0, -1 + n2, 1 + n3, 1 + n4, n5, 1, -1, -1 + n8, 0, 1, 1, 0, 1, 
      1])/(-1 + n8) + j[p4, 0, n2, -1 + n3, n4, n5, 1, 0, -1 + n8, 0, 1, 1, 
     0, 1, 1]/(1 - n8) + j[p4, 0, n2, -1 + n3, 1 + n4, -1 + n5, 1, 0, 
     -1 + n8, 0, 1, 1, 0, 1, 1]/(-1 + n8) + 
   ((-1 + 2*n2)*j[p4, 0, n2, -1 + n3, 1 + n4, n5, 1, -1, -1 + n8, 0, 1, 1, 0, 
      1, 1])/(-1 + n8) + j[p4, 0, n2, -1 + n3, 1 + n4, n5, 1, 0, -1 + n8, -1, 
     1, 1, 0, 1, 1]/(1 - n8) + 
   ((1 + n4)*j[p4, 0, n2, -1 + n3, 2 + n4, n5, 1, -2, -1 + n8, 0, 1, 1, 0, 1, 
      1])/(-1 + n8) + ((1 + 2*d - n4 - 2*n5 - 2*n8)*
     j[p4, 0, n2, n3, n4, n5, 1, -1, -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) + 
   j[p4, 0, n2, n3, n4, n5, 1, 0, -2 + n8, 0, 1, 1, 0, 1, 1]/(-1 + n8) + 
   j[p4, 0, n2, n3, n4, n5, 1, 0, -1 + n8, 0, 1, 1, -1, 1, 1]/(1 - n8) + 
   j[p4, 0, n2, n3, n4, n5, 1, 0, -1 + n8, 0, 1, 1, 0, 0, 1]/(-1 + n8) + 
   j[p4, 0, n2, n3, n4, n5, 1, 0, -1 + n8, 0, 1, 1, 0, 1, 1]/(-1 + n8) - 
   (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, -1, -1 + n8, 0, 1, 1, 0, 0, 1])/
    (-1 + n8) + (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, -1, -1 + n8, 0, 1, 1, 0, 
      1, 0])/(-1 + n8) + j[p4, 0, n2, n3, 1 + n4, -1 + n5, 1, -1, -2 + n8, 0, 
     1, 1, 0, 2, 1]/(1 - n8) + 
   ((-d - n2 + n5)*j[p4, 0, n2, n3, 1 + n4, -1 + n5, 1, -1, -1 + n8, 0, 1, 1, 
      0, 1, 1])/(-1 + n8) + j[p4, 0, n2, n3, 1 + n4, -1 + n5, 1, 0, -2 + n8, 
     0, 1, 1, 0, 1, 1]/(1 - n8) + j[p4, 0, n2, n3, 1 + n4, -1 + n5, 1, 0, 
     -1 + n8, 0, 1, 1, -1, 1, 1]/(-1 + n8) + 
   j[p4, 0, n2, n3, 1 + n4, -1 + n5, 1, 0, -1 + n8, 0, 1, 1, 0, 0, 1]/
    (1 - n8) + j[p4, 0, n2, n3, 1 + n4, -1 + n5, 1, 0, -1 + n8, 0, 1, 1, 0, 
     1, 1]/(1 - n8) + ((n4 + n5)*j[p4, 0, n2, n3, 1 + n4, n5, 0, -1, -1 + n8, 
      0, 1, 1, 0, 1, 1])/(-1 + n8) + j[p4, 0, n2, n3, 1 + n4, n5, 0, -1, 
     -1 + n8, 0, 1, 2, -1, 1, 1]/(1 - n8) + 
   j[p4, 0, n2, n3, 1 + n4, n5, 0, -1, -1 + n8, 0, 1, 2, 0, 1, 1]/(-1 + n8) + 
   j[p4, 0, n2, n3, 1 + n4, n5, 0, -1, n8, 0, 1, 1, 0, 1, 1] + 
   ((1 - d - 2*n2 + n3 + 2*n5 + n8)*j[p4, 0, n2, n3, 1 + n4, n5, 1, -2, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) + j[p4, 0, n2, n3, 1 + n4, n5, 1, 
    -2, n8, 0, 1, 1, 0, 0, 1] + 
   ((2 - 2*n2 - n4)*j[p4, 0, n2, n3, 1 + n4, n5, 1, -1, -2 + n8, 0, 1, 1, 0, 
      1, 1])/(-1 + n8) + j[p4, 0, n2, n3, 1 + n4, n5, 1, -1, -2 + n8, 0, 1, 
     2, -1, 1, 1]/(1 - n8) + j[p4, 0, n2, n3, 1 + n4, n5, 1, -1, -2 + n8, 0, 
     1, 2, 0, 1, 1]/(-1 + n8) + ((2*d - n4 - n5 - 2*n8)*
     j[p4, 0, n2, n3, 1 + n4, n5, 1, -1, -1 + n8, -1, 1, 1, 0, 1, 1])/
    (-1 + n8) + j[p4, 0, n2, n3, 1 + n4, n5, 1, -1, -1 + n8, 0, 0, 2, -1, 1, 
     1]/(1 - n8) + j[p4, 0, n2, n3, 1 + n4, n5, 1, -1, -1 + n8, 0, 0, 2, 0, 
     1, 1]/(-1 + n8) + ((-1 + d + n2 + n3 - 2*n5 - n8)*
     j[p4, 0, n2, n3, 1 + n4, n5, 1, -1, -1 + n8, 0, 1, 1, -1, 1, 1])/
    (-1 + n8) + j[p4, 0, n2, n3, 1 + n4, n5, 1, -1, -1 + n8, 0, 1, 1, -1, 2, 
     0]/(-1 + n8) + ((2 - 4*n2 + n5)*j[p4, 0, n2, n3, 1 + n4, n5, 1, -1, 
      -1 + n8, 0, 1, 1, 0, 0, 1])/(-1 + n8) - 
   (n5*j[p4, 0, n2, n3, 1 + n4, n5, 1, -1, -1 + n8, 0, 1, 1, 0, 1, 0])/
    (-1 + n8) + ((-2 - n3 - n4 + n8)*j[p4, 0, n2, n3, 1 + n4, n5, 1, -1, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) + 
   j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, -2 + n8, -1, 1, 1, 0, 1, 1]/(-1 + n8) + 
   j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, -2 + n8, 0, 1, 1, -1, 1, 1]/(-1 + n8) + 
   j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, -2 + n8, 0, 1, 1, 0, 1, 1]/(1 - n8) + 
   j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, -1 + n8, -1, 1, 1, 0, 0, 1]/(-1 + n8) + 
   (n5*j[p4, 0, n2, n3, 1 + n4, 1 + n5, 1, -2, -1 + n8, 0, 1, 1, 0, 0, 1])/
    (-1 + n8) - (n5*j[p4, 0, n2, n3, 1 + n4, 1 + n5, 1, -2, -1 + n8, 0, 1, 1, 
      0, 1, 0])/(-1 + n8) - (n5*j[p4, 0, n2, n3, 1 + n4, 1 + n5, 1, -1, 
      -1 + n8, -1, 1, 1, 0, 0, 1])/(-1 + n8) + 
   (n5*j[p4, 0, n2, n3, 1 + n4, 1 + n5, 1, -1, -1 + n8, -1, 1, 1, 0, 1, 0])/
    (-1 + n8) + ((1 + n4)*j[p4, 0, n2, n3, 2 + n4, -1 + n5, 1, -2, -1 + n8, 
      0, 1, 1, 0, 1, 1])/(-1 + n8) + 
   ((-1 - n4)*j[p4, 0, n2, n3, 2 + n4, -1 + n5, 1, -1, -1 + n8, 0, 1, 1, -1, 
      1, 1])/(-1 + n8) + ((1 + n4)*j[p4, 0, n2, n3, 2 + n4, n5, 0, -1, 
      -1 + n8, -1, 1, 1, 0, 1, 1])/(-1 + n8) + 
   ((1 + n4)*j[p4, 0, n2, n3, 2 + n4, n5, 0, -1, -1 + n8, 0, 1, 1, -1, 1, 1])/
    (-1 + n8) + ((-1 - n4)*j[p4, 0, n2, n3, 2 + n4, n5, 0, -1, -1 + n8, 0, 1, 
      1, 0, 1, 1])/(-1 + n8) + 
   ((-1 - n4)*j[p4, 0, n2, n3, 2 + n4, n5, 1, -3, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (-1 + n8) + ((1 + n4)*j[p4, 0, n2, n3, 2 + n4, n5, 1, -2, -1 + n8, 0, 1, 
      1, -1, 1, 1])/(-1 + n8) + 
   ((-1 - n4)*j[p4, 0, n2, n3, 2 + n4, n5, 1, -2, -1 + n8, 0, 1, 1, 0, 1, 0])/
    (-1 + n8) + ((-1 - n4)*j[p4, 0, n2, n3, 2 + n4, n5, 1, -1, -2 + n8, -1, 
      1, 1, 0, 1, 1])/(-1 + n8) + 
   ((-1 - n4)*j[p4, 0, n2, n3, 2 + n4, n5, 1, -1, -2 + n8, 0, 1, 1, -1, 1, 
      1])/(-1 + n8) + ((1 + n4)*j[p4, 0, n2, n3, 2 + n4, n5, 1, -1, -2 + n8, 
      0, 1, 1, 0, 1, 1])/(-1 + n8) - 
   (n3*j[p4, 0, n2, 1 + n3, n4, n5, 1, -2, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (-1 + n8) - (2*n3*j[p4, 0, n2, 1 + n3, n4, n5, 1, -1, -2 + n8, 0, 1, 1, 
      0, 1, 1])/(-1 + n8) + (n3*j[p4, 0, n2, 1 + n3, n4, n5, 1, -1, -1 + n8, 
      0, 1, 1, -1, 1, 1])/(-1 + n8) - 
   (n3*j[p4, 0, n2, 1 + n3, n4, n5, 1, -1, -1 + n8, 0, 1, 1, 0, 0, 1])/
    (-1 + n8) - (n3*j[p4, 0, n2, 1 + n3, n4, n5, 1, -1, -1 + n8, 0, 1, 1, 0, 
      1, 1])/(-1 + n8) - (n3*j[p4, 0, n2, 1 + n3, 1 + n4, n5, 1, -3, -1 + n8, 
      0, 1, 1, 0, 1, 1])/(-1 + n8) - 
   (n3*j[p4, 0, n2, 1 + n3, 1 + n4, n5, 1, -2, -1 + n8, -1, 1, 1, 0, 1, 1])/
    (-1 + n8) + (n3*j[p4, 0, n2, 1 + n3, 1 + n4, n5, 1, -2, -1 + n8, 0, 1, 1, 
      0, 0, 1])/(-1 + n8) + (n3*j[p4, 0, n2, 1 + n3, 1 + n4, n5, 1, -2, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) - 
   (2*n3*j[p4, 0, n2, 1 + n3, 1 + n4, n5, 1, -1, -2 + n8, -1, 1, 1, 0, 1, 1])/
    (-1 + n8) - (2*n3*j[p4, 0, n2, 1 + n3, 1 + n4, n5, 1, -1, -2 + n8, 0, 1, 
      1, -1, 1, 1])/(-1 + n8) + 
   (2*n3*j[p4, 0, n2, 1 + n3, 1 + n4, n5, 1, -1, -2 + n8, 0, 1, 1, 0, 1, 1])/
    (-1 + n8) + (n3*j[p4, 0, n2, 1 + n3, 1 + n4, n5, 1, -1, -1 + n8, -1, 1, 
      1, -1, 1, 1])/(-1 + n8) - 
   (n3*j[p4, 0, n2, 1 + n3, 1 + n4, n5, 1, -1, -1 + n8, -1, 1, 1, 0, 0, 1])/
    (-1 + n8) + (n3*j[p4, 0, n2, 1 + n3, 1 + n4, n5, 1, -1, -1 + n8, 0, 1, 1, 
      -2, 1, 1])/(-1 + n8) - (2*n3*j[p4, 0, n2, 1 + n3, 1 + n4, n5, 1, -1, 
      -1 + n8, 0, 1, 1, -1, 0, 1])/(-1 + n8) - 
   (n3*j[p4, 0, n2, 1 + n3, 1 + n4, n5, 1, -1, -1 + n8, 0, 1, 1, -1, 1, 1])/
    (-1 + n8) + (n3*j[p4, 0, n2, 1 + n3, 1 + n4, n5, 1, -1, -1 + n8, 0, 1, 1, 
      0, 0, 1])/(-1 + n8) + (n3*j[p4, 0, n2, 1 + n3, 1 + n4, n5, 1, -1, 
      -1 + n8, 0, 1, 1, 0, 1, 0])/(-1 + n8) + 
   (n2*j[p4, 0, 1 + n2, -1 + n3, n4, n5, 1, -1, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (-1 + n8) - (n2*j[p4, 0, 1 + n2, -1 + n3, 1 + n4, -1 + n5, 1, -1, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) - 
   (n2*j[p4, 0, 1 + n2, -1 + n3, 1 + n4, n5, 1, -2, -1 + n8, 0, 1, 1, 0, 1, 
      1])/(-1 + n8) + (n2*j[p4, 0, 1 + n2, -1 + n3, 1 + n4, n5, 1, -1, 
      -1 + n8, -1, 1, 1, 0, 1, 1])/(-1 + n8) - 
   (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, -2, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (-1 + n8) - (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, -1, -2 + n8, 0, 1, 1, 0, 
      1, 1])/(-1 + n8) + (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, -1, -1 + n8, 0, 
      1, 1, -1, 1, 1])/(-1 + n8) - 
   (2*n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, -1, -1 + n8, 0, 1, 1, 0, 0, 1])/
    (-1 + n8) + (2*n2*j[p4, 0, 1 + n2, n3, 1 + n4, -1 + n5, 1, -2, -1 + n8, 
      0, 1, 1, 0, 1, 1])/(-1 + n8) - 
   (2*n2*j[p4, 0, 1 + n2, n3, 1 + n4, -1 + n5, 1, -1, -1 + n8, 0, 1, 1, -1, 
      1, 1])/(-1 + n8) + (2*n2*j[p4, 0, 1 + n2, n3, 1 + n4, -1 + n5, 1, -1, 
      -1 + n8, 0, 1, 1, 0, 0, 1])/(-1 + n8) + 
   (n2*j[p4, 0, 1 + n2, n3, 1 + n4, n5, 0, -1, -1 + n8, 0, 1, 1, -1, 1, 1])/
    (-1 + n8) + (n2*j[p4, 0, 1 + n2, n3, 1 + n4, n5, 1, -3, -1 + n8, 0, 1, 1, 
      0, 1, 1])/(-1 + n8) + (n2*j[p4, 0, 1 + n2, n3, 1 + n4, n5, 1, -2, 
      -2 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) - 
   (n2*j[p4, 0, 1 + n2, n3, 1 + n4, n5, 1, -2, -1 + n8, -1, 1, 1, 0, 1, 1])/
    (-1 + n8) - (n2*j[p4, 0, 1 + n2, n3, 1 + n4, n5, 1, -2, -1 + n8, 0, 1, 1, 
      -1, 1, 1])/(-1 + n8) + (2*n2*j[p4, 0, 1 + n2, n3, 1 + n4, n5, 1, -2, 
      -1 + n8, 0, 1, 1, 0, 0, 1])/(-1 + n8) - 
   (n2*j[p4, 0, 1 + n2, n3, 1 + n4, n5, 1, -1, -2 + n8, -1, 1, 1, 0, 1, 1])/
    (-1 + n8) + (n2*j[p4, 0, 1 + n2, n3, 1 + n4, n5, 1, -1, -1 + n8, -1, 1, 
      1, -1, 1, 1])/(-1 + n8) - 
   (2*n2*j[p4, 0, 1 + n2, n3, 1 + n4, n5, 1, -1, -1 + n8, -1, 1, 1, 0, 0, 1])/
    (-1 + n8), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n6 == 1 && n7 == 0 && n9 == 0 &&  !(n4 == 0 || n8 == 1) -> 
  (n3*j[p4, 0, -2 + n2, 1 + n3, 1 + n4, n5, 1, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (-1 + n8) + ((-1 - n4)*j[p4, 0, -1 + n2, -1 + n3, 2 + n4, n5, 1, 0, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) + 
   ((-2 + 3*d - n3 - n4 - 3*n5 - 3*n8)*j[p4, 0, -1 + n2, n3, 1 + n4, n5, 1, 
      0, -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) - 
   j[p4, 0, -1 + n2, n3, 1 + n4, n5, 1, 0, n8, 0, 1, 1, 0, 0, 1] - 
   (2*n5*j[p4, 0, -1 + n2, n3, 1 + n4, 1 + n5, 1, 0, -1 + n8, 0, 1, 1, 0, 0, 
      1])/(-1 + n8) + (2*n5*j[p4, 0, -1 + n2, n3, 1 + n4, 1 + n5, 1, 0, 
      -1 + n8, 0, 1, 1, 0, 1, 0])/(-1 + n8) + 
   ((-1 - n4)*j[p4, 0, -1 + n2, n3, 2 + n4, -1 + n5, 1, 0, -1 + n8, 0, 1, 1, 
      0, 1, 1])/(-1 + n8) + ((1 + n4)*j[p4, 0, -1 + n2, n3, 2 + n4, n5, 0, 0, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) + 
   ((1 + n4)*j[p4, 0, -1 + n2, n3, 2 + n4, n5, 1, -1, -1 + n8, 0, 1, 1, 0, 1, 
      1])/(-1 + n8) + ((-1 - n4)*j[p4, 0, -1 + n2, n3, 2 + n4, n5, 1, 0, 
      -2 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) + 
   ((1 + n4)*j[p4, 0, -1 + n2, n3, 2 + n4, n5, 1, 0, -1 + n8, 0, 1, 1, 0, 1, 
      0])/(-1 + n8) + (n3*j[p4, 0, -1 + n2, 1 + n3, n4, n5, 1, 0, -1 + n8, 0, 
      1, 1, 0, 1, 1])/(-1 + n8) - 
   (2*n3*j[p4, 0, -1 + n2, 1 + n3, 1 + n4, n5, 1, 0, -2 + n8, 0, 1, 1, 0, 1, 
      1])/(-1 + n8) + (n3*j[p4, 0, -1 + n2, 1 + n3, 1 + n4, n5, 1, 0, 
      -1 + n8, -1, 1, 1, 0, 1, 1])/(-1 + n8) + 
   (2*n3*j[p4, 0, -1 + n2, 1 + n3, 1 + n4, n5, 1, 0, -1 + n8, 0, 1, 1, -1, 1, 
      1])/(-1 + n8) - (2*n3*j[p4, 0, -1 + n2, 1 + n3, 1 + n4, n5, 1, 0, 
      -1 + n8, 0, 1, 1, 0, 0, 1])/(-1 + n8) - 
   (n3*j[p4, 0, -1 + n2, 1 + n3, 1 + n4, n5, 1, 0, -1 + n8, 0, 1, 1, 0, 1, 
      1])/(-1 + n8) + ((-1 + 2*n2)*j[p4, 0, n2, -1 + n3, 1 + n4, n5, 1, 0, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) + 
   ((1 + n4)*j[p4, 0, n2, -1 + n3, 2 + n4, n5, 1, -1, -1 + n8, 0, 1, 1, 0, 1, 
      1])/(-1 + n8) + ((-1 + 2*d - n4 - 2*n5 - 2*n8)*
     j[p4, 0, n2, n3, n4, n5, 1, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) - 
   (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, 0, -1 + n8, 0, 1, 1, 0, 0, 1])/
    (-1 + n8) + (n5*j[p4, 0, n2, n3, n4, 1 + n5, 1, 0, -1 + n8, 0, 1, 1, 0, 
      1, 0])/(-1 + n8) + j[p4, 0, n2, n3, 1 + n4, -1 + n5, 1, 0, -2 + n8, 0, 
     1, 1, 0, 2, 1]/(1 - n8) + 
   ((2 - d - n2 + n5)*j[p4, 0, n2, n3, 1 + n4, -1 + n5, 1, 0, -1 + n8, 0, 1, 
      1, 0, 1, 1])/(-1 + n8) + 
   ((n4 + n5)*j[p4, 0, n2, n3, 1 + n4, n5, 0, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (-1 + n8) + j[p4, 0, n2, n3, 1 + n4, n5, 0, 0, -1 + n8, 0, 1, 2, -1, 1, 
     1]/(1 - n8) + j[p4, 0, n2, n3, 1 + n4, n5, 0, 0, -1 + n8, 0, 1, 2, 0, 1, 
     1]/(-1 + n8) + j[p4, 0, n2, n3, 1 + n4, n5, 0, 0, n8, 0, 1, 1, 0, 1, 
    1] + ((1 - d - 2*n2 + n3 + 2*n5 + n8)*j[p4, 0, n2, n3, 1 + n4, n5, 1, -1, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) + j[p4, 0, n2, n3, 1 + n4, n5, 1, 
    -1, n8, 0, 1, 1, 0, 0, 1] + 
   ((2 - 2*n2 - n4)*j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, -2 + n8, 0, 1, 1, 0, 
      1, 1])/(-1 + n8) + j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, -2 + n8, 0, 1, 2, 
     -1, 1, 1]/(1 - n8) + j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, -2 + n8, 0, 1, 
     2, 0, 1, 1]/(-1 + n8) + ((-2 + 2*d - n4 - n5 - 2*n8)*
     j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, -1 + n8, -1, 1, 1, 0, 1, 1])/
    (-1 + n8) + j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, -1 + n8, 0, 0, 2, -1, 1, 
     1]/(1 - n8) + j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, -1 + n8, 0, 0, 2, 0, 1, 
     1]/(-1 + n8) + ((-1 + d + n2 + n3 - 2*n5 - n8)*
     j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, -1 + n8, 0, 1, 1, -1, 1, 1])/
    (-1 + n8) + j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, -1 + n8, 0, 1, 1, -1, 2, 
     0]/(-1 + n8) + ((2 - 4*n2 + n5)*j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, 
      -1 + n8, 0, 1, 1, 0, 0, 1])/(-1 + n8) - 
   (n5*j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, -1 + n8, 0, 1, 1, 0, 1, 0])/
    (-1 + n8) + ((-2 - n3 - n4 + n8)*j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) + 
   (n5*j[p4, 0, n2, n3, 1 + n4, 1 + n5, 1, -1, -1 + n8, 0, 1, 1, 0, 0, 1])/
    (-1 + n8) - (n5*j[p4, 0, n2, n3, 1 + n4, 1 + n5, 1, -1, -1 + n8, 0, 1, 1, 
      0, 1, 0])/(-1 + n8) - (n5*j[p4, 0, n2, n3, 1 + n4, 1 + n5, 1, 0, 
      -1 + n8, -1, 1, 1, 0, 0, 1])/(-1 + n8) + 
   (n5*j[p4, 0, n2, n3, 1 + n4, 1 + n5, 1, 0, -1 + n8, -1, 1, 1, 0, 1, 0])/
    (-1 + n8) + ((1 + n4)*j[p4, 0, n2, n3, 2 + n4, -1 + n5, 1, -1, -1 + n8, 
      0, 1, 1, 0, 1, 1])/(-1 + n8) + 
   ((-1 - n4)*j[p4, 0, n2, n3, 2 + n4, -1 + n5, 1, 0, -1 + n8, 0, 1, 1, -1, 
      1, 1])/(-1 + n8) + ((1 + n4)*j[p4, 0, n2, n3, 2 + n4, n5, 0, 0, 
      -1 + n8, -1, 1, 1, 0, 1, 1])/(-1 + n8) + 
   ((1 + n4)*j[p4, 0, n2, n3, 2 + n4, n5, 0, 0, -1 + n8, 0, 1, 1, -1, 1, 1])/
    (-1 + n8) + ((-1 - n4)*j[p4, 0, n2, n3, 2 + n4, n5, 0, 0, -1 + n8, 0, 1, 
      1, 0, 1, 1])/(-1 + n8) + 
   ((-1 - n4)*j[p4, 0, n2, n3, 2 + n4, n5, 1, -2, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (-1 + n8) + ((1 + n4)*j[p4, 0, n2, n3, 2 + n4, n5, 1, -1, -1 + n8, 0, 1, 
      1, -1, 1, 1])/(-1 + n8) + 
   ((-1 - n4)*j[p4, 0, n2, n3, 2 + n4, n5, 1, -1, -1 + n8, 0, 1, 1, 0, 1, 0])/
    (-1 + n8) + ((-1 - n4)*j[p4, 0, n2, n3, 2 + n4, n5, 1, 0, -2 + n8, -1, 1, 
      1, 0, 1, 1])/(-1 + n8) + 
   ((-1 - n4)*j[p4, 0, n2, n3, 2 + n4, n5, 1, 0, -2 + n8, 0, 1, 1, -1, 1, 1])/
    (-1 + n8) + ((1 + n4)*j[p4, 0, n2, n3, 2 + n4, n5, 1, 0, -2 + n8, 0, 1, 
      1, 0, 1, 1])/(-1 + n8) - 
   (n3*j[p4, 0, n2, 1 + n3, n4, n5, 1, -1, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (-1 + n8) - (2*n3*j[p4, 0, n2, 1 + n3, n4, n5, 1, 0, -2 + n8, 0, 1, 1, 0, 
      1, 1])/(-1 + n8) + (n3*j[p4, 0, n2, 1 + n3, n4, n5, 1, 0, -1 + n8, 0, 
      1, 1, -1, 1, 1])/(-1 + n8) - 
   (n3*j[p4, 0, n2, 1 + n3, n4, n5, 1, 0, -1 + n8, 0, 1, 1, 0, 0, 1])/
    (-1 + n8) - (n3*j[p4, 0, n2, 1 + n3, n4, n5, 1, 0, -1 + n8, 0, 1, 1, 0, 
      1, 1])/(-1 + n8) - (n3*j[p4, 0, n2, 1 + n3, 1 + n4, n5, 1, -2, -1 + n8, 
      0, 1, 1, 0, 1, 1])/(-1 + n8) - 
   (n3*j[p4, 0, n2, 1 + n3, 1 + n4, n5, 1, -1, -1 + n8, -1, 1, 1, 0, 1, 1])/
    (-1 + n8) + (n3*j[p4, 0, n2, 1 + n3, 1 + n4, n5, 1, -1, -1 + n8, 0, 1, 1, 
      0, 0, 1])/(-1 + n8) + (n3*j[p4, 0, n2, 1 + n3, 1 + n4, n5, 1, -1, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) - 
   (2*n3*j[p4, 0, n2, 1 + n3, 1 + n4, n5, 1, 0, -2 + n8, -1, 1, 1, 0, 1, 1])/
    (-1 + n8) - (2*n3*j[p4, 0, n2, 1 + n3, 1 + n4, n5, 1, 0, -2 + n8, 0, 1, 
      1, -1, 1, 1])/(-1 + n8) + 
   (2*n3*j[p4, 0, n2, 1 + n3, 1 + n4, n5, 1, 0, -2 + n8, 0, 1, 1, 0, 1, 1])/
    (-1 + n8) + (n3*j[p4, 0, n2, 1 + n3, 1 + n4, n5, 1, 0, -1 + n8, -1, 1, 1, 
      -1, 1, 1])/(-1 + n8) - (n3*j[p4, 0, n2, 1 + n3, 1 + n4, n5, 1, 0, 
      -1 + n8, -1, 1, 1, 0, 0, 1])/(-1 + n8) + 
   (n3*j[p4, 0, n2, 1 + n3, 1 + n4, n5, 1, 0, -1 + n8, 0, 1, 1, -2, 1, 1])/
    (-1 + n8) - (2*n3*j[p4, 0, n2, 1 + n3, 1 + n4, n5, 1, 0, -1 + n8, 0, 1, 
      1, -1, 0, 1])/(-1 + n8) - 
   (n3*j[p4, 0, n2, 1 + n3, 1 + n4, n5, 1, 0, -1 + n8, 0, 1, 1, -1, 1, 1])/
    (-1 + n8) + (n3*j[p4, 0, n2, 1 + n3, 1 + n4, n5, 1, 0, -1 + n8, 0, 1, 1, 
      0, 0, 1])/(-1 + n8) + (n3*j[p4, 0, n2, 1 + n3, 1 + n4, n5, 1, 0, 
      -1 + n8, 0, 1, 1, 0, 1, 0])/(-1 + n8) + 
   (n2*j[p4, 0, 1 + n2, -1 + n3, n4, n5, 1, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (-1 + n8) - (n2*j[p4, 0, 1 + n2, -1 + n3, 1 + n4, -1 + n5, 1, 0, -1 + n8, 
      0, 1, 1, 0, 1, 1])/(-1 + n8) - 
   (n2*j[p4, 0, 1 + n2, -1 + n3, 1 + n4, n5, 1, -1, -1 + n8, 0, 1, 1, 0, 1, 
      1])/(-1 + n8) + (n2*j[p4, 0, 1 + n2, -1 + n3, 1 + n4, n5, 1, 0, 
      -1 + n8, -1, 1, 1, 0, 1, 1])/(-1 + n8) - 
   (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, -1, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (-1 + n8) - (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, 0, -2 + n8, 0, 1, 1, 0, 
      1, 1])/(-1 + n8) + (n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, 0, -1 + n8, 0, 
      1, 1, -1, 1, 1])/(-1 + n8) - 
   (2*n2*j[p4, 0, 1 + n2, n3, n4, n5, 1, 0, -1 + n8, 0, 1, 1, 0, 0, 1])/
    (-1 + n8) + (2*n2*j[p4, 0, 1 + n2, n3, 1 + n4, -1 + n5, 1, -1, -1 + n8, 
      0, 1, 1, 0, 1, 1])/(-1 + n8) - 
   (2*n2*j[p4, 0, 1 + n2, n3, 1 + n4, -1 + n5, 1, 0, -1 + n8, 0, 1, 1, -1, 1, 
      1])/(-1 + n8) + (2*n2*j[p4, 0, 1 + n2, n3, 1 + n4, -1 + n5, 1, 0, 
      -1 + n8, 0, 1, 1, 0, 0, 1])/(-1 + n8) + 
   (n2*j[p4, 0, 1 + n2, n3, 1 + n4, n5, 0, 0, -1 + n8, 0, 1, 1, -1, 1, 1])/
    (-1 + n8) + (n2*j[p4, 0, 1 + n2, n3, 1 + n4, n5, 1, -2, -1 + n8, 0, 1, 1, 
      0, 1, 1])/(-1 + n8) + (n2*j[p4, 0, 1 + n2, n3, 1 + n4, n5, 1, -1, 
      -2 + n8, 0, 1, 1, 0, 1, 1])/(-1 + n8) - 
   (n2*j[p4, 0, 1 + n2, n3, 1 + n4, n5, 1, -1, -1 + n8, -1, 1, 1, 0, 1, 1])/
    (-1 + n8) - (n2*j[p4, 0, 1 + n2, n3, 1 + n4, n5, 1, -1, -1 + n8, 0, 1, 1, 
      -1, 1, 1])/(-1 + n8) + (2*n2*j[p4, 0, 1 + n2, n3, 1 + n4, n5, 1, -1, 
      -1 + n8, 0, 1, 1, 0, 0, 1])/(-1 + n8) - 
   (n2*j[p4, 0, 1 + n2, n3, 1 + n4, n5, 1, 0, -2 + n8, -1, 1, 1, 0, 1, 1])/
    (-1 + n8) + (n2*j[p4, 0, 1 + n2, n3, 1 + n4, n5, 1, 0, -1 + n8, -1, 1, 1, 
      -1, 1, 1])/(-1 + n8) - (2*n2*j[p4, 0, 1 + n2, n3, 1 + n4, n5, 1, 0, 
      -1 + n8, -1, 1, 1, 0, 0, 1])/(-1 + n8), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n12 == 0 && n14 == 1 && n2 == 0 && n5 == 0 && n6 == 1 && 
    n7 == 0 && n8 == 1 && n9 == 0 && n10 != 1 -> 
  (n4*j[p4, -1, 0, n3, 1 + n4, 0, 1, 0, 1, 0, n10, n11, 0, n13, 1])/
    (d - 2*n10) + (n3*j[p4, -1, 0, 1 + n3, n4, 0, 1, 0, 1, 0, n10, n11, 0, 
      n13, 1])/(d - 2*n10) - (n4*j[p4, 0, -1, n3, 1 + n4, 0, 1, 0, 1, 0, n10, 
      n11, 0, n13, 1])/(d - 2*n10) - 
   (n4*j[p4, 0, -1, n3, 1 + n4, 0, 2, 0, 1, 0, -1 + n10, n11, 0, n13, 1])/
    ((d - 2*n10)*(-1 + n10)) - 
   (n3*j[p4, 0, -1, 1 + n3, n4, 0, 1, 0, 1, 0, n10, n11, 0, n13, 1])/
    (d - 2*n10) - (3*n3*j[p4, 0, -1, 1 + n3, n4, 0, 2, 0, 1, 0, -1 + n10, 
      n11, 0, n13, 1])/((d - 2*n10)*(-1 + n10)) - 
   (n3*n4*j[p4, 0, -1, 1 + n3, 1 + n4, 0, 1, 0, 1, 0, -1 + n10, n11, 0, n13, 
      1])/((d - 2*n10)*(-1 + n10)) + 
   ((-n3 - n3^2)*j[p4, 0, -1, 2 + n3, n4, 0, 1, 0, 1, 0, -1 + n10, n11, 0, 
      n13, 1])/((d - 2*n10)*(-1 + n10)) + 
   ((-4 + d - 2*n3 - 2*n4)*j[p4, 0, 0, n3, n4, 0, 2, 0, 1, 0, -1 + n10, n11, 
      0, n13, 1])/((d - 2*n10)*(-1 + n10)) + 
   (n4*j[p4, 0, 0, n3, 1 + n4, -1, 2, 0, 1, 0, -1 + n10, n11, 0, n13, 1])/
    ((d - 2*n10)*(-1 + n10)) + ((-4*n4 + 2*d*n4 - n10*n4 - 3*n3*n4 - 2*n4^2)*
     j[p4, 0, 0, n3, 1 + n4, 0, 1, 0, 1, 0, -1 + n10, n11, 0, n13, 1])/
    ((d - 2*n10)*(-1 + n10)) + 
   (2*n4*j[p4, 0, 0, n3, 1 + n4, 0, 2, 0, 0, 0, -1 + n10, n11, 0, n13, 1])/
    ((d - 2*n10)*(-1 + n10)) + 
   ((n4 + n4^2)*j[p4, 0, 0, n3, 2 + n4, -1, 1, 0, 1, 0, -1 + n10, n11, 0, 
      n13, 1])/((d - 2*n10)*(-1 + n10)) + 
   ((-n4 - n4^2)*j[p4, 0, 0, n3, 2 + n4, 0, 0, 0, 1, 0, -1 + n10, n11, 0, 
      n13, 1])/((d - 2*n10)*(-1 + n10)) + 
   ((-n4 - n4^2)*j[p4, 0, 0, n3, 2 + n4, 0, 1, -1, 1, 0, -1 + n10, n11, 0, 
      n13, 1])/((d - 2*n10)*(-1 + n10)) + 
   ((n4 + n4^2)*j[p4, 0, 0, n3, 2 + n4, 0, 1, 0, 0, 0, -1 + n10, n11, 0, n13, 
      1])/((d - 2*n10)*(-1 + n10)) - 
   (2*n3*j[p4, 0, 0, 1 + n3, -1 + n4, 0, 2, 0, 1, 0, -1 + n10, n11, 0, n13, 
      1])/((d - 2*n10)*(-1 + n10)) + 
   (n3*j[p4, 0, 0, 1 + n3, n4, -1, 2, 0, 1, 0, -1 + n10, n11, 0, n13, 1])/
    ((d - 2*n10)*(-1 + n10)) + ((-3*n3 + 2*d*n3 - n10*n3 - 3*n3^2 - 2*n3*n4)*
     j[p4, 0, 0, 1 + n3, n4, 0, 1, 0, 1, 0, -1 + n10, n11, 0, n13, 1])/
    ((d - 2*n10)*(-1 + n10)) + 
   (2*n3*j[p4, 0, 0, 1 + n3, n4, 0, 2, -1, 1, 0, -1 + n10, n11, 0, n13, 1])/
    ((d - 2*n10)*(-1 + n10)) + 
   (4*n3*j[p4, 0, 0, 1 + n3, n4, 0, 2, 0, 0, 0, -1 + n10, n11, 0, n13, 1])/
    ((d - 2*n10)*(-1 + n10)) - 
   (2*n3*j[p4, 0, 0, 1 + n3, n4, 0, 2, 0, 1, 0, -1 + n10, n11, -1, n13, 1])/
    ((d - 2*n10)*(-1 + n10)) + 
   (2*n3*j[p4, 0, 0, 1 + n3, n4, 0, 2, 0, 1, 0, -1 + n10, n11, 0, -1 + n13, 
      1])/((d - 2*n10)*(-1 + n10)) + 
   (2*n3*j[p4, 0, 0, 1 + n3, n4, 0, 2, 0, 1, 0, -1 + n10, n11, 0, n13, 0])/
    ((d - 2*n10)*(-1 + n10)) + 
   (n3*n4*j[p4, 0, 0, 1 + n3, 1 + n4, -1, 1, 0, 1, 0, -1 + n10, n11, 0, n13, 
      1])/((d - 2*n10)*(-1 + n10)) - 
   (n3*n4*j[p4, 0, 0, 1 + n3, 1 + n4, 0, 0, 0, 1, 0, -1 + n10, n11, 0, n13, 
      1])/((d - 2*n10)*(-1 + n10)) - 
   (n3*n4*j[p4, 0, 0, 1 + n3, 1 + n4, 0, 1, -1, 1, 0, -1 + n10, n11, 0, n13, 
      1])/((d - 2*n10)*(-1 + n10)) + 
   (3*n3*n4*j[p4, 0, 0, 1 + n3, 1 + n4, 0, 1, 0, 0, 0, -1 + n10, n11, 0, n13, 
      1])/((d - 2*n10)*(-1 + n10)) - 
   (n3*n4*j[p4, 0, 0, 1 + n3, 1 + n4, 0, 1, 0, 1, 0, -1 + n10, n11, -1, n13, 
      1])/((d - 2*n10)*(-1 + n10)) + 
   (2*n3*n4*j[p4, 0, 0, 1 + n3, 1 + n4, 0, 1, 0, 1, 0, -1 + n10, n11, 0, 
      -1 + n13, 1])/((d - 2*n10)*(-1 + n10)) + 
   (2*n3*n4*j[p4, 0, 0, 1 + n3, 1 + n4, 0, 1, 0, 1, 0, -1 + n10, n11, 0, n13, 
      0])/((d - 2*n10)*(-1 + n10)) + 
   ((2*n3 + 2*n3^2)*j[p4, 0, 0, 2 + n3, n4, 0, 1, 0, 0, 0, -1 + n10, n11, 0, 
      n13, 1])/((d - 2*n10)*(-1 + n10)) + 
   ((-n3 - n3^2)*j[p4, 0, 0, 2 + n3, n4, 0, 1, 0, 1, 0, -1 + n10, n11, -1, 
      n13, 1])/((d - 2*n10)*(-1 + n10)) + 
   ((2*n3 + 2*n3^2)*j[p4, 0, 0, 2 + n3, n4, 0, 1, 0, 1, 0, -1 + n10, n11, 0, 
      -1 + n13, 1])/((d - 2*n10)*(-1 + n10)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && n6 == 1 && 
    n7 == 0 && n8 == 1 && n9 == 0 && n10 != 1 -> 
  (n4*j[p4, -1, 0, n3, 1 + n4, n5, 1, 0, 1, 0, n10, n11, 0, 1, 1])/
    (d - 2*n10) + (n3*j[p4, -1, 0, 1 + n3, n4, n5, 1, 0, 1, 0, n10, n11, 0, 
      1, 1])/(d - 2*n10) - (n4*j[p4, 0, -1, n3, 1 + n4, n5, 1, 0, 1, 0, n10, 
      n11, 0, 1, 1])/(d - 2*n10) - 
   (n4*j[p4, 0, -1, n3, 1 + n4, n5, 2, 0, 1, 0, -1 + n10, n11, 0, 1, 1])/
    ((d - 2*n10)*(-1 + n10)) - 
   (n3*j[p4, 0, -1, 1 + n3, n4, n5, 1, 0, 1, 0, n10, n11, 0, 1, 1])/
    (d - 2*n10) - (3*n3*j[p4, 0, -1, 1 + n3, n4, n5, 2, 0, 1, 0, -1 + n10, 
      n11, 0, 1, 1])/((d - 2*n10)*(-1 + n10)) - 
   (n3*n4*j[p4, 0, -1, 1 + n3, 1 + n4, n5, 1, 0, 1, 0, -1 + n10, n11, 0, 1, 
      1])/((d - 2*n10)*(-1 + n10)) + 
   ((-n3 - n3^2)*j[p4, 0, -1, 2 + n3, n4, n5, 1, 0, 1, 0, -1 + n10, n11, 0, 
      1, 1])/((d - 2*n10)*(-1 + n10)) + 
   ((-4 + d - 2*n3 - 2*n4)*j[p4, 0, 0, n3, n4, n5, 2, 0, 1, 0, -1 + n10, n11, 
      0, 1, 1])/((d - 2*n10)*(-1 + n10)) + 
   (n4*j[p4, 0, 0, n3, 1 + n4, -1 + n5, 2, 0, 1, 0, -1 + n10, n11, 0, 1, 1])/
    ((d - 2*n10)*(-1 + n10)) + ((-4*n4 + 2*d*n4 - n10*n4 - 3*n3*n4 - 2*n4^2)*
     j[p4, 0, 0, n3, 1 + n4, n5, 1, 0, 1, 0, -1 + n10, n11, 0, 1, 1])/
    ((d - 2*n10)*(-1 + n10)) + 
   (2*n4*j[p4, 0, 0, n3, 1 + n4, n5, 2, 0, 0, 0, -1 + n10, n11, 0, 1, 1])/
    ((d - 2*n10)*(-1 + n10)) + 
   ((n4 + n4^2)*j[p4, 0, 0, n3, 2 + n4, -1 + n5, 1, 0, 1, 0, -1 + n10, n11, 
      0, 1, 1])/((d - 2*n10)*(-1 + n10)) + 
   ((-n4 - n4^2)*j[p4, 0, 0, n3, 2 + n4, n5, 0, 0, 1, 0, -1 + n10, n11, 0, 1, 
      1])/((d - 2*n10)*(-1 + n10)) + 
   ((-n4 - n4^2)*j[p4, 0, 0, n3, 2 + n4, n5, 1, -1, 1, 0, -1 + n10, n11, 0, 
      1, 1])/((d - 2*n10)*(-1 + n10)) + 
   ((n4 + n4^2)*j[p4, 0, 0, n3, 2 + n4, n5, 1, 0, 0, 0, -1 + n10, n11, 0, 1, 
      1])/((d - 2*n10)*(-1 + n10)) - 
   (2*n3*j[p4, 0, 0, 1 + n3, -1 + n4, n5, 2, 0, 1, 0, -1 + n10, n11, 0, 1, 
      1])/((d - 2*n10)*(-1 + n10)) + 
   (n3*j[p4, 0, 0, 1 + n3, n4, -1 + n5, 2, 0, 1, 0, -1 + n10, n11, 0, 1, 1])/
    ((d - 2*n10)*(-1 + n10)) + ((-3*n3 + 2*d*n3 - n10*n3 - 3*n3^2 - 2*n3*n4)*
     j[p4, 0, 0, 1 + n3, n4, n5, 1, 0, 1, 0, -1 + n10, n11, 0, 1, 1])/
    ((d - 2*n10)*(-1 + n10)) + 
   (2*n3*j[p4, 0, 0, 1 + n3, n4, n5, 2, -1, 1, 0, -1 + n10, n11, 0, 1, 1])/
    ((d - 2*n10)*(-1 + n10)) + 
   (4*n3*j[p4, 0, 0, 1 + n3, n4, n5, 2, 0, 0, 0, -1 + n10, n11, 0, 1, 1])/
    ((d - 2*n10)*(-1 + n10)) - 
   (2*n3*j[p4, 0, 0, 1 + n3, n4, n5, 2, 0, 1, 0, -1 + n10, n11, -1, 1, 1])/
    ((d - 2*n10)*(-1 + n10)) + 
   (2*n3*j[p4, 0, 0, 1 + n3, n4, n5, 2, 0, 1, 0, -1 + n10, n11, 0, 0, 1])/
    ((d - 2*n10)*(-1 + n10)) + 
   (2*n3*j[p4, 0, 0, 1 + n3, n4, n5, 2, 0, 1, 0, -1 + n10, n11, 0, 1, 0])/
    ((d - 2*n10)*(-1 + n10)) + 
   (n3*n4*j[p4, 0, 0, 1 + n3, 1 + n4, -1 + n5, 1, 0, 1, 0, -1 + n10, n11, 0, 
      1, 1])/((d - 2*n10)*(-1 + n10)) - 
   (n3*n4*j[p4, 0, 0, 1 + n3, 1 + n4, n5, 0, 0, 1, 0, -1 + n10, n11, 0, 1, 
      1])/((d - 2*n10)*(-1 + n10)) - 
   (n3*n4*j[p4, 0, 0, 1 + n3, 1 + n4, n5, 1, -1, 1, 0, -1 + n10, n11, 0, 1, 
      1])/((d - 2*n10)*(-1 + n10)) + 
   (3*n3*n4*j[p4, 0, 0, 1 + n3, 1 + n4, n5, 1, 0, 0, 0, -1 + n10, n11, 0, 1, 
      1])/((d - 2*n10)*(-1 + n10)) - 
   (n3*n4*j[p4, 0, 0, 1 + n3, 1 + n4, n5, 1, 0, 1, 0, -1 + n10, n11, -1, 1, 
      1])/((d - 2*n10)*(-1 + n10)) + 
   (2*n3*n4*j[p4, 0, 0, 1 + n3, 1 + n4, n5, 1, 0, 1, 0, -1 + n10, n11, 0, 0, 
      1])/((d - 2*n10)*(-1 + n10)) + 
   (2*n3*n4*j[p4, 0, 0, 1 + n3, 1 + n4, n5, 1, 0, 1, 0, -1 + n10, n11, 0, 1, 
      0])/((d - 2*n10)*(-1 + n10)) + 
   ((2*n3 + 2*n3^2)*j[p4, 0, 0, 2 + n3, n4, n5, 1, 0, 0, 0, -1 + n10, n11, 0, 
      1, 1])/((d - 2*n10)*(-1 + n10)) + 
   ((-n3 - n3^2)*j[p4, 0, 0, 2 + n3, n4, n5, 1, 0, 1, 0, -1 + n10, n11, -1, 
      1, 1])/((d - 2*n10)*(-1 + n10)) + 
   ((2*n3 + 2*n3^2)*j[p4, 0, 0, 2 + n3, n4, n5, 1, 0, 1, 0, -1 + n10, n11, 0, 
      0, 1])/((d - 2*n10)*(-1 + n10)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && n6 == 1 && 
    n7 == 0 && n8 == 1 && n9 == 0 && n10 != 1 -> 
  (n4*j[p4, -1 + n1, 0, n3, 1 + n4, n5, 1, 0, 1, 0, n10, 1, 0, 1, 1])/
    (d - 2*n10) + (n3*j[p4, -1 + n1, 0, 1 + n3, n4, n5, 1, 0, 1, 0, n10, 1, 
      0, 1, 1])/(d - 2*n10) - (n4*j[p4, n1, -1, n3, 1 + n4, n5, 1, 0, 1, 0, 
      n10, 1, 0, 1, 1])/(d - 2*n10) - 
   (n4*j[p4, n1, -1, n3, 1 + n4, n5, 2, 0, 1, 0, -1 + n10, 1, 0, 1, 1])/
    ((d - 2*n10)*(-1 + n10)) - 
   (n3*j[p4, n1, -1, 1 + n3, n4, n5, 1, 0, 1, 0, n10, 1, 0, 1, 1])/
    (d - 2*n10) - (3*n3*j[p4, n1, -1, 1 + n3, n4, n5, 2, 0, 1, 0, -1 + n10, 
      1, 0, 1, 1])/((d - 2*n10)*(-1 + n10)) - 
   (n3*n4*j[p4, n1, -1, 1 + n3, 1 + n4, n5, 1, 0, 1, 0, -1 + n10, 1, 0, 1, 
      1])/((d - 2*n10)*(-1 + n10)) + 
   ((-n3 - n3^2)*j[p4, n1, -1, 2 + n3, n4, n5, 1, 0, 1, 0, -1 + n10, 1, 0, 1, 
      1])/((d - 2*n10)*(-1 + n10)) + 
   ((-4 + d - 2*n3 - 2*n4)*j[p4, n1, 0, n3, n4, n5, 2, 0, 1, 0, -1 + n10, 1, 
      0, 1, 1])/((d - 2*n10)*(-1 + n10)) + 
   (n4*j[p4, n1, 0, n3, 1 + n4, -1 + n5, 2, 0, 1, 0, -1 + n10, 1, 0, 1, 1])/
    ((d - 2*n10)*(-1 + n10)) + ((-4*n4 + 2*d*n4 - n10*n4 - 3*n3*n4 - 2*n4^2)*
     j[p4, n1, 0, n3, 1 + n4, n5, 1, 0, 1, 0, -1 + n10, 1, 0, 1, 1])/
    ((d - 2*n10)*(-1 + n10)) + 
   (2*n4*j[p4, n1, 0, n3, 1 + n4, n5, 2, 0, 0, 0, -1 + n10, 1, 0, 1, 1])/
    ((d - 2*n10)*(-1 + n10)) + 
   ((n4 + n4^2)*j[p4, n1, 0, n3, 2 + n4, -1 + n5, 1, 0, 1, 0, -1 + n10, 1, 0, 
      1, 1])/((d - 2*n10)*(-1 + n10)) + 
   ((-n4 - n4^2)*j[p4, n1, 0, n3, 2 + n4, n5, 0, 0, 1, 0, -1 + n10, 1, 0, 1, 
      1])/((d - 2*n10)*(-1 + n10)) + 
   ((-n4 - n4^2)*j[p4, n1, 0, n3, 2 + n4, n5, 1, -1, 1, 0, -1 + n10, 1, 0, 1, 
      1])/((d - 2*n10)*(-1 + n10)) + 
   ((n4 + n4^2)*j[p4, n1, 0, n3, 2 + n4, n5, 1, 0, 0, 0, -1 + n10, 1, 0, 1, 
      1])/((d - 2*n10)*(-1 + n10)) - 
   (2*n3*j[p4, n1, 0, 1 + n3, -1 + n4, n5, 2, 0, 1, 0, -1 + n10, 1, 0, 1, 1])/
    ((d - 2*n10)*(-1 + n10)) + 
   (n3*j[p4, n1, 0, 1 + n3, n4, -1 + n5, 2, 0, 1, 0, -1 + n10, 1, 0, 1, 1])/
    ((d - 2*n10)*(-1 + n10)) + ((-3*n3 + 2*d*n3 - n10*n3 - 3*n3^2 - 2*n3*n4)*
     j[p4, n1, 0, 1 + n3, n4, n5, 1, 0, 1, 0, -1 + n10, 1, 0, 1, 1])/
    ((d - 2*n10)*(-1 + n10)) + 
   (2*n3*j[p4, n1, 0, 1 + n3, n4, n5, 2, -1, 1, 0, -1 + n10, 1, 0, 1, 1])/
    ((d - 2*n10)*(-1 + n10)) + 
   (4*n3*j[p4, n1, 0, 1 + n3, n4, n5, 2, 0, 0, 0, -1 + n10, 1, 0, 1, 1])/
    ((d - 2*n10)*(-1 + n10)) - 
   (2*n3*j[p4, n1, 0, 1 + n3, n4, n5, 2, 0, 1, 0, -1 + n10, 1, -1, 1, 1])/
    ((d - 2*n10)*(-1 + n10)) + 
   (2*n3*j[p4, n1, 0, 1 + n3, n4, n5, 2, 0, 1, 0, -1 + n10, 1, 0, 0, 1])/
    ((d - 2*n10)*(-1 + n10)) + 
   (2*n3*j[p4, n1, 0, 1 + n3, n4, n5, 2, 0, 1, 0, -1 + n10, 1, 0, 1, 0])/
    ((d - 2*n10)*(-1 + n10)) + 
   (n3*n4*j[p4, n1, 0, 1 + n3, 1 + n4, -1 + n5, 1, 0, 1, 0, -1 + n10, 1, 0, 
      1, 1])/((d - 2*n10)*(-1 + n10)) - 
   (n3*n4*j[p4, n1, 0, 1 + n3, 1 + n4, n5, 0, 0, 1, 0, -1 + n10, 1, 0, 1, 1])/
    ((d - 2*n10)*(-1 + n10)) - 
   (n3*n4*j[p4, n1, 0, 1 + n3, 1 + n4, n5, 1, -1, 1, 0, -1 + n10, 1, 0, 1, 
      1])/((d - 2*n10)*(-1 + n10)) + 
   (3*n3*n4*j[p4, n1, 0, 1 + n3, 1 + n4, n5, 1, 0, 0, 0, -1 + n10, 1, 0, 1, 
      1])/((d - 2*n10)*(-1 + n10)) - 
   (n3*n4*j[p4, n1, 0, 1 + n3, 1 + n4, n5, 1, 0, 1, 0, -1 + n10, 1, -1, 1, 
      1])/((d - 2*n10)*(-1 + n10)) + 
   (2*n3*n4*j[p4, n1, 0, 1 + n3, 1 + n4, n5, 1, 0, 1, 0, -1 + n10, 1, 0, 0, 
      1])/((d - 2*n10)*(-1 + n10)) + 
   (2*n3*n4*j[p4, n1, 0, 1 + n3, 1 + n4, n5, 1, 0, 1, 0, -1 + n10, 1, 0, 1, 
      0])/((d - 2*n10)*(-1 + n10)) + 
   ((2*n3 + 2*n3^2)*j[p4, n1, 0, 2 + n3, n4, n5, 1, 0, 0, 0, -1 + n10, 1, 0, 
      1, 1])/((d - 2*n10)*(-1 + n10)) + 
   ((-n3 - n3^2)*j[p4, n1, 0, 2 + n3, n4, n5, 1, 0, 1, 0, -1 + n10, 1, -1, 1, 
      1])/((d - 2*n10)*(-1 + n10)) + 
   ((2*n3 + 2*n3^2)*j[p4, n1, 0, 2 + n3, n4, n5, 1, 0, 1, 0, -1 + n10, 1, 0, 
      0, 1])/((d - 2*n10)*(-1 + n10)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n14 == 1 && n5 == 0 && n6 == 1 && 
    n7 == 0 && n8 == 1 && n9 == 0 && n11 != 1 -> 
  -((n4*j[p4, -1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, n11, 0, n13, 1])/
     (d - 2*n11)) - (n3*j[p4, -1, n2, 1 + n3, n4, 0, 1, 0, 1, 0, 1, n11, 0, 
      n13, 1])/(d - 2*n11) + (2*n3*j[p4, 0, -1 + n2, 1 + n3, n4, 0, 1, 0, 2, 
      0, 1, -1 + n11, 0, n13, 1])/((d - 2*n11)*(-1 + n11)) - 
   (n3*n4*j[p4, 0, -1 + n2, 1 + n3, 1 + n4, 0, 1, 0, 1, 0, 1, -1 + n11, 0, 
      n13, 1])/((d - 2*n11)*(-1 + n11)) + 
   ((-n3 - n3^2)*j[p4, 0, -1 + n2, 2 + n3, n4, 0, 1, 0, 1, 0, 1, -1 + n11, 0, 
      n13, 1])/((d - 2*n11)*(-1 + n11)) + 
   ((-4 + d - 2*n4)*j[p4, 0, n2, n3, n4, 0, 1, 0, 2, 0, 1, -1 + n11, 0, n13, 
      1])/((d - 2*n11)*(-1 + n11)) + 
   (2*n4*j[p4, 0, n2, n3, 1 + n4, 0, 0, 0, 2, 0, 1, -1 + n11, 0, n13, 1])/
    ((d - 2*n11)*(-1 + n11)) + 
   (n4*j[p4, 0, n2, n3, 1 + n4, 0, 1, 0, 0, 0, 1, n11, 0, n13, 1])/
    (d - 2*n11) + ((-2*n4 + n11*n4 - 2*n3*n4 - n4^2)*
     j[p4, 0, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, -1 + n11, 0, n13, 1])/
    ((d - 2*n11)*(-1 + n11)) + 
   ((-n4 - n4^2)*j[p4, 0, n2, n3, 2 + n4, 0, 0, 0, 1, 0, 1, -1 + n11, 0, n13, 
      1])/((d - 2*n11)*(-1 + n11)) + 
   ((n4 + n4^2)*j[p4, 0, n2, n3, 2 + n4, 0, 1, 0, 0, 0, 1, -1 + n11, 0, n13, 
      1])/((d - 2*n11)*(-1 + n11)) - 
   (2*n3*j[p4, 0, n2, 1 + n3, n4, 0, 1, -1, 2, 0, 1, -1 + n11, 0, n13, 1])/
    ((d - 2*n11)*(-1 + n11)) + 
   (n3*j[p4, 0, n2, 1 + n3, n4, 0, 1, 0, 0, 0, 1, n11, 0, n13, 1])/
    (d - 2*n11) + ((-5*n3 + n11*n3 - 2*n3^2 - n3*n4)*
     j[p4, 0, n2, 1 + n3, n4, 0, 1, 0, 1, 0, 1, -1 + n11, 0, n13, 1])/
    ((d - 2*n11)*(-1 + n11)) + 
   (2*n3*j[p4, 0, n2, 1 + n3, n4, 0, 1, 0, 2, 0, 1, -1 + n11, -1, n13, 1])/
    ((d - 2*n11)*(-1 + n11)) - 
   (2*n3*j[p4, 0, n2, 1 + n3, n4, 0, 1, 0, 2, 0, 1, -1 + n11, 0, -1 + n13, 
      1])/((d - 2*n11)*(-1 + n11)) - 
   (n3*n4*j[p4, 0, n2, 1 + n3, 1 + n4, 0, 0, 0, 1, 0, 1, -1 + n11, 0, n13, 
      1])/((d - 2*n11)*(-1 + n11)) + 
   (n3*n4*j[p4, 0, n2, 1 + n3, 1 + n4, 0, 1, -1, 1, 0, 1, -1 + n11, 0, n13, 
      1])/((d - 2*n11)*(-1 + n11)) + 
   (3*n3*n4*j[p4, 0, n2, 1 + n3, 1 + n4, 0, 1, 0, 0, 0, 1, -1 + n11, 0, n13, 
      1])/((d - 2*n11)*(-1 + n11)) - 
   (n3*n4*j[p4, 0, n2, 1 + n3, 1 + n4, 0, 1, 0, 1, 0, 1, -1 + n11, -1, n13, 
      1])/((d - 2*n11)*(-1 + n11)) + 
   (n3*n4*j[p4, 0, n2, 1 + n3, 1 + n4, 0, 1, 0, 1, 0, 1, -1 + n11, 0, 
      -1 + n13, 1])/((d - 2*n11)*(-1 + n11)) + 
   (2*n3*n4*j[p4, 0, n2, 1 + n3, 1 + n4, 0, 1, 0, 1, 0, 1, -1 + n11, 0, n13, 
      0])/((d - 2*n11)*(-1 + n11)) + 
   ((n3 + n3^2)*j[p4, 0, n2, 2 + n3, n4, 0, 1, -1, 1, 0, 1, -1 + n11, 0, n13, 
      1])/((d - 2*n11)*(-1 + n11)) + 
   ((2*n3 + 2*n3^2)*j[p4, 0, n2, 2 + n3, n4, 0, 1, 0, 0, 0, 1, -1 + n11, 0, 
      n13, 1])/((d - 2*n11)*(-1 + n11)) + 
   ((-n3 - n3^2)*j[p4, 0, n2, 2 + n3, n4, 0, 1, 0, 1, 0, 1, -1 + n11, -1, 
      n13, 1])/((d - 2*n11)*(-1 + n11)) + 
   ((n3 + n3^2)*j[p4, 0, n2, 2 + n3, n4, 0, 1, 0, 1, 0, 1, -1 + n11, 0, 
      -1 + n13, 1])/((d - 2*n11)*(-1 + n11)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n6 == 1 && 
    n7 == 0 && n8 == 1 && n9 == 0 && n11 != 1 -> 
  -((n4*j[p4, -1, n2, n3, 1 + n4, n5, 1, 0, 1, 0, 1, n11, 0, 1, 1])/
     (d - 2*n11)) - (n3*j[p4, -1, n2, 1 + n3, n4, n5, 1, 0, 1, 0, 1, n11, 0, 
      1, 1])/(d - 2*n11) + (2*n3*j[p4, 0, -1 + n2, 1 + n3, n4, n5, 1, 0, 2, 
      0, 1, -1 + n11, 0, 1, 1])/((d - 2*n11)*(-1 + n11)) - 
   (n3*n4*j[p4, 0, -1 + n2, 1 + n3, 1 + n4, n5, 1, 0, 1, 0, 1, -1 + n11, 0, 
      1, 1])/((d - 2*n11)*(-1 + n11)) + 
   ((-n3 - n3^2)*j[p4, 0, -1 + n2, 2 + n3, n4, n5, 1, 0, 1, 0, 1, -1 + n11, 
      0, 1, 1])/((d - 2*n11)*(-1 + n11)) + 
   ((-4 + d - 2*n4)*j[p4, 0, n2, n3, n4, n5, 1, 0, 2, 0, 1, -1 + n11, 0, 1, 
      1])/((d - 2*n11)*(-1 + n11)) + 
   (2*n4*j[p4, 0, n2, n3, 1 + n4, n5, 0, 0, 2, 0, 1, -1 + n11, 0, 1, 1])/
    ((d - 2*n11)*(-1 + n11)) + 
   (n4*j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, 0, 0, 1, n11, 0, 1, 1])/
    (d - 2*n11) + ((-2*n4 + n11*n4 - 2*n3*n4 - n4^2)*
     j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, 1, 0, 1, -1 + n11, 0, 1, 1])/
    ((d - 2*n11)*(-1 + n11)) + 
   ((-n4 - n4^2)*j[p4, 0, n2, n3, 2 + n4, n5, 0, 0, 1, 0, 1, -1 + n11, 0, 1, 
      1])/((d - 2*n11)*(-1 + n11)) + 
   ((n4 + n4^2)*j[p4, 0, n2, n3, 2 + n4, n5, 1, 0, 0, 0, 1, -1 + n11, 0, 1, 
      1])/((d - 2*n11)*(-1 + n11)) - 
   (2*n3*j[p4, 0, n2, 1 + n3, n4, n5, 1, -1, 2, 0, 1, -1 + n11, 0, 1, 1])/
    ((d - 2*n11)*(-1 + n11)) + 
   (n3*j[p4, 0, n2, 1 + n3, n4, n5, 1, 0, 0, 0, 1, n11, 0, 1, 1])/
    (d - 2*n11) + ((-5*n3 + n11*n3 - 2*n3^2 - n3*n4)*
     j[p4, 0, n2, 1 + n3, n4, n5, 1, 0, 1, 0, 1, -1 + n11, 0, 1, 1])/
    ((d - 2*n11)*(-1 + n11)) + 
   (2*n3*j[p4, 0, n2, 1 + n3, n4, n5, 1, 0, 2, 0, 1, -1 + n11, -1, 1, 1])/
    ((d - 2*n11)*(-1 + n11)) - 
   (2*n3*j[p4, 0, n2, 1 + n3, n4, n5, 1, 0, 2, 0, 1, -1 + n11, 0, 0, 1])/
    ((d - 2*n11)*(-1 + n11)) - 
   (n3*n4*j[p4, 0, n2, 1 + n3, 1 + n4, n5, 0, 0, 1, 0, 1, -1 + n11, 0, 1, 1])/
    ((d - 2*n11)*(-1 + n11)) + 
   (n3*n4*j[p4, 0, n2, 1 + n3, 1 + n4, n5, 1, -1, 1, 0, 1, -1 + n11, 0, 1, 
      1])/((d - 2*n11)*(-1 + n11)) + 
   (3*n3*n4*j[p4, 0, n2, 1 + n3, 1 + n4, n5, 1, 0, 0, 0, 1, -1 + n11, 0, 1, 
      1])/((d - 2*n11)*(-1 + n11)) - 
   (n3*n4*j[p4, 0, n2, 1 + n3, 1 + n4, n5, 1, 0, 1, 0, 1, -1 + n11, -1, 1, 
      1])/((d - 2*n11)*(-1 + n11)) + 
   (n3*n4*j[p4, 0, n2, 1 + n3, 1 + n4, n5, 1, 0, 1, 0, 1, -1 + n11, 0, 0, 1])/
    ((d - 2*n11)*(-1 + n11)) + 
   (2*n3*n4*j[p4, 0, n2, 1 + n3, 1 + n4, n5, 1, 0, 1, 0, 1, -1 + n11, 0, 1, 
      0])/((d - 2*n11)*(-1 + n11)) + 
   ((n3 + n3^2)*j[p4, 0, n2, 2 + n3, n4, n5, 1, -1, 1, 0, 1, -1 + n11, 0, 1, 
      1])/((d - 2*n11)*(-1 + n11)) + 
   ((2*n3 + 2*n3^2)*j[p4, 0, n2, 2 + n3, n4, n5, 1, 0, 0, 0, 1, -1 + n11, 0, 
      1, 1])/((d - 2*n11)*(-1 + n11)) + 
   ((-n3 - n3^2)*j[p4, 0, n2, 2 + n3, n4, n5, 1, 0, 1, 0, 1, -1 + n11, -1, 1, 
      1])/((d - 2*n11)*(-1 + n11)) + 
   ((n3 + n3^2)*j[p4, 0, n2, 2 + n3, n4, n5, 1, 0, 1, 0, 1, -1 + n11, 0, 0, 
      1])/((d - 2*n11)*(-1 + n11)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == -1 && n13 == 1 && n14 == 1 && n6 == 1 && 
    n7 == 0 && n8 == 1 && n9 == 0 &&  !(n1 == 0 || n5 == 0) -> 
  ((-44 + 48*d - 12*d^2 + 24*n1 - 8*d*n1 - 8*n2 + 6*d*n2 + 4*n1*n2 - 52*n3 + 
      22*d*n3 + 4*n1*n3 - 8*n2*n3 - 8*n3^2 - 56*n4 + 26*d*n4 + 4*n1*n4 - 
      8*n2*n4 - 20*n3*n4 - 12*n4^2 - 12*n5 + 8*d*n5 + 8*n1*n5 - 12*n3*n5 - 
      12*n4*n5)*j[p4, -1 + n1, -1 + n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 
      1, 1])/((-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 
      4*n1^2 + 8*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 
      24*n4 - 12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 
      4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((-44 + 48*d - 12*d^2 + 24*n1 - 8*d*n1 - 8*n2 + 6*d*n2 + 4*n1*n2 - 52*n3 + 
      22*d*n3 + 4*n1*n3 - 8*n2*n3 - 8*n3^2 - 56*n4 + 26*d*n4 + 4*n1*n4 - 
      8*n2*n4 - 20*n3*n4 - 12*n4^2 - 12*n5 + 8*d*n5 + 8*n1*n5 - 12*n3*n5 - 
      12*n4*n5)*j[p4, -1 + n1, n2, -1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 
      1, 1])/((-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 
      4*n1^2 + 8*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 
      24*n4 - 12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 
      4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((44 - 48*d + 12*d^2 - 24*n1 + 8*d*n1 + 8*n2 - 6*d*n2 - 4*n1*n2 + 52*n3 - 
      22*d*n3 - 4*n1*n3 + 8*n2*n3 + 8*n3^2 + 56*n4 - 26*d*n4 - 4*n1*n4 + 
      8*n2*n4 + 20*n3*n4 + 12*n4^2 + 12*n5 - 8*d*n5 - 8*n1*n5 + 12*n3*n5 + 
      12*n4*n5)*j[p4, -1 + n1, n2, n3, n4, 1 + n5, 0, 0, 2, 0, 1, 1, -1, 1, 
      1])/(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 34*d^2*n1 + 
     40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 44*d^2*n2 + 
     24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 280*n3 + 
     248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 152*n2*n3 + 
     68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
     16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 152*n1*n4 + 
     72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
     16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
     8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 
     8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 
     8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 
     24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 
     24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 
     8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((88 - 96*d + 24*d^2 - 48*n1 + 16*d*n1 + 16*n2 - 12*d*n2 - 8*n1*n2 + 
      104*n3 - 44*d*n3 - 8*n1*n3 + 16*n2*n3 + 16*n3^2 + 112*n4 - 52*d*n4 - 
      8*n1*n4 + 16*n2*n4 + 40*n3*n4 + 24*n4^2 + 24*n5 - 16*d*n5 - 16*n1*n5 + 
      24*n3*n5 + 24*n4*n5)*j[p4, -1 + n1, n2, n3, n4, 1 + n5, 1, -1, 1, 0, 1, 
      1, 0, 1, 1])/((-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 
      4*n1^2 + 8*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 
      24*n4 - 12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 
      4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((276 - 474*d + 253*d^2 - 43*d^3 - 28*n1 + 12*d*n1 - 28*n1^2 + 12*d*n1^2 + 
      92*n2 - 112*d*n2 + 31*d^2*n2 - 32*n1*n2 + 12*d*n1*n2 - 4*n1^2*n2 + 
      8*n2^2 - 6*d*n2^2 - 4*n1*n2^2 + 416*n3 - 414*d*n3 + 100*d^2*n3 + 
      20*n1*n3 - 12*d*n1*n3 - 8*n1^2*n3 + 116*n2*n3 - 58*d*n2*n3 - 
      4*n1*n2*n3 + 8*n2^2*n3 + 156*n3^2 - 72*d*n3^2 + 8*n1*n3^2 + 
      24*n2*n3^2 + 16*n3^3 + 384*n4 - 384*d*n4 + 94*d^2*n4 + 48*n1*n4 - 
      24*d*n1*n4 - 8*n1^2*n4 + 112*n2*n4 - 56*d*n2*n4 + 8*n2^2*n4 + 
      276*n3*n4 - 132*d*n3*n4 + 24*n1*n3*n4 + 44*n2*n3*n4 + 44*n3^2*n4 + 
      116*n4^2 - 56*d*n4^2 + 16*n1*n4^2 + 20*n2*n4^2 + 36*n3*n4^2 + 8*n4^3 + 
      108*n5 - 144*d*n5 + 42*d^2*n5 - 8*n1*n5 - 8*n1^2*n5 + 20*n2*n5 - 
      16*d*n2*n5 - 8*n1*n2*n5 + 136*n3*n5 - 72*d*n3*n5 + 8*n1*n3*n5 + 
      20*n2*n3*n5 + 28*n3^2*n5 + 124*n4*n5 - 64*d*n4*n5 + 16*n1*n4*n5 + 
      20*n2*n4*n5 + 44*n3*n4*n5 + 16*n4^2*n5 + 8*n5^2 - 8*d*n5^2 + 
      8*n3*n5^2 + 8*n4*n5^2)*j[p4, -1 + n1, n2, n3, n4, 1 + n5, 1, 0, 0, 0, 
      1, 1, -1, 2, 1])/((-3 + d - n4 - n5)*(-240 + 412*d - 214*d^2 + 35*d^3 - 
      88*n1 + 120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
      164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
      74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
      34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((44 - 48*d + 12*d^2 - 24*n1 + 8*d*n1 + 8*n2 - 6*d*n2 - 
      4*n1*n2 + 52*n3 - 22*d*n3 - 4*n1*n3 + 8*n2*n3 + 8*n3^2 + 56*n4 - 
      26*d*n4 - 4*n1*n4 + 8*n2*n4 + 20*n3*n4 + 12*n4^2 + 12*n5 - 8*d*n5 - 
      8*n1*n5 + 12*n3*n5 + 12*n4*n5)*j[p4, -1 + n1, n2, n3, n4, 1 + n5, 1, 0, 
      0, 0, 1, 1, 0, 1, 1])/((-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 
      4*d*n1 - 4*n1^2 + 8*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 
      8*n2*n3 + 24*n4 - 12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 
      4*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((-44 + 60*d - 17*d^2 + 4*n1^2 - 8*n2 + 6*d*n2 + 4*n1*n2 - 52*n3 + 
      26*d*n3 - 4*n1*n3 - 8*n2*n3 - 8*n3^2 - 56*n4 + 30*d*n4 - 4*n1*n4 - 
      8*n2*n4 - 20*n3*n4 - 12*n4^2 - 12*n5 + 12*d*n5 - 12*n3*n5 - 12*n4*n5)*
     j[p4, -1 + n1, n2, n3, n4, 1 + n5, 1, 0, 0, 0, 2, 1, -1, 1, 1])/
    (2*(-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 
      8*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((44 - 48*d + 12*d^2 - 24*n1 + 8*d*n1 + 8*n2 - 
      6*d*n2 - 4*n1*n2 + 52*n3 - 22*d*n3 - 4*n1*n3 + 8*n2*n3 + 8*n3^2 + 
      56*n4 - 26*d*n4 - 4*n1*n4 + 8*n2*n4 + 20*n3*n4 + 12*n4^2 + 12*n5 - 
      8*d*n5 - 8*n1*n5 + 12*n3*n5 + 12*n4*n5)*j[p4, -1 + n1, n2, n3, n4, 
      1 + n5, 1, 0, 1, 0, 0, 2, -1, 1, 1])/((-3 + d - n4 - n5)*
     (20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 8*n2 - 6*d*n2 - 4*n1*n2 + 
      20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 12*d*n4 + 8*n1*n4 + 
      8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((-176 + 164*d - 30*d^2 - 3*d^3 + 152*n1 - 80*d*n1 + 8*d^2*n1 + 24*n1^2 - 
      4*d*n1^2 - 32*n2 + 8*d*n2 + 4*d^2*n2 + 48*n1*n2 - 8*d*n1*n2 - 208*n3 + 
      92*d*n3 + 8*n1*n3 - 32*n2*n3 - 32*n3^2 - 224*n4 + 112*d*n4 - 4*d^2*n4 + 
      8*d*n1*n4 - 32*n2*n4 - 80*n3*n4 + 4*d*n3*n4 - 8*n1*n3*n4 - 48*n4^2 + 
      4*d*n4^2 - 8*n1*n4^2 - 48*n5 - 4*d*n5 + 14*d^2*n5 + 104*n1*n5 - 
      32*d*n1*n5 + 8*n1^2*n5 - 8*d*n2*n5 + 16*n1*n2*n5 - 48*n3*n5 - 
      4*d*n3*n5 + 8*n1*n3*n5 - 48*n4*n5 - 4*d*n4*n5 + 8*n1*n4*n5 - 8*d*n5^2 + 
      16*n1*n5^2)*j[p4, -1 + n1, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, -1, 1, 
      1])/(2*(-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 
      8*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((44 - 48*d + 12*d^2 - 24*n1 + 8*d*n1 + 8*n2 - 
      6*d*n2 - 4*n1*n2 + 52*n3 - 22*d*n3 - 4*n1*n3 + 8*n2*n3 + 8*n3^2 + 
      56*n4 - 26*d*n4 - 4*n1*n4 + 8*n2*n4 + 20*n3*n4 + 12*n4^2 + 12*n5 - 
      8*d*n5 - 8*n1*n5 + 12*n3*n5 + 12*n4*n5)*j[p4, -1 + n1, n2, n3, n4, 
      1 + n5, 1, 0, 1, 0, 1, 1, -1, 2, 0])/(-240 + 412*d - 214*d^2 + 35*d^3 - 
     88*n1 + 120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
     164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
     8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
     8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
     40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
     74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
     76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
     40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
     24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
     34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
     8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
     8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
     24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((44 - 48*d + 12*d^2 - 24*n1 + 8*d*n1 + 8*n2 - 6*d*n2 - 4*n1*n2 + 52*n3 - 
      22*d*n3 - 4*n1*n3 + 8*n2*n3 + 8*n3^2 + 56*n4 - 26*d*n4 - 4*n1*n4 + 
      8*n2*n4 + 20*n3*n4 + 12*n4^2 + 12*n5 - 8*d*n5 - 8*n1*n5 + 12*n3*n5 + 
      12*n4*n5)*j[p4, -1 + n1, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 
      1])/((-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 
      8*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((-44 + 60*d - 17*d^2 + 4*n1^2 - 8*n2 + 6*d*n2 + 
      4*n1*n2 - 52*n3 + 26*d*n3 - 4*n1*n3 - 8*n2*n3 - 8*n3^2 - 56*n4 + 
      30*d*n4 - 4*n1*n4 - 8*n2*n4 - 20*n3*n4 - 12*n4^2 - 12*n5 + 12*d*n5 - 
      12*n3*n5 - 12*n4*n5)*j[p4, -1 + n1, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 2, 
      1, -1, 0, 1])/(2*(-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 
      4*d*n1 - 4*n1^2 + 8*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 
      8*n2*n3 + 24*n4 - 12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 
      4*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((-64 + 74*d - 19*d^2 + 20*n1 - 4*d*n1 + 4*n1^2 - 16*n2 + 12*d*n2 + 
      8*n1*n2 - 72*n3 + 30*d*n3 - 4*n1*n3 - 16*n2*n3 - 8*n3^2 - 80*n4 + 
      38*d*n4 - 4*n1*n4 - 16*n2*n4 - 24*n3*n4 - 16*n4^2 - 16*n5 + 12*d*n5 + 
      8*n1*n5 - 16*n3*n5 - 16*n4*n5)*j[p4, -1 + n1, n2, n3, n4, 1 + n5, 1, 0, 
      2, 0, 1, 1, -1, 0, 1])/(2*(-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 
      4*n1 - 4*d*n1 - 4*n1^2 + 8*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 
      8*n1*n3 + 8*n2*n3 + 24*n4 - 12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 
      4*n4^2 + 4*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((-276 + 474*d - 253*d^2 + 43*d^3 + 28*n1 - 12*d*n1 + 28*n1^2 - 
      12*d*n1^2 - 92*n2 + 112*d*n2 - 31*d^2*n2 + 32*n1*n2 - 12*d*n1*n2 + 
      4*n1^2*n2 - 8*n2^2 + 6*d*n2^2 + 4*n1*n2^2 - 416*n3 + 414*d*n3 - 
      100*d^2*n3 - 20*n1*n3 + 12*d*n1*n3 + 8*n1^2*n3 - 116*n2*n3 + 
      58*d*n2*n3 + 4*n1*n2*n3 - 8*n2^2*n3 - 156*n3^2 + 72*d*n3^2 - 
      8*n1*n3^2 - 24*n2*n3^2 - 16*n3^3 - 384*n4 + 384*d*n4 - 94*d^2*n4 - 
      48*n1*n4 + 24*d*n1*n4 + 8*n1^2*n4 - 112*n2*n4 + 56*d*n2*n4 - 
      8*n2^2*n4 - 276*n3*n4 + 132*d*n3*n4 - 24*n1*n3*n4 - 44*n2*n3*n4 - 
      44*n3^2*n4 - 116*n4^2 + 56*d*n4^2 - 16*n1*n4^2 - 20*n2*n4^2 - 
      36*n3*n4^2 - 8*n4^3 - 384*n5 + 618*d*n5 - 295*d^2*n5 + 43*d^3*n5 + 
      36*n1*n5 - 12*d*n1*n5 + 36*n1^2*n5 - 12*d*n1^2*n5 - 112*n2*n5 + 
      128*d*n2*n5 - 31*d^2*n2*n5 + 40*n1*n2*n5 - 12*d*n1*n2*n5 + 
      4*n1^2*n2*n5 - 8*n2^2*n5 + 6*d*n2^2*n5 + 4*n1*n2^2*n5 - 552*n3*n5 + 
      486*d*n3*n5 - 100*d^2*n3*n5 - 28*n1*n3*n5 + 12*d*n1*n3*n5 + 
      8*n1^2*n3*n5 - 136*n2*n3*n5 + 58*d*n2*n3*n5 + 4*n1*n2*n3*n5 - 
      8*n2^2*n3*n5 - 184*n3^2*n5 + 72*d*n3^2*n5 - 8*n1*n3^2*n5 - 
      24*n2*n3^2*n5 - 16*n3^3*n5 - 508*n4*n5 + 448*d*n4*n5 - 94*d^2*n4*n5 - 
      64*n1*n4*n5 + 24*d*n1*n4*n5 + 8*n1^2*n4*n5 - 132*n2*n4*n5 + 
      56*d*n2*n4*n5 - 8*n2^2*n4*n5 - 320*n3*n4*n5 + 132*d*n3*n4*n5 - 
      24*n1*n3*n4*n5 - 44*n2*n3*n4*n5 - 44*n3^2*n4*n5 - 132*n4^2*n5 + 
      56*d*n4^2*n5 - 16*n1*n4^2*n5 - 20*n2*n4^2*n5 - 36*n3*n4^2*n5 - 
      8*n4^3*n5 - 116*n5^2 + 152*d*n5^2 - 42*d^2*n5^2 + 8*n1*n5^2 + 
      8*n1^2*n5^2 - 20*n2*n5^2 + 16*d*n2*n5^2 + 8*n1*n2*n5^2 - 144*n3*n5^2 + 
      72*d*n3*n5^2 - 8*n1*n3*n5^2 - 20*n2*n3*n5^2 - 28*n3^2*n5^2 - 
      132*n4*n5^2 + 64*d*n4*n5^2 - 16*n1*n4*n5^2 - 20*n2*n4*n5^2 - 
      44*n3*n4*n5^2 - 16*n4^2*n5^2 - 8*n5^3 + 8*d*n5^3 - 8*n3*n5^3 - 
      8*n4*n5^3)*j[p4, -1 + n1, n2, n3, n4, 2 + n5, 0, 0, 1, 0, 1, 1, -1, 1, 
      1])/((-3 + d - n4 - n5)*(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 
      120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
      164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
      74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
      34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((-64 + 74*d - 19*d^2 + 20*n1 - 4*d*n1 + 4*n1^2 - 16*n2 + 
      12*d*n2 + 8*n1*n2 - 72*n3 + 30*d*n3 - 4*n1*n3 - 16*n2*n3 - 8*n3^2 - 
      80*n4 + 38*d*n4 - 4*n1*n4 - 16*n2*n4 - 24*n3*n4 - 16*n4^2 - 80*n5 + 
      86*d*n5 - 19*d^2*n5 + 28*n1*n5 - 4*d*n1*n5 + 4*n1^2*n5 - 16*n2*n5 + 
      12*d*n2*n5 + 8*n1*n2*n5 - 88*n3*n5 + 30*d*n3*n5 - 4*n1*n3*n5 - 
      16*n2*n3*n5 - 8*n3^2*n5 - 96*n4*n5 + 38*d*n4*n5 - 4*n1*n4*n5 - 
      16*n2*n4*n5 - 24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 12*d*n5^2 + 
      8*n1*n5^2 - 16*n3*n5^2 - 16*n4*n5^2)*j[p4, -1 + n1, n2, n3, n4, 2 + n5, 
      1, 0, 1, 0, 1, 1, -1, 0, 1])/(2*(-3 + d - n4 - n5)*
     (20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 8*n2 - 6*d*n2 - 4*n1*n2 + 
      20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 12*d*n4 + 8*n1*n4 + 
      8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((64 - 74*d + 19*d^2 - 20*n1 + 4*d*n1 - 4*n1^2 + 16*n2 - 12*d*n2 - 
      8*n1*n2 + 72*n3 - 30*d*n3 + 4*n1*n3 + 16*n2*n3 + 8*n3^2 + 80*n4 - 
      38*d*n4 + 4*n1*n4 + 16*n2*n4 + 24*n3*n4 + 16*n4^2 + 80*n5 - 86*d*n5 + 
      19*d^2*n5 - 28*n1*n5 + 4*d*n1*n5 - 4*n1^2*n5 + 16*n2*n5 - 12*d*n2*n5 - 
      8*n1*n2*n5 + 88*n3*n5 - 30*d*n3*n5 + 4*n1*n3*n5 + 16*n2*n3*n5 + 
      8*n3^2*n5 + 96*n4*n5 - 38*d*n4*n5 + 4*n1*n4*n5 + 16*n2*n4*n5 + 
      24*n3*n4*n5 + 16*n4^2*n5 + 16*n5^2 - 12*d*n5^2 - 8*n1*n5^2 + 
      16*n3*n5^2 + 16*n4*n5^2)*j[p4, -1 + n1, n2, n3, n4, 2 + n5, 1, 0, 1, 0, 
      1, 1, -1, 1, 0])/(2*(-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 
      4*d*n1 - 4*n1^2 + 8*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 
      8*n2*n3 + 24*n4 - 12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 
      4*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((-276*n4 + 474*d*n4 - 253*d^2*n4 + 43*d^3*n4 + 28*n1*n4 - 12*d*n1*n4 + 
      28*n1^2*n4 - 12*d*n1^2*n4 - 92*n2*n4 + 112*d*n2*n4 - 31*d^2*n2*n4 + 
      32*n1*n2*n4 - 12*d*n1*n2*n4 + 4*n1^2*n2*n4 - 8*n2^2*n4 + 6*d*n2^2*n4 + 
      4*n1*n2^2*n4 - 416*n3*n4 + 414*d*n3*n4 - 100*d^2*n3*n4 - 20*n1*n3*n4 + 
      12*d*n1*n3*n4 + 8*n1^2*n3*n4 - 116*n2*n3*n4 + 58*d*n2*n3*n4 + 
      4*n1*n2*n3*n4 - 8*n2^2*n3*n4 - 156*n3^2*n4 + 72*d*n3^2*n4 - 
      8*n1*n3^2*n4 - 24*n2*n3^2*n4 - 16*n3^3*n4 - 384*n4^2 + 384*d*n4^2 - 
      94*d^2*n4^2 - 48*n1*n4^2 + 24*d*n1*n4^2 + 8*n1^2*n4^2 - 112*n2*n4^2 + 
      56*d*n2*n4^2 - 8*n2^2*n4^2 - 276*n3*n4^2 + 132*d*n3*n4^2 - 
      24*n1*n3*n4^2 - 44*n2*n3*n4^2 - 44*n3^2*n4^2 - 116*n4^3 + 56*d*n4^3 - 
      16*n1*n4^3 - 20*n2*n4^3 - 36*n3*n4^3 - 8*n4^4 - 108*n4*n5 + 
      144*d*n4*n5 - 42*d^2*n4*n5 + 8*n1*n4*n5 + 8*n1^2*n4*n5 - 20*n2*n4*n5 + 
      16*d*n2*n4*n5 + 8*n1*n2*n4*n5 - 136*n3*n4*n5 + 72*d*n3*n4*n5 - 
      8*n1*n3*n4*n5 - 20*n2*n3*n4*n5 - 28*n3^2*n4*n5 - 124*n4^2*n5 + 
      64*d*n4^2*n5 - 16*n1*n4^2*n5 - 20*n2*n4^2*n5 - 44*n3*n4^2*n5 - 
      16*n4^3*n5 - 8*n4*n5^2 + 8*d*n4*n5^2 - 8*n3*n4*n5^2 - 8*n4^2*n5^2)*
     j[p4, -1 + n1, n2, n3, 1 + n4, 1 + n5, 0, 0, 1, 0, 1, 1, -1, 1, 1])/
    ((-3 + d - n4 - n5)*(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 
      34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 
      44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 
      280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 
      152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 
      16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 
      152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 
      24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 
      40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 
      24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 
      16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((276*n4 - 474*d*n4 + 253*d^2*n4 - 43*d^3*n4 - 28*n1*n4 + 
      12*d*n1*n4 - 28*n1^2*n4 + 12*d*n1^2*n4 + 92*n2*n4 - 112*d*n2*n4 + 
      31*d^2*n2*n4 - 32*n1*n2*n4 + 12*d*n1*n2*n4 - 4*n1^2*n2*n4 + 8*n2^2*n4 - 
      6*d*n2^2*n4 - 4*n1*n2^2*n4 + 416*n3*n4 - 414*d*n3*n4 + 100*d^2*n3*n4 + 
      20*n1*n3*n4 - 12*d*n1*n3*n4 - 8*n1^2*n3*n4 + 116*n2*n3*n4 - 
      58*d*n2*n3*n4 - 4*n1*n2*n3*n4 + 8*n2^2*n3*n4 + 156*n3^2*n4 - 
      72*d*n3^2*n4 + 8*n1*n3^2*n4 + 24*n2*n3^2*n4 + 16*n3^3*n4 + 384*n4^2 - 
      384*d*n4^2 + 94*d^2*n4^2 + 48*n1*n4^2 - 24*d*n1*n4^2 - 8*n1^2*n4^2 + 
      112*n2*n4^2 - 56*d*n2*n4^2 + 8*n2^2*n4^2 + 276*n3*n4^2 - 
      132*d*n3*n4^2 + 24*n1*n3*n4^2 + 44*n2*n3*n4^2 + 44*n3^2*n4^2 + 
      116*n4^3 - 56*d*n4^3 + 16*n1*n4^3 + 20*n2*n4^3 + 36*n3*n4^3 + 8*n4^4 + 
      108*n4*n5 - 144*d*n4*n5 + 42*d^2*n4*n5 - 8*n1*n4*n5 - 8*n1^2*n4*n5 + 
      20*n2*n4*n5 - 16*d*n2*n4*n5 - 8*n1*n2*n4*n5 + 136*n3*n4*n5 - 
      72*d*n3*n4*n5 + 8*n1*n3*n4*n5 + 20*n2*n3*n4*n5 + 28*n3^2*n4*n5 + 
      124*n4^2*n5 - 64*d*n4^2*n5 + 16*n1*n4^2*n5 + 20*n2*n4^2*n5 + 
      44*n3*n4^2*n5 + 16*n4^3*n5 + 8*n4*n5^2 - 8*d*n4*n5^2 + 8*n3*n4*n5^2 + 
      8*n4^2*n5^2)*j[p4, -1 + n1, n2, n3, 1 + n4, 1 + n5, 1, 0, 0, 0, 1, 1, 
      -1, 1, 1])/((-3 + d - n4 - n5)*(-240 + 412*d - 214*d^2 + 35*d^3 - 
      88*n1 + 120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
      164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
      74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
      34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((64*n4 - 74*d*n4 + 19*d^2*n4 - 20*n1*n4 + 4*d*n1*n4 - 
      4*n1^2*n4 + 16*n2*n4 - 12*d*n2*n4 - 8*n1*n2*n4 + 72*n3*n4 - 
      30*d*n3*n4 + 4*n1*n3*n4 + 16*n2*n3*n4 + 8*n3^2*n4 + 80*n4^2 - 
      38*d*n4^2 + 4*n1*n4^2 + 16*n2*n4^2 + 24*n3*n4^2 + 16*n4^3 + 16*n4*n5 - 
      12*d*n4*n5 - 8*n1*n4*n5 + 16*n3*n4*n5 + 16*n4^2*n5)*
     j[p4, -1 + n1, n2, n3, 1 + n4, 1 + n5, 1, 0, 1, 0, 1, 1, -1, 1, 0])/
    (2*(-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 
      8*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((552*n3 - 948*d*n3 + 506*d^2*n3 - 86*d^3*n3 - 
      56*n1*n3 + 24*d*n1*n3 - 56*n1^2*n3 + 24*d*n1^2*n3 + 184*n2*n3 - 
      224*d*n2*n3 + 62*d^2*n2*n3 - 64*n1*n2*n3 + 24*d*n1*n2*n3 - 
      8*n1^2*n2*n3 + 16*n2^2*n3 - 12*d*n2^2*n3 - 8*n1*n2^2*n3 + 832*n3^2 - 
      828*d*n3^2 + 200*d^2*n3^2 + 40*n1*n3^2 - 24*d*n1*n3^2 - 16*n1^2*n3^2 + 
      232*n2*n3^2 - 116*d*n2*n3^2 - 8*n1*n2*n3^2 + 16*n2^2*n3^2 + 312*n3^3 - 
      144*d*n3^3 + 16*n1*n3^3 + 48*n2*n3^3 + 32*n3^4 + 768*n3*n4 - 
      768*d*n3*n4 + 188*d^2*n3*n4 + 96*n1*n3*n4 - 48*d*n1*n3*n4 - 
      16*n1^2*n3*n4 + 224*n2*n3*n4 - 112*d*n2*n3*n4 + 16*n2^2*n3*n4 + 
      552*n3^2*n4 - 264*d*n3^2*n4 + 48*n1*n3^2*n4 + 88*n2*n3^2*n4 + 
      88*n3^3*n4 + 232*n3*n4^2 - 112*d*n3*n4^2 + 32*n1*n3*n4^2 + 
      40*n2*n3*n4^2 + 72*n3^2*n4^2 + 16*n3*n4^3 + 216*n3*n5 - 288*d*n3*n5 + 
      84*d^2*n3*n5 - 16*n1*n3*n5 - 16*n1^2*n3*n5 + 40*n2*n3*n5 - 
      32*d*n2*n3*n5 - 16*n1*n2*n3*n5 + 272*n3^2*n5 - 144*d*n3^2*n5 + 
      16*n1*n3^2*n5 + 40*n2*n3^2*n5 + 56*n3^3*n5 + 248*n3*n4*n5 - 
      128*d*n3*n4*n5 + 32*n1*n3*n4*n5 + 40*n2*n3*n4*n5 + 88*n3^2*n4*n5 + 
      32*n3*n4^2*n5 + 16*n3*n5^2 - 16*d*n3*n5^2 + 16*n3^2*n5^2 + 
      16*n3*n4*n5^2)*j[p4, -1 + n1, n2, 1 + n3, n4, 1 + n5, 1, 0, 0, 0, 1, 1, 
      -1, 1, 1])/((-3 + d - n4 - n5)*(-240 + 412*d - 214*d^2 + 35*d^3 - 
      88*n1 + 120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
      164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
      74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
      34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((792*n3 - 1360*d*n3 + 720*d^2*n3 - 121*d^3*n3 + 
      32*n1*n3 - 96*d*n1*n3 + 34*d^2*n1*n3 - 96*n1^2*n3 + 36*d*n1^2*n3 - 
      8*n1^3*n3 + 320*n2*n3 - 388*d*n2*n3 + 106*d^2*n2*n3 - 88*n1*n2*n3 + 
      24*d*n1*n2*n3 - 24*n1^2*n2*n3 + 32*n2^2*n3 - 24*d*n2^2*n3 - 
      16*n1*n2^2*n3 + 1112*n3^2 - 1076*d*n3^2 + 254*d^2*n3^2 + 184*n1*n3^2 - 
      88*d*n1*n3^2 - 8*n1^2*n3^2 + 384*n2*n3^2 - 184*d*n2*n3^2 + 
      16*n1*n2*n3^2 + 32*n2^2*n3^2 + 352*n3^3 - 160*d*n3^3 + 32*n1*n3^3 + 
      64*n2*n3^3 + 32*n3^4 + 1096*n3*n4 - 1084*d*n3*n4 + 262*d^2*n3*n4 + 
      248*n1*n3*n4 - 120*d*n1*n3*n4 - 8*n1^2*n3*n4 + 384*n2*n3*n4 - 
      188*d*n2*n3*n4 + 24*n1*n2*n3*n4 + 32*n2^2*n3*n4 + 688*n3^2*n4 - 
      324*d*n3^2*n4 + 88*n1*n3^2*n4 + 128*n2*n3^2*n4 + 96*n3^3*n4 + 
      328*n3*n4^2 - 156*d*n3*n4^2 + 56*n1*n3*n4^2 + 64*n2*n3*n4^2 + 
      88*n3^2*n4^2 + 24*n3*n4^3 + 304*n3*n5 - 408*d*n3*n5 + 118*d^2*n3*n5 - 
      16*d*n1*n3*n5 - 24*n1^2*n3*n5 + 64*n2*n3*n5 - 52*d*n2*n3*n5 - 
      24*n1*n2*n3*n5 + 368*n3^2*n5 - 188*d*n3^2*n5 + 40*n1*n3^2*n5 + 
      64*n2*n3^2*n5 + 64*n3^3*n5 + 352*n3*n4*n5 - 180*d*n3*n4*n5 + 
      56*n1*n3*n4*n5 + 64*n2*n3*n4*n5 + 112*n3^2*n4*n5 + 48*n3*n4^2*n5 + 
      24*n3*n5^2 - 24*d*n3*n5^2 + 24*n3^2*n5^2 + 24*n3*n4*n5^2)*
     j[p4, -1 + n1, n2, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, -1, 0, 1])/
    (2*(-3 + d - n4 - n5)*(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 
      120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
      164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
      74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
      34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((44*n3 - 48*d*n3 + 12*d^2*n3 - 24*n1*n3 + 8*d*n1*n3 + 
      8*n2*n3 - 6*d*n2*n3 - 4*n1*n2*n3 + 52*n3^2 - 22*d*n3^2 - 4*n1*n3^2 + 
      8*n2*n3^2 + 8*n3^3 + 56*n3*n4 - 26*d*n3*n4 - 4*n1*n3*n4 + 8*n2*n3*n4 + 
      20*n3^2*n4 + 12*n3*n4^2 + 12*n3*n5 - 8*d*n3*n5 - 8*n1*n3*n5 + 
      12*n3^2*n5 + 12*n3*n4*n5)*j[p4, -1 + n1, n2, 1 + n3, n4, 1 + n5, 1, 0, 
      1, 0, 1, 1, -1, 1, 0])/(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 
     120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
     164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
     8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
     8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
     40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
     74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
     76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
     40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
     24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
     34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
     8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
     8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
     24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((44*n2 - 48*d*n2 + 12*d^2*n2 - 24*n1*n2 + 8*d*n1*n2 + 8*n2^2 - 6*d*n2^2 - 
      4*n1*n2^2 + 52*n2*n3 - 22*d*n2*n3 - 4*n1*n2*n3 + 8*n2^2*n3 + 
      8*n2*n3^2 + 56*n2*n4 - 26*d*n2*n4 - 4*n1*n2*n4 + 8*n2^2*n4 + 
      20*n2*n3*n4 + 12*n2*n4^2 + 12*n2*n5 - 8*d*n2*n5 - 8*n1*n2*n5 + 
      12*n2*n3*n5 + 12*n2*n4*n5)*j[p4, -1 + n1, 1 + n2, n3, n4, 1 + n5, 0, 0, 
      1, 0, 1, 1, -1, 1, 1])/(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 
     120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
     164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
     8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
     8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
     40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
     74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
     76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
     40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
     24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
     34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
     8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
     8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
     24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-88*n2 + 108*d*n2 - 29*d^2*n2 + 24*n1*n2 - 8*d*n1*n2 + 4*n1^2*n2 - 
      16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 104*n2*n3 + 48*d*n2*n3 - 16*n2^2*n3 - 
      16*n2*n3^2 - 112*n2*n4 + 56*d*n2*n4 - 16*n2^2*n4 - 40*n2*n3*n4 - 
      24*n2*n4^2 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 24*n2*n3*n5 - 
      24*n2*n4*n5)*j[p4, -1 + n1, 1 + n2, n3, n4, 1 + n5, 1, 0, 0, 0, 1, 1, 
      -1, 1, 1])/(2*(-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 
      4*n1^2 + 8*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 
      24*n4 - 12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 
      4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((-64*n2 + 74*d*n2 - 19*d^2*n2 + 20*n1*n2 - 4*d*n1*n2 + 4*n1^2*n2 - 
      16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 72*n2*n3 + 30*d*n2*n3 - 4*n1*n2*n3 - 
      16*n2^2*n3 - 8*n2*n3^2 - 80*n2*n4 + 38*d*n2*n4 - 4*n1*n2*n4 - 
      16*n2^2*n4 - 24*n2*n3*n4 - 16*n2*n4^2 - 16*n2*n5 + 12*d*n2*n5 + 
      8*n1*n2*n5 - 16*n2*n3*n5 - 16*n2*n4*n5)*j[p4, -1 + n1, 1 + n2, n3, n4, 
      1 + n5, 1, 0, 1, 0, 1, 1, -1, 0, 1])/((-3 + d - n4 - n5)*
     (20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 8*n2 - 6*d*n2 - 4*n1*n2 + 
      20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 12*d*n4 + 8*n1*n4 + 
      8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((44 - 48*d + 12*d^2 - 24*n1 + 8*d*n1 + 8*n2 - 6*d*n2 - 4*n1*n2 + 52*n3 - 
      22*d*n3 - 4*n1*n3 + 8*n2*n3 + 8*n3^2 + 56*n4 - 26*d*n4 - 4*n1*n4 + 
      8*n2*n4 + 20*n3*n4 + 12*n4^2 + 12*n5 - 8*d*n5 - 8*n1*n5 + 12*n3*n5 + 
      12*n4*n5)*j[p4, n1, -1 + n2, n3, n4, 1 + n5, 0, 0, 1, 0, 2, 1, -1, 1, 
      1])/(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 34*d^2*n1 + 
     40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 44*d^2*n2 + 
     24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 280*n3 + 
     248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 152*n2*n3 + 
     68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
     16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 152*n1*n4 + 
     72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
     16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
     8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 
     8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 
     8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 
     24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 
     24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 
     8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((44 - 60*d + 17*d^2 - 4*n1^2 + 8*n2 - 6*d*n2 - 4*n1*n2 + 52*n3 - 
      26*d*n3 + 4*n1*n3 + 8*n2*n3 + 8*n3^2 + 56*n4 - 30*d*n4 + 4*n1*n4 + 
      8*n2*n4 + 20*n3*n4 + 12*n4^2 + 12*n5 - 12*d*n5 + 12*n3*n5 + 12*n4*n5)*
     j[p4, n1, -1 + n2, n3, n4, 1 + n5, 1, 0, 0, 0, 2, 1, -1, 1, 1])/
    (2*(-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 
      8*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((-22 + 24*d - 6*d^2 + 12*n1 - 4*d*n1 - 4*n2 + 
      3*d*n2 + 2*n1*n2 - 26*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 
      28*n4 + 13*d*n4 + 2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 6*n5 + 
      4*d*n5 + 4*n1*n5 - 6*n3*n5 - 6*n4*n5)*j[p4, n1, -1 + n2, n3, n4, 
      1 + n5, 1, 0, 1, 0, 1, 0, 0, 1, 1])/((-3 + d - n4 - n5)*
     (20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 8*n2 - 6*d*n2 - 4*n1*n2 + 
      20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 12*d*n4 + 8*n1*n4 + 
      8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   j[p4, n1, -1 + n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, -1, 0, 2]/
    (3 - d + n4 + n5) + ((12 + 8*d - 10*d^2 + 2*d^3 - 52*n1 + 32*d*n1 - 
      4*d^2*n1 + 4*d*n2 - d^2*n2 - 8*n1*n2 + 2*d*n1*n2 + 16*n3 - 4*d*n3 - 
      d^2*n3 - 12*n1*n3 + 2*d*n1*n3 + 4*n3^2 + 4*n4 + 12*d*n4 - 5*d^2*n4 - 
      8*n1*n4 - 2*d*n1*n4 - 8*n3*n4 + 8*d*n3*n4 + 4*n1*n3*n4 - 4*n3^2*n4 - 
      12*n4^2 + 8*d*n4^2 + 4*n1*n4^2 - 8*n3*n4^2 - 4*n4^3 + 16*n5 - 
      2*d^2*n5 - 44*n1*n5 + 16*d*n1*n5 + 2*d*n2*n5 - 4*n1*n2*n5 + 20*n3*n5 - 
      6*d*n3*n5 - 8*n1*n3*n5 + 4*n3^2*n5 + 16*n4*n5 - 2*d*n4*n5 - 
      8*n1*n4*n5 + 4*n3*n4*n5 + 4*n5^2 - 8*n1*n5^2 + 4*n3*n5^2 + 4*n4*n5^2)*
     j[p4, n1, -1 + n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, -1, 1, 1])/
    ((-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 8*n2 - 
      6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((44 - 48*d + 12*d^2 - 24*n1 + 8*d*n1 + 8*n2 - 
      6*d*n2 - 4*n1*n2 + 52*n3 - 22*d*n3 - 4*n1*n3 + 8*n2*n3 + 8*n3^2 + 
      56*n4 - 26*d*n4 - 4*n1*n4 + 8*n2*n4 + 20*n3*n4 + 12*n4^2 + 12*n5 - 
      8*d*n5 - 8*n1*n5 + 12*n3*n5 + 12*n4*n5)*j[p4, n1, -1 + n2, n3, n4, 
      1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/((-3 + d - n4 - n5)*
     (20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 8*n2 - 6*d*n2 - 4*n1*n2 + 
      20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 12*d*n4 + 8*n1*n4 + 
      8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((12 - 17*d + 5*d^2 - 2*n1 + 2*d*n1 + 16*n3 - 9*d*n3 - 2*n1*n3 + 4*n3^2 + 
      16*n4 - 9*d*n4 - 2*n1*n4 + 8*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 4*n3*n5 + 
      4*n4*n5)*j[p4, n1, -1 + n2, n3, n4, 1 + n5, 1, 0, 1, 0, 2, 0, -1, 1, 
      1])/((-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 
      8*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((44 - 60*d + 17*d^2 - 4*n1^2 + 8*n2 - 6*d*n2 - 
      4*n1*n2 + 52*n3 - 26*d*n3 + 4*n1*n3 + 8*n2*n3 + 8*n3^2 + 56*n4 - 
      30*d*n4 + 4*n1*n4 + 8*n2*n4 + 20*n3*n4 + 12*n4^2 + 12*n5 - 12*d*n5 + 
      12*n3*n5 + 12*n4*n5)*j[p4, n1, -1 + n2, n3, n4, 1 + n5, 1, 0, 1, 0, 2, 
      1, -1, 0, 1])/(2*(-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 
      4*d*n1 - 4*n1^2 + 8*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 
      8*n2*n3 + 24*n4 - 12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 
      4*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((22 - 24*d + 6*d^2 - 12*n1 + 4*d*n1 + 4*n2 - 3*d*n2 - 2*n1*n2 + 26*n3 - 
      11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 28*n4 - 13*d*n4 - 2*n1*n4 + 
      4*n2*n4 + 10*n3*n4 + 6*n4^2 + 6*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
      6*n4*n5)*j[p4, n1, -1 + n2, n3, n4, 1 + n5, 1, 0, 2, 0, 1, 0, -1, 1, 
      1])/((-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 
      8*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((22 - 24*d + 6*d^2 - 12*n1 + 4*d*n1 + 4*n2 - 
      3*d*n2 - 2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
      28*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 6*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5)*j[p4, n1, -1 + n2, n3, n4, 
      1 + n5, 1, 0, 2, 0, 1, 1, -1, 0, 1])/((-3 + d - n4 - n5)*
     (20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 8*n2 - 6*d*n2 - 4*n1*n2 + 
      20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 12*d*n4 + 8*n1*n4 + 
      8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((4 - 8*d + 3*d^2 - 8*n1 + 8*d*n1 + 4*n1^2 - 8*n2 + 6*d*n2 + 4*n1*n2 + 
      12*n3 - 10*d*n3 - 12*n1*n3 - 8*n2*n3 + 8*n3^2 + 8*n4 - 6*d*n4 - 
      12*n1*n4 - 8*n2*n4 + 12*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 4*n3*n5 + 
      4*n4*n5)*j[p4, n1, -1 + n2, n3, n4, 1 + n5, 2, 0, 0, 0, 1, 1, -1, 1, 
      1])/(2*(-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 
      8*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((22 - 24*d + 6*d^2 - 12*n1 + 4*d*n1 + 4*n2 - 
      3*d*n2 - 2*n1*n2 + 26*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
      28*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 6*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5)*j[p4, n1, -1 + n2, n3, n4, 
      1 + n5, 2, 0, 1, 0, 0, 1, -1, 1, 1])/((-3 + d - n4 - n5)*
     (20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 8*n2 - 6*d*n2 - 4*n1*n2 + 
      20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 12*d*n4 + 8*n1*n4 + 
      8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) - 
   j[p4, n1, -1 + n2, n3, n4, 1 + n5, 2, 0, 1, 0, 1, 1, -1, 0, 1]/
    (2*(-3 + d - n4 - n5)) - j[p4, n1, -1 + n2, n3, n4, 1 + n5, 2, 0, 1, 0, 
     1, 1, -1, 1, 0]/(2*(-3 + d - n4 - n5)) + 
   ((-780 + 1262*d - 635*d^2 + 102*d^3 + 84*n1 + 12*d*n1 - 18*d^2*n1 + 
      68*n1^2 - 24*d*n1^2 + 8*n1^3 - 276*n2 + 328*d*n2 - 87*d^2*n2 + 
      80*n1*n2 - 20*d*n1*n2 + 20*n1^2*n2 - 24*n2^2 + 18*d*n2^2 + 12*n1*n2^2 - 
      1008*n3 + 898*d*n3 - 198*d^2*n3 - 140*n1*n3 + 68*d*n1*n3 - 316*n2*n3 + 
      142*d*n2*n3 - 20*n1*n2*n3 - 24*n2^2*n3 - 244*n3^2 + 104*d*n3^2 - 
      24*n1*n3^2 - 40*n2*n3^2 - 16*n3^3 - 1136*n4 + 1064*d*n4 - 244*d^2*n4 - 
      128*n1*n4 + 72*d*n1*n4 - 336*n2*n4 + 160*d*n2*n4 - 16*n1*n2*n4 - 
      24*n2^2*n4 - 636*n3*n4 + 276*d*n3*n4 - 56*n1*n3*n4 - 100*n2*n3*n4 - 
      68*n3^2*n4 - 396*n4^2 + 176*d*n4^2 - 32*n1*n4^2 - 60*n2*n4^2 - 
      92*n3*n4^2 - 40*n4^3 - 1136*n5 + 1694*d*n5 - 751*d^2*n5 + 102*d^3*n5 + 
      172*n1*n5 - 4*d*n1*n5 - 18*d^2*n1*n5 + 84*n1^2*n5 - 24*d*n1^2*n5 + 
      8*n1^3*n5 - 336*n2*n5 + 376*d*n2*n5 - 87*d^2*n2*n5 + 104*n1*n2*n5 - 
      20*d*n1*n2*n5 + 20*n1^2*n2*n5 - 24*n2^2*n5 + 18*d*n2^2*n5 + 
      12*n1*n2^2*n5 - 1416*n3*n5 + 1082*d*n3*n5 - 198*d^2*n3*n5 - 
      164*n1*n3*n5 + 68*d*n1*n3*n5 - 376*n2*n3*n5 + 142*d*n2*n3*n5 - 
      20*n1*n2*n3*n5 - 24*n2^2*n3*n5 - 296*n3^2*n5 + 104*d*n3^2*n5 - 
      24*n1*n3^2*n5 - 40*n2*n3^2*n5 - 16*n3^3*n5 - 1572*n4*n5 + 
      1272*d*n4*n5 - 244*d^2*n4*n5 - 144*n1*n4*n5 + 72*d*n1*n4*n5 - 
      396*n2*n4*n5 + 160*d*n2*n4*n5 - 16*n1*n2*n4*n5 - 24*n2^2*n4*n5 - 
      768*n3*n4*n5 + 276*d*n3*n4*n5 - 56*n1*n3*n4*n5 - 100*n2*n3*n4*n5 - 
      68*n3^2*n4*n5 - 476*n4^2*n5 + 176*d*n4^2*n5 - 32*n1*n4^2*n5 - 
      60*n2*n4^2*n5 - 92*n3*n4^2*n5 - 40*n4^3*n5 - 396*n5^2 + 464*d*n5^2 - 
      116*d^2*n5^2 + 104*n1*n5^2 - 16*d*n1*n5^2 + 16*n1^2*n5^2 - 60*n2*n5^2 + 
      48*d*n2*n5^2 + 24*n1*n2*n5^2 - 448*n3*n5^2 + 184*d*n3*n5^2 - 
      24*n1*n3*n5^2 - 60*n2*n3*n5^2 - 52*n3^2*n5^2 - 476*n4*n5^2 + 
      208*d*n4*n5^2 - 16*n1*n4*n5^2 - 60*n2*n4*n5^2 - 132*n3*n4*n5^2 - 
      80*n4^2*n5^2 - 40*n5^3 + 32*d*n5^3 + 16*n1*n5^3 - 40*n3*n5^3 - 
      40*n4*n5^3)*j[p4, n1, -1 + n2, n3, n4, 2 + n5, 1, 0, 1, 0, 1, 1, -1, 0, 
      1])/((-3 + d - n4 - n5)*(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 
      120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
      164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
      74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
      34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((780 - 1262*d + 635*d^2 - 102*d^3 - 84*n1 - 12*d*n1 + 
      18*d^2*n1 - 68*n1^2 + 24*d*n1^2 - 8*n1^3 + 276*n2 - 328*d*n2 + 
      87*d^2*n2 - 80*n1*n2 + 20*d*n1*n2 - 20*n1^2*n2 + 24*n2^2 - 18*d*n2^2 - 
      12*n1*n2^2 + 1008*n3 - 898*d*n3 + 198*d^2*n3 + 140*n1*n3 - 68*d*n1*n3 + 
      316*n2*n3 - 142*d*n2*n3 + 20*n1*n2*n3 + 24*n2^2*n3 + 244*n3^2 - 
      104*d*n3^2 + 24*n1*n3^2 + 40*n2*n3^2 + 16*n3^3 + 1136*n4 - 1064*d*n4 + 
      244*d^2*n4 + 128*n1*n4 - 72*d*n1*n4 + 336*n2*n4 - 160*d*n2*n4 + 
      16*n1*n2*n4 + 24*n2^2*n4 + 636*n3*n4 - 276*d*n3*n4 + 56*n1*n3*n4 + 
      100*n2*n3*n4 + 68*n3^2*n4 + 396*n4^2 - 176*d*n4^2 + 32*n1*n4^2 + 
      60*n2*n4^2 + 92*n3*n4^2 + 40*n4^3 + 1136*n5 - 1694*d*n5 + 751*d^2*n5 - 
      102*d^3*n5 - 172*n1*n5 + 4*d*n1*n5 + 18*d^2*n1*n5 - 84*n1^2*n5 + 
      24*d*n1^2*n5 - 8*n1^3*n5 + 336*n2*n5 - 376*d*n2*n5 + 87*d^2*n2*n5 - 
      104*n1*n2*n5 + 20*d*n1*n2*n5 - 20*n1^2*n2*n5 + 24*n2^2*n5 - 
      18*d*n2^2*n5 - 12*n1*n2^2*n5 + 1416*n3*n5 - 1082*d*n3*n5 + 
      198*d^2*n3*n5 + 164*n1*n3*n5 - 68*d*n1*n3*n5 + 376*n2*n3*n5 - 
      142*d*n2*n3*n5 + 20*n1*n2*n3*n5 + 24*n2^2*n3*n5 + 296*n3^2*n5 - 
      104*d*n3^2*n5 + 24*n1*n3^2*n5 + 40*n2*n3^2*n5 + 16*n3^3*n5 + 
      1572*n4*n5 - 1272*d*n4*n5 + 244*d^2*n4*n5 + 144*n1*n4*n5 - 
      72*d*n1*n4*n5 + 396*n2*n4*n5 - 160*d*n2*n4*n5 + 16*n1*n2*n4*n5 + 
      24*n2^2*n4*n5 + 768*n3*n4*n5 - 276*d*n3*n4*n5 + 56*n1*n3*n4*n5 + 
      100*n2*n3*n4*n5 + 68*n3^2*n4*n5 + 476*n4^2*n5 - 176*d*n4^2*n5 + 
      32*n1*n4^2*n5 + 60*n2*n4^2*n5 + 92*n3*n4^2*n5 + 40*n4^3*n5 + 396*n5^2 - 
      464*d*n5^2 + 116*d^2*n5^2 - 104*n1*n5^2 + 16*d*n1*n5^2 - 16*n1^2*n5^2 + 
      60*n2*n5^2 - 48*d*n2*n5^2 - 24*n1*n2*n5^2 + 448*n3*n5^2 - 
      184*d*n3*n5^2 + 24*n1*n3*n5^2 + 60*n2*n3*n5^2 + 52*n3^2*n5^2 + 
      476*n4*n5^2 - 208*d*n4*n5^2 + 16*n1*n4*n5^2 + 60*n2*n4*n5^2 + 
      132*n3*n4*n5^2 + 80*n4^2*n5^2 + 40*n5^3 - 32*d*n5^3 - 16*n1*n5^3 + 
      40*n3*n5^3 + 40*n4*n5^3)*j[p4, n1, -1 + n2, n3, n4, 2 + n5, 1, 0, 1, 0, 
      1, 1, -1, 1, 0])/((-3 + d - n4 - n5)*(-240 + 412*d - 214*d^2 + 35*d^3 - 
      88*n1 + 120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
      164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
      74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
      34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((276*n4 - 474*d*n4 + 253*d^2*n4 - 43*d^3*n4 - 28*n1*n4 + 
      12*d*n1*n4 - 28*n1^2*n4 + 12*d*n1^2*n4 + 92*n2*n4 - 112*d*n2*n4 + 
      31*d^2*n2*n4 - 32*n1*n2*n4 + 12*d*n1*n2*n4 - 4*n1^2*n2*n4 + 8*n2^2*n4 - 
      6*d*n2^2*n4 - 4*n1*n2^2*n4 + 416*n3*n4 - 414*d*n3*n4 + 100*d^2*n3*n4 + 
      20*n1*n3*n4 - 12*d*n1*n3*n4 - 8*n1^2*n3*n4 + 116*n2*n3*n4 - 
      58*d*n2*n3*n4 - 4*n1*n2*n3*n4 + 8*n2^2*n3*n4 + 156*n3^2*n4 - 
      72*d*n3^2*n4 + 8*n1*n3^2*n4 + 24*n2*n3^2*n4 + 16*n3^3*n4 + 384*n4^2 - 
      384*d*n4^2 + 94*d^2*n4^2 + 48*n1*n4^2 - 24*d*n1*n4^2 - 8*n1^2*n4^2 + 
      112*n2*n4^2 - 56*d*n2*n4^2 + 8*n2^2*n4^2 + 276*n3*n4^2 - 
      132*d*n3*n4^2 + 24*n1*n3*n4^2 + 44*n2*n3*n4^2 + 44*n3^2*n4^2 + 
      116*n4^3 - 56*d*n4^3 + 16*n1*n4^3 + 20*n2*n4^3 + 36*n3*n4^3 + 8*n4^4 + 
      108*n4*n5 - 144*d*n4*n5 + 42*d^2*n4*n5 - 8*n1*n4*n5 - 8*n1^2*n4*n5 + 
      20*n2*n4*n5 - 16*d*n2*n4*n5 - 8*n1*n2*n4*n5 + 136*n3*n4*n5 - 
      72*d*n3*n4*n5 + 8*n1*n3*n4*n5 + 20*n2*n3*n4*n5 + 28*n3^2*n4*n5 + 
      124*n4^2*n5 - 64*d*n4^2*n5 + 16*n1*n4^2*n5 + 20*n2*n4^2*n5 + 
      44*n3*n4^2*n5 + 16*n4^3*n5 + 8*n4*n5^2 - 8*d*n4*n5^2 + 8*n3*n4*n5^2 + 
      8*n4^2*n5^2)*j[p4, n1, -1 + n2, n3, 1 + n4, 1 + n5, 0, 0, 1, 0, 1, 1, 
      -1, 1, 1])/((-3 + d - n4 - n5)*(-240 + 412*d - 214*d^2 + 35*d^3 - 
      88*n1 + 120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
      164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
      74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
      34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((-276*n4 + 474*d*n4 - 253*d^2*n4 + 43*d^3*n4 + 
      28*n1*n4 - 12*d*n1*n4 + 28*n1^2*n4 - 12*d*n1^2*n4 - 92*n2*n4 + 
      112*d*n2*n4 - 31*d^2*n2*n4 + 32*n1*n2*n4 - 12*d*n1*n2*n4 + 
      4*n1^2*n2*n4 - 8*n2^2*n4 + 6*d*n2^2*n4 + 4*n1*n2^2*n4 - 416*n3*n4 + 
      414*d*n3*n4 - 100*d^2*n3*n4 - 20*n1*n3*n4 + 12*d*n1*n3*n4 + 
      8*n1^2*n3*n4 - 116*n2*n3*n4 + 58*d*n2*n3*n4 + 4*n1*n2*n3*n4 - 
      8*n2^2*n3*n4 - 156*n3^2*n4 + 72*d*n3^2*n4 - 8*n1*n3^2*n4 - 
      24*n2*n3^2*n4 - 16*n3^3*n4 - 384*n4^2 + 384*d*n4^2 - 94*d^2*n4^2 - 
      48*n1*n4^2 + 24*d*n1*n4^2 + 8*n1^2*n4^2 - 112*n2*n4^2 + 56*d*n2*n4^2 - 
      8*n2^2*n4^2 - 276*n3*n4^2 + 132*d*n3*n4^2 - 24*n1*n3*n4^2 - 
      44*n2*n3*n4^2 - 44*n3^2*n4^2 - 116*n4^3 + 56*d*n4^3 - 16*n1*n4^3 - 
      20*n2*n4^3 - 36*n3*n4^3 - 8*n4^4 - 108*n4*n5 + 144*d*n4*n5 - 
      42*d^2*n4*n5 + 8*n1*n4*n5 + 8*n1^2*n4*n5 - 20*n2*n4*n5 + 
      16*d*n2*n4*n5 + 8*n1*n2*n4*n5 - 136*n3*n4*n5 + 72*d*n3*n4*n5 - 
      8*n1*n3*n4*n5 - 20*n2*n3*n4*n5 - 28*n3^2*n4*n5 - 124*n4^2*n5 + 
      64*d*n4^2*n5 - 16*n1*n4^2*n5 - 20*n2*n4^2*n5 - 44*n3*n4^2*n5 - 
      16*n4^3*n5 - 8*n4*n5^2 + 8*d*n4*n5^2 - 8*n3*n4*n5^2 - 8*n4^2*n5^2)*
     j[p4, n1, -1 + n2, n3, 1 + n4, 1 + n5, 1, 0, 0, 0, 1, 1, -1, 1, 1])/
    ((-3 + d - n4 - n5)*(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 
      34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 
      44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 
      280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 
      152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 
      16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 
      152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 
      24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 
      40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 
      24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 
      16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((-64*n4 + 74*d*n4 - 19*d^2*n4 + 20*n1*n4 - 4*d*n1*n4 + 
      4*n1^2*n4 - 16*n2*n4 + 12*d*n2*n4 + 8*n1*n2*n4 - 72*n3*n4 + 
      30*d*n3*n4 - 4*n1*n3*n4 - 16*n2*n3*n4 - 8*n3^2*n4 - 80*n4^2 + 
      38*d*n4^2 - 4*n1*n4^2 - 16*n2*n4^2 - 24*n3*n4^2 - 16*n4^3 - 16*n4*n5 + 
      12*d*n4*n5 + 8*n1*n4*n5 - 16*n3*n4*n5 - 16*n4^2*n5)*
     j[p4, n1, -1 + n2, n3, 1 + n4, 1 + n5, 1, 0, 1, 0, 1, 1, -1, 1, 0])/
    (2*(-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 
      8*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((-276*n3 + 474*d*n3 - 253*d^2*n3 + 43*d^3*n3 + 
      28*n1*n3 - 12*d*n1*n3 + 28*n1^2*n3 - 12*d*n1^2*n3 - 92*n2*n3 + 
      112*d*n2*n3 - 31*d^2*n2*n3 + 32*n1*n2*n3 - 12*d*n1*n2*n3 + 
      4*n1^2*n2*n3 - 8*n2^2*n3 + 6*d*n2^2*n3 + 4*n1*n2^2*n3 - 416*n3^2 + 
      414*d*n3^2 - 100*d^2*n3^2 - 20*n1*n3^2 + 12*d*n1*n3^2 + 8*n1^2*n3^2 - 
      116*n2*n3^2 + 58*d*n2*n3^2 + 4*n1*n2*n3^2 - 8*n2^2*n3^2 - 156*n3^3 + 
      72*d*n3^3 - 8*n1*n3^3 - 24*n2*n3^3 - 16*n3^4 - 384*n3*n4 + 
      384*d*n3*n4 - 94*d^2*n3*n4 - 48*n1*n3*n4 + 24*d*n1*n3*n4 + 
      8*n1^2*n3*n4 - 112*n2*n3*n4 + 56*d*n2*n3*n4 - 8*n2^2*n3*n4 - 
      276*n3^2*n4 + 132*d*n3^2*n4 - 24*n1*n3^2*n4 - 44*n2*n3^2*n4 - 
      44*n3^3*n4 - 116*n3*n4^2 + 56*d*n3*n4^2 - 16*n1*n3*n4^2 - 
      20*n2*n3*n4^2 - 36*n3^2*n4^2 - 8*n3*n4^3 - 108*n3*n5 + 144*d*n3*n5 - 
      42*d^2*n3*n5 + 8*n1*n3*n5 + 8*n1^2*n3*n5 - 20*n2*n3*n5 + 
      16*d*n2*n3*n5 + 8*n1*n2*n3*n5 - 136*n3^2*n5 + 72*d*n3^2*n5 - 
      8*n1*n3^2*n5 - 20*n2*n3^2*n5 - 28*n3^3*n5 - 124*n3*n4*n5 + 
      64*d*n3*n4*n5 - 16*n1*n3*n4*n5 - 20*n2*n3*n4*n5 - 44*n3^2*n4*n5 - 
      16*n3*n4^2*n5 - 8*n3*n5^2 + 8*d*n3*n5^2 - 8*n3^2*n5^2 - 8*n3*n4*n5^2)*
     j[p4, n1, -1 + n2, 1 + n3, n4, 1 + n5, 1, 0, 0, 0, 1, 1, -1, 1, 1])/
    ((-3 + d - n4 - n5)*(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 
      34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 
      44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 
      280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 
      152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 
      16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 
      152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 
      24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 
      40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 
      24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 
      16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((276*n3 - 474*d*n3 + 253*d^2*n3 - 43*d^3*n3 - 28*n1*n3 + 
      12*d*n1*n3 - 28*n1^2*n3 + 12*d*n1^2*n3 + 92*n2*n3 - 112*d*n2*n3 + 
      31*d^2*n2*n3 - 32*n1*n2*n3 + 12*d*n1*n2*n3 - 4*n1^2*n2*n3 + 8*n2^2*n3 - 
      6*d*n2^2*n3 - 4*n1*n2^2*n3 + 416*n3^2 - 414*d*n3^2 + 100*d^2*n3^2 + 
      20*n1*n3^2 - 12*d*n1*n3^2 - 8*n1^2*n3^2 + 116*n2*n3^2 - 58*d*n2*n3^2 - 
      4*n1*n2*n3^2 + 8*n2^2*n3^2 + 156*n3^3 - 72*d*n3^3 + 8*n1*n3^3 + 
      24*n2*n3^3 + 16*n3^4 + 384*n3*n4 - 384*d*n3*n4 + 94*d^2*n3*n4 + 
      48*n1*n3*n4 - 24*d*n1*n3*n4 - 8*n1^2*n3*n4 + 112*n2*n3*n4 - 
      56*d*n2*n3*n4 + 8*n2^2*n3*n4 + 276*n3^2*n4 - 132*d*n3^2*n4 + 
      24*n1*n3^2*n4 + 44*n2*n3^2*n4 + 44*n3^3*n4 + 116*n3*n4^2 - 
      56*d*n3*n4^2 + 16*n1*n3*n4^2 + 20*n2*n3*n4^2 + 36*n3^2*n4^2 + 
      8*n3*n4^3 + 108*n3*n5 - 144*d*n3*n5 + 42*d^2*n3*n5 - 8*n1*n3*n5 - 
      8*n1^2*n3*n5 + 20*n2*n3*n5 - 16*d*n2*n3*n5 - 8*n1*n2*n3*n5 + 
      136*n3^2*n5 - 72*d*n3^2*n5 + 8*n1*n3^2*n5 + 20*n2*n3^2*n5 + 
      28*n3^3*n5 + 124*n3*n4*n5 - 64*d*n3*n4*n5 + 16*n1*n3*n4*n5 + 
      20*n2*n3*n4*n5 + 44*n3^2*n4*n5 + 16*n3*n4^2*n5 + 8*n3*n5^2 - 
      8*d*n3*n5^2 + 8*n3^2*n5^2 + 8*n3*n4*n5^2)*j[p4, n1, -1 + n2, 1 + n3, 
      n4, 1 + n5, 1, 0, 1, 0, 0, 1, -1, 1, 1])/((-3 + d - n4 - n5)*
     (-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 34*d^2*n1 + 
      40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 44*d^2*n2 + 
      24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 280*n3 + 
      248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 152*n2*n3 + 
      68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
      16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 152*n1*n4 + 
      72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
      16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
      8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 
      16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 16*n1*n5 + 
      16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
      96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
      104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
      16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-276*n3 + 474*d*n3 - 253*d^2*n3 + 43*d^3*n3 + 28*n1*n3 - 12*d*n1*n3 + 
      28*n1^2*n3 - 12*d*n1^2*n3 - 92*n2*n3 + 112*d*n2*n3 - 31*d^2*n2*n3 + 
      32*n1*n2*n3 - 12*d*n1*n2*n3 + 4*n1^2*n2*n3 - 8*n2^2*n3 + 6*d*n2^2*n3 + 
      4*n1*n2^2*n3 - 416*n3^2 + 414*d*n3^2 - 100*d^2*n3^2 - 20*n1*n3^2 + 
      12*d*n1*n3^2 + 8*n1^2*n3^2 - 116*n2*n3^2 + 58*d*n2*n3^2 + 
      4*n1*n2*n3^2 - 8*n2^2*n3^2 - 156*n3^3 + 72*d*n3^3 - 8*n1*n3^3 - 
      24*n2*n3^3 - 16*n3^4 - 384*n3*n4 + 384*d*n3*n4 - 94*d^2*n3*n4 - 
      48*n1*n3*n4 + 24*d*n1*n3*n4 + 8*n1^2*n3*n4 - 112*n2*n3*n4 + 
      56*d*n2*n3*n4 - 8*n2^2*n3*n4 - 276*n3^2*n4 + 132*d*n3^2*n4 - 
      24*n1*n3^2*n4 - 44*n2*n3^2*n4 - 44*n3^3*n4 - 116*n3*n4^2 + 
      56*d*n3*n4^2 - 16*n1*n3*n4^2 - 20*n2*n3*n4^2 - 36*n3^2*n4^2 - 
      8*n3*n4^3 - 108*n3*n5 + 144*d*n3*n5 - 42*d^2*n3*n5 + 8*n1*n3*n5 + 
      8*n1^2*n3*n5 - 20*n2*n3*n5 + 16*d*n2*n3*n5 + 8*n1*n2*n3*n5 - 
      136*n3^2*n5 + 72*d*n3^2*n5 - 8*n1*n3^2*n5 - 20*n2*n3^2*n5 - 
      28*n3^3*n5 - 124*n3*n4*n5 + 64*d*n3*n4*n5 - 16*n1*n3*n4*n5 - 
      20*n2*n3*n4*n5 - 44*n3^2*n4*n5 - 16*n3*n4^2*n5 - 8*n3*n5^2 + 
      8*d*n3*n5^2 - 8*n3^2*n5^2 - 8*n3*n4*n5^2)*j[p4, n1, -1 + n2, 1 + n3, 
      n4, 1 + n5, 1, 0, 1, 0, 1, 0, -1, 1, 1])/((-3 + d - n4 - n5)*
     (-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 34*d^2*n1 + 
      40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 44*d^2*n2 + 
      24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 280*n3 + 
      248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 152*n2*n3 + 
      68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
      16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 152*n1*n4 + 
      72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
      16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
      8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 
      16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 16*n1*n5 + 
      16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
      96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
      104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
      16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-312*n3 + 536*d*n3 - 292*d^2*n3 + 51*d^3*n3 + 144*n1*n3 - 144*d*n1*n3 + 
      34*d^2*n1*n3 + 16*n1^2*n3 - 12*d*n1^2*n3 - 8*n1^3*n3 - 48*n2*n3 + 
      60*d*n2*n3 - 18*d^2*n2*n3 + 40*n1*n2*n3 - 24*d*n1*n2*n3 - 
      8*n1^2*n2*n3 - 552*n3^2 + 580*d*n3^2 - 146*d^2*n3^2 + 104*n1*n3^2 - 
      40*d*n1*n3^2 + 24*n1^2*n3^2 - 80*n2*n3^2 + 48*d*n2*n3^2 + 
      32*n1*n2*n3^2 - 272*n3^3 + 128*d*n3^3 - 32*n2*n3^3 - 32*n3^4 - 
      440*n3*n4 + 452*d*n3*n4 - 114*d^2*n3*n4 + 56*n1*n3*n4 - 24*d*n1*n3*n4 + 
      24*n1^2*n3*n4 - 64*n2*n3*n4 + 36*d*n2*n3*n4 + 24*n1*n2*n3*n4 - 
      416*n3^2*n4 + 204*d*n3^2*n4 - 8*n1*n3^2*n4 - 48*n2*n3^2*n4 - 
      80*n3^3*n4 - 136*n3*n4^2 + 68*d*n3*n4^2 - 8*n1*n3*n4^2 - 
      16*n2*n3*n4^2 - 56*n3^2*n4^2 - 8*n3*n4^3 - 128*n3*n5 + 168*d*n3*n5 - 
      50*d^2*n3*n5 + 32*n1*n3*n5 - 16*d*n1*n3*n5 + 8*n1^2*n3*n5 - 
      16*n2*n3*n5 + 12*d*n2*n3*n5 + 8*n1*n2*n3*n5 - 176*n3^2*n5 + 
      100*d*n3^2*n5 + 8*n1*n3^2*n5 - 16*n2*n3^2*n5 - 48*n3^3*n5 - 
      144*n3*n4*n5 + 76*d*n3*n4*n5 - 8*n1*n3*n4*n5 - 16*n2*n3*n4*n5 - 
      64*n3^2*n4*n5 - 16*n3*n4^2*n5 - 8*n3*n5^2 + 8*d*n3*n5^2 - 8*n3^2*n5^2 - 
      8*n3*n4*n5^2)*j[p4, n1, -1 + n2, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 
      -1, 0, 1])/(2*(-3 + d - n4 - n5)*(-240 + 412*d - 214*d^2 + 35*d^3 - 
      88*n1 + 120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
      164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
      74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
      34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((-44*n3 + 48*d*n3 - 12*d^2*n3 + 24*n1*n3 - 8*d*n1*n3 - 
      8*n2*n3 + 6*d*n2*n3 + 4*n1*n2*n3 - 52*n3^2 + 22*d*n3^2 + 4*n1*n3^2 - 
      8*n2*n3^2 - 8*n3^3 - 56*n3*n4 + 26*d*n3*n4 + 4*n1*n3*n4 - 8*n2*n3*n4 - 
      20*n3^2*n4 - 12*n3*n4^2 - 12*n3*n5 + 8*d*n3*n5 + 8*n1*n3*n5 - 
      12*n3^2*n5 - 12*n3*n4*n5)*j[p4, n1, -1 + n2, 1 + n3, n4, 1 + n5, 1, 0, 
      1, 0, 1, 1, -1, 1, 0])/(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 
     120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
     164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
     8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
     8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
     40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
     74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
     76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
     40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
     24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
     34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
     8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
     8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
     24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((44 - 48*d + 12*d^2 - 24*n1 + 8*d*n1 + 8*n2 - 6*d*n2 - 4*n1*n2 + 52*n3 - 
      22*d*n3 - 4*n1*n3 + 8*n2*n3 + 8*n3^2 + 56*n4 - 26*d*n4 - 4*n1*n4 + 
      8*n2*n4 + 20*n3*n4 + 12*n4^2 + 12*n5 - 8*d*n5 - 8*n1*n5 + 12*n3*n5 + 
      12*n4*n5)*j[p4, n1, n2, -1 + n3, n4, 1 + n5, 0, 0, 1, 0, 2, 1, -1, 1, 
      1])/(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 34*d^2*n1 + 
     40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 44*d^2*n2 + 
     24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 280*n3 + 
     248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 152*n2*n3 + 
     68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
     16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 152*n1*n4 + 
     72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
     16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
     8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 
     8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 
     8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 
     24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 
     24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 
     8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-132 + 210*d - 108*d^2 + 18*d^3 + 28*n1 - 12*d*n1 + 24*n1^2 - 8*d*n1^2 - 
      68*n2 + 78*d*n2 - 21*d^2*n2 + 28*n1*n2 - 8*d*n1*n2 + 4*n1^2*n2 - 
      8*n2^2 + 6*d*n2^2 + 4*n1*n2^2 - 200*n3 + 192*d*n3 - 45*d^2*n3 - 
      16*n1*n3 + 8*d*n1*n3 + 4*n1^2*n3 - 84*n2*n3 + 40*d*n2*n3 - 8*n2^2*n3 - 
      76*n3^2 + 34*d*n3^2 - 4*n1*n3^2 - 16*n2*n3^2 - 8*n3^3 - 168*n4 + 
      162*d*n4 - 39*d^2*n4 - 44*n1*n4 + 20*d*n1*n4 + 4*n1^2*n4 - 80*n2*n4 + 
      38*d*n2*n4 - 4*n1*n2*n4 - 8*n2^2*n4 - 116*n3*n4 + 56*d*n3*n4 - 
      16*n1*n3*n4 - 28*n2*n3*n4 - 20*n3^2*n4 - 36*n4^2 + 18*d*n4^2 - 
      12*n1*n4^2 - 12*n2*n4^2 - 12*n3*n4^2 - 36*n5 + 42*d*n5 - 12*d^2*n5 + 
      12*n1*n5 - 4*d*n1*n5 + 8*n1^2*n5 - 12*n2*n5 + 8*d*n2*n5 + 8*n1*n2*n5 - 
      48*n3*n5 + 26*d*n3*n5 - 4*n1*n3*n5 - 12*n2*n3*n5 - 12*n3^2*n5 - 
      36*n4*n5 + 18*d*n4*n5 - 12*n1*n4*n5 - 12*n2*n4*n5 - 12*n3*n4*n5)*
     j[p4, n1, n2, -1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 0, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 
      34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 
      44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 
      280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 
      152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 
      16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 
      152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 
      24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 
      40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 
      24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 
      16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + j[p4, n1, n2, -1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, -1, 
     0, 2]/(3 - d + n4 + n5) + 
   ((76 - 126*d + 58*d^2 - 8*d^3 + 4*n1 - 4*d*n1 + 16*n2 - 20*d*n2 + 
      4*d^2*n2 + 88*n3 - 66*d*n3 + 12*d^2*n3 + 4*n1*n3 + 16*n2*n3 - 
      4*d*n2*n3 + 12*n3^2 - 4*d*n3^2 + 108*n4 - 92*d*n4 + 18*d^2*n4 + 
      4*d*n1*n4 + 16*n2*n4 - 4*d*n2*n4 + 48*n3*n4 - 18*d*n3*n4 - 4*n1*n3*n4 + 
      4*n3^2*n4 + 36*n4^2 - 14*d*n4^2 - 4*n1*n4^2 + 8*n3*n4^2 + 4*n4^3 + 
      52*n5 - 70*d*n5 + 18*d^2*n5 + 4*n1*n5 - 4*d*n1*n5 + 8*n2*n5 - 
      8*d*n2*n5 + 56*n3*n5 - 22*d*n3*n5 + 4*n1*n3*n5 + 8*n2*n3*n5 + 
      4*n3^2*n5 + 64*n4*n5 - 30*d*n4*n5 + 4*n1*n4*n5 + 8*n2*n4*n5 + 
      16*n3*n4*n5 + 12*n4^2*n5 + 8*n5^2 - 8*d*n5^2 + 8*n3*n5^2 + 8*n4*n5^2)*
     j[p4, n1, n2, -1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, -1, 1, 1])/
    ((-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 8*n2 - 
      6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((88 - 96*d + 24*d^2 - 48*n1 + 16*d*n1 + 16*n2 - 
      12*d*n2 - 8*n1*n2 + 104*n3 - 44*d*n3 - 8*n1*n3 + 16*n2*n3 + 16*n3^2 + 
      112*n4 - 52*d*n4 - 8*n1*n4 + 16*n2*n4 + 40*n3*n4 + 24*n4^2 + 24*n5 - 
      16*d*n5 - 16*n1*n5 + 24*n3*n5 + 24*n4*n5)*j[p4, n1, n2, -1 + n3, n4, 
      1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/(-240 + 412*d - 214*d^2 + 35*d^3 - 
     88*n1 + 120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
     164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
     8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
     8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
     40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
     74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
     76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
     40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
     24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
     34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
     8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
     8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
     24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((12 - 17*d + 5*d^2 - 2*n1 + 2*d*n1 + 16*n3 - 9*d*n3 - 2*n1*n3 + 4*n3^2 + 
      16*n4 - 9*d*n4 - 2*n1*n4 + 8*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 4*n3*n5 + 
      4*n4*n5)*j[p4, n1, n2, -1 + n3, n4, 1 + n5, 1, 0, 1, 0, 2, 0, -1, 1, 
      1])/((-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 
      8*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((12 - 17*d + 5*d^2 - 2*n1 + 2*d*n1 + 16*n3 - 
      9*d*n3 - 2*n1*n3 + 4*n3^2 + 16*n4 - 9*d*n4 - 2*n1*n4 + 8*n3*n4 + 
      4*n4^2 + 4*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)*j[p4, n1, n2, -1 + n3, n4, 
      1 + n5, 2, 0, 0, 0, 1, 1, -1, 1, 1])/((-3 + d - n4 - n5)*
     (20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 8*n2 - 6*d*n2 - 4*n1*n2 + 
      20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 12*d*n4 + 8*n1*n4 + 
      8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((64 - 74*d + 19*d^2 - 20*n1 + 4*d*n1 - 4*n1^2 + 16*n2 - 12*d*n2 - 
      8*n1*n2 + 72*n3 - 30*d*n3 + 4*n1*n3 + 16*n2*n3 + 8*n3^2 + 80*n4 - 
      38*d*n4 + 4*n1*n4 + 16*n2*n4 + 24*n3*n4 + 16*n4^2 + 16*n5 - 12*d*n5 - 
      8*n1*n5 + 16*n3*n5 + 16*n4*n5)*j[p4, n1, n2, -1 + n3, n4, 1 + n5, 2, 0, 
      1, 0, 0, 1, -1, 1, 1])/(2*(-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 
      4*n1 - 4*d*n1 - 4*n1^2 + 8*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 
      8*n1*n3 + 8*n2*n3 + 24*n4 - 12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 
      4*n4^2 + 4*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((-780*n4 + 1262*d*n4 - 635*d^2*n4 + 102*d^3*n4 + 84*n1*n4 + 12*d*n1*n4 - 
      18*d^2*n1*n4 + 68*n1^2*n4 - 24*d*n1^2*n4 + 8*n1^3*n4 - 276*n2*n4 + 
      328*d*n2*n4 - 87*d^2*n2*n4 + 80*n1*n2*n4 - 20*d*n1*n2*n4 + 
      20*n1^2*n2*n4 - 24*n2^2*n4 + 18*d*n2^2*n4 + 12*n1*n2^2*n4 - 
      1008*n3*n4 + 898*d*n3*n4 - 198*d^2*n3*n4 - 140*n1*n3*n4 + 
      68*d*n1*n3*n4 - 316*n2*n3*n4 + 142*d*n2*n3*n4 - 20*n1*n2*n3*n4 - 
      24*n2^2*n3*n4 - 244*n3^2*n4 + 104*d*n3^2*n4 - 24*n1*n3^2*n4 - 
      40*n2*n3^2*n4 - 16*n3^3*n4 - 1136*n4^2 + 1064*d*n4^2 - 244*d^2*n4^2 - 
      128*n1*n4^2 + 72*d*n1*n4^2 - 336*n2*n4^2 + 160*d*n2*n4^2 - 
      16*n1*n2*n4^2 - 24*n2^2*n4^2 - 636*n3*n4^2 + 276*d*n3*n4^2 - 
      56*n1*n3*n4^2 - 100*n2*n3*n4^2 - 68*n3^2*n4^2 - 396*n4^3 + 176*d*n4^3 - 
      32*n1*n4^3 - 60*n2*n4^3 - 92*n3*n4^3 - 40*n4^4 - 356*n4*n5 + 
      432*d*n4*n5 - 116*d^2*n4*n5 + 88*n1*n4*n5 - 16*d*n1*n4*n5 + 
      16*n1^2*n4*n5 - 60*n2*n4*n5 + 48*d*n2*n4*n5 + 24*n1*n2*n4*n5 - 
      408*n3*n4*n5 + 184*d*n3*n4*n5 - 24*n1*n3*n4*n5 - 60*n2*n3*n4*n5 - 
      52*n3^2*n4*n5 - 436*n4^2*n5 + 208*d*n4^2*n5 - 16*n1*n4^2*n5 - 
      60*n2*n4^2*n5 - 132*n3*n4^2*n5 - 80*n4^3*n5 - 40*n4*n5^2 + 
      32*d*n4*n5^2 + 16*n1*n4*n5^2 - 40*n3*n4*n5^2 - 40*n4^2*n5^2)*
     j[p4, n1, n2, -1 + n3, 1 + n4, 1 + n5, 0, 0, 1, 0, 1, 1, -1, 1, 1])/
    ((-3 + d - n4 - n5)*(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 
      34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 
      44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 
      280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 
      152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 
      16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 
      152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 
      24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 
      40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 
      24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 
      16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((792*n4 - 1316*d*n4 + 672*d^2*n4 - 109*d^3*n4 - 
      56*n1*n4 - 24*d*n1*n4 + 18*d^2*n1*n4 - 48*n1^2*n4 + 20*d*n1^2*n4 - 
      8*n1^3*n4 + 232*n2*n4 - 284*d*n2*n4 + 76*d^2*n2*n4 - 56*n1*n2*n4 + 
      16*d*n1*n2*n4 - 16*n1^2*n2*n4 + 16*n2^2*n4 - 12*d*n2^2*n4 - 
      8*n1*n2^2*n4 + 1024*n3*n4 - 928*d*n3*n4 + 208*d^2*n3*n4 + 
      128*n1*n3*n4 - 64*d*n1*n3*n4 + 264*n2*n3*n4 - 120*d*n2*n3*n4 + 
      16*n1*n2*n3*n4 + 16*n2^2*n3*n4 + 248*n3^2*n4 - 108*d*n3^2*n4 + 
      24*n1*n3^2*n4 + 32*n2*n3^2*n4 + 16*n3^3*n4 + 1184*n4^2 - 1124*d*n4^2 + 
      260*d^2*n4^2 + 88*n1*n4^2 - 56*d*n1*n4^2 + 288*n2*n4^2 - 
      140*d*n2*n4^2 + 8*n1*n2*n4^2 + 16*n2^2*n4^2 + 680*n3*n4^2 - 
      296*d*n3*n4^2 + 48*n1*n3*n4^2 + 88*n2*n3*n4^2 + 72*n3^2*n4^2 + 
      440*n4^3 - 196*d*n4^3 + 24*n1*n4^3 + 56*n2*n4^3 + 104*n3*n4^3 + 
      48*n4^4 + 392*n4*n5 - 492*d*n4*n5 + 134*d^2*n4*n5 - 72*n1*n4*n5 + 
      8*d*n1*n4*n5 - 8*n1^2*n4*n5 + 56*n2*n4*n5 - 48*d*n2*n4*n5 - 
      16*n1*n2*n4*n5 + 448*n3*n4*n5 - 204*d*n3*n4*n5 + 24*n1*n3*n4*n5 + 
      56*n2*n3*n4*n5 + 56*n3^2*n4*n5 + 488*n4^2*n5 - 236*d*n4^2*n5 + 
      8*n1*n4^2*n5 + 56*n2*n4^2*n5 + 152*n3*n4^2*n5 + 96*n4^3*n5 + 
      48*n4*n5^2 - 40*d*n4*n5^2 - 16*n1*n4*n5^2 + 48*n3*n4*n5^2 + 
      48*n4^2*n5^2)*j[p4, n1, n2, -1 + n3, 1 + n4, 1 + n5, 1, 0, 0, 0, 1, 1, 
      -1, 1, 1])/(2*(-3 + d - n4 - n5)*(-240 + 412*d - 214*d^2 + 35*d^3 - 
      88*n1 + 120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
      164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
      74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
      34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((64*n4 - 74*d*n4 + 19*d^2*n4 - 20*n1*n4 + 4*d*n1*n4 - 
      4*n1^2*n4 + 16*n2*n4 - 12*d*n2*n4 - 8*n1*n2*n4 + 72*n3*n4 - 
      30*d*n3*n4 + 4*n1*n3*n4 + 16*n2*n3*n4 + 8*n3^2*n4 + 80*n4^2 - 
      38*d*n4^2 + 4*n1*n4^2 + 16*n2*n4^2 + 24*n3*n4^2 + 16*n4^3 + 16*n4*n5 - 
      12*d*n4*n5 - 8*n1*n4*n5 + 16*n3*n4*n5 + 16*n4^2*n5)*
     j[p4, n1, n2, -1 + n3, 1 + n4, 1 + n5, 1, 0, 1, 0, 0, 1, -1, 1, 1])/
    (2*(-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 
      8*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((-64*n4 + 74*d*n4 - 19*d^2*n4 + 20*n1*n4 - 
      4*d*n1*n4 + 4*n1^2*n4 - 16*n2*n4 + 12*d*n2*n4 + 8*n1*n2*n4 - 72*n3*n4 + 
      30*d*n3*n4 - 4*n1*n3*n4 - 16*n2*n3*n4 - 8*n3^2*n4 - 80*n4^2 + 
      38*d*n4^2 - 4*n1*n4^2 - 16*n2*n4^2 - 24*n3*n4^2 - 16*n4^3 - 16*n4*n5 + 
      12*d*n4*n5 + 8*n1*n4*n5 - 16*n3*n4*n5 - 16*n4^2*n5)*
     j[p4, n1, n2, -1 + n3, 1 + n4, 1 + n5, 1, 0, 1, 0, 1, 0, -1, 1, 1])/
    (2*(-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 
      8*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((44 - 48*d + 12*d^2 - 24*n1 + 8*d*n1 + 8*n2 - 
      6*d*n2 - 4*n1*n2 + 52*n3 - 22*d*n3 - 4*n1*n3 + 8*n2*n3 + 8*n3^2 + 
      56*n4 - 26*d*n4 - 4*n1*n4 + 8*n2*n4 + 20*n3*n4 + 12*n4^2 + 12*n5 - 
      8*d*n5 - 8*n1*n5 + 12*n3*n5 + 12*n4*n5)*j[p4, n1, n2, n3, -1 + n4, 
      1 + n5, 1, 0, 1, 0, 1, 0, 0, 1, 1])/(-240 + 412*d - 214*d^2 + 35*d^3 - 
     88*n1 + 120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
     164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
     8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
     8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
     40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
     74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
     76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
     40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
     24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
     34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
     8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
     8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
     24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((24 - 34*d + 10*d^2 - 4*n1 + 4*d*n1 + 32*n3 - 18*d*n3 - 4*n1*n3 + 
      8*n3^2 + 32*n4 - 18*d*n4 - 4*n1*n4 + 16*n3*n4 + 8*n4^2 + 8*n5 - 
      8*d*n5 + 8*n3*n5 + 8*n4*n5)*j[p4, n1, n2, n3, -1 + n4, 1 + n5, 1, 0, 1, 
      0, 1, 1, -1, 1, 1])/(20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 
     8*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 
     12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 
     4*n3*n5 + 4*n4*n5) + ((-88 + 96*d - 24*d^2 + 48*n1 - 16*d*n1 - 16*n2 + 
      12*d*n2 + 8*n1*n2 - 104*n3 + 44*d*n3 + 8*n1*n3 - 16*n2*n3 - 16*n3^2 - 
      112*n4 + 52*d*n4 + 8*n1*n4 - 16*n2*n4 - 40*n3*n4 - 24*n4^2 - 24*n5 + 
      16*d*n5 + 16*n1*n5 - 24*n3*n5 - 24*n4*n5)*j[p4, n1, n2, n3, -1 + n4, 
      1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/(-240 + 412*d - 214*d^2 + 35*d^3 - 
     88*n1 + 120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
     164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
     8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
     8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
     40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
     74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
     76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
     40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
     24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
     34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
     8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
     8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
     24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-44 + 48*d - 12*d^2 + 24*n1 - 8*d*n1 - 8*n2 + 6*d*n2 + 4*n1*n2 - 52*n3 + 
      22*d*n3 + 4*n1*n3 - 8*n2*n3 - 8*n3^2 - 56*n4 + 26*d*n4 + 4*n1*n4 - 
      8*n2*n4 - 20*n3*n4 - 12*n4^2 - 12*n5 + 8*d*n5 + 8*n1*n5 - 12*n3*n5 - 
      12*n4*n5)*j[p4, n1, n2, n3, -1 + n4, 1 + n5, 1, 0, 2, 0, 1, 0, -1, 1, 
      1])/(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 34*d^2*n1 + 
     40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 44*d^2*n2 + 
     24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 280*n3 + 
     248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 152*n2*n3 + 
     68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
     16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 152*n1*n4 + 
     72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
     16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
     8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 
     8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 
     8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 
     24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 
     24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 
     8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-44 + 48*d - 12*d^2 + 24*n1 - 8*d*n1 - 8*n2 + 6*d*n2 + 4*n1*n2 - 52*n3 + 
      22*d*n3 + 4*n1*n3 - 8*n2*n3 - 8*n3^2 - 56*n4 + 26*d*n4 + 4*n1*n4 - 
      8*n2*n4 - 20*n3*n4 - 12*n4^2 - 12*n5 + 8*d*n5 + 8*n1*n5 - 12*n3*n5 - 
      12*n4*n5)*j[p4, n1, n2, n3, -1 + n4, 1 + n5, 1, 0, 2, 0, 1, 1, -1, 0, 
      1])/(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 34*d^2*n1 + 
     40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 44*d^2*n2 + 
     24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 280*n3 + 
     248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 152*n2*n3 + 
     68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
     16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 152*n1*n4 + 
     72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
     16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
     8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 
     8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 
     8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 
     24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 
     24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 
     8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-12 + 17*d - 5*d^2 + 2*n1 - 2*d*n1 - 16*n3 + 9*d*n3 + 2*n1*n3 - 4*n3^2 - 
      16*n4 + 9*d*n4 + 2*n1*n4 - 8*n3*n4 - 4*n4^2 - 4*n5 + 4*d*n5 - 4*n3*n5 - 
      4*n4*n5)*j[p4, n1, n2, n3, -1 + n4, 1 + n5, 2, 0, 0, 0, 1, 1, -1, 1, 
      1])/((-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 
      8*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((12 - 17*d + 5*d^2 - 2*n1 + 2*d*n1 + 16*n3 - 
      9*d*n3 - 2*n1*n3 + 4*n3^2 + 16*n4 - 9*d*n4 - 2*n1*n4 + 8*n3*n4 + 
      4*n4^2 + 4*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)*j[p4, n1, n2, n3, -1 + n4, 
      1 + n5, 2, 0, 1, 0, 0, 1, -1, 1, 1])/((-3 + d - n4 - n5)*
     (20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 8*n2 - 6*d*n2 - 4*n1*n2 + 
      20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 12*d*n4 + 8*n1*n4 + 
      8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((-12 + 17*d - 5*d^2 + 2*n1 - 2*d*n1 - 16*n3 + 9*d*n3 + 2*n1*n3 - 4*n3^2 - 
      16*n4 + 9*d*n4 + 2*n1*n4 - 8*n3*n4 - 4*n4^2 - 4*n5 + 4*d*n5 - 4*n3*n5 - 
      4*n4*n5)*j[p4, n1, n2, n3, -1 + n4, 1 + n5, 2, 0, 1, 0, 1, 1, -1, 0, 
      1])/((-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 
      8*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((-12 + 17*d - 5*d^2 + 2*n1 - 2*d*n1 - 16*n3 + 
      9*d*n3 + 2*n1*n3 - 4*n3^2 - 16*n4 + 9*d*n4 + 2*n1*n4 - 8*n3*n4 - 
      4*n4^2 - 4*n5 + 4*d*n5 - 4*n3*n5 - 4*n4*n5)*j[p4, n1, n2, n3, -1 + n4, 
      1 + n5, 2, 0, 1, 0, 1, 1, -1, 1, 0])/((-3 + d - n4 - n5)*
     (20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 8*n2 - 6*d*n2 - 4*n1*n2 + 
      20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 12*d*n4 + 8*n1*n4 + 
      8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((12 - 17*d + 5*d^2 - 2*n1 + 2*d*n1 + 16*n3 - 9*d*n3 - 2*n1*n3 + 4*n3^2 + 
      16*n4 - 9*d*n4 - 2*n1*n4 + 8*n3*n4 + 4*n4^2 + 16*n5 - 21*d*n5 + 
      5*d^2*n5 - 2*n1*n5 + 2*d*n1*n5 + 20*n3*n5 - 9*d*n3*n5 - 2*n1*n3*n5 + 
      4*n3^2*n5 + 20*n4*n5 - 9*d*n4*n5 - 2*n1*n4*n5 + 8*n3*n4*n5 + 
      4*n4^2*n5 + 4*n5^2 - 4*d*n5^2 + 4*n3*n5^2 + 4*n4*n5^2)*
     j[p4, n1, n2, n3, -1 + n4, 2 + n5, 1, 0, 1, 0, 1, 1, -1, 0, 1])/
    ((-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 8*n2 - 
      6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((-12 + 17*d - 5*d^2 + 2*n1 - 2*d*n1 - 16*n3 + 
      9*d*n3 + 2*n1*n3 - 4*n3^2 - 16*n4 + 9*d*n4 + 2*n1*n4 - 8*n3*n4 - 
      4*n4^2 - 16*n5 + 21*d*n5 - 5*d^2*n5 + 2*n1*n5 - 2*d*n1*n5 - 20*n3*n5 + 
      9*d*n3*n5 + 2*n1*n3*n5 - 4*n3^2*n5 - 20*n4*n5 + 9*d*n4*n5 + 
      2*n1*n4*n5 - 8*n3*n4*n5 - 4*n4^2*n5 - 4*n5^2 + 4*d*n5^2 - 4*n3*n5^2 - 
      4*n4*n5^2)*j[p4, n1, n2, n3, -1 + n4, 2 + n5, 1, 0, 1, 0, 1, 1, -1, 1, 
      0])/((-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 
      8*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + j[p4, n1, n2, n3, n4, n5, 0, 0, 1, 0, 1, 1, -1, 
     1, 2]/(-3 + d - n4 - n5) + j[p4, n1, n2, n3, n4, n5, 1, 0, 0, 0, 1, 1, 
     -1, 1, 2]/(-3 + d - n4 - n5) + 
   ((-44 + 48*d - 12*d^2 + 24*n1 - 8*d*n1 - 8*n2 + 6*d*n2 + 4*n1*n2 - 52*n3 + 
      22*d*n3 + 4*n1*n3 - 8*n2*n3 - 8*n3^2 - 56*n4 + 26*d*n4 + 4*n1*n4 - 
      8*n2*n4 - 20*n3*n4 - 12*n4^2 - 12*n5 + 8*d*n5 + 8*n1*n5 - 12*n3*n5 - 
      12*n4*n5)*j[p4, n1, n2, n3, n4, n5, 1, 0, 1, 0, 1, 0, 0, 1, 1])/
    (-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 34*d^2*n1 + 
     40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 44*d^2*n2 + 
     24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 280*n3 + 
     248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 152*n2*n3 + 
     68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
     16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 152*n1*n4 + 
     72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
     16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
     8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 
     8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 
     8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 
     24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 
     24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 
     8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   j[p4, n1, n2, n3, n4, n5, 1, 0, 1, 0, 1, 1, -1, 0, 2]/(-3 + d - n4 - n5) + 
   ((88 - 96*d + 24*d^2 - 48*n1 + 16*d*n1 + 16*n2 - 12*d*n2 - 8*n1*n2 + 
      104*n3 - 44*d*n3 - 8*n1*n3 + 16*n2*n3 + 16*n3^2 + 112*n4 - 52*d*n4 - 
      8*n1*n4 + 16*n2*n4 + 40*n3*n4 + 24*n4^2 + 24*n5 - 16*d*n5 - 16*n1*n5 + 
      24*n3*n5 + 24*n4*n5)*j[p4, n1, n2, n3, n4, n5, 1, 0, 1, 0, 1, 1, 0, 1, 
      1])/(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 34*d^2*n1 + 
     40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 44*d^2*n2 + 
     24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 280*n3 + 
     248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 152*n2*n3 + 
     68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
     16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 152*n1*n4 + 
     72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
     16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
     8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 
     8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 
     8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 
     24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 
     24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 
     8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   j[p4, n1, n2, n3, n4, n5, 2, 0, 0, 0, 1, 1, -1, 1, 1]/
    (2*(-3 + d - n4 - n5)) + j[p4, n1, n2, n3, n4, n5, 2, 0, 1, 0, 0, 1, -1, 
     1, 1]/(2*(-3 + d - n4 - n5)) + j[p4, n1, n2, n3, n4, n5, 2, 0, 1, 0, 1, 
     1, -1, 0, 1]/(2*(-3 + d - n4 - n5)) + 
   j[p4, n1, n2, n3, n4, n5, 2, 0, 1, 0, 1, 1, -1, 1, 0]/
    (2*(-3 + d - n4 - n5)) + ((-44 + 48*d - 12*d^2 + 24*n1 - 8*d*n1 - 8*n2 + 
      6*d*n2 + 4*n1*n2 - 52*n3 + 22*d*n3 + 4*n1*n3 - 8*n2*n3 - 8*n3^2 - 
      56*n4 + 26*d*n4 + 4*n1*n4 - 8*n2*n4 - 20*n3*n4 - 12*n4^2 - 12*n5 + 
      8*d*n5 + 8*n1*n5 - 12*n3*n5 - 12*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 
      0, -1, 1, 0, 2, 1, -1, 1, 1])/(-240 + 412*d - 214*d^2 + 35*d^3 - 
     88*n1 + 120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
     164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
     8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
     8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
     40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
     74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
     76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
     40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
     24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
     34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
     8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
     8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
     24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((276 - 474*d + 253*d^2 - 43*d^3 - 28*n1 + 12*d*n1 - 28*n1^2 + 12*d*n1^2 + 
      92*n2 - 112*d*n2 + 31*d^2*n2 - 32*n1*n2 + 12*d*n1*n2 - 4*n1^2*n2 + 
      8*n2^2 - 6*d*n2^2 - 4*n1*n2^2 + 416*n3 - 414*d*n3 + 100*d^2*n3 + 
      20*n1*n3 - 12*d*n1*n3 - 8*n1^2*n3 + 116*n2*n3 - 58*d*n2*n3 - 
      4*n1*n2*n3 + 8*n2^2*n3 + 156*n3^2 - 72*d*n3^2 + 8*n1*n3^2 + 
      24*n2*n3^2 + 16*n3^3 + 384*n4 - 384*d*n4 + 94*d^2*n4 + 48*n1*n4 - 
      24*d*n1*n4 - 8*n1^2*n4 + 112*n2*n4 - 56*d*n2*n4 + 8*n2^2*n4 + 
      276*n3*n4 - 132*d*n3*n4 + 24*n1*n3*n4 + 44*n2*n3*n4 + 44*n3^2*n4 + 
      116*n4^2 - 56*d*n4^2 + 16*n1*n4^2 + 20*n2*n4^2 + 36*n3*n4^2 + 8*n4^3 + 
      108*n5 - 144*d*n5 + 42*d^2*n5 - 8*n1*n5 - 8*n1^2*n5 + 20*n2*n5 - 
      16*d*n2*n5 - 8*n1*n2*n5 + 136*n3*n5 - 72*d*n3*n5 + 8*n1*n3*n5 + 
      20*n2*n3*n5 + 28*n3^2*n5 + 124*n4*n5 - 64*d*n4*n5 + 16*n1*n4*n5 + 
      20*n2*n4*n5 + 44*n3*n4*n5 + 16*n4^2*n5 + 8*n5^2 - 8*d*n5^2 + 
      8*n3*n5^2 + 8*n4*n5^2)*j[p4, n1, n2, n3, n4, 1 + n5, 0, 0, 1, -1, 1, 1, 
      -1, 1, 2])/((-3 + d - n4 - n5)*(-240 + 412*d - 214*d^2 + 35*d^3 - 
      88*n1 + 120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
      164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
      74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
      34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((120 - 90*d - d^2 + 7*d^3 - 188*n1 + 132*d*n1 - 
      24*d^2*n1 + 28*n1^2 - 12*d*n1^2 - 152*n2 + 222*d*n2 - 97*d^2*n2 + 
      12*d^3*n2 + 68*n1*n2 - 48*d*n1*n2 + 8*d^2*n1*n2 + 4*n1^2*n2 - 32*n2^2 + 
      32*d*n2^2 - 6*d^2*n2^2 + 16*n1*n2^2 - 4*d*n1*n2^2 + 52*n3 + 60*d*n3 - 
      34*d^2*n3 - 56*n1*n3 + 24*d*n1*n3 + 8*n1^2*n3 - 200*n2*n3 + 
      152*d*n2*n3 - 22*d^2*n2*n3 + 16*n1*n2*n3 - 4*d*n1*n2*n3 - 32*n2^2*n3 + 
      8*d*n2^2*n3 - 84*n3^2 + 48*d*n3^2 - 8*n1*n3^2 - 48*n2*n3^2 + 
      8*d*n2*n3^2 - 16*n3^3 + 252*n4 - 162*d*n4 + 20*d^2*n4 - 156*n1*n4 + 
      60*d*n1*n4 + 8*n1^2*n4 - 228*n2*n4 + 196*d*n2*n4 - 38*d^2*n2*n4 + 
      24*n1*n2*n4 - 12*d*n1*n2*n4 - 40*n2^2*n4 + 14*d*n2^2*n4 + 
      4*n1*n2^2*n4 + 60*n3*n4 + 6*d*n3*n4 - 36*n1*n3*n4 - 132*n2*n3*n4 + 
      42*d*n2*n3*n4 + 4*n1*n2*n3*n4 - 8*n2^2*n3*n4 - 20*n3^2*n4 - 
      8*n2*n3^2*n4 + 160*n4^2 - 58*d*n4^2 - 28*n1*n4^2 - 88*n2*n4^2 + 
      38*d*n2*n4^2 + 4*n1*n2*n4^2 - 8*n2^2*n4^2 + 24*n3*n4^2 - 
      20*n2*n3*n4^2 + 28*n4^3 - 12*n2*n4^3 - 108*n5 + 304*d*n5 - 196*d^2*n5 + 
      35*d^3*n5 - 224*n1*n5 + 168*d*n1*n5 - 34*d^2*n1*n5 + 48*n1^2*n5 - 
      12*d*n1^2*n5 + 8*n1^3*n5 - 212*n2*n5 + 246*d*n2*n5 - 64*d^2*n2*n5 + 
      68*n1*n2*n5 - 16*d*n1*n2*n5 + 16*n1^2*n2*n5 - 24*n2^2*n5 + 
      18*d*n2^2*n5 + 12*n1*n2^2*n5 - 152*n3*n5 + 218*d*n3*n5 - 54*d^2*n3*n5 - 
      164*n1*n3*n5 + 64*d*n1*n3*n5 - 8*n1^2*n3*n5 - 236*n2*n3*n5 + 
      102*d*n2*n3*n5 - 20*n1*n2*n3*n5 - 24*n2^2*n3*n5 - 44*n3^2*n5 + 
      16*d*n3^2*n5 - 16*n1*n3^2*n5 - 24*n2*n3^2*n5 - 140*n4*n5 + 
      242*d*n4*n5 - 74*d^2*n4*n5 - 204*n1*n4*n5 + 72*d*n1*n4*n5 - 
      8*n1^2*n4*n5 - 260*n2*n4*n5 + 122*d*n2*n4*n5 - 12*n1*n2*n4*n5 - 
      24*n2^2*n4*n5 - 84*n3*n4*n5 + 60*d*n3*n4*n5 - 40*n1*n3*n4*n5 - 
      72*n2*n3*n4*n5 - 8*n3^2*n4*n5 - 40*n4^2*n5 + 44*d*n4^2*n5 - 
      24*n1*n4^2*n5 - 48*n2*n4^2*n5 - 16*n3*n4^2*n5 - 8*n4^3*n5 - 60*n5^2 + 
      104*d*n5^2 - 34*d^2*n5^2 - 40*n1*n5^2 + 16*d*n1*n5^2 + 8*n1^2*n5^2 - 
      36*n2*n5^2 + 28*d*n2*n5^2 + 16*n1*n2*n5^2 - 68*n3*n5^2 + 44*d*n3*n5^2 - 
      24*n1*n3*n5^2 - 36*n2*n3*n5^2 - 8*n3^2*n5^2 - 76*n4*n5^2 + 
      52*d*n4*n5^2 - 24*n1*n4*n5^2 - 36*n2*n4*n5^2 - 24*n3*n4*n5^2 - 
      16*n4^2*n5^2 - 8*n5^3 + 8*d*n5^3 - 8*n3*n5^3 - 8*n4*n5^3)*
     j[p4, n1, n2, n3, n4, 1 + n5, 0, 0, 1, 0, 1, 1, -1, 1, 1])/
    ((-3 + d - n4 - n5)*(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 
      34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 
      44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 
      280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 
      152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 
      16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 
      152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 
      24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 
      40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 
      24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 
      16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((-276 + 474*d - 253*d^2 + 43*d^3 + 28*n1 - 12*d*n1 + 
      28*n1^2 - 12*d*n1^2 - 92*n2 + 112*d*n2 - 31*d^2*n2 + 32*n1*n2 - 
      12*d*n1*n2 + 4*n1^2*n2 - 8*n2^2 + 6*d*n2^2 + 4*n1*n2^2 - 416*n3 + 
      414*d*n3 - 100*d^2*n3 - 20*n1*n3 + 12*d*n1*n3 + 8*n1^2*n3 - 116*n2*n3 + 
      58*d*n2*n3 + 4*n1*n2*n3 - 8*n2^2*n3 - 156*n3^2 + 72*d*n3^2 - 
      8*n1*n3^2 - 24*n2*n3^2 - 16*n3^3 - 384*n4 + 384*d*n4 - 94*d^2*n4 - 
      48*n1*n4 + 24*d*n1*n4 + 8*n1^2*n4 - 112*n2*n4 + 56*d*n2*n4 - 
      8*n2^2*n4 - 276*n3*n4 + 132*d*n3*n4 - 24*n1*n3*n4 - 44*n2*n3*n4 - 
      44*n3^2*n4 - 116*n4^2 + 56*d*n4^2 - 16*n1*n4^2 - 20*n2*n4^2 - 
      36*n3*n4^2 - 8*n4^3 - 108*n5 + 144*d*n5 - 42*d^2*n5 + 8*n1*n5 + 
      8*n1^2*n5 - 20*n2*n5 + 16*d*n2*n5 + 8*n1*n2*n5 - 136*n3*n5 + 
      72*d*n3*n5 - 8*n1*n3*n5 - 20*n2*n3*n5 - 28*n3^2*n5 - 124*n4*n5 + 
      64*d*n4*n5 - 16*n1*n4*n5 - 20*n2*n4*n5 - 44*n3*n4*n5 - 16*n4^2*n5 - 
      8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)*j[p4, n1, n2, n3, n4, 
      1 + n5, 0, 0, 1, 0, 1, 1, -1, 1, 2])/((-3 + d - n4 - n5)*
     (-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 34*d^2*n1 + 
      40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 44*d^2*n2 + 
      24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 280*n3 + 
      248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 152*n2*n3 + 
      68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
      16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 152*n1*n4 + 
      72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
      16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
      8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 
      16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 16*n1*n5 + 
      16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
      96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
      104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
      16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((44 - 48*d + 12*d^2 - 24*n1 + 8*d*n1 + 8*n2 - 6*d*n2 - 4*n1*n2 + 52*n3 - 
      22*d*n3 - 4*n1*n3 + 8*n2*n3 + 8*n3^2 + 56*n4 - 26*d*n4 - 4*n1*n4 + 
      8*n2*n4 + 20*n3*n4 + 12*n4^2 + 12*n5 - 8*d*n5 - 8*n1*n5 + 12*n3*n5 + 
      12*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 0, 0, 1, 0, 1, 1, 0, 1, 1])/
    (-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 34*d^2*n1 + 
     40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 44*d^2*n2 + 
     24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 280*n3 + 
     248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 152*n2*n3 + 
     68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
     16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 152*n1*n4 + 
     72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
     16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
     8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 
     8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 
     8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 
     24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 
     24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 
     8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((44 - 48*d + 12*d^2 - 24*n1 + 8*d*n1 + 8*n2 - 6*d*n2 - 4*n1*n2 + 52*n3 - 
      22*d*n3 - 4*n1*n3 + 8*n2*n3 + 8*n3^2 + 56*n4 - 26*d*n4 - 4*n1*n4 + 
      8*n2*n4 + 20*n3*n4 + 12*n4^2 + 12*n5 - 8*d*n5 - 8*n1*n5 + 12*n3*n5 + 
      12*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 0, 0, 1, 0, 1, 2, -2, 1, 1])/
    (-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 34*d^2*n1 + 
     40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 44*d^2*n2 + 
     24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 280*n3 + 
     248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 152*n2*n3 + 
     68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
     16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 152*n1*n4 + 
     72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
     16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
     8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 
     8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 
     8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 
     24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 
     24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 
     8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-44 + 48*d - 12*d^2 + 24*n1 - 8*d*n1 - 8*n2 + 6*d*n2 + 4*n1*n2 - 52*n3 + 
      22*d*n3 + 4*n1*n3 - 8*n2*n3 - 8*n3^2 - 56*n4 + 26*d*n4 + 4*n1*n4 - 
      8*n2*n4 - 20*n3*n4 - 12*n4^2 - 12*n5 + 8*d*n5 + 8*n1*n5 - 12*n3*n5 - 
      12*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 0, 0, 1, 0, 1, 2, -1, 1, 1])/
    (-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 34*d^2*n1 + 
     40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 44*d^2*n2 + 
     24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 280*n3 + 
     248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 152*n2*n3 + 
     68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
     16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 152*n1*n4 + 
     72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
     16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
     8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 
     8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 
     8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 
     24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 
     24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 
     8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((44 - 48*d + 12*d^2 - 24*n1 + 8*d*n1 + 8*n2 - 6*d*n2 - 4*n1*n2 + 52*n3 - 
      22*d*n3 - 4*n1*n3 + 8*n2*n3 + 8*n3^2 + 56*n4 - 26*d*n4 - 4*n1*n4 + 
      8*n2*n4 + 20*n3*n4 + 12*n4^2 + 12*n5 - 8*d*n5 - 8*n1*n5 + 12*n3*n5 + 
      12*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 0, 0, 1, 0, 2, 1, -2, 1, 1])/
    (-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 34*d^2*n1 + 
     40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 44*d^2*n2 + 
     24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 280*n3 + 
     248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 152*n2*n3 + 
     68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
     16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 152*n1*n4 + 
     72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
     16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
     8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 
     8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 
     8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 
     24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 
     24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 
     8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-44 + 48*d - 12*d^2 + 24*n1 - 8*d*n1 - 8*n2 + 6*d*n2 + 4*n1*n2 - 52*n3 + 
      22*d*n3 + 4*n1*n3 - 8*n2*n3 - 8*n3^2 - 56*n4 + 26*d*n4 + 4*n1*n4 - 
      8*n2*n4 - 20*n3*n4 - 12*n4^2 - 12*n5 + 8*d*n5 + 8*n1*n5 - 12*n3*n5 - 
      12*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 0, 0, 1, 0, 2, 1, -1, 1, 1])/
    (-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 34*d^2*n1 + 
     40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 44*d^2*n2 + 
     24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 280*n3 + 
     248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 152*n2*n3 + 
     68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
     16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 152*n1*n4 + 
     72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
     16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
     8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 
     8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 
     8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 
     24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 
     24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 
     8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((44 - 48*d + 12*d^2 - 24*n1 + 8*d*n1 + 8*n2 - 6*d*n2 - 4*n1*n2 + 52*n3 - 
      22*d*n3 - 4*n1*n3 + 8*n2*n3 + 8*n3^2 + 56*n4 - 26*d*n4 - 4*n1*n4 + 
      8*n2*n4 + 20*n3*n4 + 12*n4^2 + 12*n5 - 8*d*n5 - 8*n1*n5 + 12*n3*n5 + 
      12*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 0, 0, 2, 0, 1, 1, -2, 1, 1])/
    (-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 34*d^2*n1 + 
     40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 44*d^2*n2 + 
     24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 280*n3 + 
     248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 152*n2*n3 + 
     68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
     16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 152*n1*n4 + 
     72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
     16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
     8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 
     8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 
     8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 
     24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 
     24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 
     8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-88 + 96*d - 24*d^2 + 48*n1 - 16*d*n1 - 16*n2 + 12*d*n2 + 8*n1*n2 - 
      104*n3 + 44*d*n3 + 8*n1*n3 - 16*n2*n3 - 16*n3^2 - 112*n4 + 52*d*n4 + 
      8*n1*n4 - 16*n2*n4 - 40*n3*n4 - 24*n4^2 - 24*n5 + 16*d*n5 + 16*n1*n5 - 
      24*n3*n5 - 24*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 0, 0, 2, 0, 1, 1, 
      -1, 1, 1])/(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 
     34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 
     44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 
     280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 
     152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 
     16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 
     152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 
     24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 
     40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 
     24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 
     16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
     96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
     104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
     16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((44 - 48*d + 12*d^2 - 24*n1 + 8*d*n1 + 8*n2 - 6*d*n2 - 4*n1*n2 + 52*n3 - 
      22*d*n3 - 4*n1*n3 + 8*n2*n3 + 8*n3^2 + 56*n4 - 26*d*n4 - 4*n1*n4 + 
      8*n2*n4 + 20*n3*n4 + 12*n4^2 + 12*n5 - 8*d*n5 - 8*n1*n5 + 12*n3*n5 + 
      12*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 1, -1, 0, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 8*n2 - 
      6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((-44 + 48*d - 12*d^2 + 24*n1 - 8*d*n1 - 8*n2 + 
      6*d*n2 + 4*n1*n2 - 52*n3 + 22*d*n3 + 4*n1*n3 - 8*n2*n3 - 8*n3^2 - 
      56*n4 + 26*d*n4 + 4*n1*n4 - 8*n2*n4 - 20*n3*n4 - 12*n4^2 - 12*n5 + 
      8*d*n5 + 8*n1*n5 - 12*n3*n5 - 12*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 
      1, -1, 0, 0, 1, 2, -1, 1, 1])/((-3 + d - n4 - n5)*
     (20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 8*n2 - 6*d*n2 - 4*n1*n2 + 
      20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 12*d*n4 + 8*n1*n4 + 
      8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((-12 + 17*d - 5*d^2 + 2*n1 - 2*d*n1 - 16*n3 + 9*d*n3 + 2*n1*n3 - 4*n3^2 - 
      16*n4 + 9*d*n4 + 2*n1*n4 - 8*n3*n4 - 4*n4^2 - 4*n5 + 4*d*n5 - 4*n3*n5 - 
      4*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 1, -1, 0, 0, 2, 1, -1, 1, 1])/
    ((-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 8*n2 - 
      6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((44 - 48*d + 12*d^2 - 24*n1 + 8*d*n1 + 8*n2 - 
      6*d*n2 - 4*n1*n2 + 52*n3 - 22*d*n3 - 4*n1*n3 + 8*n2*n3 + 8*n3^2 + 
      56*n4 - 26*d*n4 - 4*n1*n4 + 8*n2*n4 + 20*n3*n4 + 12*n4^2 + 12*n5 - 
      8*d*n5 - 8*n1*n5 + 12*n3*n5 + 12*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 
      1, -1, 1, 0, 1, 0, 0, 1, 1])/(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 
     120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
     164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
     8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
     8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
     40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
     74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
     76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
     40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
     24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
     34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
     8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
     8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
     24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   j[p4, n1, n2, n3, n4, 1 + n5, 1, -1, 1, 0, 1, 1, -1, 0, 2]/
    (-3 + d - n4 - n5) + ((-44 + 48*d - 12*d^2 + 24*n1 - 8*d*n1 - 8*n2 + 
      6*d*n2 + 4*n1*n2 - 52*n3 + 22*d*n3 + 4*n1*n3 - 8*n2*n3 - 8*n3^2 - 
      56*n4 + 26*d*n4 + 4*n1*n4 - 8*n2*n4 - 20*n3*n4 - 12*n4^2 - 12*n5 + 
      8*d*n5 + 8*n1*n5 - 12*n3*n5 - 12*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 
      1, -1, 1, 0, 1, 1, 0, 0, 1])/((-3 + d - n4 - n5)*
     (20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 8*n2 - 6*d*n2 - 4*n1*n2 + 
      20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 12*d*n4 + 8*n1*n4 + 
      8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((792 - 1172*d + 552*d^2 - 84*d^3 - 344*n1 + 216*d*n1 - 32*d^2*n1 - 
      48*n1^2 + 16*d*n1^2 + 232*n2 - 260*d*n2 + 66*d^2*n2 - 104*n1*n2 + 
      32*d*n1*n2 - 8*n1^2*n2 + 16*n2^2 - 12*d*n2^2 - 8*n1*n2^2 + 1024*n3 - 
      856*d*n3 + 178*d^2*n3 - 16*n1*n3 - 8*n1^2*n3 + 264*n2*n3 - 
      112*d*n2*n3 + 16*n2^2*n3 + 248*n3^2 - 100*d*n3^2 + 8*n1*n3^2 + 
      32*n2*n3^2 + 16*n3^3 + 1184*n4 - 1052*d*n4 + 230*d^2*n4 - 56*n1*n4 + 
      8*d*n1*n4 - 8*n1^2*n4 + 288*n2*n4 - 132*d*n2*n4 - 8*n1*n2*n4 + 
      16*n2^2*n4 + 680*n3*n4 - 280*d*n3*n4 + 16*n1*n3*n4 + 88*n2*n3*n4 + 
      72*n3^2*n4 + 440*n4^2 - 188*d*n4^2 + 8*n1*n4^2 + 56*n2*n4^2 + 
      104*n3*n4^2 + 48*n4^3 + 392*n5 - 420*d*n5 + 104*d^2*n5 - 216*n1*n5 + 
      72*d*n1*n5 - 16*n1^2*n5 + 56*n2*n5 - 40*d*n2*n5 - 32*n1*n2*n5 + 
      448*n3*n5 - 188*d*n3*n5 - 8*n1*n3*n5 + 56*n2*n3*n5 + 56*n3^2*n5 + 
      488*n4*n5 - 220*d*n4*n5 - 24*n1*n4*n5 + 56*n2*n4*n5 + 152*n3*n4*n5 + 
      96*n4^2*n5 + 48*n5^2 - 32*d*n5^2 - 32*n1*n5^2 + 48*n3*n5^2 + 
      48*n4*n5^2)*j[p4, n1, n2, n3, n4, 1 + n5, 1, -1, 1, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 
      34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 
      44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 
      280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 
      152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 
      16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 
      152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 
      24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 
      40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 
      24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 
      16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((-12 + 17*d - 5*d^2 + 2*n1 - 2*d*n1 - 16*n3 + 9*d*n3 + 
      2*n1*n3 - 4*n3^2 - 16*n4 + 9*d*n4 + 2*n1*n4 - 8*n3*n4 - 4*n4^2 - 4*n5 + 
      4*d*n5 - 4*n3*n5 - 4*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 1, -1, 1, 0, 
      2, 0, -1, 1, 1])/((-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 
      4*d*n1 - 4*n1^2 + 8*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 
      8*n2*n3 + 24*n4 - 12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 
      4*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((-12 + 17*d - 5*d^2 + 2*n1 - 2*d*n1 - 16*n3 + 9*d*n3 + 2*n1*n3 - 4*n3^2 - 
      16*n4 + 9*d*n4 + 2*n1*n4 - 8*n3*n4 - 4*n4^2 - 4*n5 + 4*d*n5 - 4*n3*n5 - 
      4*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 1, -1, 1, 0, 2, 1, -1, 0, 1])/
    ((-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 8*n2 - 
      6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((-22 + 24*d - 6*d^2 + 12*n1 - 4*d*n1 - 4*n2 + 
      3*d*n2 + 2*n1*n2 - 26*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 
      28*n4 + 13*d*n4 + 2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 6*n5 + 
      4*d*n5 + 4*n1*n5 - 6*n3*n5 - 6*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 
      -1, 2, 0, 1, 0, -1, 1, 1])/((-3 + d - n4 - n5)*
     (20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 8*n2 - 6*d*n2 - 4*n1*n2 + 
      20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 12*d*n4 + 8*n1*n4 + 
      8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((-22 + 24*d - 6*d^2 + 12*n1 - 4*d*n1 - 4*n2 + 3*d*n2 + 2*n1*n2 - 26*n3 + 
      11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 28*n4 + 13*d*n4 + 2*n1*n4 - 
      4*n2*n4 - 10*n3*n4 - 6*n4^2 - 6*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 
      6*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 1, -1, 2, 0, 1, 1, -1, 0, 1])/
    ((-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 8*n2 - 
      6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((276 - 474*d + 253*d^2 - 43*d^3 - 28*n1 + 
      12*d*n1 - 28*n1^2 + 12*d*n1^2 + 92*n2 - 112*d*n2 + 31*d^2*n2 - 
      32*n1*n2 + 12*d*n1*n2 - 4*n1^2*n2 + 8*n2^2 - 6*d*n2^2 - 4*n1*n2^2 + 
      416*n3 - 414*d*n3 + 100*d^2*n3 + 20*n1*n3 - 12*d*n1*n3 - 8*n1^2*n3 + 
      116*n2*n3 - 58*d*n2*n3 - 4*n1*n2*n3 + 8*n2^2*n3 + 156*n3^2 - 
      72*d*n3^2 + 8*n1*n3^2 + 24*n2*n3^2 + 16*n3^3 + 384*n4 - 384*d*n4 + 
      94*d^2*n4 + 48*n1*n4 - 24*d*n1*n4 - 8*n1^2*n4 + 112*n2*n4 - 
      56*d*n2*n4 + 8*n2^2*n4 + 276*n3*n4 - 132*d*n3*n4 + 24*n1*n3*n4 + 
      44*n2*n3*n4 + 44*n3^2*n4 + 116*n4^2 - 56*d*n4^2 + 16*n1*n4^2 + 
      20*n2*n4^2 + 36*n3*n4^2 + 8*n4^3 + 108*n5 - 144*d*n5 + 42*d^2*n5 - 
      8*n1*n5 - 8*n1^2*n5 + 20*n2*n5 - 16*d*n2*n5 - 8*n1*n2*n5 + 136*n3*n5 - 
      72*d*n3*n5 + 8*n1*n3*n5 + 20*n2*n3*n5 + 28*n3^2*n5 + 124*n4*n5 - 
      64*d*n4*n5 + 16*n1*n4*n5 + 20*n2*n4*n5 + 44*n3*n4*n5 + 16*n4^2*n5 + 
      8*n5^2 - 8*d*n5^2 + 8*n3*n5^2 + 8*n4*n5^2)*j[p4, n1, n2, n3, n4, 
      1 + n5, 1, 0, 0, -1, 1, 1, -1, 1, 2])/((-3 + d - n4 - n5)*
     (-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 34*d^2*n1 + 
      40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 44*d^2*n2 + 
      24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 280*n3 + 
      248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 152*n2*n3 + 
      68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
      16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 152*n1*n4 + 
      72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
      16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
      8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 
      16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 16*n1*n5 + 
      16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
      96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
      104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
      16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-44 + 48*d - 12*d^2 + 24*n1 - 8*d*n1 - 8*n2 + 6*d*n2 + 4*n1*n2 - 52*n3 + 
      22*d*n3 + 4*n1*n3 - 8*n2*n3 - 8*n3^2 - 56*n4 + 26*d*n4 + 4*n1*n4 - 
      8*n2*n4 - 20*n3*n4 - 12*n4^2 - 12*n5 + 8*d*n5 + 8*n1*n5 - 12*n3*n5 - 
      12*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 0, -1, 2, 1, -1, 1, 1])/
    (-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 34*d^2*n1 + 
     40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 44*d^2*n2 + 
     24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 280*n3 + 
     248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 152*n2*n3 + 
     68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
     16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 152*n1*n4 + 
     72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
     16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
     8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 
     8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 
     8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 
     24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 
     24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 
     8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-1056 + 1492*d - 696*d^2 + 107*d^3 + 888*n1 - 936*d*n1 + 356*d^2*n1 - 
      50*d^3*n1 + 144*n1^2 - 44*d*n1^2 - 16*n1^3 + 8*d*n1^3 - 2064*n2 + 
      3136*d*n2 - 1474*d^2*n2 + 219*d^3*n2 + 544*n1*n2 - 236*d*n1*n2 + 
      18*d^2*n1*n2 + 112*n1^2*n2 - 36*d*n1^2*n2 + 8*n1^3*n2 - 512*n2^2 + 
      596*d*n2^2 - 150*d^2*n2^2 + 168*n1*n2^2 - 48*d*n1*n2^2 + 24*n1^2*n2^2 - 
      32*n2^3 + 24*d*n2^3 + 16*n1*n2^3 + 1104*n3 - 2944*d*n3 + 1874*d^2*n3 - 
      349*d^3*n3 + 224*n1*n3 - 492*d*n1*n3 + 164*d^2*n1*n3 - 192*n1^2*n3 + 
      76*d*n1^2*n3 - 32*n1^3*n3 - 1800*n2*n3 + 1144*d*n2*n3 - 160*d^2*n2*n3 - 
      336*n1*n2*n3 + 116*d*n1*n2*n3 - 56*n1^2*n2*n3 - 512*n2^2*n3 + 
      192*d*n2^2*n3 - 48*n1*n2^2*n3 - 32*n2^3*n3 + 2936*n3^2 - 2896*d*n3^2 + 
      694*d^2*n3^2 + 592*n1*n3^2 - 292*d*n1*n3^2 + 360*n2*n3^2 - 
      216*d*n2*n3^2 + 32*n1*n2*n3^2 + 840*n3^3 - 384*d*n3^3 + 96*n1*n3^3 + 
      96*n2*n3^3 + 64*n3^4 - 1984*n4 + 2168*d*n4 - 738*d^2*n4 + 74*d^3*n4 + 
      528*n1*n4 - 508*d*n1*n4 + 126*d^2*n1*n4 + 48*n1^2*n4 - 16*d*n1^2*n4 - 
      8*n1^3*n4 - 3016*n2*n4 + 2624*d*n2*n4 - 556*d^2*n2*n4 - 16*n1*n2*n4 + 
      28*d*n1*n2*n4 + 8*n1^2*n2*n4 - 624*n2^2*n4 + 280*d*n2^2*n4 - 
      32*n2^3*n4 + 2128*n3*n4 - 2492*d*n3*n4 + 672*d^2*n3*n4 + 712*n1*n3*n4 - 
      392*d*n1*n3*n4 + 16*n1^2*n3*n4 - 632*n2*n3*n4 + 160*d*n2*n3*n4 - 
      112*n2^2*n3*n4 + 1840*n3^2*n4 - 868*d*n3^2*n4 + 232*n1*n3^2*n4 + 
      152*n2*n3^2*n4 + 232*n3^3*n4 - 1256*n4^2 + 984*d*n4^2 - 186*d^2*n4^2 + 
      176*n1*n4^2 - 92*d*n1*n4^2 + 16*n1^2*n4^2 - 1072*n2*n4^2 + 
      448*d*n2*n4^2 - 16*n1*n2*n4^2 - 112*n2^2*n4^2 + 648*n3*n4^2 - 
      348*d*n3*n4^2 + 152*n1*n3*n4^2 - 64*n2*n3*n4^2 + 248*n3^2*n4^2 - 
      368*n4^3 + 152*d*n4^3 + 16*n1*n4^3 - 120*n2*n4^3 + 40*n3*n4^3 - 
      40*n4^4 - 376*n5 + 348*d*n5 - 82*d^2*n5 + 456*n1*n5 - 324*d*n1*n5 + 
      60*d^2*n1*n5 + 64*n1^2*n5 - 8*d*n1^2*n5 - 856*n2*n5 + 1000*d*n2*n5 - 
      258*d^2*n2*n5 + 272*n1*n2*n5 - 56*d*n1*n2*n5 + 24*n1^2*n2*n5 - 
      112*n2^2*n5 + 92*d*n2^2*n5 + 40*n1*n2^2*n5 + 712*n3*n5 - 1232*d*n3*n5 + 
      390*d^2*n3*n5 - 80*n1*n3*n5 - 44*d*n1*n3*n5 - 48*n1^2*n3*n5 - 
      784*n2*n3*n5 + 256*d*n2*n3*n5 - 96*n1*n2*n3*n5 - 112*n2^2*n3*n5 + 
      1272*n3^2*n5 - 624*d*n3^2*n5 + 112*n1*n3^2*n5 + 72*n2*n3^2*n5 + 
      184*n3^3*n5 - 728*n4*n5 + 556*d*n4*n5 - 100*d^2*n4*n5 + 248*n1*n4*n5 - 
      116*d*n1*n4*n5 + 8*n1^2*n4*n5 - 1064*n2*n4*n5 + 484*d*n2*n4*n5 + 
      8*n1*n2*n4*n5 - 112*n2^2*n4*n5 + 944*n3*n4*n5 - 528*d*n3*n4*n5 + 
      128*n1*n3*n4*n5 - 136*n2*n3*n4*n5 + 392*n3^2*n4*n5 - 432*n4^2*n5 + 
      184*d*n4^2*n5 + 48*n1*n4^2*n5 - 208*n2*n4^2*n5 + 128*n3*n4^2*n5 - 
      80*n4^3*n5 - 24*n5^2 + 8*d*n5^2 + 48*n1*n5^2 - 16*d*n1*n5^2 - 
      88*n2*n5^2 + 72*d*n2*n5^2 + 32*n1*n2*n5^2 + 104*n3*n5^2 - 
      104*d*n3*n5^2 - 32*n1*n3*n5^2 - 88*n2*n3*n5^2 + 128*n3^2*n5^2 - 
      64*n4*n5^2 + 32*d*n4*n5^2 + 32*n1*n4*n5^2 - 88*n2*n4*n5^2 + 
      88*n3*n4*n5^2 - 40*n4^2*n5^2)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 0, 0, 
      1, 1, -1, 1, 1])/(2*(-3 + d - n4 - n5)*(-240 + 412*d - 214*d^2 + 
      35*d^3 - 88*n1 + 120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 
      136*n2 + 164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 
      12*d*n2^2 + 8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 
      64*d*n1*n3 - 8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 
      16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 
      316*d*n4 - 74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
      34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((-276 + 474*d - 253*d^2 + 43*d^3 + 28*n1 - 12*d*n1 + 
      28*n1^2 - 12*d*n1^2 - 92*n2 + 112*d*n2 - 31*d^2*n2 + 32*n1*n2 - 
      12*d*n1*n2 + 4*n1^2*n2 - 8*n2^2 + 6*d*n2^2 + 4*n1*n2^2 - 416*n3 + 
      414*d*n3 - 100*d^2*n3 - 20*n1*n3 + 12*d*n1*n3 + 8*n1^2*n3 - 116*n2*n3 + 
      58*d*n2*n3 + 4*n1*n2*n3 - 8*n2^2*n3 - 156*n3^2 + 72*d*n3^2 - 
      8*n1*n3^2 - 24*n2*n3^2 - 16*n3^3 - 384*n4 + 384*d*n4 - 94*d^2*n4 - 
      48*n1*n4 + 24*d*n1*n4 + 8*n1^2*n4 - 112*n2*n4 + 56*d*n2*n4 - 
      8*n2^2*n4 - 276*n3*n4 + 132*d*n3*n4 - 24*n1*n3*n4 - 44*n2*n3*n4 - 
      44*n3^2*n4 - 116*n4^2 + 56*d*n4^2 - 16*n1*n4^2 - 20*n2*n4^2 - 
      36*n3*n4^2 - 8*n4^3 - 108*n5 + 144*d*n5 - 42*d^2*n5 + 8*n1*n5 + 
      8*n1^2*n5 - 20*n2*n5 + 16*d*n2*n5 + 8*n1*n2*n5 - 136*n3*n5 + 
      72*d*n3*n5 - 8*n1*n3*n5 - 20*n2*n3*n5 - 28*n3^2*n5 - 124*n4*n5 + 
      64*d*n4*n5 - 16*n1*n4*n5 - 20*n2*n4*n5 - 44*n3*n4*n5 - 16*n4^2*n5 - 
      8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)*j[p4, n1, n2, n3, n4, 
      1 + n5, 1, 0, 0, 0, 1, 1, -1, 1, 2])/((-3 + d - n4 - n5)*
     (-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 34*d^2*n1 + 
      40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 44*d^2*n2 + 
      24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 280*n3 + 
      248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 152*n2*n3 + 
      68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
      16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 152*n1*n4 + 
      72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
      16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
      8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 
      16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 16*n1*n5 + 
      16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
      96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
      104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
      16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-276 + 474*d - 253*d^2 + 43*d^3 + 28*n1 - 12*d*n1 + 28*n1^2 - 
      12*d*n1^2 - 92*n2 + 112*d*n2 - 31*d^2*n2 + 32*n1*n2 - 12*d*n1*n2 + 
      4*n1^2*n2 - 8*n2^2 + 6*d*n2^2 + 4*n1*n2^2 - 416*n3 + 414*d*n3 - 
      100*d^2*n3 - 20*n1*n3 + 12*d*n1*n3 + 8*n1^2*n3 - 116*n2*n3 + 
      58*d*n2*n3 + 4*n1*n2*n3 - 8*n2^2*n3 - 156*n3^2 + 72*d*n3^2 - 
      8*n1*n3^2 - 24*n2*n3^2 - 16*n3^3 - 384*n4 + 384*d*n4 - 94*d^2*n4 - 
      48*n1*n4 + 24*d*n1*n4 + 8*n1^2*n4 - 112*n2*n4 + 56*d*n2*n4 - 
      8*n2^2*n4 - 276*n3*n4 + 132*d*n3*n4 - 24*n1*n3*n4 - 44*n2*n3*n4 - 
      44*n3^2*n4 - 116*n4^2 + 56*d*n4^2 - 16*n1*n4^2 - 20*n2*n4^2 - 
      36*n3*n4^2 - 8*n4^3 - 108*n5 + 144*d*n5 - 42*d^2*n5 + 8*n1*n5 + 
      8*n1^2*n5 - 20*n2*n5 + 16*d*n2*n5 + 8*n1*n2*n5 - 136*n3*n5 + 
      72*d*n3*n5 - 8*n1*n3*n5 - 20*n2*n3*n5 - 28*n3^2*n5 - 124*n4*n5 + 
      64*d*n4*n5 - 16*n1*n4*n5 - 20*n2*n4*n5 - 44*n3*n4*n5 - 16*n4^2*n5 - 
      8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)*j[p4, n1, n2, n3, n4, 
      1 + n5, 1, 0, 0, 0, 1, 1, -1, 2, 1])/((-3 + d - n4 - n5)*
     (-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 34*d^2*n1 + 
      40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 44*d^2*n2 + 
      24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 280*n3 + 
      248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 152*n2*n3 + 
      68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
      16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 152*n1*n4 + 
      72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
      16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
      8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 
      16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 16*n1*n5 + 
      16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
      96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
      104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
      16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-12*d + 5*d^2 + 24*n1 - 8*d*n1 - 4*n1^2 - 4*d*n3 + 8*n1*n3 - 4*d*n4 + 
      8*n1*n4 - 4*d*n5 + 8*n1*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 0, 0, 
      1, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 
      4*d*n1 - 4*n1^2 + 8*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 
      8*n2*n3 + 24*n4 - 12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 
      4*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((-792 + 1316*d - 672*d^2 + 109*d^3 + 56*n1 + 24*d*n1 - 18*d^2*n1 + 
      48*n1^2 - 20*d*n1^2 + 8*n1^3 - 232*n2 + 284*d*n2 - 76*d^2*n2 + 
      56*n1*n2 - 16*d*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 
      1024*n3 + 928*d*n3 - 208*d^2*n3 - 128*n1*n3 + 64*d*n1*n3 - 264*n2*n3 + 
      120*d*n2*n3 - 16*n1*n2*n3 - 16*n2^2*n3 - 248*n3^2 + 108*d*n3^2 - 
      24*n1*n3^2 - 32*n2*n3^2 - 16*n3^3 - 1184*n4 + 1124*d*n4 - 260*d^2*n4 - 
      88*n1*n4 + 56*d*n1*n4 - 288*n2*n4 + 140*d*n2*n4 - 8*n1*n2*n4 - 
      16*n2^2*n4 - 680*n3*n4 + 296*d*n3*n4 - 48*n1*n3*n4 - 88*n2*n3*n4 - 
      72*n3^2*n4 - 440*n4^2 + 196*d*n4^2 - 24*n1*n4^2 - 56*n2*n4^2 - 
      104*n3*n4^2 - 48*n4^3 - 392*n5 + 492*d*n5 - 134*d^2*n5 + 72*n1*n5 - 
      8*d*n1*n5 + 8*n1^2*n5 - 56*n2*n5 + 48*d*n2*n5 + 16*n1*n2*n5 - 
      448*n3*n5 + 204*d*n3*n5 - 24*n1*n3*n5 - 56*n2*n3*n5 - 56*n3^2*n5 - 
      488*n4*n5 + 236*d*n4*n5 - 8*n1*n4*n5 - 56*n2*n4*n5 - 152*n3*n4*n5 - 
      96*n4^2*n5 - 48*n5^2 + 40*d*n5^2 + 16*n1*n5^2 - 48*n3*n5^2 - 
      48*n4*n5^2)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 0, 0, 1, 2, -2, 1, 1])/
    (2*(-3 + d - n4 - n5)*(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 
      120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
      164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
      74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
      34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((792 - 1316*d + 672*d^2 - 109*d^3 - 56*n1 - 24*d*n1 + 
      18*d^2*n1 - 48*n1^2 + 20*d*n1^2 - 8*n1^3 + 232*n2 - 284*d*n2 + 
      76*d^2*n2 - 56*n1*n2 + 16*d*n1*n2 - 16*n1^2*n2 + 16*n2^2 - 12*d*n2^2 - 
      8*n1*n2^2 + 1024*n3 - 928*d*n3 + 208*d^2*n3 + 128*n1*n3 - 64*d*n1*n3 + 
      264*n2*n3 - 120*d*n2*n3 + 16*n1*n2*n3 + 16*n2^2*n3 + 248*n3^2 - 
      108*d*n3^2 + 24*n1*n3^2 + 32*n2*n3^2 + 16*n3^3 + 1184*n4 - 1124*d*n4 + 
      260*d^2*n4 + 88*n1*n4 - 56*d*n1*n4 + 288*n2*n4 - 140*d*n2*n4 + 
      8*n1*n2*n4 + 16*n2^2*n4 + 680*n3*n4 - 296*d*n3*n4 + 48*n1*n3*n4 + 
      88*n2*n3*n4 + 72*n3^2*n4 + 440*n4^2 - 196*d*n4^2 + 24*n1*n4^2 + 
      56*n2*n4^2 + 104*n3*n4^2 + 48*n4^3 + 392*n5 - 492*d*n5 + 134*d^2*n5 - 
      72*n1*n5 + 8*d*n1*n5 - 8*n1^2*n5 + 56*n2*n5 - 48*d*n2*n5 - 
      16*n1*n2*n5 + 448*n3*n5 - 204*d*n3*n5 + 24*n1*n3*n5 + 56*n2*n3*n5 + 
      56*n3^2*n5 + 488*n4*n5 - 236*d*n4*n5 + 8*n1*n4*n5 + 56*n2*n4*n5 + 
      152*n3*n4*n5 + 96*n4^2*n5 + 48*n5^2 - 40*d*n5^2 - 16*n1*n5^2 + 
      48*n3*n5^2 + 48*n4*n5^2)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 0, 0, 1, 
      2, -1, 1, 1])/(2*(-3 + d - n4 - n5)*(-240 + 412*d - 214*d^2 + 35*d^3 - 
      88*n1 + 120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
      164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
      74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
      34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((792 - 1360*d + 720*d^2 - 121*d^3 + 32*n1 - 96*d*n1 + 
      34*d^2*n1 - 96*n1^2 + 36*d*n1^2 - 8*n1^3 + 320*n2 - 388*d*n2 + 
      106*d^2*n2 - 88*n1*n2 + 24*d*n1*n2 - 24*n1^2*n2 + 32*n2^2 - 24*d*n2^2 - 
      16*n1*n2^2 + 1112*n3 - 1076*d*n3 + 254*d^2*n3 + 184*n1*n3 - 
      88*d*n1*n3 - 8*n1^2*n3 + 384*n2*n3 - 184*d*n2*n3 + 16*n1*n2*n3 + 
      32*n2^2*n3 + 352*n3^2 - 160*d*n3^2 + 32*n1*n3^2 + 64*n2*n3^2 + 
      32*n3^3 + 1096*n4 - 1084*d*n4 + 262*d^2*n4 + 248*n1*n4 - 120*d*n1*n4 - 
      8*n1^2*n4 + 384*n2*n4 - 188*d*n2*n4 + 24*n1*n2*n4 + 32*n2^2*n4 + 
      688*n3*n4 - 324*d*n3*n4 + 88*n1*n3*n4 + 128*n2*n3*n4 + 96*n3^2*n4 + 
      328*n4^2 - 156*d*n4^2 + 56*n1*n4^2 + 64*n2*n4^2 + 88*n3*n4^2 + 
      24*n4^3 + 304*n5 - 408*d*n5 + 118*d^2*n5 - 16*d*n1*n5 - 24*n1^2*n5 + 
      64*n2*n5 - 52*d*n2*n5 - 24*n1*n2*n5 + 368*n3*n5 - 188*d*n3*n5 + 
      40*n1*n3*n5 + 64*n2*n3*n5 + 64*n3^2*n5 + 352*n4*n5 - 180*d*n4*n5 + 
      56*n1*n4*n5 + 64*n2*n4*n5 + 112*n3*n4*n5 + 48*n4^2*n5 + 24*n5^2 - 
      24*d*n5^2 + 24*n3*n5^2 + 24*n4*n5^2)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 
      0, 1, -1, 1, 1, -1, 0, 2])/(2*(-3 + d - n4 - n5)*
     (-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 34*d^2*n1 + 
      40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 44*d^2*n2 + 
      24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 280*n3 + 
      248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 152*n2*n3 + 
      68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
      16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 152*n1*n4 + 
      72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
      16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
      8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 
      16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 16*n1*n5 + 
      16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
      96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
      104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
      16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-44 + 48*d - 12*d^2 + 24*n1 - 8*d*n1 - 8*n2 + 6*d*n2 + 4*n1*n2 - 52*n3 + 
      22*d*n3 + 4*n1*n3 - 8*n2*n3 - 8*n3^2 - 56*n4 + 26*d*n4 + 4*n1*n4 - 
      8*n2*n4 - 20*n3*n4 - 12*n4^2 - 12*n5 + 8*d*n5 + 8*n1*n5 - 12*n3*n5 - 
      12*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 1, -1, 2, 1, -1, 0, 1])/
    (-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 34*d^2*n1 + 
     40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 44*d^2*n2 + 
     24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 280*n3 + 
     248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 152*n2*n3 + 
     68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
     16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 152*n1*n4 + 
     72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
     16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
     8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 
     8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 
     8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 
     24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 
     24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 
     8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((1608 - 2496*d + 1226*d^2 - 194*d^3 - 808*n1 + 756*d*n1 - 264*d^2*n1 + 
      36*d^3*n1 - 48*n1^2 + 16*d*n1^2 + 48*n1^3 - 16*d*n1^3 + 488*n2 - 
      688*d*n2 + 262*d^2*n2 - 26*d^3*n2 - 184*n1*n2 + 124*d*n1*n2 - 
      26*d^2*n1*n2 + 32*n1^2*n2 - 8*d*n1^2*n2 + 8*n1^3*n2 + 32*n2^2 - 
      40*d*n2^2 + 8*d^2*n2^2 - 16*n1*n2^2 + 12*d*n1*n2^2 + 8*n1^2*n2^2 + 
      1664*n3 - 1132*d*n3 + 40*d^2*n3 + 59*d^3*n3 - 344*n1*n3 + 392*d*n1*n3 - 
      108*d^2*n1*n3 - 16*n1^2*n3 + 4*d*n1^2*n3 + 16*n1^3*n3 + 480*n2*n3 - 
      236*d*n2*n3 + 10*d^2*n2*n3 - 96*n1*n2*n3 + 56*d*n1*n2*n3 + 
      8*n1^2*n2*n3 + 32*n2^2*n3 - 8*d*n2^2*n3 - 16*n1*n2^2*n3 + 16*n3^2 + 
      224*d*n3^2 - 98*d^2*n3^2 - 248*n1*n3^2 + 124*d*n1*n3^2 - 16*n1^2*n3^2 - 
      8*n2*n3^2 + 24*d*n2*n3^2 - 48*n1*n2*n3^2 - 40*n3^3 + 32*d*n3^3 - 
      32*n1*n3^3 + 1824*n4 - 1280*d*n4 + 36*d^2*n4 + 74*d^3*n4 - 224*n1*n4 + 
      212*d*n1*n4 - 62*d^2*n1*n4 - 104*n1^2*n4 + 32*d*n1^2*n4 + 8*n1^3*n4 + 
      488*n2*n4 - 232*d*n2*n4 + 2*d^2*n2*n4 - 64*n1*n2*n4 + 28*d*n1*n2*n4 - 
      16*n1^2*n2*n4 + 32*n2^2*n4 - 8*d*n2^2*n4 - 16*n1*n2^2*n4 - 40*n3*n4 + 
      732*d*n3*n4 - 304*d^2*n3*n4 - 240*n1*n3*n4 + 160*d*n1*n3*n4 - 
      32*n1^2*n3*n4 - 48*n2*n3*n4 + 88*d*n2*n3*n4 - 40*n1*n2*n3*n4 - 
      392*n3^2*n4 + 236*d*n3^2*n4 - 80*n1*n3^2*n4 - 40*n2*n3^2*n4 - 
      40*n3^3*n4 + 432*d*n4^2 - 186*d^2*n4^2 + 24*n1*n4^2 + 20*d*n1*n4^2 - 
      16*n1^2*n4^2 - 40*n2*n4^2 + 64*d*n2*n4^2 + 8*n1*n2*n4^2 - 608*n3*n4^2 + 
      356*d*n3*n4^2 - 48*n1*n3*n4^2 - 80*n2*n3*n4^2 - 120*n3^2*n4^2 - 
      256*n4^3 + 152*d*n4^3 - 40*n2*n4^3 - 120*n3*n4^3 - 40*n4^4 + 768*n5 - 
      876*d*n5 + 228*d^2*n5 - 400*n1*n5 + 188*d*n1*n5 - 24*d^2*n1*n5 - 
      8*n1^2*n5 - 8*d*n1^2*n5 + 16*n1^3*n5 + 96*n2*n5 - 120*d*n2*n5 + 
      20*d^2*n2*n5 + 24*n1*n2*n5 - 24*d*n1*n2*n5 + 16*n1^2*n2*n5 - 
      4*d*n2^2*n5 + 8*n1*n2^2*n5 + 648*n3*n5 - 112*d*n3*n5 - 74*d^2*n3*n5 - 
      16*n1*n3*n5 + 36*d*n1*n3*n5 + 72*n2*n3*n5 + 8*d*n2*n3*n5 + 
      8*n1*n2*n3*n5 - 144*n3^2*n5 + 112*d*n3^2*n5 - 40*n1*n3^2*n5 - 
      24*n2*n3^2*n5 - 24*n3^3*n5 + 640*n4*n5 - 68*d*n4*n5 - 100*d^2*n4*n5 + 
      12*d*n1*n4*n5 - 24*n1^2*n4*n5 + 48*n2*n4*n5 + 28*d*n2*n4*n5 + 
      16*n1*n2*n4*n5 - 360*n3*n4*n5 + 304*d*n3*n4*n5 - 24*n1*n3*n4*n5 - 
      72*n2*n3*n4*n5 - 136*n3^2*n4*n5 - 208*n4^2*n5 + 184*d*n4^2*n5 + 
      16*n1*n4^2*n5 - 48*n2*n4^2*n5 - 192*n3*n4^2*n5 - 80*n4^3*n5 + 88*n5^2 - 
      64*d*n5^2 - 48*n1*n5^2 - 8*n2*n5^2 + 16*n1*n2*n5^2 + 56*n3*n5^2 + 
      24*d*n3*n5^2 + 16*n1*n3*n5^2 - 8*n2*n3*n5^2 - 32*n3^2*n5^2 + 
      48*n4*n5^2 + 32*d*n4*n5^2 + 16*n1*n4*n5^2 - 8*n2*n4*n5^2 - 
      72*n3*n4*n5^2 - 40*n4^2*n5^2)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 
      0, 1, -1, 1, 1])/(2*(-3 + d - n4 - n5)*(-240 + 412*d - 214*d^2 + 
      35*d^3 - 88*n1 + 120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 
      136*n2 + 164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 
      12*d*n2^2 + 8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 
      64*d*n1*n3 - 8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 
      16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 
      316*d*n4 - 74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
      34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((-396 + 586*d - 276*d^2 + 42*d^3 + 172*n1 - 108*d*n1 + 
      16*d^2*n1 + 24*n1^2 - 8*d*n1^2 - 116*n2 + 130*d*n2 - 33*d^2*n2 + 
      52*n1*n2 - 16*d*n1*n2 + 4*n1^2*n2 - 8*n2^2 + 6*d*n2^2 + 4*n1*n2^2 - 
      512*n3 + 428*d*n3 - 89*d^2*n3 + 8*n1*n3 + 4*n1^2*n3 - 132*n2*n3 + 
      56*d*n2*n3 - 8*n2^2*n3 - 124*n3^2 + 50*d*n3^2 - 4*n1*n3^2 - 
      16*n2*n3^2 - 8*n3^3 - 592*n4 + 526*d*n4 - 115*d^2*n4 + 28*n1*n4 - 
      4*d*n1*n4 + 4*n1^2*n4 - 144*n2*n4 + 66*d*n2*n4 + 4*n1*n2*n4 - 
      8*n2^2*n4 - 340*n3*n4 + 140*d*n3*n4 - 8*n1*n3*n4 - 44*n2*n3*n4 - 
      36*n3^2*n4 - 220*n4^2 + 94*d*n4^2 - 4*n1*n4^2 - 28*n2*n4^2 - 
      52*n3*n4^2 - 24*n4^3 - 196*n5 + 210*d*n5 - 52*d^2*n5 + 108*n1*n5 - 
      36*d*n1*n5 + 8*n1^2*n5 - 28*n2*n5 + 20*d*n2*n5 + 16*n1*n2*n5 - 
      224*n3*n5 + 94*d*n3*n5 + 4*n1*n3*n5 - 28*n2*n3*n5 - 28*n3^2*n5 - 
      244*n4*n5 + 110*d*n4*n5 + 12*n1*n4*n5 - 28*n2*n4*n5 - 76*n3*n4*n5 - 
      48*n4^2*n5 - 24*n5^2 + 16*d*n5^2 + 16*n1*n5^2 - 24*n3*n5^2 - 
      24*n4*n5^2)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 0, 2, -2, 1, 1])/
    ((-3 + d - n4 - n5)*(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 
      34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 
      44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 
      280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 
      152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 
      16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 
      152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 
      24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 
      40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 
      24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 
      16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((396 - 586*d + 276*d^2 - 42*d^3 - 172*n1 + 108*d*n1 - 
      16*d^2*n1 - 24*n1^2 + 8*d*n1^2 + 116*n2 - 130*d*n2 + 33*d^2*n2 - 
      52*n1*n2 + 16*d*n1*n2 - 4*n1^2*n2 + 8*n2^2 - 6*d*n2^2 - 4*n1*n2^2 + 
      512*n3 - 428*d*n3 + 89*d^2*n3 - 8*n1*n3 - 4*n1^2*n3 + 132*n2*n3 - 
      56*d*n2*n3 + 8*n2^2*n3 + 124*n3^2 - 50*d*n3^2 + 4*n1*n3^2 + 
      16*n2*n3^2 + 8*n3^3 + 592*n4 - 526*d*n4 + 115*d^2*n4 - 28*n1*n4 + 
      4*d*n1*n4 - 4*n1^2*n4 + 144*n2*n4 - 66*d*n2*n4 - 4*n1*n2*n4 + 
      8*n2^2*n4 + 340*n3*n4 - 140*d*n3*n4 + 8*n1*n3*n4 + 44*n2*n3*n4 + 
      36*n3^2*n4 + 220*n4^2 - 94*d*n4^2 + 4*n1*n4^2 + 28*n2*n4^2 + 
      52*n3*n4^2 + 24*n4^3 + 196*n5 - 210*d*n5 + 52*d^2*n5 - 108*n1*n5 + 
      36*d*n1*n5 - 8*n1^2*n5 + 28*n2*n5 - 20*d*n2*n5 - 16*n1*n2*n5 + 
      224*n3*n5 - 94*d*n3*n5 - 4*n1*n3*n5 + 28*n2*n3*n5 + 28*n3^2*n5 + 
      244*n4*n5 - 110*d*n4*n5 - 12*n1*n4*n5 + 28*n2*n4*n5 + 76*n3*n4*n5 + 
      48*n4^2*n5 + 24*n5^2 - 16*d*n5^2 - 16*n1*n5^2 + 24*n3*n5^2 + 
      24*n4*n5^2)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 0, 2, -1, 1, 1])/
    ((-3 + d - n4 - n5)*(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 
      34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 
      44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 
      280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 
      152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 
      16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 
      152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 
      24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 
      40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 
      24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 
      16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((-96 + 232*d - 152*d^2 + 30*d^3 - 112*n1 + 288*d*n1 - 
      222*d^2*n1 + 50*d^3*n1 - 64*n1^2 + 8*d*n1^2 - 8*n1^3 - 8*d*n1^3 + 
      176*n2 - 192*d*n2 + 48*d^2*n2 - 80*n1*n2 + 52*d*n1*n2 - 20*d^2*n1*n2 - 
      24*n1^2*n2 - 8*d*n1^2*n2 + 32*n2^2 - 24*d*n2^2 - 16*n1*n2^2 + 200*n3 - 
      396*d*n3 + 270*d^2*n3 - 59*d^3*n3 - 216*n1*n3 + 308*d*n1*n3 - 
      92*d^2*n1*n3 - 16*n1^2*n3 + 20*d*n1^2*n3 + 360*n2*n3 - 280*d*n2*n3 + 
      56*d^2*n2*n3 - 48*n1*n2*n3 + 44*d*n1*n2*n3 - 8*n1^2*n2*n3 + 
      48*n2^2*n3 - 12*d*n2^2*n3 - 8*n1*n2^2*n3 + 352*n3^2 - 364*d*n3^2 + 
      98*d^2*n3^2 - 24*n1*n3^2 + 20*d*n1*n3^2 + 200*n2*n3^2 - 84*d*n2*n3^2 + 
      8*n1*n2*n3^2 + 16*n2^2*n3^2 + 56*n3^3 - 32*d*n3^3 + 16*n2*n3^3 + 
      344*n4 - 648*d*n4 + 386*d^2*n4 - 74*d^3*n4 - 288*n1*n4 + 412*d*n1*n4 - 
      126*d^2*n1*n4 + 16*n1^2*n4 + 16*d*n1^2*n4 + 8*n1^3*n4 + 288*n2*n4 - 
      200*d*n2*n4 + 32*d^2*n2*n4 - 32*n1*n2*n4 + 52*d*n1*n2*n4 + 
      8*n1^2*n2*n4 + 32*n2^2*n4 + 1128*n3*n4 - 1176*d*n3*n4 + 304*d^2*n3*n4 - 
      208*n1*n3*n4 + 104*d*n1*n3*n4 - 16*n1^2*n3*n4 + 352*n2*n3*n4 - 
      156*d*n2*n3*n4 - 24*n1*n2*n3*n4 + 16*n2^2*n3*n4 + 488*n3^2*n4 - 
      236*d*n3^2*n4 - 8*n1*n3^2*n4 + 72*n2*n3^2*n4 + 40*n3^3*n4 + 728*n4^2 - 
      744*d*n4^2 + 186*d^2*n4^2 - 192*n1*n4^2 + 92*d*n1*n4^2 - 16*n1^2*n4^2 + 
      144*n2*n4^2 - 64*d*n2*n4^2 - 32*n1*n2*n4^2 + 760*n3*n4^2 - 
      356*d*n3*n4^2 - 24*n1*n3*n4^2 + 88*n2*n3*n4^2 + 120*n3^2*n4^2 + 
      328*n4^3 - 152*d*n4^3 - 16*n1*n4^3 + 32*n2*n4^3 + 120*n3*n4^3 + 
      40*n4^4 - 112*n5 + 168*d*n5 - 52*d^2*n5 - 128*n1*n5 + 188*d*n1*n5 - 
      60*d^2*n1*n5 - 24*n1^2*n5 + 8*d*n1^2*n5 + 16*n2*n5 - 8*d*n2*n5 - 
      32*n1*n2*n5 + 16*d*n1*n2*n5 + 88*n3*n5 - 192*d*n3*n5 + 74*d^2*n3*n5 - 
      224*n1*n3*n5 + 108*d*n1*n3*n5 - 16*n1^2*n3*n5 + 56*n2*n3*n5 - 
      32*d*n2*n3*n5 - 32*n1*n2*n3*n5 + 224*n3^2*n5 - 112*d*n3^2*n5 - 
      16*n1*n3^2*n5 + 40*n2*n3^2*n5 + 24*n3^3*n5 + 160*n4*n5 - 292*d*n4*n5 + 
      100*d^2*n4*n5 - 232*n1*n4*n5 + 116*d*n1*n4*n5 - 8*n1^2*n4*n5 + 
      48*n2*n4*n5 - 28*d*n2*n4*n5 - 24*n1*n2*n4*n5 + 584*n3*n4*n5 - 
      304*d*n3*n4*n5 - 64*n1*n3*n4*n5 + 72*n2*n3*n4*n5 + 136*n3^2*n4*n5 + 
      352*n4^2*n5 - 184*d*n4^2*n5 - 48*n1*n4^2*n5 + 32*n2*n4^2*n5 + 
      192*n3*n4^2*n5 + 80*n4^3*n5 - 16*n5^2 + 16*d*n5^2 - 16*n1*n5^2 + 
      16*d*n1*n5^2 + 16*n3*n5^2 - 24*d*n3*n5^2 - 32*n1*n3*n5^2 + 
      32*n3^2*n5^2 + 24*n4*n5^2 - 32*d*n4*n5^2 - 32*n1*n4*n5^2 + 
      72*n3*n4*n5^2 + 40*n4^2*n5^2)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 
      1, 0, -1, 1, 1])/(2*(-3 + d - n4 - n5)*(-240 + 412*d - 214*d^2 + 
      35*d^3 - 88*n1 + 120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 
      136*n2 + 164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 
      12*d*n2^2 + 8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 
      64*d*n1*n3 - 8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 
      16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 
      316*d*n4 - 74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
      34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, -2, 0, 2]/
    (3 - d + n4 + n5) + ((-1800 + 2936*d - 1484*d^2 + 239*d^3 + 320*n1 - 
      124*d*n1 + 24*d^2*n1 - 10*d^3*n1 - 24*n1^2 + 60*d*n1^2 - 16*d^2*n1^2 - 
      16*n1^3 + 8*d*n1^3 - 3328*n2 + 5044*d*n2 - 2330*d^2*n2 + 338*d^3*n2 + 
      832*n1*n2 - 372*d*n1*n2 + 30*d^2*n1*n2 + 176*n1^2*n2 - 56*d*n1^2*n2 + 
      8*n1^3*n2 - 896*n2^2 + 1032*d*n2^2 - 260*d^2*n2^2 + 320*n1*n2^2 - 
      92*d*n1*n2^2 + 40*n1^2*n2^2 - 64*n2^3 + 48*d*n2^3 + 32*n1*n2^3 - 
      496*n3 - 892*d*n3 + 1034*d^2*n3 - 239*d^3*n3 - 224*n1*n3 - 
      120*d*n1*n3 + 94*d^2*n1*n3 - 184*n1^2*n3 + 60*d*n1^2*n3 - 24*n1^3*n3 - 
      3568*n2*n3 + 2628*d*n2*n3 - 466*d^2*n2*n3 - 368*n1*n2*n3 + 
      124*d*n1*n2*n3 - 32*n1^2*n2*n3 - 960*n2^2*n3 + 384*d*n2^2*n3 - 
      48*n1*n2^2*n3 - 64*n2^3*n3 + 1768*n3^2 - 1820*d*n3^2 + 450*d^2*n3^2 + 
      400*n1*n3^2 - 208*d*n1*n3^2 + 8*n1^2*n3^2 - 208*n2*n3^2 + 
      32*d*n2*n3^2 + 16*n1*n2*n3^2 - 64*n2^2*n3^2 + 496*n3^3 - 224*d*n3^3 + 
      64*n1*n3^3 + 32*n2*n3^3 + 32*n3^4 - 2600*n4 + 2444*d*n4 - 562*d^2*n4 - 
      80*n1*n4 - 28*d*n1*n4 + 44*d^2*n1*n4 - 8*d*n1^2*n4 - 4720*n2*n4 + 
      4020*d*n2*n4 - 828*d^2*n2*n4 - 104*n1*n2*n4 + 76*d*n1*n2*n4 + 
      24*n1^2*n2*n4 - 1088*n2^2*n4 + 488*d*n2^2*n4 - 64*n2^3*n4 + 
      1192*n3*n4 - 1832*d*n3*n4 + 562*d^2*n3*n4 + 392*n1*n3*n4 - 
      260*d*n1*n3*n4 + 16*n1^2*n3*n4 - 1680*n2*n3*n4 + 588*d*n2*n3*n4 - 
      48*n1*n2*n3*n4 - 256*n2^2*n3*n4 + 1264*n3^2*n4 - 612*d*n3^2*n4 + 
      160*n1*n3^2*n4 - 16*n2*n3^2*n4 + 144*n3^3*n4 - 888*n4^2 + 396*d*n4^2 + 
      8*n1*n4^2 - 36*d*n1*n4^2 + 8*n1^2*n4^2 - 1536*n2*n4^2 + 616*d*n2*n4^2 - 
      56*n1*n2*n4^2 - 192*n2^2*n4^2 + 688*n3*n4^2 - 396*d*n3*n4^2 + 
      104*n1*n3*n4^2 - 192*n2*n3*n4^2 + 200*n3^2*n4^2 - 88*n4^3 + 8*n1*n4^3 - 
      144*n2*n4^3 + 88*n3*n4^3 - 296*n5 + 196*d*n5 + 116*d^2*n5 - 59*d^3*n5 + 
      192*n1*n5 - 88*d*n1*n5 + 22*d^2*n1*n5 - 128*n1^2*n5 + 60*d*n1^2*n5 - 
      24*n1^3*n5 - 1208*n2*n5 + 1388*d*n2*n5 - 340*d^2*n2*n5 + 416*n1*n2*n5 - 
      100*d*n1*n2*n5 + 8*n1^2*n2*n5 - 176*n2^2*n5 + 140*d*n2^2*n5 + 
      72*n1*n2^2*n5 + 480*n3*n5 - 1056*d*n3*n5 + 364*d^2*n3*n5 - 
      16*n1*n3*n5 - 68*d*n1*n3*n5 - 40*n1^2*n3*n5 - 1240*n2*n3*n5 + 
      448*d*n2*n3*n5 - 56*n1*n2*n3*n5 - 176*n2^2*n3*n5 + 888*n3^2*n5 - 
      444*d*n3^2*n5 + 96*n1*n3^2*n5 - 32*n2*n3^2*n5 + 112*n3^3*n5 - 
      224*n4*n5 - 212*d*n4*n5 + 150*d^2*n4*n5 + 128*n1*n4*n5 - 
      84*d*n1*n4*n5 - 1456*n2*n4*n5 + 624*d*n2*n4*n5 + 24*n1*n2*n4*n5 - 
      176*n2^2*n4*n5 + 1048*n3*n4*n5 - 612*d*n3*n4*n5 + 112*n1*n3*n4*n5 - 
      280*n2*n3*n4*n5 + 312*n3^2*n4*n5 + 104*n4^2*n5 - 120*d*n4^2*n5 + 
      32*n1*n4^2*n5 - 248*n2*n4^2*n5 + 232*n3*n4^2*n5 + 32*n4^3*n5 + 
      160*n5^2 - 216*d*n5^2 + 74*d^2*n5^2 - 40*n1*n5^2 + 16*d*n1*n5^2 - 
      24*n1^2*n5^2 - 104*n2*n5^2 + 80*d*n2*n5^2 + 48*n1*n2*n5^2 + 
      272*n3*n5^2 - 184*d*n3*n5^2 - 8*n1*n3*n5^2 - 104*n2*n3*n5^2 + 
      112*n3^2*n5^2 + 224*n4*n5^2 - 144*d*n4*n5^2 + 8*n1*n4*n5^2 - 
      104*n2*n4*n5^2 + 176*n3*n4*n5^2 + 64*n4^2*n5^2 + 32*n5^3 - 24*d*n5^3 - 
      16*n1*n5^3 + 32*n3*n5^3 + 32*n4*n5^3)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 
      0, 1, 0, 1, 1, -1, 0, 1])/(2*(-3 + d - n4 - n5)*
     (-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 34*d^2*n1 + 
      40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 44*d^2*n2 + 
      24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 280*n3 + 
      248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 152*n2*n3 + 
      68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
      16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 152*n1*n4 + 
      72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
      16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
      8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 
      16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 16*n1*n5 + 
      16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
      96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
      104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
      16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-792 + 1360*d - 720*d^2 + 121*d^3 - 32*n1 + 96*d*n1 - 34*d^2*n1 + 
      96*n1^2 - 36*d*n1^2 + 8*n1^3 - 320*n2 + 388*d*n2 - 106*d^2*n2 + 
      88*n1*n2 - 24*d*n1*n2 + 24*n1^2*n2 - 32*n2^2 + 24*d*n2^2 + 16*n1*n2^2 - 
      1112*n3 + 1076*d*n3 - 254*d^2*n3 - 184*n1*n3 + 88*d*n1*n3 + 8*n1^2*n3 - 
      384*n2*n3 + 184*d*n2*n3 - 16*n1*n2*n3 - 32*n2^2*n3 - 352*n3^2 + 
      160*d*n3^2 - 32*n1*n3^2 - 64*n2*n3^2 - 32*n3^3 - 1096*n4 + 1084*d*n4 - 
      262*d^2*n4 - 248*n1*n4 + 120*d*n1*n4 + 8*n1^2*n4 - 384*n2*n4 + 
      188*d*n2*n4 - 24*n1*n2*n4 - 32*n2^2*n4 - 688*n3*n4 + 324*d*n3*n4 - 
      88*n1*n3*n4 - 128*n2*n3*n4 - 96*n3^2*n4 - 328*n4^2 + 156*d*n4^2 - 
      56*n1*n4^2 - 64*n2*n4^2 - 88*n3*n4^2 - 24*n4^3 - 304*n5 + 408*d*n5 - 
      118*d^2*n5 + 16*d*n1*n5 + 24*n1^2*n5 - 64*n2*n5 + 52*d*n2*n5 + 
      24*n1*n2*n5 - 368*n3*n5 + 188*d*n3*n5 - 40*n1*n3*n5 - 64*n2*n3*n5 - 
      64*n3^2*n5 - 352*n4*n5 + 180*d*n4*n5 - 56*n1*n4*n5 - 64*n2*n4*n5 - 
      112*n3*n4*n5 - 48*n4^2*n5 - 24*n5^2 + 24*d*n5^2 - 24*n3*n5^2 - 
      24*n4*n5^2)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, -1, 0, 2])/
    (2*(-3 + d - n4 - n5)*(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 
      120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
      164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
      74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
      34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((-1320 + 2112*d - 1056*d^2 + 169*d^3 + 256*n1 - 
      96*d*n1 - 2*d^2*n1 + 96*n1^2 - 36*d*n1^2 + 8*n1^3 - 416*n2 + 492*d*n2 - 
      130*d^2*n2 + 136*n1*n2 - 40*d*n1*n2 + 24*n1^2*n2 - 32*n2^2 + 
      24*d*n2^2 + 16*n1*n2^2 - 1472*n3 + 1172*d*n3 - 174*d^2*n3 - 24*d^3*n3 - 
      280*n1*n3 + 168*d*n1*n3 - 16*d^2*n1*n3 + 8*n1^2*n3 - 432*n2*n3 + 
      164*d*n2*n3 + 12*d^2*n2*n3 - 40*n1*n2*n3 + 8*d*n1*n2*n3 - 32*n2^2*n3 - 
      136*n3^2 - 44*d*n3^2 + 44*d^2*n3^2 - 56*n1*n3^2 + 8*d*n1*n3^2 - 
      16*n2*n3^2 - 16*d*n2*n3^2 + 16*n3^3 - 16*d*n3^3 - 1920*n4 + 1660*d*n4 - 
      292*d^2*n4 - 26*d^3*n4 + 40*n1*n4 - 24*d*n1*n4 + 16*d^2*n1*n4 + 
      8*d*n1^2*n4 - 512*n2*n4 + 228*d*n2*n4 + 8*d^2*n2*n4 + 8*n1*n2*n4 - 
      32*n2^2*n4 - 592*n3*n4 - 80*d*n3*n4 + 142*d^2*n3*n4 - 112*n1*n3*n4 + 
      8*d*n1*n3*n4 - 8*n1^2*n3*n4 - 80*n2*n3*n4 - 48*d*n2*n3*n4 - 
      16*n1*n2*n3*n4 + 208*n3^2*n4 - 144*d*n3^2*n4 + 32*n2*n3^2*n4 + 
      32*n3^3*n4 - 688*n4^2 + 228*d*n4^2 + 34*d^2*n4^2 + 40*n1*n4^2 - 
      32*d*n1*n4^2 - 8*n1^2*n4^2 - 96*n2*n4^2 - 8*d*n2*n4^2 + 112*n3*n4^2 - 
      144*d*n3*n4^2 + 16*n1*n3*n4^2 + 32*n2*n3*n4^2 + 72*n3^2*n4^2 - 
      96*n4^3 + 16*n1*n4^3 + 32*n3*n4^3 - 8*n4^4 - 1128*n5 + 1532*d*n5 - 
      580*d^2*n5 + 59*d^3*n5 + 248*n1*n5 - 24*d*n1*n5 - 18*d^2*n1*n5 + 
      64*n1^2*n5 - 12*d*n1^2*n5 + 8*n1^3*n5 - 280*n2*n5 + 292*d*n2*n5 - 
      56*d^2*n2*n5 + 88*n1*n2*n5 - 8*d*n1*n2*n5 + 16*n1^2*n2*n5 - 
      16*n2^2*n5 + 12*d*n2^2*n5 + 8*n1*n2^2*n5 - 1152*n3*n5 + 640*d*n3*n5 - 
      58*d^2*n3*n5 - 240*n1*n3*n5 + 88*d*n1*n3*n5 - 8*n1^2*n3*n5 - 
      280*n2*n3*n5 + 72*d*n2*n3*n5 - 32*n1*n2*n3*n5 - 16*n2^2*n3*n5 - 
      8*n3^2*n5 - 36*d*n3^2*n5 - 24*n1*n3^2*n5 + 16*n3^3*n5 - 1536*n4*n5 + 
      1008*d*n4*n5 - 130*d^2*n4*n5 + 16*n1*n4*n5 + 8*d*n1*n4*n5 - 
      8*n1^2*n4*n5 - 320*n2*n4*n5 + 100*d*n2*n4*n5 - 8*n1*n2*n4*n5 - 
      16*n2^2*n4*n5 - 392*n3*n4*n5 + 28*d*n3*n4*n5 - 40*n1*n3*n4*n5 - 
      40*n2*n3*n4*n5 + 56*n3^2*n4*n5 - 456*n4^2*n5 + 120*d*n4^2*n5 + 
      16*n1*n4^2*n5 - 40*n2*n4^2*n5 - 8*n3*n4^2*n5 - 48*n4^3*n5 - 320*n5^2 + 
      344*d*n5^2 - 74*d^2*n5^2 + 112*n1*n5^2 - 16*d*n1*n5^2 + 8*n1^2*n5^2 - 
      40*n2*n5^2 + 32*d*n2*n5^2 + 16*n1*n2*n5^2 - 320*n3*n5^2 + 
      96*d*n3*n5^2 - 32*n1*n3*n5^2 - 40*n2*n3*n5^2 - 392*n4*n5^2 + 
      144*d*n4*n5^2 + 16*n1*n4*n5^2 - 40*n2*n4*n5^2 - 72*n3*n4*n5^2 - 
      72*n4^2*n5^2 - 32*n5^3 + 24*d*n5^3 + 16*n1*n5^3 - 32*n3*n5^3 - 
      32*n4*n5^3)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, -1, 1, 0])/
    (2*(-3 + d - n4 - n5)*(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 
      120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
      164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
      74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
      34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((-2256 + 3480*d - 1852*d^2 + 396*d^3 - 27*d^4 + 784*n1 - 
      472*d*n1 + 60*d^2*n1 + 2*d^3*n1 + 544*n1^2 - 320*d*n1^2 + 44*d^2*n1^2 + 
      48*n1^3 - 8*d*n1^3 - 608*n2 + 640*d*n2 - 176*d^2*n2 + 8*d^3*n2 + 
      368*n1*n2 - 168*d*n1*n2 + 16*d^2*n1*n2 + 144*n1^2*n2 - 32*d*n1^2*n2 - 
      32*n2^2 + 8*d*n2^2 + 4*d^2*n2^2 + 48*n1*n2^2 - 8*d*n1*n2^2 - 2912*n3 + 
      2848*d*n3 - 876*d^2*n3 + 82*d^3*n3 - 496*n1*n3 + 336*d*n1*n3 - 
      48*d^2*n1*n3 + 16*n1^2*n3 - 8*d*n1^2*n3 - 688*n2*n3 + 368*d*n2*n3 - 
      36*d^2*n2*n3 - 112*n1*n2*n3 + 24*d*n1*n2*n3 - 32*n2^2*n3 - 704*n3^2 + 
      432*d*n3^2 - 64*d^2*n3^2 - 80*n1*n3^2 + 16*d*n1*n3^2 - 80*n2*n3^2 + 
      16*d*n2*n3^2 - 48*n3^3 + 16*d*n3^3 - 3312*n4 + 3344*d*n4 - 
      1028*d^2*n4 + 90*d^3*n4 - 592*n1*n4 + 568*d*n1*n4 - 120*d^2*n1*n4 + 
      96*n1^2*n4 - 24*d*n1^2*n4 - 720*n2*n4 + 384*d*n2*n4 - 32*d^2*n2*n4 - 
      128*n1*n2*n4 + 56*d*n1*n2*n4 + 16*n1^2*n2*n4 - 32*n2^2*n4 - 
      1968*n3*n4 + 1192*d*n3*n4 - 164*d^2*n3*n4 - 352*n1*n3*n4 + 
      120*d*n1*n3*n4 - 208*n2*n3*n4 + 40*d*n2*n3*n4 - 32*n1*n2*n3*n4 - 
      320*n3^2*n4 + 96*d*n3^2*n4 - 16*n1*n3^2*n4 - 16*n2*n3^2*n4 - 
      16*n3^3*n4 - 1120*n4^2 + 608*d*n4^2 - 60*d^2*n4^2 - 384*n1*n4^2 + 
      152*d*n1*n4^2 - 96*n2*n4^2 - 48*n1*n2*n4^2 - 336*n3*n4^2 + 
      80*d*n3*n4^2 - 64*n1*n3*n4^2 - 32*n3^2*n4^2 - 48*n4^3 - 16*d*n4^3 - 
      48*n1*n4^3 + 16*n2*n4^3 + 16*n4^4 - 1584*n5 + 1840*d*n5 - 628*d^2*n5 + 
      60*d^3*n5 + 976*n1*n5 - 544*d*n1*n5 + 76*d^2*n1*n5 + 336*n1^2*n5 - 
      112*d*n1^2*n5 + 16*n1^3*n5 - 208*n2*n5 + 112*d*n2*n5 + 240*n1*n2*n5 - 
      72*d*n1*n2*n5 + 48*n1^2*n2*n5 - 8*d*n2^2*n5 + 16*n1*n2^2*n5 - 
      1936*n3*n5 + 1240*d*n3*n5 - 184*d^2*n3*n5 - 112*n1*n3*n5 + 
      40*d*n1*n3*n5 + 16*n1^2*n3*n5 - 224*n2*n3*n5 + 48*d*n2*n3*n5 - 
      16*n1*n2*n3*n5 - 368*n3^2*n5 + 112*d*n3^2*n5 - 16*n1*n3^2*n5 - 
      16*n2*n3^2*n5 - 16*n3^3*n5 - 2032*n4*n5 + 1312*d*n4*n5 - 
      184*d^2*n4*n5 - 112*n1*n4*n5 + 72*d*n1*n4*n5 + 48*n1^2*n4*n5 - 
      208*n2*n4*n5 + 32*d*n2*n4*n5 - 16*n1*n2*n4*n5 - 864*n3*n4*n5 + 
      248*d*n3*n4*n5 - 64*n1*n3*n4*n5 - 16*n2*n3*n4*n5 - 80*n3^2*n4*n5 - 
      448*n4^2*n5 + 104*d*n4^2*n5 - 80*n1*n4^2*n5 - 64*n3*n4^2*n5 - 
      384*n5^2 + 312*d*n5^2 - 52*d^2*n5^2 + 320*n1*n5^2 - 96*d*n1*n5^2 + 
      48*n1^2*n5^2 - 16*n2*n5^2 + 32*n1*n2*n5^2 - 432*n3*n5^2 + 
      136*d*n3*n5^2 - 16*n2*n3*n5^2 - 48*n3^2*n5^2 - 432*n4*n5^2 + 
      136*d*n4*n5^2 - 16*n2*n4*n5^2 - 96*n3*n4*n5^2 - 48*n4^2*n5^2 - 
      32*n5^3 + 16*d*n5^3 + 32*n1*n5^3 - 32*n3*n5^3 - 32*n4*n5^3)*
     j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, -1, 1, 1])/
    (2*(-3 + d - n4 - n5)*(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 
      120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
      164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
      74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
      34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((-44 + 48*d - 12*d^2 + 24*n1 - 8*d*n1 - 8*n2 + 6*d*n2 + 
      4*n1*n2 - 52*n3 + 22*d*n3 + 4*n1*n3 - 8*n2*n3 - 8*n3^2 - 56*n4 + 
      26*d*n4 + 4*n1*n4 - 8*n2*n4 - 20*n3*n4 - 12*n4^2 - 12*n5 + 8*d*n5 + 
      8*n1*n5 - 12*n3*n5 - 12*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 1, 
      0, 1, 1, -1, 2, 0])/(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 
     120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
     164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
     8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
     8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
     40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
     74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
     76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
     40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
     24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
     34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
     8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
     8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
     24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((1320 - 2112*d + 1056*d^2 - 169*d^3 - 256*n1 + 96*d*n1 + 2*d^2*n1 - 
      96*n1^2 + 36*d*n1^2 - 8*n1^3 + 416*n2 - 492*d*n2 + 130*d^2*n2 - 
      136*n1*n2 + 40*d*n1*n2 - 24*n1^2*n2 + 32*n2^2 - 24*d*n2^2 - 
      16*n1*n2^2 + 1736*n3 - 1548*d*n3 + 342*d^2*n3 + 136*n1*n3 - 
      72*d*n1*n3 - 8*n1^2*n3 + 480*n2*n3 - 216*d*n2*n3 + 16*n1*n2*n3 + 
      32*n2^2*n3 + 448*n3^2 - 192*d*n3^2 + 32*n1*n3^2 + 64*n2*n3^2 + 
      32*n3^3 + 1944*n4 - 1812*d*n4 + 414*d^2*n4 + 104*n1*n4 - 72*d*n1*n4 - 
      8*n1^2*n4 + 512*n2*n4 - 244*d*n2*n4 + 8*n1*n2*n4 + 32*n2^2*n4 + 
      1136*n3*n4 - 492*d*n3*n4 + 72*n1*n3*n4 + 160*n2*n3*n4 + 128*n3^2*n4 + 
      696*n4^2 - 308*d*n4^2 + 40*n1*n4^2 + 96*n2*n4^2 + 168*n3*n4^2 + 
      72*n4^3 + 624*n5 - 744*d*n5 + 198*d^2*n5 - 192*n1*n5 + 48*d*n1*n5 - 
      24*n1^2*n5 + 96*n2*n5 - 76*d*n2*n5 - 40*n1*n2*n5 + 720*n3*n5 - 
      324*d*n3*n5 + 24*n1*n3*n5 + 96*n2*n3*n5 + 96*n3^2*n5 + 768*n4*n5 - 
      364*d*n4*n5 + 8*n1*n4*n5 + 96*n2*n4*n5 + 240*n3*n4*n5 + 144*n4^2*n5 + 
      72*n5^2 - 56*d*n5^2 - 32*n1*n5^2 + 72*n3*n5^2 + 72*n4*n5^2)*
     j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5)*(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 
      120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
      164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
      74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
      34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((-44 + 48*d - 12*d^2 + 24*n1 - 8*d*n1 - 8*n2 + 6*d*n2 + 
      4*n1*n2 - 52*n3 + 22*d*n3 + 4*n1*n3 - 8*n2*n3 - 8*n3^2 - 56*n4 + 
      26*d*n4 + 4*n1*n4 - 8*n2*n4 - 20*n3*n4 - 12*n4^2 - 12*n5 + 8*d*n5 + 
      8*n1*n5 - 12*n3*n5 - 12*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 1, 
      0, 1, 1, 0, 1, 0])/(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 
     120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
     164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
     8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
     8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
     40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
     74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
     76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
     40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
     24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
     34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
     8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
     8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
     24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((12 - 17*d + 5*d^2 - 2*n1 + 2*d*n1 + 16*n3 - 9*d*n3 - 2*n1*n3 + 4*n3^2 + 
      16*n4 - 9*d*n4 - 2*n1*n4 + 8*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 4*n3*n5 + 
      4*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 2, 0, -2, 1, 1])/
    ((-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 8*n2 - 
      6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((-12 + 17*d - 5*d^2 + 2*n1 - 2*d*n1 - 16*n3 + 
      9*d*n3 + 2*n1*n3 - 4*n3^2 - 16*n4 + 9*d*n4 + 2*n1*n4 - 8*n3*n4 - 
      4*n4^2 - 4*n5 + 4*d*n5 - 4*n3*n5 - 4*n4*n5)*j[p4, n1, n2, n3, n4, 
      1 + n5, 1, 0, 1, 0, 2, 0, -1, 1, 1])/((-3 + d - n4 - n5)*
     (20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 8*n2 - 6*d*n2 - 4*n1*n2 + 
      20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 12*d*n4 + 8*n1*n4 + 
      8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((64 - 74*d + 19*d^2 - 20*n1 + 4*d*n1 - 4*n1^2 + 16*n2 - 12*d*n2 - 
      8*n1*n2 + 72*n3 - 30*d*n3 + 4*n1*n3 + 16*n2*n3 + 8*n3^2 + 80*n4 - 
      38*d*n4 + 4*n1*n4 + 16*n2*n4 + 24*n3*n4 + 16*n4^2 + 16*n5 - 12*d*n5 - 
      8*n1*n5 + 16*n3*n5 + 16*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 2, 
      0, 1, 0, -2, 1, 1])/(2*(-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 
      4*d*n1 - 4*n1^2 + 8*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 
      8*n2*n3 + 24*n4 - 12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 
      4*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((-12 + 17*d - 5*d^2 + 2*n1 - 2*d*n1 - 16*n3 + 9*d*n3 + 2*n1*n3 - 4*n3^2 - 
      16*n4 + 9*d*n4 + 2*n1*n4 - 8*n3*n4 - 4*n4^2 - 4*n5 + 4*d*n5 - 4*n3*n5 - 
      4*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 2, -1, 0, 0, 1, 1, -1, 1, 1])/
    ((-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 8*n2 - 
      6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((-64 + 74*d - 19*d^2 + 20*n1 - 4*d*n1 + 4*n1^2 - 
      16*n2 + 12*d*n2 + 8*n1*n2 - 72*n3 + 30*d*n3 - 4*n1*n3 - 16*n2*n3 - 
      8*n3^2 - 80*n4 + 38*d*n4 - 4*n1*n4 - 16*n2*n4 - 24*n3*n4 - 16*n4^2 - 
      16*n5 + 12*d*n5 + 8*n1*n5 - 16*n3*n5 - 16*n4*n5)*
     j[p4, n1, n2, n3, n4, 1 + n5, 2, -1, 1, 0, 0, 1, -1, 1, 1])/
    (2*(-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 
      8*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((-88 + 108*d - 29*d^2 + 24*n1 - 8*d*n1 + 
      4*n1^2 - 16*n2 + 12*d*n2 + 8*n1*n2 - 104*n3 + 48*d*n3 - 16*n2*n3 - 
      16*n3^2 - 112*n4 + 56*d*n4 - 16*n2*n4 - 40*n3*n4 - 24*n4^2 - 24*n5 + 
      20*d*n5 + 8*n1*n5 - 24*n3*n5 - 24*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 
      2, 0, 0, -1, 1, 1, -1, 1, 1])/(2*(-3 + d - n4 - n5)*
     (20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 8*n2 - 6*d*n2 - 4*n1*n2 + 
      20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 12*d*n4 + 8*n1*n4 + 
      8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((12 - 17*d + 5*d^2 - 2*n1 + 2*d*n1 + 16*n3 - 9*d*n3 - 2*n1*n3 + 4*n3^2 + 
      16*n4 - 9*d*n4 - 2*n1*n4 + 8*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 4*n3*n5 + 
      4*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 2, 0, 0, 0, 1, 1, -2, 1, 1])/
    ((-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 8*n2 - 
      6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((-64 + 74*d - 19*d^2 + 20*n1 - 4*d*n1 + 4*n1^2 - 
      16*n2 + 12*d*n2 + 8*n1*n2 - 72*n3 + 30*d*n3 - 4*n1*n3 - 16*n2*n3 - 
      8*n3^2 - 80*n4 + 38*d*n4 - 4*n1*n4 - 16*n2*n4 - 24*n3*n4 - 16*n4^2 - 
      16*n5 + 12*d*n5 + 8*n1*n5 - 16*n3*n5 - 16*n4*n5)*
     j[p4, n1, n2, n3, n4, 1 + n5, 2, 0, 1, -1, 1, 1, -1, 0, 1])/
    (2*(-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 
      8*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((-64 + 74*d - 19*d^2 + 20*n1 - 4*d*n1 + 4*n1^2 - 
      16*n2 + 12*d*n2 + 8*n1*n2 - 72*n3 + 30*d*n3 - 4*n1*n3 - 16*n2*n3 - 
      8*n3^2 - 80*n4 + 38*d*n4 - 4*n1*n4 - 16*n2*n4 - 24*n3*n4 - 16*n4^2 - 
      16*n5 + 12*d*n5 + 8*n1*n5 - 16*n3*n5 - 16*n4*n5)*
     j[p4, n1, n2, n3, n4, 1 + n5, 2, 0, 1, -1, 1, 1, -1, 1, 0])/
    (2*(-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 
      8*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((64 - 74*d + 19*d^2 - 20*n1 + 4*d*n1 - 4*n1^2 + 
      16*n2 - 12*d*n2 - 8*n1*n2 + 72*n3 - 30*d*n3 + 4*n1*n3 + 16*n2*n3 + 
      8*n3^2 + 80*n4 - 38*d*n4 + 4*n1*n4 + 16*n2*n4 + 24*n3*n4 + 16*n4^2 + 
      16*n5 - 12*d*n5 - 8*n1*n5 + 16*n3*n5 + 16*n4*n5)*
     j[p4, n1, n2, n3, n4, 1 + n5, 2, 0, 1, 0, 0, 1, -2, 1, 1])/
    (2*(-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 
      8*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((276 - 474*d + 253*d^2 - 43*d^3 - 28*n1 + 
      12*d*n1 - 28*n1^2 + 12*d*n1^2 + 92*n2 - 112*d*n2 + 31*d^2*n2 - 
      32*n1*n2 + 12*d*n1*n2 - 4*n1^2*n2 + 8*n2^2 - 6*d*n2^2 - 4*n1*n2^2 + 
      416*n3 - 414*d*n3 + 100*d^2*n3 + 20*n1*n3 - 12*d*n1*n3 - 8*n1^2*n3 + 
      116*n2*n3 - 58*d*n2*n3 - 4*n1*n2*n3 + 8*n2^2*n3 + 156*n3^2 - 
      72*d*n3^2 + 8*n1*n3^2 + 24*n2*n3^2 + 16*n3^3 + 384*n4 - 384*d*n4 + 
      94*d^2*n4 + 48*n1*n4 - 24*d*n1*n4 - 8*n1^2*n4 + 112*n2*n4 - 
      56*d*n2*n4 + 8*n2^2*n4 + 276*n3*n4 - 132*d*n3*n4 + 24*n1*n3*n4 + 
      44*n2*n3*n4 + 44*n3^2*n4 + 116*n4^2 - 56*d*n4^2 + 16*n1*n4^2 + 
      20*n2*n4^2 + 36*n3*n4^2 + 8*n4^3 + 384*n5 - 618*d*n5 + 295*d^2*n5 - 
      43*d^3*n5 - 36*n1*n5 + 12*d*n1*n5 - 36*n1^2*n5 + 12*d*n1^2*n5 + 
      112*n2*n5 - 128*d*n2*n5 + 31*d^2*n2*n5 - 40*n1*n2*n5 + 12*d*n1*n2*n5 - 
      4*n1^2*n2*n5 + 8*n2^2*n5 - 6*d*n2^2*n5 - 4*n1*n2^2*n5 + 552*n3*n5 - 
      486*d*n3*n5 + 100*d^2*n3*n5 + 28*n1*n3*n5 - 12*d*n1*n3*n5 - 
      8*n1^2*n3*n5 + 136*n2*n3*n5 - 58*d*n2*n3*n5 - 4*n1*n2*n3*n5 + 
      8*n2^2*n3*n5 + 184*n3^2*n5 - 72*d*n3^2*n5 + 8*n1*n3^2*n5 + 
      24*n2*n3^2*n5 + 16*n3^3*n5 + 508*n4*n5 - 448*d*n4*n5 + 94*d^2*n4*n5 + 
      64*n1*n4*n5 - 24*d*n1*n4*n5 - 8*n1^2*n4*n5 + 132*n2*n4*n5 - 
      56*d*n2*n4*n5 + 8*n2^2*n4*n5 + 320*n3*n4*n5 - 132*d*n3*n4*n5 + 
      24*n1*n3*n4*n5 + 44*n2*n3*n4*n5 + 44*n3^2*n4*n5 + 132*n4^2*n5 - 
      56*d*n4^2*n5 + 16*n1*n4^2*n5 + 20*n2*n4^2*n5 + 36*n3*n4^2*n5 + 
      8*n4^3*n5 + 116*n5^2 - 152*d*n5^2 + 42*d^2*n5^2 - 8*n1*n5^2 - 
      8*n1^2*n5^2 + 20*n2*n5^2 - 16*d*n2*n5^2 - 8*n1*n2*n5^2 + 144*n3*n5^2 - 
      72*d*n3*n5^2 + 8*n1*n3*n5^2 + 20*n2*n3*n5^2 + 28*n3^2*n5^2 + 
      132*n4*n5^2 - 64*d*n4*n5^2 + 16*n1*n4*n5^2 + 20*n2*n4*n5^2 + 
      44*n3*n4*n5^2 + 16*n4^2*n5^2 + 8*n5^3 - 8*d*n5^3 + 8*n3*n5^3 + 
      8*n4*n5^3)*j[p4, n1, n2, n3, n4, 2 + n5, 0, 0, 1, -1, 1, 1, -1, 1, 1])/
    ((-3 + d - n4 - n5)*(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 
      34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 
      44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 
      280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 
      152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 
      16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 
      152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 
      24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 
      40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 
      24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 
      16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((-12 + 17*d - 5*d^2 + 2*n1 - 2*d*n1 - 16*n3 + 9*d*n3 + 
      2*n1*n3 - 4*n3^2 - 16*n4 + 9*d*n4 + 2*n1*n4 - 8*n3*n4 - 4*n4^2 - 
      16*n5 + 21*d*n5 - 5*d^2*n5 + 2*n1*n5 - 2*d*n1*n5 - 20*n3*n5 + 
      9*d*n3*n5 + 2*n1*n3*n5 - 4*n3^2*n5 - 20*n4*n5 + 9*d*n4*n5 + 
      2*n1*n4*n5 - 8*n3*n4*n5 - 4*n4^2*n5 - 4*n5^2 + 4*d*n5^2 - 4*n3*n5^2 - 
      4*n4*n5^2)*j[p4, n1, n2, n3, n4, 2 + n5, 1, -1, 1, 0, 1, 1, -1, 0, 1])/
    ((-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 8*n2 - 
      6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((12 - 17*d + 5*d^2 - 2*n1 + 2*d*n1 + 16*n3 - 
      9*d*n3 - 2*n1*n3 + 4*n3^2 + 16*n4 - 9*d*n4 - 2*n1*n4 + 8*n3*n4 + 
      4*n4^2 + 16*n5 - 21*d*n5 + 5*d^2*n5 - 2*n1*n5 + 2*d*n1*n5 + 20*n3*n5 - 
      9*d*n3*n5 - 2*n1*n3*n5 + 4*n3^2*n5 + 20*n4*n5 - 9*d*n4*n5 - 
      2*n1*n4*n5 + 8*n3*n4*n5 + 4*n4^2*n5 + 4*n5^2 - 4*d*n5^2 + 4*n3*n5^2 + 
      4*n4*n5^2)*j[p4, n1, n2, n3, n4, 2 + n5, 1, -1, 1, 0, 1, 1, -1, 1, 0])/
    ((-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 8*n2 - 
      6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((64 - 74*d + 19*d^2 - 20*n1 + 4*d*n1 - 4*n1^2 + 
      16*n2 - 12*d*n2 - 8*n1*n2 + 72*n3 - 30*d*n3 + 4*n1*n3 + 16*n2*n3 + 
      8*n3^2 + 80*n4 - 38*d*n4 + 4*n1*n4 + 16*n2*n4 + 24*n3*n4 + 16*n4^2 + 
      80*n5 - 86*d*n5 + 19*d^2*n5 - 28*n1*n5 + 4*d*n1*n5 - 4*n1^2*n5 + 
      16*n2*n5 - 12*d*n2*n5 - 8*n1*n2*n5 + 88*n3*n5 - 30*d*n3*n5 + 
      4*n1*n3*n5 + 16*n2*n3*n5 + 8*n3^2*n5 + 96*n4*n5 - 38*d*n4*n5 + 
      4*n1*n4*n5 + 16*n2*n4*n5 + 24*n3*n4*n5 + 16*n4^2*n5 + 16*n5^2 - 
      12*d*n5^2 - 8*n1*n5^2 + 16*n3*n5^2 + 16*n4*n5^2)*
     j[p4, n1, n2, n3, n4, 2 + n5, 1, 0, 1, -1, 1, 1, -1, 0, 1])/
    (2*(-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 
      8*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((-64 + 74*d - 19*d^2 + 20*n1 - 4*d*n1 + 4*n1^2 - 
      16*n2 + 12*d*n2 + 8*n1*n2 - 72*n3 + 30*d*n3 - 4*n1*n3 - 16*n2*n3 - 
      8*n3^2 - 80*n4 + 38*d*n4 - 4*n1*n4 - 16*n2*n4 - 24*n3*n4 - 16*n4^2 - 
      80*n5 + 86*d*n5 - 19*d^2*n5 + 28*n1*n5 - 4*d*n1*n5 + 4*n1^2*n5 - 
      16*n2*n5 + 12*d*n2*n5 + 8*n1*n2*n5 - 88*n3*n5 + 30*d*n3*n5 - 
      4*n1*n3*n5 - 16*n2*n3*n5 - 8*n3^2*n5 - 96*n4*n5 + 38*d*n4*n5 - 
      4*n1*n4*n5 - 16*n2*n4*n5 - 24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 
      12*d*n5^2 + 8*n1*n5^2 - 16*n3*n5^2 - 16*n4*n5^2)*
     j[p4, n1, n2, n3, n4, 2 + n5, 1, 0, 1, -1, 1, 1, -1, 1, 0])/
    (2*(-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 
      8*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + (n4*j[p4, n1, n2, n3, 1 + n4, n5, 0, 0, 1, 0, 1, 
      1, -1, 1, 1])/(-3 + d - n4 - n5) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, 1, 0, 0, 0, 1, 1, -1, 1, 1])/
    (2*(-3 + d - n4 - n5)) + (n4*j[p4, n1, n2, n3, 1 + n4, n5, 1, 0, 1, 0, 0, 
      1, -1, 1, 1])/(2*(-3 + d - n4 - n5)) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, 1, 0, 1, 0, 1, 0, -1, 1, 1])/
    (2*(-3 + d - n4 - n5)) + (n4*j[p4, n1, n2, n3, 1 + n4, n5, 1, 0, 1, 0, 1, 
      1, -1, 1, 0])/(2*(-3 + d - n4 - n5)) + 
   ((-36*n4 + 62*d*n4 - 39*d^2*n4 + 8*d^3*n4 + 116*n1*n4 - 132*d*n1*n4 + 
      34*d^2*n1*n4 - 12*n1^2*n4 - 8*n1^3*n4 + 44*n2*n4 - 52*d*n2*n4 + 
      13*d^2*n2*n4 + 8*n1*n2*n4 - 12*d*n1*n2*n4 - 12*n1^2*n2*n4 + 8*n2^2*n4 - 
      6*d*n2^2*n4 - 4*n1*n2^2*n4 - 136*n3*n4 + 166*d*n3*n4 - 46*d^2*n3*n4 + 
      124*n1*n3*n4 - 52*d*n1*n3*n4 + 16*n1^2*n3*n4 + 36*n2*n3*n4 - 
      10*d*n2*n3*n4 + 28*n1*n2*n3*n4 + 8*n2^2*n3*n4 - 116*n3^2*n4 + 
      56*d*n3^2*n4 + 8*n1*n3^2*n4 - 8*n2*n3^2*n4 - 16*n3^3*n4 - 56*n4^2 + 
      68*d*n4^2 - 20*d^2*n4^2 + 104*n1*n4^2 - 48*d*n1*n4^2 + 16*n1^2*n4^2 + 
      48*n2*n4^2 - 20*d*n2*n4^2 + 24*n1*n2*n4^2 + 8*n2^2*n4^2 - 140*n3*n4^2 + 
      72*d*n3*n4^2 + 16*n1*n3*n4^2 - 4*n2*n3*n4^2 - 36*n3^2*n4^2 - 20*n4^3 + 
      12*d*n4^3 + 8*n1*n4^3 + 4*n2*n4^3 - 20*n3*n4^3 - 20*n4*n5 + 
      24*d*n4*n5 - 8*d^2*n4*n5 + 24*n1*n4*n5 - 16*d*n1*n4*n5 + 4*n2*n4*n5 - 
      4*d*n2*n4*n5 - 40*n3*n4*n5 + 28*d*n3*n4*n5 + 16*n1*n3*n4*n5 + 
      4*n2*n3*n4*n5 - 20*n3^2*n4*n5 - 20*n4^2*n5 + 12*d*n4^2*n5 + 
      8*n1*n4^2*n5 + 4*n2*n4^2*n5 - 20*n3*n4^2*n5)*j[p4, n1, n2, n3, 1 + n4, 
      1 + n5, 0, -1, 1, 0, 1, 1, -1, 1, 1])/((-3 + d - n4 - n5)*
     (-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 34*d^2*n1 + 
      40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 44*d^2*n2 + 
      24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 280*n3 + 
      248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 152*n2*n3 + 
      68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
      16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 152*n1*n4 + 
      72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
      16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
      8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 
      16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 16*n1*n5 + 
      16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
      96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
      104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
      16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((276*n4 - 474*d*n4 + 253*d^2*n4 - 43*d^3*n4 - 28*n1*n4 + 12*d*n1*n4 - 
      28*n1^2*n4 + 12*d*n1^2*n4 + 92*n2*n4 - 112*d*n2*n4 + 31*d^2*n2*n4 - 
      32*n1*n2*n4 + 12*d*n1*n2*n4 - 4*n1^2*n2*n4 + 8*n2^2*n4 - 6*d*n2^2*n4 - 
      4*n1*n2^2*n4 + 416*n3*n4 - 414*d*n3*n4 + 100*d^2*n3*n4 + 20*n1*n3*n4 - 
      12*d*n1*n3*n4 - 8*n1^2*n3*n4 + 116*n2*n3*n4 - 58*d*n2*n3*n4 - 
      4*n1*n2*n3*n4 + 8*n2^2*n3*n4 + 156*n3^2*n4 - 72*d*n3^2*n4 + 
      8*n1*n3^2*n4 + 24*n2*n3^2*n4 + 16*n3^3*n4 + 384*n4^2 - 384*d*n4^2 + 
      94*d^2*n4^2 + 48*n1*n4^2 - 24*d*n1*n4^2 - 8*n1^2*n4^2 + 112*n2*n4^2 - 
      56*d*n2*n4^2 + 8*n2^2*n4^2 + 276*n3*n4^2 - 132*d*n3*n4^2 + 
      24*n1*n3*n4^2 + 44*n2*n3*n4^2 + 44*n3^2*n4^2 + 116*n4^3 - 56*d*n4^3 + 
      16*n1*n4^3 + 20*n2*n4^3 + 36*n3*n4^3 + 8*n4^4 + 108*n4*n5 - 
      144*d*n4*n5 + 42*d^2*n4*n5 - 8*n1*n4*n5 - 8*n1^2*n4*n5 + 20*n2*n4*n5 - 
      16*d*n2*n4*n5 - 8*n1*n2*n4*n5 + 136*n3*n4*n5 - 72*d*n3*n4*n5 + 
      8*n1*n3*n4*n5 + 20*n2*n3*n4*n5 + 28*n3^2*n4*n5 + 124*n4^2*n5 - 
      64*d*n4^2*n5 + 16*n1*n4^2*n5 + 20*n2*n4^2*n5 + 44*n3*n4^2*n5 + 
      16*n4^3*n5 + 8*n4*n5^2 - 8*d*n4*n5^2 + 8*n3*n4*n5^2 + 8*n4^2*n5^2)*
     j[p4, n1, n2, n3, 1 + n4, 1 + n5, 0, 0, 1, -1, 1, 1, -1, 1, 1])/
    ((-3 + d - n4 - n5)*(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 
      34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 
      44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 
      280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 
      152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 
      16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 
      152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 
      24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 
      40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 
      24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 
      16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((312*n4 - 536*d*n4 + 292*d^2*n4 - 51*d^3*n4 - 
      144*n1*n4 + 144*d*n1*n4 - 34*d^2*n1*n4 - 16*n1^2*n4 + 12*d*n1^2*n4 + 
      8*n1^3*n4 + 48*n2*n4 - 60*d*n2*n4 + 18*d^2*n2*n4 - 40*n1*n2*n4 + 
      24*d*n1*n2*n4 + 8*n1^2*n2*n4 + 552*n3*n4 - 580*d*n3*n4 + 
      146*d^2*n3*n4 - 104*n1*n3*n4 + 40*d*n1*n3*n4 - 24*n1^2*n3*n4 + 
      80*n2*n3*n4 - 48*d*n2*n3*n4 - 32*n1*n2*n3*n4 + 272*n3^2*n4 - 
      128*d*n3^2*n4 + 32*n2*n3^2*n4 + 32*n3^3*n4 + 440*n4^2 - 452*d*n4^2 + 
      114*d^2*n4^2 - 56*n1*n4^2 + 24*d*n1*n4^2 - 24*n1^2*n4^2 + 64*n2*n4^2 - 
      36*d*n2*n4^2 - 24*n1*n2*n4^2 + 416*n3*n4^2 - 204*d*n3*n4^2 + 
      8*n1*n3*n4^2 + 48*n2*n3*n4^2 + 80*n3^2*n4^2 + 136*n4^3 - 68*d*n4^3 + 
      8*n1*n4^3 + 16*n2*n4^3 + 56*n3*n4^3 + 8*n4^4 + 128*n4*n5 - 
      168*d*n4*n5 + 50*d^2*n4*n5 - 32*n1*n4*n5 + 16*d*n1*n4*n5 - 
      8*n1^2*n4*n5 + 16*n2*n4*n5 - 12*d*n2*n4*n5 - 8*n1*n2*n4*n5 + 
      176*n3*n4*n5 - 100*d*n3*n4*n5 - 8*n1*n3*n4*n5 + 16*n2*n3*n4*n5 + 
      48*n3^2*n4*n5 + 144*n4^2*n5 - 76*d*n4^2*n5 + 8*n1*n4^2*n5 + 
      16*n2*n4^2*n5 + 64*n3*n4^2*n5 + 16*n4^3*n5 + 8*n4*n5^2 - 8*d*n4*n5^2 + 
      8*n3*n4*n5^2 + 8*n4^2*n5^2)*j[p4, n1, n2, n3, 1 + n4, 1 + n5, 1, -1, 0, 
      0, 1, 1, -1, 1, 1])/(2*(-3 + d - n4 - n5)*(-240 + 412*d - 214*d^2 + 
      35*d^3 - 88*n1 + 120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 
      136*n2 + 164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 
      12*d*n2^2 + 8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 
      64*d*n1*n3 - 8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 
      16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 
      316*d*n4 - 74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
      34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) - (n4*j[p4, n1, n2, n3, 1 + n4, 1 + n5, 1, -1, 1, 0, 0, 1, 
      -1, 1, 1])/(2*(-3 + d - n4 - n5)) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, 1 + n5, 1, -1, 1, 0, 1, 0, -1, 1, 1])/
    (2*(-3 + d - n4 - n5)) + ((22*n4 - 24*d*n4 + 6*d^2*n4 - 12*n1*n4 + 
      4*d*n1*n4 + 4*n2*n4 - 3*d*n2*n4 - 2*n1*n2*n4 + 26*n3*n4 - 11*d*n3*n4 - 
      2*n1*n3*n4 + 4*n2*n3*n4 + 4*n3^2*n4 + 28*n4^2 - 13*d*n4^2 - 2*n1*n4^2 + 
      4*n2*n4^2 + 10*n3*n4^2 + 6*n4^3 + 6*n4*n5 - 4*d*n4*n5 - 4*n1*n4*n5 + 
      6*n3*n4*n5 + 6*n4^2*n5)*j[p4, n1, n2, n3, 1 + n4, 1 + n5, 1, -1, 1, 0, 
      1, 1, -1, 1, 0])/((-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 
      4*d*n1 - 4*n1^2 + 8*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 
      8*n2*n3 + 24*n4 - 12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 
      4*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((-276*n4 + 474*d*n4 - 253*d^2*n4 + 43*d^3*n4 + 28*n1*n4 - 12*d*n1*n4 + 
      28*n1^2*n4 - 12*d*n1^2*n4 - 92*n2*n4 + 112*d*n2*n4 - 31*d^2*n2*n4 + 
      32*n1*n2*n4 - 12*d*n1*n2*n4 + 4*n1^2*n2*n4 - 8*n2^2*n4 + 6*d*n2^2*n4 + 
      4*n1*n2^2*n4 - 416*n3*n4 + 414*d*n3*n4 - 100*d^2*n3*n4 - 20*n1*n3*n4 + 
      12*d*n1*n3*n4 + 8*n1^2*n3*n4 - 116*n2*n3*n4 + 58*d*n2*n3*n4 + 
      4*n1*n2*n3*n4 - 8*n2^2*n3*n4 - 156*n3^2*n4 + 72*d*n3^2*n4 - 
      8*n1*n3^2*n4 - 24*n2*n3^2*n4 - 16*n3^3*n4 - 384*n4^2 + 384*d*n4^2 - 
      94*d^2*n4^2 - 48*n1*n4^2 + 24*d*n1*n4^2 + 8*n1^2*n4^2 - 112*n2*n4^2 + 
      56*d*n2*n4^2 - 8*n2^2*n4^2 - 276*n3*n4^2 + 132*d*n3*n4^2 - 
      24*n1*n3*n4^2 - 44*n2*n3*n4^2 - 44*n3^2*n4^2 - 116*n4^3 + 56*d*n4^3 - 
      16*n1*n4^3 - 20*n2*n4^3 - 36*n3*n4^3 - 8*n4^4 - 108*n4*n5 + 
      144*d*n4*n5 - 42*d^2*n4*n5 + 8*n1*n4*n5 + 8*n1^2*n4*n5 - 20*n2*n4*n5 + 
      16*d*n2*n4*n5 + 8*n1*n2*n4*n5 - 136*n3*n4*n5 + 72*d*n3*n4*n5 - 
      8*n1*n3*n4*n5 - 20*n2*n3*n4*n5 - 28*n3^2*n4*n5 - 124*n4^2*n5 + 
      64*d*n4^2*n5 - 16*n1*n4^2*n5 - 20*n2*n4^2*n5 - 44*n3*n4^2*n5 - 
      16*n4^3*n5 - 8*n4*n5^2 + 8*d*n4*n5^2 - 8*n3*n4*n5^2 - 8*n4^2*n5^2)*
     j[p4, n1, n2, n3, 1 + n4, 1 + n5, 1, 0, 0, -1, 1, 1, -1, 1, 1])/
    ((-3 + d - n4 - n5)*(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 
      34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 
      44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 
      280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 
      152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 
      16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 
      152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 
      24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 
      40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 
      24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 
      16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((-64*n4 + 74*d*n4 - 19*d^2*n4 + 20*n1*n4 - 4*d*n1*n4 + 
      4*n1^2*n4 - 16*n2*n4 + 12*d*n2*n4 + 8*n1*n2*n4 - 72*n3*n4 + 
      30*d*n3*n4 - 4*n1*n3*n4 - 16*n2*n3*n4 - 8*n3^2*n4 - 80*n4^2 + 
      38*d*n4^2 - 4*n1*n4^2 - 16*n2*n4^2 - 24*n3*n4^2 - 16*n4^3 - 16*n4*n5 + 
      12*d*n4*n5 + 8*n1*n4*n5 - 16*n3*n4*n5 - 16*n4^2*n5)*
     j[p4, n1, n2, n3, 1 + n4, 1 + n5, 1, 0, 1, -1, 1, 1, -1, 1, 0])/
    (2*(-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 
      8*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((44*n3 - 48*d*n3 + 12*d^2*n3 - 24*n1*n3 + 
      8*d*n1*n3 + 8*n2*n3 - 6*d*n2*n3 - 4*n1*n2*n3 + 52*n3^2 - 22*d*n3^2 - 
      4*n1*n3^2 + 8*n2*n3^2 + 8*n3^3 + 56*n3*n4 - 26*d*n3*n4 - 4*n1*n3*n4 + 
      8*n2*n3*n4 + 20*n3^2*n4 + 12*n3*n4^2 + 12*n3*n5 - 8*d*n3*n5 - 
      8*n1*n3*n5 + 12*n3^2*n5 + 12*n3*n4*n5)*j[p4, n1, n2, 1 + n3, -1 + n4, 
      1 + n5, 1, 0, 0, 0, 1, 1, -1, 1, 1])/(-240 + 412*d - 214*d^2 + 35*d^3 - 
     88*n1 + 120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
     164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
     8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
     8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
     40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
     74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
     76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
     40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
     24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
     34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
     8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
     8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
     24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((44*n3 - 48*d*n3 + 12*d^2*n3 - 24*n1*n3 + 8*d*n1*n3 + 8*n2*n3 - 
      6*d*n2*n3 - 4*n1*n2*n3 + 52*n3^2 - 22*d*n3^2 - 4*n1*n3^2 + 8*n2*n3^2 + 
      8*n3^3 + 56*n3*n4 - 26*d*n3*n4 - 4*n1*n3*n4 + 8*n2*n3*n4 + 20*n3^2*n4 + 
      12*n3*n4^2 + 12*n3*n5 - 8*d*n3*n5 - 8*n1*n3*n5 + 12*n3^2*n5 + 
      12*n3*n4*n5)*j[p4, n1, n2, 1 + n3, -1 + n4, 1 + n5, 1, 0, 1, 0, 0, 1, 
      -1, 1, 1])/(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 
     34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 
     44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 
     280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 
     152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 
     16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 
     152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 
     24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 
     40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 
     24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 
     16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
     96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
     104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
     16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-44*n3 + 48*d*n3 - 12*d^2*n3 + 24*n1*n3 - 8*d*n1*n3 - 8*n2*n3 + 
      6*d*n2*n3 + 4*n1*n2*n3 - 52*n3^2 + 22*d*n3^2 + 4*n1*n3^2 - 8*n2*n3^2 - 
      8*n3^3 - 56*n3*n4 + 26*d*n3*n4 + 4*n1*n3*n4 - 8*n2*n3*n4 - 20*n3^2*n4 - 
      12*n3*n4^2 - 12*n3*n5 + 8*d*n3*n5 + 8*n1*n3*n5 - 12*n3^2*n5 - 
      12*n3*n4*n5)*j[p4, n1, n2, 1 + n3, -1 + n4, 1 + n5, 1, 0, 1, 0, 1, 0, 
      -1, 1, 1])/(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 
     34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 
     44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 
     280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 
     152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 
     16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 
     152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 
     24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 
     40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 
     24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 
     16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
     96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
     104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
     16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-88*n3 + 96*d*n3 - 24*d^2*n3 + 48*n1*n3 - 16*d*n1*n3 - 16*n2*n3 + 
      12*d*n2*n3 + 8*n1*n2*n3 - 104*n3^2 + 44*d*n3^2 + 8*n1*n3^2 - 
      16*n2*n3^2 - 16*n3^3 - 112*n3*n4 + 52*d*n3*n4 + 8*n1*n3*n4 - 
      16*n2*n3*n4 - 40*n3^2*n4 - 24*n3*n4^2 - 24*n3*n5 + 16*d*n3*n5 + 
      16*n1*n3*n5 - 24*n3^2*n5 - 24*n3*n4*n5)*j[p4, n1, n2, 1 + n3, -1 + n4, 
      1 + n5, 1, 0, 1, 0, 1, 1, -1, 1, 1])/(-240 + 412*d - 214*d^2 + 35*d^3 - 
     88*n1 + 120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
     164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
     8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
     8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
     40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
     74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
     76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
     40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
     24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
     34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
     8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
     8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
     24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-168*n3 + 288*d*n3 - 136*d^2*n3 + 19*d^3*n3 - 320*n1*n3 + 384*d*n1*n3 - 
      102*d^2*n1*n3 + 64*n1^2*n3 - 12*d*n1^2*n3 + 24*n1^3*n3 - 224*n2*n3 + 
      268*d*n2*n3 - 70*d^2*n2*n3 + 8*n1*n2*n3 + 24*d*n1*n2*n3 + 
      40*n1^2*n2*n3 - 32*n2^2*n3 + 24*d*n2^2*n3 + 16*n1*n2^2*n3 - 8*n3^2 - 
      84*d*n3^2 + 38*d^2*n3^2 - 392*n1*n3^2 + 168*d*n1*n3^2 - 40*n1^2*n3^2 - 
      224*n2*n3^2 + 88*d*n2*n3^2 - 80*n1*n2*n3^2 - 32*n2^2*n3^2 + 192*n3^3 - 
      96*d*n3^3 - 32*n1*n3^3 + 32*n3^4 - 216*n3*n4 + 180*d*n3*n4 - 
      34*d^2*n3*n4 - 360*n1*n3*n4 + 168*d*n1*n3*n4 - 40*n1^2*n3*n4 - 
      256*n2*n3*n4 + 116*d*n2*n3*n4 - 72*n1*n2*n3*n4 - 32*n2^2*n3*n4 + 
      144*n3^2*n4 - 84*d*n3^2*n4 - 72*n1*n3^2*n4 - 32*n2*n3^2*n4 + 
      64*n3^3*n4 - 56*n3*n4^2 + 20*d*n3*n4^2 - 40*n1*n3*n4^2 - 
      32*n2*n3*n4^2 + 24*n3^2*n4^2 - 8*n3*n4^3 - 48*n3*n5 + 72*d*n3*n5 - 
      18*d^2*n3*n5 - 64*n1*n3*n5 + 48*d*n1*n3*n5 + 8*n1^2*n3*n5 - 
      32*n2*n3*n5 + 28*d*n2*n3*n5 + 8*n1*n2*n3*n5 - 16*n3^2*n5 - 
      12*d*n3^2*n5 - 56*n1*n3^2*n5 - 32*n2*n3^2*n5 + 32*n3^3*n5 - 
      64*n3*n4*n5 + 28*d*n3*n4*n5 - 40*n1*n3*n4*n5 - 32*n2*n3*n4*n5 + 
      16*n3^2*n4*n5 - 16*n3*n4^2*n5 - 8*n3*n5^2 + 8*d*n3*n5^2 - 8*n3^2*n5^2 - 
      8*n3*n4*n5^2)*j[p4, n1, n2, 1 + n3, n4, 1 + n5, 1, -1, 0, 0, 1, 1, -1, 
      1, 1])/(2*(-3 + d - n4 - n5)*(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 
      120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
      164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
      74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
      34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((-312*n3 + 536*d*n3 - 292*d^2*n3 + 51*d^3*n3 + 
      144*n1*n3 - 144*d*n1*n3 + 34*d^2*n1*n3 + 16*n1^2*n3 - 12*d*n1^2*n3 - 
      8*n1^3*n3 - 48*n2*n3 + 60*d*n2*n3 - 18*d^2*n2*n3 + 40*n1*n2*n3 - 
      24*d*n1*n2*n3 - 8*n1^2*n2*n3 - 552*n3^2 + 580*d*n3^2 - 146*d^2*n3^2 + 
      104*n1*n3^2 - 40*d*n1*n3^2 + 24*n1^2*n3^2 - 80*n2*n3^2 + 48*d*n2*n3^2 + 
      32*n1*n2*n3^2 - 272*n3^3 + 128*d*n3^3 - 32*n2*n3^3 - 32*n3^4 - 
      440*n3*n4 + 452*d*n3*n4 - 114*d^2*n3*n4 + 56*n1*n3*n4 - 24*d*n1*n3*n4 + 
      24*n1^2*n3*n4 - 64*n2*n3*n4 + 36*d*n2*n3*n4 + 24*n1*n2*n3*n4 - 
      416*n3^2*n4 + 204*d*n3^2*n4 - 8*n1*n3^2*n4 - 48*n2*n3^2*n4 - 
      80*n3^3*n4 - 136*n3*n4^2 + 68*d*n3*n4^2 - 8*n1*n3*n4^2 - 
      16*n2*n3*n4^2 - 56*n3^2*n4^2 - 8*n3*n4^3 - 128*n3*n5 + 168*d*n3*n5 - 
      50*d^2*n3*n5 + 32*n1*n3*n5 - 16*d*n1*n3*n5 + 8*n1^2*n3*n5 - 
      16*n2*n3*n5 + 12*d*n2*n3*n5 + 8*n1*n2*n3*n5 - 176*n3^2*n5 + 
      100*d*n3^2*n5 + 8*n1*n3^2*n5 - 16*n2*n3^2*n5 - 48*n3^3*n5 - 
      144*n3*n4*n5 + 76*d*n3*n4*n5 - 8*n1*n3*n4*n5 - 16*n2*n3*n4*n5 - 
      64*n3^2*n4*n5 - 16*n3*n4^2*n5 - 8*n3*n5^2 + 8*d*n3*n5^2 - 8*n3^2*n5^2 - 
      8*n3*n4*n5^2)*j[p4, n1, n2, 1 + n3, n4, 1 + n5, 1, -1, 1, 0, 0, 1, -1, 
      1, 1])/(2*(-3 + d - n4 - n5)*(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 
      120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
      164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
      74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
      34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((312*n3 - 536*d*n3 + 292*d^2*n3 - 51*d^3*n3 - 
      144*n1*n3 + 144*d*n1*n3 - 34*d^2*n1*n3 - 16*n1^2*n3 + 12*d*n1^2*n3 + 
      8*n1^3*n3 + 48*n2*n3 - 60*d*n2*n3 + 18*d^2*n2*n3 - 40*n1*n2*n3 + 
      24*d*n1*n2*n3 + 8*n1^2*n2*n3 + 552*n3^2 - 580*d*n3^2 + 146*d^2*n3^2 - 
      104*n1*n3^2 + 40*d*n1*n3^2 - 24*n1^2*n3^2 + 80*n2*n3^2 - 48*d*n2*n3^2 - 
      32*n1*n2*n3^2 + 272*n3^3 - 128*d*n3^3 + 32*n2*n3^3 + 32*n3^4 + 
      440*n3*n4 - 452*d*n3*n4 + 114*d^2*n3*n4 - 56*n1*n3*n4 + 24*d*n1*n3*n4 - 
      24*n1^2*n3*n4 + 64*n2*n3*n4 - 36*d*n2*n3*n4 - 24*n1*n2*n3*n4 + 
      416*n3^2*n4 - 204*d*n3^2*n4 + 8*n1*n3^2*n4 + 48*n2*n3^2*n4 + 
      80*n3^3*n4 + 136*n3*n4^2 - 68*d*n3*n4^2 + 8*n1*n3*n4^2 + 
      16*n2*n3*n4^2 + 56*n3^2*n4^2 + 8*n3*n4^3 + 128*n3*n5 - 168*d*n3*n5 + 
      50*d^2*n3*n5 - 32*n1*n3*n5 + 16*d*n1*n3*n5 - 8*n1^2*n3*n5 + 
      16*n2*n3*n5 - 12*d*n2*n3*n5 - 8*n1*n2*n3*n5 + 176*n3^2*n5 - 
      100*d*n3^2*n5 - 8*n1*n3^2*n5 + 16*n2*n3^2*n5 + 48*n3^3*n5 + 
      144*n3*n4*n5 - 76*d*n3*n4*n5 + 8*n1*n3*n4*n5 + 16*n2*n3*n4*n5 + 
      64*n3^2*n4*n5 + 16*n3*n4^2*n5 + 8*n3*n5^2 - 8*d*n3*n5^2 + 8*n3^2*n5^2 + 
      8*n3*n4*n5^2)*j[p4, n1, n2, 1 + n3, n4, 1 + n5, 1, -1, 1, 0, 1, 0, -1, 
      1, 1])/(2*(-3 + d - n4 - n5)*(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 
      120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
      164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
      74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
      34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((-168*n3 + 288*d*n3 - 136*d^2*n3 + 19*d^3*n3 - 
      320*n1*n3 + 384*d*n1*n3 - 102*d^2*n1*n3 + 64*n1^2*n3 - 12*d*n1^2*n3 + 
      24*n1^3*n3 - 224*n2*n3 + 268*d*n2*n3 - 70*d^2*n2*n3 + 8*n1*n2*n3 + 
      24*d*n1*n2*n3 + 40*n1^2*n2*n3 - 32*n2^2*n3 + 24*d*n2^2*n3 + 
      16*n1*n2^2*n3 - 8*n3^2 - 84*d*n3^2 + 38*d^2*n3^2 - 392*n1*n3^2 + 
      168*d*n1*n3^2 - 40*n1^2*n3^2 - 224*n2*n3^2 + 88*d*n2*n3^2 - 
      80*n1*n2*n3^2 - 32*n2^2*n3^2 + 192*n3^3 - 96*d*n3^3 - 32*n1*n3^3 + 
      32*n3^4 - 216*n3*n4 + 180*d*n3*n4 - 34*d^2*n3*n4 - 360*n1*n3*n4 + 
      168*d*n1*n3*n4 - 40*n1^2*n3*n4 - 256*n2*n3*n4 + 116*d*n2*n3*n4 - 
      72*n1*n2*n3*n4 - 32*n2^2*n3*n4 + 144*n3^2*n4 - 84*d*n3^2*n4 - 
      72*n1*n3^2*n4 - 32*n2*n3^2*n4 + 64*n3^3*n4 - 56*n3*n4^2 + 
      20*d*n3*n4^2 - 40*n1*n3*n4^2 - 32*n2*n3*n4^2 + 24*n3^2*n4^2 - 
      8*n3*n4^3 - 48*n3*n5 + 72*d*n3*n5 - 18*d^2*n3*n5 - 64*n1*n3*n5 + 
      48*d*n1*n3*n5 + 8*n1^2*n3*n5 - 32*n2*n3*n5 + 28*d*n2*n3*n5 + 
      8*n1*n2*n3*n5 - 16*n3^2*n5 - 12*d*n3^2*n5 - 56*n1*n3^2*n5 - 
      32*n2*n3^2*n5 + 32*n3^3*n5 - 64*n3*n4*n5 + 28*d*n3*n4*n5 - 
      40*n1*n3*n4*n5 - 32*n2*n3*n4*n5 + 16*n3^2*n4*n5 - 16*n3*n4^2*n5 - 
      8*n3*n5^2 + 8*d*n3*n5^2 - 8*n3^2*n5^2 - 8*n3*n4*n5^2)*
     j[p4, n1, n2, 1 + n3, n4, 1 + n5, 1, -1, 1, 0, 1, 1, -1, 0, 1])/
    (2*(-3 + d - n4 - n5)*(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 
      120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
      164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
      74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
      34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((44*n3 - 48*d*n3 + 12*d^2*n3 - 24*n1*n3 + 8*d*n1*n3 + 
      8*n2*n3 - 6*d*n2*n3 - 4*n1*n2*n3 + 52*n3^2 - 22*d*n3^2 - 4*n1*n3^2 + 
      8*n2*n3^2 + 8*n3^3 + 56*n3*n4 - 26*d*n3*n4 - 4*n1*n3*n4 + 8*n2*n3*n4 + 
      20*n3^2*n4 + 12*n3*n4^2 + 12*n3*n5 - 8*d*n3*n5 - 8*n1*n3*n5 + 
      12*n3^2*n5 + 12*n3*n4*n5)*j[p4, n1, n2, 1 + n3, n4, 1 + n5, 1, -1, 1, 
      0, 1, 1, -1, 1, 0])/(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 
     120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
     164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
     8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
     8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
     40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
     74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
     76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
     40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
     24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
     34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
     8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
     8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
     24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((276*n3 - 474*d*n3 + 253*d^2*n3 - 43*d^3*n3 - 28*n1*n3 + 12*d*n1*n3 - 
      28*n1^2*n3 + 12*d*n1^2*n3 + 92*n2*n3 - 112*d*n2*n3 + 31*d^2*n2*n3 - 
      32*n1*n2*n3 + 12*d*n1*n2*n3 - 4*n1^2*n2*n3 + 8*n2^2*n3 - 6*d*n2^2*n3 - 
      4*n1*n2^2*n3 + 416*n3^2 - 414*d*n3^2 + 100*d^2*n3^2 + 20*n1*n3^2 - 
      12*d*n1*n3^2 - 8*n1^2*n3^2 + 116*n2*n3^2 - 58*d*n2*n3^2 - 
      4*n1*n2*n3^2 + 8*n2^2*n3^2 + 156*n3^3 - 72*d*n3^3 + 8*n1*n3^3 + 
      24*n2*n3^3 + 16*n3^4 + 384*n3*n4 - 384*d*n3*n4 + 94*d^2*n3*n4 + 
      48*n1*n3*n4 - 24*d*n1*n3*n4 - 8*n1^2*n3*n4 + 112*n2*n3*n4 - 
      56*d*n2*n3*n4 + 8*n2^2*n3*n4 + 276*n3^2*n4 - 132*d*n3^2*n4 + 
      24*n1*n3^2*n4 + 44*n2*n3^2*n4 + 44*n3^3*n4 + 116*n3*n4^2 - 
      56*d*n3*n4^2 + 16*n1*n3*n4^2 + 20*n2*n3*n4^2 + 36*n3^2*n4^2 + 
      8*n3*n4^3 + 108*n3*n5 - 144*d*n3*n5 + 42*d^2*n3*n5 - 8*n1*n3*n5 - 
      8*n1^2*n3*n5 + 20*n2*n3*n5 - 16*d*n2*n3*n5 - 8*n1*n2*n3*n5 + 
      136*n3^2*n5 - 72*d*n3^2*n5 + 8*n1*n3^2*n5 + 20*n2*n3^2*n5 + 
      28*n3^3*n5 + 124*n3*n4*n5 - 64*d*n3*n4*n5 + 16*n1*n3*n4*n5 + 
      20*n2*n3*n4*n5 + 44*n3^2*n4*n5 + 16*n3*n4^2*n5 + 8*n3*n5^2 - 
      8*d*n3*n5^2 + 8*n3^2*n5^2 + 8*n3*n4*n5^2)*j[p4, n1, n2, 1 + n3, n4, 
      1 + n5, 1, 0, 0, 0, 1, 1, -2, 1, 1])/((-3 + d - n4 - n5)*
     (-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 34*d^2*n1 + 
      40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 44*d^2*n2 + 
      24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 280*n3 + 
      248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 152*n2*n3 + 
      68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
      16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 152*n1*n4 + 
      72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
      16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
      8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 
      16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 16*n1*n5 + 
      16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
      96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
      104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
      16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-552*n3 + 948*d*n3 - 506*d^2*n3 + 86*d^3*n3 + 56*n1*n3 - 24*d*n1*n3 + 
      56*n1^2*n3 - 24*d*n1^2*n3 - 184*n2*n3 + 224*d*n2*n3 - 62*d^2*n2*n3 + 
      64*n1*n2*n3 - 24*d*n1*n2*n3 + 8*n1^2*n2*n3 - 16*n2^2*n3 + 
      12*d*n2^2*n3 + 8*n1*n2^2*n3 - 832*n3^2 + 828*d*n3^2 - 200*d^2*n3^2 - 
      40*n1*n3^2 + 24*d*n1*n3^2 + 16*n1^2*n3^2 - 232*n2*n3^2 + 
      116*d*n2*n3^2 + 8*n1*n2*n3^2 - 16*n2^2*n3^2 - 312*n3^3 + 144*d*n3^3 - 
      16*n1*n3^3 - 48*n2*n3^3 - 32*n3^4 - 768*n3*n4 + 768*d*n3*n4 - 
      188*d^2*n3*n4 - 96*n1*n3*n4 + 48*d*n1*n3*n4 + 16*n1^2*n3*n4 - 
      224*n2*n3*n4 + 112*d*n2*n3*n4 - 16*n2^2*n3*n4 - 552*n3^2*n4 + 
      264*d*n3^2*n4 - 48*n1*n3^2*n4 - 88*n2*n3^2*n4 - 88*n3^3*n4 - 
      232*n3*n4^2 + 112*d*n3*n4^2 - 32*n1*n3*n4^2 - 40*n2*n3*n4^2 - 
      72*n3^2*n4^2 - 16*n3*n4^3 - 216*n3*n5 + 288*d*n3*n5 - 84*d^2*n3*n5 + 
      16*n1*n3*n5 + 16*n1^2*n3*n5 - 40*n2*n3*n5 + 32*d*n2*n3*n5 + 
      16*n1*n2*n3*n5 - 272*n3^2*n5 + 144*d*n3^2*n5 - 16*n1*n3^2*n5 - 
      40*n2*n3^2*n5 - 56*n3^3*n5 - 248*n3*n4*n5 + 128*d*n3*n4*n5 - 
      32*n1*n3*n4*n5 - 40*n2*n3*n4*n5 - 88*n3^2*n4*n5 - 32*n3*n4^2*n5 - 
      16*n3*n5^2 + 16*d*n3*n5^2 - 16*n3^2*n5^2 - 16*n3*n4*n5^2)*
     j[p4, n1, n2, 1 + n3, n4, 1 + n5, 1, 0, 0, 0, 1, 1, -1, 1, 1])/
    ((-3 + d - n4 - n5)*(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 
      34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 
      44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 
      280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 
      152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 
      16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 
      152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 
      24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 
      40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 
      24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 
      16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((276*n3 - 474*d*n3 + 253*d^2*n3 - 43*d^3*n3 - 28*n1*n3 + 
      12*d*n1*n3 - 28*n1^2*n3 + 12*d*n1^2*n3 + 92*n2*n3 - 112*d*n2*n3 + 
      31*d^2*n2*n3 - 32*n1*n2*n3 + 12*d*n1*n2*n3 - 4*n1^2*n2*n3 + 8*n2^2*n3 - 
      6*d*n2^2*n3 - 4*n1*n2^2*n3 + 416*n3^2 - 414*d*n3^2 + 100*d^2*n3^2 + 
      20*n1*n3^2 - 12*d*n1*n3^2 - 8*n1^2*n3^2 + 116*n2*n3^2 - 58*d*n2*n3^2 - 
      4*n1*n2*n3^2 + 8*n2^2*n3^2 + 156*n3^3 - 72*d*n3^3 + 8*n1*n3^3 + 
      24*n2*n3^3 + 16*n3^4 + 384*n3*n4 - 384*d*n3*n4 + 94*d^2*n3*n4 + 
      48*n1*n3*n4 - 24*d*n1*n3*n4 - 8*n1^2*n3*n4 + 112*n2*n3*n4 - 
      56*d*n2*n3*n4 + 8*n2^2*n3*n4 + 276*n3^2*n4 - 132*d*n3^2*n4 + 
      24*n1*n3^2*n4 + 44*n2*n3^2*n4 + 44*n3^3*n4 + 116*n3*n4^2 - 
      56*d*n3*n4^2 + 16*n1*n3*n4^2 + 20*n2*n3*n4^2 + 36*n3^2*n4^2 + 
      8*n3*n4^3 + 108*n3*n5 - 144*d*n3*n5 + 42*d^2*n3*n5 - 8*n1*n3*n5 - 
      8*n1^2*n3*n5 + 20*n2*n3*n5 - 16*d*n2*n3*n5 - 8*n1*n2*n3*n5 + 
      136*n3^2*n5 - 72*d*n3^2*n5 + 8*n1*n3^2*n5 + 20*n2*n3^2*n5 + 
      28*n3^3*n5 + 124*n3*n4*n5 - 64*d*n3*n4*n5 + 16*n1*n3*n4*n5 + 
      20*n2*n3*n4*n5 + 44*n3^2*n4*n5 + 16*n3*n4^2*n5 + 8*n3*n5^2 - 
      8*d*n3*n5^2 + 8*n3^2*n5^2 + 8*n3*n4*n5^2)*j[p4, n1, n2, 1 + n3, n4, 
      1 + n5, 1, 0, 1, 0, 0, 1, -2, 1, 1])/((-3 + d - n4 - n5)*
     (-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 34*d^2*n1 + 
      40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 44*d^2*n2 + 
      24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 280*n3 + 
      248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 152*n2*n3 + 
      68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
      16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 152*n1*n4 + 
      72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
      16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
      8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 
      16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 16*n1*n5 + 
      16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
      96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
      104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
      16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-276*n3 + 474*d*n3 - 253*d^2*n3 + 43*d^3*n3 + 28*n1*n3 - 12*d*n1*n3 + 
      28*n1^2*n3 - 12*d*n1^2*n3 - 92*n2*n3 + 112*d*n2*n3 - 31*d^2*n2*n3 + 
      32*n1*n2*n3 - 12*d*n1*n2*n3 + 4*n1^2*n2*n3 - 8*n2^2*n3 + 6*d*n2^2*n3 + 
      4*n1*n2^2*n3 - 416*n3^2 + 414*d*n3^2 - 100*d^2*n3^2 - 20*n1*n3^2 + 
      12*d*n1*n3^2 + 8*n1^2*n3^2 - 116*n2*n3^2 + 58*d*n2*n3^2 + 
      4*n1*n2*n3^2 - 8*n2^2*n3^2 - 156*n3^3 + 72*d*n3^3 - 8*n1*n3^3 - 
      24*n2*n3^3 - 16*n3^4 - 384*n3*n4 + 384*d*n3*n4 - 94*d^2*n3*n4 - 
      48*n1*n3*n4 + 24*d*n1*n3*n4 + 8*n1^2*n3*n4 - 112*n2*n3*n4 + 
      56*d*n2*n3*n4 - 8*n2^2*n3*n4 - 276*n3^2*n4 + 132*d*n3^2*n4 - 
      24*n1*n3^2*n4 - 44*n2*n3^2*n4 - 44*n3^3*n4 - 116*n3*n4^2 + 
      56*d*n3*n4^2 - 16*n1*n3*n4^2 - 20*n2*n3*n4^2 - 36*n3^2*n4^2 - 
      8*n3*n4^3 - 108*n3*n5 + 144*d*n3*n5 - 42*d^2*n3*n5 + 8*n1*n3*n5 + 
      8*n1^2*n3*n5 - 20*n2*n3*n5 + 16*d*n2*n3*n5 + 8*n1*n2*n3*n5 - 
      136*n3^2*n5 + 72*d*n3^2*n5 - 8*n1*n3^2*n5 - 20*n2*n3^2*n5 - 
      28*n3^3*n5 - 124*n3*n4*n5 + 64*d*n3*n4*n5 - 16*n1*n3*n4*n5 - 
      20*n2*n3*n4*n5 - 44*n3^2*n4*n5 - 16*n3*n4^2*n5 - 8*n3*n5^2 + 
      8*d*n3*n5^2 - 8*n3^2*n5^2 - 8*n3*n4*n5^2)*j[p4, n1, n2, 1 + n3, n4, 
      1 + n5, 1, 0, 1, 0, 1, 0, -2, 1, 1])/((-3 + d - n4 - n5)*
     (-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 34*d^2*n1 + 
      40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 44*d^2*n2 + 
      24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 280*n3 + 
      248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 152*n2*n3 + 
      68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
      16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 152*n1*n4 + 
      72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
      16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
      8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 
      16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 16*n1*n5 + 
      16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
      96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
      104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
      16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) - 
   (n3*j[p4, n1, n2, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, -2, 0, 1])/
    (-3 + d - n4 - n5) + ((-792*n3 + 1360*d*n3 - 720*d^2*n3 + 121*d^3*n3 - 
      32*n1*n3 + 96*d*n1*n3 - 34*d^2*n1*n3 + 96*n1^2*n3 - 36*d*n1^2*n3 + 
      8*n1^3*n3 - 320*n2*n3 + 388*d*n2*n3 - 106*d^2*n2*n3 + 88*n1*n2*n3 - 
      24*d*n1*n2*n3 + 24*n1^2*n2*n3 - 32*n2^2*n3 + 24*d*n2^2*n3 + 
      16*n1*n2^2*n3 - 1112*n3^2 + 1076*d*n3^2 - 254*d^2*n3^2 - 184*n1*n3^2 + 
      88*d*n1*n3^2 + 8*n1^2*n3^2 - 384*n2*n3^2 + 184*d*n2*n3^2 - 
      16*n1*n2*n3^2 - 32*n2^2*n3^2 - 352*n3^3 + 160*d*n3^3 - 32*n1*n3^3 - 
      64*n2*n3^3 - 32*n3^4 - 1096*n3*n4 + 1084*d*n3*n4 - 262*d^2*n3*n4 - 
      248*n1*n3*n4 + 120*d*n1*n3*n4 + 8*n1^2*n3*n4 - 384*n2*n3*n4 + 
      188*d*n2*n3*n4 - 24*n1*n2*n3*n4 - 32*n2^2*n3*n4 - 688*n3^2*n4 + 
      324*d*n3^2*n4 - 88*n1*n3^2*n4 - 128*n2*n3^2*n4 - 96*n3^3*n4 - 
      328*n3*n4^2 + 156*d*n3*n4^2 - 56*n1*n3*n4^2 - 64*n2*n3*n4^2 - 
      88*n3^2*n4^2 - 24*n3*n4^3 - 304*n3*n5 + 408*d*n3*n5 - 118*d^2*n3*n5 + 
      16*d*n1*n3*n5 + 24*n1^2*n3*n5 - 64*n2*n3*n5 + 52*d*n2*n3*n5 + 
      24*n1*n2*n3*n5 - 368*n3^2*n5 + 188*d*n3^2*n5 - 40*n1*n3^2*n5 - 
      64*n2*n3^2*n5 - 64*n3^3*n5 - 352*n3*n4*n5 + 180*d*n3*n4*n5 - 
      56*n1*n3*n4*n5 - 64*n2*n3*n4*n5 - 112*n3^2*n4*n5 - 48*n3*n4^2*n5 - 
      24*n3*n5^2 + 24*d*n3*n5^2 - 24*n3^2*n5^2 - 24*n3*n4*n5^2)*
     j[p4, n1, n2, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, -1, 0, 1])/
    (2*(-3 + d - n4 - n5)*(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 
      120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
      164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
      74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
      34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((-44*n3 + 48*d*n3 - 12*d^2*n3 + 24*n1*n3 - 8*d*n1*n3 - 
      8*n2*n3 + 6*d*n2*n3 + 4*n1*n2*n3 - 52*n3^2 + 22*d*n3^2 + 4*n1*n3^2 - 
      8*n2*n3^2 - 8*n3^3 - 56*n3*n4 + 26*d*n3*n4 + 4*n1*n3*n4 - 8*n2*n3*n4 - 
      20*n3^2*n4 - 12*n3*n4^2 - 12*n3*n5 + 8*d*n3*n5 + 8*n1*n3*n5 - 
      12*n3^2*n5 - 12*n3*n4*n5)*j[p4, n1, n2, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 
      1, 1, -1, 1, 0])/(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 
     34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 
     44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 
     280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 
     152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 
     16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 
     152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 
     24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 
     40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 
     24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 
     16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
     96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
     104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
     16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((44*n2 - 48*d*n2 + 12*d^2*n2 - 24*n1*n2 + 8*d*n1*n2 + 8*n2^2 - 6*d*n2^2 - 
      4*n1*n2^2 + 52*n2*n3 - 22*d*n2*n3 - 4*n1*n2*n3 + 8*n2^2*n3 + 
      8*n2*n3^2 + 56*n2*n4 - 26*d*n2*n4 - 4*n1*n2*n4 + 8*n2^2*n4 + 
      20*n2*n3*n4 + 12*n2*n4^2 + 12*n2*n5 - 8*d*n2*n5 - 8*n1*n2*n5 + 
      12*n2*n3*n5 + 12*n2*n4*n5)*j[p4, n1, 1 + n2, -1 + n3, n4, 1 + n5, 0, 0, 
      1, 0, 1, 1, -1, 1, 1])/(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 
     120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
     164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
     8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
     8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
     40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
     74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
     76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
     40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
     24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
     34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
     8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
     8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
     24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((12*n2 - 17*d*n2 + 5*d^2*n2 - 2*n1*n2 + 2*d*n1*n2 + 16*n2*n3 - 
      9*d*n2*n3 - 2*n1*n2*n3 + 4*n2*n3^2 + 16*n2*n4 - 9*d*n2*n4 - 
      2*n1*n2*n4 + 8*n2*n3*n4 + 4*n2*n4^2 + 4*n2*n5 - 4*d*n2*n5 + 
      4*n2*n3*n5 + 4*n2*n4*n5)*j[p4, n1, 1 + n2, -1 + n3, n4, 1 + n5, 1, 0, 
      0, 0, 1, 1, -1, 1, 1])/((-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 
      4*d*n1 - 4*n1^2 + 8*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 
      8*n2*n3 + 24*n4 - 12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 
      4*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((64*n2 - 74*d*n2 + 19*d^2*n2 - 20*n1*n2 + 4*d*n1*n2 - 4*n1^2*n2 + 
      16*n2^2 - 12*d*n2^2 - 8*n1*n2^2 + 72*n2*n3 - 30*d*n2*n3 + 4*n1*n2*n3 + 
      16*n2^2*n3 + 8*n2*n3^2 + 80*n2*n4 - 38*d*n2*n4 + 4*n1*n2*n4 + 
      16*n2^2*n4 + 24*n2*n3*n4 + 16*n2*n4^2 + 16*n2*n5 - 12*d*n2*n5 - 
      8*n1*n2*n5 + 16*n2*n3*n5 + 16*n2*n4*n5)*j[p4, n1, 1 + n2, -1 + n3, n4, 
      1 + n5, 1, 0, 1, 0, 0, 1, -1, 1, 1])/(2*(-3 + d - n4 - n5)*
     (20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 8*n2 - 6*d*n2 - 4*n1*n2 + 
      20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 12*d*n4 + 8*n1*n4 + 
      8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((-44*n2 + 48*d*n2 - 12*d^2*n2 + 24*n1*n2 - 8*d*n1*n2 - 8*n2^2 + 
      6*d*n2^2 + 4*n1*n2^2 - 52*n2*n3 + 22*d*n2*n3 + 4*n1*n2*n3 - 8*n2^2*n3 - 
      8*n2*n3^2 - 56*n2*n4 + 26*d*n2*n4 + 4*n1*n2*n4 - 8*n2^2*n4 - 
      20*n2*n3*n4 - 12*n2*n4^2 - 12*n2*n5 + 8*d*n2*n5 + 8*n1*n2*n5 - 
      12*n2*n3*n5 - 12*n2*n4*n5)*j[p4, n1, 1 + n2, n3, n4, n5, 1, 0, 0, 0, 1, 
      1, -1, 1, 1])/(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 
     34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 
     44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 
     280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 
     152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 
     16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 
     152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 
     24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 
     40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 
     24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 
     16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
     96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
     104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
     16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-44*n2 + 48*d*n2 - 12*d^2*n2 + 24*n1*n2 - 8*d*n1*n2 - 8*n2^2 + 
      6*d*n2^2 + 4*n1*n2^2 - 52*n2*n3 + 22*d*n2*n3 + 4*n1*n2*n3 - 8*n2^2*n3 - 
      8*n2*n3^2 - 56*n2*n4 + 26*d*n2*n4 + 4*n1*n2*n4 - 8*n2^2*n4 - 
      20*n2*n3*n4 - 12*n2*n4^2 - 12*n2*n5 + 8*d*n2*n5 + 8*n1*n2*n5 - 
      12*n2*n3*n5 - 12*n2*n4*n5)*j[p4, n1, 1 + n2, n3, n4, n5, 1, 0, 1, 0, 0, 
      1, -1, 1, 1])/(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 
     34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 
     44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 
     280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 
     152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 
     16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 
     152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 
     24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 
     40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 
     24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 
     16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
     96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
     104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
     16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-88*n2 + 96*d*n2 - 24*d^2*n2 + 48*n1*n2 - 16*d*n1*n2 - 16*n2^2 + 
      12*d*n2^2 + 8*n1*n2^2 - 104*n2*n3 + 44*d*n2*n3 + 8*n1*n2*n3 - 
      16*n2^2*n3 - 16*n2*n3^2 - 112*n2*n4 + 52*d*n2*n4 + 8*n1*n2*n4 - 
      16*n2^2*n4 - 40*n2*n3*n4 - 24*n2*n4^2 - 24*n2*n5 + 16*d*n2*n5 + 
      16*n1*n2*n5 - 24*n2*n3*n5 - 24*n2*n4*n5)*j[p4, n1, 1 + n2, n3, n4, n5, 
      1, 0, 1, 0, 1, 1, -1, 0, 1])/(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 
     120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
     164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
     8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
     8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
     40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
     74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
     76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
     40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
     24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
     34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
     8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
     8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
     24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((88*n2 - 96*d*n2 + 24*d^2*n2 - 48*n1*n2 + 16*d*n1*n2 + 16*n2^2 - 
      12*d*n2^2 - 8*n1*n2^2 + 104*n2*n3 - 44*d*n2*n3 - 8*n1*n2*n3 + 
      16*n2^2*n3 + 16*n2*n3^2 + 112*n2*n4 - 52*d*n2*n4 - 8*n1*n2*n4 + 
      16*n2^2*n4 + 40*n2*n3*n4 + 24*n2*n4^2 + 24*n2*n5 - 16*d*n2*n5 - 
      16*n1*n2*n5 + 24*n2*n3*n5 + 24*n2*n4*n5)*j[p4, n1, 1 + n2, n3, n4, n5, 
      1, 0, 1, 0, 1, 1, -1, 1, 1])/(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 
     120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
     164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
     8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
     8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
     40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
     74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
     76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
     40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
     24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
     34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
     8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
     8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
     24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-44*n2 + 48*d*n2 - 12*d^2*n2 + 24*n1*n2 - 8*d*n1*n2 - 8*n2^2 + 
      6*d*n2^2 + 4*n1*n2^2 - 52*n2*n3 + 22*d*n2*n3 + 4*n1*n2*n3 - 8*n2^2*n3 - 
      8*n2*n3^2 - 56*n2*n4 + 26*d*n2*n4 + 4*n1*n2*n4 - 8*n2^2*n4 - 
      20*n2*n3*n4 - 12*n2*n4^2 - 12*n2*n5 + 8*d*n2*n5 + 8*n1*n2*n5 - 
      12*n2*n3*n5 - 12*n2*n4*n5)*j[p4, n1, 1 + n2, n3, n4, 1 + n5, 0, -1, 1, 
      0, 1, 1, -1, 1, 1])/(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 
     120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
     164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
     8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
     8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
     40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
     74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
     76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
     40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
     24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
     34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
     8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
     8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
     24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((44*n2 - 48*d*n2 + 12*d^2*n2 - 24*n1*n2 + 8*d*n1*n2 + 8*n2^2 - 6*d*n2^2 - 
      4*n1*n2^2 + 52*n2*n3 - 22*d*n2*n3 - 4*n1*n2*n3 + 8*n2^2*n3 + 
      8*n2*n3^2 + 56*n2*n4 - 26*d*n2*n4 - 4*n1*n2*n4 + 8*n2^2*n4 + 
      20*n2*n3*n4 + 12*n2*n4^2 + 12*n2*n5 - 8*d*n2*n5 - 8*n1*n2*n5 + 
      12*n2*n3*n5 + 12*n2*n4*n5)*j[p4, n1, 1 + n2, n3, n4, 1 + n5, 0, 0, 1, 
      0, 1, 1, -2, 1, 1])/(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 
     120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
     164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
     8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
     8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
     40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
     74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
     76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
     40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
     24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
     34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
     8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
     8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
     24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-88*n2 + 96*d*n2 - 24*d^2*n2 + 48*n1*n2 - 16*d*n1*n2 - 16*n2^2 + 
      12*d*n2^2 + 8*n1*n2^2 - 104*n2*n3 + 44*d*n2*n3 + 8*n1*n2*n3 - 
      16*n2^2*n3 - 16*n2*n3^2 - 112*n2*n4 + 52*d*n2*n4 + 8*n1*n2*n4 - 
      16*n2^2*n4 - 40*n2*n3*n4 - 24*n2*n4^2 - 24*n2*n5 + 16*d*n2*n5 + 
      16*n1*n2*n5 - 24*n2*n3*n5 - 24*n2*n4*n5)*j[p4, n1, 1 + n2, n3, n4, 
      1 + n5, 0, 0, 1, 0, 1, 1, -1, 1, 1])/(-240 + 412*d - 214*d^2 + 35*d^3 - 
     88*n1 + 120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
     164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
     8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
     8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
     40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
     74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
     76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
     40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
     24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
     34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
     8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
     8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
     24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-24*n2 + 34*d*n2 - 10*d^2*n2 + 4*n1*n2 - 4*d*n1*n2 - 32*n2*n3 + 
      18*d*n2*n3 + 4*n1*n2*n3 - 8*n2*n3^2 - 32*n2*n4 + 18*d*n2*n4 + 
      4*n1*n2*n4 - 16*n2*n3*n4 - 8*n2*n4^2 - 8*n2*n5 + 8*d*n2*n5 - 
      8*n2*n3*n5 - 8*n2*n4*n5)*j[p4, n1, 1 + n2, n3, n4, 1 + n5, 1, -1, 0, 0, 
      1, 1, -1, 1, 1])/((-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 
      4*d*n1 - 4*n1^2 + 8*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 
      8*n2*n3 + 24*n4 - 12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 
      4*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((-40*n2 + 40*d*n2 - 9*d^2*n2 + 16*n1*n2 + 4*n1^2*n2 - 16*n2^2 + 
      12*d*n2^2 + 8*n1*n2^2 - 40*n2*n3 + 12*d*n2*n3 - 8*n1*n2*n3 - 
      16*n2^2*n3 - 48*n2*n4 + 20*d*n2*n4 - 8*n1*n2*n4 - 16*n2^2*n4 - 
      8*n2*n3*n4 - 8*n2*n4^2 - 8*n2*n5 + 4*d*n2*n5 + 8*n1*n2*n5 - 
      8*n2*n3*n5 - 8*n2*n4*n5)*j[p4, n1, 1 + n2, n3, n4, 1 + n5, 1, -1, 1, 0, 
      0, 1, -1, 1, 1])/(2*(-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 
      4*d*n1 - 4*n1^2 + 8*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 
      8*n2*n3 + 24*n4 - 12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 
      4*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((-24*n2 + 34*d*n2 - 10*d^2*n2 + 4*n1*n2 - 4*d*n1*n2 - 32*n2*n3 + 
      18*d*n2*n3 + 4*n1*n2*n3 - 8*n2*n3^2 - 32*n2*n4 + 18*d*n2*n4 + 
      4*n1*n2*n4 - 16*n2*n3*n4 - 8*n2*n4^2 - 8*n2*n5 + 8*d*n2*n5 - 
      8*n2*n3*n5 - 8*n2*n4*n5)*j[p4, n1, 1 + n2, n3, n4, 1 + n5, 1, -1, 1, 0, 
      1, 1, -1, 0, 1])/((-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 
      4*d*n1 - 4*n1^2 + 8*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 
      8*n2*n3 + 24*n4 - 12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 
      4*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((12*n2 - 17*d*n2 + 5*d^2*n2 - 2*n1*n2 + 2*d*n1*n2 + 16*n2*n3 - 
      9*d*n2*n3 - 2*n1*n2*n3 + 4*n2*n3^2 + 16*n2*n4 - 9*d*n2*n4 - 
      2*n1*n2*n4 + 8*n2*n3*n4 + 4*n2*n4^2 + 4*n2*n5 - 4*d*n2*n5 + 
      4*n2*n3*n5 + 4*n2*n4*n5)*j[p4, n1, 1 + n2, n3, n4, 1 + n5, 1, 0, 0, 0, 
      1, 1, -2, 1, 1])/((-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 
      4*d*n1 - 4*n1^2 + 8*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 
      8*n2*n3 + 24*n4 - 12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 
      4*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((64*n2 - 74*d*n2 + 19*d^2*n2 - 20*n1*n2 + 4*d*n1*n2 - 4*n1^2*n2 + 
      16*n2^2 - 12*d*n2^2 - 8*n1*n2^2 + 72*n2*n3 - 30*d*n2*n3 + 4*n1*n2*n3 + 
      16*n2^2*n3 + 8*n2*n3^2 + 80*n2*n4 - 38*d*n2*n4 + 4*n1*n2*n4 + 
      16*n2^2*n4 + 24*n2*n3*n4 + 16*n2*n4^2 + 16*n2*n5 - 12*d*n2*n5 - 
      8*n1*n2*n5 + 16*n2*n3*n5 + 16*n2*n4*n5)*j[p4, n1, 1 + n2, n3, n4, 
      1 + n5, 1, 0, 1, 0, 0, 1, -2, 1, 1])/(2*(-3 + d - n4 - n5)*
     (20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 8*n2 - 6*d*n2 - 4*n1*n2 + 
      20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 12*d*n4 + 8*n1*n4 + 
      8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((-396*n1 + 586*d*n1 - 276*d^2*n1 + 42*d^3*n1 + 172*n1^2 - 108*d*n1^2 + 
      16*d^2*n1^2 + 24*n1^3 - 8*d*n1^3 - 116*n1*n2 + 130*d*n1*n2 - 
      33*d^2*n1*n2 + 52*n1^2*n2 - 16*d*n1^2*n2 + 4*n1^3*n2 - 8*n1*n2^2 + 
      6*d*n1*n2^2 + 4*n1^2*n2^2 - 512*n1*n3 + 428*d*n1*n3 - 89*d^2*n1*n3 + 
      8*n1^2*n3 + 4*n1^3*n3 - 132*n1*n2*n3 + 56*d*n1*n2*n3 - 8*n1*n2^2*n3 - 
      124*n1*n3^2 + 50*d*n1*n3^2 - 4*n1^2*n3^2 - 16*n1*n2*n3^2 - 8*n1*n3^3 - 
      592*n1*n4 + 526*d*n1*n4 - 115*d^2*n1*n4 + 28*n1^2*n4 - 4*d*n1^2*n4 + 
      4*n1^3*n4 - 144*n1*n2*n4 + 66*d*n1*n2*n4 + 4*n1^2*n2*n4 - 
      8*n1*n2^2*n4 - 340*n1*n3*n4 + 140*d*n1*n3*n4 - 8*n1^2*n3*n4 - 
      44*n1*n2*n3*n4 - 36*n1*n3^2*n4 - 220*n1*n4^2 + 94*d*n1*n4^2 - 
      4*n1^2*n4^2 - 28*n1*n2*n4^2 - 52*n1*n3*n4^2 - 24*n1*n4^3 - 196*n1*n5 + 
      210*d*n1*n5 - 52*d^2*n1*n5 + 108*n1^2*n5 - 36*d*n1^2*n5 + 8*n1^3*n5 - 
      28*n1*n2*n5 + 20*d*n1*n2*n5 + 16*n1^2*n2*n5 - 224*n1*n3*n5 + 
      94*d*n1*n3*n5 + 4*n1^2*n3*n5 - 28*n1*n2*n3*n5 - 28*n1*n3^2*n5 - 
      244*n1*n4*n5 + 110*d*n1*n4*n5 + 12*n1^2*n4*n5 - 28*n1*n2*n4*n5 - 
      76*n1*n3*n4*n5 - 48*n1*n4^2*n5 - 24*n1*n5^2 + 16*d*n1*n5^2 + 
      16*n1^2*n5^2 - 24*n1*n3*n5^2 - 24*n1*n4*n5^2)*
     j[p4, 1 + n1, -1 + n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, -1, 0, 1])/
    ((-3 + d - n4 - n5)*(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 
      34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 
      44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 
      280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 
      152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 
      16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 
      152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 
      24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 
      40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 
      24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 
      16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((-88 + 96*d - 24*d^2 - 40*n1 + 80*d*n1 - 24*d^2*n1 + 
      48*n1^2 - 16*d*n1^2 - 16*n2 + 12*d*n2 - 8*n1*n2 + 12*d*n1*n2 + 
      8*n1^2*n2 - 104*n3 + 44*d*n3 - 96*n1*n3 + 44*d*n1*n3 + 8*n1^2*n3 - 
      16*n2*n3 - 16*n1*n2*n3 - 16*n3^2 - 16*n1*n3^2 - 24*n4 - 44*d*n4 + 
      24*d^2*n4 - 152*n1*n4 + 68*d*n1*n4 + 8*n1^2*n4 - 12*d*n2*n4 - 
      24*n1*n2*n4 + 64*n3*n4 - 44*d*n3*n4 - 48*n1*n3*n4 + 16*n2*n3*n4 + 
      16*n3^2*n4 + 88*n4^2 - 52*d*n4^2 - 32*n1*n4^2 + 16*n2*n4^2 + 
      40*n3*n4^2 + 24*n4^3 - 24*n5 + 16*d*n5 - 8*n1*n5 + 16*d*n1*n5 + 
      16*n1^2*n5 - 24*n3*n5 - 24*n1*n3*n5 - 16*d*n4*n5 - 40*n1*n4*n5 + 
      24*n3*n4*n5 + 24*n4^2*n5)*j[p4, 1 + n1, -1 + n2, n3, n4, 1 + n5, 1, 0, 
      1, 0, 1, 1, -1, 1, 1])/(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 
     120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
     164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
     8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
     8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
     40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
     74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
     76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
     40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
     24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
     34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
     8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
     8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
     24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-88 + 96*d - 24*d^2 + 48*n1 - 16*d*n1 - 16*n2 + 12*d*n2 + 8*n1*n2 - 
      104*n3 + 44*d*n3 + 8*n1*n3 - 16*n2*n3 - 16*n3^2 - 112*n4 + 52*d*n4 + 
      8*n1*n4 - 16*n2*n4 - 40*n3*n4 - 24*n4^2 - 24*n5 + 16*d*n5 + 16*n1*n5 - 
      24*n3*n5 - 24*n4*n5)*j[p4, 1 + n1, n2, n3, -1 + n4, 1 + n5, 1, 0, 1, 0, 
      1, 0, 0, 1, 1])/(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 
     34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 
     44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 
     280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 
     152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 
     16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 
     152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 
     24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 
     40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 
     24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 
     16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
     96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
     104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
     16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((88 - 184*d + 120*d^2 - 24*d^3 - 48*n1 + 64*d*n1 - 16*d^2*n1 + 16*n2 - 
      28*d*n2 + 12*d^2*n2 - 8*n1*n2 + 8*d*n1*n2 + 104*n3 - 148*d*n3 + 
      44*d^2*n3 - 8*n1*n3 + 8*d*n1*n3 + 16*n2*n3 - 16*d*n2*n3 + 16*n3^2 - 
      16*d*n3^2 + 200*n4 - 260*d*n4 + 76*d^2*n4 - 56*n1*n4 + 24*d*n1*n4 + 
      32*n2*n4 - 28*d*n2*n4 - 8*n1*n2*n4 + 144*n3*n4 - 84*d*n3*n4 - 
      8*n1*n3*n4 + 16*n2*n3*n4 + 16*n3^2*n4 + 136*n4^2 - 76*d*n4^2 - 
      8*n1*n4^2 + 16*n2*n4^2 + 40*n3*n4^2 + 24*n4^3 + 24*n5 - 40*d*n5 + 
      16*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 24*n3*n5 - 24*d*n3*n5 + 48*n4*n5 - 
      40*d*n4*n5 - 16*n1*n4*n5 + 24*n3*n4*n5 + 24*n4^2*n5)*
     j[p4, 1 + n1, n2, n3, -1 + n4, 1 + n5, 1, 0, 1, 0, 1, 1, -1, 1, 1])/
    (-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 34*d^2*n1 + 
     40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 44*d^2*n2 + 
     24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 280*n3 + 
     248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 152*n2*n3 + 
     68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
     16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 152*n1*n4 + 
     72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
     16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
     8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 
     8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 
     8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 
     24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 
     24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 
     8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((88 - 96*d + 24*d^2 - 48*n1 + 16*d*n1 + 16*n2 - 12*d*n2 - 8*n1*n2 + 
      104*n3 - 44*d*n3 - 8*n1*n3 + 16*n2*n3 + 16*n3^2 + 112*n4 - 52*d*n4 - 
      8*n1*n4 + 16*n2*n4 + 40*n3*n4 + 24*n4^2 + 24*n5 - 16*d*n5 - 16*n1*n5 + 
      24*n3*n5 + 24*n4*n5)*j[p4, 1 + n1, n2, n3, -1 + n4, 1 + n5, 1, 0, 1, 0, 
      1, 1, 0, 1, 1])/(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 
     34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 
     44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 
     280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 
     152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 
     16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 
     152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 
     24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 
     40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 
     24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 
     16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
     96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
     104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
     16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((88 - 96*d + 24*d^2 - 48*n1 + 16*d*n1 + 16*n2 - 12*d*n2 - 8*n1*n2 + 
      104*n3 - 44*d*n3 - 8*n1*n3 + 16*n2*n3 + 16*n3^2 + 112*n4 - 52*d*n4 - 
      8*n1*n4 + 16*n2*n4 + 40*n3*n4 + 24*n4^2 + 24*n5 - 16*d*n5 - 16*n1*n5 + 
      24*n3*n5 + 24*n4*n5)*j[p4, 1 + n1, n2, n3, -1 + n4, 1 + n5, 1, 0, 2, 0, 
      1, 0, -1, 1, 1])/(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 
     34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 
     44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 
     280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 
     152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 
     16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 
     152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 
     24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 
     40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 
     24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 
     16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
     96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
     104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
     16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-44*n1 + 48*d*n1 - 12*d^2*n1 + 24*n1^2 - 8*d*n1^2 - 8*n1*n2 + 
      6*d*n1*n2 + 4*n1^2*n2 - 52*n1*n3 + 22*d*n1*n3 + 4*n1^2*n3 - 
      8*n1*n2*n3 - 8*n1*n3^2 - 56*n1*n4 + 26*d*n1*n4 + 4*n1^2*n4 - 
      8*n1*n2*n4 - 20*n1*n3*n4 - 12*n1*n4^2 - 12*n1*n5 + 8*d*n1*n5 + 
      8*n1^2*n5 - 12*n1*n3*n5 - 12*n1*n4*n5)*j[p4, 1 + n1, n2, n3, n4, n5, 1, 
      0, 1, 0, 1, 1, -1, 0, 1])/(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 
     120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
     164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
     8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
     8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
     40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
     74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
     76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
     40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
     24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
     34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
     8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
     8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
     24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((88 - 96*d + 24*d^2 + 40*n1 - 80*d*n1 + 24*d^2*n1 - 48*n1^2 + 16*d*n1^2 + 
      16*n2 - 12*d*n2 + 8*n1*n2 - 12*d*n1*n2 - 8*n1^2*n2 + 104*n3 - 44*d*n3 + 
      96*n1*n3 - 44*d*n1*n3 - 8*n1^2*n3 + 16*n2*n3 + 16*n1*n2*n3 + 16*n3^2 + 
      16*n1*n3^2 + 24*n4 + 44*d*n4 - 24*d^2*n4 + 152*n1*n4 - 68*d*n1*n4 - 
      8*n1^2*n4 + 12*d*n2*n4 + 24*n1*n2*n4 - 64*n3*n4 + 44*d*n3*n4 + 
      48*n1*n3*n4 - 16*n2*n3*n4 - 16*n3^2*n4 - 88*n4^2 + 52*d*n4^2 + 
      32*n1*n4^2 - 16*n2*n4^2 - 40*n3*n4^2 - 24*n4^3 + 24*n5 - 16*d*n5 + 
      8*n1*n5 - 16*d*n1*n5 - 16*n1^2*n5 + 24*n3*n5 + 24*n1*n3*n5 + 
      16*d*n4*n5 + 40*n1*n4*n5 - 24*n3*n4*n5 - 24*n4^2*n5)*
     j[p4, 1 + n1, n2, n3, n4, n5, 1, 0, 1, 0, 1, 1, -1, 1, 1])/
    (-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 34*d^2*n1 + 
     40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 44*d^2*n2 + 
     24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 280*n3 + 
     248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 152*n2*n3 + 
     68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
     16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 152*n1*n4 + 
     72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
     16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
     8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 
     8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 
     8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 
     24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 
     24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 
     8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-88 + 96*d - 24*d^2 + 48*n1 - 16*d*n1 - 16*n2 + 12*d*n2 + 8*n1*n2 - 
      104*n3 + 44*d*n3 + 8*n1*n3 - 16*n2*n3 - 16*n3^2 - 24*n4 - 44*d*n4 + 
      24*d^2*n4 - 40*n1*n4 + 16*d*n1*n4 - 12*d*n2*n4 - 8*n1*n2*n4 + 
      64*n3*n4 - 44*d*n3*n4 - 8*n1*n3*n4 + 16*n2*n3*n4 + 16*n3^2*n4 + 
      88*n4^2 - 52*d*n4^2 - 8*n1*n4^2 + 16*n2*n4^2 + 40*n3*n4^2 + 24*n4^3 - 
      24*n5 + 16*d*n5 + 16*n1*n5 - 24*n3*n5 - 16*d*n4*n5 - 16*n1*n4*n5 + 
      24*n3*n4*n5 + 24*n4^2*n5)*j[p4, 1 + n1, n2, n3, n4, 1 + n5, 0, 0, 1, 0, 
      1, 1, -1, 1, 1])/(240 - 412*d + 214*d^2 - 35*d^3 + 88*n1 - 120*d*n1 + 
     34*d^2*n1 - 40*n1^2 + 12*d*n1^2 - 8*n1^3 + 136*n2 - 164*d*n2 + 
     44*d^2*n2 - 24*n1*n2 - 16*n1^2*n2 + 16*n2^2 - 12*d*n2^2 - 8*n1*n2^2 + 
     280*n3 - 248*d*n3 + 54*d^2*n3 + 144*n1*n3 - 64*d*n1*n3 + 8*n1^2*n3 + 
     152*n2*n3 - 68*d*n2*n3 + 24*n1*n2*n3 + 16*n2^2*n3 + 40*n3^2 - 
     16*d*n3^2 + 16*n1*n3^2 + 16*n2*n3^2 + 328*n4 - 316*d*n4 + 74*d^2*n4 + 
     152*n1*n4 - 72*d*n1*n4 + 8*n1^2*n4 + 160*n2*n4 - 76*d*n2*n4 + 
     24*n1*n2*n4 + 16*n2^2*n4 + 136*n3*n4 - 60*d*n3*n4 + 40*n1*n3*n4 + 
     40*n2*n3*n4 + 8*n3^2*n4 + 96*n4^2 - 44*d*n4^2 + 24*n1*n4^2 + 
     24*n2*n4^2 + 16*n3*n4^2 + 8*n4^3 + 88*n5 - 120*d*n5 + 34*d^2*n5 + 
     16*n1*n5 - 16*d*n1*n5 - 8*n1^2*n5 + 24*n2*n5 - 20*d*n2*n5 - 8*n1*n2*n5 + 
     96*n3*n5 - 44*d*n3*n5 + 24*n1*n3*n5 + 24*n2*n3*n5 + 8*n3^2*n5 + 
     104*n4*n5 - 52*d*n4*n5 + 24*n1*n4*n5 + 24*n2*n4*n5 + 24*n3*n4*n5 + 
     16*n4^2*n5 + 8*n5^2 - 8*d*n5^2 + 8*n3*n5^2 + 8*n4*n5^2) + 
   ((12*n1 - 17*d*n1 + 5*d^2*n1 - 2*n1^2 + 2*d*n1^2 + 16*n1*n3 - 9*d*n1*n3 - 
      2*n1^2*n3 + 4*n1*n3^2 + 16*n1*n4 - 9*d*n1*n4 - 2*n1^2*n4 + 8*n1*n3*n4 + 
      4*n1*n4^2 + 4*n1*n5 - 4*d*n1*n5 + 4*n1*n3*n5 + 4*n1*n4*n5)*
     j[p4, 1 + n1, n2, n3, n4, 1 + n5, 1, 0, 0, 0, 1, 1, -1, 1, 1])/
    ((-3 + d - n4 - n5)*(20 - 26*d + 7*d^2 + 4*n1 - 4*d*n1 - 4*n1^2 + 8*n2 - 
      6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 24*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 4*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((44*n1 - 48*d*n1 + 12*d^2*n1 - 24*n1^2 + 
      8*d*n1^2 + 8*n1*n2 - 6*d*n1*n2 - 4*n1^2*n2 + 52*n1*n3 - 22*d*n1*n3 - 
      4*n1^2*n3 + 8*n1*n2*n3 + 8*n1*n3^2 + 56*n1*n4 - 26*d*n1*n4 - 
      4*n1^2*n4 + 8*n1*n2*n4 + 20*n1*n3*n4 + 12*n1*n4^2 + 12*n1*n5 - 
      8*d*n1*n5 - 8*n1^2*n5 + 12*n1*n3*n5 + 12*n1*n4*n5)*
     j[p4, 1 + n1, n2, n3, n4, 1 + n5, 1, 0, 1, -1, 1, 1, -1, 0, 1])/
    (-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 34*d^2*n1 + 
     40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 44*d^2*n2 + 
     24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 280*n3 + 
     248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 152*n2*n3 + 
     68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
     16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 152*n1*n4 + 
     72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
     16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
     8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 
     8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 
     8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 
     24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 
     24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 
     8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-88 + 96*d - 24*d^2 - 40*n1 + 80*d*n1 - 24*d^2*n1 + 48*n1^2 - 
      16*d*n1^2 - 16*n2 + 12*d*n2 - 8*n1*n2 + 12*d*n1*n2 + 8*n1^2*n2 - 
      104*n3 + 44*d*n3 - 96*n1*n3 + 44*d*n1*n3 + 8*n1^2*n3 - 16*n2*n3 - 
      16*n1*n2*n3 - 16*n3^2 - 16*n1*n3^2 - 24*n4 - 44*d*n4 + 24*d^2*n4 - 
      152*n1*n4 + 68*d*n1*n4 + 8*n1^2*n4 - 12*d*n2*n4 - 24*n1*n2*n4 + 
      64*n3*n4 - 44*d*n3*n4 - 48*n1*n3*n4 + 16*n2*n3*n4 + 16*n3^2*n4 + 
      88*n4^2 - 52*d*n4^2 - 32*n1*n4^2 + 16*n2*n4^2 + 40*n3*n4^2 + 24*n4^3 - 
      24*n5 + 16*d*n5 - 8*n1*n5 + 16*d*n1*n5 + 16*n1^2*n5 - 24*n3*n5 - 
      24*n1*n3*n5 - 16*d*n4*n5 - 40*n1*n4*n5 + 24*n3*n4*n5 + 24*n4^2*n5)*
     j[p4, 1 + n1, n2, n3, n4, 1 + n5, 1, 0, 1, -1, 1, 1, -1, 1, 1])/
    (-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 34*d^2*n1 + 
     40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 44*d^2*n2 + 
     24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 280*n3 + 
     248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 152*n2*n3 + 
     68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
     16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 152*n1*n4 + 
     72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
     16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
     8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 
     8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 
     8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 
     24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 
     24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 
     8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-264 + 376*d - 168*d^2 + 24*d^3 + 276*n1 - 306*d*n1 + 124*d^2*n1 - 
      18*d^3*n1 - 28*n1^2 + 12*d*n1^2 - 24*n1^3 + 8*d*n1^3 - 48*n2 + 
      52*d*n2 - 12*d^2*n2 + 92*n1*n2 - 86*d*n1*n2 + 21*d^2*n1*n2 - 
      28*n1^2*n2 + 8*d*n1^2*n2 - 4*n1^3*n2 + 8*n1*n2^2 - 6*d*n1*n2^2 - 
      4*n1^2*n2^2 - 312*n3 + 236*d*n3 - 44*d^2*n3 + 224*n1*n3 - 200*d*n1*n3 + 
      45*d^2*n1*n3 + 16*n1^2*n3 - 8*d*n1^2*n3 - 4*n1^3*n3 - 48*n2*n3 + 
      16*d*n2*n3 + 84*n1*n2*n3 - 40*d*n1*n2*n3 + 8*n1*n2^2*n3 - 48*n3^2 + 
      16*d*n3^2 + 76*n1*n3^2 - 34*d*n1*n3^2 + 4*n1^2*n3^2 + 16*n1*n2*n3^2 + 
      8*n1*n3^3 - 160*n4 - 12*d*n4 + 92*d^2*n4 - 24*d^3*n4 + 96*n1*n4 - 
      90*d*n1*n4 + 23*d^2*n1*n4 + 44*n1^2*n4 - 20*d*n1^2*n4 - 4*n1^3*n4 - 
      16*n2*n4 - 24*d*n2*n4 + 12*d^2*n2*n4 + 64*n1*n2*n4 - 30*d*n1*n2*n4 + 
      4*n1^2*n2*n4 + 8*n1*n2^2*n4 + 88*n3*n4 - 152*d*n3*n4 + 44*d^2*n3*n4 + 
      100*n1*n3*n4 - 48*d*n1*n3*n4 + 16*n1^2*n3*n4 + 32*n2*n3*n4 - 
      16*d*n2*n3*n4 + 28*n1*n2*n3*n4 + 32*n3^2*n4 - 16*d*n3^2*n4 + 
      20*n1*n3^2*n4 + 240*n4^2 - 288*d*n4^2 + 76*d^2*n4^2 - 28*n1*n4^2 + 
      6*d*n1*n4^2 + 12*n1^2*n4^2 + 48*n2*n4^2 - 28*d*n2*n4^2 + 4*n1*n2*n4^2 + 
      184*n3*n4^2 - 84*d*n3*n4^2 + 4*n1*n3*n4^2 + 16*n2*n3*n4^2 + 
      16*n3^2*n4^2 + 160*n4^3 - 76*d*n4^3 - 8*n1*n4^3 + 16*n2*n4^3 + 
      40*n3*n4^3 + 24*n4^4 - 160*n5 + 168*d*n5 - 40*d^2*n5 + 132*n1*n5 - 
      74*d*n1*n5 + 12*d^2*n1*n5 - 12*n1^2*n5 + 4*d*n1^2*n5 - 8*n1^3*n5 - 
      16*n2*n5 + 12*d*n2*n5 + 20*n1*n2*n5 - 8*d*n1*n2*n5 - 8*n1^2*n2*n5 - 
      176*n3*n5 + 68*d*n3*n5 + 56*n1*n3*n5 - 26*d*n1*n3*n5 + 4*n1^2*n3*n5 - 
      16*n2*n3*n5 + 12*n1*n2*n3*n5 - 16*n3^2*n5 + 12*n1*n3^2*n5 - 48*n4*n5 - 
      76*d*n4*n5 + 40*d^2*n4*n5 - 36*n1*n4*n5 + 14*d*n1*n4*n5 + 
      12*n1^2*n4*n5 - 12*d*n2*n4*n5 + 4*n1*n2*n4*n5 + 112*n3*n4*n5 - 
      68*d*n3*n4*n5 + 4*n1*n3*n4*n5 + 16*n2*n3*n4*n5 + 16*n3^2*n4*n5 + 
      160*n4^2*n5 - 92*d*n4^2*n5 - 24*n1*n4^2*n5 + 16*n2*n4^2*n5 + 
      64*n3*n4^2*n5 + 48*n4^3*n5 - 24*n5^2 + 16*d*n5^2 + 16*n1*n5^2 - 
      24*n3*n5^2 - 16*d*n4*n5^2 - 16*n1*n4*n5^2 + 24*n3*n4*n5^2 + 
      24*n4^2*n5^2)*j[p4, 1 + n1, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 0, 1, -1, 
      1, 1])/((-3 + d - n4 - n5)*(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 
      120*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 
      164*d*n2 - 44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 
      74*d^2*n4 - 152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 
      34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((264 - 376*d + 168*d^2 - 24*d^3 - 168*d*n1 + 
      129*d^2*n1 - 25*d^3*n1 - 4*n1^3 + 4*d*n1^3 + 48*n2 - 52*d*n2 + 
      12*d^2*n2 - 26*d*n1*n2 + 10*d^2*n1*n2 - 4*n1^2*n2 + 4*d*n1^2*n2 + 
      312*n3 - 236*d*n3 + 44*d^2*n3 + 192*n1*n3 - 214*d*n1*n3 + 
      55*d^2*n1*n3 + 4*n1^2*n3 - 4*d*n1^2*n3 - 4*n1^3*n3 + 48*n2*n3 - 
      16*d*n2*n3 + 32*n1*n2*n3 - 18*d*n1*n2*n3 - 4*n1^2*n2*n3 + 48*n3^2 - 
      16*d*n3^2 + 80*n1*n3^2 - 38*d*n1*n3^2 + 4*n1^2*n3^2 + 8*n1*n2*n3^2 + 
      8*n1*n3^3 + 160*n4 + 12*d*n4 - 92*d^2*n4 + 24*d^3*n4 + 288*n1*n4 - 
      294*d*n1*n4 + 71*d^2*n1*n4 + 4*n1^2*n4 - 4*d*n1^2*n4 - 4*n1^3*n4 + 
      16*n2*n4 + 24*d*n2*n4 - 12*d^2*n2*n4 + 48*n1*n2*n4 - 26*d*n1*n2*n4 - 
      4*n1^2*n2*n4 - 88*n3*n4 + 152*d*n3*n4 - 44*d^2*n3*n4 + 176*n1*n3*n4 - 
      84*d*n1*n3*n4 + 8*n1^2*n3*n4 - 32*n2*n3*n4 + 16*d*n2*n3*n4 + 
      16*n1*n2*n3*n4 - 32*n3^2*n4 + 16*d*n3^2*n4 + 24*n1*n3^2*n4 - 240*n4^2 + 
      288*d*n4^2 - 76*d^2*n4^2 + 144*n1*n4^2 - 62*d*n1*n4^2 + 4*n1^2*n4^2 - 
      48*n2*n4^2 + 28*d*n2*n4^2 + 16*n1*n2*n4^2 - 184*n3*n4^2 + 
      84*d*n3*n4^2 + 32*n1*n3*n4^2 - 16*n2*n3*n4^2 - 16*n3^2*n4^2 - 
      160*n4^3 + 76*d*n4^3 + 16*n1*n4^3 - 16*n2*n4^3 - 40*n3*n4^3 - 24*n4^4 + 
      160*n5 - 168*d*n5 + 40*d^2*n5 - 24*n1*n5 - 70*d*n1*n5 + 30*d^2*n1*n5 + 
      4*n1^2*n5 - 4*d*n1^2*n5 + 16*n2*n5 - 12*d*n2*n5 - 8*d*n1*n2*n5 + 
      176*n3*n5 - 68*d*n3*n5 + 80*n1*n3*n5 - 46*d*n1*n3*n5 + 4*n1^2*n3*n5 + 
      16*n2*n3*n5 + 8*n1*n2*n3*n5 + 16*n3^2*n5 + 16*n1*n3^2*n5 + 48*n4*n5 + 
      76*d*n4*n5 - 40*d^2*n4*n5 + 160*n1*n4*n5 - 78*d*n1*n4*n5 + 
      4*n1^2*n4*n5 + 12*d*n2*n4*n5 + 16*n1*n2*n4*n5 - 112*n3*n4*n5 + 
      68*d*n3*n4*n5 + 40*n1*n3*n4*n5 - 16*n2*n3*n4*n5 - 16*n3^2*n4*n5 - 
      160*n4^2*n5 + 92*d*n4^2*n5 + 40*n1*n4^2*n5 - 16*n2*n4^2*n5 - 
      64*n3*n4^2*n5 - 48*n4^3*n5 + 24*n5^2 - 16*d*n5^2 - 8*n1*n5^2 - 
      8*d*n1*n5^2 + 24*n3*n5^2 + 8*n1*n3*n5^2 + 16*d*n4*n5^2 + 
      24*n1*n4*n5^2 - 24*n3*n4*n5^2 - 24*n4^2*n5^2)*
     j[p4, 1 + n1, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 0, -1, 1, 1])/
    ((-3 + d - n4 - n5)*(-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 
      34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 
      44*d^2*n2 + 24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 
      280*n3 + 248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 
      152*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 
      16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 
      152*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 
      24*n1*n2*n4 - 16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 
      40*n2*n3*n4 - 8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 
      24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 
      16*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((88*n3 - 96*d*n3 + 24*d^2*n3 - 48*n1*n3 + 16*d*n1*n3 + 
      16*n2*n3 - 12*d*n2*n3 - 8*n1*n2*n3 + 104*n3^2 - 44*d*n3^2 - 8*n1*n3^2 + 
      16*n2*n3^2 + 16*n3^3 + 112*n3*n4 - 52*d*n3*n4 - 8*n1*n3*n4 + 
      16*n2*n3*n4 + 40*n3^2*n4 + 24*n3*n4^2 + 24*n3*n5 - 16*d*n3*n5 - 
      16*n1*n3*n5 + 24*n3^2*n5 + 24*n3*n4*n5)*j[p4, 1 + n1, n2, 1 + n3, 
      -1 + n4, 1 + n5, 1, -1, 1, 0, 1, 1, -1, 1, 1])/
    (-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 34*d^2*n1 + 
     40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 44*d^2*n2 + 
     24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 280*n3 + 
     248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 152*n2*n3 + 
     68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
     16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 152*n1*n4 + 
     72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
     16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
     8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 
     8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 
     8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 
     24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 
     24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 
     8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((88*n3 - 96*d*n3 + 24*d^2*n3 - 48*n1*n3 + 16*d*n1*n3 + 16*n2*n3 - 
      12*d*n2*n3 - 8*n1*n2*n3 + 104*n3^2 - 44*d*n3^2 - 8*n1*n3^2 + 
      16*n2*n3^2 + 16*n3^3 + 112*n3*n4 - 52*d*n3*n4 - 8*n1*n3*n4 + 
      16*n2*n3*n4 + 40*n3^2*n4 + 24*n3*n4^2 + 24*n3*n5 - 16*d*n3*n5 - 
      16*n1*n3*n5 + 24*n3^2*n5 + 24*n3*n4*n5)*j[p4, 1 + n1, n2, 1 + n3, 
      -1 + n4, 1 + n5, 1, 0, 0, 0, 1, 1, -1, 1, 1])/
    (-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 34*d^2*n1 + 
     40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 44*d^2*n2 + 
     24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 280*n3 + 
     248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 152*n2*n3 + 
     68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
     16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 152*n1*n4 + 
     72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
     16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
     8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 
     8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 
     8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 
     24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 
     24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 
     8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-88*n3 + 96*d*n3 - 24*d^2*n3 + 48*n1*n3 - 16*d*n1*n3 - 16*n2*n3 + 
      12*d*n2*n3 + 8*n1*n2*n3 - 104*n3^2 + 44*d*n3^2 + 8*n1*n3^2 - 
      16*n2*n3^2 - 16*n3^3 - 112*n3*n4 + 52*d*n3*n4 + 8*n1*n3*n4 - 
      16*n2*n3*n4 - 40*n3^2*n4 - 24*n3*n4^2 - 24*n3*n5 + 16*d*n3*n5 + 
      16*n1*n3*n5 - 24*n3^2*n5 - 24*n3*n4*n5)*j[p4, 1 + n1, n2, 1 + n3, 
      -1 + n4, 1 + n5, 1, 0, 1, 0, 0, 1, -1, 1, 1])/
    (-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 34*d^2*n1 + 
     40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 44*d^2*n2 + 
     24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 280*n3 + 
     248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 152*n2*n3 + 
     68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
     16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 152*n1*n4 + 
     72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
     16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
     8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 
     8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 
     8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 
     24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 
     24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 
     8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((88*n3 - 96*d*n3 + 24*d^2*n3 - 48*n1*n3 + 16*d*n1*n3 + 16*n2*n3 - 
      12*d*n2*n3 - 8*n1*n2*n3 + 104*n3^2 - 44*d*n3^2 - 8*n1*n3^2 + 
      16*n2*n3^2 + 16*n3^3 + 112*n3*n4 - 52*d*n3*n4 - 8*n1*n3*n4 + 
      16*n2*n3*n4 + 40*n3^2*n4 + 24*n3*n4^2 + 24*n3*n5 - 16*d*n3*n5 - 
      16*n1*n3*n5 + 24*n3^2*n5 + 24*n3*n4*n5)*j[p4, 1 + n1, n2, 1 + n3, 
      -1 + n4, 1 + n5, 1, 0, 1, 0, 1, 0, -1, 1, 1])/
    (-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 34*d^2*n1 + 
     40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 44*d^2*n2 + 
     24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 280*n3 + 
     248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 152*n2*n3 + 
     68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
     16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 152*n1*n4 + 
     72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
     16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
     8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 
     8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 
     8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 
     24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 
     24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 
     8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-88*n3 + 96*d*n3 - 24*d^2*n3 + 48*n1*n3 - 16*d*n1*n3 - 16*n2*n3 + 
      12*d*n2*n3 + 8*n1*n2*n3 - 104*n3^2 + 44*d*n3^2 + 8*n1*n3^2 - 
      16*n2*n3^2 - 16*n3^3 - 112*n3*n4 + 52*d*n3*n4 + 8*n1*n3*n4 - 
      16*n2*n3*n4 - 40*n3^2*n4 - 24*n3*n4^2 - 24*n3*n5 + 16*d*n3*n5 + 
      16*n1*n3*n5 - 24*n3^2*n5 - 24*n3*n4*n5)*j[p4, 1 + n1, n2, 1 + n3, 
      -1 + n4, 1 + n5, 1, 0, 1, 0, 1, 1, -2, 1, 1])/
    (-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 34*d^2*n1 + 
     40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 44*d^2*n2 + 
     24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 280*n3 + 
     248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 152*n2*n3 + 
     68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
     16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 152*n1*n4 + 
     72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
     16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
     8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 
     8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 
     8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 
     24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 
     24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 
     8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((88*n3 - 96*d*n3 + 24*d^2*n3 - 48*n1*n3 + 16*d*n1*n3 + 16*n2*n3 - 
      12*d*n2*n3 - 8*n1*n2*n3 + 104*n3^2 - 44*d*n3^2 - 8*n1*n3^2 + 
      16*n2*n3^2 + 16*n3^3 + 112*n3*n4 - 52*d*n3*n4 - 8*n1*n3*n4 + 
      16*n2*n3*n4 + 40*n3^2*n4 + 24*n3*n4^2 + 24*n3*n5 - 16*d*n3*n5 - 
      16*n1*n3*n5 + 24*n3^2*n5 + 24*n3*n4*n5)*j[p4, 1 + n1, n2, 1 + n3, 
      -1 + n4, 1 + n5, 1, 0, 1, 0, 1, 1, -1, 1, 1])/
    (-240 + 412*d - 214*d^2 + 35*d^3 - 88*n1 + 120*d*n1 - 34*d^2*n1 + 
     40*n1^2 - 12*d*n1^2 + 8*n1^3 - 136*n2 + 164*d*n2 - 44*d^2*n2 + 
     24*n1*n2 + 16*n1^2*n2 - 16*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 280*n3 + 
     248*d*n3 - 54*d^2*n3 - 144*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 152*n2*n3 + 
     68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
     16*n1*n3^2 - 16*n2*n3^2 - 328*n4 + 316*d*n4 - 74*d^2*n4 - 152*n1*n4 + 
     72*d*n1*n4 - 8*n1^2*n4 - 160*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
     16*n2^2*n4 - 136*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
     8*n3^2*n4 - 96*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 
     8*n4^3 - 88*n5 + 120*d*n5 - 34*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 
     8*n1^2*n5 - 24*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 96*n3*n5 + 44*d*n3*n5 - 
     24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 104*n4*n5 + 52*d*n4*n5 - 
     24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 16*n4^2*n5 - 8*n5^2 + 
     8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n6 == 1 && 
    n7 == 0 && n8 == 1 && n9 == 0 &&  !(n1 == 0 || n5 == 0) -> 
  ((64 - 56*d + 12*d^2 - 24*n1 + 8*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 56*n3 - 
      22*d*n3 - 4*n1*n3 + 8*n2*n3 + 8*n3^2 + 64*n4 - 26*d*n4 - 4*n1*n4 + 
      8*n2*n4 + 20*n3*n4 + 12*n4^2 + 16*n5 - 8*d*n5 - 8*n1*n5 + 12*n3*n5 + 
      12*n4*n5)*j[p4, -1 + n1, n2, n3, n4, 1 + n5, 0, 0, 2, 0, 1, 1, 0, 1, 
      1])/(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 160*d*n1 - 34*d^2*n1 + 
     40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 208*d*n2 - 44*d^2*n2 + 
     16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 352*n3 + 
     276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 176*n2*n3 + 
     68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
     16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 74*d^2*n4 - 184*n1*n4 + 
     72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
     16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
     8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 
     16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 34*d^2*n5 - 32*n1*n5 + 
     16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
     112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
     128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
     16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((648 - 796*d + 322*d^2 - 43*d^3 - 32*n1 + 12*d*n1 - 32*n1^2 + 12*d*n1^2 + 
      168*n2 - 146*d*n2 + 31*d^2*n2 - 36*n1*n2 + 12*d*n1*n2 - 4*n1^2*n2 + 
      12*n2^2 - 6*d*n2^2 - 4*n1*n2^2 + 652*n3 - 512*d*n3 + 100*d^2*n3 + 
      24*n1*n3 - 12*d*n1*n3 - 8*n1^2*n3 + 144*n2*n3 - 58*d*n2*n3 - 
      4*n1*n2*n3 + 8*n2^2*n3 + 188*n3^2 - 72*d*n3^2 + 8*n1*n3^2 + 
      24*n2*n3^2 + 16*n3^3 + 620*n4 - 484*d*n4 + 94*d^2*n4 + 56*n1*n4 - 
      24*d*n1*n4 - 8*n1^2*n4 + 140*n2*n4 - 56*d*n2*n4 + 8*n2^2*n4 + 
      344*n3*n4 - 132*d*n3*n4 + 24*n1*n3*n4 + 44*n2*n3*n4 + 44*n3^2*n4 + 
      148*n4^2 - 56*d*n4^2 + 16*n1*n4^2 + 20*n2*n4^2 + 36*n3*n4^2 + 8*n4^3 + 
      232*n5 - 200*d*n5 + 42*d^2*n5 - 8*n1*n5 - 8*n1^2*n5 + 32*n2*n5 - 
      16*d*n2*n5 - 8*n1*n2*n5 + 180*n3*n5 - 72*d*n3*n5 + 8*n1*n3*n5 + 
      20*n2*n3*n5 + 28*n3^2*n5 + 164*n4*n5 - 64*d*n4*n5 + 16*n1*n4*n5 + 
      20*n2*n4*n5 + 44*n3*n4*n5 + 16*n4^2*n5 + 16*n5^2 - 8*d*n5^2 + 
      8*n3*n5^2 + 8*n4*n5^2)*j[p4, -1 + n1, n2, n3, n4, 1 + n5, 1, 0, 0, 0, 
      1, 1, 0, 2, 1])/((-3 + d - n4 - n5)*(-504 + 628*d - 258*d^2 + 35*d^3 - 
      184*n1 + 160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
      208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
      74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
      34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((-92 + 80*d - 17*d^2 + 4*n1^2 - 12*n2 + 6*d*n2 + 
      4*n1*n2 - 64*n3 + 26*d*n3 - 4*n1*n3 - 8*n2*n3 - 8*n3^2 - 72*n4 + 
      30*d*n4 - 4*n1*n4 - 8*n2*n4 - 20*n3*n4 - 12*n4^2 - 24*n5 + 12*d*n5 - 
      12*n3*n5 - 12*n4*n5)*j[p4, -1 + n1, n2, n3, n4, 1 + n5, 1, 0, 0, 0, 2, 
      1, 0, 1, 1])/(2*(-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 
      4*n1^2 + 12*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 
      8*n2*n3 + 28*n4 - 12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 
      8*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((64 - 56*d + 12*d^2 - 24*n1 + 8*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 56*n3 - 
      22*d*n3 - 4*n1*n3 + 8*n2*n3 + 8*n3^2 + 64*n4 - 26*d*n4 - 4*n1*n4 + 
      8*n2*n4 + 20*n3*n4 + 12*n4^2 + 16*n5 - 8*d*n5 - 8*n1*n5 + 12*n3*n5 + 
      12*n4*n5)*j[p4, -1 + n1, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 0, 2, 0, 1, 
      1])/((-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 
      12*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((96 - 100*d + 32*d^2 - 3*d^3 + 112*n1 - 
      64*d*n1 + 8*d^2*n1 + 16*n1^2 - 4*d*n1^2 + 32*n2 - 24*d*n2 + 4*d^2*n2 + 
      32*n1*n2 - 8*d*n1*n2 + 8*n3 - 4*d*n3 + 8*n1*n3 - 8*n4 + 12*d*n4 - 
      4*d^2*n4 - 8*n1*n4 + 8*d*n1*n4 - 8*n3*n4 + 4*d*n3*n4 - 8*n1*n3*n4 - 
      8*n4^2 + 4*d*n4^2 - 8*n1*n4^2 + 88*n5 - 72*d*n5 + 14*d^2*n5 + 
      96*n1*n5 - 32*d*n1*n5 + 8*n1^2*n5 + 16*n2*n5 - 8*d*n2*n5 + 
      16*n1*n2*n5 + 8*n3*n5 - 4*d*n3*n5 + 8*n1*n3*n5 + 8*n4*n5 - 4*d*n4*n5 + 
      8*n1*n4*n5 + 16*n5^2 - 8*d*n5^2 + 16*n1*n5^2)*
     j[p4, -1 + n1, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 
      12*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((64 - 56*d + 12*d^2 - 24*n1 + 8*d*n1 + 12*n2 - 
      6*d*n2 - 4*n1*n2 + 56*n3 - 22*d*n3 - 4*n1*n3 + 8*n2*n3 + 8*n3^2 + 
      64*n4 - 26*d*n4 - 4*n1*n4 + 8*n2*n4 + 20*n3*n4 + 12*n4^2 + 16*n5 - 
      8*d*n5 - 8*n1*n5 + 12*n3*n5 + 12*n4*n5)*j[p4, -1 + n1, n2, n3, n4, 
      1 + n5, 1, 0, 1, 0, 1, 1, 0, 2, 0])/(-504 + 628*d - 258*d^2 + 35*d^3 - 
     184*n1 + 160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
     208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
     8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
     8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
     40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
     74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
     76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
     40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
     24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
     34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
     8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
     8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
     24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-92 + 80*d - 17*d^2 + 4*n1^2 - 12*n2 + 6*d*n2 + 4*n1*n2 - 64*n3 + 
      26*d*n3 - 4*n1*n3 - 8*n2*n3 - 8*n3^2 - 72*n4 + 30*d*n4 - 4*n1*n4 - 
      8*n2*n4 - 20*n3*n4 - 12*n4^2 - 24*n5 + 12*d*n5 - 12*n3*n5 - 12*n4*n5)*
     j[p4, -1 + n1, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 2, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 
      12*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((-100 + 88*d - 19*d^2 + 16*n1 - 4*d*n1 + 
      4*n1^2 - 24*n2 + 12*d*n2 + 8*n1*n2 - 76*n3 + 30*d*n3 - 4*n1*n3 - 
      16*n2*n3 - 8*n3^2 - 92*n4 + 38*d*n4 - 4*n1*n4 - 16*n2*n4 - 24*n3*n4 - 
      16*n4^2 - 24*n5 + 12*d*n5 + 8*n1*n5 - 16*n3*n5 - 16*n4*n5)*
     j[p4, -1 + n1, n2, n3, n4, 1 + n5, 1, 0, 2, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 
      12*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((-648 + 796*d - 322*d^2 + 43*d^3 + 32*n1 - 
      12*d*n1 + 32*n1^2 - 12*d*n1^2 - 168*n2 + 146*d*n2 - 31*d^2*n2 + 
      36*n1*n2 - 12*d*n1*n2 + 4*n1^2*n2 - 12*n2^2 + 6*d*n2^2 + 4*n1*n2^2 - 
      652*n3 + 512*d*n3 - 100*d^2*n3 - 24*n1*n3 + 12*d*n1*n3 + 8*n1^2*n3 - 
      144*n2*n3 + 58*d*n2*n3 + 4*n1*n2*n3 - 8*n2^2*n3 - 188*n3^2 + 
      72*d*n3^2 - 8*n1*n3^2 - 24*n2*n3^2 - 16*n3^3 - 620*n4 + 484*d*n4 - 
      94*d^2*n4 - 56*n1*n4 + 24*d*n1*n4 + 8*n1^2*n4 - 140*n2*n4 + 
      56*d*n2*n4 - 8*n2^2*n4 - 344*n3*n4 + 132*d*n3*n4 - 24*n1*n3*n4 - 
      44*n2*n3*n4 - 44*n3^2*n4 - 148*n4^2 + 56*d*n4^2 - 16*n1*n4^2 - 
      20*n2*n4^2 - 36*n3*n4^2 - 8*n4^3 - 880*n5 + 996*d*n5 - 364*d^2*n5 + 
      43*d^3*n5 + 40*n1*n5 - 12*d*n1*n5 + 40*n1^2*n5 - 12*d*n1^2*n5 - 
      200*n2*n5 + 162*d*n2*n5 - 31*d^2*n2*n5 + 44*n1*n2*n5 - 12*d*n1*n2*n5 + 
      4*n1^2*n2*n5 - 12*n2^2*n5 + 6*d*n2^2*n5 + 4*n1*n2^2*n5 - 832*n3*n5 + 
      584*d*n3*n5 - 100*d^2*n3*n5 - 32*n1*n3*n5 + 12*d*n1*n3*n5 + 
      8*n1^2*n3*n5 - 164*n2*n3*n5 + 58*d*n2*n3*n5 + 4*n1*n2*n3*n5 - 
      8*n2^2*n3*n5 - 216*n3^2*n5 + 72*d*n3^2*n5 - 8*n1*n3^2*n5 - 
      24*n2*n3^2*n5 - 16*n3^3*n5 - 784*n4*n5 + 548*d*n4*n5 - 94*d^2*n4*n5 - 
      72*n1*n4*n5 + 24*d*n1*n4*n5 + 8*n1^2*n4*n5 - 160*n2*n4*n5 + 
      56*d*n2*n4*n5 - 8*n2^2*n4*n5 - 388*n3*n4*n5 + 132*d*n3*n4*n5 - 
      24*n1*n3*n4*n5 - 44*n2*n3*n4*n5 - 44*n3^2*n4*n5 - 164*n4^2*n5 + 
      56*d*n4^2*n5 - 16*n1*n4^2*n5 - 20*n2*n4^2*n5 - 36*n3*n4^2*n5 - 
      8*n4^3*n5 - 248*n5^2 + 208*d*n5^2 - 42*d^2*n5^2 + 8*n1*n5^2 + 
      8*n1^2*n5^2 - 32*n2*n5^2 + 16*d*n2*n5^2 + 8*n1*n2*n5^2 - 188*n3*n5^2 + 
      72*d*n3*n5^2 - 8*n1*n3*n5^2 - 20*n2*n3*n5^2 - 28*n3^2*n5^2 - 
      172*n4*n5^2 + 64*d*n4*n5^2 - 16*n1*n4*n5^2 - 20*n2*n4*n5^2 - 
      44*n3*n4*n5^2 - 16*n4^2*n5^2 - 16*n5^3 + 8*d*n5^3 - 8*n3*n5^3 - 
      8*n4*n5^3)*j[p4, -1 + n1, n2, n3, n4, 2 + n5, 0, 0, 1, 0, 1, 1, 0, 1, 
      1])/((-3 + d - n4 - n5)*(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 
      160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
      208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
      74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
      34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((-100 + 88*d - 19*d^2 + 16*n1 - 4*d*n1 + 4*n1^2 - 
      24*n2 + 12*d*n2 + 8*n1*n2 - 76*n3 + 30*d*n3 - 4*n1*n3 - 16*n2*n3 - 
      8*n3^2 - 92*n4 + 38*d*n4 - 4*n1*n4 - 16*n2*n4 - 24*n3*n4 - 16*n4^2 - 
      124*n5 + 100*d*n5 - 19*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 4*n1^2*n5 - 
      24*n2*n5 + 12*d*n2*n5 + 8*n1*n2*n5 - 92*n3*n5 + 30*d*n3*n5 - 
      4*n1*n3*n5 - 16*n2*n3*n5 - 8*n3^2*n5 - 108*n4*n5 + 38*d*n4*n5 - 
      4*n1*n4*n5 - 16*n2*n4*n5 - 24*n3*n4*n5 - 16*n4^2*n5 - 24*n5^2 + 
      12*d*n5^2 + 8*n1*n5^2 - 16*n3*n5^2 - 16*n4*n5^2)*
     j[p4, -1 + n1, n2, n3, n4, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 
      12*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((100 - 88*d + 19*d^2 - 16*n1 + 4*d*n1 - 4*n1^2 + 
      24*n2 - 12*d*n2 - 8*n1*n2 + 76*n3 - 30*d*n3 + 4*n1*n3 + 16*n2*n3 + 
      8*n3^2 + 92*n4 - 38*d*n4 + 4*n1*n4 + 16*n2*n4 + 24*n3*n4 + 16*n4^2 + 
      124*n5 - 100*d*n5 + 19*d^2*n5 - 24*n1*n5 + 4*d*n1*n5 - 4*n1^2*n5 + 
      24*n2*n5 - 12*d*n2*n5 - 8*n1*n2*n5 + 92*n3*n5 - 30*d*n3*n5 + 
      4*n1*n3*n5 + 16*n2*n3*n5 + 8*n3^2*n5 + 108*n4*n5 - 38*d*n4*n5 + 
      4*n1*n4*n5 + 16*n2*n4*n5 + 24*n3*n4*n5 + 16*n4^2*n5 + 24*n5^2 - 
      12*d*n5^2 - 8*n1*n5^2 + 16*n3*n5^2 + 16*n4*n5^2)*
     j[p4, -1 + n1, n2, n3, n4, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 0])/
    (2*(-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 
      12*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((-648*n4 + 796*d*n4 - 322*d^2*n4 + 43*d^3*n4 + 
      32*n1*n4 - 12*d*n1*n4 + 32*n1^2*n4 - 12*d*n1^2*n4 - 168*n2*n4 + 
      146*d*n2*n4 - 31*d^2*n2*n4 + 36*n1*n2*n4 - 12*d*n1*n2*n4 + 
      4*n1^2*n2*n4 - 12*n2^2*n4 + 6*d*n2^2*n4 + 4*n1*n2^2*n4 - 652*n3*n4 + 
      512*d*n3*n4 - 100*d^2*n3*n4 - 24*n1*n3*n4 + 12*d*n1*n3*n4 + 
      8*n1^2*n3*n4 - 144*n2*n3*n4 + 58*d*n2*n3*n4 + 4*n1*n2*n3*n4 - 
      8*n2^2*n3*n4 - 188*n3^2*n4 + 72*d*n3^2*n4 - 8*n1*n3^2*n4 - 
      24*n2*n3^2*n4 - 16*n3^3*n4 - 620*n4^2 + 484*d*n4^2 - 94*d^2*n4^2 - 
      56*n1*n4^2 + 24*d*n1*n4^2 + 8*n1^2*n4^2 - 140*n2*n4^2 + 56*d*n2*n4^2 - 
      8*n2^2*n4^2 - 344*n3*n4^2 + 132*d*n3*n4^2 - 24*n1*n3*n4^2 - 
      44*n2*n3*n4^2 - 44*n3^2*n4^2 - 148*n4^3 + 56*d*n4^3 - 16*n1*n4^3 - 
      20*n2*n4^3 - 36*n3*n4^3 - 8*n4^4 - 232*n4*n5 + 200*d*n4*n5 - 
      42*d^2*n4*n5 + 8*n1*n4*n5 + 8*n1^2*n4*n5 - 32*n2*n4*n5 + 
      16*d*n2*n4*n5 + 8*n1*n2*n4*n5 - 180*n3*n4*n5 + 72*d*n3*n4*n5 - 
      8*n1*n3*n4*n5 - 20*n2*n3*n4*n5 - 28*n3^2*n4*n5 - 164*n4^2*n5 + 
      64*d*n4^2*n5 - 16*n1*n4^2*n5 - 20*n2*n4^2*n5 - 44*n3*n4^2*n5 - 
      16*n4^3*n5 - 16*n4*n5^2 + 8*d*n4*n5^2 - 8*n3*n4*n5^2 - 8*n4^2*n5^2)*
     j[p4, -1 + n1, n2, n3, 1 + n4, 1 + n5, 0, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 
      160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
      208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
      74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
      34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((648*n4 - 796*d*n4 + 322*d^2*n4 - 43*d^3*n4 - 32*n1*n4 + 
      12*d*n1*n4 - 32*n1^2*n4 + 12*d*n1^2*n4 + 168*n2*n4 - 146*d*n2*n4 + 
      31*d^2*n2*n4 - 36*n1*n2*n4 + 12*d*n1*n2*n4 - 4*n1^2*n2*n4 + 
      12*n2^2*n4 - 6*d*n2^2*n4 - 4*n1*n2^2*n4 + 652*n3*n4 - 512*d*n3*n4 + 
      100*d^2*n3*n4 + 24*n1*n3*n4 - 12*d*n1*n3*n4 - 8*n1^2*n3*n4 + 
      144*n2*n3*n4 - 58*d*n2*n3*n4 - 4*n1*n2*n3*n4 + 8*n2^2*n3*n4 + 
      188*n3^2*n4 - 72*d*n3^2*n4 + 8*n1*n3^2*n4 + 24*n2*n3^2*n4 + 
      16*n3^3*n4 + 620*n4^2 - 484*d*n4^2 + 94*d^2*n4^2 + 56*n1*n4^2 - 
      24*d*n1*n4^2 - 8*n1^2*n4^2 + 140*n2*n4^2 - 56*d*n2*n4^2 + 8*n2^2*n4^2 + 
      344*n3*n4^2 - 132*d*n3*n4^2 + 24*n1*n3*n4^2 + 44*n2*n3*n4^2 + 
      44*n3^2*n4^2 + 148*n4^3 - 56*d*n4^3 + 16*n1*n4^3 + 20*n2*n4^3 + 
      36*n3*n4^3 + 8*n4^4 + 232*n4*n5 - 200*d*n4*n5 + 42*d^2*n4*n5 - 
      8*n1*n4*n5 - 8*n1^2*n4*n5 + 32*n2*n4*n5 - 16*d*n2*n4*n5 - 
      8*n1*n2*n4*n5 + 180*n3*n4*n5 - 72*d*n3*n4*n5 + 8*n1*n3*n4*n5 + 
      20*n2*n3*n4*n5 + 28*n3^2*n4*n5 + 164*n4^2*n5 - 64*d*n4^2*n5 + 
      16*n1*n4^2*n5 + 20*n2*n4^2*n5 + 44*n3*n4^2*n5 + 16*n4^3*n5 + 
      16*n4*n5^2 - 8*d*n4*n5^2 + 8*n3*n4*n5^2 + 8*n4^2*n5^2)*
     j[p4, -1 + n1, n2, n3, 1 + n4, 1 + n5, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 
      160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
      208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
      74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
      34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((100*n4 - 88*d*n4 + 19*d^2*n4 - 16*n1*n4 + 4*d*n1*n4 - 
      4*n1^2*n4 + 24*n2*n4 - 12*d*n2*n4 - 8*n1*n2*n4 + 76*n3*n4 - 
      30*d*n3*n4 + 4*n1*n3*n4 + 16*n2*n3*n4 + 8*n3^2*n4 + 92*n4^2 - 
      38*d*n4^2 + 4*n1*n4^2 + 16*n2*n4^2 + 24*n3*n4^2 + 16*n4^3 + 24*n4*n5 - 
      12*d*n4*n5 - 8*n1*n4*n5 + 16*n3*n4*n5 + 16*n4^2*n5)*
     j[p4, -1 + n1, n2, n3, 1 + n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 0])/
    (2*(-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 
      12*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((1296*n3 - 1592*d*n3 + 644*d^2*n3 - 86*d^3*n3 - 
      64*n1*n3 + 24*d*n1*n3 - 64*n1^2*n3 + 24*d*n1^2*n3 + 336*n2*n3 - 
      292*d*n2*n3 + 62*d^2*n2*n3 - 72*n1*n2*n3 + 24*d*n1*n2*n3 - 
      8*n1^2*n2*n3 + 24*n2^2*n3 - 12*d*n2^2*n3 - 8*n1*n2^2*n3 + 1304*n3^2 - 
      1024*d*n3^2 + 200*d^2*n3^2 + 48*n1*n3^2 - 24*d*n1*n3^2 - 16*n1^2*n3^2 + 
      288*n2*n3^2 - 116*d*n2*n3^2 - 8*n1*n2*n3^2 + 16*n2^2*n3^2 + 376*n3^3 - 
      144*d*n3^3 + 16*n1*n3^3 + 48*n2*n3^3 + 32*n3^4 + 1240*n3*n4 - 
      968*d*n3*n4 + 188*d^2*n3*n4 + 112*n1*n3*n4 - 48*d*n1*n3*n4 - 
      16*n1^2*n3*n4 + 280*n2*n3*n4 - 112*d*n2*n3*n4 + 16*n2^2*n3*n4 + 
      688*n3^2*n4 - 264*d*n3^2*n4 + 48*n1*n3^2*n4 + 88*n2*n3^2*n4 + 
      88*n3^3*n4 + 296*n3*n4^2 - 112*d*n3*n4^2 + 32*n1*n3*n4^2 + 
      40*n2*n3*n4^2 + 72*n3^2*n4^2 + 16*n3*n4^3 + 464*n3*n5 - 400*d*n3*n5 + 
      84*d^2*n3*n5 - 16*n1*n3*n5 - 16*n1^2*n3*n5 + 64*n2*n3*n5 - 
      32*d*n2*n3*n5 - 16*n1*n2*n3*n5 + 360*n3^2*n5 - 144*d*n3^2*n5 + 
      16*n1*n3^2*n5 + 40*n2*n3^2*n5 + 56*n3^3*n5 + 328*n3*n4*n5 - 
      128*d*n3*n4*n5 + 32*n1*n3*n4*n5 + 40*n2*n3*n4*n5 + 88*n3^2*n4*n5 + 
      32*n3*n4^2*n5 + 32*n3*n5^2 - 16*d*n3*n5^2 + 16*n3^2*n5^2 + 
      16*n3*n4*n5^2)*j[p4, -1 + n1, n2, 1 + n3, n4, 1 + n5, 1, 0, 0, 0, 1, 1, 
      0, 1, 1])/((-3 + d - n4 - n5)*(-504 + 628*d - 258*d^2 + 35*d^3 - 
      184*n1 + 160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
      208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
      74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
      34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((1800*n3 - 2220*d*n3 + 902*d^2*n3 - 121*d^3*n3 + 
      120*n1*n3 - 136*d*n1*n3 + 34*d^2*n1*n3 - 104*n1^2*n3 + 36*d*n1^2*n3 - 
      8*n1^3*n3 + 576*n2*n3 - 500*d*n2*n3 + 106*d^2*n2*n3 - 88*n1*n2*n3 + 
      24*d*n1*n2*n3 - 24*n1^2*n2*n3 + 48*n2^2*n3 - 24*d*n2^2*n3 - 
      16*n1*n2^2*n3 + 1656*n3^2 - 1300*d*n3^2 + 254*d^2*n3^2 + 216*n1*n3^2 - 
      88*d*n1*n3^2 - 8*n1^2*n3^2 + 464*n2*n3^2 - 184*d*n2*n3^2 + 
      16*n1*n2*n3^2 + 32*n2^2*n3^2 + 416*n3^3 - 160*d*n3^3 + 32*n1*n3^3 + 
      64*n2*n3^3 + 32*n3^4 + 1704*n3*n4 - 1340*d*n3*n4 + 262*d^2*n3*n4 + 
      296*n1*n3*n4 - 120*d*n1*n3*n4 - 8*n1^2*n3*n4 + 472*n2*n3*n4 - 
      188*d*n2*n3*n4 + 24*n1*n2*n3*n4 + 32*n2^2*n3*n4 + 840*n3^2*n4 - 
      324*d*n3^2*n4 + 88*n1*n3^2*n4 + 128*n2*n3^2*n4 + 96*n3^3*n4 + 
      408*n3*n4^2 - 156*d*n3*n4^2 + 56*n1*n3*n4^2 + 64*n2*n3*n4^2 + 
      88*n3^2*n4^2 + 24*n3*n4^3 + 648*n3*n5 - 560*d*n3*n5 + 118*d^2*n3*n5 + 
      16*n1*n3*n5 - 16*d*n1*n3*n5 - 24*n1^2*n3*n5 + 104*n2*n3*n5 - 
      52*d*n2*n3*n5 - 24*n1*n2*n3*n5 + 472*n3^2*n5 - 188*d*n3^2*n5 + 
      40*n1*n3^2*n5 + 64*n2*n3^2*n5 + 64*n3^3*n5 + 456*n3*n4*n5 - 
      180*d*n3*n4*n5 + 56*n1*n3*n4*n5 + 64*n2*n3*n4*n5 + 112*n3^2*n4*n5 + 
      48*n3*n4^2*n5 + 48*n3*n5^2 - 24*d*n3*n5^2 + 24*n3^2*n5^2 + 
      24*n3*n4*n5^2)*j[p4, -1 + n1, n2, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 
      0, 0, 1])/(2*(-3 + d - n4 - n5)*(-504 + 628*d - 258*d^2 + 35*d^3 - 
      184*n1 + 160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
      208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
      74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
      34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((64*n3 - 56*d*n3 + 12*d^2*n3 - 24*n1*n3 + 8*d*n1*n3 + 
      12*n2*n3 - 6*d*n2*n3 - 4*n1*n2*n3 + 56*n3^2 - 22*d*n3^2 - 4*n1*n3^2 + 
      8*n2*n3^2 + 8*n3^3 + 64*n3*n4 - 26*d*n3*n4 - 4*n1*n3*n4 + 8*n2*n3*n4 + 
      20*n3^2*n4 + 12*n3*n4^2 + 16*n3*n5 - 8*d*n3*n5 - 8*n1*n3*n5 + 
      12*n3^2*n5 + 12*n3*n4*n5)*j[p4, -1 + n1, n2, 1 + n3, n4, 1 + n5, 1, 0, 
      1, 0, 1, 1, 0, 1, 0])/(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 
     160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
     208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
     8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
     8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
     40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
     74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
     76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
     40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
     24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
     34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
     8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
     8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
     24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((64*n2 - 56*d*n2 + 12*d^2*n2 - 24*n1*n2 + 8*d*n1*n2 + 12*n2^2 - 
      6*d*n2^2 - 4*n1*n2^2 + 56*n2*n3 - 22*d*n2*n3 - 4*n1*n2*n3 + 8*n2^2*n3 + 
      8*n2*n3^2 + 64*n2*n4 - 26*d*n2*n4 - 4*n1*n2*n4 + 8*n2^2*n4 + 
      20*n2*n3*n4 + 12*n2*n4^2 + 16*n2*n5 - 8*d*n2*n5 - 8*n1*n2*n5 + 
      12*n2*n3*n5 + 12*n2*n4*n5)*j[p4, -1 + n1, 1 + n2, n3, n4, 1 + n5, 0, 0, 
      1, 0, 1, 1, 0, 1, 1])/(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 
     160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
     208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
     8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
     8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
     40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
     74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
     76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
     40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
     24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
     34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
     8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
     8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
     24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-156*n2 + 136*d*n2 - 29*d^2*n2 + 24*n1*n2 - 8*d*n1*n2 + 4*n1^2*n2 - 
      24*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 120*n2*n3 + 48*d*n2*n3 - 16*n2^2*n3 - 
      16*n2*n3^2 - 136*n2*n4 + 56*d*n2*n4 - 16*n2^2*n4 - 40*n2*n3*n4 - 
      24*n2*n4^2 - 40*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 24*n2*n3*n5 - 
      24*n2*n4*n5)*j[p4, -1 + n1, 1 + n2, n3, n4, 1 + n5, 1, 0, 0, 0, 1, 1, 
      0, 1, 1])/(2*(-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 
      4*n1^2 + 12*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 
      8*n2*n3 + 28*n4 - 12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 
      8*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((-100*n2 + 88*d*n2 - 19*d^2*n2 + 16*n1*n2 - 4*d*n1*n2 + 4*n1^2*n2 - 
      24*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 76*n2*n3 + 30*d*n2*n3 - 4*n1*n2*n3 - 
      16*n2^2*n3 - 8*n2*n3^2 - 92*n2*n4 + 38*d*n2*n4 - 4*n1*n2*n4 - 
      16*n2^2*n4 - 24*n2*n3*n4 - 16*n2*n4^2 - 24*n2*n5 + 12*d*n2*n5 + 
      8*n1*n2*n5 - 16*n2*n3*n5 - 16*n2*n4*n5)*j[p4, -1 + n1, 1 + n2, n3, n4, 
      1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/((-3 + d - n4 - n5)*
     (36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 12*n2 - 6*d*n2 - 4*n1*n2 + 
      20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 12*d*n4 + 8*n1*n4 + 
      8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((64 - 56*d + 12*d^2 - 24*n1 + 8*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 56*n3 - 
      22*d*n3 - 4*n1*n3 + 8*n2*n3 + 8*n3^2 + 64*n4 - 26*d*n4 - 4*n1*n4 + 
      8*n2*n4 + 20*n3*n4 + 12*n4^2 + 16*n5 - 8*d*n5 - 8*n1*n5 + 12*n3*n5 + 
      12*n4*n5)*j[p4, n1, -1 + n2, n3, n4, 1 + n5, 0, 0, 1, 0, 2, 1, 0, 1, 
      1])/(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 160*d*n1 - 34*d^2*n1 + 
     40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 208*d*n2 - 44*d^2*n2 + 
     16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 352*n3 + 
     276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 176*n2*n3 + 
     68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
     16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 74*d^2*n4 - 184*n1*n4 + 
     72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
     16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
     8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 
     16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 34*d^2*n5 - 32*n1*n5 + 
     16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
     112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
     128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
     16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((92 - 80*d + 17*d^2 - 4*n1^2 + 12*n2 - 6*d*n2 - 4*n1*n2 + 64*n3 - 
      26*d*n3 + 4*n1*n3 + 8*n2*n3 + 8*n3^2 + 72*n4 - 30*d*n4 + 4*n1*n4 + 
      8*n2*n4 + 20*n3*n4 + 12*n4^2 + 24*n5 - 12*d*n5 + 12*n3*n5 + 12*n4*n5)*
     j[p4, n1, -1 + n2, n3, n4, 1 + n5, 1, 0, 0, 0, 2, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 
      12*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + j[p4, n1, -1 + n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 
     1, 0, 0, 2]/(3 - d + n4 + n5) + 
   ((-24 + 32*d - 14*d^2 + 2*d^3 - 56*n1 + 32*d*n1 - 4*d^2*n1 - 8*n2 + 
      6*d*n2 - d^2*n2 - 8*n1*n2 + 2*d*n1*n2 + 12*n3 - 2*d*n3 - d^2*n3 - 
      12*n1*n3 + 2*d*n1*n3 + 4*n3^2 - 12*n4 + 18*d*n4 - 5*d^2*n4 - 4*n1*n4 - 
      2*d*n1*n4 - 12*n3*n4 + 8*d*n3*n4 + 4*n1*n3*n4 - 4*n3^2*n4 - 16*n4^2 + 
      8*d*n4^2 + 4*n1*n4^2 - 8*n3*n4^2 - 4*n4^3 - 8*n5 + 8*d*n5 - 2*d^2*n5 - 
      48*n1*n5 + 16*d*n1*n5 - 4*n2*n5 + 2*d*n2*n5 - 4*n1*n2*n5 + 20*n3*n5 - 
      6*d*n3*n5 - 8*n1*n3*n5 + 4*n3^2*n5 + 12*n4*n5 - 2*d*n4*n5 - 
      8*n1*n4*n5 + 4*n3*n4*n5 - 8*n1*n5^2 + 4*n3*n5^2 + 4*n4*n5^2)*
     j[p4, n1, -1 + n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 12*n2 - 
      6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((28 - 24*d + 5*d^2 - 4*n1 + 2*d*n1 + 22*n3 - 
      9*d*n3 - 2*n1*n3 + 4*n3^2 + 22*n4 - 9*d*n4 - 2*n1*n4 + 8*n3*n4 + 
      4*n4^2 + 8*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)*j[p4, n1, -1 + n2, n3, n4, 
      1 + n5, 1, 0, 1, 0, 2, 0, 0, 1, 1])/((-3 + d - n4 - n5)*
     (36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 12*n2 - 6*d*n2 - 4*n1*n2 + 
      20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 12*d*n4 + 8*n1*n4 + 
      8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((92 - 80*d + 17*d^2 - 4*n1^2 + 12*n2 - 6*d*n2 - 4*n1*n2 + 64*n3 - 
      26*d*n3 + 4*n1*n3 + 8*n2*n3 + 8*n3^2 + 72*n4 - 30*d*n4 + 4*n1*n4 + 
      8*n2*n4 + 20*n3*n4 + 12*n4^2 + 24*n5 - 12*d*n5 + 12*n3*n5 + 12*n4*n5)*
     j[p4, n1, -1 + n2, n3, n4, 1 + n5, 1, 0, 1, 0, 2, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 
      12*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((32 - 28*d + 6*d^2 - 12*n1 + 4*d*n1 + 6*n2 - 
      3*d*n2 - 2*n1*n2 + 28*n3 - 11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 
      32*n4 - 13*d*n4 - 2*n1*n4 + 4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 
      4*d*n5 - 4*n1*n5 + 6*n3*n5 + 6*n4*n5)*j[p4, n1, -1 + n2, n3, n4, 
      1 + n5, 1, 0, 2, 0, 1, 0, 0, 1, 1])/((-3 + d - n4 - n5)*
     (36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 12*n2 - 6*d*n2 - 4*n1*n2 + 
      20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 12*d*n4 + 8*n1*n4 + 
      8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((32 - 28*d + 6*d^2 - 12*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
      11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 32*n4 - 13*d*n4 - 2*n1*n4 + 
      4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
      6*n4*n5)*j[p4, n1, -1 + n2, n3, n4, 1 + n5, 1, 0, 2, 0, 1, 1, 0, 0, 1])/
    ((-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 12*n2 - 
      6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((20 - 16*d + 3*d^2 - 16*n1 + 8*d*n1 + 4*n1^2 - 
      12*n2 + 6*d*n2 + 4*n1*n2 + 24*n3 - 10*d*n3 - 12*n1*n3 - 8*n2*n3 + 
      8*n3^2 + 16*n4 - 6*d*n4 - 12*n1*n4 - 8*n2*n4 + 12*n3*n4 + 4*n4^2 + 
      8*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)*j[p4, n1, -1 + n2, n3, n4, 1 + n5, 
      2, 0, 0, 0, 1, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5)*
     (36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 12*n2 - 6*d*n2 - 4*n1*n2 + 
      20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 12*d*n4 + 8*n1*n4 + 
      8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((32 - 28*d + 6*d^2 - 12*n1 + 4*d*n1 + 6*n2 - 3*d*n2 - 2*n1*n2 + 28*n3 - 
      11*d*n3 - 2*n1*n3 + 4*n2*n3 + 4*n3^2 + 32*n4 - 13*d*n4 - 2*n1*n4 + 
      4*n2*n4 + 10*n3*n4 + 6*n4^2 + 8*n5 - 4*d*n5 - 4*n1*n5 + 6*n3*n5 + 
      6*n4*n5)*j[p4, n1, -1 + n2, n3, n4, 1 + n5, 2, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 12*n2 - 
      6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) - j[p4, n1, -1 + n2, n3, n4, 1 + n5, 2, 0, 1, 0, 1, 
     1, 0, 0, 1]/(2*(-3 + d - n4 - n5)) - 
   j[p4, n1, -1 + n2, n3, n4, 1 + n5, 2, 0, 1, 0, 1, 1, 0, 1, 0]/
    (2*(-3 + d - n4 - n5)) + ((-1536 + 1888*d - 764*d^2 + 102*d^3 - 8*n1 + 
      52*d*n1 - 18*d^2*n1 + 72*n1^2 - 24*d*n1^2 + 8*n1^3 - 480*n2 + 
      414*d*n2 - 87*d^2*n2 + 76*n1*n2 - 20*d*n1*n2 + 20*n1^2*n2 - 36*n2^2 + 
      18*d*n2^2 + 12*n1*n2^2 - 1340*n3 + 1032*d*n3 - 198*d^2*n3 - 168*n1*n3 + 
      68*d*n1*n3 - 368*n2*n3 + 142*d*n2*n3 - 20*n1*n2*n3 - 24*n2^2*n3 - 
      276*n3^2 + 104*d*n3^2 - 24*n1*n3^2 - 40*n2*n3^2 - 16*n3^3 - 1596*n4 + 
      1252*d*n4 - 244*d^2*n4 - 168*n1*n4 + 72*d*n1*n4 - 404*n2*n4 + 
      160*d*n2*n4 - 16*n1*n2*n4 - 24*n2^2*n4 - 728*n3*n4 + 276*d*n3*n4 - 
      56*n1*n3*n4 - 100*n2*n3*n4 - 68*n3^2*n4 - 460*n4^2 + 176*d*n4^2 - 
      32*n1*n4^2 - 60*n2*n4^2 - 92*n3*n4^2 - 40*n4^3 - 2176*n5 + 2440*d*n5 - 
      880*d^2*n5 + 102*d^3*n5 + 64*n1*n5 + 36*d*n1*n5 - 18*d^2*n1*n5 + 
      88*n1^2*n5 - 24*d*n1^2*n5 + 8*n1^3*n5 - 576*n2*n5 + 462*d*n2*n5 - 
      87*d^2*n2*n5 + 100*n1*n2*n5 - 20*d*n1*n2*n5 + 20*n1^2*n2*n5 - 
      36*n2^2*n5 + 18*d*n2^2*n5 + 12*n1*n2^2*n5 - 1816*n3*n5 + 1216*d*n3*n5 - 
      198*d^2*n3*n5 - 192*n1*n3*n5 + 68*d*n1*n3*n5 - 428*n2*n3*n5 + 
      142*d*n2*n3*n5 - 20*n1*n2*n3*n5 - 24*n2^2*n3*n5 - 328*n3^2*n5 + 
      104*d*n3^2*n5 - 24*n1*n3^2*n5 - 40*n2*n3^2*n5 - 16*n3^3*n5 - 
      2120*n4*n5 + 1460*d*n4*n5 - 244*d^2*n4*n5 - 184*n1*n4*n5 + 
      72*d*n1*n4*n5 - 464*n2*n4*n5 + 160*d*n2*n4*n5 - 16*n1*n2*n4*n5 - 
      24*n2^2*n4*n5 - 860*n3*n4*n5 + 276*d*n3*n4*n5 - 56*n1*n3*n4*n5 - 
      100*n2*n3*n4*n5 - 68*n3^2*n4*n5 - 540*n4^2*n5 + 176*d*n4^2*n5 - 
      32*n1*n4^2*n5 - 60*n2*n4^2*n5 - 92*n3*n4^2*n5 - 40*n4^3*n5 - 704*n5^2 + 
      584*d*n5^2 - 116*d^2*n5^2 + 88*n1*n5^2 - 16*d*n1*n5^2 + 16*n1^2*n5^2 - 
      96*n2*n5^2 + 48*d*n2*n5^2 + 24*n1*n2*n5^2 - 516*n3*n5^2 + 
      184*d*n3*n5^2 - 24*n1*n3*n5^2 - 60*n2*n3*n5^2 - 52*n3^2*n5^2 - 
      564*n4*n5^2 + 208*d*n4*n5^2 - 16*n1*n4*n5^2 - 60*n2*n4*n5^2 - 
      132*n3*n4*n5^2 - 80*n4^2*n5^2 - 64*n5^3 + 32*d*n5^3 + 16*n1*n5^3 - 
      40*n3*n5^3 - 40*n4*n5^3)*j[p4, n1, -1 + n2, n3, n4, 2 + n5, 1, 0, 1, 0, 
      1, 1, 0, 0, 1])/((-3 + d - n4 - n5)*(-504 + 628*d - 258*d^2 + 35*d^3 - 
      184*n1 + 160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
      208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
      74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
      34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((1536 - 1888*d + 764*d^2 - 102*d^3 + 8*n1 - 52*d*n1 + 
      18*d^2*n1 - 72*n1^2 + 24*d*n1^2 - 8*n1^3 + 480*n2 - 414*d*n2 + 
      87*d^2*n2 - 76*n1*n2 + 20*d*n1*n2 - 20*n1^2*n2 + 36*n2^2 - 18*d*n2^2 - 
      12*n1*n2^2 + 1340*n3 - 1032*d*n3 + 198*d^2*n3 + 168*n1*n3 - 
      68*d*n1*n3 + 368*n2*n3 - 142*d*n2*n3 + 20*n1*n2*n3 + 24*n2^2*n3 + 
      276*n3^2 - 104*d*n3^2 + 24*n1*n3^2 + 40*n2*n3^2 + 16*n3^3 + 1596*n4 - 
      1252*d*n4 + 244*d^2*n4 + 168*n1*n4 - 72*d*n1*n4 + 404*n2*n4 - 
      160*d*n2*n4 + 16*n1*n2*n4 + 24*n2^2*n4 + 728*n3*n4 - 276*d*n3*n4 + 
      56*n1*n3*n4 + 100*n2*n3*n4 + 68*n3^2*n4 + 460*n4^2 - 176*d*n4^2 + 
      32*n1*n4^2 + 60*n2*n4^2 + 92*n3*n4^2 + 40*n4^3 + 2176*n5 - 2440*d*n5 + 
      880*d^2*n5 - 102*d^3*n5 - 64*n1*n5 - 36*d*n1*n5 + 18*d^2*n1*n5 - 
      88*n1^2*n5 + 24*d*n1^2*n5 - 8*n1^3*n5 + 576*n2*n5 - 462*d*n2*n5 + 
      87*d^2*n2*n5 - 100*n1*n2*n5 + 20*d*n1*n2*n5 - 20*n1^2*n2*n5 + 
      36*n2^2*n5 - 18*d*n2^2*n5 - 12*n1*n2^2*n5 + 1816*n3*n5 - 1216*d*n3*n5 + 
      198*d^2*n3*n5 + 192*n1*n3*n5 - 68*d*n1*n3*n5 + 428*n2*n3*n5 - 
      142*d*n2*n3*n5 + 20*n1*n2*n3*n5 + 24*n2^2*n3*n5 + 328*n3^2*n5 - 
      104*d*n3^2*n5 + 24*n1*n3^2*n5 + 40*n2*n3^2*n5 + 16*n3^3*n5 + 
      2120*n4*n5 - 1460*d*n4*n5 + 244*d^2*n4*n5 + 184*n1*n4*n5 - 
      72*d*n1*n4*n5 + 464*n2*n4*n5 - 160*d*n2*n4*n5 + 16*n1*n2*n4*n5 + 
      24*n2^2*n4*n5 + 860*n3*n4*n5 - 276*d*n3*n4*n5 + 56*n1*n3*n4*n5 + 
      100*n2*n3*n4*n5 + 68*n3^2*n4*n5 + 540*n4^2*n5 - 176*d*n4^2*n5 + 
      32*n1*n4^2*n5 + 60*n2*n4^2*n5 + 92*n3*n4^2*n5 + 40*n4^3*n5 + 704*n5^2 - 
      584*d*n5^2 + 116*d^2*n5^2 - 88*n1*n5^2 + 16*d*n1*n5^2 - 16*n1^2*n5^2 + 
      96*n2*n5^2 - 48*d*n2*n5^2 - 24*n1*n2*n5^2 + 516*n3*n5^2 - 
      184*d*n3*n5^2 + 24*n1*n3*n5^2 + 60*n2*n3*n5^2 + 52*n3^2*n5^2 + 
      564*n4*n5^2 - 208*d*n4*n5^2 + 16*n1*n4*n5^2 + 60*n2*n4*n5^2 + 
      132*n3*n4*n5^2 + 80*n4^2*n5^2 + 64*n5^3 - 32*d*n5^3 - 16*n1*n5^3 + 
      40*n3*n5^3 + 40*n4*n5^3)*j[p4, n1, -1 + n2, n3, n4, 2 + n5, 1, 0, 1, 0, 
      1, 1, 0, 1, 0])/((-3 + d - n4 - n5)*(-504 + 628*d - 258*d^2 + 35*d^3 - 
      184*n1 + 160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
      208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
      74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
      34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((648*n4 - 796*d*n4 + 322*d^2*n4 - 43*d^3*n4 - 32*n1*n4 + 
      12*d*n1*n4 - 32*n1^2*n4 + 12*d*n1^2*n4 + 168*n2*n4 - 146*d*n2*n4 + 
      31*d^2*n2*n4 - 36*n1*n2*n4 + 12*d*n1*n2*n4 - 4*n1^2*n2*n4 + 
      12*n2^2*n4 - 6*d*n2^2*n4 - 4*n1*n2^2*n4 + 652*n3*n4 - 512*d*n3*n4 + 
      100*d^2*n3*n4 + 24*n1*n3*n4 - 12*d*n1*n3*n4 - 8*n1^2*n3*n4 + 
      144*n2*n3*n4 - 58*d*n2*n3*n4 - 4*n1*n2*n3*n4 + 8*n2^2*n3*n4 + 
      188*n3^2*n4 - 72*d*n3^2*n4 + 8*n1*n3^2*n4 + 24*n2*n3^2*n4 + 
      16*n3^3*n4 + 620*n4^2 - 484*d*n4^2 + 94*d^2*n4^2 + 56*n1*n4^2 - 
      24*d*n1*n4^2 - 8*n1^2*n4^2 + 140*n2*n4^2 - 56*d*n2*n4^2 + 8*n2^2*n4^2 + 
      344*n3*n4^2 - 132*d*n3*n4^2 + 24*n1*n3*n4^2 + 44*n2*n3*n4^2 + 
      44*n3^2*n4^2 + 148*n4^3 - 56*d*n4^3 + 16*n1*n4^3 + 20*n2*n4^3 + 
      36*n3*n4^3 + 8*n4^4 + 232*n4*n5 - 200*d*n4*n5 + 42*d^2*n4*n5 - 
      8*n1*n4*n5 - 8*n1^2*n4*n5 + 32*n2*n4*n5 - 16*d*n2*n4*n5 - 
      8*n1*n2*n4*n5 + 180*n3*n4*n5 - 72*d*n3*n4*n5 + 8*n1*n3*n4*n5 + 
      20*n2*n3*n4*n5 + 28*n3^2*n4*n5 + 164*n4^2*n5 - 64*d*n4^2*n5 + 
      16*n1*n4^2*n5 + 20*n2*n4^2*n5 + 44*n3*n4^2*n5 + 16*n4^3*n5 + 
      16*n4*n5^2 - 8*d*n4*n5^2 + 8*n3*n4*n5^2 + 8*n4^2*n5^2)*
     j[p4, n1, -1 + n2, n3, 1 + n4, 1 + n5, 0, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 
      160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
      208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
      74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
      34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((-648*n4 + 796*d*n4 - 322*d^2*n4 + 43*d^3*n4 + 
      32*n1*n4 - 12*d*n1*n4 + 32*n1^2*n4 - 12*d*n1^2*n4 - 168*n2*n4 + 
      146*d*n2*n4 - 31*d^2*n2*n4 + 36*n1*n2*n4 - 12*d*n1*n2*n4 + 
      4*n1^2*n2*n4 - 12*n2^2*n4 + 6*d*n2^2*n4 + 4*n1*n2^2*n4 - 652*n3*n4 + 
      512*d*n3*n4 - 100*d^2*n3*n4 - 24*n1*n3*n4 + 12*d*n1*n3*n4 + 
      8*n1^2*n3*n4 - 144*n2*n3*n4 + 58*d*n2*n3*n4 + 4*n1*n2*n3*n4 - 
      8*n2^2*n3*n4 - 188*n3^2*n4 + 72*d*n3^2*n4 - 8*n1*n3^2*n4 - 
      24*n2*n3^2*n4 - 16*n3^3*n4 - 620*n4^2 + 484*d*n4^2 - 94*d^2*n4^2 - 
      56*n1*n4^2 + 24*d*n1*n4^2 + 8*n1^2*n4^2 - 140*n2*n4^2 + 56*d*n2*n4^2 - 
      8*n2^2*n4^2 - 344*n3*n4^2 + 132*d*n3*n4^2 - 24*n1*n3*n4^2 - 
      44*n2*n3*n4^2 - 44*n3^2*n4^2 - 148*n4^3 + 56*d*n4^3 - 16*n1*n4^3 - 
      20*n2*n4^3 - 36*n3*n4^3 - 8*n4^4 - 232*n4*n5 + 200*d*n4*n5 - 
      42*d^2*n4*n5 + 8*n1*n4*n5 + 8*n1^2*n4*n5 - 32*n2*n4*n5 + 
      16*d*n2*n4*n5 + 8*n1*n2*n4*n5 - 180*n3*n4*n5 + 72*d*n3*n4*n5 - 
      8*n1*n3*n4*n5 - 20*n2*n3*n4*n5 - 28*n3^2*n4*n5 - 164*n4^2*n5 + 
      64*d*n4^2*n5 - 16*n1*n4^2*n5 - 20*n2*n4^2*n5 - 44*n3*n4^2*n5 - 
      16*n4^3*n5 - 16*n4*n5^2 + 8*d*n4*n5^2 - 8*n3*n4*n5^2 - 8*n4^2*n5^2)*
     j[p4, n1, -1 + n2, n3, 1 + n4, 1 + n5, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 
      160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
      208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
      74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
      34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((-100*n4 + 88*d*n4 - 19*d^2*n4 + 16*n1*n4 - 4*d*n1*n4 + 
      4*n1^2*n4 - 24*n2*n4 + 12*d*n2*n4 + 8*n1*n2*n4 - 76*n3*n4 + 
      30*d*n3*n4 - 4*n1*n3*n4 - 16*n2*n3*n4 - 8*n3^2*n4 - 92*n4^2 + 
      38*d*n4^2 - 4*n1*n4^2 - 16*n2*n4^2 - 24*n3*n4^2 - 16*n4^3 - 24*n4*n5 + 
      12*d*n4*n5 + 8*n1*n4*n5 - 16*n3*n4*n5 - 16*n4^2*n5)*
     j[p4, n1, -1 + n2, n3, 1 + n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 0])/
    (2*(-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 
      12*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((-648*n3 + 796*d*n3 - 322*d^2*n3 + 43*d^3*n3 + 
      32*n1*n3 - 12*d*n1*n3 + 32*n1^2*n3 - 12*d*n1^2*n3 - 168*n2*n3 + 
      146*d*n2*n3 - 31*d^2*n2*n3 + 36*n1*n2*n3 - 12*d*n1*n2*n3 + 
      4*n1^2*n2*n3 - 12*n2^2*n3 + 6*d*n2^2*n3 + 4*n1*n2^2*n3 - 652*n3^2 + 
      512*d*n3^2 - 100*d^2*n3^2 - 24*n1*n3^2 + 12*d*n1*n3^2 + 8*n1^2*n3^2 - 
      144*n2*n3^2 + 58*d*n2*n3^2 + 4*n1*n2*n3^2 - 8*n2^2*n3^2 - 188*n3^3 + 
      72*d*n3^3 - 8*n1*n3^3 - 24*n2*n3^3 - 16*n3^4 - 620*n3*n4 + 
      484*d*n3*n4 - 94*d^2*n3*n4 - 56*n1*n3*n4 + 24*d*n1*n3*n4 + 
      8*n1^2*n3*n4 - 140*n2*n3*n4 + 56*d*n2*n3*n4 - 8*n2^2*n3*n4 - 
      344*n3^2*n4 + 132*d*n3^2*n4 - 24*n1*n3^2*n4 - 44*n2*n3^2*n4 - 
      44*n3^3*n4 - 148*n3*n4^2 + 56*d*n3*n4^2 - 16*n1*n3*n4^2 - 
      20*n2*n3*n4^2 - 36*n3^2*n4^2 - 8*n3*n4^3 - 232*n3*n5 + 200*d*n3*n5 - 
      42*d^2*n3*n5 + 8*n1*n3*n5 + 8*n1^2*n3*n5 - 32*n2*n3*n5 + 
      16*d*n2*n3*n5 + 8*n1*n2*n3*n5 - 180*n3^2*n5 + 72*d*n3^2*n5 - 
      8*n1*n3^2*n5 - 20*n2*n3^2*n5 - 28*n3^3*n5 - 164*n3*n4*n5 + 
      64*d*n3*n4*n5 - 16*n1*n3*n4*n5 - 20*n2*n3*n4*n5 - 44*n3^2*n4*n5 - 
      16*n3*n4^2*n5 - 16*n3*n5^2 + 8*d*n3*n5^2 - 8*n3^2*n5^2 - 8*n3*n4*n5^2)*
     j[p4, n1, -1 + n2, 1 + n3, n4, 1 + n5, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 
      160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
      208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
      74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
      34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((648*n3 - 796*d*n3 + 322*d^2*n3 - 43*d^3*n3 - 32*n1*n3 + 
      12*d*n1*n3 - 32*n1^2*n3 + 12*d*n1^2*n3 + 168*n2*n3 - 146*d*n2*n3 + 
      31*d^2*n2*n3 - 36*n1*n2*n3 + 12*d*n1*n2*n3 - 4*n1^2*n2*n3 + 
      12*n2^2*n3 - 6*d*n2^2*n3 - 4*n1*n2^2*n3 + 652*n3^2 - 512*d*n3^2 + 
      100*d^2*n3^2 + 24*n1*n3^2 - 12*d*n1*n3^2 - 8*n1^2*n3^2 + 144*n2*n3^2 - 
      58*d*n2*n3^2 - 4*n1*n2*n3^2 + 8*n2^2*n3^2 + 188*n3^3 - 72*d*n3^3 + 
      8*n1*n3^3 + 24*n2*n3^3 + 16*n3^4 + 620*n3*n4 - 484*d*n3*n4 + 
      94*d^2*n3*n4 + 56*n1*n3*n4 - 24*d*n1*n3*n4 - 8*n1^2*n3*n4 + 
      140*n2*n3*n4 - 56*d*n2*n3*n4 + 8*n2^2*n3*n4 + 344*n3^2*n4 - 
      132*d*n3^2*n4 + 24*n1*n3^2*n4 + 44*n2*n3^2*n4 + 44*n3^3*n4 + 
      148*n3*n4^2 - 56*d*n3*n4^2 + 16*n1*n3*n4^2 + 20*n2*n3*n4^2 + 
      36*n3^2*n4^2 + 8*n3*n4^3 + 232*n3*n5 - 200*d*n3*n5 + 42*d^2*n3*n5 - 
      8*n1*n3*n5 - 8*n1^2*n3*n5 + 32*n2*n3*n5 - 16*d*n2*n3*n5 - 
      8*n1*n2*n3*n5 + 180*n3^2*n5 - 72*d*n3^2*n5 + 8*n1*n3^2*n5 + 
      20*n2*n3^2*n5 + 28*n3^3*n5 + 164*n3*n4*n5 - 64*d*n3*n4*n5 + 
      16*n1*n3*n4*n5 + 20*n2*n3*n4*n5 + 44*n3^2*n4*n5 + 16*n3*n4^2*n5 + 
      16*n3*n5^2 - 8*d*n3*n5^2 + 8*n3^2*n5^2 + 8*n3*n4*n5^2)*
     j[p4, n1, -1 + n2, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 
      160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
      208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
      74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
      34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((-648*n3 + 796*d*n3 - 322*d^2*n3 + 43*d^3*n3 + 
      32*n1*n3 - 12*d*n1*n3 + 32*n1^2*n3 - 12*d*n1^2*n3 - 168*n2*n3 + 
      146*d*n2*n3 - 31*d^2*n2*n3 + 36*n1*n2*n3 - 12*d*n1*n2*n3 + 
      4*n1^2*n2*n3 - 12*n2^2*n3 + 6*d*n2^2*n3 + 4*n1*n2^2*n3 - 652*n3^2 + 
      512*d*n3^2 - 100*d^2*n3^2 - 24*n1*n3^2 + 12*d*n1*n3^2 + 8*n1^2*n3^2 - 
      144*n2*n3^2 + 58*d*n2*n3^2 + 4*n1*n2*n3^2 - 8*n2^2*n3^2 - 188*n3^3 + 
      72*d*n3^3 - 8*n1*n3^3 - 24*n2*n3^3 - 16*n3^4 - 620*n3*n4 + 
      484*d*n3*n4 - 94*d^2*n3*n4 - 56*n1*n3*n4 + 24*d*n1*n3*n4 + 
      8*n1^2*n3*n4 - 140*n2*n3*n4 + 56*d*n2*n3*n4 - 8*n2^2*n3*n4 - 
      344*n3^2*n4 + 132*d*n3^2*n4 - 24*n1*n3^2*n4 - 44*n2*n3^2*n4 - 
      44*n3^3*n4 - 148*n3*n4^2 + 56*d*n3*n4^2 - 16*n1*n3*n4^2 - 
      20*n2*n3*n4^2 - 36*n3^2*n4^2 - 8*n3*n4^3 - 232*n3*n5 + 200*d*n3*n5 - 
      42*d^2*n3*n5 + 8*n1*n3*n5 + 8*n1^2*n3*n5 - 32*n2*n3*n5 + 
      16*d*n2*n3*n5 + 8*n1*n2*n3*n5 - 180*n3^2*n5 + 72*d*n3^2*n5 - 
      8*n1*n3^2*n5 - 20*n2*n3^2*n5 - 28*n3^3*n5 - 164*n3*n4*n5 + 
      64*d*n3*n4*n5 - 16*n1*n3*n4*n5 - 20*n2*n3*n4*n5 - 44*n3^2*n4*n5 - 
      16*n3*n4^2*n5 - 16*n3*n5^2 + 8*d*n3*n5^2 - 8*n3^2*n5^2 - 8*n3*n4*n5^2)*
     j[p4, n1, -1 + n2, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 0, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 
      160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
      208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
      74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
      34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((-792*n3 + 964*d*n3 - 386*d^2*n3 + 51*d^3*n3 + 
      248*n1*n3 - 184*d*n1*n3 + 34*d^2*n1*n3 + 24*n1^2*n3 - 12*d*n1^2*n3 - 
      8*n1^3*n3 - 96*n2*n3 + 84*d*n2*n3 - 18*d^2*n2*n3 + 56*n1*n2*n3 - 
      24*d*n1*n2*n3 - 8*n1^2*n2*n3 - 952*n3^2 + 748*d*n3^2 - 146*d^2*n3^2 + 
      120*n1*n3^2 - 40*d*n1*n3^2 + 24*n1^2*n3^2 - 112*n2*n3^2 + 
      48*d*n2*n3^2 + 32*n1*n2*n3^2 - 336*n3^3 + 128*d*n3^3 - 32*n2*n3^3 - 
      32*n3^4 - 776*n3*n4 + 596*d*n3*n4 - 114*d^2*n3*n4 + 72*n1*n3*n4 - 
      24*d*n1*n3*n4 + 24*n1^2*n3*n4 - 88*n2*n3*n4 + 36*d*n2*n3*n4 + 
      24*n1*n2*n3*n4 - 536*n3^2*n4 + 204*d*n3^2*n4 - 8*n1*n3^2*n4 - 
      48*n2*n3^2*n4 - 80*n3^3*n4 - 184*n3*n4^2 + 68*d*n3*n4^2 - 
      8*n1*n3*n4^2 - 16*n2*n3*n4^2 - 56*n3^2*n4^2 - 8*n3*n4^3 - 280*n3*n5 + 
      240*d*n3*n5 - 50*d^2*n3*n5 + 48*n1*n3*n5 - 16*d*n1*n3*n5 + 
      8*n1^2*n3*n5 - 24*n2*n3*n5 + 12*d*n2*n3*n5 + 8*n1*n2*n3*n5 - 
      248*n3^2*n5 + 100*d*n3^2*n5 + 8*n1*n3^2*n5 - 16*n2*n3^2*n5 - 
      48*n3^3*n5 - 200*n3*n4*n5 + 76*d*n3*n4*n5 - 8*n1*n3*n4*n5 - 
      16*n2*n3*n4*n5 - 64*n3^2*n4*n5 - 16*n3*n4^2*n5 - 16*n3*n5^2 + 
      8*d*n3*n5^2 - 8*n3^2*n5^2 - 8*n3*n4*n5^2)*j[p4, n1, -1 + n2, 1 + n3, 
      n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/(2*(-3 + d - n4 - n5)*
     (-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 160*d*n1 - 34*d^2*n1 + 
      40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 208*d*n2 - 44*d^2*n2 + 
      16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 352*n3 + 
      276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 176*n2*n3 + 
      68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
      16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 74*d^2*n4 - 184*n1*n4 + 
      72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
      16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
      8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 
      16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 34*d^2*n5 - 32*n1*n5 + 
      16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
      112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
      128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
      16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-64*n3 + 56*d*n3 - 12*d^2*n3 + 24*n1*n3 - 8*d*n1*n3 - 12*n2*n3 + 
      6*d*n2*n3 + 4*n1*n2*n3 - 56*n3^2 + 22*d*n3^2 + 4*n1*n3^2 - 8*n2*n3^2 - 
      8*n3^3 - 64*n3*n4 + 26*d*n3*n4 + 4*n1*n3*n4 - 8*n2*n3*n4 - 20*n3^2*n4 - 
      12*n3*n4^2 - 16*n3*n5 + 8*d*n3*n5 + 8*n1*n3*n5 - 12*n3^2*n5 - 
      12*n3*n4*n5)*j[p4, n1, -1 + n2, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 
      0, 1, 0])/(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 160*d*n1 - 
     34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 208*d*n2 - 
     44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 
     352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 
     176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 
     16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 74*d^2*n4 - 
     184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 76*d*n2*n4 - 
     24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 
     40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 
     24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 34*d^2*n5 - 
     32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
     112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
     128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
     16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((64 - 56*d + 12*d^2 - 24*n1 + 8*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 56*n3 - 
      22*d*n3 - 4*n1*n3 + 8*n2*n3 + 8*n3^2 + 64*n4 - 26*d*n4 - 4*n1*n4 + 
      8*n2*n4 + 20*n3*n4 + 12*n4^2 + 16*n5 - 8*d*n5 - 8*n1*n5 + 12*n3*n5 + 
      12*n4*n5)*j[p4, n1, n2, -1 + n3, n4, 1 + n5, 0, 0, 1, 0, 2, 1, 0, 1, 
      1])/(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 160*d*n1 - 34*d^2*n1 + 
     40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 208*d*n2 - 44*d^2*n2 + 
     16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 352*n3 + 
     276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 176*n2*n3 + 
     68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
     16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 74*d^2*n4 - 184*n1*n4 + 
     72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
     16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
     8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 
     16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 34*d^2*n5 - 32*n1*n5 + 
     16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
     112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
     128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
     16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   j[p4, n1, n2, -1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 2]/
    (3 - d + n4 + n5) + ((152 - 176*d + 66*d^2 - 8*d^3 + 8*n1 - 4*d*n1 + 
      32*n2 - 24*d*n2 + 4*d^2*n2 + 100*n3 - 70*d*n3 + 12*d^2*n3 + 4*n1*n3 + 
      16*n2*n3 - 4*d*n2*n3 + 12*n3^2 - 4*d*n3^2 + 140*n4 - 102*d*n4 + 
      18*d^2*n4 - 4*n1*n4 + 4*d*n1*n4 + 16*n2*n4 - 4*d*n2*n4 + 52*n3*n4 - 
      18*d*n3*n4 - 4*n1*n3*n4 + 4*n3^2*n4 + 40*n4^2 - 14*d*n4^2 - 4*n1*n4^2 + 
      8*n3*n4^2 + 4*n4^3 + 104*n5 - 88*d*n5 + 18*d^2*n5 + 8*n1*n5 - 
      4*d*n1*n5 + 16*n2*n5 - 8*d*n2*n5 + 60*n3*n5 - 22*d*n3*n5 + 4*n1*n3*n5 + 
      8*n2*n3*n5 + 4*n3^2*n5 + 76*n4*n5 - 30*d*n4*n5 + 4*n1*n4*n5 + 
      8*n2*n4*n5 + 16*n3*n4*n5 + 12*n4^2*n5 + 16*n5^2 - 8*d*n5^2 + 
      8*n3*n5^2 + 8*n4*n5^2)*j[p4, n1, n2, -1 + n3, n4, 1 + n5, 1, 0, 1, 0, 
      1, 1, 0, 1, 1])/((-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 
      4*d*n1 - 4*n1^2 + 12*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 
      8*n2*n3 + 28*n4 - 12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 
      8*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((28 - 24*d + 5*d^2 - 4*n1 + 2*d*n1 + 22*n3 - 9*d*n3 - 2*n1*n3 + 4*n3^2 + 
      22*n4 - 9*d*n4 - 2*n1*n4 + 8*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 4*n3*n5 + 
      4*n4*n5)*j[p4, n1, n2, -1 + n3, n4, 1 + n5, 1, 0, 1, 0, 2, 0, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 12*n2 - 
      6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((28 - 24*d + 5*d^2 - 4*n1 + 2*d*n1 + 22*n3 - 
      9*d*n3 - 2*n1*n3 + 4*n3^2 + 22*n4 - 9*d*n4 - 2*n1*n4 + 8*n3*n4 + 
      4*n4^2 + 8*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)*j[p4, n1, n2, -1 + n3, n4, 
      1 + n5, 2, 0, 0, 0, 1, 1, 0, 1, 1])/((-3 + d - n4 - n5)*
     (36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 12*n2 - 6*d*n2 - 4*n1*n2 + 
      20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 12*d*n4 + 8*n1*n4 + 
      8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((100 - 88*d + 19*d^2 - 16*n1 + 4*d*n1 - 4*n1^2 + 24*n2 - 12*d*n2 - 
      8*n1*n2 + 76*n3 - 30*d*n3 + 4*n1*n3 + 16*n2*n3 + 8*n3^2 + 92*n4 - 
      38*d*n4 + 4*n1*n4 + 16*n2*n4 + 24*n3*n4 + 16*n4^2 + 24*n5 - 12*d*n5 - 
      8*n1*n5 + 16*n3*n5 + 16*n4*n5)*j[p4, n1, n2, -1 + n3, n4, 1 + n5, 2, 0, 
      1, 0, 0, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 
      4*d*n1 - 4*n1^2 + 12*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 
      8*n2*n3 + 28*n4 - 12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 
      8*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((-1536*n4 + 1888*d*n4 - 764*d^2*n4 + 102*d^3*n4 - 8*n1*n4 + 52*d*n1*n4 - 
      18*d^2*n1*n4 + 72*n1^2*n4 - 24*d*n1^2*n4 + 8*n1^3*n4 - 480*n2*n4 + 
      414*d*n2*n4 - 87*d^2*n2*n4 + 76*n1*n2*n4 - 20*d*n1*n2*n4 + 
      20*n1^2*n2*n4 - 36*n2^2*n4 + 18*d*n2^2*n4 + 12*n1*n2^2*n4 - 
      1340*n3*n4 + 1032*d*n3*n4 - 198*d^2*n3*n4 - 168*n1*n3*n4 + 
      68*d*n1*n3*n4 - 368*n2*n3*n4 + 142*d*n2*n3*n4 - 20*n1*n2*n3*n4 - 
      24*n2^2*n3*n4 - 276*n3^2*n4 + 104*d*n3^2*n4 - 24*n1*n3^2*n4 - 
      40*n2*n3^2*n4 - 16*n3^3*n4 - 1596*n4^2 + 1252*d*n4^2 - 244*d^2*n4^2 - 
      168*n1*n4^2 + 72*d*n1*n4^2 - 404*n2*n4^2 + 160*d*n2*n4^2 - 
      16*n1*n2*n4^2 - 24*n2^2*n4^2 - 728*n3*n4^2 + 276*d*n3*n4^2 - 
      56*n1*n3*n4^2 - 100*n2*n3*n4^2 - 68*n3^2*n4^2 - 460*n4^3 + 176*d*n4^3 - 
      32*n1*n4^3 - 60*n2*n4^3 - 92*n3*n4^3 - 40*n4^4 - 640*n4*n5 + 
      552*d*n4*n5 - 116*d^2*n4*n5 + 72*n1*n4*n5 - 16*d*n1*n4*n5 + 
      16*n1^2*n4*n5 - 96*n2*n4*n5 + 48*d*n2*n4*n5 + 24*n1*n2*n4*n5 - 
      476*n3*n4*n5 + 184*d*n3*n4*n5 - 24*n1*n3*n4*n5 - 60*n2*n3*n4*n5 - 
      52*n3^2*n4*n5 - 524*n4^2*n5 + 208*d*n4^2*n5 - 16*n1*n4^2*n5 - 
      60*n2*n4^2*n5 - 132*n3*n4^2*n5 - 80*n4^3*n5 - 64*n4*n5^2 + 
      32*d*n4*n5^2 + 16*n1*n4*n5^2 - 40*n3*n4*n5^2 - 40*n4^2*n5^2)*
     j[p4, n1, n2, -1 + n3, 1 + n4, 1 + n5, 0, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 
      160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
      208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
      74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
      34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((1672*n4 - 2044*d*n4 + 822*d^2*n4 - 109*d^3*n4 + 
      40*n1*n4 - 64*d*n1*n4 + 18*d^2*n1*n4 - 56*n1^2*n4 + 20*d*n1^2*n4 - 
      8*n1^3*n4 + 424*n2*n4 - 364*d*n2*n4 + 76*d^2*n2*n4 - 56*n1*n2*n4 + 
      16*d*n1*n2*n4 - 16*n1^2*n2*n4 + 24*n2^2*n4 - 12*d*n2^2*n4 - 
      8*n1*n2^2*n4 + 1416*n3*n4 - 1088*d*n3*n4 + 208*d^2*n3*n4 + 
      160*n1*n3*n4 - 64*d*n1*n3*n4 + 312*n2*n3*n4 - 120*d*n2*n3*n4 + 
      16*n1*n2*n3*n4 + 16*n2^2*n3*n4 + 288*n3^2*n4 - 108*d*n3^2*n4 + 
      24*n1*n3^2*n4 + 32*n2*n3^2*n4 + 16*n3^3*n4 + 1704*n4^2 - 1336*d*n4^2 + 
      260*d^2*n4^2 + 128*n1*n4^2 - 56*d*n1*n4^2 + 352*n2*n4^2 - 
      140*d*n2*n4^2 + 8*n1*n2*n4^2 + 16*n2^2*n4^2 + 784*n3*n4^2 - 
      296*d*n3*n4^2 + 48*n1*n3*n4^2 + 88*n2*n3*n4^2 + 72*n3^2*n4^2 + 
      512*n4^3 - 196*d*n4^3 + 24*n1*n4^3 + 56*n2*n4^3 + 104*n3*n4^3 + 
      48*n4^4 + 744*n4*n5 - 640*d*n4*n5 + 134*d^2*n4*n5 - 48*n1*n4*n5 + 
      8*d*n1*n4*n5 - 8*n1^2*n4*n5 + 96*n2*n4*n5 - 48*d*n2*n4*n5 - 
      16*n1*n2*n4*n5 + 528*n3*n4*n5 - 204*d*n3*n4*n5 + 24*n1*n3*n4*n5 + 
      56*n2*n3*n4*n5 + 56*n3^2*n4*n5 + 592*n4^2*n5 - 236*d*n4^2*n5 + 
      8*n1*n4^2*n5 + 56*n2*n4^2*n5 + 152*n3*n4^2*n5 + 96*n4^3*n5 + 
      80*n4*n5^2 - 40*d*n4*n5^2 - 16*n1*n4*n5^2 + 48*n3*n4*n5^2 + 
      48*n4^2*n5^2)*j[p4, n1, n2, -1 + n3, 1 + n4, 1 + n5, 1, 0, 0, 0, 1, 1, 
      0, 1, 1])/(2*(-3 + d - n4 - n5)*(-504 + 628*d - 258*d^2 + 35*d^3 - 
      184*n1 + 160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
      208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
      74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
      34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((100*n4 - 88*d*n4 + 19*d^2*n4 - 16*n1*n4 + 4*d*n1*n4 - 
      4*n1^2*n4 + 24*n2*n4 - 12*d*n2*n4 - 8*n1*n2*n4 + 76*n3*n4 - 
      30*d*n3*n4 + 4*n1*n3*n4 + 16*n2*n3*n4 + 8*n3^2*n4 + 92*n4^2 - 
      38*d*n4^2 + 4*n1*n4^2 + 16*n2*n4^2 + 24*n3*n4^2 + 16*n4^3 + 24*n4*n5 - 
      12*d*n4*n5 - 8*n1*n4*n5 + 16*n3*n4*n5 + 16*n4^2*n5)*
     j[p4, n1, n2, -1 + n3, 1 + n4, 1 + n5, 1, 0, 1, 0, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 
      12*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((-100*n4 + 88*d*n4 - 19*d^2*n4 + 16*n1*n4 - 
      4*d*n1*n4 + 4*n1^2*n4 - 24*n2*n4 + 12*d*n2*n4 + 8*n1*n2*n4 - 76*n3*n4 + 
      30*d*n3*n4 - 4*n1*n3*n4 - 16*n2*n3*n4 - 8*n3^2*n4 - 92*n4^2 + 
      38*d*n4^2 - 4*n1*n4^2 - 16*n2*n4^2 - 24*n3*n4^2 - 16*n4^3 - 24*n4*n5 + 
      12*d*n4*n5 + 8*n1*n4*n5 - 16*n3*n4*n5 - 16*n4^2*n5)*
     j[p4, n1, n2, -1 + n3, 1 + n4, 1 + n5, 1, 0, 1, 0, 1, 0, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 
      12*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((56 - 48*d + 10*d^2 - 8*n1 + 4*d*n1 + 44*n3 - 
      18*d*n3 - 4*n1*n3 + 8*n3^2 + 44*n4 - 18*d*n4 - 4*n1*n4 + 16*n3*n4 + 
      8*n4^2 + 16*n5 - 8*d*n5 + 8*n3*n5 + 8*n4*n5)*j[p4, n1, n2, n3, -1 + n4, 
      1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/(36 - 32*d + 7*d^2 + 8*n1 - 
     4*d*n1 - 4*n1^2 + 12*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 
     8*n2*n3 + 28*n4 - 12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 
     8*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5) + 
   ((-64 + 56*d - 12*d^2 + 24*n1 - 8*d*n1 - 12*n2 + 6*d*n2 + 4*n1*n2 - 
      56*n3 + 22*d*n3 + 4*n1*n3 - 8*n2*n3 - 8*n3^2 - 64*n4 + 26*d*n4 + 
      4*n1*n4 - 8*n2*n4 - 20*n3*n4 - 12*n4^2 - 16*n5 + 8*d*n5 + 8*n1*n5 - 
      12*n3*n5 - 12*n4*n5)*j[p4, n1, n2, n3, -1 + n4, 1 + n5, 1, 0, 2, 0, 1, 
      0, 0, 1, 1])/(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 160*d*n1 - 
     34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 208*d*n2 - 
     44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 
     352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 
     176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 
     16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 74*d^2*n4 - 
     184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 76*d*n2*n4 - 
     24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 
     40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 
     24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 34*d^2*n5 - 
     32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
     112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
     128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
     16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-64 + 56*d - 12*d^2 + 24*n1 - 8*d*n1 - 12*n2 + 6*d*n2 + 4*n1*n2 - 
      56*n3 + 22*d*n3 + 4*n1*n3 - 8*n2*n3 - 8*n3^2 - 64*n4 + 26*d*n4 + 
      4*n1*n4 - 8*n2*n4 - 20*n3*n4 - 12*n4^2 - 16*n5 + 8*d*n5 + 8*n1*n5 - 
      12*n3*n5 - 12*n4*n5)*j[p4, n1, n2, n3, -1 + n4, 1 + n5, 1, 0, 2, 0, 1, 
      1, 0, 0, 1])/(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 160*d*n1 - 
     34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 208*d*n2 - 
     44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 
     352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 
     176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 
     16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 74*d^2*n4 - 
     184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 76*d*n2*n4 - 
     24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 
     40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 
     24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 34*d^2*n5 - 
     32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
     112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
     128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
     16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-28 + 24*d - 5*d^2 + 4*n1 - 2*d*n1 - 22*n3 + 9*d*n3 + 2*n1*n3 - 4*n3^2 - 
      22*n4 + 9*d*n4 + 2*n1*n4 - 8*n3*n4 - 4*n4^2 - 8*n5 + 4*d*n5 - 4*n3*n5 - 
      4*n4*n5)*j[p4, n1, n2, n3, -1 + n4, 1 + n5, 2, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 12*n2 - 
      6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((28 - 24*d + 5*d^2 - 4*n1 + 2*d*n1 + 22*n3 - 
      9*d*n3 - 2*n1*n3 + 4*n3^2 + 22*n4 - 9*d*n4 - 2*n1*n4 + 8*n3*n4 + 
      4*n4^2 + 8*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)*j[p4, n1, n2, n3, -1 + n4, 
      1 + n5, 2, 0, 1, 0, 0, 1, 0, 1, 1])/((-3 + d - n4 - n5)*
     (36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 12*n2 - 6*d*n2 - 4*n1*n2 + 
      20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 12*d*n4 + 8*n1*n4 + 
      8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((-28 + 24*d - 5*d^2 + 4*n1 - 2*d*n1 - 22*n3 + 9*d*n3 + 2*n1*n3 - 4*n3^2 - 
      22*n4 + 9*d*n4 + 2*n1*n4 - 8*n3*n4 - 4*n4^2 - 8*n5 + 4*d*n5 - 4*n3*n5 - 
      4*n4*n5)*j[p4, n1, n2, n3, -1 + n4, 1 + n5, 2, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 12*n2 - 
      6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((-28 + 24*d - 5*d^2 + 4*n1 - 2*d*n1 - 22*n3 + 
      9*d*n3 + 2*n1*n3 - 4*n3^2 - 22*n4 + 9*d*n4 + 2*n1*n4 - 8*n3*n4 - 
      4*n4^2 - 8*n5 + 4*d*n5 - 4*n3*n5 - 4*n4*n5)*j[p4, n1, n2, n3, -1 + n4, 
      1 + n5, 2, 0, 1, 0, 1, 1, 0, 1, 0])/((-3 + d - n4 - n5)*
     (36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 12*n2 - 6*d*n2 - 4*n1*n2 + 
      20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 12*d*n4 + 8*n1*n4 + 
      8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((28 - 24*d + 5*d^2 - 4*n1 + 2*d*n1 + 22*n3 - 9*d*n3 - 2*n1*n3 + 4*n3^2 + 
      22*n4 - 9*d*n4 - 2*n1*n4 + 8*n3*n4 + 4*n4^2 + 36*n5 - 28*d*n5 + 
      5*d^2*n5 - 4*n1*n5 + 2*d*n1*n5 + 26*n3*n5 - 9*d*n3*n5 - 2*n1*n3*n5 + 
      4*n3^2*n5 + 26*n4*n5 - 9*d*n4*n5 - 2*n1*n4*n5 + 8*n3*n4*n5 + 
      4*n4^2*n5 + 8*n5^2 - 4*d*n5^2 + 4*n3*n5^2 + 4*n4*n5^2)*
     j[p4, n1, n2, n3, -1 + n4, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 12*n2 - 
      6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((-28 + 24*d - 5*d^2 + 4*n1 - 2*d*n1 - 22*n3 + 
      9*d*n3 + 2*n1*n3 - 4*n3^2 - 22*n4 + 9*d*n4 + 2*n1*n4 - 8*n3*n4 - 
      4*n4^2 - 36*n5 + 28*d*n5 - 5*d^2*n5 + 4*n1*n5 - 2*d*n1*n5 - 26*n3*n5 + 
      9*d*n3*n5 + 2*n1*n3*n5 - 4*n3^2*n5 - 26*n4*n5 + 9*d*n4*n5 + 
      2*n1*n4*n5 - 8*n3*n4*n5 - 4*n4^2*n5 - 8*n5^2 + 4*d*n5^2 - 4*n3*n5^2 - 
      4*n4*n5^2)*j[p4, n1, n2, n3, -1 + n4, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 
      0])/((-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 
      12*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + j[p4, n1, n2, n3, n4, n5, 0, 0, 1, 0, 1, 1, 0, 1, 
     2]/(-3 + d - n4 - n5) + j[p4, n1, n2, n3, n4, n5, 1, 0, 0, 0, 1, 1, 0, 
     1, 2]/(-3 + d - n4 - n5) + j[p4, n1, n2, n3, n4, n5, 1, 0, 1, 0, 1, 1, 
     0, 0, 2]/(-3 + d - n4 - n5) + j[p4, n1, n2, n3, n4, n5, 2, 0, 0, 0, 1, 
     1, 0, 1, 1]/(2*(-3 + d - n4 - n5)) + 
   j[p4, n1, n2, n3, n4, n5, 2, 0, 1, 0, 0, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5)) + j[p4, n1, n2, n3, n4, n5, 2, 0, 1, 0, 1, 1, 0, 
     0, 1]/(2*(-3 + d - n4 - n5)) + j[p4, n1, n2, n3, n4, n5, 2, 0, 1, 0, 1, 
     1, 0, 1, 0]/(2*(-3 + d - n4 - n5)) + 
   ((-64 + 56*d - 12*d^2 + 24*n1 - 8*d*n1 - 12*n2 + 6*d*n2 + 4*n1*n2 - 
      56*n3 + 22*d*n3 + 4*n1*n3 - 8*n2*n3 - 8*n3^2 - 64*n4 + 26*d*n4 + 
      4*n1*n4 - 8*n2*n4 - 20*n3*n4 - 12*n4^2 - 16*n5 + 8*d*n5 + 8*n1*n5 - 
      12*n3*n5 - 12*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 0, -1, 1, 0, 2, 1, 
      0, 1, 1])/(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 160*d*n1 - 
     34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 208*d*n2 - 
     44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 
     352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 
     176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 
     16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 74*d^2*n4 - 
     184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 76*d*n2*n4 - 
     24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 
     40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 
     24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 34*d^2*n5 - 
     32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
     112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
     128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
     16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((648 - 796*d + 322*d^2 - 43*d^3 - 32*n1 + 12*d*n1 - 32*n1^2 + 12*d*n1^2 + 
      168*n2 - 146*d*n2 + 31*d^2*n2 - 36*n1*n2 + 12*d*n1*n2 - 4*n1^2*n2 + 
      12*n2^2 - 6*d*n2^2 - 4*n1*n2^2 + 652*n3 - 512*d*n3 + 100*d^2*n3 + 
      24*n1*n3 - 12*d*n1*n3 - 8*n1^2*n3 + 144*n2*n3 - 58*d*n2*n3 - 
      4*n1*n2*n3 + 8*n2^2*n3 + 188*n3^2 - 72*d*n3^2 + 8*n1*n3^2 + 
      24*n2*n3^2 + 16*n3^3 + 620*n4 - 484*d*n4 + 94*d^2*n4 + 56*n1*n4 - 
      24*d*n1*n4 - 8*n1^2*n4 + 140*n2*n4 - 56*d*n2*n4 + 8*n2^2*n4 + 
      344*n3*n4 - 132*d*n3*n4 + 24*n1*n3*n4 + 44*n2*n3*n4 + 44*n3^2*n4 + 
      148*n4^2 - 56*d*n4^2 + 16*n1*n4^2 + 20*n2*n4^2 + 36*n3*n4^2 + 8*n4^3 + 
      232*n5 - 200*d*n5 + 42*d^2*n5 - 8*n1*n5 - 8*n1^2*n5 + 32*n2*n5 - 
      16*d*n2*n5 - 8*n1*n2*n5 + 180*n3*n5 - 72*d*n3*n5 + 8*n1*n3*n5 + 
      20*n2*n3*n5 + 28*n3^2*n5 + 164*n4*n5 - 64*d*n4*n5 + 16*n1*n4*n5 + 
      20*n2*n4*n5 + 44*n3*n4*n5 + 16*n4^2*n5 + 16*n5^2 - 8*d*n5^2 + 
      8*n3*n5^2 + 8*n4*n5^2)*j[p4, n1, n2, n3, n4, 1 + n5, 0, 0, 1, -1, 1, 1, 
      0, 1, 2])/((-3 + d - n4 - n5)*(-504 + 628*d - 258*d^2 + 35*d^3 - 
      184*n1 + 160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
      208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
      74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
      34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((-264 + 332*d - 138*d^2 + 19*d^3 - 112*n1 + 84*d*n1 - 
      16*d^2*n1 + 32*n1^2 - 12*d*n1^2 - 288*n2 + 318*d*n2 - 111*d^2*n2 + 
      12*d^3*n2 + 84*n1*n2 - 52*d*n1*n2 + 8*d^2*n1*n2 + 4*n1^2*n2 - 48*n2^2 + 
      36*d*n2^2 - 6*d^2*n2^2 + 16*n1*n2^2 - 4*d*n1*n2^2 - 316*n3 + 268*d*n3 - 
      56*d^2*n3 - 48*n1*n3 + 20*d*n1*n3 + 8*n1^2*n3 - 264*n2*n3 + 
      164*d*n2*n3 - 22*d^2*n2*n3 + 16*n1*n2*n3 - 4*d*n1*n2*n3 - 32*n2^2*n3 + 
      8*d*n2^2*n3 - 140*n3^2 + 56*d*n3^2 - 8*n1*n3^2 - 48*n2*n3^2 + 
      8*d*n2*n3^2 - 16*n3^3 - 108*n4 + 88*d*n4 - 18*d^2*n4 - 128*n1*n4 + 
      48*d*n1*n4 + 8*n1^2*n4 - 324*n2*n4 + 226*d*n2*n4 - 38*d^2*n2*n4 + 
      28*n1*n2*n4 - 12*d*n1*n2*n4 - 44*n2^2*n4 + 14*d*n2^2*n4 + 
      4*n1*n2^2*n4 - 112*n3*n4 + 48*d*n3*n4 - 32*n1*n3*n4 - 144*n2*n3*n4 + 
      42*d*n2*n3*n4 + 4*n1*n2*n3*n4 - 8*n2^2*n3*n4 - 28*n3^2*n4 - 
      8*n2*n3^2*n4 + 52*n4^2 - 20*d*n4^2 - 24*n1*n4^2 - 104*n2*n4^2 + 
      38*d*n2*n4^2 + 4*n1*n2*n4^2 - 8*n2^2*n4^2 + 4*n3*n4^2 - 20*n2*n3*n4^2 + 
      16*n4^3 - 12*n2*n4^3 - 512*n5 + 636*d*n5 - 260*d^2*n5 + 35*d^3*n5 - 
      272*n1*n5 + 192*d*n1*n5 - 34*d^2*n1*n5 + 48*n1^2*n5 - 12*d*n1^2*n5 + 
      8*n1^3*n5 - 360*n2*n5 + 308*d*n2*n5 - 64*d^2*n2*n5 + 64*n1*n2*n5 - 
      16*d*n1*n2*n5 + 16*n1^2*n2*n5 - 36*n2^2*n5 + 18*d*n2^2*n5 + 
      12*n1*n2^2*n5 - 348*n3*n5 + 280*d*n3*n5 - 54*d^2*n3*n5 - 184*n1*n3*n5 + 
      64*d*n1*n3*n5 - 8*n1^2*n3*n5 - 272*n2*n3*n5 + 102*d*n2*n3*n5 - 
      20*n1*n2*n3*n5 - 24*n2^2*n3*n5 - 52*n3^2*n5 + 16*d*n3^2*n5 - 
      16*n1*n3^2*n5 - 24*n2*n3^2*n5 - 396*n4*n5 + 344*d*n4*n5 - 
      74*d^2*n4*n5 - 224*n1*n4*n5 + 72*d*n1*n4*n5 - 8*n1^2*n4*n5 - 
      312*n2*n4*n5 + 122*d*n2*n4*n5 - 12*n1*n2*n4*n5 - 24*n2^2*n4*n5 - 
      132*n3*n4*n5 + 60*d*n3*n4*n5 - 40*n1*n3*n4*n5 - 72*n2*n3*n4*n5 - 
      8*n3^2*n4*n5 - 80*n4^2*n5 + 44*d*n4^2*n5 - 24*n1*n4^2*n5 - 
      48*n2*n4^2*n5 - 16*n3*n4^2*n5 - 8*n4^3*n5 - 168*n5^2 + 152*d*n5^2 - 
      34*d^2*n5^2 - 48*n1*n5^2 + 16*d*n1*n5^2 + 8*n1^2*n5^2 - 56*n2*n5^2 + 
      28*d*n2*n5^2 + 16*n1*n2*n5^2 - 96*n3*n5^2 + 44*d*n3*n5^2 - 
      24*n1*n3*n5^2 - 36*n2*n3*n5^2 - 8*n3^2*n5^2 - 112*n4*n5^2 + 
      52*d*n4*n5^2 - 24*n1*n4*n5^2 - 36*n2*n4*n5^2 - 24*n3*n4*n5^2 - 
      16*n4^2*n5^2 - 16*n5^3 + 8*d*n5^3 - 8*n3*n5^3 - 8*n4*n5^3)*
     j[p4, n1, n2, n3, n4, 1 + n5, 0, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 
      160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
      208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
      74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
      34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((-648 + 796*d - 322*d^2 + 43*d^3 + 32*n1 - 12*d*n1 + 
      32*n1^2 - 12*d*n1^2 - 168*n2 + 146*d*n2 - 31*d^2*n2 + 36*n1*n2 - 
      12*d*n1*n2 + 4*n1^2*n2 - 12*n2^2 + 6*d*n2^2 + 4*n1*n2^2 - 652*n3 + 
      512*d*n3 - 100*d^2*n3 - 24*n1*n3 + 12*d*n1*n3 + 8*n1^2*n3 - 144*n2*n3 + 
      58*d*n2*n3 + 4*n1*n2*n3 - 8*n2^2*n3 - 188*n3^2 + 72*d*n3^2 - 
      8*n1*n3^2 - 24*n2*n3^2 - 16*n3^3 - 620*n4 + 484*d*n4 - 94*d^2*n4 - 
      56*n1*n4 + 24*d*n1*n4 + 8*n1^2*n4 - 140*n2*n4 + 56*d*n2*n4 - 
      8*n2^2*n4 - 344*n3*n4 + 132*d*n3*n4 - 24*n1*n3*n4 - 44*n2*n3*n4 - 
      44*n3^2*n4 - 148*n4^2 + 56*d*n4^2 - 16*n1*n4^2 - 20*n2*n4^2 - 
      36*n3*n4^2 - 8*n4^3 - 232*n5 + 200*d*n5 - 42*d^2*n5 + 8*n1*n5 + 
      8*n1^2*n5 - 32*n2*n5 + 16*d*n2*n5 + 8*n1*n2*n5 - 180*n3*n5 + 
      72*d*n3*n5 - 8*n1*n3*n5 - 20*n2*n3*n5 - 28*n3^2*n5 - 164*n4*n5 + 
      64*d*n4*n5 - 16*n1*n4*n5 - 20*n2*n4*n5 - 44*n3*n4*n5 - 16*n4^2*n5 - 
      16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)*j[p4, n1, n2, n3, n4, 
      1 + n5, 0, 0, 1, 0, 1, 1, 0, 1, 2])/((-3 + d - n4 - n5)*
     (-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 160*d*n1 - 34*d^2*n1 + 
      40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 208*d*n2 - 44*d^2*n2 + 
      16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 352*n3 + 
      276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 176*n2*n3 + 
      68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
      16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 74*d^2*n4 - 184*n1*n4 + 
      72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
      16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
      8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 
      16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 34*d^2*n5 - 32*n1*n5 + 
      16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
      112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
      128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
      16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((64 - 56*d + 12*d^2 - 24*n1 + 8*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 56*n3 - 
      22*d*n3 - 4*n1*n3 + 8*n2*n3 + 8*n3^2 + 64*n4 - 26*d*n4 - 4*n1*n4 + 
      8*n2*n4 + 20*n3*n4 + 12*n4^2 + 16*n5 - 8*d*n5 - 8*n1*n5 + 12*n3*n5 + 
      12*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 0, 0, 1, 0, 1, 2, -1, 1, 1])/
    (-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 160*d*n1 - 34*d^2*n1 + 
     40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 208*d*n2 - 44*d^2*n2 + 
     16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 352*n3 + 
     276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 176*n2*n3 + 
     68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
     16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 74*d^2*n4 - 184*n1*n4 + 
     72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
     16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
     8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 
     16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 34*d^2*n5 - 32*n1*n5 + 
     16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
     112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
     128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
     16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-64 + 56*d - 12*d^2 + 24*n1 - 8*d*n1 - 12*n2 + 6*d*n2 + 4*n1*n2 - 
      56*n3 + 22*d*n3 + 4*n1*n3 - 8*n2*n3 - 8*n3^2 - 64*n4 + 26*d*n4 + 
      4*n1*n4 - 8*n2*n4 - 20*n3*n4 - 12*n4^2 - 16*n5 + 8*d*n5 + 8*n1*n5 - 
      12*n3*n5 - 12*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 0, 0, 1, 0, 1, 2, 0, 
      1, 1])/(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 160*d*n1 - 
     34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 208*d*n2 - 
     44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 
     352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 
     176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 
     16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 74*d^2*n4 - 
     184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 76*d*n2*n4 - 
     24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 
     40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 
     24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 34*d^2*n5 - 
     32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
     112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
     128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
     16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((64 - 56*d + 12*d^2 - 24*n1 + 8*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 56*n3 - 
      22*d*n3 - 4*n1*n3 + 8*n2*n3 + 8*n3^2 + 64*n4 - 26*d*n4 - 4*n1*n4 + 
      8*n2*n4 + 20*n3*n4 + 12*n4^2 + 16*n5 - 8*d*n5 - 8*n1*n5 + 12*n3*n5 + 
      12*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 0, 0, 1, 0, 2, 1, -1, 1, 1])/
    (-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 160*d*n1 - 34*d^2*n1 + 
     40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 208*d*n2 - 44*d^2*n2 + 
     16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 352*n3 + 
     276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 176*n2*n3 + 
     68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
     16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 74*d^2*n4 - 184*n1*n4 + 
     72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
     16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
     8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 
     16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 34*d^2*n5 - 32*n1*n5 + 
     16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
     112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
     128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
     16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-64 + 56*d - 12*d^2 + 24*n1 - 8*d*n1 - 12*n2 + 6*d*n2 + 4*n1*n2 - 
      56*n3 + 22*d*n3 + 4*n1*n3 - 8*n2*n3 - 8*n3^2 - 64*n4 + 26*d*n4 + 
      4*n1*n4 - 8*n2*n4 - 20*n3*n4 - 12*n4^2 - 16*n5 + 8*d*n5 + 8*n1*n5 - 
      12*n3*n5 - 12*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 0, 0, 1, 0, 2, 1, 0, 
      1, 1])/(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 160*d*n1 - 
     34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 208*d*n2 - 
     44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 
     352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 
     176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 
     16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 74*d^2*n4 - 
     184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 76*d*n2*n4 - 
     24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 
     40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 
     24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 34*d^2*n5 - 
     32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
     112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
     128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
     16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((64 - 56*d + 12*d^2 - 24*n1 + 8*d*n1 + 12*n2 - 6*d*n2 - 4*n1*n2 + 56*n3 - 
      22*d*n3 - 4*n1*n3 + 8*n2*n3 + 8*n3^2 + 64*n4 - 26*d*n4 - 4*n1*n4 + 
      8*n2*n4 + 20*n3*n4 + 12*n4^2 + 16*n5 - 8*d*n5 - 8*n1*n5 + 12*n3*n5 + 
      12*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 0, 0, 2, 0, 1, 1, -1, 1, 1])/
    (-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 160*d*n1 - 34*d^2*n1 + 
     40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 208*d*n2 - 44*d^2*n2 + 
     16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 352*n3 + 
     276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 176*n2*n3 + 
     68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
     16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 74*d^2*n4 - 184*n1*n4 + 
     72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
     16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
     8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 
     16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 34*d^2*n5 - 32*n1*n5 + 
     16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
     112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
     128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
     16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-128 + 112*d - 24*d^2 + 48*n1 - 16*d*n1 - 24*n2 + 12*d*n2 + 8*n1*n2 - 
      112*n3 + 44*d*n3 + 8*n1*n3 - 16*n2*n3 - 16*n3^2 - 128*n4 + 52*d*n4 + 
      8*n1*n4 - 16*n2*n4 - 40*n3*n4 - 24*n4^2 - 32*n5 + 16*d*n5 + 16*n1*n5 - 
      24*n3*n5 - 24*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 0, 0, 2, 0, 1, 1, 0, 
      1, 1])/(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 160*d*n1 - 
     34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 208*d*n2 - 
     44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 
     352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 
     176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 
     16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 74*d^2*n4 - 
     184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 76*d*n2*n4 - 
     24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 
     40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 
     24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 34*d^2*n5 - 
     32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
     112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
     128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
     16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-64 + 56*d - 12*d^2 + 24*n1 - 8*d*n1 - 12*n2 + 6*d*n2 + 4*n1*n2 - 
      56*n3 + 22*d*n3 + 4*n1*n3 - 8*n2*n3 - 8*n3^2 - 64*n4 + 26*d*n4 + 
      4*n1*n4 - 8*n2*n4 - 20*n3*n4 - 12*n4^2 - 16*n5 + 8*d*n5 + 8*n1*n5 - 
      12*n3*n5 - 12*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 1, -1, 0, 0, 1, 2, 
      0, 1, 1])/((-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 
      4*n1^2 + 12*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 
      8*n2*n3 + 28*n4 - 12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 
      8*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((-28 + 24*d - 5*d^2 + 4*n1 - 2*d*n1 - 22*n3 + 9*d*n3 + 2*n1*n3 - 4*n3^2 - 
      22*n4 + 9*d*n4 + 2*n1*n4 - 8*n3*n4 - 4*n4^2 - 8*n5 + 4*d*n5 - 4*n3*n5 - 
      4*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 1, -1, 0, 0, 2, 1, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 12*n2 - 
      6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + j[p4, n1, n2, n3, n4, 1 + n5, 1, -1, 1, 0, 1, 1, 
     0, 0, 2]/(-3 + d - n4 - n5) + 
   ((-28 + 24*d - 5*d^2 + 4*n1 - 2*d*n1 - 22*n3 + 9*d*n3 + 2*n1*n3 - 4*n3^2 - 
      22*n4 + 9*d*n4 + 2*n1*n4 - 8*n3*n4 - 4*n4^2 - 8*n5 + 4*d*n5 - 4*n3*n5 - 
      4*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 1, -1, 1, 0, 2, 0, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 12*n2 - 
      6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((-28 + 24*d - 5*d^2 + 4*n1 - 2*d*n1 - 22*n3 + 
      9*d*n3 + 2*n1*n3 - 4*n3^2 - 22*n4 + 9*d*n4 + 2*n1*n4 - 8*n3*n4 - 
      4*n4^2 - 8*n5 + 4*d*n5 - 4*n3*n5 - 4*n4*n5)*j[p4, n1, n2, n3, n4, 
      1 + n5, 1, -1, 1, 0, 2, 1, 0, 0, 1])/((-3 + d - n4 - n5)*
     (36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 12*n2 - 6*d*n2 - 4*n1*n2 + 
      20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 12*d*n4 + 8*n1*n4 + 
      8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((-32 + 28*d - 6*d^2 + 12*n1 - 4*d*n1 - 6*n2 + 3*d*n2 + 2*n1*n2 - 28*n3 + 
      11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 32*n4 + 13*d*n4 + 2*n1*n4 - 
      4*n2*n4 - 10*n3*n4 - 6*n4^2 - 8*n5 + 4*d*n5 + 4*n1*n5 - 6*n3*n5 - 
      6*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 1, -1, 2, 0, 1, 0, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 12*n2 - 
      6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((-32 + 28*d - 6*d^2 + 12*n1 - 4*d*n1 - 6*n2 + 
      3*d*n2 + 2*n1*n2 - 28*n3 + 11*d*n3 + 2*n1*n3 - 4*n2*n3 - 4*n3^2 - 
      32*n4 + 13*d*n4 + 2*n1*n4 - 4*n2*n4 - 10*n3*n4 - 6*n4^2 - 8*n5 + 
      4*d*n5 + 4*n1*n5 - 6*n3*n5 - 6*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 
      -1, 2, 0, 1, 1, 0, 0, 1])/((-3 + d - n4 - n5)*
     (36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 12*n2 - 6*d*n2 - 4*n1*n2 + 
      20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 12*d*n4 + 8*n1*n4 + 
      8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((648 - 796*d + 322*d^2 - 43*d^3 - 32*n1 + 12*d*n1 - 32*n1^2 + 12*d*n1^2 + 
      168*n2 - 146*d*n2 + 31*d^2*n2 - 36*n1*n2 + 12*d*n1*n2 - 4*n1^2*n2 + 
      12*n2^2 - 6*d*n2^2 - 4*n1*n2^2 + 652*n3 - 512*d*n3 + 100*d^2*n3 + 
      24*n1*n3 - 12*d*n1*n3 - 8*n1^2*n3 + 144*n2*n3 - 58*d*n2*n3 - 
      4*n1*n2*n3 + 8*n2^2*n3 + 188*n3^2 - 72*d*n3^2 + 8*n1*n3^2 + 
      24*n2*n3^2 + 16*n3^3 + 620*n4 - 484*d*n4 + 94*d^2*n4 + 56*n1*n4 - 
      24*d*n1*n4 - 8*n1^2*n4 + 140*n2*n4 - 56*d*n2*n4 + 8*n2^2*n4 + 
      344*n3*n4 - 132*d*n3*n4 + 24*n1*n3*n4 + 44*n2*n3*n4 + 44*n3^2*n4 + 
      148*n4^2 - 56*d*n4^2 + 16*n1*n4^2 + 20*n2*n4^2 + 36*n3*n4^2 + 8*n4^3 + 
      232*n5 - 200*d*n5 + 42*d^2*n5 - 8*n1*n5 - 8*n1^2*n5 + 32*n2*n5 - 
      16*d*n2*n5 - 8*n1*n2*n5 + 180*n3*n5 - 72*d*n3*n5 + 8*n1*n3*n5 + 
      20*n2*n3*n5 + 28*n3^2*n5 + 164*n4*n5 - 64*d*n4*n5 + 16*n1*n4*n5 + 
      20*n2*n4*n5 + 44*n3*n4*n5 + 16*n4^2*n5 + 16*n5^2 - 8*d*n5^2 + 
      8*n3*n5^2 + 8*n4*n5^2)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 0, -1, 1, 1, 
      0, 1, 2])/((-3 + d - n4 - n5)*(-504 + 628*d - 258*d^2 + 35*d^3 - 
      184*n1 + 160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
      208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
      74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
      34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((-64 + 56*d - 12*d^2 + 24*n1 - 8*d*n1 - 12*n2 + 6*d*n2 + 
      4*n1*n2 - 56*n3 + 22*d*n3 + 4*n1*n3 - 8*n2*n3 - 8*n3^2 - 64*n4 + 
      26*d*n4 + 4*n1*n4 - 8*n2*n4 - 20*n3*n4 - 12*n4^2 - 16*n5 + 8*d*n5 + 
      8*n1*n5 - 12*n3*n5 - 12*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 0, 
      -1, 2, 1, 0, 1, 1])/(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 
     160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
     208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
     8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
     8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
     40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
     74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
     76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
     40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
     24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
     34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
     8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
     8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
     24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-1920 + 2384*d - 976*d^2 + 132*d^3 + 1120*n1 - 1120*d*n1 + 396*d^2*n1 - 
      50*d^3*n1 + 144*n1^2 - 48*d*n1^2 - 16*n1^3 + 8*d*n1^3 - 4096*n2 + 
      4748*d*n2 - 1788*d^2*n2 + 219*d^3*n2 + 472*n1*n2 - 208*d*n1*n2 + 
      18*d^2*n1*n2 + 128*n1^2*n2 - 36*d*n1^2*n2 + 8*n1^3*n2 - 904*n2^2 + 
      752*d*n2^2 - 150*d^2*n2^2 + 176*n1*n2^2 - 48*d*n1*n2^2 + 24*n1^2*n2^2 - 
      48*n2^3 + 24*d*n2^3 + 16*n1*n2^3 + 3192*n3 - 4848*d*n3 + 2300*d^2*n3 - 
      349*d^3*n3 + 648*n1*n3 - 672*d*n1*n3 + 164*d^2*n1*n3 - 208*n1^2*n3 + 
      76*d*n1^2*n3 - 32*n1^3*n3 - 2096*n2*n3 + 1224*d*n2*n3 - 160*d^2*n2*n3 - 
      360*n1*n2*n3 + 116*d*n1*n2*n3 - 56*n1^2*n2*n3 - 576*n2^2*n3 + 
      192*d*n2^2*n3 - 48*n1*n2^2*n3 - 32*n2^3*n3 + 4096*n3^2 - 3388*d*n3^2 + 
      694*d^2*n3^2 + 704*n1*n3^2 - 292*d*n1*n3^2 + 440*n2*n3^2 - 
      216*d*n2*n3^2 + 32*n1*n2*n3^2 + 968*n3^3 - 384*d*n3^3 + 96*n1*n3^3 + 
      96*n2*n3^3 + 64*n3^4 - 3216*n4 + 3012*d*n4 - 874*d^2*n4 + 74*d^3*n4 + 
      656*n1*n4 - 568*d*n1*n4 + 126*d^2*n1*n4 + 56*n1^2*n4 - 16*d*n1^2*n4 - 
      8*n1^3*n4 - 4288*n2*n4 + 3112*d*n2*n4 - 556*d^2*n2*n4 - 56*n1*n2*n4 + 
      28*d*n1*n2*n4 + 8*n1^2*n2*n4 - 752*n2^2*n4 + 280*d*n2^2*n4 - 
      32*n2^3*n4 + 3248*n3*n4 - 3008*d*n3*n4 + 672*d^2*n3*n4 + 880*n1*n3*n4 - 
      392*d*n1*n3*n4 + 16*n1^2*n3*n4 - 672*n2*n3*n4 + 160*d*n2*n3*n4 - 
      112*n2^2*n3*n4 + 2144*n3^2*n4 - 868*d*n3^2*n4 + 232*n1*n3^2*n4 + 
      152*n2*n3^2*n4 + 232*n3^3*n4 - 1728*n4^2 + 1148*d*n4^2 - 186*d^2*n4^2 + 
      192*n1*n4^2 - 92*d*n1*n4^2 + 16*n1^2*n4^2 - 1256*n2*n4^2 + 
      448*d*n2*n4^2 - 16*n1*n2*n4^2 - 112*n2^2*n4^2 + 784*n3*n4^2 - 
      348*d*n3*n4^2 + 152*n1*n3*n4^2 - 64*n2*n3*n4^2 + 248*n3^2*n4^2 - 
      424*n4^3 + 152*d*n4^3 + 16*n1*n4^3 - 120*n2*n4^3 + 40*n3*n4^3 - 
      40*n4^4 - 608*n5 + 528*d*n5 - 112*d^2*n5 + 528*n1*n5 - 344*d*n1*n5 + 
      60*d^2*n1*n5 + 64*n1^2*n5 - 8*d*n1^2*n5 - 1552*n2*n5 + 1292*d*n2*n5 - 
      258*d^2*n2*n5 + 248*n1*n2*n5 - 56*d*n1*n2*n5 + 24*n1^2*n2*n5 - 
      184*n2^2*n5 + 92*d*n2^2*n5 + 40*n1*n2^2*n5 + 1584*n3*n5 - 
      1632*d*n3*n5 + 390*d^2*n3*n5 - 8*n1*n3*n5 - 44*d*n1*n3*n5 - 
      48*n1^2*n3*n5 - 840*n2*n3*n5 + 256*d*n2*n3*n5 - 96*n1*n2*n3*n5 - 
      112*n2^2*n3*n5 + 1520*n3^2*n5 - 624*d*n3^2*n5 + 112*n1*n3^2*n5 + 
      72*n2*n3^2*n5 + 184*n3^3*n5 - 1080*n4*n5 + 680*d*n4*n5 - 
      100*d^2*n4*n5 + 264*n1*n4*n5 - 116*d*n1*n4*n5 + 8*n1^2*n4*n5 - 
      1296*n2*n4*n5 + 484*d*n2*n4*n5 + 8*n1*n2*n4*n5 - 112*n2^2*n4*n5 + 
      1184*n3*n4*n5 - 528*d*n3*n4*n5 + 128*n1*n3*n4*n5 - 136*n2*n3*n4*n5 + 
      392*n3^2*n4*n5 - 512*n4^2*n5 + 184*d*n4^2*n5 + 48*n1*n4^2*n5 - 
      208*n2*n4^2*n5 + 128*n3*n4^2*n5 - 80*n4^3*n5 - 32*n5^2 + 16*d*n5^2 + 
      48*n1*n5^2 - 16*d*n1*n5^2 - 144*n2*n5^2 + 72*d*n2*n5^2 + 
      32*n1*n2*n5^2 + 184*n3*n5^2 - 104*d*n3*n5^2 - 32*n1*n3*n5^2 - 
      88*n2*n3*n5^2 + 128*n3^2*n5^2 - 88*n4*n5^2 + 32*d*n4*n5^2 + 
      32*n1*n4*n5^2 - 88*n2*n4*n5^2 + 88*n3*n4*n5^2 - 40*n4^2*n5^2)*
     j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)*(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 
      160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
      208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
      74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
      34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((-648 + 796*d - 322*d^2 + 43*d^3 + 32*n1 - 12*d*n1 + 
      32*n1^2 - 12*d*n1^2 - 168*n2 + 146*d*n2 - 31*d^2*n2 + 36*n1*n2 - 
      12*d*n1*n2 + 4*n1^2*n2 - 12*n2^2 + 6*d*n2^2 + 4*n1*n2^2 - 652*n3 + 
      512*d*n3 - 100*d^2*n3 - 24*n1*n3 + 12*d*n1*n3 + 8*n1^2*n3 - 144*n2*n3 + 
      58*d*n2*n3 + 4*n1*n2*n3 - 8*n2^2*n3 - 188*n3^2 + 72*d*n3^2 - 
      8*n1*n3^2 - 24*n2*n3^2 - 16*n3^3 - 620*n4 + 484*d*n4 - 94*d^2*n4 - 
      56*n1*n4 + 24*d*n1*n4 + 8*n1^2*n4 - 140*n2*n4 + 56*d*n2*n4 - 
      8*n2^2*n4 - 344*n3*n4 + 132*d*n3*n4 - 24*n1*n3*n4 - 44*n2*n3*n4 - 
      44*n3^2*n4 - 148*n4^2 + 56*d*n4^2 - 16*n1*n4^2 - 20*n2*n4^2 - 
      36*n3*n4^2 - 8*n4^3 - 232*n5 + 200*d*n5 - 42*d^2*n5 + 8*n1*n5 + 
      8*n1^2*n5 - 32*n2*n5 + 16*d*n2*n5 + 8*n1*n2*n5 - 180*n3*n5 + 
      72*d*n3*n5 - 8*n1*n3*n5 - 20*n2*n3*n5 - 28*n3^2*n5 - 164*n4*n5 + 
      64*d*n4*n5 - 16*n1*n4*n5 - 20*n2*n4*n5 - 44*n3*n4*n5 - 16*n4^2*n5 - 
      16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)*j[p4, n1, n2, n3, n4, 
      1 + n5, 1, 0, 0, 0, 1, 1, 0, 1, 2])/((-3 + d - n4 - n5)*
     (-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 160*d*n1 - 34*d^2*n1 + 
      40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 208*d*n2 - 44*d^2*n2 + 
      16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 352*n3 + 
      276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 176*n2*n3 + 
      68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
      16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 74*d^2*n4 - 184*n1*n4 + 
      72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
      16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
      8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 
      16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 34*d^2*n5 - 32*n1*n5 + 
      16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
      112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
      128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
      16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-648 + 796*d - 322*d^2 + 43*d^3 + 32*n1 - 12*d*n1 + 32*n1^2 - 
      12*d*n1^2 - 168*n2 + 146*d*n2 - 31*d^2*n2 + 36*n1*n2 - 12*d*n1*n2 + 
      4*n1^2*n2 - 12*n2^2 + 6*d*n2^2 + 4*n1*n2^2 - 652*n3 + 512*d*n3 - 
      100*d^2*n3 - 24*n1*n3 + 12*d*n1*n3 + 8*n1^2*n3 - 144*n2*n3 + 
      58*d*n2*n3 + 4*n1*n2*n3 - 8*n2^2*n3 - 188*n3^2 + 72*d*n3^2 - 
      8*n1*n3^2 - 24*n2*n3^2 - 16*n3^3 - 620*n4 + 484*d*n4 - 94*d^2*n4 - 
      56*n1*n4 + 24*d*n1*n4 + 8*n1^2*n4 - 140*n2*n4 + 56*d*n2*n4 - 
      8*n2^2*n4 - 344*n3*n4 + 132*d*n3*n4 - 24*n1*n3*n4 - 44*n2*n3*n4 - 
      44*n3^2*n4 - 148*n4^2 + 56*d*n4^2 - 16*n1*n4^2 - 20*n2*n4^2 - 
      36*n3*n4^2 - 8*n4^3 - 232*n5 + 200*d*n5 - 42*d^2*n5 + 8*n1*n5 + 
      8*n1^2*n5 - 32*n2*n5 + 16*d*n2*n5 + 8*n1*n2*n5 - 180*n3*n5 + 
      72*d*n3*n5 - 8*n1*n3*n5 - 20*n2*n3*n5 - 28*n3^2*n5 - 164*n4*n5 + 
      64*d*n4*n5 - 16*n1*n4*n5 - 20*n2*n4*n5 - 44*n3*n4*n5 - 16*n4^2*n5 - 
      16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)*j[p4, n1, n2, n3, n4, 
      1 + n5, 1, 0, 0, 0, 1, 1, 0, 2, 1])/((-3 + d - n4 - n5)*
     (-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 160*d*n1 - 34*d^2*n1 + 
      40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 208*d*n2 - 44*d^2*n2 + 
      16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 352*n3 + 
      276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 176*n2*n3 + 
      68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
      16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 74*d^2*n4 - 184*n1*n4 + 
      72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
      16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
      8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 
      16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 34*d^2*n5 - 32*n1*n5 + 
      16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
      112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
      128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
      16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-1672 + 2044*d - 822*d^2 + 109*d^3 - 40*n1 + 64*d*n1 - 18*d^2*n1 + 
      56*n1^2 - 20*d*n1^2 + 8*n1^3 - 424*n2 + 364*d*n2 - 76*d^2*n2 + 
      56*n1*n2 - 16*d*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 
      1416*n3 + 1088*d*n3 - 208*d^2*n3 - 160*n1*n3 + 64*d*n1*n3 - 312*n2*n3 + 
      120*d*n2*n3 - 16*n1*n2*n3 - 16*n2^2*n3 - 288*n3^2 + 108*d*n3^2 - 
      24*n1*n3^2 - 32*n2*n3^2 - 16*n3^3 - 1704*n4 + 1336*d*n4 - 260*d^2*n4 - 
      128*n1*n4 + 56*d*n1*n4 - 352*n2*n4 + 140*d*n2*n4 - 8*n1*n2*n4 - 
      16*n2^2*n4 - 784*n3*n4 + 296*d*n3*n4 - 48*n1*n3*n4 - 88*n2*n3*n4 - 
      72*n3^2*n4 - 512*n4^2 + 196*d*n4^2 - 24*n1*n4^2 - 56*n2*n4^2 - 
      104*n3*n4^2 - 48*n4^3 - 744*n5 + 640*d*n5 - 134*d^2*n5 + 48*n1*n5 - 
      8*d*n1*n5 + 8*n1^2*n5 - 96*n2*n5 + 48*d*n2*n5 + 16*n1*n2*n5 - 
      528*n3*n5 + 204*d*n3*n5 - 24*n1*n3*n5 - 56*n2*n3*n5 - 56*n3^2*n5 - 
      592*n4*n5 + 236*d*n4*n5 - 8*n1*n4*n5 - 56*n2*n4*n5 - 152*n3*n4*n5 - 
      96*n4^2*n5 - 80*n5^2 + 40*d*n5^2 + 16*n1*n5^2 - 48*n3*n5^2 - 
      48*n4*n5^2)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 0, 0, 1, 2, -1, 1, 1])/
    (2*(-3 + d - n4 - n5)*(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 
      160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
      208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
      74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
      34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((1672 - 2044*d + 822*d^2 - 109*d^3 + 40*n1 - 64*d*n1 + 
      18*d^2*n1 - 56*n1^2 + 20*d*n1^2 - 8*n1^3 + 424*n2 - 364*d*n2 + 
      76*d^2*n2 - 56*n1*n2 + 16*d*n1*n2 - 16*n1^2*n2 + 24*n2^2 - 12*d*n2^2 - 
      8*n1*n2^2 + 1416*n3 - 1088*d*n3 + 208*d^2*n3 + 160*n1*n3 - 64*d*n1*n3 + 
      312*n2*n3 - 120*d*n2*n3 + 16*n1*n2*n3 + 16*n2^2*n3 + 288*n3^2 - 
      108*d*n3^2 + 24*n1*n3^2 + 32*n2*n3^2 + 16*n3^3 + 1704*n4 - 1336*d*n4 + 
      260*d^2*n4 + 128*n1*n4 - 56*d*n1*n4 + 352*n2*n4 - 140*d*n2*n4 + 
      8*n1*n2*n4 + 16*n2^2*n4 + 784*n3*n4 - 296*d*n3*n4 + 48*n1*n3*n4 + 
      88*n2*n3*n4 + 72*n3^2*n4 + 512*n4^2 - 196*d*n4^2 + 24*n1*n4^2 + 
      56*n2*n4^2 + 104*n3*n4^2 + 48*n4^3 + 744*n5 - 640*d*n5 + 134*d^2*n5 - 
      48*n1*n5 + 8*d*n1*n5 - 8*n1^2*n5 + 96*n2*n5 - 48*d*n2*n5 - 
      16*n1*n2*n5 + 528*n3*n5 - 204*d*n3*n5 + 24*n1*n3*n5 + 56*n2*n3*n5 + 
      56*n3^2*n5 + 592*n4*n5 - 236*d*n4*n5 + 8*n1*n4*n5 + 56*n2*n4*n5 + 
      152*n3*n4*n5 + 96*n4^2*n5 + 80*n5^2 - 40*d*n5^2 - 16*n1*n5^2 + 
      48*n3*n5^2 + 48*n4*n5^2)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 0, 0, 1, 
      2, 0, 1, 1])/(2*(-3 + d - n4 - n5)*(-504 + 628*d - 258*d^2 + 35*d^3 - 
      184*n1 + 160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
      208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
      74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
      34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((1800 - 2220*d + 902*d^2 - 121*d^3 + 120*n1 - 136*d*n1 + 
      34*d^2*n1 - 104*n1^2 + 36*d*n1^2 - 8*n1^3 + 576*n2 - 500*d*n2 + 
      106*d^2*n2 - 88*n1*n2 + 24*d*n1*n2 - 24*n1^2*n2 + 48*n2^2 - 24*d*n2^2 - 
      16*n1*n2^2 + 1656*n3 - 1300*d*n3 + 254*d^2*n3 + 216*n1*n3 - 
      88*d*n1*n3 - 8*n1^2*n3 + 464*n2*n3 - 184*d*n2*n3 + 16*n1*n2*n3 + 
      32*n2^2*n3 + 416*n3^2 - 160*d*n3^2 + 32*n1*n3^2 + 64*n2*n3^2 + 
      32*n3^3 + 1704*n4 - 1340*d*n4 + 262*d^2*n4 + 296*n1*n4 - 120*d*n1*n4 - 
      8*n1^2*n4 + 472*n2*n4 - 188*d*n2*n4 + 24*n1*n2*n4 + 32*n2^2*n4 + 
      840*n3*n4 - 324*d*n3*n4 + 88*n1*n3*n4 + 128*n2*n3*n4 + 96*n3^2*n4 + 
      408*n4^2 - 156*d*n4^2 + 56*n1*n4^2 + 64*n2*n4^2 + 88*n3*n4^2 + 
      24*n4^3 + 648*n5 - 560*d*n5 + 118*d^2*n5 + 16*n1*n5 - 16*d*n1*n5 - 
      24*n1^2*n5 + 104*n2*n5 - 52*d*n2*n5 - 24*n1*n2*n5 + 472*n3*n5 - 
      188*d*n3*n5 + 40*n1*n3*n5 + 64*n2*n3*n5 + 64*n3^2*n5 + 456*n4*n5 - 
      180*d*n4*n5 + 56*n1*n4*n5 + 64*n2*n4*n5 + 112*n3*n4*n5 + 48*n4^2*n5 + 
      48*n5^2 - 24*d*n5^2 + 24*n3*n5^2 + 24*n4*n5^2)*
     j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 1, -1, 1, 1, 0, 0, 2])/
    (2*(-3 + d - n4 - n5)*(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 
      160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
      208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
      74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
      34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((-64 + 56*d - 12*d^2 + 24*n1 - 8*d*n1 - 12*n2 + 6*d*n2 + 
      4*n1*n2 - 56*n3 + 22*d*n3 + 4*n1*n3 - 8*n2*n3 - 8*n3^2 - 64*n4 + 
      26*d*n4 + 4*n1*n4 - 8*n2*n4 - 20*n3*n4 - 12*n4^2 - 16*n5 + 8*d*n5 + 
      8*n1*n5 - 12*n3*n5 - 12*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 1, 
      -1, 2, 1, 0, 0, 1])/(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 
     160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
     208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
     8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
     8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
     40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
     74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
     76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
     40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
     24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
     34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
     8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
     8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
     24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((2960 - 3624*d + 1460*d^2 - 194*d^3 - 1072*n1 + 976*d*n1 - 312*d^2*n1 + 
      36*d^3*n1 - 48*n1^2 + 16*d*n1^2 + 48*n1^3 - 16*d*n1^3 + 1176*n2 - 
      1156*d*n2 + 336*d^2*n2 - 26*d^3*n2 - 280*n1*n2 + 164*d*n1*n2 - 
      26*d^2*n1*n2 + 24*n1^2*n2 - 8*d*n1^2*n2 + 8*n1^3*n2 + 88*n2^2 - 
      60*d*n2^2 + 8*d^2*n2^2 - 32*n1*n2^2 + 12*d*n1*n2^2 + 8*n1^2*n2^2 + 
      2000*n3 - 1120*d*n3 - 20*d^2*n3 + 59*d^3*n3 - 608*n1*n3 + 504*d*n1*n3 - 
      108*d^2*n1*n3 - 16*n1^2*n3 + 4*d*n1^2*n3 + 16*n1^3*n3 + 712*n2*n3 - 
      300*d*n2*n3 + 10*d^2*n2*n3 - 128*n1*n2*n3 + 56*d*n1*n2*n3 + 
      8*n1^2*n2*n3 + 48*n2^2*n3 - 8*d*n2^2*n3 - 16*n1*n2^2*n3 + 8*n3^2 + 
      260*d*n3^2 - 98*d^2*n3^2 - 296*n1*n3^2 + 124*d*n1*n3^2 - 16*n1^2*n3^2 + 
      8*n2*n3^2 + 24*d*n2*n3^2 - 48*n1*n2*n3^2 - 40*n3^3 + 32*d*n3^3 - 
      32*n1*n3^3 + 2120*n4 - 1140*d*n4 - 70*d^2*n4 + 74*d^3*n4 - 376*n1*n4 + 
      288*d*n1*n4 - 62*d^2*n1*n4 - 104*n1^2*n4 + 32*d*n1^2*n4 + 8*n1^3*n4 + 
      720*n2*n4 - 288*d*n2*n4 + 2*d^2*n2*n4 - 80*n1*n2*n4 + 28*d*n1*n2*n4 - 
      16*n1^2*n2*n4 + 48*n2^2*n4 - 8*d*n2^2*n4 - 16*n1*n2^2*n4 - 368*n3*n4 + 
      952*d*n3*n4 - 304*d^2*n3*n4 - 336*n1*n3*n4 + 160*d*n1*n3*n4 - 
      32*n1^2*n3*n4 - 40*n2*n3*n4 + 88*d*n2*n3*n4 - 40*n1*n2*n3*n4 - 
      456*n3^2*n4 + 236*d*n3^2*n4 - 80*n1*n3^2*n4 - 40*n2*n3^2*n4 - 
      40*n3^3*n4 - 248*n4^2 + 588*d*n4^2 - 186*d^2*n4^2 - 8*n1*n4^2 + 
      20*d*n1*n4^2 - 16*n1^2*n4^2 - 48*n2*n4^2 + 64*d*n2*n4^2 + 
      8*n1*n2*n4^2 - 728*n3*n4^2 + 356*d*n3*n4^2 - 48*n1*n3*n4^2 - 
      80*n2*n3*n4^2 - 120*n3^2*n4^2 - 312*n4^3 + 152*d*n4^3 - 40*n2*n4^3 - 
      120*n3*n4^3 - 40*n4^4 + 1264*n5 - 1088*d*n5 + 228*d^2*n5 - 464*n1*n5 + 
      216*d*n1*n5 - 24*d^2*n1*n5 - 8*d*n1^2*n5 + 16*n1^3*n5 + 280*n2*n5 - 
      180*d*n2*n5 + 20*d^2*n2*n5 + 24*n1*n2*n5 - 24*d*n1*n2*n5 + 
      16*n1^2*n2*n5 + 8*n2^2*n5 - 4*d*n2^2*n5 + 8*n1*n2^2*n5 + 632*n3*n5 - 
      48*d*n3*n5 - 74*d^2*n3*n5 - 64*n1*n3*n5 + 36*d*n1*n3*n5 + 96*n2*n3*n5 + 
      8*d*n2*n3*n5 + 8*n1*n2*n3*n5 - 168*n3^2*n5 + 112*d*n3^2*n5 - 
      40*n1*n3^2*n5 - 24*n2*n3^2*n5 - 24*n3^3*n5 + 560*n4*n5 + 40*d*n4*n5 - 
      100*d^2*n4*n5 - 32*n1*n4*n5 + 12*d*n1*n4*n5 - 24*n1^2*n4*n5 + 
      56*n2*n4*n5 + 28*d*n2*n4*n5 + 16*n1*n2*n4*n5 - 472*n3*n4*n5 + 
      304*d*n3*n4*n5 - 24*n1*n3*n4*n5 - 72*n2*n3*n4*n5 - 136*n3^2*n4*n5 - 
      288*n4^2*n5 + 184*d*n4^2*n5 + 16*n1*n4^2*n5 - 48*n2*n4^2*n5 - 
      192*n3*n4^2*n5 - 80*n4^3*n5 + 128*n5^2 - 64*d*n5^2 - 48*n1*n5^2 + 
      16*n1*n2*n5^2 + 40*n3*n5^2 + 24*d*n3*n5^2 + 16*n1*n3*n5^2 - 
      8*n2*n3*n5^2 - 32*n3^2*n5^2 + 24*n4*n5^2 + 32*d*n4*n5^2 + 
      16*n1*n4*n5^2 - 8*n2*n4*n5^2 - 72*n3*n4*n5^2 - 40*n4^2*n5^2)*
     j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)*(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 
      160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
      208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
      74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
      34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((-640 + 784*d - 316*d^2 + 42*d^3 + 176*n1 - 108*d*n1 + 
      16*d^2*n1 + 24*n1^2 - 8*d*n1^2 - 184*n2 + 158*d*n2 - 33*d^2*n2 + 
      52*n1*n2 - 16*d*n1*n2 + 4*n1^2*n2 - 12*n2^2 + 6*d*n2^2 + 4*n1*n2^2 - 
      624*n3 + 472*d*n3 - 89*d^2*n3 + 8*n1*n3 + 4*n1^2*n3 - 148*n2*n3 + 
      56*d*n2*n3 - 8*n2^2*n3 - 136*n3^2 + 50*d*n3^2 - 4*n1*n3^2 - 
      16*n2*n3^2 - 8*n3^3 - 768*n4 + 596*d*n4 - 115*d^2*n4 + 24*n1*n4 - 
      4*d*n1*n4 + 4*n1^2*n4 - 168*n2*n4 + 66*d*n2*n4 + 4*n1*n2*n4 - 
      8*n2^2*n4 - 376*n3*n4 + 140*d*n3*n4 - 8*n1*n3*n4 - 44*n2*n3*n4 - 
      36*n3^2*n4 - 248*n4^2 + 94*d*n4^2 - 4*n1*n4^2 - 28*n2*n4^2 - 
      52*n3*n4^2 - 24*n4^3 - 288*n5 + 248*d*n5 - 52*d^2*n5 + 112*n1*n5 - 
      36*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 16*n1*n2*n5 - 
      248*n3*n5 + 94*d*n3*n5 + 4*n1*n3*n5 - 28*n2*n3*n5 - 28*n3^2*n5 - 
      280*n4*n5 + 110*d*n4*n5 + 12*n1*n4*n5 - 28*n2*n4*n5 - 76*n3*n4*n5 - 
      48*n4^2*n5 - 32*n5^2 + 16*d*n5^2 + 16*n1*n5^2 - 24*n3*n5^2 - 
      24*n4*n5^2)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 0, 2, -1, 1, 1])/
    ((-3 + d - n4 - n5)*(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 
      160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
      208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
      74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
      34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((640 - 784*d + 316*d^2 - 42*d^3 - 176*n1 + 108*d*n1 - 
      16*d^2*n1 - 24*n1^2 + 8*d*n1^2 + 184*n2 - 158*d*n2 + 33*d^2*n2 - 
      52*n1*n2 + 16*d*n1*n2 - 4*n1^2*n2 + 12*n2^2 - 6*d*n2^2 - 4*n1*n2^2 + 
      624*n3 - 472*d*n3 + 89*d^2*n3 - 8*n1*n3 - 4*n1^2*n3 + 148*n2*n3 - 
      56*d*n2*n3 + 8*n2^2*n3 + 136*n3^2 - 50*d*n3^2 + 4*n1*n3^2 + 
      16*n2*n3^2 + 8*n3^3 + 768*n4 - 596*d*n4 + 115*d^2*n4 - 24*n1*n4 + 
      4*d*n1*n4 - 4*n1^2*n4 + 168*n2*n4 - 66*d*n2*n4 - 4*n1*n2*n4 + 
      8*n2^2*n4 + 376*n3*n4 - 140*d*n3*n4 + 8*n1*n3*n4 + 44*n2*n3*n4 + 
      36*n3^2*n4 + 248*n4^2 - 94*d*n4^2 + 4*n1*n4^2 + 28*n2*n4^2 + 
      52*n3*n4^2 + 24*n4^3 + 288*n5 - 248*d*n5 + 52*d^2*n5 - 112*n1*n5 + 
      36*d*n1*n5 - 8*n1^2*n5 + 40*n2*n5 - 20*d*n2*n5 - 16*n1*n2*n5 + 
      248*n3*n5 - 94*d*n3*n5 - 4*n1*n3*n5 + 28*n2*n3*n5 + 28*n3^2*n5 + 
      280*n4*n5 - 110*d*n4*n5 - 12*n1*n4*n5 + 28*n2*n4*n5 + 76*n3*n4*n5 + 
      48*n4^2*n5 + 32*n5^2 - 16*d*n5^2 - 16*n1*n5^2 + 24*n3*n5^2 + 
      24*n4*n5^2)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 0, 2, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 
      160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
      208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
      74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
      34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((-664 + 788*d - 306*d^2 + 39*d^3 - 456*n1 + 696*d*n1 - 
      330*d^2*n1 + 50*d^3*n1 - 24*n1^2 + 4*d*n1^2 + 8*n1^3 - 8*d*n1^3 + 
      56*n2 - 52*d*n2 + 12*d^2*n2 - 88*n1*n2 + 80*d*n1*n2 - 20*d^2*n1*n2 - 
      8*d*n1^2*n2 + 24*n2^2 - 12*d*n2^2 - 8*n1*n2^2 + 176*n3 - 556*d*n3 + 
      342*d^2*n3 - 59*d^3*n3 - 512*n1*n3 + 440*d*n1*n3 - 92*d^2*n1*n3 - 
      40*n1^2*n3 + 20*d*n1^2*n3 + 352*n2*n3 - 284*d*n2*n3 + 56*d^2*n2*n3 - 
      96*n1*n2*n3 + 44*d*n1*n2*n3 - 8*n1^2*n2*n3 + 40*n2^2*n3 - 
      12*d*n2^2*n3 - 8*n1*n2^2*n3 + 480*n3^2 - 444*d*n3^2 + 98*d^2*n3^2 - 
      48*n1*n3^2 + 20*d*n1*n3^2 + 224*n2*n3^2 - 84*d*n2*n3^2 + 8*n1*n2*n3^2 + 
      16*n2^2*n3^2 + 72*n3^3 - 32*d*n3^3 + 16*n2*n3^3 + 392*n4 - 824*d*n4 + 
      452*d^2*n4 - 74*d^3*n4 - 632*n1*n4 + 576*d*n1*n4 - 126*d^2*n1*n4 - 
      16*n1^2*n4 + 16*d*n1^2*n4 + 8*n1^3*n4 + 216*n2*n4 - 168*d*n2*n4 + 
      32*d^2*n2*n4 - 88*n1*n2*n4 + 52*d*n1*n2*n4 + 8*n1^2*n2*n4 + 
      16*n2^2*n4 + 1560*n3*n4 - 1404*d*n3*n4 + 304*d^2*n3*n4 - 264*n1*n3*n4 + 
      104*d*n1*n3*n4 - 16*n1^2*n3*n4 + 392*n2*n3*n4 - 156*d*n2*n3*n4 - 
      24*n1*n2*n3*n4 + 16*n2^2*n3*n4 + 576*n3^2*n4 - 236*d*n3^2*n4 - 
      8*n1*n3^2*n4 + 72*n2*n3^2*n4 + 40*n3^3*n4 + 952*n4^2 - 856*d*n4^2 + 
      186*d^2*n4^2 - 232*n1*n4^2 + 92*d*n1*n4^2 - 16*n1^2*n4^2 + 
      152*n2*n4^2 - 64*d*n2*n4^2 - 32*n1*n2*n4^2 + 872*n3*n4^2 - 
      356*d*n3*n4^2 - 24*n1*n3*n4^2 + 88*n2*n3*n4^2 + 120*n3^2*n4^2 + 
      368*n4^3 - 152*d*n4^3 - 16*n1*n4^3 + 32*n2*n4^3 + 120*n3*n4^3 + 
      40*n4^4 - 376*n5 + 320*d*n5 - 66*d^2*n5 - 224*n1*n5 + 248*d*n1*n5 - 
      60*d^2*n1*n5 - 24*n1^2*n5 + 8*d*n1^2*n5 - 16*n2*n5 + 8*d*n2*n5 - 
      32*n1*n2*n5 + 16*d*n1*n2*n5 + 104*n3*n5 - 236*d*n3*n5 + 74*d^2*n3*n5 - 
      272*n1*n3*n5 + 108*d*n1*n3*n5 - 16*n1^2*n3*n5 + 56*n2*n3*n5 - 
      32*d*n2*n3*n5 - 32*n1*n2*n3*n5 + 256*n3^2*n5 - 112*d*n3^2*n5 - 
      16*n1*n3^2*n5 + 40*n2*n3^2*n5 + 24*n3^3*n5 + 224*n4*n5 - 348*d*n4*n5 + 
      100*d^2*n4*n5 - 272*n1*n4*n5 + 116*d*n1*n4*n5 - 8*n1^2*n4*n5 + 
      48*n2*n4*n5 - 28*d*n2*n4*n5 - 24*n1*n2*n4*n5 + 672*n3*n4*n5 - 
      304*d*n3*n4*n5 - 64*n1*n3*n4*n5 + 72*n2*n3*n4*n5 + 136*n3^2*n4*n5 + 
      400*n4^2*n5 - 184*d*n4^2*n5 - 48*n1*n4^2*n5 + 32*n2*n4^2*n5 + 
      192*n3*n4^2*n5 + 80*n4^3*n5 - 48*n5^2 + 24*d*n5^2 - 16*n1*n5^2 + 
      16*d*n1*n5^2 + 16*n3*n5^2 - 24*d*n3*n5^2 - 32*n1*n3*n5^2 + 
      32*n3^2*n5^2 + 32*n4*n5^2 - 32*d*n4*n5^2 - 32*n1*n4*n5^2 + 
      72*n3*n4*n5^2 + 40*n4^2*n5^2)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 
      1, 0, 0, 1, 1])/(2*(-3 + d - n4 - n5)*(-504 + 628*d - 258*d^2 + 
      35*d^3 - 184*n1 + 160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 
      240*n2 + 208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 
      12*d*n2^2 + 8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 
      64*d*n1*n3 - 8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 
      16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 
      372*d*n4 - 74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
      34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, -1, 0, 2]/
    (3 - d + n4 + n5) + ((-1008 + 1256*d - 516*d^2 + 70*d^3 - 256*n1 + 
      168*d*n1 - 10*d^3*n1 - 128*n1^2 + 96*d*n1^2 - 16*d^2*n1^2 - 16*n1^3 + 
      8*d*n1^3 - 5616*n2 + 6712*d*n2 - 2628*d^2*n2 + 338*d^3*n2 + 552*n1*n2 - 
      272*d*n1*n2 + 30*d^2*n1*n2 + 176*n1^2*n2 - 56*d*n1^2*n2 + 8*n1^3*n2 - 
      1488*n2^2 + 1264*d*n2^2 - 260*d^2*n2^2 + 312*n1*n2^2 - 92*d*n1*n2^2 + 
      40*n1^2*n2^2 - 96*n2^3 + 48*d*n2^3 + 32*n1*n2^3 + 2872*n3 - 3852*d*n3 + 
      1678*d^2*n3 - 239*d^3*n3 + 48*n1*n3 - 268*d*n1*n3 + 94*d^2*n1*n3 - 
      208*n1^2*n3 + 60*d*n1^2*n3 - 24*n1^3*n3 - 3808*n2*n3 + 2676*d*n2*n3 - 
      466*d^2*n2*n3 - 392*n1*n2*n3 + 124*d*n1*n2*n3 - 32*n1^2*n2*n3 - 
      1056*n2^2*n3 + 384*d*n2^2*n3 - 48*n1*n2^2*n3 - 64*n2^3*n3 + 2952*n3^2 - 
      2308*d*n3^2 + 450*d^2*n3^2 + 496*n1*n3^2 - 208*d*n1*n3^2 + 
      8*n1^2*n3^2 - 144*n2*n3^2 + 32*d*n2*n3^2 + 16*n1*n2*n3^2 - 
      64*n2^2*n3^2 + 592*n3^3 - 224*d*n3^3 + 64*n1*n3^3 + 32*n2*n3^3 + 
      32*n3^4 - 928*n4 + 744*d*n4 - 148*d^2*n4 - 72*n1*n4 - 84*d*n1*n4 + 
      44*d^2*n1*n4 - 8*n1^2*n4 - 8*d*n1^2*n4 - 5840*n2*n4 + 4416*d*n2*n4 - 
      828*d^2*n2*n4 - 176*n1*n2*n4 + 76*d*n1*n2*n4 + 24*n1^2*n2*n4 - 
      1264*n2^2*n4 + 488*d*n2^2*n4 - 64*n2^3*n4 + 3352*n3*n4 - 2756*d*n3*n4 + 
      562*d^2*n3*n4 + 560*n1*n3*n4 - 260*d*n1*n3*n4 + 16*n1^2*n3*n4 - 
      1688*n2*n3*n4 + 588*d*n2*n3*n4 - 48*n1*n2*n3*n4 - 256*n2^2*n3*n4 + 
      1592*n3^2*n4 - 612*d*n3^2*n4 + 160*n1*n3^2*n4 - 16*n2*n3^2*n4 + 
      144*n3^3*n4 - 224*n4^2 + 88*d*n4^2 + 48*n1*n4^2 - 36*d*n1*n4^2 + 
      8*n1^2*n4^2 - 1664*n2*n4^2 + 616*d*n2*n4^2 - 56*n1*n2*n4^2 - 
      192*n2^2*n4^2 + 1000*n3*n4^2 - 396*d*n3*n4^2 + 104*n1*n3*n4^2 - 
      192*n2*n3*n4^2 + 200*n3^2*n4^2 - 16*n4^3 + 8*n1*n4^3 - 144*n2*n4^3 + 
      88*n3*n4^3 + 520*n5 - 772*d*n5 + 374*d^2*n5 - 59*d^3*n5 - 8*n1*n5 - 
      48*d*n1*n5 + 22*d^2*n1*n5 - 168*n1^2*n5 + 60*d*n1^2*n5 - 24*n1^3*n5 - 
      1960*n2*n5 + 1660*d*n2*n5 - 340*d^2*n2*n5 + 352*n1*n2*n5 - 
      100*d*n1*n2*n5 + 8*n1^2*n2*n5 - 280*n2^2*n5 + 140*d*n2^2*n5 + 
      72*n1*n2^2*n5 + 1928*n3*n5 - 1696*d*n3*n5 + 364*d^2*n3*n5 + 
      64*n1*n3*n5 - 68*d*n1*n3*n5 - 40*n1^2*n3*n5 - 1272*n2*n3*n5 + 
      448*d*n2*n3*n5 - 56*n1*n2*n3*n5 - 176*n2^2*n3*n5 + 1136*n3^2*n5 - 
      444*d*n3^2*n5 + 96*n1*n3^2*n5 - 32*n2*n3^2*n5 + 112*n3^3*n5 + 
      720*n4*n5 - 664*d*n4*n5 + 150*d^2*n4*n5 + 160*n1*n4*n5 - 
      84*d*n1*n4*n5 - 1624*n2*n4*n5 + 624*d*n2*n4*n5 + 24*n1*n2*n4*n5 - 
      176*n2^2*n4*n5 + 1512*n3*n4*n5 - 612*d*n3*n4*n5 + 112*n1*n3*n4*n5 - 
      280*n2*n3*n4*n5 + 312*n3^2*n4*n5 + 280*n4^2*n5 - 120*d*n4^2*n5 + 
      32*n1*n4^2*n5 - 248*n2*n4^2*n5 + 232*n3*n4^2*n5 + 32*n4^3*n5 + 
      376*n5^2 - 336*d*n5^2 + 74*d^2*n5^2 - 64*n1*n5^2 + 16*d*n1*n5^2 - 
      24*n1^2*n5^2 - 160*n2*n5^2 + 80*d*n2*n5^2 + 48*n1*n2*n5^2 + 
      424*n3*n5^2 - 184*d*n3*n5^2 - 8*n1*n3*n5^2 - 104*n2*n3*n5^2 + 
      112*n3^2*n5^2 + 344*n4*n5^2 - 144*d*n4*n5^2 + 8*n1*n4*n5^2 - 
      104*n2*n4*n5^2 + 176*n3*n4*n5^2 + 64*n4^2*n5^2 + 48*n5^3 - 24*d*n5^3 - 
      16*n1*n5^3 + 32*n3*n5^3 + 32*n4*n5^3)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 
      0, 1, 0, 1, 1, 0, 0, 1])/(2*(-3 + d - n4 - n5)*
     (-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 160*d*n1 - 34*d^2*n1 + 
      40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 208*d*n2 - 44*d^2*n2 + 
      16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 352*n3 + 
      276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 176*n2*n3 + 
      68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
      16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 74*d^2*n4 - 184*n1*n4 + 
      72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
      16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
      8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 
      16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 34*d^2*n5 - 32*n1*n5 + 
      16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
      112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
      128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
      16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-1800 + 2220*d - 902*d^2 + 121*d^3 - 120*n1 + 136*d*n1 - 34*d^2*n1 + 
      104*n1^2 - 36*d*n1^2 + 8*n1^3 - 576*n2 + 500*d*n2 - 106*d^2*n2 + 
      88*n1*n2 - 24*d*n1*n2 + 24*n1^2*n2 - 48*n2^2 + 24*d*n2^2 + 16*n1*n2^2 - 
      1656*n3 + 1300*d*n3 - 254*d^2*n3 - 216*n1*n3 + 88*d*n1*n3 + 8*n1^2*n3 - 
      464*n2*n3 + 184*d*n2*n3 - 16*n1*n2*n3 - 32*n2^2*n3 - 416*n3^2 + 
      160*d*n3^2 - 32*n1*n3^2 - 64*n2*n3^2 - 32*n3^3 - 1704*n4 + 1340*d*n4 - 
      262*d^2*n4 - 296*n1*n4 + 120*d*n1*n4 + 8*n1^2*n4 - 472*n2*n4 + 
      188*d*n2*n4 - 24*n1*n2*n4 - 32*n2^2*n4 - 840*n3*n4 + 324*d*n3*n4 - 
      88*n1*n3*n4 - 128*n2*n3*n4 - 96*n3^2*n4 - 408*n4^2 + 156*d*n4^2 - 
      56*n1*n4^2 - 64*n2*n4^2 - 88*n3*n4^2 - 24*n4^3 - 648*n5 + 560*d*n5 - 
      118*d^2*n5 - 16*n1*n5 + 16*d*n1*n5 + 24*n1^2*n5 - 104*n2*n5 + 
      52*d*n2*n5 + 24*n1*n2*n5 - 472*n3*n5 + 188*d*n3*n5 - 40*n1*n3*n5 - 
      64*n2*n3*n5 - 64*n3^2*n5 - 456*n4*n5 + 180*d*n4*n5 - 56*n1*n4*n5 - 
      64*n2*n4*n5 - 112*n3*n4*n5 - 48*n4^2*n5 - 48*n5^2 + 24*d*n5^2 - 
      24*n3*n5^2 - 24*n4*n5^2)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 
      1, 0, 0, 2])/(2*(-3 + d - n4 - n5)*(-504 + 628*d - 258*d^2 + 35*d^3 - 
      184*n1 + 160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
      208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
      74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
      34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((-2184 + 2684*d - 1086*d^2 + 145*d^3 + 24*n1 + 40*d*n1 - 
      18*d^2*n1 + 104*n1^2 - 36*d*n1^2 + 8*n1^3 - 648*n2 + 560*d*n2 - 
      118*d^2*n2 + 112*n1*n2 - 32*d*n1*n2 + 24*n1^2*n2 - 48*n2^2 + 
      24*d*n2^2 + 16*n1*n2^2 - 1608*n3 + 1080*d*n3 - 114*d^2*n3 - 24*d^3*n3 - 
      336*n1*n3 + 176*d*n1*n3 - 16*d^2*n1*n3 + 8*n1^2*n3 - 440*n2*n3 + 
      140*d*n2*n3 + 12*d^2*n2*n3 - 40*n1*n2*n3 + 8*d*n1*n2*n3 - 32*n2^2*n3 - 
      128*n3^2 - 68*d*n3^2 + 44*d^2*n3^2 - 56*n1*n3^2 + 8*d*n1*n3^2 - 
      16*n2*n3^2 - 16*d*n2*n3^2 + 16*n3^3 - 16*d*n3^3 - 1816*n4 + 1248*d*n4 - 
      142*d^2*n4 - 26*d^3*n4 - 80*n1*n4 + 16*d^2*n1*n4 - 8*n1^2*n4 + 
      8*d*n1^2*n4 - 504*n2*n4 + 180*d*n2*n4 + 8*d^2*n2*n4 - 8*n1*n2*n4 - 
      32*n2^2*n4 - 168*n3*n4 - 312*d*n3*n4 + 142*d^2*n3*n4 - 112*n1*n3*n4 + 
      8*d*n1*n3*n4 - 8*n1^2*n3*n4 - 32*n2*n3*n4 - 48*d*n2*n3*n4 - 
      16*n1*n2*n3*n4 + 272*n3^2*n4 - 144*d*n3^2*n4 + 32*n2*n3^2*n4 + 
      32*n3^3*n4 - 392*n4^2 + 60*d*n4^2 + 34*d^2*n4^2 + 40*n1*n4^2 - 
      32*d*n1*n4^2 - 8*n1^2*n4^2 - 64*n2*n4^2 - 8*d*n2*n4^2 + 240*n3*n4^2 - 
      144*d*n3*n4^2 + 16*n1*n3*n4^2 + 32*n2*n3*n4^2 + 72*n3^2*n4^2 - 
      48*n4^3 + 16*n1*n4^3 + 32*n3*n4^3 - 8*n4^4 - 1760*n5 + 1844*d*n5 - 
      600*d^2*n5 + 59*d^3*n5 + 40*n1*n5 + 48*d*n1*n5 - 18*d^2*n1*n5 + 
      64*n1^2*n5 - 12*d*n1^2*n5 + 8*n1^3*n5 - 440*n2*n5 + 332*d*n2*n5 - 
      56*d^2*n2*n5 + 72*n1*n2*n5 - 8*d*n1*n2*n5 + 16*n1^2*n2*n5 - 
      24*n2^2*n5 + 12*d*n2^2*n5 + 8*n1*n2^2*n5 - 1120*n3*n5 + 584*d*n3*n5 - 
      58*d^2*n3*n5 - 272*n1*n3*n5 + 88*d*n1*n3*n5 - 8*n1^2*n3*n5 - 
      280*n2*n3*n5 + 72*d*n2*n3*n5 - 32*n1*n2*n3*n5 - 16*n2^2*n3*n5 + 
      16*n3^2*n5 - 36*d*n3^2*n5 - 24*n1*n3^2*n5 + 16*n3^3*n5 - 1552*n4*n5 + 
      944*d*n4*n5 - 130*d^2*n4*n5 - 32*n1*n4*n5 + 8*d*n1*n4*n5 - 
      8*n1^2*n4*n5 - 336*n2*n4*n5 + 100*d*n2*n4*n5 - 8*n1*n2*n4*n5 - 
      16*n2^2*n4*n5 - 280*n3*n4*n5 + 28*d*n3*n4*n5 - 40*n1*n3*n4*n5 - 
      40*n2*n3*n4*n5 + 56*n3^2*n4*n5 - 408*n4^2*n5 + 120*d*n4^2*n5 + 
      16*n1*n4^2*n5 - 40*n2*n4^2*n5 - 8*n3*n4^2*n5 - 48*n4^3*n5 - 488*n5^2 + 
      392*d*n5^2 - 74*d^2*n5^2 + 80*n1*n5^2 - 16*d*n1*n5^2 + 8*n1^2*n5^2 - 
      64*n2*n5^2 + 32*d*n2*n5^2 + 16*n1*n2*n5^2 - 312*n3*n5^2 + 
      96*d*n3*n5^2 - 32*n1*n3*n5^2 - 40*n2*n3*n5^2 - 408*n4*n5^2 + 
      144*d*n4*n5^2 + 16*n1*n4*n5^2 - 40*n2*n4*n5^2 - 72*n3*n4*n5^2 - 
      72*n4^2*n5^2 - 48*n5^3 + 24*d*n5^3 + 16*n1*n5^3 - 32*n3*n5^3 - 
      32*n4*n5^3)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 0])/
    (2*(-3 + d - n4 - n5)*(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 
      160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
      208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
      74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
      34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((-1600 + 2360*d - 1284*d^2 + 306*d^3 - 27*d^4 + 768*n1 - 
      536*d*n1 + 88*d^2*n1 + 2*d^3*n1 + 480*n1^2 - 296*d*n1^2 + 44*d^2*n1^2 + 
      32*n1^3 - 8*d*n1^3 - 176*n2 + 192*d*n2 - 68*d^2*n2 + 8*d^3*n2 + 
      320*n1*n2 - 160*d*n1*n2 + 16*d^2*n1*n2 + 112*n1^2*n2 - 32*d*n1^2*n2 + 
      32*n2^2 - 24*d*n2^2 + 4*d^2*n2^2 + 32*n1*n2^2 - 8*d*n1*n2^2 - 2128*n3 + 
      2168*d*n3 - 732*d^2*n3 + 82*d^3*n3 - 272*n1*n3 + 232*d*n1*n3 - 
      48*d^2*n1*n3 + 32*n1^2*n3 - 8*d*n1^2*n3 - 352*n2*n3 + 224*d*n2*n3 - 
      36*d^2*n2*n3 - 64*n1*n2*n3 + 24*d*n1*n2*n3 - 576*n3^2 + 384*d*n3^2 - 
      64*d^2*n3^2 - 48*n1*n3^2 + 16*d*n1*n3^2 - 48*n2*n3^2 + 16*d*n2*n3^2 - 
      48*n3^3 + 16*d*n3^3 - 2448*n4 + 2488*d*n4 - 828*d^2*n4 + 90*d^3*n4 - 
      560*n1*n4 + 536*d*n1*n4 - 120*d^2*n1*n4 + 96*n1^2*n4 - 24*d*n1^2*n4 - 
      352*n2*n4 + 216*d*n2*n4 - 32*d^2*n2*n4 - 112*n1*n2*n4 + 56*d*n1*n2*n4 + 
      16*n1^2*n2*n4 - 1536*n3*n4 + 1008*d*n3*n4 - 164*d^2*n3*n4 - 
      304*n1*n3*n4 + 120*d*n1*n3*n4 - 128*n2*n3*n4 + 40*d*n2*n3*n4 - 
      32*n1*n2*n3*n4 - 288*n3^2*n4 + 96*d*n3^2*n4 - 16*n1*n3^2*n4 - 
      16*n2*n3^2*n4 - 16*n3^3*n4 - 768*n4^2 + 448*d*n4^2 - 60*d^2*n4^2 - 
      384*n1*n4^2 + 152*d*n1*n4^2 - 32*n2*n4^2 - 48*n1*n2*n4^2 - 
      272*n3*n4^2 + 80*d*n3*n4^2 - 64*n1*n3*n4^2 - 32*n3^2*n4^2 - 16*d*n4^3 - 
      48*n1*n4^3 + 16*n2*n4^3 + 16*n4^4 - 1232*n5 + 1392*d*n5 - 508*d^2*n5 + 
      60*d^3*n5 + 976*n1*n5 - 560*d*n1*n5 + 76*d^2*n1*n5 + 336*n1^2*n5 - 
      112*d*n1^2*n5 + 16*n1^3*n5 - 32*n2*n5 + 16*d*n2*n5 + 240*n1*n2*n5 - 
      72*d*n1*n2*n5 + 48*n1^2*n2*n5 + 16*n2^2*n5 - 8*d*n2^2*n5 + 
      16*n1*n2^2*n5 - 1616*n3*n5 + 1096*d*n3*n5 - 184*d^2*n3*n5 - 
      80*n1*n3*n5 + 40*d*n1*n3*n5 + 16*n1^2*n3*n5 - 160*n2*n3*n5 + 
      48*d*n2*n3*n5 - 16*n1*n2*n3*n5 - 336*n3^2*n5 + 112*d*n3^2*n5 - 
      16*n1*n3^2*n5 - 16*n2*n3^2*n5 - 16*n3^3*n5 - 1680*n4*n5 + 
      1128*d*n4*n5 - 184*d^2*n4*n5 - 112*n1*n4*n5 + 72*d*n1*n4*n5 + 
      48*n1^2*n4*n5 - 128*n2*n4*n5 + 32*d*n2*n4*n5 - 16*n1*n2*n4*n5 - 
      768*n3*n4*n5 + 248*d*n3*n4*n5 - 64*n1*n3*n4*n5 - 16*n2*n3*n4*n5 - 
      80*n3^2*n4*n5 - 368*n4^2*n5 + 104*d*n4^2*n5 - 80*n1*n4^2*n5 - 
      64*n3*n4^2*n5 - 336*n5^2 + 272*d*n5^2 - 52*d^2*n5^2 + 320*n1*n5^2 - 
      96*d*n1*n5^2 + 48*n1^2*n5^2 + 32*n1*n2*n5^2 - 400*n3*n5^2 + 
      136*d*n3*n5^2 - 16*n2*n3*n5^2 - 48*n3^2*n5^2 - 400*n4*n5^2 + 
      136*d*n4*n5^2 - 16*n2*n4*n5^2 - 96*n3*n4*n5^2 - 48*n4^2*n5^2 - 
      32*n5^3 + 16*d*n5^3 + 32*n1*n5^3 - 32*n3*n5^3 - 32*n4*n5^3)*
     j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)*(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 
      160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
      208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
      74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
      34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((-64 + 56*d - 12*d^2 + 24*n1 - 8*d*n1 - 12*n2 + 6*d*n2 + 
      4*n1*n2 - 56*n3 + 22*d*n3 + 4*n1*n3 - 8*n2*n3 - 8*n3^2 - 64*n4 + 
      26*d*n4 + 4*n1*n4 - 8*n2*n4 - 20*n3*n4 - 12*n4^2 - 16*n5 + 8*d*n5 + 
      8*n1*n5 - 12*n3*n5 - 12*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 1, 
      0, 1, 1, 0, 2, 0])/(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 
     160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
     208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
     8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
     8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
     40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
     74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
     76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
     40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
     24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
     34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
     8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
     8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
     24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((28 - 24*d + 5*d^2 - 4*n1 + 2*d*n1 + 22*n3 - 9*d*n3 - 2*n1*n3 + 4*n3^2 + 
      22*n4 - 9*d*n4 - 2*n1*n4 + 8*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 4*n3*n5 + 
      4*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 2, 0, -1, 1, 1])/
    ((-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 12*n2 - 
      6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((-28 + 24*d - 5*d^2 + 4*n1 - 2*d*n1 - 22*n3 + 
      9*d*n3 + 2*n1*n3 - 4*n3^2 - 22*n4 + 9*d*n4 + 2*n1*n4 - 8*n3*n4 - 
      4*n4^2 - 8*n5 + 4*d*n5 - 4*n3*n5 - 4*n4*n5)*j[p4, n1, n2, n3, n4, 
      1 + n5, 1, 0, 1, 0, 2, 0, 0, 1, 1])/((-3 + d - n4 - n5)*
     (36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 12*n2 - 6*d*n2 - 4*n1*n2 + 
      20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 12*d*n4 + 8*n1*n4 + 
      8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((100 - 88*d + 19*d^2 - 16*n1 + 4*d*n1 - 4*n1^2 + 24*n2 - 12*d*n2 - 
      8*n1*n2 + 76*n3 - 30*d*n3 + 4*n1*n3 + 16*n2*n3 + 8*n3^2 + 92*n4 - 
      38*d*n4 + 4*n1*n4 + 16*n2*n4 + 24*n3*n4 + 16*n4^2 + 24*n5 - 12*d*n5 - 
      8*n1*n5 + 16*n3*n5 + 16*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 1, 0, 2, 
      0, 1, 0, -1, 1, 1])/(2*(-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 
      4*d*n1 - 4*n1^2 + 12*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 
      8*n2*n3 + 28*n4 - 12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 
      8*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((-28 + 24*d - 5*d^2 + 4*n1 - 2*d*n1 - 22*n3 + 9*d*n3 + 2*n1*n3 - 4*n3^2 - 
      22*n4 + 9*d*n4 + 2*n1*n4 - 8*n3*n4 - 4*n4^2 - 8*n5 + 4*d*n5 - 4*n3*n5 - 
      4*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 2, -1, 0, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 12*n2 - 
      6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((-100 + 88*d - 19*d^2 + 16*n1 - 4*d*n1 + 
      4*n1^2 - 24*n2 + 12*d*n2 + 8*n1*n2 - 76*n3 + 30*d*n3 - 4*n1*n3 - 
      16*n2*n3 - 8*n3^2 - 92*n4 + 38*d*n4 - 4*n1*n4 - 16*n2*n4 - 24*n3*n4 - 
      16*n4^2 - 24*n5 + 12*d*n5 + 8*n1*n5 - 16*n3*n5 - 16*n4*n5)*
     j[p4, n1, n2, n3, n4, 1 + n5, 2, -1, 1, 0, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 
      12*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((-156 + 136*d - 29*d^2 + 24*n1 - 8*d*n1 + 
      4*n1^2 - 24*n2 + 12*d*n2 + 8*n1*n2 - 120*n3 + 48*d*n3 - 16*n2*n3 - 
      16*n3^2 - 136*n4 + 56*d*n4 - 16*n2*n4 - 40*n3*n4 - 24*n4^2 - 40*n5 + 
      20*d*n5 + 8*n1*n5 - 24*n3*n5 - 24*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 
      2, 0, 0, -1, 1, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5)*
     (36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 12*n2 - 6*d*n2 - 4*n1*n2 + 
      20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 12*d*n4 + 8*n1*n4 + 
      8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((28 - 24*d + 5*d^2 - 4*n1 + 2*d*n1 + 22*n3 - 9*d*n3 - 2*n1*n3 + 4*n3^2 + 
      22*n4 - 9*d*n4 - 2*n1*n4 + 8*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 4*n3*n5 + 
      4*n4*n5)*j[p4, n1, n2, n3, n4, 1 + n5, 2, 0, 0, 0, 1, 1, -1, 1, 1])/
    ((-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 12*n2 - 
      6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((-100 + 88*d - 19*d^2 + 16*n1 - 4*d*n1 + 
      4*n1^2 - 24*n2 + 12*d*n2 + 8*n1*n2 - 76*n3 + 30*d*n3 - 4*n1*n3 - 
      16*n2*n3 - 8*n3^2 - 92*n4 + 38*d*n4 - 4*n1*n4 - 16*n2*n4 - 24*n3*n4 - 
      16*n4^2 - 24*n5 + 12*d*n5 + 8*n1*n5 - 16*n3*n5 - 16*n4*n5)*
     j[p4, n1, n2, n3, n4, 1 + n5, 2, 0, 1, -1, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 
      12*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((-100 + 88*d - 19*d^2 + 16*n1 - 4*d*n1 + 
      4*n1^2 - 24*n2 + 12*d*n2 + 8*n1*n2 - 76*n3 + 30*d*n3 - 4*n1*n3 - 
      16*n2*n3 - 8*n3^2 - 92*n4 + 38*d*n4 - 4*n1*n4 - 16*n2*n4 - 24*n3*n4 - 
      16*n4^2 - 24*n5 + 12*d*n5 + 8*n1*n5 - 16*n3*n5 - 16*n4*n5)*
     j[p4, n1, n2, n3, n4, 1 + n5, 2, 0, 1, -1, 1, 1, 0, 1, 0])/
    (2*(-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 
      12*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((100 - 88*d + 19*d^2 - 16*n1 + 4*d*n1 - 4*n1^2 + 
      24*n2 - 12*d*n2 - 8*n1*n2 + 76*n3 - 30*d*n3 + 4*n1*n3 + 16*n2*n3 + 
      8*n3^2 + 92*n4 - 38*d*n4 + 4*n1*n4 + 16*n2*n4 + 24*n3*n4 + 16*n4^2 + 
      24*n5 - 12*d*n5 - 8*n1*n5 + 16*n3*n5 + 16*n4*n5)*
     j[p4, n1, n2, n3, n4, 1 + n5, 2, 0, 1, 0, 0, 1, -1, 1, 1])/
    (2*(-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 
      12*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((648 - 796*d + 322*d^2 - 43*d^3 - 32*n1 + 
      12*d*n1 - 32*n1^2 + 12*d*n1^2 + 168*n2 - 146*d*n2 + 31*d^2*n2 - 
      36*n1*n2 + 12*d*n1*n2 - 4*n1^2*n2 + 12*n2^2 - 6*d*n2^2 - 4*n1*n2^2 + 
      652*n3 - 512*d*n3 + 100*d^2*n3 + 24*n1*n3 - 12*d*n1*n3 - 8*n1^2*n3 + 
      144*n2*n3 - 58*d*n2*n3 - 4*n1*n2*n3 + 8*n2^2*n3 + 188*n3^2 - 
      72*d*n3^2 + 8*n1*n3^2 + 24*n2*n3^2 + 16*n3^3 + 620*n4 - 484*d*n4 + 
      94*d^2*n4 + 56*n1*n4 - 24*d*n1*n4 - 8*n1^2*n4 + 140*n2*n4 - 
      56*d*n2*n4 + 8*n2^2*n4 + 344*n3*n4 - 132*d*n3*n4 + 24*n1*n3*n4 + 
      44*n2*n3*n4 + 44*n3^2*n4 + 148*n4^2 - 56*d*n4^2 + 16*n1*n4^2 + 
      20*n2*n4^2 + 36*n3*n4^2 + 8*n4^3 + 880*n5 - 996*d*n5 + 364*d^2*n5 - 
      43*d^3*n5 - 40*n1*n5 + 12*d*n1*n5 - 40*n1^2*n5 + 12*d*n1^2*n5 + 
      200*n2*n5 - 162*d*n2*n5 + 31*d^2*n2*n5 - 44*n1*n2*n5 + 12*d*n1*n2*n5 - 
      4*n1^2*n2*n5 + 12*n2^2*n5 - 6*d*n2^2*n5 - 4*n1*n2^2*n5 + 832*n3*n5 - 
      584*d*n3*n5 + 100*d^2*n3*n5 + 32*n1*n3*n5 - 12*d*n1*n3*n5 - 
      8*n1^2*n3*n5 + 164*n2*n3*n5 - 58*d*n2*n3*n5 - 4*n1*n2*n3*n5 + 
      8*n2^2*n3*n5 + 216*n3^2*n5 - 72*d*n3^2*n5 + 8*n1*n3^2*n5 + 
      24*n2*n3^2*n5 + 16*n3^3*n5 + 784*n4*n5 - 548*d*n4*n5 + 94*d^2*n4*n5 + 
      72*n1*n4*n5 - 24*d*n1*n4*n5 - 8*n1^2*n4*n5 + 160*n2*n4*n5 - 
      56*d*n2*n4*n5 + 8*n2^2*n4*n5 + 388*n3*n4*n5 - 132*d*n3*n4*n5 + 
      24*n1*n3*n4*n5 + 44*n2*n3*n4*n5 + 44*n3^2*n4*n5 + 164*n4^2*n5 - 
      56*d*n4^2*n5 + 16*n1*n4^2*n5 + 20*n2*n4^2*n5 + 36*n3*n4^2*n5 + 
      8*n4^3*n5 + 248*n5^2 - 208*d*n5^2 + 42*d^2*n5^2 - 8*n1*n5^2 - 
      8*n1^2*n5^2 + 32*n2*n5^2 - 16*d*n2*n5^2 - 8*n1*n2*n5^2 + 188*n3*n5^2 - 
      72*d*n3*n5^2 + 8*n1*n3*n5^2 + 20*n2*n3*n5^2 + 28*n3^2*n5^2 + 
      172*n4*n5^2 - 64*d*n4*n5^2 + 16*n1*n4*n5^2 + 20*n2*n4*n5^2 + 
      44*n3*n4*n5^2 + 16*n4^2*n5^2 + 16*n5^3 - 8*d*n5^3 + 8*n3*n5^3 + 
      8*n4*n5^3)*j[p4, n1, n2, n3, n4, 2 + n5, 0, 0, 1, -1, 1, 1, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 
      160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
      208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
      74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
      34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((-28 + 24*d - 5*d^2 + 4*n1 - 2*d*n1 - 22*n3 + 9*d*n3 + 
      2*n1*n3 - 4*n3^2 - 22*n4 + 9*d*n4 + 2*n1*n4 - 8*n3*n4 - 4*n4^2 - 
      36*n5 + 28*d*n5 - 5*d^2*n5 + 4*n1*n5 - 2*d*n1*n5 - 26*n3*n5 + 
      9*d*n3*n5 + 2*n1*n3*n5 - 4*n3^2*n5 - 26*n4*n5 + 9*d*n4*n5 + 
      2*n1*n4*n5 - 8*n3*n4*n5 - 4*n4^2*n5 - 8*n5^2 + 4*d*n5^2 - 4*n3*n5^2 - 
      4*n4*n5^2)*j[p4, n1, n2, n3, n4, 2 + n5, 1, -1, 1, 0, 1, 1, 0, 0, 1])/
    ((-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 12*n2 - 
      6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((28 - 24*d + 5*d^2 - 4*n1 + 2*d*n1 + 22*n3 - 
      9*d*n3 - 2*n1*n3 + 4*n3^2 + 22*n4 - 9*d*n4 - 2*n1*n4 + 8*n3*n4 + 
      4*n4^2 + 36*n5 - 28*d*n5 + 5*d^2*n5 - 4*n1*n5 + 2*d*n1*n5 + 26*n3*n5 - 
      9*d*n3*n5 - 2*n1*n3*n5 + 4*n3^2*n5 + 26*n4*n5 - 9*d*n4*n5 - 
      2*n1*n4*n5 + 8*n3*n4*n5 + 4*n4^2*n5 + 8*n5^2 - 4*d*n5^2 + 4*n3*n5^2 + 
      4*n4*n5^2)*j[p4, n1, n2, n3, n4, 2 + n5, 1, -1, 1, 0, 1, 1, 0, 1, 0])/
    ((-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 12*n2 - 
      6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((100 - 88*d + 19*d^2 - 16*n1 + 4*d*n1 - 4*n1^2 + 
      24*n2 - 12*d*n2 - 8*n1*n2 + 76*n3 - 30*d*n3 + 4*n1*n3 + 16*n2*n3 + 
      8*n3^2 + 92*n4 - 38*d*n4 + 4*n1*n4 + 16*n2*n4 + 24*n3*n4 + 16*n4^2 + 
      124*n5 - 100*d*n5 + 19*d^2*n5 - 24*n1*n5 + 4*d*n1*n5 - 4*n1^2*n5 + 
      24*n2*n5 - 12*d*n2*n5 - 8*n1*n2*n5 + 92*n3*n5 - 30*d*n3*n5 + 
      4*n1*n3*n5 + 16*n2*n3*n5 + 8*n3^2*n5 + 108*n4*n5 - 38*d*n4*n5 + 
      4*n1*n4*n5 + 16*n2*n4*n5 + 24*n3*n4*n5 + 16*n4^2*n5 + 24*n5^2 - 
      12*d*n5^2 - 8*n1*n5^2 + 16*n3*n5^2 + 16*n4*n5^2)*
     j[p4, n1, n2, n3, n4, 2 + n5, 1, 0, 1, -1, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 
      12*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((-100 + 88*d - 19*d^2 + 16*n1 - 4*d*n1 + 
      4*n1^2 - 24*n2 + 12*d*n2 + 8*n1*n2 - 76*n3 + 30*d*n3 - 4*n1*n3 - 
      16*n2*n3 - 8*n3^2 - 92*n4 + 38*d*n4 - 4*n1*n4 - 16*n2*n4 - 24*n3*n4 - 
      16*n4^2 - 124*n5 + 100*d*n5 - 19*d^2*n5 + 24*n1*n5 - 4*d*n1*n5 + 
      4*n1^2*n5 - 24*n2*n5 + 12*d*n2*n5 + 8*n1*n2*n5 - 92*n3*n5 + 
      30*d*n3*n5 - 4*n1*n3*n5 - 16*n2*n3*n5 - 8*n3^2*n5 - 108*n4*n5 + 
      38*d*n4*n5 - 4*n1*n4*n5 - 16*n2*n4*n5 - 24*n3*n4*n5 - 16*n4^2*n5 - 
      24*n5^2 + 12*d*n5^2 + 8*n1*n5^2 - 16*n3*n5^2 - 16*n4*n5^2)*
     j[p4, n1, n2, n3, n4, 2 + n5, 1, 0, 1, -1, 1, 1, 0, 1, 0])/
    (2*(-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 
      12*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + (n4*j[p4, n1, n2, n3, 1 + n4, n5, 0, 0, 1, 0, 1, 
      1, 0, 1, 1])/(-3 + d - n4 - n5) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)) + (n4*j[p4, n1, n2, n3, 1 + n4, n5, 1, 0, 1, 0, 0, 
      1, 0, 1, 1])/(2*(-3 + d - n4 - n5)) - 
   (n4*j[p4, n1, n2, n3, 1 + n4, n5, 1, 0, 1, 0, 1, 0, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)) + (n4*j[p4, n1, n2, n3, 1 + n4, n5, 1, 0, 1, 0, 1, 
      1, 0, 1, 0])/(2*(-3 + d - n4 - n5)) + 
   ((-144*n4 + 168*d*n4 - 64*d^2*n4 + 8*d^3*n4 + 216*n1*n4 - 172*d*n1*n4 + 
      34*d^2*n1*n4 - 8*n1^2*n4 - 8*n1^3*n4 + 72*n2*n4 - 62*d*n2*n4 + 
      13*d^2*n2*n4 + 20*n1*n2*n4 - 12*d*n1*n2*n4 - 12*n1^2*n2*n4 + 
      12*n2^2*n4 - 6*d*n2^2*n4 - 4*n1*n2^2*n4 - 300*n3*n4 + 236*d*n3*n4 - 
      46*d^2*n3*n4 + 144*n1*n3*n4 - 52*d*n1*n3*n4 + 16*n1^2*n3*n4 + 
      32*n2*n3*n4 - 10*d*n2*n3*n4 + 28*n1*n2*n3*n4 + 8*n2^2*n3*n4 - 
      148*n3^2*n4 + 56*d*n3^2*n4 + 8*n1*n3^2*n4 - 8*n2*n3^2*n4 - 16*n3^3*n4 - 
      156*n4^2 + 112*d*n4^2 - 20*d^2*n4^2 + 128*n1*n4^2 - 48*d*n1*n4^2 + 
      16*n1^2*n4^2 + 52*n2*n4^2 - 20*d*n2*n4^2 + 24*n1*n2*n4^2 + 
      8*n2^2*n4^2 - 192*n3*n4^2 + 72*d*n3*n4^2 + 16*n1*n3*n4^2 - 
      4*n2*n3*n4^2 - 36*n3^2*n4^2 - 36*n4^3 + 12*d*n4^3 + 8*n1*n4^3 + 
      4*n2*n4^3 - 20*n3*n4^3 - 48*n4*n5 + 40*d*n4*n5 - 8*d^2*n4*n5 + 
      40*n1*n4*n5 - 16*d*n1*n4*n5 + 8*n2*n4*n5 - 4*d*n2*n4*n5 - 68*n3*n4*n5 + 
      28*d*n3*n4*n5 + 16*n1*n3*n4*n5 + 4*n2*n3*n4*n5 - 20*n3^2*n4*n5 - 
      36*n4^2*n5 + 12*d*n4^2*n5 + 8*n1*n4^2*n5 + 4*n2*n4^2*n5 - 
      20*n3*n4^2*n5)*j[p4, n1, n2, n3, 1 + n4, 1 + n5, 0, -1, 1, 0, 1, 1, 0, 
      1, 1])/((-3 + d - n4 - n5)*(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 
      160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
      208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
      74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
      34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((648*n4 - 796*d*n4 + 322*d^2*n4 - 43*d^3*n4 - 32*n1*n4 + 
      12*d*n1*n4 - 32*n1^2*n4 + 12*d*n1^2*n4 + 168*n2*n4 - 146*d*n2*n4 + 
      31*d^2*n2*n4 - 36*n1*n2*n4 + 12*d*n1*n2*n4 - 4*n1^2*n2*n4 + 
      12*n2^2*n4 - 6*d*n2^2*n4 - 4*n1*n2^2*n4 + 652*n3*n4 - 512*d*n3*n4 + 
      100*d^2*n3*n4 + 24*n1*n3*n4 - 12*d*n1*n3*n4 - 8*n1^2*n3*n4 + 
      144*n2*n3*n4 - 58*d*n2*n3*n4 - 4*n1*n2*n3*n4 + 8*n2^2*n3*n4 + 
      188*n3^2*n4 - 72*d*n3^2*n4 + 8*n1*n3^2*n4 + 24*n2*n3^2*n4 + 
      16*n3^3*n4 + 620*n4^2 - 484*d*n4^2 + 94*d^2*n4^2 + 56*n1*n4^2 - 
      24*d*n1*n4^2 - 8*n1^2*n4^2 + 140*n2*n4^2 - 56*d*n2*n4^2 + 8*n2^2*n4^2 + 
      344*n3*n4^2 - 132*d*n3*n4^2 + 24*n1*n3*n4^2 + 44*n2*n3*n4^2 + 
      44*n3^2*n4^2 + 148*n4^3 - 56*d*n4^3 + 16*n1*n4^3 + 20*n2*n4^3 + 
      36*n3*n4^3 + 8*n4^4 + 232*n4*n5 - 200*d*n4*n5 + 42*d^2*n4*n5 - 
      8*n1*n4*n5 - 8*n1^2*n4*n5 + 32*n2*n4*n5 - 16*d*n2*n4*n5 - 
      8*n1*n2*n4*n5 + 180*n3*n4*n5 - 72*d*n3*n4*n5 + 8*n1*n3*n4*n5 + 
      20*n2*n3*n4*n5 + 28*n3^2*n4*n5 + 164*n4^2*n5 - 64*d*n4^2*n5 + 
      16*n1*n4^2*n5 + 20*n2*n4^2*n5 + 44*n3*n4^2*n5 + 16*n4^3*n5 + 
      16*n4*n5^2 - 8*d*n4*n5^2 + 8*n3*n4*n5^2 + 8*n4^2*n5^2)*
     j[p4, n1, n2, n3, 1 + n4, 1 + n5, 0, 0, 1, -1, 1, 1, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 
      160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
      208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
      74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
      34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((792*n4 - 964*d*n4 + 386*d^2*n4 - 51*d^3*n4 - 
      248*n1*n4 + 184*d*n1*n4 - 34*d^2*n1*n4 - 24*n1^2*n4 + 12*d*n1^2*n4 + 
      8*n1^3*n4 + 96*n2*n4 - 84*d*n2*n4 + 18*d^2*n2*n4 - 56*n1*n2*n4 + 
      24*d*n1*n2*n4 + 8*n1^2*n2*n4 + 952*n3*n4 - 748*d*n3*n4 + 
      146*d^2*n3*n4 - 120*n1*n3*n4 + 40*d*n1*n3*n4 - 24*n1^2*n3*n4 + 
      112*n2*n3*n4 - 48*d*n2*n3*n4 - 32*n1*n2*n3*n4 + 336*n3^2*n4 - 
      128*d*n3^2*n4 + 32*n2*n3^2*n4 + 32*n3^3*n4 + 776*n4^2 - 596*d*n4^2 + 
      114*d^2*n4^2 - 72*n1*n4^2 + 24*d*n1*n4^2 - 24*n1^2*n4^2 + 88*n2*n4^2 - 
      36*d*n2*n4^2 - 24*n1*n2*n4^2 + 536*n3*n4^2 - 204*d*n3*n4^2 + 
      8*n1*n3*n4^2 + 48*n2*n3*n4^2 + 80*n3^2*n4^2 + 184*n4^3 - 68*d*n4^3 + 
      8*n1*n4^3 + 16*n2*n4^3 + 56*n3*n4^3 + 8*n4^4 + 280*n4*n5 - 
      240*d*n4*n5 + 50*d^2*n4*n5 - 48*n1*n4*n5 + 16*d*n1*n4*n5 - 
      8*n1^2*n4*n5 + 24*n2*n4*n5 - 12*d*n2*n4*n5 - 8*n1*n2*n4*n5 + 
      248*n3*n4*n5 - 100*d*n3*n4*n5 - 8*n1*n3*n4*n5 + 16*n2*n3*n4*n5 + 
      48*n3^2*n4*n5 + 200*n4^2*n5 - 76*d*n4^2*n5 + 8*n1*n4^2*n5 + 
      16*n2*n4^2*n5 + 64*n3*n4^2*n5 + 16*n4^3*n5 + 16*n4*n5^2 - 8*d*n4*n5^2 + 
      8*n3*n4*n5^2 + 8*n4^2*n5^2)*j[p4, n1, n2, n3, 1 + n4, 1 + n5, 1, -1, 0, 
      0, 1, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5)*(-504 + 628*d - 258*d^2 + 
      35*d^3 - 184*n1 + 160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 
      240*n2 + 208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 
      12*d*n2^2 + 8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 
      64*d*n1*n3 - 8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 
      16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 
      372*d*n4 - 74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
      34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) - (n4*j[p4, n1, n2, n3, 1 + n4, 1 + n5, 1, -1, 1, 0, 0, 1, 
      0, 1, 1])/(2*(-3 + d - n4 - n5)) + 
   (n4*j[p4, n1, n2, n3, 1 + n4, 1 + n5, 1, -1, 1, 0, 1, 0, 0, 1, 1])/
    (2*(-3 + d - n4 - n5)) + ((32*n4 - 28*d*n4 + 6*d^2*n4 - 12*n1*n4 + 
      4*d*n1*n4 + 6*n2*n4 - 3*d*n2*n4 - 2*n1*n2*n4 + 28*n3*n4 - 11*d*n3*n4 - 
      2*n1*n3*n4 + 4*n2*n3*n4 + 4*n3^2*n4 + 32*n4^2 - 13*d*n4^2 - 2*n1*n4^2 + 
      4*n2*n4^2 + 10*n3*n4^2 + 6*n4^3 + 8*n4*n5 - 4*d*n4*n5 - 4*n1*n4*n5 + 
      6*n3*n4*n5 + 6*n4^2*n5)*j[p4, n1, n2, n3, 1 + n4, 1 + n5, 1, -1, 1, 0, 
      1, 1, 0, 1, 0])/((-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 
      4*d*n1 - 4*n1^2 + 12*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 
      8*n2*n3 + 28*n4 - 12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 
      8*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((-648*n4 + 796*d*n4 - 322*d^2*n4 + 43*d^3*n4 + 32*n1*n4 - 12*d*n1*n4 + 
      32*n1^2*n4 - 12*d*n1^2*n4 - 168*n2*n4 + 146*d*n2*n4 - 31*d^2*n2*n4 + 
      36*n1*n2*n4 - 12*d*n1*n2*n4 + 4*n1^2*n2*n4 - 12*n2^2*n4 + 6*d*n2^2*n4 + 
      4*n1*n2^2*n4 - 652*n3*n4 + 512*d*n3*n4 - 100*d^2*n3*n4 - 24*n1*n3*n4 + 
      12*d*n1*n3*n4 + 8*n1^2*n3*n4 - 144*n2*n3*n4 + 58*d*n2*n3*n4 + 
      4*n1*n2*n3*n4 - 8*n2^2*n3*n4 - 188*n3^2*n4 + 72*d*n3^2*n4 - 
      8*n1*n3^2*n4 - 24*n2*n3^2*n4 - 16*n3^3*n4 - 620*n4^2 + 484*d*n4^2 - 
      94*d^2*n4^2 - 56*n1*n4^2 + 24*d*n1*n4^2 + 8*n1^2*n4^2 - 140*n2*n4^2 + 
      56*d*n2*n4^2 - 8*n2^2*n4^2 - 344*n3*n4^2 + 132*d*n3*n4^2 - 
      24*n1*n3*n4^2 - 44*n2*n3*n4^2 - 44*n3^2*n4^2 - 148*n4^3 + 56*d*n4^3 - 
      16*n1*n4^3 - 20*n2*n4^3 - 36*n3*n4^3 - 8*n4^4 - 232*n4*n5 + 
      200*d*n4*n5 - 42*d^2*n4*n5 + 8*n1*n4*n5 + 8*n1^2*n4*n5 - 32*n2*n4*n5 + 
      16*d*n2*n4*n5 + 8*n1*n2*n4*n5 - 180*n3*n4*n5 + 72*d*n3*n4*n5 - 
      8*n1*n3*n4*n5 - 20*n2*n3*n4*n5 - 28*n3^2*n4*n5 - 164*n4^2*n5 + 
      64*d*n4^2*n5 - 16*n1*n4^2*n5 - 20*n2*n4^2*n5 - 44*n3*n4^2*n5 - 
      16*n4^3*n5 - 16*n4*n5^2 + 8*d*n4*n5^2 - 8*n3*n4*n5^2 - 8*n4^2*n5^2)*
     j[p4, n1, n2, n3, 1 + n4, 1 + n5, 1, 0, 0, -1, 1, 1, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 
      160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
      208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
      74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
      34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((-100*n4 + 88*d*n4 - 19*d^2*n4 + 16*n1*n4 - 4*d*n1*n4 + 
      4*n1^2*n4 - 24*n2*n4 + 12*d*n2*n4 + 8*n1*n2*n4 - 76*n3*n4 + 
      30*d*n3*n4 - 4*n1*n3*n4 - 16*n2*n3*n4 - 8*n3^2*n4 - 92*n4^2 + 
      38*d*n4^2 - 4*n1*n4^2 - 16*n2*n4^2 - 24*n3*n4^2 - 16*n4^3 - 24*n4*n5 + 
      12*d*n4*n5 + 8*n1*n4*n5 - 16*n3*n4*n5 - 16*n4^2*n5)*
     j[p4, n1, n2, n3, 1 + n4, 1 + n5, 1, 0, 1, -1, 1, 1, 0, 1, 0])/
    (2*(-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 
      12*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((64*n3 - 56*d*n3 + 12*d^2*n3 - 24*n1*n3 + 
      8*d*n1*n3 + 12*n2*n3 - 6*d*n2*n3 - 4*n1*n2*n3 + 56*n3^2 - 22*d*n3^2 - 
      4*n1*n3^2 + 8*n2*n3^2 + 8*n3^3 + 64*n3*n4 - 26*d*n3*n4 - 4*n1*n3*n4 + 
      8*n2*n3*n4 + 20*n3^2*n4 + 12*n3*n4^2 + 16*n3*n5 - 8*d*n3*n5 - 
      8*n1*n3*n5 + 12*n3^2*n5 + 12*n3*n4*n5)*j[p4, n1, n2, 1 + n3, -1 + n4, 
      1 + n5, 1, 0, 0, 0, 1, 1, 0, 1, 1])/(-504 + 628*d - 258*d^2 + 35*d^3 - 
     184*n1 + 160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
     208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
     8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
     8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
     40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
     74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
     76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
     40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
     24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
     34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
     8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
     8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
     24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((64*n3 - 56*d*n3 + 12*d^2*n3 - 24*n1*n3 + 8*d*n1*n3 + 12*n2*n3 - 
      6*d*n2*n3 - 4*n1*n2*n3 + 56*n3^2 - 22*d*n3^2 - 4*n1*n3^2 + 8*n2*n3^2 + 
      8*n3^3 + 64*n3*n4 - 26*d*n3*n4 - 4*n1*n3*n4 + 8*n2*n3*n4 + 20*n3^2*n4 + 
      12*n3*n4^2 + 16*n3*n5 - 8*d*n3*n5 - 8*n1*n3*n5 + 12*n3^2*n5 + 
      12*n3*n4*n5)*j[p4, n1, n2, 1 + n3, -1 + n4, 1 + n5, 1, 0, 1, 0, 0, 1, 
      0, 1, 1])/(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 160*d*n1 - 
     34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 208*d*n2 - 
     44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 
     352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 
     176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 
     16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 74*d^2*n4 - 
     184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 76*d*n2*n4 - 
     24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 
     40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 
     24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 34*d^2*n5 - 
     32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
     112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
     128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
     16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-64*n3 + 56*d*n3 - 12*d^2*n3 + 24*n1*n3 - 8*d*n1*n3 - 12*n2*n3 + 
      6*d*n2*n3 + 4*n1*n2*n3 - 56*n3^2 + 22*d*n3^2 + 4*n1*n3^2 - 8*n2*n3^2 - 
      8*n3^3 - 64*n3*n4 + 26*d*n3*n4 + 4*n1*n3*n4 - 8*n2*n3*n4 - 20*n3^2*n4 - 
      12*n3*n4^2 - 16*n3*n5 + 8*d*n3*n5 + 8*n1*n3*n5 - 12*n3^2*n5 - 
      12*n3*n4*n5)*j[p4, n1, n2, 1 + n3, -1 + n4, 1 + n5, 1, 0, 1, 0, 1, 0, 
      0, 1, 1])/(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 160*d*n1 - 
     34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 208*d*n2 - 
     44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 
     352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 
     176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 
     16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 74*d^2*n4 - 
     184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 76*d*n2*n4 - 
     24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 
     40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 
     24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 34*d^2*n5 - 
     32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
     112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
     128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
     16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-128*n3 + 112*d*n3 - 24*d^2*n3 + 48*n1*n3 - 16*d*n1*n3 - 24*n2*n3 + 
      12*d*n2*n3 + 8*n1*n2*n3 - 112*n3^2 + 44*d*n3^2 + 8*n1*n3^2 - 
      16*n2*n3^2 - 16*n3^3 - 128*n3*n4 + 52*d*n3*n4 + 8*n1*n3*n4 - 
      16*n2*n3*n4 - 40*n3^2*n4 - 24*n3*n4^2 - 32*n3*n5 + 16*d*n3*n5 + 
      16*n1*n3*n5 - 24*n3^2*n5 - 24*n3*n4*n5)*j[p4, n1, n2, 1 + n3, -1 + n4, 
      1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/(-504 + 628*d - 258*d^2 + 35*d^3 - 
     184*n1 + 160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
     208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
     8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
     8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
     40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
     74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
     76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
     40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
     24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
     34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
     8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
     8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
     24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-216*n3 + 292*d*n3 - 130*d^2*n3 + 19*d^3*n3 - 616*n1*n3 + 504*d*n1*n3 - 
      102*d^2*n1*n3 + 56*n1^2*n3 - 12*d*n1^2*n3 + 24*n1^3*n3 - 384*n2*n3 + 
      332*d*n2*n3 - 70*d^2*n2*n3 - 24*n1*n2*n3 + 24*d*n1*n2*n3 + 
      40*n1^2*n2*n3 - 48*n2^2*n3 + 24*d*n2^2*n3 + 16*n1*n2^2*n3 + 248*n3^2 - 
      196*d*n3^2 + 38*d^2*n3^2 - 456*n1*n3^2 + 168*d*n1*n3^2 - 40*n1^2*n3^2 - 
      240*n2*n3^2 + 88*d*n2*n3^2 - 80*n1*n2*n3^2 - 32*n2^2*n3^2 + 256*n3^3 - 
      96*d*n3^3 - 32*n1*n3^3 + 32*n3^4 - 152*n3*n4 + 148*d*n3*n4 - 
      34*d^2*n3*n4 - 440*n1*n3*n4 + 168*d*n1*n3*n4 - 40*n1^2*n3*n4 - 
      296*n2*n3*n4 + 116*d*n2*n3*n4 - 72*n1*n2*n3*n4 - 32*n2^2*n3*n4 + 
      232*n3^2*n4 - 84*d*n3^2*n4 - 72*n1*n3^2*n4 - 32*n2*n3^2*n4 + 
      64*n3^3*n4 - 40*n3*n4^2 + 20*d*n3*n4^2 - 40*n1*n3*n4^2 - 
      32*n2*n3*n4^2 + 24*n3^2*n4^2 - 8*n3*n4^3 - 88*n3*n5 + 80*d*n3*n5 - 
      18*d^2*n3*n5 - 112*n1*n3*n5 + 48*d*n1*n3*n5 + 8*n1^2*n3*n5 - 
      56*n2*n3*n5 + 28*d*n2*n3*n5 + 8*n1*n2*n3*n5 + 24*n3^2*n5 - 
      12*d*n3^2*n5 - 56*n1*n3^2*n5 - 32*n2*n3^2*n5 + 32*n3^3*n5 - 
      56*n3*n4*n5 + 28*d*n3*n4*n5 - 40*n1*n3*n4*n5 - 32*n2*n3*n4*n5 + 
      16*n3^2*n4*n5 - 16*n3*n4^2*n5 - 16*n3*n5^2 + 8*d*n3*n5^2 - 
      8*n3^2*n5^2 - 8*n3*n4*n5^2)*j[p4, n1, n2, 1 + n3, n4, 1 + n5, 1, -1, 0, 
      0, 1, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5)*(-504 + 628*d - 258*d^2 + 
      35*d^3 - 184*n1 + 160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 
      240*n2 + 208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 
      12*d*n2^2 + 8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 
      64*d*n1*n3 - 8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 
      16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 
      372*d*n4 - 74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
      34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((-792*n3 + 964*d*n3 - 386*d^2*n3 + 51*d^3*n3 + 
      248*n1*n3 - 184*d*n1*n3 + 34*d^2*n1*n3 + 24*n1^2*n3 - 12*d*n1^2*n3 - 
      8*n1^3*n3 - 96*n2*n3 + 84*d*n2*n3 - 18*d^2*n2*n3 + 56*n1*n2*n3 - 
      24*d*n1*n2*n3 - 8*n1^2*n2*n3 - 952*n3^2 + 748*d*n3^2 - 146*d^2*n3^2 + 
      120*n1*n3^2 - 40*d*n1*n3^2 + 24*n1^2*n3^2 - 112*n2*n3^2 + 
      48*d*n2*n3^2 + 32*n1*n2*n3^2 - 336*n3^3 + 128*d*n3^3 - 32*n2*n3^3 - 
      32*n3^4 - 776*n3*n4 + 596*d*n3*n4 - 114*d^2*n3*n4 + 72*n1*n3*n4 - 
      24*d*n1*n3*n4 + 24*n1^2*n3*n4 - 88*n2*n3*n4 + 36*d*n2*n3*n4 + 
      24*n1*n2*n3*n4 - 536*n3^2*n4 + 204*d*n3^2*n4 - 8*n1*n3^2*n4 - 
      48*n2*n3^2*n4 - 80*n3^3*n4 - 184*n3*n4^2 + 68*d*n3*n4^2 - 
      8*n1*n3*n4^2 - 16*n2*n3*n4^2 - 56*n3^2*n4^2 - 8*n3*n4^3 - 280*n3*n5 + 
      240*d*n3*n5 - 50*d^2*n3*n5 + 48*n1*n3*n5 - 16*d*n1*n3*n5 + 
      8*n1^2*n3*n5 - 24*n2*n3*n5 + 12*d*n2*n3*n5 + 8*n1*n2*n3*n5 - 
      248*n3^2*n5 + 100*d*n3^2*n5 + 8*n1*n3^2*n5 - 16*n2*n3^2*n5 - 
      48*n3^3*n5 - 200*n3*n4*n5 + 76*d*n3*n4*n5 - 8*n1*n3*n4*n5 - 
      16*n2*n3*n4*n5 - 64*n3^2*n4*n5 - 16*n3*n4^2*n5 - 16*n3*n5^2 + 
      8*d*n3*n5^2 - 8*n3^2*n5^2 - 8*n3*n4*n5^2)*j[p4, n1, n2, 1 + n3, n4, 
      1 + n5, 1, -1, 1, 0, 0, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5)*
     (-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 160*d*n1 - 34*d^2*n1 + 
      40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 208*d*n2 - 44*d^2*n2 + 
      16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 352*n3 + 
      276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 176*n2*n3 + 
      68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
      16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 74*d^2*n4 - 184*n1*n4 + 
      72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
      16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
      8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 
      16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 34*d^2*n5 - 32*n1*n5 + 
      16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
      112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
      128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
      16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((792*n3 - 964*d*n3 + 386*d^2*n3 - 51*d^3*n3 - 248*n1*n3 + 184*d*n1*n3 - 
      34*d^2*n1*n3 - 24*n1^2*n3 + 12*d*n1^2*n3 + 8*n1^3*n3 + 96*n2*n3 - 
      84*d*n2*n3 + 18*d^2*n2*n3 - 56*n1*n2*n3 + 24*d*n1*n2*n3 + 
      8*n1^2*n2*n3 + 952*n3^2 - 748*d*n3^2 + 146*d^2*n3^2 - 120*n1*n3^2 + 
      40*d*n1*n3^2 - 24*n1^2*n3^2 + 112*n2*n3^2 - 48*d*n2*n3^2 - 
      32*n1*n2*n3^2 + 336*n3^3 - 128*d*n3^3 + 32*n2*n3^3 + 32*n3^4 + 
      776*n3*n4 - 596*d*n3*n4 + 114*d^2*n3*n4 - 72*n1*n3*n4 + 24*d*n1*n3*n4 - 
      24*n1^2*n3*n4 + 88*n2*n3*n4 - 36*d*n2*n3*n4 - 24*n1*n2*n3*n4 + 
      536*n3^2*n4 - 204*d*n3^2*n4 + 8*n1*n3^2*n4 + 48*n2*n3^2*n4 + 
      80*n3^3*n4 + 184*n3*n4^2 - 68*d*n3*n4^2 + 8*n1*n3*n4^2 + 
      16*n2*n3*n4^2 + 56*n3^2*n4^2 + 8*n3*n4^3 + 280*n3*n5 - 240*d*n3*n5 + 
      50*d^2*n3*n5 - 48*n1*n3*n5 + 16*d*n1*n3*n5 - 8*n1^2*n3*n5 + 
      24*n2*n3*n5 - 12*d*n2*n3*n5 - 8*n1*n2*n3*n5 + 248*n3^2*n5 - 
      100*d*n3^2*n5 - 8*n1*n3^2*n5 + 16*n2*n3^2*n5 + 48*n3^3*n5 + 
      200*n3*n4*n5 - 76*d*n3*n4*n5 + 8*n1*n3*n4*n5 + 16*n2*n3*n4*n5 + 
      64*n3^2*n4*n5 + 16*n3*n4^2*n5 + 16*n3*n5^2 - 8*d*n3*n5^2 + 
      8*n3^2*n5^2 + 8*n3*n4*n5^2)*j[p4, n1, n2, 1 + n3, n4, 1 + n5, 1, -1, 1, 
      0, 1, 0, 0, 1, 1])/(2*(-3 + d - n4 - n5)*(-504 + 628*d - 258*d^2 + 
      35*d^3 - 184*n1 + 160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 
      240*n2 + 208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 
      12*d*n2^2 + 8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 
      64*d*n1*n3 - 8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 
      16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 
      372*d*n4 - 74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
      34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((-216*n3 + 292*d*n3 - 130*d^2*n3 + 19*d^3*n3 - 
      616*n1*n3 + 504*d*n1*n3 - 102*d^2*n1*n3 + 56*n1^2*n3 - 12*d*n1^2*n3 + 
      24*n1^3*n3 - 384*n2*n3 + 332*d*n2*n3 - 70*d^2*n2*n3 - 24*n1*n2*n3 + 
      24*d*n1*n2*n3 + 40*n1^2*n2*n3 - 48*n2^2*n3 + 24*d*n2^2*n3 + 
      16*n1*n2^2*n3 + 248*n3^2 - 196*d*n3^2 + 38*d^2*n3^2 - 456*n1*n3^2 + 
      168*d*n1*n3^2 - 40*n1^2*n3^2 - 240*n2*n3^2 + 88*d*n2*n3^2 - 
      80*n1*n2*n3^2 - 32*n2^2*n3^2 + 256*n3^3 - 96*d*n3^3 - 32*n1*n3^3 + 
      32*n3^4 - 152*n3*n4 + 148*d*n3*n4 - 34*d^2*n3*n4 - 440*n1*n3*n4 + 
      168*d*n1*n3*n4 - 40*n1^2*n3*n4 - 296*n2*n3*n4 + 116*d*n2*n3*n4 - 
      72*n1*n2*n3*n4 - 32*n2^2*n3*n4 + 232*n3^2*n4 - 84*d*n3^2*n4 - 
      72*n1*n3^2*n4 - 32*n2*n3^2*n4 + 64*n3^3*n4 - 40*n3*n4^2 + 
      20*d*n3*n4^2 - 40*n1*n3*n4^2 - 32*n2*n3*n4^2 + 24*n3^2*n4^2 - 
      8*n3*n4^3 - 88*n3*n5 + 80*d*n3*n5 - 18*d^2*n3*n5 - 112*n1*n3*n5 + 
      48*d*n1*n3*n5 + 8*n1^2*n3*n5 - 56*n2*n3*n5 + 28*d*n2*n3*n5 + 
      8*n1*n2*n3*n5 + 24*n3^2*n5 - 12*d*n3^2*n5 - 56*n1*n3^2*n5 - 
      32*n2*n3^2*n5 + 32*n3^3*n5 - 56*n3*n4*n5 + 28*d*n3*n4*n5 - 
      40*n1*n3*n4*n5 - 32*n2*n3*n4*n5 + 16*n3^2*n4*n5 - 16*n3*n4^2*n5 - 
      16*n3*n5^2 + 8*d*n3*n5^2 - 8*n3^2*n5^2 - 8*n3*n4*n5^2)*
     j[p4, n1, n2, 1 + n3, n4, 1 + n5, 1, -1, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4 - n5)*(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 
      160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
      208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
      74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
      34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((64*n3 - 56*d*n3 + 12*d^2*n3 - 24*n1*n3 + 8*d*n1*n3 + 
      12*n2*n3 - 6*d*n2*n3 - 4*n1*n2*n3 + 56*n3^2 - 22*d*n3^2 - 4*n1*n3^2 + 
      8*n2*n3^2 + 8*n3^3 + 64*n3*n4 - 26*d*n3*n4 - 4*n1*n3*n4 + 8*n2*n3*n4 + 
      20*n3^2*n4 + 12*n3*n4^2 + 16*n3*n5 - 8*d*n3*n5 - 8*n1*n3*n5 + 
      12*n3^2*n5 + 12*n3*n4*n5)*j[p4, n1, n2, 1 + n3, n4, 1 + n5, 1, -1, 1, 
      0, 1, 1, 0, 1, 0])/(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 
     160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
     208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
     8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
     8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
     40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
     74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
     76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
     40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
     24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
     34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
     8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
     8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
     24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((648*n3 - 796*d*n3 + 322*d^2*n3 - 43*d^3*n3 - 32*n1*n3 + 12*d*n1*n3 - 
      32*n1^2*n3 + 12*d*n1^2*n3 + 168*n2*n3 - 146*d*n2*n3 + 31*d^2*n2*n3 - 
      36*n1*n2*n3 + 12*d*n1*n2*n3 - 4*n1^2*n2*n3 + 12*n2^2*n3 - 6*d*n2^2*n3 - 
      4*n1*n2^2*n3 + 652*n3^2 - 512*d*n3^2 + 100*d^2*n3^2 + 24*n1*n3^2 - 
      12*d*n1*n3^2 - 8*n1^2*n3^2 + 144*n2*n3^2 - 58*d*n2*n3^2 - 
      4*n1*n2*n3^2 + 8*n2^2*n3^2 + 188*n3^3 - 72*d*n3^3 + 8*n1*n3^3 + 
      24*n2*n3^3 + 16*n3^4 + 620*n3*n4 - 484*d*n3*n4 + 94*d^2*n3*n4 + 
      56*n1*n3*n4 - 24*d*n1*n3*n4 - 8*n1^2*n3*n4 + 140*n2*n3*n4 - 
      56*d*n2*n3*n4 + 8*n2^2*n3*n4 + 344*n3^2*n4 - 132*d*n3^2*n4 + 
      24*n1*n3^2*n4 + 44*n2*n3^2*n4 + 44*n3^3*n4 + 148*n3*n4^2 - 
      56*d*n3*n4^2 + 16*n1*n3*n4^2 + 20*n2*n3*n4^2 + 36*n3^2*n4^2 + 
      8*n3*n4^3 + 232*n3*n5 - 200*d*n3*n5 + 42*d^2*n3*n5 - 8*n1*n3*n5 - 
      8*n1^2*n3*n5 + 32*n2*n3*n5 - 16*d*n2*n3*n5 - 8*n1*n2*n3*n5 + 
      180*n3^2*n5 - 72*d*n3^2*n5 + 8*n1*n3^2*n5 + 20*n2*n3^2*n5 + 
      28*n3^3*n5 + 164*n3*n4*n5 - 64*d*n3*n4*n5 + 16*n1*n3*n4*n5 + 
      20*n2*n3*n4*n5 + 44*n3^2*n4*n5 + 16*n3*n4^2*n5 + 16*n3*n5^2 - 
      8*d*n3*n5^2 + 8*n3^2*n5^2 + 8*n3*n4*n5^2)*j[p4, n1, n2, 1 + n3, n4, 
      1 + n5, 1, 0, 0, 0, 1, 1, -1, 1, 1])/((-3 + d - n4 - n5)*
     (-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 160*d*n1 - 34*d^2*n1 + 
      40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 208*d*n2 - 44*d^2*n2 + 
      16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 352*n3 + 
      276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 176*n2*n3 + 
      68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
      16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 74*d^2*n4 - 184*n1*n4 + 
      72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
      16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
      8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 
      16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 34*d^2*n5 - 32*n1*n5 + 
      16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
      112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
      128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
      16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-1296*n3 + 1592*d*n3 - 644*d^2*n3 + 86*d^3*n3 + 64*n1*n3 - 24*d*n1*n3 + 
      64*n1^2*n3 - 24*d*n1^2*n3 - 336*n2*n3 + 292*d*n2*n3 - 62*d^2*n2*n3 + 
      72*n1*n2*n3 - 24*d*n1*n2*n3 + 8*n1^2*n2*n3 - 24*n2^2*n3 + 
      12*d*n2^2*n3 + 8*n1*n2^2*n3 - 1304*n3^2 + 1024*d*n3^2 - 200*d^2*n3^2 - 
      48*n1*n3^2 + 24*d*n1*n3^2 + 16*n1^2*n3^2 - 288*n2*n3^2 + 
      116*d*n2*n3^2 + 8*n1*n2*n3^2 - 16*n2^2*n3^2 - 376*n3^3 + 144*d*n3^3 - 
      16*n1*n3^3 - 48*n2*n3^3 - 32*n3^4 - 1240*n3*n4 + 968*d*n3*n4 - 
      188*d^2*n3*n4 - 112*n1*n3*n4 + 48*d*n1*n3*n4 + 16*n1^2*n3*n4 - 
      280*n2*n3*n4 + 112*d*n2*n3*n4 - 16*n2^2*n3*n4 - 688*n3^2*n4 + 
      264*d*n3^2*n4 - 48*n1*n3^2*n4 - 88*n2*n3^2*n4 - 88*n3^3*n4 - 
      296*n3*n4^2 + 112*d*n3*n4^2 - 32*n1*n3*n4^2 - 40*n2*n3*n4^2 - 
      72*n3^2*n4^2 - 16*n3*n4^3 - 464*n3*n5 + 400*d*n3*n5 - 84*d^2*n3*n5 + 
      16*n1*n3*n5 + 16*n1^2*n3*n5 - 64*n2*n3*n5 + 32*d*n2*n3*n5 + 
      16*n1*n2*n3*n5 - 360*n3^2*n5 + 144*d*n3^2*n5 - 16*n1*n3^2*n5 - 
      40*n2*n3^2*n5 - 56*n3^3*n5 - 328*n3*n4*n5 + 128*d*n3*n4*n5 - 
      32*n1*n3*n4*n5 - 40*n2*n3*n4*n5 - 88*n3^2*n4*n5 - 32*n3*n4^2*n5 - 
      32*n3*n5^2 + 16*d*n3*n5^2 - 16*n3^2*n5^2 - 16*n3*n4*n5^2)*
     j[p4, n1, n2, 1 + n3, n4, 1 + n5, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 
      160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
      208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
      74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
      34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((648*n3 - 796*d*n3 + 322*d^2*n3 - 43*d^3*n3 - 32*n1*n3 + 
      12*d*n1*n3 - 32*n1^2*n3 + 12*d*n1^2*n3 + 168*n2*n3 - 146*d*n2*n3 + 
      31*d^2*n2*n3 - 36*n1*n2*n3 + 12*d*n1*n2*n3 - 4*n1^2*n2*n3 + 
      12*n2^2*n3 - 6*d*n2^2*n3 - 4*n1*n2^2*n3 + 652*n3^2 - 512*d*n3^2 + 
      100*d^2*n3^2 + 24*n1*n3^2 - 12*d*n1*n3^2 - 8*n1^2*n3^2 + 144*n2*n3^2 - 
      58*d*n2*n3^2 - 4*n1*n2*n3^2 + 8*n2^2*n3^2 + 188*n3^3 - 72*d*n3^3 + 
      8*n1*n3^3 + 24*n2*n3^3 + 16*n3^4 + 620*n3*n4 - 484*d*n3*n4 + 
      94*d^2*n3*n4 + 56*n1*n3*n4 - 24*d*n1*n3*n4 - 8*n1^2*n3*n4 + 
      140*n2*n3*n4 - 56*d*n2*n3*n4 + 8*n2^2*n3*n4 + 344*n3^2*n4 - 
      132*d*n3^2*n4 + 24*n1*n3^2*n4 + 44*n2*n3^2*n4 + 44*n3^3*n4 + 
      148*n3*n4^2 - 56*d*n3*n4^2 + 16*n1*n3*n4^2 + 20*n2*n3*n4^2 + 
      36*n3^2*n4^2 + 8*n3*n4^3 + 232*n3*n5 - 200*d*n3*n5 + 42*d^2*n3*n5 - 
      8*n1*n3*n5 - 8*n1^2*n3*n5 + 32*n2*n3*n5 - 16*d*n2*n3*n5 - 
      8*n1*n2*n3*n5 + 180*n3^2*n5 - 72*d*n3^2*n5 + 8*n1*n3^2*n5 + 
      20*n2*n3^2*n5 + 28*n3^3*n5 + 164*n3*n4*n5 - 64*d*n3*n4*n5 + 
      16*n1*n3*n4*n5 + 20*n2*n3*n4*n5 + 44*n3^2*n4*n5 + 16*n3*n4^2*n5 + 
      16*n3*n5^2 - 8*d*n3*n5^2 + 8*n3^2*n5^2 + 8*n3*n4*n5^2)*
     j[p4, n1, n2, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 0, 1, -1, 1, 1])/
    ((-3 + d - n4 - n5)*(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 
      160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
      208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
      74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
      34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((-648*n3 + 796*d*n3 - 322*d^2*n3 + 43*d^3*n3 + 
      32*n1*n3 - 12*d*n1*n3 + 32*n1^2*n3 - 12*d*n1^2*n3 - 168*n2*n3 + 
      146*d*n2*n3 - 31*d^2*n2*n3 + 36*n1*n2*n3 - 12*d*n1*n2*n3 + 
      4*n1^2*n2*n3 - 12*n2^2*n3 + 6*d*n2^2*n3 + 4*n1*n2^2*n3 - 652*n3^2 + 
      512*d*n3^2 - 100*d^2*n3^2 - 24*n1*n3^2 + 12*d*n1*n3^2 + 8*n1^2*n3^2 - 
      144*n2*n3^2 + 58*d*n2*n3^2 + 4*n1*n2*n3^2 - 8*n2^2*n3^2 - 188*n3^3 + 
      72*d*n3^3 - 8*n1*n3^3 - 24*n2*n3^3 - 16*n3^4 - 620*n3*n4 + 
      484*d*n3*n4 - 94*d^2*n3*n4 - 56*n1*n3*n4 + 24*d*n1*n3*n4 + 
      8*n1^2*n3*n4 - 140*n2*n3*n4 + 56*d*n2*n3*n4 - 8*n2^2*n3*n4 - 
      344*n3^2*n4 + 132*d*n3^2*n4 - 24*n1*n3^2*n4 - 44*n2*n3^2*n4 - 
      44*n3^3*n4 - 148*n3*n4^2 + 56*d*n3*n4^2 - 16*n1*n3*n4^2 - 
      20*n2*n3*n4^2 - 36*n3^2*n4^2 - 8*n3*n4^3 - 232*n3*n5 + 200*d*n3*n5 - 
      42*d^2*n3*n5 + 8*n1*n3*n5 + 8*n1^2*n3*n5 - 32*n2*n3*n5 + 
      16*d*n2*n3*n5 + 8*n1*n2*n3*n5 - 180*n3^2*n5 + 72*d*n3^2*n5 - 
      8*n1*n3^2*n5 - 20*n2*n3^2*n5 - 28*n3^3*n5 - 164*n3*n4*n5 + 
      64*d*n3*n4*n5 - 16*n1*n3*n4*n5 - 20*n2*n3*n4*n5 - 44*n3^2*n4*n5 - 
      16*n3*n4^2*n5 - 16*n3*n5^2 + 8*d*n3*n5^2 - 8*n3^2*n5^2 - 8*n3*n4*n5^2)*
     j[p4, n1, n2, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 0, -1, 1, 1])/
    ((-3 + d - n4 - n5)*(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 
      160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
      208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
      74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
      34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) - (n3*j[p4, n1, n2, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 
      -1, 0, 1])/(-3 + d - n4 - n5) + 
   ((-1800*n3 + 2220*d*n3 - 902*d^2*n3 + 121*d^3*n3 - 120*n1*n3 + 
      136*d*n1*n3 - 34*d^2*n1*n3 + 104*n1^2*n3 - 36*d*n1^2*n3 + 8*n1^3*n3 - 
      576*n2*n3 + 500*d*n2*n3 - 106*d^2*n2*n3 + 88*n1*n2*n3 - 24*d*n1*n2*n3 + 
      24*n1^2*n2*n3 - 48*n2^2*n3 + 24*d*n2^2*n3 + 16*n1*n2^2*n3 - 1656*n3^2 + 
      1300*d*n3^2 - 254*d^2*n3^2 - 216*n1*n3^2 + 88*d*n1*n3^2 + 8*n1^2*n3^2 - 
      464*n2*n3^2 + 184*d*n2*n3^2 - 16*n1*n2*n3^2 - 32*n2^2*n3^2 - 416*n3^3 + 
      160*d*n3^3 - 32*n1*n3^3 - 64*n2*n3^3 - 32*n3^4 - 1704*n3*n4 + 
      1340*d*n3*n4 - 262*d^2*n3*n4 - 296*n1*n3*n4 + 120*d*n1*n3*n4 + 
      8*n1^2*n3*n4 - 472*n2*n3*n4 + 188*d*n2*n3*n4 - 24*n1*n2*n3*n4 - 
      32*n2^2*n3*n4 - 840*n3^2*n4 + 324*d*n3^2*n4 - 88*n1*n3^2*n4 - 
      128*n2*n3^2*n4 - 96*n3^3*n4 - 408*n3*n4^2 + 156*d*n3*n4^2 - 
      56*n1*n3*n4^2 - 64*n2*n3*n4^2 - 88*n3^2*n4^2 - 24*n3*n4^3 - 648*n3*n5 + 
      560*d*n3*n5 - 118*d^2*n3*n5 - 16*n1*n3*n5 + 16*d*n1*n3*n5 + 
      24*n1^2*n3*n5 - 104*n2*n3*n5 + 52*d*n2*n3*n5 + 24*n1*n2*n3*n5 - 
      472*n3^2*n5 + 188*d*n3^2*n5 - 40*n1*n3^2*n5 - 64*n2*n3^2*n5 - 
      64*n3^3*n5 - 456*n3*n4*n5 + 180*d*n3*n4*n5 - 56*n1*n3*n4*n5 - 
      64*n2*n3*n4*n5 - 112*n3^2*n4*n5 - 48*n3*n4^2*n5 - 48*n3*n5^2 + 
      24*d*n3*n5^2 - 24*n3^2*n5^2 - 24*n3*n4*n5^2)*j[p4, n1, n2, 1 + n3, n4, 
      1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/(2*(-3 + d - n4 - n5)*
     (-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 160*d*n1 - 34*d^2*n1 + 
      40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 208*d*n2 - 44*d^2*n2 + 
      16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 352*n3 + 
      276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 176*n2*n3 + 
      68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
      16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 74*d^2*n4 - 184*n1*n4 + 
      72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
      16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
      8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 
      16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 34*d^2*n5 - 32*n1*n5 + 
      16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
      112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
      128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
      16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2)) + 
   ((-64*n3 + 56*d*n3 - 12*d^2*n3 + 24*n1*n3 - 8*d*n1*n3 - 12*n2*n3 + 
      6*d*n2*n3 + 4*n1*n2*n3 - 56*n3^2 + 22*d*n3^2 + 4*n1*n3^2 - 8*n2*n3^2 - 
      8*n3^3 - 64*n3*n4 + 26*d*n3*n4 + 4*n1*n3*n4 - 8*n2*n3*n4 - 20*n3^2*n4 - 
      12*n3*n4^2 - 16*n3*n5 + 8*d*n3*n5 + 8*n1*n3*n5 - 12*n3^2*n5 - 
      12*n3*n4*n5)*j[p4, n1, n2, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 
      0])/(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 160*d*n1 - 34*d^2*n1 + 
     40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 208*d*n2 - 44*d^2*n2 + 
     16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 352*n3 + 
     276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 176*n2*n3 + 
     68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
     16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 74*d^2*n4 - 184*n1*n4 + 
     72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
     16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
     8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 
     16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 34*d^2*n5 - 32*n1*n5 + 
     16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
     112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
     128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
     16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((64*n2 - 56*d*n2 + 12*d^2*n2 - 24*n1*n2 + 8*d*n1*n2 + 12*n2^2 - 
      6*d*n2^2 - 4*n1*n2^2 + 56*n2*n3 - 22*d*n2*n3 - 4*n1*n2*n3 + 8*n2^2*n3 + 
      8*n2*n3^2 + 64*n2*n4 - 26*d*n2*n4 - 4*n1*n2*n4 + 8*n2^2*n4 + 
      20*n2*n3*n4 + 12*n2*n4^2 + 16*n2*n5 - 8*d*n2*n5 - 8*n1*n2*n5 + 
      12*n2*n3*n5 + 12*n2*n4*n5)*j[p4, n1, 1 + n2, -1 + n3, n4, 1 + n5, 0, 0, 
      1, 0, 1, 1, 0, 1, 1])/(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 
     160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
     208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
     8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
     8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
     40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
     74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
     76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
     40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
     24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
     34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
     8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
     8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
     24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((28*n2 - 24*d*n2 + 5*d^2*n2 - 4*n1*n2 + 2*d*n1*n2 + 22*n2*n3 - 
      9*d*n2*n3 - 2*n1*n2*n3 + 4*n2*n3^2 + 22*n2*n4 - 9*d*n2*n4 - 
      2*n1*n2*n4 + 8*n2*n3*n4 + 4*n2*n4^2 + 8*n2*n5 - 4*d*n2*n5 + 
      4*n2*n3*n5 + 4*n2*n4*n5)*j[p4, n1, 1 + n2, -1 + n3, n4, 1 + n5, 1, 0, 
      0, 0, 1, 1, 0, 1, 1])/((-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 
      4*d*n1 - 4*n1^2 + 12*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 
      8*n2*n3 + 28*n4 - 12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 
      8*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((100*n2 - 88*d*n2 + 19*d^2*n2 - 16*n1*n2 + 4*d*n1*n2 - 4*n1^2*n2 + 
      24*n2^2 - 12*d*n2^2 - 8*n1*n2^2 + 76*n2*n3 - 30*d*n2*n3 + 4*n1*n2*n3 + 
      16*n2^2*n3 + 8*n2*n3^2 + 92*n2*n4 - 38*d*n2*n4 + 4*n1*n2*n4 + 
      16*n2^2*n4 + 24*n2*n3*n4 + 16*n2*n4^2 + 24*n2*n5 - 12*d*n2*n5 - 
      8*n1*n2*n5 + 16*n2*n3*n5 + 16*n2*n4*n5)*j[p4, n1, 1 + n2, -1 + n3, n4, 
      1 + n5, 1, 0, 1, 0, 0, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5)*
     (36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 12*n2 - 6*d*n2 - 4*n1*n2 + 
      20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 12*d*n4 + 8*n1*n4 + 
      8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((-64*n2 + 56*d*n2 - 12*d^2*n2 + 24*n1*n2 - 8*d*n1*n2 - 12*n2^2 + 
      6*d*n2^2 + 4*n1*n2^2 - 56*n2*n3 + 22*d*n2*n3 + 4*n1*n2*n3 - 8*n2^2*n3 - 
      8*n2*n3^2 - 64*n2*n4 + 26*d*n2*n4 + 4*n1*n2*n4 - 8*n2^2*n4 - 
      20*n2*n3*n4 - 12*n2*n4^2 - 16*n2*n5 + 8*d*n2*n5 + 8*n1*n2*n5 - 
      12*n2*n3*n5 - 12*n2*n4*n5)*j[p4, n1, 1 + n2, n3, n4, n5, 1, 0, 0, 0, 1, 
      1, 0, 1, 1])/(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 160*d*n1 - 
     34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 208*d*n2 - 
     44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 
     352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 
     176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 
     16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 74*d^2*n4 - 
     184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 76*d*n2*n4 - 
     24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 
     40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 
     24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 34*d^2*n5 - 
     32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
     112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
     128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
     16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-64*n2 + 56*d*n2 - 12*d^2*n2 + 24*n1*n2 - 8*d*n1*n2 - 12*n2^2 + 
      6*d*n2^2 + 4*n1*n2^2 - 56*n2*n3 + 22*d*n2*n3 + 4*n1*n2*n3 - 8*n2^2*n3 - 
      8*n2*n3^2 - 64*n2*n4 + 26*d*n2*n4 + 4*n1*n2*n4 - 8*n2^2*n4 - 
      20*n2*n3*n4 - 12*n2*n4^2 - 16*n2*n5 + 8*d*n2*n5 + 8*n1*n2*n5 - 
      12*n2*n3*n5 - 12*n2*n4*n5)*j[p4, n1, 1 + n2, n3, n4, n5, 1, 0, 1, 0, 0, 
      1, 0, 1, 1])/(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 160*d*n1 - 
     34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 208*d*n2 - 
     44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 
     352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 
     176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 
     16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 74*d^2*n4 - 
     184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 76*d*n2*n4 - 
     24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 
     40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 
     24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 34*d^2*n5 - 
     32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
     112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
     128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
     16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-128*n2 + 112*d*n2 - 24*d^2*n2 + 48*n1*n2 - 16*d*n1*n2 - 24*n2^2 + 
      12*d*n2^2 + 8*n1*n2^2 - 112*n2*n3 + 44*d*n2*n3 + 8*n1*n2*n3 - 
      16*n2^2*n3 - 16*n2*n3^2 - 128*n2*n4 + 52*d*n2*n4 + 8*n1*n2*n4 - 
      16*n2^2*n4 - 40*n2*n3*n4 - 24*n2*n4^2 - 32*n2*n5 + 16*d*n2*n5 + 
      16*n1*n2*n5 - 24*n2*n3*n5 - 24*n2*n4*n5)*j[p4, n1, 1 + n2, n3, n4, n5, 
      1, 0, 1, 0, 1, 1, 0, 0, 1])/(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 
     160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
     208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
     8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
     8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
     40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
     74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
     76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
     40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
     24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
     34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
     8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
     8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
     24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((128*n2 - 112*d*n2 + 24*d^2*n2 - 48*n1*n2 + 16*d*n1*n2 + 24*n2^2 - 
      12*d*n2^2 - 8*n1*n2^2 + 112*n2*n3 - 44*d*n2*n3 - 8*n1*n2*n3 + 
      16*n2^2*n3 + 16*n2*n3^2 + 128*n2*n4 - 52*d*n2*n4 - 8*n1*n2*n4 + 
      16*n2^2*n4 + 40*n2*n3*n4 + 24*n2*n4^2 + 32*n2*n5 - 16*d*n2*n5 - 
      16*n1*n2*n5 + 24*n2*n3*n5 + 24*n2*n4*n5)*j[p4, n1, 1 + n2, n3, n4, n5, 
      1, 0, 1, 0, 1, 1, 0, 1, 1])/(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 
     160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
     208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
     8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
     8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
     40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
     74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
     76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
     40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
     24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
     34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
     8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
     8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
     24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-64*n2 + 56*d*n2 - 12*d^2*n2 + 24*n1*n2 - 8*d*n1*n2 - 12*n2^2 + 
      6*d*n2^2 + 4*n1*n2^2 - 56*n2*n3 + 22*d*n2*n3 + 4*n1*n2*n3 - 8*n2^2*n3 - 
      8*n2*n3^2 - 64*n2*n4 + 26*d*n2*n4 + 4*n1*n2*n4 - 8*n2^2*n4 - 
      20*n2*n3*n4 - 12*n2*n4^2 - 16*n2*n5 + 8*d*n2*n5 + 8*n1*n2*n5 - 
      12*n2*n3*n5 - 12*n2*n4*n5)*j[p4, n1, 1 + n2, n3, n4, 1 + n5, 0, -1, 1, 
      0, 1, 1, 0, 1, 1])/(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 
     160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
     208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
     8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
     8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
     40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
     74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
     76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
     40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
     24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
     34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
     8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
     8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
     24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((64*n2 - 56*d*n2 + 12*d^2*n2 - 24*n1*n2 + 8*d*n1*n2 + 12*n2^2 - 
      6*d*n2^2 - 4*n1*n2^2 + 56*n2*n3 - 22*d*n2*n3 - 4*n1*n2*n3 + 8*n2^2*n3 + 
      8*n2*n3^2 + 64*n2*n4 - 26*d*n2*n4 - 4*n1*n2*n4 + 8*n2^2*n4 + 
      20*n2*n3*n4 + 12*n2*n4^2 + 16*n2*n5 - 8*d*n2*n5 - 8*n1*n2*n5 + 
      12*n2*n3*n5 + 12*n2*n4*n5)*j[p4, n1, 1 + n2, n3, n4, 1 + n5, 0, 0, 1, 
      0, 1, 1, -1, 1, 1])/(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 
     160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
     208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
     8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
     8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
     40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
     74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
     76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
     40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
     24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
     34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
     8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
     8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
     24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-128*n2 + 112*d*n2 - 24*d^2*n2 + 48*n1*n2 - 16*d*n1*n2 - 24*n2^2 + 
      12*d*n2^2 + 8*n1*n2^2 - 112*n2*n3 + 44*d*n2*n3 + 8*n1*n2*n3 - 
      16*n2^2*n3 - 16*n2*n3^2 - 128*n2*n4 + 52*d*n2*n4 + 8*n1*n2*n4 - 
      16*n2^2*n4 - 40*n2*n3*n4 - 24*n2*n4^2 - 32*n2*n5 + 16*d*n2*n5 + 
      16*n1*n2*n5 - 24*n2*n3*n5 - 24*n2*n4*n5)*j[p4, n1, 1 + n2, n3, n4, 
      1 + n5, 0, 0, 1, 0, 1, 1, 0, 1, 1])/(-504 + 628*d - 258*d^2 + 35*d^3 - 
     184*n1 + 160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
     208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
     8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
     8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
     40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
     74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
     76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
     40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
     24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
     34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
     8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
     8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
     24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-56*n2 + 48*d*n2 - 10*d^2*n2 + 8*n1*n2 - 4*d*n1*n2 - 44*n2*n3 + 
      18*d*n2*n3 + 4*n1*n2*n3 - 8*n2*n3^2 - 44*n2*n4 + 18*d*n2*n4 + 
      4*n1*n2*n4 - 16*n2*n3*n4 - 8*n2*n4^2 - 16*n2*n5 + 8*d*n2*n5 - 
      8*n2*n3*n5 - 8*n2*n4*n5)*j[p4, n1, 1 + n2, n3, n4, 1 + n5, 1, -1, 0, 0, 
      1, 1, 0, 1, 1])/((-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 
      4*d*n1 - 4*n1^2 + 12*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 
      8*n2*n3 + 28*n4 - 12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 
      8*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((-44*n2 + 40*d*n2 - 9*d^2*n2 + 8*n1*n2 + 4*n1^2*n2 - 24*n2^2 + 
      12*d*n2^2 + 8*n1*n2^2 - 32*n2*n3 + 12*d*n2*n3 - 8*n1*n2*n3 - 
      16*n2^2*n3 - 48*n2*n4 + 20*d*n2*n4 - 8*n1*n2*n4 - 16*n2^2*n4 - 
      8*n2*n3*n4 - 8*n2*n4^2 - 8*n2*n5 + 4*d*n2*n5 + 8*n1*n2*n5 - 
      8*n2*n3*n5 - 8*n2*n4*n5)*j[p4, n1, 1 + n2, n3, n4, 1 + n5, 1, -1, 1, 0, 
      0, 1, 0, 1, 1])/(2*(-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 
      4*d*n1 - 4*n1^2 + 12*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 
      8*n2*n3 + 28*n4 - 12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 
      8*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((-56*n2 + 48*d*n2 - 10*d^2*n2 + 8*n1*n2 - 4*d*n1*n2 - 44*n2*n3 + 
      18*d*n2*n3 + 4*n1*n2*n3 - 8*n2*n3^2 - 44*n2*n4 + 18*d*n2*n4 + 
      4*n1*n2*n4 - 16*n2*n3*n4 - 8*n2*n4^2 - 16*n2*n5 + 8*d*n2*n5 - 
      8*n2*n3*n5 - 8*n2*n4*n5)*j[p4, n1, 1 + n2, n3, n4, 1 + n5, 1, -1, 1, 0, 
      1, 1, 0, 0, 1])/((-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 
      4*d*n1 - 4*n1^2 + 12*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 
      8*n2*n3 + 28*n4 - 12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 
      8*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((28*n2 - 24*d*n2 + 5*d^2*n2 - 4*n1*n2 + 2*d*n1*n2 + 22*n2*n3 - 
      9*d*n2*n3 - 2*n1*n2*n3 + 4*n2*n3^2 + 22*n2*n4 - 9*d*n2*n4 - 
      2*n1*n2*n4 + 8*n2*n3*n4 + 4*n2*n4^2 + 8*n2*n5 - 4*d*n2*n5 + 
      4*n2*n3*n5 + 4*n2*n4*n5)*j[p4, n1, 1 + n2, n3, n4, 1 + n5, 1, 0, 0, 0, 
      1, 1, -1, 1, 1])/((-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 
      4*d*n1 - 4*n1^2 + 12*n2 - 6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 
      8*n2*n3 + 28*n4 - 12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 
      8*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((100*n2 - 88*d*n2 + 19*d^2*n2 - 16*n1*n2 + 4*d*n1*n2 - 4*n1^2*n2 + 
      24*n2^2 - 12*d*n2^2 - 8*n1*n2^2 + 76*n2*n3 - 30*d*n2*n3 + 4*n1*n2*n3 + 
      16*n2^2*n3 + 8*n2*n3^2 + 92*n2*n4 - 38*d*n2*n4 + 4*n1*n2*n4 + 
      16*n2^2*n4 + 24*n2*n3*n4 + 16*n2*n4^2 + 24*n2*n5 - 12*d*n2*n5 - 
      8*n1*n2*n5 + 16*n2*n3*n5 + 16*n2*n4*n5)*j[p4, n1, 1 + n2, n3, n4, 
      1 + n5, 1, 0, 1, 0, 0, 1, -1, 1, 1])/(2*(-3 + d - n4 - n5)*
     (36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 12*n2 - 6*d*n2 - 4*n1*n2 + 
      20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 12*d*n4 + 8*n1*n4 + 
      8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 4*n3*n5 + 4*n4*n5)) + 
   ((-640*n1 + 784*d*n1 - 316*d^2*n1 + 42*d^3*n1 + 176*n1^2 - 108*d*n1^2 + 
      16*d^2*n1^2 + 24*n1^3 - 8*d*n1^3 - 184*n1*n2 + 158*d*n1*n2 - 
      33*d^2*n1*n2 + 52*n1^2*n2 - 16*d*n1^2*n2 + 4*n1^3*n2 - 12*n1*n2^2 + 
      6*d*n1*n2^2 + 4*n1^2*n2^2 - 624*n1*n3 + 472*d*n1*n3 - 89*d^2*n1*n3 + 
      8*n1^2*n3 + 4*n1^3*n3 - 148*n1*n2*n3 + 56*d*n1*n2*n3 - 8*n1*n2^2*n3 - 
      136*n1*n3^2 + 50*d*n1*n3^2 - 4*n1^2*n3^2 - 16*n1*n2*n3^2 - 8*n1*n3^3 - 
      768*n1*n4 + 596*d*n1*n4 - 115*d^2*n1*n4 + 24*n1^2*n4 - 4*d*n1^2*n4 + 
      4*n1^3*n4 - 168*n1*n2*n4 + 66*d*n1*n2*n4 + 4*n1^2*n2*n4 - 
      8*n1*n2^2*n4 - 376*n1*n3*n4 + 140*d*n1*n3*n4 - 8*n1^2*n3*n4 - 
      44*n1*n2*n3*n4 - 36*n1*n3^2*n4 - 248*n1*n4^2 + 94*d*n1*n4^2 - 
      4*n1^2*n4^2 - 28*n1*n2*n4^2 - 52*n1*n3*n4^2 - 24*n1*n4^3 - 288*n1*n5 + 
      248*d*n1*n5 - 52*d^2*n1*n5 + 112*n1^2*n5 - 36*d*n1^2*n5 + 8*n1^3*n5 - 
      40*n1*n2*n5 + 20*d*n1*n2*n5 + 16*n1^2*n2*n5 - 248*n1*n3*n5 + 
      94*d*n1*n3*n5 + 4*n1^2*n3*n5 - 28*n1*n2*n3*n5 - 28*n1*n3^2*n5 - 
      280*n1*n4*n5 + 110*d*n1*n4*n5 + 12*n1^2*n4*n5 - 28*n1*n2*n4*n5 - 
      76*n1*n3*n4*n5 - 48*n1*n4^2*n5 - 32*n1*n5^2 + 16*d*n1*n5^2 + 
      16*n1^2*n5^2 - 24*n1*n3*n5^2 - 24*n1*n4*n5^2)*
     j[p4, 1 + n1, -1 + n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((-3 + d - n4 - n5)*(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 
      160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
      208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
      74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
      34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((-128 + 112*d - 24*d^2 - 80*n1 + 96*d*n1 - 24*d^2*n1 + 
      48*n1^2 - 16*d*n1^2 - 24*n2 + 12*d*n2 - 16*n1*n2 + 12*d*n1*n2 + 
      8*n1^2*n2 - 112*n3 + 44*d*n3 - 104*n1*n3 + 44*d*n1*n3 + 8*n1^2*n3 - 
      16*n2*n3 - 16*n1*n2*n3 - 16*n3^2 - 16*n1*n3^2 - 60*d*n4 + 24*d^2*n4 - 
      168*n1*n4 + 68*d*n1*n4 + 8*n1^2*n4 + 8*n2*n4 - 12*d*n2*n4 - 
      24*n1*n2*n4 + 72*n3*n4 - 44*d*n3*n4 - 48*n1*n3*n4 + 16*n2*n3*n4 + 
      16*n3^2*n4 + 104*n4^2 - 52*d*n4^2 - 32*n1*n4^2 + 16*n2*n4^2 + 
      40*n3*n4^2 + 24*n4^3 - 32*n5 + 16*d*n5 - 16*n1*n5 + 16*d*n1*n5 + 
      16*n1^2*n5 - 24*n3*n5 - 24*n1*n3*n5 + 8*n4*n5 - 16*d*n4*n5 - 
      40*n1*n4*n5 + 24*n3*n4*n5 + 24*n4^2*n5)*j[p4, 1 + n1, -1 + n2, n3, n4, 
      1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/(-504 + 628*d - 258*d^2 + 35*d^3 - 
     184*n1 + 160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
     208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
     8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
     8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
     40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
     74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
     76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
     40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
     24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
     34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
     8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
     8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
     24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((256 - 352*d + 160*d^2 - 24*d^3 - 96*n1 + 80*d*n1 - 16*d^2*n1 + 48*n2 - 
      48*d*n2 + 12*d^2*n2 - 16*n1*n2 + 8*d*n1*n2 + 224*n3 - 200*d*n3 + 
      44*d^2*n3 - 16*n1*n3 + 8*d*n1*n3 + 32*n2*n3 - 16*d*n2*n3 + 32*n3^2 - 
      16*d*n3^2 + 384*n4 - 344*d*n4 + 76*d^2*n4 - 64*n1*n4 + 24*d*n1*n4 + 
      56*n2*n4 - 28*d*n2*n4 - 8*n1*n2*n4 + 192*n3*n4 - 84*d*n3*n4 - 
      8*n1*n3*n4 + 16*n2*n3*n4 + 16*n3^2*n4 + 176*n4^2 - 76*d*n4^2 - 
      8*n1*n4^2 + 16*n2*n4^2 + 40*n3*n4^2 + 24*n4^3 + 64*n5 - 64*d*n5 + 
      16*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 48*n3*n5 - 24*d*n3*n5 + 80*n4*n5 - 
      40*d*n4*n5 - 16*n1*n4*n5 + 24*n3*n4*n5 + 24*n4^2*n5)*
     j[p4, 1 + n1, n2, n3, -1 + n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 160*d*n1 - 34*d^2*n1 + 
     40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 208*d*n2 - 44*d^2*n2 + 
     16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 352*n3 + 
     276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 176*n2*n3 + 
     68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
     16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 74*d^2*n4 - 184*n1*n4 + 
     72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
     16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
     8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 
     16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 34*d^2*n5 - 32*n1*n5 + 
     16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
     112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
     128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
     16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((128 - 112*d + 24*d^2 - 48*n1 + 16*d*n1 + 24*n2 - 12*d*n2 - 8*n1*n2 + 
      112*n3 - 44*d*n3 - 8*n1*n3 + 16*n2*n3 + 16*n3^2 + 128*n4 - 52*d*n4 - 
      8*n1*n4 + 16*n2*n4 + 40*n3*n4 + 24*n4^2 + 32*n5 - 16*d*n5 - 16*n1*n5 + 
      24*n3*n5 + 24*n4*n5)*j[p4, 1 + n1, n2, n3, -1 + n4, 1 + n5, 1, 0, 2, 0, 
      1, 0, 0, 1, 1])/(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 160*d*n1 - 
     34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 208*d*n2 - 
     44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 
     352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 
     176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 
     16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 74*d^2*n4 - 
     184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 76*d*n2*n4 - 
     24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 
     40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 
     24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 34*d^2*n5 - 
     32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
     112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
     128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
     16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-64*n1 + 56*d*n1 - 12*d^2*n1 + 24*n1^2 - 8*d*n1^2 - 12*n1*n2 + 
      6*d*n1*n2 + 4*n1^2*n2 - 56*n1*n3 + 22*d*n1*n3 + 4*n1^2*n3 - 
      8*n1*n2*n3 - 8*n1*n3^2 - 64*n1*n4 + 26*d*n1*n4 + 4*n1^2*n4 - 
      8*n1*n2*n4 - 20*n1*n3*n4 - 12*n1*n4^2 - 16*n1*n5 + 8*d*n1*n5 + 
      8*n1^2*n5 - 12*n1*n3*n5 - 12*n1*n4*n5)*j[p4, 1 + n1, n2, n3, n4, n5, 1, 
      0, 1, 0, 1, 1, 0, 0, 1])/(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 
     160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
     208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
     8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
     8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
     40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
     74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
     76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
     40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
     24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
     34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
     8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
     8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
     24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((128 - 112*d + 24*d^2 + 80*n1 - 96*d*n1 + 24*d^2*n1 - 48*n1^2 + 
      16*d*n1^2 + 24*n2 - 12*d*n2 + 16*n1*n2 - 12*d*n1*n2 - 8*n1^2*n2 + 
      112*n3 - 44*d*n3 + 104*n1*n3 - 44*d*n1*n3 - 8*n1^2*n3 + 16*n2*n3 + 
      16*n1*n2*n3 + 16*n3^2 + 16*n1*n3^2 + 60*d*n4 - 24*d^2*n4 + 168*n1*n4 - 
      68*d*n1*n4 - 8*n1^2*n4 - 8*n2*n4 + 12*d*n2*n4 + 24*n1*n2*n4 - 
      72*n3*n4 + 44*d*n3*n4 + 48*n1*n3*n4 - 16*n2*n3*n4 - 16*n3^2*n4 - 
      104*n4^2 + 52*d*n4^2 + 32*n1*n4^2 - 16*n2*n4^2 - 40*n3*n4^2 - 24*n4^3 + 
      32*n5 - 16*d*n5 + 16*n1*n5 - 16*d*n1*n5 - 16*n1^2*n5 + 24*n3*n5 + 
      24*n1*n3*n5 - 8*n4*n5 + 16*d*n4*n5 + 40*n1*n4*n5 - 24*n3*n4*n5 - 
      24*n4^2*n5)*j[p4, 1 + n1, n2, n3, n4, n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 160*d*n1 - 34*d^2*n1 + 
     40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 208*d*n2 - 44*d^2*n2 + 
     16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 352*n3 + 
     276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 176*n2*n3 + 
     68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
     16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 74*d^2*n4 - 184*n1*n4 + 
     72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
     16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
     8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 
     16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 34*d^2*n5 - 32*n1*n5 + 
     16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
     112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
     128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
     16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-128 + 112*d - 24*d^2 + 48*n1 - 16*d*n1 - 24*n2 + 12*d*n2 + 8*n1*n2 - 
      112*n3 + 44*d*n3 + 8*n1*n3 - 16*n2*n3 - 16*n3^2 - 60*d*n4 + 24*d^2*n4 - 
      40*n1*n4 + 16*d*n1*n4 + 8*n2*n4 - 12*d*n2*n4 - 8*n1*n2*n4 + 72*n3*n4 - 
      44*d*n3*n4 - 8*n1*n3*n4 + 16*n2*n3*n4 + 16*n3^2*n4 + 104*n4^2 - 
      52*d*n4^2 - 8*n1*n4^2 + 16*n2*n4^2 + 40*n3*n4^2 + 24*n4^3 - 32*n5 + 
      16*d*n5 + 16*n1*n5 - 24*n3*n5 + 8*n4*n5 - 16*d*n4*n5 - 16*n1*n4*n5 + 
      24*n3*n4*n5 + 24*n4^2*n5)*j[p4, 1 + n1, n2, n3, n4, 1 + n5, 0, 0, 1, 0, 
      1, 1, 0, 1, 1])/(504 - 628*d + 258*d^2 - 35*d^3 + 184*n1 - 160*d*n1 + 
     34*d^2*n1 - 40*n1^2 + 12*d*n1^2 - 8*n1^3 + 240*n2 - 208*d*n2 + 
     44*d^2*n2 - 16*n1*n2 - 16*n1^2*n2 + 24*n2^2 - 12*d*n2^2 - 8*n1*n2^2 + 
     352*n3 - 276*d*n3 + 54*d^2*n3 + 168*n1*n3 - 64*d*n1*n3 + 8*n1^2*n3 + 
     176*n2*n3 - 68*d*n2*n3 + 24*n1*n2*n3 + 16*n2^2*n3 + 40*n3^2 - 
     16*d*n3^2 + 16*n1*n3^2 + 16*n2*n3^2 + 464*n4 - 372*d*n4 + 74*d^2*n4 + 
     184*n1*n4 - 72*d*n1*n4 + 8*n1^2*n4 + 192*n2*n4 - 76*d*n2*n4 + 
     24*n1*n2*n4 + 16*n2^2*n4 + 152*n3*n4 - 60*d*n3*n4 + 40*n1*n3*n4 + 
     40*n2*n3*n4 + 8*n3^2*n4 + 112*n4^2 - 44*d*n4^2 + 24*n1*n4^2 + 
     24*n2*n4^2 + 16*n3*n4^2 + 8*n4^3 + 184*n5 - 160*d*n5 + 34*d^2*n5 + 
     32*n1*n5 - 16*d*n1*n5 - 8*n1^2*n5 + 40*n2*n5 - 20*d*n2*n5 - 8*n1*n2*n5 + 
     112*n3*n5 - 44*d*n3*n5 + 24*n1*n3*n5 + 24*n2*n3*n5 + 8*n3^2*n5 + 
     128*n4*n5 - 52*d*n4*n5 + 24*n1*n4*n5 + 24*n2*n4*n5 + 24*n3*n4*n5 + 
     16*n4^2*n5 + 16*n5^2 - 8*d*n5^2 + 8*n3*n5^2 + 8*n4*n5^2) + 
   ((28*n1 - 24*d*n1 + 5*d^2*n1 - 4*n1^2 + 2*d*n1^2 + 22*n1*n3 - 9*d*n1*n3 - 
      2*n1^2*n3 + 4*n1*n3^2 + 22*n1*n4 - 9*d*n1*n4 - 2*n1^2*n4 + 8*n1*n3*n4 + 
      4*n1*n4^2 + 8*n1*n5 - 4*d*n1*n5 + 4*n1*n3*n5 + 4*n1*n4*n5)*
     j[p4, 1 + n1, n2, n3, n4, 1 + n5, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(36 - 32*d + 7*d^2 + 8*n1 - 4*d*n1 - 4*n1^2 + 12*n2 - 
      6*d*n2 - 4*n1*n2 + 20*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3 + 28*n4 - 
      12*d*n4 + 8*n1*n4 + 8*n2*n4 + 4*n3*n4 + 4*n4^2 + 8*n5 - 4*d*n5 + 
      4*n3*n5 + 4*n4*n5)) + ((64*n1 - 56*d*n1 + 12*d^2*n1 - 24*n1^2 + 
      8*d*n1^2 + 12*n1*n2 - 6*d*n1*n2 - 4*n1^2*n2 + 56*n1*n3 - 22*d*n1*n3 - 
      4*n1^2*n3 + 8*n1*n2*n3 + 8*n1*n3^2 + 64*n1*n4 - 26*d*n1*n4 - 
      4*n1^2*n4 + 8*n1*n2*n4 + 20*n1*n3*n4 + 12*n1*n4^2 + 16*n1*n5 - 
      8*d*n1*n5 - 8*n1^2*n5 + 12*n1*n3*n5 + 12*n1*n4*n5)*
     j[p4, 1 + n1, n2, n3, n4, 1 + n5, 1, 0, 1, -1, 1, 1, 0, 0, 1])/
    (-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 160*d*n1 - 34*d^2*n1 + 
     40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 208*d*n2 - 44*d^2*n2 + 
     16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 352*n3 + 
     276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 176*n2*n3 + 
     68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
     16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 74*d^2*n4 - 184*n1*n4 + 
     72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
     16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
     8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 
     16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 34*d^2*n5 - 32*n1*n5 + 
     16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
     112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
     128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
     16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-128 + 112*d - 24*d^2 - 80*n1 + 96*d*n1 - 24*d^2*n1 + 48*n1^2 - 
      16*d*n1^2 - 24*n2 + 12*d*n2 - 16*n1*n2 + 12*d*n1*n2 + 8*n1^2*n2 - 
      112*n3 + 44*d*n3 - 104*n1*n3 + 44*d*n1*n3 + 8*n1^2*n3 - 16*n2*n3 - 
      16*n1*n2*n3 - 16*n3^2 - 16*n1*n3^2 - 60*d*n4 + 24*d^2*n4 - 168*n1*n4 + 
      68*d*n1*n4 + 8*n1^2*n4 + 8*n2*n4 - 12*d*n2*n4 - 24*n1*n2*n4 + 
      72*n3*n4 - 44*d*n3*n4 - 48*n1*n3*n4 + 16*n2*n3*n4 + 16*n3^2*n4 + 
      104*n4^2 - 52*d*n4^2 - 32*n1*n4^2 + 16*n2*n4^2 + 40*n3*n4^2 + 24*n4^3 - 
      32*n5 + 16*d*n5 - 16*n1*n5 + 16*d*n1*n5 + 16*n1^2*n5 - 24*n3*n5 - 
      24*n1*n3*n5 + 8*n4*n5 - 16*d*n4*n5 - 40*n1*n4*n5 + 24*n3*n4*n5 + 
      24*n4^2*n5)*j[p4, 1 + n1, n2, n3, n4, 1 + n5, 1, 0, 1, -1, 1, 1, 0, 1, 
      1])/(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 160*d*n1 - 34*d^2*n1 + 
     40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 208*d*n2 - 44*d^2*n2 + 
     16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 352*n3 + 
     276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 176*n2*n3 + 
     68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
     16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 74*d^2*n4 - 184*n1*n4 + 
     72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
     16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
     8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 
     16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 34*d^2*n5 - 32*n1*n5 + 
     16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
     112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
     128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
     16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-384 + 464*d - 184*d^2 + 24*d^3 + 400*n1 - 416*d*n1 + 148*d^2*n1 - 
      18*d^3*n1 - 32*n1^2 + 12*d*n1^2 - 24*n1^3 + 8*d*n1^3 - 72*n2 + 
      60*d*n2 - 12*d^2*n2 + 136*n1*n2 - 106*d*n1*n2 + 21*d^2*n1*n2 - 
      28*n1^2*n2 + 8*d*n1^2*n2 - 4*n1^3*n2 + 12*n1*n2^2 - 6*d*n1*n2^2 - 
      4*n1^2*n2^2 - 336*n3 + 244*d*n3 - 44*d^2*n3 + 312*n1*n3 - 236*d*n1*n3 + 
      45*d^2*n1*n3 + 16*n1^2*n3 - 8*d*n1^2*n3 - 4*n1^3*n3 - 48*n2*n3 + 
      16*d*n2*n3 + 100*n1*n2*n3 - 40*d*n1*n2*n3 + 8*n1*n2^2*n3 - 48*n3^2 + 
      16*d*n3^2 + 88*n1*n3^2 - 34*d*n1*n3^2 + 4*n1^2*n3^2 + 16*n1*n2*n3^2 + 
      8*n1*n3^3 - 128*n4 - 68*d*n4 + 108*d^2*n4 - 24*d^3*n4 + 184*n1*n4 - 
      128*d*n1*n4 + 23*d^2*n1*n4 + 48*n1^2*n4 - 20*d*n1^2*n4 - 4*n1^3*n4 - 
      32*d*n2*n4 + 12*d^2*n2*n4 + 80*n1*n2*n4 - 30*d*n1*n2*n4 + 
      4*n1^2*n2*n4 + 8*n1*n2^2*n4 + 104*n3*n4 - 160*d*n3*n4 + 44*d^2*n3*n4 + 
      128*n1*n3*n4 - 48*d*n1*n3*n4 + 16*n1^2*n3*n4 + 32*n2*n3*n4 - 
      16*d*n2*n3*n4 + 28*n1*n2*n3*n4 + 32*n3^2*n4 - 16*d*n3^2*n4 + 
      20*n1*n3^2*n4 + 312*n4^2 - 320*d*n4^2 + 76*d^2*n4^2 - 16*n1*n4^2 + 
      6*d*n1*n4^2 + 12*n1^2*n4^2 + 56*n2*n4^2 - 28*d*n2*n4^2 + 4*n1*n2*n4^2 + 
      192*n3*n4^2 - 84*d*n3*n4^2 + 4*n1*n3*n4^2 + 16*n2*n3*n4^2 + 
      16*n3^2*n4^2 + 176*n4^3 - 76*d*n4^3 - 8*n1*n4^3 + 16*n2*n4^3 + 
      40*n3*n4^3 + 24*n4^4 - 224*n5 + 192*d*n5 - 40*d^2*n5 + 160*n1*n5 - 
      88*d*n1*n5 + 12*d^2*n1*n5 - 16*n1^2*n5 + 4*d*n1^2*n5 - 8*n1^3*n5 - 
      24*n2*n5 + 12*d*n2*n5 + 24*n1*n2*n5 - 8*d*n1*n2*n5 - 8*n1^2*n2*n5 - 
      184*n3*n5 + 68*d*n3*n5 + 72*n1*n3*n5 - 26*d*n1*n3*n5 + 4*n1^2*n3*n5 - 
      16*n2*n3*n5 + 12*n1*n2*n3*n5 - 16*n3^2*n5 + 12*n1*n3^2*n5 - 8*n4*n5 - 
      100*d*n4*n5 + 40*d^2*n4*n5 - 24*n1*n4*n5 + 14*d*n1*n4*n5 + 
      12*n1^2*n4*n5 + 8*n2*n4*n5 - 12*d*n2*n4*n5 + 4*n1*n2*n4*n5 + 
      120*n3*n4*n5 - 68*d*n3*n4*n5 + 4*n1*n3*n4*n5 + 16*n2*n3*n4*n5 + 
      16*n3^2*n4*n5 + 184*n4^2*n5 - 92*d*n4^2*n5 - 24*n1*n4^2*n5 + 
      16*n2*n4^2*n5 + 64*n3*n4^2*n5 + 48*n4^3*n5 - 32*n5^2 + 16*d*n5^2 + 
      16*n1*n5^2 - 24*n3*n5^2 + 8*n4*n5^2 - 16*d*n4*n5^2 - 16*n1*n4*n5^2 + 
      24*n3*n4*n5^2 + 24*n4^2*n5^2)*j[p4, 1 + n1, n2, n3, n4, 1 + n5, 1, 0, 
      1, 0, 0, 1, 0, 1, 1])/((-3 + d - n4 - n5)*(-504 + 628*d - 258*d^2 + 
      35*d^3 - 184*n1 + 160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 
      240*n2 + 208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 
      12*d*n2^2 + 8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 
      64*d*n1*n3 - 8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 
      16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 
      372*d*n4 - 74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
      34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((384 - 464*d + 184*d^2 - 24*d^3 + 248*n1 - 380*d*n1 + 
      174*d^2*n1 - 25*d^3*n1 - 8*n1^3 + 4*d*n1^3 + 72*n2 - 60*d*n2 + 
      12*d^2*n2 + 32*n1*n2 - 40*d*n1*n2 + 10*d^2*n1*n2 - 8*n1^2*n2 + 
      4*d*n1^2*n2 + 336*n3 - 244*d*n3 + 44*d^2*n3 + 340*n1*n3 - 276*d*n1*n3 + 
      55*d^2*n1*n3 + 8*n1^2*n3 - 4*d*n1^2*n3 - 4*n1^3*n3 + 48*n2*n3 - 
      16*d*n2*n3 + 44*n1*n2*n3 - 18*d*n1*n2*n3 - 4*n1^2*n2*n3 + 48*n3^2 - 
      16*d*n3^2 + 100*n1*n3^2 - 38*d*n1*n3^2 + 4*n1^2*n3^2 + 8*n1*n2*n3^2 + 
      8*n1*n3^3 + 128*n4 + 68*d*n4 - 108*d^2*n4 + 24*d^3*n4 + 436*n1*n4 - 
      356*d*n1*n4 + 71*d^2*n1*n4 + 8*n1^2*n4 - 4*d*n1^2*n4 - 4*n1^3*n4 + 
      32*d*n2*n4 - 12*d^2*n2*n4 + 60*n1*n2*n4 - 26*d*n1*n2*n4 - 
      4*n1^2*n2*n4 - 104*n3*n4 + 160*d*n3*n4 - 44*d^2*n3*n4 + 216*n1*n3*n4 - 
      84*d*n1*n3*n4 + 8*n1^2*n3*n4 - 32*n2*n3*n4 + 16*d*n2*n3*n4 + 
      16*n1*n2*n3*n4 - 32*n3^2*n4 + 16*d*n3^2*n4 + 24*n1*n3^2*n4 - 312*n4^2 + 
      320*d*n4^2 - 76*d^2*n4^2 + 164*n1*n4^2 - 62*d*n1*n4^2 + 4*n1^2*n4^2 - 
      56*n2*n4^2 + 28*d*n2*n4^2 + 16*n1*n2*n4^2 - 192*n3*n4^2 + 
      84*d*n3*n4^2 + 32*n1*n3*n4^2 - 16*n2*n3*n4^2 - 16*n3^2*n4^2 - 
      176*n4^3 + 76*d*n4^3 + 16*n1*n4^3 - 16*n2*n4^3 - 40*n3*n4^3 - 24*n4^4 + 
      224*n5 - 192*d*n5 + 40*d^2*n5 + 72*n1*n5 - 112*d*n1*n5 + 30*d^2*n1*n5 + 
      8*n1^2*n5 - 4*d*n1^2*n5 + 24*n2*n5 - 12*d*n2*n5 + 8*n1*n2*n5 - 
      8*d*n1*n2*n5 + 184*n3*n5 - 68*d*n3*n5 + 108*n1*n3*n5 - 46*d*n1*n3*n5 + 
      4*n1^2*n3*n5 + 16*n2*n3*n5 + 8*n1*n2*n3*n5 + 16*n3^2*n5 + 
      16*n1*n3^2*n5 + 8*n4*n5 + 100*d*n4*n5 - 40*d^2*n4*n5 + 188*n1*n4*n5 - 
      78*d*n1*n4*n5 + 4*n1^2*n4*n5 - 8*n2*n4*n5 + 12*d*n2*n4*n5 + 
      16*n1*n2*n4*n5 - 120*n3*n4*n5 + 68*d*n3*n4*n5 + 40*n1*n3*n4*n5 - 
      16*n2*n3*n4*n5 - 16*n3^2*n4*n5 - 184*n4^2*n5 + 92*d*n4^2*n5 + 
      40*n1*n4^2*n5 - 16*n2*n4^2*n5 - 64*n3*n4^2*n5 - 48*n4^3*n5 + 32*n5^2 - 
      16*d*n5^2 - 8*d*n1*n5^2 + 24*n3*n5^2 + 8*n1*n3*n5^2 - 8*n4*n5^2 + 
      16*d*n4*n5^2 + 24*n1*n4*n5^2 - 24*n3*n4*n5^2 - 24*n4^2*n5^2)*
     j[p4, 1 + n1, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 0, 0, 1, 1])/
    ((-3 + d - n4 - n5)*(-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 
      160*d*n1 - 34*d^2*n1 + 40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 
      208*d*n2 - 44*d^2*n2 + 16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 
      8*n1*n2^2 - 352*n3 + 276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 
      8*n1^2*n3 - 176*n2*n3 + 68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 
      40*n3^2 + 16*d*n3^2 - 16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 
      74*d^2*n4 - 184*n1*n4 + 72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 
      76*d*n2*n4 - 24*n1*n2*n4 - 16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 
      40*n1*n3*n4 - 40*n2*n3*n4 - 8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 
      24*n1*n4^2 - 24*n2*n4^2 - 16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 
      34*d^2*n5 - 32*n1*n5 + 16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 
      8*n1*n2*n5 - 112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 
      8*n3^2*n5 - 128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 
      24*n3*n4*n5 - 16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 
      8*n4*n5^2)) + ((128*n3 - 112*d*n3 + 24*d^2*n3 - 48*n1*n3 + 16*d*n1*n3 + 
      24*n2*n3 - 12*d*n2*n3 - 8*n1*n2*n3 + 112*n3^2 - 44*d*n3^2 - 8*n1*n3^2 + 
      16*n2*n3^2 + 16*n3^3 + 128*n3*n4 - 52*d*n3*n4 - 8*n1*n3*n4 + 
      16*n2*n3*n4 + 40*n3^2*n4 + 24*n3*n4^2 + 32*n3*n5 - 16*d*n3*n5 - 
      16*n1*n3*n5 + 24*n3^2*n5 + 24*n3*n4*n5)*j[p4, 1 + n1, n2, 1 + n3, 
      -1 + n4, 1 + n5, 1, -1, 1, 0, 1, 1, 0, 1, 1])/
    (-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 160*d*n1 - 34*d^2*n1 + 
     40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 208*d*n2 - 44*d^2*n2 + 
     16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 352*n3 + 
     276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 176*n2*n3 + 
     68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
     16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 74*d^2*n4 - 184*n1*n4 + 
     72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
     16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
     8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 
     16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 34*d^2*n5 - 32*n1*n5 + 
     16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
     112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
     128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
     16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((128*n3 - 112*d*n3 + 24*d^2*n3 - 48*n1*n3 + 16*d*n1*n3 + 24*n2*n3 - 
      12*d*n2*n3 - 8*n1*n2*n3 + 112*n3^2 - 44*d*n3^2 - 8*n1*n3^2 + 
      16*n2*n3^2 + 16*n3^3 + 128*n3*n4 - 52*d*n3*n4 - 8*n1*n3*n4 + 
      16*n2*n3*n4 + 40*n3^2*n4 + 24*n3*n4^2 + 32*n3*n5 - 16*d*n3*n5 - 
      16*n1*n3*n5 + 24*n3^2*n5 + 24*n3*n4*n5)*j[p4, 1 + n1, n2, 1 + n3, 
      -1 + n4, 1 + n5, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 160*d*n1 - 34*d^2*n1 + 
     40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 208*d*n2 - 44*d^2*n2 + 
     16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 352*n3 + 
     276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 176*n2*n3 + 
     68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
     16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 74*d^2*n4 - 184*n1*n4 + 
     72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
     16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
     8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 
     16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 34*d^2*n5 - 32*n1*n5 + 
     16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
     112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
     128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
     16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-128*n3 + 112*d*n3 - 24*d^2*n3 + 48*n1*n3 - 16*d*n1*n3 - 24*n2*n3 + 
      12*d*n2*n3 + 8*n1*n2*n3 - 112*n3^2 + 44*d*n3^2 + 8*n1*n3^2 - 
      16*n2*n3^2 - 16*n3^3 - 128*n3*n4 + 52*d*n3*n4 + 8*n1*n3*n4 - 
      16*n2*n3*n4 - 40*n3^2*n4 - 24*n3*n4^2 - 32*n3*n5 + 16*d*n3*n5 + 
      16*n1*n3*n5 - 24*n3^2*n5 - 24*n3*n4*n5)*j[p4, 1 + n1, n2, 1 + n3, 
      -1 + n4, 1 + n5, 1, 0, 1, 0, 0, 1, 0, 1, 1])/
    (-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 160*d*n1 - 34*d^2*n1 + 
     40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 208*d*n2 - 44*d^2*n2 + 
     16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 352*n3 + 
     276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 176*n2*n3 + 
     68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
     16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 74*d^2*n4 - 184*n1*n4 + 
     72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
     16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
     8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 
     16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 34*d^2*n5 - 32*n1*n5 + 
     16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
     112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
     128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
     16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((128*n3 - 112*d*n3 + 24*d^2*n3 - 48*n1*n3 + 16*d*n1*n3 + 24*n2*n3 - 
      12*d*n2*n3 - 8*n1*n2*n3 + 112*n3^2 - 44*d*n3^2 - 8*n1*n3^2 + 
      16*n2*n3^2 + 16*n3^3 + 128*n3*n4 - 52*d*n3*n4 - 8*n1*n3*n4 + 
      16*n2*n3*n4 + 40*n3^2*n4 + 24*n3*n4^2 + 32*n3*n5 - 16*d*n3*n5 - 
      16*n1*n3*n5 + 24*n3^2*n5 + 24*n3*n4*n5)*j[p4, 1 + n1, n2, 1 + n3, 
      -1 + n4, 1 + n5, 1, 0, 1, 0, 1, 0, 0, 1, 1])/
    (-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 160*d*n1 - 34*d^2*n1 + 
     40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 208*d*n2 - 44*d^2*n2 + 
     16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 352*n3 + 
     276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 176*n2*n3 + 
     68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
     16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 74*d^2*n4 - 184*n1*n4 + 
     72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
     16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
     8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 
     16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 34*d^2*n5 - 32*n1*n5 + 
     16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
     112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
     128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
     16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((-128*n3 + 112*d*n3 - 24*d^2*n3 + 48*n1*n3 - 16*d*n1*n3 - 24*n2*n3 + 
      12*d*n2*n3 + 8*n1*n2*n3 - 112*n3^2 + 44*d*n3^2 + 8*n1*n3^2 - 
      16*n2*n3^2 - 16*n3^3 - 128*n3*n4 + 52*d*n3*n4 + 8*n1*n3*n4 - 
      16*n2*n3*n4 - 40*n3^2*n4 - 24*n3*n4^2 - 32*n3*n5 + 16*d*n3*n5 + 
      16*n1*n3*n5 - 24*n3^2*n5 - 24*n3*n4*n5)*j[p4, 1 + n1, n2, 1 + n3, 
      -1 + n4, 1 + n5, 1, 0, 1, 0, 1, 1, -1, 1, 1])/
    (-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 160*d*n1 - 34*d^2*n1 + 
     40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 208*d*n2 - 44*d^2*n2 + 
     16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 352*n3 + 
     276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 176*n2*n3 + 
     68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
     16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 74*d^2*n4 - 184*n1*n4 + 
     72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
     16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
     8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 
     16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 34*d^2*n5 - 32*n1*n5 + 
     16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
     112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
     128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
     16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2) + 
   ((128*n3 - 112*d*n3 + 24*d^2*n3 - 48*n1*n3 + 16*d*n1*n3 + 24*n2*n3 - 
      12*d*n2*n3 - 8*n1*n2*n3 + 112*n3^2 - 44*d*n3^2 - 8*n1*n3^2 + 
      16*n2*n3^2 + 16*n3^3 + 128*n3*n4 - 52*d*n3*n4 - 8*n1*n3*n4 + 
      16*n2*n3*n4 + 40*n3^2*n4 + 24*n3*n4^2 + 32*n3*n5 - 16*d*n3*n5 - 
      16*n1*n3*n5 + 24*n3^2*n5 + 24*n3*n4*n5)*j[p4, 1 + n1, n2, 1 + n3, 
      -1 + n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (-504 + 628*d - 258*d^2 + 35*d^3 - 184*n1 + 160*d*n1 - 34*d^2*n1 + 
     40*n1^2 - 12*d*n1^2 + 8*n1^3 - 240*n2 + 208*d*n2 - 44*d^2*n2 + 
     16*n1*n2 + 16*n1^2*n2 - 24*n2^2 + 12*d*n2^2 + 8*n1*n2^2 - 352*n3 + 
     276*d*n3 - 54*d^2*n3 - 168*n1*n3 + 64*d*n1*n3 - 8*n1^2*n3 - 176*n2*n3 + 
     68*d*n2*n3 - 24*n1*n2*n3 - 16*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 
     16*n1*n3^2 - 16*n2*n3^2 - 464*n4 + 372*d*n4 - 74*d^2*n4 - 184*n1*n4 + 
     72*d*n1*n4 - 8*n1^2*n4 - 192*n2*n4 + 76*d*n2*n4 - 24*n1*n2*n4 - 
     16*n2^2*n4 - 152*n3*n4 + 60*d*n3*n4 - 40*n1*n3*n4 - 40*n2*n3*n4 - 
     8*n3^2*n4 - 112*n4^2 + 44*d*n4^2 - 24*n1*n4^2 - 24*n2*n4^2 - 
     16*n3*n4^2 - 8*n4^3 - 184*n5 + 160*d*n5 - 34*d^2*n5 - 32*n1*n5 + 
     16*d*n1*n5 + 8*n1^2*n5 - 40*n2*n5 + 20*d*n2*n5 + 8*n1*n2*n5 - 
     112*n3*n5 + 44*d*n3*n5 - 24*n1*n3*n5 - 24*n2*n3*n5 - 8*n3^2*n5 - 
     128*n4*n5 + 52*d*n4*n5 - 24*n1*n4*n5 - 24*n2*n4*n5 - 24*n3*n4*n5 - 
     16*n4^2*n5 - 16*n5^2 + 8*d*n5^2 - 8*n3*n5^2 - 8*n4*n5^2), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n4 == 0 && n5 == 0 && n7 == 0 && n9 == 0 && 
     !(n3 == 0 || n6 == 1 || n8 == 1) -> 
  ((-1 - n3)*j[p4, -1, -1 + n2, 2 + n3, 0, 0, n6, 0, n8, 0, 1, 1, 0, 1, 1])/
    (6 - 3*d + 2*n2 + 2*n3 + 2*n6) + 
   ((-1 + n2 - n3)*j[p4, -1, n2, 1 + n3, 0, 0, n6, 0, n8, 0, 1, 1, 0, 1, 1])/
    (6 - 3*d + 2*n2 + 2*n3 + 2*n6) + 
   (n2*j[p4, -1, 1 + n2, n3, 0, 0, n6, 0, n8, 0, 1, 1, 0, 1, 1])/
    (6 - 3*d + 2*n2 + 2*n3 + 2*n6) + j[p4, 0, -1 + n2, 1 + n3, 0, 0, n6, 0, 
     n8, 0, 1, 1, 0, 0, 2]/(-6 + 3*d - 2*n2 - 2*n3 - 2*n6) - 
   j[p4, 0, -1 + n2, 1 + n3, 0, 0, n6, 0, n8, 0, 1, 1, 0, 1, 1] + 
   j[p4, 0, -1 + n2, 1 + n3, 0, 0, n6, 0, n8, 0, 2, 0, 0, 1, 1]/
    (-6 + 3*d - 2*n2 - 2*n3 - 2*n6) + 
   (n6*j[p4, 0, -1 + n2, 1 + n3, 0, 0, 1 + n6, 0, n8, 0, 0, 1, 0, 1, 1])/
    (-6 + 3*d - 2*n2 - 2*n3 - 2*n6) + 
   ((1 + n3)*j[p4, 0, -1 + n2, 2 + n3, 0, 0, n6, 0, -1 + n8, 0, 1, 1, 0, 1, 
      1])/(6 - 3*d + 2*n2 + 2*n3 + 2*n6) + 
   ((-1 - n3)*j[p4, 0, -1 + n2, 2 + n3, 0, 0, n6, 0, n8, 0, 0, 1, 0, 1, 1])/
    (6 - 3*d + 2*n2 + 2*n3 + 2*n6) + 
   ((1 + n3)*j[p4, 0, -1 + n2, 2 + n3, 0, 0, n6, 0, n8, 0, 1, 0, 0, 1, 1])/
    (6 - 3*d + 2*n2 + 2*n3 + 2*n6) + 
   ((-1 - n3)*j[p4, 0, -1 + n2, 2 + n3, 0, 0, n6, 0, n8, 0, 1, 1, -1, 1, 1])/
    (6 - 3*d + 2*n2 + 2*n3 + 2*n6) + 
   ((1 + n3)*j[p4, 0, -1 + n2, 2 + n3, 0, 0, n6, 0, n8, 0, 1, 1, 0, 1, 1])/
    (6 - 3*d + 2*n2 + 2*n3 + 2*n6) + j[p4, 0, n2, n3, 0, 0, n6, 0, n8, 0, 2, 
     0, 0, 1, 1]/(-6 + 3*d - 2*n2 - 2*n3 - 2*n6) + 
   j[p4, 0, n2, 1 + n3, -1, 0, n6, 0, n8, 0, 1, 1, 0, 0, 2]/
    (-6 + 3*d - 2*n2 - 2*n3 - 2*n6) + 
   (n6*j[p4, 0, n2, 1 + n3, -1, 0, 1 + n6, 0, n8, 0, 0, 1, 0, 1, 1])/
    (-6 + 3*d - 2*n2 - 2*n3 - 2*n6) - j[p4, 0, n2, 1 + n3, 0, -1, n6, 0, n8, 
     0, 1, 1, 0, 0, 2]/(-6 + 3*d - 2*n2 - 2*n3 - 2*n6) - 
   (n6*j[p4, 0, n2, 1 + n3, 0, -1, 1 + n6, 0, n8, 0, 0, 1, 0, 1, 1])/
    (-6 + 3*d - 2*n2 - 2*n3 - 2*n6) - j[p4, 0, n2, 1 + n3, 0, 0, -1 + n6, 0, 
     n8, 0, 1, 1, 0, 0, 2]/(-6 + 3*d - 2*n2 - 2*n3 - 2*n6) + 
   ((1 - d + n6)*j[p4, 0, n2, 1 + n3, 0, 0, -1 + n6, 0, n8, 0, 1, 1, 0, 1, 
      1])/(-1 + n6) - j[p4, 0, n2, 1 + n3, 0, 0, n6, -1, n8, 0, 1, 1, 0, 0, 
     2]/(-6 + 3*d - 2*n2 - 2*n3 - 2*n6) - 
   j[p4, 0, n2, 1 + n3, 0, 0, n6, -1, n8, 0, 2, 0, 0, 1, 1]/
    (-6 + 3*d - 2*n2 - 2*n3 - 2*n6) - j[p4, 0, n2, 1 + n3, 0, 0, n6, -1, n8, 
     0, 2, 1, 0, 0, 1]/(-6 + 3*d - 2*n2 - 2*n3 - 2*n6) - 
   j[p4, 0, n2, 1 + n3, 0, 0, n6, 0, -1 + n8, 0, 1, 1, 0, 0, 2]/
    (-6 + 3*d - 2*n2 - 2*n3 - 2*n6) + 
   ((12 - 10*d + 2*d^2 + 2*n2 - d*n2 + 10*n3 - 4*d*n3 + n2*n3 + 2*n3^2 + 
      5*n6 - 2*d*n6 + 2*n3*n6 + n2*n8 + n6*n8)*j[p4, 0, n2, 1 + n3, 0, 0, n6, 
      0, -1 + n8, 0, 1, 1, 0, 1, 1])/((-6 + 3*d - 2*n2 - 2*n3 - 2*n6)*
     (-1 + n8)) - j[p4, 0, n2, 1 + n3, 0, 0, n6, 0, -1 + n8, 0, 2, 0, 0, 1, 
     1]/(-6 + 3*d - 2*n2 - 2*n3 - 2*n6) + 
   j[p4, 0, n2, 1 + n3, 0, 0, n6, 0, n8, -1, 1, 1, 0, 0, 2]/
    (-6 + 3*d - 2*n2 - 2*n3 - 2*n6) + 
   ((1 - n2 - n3)*j[p4, 0, n2, 1 + n3, 0, 0, n6, 0, n8, 0, 0, 1, 0, 1, 1])/
    (6 - 3*d + 2*n2 + 2*n3 + 2*n6) + 
   (n3*j[p4, 0, n2, 1 + n3, 0, 0, n6, 0, n8, 0, 1, 0, 0, 1, 1])/
    (6 - 3*d + 2*n2 + 2*n3 + 2*n6) + j[p4, 0, n2, 1 + n3, 0, 0, n6, 0, n8, 0, 
     1, 1, -1, 0, 2]/(-6 + 3*d - 2*n2 - 2*n3 - 2*n6) + 
   ((-1 + d - n2)*j[p4, 0, n2, 1 + n3, 0, 0, n6, 0, n8, 0, 1, 1, 0, 0, 1])/
    (-6 + 3*d - 2*n2 - 2*n3 - 2*n6) - j[p4, 0, n2, 1 + n3, 0, 0, n6, 0, n8, 
     0, 1, 1, 0, 0, 2]/(-6 + 3*d - 2*n2 - 2*n3 - 2*n6) + 
   j[p4, 0, n2, 1 + n3, 0, 0, n6, 0, n8, 0, 1, 1, 0, 1, 0] + 
   ((2 - d + n2)*j[p4, 0, n2, 1 + n3, 0, 0, n6, 0, n8, 0, 1, 1, 0, 1, 1])/
    (-6 + 3*d - 2*n2 - 2*n3 - 2*n6) + j[p4, 0, n2, 1 + n3, 0, 0, n6, 0, n8, 
     0, 2, 0, -1, 1, 1]/(-6 + 3*d - 2*n2 - 2*n3 - 2*n6) - 
   j[p4, 0, n2, 1 + n3, 0, 0, n6, 0, n8, 0, 2, 0, 0, 1, 1]/
    (-6 + 3*d - 2*n2 - 2*n3 - 2*n6) - 
   (n6*j[p4, 0, n2, 1 + n3, 0, 0, 1 + n6, 0, -1 + n8, -1, 1, 1, 0, 1, 1])/
    (-6 + 3*d - 2*n2 - 2*n3 - 2*n6) + 
   ((-3 + 2*d - n2 - 5*n3 + 2*d*n3 - n2*n3 - 2*n3^2 - 2*n6 - 2*n3*n6 - n8 - 
      n3*n8)*j[p4, 0, n2, 2 + n3, 0, 0, n6, -1, -1 + n8, 0, 1, 1, 0, 1, 1])/
    ((-6 + 3*d - 2*n2 - 2*n3 - 2*n6)*(-1 + n8)) + 
   ((2 + 2*n3)*j[p4, 0, n2, 2 + n3, 0, 0, n6, -1, n8, 0, 1, 1, 0, 0, 1])/
    (6 - 3*d + 2*n2 + 2*n3 + 2*n6) + 
   ((-1 - n3)*j[p4, 0, n2, 2 + n3, 0, 0, n6, -1, n8, 0, 1, 1, 0, 1, 1])/
    (6 - 3*d + 2*n2 + 2*n3 + 2*n6) + 
   ((5 - 2*d + n2 + 7*n3 - 2*d*n3 + n2*n3 + 2*n3^2 + 2*n6 + 2*n3*n6 - n8 - 
      n3*n8)*j[p4, 0, n2, 2 + n3, 0, 0, n6, 0, -1 + n8, 0, 1, 1, 0, 0, 1])/
    ((-6 + 3*d - 2*n2 - 2*n3 - 2*n6)*(-1 + n8)) + 
   ((-1 - n3)*j[p4, 0, n2, 2 + n3, 0, 0, n6, 0, n8, 0, 1, 1, -1, 0, 1])/
    (6 - 3*d + 2*n2 + 2*n3 + 2*n6) + 
   ((1 + n3)*j[p4, 0, n2, 2 + n3, 0, 0, n6, 0, n8, 0, 1, 1, 0, 0, 1])/
    (6 - 3*d + 2*n2 + 2*n3 + 2*n6) + 
   ((-5*n2 + 2*d*n2 - n2^2 - 2*n2*n3 - 2*n2*n6 + n2*n8)*
     j[p4, 0, 1 + n2, n3, 0, 0, n6, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/
    ((-6 + 3*d - 2*n2 - 2*n3 - 2*n6)*(-1 + n8)) - 
   (n2*j[p4, 0, 1 + n2, n3, 0, 0, n6, 0, n8, 0, 0, 1, 0, 1, 1])/
    (6 - 3*d + 2*n2 + 2*n3 + 2*n6) + 
   ((5*n2 - 2*d*n2 + n2^2 + 2*n2*n3 + 2*n2*n6 - n2*n8)*
     j[p4, 0, 1 + n2, 1 + n3, 0, 0, n6, -1, -1 + n8, 0, 1, 1, 0, 1, 1])/
    ((-6 + 3*d - 2*n2 - 2*n3 - 2*n6)*(-1 + n8)) + 
   (2*n2*j[p4, 0, 1 + n2, 1 + n3, 0, 0, n6, -1, n8, 0, 1, 1, 0, 0, 1])/
    (6 - 3*d + 2*n2 + 2*n3 + 2*n6) - 
   (n2*j[p4, 0, 1 + n2, 1 + n3, 0, 0, n6, -1, n8, 0, 1, 1, 0, 1, 1])/
    (6 - 3*d + 2*n2 + 2*n3 + 2*n6) + 
   ((5*n2 - 2*d*n2 + n2^2 + 2*n2*n3 + 2*n2*n6 - n2*n8)*
     j[p4, 0, 1 + n2, 1 + n3, 0, 0, n6, 0, -2 + n8, 0, 1, 1, 0, 1, 1])/
    ((-6 + 3*d - 2*n2 - 2*n3 - 2*n6)*(-1 + n8)) + 
   ((-5*n2 + 2*d*n2 - n2^2 - 2*n2*n3 - 2*n2*n6 + n2*n8)*
     j[p4, 0, 1 + n2, 1 + n3, 0, 0, n6, 0, -1 + n8, 0, 1, 1, -1, 1, 1])/
    ((-6 + 3*d - 2*n2 - 2*n3 - 2*n6)*(-1 + n8)) + 
   ((8*n2 - 4*d*n2 + 2*n2^2 + 4*n2*n3 + 4*n2*n6)*j[p4, 0, 1 + n2, 1 + n3, 0, 
      0, n6, 0, -1 + n8, 0, 1, 1, 0, 0, 1])/((-6 + 3*d - 2*n2 - 2*n3 - 2*n6)*
     (-1 + n8)) + (n2*j[p4, 0, 1 + n2, 1 + n3, 0, 0, n6, 0, -1 + n8, 0, 1, 1, 
      0, 1, 1])/(6 - 3*d + 2*n2 + 2*n3 + 2*n6), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n13 == 1 && n3 == 0 && n4 == 0 && 
    n5 == 0 && n7 == 0 && n8 == 1 && n9 == 0 && n11 != 1 -> 
  ((-4 + d)*j[p4, 0, n2, 0, 0, 0, n6, 0, 2, 0, 1, -1 + n11, 0, 1, n14])/
   ((d - 2*n11)*(-1 + n11)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n4 == 0 && 
    n5 == 0 && n7 == 0 && n8 == 1 && n9 == 0 &&  !(n3 == 0 || n6 == 1) -> 
  ((d - 2*n1 - 2*n2 + d*n3 - 2*n1*n3 - 2*n2*n3 - 2*n6 - 2*n3*n6)*
     j[p4, -1 + n1, -1 + n2, 2 + n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 1, 1])/
    (-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 4*n1*n2 + 2*n2^2 + 
     4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((8 - 4*d + 2*n2 + 4*n3 + 4*n6)*j[p4, -1 + n1, n2, 1 + n3, 0, 0, n6, 0, 1, 
      0, 0, 2, 0, 1, 1])/(-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 
     4*n1*n2 + 2*n2^2 + 4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((-16 + 17*d - 4*d^2 - 2*n1 - 14*n2 + 5*d*n2 + 2*n1*n2 - 8*n3 + 5*d*n3 - 
      2*n1*n3 - 6*n2*n3 - 10*n6 + 4*d*n6 - 2*n2*n6 - 2*n3*n6)*
     j[p4, -1 + n1, n2, 1 + n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 1, 1])/
    (-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 4*n1*n2 + 2*n2^2 + 
     4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((4 - 2*d + n2 + 6*n3 - 2*d*n3 + n2*n3 + 2*n3^2 + 2*n6 + 2*n3*n6)*
     j[p4, -1 + n1, n2, 2 + n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 0, 1])/
    (-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 4*n1*n2 + 2*n2^2 + 
     4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((-8*n2 + 3*d*n2 + 2*n1*n2 - 4*n2*n3 - 2*n2*n6)*j[p4, -1 + n1, 1 + n2, n3, 
      0, 0, n6, 0, 1, 0, 1, 1, 0, 1, 1])/(-2*d + d^2 + 12*n1 - 6*d*n1 + 
     4*n2 - 3*d*n2 + 4*n1*n2 + 2*n2^2 + 4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 
     2*n2*n6) + ((4*n2 - 2*d*n2 + n2^2 + 2*n2*n3 + 2*n2*n6)*
     j[p4, -1 + n1, 1 + n2, 1 + n3, 0, 0, n6, 0, 0, 0, 1, 1, 0, 1, 1])/
    (-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 4*n1*n2 + 2*n2^2 + 
     4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((4 - d - 2*n1 - n2 + 2*n3)*j[p4, n1, -1 + n2, 1 + n3, 0, 0, n6, 0, 1, 0, 
      1, 1, 0, 0, 2])/(-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 
     4*n1*n2 + 2*n2^2 + 4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((40 - 34*d + 7*d^2 - 4*n1 + 2*d*n1 + 14*n2 - 5*d*n2 - 2*n1*n2 + 28*n3 - 
      12*d*n3 + 6*n2*n3 + 4*n3^2 + 16*n6 - 6*d*n6 + 2*n2*n6 + 4*n3*n6)*
     j[p4, n1, -1 + n2, 1 + n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 1, 1])/
    (-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 4*n1*n2 + 2*n2^2 + 
     4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((4 - d - 2*n1 - n2 + 2*n3)*j[p4, n1, -1 + n2, 1 + n3, 0, 0, n6, 0, 1, 0, 
      2, 0, 0, 1, 1])/(-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 
     4*n1*n2 + 2*n2^2 + 4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((4 - 2*d + n2 + 2*n3 + 2*n6)*j[p4, n1, -1 + n2, 1 + n3, 0, 0, n6, 0, 2, 
      0, 1, 0, 0, 1, 1])/(-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 
     4*n1*n2 + 2*n2^2 + 4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((4 - 2*d + n2 + 2*n3 + 2*n6)*j[p4, n1, -1 + n2, 1 + n3, 0, 0, n6, 0, 2, 
      0, 1, 1, 0, 0, 1])/(-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 
     4*n1*n2 + 2*n2^2 + 4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((4*n6 - d*n6 - 2*n1*n6 - n2*n6 + 2*n3*n6)*j[p4, n1, -1 + n2, 1 + n3, 0, 
      0, 1 + n6, 0, 1, 0, 0, 1, 0, 1, 1])/(-2*d + d^2 + 12*n1 - 6*d*n1 + 
     4*n2 - 3*d*n2 + 4*n1*n2 + 2*n2^2 + 4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 
     2*n2*n6) + ((-d + 2*n1 + 2*n2 - d*n3 + 2*n1*n3 + 2*n2*n3 + 2*n6 + 
      2*n3*n6)*j[p4, n1, -1 + n2, 2 + n3, 0, 0, n6, 0, 0, 0, 1, 1, 0, 1, 1])/
    (-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 4*n1*n2 + 2*n2^2 + 
     4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((d - 2*n1 - 2*n2 + d*n3 - 2*n1*n3 - 2*n2*n3 - 2*n6 - 2*n3*n6)*
     j[p4, n1, -1 + n2, 2 + n3, 0, 0, n6, 0, 1, 0, 0, 1, 0, 1, 1])/
    (-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 4*n1*n2 + 2*n2^2 + 
     4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((-d + 2*n1 + 2*n2 - d*n3 + 2*n1*n3 + 2*n2*n3 + 2*n6 + 2*n3*n6)*
     j[p4, n1, -1 + n2, 2 + n3, 0, 0, n6, 0, 1, 0, 1, 0, 0, 1, 1])/
    (-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 4*n1*n2 + 2*n2^2 + 
     4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((d - 2*n1 - 2*n2 + d*n3 - 2*n1*n3 - 2*n2*n3 - 2*n6 - 2*n3*n6)*
     j[p4, n1, -1 + n2, 2 + n3, 0, 0, n6, 0, 1, 0, 1, 1, -1, 1, 1])/
    (-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 4*n1*n2 + 2*n2^2 + 
     4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((4 - 2*d + n2 + 6*n3 - 2*d*n3 + n2*n3 + 2*n3^2 + 2*n6 + 2*n3*n6)*
     j[p4, n1, -1 + n2, 2 + n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 0, 1])/
    (-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 4*n1*n2 + 2*n2^2 + 
     4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((-d + 2*n1 + 2*n2 - d*n3 + 2*n1*n3 + 2*n2*n3 + 2*n6 + 2*n3*n6)*
     j[p4, n1, -1 + n2, 2 + n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 1, 1])/
    (-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 4*n1*n2 + 2*n2^2 + 
     4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((-4 + d + 2*n1 + n2 - 2*n3)*j[p4, n1, n2, n3, 0, 0, n6, 0, 0, 0, 1, 1, 0, 
      1, 2])/(-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 4*n1*n2 + 
     2*n2^2 + 4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((4 - d - 2*n1 - n2 + 2*n3)*j[p4, n1, n2, n3, 0, 0, n6, 0, 1, 0, 2, 0, 0, 
      1, 1])/(-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 4*n1*n2 + 
     2*n2^2 + 4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((4 - d - 2*n1 - n2 + 2*n3)*j[p4, n1, n2, 1 + n3, -1, 0, n6, 0, 0, 0, 1, 
      1, 0, 1, 2])/(-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 4*n1*n2 + 
     2*n2^2 + 4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((4 - d - 2*n1 - n2 + 2*n3)*j[p4, n1, n2, 1 + n3, -1, 0, n6, 0, 1, 0, 1, 
      1, 0, 0, 2])/(-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 4*n1*n2 + 
     2*n2^2 + 4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((4*n6 - d*n6 - 2*n1*n6 - n2*n6 + 2*n3*n6)*j[p4, n1, n2, 1 + n3, -1, 0, 
      1 + n6, 0, 1, 0, 0, 1, 0, 1, 1])/(-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 
     3*d*n2 + 4*n1*n2 + 2*n2^2 + 4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 
     2*n2*n6) + ((-4 + d + 2*n1 + n2 - 2*n3)*j[p4, n1, n2, 1 + n3, 0, -1, n6, 
      0, 0, 0, 1, 1, 0, 1, 2])/(-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 
     4*n1*n2 + 2*n2^2 + 4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((-4 + d + 2*n1 + n2 - 2*n3)*j[p4, n1, n2, 1 + n3, 0, -1, n6, 0, 1, 0, 1, 
      1, 0, 0, 2])/(-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 4*n1*n2 + 
     2*n2^2 + 4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((-4*n6 + d*n6 + 2*n1*n6 + n2*n6 - 2*n3*n6)*j[p4, n1, n2, 1 + n3, 0, -1, 
      1 + n6, 0, 1, 0, 0, 1, 0, 1, 1])/(-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 
     3*d*n2 + 4*n1*n2 + 2*n2^2 + 4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 
     2*n2*n6) + ((-4 + d + 2*n1 + n2 - 2*n3)*j[p4, n1, n2, 1 + n3, 0, 0, 
      -1 + n6, 0, 1, 0, 1, 1, 0, 0, 2])/(-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 
     3*d*n2 + 4*n1*n2 + 2*n2^2 + 4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 
     2*n2*n6) + ((16 - 30*d + 17*d^2 - 3*d^3 - 4*n1 + 6*d*n1 - 2*d^2*n1 + 
      8*n2 - 11*d*n2 + 3*d^2*n2 - 2*n1*n2 + 2*d*n1*n2 + 8*n3 - 12*d*n3 + 
      4*d^2*n3 + 4*n2*n3 - 4*d*n2*n3 + 20*n6 - 20*d*n6 + 5*d^2*n6 - 4*n1*n6 + 
      2*d*n1*n6 + 10*n2*n6 - 5*d*n2*n6 - 2*n1*n2*n6 + 8*n3*n6 - 4*d*n3*n6 + 
      4*n2*n3*n6 + 4*n6^2 - 2*d*n6^2 + 2*n2*n6^2)*j[p4, n1, n2, 1 + n3, 0, 0, 
      -1 + n6, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-1 + n6)*(2*d - d^2 - 12*n1 + 6*d*n1 - 4*n2 + 3*d*n2 - 4*n1*n2 - 
      2*n2^2 - 4*n1*n3 - 4*n6 + 2*d*n6 - 4*n1*n6 - 2*n2*n6)) + 
   ((-8 + 4*d - 2*n2 - 4*n3 - 4*n6)*j[p4, n1, n2, 1 + n3, 0, 0, n6, -1, 0, 0, 
      1, 2, 0, 1, 1])/(-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 
     4*n1*n2 + 2*n2^2 + 4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((-4 + d + 2*n1 + n2 - 2*n3)*j[p4, n1, n2, 1 + n3, 0, 0, n6, -1, 0, 0, 2, 
      1, 0, 1, 1])/(-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 4*n1*n2 + 
     2*n2^2 + 4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((-4 + d + 2*n1 + n2 - 2*n3)*j[p4, n1, n2, 1 + n3, 0, 0, n6, -1, 1, 0, 1, 
      1, 0, 0, 2])/(-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 4*n1*n2 + 
     2*n2^2 + 4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((-4 + d + 2*n1 + n2 - 2*n3)*j[p4, n1, n2, 1 + n3, 0, 0, n6, -1, 1, 0, 2, 
      0, 0, 1, 1])/(-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 4*n1*n2 + 
     2*n2^2 + 4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((-4 + d + 2*n1 + n2 - 2*n3)*j[p4, n1, n2, 1 + n3, 0, 0, n6, -1, 1, 0, 2, 
      1, 0, 0, 1])/(-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 4*n1*n2 + 
     2*n2^2 + 4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((-4 + 2*d - n2 - 2*n3 - 2*n6)*j[p4, n1, n2, 1 + n3, 0, 0, n6, -1, 2, 0, 
      1, 0, 0, 1, 1])/(-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 
     4*n1*n2 + 2*n2^2 + 4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((-4 + 2*d - n2 - 2*n3 - 2*n6)*j[p4, n1, n2, 1 + n3, 0, 0, n6, -1, 2, 0, 
      1, 1, 0, 0, 1])/(-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 
     4*n1*n2 + 2*n2^2 + 4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((-16 + 14*d - 3*d^2 + 8*n1 - 4*d*n1 + n1*n2 - 20*n3 + 9*d*n3 + 4*n1*n3 - 
      n2*n3 - 6*n3^2 + d*n6 - n2*n6 - 2*n3*n6)*j[p4, n1, n2, 1 + n3, 0, 0, 
      n6, 0, 0, 0, 1, 1, 0, 1, 1])/(-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 
     3*d*n2 + 4*n1*n2 + 2*n2^2 + 4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 
     2*n2*n6) + ((4 - d - 2*n1 - n2 + 2*n3)*j[p4, n1, n2, 1 + n3, 0, 0, n6, 
      0, 1, -1, 1, 1, 0, 0, 2])/(-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 
     3*d*n2 + 4*n1*n2 + 2*n2^2 + 4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 
     2*n2*n6) + ((-8 + 3*d + 6*n1 - 2*d*n1 + 4*n2 - d*n2 - n1*n2 - n2^2 - 
      d*n3 + n2*n3 + 2*n3^2 - 2*n6 + 2*n1*n6)*j[p4, n1, n2, 1 + n3, 0, 0, n6, 
      0, 1, 0, 0, 1, 0, 1, 1])/(-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 
     4*n1*n2 + 2*n2^2 + 4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((4 - 2*d + n2 + 2*n3 + 2*n6)*j[p4, n1, n2, 1 + n3, 0, 0, n6, 0, 1, 0, 0, 
      2, -1, 1, 1])/(-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 4*n1*n2 + 
     2*n2^2 + 4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((-4 + 2*d - n2 - 2*n3 - 2*n6)*j[p4, n1, n2, 1 + n3, 0, 0, n6, 0, 1, 0, 0, 
      2, 0, 1, 1])/(-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 4*n1*n2 + 
     2*n2^2 + 4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((4 - 2*d - 4*n1 + 2*d*n1 + n2 - n1*n2 - 2*n3 + d*n3 + n2*n3 - 2*n3^2 + 
      2*n6 - 2*n1*n6)*j[p4, n1, n2, 1 + n3, 0, 0, n6, 0, 1, 0, 1, 0, 0, 1, 
      1])/(-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 4*n1*n2 + 2*n2^2 + 
     4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((4 - d - 2*n1 - n2 + 2*n3)*j[p4, n1, n2, 1 + n3, 0, 0, n6, 0, 1, 0, 1, 1, 
      -1, 0, 2])/(-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 4*n1*n2 + 
     2*n2^2 + 4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((-20 + 17*d - 3*d^2 + 2*n1 - 2*d*n1 - 3*n2 - d*n2 + 2*n1*n2 + 2*n2^2 - 
      14*n3 + 6*d*n3 - n2*n3 - 2*n3^2 - 8*n6 + 2*d*n6 + 2*n2*n6 - 2*n3*n6)*
     j[p4, n1, n2, 1 + n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 0, 1])/
    (-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 4*n1*n2 + 2*n2^2 + 
     4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((-4 + d + 2*n1 + n2 - 2*n3)*j[p4, n1, n2, 1 + n3, 0, 0, n6, 0, 1, 0, 1, 
      1, 0, 0, 2])/(-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 4*n1*n2 + 
     2*n2^2 + 4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((-16 + 14*d - 3*d^2 + 4*n1 - 2*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 8*n3 + 
      4*d*n3 - 4*n2*n3 - 4*n6 + 2*d*n6 - 2*n2*n6)*j[p4, n1, n2, 1 + n3, 0, 0, 
      n6, 0, 1, 0, 1, 1, 0, 1, 0])/(-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 
     3*d*n2 + 4*n1*n2 + 2*n2^2 + 4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 
     2*n2*n6) + ((16 - 14*d + 3*d^2 - 4*n1 + 2*d*n1 + 8*n2 - 3*d*n2 - 
      2*n1*n2 + 8*n3 - 4*d*n3 + 4*n2*n3 + 4*n6 - 2*d*n6 + 2*n2*n6)*
     j[p4, n1, n2, 1 + n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 1, 1])/
    (-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 4*n1*n2 + 2*n2^2 + 
     4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((4 - d - 2*n1 - n2 + 2*n3)*j[p4, n1, n2, 1 + n3, 0, 0, n6, 0, 1, 0, 2, 0, 
      -1, 1, 1])/(-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 4*n1*n2 + 
     2*n2^2 + 4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((-4 + d + 2*n1 + n2 - 2*n3)*j[p4, n1, n2, 1 + n3, 0, 0, n6, 0, 1, 0, 2, 
      0, 0, 1, 1])/(-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 4*n1*n2 + 
     2*n2^2 + 4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((-4*n6 + d*n6 + 2*n1*n6 + n2*n6 - 2*n3*n6)*j[p4, n1, n2, 1 + n3, 0, 0, 
      1 + n6, 0, 0, -1, 1, 1, 0, 1, 1])/(-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 
     3*d*n2 + 4*n1*n2 + 2*n2^2 + 4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 
     2*n2*n6) + ((-12 + 4*d + 4*n1 + n2 - 18*n3 + 4*d*n3 + 4*n1*n3 + n2*n3 - 
      6*n3^2 - 2*n6 - 2*n3*n6)*j[p4, n1, n2, 2 + n3, 0, 0, n6, -1, 0, 0, 1, 
      1, 0, 1, 1])/(-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 4*n1*n2 + 
     2*n2^2 + 4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((4 - 2*d + n2 + 6*n3 - 2*d*n3 + n2*n3 + 2*n3^2 + 2*n6 + 2*n3*n6)*
     j[p4, n1, n2, 2 + n3, 0, 0, n6, -1, 1, 0, 0, 1, 0, 1, 1])/
    (-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 4*n1*n2 + 2*n2^2 + 
     4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((-4 + 2*d - n2 - 6*n3 + 2*d*n3 - n2*n3 - 2*n3^2 - 2*n6 - 2*n3*n6)*
     j[p4, n1, n2, 2 + n3, 0, 0, n6, -1, 1, 0, 1, 0, 0, 1, 1])/
    (-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 4*n1*n2 + 2*n2^2 + 
     4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((-12 + 4*d + 4*n1 + n2 - 18*n3 + 4*d*n3 + 4*n1*n3 + n2*n3 - 6*n3^2 - 
      2*n6 - 2*n3*n6)*j[p4, n1, n2, 2 + n3, 0, 0, n6, -1, 1, 0, 1, 1, 0, 0, 
      1])/(-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 4*n1*n2 + 2*n2^2 + 
     4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((d - 2*n1 - 2*n2 + d*n3 - 2*n1*n3 - 2*n2*n3 - 2*n6 - 2*n3*n6)*
     j[p4, n1, n2, 2 + n3, 0, 0, n6, -1, 1, 0, 1, 1, 0, 1, 1])/
    (-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 4*n1*n2 + 2*n2^2 + 
     4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((8 - 3*d - 2*n1 + 12*n3 - 3*d*n3 - 2*n1*n3 + 4*n3^2 + 2*n6 + 2*n3*n6)*
     j[p4, n1, n2, 2 + n3, 0, 0, n6, 0, 1, 0, 1, 1, -1, 0, 1])/
    (-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 4*n1*n2 + 2*n2^2 + 
     4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((-4 + d + 2*n1 + n2 - 6*n3 + d*n3 + 2*n1*n3 + n2*n3 - 2*n3^2)*
     j[p4, n1, n2, 2 + n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 0, 1])/
    (-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 4*n1*n2 + 2*n2^2 + 
     4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((4*n2 - d*n2 - 2*n1*n2 - n2^2 + 2*n2*n3)*j[p4, n1, 1 + n2, n3, 0, 0, n6, 
      0, 0, 0, 1, 1, 0, 1, 1])/(-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 
     4*n1*n2 + 2*n2^2 + 4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((8*n2 - 3*d*n2 - 2*n1*n2 + 4*n2*n3 + 2*n2*n6)*j[p4, n1, 1 + n2, n3, 0, 0, 
      n6, 0, 1, 0, 0, 1, 0, 1, 1])/(-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 
     3*d*n2 + 4*n1*n2 + 2*n2^2 + 4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 
     2*n2*n6) + ((-8*n2 + 2*d*n2 + 4*n1*n2 + 2*n2^2 - 4*n2*n3)*
     j[p4, n1, 1 + n2, 1 + n3, 0, 0, n6, -1, 0, 0, 1, 1, 0, 1, 1])/
    (-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 4*n1*n2 + 2*n2^2 + 
     4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((-4*n2 + 2*d*n2 - n2^2 - 2*n2*n3 - 2*n2*n6)*j[p4, n1, 1 + n2, 1 + n3, 0, 
      0, n6, -1, 1, 0, 0, 1, 0, 1, 1])/(-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 
     3*d*n2 + 4*n1*n2 + 2*n2^2 + 4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 
     2*n2*n6) + ((-8*n2 + 2*d*n2 + 4*n1*n2 + 2*n2^2 - 4*n2*n3)*
     j[p4, n1, 1 + n2, 1 + n3, 0, 0, n6, -1, 1, 0, 1, 1, 0, 0, 1])/
    (-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 4*n1*n2 + 2*n2^2 + 
     4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((8*n2 - 3*d*n2 - 2*n1*n2 + 4*n2*n3 + 2*n2*n6)*j[p4, n1, 1 + n2, 1 + n3, 
      0, 0, n6, -1, 1, 0, 1, 1, 0, 1, 1])/(-2*d + d^2 + 12*n1 - 6*d*n1 + 
     4*n2 - 3*d*n2 + 4*n1*n2 + 2*n2^2 + 4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 
     2*n2*n6) + ((4*n2 - d*n2 - 2*n1*n2 - n2^2 + 2*n2*n3)*
     j[p4, n1, 1 + n2, 1 + n3, 0, 0, n6, 0, 0, 0, 1, 1, -1, 1, 1])/
    (-2*d + d^2 + 12*n1 - 6*d*n1 + 4*n2 - 3*d*n2 + 4*n1*n2 + 2*n2^2 + 
     4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 2*n2*n6) + 
   ((-8*n2 + 3*d*n2 + 2*n1*n2 - 4*n2*n3 - 2*n2*n6)*j[p4, n1, 1 + n2, 1 + n3, 
      0, 0, n6, 0, 0, 0, 1, 1, 0, 1, 1])/(-2*d + d^2 + 12*n1 - 6*d*n1 + 
     4*n2 - 3*d*n2 + 4*n1*n2 + 2*n2^2 + 4*n1*n3 + 4*n6 - 2*d*n6 + 4*n1*n6 + 
     2*n2*n6) + ((-4*n1 + 2*d*n1 - n1*n2 - 2*n1*n3 - 2*n1*n6)*
     j[p4, 1 + n1, -1 + n2, 1 + n3, 0, 0, n6, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*d - d^2 - 12*n1 + 6*d*n1 - 4*n2 + 3*d*n2 - 4*n1*n2 - 2*n2^2 - 
     4*n1*n3 - 4*n6 + 2*d*n6 - 4*n1*n6 - 2*n2*n6) + 
   ((4*n1 - 2*d*n1 + n1*n2 + 2*n1*n3 + 2*n1*n6)*j[p4, 1 + n1, n2, 1 + n3, 0, 
      0, n6, 0, 0, 0, 1, 1, 0, 1, 1])/(2*d - d^2 - 12*n1 + 6*d*n1 - 4*n2 + 
     3*d*n2 - 4*n1*n2 - 2*n2^2 - 4*n1*n3 - 4*n6 + 2*d*n6 - 4*n1*n6 - 
     2*n2*n6) + ((4*n1 - 2*d*n1 + n1*n2 + 2*n1*n3 + 2*n1*n6)*
     j[p4, 1 + n1, n2, 1 + n3, 0, 0, n6, 0, 1, 0, 0, 1, 0, 1, 1])/
    (2*d - d^2 - 12*n1 + 6*d*n1 - 4*n2 + 3*d*n2 - 4*n1*n2 - 2*n2^2 - 
     4*n1*n3 - 4*n6 + 2*d*n6 - 4*n1*n6 - 2*n2*n6) + 
   ((-4*n1 + 2*d*n1 - n1*n2 - 2*n1*n3 - 2*n1*n6)*j[p4, 1 + n1, n2, 1 + n3, 0, 
      0, n6, 0, 1, 0, 1, 0, 0, 1, 1])/(2*d - d^2 - 12*n1 + 6*d*n1 - 4*n2 + 
     3*d*n2 - 4*n1*n2 - 2*n2^2 - 4*n1*n3 - 4*n6 + 2*d*n6 - 4*n1*n6 - 
     2*n2*n6), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n12 == 0 && n13 == 1 && n2 == 0 && n3 == 0 && n4 == 0 && 
    n5 == 0 && n6 == 1 && n7 == 0 && n9 == 0 && n10 != 1 -> 
  ((-4 + d)*j[p4, 0, 0, 0, 0, 0, 2, 0, n8, 0, -1 + n10, n11, 0, 1, n14])/
   ((d - 2*n10)*(-1 + n10)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n11 == 1 && n12 == 0 && n13 == 1 && n2 == 0 && n4 == 0 && 
    n5 == 0 && n6 == 1 && n7 == 0 && n9 == 0 && 
     !(n10 == 1 || n3 == 0 || n8 == 1) -> 
  -j[p4, 0, -1, 1 + n3, 0, 0, 1, 0, n8, 0, n10, 1, 0, 1, n14] - 
   (2*j[p4, 0, -1, 1 + n3, 0, 0, 2, 0, n8, 0, -1 + n10, 1, 0, 1, n14])/
    (-1 + n10) + ((-1 - n3)*j[p4, 0, -1, 2 + n3, 0, 0, 1, 0, n8, 0, -1 + n10, 
      1, 0, 1, n14])/(-1 + n10) + j[p4, 0, 0, n3, 0, 0, 2, 0, n8, 0, 
     -1 + n10, 1, 0, 1, n14]/(1 - n10) + 
   j[p4, 0, 0, 1 + n3, -1, 0, 2, 0, n8, 0, -1 + n10, 1, 0, 1, n14]/
    (1 - n10) + j[p4, 0, 0, 1 + n3, 0, -1, 2, 0, n8, 0, -1 + n10, 1, 0, 1, 
     n14]/(-1 + n10) + ((-3 + d - n3)*j[p4, 0, 0, 1 + n3, 0, 0, 1, 0, 
      -1 + n8, 0, n10, 1, 0, 1, n14])/(-1 + n8) + 
   ((-2 + 2*d - 2*n10 - 3*n3)*j[p4, 0, 0, 1 + n3, 0, 0, 1, 0, n8, 0, 
      -1 + n10, 1, 0, 1, n14])/(-1 + n10) + j[p4, 0, 0, 1 + n3, 0, 0, 1, 0, 
    n8, 0, n10, 0, 0, 1, n14] + j[p4, 0, 0, 1 + n3, 0, 0, 1, 0, n8, 0, n10, 
    1, 0, 1, n14] + j[p4, 0, 0, 1 + n3, 0, 0, 2, -1, n8, 0, -1 + n10, 1, 0, 
     1, n14]/(-1 + n10) + (2*j[p4, 0, 0, 1 + n3, 0, 0, 2, 0, -1 + n8, 0, 
      -1 + n10, 1, 0, 1, n14])/(-1 + n10) + 
   j[p4, 0, 0, 1 + n3, 0, 0, 2, 0, n8, 0, -1 + n10, 1, -1, 1, n14]/
    (1 - n10) + j[p4, 0, 0, 1 + n3, 0, 0, 2, 0, n8, 0, -1 + n10, 1, 0, 0, 
     n14]/(-1 + n10) + j[p4, 0, 0, 1 + n3, 0, 0, 2, 0, n8, 0, -1 + n10, 1, 0, 
     1, -1 + n14]/(-1 + n10) + 
   ((1 + n3)*j[p4, 0, 0, 2 + n3, 0, 0, 1, -1, -1 + n8, 0, n10, 1, 0, 1, n14])/
    (-1 + n8) + ((2 + 2*n3)*j[p4, 0, 0, 2 + n3, 0, 0, 1, 0, -1 + n8, 0, 
      -1 + n10, 1, 0, 1, n14])/(-1 + n10) + 
   ((-1 - n3)*j[p4, 0, 0, 2 + n3, 0, 0, 1, 0, -1 + n8, 0, n10, 1, 0, 0, n14])/
    (-1 + n8) + ((-1 - n3)*j[p4, 0, 0, 2 + n3, 0, 0, 1, 0, n8, 0, -1 + n10, 
      1, -1, 1, n14])/(-1 + n10) + 
   ((2 + 2*n3)*j[p4, 0, 0, 2 + n3, 0, 0, 1, 0, n8, 0, -1 + n10, 1, 0, 0, 
      n14])/(-1 + n10), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?NonPositive, (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, 
    (n7_)?NonPositive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n4 == 0 && 
    n5 == 0 && n6 == 1 && n7 == -1 && n9 == 0 && n14 != 1 -> 
  ((-4 + d)*j[p4, 0, n2, n3, 0, 0, 2, -1, n8, 0, 1, 1, 0, 1, -1 + n14])/
   ((d - 2*n14)*(-1 + n14)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n4 == 0 && n6 == 1 && n7 == -1 && n9 == 0 &&  !(n5 == 0 || n8 == 1) -> 
  ((-4 + d - 2*n5)*j[p4, -1, -1 + n2, n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, 0, 1, 
      1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4*n3 + d*n3 - 2*n3*n5)*j[p4, -1, -1 + n2, 1 + n3, 0, 1 + n5, 1, -1, n8, 
      0, 1, 1, 0, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, -1, n2, -1 + n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, 0, 
      1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, -1, n2, n3, 0, 1 + n5, 1, -1, n8, 0, 0, 2, 0, 1, 1])/
    ((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-28 + 39*d - 8*d^2 - 8*n2 + 2*d*n2 - 20*n3 + 5*d*n3 - 30*n5 + 20*d*n5 - 
      4*n2*n5 - 10*n3*n5 - 8*n5^2 - 20*n8 + 5*d*n8 - 10*n5*n8)*
     j[p4, -1, n2, n3, 0, 1 + n5, 1, -1, n8, 0, 1, 1, 0, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, -1, n2, n3, 0, 1 + n5, 1, -1, n8, 0, 2, 1, 0, 0, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, -1, n2, n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 1, 1, 0, 1, 
      1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, -1, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, 0, 0, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 6*n5 + d*n5 - 2*n5^2)*j[p4, -1, n2, n3, 0, 2 + n5, 1, -1, n8, 
      0, 1, 1, 0, 0, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 6*n5 - d*n5 + 2*n5^2)*j[p4, -1, n2, n3, 0, 2 + n5, 1, -1, n8, 0, 
      1, 1, 0, 1, 0])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4*n3 + d*n3 - 2*n3*n5)*j[p4, -1, n2, 1 + n3, 0, 1 + n5, 1, -1, -1 + n8, 
      0, 1, 1, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4*n2 - d*n2 + 2*n2*n5)*j[p4, -1, 1 + n2, -1 + n3, 0, 1 + n5, 1, -1, n8, 
      0, 1, 1, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4*n2 + d*n2 - 2*n2*n5)*j[p4, -1, 1 + n2, n3, 0, 1 + n5, 1, -2, n8, 0, 
      1, 1, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4*n2 - d*n2 + 2*n2*n5)*j[p4, -1, 1 + n2, n3, 0, 1 + n5, 1, -1, n8, 0, 1, 
      1, -1, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4*n2 + d*n2 - 2*n2*n5)*j[p4, -1, 1 + n2, n3, 0, 1 + n5, 1, -1, n8, 0, 
      1, 1, 0, 0, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) - 
   j[p4, 0, -1 + n2, n3, 0, 1 + n5, 1, -1, n8, 0, 1, 1, 0, 0, 2]/
    (2*(-3 + d - n5)) + ((24 - 18*d + 3*d^2 + 8*n3 - 2*d*n3 + 20*n5 - 
      8*d*n5 + 4*n3*n5 + 4*n5^2)*j[p4, 0, -1 + n2, n3, 0, 1 + n5, 1, -1, n8, 
      0, 1, 1, 0, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, -1 + n2, n3, 0, 1 + n5, 1, -1, n8, 0, 2, 0, 0, 
      1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, -1 + n2, n3, 0, 1 + n5, 1, -1, n8, 0, 2, 1, 0, 
      0, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4*n8 - d*n8 + 2*n5*n8)*j[p4, 0, -1 + n2, n3, 0, 1 + n5, 1, -1, 1 + n8, 
      0, 1, 0, 0, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4*n8 - d*n8 + 2*n5*n8)*j[p4, 0, -1 + n2, n3, 0, 1 + n5, 1, -1, 1 + n8, 
      0, 1, 1, 0, 0, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, -1 + n2, n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 1, 1, 
      0, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, -1 + n2, n3, 0, 1 + n5, 1, 0, n8, 0, 0, 1, 0, 1, 
      1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, -1 + n2, n3, 0, 1 + n5, 1, 0, n8, 0, 1, 0, 0, 1, 
      1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, -1 + n2, n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, -1, 
      1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, -1 + n2, n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, 0, 0, 
      1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, -1 + n2, n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, 0, 1, 
      1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-1 - n2 + n3 - n5)*j[p4, 0, -1 + n2, n3, 0, 1 + n5, 2, -1, -1 + n8, 0, 
      1, 1, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, -1 + n2, n3, 0, 1 + n5, 2, -1, n8, 0, 0, 1, 0, 
      1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) - 
   j[p4, 0, -1 + n2, n3, 0, 1 + n5, 2, -1, n8, 0, 1, 1, 0, 0, 1]/
    (2*(-3 + d - n5)) - j[p4, 0, -1 + n2, n3, 0, 1 + n5, 2, -1, n8, 0, 1, 1, 
     0, 1, 0]/(2*(-3 + d - n5)) + 
   ((-1 - n5)*j[p4, 0, -1 + n2, n3, 0, 2 + n5, 1, -1, n8, 0, 1, 1, 0, 0, 1])/
    (2*(3 - d + n5)) + ((1 + n5)*j[p4, 0, -1 + n2, n3, 0, 2 + n5, 1, -1, n8, 
      0, 1, 1, 0, 1, 0])/(2*(3 - d + n5)) + 
   ((4*n3 - d*n3 + 2*n3*n5)*j[p4, 0, -1 + n2, 1 + n3, 0, 1 + n5, 1, -1, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4*n3 + d*n3 - 2*n3*n5)*j[p4, 0, -1 + n2, 1 + n3, 0, 1 + n5, 1, -1, n8, 
      0, 0, 1, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4*n3 - d*n3 + 2*n3*n5)*j[p4, 0, -1 + n2, 1 + n3, 0, 1 + n5, 1, -1, n8, 
      0, 1, 0, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4*n3 + d*n3 - 2*n3*n5)*j[p4, 0, -1 + n2, 1 + n3, 0, 1 + n5, 1, -1, n8, 
      0, 1, 1, -1, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4*n3 - d*n3 + 2*n3*n5)*j[p4, 0, -1 + n2, 1 + n3, 0, 1 + n5, 1, -1, n8, 
      0, 1, 1, 0, 0, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4*n3 - d*n3 + 2*n3*n5)*j[p4, 0, -1 + n2, 1 + n3, 0, 1 + n5, 1, -1, n8, 
      0, 1, 1, 0, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) - 
   j[p4, 0, n2, -1 + n3, 0, 1 + n5, 1, -1, n8, 0, 1, 1, 0, 0, 2]/
    (2*(-3 + d - n5)) + ((-16 + 16*d - 3*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 - 
      12*n5 + 7*d*n5 - 2*n2*n5 - 4*n3*n5 - 2*n5^2 - 4*n8 + d*n8 - 2*n5*n8)*
     j[p4, 0, n2, -1 + n3, 0, 1 + n5, 1, -1, n8, 0, 1, 1, 0, 1, 1])/
    ((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, -1 + n3, 0, 1 + n5, 1, -1, n8, 0, 2, 0, 0, 
      1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, -1 + n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 1, 1, 
      0, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, -1 + n3, 0, 1 + n5, 1, 0, n8, 0, 0, 1, 0, 1, 
      1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, -1 + n3, 0, 1 + n5, 1, 0, n8, 0, 1, 0, 0, 1, 
      1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-1 - n2 + n3 - n5)*j[p4, 0, n2, -1 + n3, 0, 1 + n5, 2, -1, -1 + n8, 0, 
      1, 1, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, -1 + n3, 0, 1 + n5, 2, -1, n8, 0, 0, 1, 0, 
      1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, n3, -1, 1 + n5, 1, -1, n8, 0, 1, 1, 0, 1, 
      1])/(-2 + d + 2*n2 - 2*n3) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, n3, -1, 1 + n5, 2, -1, n8, 0, 0, 1, 0, 1, 
      1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, -1, 1 + n5, 2, -1, n8, 0, 1, 1, 0, 0, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, -1, 1 + n5, 2, -1, n8, 0, 1, 1, 0, 1, 0])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 6*n5 + d*n5 - 2*n5^2)*j[p4, 0, n2, n3, -1, 2 + n5, 1, -1, n8, 
      0, 1, 1, 0, 0, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 6*n5 - d*n5 + 2*n5^2)*j[p4, 0, n2, n3, -1, 2 + n5, 1, -1, n8, 0, 
      1, 1, 0, 1, 0])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   j[p4, 0, n2, n3, 0, n5, 0, -1, n8, 0, 1, 1, 0, 1, 2]/(2*(-3 + d - n5)) + 
   j[p4, 0, n2, n3, 0, n5, 1, -1, n8, 0, 1, 1, 0, 0, 2]/(2*(-3 + d - n5)) + 
   j[p4, 0, n2, n3, 0, n5, 2, -1, n8, 0, 1, 1, 0, 0, 1]/(2*(-3 + d - n5)) + 
   j[p4, 0, n2, n3, 0, n5, 2, -1, n8, 0, 1, 1, 0, 1, 0]/(2*(-3 + d - n5)) - 
   (n5*j[p4, 0, n2, n3, 0, 1 + n5, 0, -1, n8, 0, 1, 1, 0, 1, 1])/
    (2*(3 - d + n5)) + j[p4, 0, n2, n3, 0, 1 + n5, 1, -2, n8, 0, 1, 1, 0, 0, 
     2]/(2*(-3 + d - n5)) + ((4 - d + 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, 
      -2, n8, 0, 2, 0, 0, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, -2, n8, 0, 2, 1, 0, 0, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4*n8 + d*n8 - 2*n5*n8)*j[p4, 0, n2, n3, 0, 1 + n5, 1, -2, 1 + n8, 0, 1, 
      0, 0, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4*n8 + d*n8 - 2*n5*n8)*j[p4, 0, n2, n3, 0, 1 + n5, 1, -2, 1 + n8, 0, 1, 
      1, 0, 0, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, -1, -1 + n8, 0, 0, 2, 0, 
      1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   j[p4, 0, n2, n3, 0, 1 + n5, 1, -1, -1 + n8, 0, 1, 1, 0, 0, 2]/
    (2*(-3 + d - n5)) + ((-12 + 71*d - 37*d^2 + 5*d^3 - 68*n3 + 61*d*n3 - 
      11*d^2*n3 - 24*n3^2 + 6*d*n3^2 - 20*n5 + 58*d*n5 - 15*d^2*n5 + 
      2*n2*n5 - 60*n3*n5 + 28*d*n3*n5 - 12*n3^2*n5 - 6*n5^2 + 10*d*n5^2 - 
      12*n3*n5^2 - 64*n8 + 32*d*n8 - 4*d^2*n8 - 28*n3*n8 + 7*d*n3*n8 - 
      42*n5*n8 + 10*d*n5*n8 - 2*n2*n5*n8 - 12*n3*n5*n8 - 6*n5^2*n8 + 4*n8^2 - 
      d*n8^2 + 2*n5*n8^2)*j[p4, 0, n2, n3, 0, 1 + n5, 1, -1, -1 + n8, 0, 1, 
      1, 0, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)*(-1 + n8)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, -1, -1 + n8, 0, 2, 0, 0, 1, 
      1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4*n2 + d*n2 - 8*n3 + 2*d*n3 - 2*n2*n5 - 4*n3*n5)*
     j[p4, 0, n2, n3, 0, 1 + n5, 1, -1, n8, 0, 0, 1, 0, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, -1, n8, 0, 0, 2, -1, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, -1, n8, 0, 0, 2, 0, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 8*n3 - 2*d*n3 + 2*n5 + 4*n3*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, 
      -1, n8, 0, 1, 0, 0, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) - 
   j[p4, 0, n2, n3, 0, 1 + n5, 1, -1, n8, 0, 1, 1, -1, 0, 2]/
    (2*(-3 + d - n5)) + ((-24 + 26*d - 5*d^2 - 16*n3 + 4*d*n3 - 10*n5 + 
      9*d*n5 - 2*n2*n5 - 6*n3*n5 - 20*n8 + 5*d*n8 - 10*n5*n8)*
     j[p4, 0, n2, n3, 0, 1 + n5, 1, -1, n8, 0, 1, 1, 0, 0, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-8 + 2*d - 6*n5 + d*n5 + 2*n2*n5 - 2*n3*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 
      1, -1, n8, 0, 1, 1, 0, 1, 0])/(2*(-2 + d + 2*n2 - 2*n3)*
     (-3 + d - n5)) + ((12 - 19*d + 4*d^2 + 8*n2 - 2*d*n2 + 8*n3 - 2*d*n3 + 
      14*n5 - 10*d*n5 + 4*n2*n5 + 4*n3*n5 + 4*n5^2 + 16*n8 - 4*d*n8 + 
      8*n5*n8)*j[p4, 0, n2, n3, 0, 1 + n5, 1, -1, n8, 0, 1, 1, 0, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, -1, n8, 0, 2, 0, -1, 1, 
      1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, -1, n8, 0, 2, 0, 0, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, 0, -2 + n8, 0, 1, 1, 0, 1, 
      1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 1, 1, -1, 1, 
      1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 1, 1, 0, 0, 
      1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 1, 1, 0, 1, 
      1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 0, 1, -1, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 1, 0, -1, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((1 + n2 - n3 + n5)*j[p4, 0, n2, n3, 0, 1 + n5, 2, -2, -1 + n8, 0, 1, 1, 
      0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 2, -2, n8, 0, 0, 1, 0, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((1 + n2 - n3 + n5)*j[p4, 0, n2, n3, 0, 1 + n5, 2, -1, -2 + n8, 0, 1, 1, 
      0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 2, -1, -1 + n8, -1, 1, 1, 0, 
      1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-1 - n2 + n3 - n5)*j[p4, 0, n2, n3, 0, 1 + n5, 2, -1, -1 + n8, 0, 1, 1, 
      -1, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   j[p4, 0, n2, n3, 0, 1 + n5, 2, -1, -1 + n8, 0, 1, 1, 0, 0, 1]/
    (2*(-3 + d - n5)) + j[p4, 0, n2, n3, 0, 1 + n5, 2, -1, -1 + n8, 0, 1, 1, 
     0, 1, 0]/(2*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 2, -1, n8, -1, 1, 1, 0, 0, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 2, -1, n8, -1, 1, 1, 0, 1, 0])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 2, -1, n8, 0, 0, 1, -1, 1, 
      1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 6*n5 - d*n5 + 2*n5^2)*j[p4, 0, n2, n3, 0, 2 + n5, 1, -2, n8, 0, 
      1, 1, 0, 0, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 6*n5 + d*n5 - 2*n5^2)*j[p4, 0, n2, n3, 0, 2 + n5, 1, -2, n8, 0, 
      1, 1, 0, 1, 0])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-14 + 24*d - 5*d^2 + 2*n2 - 26*n3 + 6*d*n3 - 20*n5 + 34*d*n5 - 
      5*d^2*n5 + 2*n2*n5 - 38*n3*n5 + 6*d*n3*n5 - 6*n5^2 + 10*d*n5^2 - 
      12*n3*n5^2 - 10*n8 + 2*d*n8 - 2*n2*n8 + 2*n3*n8 - 16*n5*n8 + 
      2*d*n5*n8 - 2*n2*n5*n8 + 2*n3*n5*n8 - 6*n5^2*n8)*
     j[p4, 0, n2, n3, 0, 2 + n5, 1, -1, -1 + n8, 0, 1, 1, 0, 0, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)*(-1 + n8)) + 
   ((14 - 24*d + 5*d^2 - 2*n2 + 26*n3 - 6*d*n3 + 20*n5 - 34*d*n5 + 5*d^2*n5 - 
      2*n2*n5 + 38*n3*n5 - 6*d*n3*n5 + 6*n5^2 - 10*d*n5^2 + 12*n3*n5^2 + 
      10*n8 - 2*d*n8 + 2*n2*n8 - 2*n3*n8 + 16*n5*n8 - 2*d*n5*n8 + 
      2*n2*n5*n8 - 2*n3*n5*n8 + 6*n5^2*n8)*j[p4, 0, n2, n3, 0, 2 + n5, 1, -1, 
      -1 + n8, 0, 1, 1, 0, 1, 0])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)*
     (-1 + n8)) + ((-4 + d - 6*n5 + d*n5 - 2*n5^2)*
     j[p4, 0, n2, n3, 0, 2 + n5, 1, -1, n8, -1, 1, 1, 0, 0, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 6*n5 - d*n5 + 2*n5^2)*j[p4, 0, n2, n3, 0, 2 + n5, 1, -1, n8, -1, 
      1, 1, 0, 1, 0])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-20*d*n3 + 5*d^2*n3 + 24*n3^2 - 6*d*n3^2 - 10*d*n3*n5 + 12*n3^2*n5 + 
      24*n3*n8 - 6*d*n3*n8 + 12*n3*n5*n8)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, 
      -2, -1 + n8, 0, 1, 1, 0, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)*
     (-1 + n8)) + ((4*n3 - d*n3 + 2*n3*n5)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, 
      -2, n8, 0, 0, 1, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4*n3 + d*n3 - 2*n3*n5)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, -2, n8, 0, 1, 
      0, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4*n3 + d*n3 - 2*n3*n5)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, -2, n8, 0, 1, 
      1, 0, 0, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4*n3 + d*n3 - 2*n3*n5)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, -2, n8, 0, 1, 
      1, 0, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4*n3 - d*n3 + 2*n3*n5)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, -1, -2 + n8, 
      0, 1, 1, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4*n3 + d*n3 - 2*n3*n5)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, -1, -1 + n8, 
      0, 1, 1, -1, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((20*d*n3 - 5*d^2*n3 - 24*n3^2 + 6*d*n3^2 + 10*d*n3*n5 - 12*n3^2*n5 - 
      24*n3*n8 + 6*d*n3*n8 - 12*n3*n5*n8)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, 
      -1, -1 + n8, 0, 1, 1, 0, 0, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)*
     (-1 + n8)) + ((4*n3 - d*n3 + 2*n3*n5)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, 
      -1, -1 + n8, 0, 1, 1, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*
     (-3 + d - n5)) + ((-4*n3 + d*n3 - 2*n3*n5)*j[p4, 0, n2, 1 + n3, 0, 
      1 + n5, 1, -1, n8, 0, 0, 1, -1, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*
     (-3 + d - n5)) + ((4*n3 - d*n3 + 2*n3*n5)*j[p4, 0, n2, 1 + n3, 0, 
      1 + n5, 1, -1, n8, 0, 1, 0, -1, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*
     (-3 + d - n5)) + ((4*n3 - d*n3 + 2*n3*n5)*j[p4, 0, n2, 1 + n3, 0, 
      1 + n5, 1, -1, n8, 0, 1, 1, -1, 0, 1])/(2*(-2 + d + 2*n2 - 2*n3)*
     (-3 + d - n5)) + ((4*n3 - d*n3 + 2*n3*n5)*j[p4, 0, n2, 1 + n3, 0, 
      1 + n5, 1, -1, n8, 0, 1, 1, 0, 0, 1])/(2*(-2 + d + 2*n2 - 2*n3)*
     (-3 + d - n5)) + ((16*n2 - 24*d*n2 + 5*d^2*n2 + 24*n2*n3 - 6*d*n2*n3 + 
      8*n2*n5 - 10*d*n2*n5 + 12*n2*n3*n5 + 8*n2*n8 - 2*d*n2*n8 + 4*n2*n5*n8)*
     j[p4, 0, 1 + n2, -1 + n3, 0, 1 + n5, 1, -1, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)*(-1 + n8)) + 
   ((-4*n2 + d*n2 - 2*n2*n5)*j[p4, 0, 1 + n2, -1 + n3, 0, 1 + n5, 1, -1, n8, 
      0, 0, 1, 0, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-16*n2 + 24*d*n2 - 5*d^2*n2 - 24*n2*n3 + 6*d*n2*n3 - 8*n2*n5 + 
      10*d*n2*n5 - 12*n2*n3*n5 - 8*n2*n8 + 2*d*n2*n8 - 4*n2*n5*n8)*
     j[p4, 0, 1 + n2, n3, 0, 1 + n5, 1, -2, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)*(-1 + n8)) + 
   ((4*n2 - d*n2 + 2*n2*n5)*j[p4, 0, 1 + n2, n3, 0, 1 + n5, 1, -2, n8, 0, 1, 
      1, 0, 0, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-16*n2 + 24*d*n2 - 5*d^2*n2 - 24*n2*n3 + 6*d*n2*n3 - 8*n2*n5 + 
      10*d*n2*n5 - 12*n2*n3*n5 - 8*n2*n8 + 2*d*n2*n8 - 4*n2*n5*n8)*
     j[p4, 0, 1 + n2, n3, 0, 1 + n5, 1, -1, -2 + n8, 0, 1, 1, 0, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)*(-1 + n8)) + 
   ((16*n2 - 24*d*n2 + 5*d^2*n2 + 24*n2*n3 - 6*d*n2*n3 + 8*n2*n5 - 
      10*d*n2*n5 + 12*n2*n3*n5 + 8*n2*n8 - 2*d*n2*n8 + 4*n2*n5*n8)*
     j[p4, 0, 1 + n2, n3, 0, 1 + n5, 1, -1, -1 + n8, 0, 1, 1, -1, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)*(-1 + n8)) + 
   ((-12*n2 + 23*d*n2 - 5*d^2*n2 - 24*n2*n3 + 6*d*n2*n3 - 6*n2*n5 + 
      10*d*n2*n5 - 12*n2*n3*n5 - 12*n2*n8 + 3*d*n2*n8 - 6*n2*n5*n8)*
     j[p4, 0, 1 + n2, n3, 0, 1 + n5, 1, -1, -1 + n8, 0, 1, 1, 0, 0, 1])/
    ((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)*(-1 + n8)) + 
   ((-4*n2 + d*n2 - 2*n2*n5)*j[p4, 0, 1 + n2, n3, 0, 1 + n5, 1, -1, n8, 0, 0, 
      1, -1, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n4 == 0 && n6 == 1 && n7 == 0 && n9 == 0 &&  !(n5 == 0 || n8 == 1) -> 
  ((-4*n3 + d*n3 - 2*n3*n5)*j[p4, -1, -1 + n2, 1 + n3, 0, 1 + n5, 1, 0, n8, 
      0, 1, 1, 0, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, -1, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 0, 2, 0, 1, 1])/
    ((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-60 + 47*d - 8*d^2 - 8*n2 + 2*d*n2 - 20*n3 + 5*d*n3 - 46*n5 + 20*d*n5 - 
      4*n2*n5 - 10*n3*n5 - 8*n5^2 - 20*n8 + 5*d*n8 - 10*n5*n8)*
     j[p4, -1, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, 0, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, -1, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 2, 1, 0, 0, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 6*n5 + d*n5 - 2*n5^2)*j[p4, -1, n2, n3, 0, 2 + n5, 1, 0, n8, 0, 
      1, 1, 0, 0, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 6*n5 - d*n5 + 2*n5^2)*j[p4, -1, n2, n3, 0, 2 + n5, 1, 0, n8, 0, 
      1, 1, 0, 1, 0])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4*n3 + d*n3 - 2*n3*n5)*j[p4, -1, n2, 1 + n3, 0, 1 + n5, 1, 0, -1 + n8, 
      0, 1, 1, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4*n2 - d*n2 + 2*n2*n5)*j[p4, -1, 1 + n2, -1 + n3, 0, 1 + n5, 1, 0, n8, 
      0, 1, 1, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4*n2 + d*n2 - 2*n2*n5)*j[p4, -1, 1 + n2, n3, 0, 1 + n5, 1, -1, n8, 0, 
      1, 1, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4*n2 - d*n2 + 2*n2*n5)*j[p4, -1, 1 + n2, n3, 0, 1 + n5, 1, 0, n8, 0, 1, 
      1, -1, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4*n2 + d*n2 - 2*n2*n5)*j[p4, -1, 1 + n2, n3, 0, 1 + n5, 1, 0, n8, 0, 1, 
      1, 0, 0, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) - 
   j[p4, 0, -1 + n2, n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, 0, 0, 2]/
    (2*(-3 + d - n5)) + ((32 - 20*d + 3*d^2 + 8*n3 - 2*d*n3 + 24*n5 - 
      8*d*n5 + 4*n3*n5 + 4*n5^2)*j[p4, 0, -1 + n2, n3, 0, 1 + n5, 1, 0, n8, 
      0, 1, 1, 0, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, -1 + n2, n3, 0, 1 + n5, 1, 0, n8, 0, 2, 0, 0, 1, 
      1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, -1 + n2, n3, 0, 1 + n5, 1, 0, n8, 0, 2, 1, 0, 0, 
      1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4*n8 - d*n8 + 2*n5*n8)*j[p4, 0, -1 + n2, n3, 0, 1 + n5, 1, 0, 1 + n8, 0, 
      1, 0, 0, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4*n8 - d*n8 + 2*n5*n8)*j[p4, 0, -1 + n2, n3, 0, 1 + n5, 1, 0, 1 + n8, 0, 
      1, 1, 0, 0, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-1 - n2 + n3 - n5)*j[p4, 0, -1 + n2, n3, 0, 1 + n5, 2, 0, -1 + n8, 0, 1, 
      1, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, -1 + n2, n3, 0, 1 + n5, 2, 0, n8, 0, 0, 1, 0, 1, 
      1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) - 
   j[p4, 0, -1 + n2, n3, 0, 1 + n5, 2, 0, n8, 0, 1, 1, 0, 0, 1]/
    (2*(-3 + d - n5)) - j[p4, 0, -1 + n2, n3, 0, 1 + n5, 2, 0, n8, 0, 1, 1, 
     0, 1, 0]/(2*(-3 + d - n5)) + 
   ((-1 - n5)*j[p4, 0, -1 + n2, n3, 0, 2 + n5, 1, 0, n8, 0, 1, 1, 0, 0, 1])/
    (2*(3 - d + n5)) + ((1 + n5)*j[p4, 0, -1 + n2, n3, 0, 2 + n5, 1, 0, n8, 
      0, 1, 1, 0, 1, 0])/(2*(3 - d + n5)) + 
   ((4*n3 - d*n3 + 2*n3*n5)*j[p4, 0, -1 + n2, 1 + n3, 0, 1 + n5, 1, 0, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4*n3 + d*n3 - 2*n3*n5)*j[p4, 0, -1 + n2, 1 + n3, 0, 1 + n5, 1, 0, n8, 
      0, 0, 1, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4*n3 - d*n3 + 2*n3*n5)*j[p4, 0, -1 + n2, 1 + n3, 0, 1 + n5, 1, 0, n8, 0, 
      1, 0, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4*n3 + d*n3 - 2*n3*n5)*j[p4, 0, -1 + n2, 1 + n3, 0, 1 + n5, 1, 0, n8, 
      0, 1, 1, -1, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4*n3 - d*n3 + 2*n3*n5)*j[p4, 0, -1 + n2, 1 + n3, 0, 1 + n5, 1, 0, n8, 0, 
      1, 1, 0, 0, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4*n3 - d*n3 + 2*n3*n5)*j[p4, 0, -1 + n2, 1 + n3, 0, 1 + n5, 1, 0, n8, 0, 
      1, 1, 0, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) - 
   j[p4, 0, n2, -1 + n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, 0, 0, 2]/
    (2*(-3 + d - n5)) + ((-24 + 18*d - 3*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 - 
      16*n5 + 7*d*n5 - 2*n2*n5 - 4*n3*n5 - 2*n5^2 - 4*n8 + d*n8 - 2*n5*n8)*
     j[p4, 0, n2, -1 + n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, 0, 1, 1])/
    ((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, -1 + n3, 0, 1 + n5, 1, 0, n8, 0, 2, 0, 0, 1, 
      1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-1 - n2 + n3 - n5)*j[p4, 0, n2, -1 + n3, 0, 1 + n5, 2, 0, -1 + n8, 0, 1, 
      1, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, -1 + n3, 0, 1 + n5, 2, 0, n8, 0, 0, 1, 0, 1, 
      1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, n3, -1, 1 + n5, 1, 0, n8, 0, 1, 1, 0, 1, 1])/
    (-2 + d + 2*n2 - 2*n3) + ((-4 + d - 2*n5)*j[p4, 0, n2, n3, -1, 1 + n5, 2, 
      0, n8, 0, 0, 1, 0, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, -1, 1 + n5, 2, 0, n8, 0, 1, 1, 0, 0, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, -1, 1 + n5, 2, 0, n8, 0, 1, 1, 0, 1, 0])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 6*n5 + d*n5 - 2*n5^2)*j[p4, 0, n2, n3, -1, 2 + n5, 1, 0, n8, 0, 
      1, 1, 0, 0, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 6*n5 - d*n5 + 2*n5^2)*j[p4, 0, n2, n3, -1, 2 + n5, 1, 0, n8, 0, 
      1, 1, 0, 1, 0])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   j[p4, 0, n2, n3, 0, n5, 0, 0, n8, 0, 1, 1, 0, 1, 2]/(2*(-3 + d - n5)) + 
   j[p4, 0, n2, n3, 0, n5, 1, 0, n8, 0, 1, 1, 0, 0, 2]/(2*(-3 + d - n5)) + 
   j[p4, 0, n2, n3, 0, n5, 2, 0, n8, 0, 1, 1, 0, 0, 1]/(2*(-3 + d - n5)) + 
   j[p4, 0, n2, n3, 0, n5, 2, 0, n8, 0, 1, 1, 0, 1, 0]/(2*(-3 + d - n5)) - 
   (n5*j[p4, 0, n2, n3, 0, 1 + n5, 0, 0, n8, 0, 1, 1, 0, 1, 1])/
    (2*(3 - d + n5)) + j[p4, 0, n2, n3, 0, 1 + n5, 1, -1, n8, 0, 1, 1, 0, 0, 
     2]/(2*(-3 + d - n5)) + ((4 - d + 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, 
      -1, n8, 0, 2, 0, 0, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, -1, n8, 0, 2, 1, 0, 0, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4*n8 + d*n8 - 2*n5*n8)*j[p4, 0, n2, n3, 0, 1 + n5, 1, -1, 1 + n8, 0, 1, 
      0, 0, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4*n8 + d*n8 - 2*n5*n8)*j[p4, 0, n2, n3, 0, 1 + n5, 1, -1, 1 + n8, 0, 1, 
      1, 0, 0, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 0, 2, 0, 1, 
      1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   j[p4, 0, n2, n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 1, 1, 0, 0, 2]/
    (2*(-3 + d - n5)) + ((-68 + 101*d - 41*d^2 + 5*d^3 - 84*n3 + 65*d*n3 - 
      11*d^2*n3 - 24*n3^2 + 6*d*n3^2 - 64*n5 + 70*d*n5 - 15*d^2*n5 + 
      2*n2*n5 - 68*n3*n5 + 28*d*n3*n5 - 12*n3^2*n5 - 14*n5^2 + 10*d*n5^2 - 
      12*n3*n5^2 - 56*n8 + 30*d*n8 - 4*d^2*n8 - 28*n3*n8 + 7*d*n3*n8 - 
      38*n5*n8 + 10*d*n5*n8 - 2*n2*n5*n8 - 12*n3*n5*n8 - 6*n5^2*n8 + 4*n8^2 - 
      d*n8^2 + 2*n5*n8^2)*j[p4, 0, n2, n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 1, 1, 
      0, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)*(-1 + n8)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 2, 0, 0, 1, 
      1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d - 4*n2 + d*n2 - 8*n3 + 2*d*n3 + 2*n5 - 2*n2*n5 - 4*n3*n5)*
     j[p4, 0, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 0, 1, 0, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 0, 2, -1, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 0, 2, 0, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4*n3 - d*n3 + 2*n3*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 1, 0, 0, 
      1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) - 
   j[p4, 0, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, -1, 0, 2]/
    (2*(-3 + d - n5)) + ((-32 + 28*d - 5*d^2 - 16*n3 + 4*d*n3 - 14*n5 + 
      9*d*n5 - 2*n2*n5 - 6*n3*n5 - 20*n8 + 5*d*n8 - 10*n5*n8)*
     j[p4, 0, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, 0, 0, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-8 + 2*d - 6*n5 + d*n5 + 2*n2*n5 - 2*n3*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 
      1, 0, n8, 0, 1, 1, 0, 1, 0])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((12 - 11*d + 2*d^2 + 4*n2 - d*n2 + 4*n3 - d*n3 + 10*n5 - 5*d*n5 + 
      2*n2*n5 + 2*n3*n5 + 2*n5^2 + 8*n8 - 2*d*n8 + 4*n5*n8)*
     j[p4, 0, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 1, 1, 0, 1, 1])/
    ((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 2, 0, -1, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 1, 0, n8, 0, 2, 0, 0, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((1 + n2 - n3 + n5)*j[p4, 0, n2, n3, 0, 1 + n5, 2, -1, -1 + n8, 0, 1, 1, 
      0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 2, -1, n8, 0, 0, 1, 0, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((1 + n2 - n3 + n5)*j[p4, 0, n2, n3, 0, 1 + n5, 2, 0, -2 + n8, 0, 1, 1, 0, 
      1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 2, 0, -1 + n8, -1, 1, 1, 0, 1, 
      1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-1 - n2 + n3 - n5)*j[p4, 0, n2, n3, 0, 1 + n5, 2, 0, -1 + n8, 0, 1, 1, 
      -1, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   j[p4, 0, n2, n3, 0, 1 + n5, 2, 0, -1 + n8, 0, 1, 1, 0, 0, 1]/
    (2*(-3 + d - n5)) + j[p4, 0, n2, n3, 0, 1 + n5, 2, 0, -1 + n8, 0, 1, 1, 
     0, 1, 0]/(2*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 2, 0, n8, -1, 1, 1, 0, 0, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 2, 0, n8, -1, 1, 1, 0, 1, 0])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 2*n5)*j[p4, 0, n2, n3, 0, 1 + n5, 2, 0, n8, 0, 0, 1, -1, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 6*n5 - d*n5 + 2*n5^2)*j[p4, 0, n2, n3, 0, 2 + n5, 1, -1, n8, 0, 
      1, 1, 0, 0, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4 + d - 6*n5 + d*n5 - 2*n5^2)*j[p4, 0, n2, n3, 0, 2 + n5, 1, -1, n8, 0, 
      1, 1, 0, 1, 0])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-30 + 28*d - 5*d^2 + 2*n2 - 26*n3 + 6*d*n3 - 44*n5 + 38*d*n5 - 
      5*d^2*n5 + 2*n2*n5 - 38*n3*n5 + 6*d*n3*n5 - 14*n5^2 + 10*d*n5^2 - 
      12*n3*n5^2 - 10*n8 + 2*d*n8 - 2*n2*n8 + 2*n3*n8 - 16*n5*n8 + 
      2*d*n5*n8 - 2*n2*n5*n8 + 2*n3*n5*n8 - 6*n5^2*n8)*
     j[p4, 0, n2, n3, 0, 2 + n5, 1, 0, -1 + n8, 0, 1, 1, 0, 0, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)*(-1 + n8)) + 
   ((30 - 28*d + 5*d^2 - 2*n2 + 26*n3 - 6*d*n3 + 44*n5 - 38*d*n5 + 5*d^2*n5 - 
      2*n2*n5 + 38*n3*n5 - 6*d*n3*n5 + 14*n5^2 - 10*d*n5^2 + 12*n3*n5^2 + 
      10*n8 - 2*d*n8 + 2*n2*n8 - 2*n3*n8 + 16*n5*n8 - 2*d*n5*n8 + 
      2*n2*n5*n8 - 2*n3*n5*n8 + 6*n5^2*n8)*j[p4, 0, n2, n3, 0, 2 + n5, 1, 0, 
      -1 + n8, 0, 1, 1, 0, 1, 0])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)*
     (-1 + n8)) + ((-4 + d - 6*n5 + d*n5 - 2*n5^2)*
     j[p4, 0, n2, n3, 0, 2 + n5, 1, 0, n8, -1, 1, 1, 0, 0, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4 - d + 6*n5 - d*n5 + 2*n5^2)*j[p4, 0, n2, n3, 0, 2 + n5, 1, 0, n8, -1, 
      1, 1, 0, 1, 0])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((16*n3 - 24*d*n3 + 5*d^2*n3 + 24*n3^2 - 6*d*n3^2 + 8*n3*n5 - 10*d*n3*n5 + 
      12*n3^2*n5 + 24*n3*n8 - 6*d*n3*n8 + 12*n3*n5*n8)*
     j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, -1, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)*(-1 + n8)) + 
   ((4*n3 - d*n3 + 2*n3*n5)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, -1, n8, 0, 0, 
      1, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4*n3 + d*n3 - 2*n3*n5)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, -1, n8, 0, 1, 
      0, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4*n3 + d*n3 - 2*n3*n5)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, -1, n8, 0, 1, 
      1, 0, 0, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4*n3 + d*n3 - 2*n3*n5)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, -1, n8, 0, 1, 
      1, 0, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4*n3 - d*n3 + 2*n3*n5)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, 0, -2 + n8, 0, 
      1, 1, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4*n3 + d*n3 - 2*n3*n5)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, 0, -1 + n8, 
      0, 1, 1, -1, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-16*n3 + 24*d*n3 - 5*d^2*n3 - 24*n3^2 + 6*d*n3^2 - 8*n3*n5 + 
      10*d*n3*n5 - 12*n3^2*n5 - 24*n3*n8 + 6*d*n3*n8 - 12*n3*n5*n8)*
     j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 1, 1, 0, 0, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)*(-1 + n8)) + 
   ((4*n3 - d*n3 + 2*n3*n5)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 
      1, 1, 0, 1, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-4*n3 + d*n3 - 2*n3*n5)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, 0, n8, 0, 0, 
      1, -1, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4*n3 - d*n3 + 2*n3*n5)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, 0, n8, 0, 1, 
      0, -1, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4*n3 - d*n3 + 2*n3*n5)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, 0, n8, 0, 1, 
      1, -1, 0, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((4*n3 - d*n3 + 2*n3*n5)*j[p4, 0, n2, 1 + n3, 0, 1 + n5, 1, 0, n8, 0, 1, 
      1, 0, 0, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((32*n2 - 28*d*n2 + 5*d^2*n2 + 24*n2*n3 - 6*d*n2*n3 + 16*n2*n5 - 
      10*d*n2*n5 + 12*n2*n3*n5 + 8*n2*n8 - 2*d*n2*n8 + 4*n2*n5*n8)*
     j[p4, 0, 1 + n2, -1 + n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)*(-1 + n8)) + 
   ((-4*n2 + d*n2 - 2*n2*n5)*j[p4, 0, 1 + n2, -1 + n3, 0, 1 + n5, 1, 0, n8, 
      0, 0, 1, 0, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-32*n2 + 28*d*n2 - 5*d^2*n2 - 24*n2*n3 + 6*d*n2*n3 - 16*n2*n5 + 
      10*d*n2*n5 - 12*n2*n3*n5 - 8*n2*n8 + 2*d*n2*n8 - 4*n2*n5*n8)*
     j[p4, 0, 1 + n2, n3, 0, 1 + n5, 1, -1, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)*(-1 + n8)) + 
   ((4*n2 - d*n2 + 2*n2*n5)*j[p4, 0, 1 + n2, n3, 0, 1 + n5, 1, -1, n8, 0, 1, 
      1, 0, 0, 1])/((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)) + 
   ((-32*n2 + 28*d*n2 - 5*d^2*n2 - 24*n2*n3 + 6*d*n2*n3 - 16*n2*n5 + 
      10*d*n2*n5 - 12*n2*n3*n5 - 8*n2*n8 + 2*d*n2*n8 - 4*n2*n5*n8)*
     j[p4, 0, 1 + n2, n3, 0, 1 + n5, 1, 0, -2 + n8, 0, 1, 1, 0, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)*(-1 + n8)) + 
   ((32*n2 - 28*d*n2 + 5*d^2*n2 + 24*n2*n3 - 6*d*n2*n3 + 16*n2*n5 - 
      10*d*n2*n5 + 12*n2*n3*n5 + 8*n2*n8 - 2*d*n2*n8 + 4*n2*n5*n8)*
     j[p4, 0, 1 + n2, n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 1, 1, -1, 1, 1])/
    (2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)*(-1 + n8)) + 
   ((-28*n2 + 27*d*n2 - 5*d^2*n2 - 24*n2*n3 + 6*d*n2*n3 - 14*n2*n5 + 
      10*d*n2*n5 - 12*n2*n3*n5 - 12*n2*n8 + 3*d*n2*n8 - 6*n2*n5*n8)*
     j[p4, 0, 1 + n2, n3, 0, 1 + n5, 1, 0, -1 + n8, 0, 1, 1, 0, 0, 1])/
    ((-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)*(-1 + n8)) + 
   ((-4*n2 + d*n2 - 2*n2*n5)*j[p4, 0, 1 + n2, n3, 0, 1 + n5, 1, 0, n8, 0, 0, 
      1, -1, 1, 1])/(2*(-2 + d + 2*n2 - 2*n3)*(-3 + d - n5)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n11 == 1 && n12 == 0 && n13 == 1 && n2 == 0 && n4 == 0 && n5 == 0 && 
    n6 == 1 && n7 == 0 && n8 == 1 && n9 == 0 && n10 != 1 -> 
  (n3*j[p4, -1 + n1, 0, 1 + n3, 0, 0, 1, 0, 1, 0, n10, 1, 0, 1, n14])/
    (d - 2*n10) - (n3*j[p4, n1, -1, 1 + n3, 0, 0, 1, 0, 1, 0, n10, 1, 0, 1, 
      n14])/(d - 2*n10) - (3*n3*j[p4, n1, -1, 1 + n3, 0, 0, 2, 0, 1, 0, 
      -1 + n10, 1, 0, 1, n14])/((d - 2*n10)*(-1 + n10)) + 
   ((-n3 - n3^2)*j[p4, n1, -1, 2 + n3, 0, 0, 1, 0, 1, 0, -1 + n10, 1, 0, 1, 
      n14])/((d - 2*n10)*(-1 + n10)) + 
   ((-4 + d - 2*n3)*j[p4, n1, 0, n3, 0, 0, 2, 0, 1, 0, -1 + n10, 1, 0, 1, 
      n14])/((d - 2*n10)*(-1 + n10)) - 
   (2*n3*j[p4, n1, 0, 1 + n3, -1, 0, 2, 0, 1, 0, -1 + n10, 1, 0, 1, n14])/
    ((d - 2*n10)*(-1 + n10)) + 
   (n3*j[p4, n1, 0, 1 + n3, 0, -1, 2, 0, 1, 0, -1 + n10, 1, 0, 1, n14])/
    ((d - 2*n10)*(-1 + n10)) + ((-3*n3 + 2*d*n3 - n10*n3 - 3*n3^2)*
     j[p4, n1, 0, 1 + n3, 0, 0, 1, 0, 1, 0, -1 + n10, 1, 0, 1, n14])/
    ((d - 2*n10)*(-1 + n10)) + 
   (2*n3*j[p4, n1, 0, 1 + n3, 0, 0, 2, -1, 1, 0, -1 + n10, 1, 0, 1, n14])/
    ((d - 2*n10)*(-1 + n10)) + 
   (4*n3*j[p4, n1, 0, 1 + n3, 0, 0, 2, 0, 0, 0, -1 + n10, 1, 0, 1, n14])/
    ((d - 2*n10)*(-1 + n10)) - 
   (2*n3*j[p4, n1, 0, 1 + n3, 0, 0, 2, 0, 1, 0, -1 + n10, 1, -1, 1, n14])/
    ((d - 2*n10)*(-1 + n10)) + 
   (2*n3*j[p4, n1, 0, 1 + n3, 0, 0, 2, 0, 1, 0, -1 + n10, 1, 0, 0, n14])/
    ((d - 2*n10)*(-1 + n10)) + 
   (2*n3*j[p4, n1, 0, 1 + n3, 0, 0, 2, 0, 1, 0, -1 + n10, 1, 0, 1, -1 + n14])/
    ((d - 2*n10)*(-1 + n10)) + 
   ((2*n3 + 2*n3^2)*j[p4, n1, 0, 2 + n3, 0, 0, 1, 0, 0, 0, -1 + n10, 1, 0, 1, 
      n14])/((d - 2*n10)*(-1 + n10)) + 
   ((-n3 - n3^2)*j[p4, n1, 0, 2 + n3, 0, 0, 1, 0, 1, 0, -1 + n10, 1, -1, 1, 
      n14])/((d - 2*n10)*(-1 + n10)) + 
   ((2*n3 + 2*n3^2)*j[p4, n1, 0, 2 + n3, 0, 0, 1, 0, 1, 0, -1 + n10, 1, 0, 0, 
      n14])/((d - 2*n10)*(-1 + n10)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n12 == 0 && n13 == 1 && n4 == 0 && n5 == 0 && 
    n6 == 1 && n7 == 0 && n8 == 1 && n9 == 0 && n11 != 1 -> 
  -((n3*j[p4, -1, n2, 1 + n3, 0, 0, 1, 0, 1, 0, 1, n11, 0, 1, n14])/
     (d - 2*n11)) + (2*n3*j[p4, 0, -1 + n2, 1 + n3, 0, 0, 1, 0, 2, 0, 1, 
      -1 + n11, 0, 1, n14])/((d - 2*n11)*(-1 + n11)) + 
   ((-n3 - n3^2)*j[p4, 0, -1 + n2, 2 + n3, 0, 0, 1, 0, 1, 0, 1, -1 + n11, 0, 
      1, n14])/((d - 2*n11)*(-1 + n11)) + 
   ((-4 + d)*j[p4, 0, n2, n3, 0, 0, 1, 0, 2, 0, 1, -1 + n11, 0, 1, n14])/
    ((d - 2*n11)*(-1 + n11)) - 
   (2*n3*j[p4, 0, n2, 1 + n3, 0, 0, 1, -1, 2, 0, 1, -1 + n11, 0, 1, n14])/
    ((d - 2*n11)*(-1 + n11)) + 
   (n3*j[p4, 0, n2, 1 + n3, 0, 0, 1, 0, 0, 0, 1, n11, 0, 1, n14])/
    (d - 2*n11) + ((-5*n3 + n11*n3 - 2*n3^2)*j[p4, 0, n2, 1 + n3, 0, 0, 1, 0, 
      1, 0, 1, -1 + n11, 0, 1, n14])/((d - 2*n11)*(-1 + n11)) + 
   (2*n3*j[p4, 0, n2, 1 + n3, 0, 0, 1, 0, 2, 0, 1, -1 + n11, -1, 1, n14])/
    ((d - 2*n11)*(-1 + n11)) - 
   (2*n3*j[p4, 0, n2, 1 + n3, 0, 0, 1, 0, 2, 0, 1, -1 + n11, 0, 0, n14])/
    ((d - 2*n11)*(-1 + n11)) + 
   ((n3 + n3^2)*j[p4, 0, n2, 2 + n3, 0, 0, 1, -1, 1, 0, 1, -1 + n11, 0, 1, 
      n14])/((d - 2*n11)*(-1 + n11)) + 
   ((2*n3 + 2*n3^2)*j[p4, 0, n2, 2 + n3, 0, 0, 1, 0, 0, 0, 1, -1 + n11, 0, 1, 
      n14])/((d - 2*n11)*(-1 + n11)) + 
   ((-n3 - n3^2)*j[p4, 0, n2, 2 + n3, 0, 0, 1, 0, 1, 0, 1, -1 + n11, -1, 1, 
      n14])/((d - 2*n11)*(-1 + n11)) + 
   ((n3 + n3^2)*j[p4, 0, n2, 2 + n3, 0, 0, 1, 0, 1, 0, 1, -1 + n11, 0, 0, 
      n14])/((d - 2*n11)*(-1 + n11)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == -1 && n13 == 1 && n14 == 1 && n5 == 0 && 
    n6 == 1 && n7 == 0 && n8 == 1 && n9 == 0 && n4 != 0 -> 
  ((24 - 14*d + 2*d^2 + 4*n2 - d*n2 + 8*n3 - 2*d*n3 + 20*n4 - 6*d*n4 + 
      2*n2*n4 + 4*n3*n4 + 4*n4^2)*j[p4, -1 + n1, -1 + n2, n3, 1 + n4, 0, 1, 
      0, 1, 0, 1, 1, 0, 1, 1])/((-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((24 - 14*d + 2*d^2 + 4*n2 - d*n2 + 8*n3 - 2*d*n3 + 20*n4 - 6*d*n4 + 
      2*n2*n4 + 4*n3*n4 + 4*n4^2)*j[p4, -1 + n1, n2, -1 + n3, 1 + n4, 0, 1, 
      0, 1, 0, 1, 1, 0, 1, 1])/((-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-48 + 28*d - 4*d^2 - 8*n2 + 2*d*n2 - 16*n3 + 4*d*n3 - 40*n4 + 12*d*n4 - 
      4*n2*n4 - 8*n3*n4 - 8*n4^2)*j[p4, -1 + n1, n2, n3, 1 + n4, 0, 1, -1, 1, 
      0, 1, 1, 0, 1, 1])/((-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 - 20*n4 + 6*d*n4 - 
      2*n2*n4 - 4*n3*n4 - 4*n4^2)*j[p4, -1 + n1, n2, n3, 1 + n4, 0, 1, 0, 0, 
      0, 1, 1, 0, 1, 1])/((-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-8 + 6*d - d^2 - 8*n1 + 2*d*n1 - 4*n2 + d*n2 - 4*n4 + 2*d*n4 - 4*n1*n4 - 
      2*n2*n4)*j[p4, -1 + n1, n2, n3, 1 + n4, 0, 1, 0, 0, 0, 2, 1, -1, 1, 1])/
    (2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 - 20*n4 + 6*d*n4 - 
      2*n2*n4 - 4*n3*n4 - 4*n4^2)*j[p4, -1 + n1, n2, n3, 1 + n4, 0, 1, 0, 1, 
      0, 0, 2, -1, 1, 1])/((-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((72 - 66*d + 20*d^2 - 2*d^3 + 24*n1 - 14*d*n1 + 2*d^2*n1 + 68*n2 - 
      41*d*n2 + 6*d^2*n2 + 12*n1*n2 - 3*d*n1*n2 + 12*n2^2 - 3*d*n2^2 + 
      24*n3 - 14*d*n3 + 2*d^2*n3 + 8*n1*n3 - 2*d*n1*n3 + 16*n2*n3 - 
      4*d*n2*n3 + 60*n4 - 38*d*n4 + 6*d^2*n4 + 20*n1*n4 - 6*d*n1*n4 + 
      50*n2*n4 - 16*d*n2*n4 + 6*n1*n2*n4 + 6*n2^2*n4 + 12*n3*n4 - 4*d*n3*n4 + 
      4*n1*n3*n4 + 8*n2*n3*n4 + 12*n4^2 - 4*d*n4^2 + 4*n1*n4^2 + 8*n2*n4^2)*
     j[p4, -1 + n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, 1, -1, 1, 1])/
    ((-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 - 20*n4 + 6*d*n4 - 
      2*n2*n4 - 4*n3*n4 - 4*n4^2)*j[p4, -1 + n1, n2, n3, 1 + n4, 0, 1, 0, 1, 
      0, 1, 1, 0, 0, 1])/((-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-8 + 6*d - d^2 - 8*n1 + 2*d*n1 - 4*n2 + d*n2 - 4*n4 + 2*d*n4 - 4*n1*n4 - 
      2*n2*n4)*j[p4, -1 + n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 2, 1, -1, 0, 1])/
    (2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((24 - 14*d + 2*d^2 + 4*n2 - d*n2 + 8*n3 - 2*d*n3 + 20*n4 - 6*d*n4 + 
      2*n2*n4 + 4*n3*n4 + 4*n4^2)*j[p4, -1 + n1, n2, n3, 1 + n4, 0, 1, 0, 2, 
      0, 1, 1, -1, 0, 1])/(2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((32 - 20*d + 3*d^2 + 8*n1 - 2*d*n1 + 8*n2 - 2*d*n2 + 8*n3 - 2*d*n3 + 
      56*n4 - 28*d*n4 + 3*d^2*n4 + 12*n1*n4 - 2*d*n1*n4 + 12*n2*n4 - 
      2*d*n2*n4 + 12*n3*n4 - 2*d*n3*n4 + 28*n4^2 - 8*d*n4^2 + 4*n1*n4^2 + 
      4*n2*n4^2 + 4*n3*n4^2 + 4*n4^3)*j[p4, -1 + n1, n2, n3, 2 + n4, 0, 0, 0, 
      1, 0, 1, 1, -1, 1, 1])/(2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-32 + 20*d - 3*d^2 - 8*n1 + 2*d*n1 - 8*n2 + 2*d*n2 - 8*n3 + 2*d*n3 - 
      56*n4 + 28*d*n4 - 3*d^2*n4 - 12*n1*n4 + 2*d*n1*n4 - 12*n2*n4 + 
      2*d*n2*n4 - 12*n3*n4 + 2*d*n3*n4 - 28*n4^2 + 8*d*n4^2 - 4*n1*n4^2 - 
      4*n2*n4^2 - 4*n3*n4^2 - 4*n4^3)*j[p4, -1 + n1, n2, n3, 2 + n4, 0, 1, 0, 
      0, 0, 1, 1, -1, 1, 1])/(2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((24 - 14*d + 2*d^2 + 4*n2 - d*n2 + 8*n3 - 2*d*n3 + 44*n4 - 20*d*n4 + 
      2*d^2*n4 + 6*n2*n4 - d*n2*n4 + 12*n3*n4 - 2*d*n3*n4 + 24*n4^2 - 
      6*d*n4^2 + 2*n2*n4^2 + 4*n3*n4^2 + 4*n4^3)*j[p4, -1 + n1, n2, n3, 
      2 + n4, 0, 1, 0, 1, 0, 1, 1, -1, 1, 0])/(2*(3 - d + n4)*
     (52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((-32*n3 + 20*d*n3 - 3*d^2*n3 - 8*n1*n3 + 
      2*d*n1*n3 - 8*n2*n3 + 2*d*n2*n3 - 8*n3^2 + 2*d*n3^2 - 24*n3*n4 + 
      8*d*n3*n4 - 4*n1*n3*n4 - 4*n2*n3*n4 - 4*n3^2*n4 - 4*n3*n4^2)*
     j[p4, -1 + n1, n2, 1 + n3, 1 + n4, 0, 1, 0, 0, 0, 1, 1, -1, 1, 1])/
    ((-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-32*n3 + 20*d*n3 - 3*d^2*n3 - 8*n1*n3 + 2*d*n1*n3 - 8*n2*n3 + 
      2*d*n2*n3 - 8*n3^2 + 2*d*n3^2 - 24*n3*n4 + 8*d*n3*n4 - 4*n1*n3*n4 - 
      4*n2*n3*n4 - 4*n3^2*n4 - 4*n3*n4^2)*j[p4, -1 + n1, n2, 1 + n3, 1 + n4, 
      0, 1, 0, 1, 0, 1, 1, -1, 0, 1])/(2*(-3 + d - n4)*
     (52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((80*n2 - 48*d*n2 + 7*d^2*n2 + 8*n1*n2 - 
      2*d*n1*n2 + 16*n2^2 - 4*d*n2^2 + 24*n2*n3 - 6*d*n2*n3 + 64*n2*n4 - 
      20*d*n2*n4 + 4*n1*n2*n4 + 8*n2^2*n4 + 12*n2*n3*n4 + 12*n2*n4^2)*
     j[p4, -1 + n1, 1 + n2, -1 + n3, 1 + n4, 0, 1, 0, 1, 0, 1, 1, -1, 1, 1])/
    (2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-32*n2 + 20*d*n2 - 3*d^2*n2 - 8*n1*n2 + 2*d*n1*n2 - 8*n2^2 + 2*d*n2^2 - 
      8*n2*n3 + 2*d*n2*n3 - 24*n2*n4 + 8*d*n2*n4 - 4*n1*n2*n4 - 4*n2^2*n4 - 
      4*n2*n3*n4 - 4*n2*n4^2)*j[p4, -1 + n1, 1 + n2, n3, 1 + n4, 0, 1, -1, 1, 
      0, 1, 1, -1, 1, 1])/((-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-32*n2 + 20*d*n2 - 3*d^2*n2 - 8*n1*n2 + 2*d*n1*n2 - 8*n2^2 + 2*d*n2^2 - 
      8*n2*n3 + 2*d*n2*n3 - 24*n2*n4 + 8*d*n2*n4 - 4*n1*n2*n4 - 4*n2^2*n4 - 
      4*n2*n3*n4 - 4*n2*n4^2)*j[p4, -1 + n1, 1 + n2, n3, 1 + n4, 0, 1, 0, 0, 
      0, 1, 1, -1, 1, 1])/(2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((32*n2 - 20*d*n2 + 3*d^2*n2 + 8*n1*n2 - 2*d*n1*n2 + 8*n2^2 - 2*d*n2^2 + 
      8*n2*n3 - 2*d*n2*n3 + 24*n2*n4 - 8*d*n2*n4 + 4*n1*n2*n4 + 4*n2^2*n4 + 
      4*n2*n3*n4 + 4*n2*n4^2)*j[p4, -1 + n1, 1 + n2, n3, 1 + n4, 0, 1, 0, 1, 
      0, 1, 1, -2, 1, 1])/((-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-8*n2 + 6*d*n2 - d^2*n2 - 8*n1*n2 + 2*d*n1*n2 - 4*n2^2 + d*n2^2 - 
      4*n2*n4 + 2*d*n2*n4 - 4*n1*n2*n4 - 2*n2^2*n4)*
     j[p4, -1 + n1, 1 + n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, 1, -1, 0, 1])/
    ((-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((8 - 6*d + d^2 + 8*n1 - 2*d*n1 + 4*n2 - d*n2 + 4*n4 - 2*d*n4 + 4*n1*n4 + 
      2*n2*n4)*j[p4, n1, -1 + n2, n3, 1 + n4, 0, 1, 0, 0, 0, 2, 1, -1, 1, 1])/
    (2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((24 - 14*d + 2*d^2 + 4*n2 - d*n2 + 8*n3 - 2*d*n3 + 20*n4 - 6*d*n4 + 
      2*n2*n4 + 4*n3*n4 + 4*n4^2)*j[p4, n1, -1 + n2, n3, 1 + n4, 0, 1, 0, 1, 
      0, 1, 0, 0, 1, 1])/(2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-48 + 52*d - 18*d^2 + 2*d^3 - 24*n1 + 14*d*n1 - 2*d^2*n1 - 32*n2 + 
      20*d*n2 - 3*d^2*n2 - 4*n1*n2 + d*n1*n2 - 4*n2^2 + d*n2^2 - 16*n3 + 
      12*d*n3 - 2*d^2*n3 - 8*n1*n3 + 2*d*n1*n3 - 8*n2*n3 + 2*d*n2*n3 - 
      40*n4 + 32*d*n4 - 6*d^2*n4 - 20*n1*n4 + 6*d*n1*n4 - 24*n2*n4 + 
      8*d*n2*n4 - 2*n1*n2*n4 - 2*n2^2*n4 - 8*n3*n4 + 4*d*n3*n4 - 4*n1*n3*n4 - 
      4*n2*n3*n4 - 8*n4^2 + 4*d*n4^2 - 4*n1*n4^2 - 4*n2*n4^2)*
     j[p4, n1, -1 + n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, 1, -1, 1, 1])/
    ((-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 - 20*n4 + 6*d*n4 - 
      2*n2*n4 - 4*n3*n4 - 4*n4^2)*j[p4, n1, -1 + n2, n3, 1 + n4, 0, 1, 0, 1, 
      0, 1, 1, 0, 1, 1])/((-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((8 - 6*d + d^2 + 8*n1 - 2*d*n1 + 4*n2 - d*n2 + 4*n4 - 2*d*n4 + 4*n1*n4 + 
      2*n2*n4)*j[p4, n1, -1 + n2, n3, 1 + n4, 0, 1, 0, 1, 0, 2, 0, -1, 1, 1])/
    (2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((8 - 6*d + d^2 + 8*n1 - 2*d*n1 + 4*n2 - d*n2 + 4*n4 - 2*d*n4 + 4*n1*n4 + 
      2*n2*n4)*j[p4, n1, -1 + n2, n3, 1 + n4, 0, 1, 0, 1, 0, 2, 1, -1, 0, 1])/
    (2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 - 20*n4 + 6*d*n4 - 
      2*n2*n4 - 4*n3*n4 - 4*n4^2)*j[p4, n1, -1 + n2, n3, 1 + n4, 0, 1, 0, 2, 
      0, 1, 0, -1, 1, 1])/(2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 - 20*n4 + 6*d*n4 - 
      2*n2*n4 - 4*n3*n4 - 4*n4^2)*j[p4, n1, -1 + n2, n3, 1 + n4, 0, 1, 0, 2, 
      0, 1, 1, -1, 0, 1])/(2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   j[p4, n1, -1 + n2, n3, 1 + n4, 0, 2, 0, 0, 0, 1, 1, -1, 1, 1]/
    (2*(-3 + d - n4)) + ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 - 
      20*n4 + 6*d*n4 - 2*n2*n4 - 4*n3*n4 - 4*n4^2)*j[p4, n1, -1 + n2, n3, 
      1 + n4, 0, 2, 0, 1, 0, 0, 1, -1, 1, 1])/(2*(-3 + d - n4)*
     (52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((-32 + 20*d - 3*d^2 - 8*n1 + 2*d*n1 - 8*n2 + 
      2*d*n2 - 8*n3 + 2*d*n3 - 56*n4 + 28*d*n4 - 3*d^2*n4 - 12*n1*n4 + 
      2*d*n1*n4 - 12*n2*n4 + 2*d*n2*n4 - 12*n3*n4 + 2*d*n3*n4 - 28*n4^2 + 
      8*d*n4^2 - 4*n1*n4^2 - 4*n2*n4^2 - 4*n3*n4^2 - 4*n4^3)*
     j[p4, n1, -1 + n2, n3, 2 + n4, 0, 0, 0, 1, 0, 1, 1, -1, 1, 1])/
    (2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((32 - 20*d + 3*d^2 + 8*n1 - 2*d*n1 + 8*n2 - 2*d*n2 + 8*n3 - 2*d*n3 + 
      56*n4 - 28*d*n4 + 3*d^2*n4 + 12*n1*n4 - 2*d*n1*n4 + 12*n2*n4 - 
      2*d*n2*n4 + 12*n3*n4 - 2*d*n3*n4 + 28*n4^2 - 8*d*n4^2 + 4*n1*n4^2 + 
      4*n2*n4^2 + 4*n3*n4^2 + 4*n4^3)*j[p4, n1, -1 + n2, n3, 2 + n4, 0, 1, 0, 
      0, 0, 1, 1, -1, 1, 1])/(2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 - 44*n4 + 20*d*n4 - 
      2*d^2*n4 - 6*n2*n4 + d*n2*n4 - 12*n3*n4 + 2*d*n3*n4 - 24*n4^2 + 
      6*d*n4^2 - 2*n2*n4^2 - 4*n3*n4^2 - 4*n4^3)*j[p4, n1, -1 + n2, n3, 
      2 + n4, 0, 1, 0, 1, 0, 1, 1, -1, 1, 0])/(2*(3 - d + n4)*
     (52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((32*n3 - 20*d*n3 + 3*d^2*n3 + 8*n1*n3 - 
      2*d*n1*n3 + 8*n2*n3 - 2*d*n2*n3 + 8*n3^2 - 2*d*n3^2 + 24*n3*n4 - 
      8*d*n3*n4 + 4*n1*n3*n4 + 4*n2*n3*n4 + 4*n3^2*n4 + 4*n3*n4^2)*
     j[p4, n1, -1 + n2, 1 + n3, 1 + n4, 0, 1, 0, 0, 0, 1, 1, -1, 1, 1])/
    (2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-32*n3 + 20*d*n3 - 3*d^2*n3 - 8*n1*n3 + 2*d*n1*n3 - 8*n2*n3 + 
      2*d*n2*n3 - 8*n3^2 + 2*d*n3^2 - 24*n3*n4 + 8*d*n3*n4 - 4*n1*n3*n4 - 
      4*n2*n3*n4 - 4*n3^2*n4 - 4*n3*n4^2)*j[p4, n1, -1 + n2, 1 + n3, 1 + n4, 
      0, 1, 0, 1, 0, 0, 1, -1, 1, 1])/(2*(-3 + d - n4)*
     (52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((32*n3 - 20*d*n3 + 3*d^2*n3 + 8*n1*n3 - 
      2*d*n1*n3 + 8*n2*n3 - 2*d*n2*n3 + 8*n3^2 - 2*d*n3^2 + 24*n3*n4 - 
      8*d*n3*n4 + 4*n1*n3*n4 + 4*n2*n3*n4 + 4*n3^2*n4 + 4*n3*n4^2)*
     j[p4, n1, -1 + n2, 1 + n3, 1 + n4, 0, 1, 0, 1, 0, 1, 0, -1, 1, 1])/
    (2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((32*n3 - 20*d*n3 + 3*d^2*n3 + 8*n1*n3 - 2*d*n1*n3 + 8*n2*n3 - 2*d*n2*n3 + 
      8*n3^2 - 2*d*n3^2 + 24*n3*n4 - 8*d*n3*n4 + 4*n1*n3*n4 + 4*n2*n3*n4 + 
      4*n3^2*n4 + 4*n3*n4^2)*j[p4, n1, -1 + n2, 1 + n3, 1 + n4, 0, 1, 0, 1, 
      0, 1, 1, -1, 0, 1])/(2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-60 + 50*d - 10*d^2 - 12*n1 + 4*d*n1 - 22*n2 + 9*d*n2 - 2*n1*n2 - 
      2*n2^2 - 40*n3 + 16*d*n3 - 6*n2*n3 - 8*n3^2 - 32*n4 + 14*d*n4 - 
      4*n1*n4 - 6*n2*n4 - 12*n3*n4 - 4*n4^2)*j[p4, n1, n2, -1 + n3, 1 + n4, 
      0, 0, 0, 1, 0, 1, 1, -1, 1, 2])/(2*(-3 + d - n4)*
     (52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((-60 + 50*d - 10*d^2 - 12*n1 + 4*d*n1 - 22*n2 + 
      9*d*n2 - 2*n1*n2 - 2*n2^2 - 40*n3 + 16*d*n3 - 6*n2*n3 - 8*n3^2 - 
      32*n4 + 14*d*n4 - 4*n1*n4 - 6*n2*n4 - 12*n3*n4 - 4*n4^2)*
     j[p4, n1, n2, -1 + n3, 1 + n4, 0, 1, 0, 0, 0, 1, 1, -1, 1, 2])/
    (2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 - 20*n4 + 6*d*n4 - 
      2*n2*n4 - 4*n3*n4 - 4*n4^2)*j[p4, n1, n2, -1 + n3, 1 + n4, 0, 1, 0, 1, 
      0, 1, 0, 0, 1, 1])/(2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-60 + 50*d - 10*d^2 - 12*n1 + 4*d*n1 - 22*n2 + 9*d*n2 - 2*n1*n2 - 
      2*n2^2 - 40*n3 + 16*d*n3 - 6*n2*n3 - 8*n3^2 - 32*n4 + 14*d*n4 - 
      4*n1*n4 - 6*n2*n4 - 12*n3*n4 - 4*n4^2)*j[p4, n1, n2, -1 + n3, 1 + n4, 
      0, 1, 0, 1, 0, 1, 1, -1, 0, 2])/(2*(-3 + d - n4)*
     (52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((-48 + 52*d - 18*d^2 + 2*d^3 + 48*n1 - 28*d*n1 + 
      4*d^2*n1 - 8*n2 + 6*d*n2 - d^2*n2 + 8*n1*n2 - 2*d*n1*n2 - 64*n3 + 
      40*d*n3 - 6*d^2*n3 + 16*n1*n3 - 4*d*n1*n3 - 8*n2*n3 + 2*d*n2*n3 - 
      16*n3^2 + 4*d*n3^2 - 40*n4 + 32*d*n4 - 6*d^2*n4 + 40*n1*n4 - 
      12*d*n1*n4 - 4*n2*n4 + 2*d*n2*n4 + 4*n1*n2*n4 - 48*n3*n4 + 16*d*n3*n4 + 
      8*n1*n3*n4 - 4*n2*n3*n4 - 8*n3^2*n4 - 8*n4^2 + 4*d*n4^2 + 8*n1*n4^2 - 
      8*n3*n4^2)*j[p4, n1, n2, -1 + n3, 1 + n4, 0, 1, 0, 1, 0, 1, 1, -1, 1, 
      1])/(2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 
      8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 
      28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((8 - 6*d + d^2 + 8*n1 - 2*d*n1 + 4*n2 - d*n2 + 4*n4 - 2*d*n4 + 4*n1*n4 + 
      2*n2*n4)*j[p4, n1, n2, -1 + n3, 1 + n4, 0, 1, 0, 1, 0, 2, 0, -1, 1, 1])/
    (2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   j[p4, n1, n2, -1 + n3, 1 + n4, 0, 2, 0, 0, 0, 1, 1, -1, 1, 1]/
    (2*(-3 + d - n4)) + ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 - 
      20*n4 + 6*d*n4 - 2*n2*n4 - 4*n3*n4 - 4*n4^2)*j[p4, n1, n2, -1 + n3, 
      1 + n4, 0, 2, 0, 1, 0, 0, 1, -1, 1, 1])/(2*(-3 + d - n4)*
     (52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((-124 + 86*d - 15*d^2 - 4*n1 + 2*d*n1 - 30*n2 + 
      11*d*n2 - 2*n1*n2 - 2*n2^2 - 64*n3 + 22*d*n3 - 6*n2*n3 - 8*n3^2 - 
      212*n4 + 116*d*n4 - 15*d^2*n4 - 4*n1*n4 + 2*d*n1*n4 - 40*n2*n4 + 
      11*d*n2*n4 - 2*n1*n2*n4 - 2*n2^2*n4 - 88*n3*n4 + 22*d*n3*n4 - 
      6*n2*n3*n4 - 8*n3^2*n4 - 104*n4^2 + 30*d*n4^2 - 10*n2*n4^2 - 
      24*n3*n4^2 - 16*n4^3)*j[p4, n1, n2, -1 + n3, 2 + n4, 0, 0, 0, 1, 0, 1, 
      1, -1, 1, 1])/(2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((100 - 72*d + 13*d^2 + 4*n1 - 2*d*n1 + 26*n2 - 10*d*n2 + 2*n1*n2 + 
      2*n2^2 + 56*n3 - 20*d*n3 + 6*n2*n3 + 8*n3^2 + 168*n4 - 96*d*n4 + 
      13*d^2*n4 + 4*n1*n4 - 2*d*n1*n4 + 34*n2*n4 - 10*d*n2*n4 + 2*n1*n2*n4 + 
      2*n2^2*n4 + 76*n3*n4 - 20*d*n3*n4 + 6*n2*n3*n4 + 8*n3^2*n4 + 80*n4^2 - 
      24*d*n4^2 + 8*n2*n4^2 + 20*n3*n4^2 + 12*n4^3)*
     j[p4, n1, n2, -1 + n3, 2 + n4, 0, 1, 0, 0, 0, 1, 1, -1, 1, 1])/
    (2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((24 - 14*d + 2*d^2 + 4*n2 - d*n2 + 8*n3 - 2*d*n3 + 44*n4 - 20*d*n4 + 
      2*d^2*n4 + 6*n2*n4 - d*n2*n4 + 12*n3*n4 - 2*d*n3*n4 + 24*n4^2 - 
      6*d*n4^2 + 2*n2*n4^2 + 4*n3*n4^2 + 4*n4^3)*j[p4, n1, n2, -1 + n3, 
      2 + n4, 0, 1, 0, 1, 0, 0, 1, -1, 1, 1])/(2*(3 - d + n4)*
     (52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 
      2*d*n3 - 44*n4 + 20*d*n4 - 2*d^2*n4 - 6*n2*n4 + d*n2*n4 - 12*n3*n4 + 
      2*d*n3*n4 - 24*n4^2 + 6*d*n4^2 - 2*n2*n4^2 - 4*n3*n4^2 - 4*n4^3)*
     j[p4, n1, n2, -1 + n3, 2 + n4, 0, 1, 0, 1, 0, 1, 0, -1, 1, 1])/
    (2*(3 - d + n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((60 - 50*d + 10*d^2 + 12*n1 - 4*d*n1 + 22*n2 - 9*d*n2 + 2*n1*n2 + 
      2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 14*d*n4 + 
      4*n1*n4 + 6*n2*n4 + 12*n3*n4 + 4*n4^2)*j[p4, n1, n2, n3, n4, 0, 0, 0, 
      1, 0, 1, 1, -1, 1, 2])/(2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((60 - 50*d + 10*d^2 + 12*n1 - 4*d*n1 + 22*n2 - 9*d*n2 + 2*n1*n2 + 
      2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 14*d*n4 + 
      4*n1*n4 + 6*n2*n4 + 12*n3*n4 + 4*n4^2)*j[p4, n1, n2, n3, n4, 0, 1, 0, 
      0, 0, 1, 1, -1, 1, 2])/(2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((60 - 50*d + 10*d^2 + 12*n1 - 4*d*n1 + 22*n2 - 9*d*n2 + 2*n1*n2 + 
      2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 14*d*n4 + 
      4*n1*n4 + 6*n2*n4 + 12*n3*n4 + 4*n4^2)*j[p4, n1, n2, n3, n4, 0, 1, 0, 
      1, 0, 1, 1, -1, 0, 2])/(2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   j[p4, n1, n2, n3, n4, 0, 2, 0, 0, 0, 1, 1, -1, 1, 1]/(2*(-3 + d - n4)) + 
   ((8 - 6*d + d^2 + 8*n1 - 2*d*n1 + 4*n2 - d*n2 + 4*n4 - 2*d*n4 + 4*n1*n4 + 
      2*n2*n4)*j[p4, n1, n2, n3, n4, 0, 2, 0, 1, 0, 0, 1, -1, 1, 1])/
    (2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   j[p4, n1, n2, n3, n4, 0, 2, 0, 1, 0, 1, 1, -1, 0, 1]/(2*(-3 + d - n4)) + 
   j[p4, n1, n2, n3, n4, 0, 2, 0, 1, 0, 1, 1, -1, 1, 0]/(2*(-3 + d - n4)) + 
   ((-32 + 20*d - 3*d^2 - 8*n1 + 2*d*n1 - 8*n2 + 2*d*n2 - 8*n3 + 2*d*n3 - 
      24*n4 + 8*d*n4 - 4*n1*n4 - 4*n2*n4 - 4*n3*n4 - 4*n4^2)*
     j[p4, n1, n2, n3, 1 + n4, 0, 0, 0, 1, -1, 1, 1, -1, 1, 2])/
    (2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((32 - 20*d + 3*d^2 + 8*n1 - 2*d*n1 + 8*n2 - 2*d*n2 + 8*n3 - 2*d*n3 + 
      84*n4 - 58*d*n4 + 10*d^2*n4 + 16*n1*n4 - 4*d*n1*n4 + 26*n2*n4 - 
      9*d*n2*n4 + 2*n1*n2*n4 + 2*n2^2*n4 + 44*n3*n4 - 16*d*n3*n4 + 
      6*n2*n3*n4 + 8*n3^2*n4 + 36*n4^2 - 14*d*n4^2 + 4*n1*n4^2 + 6*n2*n4^2 + 
      12*n3*n4^2 + 4*n4^3)*j[p4, n1, n2, n3, 1 + n4, 0, 0, 0, 1, 0, 1, 1, -1, 
      1, 1])/(2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 
      8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 
      28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((32 - 20*d + 3*d^2 + 8*n1 - 2*d*n1 + 8*n2 - 2*d*n2 + 8*n3 - 2*d*n3 + 
      24*n4 - 8*d*n4 + 4*n1*n4 + 4*n2*n4 + 4*n3*n4 + 4*n4^2)*
     j[p4, n1, n2, n3, 1 + n4, 0, 0, 0, 1, 0, 1, 1, -1, 1, 2])/
    (2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 - 20*n4 + 6*d*n4 - 
      2*n2*n4 - 4*n3*n4 - 4*n4^2)*j[p4, n1, n2, n3, 1 + n4, 0, 1, -1, 0, 0, 
      1, 1, 0, 1, 1])/((-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((24 - 14*d + 2*d^2 + 4*n2 - d*n2 + 8*n3 - 2*d*n3 + 20*n4 - 6*d*n4 + 
      2*n2*n4 + 4*n3*n4 + 4*n4^2)*j[p4, n1, n2, n3, 1 + n4, 0, 1, -1, 0, 0, 
      1, 2, -1, 1, 1])/((-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-8 + 6*d - d^2 - 8*n1 + 2*d*n1 - 4*n2 + d*n2 - 4*n4 + 2*d*n4 - 4*n1*n4 - 
      2*n2*n4)*j[p4, n1, n2, n3, 1 + n4, 0, 1, -1, 0, 0, 2, 1, -1, 1, 1])/
    (2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((24 - 14*d + 2*d^2 + 4*n2 - d*n2 + 8*n3 - 2*d*n3 + 20*n4 - 6*d*n4 + 
      2*n2*n4 + 4*n3*n4 + 4*n4^2)*j[p4, n1, n2, n3, 1 + n4, 0, 1, -1, 1, 0, 
      1, 1, 0, 0, 1])/((-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((24 - 14*d + 2*d^2 + 4*n2 - d*n2 + 8*n3 - 2*d*n3 + 20*n4 - 6*d*n4 + 
      2*n2*n4 + 4*n3*n4 + 4*n4^2)*j[p4, n1, n2, n3, 1 + n4, 0, 1, -1, 1, 0, 
      1, 1, 0, 1, 1])/((-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-8 + 6*d - d^2 - 8*n1 + 2*d*n1 - 4*n2 + d*n2 - 4*n4 + 2*d*n4 - 4*n1*n4 - 
      2*n2*n4)*j[p4, n1, n2, n3, 1 + n4, 0, 1, -1, 1, 0, 2, 0, -1, 1, 1])/
    (2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-8 + 6*d - d^2 - 8*n1 + 2*d*n1 - 4*n2 + d*n2 - 4*n4 + 2*d*n4 - 4*n1*n4 - 
      2*n2*n4)*j[p4, n1, n2, n3, 1 + n4, 0, 1, -1, 1, 0, 2, 1, -1, 0, 1])/
    (2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((24 - 14*d + 2*d^2 + 4*n2 - d*n2 + 8*n3 - 2*d*n3 + 20*n4 - 6*d*n4 + 
      2*n2*n4 + 4*n3*n4 + 4*n4^2)*j[p4, n1, n2, n3, 1 + n4, 0, 1, -1, 2, 0, 
      1, 0, -1, 1, 1])/(2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((24 - 14*d + 2*d^2 + 4*n2 - d*n2 + 8*n3 - 2*d*n3 + 20*n4 - 6*d*n4 + 
      2*n2*n4 + 4*n3*n4 + 4*n4^2)*j[p4, n1, n2, n3, 1 + n4, 0, 1, -1, 2, 0, 
      1, 1, -1, 0, 1])/(2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-32 + 20*d - 3*d^2 - 8*n1 + 2*d*n1 - 8*n2 + 2*d*n2 - 8*n3 + 2*d*n3 - 
      24*n4 + 8*d*n4 - 4*n1*n4 - 4*n2*n4 - 4*n3*n4 - 4*n4^2)*
     j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 0, -1, 1, 1, -1, 1, 2])/
    (2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-64 + 36*d - 5*d^2 - 16*n1 + 12*d*n1 - 2*d^2*n1 - 16*n2 + 4*d*n2 + 
      12*n1*n2 - 3*d*n1*n2 + 4*n2^2 - d*n2^2 + 56*n3 - 38*d*n3 + 6*d^2*n3 - 
      24*n1*n3 + 6*d*n1*n3 + 32*n3^2 - 8*d*n3^2 - 108*n4 + 60*d*n4 - 
      9*d^2*n4 - 20*n1*n4 + 8*d*n1*n4 - 34*n2*n4 + 10*d*n2*n4 + 4*n1*n2*n4 + 
      20*n3*n4 - 4*d*n3*n4 - 12*n1*n3*n4 - 6*n2*n3*n4 + 8*n3^2*n4 - 40*n4^2 + 
      12*d*n4^2 - 4*n1*n4^2 - 8*n2*n4^2 + 4*n3*n4^2 - 4*n4^3)*
     j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 0, 0, 1, 1, -1, 1, 1])/
    (2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((32 - 20*d + 3*d^2 + 8*n1 - 2*d*n1 + 8*n2 - 2*d*n2 + 8*n3 - 2*d*n3 + 
      24*n4 - 8*d*n4 + 4*n1*n4 + 4*n2*n4 + 4*n3*n4 + 4*n4^2)*
     j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 0, 0, 1, 1, -1, 1, 2])/
    (2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 - 20*n4 + 6*d*n4 - 
      2*n2*n4 - 4*n3*n4 - 4*n4^2)*j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 0, 0, 1, 
      2, -2, 1, 1])/(2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((24 - 14*d + 2*d^2 + 4*n2 - d*n2 + 8*n3 - 2*d*n3 + 20*n4 - 6*d*n4 + 
      2*n2*n4 + 4*n3*n4 + 4*n4^2)*j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 0, 0, 1, 
      2, -1, 1, 1])/(2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-32 + 20*d - 3*d^2 - 8*n1 + 2*d*n1 - 8*n2 + 2*d*n2 - 8*n3 + 2*d*n3 - 
      24*n4 + 8*d*n4 - 4*n1*n4 - 4*n2*n4 - 4*n3*n4 - 4*n4^2)*
     j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 1, -1, 1, 1, -1, 0, 2])/
    (2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((48 - 28*d + 4*d^2 - 24*n1 + 14*d*n1 - 2*d^2*n1 - 48*n2 + 32*d*n2 - 
      5*d^2*n2 - 12*n1*n2 + 3*d*n1*n2 - 12*n2^2 + 3*d*n2^2 - 32*n3 + 
      24*d*n3 - 4*d^2*n3 - 8*n1*n3 + 2*d*n1*n3 - 24*n2*n3 + 6*d*n2*n3 - 
      16*n3^2 + 4*d*n3^2 + 48*n4 - 18*d*n4 + d^2*n4 - 12*n1*n4 + 4*d*n1*n4 - 
      36*n2*n4 + 13*d*n2*n4 - 6*n1*n2*n4 - 6*n2^2*n4 - 32*n3*n4 + 
      12*d*n3*n4 - 4*n1*n3*n4 - 12*n2*n3*n4 - 8*n3^2*n4 + 12*n4^2 - 
      2*d*n4^2 - 6*n2*n4^2 - 8*n3*n4^2)*j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 1, 
      0, 0, 1, -1, 1, 1])/(2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 - 20*n4 + 6*d*n4 - 
      2*n2*n4 - 4*n3*n4 - 4*n4^2)*j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 0, 
      2, -2, 1, 1])/(2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((24 - 14*d + 2*d^2 + 4*n2 - d*n2 + 8*n3 - 2*d*n3 + 20*n4 - 6*d*n4 + 
      2*n2*n4 + 4*n3*n4 + 4*n4^2)*j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 0, 
      2, -1, 1, 1])/(2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((24 - 14*d + 2*d^2 + 24*n1 - 14*d*n1 + 2*d^2*n1 + 4*n2 - d*n2 + 4*n1*n2 - 
      d*n1*n2 + 56*n3 - 30*d*n3 + 4*d^2*n3 + 8*n1*n3 - 2*d*n1*n3 + 8*n2*n3 - 
      2*d*n2*n3 + 16*n3^2 - 4*d*n3^2 + 12*n4 - d^2*n4 + 12*n1*n4 - 
      4*d*n1*n4 - 2*n2*n4 + d*n2*n4 + 2*n1*n2*n4 + 44*n3*n4 - 12*d*n3*n4 + 
      4*n1*n3*n4 + 4*n2*n3*n4 + 8*n3^2*n4 + 2*d*n4^2 - 2*n2*n4^2 + 8*n3*n4^2)*
     j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, 0, -1, 1, 1])/
    (2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-96 + 56*d - 8*d^2 - 48*n2 + 20*d*n2 - 2*d^2*n2 + 16*n1*n2 - 4*d*n1*n2 + 
      32*n3 - 28*d*n3 + 5*d^2*n3 - 8*n1*n3 + 2*d*n1*n3 - 8*n2*n3 + 
      2*d*n2*n3 + 24*n3^2 - 6*d*n3^2 - 80*n4 + 24*d*n4 - 40*n2*n4 + 
      8*d*n2*n4 + 8*n1*n2*n4 + 40*n3*n4 - 16*d*n3*n4 - 4*n1*n3*n4 - 
      4*n2*n3*n4 + 12*n3^2*n4 - 16*n4^2 - 8*n2*n4^2 + 12*n3*n4^2)*
     j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, 1, -1, 0, 1])/
    (2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((32 - 20*d + 3*d^2 + 8*n1 - 2*d*n1 + 8*n2 - 2*d*n2 + 8*n3 - 2*d*n3 + 
      24*n4 - 8*d*n4 + 4*n1*n4 + 4*n2*n4 + 4*n3*n4 + 4*n4^2)*
     j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, 1, -1, 0, 2])/
    (2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 + 32*n4 - 38*d*n4 + 
      9*d^2*n4 + 4*n1*n4 - 2*d*n1*n4 + 16*n2*n4 - 8*d*n2*n4 + 2*n1*n2*n4 + 
      2*n2^2*n4 + 36*n3*n4 - 16*d*n3*n4 + 6*n2*n3*n4 + 8*n3^2*n4 + 24*n4^2 - 
      12*d*n4^2 + 4*n2*n4^2 + 12*n3*n4^2 + 4*n4^3)*j[p4, n1, n2, n3, 1 + n4, 
      0, 1, 0, 1, 0, 1, 1, -1, 1, 0])/(2*(-3 + d - n4)*
     (52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((24 - 26*d + 9*d^2 - d^3 - 12*n2 + 7*d*n2 - 
      d^2*n2 - 4*n1*n2 + d*n1*n2 - 4*n2^2 + d*n2^2 + 32*n3 - 20*d*n3 + 
      3*d^2*n3 + 8*n3^2 - 2*d*n3^2 + 44*n4 - 30*d*n4 + 5*d^2*n4 - 6*n2*n4 + 
      2*d*n2*n4 - 2*n1*n2*n4 - 2*n2^2*n4 + 32*n3*n4 - 10*d*n3*n4 + 
      4*n3^2*n4 + 24*n4^2 - 8*d*n4^2 + 8*n3*n4^2 + 4*n4^3)*
     j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, 1, -1, 1, 1])/
    ((-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((24 - 14*d + 2*d^2 + 4*n2 - d*n2 + 8*n3 - 2*d*n3 + 20*n4 - 6*d*n4 + 
      2*n2*n4 + 4*n3*n4 + 4*n4^2)*j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, 
      1, 0, 0, 1])/((-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((8 - 6*d + d^2 + 8*n1 - 2*d*n1 + 4*n2 - d*n2 + 4*n4 - 2*d*n4 + 4*n1*n4 + 
      2*n2*n4)*j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 2, 0, -2, 1, 1])/
    (2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-8 + 6*d - d^2 - 8*n1 + 2*d*n1 - 4*n2 + d*n2 - 4*n4 + 2*d*n4 - 4*n1*n4 - 
      2*n2*n4)*j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 2, 0, -1, 1, 1])/
    (2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 - 20*n4 + 6*d*n4 - 
      2*n2*n4 - 4*n3*n4 - 4*n4^2)*j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 2, 0, 1, 
      0, -2, 1, 1])/(2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   j[p4, n1, n2, n3, 1 + n4, 0, 2, -1, 0, 0, 1, 1, -1, 1, 1]/
    (2*(-3 + d - n4)) + ((24 - 14*d + 2*d^2 + 4*n2 - d*n2 + 8*n3 - 2*d*n3 + 
      20*n4 - 6*d*n4 + 2*n2*n4 + 4*n3*n4 + 4*n4^2)*j[p4, n1, n2, n3, 1 + n4, 
      0, 2, -1, 1, 0, 0, 1, -1, 1, 1])/(2*(-3 + d - n4)*
     (52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((16 - 8*d + d^2 - 8*n1 + 2*d*n1 + 8*n3 - 
      2*d*n3 + 16*n4 - 4*d*n4 - 4*n1*n4 + 4*n3*n4 + 4*n4^2)*
     j[p4, n1, n2, n3, 1 + n4, 0, 2, 0, 0, -1, 1, 1, -1, 1, 1])/
    (2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   j[p4, n1, n2, n3, 1 + n4, 0, 2, 0, 0, 0, 1, 1, -2, 1, 1]/
    (2*(-3 + d - n4)) + ((24 - 14*d + 2*d^2 + 4*n2 - d*n2 + 8*n3 - 2*d*n3 + 
      20*n4 - 6*d*n4 + 2*n2*n4 + 4*n3*n4 + 4*n4^2)*j[p4, n1, n2, n3, 1 + n4, 
      0, 2, 0, 1, -1, 1, 1, -1, 0, 1])/(2*(-3 + d - n4)*
     (52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((24 - 14*d + 2*d^2 + 4*n2 - d*n2 + 8*n3 - 
      2*d*n3 + 20*n4 - 6*d*n4 + 2*n2*n4 + 4*n3*n4 + 4*n4^2)*
     j[p4, n1, n2, n3, 1 + n4, 0, 2, 0, 1, -1, 1, 1, -1, 1, 0])/
    (2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 - 20*n4 + 6*d*n4 - 
      2*n2*n4 - 4*n3*n4 - 4*n4^2)*j[p4, n1, n2, n3, 1 + n4, 0, 2, 0, 1, 0, 0, 
      1, -2, 1, 1])/(2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((32 - 20*d + 3*d^2 + 8*n1 - 2*d*n1 + 8*n2 - 2*d*n2 + 8*n3 - 2*d*n3 + 
      56*n4 - 28*d*n4 + 3*d^2*n4 + 12*n1*n4 - 2*d*n1*n4 + 12*n2*n4 - 
      2*d*n2*n4 + 12*n3*n4 - 2*d*n3*n4 + 28*n4^2 - 8*d*n4^2 + 4*n1*n4^2 + 
      4*n2*n4^2 + 4*n3*n4^2 + 4*n4^3)*j[p4, n1, n2, n3, 2 + n4, 0, 0, -1, 1, 
      0, 1, 1, -1, 1, 1])/(2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-32 + 20*d - 3*d^2 - 8*n1 + 2*d*n1 - 8*n2 + 2*d*n2 - 8*n3 + 2*d*n3 - 
      56*n4 + 28*d*n4 - 3*d^2*n4 - 12*n1*n4 + 2*d*n1*n4 - 12*n2*n4 + 
      2*d*n2*n4 - 12*n3*n4 + 2*d*n3*n4 - 28*n4^2 + 8*d*n4^2 - 4*n1*n4^2 - 
      4*n2*n4^2 - 4*n3*n4^2 - 4*n4^3)*j[p4, n1, n2, n3, 2 + n4, 0, 0, 0, 1, 
      -1, 1, 1, -1, 1, 1])/(2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-32 + 20*d - 3*d^2 - 8*n1 + 2*d*n1 - 8*n2 + 2*d*n2 - 8*n3 + 2*d*n3 - 
      56*n4 + 28*d*n4 - 3*d^2*n4 - 12*n1*n4 + 2*d*n1*n4 - 12*n2*n4 + 
      2*d*n2*n4 - 12*n3*n4 + 2*d*n3*n4 - 28*n4^2 + 8*d*n4^2 - 4*n1*n4^2 - 
      4*n2*n4^2 - 4*n3*n4^2 - 4*n4^3)*j[p4, n1, n2, n3, 2 + n4, 0, 1, -1, 0, 
      0, 1, 1, -1, 1, 1])/(2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((24 - 14*d + 2*d^2 + 4*n2 - d*n2 + 8*n3 - 2*d*n3 + 44*n4 - 20*d*n4 + 
      2*d^2*n4 + 6*n2*n4 - d*n2*n4 + 12*n3*n4 - 2*d*n3*n4 + 24*n4^2 - 
      6*d*n4^2 + 2*n2*n4^2 + 4*n3*n4^2 + 4*n4^3)*j[p4, n1, n2, n3, 2 + n4, 0, 
      1, -1, 1, 0, 1, 1, -1, 1, 0])/(2*(3 - d + n4)*
     (52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((32 - 20*d + 3*d^2 + 8*n1 - 2*d*n1 + 8*n2 - 
      2*d*n2 + 8*n3 - 2*d*n3 + 56*n4 - 28*d*n4 + 3*d^2*n4 + 12*n1*n4 - 
      2*d*n1*n4 + 12*n2*n4 - 2*d*n2*n4 + 12*n3*n4 - 2*d*n3*n4 + 28*n4^2 - 
      8*d*n4^2 + 4*n1*n4^2 + 4*n2*n4^2 + 4*n3*n4^2 + 4*n4^3)*
     j[p4, n1, n2, n3, 2 + n4, 0, 1, 0, 0, -1, 1, 1, -1, 1, 1])/
    (2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 - 44*n4 + 20*d*n4 - 
      2*d^2*n4 - 6*n2*n4 + d*n2*n4 - 12*n3*n4 + 2*d*n3*n4 - 24*n4^2 + 
      6*d*n4^2 - 2*n2*n4^2 - 4*n3*n4^2 - 4*n4^3)*j[p4, n1, n2, n3, 2 + n4, 0, 
      1, 0, 1, -1, 1, 1, -1, 1, 0])/(2*(3 - d + n4)*
     (52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((-32*n3 + 20*d*n3 - 3*d^2*n3 - 8*n1*n3 + 
      2*d*n1*n3 - 8*n2*n3 + 2*d*n2*n3 - 8*n3^2 + 2*d*n3^2 - 24*n3*n4 + 
      8*d*n3*n4 - 4*n1*n3*n4 - 4*n2*n3*n4 - 4*n3^2*n4 - 4*n3*n4^2)*
     j[p4, n1, n2, 1 + n3, 1 + n4, 0, 1, -1, 0, 0, 1, 1, -1, 1, 1])/
    (2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((32*n3 - 20*d*n3 + 3*d^2*n3 + 8*n1*n3 - 2*d*n1*n3 + 8*n2*n3 - 2*d*n2*n3 + 
      8*n3^2 - 2*d*n3^2 + 24*n3*n4 - 8*d*n3*n4 + 4*n1*n3*n4 + 4*n2*n3*n4 + 
      4*n3^2*n4 + 4*n3*n4^2)*j[p4, n1, n2, 1 + n3, 1 + n4, 0, 1, -1, 1, 0, 0, 
      1, -1, 1, 1])/(2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-32*n3 + 20*d*n3 - 3*d^2*n3 - 8*n1*n3 + 2*d*n1*n3 - 8*n2*n3 + 
      2*d*n2*n3 - 8*n3^2 + 2*d*n3^2 - 24*n3*n4 + 8*d*n3*n4 - 4*n1*n3*n4 - 
      4*n2*n3*n4 - 4*n3^2*n4 - 4*n3*n4^2)*j[p4, n1, n2, 1 + n3, 1 + n4, 0, 1, 
      -1, 1, 0, 1, 0, -1, 1, 1])/(2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-32*n3 + 20*d*n3 - 3*d^2*n3 - 8*n1*n3 + 2*d*n1*n3 - 8*n2*n3 + 
      2*d*n2*n3 - 8*n3^2 + 2*d*n3^2 - 24*n3*n4 + 8*d*n3*n4 - 4*n1*n3*n4 - 
      4*n2*n3*n4 - 4*n3^2*n4 - 4*n3*n4^2)*j[p4, n1, n2, 1 + n3, 1 + n4, 0, 1, 
      -1, 1, 0, 1, 1, -1, 0, 1])/(2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-32*n3 + 20*d*n3 - 3*d^2*n3 - 8*n1*n3 + 2*d*n1*n3 - 8*n2*n3 + 
      2*d*n2*n3 - 8*n3^2 + 2*d*n3^2 - 24*n3*n4 + 8*d*n3*n4 - 4*n1*n3*n4 - 
      4*n2*n3*n4 - 4*n3^2*n4 - 4*n3*n4^2)*j[p4, n1, n2, 1 + n3, 1 + n4, 0, 1, 
      0, 0, 0, 1, 1, -2, 1, 1])/(2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((32*n3 - 20*d*n3 + 3*d^2*n3 + 8*n1*n3 - 2*d*n1*n3 + 8*n2*n3 - 2*d*n2*n3 + 
      8*n3^2 - 2*d*n3^2 + 24*n3*n4 - 8*d*n3*n4 + 4*n1*n3*n4 + 4*n2*n3*n4 + 
      4*n3^2*n4 + 4*n3*n4^2)*j[p4, n1, n2, 1 + n3, 1 + n4, 0, 1, 0, 0, 0, 1, 
      1, -1, 1, 1])/((-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-32*n3 + 20*d*n3 - 3*d^2*n3 - 8*n1*n3 + 2*d*n1*n3 - 8*n2*n3 + 
      2*d*n2*n3 - 8*n3^2 + 2*d*n3^2 - 24*n3*n4 + 8*d*n3*n4 - 4*n1*n3*n4 - 
      4*n2*n3*n4 - 4*n3^2*n4 - 4*n3*n4^2)*j[p4, n1, n2, 1 + n3, 1 + n4, 0, 1, 
      0, 1, 0, 0, 1, -2, 1, 1])/(2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((32*n3 - 20*d*n3 + 3*d^2*n3 + 8*n1*n3 - 2*d*n1*n3 + 8*n2*n3 - 2*d*n2*n3 + 
      8*n3^2 - 2*d*n3^2 + 24*n3*n4 - 8*d*n3*n4 + 4*n1*n3*n4 + 4*n2*n3*n4 + 
      4*n3^2*n4 + 4*n3*n4^2)*j[p4, n1, n2, 1 + n3, 1 + n4, 0, 1, 0, 1, 0, 1, 
      0, -2, 1, 1])/(2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((32*n3 - 20*d*n3 + 3*d^2*n3 + 8*n1*n3 - 2*d*n1*n3 + 8*n2*n3 - 2*d*n2*n3 + 
      8*n3^2 - 2*d*n3^2 + 24*n3*n4 - 8*d*n3*n4 + 4*n1*n3*n4 + 4*n2*n3*n4 + 
      4*n3^2*n4 + 4*n3*n4^2)*j[p4, n1, n2, 1 + n3, 1 + n4, 0, 1, 0, 1, 0, 1, 
      1, -1, 0, 1])/(2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((8*n2 - 6*d*n2 + d^2*n2 + 8*n1*n2 - 2*d*n1*n2 + 4*n2^2 - d*n2^2 + 
      4*n2*n4 - 2*d*n2*n4 + 4*n1*n2*n4 + 2*n2^2*n4)*
     j[p4, n1, 1 + n2, -1 + n3, 1 + n4, 0, 1, 0, 0, 0, 1, 1, -1, 1, 1])/
    (2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-72*n2 + 42*d*n2 - 6*d^2*n2 - 12*n2^2 + 3*d*n2^2 - 24*n2*n3 + 
      6*d*n2*n3 - 60*n2*n4 + 18*d*n2*n4 - 6*n2^2*n4 - 12*n2*n3*n4 - 
      12*n2*n4^2)*j[p4, n1, 1 + n2, -1 + n3, 1 + n4, 0, 1, 0, 1, 0, 0, 1, -1, 
      1, 1])/(2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 
      8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 
      28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-8*n2 + 6*d*n2 - d^2*n2 - 8*n1*n2 + 2*d*n1*n2 - 4*n2^2 + d*n2^2 - 
      4*n2*n4 + 2*d*n2*n4 - 4*n1*n2*n4 - 2*n2^2*n4)*
     j[p4, n1, 1 + n2, n3, 1 + n4, 0, 1, -1, 0, 0, 1, 1, -1, 1, 1])/
    ((-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((80*n2 - 48*d*n2 + 7*d^2*n2 + 8*n1*n2 - 2*d*n1*n2 + 16*n2^2 - 4*d*n2^2 + 
      24*n2*n3 - 6*d*n2*n3 + 64*n2*n4 - 20*d*n2*n4 + 4*n1*n2*n4 + 8*n2^2*n4 + 
      12*n2*n3*n4 + 12*n2*n4^2)*j[p4, n1, 1 + n2, n3, 1 + n4, 0, 1, -1, 1, 0, 
      0, 1, -1, 1, 1])/(2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-8*n2 + 6*d*n2 - d^2*n2 - 8*n1*n2 + 2*d*n1*n2 - 4*n2^2 + d*n2^2 - 
      4*n2*n4 + 2*d*n2*n4 - 4*n1*n2*n4 - 2*n2^2*n4)*
     j[p4, n1, 1 + n2, n3, 1 + n4, 0, 1, -1, 1, 0, 1, 1, -1, 0, 1])/
    ((-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-16*n2 + 8*d*n2 - d^2*n2 + 8*n1*n2 - 2*d*n1*n2 - 8*n2*n3 + 2*d*n2*n3 - 
      16*n2*n4 + 4*d*n2*n4 + 4*n1*n2*n4 - 4*n2*n3*n4 - 4*n2*n4^2)*
     j[p4, n1, 1 + n2, n3, 1 + n4, 0, 1, -1, 1, 0, 1, 1, -1, 1, 1])/
    (2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((8*n2 - 6*d*n2 + d^2*n2 + 8*n1*n2 - 2*d*n1*n2 + 4*n2^2 - d*n2^2 + 
      4*n2*n4 - 2*d*n2*n4 + 4*n1*n2*n4 + 2*n2^2*n4)*
     j[p4, n1, 1 + n2, n3, 1 + n4, 0, 1, 0, 0, 0, 1, 1, -2, 1, 1])/
    (2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((16*n2 - 8*d*n2 + d^2*n2 - 8*n1*n2 + 2*d*n1*n2 + 8*n2*n3 - 2*d*n2*n3 + 
      16*n2*n4 - 4*d*n2*n4 - 4*n1*n2*n4 + 4*n2*n3*n4 + 4*n2*n4^2)*
     j[p4, n1, 1 + n2, n3, 1 + n4, 0, 1, 0, 0, 0, 1, 1, -1, 1, 1])/
    (2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 18*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 28*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-56*n2 + 34*d*n2 - 5*d^2*n2 - 8*n1*n2 + 2*d*n1*n2 - 12*n2^2 + 3*d*n2^2 - 
      16*n2*n3 + 4*d*n2*n3 - 44*n2*n4 + 14*d*n2*n4 - 4*n1*n2*n4 - 6*n2^2*n4 - 
      8*n2*n3*n4 - 8*n2*n4^2)*j[p4, n1, 1 + n2, n3, 1 + n4, 0, 1, 0, 1, 0, 0, 
      1, -2, 1, 1])/(2*(-3 + d - n4)*(52 - 44*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      18*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 40*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 28*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((24*n1 - 14*d*n1 + 2*d^2*n1 + 4*n1*n2 - d*n1*n2 + 8*n1*n3 - 2*d*n1*n3 + 
      20*n1*n4 - 6*d*n1*n4 + 2*n1*n2*n4 + 4*n1*n3*n4 + 4*n1*n4^2)*
     j[p4, 1 + n1, -1 + n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, 1, -1, 0, 1])/
    (2*(-3 + d - n4)*(-52 + 44*d - 9*d^2 - 4*n1 + 2*d*n1 - 18*n2 + 8*d*n2 - 
      2*n1*n2 - 2*n2^2 - 40*n3 + 16*d*n3 - 6*n2*n3 - 8*n3^2 - 28*n4 + 
      12*d*n4 - 4*n2*n4 - 12*n3*n4 - 4*n4^2)) + 
   ((-24*n1 + 14*d*n1 - 2*d^2*n1 - 4*n1*n2 + d*n1*n2 - 8*n1*n3 + 2*d*n1*n3 - 
      20*n1*n4 + 6*d*n1*n4 - 2*n1*n2*n4 - 4*n1*n3*n4 - 4*n1*n4^2)*
     j[p4, 1 + n1, n2, n3, 1 + n4, 0, 1, 0, 0, 0, 1, 1, -1, 1, 1])/
    (2*(-3 + d - n4)*(-52 + 44*d - 9*d^2 - 4*n1 + 2*d*n1 - 18*n2 + 8*d*n2 - 
      2*n1*n2 - 2*n2^2 - 40*n3 + 16*d*n3 - 6*n2*n3 - 8*n3^2 - 28*n4 + 
      12*d*n4 - 4*n2*n4 - 12*n3*n4 - 4*n4^2)) + 
   ((-24*n1 + 14*d*n1 - 2*d^2*n1 - 4*n1*n2 + d*n1*n2 - 8*n1*n3 + 2*d*n1*n3 - 
      20*n1*n4 + 6*d*n1*n4 - 2*n1*n2*n4 - 4*n1*n3*n4 - 4*n1*n4^2)*
     j[p4, 1 + n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 0, 1, -1, 1, 1])/
    (2*(-3 + d - n4)*(-52 + 44*d - 9*d^2 - 4*n1 + 2*d*n1 - 18*n2 + 8*d*n2 - 
      2*n1*n2 - 2*n2^2 - 40*n3 + 16*d*n3 - 6*n2*n3 - 8*n3^2 - 28*n4 + 
      12*d*n4 - 4*n2*n4 - 12*n3*n4 - 4*n4^2)) + 
   ((24*n1 - 14*d*n1 + 2*d^2*n1 + 4*n1*n2 - d*n1*n2 + 8*n1*n3 - 2*d*n1*n3 + 
      20*n1*n4 - 6*d*n1*n4 + 2*n1*n2*n4 + 4*n1*n3*n4 + 4*n1*n4^2)*
     j[p4, 1 + n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, 0, -1, 1, 1])/
    (2*(-3 + d - n4)*(-52 + 44*d - 9*d^2 - 4*n1 + 2*d*n1 - 18*n2 + 8*d*n2 - 
      2*n1*n2 - 2*n2^2 - 40*n3 + 16*d*n3 - 6*n2*n3 - 8*n3^2 - 28*n4 + 
      12*d*n4 - 4*n2*n4 - 12*n3*n4 - 4*n4^2)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n5 == 0 && 
    n6 == 1 && n7 == 0 && n8 == 1 && n9 == 0 && n4 != 0 -> 
  ((-8 + 6*d - d^2 - 8*n1 + 2*d*n1 - 4*n2 + d*n2 - 4*n4 + 2*d*n4 - 4*n1*n4 - 
      2*n2*n4)*j[p4, -1 + n1, n2, n3, 1 + n4, 0, 1, 0, 0, 0, 2, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 - 20*n4 + 6*d*n4 - 
      2*n2*n4 - 4*n3*n4 - 4*n4^2)*j[p4, -1 + n1, n2, n3, 1 + n4, 0, 1, 0, 1, 
      0, 0, 2, 0, 1, 1])/((-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((48 - 52*d + 18*d^2 - 2*d^3 + 24*n1 - 14*d*n1 + 2*d^2*n1 + 64*n2 - 
      40*d*n2 + 6*d^2*n2 + 12*n1*n2 - 3*d*n1*n2 + 12*n2^2 - 3*d*n2^2 + 
      16*n3 - 12*d*n3 + 2*d^2*n3 + 8*n1*n3 - 2*d*n1*n3 + 16*n2*n3 - 
      4*d*n2*n3 + 40*n4 - 32*d*n4 + 6*d^2*n4 + 20*n1*n4 - 6*d*n1*n4 + 
      48*n2*n4 - 16*d*n2*n4 + 6*n1*n2*n4 + 6*n2^2*n4 + 8*n3*n4 - 4*d*n3*n4 + 
      4*n1*n3*n4 + 8*n2*n3*n4 + 8*n4^2 - 4*d*n4^2 + 4*n1*n4^2 + 8*n2*n4^2)*
     j[p4, -1 + n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-8 + 6*d - d^2 - 8*n1 + 2*d*n1 - 4*n2 + d*n2 - 4*n4 + 2*d*n4 - 4*n1*n4 - 
      2*n2*n4)*j[p4, -1 + n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 2, 1, 0, 0, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((24 - 14*d + 2*d^2 + 4*n2 - d*n2 + 8*n3 - 2*d*n3 + 20*n4 - 6*d*n4 + 
      2*n2*n4 + 4*n3*n4 + 4*n4^2)*j[p4, -1 + n1, n2, n3, 1 + n4, 0, 1, 0, 2, 
      0, 1, 1, 0, 0, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((32 - 20*d + 3*d^2 + 8*n1 - 2*d*n1 + 8*n2 - 2*d*n2 + 8*n3 - 2*d*n3 + 
      56*n4 - 28*d*n4 + 3*d^2*n4 + 12*n1*n4 - 2*d*n1*n4 + 12*n2*n4 - 
      2*d*n2*n4 + 12*n3*n4 - 2*d*n3*n4 + 28*n4^2 - 8*d*n4^2 + 4*n1*n4^2 + 
      4*n2*n4^2 + 4*n3*n4^2 + 4*n4^3)*j[p4, -1 + n1, n2, n3, 2 + n4, 0, 0, 0, 
      1, 0, 1, 1, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-32 + 20*d - 3*d^2 - 8*n1 + 2*d*n1 - 8*n2 + 2*d*n2 - 8*n3 + 2*d*n3 - 
      56*n4 + 28*d*n4 - 3*d^2*n4 - 12*n1*n4 + 2*d*n1*n4 - 12*n2*n4 + 
      2*d*n2*n4 - 12*n3*n4 + 2*d*n3*n4 - 28*n4^2 + 8*d*n4^2 - 4*n1*n4^2 - 
      4*n2*n4^2 - 4*n3*n4^2 - 4*n4^3)*j[p4, -1 + n1, n2, n3, 2 + n4, 0, 1, 0, 
      0, 0, 1, 1, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((24 - 14*d + 2*d^2 + 4*n2 - d*n2 + 8*n3 - 2*d*n3 + 44*n4 - 20*d*n4 + 
      2*d^2*n4 + 6*n2*n4 - d*n2*n4 + 12*n3*n4 - 2*d*n3*n4 + 24*n4^2 - 
      6*d*n4^2 + 2*n2*n4^2 + 4*n3*n4^2 + 4*n4^3)*j[p4, -1 + n1, n2, n3, 
      2 + n4, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0])/(2*(3 - d + n4)*
     (64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((-32*n3 + 20*d*n3 - 3*d^2*n3 - 8*n1*n3 + 
      2*d*n1*n3 - 8*n2*n3 + 2*d*n2*n3 - 8*n3^2 + 2*d*n3^2 - 24*n3*n4 + 
      8*d*n3*n4 - 4*n1*n3*n4 - 4*n2*n3*n4 - 4*n3^2*n4 - 4*n3*n4^2)*
     j[p4, -1 + n1, n2, 1 + n3, 1 + n4, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-32*n3 + 20*d*n3 - 3*d^2*n3 - 8*n1*n3 + 2*d*n1*n3 - 8*n2*n3 + 
      2*d*n2*n3 - 8*n3^2 + 2*d*n3^2 - 24*n3*n4 + 8*d*n3*n4 - 4*n1*n3*n4 - 
      4*n2*n3*n4 - 4*n3^2*n4 - 4*n3*n4^2)*j[p4, -1 + n1, n2, 1 + n3, 1 + n4, 
      0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/(2*(-3 + d - n4)*
     (64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((80*n2 - 48*d*n2 + 7*d^2*n2 + 8*n1*n2 - 
      2*d*n1*n2 + 16*n2^2 - 4*d*n2^2 + 24*n2*n3 - 6*d*n2*n3 + 64*n2*n4 - 
      20*d*n2*n4 + 4*n1*n2*n4 + 8*n2^2*n4 + 12*n2*n3*n4 + 12*n2*n4^2)*
     j[p4, -1 + n1, 1 + n2, -1 + n3, 1 + n4, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-32*n2 + 20*d*n2 - 3*d^2*n2 - 8*n1*n2 + 2*d*n1*n2 - 8*n2^2 + 2*d*n2^2 - 
      8*n2*n3 + 2*d*n2*n3 - 24*n2*n4 + 8*d*n2*n4 - 4*n1*n2*n4 - 4*n2^2*n4 - 
      4*n2*n3*n4 - 4*n2*n4^2)*j[p4, -1 + n1, 1 + n2, n3, 1 + n4, 0, 1, -1, 1, 
      0, 1, 1, 0, 1, 1])/((-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-32*n2 + 20*d*n2 - 3*d^2*n2 - 8*n1*n2 + 2*d*n1*n2 - 8*n2^2 + 2*d*n2^2 - 
      8*n2*n3 + 2*d*n2*n3 - 24*n2*n4 + 8*d*n2*n4 - 4*n1*n2*n4 - 4*n2^2*n4 - 
      4*n2*n3*n4 - 4*n2*n4^2)*j[p4, -1 + n1, 1 + n2, n3, 1 + n4, 0, 1, 0, 0, 
      0, 1, 1, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((32*n2 - 20*d*n2 + 3*d^2*n2 + 8*n1*n2 - 2*d*n1*n2 + 8*n2^2 - 2*d*n2^2 + 
      8*n2*n3 - 2*d*n2*n3 + 24*n2*n4 - 8*d*n2*n4 + 4*n1*n2*n4 + 4*n2^2*n4 + 
      4*n2*n3*n4 + 4*n2*n4^2)*j[p4, -1 + n1, 1 + n2, n3, 1 + n4, 0, 1, 0, 1, 
      0, 1, 1, -1, 1, 1])/((-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-8*n2 + 6*d*n2 - d^2*n2 - 8*n1*n2 + 2*d*n1*n2 - 4*n2^2 + d*n2^2 - 
      4*n2*n4 + 2*d*n2*n4 - 4*n1*n2*n4 - 2*n2^2*n4)*
     j[p4, -1 + n1, 1 + n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((8 - 6*d + d^2 + 8*n1 - 2*d*n1 + 4*n2 - d*n2 + 4*n4 - 2*d*n4 + 4*n1*n4 + 
      2*n2*n4)*j[p4, n1, -1 + n2, n3, 1 + n4, 0, 1, 0, 0, 0, 2, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-48 + 52*d - 18*d^2 + 2*d^3 - 24*n1 + 14*d*n1 - 2*d^2*n1 - 32*n2 + 
      20*d*n2 - 3*d^2*n2 - 4*n1*n2 + d*n1*n2 - 4*n2^2 + d*n2^2 - 16*n3 + 
      12*d*n3 - 2*d^2*n3 - 8*n1*n3 + 2*d*n1*n3 - 8*n2*n3 + 2*d*n2*n3 - 
      40*n4 + 32*d*n4 - 6*d^2*n4 - 20*n1*n4 + 6*d*n1*n4 - 24*n2*n4 + 
      8*d*n2*n4 - 2*n1*n2*n4 - 2*n2^2*n4 - 8*n3*n4 + 4*d*n3*n4 - 4*n1*n3*n4 - 
      4*n2*n3*n4 - 8*n4^2 + 4*d*n4^2 - 4*n1*n4^2 - 4*n2*n4^2)*
     j[p4, n1, -1 + n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((8 - 6*d + d^2 + 8*n1 - 2*d*n1 + 4*n2 - d*n2 + 4*n4 - 2*d*n4 + 4*n1*n4 + 
      2*n2*n4)*j[p4, n1, -1 + n2, n3, 1 + n4, 0, 1, 0, 1, 0, 2, 0, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((8 - 6*d + d^2 + 8*n1 - 2*d*n1 + 4*n2 - d*n2 + 4*n4 - 2*d*n4 + 4*n1*n4 + 
      2*n2*n4)*j[p4, n1, -1 + n2, n3, 1 + n4, 0, 1, 0, 1, 0, 2, 1, 0, 0, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 - 20*n4 + 6*d*n4 - 
      2*n2*n4 - 4*n3*n4 - 4*n4^2)*j[p4, n1, -1 + n2, n3, 1 + n4, 0, 1, 0, 2, 
      0, 1, 0, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 - 20*n4 + 6*d*n4 - 
      2*n2*n4 - 4*n3*n4 - 4*n4^2)*j[p4, n1, -1 + n2, n3, 1 + n4, 0, 1, 0, 2, 
      0, 1, 1, 0, 0, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   j[p4, n1, -1 + n2, n3, 1 + n4, 0, 2, 0, 0, 0, 1, 1, 0, 1, 1]/
    (2*(-3 + d - n4)) + ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 - 
      20*n4 + 6*d*n4 - 2*n2*n4 - 4*n3*n4 - 4*n4^2)*j[p4, n1, -1 + n2, n3, 
      1 + n4, 0, 2, 0, 1, 0, 0, 1, 0, 1, 1])/(2*(-3 + d - n4)*
     (64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((-32 + 20*d - 3*d^2 - 8*n1 + 2*d*n1 - 8*n2 + 
      2*d*n2 - 8*n3 + 2*d*n3 - 56*n4 + 28*d*n4 - 3*d^2*n4 - 12*n1*n4 + 
      2*d*n1*n4 - 12*n2*n4 + 2*d*n2*n4 - 12*n3*n4 + 2*d*n3*n4 - 28*n4^2 + 
      8*d*n4^2 - 4*n1*n4^2 - 4*n2*n4^2 - 4*n3*n4^2 - 4*n4^3)*
     j[p4, n1, -1 + n2, n3, 2 + n4, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((32 - 20*d + 3*d^2 + 8*n1 - 2*d*n1 + 8*n2 - 2*d*n2 + 8*n3 - 2*d*n3 + 
      56*n4 - 28*d*n4 + 3*d^2*n4 + 12*n1*n4 - 2*d*n1*n4 + 12*n2*n4 - 
      2*d*n2*n4 + 12*n3*n4 - 2*d*n3*n4 + 28*n4^2 - 8*d*n4^2 + 4*n1*n4^2 + 
      4*n2*n4^2 + 4*n3*n4^2 + 4*n4^3)*j[p4, n1, -1 + n2, n3, 2 + n4, 0, 1, 0, 
      0, 0, 1, 1, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 - 44*n4 + 20*d*n4 - 
      2*d^2*n4 - 6*n2*n4 + d*n2*n4 - 12*n3*n4 + 2*d*n3*n4 - 24*n4^2 + 
      6*d*n4^2 - 2*n2*n4^2 - 4*n3*n4^2 - 4*n4^3)*j[p4, n1, -1 + n2, n3, 
      2 + n4, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0])/(2*(3 - d + n4)*
     (64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((32*n3 - 20*d*n3 + 3*d^2*n3 + 8*n1*n3 - 
      2*d*n1*n3 + 8*n2*n3 - 2*d*n2*n3 + 8*n3^2 - 2*d*n3^2 + 24*n3*n4 - 
      8*d*n3*n4 + 4*n1*n3*n4 + 4*n2*n3*n4 + 4*n3^2*n4 + 4*n3*n4^2)*
     j[p4, n1, -1 + n2, 1 + n3, 1 + n4, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-32*n3 + 20*d*n3 - 3*d^2*n3 - 8*n1*n3 + 2*d*n1*n3 - 8*n2*n3 + 
      2*d*n2*n3 - 8*n3^2 + 2*d*n3^2 - 24*n3*n4 + 8*d*n3*n4 - 4*n1*n3*n4 - 
      4*n2*n3*n4 - 4*n3^2*n4 - 4*n3*n4^2)*j[p4, n1, -1 + n2, 1 + n3, 1 + n4, 
      0, 1, 0, 1, 0, 0, 1, 0, 1, 1])/(2*(-3 + d - n4)*
     (64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((32*n3 - 20*d*n3 + 3*d^2*n3 + 8*n1*n3 - 
      2*d*n1*n3 + 8*n2*n3 - 2*d*n2*n3 + 8*n3^2 - 2*d*n3^2 + 24*n3*n4 - 
      8*d*n3*n4 + 4*n1*n3*n4 + 4*n2*n3*n4 + 4*n3^2*n4 + 4*n3*n4^2)*
     j[p4, n1, -1 + n2, 1 + n3, 1 + n4, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((32*n3 - 20*d*n3 + 3*d^2*n3 + 8*n1*n3 - 2*d*n1*n3 + 8*n2*n3 - 2*d*n2*n3 + 
      8*n3^2 - 2*d*n3^2 + 24*n3*n4 - 8*d*n3*n4 + 4*n1*n3*n4 + 4*n2*n3*n4 + 
      4*n3^2*n4 + 4*n3*n4^2)*j[p4, n1, -1 + n2, 1 + n3, 1 + n4, 0, 1, 0, 1, 
      0, 1, 1, 0, 0, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-72 + 54*d - 10*d^2 - 12*n1 + 4*d*n1 - 24*n2 + 9*d*n2 - 2*n1*n2 - 
      2*n2^2 - 44*n3 + 16*d*n3 - 6*n2*n3 - 8*n3^2 - 36*n4 + 14*d*n4 - 
      4*n1*n4 - 6*n2*n4 - 12*n3*n4 - 4*n4^2)*j[p4, n1, n2, -1 + n3, 1 + n4, 
      0, 0, 0, 1, 0, 1, 1, 0, 1, 2])/(2*(-3 + d - n4)*
     (64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((-72 + 54*d - 10*d^2 - 12*n1 + 4*d*n1 - 24*n2 + 
      9*d*n2 - 2*n1*n2 - 2*n2^2 - 44*n3 + 16*d*n3 - 6*n2*n3 - 8*n3^2 - 
      36*n4 + 14*d*n4 - 4*n1*n4 - 6*n2*n4 - 12*n3*n4 - 4*n4^2)*
     j[p4, n1, n2, -1 + n3, 1 + n4, 0, 1, 0, 0, 0, 1, 1, 0, 1, 2])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-72 + 54*d - 10*d^2 - 12*n1 + 4*d*n1 - 24*n2 + 9*d*n2 - 2*n1*n2 - 
      2*n2^2 - 44*n3 + 16*d*n3 - 6*n2*n3 - 8*n3^2 - 36*n4 + 14*d*n4 - 
      4*n1*n4 - 6*n2*n4 - 12*n3*n4 - 4*n4^2)*j[p4, n1, n2, -1 + n3, 1 + n4, 
      0, 1, 0, 1, 0, 1, 1, 0, 0, 2])/(2*(-3 + d - n4)*
     (64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((-48 + 52*d - 18*d^2 + 2*d^3 + 48*n1 - 28*d*n1 + 
      4*d^2*n1 - 8*n2 + 6*d*n2 - d^2*n2 + 8*n1*n2 - 2*d*n1*n2 - 64*n3 + 
      40*d*n3 - 6*d^2*n3 + 16*n1*n3 - 4*d*n1*n3 - 8*n2*n3 + 2*d*n2*n3 - 
      16*n3^2 + 4*d*n3^2 - 40*n4 + 32*d*n4 - 6*d^2*n4 + 40*n1*n4 - 
      12*d*n1*n4 - 4*n2*n4 + 2*d*n2*n4 + 4*n1*n2*n4 - 48*n3*n4 + 16*d*n3*n4 + 
      8*n1*n3*n4 - 4*n2*n3*n4 - 8*n3^2*n4 - 8*n4^2 + 4*d*n4^2 + 8*n1*n4^2 - 
      8*n3*n4^2)*j[p4, n1, n2, -1 + n3, 1 + n4, 0, 1, 0, 1, 0, 1, 1, 0, 1, 
      1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 
      8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 
      32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((8 - 6*d + d^2 + 8*n1 - 2*d*n1 + 4*n2 - d*n2 + 4*n4 - 2*d*n4 + 4*n1*n4 + 
      2*n2*n4)*j[p4, n1, n2, -1 + n3, 1 + n4, 0, 1, 0, 1, 0, 2, 0, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   j[p4, n1, n2, -1 + n3, 1 + n4, 0, 2, 0, 0, 0, 1, 1, 0, 1, 1]/
    (2*(-3 + d - n4)) + ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 - 
      20*n4 + 6*d*n4 - 2*n2*n4 - 4*n3*n4 - 4*n4^2)*j[p4, n1, n2, -1 + n3, 
      1 + n4, 0, 2, 0, 1, 0, 0, 1, 0, 1, 1])/(2*(-3 + d - n4)*
     (64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((-136 + 90*d - 15*d^2 - 4*n1 + 2*d*n1 - 32*n2 + 
      11*d*n2 - 2*n1*n2 - 2*n2^2 - 68*n3 + 22*d*n3 - 6*n2*n3 - 8*n3^2 - 
      228*n4 + 120*d*n4 - 15*d^2*n4 - 4*n1*n4 + 2*d*n1*n4 - 42*n2*n4 + 
      11*d*n2*n4 - 2*n1*n2*n4 - 2*n2^2*n4 - 92*n3*n4 + 22*d*n3*n4 - 
      6*n2*n3*n4 - 8*n3^2*n4 - 108*n4^2 + 30*d*n4^2 - 10*n2*n4^2 - 
      24*n3*n4^2 - 16*n4^3)*j[p4, n1, n2, -1 + n3, 2 + n4, 0, 0, 0, 1, 0, 1, 
      1, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((112 - 76*d + 13*d^2 + 4*n1 - 2*d*n1 + 28*n2 - 10*d*n2 + 2*n1*n2 + 
      2*n2^2 + 60*n3 - 20*d*n3 + 6*n2*n3 + 8*n3^2 + 184*n4 - 100*d*n4 + 
      13*d^2*n4 + 4*n1*n4 - 2*d*n1*n4 + 36*n2*n4 - 10*d*n2*n4 + 2*n1*n2*n4 + 
      2*n2^2*n4 + 80*n3*n4 - 20*d*n3*n4 + 6*n2*n3*n4 + 8*n3^2*n4 + 84*n4^2 - 
      24*d*n4^2 + 8*n2*n4^2 + 20*n3*n4^2 + 12*n4^3)*
     j[p4, n1, n2, -1 + n3, 2 + n4, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((24 - 14*d + 2*d^2 + 4*n2 - d*n2 + 8*n3 - 2*d*n3 + 44*n4 - 20*d*n4 + 
      2*d^2*n4 + 6*n2*n4 - d*n2*n4 + 12*n3*n4 - 2*d*n3*n4 + 24*n4^2 - 
      6*d*n4^2 + 2*n2*n4^2 + 4*n3*n4^2 + 4*n4^3)*j[p4, n1, n2, -1 + n3, 
      2 + n4, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1])/(2*(3 - d + n4)*
     (64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 
      2*d*n3 - 44*n4 + 20*d*n4 - 2*d^2*n4 - 6*n2*n4 + d*n2*n4 - 12*n3*n4 + 
      2*d*n3*n4 - 24*n4^2 + 6*d*n4^2 - 2*n2*n4^2 - 4*n3*n4^2 - 4*n4^3)*
     j[p4, n1, n2, -1 + n3, 2 + n4, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1])/
    (2*(3 - d + n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((72 - 54*d + 10*d^2 + 12*n1 - 4*d*n1 + 24*n2 - 9*d*n2 + 2*n1*n2 + 
      2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 36*n4 - 14*d*n4 + 
      4*n1*n4 + 6*n2*n4 + 12*n3*n4 + 4*n4^2)*j[p4, n1, n2, n3, n4, 0, 0, 0, 
      1, 0, 1, 1, 0, 1, 2])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((72 - 54*d + 10*d^2 + 12*n1 - 4*d*n1 + 24*n2 - 9*d*n2 + 2*n1*n2 + 
      2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 36*n4 - 14*d*n4 + 
      4*n1*n4 + 6*n2*n4 + 12*n3*n4 + 4*n4^2)*j[p4, n1, n2, n3, n4, 0, 1, 0, 
      0, 0, 1, 1, 0, 1, 2])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((72 - 54*d + 10*d^2 + 12*n1 - 4*d*n1 + 24*n2 - 9*d*n2 + 2*n1*n2 + 
      2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 36*n4 - 14*d*n4 + 
      4*n1*n4 + 6*n2*n4 + 12*n3*n4 + 4*n4^2)*j[p4, n1, n2, n3, n4, 0, 1, 0, 
      1, 0, 1, 1, 0, 0, 2])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   j[p4, n1, n2, n3, n4, 0, 2, 0, 0, 0, 1, 1, 0, 1, 1]/(2*(-3 + d - n4)) + 
   ((8 - 6*d + d^2 + 8*n1 - 2*d*n1 + 4*n2 - d*n2 + 4*n4 - 2*d*n4 + 4*n1*n4 + 
      2*n2*n4)*j[p4, n1, n2, n3, n4, 0, 2, 0, 1, 0, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   j[p4, n1, n2, n3, n4, 0, 2, 0, 1, 0, 1, 1, 0, 0, 1]/(2*(-3 + d - n4)) + 
   j[p4, n1, n2, n3, n4, 0, 2, 0, 1, 0, 1, 1, 0, 1, 0]/(2*(-3 + d - n4)) + 
   ((-32 + 20*d - 3*d^2 - 8*n1 + 2*d*n1 - 8*n2 + 2*d*n2 - 8*n3 + 2*d*n3 - 
      24*n4 + 8*d*n4 - 4*n1*n4 - 4*n2*n4 - 4*n3*n4 - 4*n4^2)*
     j[p4, n1, n2, n3, 1 + n4, 0, 0, 0, 1, -1, 1, 1, 0, 1, 2])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((32 - 20*d + 3*d^2 + 8*n1 - 2*d*n1 + 8*n2 - 2*d*n2 + 8*n3 - 2*d*n3 + 
      96*n4 - 62*d*n4 + 10*d^2*n4 + 16*n1*n4 - 4*d*n1*n4 + 28*n2*n4 - 
      9*d*n2*n4 + 2*n1*n2*n4 + 2*n2^2*n4 + 48*n3*n4 - 16*d*n3*n4 + 
      6*n2*n3*n4 + 8*n3^2*n4 + 40*n4^2 - 14*d*n4^2 + 4*n1*n4^2 + 6*n2*n4^2 + 
      12*n3*n4^2 + 4*n4^3)*j[p4, n1, n2, n3, 1 + n4, 0, 0, 0, 1, 0, 1, 1, 0, 
      1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 
      8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 
      32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((32 - 20*d + 3*d^2 + 8*n1 - 2*d*n1 + 8*n2 - 2*d*n2 + 8*n3 - 2*d*n3 + 
      24*n4 - 8*d*n4 + 4*n1*n4 + 4*n2*n4 + 4*n3*n4 + 4*n4^2)*
     j[p4, n1, n2, n3, 1 + n4, 0, 0, 0, 1, 0, 1, 1, 0, 1, 2])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((24 - 14*d + 2*d^2 + 4*n2 - d*n2 + 8*n3 - 2*d*n3 + 20*n4 - 6*d*n4 + 
      2*n2*n4 + 4*n3*n4 + 4*n4^2)*j[p4, n1, n2, n3, 1 + n4, 0, 1, -1, 0, 0, 
      1, 2, 0, 1, 1])/((-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-8 + 6*d - d^2 - 8*n1 + 2*d*n1 - 4*n2 + d*n2 - 4*n4 + 2*d*n4 - 4*n1*n4 - 
      2*n2*n4)*j[p4, n1, n2, n3, 1 + n4, 0, 1, -1, 0, 0, 2, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-8 + 6*d - d^2 - 8*n1 + 2*d*n1 - 4*n2 + d*n2 - 4*n4 + 2*d*n4 - 4*n1*n4 - 
      2*n2*n4)*j[p4, n1, n2, n3, 1 + n4, 0, 1, -1, 1, 0, 2, 0, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-8 + 6*d - d^2 - 8*n1 + 2*d*n1 - 4*n2 + d*n2 - 4*n4 + 2*d*n4 - 4*n1*n4 - 
      2*n2*n4)*j[p4, n1, n2, n3, 1 + n4, 0, 1, -1, 1, 0, 2, 1, 0, 0, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((24 - 14*d + 2*d^2 + 4*n2 - d*n2 + 8*n3 - 2*d*n3 + 20*n4 - 6*d*n4 + 
      2*n2*n4 + 4*n3*n4 + 4*n4^2)*j[p4, n1, n2, n3, 1 + n4, 0, 1, -1, 2, 0, 
      1, 0, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((24 - 14*d + 2*d^2 + 4*n2 - d*n2 + 8*n3 - 2*d*n3 + 20*n4 - 6*d*n4 + 
      2*n2*n4 + 4*n3*n4 + 4*n4^2)*j[p4, n1, n2, n3, 1 + n4, 0, 1, -1, 2, 0, 
      1, 1, 0, 0, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-32 + 20*d - 3*d^2 - 8*n1 + 2*d*n1 - 8*n2 + 2*d*n2 - 8*n3 + 2*d*n3 - 
      24*n4 + 8*d*n4 - 4*n1*n4 - 4*n2*n4 - 4*n3*n4 - 4*n4^2)*
     j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 0, -1, 1, 1, 0, 1, 2])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-64 + 36*d - 5*d^2 - 16*n1 + 12*d*n1 - 2*d^2*n1 - 16*n2 + 4*d*n2 + 
      12*n1*n2 - 3*d*n1*n2 + 4*n2^2 - d*n2^2 + 56*n3 - 38*d*n3 + 6*d^2*n3 - 
      24*n1*n3 + 6*d*n1*n3 + 32*n3^2 - 8*d*n3^2 - 120*n4 + 64*d*n4 - 
      9*d^2*n4 - 20*n1*n4 + 8*d*n1*n4 - 36*n2*n4 + 10*d*n2*n4 + 4*n1*n2*n4 + 
      16*n3*n4 - 4*d*n3*n4 - 12*n1*n3*n4 - 6*n2*n3*n4 + 8*n3^2*n4 - 44*n4^2 + 
      12*d*n4^2 - 4*n1*n4^2 - 8*n2*n4^2 + 4*n3*n4^2 - 4*n4^3)*
     j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((32 - 20*d + 3*d^2 + 8*n1 - 2*d*n1 + 8*n2 - 2*d*n2 + 8*n3 - 2*d*n3 + 
      24*n4 - 8*d*n4 + 4*n1*n4 + 4*n2*n4 + 4*n3*n4 + 4*n4^2)*
     j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 0, 0, 1, 1, 0, 1, 2])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 - 20*n4 + 6*d*n4 - 
      2*n2*n4 - 4*n3*n4 - 4*n4^2)*j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 0, 0, 1, 
      2, -1, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((24 - 14*d + 2*d^2 + 4*n2 - d*n2 + 8*n3 - 2*d*n3 + 20*n4 - 6*d*n4 + 
      2*n2*n4 + 4*n3*n4 + 4*n4^2)*j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 0, 0, 1, 
      2, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-32 + 20*d - 3*d^2 - 8*n1 + 2*d*n1 - 8*n2 + 2*d*n2 - 8*n3 + 2*d*n3 - 
      24*n4 + 8*d*n4 - 4*n1*n4 - 4*n2*n4 - 4*n3*n4 - 4*n4^2)*
     j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 1, -1, 1, 1, 0, 0, 2])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((48 - 28*d + 4*d^2 - 24*n1 + 14*d*n1 - 2*d^2*n1 - 48*n2 + 32*d*n2 - 
      5*d^2*n2 - 12*n1*n2 + 3*d*n1*n2 - 12*n2^2 + 3*d*n2^2 - 32*n3 + 
      24*d*n3 - 4*d^2*n3 - 8*n1*n3 + 2*d*n1*n3 - 24*n2*n3 + 6*d*n2*n3 - 
      16*n3^2 + 4*d*n3^2 + 48*n4 - 18*d*n4 + d^2*n4 - 12*n1*n4 + 4*d*n1*n4 - 
      36*n2*n4 + 13*d*n2*n4 - 6*n1*n2*n4 - 6*n2^2*n4 - 32*n3*n4 + 
      12*d*n3*n4 - 4*n1*n3*n4 - 12*n2*n3*n4 - 8*n3^2*n4 + 12*n4^2 - 
      2*d*n4^2 - 6*n2*n4^2 - 8*n3*n4^2)*j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 1, 
      0, 0, 1, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 - 20*n4 + 6*d*n4 - 
      2*n2*n4 - 4*n3*n4 - 4*n4^2)*j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 0, 
      2, -1, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((24 - 14*d + 2*d^2 + 4*n2 - d*n2 + 8*n3 - 2*d*n3 + 20*n4 - 6*d*n4 + 
      2*n2*n4 + 4*n3*n4 + 4*n4^2)*j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 0, 
      2, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((24*n1 - 14*d*n1 + 2*d^2*n1 + 4*n1*n2 - d*n1*n2 + 48*n3 - 28*d*n3 + 
      4*d^2*n3 + 8*n1*n3 - 2*d*n1*n3 + 8*n2*n3 - 2*d*n2*n3 + 16*n3^2 - 
      4*d*n3^2 - 8*n4 + 6*d*n4 - d^2*n4 + 12*n1*n4 - 4*d*n1*n4 - 4*n2*n4 + 
      d*n2*n4 + 2*n1*n2*n4 + 40*n3*n4 - 12*d*n3*n4 + 4*n1*n3*n4 + 
      4*n2*n3*n4 + 8*n3^2*n4 - 4*n4^2 + 2*d*n4^2 - 2*n2*n4^2 + 8*n3*n4^2)*
     j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-48 + 28*d - 4*d^2 - 40*n2 + 18*d*n2 - 2*d^2*n2 + 16*n1*n2 - 4*d*n1*n2 + 
      48*n3 - 32*d*n3 + 5*d^2*n3 - 8*n1*n3 + 2*d*n1*n3 - 8*n2*n3 + 
      2*d*n2*n3 + 24*n3^2 - 6*d*n3^2 - 40*n4 + 12*d*n4 - 36*n2*n4 + 
      8*d*n2*n4 + 8*n1*n2*n4 + 48*n3*n4 - 16*d*n3*n4 - 4*n1*n3*n4 - 
      4*n2*n3*n4 + 12*n3^2*n4 - 8*n4^2 - 8*n2*n4^2 + 12*n3*n4^2)*
     j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((32 - 20*d + 3*d^2 + 8*n1 - 2*d*n1 + 8*n2 - 2*d*n2 + 8*n3 - 2*d*n3 + 
      24*n4 - 8*d*n4 + 4*n1*n4 + 4*n2*n4 + 4*n3*n4 + 4*n4^2)*
     j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 + 44*n4 - 42*d*n4 + 
      9*d^2*n4 + 4*n1*n4 - 2*d*n1*n4 + 18*n2*n4 - 8*d*n2*n4 + 2*n1*n2*n4 + 
      2*n2^2*n4 + 40*n3*n4 - 16*d*n3*n4 + 6*n2*n3*n4 + 8*n3^2*n4 + 28*n4^2 - 
      12*d*n4^2 + 4*n2*n4^2 + 12*n3*n4^2 + 4*n4^3)*j[p4, n1, n2, n3, 1 + n4, 
      0, 1, 0, 1, 0, 1, 1, 0, 1, 0])/(2*(-3 + d - n4)*
     (64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((48 - 40*d + 11*d^2 - d^3 - 8*n2 + 6*d*n2 - 
      d^2*n2 - 4*n1*n2 + d*n1*n2 - 4*n2^2 + d*n2^2 + 40*n3 - 22*d*n3 + 
      3*d^2*n3 + 8*n3^2 - 2*d*n3^2 + 64*n4 - 36*d*n4 + 5*d^2*n4 - 4*n2*n4 + 
      2*d*n2*n4 - 2*n1*n2*n4 - 2*n2^2*n4 + 36*n3*n4 - 10*d*n3*n4 + 
      4*n3^2*n4 + 28*n4^2 - 8*d*n4^2 + 8*n3*n4^2 + 4*n4^3)*
     j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((8 - 6*d + d^2 + 8*n1 - 2*d*n1 + 4*n2 - d*n2 + 4*n4 - 2*d*n4 + 4*n1*n4 + 
      2*n2*n4)*j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 2, 0, -1, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-8 + 6*d - d^2 - 8*n1 + 2*d*n1 - 4*n2 + d*n2 - 4*n4 + 2*d*n4 - 4*n1*n4 - 
      2*n2*n4)*j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 2, 0, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 - 20*n4 + 6*d*n4 - 
      2*n2*n4 - 4*n3*n4 - 4*n4^2)*j[p4, n1, n2, n3, 1 + n4, 0, 1, 0, 2, 0, 1, 
      0, -1, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   j[p4, n1, n2, n3, 1 + n4, 0, 2, -1, 0, 0, 1, 1, 0, 1, 1]/
    (2*(-3 + d - n4)) + ((24 - 14*d + 2*d^2 + 4*n2 - d*n2 + 8*n3 - 2*d*n3 + 
      20*n4 - 6*d*n4 + 2*n2*n4 + 4*n3*n4 + 4*n4^2)*j[p4, n1, n2, n3, 1 + n4, 
      0, 2, -1, 1, 0, 0, 1, 0, 1, 1])/(2*(-3 + d - n4)*
     (64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((16 - 8*d + d^2 - 8*n1 + 2*d*n1 + 8*n3 - 
      2*d*n3 + 16*n4 - 4*d*n4 - 4*n1*n4 + 4*n3*n4 + 4*n4^2)*
     j[p4, n1, n2, n3, 1 + n4, 0, 2, 0, 0, -1, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) - 
   j[p4, n1, n2, n3, 1 + n4, 0, 2, 0, 0, 0, 1, 1, -1, 1, 1]/
    (2*(-3 + d - n4)) + ((24 - 14*d + 2*d^2 + 4*n2 - d*n2 + 8*n3 - 2*d*n3 + 
      20*n4 - 6*d*n4 + 2*n2*n4 + 4*n3*n4 + 4*n4^2)*j[p4, n1, n2, n3, 1 + n4, 
      0, 2, 0, 1, -1, 1, 1, 0, 0, 1])/(2*(-3 + d - n4)*
     (64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 
      44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 
      12*n3*n4 + 4*n4^2)) + ((24 - 14*d + 2*d^2 + 4*n2 - d*n2 + 8*n3 - 
      2*d*n3 + 20*n4 - 6*d*n4 + 2*n2*n4 + 4*n3*n4 + 4*n4^2)*
     j[p4, n1, n2, n3, 1 + n4, 0, 2, 0, 1, -1, 1, 1, 0, 1, 0])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 - 20*n4 + 6*d*n4 - 
      2*n2*n4 - 4*n3*n4 - 4*n4^2)*j[p4, n1, n2, n3, 1 + n4, 0, 2, 0, 1, 0, 0, 
      1, -1, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((32 - 20*d + 3*d^2 + 8*n1 - 2*d*n1 + 8*n2 - 2*d*n2 + 8*n3 - 2*d*n3 + 
      56*n4 - 28*d*n4 + 3*d^2*n4 + 12*n1*n4 - 2*d*n1*n4 + 12*n2*n4 - 
      2*d*n2*n4 + 12*n3*n4 - 2*d*n3*n4 + 28*n4^2 - 8*d*n4^2 + 4*n1*n4^2 + 
      4*n2*n4^2 + 4*n3*n4^2 + 4*n4^3)*j[p4, n1, n2, n3, 2 + n4, 0, 0, -1, 1, 
      0, 1, 1, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-32 + 20*d - 3*d^2 - 8*n1 + 2*d*n1 - 8*n2 + 2*d*n2 - 8*n3 + 2*d*n3 - 
      56*n4 + 28*d*n4 - 3*d^2*n4 - 12*n1*n4 + 2*d*n1*n4 - 12*n2*n4 + 
      2*d*n2*n4 - 12*n3*n4 + 2*d*n3*n4 - 28*n4^2 + 8*d*n4^2 - 4*n1*n4^2 - 
      4*n2*n4^2 - 4*n3*n4^2 - 4*n4^3)*j[p4, n1, n2, n3, 2 + n4, 0, 0, 0, 1, 
      -1, 1, 1, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-32 + 20*d - 3*d^2 - 8*n1 + 2*d*n1 - 8*n2 + 2*d*n2 - 8*n3 + 2*d*n3 - 
      56*n4 + 28*d*n4 - 3*d^2*n4 - 12*n1*n4 + 2*d*n1*n4 - 12*n2*n4 + 
      2*d*n2*n4 - 12*n3*n4 + 2*d*n3*n4 - 28*n4^2 + 8*d*n4^2 - 4*n1*n4^2 - 
      4*n2*n4^2 - 4*n3*n4^2 - 4*n4^3)*j[p4, n1, n2, n3, 2 + n4, 0, 1, -1, 0, 
      0, 1, 1, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((24 - 14*d + 2*d^2 + 4*n2 - d*n2 + 8*n3 - 2*d*n3 + 44*n4 - 20*d*n4 + 
      2*d^2*n4 + 6*n2*n4 - d*n2*n4 + 12*n3*n4 - 2*d*n3*n4 + 24*n4^2 - 
      6*d*n4^2 + 2*n2*n4^2 + 4*n3*n4^2 + 4*n4^3)*j[p4, n1, n2, n3, 2 + n4, 0, 
      1, -1, 1, 0, 1, 1, 0, 1, 0])/(2*(3 - d + n4)*(64 - 48*d + 9*d^2 + 
      4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((32 - 20*d + 3*d^2 + 8*n1 - 2*d*n1 + 8*n2 - 2*d*n2 + 8*n3 - 2*d*n3 + 
      56*n4 - 28*d*n4 + 3*d^2*n4 + 12*n1*n4 - 2*d*n1*n4 + 12*n2*n4 - 
      2*d*n2*n4 + 12*n3*n4 - 2*d*n3*n4 + 28*n4^2 - 8*d*n4^2 + 4*n1*n4^2 + 
      4*n2*n4^2 + 4*n3*n4^2 + 4*n4^3)*j[p4, n1, n2, n3, 2 + n4, 0, 1, 0, 0, 
      -1, 1, 1, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-24 + 14*d - 2*d^2 - 4*n2 + d*n2 - 8*n3 + 2*d*n3 - 44*n4 + 20*d*n4 - 
      2*d^2*n4 - 6*n2*n4 + d*n2*n4 - 12*n3*n4 + 2*d*n3*n4 - 24*n4^2 + 
      6*d*n4^2 - 2*n2*n4^2 - 4*n3*n4^2 - 4*n4^3)*j[p4, n1, n2, n3, 2 + n4, 0, 
      1, 0, 1, -1, 1, 1, 0, 1, 0])/(2*(3 - d + n4)*(64 - 48*d + 9*d^2 + 
      4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-32*n3 + 20*d*n3 - 3*d^2*n3 - 8*n1*n3 + 2*d*n1*n3 - 8*n2*n3 + 
      2*d*n2*n3 - 8*n3^2 + 2*d*n3^2 - 24*n3*n4 + 8*d*n3*n4 - 4*n1*n3*n4 - 
      4*n2*n3*n4 - 4*n3^2*n4 - 4*n3*n4^2)*j[p4, n1, n2, 1 + n3, 1 + n4, 0, 1, 
      -1, 0, 0, 1, 1, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((32*n3 - 20*d*n3 + 3*d^2*n3 + 8*n1*n3 - 2*d*n1*n3 + 8*n2*n3 - 2*d*n2*n3 + 
      8*n3^2 - 2*d*n3^2 + 24*n3*n4 - 8*d*n3*n4 + 4*n1*n3*n4 + 4*n2*n3*n4 + 
      4*n3^2*n4 + 4*n3*n4^2)*j[p4, n1, n2, 1 + n3, 1 + n4, 0, 1, -1, 1, 0, 0, 
      1, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-32*n3 + 20*d*n3 - 3*d^2*n3 - 8*n1*n3 + 2*d*n1*n3 - 8*n2*n3 + 
      2*d*n2*n3 - 8*n3^2 + 2*d*n3^2 - 24*n3*n4 + 8*d*n3*n4 - 4*n1*n3*n4 - 
      4*n2*n3*n4 - 4*n3^2*n4 - 4*n3*n4^2)*j[p4, n1, n2, 1 + n3, 1 + n4, 0, 1, 
      -1, 1, 0, 1, 0, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-32*n3 + 20*d*n3 - 3*d^2*n3 - 8*n1*n3 + 2*d*n1*n3 - 8*n2*n3 + 
      2*d*n2*n3 - 8*n3^2 + 2*d*n3^2 - 24*n3*n4 + 8*d*n3*n4 - 4*n1*n3*n4 - 
      4*n2*n3*n4 - 4*n3^2*n4 - 4*n3*n4^2)*j[p4, n1, n2, 1 + n3, 1 + n4, 0, 1, 
      -1, 1, 0, 1, 1, 0, 0, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-32*n3 + 20*d*n3 - 3*d^2*n3 - 8*n1*n3 + 2*d*n1*n3 - 8*n2*n3 + 
      2*d*n2*n3 - 8*n3^2 + 2*d*n3^2 - 24*n3*n4 + 8*d*n3*n4 - 4*n1*n3*n4 - 
      4*n2*n3*n4 - 4*n3^2*n4 - 4*n3*n4^2)*j[p4, n1, n2, 1 + n3, 1 + n4, 0, 1, 
      0, 0, 0, 1, 1, -1, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((32*n3 - 20*d*n3 + 3*d^2*n3 + 8*n1*n3 - 2*d*n1*n3 + 8*n2*n3 - 2*d*n2*n3 + 
      8*n3^2 - 2*d*n3^2 + 24*n3*n4 - 8*d*n3*n4 + 4*n1*n3*n4 + 4*n2*n3*n4 + 
      4*n3^2*n4 + 4*n3*n4^2)*j[p4, n1, n2, 1 + n3, 1 + n4, 0, 1, 0, 0, 0, 1, 
      1, 0, 1, 1])/((-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-32*n3 + 20*d*n3 - 3*d^2*n3 - 8*n1*n3 + 2*d*n1*n3 - 8*n2*n3 + 
      2*d*n2*n3 - 8*n3^2 + 2*d*n3^2 - 24*n3*n4 + 8*d*n3*n4 - 4*n1*n3*n4 - 
      4*n2*n3*n4 - 4*n3^2*n4 - 4*n3*n4^2)*j[p4, n1, n2, 1 + n3, 1 + n4, 0, 1, 
      0, 1, 0, 0, 1, -1, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 
      2*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 
      6*n2*n3 + 8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((32*n3 - 20*d*n3 + 3*d^2*n3 + 8*n1*n3 - 2*d*n1*n3 + 8*n2*n3 - 2*d*n2*n3 + 
      8*n3^2 - 2*d*n3^2 + 24*n3*n4 - 8*d*n3*n4 + 4*n1*n3*n4 + 4*n2*n3*n4 + 
      4*n3^2*n4 + 4*n3*n4^2)*j[p4, n1, n2, 1 + n3, 1 + n4, 0, 1, 0, 1, 0, 1, 
      0, -1, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((32*n3 - 20*d*n3 + 3*d^2*n3 + 8*n1*n3 - 2*d*n1*n3 + 8*n2*n3 - 2*d*n2*n3 + 
      8*n3^2 - 2*d*n3^2 + 24*n3*n4 - 8*d*n3*n4 + 4*n1*n3*n4 + 4*n2*n3*n4 + 
      4*n3^2*n4 + 4*n3*n4^2)*j[p4, n1, n2, 1 + n3, 1 + n4, 0, 1, 0, 1, 0, 1, 
      1, 0, 0, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((8*n2 - 6*d*n2 + d^2*n2 + 8*n1*n2 - 2*d*n1*n2 + 4*n2^2 - d*n2^2 + 
      4*n2*n4 - 2*d*n2*n4 + 4*n1*n2*n4 + 2*n2^2*n4)*
     j[p4, n1, 1 + n2, -1 + n3, 1 + n4, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-72*n2 + 42*d*n2 - 6*d^2*n2 - 12*n2^2 + 3*d*n2^2 - 24*n2*n3 + 
      6*d*n2*n3 - 60*n2*n4 + 18*d*n2*n4 - 6*n2^2*n4 - 12*n2*n3*n4 - 
      12*n2*n4^2)*j[p4, n1, 1 + n2, -1 + n3, 1 + n4, 0, 1, 0, 1, 0, 0, 1, 0, 
      1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 
      8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 
      32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-8*n2 + 6*d*n2 - d^2*n2 - 8*n1*n2 + 2*d*n1*n2 - 4*n2^2 + d*n2^2 - 
      4*n2*n4 + 2*d*n2*n4 - 4*n1*n2*n4 - 2*n2^2*n4)*
     j[p4, n1, 1 + n2, n3, 1 + n4, 0, 1, -1, 0, 0, 1, 1, 0, 1, 1])/
    ((-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((80*n2 - 48*d*n2 + 7*d^2*n2 + 8*n1*n2 - 2*d*n1*n2 + 16*n2^2 - 4*d*n2^2 + 
      24*n2*n3 - 6*d*n2*n3 + 64*n2*n4 - 20*d*n2*n4 + 4*n1*n2*n4 + 8*n2^2*n4 + 
      12*n2*n3*n4 + 12*n2*n4^2)*j[p4, n1, 1 + n2, n3, 1 + n4, 0, 1, -1, 1, 0, 
      0, 1, 0, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-8*n2 + 6*d*n2 - d^2*n2 - 8*n1*n2 + 2*d*n1*n2 - 4*n2^2 + d*n2^2 - 
      4*n2*n4 + 2*d*n2*n4 - 4*n1*n2*n4 - 2*n2^2*n4)*
     j[p4, n1, 1 + n2, n3, 1 + n4, 0, 1, -1, 1, 0, 1, 1, 0, 0, 1])/
    ((-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-16*n2 + 8*d*n2 - d^2*n2 + 8*n1*n2 - 2*d*n1*n2 - 8*n2*n3 + 2*d*n2*n3 - 
      16*n2*n4 + 4*d*n2*n4 + 4*n1*n2*n4 - 4*n2*n3*n4 - 4*n2*n4^2)*
     j[p4, n1, 1 + n2, n3, 1 + n4, 0, 1, -1, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((8*n2 - 6*d*n2 + d^2*n2 + 8*n1*n2 - 2*d*n1*n2 + 4*n2^2 - d*n2^2 + 
      4*n2*n4 - 2*d*n2*n4 + 4*n1*n2*n4 + 2*n2^2*n4)*
     j[p4, n1, 1 + n2, n3, 1 + n4, 0, 1, 0, 0, 0, 1, 1, -1, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((16*n2 - 8*d*n2 + d^2*n2 - 8*n1*n2 + 2*d*n1*n2 + 8*n2*n3 - 2*d*n2*n3 + 
      16*n2*n4 - 4*d*n2*n4 - 4*n1*n2*n4 + 4*n2*n3*n4 + 4*n2*n4^2)*
     j[p4, n1, 1 + n2, n3, 1 + n4, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 20*n2 - 8*d*n2 + 
      2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 8*n3^2 + 32*n4 - 
      12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((-56*n2 + 34*d*n2 - 5*d^2*n2 - 8*n1*n2 + 2*d*n1*n2 - 12*n2^2 + 3*d*n2^2 - 
      16*n2*n3 + 4*d*n2*n3 - 44*n2*n4 + 14*d*n2*n4 - 4*n1*n2*n4 - 6*n2^2*n4 - 
      8*n2*n3*n4 - 8*n2*n4^2)*j[p4, n1, 1 + n2, n3, 1 + n4, 0, 1, 0, 1, 0, 0, 
      1, -1, 1, 1])/(2*(-3 + d - n4)*(64 - 48*d + 9*d^2 + 4*n1 - 2*d*n1 + 
      20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 + 44*n3 - 16*d*n3 + 6*n2*n3 + 
      8*n3^2 + 32*n4 - 12*d*n4 + 4*n2*n4 + 12*n3*n4 + 4*n4^2)) + 
   ((24*n1 - 14*d*n1 + 2*d^2*n1 + 4*n1*n2 - d*n1*n2 + 8*n1*n3 - 2*d*n1*n3 + 
      20*n1*n4 - 6*d*n1*n4 + 2*n1*n2*n4 + 4*n1*n3*n4 + 4*n1*n4^2)*
     j[p4, 1 + n1, -1 + n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - n4)*(-64 + 48*d - 9*d^2 - 4*n1 + 2*d*n1 - 20*n2 + 8*d*n2 - 
      2*n1*n2 - 2*n2^2 - 44*n3 + 16*d*n3 - 6*n2*n3 - 8*n3^2 - 32*n4 + 
      12*d*n4 - 4*n2*n4 - 12*n3*n4 - 4*n4^2)) + 
   ((-24*n1 + 14*d*n1 - 2*d^2*n1 - 4*n1*n2 + d*n1*n2 - 8*n1*n3 + 2*d*n1*n3 - 
      20*n1*n4 + 6*d*n1*n4 - 2*n1*n2*n4 - 4*n1*n3*n4 - 4*n1*n4^2)*
     j[p4, 1 + n1, n2, n3, 1 + n4, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(-64 + 48*d - 9*d^2 - 4*n1 + 2*d*n1 - 20*n2 + 8*d*n2 - 
      2*n1*n2 - 2*n2^2 - 44*n3 + 16*d*n3 - 6*n2*n3 - 8*n3^2 - 32*n4 + 
      12*d*n4 - 4*n2*n4 - 12*n3*n4 - 4*n4^2)) + 
   ((-24*n1 + 14*d*n1 - 2*d^2*n1 - 4*n1*n2 + d*n1*n2 - 8*n1*n3 + 2*d*n1*n3 - 
      20*n1*n4 + 6*d*n1*n4 - 2*n1*n2*n4 - 4*n1*n3*n4 - 4*n1*n4^2)*
     j[p4, 1 + n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1])/
    (2*(-3 + d - n4)*(-64 + 48*d - 9*d^2 - 4*n1 + 2*d*n1 - 20*n2 + 8*d*n2 - 
      2*n1*n2 - 2*n2^2 - 44*n3 + 16*d*n3 - 6*n2*n3 - 8*n3^2 - 32*n4 + 
      12*d*n4 - 4*n2*n4 - 12*n3*n4 - 4*n4^2)) + 
   ((24*n1 - 14*d*n1 + 2*d^2*n1 + 4*n1*n2 - d*n1*n2 + 8*n1*n3 - 2*d*n1*n3 + 
      20*n1*n4 - 6*d*n1*n4 + 2*n1*n2*n4 + 4*n1*n3*n4 + 4*n1*n4^2)*
     j[p4, 1 + n1, n2, n3, 1 + n4, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1])/
    (2*(-3 + d - n4)*(-64 + 48*d - 9*d^2 - 4*n1 + 2*d*n1 - 20*n2 + 8*d*n2 - 
      2*n1*n2 - 2*n2^2 - 44*n3 + 16*d*n3 - 6*n2*n3 - 8*n3^2 - 32*n4 + 
      12*d*n4 - 4*n2*n4 - 12*n3*n4 - 4*n4^2)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == -1 && n13 == 1 && n14 == 1 && 
    n6 == 1 && n7 == 0 && n8 == 1 && n9 == 0 && n5 != 0 -> 
  ((-10 + 4*d - 2*n2 - 2*n3 - 4*n4 - 19*n5 + 6*d*n5 - 3*n2*n5 - 3*n3*n5 - 
      6*n4*n5 - 11*n5^2 + 2*d*n5^2 - n2*n5^2 - n3*n5^2 - 2*n4*n5^2 - 2*n5^3)*
     j[p4, 0, -2 + n2, -1 + n3, n4, 3 + n5, 1, 0, 1, 0, 1, 1, -1, 1, 1])/
    (4*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 
      3*n4*n5 + n5^2)) + ((5*n4 - 2*d*n4 + n2*n4 + n3*n4 + 2*n4^2 + 7*n4*n5 - 
      2*d*n4*n5 + n2*n4*n5 + n3*n4*n5 + 2*n4^2*n5 + 2*n4*n5^2)*
     j[p4, 0, -2 + n2, -1 + n3, 1 + n4, 2 + n5, 1, 0, 1, 0, 1, 1, -1, 1, 1])/
    (4*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 
      3*n4*n5 + n5^2)) + ((20 - 13*d + 2*d^2 + 4*n2 - d*n2 + 8*n3 - 3*d*n3 + 
      2*n2*n3 + 2*n3^2 + 8*n4 - 2*d*n4 + 33*n5 - 17*d*n5 + 2*d^2*n5 + 
      5*n2*n5 - d*n2*n5 + 11*n3*n5 - 3*d*n3*n5 + 2*n2*n3*n5 + 2*n3^2*n5 + 
      10*n4*n5 - 2*d*n4*n5 + 15*n5^2 - 4*d*n5^2 + n2*n5^2 + 3*n3*n5^2 + 
      2*n4*n5^2 + 2*n5^3)*j[p4, 0, -2 + n2, n3, n4, 2 + n5, 1, 0, 1, 0, 1, 1, 
      -1, 1, 1])/(4*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 
      6*n5 - 2*d*n5 + 3*n4*n5 + n5^2)) + 
   ((-6 + d - 8*n5 + d*n5 - 2*n5^2)*j[p4, 0, -2 + n2, n3, n4, 2 + n5, 1, 0, 
      1, 0, 1, 1, 0, 1, 1])/(4*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((5 - 2*d + n2 + n3 + 2*n4 + 7*n5 - 2*d*n5 + n2*n5 + n3*n5 + 2*n4*n5 + 
      2*n5^2)*j[p4, 0, -2 + n2, n3, n4, 2 + n5, 1, 0, 2, 0, 1, 1, -1, 0, 1])/
    (4*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 
      3*n4*n5 + n5^2)) + ((10 - 4*d + 2*n2 + 2*n3 + 4*n4 + 19*n5 - 6*d*n5 + 
      3*n2*n5 + 3*n3*n5 + 6*n4*n5 + 11*n5^2 - 2*d*n5^2 + n2*n5^2 + n3*n5^2 + 
      2*n4*n5^2 + 2*n5^3)*j[p4, 0, -2 + n2, n3, n4, 3 + n5, 1, -1, 1, 0, 1, 
      1, -1, 1, 1])/(4*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 
      6*n5 - 2*d*n5 + 3*n4*n5 + n5^2)) + 
   ((10 - 4*d + 2*n2 + 2*n3 + 4*n4 + 19*n5 - 6*d*n5 + 3*n2*n5 + 3*n3*n5 + 
      6*n4*n5 + 11*n5^2 - 2*d*n5^2 + n2*n5^2 + n3*n5^2 + 2*n4*n5^2 + 2*n5^3)*
     j[p4, 0, -2 + n2, n3, n4, 3 + n5, 1, 0, 1, 0, 1, 1, -1, 0, 1])/
    (4*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 
      3*n4*n5 + n5^2)) + ((-10 + 4*d - 2*n2 - 2*n3 - 4*n4 - 19*n5 + 6*d*n5 - 
      3*n2*n5 - 3*n3*n5 - 6*n4*n5 - 11*n5^2 + 2*d*n5^2 - n2*n5^2 - n3*n5^2 - 
      2*n4*n5^2 - 2*n5^3)*j[p4, 0, -2 + n2, n3, n4, 3 + n5, 1, 0, 1, 0, 1, 1, 
      -1, 1, 0])/(4*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 
      6*n5 - 2*d*n5 + 3*n4*n5 + n5^2)) + 
   ((5*n4 - 2*d*n4 + n2*n4 + n3*n4 + 2*n4^2 + 7*n4*n5 - 2*d*n4*n5 + 
      n2*n4*n5 + n3*n4*n5 + 2*n4^2*n5 + 2*n4*n5^2)*j[p4, 0, -2 + n2, n3, 
      1 + n4, 1 + n5, 1, 0, 1, 0, 1, 1, -1, 1, 1])/
    (4*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 
      3*n4*n5 + n5^2)) + ((-5*n4 + 2*d*n4 - n2*n4 - n3*n4 - 2*n4^2 - 
      7*n4*n5 + 2*d*n4*n5 - n2*n4*n5 - n3*n4*n5 - 2*n4^2*n5 - 2*n4*n5^2)*
     j[p4, 0, -2 + n2, n3, 1 + n4, 2 + n5, 1, -1, 1, 0, 1, 1, -1, 1, 1])/
    (4*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 
      3*n4*n5 + n5^2)) + ((-5*n4 + 2*d*n4 - n2*n4 - n3*n4 - 2*n4^2 - 
      7*n4*n5 + 2*d*n4*n5 - n2*n4*n5 - n3*n4*n5 - 2*n4^2*n5 - 2*n4*n5^2)*
     j[p4, 0, -2 + n2, n3, 1 + n4, 2 + n5, 1, 0, 1, 0, 1, 1, -1, 1, 0])/
    (4*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 
      3*n4*n5 + n5^2)) + ((n3 + n3^2)*j[p4, 0, -2 + n2, 1 + n3, n4, 1 + n5, 
      1, 0, 1, 0, 1, 1, -1, 1, 1])/(2*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((4*n3 - d*n3 + 2*n3*n5)*j[p4, 0, -2 + n2, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 
      1, 1, 0, 1, 1])/(4*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((-2*n3 + d*n3 - n2*n3 - n3^2 - 3*n3*n5 + d*n3*n5 - n2*n3*n5 - n3^2*n5 - 
      n3*n5^2)*j[p4, 0, -2 + n2, 1 + n3, n4, 2 + n5, 1, -1, 1, 0, 1, 1, -1, 
      1, 1])/(2*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 
      2*d*n5 + 3*n4*n5 + n5^2)) + 
   ((5*n3 - 2*d*n3 + n2*n3 + n3^2 + 2*n3*n4 + 7*n3*n5 - 2*d*n3*n5 + 
      n2*n3*n5 + n3^2*n5 + 2*n3*n4*n5 + 2*n3*n5^2)*j[p4, 0, -2 + n2, 1 + n3, 
      n4, 2 + n5, 1, 0, 1, 0, 1, 1, -1, 0, 1])/
    (4*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 
      3*n4*n5 + n5^2)) + ((-10 + 4*d - 2*n2 - 2*n3 - 4*n4 - 19*n5 + 6*d*n5 - 
      3*n2*n5 - 3*n3*n5 - 6*n4*n5 - 11*n5^2 + 2*d*n5^2 - n2*n5^2 - n3*n5^2 - 
      2*n4*n5^2 - 2*n5^3)*j[p4, 0, -1 + n2, -1 + n3, -1 + n4, 3 + n5, 1, 0, 
      1, 0, 1, 1, -1, 1, 1])/(4*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 
      2*n4^2 + 6*n5 - 2*d*n5 + 3*n4*n5 + n5^2)) + 
   ((-5 + 2*d - n2 - n3 - 2*n4 - 7*n5 + 2*d*n5 - n2*n5 - n3*n5 - 2*n4*n5 - 
      2*n5^2)*j[p4, 0, -1 + n2, -1 + n3, n4, 2 + n5, 1, 0, 0, 0, 1, 1, -1, 2, 
      1])/(4*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 
      2*d*n5 + 3*n4*n5 + n5^2)) + 
   ((-10 + 9*d - 2*d^2 - 2*n2 + d*n2 - 2*n3 + d*n3 - 9*n4 + 4*d*n4 - n2*n4 - 
      n3*n4 - 2*n4^2 - 14*n5 + 11*d*n5 - 2*d^2*n5 - 2*n2*n5 + d*n2*n5 - 
      2*n3*n5 + d*n3*n5 - 11*n4*n5 + 4*d*n4*n5 - n2*n4*n5 - n3*n4*n5 - 
      2*n4^2*n5 - 4*n5^2 + 2*d*n5^2 - 2*n4*n5^2)*j[p4, 0, -1 + n2, -1 + n3, 
      n4, 2 + n5, 1, 0, 1, 0, 1, 1, -1, 1, 1])/
    (4*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 
      3*n4*n5 + n5^2)) + ((10 - 4*d + 2*n2 + 2*n3 + 4*n4 + 19*n5 - 6*d*n5 + 
      3*n2*n5 + 3*n3*n5 + 6*n4*n5 + 11*n5^2 - 2*d*n5^2 + n2*n5^2 + n3*n5^2 + 
      2*n4*n5^2 + 2*n5^3)*j[p4, 0, -1 + n2, -1 + n3, n4, 3 + n5, 0, 0, 1, 0, 
      1, 1, -1, 1, 1])/(4*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 
      6*n5 - 2*d*n5 + 3*n4*n5 + n5^2)) + 
   ((10 - 4*d + 2*n2 + 2*n3 + 4*n4 + 19*n5 - 6*d*n5 + 3*n2*n5 + 3*n3*n5 + 
      6*n4*n5 + 11*n5^2 - 2*d*n5^2 + n2*n5^2 + n3*n5^2 + 2*n4*n5^2 + 2*n5^3)*
     j[p4, 0, -1 + n2, -1 + n3, n4, 3 + n5, 1, -1, 1, 0, 1, 1, -1, 1, 1])/
    (4*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 
      3*n4*n5 + n5^2)) + ((4*n4 - d*n4 + 2*n4^2)*j[p4, 0, -1 + n2, -1 + n3, 
      1 + n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (4*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((5*n4 - 2*d*n4 + n2*n4 + n3*n4 + 2*n4^2 + 7*n4*n5 - 2*d*n4*n5 + 
      n2*n4*n5 + n3*n4*n5 + 2*n4^2*n5 + 2*n4*n5^2)*j[p4, 0, -1 + n2, -1 + n3, 
      1 + n4, 2 + n5, 0, 0, 1, 0, 1, 1, -1, 1, 1])/
    (4*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 
      3*n4*n5 + n5^2)) + ((-5*n4 + 2*d*n4 - n2*n4 - n3*n4 - 2*n4^2 - 
      7*n4*n5 + 2*d*n4*n5 - n2*n4*n5 - n3*n4*n5 - 2*n4^2*n5 - 2*n4*n5^2)*
     j[p4, 0, -1 + n2, -1 + n3, 1 + n4, 2 + n5, 1, -1, 1, 0, 1, 1, -1, 1, 1])/
    (4*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 
      3*n4*n5 + n5^2)) + ((-5*n4 + 2*d*n4 - n2*n4 - n3*n4 - 2*n4^2 - 
      7*n4*n5 + 2*d*n4*n5 - n2*n4*n5 - n3*n4*n5 - 2*n4^2*n5 - 2*n4*n5^2)*
     j[p4, 0, -1 + n2, -1 + n3, 1 + n4, 2 + n5, 1, 0, 0, 0, 1, 1, -1, 1, 1])/
    (4*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 
      3*n4*n5 + n5^2)) + ((-n3 - n3*n5)*j[p4, 0, -1 + n2, n3, -1 + n4, 
      2 + n5, 1, 0, 1, 0, 1, 1, -1, 1, 1])/(2*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((-6 + d - 8*n5 + d*n5 - 2*n5^2)*j[p4, 0, -1 + n2, n3, -1 + n4, 2 + n5, 1, 
      0, 1, 0, 1, 1, 0, 1, 1])/(4*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((10 - 4*d + 2*n2 + 2*n3 + 4*n4 + 19*n5 - 6*d*n5 + 3*n2*n5 + 3*n3*n5 + 
      6*n4*n5 + 11*n5^2 - 2*d*n5^2 + n2*n5^2 + n3*n5^2 + 2*n4*n5^2 + 2*n5^3)*
     j[p4, 0, -1 + n2, n3, -1 + n4, 3 + n5, 1, -1, 1, 0, 1, 1, -1, 1, 1])/
    (4*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 
      3*n4*n5 + n5^2)) + ((-10 + 4*d - 2*n2 - 2*n3 - 4*n4 - 19*n5 + 6*d*n5 - 
      3*n2*n5 - 3*n3*n5 - 6*n4*n5 - 11*n5^2 + 2*d*n5^2 - n2*n5^2 - n3*n5^2 - 
      2*n4*n5^2 - 2*n5^3)*j[p4, 0, -1 + n2, n3, -1 + n4, 3 + n5, 1, 0, 1, 0, 
      1, 1, -2, 1, 1])/(4*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 
      6*n5 - 2*d*n5 + 3*n4*n5 + n5^2)) - 
   (n3*j[p4, 0, -1 + n2, n3, n4, 1 + n5, 1, 0, 0, 0, 1, 1, -1, 2, 1])/
    (2*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((-6 + d - 2*n5)*j[p4, 0, -1 + n2, n3, n4, 1 + n5, 1, 0, 0, 0, 1, 1, 0, 2, 
      1])/(4*(-1 + n2)*(3 - d + n4 + n5)) + 
   j[p4, 0, -1 + n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, -1, 0, 2]/
    (2*(3 - d + n4 + n5)) + ((-8 + 3*d + 7*n2 - 3*d*n2 + n2^2 - 3*n3 + d*n3 + 
      n2*n3 - 2*n4 + 2*n2*n4 - n3*n4 - 3*n5 + 3*n2*n5)*
     j[p4, 0, -1 + n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, -1, 1, 1])/
    (2*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((2 - 4*n2 + d*n2 + 2*n3 - d*n3 + 2*n4 - d*n4 + 2*n3*n4 + d*n5 - 2*n2*n5)*
     j[p4, 0, -1 + n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (4*(-1 + n2)*(3 - d + n4 + n5)) + j[p4, 0, -1 + n2, n3, n4, 1 + n5, 1, 0, 
     2, 0, 1, 1, -1, 0, 1]/(2*(3 - d + n4 + n5)) + 
   ((4 - d + 2*n4)*j[p4, 0, -1 + n2, n3, n4, 1 + n5, 1, 0, 2, 0, 1, 1, 0, 0, 
      1])/(4*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((-2 + d - n2 - n3 - n5)*j[p4, 0, -1 + n2, n3, n4, 1 + n5, 2, 0, 0, 0, 1, 
      1, -1, 1, 1])/(2*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 
      2*d*n5 + 3*n4*n5 + n5^2)) + j[p4, 0, -1 + n2, n3, n4, 1 + n5, 2, 0, 1, 
     0, 1, 1, -1, 0, 1]/(2*(3 - d + n4 + n5)) + 
   j[p4, 0, -1 + n2, n3, n4, 1 + n5, 2, 0, 1, 0, 1, 1, -1, 1, 0]/
    (2*(3 - d + n4 + n5)) + ((n3 + n3*n5)*j[p4, 0, -1 + n2, n3, n4, 2 + n5, 
      0, 0, 1, 0, 1, 1, -1, 1, 1])/(2*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((6 - d + 8*n5 - d*n5 + 2*n5^2)*j[p4, 0, -1 + n2, n3, n4, 2 + n5, 0, 0, 1, 
      0, 1, 1, 0, 1, 1])/(4*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((5 - 2*d + n2 + n3 + 2*n4 + 7*n5 - 2*d*n5 + n2*n5 + n3*n5 + 2*n4*n5 + 
      2*n5^2)*j[p4, 0, -1 + n2, n3, n4, 2 + n5, 1, -1, 0, 0, 1, 1, -1, 2, 1])/
    (4*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 
      3*n4*n5 + n5^2)) + ((-10 + 4*d - 2*n2 - 6*n3 + 2*d*n3 - 2*n2*n3 - 
      2*n3^2 + n4 - 2*d*n4 + n2*n4 + n3*n4 + 2*n4^2 - 19*n5 + 6*d*n5 - 
      3*n2*n5 - 9*n3*n5 + 2*d*n3*n5 - 2*n2*n3*n5 - 2*n3^2*n5 + n4*n5 - 
      2*d*n4*n5 + n2*n4*n5 + n3*n4*n5 + 2*n4^2*n5 - 11*n5^2 + 2*d*n5^2 - 
      n2*n5^2 - 3*n3*n5^2 - 2*n5^3)*j[p4, 0, -1 + n2, n3, n4, 2 + n5, 1, -1, 
      1, 0, 1, 1, -1, 1, 1])/(4*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 
      2*n4^2 + 6*n5 - 2*d*n5 + 3*n4*n5 + n5^2)) + 
   ((6 - d + 8*n5 - d*n5 + 2*n5^2)*j[p4, 0, -1 + n2, n3, n4, 2 + n5, 1, -1, 
      1, 0, 1, 1, 0, 1, 1])/(4*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((-5 + 2*d - n2 - n3 - 2*n4 - 7*n5 + 2*d*n5 - n2*n5 - n3*n5 - 2*n4*n5 - 
      2*n5^2)*j[p4, 0, -1 + n2, n3, n4, 2 + n5, 1, -1, 2, 0, 1, 1, -1, 0, 1])/
    (4*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 
      3*n4*n5 + n5^2)) + ((5*n2 - 2*d*n2 + n2^2 - 10*n3 + 4*d*n3 - n2*n3 - 
      2*n3^2 + 2*n2*n4 - 4*n3*n4 + 7*n2*n5 - 2*d*n2*n5 + n2^2*n5 - 14*n3*n5 + 
      4*d*n3*n5 - n2*n3*n5 - 2*n3^2*n5 + 2*n2*n4*n5 - 4*n3*n4*n5 + 
      2*n2*n5^2 - 4*n3*n5^2)*j[p4, 0, -1 + n2, n3, n4, 2 + n5, 1, 0, 0, 0, 1, 
      1, -1, 1, 1])/(4*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 
      6*n5 - 2*d*n5 + 3*n4*n5 + n5^2)) + 
   ((10 - 4*d + 2*n2 + 2*n3 - n4 + 2*d*n4 - n2*n4 - n3*n4 - 2*n4^2 + 19*n5 - 
      6*d*n5 + 3*n2*n5 + 3*n3*n5 - n4*n5 + 2*d*n4*n5 - n2*n4*n5 - n3*n4*n5 - 
      2*n4^2*n5 + 11*n5^2 - 2*d*n5^2 + n2*n5^2 + n3*n5^2 + 2*n5^3)*
     j[p4, 0, -1 + n2, n3, n4, 2 + n5, 1, 0, 1, 0, 1, 1, -2, 1, 1])/
    (4*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 
      3*n4*n5 + n5^2)) + ((-15 + 6*d + 7*n2 - 4*d*n2 + 2*n2^2 - 8*n3 + 
      2*d*n3 + n2*n3 - n3^2 - 6*n4 + 4*n2*n4 - 2*n3*n4 - 21*n5 + 6*d*n5 + 
      11*n2*n5 - 4*d*n2*n5 + 2*n2^2*n5 - 10*n3*n5 + 2*d*n3*n5 + n2*n3*n5 - 
      n3^2*n5 - 6*n4*n5 + 4*n2*n4*n5 - 2*n3*n4*n5 - 6*n5^2 + 4*n2*n5^2 - 
      2*n3*n5^2)*j[p4, 0, -1 + n2, n3, n4, 2 + n5, 1, 0, 1, 0, 1, 1, -1, 0, 
      1])/(4*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 
      2*d*n5 + 3*n4*n5 + n5^2)) + ((-6 + d - 8*n5 + d*n5 - 2*n5^2)*
     j[p4, 0, -1 + n2, n3, n4, 2 + n5, 1, 0, 1, 0, 1, 1, -1, 1, 1])/
    (4*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((1 + n5)*j[p4, 0, -1 + n2, n3, n4, 2 + n5, 1, 0, 1, 0, 1, 1, -1, 2, 0])/
    (2*(-1 + n2)*(3 - d + n4 + n5)) + ((4 - d + 2*n4 + 4*n5 - d*n5 + 2*n4*n5)*
     j[p4, 0, -1 + n2, n3, n4, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (4*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((-4 + d - 2*n4 - 4*n5 + d*n5 - 2*n4*n5)*j[p4, 0, -1 + n2, n3, n4, 2 + n5, 
      1, 0, 1, 0, 1, 1, 0, 1, 0])/(4*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((-10 + 4*d - 2*n2 - 2*n3 - 4*n4 - 19*n5 + 6*d*n5 - 3*n2*n5 - 3*n3*n5 - 
      6*n4*n5 - 11*n5^2 + 2*d*n5^2 - n2*n5^2 - n3*n5^2 - 2*n4*n5^2 - 2*n5^3)*
     j[p4, 0, -1 + n2, n3, n4, 3 + n5, 0, -1, 1, 0, 1, 1, -1, 1, 1])/
    (4*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 
      3*n4*n5 + n5^2)) + ((-10 + 4*d - 2*n2 - 2*n3 - 4*n4 - 19*n5 + 6*d*n5 - 
      3*n2*n5 - 3*n3*n5 - 6*n4*n5 - 11*n5^2 + 2*d*n5^2 - n2*n5^2 - n3*n5^2 - 
      2*n4*n5^2 - 2*n5^3)*j[p4, 0, -1 + n2, n3, n4, 3 + n5, 1, -2, 1, 0, 1, 
      1, -1, 1, 1])/(4*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 
      6*n5 - 2*d*n5 + 3*n4*n5 + n5^2)) + 
   ((10 - 4*d + 2*n2 + 2*n3 + 4*n4 + 19*n5 - 6*d*n5 + 3*n2*n5 + 3*n3*n5 + 
      6*n4*n5 + 11*n5^2 - 2*d*n5^2 + n2*n5^2 + n3*n5^2 + 2*n4*n5^2 + 2*n5^3)*
     j[p4, 0, -1 + n2, n3, n4, 3 + n5, 1, -1, 1, 0, 1, 1, -2, 1, 1])/
    (4*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 
      3*n4*n5 + n5^2)) + ((-10 + 4*d - 2*n2 - 2*n3 - 4*n4 - 19*n5 + 6*d*n5 - 
      3*n2*n5 - 3*n3*n5 - 6*n4*n5 - 11*n5^2 + 2*d*n5^2 - n2*n5^2 - n3*n5^2 - 
      2*n4*n5^2 - 2*n5^3)*j[p4, 0, -1 + n2, n3, n4, 3 + n5, 1, -1, 1, 0, 1, 
      1, -1, 0, 1])/(4*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 
      6*n5 - 2*d*n5 + 3*n4*n5 + n5^2)) + 
   ((10 - 4*d + 2*n2 + 2*n3 + 4*n4 + 19*n5 - 6*d*n5 + 3*n2*n5 + 3*n3*n5 + 
      6*n4*n5 + 11*n5^2 - 2*d*n5^2 + n2*n5^2 + n3*n5^2 + 2*n4*n5^2 + 2*n5^3)*
     j[p4, 0, -1 + n2, n3, n4, 3 + n5, 1, -1, 1, 0, 1, 1, -1, 1, 0])/
    (4*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 
      3*n4*n5 + n5^2)) + ((4*n4 - d*n4 + 2*n4^2)*j[p4, 0, -1 + n2, n3, 
      1 + n4, n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (4*(-1 + n2)*(3 - d + n4 + n5)) + 
   (n3*n4*j[p4, 0, -1 + n2, n3, 1 + n4, 1 + n5, 0, 0, 1, 0, 1, 1, -1, 1, 1])/
    (2*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((6*n4 - d*n4 + 2*n4*n5)*j[p4, 0, -1 + n2, n3, 1 + n4, 1 + n5, 0, 0, 1, 0, 
      1, 1, 0, 1, 1])/(4*(-1 + n2)*(3 - d + n4 + n5)) - 
   (n4*j[p4, 0, -1 + n2, n3, 1 + n4, 1 + n5, 0, 0, 2, 0, 1, 1, -1, 1, 1])/
    (2*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((-5*n4 + 2*d*n4 - n2*n4 - n3*n4 - 2*n4^2 - 7*n4*n5 + 2*d*n4*n5 - 
      n2*n4*n5 - n3*n4*n5 - 2*n4^2*n5 - 2*n4*n5^2)*j[p4, 0, -1 + n2, n3, 
      1 + n4, 1 + n5, 1, -1, 1, 0, 1, 1, -1, 1, 1])/
    (4*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 
      3*n4*n5 + n5^2)) + ((-4*n4 + d*n4 - 2*n4^2)*j[p4, 0, -1 + n2, n3, 
      1 + n4, 1 + n5, 1, -1, 1, 0, 1, 1, 0, 1, 1])/
    (4*(-1 + n2)*(3 - d + n4 + n5)) - 
   (n3*n4*j[p4, 0, -1 + n2, n3, 1 + n4, 1 + n5, 1, 0, 0, 0, 1, 1, -1, 1, 1])/
    (2*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((-6*n4 + d*n4 - 2*n4*n5)*j[p4, 0, -1 + n2, n3, 1 + n4, 1 + n5, 1, 0, 0, 
      0, 1, 1, 0, 1, 1])/(4*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((5*n4 - 2*d*n4 + n2*n4 + n3*n4 + 2*n4^2 + 7*n4*n5 - 2*d*n4*n5 + 
      n2*n4*n5 + n3*n4*n5 + 2*n4^2*n5 + 2*n4*n5^2)*j[p4, 0, -1 + n2, n3, 
      1 + n4, 1 + n5, 1, 0, 1, 0, 1, 1, -2, 1, 1])/
    (4*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 
      3*n4*n5 + n5^2)) + ((4*n4 - d*n4 + 2*n4^2)*j[p4, 0, -1 + n2, n3, 
      1 + n4, 1 + n5, 1, 0, 1, 0, 1, 1, -1, 1, 1])/
    (4*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((-4*n4 + d*n4 - 2*n4^2)*j[p4, 0, -1 + n2, n3, 1 + n4, 1 + n5, 1, 0, 1, 0, 
      1, 1, 0, 1, 0])/(4*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((-5*n4 + 2*d*n4 - n2*n4 - n3*n4 - 2*n4^2 - 7*n4*n5 + 2*d*n4*n5 - 
      n2*n4*n5 - n3*n4*n5 - 2*n4^2*n5 - 2*n4*n5^2)*j[p4, 0, -1 + n2, n3, 
      1 + n4, 2 + n5, 0, -1, 1, 0, 1, 1, -1, 1, 1])/
    (4*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 
      3*n4*n5 + n5^2)) + ((5*n4 - 2*d*n4 + n2*n4 + n3*n4 + 2*n4^2 + 7*n4*n5 - 
      2*d*n4*n5 + n2*n4*n5 + n3*n4*n5 + 2*n4^2*n5 + 2*n4*n5^2)*
     j[p4, 0, -1 + n2, n3, 1 + n4, 2 + n5, 1, -2, 1, 0, 1, 1, -1, 1, 1])/
    (4*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 
      3*n4*n5 + n5^2)) + ((5*n4 - 2*d*n4 + n2*n4 + n3*n4 + 2*n4^2 + 7*n4*n5 - 
      2*d*n4*n5 + n2*n4*n5 + n3*n4*n5 + 2*n4^2*n5 + 2*n4*n5^2)*
     j[p4, 0, -1 + n2, n3, 1 + n4, 2 + n5, 1, -1, 0, 0, 1, 1, -1, 1, 1])/
    (4*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 
      3*n4*n5 + n5^2)) + ((-5*n4 + 2*d*n4 - n2*n4 - n3*n4 - 2*n4^2 - 
      7*n4*n5 + 2*d*n4*n5 - n2*n4*n5 - n3*n4*n5 - 2*n4^2*n5 - 2*n4*n5^2)*
     j[p4, 0, -1 + n2, n3, 1 + n4, 2 + n5, 1, -1, 1, 0, 1, 1, -2, 1, 1])/
    (4*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 
      3*n4*n5 + n5^2)) + ((5*n4 - 2*d*n4 + n2*n4 + n3*n4 + 2*n4^2 + 7*n4*n5 - 
      2*d*n4*n5 + n2*n4*n5 + n3*n4*n5 + 2*n4^2*n5 + 2*n4*n5^2)*
     j[p4, 0, -1 + n2, n3, 1 + n4, 2 + n5, 1, -1, 1, 0, 1, 1, -1, 1, 0])/
    (4*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 
      3*n4*n5 + n5^2)) + ((n3 + n3*n5)*j[p4, 0, -1 + n2, 1 + n3, -1 + n4, 
      2 + n5, 1, -1, 1, 0, 1, 1, -1, 1, 1])/(2*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((-n3 - n3*n5)*j[p4, 0, -1 + n2, 1 + n3, -1 + n4, 2 + n5, 1, 0, 1, 0, 1, 
      1, -2, 1, 1])/(2*(-1 + n2)*(3 - d + n4 + n5)) + 
   (n3*j[p4, 0, -1 + n2, 1 + n3, n4, 1 + n5, 1, -1, 0, 0, 1, 1, -1, 2, 1])/
    (2*(-1 + n2)*(3 - d + n4 + n5)) + ((-2*n3 + d*n3 - n2*n3 - n3^2 - n3*n5)*
     j[p4, 0, -1 + n2, 1 + n3, n4, 1 + n5, 1, -1, 1, 0, 1, 1, -1, 1, 1])/
    (2*(-1 + n2)*(3 - d + n4 + n5)) - 
   (n3*j[p4, 0, -1 + n2, 1 + n3, n4, 1 + n5, 1, -1, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-1 + n2)) + ((-n3 - 2*n3^2)*j[p4, 0, -1 + n2, 1 + n3, n4, 1 + n5, 1, 
      0, 0, 0, 1, 1, -1, 1, 1])/(2*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((-5*n3 + d*n3 - 2*n3*n5)*j[p4, 0, -1 + n2, 1 + n3, n4, 1 + n5, 1, 0, 0, 
      0, 1, 1, 0, 1, 1])/(2*(-1 + n2)*(3 - d + n4 + n5)) - 
   (n3*j[p4, 0, -1 + n2, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 0, 2, -2, 1, 1])/
    (2*(-1 + n2)*(3 - d + n4 + n5)) + 
   (n3*j[p4, 0, -1 + n2, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 0, 2, -1, 1, 1])/
    (2*(-1 + n2)*(3 - d + n4 + n5)) + ((2*n3 - d*n3 + n2*n3 + n3^2 + n3*n5)*
     j[p4, 0, -1 + n2, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, -2, 1, 1])/
    (2*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((-2*n3 + n2*n3 - n3^2)*j[p4, 0, -1 + n2, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 
      1, 1, -1, 0, 1])/(2*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((-n3 + d*n3 - n2*n3 - n3^2)*j[p4, 0, -1 + n2, 1 + n3, n4, 1 + n5, 1, 0, 
      1, 0, 1, 1, -1, 1, 1])/(2*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((n3*n4 - n3*n5)*j[p4, 0, -1 + n2, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 
      0, 0, 1])/(2*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((-n3 - n3*n5)*j[p4, 0, -1 + n2, 1 + n3, n4, 2 + n5, 0, -1, 1, 0, 1, 1, 
      -1, 1, 1])/(2*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((2*n3 - d*n3 + n2*n3 + n3^2 + 3*n3*n5 - d*n3*n5 + n2*n3*n5 + n3^2*n5 + 
      n3*n5^2)*j[p4, 0, -1 + n2, 1 + n3, n4, 2 + n5, 1, -2, 1, 0, 1, 1, -1, 
      1, 1])/(2*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 
      2*d*n5 + 3*n4*n5 + n5^2)) + 
   ((5*n3 - 2*d*n3 + n2*n3 + n3^2 + 2*n3*n4 + 7*n3*n5 - 2*d*n3*n5 + 
      n2*n3*n5 + n3^2*n5 + 2*n3*n4*n5 + 2*n3*n5^2)*j[p4, 0, -1 + n2, 1 + n3, 
      n4, 2 + n5, 1, -1, 0, 0, 1, 1, -1, 1, 1])/
    (2*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 
      3*n4*n5 + n5^2)) + ((-2*n3 + d*n3 - n2*n3 - n3^2 - 3*n3*n5 + d*n3*n5 - 
      n2*n3*n5 - n3^2*n5 - n3*n5^2)*j[p4, 0, -1 + n2, 1 + n3, n4, 2 + n5, 1, 
      -1, 1, 0, 1, 1, -2, 1, 1])/(2*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 
      3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 3*n4*n5 + n5^2)) + 
   ((-n3 - n3*n5)*j[p4, 0, -1 + n2, 1 + n3, n4, 2 + n5, 1, -1, 1, 0, 1, 1, 
      -1, 0, 1])/(2*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((n3 + n3*n5)*j[p4, 0, -1 + n2, 1 + n3, n4, 2 + n5, 1, -1, 1, 0, 1, 1, -1, 
      1, 0])/(2*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((5*n3 - 2*d*n3 + n2*n3 + n3^2 + 2*n3*n4 + 7*n3*n5 - 2*d*n3*n5 + 
      n2*n3*n5 + n3^2*n5 + 2*n3*n4*n5 + 2*n3*n5^2)*j[p4, 0, -1 + n2, 1 + n3, 
      n4, 2 + n5, 1, 0, 1, 0, 1, 1, -2, 0, 1])/
    (4*(-1 + n2)*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 
      3*n4*n5 + n5^2)) + ((-n3 - n3*n5)*j[p4, 0, -1 + n2, 1 + n3, n4, 2 + n5, 
      1, 0, 1, 0, 1, 1, -1, 0, 1])/(2*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((n3 + n3*n5)*j[p4, 0, -1 + n2, 1 + n3, n4, 2 + n5, 1, 0, 1, 0, 1, 1, -1, 
      1, 0])/(2*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((5 - 2*d + n2 + n3 + 2*n4 + 7*n5 - 2*d*n5 + n2*n5 + n3*n5 + 2*n4*n5 + 
      2*n5^2)*j[p4, 0, n2, -1 + n3, -1 + n4, 2 + n5, 1, 0, 1, 0, 1, 1, -1, 1, 
      1])/(2*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 
      3*n4*n5 + n5^2)) + ((-5 + 2*d - n2 - n3 - 2*n4 - 2*n5)*
     j[p4, 0, n2, -1 + n3, n4, 1 + n5, 0, 0, 1, 0, 1, 1, -1, 1, 2])/
    (2*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 3*n4*n5 + 
      n5^2)) + ((-5 + 2*d - n2 - n3 - 2*n4 - 2*n5)*j[p4, 0, n2, -1 + n3, n4, 
      1 + n5, 1, 0, 0, 0, 1, 1, -1, 1, 2])/
    (2*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 3*n4*n5 + 
      n5^2)) + ((-2 + d - n2 - n3 - n5)*j[p4, 0, n2, -1 + n3, n4, 1 + n5, 1, 
      0, 1, 0, 1, 1, -1, 0, 2])/(2*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 
      6*n5 - 2*d*n5 + 3*n4*n5 + n5^2)) + 
   ((-4 + d - n2 - n4 - 2*n5)*j[p4, 0, n2, -1 + n3, n4, 1 + n5, 1, 0, 1, 0, 
      1, 1, -1, 1, 1])/(2*(3 - d + n4 + n5)) + 
   ((-2 + d - 2*n4)*j[p4, 0, n2, -1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 
      1])/(4*(3 - d + n4 + n5)) + ((-5 + 2*d - n2 - n3 - 2*n4 - 2*n5)*
     j[p4, 0, n2, -1 + n3, n4, 1 + n5, 2, 0, 0, 0, 1, 1, -1, 1, 1])/
    (2*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 3*n4*n5 + 
      n5^2)) + ((-5 + 2*d - n2 - n3 - 2*n4 - 7*n5 + 2*d*n5 - n2*n5 - n3*n5 - 
      2*n4*n5 - 2*n5^2)*j[p4, 0, n2, -1 + n3, n4, 2 + n5, 0, 0, 1, 0, 1, 1, 
      -1, 1, 1])/(2*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 
      3*n4*n5 + n5^2)) + ((-5 + 2*d - n2 - n3 - 2*n4 - 7*n5 + 2*d*n5 - 
      n2*n5 - n3*n5 - 2*n4*n5 - 2*n5^2)*j[p4, 0, n2, -1 + n3, n4, 2 + n5, 1, 
      0, 0, 0, 1, 1, -1, 1, 1])/(4*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 
      6*n5 - 2*d*n5 + 3*n4*n5 + n5^2)) + 
   ((-5*n4 + 2*d*n4 - n2*n4 - n3*n4 - 2*n4^2 - 2*n4*n5)*
     j[p4, 0, n2, -1 + n3, 1 + n4, 1 + n5, 0, 0, 1, 0, 1, 1, -1, 1, 1])/
    (2*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 3*n4*n5 + 
      n5^2)) + ((5*n4 - 2*d*n4 + n2*n4 + n3*n4 + 2*n4^2 + 2*n4*n5)*
     j[p4, 0, n2, -1 + n3, 1 + n4, 1 + n5, 1, 0, 0, 0, 1, 1, -1, 1, 1])/
    (2*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 3*n4*n5 + 
      n5^2)) + ((5 - 2*d + n2 + n3 + 2*n4 + 2*n5)*j[p4, 0, n2, n3, -1 + n4, 
      1 + n5, 0, 0, 1, 0, 1, 1, -1, 1, 2])/
    (2*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 3*n4*n5 + 
      n5^2)) + ((5 - 2*d + n2 + n3 + 2*n4 + 2*n5)*j[p4, 0, n2, n3, -1 + n4, 
      1 + n5, 1, 0, 0, 0, 1, 1, -1, 1, 2])/
    (2*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 3*n4*n5 + 
      n5^2)) + ((5 - 2*d + n2 + n3 + 2*n4 + 2*n5)*j[p4, 0, n2, n3, -1 + n4, 
      1 + n5, 1, 0, 1, 0, 1, 1, -1, 0, 2])/
    (2*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 3*n4*n5 + 
      n5^2)) + ((5 - 2*d + n2 + n3 + 2*n4 + 2*n5)*j[p4, 0, n2, n3, -1 + n4, 
      1 + n5, 1, 0, 1, 0, 1, 1, -1, 1, 1])/(3 - d + 2*n4 + n5) + 
   ((5 - 2*d + n2 + n3 + 2*n4 + 2*n5)*j[p4, 0, n2, n3, -1 + n4, 1 + n5, 2, 0, 
      0, 0, 1, 1, -1, 1, 1])/(2*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 
      6*n5 - 2*d*n5 + 3*n4*n5 + n5^2)) + 
   ((5 - 2*d + n2 + n3 + 2*n4 + 2*n5)*j[p4, 0, n2, n3, -1 + n4, 1 + n5, 2, 0, 
      1, 0, 1, 1, -1, 0, 1])/(2*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 
      6*n5 - 2*d*n5 + 3*n4*n5 + n5^2)) + 
   ((5 - 2*d + n2 + n3 + 2*n4 + 2*n5)*j[p4, 0, n2, n3, -1 + n4, 1 + n5, 2, 0, 
      1, 0, 1, 1, -1, 1, 0])/(2*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 
      6*n5 - 2*d*n5 + 3*n4*n5 + n5^2)) + 
   ((5 - 2*d + n2 + n3 + 2*n4 + 7*n5 - 2*d*n5 + n2*n5 + n3*n5 + 2*n4*n5 + 
      2*n5^2)*j[p4, 0, n2, n3, -1 + n4, 2 + n5, 0, 0, 1, 0, 1, 1, -1, 1, 1])/
    (2*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 3*n4*n5 + 
      n5^2)) + ((-5 + 2*d - n2 - n3 - 2*n4 - 7*n5 + 2*d*n5 - n2*n5 - n3*n5 - 
      2*n4*n5 - 2*n5^2)*j[p4, 0, n2, n3, -1 + n4, 2 + n5, 1, -1, 1, 0, 1, 1, 
      -1, 1, 1])/(2*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 
      3*n4*n5 + n5^2)) + ((5 - 2*d + n2 + n3 + 2*n4 + 7*n5 - 2*d*n5 + n2*n5 + 
      n3*n5 + 2*n4*n5 + 2*n5^2)*j[p4, 0, n2, n3, -1 + n4, 2 + n5, 1, 0, 1, 0, 
      1, 1, -2, 1, 1])/(2*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 
      2*d*n5 + 3*n4*n5 + n5^2)) + 
   ((-5 + 2*d - n2 - n3 - 2*n4 - 7*n5 + 2*d*n5 - n2*n5 - n3*n5 - 2*n4*n5 - 
      2*n5^2)*j[p4, 0, n2, n3, -1 + n4, 2 + n5, 1, 0, 1, 0, 1, 1, -1, 0, 1])/
    (2*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 3*n4*n5 + 
      n5^2)) + ((5 - 2*d + n2 + n3 + 2*n4 + 7*n5 - 2*d*n5 + n2*n5 + n3*n5 + 
      2*n4*n5 + 2*n5^2)*j[p4, 0, n2, n3, -1 + n4, 2 + n5, 1, 0, 1, 0, 1, 1, 
      -1, 1, 0])/(2*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 
      3*n4*n5 + n5^2)) - j[p4, 0, n2, n3, n4, n5, 0, 0, 1, 0, 1, 1, -1, 1, 2]/
    (2*(3 - d + n4 + n5)) - j[p4, 0, n2, n3, n4, n5, 1, 0, 0, 0, 1, 1, -1, 1, 
     2]/(2*(3 - d + n4 + n5)) - j[p4, 0, n2, n3, n4, n5, 1, 0, 1, 0, 1, 1, 
     -1, 0, 2]/(2*(3 - d + n4 + n5)) - 
   j[p4, 0, n2, n3, n4, n5, 2, 0, 0, 0, 1, 1, -1, 1, 1]/
    (2*(3 - d + n4 + n5)) - j[p4, 0, n2, n3, n4, n5, 2, 0, 1, 0, 1, 1, -1, 0, 
     1]/(2*(3 - d + n4 + n5)) - j[p4, 0, n2, n3, n4, n5, 2, 0, 1, 0, 1, 1, 
     -1, 1, 0]/(2*(3 - d + n4 + n5)) + 
   ((-5 + 2*d - n2 - n3 + 3*n4 - 2*d*n4 + n2*n4 + n3*n4 + 2*n4^2 - 5*n5 + 
      d*n5 - n5^2)*j[p4, 0, n2, n3, n4, 1 + n5, 0, 0, 1, 0, 1, 1, -1, 1, 1])/
    (2*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 3*n4*n5 + 
      n5^2)) - j[p4, 0, n2, n3, n4, 1 + n5, 1, -1, 1, 0, 1, 1, -1, 0, 2]/
    (2*(3 - d + n4 + n5)) + j[p4, 0, n2, n3, n4, 1 + n5, 1, -1, 1, 0, 1, 1, 
     0, 1, 1]/2 - j[p4, 0, n2, n3, n4, 1 + n5, 1, -1, 2, 0, 1, 1, -1, 0, 1]/
    (2*(3 - d + n4 + n5)) + ((5 - 2*d + 4*n2 - d*n2 - 2*n3 + d*n3 - 3*n4 + 
      2*d*n4 + n2*n4 - 3*n3*n4 - 2*n4^2 + 2*n5 + n2*n5 - n3*n5 - 2*n4*n5)*
     j[p4, 0, n2, n3, n4, 1 + n5, 1, 0, 0, 0, 1, 1, -1, 1, 1])/
    (2*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 3*n4*n5 + 
      n5^2)) + ((-2 + n4 - n5)*j[p4, 0, n2, n3, n4, 1 + n5, 1, 0, 0, 0, 1, 1, 
      0, 1, 1])/(2*(3 - d + n4 + n5)) + 
   j[p4, 0, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 0, 2, -2, 1, 1]/
    (2*(3 - d + n4 + n5)) - j[p4, 0, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 0, 2, 
     -1, 1, 1]/(2*(3 - d + n4 + n5)) + 
   j[p4, 0, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, -2, 0, 2]/
    (2*(3 - d + n4 + n5)) + ((-1 + 2*n2 + n5)*j[p4, 0, n2, n3, n4, 1 + n5, 1, 
      0, 1, 0, 1, 1, -1, 0, 1])/(2*(3 - d + n4 + n5)) + 
   ((-5 + 2*d - n2 - n3 + 3*n4 - 2*d*n4 + n2*n4 + n3*n4 + 2*n4^2 - 5*n5 + 
      d*n5 - n5^2)*j[p4, 0, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, -1, 1, 0])/
    (2*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 3*n4*n5 + 
      n5^2)) + ((1 - d + n2 + n3)*j[p4, 0, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 
      1, -1, 1, 1])/(2*(3 - d + n4 + n5)) + 
   ((3 - d + 2*n4)*j[p4, 0, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(3 - d + n4 + n5)) + ((5 - 2*d + n2 + n3 + 2*n4 + 2*n5)*
     j[p4, 0, n2, n3, n4, 1 + n5, 2, -1, 0, 0, 1, 1, -1, 1, 1])/
    (2*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 3*n4*n5 + 
      n5^2)) + ((-5 + 2*d - n2 - n3 - 2*n4 - 2*n5)*j[p4, 0, n2, n3, n4, 
      1 + n5, 2, 0, 0, 0, 1, 1, -2, 1, 1])/
    (2*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 3*n4*n5 + 
      n5^2)) + ((-5 + 2*d - n2 - n3 - 2*n4 - 7*n5 + 2*d*n5 - n2*n5 - n3*n5 - 
      2*n4*n5 - 2*n5^2)*j[p4, 0, n2, n3, n4, 2 + n5, 1, -1, 1, 0, 1, 1, -1, 
      0, 1])/(2*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 2*d*n5 + 
      3*n4*n5 + n5^2)) + ((-5 + 2*d - n2 - n3 - 2*n4 - 7*n5 + 2*d*n5 - 
      n2*n5 - n3*n5 - 2*n4*n5 - 2*n5^2)*j[p4, 0, n2, n3, n4, 2 + n5, 1, 0, 0, 
      0, 1, 1, -2, 1, 1])/(4*(9 - 6*d + d^2 + 9*n4 - 3*d*n4 + 2*n4^2 + 6*n5 - 
      2*d*n5 + 3*n4*n5 + n5^2)) - 
   (n4*j[p4, 0, n2, n3, 1 + n4, n5, 0, 0, 1, 0, 1, 1, -1, 1, 1])/
    (2*(3 - d + n4 + n5)) + (n4*j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, 0, 0, 1, 
      1, -1, 1, 1])/(2*(3 - d + n4 + n5)) - 
   (n4*j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, 1, 0, 1, 1, -1, 1, 0])/
    (2*(3 - d + n4 + n5)) - (n4*j[p4, 0, n2, n3, 1 + n4, 1 + n5, 0, -1, 1, 0, 
      1, 1, -1, 1, 1])/(2*(3 - d + n4 + n5)) - 
   (n4*j[p4, 0, n2, n3, 1 + n4, 1 + n5, 0, 0, 1, 0, 1, 1, -1, 1, 1])/
    (2*(3 - d + n4 + n5)) + (n4*j[p4, 0, n2, n3, 1 + n4, 1 + n5, 1, -1, 0, 0, 
      1, 1, -1, 1, 1])/(2*(3 - d + n4 + n5)) + 
   (n4*j[p4, 0, n2, n3, 1 + n4, 1 + n5, 1, -1, 1, 0, 1, 1, -1, 1, 0])/
    (2*(3 - d + n4 + n5)) + (n4*j[p4, 0, n2, n3, 1 + n4, 1 + n5, 1, 0, 0, 0, 
      1, 1, -1, 1, 1])/(2*(3 - d + n4 + n5)) + 
   (n3*j[p4, 0, n2, 1 + n3, n4, 1 + n5, 1, -1, 0, 0, 1, 1, -1, 1, 1])/
    (3 - d + n4 + n5) - (n3*j[p4, 0, n2, 1 + n3, n4, 1 + n5, 1, -1, 1, 0, 1, 
      1, -1, 0, 1])/(3 - d + n4 + n5) - 
   (n3*j[p4, 0, n2, 1 + n3, n4, 1 + n5, 1, 0, 0, 0, 1, 1, -2, 1, 1])/
    (2*(3 - d + n4 + n5)) + (n3*j[p4, 0, n2, 1 + n3, n4, 1 + n5, 1, 0, 0, 0, 
      1, 1, -1, 1, 1])/(2*(3 - d + n4 + n5)) + 
   (n3*j[p4, 0, n2, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, -2, 0, 1])/
    (2*(3 - d + n4 + n5)) - (n3*j[p4, 0, n2, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 
      1, 1, -1, 0, 1])/(2*(3 - d + n4 + n5)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n6 == 1 && n7 == 0 && n8 == 1 && n9 == 0 && n5 != 0 -> 
  ((-8 + 2*d - 4*n4 - 16*n5 + 3*d*n5 - 6*n4*n5 - 10*n5^2 + d*n5^2 - 
      2*n4*n5^2 - 2*n5^3)*j[p4, 0, -2 + n2, -1 + n3, n4, 3 + n5, 1, 0, 1, 0, 
      1, 1, 0, 1, 1])/(4*(-1 + n2)*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((10*n4 - 3*d*n4 + 6*n4^2 + 14*n4*n5 - 3*d*n4*n5 + 6*n4^2*n5 + 4*n4*n5^2)*
     j[p4, 0, -2 + n2, -1 + n3, 1 + n4, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (4*(-1 + n2)*(3 - d + n4 + n5)*(3 - d + 2*n4 + n5)) + 
   ((16 - 8*d + d^2 + 8*n3 - 2*d*n3 + 8*n4 - 2*d*n4 + 4*n3*n4 + 28*n5 - 
      11*d*n5 + d^2*n5 + 12*n3*n5 - 2*d*n3*n5 + 10*n4*n5 - 2*d*n4*n5 + 
      4*n3*n4*n5 + 14*n5^2 - 3*d*n5^2 + 4*n3*n5^2 + 2*n4*n5^2 + 2*n5^3)*
     j[p4, 0, -2 + n2, n3, n4, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (4*(-1 + n2)*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((4 - d + 2*n4 + 6*n5 - d*n5 + 2*n4*n5 + 2*n5^2)*
     j[p4, 0, -2 + n2, n3, n4, 2 + n5, 1, 0, 2, 0, 1, 1, 0, 0, 1])/
    (4*(-1 + n2)*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((8 - 2*d + 4*n4 + 16*n5 - 3*d*n5 + 6*n4*n5 + 10*n5^2 - d*n5^2 + 
      2*n4*n5^2 + 2*n5^3)*j[p4, 0, -2 + n2, n3, n4, 3 + n5, 1, -1, 1, 0, 1, 
      1, 0, 1, 1])/(4*(-1 + n2)*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((8 - 2*d + 4*n4 + 16*n5 - 3*d*n5 + 6*n4*n5 + 10*n5^2 - d*n5^2 + 
      2*n4*n5^2 + 2*n5^3)*j[p4, 0, -2 + n2, n3, n4, 3 + n5, 1, 0, 1, 0, 1, 1, 
      0, 0, 1])/(4*(-1 + n2)*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-8 + 2*d - 4*n4 - 16*n5 + 3*d*n5 - 6*n4*n5 - 10*n5^2 + d*n5^2 - 
      2*n4*n5^2 - 2*n5^3)*j[p4, 0, -2 + n2, n3, n4, 3 + n5, 1, 0, 1, 0, 1, 1, 
      0, 1, 0])/(4*(-1 + n2)*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((10*n4 - 3*d*n4 - 6*n3*n4 + 2*d*n3*n4 + 6*n4^2 - 4*n3*n4^2 + 14*n4*n5 - 
      3*d*n4*n5 - 2*n3*n4*n5 + 6*n4^2*n5 + 4*n4*n5^2)*
     j[p4, 0, -2 + n2, n3, 1 + n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (4*(-1 + n2)*(3 - d + n4 + n5)*(3 - d + 2*n4 + n5)) + 
   ((-10*n4 + 3*d*n4 - 6*n4^2 - 14*n4*n5 + 3*d*n4*n5 - 6*n4^2*n5 - 4*n4*n5^2)*
     j[p4, 0, -2 + n2, n3, 1 + n4, 2 + n5, 1, -1, 1, 0, 1, 1, 0, 1, 1])/
    (4*(-1 + n2)*(3 - d + n4 + n5)*(3 - d + 2*n4 + n5)) + 
   ((-4*n4 + d*n4 - 2*n4^2 - 6*n4*n5 + d*n4*n5 - 2*n4^2*n5 - 2*n4*n5^2)*
     j[p4, 0, -2 + n2, n3, 1 + n4, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 0])/
    (4*(-1 + n2)*(3 - d + n4 + n5)*(3 - d + 2*n4 + n5)) + 
   ((-4*n3 + d*n3 - 2*n3*n4 - 6*n3*n5 + d*n3*n5 - 2*n3*n4*n5 - 2*n3*n5^2)*
     j[p4, 0, -2 + n2, 1 + n3, n4, 2 + n5, 1, -1, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-1 + n2)*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((4*n3 - d*n3 + 2*n3*n4 + 6*n3*n5 - d*n3*n5 + 2*n3*n4*n5 + 2*n3*n5^2)*
     j[p4, 0, -2 + n2, 1 + n3, n4, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (4*(-1 + n2)*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) - 
   (n3*n4*j[p4, 0, -2 + n2, 1 + n3, 1 + n4, n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-1 + n2)*(3 - d + n4 + n5)) + 
   (n3*n4*j[p4, 0, -2 + n2, 1 + n3, 1 + n4, 1 + n5, 1, -1, 1, 0, 1, 1, 0, 1, 
      1])/(2*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((-8 + 2*d - 4*n4 - 16*n5 + 3*d*n5 - 6*n4*n5 - 10*n5^2 + d*n5^2 - 
      2*n4*n5^2 - 2*n5^3)*j[p4, 0, -1 + n2, -1 + n3, -1 + n4, 3 + n5, 1, 0, 
      1, 0, 1, 1, 0, 1, 1])/(4*(-1 + n2)*(-3 + d - 2*n4 - n5)*
     (-3 + d - n4 - n5)) + ((-4 + d - 2*n4 - 6*n5 + d*n5 - 2*n4*n5 - 2*n5^2)*
     j[p4, 0, -1 + n2, -1 + n3, n4, 2 + n5, 1, 0, 0, 0, 1, 1, 0, 2, 1])/
    (4*(-1 + n2)*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-8 + 6*d - d^2 - 2*n4 + d*n4 + 2*n4^2 - 12*n5 + 8*d*n5 - d^2*n5 - 
      2*n4*n5 + d*n4*n5 + 2*n4^2*n5 - 4*n5^2 + 2*d*n5^2)*
     j[p4, 0, -1 + n2, -1 + n3, n4, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (4*(-1 + n2)*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((8 - 2*d + 4*n4 + 16*n5 - 3*d*n5 + 6*n4*n5 + 10*n5^2 - d*n5^2 + 
      2*n4*n5^2 + 2*n5^3)*j[p4, 0, -1 + n2, -1 + n3, n4, 3 + n5, 0, 0, 1, 0, 
      1, 1, 0, 1, 1])/(4*(-1 + n2)*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((8 - 2*d + 4*n4 + 16*n5 - 3*d*n5 + 6*n4*n5 + 10*n5^2 - d*n5^2 + 
      2*n4*n5^2 + 2*n5^3)*j[p4, 0, -1 + n2, -1 + n3, n4, 3 + n5, 1, -1, 1, 0, 
      1, 1, 0, 1, 1])/(4*(-1 + n2)*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   (n4*j[p4, 0, -1 + n2, -1 + n3, 1 + n4, 1 + n5, 1, 0, 0, 0, 1, 1, 0, 2, 1])/
    (2*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((-4*n4 + d*n4 - 2*n4^2)*j[p4, 0, -1 + n2, -1 + n3, 1 + n4, 1 + n5, 1, 0, 
      1, 0, 1, 1, 0, 1, 1])/(2*(-1 + n2)*(-3 + d - n4 - n5)) + 
   ((-2*n4 + d*n4 - 2*n4^2 - 2*n4*n5 + d*n4*n5 - 2*n4^2*n5)*
     j[p4, 0, -1 + n2, -1 + n3, 1 + n4, 2 + n5, 0, 0, 1, 0, 1, 1, 0, 1, 1])/
    (4*(-1 + n2)*(3 - d + n4 + n5)*(3 - d + 2*n4 + n5)) + 
   ((-10*n4 + 3*d*n4 - 6*n4^2 - 14*n4*n5 + 3*d*n4*n5 - 6*n4^2*n5 - 4*n4*n5^2)*
     j[p4, 0, -1 + n2, -1 + n3, 1 + n4, 2 + n5, 1, -1, 1, 0, 1, 1, 0, 1, 1])/
    (4*(-1 + n2)*(3 - d + n4 + n5)*(3 - d + 2*n4 + n5)) + 
   ((-4*n4 + d*n4 - 2*n4^2 - 6*n4*n5 + d*n4*n5 - 2*n4^2*n5 - 2*n4*n5^2)*
     j[p4, 0, -1 + n2, -1 + n3, 1 + n4, 2 + n5, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (4*(-1 + n2)*(3 - d + n4 + n5)*(3 - d + 2*n4 + n5)) + 
   ((-n4 - n4^2)*j[p4, 0, -1 + n2, -1 + n3, 2 + n4, 1 + n5, 0, 0, 1, 0, 1, 1, 
      0, 1, 1])/(2*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((n4 + n4^2)*j[p4, 0, -1 + n2, -1 + n3, 2 + n4, 1 + n5, 1, 0, 0, 0, 1, 1, 
      0, 1, 1])/(2*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((8 - 2*d + 4*n4 + 16*n5 - 3*d*n5 + 6*n4*n5 + 10*n5^2 - d*n5^2 + 
      2*n4*n5^2 + 2*n5^3)*j[p4, 0, -1 + n2, n3, -1 + n4, 3 + n5, 1, -1, 1, 0, 
      1, 1, 0, 1, 1])/(4*(-1 + n2)*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-8 + 2*d - 4*n4 - 16*n5 + 3*d*n5 - 6*n4*n5 - 10*n5^2 + d*n5^2 - 
      2*n4*n5^2 - 2*n5^3)*j[p4, 0, -1 + n2, n3, -1 + n4, 3 + n5, 1, 0, 1, 0, 
      1, 1, -1, 1, 1])/(4*(-1 + n2)*(-3 + d - 2*n4 - n5)*
     (-3 + d - n4 - n5)) - j[p4, 0, -1 + n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 
     1, 0, 0, 2]/(2*(-3 + d - n4 - n5)) + 
   ((4 - d - 4*n2 + d*n2 - 2*n4 + d*n4 - 2*n2*n4 - n3*n4 + 2*n5 - 2*n2*n5 - 
      2*n4*n5)*j[p4, 0, -1 + n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-1 + n2)*(-3 + d - n4 - n5)) + 
   (n4*j[p4, 0, -1 + n2, n3, n4, 1 + n5, 1, 0, 2, 0, 1, 1, 0, 0, 1])/
    (2*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((-1 - n5)*j[p4, 0, -1 + n2, n3, n4, 1 + n5, 2, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5)*(3 - d + 2*n4 + n5)) - 
   j[p4, 0, -1 + n2, n3, n4, 1 + n5, 2, 0, 1, 0, 1, 1, 0, 0, 1]/
    (2*(-3 + d - n4 - n5)) - j[p4, 0, -1 + n2, n3, n4, 1 + n5, 2, 0, 1, 0, 1, 
     1, 0, 1, 0]/(2*(-3 + d - n4 - n5)) + 
   ((4 - d + 2*n4 + 6*n5 - d*n5 + 2*n4*n5 + 2*n5^2)*
     j[p4, 0, -1 + n2, n3, n4, 2 + n5, 1, -1, 0, 0, 1, 1, 0, 2, 1])/
    (4*(-1 + n2)*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-8 + 2*d - 8*n3 + 2*d*n3 - 6*n4 + d*n4 - 4*n3*n4 - 2*n4^2 - 16*n5 + 
      3*d*n5 - 12*n3*n5 + 2*d*n3*n5 - 8*n4*n5 + d*n4*n5 - 4*n3*n4*n5 - 
      2*n4^2*n5 - 10*n5^2 + d*n5^2 - 4*n3*n5^2 - 2*n4*n5^2 - 2*n5^3)*
     j[p4, 0, -1 + n2, n3, n4, 2 + n5, 1, -1, 1, 0, 1, 1, 0, 1, 1])/
    (4*(-1 + n2)*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-4 + d - 2*n4 - 6*n5 + d*n5 - 2*n4*n5 - 2*n5^2)*
     j[p4, 0, -1 + n2, n3, n4, 2 + n5, 1, -1, 2, 0, 1, 1, 0, 0, 1])/
    (4*(-1 + n2)*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((4*n2 - d*n2 - 8*n3 + 2*d*n3 + 2*n2*n4 - 4*n3*n4 + 6*n2*n5 - d*n2*n5 - 
      12*n3*n5 + 2*d*n3*n5 + 2*n2*n4*n5 - 4*n3*n4*n5 + 2*n2*n5^2 - 4*n3*n5^2)*
     j[p4, 0, -1 + n2, n3, n4, 2 + n5, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (4*(-1 + n2)*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((8 - 2*d + 6*n4 - d*n4 + 2*n4^2 + 16*n5 - 3*d*n5 + 8*n4*n5 - d*n4*n5 + 
      2*n4^2*n5 + 10*n5^2 - d*n5^2 + 2*n4*n5^2 + 2*n5^3)*
     j[p4, 0, -1 + n2, n3, n4, 2 + n5, 1, 0, 1, 0, 1, 1, -1, 1, 1])/
    (4*(-1 + n2)*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-6 + d + 2*n2 - 4*n3 + d*n3 + 4*n4 - 2*d*n4 - 2*n3*n4 + 4*n4^2 - 10*n5 + 
      d*n5 + 4*n2*n5 - 6*n3*n5 + d*n3*n5 + 6*n4*n5 - 2*d*n4*n5 - 2*n3*n4*n5 + 
      4*n4^2*n5 - 4*n5^2 + 2*n2*n5^2 - 2*n3*n5^2 + 2*n4*n5^2)*
     j[p4, 0, -1 + n2, n3, n4, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (4*(-1 + n2)*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((1 - n2 + n4 + n5 - n2*n5 + n4*n5)*j[p4, 0, -1 + n2, n3, n4, 2 + n5, 1, 
      0, 1, 0, 1, 1, 0, 1, 0])/(2*(-1 + n2)*(-3 + d - n4 - n5)) + 
   ((-8 + 2*d - 4*n4 - 16*n5 + 3*d*n5 - 6*n4*n5 - 10*n5^2 + d*n5^2 - 
      2*n4*n5^2 - 2*n5^3)*j[p4, 0, -1 + n2, n3, n4, 3 + n5, 0, -1, 1, 0, 1, 
      1, 0, 1, 1])/(4*(-1 + n2)*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-8 + 2*d - 4*n4 - 16*n5 + 3*d*n5 - 6*n4*n5 - 10*n5^2 + d*n5^2 - 
      2*n4*n5^2 - 2*n5^3)*j[p4, 0, -1 + n2, n3, n4, 3 + n5, 1, -2, 1, 0, 1, 
      1, 0, 1, 1])/(4*(-1 + n2)*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((8 - 2*d + 4*n4 + 16*n5 - 3*d*n5 + 6*n4*n5 + 10*n5^2 - d*n5^2 + 
      2*n4*n5^2 + 2*n5^3)*j[p4, 0, -1 + n2, n3, n4, 3 + n5, 1, -1, 1, 0, 1, 
      1, -1, 1, 1])/(4*(-1 + n2)*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-8 + 2*d - 4*n4 - 16*n5 + 3*d*n5 - 6*n4*n5 - 10*n5^2 + d*n5^2 - 
      2*n4*n5^2 - 2*n5^3)*j[p4, 0, -1 + n2, n3, n4, 3 + n5, 1, -1, 1, 0, 1, 
      1, 0, 0, 1])/(4*(-1 + n2)*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((8 - 2*d + 4*n4 + 16*n5 - 3*d*n5 + 6*n4*n5 + 10*n5^2 - d*n5^2 + 
      2*n4*n5^2 + 2*n5^3)*j[p4, 0, -1 + n2, n3, n4, 3 + n5, 1, -1, 1, 0, 1, 
      1, 0, 1, 0])/(4*(-1 + n2)*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   (n4*j[p4, 0, -1 + n2, n3, 1 + n4, n5, 1, 0, 0, 0, 1, 1, 0, 2, 1])/
    (2*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((-4*n4 + d*n4 - 2*n4^2)*j[p4, 0, -1 + n2, n3, 1 + n4, n5, 1, 0, 1, 0, 1, 
      1, 0, 1, 1])/(2*(-1 + n2)*(-3 + d - n4 - n5)) - 
   (n4*n5*j[p4, 0, -1 + n2, n3, 1 + n4, 1 + n5, 0, 0, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-1 + n2)*(3 - d + n4 + n5)) - 
   (n4*j[p4, 0, -1 + n2, n3, 1 + n4, 1 + n5, 0, 0, 2, 0, 1, 1, -1, 1, 1])/
    (2*(-1 + n2)*(3 - d + n4 + n5)) - 
   (n4*j[p4, 0, -1 + n2, n3, 1 + n4, 1 + n5, 1, -1, 0, 0, 1, 1, 0, 2, 1])/
    (2*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((-34*n4 + 17*d*n4 - 2*d^2*n4 + 6*n3*n4 - 2*d*n3*n4 - 34*n4^2 + 8*d*n4^2 + 
      4*n3*n4^2 - 8*n4^3 - 22*n4*n5 + 5*d*n4*n5 + 2*n3*n4*n5 - 10*n4^2*n5 - 
      4*n4*n5^2)*j[p4, 0, -1 + n2, n3, 1 + n4, 1 + n5, 1, -1, 1, 0, 1, 1, 0, 
      1, 1])/(4*(-1 + n2)*(3 - d + n4 + n5)*(3 - d + 2*n4 + n5)) + 
   ((-n4 + n3*n4)*j[p4, 0, -1 + n2, n3, 1 + n4, 1 + n5, 1, 0, 0, 0, 1, 1, 0, 
      1, 1])/((-1 + n2)*(3 - d + n4 + n5)) + 
   ((34*n4 - 17*d*n4 + 2*d^2*n4 + 34*n4^2 - 8*d*n4^2 + 8*n4^3 + 22*n4*n5 - 
      5*d*n4*n5 + 10*n4^2*n5 + 4*n4*n5^2)*j[p4, 0, -1 + n2, n3, 1 + n4, 
      1 + n5, 1, 0, 1, 0, 1, 1, -1, 1, 1])/(4*(-1 + n2)*(3 - d + n4 + n5)*
     (3 - d + 2*n4 + n5)) - (n4*j[p4, 0, -1 + n2, n3, 1 + n4, 1 + n5, 1, 0, 
      1, 0, 1, 1, -1, 2, 0])/(2*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((-n4 + n3*n4)*j[p4, 0, -1 + n2, n3, 1 + n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 
      0, 1])/(2*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((-n4 + n2*n4 - n4^2)*j[p4, 0, -1 + n2, n3, 1 + n4, 1 + n5, 1, 0, 1, 0, 1, 
      1, 0, 1, 0])/(2*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((2*n4 - d*n4 + 2*n4^2 + 2*n4*n5 - d*n4*n5 + 2*n4^2*n5)*
     j[p4, 0, -1 + n2, n3, 1 + n4, 2 + n5, 0, -1, 1, 0, 1, 1, 0, 1, 1])/
    (4*(-1 + n2)*(3 - d + n4 + n5)*(3 - d + 2*n4 + n5)) + 
   ((10*n4 - 3*d*n4 + 6*n4^2 + 14*n4*n5 - 3*d*n4*n5 + 6*n4^2*n5 + 4*n4*n5^2)*
     j[p4, 0, -1 + n2, n3, 1 + n4, 2 + n5, 1, -2, 1, 0, 1, 1, 0, 1, 1])/
    (4*(-1 + n2)*(3 - d + n4 + n5)*(3 - d + 2*n4 + n5)) + 
   ((4*n4 - d*n4 + 2*n4^2 + 6*n4*n5 - d*n4*n5 + 2*n4^2*n5 + 2*n4*n5^2)*
     j[p4, 0, -1 + n2, n3, 1 + n4, 2 + n5, 1, -1, 0, 0, 1, 1, 0, 1, 1])/
    (4*(-1 + n2)*(3 - d + n4 + n5)*(3 - d + 2*n4 + n5)) + 
   ((-10*n4 + 3*d*n4 - 6*n4^2 - 14*n4*n5 + 3*d*n4*n5 - 6*n4^2*n5 - 4*n4*n5^2)*
     j[p4, 0, -1 + n2, n3, 1 + n4, 2 + n5, 1, -1, 1, 0, 1, 1, -1, 1, 1])/
    (4*(-1 + n2)*(3 - d + n4 + n5)*(3 - d + 2*n4 + n5)) + 
   ((4*n4 - d*n4 + 2*n4^2 + 6*n4*n5 - d*n4*n5 + 2*n4^2*n5 + 2*n4*n5^2)*
     j[p4, 0, -1 + n2, n3, 1 + n4, 2 + n5, 1, -1, 1, 0, 1, 1, 0, 1, 0])/
    (4*(-1 + n2)*(3 - d + n4 + n5)*(3 - d + 2*n4 + n5)) + 
   ((-n4 - n4^2)*j[p4, 0, -1 + n2, n3, 2 + n4, n5, 0, 0, 1, 0, 1, 1, 0, 1, 
      1])/(2*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((n4 + n4^2)*j[p4, 0, -1 + n2, n3, 2 + n4, n5, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((n4 + n4^2)*j[p4, 0, -1 + n2, n3, 2 + n4, 1 + n5, 0, -1, 1, 0, 1, 1, 0, 
      1, 1])/(2*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((-n4 - n4^2)*j[p4, 0, -1 + n2, n3, 2 + n4, 1 + n5, 1, -1, 0, 0, 1, 1, 0, 
      1, 1])/(2*(-1 + n2)*(3 - d + n4 + n5)) - 
   (n3*n4*j[p4, 0, -1 + n2, 1 + n3, n4, 1 + n5, 1, -1, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-1 + n2)*(3 - d + n4 + n5)) + 
   (n3*n4*j[p4, 0, -1 + n2, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, -1, 1, 1])/
    (2*(-1 + n2)*(3 - d + n4 + n5)) + 
   (n3*n4*j[p4, 0, -1 + n2, 1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((4*n3 - d*n3 + 2*n3*n4 + 6*n3*n5 - d*n3*n5 + 2*n3*n4*n5 + 2*n3*n5^2)*
     j[p4, 0, -1 + n2, 1 + n3, n4, 2 + n5, 1, -2, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-1 + n2)*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((4*n3 - d*n3 + 2*n3*n4 + 6*n3*n5 - d*n3*n5 + 2*n3*n4*n5 + 2*n3*n5^2)*
     j[p4, 0, -1 + n2, 1 + n3, n4, 2 + n5, 1, -1, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-1 + n2)*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-4*n3 + d*n3 - 2*n3*n4 - 6*n3*n5 + d*n3*n5 - 2*n3*n4*n5 - 2*n3*n5^2)*
     j[p4, 0, -1 + n2, 1 + n3, n4, 2 + n5, 1, -1, 1, 0, 1, 1, -1, 1, 1])/
    (2*(-1 + n2)*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((4*n3 - d*n3 + 2*n3*n4 + 6*n3*n5 - d*n3*n5 + 2*n3*n4*n5 + 2*n3*n5^2)*
     j[p4, 0, -1 + n2, 1 + n3, n4, 2 + n5, 1, 0, 1, 0, 1, 1, -1, 0, 1])/
    (4*(-1 + n2)*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   (n3*n4*j[p4, 0, -1 + n2, 1 + n3, 1 + n4, n5, 1, -1, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-1 + n2)*(3 - d + n4 + n5)) + 
   (n3*n4*j[p4, 0, -1 + n2, 1 + n3, 1 + n4, n5, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-1 + n2)*(3 - d + n4 + n5)) - 
   (n3*n4*j[p4, 0, -1 + n2, 1 + n3, 1 + n4, n5, 1, 0, 1, 0, 1, 1, -1, 1, 1])/
    (2*(-1 + n2)*(3 - d + n4 + n5)) + 
   (n3*n4*j[p4, 0, -1 + n2, 1 + n3, 1 + n4, n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-1 + n2)*(3 - d + n4 + n5)) - 
   (n3*n4*j[p4, 0, -1 + n2, 1 + n3, 1 + n4, 1 + n5, 1, -2, 1, 0, 1, 1, 0, 1, 
      1])/(2*(-1 + n2)*(3 - d + n4 + n5)) - 
   (n3*n4*j[p4, 0, -1 + n2, 1 + n3, 1 + n4, 1 + n5, 1, -1, 0, 0, 1, 1, 0, 1, 
      1])/((-1 + n2)*(3 - d + n4 + n5)) + 
   (n3*n4*j[p4, 0, -1 + n2, 1 + n3, 1 + n4, 1 + n5, 1, -1, 1, 0, 1, 1, -1, 1, 
      1])/(2*(-1 + n2)*(3 - d + n4 + n5)) - 
   (n3*n4*j[p4, 0, -1 + n2, 1 + n3, 1 + n4, 1 + n5, 1, -1, 1, 0, 1, 1, 0, 0, 
      1])/(2*(-1 + n2)*(3 - d + n4 + n5)) - 
   (n3*n4*j[p4, 0, -1 + n2, 1 + n3, 1 + n4, 1 + n5, 1, 0, 1, 0, 1, 1, -1, 1, 
      0])/(2*(-1 + n2)*(3 - d + n4 + n5)) + 
   ((4 - d + 2*n4 + 6*n5 - d*n5 + 2*n4*n5 + 2*n5^2)*
     j[p4, 0, n2, -1 + n3, -1 + n4, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-4 + d - 2*n4 - 2*n5)*j[p4, 0, n2, -1 + n3, n4, 1 + n5, 0, 0, 1, 0, 1, 
      1, 0, 1, 2])/(2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-4 + d - 2*n4 - 2*n5)*j[p4, 0, n2, -1 + n3, n4, 1 + n5, 1, 0, 0, 0, 1, 
      1, 0, 1, 2])/(2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-1 - n5)*j[p4, 0, n2, -1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    (2*(3 - d + n4 + n5)*(3 - d + 2*n4 + n5)) + 
   ((4 - d + 2*n4 + 2*n5)*j[p4, 0, n2, -1 + n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 
      0, 1, 1])/(2*(-3 + d - n4 - n5)) + 
   ((-4 + d - 2*n4 - 2*n5)*j[p4, 0, n2, -1 + n3, n4, 1 + n5, 2, 0, 0, 0, 1, 
      1, 0, 1, 1])/(2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-4 + d - 2*n4 - 6*n5 + d*n5 - 2*n4*n5 - 2*n5^2)*
     j[p4, 0, n2, -1 + n3, n4, 2 + n5, 0, 0, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-4 + d - 2*n4 - 6*n5 + d*n5 - 2*n4*n5 - 2*n5^2)*
     j[p4, 0, n2, -1 + n3, n4, 2 + n5, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (4*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-4*n4 + d*n4 - 2*n4^2 - 2*n4*n5)*j[p4, 0, n2, -1 + n3, 1 + n4, 1 + n5, 
      0, 0, 1, 0, 1, 1, 0, 1, 1])/(2*(3 - d + n4 + n5)*(3 - d + 2*n4 + n5)) + 
   ((7*n4 - 2*d*n4 + 4*n4^2 + 3*n4*n5)*j[p4, 0, n2, -1 + n3, 1 + n4, 1 + n5, 
      1, 0, 0, 0, 1, 1, 0, 1, 1])/(2*(3 - d + n4 + n5)*(3 - d + 2*n4 + n5)) + 
   ((4 - d + 2*n4 + 2*n5)*j[p4, 0, n2, n3, -1 + n4, 1 + n5, 0, 0, 1, 0, 1, 1, 
      0, 1, 2])/(2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((4 - d + 2*n4 + 2*n5)*j[p4, 0, n2, n3, -1 + n4, 1 + n5, 1, 0, 0, 0, 1, 1, 
      0, 1, 2])/(2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((4 - d + 2*n4 + 2*n5)*j[p4, 0, n2, n3, -1 + n4, 1 + n5, 1, 0, 1, 0, 1, 1, 
      0, 0, 2])/(2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-4 + d - 2*n4 - 2*n5)*j[p4, 0, n2, n3, -1 + n4, 1 + n5, 1, 0, 1, 0, 1, 
      1, 0, 1, 1])/(-3 + d - 2*n4 - n5) + 
   ((4 - d + 2*n4 + 2*n5)*j[p4, 0, n2, n3, -1 + n4, 1 + n5, 2, 0, 0, 0, 1, 1, 
      0, 1, 1])/(2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((4 - d + 2*n4 + 2*n5)*j[p4, 0, n2, n3, -1 + n4, 1 + n5, 2, 0, 1, 0, 1, 1, 
      0, 0, 1])/(2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((4 - d + 2*n4 + 2*n5)*j[p4, 0, n2, n3, -1 + n4, 1 + n5, 2, 0, 1, 0, 1, 1, 
      0, 1, 0])/(2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((4 - d + 2*n4 + 6*n5 - d*n5 + 2*n4*n5 + 2*n5^2)*
     j[p4, 0, n2, n3, -1 + n4, 2 + n5, 0, 0, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-4 + d - 2*n4 - 6*n5 + d*n5 - 2*n4*n5 - 2*n5^2)*
     j[p4, 0, n2, n3, -1 + n4, 2 + n5, 1, -1, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((4 - d + 2*n4 + 6*n5 - d*n5 + 2*n4*n5 + 2*n5^2)*
     j[p4, 0, n2, n3, -1 + n4, 2 + n5, 1, 0, 1, 0, 1, 1, -1, 1, 1])/
    (2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-4 + d - 2*n4 - 6*n5 + d*n5 - 2*n4*n5 - 2*n5^2)*
     j[p4, 0, n2, n3, -1 + n4, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((4 - d + 2*n4 + 6*n5 - d*n5 + 2*n4*n5 + 2*n5^2)*
     j[p4, 0, n2, n3, -1 + n4, 2 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 0])/
    (2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   j[p4, 0, n2, n3, n4, n5, 0, 0, 1, 0, 1, 1, 0, 1, 2]/
    (2*(-3 + d - n4 - n5)) + j[p4, 0, n2, n3, n4, n5, 1, 0, 0, 0, 1, 1, 0, 1, 
     2]/(2*(-3 + d - n4 - n5)) + j[p4, 0, n2, n3, n4, n5, 1, 0, 1, 0, 1, 1, 
     0, 0, 2]/(2*(-3 + d - n4 - n5)) + 
   j[p4, 0, n2, n3, n4, n5, 2, 0, 0, 0, 1, 1, 0, 1, 1]/
    (2*(-3 + d - n4 - n5)) + j[p4, 0, n2, n3, n4, n5, 2, 0, 1, 0, 1, 1, 0, 0, 
     1]/(2*(-3 + d - n4 - n5)) + j[p4, 0, n2, n3, n4, n5, 2, 0, 1, 0, 1, 1, 
     0, 1, 0]/(2*(-3 + d - n4 - n5)) + 
   ((-4 + d + 2*n4 - d*n4 + 2*n4^2 - 5*n5 + d*n5 - n5^2)*
     j[p4, 0, n2, n3, n4, 1 + n5, 0, 0, 1, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   j[p4, 0, n2, n3, n4, 1 + n5, 1, -1, 1, 0, 1, 1, 0, 0, 2]/
    (2*(-3 + d - n4 - n5)) + ((4 - d + n4 + 2*n5 - n4*n5)*
     j[p4, 0, n2, n3, n4, 1 + n5, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    (2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) - 
   j[p4, 0, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, -1, 0, 2]/
    (2*(-3 + d - n4 - n5)) + ((2*n4 + n5)*j[p4, 0, n2, n3, n4, 1 + n5, 1, 0, 
      1, 0, 1, 1, 0, 0, 1])/(2*(3 - d + n4 + n5)) + 
   ((-4 + d + 2*n4 - d*n4 + 2*n4^2 - 5*n5 + d*n5 - n5^2)*
     j[p4, 0, n2, n3, n4, 1 + n5, 1, 0, 1, 0, 1, 1, 0, 1, 0])/
    (2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((4 - d + 2*n4 + 2*n5)*j[p4, 0, n2, n3, n4, 1 + n5, 2, -1, 0, 0, 1, 1, 0, 
      1, 1])/(2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-4 + d - 2*n4 - 2*n5)*j[p4, 0, n2, n3, n4, 1 + n5, 2, 0, 0, 0, 1, 1, -1, 
      1, 1])/(2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-4 + d - 2*n4 - 6*n5 + d*n5 - 2*n4*n5 - 2*n5^2)*
     j[p4, 0, n2, n3, n4, 2 + n5, 1, -1, 1, 0, 1, 1, 0, 0, 1])/
    (2*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) + 
   ((-4 + d - 2*n4 - 6*n5 + d*n5 - 2*n4*n5 - 2*n5^2)*
     j[p4, 0, n2, n3, n4, 2 + n5, 1, 0, 0, 0, 1, 1, -1, 1, 1])/
    (4*(-3 + d - 2*n4 - n5)*(-3 + d - n4 - n5)) - 
   (n4*j[p4, 0, n2, n3, 1 + n4, n5, 0, 0, 1, 0, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5)) + (n4*j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, 0, 0, 1, 
      1, 0, 1, 1])/(3 - d + n4 + n5) - 
   (n4*j[p4, 0, n2, n3, 1 + n4, n5, 1, 0, 1, 0, 1, 1, 0, 1, 0])/
    (2*(3 - d + n4 + n5)) - (n4*j[p4, 0, n2, n3, 1 + n4, 1 + n5, 0, 0, 1, 0, 
      1, 1, -1, 1, 1])/(2*(3 - d + n4 + n5)) - 
   (n4*j[p4, 0, n2, n3, 1 + n4, 1 + n5, 1, -1, 0, 0, 1, 1, 0, 1, 1])/
    (2*(3 - d + n4 + n5)) + (n4*j[p4, 0, n2, n3, 1 + n4, 1 + n5, 1, 0, 0, 0, 
      1, 1, -1, 1, 1])/(2*(3 - d + n4 + n5)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n3 == 0 && n4 == 0 && n5 == 0 && n7 == 0 && n9 == 0 && 
     !(n2 == 0 || n6 == 1 || n8 == 1) -> 
  ((4 - d + 2*n2)*j[p4, -1, 1 + n2, 0, 0, 0, n6, 0, n8, 0, 0, 2, 0, 1, 1])/
    ((d - 2*n6)*(-6 + 3*d - 2*n2 - 2*n8)) + 
   ((12 - 16*d + 4*d^2 + 16*n2 - 10*d*n2 + 4*n2^2 + 12*n6 - 6*d*n6 + 
      4*n2*n6 + 12*n8 - 4*d*n8 + 8*n2*n8 + 4*n6*n8)*
     j[p4, -1, 1 + n2, 0, 0, 0, n6, 0, n8, 0, 1, 1, 0, 1, 1])/
    ((d - 2*n6)*(-6 + 3*d - 2*n2 - 2*n8)) + 
   ((-4 + d - 2*n2)*j[p4, -1, 1 + n2, 0, 0, 0, n6, 0, n8, 0, 1, 1, 0, 2, 0])/
    ((d - 2*n6)*(-6 + 3*d - 2*n2 - 2*n8)) + 
   ((-4 + d - 6*n2 + d*n2 - 2*n2^2)*j[p4, -1, 2 + n2, -1, 0, 0, n6, 0, n8, 0, 
      1, 1, 0, 1, 1])/((d - 2*n6)*(-6 + 3*d - 2*n2 - 2*n8)) + 
   ((2 + 2*n2)*j[p4, -1, 2 + n2, 0, 0, -1, n6, 0, n8, 0, 1, 1, 0, 1, 1])/
    (d - 2*n6) + ((8 - 5*d + 10*n2 - 5*d*n2 + 2*n2^2 + 3*d*n6 + 2*n2*n6 + 
      3*d*n2*n6 + 2*n2^2*n6 - 4*n8 + 2*d*n8 - 8*n2*n8 + 2*d*n2*n8 - 
      4*n2^2*n8 - 4*n6*n8 - 4*n2*n6*n8)*j[p4, -1, 2 + n2, 0, 0, 0, -1 + n6, 
      0, n8, 0, 1, 1, 0, 1, 1])/((-1 + n6)*(-d + 2*n6)*
     (-6 + 3*d - 2*n2 - 2*n8)) + ((4 - d + 6*n2 - d*n2 + 2*n2^2)*
     j[p4, -1, 2 + n2, 0, 0, 0, n6, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/
    ((d - 2*n6)*(-6 + 3*d - 2*n2 - 2*n8)) + 
   (n6*j[p4, 0, n2, 0, 0, 0, 1 + n6, 0, n8, 0, 0, 1, 0, 1, 1])/(d - 2*n6) + 
   ((-4*n8 + d*n8 - 2*n2*n8)*j[p4, 0, 1 + n2, 0, -1, 0, n6, 0, 1 + n8, 0, 1, 
      1, 0, 0, 1])/((d - 2*n6)*(-6 + 3*d - 2*n2 - 2*n8)) - 
   (n6*j[p4, 0, 1 + n2, 0, 0, -1, 1 + n6, 0, n8, 0, 0, 1, 0, 1, 1])/
    (d - 2*n6) + ((-8*d + 6*d^2 - d^3 - 8*d*n2 + 3*d^2*n2 - 2*d*n2^2 - 8*n6 + 
      6*d*n6 - d^2*n6 - 4*n2*n6 + 2*d*n2*n6 - 8*n6^2 + 2*d*n6^2 - 4*n2*n6^2 + 
      24*n8 - 22*d*n8 + 4*d^2*n8 + 20*n2*n8 - 10*d*n2*n8 + 4*n2^2*n8 + 
      16*n6*n8 - 4*d*n6*n8 + 8*n2*n6*n8)*j[p4, 0, 1 + n2, 0, 0, 0, -1 + n6, 
      0, n8, 0, 1, 1, 0, 1, 1])/((-1 + n6)*(-d + 2*n6)*
     (-6 + 3*d - 2*n2 - 2*n8)) + 
   ((4 - d + 2*n2)*j[p4, 0, 1 + n2, 0, 0, 0, -1 + n6, 0, n8, 0, 2, 1, 0, 0, 
      1])/((d - 2*n6)*(-6 + 3*d - 2*n2 - 2*n8)) + 
   ((4*n8 - d*n8 + 2*n2*n8)*j[p4, 0, 1 + n2, 0, 0, 0, -1 + n6, 0, 1 + n8, 0, 
      1, 1, 0, 0, 1])/((d - 2*n6)*(-6 + 3*d - 2*n2 - 2*n8)) + 
   ((-4 + d - 2*n2)*j[p4, 0, 1 + n2, 0, 0, 0, n6, 0, -1 + n8, 0, 0, 2, 0, 1, 
      1])/((d - 2*n6)*(-6 + 3*d - 2*n2 - 2*n8)) + 
   ((-24 + 34*d - 15*d^2 + 2*d^3 - 20*n2 + 20*d*n2 - 5*d^2*n2 - 4*n2^2 + 
      2*d*n2^2 - 16*n8 + 12*d*n8 - 2*d^2*n8 - 8*n2*n8 + 4*d*n2*n8)*
     j[p4, 0, 1 + n2, 0, 0, 0, n6, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/
    ((d - 2*n6)*(-1 + n8)*(6 - 3*d + 2*n2 + 2*n8)) + 
   ((-4 + d - 2*n2)*j[p4, 0, 1 + n2, 0, 0, 0, n6, 0, n8, -1, 2, 1, 0, 0, 1])/
    ((d - 2*n6)*(-6 + 3*d - 2*n2 - 2*n8)) + 
   ((6 - 3*d - 4*n2 + 3*d*n2 - 2*n2^2 + 2*n6 + d*n6 + 2*n2*n6 - 6*n8 + 
      2*d*n8 - 6*n2*n8 - 2*n6*n8)*j[p4, 0, 1 + n2, 0, 0, 0, n6, 0, n8, 0, 0, 
      1, 0, 1, 1])/((d - 2*n6)*(-6 + 3*d - 2*n2 - 2*n8)) + 
   ((4 - d + 2*n2)*j[p4, 0, 1 + n2, 0, 0, 0, n6, 0, n8, 0, 0, 2, -1, 1, 1])/
    ((d - 2*n6)*(-6 + 3*d - 2*n2 - 2*n8)) + 
   ((-4 + d - 2*n2)*j[p4, 0, 1 + n2, 0, 0, 0, n6, 0, n8, 0, 0, 2, 0, 1, 1])/
    ((d - 2*n6)*(-6 + 3*d - 2*n2 - 2*n8)) + 
   ((12 - 7*d + d^2 + 14*n2 - 4*d*n2 + 4*n2^2 + 8*n6 - 2*d*n6 + 4*n2*n6 + 
      4*n8 - d*n8 + 2*n2*n8)*j[p4, 0, 1 + n2, 0, 0, 0, n6, 0, n8, 0, 1, 1, 0, 
      0, 1])/((d - 2*n6)*(-6 + 3*d - 2*n2 - 2*n8)) + 
   ((-16 + 8*d - d^2 - 12*n2 + 3*d*n2 - 2*n2^2 + 8*n6 - 2*d*n6 + 4*n2*n6 - 
      8*n8 + 2*d*n8 - 4*n2*n8)*j[p4, 0, 1 + n2, 0, 0, 0, n6, 0, n8, 0, 1, 1, 
      0, 1, 0])/((d - 2*n6)*(-6 + 3*d - 2*n2 - 2*n8)) + 
   ((-4 + 9*d - 2*d^2 - 6*n2 + 5*d*n2 - 2*n2^2 - 8*n6 + 2*d*n6 - 4*n2*n6 - 
      8*n8 + 2*d*n8 - 4*n2*n8)*j[p4, 0, 1 + n2, 0, 0, 0, n6, 0, n8, 0, 1, 1, 
      0, 1, 1])/((d - 2*n6)*(-6 + 3*d - 2*n2 - 2*n8)) + 
   ((4 - d + 2*n2)*j[p4, 0, 1 + n2, 0, 0, 0, n6, 0, n8, 0, 1, 1, 0, 2, 0])/
    ((d - 2*n6)*(-6 + 3*d - 2*n2 - 2*n8)) + 
   ((12 - 11*d + 2*d^2 + 22*n2 - 16*d*n2 + 2*d^2*n2 + 12*n2^2 - 5*d*n2^2 + 
      2*n2^3 + 8*n8 - 2*d*n8 + 12*n2*n8 - 2*d*n2*n8 + 4*n2^2*n8)*
     j[p4, 0, 2 + n2, -1, 0, 0, n6, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/
    ((d - 2*n6)*(-1 + n8)*(6 - 3*d + 2*n2 + 2*n8)) + 
   ((4 - d + 6*n2 - d*n2 + 2*n2^2)*j[p4, 0, 2 + n2, -1, 0, 0, n6, 0, n8, 0, 
      0, 1, 0, 1, 1])/((d - 2*n6)*(-6 + 3*d - 2*n2 - 2*n8)) + 
   ((10 - 4*d + 14*n2 - 4*d*n2 + 4*n2^2 + 2*n8 + 2*n2*n8)*
     j[p4, 0, 2 + n2, 0, 0, -1, n6, 0, n8, 0, 0, 1, 0, 1, 1])/
    ((d - 2*n6)*(-6 + 3*d - 2*n2 - 2*n8)) + 
   ((-8 + 2*d - 12*n2 + 2*d*n2 - 4*n2^2)*j[p4, 0, 2 + n2, 0, 0, -1, n6, 0, 
      n8, 0, 1, 1, 0, 0, 1])/((d - 2*n6)*(-6 + 3*d - 2*n2 - 2*n8)) + 
   ((-6 + 3*d - 8*n2 + 3*d*n2 - 2*n2^2 - 2*n6 - d*n6 - 4*n2*n6 - d*n2*n6 - 
      2*n2^2*n6 + 6*n8 - 2*d*n8 + 10*n2*n8 - 2*d*n2*n8 + 4*n2^2*n8 + 
      2*n6*n8 + 2*n2*n6*n8)*j[p4, 0, 2 + n2, 0, 0, 0, -1 + n6, 0, n8, 0, 0, 
      1, 0, 1, 1])/((-1 + n6)*(-d + 2*n6)*(-6 + 3*d - 2*n2 - 2*n8)) + 
   ((8 - 2*d + 12*n2 - 2*d*n2 + 4*n2^2)*j[p4, 0, 2 + n2, 0, 0, 0, -1 + n6, 0, 
      n8, 0, 1, 1, 0, 0, 1])/((d - 2*n6)*(-6 + 3*d - 2*n2 - 2*n8)) + 
   ((-12 + 11*d - 2*d^2 - 22*n2 + 16*d*n2 - 2*d^2*n2 - 12*n2^2 + 5*d*n2^2 - 
      2*n2^3 - 8*n8 + 2*d*n8 - 12*n2*n8 + 2*d*n2*n8 - 4*n2^2*n8)*
     j[p4, 0, 2 + n2, 0, 0, 0, n6, -1, -1 + n8, 0, 1, 1, 0, 1, 1])/
    ((d - 2*n6)*(-1 + n8)*(6 - 3*d + 2*n2 + 2*n8)) + 
   ((-4 + d - 6*n2 + d*n2 - 2*n2^2)*j[p4, 0, 2 + n2, 0, 0, 0, n6, -1, n8, 0, 
      0, 1, 0, 1, 1])/((d - 2*n6)*(-6 + 3*d - 2*n2 - 2*n8)) + 
   ((4 - d + 6*n2 - d*n2 + 2*n2^2)*j[p4, 0, 2 + n2, 0, 0, 0, n6, -1, n8, 0, 
      1, 1, 0, 1, 1])/((d - 2*n6)*(-6 + 3*d - 2*n2 - 2*n8)) + 
   ((-12 + 11*d - 2*d^2 - 22*n2 + 16*d*n2 - 2*d^2*n2 - 12*n2^2 + 5*d*n2^2 - 
      2*n2^3 - 8*n8 + 2*d*n8 - 12*n2*n8 + 2*d*n2*n8 - 4*n2^2*n8)*
     j[p4, 0, 2 + n2, 0, 0, 0, n6, 0, -2 + n8, 0, 1, 1, 0, 1, 1])/
    ((d - 2*n6)*(-1 + n8)*(6 - 3*d + 2*n2 + 2*n8)) + 
   ((12 - 11*d + 2*d^2 + 22*n2 - 16*d*n2 + 2*d^2*n2 + 12*n2^2 - 5*d*n2^2 + 
      2*n2^3 + 8*n8 - 2*d*n8 + 12*n2*n8 - 2*d*n2*n8 + 4*n2^2*n8)*
     j[p4, 0, 2 + n2, 0, 0, 0, n6, 0, -1 + n8, 0, 1, 1, -1, 1, 1])/
    ((d - 2*n6)*(-1 + n8)*(6 - 3*d + 2*n2 + 2*n8)) + 
   ((-24 + 22*d - 4*d^2 - 44*n2 + 32*d*n2 - 4*d^2*n2 - 24*n2^2 + 10*d*n2^2 - 
      4*n2^3 - 16*n8 + 4*d*n8 - 24*n2*n8 + 4*d*n2*n8 - 8*n2^2*n8)*
     j[p4, 0, 2 + n2, 0, 0, 0, n6, 0, -1 + n8, 0, 1, 1, 0, 0, 1])/
    ((d - 2*n6)*(-1 + n8)*(6 - 3*d + 2*n2 + 2*n8)) + 
   ((-4 + d - 6*n2 + d*n2 - 2*n2^2)*j[p4, 0, 2 + n2, 0, 0, 0, n6, 0, -1 + n8, 
      0, 1, 1, 0, 1, 1])/((d - 2*n6)*(-6 + 3*d - 2*n2 - 2*n8)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n3 == 0 && 
    n4 == 0 && n5 == 0 && n7 == 0 && n8 == 1 && n9 == 0 && 
     !((n1 == 0 && n2 == -1 && n6 == 1) || (n1 == 0 && n2 == -1 && 
       n6 == 1) || n2 == 0 || n6 == 1) -> 
  ((-40 + 50*d - 18*d^2 + 2*d^3 - 16*n1 + 20*d*n1 - 4*d^2*n1 - 28*n2 + 
      30*d*n2 - 6*d^2*n2 - 8*n1*n2 + 8*d*n1*n2 - 4*n2^2 + 4*d*n2^2 - 8*n6 + 
      2*d*n6 - 16*n1*n6 + 4*d*n1*n6 - 12*n2*n6 + 2*d*n2*n6 - 8*n1*n2*n6 - 
      4*n2^2*n6)*j[p4, -1 + n1, 1 + n2, 0, 0, 0, n6, 0, 0, 0, 1, 2, 0, 1, 1])/
    ((-2 + d)*(d - 2*n6)*(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 
      4*n1*n2 - 2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6)) + 
   ((20 - 5*d + 8*n1 - 2*d*n1 + 14*n2 - d*n2 + 4*n1*n2 + 2*n2^2 - 16*n6 + 
      4*d*n6 - 8*n2*n6)*j[p4, -1 + n1, 1 + n2, 0, 0, 0, n6, 0, 1, 0, 0, 2, 0, 
      1, 1])/((d - 2*n6)*(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 
      4*n1*n2 - 2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6)) + 
   ((20 - 10*d - 5*d^2 + 2*d^3 + 8*n1 - 4*d*n1 + 24*n2 - 5*d^2*n2 + 8*n1*n2 + 
      4*n2^2 + 2*d*n2^2 - 16*n6 + 40*d*n6 - 12*d^2*n6 + 4*d*n1*n6 - 
      40*n2*n6 + 24*d*n2*n6 - 8*n1*n2*n6 - 8*n2^2*n6 - 44*n6^2 + 16*d*n6^2 - 
      8*n1*n6^2 - 12*n2*n6^2)*j[p4, -1 + n1, 1 + n2, 0, 0, 0, n6, 0, 1, 0, 1, 
      1, 0, 1, 1])/((d - 2*n6)*(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 
      3*d*n2 - 4*n1*n2 - 2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6)) + 
   ((-8 + 2*d - 4*n2)*j[p4, -1 + n1, 1 + n2, 0, 0, 0, n6, 0, 1, 0, 1, 1, 0, 
      2, 0])/(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 4*n1*n2 - 
     2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6) + 
   ((-8 + 2*d - 12*n2 + 2*d*n2 - 4*n2^2)*j[p4, -1 + n1, 2 + n2, -1, 0, 0, n6, 
      0, 1, 0, 1, 1, 0, 1, 1])/(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 
     3*d*n2 - 4*n1*n2 - 2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6) + 
   ((-20 - 4*d + 4*d^2 - 8*n1 - 24*n2 - 8*d*n2 + 4*d^2*n2 - 8*n1*n2 - 
      4*n2^2 - 4*d*n2^2 + 44*n6 - 16*d*n6 + 8*n1*n6 + 56*n2*n6 - 16*d*n2*n6 + 
      8*n1*n2*n6 + 12*n2^2*n6)*j[p4, -1 + n1, 2 + n2, 0, 0, -1, n6, 0, 1, 0, 
      1, 1, 0, 1, 1])/((d - 2*n6)*(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 
      3*d*n2 - 4*n1*n2 - 2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6)) + 
   ((60 - 112*d + 58*d^2 - 8*d^3 + 24*n1 - 24*d*n1 + 4*d^2*n1 + 112*n2 - 
      180*d*n2 + 78*d^2*n2 - 8*d^3*n2 + 40*n1*n2 - 32*d*n1*n2 + 4*d^2*n1*n2 + 
      60*n2^2 - 76*d*n2^2 + 20*d^2*n2^2 + 16*n1*n2^2 - 8*d*n1*n2^2 + 8*n2^3 - 
      8*d*n2^3 + 96*n6 - 76*d*n6 + 10*d^2*n6 + 16*n1*n6 + 144*n2*n6 - 
      104*d*n2*n6 + 10*d^2*n2*n6 + 16*n1*n2*n6 + 56*n2^2*n6 - 28*d*n2^2*n6 + 
      8*n2^3*n6 + 4*n6^2 + 4*d*n6^2 - 8*n1*n6^2 + 16*n2*n6^2 + 4*d*n2*n6^2 - 
      8*n1*n2*n6^2 + 12*n2^2*n6^2)*j[p4, -1 + n1, 2 + n2, 0, 0, 0, -1 + n6, 
      0, 1, 0, 1, 1, 0, 1, 1])/((-1 + n6)*(-d + 2*n6)*
     (30 - 11*d + 12*n1 - 2*d*n1 + 16*n2 - 3*d*n2 + 4*n1*n2 + 2*n2^2 - 
      22*n6 + 8*d*n6 - 4*n1*n6 - 6*n2*n6)) + 
   ((8 - 2*d + 12*n2 - 2*d*n2 + 4*n2^2)*j[p4, -1 + n1, 2 + n2, 0, 0, 0, n6, 
      0, 0, 0, 1, 1, 0, 1, 1])/(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 
     3*d*n2 - 4*n1*n2 - 2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6) + 
   ((40 - 50*d + 18*d^2 - 2*d^3 + 16*n1 - 20*d*n1 + 4*d^2*n1 + 28*n2 - 
      30*d*n2 + 6*d^2*n2 + 8*n1*n2 - 8*d*n1*n2 + 4*n2^2 - 4*d*n2^2 + 8*n6 - 
      2*d*n6 + 16*n1*n6 - 4*d*n1*n6 + 12*n2*n6 - 2*d*n2*n6 + 8*n1*n2*n6 + 
      4*n2^2*n6)*j[p4, n1, n2, 0, 0, 0, n6, 0, 0, 0, 1, 2, 0, 1, 1])/
    ((-2 + d)*(d - 2*n6)*(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 
      4*n1*n2 - 2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6)) + 
   ((40 - 26*d + 4*d^2 + 16*n1 - 4*d*n1 + 28*n2 - 10*d*n2 + 8*n1*n2 + 4*n2^2)*
     j[p4, n1, n2, 0, 0, 0, n6, 0, 1, 0, 1, 1, 0, 0, 2])/
    ((d - 2*n6)*(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 4*n1*n2 - 
      2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6)) + 
   ((-20 + 13*d - 2*d^2 - 8*n1 + 2*d*n1 - 14*n2 + 5*d*n2 - 4*n1*n2 - 2*n2^2)*
     j[p4, n1, n2, 0, 0, 0, n6, 0, 2, 0, 1, 0, 0, 1, 1])/
    ((-2 + d)*(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 4*n1*n2 - 
      2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6)) + 
   ((-10*n6 - 2*d*n6 + 2*d^2*n6 - 4*n1*n6 - 2*n2*n6 - 2*d*n2*n6 + 22*n6^2 - 
      8*d*n6^2 + 4*n1*n6^2 + 6*n2*n6^2)*j[p4, n1, n2, 0, 0, 0, 1 + n6, 0, 1, 
      0, 0, 1, 0, 1, 1])/((d - 2*n6)*(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 
      3*d*n2 - 4*n1*n2 - 2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6)) + 
   ((40*n6 - 26*d*n6 + 4*d^2*n6 + 16*n1*n6 - 4*d*n1*n6 + 28*n2*n6 - 
      10*d*n2*n6 + 8*n1*n2*n6 + 4*n2^2*n6)*j[p4, n1, n2, 0, 0, 0, 1 + n6, 0, 
      1, 0, 1, 1, 0, 0, 1])/((d - 2*n6)*(-30 + 11*d - 12*n1 + 2*d*n1 - 
      16*n2 + 3*d*n2 - 4*n1*n2 - 2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 
      6*n2*n6)) + ((40*n6 - 26*d*n6 + 4*d^2*n6 + 16*n1*n6 - 4*d*n1*n6 + 
      28*n2*n6 - 10*d*n2*n6 + 8*n1*n2*n6 + 4*n2^2*n6)*
     j[p4, n1, n2, 0, 0, 0, 1 + n6, 0, 1, 0, 1, 1, 0, 1, 0])/
    ((d - 2*n6)*(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 4*n1*n2 - 
      2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6)) + 
   ((-40 + 26*d - 4*d^2 - 16*n1 + 4*d*n1 - 28*n2 + 10*d*n2 - 8*n1*n2 - 
      4*n2^2)*j[p4, n1, 1 + n2, -1, 0, 0, n6, 0, 0, 0, 1, 1, 0, 1, 2])/
    ((d - 2*n6)*(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 4*n1*n2 - 
      2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6)) + 
   ((-40*n6 + 26*d*n6 - 4*d^2*n6 - 16*n1*n6 + 4*d*n1*n6 - 28*n2*n6 + 
      10*d*n2*n6 - 8*n1*n2*n6 - 4*n2^2*n6)*j[p4, n1, 1 + n2, -1, 0, 0, 
      1 + n6, 0, 0, 0, 1, 1, 0, 1, 1])/((d - 2*n6)*(-30 + 11*d - 12*n1 + 
      2*d*n1 - 16*n2 + 3*d*n2 - 4*n1*n2 - 2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 
      6*n2*n6)) + ((40 - 26*d + 4*d^2 + 16*n1 - 4*d*n1 + 28*n2 - 10*d*n2 + 
      8*n1*n2 + 4*n2^2)*j[p4, n1, 1 + n2, 0, -1, 0, n6, 0, 0, 0, 1, 1, 0, 1, 
      2])/((d - 2*n6)*(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 
      4*n1*n2 - 2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6)) + 
   ((40 - 50*d + 18*d^2 - 2*d^3 + 16*n1 - 20*d*n1 + 4*d^2*n1 + 28*n2 - 
      30*d*n2 + 6*d^2*n2 + 8*n1*n2 - 8*d*n1*n2 + 4*n2^2 - 4*d*n2^2 + 8*n6 - 
      2*d*n6 + 16*n1*n6 - 4*d*n1*n6 + 12*n2*n6 - 2*d*n2*n6 + 8*n1*n2*n6 + 
      4*n2^2*n6)*j[p4, n1, 1 + n2, 0, -1, 0, n6, 0, 0, 0, 1, 2, 0, 1, 1])/
    ((-2 + d)*(d - 2*n6)*(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 
      4*n1*n2 - 2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6)) + 
   ((40 - 26*d + 4*d^2 + 16*n1 - 4*d*n1 + 28*n2 - 10*d*n2 + 8*n1*n2 + 4*n2^2)*
     j[p4, n1, 1 + n2, 0, -1, 0, n6, 0, 1, 0, 1, 1, 0, 0, 2])/
    ((d - 2*n6)*(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 4*n1*n2 - 
      2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6)) + 
   ((40 - 66*d + 30*d^2 - 4*d^3 + 16*n1 - 20*d*n1 + 4*d^2*n1 + 28*n2 - 
      38*d*n2 + 10*d^2*n2 + 8*n1*n2 - 8*d*n1*n2 + 4*n2^2 - 4*d*n2^2 + 40*n6 - 
      26*d*n6 + 4*d^2*n6 + 16*n1*n6 - 4*d*n1*n6 + 28*n2*n6 - 10*d*n2*n6 + 
      8*n1*n2*n6 + 4*n2^2*n6)*j[p4, n1, 1 + n2, 0, -1, 0, n6, 0, 2, 0, 1, 0, 
      0, 1, 1])/((-2 + d)*(d - 2*n6)*(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 
      3*d*n2 - 4*n1*n2 - 2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6)) + 
   ((-8 + 2*d - 4*n2)*j[p4, n1, 1 + n2, 0, -1, 0, n6, 0, 2, 0, 1, 1, 0, 0, 
      1])/(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 4*n1*n2 - 2*n2^2 + 
     22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6) + 
   ((40*n6 - 26*d*n6 + 4*d^2*n6 + 16*n1*n6 - 4*d*n1*n6 + 28*n2*n6 - 
      10*d*n2*n6 + 8*n1*n2*n6 + 4*n2^2*n6)*j[p4, n1, 1 + n2, 0, -1, 0, 
      1 + n6, 0, 0, 0, 1, 1, 0, 1, 1])/((d - 2*n6)*(-30 + 11*d - 12*n1 + 
      2*d*n1 - 16*n2 + 3*d*n2 - 4*n1*n2 - 2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 
      6*n2*n6)) + ((40*n6 - 26*d*n6 + 4*d^2*n6 + 16*n1*n6 - 4*d*n1*n6 + 
      28*n2*n6 - 10*d*n2*n6 + 8*n1*n2*n6 + 4*n2^2*n6)*
     j[p4, n1, 1 + n2, 0, -1, 0, 1 + n6, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((d - 2*n6)*(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 4*n1*n2 - 
      2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6)) + 
   ((40*n6 - 26*d*n6 + 4*d^2*n6 + 16*n1*n6 - 4*d*n1*n6 + 28*n2*n6 - 
      10*d*n2*n6 + 8*n1*n2*n6 + 4*n2^2*n6)*j[p4, n1, 1 + n2, 0, -1, 0, 
      1 + n6, 0, 1, 0, 1, 1, 0, 1, 0])/((d - 2*n6)*(-30 + 11*d - 12*n1 + 
      2*d*n1 - 16*n2 + 3*d*n2 - 4*n1*n2 - 2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 
      6*n2*n6)) + ((-40 + 26*d - 4*d^2 - 16*n1 + 4*d*n1 - 28*n2 + 10*d*n2 - 
      8*n1*n2 - 4*n2^2)*j[p4, n1, 1 + n2, 0, 0, -1, n6, 0, 0, 0, 1, 1, 0, 1, 
      2])/((d - 2*n6)*(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 
      4*n1*n2 - 2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6)) + 
   ((-40 + 50*d - 18*d^2 + 2*d^3 - 16*n1 + 20*d*n1 - 4*d^2*n1 - 28*n2 + 
      30*d*n2 - 6*d^2*n2 - 8*n1*n2 + 8*d*n1*n2 - 4*n2^2 + 4*d*n2^2 - 8*n6 + 
      2*d*n6 - 16*n1*n6 + 4*d*n1*n6 - 12*n2*n6 + 2*d*n2*n6 - 8*n1*n2*n6 - 
      4*n2^2*n6)*j[p4, n1, 1 + n2, 0, 0, -1, n6, 0, 0, 0, 1, 2, 0, 1, 1])/
    ((-2 + d)*(d - 2*n6)*(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 
      4*n1*n2 - 2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6)) + 
   ((-40 + 26*d - 4*d^2 - 16*n1 + 4*d*n1 - 28*n2 + 10*d*n2 - 8*n1*n2 - 
      4*n2^2)*j[p4, n1, 1 + n2, 0, 0, -1, n6, 0, 1, 0, 1, 1, 0, 0, 2])/
    ((d - 2*n6)*(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 4*n1*n2 - 
      2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6)) + 
   ((-40*n6 + 26*d*n6 - 4*d^2*n6 - 16*n1*n6 + 4*d*n1*n6 - 28*n2*n6 + 
      10*d*n2*n6 - 8*n1*n2*n6 - 4*n2^2*n6)*j[p4, n1, 1 + n2, 0, 0, -1, 
      1 + n6, 0, 0, 0, 1, 1, 0, 1, 1])/((d - 2*n6)*(-30 + 11*d - 12*n1 + 
      2*d*n1 - 16*n2 + 3*d*n2 - 4*n1*n2 - 2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 
      6*n2*n6)) + ((10*n6 + 2*d*n6 - 2*d^2*n6 + 4*n1*n6 + 2*n2*n6 + 
      2*d*n2*n6 - 22*n6^2 + 8*d*n6^2 - 4*n1*n6^2 - 6*n2*n6^2)*
     j[p4, n1, 1 + n2, 0, 0, -1, 1 + n6, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((d - 2*n6)*(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 4*n1*n2 - 
      2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6)) + 
   ((-40*n6 + 26*d*n6 - 4*d^2*n6 - 16*n1*n6 + 4*d*n1*n6 - 28*n2*n6 + 
      10*d*n2*n6 - 8*n1*n2*n6 - 4*n2^2*n6)*j[p4, n1, 1 + n2, 0, 0, -1, 
      1 + n6, 0, 1, 0, 1, 1, 0, 0, 1])/((d - 2*n6)*(-30 + 11*d - 12*n1 + 
      2*d*n1 - 16*n2 + 3*d*n2 - 4*n1*n2 - 2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 
      6*n2*n6)) + ((-40*n6 + 26*d*n6 - 4*d^2*n6 - 16*n1*n6 + 4*d*n1*n6 - 
      28*n2*n6 + 10*d*n2*n6 - 8*n1*n2*n6 - 4*n2^2*n6)*
     j[p4, n1, 1 + n2, 0, 0, -1, 1 + n6, 0, 1, 0, 1, 1, 0, 1, 0])/
    ((d - 2*n6)*(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 4*n1*n2 - 
      2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6)) + 
   ((-40 + 50*d - 18*d^2 + 2*d^3 - 16*n1 + 20*d*n1 - 4*d^2*n1 - 28*n2 + 
      30*d*n2 - 6*d^2*n2 - 8*n1*n2 + 8*d*n1*n2 - 4*n2^2 + 4*d*n2^2 - 8*n6 + 
      2*d*n6 - 16*n1*n6 + 4*d*n1*n6 - 12*n2*n6 + 2*d*n2*n6 - 8*n1*n2*n6 - 
      4*n2^2*n6)*j[p4, n1, 1 + n2, 0, 0, 0, -1 + n6, 0, 0, 0, 1, 2, 0, 1, 1])/
    ((-2 + d)*(d - 2*n6)*(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 
      4*n1*n2 - 2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6)) + 
   ((8 - 2*d + 4*n2)*j[p4, n1, 1 + n2, 0, 0, 0, -1 + n6, 0, 0, 0, 2, 1, 0, 1, 
      1])/(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 4*n1*n2 - 2*n2^2 + 
     22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6) + 
   ((-40 + 26*d - 4*d^2 - 16*n1 + 4*d*n1 - 28*n2 + 10*d*n2 - 8*n1*n2 - 
      4*n2^2)*j[p4, n1, 1 + n2, 0, 0, 0, -1 + n6, 0, 1, 0, 1, 1, 0, 0, 2])/
    ((d - 2*n6)*(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 4*n1*n2 - 
      2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6)) + 
   ((-240 + 468*d - 318*d^2 + 94*d^3 - 10*d^4 - 96*n1 + 120*d*n1 - 
      40*d^2*n1 + 4*d^3*n1 - 248*n2 + 404*d*n2 - 198*d^2*n2 + 32*d^3*n2 - 
      80*n1*n2 + 72*d*n1*n2 - 12*d^2*n1*n2 - 80*n2^2 + 104*d*n2^2 - 
      28*d^2*n2^2 - 16*n1*n2^2 + 8*d*n1*n2^2 - 8*n2^3 + 8*d*n2^3 - 224*n6 + 
      272*d*n6 - 126*d^2*n6 + 18*d^3*n6 - 32*n1*n6 - 8*d*n1*n6 + 
      4*d^2*n1*n6 - 224*n2*n6 + 192*d*n2*n6 - 50*d^2*n2*n6 - 16*n1*n2*n6 - 
      8*d*n1*n2*n6 - 72*n2^2*n6 + 32*d*n2^2*n6 - 8*n2^3*n6 - 48*n6^2 + 
      76*d*n6^2 - 16*d^2*n6^2 + 32*n1*n6^2 - 8*d*n1*n6^2 - 40*n2*n6^2 + 
      36*d*n2*n6^2 + 16*n1*n2*n6^2 - 8*n2^2*n6^2 - 32*n6^3 + 8*d*n6^3 - 
      16*n2*n6^3)*j[p4, n1, 1 + n2, 0, 0, 0, -1 + n6, 0, 1, 0, 1, 1, 0, 1, 
      1])/((-1 + n6)*(-d + 2*n6)*(30 - 11*d + 12*n1 - 2*d*n1 + 16*n2 - 
      3*d*n2 + 4*n1*n2 + 2*n2^2 - 22*n6 + 8*d*n6 - 4*n1*n6 - 6*n2*n6)) + 
   ((8 - 2*d + 4*n2)*j[p4, n1, 1 + n2, 0, 0, 0, -1 + n6, 0, 1, 0, 2, 1, 0, 0, 
      1])/(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 4*n1*n2 - 2*n2^2 + 
     22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6) + 
   ((-40 + 66*d - 30*d^2 + 4*d^3 - 16*n1 + 20*d*n1 - 4*d^2*n1 - 28*n2 + 
      38*d*n2 - 10*d^2*n2 - 8*n1*n2 + 8*d*n1*n2 - 4*n2^2 + 4*d*n2^2 - 40*n6 + 
      26*d*n6 - 4*d^2*n6 - 16*n1*n6 + 4*d*n1*n6 - 28*n2*n6 + 10*d*n2*n6 - 
      8*n1*n2*n6 - 4*n2^2*n6)*j[p4, n1, 1 + n2, 0, 0, 0, -1 + n6, 0, 2, 0, 1, 
      0, 0, 1, 1])/((-2 + d)*(d - 2*n6)*(-30 + 11*d - 12*n1 + 2*d*n1 - 
      16*n2 + 3*d*n2 - 4*n1*n2 - 2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 
      6*n2*n6)) + ((8 - 2*d + 4*n2)*j[p4, n1, 1 + n2, 0, 0, 0, -1 + n6, 0, 2, 
      0, 1, 1, 0, 0, 1])/(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 
     4*n1*n2 - 2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6) + 
   ((20 - 13*d + 2*d^2 + 8*n1 - 2*d*n1 + 14*n2 - 5*d*n2 + 4*n1*n2 + 2*n2^2)*
     j[p4, n1, 1 + n2, 0, 0, 0, n6, -1, 0, 0, 1, 2, 0, 1, 1])/
    ((-2 + d)*(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 4*n1*n2 - 
      2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6)) + 
   ((-40 + 26*d - 4*d^2 - 16*n1 + 4*d*n1 - 28*n2 + 10*d*n2 - 8*n1*n2 - 
      4*n2^2)*j[p4, n1, 1 + n2, 0, 0, 0, n6, -1, 1, 0, 1, 1, 0, 0, 2])/
    ((d - 2*n6)*(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 4*n1*n2 - 
      2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6)) + 
   ((20 - 13*d + 2*d^2 + 8*n1 - 2*d*n1 + 14*n2 - 5*d*n2 + 4*n1*n2 + 2*n2^2)*
     j[p4, n1, 1 + n2, 0, 0, 0, n6, -1, 2, 0, 1, 0, 0, 1, 1])/
    ((-2 + d)*(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 4*n1*n2 - 
      2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6)) + 
   ((40 - 50*d + 18*d^2 - 2*d^3 + 16*n1 - 20*d*n1 + 4*d^2*n1 + 28*n2 - 
      30*d*n2 + 6*d^2*n2 + 8*n1*n2 - 8*d*n1*n2 + 4*n2^2 - 4*d*n2^2 + 8*n6 - 
      2*d*n6 + 16*n1*n6 - 4*d*n1*n6 + 12*n2*n6 - 2*d*n2*n6 + 8*n1*n2*n6 + 
      4*n2^2*n6)*j[p4, n1, 1 + n2, 0, 0, 0, n6, 0, 0, -1, 1, 2, 0, 1, 1])/
    ((-2 + d)*(d - 2*n6)*(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 
      4*n1*n2 - 2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6)) + 
   ((-8 + 2*d - 4*n2)*j[p4, n1, 1 + n2, 0, 0, 0, n6, 0, 0, -1, 2, 1, 0, 1, 
      1])/(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 4*n1*n2 - 2*n2^2 + 
     22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6) + 
   ((20 + 3*d - 10*d^2 + 2*d^3 + 8*n1 + 6*d*n1 - 2*d^2*n1 + 14*n2 + 11*d*n2 - 
      6*d^2*n2 + 4*n1*n2 + 4*d*n1*n2 + 2*n2^2 + 4*d*n2^2 + 8*n6 + 14*d*n6 - 
      4*d^2*n6 - 4*n2*n6 + 10*d*n2*n6 - 4*n2^2*n6 - 32*n6^2 + 8*d*n6^2 - 
      16*n2*n6^2)*j[p4, n1, 1 + n2, 0, 0, 0, n6, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((d - 2*n6)*(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 4*n1*n2 - 
      2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6)) + 
   ((8 - 2*d + 4*n2)*j[p4, n1, 1 + n2, 0, 0, 0, n6, 0, 0, 0, 1, 2, -1, 1, 1])/
    (-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 4*n1*n2 - 2*n2^2 + 
     22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6) + 
   ((-8 + 2*d - 4*n2)*j[p4, n1, 1 + n2, 0, 0, 0, n6, 0, 0, 0, 1, 2, 0, 1, 1])/
    (-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 4*n1*n2 - 2*n2^2 + 
     22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6) + 
   ((-8 + 2*d - 4*n2)*j[p4, n1, 1 + n2, 0, 0, 0, n6, 0, 1, -1, 2, 1, 0, 0, 
      1])/(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 4*n1*n2 - 2*n2^2 + 
     22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6) + 
   ((-90 + 131*d - 60*d^2 + 8*d^3 - 36*n1 + 34*d*n1 - 6*d^2*n1 - 78*n2 + 
      73*d*n2 - 18*d^2*n2 - 24*n1*n2 + 12*d*n1*n2 - 12*n2^2 + 6*d*n2^2 - 
      80*n6 + 66*d*n6 - 10*d^2*n6 - 24*n1*n6 + 4*d*n1*n6 - 26*n2*n6 + 
      18*d*n2*n6 - 4*n1*n2*n6 - 2*n2^2*n6 - 10*n6^2 + 4*n1*n6^2 - 10*n2*n6^2)*
     j[p4, n1, 1 + n2, 0, 0, 0, n6, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((d - 2*n6)*(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 4*n1*n2 - 
      2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6)) + 
   ((8 - 2*d + 4*n2)*j[p4, n1, 1 + n2, 0, 0, 0, n6, 0, 1, 0, 0, 2, -1, 1, 1])/
    (-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 4*n1*n2 - 2*n2^2 + 
     22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6) + 
   ((-8 + 2*d - 4*n2)*j[p4, n1, 1 + n2, 0, 0, 0, n6, 0, 1, 0, 0, 2, 0, 1, 1])/
    (-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 4*n1*n2 - 2*n2^2 + 
     22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6) + 
   ((20 - 13*d + 2*d^2 + 8*n1 - 10*d*n1 + 2*d^2*n1 + 14*n2 - 5*d*n2 + 
      4*n1*n2 - 4*d*n1*n2 + 2*n2^2 + 16*n1*n6 - 4*d*n1*n6 + 8*n1*n2*n6)*
     j[p4, n1, 1 + n2, 0, 0, 0, n6, 0, 1, 0, 1, 0, 0, 1, 1])/
    ((d - 2*n6)*(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 4*n1*n2 - 
      2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6)) + 
   ((40 - 26*d + 4*d^2 + 16*n1 - 4*d*n1 + 28*n2 - 10*d*n2 + 8*n1*n2 + 4*n2^2)*
     j[p4, n1, 1 + n2, 0, 0, 0, n6, 0, 1, 0, 1, 1, -1, 0, 2])/
    ((d - 2*n6)*(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 4*n1*n2 - 
      2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6)) + 
   ((-40 + 58*d - 20*d^2 + 2*d^3 - 16*n1 + 4*d*n1 - 28*n2 + 42*d*n2 - 
      8*d^2*n2 - 8*n1*n2 - 4*n2^2 + 8*d*n2^2 - 64*n6 + 48*d*n6 - 8*d^2*n6 - 
      64*n2*n6 + 24*d*n2*n6 - 16*n2^2*n6 - 32*n6^2 + 8*d*n6^2 - 16*n2*n6^2)*
     j[p4, n1, 1 + n2, 0, 0, 0, n6, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((d - 2*n6)*(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 4*n1*n2 - 
      2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6)) + 
   ((-8 - 6*d + 2*d^2 - 4*n2 - 4*d*n2 + 16*n6 - 4*d*n6 + 8*n2*n6)*
     j[p4, n1, 1 + n2, 0, 0, 0, n6, 0, 1, 0, 1, 1, 0, 1, 0])/
    (-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 4*n1*n2 - 2*n2^2 + 
     22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6) + 
   ((-24 + 22*d - 4*d^2 - 8*n1 + 2*d*n1 - 20*n2 + 10*d*n2 - 4*n1*n2 - 
      4*n2^2 - 16*n6 + 4*d*n6 - 8*n2*n6)*j[p4, n1, 1 + n2, 0, 0, 0, n6, 0, 1, 
      0, 1, 1, 0, 1, 1])/(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 
     4*n1*n2 - 2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6) + 
   ((8 - 2*d + 4*n2)*j[p4, n1, 1 + n2, 0, 0, 0, n6, 0, 1, 0, 1, 1, 0, 2, 0])/
    (-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 4*n1*n2 - 2*n2^2 + 
     22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6) + 
   ((40*n6 - 26*d*n6 + 4*d^2*n6 + 16*n1*n6 - 4*d*n1*n6 + 28*n2*n6 - 
      10*d*n2*n6 + 8*n1*n2*n6 + 4*n2^2*n6)*j[p4, n1, 1 + n2, 0, 0, 0, 1 + n6, 
      -1, 0, 0, 1, 1, 0, 1, 1])/((d - 2*n6)*(-30 + 11*d - 12*n1 + 2*d*n1 - 
      16*n2 + 3*d*n2 - 4*n1*n2 - 2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 
      6*n2*n6)) + ((-40*n6 + 26*d*n6 - 4*d^2*n6 - 16*n1*n6 + 4*d*n1*n6 - 
      28*n2*n6 + 10*d*n2*n6 - 8*n1*n2*n6 - 4*n2^2*n6)*
     j[p4, n1, 1 + n2, 0, 0, 0, 1 + n6, 0, 0, 0, 1, 1, -1, 1, 1])/
    ((d - 2*n6)*(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 4*n1*n2 - 
      2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6)) + 
   ((8 - 2*d + 12*n2 - 2*d*n2 + 4*n2^2)*j[p4, n1, 2 + n2, -1, 0, 0, n6, 0, 1, 
      0, 0, 1, 0, 1, 1])/(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 
     4*n1*n2 - 2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6) + 
   ((-8 + 2*d - 12*n2 + 2*d*n2 - 4*n2^2)*j[p4, n1, 2 + n2, 0, 0, -1, n6, 0, 
      0, 0, 1, 1, 0, 1, 1])/(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 
     4*n1*n2 - 2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6) + 
   ((10 + 10*d - 4*d^2 + 4*n1 + 12*n2 + 16*d*n2 - 4*d^2*n2 + 4*n1*n2 + 
      2*n2^2 + 6*d*n2^2 - 38*n6 + 12*d*n6 - 4*n1*n6 - 52*n2*n6 + 12*d*n2*n6 - 
      4*n1*n2*n6 - 14*n2^2*n6)*j[p4, n1, 2 + n2, 0, 0, -1, n6, 0, 1, 0, 0, 1, 
      0, 1, 1])/((d - 2*n6)*(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 
      4*n1*n2 - 2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6)) + 
   ((-16 + 4*d - 24*n2 + 4*d*n2 - 8*n2^2)*j[p4, n1, 2 + n2, 0, 0, -1, n6, 0, 
      1, 0, 1, 1, 0, 0, 1])/(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 
     4*n1*n2 - 2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6) + 
   ((8 - 2*d + 12*n2 - 2*d*n2 + 4*n2^2)*j[p4, n1, 2 + n2, 0, 0, 0, -1 + n6, 
      0, 0, 0, 1, 1, 0, 1, 1])/(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 
     3*d*n2 - 4*n1*n2 - 2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6) + 
   ((-70 + 118*d - 58*d^2 + 8*d^3 - 28*n1 + 24*d*n1 - 4*d^2*n1 - 124*n2 + 
      188*d*n2 - 78*d^2*n2 + 8*d^3*n2 - 44*n1*n2 + 32*d*n1*n2 - 4*d^2*n1*n2 - 
      62*n2^2 + 78*d*n2^2 - 20*d^2*n2^2 - 16*n1*n2^2 + 8*d*n1*n2^2 - 8*n2^3 + 
      8*d*n2^3 - 80*n6 + 66*d*n6 - 10*d^2*n6 - 8*n1*n6 - 128*n2*n6 + 
      92*d*n2*n6 - 10*d^2*n2*n6 - 8*n1*n2*n6 - 56*n2^2*n6 + 26*d*n2^2*n6 - 
      8*n2^3*n6 - 10*n6^2 + 4*n1*n6^2 - 20*n2*n6^2 + 4*n1*n2*n6^2 - 
      10*n2^2*n6^2)*j[p4, n1, 2 + n2, 0, 0, 0, -1 + n6, 0, 1, 0, 0, 1, 0, 1, 
      1])/((-1 + n6)*(-d + 2*n6)*(30 - 11*d + 12*n1 - 2*d*n1 + 16*n2 - 
      3*d*n2 + 4*n1*n2 + 2*n2^2 - 22*n6 + 8*d*n6 - 4*n1*n6 - 6*n2*n6)) + 
   ((16 - 4*d + 24*n2 - 4*d*n2 + 8*n2^2)*j[p4, n1, 2 + n2, 0, 0, 0, -1 + n6, 
      0, 1, 0, 1, 1, 0, 0, 1])/(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 
     3*d*n2 - 4*n1*n2 - 2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6) + 
   ((-8 + 2*d - 12*n2 + 2*d*n2 - 4*n2^2)*j[p4, n1, 2 + n2, 0, 0, 0, n6, -1, 
      1, 0, 0, 1, 0, 1, 1])/(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 
     4*n1*n2 - 2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6) + 
   ((8 - 2*d + 12*n2 - 2*d*n2 + 4*n2^2)*j[p4, n1, 2 + n2, 0, 0, 0, n6, -1, 1, 
      0, 1, 1, 0, 1, 1])/(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 
     4*n1*n2 - 2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6) + 
   ((-8 + 2*d - 12*n2 + 2*d*n2 - 4*n2^2)*j[p4, n1, 2 + n2, 0, 0, 0, n6, 0, 0, 
      0, 1, 1, 0, 1, 1])/(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 
     4*n1*n2 - 2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6) + 
   ((8*n1 - 2*d*n1 + 4*n1*n2)*j[p4, 1 + n1, n2, 0, 0, 0, n6, 0, 1, 0, 1, 1, 
      0, 0, 1])/(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 4*n1*n2 - 
     2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6) + 
   ((-8*n1 + 2*d*n1 - 4*n1*n2)*j[p4, 1 + n1, 1 + n2, 0, 0, -1, n6, 0, 1, 0, 
      1, 1, 0, 0, 1])/(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 
     4*n1*n2 - 2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6) + 
   ((-8*n1 + 2*d*n1 - 4*n1*n2)*j[p4, 1 + n1, 1 + n2, 0, 0, 0, n6, 0, 0, 0, 1, 
      1, 0, 1, 1])/(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 4*n1*n2 - 
     2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6) + 
   ((8*n1 - 2*d*n1 + 4*n1*n2)*j[p4, 1 + n1, 1 + n2, 0, 0, 0, n6, 0, 1, -1, 1, 
      1, 0, 0, 1])/(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 4*n1*n2 - 
     2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6) + 
   ((-8*n1 + 2*d*n1 - 4*n1*n2)*j[p4, 1 + n1, 1 + n2, 0, 0, 0, n6, 0, 1, 0, 0, 
      1, 0, 1, 1])/(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 4*n1*n2 - 
     2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6) + 
   ((8*n1 - 2*d*n1 + 4*n1*n2)*j[p4, 1 + n1, 1 + n2, 0, 0, 0, n6, 0, 1, 0, 1, 
      0, 0, 1, 1])/(-30 + 11*d - 12*n1 + 2*d*n1 - 16*n2 + 3*d*n2 - 4*n1*n2 - 
     2*n2^2 + 22*n6 - 8*d*n6 + 4*n1*n6 + 6*n2*n6), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n4 == 0 && n5 == 0 && n6 == 1 && n7 == -1 && n9 == 0 && 
     !(n3 == 0 || n8 == 1) -> 
  ((1 + n3)*j[p4, -1, -1 + n2, 2 + n3, 0, 0, 1, -1, n8, 0, 1, 1, 0, 1, 1])/
    (2*(1 + d - 2*n2 + n3 - n8)) + j[p4, -1, n2, 1 + n3, 0, 0, 1, -1, n8, 0, 
     0, 2, 0, 1, 1]/(-1 - d + 2*n2 - n3 + n8) + 
   ((28 - 4*d - 6*d^2 - 26*n2 + 23*d*n2 - 10*n2^2 + 34*n3 - 9*d*n3 - 
      8*n2*n3 + 10*n3^2 + 2*n8 + 3*d*n8 - 10*n2*n8 + 6*n3*n8)*
     j[p4, -1, n2, 1 + n3, 0, 0, 1, -1, n8, 0, 1, 1, 0, 1, 1])/
    (2*(6 - 3*d + 2*n2 + 2*n3)*(-1 - d + 2*n2 - n3 + n8)) + 
   ((-2 + 2*n2 - 2*n3)*j[p4, -1, n2, 1 + n3, 0, 0, 1, -1, n8, 0, 2, 1, 0, 0, 
      1])/((6 - 3*d + 2*n2 + 2*n3)*(-1 - d + 2*n2 - n3 + n8)) + 
   ((-1 - n3)*j[p4, -1, n2, 2 + n3, 0, 0, 1, -1, n8, 0, 1, 1, 0, 0, 1])/
    (2*(1 + d - 2*n2 + n3 - n8)) + ((-10*n2 + 3*d*n2 + 2*n2^2 - 6*n2*n3)*
     j[p4, -1, 1 + n2, n3, 0, 0, 1, -1, n8, 0, 1, 1, 0, 1, 1])/
    (2*(6 - 3*d + 2*n2 + 2*n3)*(-1 - d + 2*n2 - n3 + n8)) + 
   (n2*j[p4, -1, 1 + n2, 1 + n3, 0, 0, 1, -1, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (2*(-1 - d + 2*n2 - n3 + n8)) + 
   ((1 - d + n2)*j[p4, 0, -1 + n2, 1 + n3, 0, 0, 1, -1, n8, 0, 1, 1, 0, 1, 
      1])/(-1 - d + 2*n2 - n3 + n8) + 
   ((2 - 2*n2 + 2*n3)*j[p4, 0, -1 + n2, 1 + n3, 0, 0, 1, -1, n8, 0, 2, 0, 0, 
      1, 1])/((6 - 3*d + 2*n2 + 2*n3)*(-1 - d + 2*n2 - n3 + n8)) + 
   ((2 - 2*n2 + 2*n3)*j[p4, 0, -1 + n2, 1 + n3, 0, 0, 1, -1, n8, 0, 2, 1, 0, 
      0, 1])/((6 - 3*d + 2*n2 + 2*n3)*(-1 - d + 2*n2 - n3 + n8)) + 
   (n8*j[p4, 0, -1 + n2, 1 + n3, 0, 0, 1, -1, 1 + n8, 0, 1, 0, 0, 1, 1])/
    (2*(-1 - d + 2*n2 - n3 + n8)) + 
   (n8*j[p4, 0, -1 + n2, 1 + n3, 0, 0, 1, -1, 1 + n8, 0, 1, 1, 0, 0, 1])/
    (2*(-1 - d + 2*n2 - n3 + n8)) + j[p4, 0, -1 + n2, 1 + n3, 0, 0, 1, 0, n8, 
     0, 0, 1, 0, 1, 1]/(2*(-1 - d + 2*n2 - n3 + n8)) - 
   j[p4, 0, -1 + n2, 1 + n3, 0, 0, 1, 0, n8, 0, 1, 0, 0, 1, 1]/
    (2*(-1 - d + 2*n2 - n3 + n8)) + 
   ((-2 + 2*n2 - 2*n3)*j[p4, 0, -1 + n2, 1 + n3, 0, 0, 1, 0, n8, 0, 1, 1, 0, 
      0, 1])/((6 - 3*d + 2*n2 + 2*n3)*(-1 - d + 2*n2 - n3 + n8)) + 
   ((-1 + n2 - n3)*j[p4, 0, -1 + n2, 1 + n3, 0, 0, 2, -1, -1 + n8, 0, 1, 1, 
      0, 1, 1])/((6 - 3*d + 2*n2 + 2*n3)*(-1 - d + 2*n2 - n3 + n8)) + 
   ((1 - n2 + n3)*j[p4, 0, -1 + n2, 1 + n3, 0, 0, 2, -1, n8, 0, 0, 1, 0, 1, 
      1])/((6 - 3*d + 2*n2 + 2*n3)*(-1 - d + 2*n2 - n3 + n8)) + 
   ((-1 - n3)*j[p4, 0, -1 + n2, 2 + n3, 0, 0, 1, -1, -1 + n8, 0, 1, 1, 0, 1, 
      1])/(2*(1 + d - 2*n2 + n3 - n8)) + 
   ((1 + n3)*j[p4, 0, -1 + n2, 2 + n3, 0, 0, 1, -1, n8, 0, 0, 1, 0, 1, 1])/
    (2*(1 + d - 2*n2 + n3 - n8)) + 
   ((-1 - n3)*j[p4, 0, -1 + n2, 2 + n3, 0, 0, 1, -1, n8, 0, 1, 0, 0, 1, 1])/
    (2*(1 + d - 2*n2 + n3 - n8)) + 
   ((1 + n3)*j[p4, 0, -1 + n2, 2 + n3, 0, 0, 1, -1, n8, 0, 1, 1, -1, 1, 1])/
    (2*(1 + d - 2*n2 + n3 - n8)) + 
   ((-1 - n3)*j[p4, 0, -1 + n2, 2 + n3, 0, 0, 1, -1, n8, 0, 1, 1, 0, 0, 1])/
    (2*(1 + d - 2*n2 + n3 - n8)) + 
   ((-1 - n3)*j[p4, 0, -1 + n2, 2 + n3, 0, 0, 1, -1, n8, 0, 1, 1, 0, 1, 1])/
    (2*(1 + d - 2*n2 + n3 - n8)) + 
   ((-2 + 2*n2 - 2*n3)*j[p4, 0, n2, n3, 0, 0, 0, -1, n8, 0, 1, 1, 0, 1, 2])/
    ((6 - 3*d + 2*n2 + 2*n3)*(-1 - d + 2*n2 - n3 + n8)) + 
   ((-2 + 2*n2 - 2*n3)*j[p4, 0, n2, n3, 0, 0, 1, -1, n8, 0, 1, 1, 0, 0, 2])/
    ((6 - 3*d + 2*n2 + 2*n3)*(-1 - d + 2*n2 - n3 + n8)) + 
   ((2 - 2*n2 + 2*n3)*j[p4, 0, n2, n3, 0, 0, 1, -1, n8, 0, 2, 0, 0, 1, 1])/
    ((6 - 3*d + 2*n2 + 2*n3)*(-1 - d + 2*n2 - n3 + n8)) + 
   ((-10 + 3*d + 2*n2 - 6*n3)*j[p4, 0, n2, n3, 0, 0, 1, 0, n8, 0, 0, 1, 0, 1, 
      1])/(2*(6 - 3*d + 2*n2 + 2*n3)*(-1 - d + 2*n2 - n3 + n8)) + 
   ((10 - 3*d - 2*n2 + 6*n3)*j[p4, 0, n2, n3, 0, 0, 1, 0, n8, 0, 1, 0, 0, 1, 
      1])/(2*(6 - 3*d + 2*n2 + 2*n3)*(-1 - d + 2*n2 - n3 + n8)) + 
   ((-1 + n2 - n3)*j[p4, 0, n2, n3, 0, 0, 2, -1, -1 + n8, 0, 1, 1, 0, 1, 1])/
    ((6 - 3*d + 2*n2 + 2*n3)*(-1 - d + 2*n2 - n3 + n8)) + 
   ((1 - n2 + n3)*j[p4, 0, n2, n3, 0, 0, 2, -1, n8, 0, 0, 1, 0, 1, 1])/
    ((6 - 3*d + 2*n2 + 2*n3)*(-1 - d + 2*n2 - n3 + n8)) + 
   ((2 - 2*n2 + 2*n3)*j[p4, 0, n2, 1 + n3, -1, 0, 0, -1, n8, 0, 1, 1, 0, 1, 
      2])/((6 - 3*d + 2*n2 + 2*n3)*(-1 - d + 2*n2 - n3 + n8)) + 
   ((2 - 2*n2 + 2*n3)*j[p4, 0, n2, 1 + n3, -1, 0, 1, -1, n8, 0, 1, 1, 0, 0, 
      2])/((6 - 3*d + 2*n2 + 2*n3)*(-1 - d + 2*n2 - n3 + n8)) + 
   ((2 - 2*n2 + 2*n3)*j[p4, 0, n2, 1 + n3, -1, 0, 2, -1, n8, 0, 0, 1, 0, 1, 
      1])/((6 - 3*d + 2*n2 + 2*n3)*(-1 - d + 2*n2 - n3 + n8)) + 
   ((-1 + n2 - n3)*j[p4, 0, n2, 1 + n3, 0, 0, 0, -1, n8, -1, 1, 1, 0, 1, 2])/
    ((6 - 3*d + 2*n2 + 2*n3)*(-1 - d + 2*n2 - n3 + n8)) + 
   ((-1 + n2 - n3)*j[p4, 0, n2, 1 + n3, 0, 0, 0, -1, n8, 0, 1, 1, 0, 1, 1])/
    ((6 - 3*d + 2*n2 + 2*n3)*(-1 - d + 2*n2 - n3 + n8)) + 
   ((1 - n2 + n3)*j[p4, 0, n2, 1 + n3, 0, 0, 0, -1, n8, 0, 1, 1, 0, 1, 2])/
    ((6 - 3*d + 2*n2 + 2*n3)*(-1 - d + 2*n2 - n3 + n8)) + 
   ((-2 + 2*n2 - 2*n3)*j[p4, 0, n2, 1 + n3, 0, 0, 1, -2, n8, 0, 2, 0, 0, 1, 
      1])/((6 - 3*d + 2*n2 + 2*n3)*(-1 - d + 2*n2 - n3 + n8)) + 
   ((-2 + 2*n2 - 2*n3)*j[p4, 0, n2, 1 + n3, 0, 0, 1, -2, n8, 0, 2, 1, 0, 0, 
      1])/((6 - 3*d + 2*n2 + 2*n3)*(-1 - d + 2*n2 - n3 + n8)) - 
   (n8*j[p4, 0, n2, 1 + n3, 0, 0, 1, -2, 1 + n8, 0, 1, 0, 0, 1, 1])/
    (2*(-1 - d + 2*n2 - n3 + n8)) - 
   (n8*j[p4, 0, n2, 1 + n3, 0, 0, 1, -2, 1 + n8, 0, 1, 1, 0, 0, 1])/
    (2*(-1 - d + 2*n2 - n3 + n8)) - j[p4, 0, n2, 1 + n3, 0, 0, 1, -1, 
     -1 + n8, 0, 0, 2, 0, 1, 1]/(-1 - d + 2*n2 - n3 + n8) + 
   ((-52 + 23*d + 9*d^2 - 3*d^3 + 50*n2 - 53*d*n2 + 11*d^2*n2 + 2*n2^2 - 
      2*d*n2^2 - 86*n3 + 37*d*n3 - d^2*n3 + 54*n2*n3 - 21*d*n2*n3 + 
      2*n2^2*n3 - 50*n3^2 + 12*d*n3^2 + 10*n2*n3^2 - 8*n3^3 - 2*n8 - 6*d*n8 + 
      30*n2*n8 - 6*d*n2*n8 + 4*n2^2*n8 - 16*n3*n8 + 3*d*n3*n8 + 2*n2*n3*n8 - 
      2*n3^2*n8 - 6*n8^2 + 3*d*n8^2 - 2*n2*n8^2 - 2*n3*n8^2)*
     j[p4, 0, n2, 1 + n3, 0, 0, 1, -1, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (2*(-6 + 3*d - 2*n2 - 2*n3)*(-1 + n8)*(-1 - d + 2*n2 - n3 + n8)) + 
   ((-2 + 2*n2 - 2*n3)*j[p4, 0, n2, 1 + n3, 0, 0, 1, -1, -1 + n8, 0, 2, 0, 0, 
      1, 1])/((6 - 3*d + 2*n2 + 2*n3)*(-1 - d + 2*n2 - n3 + n8)) + 
   ((-1 + n2 - n3)*j[p4, 0, n2, 1 + n3, 0, 0, 1, -1, n8, -1, 1, 1, 0, 0, 2])/
    ((6 - 3*d + 2*n2 + 2*n3)*(-1 - d + 2*n2 - n3 + n8)) + 
   ((-8 + 3*d - 4*n2*n3 + 4*n3^2)*j[p4, 0, n2, 1 + n3, 0, 0, 1, -1, n8, 0, 0, 
      1, 0, 1, 1])/(2*(6 - 3*d + 2*n2 + 2*n3)*(-1 - d + 2*n2 - n3 + n8)) + 
   j[p4, 0, n2, 1 + n3, 0, 0, 1, -1, n8, 0, 0, 2, -1, 1, 1]/
    (2*(-1 - d + 2*n2 - n3 + n8)) - j[p4, 0, n2, 1 + n3, 0, 0, 1, -1, n8, 0, 
     0, 2, 0, 1, 1]/(2*(-1 - d + 2*n2 - n3 + n8)) + 
   ((6 - 3*d + 2*n2 - 2*n3 + 4*n2*n3 - 4*n3^2)*j[p4, 0, n2, 1 + n3, 0, 0, 1, 
      -1, n8, 0, 1, 0, 0, 1, 1])/(2*(6 - 3*d + 2*n2 + 2*n3)*
     (-1 - d + 2*n2 - n3 + n8)) + 
   ((6*d - 3*d^2 - 2*n2 + 5*d*n2 - 6*n2^2 + 2*n3 - d*n3 + 8*n2*n3 - 2*n3^2 + 
      2*n8 + 3*d*n8 - 10*n2*n8 + 6*n3*n8)*j[p4, 0, n2, 1 + n3, 0, 0, 1, -1, 
      n8, 0, 1, 1, 0, 0, 1])/(2*(6 - 3*d + 2*n2 + 2*n3)*
     (-1 - d + 2*n2 - n3 + n8)) + 
   ((1 - n2 + n3)*j[p4, 0, n2, 1 + n3, 0, 0, 1, -1, n8, 0, 1, 1, 0, 0, 2])/
    ((6 - 3*d + 2*n2 + 2*n3)*(-1 - d + 2*n2 - n3 + n8)) + 
   ((1 - n2 + n3)*j[p4, 0, n2, 1 + n3, 0, 0, 1, -1, n8, 0, 1, 1, 0, 1, 0])/
    ((6 - 3*d + 2*n2 + 2*n3)*(-1 - d + 2*n2 - n3 + n8)) + 
   ((-8 + 3*d^2 + 10*n2 - 11*d*n2 + 6*n2^2 - 12*n3 + 4*d*n3 + 2*n2*n3 - 
      4*n3^2 - 8*n8 + 8*n2*n8 - 8*n3*n8)*j[p4, 0, n2, 1 + n3, 0, 0, 1, -1, 
      n8, 0, 1, 1, 0, 1, 1])/(2*(6 - 3*d + 2*n2 + 2*n3)*
     (-1 - d + 2*n2 - n3 + n8)) + 
   ((2 - 2*n2 + 2*n3)*j[p4, 0, n2, 1 + n3, 0, 0, 1, -1, n8, 0, 2, 0, -1, 1, 
      1])/((6 - 3*d + 2*n2 + 2*n3)*(-1 - d + 2*n2 - n3 + n8)) + 
   ((-2 + 2*n2 - 2*n3)*j[p4, 0, n2, 1 + n3, 0, 0, 1, -1, n8, 0, 2, 0, 0, 1, 
      1])/((6 - 3*d + 2*n2 + 2*n3)*(-1 - d + 2*n2 - n3 + n8)) + 
   ((2 - 2*n2 + 2*n3)*j[p4, 0, n2, 1 + n3, 0, 0, 1, 0, -1 + n8, 0, 1, 1, 0, 
      0, 1])/((6 - 3*d + 2*n2 + 2*n3)*(-1 - d + 2*n2 - n3 + n8)) + 
   ((1 - n2 + n3)*j[p4, 0, n2, 1 + n3, 0, 0, 2, -2, -1 + n8, 0, 1, 1, 0, 1, 
      1])/((6 - 3*d + 2*n2 + 2*n3)*(-1 - d + 2*n2 - n3 + n8)) + 
   ((-1 + n2 - n3)*j[p4, 0, n2, 1 + n3, 0, 0, 2, -2, n8, 0, 0, 1, 0, 1, 1])/
    ((6 - 3*d + 2*n2 + 2*n3)*(-1 - d + 2*n2 - n3 + n8)) + 
   ((1 - n2 + n3)*j[p4, 0, n2, 1 + n3, 0, 0, 2, -1, -2 + n8, 0, 1, 1, 0, 1, 
      1])/((6 - 3*d + 2*n2 + 2*n3)*(-1 - d + 2*n2 - n3 + n8)) + 
   ((-2 + 2*n2 - 2*n3)*j[p4, 0, n2, 1 + n3, 0, 0, 2, -1, -1 + n8, -1, 1, 1, 
      0, 1, 1])/((6 - 3*d + 2*n2 + 2*n3)*(-1 - d + 2*n2 - n3 + n8)) + 
   ((-1 + n2 - n3)*j[p4, 0, n2, 1 + n3, 0, 0, 2, -1, -1 + n8, 0, 0, 1, 0, 1, 
      1])/((6 - 3*d + 2*n2 + 2*n3)*(-1 - d + 2*n2 - n3 + n8)) + 
   ((-1 + n2 - n3)*j[p4, 0, n2, 1 + n3, 0, 0, 2, -1, -1 + n8, 0, 1, 1, -1, 1, 
      1])/((6 - 3*d + 2*n2 + 2*n3)*(-1 - d + 2*n2 - n3 + n8)) + 
   ((1 - n2 + n3)*j[p4, 0, n2, 1 + n3, 0, 0, 2, -1, -1 + n8, 0, 1, 1, 0, 0, 
      1])/((6 - 3*d + 2*n2 + 2*n3)*(-1 - d + 2*n2 - n3 + n8)) + 
   ((1 - n2 + n3)*j[p4, 0, n2, 1 + n3, 0, 0, 2, -1, -1 + n8, 0, 1, 1, 0, 1, 
      0])/((6 - 3*d + 2*n2 + 2*n3)*(-1 - d + 2*n2 - n3 + n8)) + 
   ((-1 + n2 - n3)*j[p4, 0, n2, 1 + n3, 0, 0, 2, -1, n8, -1, 1, 1, 0, 0, 1])/
    ((6 - 3*d + 2*n2 + 2*n3)*(-1 - d + 2*n2 - n3 + n8)) + 
   ((-1 + n2 - n3)*j[p4, 0, n2, 1 + n3, 0, 0, 2, -1, n8, -1, 1, 1, 0, 1, 0])/
    ((6 - 3*d + 2*n2 + 2*n3)*(-1 - d + 2*n2 - n3 + n8)) + 
   ((1 - n2 + n3)*j[p4, 0, n2, 1 + n3, 0, 0, 2, -1, n8, 0, 0, 1, -1, 1, 1])/
    ((6 - 3*d + 2*n2 + 2*n3)*(-1 - d + 2*n2 - n3 + n8)) + 
   ((24 - 6*d - 3*d^2 - 14*n2 + 11*d*n2 - 2*n2^2 + 48*n3 - 10*d*n3 - 
      3*d^2*n3 - 24*n2*n3 + 11*d*n2*n3 - 2*n2^2*n3 + 32*n3^2 - 4*d*n3^2 - 
      10*n2*n3^2 + 8*n3^3 - 4*n8 + 6*d*n8 - 12*n2*n8 + 6*d*n3*n8 - 
      12*n2*n3*n8 + 4*n3^2*n8)*j[p4, 0, n2, 2 + n3, 0, 0, 1, -2, -1 + n8, 0, 
      1, 1, 0, 1, 1])/(2*(-6 + 3*d - 2*n2 - 2*n3)*(-1 + n8)*
     (-1 - d + 2*n2 - n3 + n8)) + 
   ((-1 - n3)*j[p4, 0, n2, 2 + n3, 0, 0, 1, -2, n8, 0, 0, 1, 0, 1, 1])/
    (2*(1 + d - 2*n2 + n3 - n8)) + 
   ((1 + n3)*j[p4, 0, n2, 2 + n3, 0, 0, 1, -2, n8, 0, 1, 0, 0, 1, 1])/
    (2*(1 + d - 2*n2 + n3 - n8)) + 
   ((1 + n3)*j[p4, 0, n2, 2 + n3, 0, 0, 1, -2, n8, 0, 1, 1, 0, 0, 1])/
    (2*(1 + d - 2*n2 + n3 - n8)) + 
   ((1 + n3)*j[p4, 0, n2, 2 + n3, 0, 0, 1, -2, n8, 0, 1, 1, 0, 1, 1])/
    (2*(1 + d - 2*n2 + n3 - n8)) + 
   ((-30 + 9*d + 3*d^2 + 12*n2 - 11*d*n2 + 2*n2^2 - 56*n3 + 13*d*n3 + 
      3*d^2*n3 + 22*n2*n3 - 11*d*n2*n3 + 2*n2^2*n3 - 34*n3^2 + 4*d*n3^2 + 
      10*n2*n3^2 - 8*n3^3 + 10*n8 - 9*d*n8 + 14*n2*n8 + 8*n3*n8 - 9*d*n3*n8 + 
      14*n2*n3*n8 - 2*n3^2*n8)*j[p4, 0, n2, 2 + n3, 0, 0, 1, -1, -1 + n8, 0, 
      1, 1, 0, 0, 1])/(2*(-6 + 3*d - 2*n2 - 2*n3)*(-1 + n8)*
     (-1 - d + 2*n2 - n3 + n8)) + 
   ((-1 - n3)*j[p4, 0, n2, 2 + n3, 0, 0, 1, -1, n8, 0, 1, 1, -1, 0, 1])/
    (2*(1 + d - 2*n2 + n3 - n8)) + 
   ((-26*n2 + 3*d*n2 + 3*d^2*n2 + 24*n2^2 - 11*d*n2^2 + 2*n2^3 - 30*n2*n3 + 
      4*d*n2*n3 + 10*n2^2*n3 - 8*n2*n3^2 + 6*n2*n8 - 3*d*n2*n8 + 2*n2^2*n8 + 
      2*n2*n3*n8)*j[p4, 0, 1 + n2, n3, 0, 0, 1, -1, -1 + n8, 0, 1, 1, 0, 1, 
      1])/(2*(6 - 3*d + 2*n2 + 2*n3)*(-1 + n8)*(-1 - d + 2*n2 - n3 + n8)) + 
   ((10*n2 - 3*d*n2 - 2*n2^2 + 6*n2*n3)*j[p4, 0, 1 + n2, n3, 0, 0, 1, -1, n8, 
      0, 0, 1, 0, 1, 1])/(2*(6 - 3*d + 2*n2 + 2*n3)*
     (-1 - d + 2*n2 - n3 + n8)) + 
   ((26*n2 - 3*d*n2 - 3*d^2*n2 - 24*n2^2 + 11*d*n2^2 - 2*n2^3 + 30*n2*n3 - 
      4*d*n2*n3 - 10*n2^2*n3 + 8*n2*n3^2 - 6*n2*n8 + 3*d*n2*n8 - 2*n2^2*n8 - 
      2*n2*n3*n8)*j[p4, 0, 1 + n2, 1 + n3, 0, 0, 1, -2, -1 + n8, 0, 1, 1, 0, 
      1, 1])/(2*(6 - 3*d + 2*n2 + 2*n3)*(-1 + n8)*(-1 - d + 2*n2 - n3 + 
      n8)) - (n2*j[p4, 0, 1 + n2, 1 + n3, 0, 0, 1, -2, n8, 0, 0, 1, 0, 1, 1])/
    (2*(-1 - d + 2*n2 - n3 + n8)) + 
   ((-4*n2 + 4*n2^2 - 4*n2*n3)*j[p4, 0, 1 + n2, 1 + n3, 0, 0, 1, -2, n8, 0, 
      1, 1, 0, 0, 1])/((6 - 3*d + 2*n2 + 2*n3)*(-1 - d + 2*n2 - n3 + n8)) + 
   ((10*n2 - 3*d*n2 - 2*n2^2 + 6*n2*n3)*j[p4, 0, 1 + n2, 1 + n3, 0, 0, 1, -2, 
      n8, 0, 1, 1, 0, 1, 1])/(2*(6 - 3*d + 2*n2 + 2*n3)*
     (-1 - d + 2*n2 - n3 + n8)) + 
   ((26*n2 - 3*d*n2 - 3*d^2*n2 - 24*n2^2 + 11*d*n2^2 - 2*n2^3 + 30*n2*n3 - 
      4*d*n2*n3 - 10*n2^2*n3 + 8*n2*n3^2 - 6*n2*n8 + 3*d*n2*n8 - 2*n2^2*n8 - 
      2*n2*n3*n8)*j[p4, 0, 1 + n2, 1 + n3, 0, 0, 1, -1, -2 + n8, 0, 1, 1, 0, 
      1, 1])/(2*(6 - 3*d + 2*n2 + 2*n3)*(-1 + n8)*(-1 - d + 2*n2 - n3 + 
      n8)) + ((-26*n2 + 3*d*n2 + 3*d^2*n2 + 24*n2^2 - 11*d*n2^2 + 2*n2^3 - 
      30*n2*n3 + 4*d*n2*n3 + 10*n2^2*n3 - 8*n2*n3^2 + 6*n2*n8 - 3*d*n2*n8 + 
      2*n2^2*n8 + 2*n2*n3*n8)*j[p4, 0, 1 + n2, 1 + n3, 0, 0, 1, -1, -1 + n8, 
      0, 1, 1, -1, 1, 1])/(2*(6 - 3*d + 2*n2 + 2*n3)*(-1 + n8)*
     (-1 - d + 2*n2 - n3 + n8)) + 
   ((22*n2 - 3*d*n2 - 3*d^2*n2 - 20*n2^2 + 11*d*n2^2 - 2*n2^3 + 26*n2*n3 - 
      4*d*n2*n3 - 10*n2^2*n3 + 8*n2*n3^2 - 2*n2*n8 + 3*d*n2*n8 - 6*n2^2*n8 + 
      2*n2*n3*n8)*j[p4, 0, 1 + n2, 1 + n3, 0, 0, 1, -1, -1 + n8, 0, 1, 1, 0, 
      0, 1])/((6 - 3*d + 2*n2 + 2*n3)*(-1 + n8)*(-1 - d + 2*n2 - n3 + n8)) + 
   ((-10*n2 + 3*d*n2 + 2*n2^2 - 6*n2*n3)*j[p4, 0, 1 + n2, 1 + n3, 0, 0, 1, 
      -1, -1 + n8, 0, 1, 1, 0, 1, 1])/(2*(6 - 3*d + 2*n2 + 2*n3)*
     (-1 - d + 2*n2 - n3 + n8)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n4 == 0 && n5 == 0 && n6 == 1 && n7 == 0 && n9 == 0 && 
     !(n3 == 0 || n8 == 1) -> 
  ((1 + n3)*j[p4, -1, -1 + n2, 2 + n3, 0, 0, 1, 0, n8, 0, 1, 1, 0, 1, 1])/
    (2*(d - 2*n2 + n3 - n8)) + j[p4, -1, n2, 1 + n3, 0, 0, 1, 0, n8, 0, 0, 2, 
     0, 1, 1]/(-d + 2*n2 - n3 + n8) + 
   ((4 + 12*d - 6*d^2 - 44*n2 + 23*d*n2 - 10*n2^2 + 32*n3 - 9*d*n3 - 
      8*n2*n3 + 10*n3^2 + 3*d*n8 - 10*n2*n8 + 6*n3*n8)*
     j[p4, -1, n2, 1 + n3, 0, 0, 1, 0, n8, 0, 1, 1, 0, 1, 1])/
    (2*(8 - 3*d + 2*n2 + 2*n3)*(-d + 2*n2 - n3 + n8)) + 
   ((-2 + 2*n2 - 2*n3)*j[p4, -1, n2, 1 + n3, 0, 0, 1, 0, n8, 0, 2, 1, 0, 0, 
      1])/((8 - 3*d + 2*n2 + 2*n3)*(-d + 2*n2 - n3 + n8)) + 
   ((-1 - n3)*j[p4, -1, n2, 2 + n3, 0, 0, 1, 0, n8, 0, 1, 1, 0, 0, 1])/
    (2*(d - 2*n2 + n3 - n8)) + ((-12*n2 + 3*d*n2 + 2*n2^2 - 6*n2*n3)*
     j[p4, -1, 1 + n2, n3, 0, 0, 1, 0, n8, 0, 1, 1, 0, 1, 1])/
    (2*(8 - 3*d + 2*n2 + 2*n3)*(-d + 2*n2 - n3 + n8)) + 
   (n2*j[p4, -1, 1 + n2, 1 + n3, 0, 0, 1, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (2*(-d + 2*n2 - n3 + n8)) + 
   ((2 - d + n2)*j[p4, 0, -1 + n2, 1 + n3, 0, 0, 1, 0, n8, 0, 1, 1, 0, 1, 1])/
    (-d + 2*n2 - n3 + n8) + ((2 - 2*n2 + 2*n3)*j[p4, 0, -1 + n2, 1 + n3, 0, 
      0, 1, 0, n8, 0, 2, 0, 0, 1, 1])/((8 - 3*d + 2*n2 + 2*n3)*
     (-d + 2*n2 - n3 + n8)) + ((2 - 2*n2 + 2*n3)*j[p4, 0, -1 + n2, 1 + n3, 0, 
      0, 1, 0, n8, 0, 2, 1, 0, 0, 1])/((8 - 3*d + 2*n2 + 2*n3)*
     (-d + 2*n2 - n3 + n8)) + 
   (n8*j[p4, 0, -1 + n2, 1 + n3, 0, 0, 1, 0, 1 + n8, 0, 1, 0, 0, 1, 1])/
    (2*(-d + 2*n2 - n3 + n8)) + 
   (n8*j[p4, 0, -1 + n2, 1 + n3, 0, 0, 1, 0, 1 + n8, 0, 1, 1, 0, 0, 1])/
    (2*(-d + 2*n2 - n3 + n8)) + 
   ((-1 + n2 - n3)*j[p4, 0, -1 + n2, 1 + n3, 0, 0, 2, 0, -1 + n8, 0, 1, 1, 0, 
      1, 1])/((8 - 3*d + 2*n2 + 2*n3)*(-d + 2*n2 - n3 + n8)) + 
   ((1 - n2 + n3)*j[p4, 0, -1 + n2, 1 + n3, 0, 0, 2, 0, n8, 0, 0, 1, 0, 1, 
      1])/((8 - 3*d + 2*n2 + 2*n3)*(-d + 2*n2 - n3 + n8)) + 
   ((-1 - n3)*j[p4, 0, -1 + n2, 2 + n3, 0, 0, 1, 0, -1 + n8, 0, 1, 1, 0, 1, 
      1])/(2*(d - 2*n2 + n3 - n8)) + 
   ((1 + n3)*j[p4, 0, -1 + n2, 2 + n3, 0, 0, 1, 0, n8, 0, 0, 1, 0, 1, 1])/
    (2*(d - 2*n2 + n3 - n8)) + 
   ((-1 - n3)*j[p4, 0, -1 + n2, 2 + n3, 0, 0, 1, 0, n8, 0, 1, 0, 0, 1, 1])/
    (2*(d - 2*n2 + n3 - n8)) + 
   ((1 + n3)*j[p4, 0, -1 + n2, 2 + n3, 0, 0, 1, 0, n8, 0, 1, 1, -1, 1, 1])/
    (2*(d - 2*n2 + n3 - n8)) + 
   ((-1 - n3)*j[p4, 0, -1 + n2, 2 + n3, 0, 0, 1, 0, n8, 0, 1, 1, 0, 0, 1])/
    (2*(d - 2*n2 + n3 - n8)) + 
   ((-1 - n3)*j[p4, 0, -1 + n2, 2 + n3, 0, 0, 1, 0, n8, 0, 1, 1, 0, 1, 1])/
    (2*(d - 2*n2 + n3 - n8)) + 
   ((-2 + 2*n2 - 2*n3)*j[p4, 0, n2, n3, 0, 0, 0, 0, n8, 0, 1, 1, 0, 1, 2])/
    ((8 - 3*d + 2*n2 + 2*n3)*(-d + 2*n2 - n3 + n8)) + 
   ((-2 + 2*n2 - 2*n3)*j[p4, 0, n2, n3, 0, 0, 1, 0, n8, 0, 1, 1, 0, 0, 2])/
    ((8 - 3*d + 2*n2 + 2*n3)*(-d + 2*n2 - n3 + n8)) + 
   ((2 - 2*n2 + 2*n3)*j[p4, 0, n2, n3, 0, 0, 1, 0, n8, 0, 2, 0, 0, 1, 1])/
    ((8 - 3*d + 2*n2 + 2*n3)*(-d + 2*n2 - n3 + n8)) + 
   ((-1 + n2 - n3)*j[p4, 0, n2, n3, 0, 0, 2, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/
    ((8 - 3*d + 2*n2 + 2*n3)*(-d + 2*n2 - n3 + n8)) + 
   ((1 - n2 + n3)*j[p4, 0, n2, n3, 0, 0, 2, 0, n8, 0, 0, 1, 0, 1, 1])/
    ((8 - 3*d + 2*n2 + 2*n3)*(-d + 2*n2 - n3 + n8)) + 
   ((2 - 2*n2 + 2*n3)*j[p4, 0, n2, 1 + n3, -1, 0, 0, 0, n8, 0, 1, 1, 0, 1, 
      2])/((8 - 3*d + 2*n2 + 2*n3)*(-d + 2*n2 - n3 + n8)) + 
   ((2 - 2*n2 + 2*n3)*j[p4, 0, n2, 1 + n3, -1, 0, 1, 0, n8, 0, 1, 1, 0, 0, 
      2])/((8 - 3*d + 2*n2 + 2*n3)*(-d + 2*n2 - n3 + n8)) + 
   ((2 - 2*n2 + 2*n3)*j[p4, 0, n2, 1 + n3, -1, 0, 2, 0, n8, 0, 0, 1, 0, 1, 
      1])/((8 - 3*d + 2*n2 + 2*n3)*(-d + 2*n2 - n3 + n8)) + 
   ((-1 + n2 - n3)*j[p4, 0, n2, 1 + n3, 0, 0, 0, 0, n8, -1, 1, 1, 0, 1, 2])/
    ((8 - 3*d + 2*n2 + 2*n3)*(-d + 2*n2 - n3 + n8)) + 
   ((-1 + n2 - n3)*j[p4, 0, n2, 1 + n3, 0, 0, 0, 0, n8, 0, 1, 1, 0, 1, 1])/
    ((8 - 3*d + 2*n2 + 2*n3)*(-d + 2*n2 - n3 + n8)) + 
   ((1 - n2 + n3)*j[p4, 0, n2, 1 + n3, 0, 0, 0, 0, n8, 0, 1, 1, 0, 1, 2])/
    ((8 - 3*d + 2*n2 + 2*n3)*(-d + 2*n2 - n3 + n8)) + 
   ((-2 + 2*n2 - 2*n3)*j[p4, 0, n2, 1 + n3, 0, 0, 1, -1, n8, 0, 2, 0, 0, 1, 
      1])/((8 - 3*d + 2*n2 + 2*n3)*(-d + 2*n2 - n3 + n8)) + 
   ((-2 + 2*n2 - 2*n3)*j[p4, 0, n2, 1 + n3, 0, 0, 1, -1, n8, 0, 2, 1, 0, 0, 
      1])/((8 - 3*d + 2*n2 + 2*n3)*(-d + 2*n2 - n3 + n8)) - 
   (n8*j[p4, 0, n2, 1 + n3, 0, 0, 1, -1, 1 + n8, 0, 1, 0, 0, 1, 1])/
    (2*(-d + 2*n2 - n3 + n8)) - 
   (n8*j[p4, 0, n2, 1 + n3, 0, 0, 1, -1, 1 + n8, 0, 1, 1, 0, 0, 1])/
    (2*(-d + 2*n2 - n3 + n8)) - j[p4, 0, n2, 1 + n3, 0, 0, 1, 0, -1 + n8, 0, 
     0, 2, 0, 1, 1]/(-d + 2*n2 - n3 + n8) + 
   ((-6 - 20*d + 17*d^2 - 3*d^3 + 74*n2 - 59*d*n2 + 11*d^2*n2 + 2*n2^2 - 
      2*d*n2^2 - 62*n3 + 25*d*n3 - d^2*n3 + 60*n2*n3 - 21*d*n2*n3 + 
      2*n2^2*n3 - 46*n3^2 + 12*d*n3^2 + 10*n2*n3^2 - 8*n3^3 + 2*n8 - 3*d*n8 + 
      24*n2*n8 - 6*d*n2*n8 + 4*n2^2*n8 - 12*n3*n8 + 3*d*n3*n8 + 2*n2*n3*n8 - 
      2*n3^2*n8 - 8*n8^2 + 3*d*n8^2 - 2*n2*n8^2 - 2*n3*n8^2)*
     j[p4, 0, n2, 1 + n3, 0, 0, 1, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (2*(-8 + 3*d - 2*n2 - 2*n3)*(-1 + n8)*(-d + 2*n2 - n3 + n8)) + 
   ((-2 + 2*n2 - 2*n3)*j[p4, 0, n2, 1 + n3, 0, 0, 1, 0, -1 + n8, 0, 2, 0, 0, 
      1, 1])/((8 - 3*d + 2*n2 + 2*n3)*(-d + 2*n2 - n3 + n8)) + 
   ((-1 + n2 - n3)*j[p4, 0, n2, 1 + n3, 0, 0, 1, 0, n8, -1, 1, 1, 0, 0, 2])/
    ((8 - 3*d + 2*n2 + 2*n3)*(-d + 2*n2 - n3 + n8)) + 
   ((-10 + 3*d - 4*n2*n3 + 4*n3^2)*j[p4, 0, n2, 1 + n3, 0, 0, 1, 0, n8, 0, 0, 
      1, 0, 1, 1])/(2*(8 - 3*d + 2*n2 + 2*n3)*(-d + 2*n2 - n3 + n8)) + 
   j[p4, 0, n2, 1 + n3, 0, 0, 1, 0, n8, 0, 0, 2, -1, 1, 1]/
    (2*(-d + 2*n2 - n3 + n8)) - j[p4, 0, n2, 1 + n3, 0, 0, 1, 0, n8, 0, 0, 2, 
     0, 1, 1]/(2*(-d + 2*n2 - n3 + n8)) + 
   ((8 - 3*d + 2*n2 - 2*n3 + 4*n2*n3 - 4*n3^2)*j[p4, 0, n2, 1 + n3, 0, 0, 1, 
      0, n8, 0, 1, 0, 0, 1, 1])/(2*(8 - 3*d + 2*n2 + 2*n3)*
     (-d + 2*n2 - n3 + n8)) + ((-16 + 11*d - 3*d^2 + 2*n2 + 5*d*n2 - 6*n2^2 - 
      6*n3 - d*n3 + 8*n2*n3 - 2*n3^2 + 3*d*n8 - 10*n2*n8 + 6*n3*n8)*
     j[p4, 0, n2, 1 + n3, 0, 0, 1, 0, n8, 0, 1, 1, 0, 0, 1])/
    (2*(8 - 3*d + 2*n2 + 2*n3)*(-d + 2*n2 - n3 + n8)) + 
   ((1 - n2 + n3)*j[p4, 0, n2, 1 + n3, 0, 0, 1, 0, n8, 0, 1, 1, 0, 0, 2])/
    ((8 - 3*d + 2*n2 + 2*n3)*(-d + 2*n2 - n3 + n8)) + 
   ((1 - n2 + n3)*j[p4, 0, n2, 1 + n3, 0, 0, 1, 0, n8, 0, 1, 1, 0, 1, 0])/
    ((8 - 3*d + 2*n2 + 2*n3)*(-d + 2*n2 - n3 + n8)) + 
   ((8 - 8*d + 3*d^2 + 16*n2 - 11*d*n2 + 6*n2^2 - 8*n3 + 4*d*n3 + 2*n2*n3 - 
      4*n3^2 - 8*n8 + 8*n2*n8 - 8*n3*n8)*j[p4, 0, n2, 1 + n3, 0, 0, 1, 0, n8, 
      0, 1, 1, 0, 1, 1])/(2*(8 - 3*d + 2*n2 + 2*n3)*(-d + 2*n2 - n3 + n8)) + 
   ((2 - 2*n2 + 2*n3)*j[p4, 0, n2, 1 + n3, 0, 0, 1, 0, n8, 0, 2, 0, -1, 1, 
      1])/((8 - 3*d + 2*n2 + 2*n3)*(-d + 2*n2 - n3 + n8)) + 
   ((-2 + 2*n2 - 2*n3)*j[p4, 0, n2, 1 + n3, 0, 0, 1, 0, n8, 0, 2, 0, 0, 1, 
      1])/((8 - 3*d + 2*n2 + 2*n3)*(-d + 2*n2 - n3 + n8)) + 
   ((1 - n2 + n3)*j[p4, 0, n2, 1 + n3, 0, 0, 2, -1, -1 + n8, 0, 1, 1, 0, 1, 
      1])/((8 - 3*d + 2*n2 + 2*n3)*(-d + 2*n2 - n3 + n8)) + 
   ((-1 + n2 - n3)*j[p4, 0, n2, 1 + n3, 0, 0, 2, -1, n8, 0, 0, 1, 0, 1, 1])/
    ((8 - 3*d + 2*n2 + 2*n3)*(-d + 2*n2 - n3 + n8)) + 
   ((1 - n2 + n3)*j[p4, 0, n2, 1 + n3, 0, 0, 2, 0, -2 + n8, 0, 1, 1, 0, 1, 
      1])/((8 - 3*d + 2*n2 + 2*n3)*(-d + 2*n2 - n3 + n8)) + 
   ((-2 + 2*n2 - 2*n3)*j[p4, 0, n2, 1 + n3, 0, 0, 2, 0, -1 + n8, -1, 1, 1, 0, 
      1, 1])/((8 - 3*d + 2*n2 + 2*n3)*(-d + 2*n2 - n3 + n8)) + 
   ((-1 + n2 - n3)*j[p4, 0, n2, 1 + n3, 0, 0, 2, 0, -1 + n8, 0, 0, 1, 0, 1, 
      1])/((8 - 3*d + 2*n2 + 2*n3)*(-d + 2*n2 - n3 + n8)) + 
   ((-1 + n2 - n3)*j[p4, 0, n2, 1 + n3, 0, 0, 2, 0, -1 + n8, 0, 1, 1, -1, 1, 
      1])/((8 - 3*d + 2*n2 + 2*n3)*(-d + 2*n2 - n3 + n8)) + 
   ((1 - n2 + n3)*j[p4, 0, n2, 1 + n3, 0, 0, 2, 0, -1 + n8, 0, 1, 1, 0, 0, 
      1])/((8 - 3*d + 2*n2 + 2*n3)*(-d + 2*n2 - n3 + n8)) + 
   ((1 - n2 + n3)*j[p4, 0, n2, 1 + n3, 0, 0, 2, 0, -1 + n8, 0, 1, 1, 0, 1, 
      0])/((8 - 3*d + 2*n2 + 2*n3)*(-d + 2*n2 - n3 + n8)) + 
   ((-1 + n2 - n3)*j[p4, 0, n2, 1 + n3, 0, 0, 2, 0, n8, -1, 1, 1, 0, 0, 1])/
    ((8 - 3*d + 2*n2 + 2*n3)*(-d + 2*n2 - n3 + n8)) + 
   ((-1 + n2 - n3)*j[p4, 0, n2, 1 + n3, 0, 0, 2, 0, n8, -1, 1, 1, 0, 1, 0])/
    ((8 - 3*d + 2*n2 + 2*n3)*(-d + 2*n2 - n3 + n8)) + 
   ((1 - n2 + n3)*j[p4, 0, n2, 1 + n3, 0, 0, 2, 0, n8, 0, 0, 1, -1, 1, 1])/
    ((8 - 3*d + 2*n2 + 2*n3)*(-d + 2*n2 - n3 + n8)) + 
   ((12 + 2*d - 3*d^2 - 20*n2 + 11*d*n2 - 2*n2^2 + 32*n3 - 2*d*n3 - 
      3*d^2*n3 - 30*n2*n3 + 11*d*n2*n3 - 2*n2^2*n3 + 28*n3^2 - 4*d*n3^2 - 
      10*n2*n3^2 + 8*n3^3 - 8*n8 + 6*d*n8 - 12*n2*n8 - 4*n3*n8 + 6*d*n3*n8 - 
      12*n2*n3*n8 + 4*n3^2*n8)*j[p4, 0, n2, 2 + n3, 0, 0, 1, -1, -1 + n8, 0, 
      1, 1, 0, 1, 1])/(2*(-8 + 3*d - 2*n2 - 2*n3)*(-1 + n8)*
     (-d + 2*n2 - n3 + n8)) + ((-1 - n3)*j[p4, 0, n2, 2 + n3, 0, 0, 1, -1, 
      n8, 0, 0, 1, 0, 1, 1])/(2*(d - 2*n2 + n3 - n8)) + 
   ((1 + n3)*j[p4, 0, n2, 2 + n3, 0, 0, 1, -1, n8, 0, 1, 0, 0, 1, 1])/
    (2*(d - 2*n2 + n3 - n8)) + 
   ((1 + n3)*j[p4, 0, n2, 2 + n3, 0, 0, 1, -1, n8, 0, 1, 1, 0, 0, 1])/
    (2*(d - 2*n2 + n3 - n8)) + 
   ((1 + n3)*j[p4, 0, n2, 2 + n3, 0, 0, 1, -1, n8, 0, 1, 1, 0, 1, 1])/
    (2*(d - 2*n2 + n3 - n8)) + 
   ((-20 + d + 3*d^2 + 18*n2 - 11*d*n2 + 2*n2^2 - 42*n3 + 5*d*n3 + 3*d^2*n3 + 
      28*n2*n3 - 11*d*n2*n3 + 2*n2^2*n3 - 30*n3^2 + 4*d*n3^2 + 10*n2*n3^2 - 
      8*n3^3 + 16*n8 - 9*d*n8 + 14*n2*n8 + 14*n3*n8 - 9*d*n3*n8 + 
      14*n2*n3*n8 - 2*n3^2*n8)*j[p4, 0, n2, 2 + n3, 0, 0, 1, 0, -1 + n8, 0, 
      1, 1, 0, 0, 1])/(2*(-8 + 3*d - 2*n2 - 2*n3)*(-1 + n8)*
     (-d + 2*n2 - n3 + n8)) + ((-1 - n3)*j[p4, 0, n2, 2 + n3, 0, 0, 1, 0, n8, 
      0, 1, 1, -1, 0, 1])/(2*(d - 2*n2 + n3 - n8)) + 
   ((-12*n2 - 5*d*n2 + 3*d^2*n2 + 30*n2^2 - 11*d*n2^2 + 2*n2^3 - 26*n2*n3 + 
      4*d*n2*n3 + 10*n2^2*n3 - 8*n2*n3^2 + 8*n2*n8 - 3*d*n2*n8 + 2*n2^2*n8 + 
      2*n2*n3*n8)*j[p4, 0, 1 + n2, n3, 0, 0, 1, 0, -1 + n8, 0, 1, 1, 0, 1, 
      1])/(2*(8 - 3*d + 2*n2 + 2*n3)*(-1 + n8)*(-d + 2*n2 - n3 + n8)) + 
   ((12*n2 - 3*d*n2 - 2*n2^2 + 6*n2*n3)*j[p4, 0, 1 + n2, n3, 0, 0, 1, 0, n8, 
      0, 0, 1, 0, 1, 1])/(2*(8 - 3*d + 2*n2 + 2*n3)*(-d + 2*n2 - n3 + n8)) + 
   ((12*n2 + 5*d*n2 - 3*d^2*n2 - 30*n2^2 + 11*d*n2^2 - 2*n2^3 + 26*n2*n3 - 
      4*d*n2*n3 - 10*n2^2*n3 + 8*n2*n3^2 - 8*n2*n8 + 3*d*n2*n8 - 2*n2^2*n8 - 
      2*n2*n3*n8)*j[p4, 0, 1 + n2, 1 + n3, 0, 0, 1, -1, -1 + n8, 0, 1, 1, 0, 
      1, 1])/(2*(8 - 3*d + 2*n2 + 2*n3)*(-1 + n8)*(-d + 2*n2 - n3 + n8)) - 
   (n2*j[p4, 0, 1 + n2, 1 + n3, 0, 0, 1, -1, n8, 0, 0, 1, 0, 1, 1])/
    (2*(-d + 2*n2 - n3 + n8)) + ((-4*n2 + 4*n2^2 - 4*n2*n3)*
     j[p4, 0, 1 + n2, 1 + n3, 0, 0, 1, -1, n8, 0, 1, 1, 0, 0, 1])/
    ((8 - 3*d + 2*n2 + 2*n3)*(-d + 2*n2 - n3 + n8)) + 
   ((12*n2 - 3*d*n2 - 2*n2^2 + 6*n2*n3)*j[p4, 0, 1 + n2, 1 + n3, 0, 0, 1, -1, 
      n8, 0, 1, 1, 0, 1, 1])/(2*(8 - 3*d + 2*n2 + 2*n3)*
     (-d + 2*n2 - n3 + n8)) + 
   ((12*n2 + 5*d*n2 - 3*d^2*n2 - 30*n2^2 + 11*d*n2^2 - 2*n2^3 + 26*n2*n3 - 
      4*d*n2*n3 - 10*n2^2*n3 + 8*n2*n3^2 - 8*n2*n8 + 3*d*n2*n8 - 2*n2^2*n8 - 
      2*n2*n3*n8)*j[p4, 0, 1 + n2, 1 + n3, 0, 0, 1, 0, -2 + n8, 0, 1, 1, 0, 
      1, 1])/(2*(8 - 3*d + 2*n2 + 2*n3)*(-1 + n8)*(-d + 2*n2 - n3 + n8)) + 
   ((-12*n2 - 5*d*n2 + 3*d^2*n2 + 30*n2^2 - 11*d*n2^2 + 2*n2^3 - 26*n2*n3 + 
      4*d*n2*n3 + 10*n2^2*n3 - 8*n2*n3^2 + 8*n2*n8 - 3*d*n2*n8 + 2*n2^2*n8 + 
      2*n2*n3*n8)*j[p4, 0, 1 + n2, 1 + n3, 0, 0, 1, 0, -1 + n8, 0, 1, 1, -1, 
      1, 1])/(2*(8 - 3*d + 2*n2 + 2*n3)*(-1 + n8)*(-d + 2*n2 - n3 + n8)) + 
   ((8*n2 + 5*d*n2 - 3*d^2*n2 - 26*n2^2 + 11*d*n2^2 - 2*n2^3 + 22*n2*n3 - 
      4*d*n2*n3 - 10*n2^2*n3 + 8*n2*n3^2 - 4*n2*n8 + 3*d*n2*n8 - 6*n2^2*n8 + 
      2*n2*n3*n8)*j[p4, 0, 1 + n2, 1 + n3, 0, 0, 1, 0, -1 + n8, 0, 1, 1, 0, 
      0, 1])/((8 - 3*d + 2*n2 + 2*n3)*(-1 + n8)*(-d + 2*n2 - n3 + n8)) + 
   ((-12*n2 + 3*d*n2 + 2*n2^2 - 6*n2*n3)*j[p4, 0, 1 + n2, 1 + n3, 0, 0, 1, 0, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/(2*(8 - 3*d + 2*n2 + 2*n3)*
     (-d + 2*n2 - n3 + n8)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == -1 && n13 == 1 && n14 == 1 && n4 == 0 && 
    n5 == 0 && n6 == 1 && n7 == 0 && n8 == 1 && n9 == 0 && n3 != 0 -> 
  ((-20 + 8*d - 2*n2 - 8*n3)*j[p4, -1 + n1, -1 + n2, 1 + n3, 0, 0, 1, 0, 1, 
      0, 1, 1, 0, 1, 1])/((-2 + d - 2*n1 - n2)*(-12 + 5*d - 2*n2 - 4*n3)) + 
   ((-10 + 4*d - n2 - 14*n3 + 4*d*n3 - n2*n3 - 4*n3^2)*
     j[p4, -1 + n1, -1 + n2, 2 + n3, 0, 0, 1, 0, 1, 0, 1, 1, -1, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(-12 + 5*d - 2*n2 - 4*n3)) + 
   ((-20 + 8*d - 2*n2 - 8*n3)*j[p4, -1 + n1, n2, n3, 0, 0, 1, 0, 1, 0, 1, 1, 
      0, 1, 1])/((-2 + d - 2*n1 - n2)*(-12 + 5*d - 2*n2 - 4*n3)) + 
   ((40 - 16*d + 4*n2 + 16*n3)*j[p4, -1 + n1, n2, 1 + n3, 0, 0, 1, -1, 1, 0, 
      1, 1, 0, 1, 1])/((-2 + d - 2*n1 - n2)*(-12 + 5*d - 2*n2 - 4*n3)) + 
   ((20 - 8*d + 2*n2 + 8*n3)*j[p4, -1 + n1, n2, 1 + n3, 0, 0, 1, 0, 0, 0, 1, 
      1, 0, 1, 1])/((-2 + d - 2*n1 - n2)*(-12 + 5*d - 2*n2 - 4*n3)) + 
   ((16 - 14*d + 3*d^2 - 24*n1 + 10*d*n1 - 12*n2 + 5*d*n2 - 4*n1*n2 - 
      2*n2^2 + 28*n3 - 12*d*n3 - 8*n1*n3 - 2*n2*n3 + 8*n3^2)*
     j[p4, -1 + n1, n2, 1 + n3, 0, 0, 1, 0, 0, 0, 2, 1, -1, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((20 - 8*d + 2*n2 + 8*n3)*j[p4, -1 + n1, n2, 1 + n3, 0, 0, 1, 0, 1, 0, 0, 
      2, -1, 1, 1])/((-2 + d - 2*n1 - n2)*(-12 + 5*d - 2*n2 - 4*n3)) + 
   ((208 - 206*d + 64*d^2 - 6*d^3 + 136*n1 - 108*d*n1 + 22*d^2*n1 + 8*n1^2 - 
      4*d*n1^2 + 228*n2 - 163*d*n2 + 29*d^2*n2 + 84*n1*n2 - 36*d*n1*n2 + 
      4*n1^2*n2 + 102*n2^2 - 40*d*n2^2 + 8*n1*n2^2 + 8*n2^3 + 60*n3 - 
      26*d*n3 + 88*n1*n3 - 32*d*n1*n3 + 58*n2*n3 - 15*d*n2*n3 + 28*n1*n2*n3 + 
      30*n2^2*n3 - 28*n3^2 + 12*d*n3^2 + 16*n1*n3^2 - 10*n2*n3^2 - 8*n3^3)*
     j[p4, -1 + n1, n2, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, -1, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((20 - 8*d + 2*n2 + 8*n3)*j[p4, -1 + n1, n2, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 
      1, 0, 0, 1])/((-2 + d - 2*n1 - n2)*(-12 + 5*d - 2*n2 - 4*n3)) + 
   ((16 - 14*d + 3*d^2 - 24*n1 + 10*d*n1 - 12*n2 + 5*d*n2 - 4*n1*n2 - 
      2*n2^2 + 28*n3 - 12*d*n3 - 8*n1*n3 - 2*n2*n3 + 8*n3^2)*
     j[p4, -1 + n1, n2, 1 + n3, 0, 0, 1, 0, 1, 0, 2, 1, -1, 0, 1])/
    ((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-32 + 28*d - 6*d^2 - 32*n1 + 12*d*n1 - 56*n2 + 22*d*n2 - 4*n2^2 - 8*n3 + 
      20*d*n3 - 6*d^2*n3 - 48*n1*n3 + 12*d*n1*n3 - 76*n2*n3 + 22*d*n2*n3 - 
      4*n2^2*n3 + 40*n3^2 - 8*d*n3^2 - 16*n1*n3^2 - 20*n2*n3^2 + 16*n3^3)*
     j[p4, -1 + n1, n2, 2 + n3, 0, 0, 1, 0, 0, 0, 1, 1, -1, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-96 + 76*d - 15*d^2 - 16*n1 + 6*d*n1 - 56*n2 + 22*d*n2 - 4*n2^2 - 
      136*n3 + 92*d*n3 - 15*d^2*n3 - 24*n1*n3 + 6*d*n1*n3 - 76*n2*n3 + 
      22*d*n2*n3 - 4*n2^2*n3 - 40*n3^2 + 16*d*n3^2 - 8*n1*n3^2 - 20*n2*n3^2)*
     j[p4, -1 + n1, n2, 2 + n3, 0, 0, 1, 0, 1, 0, 1, 1, -1, 0, 1])/
    ((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-128*n2 + 104*d*n2 - 21*d^2*n2 - 8*n1*n2 + 2*d*n1*n2 - 72*n2^2 + 
      28*d*n2^2 + 4*n1*n2^2 - 4*n2^3 - 56*n2*n3 + 24*d*n2*n3 - 8*n1*n2*n3 - 
      28*n2^2*n3)*j[p4, -1 + n1, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 1, 1, -1, 1, 
      1])/((2 - d + 2*n1 + n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 
      4*n2^2 + 56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((32*n2 - 28*d*n2 + 6*d^2*n2 + 32*n1*n2 - 12*d*n1*n2 + 56*n2^2 - 
      22*d*n2^2 + 4*n2^3 - 24*n2*n3 + 8*d*n2*n3 + 16*n1*n2*n3 + 20*n2^2*n3 - 
      16*n2*n3^2)*j[p4, -1 + n1, 1 + n2, 1 + n3, 0, 0, 1, -1, 1, 0, 1, 1, -1, 
      1, 1])/((2 - d + 2*n1 + n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 
      4*n2^2 + 56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((96*n2 - 76*d*n2 + 15*d^2*n2 + 16*n1*n2 - 6*d*n1*n2 + 56*n2^2 - 
      22*d*n2^2 + 4*n2^3 + 40*n2*n3 - 16*d*n2*n3 + 8*n1*n2*n3 + 20*n2^2*n3)*
     j[p4, -1 + n1, 1 + n2, 1 + n3, 0, 0, 1, 0, 0, 0, 1, 1, -1, 1, 1])/
    ((2 - d + 2*n1 + n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-32*n2 + 28*d*n2 - 6*d^2*n2 - 32*n1*n2 + 12*d*n1*n2 - 56*n2^2 + 
      22*d*n2^2 - 4*n2^3 + 24*n2*n3 - 8*d*n2*n3 - 16*n1*n2*n3 - 20*n2^2*n3 + 
      16*n2*n3^2)*j[p4, -1 + n1, 1 + n2, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, -2, 
      1, 1])/((2 - d + 2*n1 + n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 
      4*n2^2 + 56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((32*n2 - 28*d*n2 + 6*d^2*n2 + 32*n1*n2 - 12*d*n1*n2 + 56*n2^2 - 
      22*d*n2^2 + 4*n2^3 - 24*n2*n3 + 8*d*n2*n3 + 16*n1*n2*n3 + 20*n2^2*n3 - 
      16*n2*n3^2)*j[p4, -1 + n1, 1 + n2, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, -1, 
      0, 1])/((2 - d + 2*n1 + n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 
      4*n2^2 + 56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-16 + 14*d - 3*d^2 + 24*n1 - 10*d*n1 + 12*n2 - 5*d*n2 + 4*n1*n2 + 
      2*n2^2 - 28*n3 + 12*d*n3 + 8*n1*n3 + 2*n2*n3 - 8*n3^2)*
     j[p4, n1, -1 + n2, 1 + n3, 0, 0, 1, 0, 0, 0, 2, 1, -1, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-10 + 4*d - n2 - 4*n3)*j[p4, n1, -1 + n2, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 
      0, 0, 1, 1])/((-2 + d - 2*n1 - n2)*(-12 + 5*d - 2*n2 - 4*n3)) + 
   ((40 - 36*d + 8*d^2 + 20*n1 - 8*d*n1 + 24*n2 - 10*d*n2 + 2*n1*n2 + 
      2*n2^2 + 16*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3)*j[p4, n1, -1 + n2, 1 + n3, 
      0, 0, 1, 0, 1, 0, 1, 1, -1, 1, 1])/((-2 + d - 2*n1 - n2)*
     (-12 + 5*d - 2*n2 - 4*n3)) + ((20 - 8*d + 2*n2 + 8*n3)*
     j[p4, n1, -1 + n2, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(-12 + 5*d - 2*n2 - 4*n3)) + 
   ((-16 + 14*d - 3*d^2 + 24*n1 - 10*d*n1 + 12*n2 - 5*d*n2 + 4*n1*n2 + 
      2*n2^2 - 28*n3 + 12*d*n3 + 8*n1*n3 + 2*n2*n3 - 8*n3^2)*
     j[p4, n1, -1 + n2, 1 + n3, 0, 0, 1, 0, 1, 0, 2, 0, -1, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-16 + 14*d - 3*d^2 + 24*n1 - 10*d*n1 + 12*n2 - 5*d*n2 + 4*n1*n2 + 
      2*n2^2 - 28*n3 + 12*d*n3 + 8*n1*n3 + 2*n2*n3 - 8*n3^2)*
     j[p4, n1, -1 + n2, 1 + n3, 0, 0, 1, 0, 1, 0, 2, 1, -1, 0, 1])/
    ((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((10 - 4*d + n2 + 4*n3)*j[p4, n1, -1 + n2, 1 + n3, 0, 0, 1, 0, 2, 0, 1, 0, 
      -1, 1, 1])/((-2 + d - 2*n1 - n2)*(-12 + 5*d - 2*n2 - 4*n3)) + 
   ((10 - 4*d + n2 + 4*n3)*j[p4, n1, -1 + n2, 1 + n3, 0, 0, 1, 0, 2, 0, 1, 1, 
      -1, 0, 1])/((-2 + d - 2*n1 - n2)*(-12 + 5*d - 2*n2 - 4*n3)) + 
   ((-16 + 14*d - 3*d^2 + 4*n1 - 2*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 8*n3 + 
      4*d*n3 - 4*n2*n3)*j[p4, n1, -1 + n2, 1 + n3, 0, 0, 2, 0, 1, 0, 0, 1, 
      -1, 1, 1])/((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 
      16*d*n2 + 4*n2^2 + 56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-64 + 48*d - 9*d^2 + 16*n1 - 6*d*n1 - 128*n3 + 72*d*n3 - 9*d^2*n3 + 
      24*n1*n3 - 6*d*n1*n3 - 80*n3^2 + 24*d*n3^2 + 8*n1*n3^2 - 16*n3^3)*
     j[p4, n1, -1 + n2, 2 + n3, 0, 0, 1, 0, 0, 0, 1, 1, -1, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((64 - 48*d + 9*d^2 - 16*n1 + 6*d*n1 + 128*n3 - 72*d*n3 + 9*d^2*n3 - 
      24*n1*n3 + 6*d*n1*n3 + 80*n3^2 - 24*d*n3^2 - 8*n1*n3^2 + 16*n3^3)*
     j[p4, n1, -1 + n2, 2 + n3, 0, 0, 1, 0, 1, 0, 0, 1, -1, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-64 + 48*d - 9*d^2 + 16*n1 - 6*d*n1 - 128*n3 + 72*d*n3 - 9*d^2*n3 + 
      24*n1*n3 - 6*d*n1*n3 - 80*n3^2 + 24*d*n3^2 + 8*n1*n3^2 - 16*n3^3)*
     j[p4, n1, -1 + n2, 2 + n3, 0, 0, 1, 0, 1, 0, 1, 0, -1, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-10 + 4*d - n2 - 14*n3 + 4*d*n3 - n2*n3 - 4*n3^2)*
     j[p4, n1, -1 + n2, 2 + n3, 0, 0, 1, 0, 1, 0, 1, 1, -2, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(-12 + 5*d - 2*n2 - 4*n3)) + 
   ((-64 + 48*d - 9*d^2 + 16*n1 - 6*d*n1 - 128*n3 + 72*d*n3 - 9*d^2*n3 + 
      24*n1*n3 - 6*d*n1*n3 - 80*n3^2 + 24*d*n3^2 + 8*n1*n3^2 - 16*n3^3)*
     j[p4, n1, -1 + n2, 2 + n3, 0, 0, 1, 0, 1, 0, 1, 1, -1, 0, 1])/
    ((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((10 - 4*d + n2 + 14*n3 - 4*d*n3 + n2*n3 + 4*n3^2)*
     j[p4, n1, -1 + n2, 2 + n3, 0, 0, 1, 0, 1, 0, 1, 1, -1, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(-12 + 5*d - 2*n2 - 4*n3)) + 
   ((16 - 14*d + 3*d^2 - 24*n1 + 10*d*n1 - 12*n2 + 5*d*n2 - 4*n1*n2 - 
      2*n2^2 + 28*n3 - 12*d*n3 - 8*n1*n3 - 2*n2*n3 + 8*n3^2)*
     j[p4, n1, n2, n3, 0, 0, 0, 0, 1, 0, 1, 1, -1, 1, 2])/
    ((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((16 - 14*d + 3*d^2 - 24*n1 + 10*d*n1 - 12*n2 + 5*d*n2 - 4*n1*n2 - 
      2*n2^2 + 28*n3 - 12*d*n3 - 8*n1*n3 - 2*n2*n3 + 8*n3^2)*
     j[p4, n1, n2, n3, 0, 0, 1, 0, 0, 0, 1, 1, -1, 1, 2])/
    ((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((10 - 4*d + n2 + 4*n3)*j[p4, n1, n2, n3, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 
      1])/((-2 + d - 2*n1 - n2)*(-12 + 5*d - 2*n2 - 4*n3)) + 
   ((16 - 14*d + 3*d^2 - 24*n1 + 10*d*n1 - 12*n2 + 5*d*n2 - 4*n1*n2 - 
      2*n2^2 + 28*n3 - 12*d*n3 - 8*n1*n3 - 2*n2*n3 + 8*n3^2)*
     j[p4, n1, n2, n3, 0, 0, 1, 0, 1, 0, 1, 1, -1, 0, 2])/
    ((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-16 + 14*d - 3*d^2 + 24*n1 - 10*d*n1 + 12*n2 - 5*d*n2 + 4*n1*n2 + 
      2*n2^2 - 28*n3 + 12*d*n3 + 8*n1*n3 + 2*n2*n3 - 8*n3^2)*
     j[p4, n1, n2, n3, 0, 0, 1, 0, 1, 0, 2, 0, -1, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-16 + 14*d - 3*d^2 + 4*n1 - 2*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 8*n3 + 
      4*d*n3 - 4*n2*n3)*j[p4, n1, n2, n3, 0, 0, 2, 0, 1, 0, 0, 1, -1, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-16 + 14*d - 3*d^2 + 24*n1 - 10*d*n1 + 12*n2 - 5*d*n2 + 4*n1*n2 + 
      2*n2^2 - 28*n3 + 12*d*n3 + 8*n1*n3 + 2*n2*n3 - 8*n3^2)*
     j[p4, n1, n2, 1 + n3, -1, 0, 0, 0, 1, 0, 1, 1, -1, 1, 2])/
    ((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-16 + 14*d - 3*d^2 + 24*n1 - 10*d*n1 + 12*n2 - 5*d*n2 + 4*n1*n2 + 
      2*n2^2 - 28*n3 + 12*d*n3 + 8*n1*n3 + 2*n2*n3 - 8*n3^2)*
     j[p4, n1, n2, 1 + n3, -1, 0, 1, 0, 0, 0, 1, 1, -1, 1, 2])/
    ((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-16 + 14*d - 3*d^2 + 24*n1 - 10*d*n1 + 12*n2 - 5*d*n2 + 4*n1*n2 + 
      2*n2^2 - 28*n3 + 12*d*n3 + 8*n1*n3 + 2*n2*n3 - 8*n3^2)*
     j[p4, n1, n2, 1 + n3, -1, 0, 1, 0, 1, 0, 1, 1, -1, 0, 2])/
    ((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-16 + 14*d - 3*d^2 + 24*n1 - 10*d*n1 + 12*n2 - 5*d*n2 + 4*n1*n2 + 
      2*n2^2 - 28*n3 + 12*d*n3 + 8*n1*n3 + 2*n2*n3 - 8*n3^2)*
     j[p4, n1, n2, 1 + n3, -1, 0, 2, 0, 1, 0, 0, 1, -1, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-20*n1 + 8*d*n1 - 20*n2 + 8*d*n2 - 2*n1*n2 - 2*n2^2 + 20*n3 - 8*d*n3 - 
      8*n1*n3 - 6*n2*n3 + 8*n3^2)*j[p4, n1, n2, 1 + n3, 0, 0, 0, 0, 1, -1, 1, 
      1, -1, 1, 2])/((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 
      16*d*n2 + 4*n2^2 + 56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((16 - 14*d + 3*d^2 - 4*n1 + 2*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 8*n3 - 
      4*d*n3 + 4*n2*n3)*j[p4, n1, n2, 1 + n3, 0, 0, 0, 0, 1, 0, 1, 1, -1, 1, 
      1])/((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 
      4*n2^2 + 56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((20*n1 - 8*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 - 20*n3 + 8*d*n3 + 
      8*n1*n3 + 6*n2*n3 - 8*n3^2)*j[p4, n1, n2, 1 + n3, 0, 0, 0, 0, 1, 0, 1, 
      1, -1, 1, 2])/((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 
      16*d*n2 + 4*n2^2 + 56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((20 - 8*d + 2*n2 + 8*n3)*j[p4, n1, n2, 1 + n3, 0, 0, 1, -1, 0, 0, 1, 1, 
      0, 1, 1])/((-2 + d - 2*n1 - n2)*(-12 + 5*d - 2*n2 - 4*n3)) + 
   ((-20 + 8*d - 2*n2 - 8*n3)*j[p4, n1, n2, 1 + n3, 0, 0, 1, -1, 0, 0, 1, 2, 
      -1, 1, 1])/((-2 + d - 2*n1 - n2)*(-12 + 5*d - 2*n2 - 4*n3)) + 
   ((16 - 14*d + 3*d^2 - 24*n1 + 10*d*n1 - 12*n2 + 5*d*n2 - 4*n1*n2 - 
      2*n2^2 + 28*n3 - 12*d*n3 - 8*n1*n3 - 2*n2*n3 + 8*n3^2)*
     j[p4, n1, n2, 1 + n3, 0, 0, 1, -1, 0, 0, 2, 1, -1, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-20 + 8*d - 2*n2 - 8*n3)*j[p4, n1, n2, 1 + n3, 0, 0, 1, -1, 1, 0, 1, 1, 
      0, 0, 1])/((-2 + d - 2*n1 - n2)*(-12 + 5*d - 2*n2 - 4*n3)) + 
   ((-20 + 8*d - 2*n2 - 8*n3)*j[p4, n1, n2, 1 + n3, 0, 0, 1, -1, 1, 0, 1, 1, 
      0, 1, 1])/((-2 + d - 2*n1 - n2)*(-12 + 5*d - 2*n2 - 4*n3)) + 
   ((16 - 14*d + 3*d^2 - 24*n1 + 10*d*n1 - 12*n2 + 5*d*n2 - 4*n1*n2 - 
      2*n2^2 + 28*n3 - 12*d*n3 - 8*n1*n3 - 2*n2*n3 + 8*n3^2)*
     j[p4, n1, n2, 1 + n3, 0, 0, 1, -1, 1, 0, 2, 0, -1, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((16 - 14*d + 3*d^2 - 24*n1 + 10*d*n1 - 12*n2 + 5*d*n2 - 4*n1*n2 - 
      2*n2^2 + 28*n3 - 12*d*n3 - 8*n1*n3 - 2*n2*n3 + 8*n3^2)*
     j[p4, n1, n2, 1 + n3, 0, 0, 1, -1, 1, 0, 2, 1, -1, 0, 1])/
    ((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-10 + 4*d - n2 - 4*n3)*j[p4, n1, n2, 1 + n3, 0, 0, 1, -1, 2, 0, 1, 0, 
      -1, 1, 1])/((-2 + d - 2*n1 - n2)*(-12 + 5*d - 2*n2 - 4*n3)) + 
   ((-10 + 4*d - n2 - 4*n3)*j[p4, n1, n2, 1 + n3, 0, 0, 1, -1, 2, 0, 1, 1, 
      -1, 0, 1])/((-2 + d - 2*n1 - n2)*(-12 + 5*d - 2*n2 - 4*n3)) + 
   ((-20*n1 + 8*d*n1 - 20*n2 + 8*d*n2 - 2*n1*n2 - 2*n2^2 + 20*n3 - 8*d*n3 - 
      8*n1*n3 - 6*n2*n3 + 8*n3^2)*j[p4, n1, n2, 1 + n3, 0, 0, 1, 0, 0, -1, 1, 
      1, -1, 1, 2])/((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 
      16*d*n2 + 4*n2^2 + 56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-8*d + 3*d^2 - 120*n1 + 80*d*n1 - 12*d^2*n1 - 120*n2 + 94*d*n2 - 
      18*d^2*n2 + 8*n1*n2 - 9*d*n1*n2 - 8*n2^2 + d*n2^2 + 6*n1*n2^2 + 
      2*n2^3 + 232*n3 - 188*d*n3 + 36*d^2*n3 - 116*n1*n3 + 44*d*n1*n3 - 
      56*n2*n3 + 26*d*n2*n3 - 6*n1*n2*n3 - 6*n2^2*n3 + 176*n3^2 - 72*d*n3^2 - 
      24*n1*n3^2 + 32*n3^3)*j[p4, n1, n2, 1 + n3, 0, 0, 1, 0, 0, 0, 1, 1, -1, 
      1, 1])/((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 
      4*n2^2 + 56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((20*n1 - 8*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 - 20*n3 + 8*d*n3 + 
      8*n1*n3 + 6*n2*n3 - 8*n3^2)*j[p4, n1, n2, 1 + n3, 0, 0, 1, 0, 0, 0, 1, 
      1, -1, 1, 2])/((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 
      16*d*n2 + 4*n2^2 + 56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((48 - 34*d + 6*d^2 + 8*n1 - 4*d*n1 + 12*n2 - 5*d*n2 + 4*n1*n2 + 2*n2^2 + 
      36*n3 - 12*d*n3 + 2*n2*n3 + 8*n3^2)*j[p4, n1, n2, 1 + n3, 0, 0, 1, 0, 
      0, 0, 1, 1, 0, 1, 1])/((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 
      40*n2 - 16*d*n2 + 4*n2^2 + 56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-32 + 28*d - 6*d^2 + 8*n1 - 4*d*n1 - 16*n2 + 6*d*n2 + 4*n1*n2 - 16*n3 + 
      8*d*n3 - 8*n2*n3)*j[p4, n1, n2, 1 + n3, 0, 0, 1, 0, 0, 0, 1, 2, -2, 1, 
      1])/((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 
      4*n2^2 + 56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((32 - 28*d + 6*d^2 - 8*n1 + 4*d*n1 + 16*n2 - 6*d*n2 - 4*n1*n2 + 16*n3 - 
      8*d*n3 + 8*n2*n3)*j[p4, n1, n2, 1 + n3, 0, 0, 1, 0, 0, 0, 1, 2, -1, 1, 
      1])/((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 
      4*n2^2 + 56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-20*n1 + 8*d*n1 - 20*n2 + 8*d*n2 - 2*n1*n2 - 2*n2^2 + 20*n3 - 8*d*n3 - 
      8*n1*n3 - 6*n2*n3 + 8*n3^2)*j[p4, n1, n2, 1 + n3, 0, 0, 1, 0, 1, -1, 1, 
      1, -1, 0, 2])/((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 
      16*d*n2 + 4*n2^2 + 56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((80 - 62*d + 12*d^2 - 100*n1 + 70*d*n1 - 12*d^2*n1 - 8*n2 + 11*d*n2 - 
      3*d^2*n2 - 46*n1*n2 + 17*d*n1*n2 - 28*n2^2 + 11*d*n2^2 - 2*n1*n2^2 - 
      2*n2^3 + 40*n3 - 6*d^2*n3 - 52*n1*n3 + 16*d*n1*n3 + 2*d*n2*n3 - 
      14*n1*n2*n3 - 10*n2^2*n3 + 8*d*n3^2 - 8*n1*n3^2)*
     j[p4, n1, n2, 1 + n3, 0, 0, 1, 0, 1, 0, 0, 1, -1, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((10 - 4*d + n2 + 4*n3)*j[p4, n1, n2, 1 + n3, 0, 0, 1, 0, 1, 0, 0, 2, -2, 
      1, 1])/((-2 + d - 2*n1 - n2)*(-12 + 5*d - 2*n2 - 4*n3)) + 
   ((-10 + 4*d - n2 - 4*n3)*j[p4, n1, n2, 1 + n3, 0, 0, 1, 0, 1, 0, 0, 2, -1, 
      1, 1])/((-2 + d - 2*n1 - n2)*(-12 + 5*d - 2*n2 - 4*n3)) + 
   ((-64 + 48*d - 9*d^2 + 96*n1 - 68*d*n1 + 12*d^2*n1 + 28*n1*n2 - 
      11*d*n1*n2 + 2*n1*n2^2 - 32*n3 - 4*d*n3 + 6*d^2*n3 + 52*n1*n3 - 
      16*d*n1*n3 + 16*n2*n3 - 6*d*n2*n3 + 6*n1*n2*n3 - 8*d*n3^2 + 8*n1*n3^2 + 
      8*n2*n3^2)*j[p4, n1, n2, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 0, -1, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((64 - 48*d + 9*d^2 - 48*n1 + 34*d*n1 - 6*d^2*n1 + 8*n1^2 - 4*d*n1^2 - 
      192*n2 + 152*d*n2 - 30*d^2*n2 + 32*n1*n2 - 14*d*n1*n2 + 4*n1^2*n2 - 
      32*n2^2 + 12*d*n2^2 + 8*n1*n2^2 + 192*n3 - 128*d*n3 + 21*d^2*n3 - 
      56*n1*n3 + 22*d*n1*n3 - 128*n2*n3 + 52*d*n2*n3 - 16*n2^2*n3 + 
      112*n3^2 - 40*d*n3^2 - 8*n1*n3^2 - 16*n2*n3^2 + 16*n3^3)*
     j[p4, n1, n2, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, -1, 0, 1])/
    ((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((20*n1 - 8*d*n1 + 20*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 - 20*n3 + 8*d*n3 + 
      8*n1*n3 + 6*n2*n3 - 8*n3^2)*j[p4, n1, n2, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 
      1, -1, 0, 2])/((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 
      16*d*n2 + 4*n2^2 + 56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-16 + 14*d - 3*d^2 + 4*n1 - 2*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 8*n3 + 
      4*d*n3 - 4*n2*n3)*j[p4, n1, n2, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, -1, 1, 
      0])/((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 
      4*n2^2 + 56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-64 + 72*d - 26*d^2 + 3*d^3 + 8*n1 - 4*d*n1 - 8*n1^2 + 4*d*n1^2 - 
      72*n2 + 56*d*n2 - 11*d^2*n2 - 20*n1*n2 + 10*d*n1*n2 - 4*n1^2*n2 - 
      44*n2^2 + 18*d*n2^2 - 4*n1*n2^2 - 4*n2^3 - 24*n3 + 16*d*n3 - 2*d^2*n3 + 
      8*n1*n3 - 4*d*n1*n3 - 4*n2*n3 - 4*n1*n2*n3 - 12*n2^2*n3 + 8*n2*n3^2)*
     j[p4, n1, n2, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, -1, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((112 - 90*d + 18*d^2 - 8*n1 + 4*d*n1 + 44*n2 - 17*d*n2 - 4*n1*n2 + 
      2*n2^2 + 68*n3 - 28*d*n3 + 18*n2*n3 + 8*n3^2)*
     j[p4, n1, n2, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-16 + 14*d - 3*d^2 + 24*n1 - 10*d*n1 + 12*n2 - 5*d*n2 + 4*n1*n2 + 
      2*n2^2 - 28*n3 + 12*d*n3 + 8*n1*n3 + 2*n2*n3 - 8*n3^2)*
     j[p4, n1, n2, 1 + n3, 0, 0, 1, 0, 1, 0, 2, 0, -2, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((16 - 14*d + 3*d^2 - 24*n1 + 10*d*n1 - 12*n2 + 5*d*n2 - 4*n1*n2 - 
      2*n2^2 + 28*n3 - 12*d*n3 - 8*n1*n3 - 2*n2*n3 + 8*n3^2)*
     j[p4, n1, n2, 1 + n3, 0, 0, 1, 0, 1, 0, 2, 0, -1, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((16 - 14*d + 3*d^2 - 4*n1 + 2*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 8*n3 - 
      4*d*n3 + 4*n2*n3)*j[p4, n1, n2, 1 + n3, 0, 0, 2, -1, 1, 0, 0, 1, -1, 1, 
      1])/((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 
      4*n2^2 + 56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((32 - 28*d + 6*d^2 - 28*n1 + 12*d*n1 - 4*n2 + 2*d*n2 - 6*n1*n2 - 2*n2^2 + 
      36*n3 - 16*d*n3 - 8*n1*n3 + 2*n2*n3 + 8*n3^2)*
     j[p4, n1, n2, 1 + n3, 0, 0, 2, 0, 0, -1, 1, 1, -1, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((16 - 14*d + 3*d^2 - 4*n1 + 2*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 8*n3 - 
      4*d*n3 + 4*n2*n3)*j[p4, n1, n2, 1 + n3, 0, 0, 2, 0, 1, -1, 1, 1, -1, 0, 
      1])/((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 
      4*n2^2 + 56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((16 - 14*d + 3*d^2 - 4*n1 + 2*d*n1 + 8*n2 - 3*d*n2 - 2*n1*n2 + 8*n3 - 
      4*d*n3 + 4*n2*n3)*j[p4, n1, n2, 1 + n3, 0, 0, 2, 0, 1, -1, 1, 1, -1, 1, 
      0])/((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 
      4*n2^2 + 56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-16 + 14*d - 3*d^2 + 4*n1 - 2*d*n1 - 8*n2 + 3*d*n2 + 2*n1*n2 - 8*n3 + 
      4*d*n3 - 4*n2*n3)*j[p4, n1, n2, 1 + n3, 0, 0, 2, 0, 1, 0, 0, 1, -2, 1, 
      1])/((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 
      4*n2^2 + 56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((64 - 48*d + 9*d^2 - 16*n1 + 6*d*n1 + 128*n3 - 72*d*n3 + 9*d^2*n3 - 
      24*n1*n3 + 6*d*n1*n3 + 80*n3^2 - 24*d*n3^2 - 8*n1*n3^2 + 16*n3^3)*
     j[p4, n1, n2, 2 + n3, 0, 0, 1, -1, 0, 0, 1, 1, -1, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-64 + 48*d - 9*d^2 + 16*n1 - 6*d*n1 - 128*n3 + 72*d*n3 - 9*d^2*n3 + 
      24*n1*n3 - 6*d*n1*n3 - 80*n3^2 + 24*d*n3^2 + 8*n1*n3^2 - 16*n3^3)*
     j[p4, n1, n2, 2 + n3, 0, 0, 1, -1, 1, 0, 0, 1, -1, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((64 - 48*d + 9*d^2 - 16*n1 + 6*d*n1 + 128*n3 - 72*d*n3 + 9*d^2*n3 - 
      24*n1*n3 + 6*d*n1*n3 + 80*n3^2 - 24*d*n3^2 - 8*n1*n3^2 + 16*n3^3)*
     j[p4, n1, n2, 2 + n3, 0, 0, 1, -1, 1, 0, 1, 0, -1, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((64 - 48*d + 9*d^2 - 16*n1 + 6*d*n1 + 128*n3 - 72*d*n3 + 9*d^2*n3 - 
      24*n1*n3 + 6*d*n1*n3 + 80*n3^2 - 24*d*n3^2 - 8*n1*n3^2 + 16*n3^3)*
     j[p4, n1, n2, 2 + n3, 0, 0, 1, -1, 1, 0, 1, 1, -1, 0, 1])/
    ((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-10 + 4*d - n2 - 14*n3 + 4*d*n3 - n2*n3 - 4*n3^2)*
     j[p4, n1, n2, 2 + n3, 0, 0, 1, -1, 1, 0, 1, 1, -1, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(-12 + 5*d - 2*n2 - 4*n3)) + 
   ((-16 + 14*d - 3*d^2 - 16*n1 + 6*d*n1 - 28*n2 + 11*d*n2 - 2*n2^2 - 4*n3 + 
      10*d*n3 - 3*d^2*n3 - 24*n1*n3 + 6*d*n1*n3 - 38*n2*n3 + 11*d*n2*n3 - 
      2*n2^2*n3 + 20*n3^2 - 4*d*n3^2 - 8*n1*n3^2 - 10*n2*n3^2 + 8*n3^3)*
     j[p4, n1, n2, 2 + n3, 0, 0, 1, 0, 0, 0, 1, 1, -2, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((32 - 28*d + 6*d^2 + 32*n1 - 12*d*n1 + 56*n2 - 22*d*n2 + 4*n2^2 + 8*n3 - 
      20*d*n3 + 6*d^2*n3 + 48*n1*n3 - 12*d*n1*n3 + 76*n2*n3 - 22*d*n2*n3 + 
      4*n2^2*n3 - 40*n3^2 + 8*d*n3^2 + 16*n1*n3^2 + 20*n2*n3^2 - 16*n3^3)*
     j[p4, n1, n2, 2 + n3, 0, 0, 1, 0, 0, 0, 1, 1, -1, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-16 + 14*d - 3*d^2 - 16*n1 + 6*d*n1 - 28*n2 + 11*d*n2 - 2*n2^2 - 4*n3 + 
      10*d*n3 - 3*d^2*n3 - 24*n1*n3 + 6*d*n1*n3 - 38*n2*n3 + 11*d*n2*n3 - 
      2*n2^2*n3 + 20*n3^2 - 4*d*n3^2 - 8*n1*n3^2 - 10*n2*n3^2 + 8*n3^3)*
     j[p4, n1, n2, 2 + n3, 0, 0, 1, 0, 1, 0, 0, 1, -2, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((16 - 14*d + 3*d^2 + 16*n1 - 6*d*n1 + 28*n2 - 11*d*n2 + 2*n2^2 + 4*n3 - 
      10*d*n3 + 3*d^2*n3 + 24*n1*n3 - 6*d*n1*n3 + 38*n2*n3 - 11*d*n2*n3 + 
      2*n2^2*n3 - 20*n3^2 + 4*d*n3^2 + 8*n1*n3^2 + 10*n2*n3^2 - 8*n3^3)*
     j[p4, n1, n2, 2 + n3, 0, 0, 1, 0, 1, 0, 1, 0, -2, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((10 - 4*d + n2 + 14*n3 - 4*d*n3 + n2*n3 + 4*n3^2)*
     j[p4, n1, n2, 2 + n3, 0, 0, 1, 0, 1, 0, 1, 1, -2, 0, 1])/
    ((-2 + d - 2*n1 - n2)*(-12 + 5*d - 2*n2 - 4*n3)) + 
   ((16 - 14*d + 3*d^2 + 16*n1 - 6*d*n1 + 28*n2 - 11*d*n2 + 2*n2^2 + 4*n3 - 
      10*d*n3 + 3*d^2*n3 + 24*n1*n3 - 6*d*n1*n3 + 38*n2*n3 - 11*d*n2*n3 + 
      2*n2^2*n3 - 20*n3^2 + 4*d*n3^2 + 8*n1*n3^2 + 10*n2*n3^2 - 8*n3^3)*
     j[p4, n1, n2, 2 + n3, 0, 0, 1, 0, 1, 0, 1, 1, -1, 0, 1])/
    ((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-16*n2 + 14*d*n2 - 3*d^2*n2 + 24*n1*n2 - 10*d*n1*n2 + 12*n2^2 - 
      5*d*n2^2 + 4*n1*n2^2 + 2*n2^3 - 28*n2*n3 + 12*d*n2*n3 + 8*n1*n2*n3 + 
      2*n2^2*n3 - 8*n2*n3^2)*j[p4, n1, 1 + n2, n3, 0, 0, 1, 0, 0, 0, 1, 1, 
      -1, 1, 1])/((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 
      16*d*n2 + 4*n2^2 + 56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-112*n2 + 90*d*n2 - 18*d^2*n2 + 8*n1*n2 - 4*d*n1*n2 - 44*n2^2 + 
      17*d*n2^2 + 4*n1*n2^2 - 2*n2^3 - 68*n2*n3 + 28*d*n2*n3 - 18*n2^2*n3 - 
      8*n2*n3^2)*j[p4, n1, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 0, 1, -1, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((32*n2 - 28*d*n2 + 6*d^2*n2 - 48*n1*n2 + 20*d*n1*n2 - 24*n2^2 + 
      10*d*n2^2 - 8*n1*n2^2 - 4*n2^3 + 56*n2*n3 - 24*d*n2*n3 - 16*n1*n2*n3 - 
      4*n2^2*n3 + 16*n2*n3^2)*j[p4, n1, 1 + n2, 1 + n3, 0, 0, 1, -1, 0, 0, 1, 
      1, -1, 1, 1])/((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 
      16*d*n2 + 4*n2^2 + 56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-96*n2 + 76*d*n2 - 15*d^2*n2 - 16*n1*n2 + 6*d*n1*n2 - 56*n2^2 + 
      22*d*n2^2 - 4*n2^3 - 40*n2*n3 + 16*d*n2*n3 - 8*n1*n2*n3 - 20*n2^2*n3)*
     j[p4, n1, 1 + n2, 1 + n3, 0, 0, 1, -1, 1, 0, 0, 1, -1, 1, 1])/
    ((2 - d + 2*n1 + n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((32*n2 - 28*d*n2 + 6*d^2*n2 - 48*n1*n2 + 20*d*n1*n2 - 24*n2^2 + 
      10*d*n2^2 - 8*n1*n2^2 - 4*n2^3 + 56*n2*n3 - 24*d*n2*n3 - 16*n1*n2*n3 - 
      4*n2^2*n3 + 16*n2*n3^2)*j[p4, n1, 1 + n2, 1 + n3, 0, 0, 1, -1, 1, 0, 1, 
      1, -1, 0, 1])/((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 
      16*d*n2 + 4*n2^2 + 56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((8*n2 - 3*d*n2 - 2*n1*n2 + 4*n2*n3)*j[p4, n1, 1 + n2, 1 + n3, 0, 0, 1, 
      -1, 1, 0, 1, 1, -1, 1, 1])/((-2 + d - 2*n1 - n2)*
     (-8 + 3*d - 2*n2 - 2*n3)) + 
   ((-16*n2 + 14*d*n2 - 3*d^2*n2 + 24*n1*n2 - 10*d*n1*n2 + 12*n2^2 - 
      5*d*n2^2 + 4*n1*n2^2 + 2*n2^3 - 28*n2*n3 + 12*d*n2*n3 + 8*n1*n2*n3 + 
      2*n2^2*n3 - 8*n2*n3^2)*j[p4, n1, 1 + n2, 1 + n3, 0, 0, 1, 0, 0, 0, 1, 
      1, -2, 1, 1])/((-2 + d - 2*n1 - n2)*(96 - 76*d + 15*d^2 + 40*n2 - 
      16*d*n2 + 4*n2^2 + 56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-8*n2 + 3*d*n2 + 2*n1*n2 - 4*n2*n3)*j[p4, n1, 1 + n2, 1 + n3, 0, 0, 1, 
      0, 0, 0, 1, 1, -1, 1, 1])/((-2 + d - 2*n1 - n2)*
     (-8 + 3*d - 2*n2 - 2*n3)) + 
   ((16*n2 - 14*d*n2 + 3*d^2*n2 + 16*n1*n2 - 6*d*n1*n2 + 28*n2^2 - 
      11*d*n2^2 + 2*n2^3 - 12*n2*n3 + 4*d*n2*n3 + 8*n1*n2*n3 + 10*n2^2*n3 - 
      8*n2*n3^2)*j[p4, n1, 1 + n2, 1 + n3, 0, 0, 1, 0, 1, 0, 0, 1, -2, 1, 1])/
    ((2 - d + 2*n1 + n2)*(96 - 76*d + 15*d^2 + 40*n2 - 16*d*n2 + 4*n2^2 + 
      56*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-10*n1 + 4*d*n1 - n1*n2 - 4*n1*n3)*j[p4, 1 + n1, -1 + n2, 1 + n3, 0, 0, 
      1, 0, 1, 0, 1, 1, -1, 0, 1])/((2 - d + 2*n1 + n2)*
     (-12 + 5*d - 2*n2 - 4*n3)) + ((10*n1 - 4*d*n1 + n1*n2 + 4*n1*n3)*
     j[p4, 1 + n1, n2, 1 + n3, 0, 0, 1, 0, 0, 0, 1, 1, -1, 1, 1])/
    ((2 - d + 2*n1 + n2)*(-12 + 5*d - 2*n2 - 4*n3)) + 
   ((10*n1 - 4*d*n1 + n1*n2 + 4*n1*n3)*j[p4, 1 + n1, n2, 1 + n3, 0, 0, 1, 0, 
      1, 0, 0, 1, -1, 1, 1])/((2 - d + 2*n1 + n2)*(-12 + 5*d - 2*n2 - 
      4*n3)) + ((-10*n1 + 4*d*n1 - n1*n2 - 4*n1*n3)*
     j[p4, 1 + n1, n2, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 0, -1, 1, 1])/
    ((2 - d + 2*n1 + n2)*(-12 + 5*d - 2*n2 - 4*n3)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n4 == 0 && 
    n5 == 0 && n6 == 1 && n7 == 0 && n8 == 1 && n9 == 0 && n3 != 0 -> 
  ((-12 + 4*d - n2 - 16*n3 + 4*d*n3 - n2*n3 - 4*n3^2)*
     j[p4, -1 + n1, -1 + n2, 2 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(-14 + 5*d - 2*n2 - 4*n3)) + 
   ((44 - 24*d + 3*d^2 - 28*n1 + 10*d*n1 - 12*n2 + 5*d*n2 - 4*n1*n2 - 
      2*n2^2 + 40*n3 - 12*d*n3 - 8*n1*n3 - 2*n2*n3 + 8*n3^2)*
     j[p4, -1 + n1, n2, 1 + n3, 0, 0, 1, 0, 0, 0, 2, 1, 0, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((24 - 8*d + 2*n2 + 8*n3)*j[p4, -1 + n1, n2, 1 + n3, 0, 0, 1, 0, 1, 0, 0, 
      2, 0, 1, 1])/((-2 + d - 2*n1 - n2)*(-14 + 5*d - 2*n2 - 4*n3)) + 
   ((16 - 60*d + 36*d^2 - 6*d^3 + 168*n1 - 120*d*n1 + 22*d^2*n1 + 8*n1^2 - 
      4*d*n1^2 + 136*n2 - 131*d*n2 + 29*d^2*n2 + 100*n1*n2 - 36*d*n1*n2 + 
      4*n1^2*n2 + 110*n2^2 - 40*d*n2^2 + 8*n1*n2^2 + 8*n2^3 - 72*n3 + 
      24*d*n3 + 96*n1*n3 - 32*d*n1*n3 + 10*n2*n3 - 15*d*n2*n3 + 28*n1*n2*n3 + 
      30*n2^2*n3 - 48*n3^2 + 12*d*n3^2 + 16*n1*n3^2 - 10*n2*n3^2 - 8*n3^3)*
     j[p4, -1 + n1, n2, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((44 - 24*d + 3*d^2 - 28*n1 + 10*d*n1 - 12*n2 + 5*d*n2 - 4*n1*n2 - 
      2*n2^2 + 40*n3 - 12*d*n3 - 8*n1*n3 - 2*n2*n3 + 8*n3^2)*
     j[p4, -1 + n1, n2, 1 + n3, 0, 0, 1, 0, 1, 0, 2, 1, 0, 0, 1])/
    ((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((8 + 16*d - 6*d^2 - 40*n1 + 12*d*n1 - 64*n2 + 22*d*n2 - 4*n2^2 + 56*n3 + 
      8*d*n3 - 6*d^2*n3 - 56*n1*n3 + 12*d*n1*n3 - 84*n2*n3 + 22*d*n2*n3 - 
      4*n2^2*n3 + 64*n3^2 - 8*d*n3^2 - 16*n1*n3^2 - 20*n2*n3^2 + 16*n3^3)*
     j[p4, -1 + n1, n2, 2 + n3, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-92 + 76*d - 15*d^2 - 20*n1 + 6*d*n1 - 64*n2 + 22*d*n2 - 4*n2^2 - 
      124*n3 + 92*d*n3 - 15*d^2*n3 - 28*n1*n3 + 6*d*n1*n3 - 84*n2*n3 + 
      22*d*n2*n3 - 4*n2^2*n3 - 32*n3^2 + 16*d*n3^2 - 8*n1*n3^2 - 20*n2*n3^2)*
     j[p4, -1 + n1, n2, 2 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-132*n2 + 108*d*n2 - 21*d^2*n2 - 12*n1*n2 + 2*d*n1*n2 - 84*n2^2 + 
      28*d*n2^2 + 4*n1*n2^2 - 4*n2^3 - 48*n2*n3 + 24*d*n2*n3 - 8*n1*n2*n3 - 
      28*n2^2*n3)*j[p4, -1 + n1, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 
      1])/((2 - d + 2*n1 + n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 
      4*n2^2 + 60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-8*n2 - 16*d*n2 + 6*d^2*n2 + 40*n1*n2 - 12*d*n1*n2 + 64*n2^2 - 
      22*d*n2^2 + 4*n2^3 - 48*n2*n3 + 8*d*n2*n3 + 16*n1*n2*n3 + 20*n2^2*n3 - 
      16*n2*n3^2)*j[p4, -1 + n1, 1 + n2, 1 + n3, 0, 0, 1, -1, 1, 0, 1, 1, 0, 
      1, 1])/((2 - d + 2*n1 + n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 
      4*n2^2 + 60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((92*n2 - 76*d*n2 + 15*d^2*n2 + 20*n1*n2 - 6*d*n1*n2 + 64*n2^2 - 
      22*d*n2^2 + 4*n2^3 + 32*n2*n3 - 16*d*n2*n3 + 8*n1*n2*n3 + 20*n2^2*n3)*
     j[p4, -1 + n1, 1 + n2, 1 + n3, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((2 - d + 2*n1 + n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((8*n2 + 16*d*n2 - 6*d^2*n2 - 40*n1*n2 + 12*d*n1*n2 - 64*n2^2 + 
      22*d*n2^2 - 4*n2^3 + 48*n2*n3 - 8*d*n2*n3 - 16*n1*n2*n3 - 20*n2^2*n3 + 
      16*n2*n3^2)*j[p4, -1 + n1, 1 + n2, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, -1, 
      1, 1])/((2 - d + 2*n1 + n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 
      4*n2^2 + 60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-8*n2 - 16*d*n2 + 6*d^2*n2 + 40*n1*n2 - 12*d*n1*n2 + 64*n2^2 - 
      22*d*n2^2 + 4*n2^3 - 48*n2*n3 + 8*d*n2*n3 + 16*n1*n2*n3 + 20*n2^2*n3 - 
      16*n2*n3^2)*j[p4, -1 + n1, 1 + n2, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 
      0, 1])/((2 - d + 2*n1 + n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 
      4*n2^2 + 60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-44 + 24*d - 3*d^2 + 28*n1 - 10*d*n1 + 12*n2 - 5*d*n2 + 4*n1*n2 + 
      2*n2^2 - 40*n3 + 12*d*n3 + 8*n1*n3 + 2*n2*n3 - 8*n3^2)*
     j[p4, n1, -1 + n2, 1 + n3, 0, 0, 1, 0, 0, 0, 2, 1, 0, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((48 - 40*d + 8*d^2 + 24*n1 - 8*d*n1 + 28*n2 - 10*d*n2 + 2*n1*n2 + 
      2*n2^2 + 16*n3 - 8*d*n3 + 8*n1*n3 + 8*n2*n3)*j[p4, n1, -1 + n2, 1 + n3, 
      0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1])/((-2 + d - 2*n1 - n2)*
     (-14 + 5*d - 2*n2 - 4*n3)) + 
   ((-44 + 24*d - 3*d^2 + 28*n1 - 10*d*n1 + 12*n2 - 5*d*n2 + 4*n1*n2 + 
      2*n2^2 - 40*n3 + 12*d*n3 + 8*n1*n3 + 2*n2*n3 - 8*n3^2)*
     j[p4, n1, -1 + n2, 1 + n3, 0, 0, 1, 0, 1, 0, 2, 0, 0, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-44 + 24*d - 3*d^2 + 28*n1 - 10*d*n1 + 12*n2 - 5*d*n2 + 4*n1*n2 + 
      2*n2^2 - 40*n3 + 12*d*n3 + 8*n1*n3 + 2*n2*n3 - 8*n3^2)*
     j[p4, n1, -1 + n2, 1 + n3, 0, 0, 1, 0, 1, 0, 2, 1, 0, 0, 1])/
    ((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((12 - 4*d + n2 + 4*n3)*j[p4, n1, -1 + n2, 1 + n3, 0, 0, 1, 0, 2, 0, 1, 0, 
      0, 1, 1])/((-2 + d - 2*n1 - n2)*(-14 + 5*d - 2*n2 - 4*n3)) + 
   ((12 - 4*d + n2 + 4*n3)*j[p4, n1, -1 + n2, 1 + n3, 0, 0, 1, 0, 2, 0, 1, 1, 
      0, 0, 1])/((-2 + d - 2*n1 - n2)*(-14 + 5*d - 2*n2 - 4*n3)) + 
   ((-20 + 16*d - 3*d^2 + 4*n1 - 2*d*n1 - 10*n2 + 3*d*n2 + 2*n1*n2 - 8*n3 + 
      4*d*n3 - 4*n2*n3)*j[p4, n1, -1 + n2, 1 + n3, 0, 0, 2, 0, 1, 0, 0, 1, 0, 
      1, 1])/((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 
      4*n2^2 + 60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-100 + 60*d - 9*d^2 + 20*n1 - 6*d*n1 - 180*n3 + 84*d*n3 - 9*d^2*n3 + 
      28*n1*n3 - 6*d*n1*n3 - 96*n3^2 + 24*d*n3^2 + 8*n1*n3^2 - 16*n3^3)*
     j[p4, n1, -1 + n2, 2 + n3, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((100 - 60*d + 9*d^2 - 20*n1 + 6*d*n1 + 180*n3 - 84*d*n3 + 9*d^2*n3 - 
      28*n1*n3 + 6*d*n1*n3 + 96*n3^2 - 24*d*n3^2 - 8*n1*n3^2 + 16*n3^3)*
     j[p4, n1, -1 + n2, 2 + n3, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-100 + 60*d - 9*d^2 + 20*n1 - 6*d*n1 - 180*n3 + 84*d*n3 - 9*d^2*n3 + 
      28*n1*n3 - 6*d*n1*n3 - 96*n3^2 + 24*d*n3^2 + 8*n1*n3^2 - 16*n3^3)*
     j[p4, n1, -1 + n2, 2 + n3, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-12 + 4*d - n2 - 16*n3 + 4*d*n3 - n2*n3 - 4*n3^2)*
     j[p4, n1, -1 + n2, 2 + n3, 0, 0, 1, 0, 1, 0, 1, 1, -1, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(-14 + 5*d - 2*n2 - 4*n3)) + 
   ((-100 + 60*d - 9*d^2 + 20*n1 - 6*d*n1 - 180*n3 + 84*d*n3 - 9*d^2*n3 + 
      28*n1*n3 - 6*d*n1*n3 - 96*n3^2 + 24*d*n3^2 + 8*n1*n3^2 - 16*n3^3)*
     j[p4, n1, -1 + n2, 2 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((12 - 4*d + n2 + 16*n3 - 4*d*n3 + n2*n3 + 4*n3^2)*
     j[p4, n1, -1 + n2, 2 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(-14 + 5*d - 2*n2 - 4*n3)) + 
   ((44 - 24*d + 3*d^2 - 28*n1 + 10*d*n1 - 12*n2 + 5*d*n2 - 4*n1*n2 - 
      2*n2^2 + 40*n3 - 12*d*n3 - 8*n1*n3 - 2*n2*n3 + 8*n3^2)*
     j[p4, n1, n2, n3, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 2])/
    ((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((44 - 24*d + 3*d^2 - 28*n1 + 10*d*n1 - 12*n2 + 5*d*n2 - 4*n1*n2 - 
      2*n2^2 + 40*n3 - 12*d*n3 - 8*n1*n3 - 2*n2*n3 + 8*n3^2)*
     j[p4, n1, n2, n3, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 2])/
    ((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((44 - 24*d + 3*d^2 - 28*n1 + 10*d*n1 - 12*n2 + 5*d*n2 - 4*n1*n2 - 
      2*n2^2 + 40*n3 - 12*d*n3 - 8*n1*n3 - 2*n2*n3 + 8*n3^2)*
     j[p4, n1, n2, n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    ((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-44 + 24*d - 3*d^2 + 28*n1 - 10*d*n1 + 12*n2 - 5*d*n2 + 4*n1*n2 + 
      2*n2^2 - 40*n3 + 12*d*n3 + 8*n1*n3 + 2*n2*n3 - 8*n3^2)*
     j[p4, n1, n2, n3, 0, 0, 1, 0, 1, 0, 2, 0, 0, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-20 + 16*d - 3*d^2 + 4*n1 - 2*d*n1 - 10*n2 + 3*d*n2 + 2*n1*n2 - 8*n3 + 
      4*d*n3 - 4*n2*n3)*j[p4, n1, n2, n3, 0, 0, 2, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-44 + 24*d - 3*d^2 + 28*n1 - 10*d*n1 + 12*n2 - 5*d*n2 + 4*n1*n2 + 
      2*n2^2 - 40*n3 + 12*d*n3 + 8*n1*n3 + 2*n2*n3 - 8*n3^2)*
     j[p4, n1, n2, 1 + n3, -1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 2])/
    ((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-44 + 24*d - 3*d^2 + 28*n1 - 10*d*n1 + 12*n2 - 5*d*n2 + 4*n1*n2 + 
      2*n2^2 - 40*n3 + 12*d*n3 + 8*n1*n3 + 2*n2*n3 - 8*n3^2)*
     j[p4, n1, n2, 1 + n3, -1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 2])/
    ((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-44 + 24*d - 3*d^2 + 28*n1 - 10*d*n1 + 12*n2 - 5*d*n2 + 4*n1*n2 + 
      2*n2^2 - 40*n3 + 12*d*n3 + 8*n1*n3 + 2*n2*n3 - 8*n3^2)*
     j[p4, n1, n2, 1 + n3, -1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    ((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-44 + 24*d - 3*d^2 + 28*n1 - 10*d*n1 + 12*n2 - 5*d*n2 + 4*n1*n2 + 
      2*n2^2 - 40*n3 + 12*d*n3 + 8*n1*n3 + 2*n2*n3 - 8*n3^2)*
     j[p4, n1, n2, 1 + n3, -1, 0, 2, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-24 + 8*d + 24*n1 - 8*d*n1 + 22*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 - 32*n3 + 
      8*d*n3 + 8*n1*n3 + 6*n2*n3 - 8*n3^2)*j[p4, n1, n2, 1 + n3, 0, 0, 0, 0, 
      1, -1, 1, 1, 0, 1, 2])/((2 - d + 2*n1 + n2)*(112 - 82*d + 15*d^2 + 
      44*n2 - 16*d*n2 + 4*n2^2 + 60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((20 - 16*d + 3*d^2 - 4*n1 + 2*d*n1 + 10*n2 - 3*d*n2 - 2*n1*n2 + 8*n3 - 
      4*d*n3 + 4*n2*n3)*j[p4, n1, n2, 1 + n3, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 
      1])/((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 
      4*n2^2 + 60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((24 - 8*d - 24*n1 + 8*d*n1 - 22*n2 + 8*d*n2 - 2*n1*n2 - 2*n2^2 + 32*n3 - 
      8*d*n3 - 8*n1*n3 - 6*n2*n3 + 8*n3^2)*j[p4, n1, n2, 1 + n3, 0, 0, 0, 0, 
      1, 0, 1, 1, 0, 1, 2])/((2 - d + 2*n1 + n2)*(112 - 82*d + 15*d^2 + 
      44*n2 - 16*d*n2 + 4*n2^2 + 60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-24 + 8*d - 2*n2 - 8*n3)*j[p4, n1, n2, 1 + n3, 0, 0, 1, -1, 0, 0, 1, 2, 
      0, 1, 1])/((-2 + d - 2*n1 - n2)*(-14 + 5*d - 2*n2 - 4*n3)) + 
   ((44 - 24*d + 3*d^2 - 28*n1 + 10*d*n1 - 12*n2 + 5*d*n2 - 4*n1*n2 - 
      2*n2^2 + 40*n3 - 12*d*n3 - 8*n1*n3 - 2*n2*n3 + 8*n3^2)*
     j[p4, n1, n2, 1 + n3, 0, 0, 1, -1, 0, 0, 2, 1, 0, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((44 - 24*d + 3*d^2 - 28*n1 + 10*d*n1 - 12*n2 + 5*d*n2 - 4*n1*n2 - 
      2*n2^2 + 40*n3 - 12*d*n3 - 8*n1*n3 - 2*n2*n3 + 8*n3^2)*
     j[p4, n1, n2, 1 + n3, 0, 0, 1, -1, 1, 0, 2, 0, 0, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((44 - 24*d + 3*d^2 - 28*n1 + 10*d*n1 - 12*n2 + 5*d*n2 - 4*n1*n2 - 
      2*n2^2 + 40*n3 - 12*d*n3 - 8*n1*n3 - 2*n2*n3 + 8*n3^2)*
     j[p4, n1, n2, 1 + n3, 0, 0, 1, -1, 1, 0, 2, 1, 0, 0, 1])/
    ((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-12 + 4*d - n2 - 4*n3)*j[p4, n1, n2, 1 + n3, 0, 0, 1, -1, 2, 0, 1, 0, 0, 
      1, 1])/((-2 + d - 2*n1 - n2)*(-14 + 5*d - 2*n2 - 4*n3)) + 
   ((-12 + 4*d - n2 - 4*n3)*j[p4, n1, n2, 1 + n3, 0, 0, 1, -1, 2, 0, 1, 1, 0, 
      0, 1])/((-2 + d - 2*n1 - n2)*(-14 + 5*d - 2*n2 - 4*n3)) + 
   ((-24 + 8*d + 24*n1 - 8*d*n1 + 22*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 - 32*n3 + 
      8*d*n3 + 8*n1*n3 + 6*n2*n3 - 8*n3^2)*j[p4, n1, n2, 1 + n3, 0, 0, 1, 0, 
      0, -1, 1, 1, 0, 1, 2])/((2 - d + 2*n1 + n2)*(112 - 82*d + 15*d^2 + 
      44*n2 - 16*d*n2 + 4*n2^2 + 60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((84 - 56*d + 9*d^2 - 132*n1 + 82*d*n1 - 12*d^2*n1 - 176*n2 + 115*d*n2 - 
      18*d^2*n2 + 16*n1*n2 - 9*d*n1*n2 - 10*n2^2 + d*n2^2 + 6*n1*n2^2 + 
      2*n2^3 + 376*n3 - 236*d*n3 + 36*d^2*n3 - 128*n1*n3 + 44*d*n1*n3 - 
      70*n2*n3 + 26*d*n2*n3 - 6*n1*n2*n3 - 6*n2^2*n3 + 216*n3^2 - 72*d*n3^2 - 
      24*n1*n3^2 + 32*n3^3)*j[p4, n1, n2, 1 + n3, 0, 0, 1, 0, 0, 0, 1, 1, 0, 
      1, 1])/((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 
      4*n2^2 + 60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((24 - 8*d - 24*n1 + 8*d*n1 - 22*n2 + 8*d*n2 - 2*n1*n2 - 2*n2^2 + 32*n3 - 
      8*d*n3 - 8*n1*n3 - 6*n2*n3 + 8*n3^2)*j[p4, n1, n2, 1 + n3, 0, 0, 1, 0, 
      0, 0, 1, 1, 0, 1, 2])/((2 - d + 2*n1 + n2)*(112 - 82*d + 15*d^2 + 
      44*n2 - 16*d*n2 + 4*n2^2 + 60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-40 + 32*d - 6*d^2 + 8*n1 - 4*d*n1 - 20*n2 + 6*d*n2 + 4*n1*n2 - 16*n3 + 
      8*d*n3 - 8*n2*n3)*j[p4, n1, n2, 1 + n3, 0, 0, 1, 0, 0, 0, 1, 2, -1, 1, 
      1])/((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 
      4*n2^2 + 60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((40 - 32*d + 6*d^2 - 8*n1 + 4*d*n1 + 20*n2 - 6*d*n2 - 4*n1*n2 + 16*n3 - 
      8*d*n3 + 8*n2*n3)*j[p4, n1, n2, 1 + n3, 0, 0, 1, 0, 0, 0, 1, 2, 0, 1, 
      1])/((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 
      4*n2^2 + 60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-24 + 8*d + 24*n1 - 8*d*n1 + 22*n2 - 8*d*n2 + 2*n1*n2 + 2*n2^2 - 32*n3 + 
      8*d*n3 + 8*n1*n3 + 6*n2*n3 - 8*n3^2)*j[p4, n1, n2, 1 + n3, 0, 0, 1, 0, 
      1, -1, 1, 1, 0, 0, 2])/((2 - d + 2*n1 + n2)*(112 - 82*d + 15*d^2 + 
      44*n2 - 16*d*n2 + 4*n2^2 + 60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((120 - 76*d + 12*d^2 - 120*n1 + 76*d*n1 - 12*d^2*n1 + 14*n2 + 5*d*n2 - 
      3*d^2*n2 - 54*n1*n2 + 17*d*n1*n2 - 32*n2^2 + 11*d*n2^2 - 2*n1*n2^2 - 
      2*n2^3 + 48*n3 + 4*d*n3 - 6*d^2*n3 - 56*n1*n3 + 16*d*n1*n3 + 8*n2*n3 + 
      2*d*n2*n3 - 14*n1*n2*n3 - 10*n2^2*n3 + 8*d*n3^2 - 8*n1*n3^2)*
     j[p4, n1, n2, 1 + n3, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((12 - 4*d + n2 + 4*n3)*j[p4, n1, n2, 1 + n3, 0, 0, 1, 0, 1, 0, 0, 2, -1, 
      1, 1])/((-2 + d - 2*n1 - n2)*(-14 + 5*d - 2*n2 - 4*n3)) + 
   ((-12 + 4*d - n2 - 4*n3)*j[p4, n1, n2, 1 + n3, 0, 0, 1, 0, 1, 0, 0, 2, 0, 
      1, 1])/((-2 + d - 2*n1 - n2)*(-14 + 5*d - 2*n2 - 4*n3)) + 
   ((-100 + 60*d - 9*d^2 + 116*n1 - 74*d*n1 + 12*d^2*n1 + 32*n1*n2 - 
      11*d*n1*n2 + 2*n1*n2^2 - 40*n3 - 8*d*n3 + 6*d^2*n3 + 56*n1*n3 - 
      16*d*n1*n3 + 20*n2*n3 - 6*d*n2*n3 + 6*n1*n2*n3 - 8*d*n3^2 + 8*n1*n3^2 + 
      8*n2*n3^2)*j[p4, n1, n2, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((236 - 160*d + 27*d^2 - 68*n1 + 42*d*n1 - 6*d^2*n1 + 8*n1^2 - 4*d*n1^2 - 
      228*n2 + 167*d*n2 - 30*d^2*n2 + 32*n1*n2 - 14*d*n1*n2 + 4*n1^2*n2 - 
      38*n2^2 + 12*d*n2^2 + 8*n1*n2^2 + 332*n3 - 176*d*n3 + 21*d^2*n3 - 
      60*n1*n3 + 22*d*n1*n3 - 134*n2*n3 + 52*d*n2*n3 - 16*n2^2*n3 + 
      136*n3^2 - 40*d*n3^2 - 8*n1*n3^2 - 16*n2*n3^2 + 16*n3^3)*
     j[p4, n1, n2, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((24 - 8*d - 24*n1 + 8*d*n1 - 22*n2 + 8*d*n2 - 2*n1*n2 - 2*n2^2 + 32*n3 - 
      8*d*n3 - 8*n1*n3 - 6*n2*n3 + 8*n3^2)*j[p4, n1, n2, 1 + n3, 0, 0, 1, 0, 
      1, 0, 1, 1, 0, 0, 2])/((2 - d + 2*n1 + n2)*(112 - 82*d + 15*d^2 + 
      44*n2 - 16*d*n2 + 4*n2^2 + 60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-20 + 16*d - 3*d^2 + 4*n1 - 2*d*n1 - 10*n2 + 3*d*n2 + 2*n1*n2 - 8*n3 + 
      4*d*n3 - 4*n2*n3)*j[p4, n1, n2, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 
      0])/((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 
      4*n2^2 + 60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-32 + 44*d - 20*d^2 + 3*d^3 + 8*n1 - 4*d*n1 - 8*n1^2 + 4*d*n1^2 - 
      36*n2 + 44*d*n2 - 11*d^2*n2 - 24*n1*n2 + 10*d*n1*n2 - 4*n1^2*n2 - 
      48*n2^2 + 18*d*n2^2 - 4*n1*n2^2 - 4*n2^3 - 8*n3 + 8*d*n3 - 2*d^2*n3 + 
      8*n1*n3 - 4*d*n1*n3 + 16*n2*n3 - 4*n1*n2*n3 - 12*n2^2*n3 + 8*n2*n3^2)*
     j[p4, n1, n2, 1 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-44 + 24*d - 3*d^2 + 28*n1 - 10*d*n1 + 12*n2 - 5*d*n2 + 4*n1*n2 + 
      2*n2^2 - 40*n3 + 12*d*n3 + 8*n1*n3 + 2*n2*n3 - 8*n3^2)*
     j[p4, n1, n2, 1 + n3, 0, 0, 1, 0, 1, 0, 2, 0, -1, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((44 - 24*d + 3*d^2 - 28*n1 + 10*d*n1 - 12*n2 + 5*d*n2 - 4*n1*n2 - 
      2*n2^2 + 40*n3 - 12*d*n3 - 8*n1*n3 - 2*n2*n3 + 8*n3^2)*
     j[p4, n1, n2, 1 + n3, 0, 0, 1, 0, 1, 0, 2, 0, 0, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((20 - 16*d + 3*d^2 - 4*n1 + 2*d*n1 + 10*n2 - 3*d*n2 - 2*n1*n2 + 8*n3 - 
      4*d*n3 + 4*n2*n3)*j[p4, n1, n2, 1 + n3, 0, 0, 2, -1, 1, 0, 0, 1, 0, 1, 
      1])/((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 
      4*n2^2 + 60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((64 - 40*d + 6*d^2 - 32*n1 + 12*d*n1 - 2*n2 + 2*d*n2 - 6*n1*n2 - 2*n2^2 + 
      48*n3 - 16*d*n3 - 8*n1*n3 + 2*n2*n3 + 8*n3^2)*
     j[p4, n1, n2, 1 + n3, 0, 0, 2, 0, 0, -1, 1, 1, 0, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((20 - 16*d + 3*d^2 - 4*n1 + 2*d*n1 + 10*n2 - 3*d*n2 - 2*n1*n2 + 8*n3 - 
      4*d*n3 + 4*n2*n3)*j[p4, n1, n2, 1 + n3, 0, 0, 2, 0, 1, -1, 1, 1, 0, 0, 
      1])/((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 
      4*n2^2 + 60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((20 - 16*d + 3*d^2 - 4*n1 + 2*d*n1 + 10*n2 - 3*d*n2 - 2*n1*n2 + 8*n3 - 
      4*d*n3 + 4*n2*n3)*j[p4, n1, n2, 1 + n3, 0, 0, 2, 0, 1, -1, 1, 1, 0, 1, 
      0])/((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 
      4*n2^2 + 60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-20 + 16*d - 3*d^2 + 4*n1 - 2*d*n1 - 10*n2 + 3*d*n2 + 2*n1*n2 - 8*n3 + 
      4*d*n3 - 4*n2*n3)*j[p4, n1, n2, 1 + n3, 0, 0, 2, 0, 1, 0, 0, 1, -1, 1, 
      1])/((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 
      4*n2^2 + 60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((100 - 60*d + 9*d^2 - 20*n1 + 6*d*n1 + 180*n3 - 84*d*n3 + 9*d^2*n3 - 
      28*n1*n3 + 6*d*n1*n3 + 96*n3^2 - 24*d*n3^2 - 8*n1*n3^2 + 16*n3^3)*
     j[p4, n1, n2, 2 + n3, 0, 0, 1, -1, 0, 0, 1, 1, 0, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-100 + 60*d - 9*d^2 + 20*n1 - 6*d*n1 - 180*n3 + 84*d*n3 - 9*d^2*n3 + 
      28*n1*n3 - 6*d*n1*n3 - 96*n3^2 + 24*d*n3^2 + 8*n1*n3^2 - 16*n3^3)*
     j[p4, n1, n2, 2 + n3, 0, 0, 1, -1, 1, 0, 0, 1, 0, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((100 - 60*d + 9*d^2 - 20*n1 + 6*d*n1 + 180*n3 - 84*d*n3 + 9*d^2*n3 - 
      28*n1*n3 + 6*d*n1*n3 + 96*n3^2 - 24*d*n3^2 - 8*n1*n3^2 + 16*n3^3)*
     j[p4, n1, n2, 2 + n3, 0, 0, 1, -1, 1, 0, 1, 0, 0, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((100 - 60*d + 9*d^2 - 20*n1 + 6*d*n1 + 180*n3 - 84*d*n3 + 9*d^2*n3 - 
      28*n1*n3 + 6*d*n1*n3 + 96*n3^2 - 24*d*n3^2 - 8*n1*n3^2 + 16*n3^3)*
     j[p4, n1, n2, 2 + n3, 0, 0, 1, -1, 1, 0, 1, 1, 0, 0, 1])/
    ((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-12 + 4*d - n2 - 16*n3 + 4*d*n3 - n2*n3 - 4*n3^2)*
     j[p4, n1, n2, 2 + n3, 0, 0, 1, -1, 1, 0, 1, 1, 0, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(-14 + 5*d - 2*n2 - 4*n3)) + 
   ((4 + 8*d - 3*d^2 - 20*n1 + 6*d*n1 - 32*n2 + 11*d*n2 - 2*n2^2 + 28*n3 + 
      4*d*n3 - 3*d^2*n3 - 28*n1*n3 + 6*d*n1*n3 - 42*n2*n3 + 11*d*n2*n3 - 
      2*n2^2*n3 + 32*n3^2 - 4*d*n3^2 - 8*n1*n3^2 - 10*n2*n3^2 + 8*n3^3)*
     j[p4, n1, n2, 2 + n3, 0, 0, 1, 0, 0, 0, 1, 1, -1, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-8 - 16*d + 6*d^2 + 40*n1 - 12*d*n1 + 64*n2 - 22*d*n2 + 4*n2^2 - 56*n3 - 
      8*d*n3 + 6*d^2*n3 + 56*n1*n3 - 12*d*n1*n3 + 84*n2*n3 - 22*d*n2*n3 + 
      4*n2^2*n3 - 64*n3^2 + 8*d*n3^2 + 16*n1*n3^2 + 20*n2*n3^2 - 16*n3^3)*
     j[p4, n1, n2, 2 + n3, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((4 + 8*d - 3*d^2 - 20*n1 + 6*d*n1 - 32*n2 + 11*d*n2 - 2*n2^2 + 28*n3 + 
      4*d*n3 - 3*d^2*n3 - 28*n1*n3 + 6*d*n1*n3 - 42*n2*n3 + 11*d*n2*n3 - 
      2*n2^2*n3 + 32*n3^2 - 4*d*n3^2 - 8*n1*n3^2 - 10*n2*n3^2 + 8*n3^3)*
     j[p4, n1, n2, 2 + n3, 0, 0, 1, 0, 1, 0, 0, 1, -1, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-4 - 8*d + 3*d^2 + 20*n1 - 6*d*n1 + 32*n2 - 11*d*n2 + 2*n2^2 - 28*n3 - 
      4*d*n3 + 3*d^2*n3 + 28*n1*n3 - 6*d*n1*n3 + 42*n2*n3 - 11*d*n2*n3 + 
      2*n2^2*n3 - 32*n3^2 + 4*d*n3^2 + 8*n1*n3^2 + 10*n2*n3^2 - 8*n3^3)*
     j[p4, n1, n2, 2 + n3, 0, 0, 1, 0, 1, 0, 1, 0, -1, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((12 - 4*d + n2 + 16*n3 - 4*d*n3 + n2*n3 + 4*n3^2)*
     j[p4, n1, n2, 2 + n3, 0, 0, 1, 0, 1, 0, 1, 1, -1, 0, 1])/
    ((-2 + d - 2*n1 - n2)*(-14 + 5*d - 2*n2 - 4*n3)) + 
   ((-4 - 8*d + 3*d^2 + 20*n1 - 6*d*n1 + 32*n2 - 11*d*n2 + 2*n2^2 - 28*n3 - 
      4*d*n3 + 3*d^2*n3 + 28*n1*n3 - 6*d*n1*n3 + 42*n2*n3 - 11*d*n2*n3 + 
      2*n2^2*n3 - 32*n3^2 + 4*d*n3^2 + 8*n1*n3^2 + 10*n2*n3^2 - 8*n3^3)*
     j[p4, n1, n2, 2 + n3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-44*n2 + 24*d*n2 - 3*d^2*n2 + 28*n1*n2 - 10*d*n1*n2 + 12*n2^2 - 
      5*d*n2^2 + 4*n1*n2^2 + 2*n2^3 - 40*n2*n3 + 12*d*n2*n3 + 8*n1*n2*n3 + 
      2*n2^2*n3 - 8*n2*n3^2)*j[p4, n1, 1 + n2, n3, 0, 0, 1, 0, 0, 0, 1, 1, 0, 
      1, 1])/((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 
      4*n2^2 + 60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-136*n2 + 100*d*n2 - 18*d^2*n2 + 8*n1*n2 - 4*d*n1*n2 - 52*n2^2 + 
      17*d*n2^2 + 4*n1*n2^2 - 2*n2^3 - 72*n2*n3 + 28*d*n2*n3 - 18*n2^2*n3 - 
      8*n2*n3^2)*j[p4, n1, 1 + n2, n3, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((88*n2 - 48*d*n2 + 6*d^2*n2 - 56*n1*n2 + 20*d*n1*n2 - 24*n2^2 + 
      10*d*n2^2 - 8*n1*n2^2 - 4*n2^3 + 80*n2*n3 - 24*d*n2*n3 - 16*n1*n2*n3 - 
      4*n2^2*n3 + 16*n2*n3^2)*j[p4, n1, 1 + n2, 1 + n3, 0, 0, 1, -1, 0, 0, 1, 
      1, 0, 1, 1])/((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 
      16*d*n2 + 4*n2^2 + 60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-92*n2 + 76*d*n2 - 15*d^2*n2 - 20*n1*n2 + 6*d*n1*n2 - 64*n2^2 + 
      22*d*n2^2 - 4*n2^3 - 32*n2*n3 + 16*d*n2*n3 - 8*n1*n2*n3 - 20*n2^2*n3)*
     j[p4, n1, 1 + n2, 1 + n3, 0, 0, 1, -1, 1, 0, 0, 1, 0, 1, 1])/
    ((2 - d + 2*n1 + n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((88*n2 - 48*d*n2 + 6*d^2*n2 - 56*n1*n2 + 20*d*n1*n2 - 24*n2^2 + 
      10*d*n2^2 - 8*n1*n2^2 - 4*n2^3 + 80*n2*n3 - 24*d*n2*n3 - 16*n1*n2*n3 - 
      4*n2^2*n3 + 16*n2*n3^2)*j[p4, n1, 1 + n2, 1 + n3, 0, 0, 1, -1, 1, 0, 1, 
      1, 0, 0, 1])/((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 
      16*d*n2 + 4*n2^2 + 60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((10*n2 - 3*d*n2 - 2*n1*n2 + 4*n2*n3)*j[p4, n1, 1 + n2, 1 + n3, 0, 0, 1, 
      -1, 1, 0, 1, 1, 0, 1, 1])/((-2 + d - 2*n1 - n2)*
     (-8 + 3*d - 2*n2 - 2*n3)) + 
   ((-44*n2 + 24*d*n2 - 3*d^2*n2 + 28*n1*n2 - 10*d*n1*n2 + 12*n2^2 - 
      5*d*n2^2 + 4*n1*n2^2 + 2*n2^3 - 40*n2*n3 + 12*d*n2*n3 + 8*n1*n2*n3 + 
      2*n2^2*n3 - 8*n2*n3^2)*j[p4, n1, 1 + n2, 1 + n3, 0, 0, 1, 0, 0, 0, 1, 
      1, -1, 1, 1])/((-2 + d - 2*n1 - n2)*(112 - 82*d + 15*d^2 + 44*n2 - 
      16*d*n2 + 4*n2^2 + 60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-10*n2 + 3*d*n2 + 2*n1*n2 - 4*n2*n3)*j[p4, n1, 1 + n2, 1 + n3, 0, 0, 1, 
      0, 0, 0, 1, 1, 0, 1, 1])/((-2 + d - 2*n1 - n2)*
     (-8 + 3*d - 2*n2 - 2*n3)) + 
   ((-4*n2 - 8*d*n2 + 3*d^2*n2 + 20*n1*n2 - 6*d*n1*n2 + 32*n2^2 - 11*d*n2^2 + 
      2*n2^3 - 24*n2*n3 + 4*d*n2*n3 + 8*n1*n2*n3 + 10*n2^2*n3 - 8*n2*n3^2)*
     j[p4, n1, 1 + n2, 1 + n3, 0, 0, 1, 0, 1, 0, 0, 1, -1, 1, 1])/
    ((2 - d + 2*n1 + n2)*(112 - 82*d + 15*d^2 + 44*n2 - 16*d*n2 + 4*n2^2 + 
      60*n3 - 22*d*n3 + 12*n2*n3 + 8*n3^2)) + 
   ((-12*n1 + 4*d*n1 - n1*n2 - 4*n1*n3)*j[p4, 1 + n1, -1 + n2, 1 + n3, 0, 0, 
      1, 0, 1, 0, 1, 1, 0, 0, 1])/((2 - d + 2*n1 + n2)*
     (-14 + 5*d - 2*n2 - 4*n3)) + ((12*n1 - 4*d*n1 + n1*n2 + 4*n1*n3)*
     j[p4, 1 + n1, n2, 1 + n3, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((2 - d + 2*n1 + n2)*(-14 + 5*d - 2*n2 - 4*n3)) + 
   ((12*n1 - 4*d*n1 + n1*n2 + 4*n1*n3)*j[p4, 1 + n1, n2, 1 + n3, 0, 0, 1, 0, 
      1, 0, 0, 1, 0, 1, 1])/((2 - d + 2*n1 + n2)*(-14 + 5*d - 2*n2 - 4*n3)) + 
   ((-12*n1 + 4*d*n1 - n1*n2 - 4*n1*n3)*j[p4, 1 + n1, n2, 1 + n3, 0, 0, 1, 0, 
      1, 0, 1, 0, 0, 1, 1])/((2 - d + 2*n1 + n2)*(-14 + 5*d - 2*n2 - 4*n3)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n2 == 0 && n3 == 0 && n4 == 0 && n5 == 0 && n7 == 0 && n9 == 0 && 
    n6 != 1 -> ((4 - 7*d + 3*d^2 + 6*n6 - 5*d*n6 + 2*n6^2)*
     j[p4, 0, 0, 0, 0, 0, -1 + n6, 0, n8, 0, 1, 1, 0, 1, 1])/
    ((-1 + n6)*(-d + 2*n6)) + j[p4, 0, 0, 0, 0, 0, -1 + n6, 0, n8, 0, 2, 1, 
     0, 0, 1]/(-d + 2*n6) + j[p4, 0, 0, 0, 0, 0, n6, 0, n8, -1, 2, 1, 0, 0, 
     1]/(d - 2*n6) + ((-2 + 2*d - 2*n6)*j[p4, 0, 0, 0, 0, 0, n6, 0, n8, 0, 0, 
      1, 0, 1, 1])/(d - 2*n6) + 
   ((-1 + d - 2*n6)*j[p4, 0, 0, 0, 0, 0, n6, 0, n8, 0, 1, 1, 0, 0, 1])/
    (d - 2*n6) + j[p4, 0, 0, 0, 0, 0, n6, 0, n8, 0, 1, 1, 0, 1, 0], 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n3 == 0 && n4 == 0 && n5 == 0 && n7 == 0 && n8 == 1 && n9 == 0 && 
    n6 != 1 -> j[p4, n1, 0, 0, 0, 0, -1 + n6, 0, 0, 0, 2, 1, 0, 1, 1]/
    (-d + 2*n6) + ((4 - 7*d + 3*d^2 + 6*n6 - 5*d*n6 + 2*n6^2)*
     j[p4, n1, 0, 0, 0, 0, -1 + n6, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-1 + n6)*(-d + 2*n6)) + j[p4, n1, 0, 0, 0, 0, -1 + n6, 0, 1, 0, 2, 1, 
     0, 0, 1]/(-d + 2*n6) + j[p4, n1, 0, 0, 0, 0, n6, 0, 0, -1, 2, 1, 0, 1, 
     1]/(d - 2*n6) + ((-1 + d - 2*n6)*j[p4, n1, 0, 0, 0, 0, n6, 0, 0, 0, 1, 
      1, 0, 1, 1])/(d - 2*n6) + j[p4, n1, 0, 0, 0, 0, n6, 0, 1, -1, 2, 1, 0, 
     0, 1]/(d - 2*n6) + ((-2 + 2*d - 2*n6)*j[p4, n1, 0, 0, 0, 0, n6, 0, 1, 0, 
      0, 1, 0, 1, 1])/(d - 2*n6) + 
   ((-1 + d - 2*n6)*j[p4, n1, 0, 0, 0, 0, n6, 0, 1, 0, 1, 1, 0, 0, 1])/
    (d - 2*n6) + j[p4, n1, 0, 0, 0, 0, n6, 0, 1, 0, 1, 1, 0, 1, 0], 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n3 == 0 && n4 == 0 && n5 == 0 && n6 == 1 && n7 == -1 && n9 == 0 && 
    n8 != 1 -> ((2 - d)*j[p4, 0, -1 + n2, 0, 0, 0, 1, 0, n8, 0, 1, 1, 0, 1, 
      1])/(2*(1 - d + n8)) + ((-4 + d)*j[p4, 0, n2, 0, 0, 0, 1, 0, -1 + n8, 
      0, 0, 2, 0, 1, 1])/(2*(-1 + d - n8)*(-1 + n8)) + 
   ((-2 + d)*j[p4, 0, n2, 0, 0, 0, 1, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/
    (2*(-1 + n8)), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?NonPositive, (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, 
    (n7_)?NonPositive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n3 == 0 && n4 == 0 && n5 == 0 && n6 == 1 && n7 == 0 && n9 == 0 && 
     !(n2 == 0 || n8 == 1) -> 
  ((-5 + 3*d - 2*n2 - 3*n8)*j[p4, -1, 1 + n2, 0, 0, 0, 1, 0, n8, 0, 0, 2, 0, 
      1, 1])/(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2) + 
   ((-8 + 13*d - 6*d^2 + d^3 + 2*n2 - 3*d*n2 + d^2*n2 + 2*n2^2 - 2*d*n2^2 - 
      5*d*n8 + d^2*n8 + 6*n2*n8 - 5*d*n2*n8 + 2*n2^2*n8 + 8*n8^2 - 2*d*n8^2 + 
      4*n2*n8^2)*j[p4, -1, 1 + n2, 0, 0, 0, 1, 0, n8, 0, 1, 1, 0, 1, 1])/
    ((-8 + 3*d - 2*n2)*(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2)) + 
   ((-8 + 12*d - 4*d^2 - 4*n2 + 4*d*n2 - 12*n8 + 8*d*n8 - 4*n2*n8 - 4*n8^2)*
     j[p4, -1, 1 + n2, 0, 0, 0, 1, 0, n8, 0, 2, 1, 0, 0, 1])/
    ((-8 + 3*d - 2*n2)*(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2)) + 
   ((-1 + d - n2 + d*n2 - n8 - n2*n8)*j[p4, -1, 2 + n2, -1, 0, 0, 1, 0, n8, 
      0, 1, 1, 0, 1, 1])/(-6 + 5*d - d^2 - 2*n2 - d*n8 + 2*n2*n8 + 2*n8^2) + 
   ((-8 + 12*d - 4*d^2 - 12*n2 + 16*d*n2 - 4*d^2*n2 - 4*n2^2 + 4*d*n2^2 - 
      12*n8 + 8*d*n8 - 16*n2*n8 + 8*d*n2*n8 - 4*n2^2*n8 - 4*n8^2 - 4*n2*n8^2)*
     j[p4, -1, 2 + n2, 0, 0, 0, 1, -1, n8, 0, 1, 1, 0, 1, 1])/
    (-48 + 58*d - 23*d^2 + 3*d^3 - 28*n2 + 16*d*n2 - 2*d^2*n2 - 4*n2^2 - 
     8*d*n8 + 3*d^2*n8 + 16*n2*n8 - 8*d*n2*n8 + 4*n2^2*n8 + 16*n8^2 - 
     6*d*n8^2 + 4*n2*n8^2) + ((d - d^2 - 2*n2 + 3*d*n2 - d^2*n2 - 2*n2^2 + 
      2*d*n2^2 - 4*n8 + 5*d*n8 - 6*n2*n8 + 5*d*n2*n8 - 2*n2^2*n8 - 4*n8^2 - 
      4*n2*n8^2)*j[p4, -1, 2 + n2, 0, 0, 0, 1, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/
    ((-8 + 3*d - 2*n2)*(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2)) + 
   ((8 - 12*d + 4*d^2 + 12*n2 - 16*d*n2 + 4*d^2*n2 + 4*n2^2 - 4*d*n2^2 + 
      12*n8 - 8*d*n8 + 16*n2*n8 - 8*d*n2*n8 + 4*n2^2*n8 + 4*n8^2 + 4*n2*n8^2)*
     j[p4, -1, 2 + n2, 0, 0, 0, 1, 0, n8, 0, 1, 1, -1, 1, 1])/
    (-48 + 58*d - 23*d^2 + 3*d^3 - 28*n2 + 16*d*n2 - 2*d^2*n2 - 4*n2^2 - 
     8*d*n8 + 3*d^2*n8 + 16*n2*n8 - 8*d*n2*n8 + 4*n2^2*n8 + 16*n8^2 - 
     6*d*n8^2 + 4*n2*n8^2) + ((-16 + 24*d - 8*d^2 - 24*n2 + 32*d*n2 - 
      8*d^2*n2 - 8*n2^2 + 8*d*n2^2 - 24*n8 + 16*d*n8 - 32*n2*n8 + 
      16*d*n2*n8 - 8*n2^2*n8 - 8*n8^2 - 8*n2*n8^2)*j[p4, -1, 2 + n2, 0, 0, 0, 
      1, 0, n8, 0, 1, 1, 0, 0, 1])/(-48 + 58*d - 23*d^2 + 3*d^3 - 28*n2 + 
     16*d*n2 - 2*d^2*n2 - 4*n2^2 - 8*d*n8 + 3*d^2*n8 + 16*n2*n8 - 8*d*n2*n8 + 
     4*n2^2*n8 + 16*n8^2 - 6*d*n8^2 + 4*n2*n8^2) + 
   ((8 - 12*d + 4*d^2 + 4*n2 - 4*d*n2 + 12*n8 - 8*d*n8 + 4*n2*n8 + 4*n8^2)*
     j[p4, 0, n2, 0, 0, 0, 1, 0, n8, 0, 2, 0, 0, 1, 1])/
    ((-8 + 3*d - 2*n2)*(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2)) + 
   ((8 - 12*d + 4*d^2 + 4*n2 - 4*d*n2 + 12*n8 - 8*d*n8 + 4*n2*n8 + 4*n8^2)*
     j[p4, 0, n2, 0, 0, 0, 1, 0, n8, 0, 2, 1, 0, 0, 1])/
    ((-8 + 3*d - 2*n2)*(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2)) + 
   ((-4*n8 + 2*d*n8 - 2*n2*n8 - 2*n8^2)*j[p4, 0, n2, 0, 0, 0, 1, 0, 1 + n8, 
      0, 1, 0, 0, 1, 1])/(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2) + 
   ((-n8 + d*n8 - n8^2)*j[p4, 0, n2, 0, 0, 0, 1, 0, 1 + n8, 0, 1, 1, 0, 0, 
      1])/(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2) + 
   ((-4 + 6*d - 2*d^2 - 2*n2 + 2*d*n2 - 6*n8 + 4*d*n8 - 2*n2*n8 - 2*n8^2)*
     j[p4, 0, n2, 0, 0, 0, 2, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/
    ((-8 + 3*d - 2*n2)*(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2)) + 
   ((4 - 6*d + 2*d^2 + 2*n2 - 2*d*n2 + 6*n8 - 4*d*n8 + 2*n2*n8 + 2*n8^2)*
     j[p4, 0, n2, 0, 0, 0, 2, 0, n8, 0, 0, 1, 0, 1, 1])/
    ((-8 + 3*d - 2*n2)*(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2)) + 
   ((-8 + 12*d - 4*d^2 - 4*n2 + 4*d*n2 - 12*n8 + 8*d*n8 - 4*n2*n8 - 4*n8^2)*
     j[p4, 0, 1 + n2, -1, 0, 0, 0, 0, n8, 0, 1, 1, 0, 1, 2])/
    ((-8 + 3*d - 2*n2)*(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2)) + 
   ((-8 + 12*d - 4*d^2 - 4*n2 + 4*d*n2 - 12*n8 + 8*d*n8 - 4*n2*n8 - 4*n8^2)*
     j[p4, 0, 1 + n2, -1, 0, 0, 1, 0, n8, 0, 1, 1, 0, 0, 2])/
    ((-8 + 3*d - 2*n2)*(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2)) + 
   ((8 - 12*d + 4*d^2 + 4*n2 - 4*d*n2 + 12*n8 - 8*d*n8 + 4*n2*n8 + 4*n8^2)*
     j[p4, 0, 1 + n2, -1, 0, 0, 1, 0, n8, 0, 2, 0, 0, 1, 1])/
    ((-8 + 3*d - 2*n2)*(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2)) + 
   ((-4 + 6*d - 2*d^2 - 2*n2 + 2*d*n2 - 6*n8 + 4*d*n8 - 2*n2*n8 - 2*n8^2)*
     j[p4, 0, 1 + n2, -1, 0, 0, 2, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/
    ((-8 + 3*d - 2*n2)*(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2)) + 
   ((4 - 6*d + 2*d^2 + 2*n2 - 2*d*n2 + 6*n8 - 4*d*n8 + 2*n2*n8 + 2*n8^2)*
     j[p4, 0, 1 + n2, -1, 0, 0, 2, 0, n8, 0, 0, 1, 0, 1, 1])/
    ((-8 + 3*d - 2*n2)*(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2)) + 
   ((8 - 12*d + 4*d^2 + 4*n2 - 4*d*n2 + 12*n8 - 8*d*n8 + 4*n2*n8 + 4*n8^2)*
     j[p4, 0, 1 + n2, 0, -1, 0, 0, 0, n8, 0, 1, 1, 0, 1, 2])/
    ((-8 + 3*d - 2*n2)*(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2)) + 
   ((8 - 12*d + 4*d^2 + 4*n2 - 4*d*n2 + 12*n8 - 8*d*n8 + 4*n2*n8 + 4*n8^2)*
     j[p4, 0, 1 + n2, 0, -1, 0, 1, 0, n8, 0, 1, 1, 0, 0, 2])/
    ((-8 + 3*d - 2*n2)*(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2)) + 
   ((8 - 12*d + 4*d^2 + 4*n2 - 4*d*n2 + 12*n8 - 8*d*n8 + 4*n2*n8 + 4*n8^2)*
     j[p4, 0, 1 + n2, 0, -1, 0, 2, 0, n8, 0, 0, 1, 0, 1, 1])/
    ((-8 + 3*d - 2*n2)*(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2)) + 
   ((-4 + 6*d - 2*d^2 - 2*n2 + 2*d*n2 - 6*n8 + 4*d*n8 - 2*n2*n8 - 2*n8^2)*
     j[p4, 0, 1 + n2, 0, 0, 0, 0, 0, n8, -1, 1, 1, 0, 1, 2])/
    ((-8 + 3*d - 2*n2)*(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2)) + 
   ((-4 + 6*d - 2*d^2 - 2*n2 + 2*d*n2 - 6*n8 + 4*d*n8 - 2*n2*n8 - 2*n8^2)*
     j[p4, 0, 1 + n2, 0, 0, 0, 0, 0, n8, 0, 1, 1, 0, 1, 1])/
    ((-8 + 3*d - 2*n2)*(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2)) + 
   ((4 - 6*d + 2*d^2 + 2*n2 - 2*d*n2 + 6*n8 - 4*d*n8 + 2*n2*n8 + 2*n8^2)*
     j[p4, 0, 1 + n2, 0, 0, 0, 0, 0, n8, 0, 1, 1, 0, 1, 2])/
    ((-8 + 3*d - 2*n2)*(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2)) + 
   ((-8 + 12*d - 4*d^2 - 4*n2 + 4*d*n2 - 12*n8 + 8*d*n8 - 4*n2*n8 - 4*n8^2)*
     j[p4, 0, 1 + n2, 0, 0, 0, 1, -1, n8, 0, 2, 0, 0, 1, 1])/
    ((-8 + 3*d - 2*n2)*(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2)) + 
   ((-8 + 12*d - 4*d^2 - 4*n2 + 4*d*n2 - 12*n8 + 8*d*n8 - 4*n2*n8 - 4*n8^2)*
     j[p4, 0, 1 + n2, 0, 0, 0, 1, -1, n8, 0, 2, 1, 0, 0, 1])/
    ((-8 + 3*d - 2*n2)*(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2)) + 
   ((4*n8 - 2*d*n8 + 2*n2*n8 + 2*n8^2)*j[p4, 0, 1 + n2, 0, 0, 0, 1, -1, 
      1 + n8, 0, 1, 0, 0, 1, 1])/(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 
     2*n8^2) + ((n8 - d*n8 + n8^2)*j[p4, 0, 1 + n2, 0, 0, 0, 1, -1, 1 + n8, 
      0, 1, 1, 0, 0, 1])/(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2) + 
   ((5 - 3*d + 2*n2 + 3*n8)*j[p4, 0, 1 + n2, 0, 0, 0, 1, 0, -1 + n8, 0, 0, 2, 
      0, 1, 1])/(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2) + 
   ((76 - 142*d + 82*d^2 - 17*d^3 + d^4 + 62*n2 - 92*d*n2 + 33*d^2*n2 - 
      3*d^3*n2 + 12*n2^2 - 14*d*n2^2 + 2*d^2*n2^2 + 54*n8 - 12*d*n8 - 
      23*d^2*n8 + 6*d^3*n8 + 28*n2*n8 + 18*d*n2*n8 - 11*d^2*n2*n8 + 
      4*n2^2*n8 + 6*d*n2^2*n8 - 52*n8^2 + 70*d*n8^2 - 15*d^2*n8^2 - 
      42*n2*n8^2 + 22*d*n2*n8^2 - 8*n2^2*n8^2 - 30*n8^3 + 8*d*n8^3 - 
      8*n2*n8^3)*j[p4, 0, 1 + n2, 0, 0, 0, 1, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/
    ((-8 + 3*d - 2*n2)*(-1 + n8)*(-6 + 5*d - d^2 - 2*n2 - d*n8 + 2*n2*n8 + 
      2*n8^2)) + ((-8 + 12*d - 4*d^2 - 4*n2 + 4*d*n2 - 12*n8 + 8*d*n8 - 
      4*n2*n8 - 4*n8^2)*j[p4, 0, 1 + n2, 0, 0, 0, 1, 0, -1 + n8, 0, 2, 0, 0, 
      1, 1])/((-8 + 3*d - 2*n2)*(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 
      2*n8^2)) + ((-4 + 6*d - 2*d^2 - 2*n2 + 2*d*n2 - 6*n8 + 4*d*n8 - 
      2*n2*n8 - 2*n8^2)*j[p4, 0, 1 + n2, 0, 0, 0, 1, 0, n8, -1, 1, 1, 0, 0, 
      2])/((-8 + 3*d - 2*n2)*(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 
      2*n8^2)) + ((-44 + 46*d - 12*d^2 - 30*n2 + 16*d*n2 - 4*n2^2 - 34*n8 + 
      18*d*n8 - 10*n2*n8 - 6*n8^2)*j[p4, 0, 1 + n2, 0, 0, 0, 1, 0, n8, 0, 0, 
      1, 0, 1, 1])/(-48 + 58*d - 23*d^2 + 3*d^3 - 28*n2 + 16*d*n2 - 
     2*d^2*n2 - 4*n2^2 - 8*d*n8 + 3*d^2*n8 + 16*n2*n8 - 8*d*n2*n8 + 
     4*n2^2*n8 + 16*n8^2 - 6*d*n8^2 + 4*n2*n8^2) + 
   ((-1 + d - n8)*j[p4, 0, 1 + n2, 0, 0, 0, 1, 0, n8, 0, 0, 2, -1, 1, 1])/
    (6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2) + 
   ((1 - d + n8)*j[p4, 0, 1 + n2, 0, 0, 0, 1, 0, n8, 0, 0, 2, 0, 1, 1])/
    (6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2) + 
   ((40 - 40*d + 10*d^2 + 28*n2 - 14*d*n2 + 4*n2^2 + 28*n8 - 14*d*n8 + 
      8*n2*n8 + 4*n8^2)*j[p4, 0, 1 + n2, 0, 0, 0, 1, 0, n8, 0, 1, 0, 0, 1, 
      1])/(-48 + 58*d - 23*d^2 + 3*d^3 - 28*n2 + 16*d*n2 - 2*d^2*n2 - 
     4*n2^2 - 8*d*n8 + 3*d^2*n8 + 16*n2*n8 - 8*d*n2*n8 + 4*n2^2*n8 + 
     16*n8^2 - 6*d*n8^2 + 4*n2*n8^2) + 
   ((24 - 33*d + 8*d^2 + d^3 + 38*n2 - 49*d*n2 + 11*d^2*n2 + 10*n2^2 - 
      10*d*n2^2 + 32*n8 - 16*d*n8 - 2*d^2*n8 + 44*n2*n8 - 17*d*n2*n8 + 
      10*n2^2*n8 + 8*n8^2 + d*n8^2 + 6*n2*n8^2)*j[p4, 0, 1 + n2, 0, 0, 0, 1, 
      0, n8, 0, 1, 1, 0, 0, 1])/((-8 + 3*d - 2*n2)*(6 - 5*d + d^2 + 2*n2 + 
      d*n8 - 2*n2*n8 - 2*n8^2)) + 
   ((4 - 6*d + 2*d^2 + 2*n2 - 2*d*n2 + 6*n8 - 4*d*n8 + 2*n2*n8 + 2*n8^2)*
     j[p4, 0, 1 + n2, 0, 0, 0, 1, 0, n8, 0, 1, 1, 0, 0, 2])/
    ((-8 + 3*d - 2*n2)*(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2)) + 
   ((4 - 6*d + 2*d^2 + 2*n2 - 2*d*n2 + 6*n8 - 4*d*n8 + 2*n2*n8 + 2*n8^2)*
     j[p4, 0, 1 + n2, 0, 0, 0, 1, 0, n8, 0, 1, 1, 0, 1, 0])/
    ((-8 + 3*d - 2*n2)*(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2)) + 
   ((8 - 13*d + 6*d^2 - d^3 - 2*n2 + 3*d*n2 - d^2*n2 - 2*n2^2 + 2*d*n2^2 + 
      5*d*n8 - d^2*n8 - 6*n2*n8 + 5*d*n2*n8 - 2*n2^2*n8 - 8*n8^2 + 2*d*n8^2 - 
      4*n2*n8^2)*j[p4, 0, 1 + n2, 0, 0, 0, 1, 0, n8, 0, 1, 1, 0, 1, 1])/
    ((-8 + 3*d - 2*n2)*(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2)) + 
   ((8 - 12*d + 4*d^2 + 4*n2 - 4*d*n2 + 12*n8 - 8*d*n8 + 4*n2*n8 + 4*n8^2)*
     j[p4, 0, 1 + n2, 0, 0, 0, 1, 0, n8, 0, 2, 0, -1, 1, 1])/
    ((-8 + 3*d - 2*n2)*(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2)) + 
   ((-8 + 12*d - 4*d^2 - 4*n2 + 4*d*n2 - 12*n8 + 8*d*n8 - 4*n2*n8 - 4*n8^2)*
     j[p4, 0, 1 + n2, 0, 0, 0, 1, 0, n8, 0, 2, 0, 0, 1, 1])/
    ((-8 + 3*d - 2*n2)*(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2)) + 
   ((4 - 6*d + 2*d^2 + 2*n2 - 2*d*n2 + 6*n8 - 4*d*n8 + 2*n2*n8 + 2*n8^2)*
     j[p4, 0, 1 + n2, 0, 0, 0, 2, -1, -1 + n8, 0, 1, 1, 0, 1, 1])/
    ((-8 + 3*d - 2*n2)*(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2)) + 
   ((-4 + 6*d - 2*d^2 - 2*n2 + 2*d*n2 - 6*n8 + 4*d*n8 - 2*n2*n8 - 2*n8^2)*
     j[p4, 0, 1 + n2, 0, 0, 0, 2, -1, n8, 0, 0, 1, 0, 1, 1])/
    ((-8 + 3*d - 2*n2)*(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2)) + 
   ((4 - 6*d + 2*d^2 + 2*n2 - 2*d*n2 + 6*n8 - 4*d*n8 + 2*n2*n8 + 2*n8^2)*
     j[p4, 0, 1 + n2, 0, 0, 0, 2, 0, -2 + n8, 0, 1, 1, 0, 1, 1])/
    ((-8 + 3*d - 2*n2)*(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2)) + 
   ((-8 + 12*d - 4*d^2 - 4*n2 + 4*d*n2 - 12*n8 + 8*d*n8 - 4*n2*n8 - 4*n8^2)*
     j[p4, 0, 1 + n2, 0, 0, 0, 2, 0, -1 + n8, -1, 1, 1, 0, 1, 1])/
    ((-8 + 3*d - 2*n2)*(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2)) + 
   ((-4 + 6*d - 2*d^2 - 2*n2 + 2*d*n2 - 6*n8 + 4*d*n8 - 2*n2*n8 - 2*n8^2)*
     j[p4, 0, 1 + n2, 0, 0, 0, 2, 0, -1 + n8, 0, 0, 1, 0, 1, 1])/
    ((-8 + 3*d - 2*n2)*(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2)) + 
   ((-4 + 6*d - 2*d^2 - 2*n2 + 2*d*n2 - 6*n8 + 4*d*n8 - 2*n2*n8 - 2*n8^2)*
     j[p4, 0, 1 + n2, 0, 0, 0, 2, 0, -1 + n8, 0, 1, 1, -1, 1, 1])/
    ((-8 + 3*d - 2*n2)*(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2)) + 
   ((4 - 6*d + 2*d^2 + 2*n2 - 2*d*n2 + 6*n8 - 4*d*n8 + 2*n2*n8 + 2*n8^2)*
     j[p4, 0, 1 + n2, 0, 0, 0, 2, 0, -1 + n8, 0, 1, 1, 0, 0, 1])/
    ((-8 + 3*d - 2*n2)*(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2)) + 
   ((4 - 6*d + 2*d^2 + 2*n2 - 2*d*n2 + 6*n8 - 4*d*n8 + 2*n2*n8 + 2*n8^2)*
     j[p4, 0, 1 + n2, 0, 0, 0, 2, 0, -1 + n8, 0, 1, 1, 0, 1, 0])/
    ((-8 + 3*d - 2*n2)*(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2)) + 
   ((-4 + 6*d - 2*d^2 - 2*n2 + 2*d*n2 - 6*n8 + 4*d*n8 - 2*n2*n8 - 2*n8^2)*
     j[p4, 0, 1 + n2, 0, 0, 0, 2, 0, n8, -1, 1, 1, 0, 0, 1])/
    ((-8 + 3*d - 2*n2)*(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2)) + 
   ((-4 + 6*d - 2*d^2 - 2*n2 + 2*d*n2 - 6*n8 + 4*d*n8 - 2*n2*n8 - 2*n8^2)*
     j[p4, 0, 1 + n2, 0, 0, 0, 2, 0, n8, -1, 1, 1, 0, 1, 0])/
    ((-8 + 3*d - 2*n2)*(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2)) + 
   ((4 - 6*d + 2*d^2 + 2*n2 - 2*d*n2 + 6*n8 - 4*d*n8 + 2*n2*n8 + 2*n8^2)*
     j[p4, 0, 1 + n2, 0, 0, 0, 2, 0, n8, 0, 0, 1, -1, 1, 1])/
    ((-8 + 3*d - 2*n2)*(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2)) + 
   ((2*d - 3*d^2 + d^3 - 4*n2 + 9*d*n2 - 6*d^2*n2 + d^3*n2 - 6*n2^2 + 
      9*d*n2^2 - 3*d^2*n2^2 - 2*n2^3 + 2*d*n2^3 - 8*n8 + 15*d*n8 - 6*d^2*n8 - 
      18*n2*n8 + 24*d*n2*n8 - 6*d^2*n2*n8 - 12*n2^2*n8 + 9*d*n2^2*n8 - 
      2*n2^3*n8 - 12*n8^2 + 9*d*n8^2 - 18*n2*n8^2 + 9*d*n2*n8^2 - 
      6*n2^2*n8^2 - 4*n8^3 - 4*n2*n8^3)*j[p4, 0, 2 + n2, -1, 0, 0, 1, 0, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/((-8 + 3*d - 2*n2)*(-1 + n8)*
     (-6 + 5*d - d^2 - 2*n2 - d*n8 + 2*n2*n8 + 2*n8^2)) + 
   ((16 - 23*d + 7*d^2 + 22*n2 - 29*d*n2 + 7*d^2*n2 + 6*n2^2 - 6*d*n2^2 + 
      20*n8 - 11*d*n8 + 26*n2*n8 - 11*d*n2*n8 + 6*n2^2*n8 + 4*n8^2 + 
      4*n2*n8^2)*j[p4, 0, 2 + n2, -1, 0, 0, 1, 0, n8, 0, 0, 1, 0, 1, 1])/
    ((-8 + 3*d - 2*n2)*(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2)) + 
   ((-2*d + 3*d^2 - d^3 + 4*n2 - 9*d*n2 + 6*d^2*n2 - d^3*n2 + 6*n2^2 - 
      9*d*n2^2 + 3*d^2*n2^2 + 2*n2^3 - 2*d*n2^3 + 8*n8 - 15*d*n8 + 6*d^2*n8 + 
      18*n2*n8 - 24*d*n2*n8 + 6*d^2*n2*n8 + 12*n2^2*n8 - 9*d*n2^2*n8 + 
      2*n2^3*n8 + 12*n8^2 - 9*d*n8^2 + 18*n2*n8^2 - 9*d*n2*n8^2 + 
      6*n2^2*n8^2 + 4*n8^3 + 4*n2*n8^3)*j[p4, 0, 2 + n2, 0, 0, 0, 1, -1, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/((-8 + 3*d - 2*n2)*(-1 + n8)*
     (-6 + 5*d - d^2 - 2*n2 - d*n8 + 2*n2*n8 + 2*n8^2)) + 
   ((-1 + d - n2 + d*n2 - n8 - n2*n8)*j[p4, 0, 2 + n2, 0, 0, 0, 1, -1, n8, 0, 
      0, 1, 0, 1, 1])/(-6 + 5*d - d^2 - 2*n2 - d*n8 + 2*n2*n8 + 2*n8^2) + 
   ((-16 + 24*d - 8*d^2 - 24*n2 + 32*d*n2 - 8*d^2*n2 - 8*n2^2 + 8*d*n2^2 - 
      24*n8 + 16*d*n8 - 32*n2*n8 + 16*d*n2*n8 - 8*n2^2*n8 - 8*n8^2 - 
      8*n2*n8^2)*j[p4, 0, 2 + n2, 0, 0, 0, 1, -1, n8, 0, 1, 1, 0, 0, 1])/
    (-48 + 58*d - 23*d^2 + 3*d^3 - 28*n2 + 16*d*n2 - 2*d^2*n2 - 4*n2^2 - 
     8*d*n8 + 3*d^2*n8 + 16*n2*n8 - 8*d*n2*n8 + 4*n2^2*n8 + 16*n8^2 - 
     6*d*n8^2 + 4*n2*n8^2) + ((16 - 23*d + 7*d^2 + 22*n2 - 29*d*n2 + 
      7*d^2*n2 + 6*n2^2 - 6*d*n2^2 + 20*n8 - 11*d*n8 + 26*n2*n8 - 
      11*d*n2*n8 + 6*n2^2*n8 + 4*n8^2 + 4*n2*n8^2)*j[p4, 0, 2 + n2, 0, 0, 0, 
      1, -1, n8, 0, 1, 1, 0, 1, 1])/((-8 + 3*d - 2*n2)*
     (6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2)) + 
   ((-2*d + 3*d^2 - d^3 + 4*n2 - 9*d*n2 + 6*d^2*n2 - d^3*n2 + 6*n2^2 - 
      9*d*n2^2 + 3*d^2*n2^2 + 2*n2^3 - 2*d*n2^3 + 8*n8 - 15*d*n8 + 6*d^2*n8 + 
      18*n2*n8 - 24*d*n2*n8 + 6*d^2*n2*n8 + 12*n2^2*n8 - 9*d*n2^2*n8 + 
      2*n2^3*n8 + 12*n8^2 - 9*d*n8^2 + 18*n2*n8^2 - 9*d*n2*n8^2 + 
      6*n2^2*n8^2 + 4*n8^3 + 4*n2*n8^3)*j[p4, 0, 2 + n2, 0, 0, 0, 1, 0, 
      -2 + n8, 0, 1, 1, 0, 1, 1])/((-8 + 3*d - 2*n2)*(-1 + n8)*
     (-6 + 5*d - d^2 - 2*n2 - d*n8 + 2*n2*n8 + 2*n8^2)) + 
   ((2*d - 3*d^2 + d^3 - 4*n2 + 9*d*n2 - 6*d^2*n2 + d^3*n2 - 6*n2^2 + 
      9*d*n2^2 - 3*d^2*n2^2 - 2*n2^3 + 2*d*n2^3 - 8*n8 + 15*d*n8 - 6*d^2*n8 - 
      18*n2*n8 + 24*d*n2*n8 - 6*d^2*n2*n8 - 12*n2^2*n8 + 9*d*n2^2*n8 - 
      2*n2^3*n8 - 12*n8^2 + 9*d*n8^2 - 18*n2*n8^2 + 9*d*n2*n8^2 - 
      6*n2^2*n8^2 - 4*n8^3 - 4*n2*n8^3)*j[p4, 0, 2 + n2, 0, 0, 0, 1, 0, 
      -1 + n8, 0, 1, 1, -1, 1, 1])/((-8 + 3*d - 2*n2)*(-1 + n8)*
     (-6 + 5*d - d^2 - 2*n2 - d*n8 + 2*n2*n8 + 2*n8^2)) + 
   ((-16 + 28*d - 14*d^2 + 2*d^3 - 32*n2 + 50*d*n2 - 20*d^2*n2 + 2*d^3*n2 - 
      20*n2^2 + 26*d*n2^2 - 6*d^2*n2^2 - 4*n2^3 + 4*d*n2^3 - 24*n8 + 
      22*d*n8 - 4*d^2*n8 - 44*n2*n8 + 32*d*n2*n8 - 4*d^2*n2*n8 - 24*n2^2*n8 + 
      10*d*n2^2*n8 - 4*n2^3*n8 - 8*n8^2 + 2*d*n8^2 - 12*n2*n8^2 + 
      2*d*n2*n8^2 - 4*n2^2*n8^2)*j[p4, 0, 2 + n2, 0, 0, 0, 1, 0, -1 + n8, 0, 
      1, 1, 0, 0, 1])/((8 - 3*d + 2*n2)*(-1 + n8)*(-6 + 5*d - d^2 - 2*n2 - 
      d*n8 + 2*n2*n8 + 2*n8^2)) + 
   ((-16 + 23*d - 7*d^2 - 22*n2 + 29*d*n2 - 7*d^2*n2 - 6*n2^2 + 6*d*n2^2 - 
      20*n8 + 11*d*n8 - 26*n2*n8 + 11*d*n2*n8 - 6*n2^2*n8 - 4*n8^2 - 
      4*n2*n8^2)*j[p4, 0, 2 + n2, 0, 0, 0, 1, 0, -1 + n8, 0, 1, 1, 0, 1, 1])/
    ((-8 + 3*d - 2*n2)*(6 - 5*d + d^2 + 2*n2 + d*n8 - 2*n2*n8 - 2*n8^2)), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == -1 && n13 == 1 && n14 == 1 && n3 == 0 && 
    n4 == 0 && n5 == 0 && n6 == 1 && n7 == 0 && n8 == 1 && n9 == 0 -> 
  ((-2 + d - n1)*j[p4, -1 + n1, n2, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (-2 + d) + j[p4, -1 + n1, n2, 0, 0, 0, 1, 0, 2, 0, 1, 1, 0, 0, 1]/
    (2 - d) + (n2*j[p4, -1 + n1, 1 + n2, -1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 
      1])/(-2 + d) - (n2*j[p4, -1 + n1, 1 + n2, 0, 0, 0, 1, -1, 1, 0, 1, 1, 
      0, 1, 1])/(-2 + d) - (n2*j[p4, -1 + n1, 1 + n2, 0, 0, 0, 1, 0, 0, 0, 1, 
      1, 0, 1, 1])/(-2 + d) + (n2*j[p4, -1 + n1, 1 + n2, 0, 0, 0, 1, 0, 1, 0, 
      1, 1, -1, 1, 1])/(-2 + d) - 
   (2*n2*j[p4, -1 + n1, 1 + n2, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    (-2 + d) + j[p4, n1, n2, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1]/(2 - d) + 
   ((1 - n1)*j[p4, n1, n2, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/(-2 + d) + 
   (n1*j[p4, n1, n2, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1])/(-2 + d) + 
   j[p4, n1, n2, 0, 0, 0, 1, 0, 2, 0, 1, 0, -1, 1, 1]/(-2 + d), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n3 == 0 && 
    n4 == 0 && n5 == 0 && n6 == 1 && n7 == 0 && n8 == 1 && n9 == 0 && 
    n2 != 0 -> ((12 - 4*d + 4*n1 + 4*n2)*j[p4, -1 + n1, 1 + n2, 0, 0, 0, 1, 
      0, 0, 0, 2, 1, 0, 1, 1])/((-2 + d)*(-8 + 3*d - 2*n2)) + 
   ((-8 + 3*d - 2*n1 - 2*n2)*j[p4, -1 + n1, 1 + n2, 0, 0, 0, 1, 0, 1, 0, 0, 
      2, 0, 1, 1])/(-2 + d)^2 + 
   ((48 - 46*d + 13*d^2 - d^3 + 12*n1 - 3*d*n1 - d^2*n1 - 4*n1^2 + 2*d*n1^2 + 
      52*n2 - 40*d*n2 + 7*d^2*n2 + 18*n1*n2 - 7*d*n1*n2 + 12*n2^2 - 
      6*d*n2^2 + 2*n1*n2^2)*j[p4, -1 + n1, 1 + n2, 0, 0, 0, 1, 0, 1, 0, 1, 1, 
      0, 1, 1])/((-2 + d)^2*(-8 + 3*d - 2*n2)) + 
   ((12 - 4*d + 4*n1 + 4*n2)*j[p4, -1 + n1, 1 + n2, 0, 0, 0, 1, 0, 1, 0, 2, 
      1, 0, 0, 1])/((-2 + d)*(-8 + 3*d - 2*n2)) + 
   ((-28 + 21*d - 4*d^2 + 4*n1 - 2*d*n1 - 42*n2 + 26*d*n2 - 4*d^2*n2 + 
      4*n1*n2 - 2*d*n1*n2 - 16*n2^2 + 5*d*n2^2 - 2*n2^3)*
     j[p4, -1 + n1, 2 + n2, -1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-2 + d)^2*(-8 + 3*d - 2*n2)) + 
   ((-12 + 13*d - 3*d^2 - 12*n1 + 6*d*n1 - 10*n2 + 14*d*n2 - 3*d^2*n2 - 
      12*n1*n2 + 6*d*n1*n2 + 4*n2^2 + d*n2^2 + 2*n2^3)*
     j[p4, -1 + n1, 2 + n2, 0, 0, 0, 1, -1, 1, 0, 1, 1, 0, 1, 1])/
    ((-2 + d)^2*(-8 + 3*d - 2*n2)) + 
   ((4 - d - 12*n1 + 6*d*n1 + 10*n2 - 2*d*n2 - 12*n1*n2 + 6*d*n1*n2 + 
      8*n2^2 - d*n2^2 + 2*n2^3)*j[p4, -1 + n1, 2 + n2, 0, 0, 0, 1, 0, 0, 0, 
      1, 1, 0, 1, 1])/((-2 + d)^2*(-8 + 3*d - 2*n2)) + 
   ((12 - 13*d + 3*d^2 + 12*n1 - 6*d*n1 + 10*n2 - 14*d*n2 + 3*d^2*n2 + 
      12*n1*n2 - 6*d*n1*n2 - 4*n2^2 - d*n2^2 - 2*n2^3)*
     j[p4, -1 + n1, 2 + n2, 0, 0, 0, 1, 0, 1, 0, 1, 1, -1, 1, 1])/
    ((-2 + d)^2*(-8 + 3*d - 2*n2)) + 
   ((-24 + 26*d - 6*d^2 - 24*n1 + 12*d*n1 - 20*n2 + 28*d*n2 - 6*d^2*n2 - 
      24*n1*n2 + 12*d*n1*n2 + 8*n2^2 + 2*d*n2^2 + 4*n2^3)*
     j[p4, -1 + n1, 2 + n2, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/
    ((-2 + d)^2*(-8 + 3*d - 2*n2)) + 
   ((-12 + 4*d - 4*n1 - 4*n2)*j[p4, n1, n2, 0, 0, 0, 1, 0, 0, 0, 2, 1, 0, 1, 
      1])/((-2 + d)*(-8 + 3*d - 2*n2)) + 
   ((-12 + 4*d - 4*n1 - 4*n2)*j[p4, n1, n2, 0, 0, 0, 1, 0, 1, 0, 2, 0, 0, 1, 
      1])/((-2 + d)*(-8 + 3*d - 2*n2)) + 
   ((-12 + 4*d - 4*n1 - 4*n2)*j[p4, n1, n2, 0, 0, 0, 1, 0, 1, 0, 2, 1, 0, 0, 
      1])/((-2 + d)*(-8 + 3*d - 2*n2)) + 
   ((-6 + 2*d - 2*n1 - 2*n2)*j[p4, n1, n2, 0, 0, 0, 1, 0, 2, 0, 1, 0, 0, 1, 
      1])/(-2 + d)^2 + j[p4, n1, n2, 0, 0, 0, 1, 0, 2, 0, 1, 1, 0, 0, 1]/
    (-2 + d) + ((-6 + 2*d - 2*n1 - 2*n2)*j[p4, n1, n2, 0, 0, 0, 2, 0, 1, 0, 
      0, 1, 0, 1, 1])/((-2 + d)*(-8 + 3*d - 2*n2)) + 
   ((12 - 4*d + 4*n1 + 4*n2)*j[p4, n1, 1 + n2, -1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 
      1, 2])/((-2 + d)*(-8 + 3*d - 2*n2)) + 
   ((12 - 4*d + 4*n1 + 4*n2)*j[p4, n1, 1 + n2, -1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 
      1, 2])/((-2 + d)*(-8 + 3*d - 2*n2)) + 
   ((12 - 4*d + 4*n1 + 4*n2)*j[p4, n1, 1 + n2, -1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 
      0, 2])/((-2 + d)*(-8 + 3*d - 2*n2)) + 
   ((-12 + 4*d - 4*n1 - 4*n2)*j[p4, n1, 1 + n2, -1, 0, 0, 1, 0, 1, 0, 2, 0, 
      0, 1, 1])/((-2 + d)*(-8 + 3*d - 2*n2)) + 
   ((-6 + 2*d - 2*n1 - 2*n2)*j[p4, n1, 1 + n2, -1, 0, 0, 2, 0, 1, 0, 0, 1, 0, 
      1, 1])/((-2 + d)*(-8 + 3*d - 2*n2)) + 
   ((-12 + 4*d - 4*n1 - 4*n2)*j[p4, n1, 1 + n2, 0, -1, 0, 0, 0, 1, 0, 1, 1, 
      0, 1, 2])/((-2 + d)*(-8 + 3*d - 2*n2)) + 
   ((-12 + 4*d - 4*n1 - 4*n2)*j[p4, n1, 1 + n2, 0, -1, 0, 1, 0, 0, 0, 1, 1, 
      0, 1, 2])/((-2 + d)*(-8 + 3*d - 2*n2)) + 
   ((-12 + 4*d - 4*n1 - 4*n2)*j[p4, n1, 1 + n2, 0, -1, 0, 1, 0, 1, 0, 1, 1, 
      0, 0, 2])/((-2 + d)*(-8 + 3*d - 2*n2)) + 
   ((-12 + 4*d - 4*n1 - 4*n2)*j[p4, n1, 1 + n2, 0, -1, 0, 2, 0, 1, 0, 0, 1, 
      0, 1, 1])/((-2 + d)*(-8 + 3*d - 2*n2)) + 
   ((6 - 2*d + 2*n1 + 2*n2)*j[p4, n1, 1 + n2, 0, 0, 0, 0, 0, 1, -1, 1, 1, 0, 
      1, 2])/((-2 + d)*(-8 + 3*d - 2*n2)) + 
   ((6 - 2*d + 2*n1 + 2*n2)*j[p4, n1, 1 + n2, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 
      1, 1])/((-2 + d)*(-8 + 3*d - 2*n2)) + 
   ((-6 + 2*d - 2*n1 - 2*n2)*j[p4, n1, 1 + n2, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 
      1, 2])/((-2 + d)*(-8 + 3*d - 2*n2)) + 
   ((8 - 3*d + 2*n1 + 2*n2)*j[p4, n1, 1 + n2, 0, 0, 0, 1, -1, 0, 0, 1, 2, 0, 
      1, 1])/(-2 + d)^2 + ((12 - 4*d + 4*n1 + 4*n2)*
     j[p4, n1, 1 + n2, 0, 0, 0, 1, -1, 0, 0, 2, 1, 0, 1, 1])/
    ((-2 + d)*(-8 + 3*d - 2*n2)) + 
   ((12 - 4*d + 4*n1 + 4*n2)*j[p4, n1, 1 + n2, 0, 0, 0, 1, -1, 1, 0, 2, 0, 0, 
      1, 1])/((-2 + d)*(-8 + 3*d - 2*n2)) + 
   ((12 - 4*d + 4*n1 + 4*n2)*j[p4, n1, 1 + n2, 0, 0, 0, 1, -1, 1, 0, 2, 1, 0, 
      0, 1])/((-2 + d)*(-8 + 3*d - 2*n2)) + 
   ((6 - 2*d + 2*n1 + 2*n2)*j[p4, n1, 1 + n2, 0, 0, 0, 1, -1, 2, 0, 1, 0, 0, 
      1, 1])/(-2 + d)^2 - j[p4, n1, 1 + n2, 0, 0, 0, 1, -1, 2, 0, 1, 1, 0, 0, 
     1]/(-2 + d) + ((6 - 2*d + 2*n1 + 2*n2)*j[p4, n1, 1 + n2, 0, 0, 0, 1, 0, 
      0, -1, 1, 1, 0, 1, 2])/((-2 + d)*(-8 + 3*d - 2*n2)) + 
   ((164 - 135*d + 27*d^2 + 68*n1 - 38*d*n1 + 3*d^2*n1 + 122*n2 - 81*d*n2 + 
      11*d^2*n2 + 24*n1*n2 - 10*d*n1*n2 + 22*n2^2 - 10*d*n2^2)*
     j[p4, n1, 1 + n2, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-2 + d)^2*(-8 + 3*d - 2*n2)) + 
   ((-6 + 2*d - 2*n1 - 2*n2)*j[p4, n1, 1 + n2, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 
      1, 2])/((-2 + d)*(-8 + 3*d - 2*n2)) + 
   ((12 - 7*d + d^2 - 4*n1 + 2*d*n1 + 10*n2 - 3*d*n2 + 2*n2^2)*
     j[p4, n1, 1 + n2, 0, 0, 0, 1, 0, 0, 0, 1, 2, -1, 1, 1])/
    ((-2 + d)^2*(-8 + 3*d - 2*n2)) + 
   ((-12 + 7*d - d^2 + 4*n1 - 2*d*n1 - 10*n2 + 3*d*n2 - 2*n2^2)*
     j[p4, n1, 1 + n2, 0, 0, 0, 1, 0, 0, 0, 1, 2, 0, 1, 1])/
    ((-2 + d)^2*(-8 + 3*d - 2*n2)) + 
   ((6 - 2*d + 2*n1 + 2*n2)*j[p4, n1, 1 + n2, 0, 0, 0, 1, 0, 1, -1, 1, 1, 0, 
      0, 2])/((-2 + d)*(-8 + 3*d - 2*n2)) + 
   ((-84 + 64*d - 12*d^2 - 12*n1 - 2*d*n1 + 3*d^2*n1 - 40*n2 + 16*d*n2 - 
      2*d*n1*n2 - 4*n2^2)*j[p4, n1, 1 + n2, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 
      1])/((-2 + d)^2*(-8 + 3*d - 2*n2)) + 
   j[p4, n1, 1 + n2, 0, 0, 0, 1, 0, 1, 0, 0, 2, -1, 1, 1]/(-2 + d) - 
   j[p4, n1, 1 + n2, 0, 0, 0, 1, 0, 1, 0, 0, 2, 0, 1, 1]/(-2 + d) + 
   ((72 - 54*d + 10*d^2 + 8*n1 + 4*d*n1 - 3*d^2*n1 + 36*n2 - 14*d*n2 + 
      2*d*n1*n2 + 4*n2^2)*j[p4, n1, 1 + n2, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 
      1])/((-2 + d)^2*(-8 + 3*d - 2*n2)) + 
   ((88 - 74*d + 15*d^2 + 36*n1 - 19*d*n1 + d^2*n1 - 4*n1^2 + 2*d*n1^2 + 
      108*n2 - 82*d*n2 + 14*d^2*n2 + 26*n1*n2 - 11*d*n1*n2 + 24*n2^2 - 
      12*d*n2^2 + 2*n1*n2^2)*j[p4, n1, 1 + n2, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 
      0, 1])/((-2 + d)^2*(-8 + 3*d - 2*n2)) + 
   ((-6 + 2*d - 2*n1 - 2*n2)*j[p4, n1, 1 + n2, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 
      0, 2])/((-2 + d)*(-8 + 3*d - 2*n2)) + 
   ((-6 + 2*d - 2*n1 - 2*n2)*j[p4, n1, 1 + n2, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 
      1, 0])/((-2 + d)*(-8 + 3*d - 2*n2)) + 
   ((-24 + 20*d - 4*d^2 - 20*n1 + 11*d*n1 - d^2*n1 + 4*n1^2 - 2*d*n1^2 - 
      32*n2 + 24*d*n2 - 4*d^2*n2 - 18*n1*n2 + 7*d*n1*n2 - 8*n2^2 + 4*d*n2^2 - 
      2*n1*n2^2)*j[p4, n1, 1 + n2, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    ((-2 + d)^2*(-8 + 3*d - 2*n2)) + 
   ((-12 + 4*d - 4*n1 - 4*n2)*j[p4, n1, 1 + n2, 0, 0, 0, 1, 0, 1, 0, 2, 0, 
      -1, 1, 1])/((-2 + d)*(-8 + 3*d - 2*n2)) + 
   ((12 - 4*d + 4*n1 + 4*n2)*j[p4, n1, 1 + n2, 0, 0, 0, 1, 0, 1, 0, 2, 0, 0, 
      1, 1])/((-2 + d)*(-8 + 3*d - 2*n2)) + 
   ((6 - 2*d + 2*n1 + 2*n2)*j[p4, n1, 1 + n2, 0, 0, 0, 2, -1, 1, 0, 0, 1, 0, 
      1, 1])/((-2 + d)*(-8 + 3*d - 2*n2)) + 
   ((18 - 6*d + 6*n1 + 6*n2)*j[p4, n1, 1 + n2, 0, 0, 0, 2, 0, 0, -1, 1, 1, 0, 
      1, 1])/((-2 + d)*(-8 + 3*d - 2*n2)) + 
   ((6 - 2*d + 2*n1 + 2*n2)*j[p4, n1, 1 + n2, 0, 0, 0, 2, 0, 1, -1, 1, 1, 0, 
      0, 1])/((-2 + d)*(-8 + 3*d - 2*n2)) + 
   ((6 - 2*d + 2*n1 + 2*n2)*j[p4, n1, 1 + n2, 0, 0, 0, 2, 0, 1, -1, 1, 1, 0, 
      1, 0])/((-2 + d)*(-8 + 3*d - 2*n2)) + 
   ((-6 + 2*d - 2*n1 - 2*n2)*j[p4, n1, 1 + n2, 0, 0, 0, 2, 0, 1, 0, 0, 1, -1, 
      1, 1])/((-2 + d)*(-8 + 3*d - 2*n2)) + 
   ((-12 + 4*d - 4*n1 - 16*n2 + 4*d*n2 - 4*n1*n2 - 4*n2^2)*
     j[p4, n1, 2 + n2, -1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-2 + d)*(-8 + 3*d - 2*n2)) + 
   ((-20 + 7*d - 4*n1 - 26*n2 + 7*d*n2 - 4*n1*n2 - 6*n2^2)*
     j[p4, n1, 2 + n2, -1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1])/
    ((-2 + d)*(-8 + 3*d - 2*n2)) + 
   ((24 - 8*d + 8*n1 + 32*n2 - 8*d*n2 + 8*n1*n2 + 8*n2^2)*
     j[p4, n1, 2 + n2, 0, 0, 0, 1, -1, 0, 0, 1, 1, 0, 1, 1])/
    ((-2 + d)*(-8 + 3*d - 2*n2)) + 
   ((-1 - n2)*j[p4, n1, 2 + n2, 0, 0, 0, 1, -1, 1, 0, 0, 1, 0, 1, 1])/
    (-2 + d) + ((24 - 8*d + 8*n1 + 32*n2 - 8*d*n2 + 8*n1*n2 + 8*n2^2)*
     j[p4, n1, 2 + n2, 0, 0, 0, 1, -1, 1, 0, 1, 1, 0, 0, 1])/
    ((-2 + d)*(-8 + 3*d - 2*n2)) + 
   ((-20 + 7*d - 4*n1 - 26*n2 + 7*d*n2 - 4*n1*n2 - 6*n2^2)*
     j[p4, n1, 2 + n2, 0, 0, 0, 1, -1, 1, 0, 1, 1, 0, 1, 1])/
    ((-2 + d)*(-8 + 3*d - 2*n2)) + 
   ((-12 + 4*d - 4*n1 - 16*n2 + 4*d*n2 - 4*n1*n2 - 4*n2^2)*
     j[p4, n1, 2 + n2, 0, 0, 0, 1, 0, 0, 0, 1, 1, -1, 1, 1])/
    ((-2 + d)*(-8 + 3*d - 2*n2)) + 
   ((20 - 7*d + 4*n1 + 26*n2 - 7*d*n2 + 4*n1*n2 + 6*n2^2)*
     j[p4, n1, 2 + n2, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/
    ((-2 + d)*(-8 + 3*d - 2*n2)) + 
   (n1*j[p4, 1 + n1, n2, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1])/(-2 + d) - 
   (n1*j[p4, 1 + n1, 1 + n2, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1])/(-2 + d) - 
   (n1*j[p4, 1 + n1, 1 + n2, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1])/(-2 + d) + 
   (n1*j[p4, 1 + n1, 1 + n2, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1])/(-2 + d), 
 j[p4, (n1_)?NonPositive, (n2_)?NonPositive, (n3_)?NonPositive, 
    (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, (n7_)?NonPositive, 
    (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, (n11_)?Positive, 
    (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n1 == 0 && n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && 
    n2 == 0 && n3 == 0 && n4 == 0 && n5 == 0 && n6 == 1 && n7 == 0 && 
    n9 == 0 && n8 != 1 -> 
  ((-2 + 2*d - 2*n8)*j[p4, -1, 0, 0, 0, 0, 1, 0, n8, 0, 0, 2, 0, 1, 1])/
    ((-2 + d)*(d - 2*n8)) + (n8*j[p4, 0, -1, 0, 0, 0, 1, 0, 1 + n8, 0, 1, 0, 
      0, 1, 1])/(d - 2*n8) - (n8*j[p4, 0, -1, 0, 0, 0, 1, 0, 1 + n8, 0, 1, 1, 
      0, 0, 1])/(d - 2*n8) - (n8*j[p4, 0, 0, 0, 0, 0, 1, -1, 1 + n8, 0, 1, 0, 
      0, 1, 1])/(d - 2*n8) + (n8*j[p4, 0, 0, 0, 0, 0, 1, -1, 1 + n8, 0, 1, 1, 
      0, 0, 1])/(d - 2*n8) + ((2 - 2*d + 2*n8)*j[p4, 0, 0, 0, 0, 0, 1, 0, 
      -1 + n8, 0, 0, 2, 0, 1, 1])/((-2 + d)*(d - 2*n8)) + 
   ((-4 + 7*d - 3*d^2 - 6*n8 + 5*d*n8 - 2*n8^2)*j[p4, 0, 0, 0, 0, 0, 1, 0, 
      -1 + n8, 0, 1, 1, 0, 1, 1])/((d - 2*n8)*(-1 + n8)) - 
   j[p4, 0, 0, 0, 0, 0, 1, 0, n8, 0, 0, 1, 0, 1, 1]/(d - 2*n8) + 
   j[p4, 0, 0, 0, 0, 0, 1, 0, n8, 0, 0, 2, -1, 1, 1]/(-2 + d) + 
   j[p4, 0, 0, 0, 0, 0, 1, 0, n8, 0, 0, 2, 0, 1, 1]/(2 - d) + 
   ((2*d - 3*n8)*j[p4, 0, 0, 0, 0, 0, 1, 0, n8, 0, 1, 0, 0, 1, 1])/
    (d - 2*n8) + ((d - n8)*j[p4, 0, 0, 0, 0, 0, 1, 0, n8, 0, 1, 1, 0, 0, 1])/
    (d - 2*n8), j[p4, (n1_)?NonPositive, (n2_)?NonPositive, 
    (n3_)?NonPositive, (n4_)?NonPositive, (n5_)?NonPositive, (n6_)?Positive, 
    (n7_)?NonPositive, (n8_)?Positive, (n9_)?NonPositive, (n10_)?Positive, 
    (n11_)?Positive, (n12_)?NonPositive, (n13_)?Positive, (n14_)?Positive] /; 
   n10 == 1 && n11 == 1 && n12 == 0 && n13 == 1 && n14 == 1 && n2 == 0 && 
    n3 == 0 && n4 == 0 && n5 == 0 && n6 == 1 && n7 == 0 && n8 == 1 && 
    n9 == 0 && n1 != 0 -> 
  ((-8 + 4*d)*j[p4, n1, 0, 0, 0, 0, 0, 0, 1, 0, 2, 1, 0, 1, 1])/
    (24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((12 - 4*d + 4*n1)*j[p4, n1, 0, 0, 0, 0, 1, 0, 0, 0, 2, 1, 0, 1, 1])/
    (24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((-30 + 12*d - 6*n1)*j[p4, n1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 2, 0, 1, 1])/
    (24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((12 - 4*d + 4*n1)*j[p4, n1, 0, 0, 0, 0, 1, 0, 1, 0, 2, 1, 0, 0, 1])/
    (24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((14 - 6*d + 2*n1)*j[p4, 1 + n1, -1, 0, 0, 0, 0, 0, 1, 0, 2, 1, 0, 1, 1])/
    (24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((-12 + 4*d - 4*n1)*j[p4, 1 + n1, -1, 0, 0, 0, 1, 0, 0, 0, 2, 1, 0, 1, 1])/
    (24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((-12 + 4*d - 4*n1)*j[p4, 1 + n1, -1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 0, 1, 1])/
    (24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((-12 + 4*d - 4*n1)*j[p4, 1 + n1, -1, 0, 0, 0, 1, 0, 1, 0, 2, 1, 0, 0, 1])/
    (24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   (3*j[p4, 1 + n1, -1, 0, 0, 0, 1, 0, 2, 0, 1, 0, 0, 1, 1])/
    (-3 + 2*d + n1) + ((-6 + 3*d)*j[p4, 1 + n1, -1, 0, 0, 0, 1, 0, 2, 0, 1, 
      1, 0, 0, 1])/(24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((-4 + 2*d)*j[p4, 1 + n1, -1, 0, 0, 0, 2, 0, 0, 0, 1, 1, 0, 1, 1])/
    (24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((8 - 2*d + 4*n1)*j[p4, 1 + n1, 0, -1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 2])/
    (24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((6 - 2*d + 2*n1)*j[p4, 1 + n1, 0, -1, 0, 0, 0, 0, 1, 0, 2, 1, 0, 1, 1])/
    (24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((8 - 2*d + 4*n1)*j[p4, 1 + n1, 0, -1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 2])/
    (24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((8 - 2*d + 4*n1)*j[p4, 1 + n1, 0, -1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    (24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((-12 + 4*d - 4*n1)*j[p4, 1 + n1, 0, -1, 0, 0, 1, 0, 1, 0, 2, 0, 0, 1, 1])/
    (24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((-4 + 2*d)*j[p4, 1 + n1, 0, -1, 0, 0, 2, 0, 0, 0, 1, 1, 0, 1, 1])/
    (24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((-8 + 2*d - 4*n1)*j[p4, 1 + n1, 0, 0, -1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 2])/
    (24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((-8 + 2*d - 4*n1)*j[p4, 1 + n1, 0, 0, -1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 2])/
    (24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((-8 + 2*d - 4*n1)*j[p4, 1 + n1, 0, 0, -1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 2])/
    (24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((4 - 2*d)*j[p4, 1 + n1, 0, 0, -1, 0, 2, 0, 0, 0, 1, 1, 0, 1, 1])/
    (24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((-20 + 8*d - 4*n1)*j[p4, 1 + n1, 0, 0, -1, 0, 2, 0, 1, 0, 0, 1, 0, 1, 1])/
    (24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((4 - 2*d)*j[p4, 1 + n1, 0, 0, -1, 0, 2, 0, 1, 0, 1, 1, 0, 0, 1])/
    (24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((4 - 2*d)*j[p4, 1 + n1, 0, 0, -1, 0, 2, 0, 1, 0, 1, 1, 0, 1, 0])/
    (24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((-14 + 6*d - 2*n1)*j[p4, 1 + n1, 0, 0, 0, 0, 0, -1, 1, 0, 2, 1, 0, 1, 1])/
    (24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((-2 - 2*n1)*j[p4, 1 + n1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1])/
    (-24 + 25*d - 6*d^2 + 2*n1 + d*n1 + 2*n1^2) + 
   ((6 - 2*d + 2*n1)*j[p4, 1 + n1, 0, 0, 0, 0, 0, 0, 1, 0, 2, 1, -1, 1, 1])/
    (24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((-6 + 2*d - 2*n1)*j[p4, 1 + n1, 0, 0, 0, 0, 0, 0, 1, 0, 2, 1, 0, 1, 1])/
    (24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((30 - 12*d + 6*n1)*j[p4, 1 + n1, 0, 0, 0, 0, 1, -1, 0, 0, 1, 2, 0, 1, 1])/
    (24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((12 - 4*d + 4*n1)*j[p4, 1 + n1, 0, 0, 0, 0, 1, -1, 0, 0, 2, 1, 0, 1, 1])/
    (24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((12 - 4*d + 4*n1)*j[p4, 1 + n1, 0, 0, 0, 0, 1, -1, 1, 0, 2, 0, 0, 1, 1])/
    (24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((12 - 4*d + 4*n1)*j[p4, 1 + n1, 0, 0, 0, 0, 1, -1, 1, 0, 2, 1, 0, 0, 1])/
    (24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) - 
   (3*j[p4, 1 + n1, 0, 0, 0, 0, 1, -1, 2, 0, 1, 0, 0, 1, 1])/
    (-3 + 2*d + n1) + ((6 - 3*d)*j[p4, 1 + n1, 0, 0, 0, 0, 1, -1, 2, 0, 1, 1, 
      0, 0, 1])/(24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((-6 + 2*d - 2*n1)*j[p4, 1 + n1, 0, 0, 0, 0, 1, 0, 0, -1, 2, 1, 0, 1, 1])/
    (24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((-54 + 20*d - 20*n1 + 3*d*n1)*j[p4, 1 + n1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 
      0, 1, 1])/(24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((-4 + 3*d + 2*n1)*j[p4, 1 + n1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 2, -1, 1, 1])/
    (24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((4 - 3*d - 2*n1)*j[p4, 1 + n1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 2, 0, 1, 1])/
    (24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((8 - 4*d)*j[p4, 1 + n1, 0, 0, 0, 0, 1, 0, 1, -1, 2, 0, 0, 1, 1])/
    (24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((-6 + 2*d - 2*n1)*j[p4, 1 + n1, 0, 0, 0, 0, 1, 0, 1, -1, 2, 1, 0, 0, 1])/
    (24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((38 - 14*d + 4*n1 + 3*d*n1)*j[p4, 1 + n1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 
      0, 1, 1])/(24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((-6 + 3*d)*j[p4, 1 + n1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 2, -1, 1, 1])/
    (24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((6 - 3*d)*j[p4, 1 + n1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 2, 0, 1, 1])/
    (24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((-38 + 14*d - 4*n1 - 3*d*n1)*j[p4, 1 + n1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 
      0, 1, 1])/(24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((-4 + 2*d - 4*n1 + 3*d*n1 + 2*n1^2)*j[p4, 1 + n1, 0, 0, 0, 0, 1, 0, 1, 0, 
      1, 1, 0, 0, 1])/(24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((-4 + 2*d)*j[p4, 1 + n1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0])/
    (24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((-4 + d - 2*n1)*j[p4, 1 + n1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1])/
    (-8 + 3*d - 2*n1) + ((-12 + 4*d - 4*n1)*j[p4, 1 + n1, 0, 0, 0, 0, 1, 0, 
      1, 0, 2, 0, -1, 1, 1])/(24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((12 - 4*d + 4*n1)*j[p4, 1 + n1, 0, 0, 0, 0, 1, 0, 1, 0, 2, 0, 0, 1, 1])/
    (24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((4 - 2*d)*j[p4, 1 + n1, 0, 0, 0, 0, 2, -1, 0, 0, 1, 1, 0, 1, 1])/
    (24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((20 - 8*d + 4*n1)*j[p4, 1 + n1, 0, 0, 0, 0, 2, 0, 0, -1, 1, 1, 0, 1, 1])/
    (24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((-4 + 2*d)*j[p4, 1 + n1, 0, 0, 0, 0, 2, 0, 0, 0, 1, 1, -1, 1, 1])/
    (24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((-6 + 3*d - 6*n1 + 3*d*n1)*j[p4, 2 + n1, -1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 
      0, 0, 1])/(24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((6 - 3*d + 6*n1 - 3*d*n1)*j[p4, 2 + n1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 
      1, 1])/(24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((6 - 3*d + 6*n1 - 3*d*n1)*j[p4, 2 + n1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 
      1, 1])/(24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2) + 
   ((-6 + 3*d - 6*n1 + 3*d*n1)*j[p4, 2 + n1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 
      1, 1])/(24 - 25*d + 6*d^2 - 2*n1 - d*n1 - 2*n1^2)}
